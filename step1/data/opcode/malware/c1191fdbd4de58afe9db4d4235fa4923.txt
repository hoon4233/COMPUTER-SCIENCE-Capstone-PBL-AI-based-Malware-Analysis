and
add
add
add
add
add
push
add
add
add
inc
add
push
pop
dec
add
sub
or
adc
add
sub
add
add
add
add
sub
add
add
add
inc
sub
pop
or
sub
add
add
adc
add
add
add
sub
add
or
sub
adc
add
test
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
sub
add
add
add
outs
push
add
or
add
add
add
outs
pop
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
sbb
add
sbb
or
push
add
add
add
push
pop
add
add
add
push
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
add
push
jae
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
add
add
and
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
dec
add
add
push
add
add
add
or
add
or
add
add
add
outs
daa
add
or
add
add
add
aaa
add
jo
sub
add
add
jnp
add
add
inc
add
jo
sub
add
add
jnp
add
add
outs
sub
add
add
jnp
add
add
xor
add
or
add
add
add
arpl
add
sub
add
add
jnp
add
add
ins
add
jo
sub
add
add
jnp
add
add
outs
sub
add
add
jnp
add
add
adc
add
outs
sub
add
add
and
add
inc
and
add
jae
add
or
sub
add
sub
add
or
add
dec
add
add
push
add
add
add
or
das
add
or
add
xor
add
add
add
add
xor
add
add
push
sub
add
or
add
pop
add
add
jp
add
jae
add
or
add
or
add
sub
add
add
and
add
and
add
jae
add
or
add
or
add
add
jo
and
add
add
push
sub
add
or
add
sub
add
or
add
sub
add
or
add
add
jo
cmp
add
add
add
push
add
add
jae
add
or
cmp
add
add
jnp
add
add
cmp
add
add
push
sub
sub
adc
add
add
sub
add
or
add
sub
add
push
add
sub
add
xor
sahf
add
add
add
adc
add
das
add
push
outs
aas
add
or
sub
add
inc
add
or
add
jb
add
jo
inc
add
or
inc
add
or
inc
or
sub
add
add
inc
add
or
lea
add
add
add
jo
or
push
mov
add
add
daa
add
jnp
add
add
inc
add
or
lea
add
add
add
jo
or
push
mov
add
add
adc
sub
add
or
sub
add
push
add
add
outs
adc
add
add
add
add
add
add
add
or
sldt
add
adc
add
jle
add
add
add
push
adc
add
call
sbb
add
pop
sbb
inc
add
or
pop
sbb
inc
add
or
push
or
add
fiadd
add
pop
pop
jae
add
or
jb
add
jo
dec
add
or
add
jo
dec
add
or
jb
add
jo
or
or
add
add
jo
sldt
add
pop
add
jo
adc
add
jle
add
add
dec
add
or
pop
jle
add
add
dec
add
or
sub
add
adc
add
jle
add
add
dec
add
or
jle
add
add
dec
add
or
sub
add
add
dec
add
or
add
adc
lea
add
add
add
jo
or
sub
add
mov
add
jo
or
sub
add
mov
add
jo
or
sub
add
mov
add
or
add
jo
or
sub
add
mov
cmps
add
jo
or
or
dec
add
or
or
pop
or
dec
add
or
popf
add
pop
push
sub
add
mov
inc
pop
adc
dec
add
or
lock
add
or
dec
add
or
add
bound
adc
and
add
sub
add
or
add
sub
add
push
add
sub
adc
add
repnz
add
add
adc
add
sub
add
or
add
sub
add
add
push
sub
add
or
add
sub
add
or
add
pop
add
push
add
jnp
add
add
jge
dec
add
or
add
add
add
outs
push
add
or
add
add
add
rol
add
cmp
add
add
jnp
add
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
sub
add
push
push
inc
or
sub
add
add
or
add
add
sub
add
xor
add
add
adc
jle
add
add
dec
pop
add
dec
add
or
push
sub
add
push
inc
or
sub
sub
push
jb
pop
add
push
add
or
push
or
add
sub
add
sbb
add
data16
add
add
adc
add
or
sub
add
push
outs
aas
add
or
sub
add
inc
add
or
add
add
add
inc
or
cmp
jb
add
jo
inc
add
or
push
add
or
push
pop
pop
or
adc
sub
add
or
movlps
(bad)
push
add
add
outs
adc
add
add
add
fiadd
add
add
add
add
add
add
add
dec
add
add
add
add
add
pop
pop
add
adc
add
and
add
pop
add
adc
add
push
add
or
push
and
or
add
add
pusha
outs
push
add
or
push
or
add
sub
add
outs
pop
add
or
add
pop
add
pop
add
or
sub
xor
mov
add
adc
jle
add
add
add
add
add
push
jle
add
add
pop
add
or
pop
add
inc
add
or
add
or
jle
add
add
pop
and
add
and
add
outs
pop
add
or
pop
inc
or
sub
jnp
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
pop
cmp
and
add
add
sbb
add
jmp
add
adc
add
jnp
add
add
pop
add
or
pop
add
pop
add
or
inc
or
sub
sub
add
pop
add
or
add
add
add
outs
pop
add
or
add
add
add
pusha
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
sub
add
outs
bound
add
add
jnp
add
add
in
pop
add
cmp
add
add
jb
or
jo
xchg
or
jo
arpl
add
es
add
jo
xor
add
add
and
add
add
sub
add
add
add
add
or
add
or
add
add
add
test
cmp
add
add
jnp
add
add
outs
push
add
or
add
add
add
sub
add
outs
bound
add
add
add
add
add
sub
add
add
add
add
add
loope
add
adc
add
adc
add
or
add
add
add
push
or
add
add
or
sub
xor
mov
add
adc
jle
add
add
inc
push
inc
or
jle
add
add
pop
and
add
and
add
cmp
or
add
add
cmp
or
jnp
add
add
mov
add
jb
or
jo
mov
add
sub
add
outs
cmp
add
add
sub
pop
cmp
and
add
call
aas
jle
add
add
sub
add
imul
add
mov
add
jb
or
jo
push
cmp
add
add
add
add
pop
and
add
sub
add
push
add
sub
adc
add
sub
add
add
add
add
sub
add
add
add
inc
sub
pop
or
sub
and
add
adc
add
add
add
sub
add
or
sub
adc
pop
add
add
adc
add
add
or
add
add
add
push
add
jae
add
or
add
add
or
add
add
add
add
add
ins
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
ins
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
sub
add
add
add
jno
add
outs
popa
add
or
add
add
add
pop
or
jo
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
je
add
outs
jne
add
add
jnp
add
add
and
add
or
add
or
add
add
add
and
and
add
add
jnp
add
add
dec
add
add
mov
and
add
or
add
add
add
outs
daa
add
or
add
add
add
aas
or
jo
cmp
add
add
jnp
add
add
inc
or
add
jae
add
or
add
or
add
add
add
outs
ja
add
add
jnp
add
add
push
add
add
iret
add
add
add
or
add
or
add
add
add
lea
add
and
add
add
jnp
add
add
cld
add
add
adc
and
add
or
add
add
add
outs
daa
add
or
add
add
add
js
add
outs
popa
add
or
add
add
add
pop
or
jo
add
add
push
sbb
jae
add
or
add
or
add
add
add
push
add
add
in
add
add
add
or
add
or
add
add
add
stos
or
jo
and
add
add
jnp
add
add
cld
add
add
sub
add
or
add
or
add
add
add
outs
daa
add
or
add
add
add
leave
or
jo
cmp
add
add
jnp
add
add
outs
jns
add
add
jnp
add
add
inc
or
cmp
add
outs
jp
add
add
jnp
add
add
jnp
add
outs
popa
add
or
add
add
add
pop
or
jo
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
push
add
add
je
push
add
or
add
or
add
add
add
xor
and
add
add
jnp
add
add
cld
add
add
and
and
add
or
add
add
add
outs
daa
add
or
add
add
add
or
jo
cmp
add
add
jnp
add
add
outs
jns
add
add
jnp
add
add
inc
push
add
push
jae
add
or
add
or
add
add
add
call
dec
add
or
add
add
add
inc
sldt
push
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
jno
add
outs
popa
add
or
add
add
add
outs
jge
add
add
jnp
add
add
xchg
or
jo
add
jo
pop
sbb
jae
add
or
add
or
add
add
add
je
add
outs
jne
add
add
jnp
add
add
push
add
add
push
add
or
add
or
add
add
add
mov
add
and
add
add
jnp
add
add
cld
add
add
push
and
add
or
add
add
add
outs
daa
add
or
add
add
add
iret
or
jo
cmp
add
add
jnp
add
add
outs
jle
add
add
jnp
add
add
outs
jg
add
add
jnp
add
add
jno
add
outs
popa
add
or
add
add
add
pop
or
jo
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
add
or
add
or
add
add
add
pop
add
add
pop
jae
add
or
add
or
add
add
add
fisttp
add
and
add
add
jnp
add
add
mov
or
or
add
or
add
add
add
outs
daa
add
or
add
add
add
add
jo
cmp
add
add
jnp
add
add
jno
add
outs
popa
add
or
add
add
add
outs
jge
add
add
jnp
add
add
pop
or
jo
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
add
or
add
or
add
add
add
push
add
add
mov
push
add
or
add
or
add
add
add
xor
jo
and
add
add
jnp
add
add
cld
add
add
and
add
or
add
or
add
add
add
outs
daa
add
or
add
add
add
inc
or
jo
cmp
add
add
jnp
add
add
and
add
or
add
add
add
add
add
or
add
add
add
sub
add
outs
bound
add
add
jnp
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
jns
add
and
add
add
jnp
add
add
mov
add
and
add
or
add
or
add
add
add
outs
add
or
add
add
add
outs
add
or
add
add
add
outs
test
add
add
jnp
add
add
outs
push
add
or
add
add
rol
add
jae
add
or
sub
add
sub
add
or
add
jb
or
jo
test
add
je
add
add
add
or
add
outs
xchg
add
add
and
add
and
add
jae
add
or
das
add
or
add
xor
add
add
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
sub
add
or
jnp
add
add
xor
add
add
pop
outs
mov
add
add
push
sub
add
sub
add
or
add
pop
add
add
jp
add
jae
add
or
add
or
add
sub
add
add
and
add
and
add
jae
add
or
add
or
add
or
jo
and
add
add
push
sub
add
or
add
sub
add
or
add
inc
or
add
jae
add
or
mov
add
add
add
push
pop
add
push
jae
add
or
cmp
add
add
jnp
add
add
cmp
add
add
push
sub
add
mov
add
add
add
xor
add
add
add
add
push
inc
add
add
pop
add
add
add
add
and
add
adc
add
add
fimul
add
adc
add
add
fiadd
add
or
adc
add
add
add
add
add
adc
add
add
add
and
or
add
add
xor
add
add
add
add
adc
jle
add
add
inc
push
inc
or
sub
sub
add
jle
add
add
lea
add
sub
add
or
adc
add
add
xor
add
add
add
add
adc
jle
add
or
or
jo
outs
pop
add
or
adc
add
inc
or
sub
add
lea
add
add
add
or
sub
add
xor
add
add
add
add
adc
jle
add
or
or
jo
outs
pop
add
or
adc
add
inc
or
sub
add
lea
add
push
outs
xchg
add
or
sub
add
add
or
add
add
push
push
push
sbb
push
add
push
sub
adc
or
sub
xor
add
add
add
add
adc
add
add
add
add
inc
sub
pop
or
sub
xor
add
adc
add
add
add
sub
add
or
sub
add
add
mov
add
add
add
add
or
add
add
add
add
add
ins
add
or
add
add
sub
add
add
add
outs
push
add
or
add
add
add
inc
sbb
add
jae
add
or
add
or
add
add
rol
add
jae
add
or
sub
add
sub
add
or
add
cmp
cmp
and
das
add
or
add
sub
add
or
add
or
add
or
add
or
add
sub
sub
add
add
add
or
add
sub
add
push
add
jnp
add
add
sbb
add
dec
add
or
add
add
add
outs
push
add
or
add
add
xor
add
add
add
add
adc
jle
add
add
inc
or
sub
and
add
or
sub
adc
add
sbb
jae
add
push
add
add
or
sub
add
add
push
add
push
add
xchg
add
or
adc
add
sbb
add
add
add
add
add
or
add
or
jnp
add
add
cwde
add
or
sub
push
sub
adc
add
fld
add
sldt
adc
add
inc
push
inc
adc
adc
sub
add
push
sub
cmp
adc
add
pop
adc
cmp
add
add
add
inc
push
inc
adc
adc
cmp
add
or
or
add
or
add
sub
inc
adc
adc
cmp
add
inc
add
or
inc
adc
adc
sub
jae
add
push
or
add
or
add
popf
add
or
add
or
add
add
sub
inc
inc
add
push
jae
add
or
add
add
adc
add
inc
or
sub
push
pop
pop
or
pop
sub
push
pop
inc
add
adc
adc
sub
add
sub
pop
adc
adc
sub
add
or
add
add
pop
inc
push
inc
adc
adc
sub
add
add
or
pop
adc
mov
add
add
add
inc
adc
adc
sub
add
or
cmp
adc
add
add
adc
add
inc
adc
adc
sub
inc
add
or
add
add
lea
add
sub
add
adc
add
adc
add
add
movs
add
or
add
add
pop
add
or
inc
adc
adc
sub
movs
add
or
add
or
inc
adc
adc
sub
jle
add
add
sub
add
push
push
inc
adc
adc
sub
pop
sub
add
push
add
movs
add
or
or
or
add
or
push
adc
push
sub
push
sub
add
add
xor
add
add
adc
sub
sub
add
push
inc
or
sub
and
sub
push
outs
sahf
add
or
dec
add
or
sub
add
cmps
add
or
pop
or
add
sub
add
adc
add
adc
add
adc
sub
push
add
add
test
sub
push
sub
add
sbb
add
sbb
add
adc
add
add
add
add
inc
push
inc
adc
push
sub
jle
add
add
adc
jae
add
or
add
add
adc
add
stos
add
or
add
or
adc
adc
add
stos
add
or
add
or
adc
adc
add
lods
add
or
adc
add
outs
aas
add
or
push
sub
add
or
add
pop
sub
or
inc
adc
add
pop
sub
add
fiadd
add
add
push
sub
add
adc
fimul
adc
(bad)
push
add
add
outs
adc
add
add
add
movs
add
or
stos
add
or
or
add
or
push
sub
scas
add
or
or
add
or
add
or
add
adc
adc
add
add
or
add
or
fadd
or
sub
add
push
es
or
push
sub
fadd
sub
xor
add
add
xchg
add
add
imul
add
add
add
fld
adc
add
add
add
add
or
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
and
add
sub
or
add
xor
add
push
add
mov
add
sub
add
xchg
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
sub
inc
or
sub
or
add
add
push
add
outs
mov
add
jae
add
or
push
xor
add
jle
add
add
sub
pop
sub
adc
add
or
add
adc
add
add
add
add
sub
push
sub
add
cmp
add
adc
add
and
add
adc
sub
add
push
jb
push
add
cmp
add
mov
push
je
add
add
sub
pop
sub
add
adc
add
sbb
add
push
add
adc
sub
add
push
jb
push
add
cmp
add
mov
sub
push
sub
add
xor
add
add
add
sub
add
push
jb
push
add
cmp
add
mov
push
je
add
add
sub
pop
sub
add
adc
add
sbb
add
push
add
adc
sub
add
push
jb
push
add
cmp
add
mov
sub
push
sub
add
xor
add
add
pop
add
adc
sub
add
push
jae
add
or
sub
add
push
or
jb
add
jo
sub
add
push
add
add
add
inc
add
or
jle
add
add
add
add
or
cmp
add
sub
add
add
xor
add
add
add
adc
jae
add
or
jle
add
add
inc
add
or
inc
or
add
add
add
mov
add
adc
adc
pop
outs
lods
add
or
add
add
adc
inc
push
or
add
sub
xor
add
add
adc
jle
add
add
jnp
add
dec
add
or
push
sub
or
sub
add
es
jb
push
add
dec
add
or
jae
add
or
add
jb
push
add
rol
or
add
adc
adc
add
outs
adc
add
add
add
jb
push
add
dec
add
or
jae
add
or
add
jb
(bad)
jo
rol
or
add
adc
adc
add
outs
adc
add
add
add
or
add
sub
add
sbb
add
add
adc
add
add
add
add
ja
adc
add
add
xor
add
add
add
add
or
add
sub
add
sbb
or
add
or
or
pop
outs
ret
or
add
add
outs
les
add
adc
pop
adc
lds
add
or
push
pop
outs
mov
or
add
or
add
add
mov
adc
adc
push
add
adc
add
add
add
jb
add
jo
enter
es
or
add
sub
add
add
add
add
aaa
add
pop
add
add
add
adc
add
dec
add
add
add
adc
rol
add
outs
rol
add
add
add
add
lar
add
add
(bad)
inc
push
inc
sub
pop
or
sub
inc
add
add
or
pop
push
jae
add
push
or
add
add
add
inc
add
add
or
add
sub
add
xor
add
add
add
add
add
inc
add
push
or
add
sub
sbb
add
nop
add
add
jnp
add
add
or
or
sbb
add
pop
cmp
add
add
add
add
adc
add
add
add
or
add
add
jnp
add
add
jnp
add
add
rol
add
add
and
add
add
add
add
add
aam
add
jge
add
add
add
jnp
add
add
aad
add
adc
adc
adc
jnp
add
add
outs
rol
add
add
adc
adc
inc
push
adc
sub
or
sub
add
or
outs
xlat
add
or
add
add
add
add
add
add
add
fadd
add
jge
add
add
ficom
or
sub
add
or
outs
xlat
add
or
add
add
add
add
add
inc
push
inc
adc
adc
sub
add
jge
add
add
add
add
add
dec
add
add
push
jge
add
add
inc
add
jnp
add
add
jnp
add
add
jge
add
add
add
jnp
add
add
inc
add
add
sbb
add
add
or
pop
add
jge
add
add
add
jnp
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
imul
push
sub
add
push
add
add
add
add
fld
add
push
inc
adc
adc
cmp
(bad)
(bad)
inc
push
or
or
sub
add
add
add
sub
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
test
add
test
add
or
add
add
add
adc
add
or
add
push
add
adc
jnp
add
add
sub
push
sub
jae
add
or
add
xor
add
add
add
add
adc
jnp
add
add
or
pop
inc
add
add
add
add
add
add
sub
add
add
pop
add
dec
add
push
add
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
sub
add
add
add
sub
add
or
add
or
add
add
and
adc
add
add
xor
add
add
adc
(bad)
jae
add
push
or
add
add
add
or
add
sub
sub
add
add
or
add
fiadd
add
sub
adc
add
or
add
and
add
add
add
or
sub
push
sub
adc
add
or
add
and
add
add
add
or
sub
push
sub
adc
add
pop
add
add
add
adc
add
or
push
jb
(bad)
jo
loopne
add
es
add
add
or
loope
add
es
jb
(bad)
jo
loopne
add
es
add
add
or
loope
add
es
jb
(bad)
jo
loopne
add
es
outs
sahf
add
or
sub
pop
sub
add
adc
add
inc
add
add
add
add
add
sbb
push
sub
sub
add
or
jnp
add
or
jnp
add
or
add
or
sub
add
or
jnp
add
or
jnp
add
or
add
or
add
or
add
sub
xor
add
add
add
xor
push
movs
push
pop
sub
add
or
jnp
add
or
add
or
and
push
push
movs
push
pop
sub
add
or
jnp
add
or
add
or
push
or
add
sub
sub
add
add
or
add
jmp
adc
add
or
add
and
add
add
add
or
sub
push
sub
adc
add
or
add
and
add
add
add
or
sub
push
sub
adc
add
pop
add
add
add
adc
add
or
push
jb
(bad)
jo
loopne
add
es
add
add
or
loope
add
es
jb
(bad)
jo
loopne
add
es
add
add
or
loope
add
es
jb
(bad)
jo
loopne
add
es
outs
sahf
add
or
sub
pop
sub
add
adc
add
inc
add
add
add
adc
jne
add
sbb
push
sub
sub
add
or
jnp
add
or
jnp
add
or
add
or
sub
add
or
jnp
add
or
jnp
add
or
add
or
add
or
add
sub
xor
add
add
add
add
sub
movs
push
pop
sub
add
or
jnp
add
or
add
or
and
push
push
movs
push
pop
sub
add
or
jnp
add
or
add
or
push
or
add
sub
add
xchg
add
or
add
adc
add
or
add
daa
add
adc
jnp
add
add
sub
push
sub
adc
add
or
add
sub
add
add
jae
add
or
sub
push
sub
xor
add
add
add
add
adc
outs
jmp
add
add
add
or
add
or
sub
push
sub
add
xor
add
add
add
add
adc
outs
jmp
add
or
add
sub
adc
add
adc
add
sub
add
add
jae
add
or
add
or
sub
push
sub
add
adc
add
sbb
add
add
add
add
add
or
add
or
adc
or
add
sub
xor
add
add
add
add
adc
outs
repnz
or
sub
push
sub
sbb
add
add
add
adc
add
push
or
add
push
add
add
add
sub
add
push
pop
inc
pop
add
push
jae
add
or
add
add
adc
push
cmp
add
jae
add
or
sub
jle
add
add
add
add
jle
add
add
adc
push
cmp
add
jae
add
or
sub
jle
add
add
add
aas
add
add
adc
push
cmp
add
jae
add
or
sub
jle
add
add
push
add
sub
add
add
adc
push
cmp
add
jae
add
or
sub
jle
add
add
pop
add
sub
add
add
adc
push
cmp
sti
add
or
sub
jle
add
add
or
add
jle
add
add
adc
push
add
push
jae
add
or
sub
jle
add
add
or
add
outs
leave
add
or
das
or
add
or
add
push
add
xor
inc
or
jle
add
add
outs
lods
add
or
add
fiadd
add
add
outs
retf
add
or
adc
adc
add
outs
adc
add
add
add
sub
add
add
add
add
sub
add
add
inc
cmp
add
add
xor
add
add
sub
add
add
sub
add
push
outs
aas
add
or
sub
add
inc
add
or
add
push
add
inc
add
or
pop
add
add
push
add
sub
or
add
add
add
add
add
inc
add
or
movlps
(bad)
push
add
add
outs
adc
add
add
add
add
add
push
add
or
sub
add
add
add
add
xor
add
add
or
sldt
add
add
add
add
add
add
pop
push
add
xor
lods
add
add
add
add
jle
add
add
inc
or
sub
add
add
outs
std
add
or
(bad)
jo
outs
std
add
or
inc
sub
push
or
sub
je
inc
add
or
push
jb
(bad)
jo
inc
add
outs
add
add
add
pop
adc
and
add
add
add
outs
add
add
add
add
add
inc
add
or
aaa
add
push
add
ficom
push
adc
add
sub
add
or
fadd
add
push
add
or
pop
add
add
push
add
or
add
push
add
or
add
add
pop
sub
add
add
add
add
cmp
cmp
add
add
add
add
add
add
xchg
add
lahf
add
inc
add
add
add
add
add
add
add
add
pop
push
add
xor
xchg
add
sub
add
add
add
or
sub
add
add
or
pop
outs
add
add
or
add
or
add
jb
(bad)
jo
inc
add
outs
add
add
add
pop
adc
and
add
add
add
outs
add
add
add
add
sub
add
push
add
ficom
pop
adc
add
sub
add
or
fadd
add
add
add
adc
add
sub
or
add
add
add
add
add
sub
add
add
aaa
pop
add
add
add
add
add
outs
outs
add
add
add
add
jg
add
sbb
add
lahf
add
add
add
adc
and
add
add
or
sbb
add
or
add
jae
add
or
add
add
or
jae
add
or
push
push
mov
pop
add
or
add
add
inc
adc
or
push
adc
or
add
add
adc
inc
push
inc
adc
add
adc
adc
add
add
or
add
or
fadd
ficom
or
add
add
or
add
or
fadd
ficom
pop
adc
add
add
pop
outs
adc
add
add
add
add
sub
add
add
add
popa
add
add
add
add
sbb
pop
jbe
adc
add
add
add
ja
add
add
add
sbb
add
lahf
add
add
add
adc
and
add
add
or
sbb
add
or
add
jae
add
or
add
add
or
jae
add
or
push
push
mov
pop
add
or
add
add
inc
adc
or
push
adc
or
add
add
adc
inc
push
inc
adc
add
adc
adc
add
add
or
add
or
fadd
ficom
or
add
add
or
add
or
fadd
ficom
pop
adc
add
add
pop
outs
adc
add
add
add
add
sub
add
add
add
popa
add
add
add
add
sbb
pop
jbe
adc
add
add
add
ja
add
add
add
jle
adc
add
mov
add
dec
add
or
jae
add
or
sub
xor
das
add
add
add
mov
add
add
push
call
jae
add
push
sub
add
or
add
add
add
sub
add
add
add
add
daa
sub
add
lea
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
cmp
sbb
add
add
add
sub
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
xchg
or
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
jmp
add
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
outs
outs
ins
add
add
nop
add
pop
add
add
xor
xor
add
add
add
lods
mov
add
add
add
push
add
add
add
(bad)
fild
inc
add
add
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
pop
pop
or
or
pop
pop
or
or
or
or
or
fild
inc
add
add
push
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
push
add
adc
add
add
les
sbb
add
add
add
add
add
or
les
popa
adc
add
add
add
push
add
push
sysret
add
add
add
and
adc
push
or
push
popa
jno
and
adc
adc
jae
mov
pop
and
je
xchg
mov
lock
icebp
sbb
repnz
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
and
add
adc
push
and
inc
adc
push
and
inc
adc
fiadd
or
add
add
add
add
add
in
lds
or
jmp
cmp
adc
lods
adc
outs
lock
loope
sbb
sar
fwait
xor
in
dec
xchg
scas
mov
cmps
cmp
push
leave
sub
in
cli
lods
arpl
pop
pop
outs
clc
jne
push
fcom
mov
in
loope
and
fistp
and
in
in
mov
adc
pushf
clc
mov
daa
scas
ins
cmps
retf
leave
cmps
mov
mov
cwde
lea
mov
add
movs
inc
sti
in
outs
adc
sub
mov
sbb
pop
xchg
stc
and
cmp
aam
push
push
jle
or
fisub
rcr
fsubp
adc
sbb
xchg
push
push
cmp
adc
imul
jge
add
lods
xchg
ins
(bad)
imul
mov
sub
pop
xor
cmps
test
into
sbb
test
inc
add
imul
fnclex
mov
xchg
cld
xchg
rcl
ja
inc
test
sbb
pushf
xor
add
stos
cmp
mov
jle
ins
pop
in
or
xchg
xchg
sub
mov
pop
mov
cmp
xchg
les
cmc
rcl
push
in
mov
and
jne
xor
mov
push
mov
mov
arpl
fmul
cmp
push
push
sahf
and
movs
jl
in
pop
loop
arpl
test
rol
cmp
call
lock
lock
mov
movs
out
jb
(bad)
div
call
jmp
ror
retf
enter
arpl
test
add
mov
mov
bt
icebp
xor
cmc
ins
test
xlat
in
gs
jge
addr16
pop
mov
and
fs
adc
pop
and
cmp
mov
sbb
iret
shr
sar
repnz
out
out
and
mov
(bad)
bound
inc
xchg
inc
aad
loopne
xchg
mov
cld
xchg
sub
(bad)
outs
leave
mov
sub
aas
jae
push
jae
out
repnz
xchg
adc
lock
aas
and
sub
xor
arpl
cmp
cmps
(bad)
repnz
aas
and
out
hlt
(bad)
aam
sub
(bad)
adc
cs
sub
mov
bound
xor
and
hlt
xchg
in
fwait
jmp
mov
movs
ins
rcr
(bad)
pushf
rcl
pop
jp
mov
mov
out
fild
xor
or
rcl
stos
sub
dec
sbb
xchg
cld
push
in
iret
leave
jns
inc
lahf
(bad)
mov
sahf
sub
dec
or
mov
repz
add
add
pusha
sbb
sar
fstp
dec
mov
aas
lds
sbb
inc
sahf
cmp
clc
pop
sub
aaa
lock
sub
aas
pop
xchg
in
push
or
fs
clc
fwait
xor
ins
jne
cmp
ror
aam
push
mov
cmp
lea
cwde
movs
lds
mov
fcmovu
stos
(bad)
bound
dec
mov
jno
push
pop
or
test
xchg
dec
shl
pop
add
out
push
mul
add
addr16
ret
lds
jl
(bad)
bnd
iret
mov
fmul
fldz
aaa
rol
xor
repnz
out
test
(bad)
inc
ss
mov
xchg
mov
jle
fcmove
aam
jmp
cli
sub
je
gs
jbe
inc
stos
ds
aas
jne
ins
push
sub
xchg
out
adc
mov
loopne
push
ffreep
je
xor
dec
lahf
and
daa
test
stc
sub
push
xchg
push
mov
ins
(bad)
sbb
mov
les
xchg
jl
adc
cmc
mov
xor
pop
retf
retf
jp
fadd
ret
ins
and
adc
lds
(bad)
loopne
adc
mov
xor
jbe
inc
scas
jns
pop
jl
mov
(bad)
fcom
mov
idiv
fcom
rol
mov
sbb
push
shl
sbb
push
enter
cmp
xchg
dec
lahf
ror
shr
mov
in
popa
mov
cmp
mov
adc
push
jle
(bad)
cs
sbb
xor
mov
cmp
inc
shr
jle
xlat
dec
mov
shl
daa
pop
xchg
jle
sub
rcl
fcomp
mov
sub
jne
sahf
xchg
stc
sub
jle
xchg
push
ret
add
add
cmps
stos
stc
jle
je
(bad)
repnz
jmp
test
cld
cwde
mov
jmp
pop
xchg
cli
push
pop
stos
sti
and
adc
cwde
jle
xchg
popa
stos
xchg
and
dec
aad
in
shl
push
sahf
iret
inc
sub
ja
inc
xchg
push
es
or
out
outs
add
icebp
inc
jno
mov
jle
movs
pop
pop
ja
push
dec
cmps
adc
dec
cld
xchg
mov
and
popf
jb
(bad)
pop
jae
sub
pop
cmp
xor
mov
lods
mov
loop
adc
dec
rol
imul
xlat
jno
sar
push
and
mov
push
mov
mov
popa
loop
xlat
mov
aam
push
cmp
test
clc
jno
call
(bad)
cld
push
jl
out
in
sbb
pop
out
sub
cmp
push
dec
inc
add
in
push
test
dec
fisub
mov
stos
cmp
outs
push
cmp
arpl
pusha
pop
add
sbb
stos
dec
out
sub
hlt
ja
cs
fdivp
daa
mov
pop
test
push
xchg
js
call
imul
and
les
jmp
jle
sub
dec
in
lods
inc
adc
xacquire
mov
sub
stos
ret
fdivrp
sub
pop
dec
mov
es
fcomi
das
jae
inc
cmc
push
loope
ss
mov
addr16
lods
dec
push
neg
fwait
cld
jb
ds
jnp
jno
inc
cmp
addr16
jnp
inc
inc
jle
fld
cmps
int
mov
jmp
push
xor
sbb
sbb
cwde
or
add
pop
jnp
not
das
jmp
popa
test
popa
aad
xor
jmp
sbb
push
mov
push
mov
xchg
pop
sbb
inc
sub
pop
daa
lds
movs
test
dec
hlt
push
retf
fs
xchg
mov
jmp
xlat
shl
mov
inc
call
out
retf
inc
jno
mov
pop
test
sti
mov
pop
arpl
inc
leave
sbb
outs
jp
dec
cmp
push
es
mov
push
imul
or
pop
xor
xchg
xor
mov
sub
fsub
or
lahf
xchg
cli
test
sub
pusha
ins
push
enter
adc
rcl
jmp
inc
in
inc
daa
inc
jmp
test
mov
cmps
jo
xlat
fiadd
ss
or
(bad)
in
dec
shl
fisttp
inc
test
or
mov
push
js
add
sbb
mov
push
call
rcr
or
cli
sub
add
jge
cmps
pop
dec
sub
movs
or
ret
fstp
mov
ds
jmp
rcr
or
cmps
inc
aad
xor
out
pop
mov
mov
mov
fwait
pushf
cmp
cli
jmp
dec
mov
jnp
jp
sub
xor
fnstenv
sub
inc
xor
fnstsw
sub
ret
bound
push
dec
(bad)
cwde
iret
sti
sahf
movs
nop
fs
nop
mov
adc
inc
push
adc
mov
ins
jp
aad
push
mov
sar
shl
(bad)
hlt
pop
mov
xor
and
cmp
or
sbb
xor
fdivr
retf
test
and
mov
pop
ret
sub
jb
jne
addr16
(bad)
sub
jl
sub
loop
adc
xchg
mov
or
aaa
mov
mov
mov
xor
mov
out
lods
pop
loop
push
and
sub
dec
push
inc
call
pop
sar
imul
fcom
mov
lea
xchg
sub
sbb
fmul
mov
iret
arpl
inc
mov
cs
adc
test
xlat
and
mov
pop
xor
pop
mov
mov
(bad)
push
pop
sub
fld
mov
mov
jmp
pop
inc
stc
xchg
push
icebp
scas
outs
add
pop
fwait
imul
lock
mov
dec
lock
sti
imul
scas
les
jno
push
retf
pop
jne
aas
(bad)
aas
xor
mov
scas
imul
jae
jle
int3
retf
or
add
sub
mov
mov
test
xor
sahf
xchg
mov
mov
sub
push
pop
xchg
and
cmps
push
repz
test
mov
pop
inc
xchg
add
jo
lods
ds
jg
add
cmc
outs
fst
ret
fnstenv
pop
mov
push
retf
inc
dec
mov
mov
sbb
idiv
xor
push
test
inc
pop
pop
test
jmp
sbb
shr
(bad)
neg
pop
xchg
sub
mov
fsub
clc
and
cmp
sub
aaa
add
mov
mov
mov
(bad)
pop
xor
lock
ja
pop
or
ret
pop
cmps
push
jge
ret
adc
xchg
or
test
cmc
jb
test
inc
ja
out
cs
xchg
popa
loop
cmp
ins
ins
xchg
outs
xor
ret
push
aad
jb
push
cmps
push
or
je
sub
(bad)
mov
call
inc
sbb
xor
daa
popf
in
add
pop
in
into
fisub
bound
pop
push
inc
jae
(bad)
stc
test
mov
retf
xor
xor
ins
mov
movs
mov
test
mov
add
nop
pop
jmp
(bad)
sub
ins
inc
inc
jne
pop
(bad)
shl
or
mov
icebp
mov
fisubr
call
pop
sbb
fimul
adc
jns
shl
ss
push
lods
popf
push
mov
lea
out
lods
mov
push
pop
dec
aad
retf
mov
or
pop
mul
aad
push
call
mov
loop
and
push
imul
ret
dec
mov
scas
sub
push
pop
les
xchg
shr
movs
mov
or
jg
and
push
cld
xor
outs
sar
mov
cmp
outs
push
cmp
ret
fcmove
enter
outs
push
retf
pop
adc
pop
(bad)
lods
mov
push
cmps
loope
iret
fs
dec
sbb
mov
rol
xlat
stos
add
das
push
fisubr
pop
sub
ja
adc
fwait
sub
call
pushf
mov
clc
scas
gs
(bad)
fs
clc
je
pop
fnstsw
shl
dec
and
stos
mov
inc
inc
(bad)
sbb
sub
or
int3
fcomp
or
push
pop
out
in
add
sub
fucomi
or
in
test
mov
sbb
mov
pop
jo
ins
fwait
adc
(bad)
jne
(bad)
jmp
neg
adc
cmp
aam
enter
push
jge
scas
mov
(bad)
mov
sbb
jne
in
test
inc
outs
and
mov
in
add
and
xor
repz
inc
jne
stos
rcr
pop
adc
or
add
test
mov
jg
xor
nop
mov
mov
stos
dec
aad
ja
(bad)
cwde
add
xchg
enter
or
add
popa
cdq
add
movs
add
sbb
js
xor
inc
push
lock
ficomp
cs
push
push
xchg
lahf
das
jno
arpl
aaa
popf
rcr
inc
fld
add
shl
scas
bound
xchg
fld
mov
stos
mov
mov
call
sub
xor
pop
out
mov
mov
sub
imul
adc
add
xor
imul
dec
xor
aad
ds
stc
and
adc
sti
stos
xchg
mov
mov
mov
xchg
mov
sub
push
pushf
ins
shl
inc
push
test
inc
in
leave
bound
xor
cld
aad
jl
pop
dec
scas
cld
adc
xchg
int3
jl
rcr
idiv
cmp
pop
(bad)
cli
xchg
mov
movs
xchg
pop
push
jg
xchg
test
mov
das
gs
xchg
fmul
xor
adc
fcomp
call
imul
(bad)
mov
sbb
adc
cli
movs
stc
ins
ins
and
imul
in
pop
push
xchg
mov
and
xchg
inc
xchg
call
inc
je
sbb
test
gs
aad
sbb
repnz
call
(bad)
xor
push
retf
or
add
loop
cwde
mov
test
imul
mov
sub
test
fcmovb
fiadd
lds
sti
test
xor
daa
pop
loop
in
into
(bad)
xor
(bad)
icebp
fwait
lahf
sbb
cs
jp
dec
jmp
inc
(bad)
fist
and
out
jmp
or
or
das
xchg
xor
mov
lea
jnp
jbe
pop
inc
test
xor
shl
iret
adc
push
xor
sbb
dec
and
cld
aad
ret
adc
ja
sti
stos
aas
add
fimul
jno
pop
(bad)
ror
pop
sbb
push
inc
sahf
xor
xchg
lea
out
xchg
inc
or
mov
xor
mov
movs
mov
adc
cmp
inc
js
icebp
(bad)
sti
js
popf
fnstcw
mov
mov
daa
cmova
nop
int3
add
jne
das
push
sub
pop
push
retf
adc
rcr
push
jp
jbe
jnp
adc
xchg
or
fisttp
pop
push
pop
mov
ds
sti
mov
mov
test
jne
inc
jno
jle
jbe
lahf
cmp
jecxz
(bad)
push
movs
bound
out
sbb
pushf
adc
cmps
aam
cld
jno
jge
mov
xor
inc
jne
popf
mov
mov
dec
das
je
ror
popf
sub
ret
mov
or
jecxz
sbb
sbb
push
dec
cmp
popf
inc
enter
xor
and
in
pop
int3
(bad)
mov
push
ds
movs
arpl
fld
sub
xchg
lea
xchg
(bad)
cmp
fcmovu
push
ror
les
movs
add
enter
sbb
adc
sar
sbb
aam
pop
mov
lea
sbb
aaa
pop
sub
cmp
imul
fidivr
push
aaa
clc
add
aas
adc
loop
jae
hlt
inc
frstor
sbb
xchg
cld
xlat
pop
and
in
dec
mov
or
leave
mov
outs
and
cmp
add
jbe
shl
scas
inc
push
mov
fdiv
and
(bad)
ins
sbb
and
fucompp
fwait
sbb
jbe
inc
mov
pop
jbe
and
fwait
xchg
xchg
add
data16
push
outs
sbb
jnp
stos
cwde
cdq
push
adc
retf
adc
inc
push
dec
fisub
push
jb
ins
movs
inc
fucomi
pop
nop
inc
scas
imul
icebp
and
jne
dec
aad
pop
ss
xchg
sub
aaa
mov
adc
xchg
shl
xchg
imul
loop
xor
aaa
mov
mov
sbb
stos
cmp
fstp
mov
jbe
pop
jmp
inc
inc
xor
sbb
ins
push
call
sub
push
and
or
call
mov
outs
mov
xor
(bad)
movs
and
(bad)
adc
movs
mov
jp
or
and
gs
data16
cmps
daa
mov
inc
sbb
add
mov
sub
xchg
lahf
(bad)
push
outs
sahf
cmps
mov
add
call
movs
jle
adc
dec
jo
sub
mov
int3
data16
mov
or
mov
fisttp
out
ss
shl
iret
mov
mov
cs
push
or
in
add
movs
daa
pop
movs
in
dec
push
jl
test
and
adc
xor
add
mov
mov
enter
ret
retf
sub
jmp
movs
xor
faddp
pop
cmp
cmp
or
mov
jb
inc
pop
leave
fild
jbe
repnz
fwait
cli
retf
cmp
or
lahf
xor
sub
mov
dec
jb
push
cmc
xor
add
ds
pop
jl
xor
loope
jmp
push
bound
ja
cs
daa
outs
and
add
push
call
bound
(bad)
push
push
dec
popf
imul
aaa
or
fidivr
into
jp
stc
inc
or
sbb
xor
lods
jne
popf
add
dec
xor
cmp
inc
cdq
lahf
icebp
mov
push
and
mov
lock
push
int
cld
xchg
and
ss
and
(bad)
adc
pop
push
inc
inc
lahf
jmp
test
sbb
data16
pop
mov
or
hlt
push
xchg
cmp
mov
and
iret
jno
fisttp
xor
xor
cmc
inc
xor
into
ds
sbb
or
dec
ins
adc
fisubr
pop
aam
jns
aam
sub
ror
cmp
fcomp
mov
cli
inc
adc
push
int
xor
push
mov
sub
(bad)
jle
pop
mov
mov
mov
jg
sbb
aam
sbb
scas
retf
inc
iret
push
mov
push
jmp
xchg
add
add
fbld
(bad)
aad
cmps
addr16
daa
sar
xor
dec
je
push
push
mov
add
mov
mov
push
lods
mov
mov
or
fistp
add
add
fisub
fcom
je
test
test
add
es
sbb
and
popa
sbb
mov
sub
xor
outs
cmps
aas
push
stos
ficomp
mov
movs
loopne
jg
sbb
daa
push
test
popa
jae
inc
xchg
pop
or
inc
inc
mov
je
and
cmp
jle
test
push
push
jecxz
js
fimul
push
adc
push
or
push
ins
or
nop
fist
ins
pop
pop
jne
push
jge
ror
push
rcr
nop
mov
pop
(bad)
mov
(bad)
adc
shr
ss
out
call
enter
cmps
call
pop
imul
jg
pop
sub
inc
mov
fsubr
sub
sti
mov
das
gs
lds
mov
cmc
mov
mov
sbb
(bad)
pop
pop
outs
push
outs
pop
mov
lock
and
add
or
push
aad
pop
pop
les
sbb
je
sbb
mov
add
jnp
and
mov
push
jmp
jne
or
dec
nop
(bad)
xchg
fwait
push
mov
sub
test
mov
fnstenv
cmps
scas
sbb
or
pop
aas
arpl
push
cmps
stos
(bad)
out
mov
jns
pop
jo
and
xchg
jnp
stc
imul
nop
jmp
in
lods
shl
xor
mov
es
test
dec
mov
aaa
call
ins
add
dec
push
pusha
xor
loop
in
imul
call
ja
add
test
dec
and
ret
push
addr16
push
xor
popa
mov
jne
fs
das
and
aaa
mov
fimul
inc
pop
jno
or
pop
push
jbe
stos
sahf
and
out
stos
jle
rcr
jp
mov
(bad)
aam
aaa
pop
aaa
cmp
jp
pop
adc
leave
aad
cmps
jns
jmp
pusha
push
pop
dec
movs
shr
push
call
or
popf
test
mov
xchg
addr16
mov
scas
xchg
pop
daa
push
inc
or
nop
lea
pop
dec
ficomp
pop
data16
enter
dec
stc
movs
daa
or
clc
mov
mov
sub
add
pshufw
xchg
dec
sbb
mov
repz
lds
in
bound
inc
add
xchg
ss
cmp
lods
inc
and
test
xchg
mov
add
fcomp
fistp
or
jb
je
stc
and
xchg
pop
out
mov
lahf
ss
popf
dec
fiadd
ret
mov
aas
sbb
data16
or
fstp
xchg
int
mov
dec
dec
add
stos
adc
pop
jmp
dec
push
mov
cmps
imul
cmp
xchg
add
add
xchg
mov
imul
rol
mov
push
cwde
call
popa
jb
add
inc
ss
jb
ja
test
add
retf
outs
test
shl
lods
xchg
in
or
aad
ret
dec
ins
adc
mov
retf
mov
pop
je
sahf
das
sbb
dec
pushf
and
aam
test
sbb
add
cmps
js
mov
clc
add
mov
or
adc
inc
jp
mov
cmps
jb
adc
mov
(bad)
rcr
adc
sahf
sub
adc
or
mov
pop
dec
inc
inc
ret
adc
xor
mov
inc
sysexit
mov
push
les
stos
mov
test
xor
imul
pop
cmp
mov
mov
fiadd
fst
add
jp
mov
test
mov
pop
pushf
in
xchg
les
rol
loope
cmp
or
sub
sub
jnp
enter
rcl
fld
nop
(bad)
mov
jg
jne
sahf
fcmovu
out
int
cmc
movs
aad
or
xchg
mov
adc
int3
mov
int
push
sub
pop
sbb
sti
cmp
test
ss
jbe
push
dec
dec
bound
cmp
push
out
sub
test
(bad)
les
ss
pop
mov
sub
push
jo
fldenv
adc
ret
mov
and
loopne
jle
mov
imul
cmp
fs
jns
in
popf
mov
aam
push
leave
ins
sahf
dec
not
popa
xlat
es
jl
mov
pop
cmps
scas
inc
out
pop
dec
and
jae
outs
push
inc
inc
mov
pusha
int
add
imul
cmp
mov
xchg
or
stos
aad
loope
mov
jle
sti
or
test
mov
fucomip
cmps
stos
cmp
ror
int
inc
test
stos
cmps
xchg
dec
mov
or
(bad)
aaa
pop
dec
repnz
dec
mov
aam
add
jmp
lea
fwait
dec
ss
push
xchg
shl
ss
or
mov
movs
dec
pusha
xchg
inc
dec
cmp
sbb
inc
xor
lods
xor
mov
push
mov
mov
mov
cmp
aas
add
jl
adc
mov
movs
inc
xor
pop
jmp
jmp
imul
dec
and
jle
and
cli
stc
sub
test
ss
in
cmp
push
cmp
push
inc
add
inc
cmps
dec
sbb
popa
mov
dec
fcom
test
lock
mov
mov
dec
or
jle
fnclex
mov
mov
jge
push
daa
xchg
rcr
ins
arpl
jnp
push
movs
push
xor
cmp
sub
in
popa
inc
xlat
jmp
dec
sar
push
mov
ins
mov
xchg
push
jae
dec
mov
cmp
or
jo
stc
inc
or
cs
mov
xchg
push
dec
add
ds
adc
dec
xor
loope
sub
retf
es
ds
inc
icebp
ja
cmovl
inc
add
mov
lds
jb
mov
fisttp
mov
mov
bound
xchg
xor
aaa
or
xor
mov
cmp
scas
and
adc
repnz
(bad)
cmp
adc
arpl
mov
or
loopne
pop
xor
cmp
sbb
or
cmp
test
rcr
punpckhwd
outs
aad
add
or
xchg
push
sbb
cmp
sbb
mov
loopne
daa
push
or
cmp
pop
sub
into
pop
neg
scas
dec
sbb
sbb
in
cmp
mov
out
gs
add
pop
aad
out
es
mov
add
mov
jmp
xchg
inc
or
pop
xor
push
test
mov
mov
mov
xchg
xchg
jmp
push
retf
push
pop
movs
pop
pop
and
mov
mov
jecxz
fs
fsub
stos
inc
adc
ins
addr16
loopne
call
jo
sub
imul
dec
and
push
and
push
ins
inc
push
pusha
adc
(bad)
cmp
pop
mov
arpl
pop
test
cld
ds
movs
pop
les
adc
scas
scas
cld
dec
test
ror
jne
dec
pop
popf
neg
adc
popfw
mov
aaa
or
retf
push
push
ds
clc
sub
lods
sahf
sbb
jl
hlt
lods
retf
mov
test
popa
fucomip
test
int
stos
jp
aas
mulps
in
popa
add
mov
out
fnstenv
(bad)
repz
adc
mov
(bad)
hlt
xlat
leave
call
bound
lods
jo
push
ds
retf
sbb
sbb
xchg
dec
push
in
rcr
fist
mov
fstp
jae
fdiv
sub
jae
pop
mov
loopne
or
mov
add
data16
mov
inc
sub
ins
lods
sub
dec
mov
rcr
pop
fidivr
push
jp
jecxz
pop
jmp
out
mov
pop
movs
mov
mov
pop
or
pop
aas
and
in
loopne
and
push
cmp
push
sbb
in
sahf
mov
in
sbb
jbe
fsub
add
xor
push
mov
jmp
jns
xchg
mov
aaa
popa
std
cwde
les
mov
pop
imul
ins
addr16
mov
in
out
mov
cmp
aas
jnp
jmp
xchg
cmp
imul
ss
cs
addr16
pop
push
push
rol
fwait
cmp
and
(bad)
lahf
adc
cs
sbb
retf
mov
fidiv
shl
push
mov
lock
cmp
ret
je
repnz
dec
xor
aaa
cmp
add
cmps
mov
leave
imul
push
jb
movs
mov
fild
dec
xchg
fstp
popa
adc
fisubr
xchg
mov
and
mov
inc
icebp
sbb
mov
dec
xor
hlt
mov
push
outs
inc
ret
or
fsubr
cmc
and
imul
inc
cmps
dec
push
dec
pop
fcom
aaa
sub
loope
mov
sbb
jg
mov
out
outs
out
push
fiadd
mov
aad
ret
rol
sbb
sbb
stos
retw
fmul
outs
mov
or
dec
mov
out
push
loop
sub
jge
retf
mov
jg
push
mov
repz
mov
dec
mov
mov
mov
and
mov
push
es
sbb
test
lods
jmp
std
jbe
out
sub
or
rcr
sub
imul
xchg
sbb
aam
push
lods
mov
je
or
cdq
leave
sbb
pop
xchg
mov
push
(bad)
test
test
and
or
(bad)
shl
sub
shl
arpl
xchg
and
int
inc
push
jmp
ss
cmc
sbb
pop
movs
dec
jl
push
lea
cwde
jo
repz
xchg
es
test
adc
outs
(bad)
mov
add
jns
xchg
mov
shl
jl
add
jmp
cmp
aas
mov
out
fistp
push
jecxz
in
cld
fld
cmp
loope
push
lss
movs
push
dec
ins
movs
scas
(bad)
pusha
jmp
mov
add
out
retf
mov
fwait
push
pop
jmp
sub
les
pushf
inc
jmp
cwde
movs
push
mov
mov
inc
xor
pop
inc
xor
add
xchg
jb
push
std
push
pop
jnp
jmp
mov
jmp
inc
xor
xlat
fisttp
xchg
mov
pop
nop
jb
int
dec
repnz
test
dec
pop
add
cdq
mov
pop
push
inc
add
test
pusha
jnp
jb
xor
jno
sub
repz
repz
into
in
loop
sbb
xchg
cld
or
sbb
sbb
imul
sub
add
mov
mov
test
pop
dec
xchg
dec
add
dec
(bad)
fbstp
stos
and
repnz
and
sbb
jl
test
(bad)
shl
setns
rol
inc
repnz
mov
xchg
loop
retf
mov
sbb
mov
inc
shr
push
mov
retf
repz
lahf
das
int
dec
je
mov
(bad)
push
and
pusha
ss
dec
add
popf
out
jmp
pop
adc
push
jecxz
lods
xchg
stc
and
mov
stc
mov
aad
test
fnstenv
aad
imul
adc
jne
sbb
sub
movs
jg
and
loope
add
dec
mov
out
mov
(bad)
fiadd
or
cs
mov
add
or
pop
push
or
xchg
add
test
jge
pop
dec
aaa
ins
outs
aad
cmps
lahf
jno
test
and
sbb
les
je
mov
pop
sti
test
xor
xor
push
stos
lods
cmps
mov
pop
faddp
data16
push
out
xor
xchg
xchg
(bad)
aam
mov
mov
inc
push
or
or
mov
mov
inc
cmp
add
pop
daa
dec
call
retf
mov
enter
scas
inc
es
movs
pop
xchg
out
pop
movs
lods
push
mov
push
xchg
ins
cmps
inc
arpl
add
ficom
(bad)
arpl
lahf
inc
pushf
cmp
retf
fld
stos
fwait
inc
inc
test
lea
aaa
mov
xchg
std
(bad)
in
cmps
sub
mov
popa
movs
inc
dec
lds
(bad)
js
aaa
test
jle
into
icebp
rep
shl
cmp
jb
(bad)
mov
jne
or
aas
and
movs
repz
jge
and
add
push
sub
imul
push
mov
sbb
or
mov
aad
in
mov
jnp
dec
push
xchg
inc
xlat
nop
push
dec
jp
push
or
pop
and
pop
jbe
cmps
cli
mov
cmc
fsubr
aad
(bad)
xlat
xchg
(bad)
(bad)
sub
mov
xchg
(bad)
popf
mov
pop
mov
mov
rcr
icebp
cmc
(bad)
cs
push
ins
in
lea
sbb
jmp
sub
xchg
xchg
jnp
xchg
fwait
add
or
push
push
inc
push
test
sbb
jno
mov
xchg
out
pushf
not
aas
scas
lds
aam
jg
adc
je
xchg
mov
xchg
sub
sbb
es
aaa
add
xchg
mov
or
pop
popf
aam
adc
sysenter
mov
mov
fistp
inc
cli
and
jne
dec
push
std
push
jmp
inc
scas
(bad)
enter
jno
aas
mov
jecxz
xchg
inc
out
mov
mov
clc
cmc
xchg
lahf
pusha
cwde
sbb
jae
cwde
fild
gs
mov
ror
in
and
mov
dec
mov
mov
cld
pop
xchg
mov
jge
mov
inc
test
cmp
and
dec
cmp
cwde
xchg
pop
pusha
mov
into
cmps
xchg
jno
or
loopne
or
iret
sbb
mov
popa
mov
cld
push
fdivr
pop
pop
push
iret
icebp
jbe
lock
inc
inc
arpl
js
cmps
(bad)
push
push
dec
push
mov
cs
scas
out
sbb
loop
fnsavew
sbb
mov
add
jbe
outs
ja
sbb
(bad)
cmc
push
ins
dec
inc
push
inc
add
xchg
pop
inc
mov
loop
dec
push
ret
lahf
inc
dec
and
xchg
jle
test
inc
sbb
pop
cli
clc
shl
sar
add
dec
pop
test
xchg
sbb
pop
call
sbb
stos
repz
mov
add
dec
ins
push
adc
aaa
sub
jp
(bad)
xchg
ss
xchg
inc
fcomp
aam
mov
out
std
or
rcr
ins
mov
mov
(bad)
sbb
xchg
lock
iret
push
push
xor
fwait
movs
retf
rcr
mov
imul
xchg
cmp
xor
xchg
or
mov
stos
dec
jnp
je
out
xlat
rol
jnp
xchg
push
mov
push
xchg
(bad)
pop
sub
lea
in
jbe
mov
(bad)
mov
(bad)
(bad)
rcr
(bad)
lods
dec
test
mov
add
push
xor
sbb
in
or
imul
pop
ins
and
push
cmp
fbstp
dec
adc
or
dec
sub
mov
test
or
retf
mov
add
push
dec
imul
mov
dec
add
pop
sti
xor
push
and
popa
jnp
dec
call
leave
rcl
adc
dec
inc
stos
rol
mov
adc
sbb
sub
stos
push
call
lds
stos
cmp
jns
push
(bad)
lds
sub
push
mov
jge
sbb
jns
nop
arpl
leave
add
xor
add
mov
icebp
inc
sub
adc
fs
xor
lods
adc
sub
les
int
push
js
xchg
xchg
arpl
pop
repnz
xor
jns
jmp
movs
sub
imul
lds
stc
push
sub
push
add
fisubr
mov
sub
in
out
lods
cmp
jl
ficomp
mov
or
mov
push
dec
xchg
adc
or
jmp
sti
pop
xlat
push
push
xor
mov
xor
mov
push
pop
pop
cld
xchg
pop
pop
push
imul
cs
mov
push
mov
sbb
xor
mov
in
nop
push
pop
mov
ret
mov
cmp
test
outs
jno
pop
mov
or
enter
stos
pop
leave
inc
xadd
lahf
ud1
mov
mov
xchg
dec
cmp
mov
lea
mov
dec
(bad)
push
pop
icebp
xor
jecxz
mov
add
jo
jle
mov
mov
xor
push
lea
aam
pop
add
adc
(bad)
clc
pop
inc
test
jl
call
punpckldq
adc
int
aas
lods
mov
into
imul
mov
ins
cmps
ret
and
mov
cdq
dec
cmps
ret
ins
arpl
mov
test
and
iret
push
and
sahf
es
and
jge
dec
add
mov
rol
and
(bad)
loop
jno
adc
sub
mov
lods
jl
shl
pop
pop
inc
rcr
stos
repnz
inc
cli
add
enter
pop
leave
dec
pop
je
push
cmp
xor
mov
mov
cli
mov
rcr
lahf
or
cmps
jne
int
adc
fld
adc
mov
ins
ja
push
(bad)
push
adc
push
test
mov
lods
cmp
clc
cmps
cmc
cmove
movs
arpl
int
sahf
dec
and
popa
rcl
push
cmps
popf
xor
push
inc
bound
test
ins
mov
add
jae
pop
ret
mov
sub
pop
or
push
daa
mov
push
sub
sbb
icebp
push
fadd
(bad)
mov
add
les
stc
push
inc
dec
mov
test
jb
xchg
cwde
es
fnsave
add
paddd
ror
xchg
xchg
(bad)
retf
or
cmps
es
es
adc
mov
jmp
jle
inc
and
pop
fmul
mov
arpl
pop
xor
sbb
setnp
mov
enter
stos
out
adc
or
push
retf
mov
cmp
adc
cmps
mov
cmp
inc
inc
inc
test
xchg
cmp
retf
push
popa
hlt
jb
mov
mov
push
adc
fwait
loop
call
and
mov
mov
data16
cwde
pop
repz
enter
out
ret
outs
inc
pop
inc
lods
bound
imul
adc
add
fnstcw
lahf
icebp
mov
pop
leave
lea
pop
push
or
lahf
mov
and
or
shl
test
sbb
push
fsubrp
rcr
cmp
call
shl
xchg
loopne
sbb
push
lock
pushf
inc
cmp
xlat
cmp
add
into
cli
fcom
adc
rcr
jg
xor
cmp
jns
out
jg
mov
leave
jae
clc
sbb
xor
cmc
jno
cmps
in
out
pusha
mov
int3
fldcw
fisttp
leave
xchg
inc
ret
jg
push
std
xchg
lds
mov
test
fucomip
jp
ja
out
aas
push
mov
mov
popa
xor
sti
sbb
jecxz
icebp
out
xor
cmp
rol
mov
call
bound
ja
(bad)
add
iret
mov
aas
jae
xor
xor
pop
iret
ins
je
adc
push
ins
mov
ins
mov
cld
call
mov
inc
cli
inc
not
sar
sbb
cli
pop
xor
inc
in
push
xchg
rcl
and
stc
xor
dec
or
repnz
xchg
or
xor
or
div
mov
add
push
jle
mov
sbb
pop
dec
inc
jmp
sbb
sbb
(bad)
cmp
movs
push
inc
sbb
xchg
mov
adc
call
(bad)
js
fnstcw
pop
sub
add
sbb
loopne
jle
out
dec
cmc
nop
inc
call
pop
ins
sub
aam
or
shl
js
adc
bound
stos
iret
stos
mov
push
mov
out
pop
ss
cld
ja
outs
lea
cwde
movs
ins
adc
addr16
out
stos
sti
pop
xchg
mov
or
test
xlat
imul
jmp
shl
jmp
jge
cmps
inc
in
mov
outs
add
adc
sbb
das
pushf
jp
dec
lods
xchg
cmp
ins
loopne
lods
cmp
dec
pop
xor
jnp
jns
in
inc
test
add
sbb
xor
mov
xor
mov
outs
sahf
mov
mov
fnclex
movs
ret
xchg
mov
sub
ss
push
lds
out
and
jg
imul
leave
inc
pop
(bad)
das
or
cmp
push
push
enter
push
pop
das
lds
mov
loopne
jo
or
mov
or
mov
xchg
xor
xchg
inc
pop
pop
shr
das
add
movs
ror
mov
bound
push
movs
lods
push
retf
pop
inc
enter
out
call
inc
cmp
call
mov
cwde
popa
jge
sbb
div
adc
int
int
adc
jo
xadd
mov
jno
int3
jae
sbb
into
add
daa
jo
cld
cmp
push
xchg
cmc
cmp
mov
call
jnp
cmps
or
mov
add
inc
mov
jmp
je
pop
cwde
adc
pop
pusha
aaa
dec
inc
adc
xchg
cmps
scas
aaa
dec
jae
or
mov
rcr
push
jecxz
popf
rol
pop
sub
push
sbb
push
or
hlt
mov
call
cmp
outs
mov
mov
es
(bad)
and
add
nop
push
test
sbb
arpl
push
inc
loop
add
xchg
mov
xchg
inc
mov
lds
or
pop
test
test
mov
sar
dec
shl
inc
es
sub
and
or
cmc
cmp
fsubr
cwde
push
jne
push
lds
mov
icebp
sub
(bad)
push
loopne
sub
push
or
mov
sahf
xchg
(bad)
mov
cmps
jbe
in
dec
inc
jbe
imul
and
sub
and
mov
cmps
mov
movs
xchg
scas
out
add
mov
cli
(bad)
movs
sbb
add
push
stos
sub
js
sub
jne
mov
ins
test
push
test
clc
scas
xor
jns
push
lahf
adc
call
dec
mov
int
lods
cmps
cmp
movs
add
inc
lea
push
ja
xor
repz
repz
es
sub
and
xlat
jno
dec
xchg
in
pop
push
xchg
or
adc
cmp
jle
xor
mov
sbb
mov
cmp
loop
ins
std
adc
cmp
jb
loop
mov
mov
inc
add
das
mov
pop
les
cmp
stos
movs
aad
mov
sahf
(bad)
fwait
icebp
pop
fwait
push
jmp
push
and
sbb
inc
mov
jno
cs
inc
mov
or
cmp
dec
(bad)
mov
daa
cmc
ror
dec
sub
test
mov
cmp
push
arpl
(bad)
adc
cli
jge
sahf
int
dec
je
and
daa
add
dec
sub
test
mov
and
repnz
fs
test
dec
test
adc
cli
and
sbb
mov
jne
test
sub
mov
lahf
adc
inc
int
lea
pop
fwait
repz
jo
mov
inc
and
xchg
fistp
cdq
push
sbb
lds
add
jno
mov
jle
xchg
sub
push
adc
push
push
int
retf
outs
loope
push
and
dec
add
cmp
xchg
adc
int3
ds
mov
sub
int
test
push
cmp
mov
add
imul
push
sbb
mov
xor
bound
outs
cmp
and
and
ins
mov
cmp
int
loop
sar
sahf
jg
stc
(bad)
xchg
cmp
out
loopne
scas
xlat
mov
cmp
movs
cmp
xor
cmps
scas
sahf
xor
imul
stos
dec
ja
push
ret
lea
imul
lds
dec
sbb
arpl
mov
mov
out
inc
fistp
jo
fbstp
jp
call
clc
jmp
add
cli
add
lahf
clc
adc
pushf
or
xlat
jp
push
or
js
or
fdiv
ds
pop
xchg
lahf
cmc
(bad)
bound
out
xchg
mov
aad
mov
ret
cmp
test
aas
ror
enter
push
mov
sub
mov
cmp
mov
xchg
cmps
pop
mov
sub
xlat
dec
loopne
leave
pop
and
lahf
popf
inc
jne
mov
les
aas
or
aas
cmc
cwde
mov
dec
sbb
mov
pop
add
adc
out
sbb
pop
mov
push
mov
add
idiv
jae
pop
pop
xchg
inc
push
jae
pop
imul
sbb
sbb
fcmovu
(bad)
pop
jne
jl
mov
les
(bad)
not
xchg
inc
and
lods
jo
sbb
aaa
(bad)
add
cdq
jo
aas
js
imul
hlt
xor
pop
dec
shr
mov
fsubr
ds
ins
cmp
clc
and
inc
add
outs
adc
aam
push
xchg
inc
dec
or
mov
mov
arpl
icebp
inc
sub
imul
pop
pop
jmp
mov
das
jb
repz
out
stos
mov
mov
add
sub
xor
scas
sub
repz
dec
sbb
mov
pop
push
push
sub
bound
sti
fisttp
xchg
loope
lds
xchg
dec
loope
(bad)
and
push
stc
mov
mov
add
mov
push
fistp
jecxz
call
js
pop
mov
xor
arpl
lahf
scas
outs
scas
in
shl
mov
popa
aad
inc
cs
out
add
dec
adc
movs
fs
sub
and
gs
mov
sahf
in
es
outs
mov
stos
stos
mov
push
mov
(bad)
pop
out
push
inc
cmp
mov
aad
xlat
fldcw
lods
pop
clc
ds
cmp
lods
adc
pop
and
push
ja
sar
in
mov
add
push
imul
adc
not
ret
mov
(bad)
fstp
xchg
hlt
push
test
jo
push
add
test
jp
lods
ds
fmul
mov
and
shl
dec
sti
or
sub
cmp
out
arpl
fmulp
pushf
dec
in
sti
lahf
pop
sbb
adc
(bad)
cmp
pushf
hlt
pop
jne
jle
and
push
push
xchg
or
jge
xchg
mov
jno
aaa
push
cmps
pminub
and
mov
push
mov
push
mov
mov
dec
push
loop
cmp
jmp
inc
xor
ins
stc
inc
inc
mov
lods
mov
jle
leave
dec
add
bound
lods
sbb
neg
pop
inc
cmp
cmp
mov
jbe
add
lods
push
cmc
xor
mov
cmpxchg
das
dec
and
jae
imul
cmp
or
push
and
and
jne
pop
inc
and
xlat
int
ror
dec
jmp
lahf
call
pop
cmp
push
test
sbb
(bad)
sahf
mov
push
in
dec
xchg
stc
fiadd
cmps
inc
outs
adc
(bad)
int
cmp
mov
stos
dec
int
jae
in
jp
mov
push
outs
daa
inc
fnstenv
mov
ror
test
sbb
jae
add
out
(bad)
jmp
je
int3
shl
dec
cmp
jmp
mov
pop
jg
cmp
arpl
pop
or
fwait
jmp
cmps
mov
call
xor
repz
retf
popa
mov
push
bound
outs
sbb
sbb
jg
cdq
ficom
fs
xchg
(bad)
aad
adc
pavgb
adc
fisubr
cmp
in
xchg
mov
or
out
jne
jecxz
jge
or
mov
leave
or
pop
lods
lods
rcl
push
das
aaa
xchg
cmp
outs
bound
leave
mov
pop
inc
popa
popa
sbb
pop
and
in
mov
cdq
pop
pop
imul
clc
push
fldcw
inc
iret
xchg
xlat
pop
push
in
repz
jmp
inc
dec
pop
mov
sub
sar
ret
rep
std
fs
xlat
frstor
outs
lods
js
arpl
mov
xor
add
mov
add
sar
aas
inc
call
or
std
and
mov
add
xchg
out
jo
lock
retf
retf
aaa
cmp
test
adc
and
xor
cmps
xor
ftst
mov
aam
dec
dec
lea
and
jb
cmp
ficomp
pop
jecxz
je
les
push
dec
outs
inc
mov
cs
mov
cmp
icebp
dec
adc
pop
int
pop
mov
stos
sub
retf
jnp
xor
mov
mov
and
sub
add
push
bound
hlt
push
scas
cld
push
stos
fsub
or
jle
loop
mov
push
xchg
not
bound
and
xchg
jmp
push
sar
fldenv
dec
xchg
shl
inc
bnd
jmp
jmp
stc
and
je
dec
mov
inc
out
fld
scas
popa
repnz
jl
test
iret
mov
cvtdq2ps
push
jne
pop
push
push
add
mov
scas
ret
lock
and
or
mov
jp
(bad)
movs
and
(bad)
xor
clc
es
es
test
inc
popa
mov
bound
xchg
push
scas
arpl
sub
mov
cmp
stc
add
mov
xrelease
outs
lahf
int
and
pop
hlt
sub
enter
xchg
iret
sub
mov
sbb
aad
inc
mov
mov
test
add
rol
(bad)
sti
adc
push
mov
pop
idiv
or
call
lahf
adc
scas
xlat
pop
rol
fwait
pop
ins
adc
scas
mov
cmp
add
push
pop
movs
sub
fbstp
dec
mov
fwait
outs
stos
sub
mov
jge
aas
test
loop
cmp
pop
(bad)
or
cmc
xchg
sub
xor
or
cdq
cmp
sbb
and
fiadd
mov
sbb
sti
add
xlat
call
xchg
cmp
popf
out
inc
xchg
std
and
inc
dec
push
push
(bad)
pop
imul
pop
fcmove
out
push
(bad)
call
cmp
push
cmp
dec
mov
pop
hlt
mov
test
adc
fucomi
mov
and
cmc
jge
pop
ficom
mov
add
cli
scas
(bad)
mov
xchg
hlt
fcomp
mov
xchg
ins
sbb
push
in
xor
inc
call
pop
movs
les
mov
fsub
daa
sub
mov
add
test
xchg
xchg
or
add
hlt
jl
aas
out
add
pop
test
cmps
ss
cdq
xchg
jb
jge
leave
aas
shl
hlt
mov
inc
(bad)
mov
adc
into
xor
(bad)
jae
and
xor
mov
jns
test
fwait
std
sar
out
pop
outs
hlt
cmp
pushf
(bad)
clc
mov
sar
cmp
dec
mov
out
bound
push
mul
xchg
data16
inc
repz
pop
push
aam
shl
or
fadd
cmp
mov
cld
pop
aad
mov
mov
adc
push
xor
push
icebp
inc
popf
xchg
cmp
hlt
rol
add
sar
rcr
loopne
xor
lea
mov
pop
mov
sbb
je
(bad)
and
xor
bound
mov
dec
push
pop
repnz
imul
fiadd
mov
xor
fs
add
out
stc
movs
inc
jmp
sti
rcr
ror
pop
xchg
dec
in
outs
outs
mov
(bad)
mov
mov
and
aaa
inc
cwde
retf
or
fsubr
xor
mov
pop
cmp
scas
(bad)
dec
cmps
test
cdq
sbb
(bad)
retf
push
and
jg
mov
pop
(bad)
out
mov
push
sbb
pop
sti
sub
arpl
jmp
xor
(bad)
leave
rcl
sbb
cmp
gs
loopne
ror
jne
adc
out
(bad)
ja
adc
int3
push
mov
dec
ret
das
pminsw
cmp
mov
ret
in
sar
mov
jns
test
iret
mov
dec
push
xor
aaa
sti
xchg
sub
xor
(bad)
push
clc
lea
sub
rcl
retf
or
aaa
fcmovnbe
and
jmp
push
cmp
mov
push
in
ins
jne
pushf
sub
inc
sub
xor
rcr
call
inc
sub
xchg
and
clc
xchg
mov
pop
fmulp
and
and
loope
jle
sub
add
ss
fs
aas
push
repz
mov
cmp
xor
inc
(bad)
mov
in
scas
push
in
pop
mov
shl
mov
cvttps2pi
pop
sbb
jmp
sub
jmp
and
pop
bound
(bad)
and
scas
outs
push
scas
aam
js
push
add
inc
jne
idiv
fistp
inc
mov
js
repz
sub
mov
mov
shl
je
xchg
pop
jae
dec
or
jmp
jae
not
rol
xor
sub
mov
aas
loopne
pop
push
out
sbb
aas
hlt
mov
adc
cli
ins
in
pop
mov
xchg
arpl
movs
outs
pop
cdq
jmp
pop
jge
repnz
shl
cdq
jns
adc
sub
mov
ja
jg
dec
(bad)
add
(bad)
pop
or
xchg
jle
ss
das
sub
push
dec
je
fidiv
sub
aam
lock
jns
jge
sbb
jnp
outs
in
loop
and
mov
pusha
test
xor
test
dec
es
inc
test
test
adc
or
repnz
lahf
sub
pop
fild
call
inc
xchg
mov
sbb
or
or
push
stos
leave
daa
mov
jge
stos
xchg
sub
inc
arpl
scas
sub
adc
bound
add
xchg
pop
clc
(bad)
xchg
and
mov
jmp
cs
(bad)
gs
pop
ins
(bad)
aam
in
cmps
loope
popf
test
and
dec
mov
loope
and
and
ficom
mov
sub
adc
jbe
xor
lods
or
movs
jmp
sub
mov
mov
cmp
and
and
pusha
mov
jp
ins
mov
mov
ins
adc
xor
movs
popa
cmp
cmp
aaa
pop
ins
pop
sub
popa
lea
pop
jbe
sbb
xor
enter
xchg
cli
mov
and
dec
push
xor
shl
inc
and
pop
(bad)
stos
out
sub
inc
fs
int3
or
pop
ins
dec
stos
adc
xchg
pop
push
rcr
aad
pusha
inc
rcl
push
out
fnstsw
(bad)
mov
shl
out
xchg
and
pop
loopne
sbb
repz
out
rol
cmp
xlat
retf
mov
sub
sti
mov
mov
sub
jno
push
xor
or
dec
ret
xor
imul
retf
mov
inc
xor
push
inc
js
jns
fadd
loop
mov
adc
or
xchg
(bad)
mov
imul
adc
push
add
mov
dec
retf
mov
and
call
popa
iret
daa
les
mov
ins
sub
add
cmp
push
inc
lods
popa
fs
mov
call
not
jmp
cdq
addr16
leave
out
(bad)
hlt
dec
cwde
mov
mul
div
push
mov
dec
pop
ins
enter
enter
and
adc
adc
cmp
mov
mov
rcr
pushf
and
push
retf
pop
push
pushf
ja
or
mov
pop
push
or
movs
mov
or
adc
xchg
and
adc
jmp
mov
sub
push
dec
xor
push
in
jecxz
popf
jmp
jp
cdq
je
imul
jecxz
add
scas
cwde
push
adc
xor
gs
les
add
fcmovu
mov
lock
shl
je
pop
xchg
pop
std
imul
mov
pop
inc
sub
pop
and
pop
aaa
and
ins
lods
arpl
mov
dec
or
dec
dec
arpl
xlat
ret
in
leave
fnstenv
mov
in
imul
fbld
pusha
jae
xchg
push
dec
jno
rol
jno
aad
movs
xchg
dec
xchg
call
or
mov
sbb
add
and
je
aas
stc
test
pop
mov
adc
xchg
ret
icebp
push
movs
xlat
jb
inc
imul
(bad)
call
in
or
das
test
sub
cmp
mov
out
cwde
test
clc
fld
(bad)
jmp
gs
cmp
ret
hlt
jne
adc
sbb
and
lds
add
dec
(bad)
add
push
shr
jp
enter
(bad)
cs
loop
push
out
movs
test
stc
xor
jns
add
inc
fisubr
div
ins
into
xchg
popf
xchg
xor
add
dec
adc
ficomp
lea
repz
push
dec
(bad)
fwait
aam
(bad)
or
sbb
mov
pop
imul
not
cmp
inc
lahf
imul
scas
or
mov
sub
inc
(bad)
aam
add
xchg
adc
out
hlt
push
inc
(bad)
dec
fidivr
jecxz
sub
jo
and
pop
ret
push
push
xchg
xchg
ss
sub
cmp
cmp
lock
pop
and
mov
jecxz
mov
xor
add
and
push
and
xchg
shl
mov
pop
mov
stos
loope
out
add
cld
pop
jns
jmp
loop
sahf
and
jg
test
in
mov
dec
in
bound
adc
cs
xor
fcmove
stc
or
dec
pop
dec
sub
clc
mov
fiadd
(bad)
aad
les
jl
cmp
push
inc
repnz
xchg
pop
sbb
mov
fld
or
gs
test
xor
iret
mov
sti
add
inc
pop
fld
cmp
or
mov
addr16
dec
rcl
pop
and
fadd
mov
ret
xchg
jmp
daa
push
mov
stc
out
mov
adc
rcl
clc
fisttp
fidivr
das
stos
push
cmp
sub
retf
xor
dec
or
inc
lods
mov
sahf
xlat
shr
loopne
push
xchg
cdq
ins
aad
fcmovne
sub
inc
clc
call
xchg
retf
clc
xchg
pusha
and
das
mov
push
lods
cs
mov
(bad)
cmp
pop
jb
dec
push
fbstp
jne
xchg
and
xchg
retf
dec
vmread
data16
cmps
mov
loopne
mov
and
arpl
xchg
aad
jnp
jno
xchg
or
mov
or
sbb
in
arpl
imul
mov
mov
out
sahf
mov
inc
inc
nop
add
and
cli
pop
fs
add
repnz
dec
push
popf
(bad)
fidivr
pop
and
int
ss
xlat
and
add
das
iret
cld
or
ds
outs
jg
out
mov
inc
xchg
retf
inc
aas
daa
mov
dec
out
ss
fcomp
fiadd
xchg
inc
sti
(bad)
fwait
aad
ret
mov
rol
stos
mov
idiv
sbb
sub
dec
cmp
inc
inc
jmp
pushf
cmps
fwait
das
mov
push
sub
pop
shr
stos
daa
ror
movs
jae
add
jg
test
cmps
ds
mov
fstp
leave
out
cld
mov
call
jno
mov
mov
mov
sbb
scas
in
xor
add
inc
adc
xor
add
add
(bad)
sahf
mov
gs
call
mov
mov
cmp
(bad)
xor
xchg
xchg
(bad)
jp
jno
loopne
out
out
inc
shl
xor
xor
popa
mov
inc
push
sub
jnp
sahf
out
test
sub
imul
stc
jle
cli
pop
pusha
sub
sub
cmp
cmp
add
jne
push
mov
xchg
in
or
sahf
out
inc
or
sti
mov
mov
add
call
aad
pop
dec
lahf
dec
sahf
aam
int3
xor
ret
cmp
cmc
xor
cs
retf
retf
xchg
iret
xchg
xchg
push
mov
mov
mov
dec
mov
and
pop
sbb
xor
pop
ds
mov
xchg
pushf
push
aam
cmps
(bad)
loopne
push
push
mov
mov
mov
mov
mov
scas
in
dec
nop
cmp
push
mov
clc
jmp
cmps
in
pop
inc
adc
jo
push
outs
xchg
xor
xchg
fadd
and
fisttp
scas
lods
jo
pop
cmp
add
je
mov
or
cmp
adc
test
ss
adc
fxtract
pop
outs
stos
aam
js
or
pusha
xor
outs
stc
and
pop
outs
fisubr
gs
push
or
push
jmp
sahf
aad
xchg
sub
xor
addr16
mov
xor
mov
ja
addr16
jbe
mov
cmc
and
mov
sub
cmps
pop
(bad)
popf
xchg
in
xchg
jg
sbb
scas
movs
in
mov
jp
pop
push
mov
daa
stos
xor
mov
xor
jno
mov
mov
mov
mov
dec
push
sbb
xor
sub
and
out
pop
xchg
push
test
xchg
cs
rcr
mov
mov
push
mov
ins
popa
xchg
loopne
dec
icebp
and
add
jg
pop
mov
sbb
outs
add
in
mov
pop
jns
movs
jge
int
(bad)
cmp
sbb
sub
ins
push
stos
push
mov
data16
mov
mov
aas
pop
pop
ret
data16
jp
push
loope
add
add
fld
mov
jae
xor
mov
jge
aas
or
push
nop
in
dec
push
shl
ins
push
mov
add
in
mov
shl
jno
xor
dec
xchg
mov
loop
scas
shl
(bad)
sub
mov
mov
pushf
in
cmps
dec
lods
stc
std
movs
and
jmp
clc
mov
ret
jg
mov
es
sti
dec
inc
dec
scas
jne
hlt
inc
mov
push
test
dec
lods
push
push
sub
pop
mov
push
adc
or
fmulp
test
cmp
pop
pop
add
sbb
inc
mov
xchg
stos
ins
push
sti
xchg
jg
cmp
in
fldenv
or
and
lods
fisttp
push
mov
(bad)
sub
sub
jb
daa
inc
cmp
retf
inc
adc
push
imul
rcl
scas
or
stc
cld
adc
fidiv
jmp
push
mov
mov
inc
xor
mov
scas
mov
jmp
xor
adc
out
movs
(bad)
ins
mov
je
scas
mov
jmp
and
loopne
pop
cmc
aam
nop
mov
sbb
or
fstp
int3
sub
pop
int3
mov
push
outs
movs
dec
mov
jmp
cmps
out
push
sub
dec
bound
outs
adc
xchg
les
(bad)
cdq
scas
int
adc
mov
sbb
pop
in
add
push
inc
jb
cld
scas
mov
cdq
inc
mov
test
shr
mov
lds
xchg
and
push
pop
pop
mov
data16
sbb
(bad)
popa
mov
and
call
and
je
cs
sub
gs
xchg
push
shr
lds
call
imul
sbb
mov
stc
sahf
xlat
pop
or
dec
dec
mov
aaa
scas
xchg
push
pop
inc
push
movs
imul
cmp
out
jmp
(bad)
std
pop
jmp
lock
int
mov
mov
div
int
add
add
pop
or
mov
pop
push
jp
popa
ret
clc
out
pop
data16
aas
scas
inc
fist
sub
leave
xchg
int3
rol
addr16
xlat
out
dec
jo
outs
popa
pop
cmp
jno
sbb
cmps
cdq
inc
jns
leave
iret
cld
pop
mov
(bad)
push
cmp
daa
(bad)
adc
push
push
(bad)
jno
leave
adc
cmp
test
ins
dec
cmps
and
addr16
xor
pop
cld
mov
movs
in
daa
mov
push
push
sub
xchg
repnz
push
pop
and
(bad)
out
inc
xchg
stc
int3
sub
(bad)
cs
jecxz
icebp
mov
jne
mul
addr16
aam
jg
movs
jbe
xchg
dec
ret
pushf
sub
test
call
scas
iret
fimul
xlat
cmp
pop
lea
pop
adc
xchg
mov
mov
xor
inc
sbb
xchg
inc
xor
mov
jmp
mov
pusha
sbb
shl
(bad)
adc
add
aas
int
cmc
sub
sbb
test
pop
icebp
cmc
adc
int3
cmc
out
push
mul
fstp
stos
call
and
movs
loope
xor
jg
ins
jo
iret
inc
iret
retf
or
fidiv
inc
sbb
cs
fiadd
push
mov
in
mov
mov
jmp
push
loope
movs
jns
sub
aad
xchg
enter
(bad)
fbstp
mov
cdq
jnp
pop
jno
xlat
inc
jecxz
cmp
or
mov
or
add
dec
ss
jae
push
sub
push
inc
or
jns
sub
add
adc
and
bound
in
xor
pop
movs
mov
retf
mov
std
pop
retf
mov
and
mov
xor
jo
into
movs
sub
and
add
arpl
mov
add
mov
sahf
and
jae
or
or
xor
dec
adc
mov
ss
enter
pop
cmp
mov
mov
into
jno
je
lock
rcr
and
fst
imul
and
mov
xor
je
mov
jmp
ins
cs
mov
(bad)
in
pop
test
pop
popa
lock
pop
stos
jne
mov
scas
mov
scas
xchg
sub
test
data16
imul
mov
cmp
and
mov
in
mov
js
mov
aas
sbb
inc
popa
clc
imul
inc
or
xor
sar
xchg
adc
cmps
ret
dec
fdiv
in
push
mov
push
push
sbb
jmp
mov
pop
add
hlt
(bad)
fmul
adc
gs
xor
int
and
xchg
xchg
cmp
fsub
adc
mov
in
adc
mul
(bad)
fs
xchg
cmp
xchg
push
sbb
lods
sub
sub
(bad)
dec
cmp
mov
icebp
int
jmp
mov
imul
mov
aaa
mov
fidivr
xor
nop
retf
mov
push
sbb
mov
das
retf
dec
scas
ds
sub
ins
popa
popa
out
ins
fdiv
imul
cmp
shl
sahf
rcl
test
mov
push
and
inc
lds
jle
sahf
into
jmp
shr
repnz
test
pop
sbb
fdivr
rcr
pop
inc
cmp
mov
push
fmul
push
pop
jle
and
mov
imul
pop
xor
adc
sbb
cmps
movs
cmp
inc
cmp
ins
dec
add
test
adc
add
bound
push
adc
inc
test
adc
xchg
adc
pop
outs
dec
cmps
xor
(bad)
les
dec
mov
add
lock
aad
pop
(bad)
mov
(bad)
(bad)
xor
or
scas
ret
mov
je
mov
push
in
mov
xchg
sahf
sbb
inc
xor
ins
mov
test
jl
jmp
sub
mov
in
lea
pop
sbb
xchg
loop
sti
ret
cli
in
pop
pop
push
rcl
adc
rcr
xor
jo
out
imul
cmp
mov
adc
(bad)
push
sub
or
xor
fst
jmp
adc
stc
sub
mov
lods
lods
js
scas
test
sar
enter
movs
xchg
mov
dec
movs
fs
sub
pop
add
ficomp
and
je
pop
jmp
arpl
cmp
dec
jae
jns
cmp
mov
jmp
mov
neg
cli
pop
frstor
mov
jne
mov
push
jmp
inc
cmp
rcl
idiv
push
add
mov
in
outs
retf
mov
add
or
inc
push
mov
xor
sahf
inc
add
aam
push
in
jae
pop
in
push
mov
sbb
inc
addr16
sar
movs
xor
bnd
dec
xor
cld
cmp
xlat
arpl
movs
push
mov
shl
in
mov
add
sbb
jle
inc
dec
xor
mov
ins
cs
cs
mov
out
cmps
test
cmps
mov
(bad)
imul
jae
push
call
ja
mov
dec
pop
test
inc
sub
fs
xor
push
fs
shl
cmp
and
jne
xlat
das
sub
not
or
mov
div
inc
mov
cmp
adc
push
dec
xchg
dec
js
inc
daa
xchg
cld
dec
cmp
sub
or
sti
sub
push
inc
test
sub
pop
cs
(bad)
mov
dec
xchg
pop
scas
xchg
popf
xor
inc
out
icebp
cmp
and
in
inc
xor
add
(bad)
loopne
mov
fcomip
cld
push
jmp
xchg
loope
gs
adc
adc
mov
fwait
adc
std
add
(bad)
je
test
sar
or
popf
cs
xor
jmp
or
loop
enter
push
repz
ss
repnz
mov
mov
fistp
sub
fs
cmp
out
cwde
pop
cmps
xchg
xchg
push
and
push
dec
movs
arpl
sub
xchg
mov
lods
jnp
ss
lea
call
mov
mov
(bad)
(bad)
cwde
pop
sub
scas
xchg
aad
sub
or
jne
adc
(bad)
test
pop
push
or
jl
fsubr
inc
mov
inc
mov
jo
das
shl
or
xor
push
jne
mov
(bad)
cli
sub
jns
dec
cmp
rcl
xor
sbb
mov
bound
or
push
fs
inc
shr
mov
mov
std
or
jo
xor
push
xor
push
addr16
sbb
xlat
mov
add
mov
fisub
mov
std
push
in
stos
or
ja
stos
mov
mov
idiv
ss
popf
mov
sub
sar
pop
cmps
add
cmp
sbb
xchg
jl
lock
add
cmps
out
jmp
dec
out
iret
push
cld
aam
push
test
js
dec
push
mov
cdq
cdq
mov
fdiv
add
cs
int3
stc
popf
add
and
and
je
pop
movs
jno
sysenter
aad
out
pop
dec
aaa
cmps
xchg
stos
sub
ja
ret
push
cmc
xlat
in
inc
and
(bad)
add
mov
adc
leave
push
push
cmp
outs
mov
lods
mov
call
fsubr
in
mov
push
daa
pop
inc
pusha
add
nop
pop
out
push
cmp
adc
cmp
jnp
fsub
out
push
mov
adc
push
and
sbb
shl
stos
fs
mov
lods
iret
leave
gs
or
cld
sub
pop
push
lea
je
test
out
dec
mov
pop
and
add
rol
sbb
mov
or
(bad)
hlt
popa
in
test
pop
mov
imul
add
adc
and
sub
bound
jno
xor
imul
jno
pop
dec
jl
push
and
ret
inc
lods
pusha
jns
stos
popa
xchg
test
jbe
test
adc
sbb
cmp
push
jmp
bsf
fs
or
pop
sbb
mov
inc
jmp
xchg
addr16
bound
jl
or
and
pop
inc
scas
mov
jecxz
mov
pusha
inc
mov
retf
mov
dec
or
imul
pop
mov
jb
xor
mov
setp
rcr
aas
(bad)
mov
into
call
push
std
mov
test
rcr
push
push
rcr
retf
leave
addr16
or
pop
(bad)
pop
dec
jmp
mov
icebp
js
sahf
out
jbe
fcmovu
pop
xchg
clc
xchg
jae
stc
mov
in
xchg
inc
cmc
stc
sub
xchg
shl
xchg
ins
mov
mov
test
ja
mov
(bad)
js
aam
mov
cmp
adc
mov
mov
sbb
out
popf
mov
jbe
or
push
cmps
gs
jno
dec
pop
sub
xchg
and
in
out
frstor
sbb
jp
sbb
loop
mov
stos
add
in
scas
out
push
je
mov
fisubr
in
pop
lods
mov
cli
pop
inc
sbb
xchg
jp
bound
and
outs
fwait
mov
fdivr
std
xchg
mov
sti
call
(bad)
mov
stc
repz
add
push
inc
inc
test
mov
mov
dec
call
cmp
shr
adc
jae
shl
push
cmps
jnp
test
jecxz
test
jl
or
ins
mov
retf
in
pop
or
cmp
imul
pop
gs
iret
inc
sahf
jmp
aam
pop
xchg
shl
dec
fdiv
pop
inc
mov
hlt
dec
cwde
arpl
outs
out
cld
cli
das
aas
aad
mov
sub
pop
clc
leave
mov
push
push
cmp
bound
pop
xor
mov
in
int3
shr
adc
leave
addr16
pop
dec
into
in
int3
imul
sub
retf
jmp
push
clc
sub
retf
je
adc
call
ja
mov
sub
pusha
(bad)
aad
les
jbe
mov
push
push
push
jg
xchg
xchg
cmc
dec
fild
adc
es
in
test
push
or
xchg
mov
setp
jg
out
mov
ins
mov
adc
mov
cmp
mov
pop
pop
sub
dec
push
scas
sub
push
xchg
rcl
adc
xor
mov
fwait
mov
push
cmc
je
add
lods
stc
test
out
cmps
push
je
pop
mov
repz
std
xchg
fistp
pop
inc
sbb
push
jo
jmp
mov
gs
bound
ror
lds
adc
pop
mov
sub
mov
mov
daa
jno
enter
aam
aas
or
mov
adc
ficomp
bound
add
adc
repnz
push
imul
lds
ins
xor
scas
movs
call
test
push
ss
fwait
clc
cmps
mov
ja
fld
dec
(bad)
ret
jno
sbb
sbb
popa
jnp
cmps
rcr
lahf
and
mov
aad
xor
pop
mov
add
sub
pop
fistp
ss
fadd
cdq
imul
pop
or
js
outs
and
sub
sbb
jmp
xchg
and
ret
jb
retf
mov
test
jmp
shr
and
inc
fwait
and
mov
mov
push
pop
and
mov
jecxz
jp
clc
repnz
push
jge
or
sub
inc
jns
movs
xor
sahf
or
jle
fnstcw
scas
loope
inc
not
and
mov
into
xor
jae
pop
and
clc
xchg
ds
pop
adc
retf
sbb
ds
dec
int3
ja
mov
mov
push
mov
mov
inc
or
adc
(bad)
ror
push
lahf
stos
lock
and
push
and
call
in
arpl
jg
aam
xor
sahf
sbb
push
sub
sbb
jl
mov
mov
mov
sub
fwait
cmps
sub
retf
jl
pop
inc
mov
popa
outs
in
jge
test
mov
mov
hlt
jmp
xchg
ds
(bad)
out
add
nop
rdpmc
jge
stos
jne
sbb
cmp
or
xchg
xchg
clc
jmp
push
aad
fidivr
inc
and
cmps
outs
fwait
mov
dec
sahf
sub
outs
mov
data16
cmp
lock
stos
data16
enter
call
lds
outs
xor
(bad)
mov
daa
test
pop
adc
je
mov
fmulp
ins
cmp
jno
scas
and
jnp
jmp
js
push
mov
cmc
add
bswap
inc
adc
xchg
dec
push
ins
xchg
jg
or
cmp
bound
and
pop
push
push
mov
das
fsub
daa
stos
repnz
inc
and
bound
jnp
and
cs
jb
aad
jg
dec
pop
dec
push
fstp
(bad)
xor
fwait
pop
jae
fwait
scas
pop
std
aad
pop
popa
or
in
stos
(bad)
in
in
dec
mov
xor
push
and
cmp
leave
neg
sbb
add
cli
dec
icebp
add
stos
stos
and
nop
ror
in
call
dec
xchg
test
cmp
lods
cmps
stos
lods
mov
add
hlt
(bad)
sub
retf
rcl
in
push
in
xor
mov
push
(bad)
(bad)
stos
push
fcmovu
xlat
(bad)
std
ja
pop
stos
sbb
outs
mov
mov
xchg
push
cmp
xchg
fidivr
dec
cmp
cmps
dec
pop
dec
and
cmp
cmp
cmp
outs
jg
push
mov
mov
pop
sub
sbb
xor
and
movs
das
sub
mov
push
inc
arpl
push
jle
fcomp
mov
es
hlt
mov
jl
call
fistp
dec
and
sub
rcr
cmc
jbe
adc
test
xchg
add
jg
imul
out
sbb
lahf
inc
cmp
push
xor
repnz
pminub
mov
fisubr
mov
jno
int3
addr16
scas
ins
test
rcl
icebp
cmp
rol
rcr
(bad)
and
or
push
js
enter
mov
mov
stos
jae
push
and
xor
sub
xlat
rcl
stos
(bad)
inc
mov
cmp
rcr
mov
cmp
rol
jl
iret
mov
or
xchg
iret
loop
ret
test
mov
jmp
daa
dec
cmp
pop
lock
adc
sbb
(bad)
mov
jne
repnz
mov
cmp
cmp
mov
in
cmp
les
jb
inc
fsubr
pop
dec
inc
cmp
into
jg
stos
outs
cmp
call
out
sbb
xchg
cdq
mov
addr16
mov
nop
mov
jmp
jno
xchg
push
movs
cmc
xchg
fstp
ins
pop
mov
cdq
jle
sti
jns
sti
or
jmp
aaa
xor
sub
in
mov
js
es
loopne
push
mov
test
sti
dec
and
test
outs
data16
jl
cmp
jecxz
jl
jne
outs
mov
pop
fwait
in
jg
mov
iret
push
fcmovnbe
ror
xchg
scas
xchg
retf
ds
mov
mov
popa
imul
fcom
sahf
add
scas
aaa
ss
cli
inc
jno
imul
ins
jno
into
cwde
pop
movs
jl
rol
jbe
sbb
jecxz
mov
ret
adc
cs
rol
fwait
pop
scas
aam
dec
xchg
and
jmp
int
scas
jp
loop
push
ja
mov
daa
xchg
into
pop
mov
jae
cmp
push
or
fstp
sub
fs
xchg
loop
inc
xor
jnp
jp
pop
gs
out
jge
push
cmp
arpl
dec
popa
mov
ins
shl
inc
xchg
in
in
data16
popf
jl
and
bound
cwde
fidiv
es
pop
rcl
inc
push
arpl
inc
in
fstp
sahf
sbb
ret
fidiv
cmp
and
lahf
mov
sbb
jmp
les
xchg
jle
scas
jge
cs
jge
add
jp
(bad)
cmps
sbb
sub
xchg
movlps
leave
les
xor
inc
adc
sub
fld
in
lea
jmp
lods
int3
xlat
cmc
inc
inc
and
dec
adc
add
outs
dec
int
jecxz
test
mov
jmp
cmps
mov
cs
jbe
pop
or
ins
in
test
inc
dec
retf
sbb
in
fisubr
fcomp
rcr
imul
(bad)
imul
lds
ja
jmp
xchg
icebp
out
mov
lahf
hlt
mov
imul
test
cmp
into
mov
push
cmp
jae
add
mov
outs
in
out
push
pop
sub
je
stc
cmps
pop
into
ins
mov
scas
ds
ret
gs
sahf
pop
jns
push
xchg
pop
adc
(bad)
(bad)
xor
mov
push
ret
lds
pop
push
sub
lods
sahf
imul
pop
cmps
dec
outs
jne
push
cmp
shr
mov
pop
jo
mov
fcomp
cmp
aad
loopne
ret
gs
push
mov
shr
pop
mov
pop
leave
ins
or
sub
push
jne
sub
pop
add
push
loop
call
jp
pushf
(bad)
(bad)
aad
movs
fidivr
test
push
ret
mov
or
lods
dec
sbb
push
das
mov
sbb
adc
sbb
aam
jne
add
bound
inc
xchg
dec
ins
test
ret
mov
cmp
ins
xchg
mov
sbb
aas
clc
xchg
and
mov
clc
adc
mov
xchg
xchg
pop
ret
scas
addr16
fldcw
popa
push
push
out
or
ficomp
inc
adc
pop
jmp
and
aaa
nop
fist
pop
add
or
xchg
ds
out
retf
mov
mov
mov
sub
pcmpeqd
lock
add
dec
mov
lock
repz
(bad)
xor
pop
jg
(bad)
inc
repz
mov
cmc
inc
mov
mov
push
adc
shl
nop
push
cmp
cwde
push
push
dec
dec
pop
stos
sti
je
jmp
mov
fmul
sbb
mov
shl
outs
in
test
sub
ret
cmp
in
add
and
ja
ret
ret
ret
sub
fstp
ins
jle
arpl
mov
jae
cmp
repnz
ror
aad
push
stos
add
scas
je
pop
imul
loope
dec
stc
lods
repnz
fcomp
inc
cmp
aad
cld
cmp
jnp
push
fsubp
repnz
leave
leave
aam
push
xor
mov
addr16
retf
xor
cs
(bad)
pop
or
mov
fadd
outs
fwait
ins
stos
inc
sbb
adc
(bad)
sub
xchg
out
in
jmp
cmp
nop
xchg
pop
jo
push
fild
cs
and
aad
sbb
add
xor
das
test
enter
and
push
daa
scas
ror
push
adc
int
(bad)
pop
pop
or
mov
imul
push
mov
sbb
imul
ins
mov
xchg
ret
in
xchg
push
icebp
mov
mov
xchg
test
repnz
adc
push
jae
or
out
push
mov
into
test
cli
add
add
imul
jbe
movs
xchg
xor
push
cmp
fisubr
outs
mov
dec
cmp
dec
outs
jmp
sub
inc
mov
dec
stos
inc
or
jmp
fcmovne
jp
jle
fstp
cmps
sbb
daa
xor
inc
mov
sbb
xor
dec
outs
jmp
call
lock
call
xor
and
inc
jmp
jae
jnp
in
cld
ins
lock
mov
adc
je
xor
sti
out
inc
xor
xchg
aas
adc
inc
cli
jns
cmc
push
sbb
mov
pusha
xchg
loope
bound
cmps
pop
cmp
jl
xrelease
movsx
test
and
(bad)
bound
lahf
jns
jl
and
ins
mov
sub
js
mov
aas
cmp
jno
cmc
push
and
loopne
jmp
mov
scas
ds
jp
inc
std
icebp
mov
cmp
stos
ret
push
bound
jbe
push
xor
sub
into
ror
leave
jns
jmp
cmp
cmc
mov
test
add
mov
fistp
push
mov
xchg
sti
adc
mov
add
ja
jl
xchg
push
and
inc
stc
and
leave
inc
mov
jge
aaa
pop
addr16
shr
jmp
mov
fwait
sub
jle
das
enter
pop
jmp
push
clc
mov
stos
fcomi
pop
enter
lods
les
inc
mov
lea
mov
test
test
dec
fadd
xor
fistp
mov
dec
sbb
dec
jne
cli
mov
outs
jmp
push
pusha
mov
pop
mov
inc
test
xlat
loop
add
sti
pop
aas
aam
ins
das
xchg
xchg
adc
mov
pushf
(bad)
ss
not
call
cmp
sub
aad
(bad)
fldlg2
add
jo
je
lds
push
cmp
in
push
rcr
adc
sti
xor
xor
mov
push
ret
mov
jl
fisubr
ss
push
sahf
mov
or
sbb
push
jmp
dec
pushf
cmpps
iret
js
cmps
cwde
cmp
adc
sar
sbb
pop
mov
or
outs
push
fs
xchg
call
jp
in
stc
test
cwde
icebp
and
sub
out
pop
jnp
outs
pop
sbb
retf
mov
test
addr16
and
mov
ret
pop
pop
jb
mov
add
outs
mov
xchg
cmp
ret
push
loope
rol
pop
jge
cmp
mov
es
sub
(bad)
mov
cmps
jnp
js
repz
inc
mov
repz
jnp
pushf
xor
es
ins
xchg
in
pop
hlt
cmps
loop
cmp
inc
shr
sbb
and
adc
rcr
sti
mov
mov
shl
dec
mov
add
jge
cmp
add
nop
in
fisubr
push
(bad)
mov
push
add
test
fs
mov
push
gs
mov
inc
xchg
push
mov
xchg
add
inc
cli
cdq
xchg
sti
paddd
adc
cmp
mov
jmp
lock
cmps
imul
call
and
outs
imul
cld
mov
ficomp
adc
scas
pop
cmp
out
outs
scas
ret
xor
xchg
mov
jns
ds
push
popa
jne
mov
push
jae
out
and
cli
jg
cld
mov
mov
cmps
test
xchg
sbb
pop
pop
not
dec
xchg
jmp
aaa
mov
cmp
dec
and
les
or
sti
stos
mov
gs
aam
and
sbb
sub
(bad)
add
cli
mov
jmp
ret
fsqrt
inc
add
push
mov
dec
jmp
xchg
into
outs
mov
(bad)
cld
xor
cmp
xor
push
ret
fisub
jle
je
movs
sbb
push
(bad)
(bad)
push
dec
fwait
sub
xor
xchg
xor
inc
jnp
in
pop
xlat
cmps
retf
arpl
iret
xor
mov
xor
jbe
pop
inc
push
cmp
xor
add
in
xor
sub
sahf
sbb
jecxz
sub
hlt
aas
shl
shl
test
mov
pop
xor
dec
in
mov
repz
pushf
pushf
stos
xchg
(bad)
ins
inc
gs
aaa
and
mov
lahf
(bad)
mov
push
pop
xor
push
repnz
div
add
hlt
fstp
or
add
fs
cld
xor
stos
das
or
mov
(bad)
xchg
cwde
repz
mov
ss
jns
je
fs
mov
les
sub
ja
dec
retf
iret
lds
cmp
movs
mov
or
(bad)
cmps
clc
test
dec
push
and
ins
add
pusha
jmp
repz
add
xor
mov
mov
fild
sbb
aas
pop
dec
les
les
push
mov
add
popf
push
lea
out
cmps
call
mov
inc
or
or
scas
adc
in
nop
psraw
jge
popa
rcl
add
mov
push
pop
and
push
(bad)
fstp
mov
out
fcom
call
adc
fcmovb
push
stos
mov
retf
ins
cmc
sub
cmp
mov
add
add
ret
push
pop
data16
cmp
and
mov
xchg
push
add
std
rcl
inc
imul
inc
mov
scas
cmp
stc
sub
jg
mov
shl
(bad)
sar
neg
sub
fild
pop
push
xor
das
test
popf
leave
add
fisttp
lds
xor
jne
stos
pop
fcom
mov
adc
add
mov
dec
mov
int
lock
imul
shl
shr
jl
and
inc
in
popf
adc
pop
fsubp
and
pop
(bad)
jp
leave
imul
lds
or
(bad)
rcr
push
aam
sar
cmp
test
(bad)
dec
pop
pop
movs
ror
jp
pop
div
or
fwait
repz
call
xchg
pop
stos
neg
jmp
inc
push
stos
pop
mov
fwait
int3
xor
xchg
sbb
aaa
pop
mov
(bad)
dec
mov
outs
loop
enter
mov
fs
mov
pop
jnp
ds
lods
mov
inc
outs
pop
dec
or
add
test
sti
pop
sbb
fnstenv
xchg
xor
and
dec
xchg
retf
or
inc
imul
ss
inc
movs
movs
pop
int
cli
push
out
ret
and
push
shr
lahf
cvtps2pi
jmp
hlt
dec
aad
mov
push
aam
xor
fld
imul
outs
lods
test
push
add
push
dec
aam
xor
call
push
loopne
enter
outs
mov
sar
(bad)
fsub
and
push
or
repnz
scas
inc
int
mov
add
jnp
adc
sbb
ins
rol
xchg
in
jb
out
ficom
add
adc
lea
js
clts
imul
mov
outs
sub
test
mov
mov
push
shr
mov
pop
dec
sbb
xchg
push
mov
mov
outs
popa
mov
jns
cli
inc
fcomp
movs
jecxz
dec
div
mov
fsub
pop
mov
pop
push
sub
sti
pop
pop
mov
jl
into
and
imul
push
(bad)
scas
out
das
and
aaa
and
sub
push
adc
xchg
add
das
out
xor
jp
and
in
sbb
mov
les
inc
sub
jl
(bad)
mov
retf
(bad)
imul
aaa
ret
push
adc
in
or
stos
mov
je
adc
mov
lea
adc
outs
es
test
and
jmp
out
push
test
test
mov
fdivr
push
loope
es
jnp
push
call
loopne
xchg
cmp
or
cdq
mov
fnop
ret
and
mov
jl
test
not
ins
rcr
fimul
sub
or
mov
outs
popf
jo
dec
scas
ss
lods
mov
cdq
out
inc
les
mov
push
arpl
popf
push
(bad)
sub
jns
sbb
mov
mov
add
push
inc
jecxz
dec
or
sub
jnp
jno
jb
cmp
cmp
jnp
mov
pop
imul
mov
and
xchg
and
xchg
les
test
adc
(bad)
add
push
push
cmp
lahf
jno
dec
inc
or
js
jb
ins
xlat
push
(bad)
adc
ds
cmc
xchg
out
js
pop
cs
dec
mov
adc
add
jge
mov
mov
mov
cmps
scas
ins
xor
lahf
sti
pop
pop
loope
dec
mov
into
into
movs
div
cli
dec
data16
into
ss
adc
add
jnp
stos
loop
repz
repz
and
adc
xchg
inc
sub
rcr
repz
inc
push
cli
or
pop
fnsave
daa
and
xor
inc
mov
push
pop
cs
add
cmp
push
imul
loope
dec
loope
mov
sbb
xor
int3
lock
(bad)
xchg
xor
ins
dec
dec
stos
les
cs
adc
test
aas
mov
and
and
in
sbb
test
xchg
hlt
popf
sub
jg
lods
jns
pop
outs
push
addr16
push
lock
xor
ins
inc
aad
cmp
xacquire
mov
mov
ds
pop
bound
xchg
dec
(bad)
push
dec
addr16
test
push
jnp
ret
sub
adc
dec
retf
imul
add
scas
es
push
mov
not
xor
sub
in
or
adc
(bad)
pop
bound
pusha
cs
ss
sub
cwde
fdivp
ret
xchg
cli
fstp
(bad)
js
pop
cmp
add
inc
enter
xchg
fmul
test
xor
ins
rcr
jg
push
cmp
pop
mov
jne
rol
out
jae
lock
mov
ret
adc
mov
ja
arpl
jb
mov
push
mov
or
mov
ss
clc
cmps
sbb
adc
ret
pop
cmp
bnd
sub
add
loop
in
mov
out
mov
or
adc
in
jl
jecxz
pop
popf
mov
gs
shl
das
scas
or
ss
imul
loopne
jnp
jne
jge
arpl
retf
and
int3
fisub
lods
sahf
sbb
pop
push
pop
push
adc
cmc
sahf
loop
push
fwait
repnz
and
data16
sbb
cmc
scas
ret
xor
sub
fwait
push
and
ds
fldenv
add
hlt
cwde
cmps
les
xchg
sbb
mov
inc
jmp
lock
int3
test
pop
jns
aaa
out
jmp
jmp
push
int3
sahf
addr16
and
aas
jmp
(bad)
mov
lahf
ret
out
lea
jbe
dec
push
pusha
out
mov
dec
xchg
sbb
mov
in
jo
mov
inc
dec
dec
cmp
or
aas
dec
cld
sar
xchg
sbb
push
adc
arpl
xor
mov
dec
in
pop
mov
dec
pop
sub
cmc
ret
jnp
jge
ja
mov
mov
fwait
enter
pop
or
cmp
fwait
sub
data16
xchg
scas
push
retf
mov
movs
stos
cmps
xchg
orps
ja
out
cs
push
sub
jmp
sti
ss
jb
adc
jno
jmp
ud2
aad
outs
mov
mov
(bad)
int
mov
mov
call
xchg
ja
and
pop
mov
mov
int
mov
scas
mov
jnp
dec
out
sahf
loop
mov
and
sub
pop
rcl
or
fwait
dec
add
mov
push
push
arpl
inc
mov
dec
and
aad
pusha
mov
or
adc
clc
sub
mov
pop
rol
shr
add
jae
add
cmp
and
push
popa
dec
lahf
fadd
ins
test
or
dec
adc
dec
mov
imul
xchg
cmps
test
and
xchg
imul
aad
mov
push
add
adc
or
mov
scas
les
movs
fdivr
inc
dec
loop
xchg
je
stos
xchg
mov
outs
jne
bound
mov
and
jne
xchg
in
mov
fst
xor
lock
fnclex
stos
xor
clc
scas
cmps
mov
cdq
in
xchg
mov
jge
xor
ss
shr
mov
(bad)
mov
cwde
sbb
pop
push
je
ja
or
push
pop
aad
icebp
pop
and
inc
jo
retf
(bad)
je
ins
jae
xchg
push
ins
inc
movq
cmp
add
and
push
mov
cmp
xchg
shl
fwait
aaa
push
mov
iret
push
mov
mov
pop
sahf
fs
inc
mov
push
jmp
pop
sti
mov
adc
add
(bad)
movs
js
mov
js
mov
test
push
popa
popa
jno
xchg
fs
cmp
in
push
push
inc
and
mov
inc
jmp
jno
xchg
push
out
jne
and
mov
mov
jg
push
stos
sub
cmp
inc
sahf
adc
and
icebp
ins
jg
mov
xchg
test
shl
jne
sbb
ss
mov
cmp
test
inc
aas
mov
mov
push
pushf
mov
sbb
push
lods
xchg
out
mov
push
fwait
adc
rcr
jb
mov
sbb
sub
add
in
sbb
dec
div
mov
mov
(bad)
or
out
cmps
fimul
jmp
jecxz
xchg
fcomp
(bad)
and
dec
xor
fldenv
aaa
mov
(bad)
test
test
fwait
(bad)
nop
pop
ja
push
jno
retf
jns
mov
jg
jmp
push
xor
sub
(bad)
cmps
inc
stc
sub
xor
mov
scas
sub
shr
push
jl
xlat
and
adc
imul
sub
mov
imul
cwde
xchg
xor
sahf
movs
mov
pusha
jle
ds
sub
pop
fwait
or
fmul
xchg
xor
out
adc
jmp
movs
(bad)
addps
adc
mov
pop
je
dec
sbb
loope
stos
sar
test
xor
mov
cmp
xor
or
movs
lods
dec
sbb
adc
fld
pusha
shl
pop
dec
xor
xchg
popa
jg
mov
jb
sbb
addr16
jmp
adc
(bad)
es
scas
test
stos
fiadd
push
lds
fsub
pop
popf
es
out
push
sbb
enter
cmp
sar
xor
(bad)
push
mov
and
sub
jbe
stos
arpl
repz
ins
jns
and
push
call
sti
inc
retf
sahf
clc
ja
imul
mov
(bad)
repz
je
inc
jb
jae
pop
movs
xchg
mov
out
xchg
scas
pusha
jno
pop
call
imul
push
add
fldenv
js
and
lds
hlt
sti
sub
fdiv
and
cmps
std
rcr
push
ss
dec
mov
xor
jns
pop
sahf
dec
jecxz
shl
sbb
jnp
loop
jno
shr
xor
(bad)
push
xor
in
add
push
and
xor
(bad)
pop
outs
sub
mov
sub
xchg
movs
mov
jns
inc
or
inc
xchg
adc
push
jge
fild
out
sbb
sar
jp
ret
pop
fisub
(bad)
fdivr
pop
xor
push
mov
dec
pop
(bad)
pop
adc
inc
mov
pop
fiadd
ret
cmc
dec
adc
fisub
outs
xchg
sub
frstor
xor
sub
scas
movs
push
xchg
scas
retf
stos
mov
scas
push
inc
or
(bad)
dec
mov
(bad)
icebp
sub
jmp
jle
cdq
cld
fwait
jle
sahf
xchg
fstp
sub
push
dec
mov
dec
(bad)
jns
mov
int
jge
mov
cld
sub
fld
xchg
mov
arpl
dec
cmp
lea
jge
mov
test
mov
stos
ins
test
es
cdq
lahf
pop
or
xchg
pusha
jp
dec
sub
mov
pushf
add
mov
mov
cmc
scas
inc
movs
ret
inc
sbb
jmp
repnz
aad
(bad)
mov
mov
jmp
push
in
pop
pop
ins
stos
cs
(bad)
imul
adc
jo
sbb
push
mov
mov
xchg
out
xchg
(bad)
shl
jle
leave
das
cmp
cmc
dec
xchg
pop
mov
mov
fbstp
dec
push
ins
lods
cdq
scas
outs
aas
repz
lods
ins
test
mov
in
and
fwait
xchg
jle
lock
push
xchg
jne
rol
das
mov
mov
dec
sbb
inc
sub
movs
push
fild
add
xchg
mov
hlt
sbb
xor
neg
lods
xchg
pop
dec
(bad)
(bad)
adc
pop
sub
pop
(bad)
popf
jne
jbe
outs
sbb
xor
retf
ret
add
pop
cmp
mov
add
cmp
mov
ja
jb
leave
dec
mov
mov
jmp
test
inc
mov
js
fwait
in
jne
jo
div
pop
or
add
xchg
jnp
in
push
push
push
dec
fdivr
retf
sbb
cmps
aad
jmp
sti
or
pop
mov
mov
aam
es
and
mov
into
sub
mov
lahf
inc
inc
clc
fstp
pop
call
jnp
movs
fdiv
jmp
test
push
fidivr
cmp
cmps
xor
scas
imul
or
mov
in
mov
jmp
imul
pop
mov
lahf
fmul
adc
hlt
scas
(bad)
ret
jnp
sub
xor
fbld
push
xor
sub
fbstp
add
pop
lods
inc
daa
cs
outs
mov
push
push
shl
push
mov
imul
fcom
test
cmp
fcomp
or
or
shl
outs
out
ja
ss
(bad)
out
int3
mov
mul
int3
push
pop
fidivr
add
iret
xor
jge
das
retf
dec
mov
cmp
push
psubsb
xchg
and
lods
jns
jecxz
push
addr16
cmp
jmp
jp
or
pusha
jae
iret
cmp
popf
stc
xor
dec
dec
add
out
push
(bad)
mov
adc
inc
cmp
loop
pop
or
retf
or
sahf
int3
mov
pop
icebp
mov
lock
inc
fwait
ss
pop
mov
nop
arpl
imul
in
pop
pop
ins
ss
jmp
ror
cmp
in
sar
cmps
cmps
sahf
mov
xchg
rol
int3
xor
pop
mov
sbb
push
les
imul
fsubr
pop
leave
pop
imul
and
outs
jno
(bad)
call
hlt
jnp
mov
in
in
and
mov
fisub
gs
ins
lods
movs
nop
mov
cmp
push
jbe
push
cmp
sub
not
dec
jp
jno
pop
cmp
dec
loop
or
sti
stc
(bad)
sbb
push
ja
test
es
jl
mov
and
and
enter
sub
call
scas
mov
ret
(bad)
ss
add
mov
daa
xor
inc
dec
or
cmps
ret
bound
clc
pushf
push
inc
mov
adc
(bad)
sub
jae
test
fst
aas
fst
call
call
stos
jge
dec
dec
cmp
aas
leave
test
mov
fwait
adc
out
add
cmps
stos
sub
daa
out
in
dec
aas
inc
cs
(bad)
imul
iret
fadd
adc
mov
cmp
loope
je
mov
js
jns
je
push
(bad)
fcmovnb
lods
clc
das
aas
retf
cmp
push
dec
cdq
std
mov
loope
pop
mov
js
mov
aad
test
ins
pop
call
inc
pop
dec
jg
daa
aad
jmp
inc
in
jne
or
dec
or
test
mov
sub
push
and
push
popa
rol
cmp
sub
(bad)
fstp
xchg
rcr
mov
pop
lods
mov
xor
inc
jmp
adc
sub
mov
push
test
add
cmp
sahf
loop
scas
jno
lds
pop
jb
rcr
retf
fcom
(bad)
jmp
pop
adc
imul
mov
jmp
mov
in
cmp
adc
xchg
dec
sub
aaa
mov
mov
jae
push
test
lods
mov
aam
dec
mov
lds
jae
push
xor
adc
gs
mov
mov
dec
stos
push
and
mov
cmp
cmps
(bad)
rcr
inc
clc
test
fsub
(bad)
out
movs
cld
xchg
xchg
cmc
out
cmp
lds
adc
test
shl
mov
(bad)
inc
and
outs
mov
xchg
pop
add
jb
cmp
mov
je
inc
adc
iret
cmp
stc
sub
mov
sbb
imul
fwait
fwait
sbb
jmp
mov
stc
sub
jl
in
xor
xchg
ret
mov
in
scas
xchg
rcr
add
adc
iret
fwait
pop
outs
jle
inc
cmps
mov
ja
cmp
inc
and
int3
and
daa
stos
cmp
fcom
mov
jmp
push
pushw
fstp
imul
aas
dec
fistp
cld
adc
dec
nop
dec
xlat
das
sub
cmp
fbstp
xlat
rcl
cwde
add
jnp
fs
push
mov
jmp
fmul
mov
retf
xchg
int3
lods
mov
jbe
push
cld
push
mov
nop
js
and
or
(bad)
(bad)
outs
das
inc
jne
mov
lea
or
pop
jecxz
mov
inc
hlt
xchg
or
mov
push
fs
pop
fs
mov
adc
mov
push
mov
in
ret
cmp
int
lods
fcmove
leave
xor
dec
xchg
nop
mov
rcl
add
idiv
imul
gs
mov
and
pop
es
movs
fwait
jnp
ins
sbb
daa
push
int3
mov
push
sbb
xchg
pusha
cmp
cmc
adc
cs
add
mov
pop
pop
xlat
or
cs
int
mov
mov
xchg
cmps
xchg
push
(bad)
adc
xor
outs
inc
add
pop
and
test
retf
dec
icebp
nop
ins
dec
mov
mov
lods
xchg
retf
test
(bad)
mov
in
(bad)
lock
sub
cmp
dec
jne
or
push
or
fisttp
enter
mov
lea
imul
mov
dec
or
call
leave
xor
icebp
inc
icebp
mov
aaa
repz
cmps
mov
sub
mov
sub
retf
sti
aas
lods
dec
stos
mov
mov
and
imul
xchg
setae
enter
inc
mov
stos
dec
adc
xchg
call
push
nop
js
pop
frstor
push
cmp
sahf
sahf
push
add
sbb
ficomp
out
ins
int
sbb
lods
push
cmp
repz
xor
add
lahf
or
cmp
jae
mov
mov
xchg
lds
dec
sub
nop
push
xor
test
inc
cmp
outs
test
stos
jmp
ins
loope
ret
popa
fisttp
lds
xor
pop
pop
lods
and
push
(bad)
jno
jne
into
adc
in
xchg
fwait
test
sbb
mov
je
fldenv
jnp
xchg
scas
sar
add
xor
inc
push
(bad)
jmp
dec
push
and
dec
leave
pop
or
ficomp
pop
inc
std
adc
ret
repnz
push
inc
cli
fmul
sub
icebp
add
scas
enter
inc
in
mov
mov
add
push
jns
inc
push
mov
mov
cmps
aad
fisubr
adc
mov
bound
lods
sahf
sub
adc
dec
pop
inc
stos
(bad)
sar
sbb
sbb
shr
in
out
pop
std
retf
js
sub
sbb
cmps
jne
xchg
sbb
sub
cmp
loope
sub
fldcw
cmc
test
and
stos
lods
(bad)
ins
or
aas
cs
ret
jecxz
mov
rcr
pop
or
imul
jae
or
popf
test
mov
lock
mov
movs
je
mov
and
outs
retf
mov
aam
popf
lahf
fwait
add
inc
fcmovu
ins
mov
and
ret
hlt
ins
repz
sub
aam
(bad)
ror
push
jg
mov
mov
sbb
test
mov
mov
cs
pop
fbld
test
pusha
pop
cmps
and
inc
daa
adc
cmp
into
xchg
test
into
xor
xchg
clc
and
push
xor
mov
push
xchg
add
inc
data16
aaa
xchg
shl
mov
jl
and
les
mov
in
lods
jns
jl
mov
pop
mov
push
inc
mov
(bad)
cmp
jle
xor
test
jecxz
test
bound
xchg
loope
ret
fdivr
inc
sub
push
pop
(bad)
mov
ja
std
iret
loope
pop
xchg
mov
xchg
cwde
xchg
adc
xchg
xchg
into
inc
loop
imul
mov
outs
(bad)
cmp
addr16
xlat
outs
push
mov
mov
movs
leave
pop
(bad)
fnstsw
sbb
dec
and
sub
jae
xor
add
cmp
mov
mov
out
push
(bad)
lahf
sbb
ins
pop
repz
clc
add
popa
and
ins
cli
lods
mov
push
sbb
frstor
mov
push
push
loopne
sbb
mov
int
mov
sbb
add
fimul
shl
sub
pop
adc
mov
int
(bad)
and
xchg
mov
mov
fisub
out
fistp
enter
mov
movs
popa
mov
aas
fdiv
btc
mov
gs
data16
pop
dec
cld
dec
fcmovu
popf
aam
movs
cmp
imul
scas
not
je
push
xchg
repz
popf
fisubr
sbb
movs
mov
in
out
neg
cld
pop
adc
mov
jmp
arpl
and
fdivr
cmp
pop
retf
cdq
mov
outs
imul
int
leave
lock
in
mov
xchg
cmp
cdq
retf
mov
dec
sbb
in
xchg
scas
imul
adc
loop
or
dec
ror
imul
mov
mov
pushf
lea
fist
mov
aam
scas
mov
pop
pop
retf
call
mov
sbb
inc
cs
mov
xchg
cwde
mov
inc
adc
mov
sbb
jl
cmp
lds
popa
jae
into
rol
enter
cmc
inc
push
mov
out
movs
add
nop
dec
scas
mov
and
fstp
pop
rcl
aaa
xor
xchg
cs
dec
bound
retf
test
mov
fdiv
xor
nop
out
jmp
mov
call
pop
das
aaa
mov
in
mov
jmp
mov
jno
dec
jnp
add
cmp
fdivr
aam
mov
fsub
mov
imul
std
ret
arpl
jns
in
stos
sahf
lock
push
test
cld
push
sub
stos
mov
jge
out
(bad)
jno
hlt
push
(bad)
cmps
outs
push
out
in
idiv
test
jecxz
adc
cmp
or
jecxz
mov
mov
iret
cmp
scas
cmp
jecxz
sub
retf
mov
imul
pop
mov
ds
sahf
aaa
mov
adc
xor
pop
sbb
push
mov
and
lea
push
cmps
pop
xchg
mov
aas
mov
pop
push
sub
jo
je
mov
mov
mov
pop
leave
outs
ret
aad
sbb
fnstsw
xlat
jmp
sbb
xor
repnz
inc
das
or
xchg
adc
in
inc
and
ret
mov
enter
fist
mov
jae
in
jmp
js
xchg
fimul
sub
xor
fcom
adc
xor
aad
fiadd
mov
pop
pop
xchg
in
cmp
fistp
test
out
add
rcr
fld
aam
dec
pusha
repz
mov
or
and
mov
stos
movs
adc
xor
arpl
repz
pop
hlt
dec
aad
xlat
pop
mov
and
jne
inc
push
or
push
mov
das
mov
xchg
mov
pop
jmp
mov
mov
bound
stos
in
sub
sub
pop
jae
xlat
dec
retf
pop
retf
xor
inc
std
xor
icebp
push
mov
add
sub
push
not
sti
sub
xchg
and
add
sub
and
imul
lea
ins
mov
fsubr
xchg
sub
push
dec
dec
cmp
or
and
add
call
mov
jno
sbb
test
xor
push
pop
sahf
cli
xor
fcom
jl
mov
pop
and
jae
xchg
out
lock
dec
fs
jae
xchg
data16
mov
fdiv
aam
fwait
push
sub
cmp
ss
rcl
sti
push
cld
adc
lods
xchg
push
imul
ins
cmps
ret
fdiv
xchg
scas
(bad)
xor
xchg
les
push
stc
pop
retf
xchg
je
jbe
push
xchg
mov
mov
stos
mov
jb
imul
into
cld
adc
cwde
sub
push
push
mov
mov
cdq
stos
inc
mov
pop
xor
movs
xchg
sub
icebp
es
cmp
test
call
mov
inc
pop
stos
inc
adc
sbb
inc
div
arpl
std
push
xor
not
mov
int3
jmp
in
repnz
inc
scas
xchg
fld
mov
std
pop
aad
ins
add
outs
inc
push
es
push
adc
dec
dec
(bad)
jno
ins
jp
mov
mov
dec
scas
mov
dec
sub
movs
mov
or
jno
jnp
shr
jne
movs
dec
push
push
lods
and
dec
mov
dec
movs
mov
out
fld
and
cmp
(bad)
jmp
inc
xor
mov
or
loop
dec
sub
hlt
dec
(bad)
es
push
lea
retf
inc
push
out
push
mov
(bad)
or
call
mov
mov
or
sbb
sar
sub
aaa
inc
imul
pop
pop
adc
adc
cmc
cmp
fwait
inc
dec
push
lds
mov
cmps
xchg
jmp
mov
movs
mov
inc
nop
push
add
nop
push
push
sbb
jmp
add
xchg
cmp
mov
sahf
pop
add
or
jne
test
xchg
cmc
movs
push
test
mov
and
shr
cmp
xchg
enter
pop
pop
cli
jmp
dec
cli
sub
push
xor
sub
aas
jg
pop
pushf
fwait
out
cwde
std
dec
pop
out
repz
dec
fcom
ret
pop
imul
inc
jo
add
add
clc
cmps
push
mov
inc
lea
ffree
xor
neg
out
mov
fst
pop
lock
xchg
in
pop
test
mov
jb
jmp
int
push
adc
repz
sub
xlat
nop
mov
in
loope
jmp
add
popf
add
mov
inc
adc
clc
into
pop
ficomp
xchg
daa
inc
pop
inc
jb
and
xchg
mov
nop
(bad)
sar
call
shl
push
enter
fist
loopne
xchg
icebp
add
ret
and
out
fmul
mov
ss
xchg
inc
xor
jmp
cmp
and
rol
loope
retf
mov
jg
xor
inc
push
adc
stos
call
test
in
jb
mov
in
pop
adc
lea
xchg
call
mov
add
icebp
mov
cmps
scas
cmps
mov
cmps
es
fcomp
mov
outs
repnz
adc
movq
inc
or
sbb
or
mov
lea
ret
push
or
stos
outs
sub
jnp
rol
or
push
jecxz
popa
clc
cld
call
cmps
jge
sub
inc
sbb
cmp
pushf
lods
out
add
mov
ret
push
jge
not
icebp
aam
leave
push
daa
js
mov
push
lahf
inc
add
pop
sbb
out
in
pop
xchg
js
mov
in
out
clc
xchg
add
jbe
retf
mov
outs
pushf
ret
jb
je
daa
pop
push
or
fnstenv
add
jnp
inc
and
cmp
add
or
div
cmps
ins
outs
in
popf
adc
or
cs
cli
mov
add
pop
adc
pop
push
fidivr
push
xchg
(bad)
repz
pop
stc
xor
mov
pop
pop
jae
sbb
sbb
jge
pop
out
shr
(bad)
out
xchg
xchg
gs
bound
dec
jmp
sahf
fdiv
dec
clc
call
(bad)
js
inc
shl
loope
dec
je
ror
adc
hlt
jno
pop
adc
pmaxub
xchg
mov
addr16
jno
imul
das
je
lods
retf
outs
shl
int
mov
push
ss
adc
pop
and
jmp
inc
xlat
jne
test
mov
cmp
push
aam
sbb
cld
dec
int3
and
shr
mov
mov
test
je
xor
stos
cwde
out
cmp
inc
nop
mov
cld
inc
lds
jnp
mov
imul
xchg
(bad)
icebp
aaa
cld
pushf
mov
loopne
dec
retf
mov
cdq
mov
fwait
(bad)
mov
dec
mov
dec
(bad)
jns
sbb
push
out
jbe
mov
fldcw
mov
and
xchg
add
push
test
lock
retf
xor
outs
xor
mov
cmc
scas
mov
shr
dec
mov
sub
ret
jno
movs
pusha
mov
ja
out
mov
sub
mov
ret
sbb
pop
jno
mov
ins
(bad)
imul
aam
sub
mov
dec
fimul
cmp
lods
sbb
(bad)
jge
dec
inc
or
daa
push
mov
xor
pop
out
jge
dec
dec
hlt
int3
shl
pop
aas
or
stos
jnp
loop
pushw
xor
jg
mov
and
js
cmp
fcmove
das
stos
call
mov
add
cmps
aas
mov
pop
lods
mov
push
cmp
enter
(bad)
nop
call
loop
lea
in
mov
xor
stos
rep
adc
ss
das
push
xchg
jb
cmp
loope
retf
pop
xor
aaa
in
lods
cmp
(bad)
dec
(bad)
clc
popf
adc
dec
mov
jge
cmp
ds
push
jbe
out
repnz
(bad)
call
inc
daa
imul
loopne
popf
xor
jp
jno
loopne
sub
loop
xchg
fnstcw
mov
jnp
ins
sti
mov
jg
retf
mov
mov
xor
ret
in
fcom
mov
in
jns
mov
xor
mov
pop
pop
jbe
mov
out
cmp
mov
xlat
jns
mov
adc
sbb
mov
fld
pushf
pop
sbb
scas
cs
(bad)
iret
retf
loop
sub
jae
jno
jno
add
pop
cmp
xchg
xchg
jae
pop
les
or
lods
xor
sbb
xchg
sti
ins
in
mov
add
cmp
mov
scas
xor
dec
(bad)
xor
or
faddp
daa
jne
sub
mov
aas
clc
lds
jns
test
cmps
pop
mov
push
sbb
fwait
mov
cmp
cli
fadd
mov
mov
data16
sub
rcl
loop
mov
mov
adc
repnz
mov
jbe
cs
pop
lods
clc
shr
dec
sbb
test
lds
mov
pop
or
sbb
ins
or
pop
cmp
and
scas
(bad)
ret
inc
push
inc
fs
cmp
xchg
xabort
movs
jne
mov
jmp
ss
inc
bound
pop
in
test
ja
fcmovnu
dec
sar
pop
xlat
xor
and
xchg
mov
xlat
test
cmp
paddsw
jecxz
outs
mov
sub
out
mov
mov
and
and
test
pop
sub
jo
push
mov
mov
mov
push
ficom
in
mov
jp
enter
push
loop
mov
jg
gs
cdq
add
arpl
test
cli
sub
aaa
push
adc
dec
mov
out
jmp
mov
(bad)
dec
call
jo
push
push
popf
outs
mov
inc
cmp
mov
cmp
xchg
aas
adc
nop
out
sub
xchg
push
outs
ds
xchg
movs
cld
sub
cmps
sbb
xchg
pop
stos
leave
sub
pop
sbb
xchg
push
(bad)
daa
xlat
je
lods
xchg
lods
lea
cs
loopne
jecxz
inc
stos
inc
jmp
test
mov
push
mov
or
out
shl
aam
sbb
pusha
dec
mov
mov
xchg
movs
pop
pop
enter
dec
push
int3
add
mov
mov
imul
clc
cmps
cld
es
mov
daa
xchg
dec
ins
movs
pushf
sub
xor
dec
shr
mov
icebp
push
loop
outs
mov
pop
add
mov
add
std
dec
lea
jnp
push
imul
mov
ins
shr
jmp
sbb
add
test
push
cli
jne
fist
fld
xor
sbb
push
idiv
in
test
icebp
sub
fstp
and
rcr
xor
push
iret
mov
in
(bad)
gs
out
dec
loop
outs
(bad)
mov
lds
mov
neg
or
mov
loope
or
add
mov
push
test
xchg
pop
es
and
cmp
popf
ret
test
jb
jle
push
stos
lahf
jbe
mov
inc
test
(bad)
sbb
sahf
iret
mov
ins
fs
jne
pusha
ds
imul
arpl
scas
mov
cmc
xchg
aam
test
mov
fcom
pop
push
iret
scas
in
retf
adc
fbstp
(bad)
jo
dec
fidiv
push
xchg
xlat
jmp
int3
mov
push
je
stos
jecxz
inc
es
pusha
fadd
cmp
cmp
aaa
xlat
fwait
mov
popf
jl
xchg
push
inc
mov
popa
ins
dec
xor
jno
add
retf
cmp
cmps
and
out
mov
xchg
xor
in
and
pusha
mov
push
loope
and
cs
xchg
adc
cdq
dec
push
xor
data16
jae
xchg
retf
add
pop
dec
sahf
and
xor
mov
or
in
xlat
imul
pop
sbb
push
mov
push
cs
xchg
pop
pop
inc
xchg
lods
xor
add
xchg
test
repnz
fcomp
cmps
aaa
cmp
fisttp
test
es
sbb
out
and
std
movs
lahf
add
in
popf
mov
cli
retf
mov
out
ins
cmp
sbb
dec
leave
pop
das
nop
test
ret
add
out
mov
nop
ret
test
outs
xor
out
sti
dec
loopne
push
push
push
and
imul
lods
loope
sti
and
push
stc
cs
push
lea
pop
cmp
out
cmp
xchg
inc
or
or
inc
cmp
or
mov
pop
adc
es
fistp
adc
xor
or
mov
push
loop
je
mov
sub
pop
sbb
fst
mov
movs
(bad)
arpl
inc
inc
outs
stc
aas
mov
dec
mov
inc
cmps
and
test
call
in
push
mov
push
pop
ret
xchg
xor
or
lods
ret
int3
adc
and
pushf
cs
in
xlat
mov
pop
ror
push
(bad)
leave
dec
push
call
scas
fcomp
cs
cli
addr16
in
scas
data16
es
je
push
pop
and
cmp
push
cdq
into
jo
repz
cs
or
loop
fs
loopne
xchg
ret
xchg
mov
pop
mov
and
mov
fnsave
inc
mov
shr
jmp
mov
js
push
mov
mov
add
(bad)
fnstcw
fistp
lahf
clc
scas
mov
mov
jmp
mov
div
mov
call
outs
ins
mov
and
mov
inc
addr16
push
jge
dec
adc
mov
cmp
xchg
jnp
cdq
jnp
mov
xchg
pop
push
in
jl
outs
into
lock
cli
jp
and
push
inc
and
mov
pop
xchg
fstp
mov
test
jmp
xor
lds
and
push
hlt
rol
jg
mov
and
sbb
popf
xor
std
inc
arpl
inc
xchg
repz
mov
bound
sbb
inc
jbe
retf
mov
lea
inc
mov
test
xchg
mov
inc
pop
xor
jg
xchg
(bad)
lods
jae
jge
lahf
es
imul
outs
and
mov
rcr
clc
and
push
jbe
aam
jo
mov
call
add
xor
adc
jno
jp
mov
adc
fstp
add
mov
shl
ja
cmc
mov
mov
test
sub
outs
or
into
xchg
pop
adc
mov
cmp
int3
mov
mov
stos
out
xor
(bad)
pop
xor
sbb
mov
add
cwde
scas
fnstcw
dec
jmp
cli
das
pop
jnp
mov
jg
adc
mov
add
enter
pop
in
jnp
mov
jmp
fiadd
push
push
mov
imul
(bad)
fsubr
in
lock
fdivp
popf
(bad)
fcomp
fmulp
xor
mov
cmp
daa
(bad)
mov
or
movs
mov
sub
ror
inc
aas
mov
loopne
adc
(bad)
cmc
fistp
inc
ret
fs
ss
mov
inc
fs
adc
(bad)
bound
mov
shl
aad
cmp
xchg
sub
push
loopne
fstp
stos
std
sub
or
pop
sub
xchg
mov
add
mov
call
pop
sub
pop
push
frstor
jbe
fld
aam
out
jl
dec
(bad)
pop
mov
mov
dec
outs
sub
cmps
lock
adc
daa
pop
fcom
mov
out
push
in
in
mov
pop
add
mov
outs
push
loop
mov
(bad)
xor
add
push
addr16
jbe
in
push
jp
jmp
pop
aaa
xchg
mov
sbb
loopne
mov
out
loop
leave
not
inc
gs
or
xchg
or
ss
mov
jb
rcr
call
mov
and
aad
icebp
inc
sbb
int
gs
or
mov
adc
xor
mov
and
jb
jecxz
mov
in
xor
gs
push
push
push
pop
imul
ins
mov
sbb
pop
rcr
sub
scas
cmp
cmps
mov
push
addr16
jmp
mov
and
pop
push
jbe
jg
out
xor
xlat
ja
mov
mov
xor
jge
sti
arpl
push
iret
test
mov
idiv
mov
iret
xchg
out
(bad)
pop
jmp
pop
mov
push
xor
addr16
jbe
sbb
scas
test
push
retf
ja
jg
jb
clc
pop
mov
push
sbb
sbb
iret
and
jle
stc
call
mov
mov
fs
lds
sbb
pop
cmp
popf
sbb
sahf
stos
or
fld
xlat
xor
jbe
fidiv
xor
cmp
push
jmp
xor
sbb
jnp
call
enter
retf
xor
jmp
ins
cli
mov
fwait
xor
mov
xchg
inc
jl
push
fisttp
outs
add
pop
jns
mov
out
pushf
(bad)
jmp
xchg
jns
rol
push
mov
test
test
mov
push
xchg
pop
push
jo
out
addr16
fdiv
xor
rcl
xor
and
(bad)
test
out
cmp
pop
and
fs
jmp
sbb
shr
jbe
or
jne
adc
dec
xchg
lea
stos
cmp
stos
cmp
jecxz
push
and
test
pop
stos
fsubrp
std
in
aad
sahf
test
test
or
cmp
adc
jno
xchg
daa
pop
cmp
stos
cmps
cmps
mov
fisttp
lods
(bad)
icebp
(bad)
push
std
shl
out
sbb
stc
xor
or
push
mov
bound
popa
scas
stc
sub
mov
fadd
xchg
cmc
ret
imul
jmp
jns
inc
out
inc
mov
int3
add
jmp
sti
dec
mov
aaa
test
mov
enter
les
mov
lods
cmp
rol
mov
mov
push
dec
adc
cs
dec
sbb
or
test
cmp
cmc
pop
imul
jmp
fwait
pop
inc
test
pop
ret
fs
lea
sbb
pop
icebp
repnz
out
mov
lods
mov
jnp
jo
bound
lds
cmp
ret
push
scas
sbb
movs
retf
xchg
rol
lods
or
cmc
mov
leave
bound
outs
pusha
movs
inc
test
loop
xor
push
xchg
cmp
sti
test
add
rcr
mov
mov
pop
test
push
sub
cmp
mov
ins
test
xor
inc
ret
mov
sub
dec
xchg
adc
sar
dec
xor
mov
inc
ret
inc
jne
inc
cmp
mov
xor
add
inc
stos
out
adc
and
rol
loopne
pop
cmp
ds
xor
aaa
aaa
add
mov
xor
leave
or
sbb
jge
movs
ja
fidiv
shl
xchg
mov
jmp
cmps
movs
pop
xchg
mov
push
mov
bound
lea
fnsetpm(287
xchg
sub
in
cli
stos
or
mov
jmp
mov
lea
jae
mov
ins
shl
test
ins
mov
sub
call
dec
aas
aam
add
pop
fld
push
rcr
sahf
mov
ins
rcl
cmc
push
add
or
dec
out
les
ins
aad
popa
add
and
dec
das
and
mov
push
dec
sbb
mov
adc
pop
in
stos
sub
mov
mov
ins
sbb
or
fwait
mov
jae
ins
mov
and
std
in
jb
xlat
mov
push
adc
cmp
sbb
cmps
aaa
inc
or
and
in
add
mov
xlat
ins
mov
outs
add
movs
movs
jo
and
(bad)
sub
les
adc
mov
mov
out
stos
add
jns
sbb
and
inc
test
xchg
pop
sahf
imul
sbb
jno
inc
inc
mov
pop
mov
jns
mov
adc
in
nop
cmp
ret
fsub
nop
inc
fmulp
das
out
jnp
mov
not
sbb
xchg
imul
imul
pop
scas
cmps
(bad)
sub
mov
loop
cld
into
mov
jnp
mov
pop
mov
push
hlt
bts
adc
fwait
push
shl
cwde
jecxz
push
lahf
mov
aad
ja
mov
jno
in
ret
or
dec
push
pushf
or
mov
xchg
mov
in
imul
ds
push
lods
jae
fwait
xor
cmps
clc
jg
in
daa
arpl
cmp
rol
mov
mov
fst
push
xchg
pop
xchg
inc
sub
popf
in
xlat
adc
loopne
cmc
lahf
adc
jb
jg
jmp
dec
dec
jae
or
aad
(bad)
pushf
inc
dec
mov
xchg
xchg
data16
aaa
dec
fcom
mov
enter
mov
jb
div
pop
lock
sbb
mov
mov
push
outs
xchg
mov
mov
outs
add
call
out
ret
(bad)
push
pop
dec
or
cmp
adc
retf
sbb
or
sbb
sti
cmp
iret
mov
loop
lds
jnp
fs
hlt
stos
lds
or
hlt
cmp
xchg
clc
mov
push
mov
push
mov
daa
xchg
fs
clc
pop
sub
mov
or
mov
push
outs
cli
adc
jmp
push
ins
mov
pop
enter
fistp
cmps
sbb
clc
je
xchg
mov
popa
lods
cmp
int3
pop
mov
retf
mov
std
in
cmps
xchg
in
test
imul
xor
add
xadd
push
lock
mov
mov
outs
sbb
mov
jg
push
inc
popa
icebp
ss
leave
test
sbb
xchg
sub
punpckldq
leave
and
pop
test
(bad)
out
mov
jl
int3
in
sbb
mov
dec
sbb
je
xchg
cmp
ret
mov
je
push
ds
pop
mov
fdivrp
mov
sub
sbb
je
daa
fld
xchg
int
nop
(bad)
dec
loopne
dec
and
dec
sar
das
pusha
sbb
mov
sti
shl
xchg
je
adc
xchg
add
mov
enter
popf
add
retf
push
inc
jmp
sbb
sbb
imul
jb
dec
es
out
jne
jmp
xchg
aam
xchg
sbb
pop
mov
push
fsubr
retf
daa
mov
ret
cdq
jne
nop
scas
cmp
outs
sahf
aaa
xor
xchg
add
cmp
and
and
js
movs
mov
dec
loope
or
je
cs
mov
xchg
inc
push
jmp
push
in
(bad)
mov
(bad)
sub
sbb
mov
adc
sbb
sti
movs
mov
not
lahf
add
ds
loop
arpl
dec
aas
pop
aam
fld
and
jl
lds
es
dec
push
retf
jmp
aas
hlt
fnstcw
aas
push
cld
adc
(bad)
jp
push
inc
clc
scas
and
hlt
jo
cwde
call
mov
clc
stos
pop
enter
pop
les
aaa
int
imul
and
pop
out
leave
xor
outs
in
sbb
xchg
iret
and
ins
pop
cmp
fiadd
div
ins
pop
xchg
inc
enter
and
push
jns
test
or
jnp
(bad)
and
fild
loopne
mov
je
add
jae
(bad)
mov
(bad)
push
pop
jnp
aas
mov
pop
mov
cmps
xchg
adc
cmps
imul
call
sbb
leave
aas
jge
std
mov
xor
fist
scas
jnp
(bad)
(bad)
in
mov
imul
aaa
jbe
fcmovbe
call
sbb
xor
jae
sub
add
aad
popa
sbb
imul
push
outs
(bad)
xchg
cli
jb
imul
retf
aas
adc
mov
scas
fstp
arpl
es
ja
mov
fnstenv
adc
pop
fdivr
inc
arpl
mov
or
mov
sar
jae
mov
clc
xchg
int
mov
jae
imul
cmps
xor
push
push
xchg
push
xor
repnz
push
xabort
loope
pop
out
mov
mov
pop
(bad)
call
movs
or
loope
daa
sub
xchg
aad
pop
or
xchg
jns
out
push
jo
push
inc
push
(bad)
ffree
mov
test
xlat
ror
in
int3
ins
jno
pop
sbb
rcr
dec
stos
mov
sub
dec
xor
cdq
sbb
pop
pop
cmp
push
scas
retf
pop
dec
xlat
cdq
jmp
ror
pushf
and
mov
adc
test
ins
push
push
ret
jbe
add
imul
movs
mov
push
loope
mov
aaa
push
mov
int
cli
push
xchg
jne
jne
bound
std
dec
int
xor
cmps
scas
push
fsub
push
dec
sbb
push
int
(bad)
mov
xchg
adc
stos
test
sub
inc
mov
in
lods
mov
nop
in
jne
cmc
and
retf
mov
aad
sbb
dec
sbb
mov
pop
adc
les
call
mov
out
push
mov
je
inc
mov
sbb
push
(bad)
mov
or
in
mov
mov
mov
das
mov
sbb
fwait
sub
sub
dec
es
enter
inc
shr
push
aaa
lahf
dec
jmp
mov
jmp
stos
or
lahf
(bad)
out
mov
fadd
(bad)
xor
and
push
mov
shl
lods
xchg
xchg
cmp
jg
adc
ss
fiadd
fcomp
lea
adc
or
add
and
(bad)
push
push
inc
inc
out
(bad)
or
faddp
inc
shr
ds
pop
and
shl
(bad)
push
pop
je
daa
sbb
stos
or
std
adc
add
mov
aaa
push
stos
jmp
push
mov
mov
or
and
cmp
mov
scas
ss
push
arpl
test
sbb
aam
pop
mov
push
adc
sub
mov
bound
add
mov
je
mov
mov
jl
retf
rol
inc
adc
imul
dec
jo
jl
fldcw
cmps
lds
mov
rcl
(bad)
cmc
ds
pop
inc
shl
sub
jecxz
fcmovne
in
lods
sbb
daa
dec
inc
test
or
retf
loope
ds
adc
popf
movs
ins
repnz
fisttp
and
bound
dec
push
jmp
or
daa
rol
test
ss
mov
and
pop
ja
jmp
call
cmp
xchg
mov
fnstcw
retf
movs
into
push
and
(bad)
leave
and
add
cmp
mov
push
jp
fcom
sub
ds
push
adc
mov
in
mov
call
inc
mov
jmp
ret
add
vpshld
cmp
sar
mov
call
ins
mov
push
mov
mov
mov
pop
add
push
fsub
mov
gs
dec
sbb
jnp
push
mov
push
inc
push
stos
shr
mov
jmp
imul
inc
cmp
clc
mov
dec
scas
(bad)
rcr
mov
ins
test
jb
movs
(bad)
test
clc
sub
test
pop
arpl
nop
ja
sub
adc
jnp
mov
gs
pop
and
xchg
mov
add
xor
call
sbb
mov
pop
pop
inc
lea
xor
cmps
int
(bad)
and
pop
and
in
sbb
in
cmp
xlat
sub
sub
or
cmp
test
ss
fldenv
and
mov
inc
aam
xor
push
popa
xor
xlat
push
retf
inc
mov
jecxz
fidivr
aad
cli
cmp
ret
pop
cdq
mov
or
mov
cmp
call
cmps
xchg
(bad)
jae
sub
mov
rol
enter
inc
dec
popa
xchg
out
pop
dec
pop
pop
fcom
pop
jbe
imul
jmp
aam
retf
in
mov
dec
jnp
cmc
into
xchg
ins
mov
xchg
jns
fadd
es
push
mov
sub
imul
js
pushf
xor
test
cmp
jae
pop
es
mov
stc
fidiv
mov
imul
inc
jnp
xchg
mov
cmp
pop
cwde
inc
fdiv
jbe
outs
xor
mov
add
dec
mov
xlat
push
cli
stos
mov
jns
fsub
aaa
sub
ss
retf
dec
int
(bad)
add
xchg
fsubr
test
pop
addr16
loop
lods
sbb
outs
sub
and
push
shr
test
dec
js
fucomp
inc
jge
xchg
int3
inc
mov
ds
jmp
inc
aaa
inc
loop
in
xchg
in
daa
adc
xor
push
lods
jns
adc
loopne
push
fldenv
push
push
aam
loop
xor
jne
lods
test
dec
mov
sbb
pop
mov
ficomp
jg
ret
out
sub
jg
(bad)
dec
fdivr
enter
jmp
cs
cmps
or
les
js
int
cmp
pop
ret
inc
and
jbe
mov
lea
add
test
jmp
lds
retf
xor
xchg
lds
sbb
push
jp
jnp
dec
out
push
mul
icebp
movs
and
cld
push
sub
mov
xchg
arpl
sub
aaa
xchg
out
imul
sbb
in
ds
push
push
dec
das
aad
inc
ret
dec
shr
push
aad
sbb
inc
test
in
(bad)
js
mov
into
or
sbb
dec
into
mov
dec
nop
push
rcr
inc
fsqrt
int3
jmp
jae
dec
hlt
dec
outs
sbb
mov
or
rcr
loopne
sar
inc
cmp
hlt
ins
cmp
loope
cmp
mov
mov
dec
jl
dec
popa
and
mov
(bad)
iret
cmp
xchg
mov
mov
bound
(bad)
out
jmp
mov
sub
dec
fst
sbb
imul
fidivr
push
cdq
mov
fmul
mov
pop
fnstsw
not
or
sbb
cmp
push
popa
mov
sbb
(bad)
jl
in
dec
sbb
dec
outs
icebp
mov
lea
inc
mov
xchg
ins
adc
pop
jbe
fdiv
not
data16
in
xchg
mov
test
out
cdq
and
fst
daa
arpl
enter
dec
stos
lods
rol
jp
mov
add
repnz
sub
push
enter
sub
cmp
push
arpl
test
xor
cmp
and
xor
push
pop
(bad)
mov
add
retf
stc
cmp
sbb
cmc
adc
lods
stos
cld
cs
or
mov
xchg
and
out
lods
jl
push
pushf
ins
jae
(bad)
lods
fpatan
imul
ss
fdivr
inc
test
dec
sbb
in
lea
jge
push
bound
test
mov
adc
loop
inc
push
cmp
daa
pop
movs
xor
pop
and
push
jecxz
push
or
nop
enter
sub
mov
dec
repz
jnp
mov
mov
imul
ins
mov
mov
imul
sbb
add
mov
ins
lods
retf
repnz
adc
aad
cmp
sub
mov
ins
mov
or
test
sbb
fisttp
and
and
inc
xor
add
pop
ins
outs
adc
shr
imul
adc
jnp
jae
icebp
jbe
add
fisub
or
ds
dec
and
je
mov
inc
out
ds
push
imul
jmp
adc
jbe
xchg
in
ins
inc
fbld
mov
dec
in
push
sar
lds
mov
ret
xor
inc
in
call
sub
mov
test
inc
addr16
pop
addr16
call
sahf
daa
dec
out
push
mov
sbb
cmps
jp
adc
adc
adc
imul
not
sahf
aas
cld
mov
stc
push
xchg
jno
mov
xor
mov
push
test
lock
mov
mov
jnp
push
jb
fnstcw
push
rcl
sub
repnz
push
cdq
stos
xchg
mov
and
sbb
inc
cs
or
inc
std
dec
cli
add
mov
out
dec
scas
and
ja
jo
jmp
or
pop
bound
add
les
sar
in
xor
push
mov
mov
adc
aam
mov
mov
pop
imul
mov
push
cmp
gs
push
outs
imul
retf
mov
loope
rol
adc
add
call
mov
inc
push
fwait
out
mov
adc
stos
sbb
retf
xchg
ror
lahf
xchg
dec
adc
(bad)
or
xchg
popf
xor
mov
fs
repnz
mov
push
pop
cli
shl
imul
fs
mov
inc
mul
lahf
lss
scas
sub
push
fidivr
(bad)
sti
(bad)
push
imul
push
test
das
dec
push
neg
pop
dec
xor
fst
cwde
test
lods
xchg
mul
sbb
jb
add
retf
dec
dec
in
add
ret
dec
call
fisubr
mov
aaa
outs
(bad)
mov
or
and
add
and
add
or
and
loop
add
xor
je
pop
mov
popa
xor
cs
xchg
test
lock
cmps
adc
jmp
outs
gs
sbb
push
cmps
mov
or
push
test
(bad)
stos
je
stc
dec
daa
fst
daa
lock
sub
or
cmp
pop
push
dec
and
adc
inc
xchg
mov
fsubr
dec
mov
leave
xchg
mov
and
or
xchg
cmps
inc
retf
push
and
jbe
imul
sub
xchg
int3
test
push
add
push
dec
xor
adc
dec
adc
aam
mov
loop
es
loope
stos
pop
jb
mov
xchg
xchg
gs
in
arpl
sub
stos
movs
cmp
pop
dec
fsub
nop
mov
push
popf
aas
mov
ret
mov
mov
sbb
mov
sub
movs
xchg
mov
mov
aaa
icebp
inc
push
mov
idiv
fld
retf
pop
sbb
ror
jmp
out
popa
in
push
push
push
pop
add
adc
out
fwait
sub
retf
inc
les
fisub
sbb
dec
pop
cmps
loop
popf
add
outs
call
icebp
push
xor
sub
pop
mov
inc
pusha
imul
fld
call
mov
cmp
inc
lds
cld
xchg
gs
ins
movs
rol
jae
or
popa
movs
xchg
loopne
loop
push
sub
mov
inc
sub
dec
pop
add
jne
mov
into
(bad)
push
movs
cmp
retf
movs
cmp
(bad)
mov
cs
jge
out
jae
loope
(bad)
add
xor
pushaw
push
dec
pop
call
(bad)
push
pop
bound
push
or
das
pop
call
lock
ins
dec
fs
push
fs
mov
sub
mov
xlat
and
cmc
jp
mov
in
sti
pop
pop
fimul
push
fisubr
cdq
fstp
retf
or
inc
push
push
add
push
int3
jae
not
stos
fist
xchg
inc
pusha
cmc
es
jecxz
xchg
cmp
sar
call
retf
dec
pop
add
neg
sbb
gs
rcr
pusha
mov
sti
mov
pop
in
jae
sub
inc
(bad)
inc
xchg
aas
test
ins
out
jle
or
ret
mov
test
(bad)
ds
xchg
mov
adc
clc
aaa
adc
add
retf
loope
(bad)
pop
ins
out
push
xchg
push
sbb
cmps
jle
add
cmp
and
cs
fwait
pusha
jmp
mov
mov
add
dec
repnz
aad
adc
inc
mov
and
(bad)
cld
cmp
je
pop
adc
cmp
pop
into
inc
add
ds
dec
mov
lock
das
jmp
and
jmp
jge
xor
push
pop
push
dec
lds
adc
ficomp
or
sbb
pop
push
clc
sub
mov
dec
sti
cmp
mov
pop
push
pushf
sub
and
sub
and
mov
pop
jbe
xchg
jae
push
clc
adc
fisttp
cmp
inc
sbb
(bad)
test
mov
in
dec
loop
out
js
sti
loope
and
fadd
out
and
xchg
jno
ja
imul
cmc
or
xor
ins
retf
cmp
pop
fs
ins
jo
cmps
xchg
pop
cmc
xchg
xor
in
adc
and
enter
or
call
in
ins
loope
mov
xchg
scas
sbb
movs
dec
faddp
adc
out
cmc
outs
inc
sub
imul
push
xchg
arpl
scas
loop
out
mov
js
mov
scas
jle
jbe
mov
inc
push
push
je
(bad)
repnz
or
call
push
push
push
sbb
mov
jl
inc
xor
inc
sbb
jmp
fist
push
loope
fidivr
es
rol
lods
std
xchg
wbinvd
icebp
in
adc
sahf
mov
adc
adc
mov
mov
jbe
adc
sub
add
data16
cld
idiv
and
xchg
repnz
aas
push
jb
fsub
outs
fild
jmp
lods
mov
das
in
dec
xchg
in
int
inc
inc
cli
sub
fwait
or
enter
add
ret
sub
inc
popf
mov
jl
jg
inc
cmps
das
outs
sub
(bad)
jmp
ds
ret
xchg
dec
arpl
and
xor
jae
or
and
mov
scas
pop
mov
xor
addr16
(bad)
sub
push
mov
nop
sti
retf
loopne
push
inc
loop
movs
retf
jg
fnsave
mov
ret
ret
sbb
xor
dec
arpl
cmps
add
and
fwait
jo
xlat
ss
or
out
ror
movs
aad
les
pop
mov
mov
fisttp
push
mov
pop
nop
(bad)
fadd
inc
loop
xor
mov
pop
dec
lds
les
pop
xchg
sbb
pop
ins
dec
das
push
mov
sahf
mov
mov
mov
imul
nop
mov
mov
loope
fadd
je
push
adc
jmp
xchg
jne
jae
push
mov
arpl
fisubr
xchg
leave
push
dec
(bad)
pop
push
pop
jne
scas
jmp
inc
gs
dec
mov
daa
imul
(bad)
jle
pop
push
adc
rol
push
push
sub
sti
mov
cmp
push
fimul
fstp
mov
mov
mov
xchg
lahf
adc
cmp
ins
pop
xor
pusha
outs
xor
and
lock
cs
(bad)
out
jb
not
xor
push
inc
imul
mov
mov
loope
sub
fucom
out
sahf
fld
out
stos
xchg
mov
jmp
jge
lea
int
stos
xchg
xor
leave
push
push
pop
sbb
loop
dec
cmp
dec
fisttp
stos
sahf
ficom
leave
push
xchg
mov
mov
retf
pusha
stos
inc
jno
mov
fld
pop
out
int3
mov
pusha
aaa
inc
mov
sbb
and
(bad)
aam
loop
pop
sub
jno
stos
call
cmc
rol
mov
sti
add
sub
cmp
sbb
mov
adc
push
mov
bound
call
or
in
pusha
sbb
sti
ds
test
jge
cwde
sbb
icebp
inc
and
mov
and
adc
mov
ja
push
push
in
ds
jmp
xchg
lock
loope
mov
inc
and
sahf
fbstp
out
and
pop
dec
(bad)
jmp
stos
adc
ins
ins
mov
pop
shr
aaa
mov
mov
pop
int
fs
dec
jae
xchg
lods
fsubr
retf
dec
shr
mov
bound
xchg
xlat
mov
sub
sub
sbb
ins
cmp
mov
cli
and
in
movs
ss
mov
(bad)
cmc
push
and
pop
xchg
mov
es
jmp
sbb
or
sub
push
aam
mov
mov
repz
rcl
sbb
xchg
aad
cwde
std
nop
adc
sti
test
sub
mov
(bad)
adc
cmp
(bad)
out
cmp
cmp
ds
adc
popa
fild
sbb
(bad)
pushf
sub
jg
aam
data16
sub
inc
stos
imul
push
pop
inc
gs
mov
test
stc
sub
std
push
dec
shl
mov
scas
jge
xchg
inc
push
sbb
or
or
push
inc
aad
mov
cmp
sub
push
jo
aas
sub
inc
loopne
mov
cs
fwait
mov
sbb
pop
inc
xor
push
fst
mov
ins
inc
sbb
rcr
and
inc
das
in
ret
hlt
jne
mov
or
enter
cli
sahf
jno
or
adc
sbb
jp
clc
mov
lea
(bad)
cmc
cmps
sahf
test
or
dec
xor
pop
push
adc
loop
jecxz
push
push
dec
inc
cmps
ret
vrcpps
das
popa
dec
out
sub
pop
fdiv
add
loop
xchg
mov
fs
out
in
lahf
xor
lea
jmp
dec
cs
and
add
shl
xchg
outs
mov
push
xchg
mov
pop
push
outs
mov
dec
and
cmp
neg
sub
dec
enter
mov
sbb
dec
shl
sbb
sbb
das
jge
or
add
daa
les
mov
pop
or
cwde
mov
inc
cdq
std
xor
cmp
dec
sbb
xchg
cmp
jns
hlt
or
jne
sub
add
and
ds
add
cmps
rcl
test
(bad)
pusha
cmc
mov
fcom
jl
mov
dec
mov
add
push
mov
stos
sar
repz
je
out
and
mov
int3
or
cmp
pop
adc
push
xor
push
adc
mov
(bad)
mov
lahf
call
shl
rcl
mov
test
stos
les
inc
jnp
jns
mov
aas
rcl
xor
arpl
ret
hlt
xor
mov
cli
(bad)
hlt
jle
fcomp
mov
mov
test
test
push
push
jmp
and
out
sub
pop
stos
add
jnp
int3
inc
rcl
mov
xchg
gs
data16
shl
out
jmp
pop
(bad)
stc
jmp
pop
pop
je
les
adc
add
call
int
and
inc
mov
mov
sbb
int3
jl
jno
cmp
call
sbb
cmc
in
dec
lahf
mov
cmp
pop
ret
jne
fild
mov
pop
push
loop
repz
aaa
push
test
push
mov
jle
sub
loopne
scas
jbe
mov
or
js
and
ja
nop
mov
jns
push
and
adc
cli
pop
and
call
xor
scas
cwde
inc
fstp
jmp
inc
xchg
dec
mov
xor
div
or
(bad)
jno
jbe
lds
sete
xchg
dec
fdiv
inc
idiv
nop
cld
imul
(bad)
sbb
jg
into
inc
shl
outs
lods
mov
test
mov
sar
stc
aad
sar
jno
ds
mov
not
xor
pop
and
cmc
mov
stc
loop
int
daa
fstp
rcr
mov
and
mov
enter
xor
imul
jecxz
mov
mov
aad
mov
cmp
call
movs
iret
imul
test
pushf
out
imul
lods
inc
jns
in
cmc
adc
in
ins
sahf
nop
pop
xchg
popa
adc
aad
adc
retf
aad
adc
xlat
pop
pop
arpl
int
mov
dec
lods
ret
mov
mov
aaa
ins
cmc
pop
sahf
es
out
sbb
pop
pop
jl
mov
mov
fsub
ror
xchg
mov
hlt
jp
aam
push
jmp
cs
fstp
loop
addr16
mov
pop
movs
inc
xor
bound
pop
mov
pmaxsw
mov
dec
xor
inc
je
pop
rol
push
test
adc
fst
xchg
(bad)
neg
aas
fld
out
movs
jno
adc
xchg
clc
shl
arpl
jne
sbb
cs
mov
inc
adc
out
rcr
push
cmc
xor
test
push
fidiv
loope
sbb
push
shl
xor
adc
xor
jecxz
ror
mov
jge
mov
sbb
mov
mov
sahf
xchg
pop
xchg
mov
fsubr
sar
int
pop
sahf
ins
cmp
imul
test
mov
nop
mov
add
sbb
pop
int3
in
loop
xchg
or
or
jbe
xchg
mov
mov
lahf
add
out
(bad)
gs
jo
in
cmc
and
pop
cmp
jno
in
adc
mov
enter
pop
rol
cmps
sub
repnz
stos
mov
inc
adc
cmp
bound
int
popa
test
adc
out
push
jmp
push
daa
(bad)
int3
sub
xchg
fisttp
jl
sub
pop
clc
aas
add
pop
adc
test
mov
ret
mov
adc
mov
dec
or
and
mov
and
sti
sub
repz
leave
stos
xchg
add
mov
mov
mov
daa
ficomp
xchg
std
dec
xchg
xchg
in
xchg
stos
mov
jl
lahf
call
retf
and
adc
pop
add
push
pop
cld
xchg
xchg
xchg
outs
push
test
or
arpl
xor
or
and
mov
sbb
test
sbb
enter
inc
xor
push
loope
hlt
mov
jmp
mov
ss
jge
add
jne
mov
pop
movs
ja
stos
mov
std
mov
jge
inc
pusha
or
mov
lods
xor
aas
and
push
inc
or
sahf
mov
or
ret
mov
es
mov
mov
aas
or
aad
xchg
in
push
mov
dec
mov
scas
pop
inc
cmp
xchg
push
mov
stc
sub
movs
mov
pop
shl
es
or
lea
ins
jg
pop
adc
mov
or
push
push
cmp
jecxz
push
cwde
lods
ins
xchg
sbb
ror
mov
or
dec
xor
jmp
jne
cmp
int
jno
aad
sbb
adc
push
jnp
add
push
int3
ret
pop
cli
cmp
or
(bad)
repz
sub
fldenv
cdq
xchg
pop
adc
loopne
aad
dec
ret
and
pop
out
inc
jo
push
inc
mov
sbb
mov
je
dec
inc
xchg
xlat
retf
fimul
xor
cmp
imul
and
dec
es
ds
test
push
scas
mov
jb
out
rcr
data16
pop
rcl
adc
stc
arpl
scas
mov
mov
fcom
inc
cmp
gs
push
push
mov
sar
mov
movs
shr
dec
sub
loop
dec
idiv
add
sti
xchg
mov
sbb
es
inc
mov
mov
or
scas
xchg
repnz
mov
jo
into
shr
jmp
push
dec
sar
lock
push
fistp
loope
push
je
std
sub
mov
add
aam
xchg
pop
sbb
jb
cwde
stos
pop
in
inc
xchg
aam
test
add
popf
sbb
pop
inc
sub
out
stos
test
inc
ds
mov
imul
push
test
popf
cli
test
shl
sbb
adc
sub
xchg
aad
outs
xchg
leave
loop
jecxz
push
mov
jnp
sub
and
push
mov
vpsrlw
cmp
mov
adc
repnz
inc
std
js
inc
mov
mov
mov
cmp
adc
and
mov
dec
xchg
xchg
pop
ins
pop
mov
repnz
ja
jle
shl
mov
push
or
jmp
sbb
das
movs
aaa
add
and
test
aad
imul
sub
shl
arpl
leave
jnp
inc
leave
mov
pop
out
push
aaa
mov
stos
test
call
fcomip
dec
clc
jecxz
sub
cmps
xchg
aad
sbb
retf
sti
rcr
retf
jmp
or
push
outs
sub
ror
inc
ss
adc
push
push
pop
outs
jmp
fistp
mov
jmp
xchg
inc
sbb
sahf
cs
cmp
std
sbb
sbb
mov
(bad)
jge
ror
push
jmp
xchg
mov
mov
jne
mov
sub
add
push
mov
jo
xor
addr16
dec
fcmovb
inc
mov
or
adc
cmp
ret
data16
xchg
fmul
cmps
add
ficom
mov
test
xor
mov
int
test
jmp
stos
dec
mov
stos
xchg
stos
pop
mov
das
stos
popa
add
mov
leave
pop
xor
push
mov
inc
and
xor
adc
ret
fisubr
xchg
shrd
pop
fisubr
fld
in
xchg
iret
sub
pop
aam
call
leave
jo
icebp
data16
xor
movs
imul
dec
sbb
ins
int3
(bad)
cmps
scas
sbb
jmp
out
adc
xor
sbb
out
push
int3
jmp
ret
cmc
out
in
xchg
fdivr
push
pop
sahf
fbld
(bad)
cmp
stc
cmps
aaa
push
popf
into
aas
retf
jp
sbb
ja
aaa
nop
pop
and
mov
mov
in
call
xor
out
mov
dec
ss
mov
mov
das
mov
mov
pop
mov
adc
fwait
sub
cmps
test
movs
neg
call
in
cmc
mov
out
lea
(bad)
call
cli
jg
pop
rcl
retf
jge
lods
pop
repnz
pusha
fld
sub
cmp
hlt
fcom
mov
data16
add
pop
mov
sub
push
ds
pop
pop
fsubr
jbe
ja
and
jae
ja
hlt
mov
xor
add
ins
push
mov
inc
and
jmp
jp
scas
jge
jmp
sbb
rol
pusha
add
mov
(bad)
(bad)
fimul
jmp
cs
test
pop
cmp
add
cli
dec
loope
dec
dec
and
gs
cmp
ss
icebp
les
in
xlat
inc
mov
xor
jb
(bad)
jmp
mov
mov
push
cmc
out
stos
iret
jb
xchg
mov
pop
pop
ffree
repnz
adc
inc
add
retf
mov
xchg
scas
arpl
push
mov
ret
out
push
or
test
fwait
das
lock
or
pusha
cmp
loope
hlt
scas
push
cmps
add
js
ror
ror
rol
ja
xchg
out
sar
mov
lock
or
jnp
enter
adc
outs
fcomp
ret
adc
aad
mov
push
ret
mov
sbb
stc
cmp
dec
movs
pop
xor
out
adc
dec
aas
clc
fild
xor
out
ins
jge
and
mov
fsubr
push
je
int
mov
xlat
or
icebp
sub
push
sahf
es
ins
fadd
mov
sub
cdq
aam
jecxz
clc
out
push
mov
mov
dec
inc
mov
add
ret
push
in
dec
stos
imul
xchg
imul
aas
out
imul
cwde
imul
cmp
jmp
iret
cld
ror
(bad)
xor
push
jp
sub
mov
out
pop
inc
add
ins
inc
icebp
aam
mov
and
shl
dec
cmc
push
pop
inc
inc
dec
jecxz
fmulp
jecxz
push
jno
dec
sbb
loope
xchg
sbb
jbe
fmul
out
xor
mov
pop
mov
or
dec
sbb
das
or
dec
call
gs
lods
and
jns
lods
popf
inc
cmps
mov
rcr
imul
mov
mov
daa
jmp
lods
les
stos
outs
std
adc
lods
xchg
jecxz
pop
ja
push
inc
xchg
ins
in
lods
adc
cld
sub
sub
mov
pop
adc
mov
mov
sti
lods
inc
and
hlt
daa
loop
dec
mov
scas
jo
cmp
bound
fs
mov
dec
cmp
movs
cwde
fsubr
sub
jp
inc
idiv
adc
lods
lods
arpl
pop
jmp
jne
arpl
leave
imul
pusha
or
jle
jne
dec
jmp
sub
out
jne
call
mov
(bad)
xchg
push
pop
ss
shr
adc
inc
imul
pop
ror
shl
sti
push
bound
adc
push
fmul
jmp
ins
iret
scas
fwait
sub
and
jmp
lea
mov
mov
mov
hlt
mov
mov
and
outs
mov
adc
sub
outs
sbb
and
stc
adc
or
mov
mov
jmp
test
adc
dec
ss
xor
pop
mov
arpl
mov
jne
dec
stos
in
push
das
shl
cmps
jmp
mov
das
and
sub
test
adc
test
sar
into
mov
jb
(bad)
mov
push
and
retf
xchg
cmc
pop
pop
add
push
in
bound
pop
pop
sar
pop
or
fcmove
popf
xor
push
xchg
loop
jl
jae
xchg
sub
mov
mov
mov
mov
icebp
add
push
sti
and
(bad)
out
mov
jae
xchg
in
sbb
scas
push
out
lds
jg
repnz
inc
mov
push
test
sbb
call
push
stc
xor
mov
mov
pop
imul
and
pop
enter
fnstenv
stc
jbe
add
pop
fs
loop
or
retf
(bad)
nop
dec
jge
mov
xor
loop
cmc
xor
dec
fldcw
or
bound
push
pop
pop
stos
cmc
dec
fs
fild
fldenv
out
pushf
cli
mov
shr
mov
movs
xchg
xor
shr
cmp
inc
jle
not
push
daa
aad
xchg
repz
mul
mov
in
mov
or
out
ret
add
add
push
cmp
jnp
(bad)
movs
sbb
push
adc
dec
movs
add
mov
fnstcw
inc
adc
and
js
scas
jp
mov
sbb
mov
pop
imul
adc
and
or
jb
mov
sbb
jmp
jne
jnp
in
cli
sub
xchg
ins
ss
ja
call
add
jae
or
jae
or
pop
mov
xor
push
repnz
jnp
sbb
clc
sub
repnz
add
not
dec
call
stos
test
ins
cmps
(bad)
pop
inc
jge
pop
fsubr
sbb
frstor
test
lods
loop
and
jle
test
test
add
popa
fs
jge
idiv
cmps
int3
push
mov
adc
mov
gs
je
jnp
sbb
mov
inc
scas
jnp
stos
or
mov
mov
rol
test
dec
push
push
xor
(bad)
arpl
(bad)
add
test
pop
(bad)
xchg
xor
lods
ins
movs
loope
int
and
mov
jmp
jecxz
dec
retf
push
neg
cmp
rcl
add
adc
outs
or
or
aad
cmps
clc
jg
aaa
inc
dec
call
sahf
push
call
jae
add
rcl
inc
sbb
and
pop
cdq
fbstp
xchg
repnz
inc
and
mov
mov
cs
dec
fs
pop
inc
das
sub
jg
das
xor
pop
or
xchg
xor
std
pushf
jmp
lods
xor
dec
pushf
aad
sub
out
je
pusha
ret
cmps
or
gs
push
adc
xor
fld
int3
in
mov
fsub
jne
fst
int3
xor
xchg
xor
xor
retfw
add
ror
fs
pop
ret
sti
adc
(bad)
jmp
aaa
sbb
or
nop
jno
lahf
aam
test
in
rcl
jno
push
sub
mov
and
push
call
(bad)
scas
shr
add
cmp
push
push
xlat
inc
aad
sbb
mov
(bad)
es
mov
ss
sub
mov
inc
outs
aam
xlat
fsub
repz
jbe
pop
jmp
fwait
ja
(bad)
aad
jo
add
dec
pop
fld
sub
scas
mov
jns
gs
ret
or
out
test
loope
xor
ins
pushf
jns
clc
pop
data16
in
loopne
adc
rol
mov
mov
ins
(bad)
push
sbb
shl
add
ficom
sub
sbb
sub
out
push
xchg
mov
retf
fnstenv
adc
aam
mov
push
imul
xchg
mov
sbb
inc
lock
mov
int
sub
(bad)
shl
(bad)
(bad)
sbb
sbb
leave
and
(bad)
lods
pop
ja
mul
ficomp
ds
push
ret
add
xor
inc
push
out
push
imul
jg
shl
adc
push
or
mov
cmps
xchg
push
mov
inc
rol
sar
and
mov
(bad)
imul
jns
pop
data16
jne
test
jnp
js
jae
or
jnp
push
bound
leave
push
sub
sub
mov
pop
fbstp
mov
pop
jo
gs
dec
xchg
cmc
inc
aas
xor
aas
fcom
daa
ret
fs
jl
adc
(bad)
pushf
(bad)
jae
ret
fst
fcmovu
and
add
(bad)
in
add
aas
lock
lds
stos
cmp
mov
cli
mov
sbb
stos
jae
cli
and
in
aad
push
adc
inc
movs
xchg
mov
(bad)
jmp
fldlg2
mov
(bad)
push
dec
fsub
mov
sub
neg
(bad)
push
inc
mov
cmps
mov
dec
sbb
rcr
sahf
mov
push
cwde
addr16
arpl
and
mov
(bad)
mov
xor
dec
sbb
and
and
or
pop
sbb
mov
or
test
adc
daa
inc
out
outs
and
jae
imul
adc
sub
push
daa
mov
(bad)
aad
loopne
push
pop
cmc
pop
aam
popa
call
mov
cmp
stos
mov
xchg
(bad)
push
ret
mov
jo
std
sbb
nop
pop
aam
sbb
retf
ins
push
call
je
(bad)
in
repnz
jmp
lea
sbb
cdq
test
dec
aas
and
idiv
inc
push
sub
das
jg
and
pop
stos
inc
sbb
dec
pop
icebp
inc
stos
fnstcw
mov
dec
inc
xchg
xchg
sub
in
dec
add
mov
or
push
and
mov
daa
sub
(bad)
pop
push
xor
pop
fldenv
sbb
and
popa
repz
xlat
mov
lods
or
or
mov
inc
xor
ret
into
loopne
mov
xlat
push
add
and
(bad)
lds
and
leave
popa
mov
mov
xchg
scas
bound
sbb
movs
daa
aam
sbb
adc
add
cmp
jg
push
push
jbe
retf
push
fist
ds
adc
push
mov
in
adc
lods
push
add
test
je
fadd
xor
fwait
sub
mov
sbb
test
push
pop
add
mov
mov
pop
adc
fsubp
cmc
movs
leave
addr16
jmp
ins
je
pop
and
mov
out
scas
push
jmp
lea
ds
adc
jae
and
push
mov
jne
popf
mov
sbb
(bad)
shr
or
sub
dec
inc
ret
fld
xchg
ins
ds
jle
and
mov
addr16
je
cdq
in
out
inc
imul
xor
fcmovnu
scas
jne
imul
or
mov
xor
test
out
iret
xchg
stos
into
cmp
push
sbb
cmps
pop
or
call
xlat
fs
cli
inc
add
sub
mov
outs
push
dec
sub
mov
adc
add
mov
ss
dec
add
inc
lods
test
ins
push
mov
mov
or
sbb
sbb
cmp
in
pop
mov
mov
js
les
and
imul
pop
test
or
mov
sahf
dec
retf
inc
jnp
cmp
leave
pop
jmp
scas
mov
push
mov
mov
sub
mov
fcom
daa
test
pop
jp
lods
aas
fs
xchg
(bad)
int
mov
mov
inc
mov
mov
pop
test
jmp
outs
mov
es
dec
rcr
lock
or
sub
jo
push
push
rol
ret
dec
cmp
cs
outs
xchg
xchg
ror
outs
aas
and
fcmove
jge
mov
sahf
push
jbe
fs
pop
dec
dec
mov
jns
cdq
test
dec
int
sub
imul
daa
int
cmps
jge
mov
jmp
(bad)
sub
arpl
adc
fnsave
movntq
out
pop
jnp
sbb
popa
div
loope
lods
mov
or
sahf
cmps
xor
mov
retf
or
outs
mov
fwait
push
mov
sub
and
fbstp
inc
fptan
pop
ret
sar
dec
jne
lea
mov
xchg
xor
push
aam
and
fisub
movs
xchg
xchg
icebp
mov
jnp
aam
test
mov
pop
pop
jg
mov
cmp
mov
ret
adc
push
sbb
icebp
jae
sub
mov
shl
sahf
lock
aaa
inc
ins
mov
pop
sbb
loopne
xchg
(bad)
mov
or
stos
sub
or
cmp
add
and
repz
ss
pop
pop
(bad)
pop
pop
xor
sbb
pop
ss
jns
pcmpeqw
cli
cmp
mov
pushf
retf
pop
xor
je
push
push
cmps
sub
fiadd
shr
push
scas
cmps
add
(bad)
mov
clc
test
mov
dec
and
sar
pushf
call
jp
aaa
push
jnp
pop
or
loope
jle
mov
fisttp
cmp
js
cld
pop
xchg
ret
inc
dec
fs
fwait
sbb
fstp
inc
push
popa
lock
xchg
adc
or
jne
bound
rcl
dec
mov
loope
xchg
jmp
and
js
push
lods
cmps
ins
sub
jl
pop
test
cli
ins
mov
mov
add
mov
call
xchg
fldenv
and
jbe
(bad)
mov
jnp
mov
int
pop
imul
dec
(bad)
jnp
xchg
loope
gs
pop
xor
stos
ficomp
cmp
jmp
fstp
call
rcr
into
and
xchg
xchg
ds
test
ja
outs
scas
inc
pusha
icebp
inc
push
or
mov
pop
(bad)
loop
adc
pop
xchg
enter
jle
fs
fild
push
or
pop
movs
das
jmp
or
sbb
sti
and
dec
and
sar
mov
(bad)
int
(bad)
mov
fidiv
movs
ss
add
add
jno
(bad)
(bad)
pop
push
sti
or
sub
mov
mov
jge
hlt
cmp
xor
mov
jg
mov
in
imul
test
jl
cmp
push
xchg
fdiv
dec
adc
or
(bad)
(bad)
adc
stc
xchg
adc
dec
popf
xor
daa
je
xchg
not
push
jbe
cmp
dec
dec
jmp
cmps
mov
in
ficom
sbb
xor
scas
(bad)
fs
pop
fidivr
lock
push
call
lods
cmp
in
(bad)
xchg
in
fcom
inc
mov
sub
out
sahf
stc
fist
push
(bad)
(bad)
call
arpl
inc
mov
pop
outs
cmc
cdq
push
xor
jmp
xchg
cmp
jo
int3
inc
hlt
nop
out
mov
cmc
into
jae
fist
rol
or
sub
pop
(bad)
ds
mov
std
(bad)
pop
push
push
dec
xlat
adc
xchg
adc
fistp
mov
sti
cmp
cmp
mov
adc
mov
sar
daa
push
retf
push
or
dec
xor
cmp
inc
xchg
push
mov
jbe
dec
inc
dec
push
mov
and
xchg
retf
dec
push
mov
add
pop
push
jmp
fidiv
adc
cmc
xlat
dec
jbe
dec
cmp
pop
js
jae
sbb
movs
jl
mov
and
ret
push
sub
shr
stos
mov
in
sbb
cdq
(bad)
push
jmp
pop
adc
xor
sub
call
movs
sub
adc
scas
sub
xor
(bad)
shl
xor
in
pop
ret
clc
lea
out
stos
cmp
scas
xchg
and
aas
sbb
inc
loopne
pop
jbe
rcl
xor
sbb
mov
push
fisub
pop
retf
adc
mov
outs
fmul
dec
sahf
cmp
retf
and
into
cs
cmp
xor
cmp
and
push
jle
and
bound
pop
cmps
fwait
in
lods
mov
jmp
mov
xor
in
sub
cmp
bound
sub
xor
push
mov
dec
adc
pop
in
cmps
xchg
push
idiv
dec
add
pusha
test
scas
push
outs
mov
push
shr
inc
dec
cmp
sbb
push
cmps
stos
jecxz
or
aas
and
movs
xchg
repz
ja
jmp
shr
xor
cmp
inc
jmp
lods
test
aaa
or
add
ins
mov
push
push
sub
in
and
movs
inc
cmps
mov
xor
dec
adc
xlat
cld
adc
xchg
sar
int
test
stos
mov
fisttp
shr
aad
jne
stos
call
or
outs
pop
mov
inc
not
push
mov
mov
aas
xchg
adc
pusha
call
push
xchg
mov
lea
push
inc
(bad)
lea
(bad)
xlat
jp
xor
test
idiv
cmp
imul
fwait
in
mov
jbe
cmc
push
pusha
mov
push
push
imul
pop
mov
xor
cs
xlat
aad
data16
clc
repz
pop
xor
and
inc
xchg
stc
out
popf
sub
sub
mov
or
xchg
rep
stc
xchg
add
in
movs
mov
out
sbb
xchg
jno
xlat
clc
and
mov
in
repnz
mov
(bad)
mov
mov
xor
adc
(bad)
not
jp
cmps
push
popa
cmp
scas
aad
call
pop
inc
dec
ss
push
mov
out
dec
stos
jne
imul
push
mov
call
xchg
sub
outs
xor
and
pop
sub
pop
jle
popf
enter
pop
cmp
loopne
and
in
xchg
ss
cmp
in
xchg
dec
pop
mov
sub
or
div
pop
gs
es
loop
jmp
mov
call
push
pusha
push
fidivr
mov
inc
add
add
sbb
add
push
fnstsw
jnp
repnz
xchg
(bad)
cmps
ret
div
and
xchg
aas
push
cmp
sbb
ins
repz
sub
(bad)
jl
sub
pop
inc
cmps
pop
cld
mov
mov
and
sub
pop
outs
or
inc
mov
mov
pop
push
push
or
push
fwait
test
popf
push
fnstenv
ja
mov
sub
push
adc
ret
mov
xor
or
aaa
push
mov
lea
add
and
shl
or
mov
stc
outs
lahf
xor
push
adc
add
jp
arpl
jnp
inc
movs
mov
fwait
xor
cmp
or
ds
fcmovu
stos
fimul
ret
mov
cmp
dec
jmp
pop
mov
pop
in
or
xlat
xor
or
scas
leave
cmp
bound
(bad)
push
inc
xor
dec
pop
ret
cmps
clc
stos
rcl
or
nop
sti
addr16
paddsw
pop
lods
pop
or
imul
dec
fld
pop
mov
addr16
cmp
(bad)
fsubr
sbb
(bad)
inc
out
cs
cli
pop
dec
mov
mov
lahf
xor
cmps
sbb
push
xor
ins
jge
pop
xchg
outs
retf
ins
arpl
cmp
imul
cvtdq2ps
repnz
inc
jecxz
push
(bad)
mov
cmp
mov
rol
mov
add
xlat
or
dec
sub
dec
fisubr
ds
out
mov
or
ret
push
loope
icebp
es
fiadd
fld
cld
bound
cmp
dec
shl
sbb
adc
sbb
mov
cmps
pop
daa
push
adc
jae
ds
xchg
pop
jge
jo
rcl
push
mov
xchg
xor
xor
mov
in
dec
iret
leave
clc
out
dec
aas
in
sub
fs
es
xor
inc
cli
mov
mov
(bad)
std
into
jecxz
jp
inc
test
popa
sbb
leave
inc
dec
(bad)
hlt
xor
cld
mov
popf
and
div
add
(bad)
das
xlat
imul
hlt
lods
lds
xor
or
mov
dec
or
cdq
retf
fstp
jb
cld
push
lock
js
cmps
call
or
(bad)
sub
aad
jo
int
adc
or
xchg
in
cmp
sar
jnp
dec
pop
fsub
in
and
add
ficom
mov
cmp
ins
bound
xchg
pop
xchg
push
push
inc
rcr
out
mov
push
or
xchg
in
cmp
fist
add
push
fadd
aad
(bad)
cmp
call
or
fisub
es
dec
imul
mov
pop
cmp
(bad)
dec
(bad)
add
cli
fist
call
lods
ror
aaa
clc
and
sbb
sub
pop
cmps
loop
inc
push
rol
cmp
fldcw
retf
shl
gs
cmp
pop
jno
mov
fisub
and
cmp
xchg
add
and
xchg
pop
mov
push
fdivrp
fldcw
push
push
sbb
loop
into
call
sbb
vmread
jae
xor
sub
mov
jno
add
outs
out
lods
std
movs
in
mov
push
or
adc
jns
xor
js
mov
xchg
int
shr
xchg
jmp
aas
or
adc
(bad)
sub
mov
add
int
pop
jne
sbb
xchg
xchg
stos
xchg
or
mov
into
sub
cwde
cmps
mov
sar
hlt
test
xchg
jmp
adc
sar
(bad)
inc
dec
mov
adc
xor
cmps
lds
out
outs
mov
xor
xchg
mov
jnp
pop
mov
test
ss
lahf
or
daa
and
inc
idiv
adc
ror
or
adc
out
test
mov
dec
outs
into
pop
iret
mov
xor
les
cmp
loopne
mov
pop
loopne
mov
ins
dec
jg
dec
daa
xchg
repnz
fwait
aaa
test
lock
sbb
xchg
xchg
mov
int
pop
scas
int
or
repnz
fmul
loope
jmp
push
jp
pop
in
jae
sbb
test
mov
out
jns
mov
(bad)
xor
or
inc
aam
jle
or
lds
mov
sub
or
push
mov
scas
jmp
add
sbb
(bad)
sbb
cmp
jge
ds
inc
(bad)
dec
cmp
cmp
arpl
js
xchg
mov
mov
cmp
(bad)
mov
add
fs
(bad)
and
fistp
dec
xbegin
test
lock
sub
mov
int3
pop
push
mov
pop
cmc
ins
sti
jmp
retf
js
pop
jle
dec
sbb
ficomp
pop
dec
call
sub
cmp
sbb
mov
in
inc
sub
xchg
push
push
leave
dec
fimul
jecxz
mov
jbe
les
imul
(bad)
movs
(bad)
scas
vhsubpd
clc
mov
cs
loop
pop
lods
mov
mov
mov
mov
xchg
mov
and
fdivp
pop
sbb
mov
shl
rcl
dec
jg
imul
into
cmc
mov
sub
cmp
inc
push
rcl
mov
mov
test
or
inc
jmp
and
dec
jge
test
mov
mov
pop
mov
jge
jmp
js
add
or
jnp
sti
je
aad
test
sub
jne
add
add
rcr
pop
ins
inc
in
mov
fdivr
push
add
stos
push
and
jnp
or
xchg
pop
xor
sub
or
ror
xor
push
ds
neg
loopne
lods
xchg
je
push
push
jno
sbb
movs
(bad)
lahf
add
push
movs
inc
test
push
jmp
push
fisttp
scas
push
push
pop
jmp
mov
mov
push
rcr
pop
lods
lods
ins
ja
or
clc
sub
or
sub
cmp
daa
mov
scas
aaa
sbb
stos
xor
popf
push
lods
ds
fld
xchg
clc
sub
cs
call
(bad)
sub
jmp
daa
pop
pop
sbb
xor
inc
ins
ror
xor
std
cs
call
sti
dec
lahf
or
cmp
popa
lea
xor
jp
mov
or
jge
inc
jbe
xchg
shr
mov
mov
in
pop
sbb
xlat
sub
lds
arpl
jmp
dec
out
aad
in
addr16
test
push
and
cdq
xor
fsub
les
mov
pop
test
retf
dec
adc
pop
shr
mov
mov
mov
push
and
sbb
mov
dec
adc
test
mov
xchg
int
retf
retf
jmp
lea
add
mov
ds
les
mov
das
ja
gs
xchg
cmps
call
dec
cs
outs
cwde
bound
fldenv
push
mov
inc
not
xor
je
dec
dec
ja
push
mov
jp
lods
iret
mov
xchg
or
cli
fld
(bad)
mov
mov
mov
(bad)
leave
fimul
sub
(bad)
int3
aaa
clc
mov
fwait
mov
sbb
mov
pcmpeqb
popa
test
cs
push
jge
movs
adc
push
mov
fsubr
mov
int
jmp
and
dec
adc
arpl
(bad)
cli
jp
sub
push
mov
sub
fisttp
scas
imul
or
push
push
xor
imul
outs
mov
pop
push
(bad)
call
out
mov
in
xor
movs
push
aam
fbld
mov
hlt
push
or
pop
mov
mov
push
dec
scas
les
sub
jmp
mov
pop
test
stos
xor
push
push
ins
adc
and
stos
mov
sbb
cmps
lds
stc
sub
push
retf
inc
jecxz
call
jnp
pop
pop
jecxz
push
mov
imul
and
adc
(bad)
out
jnp
jbe
fild
out
inc
fbstp
popa
pop
pop
pushf
outs
in
sbb
ss
ds
pop
es
xchg
mov
inc
or
cmp
sub
add
retf
inc
ds
imul
jmp
test
add
or
pop
mov
mov
push
aas
repnz
push
sub
mov
cmp
push
cmc
xor
sbb
mov
call
rol
sub
cmp
pop
xchg
rcl
jae
test
aad
out
je
mov
out
or
in
adc
mov
inc
adc
std
xor
mov
adc
in
stos
stc
xor
js
pop
or
faddp
mov
and
sbb
dec
push
push
jae
mov
call
icebp
jmp
jp
cs
fsubp
sahf
or
out
push
push
jb
out
mov
punpckhbw
pop
add
loope
add
retf
and
shr
gs
lods
stos
jo
xchg
cmp
xchg
dec
pop
cmc
dec
neg
cmp
jb
outs
popf
into
in
jecxz
sbb
lahf
sbb
add
outs
test
mov
pop
and
out
push
imul
gs
nop
xor
outs
neg
nop
rcl
adc
jecxz
push
int
pop
mov
xor
mov
and
retf
mov
mov
dec
dec
mov
adc
ins
push
mov
mov
lods
xor
cmp
sub
cmp
(bad)
aaa
push
std
cmp
pop
sbb
enter
mov
aaa
pop
test
mov
sub
fsubr
cmps
loop
scas
dec
pop
cdq
scas
(bad)
enter
pop
and
fucom
push
(bad)
push
pop
pop
mov
cdq
out
retf
xchg
pop
inc
inc
shl
or
stos
xchg
add
stos
pop
mov
pop
jge
pop
movs
mov
xchg
lods
leave
fwait
jnp
stos
dec
mov
mov
ds
jne
sub
jae
in
xchg
std
inc
pop
push
outs
js
push
mov
xor
mov
jb
int3
inc
jnp
jl
lods
icebp
jl
iret
aam
fwait
test
xor
mov
(bad)
neg
sub
xor
xchg
jnp
lahf
pop
mov
xchg
mov
fidivr
(bad)
xor
fadd
shl
xchg
lahf
movs
xchg
dec
cmp
stos
iret
test
add
fcomp
mov
cmc
leave
jmp
lahf
pop
(bad)
aas
gs
pop
ret
sbb
mov
loop
inc
inc
rol
push
cmc
or
push
xlat
loope
adc
not
mov
xchg
daa
xor
fsubr
xor
icebp
push
dec
cs
push
mov
lahf
or
adc
arpl
jge
out
daa
call
push
mov
(bad)
cmp
fst
lea
adc
outs
push
mov
jle
cdq
ret
bound
xor
inc
stos
ins
xor
jae
mov
inc
sahf
push
fild
adc
stc
sbb
mov
cmps
cmp
mov
movs
movs
test
jbe
shl
push
leave
add
add
sub
mov
in
cmps
sbb
lods
cmp
mov
aam
add
jo
sbb
lds
ins
cli
dec
lock
or
pop
pop
mov
ins
jns
sti
fcmovnu
lock
sub
clc
mov
jnp
movs
xchg
or
out
xor
clc
lods
movs
ror
jmp
ds
jne
cmp
aam
test
inc
stos
mov
arpl
push
(bad)
loope
popf
xchg
fld
call
mov
adc
test
pop
enter
sub
leave
aad
bound
pop
xchg
bswap
cwde
adc
imul
mov
sahf
or
in
movs
add
pop
push
sub
sbb
mov
jnp
inc
mov
sbb
push
sub
imul
or
sbb
or
dec
dec
lds
mov
push
je
pop
lods
mov
sub
fst
jecxz
mov
xchg
out
loope
pop
xchg
test
shl
test
arpl
inc
outs
pop
mov
sbb
xchg
mov
popa
pop
popa
push
daa
push
pop
mov
jl
mov
inc
xor
outs
mov
xchg
push
fmul
pop
and
ficomp
mov
jmp
push
shl
push
mov
ror
pop
sbb
cs
mov
jmp
cs
or
and
cmps
loope
out
ins
bound
and
test
inc
inc
(bad)
and
mov
mov
mov
add
cmp
shr
mov
loop
fsubp
and
pop
push
data16
cmp
data16
enter
fistp
jg
push
mov
mov
adc
sti
sti
stos
or
jno
adc
push
fwait
dec
mov
cmp
xor
xlat
enter
adc
or
mov
inc
pop
xchg
push
push
inc
dec
(bad)
in
test
shr
xchg
test
lock
pop
mov
stos
and
pop
add
xchg
sbb
push
test
and
movs
cmps
loop
retf
sar
mov
in
enter
cmps
sahf
adc
ret
sbb
hlt
push
iret
ret
xchg
ss
lods
outs
xchg
jmp
inc
cmps
add
jnp
hlt
mov
pop
leave
mov
pusha
xchg
cmps
test
push
ret
cwde
loopne
inc
mov
loope
mov
pop
lods
xchg
mov
lock
ins
fimul
mov
pop
aam
xchg
mov
lods
(bad)
xor
mov
in
adc
std
and
scas
repz
mov
test
cmp
xchg
or
scas
jmp
jmp
cmps
sub
dec
mov
mov
xchg
inc
nop
cmp
xor
mov
mov
outs
xor
bound
dec
mov
(bad)
cmps
mov
mov
cmp
jle
mov
xlat
in
movs
out
les
or
inc
bound
dec
adc
fld
adc
adc
fnsave
dec
adc
dec
sbb
test
retf
call
pop
pop
mov
mov
imul
call
retf
pop
test
pop
out
mov
inc
add
repz
jmp
push
mov
aam
mov
ss
inc
mov
sahf
outs
mov
out
test
je
les
adc
repnz
sbb
fisub
sub
imul
sti
jmp
push
add
add
add
fcmovbe
xchg
and
pop
addr16
mov
pop
push
bound
xor
in
mov
xlat
pop
jne
sub
and
add
ds
lds
push
add
iret
mov
fs
sub
je
sbb
pop
iret
sahf
mov
dec
ror
push
int3
mov
push
inc
bound
push
cmp
sub
fldcw
add
mov
imul
mov
fcomp
push
sar
add
push
stos
mov
aas
mov
pop
jne
push
fstp
lahf
out
(bad)
fist
inc
inc
loop
ror
loop
leave
pop
pop
cmp
xchg
xor
mov
rcr
dec
clc
mov
ret
daa
dec
inc
lahf
push
out
jnp
push
shr
adc
add
mov
movs
mov
cli
xchg
jmp
add
movs
(bad)
js
or
ins
out
pop
fs
or
and
sub
test
lds
cmp
jp
(bad)
fcomp
cmps
add
adc
push
fstp
je
addr16
jp
mov
push
les
outs
lods
xor
mov
mov
mov
cmp
(bad)
jmp
jne
aam
inc
in
or
and
mov
xchg
or
mov
jg
stos
cmp
movs
leave
sub
les
inc
lods
ror
mov
leave
jns
addr16
leave
jae
mov
cmp
jo
int3
rcr
popf
add
out
or
(bad)
sbb
inc
lea
(bad)
mov
shr
cmp
lods
cdq
xchg
mov
xlat
xlat
push
xor
push
loope
mov
ret
(bad)
enter
mov
xchg
push
mov
push
out
mov
cs
push
cmp
sti
pop
ins
ror
sub
and
pop
sub
scas
mov
rol
imul
add
sub
cmp
xchg
stc
pop
or
inc
nop
or
(bad)
xchg
mov
or
(bad)
mov
push
test
xchg
les
mov
adc
jmp
add
push
ja
arpl
loopne
(bad)
push
or
pop
jns
jle
mov
jmp
jno
sub
(bad)
pop
sbb
ja
(bad)
out
mov
fnstsw
aam
outs
or
inc
ds
mov
cmp
jae
pop
pop
fwait
je
and
and
sbb
jle
fistp
popa
jbe
dec
cmp
dec
jae
mov
repnz
adc
movs
xchg
mov
mov
movs
rcl
retf
mov
add
jb
pop
(bad)
sbb
cmp
(bad)
aad
xchg
pop
mov
in
xor
sbb
out
add
xchg
in
sub
mov
push
cmp
or
cmps
fst
mov
and
mov
xchg
mov
fnstenv
inc
jno
adc
adc
push
out
(bad)
xlat
rcr
push
aam
cmp
mov
mov
je
lds
jnp
add
jne
add
test
sub
ss
mov
dec
mov
push
(bad)
je
sub
mov
stos
inc
stos
aad
push
xlat
push
out
inc
xchg
push
sub
and
stos
and
addr16
mov
mov
pop
les
jno
test
fild
imul
push
fadd
bound
test
jne
fwait
push
push
cmp
inc
repnz
scas
mov
aaa
mov
fist
test
mov
aam
mov
or
ror
jp
adc
ins
cld
aam
sbb
ja
adc
inc
pop
pop
std
(bad)
xchg
shl
pop
rcl
mov
mov
dec
call
jo
iret
ins
adc
add
or
mov
leave
and
les
ss
sbb
sub
push
stos
sub
js
or
cld
inc
test
xchg
pop
or
mov
xchg
ss
pop
ss
sbb
fwait
pop
jmp
(bad)
outs
ror
adc
fstp
xchg
test
retf
push
jmp
pop
push
mov
pop
or
test
icebp
es
push
xor
mov
push
pop
cmp
cmp
inc
inc
xchg
add
loop
cld
push
mov
add
(bad)
sub
sbb
aam
imul
dec
cdq
mov
dec
xor
mov
jl
in
pop
mov
add
sub
into
push
(bad)
mul
(bad)
not
imul
imul
mov
in
test
jo
push
pmovmskb
push
aad
stos
bnd
aam
pushf
lea
xchg
frstor
std
pop
sbb
sub
mov
stc
sub
cdq
in
xlat
sbb
ins
cmps
shr
mov
lock
or
jmp
stos
loop
rcl
scas
test
fldcw
pop
add
and
mov
sub
push
mov
loop
jmp
cli
fidiv
push
les
sub
or
jns
outs
mov
fist
mov
or
stc
or
inc
bound
xor
inc
pop
lds
pop
push
pop
and
mov
inc
int
adc
jo
nop
dec
shr
push
or
test
pop
dec
cwde
inc
or
lea
mov
cmp
sbb
aas
add
or
pop
fild
cmps
int3
xchg
test
and
and
loopne
jg
sahf
mov
adc
inc
sahf
mov
jo
sub
pop
mov
popf
adc
pop
push
jno
mov
daa
xchg
leave
push
xor
mov
iret
xor
inc
pop
inc
test
pop
jnp
inc
mov
pop
leave
inc
adc
into
lds
adc
popf
push
imul
cmc
sub
push
mov
dec
int
cld
inc
scas
neg
sub
scas
jmp
(bad)
jmp
inc
dec
ret
dec
dec
aam
sub
fsub
push
test
das
or
in
clc
cmp
movs
call
mov
push
ds
mov
inc
les
inc
inc
xchg
stc
cdq
jge
xlat
adc
xchg
xchg
pop
leave
pushf
jg
push
xor
add
xchg
aaa
inc
popa
push
dec
mov
sub
adc
xchg
or
pop
shl
adc
cmp
ins
das
jne
sub
push
jge
or
push
retf
sub
mov
fcom
jmp
jle
cdq
out
pop
xor
cdq
sub
and
jo
int
and
push
xchg
fisubr
mov
cmps
dec
dec
mov
lods
mov
sti
test
ret
pop
fstp
mov
lods
daa
and
aam
ret
sbb
sbb
xchg
push
outs
or
pop
mov
in
cmp
xchg
stos
xor
div
push
adc
sub
sub
jno
cmp
xor
rcl
cdq
jnp
ret
ror
int3
outs
sub
inc
xor
mov
jne
aaa
enter
ret
mov
test
repnz
sbb
xchg
xchg
xchg
mov
add
fisttp
ss
cmps
out
jl
xchg
jle
ret
in
jge
dec
fiadd
sub
lods
test
in
pop
jnp
aaa
mov
rcr
xchg
jbe
push
cmp
sbb
pop
loope
push
and
in
cmps
dec
jae
push
sub
cmp
sbb
test
pop
cli
test
add
popa
mov
inc
sti
lods
stos
push
mov
push
stos
in
add
jp
inc
dec
inc
push
or
adc
sub
(bad)
fcomi
pop
aaa
movs
inc
push
movs
jmp
or
mov
push
pop
or
sub
call
push
std
cli
jnp
jl
and
fsubrp
enter
lods
fdivr
mov
sahf
cmovb
jae
push
ja
jl
call
lods
cwde
mov
mov
std
pop
or
cmps
and
dec
jg
(bad)
les
jo
jge
jmp
pop
pop
dec
call
movs
imul
outs
inc
mov
lods
sub
lods
jnp
(bad)
(bad)
cmc
jmp
mov
mov
mov
pop
es
cmp
adc
outs
ss
xor
pop
cmps
jae
mov
pop
pop
(bad)
mov
xchg
ja
dec
mov
sar
push
scas
pop
jae
lea
push
mov
mov
enter
fcom
shl
leave
aaa
mov
mov
fld
push
pop
clc
(bad)
imul
adc
inc
jae
jbe
jl
inc
jno
int
pop
jo
and
push
fldcw
loop
aaa
mov
sbb
push
out
jb
popf
aas
adc
pop
sbb
sub
xchg
fcmove
mov
nop
shl
mov
outs
inc
xchg
mov
arpl
scas
mov
pop
fisub
xor
addr16
enter
nop
scas
pusha
mov
arpl
push
sub
in
dec
pop
pop
jle
push
xor
push
lds
outs
fs
jb
out
mov
outs
imul
adc
fdivr
out
mov
mov
and
dec
les
dec
in
ret
mov
das
repnz
out
cli
in
sbb
push
xor
mov
push
in
sub
popa
in
test
cmp
(bad)
xchg
and
jmp
mov
mov
lock
pop
ds
mov
clc
jmp
mov
lds
mov
pop
stos
lods
iret
jno
call
retf
push
loopne
rcr
inc
out
das
clc
jl
stos
ins
adc
sahf
mov
mov
out
(bad)
xor
imul
aaa
inc
push
cmp
push
leave
repnz
or
xor
fild
cli
mov
arpl
jnp
add
sbb
jmp
popf
sar
sti
sub
adc
cmp
push
inc
cmp
push
icebp
int3
push
xor
mov
sub
icebp
ror
fild
sub
call
imul
cmc
push
push
shl
sbb
fwait
dec
xor
cld
xchg
cmp
mov
dec
xchg
xor
fs
jl
mov
test
sub
fadd
shr
and
ret
cmp
pop
mov
mov
sbb
jge
jbe
xchg
xlat
cmp
mov
in
or
push
add
adc
outs
test
pushf
push
mov
les
mov
and
fwait
or
sub
pop
fs
lds
je
scas
imul
shl
jbe
ja
push
xlat
or
mov
push
es
test
nop
dec
push
mov
inc
stos
sub
push
jno
jae
test
jmp
aaa
mov
imul
mov
jl
(bad)
cli
sbb
xor
mov
jmp
inc
clc
scas
adc
retf
or
sbb
mov
cmp
neg
cmp
mov
cld
xchg
pop
fldlg2
or
pop
or
int3
add
cmp
jo
xchg
retf
push
xchg
dec
push
or
scas
mov
push
fld
jae
ins
jg
es
inc
jmp
push
jns
pop
or
mov
sbb
aam
xor
jmp
into
stos
sbb
and
fimul
mov
inc
aaa
cld
(bad)
cwde
add
hlt
inc
icebp
xchg
adc
xor
inc
jmp
xchg
adc
jbe
push
test
adc
mov
push
loop
mov
jge
xchg
mov
jne
mov
sub
sbb
adc
adc
xchg
dec
sbb
scas
imul
mov
xor
xor
test
push
out
sbb
repnz
sbb
adc
xchg
(bad)
push
(bad)
fisttp
mov
jno
and
repnz
lds
enter
cld
(bad)
sbb
pop
dec
fimul
lea
jnp
mov
daa
test
add
push
inc
mov
inc
add
fcmovbe
inc
jnp
aam
popf
push
lock
sub
cmp
xchg
xchg
test
lods
cld
xchg
ds
call
xchg
clc
outs
jno
push
push
popa
fwait
or
es
adc
in
enter
inc
xlat
push
mov
pushf
movs
js
add
mov
cmp
add
mov
fld
mov
popf
pop
xchg
cli
jmp
mov
outs
imul
sbb
sbb
loop
jne
inc
cmp
cmp
or
test
ins
mov
sub
xchg
and
sub
test
cwde
sbb
shl
xchg
ss
call
push
outs
cwde
imul
dec
iret
inc
jnp
xchg
sub
mov
pop
mov
push
adc
aam
gs
sub
out
loop
cmc
dec
ins
aaa
sbb
call
push
dec
lahf
or
cmc
cdq
mov
jne
push
xchg
mov
inc
dec
sub
and
mov
cmp
not
fistp
dec
mov
shl
jo
jnp
hlt
xor
add
inc
not
mov
push
pusha
outs
movs
lods
jecxz
nop
inc
mov
cwde
fsubr
aaa
aam
(bad)
cmovns
int3
rol
sbb
mov
and
(bad)
and
sub
push
xchg
jno
mov
cmps
jbe
daa
jno
lock
lods
je
xchg
dec
sbb
add
fstp
bts
cmp
push
sbb
mov
sar
and
jb
aam
sbb
mov
jb
ret
ja
adc
addr16
mov
or
stos
push
cdq
xchg
aas
xor
retf
cmp
pop
xor
push
pop
stos
les
push
test
sub
mov
push
out
xor
cmp
popa
ins
and
push
mov
pop
aas
neg
into
aas
test
and
imul
pop
push
pop
aas
pop
xchg
loopne
int
cwde
dec
mov
stos
pop
sub
sub
xchg
inc
movs
scas
mov
stos
pop
jbe
stos
call
test
sub
jb
xor
inc
jae
cmc
fstp
push
daa
fidiv
(bad)
cmp
mov
test
in
sub
ds
inc
xchg
mov
daa
stos
push
xor
sar
mov
push
mov
sub
imul
cmc
call
loope
mov
enter
fdiv
scas
mov
adc
xor
jbe
lock
icebp
push
xor
stos
(bad)
fadd
aam
jle
imul
mov
add
ss
cmove
pop
loope
push
push
add
cmp
int3
cmp
loopne
das
mov
or
(bad)
and
pop
xchg
add
sahf
add
leave
add
mov
cmp
mov
add
pop
or
hlt
xchg
or
cs
fdiv
les
sbb
fisttp
out
mov
not
add
mov
outs
div
pop
inc
nop
xchg
js
inc
sar
scas
ins
or
test
or
cmp
pop
xor
pusha
nop
fwait
lea
and
cmp
lods
xchg
or
mov
fnstsw
push
or
xor
in
add
ss
std
adc
call
push
pop
mov
mov
push
push
shr
add
es
movs
sub
ret
in
push
retf
xchg
xchg
jge
shr
sbb
jae
cmps
xor
xchg
cmps
mov
xor
bound
sbb
adc
fcomp
or
sub
inc
call
je
adc
outs
test
rcr
inc
int3
mov
(bad)
cmps
pop
xor
out
sbb
outs
mov
jmp
out
jnp
mov
inc
and
or
fst
clc
pop
pop
enter
mov
and
test
retf
pop
jb
push
in
pop
adc
scas
movs
outs
call
add
xchg
inc
inc
jo
fcom
fsub
dec
mov
or
in
dec
outs
(bad)
(bad)
and
sub
jecxz
out
and
fs
(bad)
add
push
mov
js
mov
jns
lods
cmp
(bad)
jl
fld
dec
pop
sub
rcr
ins
jle
mov
sbb
(bad)
mov
test
fdiv
push
adc
or
inc
test
xchg
aad
cmc
ficom
fst
pop
iret
vcvttpd2dq
call
loope
push
push
out
cmp
idiv
arpl
not
daa
pop
sti
(bad)
je
cmp
cmps
(bad)
inc
jno
data16
mov
cmc
addr16
pop
shr
cmp
lea
mov
xchg
cli
jl
sub
or
sub
fisubr
nop
retf
sub
or
dec
rcl
loope
sti
and
stos
not
cmps
mov
les
sbb
test
pop
mov
mov
pusha
mov
xchg
icebp
mov
dec
jnp
mov
jbe
push
sbb
sbb
repnz
push
out
xchg
mov
aas
call
retf
loopne
xor
or
and
xor
pop
pop
cwde
pop
retf
loopne
cmp
jbe
jno
adc
sbb
repz
out
and
cs
xchg
test
scas
mov
ror
mov
fstp
jle
imul
pop
ficom
fsub
in
pop
shl
xchg
loop
cmp
(bad)
pop
adc
jmp
je
mov
in
sbb
test
je
adc
stos
pop
scas
imul
add
or
mov
push
daa
aam
jg
xchg
test
jbe
pop
pusha
stos
sbb
repnz
xchg
ins
mov
icebp
ja
out
lods
out
xchg
dec
test
dec
adc
mov
jno
dec
mov
scas
daa
loop
mov
in
call
and
pop
sbb
pusha
push
mov
add
add
mov
nop
or
mov
aad
sbb
int
mov
push
cmp
and
lds
xlat
stc
sub
dec
sbb
or
and
xor
mov
aas
call
leave
mov
es
stos
cmp
xchg
jnp
sbb
mov
loopne
push
adc
loope
rcl
pop
into
sbb
test
dec
call
jp
cld
mov
ret
add
(bad)
in
mov
or
jo
or
or
lds
mov
jnp
minps
jmp
imul
add
xchg
adc
std
xchg
cmp
dec
pop
cmp
sub
xchg
ret
sub
jl
mov
outs
mov
push
lahf
aaa
cmc
push
mov
lods
stos
dec
stos
lds
dec
leave
dec
mov
jno
or
jp
imul
mov
daa
js
repnz
mov
sti
adc
dec
inc
cmp
scas
jnp
fabs
iret
push
sub
lock
(bad)
push
and
mov
outs
jp
sub
pop
pusha
xchg
loop
icebp
pop
fldenv
das
fisttp
mov
daa
push
mov
sub
aas
or
outs
mov
add
or
mov
out
pop
jbe
imul
jnp
jbe
xor
imul
jne
cld
movs
fdivr
mov
jo
test
loopne
movs
rcr
jne
xor
dec
gs
fsubr
mov
jbe
loope
out
sub
dec
dec
test
inc
jnp
out
fnstenv
test
cmp
imul
inc
jns
jge
jl
cmp
xor
or
and
fild
jne
inc
idiv
add
jg
out
xchg
jmp
iret
xchg
call
push
aam
icebp
in
fcmove
xlat
or
mov
fwait
push
stos
jnp
cwde
push
fldenv
cmp
jb
pop
lods
mov
xchg
jnp
ss
out
sub
cmp
leave
xlat
mov
bound
dec
mov
pusha
ret
das
jbe
adc
pusha
sub
sbb
lock
pop
jb
pop
std
imul
arpl
xor
stos
fisttp
mov
mov
push
sbb
scas
pop
dec
mov
into
mov
das
pop
sub
ins
lods
fstp
pop
ret
or
stc
stos
rol
js
pop
mov
mov
neg
mov
lock
bnd
(bad)
mov
iret
mov
push
pop
or
call
clc
or
pop
fwait
scas
scas
push
inc
stos
dec
and
in
and
les
loope
gs
out
je
mov
les
jmp
clc
imul
cwde
pushf
movs
mov
mov
lea
push
fld
push
pusha
icebp
outs
mov
repnz
popf
lds
ja
pop
pop
sbb
sti
or
outs
mov
sti
xchg
loope
cmp
xchg
jmp
sbb
sbb
stc
jge
jns
jmp
fcompp
add
jae
xlat
mov
cmc
xchg
and
bound
retf
test
ins
dec
push
rcr
fimul
inc
fisttp
leave
mov
sub
xchg
mov
xlat
push
mov
sub
dec
sbb
ror
aam
mov
xchg
mov
cmps
mov
outs
test
iret
lds
sub
xor
or
mov
cld
dec
mov
iret
push
ja
fisubr
cmps
aam
test
aad
(bad)
push
xchg
mov
mov
pop
dec
stc
stos
jmp
sbb
mov
xchg
test
xor
lods
cwde
aas
adc
inc
or
dec
rol
mov
mov
push
daa
dec
adc
xchg
stc
call
daa
jg
pop
adc
push
push
push
(bad)
adc
push
imul
into
movs
pop
pop
lahf
push
dec
add
push
and
dec
mov
fstp
mov
test
mov
imul
loop
add
hlt
call
fld
rcl
daa
lea
jg
adc
mov
jb
inc
sub
adc
or
and
pop
xchg
sbb
shl
lock
fmul
push
js
or
mov
mov
repnz
bound
leave
fwait
sub
mov
pop
add
mov
outs
(bad)
inc
mov
and
mov
push
cmp
fst
ror
hlt
call
inc
xchg
or
pop
out
jmp
mov
inc
outs
push
je
push
xor
stos
inc
xor
rcr
xchg
jo
call
jno
jbe
add
cdq
dec
les
push
xor
jne
pop
ds
and
mov
mov
not
and
pop
out
movs
out
fs
scas
jne
cmp
add
push
push
popa
imul
dec
pop
sbb
adc
data16
pop
(bad)
icebp
ret
(bad)
mul
or
or
popa
mov
pop
movs
jmp
xchg
xchg
sub
sbb
fmul
daa
add
addr16
int
xlat
test
sbb
xchg
adc
fisub
dec
loopne
pop
inc
test
jbe
ret
sbb
sub
dec
ins
popf
and
ret
call
gs
mov
push
inc
nop
retf
mov
sbb
fcomp
sar
mov
fisub
mov
enter
adc
out
lss
js
xor
adc
popf
dec
mov
stos
pop
(bad)
test
adc
je
mov
int3
xlat
sti
add
xor
mov
lods
sbb
pop
fcmovb
inc
dec
loopne
movs
loope
loop
lods
aam
push
jg
sub
cmps
in
outs
or
ins
inc
fistp
(bad)
div
aas
sbb
dec
ret
cs
dec
sub
push
ins
in
stos
retf
lock
cwde
xchg
enter
inc
sti
pop
sbb
dec
dec
mov
ss
add
xlat
mov
mov
test
stos
or
in
or
xchg
inc
sti
mov
jge
mov
mov
pop
fld
rcl
mov
je
fldcw
int
int
add
dec
jmp
popf
mov
xchg
add
jp
pusha
test
pop
out
xchg
fdiv
xchg
cmp
adc
stos
push
mov
int3
xlat
(bad)
pop
mov
inc
sar
or
lods
icebp
mov
cmp
je
icebp
sub
sub
scas
(bad)
mov
fadd
mov
or
(bad)
xchg
adc
(bad)
jge
in
movs
mov
lea
cwde
xlat
jg
adc
mov
je
inc
popa
push
xor
daa
mov
sti
stos
fsub
out
add
push
ins
pop
imul
das
arpl
pminub
or
dec
sub
add
xor
scas
repnz
inc
lahf
add
adc
add
jmp
(bad)
or
cld
push
add
loop
cmp
fimul
sti
(bad)
cmc
outs
ucomiss
pop
cld
adc
dec
xor
xchg
out
adc
dec
lods
add
into
xchg
shr
xchg
mov
pop
dec
xchg
loop
dec
jecxz
(bad)
fisttp
clc
in
dec
pop
out
add
jp
cdq
adc
mov
lods
sbb
mov
stos
inc
xchg
mov
loope
mov
cs
sti
mov
jge
ret
push
mov
and
and
add
jmp
push
push
loop
jl
sub
push
outs
xor
int
mov
mov
test
fwait
inc
imul
inc
cmp
loop
aaa
cmp
es
mov
inc
push
push
icebp
in
sub
std
retf
pop
in
adc
xor
pop
ss
pop
fisubr
dec
fist
jo
ds
pop
das
shl
(bad)
and
fild
pop
add
sub
add
mov
imul
in
push
enter
test
out
or
ret
mov
cmp
fiadd
cdq
xor
pushf
jg
sub
out
or
mov
push
(bad)
test
or
jmp
xor
cmp
mov
nop
inc
cmp
sbb
icebp
sbb
movs
add
xchg
cdq
mov
fsubp
data16
mov
je
pop
iret
xchg
inc
(bad)
popf
adc
loopne
xor
jp
pusha
mov
in
inc
xchg
repnz
push
sbb
into
pop
ret
sbb
fcomip
sbb
lds
rol
cmp
pop
push
pop
push
mov
push
pusha
daa
inc
xor
in
pop
mov
out
std
mov
arpl
add
(bad)
(bad)
xor
and
retf
dec
pop
cmps
sbb
pushf
fidiv
pop
jmp
cld
push
mov
(bad)
mov
inc
(bad)
out
and
pop
inc
ror
push
(bad)
clc
in
scas
add
cmp
cmps
sbb
add
clc
movs
(bad)
jbe
xchg
in
sub
add
in
sub
mov
mov
lods
sbb
packsswb
sbb
jns
js
mov
fld
ret
rol
xchg
fbstp
arpl
imul
pop
retf
jmp
(bad)
pop
xor
ss
lahf
jne
(bad)
das
ins
push
popf
das
movs
out
(bad)
xchg
cmps
das
outs
clc
sbb
inc
adc
mov
ins
fisub
xchg
mov
mov
xor
mov
fstp
inc
pop
add
pop
mov
in
dec
pop
(bad)
and
ret
sti
jge
sbb
cwde
mov
mov
test
shl
add
cli
mov
rcl
adc
fild
rcl
mov
jg
test
push
jle
pop
sub
jbe
mov
inc
movs
repnz
(bad)
movs
out
shr
inc
das
leave
inc
lods
ja
stos
mov
lahf
dec
jle
push
pop
mov
sub
dec
lods
sbb
jno
cli
or
sar
aas
(bad)
(bad)
test
pop
outs
mov
adc
push
adc
inc
pusha
fidiv
sub
adc
stos
mov
adc
js
std
or
fwait
lahf
clc
inc
aad
sub
sub
fcom
mov
adc
dec
retf
imul
mov
add
xchg
pusha
in
add
add
sub
aam
mov
pushf
nop
pop
pop
mov
cmp
fstp
in
and
popa
adc
xchg
adc
sbb
jns
xchg
(bad)
fld
sub
mov
and
xchg
inc
inc
retf
in
mov
pop
clc
div
cmp
in
fisttp
imul
movs
das
push
mov
jmp
scas
push
push
outs
jno
dec
outs
mov
dec
call
retf
aas
fdiv
mov
leave
ret
push
cmc
outs
sahf
dec
xor
test
dec
pop
aas
mov
int
lods
test
pop
xor
stc
xchg
daa
in
adc
out
leave
pop
dec
jbe
test
clc
(bad)
and
in
mov
mov
mov
(bad)
in
mov
push
push
movs
add
bound
sbb
(bad)
retf
jmp
sub
ss
or
int
fnstenv
jns
inc
dec
fwait
jle
mov
add
lods
push
cli
sub
fwait
rol
add
lds
(bad)
aam
push
jp
loopne
aaa
retf
mov
scas
movs
and
jge
aas
inc
setbe
cmps
xor
inc
ins
jo
lods
(bad)
jne
stos
mov
in
(bad)
sbb
fcomp
cmp
fwait
inc
repnz
or
fsub
mov
push
push
std
test
inc
cmps
addr16
retf
mov
lahf
lahf
push
pushf
cmps
push
(bad)
push
inc
loope
loope
or
cmp
clc
ja
inc
mov
add
addr16
sti
iret
sbb
add
stos
shl
bnd
daa
adc
in
xchg
dec
mov
mov
and
inc
or
add
loopne
add
and
cmp
idiv
cmc
pop
pop
fimul
xchg
(bad)
out
dec
lahf
cmc
jne
fsqrt
dec
mov
sbb
bound
shl
popf
clc
add
dec
inc
sti
push
aaa
pusha
mov
sbb
mov
jg
jo
fisubr
hlt
mov
inc
pop
test
sub
fisubr
cmp
loope
clc
push
cmp
add
mov
ret
addr16
out
jg
mov
fimul
cmc
lahf
outs
popf
jp
mov
sbb
ins
sub
aaa
scas
push
mov
jmp
xchg
sbb
inc
mov
mov
lods
dec
cld
and
iret
stos
arpl
add
xor
fisubr
outs
pop
imul
aas
cmc
outs
ret
xchg
sbb
int
add
add
in
rcl
lahf
or
xchg
mov
push
cmps
jmp
arpl
mov
call
dec
inc
sti
(bad)
std
call
mov
lahf
cli
mov
mov
cwde
test
jno
neg
(bad)
call
xlat
xor
dec
mov
sub
inc
mov
and
mov
popf
iret
stos
push
(bad)
aas
dec
pop
cmc
scas
out
das
pop
jmp
mov
pop
pop
fcomp
jp
or
push
pop
loopne
cmps
dec
stc
sub
std
and
xor
pushf
push
(bad)
int3
push
sar
sub
sbb
(bad)
mov
jns
loope
mov
mov
jge
mov
push
daa
imul
in
push
aam
loope
loope
in
push
cmp
add
inc
push
addr16
cmc
loope
mov
loopne
add
(bad)
dec
sti
add
inc
fiadd
in
xchg
add
sub
mov
loopne
xor
push
jp
outs
fdiv
leave
movs
jo
dec
inc
(bad)
outs
mov
shl
add
xlat
movs
jle
add
mov
in
leave
cmp
mov
movs
sahf
adc
(bad)
add
jne
inc
dec
jg
adc
xor
add
xor
clc
call
inc
or
pop
fild
lods
aas
rol
sub
loope
sar
push
(bad)
movs
outs
push
jmp
clc
scas
fwait
jle
mov
(bad)
retf
xlat
repnz
int3
pop
adc
xchg
stos
mov
scas
je
repz
fadd
and
pop
mov
jle
mov
inc
test
dec
ret
sbb
mov
aas
fcmove
mov
sub
jmp
dec
cli
sub
repz
jmp
jmp
int
pop
loope
inc
sti
pop
push
js
add
ins
dec
xor
leave
arpl
xlat
shr
inc
cmc
gs
mov
xchg
cmp
push
in
cdq
repz
mov
pop
dec
sbb
push
add
fcom
jecxz
sti
fiadd
ret
std
and
sbb
jg
sub
push
xchg
(bad)
mov
push
fld
cli
and
(bad)
jo
pop
pop
stc
or
pop
fidiv
or
(bad)
out
icebp
mov
cmp
hlt
inc
imul
lahf
pop
gs
not
rcr
or
push
inc
loope
outs
les
imul
(bad)
push
jg
lds
idiv
in
movs
cmps
loop
div
fisttp
lss
stos
mov
mov
cld
dec
mov
and
inc
inc
fs
repnz
inc
mov
scas
pushf
or
inc
stos
test
xor
hlt
lods
mov
fnstsw
fwait
adc
out
sbb
aas
in
push
cmc
dec
jmp
sbb
pop
mov
push
mov
cmp
aas
or
mov
jge
xor
inc
mov
add
add
jmp
icebp
imul
aas
push
fs
je
je
jmp
sub
dec
mov
shld
mov
mov
fcmovnbe
push
pop
pop
lds
mov
push
push
pop
jle
dec
and
adc
jp
cmp
pop
mov
mov
stos
inc
push
push
int
jp
pop
in
inc
mov
shl
add
jmp
inc
inc
sti
push
dec
xchg
add
in
mov
outs
(bad)
sar
adc
std
sub
aam
jg
out
add
add
add
je
mov
jmp
das
sti
mov
add
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
sbb
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
not
in
push
(bad)
call
or
dec
xchg
sub
add
add
add
push
add
add
add
inc
add
je
add
jae
imul
jae
push
add
inc
add
arpl
jb
jns
jo
je
add
add
sbb
add
add
je
dec
add
add
inc
add
bound
jne
add
add
bound
jns
add
add
jo
push
mov
add
and
push
and
ja
cs
data16
imul
and
bound
or
ins
and
ins
popa
js
or
popa
arpl
bound
cs
cs
cs
bound
cs
bound
cs
data16
jae
ins
or
and
or
arpl
arpl
and
arpl
cs
jo
cs
jae
and
jb
and
push
jbe
and
push
jb
arpl
jae
cs
and
push
or
data16
popa
gs
cs
gs
and
jo
bound
cs
gs
and
jo
jo
outs
push
cs
gs
cs
push
cs
and
imul
outs
fs
and
imul
outs
bound
imul
ins
ins
and
jo
and
js
js
cs
js
cs
imul
and
jo
and
jae
and
data16
data16
popa
and
popa
jae
and
popa
jae
or
je
je
cs
arpl
cs
je
cs
arpl
cs
arpl
cs
je
and
outs
je
and
outs
arpl
cs
data16
ja
and
ja
jae
cs
jae
and
jo
data16
js
jae
cs
je
cs
ins
and
js
jae
and
js
jae
and
js
je
and
js
je
and
js
jae
and
js
popa
and
js
popa
ins
and
js
ins
and
js
ja
cs
je
cs
je
cs
jae
cs
je
and
jo
je
and
jo
je
and
jo
je
and
jo
popa
ins
and
jo
jae
and
jo
jae
and
jae
fs
cs
fs
or
jbe
cs
jo
and
popa
imul
and
ins
xor
cs
xor
and
ins
imul
cs
popa
and
jb
and
popa
jbe
and
ins
outs
jbe
cs
jo
and
xor
and
ins
jo
and
xor
cs
jae
and
popa
jae
and
data16
jbe
cs
jo
and
ja
jbe
cs
bound
cs
xor
and
ins
imul
cs
je
arpl
and
gs
cs
data16
jbe
data16
js
ins
and
jae
jae
or
jb
jb
cs
jo
cs
jp
jo
sbb
ins
and
outs
outs
imul
inc
bound
and
fs
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jl
add
add
inc
cmp
popa
enter
cmc
aas
add
sub
je
cwde
cwde
jae
dec
mov
dec
sub
xchg
and
dec
jae
ins
test
das
xchg
cmp
inc
cdq
mov
addr16
es
push
push
and
sbb
imul
js
jle
push
inc
cmp
jl
push
cmp
pop
pop
dec
dec
xchg
jl
gs
popa
pusha
sbb
aas
push
mov
test
outs
xchg
mov
inc
aas
sahf
sahf
sahf
xchg
xchg
xchg
lea
jb
nop
push
mov
cmp
push
jg
mov
xchg
sub
(bad)
mov
pop
inc
push
sbb
pop
pop
pusha
pop
and
jmp
inc
inc
xor
add
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
aas
add
add
add
add
add
inc
sub
sub
(bad)
leave
ins
push
js
test
jmp
test
xchg
loop
mov
fiadd
pop
jae
lock
in
hlt
test
and
das
sbb
sbb
mov
ss
nop
inc
sbb
push
push
dec
pop
ins
bound
imul
test
cmps
push
mov
mov
test
mov
popa
add
imul
movs
add
leave
retf
enter
retf
imul
lds
and
push
adc
add
jecxz
in
out
in
adc
and
sub
hlt
cmc
test
std
push
cld
add
xchg
rol
rcr
repz
mov
lds
shl
adc
dec
pushf
lock
mov
leave
jno
push
stos
pop
leave
xor
add
add
or
adc
pusha
add
inc
mov
fs
gs
cmps
dec
sub
cmp
leave
xchg
pop
(bad)
cmps
push
mov
daa
(bad)
stos
adc
enter
fmul
dec
not
or
sbb
pushf
cmp
push
bnd
sub
int3
xchg
stos
cmps
push
sub
dec
clc
jmp
inc
or
scas
loope
les
js
fisubr
int3
mov
inc
xchg
int
and
shl
mov
cmp
popa
inc
pusha
mov
jmp
mov
push
or
sub
pop
sbb
and
mov
push
jle
jno
inc
pop
add
sub
and
pusha
lock
xor
shr
sti
js
or
lahf
fisttp
int
imul
mov
add
fadd
mov
or
mov
js
add
mov
xor
or
sub
adc
add
sub
mov
rol
ja
cmps
cmp
cmp
rol
cmp
mov
jecxz
cwde
mov
xchg
out
imul
or
or
fst
jg
(bad)
dec
xchg
xchg
inc
lock
pop
adc
or
cmp
shl
mov
je
ret
add
in
xor
mov
lock
jns
icebp
call
arpl
repnz
pop
imul
add
jo
push
pop
fdiv
out
sub
sbb
ror
mov
call
push
push
and
or
stos
stos
xchg
les
pushw
jne
mov
or
and
cwde
mov
add
jecxz
addr16
add
or
xchg
xchg
repz
mov
or
pop
xchg
xor
sub
leave
mov
ror
cmp
xchg
add
aad
xchg
cwde
adc
lods
or
imul
push
and
sbb
stos
rcr
addr16
fwait
mov
rol
push
cdq
(bad)
push
push
(bad)
mov
inc
mov
mov
inc
ret
pcmpgtb
ret
mov
sub
iret
lock
es
and
inc
inc
add
and
jmp
pushf
jb
jb
cmc
push
jmp
xchg
adc
add
stos
mov
bound
cmc
add
test
lea
xchg
movs
or
nop
add
add
sub
jmp
adc
and
cmp
jo
dec
fild
mov
jae
xchg
shl
mov
test
pop
add
or
add
add
push
sbb
jmp
jmp
aas
fsub
add
cli
in
sub
rcr
dec
jecxz
fucomp
int
ds
fwait
mov
sbb
xchg
sub
js
shl
aaa
and
inc
xlat
pop
pop
pusha
mov
out
(bad)
adc
inc
or
inc
adc
scas
sbb
add
aad
lahf
add
es
or
xor
cld
stos
mov
lahf
push
dec
shl
sbb
pushf
mov
add
dec
inc
or
ror
loopne
dec
cmc
sub
fldenv
aas
cmp
popa
push
ds
mov
adc
pop
mov
ins
xor
inc
add
jmp
adc
enter
lock
add
and
sub
aas
(bad)
and
stos
stos
fidiv
sar
pop
sbb
out
cli
out
aas
gs
inc
and
push
sbb
xor
sbb
push
pop
mov
jo
daa
and
push
call
adc
push
jnp
popf
xor
outs
in
push
dec
push
add
cmp
cmp
add
call
pushf
sbb
xchg
jbe
hlt
aas
adc
stos
pop
xchg
test
or
or
mov
adc
pusha
add
add
aad
jae
sub
dec
jp
add
xchg
and
jl
or
test
or
fadd
add
aam
fbstp
push
aam
xchg
leave
in
xor
push
fisttp
retf
xor
and
ja
ror
adc
add
cs
xor
push
sahf
add
sub
arpl
test
das
inc
ret
or
sub
or
cwde
stos
lock
jg
mov
or
out
xchg
lock
dec
test
sbb
int
cwde
or
push
rcr
ficom
xchg
push
mov
xchg
shl
push
call
ins
loopne
dec
js
call
jne
cwde
loop
(bad)
adc
add
inc
stos
add
out
or
xchg
ins
push
rcr
sbb
and
or
push
dec
(bad)
dec
cmps
or
pushf
test
pop
bound
jo
sbb
push
push
lods
push
cmps
cmps
mov
jb
add
adc
popf
mov
push
xchg
ss
cmp
loopne
jo
or
or
jno
add
pop
mov
add
sbb
add
add
push
cmp
and
je
idiv
movs
inc
test
lahf
ret
(bad)
out
mov
or
ret
lods
mov
add
(bad)
cmp
adc
or
daa
cwde
fadd
out
pop
sbb
xor
pop
stos
movs
(bad)
inc
and
pop
rcr
sbb
pop
aas
neg
ja
clc
movs
fisub
mov
(bad)
push
mov
add
xchg
jae
push
push
in
ins
loopne
mov
and
push
repz
and
imul
push
xchg
jae
(bad)
(bad)
loope
jnp
push
push
or
cli
in
jp
fld
adc
cdq
(bad)
out
aaa
mov
ins
scas
dec
icebp
call
shl
and
int
inc
xor
ret
push
(bad)
js
das
popa
dec
sbb
es
xchg
int
les
push
bound
add
ret
repnz
loop
pop
xlat
mov
std
imul
(bad)
cdq
mov
fcmovb
movs
iret
xor
dec
inc
xchg
xchg
dec
push
mov
or
fcom
js
inc
lahf
jb
dec
pop
jp
xchg
(bad)
hlt
push
jmp
mov
inc
dec
jmp
das
cwde
inc
sbb
aam
and
arpl
adc
sar
daa
sbb
mov
adc
mov
mov
pop
pop
adc
inc
or
mov
xchg
int
mov
fwait
jge
adc
push
fsubr
xor
in
pop
cmp
call
mov
and
add
stc
or
add
adc
inc
add
and
pop
mov
cmc
stos
mov
rol
mov
stc
pop
scas
pop
div
mov
push
fcmovne
call
fwait
sub
add
push
adc
data16
cmp
mov
push
adc
inc
adc
mov
cmp
inc
mov
repnz
in
enter
rol
outs
add
fidivr
sub
and
jl
add
cmp
pop
je
or
inc
sub
mov
mov
sbb
inc
div
dec
inc
push
inc
lock
fsub
adc
or
sbb
add
std
out
add
pop
hlt
add
nop
daa
dec
ss
(bad)
in
pop
movs
pushf
xor
in
sahf
enter
xchg
retf
in
cwde
dec
jnp
clc
push
adc
xor
and
cmp
adc
pop
jo
addr16
fs
jmp
dec
inc
rcl
mov
fcomp
sahf
dec
cmp
call
or
push
and
sub
xchg
out
and
or
repnz
imul
mov
sar
sti
dec
jle
dec
add
sub
xchg
add
pop
sbb
cmp
push
cmps
(bad)
out
rol
or
fnstsw
or
imul
lock
dec
mov
cmps
xor
(bad)
out
push
push
xchg
mov
mov
xor
adc
mov
and
add
pushf
xor
mov
adc
mov
jns
bound
hlt
adc
push
pushf
arpl
fs
in
popf
aad
cmp
adc
and
cwde
js
enter
and
xchg
xor
xor
in
mov
dec
jno
add
jbe
add
mov
push
arpl
jnp
ins
aaa
les
ret
pop
int
adc
pop
inc
retf
loope
inc
daa
sbb
add
dec
cwde
and
sub
clc
and
out
cmp
adc
jo
popf
mov
mov
test
and
add
or
sbb
outs
add
jb
pusha
loop
add
popa
outs
int
test
dec
and
sub
xchg
test
adc
shr
js
xor
inc
jmp
daa
call
shl
loop
call
and
aas
pop
loop
mov
sub
(bad)
and
add
mov
add
push
pop
mov
pusha
icebp
sbb
add
popw
xchg
add
push
add
mov
xchg
jno
mov
outs
xor
addr16
add
cmp
shr
sbb
dec
mov
test
push
mov
sub
and
adc
adc
push
push
xor
sub
jo
jmp
xor
and
adc
push
xor
aaa
imul
popa
sbb
inc
mov
sbb
popa
sbb
and
sbb
cli
jae
mul
sub
dec
movs
jb
sti
and
xchg
push
add
stc
xchg
lods
xor
loopne
adc
(bad)
retf
jecxz
mov
xor
test
adc
fwait
repz
add
dec
loop
jmp
pop
cs
add
inc
inc
aam
cmp
push
push
pusha
adc
sbb
in
adc
dec
mov
or
inc
push
jo
sbb
or
imul
cmc
pop
les
popa
inc
ss
jb
mov
push
fdivr
xchg
loopne
fwait
shl
repz
int3
mov
jmp
add
and
jge
pop
sbb
retf
rcl
xor
cwde
sbb
gs
(bad)
push
and
nop
add
and
and
mov
mov
inc
mov
or
adc
adc
pop
mov
push
xchg
inc
jo
xor
(bad)
add
imul
add
inc
adc
push
xor
cmp
ja
inc
add
ja
xchg
mov
mov
gs
inc
adc
and
pushf
(bad)
mov
jmp
add
push
das
es
dec
movs
and
addr16
aaa
enter
xor
js
fst
ins
ret
imul
adc
mov
push
test
cmp
inc
jecxz
inc
push
xor
hlt
sbb
adc
fs
cmp
adc
add
inc
arpl
xchg
inc
mov
push
and
mov
pop
adc
sbb
ret
sub
add
adc
mov
push
sub
mov
adc
test
shr
xchg
test
xchg
sbb
cmp
icebp
inc
stos
ret
add
inc
inc
aam
popf
test
push
cmp
lahf
ret
push
dec
mov
add
sub
aam
cwde
gs
in
push
mov
sbb
sbb
jo
fnstenv
into
shl
or
ins
in
inc
call
adc
inc
sbb
mov
test
stos
dec
xor
mov
pop
leave
and
fst
add
lock
pop
dec
pop
cdq
ror
sub
stos
adc
or
push
jo
mov
pop
mov
jg
add
inc
add
shr
pop
addr16
xchg
cmp
in
jmp
adc
dec
xor
lock
jmp
sbb
and
fwait
cmp
arpl
pop
pop
add
xchg
aad
aad
daa
in
imul
or
cdq
dec
out
cmp
shl
dec
mov
cmp
arpl
mov
push
mov
or
sub
pop
pop
(bad)
pop
adc
fistp
daa
xchg
add
inc
or
loopne
popa
call
dec
cdq
in
sub
cdq
xchg
pop
push
sub
pop
push
mov
xor
cmp
cmp
(bad)
aam
xchg
call
add
shr
and
and
and
scas
movs
push
add
and
xchg
add
lock
leave
retf
xor
mov
mov
xchg
scas
ret
dec
pushf
mov
gs
inc
hlt
in
cmc
movs
pop
data16
sub
add
adc
or
xchg
cmc
ret
xor
dec
sub
lods
xchg
cmp
rcr
inc
pop
push
cwde
mov
mov
pop
ins
cmp
cwde
cmp
pusha
add
outs
aam
push
data16
mov
pusha
outs
cli
in
leave
test
stos
mov
push
movs
or
push
call
dec
rcl
cmp
xor
lods
mov
push
mov
sbb
ror
xor
wrmsr
push
das
ror
clc
fwait
ja
mov
pop
mov
inc
fwait
aas
add
outs
les
mov
test
outs
les
or
aad
push
and
mov
inc
pushf
cdq
jo
and
inc
sbb
inc
lea
sub
xchg
adc
pop
call
ret
dec
xchg
ss
mov
pusha
add
outs
sbb
call
xchg
mov
add
jecxz
outs
add
add
sub
add
xchg
sbb
xchg
mov
(bad)
outs
lock
pop
cmp
test
jbe
mov
inc
ja
add
jecxz
adc
bound
mov
ficom
xchg
xor
and
jbe
jnp
xchg
pop
repnz
mov
scas
shl
aaa
cdq
sub
dec
repz
add
test
jnp
add
leave
xchg
add
mov
dec
adc
test
jbe
xor
lock
add
or
out
pop
addr16
jbe
xchg
jne
mov
push
pop
jo
ja
pop
int3
jb
ja
mov
call
xchg
pushf
leave
dec
pusha
add
mov
sahf
ror
aaa
jl
dec
adc
pop
cmps
(bad)
ins
or
jns
jl
add
into
cwde
ja
mov
retf
mov
jbe
push
js
inc
or
xchg
push
leave
cdq
mov
fwait
add
int3
push
lods
cmp
cld
cmp
pop
aaa
adc
call
aas
ror
xchg
mov
add
into
jo
iret
popf
mov
add
sar
add
or
ins
rol
rcr
and
add
add
dec
test
sbb
jmp
jge
jnp
out
(bad)
pushf
or
retf
out
add
mov
mov
jp
loope
(bad)
loopne
cld
lock
or
xor
repnz
xchg
cmp
scas
xchg
and
repnz
jbe
adc
rol
pop
or
in
ror
jns
fs
adc
adc
add
sub
mov
xor
push
sub
sbb
sar
mov
movs
xor
xor
adc
push
lahf
idiv
aaa
jp
std
dec
and
(bad)
aam
stos
js
pop
push
pop
xlat
fldenv
sub
pop
adc
rcl
arpl
aad
int
pop
xchg
test
addr16
mov
std
rcl
sbb
cwde
sbb
es
xchg
lods
sti
adc
and
or
sbb
fdiv
sbb
imul
jge
(bad)
mov
cmp
jnp
mov
dec
lea
mov
ficom
aad
mov
mov
sub
and
nop
jl
adc
cmp
(bad)
mov
loopne
push
ret
rcr
ret
lea
push
sbb
loopne
inc
jb
je
jae
mov
adc
in
ficom
jno
mov
pusha
jmp
(bad)
aas
pop
je
push
inc
sub
xor
push
cmps
icebp
push
inc
cmp
cmps
inc
xor
lea
pop
repz
sub
sbb
add
loopne
adc
int
fistp
add
loopne
mov
jmp
add
aam
fcomp
add
add
add
and
push
xor
in
popa
mov
fimul
fcmovbe
jg
bound
aad
push
test
cs
aam
lock
cwde
inc
pop
inc
add
xor
sbb
mov
inc
ds
ror
push
push
push
inc
pusha
mov
or
push
mov
loope
call
jmp
aaa
inc
fadd
xchg
test
aam
loopne
sbb
daa
jnp
xor
mov
ror
jb
or
or
dec
dec
add
pop
(bad)
jo
jnp
jmp
dec
or
and
xor
cwde
adc
xor
pop
pop
add
nop
mov
adc
ret
mov
sbb
push
sub
out
pop
loope
into
pop
in
and
mov
mov
sub
jo
dec
mov
lea
pop
xor
sub
xchg
sbb
xchg
imul
inc
push
or
out
xor
ret
out
mov
xor
aam
out
out
shl
and
sbb
psllw
push
fwait
xchg
popf
jae
pop
loopne
ins
test
dec
and
mov
push
mov
xchg
inc
data16
xor
dec
les
repz
daa
mov
fsubr
loopne
dec
ficom
add
das
popa
cmp
cmp
add
stos
ret
jmp
loope
pusha
test
push
pop
mov
cmps
push
xor
sub
mov
xchg
test
test
mov
imul
test
fimul
fnstsw
sbb
jno
(bad)
and
loope
mov
test
movs
ins
pop
or
add
and
and
(bad)
ror
mov
fwait
mov
ret
mov
mov
ret
mov
out
stos
and
push
in
shr
sub
mul
xchg
and
loopne
pop
adc
inc
xchg
xchg
jno
je
xor
aas
add
mov
xchg
xor
mov
add
or
aaa
sbb
scas
adc
adc
push
pop
mov
and
add
test
jp
xor
add
adc
std
pop
out
ror
xor
add
adc
clc
mov
add
adc
inc
inc
retf
add
or
add
inc
push
nop
adc
mov
add
adc
inc
in
fmul
in
retf
test
aas
rol
add
push
jno
xchg
jo
adc
repnz
inc
cmps
into
and
and
dec
arpl
add
fs
inc
rol
popa
(bad)
addr16
loopne
pop
cmp
test
xchg
cwde
out
test
lds
inc
mov
and
inc
movq
in
std
fsub
add
loopne
push
jle
jae
push
adc
loope
inc
xchg
stos
sbb
mov
rol
jno
adc
call
push
lea
cmp
inc
inc
pop
adc
inc
push
lock
or
ret
push
pop
test
sub
or
iret
inc
add
cwde
shl
addr16
cmp
ret
cmps
inc
mov
call
sbb
test
xchg
enter
sub
cwde
and
aad
sub
repz
xchg
xchg
mov
push
or
sbb
mov
js
out
xchg
sbb
ret
sub
mov
add
dec
cmp
sbb
inc
cmp
rcl
addr16
mov
xor
xor
xor
pcmpeqw
cmp
adc
xlat
sub
std
jb
sbb
pop
dec
test
cmp
gs
add
push
push
gs
in
and
mov
imul
nop
xlat
inc
or
(bad)
push
add
rol
mov
pop
push
adc
inc
cld
push
cmp
in
fadd
and
cdq
xor
xchg
add
or
push
stos
jae
movs
imul
and
sbb
or
popa
add
rcr
xchg
inc
hlt
and
popa
add
inc
and
and
add
adc
push
dec
add
or
mov
push
std
xchg
int3
lods
(bad)
std
cmp
(bad)
lods
jl
test
imul
or
xchg
ret
add
or
cdq
rol
add
xchg
cmp
jnp
cwde
add
inc
add
mov
dec
into
adc
movs
ret
stos
test
inc
adc
sbb
in
sbb
mov
mov
push
push
mov
push
sbb
rcl
sub
add
or
xor
xor
inc
loopne
xor
nop
or
add
add
and
cwde
mov
rol
jge
add
jo
push
mov
pop
and
mov
add
ret
ror
hlt
rcl
push
std
hlt
push
push
push
inc
sbb
xchg
jmp
add
jbe
xor
ror
add
ins
movs
cwde
jbe
or
adc
retf
push
dec
inc
adc
or
cmp
ins
dec
cmps
and
fcomi
cmp
fldcw
push
js
add
ss
inc
mov
add
sar
je
mov
add
pop
dec
imul
js
xor
stos
xchg
ja
add
pop
rol
add
cwde
jnp
cmp
push
mov
mov
xchg
xor
push
add
out
xor
fistp
popf
adc
inc
mov
fisttp
cwde
fbstp
adc
adc
add
idiv
add
push
test
mov
dec
and
mov
bound
call
sbb
(bad)
mov
popa
inc
loopne
ficomp
add
daa
cld
ror
add
into
pop
or
sbb
jge
dec
add
adc
sti
dec
xchg
pop
pusha
sbb
aad
mov
pop
pusha
xor
inc
test
mov
pop
add
push
inc
loopne
add
outs
mov
daa
jl
cs
mov
sbb
sbb
cmp
add
les
sub
fwait
add
inc
clc
mov
rcl
(bad)
or
xchg
syscall
xor
cwde
and
ret
push
add
xor
(bad)
pop
mov
sbb
ror
add
add
add
add
clts
push
sub
add
sbb
or
push
jo
sub
add
shl
adc
mov
cli
add
cs
inc
hlt
mov
int3
inc
stos
enter
xchg
stos
int3
call
aam
add
mov
dec
mov
jbe
rcr
mov
or
rcr
adc
add
ja
call
push
add
in
add
cwde
mov
and
push
fmul
pop
jne
add
push
es
sbb
add
pushf
cmp
inc
addr16
mov
add
adc
cmp
mov
jmp
loop
jb
outs
lock
mov
addr16
push
sub
add
mov
cmps
jl
mov
mov
(bad)
pop
dec
jmp
cli
add
clc
jns
pop
lock
mov
xchg
xor
add
jecxz
int3
in
add
jne
and
fcmovb
daa
test
in
adc
inc
cmp
pop
adc
data16
loopne
int3
test
pop
pop
mov
add
or
lods
fcomp
sbb
xor
dec
push
call
adc
mov
xor
cmp
sub
sbb
mov
mov
xor
add
mov
les
sbb
xchg
adc
and
jg
fadd
dec
push
sub
inc
pusha
sbb
test
fs
mov
add
mov
dec
pushf
push
inc
or
and
data16
and
xchg
rol
or
scas
sbb
mov
jne
push
add
lds
imul
or
cwde
and
cli
fadd
ins
out
jmp
pop
add
and
test
fadd
mov
adc
sub
inc
or
or
ins
sub
mov
jge
mov
(bad)
int3
int3
int3
daa
xchg
in
inc
imul
cmp
retf
int3
fistp
mov
scas
push
cmp
call
mov
test
mov
or
xchg
mov
ret
das
and
add
sbb
dec
add
mov
lods
inc
push
dec
adc
xchg
movs
xor
mov
adc
out
sbb
mov
mov
std
in
inc
rol
repnz
(bad)
or
adc
push
xchg
add
repnz
add
cwde
(bad)
and
xlat
out
popa
popf
mov
retf
sbb
not
daa
daa
mov
pop
in
mov
or
cmp
mov
inc
push
xchg
lods
or
dec
mov
inc
dec
dec
sti
dec
push
xor
test
xor
in
mov
jno
pop
ins
push
cld
mov
inc
pop
dec
arpl
xor
inc
cmp
sbb
mov
arpl
test
pop
add
lods
push
pop
in
ins
addr16
mov
jmp
in
repz
add
mov
mov
retf
popa
pop
cmps
dec
sub
not
cmp
out
pop
sbb
lds
mov
out
mov
inc
xchg
fldcw
mov
js
or
cmp
out
jne
sbb
mov
pop
jo
jge
mov
mov
test
les
push
loopne
inc
stos
stos
push
or
test
ss
or
inc
mov
outs
fsub
into
dec
mov
movs
idiv
pop
scas
mov
lahf
sti
fsubr
push
mov
mov
pop
add
sar
call
mov
mov
aam
adc
xchg
inc
dec
clc
xor
cmps
dec
mov
mov
add
mov
js
push
cmc
fidivr
stos
pop
adc
add
jmp
hlt
dec
or
jmp
(bad)
jb
jmp
mov
mov
stos
push
jecxz
int
or
(bad)
hlt
pop
or
mov
f2xm1
or
shl
inc
add
data16
ret
push
je
add
(bad)
jne
pop
push
repz
cld
out
xor
(bad)
jp
jnp
hlt
cmp
retf
mov
retfw
push
mov
test
mov
push
mov
mov
stos
cmp
in
mov
ins
dec
test
cs
mov
sbb
add
shl
jne
sbb
add
(bad)
hlt
xor
add
enter
xchg
fcmovne
cmp
or
inc
push
pop
dec
inc
test
mov
movs
addr16
sar
mov
mov
add
push
pop
pop
xchg
lds
inc
mov
add
scas
adc
and
mov
ret
arpl
(bad)
out
movs
popa
(bad)
adc
cmp
loop
add
inc
mov
inc
add
lock
call
inc
lock
mov
or
add
mov
add
cmp
push
inc
outs
fcmovne
pmulhuw
inc
outs
in
inc
scas
add
nop
leave
push
cld
retf
inc
or
in
add
int3
and
cmp
dec
ins
ret
push
xor
arpl
ins
loop
(bad)
fnstenv
push
add
mov
push
mov
inc
pusha
es
add
add
and
add
add
mov
psubq
add
hlt
shr
ret
dec
out
jmp
mov
add
pop
lds
jmp
fs
rcr
or
mov
mov
mov
pusha
loop
mov
push
mov
push
inc
cmp
mov
sub
mov
outs
dec
cmps
test
or
mov
repnz
inc
push
mov
add
shl
jle
jmp
outs
pop
lods
or
mov
les
in
jo
xchg
lock
fld
rol
retw
mov
push
loope
or
je
jno
shr
mov
pusha
sub
dec
pusha
test
jl
sbb
pusha
sbb
cmp
pusha
or
add
ja
cmp
movs
xor
sub
das
push
mov
or
xchg
daa
push
and
(bad)
and
xchg
push
out
loopne
icebp
cmps
dec
cli
loop
and
add
and
(bad)
adc
and
xchg
and
pusha
outs
xchg
xor
or
and
adc
shl
push
xor
pusha
inc
daa
push
shl
shr
lea
xchg
push
sub
sub
add
xchg
mov
and
sub
and
xor
pusha
add
and
push
and
test
test
loope
js
call
jae
add
mov
not
call
xor
sub
repnz
add
inc
add
push
cli
xchg
repnz
sti
scas
scas
sub
add
(bad)
xor
ins
ss
and
mov
aaa
(bad)
and
and
xor
xor
adc
push
inc
mov
push
sub
test
pop
jb
pop
mov
jecxz
mov
mov
mov
adc
repz
push
aaa
ja
aaa
div
sub
xor
xchg
daa
setae
pop
push
add
sar
mov
mov
xor
cli
ret
push
xor
push
cmp
xor
push
js
jb
ins
adc
xor
or
or
aaa
or
inc
ror
adc
and
sub
inc
sub
adc
rcl
pop
mov
cmps
dec
cmp
xor
xor
sbb
mov
jge
add
or
pop
mov
sub
out
push
and
aad
sub
je
test
and
not
cmp
ja
scas
sub
inc
push
adc
pop
add
mov
push
xor
push
inc
in
and
xor
(bad)
js
jb
pop
sar
adc
ja
dec
mov
pop
fs
push
mov
add
pusha
dec
mov
push
(bad)
je
lea
cmp
add
inc
push
xchg
inc
xor
ins
cmp
inc
fwait
je
stc
xchg
es
cmp
ss
and
dec
sbb
push
add
pusha
mov
repnz
add
jecxz
mov
dec
cmp
xor
mov
or
aam
jg
das
loope
xor
dec
jge
add
jne
push
pop
xchg
inc
or
jne
push
adc
mov
push
fist
push
inc
add
xchg
mul
dec
add
pop
cmp
pop
xor
repnz
rcl
aad
pop
adc
sti
xchg
daa
popa
and
xchg
je
ins
adc
iret
xor
jns
push
xlat
xchg
push
jnp
push
mov
add
mov
loop
pop
and
ror
shl
sbb
add
sbb
inc
test
xor
arpl
adc
shl
add
xor
arpl
push
pushf
push
sub
mov
push
movs
mov
pop
xchg
mov
test
outs
cs
mov
hlt
add
push
or
sbb
sbb
je
jecxz
dec
xor
arpl
jne
xchg
push
lds
mov
bound
cmps
xchg
mov
push
dec
push
pushf
rcl
xchg
cs
jl
sbb
inc
push
xchg
push
push
jecxz
cmp
repz
jge
xor
es
xor
ja
push
imul
outs
jg
pop
add
add
nop
jne
iret
mul
push
aaa
add
fs
scas
adc
push
mov
stc
shl
xchg
popa
jnp
outs
cmp
outs
das
dec
jae
mov
imul
push
rol
(bad)
xchg
das
out
mov
stos
xchg
add
and
mov
dec
adc
popa
pop
push
out
mov
sub
jmp
add
je
push
jne
xchg
js
ja
pop
aaa
outs
ins
div
push
cmp
mov
jns
test
out
sysenter
pop
js
ja
mov
gs
jnp
stos
or
cmc
mov
add
push
add
push
add
and
aaa
push
add
inc
scas
xchg
ja
mov
add
cmp
mov
inc
outs
xchg
pop
and
add
and
or
jl
js
arpl
push
add
xchg
jno
aam
daa
je
fst
cmps
push
lds
sub
fadd
jno
clc
mov
in
or
push
loopne
push
mov
or
dec
iret
adc
xlat
ja
cwde
jecxz
or
test
inc
loopne
push
sar
test
xchg
pop
fmul
push
test
sahf
loope
out
outs
jecxz
ins
jnp
outs
jae
addr16
xchg
pop
ja
jmp
jp
pop
cmc
sar
and
or
adc
stos
pop
xchg
add
aaa
mov
mov
jmp
jecxz
outs
jmp
mov
lea
or
mov
or
shl
cmp
cmp
call
xchg
nop
and
or
lods
pop
jle
add
outs
inc
idiv
(bad)
ins
jg
jmp
sbb
daa
add
cmp
jg
aad
fmul
cld
inc
cwde
adc
sbb
or
cmps
fmul
and
xchg
test
add
loopne
push
mov
jns
cmp
dec
jmp
mov
cli
cmp
fwait
js
add
cmp
xchg
cmp
push
add
mov
neg
nop
pusha
sbb
xchg
xor
jne
add
rcl
lock
fs
push
xor
jmp
std
and
fs
adc
cmp
push
les
mov
push
rcl
lds
fisubr
cmps
cmp
mov
cli
add
test
inc
sbb
cmc
push
adc
push
loope
push
inc
outs
outs
inc
mov
or
pop
inc
imul
add
pop
scas
xchg
popf
lea
push
mov
stos
mov
xchg
adc
mov
push
sub
out
or
sbb
inc
jne
mov
lods
mov
xor
and
and
movs
inc
int3
push
jmp
in
jb
fs
pop
push
sub
mov
sbb
movs
sbb
cmps
rol
(bad)
sub
add
cmps
cs
xchg
loop
mov
loopne
lods
or
and
loop
cmp
add
inc
mov
stc
sti
push
cmp
sub
xchg
mov
lea
lods
clc
cmps
shl
pusha
fisub
retf
mul
lods
xchg
xchg
inc
push
xchg
mov
fsub
push
loopne
loopne
mov
and
loop
ret
scas
sbb
fwait
add
mov
xchg
sbb
mov
add
int3
adc
xchg
lds
stc
mov
lea
inc
into
(bad)
xor
daa
dec
cwde
adc
fsub
and
add
mov
(bad)
lds
pop
xor
push
xchg
fnstcw
xchg
in
mov
mov
push
popa
pop
push
daa
sbb
test
inc
mov
stc
mov
sbb
scas
cmp
dec
sub
xchg
push
popa
sbb
rcr
pop
mov
mov
sar
mov
icebp
push
xchg
and
jns
pushf
jns
mov
dec
xchg
push
loop
out
sbb
add
push
ja
mov
inc
stos
ins
fisubr
int
and
add
add
add
ret
(bad)
sbb
cs
cmp
cmp
inc
pushf
aam
(bad)
jecxz
out
push
movs
or
inc
pop
jp
mov
add
add
sub
add
repnz
icebp
mov
popa
movs
gs
add
xchg
fmul
fcom
mov
xchg
add
mov
sub
dec
inc
add
jle
jo
out
aas
mov
cmps
sub
cwde
mov
add
leave
sbb
movs
adc
sub
loope
inc
cmp
cli
and
xor
sub
stc
(bad)
std
add
add
jge
mov
fdiv
add
sbb
push
(bad)
fdiv
mov
adc
jl
dec
adc
pop
or
lock
fcomp
loope
call
stos
xchg
test
pop
mov
pop
fsubrp
sbb
bound
sar
add
stc
popf
add
mov
cmp
add
adc
fadd
mov
cmps
nop
(bad)
outs
loop
dec
sub
pop
adc
fwait
adc
inc
push
outs
fwait
leave
cmp
movs
test
sbb
ror
out
test
dec
movs
or
sbb
enter
test
in
xchg
rcr
and
imul
add
inc
mov
imul
push
lods
pop
fcmovu
xchg
adc
xchg
and
xchg
sbb
dec
adc
test
jb
add
sbb
fwait
cmovb
xor
call
dec
fld
or
cmc
loope
cli
stos
pop
push
and
inc
in
cld
add
rcr
loope
lods
dec
mov
stos
(bad)
xchg
pop
fld
xchg
mov
ret
jecxz
loopne
repz
jno
and
lods
mov
mov
fnsetpm(287
adc
mov
in
or
mov
push
adc
add
fsub
inc
add
repz
add
adc
push
movs
pop
dec
push
cmp
xchg
retf
test
in
and
lea
cmp
inc
push
loope
call
adc
inc
or
inc
jae
or
mov
push
repnz
push
and
pop
test
test
cwde
inc
sub
sub
call
pop
sub
xor
push
add
retf
ins
mov
cmps
stos
mov
sub
into
scas
clc
or
aam
push
les
jne
jmp
or
dec
cmp
inc
stos
or
xor
js
sub
xchg
sub
push
les
mov
int3
fsubr
fstp
jmp
sbb
adc
nop
and
jo
loop
mov
pop
les
sub
cmps
mov
pusha
jecxz
push
adc
cmp
jmp
pop
cmp
imul
ss
nop
test
and
jo
je
rcl
or
mov
loope
add
sbb
add
mov
adc
mov
fwait
add
scas
lock
xchg
add
or
mov
and
inc
or
mov
lds
mov
xor
inc
aam
mov
mov
push
(bad)
stos
mov
nop
xor
sub
lea
pusha
add
xchg
sbb
add
or
imul
mov
add
xchg
mov
push
daa
dec
xchg
rol
pop
dec
stos
add
cmp
or
xchg
pop
repz
add
jno
mov
fnstsw
inc
or
cmp
loope
js
add
pop
add
push
or
mov
xchg
push
aad
ss
or
cmp
fld
push
ret
mov
imul
mov
icebp
xchg
or
mov
je
rcr
test
gs
mov
(bad)
pop
out
fs
add
or
in
xor
cli
std
neg
inc
dec
pop
ret
adc
pop
or
xor
adc
lahf
xor
rol
ins
mov
or
xor
dec
push
cmps
loope
jne
add
push
pusha
ret
push
jae
and
popf
movs
pushf
cmc
sbb
and
bound
test
add
adc
cmp
and
cdq
daa
and
mov
ror
inc
rol
push
nop
fst
push
pop
push
test
cs
cmps
les
sbb
inc
push
inc
outs
data16
call
adc
xchg
aad
rol
pop
add
inc
pop
test
rcl
arpl
clc
sahf
inc
xor
add
outs
push
dec
sub
inc
scas
mov
xor
fistp
jmp
les
pop
out
jg
sub
inc
dec
xchg
int3
xor
pop
add
inc
add
sbb
sahf
add
dec
sub
mov
arpl
stc
or
es
xor
fucomp
lock
sub
and
pop
or
ss
push
icebp
sar
adc
push
stc
push
jmp
icebp
pop
cdq
sar
je
cdq
xchg
push
add
jb
xor
lfs
xchg
mov
ins
sub
dec
pop
ffreep
lods
loop
or
ja
pop
repz
loope
fstp
cmp
inc
ror
mov
and
add
mov
nop
aas
inc
call
in
dec
cmp
add
pop
dec
test
jno
fwait
das
sub
jge
inc
xchg
mov
dec
adc
jno
and
add
in
jge
mov
popf
inc
and
pop
mov
cmps
js
add
xor
sbb
inc
cmp
inc
xchg
loopne
ins
retf
hlt
add
div
add
mov
push
sub
or
xchg
xor
adc
inc
inc
pop
mov
loope
ds
xchg
inc
inc
adc
mov
in
dec
inc
cmp
shr
or
mov
sub
aaa
mov
test
jns
and
imul
jmp
add
adc
push
in
repz
mov
push
cmp
xor
push
fwait
clc
inc
mov
adc
sbb
jae
ja
aad
or
repz
mov
outs
(bad)
stos
push
in
gs
call
pop
lods
add
add
cmp
sbb
push
cmps
xor
aam
adc
mov
sub
repz
inc
lods
sub
daa
sub
sbb
sub
dec
dec
mov
and
or
bound
mov
les
js
(bad)
stos
pop
mov
mov
sbb
push
imul
enter
rcr
inc
mov
int3
jbe
ja
das
mov
add
call
cmp
mov
add
ror
mov
inc
add
test
loop
xchg
inc
cmp
pop
mov
in
sub
dec
dec
and
cwde
cmp
loop
mov
mov
jmp
sbb
add
xlat
(bad)
push
lds
popa
cmp
inc
call
adc
bswap
and
sbb
sbb
cmps
and
and
cmp
or
add
and
pop
xchg
in
add
jp
dec
fwait
call
stc
add
cmp
inc
(bad)
dec
stc
es
shr
out
(bad)
sahf
inc
xchg
sbb
cmps
mov
enter
loope
xor
dec
call
pushf
clc
inc
xor
sbb
inc
inc
inc
in
mov
mov
mov
inc
jmp
add
or
js
push
cmp
aaa
pop
sub
inc
call
(bad)
rol
add
add
inc
nop
pop
cdq
sbb
inc
adc
or
add
xchg
sub
jb
cmp
es
push
push
iret
mul
sub
dec
inc
add
into
xchg
jmp
test
rcr
ins
adc
adc
add
jnp
loope
mov
rol
loop
xchg
push
or
mov
or
sbb
nop
or
rol
inc
ror
imul
aad
and
jnp
stc
push
in
fist
clc
rcl
jecxz
xchg
push
out
retf
and
cmps
dec
mov
loope
mov
aas
add
add
inc
add
push
popf
adc
mov
push
mov
je
ret
add
test
inc
outs
(bad)
(bad)
retf
sbb
dec
bound
sbb
add
mov
popa
push
movs
sbb
sbb
arpl
pop
nop
add
push
mov
add
push
jnp
jecxz
retf
or
xchg
and
add
jl
add
jo
pop
mov
inc
out
jns
inc
adc
xchg
sbb
pop
pushf
push
pop
repz
sub
and
and
mov
jp
lds
(bad)
xor
arpl
out
mov
inc
jecxz
daa
lea
xor
mov
mov
add
shr
push
sub
pop
cdq
push
push
add
add
js
loop
aaa
pop
cmp
mov
call
in
ds
and
xor
pop
lock
adc
call
lods
adc
mov
add
ins
outs
jb
cmp
jo
mov
sub
or
add
out
inc
mov
loop
push
inc
scas
push
jbe
dec
jnp
sbb
mov
cmp
jg
mov
add
mov
and
sub
dec
rcl
(bad)
sbb
imul
sub
lea
add
outs
sbb
loopne
sub
add
scas
cmp
dec
add
sti
shr
inc
daa
jmp
mov
cmc
inc
jecxz
add
jg
jecxz
rcl
mov
jmp
les
stos
push
adc
jecxz
push
lds
push
or
push
adc
mov
add
add
(bad)
xor
add
dec
pop
arpl
aad
pop
test
in
push
jnp
pop
ret
outs
fs
mov
push
repnz
(bad)
stc
mov
push
call
push
inc
fsub
add
mov
in
push
pop
mov
call
adc
inc
push
mov
jmp
gs
xchg
sub
fadd
push
mov
cwde
or
xlat
add
and
mov
in
repnz
mov
mov
stos
arpl
dec
mov
add
nop
rol
and
iret
fidivr
xchg
cmp
in
retf
add
loopne
pop
or
push
fsub
push
addr16
stc
jns
cmps
xor
mov
mov
sti
sti
test
mov
pop
add
inc
push
ror
fnstsw
pop
icebp
add
enter
sbb
lods
shl
mov
mov
fstp
and
cdq
mov
int
movs
rcr
inc
cmp
loopne
push
in
sbb
lahf
pushf
and
mov
cdq
sub
pusha
sbb
add
adc
add
push
xchg
ins
jmp
es
rcr
test
add
inc
add
ror
push
call
(bad)
add
loopne
or
mov
push
mov
sbb
inc
rol
cdq
loope
push
mov
loope
mov
movs
xchg
sar
mov
push
add
fild
add
inc
fld
cmp
cmp
mov
push
lods
ror
push
popa
adc
fmulp
sbb
jno
es
jae
or
adc
adc
(bad)
popa
pop
or
loopne
in
dec
jb
mov
mov
std
sub
sub
pop
js
into
sbb
int
mov
pop
pop
dec
pusha
ins
xchg
lahf
loop
pop
sub
and
icebp
inc
ins
fld
jno
repz
xor
rcl
add
xchg
or
mov
xor
adc
push
inc
rol
adc
mov
hlt
sbb
sbb
retf
shl
cs
and
cli
sub
add
dec
and
arpl
pop
sbb
pop
adc
dec
dec
nop
push
cmc
mov
lds
and
clc
cdq
mov
sbb
add
jmp
lods
and
enter
dec
push
xchg
cmp
inc
pushf
dec
mov
ret
adc
xchg
xchg
mov
inc
add
pop
into
movs
fcomp
adc
mov
fldenv
dec
xchg
gs
mov
inc
or
push
jno
les
leave
fld1
mov
or
shl
sbb
mov
jno
sbb
sbb
lahf
jno
sar
mov
loop
and
popf
cmc
sbb
outs
pop
or
in
push
dec
ss
dec
pushf
xor
ret
and
adc
pop
cmp
loop
clc
retf
push
adc
fadd
sbb
out
xchg
daa
xor
add
xchg
movs
das
add
rcr
or
fs
cmp
inc
inc
cwde
int3
ins
call
lds
jp
push
add
pop
push
and
mov
adc
cmps
sbb
loop
add
or
es
call
xchg
pusha
fimul
sbb
(bad)
enter
aam
pusha
cmps
sbb
and
add
jle
push
push
rol
test
inc
inc
pushf
cmps
cmp
in
shl
out
adc
es
dec
jno
jge
daa
(bad)
mov
loop
add
retf
mov
and
sbb
int3
adc
outs
pusha
add
and
pop
jne
cmp
add
jl
sbb
hlt
ins
cmps
cmp
nop
push
ror
fs
call
retf
pop
adc
(bad)
loopne
shl
rol
push
and
xchg
inc
loopne
es
inc
dec
jle
das
mov
pusha
push
gs
nop
pushf
adc
and
jge
rcl
dec
mov
add
add
inc
inc
lods
mov
ins
std
add
mov
jne
call
subps
es
and
dec
add
add
adc
lods
or
(bad)
sbb
push
test
xchg
fcmovbe
jnp
pop
mov
push
in
add
jge
jmp
pop
pop
inc
test
test
or
push
or
dec
ret
out
xchg
xlat
dec
pop
and
mov
into
push
dec
push
aas
dec
ret
dec
mov
movs
outs
cmps
in
or
add
mov
movs
mov
adc
and
jmp
adc
and
retf
fiadd
push
lea
push
mov
or
iret
sub
push
ds
cmp
jns
stc
and
nop
or
jg
sub
and
add
adc
ins
inc
es
nop
add
gs
mov
test
(bad)
sub
dec
hlt
xor
mov
sub
stos
push
bound
and
ins
leave
xchg
sub
in
imul
pop
cli
xchg
cmp
fdivr
adc
in
or
xor
push
out
adc
(bad)
sti
fs
mov
sub
(bad)
pop
sbb
jo
scas
loop
add
mov
pop
in
leave
add
jns
retf
add
jbe
fst
mov
sbb
loopne
cmp
lea
jl
stos
push
or
sti
ror
test
fstp
in
dec
in
movs
stos
mov
dec
pop
in
aad
push
sbb
push
cmp
push
retf
nop
ret
sbb
push
add
adc
rol
adc
fldenv
mov
dec
xchg
hlt
or
mov
push
rcr
dec
cdq
mov
add
mov
dec
mov
mov
aad
sub
adc
retf
mov
jecxz
out
push
rcl
jle
dec
fst
cwde
cdq
and
inc
ins
push
add
popf
push
test
in
aaa
int
cmps
jb
dec
out
sub
sbb
or
add
mov
in
mov
loop
daa
mov
add
add
lods
sbb
in
retf
or
cmc
mov
ins
imul
dec
popa
div
dec
sbb
and
in
fwait
int3
lods
sbb
and
mov
jmp
ins
stc
ins
scas
fs
cmps
(bad)
out
loop
and
xlat
lock
js
loope
xor
xchg
dec
fisttp
adc
call
enter
sub
lds
sub
icebp
addr16
and
and
push
add
push
in
mov
test
mov
cmp
inc
in
push
cli
xchg
pop
clc
test
scas
fld
jo
jo
xlat
ror
jl
adc
inc
popa
mov
mov
cmps
pop
add
push
add
loope
stos
push
xchg
sub
pop
pop
in
jb
nop
or
fisubr
mov
ror
rol
sub
dec
popa
out
xchg
inc
hlt
dec
lea
cmp
add
sbb
xchg
sbb
adc
pusha
adc
sub
pop
enter
rol
xor
shl
pushf
(bad)
sub
daa
call
jnp
inc
xchg
fisubr
fwait
repnz
rcr
xchg
(bad)
xsave
xchg
in
inc
xor
pop
stos
mov
jmp
lock
or
xor
sbb
push
xchg
pushf
loopne
mov
dec
lock
push
ret
or
cmps
cmc
mov
and
sar
cmp
mov
sbb
jmp
fs
adc
pusha
pop
sub
xor
mov
test
dec
push
add
push
aaa
cmp
pop
shr
jmp
xchg
mov
ins
test
dec
pop
add
lods
repz
lods
dec
mov
cmp
out
out
clc
push
mov
aaa
sbb
ffreep
pusha
pop
test
cmp
inc
inc
sub
sub
mov
loope
xor
add
pusha
xchg
pop
sbb
mov
out
adc
inc
dec
jne
sbb
and
outs
mov
sbb
out
xchg
xchg
and
push
cmp
adc
xchg
or
(bad)
fidivr
add
mov
retf
movs
cdq
cmp
add
push
cmp
arpl
bound
les
cmp
xchg
pop
pop
xchg
xor
neg
mov
push
inc
jmp
retf
in
test
pop
mov
or
shl
fisttp
and
mov
push
(bad)
ffree
jno
push
cmp
or
or
inc
push
sub
les
jb
inc
add
mov
dec
not
int3
adc
push
lods
mov
stos
imul
aaa
ds
sub
fst
retf
stos
jb
jmp
ss
jge
das
sbb
cwde
out
(bad)
(bad)
cmp
cs
push
xchg
je
mov
repz
ja
jbe
and
push
inc
js
popa
shl
jne
push
ja
ja
mov
imul
loop
pminsw
jmp
sub
add
and
pop
test
fisubr
adc
jl
mov
mov
mov
das
sub
in
jl
imul
or
add
xor
pop
add
pop
test
pop
inc
clc
xchg
arpl
pop
or
xchg
ja
inc
pop
rcl
sbb
sbb
into
sub
ss
xchg
or
mov
stc
gs
xor
aam
arpl
add
test
jge
push
lds
push
jnp
dec
jecxz
bound
out
or
push
sbb
icebp
retf
adc
daa
lds
sub
mov
pop
sbb
or
(bad)
pop
pop
xchg
dec
mov
fld
nop
xlat
pop
cmp
push
pop
adc
jns
imul
cmp
xchg
xchg
ds
mov
aaa
add
sbb
fist
addr16
mov
mov
pop
and
das
sahf
xor
shr
ss
dec
dec
scas
in
out
mov
jnp
mov
call
dec
aam
sub
lods
xchg
test
gs
rol
or
mov
add
popf
push
xor
xchg
scas
rol
and
mov
pop
cli
gs
mov
adc
mov
cmp
jmp
lods
add
arpl
dec
mov
(bad)
ss
xchg
sbb
test
jecxz
ror
add
fwait
sbb
cmp
sbb
jo
lahf
stc
xor
addr16
push
xchg
das
aam
(bad)
mov
sahf
mov
and
inc
push
dec
fidivr
div
mov
retf
addr16
imul
jl
dec
pop
cmp
dec
(bad)
data16
mov
adc
cwde
add
repnz
call
data16
pop
sbb
add
pushf
pop
fldcw
mov
jne
(bad)
xchg
inc
push
clc
retfw
jge
and
jl
sti
cmp
and
inc
icebp
mov
popa
push
les
and
and
mov
cmp
ret
dec
clc
push
inc
cmp
xchg
or
mov
xlat
sub
jle
movs
scas
add
rol
lods
sub
add
(bad)
xor
or
mov
out
imul
xor
xchg
mov
shl
push
fnsetpm(287
test
ss
(bad)
mov
jmp
repz
adc
std
test
(bad)
repz
retf
jle
jmp
sbb
test
leave
dec
les
movs
jo
hlt
rsm
daa
mov
imul
jge
add
mov
adc
or
xchg
pop
data16
call
lods
push
adc
or
inc
pusha
xchg
xor
add
adc
(bad)
in
sbb
mov
sub
mov
add
sbb
adc
sbb
cdq
xor
sub
mov
xchg
iret
xchg
xchg
adc
or
cwde
add
mov
cwde
scas
sbb
xchg
ficom
loop
popa
and
mov
and
loope
sub
add
add
sbb
xchg
aad
xor
xor
cmp
jge
loopne
or
and
inc
add
ret
inc
pop
pop
gs
int3
cmp
add
jo
add
or
pop
xor
test
pop
stc
or
adc
and
add
or
aas
add
add
add
add
add
push
inc
loop
sub
(bad)
mov
push
jns
sahf
push
test
pop
lods
rol
cwde
jmp
pop
cwde
pop
xor
and
fcomip
arpl
cmc
mov
loopne
add
pop
adc
push
dec
xchg
dec
dec
push
sbb
popf
fwait
pop
je
sub
arpl
fs
sbb
sub
arpl
ja
xor
mov
jbe
and
mov
das
das
sbb
sbb
mov
xchg
cwde
push
call
ins
je
or
mov
pusha
xor
lods
xor
scas
push
movs
test
mov
movs
js
imul
or
jns
mov
inc
test
les
xor
ret
mov
or
js
(bad)
loopne
adc
jmp
inc
xor
pop
lds
iret
adc
ins
add
loopne
cmp
jbe
or
dec
mov
ret
test
and
dec
cmps
fs
cmp
inc
(bad)
imul
mov
aas
sbb
mov
out
add
push
push
dec
jbe
(bad)
retf
aaa
mov
push
movs
shr
inc
xor
push
add
adc
mov
xchg
xchg
jle
dec
cdq
test
stos
shl
addr16
popa
sub
imul
loop
pop
int
test
pop
adc
or
mov
adc
add
sub
xchg
loope
lea
xchg
das
lods
pop
retf
jo
pushf
mov
mov
ret
imul
jns
hlt
(bad)
loopne
push
pop
clc
cmp
lds
mov
or
dec
call
bnd
test
jmp
mov
add
lahf
pop
hlt
jns
pop
and
or
call
push
push
test
push
xor
out
popa
jge
mov
push
clc
loope
sub
xor
jp
hlt
mov
pop
mov
push
cmp
leave
cmps
pop
mov
or
dec
cwde
popf
dec
call
dec
sub
xchg
or
inc
xor
cmp
arpl
inc
jb
in
clc
fldenv
cmps
nop
inc
push
mov
push
pop
push
pop
inc
punpckhdq
fild
sub
xor
rcr
push
adc
dec
ficom
dec
ret
int
rol
pop
xor
add
and
xor
addr16
adc
fdivp
enter
nop
add
push
es
mov
pop
cmp
add
scas
mov
mov
adc
rol
cmps
pop
stos
jmp
sub
add
stos
jbe
fidiv
or
lahf
fwait
or
test
cmp
push
imul
cmps
stos
(bad)
out
mov
or
add
push
push
xor
push
scas
repnz
lds
xchg
cmp
sbb
(bad)
inc
pop
or
(bad)
call
mov
mov
push
mul
sti
data16
ds
call
mov
stos
and
retf
push
or
stc
sub
outs
lods
jne
mov
rol
inc
add
ror
dec
sub
add
stc
pop
loopne
(bad)
pusha
cs
xor
(bad)
xchg
mov
or
pop
data16
or
mov
retf
lock
push
and
fidivr
ret
pop
cmp
sub
dec
add
or
push
mov
xchg
cmp
mov
cmp
loope
mov
cmp
shl
jmp
sbb
aam
es
push
ret
mov
xchg
addr16
mov
cld
scas
pop
and
mov
rol
add
sub
mov
add
fmul
push
hlt
jmp
push
and
or
mov
mov
sti
movs
inc
push
dec
out
pop
adc
scas
jg
xchg
out
in
cld
repz
mov
cmp
pop
mov
adc
inc
cmp
in
jl
cmp
sahf
(bad)
xor
in
dec
imul
xor
xor
jb
repz
mov
inc
into
sub
pop
(bad)
data16
daa
and
push
mov
pop
pop
(bad)
je
das
or
rol
hlt
popf
cmp
fs
push
out
(bad)
mov
jno
int3
fiadd
mov
shr
bound
aad
sbb
ret
sbb
repz
cmps
(bad)
fdivr
ins
jo
mov
cmovle
jno
fnstsw
retf
(bad)
(bad)
adc
push
fst
data16
pop
pop
mov
sbb
repnz
sub
(bad)
push
loopne
xor
pusha
jne
xor
add
push
cmp
mov
lahf
sbb
dec
in
lods
sub
and
mov
ins
add
je
fisub
leave
retf
sbb
add
int3
push
or
xadd
pop
ret
pop
and
cs
bound
scas
pop
and
adc
js
and
pop
dec
into
jb
xchg
cwde
call
pop
cmp
sub
and
mov
imul
xchg
mov
add
into
or
popf
or
and
jl
sub
push
in
add
inc
mov
push
jns
inc
sub
enter
imul
rol
push
and
movs
jle
jecxz
sbb
xchg
jmp
stc
retf
mov
vmread
adc
inc
sbb
ds
push
addr16
popa
mov
(bad)
jnp
adc
add
adc
dec
dec
dec
jb
pop
lods
adc
mov
(bad)
aaa
add
pusha
lds
loopne
add
bound
pop
cmc
pop
aad
cli
jne
cmp
sbb
push
popf
xchg
push
rcr
cwde
leave
mov
test
mov
jecxz
shr
jnp
push
into
jp
fwait
pushf
in
or
call
push
pop
push
int3
push
adc
push
inc
add
mov
aas
mov
mov
leave
push
push
fsubr
mov
aad
pminub
inc
arpl
add
dec
dec
pop
cdq
inc
pop
clc
je
xor
mov
mov
lods
jmp
sub
sbb
adc
cs
cmp
or
add
test
leave
arpl
int3
cmp
pop
jmp
xchg
stos
add
inc
jbe
push
mov
sbb
test
into
or
sbb
push
bound
mov
xchg
xchg
fild
(bad)
mov
xlat
std
sub
mov
add
inc
mov
push
shl
sbb
(bad)
add
push
pop
or
sahf
sbb
popa
inc
fcmovbe
nop
and
icebp
add
mov
lods
gs
outs
pop
popa
jbe
push
shr
lods
es
cmp
test
sbb
add
adc
mov
in
push
sub
or
add
push
jnp
sbb
xchg
fcomp
xchg
out
loope
ret
push
imul
jp
mov
jnp
out
xor
enter
cdq
pop
lods
push
and
sbb
mov
into
dec
push
das
cmps
push
lock
dec
aaa
mov
jnp
xchg
dec
add
jns
sbb
outs
(bad)
add
inc
or
mov
pop
addr16
out
retf
imul
sub
pop
dec
sub
xchg
stos
inc
retf
jmp
in
arpl
sbb
adc
xor
(bad)
(bad)
enter
repz
mul
cmp
addr16
jne
neg
pop
sti
(bad)
(bad)
mov
imul
or
mov
push
imul
jno
cmp
(bad)
mov
out
outs
ss
push
ss
in
jnp
jecxz
cmps
mov
pop
nop
add
mov
sub
aam
and
pop
mov
inc
ret
adc
and
repz
(bad)
stos
movs
jbe
xor
fcmovnu
push
dec
jns
mov
jge
cmp
cmp
mov
jo
inc
push
push
int3
xchg
cli
mov
mov
(bad)
out
pop
aaa
int
fiadd
cmp
sub
scas
jbe
jle
shl
push
jo
out
sbb
and
jnp
mov
fsubr
inc
jmp
add
inc
jo
jge
cmp
pop
in
test
lock
stos
jmp
out
inc
or
call
or
add
out
test
sbb
ins
sbb
out
pop
and
sbb
in
inc
call
sbb
mov
xor
test
imul
test
mov
jbe
out
sbb
enter
repz
or
js
loop
imul
jns
jnp
mul
fwait
mov
sbb
jle
aad
jmp
jo
mov
xor
iret
shl
and
aam
mov
add
jbe
(bad)
jbe
shr
pop
jg
push
inc
jge
pop
mov
add
push
xlat
jg
mul
pop
jle
inc
sbb
jns
pop
add
jo
or
andps
xor
inc
add
aaa
or
jne
xchg
lds
push
outs
mov
(bad)
fisub
ret
xor
adc
push
pusha
jle
mov
add
push
sub
push
popa
dec
xchg
sub
push
int
sub
fs
hlt
and
jo
xchg
cmps
jns
push
add
cmps
jns
test
dec
rol
xchg
idiv
or
and
pop
push
jno
(bad)
xor
mov
xchg
jmp
inc
in
test
hlt
mov
inc
add
repnz
jns
inc
inc
mov
test
ret
es
push
inc
data16
add
add
mov
jb
retf
out
cmp
jl
jb
jecxz
add
test
cmp
call
mov
inc
pop
inc
cmp
test
add
dec
pop
mov
xor
jb
mov
fdiv
add
mov
mov
add
inc
mov
fadd
mov
push
aam
cmp
sbb
in
dec
jecxz
xchg
cmps
cs
push
jo
jp
idiv
mov
mov
mov
enter
add
jge
clc
xchg
push
out
xchg
xchg
add
push
jno
mov
mov
aad
mov
inc
ds
push
add
cs
movs
clc
mov
jge
jecxz
dec
test
dec
sbb
xchg
add
rol
movs
mov
mov
ds
xchg
fist
jno
imul
sub
cs
loope
test
enter
xchg
inc
cwde
xor
mov
jmp
jge
add
or
add
jns
xor
sbb
xchg
pop
sub
push
jb
xor
ins
mov
nop
pop
leave
gs
mov
sub
scas
push
push
xor
add
outs
push
jns
push
shl
inc
repz
dec
rcl
jne
hlt
ja
fdiv
ret
les
les
cwde
xchg
and
xchg
pop
or
pop
push
mov
xlat
arpl
xor
lds
mov
nop
data16
(bad)
add
add
lock
dec
mov
add
rol
jo
movs
dec
add
xor
push
into
aaa
jne
mov
add
mov
xchg
mov
add
mov
nop
or
fadd
xchg
cmp
pop
imul
mov
lahf
sub
mov
pop
popa
outs
aam
push
inc
jb
clc
xchg
dec
and
push
add
dec
jmp
popf
pop
xor
out
jmp
ins
js
push
gs
idiv
mov
cmp
(bad)
repz
add
jb
push
cmp
sub
les
pop
push
rol
cmp
ss
cmps
ins
iret
(bad)
mov
fadd
cwde
xchg
xlat
stc
add
(bad)
jmp
ret
es
cdq
dec
enter
mov
imul
inc
xor
inc
push
jp
xchg
enter
push
inc
cmp
clc
cmps
push
movs
or
adc
push
mov
add
cmp
pop
sbb
mov
mov
add
xor
and
jo
movs
das
pop
nop
sbb
mov
xchg
push
cmp
add
push
jle
jne
lock
pop
and
jns
xchg
push
xchg
outs
sub
(bad)
jae
sbb
cdq
add
and
fst
add
pusha
add
xor
loopne
mov
add
fs
(bad)
mov
stos
jno
cmps
(bad)
push
push
inc
add
inc
lods
mov
pop
mov
adc
xchg
pop
ins
push
movs
sub
stos
mov
add
jo
cmovo
add
jecxz
sub
add
push
or
nop
popf
stos
mov
cdq
test
jecxz
adc
xor
or
dec
out
jae
jp
cmps
add
add
jg
gs
fstp
and
nop
call
pushf
(bad)
sahf
push
mov
add
add
sbb
add
dec
push
inc
add
lods
add
scas
int
push
in
push
js
cli
mov
stos
jp
(bad)
jl
push
add
or
test
mov
xchg
sti
xchg
cmp
sub
mov
stos
sbb
dec
inc
mov
push
xchg
pop
or
sub
movs
mov
inc
add
lods
add
popf
popa
je
inc
add
sbb
push
add
add
jns
cmp
mov
retf
mov
pop
sbb
mov
push
or
add
cmp
add
mov
fiadd
gs
mov
fist
dec
add
pop
pop
test
mov
mov
je
sub
movs
mov
cwde
cmps
sti
jp
add
mov
cmp
cwde
das
mov
adc
or
jp
add
add
mov
sub
dec
sub
mov
mov
mov
stos
mov
xor
dec
inc
pop
test
aaa
aad
add
sub
and
push
pusha
jg
ins
jne
mov
mov
cmp
lods
jmp
mov
loopne
ss
xor
sub
aam
mov
mov
pusha
inc
fwait
add
push
sub
mov
mov
sbb
jmp
repz
or
arpl
and
lods
adc
jp
leave
retf
add
mov
mov
kmovb
pop
push
sbb
push
test
jne
add
popf
inc
mov
fsubr
ret
mov
imul
sub
rcl
(bad)
retf
push
pop
jb
leave
jl
repz
inc
jl
dec
ins
sti
ret
mov
(bad)
std
cli
movs
cmp
dec
inc
stos
jno
push
push
cmc
stos
add
scas
push
adc
jecxz
xchg
mov
shl
xchg
ins
ret
(bad)
jb
mov
imul
mov
imul
adc
cmps
add
movs
xor
or
pop
cli
sahf
and
mov
push
mov
jb
mov
sbb
nop
in
xchg
sbb
jnp
scas
pop
push
mov
sbb
nop
retf
fmul
mov
sub
sub
test
mov
xor
sbb
xchg
xor
xor
add
push
les
xor
sbb
mov
dec
mov
jo
es
sbb
add
mov
hlt
jl
(bad)
jp
lods
add
imul
add
cli
mov
push
retf
mov
mov
mov
jmp
rcl
sbb
int
ins
mov
mov
push
sbb
ret
movs
int
sbb
xor
pop
xor
out
in
int3
jb
add
add
lock
xor
lds
shl
lods
leave
or
or
add
xchg
cmp
xor
cwde
mov
aas
jl
mov
mov
jl
jg
add
xor
add
lods
mov
pop
iret
mov
fwait
ror
jo
add
rcl
jnp
cs
dec
ins
aam
adc
xor
rep
add
pusha
add
mov
pop
add
mov
push
cmp
sbb
add
or
mov
pusha
fsubp
cmp
add
nop
add
add
add
cmp
add
retf
div
inc
cmp
add
fstp
mov
sti
into
xor
nop
sbb
sbb
fcomp
shl
dec
add
fimul
lods
add
loopne
inc
sbb
xchg
dec
xlat
xor
sbb
sbb
dec
ins
lods
inc
shr
mov
pusha
sub
(bad)
fisub
pusha
ror
add
adc
fmul
rcr
fiadd
(bad)
mov
add
lock
mov
pop
pop
and
pop
mov
push
mov
or
add
scas
mov
mov
fst
test
imul
jo
shr
popf
fsubrp
mov
adc
in
sbb
cmp
sub
sar
retf
xor
mov
sbb
cmp
mov
sbb
add
sbb
add
xor
mov
jp
sub
retf
fndisi(8087
push
mov
pop
pop
mov
shl
add
and
mov
ins
mov
cmp
cmp
cmp
add
adc
movs
stos
ror
add
jecxz
mov
inc
pop
jmp
sbb
add
dec
dec
fimul
mov
sbb
inc
stos
pop
cs
cmp
xor
mov
movsx
mov
inc
xchg
push
dec
jo
mov
adc
int3
popf
fisub
fild
loope
mov
jnp
shl
mov
stos
jge
out
fwait
pop
dec
fsubrp
mov
adc
xlat
adc
dec
in
aam
outs
jmp
jle
call
mov
xor
fistp
mov
cmp
add
mov
add
xor
retf
mov
add
loope
movs
ins
and
mov
ret
je
aam
ins
int3
jge
mov
dec
mov
sbb
(bad)
std
jecxz
sbb
xchg
(bad)
in
cdq
popf
fiadd
fst
jmp
into
fld
mov
cmp
movs
retf
add
ins
add
and
sub
sub
sbb
ret
xor
jmp
sbb
js
jl
mov
add
in
aad
leave
jmp
in
mov
retf
jmp
aam
pop
repnz
fdivp
fwait
into
sbb
nop
fnstenv
div
jmp
mov
sbb
mul
mov
or
fistp
popf
call
mov
add
hlt
adc
movs
inc
mov
xor
mov
jnp
mov
cmp
ss
out
(bad)
mov
shr
cmp
outs
maskmovq
div
fbstp
sti
mov
fidiv
add
imul
cmp
mov
mov
pop
popa
xchg
aam
mov
add
ins
jmp
test
scas
jp
sub
mov
or
mov
cli
pop
sbb
(bad)
fidivr
inc
push
jmp
mov
(bad)
jp
sti
mov
add
lods
mov
add
push
add
loope
pop
sub
mov
retf
inc
and
adc
sub
push
in
push
gs
inc
scas
fldcw
ja
and
out
xchg
mov
jmp
loop
addr16
pusha
loop
jno
addr16
mov
and
xor
inc
mov
add
inc
(bad)
repz
test
add
xor
daa
mov
aam
test
add
loopne
mov
leave
jmp
dec
and
add
lods
jmp
and
inc
pop
movs
dec
sub
fwait
in
lds
setge
dec
add
mov
xor
sbb
aas
test
xor
inc
adc
push
mov
and
or
or
nop
mov
test
mov
push
add
js
and
sahf
add
xor
add
xor
leave
jno
addr16
popf
aaa
and
int
jb
int3
and
inc
loopne
cmp
push
inc
xchg
xchg
or
mov
mov
dec
pcmpgtw
and
adc
scas
add
jae
and
and
mov
pop
push
(bad)
cmc
in
pop
push
int3
xchg
sub
mov
in
mov
ficom
sbb
call
jae
cmp
or
xlat
arpl
push
pop
mov
push
fmul
cmp
add
adc
fs
ins
sbb
sub
in
cmc
dec
ret
adc
dec
sahf
push
jo
fs
sub
pop
push
repnz
jno
dec
adc
iret
bound
cmp
and
out
add
retf
mov
add
sti
xchg
test
sub
xchg
retf
and
rol
push
clc
mov
stos
xor
push
add
xor
pop
dec
lods
mov
and
dec
dec
or
repnz
iret
mov
add
push
mov
sbb
dec
add
mov
sbb
mov
cmp
cmp
mov
add
test
and
jge
adc
test
retf
cmp
ficomp
xor
dec
jo
add
out
mov
mov
test
pop
std
dec
in
nop
inc
push
mov
and
ror
cmp
mov
jp
lock
mov
lods
and
or
add
cmp
cs
int3
lods
loope
sbb
mov
stos
scas
mov
xor
jmp
loopne
pusha
ins
stc
or
push
sbb
dec
mov
(bad)
sub
outs
xchg
and
mov
dec
es
xchg
pop
push
xor
sbb
add
adc
mov
add
push
lock
inc
adc
call
test
cs
sub
jl
xor
cmp
cmp
mov
in
and
ror
leave
mov
ins
sbb
add
push
movs
out
and
push
iret
mov
push
or
or
cmps
jmp
lock
or
push
pop
adc
sub
lds
ret
inc
stc
mov
popf
add
jae
ins
iret
mov
fldcw
dec
jle
in
add
test
pop
dec
or
mov
jne
bound
jnp
and
es
cmp
mov
movs
sub
dec
and
and
cmp
call
push
test
jmp
sub
pop
jnp
xchg
leave
sub
mov
push
jo
jo
jbe
inc
inc
js
in
cmp
fs
xchg
dec
jp
push
or
push
and
shr
das
dec
(bad)
push
aas
nop
inc
inc
and
jmp
inc
mov
test
add
test
int
mov
les
sti
push
aas
fs
xchg
push
stos
adc
int3
or
mov
pusha
pop
sahf
test
mov
mov
add
jo
lea
lea
push
xchg
pop
loop
loope
or
idiv
in
pusha
jmp
and
and
sbb
add
aas
dec
and
push
add
xchg
inc
enter
xchg
loop
(bad)
les
ins
imul
shr
shl
mov
or
push
rol
or
dec
jl
push
inc
lahf
retf
int
outs
push
scas
leave
xchg
pop
call
retf
je
jae
mov
xor
pop
dec
xor
sbb
push
adc
adc
fadd
cld
adc
shl
pop
sbb
aam
repnz
cmps
enter
inc
aaa
loopne
ins
adc
pushf
push
(bad)
daa
inc
add
out
loope
jno
inc
mov
jnp
inc
dec
ror
inc
adc
push
lock
dec
and
mov
adc
call
and
pop
pcmpgtb
sub
nop
ja
adc
cmps
cwde
shr
jp
or
add
retf
cwde
in
ins
leave
pushf
repz
sub
aam
call
or
jg
xor
and
addr16
adc
js
jnp
ins
in
out
or
xor
cld
jo
add
clc
fadd
pop
clc
mov
loopne
push
sti
ret
pop
cmp
fadd
add
rol
stos
daa
xor
push
mov
cld
mov
or
inc
out
mov
gs
arpl
add
sub
fsubr
push
jbe
sbb
mov
adc
pop
mov
ins
add
push
ss
adc
sbb
enter
mov
je
clc
sub
ret
mov
add
inc
pop
xchg
adc
sahf
and
call
and
sub
add
sub
cmp
and
retf
pop
xchg
loope
pushf
pop
and
cli
(bad)
dec
scas
lods
mov
or
and
sti
div
mov
sbb
fs
imul
inc
cmc
cmps
int3
xchg
or
push
or
lods
add
sub
xchg
add
or
shl
jmp
add
aaa
adc
push
dec
pop
fiadd
loopne
or
mov
pop
push
imul
push
jnp
in
pop
jae
xchg
ja
(bad)
inc
sbb
pusha
rcl
xchg
add
mov
bound
sub
add
jecxz
cmp
sbb
dec
add
or
call
pop
cmps
mov
add
or
test
cld
popa
out
mov
jae
test
movs
and
rcr
pusha
int
add
icebp
mov
jo
loop
sbb
and
ins
loopne
and
mov
cmp
lahf
es
add
shr
jmp
xchg
cmp
mov
or
adc
xor
and
dec
fsubr
and
push
push
push
call
sbb
xor
je
jbe
pop
sar
fisub
sub
pop
bound
int
(bad)
rol
cmps
xlat
xor
rcl
add
fsub
out
js
add
in
test
mov
sbb
pop
movs
outs
xchg
into
jae
adc
xchg
cmp
mov
mov
jbe
mov
cmp
pop
(bad)
jb
mov
or
mov
and
push
sbb
adc
or
cdq
shl
pop
lock
aam
and
cmp
sub
(bad)
dec
pop
xlat
adc
xor
inc
push
add
adc
ss
jge
pop
repnz
cdq
int
jl
add
xor
sub
sub
scas
inc
mov
fwait
dec
mov
push
adc
add
dec
das
xor
mov
push
repz
add
adc
pop
xlat
jne
es
les
mov
cmp
idiv
(bad)
or
aaa
rcl
sbb
add
xchg
popf
push
imul
scas
add
and
shl
and
(bad)
add
enter
ds
or
add
clc
lea
je
movs
popf
sti
fnsave
jb
loopne
fild
push
lock
mov
jns
dec
push
data16
sbb
jno
push
mov
out
fstp
movs
bound
adc
inc
das
or
add
push
int3
pop
add
out
pusha
push
(bad)
jp
mov
loopne
xchg
(bad)
jmp
enter
sti
pop
lock
mov
adc
icebp
cmp
cmp
add
call
xchg
mov
aad
int
push
sti
ja
call
and
jmp
rol
clc
hlt
popa
mov
jle
fild
sbb
add
inc
imul
xchg
pop
jle
add
call
scas
lea
rol
mov
mov
retf
inc
sub
repnz
mov
fsubr
xor
and
cmc
int3
out
or
add
xor
dec
mov
mov
add
psubd
jp
(bad)
outs
lods
xor
add
ins
or
iret
add
out
sbb
movd
push
xchg
inc
loop
or
call
add
test
push
inc
out
cmp
pop
or
xchg
xchg
stos
inc
push
and
inc
inc
retf
adc
mov
push
ins
pop
xor
jle
add
xor
inc
clc
in
or
mov
adc
sar
add
and
movs
sub
pop
mov
jmp
mov
xor
imul
add
out
hlt
enter
popa
fild
or
jmp
aas
aam
out
cld
loope
mov
shl
jmp
jp
jl
(bad)
(bad)
xchg
push
adc
jmp
add
es
inc
repnz
xstore-rng
cmps
sub
in
dec
adc
jecxz
or
rol
movs
pushf
stos
or
or
cmp
and
sub
sbb
cmp
bound
mov
jae
push
or
add
add
iret
add
adc
mov
(bad)
gs
iret
clc
push
push
add
retf
jmp
into
inc
pushaw
adc
dec
push
out
cli
or
pop
nop
and
mov
scas
sub
jno
addr16
rol
add
es
add
add
shr
dec
rcr
sub
mov
cmp
jbe
(bad)
movs
push
add
jmp
imul
xchg
push
jmp
xchg
stc
jbe
xor
push
repnz
or
les
and
and
sub
jo
add
and
test
add
sbb
mov
xlat
jb
jnp
add
pop
xor
and
and
cwde
ret
(bad)
es
mov
jl
push
not
daa
xlat
out
rep
ret
xchg
das
sbb
pop
xor
mov
in
cmp
nop
add
loop
or
and
xchg
sub
add
mov
pop
adc
pop
xor
rol
xor
arpl
pop
adc
call
xor
inc
por
xor
mov
pop
out
push
xchg
xor
sbb
xor
bnd
or
inc
sub
scas
mov
imul
add
push
and
movs
or
loopne
xor
add
pusha
add
inc
add
repz
cmps
shr
inc
adc
in
clc
push
cmp
inc
leave
jmp
dec
sub
jno
test
pusha
or
fmul
xchg
sar
pop
jecxz
push
inc
xor
nop
cmp
imul
lds
mov
rol
fld
mov
sub
add
xor
and
and
ds
push
and
into
shr
mov
les
or
adc
xor
inc
push
xor
rol
test
jecxz
or
mov
fst
adc
dec
or
push
push
outs
loopne
js
add
xchg
push
int3
loope
adc
xchg
xor
push
xor
dec
lea
pop
add
test
pop
daa
xchg
cmp
inc
xchg
rcl
aam
jecxz
dec
dec
sub
ror
int3
aam
mov
xor
out
stos
pop
fidiv
inc
add
push
repnz
shr
inc
push
shl
icebp
push
and
inc
push
cli
mov
cwde
je
adc
shl
jmp
sar
and
adc
call
in
mov
mov
addr16
icebp
xchg
inc
icebp
repz
pop
add
in
je
adc
push
push
sahf
int3
add
and
mov
jmp
jg
movs
xor
push
cwde
sub
sbb
adc
or
sub
or
je
mov
pop
ror
(bad)
mov
popa
add
pop
rol
mov
pop
mov
aas
and
xor
loope
jne
inc
jmp
xor
dec
loope
shl
jmp
in
sub
inc
movs
outs
xchg
aam
ins
xor
nop
mov
xor
or
xchg
xor
pusha
add
push
cmp
popa
inc
push
xor
add
add
out
adc
adc
inc
add
inc
jb
cmp
(bad)
aam
push
mov
call
inc
jmp
jmp
mov
jmp
test
sbb
mov
test
ds
jne
movs
push
arpl
xchg
inc
pop
and
sbb
cwde
rol
cmps
cmp
push
mov
jmp
xchg
adc
xor
(bad)
shl
sub
sbb
push
retf
xor
inc
xor
xchg
and
or
xchg
test
add
inc
xor
jne
sbb
cmp
ds
sbb
or
sub
pcmpeqb
push
push
inc
in
in
adc
sub
jae
stos
repz
lds
mov
sub
scas
push
mov
jnp
push
cmc
xchg
jbe
push
pop
add
or
adc
fst
xchg
xor
inc
jb
retf
xor
out
cdq
xchg
xor
(bad)
jae
out
call
loope
adc
pop
or
sbb
jne
dec
and
or
iret
adc
mov
inc
xchg
sbb
xor
add
rol
xchg
push
push
and
sbb
sbb
pop
push
es
or
or
cmps
je
sbb
cmp
sbb
xchg
adc
adc
popa
leave
mov
sub
(bad)
push
in
xchg
pop
adc
cmp
ss
jns
ss
ja
and
pop
std
in
push
push
sub
or
xchg
sub
hlt
jno
ja
pop
or
pop
rol
repnz
add
jb
mov
cmp
inc
inc
push
mov
xlat
dec
mov
add
pusha
js
js
fist
mov
dec
mov
(bad)
rol
add
data16
lock
xor
sbb
xor
add
imul
jp
mov
jp
adc
push
hlt
and
inc
xor
inc
sbb
bound
add
arpl
push
pop
and
outs
mov
xchg
enter
js
xchg
in
mov
pop
inc
inc
jnp
jl
jmp
lods
repz
sti
adc
loopne
mov
or
ret
inc
and
xchg
repz
ins
add
call
test
push
push
sbb
pushf
jmp
or
rcr
and
lds
ins
loop
adc
stc
cmp
popa
or
mov
and
cwde
sub
mov
inc
xchg
mov
pusha
mov
sbb
mov
adc
add
jl
and
hlt
js
pop
rcr
jmp
xor
jmp
push
imul
int3
cmp
xchg
inc
popa
and
mov
adc
mov
pop
bound
lods
stos
fisubr
mov
(bad)
pop
add
push
cmp
xor
mov
cli
ds
lock
nop
arpl
cmc
ins
jno
lahf
imul
(bad)
cmovg
xchg
inc
dec
or
nop
scas
and
pop
adc
jge
sub
mov
mov
jo
and
and
lods
xchg
push
add
clc
cmps
jl
(bad)
mov
(bad)
dec
daa
cmc
xor
push
lock
clc
cmp
pop
popa
xchg
or
jp
loop
mov
cli
dec
pop
mov
mov
test
sbb
sub
sbb
sbb
push
mov
inc
push
push
mov
cs
fadd
movs
stc
call
lods
retf
mov
and
cwde
sbb
mov
call
push
sbb
inc
shl
popf
cmp
imul
inc
ror
aam
mov
test
sbb
add
cvtps2pd
imul
(bad)
dec
retf
mov
push
lahf
test
push
sahf
pop
add
loop
mov
push
(bad)
pop
(bad)
push
add
jnp
add
jb
add
sub
stos
daa
mov
bound
mov
(bad)
cwde
add
fadd
movs
xor
retf
inc
or
leave
rcr
pop
mov
retf
push
add
sub
push
loopne
stc
mov
shr
and
jne
cli
scas
or
inc
push
mov
jmp
xchg
iret
pusha
sbb
add
test
sub
adc
and
push
data16
add
jae
das
mov
lods
icebp
in
ror
stc
mov
icebp
and
mov
jo
or
cmps
neg
cmps
scas
jl
xchg
cdq
jne
mov
and
pop
retf
xchg
and
mov
mov
push
adc
sub
outs
jnp
aas
add
dec
and
cmp
lods
adc
cmp
sar
xchg
pop
retf
ins
(bad)
repnz
cwde
cdq
cmp
jle
inc
push
rcr
rcl
xchg
push
mov
and
inc
out
or
cmp
(bad)
scas
test
mov
pop
daa
xchg
mov
shl
sbb
fld
and
jae
vmwrite
xlat
popf
mov
jae
mov
mov
loope
jp
pop
xchg
mov
fisub
pop
push
add
and
and
(bad)
jbe
mov
in
jl
jge
mov
or
mov
mov
fadd
inc
jmp
mov
mov
add
and
mov
sbb
sbb
rcl
repnz
movs
xchg
sahf
mov
and
add
mov
or
ins
xchg
mov
enter
mov
cmp
xchg
cmp
std
bound
cmp
or
adc
inc
adc
dec
sub
mov
inc
ds
test
scas
jle
mov
movs
jmp
inc
jmp
arpl
pop
inc
pop
pop
add
xor
out
in
jmp
cmp
sbb
push
lods
fs
push
inc
loope
dec
popa
ja
pop
lods
in
(bad)
jb
in
dec
mov
push
mov
xchg
loop
pop
or
scas
push
enter
and
add
xor
loopne
cmps
xchg
add
fs
sbb
and
dec
push
arpl
or
xchg
inc
jae
add
mov
adc
xchg
dec
or
adc
div
adc
and
add
mov
jmp
outs
jmp
pop
cmp
call
scas
call
neg
pop
aam
ins
xor
aad
xor
or
mov
sbb
and
adc
cmp
jl
or
mov
mov
cmp
xor
mov
lods
or
mov
imul
inc
cmp
mov
push
adc
pop
clc
and
pop
and
xchg
sub
pusha
ret
dec
lahf
dec
mov
movs
or
test
es
sbb
cmc
push
lods
imul
into
sbb
pop
(bad)
xor
loope
inc
and
add
loope
jne
push
ror
adc
mov
inc
mov
push
xchg
or
push
add
xor
sbb
jo
xchg
jge
push
xor
adc
loope
or
loop
int3
mov
popa
xor
test
ror
aad
je
gs
test
sbb
shl
aaa
jae
ret
dec
(bad)
lds
push
jne
sbb
shl
fisubr
outs
test
je
outs
inc
push
cmp
js
and
out
mov
cli
add
outs
enter
nop
inc
enter
adc
xchg
lods
and
lds
js
lods
xchg
adc
mov
pusha
jno
xchg
nop
and
sti
imul
or
and
test
ret
mov
inc
imul
adc
fwait
push
ins
std
mov
inc
sbb
or
and
popa
push
loop
or
and
test
inc
mov
jl
inc
dec
ss
add
popf
daa
xchg
(bad)
jp
icebp
cmp
pop
or
add
movs
dec
dec
or
push
mov
push
ins
or
jbe
adc
push
aas
adc
mov
loopne
cdq
sbb
sbb
dec
and
xchg
cdq
cmp
inc
sbb
gs
popf
push
or
push
jecxz
mov
pop
(bad)
arpl
inc
retf
lock
pop
movs
adc
xor
or
pop
out
and
dec
adc
scas
mov
or
scas
retf
pushf
jno
fld
daa
ds
mov
sbb
ja
mov
dec
push
movs
mov
add
xor
test
adc
cmps
jae
xor
and
lods
bound
xchg
and
ret
mov
sbb
jmp
mov
or
add
retf
inc
push
xor
movs
inc
pop
cmp
push
shl
lods
mov
mov
and
pop
adc
push
repnz
adc
test
aaa
add
mov
dec
and
adc
ins
jecxz
xor
pop
mov
xor
pushf
pop
adc
inc
sub
xchg
jo
mov
movs
arpl
shl
cs
add
mov
pop
std
mov
imul
stos
sub
sbb
add
mov
inc
lea
or
push
int3
ror
loopne
fimul
or
push
xor
ss
mov
mov
pusha
push
push
add
stc
jne
mov
jg
jb
ja
cli
jmp
shl
shl
jp
ja
aaa
inc
mov
jecxz
inc
mov
jae
pop
dec
dec
xchg
cmp
cwde
jnp
jecxz
push
pop
cmp
push
stos
jns
mov
mov
mov
pop
mov
mov
(bad)
jo
dec
pop
(bad)
jo
loopne
jp
sbb
cmc
(bad)
push
je
test
jg
(bad)
adc
mov
pop
iret
pop
scas
repz
jnp
pop
push
pop
lea
mov
int3
sub
dec
xchg
nop
mov
and
loopne
adc
jno
cmp
es
pop
push
push
sbb
adc
aam
in
jmp
xlat
cmp
sub
fisubr
or
push
and
pop
xlat
mov
cmp
adc
nop
imul
rcl
in
and
cld
and
sbb
call
xor
fstp
scas
xchg
inc
jl
jnp
mov
and
out
sub
pop
into
in
xchg
inc
or
or
enter
pusha
ins
mov
aas
int3
ins
adc
jmp
or
cmp
dec
je
pop
sbb
(bad)
cwde
xchg
test
addr16
dec
sbb
clc
out
data16
dec
pop
test
push
call
loope
mov
xor
pop
pop
add
mov
jo
mov
sbb
xchg
add
jg
add
fcmovbe
mov
mov
sbb
ja
hlt
pop
out
ror
push
mov
out
je
call
pop
std
jb
cmps
xor
mov
pop
je
adc
adc
jae
sbb
nop
adc
jo
dec
or
shl
nop
(bad)
lods
adc
jo
add
add
inc
rdpmc
lock
and
xchg
and
int
dec
jne
dec
ins
std
and
mov
addr16
push
shl
in
repz
push
xor
cmps
test
daa
or
cdq
mov
xor
rol
or
call
or
pop
out
(bad)
bound
ror
push
pop
adc
mov
imul
and
and
nop
dec
je
adc
inc
adc
je
inc
cmp
push
stos
test
out
dec
xor
repnz
fild
mov
cli
sub
pop
pop
neg
or
add
call
add
push
sbb
fcmovb
retf
or
add
dec
pop
adc
or
stos
int3
shr
movs
push
cmc
shr
fwait
mov
jmp
xchg
mov
fwait
pop
rol
cli
and
xchg
mov
lods
mov
pop
xchg
sub
retf
pusha
adc
(bad)
cld
push
stos
jno
test
push
mov
push
mov
hlt
and
(bad)
clc
push
mov
call
dec
(bad)
jl
dec
fistp
movs
mov
stos
js
mov
aad
outs
inc
fimul
mov
(bad)
int
es
mov
(bad)
shl
ss
and
loopne
rol
pop
mov
push
mov
les
mov
jbe
(bad)
xchg
cwde
hlt
jae
push
outs
test
loopne
adc
aaa
sbb
add
mov
dec
pop
hlt
je
pop
movs
bound
into
jmp
rcr
push
retf
mov
and
test
adc
push
mov
pop
sbb
dec
sbb
in
pop
or
cwde
mov
push
mov
sbb
push
es
push
nop
sbb
jne
xchg
jle
sub
mov
jge
and
icebp
add
push
int3
adc
fwait
mov
push
scas
mov
sbb
bound
iret
popf
mov
ror
dec
push
fsub
fistp
pop
inc
push
rol
mov
mov
xor
xor
imul
mov
or
iret
mov
sbb
adc
mov
add
dec
xchg
add
jmp
and
fild
pop
and
popf
outs
(bad)
dec
mov
shl
mov
dec
jo
dec
mov
mov
inc
nop
sub
outs
inc
sbb
xchg
push
ret
scas
xchg
cmp
pop
mov
xor
inc
xchg
retf
and
sahf
call
xchg
ss
aam
mov
add
or
dec
sub
les
mov
fimul
xchg
xlat
popf
out
mov
adc
cs
sbb
xor
inc
xchg
pop
xor
sub
mov
inc
push
sbb
js
cs
ja
mov
and
adc
mov
sub
mov
out
jns
fldl2t
jl
clc
jo
or
sbb
push
mov
mov
push
ss
adc
sahf
cwde
sbb
inc
add
in
xchg
mov
jmp
push
enter
outs
sti
cmp
mov
or
lahf
clc
inc
adc
clc
sbb
clc
arpl
int3
add
adc
add
arpl
xchg
and
inc
or
enter
addr16
sti
loopne
(bad)
jae
enter
xchg
ret
(bad)
sti
push
in
test
rcl
ins
imul
fmulp
ins
inc
(bad)
cmp
test
add
hlt
cdq
pop
dec
inc
push
fnsave
push
pushf
inc
push
cwde
pop
cmp
retf
clc
(bad)
fimul
(bad)
(bad)
and
cmp
add
loopne
icebp
add
mov
pusha
adc
pop
(bad)
pop
lock
add
or
(bad)
shl
jecxz
iret
repnz
es
xor
add
dec
es
retf
in
sub
loopne
cmp
or
ins
test
mov
push
loopne
sub
lock
out
or
add
or
and
add
js
scas
sub
fwait
shl
call
sahf
aam
push
inc
mov
nop
push
adc
xchg
aam
aam
lds
jno
pop
hlt
xchg
ret
inc
cmc
sbb
and
mov
mov
add
fcmovb
es
shl
popa
or
or
mov
or
out
jns
call
stc
lahf
mov
jg
mov
pop
(bad)
cdq
adc
mov
adc
add
lock
nop
fnstenv
pop
xchg
lock
rcr
fs
and
push
mov
pop
cmp
push
outs
test
push
jo
sbb
or
inc
sub
add
inc
add
sub
push
(bad)
sbb
(bad)
adc
cmp
pop
lahf
je
test
fstp
mov
sub
lds
aam
enter
mov
or
dec
or
fs
pop
inc
out
sbb
push
jecxz
jbe
cmps
dec
push
movs
test
inc
push
jno
sub
cmp
fnsave
push
mov
lock
xlat
lock
rcr
sbb
fldenv
jne
les
call
bound
sub
bound
mov
add
add
fs
pop
cwde
sbb
mov
imul
imul
inc
and
push
pop
add
inc
and
add
inc
pop
pusha
rol
add
cwde
add
jl
pop
and
ror
or
or
or
movs
pop
cmps
and
mov
mov
retf
push
fwait
test
loope
mul
jb
jg
mov
test
cmp
aas
inc
and
push
add
adc
jmp
add
jo
add
mov
dec
mov
pop
mov
fild
fsub
or
sub
retf
mov
loope
call
adc
aas
xor
or
and
dec
fmul
shl
cmp
dec
xor
int3
dec
rol
mov
or
add
pop
mov
pop
shl
jo
or
out
test
lea
repnz
jne
loope
sbb
cmp
out
sbb
repnz
in
sbb
inc
call
dec
fisubr
ret
inc
jmp
adc
ret
fs
add
inc
cli
mov
push
rcr
je
xchg
push
xchg
cmp
lods
data16
add
jl
push
movs
and
inc
cmp
pop
mul
into
movs
imul
jno
or
cli
add
pop
out
popa
hlt
push
test
push
and
pop
push
in
push
jae
and
sbb
adc
mov
rcl
hlt
int
and
out
inc
push
mov
xchg
call
add
imul
and
fiadd
test
nop
adc
jl
imul
imul
mov
cmp
movs
xchg
jge
test
outs
jno
pusha
or
ss
xlat
sub
jl
sbb
or
sub
mov
or
inc
mov
inc
push
add
movs
(bad)
dec
mov
add
and
add
hlt
inc
jnp
jmp
jmp
test
mov
xor
cdq
test
lods
in
sar
nop
test
iret
adc
xchg
stos
pop
jo
(bad)
cmc
cdq
and
or
pop
push
ret
add
inc
add
push
stos
ss
pop
sbb
jnp
xor
add
(bad)
outs
ret
or
int
ror
jb
pop
pop
ins
mov
jmp
inc
push
shl
and
adc
xchg
ret
pop
test
or
imul
nop
test
pop
add
lods
push
add
mov
or
adc
nop
ret
inc
pop
or
and
cwde
mov
pop
mov
daa
les
or
inc
add
jo
(bad)
jb
pop
mov
lahf
sub
pop
mov
loope
data16
mov
into
arpl
pop
jmp
add
cmp
cmp
fsubr
inc
fdiv
cmp
lea
inc
push
xor
aas
xor
xor
sbb
pushf
sub
push
jns
xchg
pop
jnp
inc
dec
xor
aad
add
inc
or
xlat
sub
rol
fimul
out
add
mov
xchg
push
out
imul
ror
cdq
call
ret
mov
inc
mov
js
rcr
pop
inc
fstp
push
mov
push
jno
push
aad
and
jmp
cmp
adc
push
sub
inc
jmp
ds
pusha
outs
ins
dec
mov
test
and
push
ss
imul
out
movs
fdiv
fst
add
mov
push
mov
mov
shr
jge
jo
add
cmp
jnp
aad
clc
out
popf
add
dec
or
or
inc
call
push
inc
pop
mov
pop
add
enter
hlt
pop
outs
lds
call
add
xlat
test
xlat
imul
ficom
sub
inc
cmc
jno
fs
loopne
test
sbb
mov
inc
lock
inc
add
push
les
add
mov
inc
mov
or
adc
push
add
stos
sti
mov
sub
or
push
in
pop
cdq
push
(bad)
cmovo
lea
sbb
sbb
xor
aam
mov
and
jmp
xchg
and
rcr
mov
or
push
sbb
push
ins
mov
shl
out
jg
test
fmul
jno
lods
aam
fstp
loop
cs
fsubr
(bad)
sbb
mov
inc
push
pushw
xor
add
test
test
fsubr
jmp
sbb
pop
mov
dec
sub
add
push
ror
dec
or
mov
jg
jno
les
add
inc
and
stos
sbb
lods
mov
add
jmp
inc
cmp
aaa
sbb
jno
data16
xor
cdq
sar
mov
adc
movs
iret
xor
icebp
xor
into
test
xor
pop
sbb
jp
and
xchg
xor
xchg
scas
scas
xchg
sub
or
mov
sbb
arpl
stos
call
jmp
sbb
popf
dec
inc
and
mov
inc
in
or
aam
xor
mov
cmp
xor
pop
enter
jno
add
push
loop
add
(bad)
les
jo
push
(bad)
pop
and
ss
outs
call
and
loopne
ret
shl
push
out
ret
in
mov
in
xor
lock
push
fcmovnb
add
inc
rol
pop
call
ret
sub
cmp
retf
inc
xor
ret
(bad)
enter
add
jb
push
add
mov
xlat
pop
in
push
xor
or
jne
pop
inc
add
mov
aad
adc
mov
sahf
sub
pop
enter
scas
dec
mov
push
mul
mov
push
mov
mov
in
push
(bad)
xor
pusha
(bad)
sub
cs
xchg
xchg
imul
jmp
shl
hlt
push
add
sbb
inc
jbe
sbb
or
dec
add
inc
adc
add
stc
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
mov
jbe
popf
addr16
enter
cmp
call
mov
xor
mov
jge
outs
aam
aam
push
cmp
leave
out
repz
or
sbb
sbb
cmp
sbb
xchg
adc
or
popf
inc
sbb
inc
push
push
add
jg
stos
inc
push
jae
add
jb
jno
jno
bound
ja
xchg
addr16
sahf
enter
dec
and
pop
sbb
ss
(bad)
sbb
dec
push
loopne
loop
cmps
test
popa
call
imul
xor
mov
in
in
pop
rcr
adc
adc
out
adc
jo
ret
test
sbb
ficom
mov
outs
cmps
dec
push
add
or
rol
lock
ret
loop
shl
mov
pop
jecxz
loope
dec
fcom
int3
sbb
mov
pop
call
enter
sbb
xchg
mov
into
lahf
arpl
fdivr
or
xchg
cmps
xchg
sbb
(bad)
(bad)
cmc
inc
aaa
mov
js
add
aam
lds
addr16
mov
or
and
mov
call
aam
adc
push
add
mov
xor
jp
push
jnp
inc
push
mov
jp
or
add
sbb
clc
sub
jbe
out
and
jmp
hlt
sbb
jno
cwde
mov
addr16
aad
mov
sub
sub
bound
not
(bad)
dec
and
out
xchg
popa
and
repnz
int
pop
cld
jb
imul
inc
and
je
or
dec
sbb
ins
and
mov
and
xor
add
jmp
jnp
out
mov
pusha
sub
lds
pcmpeqb
stc
or
pop
pop
inc
xor
dec
aam
adc
sbb
inc
sub
ror
jno
xchg
sub
jno
daa
and
in
push
sub
and
loopne
inc
and
jge
les
push
inc
dec
popa
adc
adc
pop
inc
mul
mov
mov
cdq
call
dec
adc
outs
nop
pop
add
xor
movs
and
arpl
fcom
pop
lds
cld
movs
popa
out
sub
push
or
sbb
jmp
add
lods
mov
add
add
lock
in
imul
test
push
cmp
loope
movs
dec
cwde
repz
sbb
and
fs
sub
inc
add
push
rol
or
mov
push
mov
add
pop
cwde
sub
cmps
test
imul
add
dec
aaa
inc
(bad)
mov
test
ins
push
icebp
add
(bad)
xchg
nop
sub
lock
or
fldenv
lods
mov
mov
or
or
pusha
mov
aam
or
ret
popa
(bad)
mov
int3
add
test
mov
loopne
xor
repnz
inc
ret
xchg
shr
ret
adc
sub
ins
or
jo
jno
call
std
mov
push
jecxz
pushf
mov
div
mov
cmps
jne
and
sbb
jae
or
xor
stos
add
sbb
push
clc
ror
cld
lods
aam
daa
sahf
xor
sbb
repz
pop
mov
mov
retf
iret
into
mov
mov
jb
std
pop
or
in
add
mov
sahf
mov
and
outs
inc
or
jo
mov
and
xchg
stc
dec
push
out
mov
and
ret
shr
repz
dec
outs
mov
cdq
push
xor
ds
xor
or
stc
in
int3
outs
jg
cdq
cmps
mov
movs
and
sar
std
(bad)
inc
clc
or
jb
mov
add
add
mov
adc
test
add
into
add
mov
aam
sbb
add
(bad)
in
lods
and
add
lock
xchg
lds
cmp
sub
add
ret
fdivr
inc
add
mov
sbb
add
imul
sbb
mov
sahf
sub
cwde
into
adc
ret
adc
fs
scas
je
mov
scas
(bad)
push
adc
and
jmp
adc
dec
mov
inc
or
lea
pop
sub
cmp
popa
pop
movs
fcmovnu
push
mov
lea
or
inc
fs
clc
es
mov
pop
push
push
mov
scas
cmp
push
push
xchg
movs
enter
xor
popa
fmulp
cwde
adc
xchg
xor
mov
sbb
in
xchg
inc
cmp
xor
stos
sbb
inc
xor
add
inc
mov
cmp
and
mov
xchg
stos
in
in
sub
xchg
dec
inc
or
outs
inc
add
jb
cmp
dec
dec
cmps
xor
mov
xor
push
leave
or
mov
sbb
movs
lds
cld
sub
scas
into
push
add
dec
xchg
stos
nop
xor
je
add
or
sbb
jge
lahf
mov
sub
add
js
imul
hlt
and
push
inc
sar
aam
push
movs
arpl
stc
(bad)
sub
lock
pop
mov
hlt
nop
add
add
(bad)
nop
popa
cmp
push
sub
push
popa
popf
add
daa
push
xor
dec
add
movs
movs
jb
push
mov
ins
or
push
stos
and
add
test
cmp
adc
popa
cmps
loop
sub
inc
js
ins
pop
xchg
pusha
add
mov
xchg
imul
dec
mov
out
cld
fs
jbe
iret
and
add
or
jle
inc
aam
jb
scas
jmp
fwait
ins
dec
aad
xchg
mov
or
fcomp
push
mov
cmovle
mov
mov
pop
and
(bad)
cmc
test
pop
retf
int3
push
mov
mov
inc
jge
pop
mov
cmc
shl
push
lods
(bad)
xor
xor
mov
cmp
fistp
mov
movs
xor
pop
jge
cs
rcr
pusha
fdivr
xchg
call
mov
movs
and
mov
pop
ret
(bad)
and
jge
jmp
add
mov
test
mov
rol
je
mov
lea
into
dec
xchg
mov
sub
sbb
push
inc
pop
adc
rol
mov
mov
mov
call
fisttp
shl
fld
mov
(bad)
and
shl
rol
add
push
xchg
pop
in
adc
popa
mov
sbb
push
jne
add
pop
push
(bad)
pop
ds
jb
pop
sahf
add
cmps
mov
pop
pop
mov
push
out
and
mov
sbb
aaa
pop
add
retf
outs
add
ficomp
mov
lahf
out
iret
pop
das
int
add
fld
adc
jb
or
dec
popf
lds
cwde
into
jge
test
dec
in
inc
(bad)
je
das
clc
movs
pop
pop
aad
mov
fcmovbe
js
xor
imul
loopne
push
lds
and
call
iret
cmc
jo
les
inc
ds
fisttp
inc
or
xor
sub
jecxz
mov
sbb
ss
fsub
pop
imul
dec
mov
or
sti
xchg
mov
aaa
lods
fisttp
adc
jo
shl
out
pop
add
fwait
leave
std
jbe
adc
push
loop
jmp
pop
loope
out
xor
dec
(bad)
jle
pusha
add
lea
sub
mov
fstp
jo
into
xchg
lods
sub
adc
gs
dec
sbb
and
mov
sbb
mov
hlt
pop
push
sub
adc
mov
shl
sbb
mov
loope
in
out
dec
pop
retf
xchg
ins
jp
sub
inc
fnsave
inc
fisttp
pop
pop
adc
mov
dec
dec
sbb
into
jecxz
jmp
js
add
pop
fadd
mov
mov
jnp
cmp
jp
call
mov
call
sar
xchg
adc
jo
pop
sbb
mov
(bad)
cmc
jbe
adc
ret
imul
or
rol
enter
jo
cmps
mov
fcomi
div
in
mov
ficom
lahf
jp
adc
lock
inc
sbb
pop
enter
or
dec
movs
jle
push
outs
mul
ja
mov
inc
addr16
push
mov
shl
add
dec
add
sahf
push
add
pop
jle
pop
xor
addr16
mov
or
xor
movs
bound
sub
xor
xlat
jl
xchg
add
sti
pop
pop
push
es
sar
xchg
inc
sub
add
jns
shl
cmp
adc
inc
xor
aam
pop
(bad)
jl
fsub
push
inc
cld
aaa
pop
sbb
or
in
test
and
sub
inc
xchg
aaa
xor
xchg
sub
shr
push
inc
pop
inc
push
or
movs
and
sub
ins
lds
ins
test
xchg
add
rol
sub
movs
xchg
and
jbe
pop
pop
enter
add
aaa
jnp
push
add
mov
xchg
jne
sub
dec
movs
xchg
mov
mov
jo
jae
inc
test
cwde
or
fst
cmp
xchg
enter
add
stos
xchg
xor
cmp
mov
ja
or
popa
inc
mov
inc
lock
clc
js
pusha
jnp
pusha
or
xchg
sub
pop
and
mov
pop
adc
mov
jnp
nop
test
mov
popa
jecxz
lea
push
sbb
inc
add
and
adc
pop
pop
jle
add
test
push
test
add
les
in
div
adc
(bad)
rol
dec
push
jle
inc
add
jns
movs
adc
in
mov
nop
add
mov
bound
pushf
adc
clc
inc
push
sub
pop
mov
mov
add
pop
stc
add
jle
repz
mov
mov
sub
mov
xchg
test
cmp
inc
push
call
rcl
jo
dec
add
xchg
aaa
xchg
(bad)
add
(bad)
je
cmp
adc
jmp
ja
add
inc
add
inc
pop
mov
pusha
add
xor
and
mov
jl
xlat
jp
xchg
popa
ins
imul
outs
pop
sub
mov
sub
lock
dec
xlat
inc
add
or
data16
inc
inc
dec
hlt
inc
ss
mov
xchg
add
add
pop
cmp
cmp
xchg
ret
movs
xchg
pop
ss
leave
pop
mov
jne
imul
add
mov
call
push
imul
jno
lds
int3
aam
pop
jns
cmp
or
add
mov
mov
retf
cmps
xchg
outs
repz
xchg
cmp
jbe
out
or
jae
cmp
mov
imul
and
aaa
adc
xchg
dec
sbb
(bad)
cmp
inc
mov
pop
sahf
inc
pop
adc
or
add
inc
or
je
xchg
imul
push
jle
in
mov
push
add
sahf
or
stc
add
add
div
xor
mov
jae
push
jp
mov
jae
ins
fisub
lahf
aad
sub
pop
cmp
jmp
retf
movs
cwd
iret
addr16
shl
test
push
js
xor
mov
pusha
call
adc
not
inc
xor
inc
inc
cmc
adc
and
add
jbe
rol
fldenv
xchg
mov
mov
sub
cmp
loopne
add
mov
or
push
lods
add
ja
hlt
mov
cmc
dec
inc
loopne
dec
cmp
add
fstp
test
or
(bad)
jne
xchg
(bad)
add
and
cwde
cmp
outs
push
call
adc
dec
inc
ja
jbe
sbb
sbb
add
fwait
dec
fsubr
js
adc
nop
cmp
adc
xchg
dec
add
mov
cmp
lea
xor
cdq
dec
sub
jge
stos
fucomp
or
sub
add
stos
and
xchg
clc
jl
adc
imul
pop
lods
call
lods
ror
lods
sti
jmp
add
fstp
pop
movs
xchg
xchg
(bad)
jle
ja
shl
js
cmp
push
jae
sahf
leave
aam
add
mov
mov
mov
jle
push
sub
sti
movs
test
push
add
fwait
xchg
pop
retf
mov
push
imul
dec
imul
mov
fisttp
pop
sub
repz
fwait
mov
mov
or
or
mov
ins
mov
add
out
mov
mov
sbb
mov
retf
lea
call
cmps
ret
dec
stos
ret
jno
xchg
lods
pop
movs
dec
div
hlt
xchg
add
jp
sbb
mov
dec
and
and
les
scas
ins
jns
xbegin
xor
fwait
arpl
mov
add
pop
fdiv
mov
clc
mov
pop
fs
push
fs
dec
cmp
mov
sbb
jmp
jge
mov
cmps
cdq
repz
pop
xor
pop
mov
cwde
cdq
sub
aad
lods
xor
popa
cmp
inc
mov
cmps
inc
call
jnp
clc
push
dec
loop
add
dec
stos
push
stos
add
mov
jp
cmp
push
sti
xor
pop
pop
pop
retf
xchg
nop
ins
inc
and
dec
xor
add
add
jo
pop
loopne
sbb
mov
mov
stos
fwait
xor
jns
xchg
jnp
mov
movs
aaa
out
paddusb
and
sub
or
mov
mov
dec
lock
es
cdq
push
jo
cmp
nop
jecxz
dec
ins
retf
add
inc
mov
mov
cmp
(bad)
cmp
add
retf
jo
cmp
les
aaa
jl
pop
jb
shl
adc
mov
aaa
ja
push
je
sbb
cmp
dec
je
add
mov
jnp
sbb
or
sub
and
xor
xor
test
inc
outs
sub
add
adc
mov
add
test
jae
jmp
or
sub
cwde
jno
cmp
and
jmp
add
mov
int3
enter
xchg
icebp
dec
cdq
imul
adc
inc
xchg
mov
mov
add
add
loopne
pop
xor
xor
pop
adc
xor
sbb
add
sub
js
jb
pusha
dec
aam
adc
mov
mov
call
mov
cmc
pop
jae
cmps
mov
add
imul
leave
push
jl
popa
clc
xor
or
bound
push
(bad)
sbb
add
nop
push
sub
call
add
add
sbb
sub
mov
cdq
dec
push
mov
xor
in
sbb
out
fwait
in
pop
pop
ja
in
bound
pop
sub
jnp
iret
and
retf
sbb
retf
pop
xchg
push
push
(bad)
mov
or
inc
fstp
pop
add
adc
sbb
shr
ins
shl
push
pop
nop
rcl
lock
add
iret
inc
fdiv
push
je
inc
add
add
cmp
add
add
push
mov
sub
pop
add
mov
add
sbb
add
or
sbb
sahf
popa
jge
popa
sbb
push
push
rol
stos
push
shl
pop
je
shl
ror
(bad)
shl
add
pop
mov
stc
dec
sub
(bad)
(bad)
cmp
stos
ret
pushf
nop
adc
lock
lock
sbb
xor
push
les
or
sub
add
seto
sbb
fsubp
popf
add
add
add
mov
lods
mov
add
stos
push
(bad)
retf
jbe
cmovae
inc
cmps
cmps
add
jno
fdivr
leave
ins
shl
mov
dec
xor
mov
call
sbb
adc
xor
or
loop
cmp
or
add
pop
daa
ds
push
add
daa
mov
stc
fidiv
(bad)
sbb
(bad)
fmul
mov
adc
neg
mov
mov
stc
fiadd
adc
dec
btr
push
cmp
imul
xchg
ror
dec
push
icebp
sbb
cmp
repz
mov
test
mov
add
add
dec
fisubr
loopne
fst
and
fnsave
add
ja
cld
jns
xchg
imul
add
mov
cmp
call
or
hlt
dec
ror
add
lods
mov
jmp
scas
cmp
lahf
fsub
and
and
mov
int3
aaa
mov
punpcklbw
retf
or
movs
loop
sbb
(bad)
add
adc
inc
push
fdivp
lods
add
nop
ja
cmps
dec
push
xchg
add
mov
xchg
or
adc
test
call
or
push
into
lds
xchg
not
fstp
leave
adc
mov
int3
aaa
sbb
outs
sbb
push
lock
loopne
pushf
stos
mov
sbb
add
pop
add
fldcw
dec
fisttp
mov
inc
mov
add
add
sahf
mov
into
or
call
scas
mov
jle
mov
int
fadd
pop
push
inc
fmul
inc
xor
mov
or
jae
out
ret
mov
into
ss
mov
fcom
mov
dec
mov
mov
add
mov
(bad)
sub
adc
call
lock
inc
pop
je
popf
mov
inc
xchg
xchg
push
aad
add
pushf
(bad)
sub
cs
add
retf
push
sbb
das
sub
and
push
clc
and
stos
sbb
in
or
jbe
mov
jmp
inc
add
dec
popf
loopne
aad
popf
jmp
mov
pushf
xchg
jo
mov
jge
sbb
mov
nop
add
out
pop
popf
jl
adc
pusha
push
ins
clc
data16
loopne
push
aas
in
dec
mov
loop
fs
fs
add
push
movs
jbe
inc
cmps
xchg
fs
push
movs
inc
add
adc
stos
lods
(bad)
xlat
mov
add
movs
enter
mov
and
pop
clc
mov
movs
push
stos
aad
loopne
popf
mov
push
loop
sub
push
(bad)
cmp
add
add
fist
sbb
push
xchg
and
movs
rcl
or
les
sbb
mov
sbb
(bad)
push
mov
ror
dec
test
das
imul
icebp
(bad)
icebp
mov
movs
jmp
test
add
loopne
mov
add
jne
xor
loop
and
or
xor
and
xchg
mov
mov
out
mov
jns
or
sub
outs
inc
clc
inc
scas
inc
iret
(bad)
pop
and
jmp
mov
movs
xchg
dec
sub
cmps
inc
into
loopne
push
arpl
movs
lahf
push
and
dec
or
(bad)
daa
retf
cs
loope
add
xchg
int
mov
pop
mov
dec
xor
adc
mov
cmp
es
xor
xor
outs
fmul
sbb
and
sub
and
fadd
imul
in
arpl
and
adc
inc
test
repnz
add
pop
and
repz
dec
sub
mov
adc
push
sbb
movs
leave
push
adc
test
and
call
ret
xor
inc
xchg
ins
loopne
gs
stos
or
nop
loop
xchg
test
inc
or
mov
adc
mov
enter
jb
ror
pop
and
data16
xchg
inc
pop
lahf
je
loopne
sbb
std
push
aaa
jle
shl
push
mov
scas
aam
pop
inc
call
pop
mov
jecxz
cmps
repnz
and
popf
in
adc
sar
(bad)
ins
jne
mov
or
adc
int3
mov
in
les
cmp
xchg
call
adc
adc
leave
es
mov
sub
mov
add
cmp
sbb
add
add
mov
inc
call
test
fdiv
mov
in
and
cmps
xor
push
pop
sub
popf
cmp
iret
adc
push
add
pusha
call
in
call
ret
pop
xor
mov
or
jl
xchg
adc
loopne
sub
xchg
push
add
or
sbb
sub
xor
call
mov
xchg
lea
addr16
adc
aas
mov
adc
jmp
lock
call
pop
sub
dec
mov
mov
add
mov
mov
in
popf
cdq
push
test
or
pushf
jge
ds
xor
add
dec
mov
cli
(bad)
sbb
test
dec
mov
add
adc
add
sbb
add
sbb
stos
sub
lock
repnz
mov
pop
sub
inc
push
adc
sbb
lods
aad
jb
cmp
xor
aad
push
jnp
rol
cmp
and
mov
pop
icebp
push
mov
imul
rol
jp
add
or
and
sbb
int3
fsubr
and
jo
add
cmp
rol
jmp
mov
test
mov
jg
(bad)
aad
push
jne
clc
popf
ja
(bad)
imul
add
and
pusha
or
js
or
dec
xor
test
scas
or
xchg
jo
enter
add
dec
push
inc
mov
and
stc
fsub
aad
mov
mov
jb
push
repnz
push
and
dec
shl
pushf
rol
cmp
sbb
mov
mov
hlt
jg
data16
and
cdq
rcl
dec
xor
sti
addr16
add
mov
push
add
in
jae
pushf
jnp
and
xlat
add
and
fild
pop
retf
ds
je
push
inc
jl
pop
mov
add
lds
jp
push
add
iret
shl
fisttp
or
xchg
add
mov
pop
inc
mov
xchg
sub
sbb
ja
add
and
movs
test
sbb
mov
or
push
sbb
cmp
pop
lds
mov
retf
jge
pusha
add
inc
add
mov
jmp
add
pusha
push
push
dec
add
jl
pop
cwde
add
out
cmc
inc
scas
add
mov
mov
imul
rol
mov
push
mov
movs
dec
adc
cmps
mov
inc
xor
movups
ficomp
and
sbb
dec
dec
dec
inc
popa
dec
push
scas
pop
loopne
adc
xor
add
mov
cdq
add
add
dec
xchg
mov
pop
int
cmp
clc
inc
cmp
ins
(bad)
pop
sbb
and
fs
sub
dec
dec
jmp
mov
push
sub
add
and
and
add
jns
sbb
rol
fadd
(bad)
sbb
bound
push
mov
add
bound
cmp
lods
xor
xchg
loop
adc
icebp
daa
sub
add
xlat
xchg
je
xchg
dec
shl
push
xchg
ss
xchg
leave
and
mov
popf
adc
aas
cmp
xchg
mov
inc
push
fxch
push
jmp
test
sbb
in
pop
outs
aam
lods
outs
movs
xor
add
outs
daa
les
(bad)
icebp
scas
add
or
adc
mov
add
mov
or
hlt
xchg
js
rcl
and
clc
data16
jbe
inc
popf
jmp
cmps
sub
pop
push
fwait
push
cmps
add
call
sahf
inc
aad
sub
or
sbb
or
and
add
adc
push
inc
adc
adc
pop
xor
fxtract
call
jb
inc
pushf
movs
dec
sub
or
cld
les
test
jne
dec
and
lea
pop
jmp
fimul
clc
out
inc
pop
adc
sub
ret
xchg
enter
stc
adc
movs
neg
dec
add
adc
inc
repnz
push
xchg
push
mov
adc
pop
lods
pop
scas
mov
lods
lahf
std
xor
movs
xchg
push
loopne
cmp
push
ret
xchg
std
imul
stos
into
push
cli
(bad)
mov
sbb
fwait
dec
xchg
mov
push
je
bound
or
test
sub
or
popa
add
xor
(bad)
mov
pop
mov
mov
or
ins
and
xchg
enter
rol
lock
imul
ss
jo
js
outs
repz
mov
dec
xor
dec
cwde
js
add
add
sbb
out
dec
mov
add
adc
or
pop
cmp
sbb
cmp
in
cmp
mov
add
sub
add
cmp
xchg
(bad)
fild
jmp
imul
rcr
or
cs
dec
and
add
and
cdq
mov
lea
xor
scas
std
cmc
sbb
mov
int3
adc
cs
ret
in
push
add
shl
dec
and
add
js
dec
adc
xor
jecxz
sbb
jp
test
xor
aaa
cmp
fwait
add
cmp
dec
adc
ret
das
rcr
push
mov
not
add
add
dec
ret
push
inc
adc
cmp
pop
(bad)
mov
fst
lock
cli
gs
pop
add
or
jne
mov
xor
daa
fistp
pop
ret
add
pop
(bad)
pop
iret
adc
pop
and
cmp
jbe
jns
pop
daa
jbe
sub
add
shl
mov
add
xor
push
outs
cmp
add
ficom
pop
mov
rcr
jp
je
test
pop
dec
push
xor
test
xchg
mov
in
js
pop
aam
mov
cmp
call
dec
mov
add
sar
xor
xchg
sti
sub
mov
cmps
or
movs
adc
mov
inc
sar
ret
adc
jp
and
add
sbb
pop
jp
mov
sub
push
push
js
cmp
cmp
sub
rcr
xchg
sbb
xchg
inc
or
adc
pop
dec
pop
push
inc
adc
ins
and
push
lock
into
jmp
add
jbe
popf
push
js
and
sbb
loop
dec
ins
lds
clc
or
mov
xlat
push
outs
in
fnstsw
arpl
cwde
mov
test
pop
xor
push
inc
sub
out
into
jne
add
xchg
shl
scas
adc
popf
in
js
mov
xchg
in
rcr
jl
sbb
mov
mov
add
in
jns
xchg
mov
inc
inc
shl
lods
mov
mul
cmps
xor
add
fs
add
or
mov
sub
sub
sub
int
ds
stc
call
jmp
ins
movs
mov
int
out
lods
sti
ror
inc
inc
mov
mov
add
sub
add
iret
sti
bound
out
retf
(bad)
repnz
mov
dec
push
inc
test
and
mov
sub
in
mov
and
push
les
xor
loop
les
sti
ret
push
outs
imul
push
test
sub
xchg
mov
jbe
adc
fsub
pop
jl
(bad)
and
mov
movs
cmp
and
jae
jmp
(bad)
aam
pop
ret
xor
inc
xor
add
add
cmp
push
call
mov
cli
dec
push
inc
adc
add
and
pop
add
sbb
aam
ret
cs
mov
add
push
xchg
jbe
pusha
cs
nop
shl
cmps
nop
call
js
adc
loopne
sahf
inc
sbb
add
int3
add
ins
movs
add
imul
jns
loopne
cmp
push
jbe
movs
in
add
sbb
inc
ss
add
nop
retf
mov
push
sub
and
movs
push
and
ror
jmp
xor
add
push
sbb
or
outs
adc
gs
add
cwde
in
loop
jb
out
or
inc
in
les
add
add
add
add
and
mov
and
jb
pop
loopne
fs
sbb
pop
add
and
xor
adc
add
loopne
aaa
jp
lock
loope
ror
rcr
or
cmps
fcom
retf
clc
or
jo
inc
test
sub
into
int3
mov
adc
and
fsubr
add
add
nop
xor
add
and
cmps
rol
jb
add
adc
xor
dec
jl
xchg
add
cmc
test
jmp
add
loopne
pop
ror
sub
imul
fidiv
es
and
inc
inc
(bad)
add
into
jp
out
test
adc
cmp
das
xchg
jb
pop
add
add
shl
add
add
xor
add
rcl
xor
inc
lahf
js
inc
or
(bad)
rcl
and
(bad)
jmp
adc
jmp
xor
daa
jns
cmp
dec
imul
arpl
rol
js
addr16
inc
jnp
push
push
ror
rol
push
and
mov
sbb
add
mov
or
xchg
and
add
jb
or
pop
sub
adc
scas
shr
mov
add
hlt
xchg
pop
inc
xor
jmp
cli
xor
scas
cmp
add
jno
stos
cmp
add
js
add
jecxz
pusha
or
add
jo
push
ret
call
adc
dec
cs
mov
push
push
ja
lahf
scas
or
(bad)
add
cwde
loopne
push
mov
add
adc
sub
add
and
cmp
add
outs
loopne
sbb
sbb
mov
lds
rol
mov
xor
ror
jle
adc
inc
jmp
jbe
movs
add
cmps
mov
dec
rcr
push
inc
add
out
add
shl
lds
mov
sub
push
in
jbe
sbb
adc
rol
push
dec
add
popa
inc
add
and
add
outs
inc
push
fadd
hlt
mov
xor
dec
enter
(bad)
and
data16
stos
imul
outs
jbe
ss
enter
mov
sub
ss
and
mov
not
dec
and
xor
add
popa
dec
rol
jb
adc
adc
and
add
or
aas
xor
lock
or
push
aaa
xchg
or
ror
outs
test
adc
jmp
pop
add
fimul
xchg
sub
jne
sbb
cmp
popa
rcr
add
xor
cdq
jo
inc
push
les
in
xor
add
nop
leave
rcr
adc
push
enter
or
out
lock
ins
loopne
(bad)
imul
inc
fs
ret
popa
or
sbb
test
dec
repz
repnz
movs
rol
pusha
add
rol
loope
iret
add
xor
dec
push
and
dec
repz
adc
jae
push
adc
push
or
push
dec
mov
enter
adc
das
mov
jmp
push
inc
dec
shld
dec
mov
mov
and
add
inc
cmp
pop
sysenter
or
call
add
cmps
jae
add
retf
mov
inc
push
repnz
or
cmps
push
scas
sub
or
ss
and
mov
fadd
jmp
ins
sub
inc
pop
mov
aad
popa
add
pusha
pop
xor
push
cmc
mov
aam
das
stos
repz
xor
test
and
leave
xchg
push
loopne
dec
(bad)
sbb
popa
inc
cs
dec
daa
xchg
mov
xor
ins
arpl
loopne
fdiv
loop
adc
sbb
lea
sbb
push
jne
push
sub
add
or
ret
and
movs
mov
out
inc
jg
cdq
mov
pop
ror
cld
rcr
je
sub
push
jmp
retf
jb
idiv
shl
push
sub
sub
and
add
ins
push
xor
push
pshufw
sbb
or
inc
xchg
movs
mov
call
scas
push
ja
pop
push
imul
add
jns
mov
and
test
imul
adc
dec
inc
sub
and
and
test
inc
push
in
add
les
ret
add
mov
aaa
dec
in
mov
shl
jg
es
mov
leave
test
outs
add
out
fadd
xchg
imul
add
loopne
push
outs
or
je
loopne
push
xor
jae
push
push
cmp
mov
outs
test
push
(bad)
jmp
in
add
mov
jge
push
mov
std
or
js
xchg
in
dec
xchg
xor
test
pop
adc
jb
push
dec
pusha
sbb
dec
rcl
xchg
cdq
jae
lahf
xlat
adc
dec
add
cs
jae
or
mov
and
and
xchg
retf
ja
jmp
int3
movs
icebp
push
mov
lods
push
(bad)
push
jne
mov
arpl
adc
loope
and
aad
inc
or
add
push
push
imul
outs
(bad)
cs
outs
neg
addr16
pop
cdq
mov
cdq
or
mov
mov
pusha
movs
add
mov
mov
inc
and
fld
je
into
sbb
int3
or
fstp
jl
and
sub
add
pop
cmp
xor
cmc
fldenv
test
and
adc
jecxz
xchg
sub
mov
mov
fnstcw
idiv
pop
cmp
pop
sub
leave
loop
adc
daa
ja
ins
mov
push
in
repnz
cli
rcr
pop
add
xchg
out
sbb
cmp
xor
cmp
test
fisubr
jmp
test
stos
pop
es
push
lods
bound
pop
push
cmc
cmp
dec
push
push
adc
cdq
ins
pop
add
push
cli
xor
add
pop
outs
adc
cmp
or
movs
add
ror
imul
nop
clc
inc
fwait
popa
adc
aam
lahf
dec
xchg
adc
mov
pop
lods
inc
push
jnp
push
xor
cmp
add
xor
sub
sbb
ins
sub
xor
cs
push
movs
cmps
add
inc
fs
mov
dec
pop
add
imul
or
or
push
dec
fwait
aad
scas
sti
cli
xchg
cwde
mov
dec
stos
int
cmp
lahf
mov
daa
int3
(bad)
adc
add
mov
xchg
shl
cmp
pop
mov
push
mov
mov
call
dec
bound
nop
(bad)
fiadd
fwait
lea
xchg
or
push
stos
push
cmc
cs
(bad)
out
rcl
cmp
popf
std
fsubr
pop
aas
and
gs
ins
addr16
pop
cmp
sub
imul
shr
mov
mov
cmc
sub
push
mov
jecxz
test
cmp
iret
cmps
int
or
inc
rcl
jge
vpsubw
test
mov
cli
xor
mov
sbb
cdq
ins
pop
es
xor
in
xor
cmp
push
xor
cli
cmp
push
dec
ret
and
and
enter
popf
mov
scas
add
sbb
dec
sbb
adc
pop
cmps
add
jnp
or
xchg
adc
dec
data16
ror
push
xor
add
or
adc
lahf
mov
sbb
and
cmp
je
inc
fstp
popa
and
shr
ja
or
cmp
icebp
sbb
fwait
xor
or
cmovne
arpl
add
fwait
push
les
xor
xor
cwde
loope
mov
mov
jl
pop
sub
dec
shl
ds
ja
inc
mov
or
xchg
call
add
sbb
xchg
adc
lds
and
pop
test
fild
sbb
push
mov
xor
inc
shl
sbb
and
fadd
bnd
or
aam
sbb
xor
xlat
push
and
jle
fistp
add
pop
mov
fsub
dec
pushf
loopne
addr16
call
add
pop
ds
mov
cs
pop
aam
and
inc
push
aad
pusha
sbb
xlat
pop
cmp
jge
jge
mov
lods
xor
(bad)
movs
inc
jle
xchg
or
inc
or
or
les
and
fiadd
bound
xchg
cmp
in
xchg
xlat
lods
mov
push
cmc
jns
ror
scas
jmp
xor
mov
jmp
and
pop
call
in
jae
adc
popf
and
and
cmp
add
xchg
jmp
push
repz
pop
call
fisttp
cmps
aam
es
imul
retf
mov
cmp
test
add
rsqrtps
ret
xchg
movs
mov
sbb
push
sbb
sbb
test
inc
fst
cli
jp
out
into
scas
pop
scas
pop
xor
or
test
es
dec
sub
xor
(bad)
push
xor
cmp
push
dec
pusha
mov
mov
dec
pusha
push
popa
mov
sbb
and
or
retf
out
push
lods
shr
adc
jbe
dec
daa
jo
aam
mov
xchg
loopne
int
pop
add
add
sub
cld
xor
(bad)
leave
xor
dec
pop
pop
bound
cwde
cwde
inc
ds
jle
call
mov
mov
fs
(bad)
fidivr
sbb
dec
in
hlt
pop
out
dec
pop
sbb
ins
sbb
je
inc
mov
xor
dec
aas
inc
popf
in
dec
inc
push
mov
fmul
je
or
call
mov
push
les
dec
or
movs
pop
dec
icebp
push
xchg
or
int
and
fs
movs
dec
cmp
push
xchg
or
and
cdq
sbb
adc
in
(bad)
mov
dec
les
push
cmp
adc
fcomp
sar
nop
lods
inc
xor
mov
lds
cmp
sub
push
or
out
pushf
cmp
add
adc
inc
loopne
add
push
push
add
dec
test
or
mov
loopne
(bad)
or
cmp
fs
xchg
cdq
pop
out
cmp
cmps
xor
sub
dec
sub
arpl
into
xor
adc
inc
and
adc
cmps
mov
test
adc
inc
mov
xchg
ret
outs
sub
test
dec
sahf
mov
sub
cli
leave
jmp
xor
or
mov
xchg
inc
dec
push
out
cmp
mul
mov
stos
and
ja
stos
mov
mul
adc
mov
lds
xchg
dec
push
inc
adc
dec
push
and
or
sbb
loope
mov
pop
loope
(bad)
aam
retf
and
xor
cmp
int3
xor
sub
inc
data16
mov
cmp
arpl
push
adc
cmc
fistp
pusha
or
ret
xor
sbb
add
ja
test
in
adc
and
test
jb
loope
xchg
mov
(bad)
inc
add
mov
cmp
inc
adc
mov
movs
sahf
jp
cmps
arpl
clc
and
add
sbb
or
lds
or
adc
pop
and
jb
imul
loop
mov
xchg
and
dec
jns
mov
mov
or
fdivr
mov
jmp
inc
ins
jno
sub
adc
mov
jmp
mov
add
je
stc
stos
mov
xchg
div
pop
push
nop
mov
mov
push
xor
dec
jp
sub
mov
and
pop
sbb
call
mov
scas
pop
jmp
xor
stos
adc
inc
mov
sahf
mov
inc
and
dec
pop
mov
lds
repnz
mov
retf
popf
sbb
add
push
cmp
jo
movs
call
pop
add
test
inc
or
and
pop
adc
cmp
adc
fidivr
pusha
add
inc
loop
and
sub
xor
jnp
jo
fiadd
mov
add
add
dec
js
ds
pusha
sub
mov
xchg
(bad)
fnstenv
retf
test
adc
in
repz
xchg
clc
pop
rol
lods
scas
in
dec
dec
add
mov
or
mov
leave
fwait
cmp
aas
jg
dec
or
pop
bound
jb
inc
ficom
inc
jno
sub
int3
fimul
fisubr
scas
or
adc
mov
shl
in
in
push
add
inc
mov
es
dec
inc
push
and
cmp
cmps
stos
pop
sar
or
loope
add
mov
jge
xor
out
shl
add
and
push
cwde
outs
gs
push
fidiv
ja
dec
jo
pop
rcl
into
xor
mov
mov
or
jno
ffreep
pop
cmp
mov
push
test
movs
imul
inc
cmp
sub
fldcw
test
sub
mov
in
in
add
xchg
add
sbb
cmps
jmp
lock
sbb
and
add
mov
mov
add
fmul
sbb
imul
outs
xchg
xor
pop
pusha
(bad)
js
inc
test
adc
add
imul
je
pop
add
enter
mov
inc
cwde
inc
sbb
cmp
aad
push
data16
lahf
dec
inc
xor
(bad)
nop
cmps
stos
adc
add
daa
inc
sbb
add
cmp
sub
fld
jno
jns
fwait
sbb
lods
mov
xchg
adc
sub
cmp
push
fs
leave
dec
loopne
pop
adc
push
add
push
add
dec
retf
sbb
inc
adc
add
jae
and
inc
adc
or
retf
ins
mov
sbb
sub
and
or
inc
pop
push
add
lock
and
outs
rol
pop
inc
loope
push
cwde
loop
xor
add
lods
in
or
sub
jbe
mov
adc
mov
inc
mov
(bad)
fst
inc
movs
push
test
xchg
add
adc
sub
mov
sub
sub
iret
mov
je
int3
cmps
dec
dec
mov
test
test
sub
dec
mov
push
sbb
push
pop
pusha
sub
loope
out
outs
adc
push
jp
dec
xor
fwait
mov
dec
xlat
jge
adc
pop
push
lock
outs
xor
test
and
stos
cmp
dec
cmp
dec
stos
adc
add
xchg
test
ret
movs
xchg
bound
mov
adc
pop
fst
adc
bound
fnstenv
inc
sbb
lahf
xor
dec
inc
add
in
inc
adc
popf
push
fisttp
xchg
pop
iret
mov
fcomp
push
pop
sub
dec
mov
sub
inc
(bad)
cmp
add
add
sbb
push
jmp
jecxz
test
test
fstp
jo
mov
cdq
xor
arpl
stos
push
aaa
dec
outs
sbb
mov
jo
fucomip
ins
bound
iret
bound
add
cwde
leave
retf
pusha
sub
add
clc
inc
adc
jo
scas
push
loopne
sub
adc
inc
add
dec
sahf
sbb
or
jns
in
ins
sbb
movs
fmul
mov
cmps
inc
dec
mov
add
lods
stos
push
mov
and
push
mov
push
inc
mov
nop
push
push
jb
pusha
mov
xor
sub
sub
retf
jg
pop
push
pop
(bad)
sbb
fst
ret
into
dec
adc
jmp
mov
sub
shl
dec
dec
xor
ret
pop
inc
sub
and
pop
cmp
rol
or
mov
stos
int
ret
mov
pop
sub
nop
sub
imul
push
mov
mov
xchg
xchg
inc
sub
sub
loop
mov
call
mov
cdq
add
fld
aas
enter
sbb
sti
fsin
and
sbb
pop
mov
or
(bad)
jmp
adc
sbb
mov
pop
out
ror
or
aad
jbe
nop
test
nop
shl
std
mov
pop
add
mov
jg
hlt
pop
call
dec
(bad)
fst
xchg
imul
aam
adc
and
test
inc
jno
sbb
iret
or
addr16
movs
inc
add
adc
sar
sbb
dec
aaa
jmp
popf
ins
or
dec
shr
cmp
cdq
mov
jo
lds
cdq
fwait
add
jg
xchg
mov
push
lods
arpl
sbb
inc
or
adc
mov
int
or
in
xchg
(bad)
and
inc
adc
movs
les
push
fwait
mov
sti
(bad)
call
lar
sub
scas
call
fist
xor
xor
(bad)
idiv
and
fsub
mov
mov
fnstenv
inc
adc
adc
xor
xchg
push
in
pop
cli
call
cmp
sbb
pop
div
sbb
jbe
loop
pop
rcl
add
repz
add
pushf
xchg
ret
pop
test
push
dec
sahf
in
sbb
push
inc
jmp
pushf
in
lds
in
dec
fild
inc
ror
shl
inc
outs
fcomp
test
add
add
add
sbb
popf
sbb
mov
leave
shl
xlat
cmovns
pop
adc
inc
pusha
inc
or
push
sbb
int3
adc
inc
sbb
sbb
ror
test
or
loopne
in
(bad)
mov
ins
cmp
cdq
xor
add
in
dec
outs
jl
gs
(bad)
jns
sar
add
push
lock
jge
xchg
adc
mov
mov
dec
ins
or
pusha
ror
pop
pusha
add
loopne
icebp
rol
loop
push
mov
inc
call
loope
push
ret
lods
and
imul
(bad)
jge
push
pushf
gs
js
mov
cmps
rcl
bound
add
sbb
jge
inc
push
jl
out
int
jl
push
mov
hlt
mov
rol
rol
inc
add
add
mov
sub
loopne
xchg
mov
cmp
inc
shl
dec
pop
ror
add
gs
ja
push
bound
stos
dec
adc
adc
or
lock
clc
test
into
add
or
push
push
mov
pop
xor
pop
mov
pop
jl
es
arpl
ror
or
shld
inc
retf
(bad)
xchg
pop
mov
or
push
add
ins
shl
sbb
fmul
arpl
movs
addr16
jmp
jmp
sahf
mov
jge
add
gs
mov
cmc
pop
es
inc
fiadd
dec
jle
inc
push
or
add
cmp
scas
arpl
and
movaps
push
adc
pop
sbb
add
enter
(bad)
cmp
popf
push
jns
ss
in
push
inc
inc
loope
mov
nop
inc
or
jno
push
or
(bad)
pop
mov
loope
or
cld
inc
push
test
xlat
clc
inc
ds
lock
ret
fadd
inc
mov
or
add
add
in
pop
push
add
rcr
inc
jp
ror
pop
inc
add
test
xor
cs
and
data16
enter
test
jmp
jecxz
cmp
dec
pop
jb
add
dec
in
mov
dec
inc
out
pop
push
jbe
jle
mov
into
push
test
xchg
dec
std
xchg
push
or
add
in
mov
xor
cmp
cmps
ss
pop
mov
adc
mul
jb
loop
in
and
js
sbb
fmul
push
push
jmp
and
ret
popf
ja
int3
jmp
stos
sar
inc
call
mov
lds
add
mov
out
jl
cmp
xchg
lods
inc
xchg
rcl
push
push
mov
jle
daa
adc
sbb
icebp
stc
and
sub
gs
push
inc
fbstp
xor
pop
cld
and
arpl
js
rcr
mov
aad
loopne
inc
and
mov
push
jns
test
lods
ror
or
data16
movs
sar
inc
push
mov
pop
adc
cmp
addr16
xor
push
les
and
sbb
xchg
cdq
push
popa
sbb
dec
push
mov
imul
mov
ficom
aas
lods
pop
mov
sbb
sahf
not
out
rcr
mov
cmp
ret
sbb
sbb
sub
mov
mov
fadd
mov
push
add
push
mov
hlt
int
jno
cwde
jb
cmps
cmps
jp
outs
in
inc
mov
mov
call
push
call
or
mov
sub
mov
sub
aad
pop
sbb
pusha
(bad)
adc
jecxz
dec
bound
pusha
xor
inc
or
movs
lods
adc
retf
jns
add
inc
rcr
cmp
add
and
mov
cmp
jae
jmp
push
lea
inc
push
leave
jmp
mov
pop
lds
jne
sub
lds
cmp
fsubr
mov
leave
pop
fstp
push
push
and
mov
add
popf
fs
adc
fwait
add
pop
push
imul
and
or
add
cdq
sub
push
push
mov
mov
test
aad
test
inc
push
add
pushf
inc
retf
jmp
outs
push
data16
in
or
aam
mov
xchg
mov
and
or
add
movs
sbb
add
ins
fldcw
je
lods
jno
imul
add
bound
loope
mov
les
lods
mov
push
cs
bound
dec
ret
rcr
enter
push
int
mov
or
add
ret
or
nop
inc
xchg
jb
and
adc
mov
add
shr
sbb
sbb
lods
jmp
test
dec
pop
push
into
test
rcr
(bad)
adc
retf
mov
jmp
xchg
rcr
pop
sbb
cwde
(bad)
out
aad
xchg
sbb
ja
or
push
ins
mov
push
fsubr
jle
dec
sbb
outs
in
dec
xlat
sar
inc
test
xchg
bound
mov
xchg
(bad)
dec
js
rol
mov
adc
add
push
dec
repz
retf
call
inc
aad
inc
inc
(bad)
sahf
int3
push
mov
(bad)
mov
lds
jge
das
div
sbb
lds
test
mov
movs
mul
or
shr
fidiv
das
retf
dec
dec
sub
add
inc
ror
and
cwde
repnz
mov
aam
dec
fcom
leave
or
sub
mov
loope
rcr
mov
xor
inc
js
shl
xchg
ins
inc
dec
arpl
shl
ret
call
fisub
mov
push
in
mov
fisub
fild
mov
add
xor
sar
adc
(bad)
in
cwde
in
repnz
movs
fadd
push
jb
lods
push
sbb
inc
sub
shl
scas
(bad)
mov
and
inc
mov
push
mov
jb
or
pop
and
dec
adc
xchg
pop
les
dec
out
out
and
and
sti
sub
and
loop
daa
push
or
pop
sub
call
bound
push
push
inc
xchg
xor
sbb
ret
es
xor
or
sub
jmp
pushf
mov
mov
das
loopne
sbb
ror
arpl
mov
inc
dec
inc
xor
xor
push
adc
or
xchg
pop
push
xchg
sahf
ss
aad
pop
test
mov
xor
xchg
jmp
jp
sbb
jno
cmc
sub
cwde
mov
retf
push
pop
xchg
push
sub
add
and
and
shl
mov
dec
adc
add
sub
nop
sbb
aas
ins
mov
push
adc
pop
into
inc
xchg
push
pop
mov
lds
dec
inc
add
mov
pop
dec
adc
add
stc
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
mov
jbe
dec
and
stos
pop
scas
rol
mov
test
or
pop
inc
fcomip
js
add
mov
inc
sbb
add
dec
dec
dec
sbb
xchg
pop
push
push
je
popf
add
data16
xor
sub
stos
ins
test
pop
imul
sub
arpl
push
ja
test
sbb
sbb
adc
sbb
ss
fcom
xchg
fistp
popf
pop
mov
mov
or
popa
sub
icebp
mov
imul
jl
sbb
(bad)
loopne
sbb
and
push
sbb
inc
mov
inc
sahf
mov
pop
je
mov
mov
jb
push
push
push
lds
push
loope
test
or
retf
inc
adc
adc
js
mov
or
mov
dec
add
inc
pop
movs
push
push
mov
sti
call
ins
push
jle
pop
dec
adc
mov
dec
outs
ret
xchg
inc
lods
scas
fstp
inc
icebp
lock
push
jmp
lds
and
push
movs
shl
push
retf
sub
outs
pop
add
scas
movs
out
ja
nop
dec
inc
hlt
pop
daa
popa
ret
add
cmp
xor
mov
in
out
mov
xchg
jmp
jb
sti
sbb
push
popf
retf
bnd
retf
lahf
push
call
add
xor
adc
adc
push
out
call
jmp
cs
adc
mov
lahf
lods
icebp
xchg
jae
and
std
push
inc
dec
stos
adc
push
mov
and
leave
aas
in
in
jg
test
rol
loopne
xor
sub
and
adc
dec
dec
adc
shl
xchg
sub
or
dec
xor
or
push
add
int
add
sbb
into
and
ins
xchg
pop
sbb
inc
jb
push
fiadd
or
sahf
jmp
cdq
and
push
outs
dec
pop
arpl
or
lock
fbstp
adc
add
ja
sbb
xchg
or
inc
pop
jno
adc
cmp
mov
sahf
jns
pop
mov
ret
or
or
rol
add
mov
mov
or
fcom
cdq
mov
(bad)
(bad)
dec
pusha
mov
inc
sub
cmp
xchg
sub
nop
lods
mov
div
mov
sar
xchg
push
popa
lock
out
mov
add
mov
xor
and
mov
ja
dec
mov
loope
aaa
inc
nop
repz
mov
adc
movs
xchg
(bad)
retf
and
mov
sbb
cmp
aaa
jo
add
xor
or
xor
aad
icebp
in
adc
pop
ins
mov
dec
sbb
ja
sub
inc
enter
out
mov
lods
sub
les
jnp
mov
mov
movs
or
mov
sar
dec
pop
mov
pop
outs
test
and
jo
or
and
push
jns
arpl
scas
mov
cmps
(bad)
movs
cwde
aas
sbb
or
xchg
fwait
push
sub
(bad)
fnsave
imul
sub
cmp
jnp
cwde
inc
or
or
scas
mov
stos
loop
test
inc
icebp
mov
ret
inc
icebp
xor
in
js
mov
add
sahf
mov
inc
jnp
cmp
out
fsubrp
sub
repnz
pop
cmp
hlt
cmps
lods
xor
ror
nop
and
jge
sub
aaa
out
and
fild
cmc
sub
dec
jo
neg
ja
nop
lahf
or
push
aas
and
stos
add
or
scas
daa
fsubrp
or
sub
push
sbb
inc
clc
sbb
mov
into
mov
xor
scas
add
ja
and
out
mov
sub
icebp
adc
in
xor
cld
sbb
and
pop
push
push
dec
and
inc
ret
fmul
jno
inc
sbb
fiadd
push
pop
test
xor
clc
cmp
clc
inc
mov
sbb
sub
ror
rcl
test
enter
sbb
bound
repnz
test
pop
repnz
push
(bad)
sbb
inc
add
xchg
push
xchg
leave
ret
pop
lods
les
cmps
stc
sub
adc
bound
pusha
xchg
enter
cli
mov
xchg
xchg
movs
add
cmp
or
dec
inc
or
mov
icebp
inc
data16
dec
ja
push
aam
add
dec
mov
addr16
das
xchg
jno
adc
xchg
leave
into
jbe
jae
daa
xor
sub
test
ret
add
hlt
mov
fst
add
push
call
sbb
mov
inc
jecxz
push
fist
jno
test
cwde
sbb
or
dec
inc
daa
jo
retf
pushf
cmp
call
add
test
adc
stos
cmp
es
and
int3
les
(bad)
xchg
xchg
or
pushf
movs
dec
push
mov
test
mov
shl
push
ja
jl
hlt
imul
add
mov
movs
or
cmp
lock
js
xor
add
movs
(bad)
call
int
push
inc
inc
std
push
movs
xchg
aad
xchg
movs
das
ja
(bad)
(bad)
or
mov
xchg
fisub
inc
repz
push
retf
jp
movs
cmp
jmp
les
mov
push
inc
sbb
xchg
sbb
and
mov
sub
fld
pushf
jmp
mov
(bad)
retf
xchg
jge
jne
or
(bad)
cmp
scas
jg
mov
shl
xor
or
adc
jnp
adc
(bad)
bt
jns
push
xchg
enter
and
xor
xor
retf
mov
fld
mov
or
scas
retf
ror
hlt
xchg
push
adc
ins
add
jl
sbb
cmps
int
mov
cs
stos
jbe
popa
pop
lds
mov
das
lock
jo
inc
retf
ja
jbe
add
js
add
jle
bound
mov
mov
dec
stos
jg
adc
pop
xor
adc
and
ds
ja
adc
aaa
loop
ret
pop
(bad)
hlt
ss
cmps
fnsave
xchg
ja
pop
pop
mov
mov
pop
cmp
sub
nop
(bad)
mov
push
div
cmc
hlt
jbe
xor
div
jnp
into
ss
leave
jbe
ret
sbb
daa
pusha
or
sbb
mov
jg
xchg
add
jb
rcr
mov
or
mov
and
lahf
stc
push
sub
clc
daa
imul
(bad)
sub
cmp
xor
je
inc
popf
mov
(bad)
or
imul
push
inc
jns
pop
loopne
add
sbb
xchg
outs
mov
mov
cmps
(bad)
mov
daa
fsub
jne
jmp
jbe
adc
in
add
fcmovnu
mov
not
into
jl
pop
ss
jle
and
pop
fidiv
mov
int
fmul
mov
bound
ja
inc
lea
jmp
rcl
lock
neg
fild
xchg
jbe
pusha
add
stos
push
int3
sahf
(bad)
cmc
lahf
jae
out
test
or
pop
jbe
or
push
call
mov
push
rcr
mov
fiadd
add
dec
mov
mov
scas
jb
movs
cld
jmp
(bad)
ficom
and
scas
jecxz
jbe
fwait
int3
out
pop
lock
popf
jno
jo
sar
mov
in
cmc
xor
xchg
ret
xlat
dec
inc
movs
or
push
push
aaa
sbb
add
or
mov
add
daa
mov
mov
add
aam
pop
(bad)
out
bound
retf
pop
xchg
mov
fimul
dec
or
es
bound
test
pop
push
sbb
lahf
sbb
ror
dec
iret
in
ror
repz
repz
bnd
loopne
add
push
enter
rol
rcl
xchg
inc
add
jg
mov
sar
xchg
(bad)
jmp
aas
mov
add
sahf
cli
mov
xor
push
add
xlat
inc
adc
jge
and
push
add
add
add
lods
push
jl
push
jbe
bnd
pop
je
adc
inc
adc
jg
push
jo
test
addr16
and
test
sub
out
adc
sub
pop
dec
shl
jle
inc
add
inc
adc
popw
dec
daa
and
out
cs
cmp
xor
pop
push
jb
sub
and
les
cmp
and
mov
jl
mov
inc
inc
add
add
js
xlat
add
add
nop
mov
push
je
dec
or
add
jp
gs
mov
shl
add
call
jmp
adc
add
inc
je
hlt
daa
cmp
jb
ja
addr16
js
loopne
out
xchg
push
dec
cmp
icebp
sub
ja
test
bound
jle
mov
mov
test
push
outs
push
add
enter
jg
sbb
adc
add
xchg
cwde
xchg
xchg
inc
outs
pop
or
push
imul
enter
pop
mov
sub
lods
clc
jle
cwde
lea
mov
jo
fs
inc
mov
xchg
push
call
cmp
jo
cmp
lds
loopne
pop
mov
clc
cwde
(bad)
mov
add
mov
jecxz
(bad)
cmp
pop
mov
mov
sub
add
mov
or
mov
adc
callw
call
cmc
dec
pop
stc
cwde
and
mov
push
rol
pop
mov
in
adc
ins
push
fld
pop
xor
sbb
or
xchg
xchg
pop
ss
cmp
cwde
sbb
lock
and
and
inc
imul
xchg
daa
cmp
cmp
sub
add
sbb
inc
push
sbb
je
pop
push
ins
loopne
cmp
test
add
rol
pop
test
out
pop
mov
adc
jb
xchg
shl
xchg
sbb
and
sub
test
push
test
cmp
mov
loopne
sub
jle
mov
mov
push
call
mov
mov
add
xchg
jecxz
call
outs
call
test
xchg
dec
stc
xchg
dec
leave
xchg
cwde
cwde
and
adc
jne
test
stc
daa
fwait
out
cmp
jne
add
inc
push
lock
adc
pop
push
mov
ins
cmp
lock
lock
fstp
mov
pop
neg
fcom
dec
cmp
aam
sbb
pushf
pop
mov
pop
rol
mov
sbb
or
xor
xor
hlt
push
aas
fstp
mov
and
cmp
add
xchg
pop
xor
mov
stc
add
push
icebp
sahf
mov
push
push
cwde
mov
mov
pop
mov
xor
mov
ja
jbe
mov
mov
or
mov
mov
in
mov
mov
pusha
xchg
jbe
mov
addr16
mov
or
sbb
enter
ins
cmp
mov
inc
add
test
loopne
cmp
dec
inc
ss
gs
xchg
dec
dec
mov
xor
pop
add
pop
mov
test
mov
adc
mov
push
icebp
add
lock
fsub
ror
inc
lods
and
add
sbb
xchg
fld
and
mov
dec
inc
jae
stos
inc
dec
je
punpckhwd
fld
pop
mov
jle
push
sub
add
lods
(bad)
sbb
and
cmp
(bad)
sub
adc
sub
push
or
(bad)
cmp
sub
sub
add
sbb
pop
sub
ficom
xchg
jae
ss
(bad)
adc
pop
pop
and
loop
stos
test
call
mov
xor
lods
adc
and
mov
xor
test
mov
inc
inc
pop
rol
dec
stc
mov
loopne
bswap
inc
stos
xor
hlt
mov
fldcw
mov
lea
mov
inc
mov
cdq
call
mov
mov
in
(bad)
cli
test
imul
dec
mov
mov
and
sub
mov
stos
add
nop
call
adc
fisubr
sbb
fbld
sbb
add
inc
scas
jmp
cli
sub
pop
aam
movs
sahf
jmp
mov
push
push
adc
mov
pop
jp
mov
mov
cmp
push
lods
es
adc
add
pop
lods
out
icebp
mov
push
mov
and
pop
mov
mov
and
add
imul
mov
aas
in
inc
inc
cmp
pop
fwait
mov
loopne
cmp
dec
mov
(bad)
das
mov
sbb
xor
test
lds
enter
pop
movs
test
mov
sub
cli
add
mov
and
test
cmp
fwait
jl
sar
xchg
stos
xor
jb
mov
sbb
push
ds
mov
lods
push
nop
or
pop
mov
loopne
add
mov
mov
mov
ficom
loopne
dec
lds
jb
jae
dec
jbe
xor
push
add
popf
ins
sub
sbb
pusha
xchg
mov
mov
sti
mov
mov
or
sub
or
sbb
add
rcl
xchg
(bad)
(bad)
adc
fnstenv
pop
ins
in
pop
(bad)
scas
jl
outs
cmp
stos
dec
jmp
ret
js
mov
mov
call
rol
rol
mov
jl
pop
add
mov
xor
mov
ror
sub
or
retf
arpl
addr16
inc
inc
jp
test
cmp
inc
dec
xchg
mov
cmp
jmp
mov
aas
inc
sbb
cmp
or
add
jmp
pop
push
mov
stos
mov
xor
sbb
add
mov
pop
add
push
(bad)
cmp
sub
fisubr
retf
inc
lock
push
outs
sub
mov
mov
push
pop
lock
jnp
movs
mov
sbb
add
add
jl
lods
sbb
pop
jo
rcr
add
inc
ror
mov
pop
mov
pop
mov
sub
push
stos
add
sti
xchg
dec
dec
test
or
leave
xchg
mov
sub
or
ds
movs
lock
bound
int
in
xchg
leave
add
add
ror
or
pop
mov
mov
test
add
mov
sub
cs
iret
mov
mov
retf
into
test
ret
push
lea
mov
int3
pop
jo
les
inc
enter
cmc
and
movs
int3
push
ins
jns
nop
in
pusha
loope
add
ret
sbb
sbb
mov
fadd
pop
mov
inc
stc
scas
pop
push
adc
shr
mov
in
pushf
shr
into
jb
iret
push
cmp
out
in
into
cmp
mov
stos
into
sub
push
sti
into
push
in
mov
sub
add
add
and
push
sub
add
lock
push
fstp
rol
or
add
int
daa
aas
mov
sub
add
lock
cmpxchg
push
add
push
add
or
sbb
fwait
int3
scas
dec
fcomp
int
adc
(bad)
js
shr
(bad)
rol
int
xor
mov
or
sub
(bad)
ss
(bad)
std
xlat
or
push
mov
inc
jg
mov
ins
push
add
xchg
lea
cdq
cmp
in
add
jo
sub
inc
mov
enter
loope
add
(bad)
fld
sldt
xor
push
retf
ret
(bad)
cmp
add
sub
(bad)
fst
jmp
shl
cmp
test
ret
ins
pop
mov
fst
sbb
and
dec
rcl
enter
movs
add
fimul
rcr
add
xlat
test
cmp
add
nop
cmps
(bad)
adc
push
add
ficom
add
add
enter
or
sbb
dec
jge
jge
sub
femms
mov
out
add
sar
pop
mov
xor
push
push
xlat
add
add
add
test
mov
stos
retf
jne
push
mov
add
push
ins
add
cs
dec
scas
in
dec
test
cmp
xchg
add
fidivr
add
xor
xor
mov
add
retf
mov
push
dec
mov
dec
loope
ds
fnstsw
inc
loope
mov
mov
shl
mov
jl
int
fldenv
add
dec
mov
fs
(bad)
adc
sbb
out
loop
mov
in
add
ins
jno
aas
xor
call
pop
add
dec
sub
add
mov
pusha
add
fld
mov
push
lock
dec
ret
mov
lods
cmc
popf
jmp
cmp
cdq
add
mov
sbb
and
rcr
xlat
mov
dec
sbb
add
stos
ret
jae
enter
icebp
and
add
out
dec
jmp
add
in
mov
adc
lock
int3
fcmovu
and
iret
stos
add
scas
loope
lods
shr
mov
aas
(bad)
fcmovne
push
xchg
test
sub
mov
dec
sub
out
repnz
aas
loopne
push
jmp
mov
inc
(bad)
rol
stos
jmp
add
lock
push
push
fbstp
jmp
int
add
(bad)
xor
lock
or
mov
mov
leave
dec
out
jae
int3
pop
add
(bad)
cmp
dec
jns
jp
mov
out
dec
mov
je
jae
mov
jmp
adc
add
mov
(bad)
(bad)
add
mov
jg
push
aas
repnz
dec
jmp
push
mov
xchg
lods
cwde
pop
xor
dec
or
jg
stos
xchg
iret
cmp
pop
add
nop
test
pusha
jns
ret
scas
icebp
or
mov
mov
mov
inc
sti
mov
scas
xor
adc
mov
iret
sti
out
and
aas
outs
clc
rcr
lods
add
mov
xor
inc
data16
inc
ins
sbb
dec
jmp
dec
adc
sub
gs
dec
loopne
or
nop
sbb
mov
inc
arpl
add
inc
jecxz
xor
pusha
cmps
ret
push
mov
xchg
xor
shl
add
inc
jne
inc
mov
pop
mov
inc
inc
xchg
jecxz
pop
movs
push
aad
in
test
sub
enter
add
retf
fimul
shl
inc
int3
cmp
or
out
sbb
fstp
sbb
cmps
mov
pusha
(bad)
icebp
and
mov
fimul
nop
jmp
sbb
movs
cmc
adc
pop
(bad)
jmp
mov
dec
xchg
jb
inc
xchg
data16
adc
xlat
scas
or
icebp
add
nop
pop
ja
or
adc
jnp
adc
inc
les
cmc
enter
push
call
push
movs
sbb
inc
mov
adc
sbb
in
rcl
mov
or
and
xchg
sbb
fs
rcr
imul
call
loopne
imul
mov
into
fisttp
sub
clc
mov
(bad)
(bad)
sub
inc
push
inc
push
add
pop
je
adc
inc
push
enter
mov
cmc
cli
jmp
bound
mov
mov
data16
or
nop
mov
push
add
dec
or
(bad)
or
jns
sub
sbb
cmp
inc
pusha
fcom
inc
dec
sbb
xchg
push
test
je
hlt
cdq
adc
push
jnp
call
cld
cmps
dec
xchg
fimul
mov
pop
mov
push
mov
add
cwde
fadd
push
out
sub
lods
int3
call
test
rcr
fdivr
fwait
jne
movs
ror
adc
sar
out
retf
sub
adc
iret
xchg
add
mov
push
xor
repnz
stos
pop
or
xchg
add
pop
adc
aad
popa
lds
pop
mov
in
pop
and
push
inc
mov
test
ret
mov
inc
jecxz
xor
fidivr
push
popa
into
add
cmp
repnz
and
rol
push
push
add
jnp
mov
ds
add
mov
mov
dec
fld
ror
je
and
push
fiadd
shl
xor
nop
fwait
repz
add
enter
out
je
xor
enter
in
and
add
lds
add
pop
inc
or
dec
mov
adc
dec
xchg
xor
push
sub
inc
xor
inc
aad
in
aaa
int3
cwde
sub
loopne
sbb
sub
int
out
adc
push
call
or
cmp
ins
or
inc
(bad)
cmp
pop
fsubr
aas
add
jno
retf
pop
cmp
rol
adc
test
pop
shr
jne
push
push
push
loope
xchg
sub
rcl
mov
jle
mov
push
shl
mov
test
add
mov
lock
add
push
ret
add
inc
mov
(bad)
ror
cmp
data16
push
cwde
pusha
cs
add
push
cdq
xchg
pop
mov
clc
sub
xchg
aad
mov
mov
push
dec
(bad)
add
jo
pop
or
pusha
jmp
adc
out
pop
mov
test
(bad)
xchg
xor
mov
mul
sub
push
lods
pop
adc
or
test
adc
xchg
jmp
test
out
lds
les
repnz
push
cmp
mov
pop
out
push
jl
jge
add
in
lahf
sbb
add
ror
test
pop
ja
jne
xchg
iret
lea
ret
adc
push
sub
mov
cdq
or
push
sbb
ins
cs
add
mov
adc
xor
lods
fs
xchg
and
ds
mov
and
imul
rol
sub
ror
inc
adc
dec
xor
ret
mov
xor
mov
inc
retf
pop
lds
outs
push
out
inc
movs
add
mov
add
add
out
add
jmp
test
dec
sbb
pop
mov
jl
jmp
sub
inc
dec
shl
mov
shl
add
push
aas
mov
(bad)
mov
xor
dec
je
mov
jne
fst
inc
mov
inc
dec
add
add
add
add
imul
cwde
adc
mov
sbb
pusha
adc
push
mov
adc
mov
pop
jns
and
jg
and
jl
push
ret
xor
and
outs
pop
adc
movs
pop
dec
push
add
inc
dec
or
cmp
sbb
das
repnz
xor
cmp
dec
shl
or
push
and
mov
ret
sub
mov
aam
imul
ror
pop
je
cmp
bound
mov
pop
mov
es
rol
add
or
add
js
mov
retf
cmp
push
dec
adc
ficom
xor
(bad)
fidivr
or
cdq
out
push
mov
call
je
cmp
sub
push
inc
adc
add
cld
push
ss
push
add
loopne
es
xchg
or
mov
ins
mov
test
push
ret
dec
push
push
test
fwait
xchg
mov
jo
add
fnstenv
fwait
mul
jae
in
or
pusha
inc
scas
test
lds
cld
test
dec
in
and
push
or
xchg
int3
adc
inc
push
add
into
xchg
int3
jecxz
mov
(bad)
cmps
lods
daa
inc
jecxz
nop
add
repz
push
mov
in
adc
and
lock
or
cmc
adc
or
retf
or
(bad)
in
and
add
jb
mov
xchg
movs
xor
arpl
test
push
ja
add
adc
add
xchg
xchg
cmps
jmp
pop
pop
repz
dec
mov
jge
xor
mov
add
jmp
or
and
jo
dec
lock
imul
jge
ja
mov
out
adc
setge
mov
lds
and
xchg
add
xchg
add
jns
cmp
and
and
pop
js
push
pop
or
movs
ds
add
lahf
add
xor
test
(bad)
mov
xchg
int3
inc
iret
mov
cmp
dec
xor
or
mov
dec
imul
cs
int3
sub
or
ret
pushf
mov
or
inc
cmp
xor
out
outs
test
scas
and
nop
cmps
stc
pushf
push
inc
dec
inc
and
mov
inc
lock
call
(bad)
int3
das
loope
enter
cs
fld
push
(bad)
and
sysret
sub
xor
ror
mov
sahf
sub
sbb
pop
cs
inc
cmp
pop
les
pop
call
adc
lods
mov
(bad)
mov
dec
lods
mov
fwait
mov
dec
sub
aas
cli
rol
out
arpl
inc
into
add
mov
xor
add
rcl
adc
mov
(bad)
shl
adc
fadd
and
add
pop
mov
mov
lock
dec
push
or
jmp
lods
sbb
add
inc
adc
xchg
adc
push
in
xor
and
pop
mov
es
adc
sub
xchg
sbb
ds
mov
jae
loopne
xor
or
(bad)
mov
dec
inc
push
mov
push
adc
jo
test
sub
nop
adc
cmps
test
int
mov
push
mov
mov
ficomp
shr
iret
lock
and
add
es
ss
add
clc
pop
adc
pusha
add
and
data16
push
call
add
add
inc
add
jno
or
xor
adc
sbb
aad
jp
movs
loop
out
fwait
lahf
sbb
addr16
xchg
ficomp
ret
pop
fdivr
inc
(bad)
cmc
or
ror
inc
mov
(bad)
sbb
mov
or
fwait
sub
and
cmp
add
sbb
jge
ins
(bad)
pop
(bad)
fcomp
jo
pop
imul
js
sub
loope
dec
lea
jge
enter
sub
jle
cmp
add
enter
loopne
dec
ret
ins
mov
mov
inc
cmp
or
fmul
popa
cmps
lods
jecxz
xor
xor
mov
mov
adc
lods
add
add
call
xor
(bad)
cmp
lea
call
inc
fcom
or
mov
jp
dec
mov
dec
and
or
inc
test
arpl
dec
loope
(bad)
push
mov
mov
outs
shl
loopne
mov
into
or
into
push
out
das
push
out
dec
int
sub
movs
pop
mov
push
and
add
add
xchg
rol
adc
push
aam
mov
retf
into
and
int3
(bad)
adc
pop
lods
out
fld
push
inc
inc
push
push
lods
ficom
sar
lods
clc
add
add
ror
call
mov
dec
jne
fs
push
popa
jo
ret
ins
fistp
add
or
add
rcl
into
push
or
arpl
push
add
scas
sub
mov
(bad)
ret
pushf
mov
dec
jle
lock
je
push
push
ins
jge
nop
iret
mov
add
inc
fisub
mov
iret
and
cmp
fadd
or
add
add
(bad)
adc
ins
jmp
(bad)
and
pop
or
repnz
popw
and
cmp
jno
mov
cmp
add
push
or
dec
sbb
scas
jno
cs
rol
fldcw
sbb
cmp
out
or
push
pop
(bad)
sti
xor
retf
add
(bad)
and
rcr
add
push
adc
adc
mov
inc
or
mov
pop
sub
push
adc
adc
rcl
cmp
and
arpl
push
sbb
or
dec
ins
mov
stos
(bad)
loop
(bad)
sbb
mov
push
and
mov
lock
jne
loopne
lea
pop
dec
and
xor
pop
inc
xchg
jl
inc
push
loopne
fmul
add
and
add
add
sbb
sub
push
and
and
push
add
dec
and
sbb
add
outs
xor
das
push
push
icebp
aas
mov
mov
rcr
mov
fadd
(bad)
dec
pop
inc
push
mov
xchg
cli
iret
ins
scas
imul
sub
rol
push
mov
scas
popa
sub
sub
dec
mov
mov
cmp
sub
mov
fidiv
and
add
inc
call
mov
test
lods
sub
daa
and
sub
lock
add
cmp
pusha
add
cs
adc
mov
dec
mov
mov
bswap
and
(bad)
pop
pop
jae
add
sbb
xlat
call
dec
jl
jmp
xor
je
popa
push
inc
sbb
push
lds
out
add
add
pusha
add
add
add
add
pop
push
add
rcr
mov
push
jb
xor
add
or
shl
xor
sub
shl
gs
clc
outs
cmp
mov
arpl
fsubr
mov
cmp
(bad)
or
xor
mov
xchg
pop
sub
add
pusha
add
and
jae
xchg
adc
pop
add
outs
loopne
pushf
mov
mov
mov
or
outs
in
mov
adc
arpl
dec
mul
inc
pop
mov
adc
out
call
lods
mov
jae
fmul
pushf
add
jbe
push
add
cmp
inc
es
inc
xor
sub
sub
aam
daa
jae
adc
add
add
loopne
adc
and
test
inc
and
jmp
dec
cli
cs
jmp
data16
push
adc
repnz
or
imul
xchg
es
rcl
popa
push
xchg
push
mov
(bad)
loopne
dec
add
xchg
push
mov
dec
and
add
or
repz
push
test
add
sbb
sub
push
xchg
cmp
or
das
fcmovnb
push
(bad)
xchg
sub
retf
test
stos
cmp
cmc
shl
scas
or
adc
add
das
push
call
adc
je
add
mov
sub
push
inc
loope
and
adc
mov
test
fild
mov
inc
sbb
dec
cmp
call
ret
inc
inc
les
push
inc
push
mov
xor
add
inc
add
pop
or
add
add
nop
loope
fmul
xor
pop
(bad)
mov
push
call
xchg
sbb
xor
retf
mov
aam
push
inc
(bad)
pop
fist
push
pusha
pop
out
xchg
data16
xor
sub
pusha
push
dec
les
(bad)
dec
push
and
ins
xor
mov
jecxz
add
dec
jno
mov
cdq
movs
xor
mov
push
outs
in
into
push
les
push
inc
cmp
je
xchg
movs
xor
jne
inc
jmp
xchg
setb
push
pop
xchg
push
rol
mov
(bad)
lock
xchg
xor
dec
adc
int
inc
xor
outs
pop
push
sub
rcr
dec
add
enter
inc
sbb
sub
daa
cmps
ja
or
push
je
add
push
pop
imul
daa
hlt
stos
or
lods
outs
inc
arpl
mov
pop
sub
loopne
test
sub
inc
clc
shl
pop
push
(bad)
sbb
push
jno
loop
enter
adc
out
es
inc
jae
jno
jmp
xchg
inc
cdq
xchg
inc
or
sub
je
pop
and
nop
iret
xchg
push
push
not
jne
sbb
xor
idiv
loopne
add
push
pusha
add
add
and
ret
inc
adc
gs
add
push
or
inc
mov
sbb
mov
jecxz
(bad)
out
lea
inc
repnz
aaa
aaa
mov
push
fmul
add
jo
cmp
jns
js
popf
mov
out
add
cmps
mov
inc
push
push
lock
jp
add
loopne
adc
and
test
lds
jno
cmp
jmp
mov
movs
retf
inc
or
test
sub
pop
mov
test
dec
outs
cwde
pop
adc
and
fcmovb
dec
or
pop
test
sbb
popa
out
retf
mov
lds
stc
push
dec
jmp
lods
loopne
adc
jne
stos
fld
ss
dec
repnz
add
aas
neg
push
dec
and
add
add
mul
mov
ins
repz
fiadd
pop
adc
(bad)
or
mov
jns
je
push
xor
icebp
ficom
scas
fdiv
daa
fcom
in
(bad)
(bad)
mov
shl
rcr
push
aad
ds
xlat
add
adc
lar
jne
push
lahf
stc
mov
pop
nop
sub
imul
call
jno
add
xchg
movups
fwait
addr16
frstor
mov
inc
mov
into
jecxz
add
jge
js
loopne
inc
inc
jmp
loope
xchg
xchg
mov
in
or
addr16
lahf
xchg
pop
adc
dec
jg
cwde
test
add
int
mov
clc
loopne
push
bound
cwde
aas
addr16
addr16
(bad)
cmc
not
and
xchg
sub
scas
add
mov
cmc
sub
add
mov
ret
movs
add
pop
sub
ds
cmp
arpl
aas
xor
add
int
inc
enter
stc
pop
imul
sbb
lods
ss
adc
je
xor
push
cwde
add
aad
in
inc
and
push
cmp
cwde
or
mov
xchg
or
test
lds
pop
adc
sub
call
mov
hlt
pop
sub
adc
adc
add
gs
and
call
test
inc
int3
loop
dec
cmp
movs
mov
nop
jbe
lea
pusha
push
dec
cmp
aaa
and
(bad)
in
test
xchg
mov
jae
sub
add
fidivr
ja
sar
sub
dec
test
daa
(bad)
fst
mov
sbb
jno
push
out
pop
pop
mov
iret
ss
scas
cdq
mov
mov
dec
mul
sbb
bound
jmp
mul
pop
jnp
xchg
push
aaa
push
pop
jne
pop
push
and
gs
dec
mov
out
(bad)
add
ret
push
cli
mov
(bad)
sub
cmp
or
sub
mov
pushf
mov
cli
adc
add
je
mov
inc
test
dec
and
push
sbb
leave
int3
es
mov
push
add
cmp
and
mov
popf
cs
adc
ds
mov
add
and
inc
fisttp
mov
fdivr
loope
push
std
xor
fldcw
les
or
in
iret
adc
dec
or
es
sbb
cmps
mov
xlat
pop
jl
popf
inc
(bad)
cmp
out
add
repz
sub
arpl
lahf
adc
mov
mov
sar
cld
mov
adc
push
mov
pop
sub
xchg
mov
ss
and
out
arpl
sub
cmp
cmp
push
add
add
sbb
je
jmp
jmp
push
and
rcl
sbb
add
test
inc
call
xor
inc
ds
pop
or
dec
(bad)
sbb
dec
fnstenv
leave
test
inc
jns
ret
test
inc
or
inc
in
inc
mov
rcr
xor
and
mov
push
into
icebp
mov
push
inc
dec
arpl
fwait
ret
push
ret
dec
dec
xchg
inc
repnz
ins
rcr
adc
aas
xchg
inc
dec
mov
in
pop
mov
fld
cmp
adc
jae
add
sbb
fld
add
push
pusha
fimul
sbb
icebp
xchg
add
inc
add
loopne
jmp
pusha
loop
stc
sbb
and
(bad)
mov
sub
sbb
sbb
fiadd
and
iret
leave
ds
loope
imul
retf
imul
and
dec
add
aaa
sbb
int3
xchg
adc
add
xchg
sahf
icebp
fmul
ror
das
int
adc
test
inc
outs
push
daa
lods
(bad)
gs
and
in
shr
xor
jle
sbb
idiv
outs
push
imul
add
and
out
cmp
sbb
bnd
and
mov
aas
xchg
mov
or
popf
pop
add
mov
in
std
mov
mov
into
sar
fs
jmp
(bad)
fadd
jbe
loopne
or
mov
aam
or
clc
and
test
xchg
lods
sbb
or
jl
mov
or
int3
int3
inc
cmp
ins
pusha
adc
(bad)
cld
cmc
cmp
int3
pop
js
inc
inc
call
dec
jmp
dec
xchg
inc
add
movhps
mov
pop
pop
mov
cld
dec
ins
ins
out
bound
mov
mov
enter
add
in
hlt
leave
push
and
out
das
xchg
clc
cmp
mov
jge
dec
pushf
inc
(bad)
add
sbb
fsub
mov
xor
rcr
jb
dec
mov
leave
or
mov
add
or
cs
dec
mov
xchg
and
mov
f2xm1
and
mov
xchg
jp
push
rol
setne
and
inc
push
adc
sub
xchg
sub
inc
adc
adc
push
int
daa
pop
or
int3
(bad)
sub
lds
fidiv
and
(bad)
jmp
cmp
sbb
pop
sbb
or
add
in
mov
out
rcr
movs
(bad)
and
jp
jmp
jmp
inc
pop
mov
fld
fnstsw
and
inc
and
adc
fidivr
jmp
sub
repz
jo
inc
xor
xchg
xchg
pop
dec
mov
arpl
inc
and
adc
mov
cmp
inc
ins
xor
pop
(bad)
xor
es
or
and
push
jo
fst
fnsave
push
js
jne
inc
cmp
push
push
test
add
sbb
mov
sub
mov
dec
ins
push
mov
add
jg
sbb
inc
push
lods
mov
cmp
xor
push
add
jbe
shl
(bad)
mov
jae
inc
loope
jae
inc
clc
add
xchg
and
test
mov
mov
pop
and
rcr
cld
pop
loop
add
mov
add
or
jno
or
and
fs
gs
xor
sub
cwde
xchg
sbb
push
cmp
mov
mov
cmp
push
jge
mov
mov
mov
lea
pop
and
adc
adc
enter
pop
mov
(bad)
das
in
xor
cmp
xchg
push
sbb
inc
rol
sub
ret
cmp
sub
enter
jecxz
push
add
addr16
scas
fnstenv
(bad)
or
in
add
fnstsw
dec
and
dec
loopne
mov
sbb
jmp
inc
cmps
in
mov
sar
ins
test
loopne
(bad)
mov
fsub
push
mov
loopne
stos
cmp
mov
xlat
outs
jno
xor
inc
mov
jne
jmp
das
mov
xchg
cmp
sub
mov
inc
sti
pop
xchg
rcr
repz
clc
or
pushf
jns
dec
fs
in
jmp
add
les
aaa
adc
cli
jp
xchg
xchg
ins
cdq
out
mov
rcl
sbb
mov
cmp
push
jno
setg
dec
dec
inc
pop
jmp
ret
and
lea
cmc
mov
adc
push
into
xchg
push
xchg
and
inc
jl
cmp
imul
test
stos
outs
pop
add
mov
lahf
add
xor
push
inc
xchg
adc
dec
sbb
xor
test
sub
sub
icebp
jge
sub
add
mov
test
inc
cmp
rol
cmp
jbe
or
mov
dec
gs
push
dec
out
xchg
retf
(bad)
jb
ret
pop
cmp
cmp
(bad)
dec
pusha
ret
enter
shl
pop
pop
mov
sub
cmps
dec
aad
mov
xor
stc
dec
addr16
call
sbb
out
movs
inc
inc
sub
inc
iret
popa
sbb
retf
jmp
inc
sbb
bound
pusha
push
addr16
icebp
pop
cmp
inc
jmp
mov
test
loopne
sbb
repnz
inc
(bad)
push
add
rcl
loope
xchg
mov
movs
sub
test
ret
daa
retf
or
aad
lods
and
dec
mov
push
daa
and
icebp
add
mov
(bad)
lods
pop
mov
add
adc
mov
push
add
add
and
jle
mov
loopne
dec
xchg
push
arpl
pop
ss
add
add
nop
dec
hlt
loop
or
(bad)
and
cmp
add
and
addr16
leavew
inc
ds
sahf
cmp
add
loopne
(bad)
push
scas
adc
stos
xchg
aaa
rcl
mov
adc
lods
xchg
push
inc
test
xchg
idiv
shr
inc
push
mov
outs
push
sub
adc
add
jns
pusha
int3
sub
repnz
pop
dec
and
pop
or
pop
mov
sbb
loopne
dec
pop
sub
call
pop
jmp
push
imul
call
xor
lds
dec
test
pop
mov
add
mov
cmp
add
loope
outs
add
xor
fld
hlt
pop
push
add
xor
or
loop
stos
pop
js
xchg
fs
out
cwde
icebp
mov
pop
mov
mov
sbb
sub
add
sbb
test
cwde
push
push
jmp
mov
push
push
lahf
mul
add
fsubr
pop
adc
scas
push
cli
test
xor
xchg
xchg
add
cmp
or
std
fs
add
enter
mov
push
jae
xor
add
rcl
inc
add
pop
push
ds
ret
inc
dec
rol
mov
xor
xor
mov
xor
dec
iret
push
call
push
push
jae
and
shl
imul
iret
loop
push
and
mov
fidivr
adc
jb
aas
mov
push
xor
cs
stos
inc
lahf
stos
test
dec
pusha
mov
sub
pop
add
sbb
dec
loope
enter
mov
add
je
mov
sub
adc
fwait
lods
out
or
bound
inc
retf
and
add
call
push
mov
rcl
call
cmp
shl
test
or
mov
jns
dec
mov
movs
leave
lea
xor
add
adc
mov
adc
or
bound
pop
lods
and
mov
push
pop
loopne
mov
adc
in
ror
pop
jno
cmp
mov
mov
or
leave
into
popa
xchg
xchg
or
outs
daa
fnop
lahf
outs
mov
inc
lds
and
hlt
xor
push
loopne
sbb
or
and
sub
xor
mul
xchg
aaa
nop
mov
mov
sub
or
xor
shl
push
adc
dec
mov
mov
push
es
xchg
pushf
pushf
mov
push
pop
mov
mov
jbe
jp
cmp
add
adc
and
sbb
aaa
test
rcr
inc
cmp
dec
out
or
sahf
mov
or
or
mov
test
jl
std
gs
mov
addr16
push
(bad)
shl
xchg
add
xor
add
push
stos
adc
cmp
shl
jmp
ret
mov
add
mov
popf
mov
and
pop
xor
imul
lods
cmp
daa
sub
(bad)
push
movs
or
xor
push
sbb
mov
dec
mov
cmp
fisubr
jns
mov
add
jp
cs
adc
add
mov
or
push
inc
jp
dec
jp
xchg
mov
or
in
imul
dec
jo
cmps
cmp
push
rcr
jbe
ins
fdiv
daa
dec
add
xlat
push
out
push
(bad)
cmps
inc
fxch
adc
outs
cli
xchg
add
iret
cdq
arpl
pop
mov
hlt
jl
mov
nop
sub
das
ins
test
scas
dec
shr
push
xchg
mov
xor
sub
jge
hlt
sbb
adc
loop
fcmovu
(bad)
jmp
sbb
mov
sar
in
mov
mov
(bad)
enter
mov
stos
ret
lahf
mov
mov
dec
es
adc
retf
push
iret
out
xchg
mov
(bad)
add
enter
inc
and
pop
cmp
movs
inc
and
mov
mov
and
xchg
xchg
and
aam
adc
lahf
sbb
dec
leave
aam
movs
pushf
jl
add
stc
dec
push
cmp
sahf
push
dec
cmps
mov
stos
mov
xor
pushf
pop
cmp
push
push
push
push
and
pop
and
inc
add
shl
lahf
cli
popa
dec
adc
fwait
pop
movs
pusha
test
or
bswap
rcl
or
das
sub
in
mov
or
ins
mov
stc
int3
es
icebp
jne
pop
sub
jo
pop
cmp
pop
jo
adc
loopne
inc
and
inc
add
inc
add
pop
mov
test
cld
(bad)
and
dec
sar
pop
pop
adc
or
push
jns
or
push
sub
lahf
ret
pop
and
sar
lds
xor
cld
mov
pop
movs
dec
pop
fadd
pop
inc
and
dec
loope
and
and
pop
pop
push
push
mov
pusha
or
mov
mov
add
mov
(bad)
sub
add
cmp
std
or
pusha
movs
fwait
cmp
clc
add
std
int3
call
inc
retf
jmp
adc
aad
inc
jecxz
jo
inc
inc
and
dec
and
repnz
add
add
retf
fadd
xor
loope
inc
rol
test
sub
iret
mov
mov
sub
adc
sar
and
adc
xchg
pushf
mov
push
jecxz
inc
push
jbe
(bad)
stc
xchg
mov
and
add
fs
rol
adc
xchg
in
jo
push
(bad)
or
fisub
mov
daa
(bad)
in
lods
bound
adc
cmps
arpl
lds
xchg
jl
add
jecxz
sbb
and
in
push
inc
adc
mov
gs
or
mov
int3
add
mov
cdq
pop
movs
add
addr16
movs
sub
push
pop
xchg
pop
jb
fcmovb
add
and
js
inc
jb
adc
fisttp
retf
cmps
lahf
ins
sahf
bound
in
jge
cmp
iret
pop
inc
sar
jne
or
push
or
push
pop
icebp
mov
add
test
nop
rcl
fnstsw
add
je
sub
(bad)
pop
js
cmp
daa
imul
push
pop
and
jl
mov
and
bound
sahf
lahf
clc
jns
jne
inc
xchg
sbb
mov
in
cmp
fild
out
and
cmc
fs
hlt
shl
popf
or
aam
pushf
adc
rol
push
les
dec
or
mov
sahf
push
xor
jmp
sbb
pushf
add
inc
or
xchg
addr16
and
xor
jnp
adc
push
sbb
push
sbb
pop
mov
cmp
ja
or
out
mov
inc
pop
fiadd
test
xchg
push
sbb
ret
(bad)
adc
mov
lock
add
add
retf
aad
adc
shl
sub
jg
sbb
add
out
xchg
inc
jl
or
mov
movs
push
pop
aad
and
mov
cmp
xchg
sbb
cmps
retf
lods
inc
push
test
xchg
(bad)
inc
cmps
mov
(bad)
sub
(bad)
inc
mov
xchg
push
push
cli
cmp
mov
mov
test
mov
mov
inc
es
xchg
add
js
test
fs
jge
adc
icebp
sbb
push
(bad)
fisttp
jo
pushf
mov
cmp
and
add
pop
and
pop
dec
pop
jg
stos
out
pop
mov
retf
fstp
test
sbb
add
loopne
inc
add
add
add
or
add
xor
inc
and
push
inc
sub
add
mov
push
in
dec
fisub
mov
pop
dec
in
jmp
std
push
jne
push
outs
call
dec
mov
cmp
hlt
cmp
(bad)
fld
adc
loope
mov
jo
sub
or
dec
fs
inc
xchg
fwait
imul
add
cmp
add
mov
les
cwde
bound
sahf
pop
(bad)
movs
cmp
ret
add
push
test
sahf
lods
xchg
outs
sub
adc
stc
xchg
and
or
pop
test
and
pop
jl
mov
retf
jmp
or
add
jnp
mov
xchg
fimul
fadd
push
aad
xchg
addr16
aam
clc
push
nop
sbb
scas
not
mov
shl
pop
std
adc
mov
jmp
cmp
mov
lahf
pop
cmp
(bad)
lods
ins
xchg
pop
mov
lahf
sub
int3
add
and
push
cmps
and
pusha
sbb
jne
jb
push
pushf
out
add
inc
add
outs
inc
push
add
cwde
add
sbb
dec
(bad)
pop
xchg
push
shl
cmp
push
cmps
mov
add
aam
mov
in
fst
cmp
les
xor
jns
sub
add
xchg
jo
mov
out
adc
add
jmp
lahf
out
rol
call
mov
jecxz
mov
mov
lods
lock
sub
push
cmc
fisub
sub
(bad)
push
popf
ins
mov
jl
sub
add
dec
adc
add
push
aam
pop
sbb
inc
sysexit
sar
add
xchg
cmp
and
std
cmps
sub
inc
push
or
pushf
xor
aaa
sbb
leave
ins
mov
or
xchg
mov
inc
or
jnp
(bad)
mov
stos
call
fsubr
test
lods
mov
int
sbb
mov
sub
xor
sbb
icebp
cmp
rcr
add
std
add
xchg
inc
jmp
dec
stos
lds
cmp
jmp
xor
lds
test
imul
cld
sbb
pushf
pop
fldcw
sbb
inc
movs
add
imul
pop
mov
inc
mov
inc
outs
mov
jmp
fsub
cmps
dec
(bad)
cli
xchg
sub
sub
popaw
xor
ja
sbb
in
ss
loope
lods
shr
hlt
hlt
adc
cli
mov
push
xchg
ficom
add
xlat
in
lock
in
or
sub
aad
inc
out
in
pop
inc
or
ret
or
mov
jno
cmp
lds
xchg
mov
into
std
xchg
mov
mov
and
pop
push
add
and
dec
loopne
sub
adc
pop
adc
sub
pop
(bad)
sbb
rcl
xor
clc
or
ss
leave
inc
mov
test
xchg
dec
jnp
xchg
pushf
loope
sahf
hlt
cmp
fld
add
test
push
rcl
stos
xchg
jmp
inc
inc
and
xor
pop
cwde
stc
mov
fucomp
push
out
adc
add
cmc
push
jl
leave
and
lock
inc
das
leave
sub
lds
loopne
push
movs
xlat
jae
add
and
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
ret
ins
jbe
mov
dec
test
dec
jns
mov
xor
in
jle
push
movs
mov
pop
push
dec
inc
inc
out
clc
cld
cmp
dec
sbb
adc
adc
mov
dec
add
xchg
xchg
pop
ins
push
gs
inc
pop
mov
pushf
ins
pop
xchg
pop
jo
ins
outs
lahf
gs
sub
cmp
and
mov
rol
xchg
mov
adc
cmp
push
rcl
dec
xor
cmps
cmps
or
add
fisubr
outs
movs
pop
test
or
sub
fsubrp
jl
sti
pushf
clc
bound
cmc
jmp
lods
mov
jo
mov
iret
and
add
xchg
and
cwde
cs
mov
jb
pusha
mov
fmulp
test
mov
pusha
out
fisttp
cmc
outs
jmp
adc
inc
enter
xlat
mov
(bad)
cmp
push
adc
inc
or
push
mov
call
test
and
dec
inc
push
inc
mov
push
or
dec
sub
xor
and
sbb
xchg
mov
(bad)
xchg
sbb
nop
movs
dec
xchg
xor
fnstenv
jnp
in
pop
and
cmp
lods
sub
lahf
aaa
jno
jl
mov
mov
les
call
hlt
jb
fld
add
(bad)
and
cmp
mov
and
pop
pop
ss
inc
xchg
push
or
hlt
pop
push
fadd
jle
pop
(bad)
pop
xchg
cmp
sbb
xor
clc
in
std
sbb
mov
mov
inc
rcr
add
and
dec
sub
fnsave
and
leave
xor
pusha
imul
sub
ins
rcr
or
in
neg
push
dec
cmp
popa
and
rcl
dec
pusha
jo
bound
call
and
xor
popa
xchg
adc
sbb
out
and
jg
add
in
adc
push
xchg
fcomp
mov
sub
clc
pop
lea
adc
and
ja
mov
and
cmp
cdq
fisub
pop
(bad)
cld
add
aaa
icebp
and
aaa
fsubr
nop
inc
mov
dec
clc
lds
add
pop
mov
(bad)
out
(bad)
enter
adc
mov
pop
shl
lahf
push
mov
or
enter
or
nop
movs
push
je
mov
push
sub
rcr
rcl
mov
movs
les
cmp
lds
neg
sbb
jo
cmps
add
mov
inc
add
fmul
lods
cmps
aad
sub
or
or
mov
mov
je
adc
sub
push
push
stos
outs
mov
test
imul
rol
ret
mov
sbb
fdiv
data16
jno
sub
inc
lds
js
jno
xchg
mov
stc
mov
cmp
or
clc
(bad)
cmp
add
add
mov
push
and
rol
sbb
ror
stos
mov
in
je
sub
and
sbb
je
je
js
add
xor
das
enter
fidivr
jecxz
mov
xor
and
hlt
fnsave
inc
sbb
rol
mov
and
lock
std
inc
jb
mov
mov
fcom
mov
int3
push
mov
loopne
add
jo
xchg
or
lods
cli
jmp
add
mov
push
inc
fs
or
cmp
jmp
dec
pop
shl
dec
push
pusha
push
ds
pop
push
xor
add
cli
call
fld
sar
inc
ret
push
jle
mov
outs
mov
add
pop
sbb
fucomip
enter
shr
pop
ret
jmp
rol
out
fstp
and
movs
xor
adc
sti
sahf
jmp
aaa
cmp
popa
mov
enter
(bad)
cmp
cmp
rol
dec
cmp
ins
or
xchg
fdiv
inc
add
cmp
mov
sbb
call
push
jne
stos
sbb
popa
jl
adc
jmp
jge
mov
add
pop
xchg
ins
test
mov
clc
xchg
mov
add
lds
mov
or
fadd
ror
add
rol
sub
ss
lea
cmp
icebp
jmp
std
es
push
sub
cmp
mov
vmovupd
sbb
push
or
add
add
pop
xchg
lea
cmp
and
adc
jmp
xchg
inc
mov
mov
std
xchg
cmc
sbb
es
scas
enter
scas
pop
mov
movs
adc
mov
repnz
push
add
clc
(bad)
adc
into
mov
and
push
xor
push
cmp
mov
xchg
add
dec
cli
ror
inc
retf
movs
es
dec
xor
imul
xchg
xchg
sub
test
sbb
dec
jae
fimul
sub
mov
dec
inc
in
aaa
add
xor
add
mov
leave
outs
pop
adc
push
sbb
sub
icebp
or
aad
fs
cmps
push
jnp
dec
jg
xchg
lahf
cld
in
inc
inc
mov
pusha
xchg
(bad)
cmp
jno
adc
adc
sub
mov
xor
in
sub
sub
cdq
inc
push
xchg
cli
adc
ficom
adc
aas
or
ror
retf
push
test
int
enter
adc
hlt
push
sub
add
enter
mov
dec
lds
lods
jle
sbb
pop
jno
sub
xchg
movs
push
fs
sub
clc
daa
dec
daa
sti
iret
xchg
sahf
je
lds
sub
jne
fbld
inc
sbb
xor
add
fiadd
fadd
(bad)
js
add
ret
dec
call
sar
xor
add
sub
xor
pop
sub
retf
pop
inc
or
inc
adc
sub
js
push
mov
in
outs
mov
add
or
out
pop
adc
fbld
fimul
in
je
mov
add
sub
sbb
lods
ror
lock
fcom
mov
lods
test
pop
cmps
dec
xor
stos
inc
jnp
cmp
and
mov
mov
and
or
daa
add
cs
add
js
pop
loop
add
add
mov
xchg
mov
sub
xchg
pop
pop
mov
loopne
inc
xor
adc
sbb
adc
loop
imul
(bad)
lods
add
mov
add
call
add
jecxz
add
fnclex
sub
dec
add
or
jns
pushf
adc
mov
jle
jae
cmp
sbb
add
fucomip
push
add
data16
xor
add
in
dec
push
push
cwde
lahf
pop
push
push
aas
inc
imul
xor
stos
xchg
pop
mov
rol
adc
(bad)
(bad)
movs
add
cli
fdiv
fild
(bad)
cdq
add
sar
jge
out
rcr
ss
aas
inc
pusha
es
mov
pop
push
or
dec
inc
lock
mov
lock
jo
add
add
scas
add
or
es
push
aaa
inc
push
sbb
mov
xor
cs
je
push
gs
ret
fnstcw
rol
loopne
add
adc
pop
or
call
fdiv
push
xchg
loopne
(bad)
add
cmps
popf
mov
jnp
jecxz
jbe
xor
dec
out
adc
out
cmp
push
ret
sbb
mov
mov
rol
add
adc
outs
jmp
sbb
std
xchg
sbb
inc
ss
xchg
pusha
addr16
jecxz
loope
add
fst
lea
adc
dec
neg
or
sub
dec
mov
mov
iret
jns
mov
add
add
add
shl
push
sbb
add
cmc
adc
jle
push
xchg
mov
fcmove
mov
push
mov
inc
fucom
pop
sbb
out
js
mov
std
out
jae
sahf
add
push
jl
mov
int
add
inc
loop
mov
icebp
xchg
push
in
add
xor
xchg
test
jge
imul
int
sbb
mov
into
(bad)
xlat
pop
fnsave
cmp
in
inc
cmp
mov
cld
icebp
add
pusha
add
daa
inc
xchg
jbe
mov
adc
clc
pop
js
and
sbb
add
(bad)
pop
stc
push
add
sahf
ja
or
add
outs
fucom
jge
or
mov
imul
add
not
mov
mov
pop
int
pop
ret
add
push
xor
(bad)
idiv
xchg
js
adc
or
add
shl
cmp
add
mov
ficom
sub
ja
jmp
je
mov
adc
jp
push
jb
cmp
mov
mov
add
addr16
loopne
mov
(bad)
xlat
pop
xor
lock
jno
sbb
addr16
push
xchg
cmp
test
and
movs
pusha
sbb
cmp
dec
push
xchg
aad
xor
add
add
or
cmp
xchg
loopne
cli
add
sbb
dec
sar
push
cwde
cmps
jb
je
sub
or
add
les
hlt
aad
push
call
gs
mov
jg
sub
sbb
push
icebp
mov
add
pusha
xchg
lock
lock
aaa
popa
push
jo
mov
jbe
add
adc
cmp
sbb
fadd
xchg
jno
test
out
add
adc
movs
mov
xor
stc
cmps
add
add
rol
sub
add
nop
jb
push
movs
push
xor
add
sub
adc
ret
cmp
dec
and
js
fisttp
test
gs
mov
and
mov
cmps
(bad)
jmp
mov
add
push
sub
add
add
and
jns
popf
cmp
mov
or
mov
lds
pop
pusha
mov
sbb
adc
push
pop
test
cmps
mov
(bad)
es
mov
add
fadd
cmp
clc
mov
es
add
xor
xchg
add
add
or
xchg
mov
dec
jo
rcl
or
gs
(bad)
js
adc
enter
xchg
xor
cmp
and
mov
add
cli
(bad)
add
dec
xchg
movs
inc
jbe
call
cmp
sub
mov
xor
pusha
arpl
cmp
xchg
adc
add
xor
mov
add
pusha
and
es
cmp
(bad)
or
ins
bound
push
add
fld
mov
popa
or
adc
ja
mov
xchg
add
cdq
cdq
cmp
jne
rcl
dec
clc
ss
dec
cmp
cs
add
ss
xchg
sar
out
test
add
ja
inc
mov
in
cmp
xor
inc
push
enter
xchg
mov
xchg
xchg
bound
aam
add
ror
call
fld
xchg
data16
xchg
(bad)
xlat
jne
lds
(bad)
xchg
and
je
xor
xchg
mov
add
(bad)
cwd
mov
in
add
xor
es
mov
outs
or
add
mov
stc
cmps
mov
dec
sbb
adc
in
ja
(bad)
cwde
fwait
mov
sub
mov
nop
je
in
or
ins
sbb
jbe
mov
cmp
adc
lock
(bad)
xor
call
dec
fisub
(bad)
xchg
inc
add
jmp
jnp
xor
movs
xor
fsubr
pop
test
push
test
aam
xchg
or
leave
add
mov
cmp
xor
mov
(bad)
outs
push
ja
scas
or
jne
add
test
dec
mov
test
dec
jo
cmp
out
cmp
in
test
mov
outs
push
xor
jmp
test
inc
lock
or
add
mov
retfw
sub
push
xchg
xor
push
stc
xchg
pop
or
or
cmps
call
and
sbb
scas
jle
ja
cdq
or
lahf
cmp
inc
sbb
push
jnp
shl
jns
and
call
call
ret
pop
xchg
sub
popf
mov
cwde
out
fimul
mov
pusha
add
mov
loopne
jae
xchg
sub
sbb
test
push
jb
xchg
fs
add
mov
sbb
sbb
xchg
(bad)
sbb
mov
mov
adc
movs
sub
sbb
cmps
xchg
adc
inc
xor
xchg
imul
lahf
or
pop
gs
(bad)
jne
adc
mov
cmp
mov
and
xchg
sbb
xchg
xor
popa
pop
xchg
es
call
pusha
add
mov
shl
xchg
mov
and
push
mov
leave
mov
pop
cmp
mov
inc
sbb
lahf
dec
mov
dec
sbb
and
inc
mov
or
scas
sbb
adc
add
add
ins
scas
mov
inc
aaa
cmp
mov
mov
ja
push
cmc
ja
or
add
add
jns
xor
js
jp
daa
mov
pop
sbb
mov
jns
push
jmp
push
push
lock
arpl
dec
dec
mov
call
inc
jno
ja
mov
les
sbb
jnp
mov
xlat
mov
pop
add
mov
sbb
div
mov
xchg
mov
js
out
(bad)
imul
add
xor
imul
pop
sbb
addr16
cdq
das
mov
dec
mov
je
ret
mov
jmp
push
xor
push
mov
pop
mov
add
add
xlat
fcmovb
rcl
xor
in
rol
add
jg
mov
scas
push
jle
jmp
jo
sub
inc
mov
sub
push
add
pop
or
shl
mov
stos
mov
add
imul
popf
pusha
lods
js
enter
jne
cmp
(bad)
mov
cmp
add
nop
cmp
cwde
ins
mul
int3
jne
jl
dec
inc
dec
add
jmp
test
adc
push
mov
popf
(bad)
test
dec
cmps
xor
mov
xchg
out
mov
ret
cmps
mov
mov
xor
(bad)
lods
sbb
addr16
mov
inc
addr16
push
cmp
and
test
lahf
push
cld
inc
pop
dec
int3
cmp
ins
imul
fadd
leave
dec
push
mov
movs
sbb
cmp
fcmovnb
popa
cld
lods
ins
push
scas
enterw
mov
pop
shr
loope
les
sbb
lea
in
div
inc
inc
mov
retf
and
shl
test
xchg
jns
dec
add
pop
iret
idiv
movs
(bad)
sbb
and
iret
ss
pop
int3
popf
mov
fisttp
xchg
mov
call
inc
shr
xchg
mov
cmp
inc
stos
and
pushf
mov
dec
test
daa
dec
jbe
sar
sub
in
jg
inc
cld
mov
mov
ss
arpl
js
and
xchg
xor
jb
sbb
jl
add
lods
dec
retf
bound
and
shr
mov
pusha
inc
ret
dec
dec
cmp
rol
lea
dec
in
jge
lea
and
je
and
xor
stos
inc
outs
jl
fnsavew
mov
add
ror
leave
fsubr
add
sbb
jmp
push
jnp
and
add
(bad)
fs
arpl
out
push
call
in
fwait
sbb
test
sub
pop
mov
test
ss
idiv
jmp
gs
mov
in
(bad)
mov
mov
and
scas
mov
sub
add
(bad)
sbb
or
jns
std
fild
inc
int
xor
mov
mov
cmp
push
xor
pop
gs
mov
mov
mov
mov
and
mov
mov
sbb
popa
push
cli
pop
or
fs
mov
into
add
les
test
sub
test
push
jae
add
add
add
cmp
inc
sbb
jae
dec
inc
pushf
and
jle
mov
sub
pop
xchg
xor
loopne
xor
(bad)
(bad)
or
mov
test
leave
mov
scas
add
xlat
cmps
bswap
leave
sub
adc
add
jecxz
and
sbb
mov
cwde
jo
fdivr
hlt
mov
sub
inc
daa
add
add
add
mov
push
inc
add
add
daa
mov
call
add
add
jb
idiv
rol
cmp
cmp
lods
stc
fisubr
int
push
mov
out
mov
mov
(bad)
sub
xor
fwait
pop
xor
or
loopne
out
rcr
mov
in
push
add
adc
sbb
add
add
mov
icebp
scas
add
mov
xchg
je
stos
cmp
jnp
lock
lock
jae
popa
(bad)
ins
in
jno
in
jae
rcr
xlat
pop
mov
adc
out
sub
fiadd
fidiv
sbb
call
xchg
into
rol
dec
jmp
xor
fimul
and
add
inc
add
cmc
repz
add
lods
add
add
out
xchg
sbb
mov
out
push
(bad)
lock
push
add
add
lock
adc
push
jb
mov
(bad)
jmp
mov
(bad)
loop
out
pop
cld
(bad)
icebp
adc
stos
xlat
sbb
ja
cmp
data16
add
and
in
add
fild
sbb
sub
add
cmc
clc
inc
adc
cmp
jmp
add
dec
mov
add
js
pop
jae
sbb
lahf
add
or
dec
cdq
icebp
pop
in
mov
jge
jno
mov
retf
ret
inc
ret
add
mov
add
arpl
jg
out
(bad)
or
mov
adc
mov
seto
xor
dec
jns
xor
jge
sbb
scas
cli
cmc
xor
test
mov
sbb
sbb
add
(bad)
jbe
ss
jb
mov
inc
mov
push
cmps
adc
add
call
jmp
scas
or
inc
dec
in
mov
dec
int
sbb
adc
mov
std
in
mov
mov
movs
int
mov
inc
inc
dec
add
inc
add
inc
popa
shl
mov
mov
mov
movs
test
enter
and
call
and
mov
adc
jecxz
arpl
popa
and
loopne
dec
jmp
cmps
or
into
scas
push
fsubr
mov
in
std
lods
das
mov
adc
cmp
lock
call
adc
dec
movs
mov
or
cmc
push
scas
or
sbb
xchg
push
push
pop
fidivr
add
adc
push
ins
xor
lds
popf
sbb
dec
xchg
imul
clc
xchg
repnz
jmp
pop
mov
mov
test
or
je
ja
push
mov
mov
popa
test
xor
pop
xor
lods
sbb
sub
in
ret
cmp
jecxz
add
jo
inc
inc
xchg
and
or
cmp
and
push
sbb
nop
jp
aaa
dec
stos
cmp
repz
xor
pushf
jns
sti
(bad)
and
sbb
adc
lock
jbe
ret
mov
and
test
das
inc
push
mov
push
add
push
bound
jmp
add
mov
add
js
arpl
or
mov
movs
cmp
mov
push
test
lahf
inc
pop
jae
add
push
mov
add
dec
shl
and
push
push
loopne
add
mov
cdq
jecxz
pop
mov
xchg
and
jp
mov
jmp
cmc
ror
or
ins
xor
pusha
mov
or
daa
adc
mov
test
loop
iret
mov
and
loopne
xchg
enter
out
movs
push
inc
mov
ins
dec
shl
aas
cmp
mov
and
pop
sub
cmp
push
and
inc
cwde
mov
call
mov
test
and
inc
mov
mov
test
or
sbb
push
xchg
mov
cmps
mov
dec
xchg
and
jecxz
push
sbb
and
push
adc
and
jmp
sbb
jmp
es
fs
retf
out
add
or
loope
adc
icebp
and
pop
add
or
popa
(bad)
leave
inc
push
shr
adc
rol
sbb
cmp
leave
push
pop
stos
jecxz
jne
mov
jno
add
lods
out
shl
xchg
or
mov
cmp
and
imul
enter
cdq
xchg
inc
test
mov
es
stos
mov
aam
mov
add
or
fs
sub
add
aad
adc
loopne
sbb
call
xchg
adc
pop
jno
push
arpl
rol
mov
jp
mov
imul
out
cwde
pop
inc
adc
and
jb
push
retf
dec
mov
inc
add
ret
add
and
mov
add
mov
xor
xchg
xchg
sub
jno
sub
in
adc
repz
pusha
repnz
in
push
mov
arpl
push
gs
lock
lds
dec
cmps
lods
add
rcl
jno
jmp
sub
(bad)
pop
sbb
push
rol
or
cmp
and
daa
push
sbb
(bad)
xchg
inc
in
cmps
xchg
aaa
adc
ficom
fdivrp
jmp
test
cmp
push
jle
or
les
mov
push
add
call
retf
mov
adc
rcr
inc
jne
ja
arpl
mov
add
adc
inc
pop
jp
push
mov
mov
push
fcmovbe
rcl
sub
add
pop
sti
es
adc
test
adc
enter
mov
sbb
test
out
lds
sub
xor
nop
add
or
add
jle
test
cli
loopne
adc
pop
push
adc
inc
add
adc
push
and
mov
popa
jecxz
cmps
das
pusha
jl
and
arpl
(bad)
mov
and
mov
movs
rol
iret
add
add
mov
lds
test
fcom
out
sub
sbb
es
xchg
cmp
movs
mov
add
test
inc
std
call
stos
add
pop
pushf
sbb
or
mov
or
or
or
iret
cwde
int
movs
scas
clc
and
ror
dec
les
cmp
push
add
adc
sub
pusha
or
sub
adc
and
es
jbe
adc
ins
sbb
fs
sub
mov
scas
adc
push
and
jne
loope
pusha
(bad)
cmp
adc
sbb
adc
inc
add
sub
push
fadd
setb
mov
adc
pop
or
push
xor
int
push
push
xor
dec
and
fadd
xor
call
je
outs
add
or
pop
inc
mov
push
or
cmps
inc
and
inc
fs
movs
and
(bad)
js
iret
dec
push
pop
das
leave
and
dec
dec
ds
cwde
xchg
xchg
add
mov
sbb
dec
xchg
cmps
pop
xchg
push
cmp
push
test
mov
fistp
push
dec
in
mov
pop
sbb
mov
test
and
mov
mov
sub
pushf
scas
push
enter
xor
pusha
fimul
xchg
outs
pusha
add
dec
add
cs
dec
mov
jmp
sub
stos
sbb
cmp
dec
cmp
add
jl
popf
pshufw
cmps
dec
(bad)
add
ret
imul
rcr
in
jg
mov
adc
dec
dec
or
push
add
adc
jmp
mov
in
ror
add
add
out
or
cld
xchg
mov
sub
cmp
fidivr
dec
mov
dec
out
das
sub
adc
add
shr
jle
mov
mov
loopne
adc
cmp
mov
fisub
add
add
sbb
test
push
jb
adc
push
jno
jne
xlat
or
sbb
pop
pusha
ins
add
push
add
je
jecxz
clc
cwde
popf
push
into
movs
mov
jmp
sbb
inc
iret
popa
(bad)
movs
push
add
inc
or
mov
popa
xor
mov
cdq
call
fisttp
imul
call
mov
lahf
sub
jnp
cmp
(bad)
js
jg
jae
inc
mov
imul
or
cmc
mov
mov
cmp
add
jle
or
repz
xor
add
and
mov
mov
sbb
mov
pop
imul
add
enter
dec
push
pop
je
mov
out
inc
fistp
mov
push
nop
sbb
adc
adc
or
xlat
push
mov
mov
cmp
cmp
aad
pop
xchg
xchg
sub
cmps
cmp
movs
icebp
clc
cs
cmp
out
(bad)
mov
rol
mov
scas
mov
cmp
repz
cmp
push
cs
adc
add
ja
mov
ret
in
xchg
jmp
lea
pop
jl
push
adc
into
mov
movs
fadd
or
lods
out
pushf
mov
or
xor
aaa
mov
xor
out
push
mov
add
lods
cmp
adc
or
dec
xchg
push
xchg
xchg
push
in
mov
sbb
xor
int3
push
addr16
lea
dec
ins
xchg
xlat
jno
ss
call
mov
pop
push
pop
in
cmp
add
cwde
(bad)
pop
test
or
adc
pop
dec
(bad)
or
push
add
xchg
cmp
sbb
jns
mov
xchg
iret
and
inc
cmps
arpl
mov
popf
aam
inc
dec
scas
mov
sbb
dec
popf
jecxz
mov
mov
ins
imul
and
inc
or
xor
mov
cmp
mov
sub
add
(bad)
pusha
test
repnz
int3
cwde
scas
outs
add
inc
pop
push
rcl
pop
push
push
cmp
pushf
mov
in
jmp
dec
cmps
mov
jp
scas
adc
add
add
push
sub
dec
outs
add
inc
outs
inc
xor
cld
mov
and
or
jecxz
xor
lods
fwait
mov
add
in
cmp
and
inc
nop
es
add
xor
add
xchg
test
out
(bad)
push
cmc
inc
nop
push
jp
push
mov
sbb
or
mov
xchg
dec
mov
dec
sub
push
dec
push
rol
cmp
aad
mov
aam
mov
out
pop
and
fimul
and
jmp
sub
jle
stc
pop
jo
dec
xchg
pop
and
clc
dec
fcmovb
adc
xor
lds
rcl
lock
(bad)
sub
rol
imul
movs
mov
add
sti
es
and
cmps
push
and
jle
test
mov
mov
push
push
rcl
pop
cmps
lock
pusha
fcmovb
ret
stos
jmp
sbb
fcmove
lods
pushf
xchg
in
outs
in
leave
add
loopne
xor
xchg
jns
mov
nop
(bad)
clc
out
xchg
(bad)
iret
jb
pop
mov
js
and
loop
pop
ins
xchg
push
or
sbb
xor
mov
into
icebp
and
stc
(bad)
xchg
add
(bad)
xchg
inc
inc
jmp
sub
xchg
adc
in
out
push
and
fsubr
inc
and
in
mov
out
cs
or
inc
jbe
(bad)
sub
sbb
inc
add
lock
push
setp
push
jmp
xor
or
mov
and
push
shl
inc
shl
lods
push
adc
add
mov
lds
ret
push
neg
cmps
out
faddp
je
mov
inc
mov
add
call
adc
and
loopne
nop
xor
fisttp
and
cs
fadd
and
lds
push
add
push
(bad)
adc
jmp
adc
mov
adc
cli
or
(bad)
imul
cmp
ret
sub
xor
push
movs
add
jp
aaa
jnp
into
sbb
jbe
ret
sbb
mov
mov
push
inc
or
push
jecxz
ds
sub
(bad)
push
xor
int
sub
jae
es
or
xor
push
pusha
add
or
push
mov
cmp
pusha
push
les
hlt
or
cmp
add
inc
jnp
add
pusha
add
add
test
cwde
sub
add
add
mov
in
push
call
(bad)
imul
dec
mov
mov
stos
ins
add
adc
into
shl
add
in
cmp
movs
sub
sar
popf
cli
arpl
add
inc
jge
mov
mov
or
add
and
add
add
out
pop
mov
inc
in
xor
xchg
and
pusha
push
sahf
and
push
and
inc
xchg
cmp
jb
xor
fisttp
push
dec
sbb
aaa
xlat
add
xchg
push
add
jle
dec
jns
add
add
rol
loope
jp
xchg
es
pop
push
je
jae
mov
or
push
push
or
repz
pop
and
pop
inc
add
add
xchg
push
sbb
inc
aas
daa
push
sbb
aad
or
add
add
xchg
add
jae
push
loopne
out
xor
push
add
xor
dec
add
mov
stos
inc
add
and
xor
adc
hlt
pop
sbb
into
jae
je
mov
xor
xor
out
je
dec
aaa
lds
or
fadd
inc
add
add
add
retf
sub
pop
ds
nop
xchg
in
inc
push
inc
ror
mov
pusha
push
ret
add
inc
xlat
loop
add
or
adc
cmp
inc
add
inc
dec
cmp
and
mov
pop
loopne
jl
push
adc
add
inc
outs
add
inc
fld
pop
pop
add
test
and
fldenv
lock
mov
and
jg
sub
loopne
je
push
and
cld
addr16
push
adc
and
jbe
adc
mov
push
pusha
add
push
dec
sub
add
hlt
aaa
jnp
add
inc
push
movs
and
xchg
pop
test
push
push
ret
adc
dec
(bad)
mov
push
cmc
or
xchg
pushf
inc
push
mov
sbb
je
or
add
add
jl
aas
shl
pusha
add
shl
push
sub
js
movs
daa
out
adc
add
imul
push
dec
sar
jae
ret
adc
and
bound
push
jno
stos
or
inc
push
push
arpl
dec
or
adc
add
xlat
ss
inc
aaa
je
test
shl
ja
mov
add
mov
push
pop
cmp
mul
daa
loopne
jmp
or
neg
je
sub
add
jns
push
xchg
cmp
cmp
push
rcl
icebp
aam
xor
add
sub
mov
xor
sub
call
imul
jbe
pavgb
and
in
and
xlat
inc
ins
or
mov
jne
jg
inc
xor
add
clc
add
add
add
push
jp
mov
lahf
mov
sub
and
add
push
leave
push
xchg
pop
xor
xor
and
loop
clc
stos
xor
das
adc
mov
jge
fcom
mov
push
(bad)
pop
sub
jle
add
cli
jmp
xchg
getsec
mov
sbb
push
and
push
ins
aad
mov
add
ins
sbb
sbb
aad
mov
adc
add
add
mov
add
imul
dec
and
hlt
cmp
inc
add
xor
popa
aam
mov
movs
in
outs
fcom
mov
xlat
(bad)
jae
ja
(bad)
sbb
add
mov
jo
and
repz
call
mov
and
xchg
dec
xor
adc
adc
ja
lock
jns
in
add
mov
sbb
nop
in
popa
dec
mov
add
or
je
(bad)
jae
(bad)
inc
jno
jle
add
and
out
adc
outs
xor
and
push
in
inc
sbb
in
les
stos
mov
arpl
sbb
jae
repz
jmp
xlat
or
inc
or
adc
mov
xor
push
jge
jp
cdq
xchg
out
mov
mov
repz
sub
and
bound
sub
adc
out
cwde
jo
cdq
fwait
cmp
push
jmp
or
jge
fs
bound
ja
icebp
xchg
sub
loope
test
rcl
fs
pop
mov
pop
mov
ficomp
sahf
jns
gs
test
cwde
ret
ins
ficom
outs
dec
adc
mov
setbe
mov
mov
adc
xchg
adc
push
cmps
adc
sbb
jb
and
repnz
inc
push
xor
aaa
adc
ror
jns
mov
scas
push
and
test
inc
and
and
mov
push
adc
push
aad
sub
dec
push
or
push
fcom
and
or
arpl
mov
iret
mov
scas
(bad)
and
cmp
sar
sbb
dec
(bad)
mov
cmp
test
mov
loop
sti
cwde
xor
cdq
imul
sub
in
push
and
pop
bound
sbb
lock
lods
and
xchg
sbb
inc
mov
dec
fisub
push
jmp
push
inc
(bad)
or
stc
adc
into
sub
arpl
xchg
adc
sub
pop
add
rol
mov
and
add
fsub
ret
adc
mov
dec
sbb
sbb
mov
mov
jb
inc
scas
movs
mov
loop
mov
mov
bound
add
mov
imul
in
mov
scas
daa
sub
sub
pop
pmulhw
push
add
add
pop
sbb
inc
add
fadd
sbb
enter
lea
jecxz
movs
or
fdiv
cs
enter
mov
enter
cld
inc
cmp
adc
sahf
ret
(bad)
sbb
cwde
or
scas
cdq
adc
bound
sbb
jae
or
lds
lahf
in
into
mov
pop
push
inc
adc
adc
push
idiv
out
push
inc
arpl
mov
lahf
pop
fucomi
or
add
adc
sub
fidiv
(bad)
jae
mov
out
sti
retf
pushf
int3
lds
ja
add
test
and
xchg
or
imul
ss
iret
sub
push
call
dec
add
in
xlat
leave
fwait
cwde
test
mov
fwait
inc
es
pusha
js
sar
lds
(bad)
mov
xchg
mov
iret
aad
(bad)
cmc
or
(bad)
mov
add
je
stos
cmp
aaa
push
movs
add
(bad)
and
fdivr
mov
pop
(bad)
sub
xchg
xor
scas
fsincos
dec
add
inc
xor
dec
or
call
scas
jns
and
std
push
sbb
or
mov
add
mov
inc
mov
pop
fimul
(bad)
push
aaa
inc
or
outs
push
dec
pop
addr16
ins
lahf
(bad)
sbb
add
mov
cmps
xor
push
out
jmp
lds
dec
out
ror
mov
cmp
fild
jae
jmp
push
repz
xor
lahf
ss
or
jmp
je
xor
aaa
(bad)
ins
fisubr
pushf
(bad)
repnz
daa
adc
mov
fild
mov
fadd
fwait
jmp
or
retf
out
push
iret
hlt
retf
and
xor
pop
cmp
cmp
sbb
loope
icebp
cmps
fs
dec
pop
aam
out
mov
ficomp
bnd
push
mov
pop
icebp
jp
aam
and
mov
inc
lods
arpl
inc
push
sbb
retf
inc
pop
pop
xchg
pop
jle
mov
repz
imul
pushf
xchg
cmp
ins
pop
outs
out
mov
pop
test
cmp
push
xchg
shl
adc
push
test
in
outs
addr16
or
cmp
mov
aad
jb
imul
add
dec
sbb
push
dec
cwde
xor
mov
pop
pusha
pushw
dec
jbe
mov
call
cmps
dec
dec
sbb
div
dec
pop
ins
ins
or
(bad)
mov
seta
adc
rcl
or
clc
or
push
stos
nop
cmp
pop
add
sbb
xor
loopne
jo
call
lods
sub
add
rcr
imul
add
and
inc
xor
adc
adc
and
mov
outs
mov
dec
jns
mov
scas
push
cmp
clc
mov
ins
sahf
and
sub
xor
repnz
inc
sub
popa
dec
xchg
push
sbb
rol
lds
fild
dec
sbb
or
jp
and
inc
movs
scas
int3
lods
mov
shl
inc
call
test
dec
mov
test
movs
fimul
ins
pop
mov
or
inc
mov
lods
cwde
dec
push
cmp
dec
xchg
das
dec
jo
pusha
pusha
sbb
sbb
lock
fcom
mov
sbb
mov
pop
mov
cmp
xchg
mov
lods
adc
sub
fidiv
xchg
in
sub
or
xchg
inc
nop
stos
cmc
sub
(bad)
ins
inc
cs
jge
mov
mov
(bad)
or
dec
fadd
xor
shl
adc
lods
inc
jg
daa
add
loope
lds
add
dec
push
scas
ret
jmp
cmp
gs
sub
add
mov
dec
sub
movs
call
popa
enter
jno
push
push
jbe
pop
pop
sub
cs
cld
jb
je
shl
cmp
adc
sar
dec
dec
pop
pop
xchg
(bad)
(bad)
jns
pusha
jbe
xor
adc
or
data16
sub
inc
jle
int3
ror
xchg
or
fwait
sbb
pop
inc
fs
test
imul
test
push
out
mov
xchg
fadd
pop
and
and
jp
adc
or
mov
or
nop
mov
sbb
push
mov
sbb
pushf
add
ret
or
inc
vandps
adc
mov
call
inc
sbb
test
mov
enter
addr16
inc
mov
lock
pop
pusha
inc
pop
fadd
jle
call
pop
sub
xor
in
shl
adc
in
pop
sub
pop
test
and
or
pop
nop
nop
or
aam
sbb
cmp
cmps
cs
lahf
sub
imul
into
pop
or
dec
dec
rol
pop
adc
xor
mov
dec
stc
jno
test
mov
dec
and
jmp
inc
and
cmp
pusha
fbld
push
das
or
jo
ret
lods
(bad)
in
add
pop
cs
mov
adc
pop
popa
xchg
cwde
in
lds
xor
in
jo
neg
xchg
jno
loop
mov
sub
in
ja
sbb
jl
or
addr16
ins
jnp
sbb
loopne
cmps
dec
leave
loope
rol
dec
and
enter
je
std
xor
loop
push
mov
pop
mov
pusha
sahf
cmp
dec
cmp
(bad)
dec
sub
xchg
popa
add
bound
cmp
pop
mov
cld
ficom
push
mov
cmp
mov
int
aaa
xchg
mov
mov
jge
inc
ss
jno
outs
adc
lods
sahf
shr
lock
pusha
xchg
dec
ds
in
mov
inc
jl
push
out
popf
cmc
cmp
add
lods
(bad)
push
and
stos
pop
mov
adc
and
cdq
cld
imul
jg
adc
add
es
scas
add
add
in
lods
jne
clc
int3
pop
push
mov
sbb
push
fcmovbe
in
mov
mov
lds
cmp
hlt
mov
nop
or
adc
xchg
push
cld
shl
or
or
pop
test
lock
sub
mov
and
jae
pop
and
dec
pop
cmp
jecxz
mov
shl
fsub
jb
jp
and
push
das
mov
movs
sbb
shl
lea
lock
xlat
pop
mov
sbb
(bad)
cmps
pushf
mov
push
loope
xchg
(bad)
pusha
adc
loope
jecxz
push
popa
into
mov
cmp
rol
lea
or
mov
adc
fisub
sbb
jb
or
retf
repnz
mov
mov
jmp
test
(bad)
inc
inc
retf
push
loop
cmp
push
dec
sbb
jo
sbb
dec
call
inc
cdq
inc
push
cmp
dec
cmps
lods
loopne
push
test
nop
scas
sbb
ret
enter
add
mov
and
and
arpl
or
repnz
addr16
add
xchg
dec
push
sar
repnz
dec
sbb
xor
xor
xor
in
and
mov
xor
push
add
xchg
push
and
lock
sbb
adc
mov
dec
xchg
add
(bad)
pusha
pop
and
add
sbb
in
xor
push
push
dec
arpl
sbb
mov
fstp
push
movs
and
and
clc
mov
das
mov
xchg
inc
add
(bad)
enter
xor
out
sar
adc
add
ins
dec
sbb
ror
ret
sbb
inc
mov
jo
inc
sub
cmc
sub
mov
nop
xchg
add
push
push
xchg
xor
lods
adc
xchg
push
xchg
cwde
xchg
cwde
nop
inc
xor
ret
push
dec
mov
mov
push
jp
dec
and
aam
fnstenv
test
stos
push
xor
pop
push
cmp
xor
adc
stos
aad
jbe
dec
mov
push
test
aas
shr
add
mov
mov
add
jp
movs
jl
push
mov
mov
adc
in
in
scas
adc
pop
(bad)
test
pop
cmps
ds
imul
(bad)
adc
fsub
out
jno
call
(bad)
xor
xor
adc
addr16
sub
in
bound
pop
add
ret
sbb
imul
push
xor
mov
jmp
jns
iret
xchg
or
std
(bad)
in
push
sbb
mov
inc
shl
xor
adc
rol
rcl
std
mov
js
pop
repnz
and
js
aas
stc
aam
data16
push
js
inc
adc
in
(bad)
jp
inc
push
stos
leave
lds
es
dec
mov
stos
aaa
cmps
loop
cs
sub
jl
jnp
mov
sti
ins
mov
push
out
mov
dec
adc
mov
xor
mov
mov
xchg
enter
dec
xchg
inc
shr
movs
fsub
push
loope
cmps
lods
test
les
inc
xor
fnstenv
pop
je
pop
jl
xchg
shl
or
xchg
fisubr
jecxz
push
adc
xchg
loopne
xor
scas
(bad)
cmp
out
rol
jg
dec
cmps
call
loope
scas
mov
push
add
mov
call
push
sbb
pop
mov
movs
dec
inc
dec
inc
ret
mov
add
pusha
inc
rcr
push
pop
mov
sbb
add
mov
xor
dec
jno
test
dec
xor
dec
retf
out
sbb
js
cvtps2pd
ret
call
add
je
dec
and
and
aas
adc
pusha
or
or
add
add
inc
dec
pop
cdq
push
or
xchg
std
int3
jge
fsubrp
dec
mov
sbb
loopne
mov
rcr
or
cmp
call
jecxz
aad
add
xor
ss
dec
jl
test
in
dec
out
imul
addr16
jecxz
add
stos
and
or
test
sub
sbb
pusha
sahf
xchg
shl
and
xchg
ror
mov
adc
scas
(bad)
mov
call
mov
push
jge
mov
xchg
in
fsub
mov
sahf
stos
enter
lods
xchg
fscale
out
shl
pop
dec
and
cmps
jmp
std
push
mov
fist
inc
fistp
cmovnp
cmp
jno
pop
scas
mov
sub
(bad)
mov
or
test
sub
add
and
iret
and
adc
aad
mov
(bad)
in
adc
sbb
rcl
and
or
adc
cmp
xlat
mov
sbb
cmp
sbb
rol
daa
mov
sbb
out
cwde
sbb
adc
int
aas
ins
shr
inc
sub
inc
pop
pusha
inc
pop
les
add
lahf
adc
inc
adc
adc
pop
fistp
xchg
pop
adc
fwait
test
mov
or
jo
cmps
cmp
pushf
fld
sbb
nop
lds
test
push
test
int3
in
xchg
push
pop
sbb
repnz
fcomip
ins
add
in
(bad)
sub
sbb
pop
inc
and
sbb
xchg
lods
pop
pop
xchg
call
and
push
xchg
pop
adc
push
xchg
mov
popf
sbb
test
lock
int3
mov
mov
xchg
or
inc
fadd
jb
cs
mov
sbb
sbb
fild
test
lds
adc
mov
fimul
xor
cmp
dec
lahf
mov
and
cwde
inc
ins
shl
inc
rcr
jl
or
xchg
sub
call
mov
xor
loopne
push
sbb
sub
fistp
nop
mov
cdq
and
cmp
inc
pop
adc
enter
mov
xchg
dec
test
adc
test
in
in
lea
loope
push
call
inc
and
cs
jae
add
and
ss
sbb
and
cmc
int
add
jmp
adc
lods
push
or
xchg
push
jne
pop
imul
push
les
or
out
or
add
inc
test
fst
rol
ror
add
mov
ret
add
push
sbb
ret
and
int
pop
ss
pop
jmp
pop
cmp
cmps
mov
shl
cmc
xor
adc
fld
call
pop
push
or
dec
mov
dec
jbe
or
add
in
and
repnz
mov
in
repnz
xchg
push
jmp
adc
push
inc
pop
push
fstp
aam
inc
or
mov
and
fst
shl
xor
jne
movs
sub
sub
fisub
gs
jbe
or
add
pop
loop
add
gs
(bad)
push
sbb
and
(bad)
cmps
push
sbb
in
inc
jb
popa
ds
inc
gs
retf
out
pop
pop
int
arpl
adc
and
pop
loop
aaa
leave
aad
inc
out
int3
sar
sbb
add
add
pusha
inc
pop
retf
mov
jae
and
or
popa
or
test
lds
mov
mov
inc
out
sub
inc
mov
pop
ret
call
clc
or
sbb
je
adc
pushf
add
pop
pop
jo
jbe
retf
add
lock
mov
jns
inc
ja
add
xchg
adc
or
push
inc
inc
add
psubsb
xchg
pop
add
out
repnz
outs
jmp
leave
mov
jo
push
stc
sub
adc
push
and
adc
push
xchg
dec
push
cmps
add
mov
call
jb
pop
jo
xchg
or
rol
sub
je
lea
retf
test
add
out
(bad)
lea
fld
ds
jle
add
or
mov
retf
or
mov
ins
push
xchg
mov
out
or
add
sbb
xchg
(bad)
xchg
ret
add
pop
pop
sub
push
test
retf
inc
inc
xchg
or
rol
dec
jp
rcl
jns
add
in
ficomp
xchg
or
xchg
loopne
lods
(bad)
sub
and
dec
(bad)
cli
push
adc
dec
(bad)
enter
or
or
outs
push
cmp
aam
sub
gs
add
add
mov
xlat
sbb
xor
jb
out
pusha
jmp
add
data16
inc
call
fldcw
pop
jne
stos
pop
stc
add
int3
add
ffree
popa
adc
push
jmp
jmp
stos
mov
xchg
add
jo
dec
cmp
sub
or
add
add
push
pop
push
movs
pop
dec
and
mov
sahf
or
les
(bad)
stc
cmps
jle
jmp
cmp
push
mov
fwait
call
xor
or
or
shl
ds
fild
mov
les
add
rcr
push
ja
add
add
push
sub
in
outs
lods
in
sub
push
cld
adc
jmp
jp
jmp
jmp
mov
rcl
fldcw
ins
push
add
cwde
aam
iret
test
daa
sar
and
arpl
xchg
movs
xor
ins
int
and
pop
inc
push
sub
loope
leave
mov
pop
in
dec
adc
movs
xchg
repnz
xlat
jmp
sub
ret
cmps
sub
lods
mov
sub
jle
popf
push
in
nop
sub
sub
push
out
xchg
mov
icebp
inc
outs
ret
mov
in
inc
xor
xchg
and
inc
add
push
stos
jmp
add
push
add
lock
sbb
test
pop
shr
in
test
and
ins
into
xor
out
loop
add
sub
loope
mov
mov
les
clc
add
inc
(bad)
and
mov
(bad)
xor
sub
fisttp
sar
js
inc
add
popf
ins
add
pusha
xchg
call
or
add
and
add
lods
call
cdq
sbb
add
outs
stos
dec
xchg
sub
or
repnz
test
inc
mov
mov
push
mov
dec
enter
or
push
lods
inc
jnp
iret
pop
sbb
in
add
test
add
shl
jmp
add
pop
push
add
push
mov
pop
xchg
stc
ins
xchg
jns
outs
xchg
push
push
fist
repz
repnz
into
pop
int
mov
out
dec
and
add
add
add
add
jmp
rcr
jb
xchg
push
add
jmp
mov
icebp
mov
in
sbb
mov
loope
lea
test
loope
push
and
mov
(bad)
hlt
pop
jmp
adc
popf
xchg
inc
imul
icebp
int
mov
xchg
adc
and
lahf
cmp
jmp
dec
pop
xchg
sub
jo
push
stos
push
and
fwait
inc
fwait
loop
pusha
push
in
repnz
iret
dec
xchg
xor
xchg
test
ds
or
or
pop
pop
lahf
dec
mov
mov
nop
aad
and
mov
xor
or
or
add
fcmove
push
pop
mov
fldenv
movs
int3
pop
fsubr
jl
ins
int3
(bad)
icebp
mov
adc
out
pop
imul
sahf
or
pushf
sub
sbb
pop
xor
jg
mov
retf
fisttp
cmp
and
and
dec
dec
xchg
mov
sbb
pop
movs
push
shl
mov
cmp
xchg
or
inc
mov
call
out
sbb
iret
(bad)
call
adc
adc
sbb
cmps
push
adc
cs
mov
and
int
push
mov
cmp
pusha
sub
cmp
shl
push
cwde
xchg
pop
cwde
adc
xor
push
jno
inc
cmps
push
xchg
cmp
jmp
add
jmp
cs
in
push
push
pop
cli
repnz
add
jo
mov
inc
and
inc
(bad)
rol
add
hlt
mov
cld
and
add
ret
into
xchg
inc
xor
not
mov
adc
stos
nop
xlat
shl
mov
mov
xor
inc
js
cdq
inc
popa
push
call
(bad)
psubsb
inc
inc
setg
cmps
sub
cli
jae
mov
xchg
pushf
inc
mov
and
mov
je
inc
imul
pop
adc
outs
xor
test
cmp
push
sub
xchg
lods
mov
test
xor
jl
add
popf
scas
test
inc
sub
adc
jae
loope
ins
loope
inc
cmp
adc
repz
sub
lods
out
cli
lock
sbb
and
lahf
les
sub
cmps
cmp
outs
clc
out
sub
aas
test
push
popf
add
aas
call
(bad)
pop
pop
xchg
dec
aaa
cmp
inc
call
sbb
in
js
cli
mov
loopne
cmp
shl
push
fild
ret
clc
or
sbb
sub
add
imul
mov
and
test
pop
push
addr16
arpl
scas
xchg
jmp
sub
aad
mov
sub
movs
jnp
sbb
push
mov
popa
add
stos
enter
xchg
cld
dec
and
jne
xlat
aad
data16
xlat
add
inc
mov
xchg
cwde
jmp
xchg
stos
mov
stos
lock
cmp
cmp
(bad)
ins
lea
lods
imul
add
adc
aas
add
add
add
add
add
push
inc
loop
sub
(bad)
ret
ins
cmp
lea
movs
mov
nop
int
adc
daa
into
fidiv
iret
ffreep
es
fstp
out
sti
(bad)
jge
add
adc
sbb
sbb
xor
xor
adc
sbb
sbb
movs
jns
bound
ins
xor
popa
add
stos
xor
stos
bound
pop
outs
pop
je
outs
data16
mov
lods
addr16
(bad)
je
xor
xor
mov
sbb
fcomp
inc
inc
xchg
xor
in
out
lahf
push
add
mov
push
ret
hlt
into
idiv
imul
or
xor
push
sbb
call
data16
sub
and
(bad)
sbb
jne
mov
loope
cmp
fidivr
sub
shl
rol
dec
mov
arpl
cmp
out
mov
jl
adc
mov
in
mov
and
sar
dec
scas
pusha
shr
mov
cmp
cmps
shr
xchg
test
test
call
jns
jb
or
mov
scas
clc
mov
shr
loop
fxch
jns
gs
sahf
pop
test
(bad)
daa
(bad)
(bad)
ins
call
jl
push
in
outs
shl
daa
push
cmps
mov
loop
lea
stos
xchg
sub
movs
loopne
ins
pop
into
jl
xchg
inc
fsubr
jle
ret
icebp
jmp
mov
scas
sbb
lods
cli
sbb
fsubr
nop
rcr
lods
test
cmp
gs
and
inc
or
push
mov
jl
rol
add
add
sbb
int
retf
mov
lods
es
and
adc
adc
dec
sbb
cmps
call
jl
pop
mov
push
jge
inc
add
fadd
mov
cmp
dec
inc
mov
or
lock
push
add
sbb
jmp
lds
push
push
int
pop
mov
mov
dec
retf
cwde
pop
mov
hlt
mov
xor
dec
inc
mov
xchg
shl
push
inc
ret
popf
js
dec
ret
jl
pushf
cwde
pop
xchg
cwde
popf
or
push
imul
cwde
cdq
dec
mov
xchg
cwde
jne
and
push
cli
fcom
push
mov
das
out
cmps
mov
dec
add
clc
stc
cmps
jne
or
sahf
bound
loope
test
sbb
inc
cwde
sub
cdq
sahf
sub
mov
pop
dec
in
sub
pop
ror
lods
and
add
mov
push
fucomi
mov
cwde
call
push
add
jns
mov
dec
pop
jp
xor
fisttp
enter
mov
imul
outs
mov
sub
lock
(bad)
imul
pop
push
pop
stos
mov
or
stos
ret
stos
inc
add
sahf
cmp
stc
push
jns
arpl
in
jecxz
or
test
jns
push
dec
mov
cmp
jmp
out
mov
int
and
ret
sub
hlt
rcl
inc
mov
ins
icebp
les
cmp
mov
ja
je
cmp
xchg
(bad)
mov
int3
bound
xchg
or
scas
jo
fcmovnbe
scas
jo
shl
sub
add
xchg
mov
and
add
xchg
pop
xchg
jge
jns
push
dec
popf
sub
cmp
add
jge
into
add
movs
jmp
pop
inc
fadd
lods
jp
dec
fistp
jmp
or
cmps
pushf
pop
dec
and
jbe
fst
ss
mov
cwde
push
push
jnp
in
add
scas
xor
mov
mov
fdiv
pop
ret
jmp
imul
lods
das
int
loope
lock
push
dec
aad
sub
div
call
push
cmp
mov
lahf
mov
mov
jg
rol
dec
loopne
push
xchg
mov
andps
or
scas
mov
cs
mov
xlat
mov
cmp
enter
iret
add
rol
push
dec
or
xor
out
jno
jnp
imul
(bad)
lods
adc
push
arpl
dec
rcl
mov
inc
pushf
mov
adc
mov
or
pusha
je
jo
fmul
ret
add
lock
add
cmc
shr
xor
push
popa
adc
inc
in
ss
in
inc
xor
int
xor
das
pusha
(bad)
and
push
xchg
xor
adc
mov
ret
mov
add
fs
bound
iret
mov
add
sti
mov
leave
je
adc
inc
mov
jno
adc
pop
dec
clc
(bad)
push
xchg
rol
mov
add
cmp
pop
test
jo
gs
in
not
add
push
es
mov
push
fwait
loope
push
push
add
sub
dec
push
inc
xor
add
popa
imul
mov
add
pop
rcl
ror
sub
xchg
xor
dec
out
jb
pop
push
ficom
mov
inc
or
das
push
imul
push
fimul
inc
ret
mov
jb
push
pop
daa
adc
mov
retf
adc
loopne
inc
out
leave
jb
pop
mov
sub
dec
mov
mov
inc
fsubr
dec
imul
(bad)
cmc
and
xchg
fs
push
gs
add
add
inc
setp
dec
cmp
or
aaa
fidiv
adc
add
cld
je
(bad)
pushf
sar
xchg
dec
mov
pop
fcomp
push
cmp
xchg
rcl
cdq
rol
jnp
dec
push
pop
mov
mov
jne
stc
movs
out
clc
cmp
sbb
mov
or
adc
test
add
cmps
bnd
pop
jge
and
popf
cmp
call
xor
rcl
xchg
xchg
push
jge
pop
and
imul
(bad)
mov
rcr
pop
xchg
retf
jle
mov
adc
sub
(bad)
or
clc
inc
popf
xchg
lds
movs
in
int
adc
inc
je
in
inc
ss
jmp
nop
cwde
xchg
inc
jmp
aas
scas
jbe
inc
call
pop
mov
cmpxchg
fimul
(bad)
sub
fidivr
ja
jne
add
test
mov
repnz
jne
das
rcr
fdivrp
dec
inc
mov
out
jnp
push
test
push
fimul
jno
cld
sti
cmp
pop
lds
mov
add
fnstenv
shr
xchg
mov
nop
cwde
out
test
inc
mov
cmc
pop
aad
popf
nop
add
pop
cmps
cld
cmc
mov
sub
adc
mov
sar
pop
pushf
jge
stos
adc
and
cmc
in
(bad)
push
cmp
fstp
outs
es
pop
mov
test
jle
stos
movs
retf
jmp
sub
aas
push
mov
test
retf
mov
int3
adc
sbb
mov
mov
fiadd
aad
ret
les
sub
pop
or
xor
cmp
call
test
dec
rol
in
pop
in
push
imul
sub
stc
mov
or
push
pop
aaa
rol
pushf
pop
adc
in
fmul
dec
ss
shr
stos
mov
add
adc
call
(bad)
sti
out
pop
popa
mov
jne
xor
pop
mov
lock
les
addr16
push
xlat
stc
add
pop
sbb
cld
inc
sbb
inc
out
cmps
push
sbb
test
cld
loope
mov
mov
push
pop
cmps
in
cs
fiadd
js
fcmovnu
leave
pop
hlt
mov
mov
jge
cmp
(bad)
sub
in
das
push
xor
jecxz
add
fiadd
add
add
jecxz
jecxz
call
adc
inc
push
cmp
add
adc
repz
and
es
and
cmps
jmp
hlt
call
mov
pop
inc
mov
jns
or
in
pop
shl
enter
cmc
ret
inc
or
mov
ins
xor
mov
pop
jnp
out
xchg
mov
pop
gs
nop
out
(bad)
adc
dec
mov
repz
into
stc
cmps
fwait
xlat
pop
inc
or
ret
jnp
fmul
mov
push
gs
sub
xchg
ret
dec
add
dec
cmp
jp
cmp
daa
jo
jne
daa
push
pop
mov
pop
call
ss
jne
lahf
enter
push
mov
(bad)
idiv
fdivp
scas
repnz
sub
or
call
lock
add
cwde
mov
sbb
push
add
inc
inc
inc
dec
cmps
je
idiv
shr
xchg
pop
rol
mov
test
push
ins
and
pop
ja
cmp
adc
add
loopne
aad
jbe
ja
mov
fsub
sub
cs
push
push
add
cmps
ja
inc
jp
and
mov
inc
int3
push
jae
inc
add
xchg
jp
push
jge
lock
aaa
imul
cmps
sub
xor
or
jnp
add
jo
inc
adc
ja
xor
and
loopne
push
rol
and
jp
rcr
jl
xchg
inc
sbb
pop
ins
cmc
sub
push
add
(bad)
mov
test
push
add
popa
sub
nop
add
adc
dec
add
sbb
add
imul
rol
and
cwde
jge
shr
mov
jg
add
add
inc
mov
add
das
mov
call
addr16
jo
rol
lahf
call
bound
jmp
jge
xchg
push
dec
ins
fcom
outs
repz
cmps
add
add
xor
dec
mov
pop
inc
pusha
add
pusha
add
add
sub
retf
xor
out
mov
jae
loopne
in
add
mov
xlat
adc
les
jno
xor
push
dec
in
add
add
mov
cmpxchg
mov
mov
in
adc
lock
or
pusha
add
adc
nop
cs
lea
mov
xor
push
mov
xor
xor
push
addr16
push
test
sbb
fisttp
sbb
pop
and
jmp
pop
xchg
and
push
in
mov
mov
add
rol
lods
mov
sbb
idiv
add
add
fist
mov
push
fcom
loope
stos
pop
inc
fist
fimul
dec
fcomp
loopne
mov
add
mov
cmp
xchg
adc
or
sbb
xchg
sub
adc
in
call
xlat
push
ins
(bad)
cmp
push
push
(bad)
adc
dec
cmp
jno
jmp
jnp
outs
and
jbe
mov
mov
pop
(bad)
mov
add
jnp
jns
mov
loope
xchg
add
or
add
adc
mov
add
jo
xchg
sub
rcr
jo
lds
and
and
sub
xchg
test
sub
jns
add
cmp
aaa
fnsave
pop
dec
aam
outs
inc
add
push
sbb
xchg
mov
xchg
mov
jl
movs
popf
xchg
test
and
sub
add
add
mov
add
pusha
add
mov
ins
dec
pop
cli
mov
pop
inc
xchg
out
and
ds
je
jecxz
aas
ja
inc
aaa
pop
loopne
mov
push
nop
mov
sub
xchg
dec
jmp
mov
mov
pusha
xchg
sub
add
jo
or
add
and
mov
mov
or
add
jge
test
ins
mov
xor
call
push
clc
fwait
leave
jbe
loopne
or
lea
cmp
xchg
popa
jmp
cmps
addr16
cdq
sahf
dec
cdq
pushf
jns
xor
cdq
in
mov
icebp
test
(bad)
sbb
push
ja
xor
add
jg
mov
mov
push
add
fdiv
dec
stos
ins
jg
movs
push
pop
test
js
loop
push
pop
add
pop
add
adc
mov
pushf
push
stos
mov
cmps
add
add
retf
xor
pop
loopne
jmp
mov
sbb
sbb
lahf
nop
cmp
loop
xchg
jb
lea
mov
shl
xlat
jno
cmp
and
dec
or
stos
lods
or
xchg
dec
cmp
mov
add
xchg
pop
clc
test
sahf
add
cmps
fisubr
test
sub
cmp
lea
shr
cmps
mov
add
and
ja
data16
pop
pop
mov
dec
mov
add
ds
test
mov
inc
add
sub
ja
jmp
mov
stos
mov
sbb
out
mov
pop
xchg
add
mov
cmp
jg
add
mov
shl
add
dec
scas
hlt
pop
mov
jg
fidiv
call
movs
inc
(bad)
bound
xor
jne
add
cli
mov
jnp
push
push
mov
mov
retf
mov
fisubr
inc
call
cmp
jae
cwde
mov
test
cli
xchg
cmp
mov
jo
pop
loopne
fdiv
cdq
sub
retf
idiv
inc
movs
(bad)
and
cmp
mov
and
outs
mov
movs
mov
xor
outs
retf
retf
cdq
inc
add
add
jp
lahf
clc
add
push
imul
leave
add
fwait
xchg
(bad)
cmp
jae
add
mov
out
in
add
rol
pop
scas
call
xchg
adc
stos
js
add
mov
add
and
and
in
imul
call
jecxz
and
sub
push
xchg
cmp
stos
jno
jbe
loopne
adc
test
enter
movs
fld
cmps
mov
add
mov
es
add
add
(bad)
in
fld
imul
xor
pusha
mov
sbb
test
mov
aas
xchg
nop
dec
retf
fwait
mov
xchg
pushf
pop
or
sbb
add
cmps
mov
lds
jmp
jo
pop
or
and
pop
xchg
loope
add
mov
add
mov
aam
aam
pop
xchg
sbb
into
sti
cmp
xor
(bad)
dec
(bad)
push
dec
sub
mov
(bad)
xor
add
xor
pop
add
add
dec
call
pushf
lods
add
lods
int
mov
cmps
cmp
stos
stos
inc
or
adc
js
mov
in
cmp
xchg
pop
mov
cmps
fnstsw
add
and
outs
push
or
push
add
cwde
mov
mov
add
enter
sbb
popf
push
dec
scas
cmp
call
jo
int
ror
lods
sar
(bad)
jmp
mov
sbb
inc
retf
retf
mov
add
mov
or
ja
mul
add
mov
add
nop
add
lods
add
or
ror
inc
mov
mov
add
add
mov
loopne
ror
mov
ret
lds
int
cld
lds
shr
leave
push
sahf
icebp
dec
add
into
push
adc
cmp
or
mov
pop
ja
mov
sub
aam
fiadd
inc
popf
aam
lea
xchg
ins
fstp
mov
inc
ja
and
xor
aam
stc
mov
std
add
mov
loop
shr
pusha
jp
pop
sub
(bad)
leave
jmp
xlat
in
call
(bad)
lds
lock
in
fisttp
ins
add
stos
jmp
mov
pusha
add
sbb
rcr
xor
mov
int3
ror
sub
add
add
pusha
mov
(bad)
lods
xor
or
shl
pusha
mov
jl
scas
xor
nop
inc
add
add
fst
stos
int
jmp
push
or
rcr
call
fst
mov
int
(bad)
int
ds
mov
cli
fstp
mov
mov
cld
cmp
fnsave
inc
fistp
add
add
mov
sub
dec
lods
aam
mov
inc
mov
cmp
lods
aam
int
jbe
fimul
mov
mov
call
popa
dec
xchg
push
jl
imul
js
int
sub
pop
jmp
movs
sub
daa
dec
into
cmp
mov
lea
stos
add
cld
fmul
std
dec
les
push
add
mov
sub
jns
xchg
outs
xor
adc
(bad)
int
sub
sbb
adc
fpatan
push
stos
add
pop
call
sbb
mul
pop
ds
imul
lods
into
vmulss
stos
fsubr
out
das
mov
lock
into
jge
inc
cmps
mov
fbstp
sbb
cmp
je
mov
jmp
mov
out
cmp
aaa
hlt
aaa
ror
retf
gs
add
mov
jle
sub
add
cmp
mov
scas
cli
fucom
test
fcmovnb
fucom
mov
in
push
fadd
sahf
out
cmc
push
retf
les
retf
ret
pop
sub
fstp
movs
cmp
lock
movs
xor
mov
pop
shl
add
xchg
xlat
frstor
or
add
fist
mov
mov
sbb
loope
pushf
fbld
out
mov
out
mov
out
aaa
imul
pop
mov
and
mov
and
xor
(bad)
test
js
sub
pushf
jg
ins
int
or
call
pusha
retf
(bad)
daa
(bad)
aam
scas
and
leave
fsubr
jle
adc
leave
(bad)
push
jmp
into
int
(bad)
ret
fistp
fld
mov
std
pop
repnz
inc
cmp
aam
lock
mov
mov
movs
jg
aaa
or
pushf
mov
mov
pushf
jno
xchg
push
cmp
push
mov
xor
out
test
bound
pop
jle
pop
mov
popa
pop
fcmove
and
jae
fist
shl
fsub
outs
stos
add
(bad)
push
hlt
pop
mov
shl
and
mov
js
or
ret
test
pop
repz
(bad)
sar
lods
cmp
pop
cmp
pop
add
loopne
nop
into
fistp
jmp
jle
out
enter
jmp
sub
adc
adc
and
mov
dec
push
jmp
push
gs
daa
popf
push
out
or
gs
es
lods
fldln2
pop
outs
dec
pop
retf
push
lods
pop
and
out
or
(bad)
fisttp
das
out
test
data16
add
loopne
out
shl
repz
shl
add
out
add
push
xor
hlt
and
jbe
add
cmc
dec
pop
(bad)
in
push
jecxz
ret
popa
arpl
mov
test
retf
adc
cmps
in
rol
lods
xchg
pop
lods
lods
lods
sub
movs
loopne
int
push
(bad)
mov
loopne
push
jno
inc
and
or
jne
loope
adc
lock
sub
mov
jmp
ret
xor
push
ss
ret
cmp
or
adc
(bad)
aad
stc
imul
cdq
push
inc
add
adc
mov
push
push
push
dec
or
and
rol
jb
cmps
and
and
jmp
sub
push
mov
gs
sub
add
js
sub
add
mov
dec
mov
cdq
adc
or
sbb
inc
cwde
test
inc
or
xchg
int
movs
arpl
dec
and
xchg
mov
cmp
inc
or
pusha
ret
adc
scas
pop
daa
test
mov
dec
movs
push
fcmovnbe
aad
mov
jne
xor
jl
callw
or
add
cmp
add
loope
sub
dec
sti
je
xor
or
mov
cmps
nop
(bad)
fadd
repz
clc
es
test
shl
and
and
aad
repnz
or
mov
and
mov
mov
jp
inc
mov
stos
dec
mov
mov
or
ret
xor
or
lods
or
adc
sbb
xor
inc
ret
xor
and
jae
popf
mov
lahf
mov
daa
sbb
dec
mov
cwde
shr
or
push
push
call
sub
out
or
cmp
xchg
mov
adc
loop
cmp
add
adc
push
loope
xor
or
je
adc
cmp
cs
(bad)
xor
aam
xchg
mov
shl
mov
and
setns
or
inc
aaa
mov
mov
dec
cmp
loope
ds
ror
xor
xor
test
loop
mov
or
movs
jmp
cdq
add
push
or
imul
inc
add
iret
pop
lock
shr
lahf
cmps
test
push
mov
lods
xor
jge
mov
push
pusha
xchg
sbb
dec
pop
in
mov
add
adc
pusha
add
or
inc
xor
sbb
pop
jle
add
dec
mov
lods
cmp
mov
push
xchg
adc
nop
inc
push
in
ds
stos
mov
aam
dec
push
sbb
int
xchg
sbb
mov
or
push
add
cwde
push
mov
je
push
sbb
mov
sti
xchg
stos
add
call
test
mov
xchg
cmp
in
mov
or
add
mov
jne
lods
loope
out
push
les
sahf
mov
jb
push
push
cwde
hlt
and
mov
sbb
sbb
xchg
inc
cmps
adc
shr
call
inc
into
test
sbb
test
sbb
test
cs
fsubr
(bad)
sar
mov
mov
(bad)
cmp
adc
jnp
cmps
add
movs
aas
and
jae
mov
or
jg
push
adc
test
dec
add
xor
pop
push
cld
dec
js
xchg
fistp
and
jp
repnz
ins
sti
jle
mov
fcmovbe
mov
inc
sbb
(bad)
rol
in
cs
fistp
fistp
test
leave
push
bound
(bad)
stc
enter
inc
ret
je
ds
mov
ror
(bad)
sub
add
ror
dec
xchg
xchg
and
mov
adc
add
dec
jl
push
pop
xor
or
outs
das
pop
stc
sbb
movs
xchg
xor
int
xor
outs
sbb
adc
rcr
mov
daa
test
shl
jbe
jecxz
jge
imul
jmp
add
mov
sbb
mov
shl
cmp
in
dec
mov
adc
add
mov
sbb
lds
pushf
and
jbe
dec
out
cs
hlt
pop
mov
xchg
fldenv
fild
and
mov
jb
xor
mov
test
cwde
sbb
mov
push
jns
popa
js
xchg
xor
pop
and
scas
adc
or
pusha
adc
push
fwait
xchg
add
in
sbb
inc
sub
fld
xchg
sbb
lods
into
mov
inc
cmp
cmp
sbb
pop
push
bnd
aam
inc
repnz
sbb
pop
fsub
movs
add
adc
dec
dec
and
fcmovnbe
int
lahf
sbb
xchg
popf
test
dec
sub
sub
push
mov
ins
repnz
and
lods
loopne
inc
loopne
push
jne
or
mov
add
dec
or
out
and
pop
adc
fs
and
or
jb
dec
or
xchg
jne
mov
sbb
add
imul
adc
call
clc
bound
rcl
add
sbb
sub
mov
fsub
and
push
(bad)
sbb
dec
or
inc
mov
add
imul
ins
jge
add
xor
cmps
add
xchg
fisub
mov
or
add
mov
ja
arpl
ss
sbb
or
sub
adc
adc
enter
cli
inc
inc
jmp
pop
sbb
cmp
lock
aaa
inc
sub
or
mov
inc
imul
add
inc
rcr
push
mov
scas
push
jns
jmp
mov
mov
movs
das
test
xchg
pop
jb
mov
sbb
mov
ja
dec
xor
stc
xchg
(bad)
dec
push
jg
leave
lahf
jns
out
mov
loop
cmp
mov
cmps
fwait
xor
xchg
frstor
push
outs
xor
sbb
es
lods
push
stos
cwde
or
test
sbb
sub
(bad)
pop
or
adc
mov
sub
ret
(bad)
mov
out
sub
cwde
imul
idiv
int3
inc
inc
and
inc
jns
add
mov
or
fdivp
fs
jmp
lds
loopne
adc
loop
mov
gs
mov
mov
push
imul
and
push
cwde
add
in
and
pop
lahf
push
cmp
ja
call
inc
jl
das
aam
xchg
ret
add
pop
xchg
pop
mov
adc
mov
add
adc
or
and
imul
scas
sbb
adc
out
test
mul
mov
fcom
sar
push
xchg
fiadd
jo
xchg
adc
lock
push
(bad)
mov
push
retf
scas
bound
iret
cdq
call
inc
or
rcr
stos
test
fnstenv
push
popf
sub
jg
arpl
cmp
enter
sub
pop
enter
jo
mov
bound
xchg
fst
pop
clc
mov
cmp
adc
sub
inc
(bad)
sub
int3
adc
imul
in
mov
pop
jl
lods
push
push
sub
xchg
xor
jbe
inc
in
aas
adc
cmp
inc
sbb
fcomp
sbb
pusha
xchg
out
cs
adc
push
push
mov
pop
in
lds
adc
loop
sub
pop
mov
test
push
inc
(bad)
ds
fisub
or
iret
outs
jbe
xor
fadd
pop
xchg
add
xchg
add
out
adc
hlt
loope
jp
sbb
hlt
xchg
aam
pusha
or
rcl
sbb
add
add
fst
std
add
pop
dec
mov
cs
ltr
jge
popf
in
xor
xor
dec
add
sti
sbb
add
mov
test
mov
jmp
dec
push
rol
cs
adc
jno
xchg
out
add
inc
add
sbb
sbb
and
addr16
add
cmp
xor
les
cmp
repz
loope
fbstp
fisttp
mov
mov
in
jo
shr
adc
pusha
xchg
cld
out
call
out
adc
or
mov
pop
sbb
into
push
jge
andps
dec
(bad)
dec
enter
push
cmp
test
adc
xchg
dec
gs
scas
les
mov
pop
and
pushaw
clc
(bad)
cmps
or
add
add
rol
rol
mov
cli
int
mov
out
xchg
sub
call
sub
ins
pop
push
adc
cmp
push
fiadd
fmul
mov
ins
add
pop
out
leave
jl
or
pop
frstor
lods
dec
cwde
adc
test
clc
test
sub
xchg
div
out
push
rol
inc
add
cmps
or
add
pusha
sub
dec
pop
inc
or
hlt
push
add
ret
dec
adc
mov
iret
rcl
lods
rcr
hlt
dec
or
or
loopne
stos
push
(bad)
rol
ror
hlt
loope
xchg
mov
adc
ret
shl
add
jbe
outs
or
nop
cmp
sub
jl
mov
inc
rol
inc
test
sub
in
sub
xchg
mov
(bad)
popa
fs
xchg
or
add
dec
pop
cmp
pop
mov
bound
and
xchg
bound
mov
add
cli
icebp
pop
std
xchg
cmp
pusha
add
adc
or
cmp
sbb
and
hlt
and
ins
pusha
cmp
push
mov
ja
addr16
shl
iret
xchg
fild
and
mov
retf
cmp
add
inc
xchg
scas
sar
adc
lock
fucom
add
sub
daa
jg
sub
and
inc
sbb
cmps
adc
cs
push
jl
add
and
rep
shr
xor
xor
jnp
dec
pop
cld
dec
mov
sbb
or
stos
into
add
inc
mov
cmps
and
repnz
fwait
bound
call
cmp
inc
push
and
stos
scas
pop
xor
add
(bad)
nop
pop
rol
sub
add
pop
dec
and
ror
mov
pop
addr16
adc
dec
dec
ds
(bad)
mov
and
inc
sub
scas
sub
sbb
into
or
rol
sti
stos
pusha
sub
and
xchg
cs
lock
das
addr16
cwde
and
shl
jle
mov
push
pop
out
adc
mov
les
movs
es
sub
sub
xabort
enter
into
scas
pop
enter
xchg
shr
adc
add
add
ret
dec
add
mov
bnd
jg
add
loopne
js
and
xor
and
sbb
cmp
stos
xchg
inc
dec
in
xchg
mov
sub
movs
cld
add
sub
cmps
cmp
add
sbb
jb
rol
ss
add
xchg
push
mov
add
shl
(bad)
cld
adc
inc
and
(bad)
adc
push
in
jae
repz
out
cli
gs
xor
out
cld
adc
aaa
ror
fwait
xchg
ja
and
iret
add
push
push
neg
iret
in
call
xchg
inc
sub
push
aam
add
add
add
add
add
ror
adc
push
and
jns
aaa
xchg
lea
in
mov
ss
out
cmp
mov
mov
(bad)
and
xchg
loope
dec
xor
sbb
and
loopne
shl
jle
add
mov
std
jno
pusha
loopne
xlat
rol
test
push
test
inc
add
stc
jae
push
fst
stos
hlt
dec
cld
mov
sahf
pop
add
in
mov
mov
in
cmp
dec
sbb
lock
int3
jecxz
loop
or
or
pop
(bad)
call
pop
stos
adc
xchg
aad
pop
inc
das
inc
and
add
xchg
pop
dec
mov
int3
xor
pusha
aam
imul
inc
cmc
aas
push
test
inc
jmp
hlt
(bad)
and
sbb
scas
inc
xchg
loope
int
or
dec
mov
or
push
inc
push
loopne
loopne
xor
sbb
inc
add
pusha
add
push
cdq
aad
test
add
pusha
icebp
mov
adc
rcr
das
adc
in
mov
dec
inc
test
cmp
push
jmp
pop
test
inc
xchg
pop
aas
add
inc
jae
je
add
mov
pop
lea
pop
jle
pslld
repnz
es
jg
cmp
xchg
das
adc
adc
push
shl
xchg
jbe
xor
ret
xor
xor
mov
ss
loopne
xchg
or
jae
mov
pop
mov
inc
sahf
test
in
(bad)
gs
loopne
push
int3
xor
popf
mov
scas
call
inc
push
sub
pop
aaa
mov
int
dec
jnp
push
push
out
mov
dec
mov
in
inc
fstp
in
sahf
mov
sub
dec
shl
cld
pop
cmc
and
jp
xor
mov
mov
adc
mul
sub
add
pusha
add
jae
xchg
adc
push
inc
pop
sub
mov
jo
push
adc
popa
bound
inc
movs
out
xor
inc
repnz
movs
mov
(bad)
mov
add
das
(bad)
(bad)
push
and
adc
je
lods
and
jl
add
movs
add
loopne
lock
push
in
std
xchg
das
xchg
dec
jnp
outs
mov
loop
ret
inc
sbb
inc
pushf
push
ins
sub
pop
outs
in
pop
mov
popa
xor
inc
adc
test
into
jb
pop
mov
sub
inc
add
(bad)
and
or
push
rol
add
popf
aad
inc
mov
add
loopne
mov
adc
lds
ja
aam
ja
ja
out
sub
push
retf
pop
xchg
lock
inc
jnp
lea
test
xor
push
xchg
jmp
or
inc
ins
xlat
mov
(bad)
and
sub
outs
popf
adc
xchg
shr
mov
in
data16
pop
scas
test
bound
fdivr
xor
in
mov
loopne
xchg
cmp
jge
dec
and
xor
cs
and
or
jb
shl
ins
or
in
rcr
into
jmp
repnz
mov
sbb
movs
scas
dec
adc
pop
xchg
iret
cmps
arpl
jmp
jl
mov
sub
das
clc
pop
jns
cwde
pop
repnz
add
aaa
jo
xchg
inc
or
push
fsub
nop
or
and
je
test
lds
xor
cmp
mov
pop
int
jae
ins
push
in
retf
mov
sub
cwde
dec
or
imul
fmul
push
cmp
arpl
and
inc
or
cmp
and
push
mov
and
inc
cmp
cmp
and
dec
mov
jo
or
pop
xchg
jmp
xlat
scas
call
jb
and
or
fs
xchg
and
lea
repnz
sar
xor
add
aam
movs
push
shl
loope
popa
mov
push
push
add
mov
inc
test
mov
stos
add
adc
aad
call
mov
pop
out
fdivr
sub
rcl
jb
test
and
push
rcr
pop
lahf
aad
adc
fwait
mul
adc
jmp
bound
lods
mov
arpl
dec
jle
mov
mov
into
ret
adc
cmps
xchg
sub
inc
sub
pushf
inc
call
jl
push
push
or
out
pop
add
pop
popa
mov
lock
ins
shr
sbb
popa
pop
xabort
mov
xchg
loopne
cld
mov
inc
outs
das
fwait
iret
add
and
sbb
jns
mov
mov
sub
and
cdq
fsubrp
aad
repz
scas
pop
je
push
sub
les
lds
fs
shl
xor
jb
test
cmp
scas
or
sbb
cmp
arpl
out
cmps
inc
bound
push
pop
sti
inc
jo
imul
xor
test
push
mov
out
xchg
and
xchg
sbb
call
(bad)
icebp
nop
cmp
mov
cwde
mov
cld
add
inc
ss
pop
fimul
mov
inc
stc
popa
enter
sti
xchg
icebp
scas
inc
pushf
fs
lock
or
clc
xor
add
aam
imul
or
cmovbe
push
or
push
pop
or
and
pop
fcmovb
arpl
push
lock
ror
in
dec
jp
pushf
mov
and
(bad)
push
add
xor
sbb
in
mov
jb
mov
mov
mov
and
das
(bad)
daa
add
in
pusha
or
xchg
add
ror
aad
shl
cs
aas
imul
fdivr
imul
pop
mov
dec
pop
dec
xchg
mov
and
lock
pop
scas
mov
mov
add
jb
out
ss
push
outs
daa
or
sub
inc
xor
sbb
into
pop
popa
das
mov
mov
or
mov
sbb
mov
xor
retf
pop
xor
fcmovnb
add
push
loop
sub
or
pop
mov
xchg
and
sbb
sub
pop
dec
xor
bound
cmp
dec
cli
sar
(bad)
adc
push
test
shl
adc
cmp
mov
inc
outs
push
mov
adc
jg
ficomp
mov
sahf
xor
lea
std
repnz
ins
fmul
adc
not
popa
jae
jbe
int3
mov
sub
or
inc
push
cmp
mov
and
aam
jne
data16
lahf
cmp
push
push
pushf
loopne
sub
loope
jecxz
fld
dec
sub
xor
or
adc
fild
inc
push
mov
adc
idiv
mov
inc
stos
pop
add
and
and
fsub
add
dec
fild
sub
js
dec
scas
cmp
loop
push
sbb
inc
out
cmc
jle
mov
(bad)
int3
test
bound
dec
iret
xchg
jp
mov
pushf
ret
push
cmp
outs
cmp
call
imul
push
or
and
loopne
ds
xor
push
add
cdq
loopne
mov
loope
sbb
adc
mov
xchg
push
and
inc
test
icebp
js
push
inc
jns
and
aam
xchg
repz
mov
jae
add
sub
sbb
xchg
call
push
xor
imul
sbb
jb
nop
ficom
and
cmp
add
(bad)
fisub
js
aaa
jns
aas
jns
inc
cmp
cld
icebp
fwait
idiv
mov
pop
push
or
or
mov
adc
xchg
pop
xchg
sub
and
xor
xor
sub
inc
cmp
mov
mov
cmp
xchg
pop
dec
scas
scas
push
in
or
push
push
jmp
and
call
pop
bound
in
ins
out
dec
ins
xchg
hlt
pushf
sbb
inc
mov
aam
mov
pop
xchg
sbb
add
test
adc
mov
prefetch
or
mov
popf
xor
xor
loopne
test
pop
int3
int3
sub
lea
cmps
stos
adc
mov
pop
call
stc
mov
ret
push
push
adc
mov
xor
js
or
xchg
sbb
cmp
pop
and
dec
fistp
add
sbb
xchg
jecxz
push
jo
dec
xchg
and
out
fsubp
int3
sub
inc
cmp
rcl
je
popf
mov
jne
rol
jne
xchg
call
sbb
add
ret
or
pop
xor
xlat
mov
fidivr
fsub
jg
repz
adc
pop
and
addr16
sbb
std
in
movs
mov
(bad)
(bad)
repnz
sub
sub
pop
inc
mov
mov
lods
xchg
(bad)
stos
fcom
cmp
sub
pushw
loopne
fcmovbe
sub
pop
xor
jb
sahf
cmp
cmp
rcr
ja
(bad)
jae
add
sbb
fisub
scas
mov
xor
retf
pop
or
push
and
sbb
into
lahf
mov
add
imul
dec
or
or
pop
mov
imul
jmp
cmp
pushf
jo
xor
inc
pusha
pop
call
std
add
cmps
leave
bound
adc
mov
sbb
mov
cs
imul
adc
inc
test
mov
cmps
adc
loopne
xchg
jmp
or
xchg
ror
fs
in
inc
dec
cmp
outs
aam
sbb
xchg
dec
inc
dec
push
or
popf
mov
dec
retf
sbb
adc
mov
sahf
dec
ror
das
mov
sub
mov
push
sub
ja
popf
ins
adc
push
ins
loopne
out
xchg
add
jne
xchg
test
cwde
push
add
bound
jp
cwde
mov
or
shl
out
sub
adc
inc
sbb
ss
mov
ret
clc
hlt
jae
push
jge
rcr
jp
loopne
add
ds
popa
shl
imul
mov
pop
jnp
movs
(bad)
mov
push
sahf
dec
ins
cmp
xor
dec
sub
sti
push
ins
jns
or
pop
lds
ss
shr
pop
push
shl
inc
cld
loope
loopne
retf
cli
loope
add
inc
mov
movs
adc
lods
lds
arpl
out
push
mov
jle
dec
xchg
mov
pop
bound
rcl
call
jge
aad
pop
add
mov
ins
inc
outs
inc
pop
cmp
ficomp
popf
mov
adc
aaa
push
mov
sbb
push
sbb
data16
push
ret
not
push
xchg
pop
or
fild
loope
(bad)
iret
loopne
cmp
call
movs
adc
lea
jmp
xchg
gs
xchg
inc
addr16
scas
cs
mov
or
cmp
push
rcr
cmp
add
(bad)
cli
inc
ja
jno
inc
jno
push
inc
out
fbld
pushf
scas
jb
leave
add
lea
fyl2x
(bad)
int3
add
ss
(bad)
cmp
mov
jnp
or
shl
mov
lock
mov
xor
aaa
xchg
fwait
aam
popf
enter
or
and
mov
(bad)
(bad)
cmps
mov
mov
lock
fldz
or
adc
mov
ins
cwde
jnp
and
sbb
xor
add
add
and
dec
(bad)
lahf
push
dec
dec
add
mov
sub
xor
aam
dec
loope
xor
push
jno
add
xor
fsincos
int3
inc
add
lock
add
scas
pop
cmp
sub
mov
addr16
mov
je
enter
push
xchg
retf
and
push
lea
fisubr
cmp
test
inc
or
mov
mov
adc
iret
or
mov
add
(bad)
sbb
adc
inc
les
xchg
mov
dec
xchg
mov
inc
cs
jnp
mov
outs
ds
call
jl
or
movs
(bad)
in
push
pop
dec
inc
add
mov
push
fimul
push
fsub
and
rol
inc
loopne
jmp
lock
add
sbb
clc
mov
inc
pop
sub
test
jmp
mov
xchg
sbb
imul
dec
jle
rcl
add
lods
jne
add
call
into
or
adc
cmp
inc
or
ror
add
out
xchg
xchg
test
and
or
sub
(bad)
ins
bound
icebp
mov
fwait
loope
jmp
or
pushf
shl
xchg
test
add
xchg
xchg
ret
gs
adc
fdivr
add
add
push
lods
or
ins
jnp
mov
dec
mov
in
pop
pop
call
push
aam
shl
dec
shl
jns
push
call
enter
push
mov
movs
ror
push
movs
sub
sub
(bad)
sub
xor
push
cmps
sub
mov
cmp
adc
jb
sahf
sub
or
adc
sbb
test
adc
mov
aas
mov
pop
adc
addr16
mov
xchg
imul
jno
lods
push
pop
test
xor
sbb
es
or
rcl
int
push
adc
arpl
push
dec
jecxz
jo
vmovq
mov
dec
pop
loope
sub
mov
iret
mov
or
mov
xchg
mov
pop
pop
push
inc
stos
mov
rol
mov
add
adc
int3
xor
add
scas
js
out
adc
je
pop
lea
mov
mov
idiv
aaa
and
jo
inc
mov
repz
(bad)
and
xor
add
and
enter
js
add
xchg
(bad)
cmp
loope
mov
scas
(bad)
movs
call
sti
push
jo
sub
jecxz
shr
inc
ins
adc
icebp
cmps
add
sub
(bad)
aaa
mov
cmc
or
add
xchg
daa
jne
add
cmps
xchg
rcl
push
and
pop
cmp
sbb
es
or
nop
lea
xchg
push
sahf
xlat
(bad)
adc
and
(bad)
fisub
nop
mov
mov
adc
jb
push
pop
push
popw
jo
and
jbe
(bad)
and
in
pop
adc
or
mov
test
and
inc
jl
jne
cli
or
cs
and
pop
inc
fbld
push
xchg
or
stos
push
dec
aam
mov
mov
mov
push
mov
mov
ret
cwde
fwait
pop
xchg
xchg
xchg
cmp
mov
loopne
mov
or
pop
pop
adc
adc
stc
jne
push
cdq
mov
add
and
mov
bound
popa
add
out
jne
jge
add
push
data16
retf
enter
imul
jle
fwait
rcr
sahf
mov
mov
fistp
mov
mov
add
or
jo
shr
loope
popf
cmps
mov
jae
ins
mov
pop
add
fisttp
pop
jp
sub
mov
repnz
mov
ins
pusha
cmp
xor
lock
xchg
mov
pusha
in
mov
int
mov
add
add
or
inc
nop
sahf
idiv
and
add
pusha
add
add
lock
mov
(bad)
call
jle
add
push
(bad)
gs
dec
mov
ja
(bad)
mov
xor
cmc
icebp
je
adc
adc
mov
xlat
outs
retf
popa
dec
test
dec
pop
daa
inc
mul
mov
xlat
dec
punpcklbw
fcmovbe
(bad)
adc
fwait
push
mov
xor
dec
sbb
gs
pop
pop
ret
jae
(bad)
push
in
pop
loopne
push
xor
mov
ror
push
in
cli
adc
pusha
and
es
pop
aas
pop
sub
xlat
fistp
les
fcmovu
inc
adc
stos
xor
mov
in
loop
cmp
shr
inc
ror
test
sahf
shr
pushf
and
fucomip
mov
push
lock
sar
fild
pop
iret
(bad)
fild
sub
dec
mov
and
adc
pop
call
adc
leave
test
xchg
ss
sahf
mov
test
add
hlt
or
aaa
push
and
dec
push
inc
add
and
enter
test
inc
mov
or
add
sbb
jb
adc
sub
cmp
or
push
push
pop
addr16
push
mov
mov
popa
sbb
xchg
sbb
out
mov
das
cwde
(bad)
icebp
sbb
cmps
sub
cmp
add
sub
or
adc
inc
and
loop
xor
out
push
jb
push
and
mov
loop
call
test
dec
mov
mov
in
sahf
sbb
ret
mov
hlt
push
adc
loope
cmp
push
pusha
add
or
(bad)
rol
shl
add
lock
mov
repnz
sbb
adc
adc
add
pop
xchg
loopne
cmp
cmp
sub
call
push
in
pusha
push
xor
repnz
sahf
mov
in
inc
cwde
cwde
push
test
rol
fadd
pop
jo
xor
arpl
mov
punpcklbw
mul
adc
add
test
and
loop
push
leave
stos
ins
loop
mov
cmp
sbb
mov
bswap
pop
sub
into
sahf
fs
push
clc
add
and
mov
mov
sahf
lock
cmp
pop
fadd
xor
push
loop
out
and
pusha
ror
add
jecxz
pusha
adc
icebp
push
xor
stos
cdq
pop
dec
sub
cmp
stc
adc
jno
addr16
and
dec
in
daa
add
fdiv
in
ret
(bad)
cld
pushf
ror
xchg
pop
adc
cmp
add
ret
add
enter
gs
jb
or
rol
and
sub
and
aad
pop
bound
sub
sub
xor
arpl
pop
push
and
sbb
mov
aam
sbb
ror
mov
or
dec
in
nop
cmp
lahf
cmp
pop
shl
or
adc
pop
cli
movs
pop
shl
aam
pop
loopne
and
push
lds
ss
inc
out
(bad)
xchg
inc
cmp
add
push
sub
gs
inc
and
xlat
mov
dec
fmul
scas
jns
sub
cwde
push
mov
sbb
xchg
push
shl
pop
adc
add
(bad)
dec
loop
jge
xchg
sub
ins
mov
out
pop
and
and
shr
out
pop
and
(bad)
inc
inc
cmps
fdivr
inc
inc
sar
aaa
push
lods
enter
push
cmp
mov
pop
mov
(bad)
jle
movs
add
fadd
sbb
gs
rol
in
inc
sub
ins
push
adc
and
adc
int3
push
sub
push
sar
push
sub
inc
addr16
mov
xchg
push
inc
xor
mov
mov
sub
test
jmp
addr16
add
loope
aam
dec
(bad)
movs
dec
lds
mov
movs
add
cmp
or
sub
mov
popa
popa
sub
dec
or
sbb
adc
cmp
movs
jl
cmp
call
(bad)
pop
test
std
inc
jno
or
cs
xchg
sub
addr16
push
call
push
sub
xor
leave
cmps
push
test
or
adc
pop
mov
add
jg
jmp
dec
dec
or
fdivrp
xchg
xchg
shl
cmps
jb
gs
add
dec
cmps
cmp
sbb
xchg
mov
push
xchg
and
test
inc
or
hlt
mov
popa
lods
(bad)
push
outs
fld
int3
cmps
or
xchg
ins
jmp
inc
sbb
sar
enter
imul
mov
or
adc
add
xchg
data16
sub
add
stos
stos
je
sub
fwait
dec
mov
or
es
(bad)
xor
mov
and
das
cmp
sbb
push
data16
mov
jmp
ins
mov
add
rol
inc
lea
sub
es
ds
dec
dec
mov
push
gs
adc
test
jb
adc
imul
mov
or
nop
sbb
add
jno
or
and
int
call
adc
test
adc
xchg
dec
add
pusha
or
ins
dec
lds
jo
shl
or
imul
jno
pop
mov
ins
mov
popa
je
in
xchg
push
rcl
ins
pop
es
cmp
out
mov
loop
adc
cdq
(bad)
out
rol
leave
lahf
or
dec
add
and
add
sahf
push
or
add
enter
xchg
and
xor
bswap
sub
add
lahf
out
or
mov
sub
jmp
cmp
or
push
or
addr16
mov
out
in
inc
or
rol
rcl
mov
cdq
pop
test
add
or
(bad)
and
ficom
add
das
repz
sar
pop
retf
mov
loope
or
jmp
neg
push
out
scas
popa
dec
int3
inc
fist
xor
ins
inc
(bad)
je
sub
mov
test
add
and
jmp
in
out
retf
retf
adc
outs
in
ins
cld
xor
inc
clc
nop
jne
nop
and
scas
and
rol
data16
fadd
xor
push
(bad)
pusha
or
push
test
fadd
lock
inc
lods
push
inc
stos
jno
jno
dec
sub
and
sbb
and
(bad)
sub
(bad)
mov
mov
and
and
xchg
aaa
and
cmp
sub
and
sahf
loop
mov
mov
inc
add
sub
shl
movs
mov
out
pop
sub
int3
jae
ins
push
cmps
sbb
repnz
and
sub
mov
iret
or
test
or
repz
and
inc
adc
sub
adc
xchg
inc
repz
ins
fcom
xlat
jmp
add
xchg
pop
pushf
or
xchg
xor
xor
mov
adc
mov
mov
pop
mov
or
push
imul
xchg
fcmovb
add
adc
jmp
mov
pop
repz
je
stc
shl
sub
mov
or
sub
sbb
add
sub
(bad)
and
ins
xchg
jmp
lds
mov
imul
pusha
adc
mov
pop
shl
test
mov
cmps
cmovne
jae
mov
iret
inc
jno
adc
mov
test
test
retf
add
ffreep
jg
pop
xor
and
xchg
cmp
call
inc
adc
popa
inc
xor
sub
inc
push
dec
sahf
icebp
push
adc
add
in
inc
cmps
inc
push
arpl
fld
cmc
fistp
jmp
js
out
jnp
add
or
(bad)
add
shr
sub
sub
shl
sbb
mov
add
leave
mov
jne
imul
nop
xlat
xor
popf
cld
(bad)
in
imul
mov
mov
out
cmp
je
adc
xchg
mov
inc
mov
xor
or
and
out
das
mov
or
nop
(bad)
jbe
adc
sbb
aaa
and
push
imul
inc
mov
cmp
or
cmp
enter
ret
lds
pop
adc
sub
mov
out
add
adc
mov
cmp
ss
test
xor
into
add
cmp
sbb
mov
ss
pop
jmp
jno
pop
repz
jle
or
stos
outs
cli
fbld
(bad)
inc
jnp
push
or
imul
retf
push
sbb
pop
and
fistp
int
or
cmp
xor
(bad)
fidivr
push
push
ins
shr
cmp
(bad)
push
and
and
shl
cmp
cmp
cmp
outs
xor
jns
fstp
mov
lock
sbb
or
fld
and
iret
xchg
inc
loop
cmp
cmp
push
ret
rcl
xor
clc
inc
or
adc
inc
adc
add
stc
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
leave
ins
cs
sub
dec
cmps
rol
inc
fwait
rcr
mov
or
cmp
outs
mov
scas
fucomi
push
push
sub
and
test
adc
adc
push
adc
dec
xchg
add
fwait
fwait
push
addr16
arpl
popa
ins
pusha
ins
inc
mov
mov
outs
lahf
lahf
ins
movs
pusha
mov
mov
and
mov
ss
ror
dec
push
sbb
outs
lods
sub
scas
bound
arpl
add
fild
je
dec
xor
hlt
fdivp
fisub
hlt
push
add
dec
push
lods
mov
xor
mov
sbb
movs
adc
pop
mov
outs
sbb
(bad)
div
push
movs
xor
inc
pop
sbb
pop
add
mov
repz
pop
das
or
inc
adc
call
xchg
xor
push
aaa
jae
mov
jmp
aam
add
fdivr
stc
jo
shl
add
loope
mov
mov
adc
or
adc
jle
cmp
retf
cmp
mov
std
xchg
jmp
sbb
(bad)
push
iret
popa
das
xchg
fs
fisub
adc
push
lods
sub
fdiv
xor
jecxz
push
pop
dec
imul
push
cmp
jle
sti
aam
cs
nop
mov
lods
stos
xor
repz
out
ret
cmps
mov
call
mov
xchg
inc
dec
pop
jne
out
fdivr
dec
mov
jp
sbb
xchg
pop
movs
call
movs
les
rcl
loope
adc
push
jp
inc
cmp
int3
mov
ins
and
inc
lahf
mov
pop
mov
add
je
imul
mov
lds
push
sub
inc
and
sub
nop
xor
push
cmp
retf
pop
xor
xchg
push
inc
jns
xchg
pop
pusha
pusha
add
cmp
xchg
jmp
add
cmp
sub
sbb
or
fld
nop
pop
stos
inc
fld
arpl
push
ds
inc
or
add
add
sub
xor
push
pop
addr16
dec
push
lods
mov
and
or
dec
sub
push
cmps
jb
pop
sub
jo
movs
add
sbb
and
inc
add
mov
inc
and
sub
pop
and
mov
and
bound
sub
dec
dec
cmp
jne
sub
cmps
into
mov
mov
mov
and
add
daa
aam
scas
(bad)
test
out
mov
scas
sub
cld
neg
or
and
ins
jne
jle
cmps
xor
xchg
xor
icebp
stos
fld
retf
jmp
sbb
lock
repnz
mov
mov
mov
outs
or
enter
in
imul
push
cmp
inc
ins
pop
(bad)
lahf
sbb
jne
out
ror
add
add
xor
mov
ds
nop
jne
adc
dec
inc
retf
lods
add
retf
std
xchg
mov
pop
add
sub
pop
pop
mov
jl
sar
fstp
daa
pop
(bad)
ror
pop
inc
js
xchg
or
pop
in
mov
add
bound
or
adc
add
jno
xchg
inc
add
adc
mov
mov
sbb
(bad)
cmp
xchg
(bad)
pop
lods
shr
ror
adc
sub
es
mov
pop
je
inc
call
pop
push
jne
rol
mov
xor
imul
in
add
dec
jle
jmp
(bad)
clc
lock
(bad)
aas
jbe
and
nop
inc
add
fisttp
add
add
dec
jnp
hlt
jle
mov
cld
fstp
sti
out
adc
mov
out
enter
movs
loopne
in
dec
inc
or
stc
and
repnz
cld
cmp
iret
fld
jg
sti
(bad)
call
dec
mov
or
adc
sub
or
lods
inc
adc
xor
ss
mov
mov
dec
xchg
movs
pop
loopne
inc
ds
mov
lahf
add
dec
mov
xor
push
es
push
mov
adc
add
add
popf
(bad)
jmp
mov
ret
mov
or
dec
clc
add
xor
rcl
pop
sbb
or
inc
cmp
(bad)
inc
or
mov
out
mov
ror
cld
push
fwait
retf
or
xchg
push
add
shl
das
push
mov
pop
in
vmwrite
movs
adc
movs
sub
dec
dec
add
imul
jge
or
xor
sbb
fsub
fidivr
mov
jb
xchg
cmp
mov
call
retf
ins
into
xor
imul
popa
mov
(bad)
xchg
mov
xor
cmc
sub
mov
cmovle
call
int
or
jp
and
mov
imul
jb
cli
nop
retf
sub
shr
xor
xchg
sbb
(bad)
or
mov
ficom
fwait
int
fild
push
rol
lock
icebp
(bad)
mov
adc
sub
push
xchg
push
sub
or
mov
sub
dec
pop
scas
sbb
imul
and
test
push
jl
iret
mov
test
(bad)
inc
(bad)
inc
adc
lods
or
and
xor
xor
push
sar
sbb
divps
aad
dec
xor
pusha
lods
test
(bad)
pop
enter
ja
lods
sbb
push
shl
xchg
lods
dec
sub
mov
sub
add
int
or
cmp
fadd
not
inc
add
mov
dec
fldenv
sti
add
stos
je
popa
xchg
sub
push
add
dec
pusha
or
adc
ds
cli
push
add
nop
mov
cmp
bound
xor
jmp
popa
pop
sti
add
xchg
mov
xchg
xchg
enter
loopne
cmp
jmp
stos
jp
add
loopne
mov
xchg
xor
or
out
mov
(bad)
or
(bad)
or
or
test
and
add
adc
ficom
push
or
add
add
popf
aam
jp
mov
adc
cmp
xor
clc
or
into
jae
fisubr
xor
mov
dec
mov
sub
add
hlt
adc
push
pop
in
retf
dec
rcl
mov
xchg
jo
mov
fiadd
add
sbb
or
mov
dec
xlat
retf
dec
pop
inc
or
call
mov
std
rol
pop
dec
or
(bad)
out
cmp
(bad)
aam
xchg
rol
jo
imul
addr16
sahf
inc
cs
enter
int
mov
pop
stos
push
mov
rol
add
rol
mov
call
add
imul
stos
mov
arpl
and
rol
jne
(bad)
jno
push
pop
sahf
pusha
mov
scas
repz
mov
outs
jmp
and
scas
(bad)
bnd
mov
(bad)
aad
icebp
push
or
add
cs
(bad)
jge
ins
and
add
inc
in
popf
call
fisub
rol
out
xor
ins
or
call
inc
pop
test
js
aad
jo
pop
dec
int
jae
cmps
addr16
lds
div
add
add
add
cli
fadd
push
shr
cld
push
mov
jnp
add
das
jp
stos
gs
and
icebp
sahf
fld
les
cmp
adc
ds
ins
mov
add
push
add
fdivr
xchg
dec
cmc
add
lock
cmp
repz
shl
hlt
mov
mov
xchg
mov
sub
add
out
inc
aaa
pusha
sbb
popf
or
call
jge
pop
cmp
es
mov
push
jne
dec
cmp
mov
in
pop
lods
mov
int3
adc
mov
daa
popf
stc
add
shr
aad
(bad)
gs
and
sbb
xchg
sbb
loopne
xchg
not
adc
rol
sahf
out
push
test
repnz
add
or
sti
gs
out
mov
jmp
shr
inc
mov
xchg
in
ja
les
push
es
xor
pop
add
and
cmp
jg
sub
add
inc
cwde
jl
not
les
and
add
mov
hlt
aas
sbb
xor
add
jnp
pop
pop
movs
add
ja
mov
data16
and
arpl
add
sub
js
not
not
push
pusha
add
add
js
or
mov
add
adc
xor
jg
nop
jle
lock
or
add
dec
pop
inc
dec
adc
push
add
sub
sbb
xlat
add
push
sbb
pop
push
mov
popa
push
pop
or
sbb
add
or
and
and
jnp
pusha
add
neg
add
push
cmp
adc
mov
pop
es
das
add
(bad)
out
mov
push
mov
outs
mov
daa
xchg
cmp
add
jnp
movs
xor
push
sbb
(bad)
sub
shr
daa
enter
aas
icebp
mov
sub
pop
cwde
out
call
add
rol
xchg
push
cdq
sub
xlat
mov
ja
jne
add
jnp
or
or
dec
enter
push
test
inc
mov
mov
sub
outs
(bad)
call
mov
push
push
add
(bad)
sub
and
xor
adc
rol
js
or
adc
sbb
pop
push
xor
add
jecxz
sub
pop
xchg
cmp
xor
push
sub
pop
xchg
repz
in
test
jge
inc
mov
push
iret
add
xchg
dec
add
nop
cs
mov
nop
xchg
push
arpl
or
enter
pop
and
sub
add
aas
in
dec
push
inc
mov
mov
sbb
test
push
or
cmps
add
add
xor
pop
xchg
popf
clc
xchg
push
mov
jmp
inc
mov
cdq
push
push
test
sbb
dec
scas
dec
das
pop
repz
mov
xchg
inc
mov
fld
or
fs
sbb
sub
loopne
pop
jmp
push
aaa
xor
popa
test
je
xchg
pushf
or
js
std
push
pop
mov
das
fwait
cmps
mov
xchg
xchg
jmp
leave
jo
mov
ins
mov
xchg
aas
nop
fwait
push
inc
pop
push
jb
ss
push
xlat
cwde
es
add
and
test
mov
xchg
popf
dec
mov
jbe
call
jb
add
aas
mov
je
add
daa
push
mov
cmp
test
push
test
xchg
je
push
inc
jo
neg
and
jmp
jne
or
pop
nop
xor
popf
cmp
ja
jb
lock
inc
and
xor
jae
dec
mov
or
arpl
and
dec
scas
push
xchg
or
imul
add
mov
fs
and
sti
test
cli
cdq
jle
test
sti
sbb
push
mov
add
add
gs
inc
sub
call
cmc
inc
sub
sti
xor
fnstenv
push
mov
in
sbb
add
idiv
pop
add
test
(bad)
sub
mov
ds
ss
xlat
stc
cmp
xor
jmp
dec
nop
add
je
mov
mov
mov
add
dec
mov
pop
popa
pop
inc
xchg
xor
lahf
lds
adc
xchg
mov
add
or
or
jmp
pop
add
je
xchg
adc
outs
pop
inc
lds
ss
and
mov
imul
sub
jne
or
push
and
add
test
repnz
sahf
xchg
push
test
ds
mov
rcr
jae
mov
pop
imul
xchg
cmp
stos
mov
sbb
pusha
lahf
movs
or
imul
jg
ss
jb
add
lock
stos
mov
sub
pop
scas
movs
xchg
scas
add
sbb
ret
jne
dec
sub
add
push
push
add
mov
inc
pop
sar
mov
pop
push
das
jle
daa
adc
add
pusha
js
mov
mov
cmp
jo
ret
clc
xor
mov
add
clc
popf
nop
hlt
pop
nop
test
add
mov
es
or
test
leave
lods
push
jne
ss
dec
lods
and
gs
cmps
mov
sti
jecxz
push
mov
mov
test
mov
mov
pop
aas
into
xlat
jae
call
not
dec
in
fcmovnb
mov
nop
dec
and
jmp
test
jbe
gs
ja
sbb
inc
cmps
and
mov
push
xor
cmp
add
lods
ss
xor
mov
mov
sub
sbb
pop
sti
mov
or
retf
push
test
pop
mov
out
cs
jb
sub
loop
cli
in
test
cmp
add
js
sub
repz
cmp
aaa
sub
scas
int3
mov
push
fidivr
add
jp
stos
sub
or
pop
cmps
(bad)
pushf
and
jne
or
dec
cmp
cmp
or
mov
xor
xchg
pop
push
push
imul
inc
jo
mov
jns
ret
(bad)
pop
cmp
cmp
test
stos
call
xor
mov
mov
push
inc
lods
xchg
loop
mov
mov
sub
jmp
sub
mov
popf
not
mov
inc
add
sti
or
xchg
sub
adc
pop
fild
inc
dec
cwde
push
sub
cmp
dec
xchg
push
int3
cwde
bound
arpl
jg
fnstcw
sbb
mov
daa
lods
mov
mov
push
test
dec
mov
ret
dec
pop
sub
mov
add
dec
xor
ror
jb
add
stc
ret
and
mov
imul
xchg
call
mov
mov
movs
or
imul
ins
xchg
mov
fistp
cdq
cld
dec
jmp
stos
pusha
add
sbb
outs
outs
je
inc
aam
or
pop
es
jp
gs
inc
push
and
add
cmc
xchg
es
fdivr
xchg
add
fcom
in
into
es
pop
mov
daa
test
jp
mov
ret
cmp
dec
or
jno
or
sub
shr
clc
ret
add
cmp
jp
push
xor
inc
mov
push
adc
mov
sbb
mov
cs
ret
xor
rol
inc
ins
add
les
out
lds
mov
mov
or
(bad)
adc
mov
rdtsc
dec
push
or
jb
cld
jle
pop
or
jp
mov
mov
lods
pushf
cmc
mov
int3
fadd
add
inc
cmps
aas
sub
mov
pop
ja
fild
sub
retf
sub
push
mov
dec
inc
sbb
ins
xchg
shl
cs
ret
pop
sub
xchg
shl
push
xchg
shl
mov
mov
xor
sahf
cmps
retf
mov
cmp
out
pop
mov
mov
enter
addr16
adc
and
pshufw
xchg
jecxz
(bad)
arpl
xor
push
add
xchg
push
daa
inc
add
lds
sbb
dec
mov
mov
sbb
ja
pop
cdq
sbb
sub
test
pop
test
or
jp
xchg
call
jnp
or
adc
adc
and
mov
and
loop
fiadd
sbb
dec
in
movs
mov
or
stos
add
add
rcr
or
loop
pop
ins
cmps
data16
rol
fisub
int3
mov
mov
clc
mov
sbb
cdq
pusha
sbb
cmp
aad
push
daa
pop
mov
add
rol
(bad)
in
or
cmp
jno
add
pop
sahf
add
add
aaa
sbb
sar
loope
loopne
cmp
add
rol
nop
arpl
xor
test
and
cmp
and
pop
sbb
xor
imul
(bad)
mov
jo
push
mov
sbb
cmps
(bad)
retf
cmc
or
pop
pop
mov
mov
mov
bound
pop
lock
adc
pop
out
cmp
jns
dec
lods
mov
mov
jecxz
push
xor
or
add
add
inc
add
loopne
or
jecxz
jp
shl
call
sbb
adc
add
push
add
js
shl
ins
pop
stos
into
pusha
fstp
sbb
sub
std
faddp
xor
sub
inc
sbb
mov
add
add
(bad)
out
popa
jns
mov
mov
mov
add
push
add
add
ror
add
enter
stos
add
mov
shr
mov
mov
and
and
call
xor
cmp
dec
cdq
adc
jp
mov
ds
dec
add
int
lea
outs
js
lods
mov
das
dec
add
in
add
jne
in
or
add
mov
and
aas
xor
lea
add
cmp
and
repz
sub
mov
cdq
mov
push
(bad)
xor
sub
sbb
dec
mov
pop
xor
lahf
scas
mov
inc
sub
adc
sbb
add
test
aaa
dec
mov
push
add
cli
popf
bound
gs
or
loope
aam
and
nop
xchg
or
outs
ss
xchg
lods
cmps
out
pop
out
cwde
jp
fdivr
or
inc
lods
mov
pop
sti
fldpi
add
add
adc
pop
xlat
fild
dec
mov
in
add
add
aas
jmp
cld
pop
sti
add
lods
loope
enter
jmp
xor
rcl
scas
push
inc
cmp
cmps
lahf
ins
repnz
jmp
mov
dec
cmps
adc
and
(bad)
xchg
js
sbb
inc
js
push
mov
test
inc
xor
add
xchg
dec
nop
push
sub
xchg
inc
call
mov
jae
jne
xchg
sub
jmp
inc
adc
(bad)
push
sbb
jbe
retf
mov
and
movs
lods
fs
jecxz
and
jb
ret
inc
and
mov
rcl
mov
daa
ret
xor
xchg
in
fs
add
inc
pop
pop
sub
test
movs
push
mov
and
add
stos
mov
mov
push
add
scas
cmp
bound
test
push
ficom
and
xchg
inc
adc
sub
inc
lock
ret
or
mov
lods
pop
push
mov
dec
sbb
pusha
loopne
add
xchg
pop
xor
xor
sbb
adc
retf
inc
or
jae
mov
and
xor
leave
dec
inc
cmp
adc
or
rol
xchg
out
jmp
mov
jp
mov
dec
or
jbe
xor
loope
add
movs
imul
adc
pop
or
pushf
retf
add
cmp
push
adc
dec
sbb
and
shr
cmp
mov
mov
mov
or
or
xor
pop
push
pop
jo
cmps
cmp
and
mov
scas
pop
popf
shl
loope
bnd
adc
push
jg
adc
enter
or
sbb
dec
ret
add
cmp
rol
leave
xor
jge
adc
xchg
scas
add
jne
mov
mov
jne
xor
(bad)
and
xchg
dec
ins
fwait
movs
aas
fistp
and
js
test
fadd
or
mov
xor
xchg
cmp
mov
or
lds
and
inc
daa
repz
inc
bound
sbb
(bad)
fimul
cmp
xchg
aas
cs
js
test
and
pop
dec
sbb
add
xchg
mov
pop
mov
jno
xchg
xor
gs
add
mov
or
and
mov
mov
jo
and
add
(bad)
clc
and
add
cwde
mov
or
nop
hlt
rol
call
push
xchg
and
lock
push
push
iret
mov
lea
loopne
add
xchg
add
les
sbb
mov
call
mov
cmc
sbb
fs
loop
jb
mov
or
das
mov
or
lods
rol
dec
loope
shl
inc
and
fnstsw
mov
jecxz
or
imul
sbb
jo
adc
inc
dec
cmp
add
mov
xchg
sbb
(bad)
test
sbb
dec
add
add
adc
mov
loopne
add
in
ror
mov
out
dec
sub
or
dec
outs
jae
add
loopne
aaa
sbb
pop
in
push
and
mov
push
push
mov
rcl
push
imul
test
add
je
rcr
outs
and
into
adc
cmps
and
cmp
ins
ins
and
or
adc
inc
inc
mov
add
out
dec
or
push
add
xchg
cmp
test
inc
and
rol
push
inc
xchg
fimul
xchg
clc
dec
dec
lock
add
cmp
loopne
or
or
add
sub
pop
add
test
xor
or
dec
pop
dec
push
lock
jp
movs
pop
dec
fsubr
xchg
ins
daa
cmp
popf
jno
xor
ss
inc
adc
cmp
xchg
ror
pop
adc
das
fld
mov
jae
sbb
pop
xchg
mov
add
cld
add
clc
call
rol
xlat
xor
jmp
jno
adc
fwait
dec
js
dec
and
add
or
jns
add
mov
and
adc
pop
(bad)
test
mov
adc
push
adc
dec
test
and
add
inc
add
test
and
shl
ins
add
sbb
push
icebp
cdq
and
ds
in
outs
outs
sub
xor
and
adc
jnp
xchg
push
cmp
mov
sbb
ds
xor
dec
and
in
dec
mov
movs
add
jne
inc
sbb
sub
pop
(bad)
adc
xlat
or
jbe
mov
popa
dec
adc
int3
inc
aas
adc
xor
mov
fwait
pminub
cmp
or
mov
movs
lock
clc
nop
pop
or
add
cmp
pop
(bad)
adc
mov
add
mov
sbb
add
bound
and
or
add
call
shr
mov
and
add
pop
cmps
sbb
xchg
mov
push
nop
xchg
imul
sub
or
xor
lahf
mov
mov
ins
pusha
add
adc
jmp
pop
mov
add
dec
adc
mov
adc
jns
das
add
or
add
add
sahf
bound
sbb
pop
fidiv
push
cmp
ja
sbb
jmp
test
add
add
or
cwde
shl
cmp
pop
loop
ffree
xor
mov
dec
and
test
inc
mov
iret
jl
xor
xor
(bad)
push
adc
adc
xchg
inc
cmp
bound
push
jge
push
cmp
stos
or
ror
xor
aas
mov
or
dec
xchg
cmp
sub
dec
jp
add
jo
jne
out
mov
and
or
jno
sahf
mov
rcl
and
add
pop
xchg
pop
aam
cmps
jmp
add
inc
mov
nop
cs
or
add
movs
fwait
sub
add
add
sub
pop
add
addr16
lds
mov
sub
dec
inc
in
test
cmps
ss
xlat
and
xor
test
cwde
or
gs
dec
inc
mov
push
jmp
xchg
lods
stos
dec
popf
enter
aam
dec
pusha
out
inc
ja
xchg
cmp
mov
lods
les
pop
cli
enter
rcr
and
js
mov
sub
and
enter
cmps
test
push
ins
adc
add
inc
cmp
add
push
ret
xor
dec
and
add
rcr
setbe
add
sbb
pop
adc
mov
lea
aad
inc
inc
stos
(bad)
ss
jp
cmps
push
aad
pop
(bad)
and
shl
inc
push
inc
push
xchg
adc
add
cmps
jo
lds
movs
push
dec
push
sbb
mov
or
push
fmul
inc
(bad)
sub
sbb
pop
stos
lock
shr
xor
jmp
pop
cmp
into
cmp
jecxz
inc
mov
scas
add
sub
add
fmul
inc
popf
fisttp
xchg
cmp
push
loopne
das
pop
movs
retf
or
cmp
xchg
and
jge
push
jae
lds
mov
lods
inc
lods
jns
sbb
jb
inc
jmp
bound
ret
(bad)
lods
adc
jl
and
sub
cs
xor
xchg
add
pop
out
adc
inc
adc
je
sub
lds
xchg
jo
xor
lock
popf
mov
out
mov
mov
les
mov
das
inc
xchg
or
push
sbb
and
pop
fs
call
fld
jge
loopne
cmp
movs
out
sbb
pop
push
lods
jbe
sub
bound
cmp
in
aaa
leave
mov
fmul
pop
popf
mov
push
ja
adc
test
(bad)
jge
in
bound
ret
jl
inc
mov
sbb
fist
out
jnp
and
mov
sbb
add
mov
shl
int3
or
mov
test
lods
fisubr
sbb
ja
(bad)
ss
dec
jo
imul
sbb
mov
push
aaa
jle
cmp
inc
adc
mov
leave
and
pop
mov
pop
(bad)
neg
inc
std
cmp
call
and
sbb
mov
ja
das
push
fimul
or
aas
lods
enter
nop
call
sub
aaa
sbb
je
clc
mov
outs
mov
gs
sbb
je
vmovntpd
mov
jle
add
mov
stc
push
nop
jns
push
(bad)
inc
cli
(bad)
dec
lock
out
adc
test
add
xchg
mov
sub
or
jle
(bad)
xchg
jmp
push
(bad)
dec
and
inc
pop
xor
(bad)
adc
jne
sub
adc
loop
jecxz
(bad)
push
cli
pusha
cmc
outs
inc
sub
push
mov
add
xor
es
sti
sbb
jmp
(bad)
jbe
popa
jne
leave
test
data16
test
outs
add
cs
sbb
mov
cmovae
mov
scas
mov
addr16
and
pusha
ja
mov
scas
int3
cmp
push
mov
push
cmp
add
pop
inc
into
xor
or
add
das
sub
push
and
xor
xor
mov
loop
mov
leave
jl
(bad)
aam
fdiv
sub
inc
push
sbb
popa
pop
mul
cmp
retfw
(bad)
fild
push
in
inc
push
push
mov
shr
pop
(bad)
ins
cmp
daa
test
add
inc
push
dec
dec
push
popf
jo
sbb
ins
loopne
(bad)
inc
xor
inc
sbb
inc
sbb
adc
mov
test
inc
mov
adc
sub
data16
add
mov
push
dec
pop
outs
jne
or
pop
loope
push
xor
adc
mov
and
sbb
or
add
dec
mov
push
inc
ss
jp
or
popa
sbb
add
push
add
adc
xchg
mov
loopne
jle
xchg
loop
sbb
dec
stc
jp
mov
(bad)
push
popa
adc
mov
repz
push
inc
jo
and
out
mov
xchg
loop
or
call
pusha
add
push
nop
outs
push
jge
out
js
xchg
dec
adc
push
int3
stos
and
fs
imul
add
sub
pusha
add
pusha
add
adc
add
or
out
sbb
pusha
push
xchg
out
ins
int3
gs
mov
inc
aas
add
ss
add
or
jb
adc
repnz
add
add
push
push
inc
out
shr
mov
pop
push
and
pusha
mov
and
repnz
mov
or
pusha
push
(bad)
jo
cmp
lods
ret
fs
push
xchg
inc
pop
mov
inc
bound
add
sti
nop
and
(bad)
mov
mov
sbb
movs
add
mov
(bad)
xchg
cmp
add
add
cmp
and
pusha
xor
add
(bad)
and
inc
xor
ret
xor
xchg
pop
out
mov
repnz
add
sbb
xchg
jae
call
sub
pop
adc
sub
adc
push
loopne
dec
push
fs
pusha
add
cmp
inc
add
call
add
pusha
stos
push
retf
add
push
(bad)
add
inc
(bad)
cli
jmp
xchg
(bad)
adc
pop
in
adc
add
icebp
and
shl
xor
add
imul
or
and
xor
je
add
add
add
stos
pop
lar
pop
adc
ds
push
aam
repnz
or
inc
cmc
add
outs
add
loop
dec
inc
sub
sub
es
lahf
add
add
and
pop
or
mov
inc
add
dec
push
add
and
push
cmp
add
add
adc
add
sub
inc
xor
dec
add
and
mov
and
push
dec
add
add
arpl
push
inc
add
xchg
in
inc
lea
add
sbb
adc
pop
mov
inc
pushf
loopne
jb
sbb
add
inc
dec
mov
cmp
sbb
cmp
pop
push
inc
push
and
mov
add
pusha
push
jmp
ins
dec
cmp
push
push
aad
push
xchg
sub
adc
sub
xor
test
arpl
mov
add
add
pusha
add
sub
sbb
push
cwde
cmc
push
sub
bound
cmp
pop
out
add
das
sub
inc
adc
push
aas
or
pop
push
repz
(bad)
adc
xchg
icebp
add
ret
movs
xchg
or
sbb
or
loopne
add
inc
xchg
adc
pop
(bad)
push
popf
push
cmp
sub
sbb
push
hlt
mov
fmulp
sub
je
push
or
cli
jecxz
fdiv
adc
out
add
xchg
pop
cmc
add
out
xchg
jbe
bound
adc
pop
(bad)
push
outs
push
call
sti
push
add
and
and
inc
add
push
jns
hlt
dec
popf
neg
mov
dec
jg
adc
test
or
fs
imul
sub
or
xchg
or
mov
outs
and
sub
add
and
jno
xor
inc
rol
add
cmp
cmp
ss
(bad)
imul
adc
inc
bound
pop
sub
push
lahf
mov
add
adc
dec
fs
pop
movs
xor
sbb
es
arpl
mov
fwait
push
sub
add
ins
inc
inc
ds
xor
retf
dec
jbe
xor
add
out
xor
push
repz
push
jb
cmp
fs
add
add
in
retf
es
cwde
or
add
mov
push
les
add
imul
push
mov
jp
popa
adc
jo
sub
add
add
pop
inc
push
gs
xor
stos
les
xor
cmp
(bad)
daa
enter
jbe
ins
rol
xchg
or
mov
add
adc
imul
imul
test
ds
test
les
adc
and
xchg
(bad)
mov
xor
js
inc
push
stc
xor
jl
sti
xor
inc
jo
sbb
icebp
jne
cmps
pusha
jbe
pusha
pop
add
adc
add
inc
shl
push
(bad)
(bad)
sbb
imul
xor
pop
pusha
lods
add
test
sub
jno
es
lock
jmp
push
push
fst
cmc
add
inc
lods
sbb
movs
or
mov
cmp
jne
add
push
xchg
push
scas
push
(bad)
mov
repz
xchg
xchg
push
add
ja
loop
add
and
mov
jge
inc
mov
or
inc
fcmovnb
data16
ja
stos
adc
mov
mov
dec
fnstcw
scas
or
jo
and
inc
sbb
mov
mov
jns
popa
cmps
cwde
out
and
xchg
sbb
loop
dec
lock
cld
push
xor
mov
outs
leave
lea
add
mov
dec
and
cdq
lea
xchg
xchg
jae
cdq
arpl
mov
add
sbb
cwde
jns
jae
pop
xchg
xchg
call
adc
xchg
ret
test
dec
dec
mov
out
popf
ja
xchg
loopne
xchg
es
out
gs
mov
mov
jnp
movs
mov
and
xchg
adc
adc
pop
jge
jmp
cld
dec
push
add
popa
adc
mov
jae
mov
or
test
test
arpl
or
out
and
mov
jae
dec
or
inc
push
cmp
cmp
jecxz
cmc
inc
call
mov
test
dec
push
add
fwait
jge
(bad)
ins
or
jecxz
pushf
scas
mov
jns
sar
nop
nop
push
loope
int3
or
xor
inc
add
jne
jnp
ret
cli
mov
push
mov
mov
cmp
nop
xchg
dec
xor
mov
ret
xor
pop
sub
imul
test
in
test
pop
or
rcl
stos
mov
cmp
lods
test
pop
pusha
pcmpgtb
lea
pop
add
sbb
retf
neg
add
xor
ja
sahf
bswap
mul
aam
and
in
(bad)
jmp
jns
mov
dec
imul
nop
fcomp
or
adc
or
es
mov
(bad)
jnp
xchg
ret
lahf
jne
add
cmp
int
lds
fadd
inc
and
mov
leave
out
xor
push
neg
jnp
stos
jmp
vpmuludq
inc
ins
jo
int3
test
or
dec
aad
(bad)
in
popa
ror
aam
sbb
and
sbb
mov
rcr
push
test
cdq
pushf
jno
inc
sahf
out
pushf
int3
sub
sar
jbe
mov
mov
sub
(bad)
movs
mov
jl
nop
in
jo
add
daa
inc
xor
jns
pushf
or
mov
and
dec
test
dec
lods
dec
clc
xchg
sub
in
adc
sbb
mov
push
jns
mov
stc
mov
fisubr
rcr
rcr
cmps
xchg
mov
out
push
sbb
mov
push
mov
xchg
lea
dec
shr
ror
adc
inc
jg
mov
pop
mov
and
retf
sbb
cmp
fld
mov
loope
out
(bad)
pop
pushf
sbb
arpl
shl
loope
(bad)
sub
sbb
push
sbb
push
add
jno
or
sbb
ins
lods
pop
cmp
lods
je
sub
inc
mov
shl
ror
cwde
pushf
pop
pop
loope
adc
outs
fwait
mov
xlat
pop
push
mov
adc
cld
(bad)
ins
gs
ret
push
mov
pusha
adc
push
nop
push
mov
loop
add
iret
pop
add
sub
inc
inc
rol
lods
bound
and
adc
fst
adc
test
push
jp
call
mov
pop
sbb
test
int
fcomp
pusha
push
sbb
pop
add
jne
std
jmp
jl
lea
rcl
or
test
mov
(bad)
(bad)
mov
int
hlt
mov
inc
dec
mov
pop
mov
mov
lods
sub
fucomp
push
xchg
dec
cmp
sbb
mov
push
mov
adc
inc
test
cwde
and
iret
xchg
jb
dec
in
fld
mov
or
xor
inc
jle
dec
mov
sar
dec
and
dec
call
xor
xchg
in
sub
(bad)
sub
mov
xor
pop
popa
out
inc
xor
mov
and
sub
mov
rcr
(bad)
jo
repnz
cmp
dec
push
or
and
sbb
pop
cdq
mov
mov
sbb
(bad)
mov
leave
add
std
sbb
push
cmp
push
(bad)
push
mov
test
lods
fsubr
or
enter
or
sub
and
lock
mov
std
pop
add
push
sbb
push
jo
dec
mov
or
cmp
js
es
and
(bad)
jp
mov
pop
mov
sbb
movs
mov
stc
test
imul
push
push
adc
out
push
lods
pushf
in
popf
xchg
aam
fadd
mov
push
xchg
int3
mov
pop
push
ins
sbb
pop
mov
adc
das
mov
cmp
jl
fs
cmp
xchg
inc
mov
das
mov
mov
call
pusha
add
bnd
or
std
dec
loop
or
add
add
ds
imul
cli
and
pop
push
daa
and
scas
inc
test
mov
ds
xor
xchg
cdq
pusha
popa
ret
or
fdivr
pop
outs
jns
in
jmp
sub
mov
or
or
pop
or
inc
mov
out
test
push
mov
fwait
jbe
rol
and
loop
jmp
mov
movs
lea
outs
loop
movs
sub
scas
pusha
sar
enter
add
add
or
mov
xor
pop
in
or
cmc
pushf
or
dec
cwde
and
sar
sar
retf
stos
push
adc
in
xor
push
inc
mov
sbb
push
into
xor
dec
sbb
mov
mov
push
js
push
pop
jno
add
mov
push
xchg
jmp
push
pop
fimul
(bad)
push
mov
xor
sbb
jecxz
xor
popa
dec
pop
xchg
jo
js
lds
sbb
fs
(bad)
dec
jbe
rol
xor
ret
mov
in
dec
not
pop
and
and
into
hlt
pcmpeqd
add
mov
pop
fsub
ja
lods
jbe
and
das
stos
fld1
cmps
jp
inc
hlt
nop
pop
adc
and
push
clc
pop
retf
ins
pop
in
inc
outs
jne
lds
in
dec
sbb
fsub
mov
pop
push
lea
cmp
cbw
cmps
add
xchg
adc
or
mov
rol
sbb
push
lods
push
or
add
mov
retf
xchg
inc
sbb
movs
loopne
fild
aam
add
dec
sbb
and
inc
mov
push
out
loope
or
or
mov
push
push
aad
push
sbb
pop
test
int3
shr
leave
adc
sub
mul
mov
sbb
jp
cdq
gs
pop
xchg
push
pusha
int3
icebp
fild
add
push
bound
add
xchg
or
jmp
xchg
add
aam
sbb
adc
add
es
add
scas
jmp
dec
icebp
or
cmp
dec
mov
rcl
push
sbb
pop
mov
sbb
in
les
sub
mov
xor
or
test
js
mov
xor
fwait
jne
xor
sub
mov
hlt
call
or
sbb
xchg
imul
push
mov
mov
push
imul
hlt
movs
xor
ins
mov
or
push
pop
sbb
shl
clc
push
loope
fsub
xor
jne
pop
call
dec
inc
mov
dec
push
call
add
loop
mov
xor
pandn
daa
dec
test
push
inc
jmp
iret
icebp
inc
in
aas
and
add
pop
xor
mov
push
pop
cmp
xchg
inc
mov
or
push
pop
outs
and
test
aad
outs
pop
sbb
jle
or
inc
lods
dec
(bad)
fcmovu
aad
(bad)
mov
mov
pop
add
fldcw
cli
mov
std
mov
xchg
sbb
add
mov
push
sbb
add
inc
or
add
adc
dec
add
push
mov
sbb
jnp
add
xchg
or
dec
pop
push
jl
cs
jb
xchg
in
mov
push
pop
test
mov
push
out
add
nop
sbb
js
pop
adc
push
sbb
mov
cld
dec
fisttp
fbld
bound
ja
pop
imul
mov
mov
imul
ja
lock
test
xor
dec
mov
sub
setne
sbb
mov
or
les
cmp
jo
int
dec
add
adc
aaa
pop
scas
(bad)
retf
adc
int3
sahf
push
nop
push
cwde
add
enter
xchg
and
xchg
dec
(bad)
hlt
push
sbb
adc
add
jo
inc
je
add
pushf
rcl
or
push
add
adc
adc
mov
in
push
mov
ret
mov
loop
hlt
adc
xor
xchg
or
adc
bound
adc
call
stos
sub
sbb
inc
lock
test
js
or
shl
mov
mov
xor
nop
not
movs
mov
xor
ret
or
stc
mov
pushf
add
lds
les
xor
cmps
jnp
or
in
push
pop
sub
mov
adc
adc
cmp
rol
call
loopne
adc
push
test
add
bound
bound
xchg
(bad)
pop
inc
xchg
jge
repz
inc
sbb
sub
mov
add
and
test
test
hlt
adc
or
pop
(bad)
imul
mov
jno
in
mov
add
in
push
sbb
mov
or
repz
add
mov
adc
xor
adc
ss
in
xor
out
inc
(bad)
pop
cwde
ds
outs
jp
push
leave
es
push
push
adc
mov
inc
add
mov
jmp
push
les
adc
arpl
and
cmp
adc
aas
cwde
(bad)
fld
jecxz
pop
out
lods
push
mov
or
inc
and
dec
push
addr16
and
inc
xchg
loopne
sub
test
add
hlt
aaa
fmul
pusha
pop
mov
sbb
sub
cwde
xor
outs
addr16
pop
das
and
or
adc
add
mov
popa
scas
retf
aam
unpcklps
dec
or
and
cmp
sbb
lock
push
sbb
vcvttss2si
xchg
xlat
test
lds
int
jb
hlt
pop
sub
rol
in
xchg
pop
nop
push
fs
enter
and
cmps
sub
in
mov
sbb
stos
push
les
pop
rep
xor
jecxz
test
aam
xchg
jmp
(bad)
nop
sbb
aad
dec
jg
mov
dec
es
mov
std
int
bound
hlt
and
cdq
pop
out
(bad)
adc
scas
ins
sub
add
fild
scas
jo
hlt
jmp
jae
pop
lea
mov
sub
xlat
cwde
stos
cmp
movs
jmp
les
int
les
push
xor
sub
push
aad
jp
pop
xor
call
and
mov
pusha
test
mov
retf
xor
daa
cli
xor
pop
movs
inc
and
push
push
fs
sbb
lods
fnstenvw
test
je
daa
rol
loope
xor
pop
mul
(bad)
sbb
rcr
ins
jb
xchg
fsub
sub
outs
push
in
mov
jbe
mov
(bad)
je
sub
fwait
(bad)
shl
(bad)
movups
cmp
das
and
cmp
add
retf
pop
int3
gs
add
lds
push
jb
bound
push
std
inc
pop
int3
mov
test
cmps
adc
mov
pop
test
icebp
xor
xor
inc
call
dec
xor
cmc
(bad)
rol
mov
lods
and
xchg
addr16
cs
cmps
jno
mov
mov
xor
and
and
test
xchg
mov
dec
fld
sbb
xor
mov
add
add
mov
fdiv
cmp
pavgb
ret
in
cld
adc
nop
jno
ins
pop
pop
dec
xchg
mov
fnstenv
mov
add
xor
rcr
cmp
test
jns
rol
mov
push
(bad)
xchg
out
jmp
ret
add
call
mov
into
jmp
(bad)
nop
inc
jmp
adc
popf
sbb
pop
fadd
hlt
inc
or
inc
movs
sbb
sub
add
dec
jno
inc
shl
(bad)
and
call
pusha
add
loopne
or
inc
fisttp
dec
push
clc
fisub
sub
jns
fsubr
cwde
icebp
into
inc
xor
sbb
shl
cld
ret
push
pop
int3
push
adc
dec
sti
jge
mov
or
cmp
adc
test
or
pop
int3
and
repnz
ss
push
cs
adc
xchg
loope
mov
int3
inc
in
adc
cld
push
jmp
lds
mov
adc
xchg
sbb
out
pop
add
add
sbb
sbb
inc
add
inc
rol
add
enter
shl
pop
push
push
(bad)
test
mov
mov
repnz
scas
movd
mov
adc
push
adc
pop
xor
fadd
sbb
xor
mov
int3
call
loope
jne
pop
and
sbb
sub
add
pusha
or
inc
xor
mov
sub
add
add
retf
cmp
mov
mov
inc
pop
outs
pop
xor
jg
xchg
adc
les
pop
inc
adc
test
sar
dec
out
fld
and
inc
push
inc
fwait
adc
leave
push
jbe
add
push
pop
aad
and
js
pop
pushf
add
inc
sub
add
fadd
inc
jle
pop
xchg
sbb
add
retf
mov
inc
mov
and
mov
adc
je
inc
inc
rol
xchg
adc
inc
pushf
pop
inc
out
fisttp
push
aam
(bad)
ror
mov
dec
aam
and
inc
fxch
add
mov
inc
jle
aaa
cmps
movs
or
or
outs
fld
pushf
movs
or
arpl
jmp
xchg
dec
lahf
pop
pop
pop
adc
movs
test
or
bound
je
in
sbb
icebp
push
xor
in
jp
aas
fadd
mov
scas
mov
jl
jl
or
sub
push
pushf
sub
aaa
mov
or
ror
adc
fidivr
or
cs
dec
or
es
lahf
inc
call
mov
sub
test
or
rol
paddb
adc
jl
ins
jb
es
xchg
add
dec
add
xchg
pop
jp
cmp
out
ret
jp
(bad)
movs
and
jecxz
cli
or
mov
dec
adc
std
and
jne
pusha
push
xchg
jo
and
aam
adc
cmp
jns
out
jmp
adc
jns
out
(bad)
jno
adc
pop
jb
add
(bad)
push
push
push
fisubr
ror
xchg
imul
xor
gs
push
jl
sub
sub
xchg
mov
dec
jg
xchg
mov
out
xchg
jo
xchg
cdq
sub
inc
sub
inc
inc
cmp
or
cmp
adc
test
pop
add
test
int
cmp
or
retf
adc
add
jo
add
shl
ss
xchg
int
add
push
sub
rcl
pushf
ret
dec
push
dec
mul
cmp
daa
jg
(bad)
jo
push
push
or
add
ror
xor
add
inc
or
rcr
shl
sbb
push
mov
lea
pop
inc
xchg
call
push
xchg
mov
cmps
jns
rol
inc
mov
inc
xor
sub
jl
mov
(bad)
mov
mov
pop
out
dec
and
mov
pusha
sbb
in
adc
push
cmps
add
fst
adc
adc
adc
test
add
shl
and
adc
adc
sahf
outs
push
ret
out
movs
gs
cwde
sub
sar
add
test
mov
or
lea
or
call
xchg
mov
push
bound
pop
add
or
mov
cmp
mov
mov
aad
jmp
push
ds
xchg
inc
add
call
lods
add
inc
retf
add
xor
and
pop
pop
ffreep
into
push
dec
jb
outs
cmp
shl
sub
stos
fild
dec
lock
arpl
inc
sbb
dec
jo
or
aam
cld
add
xor
pop
dec
add
outs
adc
mov
(bad)
outs
inc
inc
add
loop
stos
ja
add
ins
lods
fsub
retf
sub
fisub
sub
cs
inc
jmp
and
iret
test
inc
in
fstp
and
test
sub
cmc
mov
popa
xchg
cs
sbb
aad
cmp
mov
leave
popf
mov
and
xchg
ror
sub
ins
xchg
into
bound
popa
mov
stos
jo
test
push
call
psllw
and
test
sub
push
mov
test
les
sub
fcom
push
add
sub
add
mov
pushf
fadd
cmp
ins
add
adc
mov
test
inc
push
ins
in
sbb
out
pslld
sub
popf
mov
test
fs
sbb
push
lods
out
cld
(bad)
in
das
mov
aad
dec
test
add
pop
dec
fnsave
outs
inc
loop
dec
xchg
sub
icebp
push
and
sbb
xchg
jl
es
cs
and
sub
sbb
fldenv
mov
inc
ror
sbb
call
inc
pop
push
cmp
or
xchg
or
sbb
or
ret
aam
into
jp
daa
inc
adc
push
jnp
out
or
jmp
cli
inc
mov
test
mov
cmp
popf
pop
jecxz
cmc
add
mov
aam
mov
or
aaa
stc
(bad)
outs
rol
ins
and
pop
js
inc
mov
(bad)
pop
pusha
push
pop
adc
xlat
mov
adc
cs
into
(bad)
loopne
fcos
iret
adc
fsubr
push
inc
int3
rcl
pop
cmps
inc
rcr
xchg
adc
and
and
sub
sbb
outs
or
icebp
inc
jo
rol
test
mov
mov
outs
das
lgdtd
ficomp
push
dec
icebp
sub
call
push
inc
mov
or
out
ins
jmp
aad
imul
inc
xlat
repnz
test
pop
or
push
jmp
push
out
push
adc
stos
push
sbb
inc
and
add
shl
inc
sbb
loope
scas
mov
daa
inc
mov
push
mov
outs
loop
sbb
rol
test
sbb
pushf
add
sbb
push
inc
cs
add
int
sahf
pop
dec
test
mul
dec
adc
jge
cmp
push
or
arpl
outs
lods
outs
jmp
mov
mov
push
or
or
push
mov
or
adc
xor
dec
adc
aad
test
into
and
cmc
add
sub
mov
pop
iret
mov
jg
retf
gs
mov
icebp
bound
sbb
add
xor
pusha
inc
sbb
or
and
mov
dec
and
push
and
sbb
loope
inc
and
pop
sbb
pop
aam
dec
adc
xchg
add
push
add
xchg
pop
jo
lea
push
xor
addr16
inc
in
fs
adc
add
stc
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
leave
cld
or
xor
test
dec
movs
push
(bad)
aam
sar
imul
mov
or
lods
ja
sbb
test
sbb
sbb
xchg
xchg
outs
add
push
fwait
pop
pop
pop
pop
pop
mov
sub
cmps
arpl
push
mov
addr16
jl
ins
sbb
mov
sbb
sbb
adc
dec
test
xchg
xchg
xchg
fwait
dec
push
fwait
mov
mov
pop
inc
bound
or
fisubr
popf
mov
or
lods
xor
leave
mov
(bad)
(bad)
inc
mov
sar
push
test
lea
inc
inc
push
bound
sub
xor
xchg
push
cmp
lods
mov
(bad)
out
inc
jns
sub
xor
dec
adc
cdq
sub
or
sbb
adc
call
pop
popf
cs
sbb
xor
popf
dec
jns
fsubr
push
arpl
cmps
fdiv
cmp
dec
int
dec
jbe
mov
add
and
sub
mov
(bad)
inc
and
xchg
mov
aad
loope
pusha
lds
jmp
cmp
mov
inc
mov
enter
es
sbb
jp
movs
mov
dec
xor
mov
fisubr
ins
mov
cs
or
jb
jne
push
outs
(bad)
ss
push
enter
ins
jb
jae
fs
sub
adc
or
push
xchg
ins
es
push
cmc
adc
cmps
call
ds
xlat
fisub
clc
and
hlt
cwde
mov
out
and
fnsave
inc
adc
push
aad
mov
daa
adc
pushf
cs
lock
loope
sbb
sar
push
ins
mov
mov
or
pop
sub
xchg
jae
pusha
adc
sbb
push
sub
loope
add
clc
les
add
fstp
(bad)
lock
pop
mov
and
jbe
mov
repz
push
ins
fadd
movs
pop
and
enter
or
mov
jo
adc
test
rcr
jae
popa
rol
movs
aad
movs
cmp
jge
aad
jb
mov
sub
cwde
cmp
aaa
cmp
add
or
add
and
mov
pusha
sbb
stos
jecxz
lea
dec
cmps
dec
dec
int3
lds
test
mov
xchg
fld1
mov
jp
fiadd
add
jo
in
mov
cmp
imul
test
xchg
mov
add
mov
stos
add
lods
jno
sbb
push
loopne
cmp
call
stos
jecxz
dec
lods
mov
dec
xor
stos
imul
inc
mov
dec
or
adc
jo
pop
sbb
cli
xor
or
cvttps2pi
sbb
ret
dec
scas
pop
sbb
mov
mov
adc
int
out
mov
movs
push
fsubr
xor
stos
dec
sbb
shl
sub
sub
push
push
jl
bound
or
fild
add
ror
jmp
(bad)
push
je
add
std
push
dec
xor
pusha
push
mov
repz
fs
sub
xor
hlt
pop
out
mov
add
add
cmp
shl
scas
stc
in
push
mov
sub
inc
ret
ret
lods
cmp
push
sbb
movs
(bad)
cs
adc
retf
retf
xor
out
cmp
push
jmp
(bad)
call
or
test
cs
pop
pop
sub
and
or
out
lea
fistp
pusha
sub
fcom
(bad)
aas
ins
test
or
lea
outs
fadd
pop
xchg
shl
cwde
scas
outs
ja
sbb
mov
add
jmp
daa
pop
add
nop
mov
sbb
repz
ja
push
push
mov
rcr
xor
pop
mov
sbb
lods
xor
mov
and
fs
mov
and
pop
or
stc
shl
sub
bound
imul
adc
xchg
test
and
mov
push
jo
leave
imul
pusha
ror
jmp
call
hlt
push
add
add
mov
pushf
adc
clc
mov
ins
call
pusha
and
fsubr
in
cs
sti
sbb
inc
xor
mov
xchg
add
cmp
dec
pusha
cmp
jmp
mov
dec
cdq
test
inc
mov
mov
call
push
cmp
dec
retf
pop
ficom
cs
cmps
add
xor
add
cmp
xor
mov
jb
loope
inc
(bad)
stos
xchg
jge
sbb
int
test
or
add
add
inc
jo
mov
addr16
bound
add
pushf
add
adc
jecxz
pop
ret
aas
ret
sahf
shl
push
pop
mov
xlat
or
xor
mov
repnz
sar
inc
inc
cmp
in
dec
bound
add
xor
mov
aaa
mov
inc
sbb
sub
dec
push
loopne
(bad)
dec
push
mov
cdq
add
in
lea
mov
retf
hlt
cmps
dec
call
or
dec
push
test
lods
loopne
add
jmp
inc
inc
dec
retf
imul
div
stos
(bad)
cld
jmp
(bad)
icebp
fwait
inc
inc
stos
pop
fldenv
jg
aam
or
imul
lods
sahf
xchg
lahf
popa
int
pop
cmc
or
mov
cs
cwde
sub
imul
dec
pop
jne
xlat
mov
adc
iret
add
sub
pmulhw
mov
retf
jae
mov
mov
push
ins
(bad)
in
xchg
dec
or
cli
js
push
pop
mov
xor
jb
mov
gs
inc
jae
and
ins
lock
cmp
outs
loopne
mov
push
sub
lock
cmp
or
gs
iret
pop
jmp
and
ins
mov
cmp
loope
mov
neg
push
adc
cmp
mov
int
xor
dec
and
imul
loopne
stos
je
aad
ficomp
jp
sub
push
dec
add
mov
dec
pop
dec
xor
lods
into
and
mov
arpl
das
lods
adc
mov
ja
(bad)
or
js
inc
aad
(bad)
lock
cmps
push
mov
(bad)
push
and
mov
jecxz
jo
push
push
cmp
cmp
dec
and
scas
rcr
and
inc
mov
add
jmp
fsub
adc
js
neg
cwde
push
ss
(bad)
out
repz
add
retf
rcl
je
dec
sbb
out
fmul
pop
sbb
rcr
lahf
idiv
out
xchg
jns
out
xor
mov
add
or
cmp
mov
stos
dec
dec
and
mov
dec
out
mov
out
cdq
sar
in
in
jge
sbb
cmp
cmp
jp
xchg
cmp
cwde
in
mov
test
and
mov
cli
or
daa
rcl
not
lock
mov
repz
push
fadd
out
xor
and
or
fwait
jbe
test
push
fwait
(bad)
fisubr
(bad)
loopne
jo
(bad)
jge
add
xor
test
inc
std
outs
and
into
cmp
out
ffreep
dec
out
inc
or
add
std
test
sbb
loope
jmp
inc
in
xor
xor
cmp
mov
and
inc
in
jbe
pop
pusha
adc
shr
mov
ja
fdiv
dec
mov
js
out
jbe
in
je
retf
mov
jae
pop
pusha
leave
jo
stos
mov
test
addr16
repz
cs
js
sub
lock
xor
test
retfw
out
addr16
fld
in
sub
fcom
mov
cmp
call
call
aas
daa
outs
outs
(bad)
repnz
adc
sbb
or
idiv
pop
loopne
xchg
sti
sbb
push
in
and
jmp
xor
xlat
dec
xchg
pop
and
jmp
mov
add
jnp
addr16
outs
add
std
in
xchg
xchg
scas
lock
mov
out
inc
fld
cld
ds
mov
or
adc
cdq
sub
jp
xchg
add
movs
das
rol
ins
(bad)
jge
inc
dec
add
sub
sub
cmps
dec
out
adc
jns
add
cmps
add
ds
ret
(bad)
bound
adc
int3
xlat
jl
inc
js
inc
mov
inc
xor
sbb
mov
inc
daa
pop
xchg
xchg
or
xor
and
mov
loope
push
xor
(bad)
inc
push
pop
data16
sub
daa
sbb
sbb
jbe
xlat
add
sub
bound
out
xor
jle
push
scas
add
pop
mov
data16
pusha
add
lock
pop
jg
mov
sbb
inc
sbb
dec
jmp
pop
add
adc
push
sub
pop
xor
or
sub
lds
cmp
or
cmps
xchg
clc
push
jp
test
or
not
out
pop
add
adc
ja
jge
add
pop
test
mov
cmp
pop
jle
add
dec
cmps
sar
nop
call
inc
mov
outs
mov
pushf
enter
sbb
mov
add
xchg
or
mov
or
sub
jo
imul
xchg
jg
call
not
jmp
add
push
rcr
jle
dec
mov
pop
gs
push
and
sbb
jmp
mov
es
mov
mov
jg
xchg
or
jmp
les
div
inc
cmp
cmp
mov
and
and
cwde
es
daa
(bad)
out
(bad)
(bad)
jae
popa
loope
mov
je
adc
or
idiv
adc
mov
test
add
and
in
gs
jae
es
xor
xchg
sbb
xchg
movs
gs
add
adc
dec
pop
(bad)
(bad)
test
inc
push
xchg
jge
je
aaa
cdq
sub
mov
(bad)
add
adc
nop
add
xchg
inc
test
les
sahf
mov
xchg
sub
ror
stos
inc
xchg
mov
leave
inc
inc
inc
movs
mov
aam
or
add
rol
jmp
push
call
test
or
xor
xor
and
mov
add
xor
movups
imul
leave
ja
sar
xor
push
mov
dec
push
outs
push
mov
enter
jns
ins
xor
inc
push
(bad)
and
add
jle
js
popa
movs
xchg
or
leave
cmp
cdq
call
mov
jbe
nop
inc
imul
test
mov
or
cmp
push
outs
and
cmp
inc
lahf
mov
push
mov
cdq
imul
cmp
(bad)
cli
call
mov
cmp
add
dec
sahf
out
es
nop
dec
push
and
test
jg
xor
xor
lahf
xor
ins
adc
fldenv
rcl
cmp
push
sbb
cmp
cdq
mov
inc
add
push
cdq
int3
sbb
cmp
fiadd
inc
dec
add
mov
rcl
cwde
push
test
cmp
cdq
cmp
jo
jge
add
jno
inc
icebp
add
and
xchg
bound
sar
and
or
and
xchg
sub
test
xchg
jae
mov
dec
nop
xchg
sbb
sbb
cdq
(bad)
imul
add
mov
jb
add
pusha
xchg
inc
mov
inc
adc
add
in
mov
lods
aaa
test
ret
inc
nop
pop
or
xchg
lods
push
mov
mov
call
dec
push
inc
inc
movs
mov
cdq
xchg
sbb
cmp
movs
push
enter
cdq
int3
and
add
pop
sub
in
mov
or
jmp
add
inc
cdq
mov
cmps
daa
jo
sbb
xchg
add
(bad)
int
jae
test
add
aam
dec
xchg
cmp
retf
test
xchg
test
loope
movs
nop
cmps
popf
lea
pop
cmps
call
scas
(bad)
scas
and
pop
sub
lahf
popf
cmp
test
and
test
out
sbb
dec
pusha
add
add
jo
enter
ja
call
xchg
pop
or
cmp
pushf
mov
push
push
fdivr
push
sbb
pop
test
mov
or
push
adc
mov
add
add
add
cmp
sub
mov
repz
or
mov
fwait
or
sub
mov
inc
push
push
add
mov
jle
mov
jnp
adc
cld
dec
movs
mov
or
popa
add
mov
xor
or
add
add
mov
xor
rcl
test
lock
lock
jmp
mov
retf
add
sbb
jo
cmp
cmp
mov
jmp
and
cmps
jno
add
mov
push
cs
add
mov
imul
mov
(bad)
mov
cwde
ins
adc
mov
jmp
sub
mov
mov
mov
or
push
inc
sub
sbb
stos
cmps
mov
mov
jmp
sti
sbb
inc
xchg
lds
mov
xor
pushf
lods
bound
cwde
adc
pop
ins
iret
pop
les
les
out
push
imul
daa
nop
xchg
pop
jnp
mov
mov
cmp
mov
test
mov
imul
mov
fdivr
nop
add
mov
in
lahf
int
add
xor
jae
inc
int3
push
sti
ds
add
adc
ins
pushf
dec
mov
leave
mov
fstp
sbb
std
aam
jae
stos
adc
cs
clc
push
cmp
xor
xor
mov
cmp
xchg
jl
mov
sbb
mov
pop
movs
sub
cmp
jnp
imul
ins
clc
mov
add
fwait
inc
ss
mov
retf
mov
cli
test
imul
int
jmp
add
mov
pop
mov
imul
mov
adc
js
addr16
jmp
iret
aam
fs
mov
jle
jae
imul
cwde
ins
(bad)
int3
mov
rol
mov
jmp
shl
add
add
add
loope
shl
pop
(bad)
pop
jns
cmc
or
sbb
into
jmp
add
jp
shr
add
dec
sbb
mov
aad
icebp
arpl
retf
sub
pop
mov
fmul
pop
add
mov
stos
mov
inc
into
cmc
stos
mov
sbb
in
mov
ins
add
fcmovbe
sbb
stos
and
into
in
into
xor
loopne
shr
stc
cmp
adc
stos
ins
mov
xlat
xchg
cmp
xchg
mov
xchg
add
lock
push
fcomp
rol
or
add
int3
adc
xor
sub
add
and
mov
sbb
mov
retf
add
cdq
cwde
sbb
in
(bad)
retf
sbb
mov
(bad)
ins
or
jb
int
cli
mov
stos
rcl
aad
or
data16
(bad)
jp
jl
ins
test
add
xchg
or
and
sub
cmp
cli
mov
call
add
xor
pop
mov
sbb
lods
test
mov
jo
loop
stos
scas
fstp
scas
int
sbb
add
lods
sar
in
(bad)
retf
mov
sub
xlat
inc
sub
enterw
test
cli
dec
push
dec
inc
mov
add
jo
fsubr
imul
mov
push
cmp
and
aas
shl
ins
jnp
jmp
fstp
add
add
mov
sbb
daa
loop
mov
or
int3
loopne
or
add
repz
mov
loopne
imul
cmp
fiadd
jno
(bad)
push
call
adc
adc
pop
inc
or
add
add
mov
jp
loop
jge
inc
cwde
add
push
add
jo
xlat
lods
add
and
push
or
sahf
out
mov
std
fwait
retf
lea
xchg
sbb
add
jge
or
cmp
loopne
int
pushf
into
mov
cli
mov
icebp
mov
stos
mov
jl
mov
mov
push
push
adc
adc
sbb
sbb
add
sbb
std
add
xchg
or
add
cs
xor
fidiv
add
sub
or
je
cmps
fisttp
adc
push
enter
loopne
push
jmp
cmps
ds
(bad)
call
dec
(bad)
repz
xor
push
mov
xchg
push
add
xor
lea
adc
sbb
add
enter
pop
stos
(bad)
mov
mov
adc
xor
in
xchg
mov
dec
and
mov
(bad)
jmp
cmp
stos
cli
stos
popf
or
cmp
jmp
sub
lea
add
mov
adc
sub
sbb
in
fadd
aad
xchg
push
mov
repz
cmp
sbb
cmps
jmp
into
xchg
inc
push
mov
or
(bad)
mov
fbstp
pop
imul
sub
fwait
jno
movs
icebp
call
cmp
lock
and
inc
xor
sub
shl
lods
(bad)
dec
ss
inc
ins
data16
retf
mov
fstp
xchg
sbb
fild
add
jmp
test
hlt
adc
add
jmp
mov
js
xor
fwait
xchg
test
outs
call
pop
mov
sub
retf
mov
loop
sti
mov
sbb
adc
fild
mov
scas
ins
(bad)
cli
das
jmp
add
imul
out
stos
test
icebp
or
popf
fsubr
pusha
add
shl
mov
div
in
pop
add
test
pop
push
cs
aas
cmps
xchg
sbb
jmp
sub
dec
call
mov
or
pop
gs
int3
jmp
or
dec
xor
jmp
test
push
pop
loop
mov
adc
and
jecxz
pop
add
rol
in
test
inc
and
ret
int
mov
dec
and
and
inc
shl
and
push
xchg
stc
cmp
sub
test
xor
data16
or
and
loop
aad
mov
mov
ds
ficom
popa
xchg
xor
bnd
adc
rol
or
bound
inc
rol
pop
mov
inc
add
cmp
cwde
test
xor
push
ja
xor
dec
test
rol
mov
dec
inc
outs
sbb
shl
sahf
or
in
lods
xlat
enter
stc
mul
mov
je
adc
add
or
and
xchg
lods
into
xor
icebp
xor
mov
push
pusha
fisub
inc
xchg
clc
neg
test
daa
xchg
ror
adc
sub
mov
call
lahf
jmp
std
test
or
mov
pop
xchg
or
dec
std
and
jae
or
or
push
adc
inc
inc
mov
push
loop
fsubr
push
adc
rol
or
dec
inc
sub
pop
xor
add
int
stc
cli
add
pop
in
xor
inc
pop
xchg
das
invd
rcr
pop
mov
imul
and
adc
aam
lfence
sbb
mov
adc
add
xchg
inc
popa
outs
lods
fnsave
sub
xchg
push
cmp
pop
and
xchg
cs
add
adc
loopne
sbb
in
and
fisubr
inc
cmp
mov
add
fwait
adc
adc
add
dec
cmp
sub
dec
out
das
cmp
add
inc
stos
dec
pusha
loopne
sub
push
movs
and
or
sbb
bound
and
(bad)
mov
in
cwde
cs
adc
sbb
adc
jo
adc
mov
mov
(bad)
repnz
repz
(bad)
pop
popf
repnz
dec
inc
add
sub
or
js
or
ror
pop
or
mov
adc
jne
dec
and
add
ins
xor
ror
inc
and
cmp
push
and
mov
ds
das
mov
aad
sahf
inc
das
and
aaa
add
sub
das
push
add
sub
stos
repnz
xor
inc
mov
adc
fcom
dec
stc
mov
mov
sbb
jmp
pop
and
add
push
nop
sub
nop
sbb
fst
outs
add
mov
pusha
scas
cmp
inc
and
ins
xor
jo
sbb
cmp
popf
loope
add
inc
pop
leave
xchg
mov
bound
pusha
pop
subps
inc
sar
popf
jae
or
and
call
stos
push
sbb
movs
adc
jb
mov
mov
ins
nop
inc
adc
cmps
(bad)
mul
imul
add
aaa
xchg
push
push
loope
add
ins
push
xchg
call
sbb
mov
add
sbb
sar
movs
push
add
add
add
jo
inc
ins
mov
and
ins
sub
xor
xor
(bad)
jmp
inc
paddsw
outs
ins
xchg
xlat
push
xor
fst
into
ror
fldenv
adc
sbb
jno
dec
jns
mov
cmc
call
jmp
mov
push
push
hlt
mov
cs
(bad)
nop
imul
mov
enter
adc
jbe
sti
ficomp
test
add
add
sbb
aaa
xchg
mov
inc
pop
and
jecxz
shl
add
sbb
pop
and
int3
dec
cmp
mov
add
cdq
mov
pop
es
pop
push
cmp
mov
or
inc
xchg
push
xor
add
jmp
mov
pop
sub
mov
int
(bad)
adc
fsub
sbb
add
popa
add
mov
jg
leave
das
jno
push
hlt
dec
out
sbb
xor
xor
fsubr
js
xchg
fld
jmp
ins
ret
repz
adc
or
cmp
push
push
mov
fs
ror
or
push
ins
test
dec
push
scas
add
stos
rcl
sbb
jo
or
mov
sub
pushf
inc
add
repz
jns
inc
dec
mov
out
jl
inc
fldenv
mov
dec
xor
push
pop
xor
dec
pop
shr
loopne
inc
and
xchg
enter
sbb
add
push
jecxz
or
nop
mov
add
cdq
rcl
out
sub
xor
add
jo
jne
sub
pcmpgtb
or
dec
data16
ins
xchg
or
inc
xchg
mov
inc
or
sbb
sub
iret
mov
cdq
jae
cmp
loop
loope
cmp
add
or
arpl
movs
scas
inc
push
add
inc
or
popa
sub
mov
adc
sub
ficom
ret
sbb
push
xchg
shr
push
leave
pusha
lahf
imul
pavgb
sbb
xor
sub
sub
sub
adc
rcr
add
add
test
inc
mov
mov
push
adc
mov
adc
jp
out
sub
cmp
xor
cmp
cmp
iret
mov
pop
or
adc
push
jge
repnz
idiv
aad
int3
or
in
popa
add
je
call
add
in
ret
push
and
inc
dec
xchg
pusha
out
stc
push
or
mov
hlt
add
out
pop
cmp
(bad)
imul
add
push
retf
push
scas
aam
out
push
cs
jmp
js
mov
ret
and
test
xchg
lds
popf
das
pop
sub
pusha
add
add
pop
outs
sbb
xor
jle
cmp
mov
add
aaa
out
mov
or
pop
adc
cli
rcl
mov
int
sub
(bad)
and
mov
fcomp
jge
call
add
dec
mov
mov
sub
jge
loop
xchg
test
pusha
cwde
jmp
or
rcl
pop
call
push
lods
movs
inc
dec
add
sbb
jg
inc
pop
push
cwde
test
push
mov
xchg
mov
icebp
add
aaa
jecxz
mov
into
and
pop
or
add
arpl
leave
pop
add
add
jno
test
and
fild
inc
adc
cmp
out
dec
sbb
aas
nop
jmp
imul
leave
cmp
push
mov
sub
out
stos
xor
cmp
dec
(bad)
fistp
xchg
and
stc
mov
mov
adc
ret
nop
jecxz
add
call
cmc
and
cwde
pusha
call
fld
pop
je
test
dec
dec
loopne
not
add
es
mov
jbe
sbb
rol
mov
sbb
sub
cmp
arpl
lea
add
inc
add
hlt
in
and
loopne
fild
mov
in
sub
rcl
neg
adc
inc
sar
dec
shl
pop
jle
mov
mov
(bad)
(bad)
cwde
push
aad
xchg
sub
add
fadd
push
or
mov
loopne
add
or
rcl
add
rcl
inc
xor
lods
dec
mov
and
dec
cmp
sbb
je
cmps
or
push
add
(bad)
jbe
cmps
leave
dec
out
int3
shr
(bad)
call
mov
out
push
cwde
xchg
jno
and
leave
fnstsw
les
pop
inc
rcr
xchg
pop
xor
adc
xlat
mov
xchg
xchg
mov
jbe
test
jno
push
and
sar
push
push
push
sub
xor
mov
adc
ret
aaa
add
loop
cmps
mov
aas
pop
and
and
mov
rol
jo
lock
in
mov
dec
cli
icebp
outs
test
test
dec
push
xchg
push
adc
pop
inc
inc
pop
pop
pop
nop
cld
push
ret
call
add
jecxz
cmp
into
dec
push
movs
iret
add
add
inc
sar
imul
add
adc
mov
mov
dec
fdivrp
and
add
into
nop
jno
loopne
mov
sub
inc
mov
scas
and
(bad)
in
into
rcl
inc
les
inc
push
jo
jmp
and
adc
sub
sub
int3
and
xor
add
outs
jnp
push
adc
daa
mov
out
loop
pop
and
(bad)
mov
inc
vpabsb
rcl
ins
add
inc
or
inc
in
mov
dec
movs
cdq
je
fisub
jecxz
mov
inc
daa
dec
cwde
add
mov
(bad)
lods
jp
jo
pushf
outs
or
loopne
repnz
push
test
inc
rcr
out
adc
maskmovq
imul
scas
fs
pusha
add
adc
rcl
and
gs
jbe
xor
inc
pop
ss
jp
xor
in
loop
sub
and
xchg
es
push
push
pusha
sar
inc
or
shr
out
hlt
ss
loop
jge
add
je
lock
mov
push
movs
push
mov
and
add
add
into
adc
mov
cs
cmps
jecxz
retw
data16
mov
bound
test
or
icebp
or
sub
pop
xchg
add
mov
mov
or
icebp
dec
or
push
popa
out
loopne
cmp
add
inc
nop
ret
pop
sub
mov
fisub
dec
add
or
inc
sbb
shr
rol
rol
push
push
and
rol
and
push
sbb
test
je
or
and
and
push
cli
lea
loopne
inc
and
pusha
retf
adc
scas
xor
mov
xor
add
jbe
jp
add
test
cmp
dec
cmp
dec
sub
push
sub
scas
and
repnz
inc
sbb
pop
(bad)
inc
add
inc
retf
push
jo
test
jns
cmp
add
xchg
or
xchg
add
popa
hlt
(bad)
mov
in
dec
repnz
mov
(bad)
rol
jle
scas
dec
jb
loopne
add
pusha
out
xor
sub
add
sub
mov
ror
test
retf
jmp
sub
inc
or
stos
inc
in
outs
inc
lea
aaa
inc
mov
xor
and
mov
ss
test
add
push
pop
jp
dec
(bad)
in
je
add
pusha
add
and
and
ins
pop
jo
xchg
jb
pop
outs
push
sub
loop
adc
fwait
xchg
xor
daa
cmp
fcomp
push
xor
jp
lea
dec
and
addr16
scas
les
into
sbb
and
add
jmp
out
cmp
sar
loopne
outs
shl
adc
in
cs
jb
push
mov
cmp
daa
push
xor
xchg
repz
cmp
pusha
mov
cwde
jae
pushf
outs
and
add
rcl
add
pop
and
xor
out
and
pusha
add
and
pusha
add
push
loopne
jb
popf
dec
popa
xor
outs
int
add
push
stos
push
sub
popa
mov
rol
or
push
clc
call
adc
sbb
push
add
mov
cmps
add
ret
shl
add
push
dec
pop
jb
sub
jnp
add
ds
xchg
in
mov
or
sbb
loop
retf
xor
dec
sti
lods
in
or
or
and
popf
ss
aam
jnp
push
mov
or
inc
push
push
mov
popa
add
sub
inc
jnp
pop
enter
leave
push
ret
mov
cmp
mov
icebp
ins
fsub
dec
xchg
rol
stos
inc
xlat
movs
sub
lods
sub
arpl
std
ins
push
dec
stc
cs
dec
mov
add
rol
push
pop
sbb
sbb
xor
or
sbb
or
sbb
push
mov
add
add
adc
lods
mov
and
xchg
imul
stos
sub
dec
stos
push
aas
call
jb
jno
jno
cmp
push
cmps
push
or
in
lock
sub
add
mov
adc
sbb
add
xchg
add
mov
dec
or
cwde
gs
enter
push
pushf
je
or
mov
adc
xchg
rcr
add
push
loopne
ds
adc
inc
inc
jne
aaa
dec
pop
and
loopne
push
shl
add
not
adc
loopne
sbb
ins
pop
add
dec
jne
dec
jne
sub
retf
push
dec
pop
push
repnz
mov
popa
stos
sti
sub
xor
out
pushf
les
add
mov
inc
inc
popf
loopne
and
push
aas
inc
sub
test
test
and
imul
and
mov
sub
sbb
lock
addr16
(bad)
imul
sbb
dec
cmp
sti
mov
xor
shl
(bad)
lea
add
push
nop
dec
loop
xor
popa
sbb
add
push
inc
mov
popa
pop
ss
dec
pop
add
loopne
mov
les
inc
(bad)
int3
(bad)
adc
test
daa
jle
push
test
and
bound
hlt
xchg
push
shl
ret
cmp
enter
std
xor
stc
xchg
rcr
jbe
rol
add
push
push
push
ss
inc
rcl
jl
xor
sub
or
sub
(bad)
and
pushf
push
test
arpl
movs
add
mov
sub
sahf
repnz
les
jae
test
add
and
scas
jnp
and
iret
pop
sbb
inc
sbb
jge
push
adc
test
shr
dec
xchg
(bad)
loopne
pop
and
push
xchg
sbb
repz
jge
dec
out
ins
jb
(bad)
jmp
jne
mov
push
mov
mov
add
mov
cmp
pop
pusha
add
push
popa
das
mov
sub
out
jb
add
repz
mov
xor
or
movs
sub
inc
and
fcom
dec
sti
dec
out
adc
cs
xchg
rcl
out
scas
jmp
mov
adc
jnp
test
xchg
mov
add
test
or
xchg
inc
cmp
pop
rol
jb
mov
popa
mov
(bad)
sbb
dec
xor
and
cmp
stos
xor
inc
and
xchg
dec
mov
add
ja
lea
(bad)
xchg
push
jle
sbb
xchg
jne
xor
(bad)
call
add
(bad)
mov
dec
jmp
aaa
cli
setge
jg
lds
inc
add
inc
mov
adc
dec
daa
test
jae
dec
xchg
cdq
push
sub
addr16
xor
mov
and
pusha
add
outs
bswap
mul
mov
xchg
(bad)
and
adc
mov
mov
and
lods
gs
mov
fs
jecxz
sub
dec
xchg
xor
push
or
pop
es
aas
aam
sub
mov
cmps
and
test
xchg
or
sbb
popa
push
inc
pusha
push
pop
mov
les
xchg
sub
inc
jle
xor
sbb
add
shl
imul
mov
cmp
dec
mov
add
jb
inc
jno
inc
xchg
pop
pusha
scas
and
add
pop
mov
xor
das
sbb
pushf
out
mov
imul
js
adc
xor
pop
mov
outs
call
sbb
push
mov
lods
aad
lods
or
push
(bad)
pop
xchg
pop
or
push
aaa
outs
cdq
mov
add
pusha
sti
fisub
call
andps
pop
mov
push
nop
and
dec
mov
loope
sahf
ror
mov
cmp
nop
out
in
in
push
jae
stc
add
inc
inc
pop
cmp
test
jo
adc
xor
push
push
mov
mov
loope
(bad)
loopne
shr
mov
add
ins
loope
or
mov
rol
adc
or
mov
cmp
or
inc
sbb
clc
movs
sbb
lahf
dec
sub
pop
jmp
push
jl
add
xor
out
jmp
jo
hlt
dec
mov
xchg
arpl
movs
mov
fdivr
cmp
call
and
mov
sti
and
mov
fld
js
dec
aaa
cmps
ret
pop
jnp
sub
push
pop
and
js
and
nop
jp
loop
aaa
ja
cmps
ins
lahf
(bad)
and
or
clc
inc
lahf
add
jns
push
dec
cmp
sub
test
ror
sbb
mov
enter
mov
fadd
mov
sub
mov
cmp
ror
mov
adc
enter
and
(bad)
sub
mov
push
cld
lods
fdiv
add
in
pop
jbe
inc
jl
rcr
xor
and
je
out
adc
lock
xor
dec
(bad)
test
nop
test
je
outs
cmp
stos
jp
push
mov
xchg
or
adc
test
fistp
sti
sbb
xor
xor
popa
or
inc
add
jne
add
(bad)
loopne
dec
xor
mov
push
sbb
(bad)
ins
lods
stc
mov
cmp
pop
add
push
jge
aaa
sub
xor
imul
clc
mov
iret
test
sub
adc
push
dec
call
xchg
jae
call
add
pop
and
dec
inc
cmc
sar
push
pop
inc
cmp
add
shl
pop
and
ror
sahf
pop
mov
dec
clc
mov
das
mov
or
push
ins
sub
or
jge
stos
push
and
in
shl
in
fild
inc
and
in
mov
add
inc
adc
dec
int3
enter
inc
add
pop
int
pop
test
dec
test
pop
aam
push
push
mov
or
iret
xchg
adc
inc
push
push
add
inc
in
jmp
pusha
pop
(bad)
retf
jmp
ins
popf
jmp
push
dec
and
dec
adc
and
test
cmp
pop
mov
and
pop
js
int
mov
(bad)
add
int
not
stc
movs
pop
mov
bound
jo
or
int
gs
je
or
out
(bad)
jbe
pop
adc
pushf
sbb
int3
sbb
mov
jmp
jecxz
xor
or
sub
push
add
enter
push
or
int3
int3
inc
cmp
ins
pusha
xor
or
pop
int3
pop
dec
sub
sbb
dec
hlt
ins
mov
mov
add
retf
sbb
adc
mov
sub
jne
outs
sub
ins
or
inc
mov
xchg
clc
mov
into
mov
fdivp
stc
movs
or
rcl
mov
loopne
pushf
pushf
loopne
clc
sahf
xor
jno
bound
test
push
dec
xchg
mov
dec
or
jns
retf
push
push
sub
ins
push
test
stc
test
dec
call
xchg
or
pop
dec
cmp
adc
sub
ds
sar
out
aam
fs
and
cmp
add
sbb
push
fsub
push
mov
sub
jno
jecxz
enter
nop
popf
xor
stos
mov
int3
xchg
push
pcmpeqd
sbb
mov
cmps
or
add
sahf
xor
sub
popa
retf
mov
push
mov
fisttp
sub
add
inc
add
cmps
jge
mov
mov
into
mov
jae
sub
mov
inc
mov
dec
stos
movs
retf
ins
sub
mov
sbb
scas
jl
repnz
sahf
popa
mov
pop
jg
jmp
xor
adc
adc
popf
cdq
cmp
iret
call
inc
pop
ret
cmc
mov
adc
pop
and
test
mov
mov
rol
jb
sbb
call
daa
lds
mov
ss
push
fsubr
or
dec
sub
pop
popa
pop
push
hlt
mov
push
or
add
or
in
xchg
or
mov
inc
and
clc
add
cmp
mov
inc
jno
pop
xchg
dec
ja
lods
in
xor
mov
or
lea
add
jnp
jmp
sbb
sub
mov
or
retf
pushf
movs
les
pop
push
and
test
ja
ds
xchg
xchg
sbb
push
imul
inc
rcr
mov
mov
cs
ret
int3
mov
inc
sbb
cmp
push
aam
inc
mov
or
xchg
into
int3
adc
xor
inc
inc
lea
pushf
rol
add
les
and
adc
sbb
pop
out
dec
and
push
sar
add
inc
add
add
mov
rcl
push
and
xor
xchg
push
or
cdq
jb
(bad)
push
pop
js
mov
lds
add
sbb
retf
sub
or
(bad)
sti
ret
jb
cmp
pushf
adc
dec
add
xchg
adc
add
lock
jae
enter
and
adc
mov
push
test
outs
pop
or
inc
pop
mov
movs
dec
pop
leave
mov
push
xchg
sub
sti
gs
sbb
fsub
sub
mov
cmps
push
daa
adc
das
add
inc
xchg
and
adc
add
mov
and
pushf
fmul
xchg
mov
and
mov
in
je
mov
mov
out
pop
cli
rcr
in
push
add
jg
into
adc
jge
adc
scas
xchg
fs
mov
cmp
push
mov
dec
call
popa
in
call
xor
sub
xchg
je
jp
mov
cmp
or
mov
into
in
jmp
and
out
fincstp
or
mov
mov
repnz
xlat
pop
jmp
cmp
add
mov
mov
push
mov
jb
fcomp
sbb
cmp
push
cmps
cmp
sub
push
pop
pop
loopne
out
add
add
(bad)
mov
xchg
sub
(bad)
mov
mov
add
dec
add
loop
push
jmp
or
or
xchg
loopne
inc
mov
push
aad
pop
add
pop
push
mov
add
pop
and
add
(bad)
aaa
stos
add
jno
es
inc
mov
ret
mov
push
call
and
sub
push
dec
xchg
dec
adc
into
add
add
mov
test
or
push
hlt
cmps
add
mov
and
add
lds
inc
dec
jg
mov
cmp
cmp
pop
out
add
loope
test
ds
push
jnp
or
push
or
xchg
xor
xor
push
dec
add
add
sbb
enter
cmps
mov
sub
add
push
les
cmp
cmp
xchg
pop
cmp
hlt
aam
pusha
xchg
add
push
pusha
into
or
call
in
and
xor
out
and
rol
xor
mov
ss
cs
xlat
daa
ret
cmp
add
or
icebp
dec
push
inc
jae
cwde
mov
jb
inc
sbb
and
hlt
pushf
rol
mov
push
and
fsub
data16
outs
dec
add
lea
xor
pop
in
daa
jmp
push
iret
push
add
add
into
je
xchg
push
add
adc
es
inc
add
fimul
int3
add
push
or
(bad)
cdq
pushf
or
int
inc
repz
adc
xchg
or
(bad)
call
shl
int
dec
or
add
imul
leave
mov
sti
test
sti
cmp
mov
bound
fisub
in
sbb
dec
lea
mov
int3
add
dec
lods
dec
jne
xor
(bad)
mov
bound
sahf
mov
adc
and
add
out
call
adc
loope
mov
ficomp
retf
ror
je
out
or
adc
ins
ret
dec
or
add
jb
das
or
pushf
aad
add
sub
and
repnz
mov
pop
push
jae
fisubr
hlt
pop
sbb
sar
sahf
imul
xchg
imul
and
jmp
mov
push
inc
push
inc
add
mov
jge
and
pop
ret
add
adc
inc
jp
int3
les
mov
and
fdivr
aad
xor
mov
pop
imul
rcr
mov
mov
and
and
lock
add
shl
xor
adc
adc
hlt
retf
addr16
jmp
ret
das
outs
inc
gs
add
cwde
cwde
push
cmp
cmp
inc
adc
mov
or
imul
aad
mov
xchg
push
pop
popa
or
fwait
and
cmp
or
mov
add
fisub
(bad)
int3
sti
dec
push
dec
int
cmp
cmps
mov
inc
sub
pop
add
dec
jecxz
add
pushf
push
pop
adc
ror
aad
push
fidiv
pop
sub
or
xor
push
xchg
sub
fistp
xchg
xor
lea
fld
fwait
inc
jnp
jae
sbb
sbb
add
xchg
aaa
add
push
arpl
mov
push
hlt
retf
fiadd
adc
jp
sti
rol
mov
ret
out
out
mov
(bad)
and
add
stos
cmps
out
and
dec
imul
retf
push
sub
mov
add
and
gs
mov
fidivr
loopne
jae
push
and
pop
sbb
out
xchg
mov
adc
cmp
xchg
push
into
popa
push
imul
cmp
fstp
lods
jmp
scas
xchg
mov
aaa
scas
retf
sbb
mov
dec
push
xchg
rcr
sub
adc
mov
xchg
dec
out
popa
mov
repnz
pop
cli
fst
test
inc
push
aas
daa
push
into
pop
out
movs
jg
push
leave
jmp
inc
loop
int
outs
int
jecxz
lahf
into
ins
test
push
pop
sbb
xor
add
cld
and
cmp
mov
cmp
jmp
mov
dec
pop
leave
sar
jmp
and
neg
mov
xchg
inc
xchg
popf
lods
xor
xchg
test
pop
mov
ds
popf
lahf
or
lods
push
cmp
out
sbb
fild
repz
inc
das
xchg
add
jle
ss
dec
rcr
push
add
inc
dec
(bad)
xchg
inc
mov
aad
js
add
add
mov
unpcklps
or
and
push
add
mov
jne
push
jmp
adc
sub
jge
or
cmp
(bad)
add
add
popf
iret
into
dec
dec
push
and
shl
and
test
aam
out
mov
inc
pop
pusha
inc
add
or
add
add
popa
and
or
and
fsub
shl
pop
mov
shl
push
cmc
popf
arpl
inc
or
xchg
dec
pop
sbb
js
or
mov
and
mov
adc
and
cmp
aaa
mov
adc
lea
mov
pop
je
add
sub
add
bound
cmp
adc
mov
xor
pop
mov
jnp
xchg
jp
jmp
dec
(bad)
pusha
xchg
jno
inc
loopne
xchg
sti
mov
shl
cmp
jnp
push
cmp
lock
jno
inc
adc
add
or
add
hlt
dec
and
out
les
add
fadd
inc
inc
inc
es
push
jne
dec
ss
sahf
fdivr
clc
sub
xor
(bad)
xchg
pop
pop
or
add
add
mov
pusha
mov
(bad)
jmp
cmps
sub
sbb
add
imul
lea
fmul
sbb
sbb
pop
jo
inc
sbb
add
fs
inc
add
shl
add
fadd
xor
repz
inc
inc
jle
add
pop
jb
test
push
cmp
xor
jbe
mov
mov
add
pop
mov
adc
ret
jge
inc
jmp
cld
and
cwde
dec
push
hlt
push
cmp
test
test
sub
rol
pop
xor
sbb
add
dec
in
pop
movs
adc
arpl
push
arpl
mov
sbb
mov
xchg
pop
rcl
fxch
int3
test
arpl
ret
pop
push
shr
cmps
popa
fwait
shl
sar
into
lock
movs
mov
xchg
fmul
test
int3
imul
leave
lds
popa
push
rcr
and
mov
push
jb
xor
inc
jb
push
es
data16
mov
fidiv
rcl
imul
cmp
pop
pop
int
jne
sub
dec
or
pop
adc
and
and
jecxz
jl
loop
and
repnz
aad
sub
(bad)
add
test
fs
imul
fcmovbe
mov
xor
or
and
test
bound
pop
not
push
mov
push
xchg
pop
dec
mov
aad
dec
xor
lods
loopne
jmp
lea
xchg
les
(bad)
in
inc
in
dec
dec
cmp
sub
mov
and
data16
inc
adc
or
rol
add
ret
aas
mov
sub
jmp
or
add
push
call
cwde
adc
sbb
bound
addr16
jecxz
out
call
bound
les
nop
add
inc
loope
lahf
sbb
pop
push
fadd
in
ds
std
test
mov
addr16
ror
add
mov
xchg
ret
push
and
push
rol
adc
pop
mov
or
pop
sbb
lea
imul
(bad)
call
fcmovbe
cmp
dec
adc
ss
inc
inc
sub
je
mov
pop
aas
mov
ds
js
mov
and
je
push
add
inc
mov
xlat
imul
aaa
mov
add
push
cmp
cmp
push
rol
dec
clc
push
mov
pop
xor
out
add
test
sar
xchg
xchg
pushf
or
add
add
add
popa
push
hlt
push
fcomip
int
popf
mov
sbb
inc
xor
cmp
dec
mov
add
cmp
xchg
add
pop
add
add
inc
ds
mov
and
push
pop
(bad)
fst
jl
pop
mov
fld
inc
imul
ins
call
push
popa
sub
push
pop
cmp
rcr
std
in
int3
cld
jne
mov
iret
and
ret
or
add
test
sbb
stos
sahf
inc
imul
ins
sub
add
add
inc
int3
jp
xchg
ret
or
pop
and
cmps
fidiv
xlat
mov
loop
cmp
mov
push
lods
mov
push
adc
ficom
xor
cli
add
sbb
je
sbb
cmp
in
pushf
fimul
fadd
ret
or
cmps
(bad)
mov
aad
and
mov
push
out
rcr
in
rcr
mov
std
shl
push
lods
jle
lods
sub
retf
cmp
int3
cs
sti
int
fmul
aam
jmp
rol
jmp
retf
imul
ins
pop
push
mov
mov
add
jmp
sbb
test
add
test
xor
js
add
sbb
iret
ret
sbb
sahf
sbb
mov
test
cmp
cmps
rol
dec
cmp
ret
add
or
dec
call
push
iret
loop
sub
jl
add
sbb
dec
or
inc
call
or
jno
sbb
pop
push
imul
add
cmp
pop
(bad)
add
icebp
gs
mov
pop
or
cmp
add
test
stos
jns
add
push
inc
push
adc
jne
add
mov
mov
rol
mov
(bad)
add
fidivr
or
sbb
cwde
add
xchg
mov
push
jl
out
jne
xor
fcom
in
ins
sub
pop
xchg
retf
loop
inc
xchg
add
push
push
adc
adc
sar
add
push
xchg
inc
adc
cmc
rcr
lods
xchg
(bad)
aad
inc
jmp
pop
mov
dec
mov
mov
push
jmp
or
inc
daa
mov
push
gs
stc
add
fist
lods
aad
cmps
inc
in
(bad)
lahf
adc
inc
fcomp
xchg
add
outs
xor
mov
pop
js
stos
loop
add
pop
lock
mov
sub
aas
push
xlat
cdq
jmp
in
sub
test
add
push
mov
xchg
mov
aad
lods
ins
fiadd
dec
popf
sub
mov
xor
fcmovnbe
clc
not
(bad)
cdq
adc
sub
or
push
popf
mov
pop
add
in
into
inc
aaa
mov
push
or
adc
ret
test
pop
ins
ds
sahf
sub
and
xchg
and
adc
shr
jno
xadd
test
jp
dec
jo
rcr
adc
jae
shr
leave
hlt
fmul
imul
in
je
jb
cwde
sbb
jl
mov
xor
dec
and
aad
mov
and
or
and
ror
add
inc
mov
in
inc
add
test
rcr
dec
push
es
fbstp
lods
sub
add
fcomi
sub
hlt
pop
retf
hlt
aam
aam
call
pop
sti
jne
adc
test
and
mov
pop
aas
in
push
mov
add
and
add
or
aas
add
add
add
add
add
push
inc
cwde
loop
sub
(bad)
ret
jmp
cdq
mov
mov
xor
push
dec
or
mov
mov
cmp
sub
out
js
adc
jl
cmp
sbb
mov
sbb
mov
sbb
dec
add
push
add
push
imul
jno
add
jo
lods
fs
pop
pusha
jge
inc
cmp
push
push
ret
push
sbb
lds
sbb
sbb
adc
cdq
mov
bound
mov
pop
push
inc
lods
xor
popa
loope
jecxz
mov
scas
jae
mov
data16
test
shl
popa
enter
hlt
sub
inc
shr
mov
iret
sub
jne
fdivr
ret
xchg
ja
fsubrp
jnp
jb
mov
add
cmps
or
retf
dec
or
sbb
in
ret
nop
inc
inc
and
sbb
sbb
cmps
push
retf
jbe
leave
daa
xor
stos
and
dec
jo
cdq
int3
stos
femms
dec
xchg
push
mov
stc
pop
fwait
out
xchg
cmp
xchg
add
add
test
dec
xor
repnz
leave
ss
jp
in
add
and
pop
dec
addr16
mov
add
movs
and
push
arpl
mov
out
sub
lea
or
(bad)
aam
cmp
dec
(bad)
cli
adc
mov
lods
sub
out
dec
push
inc
cdq
push
imul
mov
iret
int3
pop
pop
jg
leave
movs
(bad)
jge
fistp
pop
js
stc
pop
jns
repz
scas
push
(bad)
sbb
jmp
es
daa
test
dec
add
mov
sbb
and
arpl
xchg
jg
mov
push
(bad)
pop
sub
jb
fnstenv
add
gs
ins
pop
mov
shr
in
jb
xor
cs
inc
pop
sbb
xchg
push
inc
mov
movs
mov
pop
or
adc
and
sub
(bad)
out
stc
mul
adc
test
inc
push
dec
jmp
js
jnp
imul
cmp
push
bound
jns
cwde
test
push
jmp
ficom
xor
adc
call
or
or
cmp
jp
movs
push
xor
rol
xor
retf
into
mov
call
mov
sahf
call
mov
inc
mov
push
jmp
nop
pop
mov
sub
push
add
mov
rcl
or
mov
lods
loopne
pop
adc
movs
add
stos
jbe
js
and
aam
inc
xchg
dec
es
lods
data16
les
push
pop
sbb
xor
cld
jmp
ins
mov
mov
or
mov
or
icebp
movntps
sahf
lea
in
repnz
mov
pop
lock
mov
retf
sub
dec
inc
int3
add
sub
dec
rcl
add
and
add
sbb
sub
stos
pop
jns
push
or
inc
jge
pushf
xchg
push
out
movs
fidiv
cld
in
mov
cmps
add
mov
cmp
mov
mov
idiv
mov
fadd
pusha
inc
or
out
call
ja
sbb
cmp
iret
test
bound
test
xchg
push
outs
stc
in
nop
inc
stc
mov
out
nop
mov
pop
jae
push
fidivr
repnz
jns
jmp
stos
mov
sar
lods
das
push
das
sahf
jne
sub
mov
mov
mov
push
enter
and
mov
(bad)
rcl
clc
or
ins
xrelease
xor
mov
imul
jecxz
pop
call
scas
(bad)
cli
jmp
out
push
jo
in
xchg
ins
inc
out
or
mov
xor
sub
mov
add
enter
ret
jne
and
xor
lahf
or
add
cmp
jle
stc
popf
or
cmps
add
push
outs
js
retf
repnz
das
adc
inc
outs
inc
mov
mov
out
in
adc
out
jecxz
inc
jge
jne
xchg
push
add
dec
nop
pop
and
cmps
adc
sar
loope
aam
mov
push
and
cld
adc
push
sub
jl
mov
xchg
xchg
and
adc
(bad)
sub
in
mov
sti
repnz
adc
or
add
cvtps2pd
jae
jecxz
or
and
adc
hlt
add
mov
out
and
loop
and
and
jno
adc
sbb
push
or
push
jp
lea
dec
call
test
ret
adc
push
int
pop
cmp
jg
mov
jne
jmp
add
adc
ror
aas
cdq
dec
cmp
out
xchg
xchg
and
shl
xchg
pop
fwait
loope
je
nop
scas
clc
push
in
xor
fptan
mov
pusha
rcl
es
pop
retf
scas
xchg
out
pop
rol
sub
push
scas
daa
dec
iret
mov
or
inc
(bad)
nop
iret
jle
mov
call
bound
add
(bad)
push
dec
lds
cmp
call
lahf
cli
inc
cmp
leave
dec
jle
jae
xchg
mov
or
ror
mov
jbe
aam
xor
outs
call
dec
add
mov
hlt
sub
jmp
cld
ror
enter
add
out
or
pusha
add
in
xor
test
dec
dec
add
out
mov
jnp
add
hlt
rol
add
test
movs
or
in
ins
and
out
stc
jns
mov
adc
or
mov
mov
push
mov
fcmovbe
es
call
aam
cmp
sub
jo
dec
sub
lahf
cmovbe
mov
xor
xor
inc
dec
mov
movs
lea
mov
aam
mov
add
arpl
add
mov
or
pop
mov
pop
bound
aam
sahf
scas
or
xchg
dec
ins
(bad)
cli
bound
std
mov
mov
pop
imul
inc
shl
cmp
addr16
mov
xor
out
loope
and
test
dec
pusha
add
lock
cmp
pop
mov
int
and
adc
push
rcl
or
or
clc
(bad)
lock
les
xchg
dec
into
shl
and
cmps
sub
cmps
out
push
daa
cmp
or
scas
sub
in
xchg
pop
or
xchg
bound
cwde
gs
daa
jg
nop
mov
sub
sub
lea
push
and
cmp
pop
jl
js
cmc
ret
add
jns
fdiv
cmp
add
and
scas
leave
(bad)
xor
dec
dec
repz
stos
iret
or
push
sub
push
cwde
lods
sub
sub
push
movs
cwde
enter
mov
push
(bad)
scas
movs
loop
addr16
inc
jae
add
nop
fmul
std
xchg
(bad)
js
out
cmps
js
sub
pop
sbb
call
add
sbb
xor
fcomp
pop
jae
adc
cmp
call
pushf
loop
push
outs
aam
(bad)
jmp
push
das
stc
aam
push
jmp
cmp
ficom
xchg
scas
xor
inc
js
dec
out
fcmovu
sahf
jne
add
lds
dec
into
out
cmp
adc
jmp
xchg
dec
retf
int
iret
jmp
cli
ffree
scas
outs
movsx
out
clc
mov
int
mov
in
lds
xchg
lock
pop
fwait
add
inc
adc
jno
loop
shl
mov
jmp
in
mov
or
ds
loope
gs
gs
fild
(bad)
in
sahf
ins
gs
aaa
mov
ret
in
pop
mov
loopne
sbb
inc
mov
or
adc
stos
stos
jge
lds
test
fbld
shl
cmc
add
mov
adc
lods
addr16
leave
pushf
mov
dec
mov
aaa
hlt
and
add
ins
daa
cwde
mov
repz
inc
and
ins
fld
or
ret
das
cmc
call
cmps
inc
or
fsubr
imul
ror
lods
es
sbb
les
adc
mov
adc
mov
xor
jl
pop
mov
inc
lahf
sbb
xchg
outs
and
sti
ins
adc
add
mov
mov
int
mov
xor
sbb
vpmovzxwd
daa
and
iret
jae
xchg
add
add
jle
fdivp
jo
mov
cs
in
lock
and
ds
adc
xor
sbb
neg
lods
pop
lock
mov
xor
test
jl
mov
cmp
adc
and
loopne
lea
sub
rcl
sub
add
ja
pop
add
push
or
push
dec
jle
ja
dec
mov
pop
sar
addr16
adc
inc
jg
aam
inc
xor
push
jnp
shl
push
push
xor
pop
test
inc
repz
ins
daa
mov
mov
xor
add
ret
and
test
inc
mov
js
jg
mov
movs
xlat
add
or
inc
fist
push
test
mov
jo
or
mov
xor
xor
je
inc
jnp
or
enter
push
jmp
data16
fs
push
mov
push
add
add
clc
es
push
push
add
or
add
cwde
sbb
imul
jp
mov
(bad)
enter
sbb
outs
(bad)
je
imul
dec
jo
jae
xchg
pop
mov
clc
add
add
js
jb
push
inc
les
pop
pop
and
test
ficomp
cmp
jle
lds
xchg
push
scas
daa
xor
in
push
xchg
test
jl
addr16
loopne
xchg
add
fnstenv
push
push
push
pop
push
push
fistp
sub
das
lock
jns
jbe
mov
je
xlat
add
aas
add
or
dec
mov
(bad)
ja
and
or
add
mov
pop
jbe
mov
adc
cmp
sub
lea
push
outs
adc
aas
sbb
mov
push
mov
cwde
sub
jns
sub
xchg
jo
dec
test
and
add
push
pop
push
jl
cmp
pop
(bad)
fprem1
(bad)
pop
mov
test
jle
mov
jmp
cmps
nop
movs
not
enter
addr16
cmp
mov
mov
jb
xchg
inc
dec
imul
sbb
mov
jl
(bad)
dec
cld
pop
pusha
stos
test
cs
cli
pop
and
xor
xor
add
or
adc
add
adc
jo
push
inc
add
inc
(bad)
call
jmp
es
dec
pop
inc
adc
bnd
mov
daa
cmp
aaa
jne
fldenv
jne
cmp
mov
clc
in
mov
add
call
outs
push
fwait
ret
jbe
or
mov
imul
ror
sub
add
add
push
inc
push
pusha
rcr
lea
push
rol
mov
cmp
data16
add
xor
fnstcw
cdq
sbb
jbe
dec
nop
cmp
sar
and
out
cmp
jns
mov
adc
xchg
jns
sbb
clc
mov
fadd
sbb
test
or
mov
adc
call
xchg
push
test
stc
jbe
inc
jo
mov
test
or
mov
cdq
jle
call
add
mov
dec
test
push
nop
xchg
dec
add
mov
mov
xor
mov
cmps
mov
outs
dec
cmp
sbb
je
add
and
mov
pop
push
push
lea
nop
pop
add
mov
(bad)
lahf
sbb
add
(bad)
cwde
call
or
xchg
data16
aad
mov
inc
xchg
adc
xor
ja
jo
loopne
sbb
mov
sub
push
call
test
imul
enter
push
test
xchg
add
mov
add
add
dec
js
mov
sub
in
(bad)
mov
stos
retf
es
xchg
ds
jge
mov
or
stc
fwait
(bad)
test
test
sub
cmp
jns
or
mov
pop
cmps
add
add
sbb
jmp
xchg
pusha
cdq
mov
cwde
pop
dec
dec
xchg
movs
jecxz
cmp
dec
xchg
xchg
iret
jns
xchg
sahf
pop
movs
(bad)
addr16
aas
js
lea
and
scas
xor
pop
cmp
push
push
js
or
cli
lods
movs
xchg
add
jns
(bad)
fldenv
fs
push
test
js
outs
mov
ins
ret
xchg
mov
push
jnp
shr
sahf
(bad)
mov
mov
mov
push
(bad)
fmul
daa
or
jle
jecxz
adc
add
push
leave
mov
mov
fisub
xor
dec
jnp
inc
fnstcw
adc
sub
ja
(bad)
test
sbb
adc
daa
pusha
mov
mov
pop
mov
dec
mov
jmp
mov
ficom
cmp
outs
ss
and
(bad)
inc
add
adc
pop
jo
rol
add
test
cli
add
xchg
cdq
stc
mov
mov
push
push
mov
or
mov
or
mov
sub
adc
cmp
stos
sbb
add
cmp
dec
mov
aaa
add
xchg
add
retf
rcl
sti
mov
mov
ins
leave
mov
rol
pop
mov
fnstenv
test
fdiv
js
jo
dec
jo
stos
movs
or
call
bound
lods
inc
shl
xchg
jge
pop
fsubr
mov
imul
cmp
stc
cmps
std
sbb
pusha
add
mov
sar
(bad)
fwait
inc
pop
repnz
jp
xlat
or
into
mov
adc
sbb
movs
inc
lock
sub
(bad)
cmp
xor
sbb
inc
mov
lahf
les
loopne
pop
shl
add
add
add
mov
mov
jmp
ret
(bad)
das
jp
inc
jnp
das
add
ja
jmp
popa
and
(bad)
xor
add
sbb
stc
fwait
push
(bad)
mov
jns
cld
aam
movs
push
mov
jns
push
mov
sbb
xchg
in
jmp
add
add
add
jnp
cmp
mov
add
add
(bad)
lahf
push
add
gs
mov
inc
add
inc
adc
push
aaa
enter
ds
mov
inc
js
mov
add
sbb
out
or
stos
add
lods
dec
push
push
jbe
daa
mov
retf
pop
popa
mov
mov
mov
loopne
pop
loopne
pop
adc
add
add
rol
mov
pop
xchg
ja
(bad)
adc
ins
clc
sub
add
add
cmp
add
std
add
mov
xor
stc
inc
cmp
inc
add
add
push
(bad)
sar
mov
add
scas
sub
xchg
imul
(bad)
xor
add
add
xchg
js
mov
add
pop
int
dec
add
popf
mov
retf
in
sub
ds
mov
and
sahf
test
cwde
ret
mov
add
add
push
aad
jge
or
add
inc
add
fwait
out
mov
rol
add
seto
sbb
jo
and
add
shl
push
fld
(bad)
jb
sub
add
xchg
cmp
in
int3
mov
or
mov
aam
pop
mov
in
fdivr
das
addr16
dec
xor
or
ficom
jge
imul
add
lods
rol
loopne
hlt
jl
pop
popf
fisubr
or
sahf
or
add
lods
xor
mov
mov
dec
push
inc
stc
and
leave
int3
cmps
sub
mov
mov
or
inc
jge
xor
xchg
mov
scas
xor
cmp
add
sar
add
aad
std
add
adc
and
jo
repz
xchg
push
cmp
(bad)
(bad)
cmp
and
or
mov
retf
mov
retf
jge
cwde
or
ds
inc
mov
inc
in
cmp
jg
loop
ror
js
inc
mov
push
add
call
aam
add
push
popf
inc
into
ja
add
iret
addr16
push
jo
push
mov
sbb
and
fdivr
and
(bad)
xchg
inc
scas
mov
or
fbstp
mov
pop
rcr
jl
pop
pop
fwait
int
shl
in
loop
pop
popa
inc
jl
lods
mov
mov
mov
fxch
jge
inc
pop
pop
inc
and
or
inc
stc
jge
push
add
(bad)
call
es
cs
lock
lods
add
mov
pop
sbb
push
push
out
repz
dec
sub
popa
and
and
out
int
call
(bad)
ss
xchg
lahf
sub
ins
retf
add
and
sti
cmps
cwde
inc
add
mov
or
into
out
sbb
xor
add
loopne
(bad)
xchg
ins
call
push
sub
mov
stos
sti
rol
and
int
add
movs
push
cdq
lea
stos
out
jmp
scas
ins
mov
shl
jge
or
xor
add
mov
xor
jns
jne
add
ror
pop
mov
add
test
pop
xor
out
xchg
mov
sbb
stos
sub
nop
add
repnz
out
cmp
out
scas
mov
loop
add
sahf
cs
xor
sbb
jge
dec
pop
mov
push
pop
sahf
cmc
in
loopne
lods
dec
jmp
xor
sub
in
cmp
int3
sub
pop
and
xchg
mov
and
add
addr16
push
fmul
loop
jmp
push
stc
outs
ret
retf
les
adc
cmp
mov
repz
push
retf
xchg
sahf
sub
test
out
cmp
cmp
ror
cmp
call
cwde
push
xchg
jle
imul
dec
jns
add
out
pop
nop
stos
or
out
mov
xor
xchg
mov
iret
and
cmps
ror
or
push
push
icebp
inc
mov
pop
js
imul
jb
add
pusha
clc
sar
lods
mov
test
or
enter
inc
ins
push
int3
sub
sbb
in
pop
inc
xor
mov
cmp
(bad)
punpcklbw
push
out
and
in
mov
leave
mov
mov
sbb
pop
stos
sti
jl
lock
jle
push
add
inc
push
arpl
les
sub
xchg
ins
inc
enter
cmp
push
xor
mov
lods
fldcw
sbb
push
stc
jb
sti
pop
and
(bad)
mov
and
inc
mov
leave
test
inc
and
push
and
and
loop
cmps
jae
lods
ins
mov
les
cmps
xor
movhps
ss
div
shl
arpl
retf
mov
inc
dec
pusha
inc
das
push
in
not
dec
cmp
cmps
loopne
dec
test
jl
int
xchg
mov
loopne
mov
and
ds
mov
je
inc
add
dec
push
sub
(bad)
(bad)
enter
inc
push
sub
or
or
dec
test
cs
nop
lods
jo
lods
push
add
(bad)
xor
xchg
ss
jno
mov
pushf
push
pop
pop
and
sbb
mov
sbb
cmp
push
lea
fdiv
inc
sbb
or
js
mov
add
shl
shl
xchg
int3
xchg
or
mov
and
retf
outs
jnp
cli
js
sub
push
jp
cmp
loope
lds
shl
ret
push
inc
sbb
ss
cmc
test
movs
mov
pop
mov
mul
mov
movs
mov
jo
push
add
push
enter
and
or
ins
mov
sub
lods
mul
push
push
call
inc
mov
or
push
mov
cmp
xor
stos
jmp
mov
sbb
neg
lock
cmp
cwde
mov
add
repnz
sbb
bound
cwde
or
fcom
pop
dec
xor
add
dec
lock
mov
inc
adc
sbb
push
rol
mov
add
sbb
daa
add
cmp
push
iret
and
mov
cld
repz
inc
add
pop
xor
add
jbe
cmps
pop
mov
lock
push
mov
and
fs
or
test
adc
(bad)
dec
sub
add
pop
push
sub
dec
add
xchg
retf
enter
add
cmp
rol
mov
rcl
inc
inc
sub
daa
mov
push
push
lods
imul
adc
or
pop
jbe
test
jg
shl
mov
xchg
xchg
mov
rol
inc
or
mov
adc
sar
mov
and
jp
test
xchg
adc
icebp
mov
int3
ins
loopne
or
mov
loope
lods
dec
es
rol
adc
fild
cld
test
pop
pop
add
aad
lock
sub
mov
sbb
adc
xor
push
or
push
or
add
int3
jge
add
call
ss
push
cmp
dec
hlt
or
fsub
pop
dec
adc
mov
and
or
xor
push
cwde
icebp
push
ret
mov
dec
ficomp
add
jp
sub
push
pop
jnp
cdq
sub
jns
clc
dec
sub
shr
and
sahf
push
push
fstp
enter
cs
pusha
or
cmp
inc
push
add
mov
mov
add
aam
ins
xchg
pop
cdq
xchg
cmp
adc
imul
push
(bad)
dec
adc
sahf
data16
lods
mov
dec
add
mov
jle
push
cdq
push
loopne
push
add
cmp
xor
mov
or
add
xor
rol
or
loope
cmp
and
sbb
dec
mov
pop
jge
test
adc
sub
jmp
gs
daa
adc
jnp
xchg
lahf
jg
std
call
add
shl
jno
ja
retf
rcr
adc
pop
ins
ret
jmp
add
inc
js
ror
mov
js
jge
push
mov
ds
or
push
jl
or
dec
(bad)
in
sbb
dec
jge
je
or
push
icebp
mov
adc
xor
rcl
inc
adc
mov
jl
inc
dec
sbb
mov
inc
cmova
xor
mov
add
add
mov
mov
sub
ror
sub
imul
push
adc
popf
fiadd
sbb
xchg
jnp
and
sub
xchg
mov
sub
test
xor
add
mov
xchg
inc
and
ss
retf
pop
cdq
xor
stos
pop
add
mov
jl
adc
cmps
mov
mov
xor
dec
aam
add
int
fcmove
adc
mov
mov
inc
ror
jmp
out
pop
retf
fs
dec
shl
pop
inc
loopne
mov
lds
add
sub
test
sar
data16
push
cmp
xor
adc
cmp
or
lock
ins
(bad)
sub
xchg
fwait
and
test
mov
mov
or
rcr
call
push
jae
test
aas
and
add
jmp
add
inc
sub
aad
dec
pop
mov
pop
icebp
mov
adc
jl
std
call
nop
mov
push
pushf
or
dec
stos
cmp
in
enter
push
xor
xor
cs
mov
cmc
jl
sub
add
stos
sbb
xchg
jb
mov
adc
test
call
jne
mov
fs
add
int
mov
mov
gs
dec
push
jne
push
push
cmc
cmps
push
cmp
add
mov
xlat
xchg
xor
add
push
int3
ds
xchg
or
xchg
ret
or
or
rcl
ror
in
add
ss
shl
sub
scas
lods
lods
cmp
dec
jecxz
lock
cmp
imul
scas
jmp
lock
(bad)
xor
dec
jnp
test
mov
sar
stos
mov
enter
jle
add
in
sbb
pop
sbb
loopne
enter
fdiv
push
add
or
cmps
sbb
test
xor
dec
retf
sbb
fst
(bad)
lea
adc
add
fs
mov
in
fwait
xor
mov
out
adc
add
pop
fwait
bt
add
jbe
push
test
add
add
pusha
loopne
mov
fsub
mov
or
fmul
out
es
ins
scas
push
mov
mov
ja
into
pop
jnp
movs
mov
jae
xor
mov
sar
xchg
lock
data16
and
jge
sbb
cli
enter
rol
ins
push
inc
adc
inc
xor
js
xor
stc
inc
jmp
push
in
cmp
push
iret
test
icebp
inc
push
mov
pop
ret
mov
in
test
shl
inc
cmove
inc
push
jb
ins
repnz
out
add
cmp
ret
xchg
jns
cs
addr16
fldcw
push
mov
sbb
xchg
jmp
scas
mov
scas
test
cdq
push
fld
inc
scas
je
adc
sar
movups
add
pusha
push
cmp
push
jp
loopne
mov
mov
stos
mov
mov
jo
jmp
sar
outs
cli
cmp
add
cmp
mov
cmp
add
int
jg
(bad)
inc
adc
sbb
inc
add
cmp
or
push
hlt
aam
jmp
loope
fiadd
clc
sbb
test
inc
aad
jmp
or
in
xor
fwait
add
mov
push
dec
inc
and
pop
ss
jo
ror
cmp
arpl
lock
mov
ins
test
and
fimul
mov
mov
(bad)
div
add
adc
push
inc
pop
call
mov
xor
push
es
sub
shr
pusha
loop
push
or
je
ss
in
icebp
mov
cdq
cmp
dec
dec
das
jnp
sbb
mov
add
xor
mov
pop
addr16
jno
cmp
add
xor
je
call
mov
ss
rol
pusha
adc
add
and
pop
test
out
cmps
or
cmps
dec
push
push
setne
pusha
jo
jb
call
inc
or
fimul
xchg
inc
addr16
ins
fstp
mov
push
and
loope
pusha
dec
sbb
bound
addr16
(bad)
push
stos
inc
mov
and
push
rol
add
jecxz
fisub
or
lahf
inc
movs
inc
retf
and
xchg
push
adc
lock
dec
mov
push
pop
loop
fs
(bad)
xor
cmp
xchg
sub
(bad)
lods
std
mov
adc
jno
mov
int3
int
test
hlt
pusha
sub
in
add
add
add
add
movups
or
popa
adc
ins
ret
xchg
xor
sbb
add
aaa
or
sub
stc
fiadd
mov
mov
jmp
xchg
fiadd
inc
int3
pop
nop
pop
sub
pusha
mov
cmps
and
mov
or
push
imul
inc
push
sub
ja
hlt
cmps
lds
hlt
dec
pusha
xor
or
pop
mov
mov
mov
mov
xchg
clc
xchg
icebp
add
outs
add
movs
and
pop
dec
icebp
adc
popa
scas
push
dec
pop
bound
xor
adc
add
push
pusha
add
shl
add
in
add
add
mov
push
cmp
mov
dec
adc
xor
and
les
add
cli
fisubr
out
and
adc
into
outs
pop
test
inc
cmp
push
inc
bound
add
je
push
rol
shl
pusha
add
push
xchg
sbb
add
std
push
ins
push
push
and
or
or
adc
mov
mov
xlat
add
and
shl
lods
sbb
pop
adc
movs
call
or
adc
adc
and
add
sub
sbb
dec
sbb
or
loopne
popa
xchg
or
and
je
jmp
les
mov
push
lea
push
or
shl
out
jecxz
sub
or
jl
or
lock
je
push
push
inc
test
adc
mov
and
pop
adc
pop
mov
in
push
fcmovnbe
and
loopne
out
pop
sbb
inc
or
sub
test
and
add
and
add
or
add
arpl
icebp
xor
jl
lods
test
or
ja
sbb
inc
sub
sub
and
and
arpl
push
rol
mov
shl
lahf
imul
add
push
cmp
loopne
adc
add
loopne
and
sbb
jns
inc
mov
push
sbb
daa
rol
inc
push
push
(bad)
jbe
out
add
mov
mov
pop
loop
call
pop
sahf
in
js
add
mov
daa
dec
ret
mov
dec
add
lds
inc
add
push
inc
inc
aad
es
pusha
push
aaa
and
mov
test
xchg
int3
arpl
or
xor
sub
sbb
test
call
xchg
loope
mov
inc
mov
mov
inc
sub
add
xchg
loopne
out
ror
add
mov
sbb
rol
in
arpl
push
(bad)
push
inc
fptan
and
push
pop
mov
nop
pusha
scas
out
inc
inc
xor
icebp
aas
jg
or
ret
mov
add
repnz
ret
push
add
inc
cmps
je
xchg
sbb
push
mov
xor
add
mov
(bad)
adc
int3
aam
inc
mov
sbb
cmp
pop
cmp
sbb
aad
xor
push
push
xor
adc
xor
mov
inc
sbb
xor
dec
ret
dec
push
inc
(bad)
adc
sbb
add
test
xor
add
inc
and
inc
push
jo
and
call
outs
je
or
xchg
push
mov
xor
and
push
shl
in
jecxz
push
sub
ins
loop
and
fs
daa
cmp
popa
sbb
and
inc
fbld
jno
add
loopne
bnd
and
jmp
xchg
push
push
rcr
add
rol
and
dec
adc
and
adc
jae
xchg
cmps
test
sahf
add
adc
jae
lods
clc
(bad)
ret
dec
pop
mov
mov
scas
cmp
ror
scas
lds
rol
adc
xchg
idiv
adc
rcr
xchg
add
inc
popa
add
and
ret
das
and
jnp
add
repz
jno
mov
jnp
scas
jge
add
jmp
aaa
cs
loope
or
mov
sub
jbe
dec
loopne
shl
retf
inc
mov
and
add
xchg
inc
push
mov
xlat
rcr
jne
and
sbb
adc
inc
xor
lock
adc
xchg
mov
add
mov
jae
mul
cld
xchg
mov
cmps
mov
into
jb
push
imul
push
hlt
and
rol
jecxz
dec
push
sub
ret
test
xchg
cli
jae
pop
ret
jne
fsubr
and
push
dec
cmp
cmp
in
dec
outs
mov
mov
jo
mov
xlat
sbb
pop
shr
imul
push
pop
inc
es
arpl
repz
push
jb
adc
shl
cld
shl
xchg
outs
ins
rcl
mov
xor
push
pop
leave
pop
(bad)
push
pop
inc
ins
pop
shl
and
dec
mov
fidiv
xchg
dec
pop
xchg
ret
inc
repnz
out
mov
push
int
(bad)
das
pop
push
cmp
pop
pop
mov
add
xlat
and
mov
or
push
sbb
and
daa
(bad)
xchg
inc
pop
inc
adc
xlat
sub
push
loope
lods
sbb
jne
push
push
loop
adc
shl
cmp
ret
adc
push
xor
loope
je
mov
mov
mov
loopne
jo
arpl
xchg
add
inc
mov
ret
push
xchg
mov
ret
add
test
mov
ja
sub
clc
push
jp
imul
shl
add
or
adc
test
ret
push
outs
or
jle
fldenv
xor
stos
fdivr
les
(bad)
stc
mov
mov
cs
xor
and
loop
push
rcl
cdq
sbb
stc
dec
and
shl
les
je
cmp
popf
push
mov
sub
mov
and
push
sub
les
xchg
add
rcl
cdq
mov
ins
dec
add
bound
call
dec
jle
sbb
mov
(bad)
and
push
push
repnz
adc
out
aaa
sub
mov
push
jle
push
and
pop
imul
add
and
les
cld
cmp
pusha
add
and
mov
int
ins
add
pop
bound
adc
adc
cmc
xchg
cld
cmp
js
es
jbe
or
add
jle
data16
test
inc
add
and
jns
fldenv
pop
mov
out
mov
(bad)
dec
adc
xchg
daa
sbb
mov
movs
repnz
je
mov
xchg
mov
and
xor
cmps
sbb
mov
shl
arpl
mov
push
and
sub
imul
add
(bad)
push
ins
xor
scas
pop
aad
fdivr
xor
mov
cmp
icebp
xchg
sub
push
add
xchg
arpl
xchg
mov
xchg
and
jo
inc
shl
and
xacquire
scas
and
(bad)
lods
je
cdq
mov
push
mov
ret
cmps
or
je
mov
xor
push
scas
xchg
movzx
push
test
mov
cmp
mov
xlat
push
adc
sub
mov
push
jl
push
pop
fs
nop
push
mov
adc
push
xchg
push
adc
push
outs
cmp
(bad)
cmp
les
outs
shr
pusha
(bad)
fwait
imul
inc
arpl
jg
sub
cmp
aad
test
mov
out
in
or
jnp
push
test
(bad)
mov
int3
rol
dec
inc
test
call
ins
add
or
fs
das
mov
cmp
int3
(bad)
or
jg
cld
jg
(bad)
xchg
and
add
es
sbb
mov
retf
lds
loopne
mov
push
adc
fidivr
jp
sbb
xor
cmp
inc
inc
pusha
and
xchg
movs
sbb
dec
sbb
pop
fisubr
xor
addr16
jge
stc
cmp
ja
cs
jns
aam
xchg
sti
pop
out
mov
push
loopne
jge
add
mov
add
xor
xchg
and
sub
inc
popa
fld
mov
inc
leave
sub
icebp
(bad)
mov
es
aaa
mov
mov
mov
cld
out
or
cmp
lea
stos
rcl
sti
jbe
xlat
fs
repnz
inc
jb
xor
add
mov
jae
cmp
in
(bad)
rcl
and
mov
xor
mov
pop
cld
dec
int3
xor
xchg
and
sbb
scas
neg
int3
or
mov
adc
push
add
inc
xor
jne
dec
clc
and
repz
add
mov
jns
sbb
int
call
sub
lds
inc
add
add
mov
out
nop
push
cmp
loopne
and
jge
pop
or
inc
or
sbb
dec
clc
push
inc
pop
xor
add
cmp
mov
jo
inc
mov
cmp
and
sbb
loope
test
ret
sbb
ins
ret
adc
mov
sub
ficomp
xchg
sub
imul
dec
dec
test
pusha
cmp
mov
sbb
sbb
es
outs
sbb
es
add
sar
mov
fsub
xchg
mov
stos
aaa
in
inc
loope
cld
addr16
loopne
inc
inc
jl
mov
push
sub
addr16
pop
jge
mov
cmp
mov
ss
add
gs
and
aam
sub
add
and
jne
or
xchg
out
and
loopne
leave
repnz
ja
sbb
std
xchg
cdq
mov
out
xlat
rcl
fisttp
aas
add
inc
push
dec
daa
bound
add
mov
fisubr
mov
adc
push
cmp
shr
adc
mov
cmp
mov
outs
xchg
xchg
push
inc
cmp
in
lock
sbb
dec
dec
push
ds
pop
hlt
hlt
push
ins
jb
dec
test
mov
ss
xchg
cmps
data16
movs
mov
cs
fsubr
and
ss
out
adc
adc
mov
int3
add
ins
ins
popa
popa
popf
mov
jns
nop
test
in
lods
or
popf
jae
aam
pushf
add
into
push
call
or
sbb
or
or
cld
pop
rcl
lods
xchg
inc
mov
sbb
lock
mov
push
xchg
add
repnz
sbb
adc
int
push
pop
out
or
push
inc
add
lock
outs
push
xor
or
sbb
add
inc
adc
jnp
popa
mov
stos
call
sbb
inc
jo
add
mov
cmp
xor
nop
lock
outs
cmp
mov
push
jp
in
and
sbb
es
in
xchg
test
xchg
into
dec
cwde
xor
or
pop
imul
sbb
rol
pop
sbb
jge
in
cmp
loope
sub
test
sbb
stc
xor
out
rcr
push
xchg
mov
mov
cwde
inc
pop
(bad)
or
push
mov
push
and
jno
lds
stc
xor
les
outs
ins
cld
push
push
stos
adc
ins
movs
push
gs
inc
cdq
das
rol
test
gs
adc
sub
lods
inc
call
jne
mov
sbb
xor
es
sbb
std
je
cdq
jb
sbb
into
icebp
shl
xor
and
inc
jbe
dec
rcr
add
add
lods
mov
or
jl
sahf
push
and
add
popa
xor
test
cwde
and
std
pop
adc
or
sbb
mov
pusha
test
dec
adc
pop
inc
xor
pop
movs
xchg
xchg
mov
xlat
cmp
rcl
dec
lahf
and
adc
add
adc
add
dec
sbb
and
xor
jo
pop
xchg
test
inc
bound
push
inc
cmp
rol
xchg
dec
cmp
jno
push
jno
pop
es
inc
stos
dec
or
adc
adc
pop
rol
push
fnsave
mov
stos
sbb
stc
xchg
adc
imul
aaa
mov
les
jnp
or
pop
mov
add
mov
fist
adc
sar
mov
stc
cmps
xor
sti
stos
and
and
movs
xchg
pusha
clc
add
aad
mov
arpl
std
out
inc
jb
mov
inc
fisttp
xor
ret
jne
and
push
js
and
xchg
dec
cwde
mov
mov
or
aad
sub
mov
in
mov
mov
adc
loopne
aaa
mov
push
adc
pop
shl
ror
inc
cld
ret
ret
mov
mov
fnsave
js
mov
pop
lods
sub
or
jne
and
dec
cs
push
(bad)
xchg
arpl
xchg
inc
or
aaa
pop
pop
xchg
inc
xor
es
mov
mov
push
xor
add
and
rol
sub
bound
loop
adc
and
ins
xchg
push
xchg
les
add
loopne
pop
or
mov
vpshuflw
jbe
push
sbb
imul
adc
add
cmp
xchg
sbb
cs
pop
mov
mov
in
pop
push
fisubr
add
inc
add
xor
vandnps
cmp
mov
add
add
jl
mov
scas
mov
mov
test
inc
xchg
mov
sub
test
pop
out
ins
loope
fldenv
add
loopne
push
mov
add
je
ret
sbb
adc
cmp
add
cmps
pop
retf
and
mov
cs
pop
inc
add
adc
ret
movs
test
bswap
cdq
mov
test
xor
add
and
out
adc
push
sub
pop
inc
loop
fdiv
sahf
ret
jb
sbb
push
cmp
rol
pop
fadd
push
add
and
cli
xor
sbb
(bad)
cmp
xor
cmpxchg
inc
xor
shl
sbb
inc
mov
mov
inc
rol
push
inc
cmp
int3
inc
inc
sub
sbb
and
pop
cld
jno
sbb
inc
pop
add
and
bound
inc
inc
std
shl
add
push
and
inc
shl
in
mov
ds
mov
mov
add
xchg
and
adc
adc
bound
shl
arpl
jns
add
sbb
or
pop
in
(bad)
and
and
fld
and
mov
sub
cmps
jmp
pop
jle
cmps
adc
xor
sub
add
push
clc
or
fdivr
retf
inc
xchg
js
(bad)
scas
add
push
adc
mov
mov
clc
iret
cmp
sub
popa
enter
leave
push
mov
loopne
adc
add
jmp
bound
jo
push
test
add
adc
add
enter
add
jo
adc
add
retf
adc
and
adc
addr16
mov
xlat
push
scas
adc
popw
aam
fcmove
add
pop
retf
and
inc
das
dec
aad
pop
test
xor
push
or
jo
or
shl
xor
and
test
outs
jl
inc
pop
rcl
cdq
jmp
(bad)
aam
fnstenv
icebp
adc
in
add
sbb
add
adc
or
mov
adc
pop
enter
fsubr
test
xchg
call
sbb
fisubr
adc
sub
mov
mov
and
dec
fcomp
loop
imul
xchg
scas
pusha
js
inc
push
dec
pop
jo
or
xor
(bad)
in
xlat
fnop
sbb
or
mov
rcr
lods
or
mov
lahf
dec
aam
addr16
stos
pop
retf
pop
pop
cmc
(bad)
leave
push
jg
test
(bad)
pop
add
rcl
fisub
push
pusha
jg
mov
add
and
lds
jbe
xchg
out
inc
and
std
push
pop
repnz
xlat
mov
mov
fld
imul
xor
mov
loopne
fdivr
imul
(bad)
dec
icebp
dec
popa
adc
in
out
mov
adc
adc
lds
pusha
and
xor
fsubr
es
mov
dec
in
mov
xchg
mov
jno
sbb
bound
jnp
or
inc
inc
or
lods
xchg
sbb
pop
or
jb
push
cmp
add
lea
push
dec
ret
enter
xchg
outs
ror
fbstp
add
daa
cmp
outs
data16
sbb
mov
jb
push
and
int
(bad)
inc
adc
adc
pop
push
adc
daa
mov
cmc
(bad)
and
pusha
adc
lock
jns
adc
call
nop
jle
mov
jp
or
std
shr
push
cmp
inc
mov
loop
xlat
sub
xor
adc
pop
cmp
pop
in
pop
xlat
mov
inc
out
add
and
test
in
repz
cmps
mov
adc
lock
xchg
jbe
imul
out
pop
leave
je
pop
pop
xchg
and
jl
pop
lods
mov
(bad)
cmp
xor
mov
add
jmp
dec
add
jo
sbb
jmp
or
add
add
out
stc
dec
add
repz
ja
xchg
sbb
add
dec
xchg
shr
ror
mov
imul
(bad)
enter
rol
out
sbb
loope
jnp
cmps
mov
outs
(bad)
mov
push
jo
add
mov
xor
ja
add
push
cmc
jp
inc
inc
pushf
loop
jo
loop
aaa
les
push
loop
fs
sub
xchg
(bad)
inc
cmps
cwde
mov
outs
add
xchg
outs
lods
es
adc
leave
pop
mov
icebp
mov
lods
add
jae
add
mov
pop
xor
clc
fucomp
mov
mov
push
or
adc
loopne
lahf
mov
pop
lock
pushf
loopne
xchg
sub
mov
cdq
aam
rcl
push
fisubr
jmp
out
fisttp
sbb
bound
cwde
xchg
xchg
hlt
inc
aam
add
xchg
mov
pushf
jmp
xor
and
sbb
xor
pop
movs
test
inc
in
or
pcmpeqb
invd
loopne
fadd
mov
loopne
add
ret
mov
sbb
adc
dec
cmc
mov
cmp
pop
sub
scas
fst
or
test
call
idiv
gs
pop
aad
lea
pop
or
mov
fadd
shl
add
add
and
je
fbstp
add
cmp
pop
sbb
add
pop
inc
lods
inc
push
mov
icebp
add
lock
(bad)
and
dec
pop
int3
mov
mov
jge
or
sar
inc
pop
jnp
adc
mov
test
ret
jnp
lds
rol
lahf
cmc
add
ret
loope
hlt
loope
sbb
add
shl
loope
sbb
add
repnz
adc
adc
add
mov
dec
mov
dec
loop
and
pop
popf
dec
pop
aad
rcl
adc
fsubr
lahf
jne
test
push
sub
pop
outs
cdq
xchg
mov
out
inc
pop
jmp
add
jns
xor
inc
pop
jo
pop
repnz
push
pop
push
movs
pusha
pushf
sar
loopne
(bad)
fist
shl
xor
bound
sahf
pop
sub
inc
je
adc
inc
xor
sub
adc
(bad)
fadd
jge
push
popf
shrd
stc
push
jae
inc
popa
rol
xchg
mov
retf
ret
dec
repnz
ds
bound
or
aas
jle
std
fs
das
push
push
lods
adc
inc
(bad)
pusha
das
inc
inc
xchg
fadd
pop
xor
push
adc
bound
sahf
imul
xchg
inc
loop
lea
cmp
in
dec
adc
or
mov
push
pushf
int
xchg
mov
in
pusha
xchg
jb
mov
dec
in
and
fadd
push
or
adc
inc
std
enter
cmp
pop
dec
movs
push
popa
add
sbb
inc
xchg
push
push
cs
cmp
retf
pop
mov
mov
pop
dec
jb
add
pop
ds
add
popa
jo
mov
mov
inc
cld
inc
int
aam
ds
inc
or
add
sbb
adc
sub
xor
jle
xchg
add
add
data16
jae
out
pop
movs
xor
push
bound
test
nop
xchg
sub
mov
and
aaa
mov
jp
xchg
and
out
push
adc
lds
cmp
add
dec
aam
mov
push
inc
dec
rcl
fstp
lea
push
inc
inc
jae
data16
push
ror
add
cmp
push
(bad)
arpl
and
mov
jbe
jp
pusha
addr16
ror
test
xchg
movs
es
cs
cwde
(bad)
fisub
rcl
pop
xchg
mov
adc
or
call
enter
xchg
adc
push
push
push
jae
pop
mov
sbb
nop
xchg
call
adc
add
inc
and
cmp
and
adc
arpl
cmps
adc
and
pusha
jp
adc
and
mov
sbb
cmps
out
mov
adc
pop
sub
ins
loop
xchg
cmps
pop
shr
mov
mov
pop
mov
pop
cmps
push
sbb
inc
scas
adc
add
and
js
and
xor
pushf
push
call
fs
xchg
lea
cwde
mov
aaa
jbe
inc
jmp
mov
or
(bad)
(bad)
cmp
push
cmp
xchg
mov
mov
mov
add
xchg
arpl
add
and
or
push
sub
add
adc
mov
inc
push
imul
sahf
and
movs
fadd
shl
mov
mov
aad
or
push
mov
out
sbb
add
pop
or
push
xchg
mov
xchg
test
or
pop
push
xchg
push
add
add
jmp
leave
jmp
shl
sub
mov
or
popf
sbb
aas
add
add
aaa
pop
or
call
push
rol
inc
cmp
cmp
mov
test
xchg
sub
xchg
inc
xchg
int3
and
mov
add
sub
fcom
add
das
xchg
aam
int3
in
mov
inc
pop
sahf
add
push
sbb
(bad)
sub
sub
pop
dec
dec
test
push
mov
jb
push
mov
lods
inc
or
adc
add
sbb
xchg
loop
pop
mov
jl
cwde
mov
ins
cmp
test
mov
out
mov
push
add
jnp
daa
add
sbb
loope
and
shl
popa
jmp
in
inc
push
push
sub
and
or
or
rol
and
and
add
sbb
mov
inc
pop
mov
popf
and
sbb
jmp
ds
inc
loop
lods
cmp
cmp
out
inc
and
xchg
xchg
adc
lods
adc
mov
mov
xchg
inc
mov
adc
bnd
adc
ja
xchg
hlt
les
scas
sbb
and
inc
xor
mov
call
add
ret
(bad)
(bad)
cmp
adc
or
add
mov
les
push
pop
adc
jmp
dec
or
ret
push
push
fdiv
fnstenv
pop
mov
loopne
ret
xchg
aam
scas
pop
push
lds
jne
push
push
sub
dec
mov
jecxz
sbb
and
or
mov
sbb
push
add
loope
pop
push
ja
dec
inc
adc
pushf
mov
mov
sbb
das
cmp
(bad)
mov
and
inc
jle
xor
push
push
xchg
jbe
pop
push
rcl
push
inc
ja
ror
sbb
cmp
or
xor
mov
add
gs
xor
lea
fs
shr
test
ja
or
aam
bound
add
stc
add
or
aas
add
add
add
add
add
push
inc
loop
sub
(bad)
mov
je
add
inc
into
out
cmp
adc
jge
in
jp
sub
dec
lahf
jg
or
stc
lods
out
jecxz
or
and
sbb
jae
ss
nop
dec
mov
push
push
cwde
xchg
pop
jg
jno
pop
outs
sub
outs
mov
test
cmps
movs
mov
mov
or
mov
mov
sbb
sbb
sbb
les
ss
mov
dec
shl
push
rcl
call
inc
scas
xor
imul
ins
popa
push
mov
jecxz
sub
mov
mov
jecxz
(bad)
sbb
outs
push
mov
sub
mov
sub
xchg
dec
xchg
mov
jb
outs
pop
mov
(bad)
adc
mov
push
out
dec
add
int
add
fnstenv
xchg
cmps
cmps
pop
call
cwde
or
jmp
fs
int3
gs
push
xchg
ins
scas
adc
jns
sbb
je
(bad)
cmp
mov
adc
push
push
and
xchg
mov
out
jbe
out
rcl
pop
aad
dec
xchg
scas
sub
push
jmp
cmps
in
retf
dec
xor
(bad)
and
sti
mov
jge
(bad)
loopne
je
inc
mov
and
(bad)
(bad)
in
aam
pop
mov
ss
les
xor
fwait
jge
sub
pop
inc
daa
pop
out
stc
data16
mov
ret
and
adc
and
sbb
daa
jb
js
fst
sub
mov
iret
adc
pushf
cmovg
inc
lahf
ds
pop
push
dec
shl
dec
lock
neg
loopne
inc
and
nop
inc
sbb
pop
adc
fbstp
pop
mov
je
and
ins
inc
inc
not
mov
pop
cmp
rcr
cmp
pop
adc
mov
mov
pop
pusha
or
(bad)
adc
mov
mov
push
sbb
cmovle
cmps
bound
pop
mov
cmp
das
sub
iret
dec
jae
test
push
inc
std
or
bound
xchg
dec
mov
sbb
ss
cmc
rol
xor
xchg
inc
sbb
adc
sub
jno
(bad)
mov
mov
push
stos
imul
cdq
or
pop
mov
mov
je
cmp
add
or
or
rol
mov
pushf
mov
cli
inc
sub
call
jle
add
dec
jp
call
ret
or
fsub
inc
stos
add
loopne
jmp
add
push
push
loopne
(bad)
jmp
movs
xchg
lock
mov
jecxz
push
sbb
sahf
xchg
je
xchg
add
fiadd
ins
add
loope
sbb
push
out
sbb
scas
pop
sahf
fsubr
xor
pop
push
aas
dec
push
repz
mov
xchg
imul
ret
push
add
sub
imul
ins
stos
adc
sbb
jno
mov
mov
shl
adc
lea
mov
sub
sub
imul
cs
popa
sbb
fs
cmp
inc
add
push
fdiv
inc
fst
nop
fucomp
xchg
icebp
sub
mov
mov
scas
int3
int
inc
jbe
mov
pop
mov
mov
outs
loop
xor
push
ds
xor
or
dec
add
or
es
mov
and
pop
retf
push
mov
pop
mov
mov
add
in
mov
test
loopne
ret
pop
aas
cmp
fwait
xchg
lock
sahf
pop
in
ins
or
jl
ja
sub
jbe
mov
push
xchg
mov
jp
cmc
in
jmp
jle
addr16
sti
jns
sub
add
loopne
xor
cmp
push
rcr
out
rcl
ins
sbb
movs
xor
sub
mov
and
pop
pop
push
fist
adc
mov
cli
sub
ret
push
xchg
add
sub
pop
dec
arpl
push
push
cmp
mov
and
dec
int3
stos
sahf
(bad)
and
jle
inc
mov
push
cwde
jmp
loopne
int3
gs
repz
push
mov
mov
sbb
jp
arpl
push
(bad)
xor
cmps
and
repz
add
pop
movs
cmp
lea
and
out
aas
sub
jmp
sub
or
clc
rol
mov
aam
sub
pop
sbb
add
(bad)
fsub
and
aam
inc
fisubr
popf
pop
aaa
rol
fcmove
ins
js
gs
clc
or
mov
add
inc
and
cwde
loope
loop
rcl
pop
mov
jo
add
fdiv
retf
in
test
js
call
stc
xchg
or
ins
adc
mov
test
retf
(bad)
xlat
loope
pop
dec
and
add
or
int
rol
int3
pushf
int
inc
xor
pop
sbb
lldt
jno
enter
loopne
loop
addr16
sbb
dec
ja
les
lahf
jne
xchg
fldcw
pop
test
adc
scas
push
lock
inc
or
xor
mov
fwait
lods
sub
in
xchg
fadd
mov
cmp
leave
in
pop
sub
push
xchg
push
nop
inc
cmps
fsub
and
mov
push
lods
test
and
xor
daa
shr
test
aam
(bad)
shl
xchg
fisubr
test
push
movs
push
xlat
fiadd
dec
movs
push
lods
cmp
ror
or
mov
dec
sub
xchg
fwait
dec
add
imul
enter
lea
pop
push
cwde
retf
mov
sub
out
cwde
les
imul
push
cmps
xchg
popa
loope
pop
daa
mov
stos
dec
test
inc
mov
sbb
push
fldcw
sub
jmpw
push
loop
jle
inc
xchg
sti
fmul
mov
xchg
mov
jmp
xlat
push
mov
aad
xor
jmp
jg
sub
pop
test
push
scas
mov
mov
mov
add
loopne
and
outs
inc
iret
std
and
mov
clc
ret
sub
cmp
out
push
lods
hlt
in
je
jns
movlhps
cdq
repnz
dec
jge
aad
movs
xchg
dec
dec
hlt
pop
sub
pop
dec
lock
mov
arpl
and
or
jmp
push
rol
sub
xor
ret
dec
pusha
add
loopne
or
das
pop
push
fadd
pop
xchg
mov
inc
sub
fs
hlt
add
in
stc
xor
mov
pop
push
mov
fadd
sbb
stos
push
add
mov
xlat
fidiv
out
cmp
xor
fyl2x
test
push
xlat
rcr
repnz
sbb
mov
dec
imul
push
aas
fwait
inc
ret
enter
lods
aas
and
pop
mov
imul
pop
sbb
pop
xchg
dec
outs
xor
out
dec
jmp
das
nop
jmp
gs
addr16
out
push
cmp
inc
fsubr
loopne
sahf
dec
inc
mov
scas
cmps
je
sub
addr16
push
mov
and
add
iret
js
sbb
mov
call
lea
outs
inc
inc
and
mov
(bad)
adc
pop
mov
xchg
cmp
in
fneni(8087
push
mov
mov
mov
mov
ins
mov
or
pop
retf
scas
ins
(bad)
les
mov
mov
pop
pop
in
out
cdq
scas
xchg
push
xchg
outs
mov
or
outs
and
fcmovbe
sbb
dec
fld
jp
push
out
inc
or
jnp
sbb
jmp
cmps
jp
stos
pusha
movs
sub
mov
mov
iret
xlat
sub
mov
(bad)
sbb
ss
push
stos
ficom
(bad)
stc
mov
(bad)
popf
rol
jp
mov
pop
stc
rcr
in
cmps
jg
inc
mov
or
mov
pop
stos
stc
mov
in
mov
jnp
inc
cld
idiv
loope
and
mov
sbb
lock
cs
push
jmp
inc
push
jb
xchg
repnz
jo
es
into
mov
jmp
push
sbb
mov
mov
jg
cmp
mov
or
jb
out
jno
push
std
add
lock
lock
ret
fsubr
clc
fwait
stos
fdivp
push
fmulp
or
xor
(bad)
repnz
fcmovu
and
cmp
sti
out
dec
rol
sub
imul
into
jne
push
fld
repz
mov
sbb
sbb
js
out
add
mov
jnp
push
add
mov
sub
add
push
sub
jae
mov
fadd
jp
aam
(bad)
jle
adc
cmp
jns
ja
adc
jb
test
test
push
jo
mov
push
jo
add
jl
adc
sub
pop
and
adc
daa
inc
add
repnz
add
pop
add
hlt
inc
nop
imul
and
inc
jo
xchg
or
aaa
add
pusha
add
neg
adc
jbe
adc
pop
sub
and
sub
jg
mov
and
jne
les
and
pusha
push
adc
add
rol
daa
sub
popa
aas
mov
cmp
add
enter
add
addr16
les
pop
pop
xchg
push
dec
and
mov
push
(bad)
dec
sbb
and
xor
imul
jo
cmp
xchg
add
mov
das
push
adc
jge
push
inc
cdq
movs
pop
ja
bound
imul
push
dec
jle
in
cmp
test
add
ja
lock
add
and
push
push
xchg
inc
jmp
imul
sub
or
add
add
dec
add
inc
mov
dec
shl
out
dec
pusha
inc
add
shr
test
pop
div
mov
cwde
cs
lea
mov
pusha
in
jne
pop
add
add
mov
enter
xor
inc
jmp
dec
div
dec
inc
mov
sbb
jge
daa
jb
lock
retf
sbb
loope
jo
dec
xchg
pop
inc
mov
rol
push
and
mov
jle
pop
test
and
jp
mov
movs
add
daa
push
add
jl
pop
add
add
call
dec
mov
jns
arpl
xor
jmp
and
arpl
nop
jle
xchg
cmp
add
add
sub
mov
fld
adc
pop
lds
mov
pop
arpl
jns
jo
push
stc
mov
add
mov
xor
cmp
imul
js
jne
mul
pop
xchg
pop
gs
div
cmps
repnz
jns
dec
sbb
jbe
jmp
stc
shr
adc
outs
lods
mov
mov
add
add
add
xor
fst
mov
scas
add
repz
aas
cmps
or
sub
lds
xbegin
inc
(bad)
jae
inc
jno
cmps
aas
sbb
pop
add
(bad)
call
shl
jb
ja
pop
out
idiv
ins
leave
sbb
mov
scas
xor
sbb
inc
cmps
pop
mov
fcom
(bad)
call
inc
je
jo
jmp
add
rcl
fdiv
aaa
pop
dec
aam
idiv
lahf
stos
add
clc
lahf
popf
jo
push
repnz
xor
and
add
adc
add
jmp
test
cli
pop
add
mov
popf
cmp
and
imul
sbb
pop
or
jge
pop
lahf
add
lea
push
jb
push
repnz
add
jo
dec
add
adc
inc
cmp
clc
xchg
call
cmp
imul
mov
in
(bad)
jae
mov
inc
loopne
stc
jae
inc
cmp
cwde
xchg
pop
mov
adc
sbb
retf
cdq
movs
dec
and
out
add
xor
adc
sbb
add
xchg
pusha
mov
pop
test
xor
mov
(bad)
jo
xchg
and
retf
mov
mov
add
stos
test
xor
mov
mov
add
or
add
add
movs
pop
and
mov
pop
lods
cmp
mov
jp
xlat
jae
cli
mov
inc
add
stos
cmp
pop
lahf
and
test
push
push
lods
mov
lods
int
mov
call
mov
inc
inc
add
xchg
dec
les
adc
aas
xor
jno
xchg
cmp
or
mov
rol
daa
movs
pop
pop
addr16
push
lods
jns
scas
(bad)
call
xchg
sbb
add
adc
add
scas
add
sbb
aaa
sti
mov
jmp
mov
jecxz
or
sti
xchg
xor
sbb
ja
push
jne
cmp
mov
mov
sbb
mov
push
scas
sub
sbb
fwait
jo
ss
test
stos
xchg
add
add
mov
int
xchg
mov
and
add
sub
inc
pop
loop
cmp
mov
mov
sahf
xchg
push
cmp
add
cdq
mov
cmp
test
push
mov
stos
jne
stc
mov
inc
and
adc
or
or
mov
jo
sbb
push
leave
(bad)
int3
xlat
xchg
add
mov
sub
sbb
cmps
dec
mov
(bad)
pop
or
arpl
inc
push
mov
fisubr
jns
inc
adc
add
mov
fs
mov
add
fwait
push
add
mov
xchg
sbb
clc
mov
sbb
add
lock
call
jbe
scas
fcmovnbe
arpl
xchg
push
push
inc
imul
nop
nop
leave
jge
or
inc
push
push
rol
adc
test
(bad)
mov
mov
pop
add
ret
mov
pop
mov
pusha
add
stos
push
jnp
mov
adc
jmp
mov
mov
pop
cdq
gs
jae
ins
sub
jecxz
rcr
mov
mov
sbb
dec
mov
stc
mov
jl
mov
add
shl
sbb
xor
add
cmp
lds
data16
rol
sub
scas
push
dec
xchg
jno
push
xchg
xchg
inc
cmp
push
dec
movs
les
push
sbb
add
add
pusha
add
sti
movs
dec
xor
dec
sbb
mov
lods
add
rol
sub
fwait
add
cmps
dec
(bad)
dec
cli
enter
pop
mov
adc
add
lock
lock
sub
jae
mov
sar
jno
fidiv
inc
xchg
jne
pop
aas
sbb
ins
ins
(bad)
in
mov
mov
imul
add
rol
add
jg
rcr
mov
sbb
inc
loopne
sub
pop
loopne
fs
cmps
imul
pop
mov
call
cmps
fcmovne
mov
mov
stos
add
sahf
push
add
add
jp
ror
add
xor
add
retf
leave
push
fadd
push
xchg
enter
mov
jmp
jp
xchg
lods
jl
adc
xor
mov
mov
pop
add
mov
out
into
and
lds
lock
add
mov
cmp
popa
xchg
je
mov
lock
rol
push
lea
or
add
lock
inc
add
fwait
jae
add
add
add
sbb
aad
mov
mov
into
cmp
add
xor
cmp
cmp
mov
loopne
cs
int3
shl
cld
shl
sbb
hlt
push
retf
add
pop
into
gs
mov
add
pusha
add
call
add
add
add
or
add
pusha
add
mov
push
cmp
and
pop
mov
mov
aad
pop
fimul
add
fnsave
sub
xchg
push
xchg
push
pop
cmc
mov
mov
pop
nop
(bad)
movs
in
shl
pop
into
sbb
push
pop
fsubr
or
add
test
dec
ret
add
shr
and
add
lock
add
mov
lea
ficom
xor
add
mov
imul
aad
inc
fucomip
stos
add
add
mov
loopne
sbb
xchg
xor
and
inc
fdivr
add
xor
sahf
sbb
in
add
jle
cs
(bad)
add
fucom
adc
retf
and
aam
add
in
retf
jecxz
loopne
pop
adc
add
xlat
mov
cdq
cmp
nop
(bad)
cmp
loop
cmp
mov
cmps
dec
aad
lods
add
loopne
ret
xor
or
dec
dec
(bad)
inc
fstp
pop
mov
mov
add
xor
or
loope
retf
fwait
sbb
stos
sub
js
jns
push
retf
retf
loop
rcl
pusha
add
dec
into
movs
int3
loop
push
jecxz
inc
fist
sub
jb
fsub
mov
lods
push
xchg
and
push
aad
rol
loopne
cmp
add
ficom
add
add
out
call
add
jnp
outs
pop
xchg
mov
addr16
jmp
mov
adc
sub
mov
test
add
(bad)
std
xlat
and
loop
xor
es
fnstsw
shl
adc
or
mov
pop
aad
sub
sti
pop
test
retf
add
add
or
in
(bad)
dec
(bad)
push
inc
sbb
aam
mov
xchg
add
jecxz
jle
inc
aaa
rol
repz
repz
cwde
pushf
sbb
adc
jmp
mov
pop
pushf
loope
cwde
mov
daa
fcomp
sbb
ret
clc
cmp
xor
or
loop
pushf
add
xor
or
iret
shl
mov
movs
cmp
repz
xchg
cmp
add
jno
jmp
shl
out
pop
lods
cmp
outs
fadd
into
dec
retf
loop
mov
dec
cmp
inc
cmp
sbb
imul
into
rcr
psllw
das
icebp
mov
inc
in
aam
scas
add
add
pop
iret
out
int3
retf
mov
scas
add
mov
dec
pop
xor
inc
in
scas
fcom
(bad)
mov
jmp
mov
mov
pop
ret
add
lds
or
xlat
hlt
shr
xchg
pusha
lahf
cmc
cs
mov
fld
icebp
mov
cmc
xor
pop
add
dec
call
les
add
push
out
cmps
sbb
cmp
es
sub
lods
mov
loope
sbb
or
(bad)
xlat
sar
rcl
dec
stc
pop
jg
clc
sbb
push
lahf
icebp
push
icebp
or
add
add
mov
mov
push
retf
sub
mov
sbb
add
rol
cwde
cmp
loop
fst
fnsave
dec
sub
jp
outs
lea
adc
xchg
push
es
inc
shl
stc
nop
dec
jmp
jp
movs
sbb
mov
ret
in
sbb
adc
and
iret
out
inc
loopne
push
adc
lock
addr16
mov
xor
adc
mov
test
inc
and
push
and
mov
pusha
addr16
jbe
bound
test
in
ss
enter
or
mov
imul
in
mov
ret
loope
add
add
js
xor
lds
jb
les
inc
sar
sahf
out
pop
and
and
jmp
ins
and
xchg
sbb
or
scas
push
pop
cs
in
mov
xor
lods
mov
sub
int
or
mov
shl
add
in
add
inc
xchg
cmp
adc
mov
aad
cmps
sub
test
test
outs
pop
clts
mov
and
test
cmp
mov
and
push
xlat
inc
and
mov
and
lock
in
adc
or
inc
mov
(bad)
popf
shr
dec
add
adc
dec
aaa
push
test
stos
push
nop
mov
(bad)
xor
pusha
mov
sbb
or
pusha
and
stos
inc
cmp
dec
inc
adc
dec
hlt
out
mov
arpl
int
fstp
add
xor
sbb
pop
and
int
(bad)
jnp
push
call
rcl
fs
ret
or
scas
jmp
and
xchg
sti
xchg
pop
sub
xchg
mov
test
pop
test
dec
pop
movzx
and
xchg
in
and
call
mov
test
pop
add
rcl
mov
in
add
xor
sub
mov
cmp
mov
add
push
and
or
adc
ret
push
sbb
push
sub
out
or
das
xchg
loop
or
ret
xor
or
xchg
ds
inc
cmp
lds
data16
lds
loopne
adc
adc
cmp
jmp
je
test
dec
push
mov
ins
ret
add
les
add
adc
inc
pop
xor
lea
pop
mov
sub
aad
(bad)
push
dec
mov
dec
xor
pusha
int
div
test
mov
push
pop
into
stc
jecxz
adc
(bad)
test
adc
lock
imul
mov
push
add
add
es
je
loopne
cwde
xor
js
push
add
test
mov
bound
inc
adc
ss
adc
mov
mov
in
cwde
movs
mov
push
jbe
sar
ins
test
xchg
repnz
xor
movs
or
xchg
pop
pop
adc
cmp
bound
push
inc
sub
cmp
pusha
test
pop
cwde
mov
or
cmp
mov
ins
and
mov
or
sti
pop
cwde
and
sbb
les
add
call
inc
mov
xchg
push
add
int
pop
xor
inc
retf
sbb
mov
mov
dec
or
adc
push
mov
inc
dec
sub
scas
sub
add
and
cmp
or
or
add
and
adc
and
mov
out
mov
sbb
test
sub
cmp
inc
adc
sbb
sar
cmp
ret
(bad)
cwde
mov
and
mov
lahf
cld
add
xor
cmp
dec
adc
inc
rol
dec
mov
sbb
sub
jecxz
mov
push
shl
pop
movs
add
cmp
jo
xchg
push
bound
pop
cmp
outs
or
add
test
pop
scas
add
aam
sub
out
inc
pusha
movs
and
push
add
pop
pop
xchg
outs
dec
out
dec
rcl
xlat
mov
iret
leave
(bad)
fucom
or
and
cwde
(bad)
aad
ret
mov
sbb
or
fadd
les
or
cmp
add
xchg
daa
xor
adc
mov
push
enter
test
pop
sub
icebp
dec
scas
push
cdq
rol
call
aad
adc
add
call
(bad)
call
jne
inc
sbb
mov
inc
loopne
daa
push
ror
iret
fsub
loope
or
test
and
pop
adc
mov
pop
fpatan
iret
sbb
inc
mov
test
cmp
mov
mov
add
(bad)
mov
lock
loopne
push
inc
inc
pop
and
stc
sahf
mov
dec
mov
push
mov
cdq
or
movs
or
mov
loopne
xor
push
icebp
mov
or
push
je
test
stos
push
stos
fcomp
cmp
and
dec
fcmovne
sub
and
enter
mov
or
cmp
std
cmp
sar
xor
or
mov
xlat
nop
xor
ret
add
mov
or
ins
pop
mov
fcmovnb
movs
call
ret
movs
mov
mov
pushf
mov
xchg
mov
push
mov
sub
rcl
mov
cmp
sbb
loope
rol
mov
out
cmc
ret
add
call
inc
loop
inc
pop
clc
shr
jge
lods
sbb
mov
xor
add
mov
pop
push
add
mov
sub
aaa
movs
sub
add
adc
dec
dec
cmp
pop
mov
fistp
mov
sub
not
push
push
stos
mov
sub
inc
push
dec
jo
lods
or
pop
in
sub
or
sbb
cwde
ret
je
loopne
add
nop
not
mov
imul
or
pop
jno
(bad)
mov
add
mov
or
add
push
sub
inc
and
mov
add
cmps
add
or
lea
mov
push
ja
stos
fstp
adc
mov
mov
xchg
js
cmp
sub
jp
add
mov
mov
jg
xlat
cmp
jle
pop
pop
jp
ss
pop
js
xchg
sub
les
idiv
xchg
add
add
mov
lahf
seto
pop
lods
pop
fs
scas
cwde
es
fwait
mov
lock
push
dec
cmps
sbb
push
mov
dec
or
(bad)
imul
dec
arpl
test
and
xchg
fwait
mov
scas
imul
mov
mov
ret
add
pop
pushf
xchg
mov
adc
rol
bound
xchg
into
in
cmp
dec
mov
add
jno
aas
out
and
xchg
test
pop
loop
jne
ret
push
jecxz
inc
outs
movs
push
mov
xchg
test
mov
xchg
xor
xor
add
and
mov
dec
add
sub
mov
inc
adc
push
loope
mov
adc
xchg
pop
adc
add
fcmovb
mov
jmp
mov
pop
cli
std
inc
jno
add
adc
mov
mov
test
xor
and
jbe
cmp
cwde
cmp
popf
std
test
loop
add
or
jecxz
add
mov
add
mov
icebp
add
cmp
js
data16
xchg
test
pop
or
jle
mov
sbb
popa
sub
pop
sbb
movs
icebp
setns
xor
dec
pushf
or
jl
in
call
repz
push
pop
sub
or
dec
push
mov
adc
ss
adc
call
inc
mov
and
sub
add
push
retf
dec
or
lahf
mov
lods
add
mov
jnp
test
pop
dec
mov
pushf
cmp
add
xchg
cmp
xor
test
in
add
sbb
add
repz
repz
or
mov
js
xor
sti
and
xor
mov
sub
push
lods
jg
sahf
xchg
adc
adc
mov
fldcw
test
aad
xchg
or
push
push
add
dec
cmp
test
sub
popa
enter
push
mov
jno
sbb
or
xor
add
rol
retf
sub
jmp
mov
fucom
loop
inc
mov
mov
dec
xchg
test
pop
jne
pop
mov
add
mov
arpl
cmp
gs
scas
or
push
dec
mov
and
and
inc
jae
retf
out
out
or
or
enter
rcl
in
cli
stos
sti
inc
mov
and
cld
int3
outs
dec
sbb
mov
mov
pop
dec
neg
les
sahf
jecxz
fsub
bound
add
out
and
sub
mov
popa
shl
dec
rol
cmp
and
into
nop
rcr
int
dec
inc
sbb
outs
scas
into
call
cmp
retf
add
ins
imul
les
cdq
mov
dec
les
and
lods
sub
pop
ret
and
or
jb
cmp
in
jp
bound
add
push
ins
push
rol
add
in
mov
or
mov
hlt
mov
enter
mov
inc
lock
mov
mov
or
add
iret
xchg
addr16
ret
xor
sar
pop
xor
add
leave
adc
mov
mov
sbb
add
and
repnz
add
add
pop
dec
push
idiv
fs
cld
ror
sbb
cs
cmp
or
imul
and
sbb
push
loopne
rcl
out
and
dec
aam
jmp
shr
stos
and
pop
out
adc
add
and
jnp
add
pusha
or
dec
cmc
xchg
scas
push
sub
mov
sbb
pop
push
inc
push
push
loopne
nop
(bad)
pop
sbb
push
mov
and
push
(bad)
push
sbb
or
ins
adc
xor
cmp
aam
in
adc
mov
sbb
in
es
dec
cmp
es
dec
sub
inc
aad
sub
test
push
pusha
add
sub
and
sub
add
pusha
add
and
enter
adc
sub
adc
and
and
dec
call
rcl
add
sti
or
adc
repnz
adc
jmp
lea
mov
xor
adc
mov
pop
dec
adc
sar
inc
add
loopne
mov
sbb
add
pusha
add
inc
add
adc
mov
stos
xor
or
and
fidiv
add
test
mov
in
fcom
(bad)
(bad)
and
test
adc
push
ffreep
add
xor
add
and
add
movs
loop
jns
pusha
jnp
push
sub
and
loopne
int3
pusha
bound
mov
sub
mov
shl
jecxz
inc
dec
ds
and
jno
add
jo
loope
dec
es
inc
mov
daa
push
jg
dec
adc
add
mov
in
pusha
push
call
add
adc
rol
loopne
outs
add
add
mov
or
pop
mov
push
inc
std
jmp
bound
jle
add
push
sbb
jno
pop
adc
in
or
call
inc
sub
ins
mov
in
add
cmp
add
inc
push
in
cwde
inc
push
shl
push
stos
pop
adc
mov
inc
mov
mov
add
retf
mov
aas
inc
dec
mov
add
nop
ret
mov
or
and
repz
and
push
mov
and
and
jg
xor
nop
and
pop
sub
dec
pop
call
push
xor
add
and
inc
bound
xor
add
shr
mov
dec
push
loopne
shl
data16
pusha
push
mov
mov
and
jle
ins
and
pop
jo
or
ret
push
clc
add
push
popa
inc
xor
rol
mov
pop
jb
aas
add
mov
cli
xchg
jb
sub
push
mov
sub
outs
aam
mov
sysenter
push
xchg
in
mov
call
inc
sar
push
bound
sub
dec
ja
push
popa
add
push
push
adc
sub
add
js
add
rcl
push
add
push
add
rol
inc
call
jmp
xlat
adc
rcpps
dec
jge
pop
shr
add
adc
fbstp
push
and
fs
loope
clc
push
dec
xchg
adc
rol
push
sbb
add
push
jecxz
push
xchg
mov
adc
or
ins
inc
movs
inc
push
jno
push
inc
sbb
ret
ins
imul
in
int3
adc
push
aam
adc
loope
(bad)
mov
add
ds
shl
jb
jl
push
and
cld
je
sbb
sub
xor
jne
loopne
pop
jae
sbb
add
shl
mov
sub
test
dec
outs
inc
inc
pushf
dec
sbb
nop
aam
jo
fisub
(bad)
in
sub
cmp
cmps
jbe
jp
cli
sub
push
push
jg
push
lods
xchg
bound
neg
sub
xor
add
pusha
data16
daa
and
dec
and
aad
inc
popa
mov
shl
dec
adc
icebp
push
cdq
retf
add
shl
sar
and
mov
aam
xor
xor
pop
xor
adc
push
push
clc
add
not
mov
outs
mov
sbb
je
mov
pop
je
pop
ja
pop
push
push
sub
inc
dec
jbe
inc
adc
lock
ror
sar
in
ficom
sub
stos
push
in
es
repnz
xchg
imul
inc
es
icebp
pop
jecxz
pop
push
mov
pop
add
xor
or
inc
dec
aad
fdiv
lds
stos
jl
push
shr
and
nop
inc
lods
mov
popa
aam
xor
test
xchg
mov
jg
ret
add
add
and
mov
jg
mov
jp
sbb
repz
dec
pop
sbb
ins
lods
xlat
ins
xchg
push
je
lods
mov
jo
jle
cmp
adc
mov
pop
xchg
aam
dec
jbe
out
imul
jne
cs
shl
gs
add
retf
loope
cmc
and
pop
adc
push
dec
inc
add
add
fcmovbe
xor
mov
(bad)
mov
inc
test
push
mov
push
dec
loopne
push
sub
mov
retf
add
jge
dec
les
xchg
pop
mov
cmp
js
pop
cwde
test
cmps
and
jb
inc
jns
sbb
mov
dec
inc
push
push
inc
(bad)
adc
sbb
rol
cmp
ja
pop
dec
mov
xchg
cmc
jl
jo
mov
je
adc
scas
stos
inc
jl
cs
jl
and
push
xor
cmp
js
ja
jb
aam
hlt
add
xor
mov
shl
adc
push
je
dec
das
add
and
xchg
scas
dec
adc
add
and
cmp
mov
stos
add
jmp
cmp
dec
sahf
out
inc
sbb
fcom
hlt
lods
push
and
push
cdq
clc
mov
pop
pop
push
add
push
or
enter
jmp
mov
cli
pop
jno
aaa
xchg
jnp
push
cmp
push
scas
ret
ja
cmp
xor
loopne
and
dec
fst
adc
inc
xor
loopne
mov
gs
push
mov
pcmpgtb
pusha
xor
lods
adc
cdq
iret
mov
xor
call
test
push
mov
add
pop
pop
jl
mov
mov
and
mov
xchg
dec
ds
cmp
pushf
add
sub
adc
push
push
or
adc
or
pop
lods
or
test
gs
inc
shl
jp
push
mov
movs
mov
test
push
movs
or
enter
pop
mov
xchg
mov
push
fwait
sub
mov
nop
xchg
cli
mov
and
cwde
jae
in
sbb
popa
add
les
mov
cwde
(bad)
mov
aas
dec
mov
lods
test
or
loopne
mov
mov
jp
push
jmp
sub
or
pushf
or
inc
lds
add
mov
add
dec
(bad)
fist
rol
mov
rol
mov
cmp
stc
jo
ja
(bad)
js
jl
adc
stos
mov
arpl
jecxz
stos
xlat
adc
jo
lea
push
cld
add
call
adc
push
pop
inc
sbb
add
sub
lds
pop
jno
pop
sar
push
cmps
mov
repnz
adc
add
mov
pop
mov
jl
shl
pop
jecxz
cmp
out
js
fcom
sbb
call
jbe
mov
jno
pop
stos
jnp
or
mov
add
sub
fild
scas
adc
mov
fidivr
pop
xor
ficomp
mov
mov
fcomp
jge
in
adc
jmp
and
adc
in
and
js
cld
push
jmp
mov
inc
add
ins
ret
clc
loop
idiv
push
aam
ror
div
mov
ficomp
or
xchg
cli
sub
pushf
adc
test
sti
xchg
inc
lods
push
jo
push
xor
(bad)
adc
pop
mov
and
clc
jle
or
lods
repz
stc
(bad)
ds
mov
pop
cdq
mov
mov
mov
sbb
inc
xchg
lods
rcl
adc
nop
mov
jne
or
arpl
in
add
pop
hlt
in
push
and
and
pop
jecxz
fld
std
xor
adc
data16
and
retf
movs
push
(bad)
shl
mov
movs
or
jb
bound
and
dec
mov
cmp
mov
cli
push
rol
(bad)
rcl
loopne
clc
iret
jnp
sub
add
test
xchg
fnstenv
mov
sahf
retf
or
ficomp
pop
fild
cs
cmp
loope
leave
jb
mov
mov
xor
push
sbb
cmp
aam
add
loop
dec
fild
sub
out
and
push
xor
fisttp
add
xchg
xor
mov
dec
pop
push
rol
jb
daa
test
dec
test
xor
push
jge
ret
fidivr
retf
inc
xor
imul
or
add
mov
xlat
push
mov
xor
push
jb
aas
cmps
pushw
or
push
bound
lods
fld
jne
pop
or
dec
iret
shl
pop
es
loope
jmp
add
dec
dec
dec
movs
cmps
movs
mov
out
popa
inc
dec
rol
sbb
es
cmp
call
mov
sbb
je
sbb
loopne
aam
inc
or
pop
or
in
jne
adc
cmp
lods
pushf
aam
xchg
push
inc
cwde
int
jl
lods
inc
(bad)
sub
es
add
pop
fsubr
inc
xor
in
cld
out
int3
dec
or
mov
sub
div
dec
and
dec
cmp
inc
push
imul
and
cmp
fwait
lahf
sbb
leave
lds
fistp
in
cmc
jne
fadd
adc
jmp
loop
nop
ds
push
push
add
and
jo
mov
add
call
push
sbb
leave
adc
mov
sbb
ss
retf
pop
adc
(bad)
les
rol
or
pop
push
inc
inc
fcomp
dec
sub
(bad)
pushf
je
cmp
mov
mov
scas
sub
jmp
adc
add
bound
push
xor
test
adc
and
or
(bad)
mov
lock
gs
pop
inc
dec
xchg
(bad)
dec
jo
adc
test
add
lds
mov
inc
daa
mov
gs
lock
add
or
stos
data16
pop
mov
xchg
add
adc
inc
add
adc
out
push
das
sbb
pop
or
adc
and
inc
mov
and
or
out
sub
pop
add
pop
pop
into
or
imul
cmps
jbe
inc
test
cmc
les
fwait
sbb
jl
push
outs
or
add
arpl
ss
sub
imul
push
pop
sbb
in
sbb
jns
and
fadd
in
mov
inc
jp
mov
sbb
dec
inc
pop
call
pop
ss
fiadd
pop
and
and
xchg
or
add
jno
test
lock
shl
add
add
daa
test
bound
inc
hlt
inc
fmul
mov
or
in
dec
imul
loopne
add
mov
sub
sub
(bad)
jo
or
clc
mov
pop
shr
add
cmp
pop
sbb
pusha
addr16
cmps
adc
fldcw
dec
push
jne
sbb
imul
cwde
jb
sbb
fadd
test
jle
push
jno
cld
inc
rol
outs
jl
mov
cwde
out
int3
je
in
dec
imul
xchg
bound
das
mov
add
test
push
mov
mov
push
lock
jno
dec
add
add
and
sbb
push
call
pop
xchg
test
or
retf
jb
lods
add
push
pop
lods
mov
mov
retf
lea
cmps
xor
cdq
sub
mov
aas
cld
movs
cdq
sub
fimul
mov
xchg
pusha
dec
rcl
add
sub
mov
pop
jl
mov
mov
aad
pop
loope
pop
cs
daa
repz
out
and
mov
xchg
and
nop
test
retf
shr
mov
jb
xchg
sub
ins
xor
or
sti
cdq
(bad)
sbb
add
mov
in
icebp
ins
aam
sub
pop
or
outs
jne
xchg
test
adc
scas
ror
xor
xor
addr16
mov
aas
(bad)
clc
xor
cs
je
sub
mov
cs
out
mov
and
cmp
cs
enter
retf
push
or
jb
pop
or
rcr
inc
aam
mov
(bad)
inc
inc
pop
jl
cmc
outs
stos
push
jb
push
(bad)
jl
pop
imul
and
mov
or
inc
repz
cmp
and
adc
loope
ret
or
sub
sahf
mov
sub
fst
jne
add
ret
push
loop
xlat
mov
adc
loope
leave
mov
ins
sub
sub
add
mov
sbb
repz
sahf
sbb
ror
hlt
cmps
pop
jle
pop
fild
push
mov
and
mov
loop
mov
and
add
jne
test
or
int
push
add
mov
mov
shl
loope
xchg
sub
add
pop
arpl
inc
fs
in
aad
add
adc
pusha
outs
jl
movs
adc
jo
add
add
fucom
das
xor
and
adc
outs
dec
mov
enter
mov
mov
inc
and
jne
mov
push
pop
add
arpl
stc
js
mov
daa
ror
inc
and
nop
cld
mov
xor
adc
push
jo
rcl
inc
xchg
imul
push
mov
dec
sub
ds
dec
and
and
test
lods
dec
adc
adc
sub
jae
rol
add
cld
adc
mov
xor
cwde
sbb
mov
outs
sub
outs
adc
mov
mov
sahf
xor
dec
call
add
xor
movs
and
adc
jmp
push
ret
sbb
leave
in
dec
mov
ror
push
adc
imul
add
sbb
or
mov
dec
loopne
retf
dec
inc
sbb
push
inc
lods
nop
cmp
inc
ror
(bad)
or
and
xor
add
dec
outs
push
sub
inc
add
xor
jo
(bad)
dec
ja
sbb
imul
mov
in
inc
leave
or
lds
in
push
cmp
adc
sub
aam
jle
cmp
pop
sbb
(bad)
pushf
xor
adc
pop
ficomp
inc
inc
popa
add
adc
fidiv
pop
push
and
inc
imul
and
jne
(bad)
push
test
add
xor
shl
mov
push
inc
add
and
test
lods
sub
ss
push
xor
xor
pop
cmp
mov
enter
mov
mov
fmulp
popa
mov
or
fistp
ficom
mov
mov
dec
ss
add
jmp
nop
add
js
cmps
xor
inc
mov
xchg
push
adc
retf
sub
jo
lods
adc
dec
xor
pop
adc
arpl
adc
jmp
push
pop
hlt
push
sbb
adc
pusha
push
add
push
daa
mov
adc
mov
mov
adc
adc
sahf
xor
jo
push
and
dec
and
mov
cmps
xor
mov
sti
or
arpl
sbb
dec
imul
adc
retf
xchg
sbb
or
lds
cdq
mov
xchg
or
xchg
adc
xor
mov
and
shl
int3
adc
cdq
sbb
add
push
shl
adc
iret
in
mov
dec
jecxz
and
inc
or
pop
inc
mov
dec
add
mov
add
cs
cmc
inc
cmp
xor
mov
sbb
rcr
add
add
or
pusha
shl
add
mov
outs
mov
(bad)
xor
pop
cmp
sbb
mov
mov
pop
test
cmp
loopne
adc
and
push
in
cwde
lds
inc
movhps
imul
add
push
cwde
js
cmc
mov
cmp
cmp
mov
jmp
cmps
xor
inc
mov
adc
nop
or
and
sbb
sbb
lahf
clc
push
cwde
mov
ficom
mov
les
pusha
jne
xchg
jp
sbb
call
pop
cmp
aad
xchg
jb
lods
popa
sahf
xor
mov
call
leave
xor
sub
dec
popa
out
xchg
test
xor
jae
out
adc
fcom
add
cli
push
jmp
inc
neg
rcr
in
push
in
sahf
inc
pop
pop
mov
outs
repnz
and
mov
rcr
test
ja
(bad)
add
fidiv
mov
sbb
into
hlt
push
pop
push
sbb
push
lods
xchg
sti
jg
mov
lahf
jae
jns
xchg
cld
shl
sub
pop
sbb
xor
or
mov
ss
arpl
mov
test
add
inc
push
jge
add
pop
nop
cmps
cmp
add
movs
xchg
jne
pop
int3
enter
add
cmc
inc
push
xlat
fld
fucomp
fadd
dec
jno
pop
mov
push
dec
xor
push
in
fstp
in
push
imul
push
mov
push
and
fs
movs
jns
punpcklbw
ret
or
add
pop
pop
movs
push
pop
lock
pop
mov
(bad)
pop
push
pop
rcr
fadd
mov
dec
ds
popf
sub
xchg
sbb
rcl
gs
and
fiadd
mov
cld
or
lds
xchg
int
pop
or
call
or
jo
add
enter
pusha
adc
add
add
and
push
add
mov
dec
push
dec
cdq
enter
in
mov
push
pusha
and
call
js
inc
ror
dec
je
je
rcl
push
or
add
push
scas
lock
sbb
pop
movs
pushf
les
inc
pop
enter
adc
call
subps
pop
mov
ret
push
sbb
push
fadd
(bad)
test
and
arpl
int3
dec
pusha
cmp
dec
adc
es
push
and
mov
mov
push
cmp
and
pop
mov
popa
sub
sub
je
jb
and
jl
add
pop
jo
pop
jl
push
sbb
das
inc
lds
mov
or
jecxz
cmc
or
cli
and
cmp
rep
add
bound
loopne
retf
ins
fbstp
loop
loope
call
pusha
push
loopne
or
and
sub
add
sub
popa
or
fcmove
mov
mov
pop
sbb
add
push
push
in
push
jecxz
cmp
pop
sbb
pop
popf
mov
and
add
jge
(bad)
test
cwde
inc
jmp
pusha
movs
sbb
ret
mov
and
gs
rcl
adc
loopne
popa
loope
and
(bad)
int3
xchg
fcomp
dec
cmp
jl
jmp
pop
pop
loopne
add
add
out
sbb
pop
jo
or
in
cld
jecxz
or
push
add
dec
push
dec
adc
pop
movs
add
xlat
mov
out
pusha
push
adc
sbb
(bad)
loopne
imul
popf
fmul
nop
add
sbb
adc
add
cmp
pop
stos
pop
push
jl
fs
(bad)
dec
mov
jae
movs
push
sbb
adc
add
clc
and
inc
add
gs
push
push
push
xchg
xor
loop
pop
int3
fmul
mov
mov
dec
loop
and
shl
push
mov
fiadd
sbb
xor
scas
test
cmp
cmp
add
sbb
xchg
in
into
test
add
rcl
bound
jae
add
loop
jbe
dec
fdivr
pop
imul
jnp
mov
pop
bound
and
adc
int3
out
inc
lods
gs
jae
enter
scas
sub
push
xor
inc
dec
scas
sbb
add
push
add
adc
add
mov
mov
out
push
test
sub
sub
movs
adc
mov
xor
pop
jnp
mov
or
and
ret
jbe
mov
fisttp
retf
mov
push
sbb
daa
jno
jecxz
cs
inc
mov
inc
and
loopne
push
jbe
add
pop
or
and
add
leave
je
mov
xor
push
movs
call
sbb
(bad)
inc
pusha
enter
push
jns
or
out
fisubr
xchg
sbb
nop
or
int
es
iret
sbb
mov
and
xchg
pop
adc
add
adc
adc
push
popa
scas
inc
inc
nop
add
inc
pop
add
xchg
dec
cmps
cwde
into
add
jle
adc
jp
(bad)
xchg
push
jle
popf
dec
loopne
pop
fisttp
clc
pop
mov
adc
or
stos
es
ss
sbb
fs
mov
mov
inc
int
or
into
adc
pop
sbb
push
les
add
in
xor
mov
add
clc
retf
sub
sub
push
inc
jbe
fwait
mov
ret
loopne
ret
mov
adc
rcr
inc
ret
push
and
fcomp
mov
test
push
dec
xor
or
jns
call
cld
add
lods
stos
mov
sbb
inc
adc
loop
(bad)
imul
inc
jecxz
xchg
cmps
jnp
fisubr
and
cmc
jmp
dec
xchg
out
add
add
cmp
daa
aad
pop
sub
call
(bad)
xor
xchg
stc
adc
cwde
ror
xor
cwde
stos
add
add
pop
ss
or
jns
shl
out
retf
lock
jns
pop
fwait
gs
shl
mov
ins
dec
nop
and
sbb
stos
xchg
mov
movs
cmp
push
sbb
fstp
jp
rcl
and
mov
sbb
add
add
push
les
pop
xor
in
out
ret
stos
out
retf
call
inc
lods
push
xchg
repz
xchg
jo
xchg
popf
shr
mov
imul
adc
mov
leave
pop
(bad)
out
dec
xor
push
inc
cli
mov
mov
int
repnz
pop
and
push
jne
push
add
ret
add
loope
test
daa
xor
inc
stos
fadd
int3
loop
inc
fsubr
mov
(bad)
jns
gs
loop
push
or
cmovnp
lods
mov
ficom
fwait
push
sub
mov
jae
inc
mov
or
dec
push
jmp
ins
mov
mov
adc
jle
into
movs
or
adc
dec
cwde
dec
lods
adc
dec
or
movs
sbb
test
in
stos
push
mov
adc
(bad)
call
inc
es
in
inc
mov
and
pop
aaa
dec
inc
add
int3
pop
jne
mov
add
xchg
or
rcl
dec
in
cmps
in
xor
adc
inc
aas
push
sbb
ret
push
fmulp
push
imul
or
fisubr
dec
push
add
xchg
mov
xchg
mov
imul
sbb
push
sbb
jo
push
in
adc
mov
call
add
icebp
sub
add
add
test
lods
in
push
xor
shr
push
pop
pushf
adc
lods
push
dec
xchg
jno
adc
inc
adc
out
and
lods
and
and
xor
test
test
inc
mov
dec
je
add
das
stos
into
jge
sbb
inc
add
stc
sbb
aaa
add
mov
add
int3
cmp
mov
add
out
fcom
cmp
push
cmp
cwde
out
pop
gs
jg
push
or
mov
je
mul
iret
loop
dec
mov
cdq
add
push
retf
lods
mov
mov
je
inc
dec
jg
jb
scas
ins
repnz
mov
adc
push
push
les
movs
mov
pop
shl
adc
les
lock
ret
scas
jge
sar
hlt
and
add
and
add
or
aas
add
add
add
add
add
push
inc
in
inc
sub
(bad)
ror
jns
test
cmp
or
cwde
shl
mov
sbb
into
mov
fbstp
js
pop
mov
test
popa
cmp
adc
ss
sbb
inc
adc
dec
sbb
cwde
cwde
push
cdq
js
push
push
sbb
ins
bound
sub
sbb
imul
jo
je
pop
xor
mov
mov
jns
js
jl
iret
rcr
ss
test
push
dec
fcom
push
cdq
sahf
call
ins
arpl
out
push
movs
in
mov
jmp
sub
inc
mov
and
xor
xor
pop
cmp
sbb
xchg
sbb
mov
inc
jns
bound
test
jb
adc
mov
mov
inc
and
xor
and
push
xchg
mov
sub
xor
call
xor
daa
cmp
or
enter
jmp
inc
adc
les
jmp
icebp
jbe
jb
adc
xchg
movs
mov
add
mov
imul
adc
mov
pop
or
movs
and
mov
fild
test
ds
and
(bad)
repz
movs
lds
add
fsub
mov
sub
test
mov
lea
je
loopne
or
pop
int
fwait
cmp
fstp
pop
out
push
ss
fmul
xchg
cmps
jge
mov
and
pop
mov
sbb
jecxz
js
call
mov
sbb
adc
jmp
gs
jg
or
dec
pop
pop
xor
sbb
push
jne
jl
std
cmps
push
jno
popf
rcl
ret
mov
inc
mov
test
test
mov
test
and
mov
sub
inc
jb
sar
fild
fs
push
pop
test
cwde
loop
xor
pop
cmps
and
adc
inc
jg
mov
test
xchg
xchg
dec
lea
pop
jp
movs
push
into
inc
pop
hlt
jmp
xor
dec
sub
cmp
jo
sbb
and
adc
inc
mov
jecxz
mov
dec
pop
pop
mov
and
push
push
mov
or
cmp
sub
adc
push
xor
push
sub
inc
pop
mov
pusha
and
adc
adc
mov
lods
or
sbb
sbb
rol
adc
rol
and
cli
inc
add
dec
ret
mov
(bad)
fild
add
or
and
push
jmp
lea
dec
js
daa
mov
lods
pop
push
cmp
sbb
pushf
imul
push
xlat
lds
mov
fistp
in
ret
retf
ins
add
jo
test
adc
sub
lods
bound
xchg
sbb
jnp
aam
sub
ss
xchg
pop
jb
test
or
cmp
ins
mov
push
mov
mov
stos
jmp
xor
or
lds
fs
ins
cmp
cmp
js
(bad)
ret
out
xlat
pop
jg
outs
or
test
lods
add
push
adc
ds
sbb
add
rol
adc
stos
not
sar
pop
push
jp
sub
mov
xchg
out
cmp
ret
push
movs
inc
fidivr
or
add
outs
das
sub
fadd
sub
mov
add
scas
shr
fsubr
xchg
jmp
mov
xor
or
into
cmp
cmp
or
shl
int
sti
xor
add
mov
das
pop
ror
or
cmp
xor
into
jb
mov
out
jp
fidivr
dec
daa
push
lods
or
nop
idiv
cld
cmps
pop
xor
ss
cmp
fcmovb
ficomp
pop
mov
sbb
js
add
sbb
or
gs
pop
adc
test
in
arpl
sti
cli
push
mov
leave
in
aaa
nop
sbb
nop
push
adc
adc
addr16
add
add
rol
lds
aaa
push
loopne
and
inc
cwde
push
in
pusha
test
xor
cmp
fisub
adc
or
xchg
mov
dec
add
cmp
or
(bad)
inc
jb
dec
pop
shr
jbe
call
adc
test
stos
cmp
push
jl
nop
xchg
adc
mov
adc
inc
push
daa
rol
push
enter
ins
js
loopne
cmp
add
or
mov
(bad)
sbb
mov
sub
pop
setae
mov
loop
inc
and
nop
sub
ud1
int3
push
xor
lods
or
hlt
cwde
mov
push
loope
bound
fs
loopne
movs
mov
push
add
cmp
xchg
push
cmp
push
cmp
scas
adc
test
iret
add
add
sub
dec
adc
inc
(bad)
mov
outs
call
add
xchg
push
cmp
mov
pop
outs
lea
outs
aam
cmp
dec
mov
adc
sbb
jmp
add
push
mov
add
outs
push
cs
call
xchg
sub
jno
aam
es
call
adc
aam
fidivr
xchg
inc
add
add
cmp
dec
in
pop
inc
adc
repnz
dec
sub
into
push
retf
xchg
fimul
pop
rol
rol
pop
les
jne
shl
hlt
outs
add
cmps
jae
addr16
cmps
mov
push
jnp
add
pushf
inc
mov
jg
xor
div
adc
stc
inc
stos
int3
and
adc
push
xchg
mov
adc
or
lds
lods
in
mov
aam
jge
and
or
xor
int
adc
add
pop
shl
push
adc
aas
inc
ret
push
lds
sub
mov
movs
sbb
mov
mov
int
adc
inc
cwde
push
pusha
ins
jge
int3
push
push
xchg
rol
mov
in
icebp
mov
jbe
add
ins
call
push
adc
mov
pop
or
dec
(bad)
call
mov
mov
sete
sahf
sar
inc
int
xor
retf
pop
push
add
xchg
mov
faddp
inc
mov
mov
dec
push
push
iret
fiadd
push
sbb
call
retf
jmp
call
jecxz
rol
cmc
out
xchg
movs
retf
sub
popf
xor
mov
ret
inc
retf
jno
ds
lods
push
add
stos
xchg
mov
inc
sub
scas
mov
dec
xor
push
adc
cmp
jle
jmp
gs
mov
inc
(bad)
cmp
push
mov
jo
mov
hlt
sub
enter
sar
mov
mov
in
jno
into
pop
(bad)
repnz
dec
inc
xor
mov
xor
and
inc
repz
pop
fiadd
stc
lods
and
inc
or
mov
mov
pop
nop
jae
movs
adc
ss
call
aad
mov
push
mov
dec
fiadd
ret
test
(bad)
shl
cs
lods
ins
loopne
enter
pop
je
xchg
mov
ds
test
cli
lahf
inc
lds
loopne
fcom
or
push
rcr
jnp
lods
outs
(bad)
iret
sbb
and
cmp
sbb
inc
outs
jns
iret
inc
loopne
mov
mov
ret
push
or
add
lods
inc
cmp
pop
jl
push
add
pushf
ror
ins
jo
mov
sub
in
add
inc
mov
in
xchg
fnsave
(bad)
mov
sub
scas
xor
xor
enter
and
cmp
call
ret
mov
mov
adc
fidiv
xor
fsubr
dec
push
pop
lods
cdq
int
mov
or
movs
sbb
in
and
(bad)
xor
lods
cmp
or
cmp
push
push
jae
call
jns
pop
push
jbe
jge
retf
into
aaa
sbb
pop
jno
cdq
ds
jns
fwait
cmp
int
aas
lods
loopne
aas
sbb
mov
sbb
jg
aaa
pop
mov
lock
in
jbe
(bad)
pop
dec
pop
xor
cmps
jmp
sbb
adc
or
add
pusha
and
pop
in
push
jo
mov
jns
sbb
(bad)
lods
mov
fsubr
inc
aas
clc
call
scas
in
push
mov
test
cld
push
push
inc
adc
add
pusha
add
jl
out
test
jo
mov
cmps
bnd
fidivr
cmps
cmp
ja
ficom
cmps
hlt
push
sbb
pop
adc
adc
and
sub
pusha
adc
mov
sub
add
add
adc
and
add
ja
or
xor
pusha
add
xor
mov
int
jne
jecxz
ret
(bad)
addr16
xchg
sub
add
jne
stos
adc
xor
and
add
pop
adc
sbb
dec
xchg
add
arpl
push
and
and
cmps
les
jne
add
pusha
add
inc
jb
cmp
add
xchg
push
xor
pop
test
jl
ss
cmc
push
popa
call
iret
es
pusha
add
push
sbb
je
aam
add
or
push
adc
xchg
js
push
adc
imul
add
mov
inc
std
cmc
add
je
stos
call
dec
sbb
je
mov
or
sub
mov
push
hlt
sub
cmps
test
and
test
add
sbb
das
sbb
enter
mov
repz
push
xchg
jae
sbb
inc
xor
pop
or
pop
add
ja
add
test
bound
add
xor
sbb
test
(bad)
sub
add
inc
push
rcr
xor
push
loopne
adc
jae
lea
mov
jo
inc
sub
jecxz
fsubrp
mov
sub
xchg
gs
ds
and
mov
cmp
enter
rcl
enter
(bad)
fcomp
mov
aaa
imul
or
add
je
pop
mov
mov
(bad)
sub
add
js
mov
add
enter
xchg
sbb
and
xchg
icebp
cmp
jp
enter
cmp
add
xchg
inc
sub
stos
aam
clc
or
pop
xchg
outs
mul
gs
mov
add
fmul
pusha
add
mov
mov
sbb
mov
add
add
nop
(bad)
jge
xchg
popa
pop
jg
inc
xchg
cmp
jne
lea
push
ins
out
adc
xchg
outs
pusha
xchg
stc
sbb
addr16
aad
jno
jae
jge
and
cwde
lea
jle
test
add
pop
test
xchg
dec
cdq
scas
test
aam
aas
jns
popf
cdq
add
pop
xor
nop
imul
or
rol
and
jns
arpl
and
fwait
sbb
add
sub
jge
add
add
jmp
mov
cwde
mov
jb
inc
xchg
rcl
sti
push
add
add
xchg
inc
pop
aaa
xor
test
mov
cmps
adc
out
add
mov
(bad)
fmul
xchg
and
add
cwde
jecxz
add
stos
add
inc
fwait
pop
push
cwde
and
cwde
add
icebp
imul
jmp
and
add
leave
sbb
cmp
and
jae
xor
cwde
xlat
or
mov
aaa
pop
test
pop
jo
or
and
pop
test
sbb
add
xchg
dec
cwde
xchg
add
cmc
aas
inc
adc
inc
popf
xlat
xor
aam
pop
icebp
fsub
sub
dec
outs
jmp
test
pop
cmp
or
(bad)
mov
pop
cmps
add
cmp
adc
sbb
push
(bad)
xor
pop
test
or
dec
push
fs
pusha
ffree
lea
dec
call
fcomp
push
jp
test
xor
add
mov
or
mov
nop
or
and
add
mov
pop
cmp
sub
nop
add
add
test
je
retf
ss
sub
cmp
pop
cmps
jbe
fst
add
pop
sub
add
add
jo
ror
test
pop
cmps
ror
mov
lods
and
sbb
js
mov
enter
dec
add
ja
(bad)
and
hlt
pushf
pop
call
mov
sahf
xchg
mov
push
daa
adc
cwde
pop
loopne
and
sub
add
add
cmp
jmp
ror
add
adc
leave
call
xor
dec
mov
pushf
and
mov
push
outs
or
and
ja
xor
or
popf
out
cmp
inc
xchg
pop
pop
sahf
call
pusha
add
mov
pop
dec
mov
add
cs
mov
stc
mov
sti
add
xor
mov
cmp
clc
pop
dec
add
cdq
or
xlat
and
stos
fs
outs
push
add
mov
dec
xchg
xchg
push
jmp
mov
mov
cli
add
mov
pop
jp
mov
jle
mov
mov
mov
xchg
outs
or
out
mov
stos
imul
fist
(bad)
enter
mov
fstp
cmps
movs
repz
fmul
mov
sti
mov
sti
mov
mov
mov
sti
inc
lods
mov
xchg
popa
int3
and
aad
enter
pop
cmp
add
retf
mov
cwde
push
sbb
retf
call
mov
sub
jns
jmp
pop
and
add
xchg
xchg
mov
xchg
imul
mov
aam
dec
xor
push
mov
mov
sti
cmp
xor
pop
push
or
mov
shr
add
call
dec
and
and
xchg
dec
dec
mov
xor
sub
repz
mov
(bad)
xor
mov
xor
pop
mov
cdq
jno
imul
add
mov
fisub
pop
sar
xchg
jmp
xchg
add
daa
pop
mov
pop
push
add
mov
loopne
jl
xor
dec
xchg
test
scas
xor
push
out
dec
scas
loope
or
scas
in
pushw
sar
cli
mov
ins
add
mov
pop
dec
retf
es
jae
nop
test
pop
or
test
xchg
gs
test
inc
retf
mov
add
dec
cdq
xchg
pop
add
push
shl
jp
dec
sbb
jp
push
jmp
sahf
jne
shl
or
jle
lods
mov
and
lock
cmp
pop
enter
adc
jae
xchg
xchg
mov
xchg
sub
xor
and
stos
sbb
sub
test
clc
or
loop
retf
xchg
push
out
mov
popa
sbb
mov
cmps
mov
mov
cmp
xchg
pop
fld
cmp
adc
scas
mov
mov
out
push
push
sar
or
cmp
(bad)
sbb
sahf
xor
and
adc
inc
xchg
mov
push
ret
sbb
jg
lods
cmp
mov
lods
xchg
retf
cmp
and
add
mov
loope
pushf
and
sub
fs
fst
inc
push
aad
inc
mov
pushf
jecxz
inc
pop
push
cs
add
imul
cmp
sbb
cmp
mov
sub
int3
into
or
es
fstp
add
jo
test
fcmovnb
mov
mov
jae
mov
or
sbb
fwait
add
push
rcr
lods
shr
popf
stos
pushf
fwait
ret
or
loopne
mov
jne
fiadd
retf
into
repnz
mov
dec
xlat
dec
sbb
adc
mov
add
cdq
xchg
jg
sahf
pop
fnstcw
nop
dec
xchg
mov
daa
call
cmp
inc
(bad)
dec
mov
xchg
popf
cmps
fnstenv
add
mov
and
add
mov
mov
shl
into
jecxz
fwait
cs
fidiv
test
sbb
int
mov
ffreep
mov
stos
and
aam
cmp
cmp
add
seto
dec
mov
xor
add
ficom
mov
xor
sbb
mov
sahf
out
sbb
pop
adc
ds
sbb
ret
push
lods
fisubr
cs
dec
rol
jecxz
cld
movs
(bad)
mov
jecxz
or
pop
add
add
fiadd
into
dec
xor
add
jmp
push
add
add
(bad)
sar
pop
mov
jo
cmp
or
add
add
add
add
shr
add
rcr
xchg
pop
mov
(bad)
jnp
mov
sub
sub
pusha
cmp
pop
add
(bad)
fistp
add
dec
pop
mov
cmp
movs
add
mov
(bad)
in
scas
add
lock
push
sub
push
jmp
xor
or
jmp
push
add
sahf
pop
cmp
inc
pop
jmp
cmp
dec
pusha
jmp
call
(bad)
cmp
xor
ret
std
and
add
leave
ficomp
add
aam
inc
and
mov
xor
fcom
jne
add
jmp
push
add
xchg
lods
sbb
(bad)
in
popa
cli
cwde
add
xor
mov
dec
out
add
fwait
xor
loop
ins
(bad)
mov
jle
sar
inc
sub
jp
(bad)
lds
xchg
rol
adc
adc
movs
mov
add
inc
sbb
pop
cmp
ret
dec
push
movs
add
add
call
lds
xor
rol
add
mov
cmp
daa
xor
and
and
inc
stos
out
popf
sub
dec
sbb
sbb
out
fldenv
dec
movs
test
loop
dec
xlat
test
hlt
into
mov
rol
adc
fimul
inc
or
sbb
cld
(bad)
dec
pop
(bad)
push
add
mov
add
pushf
jmp
aam
add
jo
push
dec
aad
add
jge
sub
lods
xchg
mov
not
push
sbb
xchg
pop
mov
mov
(bad)
mov
fdivr
mov
mov
ret
sub
dec
fmul
cld
rol
jg
(bad)
jns
les
aad
add
jae
and
and
in
cmp
cwde
int3
add
dec
movs
mov
dec
daa
inc
dec
mov
mov
pusha
jmp
jbe
leave
scas
adc
mov
cs
leave
and
add
movs
xor
adc
pusha
(bad)
icebp
jno
and
mov
and
and
add
fs
mov
loop
mov
dec
mov
xlat
div
stos
inc
test
mov
stos
retfw
push
or
or
mov
(bad)
vsubps
out
sbb
and
lock
cld
mov
inc
jnp
ret
add
arpl
pop
sub
add
cmp
xchg
jmp
mov
or
popa
lods
cdq
les
adc
pop
push
lods
fs
sbb
int3
cmp
and
daa
scas
add
or
out
or
adc
cwde
jmp
sbb
push
sub
out
fwait
or
lds
cmps
or
adc
rol
daa
push
ret
xchg
stos
mov
dec
xor
and
xor
sub
sbb
mov
data16
jbe
test
xchg
sub
or
add
out
loope
mov
xchg
jae
adc
sub
jbe
out
sub
pop
sub
push
adc
inc
fdiv
and
hlt
out
sbb
iret
je
movs
cwde
inc
ror
adc
sub
test
loop
add
mov
add
adc
or
and
ss
fcomp
shl
jg
ror
inc
mov
adc
push
gs
or
cs
sbb
push
push
push
push
jl
mov
ret
push
cmp
jo
inc
test
mov
out
sbb
dec
xchg
xor
and
add
cli
iret
or
rcl
mov
lock
cmp
and
sahf
inc
(bad)
jno
add
cld
or
inc
xor
scas
out
push
fsubr
inc
mov
shl
adc
mov
mov
push
test
mov
pop
imul
cld
sub
pop
push
or
or
pusha
rcr
call
add
cwde
cmp
cmp
popa
sub
leave
lods
push
bound
lea
xor
mov
adc
adc
aam
sbb
add
add
pop
fadd
ins
ret
and
add
inc
adc
sbb
mov
mov
cmp
cs
mov
outs
xor
mov
adc
dec
cdq
dec
ror
xor
les
es
cmp
call
out
and
adc
and
cdq
call
sar
into
ret
inc
lods
push
addr16
xor
or
push
pusha
jecxz
retf
adc
dec
cmp
pop
jns
aam
xor
pop
jl
jp
test
xchg
jp
test
sub
test
lods
out
dec
or
sub
jmp
pop
shl
xchg
shl
ret
or
pop
out
push
outs
mov
push
mov
ret
add
and
(bad)
and
adc
xor
push
call
js
push
adc
pop
adc
popa
xchg
adc
xchg
push
push
cmp
test
test
jge
and
out
aaa
int3
cmp
iret
loopne
out
xchg
push
daa
jmp
sub
mov
adc
daa
jmp
lods
shl
fld
sbb
in
fcmovbe
and
das
pop
push
rol
sbb
test
jo
loope
arpl
test
mov
repnz
or
shl
fstp
push
rcr
div
in
popf
sbb
mov
rcl
lds
or
ficom
in
rol
mov
inc
adc
and
cmp
cmp
adc
mov
lds
fdiv
fimul
ret
inc
add
push
adc
cwde
mov
test
mov
shl
xchg
sbb
push
sbb
push
and
in
add
cwde
(bad)
push
lock
xlat
jne
daa
jne
inc
push
inc
rol
icebp
nop
bound
arpl
mov
xor
daa
jge
pop
pop
sub
mov
cmps
sub
add
pusha
push
mov
je
add
add
movs
push
push
int3
pop
pusha
pop
or
and
pop
or
call
add
or
popa
add
xor
mov
ret
push
out
mov
ja
push
or
test
aad
push
js
jl
add
pusha
test
test
sbb
push
adc
or
add
push
(bad)
xor
mov
inc
xchg
mov
or
icebp
cmp
(bad)
rol
and
cdq
je
iret
and
lahf
and
jne
dec
jns
pop
inc
clc
adc
aad
jbe
jmp
mov
jns
push
adc
mov
or
adc
sar
push
sub
add
pop
pop
inc
ja
daa
and
ja
inc
mov
adc
xor
sub
cmp
cmp
and
stc
inc
mov
add
adc
push
and
xor
add
jae
mov
mov
pop
add
test
je
jmp
push
sub
push
mov
hlt
sbb
dec
inc
ss
inc
jmp
scas
shl
ins
sub
icebp
xor
add
mov
jno
xchg
push
mov
or
add
push
test
sbb
jbe
retf
dec
xchg
add
add
mov
lock
push
in
aad
(bad)
push
mov
push
push
outs
popf
movs
and
mov
sub
rep
push
jp
(bad)
adc
clc
pop
push
and
mov
in
adc
stos
jns
sbb
pop
movs
inc
lahf
add
dec
mov
push
add
sbb
pop
add
test
outs
ja
loope
ins
xor
push
idiv
int3
or
adc
push
mov
shl
int
iret
dec
leave
(bad)
add
xlat
call
call
inc
stc
std
out
lods
sar
sub
jns
mov
cmp
sbb
xchg
test
dec
pop
sub
jbe
scas
mov
sti
push
mov
and
loopne
cdq
add
xor
hlt
mov
push
mov
pop
mov
ret
ss
es
int3
jb
mov
lods
lods
or
add
jbe
shr
inc
icebp
mov
int3
rcr
add
cmp
lea
int
pop
sub
sub
dec
ins
mov
and
xor
and
xchg
xchg
mov
ss
mov
xchg
dec
or
xchg
stos
sbb
cmp
jb
mov
mov
sub
add
rol
add
mov
lahf
cld
mov
mov
aas
push
out
lahf
dec
xchg
push
or
sti
hlt
xchg
ficomp
sbb
repnz
out
imul
jmp
loopne
sub
adc
pop
movs
mov
ds
pop
sbb
and
test
mov
add
enter
into
imul
cmp
xor
and
ror
mov
xchg
mov
add
pop
pop
xor
mov
idiv
sbb
push
adc
arpl
stc
dec
sbb
inc
cmps
loopne
je
xlat
push
lock
inc
addr16
mov
int
not
pop
shl
adc
enter
test
jne
stos
ret
movs
mov
loop
sahf
data16
mov
out
es
pop
inc
add
nop
dec
mov
imul
nop
lea
icebp
imul
rol
xchg
out
fld
add
mov
shr
cmp
in
xor
int3
mov
dec
es
hlt
xchg
mov
or
or
mov
add
inc
scas
out
mov
mov
ret
shl
mov
fiadd
push
jp
stos
xlat
popf
or
popa
and
add
cwde
add
ins
jg
add
ds
js
or
retf
add
fisttp
pusha
std
ds
fnstcw
mov
inc
pop
ins
js
push
cmp
cmps
cmc
pop
jnp
jecxz
jbe
shl
cmp
mov
mov
jno
adc
cmc
rol
jb
ret
cmc
mov
das
jnp
jnp
icebp
movs
(bad)
shr
dec
sbb
and
(bad)
cmp
push
mov
mov
jp
jecxz
in
pusha
(bad)
outs
mov
pop
push
cdq
repz
aaa
fcmovnb
sbb
xor
or
rol
jl
pushf
test
inc
add
pop
jo
jle
mov
fs
std
pushf
lods
stc
fsub
fwait
sbb
adc
mov
sbb
inc
cmps
in
pop
retf
add
jmp
push
ret
xchg
push
or
pusha
xchg
fiadd
cmp
push
add
js
inc
jns
add
call
in
clc
mul
pushaw
gs
jb
add
rol
pusha
push
fisubr
ss
jo
dec
into
push
cmp
add
push
rol
push
fsub
mov
aas
dec
enter
xor
jecxz
or
adc
dec
out
add
into
jle
add
sub
cwde
push
jmp
inc
lods
jbe
fisttp
add
and
int
mov
fdivr
xchg
bound
ret
push
mov
inc
jp
sbb
xchg
or
scas
ret
sbb
and
or
and
les
mov
pop
add
push
and
ins
cmp
mov
xchg
adc
xchg
inc
into
jns
inc
mov
enter
pop
es
jmp
arpl
(bad)
dec
add
enter
jne
imul
lock
inc
cwde
enter
xchg
adc
xchg
add
xchg
add
or
pop
loopne
loop
mov
rol
or
jp
cmp
shl
add
mov
out
mov
push
add
pusha
push
cli
ret
and
movq
outs
sub
data16
add
lock
sub
jbe
and
cmp
add
push
jo
int3
or
xor
adc
push
xchg
loopne
lock
mov
inc
adc
loopne
sbb
or
loopne
scas
loopne
test
addr16
sub
loop
push
bound
sahf
jno
pop
cmps
xor
loopne
push
adc
jmp
rol
dec
dec
or
dec
push
xor
imul
sbb
pop
bound
add
adc
out
es
adc
bound
cli
jo
sbb
add
add
inc
aas
loopne
inc
inc
add
shl
or
scas
inc
add
das
add
jb
inc
sbb
xchg
mov
clc
call
and
dec
xchg
xor
jae
adc
(bad)
and
jmp
jbe
cmp
sub
inc
jnp
addr16
sbb
add
adc
outs
repz
add
add
test
and
xchg
and
out
pop
cli
int3
or
sbb
and
mov
sub
repz
xor
sbb
adc
add
out
retf
pop
jno
mov
xor
add
jo
fld
dec
jno
clc
and
sub
add
aaa
jae
aaa
jae
pop
push
inc
push
cs
adc
add
sbb
add
cmp
in
nop
test
xor
xor
pusha
sub
loop
push
repnz
dec
mov
push
adc
shl
lock
or
xor
jmp
and
dec
aas
ja
inc
ja
aaa
push
loopne
pop
rol
je
jo
adc
push
jo
cmp
xor
sbb
dec
inc
retf
mov
inc
add
sbb
sub
inc
or
inc
add
jo
pop
cmp
inc
and
mov
and
or
dec
jne
add
add
inc
add
ror
xor
aas
call
ret
and
hlt
and
hlt
adc
push
sub
or
adc
je
push
nop
int
xchg
sub
add
add
rcr
ds
jb
pusha
add
xor
adc
sub
push
outs
loopne
push
pusha
add
shl
xchg
mov
addr16
loopne
pop
test
je
test
jge
sub
add
push
cmps
dec
int3
push
mov
xor
inc
pop
push
adc
push
stos
inc
mov
std
pop
mov
dec
and
test
popa
sbb
add
add
push
inc
add
loopne
add
outs
shl
fst
jecxz
adc
inc
ja
inc
test
ret
dec
add
cwde
jne
retf
mov
xchg
inc
jo
jae
push
(bad)
xor
aad
retf
cmc
and
pop
push
add
push
test
inc
add
xor
addr16
jbe
gs
add
add
inc
shr
add
sbb
retf
cld
push
sub
mov
and
sbb
or
bound
repnz
mov
bound
(bad)
adc
and
call
jbe
pop
dec
and
push
cmp
add
je
pusha
pusha
add
mov
jno
ss
push
mov
adc
or
and
daa
mov
xchg
push
imul
imul
push
div
pop
mov
cmp
das
cmps
ret
pop
ret
sahf
add
push
rcl
push
aam
pop
jns
pop
sub
dec
sbb
dec
push
fs
push
adc
xor
and
shl
push
adc
xchg
and
inc
and
(bad)
rol
jbe
iret
add
pop
push
push
ja
add
or
fcmovbe
dec
sbb
and
jl
jp
rol
push
ins
inc
push
ins
gs
icebp
push
paddd
and
test
or
cmp
xor
dec
xor
cmp
outs
mov
loope
jbe
pop
daa
mov
mov
sub
retf
call
xchg
test
push
jp
mov
mov
inc
nop
mov
xor
push
xlat
ss
mov
jge
push
jp
add
add
jecxz
fdiv
rol
mov
xchg
ins
call
outs
xchg
or
bound
add
dec
add
mov
mov
add
xchg
xchg
pushf
ret
jp
test
in
movs
or
loopne
repz
inc
pop
push
retf
inc
rol
inc
push
xchg
and
out
data16
test
gs
push
push
es
ins
ror
mov
add
jge
mov
mov
push
adc
cwde
xchg
pop
rol
fcmove
inc
mov
popa
sub
mov
xor
ins
sar
xchg
jl
shl
test
mov
mov
push
push
mov
and
jnp
add
pop
and
dec
icebp
xor
sbb
dec
dec
sub
dec
push
add
jae
pusha
popa
jns
add
sbb
dec
dec
adc
jnp
and
push
inc
leave
aaa
mov
mov
rcl
push
rcr
jne
ret
jns
jmp
jg
xor
jne
fisub
and
imul
sbb
add
sti
push
xchg
push
nop
jo
bound
inc
inc
inc
inc
test
inc
cdq
jns
cdq
mov
sbb
add
add
or
pop
jo
adc
dec
loop
jae
pushf
iret
loopne
sbb
cmp
sbb
push
jecxz
(bad)
mov
inc
pusha
or
pop
or
add
pusha
mov
mov
ja
push
fdivrp
add
dec
push
cwde
pop
repz
je
scas
or
adc
push
push
sub
mov
(bad)
xor
icebp
and
add
fmul
and
jns
mov
add
jne
lock
out
lods
or
test
mov
inc
inc
push
scas
fwait
sbb
add
mov
xor
xchg
stos
mov
or
ret
(bad)
repz
dec
jmp
out
mov
adc
or
adc
(bad)
cmp
push
or
imul
jnp
sub
loopne
cmps
push
fwait
inc
adc
push
cwde
xor
adc
rol
rol
xchg
push
push
adc
mov
mov
imul
stos
cmp
arpl
into
jno
sub
fwait
pop
fidiv
call
jl
inc
das
push
mov
mov
pop
sti
dec
mov
and
push
mov
scas
das
xchg
push
push
xchg
dec
into
xor
jnp
sub
mov
add
sbb
stc
test
scas
cdq
outs
pop
fistp
jne
inc
cmp
addr16
or
stos
not
mov
inc
jo
popa
add
scas
xor
cmp
add
retf
mov
inc
mov
outs
movs
jl
add
pop
(bad)
xchg
or
mov
js
mov
test
nop
(bad)
fadd
pop
xor
cmps
sbb
inc
repz
jl
pop
fs
loop
push
mov
stos
lods
push
ucomiss
cwde
or
or
sbb
mov
outs
test
mov
xchg
jg
mov
stos
leave
call
test
stc
mov
nop
cmp
sub
add
inc
movs
sbb
mov
cs
and
(bad)
cs
gs
test
inc
adc
cs
add
or
cld
xchg
cmc
push
push
adc
xchg
inc
fldenv
cmp
cdq
iret
(bad)
mov
sub
xchg
popa
cmp
jp
add
pusha
pop
sub
and
call
inc
mov
movs
test
xchg
sbb
push
jbe
lea
cmp
lds
out
add
mov
stos
shl
es
add
retf
xchg
cwde
lds
and
call
and
adc
add
mov
push
xchg
xchg
fild
inc
pop
add
neg
cmc
mov
jmp
aam
mov
pop
pop
xchg
pop
inc
pop
movs
nop
imul
in
mov
inc
stos
push
std
add
pop
in
xor
test
xor
inc
movs
add
in
pusha
in
mov
ins
dec
mul
pop
pop
lea
mov
jp
loopne
fdivr
mov
imul
pop
cld
dec
je
arpl
xchg
fwait
out
out
out
fisttp
loopne
xor
jns
adc
aam
and
pop
cmps
inc
xor
sahf
push
and
ins
outs
add
lea
push
mov
loop
push
lods
bound
cs
pop
sbb
or
mov
data16
movs
out
dec
or
jns
out
out
std
cwde
lods
fsub
and
pushf
add
adc
mov
nop
add
out
jp
mov
ins
mov
clc
popf
stc
cwde
or
add
and
sbb
retf
and
es
loop
loopne
cmp
fdivr
into
adc
adc
and
cmps
(bad)
in
out
fs
sar
in
je
mov
or
sub
rcl
ficom
adc
inc
mov
inc
dec
add
aas
rcl
sbb
push
sti
mov
cwde
and
lods
cmps
dec
clc
cmp
push
aad
add
jo
fwait
and
mov
cmc
sub
pop
sub
in
pinsrw
push
(bad)
(bad)
out
jbe
mov
mov
int
adc
add
adc
mov
or
jb
nop
nop
in
test
fsubr
pop
shl
sbb
mov
jl
jo
cmp
mov
cmp
push
add
push
les
nop
mov
jge
xor
pop
mov
call
dec
fwait
ds
xchg
cmp
popf
std
mov
sbb
mov
xchg
sbb
int3
or
imul
gs
(bad)
aam
or
adc
mov
push
ror
add
add
repnz
and
xor
cmp
add
xor
ss
add
add
push
(bad)
(bad)
test
out
pop
and
ret
and
pop
cwde
pusha
mov
ds
aad
cmps
pop
push
ss
inc
and
movs
add
mov
push
cdq
lock
aam
inc
mov
pop
mov
sbb
push
sbb
or
jno
inc
lea
shr
mov
add
mov
leave
add
data16
and
push
shl
xor
daa
mov
add
or
sub
test
mov
pushf
and
xchg
cmps
pop
test
inc
(bad)
in
or
lock
mov
cmp
js
inc
sbb
adc
pushf
sub
mov
addr16
rol
sti
add
jl
or
fst
cwde
int3
outs
and
pop
push
stos
rcl
add
cmps
jne
div
rol
out
das
clc
jmp
xchg
sbb
mov
sbb
out
pusha
inc
push
dec
mov
xchg
push
and
femms
stos
mov
xor
test
add
and
mov
mov
add
cmp
pop
fucom
jno
outs
sub
test
in
push
neg
add
jle
jne
pop
jg
cdq
mov
push
adc
push
sub
cmp
jge
inc
test
ds
xor
adc
test
or
(bad)
xor
ror
xor
enter
hlt
and
pop
fidiv
mov
push
mov
(bad)
sahf
ja
mov
clc
xor
push
fwait
mov
xchg
push
es
pusha
add
or
sub
add
mov
ret
add
and
and
mov
push
inc
add
test
mov
inc
xchg
add
xchg
pop
inc
setnp
dec
rol
or
ins
push
ficomp
outs
mov
jg
inc
fld
cmp
jmp
xchg
leave
test
sbb
(bad)
push
hlt
or
popf
jmp
retf
sbb
icebp
pop
sbb
sahf
arpl
mov
arpl
mov
in
mov
push
mov
add
shl
add
push
dec
and
(bad)
lods
jno
sub
xchg
xchg
stos
sub
outs
and
push
add
in
(bad)
mov
push
xlat
xor
mov
push
push
mov
cmp
mov
pop
sub
arpl
or
fisubr
jmp
and
xchg
pop
loop
repz
pop
hlt
retf
xor
shr
bound
int
bound
retf
xchg
ins
dec
or
jo
jg
dec
sub
bound
mov
clc
mov
sbb
jle
test
jns
int
clc
ror
sbb
loopne
sub
rcr
or
and
cmp
mov
rcl
dec
xor
(bad)
push
and
fldenv
in
test
call
stc
pusha
sub
or
enter
test
retf
cmc
sub
or
add
je
push
cmovle
sbb
fadd
push
ja
jg
shl
mov
scas
push
dec
cmp
xchg
push
xor
mov
mov
popf
cmc
jmp
scas
mov
and
int
jbe
or
movs
mov
and
paddsb
push
sub
pop
fmul
sbb
scas
mov
loopne
je
sahf
repz
inc
pop
fld
test
inc
pop
xchg
jo
sar
int3
data16
xchg
cdq
pop
test
cmp
ins
pop
rol
call
gs
mov
mov
inc
ror
in
test
and
adc
outs
jno
lock
inc
lock
adc
js
mov
mov
adc
mov
jo
in
pop
sub
in
cmp
sti
test
mov
inc
jg
add
inc
add
inc
sub
lock
test
hlt
or
(bad)
mov
test
inc
push
leave
sub
int
dec
mov
jae
in
fld
jbe
in
in
dec
push
fwait
add
sub
xchg
cmp
dec
xchg
adc
lds
mov
adc
cmps
xor
cli
dec
xlat
mov
jno
mov
fld
mov
sub
fcmovne
mov
add
cmp
sub
pop
mov
in
mov
mov
jo
push
adc
nop
rol
int3
loop
scas
sub
sbb
popf
mov
jns
sub
pop
jmp
rol
mov
lods
in
mov
fmul
inc
inc
add
add
sbb
test
inc
cli
test
pop
pushf
test
bound
dec
xor
rcr
cwde
test
dec
dec
shr
push
test
mov
cmc
jne
icebp
and
dec
inc
sar
pusha
push
and
inc
add
les
push
dec
test
shr
push
dec
cmp
pop
push
movs
and
xor
or
xor
pop
inc
jl
sub
pop
lods
push
ins
pusha
adc
ret
push
mov
mov
add
push
sub
cmp
adc
mov
mov
iret
adc
mov
aaa
jmp
jne
and
pop
rol
and
add
adc
cs
in
addr16
or
fcmovbe
jns
movs
cwde
or
mov
xor
(bad)
mov
push
cmp
inc
add
jns
call
push
xor
mov
jo
add
fld
sub
cmp
mov
push
les
test
xlat
adc
sbb
cmp
stc
sbb
or
or
lea
jno
cs
mov
push
fsubr
out
lods
adc
inc
push
popa
xor
mov
test
pop
cmp
sar
fldenv
ret
xor
add
jae
cmps
sbb
cmp
pusha
aam
and
pop
jle
push
jno
adc
push
dec
mov
and
(bad)
icebp
jle
test
xchg
in
pop
fmulp
inc
pop
mov
pusha
add
push
mov
add
or
mov
add
xor
push
xchg
push
mov
dec
push
test
and
sbb
xor
add
and
cmp
push
add
and
out
jl
jnp
mov
xchg
push
(bad)
cmp
inc
mov
test
or
sub
push
xchg
loopne
or
sbb
rol
or
add
or
call
mov
jnp
and
and
std
fwait
mov
dec
cmps
cmp
mov
stos
js
push
call
inc
sbb
stos
sbb
ret
adc
xor
and
mov
rol
push
rcl
das
adc
xor
mov
sub
outs
jge
xor
mov
call
imul
pop
aas
jno
push
mul
mov
out
cdq
jl
xchg
scas
or
inc
mov
sbb
mov
mov
xor
push
inc
jne
push
inc
sbb
adc
xchg
pushf
mov
jge
pop
jle
jno
cmp
in
sbb
mov
push
push
cmp
test
jmp
inc
xchg
inc
add
jmp
(bad)
push
test
mov
pusha
add
sar
ficomp
outs
dec
mov
pop
mov
adc
inc
cmp
jge
es
push
in
(bad)
adc
into
sti
pop
mov
stos
sbb
adc
and
and
lds
jge
out
cmp
pop
pop
and
mov
jae
mov
mov
xor
cli
cdq
sti
cmp
gs
js
add
add
inc
cs
or
test
aad
xchg
movs
sub
xor
jecxz
jno
fimul
out
dec
and
ror
mov
mov
jge
retf
movs
jge
cmc
test
neg
cdq
fwait
dec
fwait
mov
add
std
test
ret
imul
clc
inc
std
popa
pop
xor
enter
rol
inc
and
fdivrp
mov
js
popf
add
loopne
sub
inc
cmp
cmp
rol
call
mov
fwait
mov
add
cdq
jnp
push
popa
add
add
stos
and
adc
adc
pop
mov
xchg
and
sub
test
pusha
xchg
cmp
mov
add
and
add
dec
nop
add
mov
pop
add
ror
popf
dec
and
test
sbb
and
retf
pop
data16
xchg
push
xchg
add
dec
mov
ror
or
aad
popa
xchg
add
icebp
xchg
push
out
dec
or
nop
sub
or
sub
mov
jne
add
pop
cmp
(bad)
jl
pop
sbb
mov
sbb
push
sbb
xchg
cdq
add
push
jmp
xchg
dec
inc
mov
test
in
sbb
je
mov
sub
(bad)
xor
retf
add
or
(bad)
and
cs
sub
sar
popa
aas
push
xor
add
arpl
xchg
fdiv
add
cmp
movs
mov
cmp
lahf
aam
cdq
push
dec
aad
das
lea
test
mov
mov
pusha
rol
cmp
mov
and
shl
clc
loop
pop
add
rcl
xchg
pop
add
loope
jle
cdq
pop
mov
mov
stos
jge
inc
(bad)
adc
inc
mov
add
dec
inc
in
add
movs
add
enter
fild
mov
sub
inc
dec
jb
pop
jo
cs
daa
pusha
inc
pop
adc
cmp
and
push
pusha
pop
pusha
inc
pop
fiadd
sbb
xor
add
pop
mov
xchg
adc
push
mov
add
sub
inc
inc
xchg
push
xchg
cwde
or
push
out
leave
inc
push
rol
jns
fndisi(8087
adc
ret
pop
mov
sub
inc
jl
es
or
rcr
dec
fisub
mov
ins
fisub
xchg
or
jo
or
shr
popa
jle
(bad)
push
and
and
cld
gs
dec
sub
(bad)
std
sbb
es
cmps
push
push
pop
pop
es
rcr
fs
in
jb
mov
jge
cmp
popa
jg
sub
or
add
xor
add
pop
mov
jle
cmps
jl
gs
(bad)
bound
stc
mov
xor
pop
pop
xor
sub
lahf
cmp
pop
je
cmps
mov
inc
cmp
movs
push
cmps
sbb
lods
and
(bad)
movs
sbb
cmp
inc
daa
mov
call
(bad)
stc
movs
inc
mov
sahf
xor
push
add
gs
scas
cmps
lea
or
movs
cmp
jb
out
sub
or
pop
jno
sub
lahf
cmp
sbb
xchg
and
sub
pop
dec
pop
mov
sub
and
gs
dec
(bad)
xlat
mov
or
or
lahf
aad
lea
jl
xlat
sahf
sahf
add
imul
or
call
sbb
cmp
or
pop
dec
add
shl
xchg
mov
arpl
xchg
ds
test
jne
push
cmp
pusha
dec
and
sbb
dec
jl
pop
jle
in
sub
les
aam
mov
test
scas
dec
daa
push
push
inc
sub
xor
aaa
inc
pop
inc
mov
push
arpl
push
cmps
push
add
push
call
les
bound
mov
outs
mov
push
xchg
daa
cs
stc
ror
call
sbb
(bad)
mov
inc
test
add
or
push
fisubr
pop
inc
add
push
push
ins
cmps
and
jle
mov
int3
xor
test
jb
and
pop
pop
call
jbe
push
sbb
jo
xchg
rcr
loop
mov
mov
inc
lock
mov
call
addr16
or
and
or
add
dec
jae
retf
mov
pop
adc
xor
enter
data16
addr16
sub
call
push
fdivr
inc
daa
test
sub
inc
xlat
or
push
jle
(bad)
fisub
mov
mov
push
out
test
ret
add
je
sahf
les
outs
inc
les
fadd
add
cmp
add
add
or
imul
sub
add
cmp
daa
xchg
or
add
in
xchg
inc
adc
mov
push
nop
stos
and
shr
add
mov
fwait
jge
fldenv
inc
addr16
cmp
sar
popa
and
and
popf
pop
mov
in
add
mov
call
fmul
jo
xchg
ds
cmp
xor
mov
push
arpl
jle
mov
iret
mov
sub
out
mov
in
jge
ins
or
add
rcl
cmc
nop
pop
stos
in
pop
add
ror
pop
inc
xor
(bad)
scas
sub
xchg
jmp
lds
sbb
sbb
pusha
push
push
js
mov
pop
add
dec
inc
pop
fidivr
pop
lock
or
test
push
cmp
cmp
dec
je
xor
mov
sahf
push
add
scas
stc
jge
ja
push
pushf
xchg
test
add
push
sahf
loopne
add
xor
rol
add
aam
mov
lods
cli
scas
adc
rol
(bad)
push
sub
or
pop
fidiv
lods
mov
inc
mov
add
movs
sub
jne
add
pop
push
adc
cmp
push
dec
sbb
imul
push
or
repnz
push
pop
(bad)
mov
int3
sub
es
ret
lods
inc
sub
cmp
inc
cs
push
mov
xor
ins
xlat
jge
and
out
push
loop
movs
xor
mov
dec
pop
sbb
add
push
cs
fistp
adc
xchg
push
push
and
mov
push
push
int
inc
add
xor
mov
ds
pop
in
out
mov
push
push
jmp
inc
or
in
mov
cmp
xor
cmp
(bad)
mov
mov
xchg
ret
ret
sub
les
loopne
push
add
and
shr
and
mov
dec
add
xor
push
xor
pop
daa
addr16
add
sub
xor
loopne
js
lods
cli
loope
or
ret
add
jb
(bad)
das
movs
inc
pusha
popa
mov
cmp
dec
adc
es
inc
cmp
ss
(bad)
ror
in
inc
gs
inc
adc
loopne
and
dec
outs
sbb
enter
sbb
stos
jmp
add
movs
xor
cwde
mov
dec
pusha
mov
sub
push
inc
cmps
cmp
jmp
mov
pop
sbb
sahf
sub
push
xor
pop
add
inc
in
(bad)
(bad)
add
ret
inc
bound
and
outs
jmp
pop
ror
dec
mov
div
add
pop
jmp
fidiv
mov
loop
mov
push
rcl
sub
inc
pop
stc
ins
cmc
or
pop
hlt
jge
cld
push
test
sbb
push
pop
mov
fs
jmp
into
sub
mov
inc
add
outs
inc
and
sbb
fldl2t
imul
pop
jmp
mov
or
leave
mov
or
hlt
jne
pop
pop
daa
dec
inc
test
jg
jno
mov
add
outs
enter
xlat
add
inc
div
aaa
ins
jecxz
dec
nop
cwde
add
jbe
xlat
je
arpl
add
sbb
inc
scas
xor
xor
adc
fmul
add
ins
adc
push
push
adc
cmp
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
push
add
inc
cmp
popa
cld
add
add
add
or
or
or
or
adc
cmovl
or
adc
sbb
adc
push
adc
or
sbb
adc
adc
adc
adc
sbb
sbb
and
arpl
sbb
adc
adc
sbb
sbb
sbb
sbb
adc
sbb
adc
sbb
and
sbb
inc
sbb
inc
sbb
adc
sbb
sbb
sbb
and
pop
cmp
pop
sub
and
daa
and
and
and
sbb
aaa
sub
and
and
and
sub
dec
inc
and
and
cs
cs
cdq
and
sub
sub
and
sub
xor
and
sub
sub
pop
sub
sbb
and
xor
sub
sub
aas
sub
outs
cs
aas
sub
dec
dec
das
xor
adc
xor
jg
aaa
scas
xor
sbb
dec
xor
sub
xor
xor
mov
or
xor
inc
xor
pop
xor
xor
xor
xor
xor
xor
inc
xor
sahf
xor
cmp
cmp
pop
scas
and
cmp
addr16
inc
pushf
cmp
cmp
jae
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
inc
cmp
pusha
ds
aas
dec
dec
aas
das
test
adc
sbb
dec
inc
dec
xchg
inc
sbb
inc
push
inc
inc
dec
es
push
dec
inc
inc
pop
inc
cs
push
pop
dec
inc
dec
dec
dec
push
dec
push
js
sbb
push
or
and
pop
outs
dec
cmp
outs
or
dec
xor
inc
dec
adc
push
dec
lea
dec
jne
es
dec
and
push
push
push
push
push
push
pop
push
push
bound
push
push
pop
push
push
pop
pop
ja
mov
pop
pop
pop
pop
pop
ins
cs
jo
pop
outs
dec
pop
or
sbb
pusha
inc
cmps
popa
sub
arpl
arpl
arpl
fs
data16
arpl
mov
pop
push
popf
imul
imul
ins
jae
ins
sub
jp
outs
outs
dec
jo
jno
xchg
call
ss
jge
adc
imul
ja
sahf
js
lahf
js
mov
sub
jnp
mov
xor
stos
cmp
adc
cmp
mov
mov
mov
mov
mov
mov
nop
fwait
scas
nop
jb
xchg
dec
xchg
xchg
mov
cdq
test
call
mov
movs
fs
mov
mov
xlat
retf
add
and
or
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
leave
xchg
add
sub
mov
xchg
and
adc
(bad)
mov
mov
xor
xchg
cmps
mov
xchg
je
stos
pop
leave
mov
dec
xchg
imul
int
and
stc
enter
test
or
mov
xchg
outs
les
and
call
stos
push
pushf
sub
push
and
loope
mov
stos
aam
(bad)
mov
pop
popf
retf
fidiv
dec
imul
and
xchg
mov
mov
add
(bad)
mov
mov
fidiv
or
in
xchg
xor
inc
cmp
popa
pop
(bad)
(bad)
and
mov
xchg
cmp
sub
sahf
inc
cmp
cmp
call
stos
jp
out
fbld
(bad)
mov
in
ror
fiadd
fidiv
enter
imul
dec
or
mov
rol
dec
cmp
push
xchg
fdivr
out
fiadd
jmp
js
movs
fs
pop
dec
jmp
xchg
mov
cmp
push
jle
inc
sub
lea
in
jg
add
mov
sbb
sbb
mov
mov
xor
shl
out
inc
mov
jmp
and
push
xchg
adc
loop
add
sub
leave
loop
jnp
mov
lea
push
and
adc
in
neg
lea
data16
jmp
jmp
fstp
inc
ficom
dec
fwait
xchg
push
dec
sub
pushf
jb
add
out
jne
or
pop
cld
cmp
sbb
mov
jmp
adc
xchg
fcom
cmp
cmps
xchg
dec
or
and
test
push
test
mov
fidiv
jmp
and
(bad)
pop
lea
mov
data16
mov
mov
shr
xchg
jnp
fldenv
bound
stos
scas
inc
jmp
mov
sahf
sub
sbb
xchg
stos
enter
mov
sub
mov
or
fstp
or
xor
xor
js
pop
rcr
test
push
and
sbb
xor
sbb
int3
xor
push
daa
arpl
mov
fwait
jnp
mov
xchg
call
fadd
lods
stos
sbb
daa
sbb
inc
jl
sub
or
sbb
or
into
aam
and
or
lock
dec
sub
dec
xchg
jbe
push
xchg
sub
cmps
dec
repz
pop
popa
xchg
leave
lock
adc
mov
call
xor
jecxz
loopne
or
js
icebp
push
lods
cmp
leave
adc
add
xchg
jbe
or
fwait
shl
cmp
enter
xchg
imul
jmp
(bad)
inc
test
cmp
hlt
out
sti
out
shl
mov
mov
push
sub
push
cs
hlt
or
mov
adc
in
jp
add
in
inc
xchg
out
add
xor
out
repz
jle
cld
hlt
iret
das
jl
loopne
inc
int3
daa
repnz
xor
enter
mov
mov
add
or
inc
adc
ret
pop
mov
cmp
fild
or
and
call
pop
sbb
jle
(bad)
push
(bad)
mov
cmp
popf
loop
jg
fisub
adc
push
xchg
inc
inc
inc
out
or
mov
adc
push
add
add
adc
out
mov
sbb
xor
adc
pop
cmp
retf
mov
cdq
and
cmc
aas
ret
xchg
loop
ins
xchg
inc
and
push
shl
add
or
or
retf
inc
vpunpcklwd
push
jo
adc
cmps
or
push
inc
neg
fistp
enter
dec
pop
mov
xchg
retf
xchg
aaa
cli
push
mov
cmp
add
lock
dec
add
or
mov
retf
adc
and
or
dec
and
js
or
dec
or
adc
mov
push
xlat
lods
lahf
ds
int
gs
xchg
sbb
stos
xchg
inc
jns
in
enter
adc
or
and
pop
or
int3
jb
cmc
dec
sbb
jns
dec
pop
sahf
pusha
push
inc
or
sub
mov
and
nop
or
in
pop
jno
dec
jbe
sbb
mov
lea
fwait
loopne
xchg
mov
scas
inc
out
xor
paddw
into
ja
cs
dec
mov
pop
(bad)
repz
cld
hlt
addr16
jns
nop
sbb
sbb
push
jae
push
jge
adc
aam
pop
aad
inc
scas
cmp
(bad)
shr
out
add
je
xchg
dec
inc
adc
dec
call
cmp
add
add
nop
mov
retf
xor
enter
mov
xchg
es
jb
jle
dec
pop
xor
or
or
test
lods
lahf
dec
imul
stos
push
pushf
jle
add
push
mov
xchg
leave
int3
dec
push
rcl
test
or
(bad)
xchg
leave
push
push
pop
xchg
cmc
add
xor
jmp
(bad)
mov
cmc
mov
mov
sub
sub
enter
mov
jne
xor
outs
mov
mov
sub
clc
mov
ret
mov
adc
mov
cmp
push
(bad)
mov
cmp
xlat
inc
jmp
imul
sbb
stos
or
loope
push
pusha
dec
outs
outs
jge
dec
loopne
adc
jmp
pop
mov
mov
mov
push
inc
icebp
je
int3
dec
or
jne
pop
sub
and
xchg
cmp
icebp
cld
adc
ret
sub
stos
mov
sbb
jns
adc
les
stos
push
push
daa
aad
add
jmp
push
(bad)
fcmovne
icebp
ds
arpl
loop
jno
sub
xor
ss
into
push
xchg
sbb
and
xor
mov
adc
sub
cmps
and
pop
xchg
pusha
sbb
int3
cmp
mov
cmp
addr16
jae
sbb
cld
out
pop
xchg
and
inc
(bad)
add
sub
sbb
or
jmp
mov
mov
jmp
push
loopne
pop
xor
lea
lock
mov
loope
jmp
inc
xchg
dec
lods
add
fimul
shl
jmp
ret
cmp
mov
ja
stos
sti
shl
add
test
jnp
punpcklbw
inc
sbb
cmps
push
outs
jo
push
rcr
out
int3
bound
jno
push
push
arpl
xchg
adc
push
or
arpl
fld
adc
pop
or
xlat
adc
pop
(bad)
mov
mov
mov
imul
jmp
idiv
xor
pop
fwait
(bad)
xor
shr
push
aaa
inc
add
sub
popa
daa
icebp
inc
scas
js
jp
inc
or
push
jmp
jnp
pop
xchg
push
fcomp
je
lods
das
cmp
repz
or
or
pop
iret
stc
or
mov
inc
jge
push
pop
hlt
mov
cmp
cmps
push
(bad)
sbb
xor
mov
xchg
and
push
(bad)
or
fucomi
push
push
add
pop
pop
js
adc
nop
cdq
dec
fadd
ret
lock
ss
imul
jmp
xor
loopne
dec
jp
dec
xlat
mov
cmovb
xchg
push
loop
mov
jmp
sub
push
sub
pop
dec
mov
push
or
cmp
stc
and
icebp
fstp
cmp
xlat
xor
fcomp
inc
(bad)
sti
inc
outs
(bad)
inc
pop
(bad)
js
cs
or
clc
das
sub
fist
cli
pushf
jae
cmp
repz
ror
lea
add
sbb
int
jge
repz
pusha
add
sub
inc
daa
dec
fist
jle
out
div
inc
mul
jae
jle
aam
(bad)
mov
test
and
test
push
rol
test
cmc
movs
inc
sub
add
mov
add
sub
pop
bound
inc
adc
adc
add
jp
lds
rol
gs
les
mov
add
or
sub
xor
mov
retf
mov
push
inc
sbb
add
add
push
pusha
dec
or
xchg
nop
jl
hlt
add
test
test
xor
dec
sbb
inc
(bad)
inc
ja
fdiv
mov
or
or
and
xor
jecxz
xor
inc
jno
pop
add
add
lock
push
jae
js
xchg
push
jae
mov
rcl
jns
xchg
pop
vmptrld
loopne
mov
mov
adc
dec
adc
ja
mov
out
adc
fidiv
jb
pop
xchg
out
ins
pop
lock
push
(bad)
mov
push
or
jae
les
ins
(bad)
pop
jp
out
mov
(bad)
push
xchg
pop
mov
mov
hlt
mov
enter
mov
mov
mov
or
outs
fsubr
or
push
add
or
mov
dec
xor
ins
nop
jns
and
sbb
movs
addr16
in
mov
les
sbb
je
xchg
pop
ja
cmp
adc
xor
dec
or
rcl
arpl
punpckhwd
ret
ror
shl
mov
pusha
ja
movs
xchg
ins
jp
cmp
and
xchg
add
mov
xchg
xchg
and
inc
in
adc
push
mov
(bad)
push
movntq
ds
aaa
fbstp
xchg
xor
das
stos
cwde
dec
cmp
xchg
jns
ds
adc
stc
mov
xchg
ret
pop
(bad)
pop
mov
push
pop
xchg
xchg
and
loope
xchg
jl
(bad)
out
xchg
dec
push
add
add
repz
cmps
sbb
and
mov
ins
jl
xchg
sbb
push
and
push
mov
mov
dec
push
loopne
xchg
push
rcl
push
push
pop
xchg
pop
dec
cdq
jmp
cdq
cdq
fstp
mov
jmp
mov
sbb
sbb
sub
adc
push
call
sub
out
xchg
mov
fwait
(bad)
or
or
dec
cmp
xchg
pop
add
jmp
push
push
imul
sbb
xchg
ss
cmp
inc
add
and
ficomp
push
cs
push
xchg
mov
sahf
adc
cmp
in
sbb
es
fadd
mov
out
lock
add
xchg
add
or
push
mov
or
daa
rcr
adc
mov
leave
mov
jns
adc
mov
stos
push
sbb
pop
push
in
adc
and
cmp
xor
cmps
in
sub
mov
movs
ins
cdq
xor
outs
xchg
jne
xchg
dec
pop
cmp
xchg
sbb
and
movs
inc
jp
pop
mov
or
adc
pusha
fisub
sbb
movs
icebp
lock
rol
or
pushf
pop
and
inc
test
sub
xchg
or
push
dec
mov
stos
sub
pop
jp
arpl
cmps
mov
add
xor
stos
cmps
jecxz
xchg
mov
pop
mov
stos
fwait
xchg
pop
push
fs
mov
in
mov
or
xor
scas
xor
(bad)
sub
adc
sbb
cwde
movs
cmps
aaa
gs
shl
add
add
repnz
repz
mov
dec
(bad)
sbb
aam
pop
and
arpl
mov
iret
nop
test
mov
jle
pop
jo
xor
ficomp
test
push
ja
pop
lahf
gs
sahf
add
push
pop
push
and
jmp
push
sbb
bound
mov
or
and
repz
lods
xchg
test
imul
stos
(bad)
push
lahf
sbb
jmp
push
push
add
ja
or
stos
dec
sbb
pop
pop
(bad)
test
xor
adc
mov
out
or
adc
mov
loop
mov
mov
sub
jne
jb
cwde
push
pop
aaa
adc
nop
ficomp
xor
cmp
dec
sbb
stos
add
push
cli
ds
cmp
jp
rcl
nop
or
or
or
mov
xchg
or
mov
scas
sti
mov
mov
addr16
xor
jb
sti
cmp
and
ficom
xor
lahf
test
mov
mov
mov
mov
test
push
and
jp
mov
pop
cmc
or
loopne
mov
nop
inc
and
cmps
xor
mov
mov
dec
xor
dec
xor
jnp
and
or
pop
mov
sbb
fstp
sbb
add
lds
inc
xor
popa
outs
aad
jno
xor
shr
lahf
xchg
mov
push
int3
fstp
mov
xor
icebp
adc
push
jp
fimul
push
shl
lahf
nop
or
shl
push
mov
mov
pop
ret
ret
inc
int3
ret
ds
inc
cmp
inc
jl
dec
pushf
(bad)
(bad)
shl
mov
ja
mov
mov
sti
xor
sub
nop
add
dec
scas
sbb
scas
or
mov
cmp
jp
and
or
adc
add
cdq
nop
or
inc
push
sbb
push
adc
mov
rol
sti
mov
mov
enter
les
bswap
outs
push
mov
jae
push
cld
sbb
push
sub
pop
sbb
jl
mov
mov
imul
pop
push
(bad)
jb
xor
add
adc
mov
je
mov
push
and
int3
rcr
jo
enter
fwait
int3
retf
cmps
sti
int3
sub
sar
mov
add
dec
xor
sub
cmp
daa
popa
mov
sub
scas
dec
retf
mov
(bad)
push
cs
dec
cdq
aam
mul
xor
mov
retf
cmps
retf
mov
outs
xor
ins
mov
les
xor
imul
jbe
sub
xor
push
sbb
cmp
in
dec
out
mov
in
shl
movs
test
call
pop
push
dec
out
inc
or
jo
cmp
mov
mov
add
retf
dec
rcl
and
outs
les
mov
rcl
lds
mov
push
ror
mov
movs
lods
mov
std
movs
adc
test
inc
mov
xchg
mov
mov
or
rol
shl
mov
adc
(bad)
jmp
pop
and
adc
rcl
xor
adc
pop
or
fwait
sub
sbb
dec
shl
mov
or
pop
loope
ja
or
ror
push
add
adc
imul
push
jno
lds
aam
xor
push
push
and
pop
cwde
or
fidiv
add
mov
dec
push
(bad)
into
in
fcomp
pushf
mov
ss
fdivr
xchg
ins
mov
bound
cmp
cdq
loopne
push
xor
les
and
(bad)
ror
sub
xchg
push
es
test
fstp
jno
mov
inc
test
push
call
retf
or
loopne
dec
push
(bad)
fild
dec
bswap
fnstenv
shl
test
fld
pusha
xlat
lahf
xor
loop
adc
mov
fs
ret
test
pop
adc
fmul
retf
lahf
inc
push
jmp
cmp
push
dec
xlat
loope
sub
add
aaa
loope
cmp
dec
loope
mov
sbb
and
dec
dec
jp
xchg
rcr
sti
pop
es
out
ret
cmp
xor
test
inc
add
and
sbb
scas
frstor
push
mov
push
gs
cmp
fiadd
in
add
push
mov
mov
add
push
sub
cmp
or
dec
push
div
xor
in
and
imul
push
push
out
out
daa
mov
fsub
shl
test
cdq
and
fcomp
mov
mov
push
xadd
or
cs
inc
rol
xlat
jl
xor
mov
sub
adc
mov
pop
mov
inc
pusha
fbstp
(bad)
retf
push
xchg
xchg
fidiv
stos
or
call
dec
and
xchg
push
jge
adc
push
jg
es
dec
dec
adc
mov
add
pusha
fist
push
imul
repz
into
jge
test
jmp
and
call
push
jmp
pop
mov
dec
ins
push
mov
out
pop
pop
dec
or
je
xor
enter
cmp
sub
call
fsubrp
fs
push
fs
adc
jmp
sahf
out
mov
mov
jge
inc
xchg
inc
jecxz
add
rol
jns
jns
aas
push
mov
dec
xlat
push
fidivr
rcr
xchg
dec
mov
xchg
sub
ins
(bad)
mov
loopne
out
ss
out
add
jne
inc
cwde
sub
fisttp
sbb
mov
shufps
mov
loopne
shl
adc
neg
jge
sub
xlat
(bad)
fcmovnb
repnz
pop
sub
psllq
cmc
xor
pop
psadbw
add
ins
ds
push
cwde
pop
cmp
pushf
arpl
imul
mov
ffreep
stc
cmp
jp
cli
xchg
mov
aam
(bad)
cmc
add
repz
js
cwde
aas
cld
call
aad
sahf
iret
dec
loop
test
fmul
in
mov
das
repnz
fincstp
xchg
jmp
das
xchg
pop
xchg
push
cs
cmc
pop
pop
add
(bad)
sub
(bad)
das
imul
inc
dec
xchg
je
pop
out
pop
clc
stc
jo
stc
gs
sbb
lahf
xor
push
add
(bad)
mov
pop
ror
or
loope
mov
and
mov
(bad)
loope
jno
inc
mov
cmp
push
shl
sub
(bad)
retf
sbb
fs
xor
es
push
call
inc
daa
mov
sub
fmul
fwait
pop
iret
fst
js
out
fst
aaa
aad
aam
push
cmc
ins
popf
stos
into
sbb
arpl
sahf
lea
adc
push
rcl
in
inc
mov
sbb
fst
mov
sbb
push
mov
adc
xchg
cdq
push
daa
fwait
shl
ror
inc
lahf
cmp
jmp
cmp
icebp
dec
dec
lods
out
in
fdiv
jmp
add
stos
mov
mov
fdiv
pop
rcl
fs
shl
xchg
and
push
or
in
cmp
cmps
pusha
les
sub
jmp
pop
je
clc
lock
or
imul
push
mov
or
mov
mov
jo
nop
mov
rol
jecxz
loop
xor
pop
shr
addr16
nop
inc
sbb
call
shl
ret
emms
fadd
retf
ds
add
ins
ds
rol
adc
test
jp
xor
xchg
jns
mov
inc
and
push
out
adc
mov
inc
and
dec
call
stos
mov
or
and
inc
cld
nop
adc
mov
jbe
popa
test
and
bound
add
cmps
fadd
ins
mov
lods
pop
daa
xor
mov
sbb
add
dec
mov
je
aaa
ficom
or
lea
sub
retf
ret
out
adc
in
sbb
pop
popa
test
pop
mov
add
mov
dec
cmp
mov
push
add
inc
or
push
daa
stos
jns
mov
push
ins
shl
mov
push
popa
pushf
dec
shl
sub
push
(bad)
pop
xchg
lods
fstp
mov
scas
mov
mov
or
cmp
and
retf
aam
xor
ror
mov
push
aad
or
inc
add
dec
push
lock
fist
and
ja
jp
mov
shl
xchg
mov
xlat
adc
jmp
bound
jecxz
(bad)
std
cmp
pop
xchg
adc
je
aam
jno
mov
jmp
or
and
in
mov
loopne
push
in
fs
pop
outs
outs
add
add
or
mov
clc
push
inc
or
scas
fdivr
sahf
lea
inc
ss
mov
hlt
call
mov
pop
pop
sub
xchg
inc
mov
push
mov
xchg
inc
add
add
push
dec
es
dec
scas
loopne
imul
jp
xchg
xchg
cmps
add
test
lock
mov
hlt
push
addr16
fisttp
in
xor
xchg
add
dec
sbb
xchg
aad
or
faddp
dec
jbe
sti
ret
cmp
popa
push
pop
pop
mov
mov
add
cdq
jp
mov
and
jg
call
pop
dec
fnstenv
jne
leave
xor
into
jge
dec
inc
push
rcr
out
mov
outs
xor
push
movs
popf
jbe
(bad)
fs
fcmovu
pop
ret
call
adc
jo
imul
ret
adc
sbb
and
dec
dec
dec
push
adc
jmp
mov
fs
cmp
pop
cmp
loope
push
call
inc
pxor
test
add
bound
shr
out
enter
pop
add
(bad)
pop
ret
sbb
add
jmp
inc
xor
mov
inc
adc
fsub
sub
sbb
adc
add
leave
fcom
idiv
movs
and
add
clc
add
sub
(bad)
out
sar
adc
and
sbb
inc
add
and
jb
cmp
dec
push
xchg
mov
(bad)
jge
mov
(bad)
mov
mov
or
(bad)
mov
push
movs
cmps
lea
push
test
cmc
or
push
jle
call
bound
ins
push
and
ror
int3
mov
mov
xchg
es
inc
test
dec
pop
fild
push
mov
movs
dec
inc
add
ror
aam
sbb
mov
pop
add
push
sub
mov
lea
mov
add
mov
adc
or
xor
pop
mov
loopne
lahf
mov
call
and
and
ja
inc
dec
pop
dec
xchg
sub
dec
fstp
xchg
test
imul
or
test
ss
jge
repz
dec
inc
repz
mov
pslld
aaa
sub
dec
and
xchg
js
adc
pop
das
add
xor
push
and
and
stc
or
mov
push
pop
sbb
mov
loope
jmp
jbe
retf
popf
lahf
or
daa
cmps
push
add
xchg
xor
dec
push
sub
or
sub
cmp
mov
mov
outs
cld
cli
sbb
push
jbe
test
add
dec
cli
cmps
inc
loopne
push
ds
adc
fwait
lods
push
or
je
dec
pop
xor
mov
std
pop
dec
adc
test
lock
and
popa
push
call
lods
or
push
jo
xchg
push
icebp
or
adc
sub
cmp
mov
inc
push
or
imul
sub
add
mov
adc
les
xor
xchg
xor
jae
xchg
xor
push
sbb
inc
xchg
mov
push
xchg
rol
push
retf
in
mov
mov
cmp
imul
shl
vpunpckhwd
gs
jmp
pop
(bad)
sti
xchg
ret
sbb
cmp
xchg
mov
adc
and
data16
inc
inc
ret
cmp
add
movs
push
fs
js
test
cs
lock
xor
imul
ror
retf
xlat
or
push
mov
scas
jmp
inc
sub
or
pushf
outs
jge
mov
out
mov
inc
mov
sub
or
gs
xor
adc
push
test
mov
jecxz
push
cs
xchg
ds
sbb
loopne
or
out
mov
aad
or
test
jl
fild
psrlw
cmp
pop
fwait
xchg
xchg
mov
and
ins
call
mov
jge
push
sub
push
test
adc
mov
push
adc
xchg
test
add
call
loop
ss
js
xchg
bound
mov
and
sbb
push
jecxz
or
jge
lods
mov
push
je
add
pop
fcom
inc
jl
dec
(bad)
jo
rcr
push
and
add
pop
dec
fisubr
pop
inc
ja
scas
cld
repnz
(bad)
js
cmp
std
push
jnp
popa
add
into
add
mov
mov
daa
cli
sub
in
mov
adc
or
ds
bound
sub
loop
hlt
mov
in
in
std
lea
or
adc
sbb
and
sbb
test
repz
inc
(bad)
and
aas
jg
das
sbb
mov
adc
or
add
rol
add
and
lock
(bad)
push
sbb
rol
gs
pop
loop
adc
bound
jmp
das
rcl
jl
leave
jle
adc
stc
xlat
xchg
aas
push
dec
mov
pusha
jle
vhaddpd
xor
and
dec
cmps
jno
push
and
sbb
test
pop
loope
mov
lea
int3
adc
lock
retf
adc
add
push
and
push
push
or
sar
mov
fdivr
lods
mov
sbb
test
xchg
mov
rol
sbb
cli
cmps
xchg
jno
inc
and
inc
adc
add
adc
repz
ds
cmp
xor
inc
add
clc
and
arpl
neg
adc
cmp
xor
out
lahf
shl
mov
pusha
cmp
add
loope
imul
repnz
and
mov
ret
inc
push
pop
loopne
adc
test
mov
sub
add
mov
jnp
add
(bad)
xchg
outs
sbb
xor
inc
or
and
add
cld
and
add
cwde
test
add
pusha
aas
or
add
add
add
inc
add
imul
mov
push
mov
or
sar
mov
pop
pop
fadd
add
jo
arpl
jae
cwde
inc
mov
push
and
cmp
sti
inc
ins
fadd
ins
sub
xchg
adc
xor
dec
adc
sbb
add
and
adc
adc
lahf
lock
cwde
xor
lds
add
sub
push
sub
cmp
xchg
mov
aam
xor
jnp
inc
fidivr
push
add
or
mov
dec
dec
mov
mov
test
add
mov
xchg
jecxz
call
dec
cmp
mov
aaa
xor
inc
sub
cs
inc
cmp
add
pop
sub
push
xor
add
call
adc
add
push
adc
sub
inc
xor
add
adc
and
mov
mov
call
dec
nop
les
test
inc
rol
adc
sbb
inc
mov
xchg
mov
lds
js
add
or
or
arpl
and
dec
cs
mov
add
add
je
add
icebp
nop
push
inc
xor
or
retf
mov
add
pop
imul
sub
arpl
pop
test
pop
lahf
iret
xchg
sub
sbb
test
mov
or
pop
pusha
test
loopne
cmp
cwde
pop
mov
add
inc
dec
(bad)
fmul
je
fwait
push
cmps
push
mov
lods
retf
retf
je
int3
and
inc
xor
test
pushf
sbb
and
shl
adc
int
add
pop
int
test
sbb
hlt
xchg
movs
xor
test
or
pushf
movs
clc
enter
jecxz
dec
or
in
add
push
jns
dec
and
adc
sar
dec
push
aas
aam
mov
mov
mov
ja
add
jo
sbb
add
iret
mov
bound
cli
aam
sti
mov
pop
push
(bad)
cld
mov
sbb
mov
pusha
mov
xor
pop
das
ins
xchg
ins
add
push
xor
shl
pusha
add
call
adc
ror
cwde
(bad)
and
add
mov
and
sub
nop
cmp
mov
sbb
int3
int3
push
cmp
push
test
dec
mov
cmp
es
inc
rol
mov
mov
mov
push
push
sub
(bad)
cld
push
xor
xor
or
add
push
add
add
cmp
lds
inc
mov
aas
and
add
xchg
dec
mov
enter
jnp
mov
dec
cmc
adc
mov
dec
add
adc
adc
and
aaa
(bad)
(bad)
aaa
gs
and
adc
sbb
rol
lods
push
jp
shl
mov
inc
sub
add
sbb
sbb
inc
mov
cmp
pop
mov
add
inc
and
lds
pusha
sbb
fcom
mov
mov
movs
inc
cmp
pop
inc
mov
loope
(bad)
add
adc
push
adc
add
iret
std
fmul
pop
and
sbb
es
xor
jae
xor
xor
jbe
cmp
ret
add
jge
jle
xlat
jg
shl
or
add
add
jno
xor
push
outs
lods
fmul
push
mov
xchg
bound
sahf
mov
xchg
inc
enter
pop
inc
mov
xchg
ins
pop
pop
mov
cwde
aad
cmovno
adc
js
pop
(bad)
mov
js
enter
cld
adc
or
add
add
add
fst
test
repz
inc
and
stos
and
sub
pop
in
pop
cmp
add
pop
shl
xchg
inc
adc
add
mov
mov
inc
mov
pop
in
pop
mov
(bad)
je
pop
mov
mov
pop
ret
ret
xchg
int
lds
adc
(bad)
fs
retf
inc
add
dec
inc
(bad)
in
push
add
sbb
shr
cld
movs
test
xor
pusha
or
js
fldcw
xor
pop
adc
add
mov
adc
pop
adc
data16
rcl
bound
fwait
or
out
or
sbb
ror
push
push
cmp
sbb
push
pop
push
out
mov
aam
fdivr
lods
retf
add
and
or
cmp
mov
(bad)
mov
pusha
mov
(bad)
ins
xchg
push
loopne
sub
dec
loopne
pop
loopne
mov
xor
mov
(bad)
lahf
mov
loopne
or
pusha
movs
mov
outs
arpl
dec
pusha
int
cmp
(bad)
inc
test
cmp
dec
leave
test
out
arpl
(bad)
arpl
mov
enter
add
jne
jbe
mov
shl
movs
pop
pop
out
cld
dec
(bad)
dec
std
adc
jle
nop
or
sub
ins
call
mov
out
xchg
test
xor
add
shl
scas
fnsave
sub
sub
mov
pop
add
adc
and
pusha
xor
jecxz
push
add
mov
je
addr16
out
pop
out
std
arpl
into
arpl
add
into
ins
fisub
out
data16
scas
cs
call
dec
and
push
cs
inc
fs
pop
in
dec
fadd
in
fsub
into
aad
fisttp
out
jle
mov
cmp
mov
push
outs
xchg
push
and
outs
dec
call
or
(bad)
pop
scas
(bad)
fcomp
in
or
adc
arpl
addr16
imul
cmps
jecxz
out
arpl
jmp
mov
test
jb
addr16
loope
pop
out
xor
xchg
adc
movs
pop
movs
(bad)
iret
and
push
arpl
enter
push
sub
gs
xchg
test
fidivr
xchg
pop
inc
dec
adc
adc
push
scas
arpl
imul
xchg
out
jmp
sahf
imul
dec
push
sub
ins
push
js
push
push
add
ds
nop
test
or
popa
pop
test
test
push
dec
jl
iret
jl
fs
xor
mov
push
scas
xchg
cmp
popa
loopne
ins
loopne
test
push
mov
jmp
ss
xor
jmp
(bad)
gs
cmp
add
sub
dec
nop
push
add
jmp
dec
sbb
dec
lock
fsubp
in
imul
ret
jmp
add
sbb
enter
jbe
retf
xchg
sub
adc
enter
int
jmp
test
add
in
ins
push
xchg
xchg
push
not
mov
sub
in
sub
gs
fdiv
sbb
nop
sar
dec
push
cmp
call
(bad)
(bad)
adc
jno
das
icebp
adc
ds
out
imul
(bad)
out
fwait
(bad)
cmps
cmc
movs
push
jae
outs
dec
and
repnz
in
fwait
leave
pop
sub
adc
fnstcw
add
outs
std
jl
movs
inc
int
into
add
sahf
jmp
lods
xchg
loopne
fldz
xchg
mov
add
ins
add
add
xor
pop
jle
push
add
add
add
or
f2xm1
jo
xchg
jae
mov
mov
icebp
push
ja
cwde
es
in
(bad)
out
mov
dec
adc
loope
(bad)
icebp
lahf
push
pushf
mov
add
pop
into
out
xchg
pop
cmp
repnz
data16
pusha
xchg
out
jmp
pop
out
jb
push
lock
add
jo
cmp
mov
sti
xor
jae
cmp
jae
pusha
jbe
mov
cmp
neg
add
not
je
push
je
adc
dec
xor
pop
inc
push
dec
adc
pop
je
lods
add
add
push
mov
dec
adc
dec
jno
hlt
and
repnz
std
je
pop
add
loop
cmp
push
in
je
push
mov
pop
out
call
cmc
xor
xor
test
syscall
pop
clc
add
lock
mov
loope
inc
aaa
xchg
addr16
jns
xchg
idiv
mov
imul
inc
test
add
das
pop
sbb
adc
or
xor
aas
(bad)
add
movs
(bad)
neg
sbb
or
add
or
pop
push
in
(bad)
ins
jne
jo
pop
iret
repnz
add
clc
mov
repz
cmp
mov
add
xor
pop
inc
inc
mov
aaa
stc
addr16
jns
pop
icebp
cmp
cdq
outs
imul
pop
pop
add
add
enter
pop
cmp
int3
mov
add
out
cld
in
ja
dec
(bad)
cli
test
in
sub
push
out
jmp
test
lock
sbb
aaa
sti
dec
or
pop
mov
adc
ja
xor
(bad)
sti
xchg
cmps
repz
jbe
into
arpl
mul
cmp
cld
cwde
pop
outs
ins
push
in
call
ja
enter
outs
test
push
movs
adc
aad
sbb
fisttp
jb
add
cmps
pop
aad
rcl
sub
(bad)
pop
mov
mov
int3
xchg
test
retf
xor
xor
cmps
dec
shr
add
push
cs
or
and
repnz
pop
sub
imul
and
(bad)
or
mov
int
cmp
retf
adc
inc
xchg
sub
movs
lahf
xchg
push
pop
cli
jmp
sub
jno
inc
(bad)
and
sub
add
loope
or
inc
dec
or
add
and
or
add
cmc
loop
inc
xchg
outs
add
or
add
cmp
inc
xchg
and
fnsave
scas
int3
(bad)
fild
fwait
(bad)
push
ret
xor
(bad)
repnz
sbb
popf
cmp
and
push
dec
xchg
les
pushf
jmp
xor
hlt
or
in
xchg
or
je
push
test
pop
rcl
movs
mov
inc
xchg
mov
ins
fsub
ds
cmps
pop
sub
das
pop
and
jecxz
mov
jg
fistp
(bad)
(bad)
xor
lds
dec
addr16
and
and
rcr
sbb
shl
lods
leave
rol
add
inc
mov
or
fisttp
push
inc
pushf
dec
aas
add
mov
mov
adc
or
xlat
xchg
sbb
mov
xor
imul
in
in
xlat
pop
repnz
pusha
fisttp
daa
mov
(bad)
das
cli
jns
xor
add
lea
mov
pop
loopne
arpl
repnz
das
cmps
mov
shl
add
sbb
push
inc
adc
xor
sub
xchg
mov
sub
push
xor
mov
xor
pop
push
add
in
pop
or
test
add
xchg
adc
sahf
xchg
jp
addr16
pop
xchg
pop
repnz
int
fistp
cwde
inc
lock
popf
icebp
popa
pop
inc
fwait
cmp
or
jo
cmp
mov
push
or
xchg
call
mov
lods
call
cmp
push
mov
mov
xor
pop
jge
in
add
or
rol
lods
add
mov
enter
dec
adc
push
mov
jmp
rcr
cwde
fs
push
push
and
sbb
out
daa
stos
push
or
add
iret
jno
add
or
xchg
dec
lds
(bad)
(bad)
icebp
mov
jmp
aad
xchg
scas
inc
enter
or
push
jb
inc
or
jp
cmc
sub
xor
ja
cmp
add
pop
icebp
les
jp
sbb
and
cmp
lods
mov
lock
mov
ret
or
and
dec
aam
and
add
add
inc
mov
mov
sub
stos
or
push
push
scas
mov
es
mov
mov
retf
lds
test
and
and
test
les
(bad)
pop
jae
(bad)
sbb
mov
nop
ss
jns
jp
pusha
shl
jbe
adc
shl
into
fdiv
aaa
data16
ror
les
sub
loopne
cmp
mov
or
and
das
nop
in
and
adc
and
inc
(bad)
daa
mov
out
jae
jns
std
pop
vmovaps
rcl
int
jo
inc
sub
mov
mov
ret
movs
mov
jo
adc
and
out
and
mov
ret
cmp
or
push
movs
jecxz
dec
jns
adc
(bad)
cmp
jp
sbb
cmp
and
mov
mov
pop
jmp
test
add
push
push
test
loope
jg
loop
out
in
sub
daa
add
lds
sub
inc
add
arpl
push
mov
nop
and
das
or
sbb
dec
and
push
data16
add
cwde
mov
in
lds
or
add
adc
jecxz
pop
or
out
jmp
es
mov
shl
das
or
test
xor
xor
cmp
(bad)
loop
mov
rcl
movs
sbb
sub
scas
pop
pusha
ret
mov
xor
movs
xchg
mov
retf
pop
push
mov
shr
loop
inc
mov
int3
jecxz
xor
test
adc
push
cmp
sub
push
inc
ret
sbb
jecxz
adc
dec
stos
add
xchg
mov
cmp
add
movs
pop
icebp
adc
mov
xchg
mov
add
sub
shl
mov
retf
jl
xchg
in
lahf
ret
add
or
and
aas
fild
int
or
push
neg
push
push
or
sbb
pop
inc
adc
inc
or
cmp
mov
or
test
int3
gs
mov
cmp
loop
pop
clc
aam
aas
retf
and
sbb
or
dec
inc
in
push
mov
push
not
inc
xchg
cs
ret
repz
add
pushf
mov
sbb
inc
data16
and
inc
push
test
lds
retf
nop
test
sub
adc
xchg
adc
pusha
cmps
shl
mov
movs
mov
movs
sbb
je
mov
jle
add
add
js
add
hlt
push
push
adc
xchg
in
push
mov
xor
jecxz
sar
lods
jl
inc
push
xor
mov
arpl
int
inc
add
xor
jnp
push
adc
mov
xlat
jmp
mov
pop
cmp
sub
or
movs
mov
(bad)
jle
pop
into
push
lds
sub
retf
jb
push
push
push
jecxz
dec
mov
fisubr
fstp
adc
mov
push
fistp
loop
mov
mov
push
mov
pop
dec
push
xlat
bound
shl
mov
adc
or
add
and
cmps
jns
mov
imul
fsubr
cmp
mov
mov
aad
cmp
pop
mov
push
inc
and
or
cdq
mov
pop
mov
or
js
add
push
xchg
cld
scas
add
sbb
dec
push
out
jb
sbb
xchg
sbb
cmp
cmp
test
aam
sbb
sub
cmp
or
push
inc
out
out
cs
add
cmp
shl
pand
mov
retf
call
rcr
aaa
sahf
dec
cmps
push
mov
shr
mov
jns
test
ja
push
cmp
xor
div
aam
out
pop
mov
add
inc
arpl
lods
xor
test
and
push
cli
call
test
cmps
fdecstp
xchg
pop
cmp
cs
push
add
cmp
movs
sub
loop
sti
(bad)
inc
cmp
cdq
into
mov
pop
mov
int
jns
or
or
jecxz
adc
and
ds
out
adc
dec
mov
push
shl
mov
add
mov
or
ror
leave
adc
mov
cmc
popa
inc
pop
sbb
jbe
loop
fneni(8087
inc
enter
adc
out
xchg
cmp
fucomp
mov
dec
retf
shl
daa
loop
and
loop
rol
adc
sti
loop
leave
cmp
push
popa
cmp
lahf
js
stc
mov
mov
mov
pop
out
jb
(bad)
xor
cmp
ins
cwde
adc
cld
retf
inc
arpl
fisttp
iret
aam
fmulp
shr
cmp
add
movs
scas
inc
in
and
add
(bad)
ja
jo
sub
test
or
cmp
pop
jbe
daa
add
cmp
jmp
adc
shl
inc
cmp
mov
outs
cmp
add
and
jmp
mov
add
xchg
rcr
push
fwait
jbe
and
ins
or
and
mov
scas
push
add
sbb
mov
dec
push
outs
jno
aas
daa
(bad)
mov
(bad)
xor
out
jnp
aad
pop
or
jbe
rcr
in
lock
push
icebp
mov
icebp
ffree
add
cmps
dec
and
ins
adc
cmc
(bad)
or
iret
cmc
cmp
(bad)
fstp
adc
add
inc
sbb
push
pushf
pop
dec
sub
or
dec
call
sub
pop
std
leave
enter
add
fcmovu
mov
rcr
push
pop
inc
sub
pop
cmp
pop
cs
(bad)
nop
xor
push
jne
sbb
fistp
add
inc
inc
push
and
mov
test
inc
inc
data16
and
ds
xchg
dec
sar
push
mov
push
add
rol
xor
loopne
sub
or
sub
out
pusha
(bad)
xchg
push
adc
lahf
and
call
or
adc
adc
mov
push
jle
pop
adc
add
fisub
pop
jae
xchg
fs
pop
sbb
pop
dec
sahf
sbb
sbb
fisubr
sub
push
pop
xchg
add
push
dec
sbb
sti
dec
sbb
loopne
sub
and
sub
and
pop
mov
jmp
inc
sub
ret
mov
es
out
lds
jl
cmp
add
and
imul
pop
shr
xchg
fidiv
sub
loope
add
rol
xchg
shl
ret
sub
mov
sub
push
mov
fcom
jmp
lds
mov
fild
and
mov
pop
inc
aaa
jmp
mov
les
jns
add
pop
or
add
cdq
inc
sub
inc
xor
mov
mov
stos
loope
ds
dec
fcomp
enter
das
mov
es
jmp
sub
xor
sub
add
inc
pop
add
xor
and
dec
cli
fisttp
(bad)
pop
inc
shl
add
sbb
or
test
in
dec
inc
jo
xor
push
rol
js
cmps
push
shl
out
and
in
dec
in
(bad)
inc
sub
push
add
mov
ds
inc
retf
adc
adc
pop
push
adc
sbb
push
fistp
mov
push
dec
and
adc
add
jo
sub
inc
xor
and
enter
and
(bad)
les
push
sbb
inc
bound
test
or
jo
sbb
adc
rcl
xchg
ret
out
mov
push
(bad)
loopne
int3
cmps
cmp
or
mov
xor
push
sub
and
(bad)
xlat
sbb
retf
mov
add
outs
in
add
add
add
inc
inc
mov
or
out
jno
xor
ret
test
jae
mov
rcr
test
push
push
add
je
dec
js
into
add
gs
test
jp
movs
push
je
dec
je
daa
and
xor
sub
add
cmps
sbb
add
in
xor
cmps
xor
inc
sub
or
or
pop
xlat
int3
shl
test
sub
or
inc
add
fs
push
or
cwde
ret
add
push
push
pop
ficomp
call
test
push
out
push
fcomp
xor
mov
shl
ret
inc
sbb
inc
sbb
rcr
sub
and
ret
imul
lds
push
inc
cs
test
lods
sbb
xlat
sbb
cwde
sbb
jnp
and
xchg
imul
or
inc
adc
adc
sub
test
lods
jno
jno
xor
stos
mov
ret
gs
sub
mov
mov
inc
jno
or
xor
add
adc
inc
mov
xlat
fldenv
popf
ret
inc
sbb
dec
pop
xor
and
mov
inc
sbb
and
lods
into
push
hlt
out
add
lods
sub
sub
hlt
stos
ins
cli
add
mov
xchg
loopne
xchg
mov
lahf
jge
xor
retf
inc
sub
test
into
fisubr
add
test
xor
mov
sub
and
cld
or
jmp
mov
(bad)
(bad)
movs
adc
stc
imul
adc
sbb
and
sub
pop
cmps
cmp
or
test
dec
add
push
adc
ds
adc
mov
cmp
adc
lods
retf
mov
pop
push
stos
test
inc
or
xor
test
(bad)
xor
dec
popa
addr16
shr
inc
xor
lods
mov
(bad)
shr
shl
ins
mov
dec
mov
pop
es
xlat
cs
pop
mov
out
lods
ror
sub
pop
movs
inc
aas
loope
fdivr
bound
mov
in
push
in
ins
scas
mov
adc
or
ror
loope
mov
ins
fwait
es
adc
outs
and
dec
fdiv
call
cmp
jo
push
or
bswap
dec
inc
popf
sub
test
sub
add
add
add
sbb
dec
lods
adc
mov
dec
hlt
fldpi
loope
adc
or
inc
add
sbb
js
or
inc
sub
cmp
add
shl
adc
lahf
(bad)
push
rol
jmp
ror
sbb
rol
into
sbb
and
inc
inc
and
and
jno
xchg
cmp
int
out
xor
inc
ss
(bad)
call
push
ins
xor
aam
popf
(bad)
add
add
jmp
dec
ins
mov
inc
mov
shr
es
push
addr16
out
inc
or
add
or
mov
test
adc
add
shl
cmp
shl
es
inc
sub
retf
je
xchg
push
push
lds
sbb
dec
mov
sbb
sbb
and
adc
rcl
das
cld
inc
popf
adc
cld
push
push
pop
push
iret
in
xor
jmp
adc
int3
sbb
pop
dec
fdiv
lods
mov
inc
sub
jo
lock
mov
icebp
dec
mov
jmp
test
xor
mov
sbb
inc
or
xor
inc
pop
aam
add
ror
repnz
or
push
ret
imul
inc
imul
hlt
xlat
adc
inc
and
xor
nop
sub
cli
cmc
jae
in
sub
pop
inc
add
jb
xchg
das
xchg
mov
sub
(bad)
int3
in
inc
sbb
je
push
pop
dec
imul
dec
jno
lods
aad
out
icebp
sbb
sub
aaa
xlat
icebp
sbb
in
daa
mov
sub
and
jae
ja
cmp
sar
or
sub
je
push
sar
lods
pushf
pop
xor
xor
out
adc
sbb
ret
xor
xor
jecxz
or
add
mov
xchg
xor
xor
call
and
push
lahf
or
mov
xchg
mov
out
dec
fsubr
adc
sub
xor
ret
inc
rol
or
jl
fmul
shr
out
push
cmp
and
pop
mov
pop
inc
xor
inc
pop
add
or
add
ins
sub
mov
jne
movs
cmc
mov
cmp
add
or
add
imul
int3
add
sbb
cs
sub
jno
inc
xor
sub
sub
mov
xor
xor
pop
leave
mov
pushf
js
data16
adc
scas
lds
inc
sbb
push
(bad)
push
push
pushf
mov
pushf
ret
sbb
inc
shr
test
inc
ror
or
adc
outs
xrelease
jo
xor
aad
inc
sub
push
mov
stos
inc
js
fadd
mov
push
call
mov
inc
pop
or
adc
add
jae
pop
cmp
inc
pop
xlat
iret
cdq
sbb
movs
ret
mov
jmp
xchg
dec
sub
mov
mov
mov
jae
sar
push
iret
push
dec
rol
sub
cdq
mov
scas
and
sub
inc
cld
adc
daa
cld
ror
xrelease
ret
jne
sub
pop
or
les
pop
pop
nop
jl
sub
retf
push
mov
mov
xchg
arpl
xchg
call
add
add
add
or
xor
mov
inc
aaa
xchg
jno
mov
pop
into
arpl
inc
ret
xchg
pop
addr16
mov
scas
mov
bound
adc
add
inc
str
aaa
jae
dec
mov
push
popw
ffreep
dec
test
or
js
mov
cmp
outs
and
test
pop
das
lahf
das
in
jne
and
pop
cmp
jae
xchg
ret
jp
jno
push
mov
jb
or
inc
and
inc
dec
pop
jp
pusha
cli
adc
adc
mov
rol
nop
mov
pop
add
stc
cmp
aad
ins
sub
jecxz
mov
push
test
sub
sbb
mov
les
pop
rol
shl
jae
push
mov
les
inc
mov
jns
push
mov
iret
and
cmp
xchg
ins
es
mov
out
mov
inc
aam
sar
and
add
les
mov
lahf
sbb
clc
cmp
rcl
adc
and
ret
xor
inc
nop
rol
aam
sub
(bad)
test
or
test
jge
stos
or
fsubp
push
pop
or
mov
rol
retf
fbstp
mov
xlat
dec
into
inc
dec
lods
add
jae
lahf
jne
daa
sbb
sub
jns
xchg
jmp
push
xchg
jmp
and
(bad)
mov
sbb
mov
jnp
mov
vminpd
fldenv
mov
adc
inc
es
xor
sbb
jg
das
fbld
push
push
xor
xchg
jecxz
test
aaa
fs
xor
test
pop
push
mov
jno
pushf
rol
ror
mov
out
jg
add
xor
lock
rcl
sub
jg
lea
jo
lds
or
daa
push
(bad)
and
pop
aad
pop
sub
imul
mov
sub
jo
inc
add
cwde
xor
aaa
xchg
jb
inc
iret
push
movs
xor
jb
push
test
push
dec
rol
bound
loop
push
ins
pop
push
imul
jp
or
pop
popa
lds
(bad)
imul
pop
rcr
sbb
dec
loop
gs
aam
(bad)
inc
sub
(bad)
dec
xchg
and
xor
int
inc
movs
cs
call
push
pop
je
ficom
mov
sub
xchg
call
aam
dec
inc
daa
into
sbb
push
neg
mov
sbb
mov
cmp
mov
xchg
mov
jmp
inc
add
scas
repz
lea
mov
movs
cmp
add
stos
sbb
leave
mov
xor
or
or
(bad)
sbb
mov
ret
(bad)
sub
mov
aam
add
mov
or
inc
push
sbb
int
(bad)
or
call
jns
lods
aaa
(bad)
retf
inc
aam
add
fadd
lock
dec
jb
movs
dec
pop
xchg
jecxz
jmp
test
dec
in
js
(bad)
icebp
(bad)
and
mov
dec
and
call
int3
cmp
and
add
adc
adc
inc
mov
pop
rcpps
in
mov
mov
inc
loopne
inc
into
xor
lods
les
and
jno
(bad)
bound
adc
ror
add
adc
test
cmp
daa
mov
and
jmp
stc
adc
repnz
das
mov
enter
and
adc
inc
dec
pop
dec
mov
adc
into
inc
cld
clc
jbe
mov
mov
fldenv
es
dec
push
sub
sub
inc
dec
and
mov
dec
or
shl
cld
or
add
test
lds
xchg
icebp
xchg
inc
shr
loope
push
jg
add
adc
pop
mov
maskmovq
div
nop
xchg
and
dec
cmp
lahf
ror
ret
xlat
pop
sub
jl
adc
stos
and
inc
les
xchg
mov
xor
std
ss
call
jb
fsub
pop
xlat
xchg
pop
ins
jno
push
les
sub
cmp
pop
mov
shl
and
and
adc
lods
xchg
pusha
dec
pop
cmp
mov
sub
and
aas
add
adc
lea
mov
add
daa
mov
sub
fidivr
and
and
out
xchg
cmp
and
xor
sbb
mov
aas
jno
fcom
mov
ja
jl
add
ret
mov
mov
sub
dec
xlat
outs
jnp
rol
cmp
shr
scas
fwait
mov
imul
jmp
xchg
mov
clc
mov
test
dec
es
inc
add
cld
push
dec
cld
cmps
movs
adc
je
int3
pop
repnz
retf
mov
and
lods
xor
push
inc
dec
xchg
bound
add
mov
imul
push
mov
(bad)
fwait
xchg
repnz
out
out
rol
shl
loop
ret
inc
pop
(bad)
add
fcomi
call
add
imul
xor
stos
push
ja
mov
add
push
sbb
sub
pusha
fst
jl
push
popa
xchg
test
js
or
int
inc
xor
pop
push
add
nop
mov
xor
xor
adc
loopne
dec
rol
shr
mov
jb
mov
dec
push
dec
xchg
mov
mov
inc
pop
push
fisub
xchg
daa
xchg
xlat
(bad)
adc
inc
jno
and
or
movs
outs
jg
add
lock
loopne
sub
inc
inc
sbb
rol
adc
pop
pop
xor
inc
clc
xor
(bad)
push
jg
clc
mov
fs
adc
add
push
ja
and
icebp
mov
mov
cmp
inc
mov
fldenv
xchg
mov
sub
mov
inc
inc
call
push
dec
nop
add
pop
xchg
cmp
clc
nop
movs
cmps
mov
jne
xchg
mov
sub
push
leave
inc
pop
jle
add
inc
add
lods
inc
mov
dec
add
adc
in
push
mov
push
std
xchg
add
xor
int3
jg
int3
add
xor
sbb
out
xchg
rcl
and
sub
(bad)
adc
loopne
(bad)
out
mov
jne
pop
sub
adc
xor
push
cmp
mov
push
clc
xchg
add
add
pop
xor
mov
cmovns
adc
adc
sub
push
loop
add
cmp
or
pusha
and
add
pusha
push
ret
call
pushf
hlt
test
mov
pop
sub
call
ss
push
lahf
jle
cmps
inc
or
test
arpl
push
loope
cmps
cli
adc
inc
sub
add
push
mov
push
and
push
movs
test
pusha
inc
or
cmp
mov
outs
sbb
adc
dec
jnp
cmp
sbb
push
mov
or
pop
es
pusha
add
add
test
sahf
adc
mov
pushf
sbb
adc
push
pop
retf
cmp
pop
cwde
pop
add
jmp
push
sbb
pop
loopne
lahf
cs
and
imul
mov
adc
inc
mov
and
cmp
push
mov
out
add
pop
fsub
call
mov
lods
cmps
leave
les
xor
sbb
mov
call
add
loopne
test
jmp
int3
fcmovnu
ret
mov
out
mov
dec
enter
popf
test
int3
dec
add
pop
jecxz
add
sbb
ror
dec
aaa
dec
dec
aam
sub
shl
mov
sbb
mov
into
dec
outs
mov
test
jbe
int
in
pusha
clc
loopne
es
out
adc
mov
dec
dec
(bad)
movs
lods
fadd
or
pop
rcr
shl
mov
adc
cld
adc
pop
movs
inc
imul
pop
add
sub
sbb
xchg
push
pop
xor
int3
push
xor
xor
mov
push
rcr
movs
out
mov
jne
loopne
add
lock
movs
cmp
pop
add
mov
mov
(bad)
push
jno
movs
inc
pop
dec
mov
test
inc
test
pop
je
test
inc
pop
push
jae
movs
sbb
adc
or
movzx
(bad)
sub
fsubr
repz
cmp
mov
xchg
lock
sub
imul
mov
cmp
mov
ss
or
popf
inc
adc
ret
dec
loop
pushf
fist
push
sbb
sbb
add
sbb
push
jne
ja
mov
or
xchg
lea
or
lahf
cli
scas
scas
push
jmp
test
mov
dec
jb
jmp
jl
sbb
bnd
shl
dec
add
push
call
je
or
cmp
int
jle
jmp
sbb
cdq
mul
js
stc
out
into
in
push
test
sub
test
adc
add
cmp
xor
test
jae
inc
movs
mov
mov
add
sti
loopne
ds
push
call
and
in
inc
pop
rol
cmp
out
pop
leave
dec
lods
(bad)
(bad)
loope
xlat
inc
out
cs
mov
ja
add
add
or
jbe
mov
adc
mov
shl
repz
dec
js
sbb
add
call
add
test
fadd
inc
add
ins
inc
scas
fstp
ins
imul
outs
xor
lock
lods
cmp
add
mov
aam
das
add
mov
and
stc
push
add
jb
cli
into
stos
cli
cmp
push
xor
sti
mov
sti
sub
adc
push
cmp
jo
xor
add
outs
std
jl
std
mov
loopne
or
or
push
lgs
push
mov
mov
add
add
push
xor
cmovle
and
add
push
pushf
and
unpcklpd
dec
mov
lahf
movs
fwait
add
push
push
arpl
stc
sahf
dec
stc
push
jle
out
or
pop
icebp
mov
int3
dec
mov
cs
push
adc
or
rcl
fmul
or
ror
lock
lock
lods
jo
mov
(bad)
popa
or
or
and
cmp
retf
or
das
repnz
aam
adc
shl
scas
fdivr
push
dec
mov
or
scas
sqrtps
adc
dec
jle
add
mov
mov
dec
adc
mov
fs
stc
fmul
push
fisttp
jp
pop
jo
adc
mov
icebp
loopne
mov
sbb
dec
mov
jmp
loopne
in
add
mov
popa
xor
int3
pop
sub
add
jae
in
inc
mov
lods
adc
adc
pop
push
sbb
mov
shr
and
xchg
fcomi
add
mov
xchg
rcr
sbb
dec
je
dec
adc
mov
pop
cmp
imul
or
icebp
pop
cmp
sbb
xor
enter
mov
pop
mov
call
loopne
lods
dec
(bad)
jbe
loope
cs
icebp
mov
xor
xor
pop
ror
lea
adc
add
jb
sbb
and
(bad)
push
sub
sub
add
xor
pop
(bad)
adc
cwde
xchg
xor
adc
adc
mov
xor
ror
mov
and
xchg
inc
push
xor
mov
and
test
cld
sbb
sub
fucomip
xor
inc
fld
mov
fbstp
sub
sbb
lock
add
push
sub
pop
add
xchg
and
add
or
add
xor
pop
jb
sbb
adc
lods
xor
xor
jne
cmp
push
or
mov
outs
add
dec
cld
repnz
adc
(bad)
push
dec
adc
xor
push
sbb
fcmovnbe
push
sbb
push
mov
pop
pusha
rcl
mov
pop
call
out
adc
xchg
push
and
cwde
or
jnp
not
mov
int3
xor
rcr
mov
jmp
aaa
jno
aaa
jnp
retf
adc
imul
jae
jmp
popa
and
scas
add
push
add
jb
shl
and
dec
adc
mov
scas
sar
test
repnz
aas
mov
sbb
xor
push
rol
jae
mov
sbb
pop
and
or
adc
mov
out
cmp
int
scas
loopne
inc
add
and
mov
adc
aam
pop
repz
das
push
adc
add
je
cmp
push
inc
push
cmp
inc
dec
adc
sub
inc
pop
push
cmc
in
add
or
or
push
inc
jae
call
rcr
clc
add
scas
dec
lea
cmc
add
scas
mov
repz
or
add
test
in
inc
dec
ror
pop
add
loopne
enter
and
xchg
shr
hlt
sbb
aam
fcomi
dec
loope
movs
jl
cwde
jmp
fld
pop
popa
inc
xchg
ror
push
retf
scas
or
aad
(bad)
sub
push
or
call
dec
jmp
sbb
or
add
pop
add
push
dec
repnz
adc
jne
iret
rcl
ds
add
int3
add
test
dec
imul
scas
cmp
pop
and
xor
push
push
push
ret
xchg
adc
jno
mov
pop
scas
adc
enter
xor
sub
add
dec
pop
inc
and
and
call
or
push
iret
xor
mov
das
xor
inc
add
dec
pop
nop
cmp
xchg
ja
cmc
push
pop
push
adc
rol
or
pusha
push
adc
sbb
push
popa
jnp
imul
xchg
push
(bad)
(bad)
ss
stos
xchg
pop
push
and
lahf
push
adc
mov
jbe
xchg
mov
mov
dec
(bad)
outs
jmp
gs
jbe
push
test
or
ja
cdq
int
xchg
lea
mov
and
pop
out
addr16
add
mov
lea
or
mov
sub
nop
xor
mov
or
and
push
add
je
adc
imul
leave
cs
int
push
cmps
test
adc
loopne
mov
(bad)
fs
(bad)
pavgb
(bad)
push
sub
add
xor
jne
or
mov
ret
test
pop
inc
adc
jb
xchg
jl
xlat
or
adc
jmp
je
test
add
or
lock
sub
adc
sub
lahf
in
pop
xchg
aad
sub
add
sbb
dec
aas
push
retf
and
push
dec
pushw
icebp
mov
repz
cmp
push
pushf
pop
add
sub
or
or
aam
jnp
ja
pop
mov
rcl
xor
add
push
jge
cmp
jle
rol
mov
out
push
or
loopne
sub
aad
mov
sub
movs
ret
loop
pop
cs
sbb
fdiv
jbe
lods
lods
adc
xlat
add
jne
dec
jbe
fwait
pop
add
add
cmp
adc
test
imul
vpunpckhwd
push
xor
test
sbb
loope
push
mov
or
or
loop
jl
jne
not
clc
setb
xor
idiv
scas
dec
test
pusha
add
add
loopne
movs
popa
mov
aaa
and
retf
and
iret
mov
ss
int
ins
xor
add
jo
add
hlt
adc
push
xchg
sbb
or
mov
pop
sbb
hlt
inc
xchg
push
and
rol
jmp
adc
add
data16
add
or
sub
dec
pop
sub
push
jns
idiv
and
sub
adc
add
push
xlat
pusha
pop
cmps
cwde
sbb
aaa
pop
dec
pop
arpl
xchg
pop
mov
out
jns
mov
das
js
mov
mov
inc
and
das
repz
(bad)
dec
push
mov
push
(bad)
sbb
adc
xchg
test
pushf
add
jp
adc
not
popa
fwait
jg
test
sbb
(bad)
enter
or
xchg
xor
loope
jno
popa
sbb
mov
out
xor
fs
mov
(bad)
stc
push
(bad)
or
and
xchg
inc
adc
repnz
mov
cmps
mov
ss
xchg
and
adc
inc
sbb
sbb
mov
loopne
in
dec
jne
and
push
test
or
sub
pushf
cdq
mov
pushf
xchg
jne
pop
inc
jge
sbb
mov
mov
xchg
test
inc
mov
cmp
pop
hlt
out
xor
inc
inc
shl
cwde
mov
mov
cld
pusha
mov
stc
xchg
xor
mov
cmp
neg
pop
sbb
xchg
ja
and
or
jne
scas
push
adc
aam
in
pop
xchg
and
cmp
push
xchg
push
push
mov
cmp
xchg
in
pop
movs
pop
dec
nop
bound
or
cmp
add
cmp
sub
push
fld
mov
push
xchg
mov
or
inc
test
jmp
jae
test
pop
(bad)
and
adc
das
cld
push
pop
sbb
lea
ret
(bad)
mov
dec
rol
or
call
cmp
adc
pop
les
cmp
mov
stos
in
enter
mov
pushf
arpl
fwait
bound
out
lock
add
push
in
or
js
inc
cmp
push
sub
mov
pop
xor
test
add
loopne
pop
out
pop
outs
imul
xchg
iret
loopne
pop
push
push
stc
mov
add
ret
cmp
push
pop
sub
add
pop
sbb
les
adc
push
out
add
add
lds
aam
shl
mov
cmp
xchg
xchg
cli
retf
jnp
outs
xor
add
cmc
push
cmp
arpl
push
push
mov
xlat
jns
(bad)
xchg
inc
inc
cmc
(bad)
add
shl
pusha
int3
imul
jae
mov
add
fcom
inc
xor
mov
sbb
pop
into
(bad)
mov
mov
mov
xlat
mov
ror
adc
adc
xor
cmp
push
add
imul
sub
test
or
and
loopne
(bad)
popa
mov
test
xchg
data16
mov
dec
sbb
push
mov
das
inc
and
(bad)
(bad)
cld
(bad)
pop
scas
sbb
int3
inc
loope
hlt
ficomp
mov
mov
mov
jge
fwait
sbb
cmc
xor
pop
cdq
lds
add
sbb
jne
cli
and
ins
adc
popa
push
sbb
fadd
cmp
(bad)
in
fnsave
xchg
mov
(bad)
fnstsw
or
mov
ret
loope
cld
int3
and
nop
dec
call
cs
jo
int
inc
xchg
loope
mov
sbb
sahf
out
dec
(bad)
pop
dec
pop
pop
jmp
or
idiv
inc
lock
or
fmul
popf
ins
bts
sub
mov
ins
loopne
jle
and
pusha
push
pop
inc
adc
adc
mov
cmps
(bad)
mov
in
mov
imul
push
ret
in
jg
or
push
sbb
jae
cmp
ja
pop
in
popf
in
popa
sbb
or
or
nop
mov
and
xor
retf
pop
repz
aad
adc
clc
icebp
ins
nop
sbb
sbb
or
ins
sbb
add
dec
ins
and
popf
(bad)
fisttp
add
xchg
ret
add
add
enter
ret
adc
pop
mov
xor
xchg
inc
push
mov
cdq
loop
adc
and
gs
xchg
push
popa
sub
add
adc
(bad)
call
popf
faddp
stc
cld
or
into
lahf
fisttp
sbb
mov
in
inc
add
es
adc
and
mov
dec
mov
call
pop
or
cmp
and
mov
retf
call
je
fiadd
jbe
test
mov
and
push
and
push
scas
lds
es
leave
xchg
and
shl
inc
mov
mov
hlt
mov
sbb
and
adc
mov
sahf
fdivr
imul
lea
dec
stc
push
leave
leave
ja
xchg
cs
mov
int
cmp
or
shr
jg
mov
push
movs
cmp
push
mov
mov
jg
std
pop
loope
lods
fdiv
add
mov
mov
rcl
in
icebp
mov
jle
js
call
xor
and
jno
sub
imul
sbb
(bad)
add
mov
pop
push
inc
cmps
or
and
adc
sub
in
cmps
fwait
jno
xchg
and
jo
in
push
les
in
adc
jecxz
push
inc
pop
addr16
push
mov
mov
movs
pop
jns
lods
rol
jnp
in
xchg
jp
mov
push
jnp
lds
daa
pop
jle
mov
movs
and
adc
or
js
sub
cmp
mov
(bad)
adc
push
sbb
sbb
add
jle
adc
outs
sub
(bad)
push
arpl
inc
daa
xchg
mov
retf
retf
sub
mov
ja
xchg
inc
or
xor
inc
or
inc
and
punpckhwd
xchg
push
jp
bound
es
leave
adc
pop
pop
push
imul
xor
in
jge
jge
inc
sbb
es
mov
and
push
repnz
sub
cwde
add
dec
pop
loop
daa
sbb
test
mov
test
ds
js
dec
cmps
mov
fadd
es
or
or
retf
repnz
into
or
bound
pop
xchg
push
shl
data16
xchg
iret
out
popa
stos
pop
or
ins
or
(bad)
ficom
pop
jbe
pusha
add
call
es
leave
sbb
ds
les
divps
das
push
sub
rol
ret
adc
mov
cwde
adc
mov
adc
cmps
dec
test
(bad)
pop
push
sub
xor
loopne
mov
retf
stos
fwait
in
test
dec
xchg
and
stos
and
xor
aaa
int3
movs
int3
jmp
aad
vsubps
add
add
jmp
xchg
adc
(bad)
in
pop
in
fld
lahf
mov
shl
mov
jb
push
mov
pop
sbb
add
xchg
loopne
sbb
(bad)
std
add
cs
mov
inc
hlt
clc
mov
int3
jb
not
xor
inc
test
fisttp
outs
or
in
call
stos
scas
stos
ror
pop
or
push
dec
ret
sub
int
push
inc
xor
add
adc
imul
jmp
mov
imul
cmp
loopne
aas
pop
add
jo
es
movs
xor
or
push
xor
xor
pop
mov
fimul
add
mov
jnp
mov
push
add
pop
sbb
sbb
lahf
les
mov
push
lods
mov
jo
arpl
mov
out
sbb
mov
aad
or
sub
movs
loopne
fild
stos
pop
inc
aas
sbb
mov
adc
test
cmp
add
pop
add
sbb
xor
adc
inc
sbb
push
sub
sbb
loop
test
daa
jmp
repnz
popa
pop
mov
mov
add
inc
(bad)
sbb
cmps
adc
mov
mov
adc
arpl
(bad)
sahf
call
pop
cmp
outs
cmc
mov
dec
clts
test
add
pushf
pop
out
push
xor
sbb
add
pop
dec
shl
xchg
bound
push
inc
sub
cld
ins
outs
mov
(bad)
retf
inc
arpl
(bad)
ins
xor
sub
or
mov
mov
or
or
xchg
mov
jl
pop
jmp
mov
repnz
sbb
shl
xchg
cs
mov
xchg
sub
inc
push
mov
sub
push
(bad)
clc
jmp
lahf
lds
sub
(bad)
aad
test
adc
stos
dec
mov
xchg
or
test
(bad)
push
sbb
mov
inc
mov
outs
mov
or
xor
xor
je
mov
lods
retf
adc
test
dec
mov
mov
inc
in
dec
jae
pushf
loop
inc
test
jmp
dec
inc
push
aam
jb
es
cli
sbb
movs
aam
adc
pushf
add
xor
adc
mov
lods
xor
call
(bad)
cwde
add
pop
add
bound
shr
jle
shl
or
idiv
mov
adc
loop
les
pushf
(bad)
push
mov
bound
int
sub
adc
or
jl
cmp
cmp
sub
fldln2
dec
lods
xor
imul
fmul
dec
pop
pop
adc
ins
ins
imul
sbb
cmp
inc
or
cmp
push
adc
das
or
fisttp
inc
mov
mov
fdivp
push
into
ret
frstpm(287
cs
sub
gs
mul
pop
mov
sub
movs
xchg
xchg
in
jp
cmc
ficomp
inc
mov
add
pop
cmp
test
xchg
fdiv
and
add
lock
push
(bad)
je
or
fsubr
adc
das
lods
aas
sub
sub
aas
pop
bound
ss
mov
arpl
pop
sbb
xchg
sbb
pop
aaa
push
arpl
mov
and
loope
inc
sbb
outs
inc
and
sub
arpl
das
push
add
jmp
or
jl
loope
jecxz
bound
or
mov
sbb
adc
pop
test
sbb
push
sub
test
ins
cdq
push
pusha
outs
mov
adc
pop
mov
dec
pop
aas
cmp
mov
bound
inc
pop
xor
aas
test
cmps
and
add
inc
shl
ret
xchg
add
pop
sahf
fbstp
pop
std
jmp
bound
loop
pop
dec
stos
retf
enter
leave
xchg
or
jnp
pop
cmp
xor
mov
push
add
and
xor
pop
sub
inc
lock
outs
repz
pop
repnz
fsub
xchg
dec
xchg
dec
pop
or
inc
add
or
xor
xchg
rep
(bad)
sub
(bad)
fdivrp
into
jb
sahf
scas
stos
push
iret
dec
fs
mov
pusha
shr
les
jae
repz
sub
dec
cmp
inc
add
dec
mov
adc
pop
jecxz
jo
repnz
adc
jo
xchg
shr
out
in
or
dec
mov
punpckhdq
sbb
(bad)
add
ss
popa
neg
cmp
mov
scas
in
lock
sub
push
clc
jle
out
adc
pop
mov
aad
mov
lods
(bad)
scas
mov
xchg
xor
pop
sub
icebp
add
je
push
sub
or
pop
inc
clc
xchg
xor
add
in
nop
mov
dec
sbb
inc
outs
mov
dec
and
or
xchg
scas
jns
xor
retf
cli
push
std
xchg
mov
ds
pop
mov
adc
push
mov
push
div
push
inc
mov
(bad)
jnp
adc
lds
sbb
outs
popa
adc
aas
shl
loopne
adc
adc
sbb
adc
add
test
and
add
pop
loopne
jns
cmps
outs
sub
jle
aam
mov
jp
daa
ins
pusha
hlt
adc
dec
inc
sar
push
jno
les
aaa
xor
data16
or
jae
add
or
js
jo
rol
and
xor
fdivr
pusha
add
xchg
sub
and
and
sub
dec
idiv
push
fs
and
push
adc
pop
jg
hlt
push
add
push
cmp
pusha
hlt
jne
pop
cmp
repnz
mov
add
rol
xor
int
or
jns
cmp
or
add
rol
pop
mov
sbb
push
push
adc
adc
or
dec
cdq
pop
jle
(bad)
je
call
outs
dec
sbb
push
jne
in
jp
push
mov
adc
mov
dec
xor
adc
sub
jne
dec
out
imul
test
mov
push
cmps
inc
adc
or
add
rcl
jae
loop
lahf
add
nop
or
push
xor
dec
cmps
(bad)
call
clc
xor
inc
adc
out
leave
push
inc
xor
sahf
push
addr16
xlat
mov
pop
add
cmp
add
mov
(bad)
pop
sahf
inc
js
cmp
pop
mov
xchg
sbb
clc
sbb
push
test
jns
clc
pop
inc
pusha
dec
jnp
or
dec
mov
mov
xor
cld
xor
mov
xchg
mov
xchg
mov
pop
jb
xor
pop
pop
mov
es
imul
jg
add
add
push
xchg
sbb
pop
cwde
pop
or
loopne
xor
pop
jecxz
mov
pusha
outs
cmc
cvtps2pi
aas
or
cmc
adc
mov
movs
xchg
or
dec
mov
aas
inc
mov
xchg
cmp
mov
pop
push
fldenv
out
into
inc
push
iret
xchg
push
xor
xor
adc
add
imul
push
mov
mov
lea
add
mov
xor
xor
add
and
cwde
(bad)
mov
inc
std
repz
inc
pop
inc
mov
retf
sub
int3
sub
not
pop
jae
cmp
push
enter
aad
pop
add
inc
dec
shr
cmp
add
push
jge
outs
sub
call
lds
push
xchg
or
add
rol
push
loopne
jns
dec
call
or
ror
mov
popa
push
imul
mov
popf
inc
jmp
dec
mov
and
ss
das
addr16
xchg
xchg
popa
xor
in
dec
jae
js
or
xchg
test
jg
pop
aas
lock
jbe
in
fwait
mov
adc
pop
xchg
mov
or
or
hlt
sbb
adc
and
mov
xchg
inc
mov
pop
and
inc
sahf
lds
leave
bound
xchg
push
mov
aaa
cmp
aaa
es
jbe
ret
ins
adc
or
sbb
adc
jb
nop
or
or
or
pop
inc
mov
adc
and
repz
arpl
scas
xchg
int
jne
hlt
cmps
xchg
jo
xchg
int
cmps
ss
mov
sub
mov
adc
xor
inc
outs
mov
mov
test
inc
push
push
mov
sbb
add
push
mov
test
xor
xchg
push
push
and
outs
lock
pushf
and
pop
add
sbb
sub
scas
push
push
scas
add
cli
mov
sbb
xor
xor
popf
lds
test
inc
pop
shr
(bad)
retf
repz
push
and
movs
xor
sub
mov
push
push
add
and
sbb
mov
or
mov
lahf
mov
add
or
pop
or
mov
sub
sbb
rcr
mov
aas
aad
xchg
int3
loope
lock
push
test
stos
test
dec
cdq
sub
pop
pop
inc
inc
cmp
rcl
cmps
and
imul
mov
retf
enter
es
push
scas
xor
jmp
movs
push
add
push
or
mov
stc
jns
sti
mov
sub
ret
cmps
movs
daa
imul
shl
mov
mov
call
mov
adc
xor
mov
movs
loope
mov
push
inc
inc
xor
adc
xor
inc
lods
pop
push
adc
add
pusha
or
or
nop
jns
leave
xchg
jg
jns
rol
jmp
dec
jns
stos
jb
movs
xor
mov
cmps
or
inc
std
mov
mov
js
mov
stos
jnp
adc
add
push
aas
nop
add
nop
add
inc
sbb
sbb
shl
(bad)
ja
adc
inc
mov
test
xchg
int3
adc
xor
sbb
mov
cs
add
mov
fldenv
jnp
cmp
pop
push
mov
add
add
dec
mov
lods
mov
sar
cli
xchg
mov
fcmovnb
test
add
add
pusha
ret
aaa
mov
add
add
jl
sub
dec
push
imul
jb
sbb
mov
je
lock
jns
push
fsubr
or
es
dec
stc
push
retf
dec
(bad)
lods
push
mov
and
pop
ret
ret
xor
sub
lock
and
sub
mov
sbb
sbb
mov
imul
icebp
arpl
(bad)
mov
(bad)
sub
mov
push
cld
xchg
adc
(bad)
scas
lds
(bad)
mov
retf
dec
lods
xor
cmp
push
(bad)
mov
ss
ss
out
enter
test
cld
(bad)
mov
enter
ja
and
sub
jb
(bad)
jb
(bad)
aas
es
cmp
int3
and
push
test
pop
cld
ror
out
movs
pop
movs
inc
(bad)
arpl
mov
xchg
mov
or
test
and
sub
retf
int3
jg
les
mov
int
or
ror
sbb
into
in
mov
scas
and
push
nop
add
xchg
add
mov
js
cmp
and
sar
es
fs
mov
xor
xor
fidiv
shl
xor
pop
push
or
jmp
ror
iret
mov
add
pop
int3
clc
jl
test
sbb
pop
popf
ror
int
(bad)
(bad)
dec
sub
outs
xlat
xchg
sar
aam
int
inc
pusha
lahf
test
pop
jne
(bad)
(bad)
fld
lea
or
pop
data16
adc
out
into
stc
aam
imul
aas
push
xchg
jo
jl
adc
popa
and
iret
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
mov
or
shl
inc
adc
xor
data16
enter
(bad)
and
sbb
mov
leave
xchg
sub
test
leave
mov
retf
xor
inc
mov
int
xor
sub
mov
dec
test
mov
outs
mov
cmps
and
int3
dec
mov
dec
test
mov
movs
mov
inc
xor
cmp
call
je
retf
push
stos
jo
jmp
cmp
push
lods
inc
mov
int
dec
dec
cmps
xor
ins
stos
mov
and
mov
mov
sub
and
jne
sbb
in
js
fcmovnbe
lea
stos
mov
pop
int3
cdq
adc
sub
jae
rcl
pop
out
(bad)
mov
in
cmp
int3
arpl
in
ins
sti
jbe
fisub
xchg
cmps
lock
mov
fistp
fwait
loop
ror
and
sahf
into
mov
jns
fdiv
jnp
and
xchg
and
scas
pop
or
test
pop
mov
jmp
out
adc
and
jne
push
pop
stc
loope
ficom
dec
cmc
fbstp
mov
loope
pop
xor
popf
sbb
mov
enter
and
loop
xor
lahf
and
push
movs
xchg
mov
inc
pop
in
and
and
xchg
xor
(bad)
gs
mov
dec
sub
push
xchg
test
adc
movs
inc
data16
add
out
retw
call
push
stc
arpl
gs
sbb
mov
cmps
inc
ja
aaa
xchg
mov
fwait
bound
es
mov
lahf
outs
mov
popf
test
xchg
push
fsub
stos
dec
push
add
xchg
addr16
sbb
data16
call
xor
cmp
lods
mov
addr16
and
sbb
movs
test
push
and
in
cmps
ret
popf
push
cmps
jb
push
inc
or
cmp
and
in
mov
mov
add
int
es
mov
push
mov
dec
dec
mov
xchg
xchg
dec
and
stos
test
dec
inc
lods
xchg
in
sub
inc
mov
ror
push
sbb
sub
jnp
mov
mov
sbb
sub
and
(bad)
fiadd
jns
in
lods
frstor
or
add
(bad)
pushf
lock
xor
stos
movs
call
or
mov
xchg
lds
pop
pop
out
test
and
lahf
cmp
jno
sub
sbb
jl
mov
repnz
xchg
cwde
repz
cmp
lods
arpl
sbb
dec
push
pop
mov
pop
push
dec
(bad)
sbb
dec
xor
and
loopne
cmp
mov
mov
push
xchg
cmc
dec
or
add
mul
or
adc
inc
push
jae
mov
aaa
fisttp
dec
add
pop
jecxz
ja
test
add
xor
test
iret
lock
out
mov
loopne
xchg
or
cmps
jl
mov
pop
xor
adc
scas
cmp
out
xchg
cmp
test
ins
out
dec
pop
ds
lds
mov
inc
or
xor
cmp
mov
out
jno
jp
lock
sahf
cmp
jecxz
mov
test
push
daa
test
add
fsub
mov
loopne
lahf
adc
scas
push
lds
cmp
push
xor
test
dec
mov
xlat
in
out
inc
ret
pop
loopne
or
and
inc
lea
jecxz
add
mov
inc
loop
(bad)
jns
and
hlt
sub
sbb
and
cmp
jb
xchg
adc
test
daa
cmp
call
jb
add
ficom
outs
mov
movd
jecxz
cli
adc
add
fwait
or
add
loopne
daa
cmp
adc
pop
push
ins
mov
bound
imul
cmps
into
mov
lods
jno
outs
les
push
sbb
jp
jecxz
jbe
mov
and
push
dec
arpl
add
and
stc
mov
xor
xchg
push
je
fsubr
das
xchg
and
cmc
call
or
mov
adc
stc
leave
sti
loope
or
inc
sbb
out
xchg
jnp
mov
inc
fsub
or
mov
xchg
add
out
push
dec
add
mov
adc
cs
mov
pop
xor
cmps
rcr
inc
int
ficom
or
ror
sahf
mov
fld
cmp
cmp
add
sub
sar
out
mov
cmp
data16
addr16
leave
sar
and
or
jo
fs
shl
jne
sahf
ds
rcr
ror
inc
add
scas
icebp
jbe
je
inc
sub
adc
pop
(bad)
(bad)
out
ja
ret
sbb
les
test
sbb
mov
ins
push
add
dec
or
cwde
cmp
test
mov
inc
out
cmp
ret
cmps
push
xor
into
ror
sbb
push
mov
(bad)
scas
mov
push
and
add
repnz
ficom
cmp
out
cmp
shl
jae
mov
add
mov
aam
xchg
xor
mov
les
ins
and
push
sbb
stos
lea
push
lods
jle
xchg
sbb
and
pop
pop
idiv
rol
fs
dec
movs
mov
call
mov
push
dec
pop
xor
int3
stos
push
test
push
mov
dec
cdq
fdivr
mov
jae
cdq
ror
add
mov
fld
not
stc
out
mov
jp
mov
(bad)
pop
pop
fstp
xchg
cwde
cmp
(bad)
ret
int
push
(bad)
cmp
mov
pop
add
inc
sub
retf
jp
push
and
push
ss
inc
lea
imul
jle
imul
bnd
push
jbe
xchg
mov
cwde
mov
adc
and
inc
xor
daa
push
pushf
loop
aas
xor
add
mov
push
add
aad
sbb
call
mov
dec
ss
(bad)
js
fcmovne
cdq
pop
push
cmp
and
add
mov
fs
cmp
dec
outs
jnp
and
fadd
xlat
sub
mov
mov
in
je
shr
test
xor
jbe
xchg
mov
enter
xor
(bad)
push
frstor
addr16
or
nop
mov
jmp
xchg
or
jecxz
and
aaa
and
adc
rol
xchg
call
mov
inc
mov
push
enter
jmp
pop
dec
aam
retf
aaa
add
sbb
pushf
lds
or
fs
xor
sub
sbb
mov
mov
aas
pop
call
dec
add
cs
mov
daa
and
je
mov
push
fistp
xlat
xor
fld
mov
mov
mov
pop
cdq
mov
dec
gs
pop
or
mov
mov
and
jnp
push
mov
add
cmp
jbe
aaa
lock
mov
and
xchg
xor
or
mov
xor
out
xor
es
jae
mov
in
retf
jmp
pop
xchg
aad
or
or
add
les
jge
sbb
push
in
jg
lods
or
pop
add
pop
jmp
push
add
jmp
lahf
jno
inc
or
pushf
fs
sub
into
outs
adc
mov
arpl
out
cmp
je
out
pop
jo
adc
add
mov
or
pop
cmp
inc
js
div
mov
ds
or
aaa
xor
fbstp
(bad)
mov
sub
fisub
clc
cmc
jmp
test
out
cli
pop
jg
fcom
cmp
push
lock
adc
or
add
nop
jnp
adc
xor
xlat
pop
mov
push
mov
dec
mov
iret
pop
jge
pop
jns
inc
jge
pop
outs
cli
mov
test
or
jbe
stos
add
jmp
(bad)
or
inc
ja
gs
mov
mov
pop
inc
jnp
jbe
add
ja
(bad)
ja
pop
jl
rol
or
or
add
xchg
add
push
aaa
dec
mov
sbb
aam
cmp
add
inc
cmp
jne
add
je
mov
cmp
inc
or
loopne
adc
add
xor
xor
jnp
test
notrack
add
ror
fadd
test
in
pusha
or
pop
dec
pop
aam
lds
dec
out
imul
adc
jl
pop
jge
sbb
movs
wbinvd
cmps
adc
pop
test
push
ins
cwde
dec
lods
xchg
cmp
or
add
jmp
outs
gs
fs
leavew
jae
jp
jle
or
test
jle
cmps
pop
cmp
mov
ss
dec
sbb
jg
rol
ja
out
dec
xor
dec
enter
add
test
lds
clc
mov
inc
gs
xor
clc
test
push
jns
push
mov
or
inc
test
movnti
pop
cmc
or
add
or
and
add
or
jbe
loopne
mov
outs
bound
xchg
or
xchg
pusha
or
sbb
lea
cmp
out
pushf
call
mov
sub
js
mov
(bad)
push
inc
(bad)
lods
enter
push
aam
cmp
lock
push
repz
pmuludq
(bad)
xchg
pusha
push
or
or
mov
scas
loopne
fild
jle
xchg
retf
ins
mul
and
inc
repnz
xor
mov
mov
test
xchg
push
(bad)
loope
sbb
xchg
pop
push
xchg
mov
xchg
xchg
test
or
psllq
mov
or
fadd
push
in
jo
clc
dec
pop
push
and
jo
je
xchg
pop
(bad)
adc
or
jle
add
bound
mov
cwde
push
aas
xchg
xor
mov
xchg
jg
mov
enter
xchg
call
add
adc
pop
push
stos
enter
psubw
xchg
in
add
(bad)
xlat
sbb
pop
xchg
xchg
cdq
(bad)
call
shl
mov
add
mov
mov
mov
das
fld
pop
repnz
mov
inc
call
or
pop
xchg
mov
inc
out
push
cmp
jge
fs
xchg
(bad)
addr16
mov
adc
imul
sbb
push
popf
hlt
ror
aam
push
(bad)
dec
dec
loopne
aam
or
add
(bad)
jo
dec
repz
xchg
pop
xchg
cdq
aam
popf
push
mov
in
fstp
sbb
out
mov
xor
cmp
push
mov
xchg
je
(bad)
push
push
dec
jl
test
punpckhdq
lock
adc
jns
(bad)
pusha
or
push
jb
test
scas
or
dec
add
dec
sbb
mov
jp
xchg
inc
mov
adc
mov
loop
xor
cmp
jo
inc
add
lea
mov
xor
cmp
movs
hlt
call
aad
or
shl
or
sbb
stos
addr16
call
das
mov
aaa
cmc
cmps
jb
stos
enter
or
xchg
cmps
pop
sub
jnp
leave
sub
and
pop
js
mov
test
clc
jl
or
neg
adc
adc
ins
pusha
add
fisubr
cmp
ja
cmps
jp
mov
and
pop
push
xchg
stos
mov
xor
inc
repnz
mov
mov
push
and
xor
push
dec
cmp
inc
leave
fidivr
mov
test
xchg
nop
paddd
mov
test
xchg
rol
lock
je
loopne
push
rcr
jp
arpl
test
(bad)
jg
xor
jmp
xchg
pop
es
das
dec
xor
js
mov
sub
xchg
mov
cmp
lods
into
pop
add
stos
mov
xor
mov
pop
mov
pusha
mov
stos
add
sub
inc
pop
and
inc
mov
scas
sub
cmp
xchg
inc
pop
mov
jmp
sub
xchg
mov
pop
push
adc
mov
bound
or
push
cmp
jge
xor
cmovle
or
fild
hlt
add
inc
mov
addr16
and
in
jle
jmp
les
sbb
cmp
fwait
mov
ret
mov
jbe
jmp
jb
dec
inc
mov
bound
jmp
or
gs
cli
mov
or
dec
test
cli
cwde
mov
add
push
cmps
push
pop
inc
push
mov
sbb
sbb
cmc
fs
repnz
and
jne
mov
dec
mov
jnp
push
scas
stos
mov
and
mov
call
sar
rcr
popf
lahf
add
(bad)
pop
paddusb
pop
iret
push
mov
retf
mov
jae
xchg
je
mov
jge
mov
mov
out
xchg
in
mov
or
cmp
sti
mov
lds
push
cli
mov
jo
jne
pop
leave
xchg
psubd
push
jmp
mov
mov
and
fs
outs
repnz
jp
xchg
xor
adc
loope
fcmovu
dec
adc
pop
in
ja
xchg
push
out
mov
fs
cli
shr
imul
mov
cdq
add
xor
push
div
out
push
xor
inc
aam
(bad)
cdq
add
jg
jl
jae
add
aaa
les
(bad)
jmp
rol
mov
jge
xor
gs
leave
lock
lds
(bad)
ss
cmp
jns
sbb
ins
in
(bad)
fadd
and
inc
push
(bad)
xor
ror
(bad)
mov
cmps
jle
or
jg
sub
retf
mov
xor
xchg
mov
aam
or
push
jecxz
bound
in
push
leave
pop
mov
or
leave
mov
mov
mov
loopne
psllq
and
outs
add
pop
sub
das
retf
lods
mov
cmp
jb
test
mov
sti
cld
or
in
or
jecxz
mov
push
jge
push
repz
or
or
mov
push
test
xor
push
ins
sub
or
stos
leave
fsubr
aaa
push
mov
jmp
sbb
leave
push
dec
ret
add
pop
cmc
pop
push
repz
jmp
mov
xor
test
fmul
add
dec
cmc
sub
xor
pop
or
mov
or
or
aad
push
aad
jge
pop
cmp
pop
fst
pop
popf
aad
or
mov
ror
scas
xchg
sbb
into
pop
adc
(bad)
xor
shl
jge
imul
mov
or
xor
and
jmp
retf
stc
dec
inc
popf
jle
test
mov
aam
sbb
arpl
fldenv
or
pop
fisub
fisubr
inc
sar
ja
mov
fbld
xor
push
mov
cdq
int3
add
inc
ret
xlat
push
lock
mov
cmps
sub
xchg
mov
cmp
movs
mov
(bad)
js
jnp
jmp
bound
jl
lds
aam
jge
push
in
xor
lods
ficomp
aad
sbb
pop
pop
fcomip
or
push
hlt
xor
arpl
or
mov
and
dec
add
cmp
out
pop
(bad)
data16
mov
in
xchg
(bad)
cmc
rcr
dec
cdq
mov
(bad)
iret
loopne
pop
gs
lock
(bad)
fstp
sbb
arpl
mov
add
cld
pop
stc
xor
xor
or
cmp
mov
cld
or
push
ror
adc
pop
mov
jmp
push
add
cli
xor
sar
add
pop
into
in
add
xor
ds
adc
mov
push
loop
sub
mov
imul
cs
push
jecxz
ja
sbb
inc
xchg
repz
inc
pop
fild
addr16
mov
cmp
cmp
call
push
outs
rol
hlt
sub
imul
xor
pusha
dec
push
(bad)
and
cmp
mov
ds
scas
or
jb
or
dec
fwait
pop
mov
sub
addr16
sub
fs
call
xor
sbb
and
mov
pusha
mov
mov
xor
mov
add
xlat
add
adc
inc
in
fs
and
pop
xor
mov
(bad)
movs
outs
jmp
stos
push
out
sub
sub
jnp
mov
sub
jne
xchg
fwait
lds
out
imul
dec
scas
loopne
dec
rcr
out
scas
inc
mov
mov
mov
add
pusha
push
fidivr
emms
add
pop
add
mov
stos
xchg
in
out
scas
sub
ds
fdivp
icebp
push
sbb
push
scas
jmp
shl
xor
sub
mov
ins
xor
push
ins
fcmovu
add
sti
mov
and
dec
push
stc
inc
or
scas
cmp
or
push
out
mov
and
pushf
and
jnp
jl
test
enter
ins
pop
sub
sub
ret
and
mov
xchg
xchg
add
repz
sbb
das
adc
movs
pushf
mov
shl
fcmove
shl
aas
fsubp
pop
pop
sbb
add
(bad)
mov
fldcw
mov
js
bnd
div
xchg
stos
nop
je
lods
jle
ds
mov
sbb
add
push
jl
call
aas
lock
pop
out
fs
hlt
fimul
clc
mov
clc
iret
loopne
cmps
hlt
pop
pop
scas
clc
mov
xchg
lahf
dec
cmp
push
les
and
repnz
mov
mov
and
sbb
add
dec
xor
xchg
push
xor
dec
lock
repz
pop
mov
sti
cmp
sbb
add
movs
or
mov
inc
or
ret
in
pop
sbb
or
add
cli
test
addr16
inc
cdq
xor
push
pop
adc
dec
pushf
sbb
and
loopne
xor
cmp
(bad)
or
sub
in
cmp
jmp
out
pushf
cmp
fsubr
(bad)
aam
hlt
test
cmp
jmp
mul
aad
aad
ins
fdiv
fidiv
xchg
scas
dec
mov
gs
lea
cmc
inc
cmp
adc
inc
lahf
adc
push
push
aad
sbb
shl
(bad)
ds
cmp
add
fadd
push
dec
cmp
pop
les
in
jns
sbb
cmp
inc
popf
cli
xchg
mov
test
mov
es
(bad)
sbb
pop
xor
mov
sti
popf
or
pop
shl
jecxz
add
sar
adc
inc
or
xor
in
xchg
sub
mov
jmp
mov
aam
cs
mov
imul
pop
retf
mov
sar
jmp
add
push
mov
(bad)
xchg
dec
sbb
stos
mov
pusha
add
jp
mov
inc
mov
mov
jns
and
adc
adc
mov
mov
sbb
and
test
sub
add
jns
out
cmp
les
jmp
out
enter
jmp
es
fadd
or
inc
cs
adc
inc
fsub
fcmovne
inc
xor
popa
daa
lahf
jle
cdq
cmps
mov
pop
mov
cdq
out
ins
sahf
jns
sbb
mov
inc
call
add
ret
adc
push
and
js
or
mov
and
mov
cmp
leave
lahf
out
pusha
sar
dec
movs
(bad)
jmp
sbb
mov
popf
jae
mov
push
xor
in
daa
pop
jge
loop
dec
mov
imul
inc
call
jmp
ret
adc
ret
dec
adc
and
cmp
push
dec
ret
add
test
xor
aam
xor
das
cmps
cmp
xchg
aaa
fisubr
scas
push
les
repnz
into
jns
sbb
js
aas
xlat
or
cmp
out
jno
sahf
mov
push
(bad)
pop
call
in
push
dec
das
repz
jne
cmp
fisubr
or
into
dec
fstp
dec
mov
pop
push
out
fiadd
xor
aaa
pop
cmp
mov
(bad)
call
loope
mov
xor
xor
repz
dec
dec
inc
inc
and
out
push
dec
in
retf
out
or
jecxz
pop
shl
test
inc
loop
arpl
cmp
jmp
add
scas
mov
mov
cmps
lahf
scas
cmps
fist
test
pop
shr
lods
aaa
dec
push
and
fwait
in
mov
inc
jnp
xchg
xchg
push
sbb
pop
ins
shr
and
dec
(bad)
xchg
aas
mov
mov
fs
rol
test
pop
cli
dec
les
mov
push
sbb
cld
push
mov
xor
call
scas
dec
stos
dec
je
xchg
and
push
gs
sub
out
mov
not
jo
cmp
movs
cwde
ret
out
inc
in
or
in
(bad)
in
or
dec
sub
repnz
scas
push
add
push
mov
in
dec
mov
cmp
xor
mov
ins
out
add
push
cmc
xor
mov
cwde
jno
cli
scas
sub
lods
or
int
outs
pusha
push
add
dec
lock
ds
adc
add
pop
loope
(bad)
mov
mov
shl
xchg
inc
push
js
jp
cmp
push
xor
add
pop
test
out
xor
pop
dec
and
and
xchg
retf
jo
xchg
sbb
int3
xchg
aad
out
aaa
cmp
add
shl
cmp
fld
adc
mov
inc
jmp
mov
jmp
sbb
cwde
add
aaa
(bad)
les
sbb
push
adc
or
in
cmps
aas
je
adc
pushf
(bad)
(bad)
pop
out
xchg
gs
mov
mov
(bad)
and
add
nop
add
sub
jmp
js
jae
cmp
pop
cvtps2pi
das
sbb
inc
lock
into
outs
add
sbb
stos
xchg
cdq
sbb
sbb
loopne
xchg
call
in
push
mov
and
pop
xor
arpl
mov
ds
and
mov
test
adc
aaa
or
into
jo
xchg
jo
cld
cmps
cmp
mov
pushf
leave
call
push
jo
and
mov
mov
adc
daa
adc
enter
and
in
xchg
cmps
repnz
lahf
add
(bad)
std
fsub
push
jae
inc
add
xchg
or
test
outs
mov
pop
sub
add
sub
add
loope
ret
cmps
and
dec
dec
push
jne
scas
and
jl
cmp
push
arpl
sbb
push
out
cld
dec
lea
enter
out
out
xchg
lahf
xchg
cmp
pop
push
cmp
cmp
mov
add
adc
lods
and
jno
jo
jecxz
xchg
nop
ret
push
dec
lock
mov
xchg
lods
fs
add
shl
js
inc
sbb
inc
mov
xor
jge
sahf
ds
pop
xchg
inc
pop
aad
mov
aad
mov
push
and
adc
adc
cmp
(bad)
mov
jno
push
fdiv
mov
aad
cwde
lods
adc
push
adc
ret
pop
inc
das
retf
clc
ret
stos
nop
ret
adc
mov
sti
xor
cmp
and
imul
rcr
sbb
cdq
pop
mov
test
jb
xor
push
and
je
imul
and
cmc
adc
in
repnz
xchg
cld
push
pop
retf
ret
xchg
xor
add
imul
or
loopne
dec
adc
xor
fild
adc
pop
mov
mov
jo
cs
cmc
sub
lahf
xor
fisubr
mov
push
(bad)
xor
dec
jp
lods
pop
(bad)
and
test
jo
test
inc
or
ins
xor
stc
mov
xor
loope
sahf
sub
push
sbb
push
(bad)
ja
sub
clc
ret
stos
fsubr
adc
fld
ins
movs
add
mov
cmp
cs
adc
mov
(bad)
mov
fcom
sbb
stos
sub
out
sbb
mov
int
xor
icebp
(bad)
into
ss
cli
js
sub
fst
dec
pop
fidiv
mov
sbb
pop
pusha
add
adc
dec
call
dec
fcmovnu
jmp
pusha
stos
lea
scas
repz
mov
bound
rcl
cmp
shl
jnp
pop
dec
push
mov
and
sbb
pop
cmp
fdiv
out
pop
pop
fs
jnp
jmp
mov
mov
fsub
scas
(bad)
call
ds
jge
sub
cwde
and
jae
and
popf
lods
out
cmp
mov
xchg
cmps
jg
xchg
sbb
jp
and
ror
pop
aam
popf
js
add
bound
js
ja
mov
call
mov
in
jl
sub
ds
and
int3
loope
test
sar
lods
inc
sbb
fnsave
push
rol
in
mov
xchg
jns
pop
and
dec
mov
ret
or
adc
pop
cwde
call
shl
and
inc
(bad)
xor
bound
stos
jo
xor
sbb
push
sar
movs
pop
cld
loopne
inc
jle
inc
fadd
adc
inc
pop
pshufw
adc
stos
push
movs
fwait
jmp
xchg
(bad)
fcomp
mov
add
mov
int3
and
push
add
or
xchg
ret
aam
xlat
test
loop
xchg
push
add
dec
jo
add
cmp
adc
and
cdq
cs
cli
nop
cmp
sbb
or
icebp
retf
mov
add
test
add
mov
ret
push
pop
aaa
xchg
sar
inc
xor
inc
xchg
mov
cmp
pusha
cmp
cmp
or
adc
repz
add
stos
aaa
push
cmp
mov
push
and
sbb
mov
cwde
ret
sbb
lea
and
fsub
push
mov
into
inc
xchg
xchg
xor
mov
mov
aas
sub
or
jmp
pusha
cmp
xchg
popf
sub
and
test
jmp
mov
ins
inc
adc
mov
mov
or
scas
adc
add
cmp
pop
xchg
inc
push
inc
adc
add
mov
sub
ror
inc
mov
inc
adc
or
mov
xor
lock
add
cwde
ss
xchg
mov
mov
or
inc
cmp
cmp
xchg
ret
ret
inc
adc
add
nop
add
inc
add
cmp
test
cdq
sbb
mov
adc
inc
adc
cmp
(bad)
inc
sub
lds
and
sub
push
xor
mov
xor
or
or
add
test
cmp
mov
xchg
fst
push
mov
jmp
jo
mov
rcr
lods
mov
mov
xchg
les
mov
jmp
ret
(bad)
repnz
or
and
inc
fwait
or
xor
adc
int3
add
or
repnz
mov
mov
(bad)
sbb
xchg
ret
sub
das
and
inc
dec
arpl
pop
fadd
mov
aas
in
ret
imul
fmul
mov
adc
mov
sbb
dec
sub
ss
adc
push
lods
dec
fwait
in
dec
mov
add
add
add
inc
pop
inc
movs
mov
in
inc
dec
push
shr
adc
jl
fs
pop
fmul
adc
inc
inc
jl
rcr
scas
inc
mov
mov
mov
adc
inc
repz
imul
retf
ins
jmp
and
(bad)
mov
push
xchg
dec
fmul
xor
mov
add
imul
cmp
mov
add
add
and
jne
scas
mov
inc
cmp
inc
loopne
sar
dec
sbb
xchg
cmp
dec
imul
in
pop
push
in
lahf
dec
cmp
mov
and
int
fidiv
sbb
popf
mov
mov
xor
mov
test
mov
lods
mov
movs
inc
pushf
cmp
xchg
nop
shl
mov
inc
add
inc
xchg
pop
pop
and
adc
or
or
into
or
push
cmp
cmp
cld
lds
es
add
add
cmp
test
push
iret
adc
(bad)
jp
inc
and
mov
mov
pusha
pushf
cmps
sub
push
and
adc
cmp
mov
sub
add
stos
mov
sar
rcr
in
inc
movs
mov
lds
in
retf
cld
mov
enter
push
jbe
xchg
xchg
sbb
push
or
xor
retf
js
mov
mov
icebp
xchg
(bad)
mov
stos
push
mov
pop
sub
xchg
xor
dec
es
loop
cdq
jmp
rcl
sbb
and
clc
cmp
mov
push
rol
int
std
fcom
lea
icebp
adc
aad
sbb
pop
cmc
cmp
fmul
push
jp
mov
jnp
sub
in
dec
imul
and
adc
dec
inc
lea
adc
add
xor
xor
test
add
push
mov
add
cmps
fcom
lds
inc
and
stos
dec
or
sbb
add
bound
fwait
xchg
sub
jmp
jae
sahf
fs
xor
sbb
pop
movs
jge
in
aad
fnstcw
lods
dec
retf
stos
xor
dec
and
cmp
xchg
or
and
xor
test
pop
jo
pop
jo
ret
ret
inc
add
fcom
sbb
(bad)
sti
cmp
xor
jae
add
mov
mov
repnz
or
jo
and
lods
lock
add
jno
push
cmp
and
cmp
(bad)
rol
test
aaa
sbb
jge
mov
mov
xchg
inc
fs
pop
jp
fst
fptan
arpl
(bad)
repz
inc
loopne
inc
test
mov
int3
adc
mov
xor
add
add
pop
mov
enter
ins
add
cmp
or
pop
add
pop
pushf
jb
imul
push
test
adc
xchg
(bad)
xor
pop
mov
pop
clc
(bad)
fstp
pop
push
inc
pop
xor
(bad)
fisttp
mov
aaa
sub
and
lods
dec
add
add
add
sbb
rcl
sub
xor
int
fmul
lds
or
mov
daa
call
add
frstor
scas
pusha
add
dec
js
xlat
test
inc
pop
push
lock
aas
sbb
cmp
into
mov
push
jecxz
pusha
movd
push
inc
sbb
(bad)
std
mov
add
add
test
scas
movs
xchg
and
sbb
cmp
ins
jge
adc
add
mov
mov
xlat
cmp
mov
bound
aaa
push
rol
jge
xchg
add
pusha
add
cwde
xor
loop
mov
test
ins
test
lock
dec
leave
cmp
xchg
add
cmp
jmp
and
dec
inc
sbb
jne
or
arpl
(bad)
adc
inc
das
jl
fs
adc
inc
(bad)
adc
mov
rol
popa
(bad)
or
push
clc
add
add
and
pop
add
call
pop
(bad)
(bad)
push
ja
pop
jp
xchg
adc
sub
add
loop
enter
mov
add
mov
test
rcl
jl
test
add
mov
mul
jbe
sar
adc
or
and
inc
cmp
and
inc
mov
mov
sub
sub
adc
in
or
cmc
mov
inc
add
inc
pop
je
gs
xchg
pop
ins
pusha
adc
pop
outs
add
push
sub
add
in
enter
pop
inc
mov
aaa
cmp
or
shr
jmp
pusha
imul
mov
and
inc
in
and
push
dec
inc
xchg
ins
out
adc
int3
frstor
imul
add
(bad)
lods
fild
inc
dec
adc
jbe
daa
pop
(bad)
jbe
xchg
add
mov
sub
loop
or
add
test
and
inc
fld
dec
dec
lock
cs
repz
out
imul
mov
push
adc
fwait
xor
ds
aaa
sub
cmp
add
jo
inc
add
xlat
sbb
mov
pusha
pop
jp
push
movs
xchg
out
(bad)
ins
dec
(bad)
pop
idiv
jle
dec
pop
cmp
push
call
(bad)
ror
add
sub
xchg
imul
jmp
push
imul
ins
add
add
add
fild
mov
test
cmp
aam
mov
out
add
bound
outs
data16
(bad)
rcl
cmp
cmp
mov
outs
enter
jb
retf
psrld
imul
sar
push
(bad)
loope
cmp
pusha
cmp
inc
loopne
push
into
stos
push
call
push
das
cmp
inc
outs
add
mov
adc
loopne
popa
repz
add
mov
inc
dec
adc
mov
shl
sbb
xchg
jmp
dec
movs
jo
pop
cmp
add
es
push
add
mov
daa
push
pop
test
sbb
inc
pop
hlt
mov
sub
pop
test
cmps
push
sub
add
mov
or
cmp
jno
xchg
push
pop
pop
ins
push
jge
xor
lock
add
pop
add
inc
add
xor
add
vpmacssdd
ins
loopne
or
and
adc
cmp
add
jmp
xor
xor
mov
(bad)
popa
(bad)
shl
xchg
sbb
sbb
jno
mov
mov
retf
cs
fptan
aad
and
out
inc
add
mov
sub
bnd
push
pop
clc
repnz
xchg
xor
xor
sub
bound
sub
imul
gs
adc
add
dec
sbb
jno
add
je
jg
inc
sub
push
inc
mov
in
jbe
xor
dec
pop
cmp
xchg
sar
outs
mov
hlt
add
je
mov
dec
add
jne
and
jg
cmc
iret
mov
push
addr16
cmp
or
movs
xchg
jle
add
enter
mov
pop
test
das
mov
xor
jae
pop
jae
xchg
or
into
popw
add
pop
fnstsw
into
popa
imul
scas
pop
add
push
push
idiv
dec
jno
lahf
jno
sub
(bad)
xchg
int3
dec
add
enter
jp
fdiv
ja
sbb
pop
add
pop
cld
jecxz
idiv
add
repnz
in
movs
repnz
sub
imul
mov
pusha
pop
sti
dec
or
test
cmp
rcl
outs
sub
pop
std
cmp
outs
add
jno
jns
popf
jns
pop
test
leave
mov
xchg
sahf
dec
imul
fs
mov
cli
inc
pop
jp
aas
push
sbb
or
stc
pop
repnz
cli
jp
cli
test
mov
sub
imul
imul
iret
jge
pusha
fadd
idiv
lock
(bad)
fs
out
call
fisub
pop
mov
inc
outs
lea
pop
ja
pop
test
das
ja
imul
jmp
ja
dec
add
pop
dec
repz
jg
dec
inc
hlt
out
test
test
aaa
pop
jae
push
cli
cmps
jg
enter
cli
pop
push
ds
add
push
inc
and
inc
or
push
sub
sbb
add
add
dec
mov
mov
fbstp
pop
xor
mov
mov
mov
or
lods
mov
dec
int3
xor
retf
mov
arpl
cs
inc
add
add
xchg
push
jl
rol
sbb
and
ret
cmp
mov
mov
sub
in
push
mov
mov
sub
shr
mov
and
das
loopne
jl
imul
je
call
push
cmp
or
sub
dec
outs
fdiv
mov
jl
push
adc
loope
ret
and
inc
inc
mov
std
or
xor
xor
and
adc
out
popf
ins
add
int3
and
dec
cmps
adc
fwait
test
jmp
inc
popa
add
xchg
cmp
cmp
hlt
popa
int
daa
pop
pop
fdiv
stos
pop
lock
sar
aas
cmp
neg
sub
cwde
gs
pop
addr16
test
push
push
test
mov
clc
ror
jl
push
outs
scas
mov
stc
push
pushf
dec
xor
pop
dec
(bad)
push
push
(bad)
dec
cmp
xchg
sbb
push
push
shr
jne
inc
fimul
push
ja
xchg
adc
pop
mov
cmp
and
push
into
mov
jle
pop
jns
sub
cmp
mov
cmp
add
mov
xchg
test
jl
rol
adc
fs
inc
aam
and
or
test
inc
daa
mov
sub
outs
scas
or
mov
mov
sar
dec
cmp
(bad)
shl
test
mov
and
cmp
cmps
or
clc
rol
pop
mov
inc
sbb
adc
stos
inc
nop
cmp
push
mov
xchg
inc
pop
lods
mov
test
xchg
mov
retf
clc
mov
jb
cwde
xchg
and
push
xor
outs
dec
sbb
or
fs
mov
cmp
inc
jo
inc
sbb
or
xchg
mov
mov
mov
inc
cmp
dec
retf
add
clc
adc
jae
xor
push
nop
jmp
push
mov
pushf
mov
sub
adc
xor
or
sub
lods
test
mov
inc
mov
dec
or
arpl
inc
lods
mov
mov
mov
inc
jnp
inc
ss
and
pusha
add
ret
mov
dec
cmp
sub
mov
das
mov
out
loop
scas
lea
mov
xchg
xchg
jp
out
and
mov
sbb
pusha
sbb
or
jo
mov
jge
sub
rol
and
fst
dec
mov
pusha
shl
retf
leave
adc
inc
test
mov
jmp
add
add
or
push
push
out
dec
aaa
in
rcl
pop
ror
int3
das
mov
xchg
lds
inc
adc
sbb
(bad)
and
push
sbb
enter
xor
cmp
shl
(bad)
neg
jnp
inc
in
jle
loop
enter
xor
retf
dec
push
push
cmp
dec
mov
gs
ins
adc
sbb
addr16
fdivr
pop
or
mov
shl
push
sbb
mov
and
call
(bad)
rol
inc
jmp
xlat
jno
ja
fmul
outs
adc
ror
pop
push
enter
mov
cmp
mov
test
popa
mov
aad
das
sub
idiv
test
stos
and
inc
cmp
movs
lods
push
cmc
nop
push
es
xchg
ds
jge
adc
adc
in
lods
stc
int3
in
repnz
mov
add
aaa
ret
xor
into
(bad)
cmp
dec
jo
icebp
sbb
mov
es
ror
ret
or
pusha
test
push
loope
arpl
outs
xor
sbb
jb
mov
leavew
xchg
adc
sub
mov
inc
sbb
(bad)
cs
mov
push
ins
mov
sahf
gs
add
sub
aad
ds
and
jle
pushf
sbb
call
mov
inc
stos
shr
or
dec
jl
inc
fild
xor
mov
push
lar
and
mov
scas
jo
mov
es
push
push
into
call
xchg
movs
and
test
xchg
inc
adc
and
nop
ret
mov
and
es
jge
and
mov
mov
sub
adc
sar
xchg
mov
push
sbb
sbb
push
add
adc
dec
dec
mov
nop
aam
fdiv
int3
and
cmp
fisub
add
in
fcomi
jns
outs
mov
fwait
push
jmp
hlt
retf
jae
jae
jmp
cmp
ror
cmp
mov
adc
xor
push
stos
lds
repz
or
lock
push
cmp
or
pop
sbb
pop
imul
and
outs
(bad)
sub
and
or
push
test
jo
adc
(bad)
cdq
stos
nop
add
mov
dec
push
xor
ret
sbb
mov
dec
add
mov
and
mov
pop
sub
xchg
push
xlat
fadd
ss
push
mov
aad
loop
(bad)
jmp
push
and
gs
sbb
scas
jbe
sbb
jnp
(bad)
mov
inc
in
bound
les
adc
daa
stos
pop
out
imul
inc
mov
mov
repz
mov
xchg
fadd
retf
fcmovbe
stos
xchg
mov
add
pusha
sbb
cmps
nop
push
add
or
imul
cmc
fdiv
sub
push
dec
or
inc
add
stos
int3
jmp
arpl
xor
sbb
loopne
xor
bound
rol
inc
scas
aaa
xlat
mov
mov
sub
int
add
cmp
aam
hlt
and
dec
imul
mov
fdiv
and
enter
sub
adc
or
xor
ror
aam
(bad)
xor
mov
fadd
mov
pushf
xchg
xchg
xchg
movs
sub
ror
in
add
add
mov
xor
add
or
or
xchg
imul
and
add
cmp
test
pop
add
leave
js
sub
pop
cwde
add
cmp
or
retf
adc
fs
repz
mov
sub
mov
int
push
sbb
mov
outs
ins
and
sbb
pop
sub
xchg
sbb
jb
inc
loop
fidiv
or
jecxz
in
(bad)
dec
sbb
and
mov
dec
or
xchg
nop
mov
push
dec
sub
sub
push
ret
mov
ins
cdq
retf
in
xor
pop
nop
jmp
bnd
pop
pusha
jo
and
fcomp
mov
repnz
sub
pop
int3
cmp
mov
push
fwait
iret
jl
lds
jle
lds
(bad)
and
jl
inc
sbb
add
dec
rol
pop
fs
adc
sbb
push
sti
push
test
mov
or
mov
(bad)
cmps
mov
add
pusha
loop
test
sbb
fsubrp
sbb
ror
pusha
test
leave
mov
nop
and
pop
dec
sub
inc
scas
mov
jl
sbb
adc
pop
or
push
mov
or
out
outs
in
cmp
cmp
scas
lahf
dec
add
adc
mov
int
pop
add
bound
jnp
cwde
dec
lahf
pop
es
inc
add
add
xor
fstp
ret
jae
sbb
test
outs
hlt
out
sub
retf
or
mov
lock
add
dec
inc
xor
adc
add
add
add
adc
cwde
in
adc
inc
idiv
aaa
not
jp
or
jmp
and
adc
add
pop
in
inc
inc
mov
test
pushf
sub
dec
les
fild
adc
xor
ins
mov
js
sahf
inc
add
sahf
(bad)
pop
lahf
jmp
int3
or
lock
rol
push
jl
push
pop
fcmovnbe
push
mov
sbb
cmp
std
mov
jmp
inc
and
in
jmp
ficom
rol
adc
popa
add
dec
sbb
xchg
add
mov
inc
sbb
inc
sbb
repz
sbb
and
aad
mov
jno
fimul
push
inc
and
inc
mov
and
stc
jno
bound
mov
sbb
or
lods
fs
pop
and
ins
shl
enter
inc
xchg
jno
or
add
xor
mov
adc
ror
add
cdq
inc
fcomp
add
cmp
pop
mul
into
mov
mov
jno
loopne
js
pop
xchg
adc
and
loop
sub
sub
jns
loop
sub
add
mov
adc
adc
pop
sub
adc
pop
xor
push
dec
inc
sub
jmp
push
rcr
xor
push
sbb
sbb
mov
push
dec
xor
or
sahf
push
inc
rol
mov
es
mov
and
bound
jecxz
pushf
ret
sbb
add
jno
enter
xchg
mov
stos
and
out
dec
imul
mov
out
(bad)
cwde
cdq
out
pusha
sub
bound
movs
push
pop
out
bound
push
in
push
lahf
xor
movs
inc
rcl
sbb
pop
mov
unpcklps
jb
adc
aam
lods
nop
pop
inc
outs
movs
or
inc
bound
and
xchg
and
fimul
adc
bound
add
mov
int3
test
popf
dec
inc
dec
(bad)
jecxz
retf
mov
add
jp
push
push
movs
pop
call
and
movs
add
sub
push
das
rol
add
or
jmp
popa
adc
sbb
inc
jbe
pop
cmp
jl
in
in
nop
daa
or
mov
mov
sub
cmp
pop
pushf
cdq
std
jo
inc
add
jne
mov
push
fwait
cmc
dec
enter
sbb
pop
and
inc
stc
inc
push
sahf
pusha
fs
mov
into
sbb
inc
pop
cli
and
rol
stc
jmp
push
call
mov
stos
xchg
nop
pop
xchg
xchg
add
ret
add
push
sbb
push
call
dec
adc
dec
call
enter
push
test
jae
inc
sub
rol
ret
push
xlat
inc
jne
sub
loope
mov
jbe
daa
mov
add
lods
call
fsub
scas
pushf
daa
dec
mov
ins
push
xor
cmps
jl
pop
jmp
cmp
scas
and
jg
inc
sub
aas
add
sub
movs
cdq
xor
jo
leave
add
leave
sbb
pop
fwait
pop
pusha
push
or
cwde
add
or
rcr
mov
jmp
inc
dec
dec
push
mov
and
je
data16
ror
arpl
(bad)
call
xchg
loop
push
and
push
jno
sub
push
sub
es
(bad)
adc
xchg
dec
inc
fcmovne
dec
fstp
scas
jge
mov
out
test
jmp
xchg
mov
and
push
int
cmp
outs
or
rol
inc
sub
into
sub
es
daa
and
jnp
in
adc
sbb
sub
and
inc
jg
imul
movs
push
call
es
add
add
mov
inc
push
enter
xchg
sub
aam
jae
jmp
cdq
adc
test
or
lea
add
das
sbb
xadd
clc
jmp
inc
push
sub
mov
lahf
dec
and
mov
ret
ret
inc
push
fisub
sbb
(bad)
jbe
xchg
ret
or
xchg
push
push
pushf
in
push
push
or
rcl
inc
push
add
ret
add
cmps
push
outs
aam
adc
sbb
pushf
push
pop
sub
inc
shl
xchg
retf
in
mov
test
pop
mov
ret
stos
adc
and
fisub
addr16
(bad)
jb
scas
add
or
lods
or
add
mov
or
add
inc
rcl
or
push
sbb
or
sbb
dec
mov
imul
or
sub
(bad)
cli
call
lods
aad
pop
and
adc
sub
test
push
add
shl
(bad)
mov
test
add
sub
aam
out
cli
out
sbb
lods
pop
imul
ret
mov
adc
call
data16
imul
in
add
cld
add
sub
in
lahf
push
aam
ror
xchg
out
sub
mov
bound
sub
test
cmc
scas
scas
icebp
dec
in
and
or
inc
pop
and
out
jle
pop
mov
movs
cwde
add
add
sub
push
pop
push
aaa
pop
xor
inc
or
jb
adc
adc
xor
add
das
and
and
pop
xor
sub
dec
dec
ret
int3
cmp
sub
xor
pop
add
dec
add
mov
ret
sbb
js
cmps
retf
push
loopne
push
loopne
stos
sub
je
adc
icebp
add
inc
fst
add
add
dec
inc
jne
push
pop
pop
(bad)
jmp
rol
add
mov
sbb
lock
or
push
push
std
test
int3
jo
jmp
sti
ds
les
xcrypt-ofb
cmps
scas
adc
out
sbb
mov
push
inc
or
sub
sahf
ins
(bad)
cli
scas
cdq
add
inc
push
pop
js
adc
inc
fstp
adc
jmp
xor
fadd
cmps
ror
dec
or
jmp
or
sbb
jo
shl
sub
inc
and
icebp
js
shl
and
out
scas
cmp
sti
push
mov
loopne
and
lock
inc
and
repnz
and
jb
pop
repnz
inc
(bad)
xor
into
add
sub
and
or
mov
jae
sub
xchg
test
repz
mov
popf
sbb
(bad)
fwait
and
repnz
icebp
repz
rcl
sahf
xor
push
push
movs
and
adc
out
icebp
or
jo
f2xm1
or
add
mov
(bad)
ret
rcr
adc
jae
enter
repnz
dec
sbb
retf
test
test
add
cmp
adc
push
les
icebp
inc
sbb
lahf
bound
mov
pop
and
sbb
test
mov
hlt
inc
and
pop
ret
or
push
sar
je
inc
mov
mov
xor
pop
test
call
add
xor
je
lahf
in
cmp
dec
(bad)
and
test
mov
cmp
add
add
inc
ins
inc
int3
out
lods
pop
fadd
daa
jo
push
sbb
je
jmp
(bad)
stos
sbb
sbb
data16
push
mov
mov
gs
ret
add
je
or
mov
cmp
pop
mov
mov
es
pop
loopne
and
pop
shl
pop
repz
ja
pop
add
stos
pop
icebp
imul
loopne
arpl
test
fs
ins
mov
scas
xor
fld
fs
dec
pop
jb
mov
add
jecxz
fldenv
inc
sub
sub
mov
push
sub
xor
mov
inc
sub
ins
pop
mov
jmp
sbb
rcr
add
add
jo
mov
sbb
adc
jae
aaa
retf
mov
push
sbb
add
xor
add
ins
push
(bad)
mov
in
inc
aas
mov
jne
ja
leave
fsubr
pop
nop
inc
or
gs
add
push
jle
inc
xor
and
xor
jnp
es
mov
and
cmovo
adc
dec
in
jo
aaa
dec
addr16
das
jb
mov
mov
cmc
and
inc
adc
and
inc
rcl
fs
js
cmp
sub
xor
cld
jecxz
xchg
jno
out
fnsave
or
add
pop
nop
retf
fld
sub
or
fdiv
daa
cmp
cmps
outs
sbb
xchg
add
and
outs
ret
push
sub
adc
add
test
or
(bad)
iret
add
and
and
sbb
popf
ror
lahf
daa
jp
mov
scas
stc
push
mov
and
sub
rcr
inc
int3
repnz
gs
test
pop
mov
pop
or
loopne
(bad)
icebp
popf
int
jb
add
add
ret
call
fild
mov
inc
push
inc
(bad)
out
data16
xchg
push
test
retf
gs
and
stos
mov
ins
test
movs
add
dec
add
fsqrt
sbb
jp
addr16
bswap
push
sbb
pop
ja
mov
lods
push
fs
leave
jb
sbb
pop
lock
xor
jnp
push
jp
outs
push
stos
jb
inc
dec
fild
sbb
xor
xchg
sti
gs
xor
xchg
inc
scas
and
add
and
(bad)
mov
mov
es
sbb
rol
lods
arpl
inc
faddp
dec
rcl
pop
out
ret
push
ret
imul
push
dec
jb
loopne
mov
mov
enter
jg
sahf
xchg
sti
stc
lahf
xchg
dec
add
cmp
fistp
cmp
leave
cmp
fwait
sti
mov
pop
mov
test
xor
and
pop
push
stc
fild
push
arpl
jmp
xchg
xchg
or
push
push
cmp
jge
jb
addr16
jae
cmp
ror
ja
imul
inc
lock
repz
dec
cmp
idiv
jl
cmp
mov
into
push
ds
pop
cdq
es
out
das
les
aaa
xor
inc
sub
stos
adc
push
cwde
ds
add
(bad)
jnp
mov
adc
sub
pop
rol
adc
test
xchg
sub
dec
test
hlt
add
ret
xchg
xor
add
sub
stc
popa
repnz
sbb
cmp
jns
clc
icebp
test
mov
xchg
setg
cmp
cmc
stos
xchg
sub
retf
(bad)
lods
call
jno
mov
sbb
repz
lahf
dec
rol
cmps
dec
mov
ins
push
in
pop
xor
inc
push
add
pop
shr
jns
add
je
rcl
xchg
sub
pop
cdq
jb
int
xor
cld
sbb
mov
movs
pop
mov
add
rol
std
cli
add
cmp
mov
mov
mov
pop
and
mov
inc
nop
and
mov
mov
out
sbb
test
jnp
repnz
cmp
xchg
xor
cmps
dec
pop
mov
outs
pop
mov
lods
mov
mov
inc
cs
add
jo
pop
fsubr
sbb
push
add
mov
adc
jnp
xor
mov
fld
inc
hlt
sub
aas
ret
xchg
pop
cli
shl
pop
ret
pusha
mov
lods
pop
add
inc
add
add
adc
loope
sub
mov
xchg
cwde
pop
jp
mov
push
call
cmp
arpl
gs
xchg
dec
dec
cmp
sbb
cli
in
jecxz
pushf
jo
popa
cmps
cwde
pop
ins
icebp
out
mov
rol
hlt
in
pop
push
mov
int3
or
mov
rcr
ret
jecxz
ret
dec
and
push
mov
xor
dec
pushf
jno
and
call
sub
sbb
sub
or
pop
and
xchg
test
dec
dec
loop
cmp
mov
mov
and
dec
pop
or
(bad)
sub
adc
adc
dec
push
cmp
dec
movs
call
out
aaa
jmp
daa
fwait
bound
ins
mov
out
pop
repnz
xchg
push
add
call
sar
add
adc
adc
dec
sbb
jecxz
inc
dec
add
test
jecxz
dec
push
out
add
xchg
dec
inc
test
and
mov
xlat
pop
jg
jb
xchg
pushf
cld
rcr
stos
repnz
or
xor
movs
or
xchg
cmps
mov
push
mov
stos
cmp
cmc
sub
xor
retf
inc
pusha
hlt
xor
push
in
sub
xchg
fisttp
call
inc
sub
nop
cmp
add
lea
push
dec
and
cs
mov
cmc
mov
nop
fs
cmp
popf
jl
cmp
xor
jmp
jp
mov
ds
xchg
ss
out
stos
sbb
test
cli
push
jge
rcl
mov
and
rol
jnp
xor
mov
cdq
gs
mov
push
fcom
mov
aas
and
js
aas
xor
pop
mov
adc
lea
pop
call
test
push
pop
add
nop
xchg
jge
dec
leave
sub
mov
add
sbb
or
popa
cmp
push
imul
push
jmp
cmc
cmp
adc
retf
fwait
mov
mov
sbb
dec
dec
aad
ja
lods
test
les
pop
xor
mov
jmp
loope
jg
push
jp
aam
hlt
pushf
xchg
ret
dec
ins
push
jae
(bad)
les
mov
jne
jnp
dec
inc
and
jl
jmp
loop
add
test
add
mov
cmp
xor
add
add
xor
add
dec
nop
inc
inc
inc
add
push
sub
inc
pop
fst
shr
pusha
fwait
call
daa
adc
jmp
dec
push
sbb
adc
pop
cmp
ins
adc
mov
outs
cmp
mov
xrelease
sbb
hlt
xchg
or
in
or
adc
xchg
sub
movs
daa
push
add
mov
xchg
and
movs
and
dec
mov
sbb
or
mov
ss
inc
inc
cmp
xchg
sub
daa
daa
fcom
push
push
addr16
psubsw
mov
pop
and
adc
xor
inc
cmovs
ror
inc
outs
adc
je
movs
add
rol
xor
xchg
xchg
out
(bad)
clc
enter
xor
punpckhwd
inc
sbb
and
out
sbb
push
and
sub
inc
xor
adc
sbb
pop
sub
out
movs
adc
inc
repz
loopne
sbb
call
cmp
les
out
jmp
adc
mov
jae
jmp
adc
rep
cmps
mov
and
or
sub
adc
lahf
cmp
sub
stos
ror
xchg
iret
xchg
and
inc
dec
xchg
inc
mov
adc
xchg
lods
sbb
loopne
adc
xor
dec
stc
sub
cdq
ret
add
add
add
jmp
inc
popa
or
cmp
jmp
ror
push
or
sar
mov
mov
ror
pushf
loopne
and
pop
ret
les
adc
mov
inc
mov
and
push
into
push
xor
xchg
adc
test
add
jbe
pusha
sub
bound
in
push
mov
pop
into
cmp
bound
add
adc
xchg
stos
inc
ror
push
pop
inc
cmp
test
addr16
pop
retf
cli
pop
ror
in
adc
iret
movs
or
ss
cmp
cwde
sbb
out
ss
adc
nop
add
adc
pusha
adc
imul
ds
push
test
daa
mov
xlat
and
sub
mov
add
add
rcr
and
sub
aaa
cdq
inc
sub
inc
cld
(bad)
(bad)
mov
add
add
adc
stos
push
(bad)
(bad)
idiv
imul
dec
sahf
lds
loope
mov
lock
test
cwde
clc
stos
and
sbb
and
jmp
mov
mov
inc
mov
inc
rol
xchg
adc
fist
pop
jmp
in
or
aaa
dec
inc
push
dec
outs
repnz
sub
pop
pop
push
(bad)
jns
fstp
in
dec
push
cmp
dec
sbb
jl
xor
int3
ds
test
mov
out
fist
rcl
out
dec
fadd
pop
mov
pushf
cld
pop
aad
ins
add
cld
xor
das
inc
fdivp
jle
mov
and
xchg
sahf
je
addr16
rcr
imul
xor
pop
jp
adc
sub
lock
ror
adc
mov
jp
mov
pop
ret
add
jne
repz
ins
cli
imul
push
test
les
popa
ins
inc
mov
iret
les
sahf
das
inc
lds
cmp
inc
or
mov
mov
mov
imul
cs
ret
dec
call
es
neg
or
(bad)
mov
mov
fistp
iret
aad
sbb
xchg
mov
mov
sbb
out
pop
fiadd
jmp
ror
js
ret
fdivp
push
icebp
pop
retf
mov
pusha
dec
inc
add
js
icebp
and
jns
jl
inc
sub
mov
shl
ret
in
iret
inc
push
xchg
jge
sub
xchg
jbe
xchg
add
popf
sub
adc
rol
xor
mov
in
add
pop
xor
or
add
mov
add
and
pop
push
lahf
cmp
into
clc
xchg
stos
mov
cmp
cmp
xor
test
rol
adc
mov
and
arpl
psubsw
jnp
sub
inc
pcmpgtw
add
mov
loopne
movs
mov
add
pop
les
adc
add
loope
xor
rol
nop
repz
repz
lds
and
xchg
data16
add
mov
sub
mov
pop
(bad)
cmc
mov
ret
sbb
clc
inc
or
in
ror
adc
scas
aam
outs
enter
bound
push
mov
fisubr
stc
fimul
mov
mov
pusha
add
movs
and
mov
add
add
xor
add
add
cld
into
paddw
add
xor
fs
movs
loop
add
scas
(bad)
call
or
jl
(bad)
mov
(bad)
adc
mov
sbb
loope
pusha
popa
daa
into
and
sbb
gs
daa
ret
push
inc
adc
dec
cmp
adc
int3
test
call
inc
movlps
jbe
add
dec
enter
pop
add
mov
outs
push
fisub
lods
lods
xchg
scas
js
or
add
and
jmp
movs
add
lock
or
cld
out
cs
mov
or
or
add
mov
adc
retf
jmp
imul
shl
inc
sbb
loope
bound
out
pusha
repz
in
inc
add
sub
call
mov
lds
and
sub
adc
mov
ror
(bad)
push
push
inc
adc
sub
xchg
sub
stos
xor
clts
xchg
push
push
rol
outs
fs
push
jle
xor
iret
add
int3
das
or
mov
outs
or
jno
int3
shl
and
add
in
ins
sbb
adc
xor
aam
sbb
adc
enter
add
std
and
add
movntps
iret
hlt
or
in
sub
in
sub
mov
adc
outs
add
add
adc
(bad)
mov
(bad)
push
and
and
pop
aas
inc
xor
mov
cmp
xchg
dec
out
and
jnp
adc
xor
inc
jb
or
or
push
xor
add
add
movs
loope
mov
std
mov
sbb
nop
adc
ss
cmp
add
and
add
out
push
and
sub
adc
inc
movnti
add
sub
pop
mov
add
cmc
clc
mov
cmp
cmp
adc
out
test
pusha
adc
test
add
xchg
push
ins
nop
jmp
or
arpl
sub
xchg
mov
push
and
(bad)
xor
jae
xor
js
or
or
adc
xor
xor
es
add
repz
in
xor
add
add
rol
repz
pushf
ret
inc
aaa
inc
push
add
xchg
adc
xor
repz
inc
xor
cwde
mov
retf
mov
sub
ret
xor
jp
jmp
adc
xchg
stos
shr
stos
sti
and
push
add
inc
cmp
mov
pop
lds
loopne
xlat
xor
pop
inc
add
adc
sbb
push
mov
pop
popa
sbb
setbe
aaa
mov
cmp
retf
dec
and
(bad)
xor
adc
loope
sub
and
leave
ror
xchg
bound
sub
stos
or
dec
mov
push
adc
jmp
sub
pop
mov
add
cmp
adc
dec
or
dec
addr16
xchg
(bad)
retf
mov
mov
ret
ds
and
stos
adc
jecxz
or
ds
aas
cmps
popa
pop
jbe
aas
(bad)
mov
dec
add
xor
adc
add
aam
int
push
movs
and
fs
sbb
mov
fmul
pusha
or
pop
pop
nop
inc
xor
aaa
xor
push
and
jle
push
push
das
call
push
das
xor
or
and
xchg
add
or
push
jne
dec
imul
mov
aaa
xchg
arpl
mov
inc
jbe
ss
add
gs
adc
aas
lahf
jne
movs
cmc
dec
push
mov
loope
es
add
adc
or
test
pop
inc
cmps
xor
in
mov
or
sub
out
loop
shl
jbe
out
dec
adc
push
das
cmp
adc
aam
stos
inc
pop
push
push
popa
retf
rol
inc
inc
dec
and
push
sar
push
daa
outs
mov
fs
or
push
jo
push
jo
pusha
fcom
pop
or
fs
xor
pop
push
jb
ss
ja
mov
sbb
addr16
inc
adc
(bad)
mov
addr16
aas
xor
inc
inc
pop
inc
inc
adc
adc
adc
imul
popaw
(bad)
mov
ja
add
fldcw
mov
ins
mov
add
adc
fs
mov
repnz
dec
and
cmp
xchg
add
pusha
push
cmps
dec
stc
jb
in
xchg
jl
push
jo
sub
xor
inc
cld
xchg
mul
daa
aaa
mov
ss
jae
rcr
mov
inc
push
je
mov
adc
mov
gs
adc
add
fs
dec
pusha
ja
pop
pop
jg
sub
sbb
js
add
or
repz
rcr
out
inc
sbb
cmp
jnp
adc
aad
xchg
inc
pop
not
lods
je
jl
fsub
and
ror
repz
jle
cwde
mov
ds
ja
cwde
mov
stos
mov
loopne
or
pusha
je
sbb
retf
push
rol
out
add
inc
pop
sbb
imul
adc
mov
sub
push
pop
adc
add
popa
into
cmp
pop
sbb
jmp
xchg
push
jns
clc
test
das
stos
add
test
jno
imul
and
adc
fcom
add
ins
in
dec
cdq
dec
pop
mov
mov
add
cmps
pop
xchg
(bad)
mov
mov
pop
or
mov
lea
sbb
and
cmp
js
lock
jbe
js
cmc
jecxz
out
nop
out
mov
mov
call
pop
sbb
das
mov
xchg
sub
and
xor
ja
xchg
pop
or
fstp
pusha
fdivr
add
xchg
mov
xchg
(bad)
cwde
xchg
or
push
pushf
cwde
add
push
dec
addr16
mov
loopne
push
sbb
clc
lock
pop
pusha
inc
and
cwde
cmp
sbb
adc
mov
fstp
pushf
sti
fadd
cld
js
scas
jns
push
sub
cmp
test
add
push
inc
loop
push
inc
das
or
arpl
jge
call
push
bound
mov
call
dec
jmp
mov
and
sbb
inc
sbb
pop
jns
cmpxchg
int3
mov
sub
call
dec
pop
cli
dec
and
dec
in
add
or
xchg
popa
xchg
xchg
pop
das
je
adc
mov
dec
sub
mov
popa
xlat
xchg
test
test
jbe
xor
xor
paddq
or
rol
ss
dec
test
mov
sbb
jp
icebp
add
lock
in
outs
pop
dec
inc
dec
fisttp
xlat
inc
push
(bad)
sbb
fdivr
xchg
xor
arpl
int3
sbb
and
dec
mov
sbb
pop
mov
xchg
inc
push
push
push
sub
mov
cmp
xchg
or
mov
mov
mov
call
mov
or
inc
dec
leave
popa
mov
mov
and
jecxz
pop
add
dec
inc
aaa
fsubrp
jne
jne
inc
add
aam
sahf
inc
daa
mov
in
loopne
sar
out
cmc
xchg
jmp
xchg
sar
scas
mov
jb
mov
mov
out
sahf
xchg
cmp
inc
sub
ja
mov
cmp
mov
(bad)
dec
sbb
jnp
lods
mov
arpl
or
leave
or
or
push
xchg
xor
fs
test
nop
push
sub
dec
sub
sbb
bound
imul
push
sub
movs
sbb
cmps
xchg
push
pand
loopne
pop
fsub
call
dec
repz
pop
shl
jge
sbb
cmp
enter
jns
or
leave
cmps
fcomp
aad
sub
popf
cmp
dec
mul
mov
mov
adc
cmp
ins
mov
sbb
in
int3
mov
ret
loope
call
xchg
nop
lock
fwait
pushf
sbb
sbb
mov
rcl
inc
cmp
adc
or
pusha
add
pop
rcl
inc
mov
cmp
mov
pop
sbb
pop
mov
loopne
pop
inc
add
hlt
add
je
push
pop
popf
shl
add
add
mov
pop
adc
movs
(bad)
ja
mov
push
xlat
inc
fcomp
loopne
xlat
and
scas
cmp
repnz
mov
pop
lock
add
pusha
add
cli
adc
jecxz
adc
or
shr
push
push
pop
stos
cmps
cli
xor
ds
out
arpl
shr
outs
rol
retf
xlat
or
imul
aaa
repz
rol
mov
pop
rcr
call
ss
xchg
(bad)
in
sub
mov
or
cmp
test
imul
pop
in
mov
in
sub
and
lds
push
adc
clc
adc
pusha
pop
sub
in
pop
jnp
sbb
push
cmp
push
pop
pop
mov
and
jno
pop
cmp
leave
cmp
and
xchg
jl
out
mov
loop
jecxz
push
shl
push
fimul
cwde
es
add
and
adc
sub
fucomp
cmps
ins
jmp
sahf
int
out
adc
lods
add
jo
or
push
imul
mov
mov
adc
jle
inc
aas
or
add
fsubr
mov
aam
ror
sbb
or
lock
dec
xor
fwait
aad
ins
out
(bad)
clc
rcr
aas
mov
mov
dec
dec
das
cmc
aaa
fsub
push
push
mov
call
outs
add
jbe
push
xor
mov
or
push
or
cs
les
mov
arpl
sti
sbb
mov
leave
dec
popa
jmp
(bad)
movs
cmp
inc
lea
sub
cmps
mov
mov
add
push
or
push
sub
or
shr
mov
lds
push
scas
jp
lock
and
shr
jb
cmps
dec
(bad)
dec
jmp
pop
sub
rol
mov
push
inc
add
loope
push
dec
xchg
pop
mov
test
xchg
mov
sar
jmp
lods
cwde
push
cmp
lds
inc
or
xchg
push
sbb
out
into
fdiv
mov
inc
fiadd
and
movs
int3
push
xor
dec
add
add
call
sbb
cmp
add
cmps
push
test
stos
push
or
mov
or
addr16
dec
jmp
in
loop
sti
test
jle
add
loope
pusha
xor
jbe
or
imul
sbb
ret
test
push
push
mov
or
(bad)
inc
mov
xchg
fwait
outs
sbb
test
aaa
fiadd
int
ret
xchg
add
and
in
jo
adc
sub
aaa
inc
nop
inc
pop
mov
mov
mov
xlat
push
jnp
mov
leave
in
pop
mov
xchg
in
pop
xchg
dec
xchg
fistp
fucom
fistp
or
pusha
or
adc
pushf
popa
xchg
pop
jo
pop
adc
js
imul
movs
jge
pop
sub
sahf
push
bound
pop
leave
xchg
or
sub
(bad)
shr
adc
sub
or
call
add
xor
cli
sbb
pop
mov
inc
gs
push
pop
aad
xchg
pusha
inc
in
push
pop
jge
es
fs
add
arpl
add
mov
fwait
ins
(bad)
pushf
ja
jmp
sub
dec
jp
mov
xchg
pop
and
pop
jbe
xchg
mov
stc
mov
push
fwait
cmps
mov
jmp
mov
mov
(bad)
adc
or
test
dec
and
jns
push
push
cs
fidivr
ds
retf
sti
and
add
popa
test
mov
mov
inc
mov
shl
and
adc
pop
mov
sub
popw
pop
lea
mov
cli
jb
out
mov
mov
xor
outs
jnp
and
mov
and
int
add
cmp
add
(bad)
push
outs
fdiv
(bad)
sub
leave
(bad)
sahf
in
sahf
retf
mov
cwde
cmp
pop
add
inc
das
ins
mov
jno
sub
mov
ror
mov
mov
pop
push
fwait
pop
call
scas
dec
pop
ins
int
xlat
push
jnp
sub
xchg
in
loop
addr16
rcr
jo
mov
fld
dec
test
cmp
mov
adc
adc
lds
xor
cmp
push
jmp
pop
jle
test
push
add
ret
mov
lahf
xor
cdq
adc
loopne
mov
fisttp
sbb
mov
pop
inc
inc
mov
pop
aad
xlat
mov
mov
loope
push
add
push
or
push
xor
int
imul
inc
sahf
test
scas
popa
cmp
dec
cwde
or
mov
dec
mov
cld
jns
sub
push
jnp
add
sub
cli
add
shl
xchg
add
add
xor
add
inc
add
rol
es
enter
cmps
stos
arpl
jbe
xchg
or
in
jl
fiadd
or
jl
imul
dec
xor
inc
adc
ins
sbb
pop
mov
sbb
push
or
dec
cmp
push
adc
jo
rcl
pop
adc
es
cwde
pushf
movs
cmp
push
jb
mov
and
or
mov
inc
sbb
mov
xor
leave
pop
fs
sbb
mov
adc
cmps
sbb
call
ja
leave
sbb
fcomip
jno
pop
sbb
push
je
(bad)
in
inc
lods
imul
cmp
iret
push
lea
xchg
cdq
aam
sbb
xchg
xchg
cwde
aas
xchg
lods
(bad)
jge
in
push
out
xor
jno
dec
push
clc
fsubr
fwait
mov
push
rcr
data16
dec
push
lock
inc
call
or
pusha
add
jno
xor
add
push
adc
adc
icebp
sub
and
pushf
cmps
in
or
sbb
xchg
mov
xchg
xchg
pushf
popa
or
mov
rcr
pop
pop
mov
jns
cmc
inc
jmp
mov
(bad)
js
add
retf
and
test
sbb
xchg
cmp
and
sub
mov
movs
popf
mov
pusha
or
add
inc
adc
or
ret
jae
dec
or
aaa
test
popa
fsubr
push
fiadd
les
cdq
push
xchg
mov
pop
inc
jae
push
xchg
retf
adc
loopne
scas
jmp
call
dec
and
cwde
pop
add
or
inc
mov
or
and
daa
adc
adc
mov
lods
lods
out
sbb
icebp
inc
enter
into
rol
jecxz
inc
pop
fimul
and
test
add
inc
ror
add
mov
inc
test
jno
mov
lock
mov
dec
or
lahf
pop
xor
(bad)
push
je
and
dec
mov
or
or
sbb
or
and
push
(bad)
retf
mov
sbb
jl
repnz
int
mov
or
(bad)
or
add
das
or
sbb
mov
inc
dec
inc
push
out
ja
push
xor
jns
xor
imul
pop
pop
push
mov
les
out
add
dec
pop
add
sbb
sahf
mov
(bad)
out
pushf
mov
mov
test
ins
adc
dec
pop
sbb
mov
mov
(bad)
adc
and
int
push
inc
sbb
add
dec
add
inc
adc
loope
sub
cmp
sbb
icebp
test
lods
adc
add
dec
sub
sub
sbb
xor
call
jnp
arpl
sahf
je
cmp
jns
mov
mov
push
cmc
ss
and
sbb
pop
out
pop
xor
xchg
mov
sti
mov
sub
or
or
mov
(bad)
xor
push
or
add
in
js
cmp
push
push
or
adc
or
fcmovnu
int3
sbb
je
cmp
cmc
lods
test
dec
iret
push
cmps
ins
and
push
inc
and
mov
in
and
inc
or
cmc
test
adc
cmps
sub
or
aaa
dec
lds
pop
pop
and
sti
sahf
cmps
mov
mov
repz
and
xor
js
xlat
in
pop
or
inc
mov
mov
and
outs
popf
pop
push
add
cmp
(bad)
mov
sbb
je
inc
jnp
outs
lock
call
push
jne
push
sbb
js
mov
pop
test
adc
jbe
stos
jle
sub
add
xchg
(bad)
mul
sahf
shr
xlat
out
lock
retf
push
jecxz
mov
and
add
adc
cmps
push
test
add
jae
push
and
inc
dec
xchg
pushf
mov
jmp
jmp
mov
jo
sub
loopne
push
cmc
pusha
dec
mov
or
mov
in
out
jg
sbb
(bad)
cmp
out
icebp
je
mov
lds
fs
sub
xchg
adc
mov
dec
xchg
mov
push
sar
jne
push
jne
xchg
aas
popf
ja
loop
and
addr16
add
xlat
add
cmp
jg
sbb
ins
cli
xlat
ins
mov
xor
inc
inc
add
jl
cmps
inc
dec
add
cli
loop
cli
or
fs
jbe
repz
inc
xchg
xchg
aaa
cmp
ja
sbb
pop
adc
cmp
aas
xor
push
dec
popa
aaa
imul
mov
cmp
xor
ret
xchg
push
arpl
jg
push
or
xchg
push
push
cmp
inc
call
js
add
mov
mov
test
shr
sbb
js
mov
and
jbe
xor
and
idiv
inc
inc
lock
push
or
inc
adc
adc
mov
inc
pop
inc
xor
sub
inc
sub
cmp
outs
xor
mov
imul
jns
pop
cmp
and
or
sub
cmp
jbe
stos
call
and
pop
sbb
add
push
jecxz
pslld
mul
cli
or
(bad)
clc
(bad)
mov
mov
(bad)
ret
mov
dec
js
adc
adc
test
(bad)
(bad)
mov
cmp
inc
xchg
xchg
data16
pop
xlat
mov
(bad)
je
test
jo
mov
adc
cmps
popa
inc
nop
add
mov
rol
clc
mov
add
nop
mov
cmp
mov
sbb
cmp
add
xchg
sbb
jl
pusha
jno
xchg
pop
sbb
sub
(bad)
jmp
xchg
and
and
add
push
test
jp
ja
mov
add
push
dec
and
add
push
ins
cmp
pmaddwd
stc
or
pop
push
push
xchg
icebp
div
sbb
xchg
dec
cmps
fs
mov
cmps
js
add
nop
aam
adc
xchg
cmp
jmp
out
mov
sub
adc
xchg
jns
aam
push
loopne
dec
bound
sub
push
pop
sub
gs
add
cwde
shr
lock
mov
dec
int
cdq
int
adc
cwde
fwait
cmps
imul
adc
mul
xor
cwde
push
imul
mov
test
inc
sbb
xchg
or
jg
and
add
pop
pop
xchg
jae
jno
xlat
add
adc
test
dec
and
ror
add
and
or
jp
inc
xlat
mov
adc
(bad)
cdq
fs
neg
test
sub
push
call
push
mov
rol
popa
nop
or
push
mov
fwait
cmc
jmp
imul
or
stc
pop
sub
test
adc
mov
stc
cwde
push
jmp
adc
and
movs
enter
sub
cli
xor
sahf
jae
xor
add
pop
xor
jb
mov
cdq
or
or
mov
inc
cmp
mov
mov
sub
test
mov
test
sbb
mov
cdq
shr
xchg
retf
out
pop
push
packuswb
test
aas
xor
xor
sub
pop
jno
mov
call
xor
jnp
movs
add
xchg
rcr
clc
cmps
les
xor
lods
retf
nop
call
adc
test
pop
dec
sbb
or
cmp
rol
xor
cmps
mov
or
mov
push
adc
sahf
xor
mov
call
xchg
mov
dec
enter
jmp
scas
repz
and
jnp
ja
and
adc
jle
mov
stos
imul
or
push
mov
lods
push
push
or
jmp
sub
rcr
push
push
adc
jo
in
pop
movs
out
cli
cmps
xchg
sbb
loope
cdq
mov
xchg
test
cdq
fldcw
xchg
movs
lea
nop
push
dec
xor
pop
xchg
imul
movs
cs
mov
inc
mov
mov
dec
dec
xchg
or
pop
mov
mov
loope
lahf
sbb
stos
sahf
loopne
push
imul
mov
or
inc
dec
fnstsw
inc
add
imul
xchg
clc
jnp
cmp
inc
push
push
sbb
sbb
dec
push
jae
add
xor
mov
push
dec
mov
mov
dec
push
out
mov
or
mov
jo
cdq
pusha
add
shl
mov
dec
mov
jmp
stos
imul
add
and
push
xchg
ja
jbe
inc
inc
jae
retf
mov
aas
mul
cmp
fisttp
inc
jne
inc
pop
fisub
fcom
pop
mov
test
cmc
shl
nop
or
push
sbb
xchg
into
ret
cmp
out
or
adc
cmp
jnp
clc
push
inc
ret
xor
inc
dec
mov
add
idiv
dec
pop
inc
retf
mov
sahf
and
paddb
stos
cmp
cdq
push
push
outs
xchg
xchg
scas
(bad)
dec
outs
(bad)
xor
add
pop
stos
jmp
adc
cmp
sub
cmps
mov
mov
jnp
xchg
adc
mov
cmp
(bad)
cli
scas
add
rcl
dec
pop
add
and
push
sbb
das
adc
adc
cmp
scas
sbb
data16
push
daa
sahf
or
cmp
dec
push
sbb
data16
cmp
test
push
rol
rol
push
gs
call
ret
popa
cmp
or
add
add
es
pop
jns
or
push
xor
fist
inc
sub
jl
das
sbb
jnp
out
and
ja
sbb
dec
push
dec
(bad)
(bad)
jmp
sub
xchg
test
ds
mov
jge
xor
lds
xor
or
jo
sbb
pop
pop
add
jbe
add
loopne
pop
sbb
pop
add
mov
adc
popa
nop
(bad)
mov
add
or
xchg
or
xchg
enter
in
pop
push
rcr
jecxz
mov
mov
cld
and
push
sub
retf
sbb
je
nop
jae
ret
jb
cmps
mov
pop
xchg
xor
push
repnz
ins
mov
ret
push
adc
push
push
inc
mov
call
sahf
xor
out
imul
mov
fadd
or
jbe
mov
xchg
adc
cmp
add
xchg
sub
sub
leave
xchg
and
(bad)
retf
mov
aas
pushw
mov
lods
bound
xchg
inc
xchg
inc
cmps
lods
int3
dec
test
add
add
mov
pop
dec
cli
pop
jmp
dec
mov
sti
sahf
loope
add
jp
iret
fcom
ins
pop
cmp
sbb
sbb
lods
(bad)
das
or
or
mov
into
inc
xchg
sti
shl
mov
jmp
lahf
adc
mov
ret
adc
dec
shl
pop
(bad)
ja
mov
and
mov
push
(bad)
and
xchg
sbb
xlat
int3
adc
push
(bad)
loope
(bad)
mov
(bad)
rcr
rol
mov
in
stos
sub
popa
addr16
xor
mov
inc
popf
shl
inc
inc
and
jne
sub
xchg
xchg
mov
xor
cmps
or
imul
mov
(bad)
ret
je
sar
mov
sub
out
mov
rcl
test
sbb
jae
sub
test
add
push
or
and
mov
retf
dec
pop
clc
push
dec
adc
push
pop
inc
mov
seto
inc
or
xchg
and
sbb
and
nop
or
loop
adc
nop
inc
(bad)
lea
xlat
fisub
push
outs
xchg
pop
sbb
fist
les
fisttp
adc
or
loop
inc
pop
inc
sbb
or
loope
push
jb
mov
xor
sub
xor
adc
loope
out
loope
jne
sbb
inc
and
test
and
pop
xor
nop
add
jl
shl
push
cmp
xchg
je
mov
pop
and
mov
cmp
fild
mov
mov
dec
push
push
adc
cmp
cmp
jmp
dec
jmp
push
xchg
pop
dec
jmp
push
jmp
rcl
jecxz
aad
add
add
and
dec
arpl
out
xor
inc
xchg
out
jle
inc
enter
ss
mov
rcl
stos
icebp
and
lock
xlat
push
adc
aaa
daa
adc
xchg
popf
push
arpl
xchg
(bad)
in
xor
mov
out
add
and
add
sbb
xchg
sahf
ds
sbb
pop
dec
out
xor
inc
addr16
pop
jg
sar
test
dec
jecxz
dec
lock
outs
jecxz
sar
cmps
inc
inc
into
int
loop
aas
xchg
mov
jge
or
les
enter
imul
pop
pslld
(bad)
in
fidiv
and
jmp
in
cmp
repnz
push
daa
push
sti
icebp
xor
xor
inc
in
pop
adc
jbe
ror
jge
test
out
xchg
lock
sub
popa
fist
call
add
inc
out
push
dec
into
call
push
shr
in
xor
and
test
and
mov
jmp
jmp
aas
mov
jnp
xchg
dec
mov
jle
add
inc
clc
push
vpacksswb
push
mov
ror
in
sbb
sbb
int
mov
mov
lea
mov
into
enter
fwait
xchg
fcom
jecxz
icebp
fdivr
cmps
iret
cli
lods
outs
repnz
lahf
repz
test
inc
shl
outs
sahf
test
mov
jmp
paddb
adc
push
pop
mov
add
(bad)
cld
icebp
call
nop
call
xchg
pop
xor
(bad)
inc
sbb
push
mov
dec
cmp
sub
sub
push
xlat
out
je
pop
dec
cli
pop
call
stc
add
or
inc
sub
add
add
add
add
or
add
mov
es
movs
mov
ss
xchg
mov
push
ret
xor
mov
mov
leave
xchg
sub
pop
leave
mov
dec
xchg
imul
int
sub
in
js
out
test
or
bound
pop
xchg
call
xor
mov
shr
dec
shl
push
sbb
movs
sbb
lods
fld
retf
xlat
sahf
inc
(bad)
imul
enter
lods
popa
call
cmps
ret
(bad)
cli
add
xchg
xchg
ret
mov
scas
inc
and
cmp
loopne
popf
push
stos
aam
mov
dec
aad
inc
jle
dec
jo
inc
mov
lods
call
ficomp
xor
out
int
mov
lods
xor
fistp
jno
pushf
(bad)
mov
into
sbb
mov
mov
or
lea
mov
mov
sub
or
lods
inc
pushf
jnp
jp
lahf
jl
and
outs
aaa
nop
jle
cdq
inc
sbb
test
sub
sbb
sub
jge
in
(bad)
fild
and
push
into
aaa
les
xor
push
pop
pusha
fs
pop
mov
xchg
(bad)
bound
sbb
es
sbb
and
xchg
aad
call
pusha
in
pusha
xchg
xchg
xor
arpl
popa
mov
sbb
fwait
push
bound
xchg
jg
fld
popf
stos
lods
push
xchg
pushf
pop
cmp
pop
xchg
addr16
ret
or
pusha
xchg
imul
fldenv
and
push
dec
jmp
daa
bound
or
xor
mov
stos
mov
(bad)
cli
sub
mov
cmps
xchg
dec
mov
mov
stc
sub
scas
sbb
push
push
lahf
cmps
pop
xchg
push
xor
test
mov
or
or
cli
in
mov
sbb
xchg
bnd
mov
ret
sbb
jmp
test
mov
test
inc
pop
outs
pop
sub
in
mov
xchg
gs
ja
mov
addr16
fld
(bad)
sbb
push
and
jnp
or
push
mov
cmp
fsubr
daa
lods
fwait
add
or
lods
mov
mov
or
daa
xor
mov
cmp
(bad)
out
dec
pushf
pop
mov
mov
add
xor
daa
adc
cmps
dec
xor
sbb
(bad)
cmps
dec
push
and
les
arpl
or
mov
out
(bad)
dec
gs
sbb
push
lods
aaa
rcr
sub
mov
test
xchg
lahf
sub
pop
sgdtd
add
or
or
jns
stos
jge
int
mov
xor
or
fidiv
jle
int
mov
pop
inc
sub
(bad)
jne
retf
outs
mov
add
cmp
les
dec
cmp
cmp
fs
stc
xor
mov
push
mov
fidiv
dec
and
lods
adc
xchg
sar
adc
out
aas
adc
repz
loopne
inc
add
sbb
rol
push
push
out
adc
popa
or
jge
adc
inc
sbb
push
or
daa
cmp
mov
mov
mov
adc
dec
rol
cli
(bad)
adc
adc
lods
in
jg
enter
sbb
xor
notrack
rol
adc
lahf
icebp
or
pop
xor
mov
inc
sbb
mov
cmp
adc
cmp
ret
inc
ins
xor
in
(bad)
inc
enter
lock
enter
mov
mov
pop
cmc
lods
cmps
inc
jo
inc
pop
ss
mov
push
or
or
nop
add
scas
outs
pop
aam
in
mov
jle
and
sbb
(bad)
scas
test
mov
cmp
arpl
repz
sbb
push
mov
push
lods
loop
ss
add
int3
mov
imul
inc
sbb
ror
pushf
in
pop
cmps
cdq
adc
mov
sub
fwait
leave
add
adc
inc
lea
pushf
test
inc
sbb
and
sbb
add
dec
xor
sbb
pop
push
jmp
jmp
or
sbb
cwde
ret
dec
and
adc
push
xor
mov
rcl
dec
cdq
dec
jne
mov
or
and
dec
or
clc
in
inc
xchg
and
xchg
dec
cmc
push
adc
mov
adc
xor
pop
cmp
arpl
inc
ret
rcl
and
enter
sar
jl
jb
js
push
mov
push
mov
xchg
cmp
rcl
jne
hlt
xchg
call
sbb
xor
jmp
and
push
mov
ds
(bad)
scas
or
js
mov
rcl
mov
retf
stos
cmp
ret
mov
push
stos
shl
jns
addr16
adc
push
lock
push
add
xchg
mov
add
mov
mov
mov
cmp
shl
push
jbe
xchg
in
call
mov
mov
cmp
fxch
push
es
mov
cwde
test
mov
(bad)
imul
add
aad
pop
mov
push
mov
bound
lods
push
aaa
mov
sbb
aam
iret
sub
dec
xchg
pop
pop
sahf
ins
cmp
mov
add
adc
inc
pop
repz
jmp
fwait
push
neg
add
call
mov
cli
aad
inc
mov
add
ror
pop
jmp
mov
fidivr
movs
pop
iret
aam
ins
sub
outs
cmp
adc
lods
add
mov
push
jge
inc
(bad)
repnz
es
gs
xor
add
xor
sub
imul
jecxz
sbb
sbb
xor
cmp
shl
inc
sbb
jns
adc
fild
push
in
mov
xlat
outs
add
lock
sbb
in
call
xchg
fisttp
pop
loopne
das
or
xor
mov
jmp
adc
ss
add
out
dec
fiadd
fwait
and
imul
ins
outs
sub
call
xchg
mov
inc
(bad)
push
push
in
xchg
lea
cmp
push
mov
popa
lods
(bad)
xor
bound
pop
cmp
push
js
scas
div
ds
adc
push
pop
inc
imul
xlat
mov
nop
cmp
add
mov
ds
into
cld
jo
pop
in
popw
push
mov
nop
jnp
(bad)
mov
sbb
cmp
cmp
push
jne
sti
mov
jmp
ja
iret
loope
das
sbb
xlat
mov
ja
bound
enter
mov
xor
out
push
je
ss
sbb
rol
ins
lock
das
jl
popa
dec
mov
dec
sbb
mov
lds
outs
in
adc
push
stos
xchg
push
fst
push
icebp
add
fs
cld
mov
mov
mov
call
in
fisubr
push
dec
cmp
xchg
imul
fsub
sbb
loop
sahf
add
or
hlt
adc
rol
or
pushf
fidiv
sahf
test
std
add
adc
scas
mov
lods
std
cmc
es
and
dec
inc
jbe
push
sbb
dec
(bad)
scas
cld
sbb
mov
and
outs
pop
ins
sub
mov
rep
jge
div
xchg
adc
hlt
es
sbb
jo
dec
in
loopne
setp
bound
pop
hlt
mov
retf
push
or
stos
mov
add
lahf
push
pop
pushf
stos
xchg
push
pop
in
and
pop
out
jl
outs
or
dec
mul
mov
iret
push
imul
nop
hlt
imul
fnsave
(bad)
jge
loopne
add
add
es
inc
jle
addr16
daa
jp
pop
pop
jmp
cmp
inc
jno
pop
jg
push
add
ret
push
arpl
(bad)
mov
cld
aaa
arpl
push
inc
cmc
xor
addr16
inc
add
js
in
mov
sbb
pop
sub
cld
(bad)
add
nop
add
jg
or
mov
xchg
xor
shl
lds
into
les
dec
or
ins
(bad)
repz
xor
dec
xor
aad
jns
add
add
mov
popf
call
ja
je
bound
inc
jmp
or
test
call
mov
popa
push
call
dec
and
pop
sbb
data16
rol
mov
pop
call
mov
jno
jo
adc
pushf
xchg
xchg
inc
gs
push
jge
add
sbb
js
in
bswap
add
mov
pop
xchg
or
inc
aad
jbe
mov
adc
lea
jnp
mov
ds
jg
xor
sub
mov
shl
retf
(bad)
outs
dec
not
sub
(bad)
push
rcr
shr
mov
arpl
sbb
aaa
je
fmul
xor
dec
cli
xor
repz
inc
lea
cmp
xchg
mov
test
cmp
sbb
and
lds
lods
call
test
outs
(bad)
push
je
push
jle
cmps
jo
enter
jo
mov
test
push
mov
(bad)
stc
loopne
fcmovbe
inc
adc
cmovb
inc
pop
push
loopne
jae
cmp
adc
and
sub
inc
inc
add
xlat
mov
dec
mov
jecxz
mov
cmp
cmp
or
adc
and
mov
imul
andnps
xlat
sub
xchg
lds
sub
xor
stc
xor
jle
or
aam
push
sbb
push
cmps
cmc
or
pop
ror
ins
pop
and
or
xor
or
icebp
jae
mov
sbb
push
pop
sub
or
cld
call
ret
mov
ret
adc
leave
mov
aaa
xchg
jmp
xor
mov
(bad)
out
cmp
jp
add
aam
or
push
stos
fstp
test
pop
and
xchg
cmps
jmp
lods
xchg
or
xchg
lds
mov
add
and
xchg
add
mov
mov
push
mov
push
cmps
jo
(bad)
out
adc
jecxz
add
dec
cmp
and
psubw
hlt
inc
or
pop
add
rol
inc
or
or
inc
retf
rcr
mov
add
push
dec
pop
dec
cmp
mov
add
mov
xchg
fs
call
out
mov
(bad)
xchg
and
adc
add
add
cmp
xchg
mov
inc
stc
rol
pop
add
mov
pop
cmp
or
push
mov
or
jmp
xor
inc
and
icebp
mov
dec
pop
dec
mov
and
bound
dec
pop
mov
and
daa
sbb
stos
jno
xor
xchg
rol
pusha
add
and
pusha
adc
call
test
sub
fisub
xchg
jmp
test
pop
xchg
stos
jns
cmps
cmps
push
sti
cmc
gs
push
mov
rol
scas
sbb
pop
xchg
shl
push
lahf
(bad)
pusha
call
mov
hlt
inc
lods
xor
push
jbe
inc
ret
int3
dec
push
stc
cmps
inc
inc
xor
adc
popf
fdivr
cdq
xlat
jp
lds
cmp
fnstsw
xchg
and
xor
xchg
jo
xor
stos
shl
shrd
scas
adc
fs
lods
dec
push
and
adc
call
mov
repnz
dec
xor
popa
je
outs
dec
and
push
and
xlat
test
add
mov
das
mov
aam
or
lods
pop
adc
es
loope
push
sub
or
dec
or
test
xchg
sti
retf
xor
mov
sbb
inc
push
retf
xchg
xor
lods
ret
dec
movs
push
movs
mov
jmp
mov
(bad)
or
or
pusha
push
push
sub
add
inc
inc
loopne
inc
aaa
xchg
mov
stos
popa
mov
pop
fist
xor
mov
jmp
dec
inc
js
xchg
pushf
sub
aas
jbe
pop
jp
adc
inc
adc
push
sahf
or
xor
mov
push
pusha
iret
movs
dec
push
jmp
ins
and
loopne
or
aam
sub
inc
test
jae
out
pop
fs
retf
adc
pop
adc
pop
out
aaa
cmp
cmp
sbb
mov
lock
dec
jle
or
and
fisub
mov
daa
call
xchg
ror
add
les
psubq
cmps
jbe
mov
ins
mov
pop
dec
rcr
inc
and
cmp
and
or
xor
loop
scas
stos
adc
fidiv
pop
mov
test
xor
out
cmp
mov
push
mov
movs
push
inc
or
mov
push
(bad)
mov
pop
in
aaa
neg
jns
mov
inc
adc
and
pop
and
add
cmc
xor
sub
push
adc
movs
push
xor
mov
mov
cmp
or
mov
pusha
mov
rcr
mov
push
push
cmps
or
fist
fisub
or
leave
pushf
jl
mov
retf
retf
or
push
fist
in
mov
arpl
loopne
sub
sub
pop
icebp
mov
lds
adc
(bad)
jl
int3
(bad)
cmp
data16
and
push
(bad)
enter
nop
mov
jo
in
test
sub
nop
or
or
push
into
out
or
nop
into
jmp
cld
into
mov
ret
inc
xchg
les
sub
or
xor
(bad)
adc
pop
je
xchg
popa
rol
icebp
add
mov
jnp
int3
(bad)
call
and
mov
enter
cmp
or
mov
cli
fwait
mov
pushf
mov
aas
mov
add
dec
or
jae
push
ss
ss
cmp
add
(bad)
sbb
stos
jae
ret
addr16
das
mov
cmp
xor
and
std
ret
sar
rol
ins
mov
mov
dec
je
(bad)
lock
dec
pusha
xor
adc
mov
clc
aaa
and
das
daa
mov
test
into
loop
xlat
jbe
xlat
jmp
sbb
cmp
pushf
cmc
pushf
das
inc
cmp
mov
inc
xor
retf
push
not
jns
rcr
dec
aad
mov
and
pminub
ss
or
or
add
push
in
les
dec
addr16
dec
enter
cmp
jge
in
and
adc
mov
xor
mov
mov
or
fadd
sbb
data16
and
fdivr
push
aam
ja
mov
jae
adc
or
xchg
fnstsw
sub
popa
mov
xor
jge
call
out
pusha
inc
adc
jo
mov
xchg
push
cli
fidiv
push
xor
and
lea
int3
jge
leave
je
jne
mov
cmp
or
or
jle
mov
(bad)
pop
pop
and
cld
xor
mov
jge
scas
scas
loopne
rol
mov
(bad)
lds
mov
xchg
xlat
mov
(bad)
sar
push
mov
push
adc
int3
add
push
adc
xor
pop
sub
jbe
cmp
jecxz
and
mov
push
dec
fst
jne
mov
aam
mov
movs
scas
jmp
or
or
rol
(bad)
or
xor
inc
aaa
jecxz
cmp
sbb
sbb
push
or
mov
adc
mov
xlat
ins
repnz
dec
push
and
pop
sbb
xlat
rcr
add
pop
push
in
mov
fucom
jne
inc
xchg
jecxz
push
(bad)
xor
dec
sbb
push
iret
mov
arpl
test
push
mov
sbb
mov
adc
sbb
call
loop
dec
adc
mov
push
jecxz
or
xchg
jle
cdq
outs
aad
inc
push
mov
add
loopne
outs
push
mov
or
sbb
pop
or
push
sbb
dec
mov
ror
mov
jno
dec
add
push
aad
push
in
xchg
in
xchg
imul
scas
xchg
std
mov
sbb
ror
and
retf
xor
int3
add
push
lods
inc
sub
mov
xor
mov
out
out
outs
cmps
jmp
addr16
lds
mov
into
es
jmp
daa
mov
mov
xor
pushf
cmps
or
pop
out
mov
inc
inc
mov
xor
ins
test
pop
cmps
in
inc
sub
nop
pop
xchg
imul
xlat
sub
pop
je
out
into
mov
push
out
idiv
out
sahf
bound
arpl
bound
push
lock
outs
and
xchg
cmps
cmp
cmp
xrelease
aam
pop
inc
das
inc
mov
push
cmps
into
dec
ins
xchg
pop
cdq
xor
dec
cmc
and
pop
scas
push
pop
pand
adc
loop
cmc
shr
xor
push
and
out
mov
pop
enter
in
idiv
loopne
add
jl
neg
or
xor
jae
inc
repz
pushf
ds
cmc
pop
lahf
xor
jnp
lds
cmc
call
adc
push
int
imul
mul
add
dec
cli
jae
mov
leave
xchg
cli
into
lods
jl
fstp
repnz
rcr
and
in
add
or
add
(bad)
mov
dec
push
dec
cld
or
lods
pop
add
data16
popa
ror
xor
dec
sbb
mov
xor
aam
movs
pop
shl
inc
mov
pop
(bad)
jno
xchg
inc
xor
mov
dec
xchg
sub
fs
data16
pop
adc
jmp
mov
aas
jg
sahf
add
movs
mov
daa
mov
out
sahf
movs
dec
out
add
adc
sub
ins
mov
or
cmp
retf
push
add
pop
ror
shl
adc
xlat
lds
jns
(bad)
stc
xchg
adc
les
lods
nop
lock
jmp
mov
xchg
sbb
sub
movs
jb
xchg
xchg
mov
arpl
enter
(bad)
cli
icebp
jecxz
rcr
cmp
inc
sub
std
or
and
pop
mov
push
pop
push
mov
lods
pop
sbb
lods
pop
adc
mov
xor
mov
cwde
push
loopne
cmp
dec
sbb
adc
cmps
shl
and
xchg
aad
int3
icebp
daa
popa
retf
xlat
das
fbstp
aam
sbb
mov
xchg
(bad)
inc
and
js
loop
ss
test
leave
les
test
adc
stos
shl
mov
sub
out
or
or
int
ret
and
cmp
fcmove
scas
pop
jmp
push
inc
repnz
fwait
jecxz
and
push
cmps
sbb
adc
mov
cdq
std
clc
shl
sar
pop
jmp
js
xchg
lea
cdq
jp
adc
lods
or
xor
stos
loop
push
les
xchg
push
dec
sub
inc
adc
cld
mov
ret
mov
and
xor
call
enter
repnz
adc
xchg
popf
jns
mov
mov
out
shr
ret
test
push
push
out
mov
ror
and
loope
aaa
loope
xchg
sub
jmp
bound
push
aas
rcpps
or
add
ror
dec
sub
enter
leave
mov
and
mov
mov
push
cmc
leave
xchg
pop
cmp
int3
push
mov
mov
jnp
mov
mov
adc
add
jg
ss
popa
lds
imul
push
and
fwait
mov
push
hlt
mov
adc
mov
and
popf
jecxz
jb
(bad)
mov
adc
jecxz
ja
jle
dec
xchg
fistp
es
mov
or
and
xlat
stos
cmp
in
pop
out
mov
gs
pop
pop
adc
xchg
lds
nop
and
pop
cmp
std
icebp
adc
jo
ss
sahf
jp
mov
dec
jl
das
pop
ss
shl
jp
mov
cmps
fwait
outs
imul
mov
aaa
int3
and
or
cmp
lds
adc
fcmovnb
lds
mov
jecxz
inc
push
test
pop
add
out
jne
scas
out
jecxz
jl
ss
mov
sbb
mov
adc
data16
adc
pop
lods
xchg
mov
cld
loop
push
pop
iret
inc
cmp
dec
mov
(bad)
xlat
addr16
mov
mov
push
mov
loope
add
pop
push
sahf
loop
xchg
add
loop
rol
into
sbb
inc
inc
add
imul
(bad)
enter
ins
out
jl
push
pop
or
mov
int
xor
repz
std
or
mov
cdq
retf
pop
sub
or
cmp
pop
ds
inc
and
popa
adc
adc
mov
sbb
stos
or
sub
mov
push
pop
cmp
adc
mov
or
xor
add
push
mov
add
mov
pop
dec
pop
test
sbb
mov
xor
adc
(bad)
in
xchg
in
add
add
add
sub
or
dec
adc
cmp
and
(bad)
(bad)
xlat
aaa
jne
adc
mov
add
(bad)
cmp
fwait
xor
fimul
inc
or
and
pushf
push
loope
mov
(bad)
(bad)
fbstp
int3
mov
adc
jl
add
nop
add
push
in
sbb
leave
dec
adc
add
xor
ss
dec
arpl
loop
(bad)
addr16
or
mov
push
and
pop
ins
movs
push
out
dec
dec
fld
inc
scas
cwde
rcl
mov
xor
ss
test
mov
jl
sub
add
dec
sti
sub
adc
imul
adc
leave
dec
outs
jae
push
adc
pop
loopne
arpl
bound
out
shl
popf
or
xor
xchg
xchg
mov
mov
dec
repnz
sar
sbb
push
ins
scas
lea
bound
rcl
dec
xor
sbb
and
adc
dec
xchg
xchg
inc
xor
xor
mov
pop
lock
xchg
sub
es
adc
pusha
push
leave
js
cmp
test
scas
pop
dec
push
sbb
push
jb
mov
(bad)
jmp
jmp
inc
adc
xor
push
aaa
xlat
retf
cmps
into
in
push
mov
push
push
dec
and
sbb
(bad)
sar
jno
cmps
adc
mov
leave
push
lds
shl
sbb
sub
xor
fist
xchg
mov
mov
sbb
ret
adc
sub
xchg
or
jns
sbb
addr16
nop
mov
jns
push
pop
hlt
ficom
mov
xchg
push
addr16
push
test
std
inc
mov
jmp
popf
mov
mov
cld
cmps
or
xor
js
sub
lods
sbb
inc
pop
loope
iret
xor
or
inc
push
add
call
(bad)
out
mov
jge
fwait
dec
and
push
jne
push
sahf
(bad)
loopne
mov
mov
daa
add
xchg
icebp
push
add
inc
outs
jns
(bad)
push
cmps
push
jge
jnp
jle
adc
xchg
mov
stc
in
mov
cli
(bad)
call
icebp
mov
push
jne
loop
cmp
adc
pusha
push
cmp
mov
clc
jp
or
mov
mov
loope
int
xchg
pop
repnz
mov
bound
les
jne
mov
fxch
enter
bound
push
jbe
add
loopne
or
mov
mov
jbe
add
mov
imul
mov
mov
jecxz
sub
imul
pop
or
push
outs
pop
loope
mov
shl
sub
out
retf
sbb
mov
lds
mov
(bad)
sbb
push
(bad)
cmp
xor
ror
push
mov
pop
lods
mov
cmp
fisttp
aaa
enter
jle
dec
inc
(bad)
pop
call
popf
mov
stos
retf
and
adc
sbb
xor
sub
rol
or
push
xchg
mov
(bad)
mov
mov
push
cmp
frstor
inc
or
pop
inc
lds
fcmovnbe
or
ins
lock
cmp
jne
imul
mov
add
cdq
xlat
rol
cmps
fild
jmp
mov
(bad)
pusha
inc
cli
push
adc
push
loope
and
shl
call
test
and
les
stos
mov
nop
adc
xor
or
loop
mov
or
ins
mul
jl
dec
push
add
test
mov
mov
push
pop
xchg
daa
gs
xor
int
cs
xor
mov
out
push
add
test
test
adc
inc
mov
or
in
pop
outs
push
call
cs
jo
das
aad
sbb
mov
push
pushf
inc
neg
add
add
adc
inc
or
shl
fs
or
fdivr
out
ja
jmp
pop
outs
(bad)
fdivp
daa
cs
and
xchg
scas
(bad)
xchg
int3
or
sub
movs
and
out
and
cld
push
cmp
xor
std
cli
jbe
adc
cli
jle
lahf
mov
ret
mov
out
adc
pusha
jns
add
or
sbb
mov
repz
repnz
xor
mov
clc
sar
push
cmp
cmp
test
add
imul
mov
js
push
ds
add
inc
push
mov
xor
add
add
adc
sbb
arpl
push
add
bound
mov
sub
adc
add
inc
fcomip
aas
and
ds
adc
sbb
or
imul
xchg
xor
add
loope
and
cmp
jo
adc
pop
mov
fdivr
retf
retf
cmp
lock
sti
inc
inc
pop
add
movs
inc
cmc
xchg
add
mov
cmp
es
add
shl
les
(bad)
ret
mov
js
mov
mov
mov
inc
repz
sbb
mov
pop
mov
mov
add
shr
stc
pop
loopne
add
jae
push
sub
inc
mov
sub
ret
(bad)
mov
push
arpl
inc
mov
jecxz
xchg
cmp
int3
cmp
or
pusha
mov
popf
xor
lock
mov
xor
add
test
xor
or
xor
xchg
add
xor
loopne
jne
push
dec
jnp
pop
mov
fs
xchg
inc
xor
sub
and
pop
add
pushf
mov
xor
or
sub
dec
pop
jmp
out
adc
retf
inc
les
clc
xlat
add
leave
aas
js
cmp
inc
in
mov
popf
adc
lds
call
xor
add
add
sub
inc
ins
and
mov
mov
inc
inc
je
test
mov
cmp
xor
retf
push
jecxz
and
pop
add
movs
(bad)
and
inc
xchg
sub
aas
and
test
arpl
add
sbb
mov
jb
scas
ror
popf
sbb
cld
mov
inc
popf
mov
dec
push
or
add
mov
jg
sub
jge
movs
jmp
sahf
adc
jo
push
nop
xor
add
jl
xchg
push
dec
mov
leave
push
push
xor
loopne
mov
inc
inc
jl
dec
fwait
inc
dec
jp
jb
sbb
inc
inc
add
adc
or
xchg
jbe
dec
mov
mov
pushf
int3
enter
sbb
imul
movs
hlt
add
add
jb
push
test
push
and
add
push
mov
out
pop
imul
or
ins
mov
(bad)
popa
mov
sbb
(bad)
dec
push
xor
mov
sbb
xchg
jae
cmp
xchg
js
daa
arpl
mov
jb
sbb
dec
loopne
push
sub
test
mov
les
sbb
out
dec
dec
and
mov
sub
hlt
in
push
mov
xchg
sub
pusha
test
adc
test
sbb
add
test
or
iret
dec
ins
mov
and
jo
add
sub
dec
mov
in
and
test
mov
add
stos
xchg
and
sub
xor
or
js
add
pop
jecxz
push
fs
sar
test
or
mov
cmp
cmp
lods
push
inc
cmc
into
xchg
add
in
push
mov
mov
xor
push
lea
push
and
arpl
xchg
add
hlt
(bad)
mov
inc
repz
pop
pop
xchg
add
add
jmp
retf
inc
cmp
inc
fist
mov
fadd
add
pushf
add
and
cmc
jo
mov
ds
push
inc
cmp
xor
cmp
xchg
ror
inc
sbb
xchg
dec
gs
int
mov
xor
add
pusha
add
test
pop
mov
push
and
push
or
std
jnp
add
inc
push
cmp
add
add
cmp
push
jmp
(bad)
(bad)
cld
push
xor
pop
jno
cmp
xor
adc
leave
pusha
adc
mov
dec
jl
cld
rol
call
xchg
mov
int
pushf
in
or
push
dec
dec
add
add
nop
push
add
cmp
(bad)
inc
test
repnz
cli
xchg
ret
add
push
inc
cmp
sbb
scas
gs
pop
xor
push
mov
mov
mov
and
das
cdq
adc
push
clc
test
and
xchg
dec
call
mov
mov
jmp
popf
sbb
pop
push
test
mov
pop
lock
js
xor
xlat
mov
leave
sbb
iret
pop
sbb
fcom
add
sub
fadd
scas
pop
pop
mov
push
sub
xor
dec
stos
fnstsw
push
jne
or
sbb
dec
and
and
cmp
mov
fstp
mov
cwde
or
push
cdq
jge
adc
cmp
mov
jb
mov
mov
out
add
cmp
inc
push
add
adc
inc
daa
mov
psubusb
std
fiadd
clc
fcmovbe
lods
push
and
add
loopne
call
xchg
or
pop
cmp
or
jecxz
loopne
inc
fadd
mov
scas
es
sbb
add
gs
push
mov
stos
cmp
add
xor
out
popf
popa
out
adc
test
inc
int3
test
hlt
and
cs
xor
adc
sub
inc
cld
rol
loopne
mov
inc
adc
mov
repnz
cwde
test
or
(bad)
loopne
pusha
or
mov
add
mov
lds
cmp
jmp
popa
aas
push
cmp
cmp
xchg
scas
retf
(bad)
dec
fs
add
push
or
sti
(bad)
les
add
bound
cmps
and
mov
cwde
test
adc
push
xchg
daa
jo
push
push
jne
or
ss
add
or
loopne
mov
es
or
or
int
(bad)
push
jo
mov
add
enter
adc
jecxz
pop
test
and
ret
mov
imul
test
out
inc
push
mov
rol
and
daa
popf
inc
adc
or
jge
sub
add
inc
fild
and
sbb
je
gs
pop
xor
pop
ins
rol
sub
mov
pop
mul
sub
adc
add
data16
inc
ins
cmp
push
loopne
scas
mov
pop
add
inc
add
add
jp
mov
lods
pop
mov
push
jb
fbstp
addr16
and
nop
or
inc
stos
iret
imul
rol
nop
ret
add
add
int
ja
xchg
mov
test
mov
pop
cmps
sub
imul
mov
adc
in
rol
test
xchg
add
mov
fadd
mov
jmp
shl
xor
push
rol
aaa
push
addr16
test
cs
and
rol
mov
inc
ret
sbb
addr16
add
js
xlat
jle
or
jge
add
addr16
pop
in
or
adc
add
push
je
xchg
dec
and
jbe
pop
pop
mov
out
mov
add
enter
in
push
out
push
or
int
add
cmp
xor
add
add
push
adc
into
(bad)
(bad)
fld
outs
imul
test
ins
push
inc
cdq
(bad)
pop
lods
out
jne
xlat
ins
loope
mov
in
int3
push
add
dec
add
add
sbb
popa
pop
js
add
add
jbe
test
ret
jmp
pop
clc
test
pop
jns
push
pop
sbb
loope
xchg
test
data16
out
outs
call
outs
es
out
fs
add
pop
add
add
xchg
pop
sub
jp
add
push
outs
les
xlat
div
inc
push
sbb
or
mov
aam
xchg
push
ret
retf
dec
sbb
int
test
add
mov
pop
jo
ja
mov
add
out
fcomp
lods
inc
cmp
cmp
ins
test
pop
loopne
pop
sbb
adc
add
scas
call
into
or
mov
loop
xchg
inc
xor
add
push
inc
push
(bad)
dec
inc
dec
outs
cmc
outs
jb
xchg
push
jne
gs
rcl
sbb
pop
enter
cmp
cmps
test
push
repz
in
sar
pop
sub
inc
or
jo
movs
out
pusha
ins
cmp
scas
mov
or
sub
inc
mov
ins
pop
xchg
dec
rol
mov
mov
xor
add
data16
outs
in
xor
ret
jbe
inc
sub
and
push
scas
into
push
push
jg
cmp
or
push
cmps
cli
sbb
inc
stos
push
push
test
pop
jae
pop
daa
lock
dec
lock
xor
test
outs
fxch
addr16
pop
jge
hlt
add
int
(bad)
jae
cmp
dec
mov
data16
mov
pop
add
inc
sub
das
ja
jle
dec
(bad)
je
enter
ja
xchg
loop
xchg
add
and
inc
outs
adc
mov
jp
ja
sahf
test
inc
dec
add
jo
cmp
test
sti
mov
pop
mov
jnp
(bad)
inc
enter
sub
add
sbb
pop
jo
pop
inc
test
and
dec
or
fisub
mov
fcom
add
out
(bad)
jmp
pop
clc
test
xchg
push
xchg
push
pop
lock
jl
fadd
inc
outs
add
pop
push
cli
or
ficom
and
and
adc
retf
push
imul
repnz
push
out
(bad)
div
jle
test
(bad)
call
dec
fwait
push
xor
call
cmp
mov
leave
ds
mov
fsub
jns
cmp
cwde
add
fs
jl
(bad)
ins
or
imul
add
adc
add
pop
ret
sub
push
inc
inc
mov
and
mov
push
movs
push
cmps
dec
fwait
inc
sbb
inc
push
push
or
add
xor
dec
or
dec
push
xor
test
inc
dec
sbb
inc
mov
push
icebp
sbb
sub
mov
sbb
inc
inc
jg
ins
call
es
sub
lods
sahf
mov
in
jmp
xchg
jp
call
int3
cmp
dec
push
and
ins
loope
or
sub
pop
mov
jo
add
or
inc
mov
xor
adc
push
inc
xor
add
es
mov
inc
xchg
inc
imul
or
outs
pop
adc
fs
push
xor
arpl
mov
add
loopne
jmp
cmp
push
movs
mov
hlt
call
call
jb
(bad)
push
lods
pop
push
loop
jmp
jp
retf
nop
dec
cmp
les
mov
jno
or
pop
adc
add
xchg
movs
adc
add
lods
rol
xchg
sbb
mov
cwde
dec
imul
imul
pop
aam
and
pop
call
clc
push
sbb
pusha
int3
xor
push
dec
cmp
leave
daa
ficomp
jns
push
aad
jne
jbe
cmp
popf
sub
pop
adc
mov
inc
jge
cmp
pop
sbb
ja
add
adc
add
or
mov
pop
xchg
test
mov
inc
and
retf
sbb
push
scas
mov
cdq
pop
xchg
inc
adc
call
dec
arpl
adc
neg
dec
sbb
loopne
dec
movs
pushf
mov
sub
lods
ret
lods
mov
cmp
push
(bad)
gs
xchg
mov
(bad)
or
test
out
mov
xor
xor
and
xor
add
add
sbb
xchg
inc
push
adc
(bad)
mov
adc
xchg
fwait
gs
lahf
push
xchg
ror
scas
push
bound
mov
das
mov
xchg
(bad)
adc
fwait
stos
je
pop
inc
shl
dec
sbb
dec
or
(bad)
pushf
mov
adc
lods
sbb
mov
push
cmp
(bad)
imul
ret
cmp
xor
not
retf
sub
pop
bound
inc
es
and
push
in
pop
out
sti
pop
(bad)
fidiv
push
inc
arpl
or
or
xchg
xor
mov
sub
mov
push
sub
and
mov
push
and
cmp
add
scas
hlt
inc
sbb
inc
mov
(bad)
adc
movs
jo
xor
scas
add
mov
mov
push
clc
enter
xchg
loop
mov
cmp
push
xacquire
and
int
imul
dec
cmp
or
outs
jo
ins
mov
(bad)
in
arpl
xor
ror
sub
aam
sahf
mov
pop
sbb
jae
dec
fmul
adc
mov
loop
aaa
jmp
mov
cmp
daa
mov
(bad)
jg
ds
loope
mov
repnz
xor
jmp
in
push
stc
in
outs
mov
inc
fisttp
add
lea
dec
lods
xchg
sbb
mov
loope
add
jne
inc
imul
popf
xor
pop
or
sahf
mov
mov
fiadd
shl
comiss
mov
sbb
push
cs
imul
sbb
ins
lods
arpl
mov
mov
imul
mov
mov
lds
movs
push
push
jb
inc
sbb
sub
inc
repz
adc
nop
or
and
add
sbb
inc
and
or
(bad)
cdq
fdivr
xchg
jmp
add
ror
push
inc
mov
sub
cmp
add
movs
popf
int3
add
cli
(bad)
xor
ins
or
jecxz
and
sub
add
cmp
not
adc
push
psrld
or
inc
adc
daa
or
in
ficom
leave
inc
cdq
adc
cdq
or
ins
daa
xor
xlat
inc
in
mov
fcom
(bad)
xchg
or
push
jno
imul
push
add
daa
outs
sbb
xchg
cwde
movs
and
stos
ins
xchg
pushf
sub
push
mov
leave
jae
pop
loop
adc
inc
mov
inc
sbb
cdq
mov
clc
lods
movs
pusha
push
or
sub
inc
sbb
retf
movs
xchg
movs
push
cmp
jo
jecxz
rcr
xchg
push
ror
mov
sbb
nop
in
pop
shl
(bad)
pop
pop
jmp
inc
and
repz
dec
pusha
and
mov
or
in
adc
out
cmp
daa
mov
rcr
dec
or
cmc
clc
stos
adc
and
cmps
inc
into
das
add
call
adc
xor
loopne
mov
(bad)
xor
or
repz
aaa
imul
xchg
cwde
adc
xor
mov
jns
imul
xchg
cmps
xor
push
mov
cs
pushf
xchg
jl
fistp
inc
mov
jno
push
mov
xchg
mov
and
inc
rol
xchg
fadd
dec
lods
add
test
push
xchg
cwde
dec
and
mov
test
test
sahf
inc
adc
sbb
mov
rcl
movs
clc
inc
fwait
inc
(bad)
xor
les
inc
mov
mov
inc
jmp
xchg
xor
mov
sub
push
nop
stos
mov
xchg
ss
cmps
push
add
push
retf
popf
aad
gs
lock
stos
fist
(bad)
or
cmps
mov
dec
aam
adc
push
scas
cdq
sahf
sti
inc
or
inc
inc
pop
cs
(bad)
cwde
jo
inc
add
fdiv
sbb
dec
dec
cmp
fimul
ss
inc
sub
in
mov
inc
or
add
scas
xchg
call
mov
sbb
imul
mov
pusha
mov
and
(bad)
not
xchg
pop
pop
add
sahf
add
inc
or
xchg
adc
and
fst
ret
sub
mov
mov
or
and
pop
cmps
mov
hlt
mov
adc
xor
mov
and
aaa
mov
bound
in
mov
popa
or
mov
cmps
add
ret
sbb
cmp
add
pusha
loopne
outs
js
dec
je
ror
push
cdq
or
jle
shl
mov
call
cmp
and
out
retf
stos
call
dec
mov
and
jmp
inc
test
add
mov
xor
jbe
mov
adc
sub
ins
inc
cmp
xchg
into
inc
xor
icebp
rcr
push
nop
icebp
ffree
jge
mov
cmps
into
adc
xor
xor
jns
div
add
stos
xchg
inc
and
xlat
aaa
hlt
mov
sub
sahf
les
test
mov
popa
or
ja
mov
pop
fidivr
add
test
add
add
mov
(bad)
mov
cmc
and
sar
imul
aaa
aaa
(bad)
ror
sbb
sub
add
rol
adc
ror
call
dec
test
pushf
xchg
and
xor
jmp
loop
lods
daa
mov
mov
jge
js
push
xchg
lea
lods
dec
inc
mov
ins
push
int3
jle
add
(bad)
pop
adc
mov
int
call
lea
lea
pushf
call
sbb
pop
inc
xchg
loope
mov
xchg
xor
cmp
or
pcmpgtb
bound
cmc
jge
xor
jmp
dec
and
(bad)
mov
push
xor
and
leave
jbe
das
jbe
or
test
sti
leave
stc
jle
ds
in
xchg
mov
int3
or
mov
test
adc
jo
ds
or
test
test
inc
or
shl
ds
pop
and
movs
outs
add
popa
adc
sbb
add
sbb
bsf
cmp
loopne
int3
scas
in
ficom
and
xor
ret
add
adc
es
xchg
movs
ret
aad
cdq
dec
mov
(bad)
sbb
pop
rcr
pop
jge
sbb
push
mov
lahf
es
fstp
test
pop
push
stc
xchg
pop
movs
jns
aaa
je
mov
push
xor
mov
xchg
push
and
(bad)
fisubr
sbb
ins
(bad)
stos
xchg
rol
add
add
sbb
jmp
xchg
js
and
das
and
or
adc
push
sub
add
or
or
arpl
pusha
inc
lea
inc
jno
and
shl
shl
dec
mov
jbe
fimul
fbld
jo
adc
adc
mov
add
sahf
cmps
mov
(bad)
and
mov
je
jle
mov
jbe
jecxz
and
push
sbb
adc
add
lods
rcr
ret
loope
std
mov
sbb
jns
lahf
std
fld
add
das
cdq
dec
loop
xor
enter
cmp
leave
pop
icebp
and
mov
sti
imul
jmp
fisubr
inc
jns
mov
sbb
sub
pop
push
push
xchg
pop
lds
in
mov
add
add
(bad)
(bad)
cmp
sbb
inc
ins
lds
pop
or
add
or
cs
mov
mov
pop
jecxz
sahf
pop
mov
ret
xor
sbb
icebp
les
adc
mov
fstp
in
push
or
pop
pushf
test
jb
adc
sbb
push
fdivr
loopne
xchg
pop
test
lock
pop
ret
and
or
inc
sub
fs
popf
pop
xchg
inc
adc
pop
dec
xchg
out
and
jns
mov
fs
pop
(bad)
adc
or
in
movs
push
xor
xchg
inc
mov
in
retf
dec
call
mov
test
ret
(bad)
sub
add
inc
xchg
dec
push
fsubr
loopne
and
cmc
arpl
cmp
stos
inc
cwde
pushf
push
dec
mov
aad
inc
add
push
xor
or
rcr
mov
xchg
dec
addr16
fdivrp
mov
montmul
cmps
push
aaa
stos
in
push
add
xor
mov
or
pusha
(bad)
(bad)
pop
dec
dec
ret
popa
jge
inc
push
jge
jle
pushf
push
xor
dec
or
adc
add
sbb
jmp
out
xchg
adc
sbb
xor
dec
sbb
xor
into
int
pop
pop
fidiv
movs
outs
outs
push
xchg
movs
pop
add
ds
and
das
and
outs
mov
dec
in
pop
adc
(bad)
rol
xor
and
bound
jp
jbe
inc
ja
cmps
pop
mov
sub
out
and
dec
and
jl
lahf
in
(bad)
ror
fwait
int
add
fldenv
ins
sub
outs
mul
pop
push
adc
ins
pop
cld
push
add
inc
inc
imul
stos
or
ret
add
inc
test
(bad)
pop
push
call
popa
popa
xchg
xchg
push
push
push
cmps
xchg
das
test
pop
mov
pop
js
jns
lahf
and
nop
adc
pop
inc
jno
(bad)
enter
fwait
int
and
push
sub
and
sub
jecxz
(bad)
retf
inc
fcom
inc
lock
ds
sti
fstp
das
inc
add
pushf
inc
adc
adc
popa
xchg
dec
jge
movs
jge
pop
jne
and
dec
pushf
cdq
jle
js
xchg
in
sbb
es
in
push
shr
scas
mov
sahf
xchg
or
mov
test
sbb
sub
test
call
mov
imul
xor
xchg
ret
inc
adc
aam
out
pcmpeqb
test
sbb
cdq
jne
(bad)
jmp
push
movs
pop
ins
mov
call
mov
pushf
jmp
jmp
push
stos
mov
sbb
mov
push
mov
pop
pop
xlat
and
mov
push
jno
mov
stos
mov
adc
adc
test
stos
jb
sbb
mov
mov
inc
mov
ret
imul
sub
inc
pushf
adc
or
mov
fbstp
add
in
sub
add
test
or
add
jo
sub
ret
mov
(bad)
outs
ret
and
jns
push
mov
lods
mov
sub
rol
sub
ror
or
imul
loope
mov
push
rcl
sub
scas
or
sub
test
loop
stos
mov
fmul
inc
rol
add
ror
inc
or
add
add
ror
or
jo
fmul
inc
mov
push
push
push
sub
in
(bad)
dec
and
mov
mov
sub
adc
aam
sbb
int3
es
hlt
xchg
loope
imul
mov
out
pop
inc
outs
push
push
shl
lahf
jl
sbb
out
jno
or
add
out
push
pushf
scas
push
mov
jmp
add
and
sub
xor
add
out
adc
push
jno
fld
in
and
in
xor
scas
sbb
inc
xchg
fstp
pop
fistp
ret
bound
push
mov
stos
pop
push
cmc
mov
cdq
faddp
int
adc
movs
call
pop
shr
iret
push
out
cli
inc
inc
sti
mov
cld
sub
adc
rcl
add
les
shr
inc
jno
or
xor
sbb
pop
xchg
push
mov
cs
inc
xchg
lock
enter
es
pop
adc
xor
sub
inc
pop
adc
data16
pop
unpckhps
push
addr16
lock
jo
movs
jo
sbb
sti
nop
ret
mov
and
retf
jo
inc
movs
sbb
pop
cwde
js
adc
scas
imul
mov
sub
sbb
or
mov
out
das
or
or
add
inc
icebp
movs
in
call
movs
movs
xor
pop
les
jno
inc
fcomp
xor
sbb
rcl
xchg
(bad)
sbb
stos
adc
jmp
add
outs
das
add
adc
and
sbb
xchg
or
push
and
xchg
movs
or
les
adc
out
and
inc
daa
jg
mov
inc
shr
nop
sub
lods
jb
mov
sub
jb
shl
in
les
ror
repnz
jae
sbb
xchg
sub
mov
fisubr
fsubr
sbb
xlat
push
dec
ret
(bad)
sbb
cdq
or
pop
xlat
out
or
dec
and
jmp
repz
psrlq
inc
xlat
adc
mov
fisttp
push
cmps
xchg
xlat
fstp
mov
call
scas
xchg
inc
add
cmps
inc
ret
xor
popa
int3
test
dec
push
mov
stos
jo
inc
xchg
cmc
inc
scas
or
div
ins
std
icebp
int
inc
sub
mov
pop
in
sub
hlt
dec
arpl
push
cdq
or
inc
jmp
sbb
call
inc
push
nop
add
mov
xor
dec
jae
sub
or
push
pop
xor
pop
inc
adc
ret
add
cmc
cmps
stc
cmps
js
xchg
mov
inc
jae
xchg
inc
inc
inc
(bad)
imul
cmc
inc
dec
and
pop
pop
jle
jecxz
dec
hlt
es
inc
jnp
dec
cld
sub
pop
ret
xchg
sub
pop
and
mov
into
pop
retf
and
dec
out
jne
movs
je
add
mov
xchg
loopne
and
js
adc
ror
rol
pop
inc
and
mul
gs
xor
repnz
pop
inc
mov
push
fist
pop
sbb
adc
bound
in
bound
inc
push
cmc
cmp
adc
mov
ficom
add
mov
fstp
ret
sbb
jo
ret
inc
daa
je
and
sbb
div
mov
and
xor
or
pop
jmp
je
rcl
and
mov
add
xor
fdivr
xchg
mov
inc
movs
mov
es
add
idiv
cmp
dec
and
aaa
lock
xchg
mov
mov
ret
lock
mov
js
adc
push
sub
data16
push
cmp
mov
and
test
add
push
push
ret
call
mov
jne
sbb
pop
inc
out
mov
jne
retf
js
fdivr
jne
inc
jbe
add
xchg
shl
sub
adc
ror
dec
scas
or
jns
mov
xchg
xor
lahf
jp
pushf
fstp
sahf
add
mov
fld
in
stos
or
add
cwde
stos
enter
push
cmp
mov
lds
cmp
push
pop
out
jne
je
cld
rcr
mov
pop
push
rcl
sbb
xor
js
enter
ret
mov
ret
js
aas
inc
scas
(bad)
cli
ds
add
and
jmp
sbb
and
test
xchg
add
mov
(bad)
sbb
cmp
(bad)
aam
mov
sub
ret
cmp
imul
js
pop
sbb
fwait
mov
scas
icebp
sbb
popa
push
mov
mov
mov
dec
mov
shl
xchg
clc
mov
mov
retf
pop
inc
je
rol
mov
mov
loopne
cmps
iret
inc
add
sbb
mov
cmp
adc
ret
push
ret
push
cmp
sbb
pop
out
sub
imul
mov
and
sbb
sub
cmps
adc
out
arpl
adc
sbb
adc
mov
pop
or
mov
cmp
sub
call
outs
jle
push
adc
jle
pop
rcl
seta
data16
cmps
and
adc
jp
stc
mov
mov
xchg
std
ss
fldcw
cmp
xchg
icebp
mov
add
cmp
sti
cmp
sbb
das
xor
push
mov
in
add
mov
add
je
stos
dec
popf
int3
inc
test
mov
cmp
sbb
not
sub
mov
mov
adc
popa
arpl
add
or
xor
adc
sbb
je
dec
push
inc
mov
sub
lods
imul
jne
sub
movs
cmp
(bad)
mov
mov
xor
mov
lods
(bad)
lds
sbb
dec
jp
call
movs
pop
mov
jmp
xchg
shl
lods
sar
daa
mov
leave
xchg
xor
inc
jg
lods
inc
rol
cs
mov
push
je
adc
and
pusha
add
dec
nop
xchg
sub
mov
xor
and
jle
add
pop
icebp
cmp
mov
and
add
or
sbb
cmp
jecxz
adc
push
mov
jnp
(bad)
ins
loope
jle
jmp
fdivr
pop
mov
mov
icebp
loope
imul
cmp
(bad)
fst
push
je
call
mov
mov
pop
mov
jle
mov
inc
mov
mov
sub
clc
pusha
add
ror
or
(bad)
and
inc
xor
cmp
mov
pop
sub
mov
sbb
add
and
xchg
test
inc
pushfw
xor
fsub
sub
push
cmp
and
leave
pop
pusha
ss
adc
ins
ror
jecxz
out
mov
test
or
push
test
jb
cmp
xchg
ss
movs
and
cmp
or
xor
test
pop
inc
or
enter
ret
jns
push
into
xor
mov
xor
xor
add
add
add
sub
adc
adc
xor
sbb
mov
and
mov
sub
pop
xchg
aam
pop
or
bound
stos
loope
nop
and
std
xchg
mov
xor
pop
xor
xchg
push
dec
sbb
inc
lea
jmp
and
add
lea
or
inc
call
inc
pop
mov
fwait
xchg
ror
add
or
in
popa
add
jecxz
test
(bad)
mov
clc
aam
inc
into
add
push
xor
mov
jae
scas
cmps
bound
or
or
adc
jl
cmps
sbb
pop
mov
push
imul
pop
mov
adc
mov
enter
stc
inc
popa
iret
lods
inc
sbb
mov
gs
cmp
rol
inc
sub
jae
dec
xchg
enter
ror
and
xor
jo
or
mul
inc
dec
mov
mov
xor
inc
jbe
(bad)
ins
mov
cmps
in
pusha
ss
sbb
cmps
cmps
dec
call
jns
xor
jecxz
sub
nop
inc
(bad)
int3
cmps
scas
jp
sub
imul
mov
into
and
jmp
dec
(bad)
push
cmp
adc
pop
sti
nop
out
push
jmp
mov
(bad)
fwait
nop
hlt
in
lods
mov
push
push
cld
loope
or
push
jl
(bad)
mov
and
pop
sbb
cmp
inc
and
push
and
(bad)
shl
push
data16
xor
dec
jle
lods
xor
xor
shr
push
test
and
popf
cs
inc
or
arpl
xchg
fwait
retf
inc
fs
add
or
mov
test
ror
pop
ret
mov
add
xchg
popa
cwde
ret
enter
imul
sbb
leave
popa
jge
ret
nop
or
pop
xor
adc
jb
push
or
arpl
cld
pop
inc
(bad)
mov
lea
fmul
push
and
pusha
adc
sbb
push
leave
push
xchg
dec
movs
mov
push
xor
xor
call
add
in
test
dec
call
gs
cdq
aam
cmp
ret
mov
lock
sahf
aad
mov
or
sub
sub
retf
test
mov
sub
js
aaa
repz
push
popa
jmp
add
rcl
jo
push
es
sbb
or
sbb
cdq
(bad)
and
rol
popa
or
add
ret
adc
cmp
or
lods
lods
sbb
pop
enter
pop
call
dec
jbe
test
aad
(bad)
jp
xchg
fisubr
in
(bad)
jne
cmp
sub
dec
stc
xchg
xchg
xchg
test
rol
adc
mov
cmp
and
adc
xchg
fxch
and
add
mov
aam
xlat
xchg
and
call
xchg
and
sbb
mov
aaa
push
cmps
outs
add
mov
bound
inc
inc
pop
inc
add
mov
jb
cwde
stos
mov
lahf
fwait
add
pop
mov
scas
sbb
sub
inc
stos
ss
cli
hlt
mov
adc
cmp
loop
bound
mov
mov
test
adc
or
hlt
movs
repnz
xchg
pop
mov
daa
nop
or
jbe
mov
dec
inc
push
stc
loope
das
stc
jmp
mov
imul
or
mov
adc
xor
pop
inc
popa
add
inc
push
or
cmp
inc
loop
iret
jmp
jne
pop
(bad)
push
xlat
test
mov
clc
je
mov
or
retf
dec
lds
mov
dec
in
bound
fcmovnu
dec
cdq
aam
icebp
sbb
retf
pop
push
xchg
cdq
cwde
add
pop
(bad)
(bad)
mov
lods
in
mov
aam
(bad)
cmps
lods
adc
rcr
xchg
sbb
cdq
(bad)
add
adc
rol
or
sbb
imul
cmp
push
mov
sahf
icebp
mov
add
shl
dec
(bad)
adc
or
add
test
inc
aaa
stos
push
cmp
lea
and
cdq
push
xchg
(bad)
jmp
pop
dec
mov
ds
out
fiadd
pushf
mov
pusha
xor
mov
es
or
loope
pop
cwde
add
sbb
mov
xchg
push
enter
iret
repnz
imul
out
or
cmps
rcl
sbb
add
in
cvtpi2ps
jb
mov
xchg
pop
lds
mov
mov
push
cmps
jb
mov
fild
call
xlat
cli
cmc
repnz
ret
cld
fild
and
cdq
jmp
mov
push
lock
mov
sahf
pushf
test
mov
mov
fwait
add
add
sbb
dec
mov
adc
loop
dec
fisubr
push
mov
cmp
loop
scas
mov
xor
shr
and
xchg
and
or
lock
mov
mov
fsubr
in
add
mov
call
add
test
sti
int3
mov
cmp
sbb
inc
cmps
and
dec
in
hlt
mov
mov
popa
and
jge
xor
dec
push
inc
test
mov
jo
or
add
cmp
xchg
adc
movs
cmp
lock
jp
pop
outs
clc
adc
dec
pop
mov
int3
xor
jno
or
jmp
xor
cwde
cmp
mov
sahf
retf
pusha
pop
cmp
cmp
call
mov
call
adc
mov
(bad)
jp
add
cli
add
lahf
pop
jl
dec
mov
pop
jg
mov
mov
push
fdivr
lock
mov
(bad)
stos
xor
ins
cmp
gs
add
scas
sti
jno
shl
fwait
dec
jnp
arpl
sbb
fsub
inc
inc
rcr
ss
and
push
mov
sbb
ins
xchg
mov
cmps
sti
add
rol
jl
inc
pop
rcl
repz
xchg
retf
nop
lahf
dec
mov
in
mov
pop
xor
cmc
and
(bad)
pusha
jge
ror
mov
out
test
mov
idiv
retf
idiv
loop
sub
mov
imul
loope
push
mov
adc
push
push
out
sub
test
out
pop
mov
ret
sbb
lock
mov
inc
mov
(bad)
fcomp
sub
ds
bound
(bad)
adc
jp
push
sub
aam
dec
repnz
enter
sahf
scas
or
pusha
add
inc
xchg
rcr
add
mov
adc
add
add
push
jno
sar
fmul
push
in
lock
or
jbe
(bad)
add
enter
add
lods
ret
or
stos
dec
mov
jae
or
sub
(bad)
or
scas
pop
test
icebp
syscall
repnz
cmp
or
pop
cmp
add
(bad)
das
add
or
ror
fdiv
ficom
push
sti
jmp
enter
mov
scas
add
test
jmp
cs
or
or
and
pop
in
sti
push
adc
adc
xor
icebp
push
dec
pop
into
cvtps2pi
mov
iret
ret
inc
pop
scas
es
mov
in
cmp
sar
mov
popa
mov
in
hlt
cmp
enter
and
jne
cmc
push
arpl
inc
or
rcr
(bad)
xor
jb
inc
clc
lock
fst
and
lods
sbb
sbb
es
pop
xchg
adc
and
stos
shl
sbb
add
retf
sub
enter
shr
leave
xchg
sub
pop
fsub
call
add
add
test
mov
and
sbb
adc
xor
jbe
sbb
data16
and
push
sbb
sbb
imul
ret
(bad)
cld
call
mov
mov
popf
les
popf
call
xchg
pop
sbb
sti
or
and
repnz
pop
mov
lock
mov
cld
xchg
push
xor
jae
jmp
push
add
sbb
sub
ret
shl
pusha
mov
lods
jmp
and
mov
loopne
loope
or
mov
out
jb
mov
jecxz
shr
pop
sub
scas
xor
mov
and
xchg
dec
mov
and
jb
add
add
sub
xor
pop
push
sub
inc
sar
inc
adc
aam
xor
loopne
aam
add
mov
or
in
xor
or
and
pop
retf
cmps
popa
pop
jbe
jmp
and
add
sbb
adc
cs
jae
dec
add
int3
cmovs
scas
jae
bound
dec
sbb
sub
xor
xor
sbb
adc
dec
shl
jl
cmp
cs
cmp
repz
adc
dec
stos
adc
test
call
movs
pop
push
loopne
jle
cs
hlt
sub
xor
adc
pop
xchg
inc
imul
and
mov
push
sbb
pop
sub
int3
push
jg
inc
add
xor
cdq
jae
out
xor
mov
bsf
popa
xor
and
dec
add
outs
xor
jne
cmp
sbb
adc
pusha
or
xor
mov
xor
xor
push
movs
inc
icebp
out
adc
bound
(bad)
aad
outs
xor
xor
jmp
xor
dec
in
rcl
pop
rcl
xchg
call
inc
push
pop
add
dec
or
or
mov
jbe
sub
push
push
xor
push
retf
stc
imul
jmp
lahf
xor
and
aad
sbb
dec
xor
adc
adc
mov
xor
xor
out
xor
loopne
loopne
mov
lds
push
lds
bound
neg
daa
or
sar
dec
pop
cwde
out
xchg
sub
(bad)
push
fs
pop
stc
iret
pop
mov
pop
ja
pop
xchg
xor
and
aas
adc
(bad)
cmc
loope
and
push
jne
cmp
dec
or
push
das
cmp
das
mov
push
mov
daa
cwde
dec
mov
xor
icebp
adc
repnz
xor
ss
icebp
push
add
add
and
adc
and
call
push
push
inc
and
call
xchg
shl
outs
dec
inc
push
fs
push
pop
mov
add
push
gs
shl
xor
mov
mov
dec
jno
dec
pusha
daa
ja
jbe
or
loopne
cmps
push
or
ins
loop
ins
(bad)
imul
jb
std
shl
inc
rcl
(bad)
test
push
push
sbb
push
adc
push
cmp
push
or
ins
sub
sub
outs
out
cmps
jmp
je
std
push
jp
imul
add
pop
push
jbe
daa
push
pop
pop
(bad)
xor
mov
shl
mov
arpl
sbb
loopne
out
add
mov
aam
or
ror
je
push
jne
(bad)
fst
or
sub
push
cmp
pop
mov
adc
xor
adc
out
call
jnp
lods
cdq
sub
sub
xchg
xlat
xor
aad
dec
add
inc
ss
mov
stc
dec
add
push
jnp
aad
mov
add
add
(bad)
cmc
(bad)
inc
lds
addr16
push
pop
test
nop
mov
cmp
mov
push
(bad)
and
daa
pusha
neg
inc
lea
cmp
xor
iret
xor
xor
arpl
adc
imul
js
ror
mov
or
or
dec
dec
fsubr
mov
add
jnp
js
popa
pop
add
add
in
xor
jo
inc
addr16
cmp
add
mov
mov
mov
stc
mov
and
test
or
shl
rcl
(bad)
adc
dec
rcl
sbb
xchg
add
stos
inc
sub
cmps
pushw
ror
push
jno
cwde
test
or
sub
pop
iret
xchg
test
sbb
gs
enter
and
cwde
inc
lods
dec
nop
dec
rol
inc
daa
shl
add
ror
push
les
mov
adc
sub
test
stos
mov
add
inc
pop
xchg
div
mov
lods
rol
xor
dec
stc
xchg
inc
and
cdq
mov
sbb
jns
push
cmp
push
bound
sar
cs
xor
test
adc
xor
xchg
cdq
inc
fiadd
jp
pusha
sub
cwde
inc
ja
or
adc
rol
add
and
mov
push
(bad)
pusha
adc
add
out
or
loopne
add
out
and
or
aam
push
or
aaa
fld
lock
fmul
cmp
inc
mov
pop
and
adc
iret
xor
mov
loope
adc
pop
jne
push
push
jmp
call
and
inc
test
leave
mov
repz
test
push
fcom
mov
loopne
cmps
mov
cmps
sub
xor
push
pop
dec
mov
imul
push
xor
xchg
push
int
bound
or
int
inc
shl
(bad)
jb
lahf
add
add
sbb
jbe
inc
xchg
iret
shr
dec
push
adc
adc
scas
addr16
out
pause
pop
scas
inc
mov
repz
push
pusha
inc
neg
mov
xchg
push
cmp
inc
add
fwait
sub
cli
adc
add
in
addr16
mov
shl
jp
push
aam
pop
lds
mov
fldenv
dec
fwait
adc
pop
cmps
clc
lahf
pop
(bad)
inc
mov
in
cmc
cmp
cmp
add
dec
add
jnp
inc
sub
or
xchg
outs
aad
out
outs
mov
clc
scas
rep
push
mov
pop
push
mov
mov
add
test
pusha
inc
and
add
loope
mov
ja
inc
pop
push
add
sub
cmps
xchg
ror
xchg
daa
bound
and
lds
popa
stos
or
cmp
xchg
mov
loope
addr16
xor
aad
adc
adc
inc
ret
xchg
push
in
jecxz
xchg
xor
lea
mov
add
pop
popa
sbb
adc
add
addr16
(bad)
addr16
add
mov
sbb
loope
adc
ror
fisubr
pop
add
lods
fwait
jbe
stos
call
cmp
cmp
push
cld
mov
jnp
push
fldenv
jne
adc
lds
or
or
daa
cmp
adc
int
cmp
pop
pop
(bad)
in
js
jmp
iret
call
push
mov
mov
mov
shl
add
les
dec
rol
ficomp
sbb
adc
dec
xor
inc
add
rcl
cmp
mov
mov
lods
push
mov
aad
not
jge
retf
divps
cmp
xchg
xor
xchg
pop
sbb
and
or
pop
ret
sub
pop
push
mov
sti
mov
dec
call
iret
and
lahf
xor
loopne
pop
bound
adc
fmul
pop
or
jno
and
push
les
xor
iret
and
loopne
shl
ret
out
pop
cmp
out
fmul
call
push
loopne
and
mov
and
push
loope
ds
loope
mov
xlat
popa
mov
ja
jo
push
inc
loop
lea
push
jmp
mov
xchg
scas
inc
sbb
(bad)
jne
(bad)
ds
mov
sahf
out
or
popa
pop
push
jle
push
jbe
psraw
sbb
(bad)
rol
push
and
inc
push
mov
or
add
push
mov
fdiv
cmc
cdq
sbb
imul
jmp
loope
cmp
add
mov
jmp
jno
mov
inc
or
icebp
jl
or
repz
cli
mov
add
pop
cs
sahf
in
iret
add
xor
out
push
push
adc
in
fdiv
or
xlat
adc
and
inc
repnz
push
sub
repz
jecxz
out
int
push
jns
push
loopne
cmp
dec
test
inc
dec
mov
fs
add
fwait
inc
adc
adc
and
jb
mov
sub
pop
pop
mov
ret
inc
or
repz
rcr
mov
cld
call
dec
xchg
cvtps2pd
pop
add
cmps
int3
cdq
or
pusha
call
or
imul
or
and
and
add
cmp
dec
xchg
loopne
xor
adc
and
clc
or
lods
test
fiadd
push
inc
nop
and
in
iret
(bad)
push
dec
fsubr
pop
jl
or
sub
(bad)
loop
sub
cmps
lds
lods
pop
mov
loope
test
(bad)
sub
mov
pop
call
cs
shr
pop
fcom
dec
xchg
and
movs
dec
mov
inc
or
inc
and
add
lods
cld
add
pop
idiv
data16
popf
das
mov
addr16
push
sub
xor
push
ds
cmp
rcr
or
not
and
inc
sub
xchg
jne
sub
pusha
test
push
fadd
loopne
lds
ret
dec
xor
push
jbe
addr16
jbe
pop
xchg
loope
mov
imul
jecxz
inc
or
mov
and
mov
nop
pop
dec
sub
pushf
jne
add
xchg
jbe
jle
test
jo
les
dec
xchg
inc
push
push
call
in
mov
lds
jnp
inc
xor
mul
xor
adc
mov
js
pop
loopne
adc
pop
mov
ret
in
cmp
fs
mov
addr16
cmps
rol
adc
xor
and
jb
mov
and
mov
add
in
push
(bad)
ds
adc
jbe
(bad)
sbb
ins
mov
ja
xor
imul
or
sahf
xchg
pop
popa
test
jne
add
jbe
cmps
cdq
push
ins
call
cmps
pushf
jl
(bad)
js
pusha
shl
ins
xor
or
out
int3
cld
leave
or
push
and
inc
and
shl
push
fs
adc
and
push
stos
test
nop
aad
lock
sar
or
jge
inc
xchg
sub
mov
nop
and
lods
pusha
ror
cwde
mov
jns
adc
xor
add
mov
(bad)
cmps
arpl
aad
push
ins
test
jb
in
mov
mov
mov
pushf
sbb
sar
mov
sub
mov
bound
lea
shr
daa
dec
sbb
inc
cmovb
pop
cwde
add
jbe
or
and
jne
in
sub
loopne
add
ret
add
pushf
xchg
(bad)
pop
mov
ins
xor
iret
es
cmp
aad
call
int
shl
dec
lods
cdq
aad
arpl
call
fldcw
mov
cmp
jmp
cld
push
inc
ror
popa
cld
icebp
(bad)
adc
loopne
pop
jge
sbb
ss
inc
loop
ja
cmp
jns
pop
lahf
or
xchg
dec
scas
mov
test
jnp
dec
and
ja
add
mov
mov
mov
sub
rol
inc
je
push
fst
cmp
lods
outs
and
dec
or
add
retf
jne
retf
mov
sub
or
pop
inc
test
inc
or
cld
test
sub
inc
fild
adc
mov
or
mov
sub
pop
ret
push
dec
loope
rcr
repz
pop
retf
push
and
addr16
(bad)
hlt
mov
mov
adc
mov
pop
inc
aas
sbb
push
cmp
rol
inc
ds
sub
add
out
imul
popa
or
add
pop
and
scas
jns
sub
or
xchg
in
in
add
imul
test
es
dec
or
nop
xor
ror
dec
push
cmp
movaps
and
jo
sub
or
ret
adc
xchg
add
sbb
add
pop
or
xor
mov
push
ror
cmp
jecxz
(bad)
out
push
loope
dec
xor
or
enter
movs
mov
and
xchg
sbb
jp
dec
in
inc
adc
jno
add
xchg
or
adc
and
sub
adc
ins
add
imul
mov
inc
mov
movs
xor
adc
jl
inc
outs
push
lock
adc
and
inc
mov
sub
mov
or
jns
fmul
shl
xchg
xchg
mov
pusha
cs
aad
scas
xchg
sbb
test
add
mov
fild
dec
rol
pop
pusha
dec
sbb
jo
sbb
add
sub
mov
gs
sbb
adc
ror
test
jns
or
push
xchg
das
mov
test
mov
mov
dec
and
data16
leave
je
xor
call
sbb
add
add
movs
xor
and
test
push
repnz
movs
sub
xchg
mov
sbb
aas
or
lea
in
daa
inc
jmp
add
test
rol
outs
mov
add
sub
mov
pop
or
add
and
add
fwait
cmp
push
add
call
mov
pop
push
scas
js
(bad)
pop
mov
push
push
in
xor
pop
dec
les
es
mov
and
dec
sub
and
push
dec
test
xchg
sbb
ins
xlat
ror
js
mov
movs
sub
fxsave
mov
jge
adc
adc
mov
mov
add
movs
xchg
dec
xor
push
fcmovbe
or
cmps
xor
xor
fiadd
sbb
dec
jbe
gs
into
jo
mov
mov
xor
xchg
pop
idiv
ss
or
jo
idiv
mov
push
popf
xlat
(bad)
push
sub
shr
bnd
loopne
stos
lods
fwait
imul
add
or
ins
mov
outs
cwde
ret
inc
sub
mov
adc
xor
dec
cmp
and
xchg
bound
lds
pop
retf
repz
mov
mov
fstp
pop
mov
push
add
sub
jecxz
xchg
cmps
scas
fwait
jbe
mov
mov
dec
xchg
pop
xchg
xor
or
fcom
inc
pop
pop
ror
xchg
les
sbb
mov
sub
cdq
ret
lock
inc
int3
loope
cmp
or
inc
cmps
fdivr
mov
add
das
sub
data16
mov
mov
pop
js
pop
data16
jmp
repnz
cmp
or
jne
lock
sbb
and
ds
jo
cmp
mov
jb
push
cld
pusha
add
imul
sub
cmp
in
popf
cmp
adc
jno
add
mov
mov
cmp
rol
cmps
jmp
dec
(bad)
xlat
cmc
push
mov
jg
shl
ins
xor
push
jns
fdiv
pop
add
test
call
push
mov
ds
dec
fwait
mov
popf
push
or
xchg
aad
sti
and
addr16
xchg
mov
ror
push
add
push
pop
mov
cwde
lea
pushf
call
stos
sbb
jno
es
push
outs
ror
sbb
div
pop
loopne
lods
pop
fisubr
lods
stos
jp
or
mov
jmp
inc
inc
xchg
ins
mov
es
mul
stos
inc
adc
mov
out
or
ins
xor
icebp
ss
mov
arpl
jne
in
jecxz
push
out
ret
cwde
cdq
data16
test
sbb
call
jns
jbe
repz
or
push
pop
pop
xchg
ret
and
(bad)
mov
adc
lods
jbe
mov
popa
adc
add
and
daa
add
aas
jnp
ins
into
xor
fiadd
inc
cmps
jge
out
sbb
sahf
jno
out
(bad)
and
jb
fld
or
test
sbb
mov
out
addr16
jg
inc
sub
pop
imul
add
inc
cwde
adc
outs
dec
xlat
cmp
dec
mov
push
and
pop
fwait
push
jl
cmc
ja
xchg
mov
lods
ret
sub
sbb
dec
fadd
jle
es
push
jg
test
clc
jle
nop
sub
mov
mov
add
call
and
popa
sti
les
shl
and
jae
add
dec
or
pop
je
fst
test
idiv
xor
pop
xchg
xchg
and
push
movs
ror
dec
jle
call
and
jle
xchg
push
outs
cwde
adc
add
enter
rcr
push
adc
add
inc
cmp
dec
sti
ret
cmp
xor
cmp
sbb
cmp
js
neg
adc
movs
lea
cmp
push
push
inc
imul
xchg
add
js
mov
adc
clc
pop
xlat
arpl
test
jne
lock
xchg
or
sub
retf
enter
mov
sbb
js
adc
outs
daa
mov
pushf
pop
sub
mov
clc
xor
jecxz
stos
loop
jmp
adc
mov
out
clc
add
sbb
lods
inc
sbb
push
pop
xor
sbb
push
fld
pusha
mov
rol
mov
or
pop
mul
int
pop
adc
lea
fmulp
call
clc
(bad)
jmp
push
sub
sub
popf
movs
outs
scas
test
xor
add
shr
mov
movs
adc
and
and
push
stc
mov
pop
inc
xchg
out
pop
jbe
xchg
adc
lock
cdq
xor
cdq
lock
jbe
cmp
nop
into
movs
push
wbinvd
xchg
mov
xchg
idiv
pop
and
xor
jns
mov
imul
xchg
or
dec
lods
clc
xchg
cmp
or
xchg
movs
mov
adc
add
push
or
mov
in
or
ret
sbb
adc
test
or
add
push
or
adc
mov
cld
add
dec
inc
fild
aam
pop
cwde
loope
pop
push
sbb
popf
mov
cwde
cmp
xchg
add
inc
pop
mov
fucom
call
inc
stc
pop
icebp
test
mov
xchg
add
cdq
or
inc
jnp
or
adc
nop
push
or
out
dec
int
mov
mov
sbb
popf
(bad)
leave
pop
fistp
sub
push
jns
sub
addr16
imul
fdiv
aas
imul
jns
mov
cmp
lock
push
or
push
inc
xchg
jo
xchg
lahf
mov
lahf
gs
xchg
or
or
dec
mov
pop
loope
adc
and
mov
jp
sbb
movs
aam
sbb
jns
repz
cdq
mov
pusha
mov
mov
(bad)
fs
add
add
sub
fwait
and
cmps
aad
or
mov
mov
push
loopne
cdq
push
or
xor
jo
inc
ficomp
pusha
psadbw
movs
dec
cmp
(bad)
adc
test
xlat
movs
scas
jae
sbb
cdq
call
test
sub
stc
gs
inc
inc
inc
sbb
jns
inc
xor
xor
ret
mov
add
shl
sbb
push
nop
jg
xchg
mov
ss
add
call
pslld
test
lock
sub
and
rcr
stos
xor
ss
adc
stos
cmps
jp
test
add
or
jo
jp
adc
pop
rep
lods
sub
adc
mov
xlat
adc
cdq
lock
sahf
nop
push
adc
mov
and
mov
mov
arpl
mov
loop
pop
push
fimul
or
xor
inc
inc
sub
out
pop
cmps
mov
pop
jmp
add
inc
imul
adc
and
fwait
mov
push
int3
xor
inc
pusha
movs
push
sub
clc
inc
mov
sbb
test
mov
push
add
in
int
popf
arpl
test
test
mov
add
jbe
sub
lods
cmp
(bad)
jo
gs
stos
cmps
fst
repz
call
sbb
rcr
loopne
sar
or
fidiv
call
mov
pop
mov
push
scas
mov
cmc
push
arpl
adc
jb
imul
add
js
(bad)
xchg
gs
jp
dec
dec
cmp
jns
imul
jnp
imul
test
(bad)
cli
jne
rol
jge
mov
call
add
fs
mov
dec
mov
jnp
mov
cdq
adc
push
(bad)
mov
adc
popf
repz
xor
inc
push
in
pop
inc
jne
pop
xchg
mov
inc
ja
mov
arpl
ja
fst
fadd
and
sub
lahf
sub
sbb
test
adc
stos
stos
mov
adc
add
or
or
stos
ret
and
movs
leave
xchg
xchg
daa
popf
ret
and
sbb
movs
mov
inc
cmp
rol
jle
call
adc
stos
or
add
and
push
push
jge
push
xchg
inc
call
das
add
pop
cwde
ror
jns
add
jbe
mov
or
lods
sub
(bad)
pop
pop
mov
daa
and
inc
repz
fldenv
shl
push
mov
dec
mov
sub
or
retf
mov
out
xchg
retf
xor
les
lock
jl
shr
push
xchg
and
mov
xor
add
add
fstp
pop
and
push
bound
mov
ret
lods
outs
lods
ret
cmp
js
and
outs
movs
ret
xor
in
mov
inc
test
xchg
and
mov
gs
jns
cmps
sbb
jmp
jl
leave
xor
mov
dec
xchg
lahf
jl
or
retf
or
mov
and
xchg
sub
shl
ret
adc
(bad)
cwde
or
lods
ret
push
inc
enter
dec
dec
shl
jmp
and
dec
jle
mov
push
int
popa
and
rcl
ins
leave
fld
mov
inc
and
sbb
lahf
out
scas
xchg
sub
pushf
test
dec
mov
in
movs
fcomi
or
mov
mov
push
jns
jg
int3
int
cwde
add
bound
js
mov
pop
(bad)
int3
adc
xchg
call
and
(bad)
sub
pop
in
adc
test
inc
cmp
jne
mov
cmp
push
popf
xchg
jl
mov
or
adc
push
bound
ror
adc
cs
or
pusha
mov
jne
xor
inc
popf
push
aam
std
retf
adc
mov
aaa
dec
sub
pop
xor
sub
imul
jle
push
mov
push
jg
add
jg
cmp
fidiv
dec
xor
rcr
and
cmps
nop
mov
and
retf
repz
in
cmc
or
mov
mov
(bad)
ss
jle
sbb
test
out
cmp
push
mov
pop
jmp
add
cmc
add
and
push
xchg
jge
les
shl
aas
add
mov
(bad)
fild
sub
loope
mov
sbb
and
movs
add
ficomp
int
into
lea
push
rcr
ds
and
ror
mov
and
xor
icebp
(bad)
fsubr
jns
xchg
or
adc
repnz
cmc
push
int
(bad)
sbb
das
and
inc
nop
add
sub
sti
cmp
dec
into
das
mov
dec
cmc
std
mov
jo
pushf
xchg
or
stos
inc
out
clc
and
nop
add
pop
add
loopne
dec
(bad)
mov
or
sbb
popf
retf
out
sub
sbb
loop
fdiv
bound
or
in
sub
xor
mov
pop
jle
mov
call
adc
mov
xor
xor
call
mov
xchg
fistp
(bad)
mov
call
shr
in
gs
push
mov
dec
push
and
push
in
xor
ins
push
sub
sub
or
ret
je
xchg
daa
outs
sbb
call
add
mov
and
cmp
inc
ret
mov
ret
mov
sbb
mov
aad
in
das
mov
repnz
fdivr
in
aam
add
shl
or
sub
mov
jbe
popf
xor
xchg
push
arpl
sbb
scas
sub
ret
mov
mov
push
mov
jmp
scas
lock
xlat
push
icebp
or
lock
and
in
adc
add
and
push
leave
outs
icebp
shl
dec
in
and
inc
ret
out
sbb
jae
icebp
and
cld
push
lock
xor
sbb
and
sbb
fisttp
jl
adc
mov
and
mov
adc
lock
push
rol
icebp
iret
pop
icebp
sbb
in
pmaddwd
jg
and
pop
lahf
cmc
rol
pop
mov
mov
not
adc
adc
dec
loopne
bound
sbb
cmc
icebp
js
out
out
nop
push
mov
stos
ins
dec
sbb
adc
xchg
das
ins
ret
inc
outs
daa
jnp
pop
push
inc
cmp
data16
out
and
in
xlat
(bad)
and
cs
dec
outs
stc
adc
mov
neg
cmc
outs
setae
neg
xchg
add
xor
mov
cli
cmps
scas
push
jne
pop
popf
loop
jne
push
test
mov
jl
inc
push
adc
dec
out
iret
sbb
and
int3
jns
mov
add
dec
out
mov
daa
jp
fnstenv
hlt
xchg
inc
mov
stc
add
or
inc
sub
add
add
add
add
or
add
leave
adc
enter
test
pop
and
mov
lds
ret
mov
inc
xor
inc
mov
fs
xchg
sub
pop
leave
mov
retf
xchg
xor
cdq
dec
mov
int
aaa
push
loop
leave
mov
dec
pushf
xor
or
xor
ret
mov
mov
inc
mov
cmp
movs
iret
stos
pop
mov
je
mov
xlat
lods
pusha
ret
mov
dec
jb
adc
jnp
ins
shl
push
lods
fnstsw
retf
fidivr
retf
popa
mov
jb
cmp
gs
(bad)
ret
and
les
fbstp
xchg
retf
(bad)
jg
jmp
push
(bad)
jb
dec
pop
jbe
shl
call
sub
xlat
jmp
clc
dec
(bad)
mov
out
frstor
cmp
mov
cmp
push
mov
xchg
movs
imul
mov
in
je
mov
call
(bad)
fcomip
ins
sti
mov
in
lods
push
pop
dec
repz
cmps
fld
push
cld
inc
sub
xchg
imul
sbb
xchg
push
inc
mov
inc
test
test
mov
and
cmc
loope
xor
xlat
sbb
mov
jecxz
or
mov
dec
das
ret
pop
jmp
ja
sbb
jbe
mov
test
xchg
push
jbe
jecxz
inc
cmp
xchg
mov
xor
jns
adc
and
pushf
pop
push
add
pop
inc
dec
xchg
cwde
push
xchg
xchg
popa
call
shl
sub
lahf
xchg
push
(bad)
cmp
mov
movs
and
dec
addr16
push
and
movs
lahf
and
xchg
jmp
sahf
shl
jmp
pop
mov
pop
sahf
push
(bad)
(bad)
sbb
mov
outs
loop
gs
jbe
jmp
int3
(bad)
sub
popf
lods
(bad)
and
jmp
ins
mov
jl
imul
popf
xchg
mov
and
push
jmp
jmp
inc
mov
or
scas
mov
into
inc
inc
mov
jle
adc
mov
ret
mov
data16
cwde
pop
scas
fdivr
jmp
add
and
push
lds
aam
lahf
jl
xchg
pop
ins
imul
rcr
repz
iret
out
push
ins
jno
inc
jmp
nop
lods
hlt
shl
dec
sub
sbb
mov
pop
sbb
int
ja
mov
pop
mov
or
mov
sub
test
repnz
and
jns
retf
cmp
lea
sbb
add
and
cmps
jle
pop
adc
loop
mov
sbb
xor
stc
xchg
popa
xchg
xchg
stc
adc
xor
cmp
or
int
(bad)
movs
into
mov
jno
mov
shl
push
and
jns
mov
rcr
paddd
loopne
xchg
xchg
nop
lahf
addr16
xor
shr
adc
inc
pextrw
or
dec
jbe
iret
and
iret
mul
test
xor
mov
add
in
mov
mov
cs
sar
das
sub
inc
rcr
fcmovnbe
push
xchg
(bad)
adc
jne
data16
push
hlt
push
dec
add
loope
pop
fs
add
fdiv
(bad)
fsub
adc
xchg
mov
and
push
xor
mov
sub
bound
repz
loopne
inc
inc
movs
cdq
ins
push
inc
adc
(bad)
jb
lds
scas
jno
jp
add
popa
and
or
xor
jle
sbb
rol
aas
hlt
popa
inc
or
inc
xor
pop
push
cmp
inc
jo
sbb
push
les
pop
jne
xchg
sub
popa
sub
adc
test
hlt
int
xor
cld
and
and
add
or
cmc
push
and
iret
or
(bad)
jge
xchg
mov
and
jmp
ror
inc
pop
lahf
xor
inc
aad
xor
jo
sbb
lods
mov
(bad)
repnz
adc
not
jecxz
loopne
repz
cs
retf
mov
jb
pop
ret
adc
leave
jl
sbb
mov
and
jp
or
(bad)
daa
out
xor
sub
loope
fcomp
mov
jne
add
aad
xchg
mov
movs
loop
or
mov
mov
jae
inc
dec
test
and
inc
(bad)
jle
repz
rcl
sub
sbb
push
xor
dec
xor
jmp
and
dec
cmc
stos
jle
stos
mov
sti
mov
mov
rol
xrelease
and
jl
rcr
(bad)
cdq
dec
xor
sub
cmp
pop
jno
icebp
jo
push
shl
xor
adc
ret
xor
es
add
jb
lods
(bad)
into
pop
pusha
and
dec
(bad)
loope
movs
imul
rdtsc
in
call
or
inc
push
and
or
cwde
pop
aas
sub
mov
dec
stos
push
iret
icebp
mov
and
jnp
shrd
mov
stos
sbb
lock
nop
push
add
stos
inc
mov
hlt
movs
mov
push
int3
scas
and
(bad)
lods
rol
sti
add
fsubr
pop
setp
(bad)
(bad)
aad
dec
adc
xchg
dec
js
ror
lods
mov
sub
jp
push
int
push
movs
in
les
mov
sbb
(bad)
mov
jmp
scas
js
fimul
jp
sbb
imul
adc
adc
push
mov
retf
shl
jmp
jb
mov
fwait
pop
call
shl
jne
cmp
jb
nop
cmp
inc
dec
jle
push
mov
test
arpl
sub
lock
lock
dec
mov
add
pop
in
mov
xor
push
ror
test
cwde
adc
ret
jo
xor
inc
cmc
xchg
aam
push
adc
and
dec
cld
or
in
dec
push
not
mov
popa
sbb
add
cli
sbb
xchg
mov
xchg
xchg
and
xor
pusha
cmp
add
pop
sbb
add
xchg
xchg
mov
mov
sbb
inc
jbe
or
inc
dec
push
repnz
cmp
(bad)
ss
push
sub
call
and
jmp
pop
mov
ror
mov
cmp
jbe
ret
mov
sub
sub
jns
inc
fucom
mov
cmp
mov
or
jo
mov
and
aas
int3
push
aam
xor
jmp
imul
cmp
inc
test
pop
std
cdq
jmp
div
pop
dec
je
inc
or
arpl
xchg
ins
int
mov
sbb
in
pop
xchg
dec
dec
inc
lock
xchg
add
ins
ret
shl
push
sbb
sbb
mov
out
mov
sub
(bad)
ja
mov
mov
mov
cmp
out
ds
or
push
adc
call
inc
stc
mov
cmps
scas
sub
jno
mov
push
mov
mov
outs
jnp
jmp
retf
xchg
xor
mov
pop
fidiv
mov
cwde
ins
rol
pop
gs
arpl
jmp
pop
clc
(bad)
enter
cmp
cwde
or
mov
cmps
ds
ss
mov
adc
dec
push
dec
jle
or
cmp
es
jne
jnp
movs
bound
cmp
dec
add
in
test
jnp
ja
or
retf
sub
mov
test
(bad)
push
add
fldenv
mov
stos
push
dec
pop
mov
push
rcl
mov
test
mov
and
nop
sub
xor
ret
xor
sar
add
aam
jle
lods
mov
fcom
(bad)
sbb
div
sbb
mov
jl
jbe
daa
in
in
sub
ins
loope
aaa
jmp
xlat
jno
dec
push
dec
pusha
or
mov
dec
or
xor
dec
inc
sbb
mov
inc
mov
push
xchg
push
js
jbe
ja
xlat
dec
out
inc
jae
cmps
popa
push
nop
add
shld
sti
xor
push
clc
test
ins
daa
jbe
or
aaa
mov
sub
xor
xchg
dec
sbb
sub
addr16
sbb
jge
xchg
jge
ror
mov
or
fdivr
gs
loop
jle
cmps
and
adc
fs
loop
ficom
mov
outs
cmp
or
and
mov
jnp
cmp
test
(bad)
jnp
enter
cmp
js
push
xor
out
push
mov
mov
push
xor
push
outs
cmp
(bad)
ror
fdiv
pop
ja
sub
xchg
arpl
pop
imul
sub
jle
cwde
add
jg
xor
leave
lock
add
or
mov
xchg
fs
les
pop
mov
jnp
inc
add
cmp
adc
cwde
sub
push
sbb
xchg
sbb
cmp
or
rol
data16
mov
dec
add
cmc
js
lock
sub
cmp
das
lahf
xchg
addr16
ror
mov
sbb
push
mov
jg
rol
jo
jbe
pop
movs
push
fcomp
test
jo
fisttp
pop
xlat
sub
jl
xor
xchg
mov
or
repnz
jns
out
xchg
xchg
(bad)
je
add
xor
mov
mov
mov
outs
mov
jae
in
and
lock
or
test
mov
jo
sbb
in
scas
or
adc
xchg
jecxz
pop
in
sbb
cdq
xor
xchg
add
(bad)
div
loope
sbb
(bad)
and
sub
mov
dec
leave
nop
mov
not
imul
loopne
cmps
add
mov
stc
xor
add
test
add
mov
fbld
adc
pop
and
mov
js
and
pop
clc
sbb
mov
inc
div
fcom
jg
push
push
cwde
sub
jns
jns
mov
mov
cwde
(bad)
cmp
cmp
cmp
push
aad
aam
or
in
xor
repz
aam
dec
jae
add
xor
xchg
jmp
or
add
cdq
dec
dec
adc
shl
rol
push
pushf
div
int3
sub
leave
sub
daa
div
cmps
dec
ds
nop
push
cli
mov
or
push
add
cdq
mov
or
fdiv
imul
call
ss
inc
or
lock
or
lahf
sti
test
push
or
call
mov
push
lock
fwait
push
cmps
add
jns
xor
nop
cwde
sbb
popf
push
inc
and
bound
xor
outs
call
push
mov
pmuludq
xor
mov
loopne
pop
aaa
out
movs
mov
movs
mov
or
xor
or
push
test
xchg
mov
xchg
jno
xchg
shl
xchg
addr16
stos
add
push
and
add
cli
cmps
jo
jle
cdq
add
hlt
pusha
xchg
outs
mov
inc
or
mov
fisub
xchg
cld
jmp
nop
shl
xor
xor
pop
or
test
mov
fwait
or
dec
inc
je
cmp
push
mov
pop
cmps
mov
jp
lods
cli
stos
mov
imul
or
dec
mov
mov
sub
test
and
xchg
add
loopne
mov
lods
push
dec
push
call
jbe
(bad)
stos
sbb
xor
jbe
push
lock
ret
adc
cmps
in
mov
inc
imul
cmp
add
sahf
repz
neg
push
stc
fisubr
jmp
inc
xchg
xchg
adc
test
add
movs
or
pop
mul
mov
dec
mov
jmp
jmp
and
cli
jns
sbb
xchg
scas
mov
mov
shr
dec
scas
jp
or
test
dec
jbe
cmp
dec
test
add
jge
dec
push
pop
pop
xchg
sub
mov
mov
jecxz
mov
es
and
mov
xlat
test
xchg
dec
shl
xchg
push
or
inc
adc
add
mov
xor
or
add
call
add
ror
sbb
push
test
xchg
(bad)
aam
or
jns
mov
mov
cmp
popa
pop
lds
cdq
retf
out
push
dec
xor
dec
adc
sub
aam
pop
stos
mov
jo
lahf
(bad)
jmp
mov
mov
loopne
neg
add
cmps
dec
fs
xor
or
(bad)
std
(bad)
dec
add
mov
(bad)
test
cmp
test
xor
or
mov
cs
or
jno
mov
stos
fucomi
ds
sbb
inc
rsqrtps
mov
push
add
or
aas
push
pop
je
lahf
mov
or
jge
mov
call
pop
dec
scas
bound
add
enter
cmp
fwait
mov
(bad)
dec
shl
iret
sub
xor
data16
add
sahf
sti
popf
cmp
jp
sub
sub
inc
push
fsub
or
cdq
cmp
pop
sbb
loopne
xor
push
test
sti
fistp
sub
imul
and
push
hlt
lods
and
sub
call
adc
stos
mov
sub
push
cdq
lds
pop
or
jecxz
or
or
in
in
sahf
stc
mov
fisub
inc
and
dec
outs
sub
xchg
inc
add
inc
push
imul
pushf
(bad)
js
sub
add
xchg
jg
retf
inc
fsub
sub
add
add
lds
and
mov
stos
push
sbb
adc
jno
rcl
add
int3
lds
jp
or
cld
adc
pop
push
retf
lea
lods
mov
or
push
sahf
sub
or
js
daa
jne
or
or
or
lods
iret
sahf
nop
iret
add
push
jge
sti
int3
iret
cmps
mov
cmps
ror
dec
ror
dec
xor
enter
(bad)
pop
sbb
int3
(bad)
pop
lds
fdiv
fadd
retf
shr
loop
leave
and
dec
inc
ins
jmp
jo
mov
cld
retf
(bad)
ja
jb
dec
jl
gs
mov
mov
or
fst
dec
sub
push
sub
dec
jge
dec
sub
adc
push
mov
pop
add
adc
pop
adc
shr
shr
shl
shl
dec
inc
mov
shr
mov
xor
je
aam
int3
mov
lea
ins
int3
push
or
lock
cmp
fst
xchg
popf
fst
mov
mov
xchg
pop
arpl
push
mov
sbb
xchg
push
add
js
jb
(bad)
mov
push
dec
cld
adc
iret
jo
iret
mov
mov
inc
rol
outs
jl
daa
mov
lea
int3
sbb
dec
retf
jo
inc
ins
cmc
lods
or
fstp
popf
fstp
mov
dec
dec
fstp
xor
mov
xor
sub
(bad)
and
(bad)
imul
sub
pop
ror
mov
scas
loopne
rol
inc
or
inc
or
xchg
inc
and
mov
cmp
int
mov
imul
xor
xor
arpl
loope
adc
and
loop
out
loope
pop
loop
ds
int3
dec
mov
ins
in
das
inc
mov
sbb
nop
mov
in
push
adc
pop
stos
addr16
jno
fbstp
add
lock
xor
jg
fucomip
cdq
sahf
fcom
mov
dec
or
or
sar
push
dec
jb
inc
pop
sub
or
and
into
loop
ret
xchg
jne
pop
adc
rcr
mov
in
xor
rcl
jbe
in
in
add
sbb
jl
out
inc
pop
mov
fbstp
or
fs
jnp
gs
cli
jnp
lea
lods
in
repz
pop
cmp
and
adc
mov
bound
pop
loop
(bad)
out
xchg
pop
mov
(bad)
stc
aad
xor
sbb
sar
repnz
int
push
call
test
mov
pop
add
jmp
or
std
or
or
jns
je
push
jg
bound
sbb
fsub
mov
outs
aad
(bad)
sub
pushw
out
add
bound
out
(bad)
sbb
pop
push
inc
and
test
sub
sub
xchg
push
push
call
xor
add
dec
add
loope
ja
(bad)
jo
and
xchg
mov
push
add
je
add
in
daa
loope
test
push
dec
jmp
jmp
shr
add
in
jmp
sbb
cmp
cmps
push
sar
mov
inc
or
jmp
cmp
add
mov
xchg
push
inc
sahf
bound
dec
jo
lock
ins
push
hlt
sahf
test
or
pop
loop
jmp
sahf
ret
sub
and
das
shl
into
add
and
pop
adc
ret
cmp
mov
das
hlt
push
push
std
nop
mov
adc
aad
adc
iret
and
not
sbb
jne
outs
inc
dec
xlat
mov
push
test
sbb
cs
xor
sub
in
jge
in
xor
repz
lock
mov
mov
repz
(bad)
int
shl
test
out
fsubrp
jno
dec
xor
lds
scas
rcr
cli
fwait
das
out
lahf
sub
push
out
fcomip
retf
ins
jge
sub
lods
cli
aas
scas
stos
clc
push
or
cli
repz
retf
mov
mov
inc
ret
mov
cld
pop
lahf
popa
(bad)
jg
push
ror
imul
and
shl
inc
test
adc
sar
rcl
stc
push
call
pop
rcl
fcom
jecxz
xor
push
xchg
dec
das
sub
popa
leave
jb
dec
cwde
xor
enter
and
cld
in
aam
(bad)
adc
sbb
outs
add
xchg
int3
sbb
rcl
push
pop
mov
add
add
sbb
push
loopne
mov
add
fwait
shr
mov
aam
pusha
imul
or
pop
and
xchg
inc
fmul
icebp
into
pop
rcr
shl
push
ja
pop
cmp
mov
pop
ss
es
(bad)
jb
enter
cmps
mov
aas
jle
cli
cmp
and
(bad)
iret
mov
jns
test
(bad)
or
lds
lods
pop
sub
cli
push
sub
add
sub
nop
enter
out
popa
call
pop
addr16
sar
adc
lds
data16
sbb
pop
xchg
sub
pop
or
ins
mov
in
je
fcmovu
cmp
adc
(bad)
sbb
push
inc
sahf
cdq
cmps
cmps
mov
mov
mov
int
fidivr
sbb
lods
loop
jb
cs
xor
arpl
cmp
add
scas
xor
push
cmp
push
sbb
lahf
jl
inc
dec
xor
and
or
jp
movs
xchg
jge
fcmovnb
mov
xchg
dec
ds
aas
inc
xor
and
fisubr
sub
jo
sub
cmp
shr
mov
maxps
dec
das
adc
in
outs
and
in
inc
mov
aas
sub
cmp
push
je
inc
add
out
jle
popa
xchg
dec
sub
mov
mov
jge
and
sub
mov
(bad)
push
jge
mov
int3
dec
dec
or
retf
pop
push
cmp
nop
mov
jmp
inc
inc
inc
adc
cmp
mov
mov
and
mov
pop
inc
lss
outs
sbb
ss
inc
pop
jecxz
(bad)
jns
movs
cmps
enter
addr16
mov
mov
ror
hlt
sahf
js
add
sbb
push
mov
sti
jmp
add
rcl
pop
popa
in
mov
pop
pop
sub
or
inc
or
sub
mov
mov
jecxz
cmp
arpl
shl
pop
lahf
dec
jmp
cdq
test
xor
call
inc
or
sub
inc
fistp
or
mov
lods
mov
inc
adc
ss
or
jmp
call
loop
mov
lods
jbe
xchg
scas
mov
add
inc
push
jmp
pushf
lock
(bad)
fnstenv
call
lahf
(bad)
idiv
pop
jp
stos
sahf
xchg
adc
stos
retf
rcl
xchg
xchg
test
outs
sbb
xor
xchg
cmp
cwde
into
(bad)
(bad)
scas
outs
mov
cwde
inc
mov
mov
inc
and
mov
stos
mov
addr16
jge
ds
jmp
push
dec
pop
adc
push
std
dec
(bad)
mov
adc
push
adc
jae
icebp
bound
mov
mov
cwde
outs
jge
or
mov
test
clc
rol
lock
mov
dec
jp
loopne
(bad)
cmp
pop
dec
jnp
sti
(bad)
stos
ja
js
inc
adc
sar
xor
or
retf
(bad)
mov
enter
cmp
pushf
add
out
and
dec
xor
lock
dec
loopne
and
xchg
and
sahf
and
or
loop
loopne
pop
cmc
cmps
(bad)
adc
pushf
mov
jns
test
jnp
and
or
mov
pop
fcom
out
jnp
pavgw
and
nop
and
or
inc
pop
jmp
xor
inc
adc
and
and
cmp
mov
cmp
sbb
leave
dec
ret
adc
or
sbb
movs
mov
pop
outs
push
mul
imul
xchg
mov
or
add
call
or
mov
data16
js
push
cmps
and
cmp
push
js
and
ins
call
dec
push
inc
push
and
sbb
cmp
cmp
into
mov
popa
das
(bad)
int3
sbb
sbb
sub
(bad)
dec
mov
inc
mov
xchg
repz
push
adc
call
inc
test
add
in
test
pusha
xor
push
pusha
add
je
movs
push
adc
pop
sbb
xchg
fs
cmp
cmp
int3
dec
dec
jo
adc
cmp
mov
pop
out
add
xor
dec
and
or
leave
xor
cli
loope
adc
nop
xchg
add
push
in
xor
pop
nop
push
mov
or
aam
es
dec
mov
jae
mov
mov
jb
jo
lods
xchg
mov
ret
popf
leave
push
(bad)
loopne
or
dec
sti
jmp
inc
js
test
pusha
or
jecxz
xchg
push
addr16
push
mov
xchg
and
dec
es
ss
cmp
adc
and
jne
inc
adc
dec
adc
xchg
lods
fisub
mov
mov
fstp
add
jp
rcr
or
stos
xor
push
xchg
cmp
xchg
mov
push
out
retf
xor
and
dec
sub
movs
xchg
sub
(bad)
sub
test
movs
ficomp
imul
mov
mov
repnz
cmps
mov
rcl
dec
(bad)
mov
test
imul
lock
retf
sbb
cmp
ja
push
enter
and
cmp
shl
test
dec
leave
in
sar
mov
xor
outs
push
add
call
sbb
mov
or
jmp
mov
mov
xchg
cmp
sbb
daa
retf
pusha
xor
mov
imul
fmul
loope
js
popf
sbb
cmp
loope
(bad)
cli
pusha
jns
cwde
inc
and
pop
mov
add
js
mov
pop
repnz
repz
pop
lahf
popa
or
sub
ss
xchg
leave
add
movs
pop
(bad)
dec
mov
and
mov
ror
mov
retf
jmp
push
sub
mov
aas
mov
fdivr
(bad)
es
(bad)
xlat
pop
xchg
(bad)
test
(bad)
leave
ror
imul
jns
or
adc
sbb
popf
jmp
mov
mov
sbb
aam
ds
arpl
shl
and
and
mov
pop
sub
push
pusha
or
add
out
js
(bad)
mov
sbb
push
pop
pop
(bad)
mov
jp
xor
push
movs
cmp
call
std
mov
sub
cmp
push
je
outs
pop
pop
push
cs
dec
cdq
ret
mov
mov
mov
cwde
xchg
shl
adc
(bad)
cmp
lds
adc
adc
fcom
adc
jmp
loop
lock
or
and
leave
mov
mov
add
and
loope
mov
and
xor
mov
cdq
xchg
sbb
or
lods
repz
cmps
pop
and
push
or
sub
or
adc
mov
jnp
std
push
leave
fwait
cdq
psrad
jne
mov
add
xor
loopne
xchg
sub
sar
mov
mov
add
sbb
cmc
call
dec
daa
xor
fadd
or
add
and
in
mov
dec
cmp
ret
jecxz
nop
ins
out
mov
int3
pop
and
inc
xchg
push
push
push
les
scas
lea
or
loop
sub
inc
sub
int3
repz
je
cmp
test
icebp
inc
mov
push
sub
adc
ja
xor
or
rol
cmp
mov
jecxz
ds
mov
push
mov
mov
jmp
mov
jmp
xchg
sbb
add
add
push
push
repz
shr
js
sar
in
mov
mov
and
or
rcl
add
lock
and
daa
sbb
or
add
pusha
add
pusha
cmp
clc
test
add
enter
sar
pusha
add
add
ds
mov
fs
xchg
and
add
rcr
ret
pop
adc
sub
jo
sub
les
add
nop
adc
aas
or
sbb
nop
add
lds
adc
rol
add
inc
adc
sbb
cdq
scas
pop
and
ret
es
mov
popa
mov
ret
ret
adc
xchg
sub
shr
rol
inc
or
xor
popa
and
mov
cmp
das
push
inc
add
mov
scas
jmp
nop
mov
push
js
daa
add
js
es
dec
inc
inc
mov
add
sar
add
or
ret
enter
mov
call
inc
cmp
add
dec
add
xor
add
cmp
or
fwait
adc
jnp
scas
jnp
nop
loope
and
(bad)
jp
inc
or
aad
dec
sub
movs
cmps
push
(bad)
inc
popa
inc
dec
scas
xchg
add
jge
push
icebp
stos
or
inc
inc
push
arpl
or
add
add
and
lock
nop
add
xchg
repnz
add
push
js
inc
dec
leave
jne
movs
mov
mov
pusha
stos
inc
xor
or
cli
retf
cmps
jnp
js
(bad)
mov
mov
and
add
retf
and
mov
mov
mov
les
inc
inc
xchg
lods
int3
popf
xchg
cmp
sub
inc
add
pop
imul
pusha
add
cmp
xchg
adc
cmp
stos
xor
xchg
ss
push
pop
xchg
adc
test
push
xchg
add
shl
lock
lods
inc
or
add
test
adc
ret
cmp
cmps
imul
in
retf
xlat
xor
adc
movs
movs
and
and
xchg
retf
je
inc
bound
adc
int3
cmp
lds
int3
sub
add
adc
mov
test
cs
arpl
and
fdiv
enter
mov
xor
repnz
cmp
mov
add
push
xchg
xor
cmp
cmc
pop
dec
mov
push
fild
pushf
dec
sbb
cld
pop
shl
adc
scas
retf
xor
mov
add
mov
fmul
mov
lds
jmp
push
mov
xor
inc
and
and
arpl
add
in
or
add
jnp
call
ret
inc
push
nop
cmp
add
sub
test
inc
scas
dec
rol
into
sbb
ja
rcr
mov
and
(bad)
dec
push
ja
dec
popa
imul
sub
stos
inc
push
outs
sbb
rcr
stc
or
aad
mov
sbb
mov
adc
ds
add
or
push
xor
adc
sub
xor
pop
xor
movs
xor
popa
mov
sbb
dec
add
aaa
pushf
inc
and
push
xor
or
push
mov
mov
mov
test
cmp
cdq
dec
push
push
mov
push
jnp
sar
push
(bad)
in
or
push
cmp
sub
fild
lock
or
and
mov
and
ror
xchg
add
(bad)
xchg
add
jmp
(bad)
jnp
imul
push
ret
dec
enter
xor
sub
das
and
inc
or
push
mov
inc
cmp
jge
mov
xor
outs
rol
int3
xlat
into
mov
jnp
push
ret
call
add
scas
add
sbb
add
comiss
and
fcmove
mov
sub
mov
push
fs
xor
xchg
add
test
dec
lods
mov
add
popa
add
bound
mov
cmp
cmp
fisub
xor
lea
enter
pop
iret
dec
rol
test
stos
xchg
aaa
lods
sub
aaa
rol
cmp
cmps
add
xchg
cwde
add
add
add
clc
cmp
dec
jmp
fist
fst
aas
in
sub
add
and
lahf
call
add
jo
leave
sub
mov
push
mov
push
push
push
arpl
(bad)
test
xlat
cld
je
adc
pop
stc
(bad)
fcmovbe
sub
rcl
lods
sbb
scas
aad
inc
rol
sub
fisub
xor
shl
add
add
inc
add
pop
or
or
test
dec
mov
rcr
mov
push
push
mov
sub
inc
cwde
test
push
xor
arpl
rcl
mov
sbb
jmp
ins
dec
fist
test
sbb
mov
stc
cmp
sub
cmp
sbb
inc
(bad)
fstp
js
inc
enter
or
lock
mov
xor
add
mov
sahf
loopne
and
push
into
pushf
lahf
bound
push
sahf
xor
or
sub
cmp
dec
dec
fs
jbe
in
cmc
and
pop
das
enter
sbb
sub
fwait
add
sbb
and
push
push
xor
daa
cmps
xchg
adc
ins
loope
rol
jo
daa
cli
loop
jno
add
or
add
repz
xor
xor
loopne
add
sar
popw
scas
mov
cmp
mov
or
fs
mov
out
out
inc
push
and
add
add
aad
repnz
sbb
add
adc
push
dec
mov
ins
(bad)
cld
int
push
movs
add
gs
dec
test
add
sub
mov
pop
mov
mov
add
pop
mov
call
ins
int3
xchg
add
cmp
(bad)
test
sbb
push
outs
jle
outs
push
out
outs
test
add
loopne
sbb
mov
mov
mov
and
mov
inc
enter
sub
loop
(bad)
out
movs
(bad)
pop
xor
add
xor
dec
and
add
fld
in
in
les
(bad)
push
xor
push
mov
in
add
imul
dec
pusha
add
data16
imul
xor
add
sahf
add
test
adc
add
add
call
stos
pop
(bad)
clc
test
dec
add
jl
push
fimul
out
retf
add
pop
mov
movs
xchg
sbb
call
sub
sbb
mov
mov
dec
arpl
add
mov
add
inc
pop
in
outs
xchg
outs
out
jbe
xchg
jmp
push
ins
inc
out
inc
ds
les
mov
cmp
test
xor
fadd
sub
into
mov
push
jle
rcr
aam
or
push
dec
test
scas
jbe
stos
imul
ret
gs
rcr
arpl
data16
push
mov
fisttp
inc
outs
je
dec
fnstcw
clc
jo
xchg
push
ins
sub
add
aas
icebp
das
or
xchg
into
out
sub
or
adc
inc
mov
(bad)
dec
xor
inc
lds
add
mul
in
ja
outs
and
jb
aas
jb
lahf
pop
stc
push
in
adc
lds
dec
inc
and
cmps
mov
fdiv
add
xchg
add
mov
pop
cmp
add
inc
fidiv
bound
lds
lods
lock
xor
test
repz
push
mov
jo
movs
int
or
hlt
adc
out
inc
cs
enter
or
rcl
jno
ror
pop
outs
jne
jmp
dec
xchg
fbld
and
push
or
out
addr16
pop
mov
inc
push
push
ja
pop
mov
inc
xchg
sbb
jno
mov
inc
xor
cmp
or
or
sub
jno
xchg
add
test
mov
push
pop
fadd
jno
pop
je
aas
je
shr
adc
psubb
cmp
mov
xor
inc
lock
data16
add
pop
cmc
push
pop
repnz
xchg
xchg
push
mov
jle
js
push
in
push
inc
push
jae
pop
xor
push
jmp
das
lahf
mov
sub
imul
jcxz
adc
pop
cmovs
mov
adc
add
mov
je
xchg
jbe
test
push
add
sbb
inc
jno
pop
jno
pop
hlt
or
jae
lock
adc
sub
ret
je
addr16
inc
cwde
cli
inc
fdiv
xlat
ja
jg
stc
adc
iret
pop
addr16
test
test
xchg
gs
add
ret
test
mov
lea
ss
popa
out
clc
add
(bad)
sub
cmp
xor
stc
ins
adc
add
les
xor
sbb
xchg
addr16
out
in
(bad)
mov
(bad)
mov
xchg
(bad)
sbb
cmp
dec
pop
adc
lahf
cli
lods
pcmpeqw
repnz
jge
(bad)
std
inc
cwde
xchg
shl
fstp
add
pop
js
pop
xchg
jne
add
sub
add
pusha
xlat
ins
pop
push
test
pop
inc
not
adc
xor
push
pop
sub
mov
inc
fadd
hlt
div
out
jbe
fbstp
aas
ins
inc
mov
arpl
call
ss
js
cmps
adc
std
sub
sub
adc
push
lock
daa
mov
loop
add
arpl
sub
repnz
dec
sub
sub
test
hlt
movs
xor
pushf
mov
retf
pop
mov
mov
sub
jecxz
sbb
and
loopne
or
add
adc
sub
or
and
loope
or
pop
xor
mov
popa
mov
adc
mov
jp
ins
fld
retf
add
or
ss
inc
push
push
or
inc
sbb
add
add
add
and
add
sbb
or
push
movs
icebp
loopne
xlat
or
push
call
xor
aaa
retf
push
jle
leave
rcl
push
mov
dec
outs
add
movs
mov
add
add
and
sbb
push
adc
inc
nop
xor
mov
mov
push
retfw
push
pop
mov
or
pusha
xchg
fld
fadd
daa
pop
xor
fs
pop
mul
add
movs
popf
test
outs
and
xchg
sbb
mov
xchg
xor
daa
mov
jp
loope
and
cmp
enter
jne
push
fst
xchg
cmc
sbb
adc
out
add
lods
mov
pop
shl
lods
int3
call
repnz
pop
jnp
inc
add
add
fsub
fs
sbb
xor
js
add
and
and
stos
cmp
cmp
inc
or
xchg
loop
(bad)
ds
fmul
xchg
inc
or
xor
aaa
dec
and
cs
(bad)
adc
sbb
bound
and
call
push
add
add
jns
inc
or
fs
sub
fsubr
pop
mov
sub
sbb
push
mov
mov
dec
and
jg
sbb
es
inc
or
jbe
sub
mov
jnp
mov
mov
mov
movs
sub
sub
cmps
aaa
or
cmp
cs
pushf
jmp
jbe
mov
push
push
push
xchg
adc
and
ja
add
push
adc
aam
dec
mov
cmp
jg
mov
ins
mov
add
adc
pusha
inc
sbb
dec
xchg
loope
cmps
lds
daa
repz
or
popa
xchg
push
dec
daa
push
pushf
loop
or
cmp
dec
xchg
and
int3
test
(bad)
outs
jo
movs
gs
fsub
pushf
mov
lods
call
mov
aad
lods
xor
xor
clc
add
(bad)
jge
xlat
mov
cmc
xor
add
mov
gs
(bad)
xor
jmp
ret
test
sti
out
mov
ror
ins
sub
lea
inc
dec
cs
pop
jno
aaa
jo
inc
adc
adc
add
xchg
dec
sbb
fs
sbb
lea
xchg
das
(bad)
fucomi
pop
fwait
inc
cmp
push
mov
push
mov
xor
sahf
es
xor
xor
fst
cmp
and
(bad)
out
loop
das
jns
pop
push
repz
push
jl
adc
sub
jo
or
int
mov
ret
jns
or
fwait
push
push
enter
pop
sub
fcmovnbe
jns
ret
cmp
pop
bnd
mov
jmp
dec
repz
ret
lock
das
add
push
sub
mov
push
and
or
sbb
cmp
out
arpl
(bad)
fst
jbe
mov
mov
xor
ss
adc
cmps
dec
dec
add
cmp
fwait
push
and
mov
test
test
cmp
inc
lock
popa
xchg
push
mov
and
add
push
jo
or
in
adc
cli
fld
retf
push
call
mov
rcl
stos
add
add
adc
inc
mov
sbb
xor
ins
and
jg
mov
fs
adc
data16
sbb
dec
jne
or
cmps
push
cmp
das
dec
xchg
jp
dec
inc
and
or
push
inc
xchg
pop
gs
inc
add
popf
je
jl
or
cli
or
xchg
jbe
pop
(bad)
repnz
dec
lods
mov
ins
xchg
push
pop
sbb
lods
pop
retf
pop
xor
pop
cdq
les
mov
cdq
test
adc
pop
pushf
test
repnz
dec
fs
stos
cdq
sar
dec
mov
and
in
call
or
ret
fwait
movs
jmp
adc
jnp
jmp
push
(bad)
fldenv
pop
mov
push
ja
add
out
push
cmc
xor
adc
push
or
cmps
xchg
mov
push
addr16
mov
push
test
(bad)
jge
xchg
dec
cs
add
inc
and
repz
in
retf
shl
fstp
and
sub
daa
cmc
and
cmps
xor
push
ret
cwde
inc
dec
out
(bad)
mov
inc
adc
dec
add
add
xchg
sub
and
mov
sbb
ja
pusha
dec
push
push
lock
ss
test
stos
cli
(bad)
inc
dec
push
xchg
push
or
lea
bound
inc
inc
addr16
mov
hlt
mov
mov
xchg
or
push
dec
ins
or
push
aaa
loopne
adc
xor
push
call
and
add
lods
dec
call
xchg
aam
cwde
or
stos
and
mov
in
push
sbb
cwde
sub
add
fmul
inc
pop
or
popf
gs
pop
xor
jo
add
popf
add
sbb
cli
fsub
jmp
inc
xchg
push
pusha
js
and
shr
jbe
test
push
fcomp
sbb
pop
jb
adc
and
mov
ret
add
stc
adc
fbld
or
fiadd
pop
cwde
sbb
push
lock
mov
push
push
fistp
mov
jle
call
add
inc
adc
sbb
(bad)
in
in
into
mov
cmp
test
and
loopne
repz
xchg
bound
or
jae
mov
push
cdq
sbb
cld
mov
sub
xchg
ficom
add
and
fnstcw
rcr
xor
adc
ret
sbb
xchg
cs
or
cmp
add
pop
xchg
or
add
and
add
sbb
shl
aam
pop
fisubr
inc
mov
cs
push
stos
push
enter
and
lods
lods
adc
dec
mov
js
lds
sbb
ror
ror
jge
xchg
sbb
iret
inc
sub
bound
sbb
imul
test
inc
pop
fadd
mov
pop
sbb
dec
scas
sti
xor
mov
pop
stos
cmp
fild
popf
ss
add
movs
push
test
push
inc
fs
lock
sub
inc
and
jo
repz
stos
push
pop
adc
data16
sbb
int3
test
cld
sti
add
sbb
in
loope
outs
sbb
dec
loope
mov
pop
mov
and
pop
mov
xchg
int
add
or
fmul
inc
xchg
imul
jb
mov
push
xor
repnz
and
xor
sbb
lock
and
je
mov
mov
cdq
fidiv
movs
mov
les
aad
data16
loopne
sub
in
bound
aaa
ror
test
jl
ret
mov
rol
adc
shr
nop
sub
pop
ins
shl
mov
ss
lahf
cmp
rcl
add
test
add
das
(bad)
jns
lods
popa
repz
idiv
lods
jmp
lea
int3
pop
xchg
aam
mov
push
cmc
push
in
in
test
fsub
push
cwde
(bad)
lea
or
mov
inc
and
ret
push
pop
add
shl
push
cmc
dec
lahf
call
fcomi
xor
outs
cmp
imul
into
xchg
pop
and
lahf
or
(bad)
lods
adc
adc
pop
sub
(bad)
mov
cmp
or
sbb
jle
inc
jp
movq
lods
test
mov
and
jb
push
mov
pop
mov
ins
add
sbb
dec
shl
add
fstp
mov
leave
ins
adc
popf
and
test
mov
lea
xchg
inc
sub
mov
shl
jne
add
pop
or
ret
sub
and
test
fistp
test
paddsw
jnp
or
adc
or
fxam
sahf
cmp
fsub
fiadd
jbe
cwde
mov
sbb
pop
mov
outs
ins
ret
add
add
lock
adc
jbe
pusha
leave
stc
ror
mov
aam
sbb
jecxz
test
int
pop
cmp
movs
lahf
cli
cmp
and
and
and
or
pop
xchg
jecxz
push
fnstsw
fisub
pop
and
ret
ss
inc
popf
popf
push
xchg
mov
xor
sub
and
out
dec
inc
push
sub
bound
xor
and
cdq
sbb
rol
pop
cs
bound
fsubr
cli
adc
int
icebp
mov
or
xor
mov
mov
cld
and
pop
pop
push
pop
and
test
cld
jne
adc
add
clc
pop
fucomp
mov
jmp
int3
pop
mov
test
aad
xchg
loop
in
add
add
add
adc
ret
fsubr
cmp
inc
test
ror
or
inc
sahf
(bad)
je
mov
loope
jbe
mov
fsub
test
xor
and
loope
pop
sahf
or
add
adc
sbb
and
sbb
dec
and
(bad)
cmp
and
adc
or
adc
push
loop
cmp
mov
clc
dec
out
loopne
ins
retf
inc
rol
push
sub
jo
vmread
push
adc
adc
fst
fcomp
jmp
pop
pop
stos
in
mov
clc
pop
add
cmp
ret
pop
stos
ror
or
and
dec
(bad)
pusha
and
and
push
cli
mov
jp
popa
xchg
inc
inc
or
sar
aad
adc
push
mov
jbe
pop
cmp
sbb
addr16
mov
and
pushf
add
xchg
adc
pop
cs
leave
mov
ins
dec
pop
pop
cmc
aad
fisub
outs
ss
cmps
outs
cmps
inc
jo
and
daa
push
fs
and
xlat
and
or
dec
add
dec
addr16
fs
jmp
dec
data16
push
inc
loope
fisub
ds
xchg
cmp
sbb
out
add
iret
test
push
inc
ret
ror
add
leave
adc
gs
jg
test
or
or
in
xchg
add
and
pop
mov
push
add
or
lods
nop
jnp
xchg
and
pop
sbb
jp
add
mov
adc
adc
xor
pop
push
dec
dec
aaa
in
iret
mov
inc
add
add
inc
ret
or
push
mov
mov
inc
cmc
in
aad
adc
neg
push
xor
cmp
add
pop
repnz
xchg
mov
int3
push
mov
push
sbb
mov
fs
jl
push
aaa
mov
jns
jmp
add
popf
mov
inc
push
and
ror
(bad)
enter
cli
and
xchg
push
call
fs
int
add
ret
sub
arpl
add
pusha
push
push
push
je
adc
loope
stos
stc
pop
mov
imul
inc
ret
mov
pop
lds
js
push
mov
add
sub
mov
in
aad
ret
cdq
or
sbb
aad
retf
ins
test
test
repnz
dec
stos
cmp
out
mov
iret
adc
cmps
in
and
and
xchg
test
push
mov
pop
xor
jmp
hlt
mov
dec
sub
xchg
push
fisubr
sub
mov
push
or
rcl
push
enter
inc
sbb
pop
lea
sub
adc
leave
mov
loop
and
push
sub
push
test
adc
adc
jmp
test
fisub
add
sub
stos
push
jnp
pop
int
in
push
push
pop
add
xchg
or
or
rol
mov
lods
jb
popf
retf
push
lea
hlt
sub
out
(bad)
and
ins
(bad)
sub
xlat
push
inc
xlat
push
and
sbb
or
sub
lods
cmp
dec
pop
push
imul
fsubr
jl
adc
xchg
test
pop
mov
scas
hlt
inc
outs
add
add
scas
pop
and
sub
xchg
cmps
cmp
outs
pushf
outs
push
stos
sub
cdq
ffree
jmp
ret
ror
shr
cmps
cmp
cmc
mov
ins
jb
xlat
sbb
mov
dec
sub
sub
in
out
mov
imul
sbb
xchg
and
fld
mov
dec
out
or
out
or
xor
inc
add
sbb
test
xchg
shl
sub
xchg
cmp
in
popf
mov
retf
mov
pop
ins
cs
push
in
(bad)
inc
imul
cmc
popf
jmp
jmp
icebp
mov
xor
jle
dec
sub
(bad)
ret
xchg
inc
stc
sbb
push
das
mov
pop
lds
mov
push
jl
jmp
out
or
sbb
xor
mov
adc
or
inc
sub
out
ins
and
imul
rcl
ror
or
in
rcr
sbb
icebp
sbb
pop
repnz
mov
icebp
lds
dec
push
icebp
and
ret
cs
xchg
lods
xor
inc
lock
aas
sbb
and
jae
push
xchg
jmp
sbb
sbb
or
or
inc
imul
adc
xor
js
xchg
stos
outs
dec
scas
lods
xchg
push
scas
push
call
sbb
xor
cld
ret
clc
shl
pusha
cs
outs
adc
push
es
data16
or
ud0
nop
mov
mov
les
aas
push
xchg
add
add
pop
rcl
or
push
add
pop
lods
add
lds
mov
mov
das
push
nop
rcr
adc
add
add
je
clc
xor
push
dec
push
loope
pop
gs
sbb
pop
test
push
push
push
fld
pop
inc
cld
out
inc
sbb
int
pushf
xor
jmp
les
adc
and
sub
repz
push
out
push
pop
cmc
ds
cmp
xor
je
test
or
mov
es
pop
xchg
or
push
sbb
add
add
hlt
push
jl
daa
in
das
cmp
xchg
hlt
mov
mov
ja
dec
pop
not
test
pop
lock
in
cmp
and
fild
jne
daa
(bad)
jmp
cld
outs
push
pop
cmc
mov
mov
test
nop
xor
or
test
push
lahf
xor
xor
push
(bad)
sbb
mov
jnp
inc
repz
inc
inc
xor
sbb
or
js
pop
shl
or
jb
xor
test
jne
push
popa
adc
push
jb
push
loop
jg
adc
pop
or
das
mul
aam
cdq
ror
xor
sub
ss
dec
inc
ss
ret
out
not
sub
cmp
ret
mov
dec
xor
jbe
repz
enter
inc
(bad)
not
in
xchg
and
adc
inc
or
mov
out
or
ret
mov
cdq
xor
push
in
gs
call
bound
sub
push
inc
cld
or
bound
mov
sbb
rol
or
pusha
and
mov
mov
and
pop
sub
and
cmp
inc
ins
inc
test
and
pop
rcl
retf
dec
mov
dec
xchg
cmp
ror
add
xor
sub
jmp
add
js
sti
xor
ins
xchg
or
mov
bound
push
xchg
daa
les
mov
xchg
dec
inc
or
mov
cmp
stc
xor
adc
pop
movs
inc
jle
shl
sub
rol
add
enter
cmp
pusha
jns
mov
dec
jne
or
inc
dec
add
in
call
aad
add
les
and
xchg
add
pop
xor
sub
mov
mov
cmp
and
push
mov
mov
(bad)
inc
in
jp
pop
inc
movs
out
cmp
mov
scas
retf
cmp
call
cmp
pop
mov
xchg
push
pop
pusha
cmp
repz
inc
dec
dec
cld
cs
dec
scas
arpl
imul
les
cwde
sbb
ficom
test
pop
cmp
adc
and
sbb
xor
mov
sbb
pop
idiv
ficom
lds
es
es
test
sbb
loop
cdq
pushf
dec
xor
mov
or
mov
sbb
sahf
lock
daa
mov
xchg
mov
lods
add
mov
sbb
add
fs
mov
fidivr
push
mov
cmc
dec
out
and
or
xor
inc
or
xchg
sbb
add
cmp
mov
in
cmp
inc
inc
and
sub
add
je
das
pushf
dec
xor
add
sub
into
imul
jmp
adc
and
sub
mov
out
adc
fadd
sub
xor
xor
and
pop
mov
data16
jmp
retf
jne
mov
inc
shl
in
adc
adc
aad
test
test
fucom
jge
push
mov
lock
mov
jne
sub
add
rol
xor
in
jle
and
adc
inc
xchg
sbb
and
or
sub
or
call
push
lods
pop
mov
fcomp
arpl
mov
dec
xchg
sbb
cmp
pop
push
cmps
dec
sbb
mov
or
mov
mov
cmc
mov
pop
push
data16
inc
(bad)
push
inc
cwde
xor
ret
push
test
xor
call
add
pop
scas
sahf
enter
push
ins
pop
mov
fdivr
adc
pop
mov
adc
je
add
lods
cld
clc
and
sbb
inc
push
sbb
pusha
add
mov
dec
push
scas
pop
xchg
sub
and
jo
pop
inc
push
nop
shl
nop
xor
mov
and
shl
or
sub
or
jbe
xor
retf
(bad)
adc
push
test
mov
aaa
outs
movs
jae
(bad)
lea
dec
cwde
sbb
or
enter
push
repz
mov
rol
mov
int
push
pop
mov
lods
add
adc
mov
push
mov
ret
push
ret
bound
xchg
pop
push
mov
and
ds
in
xchg
push
pop
lea
mov
sbb
and
and
ror
cs
push
lds
mov
pop
xchg
dec
cwde
mov
dec
adc
pushf
ins
cwde
push
inc
and
cmp
arpl
mov
mov
cmp
sub
mov
push
and
pop
cli
sti
iret
mov
xchg
xor
and
pusha
mov
xor
or
adc
jp
inc
or
mov
fnstenv
adc
mov
adc
jmp
lds
sahf
rol
adc
push
or
gs
(bad)
push
xchg
mov
or
or
cmp
sbb
push
sbb
and
in
and
jmp
pop
cwde
xchg
imul
jb
sub
repnz
xor
fs
bound
or
and
pavgb
mov
sub
mov
iret
push
mov
sub
iret
adc
inc
jmp
jp
mov
pop
lods
push
add
adc
add
adc
xchg
mov
sub
ret
loop
adc
sbb
aad
frstor
pop
and
cdq
in
pop
mov
pop
mov
cmp
leave
and
jbe
mov
movs
jmp
mov
(bad)
cvtps2pi
stc
xchg
(bad)
mov
stos
mov
inc
inc
mov
fiadd
in
pop
mov
aad
fbstp
xor
clc
ret
or
sbb
sub
or
xor
or
and
mov
out
rcl
cmc
sub
sbb
xchg
push
xchg
xchg
dec
loop
xchg
sti
cli
and
and
mov
cmp
dec
aaa
repnz
imul
fwait
cdq
test
xchg
cdq
popa
xchg
test
ret
xchg
xor
mov
cmc
movs
cdq
imul
xor
jp
sub
mov
fidiv
xlat
ins
mov
add
popa
sbb
inc
leave
inc
lea
repz
cs
js
ret
and
loope
mov
and
fwait
and
ss
cmp
add
shl
push
call
pop
lock
lods
leave
add
cmp
or
cwde
adc
fdiv
sbb
jo
(bad)
js
cmp
stc
jl
ds
or
stc
jo
mov
push
mov
and
adc
test
sub
and
in
sbb
aam
xchg
and
movlhps
and
push
jno
stc
pop
bound
enter
in
push
xchg
add
je
aaa
dec
add
xchg
jo
add
out
push
hlt
pop
add
icebp
mov
mov
mov
add
popa
cdq
mov
or
and
int
popa
mov
nop
inc
(bad)
mov
jl
mov
sub
retf
or
xchg
popa
popf
pop
test
mov
sbb
jge
movs
inc
dec
fs
sub
add
cmp
shl
mov
sub
shl
lahf
and
add
fisttp
inc
leave
dec
out
or
jbe
inc
sbb
enter
cmp
arpl
nop
sbb
popf
jno
lods
popa
sbb
and
mov
movs
sbb
push
ror
xchg
mov
fs
and
inc
movs
xor
adc
das
sub
(bad)
mov
push
sub
ja
mov
test
pmulhw
movs
adc
push
mov
mov
mov
push
dec
fcomp
push
or
push
hlt
call
jbe
outs
or
cmp
jns
sbb
xor
pop
rcl
lea
and
jbe
sub
mov
pop
shr
(bad)
sbb
add
in
sbb
mov
xchg
mov
call
mov
xchg
sub
in
fist
push
mov
or
push
add
fsub
adc
dec
inc
xor
push
add
(bad)
xchg
int
pushf
in
ret
mov
adc
loopne
sub
push
jo
ret
sbb
mov
pushf
pop
shl
push
and
add
jne
mov
xor
popa
or
xor
test
cmp
add
or
push
xchg
mov
pop
loopne
pop
push
into
mov
and
popa
or
idiv
(bad)
mov
add
inc
or
ret
sub
adc
cmp
xor
mov
inc
(bad)
sub
aad
icebp
fwait
dec
lods
pop
sbb
inc
add
mov
sbb
cmp
push
adc
je
jecxz
cmp
cmp
and
scas
xor
xor
add
rol
out
jbe
es
loopne
adc
dec
mov
(bad)
test
imul
int
or
xchg
movs
sub
dec
mov
add
jl
mov
lahf
cmp
das
jecxz
cmp
cdq
imul
add
mov
cmp
inc
or
hlt
xor
xor
cmp
or
push
icebp
mov
xor
jne
fucomp
jb
(bad)
fwait
or
sbb
inc
stos
mov
adc
test
sub
loop
push
cli
add
push
mov
arpl
mov
mov
in
pop
(bad)
jmp
push
add
cmp
rcl
xor
ficomp
sub
cdq
or
sbb
enter
mov
jne
mov
sub
add
add
adc
add
clc
xchg
shr
jle
movs
inc
adc
push
cld
sbb
lds
imul
jns
je
sub
mov
xchg
pop
inc
jle
xchg
rcl
pop
push
cmp
pop
pop
or
(bad)
jno
pop
scas
loope
mov
mov
mov
ins
mov
daa
dec
fwait
jg
mov
cs
add
dec
add
xchg
jo
xor
sub
jbe
test
xchg
sub
xor
add
xor
fisubr
or
outs
mov
adc
sbb
fucomp
or
scas
bound
mov
mov
in
sbb
or
movs
push
mov
fstp
cs
and
adc
push
push
stc
lods
mov
pushf
sub
cmp
(bad)
jp
fs
fwait
adc
sub
or
or
pusha
pop
adc
test
jnp
jecxz
aaa
imul
ror
mov
sahf
inc
sub
mov
mov
ror
pop
inc
fscale
or
dec
ret
sar
pop
or
pop
call
jle
out
pop
pop
out
movs
(bad)
popf
lds
add
push
sbb
call
mov
stc
jb
sub
pop
mov
test
adc
loopne
or
add
loopne
jbe
ficom
call
(bad)
into
jb
fcomp
dec
and
ret
ret
je
pop
or
jmp
and
or
sub
inc
sar
push
mul
or
(bad)
lea
data16
dec
push
inc
sti
mov
sti
xchg
mov
aad
imul
adc
mov
outs
add
rol
add
inc
mov
dec
inc
or
outs
xlat
push
scas
mov
bound
and
and
out
or
mov
or
cs
test
lock
pop
sbb
and
push
pop
out
cmc
in
ins
sbb
xor
mov
jae
test
loopne
push
push
or
and
mov
sub
or
xchg
or
adc
movs
sbb
pop
mov
sbb
push
sbb
loop
lock
and
lock
lods
add
sub
nop
(bad)
inc
dec
jp
push
jp
inc
and
push
loopne
(bad)
clc
lds
or
add
add
pusha
dec
cmp
(bad)
shl
out
adc
ror
push
(bad)
mov
add
mov
add
dec
add
sub
dec
xor
in
fst
and
add
sbb
and
mov
stc
cld
ror
xor
and
sub
mov
enter
in
rcr
add
xchg
loopne
jb
jecxz
mov
pop
mov
sbb
push
xchg
pop
cs
sub
adc
add
add
stos
pop
or
sbb
pop
mov
sbb
mov
jmp
hlt
xor
xchg
sub
sbb
les
sqrtps
mov
int
test
loop
ds
push
and
mov
and
adc
xchg
outs
adc
stc
add
dec
ret
mov
jmp
adc
adc
dec
nop
xchg
scas
and
sub
sub
sub
adc
push
mov
inc
mov
mov
xor
xchg
cmc
gs
mov
and
popa
shl
or
and
out
bound
mov
sub
and
shl
xor
aaa
xlat
icebp
add
inc
inc
xchg
dec
adc
dec
push
or
leave
cmp
scas
rol
jle
adc
xchg
pop
(bad)
or
and
loopne
and
jno
outs
mov
mov
loope
(bad)
and
mov
add
and
and
movs
lds
xchg
loopne
adc
add
add
xchg
and
and
sub
jb
sub
mov
push
adc
add
cs
xchg
inc
mov
sbb
es
adc
outs
rcl
xor
jne
adc
adc
sub
mov
cmp
sub
add
(bad)
mov
and
aad
pusha
adc
repz
or
nop
shr
adc
adc
rcl
mov
rol
sbb
lods
in
pusha
adc
stos
xchg
mov
test
or
popa
and
out
or
jmp
aas
lahf
ret
lods
aas
sbb
cmp
shl
cmc
iret
xor
imul
and
push
popa
dec
jae
mov
inc
inc
or
mov
les
loopne
hlt
repnz
aad
aas
push
push
cs
sub
sahf
rol
sub
add
rol
adc
repz
inc
push
dec
pusha
cmp
cs
mov
xchg
iret
push
xchg
dec
cmp
sbb
mov
mov
sbb
cmp
sbb
test
imul
sub
sahf
or
mov
mov
jmp
call
dec
scas
adc
shl
in
jnp
loop
into
nop
mov
mov
push
add
inc
xor
into
adc
cmp
adc
ds
sbb
pop
add
in
test
mov
and
inc
fild
adc
cmp
mov
inc
or
and
jb
pop
mov
mov
and
pop
fs
and
les
xchg
cmp
add
mov
cmp
push
cs
xchg
adc
and
mov
rol
(bad)
out
pop
leave
push
out
aad
jg
es
adc
ret
loopne
push
pusha
jge
out
retf
xchg
imul
pusha
push
and
mov
sbb
aad
xor
or
sahf
mov
push
push
xchg
or
stos
mov
add
push
pop
ret
add
adc
adc
inc
adc
aam
or
dec
pusha
or
jno
push
xchg
push
sti
in
cmp
and
out
into
push
out
inc
push
sbb
mov
jne
or
leave
jmp
and
add
adc
and
push
loope
ds
dec
inc
mov
xlat
jne
mov
adc
jne
xchg
jbe
mov
and
xchg
push
test
mov
popf
mov
xchg
not
and
pop
adc
lods
push
add
mov
in
jne
pop
aad
mov
ins
dec
lds
ret
(bad)
xchg
mov
or
mov
push
loopne
les
add
jmp
popa
mov
mov
shl
lods
jo
and
movs
add
dec
bound
enter
and
and
mov
dec
cmp
add
jae
retf
inc
bound
pop
movs
in
je
push
out
add
sub
ins
jmp
hlt
dec
into
dec
push
jmp
les
cmp
or
xor
dec
movlps
push
lahf
push
inc
sub
sbb
lds
mov
pop
inc
and
mov
nop
inc
or
add
inc
add
adc
adc
dec
jnp
and
arpl
ss
test
jmp
mov
cmp
cvtps2pd
pop
ss
push
data16
adc
jmp
movs
pusha
push
push
and
push
dec
aaa
cli
cmp
sub
add
nop
add
or
pop
push
and
adc
fst
xchg
push
sbb
pop
js
xor
add
jecxz
and
sbb
mov
inc
test
jp
mov
jns
jnp
int
fdiv
mov
cwde
add
or
cdq
mov
add
xchg
les
aaa
and
inc
jg
mov
and
sti
aaa
sbb
data16
or
fdivr
and
ds
arpl
not
push
outs
push
push
or
(bad)
or
cmp
not
inc
sub
sar
dec
lea
xchg
push
js
mov
mov
or
ss
and
div
pop
fs
dec
mov
enter
(bad)
xchg
test
or
sbb
aam
mov
and
xlat
fild
mov
call
mov
mov
cmp
cmp
rcr
xor
push
xor
data16
fwait
mov
or
daa
or
daa
add
fstp
stos
(bad)
add
lock
xchg
cdq
xchg
push
lahf
inc
sbb
cmp
cli
ins
mov
inc
or
sbb
mov
shl
clc
cmp
js
mov
mov
cwde
movs
dec
sbb
call
repz
inc
dec
or
jae
rcr
push
pusha
jp
imul
lds
jne
push
sbb
cmps
leave
xchg
imul
imul
jmp
fnstcw
call
cmps
retf
adc
sbb
mov
rcr
mov
cdq
inc
and
call
mov
jg
pop
scas
xchg
lds
fimul
cmp
xor
xor
xchg
je
cmps
neg
popaw
mov
add
inc
or
inc
or
pusha
mov
mov
sub
mov
mov
xor
add
loopne
loope
sahf
fidiv
cmc
xor
mov
inc
mov
aaa
mov
fisubr
(bad)
pop
push
xchg
and
shl
in
loopne
jl
and
pop
cld
test
jnp
xchg
sbb
mov
cmp
idiv
mov
addr16
cmp
mov
cmp
inc
inc
mov
cmp
js
stos
push
inc
xchg
jp
retf
mov
rcpps
or
scas
mov
add
push
mov
push
fadd
cmps
push
mov
cld
clc
loop
push
sbb
dec
je
push
xchg
xchg
mov
mov
mov
(bad)
pop
scas
or
pop
dec
pushf
call
cmp
mov
cmp
retf
lods
push
and
mov
jno
mov
call
sbb
loope
in
jne
retf
dec
(bad)
shl
xchg
leave
lahf
cmp
sbb
retf
ror
mov
mov
inc
add
fdiv
cld
mov
inc
int3
xor
int
jb
jns
pop
cmp
pop
sbb
cld
(bad)
pop
xor
popa
xchg
mov
iret
call
cmps
fstp
shl
inc
jmp
rol
push
enter
fstp
pop
pushf
mov
mov
sub
add
aam
ja
sbb
push
push
lahf
(bad)
mov
int
(bad)
xor
inc
cmp
loopne
add
and
das
add
icebp
jl
ins
push
pop
xchg
sbb
adc
pop
fidiv
ds
in
sbb
shr
push
aaa
and
push
test
inc
push
pop
ror
pop
cwde
jl
into
sbb
push
mov
mov
bound
paddsb
jae
sti
and
loope
mov
add
xor
add
and
loopne
and
in
lock
lds
push
add
call
das
cmp
fisub
xor
sbb
push
sbb
cmp
shl
sbb
xchg
add
adc
shl
mov
enter
fiadd
dec
mov
jne
push
pop
push
out
sbb
add
movs
mov
gs
add
cmp
and
cld
jb
aas
sub
mov
xchg
dec
add
popf
push
and
adc
outs
(bad)
je
pop
or
mov
mov
or
ror
pop
in
sar
jne
push
popf
adc
mov
adc
out
xlat
loopne
out
jp
add
out
in
pop
stos
mov
retf
retf
adc
sbb
and
je
(bad)
addr16
sti
sahf
mov
mov
ret
repz
xlat
mov
cdq
movs
inc
lahf
mov
pop
fadd
jnp
lods
adc
dec
loope
xchg
fucom
add
aam
add
or
loope
or
push
inc
mov
and
and
or
cs
movs
xchg
and
ins
xchg
dec
sub
dec
pop
and
mov
and
push
mov
sbb
jmp
inc
adc
es
in
cli
aam
push
aas
call
push
dec
scas
mov
pop
xor
mov
ins
ss
mov
cmc
push
aaa
pushf
fdivr
daa
scas
(bad)
fld
cmps
sub
fild
stos
sbb
and
rol
clc
mov
jae
int
aaa
push
cld
cmps
loopne
test
and
mov
add
xchg
and
xlat
cmp
or
out
add
cmp
add
bound
add
nop
sub
adc
aam
jle
sub
(bad)
lods
pop
pop
jge
cmp
data16
movs
dec
retf
int
jl
jb
leave
int
ja
fidivr
out
xchg
pusha
jg
jbe
das
mov
test
mov
push
xor
inc
pop
or
xor
and
jg
add
(bad)
call
mov
sbb
jne
inc
inc
and
xor
add
pop
enter
sub
neg
xor
inc
sbb
xor
push
jae
jmp
clc
adc
add
add
jne
popa
pop
inc
push
fidiv
popf
ja
test
pop
sub
out
pop
dec
xor
mov
cdq
fistp
loope
addr16
aad
pop
pop
jle
and
push
lea
or
cmp
pusha
or
sbb
popa
sbb
ins
shl
adc
cdq
sbb
sbb
mov
rol
hlt
and
inc
push
xor
cmp
mov
jo
add
xchg
cmp
inc
push
cdq
dec
sub
pop
adc
ret
xchg
xchg
mov
bound
out
jmp
xchg
push
cmp
dec
cmp
pop
jne
arpl
fcomp
pushf
jmp
adc
mov
adc
clc
inc
cdq
or
and
inc
(bad)
fsubr
xor
jmp
rol
in
imul
or
dec
ror
stos
mov
lock
inc
xchg
mov
in
fs
push
dec
jo
push
dec
pop
cdq
pop
retf
jns
imul
fstp
sub
mov
xchg
push
gs
in
mov
jne
xlat
mov
gs
in
inc
or
adc
imul
push
adc
sbb
inc
xchg
icebp
ret
xlat
inc
rcl
add
jp
sub
sbb
push
cmps
adc
cld
pop
ret
push
adc
or
sar
add
icebp
dec
pop
aas
not
or
xor
mov
xchg
jns
nop
stc
jae
ret
call
lods
call
xor
cmps
mov
mov
dec
retf
lds
dec
inc
jae
lahf
jle
xchg
test
aaa
adc
in
push
or
test
or
or
inc
mov
jo
call
popf
mov
jbe
cmp
les
test
add
(bad)
sbb
add
mov
and
xor
or
movs
fst
mov
data16
out
std
cmp
rcl
retf
call
pushf
dec
pop
loop
dec
popf
mov
mov
jno
jmp
xlat
daa
pop
and
pop
mov
mov
adc
add
clc
pop
and
inc
and
ret
and
add
in
mov
dec
test
xor
adc
pop
ret
sbb
xor
sbb
(bad)
jo
dec
pop
sti
loop
nop
mov
mov
in
push
cmp
pop
aaa
jmp
inc
or
mov
cmp
aam
xchg
add
mov
int
jne
or
mov
jne
add
inc
push
and
adc
adc
iret
jns
loop
mov
test
lds
or
push
stos
sbb
add
add
push
jo
adc
pusha
or
enter
add
arpl
(bad)
mov
push
and
xchg
shl
popa
or
sbb
push
sbb
rol
adc
jne
loopne
div
xor
push
das
scas
or
inc
and
adc
and
pop
pop
push
cmp
leave
dec
dec
inc
xor
ins
dec
stos
push
jp
inc
sub
and
sub
popa
lahf
in
ret
sub
lods
pop
shr
pop
mov
idiv
mov
adc
mov
cmps
cwde
int3
xor
or
es
shl
cwde
cmp
push
inc
call
xor
sub
cmp
ret
push
inc
inc
retf
inc
data16
push
jb
and
rol
or
pusha
sbb
clc
push
push
inc
and
aam
pop
test
adc
(bad)
shr
push
sub
add
mov
or
mov
jnp
fadd
mov
push
pop
sbb
shl
call
sbb
add
(bad)
mov
sahf
les
mov
scas
push
xor
inc
inc
pushf
cli
add
add
ds
inc
mov
test
ins
mov
mov
push
retf
adc
xor
rcr
cmp
pop
mov
in
jno
sbb
xor
pushf
loopne
sar
les
xchg
jo
add
or
sbb
add
outs
cmps
and
gs
xor
xchg
ins
call
xchg
add
and
pusha
pop
sub
and
mov
in
sub
(bad)
cmp
das
sub
adc
mov
mov
mov
cmp
mov
sbb
enter
outs
ret
sbb
jo
xchg
sbb
mov
into
cdq
jl
scas
pusha
imul
mov
adc
shr
mov
out
sbb
out
inc
rcr
mov
add
out
dec
xchg
xor
jns
test
ret
sbb
ja
adc
pop
mov
test
jae
loopne
inc
mov
call
ret
pop
sub
popa
ud2
push
(bad)
repz
je
clc
or
jns
inc
and
cdq
push
dec
std
loopne
xor
mov
sbb
xchg
xchg
sbb
fisubr
adc
das
imul
test
jo
enter
lods
call
mov
inc
lds
lods
or
gs
stc
mov
xor
add
ins
out
jmp
je
add
pusha
jl
fdivr
xchg
test
sub
repnz
mov
mov
fdivr
cmc
pop
sub
or
inc
ror
fcomip
add
xchg
and
and
mov
(bad)
cmc
xchg
inc
icebp
push
sti
dec
sbb
and
data16
lods
addr16
in
jnp
fimul
je
(bad)
sbb
mov
mov
nop
mov
sbb
inc
adc
jle
xchg
movs
popa
add
or
pop
mov
mov
sbb
or
dec
ret
inc
arpl
sub
cmp
and
rep
inc
bound
mov
and
dec
jns
push
cli
int
add
push
(bad)
mov
mov
(bad)
pop
lock
mov
or
sbb
outs
cmp
lods
gs
pop
cmp
push
ja
jmp
ins
sbb
and
sub
lock
in
dec
addr16
rol
mov
add
push
adc
inc
and
inc
shr
xchg
and
leave
jge
cmp
mov
inc
les
push
dec
add
aaa
sbb
(bad)
out
cmc
pop
repnz
es
icebp
in
cmp
pop
mov
pop
mov
mov
mov
push
mov
mov
popa
or
pop
ret
add
dec
clc
in
dec
and
sahf
or
(bad)
xchg
mov
aas
sbb
retf
jmp
fstp
loopne
sbb
add
push
jmp
dec
cmp
xor
adc
sbb
push
cs
inc
cmps
add
daa
inc
imul
cmps
es
sub
xchg
pop
in
or
push
jb
nop
inc
test
aaa
fldenv
popf
hlt
dec
leave
and
jne
and
cmp
outs
(bad)
outs
xchg
push
imul
and
jg
lock
test
jp
add
into
push
or
or
test
add
test
mov
mov
xor
push
scas
ret
or
rol
outs
push
inc
adc
cli
rcr
test
xchg
or
push
sub
sub
sbb
daa
inc
mov
pop
xor
xor
sbb
and
imul
cmp
adc
nop
test
or
adc
push
and
sbb
and
or
xchg
push
shl
(bad)
jmp
inc
jae
test
mov
ja
pop
pop
xacquire
mov
jl
mov
push
add
sbb
and
push
adc
jb
jb
cmp
(bad)
call
test
push
xchg
or
daa
pop
mov
or
pop
test
clc
or
jl
xor
(bad)
push
in
test
sbb
lods
call
outs
pop
inc
add
inc
addr16
(bad)
and
jecxz
ja
add
inc
jae
mov
adc
jp
cmp
xchg
idiv
clc
add
adc
cmps
sub
fcomip
push
mov
cli
mov
nop
xor
repnz
xchg
mul
lock
push
sub
push
(bad)
mov
dec
das
imul
(bad)
js
xor
test
ret
ror
xchg
(bad)
aaa
jmp
test
cmp
adc
adc
jge
(bad)
cmp
(bad)
sub
adc
xor
push
or
mov
repnz
jns
lock
or
hlt
xor
pop
add
pop
cwde
xchg
xchg
xchg
jl
lds
ins
pop
pop
sbb
cwde
lds
fadd
mov
jns
cmps
adc
bound
xchg
xchg
leave
dec
in
in
daa
xchg
push
jmp
dec
dec
adc
xor
push
call
outs
div
mov
dec
xchg
mov
jno
imul
add
dec
mov
xchg
outs
mov
xchg
fldcw
xchg
or
mov
cwde
inc
rol
pushf
xor
loope
cdq
and
js
(bad)
add
sub
call
lods
add
push
daa
in
fcomp
inc
mov
es
sahf
ins
add
add
fisub
pushf
xbegin
movs
loope
iret
sub
pop
ror
popf
in
popf
(bad)
pop
popf
es
jle
aad
stc
pop
jns
xor
popf
sbb
mov
sub
sbb
jns
lods
fst
or
xchg
enter
inc
jno
lahf
fld
push
cli
adc
ja
mov
(bad)
push
cmp
mov
and
(bad)
jo
jns
fld
push
pop
dec
aad
sub
push
js
(bad)
pop
test
and
or
daa
mov
repnz
xor
jl
inc
je
mov
or
cmp
xor
push
mov
cmps
outs
mov
ins
repz
ins
mov
or
mov
dec
push
bound
pop
icebp
js
pop
outs
cs
inc
xlat
pop
mov
or
add
or
jmp
mov
xchg
push
mov
stos
ja
inc
ja
(bad)
sbb
test
daa
jl
jmp
mov
lea
add
inc
cmp
sub
test
nop
or
inc
dec
(bad)
gs
jns
shr
test
add
ins
stc
stos
ins
leave
cmps
lods
adc
jbe
pop
sub
icebp
pop
jno
stos
cmps
cmps
cmp
inc
mov
pop
ja
push
push
sbb
test
cdq
jo
xchg
jmp
stos
add
push
jo
and
popf
(bad)
and
add
nop
or
pop
dec
mov
fdivr
lods
jp
jmp
xor
cmps
hlt
retf
xchg
cwde
inc
rol
fimul
mov
add
push
retf
push
pop
jle
xchg
mov
call
stos
mov
push
loopne
mov
(bad)
xchg
jle
mov
sahf
loopne
mov
push
add
sub
and
xchg
pusha
stos
xchg
es
sub
mov
imul
inc
mov
scas
cmp
mov
fnstenv
jns
add
into
adc
pop
push
aas
inc
inc
adc
cmps
nop
or
push
sbb
mov
push
mov
xchg
cdq
sbb
shl
pop
mov
fwait
mov
imul
lods
ret
stos
inc
xor
ja
test
inc
push
aas
sub
sbb
jb
nop
mov
mov
cmp
pop
fbstp
sbb
inc
pop
pop
(bad)
jmp
lods
mov
jb
adc
movs
or
cdq
cmps
stos
leave
mov
mov
xor
mov
push
xchg
enter
mov
mov
dec
(bad)
cli
jb
mov
mov
push
add
adc
add
adc
push
nop
(bad)
mov
fiadd
pushf
inc
push
cmp
into
jmp
popa
jo
sbb
push
out
push
xchg
clc
cmp
mov
mov
push
jno
jmp
mov
popa
movs
sti
mov
adc
ret
jecxz
inc
cwde
mov
add
xor
sahf
pusha
add
mov
inc
lods
push
sbb
rol
or
mov
loope
adc
pusha
rcr
fstp
sbb
clc
data16
shl
push
cmps
cs
xchg
dec
inc
js
pop
out
push
les
cmps
fisttp
movs
push
xor
mov
or
jno
aad
mov
inc
stos
cmps
mov
push
mov
adc
mov
ja
loope
mov
in
inc
pusha
or
jmp
imul
(bad)
push
push
mov
mov
aaa
mov
lods
int3
mov
jbe
pop
push
retf
jno
mov
xor
imul
pushf
push
arpl
xor
inc
mov
xor
(bad)
add
gs
xchg
jnp
into
or
popa
and
lea
rcr
push
addr16
and
cmp
mov
mov
fs
mov
data16
ret
popa
mov
dec
scas
popa
xchg
inc
adc
and
xor
or
arpl
sbb
nop
adc
pusha
add
sbb
shl
jg
pop
(bad)
pop
jle
mov
cmps
or
gs
int
retf
mov
stos
inc
cmp
lds
rol
jo
out
dec
inc
mov
mov
aaa
or
js
jmp
leave
mov
ja
dec
sbb
sbb
ja
in
sbb
push
nop
or
jge
mov
jg
rol
test
xor
shr
fidiv
(bad)
outs
cmc
xor
inc
pop
aam
xor
xchg
pop
mov
cmp
and
xor
mov
fldcw
cmp
cmp
adc
pop
ins
shr
in
mov
nop
jb
xchg
aam
lea
shl
xlat
adc
inc
hlt
pushf
jno
test
inc
sub
test
into
inc
fdivr
rcr
mov
push
lea
xchg
std
rcr
jmp
jns
mov
mov
jae
pop
sbb
inc
inc
sub
pop
add
or
xor
lods
pop
or
mov
jo
inc
xor
inc
jo
dec
or
outs
mov
sub
cmp
jne
dec
or
retf
cmp
stos
mov
sar
aam
repz
pop
sub
jbe
sub
daa
pop
add
adc
sub
push
icebp
sbb
push
stc
sbb
or
or
fistp
or
cmp
add
sub
jecxz
sub
aam
jb
fwait
ret
xchg
inc
ins
jo
jle
adc
aam
(bad)
push
sbb
push
ds
icebp
stos
mov
js
aad
ins
(bad)
fst
or
lods
mov
push
loop
mov
inc
aaa
pop
shr
pusha
jecxz
je
push
fisttp
mov
fninit
and
xchg
enter
pushf
in
sbb
iret
xchg
fadd
fs
call
mov
mov
inc
ins
adc
in
sti
in
cmps
pushf
jg
ins
add
call
inc
sar
and
lahf
mov
mov
pop
adc
js
push
loope
lods
push
sbb
loopne
or
popf
or
add
(bad)
mov
sub
jp
xlat
mov
iret
mov
retf
dec
push
rol
or
xchg
mov
cmps
jmp
lods
(bad)
adc
mov
lods
mov
jge
dec
sbb
pop
imul
push
shl
and
pop
out
jmp
inc
fsub
cmp
dec
adc
inc
mov
pop
or
cmp
mov
or
sahf
in
jmp
cli
(bad)
stc
int3
inc
sub
and
dec
mov
aad
jmp
in
rcr
(bad)
fmul
xor
shl
or
add
xchg
cmc
jle
fimul
pop
or
out
lds
aas
push
adc
rol
sub
xor
xor
ds
outs
in
or
(bad)
call
pslld
xor
and
cs
jg
shl
ret
jl
dec
in
push
inc
ret
and
push
pop
pop
out
sub
hlt
dec
push
and
jno
hlt
inc
iret
pop
inc
popa
test
dec
mov
mov
sbb
mov
xor
aaa
xchg
add
lock
fsubr
je
jb
inc
sbb
call
jnp
and
add
in
cmc
mov
call
aas
icebp
test
in
jg
arpl
ins
punpcklwd
mov
mov
sub
sti
lea
out
sbb
sti
jbe
sti
cmp
cld
retf
iret
cld
scas
out
cmp
outs
cld
dec
popa
or
popf
push
or
mov
rep
test
or
mov
sti
cmp
fcom
(bad)
jae
cld
mov
cmp
(bad)
sti
clc
push
add
xor
inc
push
or
mov
push
ins
dec
mov
mov
mov
inc
xchg
sbb
jno
loope
ins
jns
out
push
cdq
push
cmps
dec
gs
sub
shr
mov
pop
mov
dec
ret
ins
(bad)
xor
xor
lds
push
popa
pop
xchg
xor
cmp
imul
cmp
arpl
mov
in
(bad)
retf
xor
fidivr
cmp
enter
or
jno
and
jmp
retf
adc
ret
sbb
push
mov
pop
jae
mov
xor
add
push
cmc
jmp
repz
aam
dec
xlat
mov
mov
aam
int
mov
jmp
(bad)
iret
push
inc
into
dec
push
jno
pushf
cmps
and
push
cli
pop
mov
fwait
xlat
and
(bad)
dec
xor
adc
les
lahf
dec
and
stc
repz
jmp
xor
mov
jae
xor
jge
ins
mov
push
sub
sub
lea
sub
imul
fidivr
sub
mov
stos
inc
jecxz
imul
dec
lods
jo
jae
and
and
add
or
inc
sub
add
add
add
add
or
add
mov
pop
or
cmp
push
and
or
push
xor
mov
push
push
sbb
movs
leave
xchg
sub
dec
dec
cmps
movs
dec
xor
aad
push
dec
cmps
out
xchg
xor
xor
xchg
cmp
sar
xchg
inc
ins
xchg
je
mov
ror
push
loop
stos
bound
xor
inc
dec
(bad)
or
movs
retf
xor
push
out
fwait
mov
push
mov
jecxz
ins
imul
inc
lea
sub
mov
sub
fst
retf
pop
jno
(bad)
nop
dec
rcr
mov
in
jge
pop
(bad)
clc
mov
popa
ret
mov
(bad)
test
inc
pop
int
push
push
sbb
imul
into
and
and
cmp
(bad)
push
inc
jns
mov
test
mov
das
pop
mov
sbb
call
fistp
lds
call
fisubr
stos
daa
cwde
sbb
ins
jmp
inc
(bad)
in
cmps
mov
sti
clc
jmp
das
cs
add
pop
xchg
retf
inc
sbb
and
clc
push
push
out
pop
(bad)
std
les
jae
out
inc
xchg
inc
jmp
popa
loop
sub
push
aam
dec
pusha
inc
sub
push
mov
cmp
test
lea
xchg
ss
dec
imul
sbb
mov
cmps
test
xchg
sub
clc
nop
pop
cmp
aad
(bad)
test
push
xchg
jecxz
pop
push
in
push
fdiv
js
fadd
mov
pop
sbb
leave
sbb
dec
mov
add
cs
inc
xchg
xor
ins
fxam
mov
cwde
xchg
(bad)
fwait
lods
and
addr16
jne
jns
xchg
aad
data16
dec
jns
mov
mov
stos
pop
fiadd
xchg
sar
add
push
inc
push
ficomp
pop
pusha
call
test
std
cmp
lahf
xchg
lds
ss
or
jno
cmps
cmp
arpl
imul
jp
sbb
shl
cs
fidivr
test
js
lea
pop
leave
out
js
mov
(bad)
jmp
scas
mov
retf
lods
stc
push
stos
mov
cmps
(bad)
in
jge
sahf
xor
ret
jmp
ret
in
enter
cmp
and
mov
(bad)
and
imul
aad
jae
cld
(bad)
cdq
cmp
mov
mov
in
xor
cmp
into
cmp
in
repz
jecxz
popa
addr16
stc
imul
ja
mov
mov
hlt
shl
xlat
mov
(bad)
push
aam
or
cdq
js
leave
daa
mov
and
adc
inc
push
or
retf
add
ins
fs
push
mov
cmp
and
fdiv
repz
call
fidiv
dec
outs
fnstenv
test
js
add
dec
xor
inc
push
mov
retf
sub
jg
jl
dec
sahf
stos
ins
in
fcomp
cmps
scas
jp
cmp
mov
jmp
retf
test
lock
je
shr
sahf
leave
jecxz
sbb
int3
icebp
enter
xor
int3
xchg
jns
pusha
pop
in
push
nop
inc
sub
imul
jne
loopne
test
xor
jp
mov
push
clc
sbb
test
cld
hlt
shr
push
stos
adc
loop
xor
mov
(bad)
xor
xor
inc
rol
lock
mov
cmp
pop
das
inc
fld
or
cmps
mov
loopne
pusha
add
sbb
cli
aam
mov
repnz
sub
add
test
or
pop
or
rcr
(bad)
cli
out
add
rol
inc
xchg
or
(bad)
sub
dec
xchg
ds
cdq
and
push
ja
sub
add
cld
push
pop
inc
and
popa
or
or
pop
or
lock
mov
ss
add
cli
lock
cmp
push
mov
inc
ds
rcr
mov
loop
mov
jno
fdivr
xor
adc
xchg
inc
xor
mov
cli
lods
jno
outs
and
sbb
ret
loope
nop
cwde
inc
lsl
pop
xchg
popa
inc
jo
push
nop
(bad)
xor
and
stc
sbb
cwde
mov
sub
lock
or
fist
inc
mov
and
inc
and
dec
outs
push
ret
mov
outs
xchg
and
sbb
xor
dec
fld
test
mov
add
sub
cmp
(bad)
arpl
jo
cmp
(bad)
xchg
jo
adc
jbe
adc
xor
lds
lods
mov
mov
xor
inc
and
add
xor
js
fwait
add
es
jno
rcr
call
push
sub
cmp
sub
mov
ins
xor
cwde
push
push
inc
xor
or
lea
xor
test
xor
mov
cmps
bnd
cmp
jmp
jmp
daa
dec
mov
dec
jne
add
pop
sbb
(bad)
in
popf
ror
push
xor
outs
mov
dec
inc
inc
xor
fsub
push
xchg
push
nop
add
je
inc
add
adc
add
xor
stos
jnp
jmp
jecxz
dec
leave
in
pop
fst
into
or
clc
push
fist
add
lahf
sub
hlt
mov
aam
push
cmc
mov
lods
inc
push
cmps
cli
shr
pushf
sub
jecxz
mov
and
mov
leave
add
push
(bad)
inc
add
inc
stos
sar
adc
and
dec
sub
or
mov
xor
or
movs
les
sub
push
dec
mov
adc
sahf
inc
bnd
push
add
retf
push
inc
fstp
mov
outs
imul
sub
lds
or
loopne
ja
loopne
xchg
imul
cli
adc
(bad)
inc
js
int3
ins
or
inc
push
mov
mov
or
outs
clc
xchg
es
cmp
add
leave
jae
adc
shl
(bad)
or
push
add
in
mov
jecxz
sbb
mov
or
mov
xor
out
loope
mov
test
cli
jp
dec
retf
dec
test
int3
iret
pop
mov
pop
neg
xor
lock
mov
pop
jbe
pushf
out
movs
jecxz
stos
mov
push
jnp
dec
cmp
into
jne
xor
arpl
iret
push
pusha
shl
adc
jge
push
sbb
adc
nop
mov
and
jmp
and
popa
fisttp
stos
lea
pop
and
js
mov
pop
cmp
inc
in
pop
rcl
fstp
imul
sti
hlt
(bad)
mov
mov
add
fmul
into
test
mov
or
add
dec
in
jl
xchg
scas
adc
fisub
sbb
fbstp
inc
xor
clc
arpl
inc
js
xchg
mov
cdq
jb
mov
fucomi
push
aad
mov
cmp
aaa
mov
xchg
fidivr
pushf
xor
aas
stos
data16
or
loop
jb
(bad)
and
ret
loopne
dec
mov
or
scas
jno
into
mov
sbb
cmp
or
daa
sub
and
cmp
xchg
jmp
outs
cld
sbb
out
and
hlt
mov
push
ja
sbb
xor
je
cmps
sub
aam
push
jg
cmp
mov
pop
mov
cs
aad
or
outs
test
cmp
sbb
sti
or
push
adc
js
mov
push
jnp
push
inc
cli
mov
sbb
fmul
dec
add
loope
ret
mov
rcl
mov
jmp
je
std
icebp
arpl
add
push
add
pushf
xchg
stc
sub
mov
iret
jg
and
std
or
jbe
pop
popf
xchg
loop
call
xlat
in
jp
inc
aaa
pushf
into
push
push
sbb
(bad)
iret
popa
or
cld
shl
mov
mov
clc
mov
pop
lock
outs
inc
adc
mov
jge
fs
mov
mov
jge
inc
aas
pop
push
aas
lds
jecxz
jle
adc
out
je
lds
pop
push
fisub
js
inc
dec
mov
or
pusha
dec
mov
sub
retf
adc
enter
aam
cmp
(bad)
xor
out
add
ror
inc
test
cdq
pop
arpl
test
jge
pusha
add
pop
inc
cmps
cmps
adc
inc
lods
push
add
inc
sbb
sub
dec
jp
inc
sbb
jg
pop
cwde
repz
adc
mov
push
bound
adc
add
inc
cmps
inc
fadd
or
dec
push
fs
lock
xchg
fdivr
aaa
jno
test
jp
sbb
mov
cmp
je
rol
cmc
pop
iret
push
jnp
push
push
jmp
inc
or
movs
or
add
inc
bound
gs
push
rol
nop
add
inc
mov
push
push
ror
dec
mov
sbb
arpl
pop
adc
lea
mov
jbe
test
xchg
push
clc
cmp
mov
xchg
add
lock
adc
xchg
xor
xor
xchg
add
mov
fcom
mov
movs
pop
xor
push
js
outs
adc
mov
call
add
push
cmp
add
or
cwde
cmp
inc
or
xor
cmps
xor
jo
sbb
sti
xchg
push
mov
cld
les
or
or
or
sbb
je
dec
fdiv
xchg
jae
(bad)
js
test
mov
fld
mov
cmp
xlat
test
pop
cmp
movs
cmp
mov
push
aaa
or
sub
jns
adc
js
mov
pop
xchg
ins
or
nop
add
mov
test
cmp
adc
pop
test
jge
push
mov
xchg
lea
mov
or
cdq
cmp
mov
mov
or
sub
adc
aaa
arpl
iret
mov
das
push
mov
jae
pop
jge
cmp
sub
jae
cmc
xchg
dec
pop
push
out
sbb
cwde
rol
les
out
or
cmp
jo
cmps
loope
add
pop
es
loop
cdq
push
sub
aad
xor
pop
mov
adc
adc
mov
add
call
fwait
(bad)
and
imul
lea
or
mov
in
inc
or
rcl
pushf
out
ror
adc
pushf
int3
mov
sbb
or
jns
mov
fisub
dec
jp
mov
pop
pop
scas
imul
pop
out
xchg
ficomp
lahf
push
aaa
inc
out
ror
ror
and
adc
lds
mov
push
jne
xchg
fnsave
sbb
in
popa
and
movs
mov
mov
mov
fldenv
in
imul
adc
add
cmp
fwait
push
cmp
xor
lahf
and
xor
pop
loopne
push
mov
pop
add
imul
jb
xchg
adc
jns
popa
pop
cmp
adc
xchg
sbb
movs
xor
push
out
xchg
pop
stos
mov
inc
popa
pop
(bad)
fiadd
leave
lahf
std
or
xor
fidiv
mov
ror
mov
clc
inc
rcl
inc
sub
mov
sbb
fisub
dec
aas
popa
enter
ja
add
jo
mov
pop
pop
add
fisub
lds
jno
xor
mov
push
and
data16
push
push
lods
mov
imul
js
scas
stos
sub
jmp
dec
arpl
mov
or
call
lods
mov
sub
xor
pop
adc
outs
lds
sub
cmp
aad
adc
call
scas
dec
call
fwait
ins
pop
aas
fisttp
dec
inc
xchg
jne
je
iret
add
scas
cmc
imul
(bad)
bnd
mov
xor
je
dec
cmp
xchg
mov
pop
jmp
popa
stos
mov
add
gs
imul
dec
stos
stos
stos
cmp
pop
clc
cmps
or
add
jnp
inc
inc
mov
cmp
es
sbb
das
add
xchg
ret
test
dec
jl
and
sbb
fs
mov
sbb
cmp
lods
inc
pop
mov
mov
sbb
adc
mov
imul
ins
pop
and
(bad)
xor
mov
or
sbb
mov
push
mov
mov
scas
imul
imul
cmp
add
call
mov
pop
mov
sub
out
pop
mov
push
mov
adc
inc
jno
ja
push
inc
scas
in
and
or
sbb
xor
neg
dec
jae
inc
mov
fs
cmp
inc
jecxz
xchg
sti
adc
jp
cmp
mov
sar
inc
jmp
mov
jp
cwde
mov
xlat
movs
sbb
pop
mov
push
lock
push
or
or
add
popa
repz
cli
fstp
adc
gs
arpl
sub
mov
lds
and
mov
fwait
add
mov
jp
mov
mov
mov
js
mov
inc
push
adc
iret
jo
sahf
jo
mov
or
push
cmp
cmp
mov
cmp
ret
pop
xor
inc
cld
or
les
les
adc
icebp
daa
dec
call
push
fldenv
jmp
out
pop
inc
adc
and
xchg
xchg
fild
cli
stos
sbb
sar
adc
and
pop
mov
stos
aas
test
or
ret
push
nop
ret
xchg
xchg
(bad)
jp
(bad)
jl
(bad)
int3
arpl
or
jle
mov
les
and
sti
xchg
mov
addr16
xor
pop
in
lds
xabort
mov
(bad)
lods
fwait
stos
jl
pushf
imul
(bad)
sti
arpl
inc
lahf
in
les
inc
inc
mov
or
jge
jb
xchg
(bad)
sub
mov
cwde
(bad)
and
mov
xchg
fucom
jne
adc
inc
fdiv
cmp
xor
jno
leave
pop
pushf
and
leave
shr
pop
mov
jns
aaa
clc
jbe
mov
jno
push
in
ror
xor
rcl
adc
icebp
pop
mov
xor
xchg
cmp
xor
in
or
(bad)
pop
add
jge
inc
cld
ret
or
ret
sub
lds
(bad)
aaa
cmps
aaa
mov
int
dec
sub
jo
cmp
fs
shl
rcr
imul
lea
in
cmp
jmp
call
pop
lods
lds
add
adc
sbb
bound
inc
pop
aam
fstp
sbb
(bad)
fcmovnbe
jmp
int3
adc
clc
xchg
push
nop
and
xchg
jmp
mov
sar
rcl
sti
mov
inc
inc
and
cmp
outs
repz
imul
div
adc
adc
imul
adc
rol
dec
cld
lds
cmp
xor
xchg
cld
sub
sub
das
mov
fmul
fisubr
dec
push
mov
add
xor
and
or
lock
outs
sbb
inc
jo
test
pushf
repz
and
jne
(bad)
xchg
lea
xor
pop
jb
push
in
pop
xor
int
cs
or
pusha
sbb
loopne
fldcw
shl
mov
sbb
or
(bad)
jmp
push
or
and
loop
and
dec
pop
fstp
pop
inc
in
ror
or
cmp
push
sbb
ins
fstp
fsub
sub
lods
mov
pop
movs
fs
(bad)
jo
movs
pop
adc
adc
push
xchg
repnz
in
mov
pop
(bad)
push
and
nop
add
and
xor
fst
pop
mov
bound
jecxz
movs
ror
push
jle
movs
dec
test
cli
mov
shl
dec
or
inc
pop
xor
or
and
loope
loope
dec
mov
adc
inc
fcomp
sbb
loop
cs
sbb
jecxz
pop
add
mov
dec
xor
xlat
jecxz
fsub
xor
push
gs
aad
mov
sahf
adc
in
pusha
pop
inc
push
cdq
ins
mov
mov
pop
lods
in
lods
fldcw
lods
mov
push
adc
jp
shr
femms
ds
inc
and
push
out
xchg
fisttp
jns
mov
fsubp
jle
es
rcl
sub
add
push
retf
adc
pop
fcomp
(bad)
xchg
out
mov
in
pop
jne
add
nop
push
inc
pusha
sbb
ins
adc
out
out
pop
jmp
lods
fiadd
lods
in
ins
mov
dec
mov
and
and
test
push
(bad)
mov
popa
jmp
inc
icebp
mov
sub
fiadd
leave
into
daa
pop
mov
inc
push
lods
(bad)
pushf
adc
pop
rcr
xor
in
sub
mov
ficomp
and
hlt
inc
inc
lock
fcom
icebp
mov
into
imul
in
cld
out
dec
cmps
psubd
push
mov
push
pushf
fisub
pop
popa
out
inc
sub
mov
sahf
jmp
loop
pop
add
mov
retf
push
or
mov
or
pop
push
paddsb
jmp
xor
loopne
or
out
inc
out
dec
lods
popa
fs
mov
rol
dec
push
pop
mov
(bad)
sbb
stos
(bad)
repz
add
mov
adc
ins
pusha
in
dec
mov
jmp
not
sbb
mov
repz
and
adc
sub
bound
xchg
popa
or
ins
mov
imul
ds
push
add
jmp
and
arpl
push
not
outs
lahf
(bad)
dec
fcmovu
cmp
paddsb
hlt
or
iret
icebp
push
dec
fs
sbb
clc
aaa
mov
pop
popf
xor
out
cmps
jle
call
fnstcw
fstp
cli
aad
or
popf
js
popf
mov
mov
out
hlt
mov
hlt
dec
ffreep
hlt
pop
cmc
push
jno
mov
inc
sbb
cmc
jg
adc
out
push
or
push
popa
and
iret
xor
out
scas
neg
xchg
add
jb
mov
adc
adc
xor
mov
mov
(bad)
jnp
inc
mov
daa
push
pop
leave
xchg
out
mov
dec
xchg
push
int3
movs
pop
shl
int
push
loop
(bad)
out
cdq
popa
test
sbb
xchg
mov
cli
ror
dec
xor
dec
xchg
repnz
es
lods
push
daa
jmp
mov
(bad)
push
(bad)
retf
pop
mov
mov
lods
pop
inc
mov
or
cs
inc
or
pusha
add
out
fs
in
ja
call
call
(bad)
out
cmp
dec
mov
mov
dec
xor
scas
out
mov
mov
jbe
call
in
ins
mov
dec
(bad)
cs
xor
jo
inc
test
rcl
add
ins
out
(bad)
mov
(bad)
cmc
mov
push
jmp
das
xchg
pop
test
mov
bnd
mov
mov
dec
push
cmc
xor
xchg
mov
inc
or
sbb
rol
sbb
fs
add
bound
mov
and
das
push
mov
sbb
push
xchg
in
loop
out
js
imul
aam
imul
(bad)
xlat
jmp
xor
fsubr
lds
ret
and
rcl
xchg
rol
or
in
add
pop
bound
pop
pop
movs
inc
dec
push
push
outs
rol
jne
ror
xor
(bad)
sbb
push
out
and
push
nop
cmp
inc
dec
inc
xor
fcom
lods
sub
ins
hlt
xor
dec
inc
xor
push
cmp
and
mov
push
mov
scas
lock
sbb
mov
adc
pushf
xor
dec
sub
jne
push
xor
fnsave
inc
pop
bound
les
push
iret
aam
imul
test
(bad)
es
imul
or
pop
pusha
mov
adc
dec
and
push
adc
dec
call
cmp
adc
inc
push
cmp
aas
xor
dec
jmp
movs
push
test
pusha
int3
sbb
mov
lea
mov
xchg
sub
xchg
mov
cmp
adc
lock
adc
test
push
mov
in
mov
outs
shl
lock
fs
or
aad
push
movs
pop
sbb
lods
jae
inc
sahf
fnstsw
sbb
cdq
add
cwde
pusha
cmps
(bad)
jl
push
call
call
idiv
nop
pop
xchg
dec
out
dec
hlt
loopne
add
push
add
ins
movq
fsubr
push
cmp
sub
ds
inc
adc
lods
xlat
sbb
les
mov
jbe
es
repnz
fadd
jp
cmps
fs
xchg
inc
retf
sbb
cmc
inc
xchg
fs
sbb
int
loop
inc
outs
dec
jno
jo
shl
in
push
fs
sub
xchg
test
loope
fidiv
lods
inc
loop
fsub
inc
xchg
inc
push
das
xchg
jle
xchg
sahf
(bad)
fdiv
jmp
pop
push
movs
adc
mov
arpl
push
and
in
rcl
push
fisttp
xor
loope
shl
jmp
daa
sbb
or
fiadd
pop
mov
fadd
xor
xchg
xor
fst
mov
pop
ins
jnp
pusha
inc
(bad)
mov
and
ja
sbb
and
or
add
pop
sbb
pop
sub
mov
mov
(bad)
daa
mov
and
add
and
xlat
fs
xchg
adc
test
cmps
inc
pop
fldenv
adc
jne
xchg
inc
fadd
es
pop
mov
jmp
inc
or
aad
mov
retf
sub
push
icebp
sar
inc
push
xor
push
dec
aam
xor
mov
adc
or
push
push
fcmovne
mov
xchg
inc
dec
outs
push
sub
ficom
int3
add
xchg
cwde
popa
std
data16
aaa
mov
nop
jne
in
sbb
add
popf
jmp
cmp
fld
clc
out
sbb
adc
and
jecxz
inc
rol
jl
rol
xchg
pop
add
aam
call
sub
data16
mov
lea
pusha
pushf
outs
push
push
and
sub
jl
nop
clc
mov
ins
cmp
jnp
js
out
push
dec
outs
jge
add
lds
add
add
xchg
cdq
es
jmp
sahf
loope
arpl
xor
cwde
dec
sub
inc
cwde
ins
ret
fbld
in
cmp
push
mov
imul
pop
add
movs
mov
xchg
cmp
lds
es
mov
xchg
pop
and
je
add
js
inc
pop
jmp
and
and
scas
pop
sbb
ins
push
sbb
add
xor
inc
push
rcl
mov
das
jl
dec
cmps
test
test
sub
lods
push
xchg
ret
and
test
jae
test
or
gs
(bad)
loope
jmp
lods
pusha
pop
inc
loope
push
mov
mov
lds
scas
fstp
inc
xor
arpl
ror
add
or
adc
loopne
xor
inc
push
and
add
dec
inc
pop
jmp
std
rcl
add
enter
sti
xchg
sbb
lahf
mov
scas
dec
js
or
sub
stos
mov
inc
mov
cmc
movs
sbb
shl
mov
or
gs
xchg
xchg
ss
and
add
(bad)
loopne
and
fcmovnu
data16
or
add
test
mov
div
(bad)
popf
and
xchg
pop
(bad)
xchg
ror
sbb
in
jne
mov
push
call
add
or
cld
outs
mov
sti
dec
inc
(bad)
idiv
jmp
cmc
xchg
movs
or
test
pop
adc
cmp
sbb
mov
cmp
add
xor
add
adc
call
sub
xchg
and
sub
add
push
xchg
sub
and
(bad)
sbb
dec
mov
leave
push
in
es
mov
push
xor
lds
icebp
outs
sbb
enter
push
or
aas
sub
int3
sbb
xchg
add
adc
or
pop
les
cmps
fnstsw
jb
mov
pop
sub
sub
gs
xchg
inc
test
lods
cdq
int
jb
xor
mov
hlt
inc
jb
push
aad
sahf
movs
pusha
adc
fadd
scas
inc
pop
cmp
pushf
jecxz
adc
sub
nop
and
imul
aam
push
pop
popa
sbb
inc
ja
cmp
jo
in
sub
dec
enter
xchg
mov
rcl
fstp
cwde
cdq
inc
in
scas
fbstp
adc
or
or
(bad)
jle
stos
adc
je
xor
popa
add
test
in
pop
scas
add
shr
add
adc
call
and
xor
(bad)
shl
pop
xchg
and
rcl
inc
cmp
das
xchg
js
xchg
into
dec
test
cmc
mov
cs
pusha
lods
imul
lods
jmp
and
aam
mov
mov
(bad)
fisubr
in
or
popa
add
adc
mov
or
add
and
or
or
cmp
sar
adc
ds
stos
int3
push
push
jl
sahf
call
rol
dec
xchg
pop
sar
mov
cld
mov
les
jmp
and
pop
repz
scas
cli
and
test
mov
adc
sub
outs
add
or
pusha
push
inc
and
and
gs
lods
inc
inc
xchg
mov
fistp
enter
loope
cwde
mov
rol
cmp
sub
mov
dec
xor
jle
jnp
xchg
loop
std
mov
clc
add
jne
jmp
xchg
cmc
mov
push
sub
std
in
outs
jp
jl
jmp
pop
jge
fisub
rcr
xchg
mov
lock
mov
or
jnp
jb
test
xor
mov
jge
xor
xchg
sub
pushf
rcl
imul
cdq
aaa
push
jo
mov
adc
mov
or
fsubr
dec
mov
push
lods
movs
into
jae
hlt
ret
sub
cmp
loopne
aaa
sbb
mov
push
sub
sbb
add
rol
or
inc
xor
cmp
test
inc
jmp
(bad)
push
pop
mov
ds
and
cmp
pushf
jecxz
fwait
jecxz
or
sub
mov
xor
push
push
add
cmp
jae
add
clc
test
shl
mov
arpl
test
call
cli
xor
sti
ret
lods
out
repz
xor
add
rol
inc
rol
push
movs
mov
sbb
or
mov
sbb
add
inc
fiadd
inc
add
sbb
add
mov
mov
push
jmp
adc
mov
ret
call
call
rcr
pusha
push
test
cdq
add
aas
and
pop
inc
test
inc
and
mov
inc
jne
call
dec
fadd
stos
clc
mov
adc
push
add
daa
lock
mov
mov
add
test
pushf
inc
or
sbb
mov
jae
add
lds
add
sub
test
and
ror
movs
ret
mov
add
xor
mov
add
add
mov
cmp
or
push
jno
and
in
inc
jbe
inc
popf
fmul
jne
call
shl
inc
jmp
lds
add
xor
mov
xor
inc
push
and
sbb
das
add
mov
dec
dec
add
enter
dec
jo
pop
pop
sbb
mov
push
or
cmp
jl
pop
jbe
push
mov
test
test
xchg
xchg
and
jns
jmp
adc
dec
dec
lds
test
sbb
jns
aas
push
in
daa
rol
inc
and
dec
dec
daa
push
add
les
dec
nop
ficom
dec
fcmovbe
add
mov
or
add
add
enter
inc
shl
mov
loop
or
dec
push
push
push
jne
xchg
into
jbe
push
pop
cwde
test
mov
pushf
add
jl
jno
les
(bad)
(bad)
lea
sub
call
pop
dec
cmp
test
into
cld
dec
pop
mov
shl
sar
ins
dec
(bad)
test
add
adc
inc
call
add
les
or
cmp
and
push
inc
test
mov
push
out
test
push
dec
push
xchg
add
and
pop
stc
add
nop
sbb
test
out
pushf
push
sbb
into
mov
repz
movs
adc
inc
or
test
dec
test
cs
cmps
je
add
push
fisubr
dec
stos
in
iret
call
ins
enter
cmp
add
add
and
ja
or
rol
xchg
dec
add
push
sub
push
and
push
or
add
xchg
sbb
test
repz
int3
or
jmp
push
mov
push
and
and
add
dec
nop
mov
lods
std
inc
dec
aad
iret
add
pop
cmp
adc
add
mov
push
jbe
dec
jmp
or
add
(bad)
sar
lods
rol
or
xor
fadd
adc
xchg
push
lea
inc
inc
jge
jne
xchg
popf
nop
or
inc
mov
retf
rcr
sbb
push
pop
mov
test
mov
cli
je
dec
sub
push
lods
retf
lds
add
iret
jp
dec
imul
mov
pop
xchg
push
pop
movs
push
pop
in
push
(bad)
shl
inc
add
rcl
cmp
jmp
mov
add
add
xor
push
mov
xor
fwait
xor
cmc
sub
push
jae
aam
enter
add
js
je
mov
add
fld
dec
dec
fldcw
cmp
jl
push
jmp
cwde
lds
hlt
mov
cmp
sbb
je
pop
imul
jecxz
out
add
clc
add
shr
enter
add
add
and
xor
mov
sbb
and
cmps
arpl
xchg
inc
test
pop
fs
cwde
lea
pop
add
pop
push
sub
aam
sbb
add
(bad)
cld
mov
cmp
loopne
sbb
xor
test
int
ja
xor
cmp
add
or
cmp
add
push
pop
add
adc
inc
lods
mov
test
add
enter
pop
jmp
xchg
repnz
mov
mov
add
movs
add
cmp
fcomp
and
add
adc
int3
ret
xchg
retf
rcr
fcmovbe
mov
adc
adc
add
cmp
pop
test
add
pusha
pop
pop
pusha
pop
push
fnstsw
ret
test
add
mov
cmp
pop
xor
pop
fstp
sub
fdivrp
bound
inc
add
test
xchg
xor
inc
mov
pop
mov
popa
call
int3
int3
inc
cmovl
pop
out
and
cmp
xchg
fcomip
ins
test
dec
fisttp
sbb
loop
mov
dec
enter
jnp
fist
xor
loopne
imul
xchg
loopne
ds
add
test
inc
pusha
add
sbb
loopne
mov
(bad)
add
pop
sub
scas
pop
mov
cmp
jmp
ficomp
jle
inc
xchg
popa
sbb
rcl
shr
or
mov
js
mov
and
add
xor
mov
push
jbe
pushf
ret
adc
mov
pop
jl
bound
loop
jnp
test
add
add
rol
push
push
pusha
and
add
add
xchg
add
sub
cmp
cmp
mov
push
jnp
xlat
adc
push
ins
dec
add
push
add
(bad)
inc
xchg
outs
cs
mov
fs
dec
in
dec
(bad)
int3
push
pop
pop
cdq
pop
test
test
aaa
push
push
xchg
push
inc
enter
test
ds
cmps
in
rol
sbb
cmp
pop
cmps
test
push
bound
pushaw
fadd
jecxz
jbe
sub
xor
loopne
cmp
add
pop
cld
mov
ins
dec
add
imul
push
out
xchg
pop
jne
jmp
into
jmp
call
mov
fstp
mov
int3
lods
aam
mov
jns
outs
push
push
pop
add
mov
int3
mov
sbb
add
pop
push
xor
adc
mov
fisubr
out
push
(bad)
arpl
dec
add
lds
pop
jmp
push
out
mov
call
outs
jmp
dec
test
add
sahf
in
leave
test
ins
int
in
dec
call
retf
in
inc
and
dec
xchg
test
out
lods
out
test
mov
(bad)
jmp
scas
sub
(bad)
test
test
push
sub
imul
jecxz
mov
push
mov
mov
into
outs
in
into
outs
shr
inc
pusha
jmp
push
outs
sbb
(bad)
outs
enter
pop
outs
imul
dec
call
and
add
and
dec
xor
rol
aad
in
jle
pop
sub
(bad)
sbb
pop
mov
sub
mov
sbb
mov
jmp
outs
push
outs
sub
dec
outs
mov
fnsave
jp
imul
test
ins
inc
sub
outs
jno
jg
xacquire
dec
out
(bad)
jbe
sbb
int3
fdivp
int3
test
sub
mov
call
mov
jg
sub
aad
sti
fadd
jmp
pop
test
xchg
loope
jo
inc
outs
push
out
comiss
or
jle
jmp
test
jae
fbstp
iret
jno
inc
jno
cmps
icebp
mov
hlt
leave
out
push
pcmpeqb
repnz
mov
clc
movs
add
jo
and
gs
push
loop
ss
inc
add
paddusw
sti
fcomp
loop
dec
lock
dec
push
(bad)
in
xor
out
bound
xor
sub
out
out
fnstsw
add
cmp
mov
ror
jg
push
jbe
lahf
add
fucomip
enter
fsubr
icebp
dec
out
loope
out
int
repnz
add
xchg
push
mov
div
add
mov
adc
fsub
push
push
push
aas
jmp
outs
push
data16
or
outs
xor
jne
mov
test
out
sub
jmp
add
add
jmp
sar
xchg
aas
stc
push
jns
push
in
(bad)
inc
addr16
ins
push
hlt
neg
icebp
inc
iret
mov
outs
cli
jle
jae
je
aas
in
aam
add
div
add
adc
retf
jne
iret
test
add
xchg
gs
add
das
add
adc
pop
js
xchg
or
jnp
das
fist
int
sub
or
add
icebp
add
stc
data16
test
addr16
or
xchg
cwde
cmps
jns
outs
je
test
hlt
jecxz
add
and
and
je
fcomip
jns
xor
mov
pop
xchg
call
bound
cmc
mov
scas
stos
iret
jp
pop
push
gs
xchg
js
div
push
add
pusha
dec
pop
sti
push
pop
call
jnp
pop
jle
out
xchg
(bad)
hlt
push
cld
rcr
out
in
mov
fwait
and
add
(bad)
jns
pop
adc
and
test
bound
xor
sub
fild
shl
add
cli
xor
popa
push
jmp
addr16
dec
repz
daa
jnp
lahf
std
xor
mov
ss
lds
mov
pop
es
inc
adc
dec
pop
inc
mov
ss
test
and
pop
and
sub
xor
retf
push
mov
jmp
xor
lods
imul
aas
cmp
dec
pushf
push
and
fwait
movs
outs
xor
cmp
or
sbb
mov
add
add
mov
mov
jmp
add
push
xchg
xor
jmp
sub
jmp
outs
mov
xor
mov
dec
enter
inc
mov
pop
int3
test
and
aam
addr16
ins
fsubr
repz
fwait
cmp
jmp
mov
and
push
cmps
dec
mov
or
add
push
add
loopne
fsubr
shl
sub
(bad)
pop
mov
adc
xchg
in
jo
leave
(bad)
sbb
mov
pop
rcr
push
and
fiadd
sub
xchg
leave
xor
push
mov
repnz
sbb
dec
xor
xor
adc
add
push
xlat
push
jbe
jns
push
ja
test
les
mov
pop
lods
cwde
and
aaa
fdivr
xchg
fcomp
arpl
pop
jge
push
mov
and
add
out
or
js
and
clc
(bad)
and
or
and
pop
cmp
enter
mov
gs
outs
inc
lds
int3
xor
lods
fsub
push
pop
fcmovnbe
test
ja
cmps
aad
pop
loop
clc
jecxz
jge
(bad)
push
popa
test
xor
movs
xchg
mov
or
sub
xchg
xor
mov
pop
popa
xchg
push
add
outs
nop
jns
cdq
imul
mov
daa
popf
leave
mov
pop
sub
push
lds
and
mov
dec
adc
xor
sbb
test
xlat
pop
cmp
sahf
push
or
mov
cmps
xor
inc
jge
push
leave
push
pop
out
mov
das
xchg
sub
inc
mov
or
cmp
inc
lds
dec
fisttp
stos
in
outs
mov
iret
test
pop
dec
push
or
mov
pop
call
jno
jp
xchg
je
mov
add
ja
pop
ficomp
in
mov
sbb
pop
jnp
loop
dec
xchg
dec
xchg
shl
aam
fdiv
mov
or
sub
jo
mov
imul
cwde
icebp
(bad)
leave
xor
(bad)
xchg
cmp
xchg
push
pop
xchg
sub
jno
imul
test
mov
sub
push
xor
cmp
movs
out
push
push
push
in
xchg
or
popf
inc
or
in
sbb
aaa
xchg
gs
sub
adc
(bad)
in
xchg
rol
jl
add
inc
push
mov
cdq
ss
mov
mov
xchg
lods
and
or
arpl
mov
and
push
sub
rol
sub
add
xor
sbb
popf
jo
es
inc
pop
mov
cld
test
das
mov
xchg
jl
add
call
inc
jle
mov
xor
xlat
int
xor
nop
fucomp
sbb
mov
and
xor
ja
rcl
lock
or
lock
pop
test
xor
jp
inc
aam
add
xchg
mov
add
xchg
xor
pop
sbb
inc
pusha
or
or
inc
xor
ret
pop
cld
add
cld
ins
ret
mov
push
mov
aas
adc
mov
add
jo
push
cmp
xor
xor
and
lea
xor
dec
cmp
and
inc
push
and
mov
popa
mov
loope
out
inc
xchg
add
mov
sub
in
push
nop
adc
xor
mov
loope
dec
push
xor
push
aam
and
add
or
lock
add
pusha
add
or
test
xlat
enter
xchg
ins
jae
pusha
outs
out
test
or
add
movs
inc
adc
add
pop
mov
xchg
mov
je
inc
add
inc
loopne
xchg
sbb
push
sub
mov
out
sbb
fbstp
push
rcl
xchg
sub
aas
ds
xchg
in
sub
rcr
push
jno
add
in
add
(bad)
and
dec
retf
mov
ss
xor
xor
pop
call
scas
aad
pop
jle
outs
arpl
add
rcl
mov
push
sahf
rcl
cmp
dec
and
push
add
jae
mov
rcl
add
and
xor
jne
mov
stos
jo
sub
cmp
or
test
mov
mov
mov
and
dec
dec
ins
stos
cmp
inc
add
sbb
inc
retf
xor
pop
cld
sbb
stos
push
fist
mov
mov
push
pop
jmp
adc
mov
arpl
xchg
adc
jmp
dec
fadd
pop
nop
sbb
pop
call
mov
xor
or
les
jo
mov
push
push
cld
sbb
bound
xchg
dec
hlt
test
pop
push
mov
sub
in
ror
pop
ret
mov
jmp
lods
push
add
cmp
mov
test
xchg
(bad)
jb
jne
into
mov
mov
pusha
add
std
lods
jo
sub
mov
jbe
loopne
mov
fiadd
je
nop
sub
fxam
add
pop
iret
jne
sbb
pop
mov
shr
sub
or
or
ror
and
lock
std
sbb
out
push
jno
push
hlt
mov
pop
push
inc
mov
je
outs
loope
dec
pop
sbb
inc
jl
push
xchg
dec
mov
aas
ins
push
mov
mov
push
(bad)
jno
nop
fadd
dec
dec
jno
div
out
test
inc
cmc
push
add
push
xchg
or
jecxz
xchg
jl
daa
daa
imul
sub
sbb
mov
adc
rcl
xor
add
add
fistp
lock
popf
xchg
ds
rcr
jle
push
lahf
outs
je
lds
call
add
sbb
xor
ror
fisubr
(bad)
in
push
leave
jo
xor
inc
popa
imul
inc
das
cmps
jmp
lods
and
mov
mov
int3
test
mov
ins
outs
cmps
sub
popa
pop
scas
imul
xor
inc
loopne
pop
add
sbb
daa
sub
sbb
loopne
lahf
and
add
and
test
adc
add
jnp
inc
sbb
in
push
dec
add
inc
xor
iret
imul
push
jno
pop
mov
call
int
and
movs
sub
lods
aaa
adc
aad
loop
add
in
xchg
adc
xchg
rcl
add
xchg
dec
fadd
mov
pusha
jnp
lahf
xchg
lea
cmp
in
sti
sbb
xchg
dec
pop
jb
les
sub
stos
inc
mov
jmp
adc
daa
push
mov
inc
sub
mov
sbb
loop
and
mov
sahf
jno
lds
push
xchg
add
push
fldcw
sbb
jne
or
cmps
fadd
test
sub
clc
test
idiv
aas
pop
jecxz
ja
push
mov
inc
sbb
mov
inc
add
enter
fistp
js
or
das
push
mov
push
and
inc
xlat
jb
mov
stc
inc
ds
sub
sbb
iret
adc
mov
cmp
jbe
xor
pop
push
ins
bound
icebp
cmps
mov
loop
adc
imul
xlat
xchg
aam
fadd
inc
and
or
xor
movs
sub
dec
xor
dec
xor
pop
ret
fmulp
mov
hlt
push
inc
mov
lahf
or
or
pop
test
mov
sbb
or
pop
fbld
fidiv
fs
std
lds
or
sbb
dec
sub
ret
dec
and
dec
xor
sbb
cmp
xor
inc
mov
rol
iret
push
jbe
pop
jp
sub
inc
and
or
(bad)
in
clc
adc
or
and
push
add
mov
push
ret
cmp
pop
(bad)
stc
pusha
ret
int
sub
add
or
repnz
fiadd
add
push
adc
xor
add
jmp
movs
mov
fcom
xchg
push
inc
add
dec
add
es
cmc
cmp
adc
sbb
mov
dec
mov
(bad)
and
adc
or
dec
cdq
inc
jne
or
cdq
dec
popa
adc
sbb
xor
inc
add
pop
push
push
cmp
add
bound
inc
push
and
aad
jle
stos
inc
(bad)
cmp
inc
inc
leave
adc
adc
test
fs
mov
les
sub
loop
or
js
jecxz
add
cmps
inc
sub
and
fsub
popa
test
dec
(bad)
sbb
and
and
and
and
sub
xor
pushf
xor
add
ret
inc
adc
mov
push
sbb
jecxz
jge
aam
sbb
inc
add
pop
adc
or
inc
aam
add
sub
add
and
(bad)
mov
pusha
pusha
xor
ret
add
repnz
jecxz
push
sbb
or
fs
dec
inc
dec
pop
mov
popa
into
mov
xor
add
push
and
xchg
(bad)
xor
mov
mov
mov
inc
into
movs
sti
test
push
push
mov
rcl
mov
dec
ret
add
adc
imul
inc
xor
or
and
gs
sbb
push
pop
sahf
loop
gs
cli
jmp
add
pop
cdq
mov
and
add
and
pop
sbb
cs
adc
push
xor
mov
sub
jo
mov
ins
pop
mov
shl
inc
add
pop
inc
pusha
out
inc
adc
ror
inc
or
sbb
cmps
cmp
dec
outs
loope
into
les
in
(bad)
sub
xor
mov
addr16
lock
rol
and
retf
out
mov
jns
ror
or
rol
outs
repnz
out
mov
sub
movs
pop
ret
cdq
dec
aaa
cs
jae
out
and
ror
(bad)
add
nop
inc
or
add
jb
inc
mov
jg
in
fadd
and
mov
push
retf
rol
popa
sar
push
cli
or
inc
or
inc
jg
fnstsw
mov
or
adc
adc
pop
movs
pop
fadd
pop
add
es
mov
cmp
ins
sub
dec
pusha
and
psubsb
mov
stc
test
sar
mov
sub
imul
daa
nop
ret
pop
jp
ret
lea
mov
sbb
or
push
dec
movs
leave
dec
and
pop
and
add
imul
hlt
mov
imul
inc
push
in
pusha
mov
test
test
mov
jae
xchg
aam
add
jl
dec
out
ror
inc
mov
nop
test
sub
ja
jmp
mov
ins
nop
out
sar
pop
push
loop
retf
push
cmps
inc
stos
and
stos
movs
push
and
(bad)
adc
dec
or
jl
or
push
mov
test
stos
and
inc
xchg
mov
stos
cli
inc
sub
mov
out
mov
les
push
lea
sub
cmp
sub
sub
daa
mov
add
xor
push
leave
mov
popa
push
enter
imul
add
push
pop
jmp
push
and
add
add
cmps
aas
repnz
inc
push
mov
repnz
mov
sub
add
push
dec
or
fisubr
faddp
or
rcr
add
hlt
imul
adc
push
jb
xchg
jb
jo
cwde
sub
sahf
stos
xor
push
icebp
add
cmc
xchg
gs
jae
movs
sub
add
adc
lods
(bad)
cs
(bad)
mov
imul
sub
add
mov
sub
es
sbb
xor
sub
sbb
(bad)
into
mov
aas
cmps
inc
cs
xor
inc
sbb
div
or
sub
mov
es
or
inc
or
pop
mov
stos
stc
int3
add
sub
hlt
outs
sub
xlat
jp
sub
cwde
and
fxch
faddp
dec
push
jae
and
sub
sub
sbb
mov
sub
les
out
loopne
inc
jg
inc
es
inc
sbb
(bad)
jmp
pop
add
adc
out
int3
pop
jno
and
cs
sub
fucomip
stos
add
xor
dec
or
cs
sbb
jb
das
add
sti
aam
lock
fild
fdiv
out
and
shr
leave
test
ret
hlt
(bad)
in
dec
and
cld
add
mov
sbb
shl
imul
inc
imul
lods
inc
rcl
push
xchg
add
aad
test
shl
sbb
push
ret
outs
mov
movs
not
test
shr
in
push
or
cmp
push
sub
test
inc
inc
lock
jle
add
mov
pop
mov
fs
fcomp
pop
mov
es
scas
sbb
into
and
cdq
icebp
push
int3
push
into
test
sbb
push
inc
sbb
retf
paddb
les
xchg
test
lods
shr
add
or
xor
or
jmp
cwde
push
(bad)
retf
in
out
inc
ror
or
rcr
and
add
stos
pop
bndstx
scas
lods
repnz
icebp
xchg
call
jmp
xor
fcmovb
mov
addr16
adc
mov
add
jmp
push
mov
mov
test
dec
push
sub
mov
pop
ror
or
inc
mov
sbb
and
dec
or
cmp
jmp
in
in
push
in
ret
js
xchg
jb
mov
adc
push
cwde
iret
sbb
inc
push
hlt
scas
es
sub
cs
repnz
imul
jb
and
inc
js
dec
jno
in
cmp
cmp
shl
mov
test
push
test
jmp
add
stos
add
rol
or
add
lds
repz
stos
jno
cmovs
(bad)
inc
inc
adc
adc
push
mov
(bad)
repz
pop
xor
jl
in
ins
dec
sub
sbb
add
pop
jb
pop
inc
sub
je
mov
xor
xor
add
stos
nop
xor
cdq
hlt
cmove
or
ror
xor
repz
bound
movs
inc
dec
inc
mov
or
mov
cmovle
and
mov
mov
xchg
push
and
sub
inc
(bad)
and
repz
out
xor
cmps
push
jmp
adc
push
pop
xor
push
inc
adc
mov
adc
es
cmc
and
test
adc
xor
imul
sub
retf
or
std
dec
xor
and
jbe
cld
inc
shl
dec
outs
cmovg
pop
sub
cmp
add
inc
pop
sbb
sbb
sbb
cmp
addr16
cmp
lds
not
mov
mov
inc
das
xor
xchg
and
ins
lahf
add
imul
sti
jbe
add
ret
sbb
inc
push
daa
xor
out
(bad)
cmp
popa
push
dec
inc
addr16
pop
dec
or
pop
inc
sbb
inc
int3
and
or
xor
mov
bound
inc
outs
and
or
fadd
sbb
fild
repnz
sahf
sbb
mov
icebp
aaa
out
rcl
inc
out
out
scas
mov
pop
js
adc
and
pop
int3
jbe
xor
aad
mov
push
mov
pop
mov
stos
mov
or
test
cmp
sub
(bad)
sbb
rol
cmp
hlt
mov
shl
mov
repnz
stc
add
retf
lea
or
sub
inc
dec
push
jbe
or
lea
inc
lods
and
addr16
cmp
loope
push
pop
add
xor
push
pop
inc
sub
jmp
add
inc
dec
js
pop
cmp
hlt
xchg
out
jbe
xor
jno
repz
aas
imul
dec
out
sbb
jmp
cli
mov
pop
cmp
add
(bad)
clc
cmps
jnp
test
(bad)
push
test
and
pop
adc
jbe
shl
stos
fwait
dec
jno
cwde
ret
sar
repnz
xchg
cmps
push
je
daa
clc
adc
call
adc
(bad)
and
sub
jl
sub
mov
or
out
mov
iret
in
xor
push
inc
sub
leave
sbb
xlat
add
sar
or
enter
add
ins
dec
add
jmp
loop
mov
hlt
sbb
sub
sub
and
sub
sbb
mov
pop
and
xchg
mul
ds
add
pop
rcr
sbb
std
rcr
sbb
push
je
sub
ret
xor
test
(bad)
cmp
fs
sub
and
js
dec
gs
das
je
pop
lods
mov
arpl
mov
mov
sbb
and
cmp
inc
sub
mov
outs
es
and
and
ds
std
lahf
adc
and
jo
xor
das
mov
in
jge
out
iret
(bad)
cmps
addr16
ret
cmps
scas
fwait
add
pop
(bad)
std
fdivr
lds
hlt
push
rcr
idiv
call
loopne
cmp
xchg
add
(bad)
mov
out
dec
(bad)
xchg
inc
mov
mov
fstp
std
pusha
xchg
jle
add
outs
hlt
mov
mov
movs
or
sub
adc
push
pushf
in
arpl
sbb
jbe
js
in
dec
mov
cld
icebp
adc
in
xchg
cmps
push
push
jb
mov
and
sub
cmp
loopne
lock
mov
xchg
daa
jo
push
dec
xchg
dec
push
movs
dec
cdq
cmps
stos
and
rcr
cmp
sbb
and
pop
ja
cmp
and
enter
vmovss
aam
jne
cs
nop
dec
mov
retf
retf
dec
pushf
push
sub
pop
ds
push
fisubr
push
bound
mov
mov
fwait
add
mov
fwait
cmp
cmps
dec
sar
jae
add
adc
fistp
and
and
dec
pop
dec
mov
jnp
daa
nop
lahf
test
dec
xchg
sahf
dec
(bad)
push
xchg
(bad)
retf
push
(bad)
or
cs
push
dec
xchg
mov
int
lahf
ds
xchg
mov
xchg
lods
movs
dec
fldcw
xchg
sub
push
pop
lods
sbb
rol
sbb
push
(bad)
sub
jle
push
adc
mov
out
mov
pop
in
xor
in
scas
mov
rcl
es
(bad)
mov
mov
xor
lods
mov
add
ins
adc
mov
add
ret
mov
cmp
and
or
xchg
loop
inc
xor
(bad)
xor
cmp
test
test
mov
cmp
outs
add
dec
ror
mov
push
cmp
out
stos
lods
bound
add
mov
pop
popa
inc
and
popa
add
sbb
popa
xor
in
xchg
jo
or
ret
sar
rol
les
mov
inc
clc
mov
mov
xor
inc
pop
in
or
rcr
pusha
pusha
xor
mov
and
mov
adc
in
in
inc
outs
adc
xchg
retf
and
xor
and
push
add
test
mov
mov
xchg
xor
aaa
sub
test
ss
jb
cmp
add
mov
iret
sbb
jmp
or
scas
sub
inc
iret
inc
addr16
inc
imul
cld
bnd
sar
ins
ret
sbb
sbb
inc
add
or
push
movs
in
or
mov
mov
in
jo
adc
and
dec
and
and
dec
adc
adc
xchg
popa
clc
or
adc
outs
mov
cmps
fld
dec
xor
and
sub
popf
pop
pop
sub
stos
out
mov
lock
dec
inc
cmc
mov
dec
xor
nop
pop
adc
fcom
inc
sbb
(bad)
retf
mov
sub
imul
lds
inc
inc
sub
pop
jns
xor
mov
xchg
inc
bound
ss
pop
jno
mov
cmp
mov
add
xchg
add
ror
push
push
in
add
or
clc
and
add
mov
icebp
cmp
ins
not
(bad)
push
pop
mov
scas
iret
mov
xchg
in
mov
call
inc
shl
ret
push
inc
pop
inc
adc
pop
mov
(bad)
rcl
les
xlat
cmp
push
inc
xor
xlat
inc
push
test
cmp
ins
add
movs
retf
ret
or
stos
test
or
cmc
xchg
fadd
addr16
call
setns
add
xor
pop
stos
aam
imul
rol
pop
sbb
fcmovnb
les
jnp
push
iret
push
rol
push
movs
adc
loopne
jge
and
or
les
sub
or
push
lahf
rol
inc
in
jg
arpl
push
inc
mov
(bad)
and
movs
and
mov
jb
mov
dec
add
inc
or
inc
jg
pop
and
add
jns
add
xor
jmp
mov
pushf
mov
mov
rol
and
clc
add
ret
xor
ret
or
fdivr
inc
outs
test
and
stos
div
push
ins
inc
sub
push
(bad)
push
mov
mov
sub
add
popa
or
jl
adc
rcl
pop
inc
pushf
and
les
xchg
push
jno
adc
bound
pop
mov
pop
test
pushf
js
in
ror
cld
adc
sub
mov
nop
mov
and
jno
or
lock
pusha
daa
retf
push
xchg
test
add
add
inc
sbb
push
sbb
imul
push
mov
pop
or
inc
dec
and
mov
(bad)
cdq
mov
push
add
out
push
pshufw
(bad)
rol
aaa
pop
push
aad
pushf
push
pop
les
pop
adc
ja
mov
cmp
dec
iret
push
xor
adc
test
and
mov
inc
sbb
nop
jmp
and
sbb
mov
mov
sbb
xor
cmp
mov
(bad)
cmp
call
scas
inc
pusha
stos
stc
inc
lods
push
xchg
pop
mov
xchg
mov
push
xor
mov
dec
sub
adc
stos
sub
cmc
test
xor
(bad)
ins
inc
mov
push
test
inc
mov
lods
push
arpl
pop
cmp
(bad)
mov
add
shl
pop
mov
es
in
xor
adc
cmp
sbb
mov
add
or
inc
cdq
int3
or
pop
push
(bad)
and
or
test
xor
movs
dec
inc
and
pusha
pop
or
xor
lods
aam
ds
inc
pop
sub
movs
test
dec
xor
loop
test
leave
pop
jnp
in
imul
daa
in
test
pop
ret
push
fwait
retf
mov
(bad)
mov
loope
pop
pusha
out
and
mov
cs
mov
cmp
rcr
mov
or
sti
sbb
fcomp
fisttp
mov
inc
xor
xor
ret
or
rcl
add
xchg
sbb
mov
pop
cli
adc
rcr
push
mov
mov
(bad)
fnstcw
arpl
lea
adc
add
sbb
mov
adc
ror
pushf
lock
(bad)
in
mov
mov
xchg
fistp
or
ret
xor
dec
out
in
push
mov
add
mov
gs
jnp
jge
jns
or
lods
xchg
xor
retf
fstp
leave
popf
daa
sub
push
add
out
jl
fstp
fst
or
into
lahf
xchg
dec
push
mov
lods
jp
dec
aam
cmp
xor
neg
cdq
sahf
lds
adc
xor
lea
sti
sbb
stos
push
mov
xchg
shr
retf
lods
ins
or
push
sbb
dec
test
dec
cdq
add
rol
adc
xor
sub
push
jae
mov
out
dec
sbb
cmp
lods
pop
inc
pusha
add
pop
lock
fmul
jo
cs
pop
outs
or
pop
pop
inc
and
pshufw
jb
repz
sbb
pusha
fisttp
lods
bound
leave
daa
add
push
jae
xchg
xor
mov
ds
lds
test
pushf
arpl
dec
aas
sub
pushf
sbb
shr
test
jno
imul
sub
mov
mov
mov
scas
mov
jo
lods
sar
pop
jp
ja
and
add
add
addr16
add
loop
mov
popf
pop
cmp
jg
xlat
xor
xchg
cmc
push
cmp
les
dec
div
cmp
cmp
sti
(bad)
adc
ficomp
xlat
inc
(bad)
mov
jnp
and
lahf
sbb
outs
clc
mov
mov
jo
stos
pop
cmp
in
jbe
push
mov
inc
popa
dec
push
stc
pusha
and
add
in
stos
repz
(bad)
or
scas
jbe
add
push
adc
pop
adc
add
addr16
in
add
jmp
ins
pop
les
outs
add
in
jns
(bad)
sbb
inc
mov
ret
mov
jp
jmp
jb
ds
push
in
inc
loope
push
add
data16
sbb
add
add
shl
in
lods
cwde
shl
sar
dec
sbb
retf
sbb
(bad)
bound
mov
data16
call
cmp
inc
dec
loope
fs
add
add
add
fsub
repz
jmp
push
add
ror
call
adc
mov
les
lods
cmp
icebp
pop
mov
imul
inc
jo
ja
add
jmp
pusha
nop
mov
ins
cdq
push
inc
adc
inc
mov
in
add
adc
out
in
in
push
adc
adc
inc
cs
mov
push
sbb
aad
ror
dec
sbb
jo
stos
xor
rcr
push
or
paddd
or
dec
(bad)
mov
push
inc
and
clc
mov
aam
or
loopne
and
add
push
retf
mov
retf
pop
sbb
push
loope
push
inc
and
or
adc
loope
or
xor
lds
cmp
stos
movs
dec
lods
and
mov
adc
adc
add
call
mov
ins
inc
jno
xchg
scas
adc
mov
and
shr
mov
add
sbb
and
adc
mov
pop
inc
sahf
push
scas
sbb
retf
mov
adc
sbb
sbb
rcr
outs
repnz
das
jecxz
pmullw
scas
mov
dec
sbb
loope
loope
dec
and
mov
movs
push
inc
xor
outs
in
les
popa
(bad)
inc
pop
add
loop
mov
cmp
and
into
pop
dec
mov
ins
add
xor
or
and
lods
mov
add
outs
cdq
jmp
push
adc
cs
adc
shl
add
mov
adc
adc
rcl
out
out
shl
jg
jo
out
pop
pop
mov
xchg
xor
outs
xor
pop
xor
pusha
in
daa
loope
loop
adc
xchg
mov
scas
and
push
adc
shl
ror
outs
add
pop
enter
xchg
sbb
adc
xor
loop
pop
jo
add
push
jmp
outs
cmp
repnz
leave
dec
xor
ins
pop
not
das
and
adc
rcl
jl
shl
xor
add
add
and
mul
sbb
xor
cmovb
jg
ins
push
pushf
adc
mov
xor
repz
aad
dec
(bad)
adc
cs
pop
ins
and
gs
add
movs
retf
bound
retf
inc
inc
pop
inc
pop
test
jmp
push
push
add
cmp
cmp
xor
xor
scas
repz
xchg
sub
shl
or
add
and
add
xor
add
shl
add
ficom
mov
leave
or
aas
and
mov
ins
rcr
mov
xor
rcr
or
inc
loope
dec
pop
mov
stos
loope
arpl
inc
daa
adc
adc
xor
loopne
add
gs
add
add
xchg
add
cli
xor
pusha
loopne
ins
das
push
push
je
shr
pop
push
adc
lods
jae
mov
clc
sbb
inc
mov
adc
loopne
push
and
xchg
xor
or
dec
psllq
ins
lmsw
loopne
sbb
lods
mov
(bad)
iret
aam
dec
sbb
scas
sbb
sbb
icebp
fsubr
xor
xchg
or
out
inc
xlat
mov
stos
add
xchg
repnz
stos
push
gs
or
outs
pop
into
aaa
xchg
add
mov
or
adc
push
and
or
cmps
mov
pop
sahf
add
pop
jno
adc
mov
in
or
jl
inc
cmp
pusha
add
ds
cmc
add
ror
ds
push
stc
dec
xor
prefetcht2
mov
and
cmp
sbb
sbb
xor
adc
sbb
sbb
inc
ss
push
es
in
sub
push
ja
aaa
inc
add
jno
std
shl
jbe
test
mul
or
addr16
xor
ror
aad
sahf
inc
adc
pop
(bad)
lds
sahf
add
inc
dec
mov
dec
cmc
aad
push
adc
repz
das
inc
pusha
sbb
mul
pop
and
(bad)
out
mov
xor
or
pop
iret
inc
gs
push
xor
sbb
scas
inc
scas
or
pop
dec
push
mov
pushf
hlt
mov
add
packuswb
pop
inc
or
jne
sbb
jl
imul
add
test
das
xchg
test
fadd
cmp
pop
mov
push
psllq
jae
add
add
lock
mov
xchg
inc
adc
xor
push
ins
das
rcr
rcr
(bad)
ins
and
or
ins
xchg
or
test
in
push
push
into
and
jle
fs
jbe
mov
in
add
and
and
push
pop
xchg
inc
push
jb
jno
mov
movs
xor
cwde
pop
jp
pusha
sub
sub
imul
retf
scas
ret
cmc
add
jae
push
xchg
mov
add
or
ins
fucomp
lods
sbb
ins
shl
xchg
int
or
xchg
ins
test
xchg
ins
lahf
fmul
js
je
jmp
arpl
inc
or
jmp
xchg
es
aad
sub
dec
jl
outs
addr16
imul
mov
xlat
add
xchg
push
xchg
rcl
add
outs
and
pop
push
loope
pop
push
and
xchg
jne
in
into
stos
imul
mov
mov
es
or
sbb
clc
bound
outs
xchg
cmc
arpl
mov
test
out
pop
jmp
outs
lods
push
pop
(bad)
mul
inc
pop
retf
adc
push
jl
adc
clc
xchg
mov
pop
setbe
lock
add
pop
add
add
pusha
jg
cmp
push
scas
enter
xor
lahf
mov
xchg
mov
dec
xor
loope
aam
aas
test
and
cwde
add
aam
pop
or
or
jno
mov
cli
pop
xchg
nop
xor
daa
jmp
rcl
adc
movs
xchg
jecxz
mov
ins
adc
rcl
push
push
or
push
pushf
sbb
aas
mov
sbb
repz
ins
repnz
jae
or
hlt
dec
aaa
sbb
jns
popa
or
loop
fcmovnu
dec
call
gs
push
xchg
xchg
inc
xchg
cli
lock
mov
fistp
pop
sbb
sbb
aam
call
retf
in
add
fstp
daa
sub
out
and
or
xchg
stos
hlt
pushf
rcr
or
mov
scas
popf
mov
shl
dec
sbb
push
xchg
rcl
lea
call
inc
dec
mov
sbb
loope
pop
fst
xchg
stc
jns
ror
cdq
pop
ja
clc
inc
cmp
movs
loope
sub
pop
(bad)
je
lods
pushf
push
cmps
imul
dec
lea
out
nop
je
icebp
mov
xchg
jns
cmp
pop
out
loope
cdq
arpl
ss
pop
push
xor
add
gs
pop
into
add
push
or
push
mov
shr
cmps
add
cwde
jg
test
nop
scas
add
or
mov
xor
sbb
lock
jno
inc
jmp
pop
adc
scas
add
or
jae
bound
les
repz
add
push
add
sbb
mov
cmp
scas
es
sbb
arpl
adc
loopne
nop
loopne
cmc
ret
mov
loopne
(bad)
rcr
and
fisttp
je
xchg
aam
adc
js
(bad)
jp
sar
call
pop
lods
and
aas
pusha
add
mov
inc
add
push
daa
mov
jg
mov
push
(bad)
inc
gs
adc
sbb
aas
stc
cli
pushf
inc
jns
push
dec
popf
adc
mov
cmp
neg
loope
sbb
mov
or
mov
shr
movs
add
jg
or
inc
or
inc
cmp
mov
fisttp
push
fcom
xchg
adc
sbb
push
cmp
and
pop
sub
jmp
sbb
ja
sbb
mov
dec
cld
xchg
mov
scas
xchg
or
pop
fdivr
cwde
icebp
outs
sbb
mov
mov
(bad)
in
mov
je
or
sub
sbb
cmc
in
aam
add
jmp
fcom
mov
or
pop
cmp
cmp
mov
jns
pop
push
data16
or
mov
sub
jge
fcomp
sbb
in
into
dec
inc
push
call
rcr
push
or
sub
add
mov
add
pushf
pop
popf
xor
or
mov
das
sbb
adc
rcr
outs
or
rcl
aam
frstor
sbb
(bad)
xlat
aad
sub
subps
sbb
or
mov
cmp
jb
add
mov
lahf
and
xchg
mov
mov
fimul
out
cld
and
lock
je
popf
push
loop
lods
scas
aas
cdq
cmps
or
mov
rcr
jne
fstp
fstp
and
sbb
jns
fcom
xor
fisub
add
das
jns
mov
std
clc
jno
outs
mov
cmp
jmp
add
mov
or
data16
sbb
pop
fdivrp
fcomp
call
pop
lds
dec
jle
xchg
aad
sbb
push
pushf
inc
into
cmp
fs
jne
jecxz
sbb
mov
out
aaa
push
inc
xchg
test
data16
mul
mov
movs
fidiv
jmp
je
add
and
or
inc
dec
mov
push
aam
ror
ds
fcom
pop
aaa
out
inc
aas
lock
out
test
jmp
daa
dec
lods
out
lds
add
(bad)
repnz
push
lahf
loope
sbb
inc
mov
(bad)
daa
pop
outs
sbb
(bad)
pop
(bad)
dec
movs
cmp
xor
sbb
arpl
xchg
xchg
gs
into
mov
nop
lahf
scas
fdivr
or
add
xchg
mov
add
dec
fcmovnbe
retf
aaa
imul
jns
icebp
mov
pusha
mov
xchg
clc
cmp
ret
jns
imul
xchg
sub
gs
xor
or
pop
xor
stc
push
mov
xor
xchg
lods
pop
aaa
outs
dec
fwait
xor
or
mov
pushf
(bad)
lods
pop
mov
(bad)
in
sbb
ins
shl
sub
and
and
mov
cmp
test
inc
adc
pop
sbb
mov
mov
or
mov
sub
(bad)
shl
jae
or
(bad)
dec
mov
mov
mov
aad
xor
ins
mov
mov
sti
cwde
dec
xchg
lds
add
icebp
ret
and
adc
dec
cwde
xor
daa
hlt
cdq
int3
call
pop
mov
bound
jo
popf
dec
mov
aam
cli
lods
popa
mov
in
pop
mov
stos
push
add
lods
mov
dec
rol
push
ja
mov
pop
nop
add
adc
adc
mov
and
xchg
add
jl
fadd
mov
sbb
popa
or
sub
or
mov
pop
and
push
fadd
les
lods
and
cmp
les
xchg
test
xchg
movs
int3
je
or
test
movs
mov
pop
and
stc
gs
jmp
(bad)
out
jne
pop
cmp
test
int
neg
(bad)
or
adc
adc
jp
cmc
add
adc
push
pop
test
dec
dec
mov
call
cwde
popa
popf
lea
lock
mov
sbb
adc
adc
stos
push
test
xchg
lods
mov
add
jbe
jp
xchg
push
fnstsw
xor
or
gs
inc
and
and
cmps
jp
ret
cmp
inc
sub
repz
xlat
mov
sbb
push
enter
adc
cli
mov
sbb
mov
gs
cmp
add
xchg
pop
mov
ret
mov
ficom
inc
and
and
nop
les
push
lahf
xor
lods
mov
push
xor
pop
gs
lds
push
xchg
push
shl
mov
data16
xchg
xchg
enter
int
lea
sub
es
mov
xchg
pop
sub
loopne
inc
pop
jl
(bad)
scas
movs
mov
xor
lahf
cld
ss
mov
and
loopne
bound
and
cli
inc
sbb
sbb
xor
mov
jp
or
xchg
push
inc
les
clc
sub
adc
imul
and
mov
pop
jb
fild
jle
aam
mov
pop
repnz
pop
cs
xchg
retf
and
cmc
repz
jecxz
dec
call
pop
aas
movs
icebp
xchg
sub
(bad)
fcom
movaps
push
mov
sbb
xchg
pusha
loop
cmc
sbb
sbb
movs
ins
add
and
mov
jge
les
dec
loope
or
mov
sub
(bad)
cmp
pop
mov
in
cmp
xchg
sub
aad
xchg
xlat
xor
or
pop
cmp
das
sub
cmp
ror
shl
int
test
add
retf
sub
add
dec
mov
in
add
mov
jmp
mov
sub
add
mov
sbb
mov
jle
lods
inc
cmc
add
dec
jecxz
mov
pop
inc
les
add
data16
jmp
pop
ret
(bad)
rol
jo
push
ds
mov
cmp
jp
xchg
sahf
mov
es
out
bound
xor
xchg
push
xchg
mov
in
sbb
jnp
push
add
adc
adc
fimul
add
int3
dec
inc
mov
inc
adc
and
and
ror
xor
fisub
push
jb
inc
shr
adc
std
xor
and
add
push
xchg
adc
push
cmps
jl
arpl
enter
lds
cdq
sti
rol
movs
jl
cmp
dec
push
aaa
aam
sahf
lock
dec
pop
push
dec
xchg
mov
xor
mov
add
sahf
push
(bad)
fs
scas
xor
ror
pop
jne
int3
cld
mov
bound
aad
inc
jns
xor
call
das
xor
and
add
repz
or
xchg
xor
gs
inc
cmp
repnz
icebp
push
jns
xchg
xor
test
dec
add
iret
mov
dec
push
test
push
dec
fnstcw
xchg
ins
sbb
cwde
js
push
in
nop
cdq
dec
cmp
jae
sbb
mov
nop
ret
aad
fld
mov
int3
cmps
mov
add
(bad)
jmp
add
rcr
or
cdq
push
mov
aam
mov
aam
sub
or
xor
push
or
ret
adc
stos
lock
pop
push
push
shr
sub
push
mov
ror
push
xor
adc
lds
mov
add
cld
adc
enter
lods
aad
enter
pushf
add
push
cmp
xor
inc
gs
ds
test
mov
mov
mov
or
rcl
push
test
or
mov
(bad)
xor
push
ret
jne
and
jmp
pop
xchg
mov
mov
out
sub
push
or
shr
ins
mov
inc
xchg
sub
or
rdpmc
cwde
xor
mov
loop
cwde
sub
into
repnz
xchg
movs
sub
adc
ror
pop
dec
inc
dec
push
imul
scas
stos
stc
push
push
pop
test
ds
jecxz
retf
cmp
push
cld
mov
jb
and
add
in
and
cmps
scas
xchg
repnz
ss
dec
int
test
js
push
lock
mov
pop
sti
pop
sti
cmp
jle
mov
loope
xchg
pushf
push
lods
pop
(bad)
sbb
in
xor
sbb
or
stos
xor
or
adc
jo
jno
add
pop
mov
cmp
mov
or
mov
jnp
or
push
push
lds
pushf
xor
jl
int
dec
iret
cwde
in
jecxz
loopne
mov
cmp
(bad)
jo
adc
xor
clc
int
cmp
xor
lahf
dec
dec
mov
xor
shl
(bad)
retf
pop
div
cwde
xor
or
pop
and
push
add
xor
int3
(bad)
shl
jne
in
mov
ja
iret
jle
lock
test
call
jp
cmp
scas
dec
pop
inc
ror
push
shr
test
sub
sbb
pop
fidiv
xchg
xchg
push
jo
cdq
aam
inc
push
sub
mov
leave
or
push
cwde
xor
xor
pop
icebp
xchg
lock
addr16
dec
call
mov
(bad)
xor
les
repnz
push
in
cmps
pop
xchg
add
cmps
mov
mov
or
add
aam
sub
add
repnz
jl
clc
(bad)
out
push
into
xchg
fstp
sbb
loop
lods
iret
sbb
cmp
repnz
cmp
jge
cmc
jmp
jge
xor
or
pop
aam
lea
stos
push
dec
ret
mov
sbb
xor
and
push
jecxz
fnsave
enter
mov
fninit
ds
ins
dec
repz
dec
retf
call
into
jnp
cmp
sti
mov
mov
pop
mov
aaa
out
sbb
push
ror
inc
mov
hlt
fs
fiadd
jg
jl
sbb
stos
stc
scas
rol
and
clc
je
cmp
jnp
mov
out
jbe
retf
jge
lods
(bad)
gs
dec
xchg
test
add
(bad)
add
add
mov
mov
test
jne
or
ror
fdiv
retf
stos
cmp
pop
jg
int
mov
cmc
ret
fsub
xchg
mov
imul
pop
dec
add
jg
fcom
ja
cmp
(bad)
ja
out
xor
outs
and
push
mov
xor
clc
ret
sub
inc
sahf
pusha
add
sub
dec
xor
cmp
jno
push
or
pop
rol
pop
push
data16
pop
push
push
jbe
xchg
xor
inc
push
cmps
out
push
pop
test
push
loope
jp
test
jne
stos
mov
in
addr16
mov
ja
xchg
ins
add
mov
add
shl
cmp
addr16
nop
push
add
ins
xchg
test
xor
ret
test
(bad)
jno
es
push
test
pop
jp
push
jp
lock
pop
cmp
ret
push
jle
fcom
and
pop
cmc
adc
add
xor
add
(bad)
and
js
mov
sub
dec
jae
cdq
xor
ja
adc
dec
fadd
pop
jnp
or
xchg
mov
movs
pop
xchg
xchg
arpl
xchg
mov
std
adc
pop
xchg
pop
sbb
jo
(bad)
pop
sbb
test
or
add
push
or
add
xchg
cmp
jbe
enter
xlat
test
inc
dec
dec
push
mov
jb
or
mov
cwde
jbe
enter
adc
xor
test
jle
adc
test
xor
imul
imul
sahf
nop
or
dec
(bad)
neg
adc
add
add
retf
addr16
xchg
mov
mov
test
add
xor
inc
pusha
push
popf
(bad)
gs
fdivr
lea
enter
xchg
movs
out
pop
sub
inc
hlt
hlt
pop
in
xchg
das
mov
mov
dec
aas
idiv
pop
and
push
push
pusha
add
hlt
cmp
js
push
add
pop
lds
xchg
test
jl
push
sbb
jo
adc
lea
(bad)
popa
cdq
js
mov
(bad)
jle
or
ret
je
out
imul
add
push
mov
cmp
mov
jge
js
sar
push
dec
cdq
or
push
aas
rcr
add
mov
hlt
mov
(bad)
mov
lds
and
add
or
fsubp
jne
mov
pop
add
jmp
lods
and
inc
test
movs
or
and
sar
ja
retf
jns
pop
mov
xchg
arpl
(bad)
clc
inc
mov
cmp
add
inc
test
xchg
lock
mov
pushf
test
push
add
and
xchg
movs
arpl
sub
cmp
xchg
push
mov
pop
mov
ffreep
dec
lea
lock
ret
xor
ss
xor
loop
inc
rol
arpl
cs
ins
jl
inc
adc
xor
jae
ss
sub
out
cmc
clc
mov
add
add
clc
add
mov
xchg
push
and
shl
cmp
(bad)
sbb
jmp
imul
and
xchg
dec
fnsave
pop
inc
repz
mov
aas
cmps
cmp
xlat
sahf
out
imul
add
dec
mov
push
mov
aad
nop
push
push
add
inc
sbb
and
or
push
xor
xchg
mov
gs
or
cli
or
inc
pop
jmp
lea
sbb
inc
adc
popa
or
call
in
mov
mov
pop
add
cmp
sbb
push
js
pop
test
push
push
add
xchg
jl
push
cdq
jo
mov
test
mov
push
pop
push
mov
aaa
lods
jo
mov
and
pop
mov
jmp
mov
ret
push
sahf
ret
mov
inc
icebp
xchg
push
fcom
ds
dec
lds
lahf
scas
movs
push
mov
lock
mov
ss
fisubr
inc
xchg
mov
mov
jl
je
call
mov
movs
adc
dec
push
stos
rol
sub
test
scas
cli
stos
sub
ds
sbb
test
pop
inc
sahf
(bad)
push
vmovhlps
or
sbb
cmc
dec
pop
enter
lods
mov
test
inc
jg
adc
sbb
inc
test
clc
test
js
dec
cwde
mov
xchg
loopne
add
or
push
or
stos
fs
scas
jbe
mov
xchg
adc
mov
pusha
or
dec
cmps
pop
adc
test
pop
xchg
xor
xor
xchg
addr16
xor
or
lods
enter
jp
xchg
push
pop
jne
add
sbb
ja
fcmovbe
add
add
or
jo
jb
xor
push
mov
cmp
jo
and
scas
fist
mov
or
mov
adc
dec
dec
bound
stos
mov
mov
ret
dec
movs
ds
(bad)
stc
arpl
push
mov
xor
xlat
inc
push
fwait
push
push
inc
test
add
xor
mov
inc
sub
and
mov
jae
push
cli
add
mov
stos
mov
jo
bound
outs
sub
lea
js
xor
or
gs
fdiv
test
and
sar
sti
mov
mov
fidivr
(bad)
xchg
cmps
in
adc
mov
jno
jmp
mov
loop
adc
add
mov
adc
xor
movs
jnp
cmc
fwait
mov
arpl
mov
test
and
xchg
xchg
sar
jge
xor
hlt
jno
scas
push
inc
imul
imul
cmp
fdivr
fucompp
pop
mov
scas
add
clc
movs
mov
popa
rol
movs
pop
shl
add
lods
ret
sbb
xor
sub
mov
xor
les
ret
or
ret
or
jb
inc
rcl
ret
inc
mov
cld
pop
fcmovb
popa
movs
xchg
rcl
push
and
cmp
aam
and
mov
loopne
xchg
jecxz
mov
dec
in
xchg
xor
or
inc
in
and
enter
cmp
ret
mov
mov
ins
enter
sbb
add
enter
cmc
jmp
xor
jecxz
popa
arpl
jl
fist
inc
xchg
mov
mov
cli
xor
inc
cld
mov
inc
xor
test
(bad)
cmp
xchg
enter
mov
sub
ds
jl
(bad)
jno
cmps
sub
mov
test
lds
popa
les
push
mov
mov
xor
ins
sbb
stos
adc
cmp
dec
push
add
jae
out
mov
and
fdiv
push
or
push
lods
int3
add
ror
int
ins
int
int3
int
nop
add
ins
shl
add
popf
add
rcl
fld
imul
dec
nop
lds
push
nop
add
imul
jo
lock
sbb
xor
xor
mov
jecxz
push
xchg
pushf
leave
mov
mov
or
ficomp
test
and
mov
adc
inc
nop
rcl
fst
jne
rcr
ror
shl
and
daa
lea
(bad)
into
leave
dec
or
jl
xor
call
mov
(bad)
in
xor
mov
push
xor
nop
adc
and
add
or
inc
sub
add
add
add
add
or
add
mov
inc
adc
pop
enter
test
(bad)
mov
lds
mov
and
sbb
mov
enter
test
imul
xchg
out
call
es
cmp
sbb
cmp
xor
inc
dec
cmp
mov
jp
dec
jne
dec
cdq
push
inc
(bad)
pop
jns
stos
xlat
lods
inc
mov
sub
fst
fwait
mul
mov
cmp
adc
or
xor
mov
ja
jmp
fldcw
dec
xchg
pusha
push
mov
pop
scas
popa
xchg
push
packsswb
jmp
xchg
inc
outs
push
pop
jne
jmp
in
test
repnz
movs
dec
fisubr
mov
jg
(bad)
cwde
jae
iret
rol
sbb
imul
jge
int3
sub
xor
fstp
pop
addr16
push
stos
cs
sbb
test
fsubrp
xlat
daa
hlt
scas
shl
(bad)
pop
repnz
retf
xchg
mov
jbe
add
push
jns
(bad)
fld
pop
in
mov
pop
je
rcl
inc
sub
ins
fst
ja
sbb
fstp
aad
sbb
sbb
sub
sbb
mov
pop
or
test
inc
dec
cdq
icebp
push
xchg
mov
fbld
mov
mov
push
xchg
mov
mov
test
inc
xor
cmp
rcl
pop
jb
cdq
dec
xor
add
jp
push
push
xchg
test
dec
inc
imul
out
sbb
xchg
jne
mov
sub
mov
mov
aam
xchg
repnz
movs
repnz
addr16
push
mov
mov
sub
sahf
bound
fistp
dec
xor
dec
in
stos
inc
call
fwait
adc
pop
stos
stos
movs
push
adc
gs
xchg
mov
lahf
adc
cmp
js
add
adc
dec
sahf
popa
sub
lods
and
popf
push
hlt
stos
sub
pop
stos
scas
adc
or
scas
xchg
xchg
sub
pop
int3
sub
mov
xor
out
and
push
dec
xor
stos
jmp
stos
jo
xor
mov
sub
les
mov
sbb
cmps
fs
sbb
push
daa
mov
popf
test
out
ja
sti
or
xor
int3
jb
daa
cmp
ret
jg
add
or
mov
push
sbb
hlt
ror
adc
(bad)
imul
jmp
mov
pusha
mov
mov
sbb
xchg
leave
daa
mov
inc
int3
xor
sub
inc
or
shr
jae
cmp
jmp
mov
xor
(bad)
hlt
ror
outs
js
push
rol
lods
out
mov
in
outs
pusha
stc
push
xchg
jmp
outs
fimul
test
cmp
xlat
dec
int3
int
hlt
pop
dec
jg
lea
js
or
fidiv
jl
fcom
jle
aaa
push
inc
jns
xchg
aaa
out
cmp
popa
inc
dec
test
mov
sub
out
fistp
jmp
push
pop
in
or
out
mov
fiadd
lock
lahf
sti
cld
or
les
out
das
js
add
iret
or
cmp
adc
or
les
test
pop
and
add
and
cmps
leave
das
jle
inc
and
out
mov
push
mov
(bad)
in
adc
xchg
jo
push
sub
mov
nop
pusha
add
jmp
push
or
add
sbb
or
inc
or
popa
or
das
push
adc
adc
add
lock
push
xor
popa
in
call
lea
pop
or
inc
and
xor
into
loope
and
and
add
ret
addr16
cmp
pusha
sub
sub
fs
daa
mov
or
jle
je
or
clc
xchg
mov
gs
cli
fistp
lahf
cmps
add
ret
outs
int3
mov
cmp
mov
inc
push
and
sbb
aas
push
repnz
adc
adc
sbb
mov
sub
outs
push
leave
adc
jb
mov
sbb
mov
and
adc
ror
dec
add
xchg
jae
and
and
xchg
cmp
pop
inc
ins
call
setnp
inc
sub
dec
sub
test
(bad)
aas
push
adc
cmp
cdq
mov
stc
inc
push
rcr
push
nop
add
sbb
rcr
push
inc
and
inc
mov
mov
cdq
add
push
add
inc
push
data16
test
mov
inc
jne
sub
push
pop
mov
mov
and
shl
adc
cmp
dec
imul
jae
dec
cwde
out
lahf
(bad)
cld
push
mov
xchg
mov
retf
mov
push
xchg
or
fcmove
push
pop
adc
jnp
and
jmp
(bad)
js
cmc
scas
mov
inc
cmp
test
repz
push
or
aad
jne
stos
sub
or
(bad)
retf
add
retf
imul
scas
or
jle
xchg
jbe
stos
add
push
cmps
fidiv
pop
idiv
hlt
adc
inc
ror
cs
mov
aas
test
idiv
adc
add
sahf
xor
adc
push
fidiv
add
out
fiadd
je
pop
out
inc
(bad)
repnz
popf
adc
cmp
and
es
mov
mov
aad
or
js
out
push
and
push
leave
aad
fld
aam
adc
sub
jns
sbb
inc
and
je
fsub
mov
sub
push
out
fsqrt
push
idiv
(bad)
fcomp
xchg
and
sbb
fadd
hlt
cmps
adc
add
outs
adc
adc
sbb
add
stc
xchg
mov
mov
or
sti
int
mov
popa
cmp
pop
dec
cs
jno
arpl
push
mov
pop
and
test
sahf
hlt
(bad)
xchg
dec
data16
push
xchg
retf
cmp
sub
out
and
das
push
mov
sysexit
mov
and
push
mov
xor
jmp
mov
adc
and
ins
jb
mov
call
sbb
ror
sbb
pop
js
push
push
sub
(bad)
pop
ss
sar
sub
sar
xchg
js
sbb
mov
test
fsubr
ret
call
pop
call
iret
int
aam
xlat
jmp
(bad)
(bad)
sub
sbb
mov
stos
cmps
sti
dec
dec
mov
pop
in
mov
bound
div
xor
pop
xchg
retf
enter
call
mov
pop
loope
imul
stc
xlat
fsubr
sbb
jmp
cmp
jbe
jno
jo
dec
pop
xchg
je
xor
icebp
idiv
cdq
aaa
push
or
jecxz
out
mov
jle
mov
fucom
add
test
pop
jne
xchg
mov
mov
mov
fbld
clc
(bad)
aad
sub
ss
repz
push
mov
hlt
mov
div
xor
push
fs
cmp
sbb
lock
ins
stos
mov
das
icebp
pushf
addr16
enter
fcomp
jns
in
inc
fwait
inc
test
int
repz
push
(bad)
mov
jp
lea
pop
jecxz
iret
fadd
cmp
lea
cmp
adc
(bad)
nop
aaa
push
and
popf
xchg
mov
sahf
and
pop
add
fsubr
mov
push
cmp
dec
add
ins
dec
inc
xor
sbb
in
jmp
jp
mov
mov
sbb
cmp
dec
add
cmc
js
pop
and
xchg
pop
loop
cmp
(bad)
clc
retf
and
jbe
not
and
sbb
add
push
cmp
or
nop
add
adc
jbe
loop
cmp
pushw
shr
pop
lds
jbe
inc
cmps
push
mov
popa
fisub
pop
test
pop
cmp
pop
out
xor
adc
aas
pop
pop
dec
jae
dec
imul
ror
fcom
push
xchg
add
mov
mov
arpl
push
and
pop
daa
clc
test
mov
mov
pusha
cs
retf
test
jne
adc
cmp
dec
(bad)
not
xor
push
xchg
gs
cmp
add
xchg
dec
aad
cmp
add
mov
ins
rol
mov
jno
call
dec
push
add
(bad)
test
jns
(bad)
ja
add
outs
clc
aaa
jg
xchg
or
test
push
aaa
or
je
xchg
push
jns
jo
or
inc
mov
add
sar
cmp
pusha
gs
xchg
or
jno
ja
xchg
cwde
pusha
xchg
mov
jle
xchg
add
ja
or
movs
push
adc
and
inc
push
imul
aas
or
shl
dec
adc
add
or
test
les
aad
cmp
or
cmp
push
mov
sbb
push
cmp
add
adc
jg
cmp
xor
ds
(bad)
adc
add
pop
loop
fucom
pop
(bad)
and
(bad)
push
add
mov
js
(bad)
(bad)
dec
imul
ins
xchg
adc
xor
jae
ja
add
jmp
or
push
adc
nop
push
fs
adc
pusha
lock
add
jmp
add
test
push
adc
and
sub
dec
mov
jle
call
dec
shl
ret
vprotq
push
cmp
pop
push
inc
or
movs
jae
movs
inc
or
inc
aam
or
cs
and
sbb
nop
aam
mov
xchg
int
mov
jle
call
push
je
push
xchg
push
loopne
sahf
mov
xchg
cmp
aaa
xchg
rcl
inc
inc
in
fst
ds
mov
iret
mov
mov
pop
push
cs
mov
push
test
and
xchg
jns
push
sbb
xchg
stc
inc
xchg
pop
push
fsub
sbb
ins
sub
test
pop
movs
nop
rcr
call
(bad)
jmp
add
add
mov
repz
pop
push
enter
mov
imul
mov
xchg
cmp
xchg
xchg
sub
shl
pop
mov
push
movs
push
faddp
or
adc
add
sbb
ins
cmp
add
and
mov
mov
mov
xlat
inc
adc
mov
dec
mov
xlat
xchg
inc
and
or
mov
push
adc
pop
lock
xchg
test
rcr
mov
adc
and
add
mov
jbe
or
jecxz
es
daa
adc
push
popa
inc
inc
pop
mov
stc
pushf
cld
sub
call
jp
jae
fs
stos
mov
or
movs
pop
xchg
movs
dec
cmp
jecxz
pop
xchg
mov
mov
push
pop
(bad)
fisubr
xor
or
push
add
aas
pusha
inc
mov
je
cmp
pop
dec
les
aam
or
xor
mov
push
sbb
inc
pop
std
je
hlt
adc
arpl
push
push
push
test
push
nop
sbb
adc
ss
imul
(bad)
aad
outs
movs
or
inc
repnz
repz
mov
sahf
pop
jecxz
adc
xor
adc
mov
(bad)
in
out
mov
sub
cmp
and
sbb
movs
les
arpl
rol
pop
test
ja
std
cmp
inc
data16
inc
fwait
pop
outs
aad
dec
out
lock
rol
sbb
mov
sub
scas
and
mov
cmps
pop
icebp
adc
mul
jbe
mov
push
push
scas
lods
(bad)
test
and
mov
dec
stos
repz
or
inc
retf
jle
sbb
ins
and
arpl
jne
push
shr
and
adc
imul
addr16
mov
mov
in
inc
in
or
adc
sub
xchg
adc
mov
addr16
mov
and
pop
mov
jle
push
pop
imul
mov
mov
sbb
cwde
jle
imul
dec
add
mov
pop
stc
push
or
add
movs
retf
xor
mov
or
add
pop
pop
xlat
sub
adc
je
xchg
scas
xchg
sti
dec
dec
adc
sub
and
mov
push
inc
xchg
xchg
add
pop
and
arpl
gs
mov
add
push
pop
bound
test
cmps
push
mov
xor
jnp
call
mov
mov
lock
retf
mov
jnp
loope
sbb
scas
mov
mov
or
mov
shr
jne
add
jbe
das
mov
daa
xchg
mov
or
pmulhuw
mov
loopne
outs
jae
and
ret
ret
ret
ss
ret
ret
ret
ret
mov
sbb
mov
hlt
and
div
jns
sub
fsub
imul
mov
cli
mov
mov
imul
mov
mov
cmp
retf
shl
or
push
and
mov
mov
jl
es
aaa
and
aaa
outs
cld
(bad)
test
aaa
outs
lods
cmp
pop
in
mov
jl
test
adc
clc
inc
sub
push
imul
push
mov
dec
mov
mov
pop
add
sub
enter
mov
ins
dec
aam
jg
pop
aaa
shl
rol
movs
(bad)
pop
std
xchg
or
xor
jecxz
stos
dec
mov
int3
retf
retf
mov
retf
in
stos
mov
cmp
dec
add
adc
push
inc
inc
rol
enter
dec
sbb
nop
sbb
add
lds
xor
cwde
pop
dec
mov
or
movs
push
icebp
pop
addr16
and
mov
mov
cmps
imul
into
out
lods
mov
shl
sub
sub
push
inc
mov
int3
mov
in
int3
mov
call
push
stos
mov
stc
or
jmp
jl
push
mov
adc
sti
sbb
loope
loopne
popa
jecxz
jbe
mov
sub
xor
xor
sbb
mov
or
rol
pop
sbb
int3
aas
aam
retf
mov
int3
scas
or
shl
scas
hlt
cmps
imul
ror
fucomip
das
add
mov
shl
pop
add
adc
shl
shl
jge
jb
das
sub
rcr
aam
ror
aam
jge
js
rol
aad
iret
pop
inc
push
sbb
lods
inc
mov
add
pop
std
adc
(bad)
jge
adc
sbb
fistp
adc
sub
fst
pop
rcl
jp
and
aam
adc
mov
iret
sbb
(bad)
jns
sub
push
add
mov
adc
lods
hlt
sbb
sbb
sbb
xchg
mov
cmp
dec
mov
inc
xor
cmp
mov
jne
movs
pop
fimul
es
ss
lds
popf
rol
adc
xor
stos
push
icebp
(bad)
sub
add
sub
mov
add
ins
fcmovbe
stc
ror
loop
xchg
scas
std
dec
(bad)
xchg
ss
nop
(bad)
add
and
mov
mov
hlt
int
neg
shl
pusha
sbb
rcr
mov
loopne
fiadd
lods
enter
test
xchg
cmp
pop
mov
outs
adc
and
rcr
std
adc
dec
(bad)
pop
dec
loop
repnz
push
sbb
loopne
dec
loopne
fmulp
shr
jecxz
pop
jmpw
adc
inc
cmp
lock
sub
jecxz
pop
loope
xor
sbb
in
fsubp
and
adc
test
out
popa
mov
jle
mov
in
cmp
(bad)
push
int
call
or
jo
sub
cmps
and
popa
in
(bad)
out
mov
pop
pop
sub
(bad)
fnstsw
enter
aam
pusha
jg
ss
mov
jae
xor
push
mov
and
and
sub
mov
add
pop
ds
test
jle
jne
enter
mov
adc
adc
pop
and
data16
push
test
fwait
sahf
out
or
dec
(bad)
and
fistp
sbb
dec
xlat
mov
in
sbb
fst
xor
call
movs
dec
or
ja
adc
les
ds
and
pop
pop
adc
dec
sub
pushf
into
out
out
xlat
push
in
enter
pop
add
pop
je
pop
out
pusha
arpl
lds
inc
jmp
outs
sti
inc
bndldx
(bad)
ds
div
les
or
push
pop
push
adc
adc
rcr
leave
jg
adc
push
dec
push
xor
leave
(bad)
push
nop
xchg
sbb
mov
shr
rol
adc
gs
jmp
jle
mov
fbstp
sbb
lock
adc
rcl
(bad)
out
movs
pop
hlt
jo
test
jg
lock
dec
xchg
ins
out
lgs
loopne
out
aas
adc
mov
int
and
faddp
cli
clc
pop
lahf
and
pushw
and
ins
out
test
mov
pop
movs
retf
mov
jbe
div
popa
jge
push
adc
lfs
push
repnz
pop
repz
pop
push
push
shr
pop
adc
sti
sbb
and
stc
jle
fstp
int3
pop
mov
aam
inc
adc
das
mov
fidiv
lods
fild
mov
retf
call
clc
dec
pop
pop
jg
mov
pop
not
loope
xchg
mov
sbb
repz
cld
push
xchg
cld
fwait
xchg
stc
iret
into
out
jae
add
sti
add
adc
add
push
pop
das
pop
mov
stos
mov
and
test
rol
inc
les
es
(bad)
xor
inc
mov
shl
dec
xchg
sub
dec
mov
and
out
cmp
in
jae
int3
dec
das
inc
test
ins
push
mov
xchg
mov
dec
fs
cmps
inc
mov
(bad)
aad
add
(bad)
(bad)
call
test
jae
ss
mov
mov
cmc
into
sbb
push
mov
dec
cmp
add
out
rol
jo
xchg
xor
or
pop
cmps
addr16
pushf
fs
dec
jle
test
lea
xor
into
rcl
sub
fs
and
xchg
dec
lahf
inc
test
mov
imul
into
and
jp
or
in
dec
fwait
mov
rol
cwde
(bad)
sub
cmps
xor
in
inc
shl
leave
add
add
leave
pop
ret
jns
sbb
mov
pop
sbb
xchg
popf
mov
ret
(bad)
neg
popf
out
cmp
pop
add
inc
push
or
or
dec
cmp
stos
imul
shr
mov
nop
and
push
or
sbb
enter
pop
pusha
popa
test
cmp
in
(bad)
inc
stos
or
shr
test
mov
mov
cmp
rol
sbb
jnp
movs
out
imul
jmp
cmp
inc
inc
scas
push
mov
xchg
test
jo
jecxz
sub
push
add
stc
xchg
push
mov
inc
shl
sbb
into
stos
out
cmp
daa
mov
nop
push
push
fwait
not
sbb
cs
(bad)
lock
sub
sbb
mov
push
rol
xor
xor
add
add
pop
xor
ss
cmp
mov
cmc
add
bound
jp
sbb
adc
lods
jnp
and
pop
pop
or
(bad)
xchg
cwde
ss
rcl
dec
pop
and
aam
adc
xor
fnstenv
xchg
push
loopne
dec
adc
dec
sub
adc
mov
pusha
pusha
add
add
jo
inc
inc
pop
sti
sbb
dec
or
shl
mov
mov
pop
test
cmp
xor
test
cmps
add
mov
nop
stc
mov
dec
out
cmp
add
cmp
mov
fild
or
rol
mov
fs
in
leave
mov
fsub
push
nop
vprotb
xchg
retf
inc
test
fnstenv
ins
or
aaa
push
push
dec
test
out
in
add
gs
inc
xchg
inc
sahf
pusha
mov
dec
xchg
or
out
mov
mov
ja
add
inc
or
pop
pop
pop
mov
xchg
addr16
cmp
jno
mov
xchg
ins
dec
dec
dec
jnp
fimul
push
xchg
mov
xor
nop
arpl
cmp
cmp
jo
out
inc
sbb
jmp
inc
xchg
pushf
jge
sbb
(bad)
xchg
add
jmp
aas
lds
int
dec
xchg
adc
and
mov
or
ins
ja
push
fdiv
pop
adc
add
lahf
retf
xor
mov
adc
inc
jno
sti
shl
sti
loopne
mov
inc
rcr
pop
xchg
retf
cmp
sar
push
call
clc
add
cmp
les
inc
pop
jmp
mov
fld
shl
out
cmps
(bad)
fisttp
stc
jecxz
xchg
mov
ret
xchg
cmp
pop
jae
inc
scas
scas
inc
mov
inc
stos
xchg
outs
jno
add
jecxz
test
mov
stc
and
rol
adc
mov
fadd
sub
imul
loop
ret
mov
lock
fdiv
mov
icebp
adc
bound
dec
push
popf
cmp
aam
add
hlt
icebp
enter
push
mov
inc
mov
sub
leave
in
and
mov
rol
mov
adc
cmp
pop
push
movs
out
jbe
mov
cmp
cmps
xor
nop
stc
or
xchg
mov
or
cmps
and
cwde
inc
xor
dec
int3
mov
mov
cmps
sub
int3
out
push
rol
and
lds
mov
inc
or
(bad)
sub
dec
fwait
or
or
inc
in
sub
xor
jl
inc
or
fs
xor
adc
pop
lea
sbb
in
mov
push
es
dec
xor
mov
and
push
xor
add
or
dec
lods
and
js
and
div
movs
cmc
xchg
push
or
add
cmps
push
retf
sahf
fucom
lock
repnz
mov
and
add
and
adc
ins
or
sub
dec
imul
and
add
ja
inc
mov
test
sbb
inc
cmps
int3
(bad)
cmp
pmaxsw
retf
stos
add
xor
pusha
and
jl
push
rol
inc
shl
jmp
inc
jne
inc
call
dec
mov
mov
ror
test
inc
or
inc
lods
out
push
cdq
rcl
xor
aad
add
push
sub
mov
ds
daa
xor
add
aam
add
(bad)
sar
add
push
ins
ins
jecxz
imul
ret
push
popf
faddp
inc
popf
cmc
adc
mov
dec
ss
int
dec
pushf
cdq
pushf
int
add
pop
jmp
(bad)
and
add
jmp
sub
popf
adc
add
fcmovb
gs
push
fdivr
xchg
out
sahf
in
dec
pop
jb
inc
mov
sbb
pop
movs
cld
pop
or
add
xor
rcr
xor
cmp
mov
mov
sbb
or
cwde
paddusw
mov
lods
or
mov
add
mov
loop
push
add
ret
push
add
imul
jp
jo
push
cmp
das
jne
jbe
push
ds
or
jg
xor
pop
xor
ret
pop
in
out
cmp
pop
mov
push
retf
cmp
je
push
xchg
dec
xor
ss
mov
push
xchg
mov
mov
inc
cmp
and
jns
jecxz
call
out
test
push
rcl
fcomp
jecxz
call
das
push
into
pop
dec
mov
sahf
scas
sub
leave
sub
jbe
sub
mov
loope
sbb
inc
rcr
fisttp
xor
ins
dec
popf
jge
adc
ja
sub
or
push
popa
xchg
mov
push
mov
push
ret
add
adc
add
inc
retf
cmp
ret
les
cmp
add
jmp
jnp
cmp
(bad)
dec
out
(bad)
sbb
adc
push
ja
xor
and
mov
call
jl
jne
repz
ds
pop
bound
push
div
add
dec
mov
mov
cdq
aam
mov
out
nop
or
mov
and
jp
cmp
add
sub
adc
and
sub
cmp
mov
shr
adc
outs
loope
push
les
or
out
sbb
xchg
inc
or
bsf
test
daa
or
hlt
jo
stos
int3
int
call
or
sbb
add
in
loopne
dec
fadd
sahf
jno
call
nop
cmp
or
and
and
add
test
das
jno
adc
add
xchg
xchg
jo
lods
dec
neg
ror
xchg
push
mov
cs
sub
jle
mov
bound
mov
mov
mov
or
pop
(bad)
outs
arpl
jno
call
(bad)
in
mov
cli
in
shl
mov
pop
sub
fisttp
shl
ret
adc
or
adc
popf
add
push
aas
add
xchg
pushw
cmp
add
daa
in
cmc
mov
and
adc
dec
mov
or
sbb
fwait
hlt
add
inc
pop
sti
push
dec
ret
adc
push
push
xchg
or
fs
push
fdivr
or
cmp
mov
mov
mov
stos
mov
xor
and
adc
sub
inc
cwde
add
lock
and
sbb
add
dec
sbb
mov
add
cmp
pop
mov
jo
xchg
mov
pop
sub
loop
add
add
mov
clc
or
inc
push
cmp
js
pusha
mov
adc
shl
aaa
pushf
shl
shl
cwde
cmp
mov
cs
aas
xor
sub
adc
inc
inc
pusha
add
sub
jmp
pop
cld
sub
sbb
mov
js
and
adc
xchg
stos
dec
mov
xor
add
mov
arpl
shl
push
mov
push
call
arpl
xchg
cmp
stc
test
ss
pusha
or
push
rol
mov
mov
inc
ds
rol
addr16
(bad)
mov
ror
xor
or
adc
add
and
sbb
add
push
mov
lds
and
call
add
add
inc
jo
inc
adc
xor
ins
dec
xchg
adc
inc
arpl
call
inc
daa
jo
cmp
add
movs
push
leave
xchg
sbb
or
cmp
ins
mov
xchg
mov
hlt
mov
sahf
jb
and
test
rol
adc
shr
mov
push
ja
movs
int3
(bad)
jbe
test
test
das
cmps
in
mov
cmp
adc
adc
dec
scas
cmp
add
xor
aam
aaa
ror
hlt
enter
adc
xchg
xchg
or
add
dec
adc
add
add
rcr
xor
add
xchg
mov
mov
retf
and
push
dec
jge
pop
jp
retf
test
sbb
ins
add
xor
xchg
fadd
dec
sub
mov
or
retf
mov
das
dec
jmp
jmp
(bad)
mov
dec
nop
in
adc
retf
mov
lods
mov
dec
rcr
or
dec
push
mov
inc
shl
popf
xlat
mov
push
or
add
arpl
jp
pop
jge
int
js
ss
cmps
jl
or
cmp
add
int3
cmp
push
add
in
retf
int
inc
cmp
lock
arpl
aam
inc
adc
mov
jecxz
add
test
mov
inc
xchg
add
adc
or
add
dec
or
add
and
xor
dec
add
arpl
in
add
out
je
push
inc
retf
push
push
aam
sbb
cmps
ins
add
shl
or
cmp
aas
fadd
mov
and
out
pop
and
rol
mov
push
cmp
mov
addr16
rol
adc
(bad)
lods
and
add
jo
jmp
and
repz
mov
sbb
dec
adc
push
adc
xchg
repz
push
add
push
jge
push
inc
xchg
push
dec
ins
mov
push
std
push
dec
ins
add
cmp
or
pop
mov
dec
add
sub
push
or
sete
jge
fcmovnb
cs
sub
or
xor
jecxz
add
add
dec
(bad)
repz
xchg
push
or
pop
popa
cmp
sbb
dec
xor
push
clc
test
push
sbb
sbb
push
push
outs
lds
movs
sub
add
test
pusha
sub
adc
outs
xchg
push
sbb
push
sub
sub
push
jl
test
cmp
push
push
out
inc
into
sub
rcl
add
or
sub
and
test
mov
pop
lods
add
test
jecxz
xor
cwde
pop
jmp
inc
(bad)
sbb
adc
or
out
add
adc
(bad)
adc
adc
das
add
outs
inc
pop
cwde
mov
out
add
push
stc
pushf
xor
xlat
jno
xlat
pop
jne
and
or
xor
sbb
adc
push
(bad)
xor
adc
in
mov
rcr
sbb
test
test
pop
adc
xor
aad
push
mov
cmp
call
fmul
pop
dec
sbb
cmp
push
or
xor
push
outs
mov
push
pop
imul
inc
cmp
mov
clc
cld
rcr
aam
js
aas
push
nop
test
fadd
nop
imul
pop
push
xchg
pop
test
fimul
fmul
sbb
xchg
rcl
jnp
mov
(bad)
test
js
push
mov
pop
mov
retf
adc
dec
in
mov
adc
cmp
pop
sbb
push
fisubr
add
clc
test
xchg
xchg
add
cmc
push
xor
pop
retf
jo
xor
fcom
add
lock
adc
fst
cmp
xlat
inc
lock
sbb
jnp
pop
loope
int
push
xchg
or
pusha
or
loopne
xor
add
mov
push
test
mov
xor
sti
mov
call
pop
jmp
cmc
pop
adc
lock
sub
push
in
fld
mov
lock
xchg
test
add
sub
pop
pop
xor
add
cmp
push
sbb
mov
cs
test
or
pop
test
arpl
ret
push
neg
xor
xor
aaa
into
add
mov
sahf
arpl
jbe
cmp
mov
test
shl
adc
xor
and
push
adc
bound
jno
cwde
inc
pop
sti
jge
pop
test
push
mov
adc
add
add
fadd
sub
push
loop
fiadd
fistp
fild
ds
and
xchg
ret
ficomp
jne
inc
jo
add
pop
jge
pusha
jnp
arpl
mov
(bad)
xor
ss
inc
mov
dec
test
imul
push
adc
mov
xor
dec
test
inc
es
es
xchg
sbb
mov
cmp
sub
clc
xchg
and
hlt
adc
fwait
in
jl
(bad)
lods
fs
(bad)
cmp
add
sbb
mov
sub
inc
gs
cs
inc
gs
pop
jle
sub
cli
xchg
rcl
add
fcomp
imul
addr16
pusha
cmp
jecxz
mov
imul
(bad)
out
and
and
pop
nop
add
push
out
movs
ror
or
adc
push
add
pop
ja
rol
test
lods
jle
mov
nop
lea
out
mov
and
enter
push
test
push
mov
dec
movs
loop
pusha
add
cmps
cmp
aad
dec
add
shl
mov
cmp
add
cmps
arpl
ins
xchg
cs
xchg
arpl
fdivr
push
loopne
inc
loopne
lahf
push
push
xchg
test
add
add
rol
push
add
xchg
in
cmp
sub
add
pop
icebp
sbb
jmp
loopne
outs
and
jbe
mov
lea
sti
aam
pop
xor
push
test
push
mov
dec
shl
enter
out
jmp
out
add
data16
aaa
xchg
out
xchg
leave
pop
out
leave
mov
push
add
test
in
xor
test
xor
mov
add
cs
cld
add
cwde
movs
ins
adc
cmp
cmp
gs
loopne
jmp
jle
imul
jo
push
loop
or
aad
iret
or
xchg
mov
add
push
and
add
lahf
jno
scas
jno
mov
xchg
jle
push
out
pusha
outs
and
xchg
cs
push
into
(bad)
(bad)
ins
cld
xchg
aaa
push
and
cld
outs
cmp
cmp
inc
adc
mov
push
cmp
dec
adc
mov
or
push
call
outs
lock
outs
xcrypt-cfb
cmps
in
fadd
and
push
int
or
(bad)
mov
in
pop
test
inc
jbe
xchg
inc
aas
hlt
inc
mov
inc
xchg
out
push
mov
pop
pslld
outs
pop
push
test
inc
jb
sbb
rol
cmp
aaa
(bad)
jle
call
sbb
in
dec
call
push
punpckldq
pop
pop
or
jae
das
loop
fdiv
div
jbe
xor
inc
push
cli
mov
(bad)
fisub
lock
clc
jae
pop
hlt
pop
loopne
inc
xchg
push
icebp
sbb
sbb
in
rol
maskmovq
imul
outs
push
mov
(bad)
hlt
jecxz
cmps
add
div
mov
aam
sub
push
inc
or
push
mov
outs
sbb
sbb
jb
outs
lock
adc
pop
pop
call
push
outs
and
jne
data16
jg
(bad)
cmp
icebp
dec
add
nop
add
fldcw
push
mov
push
inc
inc
hlt
mov
jbe
pop
hlt
nop
pop
hlt
outs
xchg
cdq
push
ja
mov
pop
push
add
fucom
jbe
cmp
and
or
fmul
loop
jb
pop
lock
or
xchg
ss
mov
add
mov
dec
clc
test
outs
in
jmp
popf
div
addr16
xchg
pop
jns
outs
jnp
lahf
icebp
xchg
pmuludq
jns
mov
push
js
dec
inc
imul
adc
pop
cmp
jns
lahf
pop
popf
daa
in
dec
inc
in
adc
out
dec
pushf
dec
sub
cli
fcomp
outs
cld
aam
mov
fisttp
jae
out
push
icebp
lea
inc
jae
sahf
push
das
or
pop
lock
mov
push
clc
xor
mov
mov
idiv
iret
jge
pop
ins
xchg
mov
stc
aam
cmp
add
pop
test
out
pop
add
ret
dec
adc
cmp
vmread
adc
add
xor
jl
add
shr
xchg
cld
sub
pop
int3
test
jl
iret
xchg
inc
repz
outs
in
jg
xor
cmp
in
cmp
or
add
add
inc
or
inc
fimul
inc
dec
pop
inc
pop
rol
inc
mov
ins
xchg
lds
pop
xor
xchg
es
mov
jmp
xor
lods
imul
cs
and
dec
stos
or
inc
test
fsubr
pop
add
clc
test
in
sbb
inc
dec
or
inc
add
add
inc
xor
bound
and
and
adc
add
mov
pop
aaa
mov
(bad)
dec
xor
sbb
js
in
xchg
daa
(bad)
xor
mov
push
(bad)
sub
add
jmp
mov
jmp
and
push
test
mov
sti
aaa
int3
pushf
cmp
mov
adc
add
imul
pop
movs
mov
cmp
jo
test
mov
fst
fld
outs
jecxz
push
or
into
xor
in
das
loopne
fmul
and
xchg
pop
icebp
sub
rol
sbb
adc
daa
lods
rol
or
rol
sbb
sbb
or
mov
aad
and
mov
mov
mov
jge
adc
fst
mov
or
sbb
lds
popa
push
sbb
inc
ja
xor
push
add
mov
mov
pop
pushf
cmc
pop
jl
inc
push
lahf
pop
add
neg
popa
mov
mov
lds
xor
sbb
mov
repnz
pushf
test
retf
das
mov
sbb
push
jno
add
and
sub
in
enter
inc
and
retf
enter
test
(bad)
pop
xor
fcom
xchg
and
add
dec
inc
adc
add
add
push
adc
inc
push
(bad)
xchg
out
xchg
lahf
xchg
pop
sub
cmp
cmp
jl
mov
gs
mov
or
xor
inc
push
mov
inc
mov
les
mov
mov
mov
jo
sbb
add
inc
sub
jle
sbb
pop
sbb
loopne
add
dec
push
add
or
adc
shr
jle
sbb
cwde
int3
and
mov
dec
pushf
jb
sbb
fwait
jo
or
jns
and
xor
push
test
sub
mov
shl
cmps
stos
sub
outs
ret
pushf
and
and
mov
mov
xchg
arpl
movs
push
aad
pop
mov
or
push
add
rcr
ret
xchg
xchg
icebp
(bad)
js
nop
test
aad
xchg
dec
cmp
cld
ja
int
jbe
daa
imul
mov
dec
mov
dec
enter
cmp
pop
test
lods
adc
es
or
xor
xchg
pop
adc
or
sub
mov
rol
pop
jae
out
xlat
popa
mov
push
pop
and
xor
inc
fisubr
or
push
sub
sbb
mov
sbb
xchg
neg
jl
jae
(bad)
add
mov
or
mov
xor
clc
mov
in
enter
loop
or
push
outs
ficom
push
jb
out
jbe
dec
loop
mov
mov
pop
movs
mov
or
lods
nop
push
xor
and
rcr
jb
mov
lock
ja
adc
adc
data16
mov
xchg
pop
fdiv
mov
js
(bad)
pop
in
mov
xor
dec
(bad)
fwait
loopne
push
or
icebp
popa
adc
mov
jge
mov
adc
test
or
pop
ds
and
(bad)
ss
rcr
dec
cli
addr16
test
daa
add
add
push
add
mov
lock
sub
or
sub
sbb
scas
xor
mov
dec
jp
push
popa
cmp
add
sub
add
xor
vmwrite
and
sbb
dec
fs
sbb
adc
push
jne
add
sub
cwde
and
arpl
enter
rcr
or
dec
or
mov
test
sbb
pop
pushf
out
push
aad
cs
mov
pop
ds
cdq
sbb
xchg
and
cmp
dec
aam
push
cmp
imul
daa
and
xor
push
ja
push
scas
and
sub
in
cmp
xchg
popa
add
and
xchg
lods
add
add
ret
inc
pop
pop
test
repnz
adc
daa
lock
xor
lods
ds
xor
mov
les
push
clc
sub
or
mov
loop
dec
cmp
sub
test
adc
xor
adc
jmp
pop
mov
icebp
and
adc
dec
pusha
jb
jmp
sahf
cmp
xchg
push
add
or
or
push
cmp
add
dec
add
push
adc
movs
mov
adc
and
mov
or
imul
or
inc
or
pusha
add
lods
lahf
dec
int
rcl
mov
or
and
and
pop
dec
sahf
hlt
ins
and
push
jns
jl
xchg
test
pop
jne
pop
nop
imul
adc
adc
icebp
xchg
ins
arpl
mov
push
mov
data16
sub
jp
data16
inc
scas
xchg
adc
pop
test
pop
loope
(bad)
pop
cmp
pop
xchg
jl
je
sub
sub
and
cs
pop
and
push
scas
(bad)
sar
(bad)
test
in
sub
pop
nop
mov
les
wrmsr
lods
sbb
push
sub
and
cwde
add
inc
sbb
add
pusha
mov
adc
add
jecxz
mov
inc
pop
fiadd
in
enter
pop
ret
ja
fild
sub
jb
xchg
mov
adc
pushf
or
cmp
jl
mov
icebp
sti
mov
or
or
aaa
and
dec
push
dec
(bad)
les
in
scas
(bad)
mov
jmp
or
sbb
das
and
add
push
add
call
mov
dec
adc
cwde
(bad)
das
jp
and
push
or
mov
lea
fimul
das
mov
clc
xlat
repnz
das
cwde
dec
cwde
ins
add
push
out
inc
arpl
mov
mov
jb
js
inc
xchg
xchg
xor
jbe
or
popf
scas
xchg
pop
xchg
lock
addr16
iret
es
add
jge
shl
aaa
inc
or
mov
shl
mov
inc
sub
dec
fwait
shr
int
enter
lea
push
xchg
mov
and
push
test
add
dec
ret
mov
inc
mov
inc
adc
and
inc
jo
scas
jl
sub
jnp
test
xor
test
sbb
(bad)
rcr
sbb
mov
movs
add
repnz
mov
adc
lock
rol
push
and
mov
jge
stos
daa
xchg
jae
aas
xor
neg
mov
xchg
xlat
sbb
mov
call
pop
js
push
sbb
push
add
js
pop
jbe
push
cmp
das
xchg
fdiv
test
es
xor
push
dec
xchg
ret
mov
adc
dec
nop
inc
test
mov
add
leave
mov
mov
out
or
dec
aam
add
inc
sub
or
sub
xchg
or
jle
xor
jmp
jne
pop
jne
scas
xor
cmp
cmp
mov
fs
xor
lds
add
iret
jbe
stos
mov
shl
dec
cwde
test
loopne
es
adc
pushf
xchg
(bad)
dec
clc
dec
hlt
inc
sbb
pop
xchg
daa
dec
jns
pop
ds
mov
lock
rol
dec
cli
shl
je
sbb
sub
inc
cwde
scas
out
xchg
imul
xchg
in
push
out
leave
fld
add
adc
adc
fsub
test
inc
push
inc
mov
add
xor
cmp
xor
inc
imul
call
shl
fst
rol
dec
nop
adc
cli
xor
jmp
sub
pusha
push
sbb
stc
adc
sldt
loopne
adc
inc
cmp
or
lock
or
hlt
rcl
mov
(bad)
into
dec
push
inc
xor
loope
and
lea
mov
sub
sub
cmps
ret
pusha
or
and
cwde
xchg
dec
sti
push
dec
jmp
hlt
pusha
mov
fld
or
or
push
out
and
gs
test
xor
or
sbb
pushf
ret
loopne
jb
dec
nop
into
pop
xchg
fadd
es
sbb
mov
sahf
pusha
or
adc
shl
enter
mov
aam
mov
push
fadd
nop
adc
popf
dec
retf
out
sbb
sbb
test
loopne
dec
bound
les
shl
add
js
std
ins
test
or
pushf
inc
arpl
inc
xor
add
pop
ret
and
call
adc
xchg
mov
frstor
xor
sub
mov
(bad)
jg
mov
int3
push
xor
loope
and
and
sub
adc
inc
pop
lods
inc
xchg
push
add
pop
sub
mov
retf
outs
mov
jo
xlat
mov
enter
bound
mov
cmp
add
fcmovb
movs
xchg
add
pop
add
cld
in
repnz
add
push
xor
adc
xor
add
gs
push
push
cmps
jns
div
(bad)
mov
in
cli
xchg
retf
mov
into
xor
add
add
pushf
aaa
stc
sbb
repnz
and
cmp
dec
fisttp
dec
sahf
movs
pushf
jecxz
loopne
and
mov
dec
lds
cmp
and
xchg
push
mov
xor
retf
and
in
sub
jbe
pusha
or
in
mov
pop
fadd
retf
les
loop
mov
sub
adc
pusha
test
loope
pop
fist
ret
jno
(bad)
fst
ret
and
in
in
sbb
jo
pop
mov
pusha
push
call
nop
rcl
cld
icebp
loope
rol
or
addr16
or
gs
gs
ret
and
popa
ins
ret
data16
and
mov
fwait
aam
call
std
adc
add
cmps
subps
pop
pop
push
cmp
pop
cld
or
sub
fwait
daa
nop
and
addr16
fild
(bad)
or
cmp
out
inc
addr16
jecxz
or
push
or
xor
sbb
addr16
xor
ret
imul
loop
or
fstp
sub
jp
adc
xchg
sbb
adc
mov
xchg
pop
and
rol
adc
or
and
sub
mov
movs
xor
and
mov
enter
call
jl
fld
mov
cmps
sub
push
dec
inc
adc
test
shr
xor
retf
or
imul
aad
nop
push
jp
sahf
fadd
xchg
data16
ret
xor
in
je
xchg
jmp
mov
sbb
xchg
ror
les
call
sbb
sub
add
or
cld
es
mov
pop
inc
pop
push
(bad)
ror
sbb
ror
adc
mov
sbb
dec
fnsave
mov
shl
mov
sub
rcr
sub
fnstenv
pop
xchg
stos
call
call
ret
inc
pshufw
rcr
ss
inc
mov
fwait
dec
mov
lds
mov
and
add
inc
rol
(bad)
xchg
js
sbb
inc
xor
es
jmp
inc
imul
xor
push
pop
int3
(bad)
in
mov
inc
and
xchg
lahf
sahf
xchg
mov
jmp
loopne
jne
cmp
push
or
imul
cmp
aam
adc
add
stos
mov
adc
lods
shl
push
rcr
rol
sub
shl
pop
jmp
shr
sar
test
push
(bad)
adc
xchg
cmp
mul
retf
inc
int
enter
test
adc
add
je
leave
into
push
jmp
add
outs
and
inc
sub
movs
scas
sub
sub
out
rcl
mov
int3
aad
dec
call
and
fadd
sub
add
push
sub
mov
sbb
mov
es
in
pop
pusha
add
ds
lock
scas
pop
ror
sbb
cwde
add
or
or
mov
scas
cli
dec
sahf
mov
cmp
in
je
rcl
adc
pushf
add
nop
outs
push
data16
stos
pop
jl
sub
sub
lahf
out
sub
sub
out
sub
dec
enter
retf
(bad)
ror
fiadd
je
lock
push
dec
jbe
sub
dec
mov
lds
or
pop
in
sub
out
sbb
push
and
mov
jbe
sbb
inc
and
jmp
xor
int3
sub
xor
adc
or
das
stos
xchg
ror
inc
adc
pop
jo
sub
add
sub
test
add
out
test
loope
mov
sub
inc
adc
rol
icebp
add
cwde
inc
xacquire
jmp
xchg
stos
add
dec
(bad)
(bad)
xor
xlat
push
add
xor
rol
popf
adc
dec
add
sbb
or
and
or
sub
int
add
inc
push
icebp
or
or
adc
jae
test
xchg
xor
mov
sub
jno
xchg
add
mov
loop
in
fdiv
pop
or
cld
mov
xchg
xor
mov
ss
repnz
push
adc
inc
sbb
dec
and
repnz
xchg
in
or
add
int3
push
es
in
pop
or
pusha
jecxz
xchg
das
push
or
sbb
daa
(bad)
cmp
mov
dec
xor
push
mov
imul
push
lods
test
jge
add
ror
mov
xor
and
xchg
xor
sbb
mov
mov
les
add
mov
xor
inc
cmp
call
fstp
xor
jnp
cmp
dec
and
sldt
mov
pop
test
shl
push
das
pop
in
sbb
add
pop
add
mov
adc
and
inc
push
xor
(bad)
jb
je
pop
fisubr
adc
or
add
and
sub
ret
hlt
dec
mov
xor
or
push
xor
add
xor
das
in
rcl
xor
js
push
push
loop
jo
or
ins
push
scas
repz
in
pop
int3
push
cld
add
cmc
ins
pop
test
mov
mov
ror
pop
fwait
lea
test
enter
cmp
push
mov
push
fidivr
mov
int3
jne
dec
xor
pop
and
adc
mov
jl
push
xor
inc
adc
push
jp
add
mov
bound
jbe
out
jge
add
mov
and
test
cmp
and
xor
mov
sub
jae
dec
movs
xor
call
pop
rcr
sub
test
les
and
pop
adc
xor
aaa
mov
pop
mov
push
sbb
jne
mov
rcl
hlt
push
jl
dec
sub
sub
jns
pop
repz
cmp
outs
and
adc
imul
dec
jbe
and
test
mov
mov
pop
cmc
and
mov
retf
ret
push
hlt
cmps
inc
pop
pop
mov
xchg
inc
int3
lock
js
pop
rol
test
and
or
inc
test
adc
pop
pop
retf
mov
aaa
in
aaa
popa
mov
jo
(bad)
(bad)
adc
stc
nop
ja
sbb
adc
push
sbb
(bad)
xchg
imul
jp
push
stc
dec
aaa
inc
dec
das
inc
fs
lock
xchg
adc
nop/reserved
cwde
div
mov
add
xchg
sub
ja
int3
dec
pop
cld
mov
je
sbb
cmp
pop
and
inc
sbb
inc
imul
pop
das
mov
push
dec
mov
xchg
lea
pop
or
and
inc
xor
hlt
or
adc
cld
adc
adc
stos
cmp
cmp
push
mov
xchg
scas
out
xchg
outs
stc
es
add
mov
dec
and
cmp
xchg
inc
js
push
retf
mov
mov
test
jnp
xchg
inc
and
and
pop
jle
mov
sti
fnstenv
inc
mov
add
and
pop
jmp
xchg
push
lds
(bad)
ficom
sti
std
cmp
(bad)
rol
and
lahf
cmp
lods
cmp
pop
jl
ret
add
mov
inc
xor
fidiv
push
inc
outs
jne
arpl
pusha
and
cmp
mov
lock
jbe
loop
jle
dec
mov
fild
outs
xchg
sti
sub
(bad)
add
shr
cwde
push
add
jnp
fadd
shl
inc
dec
mov
sbb
add
jle
pop
jge
rol
and
shl
lock
mov
scas
std
sbb
rol
xchg
mov
loope
adc
fstp
fst
rol
or
cwde
ss
lahf
push
mov
pop
shl
(bad)
loop
cmp
add
bound
sti
xchg
add
push
jae
jge
inc
std
sbb
mov
cmp
add
sbb
sahf
cmp
add
add
dec
inc
dec
(bad)
adc
loope
pusha
mov
xchg
mov
dec
cmp
xchg
xchg
cmp
cmp
and
nop
cwde
inc
xchg
aam
jb
daa
xchg
xor
jns
hlt
stc
jae
and
stos
mov
xor
xor
push
test
test
sbb
call
inc
pop
cs
cwde
add
or
pusha
jl
and
dec
fisub
pop
sar
cmps
call
outs
ficomp
clc
jp
sti
pop
jo
rol
xchg
fst
dec
and
xchg
call
jle
inc
and
loope
add
xchg
jp
xchg
mov
or
mov
and
mov
or
fisubr
cs
push
ins
loope
movs
dec
xchg
inc
pusha
mov
icebp
call
cmp
and
sub
push
aas
call
push
icebp
dec
cmps
push
xor
inc
jbe
pushf
lock
or
gs
pushf
push
mov
jb
xlat
aad
xchg
scas
add
adc
jmp
sar
and
(bad)
bound
add
or
call
adc
add
jmp
ret
loop
cmp
jno
mov
pushf
test
ss
or
xor
ins
mov
push
clc
sub
cmp
and
imul
and
adc
and
mov
outs
xchg
inc
push
cwde
sbb
rep
sub
cmp
test
rol
push
mov
mov
sub
(bad)
in
shr
sar
jmp
ret
mov
daa
sub
retf
cmp
rol
push
sub
dec
(bad)
js
and
xlat
pusha
adc
fs
inc
fidiv
icebp
mov
push
pop
sub
in
xchg
mov
and
adc
and
mov
arpl
push
mov
test
pop
push
mov
cld
enter
xor
add
test
mov
mov
repz
movs
iret
jb
dec
or
inc
and
cwde
or
inc
xor
pop
sbb
push
add
xchg
jb
xchg
in
call
or
sub
les
push
jns
lods
test
pop
jge
and
mov
push
data16
cwde
jecxz
outs
bnd
inc
sbb
cmp
imul
addr16
int3
adc
cld
fdivrp
mov
jo
add
jae
sbb
mov
dec
xchg
push
inc
inc
cmp
ror
out
sbb
sub
cmp
fs
mov
dec
sbb
sbb
fsubrp
popa
fbld
sahf
cmp
and
or
and
adc
pop
dec
fdivr
test
(bad)
fcom
mov
es
dec
pushf
loop
mov
lea
cdq
add
mov
shl
mov
or
push
mov
rcr
pop
lods
nop
xor
dec
ret
or
dec
add
ret
inc
sub
add
mul
mov
sbb
popa
call
pop
and
daa
loopne
arpl
mov
out
pop
mov
fiadd
sbb
xchg
xlat
sar
jo
test
fldenv
xor
and
cmp
sub
add
adc
mov
test
(bad)
clc
pushf
popf
(bad)
movs
cmps
rol
retf
leave
inc
sbb
add
je
or
mov
push
mov
cmp
popf
lock
and
pop
aam
imul
repz
nop
push
fcom
xchg
xchg
add
test
mov
fcom
loop
mov
jmp
addr16
and
pop
sti
add
adc
test
call
or
nop
and
or
les
push
dec
inc
add
rcr
daa
daa
add
inc
cmp
xor
add
cmp
xchg
mov
mov
or
dec
enter
add
enter
cmc
inc
jp
push
cs
dec
dec
cmps
inc
adc
lock
pushf
push
mov
mov
mov
es
and
fwait
mov
and
retf
inc
push
push
popa
or
fcmovb
push
pop
hlt
lds
mov
add
sbb
adc
or
add
test
sti
imul
xchg
or
rol
rol
add
xchg
test
nop
xchg
and
or
adc
dec
mov
xlat
or
mov
in
push
ror
pop
inc
adc
and
das
push
inc
xor
adc
ds
push
jl
retf
fld
adc
xor
xor
xchg
addr16
add
dec
imul
sbb
and
in
movs
add
cwde
mov
scas
adc
and
push
lock
mov
or
inc
ret
or
pshufw
js
add
test
inc
das
enter
mov
and
adc
mov
inc
sub
loopne
adc
sub
add
add
ds
rcl
sbb
pop
xor
sbb
call
dec
xchg
imul
pop
cli
ror
push
mov
(bad)
fs
shl
dec
jmp
sub
neg
and
retf
test
imul
outs
lods
inc
sbb
cwde
inc
sub
add
cmp
ud0
loope
push
mov
adc
shr
cdq
mov
daa
aas
cdq
and
popa
or
loop
shr
and
fst
fiadd
dec
ds
add
stos
push
inc
inc
mov
sub
mov
dec
imul
and
sbb
pop
(bad)
push
add
lock
xor
mov
fcom
lods
call
mov
loope
leave
sub
pop
aaa
xor
mov
or
popa
mov
mov
sub
sub
(bad)
mov
hlt
mov
loop
xchg
cmp
fbld
cmp
and
into
mov
jg
rcr
jle
shl
outs
xor
push
inc
mov
push
sub
lea
adc
sti
add
jbe
add
fsub
pop
adc
push
xchg
inc
lods
mov
jae
(bad)
jg
loop
xor
lds
adc
rol
dec
xchg
lock
pop
mov
dec
xchg
test
cwde
cli
aam
mov
popa
or
or
mov
mov
mov
call
sbb
hlt
xlat
retf
add
xor
les
mov
retf
cdq
(bad)
mov
mov
pusha
test
adc
pop
rcl
fcmovnu
div
inc
pop
not
nop
les
nop
stos
fcomp
ret
jbe
pop
and
adc
ja
lods
imul
mov
mov
jb
xchg
mov
cmp
xchg
js
pop
ins
mov
stc
mov
mov
das
adc
xlat
inc
jnp
repnz
cmp
call
add
adc
push
stc
int3
aad
xchg
int3
pop
or
mov
sbb
pusha
add
push
pop
add
ds
fisubr
iret
dec
push
cmp
popf
jo
mov
shr
imul
xlat
push
adc
js
xchg
and
and
in
adc
xor
or
jmp
push
bnd
pop
imul
loopne
stos
icebp
mov
div
mov
push
scas
je
in
push
lods
cwde
sub
xchg
pop
xor
sahf
lds
(bad)
sahf
push
fisttp
xor
xor
or
mov
aaa
aad
mov
mov
cmp
pop
lahf
stos
jne
pusha
add
add
or
test
ja
sub
sbb
and
nop
inc
in
mov
or
call
push
cmc
fs
loope
sti
xchg
push
add
rcr
and
sbb
mov
pop
xor
sub
lds
or
arpl
push
and
retf
loopne
inc
shl
popf
outs
mov
test
or
push
rol
div
add
rcr
add
and
xchg
outs
cmps
pop
inc
add
or
add
out
push
add
mov
or
scas
push
mov
es
out
out
into
out
les
adc
dec
mov
adc
fisubr
std
mov
(bad)
fisubr
(bad)
scas
popa
(bad)
push
or
pusha
or
add
pmulhw
scas
call
shl
add
jle
pop
adc
pushf
ret
pop
scas
cmc
sub
jmp
dec
stos
sbb
add
fnstsw
sbb
or
rcr
jb
add
dec
stc
and
pop
push
and
movs
loopne
push
add
loope
ds
adc
push
adc
or
aam
dec
mov
cmp
popa
loope
xor
adc
jno
aaa
mov
and
adc
pop
or
or
inc
rcr
mov
mov
pusha
adc
lock
je
push
cmp
fs
push
sti
sub
out
jmp
jo
hlt
lock
loopne
inc
or
adc
(bad)
ror
sbb
adc
bound
loopne
push
and
sub
or
adc
add
jmp
pusha
inc
test
add
mov
mov
adc
popa
add
dec
mov
addr16
or
push
push
inc
sbb
sbb
pop
or
push
or
or
mov
fs
scas
movs
pop
add
icebp
adc
pop
push
pop
xchg
or
mov
out
inc
pop
adc
ret
mov
mov
sbb
nop
mul
push
(bad)
loopne
add
adc
or
pop
lods
adc
ins
sbb
sub
xchg
sub
push
pop
pop
add
inc
adc
loope
add
and
and
adc
es
adc
push
int
repnz
sub
shl
inc
and
xor
push
or
xor
and
popa
sbb
add
dec
repnz
lock
or
or
pop
mov
(bad)
xchg
adc
mov
jns
xor
out
loopne
jmp
(bad)
jmp
scas
sub
sub
add
jmp
or
das
popa
fisubr
adc
jmp
stc
sbb
add
add
and
cmovo
movs
pusha
push
cmp
adc
sub
adc
loop
into
and
hlt
mov
lea
sbb
mov
adc
adc
pcmpgtw
cmp
xor
jns
adc
jo
push
xor
push
(bad)
and
and
icebp
xor
push
loop
arpl
aad
push
jb
pusha
out
push
push
xor
or
loope
or
mov
jae
push
add
test
xor
test
(bad)
call
sub
jae
nop
pusha
or
add
(bad)
out
mov
sub
cmp
cmp
push
sbb
int3
repz
int
fsubr
(bad)
jae
adc
sbb
(bad)
jmp
or
or
jne
aas
std
jae
xchg
jmp
inc
mov
sahf
dec
mov
into
push
adc
pop
or
neg
hlt
lds
adc
push
and
je
cmp
inc
mov
jbe
push
xor
push
push
sub
rcl
inc
add
add
or
inc
sub
adc
adc
and
push
cmp
popa
xor
mov
pop
inc
lock
lock
int
mov
dec
adc
setbe
pushf
adc
repnz
test
sbb
out
lods
push
inc
jle
add
test
mov
dec
dec
enter
add
pusha
add
xor
shl
aam
jnp
mov
sub
pusha
xchg
iret
dec
icebp
shr
scas
aad
add
add
or
add
and
adc
and
mov
push
sub
push
adc
push
adc
push
pop
push
push
xor
(bad)
push
push
mov
or
movs
jb
mov
test
psraw
ins
xor
nop
popa
sbb
out
cmp
jge
push
shl
sbb
dec
jge
xor
rol
call
loope
and
ds
cmp
add
inc
or
loopne
rcl
loope
imul
xor
fcmovbe
pop
sub
jle
mov
jno
and
push
loope
and
jae
ficom
adc
inc
or
and
test
gs
mov
dec
jnp
push
shl
xor
push
inc
push
add
cs
sbb
pop
sub
jmp
aaa
icebp
xor
pushf
test
fs
and
push
sub
adc
xor
das
push
inc
popa
push
and
or
icebp
xchg
jo
or
mov
add
std
mov
sbb
push
jno
xchg
xor
pop
push
int3
mov
add
outs
fisubr
or
retf
hlt
in
add
aam
cmp
jecxz
out
xor
mov
loop
jmp
jg
adc
jmp
aaa
jmp
cmp
pop
add
loopne
or
adc
mov
xor
push
adc
cld
inc
outs
push
adc
or
jb
mov
mov
sbb
jae
lea
push
aad
push
push
pop
jbe
add
cmp
xor
loope
movs
in
test
out
pop
cmp
mov
sar
cs
push
jl
push
mov
add
pusha
or
dec
clc
fstp
fs
cmc
dec
popf
stos
jp
imul
aad
std
imul
xlat
adc
jb
addr16
inc
dec
jge
cwde
adc
adc
sbb
or
retf
xor
xchg
sbb
sbb
sbb
push
jae
jbe
jae
popa
cmp
inc
push
adc
pop
xor
fild
xor
mov
jmp
mov
adc
xor
push
dec
inc
push
sub
mov
inc
or
or
test
bswap
aam
pop
cwde
sub
stc
pop
adc
and
dec
loopne
jno
adc
outs
xchg
loop
ins
mov
inc
pop
or
mov
dec
jns
push
(bad)
ret
ret
pop
fst
xor
xor
push
adc
sbb
pop
dec
pusha
push
xchg
pusha
cli
lods
dec
shl
push
inc
shl
scas
out
sub
inc
xor
pop
adc
xchg
lock
add
lds
js
fmul
jns
xlat
dec
das
popa
xchg
stos
xchg
sub
add
shr
xchg
das
pusha
or
cmp
aad
ins
adc
mov
inc
pop
xchg
sub
dec
jns
push
cdq
sbb
(bad)
les
mov
jg
cdq
(bad)
mov
push
or
call
push
pop
mov
repz
xor
mov
ja
(bad)
bound
pop
sub
push
pusha
test
push
mov
sub
jns
je
jnp
jmp
das
fnstcw
cmp
mov
add
xchg
mov
pop
cdq
mov
popa
pop
xchg
inc
adc
inc
xor
jnp
or
jmp
les
(bad)
(bad)
loopne
and
je
add
(bad)
sub
add
mov
stc
xor
pop
sub
into
fsub
stos
cmp
fwait
cmp
js
lahf
dec
cwde
pushf
(bad)
mov
mov
add
pop
sahf
cmc
xchg
sahf
lahf
cmp
jns
stos
cli
lahf
add
mov
jle
or
arpl
lods
add
sbb
pop
inc
jne
xchg
pusha
push
adc
mov
adc
and
dec
pop
pusha
and
movs
movs
adc
xor
test
fist
movs
inc
data16
jne
out
add
add
add
cmps
addr16
fs
jp
(bad)
aaa
in
push
push
popf
or
inc
xchg
loope
test
fwait
leave
movs
call
pop
mov
pop
sbb
ficomp
push
or
adc
jmp
(bad)
movs
add
cmp
mov
sbb
adc
clc
cmp
or
push
mov
sahf
add
dec
pop
mov
(bad)
mov
fdivr
inc
add
mov
cmps
add
iret
add
inc
mov
cmps
fidiv
(bad)
push
out
call
fmul
popa
cdq
je
mov
push
ja
shl
mov
xor
scas
mov
les
hlt
int
jmp
jmp
mov
sar
fcmovnb
leave
sbb
mov
aaa
clc
push
(bad)
jp
test
mov
loopne
mov
test
pop
mov
js
popf
or
mov
retf
mov
and
ret
not
jns
pop
xchg
mov
pop
mov
dec
or
mov
cmp
aam
test
pop
call
scas
fld
in
add
add
ret
adc
loopne
adc
ss
fstp
and
std
push
xor
sbb
popf
enter
and
(bad)
cs
mov
mov
inc
std
stos
xchg
aam
mov
inc
jne
or
dec
pop
push
or
add
(bad)
xchg
or
dec
test
inc
mov
mov
dec
cmps
mov
test
outs
add
cld
mov
sub
(bad)
jne
push
or
addr16
das
inc
int3
test
dec
loopne
sub
cld
pushf
cmp
popf
mov
cs
loope
jecxz
adc
mov
sbb
cmp
lahf
fcom
cmp
mov
mov
or
pop
ins
(bad)
adc
int3
sti
pop
adc
cmp
jle
xor
add
sahf
stos
dec
pmaxub
push
shl
(bad)
sbb
jmp
and
jmp
jge
and
stos
inc
(bad)
jmp
mov
shl
cmp
ret
mov
in
cmc
mov
pop
cwde
loop
cwde
loopne
push
mov
lock
out
and
cmp
push
sbb
shl
arpl
retf
pusha
add
pusha
add
jecxz
or
jmp
lods
push
dec
sub
daa
or
add
inc
jns
retf
popa
in
sbb
test
scas
retf
nop
icebp
popf
dec
loopne
stc
shr
adc
mov
cmp
push
mov
mov
lods
mov
xor
out
sbb
and
mov
jae
sbb
(bad)
ficomp
jo
shl
jmp
sub
js
cmc
add
add
movhps
pop
and
add
ror
add
or
push
mov
sbb
imul
sbb
jo
cwde
cmp
push
push
call
pop
sub
and
sbb
mov
add
mov
mov
push
mov
int3
test
push
dec
cdq
fidivr
aam
push
pop
ror
shr
or
in
mov
fs
cdq
xor
mov
fistp
pop
mov
scas
fnstcw
pop
mov
sbb
imul
hlt
sub
addr16
xchg
add
inc
js
cmp
rol
sub
mov
push
adc
xor
jle
loope
xchg
cmp
ror
sbb
push
sbb
mov
sbb
out
add
imul
loop
test
xor
(bad)
rcl
add
add
inc
sub
pop
ret
mov
pop
mov
dec
test
sub
imul
sub
mov
pop
outs
pop
mov
pop
(bad)
popf
pop
dec
xlat
pop
jecxz
xchg
xchg
pop
jnp
inc
fsub
movs
push
inc
bound
cmp
inc
sbb
sbb
jns
popa
or
mov
push
add
inc
imul
mov
mov
dec
pusha
shl
(bad)
or
or
sbb
pop
rcr
xor
sbb
fnsave
popf
xchg
mov
jp
xor
adc
pop
pop
cmps
sbb
ss
not
mov
pusha
adc
or
mov
js
add
cmp
pop
xchg
mov
cwde
mov
add
push
or
mov
movs
mov
xchg
or
mov
stos
scas
cli
and
scas
mov
or
aam
ret
or
test
adc
stc
imul
gs
(bad)
dec
push
or
pop
adc
ret
mov
cdq
ror
in
xor
mov
(bad)
pop
mov
jge
daa
pop
ja
xchg
addr16
sbb
rcr
sbb
inc
mov
cmps
mul
test
lea
adc
or
inc
push
sub
bound
loopne
inc
push
lods
xor
ins
mov
bound
adc
inc
(bad)
and
lods
mov
add
push
sbb
mov
loop
mov
scas
cld
imul
or
push
xor
push
pop
out
push
ret
adc
lods
cdq
aad
repz
fimul
popf
fstp
pop
fcmovnbe
pop
and
cmp
(bad)
shl
loop
or
ret
or
repnz
mov
int
mov
mov
cmps
mov
pop
ror
lods
and
les
stos
mov
movs
or
and
or
or
jno
and
call
cmp
int
popa
push
in
out
je
jp
push
add
jb
scas
mov
test
outs
sti
je
mov
pop
mov
in
dec
jl
imul
movs
cmp
sbb
add
sub
scas
cdq
mov
and
and
icebp
test
ds
mov
inc
or
call
add
sub
sub
les
dec
pushf
adc
rcr
jns
pushf
sub
cdq
sbb
dec
xor
xlat
adc
sbb
mov
xchg
lea
js
shr
cmp
ds
rol
imul
(bad)
das
iret
in
push
aas
clc
inc
in
movs
mov
sbb
lea
inc
add
mov
jl
pop
adc
xor
dec
or
xchg
lea
xchg
dec
xor
inc
cdq
retf
cmp
jmp
xchg
mov
pop
cmps
jmp
mov
inc
sahf
cmc
cmp
sbb
imul
gs
push
mov
shl
push
pop
in
dec
(bad)
push
push
pop
xchg
rcl
and
push
or
add
xor
add
or
sbb
inc
jo
loopne
clc
rol
push
mov
or
inc
or
adc
adc
add
movs
rol
test
push
ror
or
dec
int
inc
push
pusha
clc
loop
fnstenv
xor
fadd
retf
aam
cmps
cmp
ror
gs
neg
inc
add
lock
movs
jae
enter
sbb
add
mov
xchg
mov
fistp
in
xchg
sbb
add
push
sub
add
ret
jb
adc
add
or
shl
mov
jb
lods
enter
iret
add
movs
jge
or
add
push
mov
pop
jmp
cmps
div
int
lods
lds
idiv
retf
repz
rcr
cdq
ja
inc
sahf
sub
xchg
ret
push
movs
fdivrp
dec
push
and
cmp
aas
add
add
add
ins
movs
adc
mov
lods
mov
or
movs
cmp
push
(bad)
retf
rol
mov
push
adc
cwde
call
outs
retf
in
xor
xor
sub
rcl
test
sub
push
das
or
mov
push
stos
cmp
retf
push
add
movs
and
and
stos
imul
nop
xchg
inc
pop
and
sub
inc
adc
cmp
cld
adc
cmps
push
int3
popf
mov
imul
lock
push
cmp
ss
call
pop
mov
push
mov
push
push
bound
aam
push
push
add
fist
nop
out
mov
retf
fimul
jo
nop
xchg
inc
inc
cmpps
mov
icebp
fild
xchg
sub
adc
inc
mov
jecxz
xor
pop
iret
adc
in
int3
sub
push
sub
xlat
cmp
cli
jo
mov
add
ficom
xor
and
sti
xor
xchg
mov
and
sbb
add
(bad)
in
sbb
retf
and
or
push
mov
jno
jecxz
xlat
push
push
adc
adc
sbb
aam
pop
js
sbb
pushw
data16
jmp
ss
dec
and
lods
loop
pop
jne
test
sub
stos
jbe
mov
add
sub
push
cmp
jbe
int
loope
mov
push
xor
jmp
xchg
outs
into
scas
push
push
jno
jmp
(bad)
or
mov
sub
shl
or
mov
jge
or
pop
nop
lea
popf
lea
cmps
and
dec
(bad)
inc
nop
mov
mov
inc
add
rcl
xchg
hlt
stos
ja
ds
xchg
test
and
jg
or
imul
aaa
pop
cli
adc
in
mov
jmp
xor
cmp
rcl
fcomp
frstor
or
and
ss
popf
xchg
retf
and
das
xor
pop
adc
adc
pop
hlt
push
mov
cmp
inc
inc
cld
cli
outs
and
mov
and
sub
fsub
sub
mov
cmp
imul
cli
sahf
xor
test
stos
retf
push
xchg
pop
sub
shr
push
xor
pop
jmp
xlat
(bad)
das
mov
sahf
pop
mov
push
(bad)
sti
cmc
jge
mov
mov
push
inc
and
push
test
std
pop
dec
mov
adc
cli
mov
inc
push
clc
test
ds
mov
(bad)
mov
int
sbb
fild
int
mov
dec
mov
mov
inc
addr16
jecxz
inc
sub
add
mov
test
inc
adc
or
and
lods
push
nop
movs
ret
and
xchg
jg
nop
or
mov
seta
std
out
js
cmp
push
mov
imul
dec
inc
cmp
mov
std
xor
(bad)
mov
repnz
rcr
in
dec
ds
je
in
fild
push
popf
popf
sub
mov
pop
popa
jmp
cli
mov
imul
int3
or
loop
and
rol
jnp
addr16
(bad)
jnp
idiv
inc
imul
pop
xchg
lds
jbe
ret
int
sbb
imul
out
xor
(bad)
imul
arpl
pop
jne
loop
mov
daa
cmp
jne
add
inc
jno
mov
popa
adc
test
add
pop
xchg
mov
mov
pushf
add
cmp
cmp
repnz
xor
pop
dec
mov
rcr
cmp
test
or
fcomi
xor
or
and
dec
or
sub
mov
es
inc
cdq
xor
pop
inc
sbb
or
jno
adc
sbb
pop
sbb
jge
fs
pop
jbe
add
test
ja
mov
xor
jb
call
dec
dec
dec
(bad)
imul
cmp
shl
adc
pop
sub
pop
cmp
xchg
test
xor
add
adc
lock
sub
adc
add
ins
popf
sbb
pop
xchg
aaa
or
add
jnp
xlat
mov
xor
mov
mov
mov
xor
es
cmp
ja
clc
es
ja
adc
mov
inc
jns
inc
sub
jp
push
addr16
inc
dec
ret
rol
sub
and
jge
push
adc
test
jle
rol
add
xchg
jno
enter
sub
inc
pusha
jbe
lea
lea
leave
pop
pop
push
js
and
in
cmp
cwde
push
je
inc
int
addr16
xor
xchg
mov
xchg
add
cmp
pop
sub
jp
ret
push
jno
mov
popa
pop
aaa
dec
xchg
ins
pop
(bad)
xchg
test
push
and
add
xchg
adc
adc
or
pop
imul
pop
pusha
dec
jae
ror
bound
dec
bound
xor
ret
inc
pop
mov
mov
inc
sub
sbb
cld
lds
cmp
add
add
fadd
push
adc
xchg
or
adc
cli
xlat
pop
in
loop
ret
pop
inc
pusha
out
xor
(bad)
mov
daa
mov
ins
rol
xchg
imul
enter
cdq
inc
bound
inc
sbb
add
xor
cmp
xlat
pop
pop
hlt
and
inc
imul
sbb
add
add
mov
wrmsr
das
sub
jbe
movs
jle
test
pop
(bad)
jbe
mov
xchg
mov
adc
mov
or
inc
mov
test
arpl
adc
fadd
sub
sbb
xchg
mov
xor
test
ret
pop
pop
xsaves
mov
and
and
sbb
inc
inc
jge
add
cwde
ins
adc
add
push
aas
nop
and
mov
je
or
leave
ins
jmp
pusha
jnp
movs
or
push
or
xor
lahf
xchg
push
push
ret
rcl
stos
mov
mov
cmp
test
inc
push
lds
adc
jae
rcl
lods
xchg
mov
rcr
cmp
sbb
dec
add
dec
lahf
addr16
adc
lahf
popa
xor
sbb
jg
jbe
mov
mov
or
push
arpl
push
cmps
mov
xchg
and
cmps
call
inc
stos
or
xchg
push
mov
push
test
and
out
jne
inc
xchg
repnz
jb
jg
aaa
jge
stos
adc
pop
stos
and
sbb
sbb
and
jne
inc
inc
jo
dec
sub
sahf
loopne
fsub
ins
xchg
add
mov
or
cmps
rol
jae
push
test
mov
jge
aas
ror
dec
and
test
pop
lods
inc
stos
inc
dec
pop
int3
rcl
xor
imul
inc
jg
push
pop
popa
sbb
push
inc
pop
mov
xor
stos
fs
hlt
push
and
or
cmps
jbe
and
mov
movs
inc
mov
icebp
jae
movs
xor
dec
clc
jnp
imul
mov
and
add
sti
or
movs
popa
jl
adc
js
cld
xchg
pop
xor
add
push
xchg
aam
xor
hlt
cmps
cmc
hlt
xor
(bad)
arpl
xor
or
or
xchg
or
mov
dec
call
xlat
enter
aas
mov
mov
jo
fldenv
lods
sbb
lods
fldenv
and
stos
mov
sbb
gs
je
in
or
pushf
scas
call
mov
mov
push
mov
dec
jne
nop
icebp
mov
xor
sbb
and
inc
fs
dec
cmps
push
aad
adc
ins
xchg
push
or
ror
jb
pop
retf
adc
jbe
shr
mov
or
retf
neg
jnp
popa
xor
push
je
stos
adc
dec
sub
mov
mov
ret
sbb
stos
ds
nop
add
nop
add
and
xchg
mov
pop
fstp
mov
stos
add
dec
fs
xor
cmp
mov
jns
add
stos
mov
mov
lods
fucom
lods
mov
pusha
ins
or
mov
xchg
lods
jb
push
fcom
into
xchg
pop
loope
ror
rcl
rcr
mov
sbb
jmp
add
add
mov
loopne
dec
ret
inc
dec
adc
retf
sar
mov
lock
adc
je
cmp
or
pop
and
sub
push
push
pop
add
ja
xor
add
movs
inc
sbb
inc
push
sbb
push
pushf
ret
lds
add
sub
push
in
push
xchg
sub
pop
sbb
cmp
cmp
rcl
adc
ret
mov
pusha
pop
shl
imul
sahf
pop
leave
cmp
inc
and
repnz
pushf
or
lods
enter
push
xchg
push
mov
retf
push
sbb
mov
dec
dec
scas
or
cmp
and
retf
lds
outs
cmp
and
retf
lds
fmul
mov
xor
pop
mov
retf
pop
sbb
inc
ror
jl
push
sbb
xor
mov
(bad)
xchg
xchg
push
jl
jb
enter
push
dec
add
clc
retf
inc
fld
xor
lods
or
imul
inc
lods
push
mov
inc
leave
xchg
pop
fwait
bound
fidiv
int3
into
test
iret
ins
sbb
mov
retf
idiv
jmp
add
int3
iret
std
mov
add
jnp
sar
pusha
add
iret
dec
ror
cmp
pusha
int3
adc
repnz
fcmovnb
mov
stos
mov
push
cmp
ins
xchg
addr16
fdivr
inc
jecxz
int
gs
pusha
(bad)
lahf
or
das
or
stc
mov
pop
mov
mov
add
adc
mov
cmp
shr
ret
iret
dec
add
add
iret
mov
ror
dec
mov
cmp
hlt
jae
jmp
push
ss
and
into
cld
int3
cmp
aas
aam
enter
(bad)
add
xor
outs
retf
xlat
xchg
or
stc
add
or
inc
sub
add
add
add
add
or
add
mov
sub
popa
xchg
and
and
adc
mov
cwde
dec
mov
and
sbb
xor
dec
leave
xchg
and
xchg
imul
dec
xchg
imul
ret
adc
mov
adc
jbe
sbb
push
bound
push
out
scas
pusha
mov
cmps
dec
pushf
gs
sahf
dec
pop
hlt
call
xor
test
inc
push
dec
imul
call
adc
adc
push
gs
mov
jecxz
sub
test
jmp
push
dec
jne
xlat
int
or
int
mov
mov
cmps
xchg
das
push
hlt
push
or
ins
loop
pop
inc
or
xchg
(bad)
and
ins
fstp
leave
fdivr
out
push
movs
out
mov
jge
iret
out
and
mov
push
mov
sti
dec
idiv
mov
cmp
loope
es
and
adc
cmp
shl
loope
or
push
fnstsw
push
pop
push
lock
loope
sub
push
cmp
sub
mov
jbe
pop
pop
shr
(bad)
shl
or
push
push
xchg
pop
xchg
mov
test
and
sub
nop
dec
xor
adc
or
cmps
ror
xchg
jmp
data16
jl
lds
dec
pushf
pop
jmp
in
adc
inc
call
out
imul
push
stc
inc
in
and
cmp
lahf
jg
cdq
les
xchg
stc
fs
push
mov
aad
fcomp
popf
pop
data16
imul
add
sub
mov
data16
enter
cs
fwait
mov
jno
movs
(bad)
(bad)
retf
mov
add
xor
dec
sub
addr16
(bad)
mov
pushf
push
sub
mov
fsub
lds
mov
or
(bad)
stos
scas
call
jp
cli
out
lahf
(bad)
retf
in
mov
stos
in
sar
stos
mov
or
mov
mov
ror
xchg
dec
and
getsec
cmp
dec
in
adc
sbb
cmps
jmp
sbb
adc
mov
mov
leave
and
mov
lods
sti
call
in
into
inc
and
xor
cmp
push
mov
ja
lods
enter
mov
sbb
repnz
daa
adc
jb
cmps
pop
addr16
push
mov
xchg
pop
in
leave
or
fs
ins
sub
and
(bad)
(bad)
into
cmp
lock
into
ins
neg
ja
in
add
adc
iret
add
cmp
test
sbb
xor
mov
pop
addr16
mov
mul
cwde
aaa
shl
and
mov
call
jecxz
shr
xchg
mov
lahf
push
adc
inc
es
loop
xor
jmp
cmp
push
pslld
xchg
cmps
dec
rol
into
add
int3
xchg
adc
dec
xchg
mov
(bad)
jns
jmp
adc
cmp
mov
adc
xchg
sti
sti
jmp
(bad)
clc
(bad)
cmp
jge
inc
repz
add
inc
rol
push
ins
add
adc
sahf
jmp
test
idiv
js
lahf
pop
fadd
mov
(bad)
jbe
dec
pop
cmp
xlat
ds
rcr
rcl
cli
inc
xlat
xchg
addr16
or
xchg
int3
mov
dec
or
popa
adc
jmp
or
ja
mov
cmp
jl
adc
and
inc
repz
jbe
sub
cmp
cs
mov
dec
push
sub
inc
(bad)
sti
pop
add
(bad)
ss
pusha
xchg
dec
pusha
mov
test
or
sbb
cmc
inc
aaa
cmp
ins
mov
jmp
add
enter
xor
sub
mov
arpl
pop
mov
dec
pop
(bad)
mov
ret
test
add
push
cs
mov
and
jb
adc
add
add
xchg
or
mov
dec
dec
jb
icebp
test
xor
inc
dec
jne
add
shl
leave
sbb
add
add
data16
push
jmp
cmp
call
add
fdiv
pop
mov
jbe
retf
sub
sbb
xor
push
sub
cmp
push
inc
out
dec
sub
sbb
fwait
adc
inc
mov
adc
cmp
jmp
add
pop
adc
sahf
jo
cli
dec
imul
pop
in
sub
pop
data16
sar
aaa
les
add
mov
and
lods
mov
jo
loope
scas
inc
sbb
(bad)
adc
ins
rcl
push
sub
addr16
inc
or
pop
dec
cmps
xor
push
sbb
adc
loop
inc
cmp
adc
leave
cs
mov
and
adc
and
xor
lods
stos
xchg
cwde
sub
push
sub
out
dec
sbb
xor
xchg
xor
inc
dec
jmp
and
dec
ret
cli
inc
or
aad
out
sub
adc
aam
rcl
xor
jno
lods
jmp
jbe
leave
cmp
lock
daa
mov
push
fsubp
or
inc
imul
add
cli
test
enter
dec
sti
cmp
stos
lods
gs
sub
ret
mov
pop
ins
imul
mov
pop
xchg
add
lea
(bad)
and
ins
inc
jl
push
add
and
in
jno
pushf
(bad)
mov
stos
repnz
pusha
pusha
shr
jns
xchg
mov
push
and
mov
or
push
repz
mov
jge
cmp
xor
lock
inc
xlat
mov
inc
outs
or
and
fisub
loopne
(bad)
push
mov
mov
mov
mov
rcl
aam
and
jae
or
cmps
add
retf
test
cmps
sti
add
ins
inc
sub
ja
ss
cmp
loop
jge
pop
repnz
pop
mov
sub
addr16
push
ins
add
sub
cli
xor
pop
push
sub
inc
and
call
cmp
mov
data16
movs
push
repnz
jg
int3
adc
inc
mov
cmc
sub
out
jne
push
fisubr
and
stos
dec
inc
inc
(bad)
shr
push
imul
fld
repnz
or
arpl
(bad)
xchg
mov
imul
mov
mov
jbe
sub
ret
pushf
push
pop
jae
xlat
(bad)
xor
aaa
and
and
add
push
dec
sub
sbb
gs
pop
dec
inc
jb
rcl
out
outs
aad
loopne
(bad)
sub
inc
and
enter
ins
mov
js
sub
jmp
movs
jg
mov
or
pop
jmp
pop
xchg
test
sti
cli
ficom
mov
add
xor
adc
pop
retf
adc
cmp
mov
jo
push
scas
out
push
sub
scas
xlat
push
inc
mov
sbb
xchg
daa
loop
cmps
add
arpl
scas
sbb
push
sub
and
sahf
cmp
loop
(bad)
out
push
(bad)
xchg
aaa
and
or
lock
retf
cmp
push
popf
call
or
aam
hlt
int3
(bad)
mov
movs
popf
sahf
imul
sbb
gs
and
in
pop
xchg
xchg
sbb
popa
push
push
aam
xchg
or
sbb
call
jg
into
in
mov
in
adc
out
das
jle
in
cli
out
cmc
jmp
jg
inc
pop
xlat
inc
sbb
in
in
mov
add
sbb
(bad)
xor
in
jns
fwait
outs
or
mov
jo
adc
add
shr
pop
out
shl
inc
add
shl
data16
mov
ffree
sbb
imul
hlt
pop
or
int
dec
add
out
xor
pop
sub
push
jl
ret
xchg
jl
and
mov
cmp
or
idiv
push
mov
ins
fdiv
push
inc
test
push
and
addr16
addr16
inc
arpl
pop
aam
test
pop
outs
cmp
je
add
rcl
mov
or
enter
adc
les
jo
test
ja
das
pusha
dec
cmps
jecxz
or
add
adc
or
dec
add
cmp
int
sbb
inc
addr16
mov
(bad)
xor
push
xor
dec
out
repz
dec
xor
pop
ret
les
popa
test
push
mov
sub
cmp
push
xchg
test
mov
jae
test
repz
pop
jbe
push
ror
dec
call
pop
js
loope
outs
adc
and
xchg
inc
inc
addr16
add
mov
jg
pop
push
xchg
cmp
or
ins
pop
pop
adc
or
xor
pop
cwde
test
adc
inc
nop
jns
xchg
adc
popa
push
xor
dec
sbb
and
xchg
outs
ret
hlt
mov
repz
mov
add
push
xchg
push
dec
sbb
ficom
cmps
arpl
in
imul
sar
nop
imul
mov
jae
(bad)
adc
gs
stc
test
xor
mov
mov
aas
push
and
inc
test
nop
xchg
add
test
ins
aad
inc
(bad)
xor
into
enter
push
adc
nop
add
sbb
adc
and
xchg
cmp
dec
sbb
repnz
inc
push
jns
xchg
or
pop
xchg
js
adc
push
pop
fdiv
call
popa
and
call
test
mov
jge
dec
in
pop
jg
call
sub
sub
cwde
add
cmp
loopne
je
lea
or
jmp
lahf
xor
(bad)
lock
add
out
or
mov
pop
repz
mov
sbb
rcl
mov
daa
arpl
repz
push
stc
pop
ins
xchg
lds
pushf
and
rcl
pop
add
pusha
cwde
jp
push
xchg
je
outs
push
xor
out
cmps
xchg
fcomp
dec
in
arpl
mov
(bad)
loopne
mov
sbb
repnz
mov
pop
jle
sub
fcom
and
jp
jb
ss
call
lea
test
call
mov
cmp
xor
mov
das
and
adc
and
dec
cmps
jbe
nop
daa
gs
pusha
add
arpl
cmp
popf
outs
push
popf
aad
xchg
bound
fild
out
es
cmps
sbb
xor
inc
or
lock
mov
inc
lock
mov
adc
cmp
jne
gs
add
jo
shr
push
adc
imul
mov
pusha
mov
leave
push
or
addr16
dec
imul
in
xchg
fwait
scas
mov
mov
sahf
jae
mov
sub
push
in
dec
pop
add
daa
push
push
adc
xor
imul
call
test
call
mov
mov
scas
add
and
xor
mov
pop
call
hlt
push
nop
or
jmp
adc
xchg
test
ret
cli
cmps
jo
xchg
aam
push
je
pop
dec
fs
dec
mov
mov
dec
test
add
lds
iret
mov
mov
test
out
or
push
and
inc
inc
sub
test
clc
test
mov
dec
xchg
cwde
jne
test
mov
push
mov
xchg
mov
adc
clc
sub
push
rcr
cli
mov
jp
mov
mov
or
pop
arpl
imul
jp
push
es
mov
adc
(bad)
mov
and
mov
sub
test
dec
add
sbb
cmps
test
and
cli
dec
add
jmp
dec
stos
jne
mov
mov
mov
pop
test
pop
inc
push
adc
mov
push
mov
sbb
jno
and
dec
sub
scas
mov
shl
test
jp
call
push
cmps
and
xor
scas
std
jmp
stos
jl
push
dec
mov
adc
loopne
lods
cmp
or
test
push
retf
ss
push
mov
sbb
cmp
cmp
xor
jp
addr16
inc
arpl
scas
add
push
jmp
xor
xor
popf
shr
lods
dec
adc
add
cmps
xor
inc
test
inc
shl
pop
test
xor
mov
lock
jg
cmp
mov
mov
xor
mov
ss
pop
fist
xor
lods
add
sub
mov
fwait
dec
xor
mov
pop
dec
or
imul
imul
mov
or
jne
repz
jmp
hlt
pop
mov
jo
cli
mov
lahf
mov
add
mov
pop
rol
or
rcr
cdq
add
inc
je
mov
repz
mov
and
push
sbb
push
add
mov
sahf
sti
mov
div
mov
loopne
pop
stos
js
call
shr
xor
pop
ret
les
ss
jg
ret
dec
mov
repnz
pushf
shl
and
push
add
pop
push
adc
retf
cmp
std
loope
sub
test
xchg
mov
xor
dec
nop
add
(bad)
fstp
xchg
xchg
pop
test
ret
ret
push
iret
loopne
push
jo
imul
mov
mov
fadd
xor
cmp
xchg
xchg
cmp
mov
jmp
out
or
mov
inc
add
dec
rol
sbb
cmp
mov
cdq
imul
inc
mov
xchg
and
and
retf
mov
sti
xor
retf
mov
or
int3
ret
(bad)
pop
int3
push
xchg
les
rol
cmp
sub
push
leave
push
lds
leave
fwait
pushf
xchg
aad
dec
popa
(bad)
mov
in
out
push
retf
outs
pop
jne
jo
mov
popf
xor
cmp
add
ja
retf
iret
clc
mov
cmc
lods
iret
pop
popa
ror
shl
push
ins
and
dec
push
std
push
xor
int
jmp
push
(bad)
dec
les
repnz
adc
repz
stos
sbb
adc
mov
push
xchg
into
neg
sub
(bad)
cld
iret
mov
cmp
adc
daa
adc
add
pusha
rcl
mov
sub
int
aam
or
rcr
(bad)
xor
shl
ss
loopne
jae
retf
and
sub
mov
(bad)
and
(bad)
int3
push
inc
push
cmp
add
daa
nop
add
xor
push
mov
shl
mov
add
sbb
popf
lods
dec
adc
js
aam
push
mul
mov
sub
and
xchg
and
sbb
aad
dec
sar
xor
adc
icebp
and
(bad)
outs
int
jno
xlat
outs
or
stos
cmps
int
fmul
inc
lods
pop
cmp
mov
pop
or
scas
or
dec
pop
sbb
fdiv
mov
push
es
ficomp
sub
pushf
fstp
popf
in
mov
push
retf
imul
pop
push
ds
mov
out
add
movs
inc
pop
jae
popa
inc
call
mov
push
inc
adc
mov
aaa
jge
inc
add
rol
in
sbb
xchg
xor
fmul
dec
xlat
mov
nop
(bad)
aad
mov
into
mov
(bad)
pop
add
mov
cmp
push
lock
ficomp
enter
ss
dec
cld
faddp
push
sbb
adc
mov
jmp
and
je
mov
jp
loop
add
sub
adc
push
loope
push
adc
ins
test
mov
aaa
or
cmp
lss
add
(bad)
(bad)
cmp
es
mov
addr16
dec
mov
cmps
mov
cmp
push
out
add
inc
sub
adc
popf
rol
mov
test
(bad)
in
and
jle
dec
pop
add
pusha
out
scas
mov
(bad)
jp
inc
(bad)
sbb
(bad)
loopne
ret
cmp
shl
pop
jmp
mov
loopne
dec
out
outs
out
sub
outs
outs
sbb
and
and
mov
add
jb
loopne
pop
out
pop
loop
mov
sub
sbb
out
enter
mov
cmp
jmp
lods
jmp
push
fcomp
fldpi
gs
scas
in
into
in
retf
sbb
test
xchg
or
add
mov
xchg
add
sbb
sbb
jmp
(bad)
adc
jle
cmp
push
in
pop
adc
dec
xor
sub
ja
sar
or
(bad)
ret
inc
repnz
push
fs
outs
pop
repz
hlt
call
mov
mov
out
push
sub
dec
push
dec
(bad)
out
mov
out
movs
test
xchg
mov
mov
mov
push
push
push
pop
push
shl
movlps
adc
xchg
out
sbb
in
shl
mov
jg
call
pop
hlt
or
mov
pop
fs
test
repz
lock
shr
test
jno
cmp
fwait
into
xor
push
outs
jmp
cs
fcom
and
nop
pop
out
in
mov
xlat
dec
pop
dec
ins
pop
pop
div
cmp
js
lds
(bad)
in
call
shl
push
daa
out
and
and
dec
div
ds
cmp
ins
cmp
or
aam
loopne
pop
in
add
movs
imul
inc
ja
clc
dec
xchg
leave
sub
adc
mov
sub
je
add
pop
xlat
cmp
jp
xchg
sub
js
icebp
stos
aas
or
push
ins
(bad)
imul
mov
pop
cwde
sbb
jbe
jmp
popa
scas
ja
cld
mov
test
sub
div
cli
push
push
adc
and
mov
sub
adc
xor
in
pushf
cmp
cs
mov
lods
push
das
fidivr
xor
shr
push
shl
xor
(bad)
out
mov
dec
aam
push
xor
sub
ficom
sar
jns
push
lods
fs
gs
or
xchg
int
mov
or
(bad)
les
cmp
mov
aam
add
jb
leave
mov
test
data16
push
sbb
pop
fptan
gs
cmp
xor
cmp
ins
pop
call
xor
xchg
or
fdiv
hlt
sub
popf
mov
out
cmp
add
popf
fimul
int
fsubr
ins
xchg
jb
in
fldcw
(bad)
out
pop
mov
push
(bad)
jge
jmp
das
bound
pusha
scas
inc
inc
sbb
mov
xchg
adc
dec
pop
sbb
jns
shr
and
mov
sbb
add
cmps
movs
push
jmp
stos
(bad)
mov
repnz
test
(bad)
fld
lods
shl
bound
std
add
pop
or
adc
or
sbb
add
xor
push
in
pusha
mov
(bad)
cs
jne
and
popf
mov
fcomp
xor
or
ret
xor
cmp
aad
push
test
cmp
out
cmp
in
out
xchg
inc
scas
mov
add
mov
push
inc
xor
rol
call
push
xchg
add
adc
inc
mov
add
mov
dec
out
adc
or
dec
mov
or
push
mov
xor
mov
mov
sbb
push
pop
dec
xor
add
pop
push
xchg
bound
add
add
pusha
inc
mov
loope
and
push
jb
ja
xor
cmp
pop
aam
cdq
pusha
data16
sub
ror
test
xor
cmp
scas
(bad)
test
or
pop
push
rol
jl
adc
neg
add
adc
cmps
frstpm(287
push
retf
lods
ror
cmp
ja
sub
add
xchg
cmp
mov
lahf
enter
call
mov
add
add
in
inc
adc
ss
add
out
add
test
add
inc
nop
jbe
addr16
and
adc
mov
fs
rcl
adc
gs
icebp
mov
ret
out
rol
push
out
int3
int3
pop
xor
popa
pop
lock
sbb
clc
xchg
add
jl
and
jo
cmp
stos
dec
lock
rol
adc
not
bound
mov
in
repz
adc
call
dec
mov
add
push
dec
repnz
mov
add
adc
mov
pop
addr16
pop
and
and
popa
movs
js
sbb
rol
adc
cwde
sub
pop
cmp
add
fld
push
pop
push
mov
cdq
mov
popf
dec
inc
in
cmp
adc
mov
frstor
cmp
sub
xor
mov
jp
push
dec
xor
leave
add
fisubr
in
inc
test
pop
inc
xor
mov
inc
push
xchg
test
dec
push
pcmpeqw
or
mov
add
and
xor
inc
ss
rol
cmc
xchg
fidiv
xchg
xor
pop
mov
pop
sub
or
jno
pop
cld
dec
mov
xor
fidiv
(bad)
pop
stos
test
or
add
mov
int3
xchg
add
push
sub
jnp
pop
xor
xor
and
mov
lds
inc
loopne
push
and
inc
das
xchg
mov
(bad)
les
xor
test
or
in
cmp
cmp
push
out
sbb
cli
xchg
mov
(bad)
enter
fsub
sahf
xor
adc
cmp
dec
adc
xchg
ret
call
sbb
outs
inc
int3
rcl
sbb
in
and
call
pop
sub
push
or
cld
inc
adc
xor
lds
adc
jns
aam
xchg
rcl
push
xor
push
dec
dec
push
dec
xor
push
sbb
ds
les
retf
jae
mov
sbb
push
ret
xor
fwait
sahf
and
popa
test
or
inc
ja
ins
xor
fmul
je
xchg
jp
mov
jno
retf
popa
or
les
fisub
(bad)
sbb
in
leave
push
pushf
inc
inc
sbb
mov
mov
inc
stc
scas
push
shr
out
pop
lahf
fwait
(bad)
and
or
mov
mov
call
icebp
in
xchg
ins
mov
cmp
cwde
mov
ficom
ror
(bad)
adc
aad
push
icebp
cmp
xchg
mov
mov
sbb
xor
scas
mov
and
fmul
dec
loop
dec
cmp
inc
lahf
aam
sbb
scas
lock
call
and
mov
inc
inc
adc
mov
test
jae
pop
jno
pop
and
sub
sub
sub
cmps
add
push
je
inc
fs
add
data16
int
pop
or
xchg
(bad)
jnp
rol
jecxz
pop
push
adc
add
mov
push
sar
or
leave
mov
or
pop
data16
popa
popa
int
sub
adc
mov
fst
sub
fist
push
push
mov
mov
pop
xor
or
add
xchg
or
add
out
ja
push
(bad)
aaa
mov
adc
das
mov
push
jns
lods
mov
push
jge
mov
xchg
repz
je
xchg
int
loope
adc
sub
mov
xor
push
sub
into
mov
sub
and
or
sbb
js
adc
inc
mov
pop
mov
cld
xchg
out
aad
(bad)
ds
add
pop
ret
dec
jnp
fsub
lods
push
call
cmp
xchg
push
ja
cli
sbb
xchg
sub
add
cmps
mov
cdq
sahf
aad
dec
bound
loope
imul
cdq
or
pop
jecxz
mov
xchg
mov
add
add
sar
mov
mov
sub
sbb
in
clc
mov
and
xchg
jmp
imul
jl
jge
sub
xor
pop
dec
gs
mul
in
ret
mov
cmp
and
xchg
dec
(bad)
nop
mov
mov
cmp
jo
and
ror
jmp
into
xchg
or
aad
pop
rol
sbb
adc
mov
ja
xlat
mov
mov
out
mov
mov
add
inc
cld
add
jecxz
mov
in
dec
jno
mov
(bad)
cmp
retf
movs
push
mov
aas
add
xor
dec
jmp
lock
addr16
shl
ds
and
jge
or
sbb
adc
ret
outs
cmps
sbb
push
jecxz
fs
mov
pop
cmp
shl
jbe
jo
sbb
push
inc
mov
and
xor
or
popf
daa
pop
out
arpl
(bad)
clc
les
inc
fsubr
jp
jle
push
adc
daa
cwde
out
dec
sbb
aas
sub
or
add
sar
lock
pusha
std
or
shl
xor
mov
or
xlat
aam
push
push
stc
pushf
repnz
loop
ret
fisttp
add
(bad)
scas
dec
shl
cmp
sbb
adc
(bad)
js
aaa
mov
loop
jle
jecxz
fcomi
call
cmp
les
repz
ret
and
mov
cmp
inc
sbb
xlat
jae
sbb
mov
sub
stc
adc
dec
mov
pop
add
cmp
mov
add
pop
nop
add
mov
test
sub
and
test
push
cwde
call
dec
sar
jno
sbb
and
sbb
mov
jbe
aas
and
mov
sub
mov
adc
pop
jo
dec
lock
cmp
mov
cdq
push
test
add
cwde
mov
xor
mov
mov
or
call
test
ds
cmp
add
lods
cmp
sub
or
jl
in
and
or
stos
dec
sahf
inc
pop
sahf
sbb
xor
xchg
xor
sub
ret
xor
sub
js
and
sbb
cmp
or
inc
xlat
rol
inc
add
adc
add
add
das
add
cmp
add
rol
dec
mov
push
jmp
sub
sbb
add
mov
inc
or
stos
call
inc
mov
(bad)
sbb
stos
inc
jbe
or
jae
pop
adc
xor
and
cmp
add
jl
sbb
inc
inc
add
lds
inc
sub
add
pop
pushf
cmp
loopne
int3
popa
test
lea
mov
daa
mov
push
push
sbb
rcr
jbe
pop
ins
add
add
mov
cdq
arpl
test
stos
inc
or
fmul
popf
cmp
push
je
push
dec
mov
adc
mov
xor
add
sub
daa
loopne
jl
add
pusha
dec
and
and
cmovne
enter
or
or
adc
add
mov
sbb
mov
add
popa
add
fcomp
nop
retf
nop
push
mov
push
(bad)
nop
movs
jns
mov
cmp
jmp
jp
pop
xchg
les
push
dec
call
xor
push
nop
push
mov
(bad)
lock
sahf
fmul
xor
push
je
retf
mov
fs
daa
jo
test
retf
sbb
jns
sbb
add
mov
push
lock
inc
or
dec
fidivr
adc
sbb
push
push
add
sbb
mov
sahf
mov
(bad)
xchg
aas
aam
pusha
jl
push
pusha
mov
or
ins
rol
test
and
test
and
sbb
pushf
jl
push
and
int
dec
sahf
sub
pop
or
or
mov
aaa
or
stos
cmp
inc
aam
dec
inc
clc
dec
inc
pusha
dec
mov
add
(bad)
fcmovne
dec
push
test
fcomp
cdq
popf
hlt
test
dec
jo
bound
icebp
adc
call
fisubr
ret
pushf
sub
sub
or
and
repz
add
push
cmp
aas
(bad)
stos
sbb
dec
div
imul
or
(bad)
sub
mov
hlt
cmp
dec
dec
cmp
add
nop
dec
add
pop
js
sub
add
xchg
psubusb
sub
mov
fucomp
int
cmp
test
rol
mov
add
call
mov
xchg
push
jp
xchg
aam
sbb
inc
popf
add
pusha
mov
cwde
add
add
xchg
adc
xor
mul
mov
push
jmp
and
int3
mov
std
aam
push
cmp
call
xor
not
shl
or
mov
lds
add
je
mov
bound
fst
shr
into
dec
and
add
mov
inc
popf
add
add
or
retf
push
icebp
and
dec
gs
dec
sbb
movs
pop
jae
or
ror
mov
rcl
cmp
test
aad
push
aad
adc
daa
fcom
mov
add
adc
int
add
aad
xor
push
cwde
and
cmp
pop
jmp
dec
jmp
aad
jae
push
addr16
in
mov
inc
inc
add
add
test
adc
cmp
sbb
pop
test
loope
shl
lahf
sbb
ja
leave
retf
ret
sbb
xchg
push
movs
lods
push
push
lods
add
pop
loope
mov
adc
add
and
das
xor
test
pop
bound
je
cmp
mov
pop
pop
pop
pop
clc
add
movs
cmp
xor
add
pop
int3
inc
adc
add
and
dec
popf
pop
(bad)
mov
ret
jb
mov
sbb
jl
cmps
adc
pop
adc
cmp
rcl
dec
js
adc
rol
xor
fdiv
fisttp
cmp
xor
ficomp
push
xchg
adc
add
sbb
rol
adc
arpl
push
pop
jns
xor
fld
push
xchg
mov
sub
mov
ins
fst
and
dec
and
jno
fistp
(bad)
push
pop
enter
add
or
dec
dec
add
aad
cli
lods
add
pusha
pop
adc
push
inc
jno
sbb
push
mov
add
test
mov
lds
cmp
or
pusha
pop
fsub
test
ins
add
mov
adc
sub
adc
adc
aam
jge
dec
int
dec
cmp
in
pop
sbb
cmp
lods
pop
sbb
add
xchg
sub
ret
and
fild
popa
icebp
mov
pop
nop
add
aad
sub
pop
cmps
lds
rol
add
xchg
and
sub
pop
pop
ins
(bad)
and
inc
or
and
test
into
loopne
add
pusha
test
pop
mov
test
popa
mov
pop
sub
in
mov
sbb
push
pop
dec
adc
mov
push
into
in
frstor
mov
push
in
dec
add
cs
push
test
push
pop
gs
outs
mov
mov
push
inc
push
fs
pop
test
sub
test
shl
bound
ss
push
mov
adc
jecxz
sbb
xor
test
sub
add
add
(bad)
loopne
fadd
adc
popa
mov
fiadd
add
in
cmp
scas
pop
and
lock
push
(bad)
fs
fcomp
popa
(bad)
(bad)
dec
test
push
dec
push
push
add
jle
inc
or
dec
add
enter
in
or
sub
xchg
sub
mov
xor
mov
pop
addr16
add
sbb
out
cmp
adc
or
gs
push
outs
(bad)
data16
push
pop
mov
dec
popa
jne
fiadd
xor
inc
pop
push
push
mov
add
jl
push
into
push
fsubrp
stos
push
call
ss
mov
push
test
mov
dec
test
fistp
add
push
xchg
arpl
adc
ins
out
jl
adc
push
cmp
imul
inc
xor
sub
popa
inc
dec
adc
pop
fwait
shl
mov
cmp
pop
out
test
push
mov
outs
ins
xlat
push
in
aam
in
fisub
push
jmp
test
inc
test
retf
test
sbb
add
pop
out
sub
cmp
push
stos
inc
sbb
xchg
inc
pop
xchg
cmps
out
enter
jecxz
enter
jmp
out
inc
cwde
in
retf
out
jmp
pop
dec
aam
movs
adc
and
adc
repnz
sar
add
jo
das
jo
aas
jo
aaa
lock
sbb
scas
ins
fld
gs
add
sahf
jo
scas
push
dec
dec
mov
in
xchg
test
outs
sub
pushf
daa
add
and
sub
add
fiadd
rcl
in
dec
data16
outs
push
out
mul
ins
fadd
outs
push
xchg
xchg
ins
outs
mov
inc
clc
ds
add
push
push
cwde
push
inc
push
xor
cmp
or
rol
push
psllq
pop
push
push
mov
mov
ins
or
in
mov
int3
inc
pusha
retf
in
test
nop
nop
push
icebp
ret
xor
xor
pop
mov
aad
(bad)
jno
lea
push
scas
push
add
clc
test
xchg
push
out
jmp
call
imul
and
retf
adc
cmp
sbb
sbb
mov
mov
les
xchg
xchg
jne
jg
sub
popa
push
ss
jae
push
repz
push
lahf
push
cmp
out
pushf
sub
jno
inc
jno
add
xchg
jle
inc
out
push
movs
jmp
pusha
hlt
ins
or
sahf
je
adc
dec
pop
jmp
sub
hlt
jb
adc
cmp
or
cmc
shr
xor
test
mov
pop
xlat
repnz
test
pop
das
push
mov
fld
jbe
enter
test
js
sub
pop
js
push
imul
fnstsw
test
sbb
shl
sbb
push
div
ja
cwde
je
cmp
dec
pop
bnd
mul
xchg
xor
loope
loopne
pop
enter
add
sub
adc
xor
test
jb
inc
js
(bad)
lods
jg
sbb
jae
lahf
clc
pusha
scas
push
and
inc
test
js
(bad)
clc
rcr
xor
add
mov
add
mov
add
call
out
push
ins
cs
test
jmp
or
pop
add
ja
xor
pop
js
mov
aad
mov
ja
mov
clc
mov
jnp
ja
dec
and
cmps
sbb
mov
jnp
mov
cmp
xchg
xchg
dec
cmp
add
jae
test
xchg
(bad)
pop
mov
pop
add
xor
ret
out
pusha
orps
outs
sub
pusha
xchg
jns
das
push
inc
mov
(bad)
mov
inc
and
inc
xchg
out
xor
outs
mov
mov
mov
pop
jmp
add
xor
call
xor
dec
rcl
(bad)
mov
aaa
jb
call
movs
dec
test
adc
push
or
dec
cwde
pop
data16
jno
test
add
cmps
or
or
add
adc
inc
push
add
push
add
and
and
add
add
imul
ins
mov
dec
cdq
mov
jb
jns
data16
xchg
mov
sub
rol
leave
dec
sub
and
pop
adc
dec
adc
ret
fwait
inc
xchg
jmp
mov
push
cdq
push
pop
ins
or
lahf
and
mov
retf
pop
push
mov
addr16
ds
aaa
outs
mov
sbb
and
xchg
xor
xor
jae
pop
sbb
add
adc
xchg
mov
imul
ss
xor
retf
sbb
adc
sbb
mov
push
pop
xor
sbb
ds
les
adc
xchg
adc
mov
mov
or
outs
mov
cmp
push
test
add
add
cmc
rcl
jne
frstor
push
in
dec
xor
xchg
int
ret
mov
mov
pop
xor
jle
stc
push
push
popa
fwait
les
popa
pushf
rol
retf
bound
shl
and
sbb
inc
xor
addr16
test
add
mov
mov
inc
shr
adc
push
ror
push
xchg
jmp
pop
push
push
test
add
add
add
add
xchg
dec
sbb
movs
pop
loop
sub
jl
xchg
pop
jg
add
add
jbe
sub
pop
and
sbb
dec
test
in
sub
sub
mov
stos
xor
sub
adc
jo
test
ret
test
stos
fs
sub
dec
jns
fisubr
jns
inc
sbb
lahf
lods
repz
dec
and
add
add
xor
pop
xor
pusha
test
enter
les
stos
mov
cmps
pop
pop
sub
ins
mov
ins
(bad)
nop
test
pushf
xchg
fwait
push
in
mul
and
and
mov
outs
cmps
into
jno
add
cmp
popa
movs
adc
or
sar
add
inc
cmp
or
xchg
cmc
or
fnstsw
pop
imul
cwde
pop
pop
and
imul
pushf
imul
add
xchg
or
pop
ds
sbb
sub
cmps
xor
mov
int3
mov
xor
fdivr
xor
and
mov
jge
sbb
mov
movs
jne
mov
add
lods
pusha
test
cmp
pop
push
pop
movs
xchg
push
adc
jo
out
ds
cmp
in
mov
cmp
stos
jge
(bad)
lods
popf
sub
jl
out
(bad)
std
cld
repz
jae
and
pop
and
mov
inc
addr16
cmp
cmp
loope
mov
sbb
ds
jmp
stos
xor
out
adc
pop
je
sar
scas
and
add
sbb
xor
push
push
ret
adc
neg
pop
add
xor
jmp
inc
mov
fwait
dec
push
pop
int3
add
pop
nop
adc
fild
mov
or
add
ror
adc
xchg
(bad)
or
cdq
dec
push
call
test
not
pushf
adc
(bad)
or
bound
add
inc
aad
jl
scas
out
and
pop
inc
call
cdq
lds
aam
inc
xor
outs
adc
and
or
or
inc
test
push
add
pop
mov
push
add
pop
jbe
sbb
sti
and
sbb
and
inc
xchg
pop
and
xor
adc
sub
sub
in
mov
push
push
and
push
inc
inc
sub
add
push
adc
inc
mov
and
call
cmp
fiadd
popa
cs
(bad)
cmp
mov
rcr
add
cli
mov
or
push
movs
int3
sbb
push
pop
and
inc
xchg
in
or
ins
shl
or
push
inc
xchg
push
(bad)
leave
sub
call
and
jge
pop
inc
ins
xchg
pop
jp
xchg
daa
pop
nop
(bad)
inc
dec
test
dec
js
repz
push
scas
mov
push
clc
fld
jne
outs
add
das
adc
(bad)
dec
cmp
mov
adc
sub
inc
or
xchg
mov
jecxz
dec
dec
adc
data16
push
and
xchg
adc
pushf
mov
je
arpl
adc
add
add
jnp
push
call
lods
test
cmp
cmp
test
push
mov
repnz
lahf
shr
das
or
lds
push
mov
or
pusha
inc
inc
adc
mov
mov
call
cmp
shr
xchg
add
sti
sub
sbb
stos
sub
xchg
sub
shl
stos
clc
adc
adc
pop
add
pop
int
adc
adc
sbb
stos
pop
dec
jecxz
(bad)
popa
inc
adc
pushf
mov
pop
ins
sahf
dec
movs
xchg
push
add
cmp
outs
js
mov
pop
jno
and
inc
dec
out
cmp
mov
mov
mov
add
js
jp
stos
ss
mov
addr16
retf
aad
push
inc
mov
mov
sub
and
or
ins
shr
int3
inc
mov
fld
push
enter
mov
mov
ins
cmp
fldlg2
push
and
cmp
sub
or
add
jnp
or
mov
jae
push
cmps
jb
push
test
add
push
mov
mov
ret
dec
pushf
gs
mov
jl
fmul
mov
push
push
sub
mov
cdq
and
pop
inc
in
mov
or
retf
pop
sub
sbb
xlat
ror
lock
push
jl
or
mov
and
mov
cmps
cli
or
inc
mov
pop
popf
xor
cmps
pop
(bad)
bound
mov
shl
(bad)
mov
xchg
push
ret
or
jle
ins
in
mov
xor
ins
pop
sub
cdq
push
mov
pop
push
jno
adc
div
into
out
xchg
pop
pop
jno
enter
sub
push
ss
es
and
in
sub
aam
sub
sub
jl
lock
mov
ret
fcomip
add
jb
lea
pop
(bad)
sub
inc
fisubr
pop
shl
pop
mov
pop
ins
sbb
push
arpl
stos
sahf
lea
cs
push
sub
(bad)
out
inc
and
lods
add
adc
outs
jo
mov
retf
pusha
adc
mov
jmp
add
jbe
xchg
stos
icebp
ins
sub
ficomp
lods
mov
inc
mov
ret
pop
pop
aam
mov
pop
in
outs
xor
mov
mov
and
or
ins
aam
cmps
test
pop
ret
mov
xchg
popw
adc
dec
test
dec
sbb
sahf
and
sbb
push
das
pop
and
xor
(bad)
push
stc
lods
dec
scas
xchg
cli
push
jbe
clc
mov
sar
ret
adc
or
imul
fild
sbb
and
cmps
or
sbb
nop
test
enter
call
xor
jg
mov
pop
sub
loope
cmp
outs
gs
lahf
sbb
mov
rol
mov
jnp
pop
and
or
rol
out
jg
xor
sbb
scas
aaa
dec
push
inc
or
pop
sbb
push
hlt
cdq
push
mov
cmp
pop
push
push
inc
pop
inc
in
cmps
mov
iret
push
xchg
mov
cmp
xchg
je
div
in
pop
cmps
or
inc
pop
mov
add
push
clc
sub
hlt
popf
add
(bad)
sbb
sbb
or
and
icebp
sbb
adc
inc
cmp
rol
or
xchg
cmc
pop
sahf
ret
popf
push
add
sbb
inc
push
cwde
test
icebp
test
(bad)
mov
movs
stc
(bad)
push
enter
adc
ror
pusha
fist
or
sbb
and
cmp
das
cmp
lds
adc
xchg
dec
in
inc
and
cwde
dec
jge
out
pop
sbb
add
into
mov
or
or
ret
sub
inc
fcomi
sbb
and
fisub
mov
sub
adc
ror
inc
or
adc
pop
into
add
pushf
ret
and
cmp
adc
(bad)
adc
enter
add
popf
or
sbb
mov
es
mov
xchg
mov
push
inc
add
hlt
rol
add
xor
lods
pusha
(bad)
jmp
jmp
adc
inc
inc
adc
or
sub
stc
pusha
bound
jle
es
arpl
test
pop
loop
dec
sub
imul
push
inc
sub
push
xlat
cmc
push
xchg
fs
fsubr
jmp
xor
add
push
fadd
cmps
push
xor
arpl
inc
int
out
andps
sub
add
and
mov
pushf
mov
dec
xor
xor
jle
add
mov
xchg
in
mov
mov
mov
xor
mov
jecxz
pop
fwait
xchg
cwde
pushf
scas
in
aas
or
jnp
and
fld
sbb
or
add
mov
inc
fstp
pop
popf
cmp
or
cmp
push
movs
mov
shl
xor
inc
inc
jp
xor
xor
and
add
mov
ss
lods
movs
ds
xchg
add
add
dec
(bad)
mov
clc
inc
xchg
adc
les
mov
add
fcom
sub
and
xor
and
fisttp
pop
inc
dec
jecxz
mov
and
cwde
xor
in
add
gs
and
push
lea
sub
mov
dec
popf
popa
popf
clc
test
pop
xlat
stos
shl
or
or
(bad)
or
clc
add
inc
mov
loope
mov
(bad)
in
lahf
mov
test
or
mov
call
push
pop
mov
addr16
cmps
addr16
and
fld
imul
adc
cdq
gs
aam
and
mov
fwait
push
add
int3
ror
sbb
jb
mov
add
fisub
test
jmp
sub
pshufw
push
and
stc
(bad)
inc
cld
rcr
dec
sbb
inc
jns
shr
pushf
inc
inc
lods
mov
push
xchg
inc
rcr
ret
add
mov
cs
cs
mov
sahf
adc
int3
nop
push
add
dec
outs
push
test
jno
or
je
or
xor
xchg
dec
xor
call
call
jge
sar
adc
mov
xchg
movs
mov
mov
xor
loope
call
push
pop
call
mov
mov
inc
daa
xor
mov
add
pusha
and
xchg
cmps
or
sbb
daa
fwait
ror
adc
add
test
pop
and
xchg
bound
inc
add
in
adc
add
movs
mov
call
retf
and
adc
and
icebp
inc
popf
out
pop
xor
or
sbb
ins
daa
leave
add
xchg
mov
int3
mov
and
je
xchg
ja
inc
and
pop
add
loope
test
sbb
js
and
and
das
jo
jnp
sub
sbb
(bad)
or
mov
test
jo
or
jp
push
int3
rcl
adc
add
inc
and
jmp
mov
nop
cmp
xchg
and
mov
xchg
inc
xor
jp
mov
out
jo
mov
imul
data16
inc
sbb
mov
push
adc
in
test
push
add
pusha
add
inc
add
xchg
pop
shl
inc
mov
sub
xchg
jle
dec
nop
stos
sbb
retf
lods
or
adc
pop
or
retf
or
adc
and
add
inc
and
ins
and
sbb
push
pop
add
mov
imul
retf
mov
push
mov
inc
xor
inc
inc
sub
jmp
sub
sbb
sub
push
xor
ins
mov
data16
in
mov
jmp
sbb
(bad)
push
hlt
ficom
dec
inc
das
hlt
stos
and
lods
xchg
cmps
sbb
stos
fnstcw
inc
pop
push
xchg
pop
jmp
sbb
pusha
add
and
push
and
stos
mov
fucomp
ins
and
and
cdq
or
inc
sub
ret
loope
ret
mov
sub
sub
fidiv
outs
jecxz
loope
fadd
xchg
mov
sub
inc
add
inc
pop
ins
adc
(bad)
sbb
mov
mov
dec
mov
into
mov
ins
and
lods
ror
adc
sbb
inc
add
dec
lds
sbb
lods
shr
ins
lock
icebp
xchg
cmp
cdq
add
lock
xor
out
add
or
mov
jno
or
in
fidiv
sbb
fcomp
xor
jl
fcmove
mov
jl
sbb
stos
add
test
je
jecxz
scas
int3
out
outs
(bad)
xchg
add
or
add
mov
nop
test
dec
add
pop
mov
ins
in
adc
arpl
push
sub
push
pop
jnp
arpl
ret
mov
or
outs
lock
fcomp
scas
fmul
lock
sahf
or
daa
fcmovnu
mov
adc
or
sbb
add
in
add
adc
out
adc
adc
add
into
mov
push
ret
push
mov
pop
js
push
(bad)
adc
mov
pushf
xchg
(bad)
mov
out
jo
ja
sbb
test
call
inc
adc
fs
sub
and
inc
pop
mov
and
pop
add
inc
repnz
icebp
bound
jge
add
mov
sbb
and
and
inc
mov
xor
mov
inc
xor
fs
dec
add
repnz
push
ret
adc
mov
pop
cs
rol
dec
loope
adc
sbb
inc
popa
mov
fidiv
dec
bswap
mov
dec
adc
sbb
rol
test
lods
mov
inc
dec
inc
into
pop
test
sub
or
sub
or
inc
seto
lods
add
ret
add
(bad)
add
scas
add
and
cmp
jmp
stos
sbb
out
inc
(bad)
xor
add
mov
fs
add
add
and
and
push
je
ror
jb
xor
mov
mov
call
xor
sub
xor
je
xchg
icebp
popf
adc
loop
test
retf
xor
push
inc
leave
mov
lahf
or
dec
rcl
mov
stos
daa
and
sbb
stos
inc
adc
mov
sbb
je
inc
jbe
inc
or
shl
test
dec
fdiv
jno
pop
lahf
jo
f2xm1
mov
jb
dec
rcl
icebp
pop
(bad)
jne
and
daa
sbb
js
ret
inc
test
xor
mov
mov
mov
pop
bound
jbe
fwait
or
inc
ret
jb
mov
aam
sub
jne
mul
into
dec
repz
mov
jno
adc
mov
iret
push
(bad)
dec
jnp
push
retf
mov
add
sbb
add
es
add
inc
inc
enter
mov
sub
sbb
out
adc
jo
fdivr
test
push
cmp
aas
aaa
gs
mov
mov
rcr
adc
pop
out
inc
add
and
cmc
pop
xchg
dec
jno
mov
xchg
das
xchg
nop
in
enter
rol
xor
mov
or
mov
imul
sbb
or
std
mov
jb
adc
cmp
pushf
fs
loope
fadd
(bad)
mov
ror
in
ss
xchg
ret
sub
ret
and
mov
sbb
retf
and
clc
xor
aas
dec
add
pusha
xchg
dec
stos
sbb
inc
pop
arpl
nop
(bad)
js
jmp
adc
xor
cmp
cmp
mov
ror
pop
stc
jnp
repz
fs
xor
mov
mov
mov
inc
jle
adc
mov
or
bound
or
add
cmp
gs
dec
popf
add
mov
aam
in
out
in
xchg
out
mov
mov
addr16
out
call
out
mov
stos
cwde
inc
movs
sbb
mov
inc
movs
mov
pop
mov
add
xor
test
mov
push
not
jp
and
push
in
adc
add
cmp
sbb
or
sub
fstp
or
xchg
mov
xor
popa
add
sub
pop
sar
sbb
sbb
sbb
sub
mov
into
inc
mov
outs
fdecstp
mov
cmps
outs
cdq
jmp
adc
mov
inc
pop
pop
aaa
leave
fdivr
movs
out
shl
unpckhps
xchg
and
adc
inc
ret
ret
push
sbb
adc
push
cmp
sub
cmc
xor
arpl
jl
idiv
dec
stc
pusha
(bad)
and
jne
mov
mov
push
add
xchg
mov
jl
(bad)
mov
dec
push
add
imul
int
sti
sub
xor
mov
add
dec
jge
mov
and
add
pop
dec
pop
pop
fiadd
pop
dec
mov
test
ret
(bad)
js
mov
sbb
les
lods
jg
jns
jl
idiv
fcmovnb
enter
daa
mov
push
or
jle
adc
xor
push
pop
inc
push
inc
push
ja
inc
sbb
call
(bad)
jg
mov
les
dec
in
aam
push
add
sub
test
dec
mov
cmps
setge
jl
xchg
je
dec
dec
xchg
and
adc
movs
inc
(bad)
adc
sub
mov
icebp
xchg
or
pop
dec
push
out
popf
bound
sub
xchg
and
push
dec
xchg
in
shl
xor
into
mov
sbb
xor
xchg
push
pop
mov
dec
mov
mov
imul
mov
ret
sar
pop
sub
push
(bad)
outs
loopne
xor
inc
or
inc
sbb
cmps
dec
adc
xchg
and
add
out
and
je
pushf
cmc
sbb
cdq
xor
jge
jne
aad
dec
cmp
je
test
(bad)
mov
out
ins
movs
aaa
mov
sub
pop
add
xchg
movs
leave
sub
popf
mov
leave
fmul
call
retf
adc
xchg
push
adc
shl
mov
enter
fcom
call
mov
pop
ins
fcomi
addr16
int3
xchg
dec
repnz
shr
test
sbb
xor
shr
arpl
xchg
fld
mov
cmp
lea
mov
and
sbb
call
cmp
mov
test
mov
or
xchg
push
cmp
add
dec
jmp
lock
mov
lods
dec
push
sbb
cmp
scas
retf
stc
call
cmp
sub
mov
cs
xor
rol
ret
push
push
das
cwde
and
or
arpl
adc
inc
adc
les
mov
and
and
and
and
add
repz
rol
and
lea
mov
arpl
or
xchg
aam
adc
stc
adc
adc
jmp
and
or
or
cmp
sbb
push
movs
ds
std
ins
add
sbb
add
sub
dec
rol
dec
ds
push
pop
popa
pop
and
lods
mov
or
int3
dec
sar
inc
sbb
jo
dec
dec
mov
loope
add
or
add
adc
adc
pop
dec
loop
push
ret
loopne
push
dec
loopne
adc
ret
pop
push
shl
xlat
xchg
add
pop
dec
movs
xchg
cwde
sbb
out
dec
cmps
lods
aam
test
and
mov
lods
push
mov
fldenv
std
loopne
sbb
cmp
fst
push
es
mov
rol
test
jg
stc
and
test
or
loope
dec
fwait
or
sub
add
mov
xor
add
nop
mov
cmp
movs
xchg
jns
xchg
xchg
xchg
jae
pop
xchg
push
pop
or
mov
pop
rol
push
adc
push
sub
mov
ss
imul
mov
sbb
ret
loopne
test
loop
jnp
add
fisttp
mov
js
mov
cmp
ins
psraw
mov
lea
xor
mov
mov
shr
pop
int3
loop
cmp
sub
out
jae
gs
pop
mov
cs
inc
dec
ins
outs
or
jp
cmp
add
shr
mov
sbb
push
xchg
shl
pop
shl
test
adc
cmp
fwait
jbe
lods
stos
lods
sub
cmp
icebp
clc
xchg
and
retf
jae
or
sub
out
or
mov
mov
or
pop
into
xchg
icebp
adc
punpckhwd
adc
inc
add
shl
mov
into
sub
cmp
jno
adc
mov
loopne
push
add
push
push
push
adc
js
sbb
or
adc
mov
sbb
cmp
jmp
mov
test
not
ffreep
iret
mov
cmp
adc
pop
(bad)
mov
ss
or
sbb
adc
or
int3
popa
adc
enter
bound
add
jle
xchg
add
or
pop
adc
inc
ror
add
and
ret
stc
xchg
daa
sub
push
xchg
sub
leave
dec
inc
pop
aam
cmp
add
xor
ror
mov
sbb
cmp
xor
xchg
pop
dec
xor
push
jl
and
gs
aam
inc
scas
pop
vfmsub132ss
in
dec
stc
pop
loop
ror
push
and
push
scas
pusha
add
mov
inc
or
xchg
mov
pop
mov
test
rol
add
pop
inc
test
adc
jbe
inc
ror
stos
mov
xor
fucomi
cmps
or
add
rol
xchg
push
in
inc
dec
sbb
jae
pop
cmps
call
add
push
or
popf
cmp
add
les
(bad)
and
jo
jg
xor
or
and
mov
pop
jb
daa
pop
cld
cmc
scas
lahf
or
pop
or
xchg
shr
test
add
nop
cmp
movs
mov
inc
or
pop
inc
sqrtps
imul
fs
mov
adc
icebp
jge
jmp
jbe
add
xor
dec
lods
inc
adc
lahf
mov
fcmovnbe
jno
lods
nop
add
stos
xor
loope
push
mov
xor
add
add
sbb
loopne
dec
jl
xchg
inc
and
jmp
adc
outs
je
mov
xchg
push
(bad)
into
retf
inc
or
cdq
arpl
mov
enter
xchg
mov
ficom
push
iret
jl
jnp
cmp
movs
loop
sbb
test
jmp
sbb
bound
push
xor
stos
fdivr
(bad)
rep
rcr
mov
es
add
sub
or
loop
jecxz
cmps
xor
test
xchg
mov
out
and
test
inc
dec
jno
in
data16
dec
pop
inc
adc
nop
pop
aas
adc
or
mov
int
arpl
imul
rcr
repz
add
or
fstp
push
fadd
push
mov
and
sahf
inc
push
xchg
bound
xor
mov
cmp
adc
addr16
rol
dec
xor
xor
les
jmp
and
sub
mov
fdiv
stos
pop
scas
inc
(bad)
xchg
mov
push
cmp
ffree
stos
jne
sbb
inc
and
inc
out
pusha
push
mov
inc
ja
shl
adc
mov
repnz
pop
pop
pop
or
mul
sub
and
push
xor
int3
push
jl
pop
mov
aas
mov
xor
sbb
and
inc
inc
or
and
(bad)
and
adc
push
inc
jge
movs
inc
sub
push
mov
mov
data16
xchg
stos
mov
(bad)
dec
sbb
and
mov
mov
push
inc
adc
push
repnz
fs
pushf
jl
cmps
fcom
xlat
add
fwait
push
retf
mov
mov
outs
inc
pop
fcmovbe
mov
xor
(bad)
pop
imul
push
push
mul
sbb
lds
add
or
push
sbb
aam
popa
mov
adc
shr
out
ficom
fidiv
test
jbe
(bad)
mul
pop
mov
ss
cmp
mov
mov
add
out
aad
xchg
and
test
in
lea
or
leave
jns
cmp
cdq
mov
mov
xchg
ins
pop
popa
or
retf
mov
pcmpgtd
and
or
fisttp
movs
mov
jp
outs
xchg
movs
jmp
cs
mov
fdivp
pop
jmp
aaa
aad
cld
pop
xor
aad
lds
cmps
test
mov
jmp
xchg
shl
pop
inc
mov
dec
enter
dec
stos
add
pusha
call
jmp
pop
adc
adc
sar
cmp
in
or
adc
mov
movs
lea
mov
les
aam
sub
out
mov
and
inc
adc
pusha
or
loopne
pusha
dec
int
sub
call
imul
daa
out
xor
and
dec
pop
les
addr16
or
mov
xchg
inc
or
and
cli
data16
js
bound
arpl
in
cwde
wbinvd
xchg
nop
push
pusha
mov
and
jo
inc
adc
int
ss
pop
(bad)
cld
ror
out
es
or
dec
add
je
in
cmp
pusha
(bad)
sub
lods
and
xchg
lods
mov
push
scas
(bad)
movs
sbb
sbb
jo
fucomip
sub
popa
sbb
jno
outs
add
mov
scas
loope
jbe
int3
xor
sbb
es
add
addr16
movs
xor
call
ins
fadd
and
push
mov
dec
mov
and
jb
or
(bad)
adc
push
push
lds
inc
mov
and
pop
movs
mov
bswap
or
add
xor
mov
std
fisubr
push
jnp
push
jbe
stos
fsubr
or
mov
add
lds
lds
sbb
adc
rcl
repz
adc
shl
add
mov
sub
adc
add
loopne
jl
adc
adc
ror
int
je
(bad)
push
adc
adc
and
pop
data16
fisttp
pop
mov
ret
data16
gs
push
stos
(bad)
arpl
ret
in
movs
popa
pop
mov
rcr
adc
test
pop
cmps
adc
sub
nop
and
(bad)
adc
add
loopne
adc
outs
adc
inc
dec
push
add
mov
and
xchg
sbb
icebp
sbb
rcr
adc
sbb
outs
sub
stos
dec
sub
out
ins
sbb
xchg
adc
ins
add
movs
add
retf
call
test
out
(bad)
pushf
dec
pop
dec
shr
add
cmps
retf
mov
jecxz
and
les
adc
nop
and
inc
repnz
adc
dec
and
pusha
add
or
add
push
repz
sbb
adc
dec
sbb
sub
xchg
(bad)
rcr
add
fwait
loope
cwde
ror
sub
mov
popa
ja
adc
js
pop
sbb
add
lds
call
call
les
mov
popf
or
ficom
or
cs
in
cmp
in
mov
add
jo
jnp
adc
outs
das
xlat
mov
xor
pop
inc
adc
push
push
sbb
xor
or
push
push
sahf
add
es
es
add
mov
sub
retf
mov
sbb
push
sub
jo
adc
adc
jno
int
dec
(bad)
sub
add
push
scas
add
stos
add
sbb
or
loopne
popf
and
jp
xchg
loop
adc
cmp
or
inc
je
(bad)
jnp
inc
dec
aam
jae
add
out
stc
xchg
xchg
jo
sar
jecxz
mov
mov
adc
xor
adc
cmp
stos
push
loope
mov
aad
sub
pusha
lea
dec
add
gs
pop
das
loopne
jp
xor
xor
sbb
xor
push
jg
add
hlt
adc
inc
mov
sbb
ret
inc
add
add
js
dec
jns
cmp
lock
sti
aam
addr16
inc
pop
xor
xchg
das
inc
or
pop
or
test
call
xor
addr16
cmp
add
lock
bound
pusha
dec
or
cmp
mov
fist
add
xor
in
cs
inc
sub
xor
jb
inc
xchg
inc
loope
sbb
je
add
pop
xor
and
add
add
add
adc
jmp
in
jmp
sub
cwde
repz
or
pop
imul
rol
inc
sbb
push
ror
mov
push
xor
sti
sbb
jno
inc
inc
mov
push
push
jecxz
(bad)
es
mov
dec
inc
add
lea
lea
dec
popa
pop
mov
sbb
movzx
ror
loope
inc
xlat
inc
dec
add
adc
inc
popa
and
mov
cdq
xchg
inc
add
pop
stos
aad
scas
mov
aam
or
shr
pop
popa
imul
mov
sbb
adc
cmc
loopne
jne
inc
inc
pop
out
or
add
in
cmc
push
aad
xor
dec
and
add
or
pusha
pop
aad
cmp
adc
ins
out
xor
mov
mov
push
dec
rol
mov
sub
or
mov
out
adc
and
rol
or
or
data16
cmp
add
sbb
pop
test
test
and
inc
push
scas
and
(bad)
push
(bad)
inc
push
mov
adc
push
aad
mov
jne
push
add
push
ins
addr16
popa
lea
pop
xor
mov
sbb
push
sbb
mov
xchg
dec
in
mov
loope
mov
mov
dec
pusha
xchg
mov
adc
xlat
gs
xor
cmp
sbb
pop
ret
cmc
add
inc
lods
pop
hlt
loopne
retf
adc
pop
pop
aaa
idiv
je
or
pop
inc
or
or
pop
or
popa
sub
movs
hlt
add
ss
das
divps
or
shr
jecxz
cwde
add
mov
ins
outs
xor
jbe
shl
data16
adc
jns
mov
js
adc
or
jno
xchg
cmps
push
pop
sub
mov
pop
cmp
stc
push
dec
lds
ds
mov
pusha
add
fsubr
and
femms
cmp
jle
jmp
push
inc
pop
sbb
dec
mov
push
ja
in
jae
jbe
in
lock
js
sbb
mov
pop
mov
jbe
pushf
dec
dec
aad
inc
add
cs
ss
pop
push
xor
test
daa
adc
adc
mov
idiv
and
sbb
mov
push
ret
(bad)
dec
or
cmc
xchg
xor
adc
ja
test
push
mov
jge
into
mov
aaa
mov
add
push
mov
push
jmp
pusha
xchg
sub
mov
add
mov
test
sbb
push
mov
cmp
mov
loopne
ja
aaa
adc
push
jae
sbb
xchg
fs
pop
mov
jmp
dec
(bad)
sti
cwde
jecxz
mov
jo
loopne
mov
call
shl
add
and
pusha
add
add
mov
mul
xchg
out
sub
nop
popf
add
sbb
addr16
cdq
xchg
mov
dec
xchg
lods
jne
adc
test
shl
outs
xchg
xchg
lds
mov
dec
rcr
ja
icebp
arpl
mov
imul
inc
daa
mov
pop
test
or
mov
(bad)
repnz
call
outs
sbb
lds
mov
pop
xor
test
mov
or
or
cdq
popf
inc
or
jbe
in
jne
and
js
or
push
push
sub
dec
xchg
adc
(bad)
ja
lds
jae
ja
aaa
sbb
adc
dec
loope
test
mov
shr
mov
lds
mov
js
jg
nop
ins
fs
push
or
ret
jnp
fwait
imul
or
adc
jae
daa
and
cmps
jg
jg
adc
hlt
sub
aaa
sub
cmp
mov
test
xor
scas
cmp
sbb
fimul
js
adc
or
dec
mov
mov
ret
pusha
and
lock
add
jno
pop
fst
arpl
inc
mov
push
ds
bound
add
lea
ret
and
(bad)
clc
mov
test
sbb
test
pop
mov
jnp
cmp
fsub
mov
shr
xor
mov
idiv
in
sbb
adc
je
and
test
dec
clc
mov
add
add
inc
or
dec
aaa
xor
jb
nop
outs
xchg
mov
jnp
jo
jl
ja
lods
fwait
cmps
jp
xor
xchg
pop
in
mov
cmps
fist
mov
div
add
sti
cmc
mov
cmp
xor
push
in
cmp
or
and
push
fistp
cmp
sub
adc
sbb
adc
push
cmp
mov
or
add
ret
inc
inc
inc
pop
xchg
inc
and
data16
mov
jno
sti
les
pop
push
and
add
push
pusha
outs
mov
xchg
adc
(bad)
jno
dec
sbb
jbe
mov
push
enter
mov
icebp
push
mov
adc
pop
mov
or
fdivr
xor
jbe
mov
jnp
lgs
push
outs
mov
mov
adc
adc
icebp
or
mov
sub
adc
aaa
fwait
mov
arpl
push
(bad)
out
add
or
mov
jl
in
shl
xchg
(bad)
pop
loop
mov
popa
push
pop
xchg
dec
push
jmp
push
(bad)
xor
(bad)
int
dec
fst
mov
mov
mov
test
ja
cmp
push
sar
adc
or
loope
das
push
int3
add
adc
adc
fdivr
add
iret
mov
push
pop
sub
js
push
retf
pop
aas
and
dec
rol
and
mov
cs
mov
sub
aaa
sbb
jg
fst
scas
dec
cmp
mov
mov
loopne
outs
sub
push
lods
daa
xchg
xchg
nop
loopne
mov
and
dec
pop
jecxz
and
xchg
fisub
cmp
jno
or
adc
add
inc
aaa
in
xchg
cmps
inc
jno
std
or
dec
out
fidivr
fisttp
ds
out
pop
fmul
and
dec
pop
call
cmp
add
sbb
outs
jecxz
inc
ret
sbb
or
or
pop
xchg
and
aas
add
nop
fucomi
daa
ret
mov
outs
jbe
out
scas
push
(bad)
jno
pop
in
shr
mov
in
push
jle
scas
pusha
dec
mov
shl
ins
out
stc
mov
cmp
lock
icebp
mov
ja
scas
in
dec
aas
push
aas
dec
push
cmp
cmp
outs
ja
fistp
adc
adc
hlt
and
xchg
loopne
call
add
int
out
cld
mov
fist
lods
mov
add
sbb
inc
pusha
movntps
pusha
je
lock
add
mov
dec
sbb
add
sbb
push
sar
mov
push
dec
pop
adc
inc
sbb
push
xor
or
jo
dec
xchg
mov
movs
jmp
call
(bad)
int
pop
ins
push
sub
test
fistp
sub
(bad)
call
loope
mov
pop
outs
addr16
fld
retf
lea
sub
adc
adc
lahf
cmp
jo
inc
int
aas
aas
push
je
or
xor
adc
ins
out
jno
call
aam
mov
and
mov
and
adc
sbb
ret
cmp
cwde
add
cld
and
sbb
mov
or
add
in
fpatan
shl
out
call
cmp
sub
push
scas
retw
mov
int
xchg
lods
stos
ss
(bad)
fidivr
cmp
repz
add
aad
dec
int
nop
inc
(bad)
enter
xchg
dec
pop
add
test
fld
imul
bound
dec
add
mov
mov
add
sub
ins
les
or
and
dec
retf
xchg
jae
pop
xchg
fiadd
push
xchg
jne
xor
inc
movs
ja
and
and
or
jmp
ja
ss
push
movs
int3
xor
push
pop
ss
out
jle
out
(bad)
int
push
cmps
pop
popf
add
and
dec
fadd
movq
xchg
rcl
mov
unpcklps
call
cmp
xor
cmp
rcr
push
nop
ds
jmp
add
adc
xor
in
xchg
push
cs
movs
ja
imul
and
retf
push
push
adc
sub
pop
xor
leave
dec
fstp
or
out
add
jle
cmp
stos
add
(bad)
mov
pop
imul
mov
lods
dec
push
xor
inc
sub
cld
pusha
lds
or
inc
xor
inc
dec
pop
jno
sub
cmp
push
mov
call
dec
and
or
add
sub
call
test
dec
pop
mov
lds
lods
cwde
(bad)
dec
rol
mov
pop
aam
mov
xor
imul
inc
jne
or
movs
adc
fiadd
adc
xchg
mov
ficom
xlat
sbb
fdecstp
div
add
movs
sub
or
out
lea
lds
aaa
pop
push
dec
xor
loopne
or
add
les
cmp
jbe
pushf
mov
jmp
xor
int3
xor
into
(bad)
xchg
xchg
out
int
ins
mov
inc
jnp
int3
xor
stos
mov
fcmovnbe
pop
in
ins
pusha
or
pop
or
(bad)
mov
cmps
fwait
addr16
xchg
fisubr
stos
test
sti
es
sbb
xchg
mov
dec
int3
aaa
fistp
mov
retf
inc
ds
and
test
data16
inc
mov
mov
stc
xchg
mov
pop
or
pop
push
in
daa
mov
bound
popa
mov
mov
cmp
sub
fbld
cmps
add
or
push
out
inc
pushf
jmp
call
pop
movs
inc
add
pusha
dec
fiadd
mov
(bad)
jmp
leave
setb
inc
adc
adc
scas
les
(bad)
xchg
mov
push
xchg
mov
mov
sbb
cmp
(bad)
pop
dec
push
mov
test
(bad)
sbb
xor
mov
dec
xchg
int3
pushf
jo
push
shl
mov
inc
outs
xchg
push
pusha
rol
and
cli
push
or
add
jns
adc
loop
mov
jl
out
ja
std
jns
sbb
cmc
xchg
xlat
sub
jmp
dec
call
or
retf
js
add
ret
push
mov
xchg
push
popa
mov
(bad)
push
ins
mov
push
call
push
xchg
xchg
mov
cs
adc
mov
dec
xchg
bound
mov
jmp
cmps
xchg
and
imul
sub
lods
hlt
pushf
push
rol
iret
stc
loop
mov
dec
sub
jo
sbb
aad
inc
jecxz
xchg
data16
xchg
mov
mov
jle
outs
and
adc
das
imul
mov
and
sub
pop
xchg
call
enter
push
movs
add
mov
xchg
inc
sbb
mov
adc
shr
sub
stos
xchg
aad
movs
push
xor
scas
mov
addr16
stos
push
mov
push
dec
adc
movs
xor
adc
pop
repz
cmp
cmp
mov
xor
aaa
pop
jmp
cli
adc
shl
mov
test
sub
movs
mov
push
mov
adc
push
xchg
jmp
out
jo
or
jnp
outs
les
pop
mov
lea
stos
aad
sbb
les
mov
mov
and
pop
or
rcl
jmp
fadd
scas
out
cmp
push
or
lds
mov
or
scas
and
frstor
ss
xchg
repz
(bad)
and
je
jmp
out
addr16
xchg
sub
cmp
jmp
sbb
(bad)
mov
or
fdivr
xchg
sub
repnz
mov
nop
adc
std
sar
arpl
inc
dec
std
and
xchg
or
stos
or
lock
fsub
loop
sbb
popf
pop
cmps
sti
xchg
sub
dec
push
adc
sub
pop
dec
call
clc
ds
sub
(bad)
in
inc
call
cld
call
or
bsf
and
rcl
int
or
pop
mov
xchg
ins
vmwrite
mov
xor
or
into
je
sbb
mov
push
fstp
xor
and
sbb
call
jne
mov
fstp
mov
loopne
sbb
scas
test
dec
sub
lock
pop
cwde
mov
push
add
xor
lock
cdq
imul
jno
and
push
int
pop
xchg
xchg
inc
and
in
cmp
jo
stos
cld
cmps
push
and
sub
dec
imul
mov
inc
dec
jb
out
mov
jge
sub
repnz
xor
mov
ret
xchg
fwait
dec
daa
test
push
pop
ret
cmp
xor
and
lods
rcr
push
mov
xor
fxch
imul
(bad)
jno
das
mov
cmp
jns
xor
dec
inc
jae
lods
inc
cmc
and
pop
adc
dec
inc
data16
mov
mov
popa
shr
aas
test
or
mov
test
push
ret
or
sbb
cmp
xchg
push
fs
inc
mov
into
inc
cli
loop
adc
push
sbb
imul
mov
enter
movs
(bad)
ins
out
mov
stos
test
push
addr16
mov
aad
call
fs
cmps
mov
and
xchg
add
dec
pusha
or
inc
pop
cmp
dec
mov
adc
loopne
inc
jp
in
pop
xchg
fsubr
push
(bad)
lahf
mov
popf
out
lds
outs
pop
ins
(bad)
mov
cli
push
push
inc
mov
sbb
popw
addr16
push
into
mov
mov
jae
hlt
add
popa
adc
nop
dec
les
jp
pop
out
loop
cmp
aas
cld
mov
pop
mov
sbb
or
mov
adc
int3
and
push
ret
das
pop
rcl
std
jnp
fadd
scas
(bad)
shr
push
cmp
add
ret
sub
adc
lock
cdq
xor
cmp
or
jg
and
sbb
sbb
mov
push
out
push
xor
inc
jge
xchg
push
jo
push
test
mov
or
push
fldenv
cmps
xchg
ins
pmulhw
(bad)
jle
inc
cs
jo
les
repnz
jg
push
jg
xor
or
dec
jg
or
add
nop
or
pop
mov
inc
in
pusha
mov
popa
lock
push
dec
adc
pslld
sbb
js
xor
frstor
push
dec
xchg
and
push
loope
cdq
cmps
arpl
inc
push
xchg
ja
out
out
addr16
icebp
xlat
sub
mov
dec
mov
or
add
rol
xor
adc
adc
rol
push
shl
mov
psubb
stos
js
xchg
daa
packsswb
ins
dec
mov
push
mov
xchg
pop
imul
rol
fcom
rol
adc
mov
sub
or
jnp
loopne
xchg
push
sub
add
cmp
mov
xchg
mov
sub
add
push
arpl
add
data16
call
pop
cmc
(bad)
mov
sub
xchg
push
inc
push
movs
inc
arpl
and
stc
push
fs
mov
push
sahf
xchg
outs
fistp
jg
or
xchg
fsubr
adc
sbb
and
lock
sub
rol
into
test
stos
fmul
ja
add
xchg
adc
enter
xchg
cmp
movs
or
adc
stos
mov
jno
and
imul
cmp
clc
add
call
mov
or
add
push
(bad)
jne
outs
xor
nop
xchg
dec
sub
push
sub
mov
mov
inc
imul
xchg
arpl
bound
vmwrite
mov
(bad)
xor
lds
out
jmp
sbb
mov
(bad)
daa
jae
loopne
or
sub
pop
xor
add
or
xor
xor
call
or
adc
data16
mov
xchg
(bad)
jbe
pop
pusha
adc
or
pop
fst
ins
call
test
inc
inc
stos
xchg
dec
imul
retf
je
add
outs
aaa
sbb
dec
xchg
xor
add
add
xor
add
or
push
ds
dec
test
call
inc
cdq
jge
loop
outs
mov
cdq
jnp
cdq
hlt
aad
jno
pop
push
imul
cmp
push
sahf
ins
inc
jnp
je
cld
inc
sbb
adc
into
and
adc
dec
mov
push
push
jae
mov
(bad)
loop
mov
(bad)
lock
sub
and
jo
xchg
sbb
inc
xor
sbb
shl
(bad)
cwde
jns
pop
ficom
js
sbb
xchg
pop
cmp
dec
sub
fs
and
(bad)
cdq
pop
inc
xor
mov
and
inc
sbb
jnp
add
nop
push
scas
cmp
xor
xor
js
cmp
test
mov
or
je
sbb
xchg
clc
movs
pop
bound
test
push
pop
fiadd
sub
push
shl
mov
xchg
pop
or
ss
iret
jno
mov
dec
pop
repz
cs
mov
test
mov
adc
or
or
sbb
nop
mov
je
out
mov
stos
sbb
pop
je
cmps
mov
inc
imul
das
sub
inc
bound
stos
retf
lods
jae
push
fstp
xlat
pop
xchg
cli
xchg
xor
mov
shl
cmps
xchg
and
mov
sub
and
mov
dec
(bad)
sbb
xor
xchg
fsub
nop
test
sti
sbb
lds
adc
repnz
stos
xor
in
imul
inc
(bad)
shl
push
cmp
stos
arpl
(bad)
adc
xor
mov
jp
add
out
adc
jl
(bad)
cmp
pop
test
or
adc
mov
adc
jle
xchg
sbb
and
push
mov
jns
or
mov
fbld
cmps
sbb
pop
push
in
xor
imul
adc
mov
dec
scas
scas
cli
dec
inc
pop
mov
adc
mov
or
xor
cmps
pop
push
push
ss
mov
inc
lods
into
inc
sbb
or
xor
push
xor
dec
mov
mov
cmp
mov
in
sahf
xchg
jg
mov
loop
movs
sub
add
xchg
arpl
mov
pop
movs
sub
xchg
bound
not
mov
xor
sti
mov
fistp
les
cmps
pop
scas
add
bound
pop
xor
xchg
jne
mov
sub
icebp
mov
icebp
inc
out
push
inc
loopne
and
ss
mov
popa
outs
mov
jmp
mov
mov
pop
retf
in
add
adc
cmp
or
fist
int
jo
or
jno
jge
aas
xlat
dec
jno
sar
cmp
inc
sar
in
adc
mov
jb
cmp
out
jmp
cmp
mov
push
xor
cmp
nop
add
and
cmp
sbb
fwait
mov
mov
mov
cmp
fwait
add
mov
push
sbb
xchg
xchg
or
or
call
aam
dec
push
movs
push
retf
sbb
mov
ret
bound
cmp
cmp
sub
cmp
(bad)
ja
(bad)
push
mov
jge
(bad)
in
xor
aas
sub
jp
add
rol
or
xor
les
or
sbb
(bad)
mov
xor
repnz
out
push
mov
mov
mov
mov
nop
movs
push
mov
pop
ins
inc
pop
sub
stos
pushf
dec
fs
xor
push
scas
shl
push
scas
rcl
add
adc
push
mul
(bad)
(bad)
push
jbe
xchg
int
cmp
dec
xchg
add
in
and
sbb
jmp
int3
enter
fxch
add
pop
xor
add
mov
cwde
movs
xchg
push
adc
dec
mov
es
ins
retf
cmps
xor
dec
dec
xchg
sub
mov
mov
mov
ins
inc
or
adc
int3
test
int
pop
xor
dec
shl
xor
sbb
xlat
pop
xor
jecxz
aam
rcr
pop
int
inc
shl
inc
jo
sub
dec
(bad)
ror
cmp
rol
add
dec
shr
jmp
pop
mov
push
js
js
ins
iretw
idiv
repnz
cmc
xor
xlat
imul
fbstp
inc
lds
arpl
in
repz
(bad)
pop
jge
push
frstor
rol
xor
popf
add
sub
jae
add
xchg
sbb
add
xor
jnp
jae
push
pop
pop
and
inc
xchg
add
add
mov
retf
mov
pushf
jo
lods
iret
sbb
pop
mov
pop
xor
mov
cmp
fwait
inc
popf
ja
push
dec
pop
pop
mov
fdivr
arpl
aad
cld
ror
fsub
(bad)
and
jnp
fld
add
lods
push
inc
xor
push
fdivr
inc
inc
adc
add
mov
aad
inc
into
sti
popa
and
xor
mov
stc
inc
fscale
pushf
fstp
jle
push
jne
jmp
push
xchg
xor
inc
fidivr
adc
and
add
or
inc
sub
add
add
add
add
or
add
dec
xchg
or
or
loope
xchg
adc
mov
(bad)
lds
cwde
lea
xor
mov
leave
xchg
sub
in
dec
cmps
in
xchg
sub
mov
int3
xchg
ss
mov
pushf
ds
aad
jb
(bad)
mov
cmp
sbb
movs
shr
sbb
dec
scas
pop
jae
or
aad
fdiv
retf
ret
and
pop
fsubr
adc
mov
cmc
cli
xor
push
jmp
xchg
sbb
lods
pop
xchg
popf
cld
mov
or
inc
(bad)
xor
add
aaa
mov
enter
ss
jne
into
mov
or
call
add
xchg
mov
rcl
mov
pop
xchg
mov
in
test
lods
sti
ja
xor
cdq
cmp
jg
xchg
xchg
pop
nop
or
movs
mov
ds
ds
in
fs
push
mov
sti
enter
jno
jo
jns
pop
pop
(bad)
sbb
fisttp
and
inc
sbb
test
push
lahf
sbb
fld
fs
jg
lea
pop
xor
fcom
mov
push
jae
dec
sub
mov
jne
push
jge
dec
test
xchg
push
gs
pop
pop
sub
sbb
movs
xchg
inc
mov
xchg
push
icebp
pop
sbb
and
imul
je
in
inc
cs
dec
sbb
mov
and
push
jmp
xlat
and
call
pop
xor
jmp
pop
and
data16
es
jno
pop
out
nop
scas
imul
call
push
fstp
pop
sahf
add
es
ins
adc
cdq
cs
pop
inc
jmp
test
test
call
jo
sbb
imul
or
cmps
add
mov
movs
and
cdq
fs
rol
mov
test
push
(bad)
nop
mov
push
mov
cs
pushf
mov
inc
pop
adc
ret
mov
mov
test
jns
jb
(bad)
mov
mov
mov
jnp
xchg
movs
inc
add
sbb
les
sahf
imul
sbb
mov
rol
sub
repnz
loopne
or
scas
sti
es
aad
inc
imul
sub
repnz
push
jns
and
and
rol
add
and
in
jnp
lds
sbb
xor
pop
addr16
out
xchg
(bad)
out
fistp
test
add
int3
pop
outs
fwait
xor
fld
and
push
and
or
psrlw
sbb
enter
arpl
loopne
cmp
dec
xor
or
mov
mov
xor
jno
rcl
shr
(bad)
pushf
jae
ret
rcl
jmp
xor
stos
sbb
pop
sub
jno
sub
std
ret
pop
or
int3
xor
push
adc
scas
enter
(bad)
xor
xchg
inc
fist
jnp
push
(bad)
cmc
pushf
xchg
sbb
jl
cwde
std
das
mov
jmp
adc
ss
call
xor
dec
(bad)
out
mov
jae
loope
test
mov
mov
clc
daa
xchg
sbb
and
cmp
or
or
push
mov
inc
sbb
ds
sub
test
mov
or
and
push
jecxz
out
mov
jp
mov
cmp
jo
inc
pop
xchg
arpl
xor
test
inc
fs
adc
adc
cmps
test
sbb
loope
cmpxchg
inc
imul
aam
xor
jno
push
out
inc
sbb
test
mov
cmp
mov
jp
jecxz
jne
popa
cmp
out
in
xor
shr
add
jne
sub
pop
pop
aaa
mov
pop
mov
mov
or
push
inc
ja
xor
ja
(bad)
cmp
loop
mov
fsub
cmp
jb
adc
and
and
outs
push
imul
rol
scas
mov
or
leave
or
xchg
frstor
cmps
test
ins
mov
sub
stos
repnz
loopne
out
imul
pop
sahf
and
adc
test
pushf
loopne
pop
dec
xor
dec
cmp
mov
add
scas
sub
outs
loop
and
push
xchg
mov
sbb
xor
mov
test
lds
dec
jb
add
test
popf
lock
add
adc
cmps
dec
and
xor
push
or
sub
inc
adc
rcl
rcl
xchg
push
jno
lock
or
rcr
repnz
daa
enter
imul
gs
and
mov
and
mov
mov
jb
lea
test
xor
inc
movs
push
mov
jge
xor
cmp
(bad)
daa
cwde
(bad)
shl
je
push
inc
cmp
(bad)
sahf
push
popf
out
push
sub
jne
mov
push
push
cdq
pop
xchg
test
movs
fdiv
test
lods
imul
push
ja
inc
test
inc
ret
adc
repz
jmp
ret
mov
ret
dec
xchg
push
jb
xlat
fmul
push
cmps
aaa
in
in
and
dec
dec
cmp
in
imul
push
inc
outs
mov
xchg
cmp
stc
mov
inc
ficom
mov
fsubr
and
test
mov
mov
ins
push
call
mov
cmp
mov
cmp
mov
pusha
pop
fwait
dec
fsubr
adc
pop
jnp
pop
call
dec
jnp
pop
(bad)
push
pusha
mov
stos
sbb
test
mov
stc
jmp
ror
xchg
cmc
push
(bad)
xor
xor
std
outs
adc
add
dec
mov
adc
pop
cmp
gs
loop
(bad)
pop
test
cmp
or
xchg
jb
sub
sbb
adc
arpl
js
mov
cld
mov
sub
hlt
sbb
dec
sbb
and
stos
inc
clc
mov
push
cs
lods
fcomp
aad
ss
popa
lock
pop
aas
xor
inc
xor
cmc
mov
aad
popa
ss
sbb
ins
inc
lods
cmp
or
lods
cmp
test
popf
jecxz
icebp
xchg
mov
popa
xchg
mov
je
mov
xor
enter
dec
cmps
xchg
test
cmps
fwait
test
mov
mov
mov
xchg
test
stos
pop
std
call
xchg
pushf
add
push
jmp
adc
fadd
push
push
retf
fisubr
mov
dec
lods
(bad)
push
jno
inc
es
push
jp
imul
mov
xor
cmp
mov
cli
retf
jbe
pop
int3
in
outs
out
and
jno
mov
(bad)
(bad)
mov
retf
jecxz
xlat
ja
dec
cs
jo
mov
movs
std
call
stc
imul
js
push
retf
bnd
popf
jo
jnp
test
cld
ss
push
jns
addr16
push
dec
mov
icebp
lahf
ins
cmp
pmuludq
dec
or
call
xchg
test
clc
mov
aas
int
xor
pushf
retf
mov
daa
stos
ret
xor
pushf
out
js
sub
add
dec
sub
movs
xor
or
cmc
int
pop
add
(bad)
adc
icebp
or
jne
jp
adc
out
push
(bad)
pop
or
sbb
xchg
and
jns
or
mov
fadd
mov
out
inc
push
les
in
inc
js
jns
mov
adc
inc
jmp
jne
scas
cmp
mov
jmp
cmp
or
adc
jno
mov
int
push
cli
nop
sbb
(bad)
jl
lock
mov
movs
cmps
dec
gs
add
fdivr
push
rol
xor
es
adc
(bad)
sbb
adc
in
push
bound
mov
(bad)
out
cmps
movs
or
add
adc
jbe
sahf
sar
push
or
push
sub
jbe
cmps
outs
scas
adc
mov
jo
ja
jae
add
or
or
or
pusha
inc
and
dec
xor
inc
data16
fcom
xchg
jne
cmp
add
adc
popf
lds
push
inc
xor
movs
or
mov
cmps
jo
add
and
mov
sub
jno
pop
das
popa
outs
arpl
mov
loopne
and
sbb
add
and
data16
lock
pusha
or
nop
add
add
mov
add
out
and
cli
pop
jo
aaa
pop
das
cmps
inc
aam
test
mov
inc
jae
dec
inc
or
arpl
nop
or
adc
cwde
add
xchg
xor
daa
push
clc
test
adc
ja
sbb
push
adc
add
jns
xor
mov
dec
jae
add
or
jnp
push
cmp
sub
mov
and
xchg
cmc
imul
js
mov
loopne
cmp
and
mov
repz
push
or
shl
lock
push
pop
sub
mov
dec
or
push
and
xchg
cmp
push
add
mov
gs
fmul
mov
clc
jb
push
mov
inc
ret
xor
cwde
aaa
paddsb
push
aam
or
add
add
and
xor
mov
jmp
(bad)
repz
or
(bad)
xor
xchg
pop
ret
xor
loope
cmp
cwde
mov
push
cmp
push
adc
pop
out
ror
and
sti
xchg
xchg
sub
add
dec
xchg
sbb
dec
out
push
and
jae
sub
loop
mov
aaa
xor
lock
mov
outs
jmp
outs
outs
js
jmp
nop
cmp
xor
push
jo
sbb
inc
test
jle
xchg
pop
test
sbb
or
push
ins
cwde
dec
adc
and
rcl
clc
mov
xchg
and
xchg
and
xchg
mov
cdq
and
mov
aas
enter
pop
inc
push
sbb
lods
jbe
aam
cwde
ins
push
add
push
scas
add
inc
shr
pop
pop
sub
push
cdq
lods
dec
jp
and
lahf
adc
xor
mov
sub
xor
dec
adc
sbb
cmp
xchg
sub
(bad)
jp
ja
cmp
stc
in
(bad)
push
rol
mov
push
push
pusha
add
jns
add
jb
(bad)
cmp
cdq
xor
push
in
xor
adc
cmps
popf
popa
adc
shl
jb
mov
or
test
in
xor
cmp
push
cmp
or
ror
shr
jg
and
popa
mov
adc
outs
fsub
add
mov
pop
mov
push
nop
mov
cdq
add
jne
sub
jae
mov
out
xchg
fadd
iret
ror
loopne
enter
cdq
dec
outs
in
pop
rcr
push
inc
pop
push
pusha
xor
and
mov
mov
nop
push
jp
push
mov
lds
call
xor
cs
test
push
repz
cmps
lahf
jo
sbb
dec
out
or
add
push
inc
sub
adc
cmc
pusha
jge
pop
add
cmp
xlat
cdq
inc
test
push
mov
pop
mov
test
inc
push
fisttp
les
xor
xor
hlt
inc
mov
or
adc
sub
test
pop
mov
push
cmp
pusha
aas
xchg
jae
stc
xchg
and
test
test
stos
jns
movs
push
mov
call
lods
loope
sahf
inc
mov
int3
cli
addr16
sbb
mov
dec
(bad)
and
lock
dec
or
jns
fistp
ss
scas
ja
ds
pusha
les
adc
call
scas
dec
sbb
cli
idiv
push
cmp
scas
enter
inc
lods
sub
psubd
in
lock
retf
or
call
sbb
adc
push
scas
ret
test
scas
mov
jbe
cmps
loop
mov
inc
mov
lods
repz
push
lock
imul
(bad)
movd
mov
shl
xchg
inc
sbb
push
mov
stos
dec
dec
adc
adc
xor
push
add
test
push
mov
and
sub
sbb
adc
fwait
nop
in
mov
cmp
jne
pop
dec
mov
and
test
mov
jbe
inc
pop
mov
xor
jno
jle
xchg
mov
and
xchg
cs
push
int3
jns
js
push
jbe
xor
or
xchg
or
adc
cmp
jmp
je
mov
sbb
jmp
push
das
inc
or
push
jl
and
push
jge
mov
xchg
and
adc
and
push
movs
dec
adc
not
xchg
das
sub
int
and
add
mov
or
sti
scas
mov
ins
xchg
mov
push
dec
loop
fwait
in
mov
nop
or
sbb
and
and
or
or
ret
ret
or
ret
and
cmp
das
fadd
sub
cmp
mov
push
push
hlt
xor
mov
aam
movs
ret
in
iret
or
jnp
lea
cs
inc
cmc
(bad)
xlat
aaa
or
xor
loopne
lahf
inc
or
sti
inc
mov
mov
adc
rol
shl
ins
or
jb
mov
(bad)
js
(bad)
imul
(bad)
jge
mov
push
adc
les
add
pop
and
loopne
cmp
or
sti
(bad)
enter
and
fiadd
rol
shr
lods
inc
repz
or
dec
movs
or
jge
pushf
retf
mov
cmp
int3
mov
retf
push
xor
sbb
mov
pop
adc
and
sub
les
leave
inc
cdq
shl
sub
mov
loopne
lahf
lock
nop
pop
(bad)
lahf
add
fs
lahf
loopne
lahf
jmp
retf
mov
(bad)
cli
sbb
lds
fmul
add
retf
daa
xor
or
je
adc
js
(bad)
jmp
xor
sahf
fidivr
in
scas
add
push
xchg
dec
push
add
or
mov
aas
mov
mov
lahf
ror
ret
lds
test
xor
sbb
sub
and
aaa
and
lds
rcr
aam
pop
aam
jge
sahf
loopne
sar
lods
mov
rol
rcr
pop
dec
add
mov
cdq
pushf
mov
in
push
xchg
xor
ja
mov
mov
xor
adc
add
lock
pop
ja
xor
js
mov
bound
sbb
push
mov
ins
cmp
imul
int
fcmovnbe
push
push
popf
mov
adc
pushf
add
cld
les
sbb
mov
push
out
pusha
or
pusha
push
cmpxchg
sbb
ins
in
(bad)
sbb
aam
or
push
ja
cmc
shl
inc
pushf
pop
lock
and
xor
icebp
repnz
ja
cmp
xor
jmp
adc
xor
(bad)
leave
pop
pop
mov
fnstsw
inc
pmuludq
pop
out
jno
and
imul
dec
loopne
lahf
inc
or
sub
loopne
dec
and
mov
mov
icebp
and
and
sbb
movs
add
rcr
fstp
mov
mov
loope
shl
adc
fst
mov
cmp
ins
rcl
or
in
outs
stos
pavgb
cmp
add
add
(bad)
loopne
push
inc
inc
add
es
jns
imul
sti
rcr
sbb
and
mov
or
fsub
adc
pop
xchg
xchg
in
mov
out
int
ins
scas
add
sbb
sbb
push
add
mov
pop
jae
inc
lods
ficomp
test
fbld
xor
and
mov
repnz
jne
and
pusha
jecxz
shl
pop
sub
loopne
lea
jmp
or
xchg
inc
or
sbb
cmp
or
cmp
imul
sbb
jns
out
mov
outs
sahf
cmp
add
es
xlat
xchg
shl
adc
push
leave
add
sbb
iret
cmp
fisubr
test
(bad)
out
call
(bad)
mov
out
jae
push
xor
fwait
into
push
scas
loopne
icebp
aam
lds
loopne
pop
jmp
outs
adc
xor
lods
inc
sbb
dec
jmp
fidiv
out
mov
popf
loope
push
jmp
mov
mov
call
cdq
fimul
in
jns
in
push
mov
ins
repnz
cmp
cs
jmp
leave
add
lahf
in
scas
test
pop
jmp
scas
mov
(bad)
sbb
ret
into
psubd
pop
int3
jbe
push
or
hlt
(bad)
popf
fisub
out
dec
cdq
(bad)
pop
adc
(bad)
lock
jmp
adc
icebp
xor
sahf
aam
cmps
outs
xchg
add
cmps
or
pop
pslld
dec
jmp
jae
mov
mov
adc
pop
add
xor
jne
je
sbb
loope
push
test
sbb
mov
jp
dec
add
xchg
cwde
dec
adc
rcl
paddsb
ror
(bad)
pusha
retf
or
add
jo
mov
(bad)
cmp
sub
mov
xor
loop
not
imul
(bad)
or
sar
fdiv
sub
jl
mov
js
mov
out
mov
das
retf
cli
inc
push
inc
out
jo
cwde
xchg
frstor
out
mov
pop
data16
mov
cmp
(bad)
psllw
adc
pop
mov
fisttp
xchg
jns
hlt
or
or
cmps
fndisi(8087
stos
les
iret
cli
test
test
retf
sbb
push
popa
in
fs
adc
inc
idiv
push
push
xor
pop
xchg
xor
push
loope
fdivp
jno
paddw
in
fcom
pop
nop
loopne
jl
hlt
sub
mov
shl
sbb
fidivr
iret
add
shl
xor
xor
fnstenv
pop
and
inc
xor
dec
pushf
cmp
in
shl
dec
mov
arpl
dec
popf
cmp
cld
sub
aam
shl
push
aad
adc
pop
mov
fcmovbe
dec
mov
pop
es
push
ss
jle
adc
fwait
daa
lock
adc
int
pop
xlat
mov
cs
jnp
inc
adc
adc
dec
mov
int3
xor
sbb
lahf
popa
xor
ds
int3
int3
int
ret
dec
xor
rcr
mov
sbb
inc
bound
(bad)
fcmovb
retf
ins
das
ins
test
in
cmp
jl
test
sar
xchg
(bad)
lds
or
xchg
cdq
adc
fnstenv
mov
movs
dec
mov
pop
ds
int
cmp
dec
movs
dec
jno
dec
mov
cmp
mov
(bad)
fild
popa
add
(bad)
imul
outs
inc
ja
cmp
cs
pop
xor
jmp
jp
stc
in
in
jbe
imul
ins
xor
bnd
lds
adc
cmc
(bad)
mov
or
jb
dec
xor
pushf
call
pop
or
push
lahf
adc
xor
aaa
add
xchg
retf
aam
cmp
rol
sbb
loop
outs
mov
cmp
xor
jnp
xor
adc
adc
add
inc
enter
(bad)
push
adc
aam
cmps
fs
or
push
aam
rol
mov
clc
jle
repnz
inc
enter
shl
aas
add
jmp
das
ror
mov
inc
ss
inc
pop
sub
add
inc
or
and
ins
enter
ss
pop
in
stos
sub
call
mov
and
and
in
push
push
inc
scas
mov
(bad)
loope
pop
movs
mov
fptan
dec
push
aas
call
inc
(bad)
dec
mov
and
inc
je
out
cmp
push
xor
mov
adc
pop
mov
mov
jecxz
cmp
or
ins
cmp
movs
jecxz
push
pop
outs
cmp
cwde
xor
xor
xchg
push
sbb
popf
addr16
xlat
dec
movs
scas
and
xchg
inc
adc
sub
cmp
sbb
dec
push
mov
mov
push
stos
push
retf
lea
or
movs
add
or
inc
frstor
lock
in
dec
mov
out
fiadd
push
out
mov
jne
int3
jmp
ja
rol
lds
daa
fmul
push
and
and
jbe
int3
jno
xchg
test
nop
mov
out
pop
addr16
sbb
jae
imul
scas
jmp
in
in
push
shl
rol
scas
adc
xchg
fisttp
ins
sub
cmp
cwde
fwait
push
cmc
sti
out
mov
rcr
mov
stc
sti
sbb
cmp
adc
mov
(bad)
cmps
into
and
icebp
pmaddwd
popa
test
mov
loop
push
cmp
rol
dec
add
pop
sub
xchg
add
xor
add
mov
adc
add
fucomip
lds
jmp
sar
hlt
xor
mov
cmp
pop
cmc
mov
mov
dec
inc
cmp
arpl
dec
out
and
jge
sub
or
sbb
mov
push
jno
add
jl
add
add
add
push
cmp
cwde
ret
cvtdq2ps
les
inc
push
add
movs
loop
dec
add
sbb
add
jns
rcr
inc
clc
adc
dec
dec
out
and
adc
bound
inc
std
jmp
mov
xchg
xor
mov
popa
sbb
call
add
push
jno
inc
cli
iret
add
sub
add
push
or
add
mov
inc
mov
arpl
hlt
adc
fcmove
mov
data16
dec
loop
pop
cmp
out
push
mov
test
(bad)
cmps
daa
ror
fnstenv
cmp
shl
clc
inc
xchg
dec
nop
inc
xor
call
mov
or
push
inc
clc
rol
or
into
dec
dec
push
xchg
and
rcr
mov
push
pop
pop
frstor
mov
dec
das
push
and
dec
ret
in
and
(bad)
repnz
ja
sbb
out
pusha
dec
arpl
push
mov
out
inc
push
imul
shl
mov
pop
nop
sbb
movs
sbb
mov
and
inc
inc
adc
sbb
and
aad
cmp
aam
mov
mov
sbb
cmp
cmc
or
pop
cmps
icebp
sbb
push
inc
inc
add
push
inc
sub
sbb
xor
or
out
nop
sbb
mov
movs
mov
sbb
lods
inc
sbb
mov
mov
nop
fisttp
dec
rcr
inc
rol
add
sub
outs
xchg
jmp
jmp
add
cmp
push
pop
mov
mov
mov
pop
ins
push
mov
mov
lds
lea
push
sub
pop
xchg
pop
inc
pop
fcmovbe
loopne
ins
jnp
pop
ret
out
fstp
int
mov
cmp
jnp
sbb
sub
mov
js
inc
call
inc
pop
jns
xchg
or
aam
mov
add
call
pop
shl
lahf
call
pop
inc
pop
jmp
xlat
cmp
cwde
inc
add
xor
ins
mov
imul
cdq
mov
ds
lods
int
xchg
push
push
adc
push
retf
jnp
xchg
mov
mov
or
add
xchg
sub
in
dec
das
dec
pushf
lds
sbb
mov
add
or
shl
jge
and
inc
into
pop
dec
mov
dec
call
or
cdq
push
iret
pop
repnz
dec
ss
sub
or
inc
icebp
mov
inc
call
mov
lods
push
dec
sahf
push
sub
jae
icebp
mov
mov
inc
test
xchg
rol
push
sbb
pop
lahf
jmp
jecxz
mov
loopne
iret
add
cmp
pop
aaa
imul
movs
nop
inc
sub
arpl
adc
and
and
jmp
or
popa
fidiv
fwait
push
sub
cmp
and
jmp
mov
lock
adc
xchg
sbb
in
test
pop
loope
pusha
lock
mov
cmp
cld
vmovups
add
and
sbb
data16
shl
mov
fwait
ss
mov
clc
sbb
fist
dec
and
cmp
mov
data16
aam
out
push
adc
(bad)
mov
adc
scas
jae
ja
xor
pop
dec
inc
or
adc
ret
or
loop
lahf
mov
and
mov
inc
iret
add
(bad)
out
pop
jno
and
and
(bad)
cmp
ror
and
loopne
pop
shr
pop
fsubr
adc
data16
mov
inc
dec
and
add
dec
xor
loopne
push
mov
xor
(bad)
fdiv
push
add
sub
push
hlt
inc
mov
adc
cmp
out
popf
das
jae
xchg
loope
inc
sbb
mov
nop
sahf
hlt
sahf
xor
pop
xor
add
ror
pushf
mov
add
adc
or
les
cmps
mov
push
sahf
mov
or
imul
jmp
js
or
mov
ja
imul
les
jae
imul
out
repnz
dec
add
test
imul
test
add
push
mov
sub
cmovae
aam
jnp
jbe
int3
scas
enter
(bad)
ds
test
sti
jo
pop
add
fiadd
imul
jae
add
mov
mov
repz
dec
cmp
sub
mov
mov
mov
push
mov
push
lds
popf
sbb
add
mov
retf
xor
xor
and
test
sahf
mov
mov
or
clc
inc
sub
sub
mov
and
scas
xchg
test
inc
mov
sbb
sbb
pop
cmp
adc
inc
xor
sbb
(bad)
arpl
xor
hlt
rcr
pop
cmp
mov
inc
enter
cmp
or
(bad)
cmp
xor
lock
cmp
dec
add
dec
shl
loop
push
sbb
push
inc
mov
ret
mov
push
cmp
xor
dec
sbb
retf
jl
clc
clc
sbb
fcomp
sbb
xor
retf
js
aaa
mov
cmp
add
add
inc
int3
and
sub
and
mov
mov
push
push
test
lock
push
shr
test
cmp
fnstcw
mov
and
cmp
enter
push
sahf
cmp
loopne
cli
xchg
push
mov
scas
jmp
xchg
enter
ret
stos
push
ret
call
(bad)
pop
int3
or
(bad)
sbb
test
jecxz
push
rcl
and
fiadd
add
mov
or
jns
pop
nop
xchg
jmp
jo
(bad)
jo
mov
pushf
mov
sbb
jne
fwait
and
cmps
dec
sub
pop
mov
jns
add
mov
mov
mov
inc
mov
jmp
or
xor
js
adc
and
and
add
test
add
mov
ret
sbb
add
sbb
sahf
dec
cmp
xchg
jns
push
push
inc
lds
pop
or
mov
and
dec
dec
dec
sub
xchg
add
xor
adc
inc
cmp
inc
and
cli
add
cmp
xor
addr16
pop
je
mov
dec
mov
ss
xor
inc
mov
ret
(bad)
add
mov
xor
dec
sub
cmp
int3
adc
dec
or
adc
std
arpl
add
ja
xchg
add
mov
add
lds
add
inc
test
sbb
rcl
xchg
int3
inc
and
rol
cmp
scas
mov
aas
or
jl
or
mov
push
xchg
loope
enter
pushf
nop
add
sub
cs
cmp
dec
adc
or
push
sbb
add
ins
ror
mov
out
sbb
sub
add
push
pop
fmul
daa
jne
or
push
dec
push
movs
mov
fwait
xchg
push
mov
popf
cmp
inc
add
pusha
test
popa
test
sbb
xor
(bad)
push
cmp
inc
sub
pop
test
sbb
dec
xchg
(bad)
mov
or
add
add
loopne
push
cmp
adc
and
sbb
sbb
add
dec
sbb
loop
push
rol
xor
jmp
mov
icebp
scas
das
jno
add
dec
pusha
test
dec
push
loopne
xor
add
sub
test
inc
add
push
sub
or
fidivr
cmp
xor
into
xor
inc
xor
xor
sar
mov
adc
inc
mov
sbb
push
inc
lock
sbb
add
mov
outs
lods
and
or
test
stos
mov
push
xchg
xor
aam
mov
mov
add
retf
xchg
xchg
test
jbe
dec
scas
cwde
sub
add
pop
aad
nop
mov
add
pop
add
xor
loopne
xchg
jnp
xor
call
push
mov
pop
dec
add
lods
xor
(bad)
(bad)
dec
(bad)
or
in
push
cmp
imul
cmp
outs
leave
(bad)
ins
add
push
pop
add
inc
push
add
add
mov
or
xor
cdq
sbb
add
or
xchg
cdq
mov
xchg
or
xchg
fadd
add
mov
arpl
add
inc
or
add
sub
lea
add
pop
mov
ror
call
mov
push
xchg
mov
xchg
lods
push
je
xchg
adc
add
sbb
dec
mov
and
cmp
adc
das
imul
sub
rol
or
pop
cwde
add
cwde
add
add
inc
add
add
sbb
(bad)
or
cmp
pop
bound
nop
add
push
cli
push
in
push
cmp
xchg
in
inc
imul
xor
inc
add
movs
mov
test
sbb
cmp
cmp
or
nop
rcr
fsub
mov
test
lods
(bad)
int
and
or
xlat
jge
jo
pop
fidiv
adc
and
sbb
add
rcr
xor
loop
ret
xor
inc
mov
inc
mov
dec
and
sbb
or
add
sbb
les
sbb
add
movs
pop
push
mov
or
sub
adc
xchg
cmp
and
es
std
test
or
adc
adc
pop
and
xor
das
jle
repz
loopne
(bad)
inc
cmp
and
int3
dec
or
es
dec
test
scas
add
sbb
pop
push
mov
(bad)
fstp
add
jb
cmp
outs
pop
add
and
sahf
fs
jle
and
xchg
pop
pop
push
sub
fs
pop
cmp
adc
pushf
sbb
adc
arpl
jge
cmp
test
in
or
add
gs
fisttp
ret
repnz
and
push
mov
dec
pop
out
mov
daa
lock
add
pop
in
lock
sub
adc
push
in
inc
add
dec
fcomp
adc
arpl
cmp
js
imul
jo
jae
mov
pop
mov
out
ss
es
xor
or
add
sub
add
test
mov
jecxz
into
push
push
add
out
ret
pop
arpl
lahf
fsub
(bad)
push
add
push
out
scas
test
xchg
jne
push
adc
pushf
in
popf
test
push
xlat
sub
mov
dec
(bad)
retf
add
leave
retf
mov
jle
pop
mov
jle
jmp
aas
enter
call
inc
dec
inc
jge
push
mov
imul
out
pop
push
arpl
imul
jmpw
mov
mov
push
jmp
dec
add
js
sbb
adc
cdq
adc
out
pop
fsubr
push
loope
cmps
bound
bound
mov
mov
cmps
scas
push
shr
pop
loopne
stos
jle
pop
push
xlat
fisub
out
jmp
sub
push
mov
add
push
cs
mov
outs
(bad)
dec
mov
scas
pop
sbb
mov
ficomp
dec
test
test
dec
pop
add
data16
stc
repz
sbb
pop
ret
ins
loope
gs
jb
xlat
mov
aas
xchg
enter
test
scas
xchg
push
pusha
xor
test
je
xchg
test
ins
cmp
jle
bound
fld
push
arpl
mov
imul
mov
jo
scas
outs
jmp
jmp
das
out
jecxz
out
dec
cmp
into
add
lock
outs
jno
jg
pop
out
adc
dec
mov
adc
out
(bad)
out
push
jo
lds
xor
add
mov
xor
jo
popa
sub
test
shr
cli
push
sub
ins
mov
popa
clc
jb
add
fadd
add
xor
add
bound
push
adc
fcmovnb
in
popf
dec
imul
adc
retf
outs
out
call
loopne
inc
dec
add
xchg
adc
sbb
push
pop
jno
xchg
dec
mov
hlt
inc
scas
je
inc
sbb
in
out
out
xchg
test
test
ja
(bad)
xchg
mov
dec
in
inc
add
ins
push
dec
in
int
or
xchg
enter
add
clc
out
imul
data16
xor
xchg
mul
add
dec
repz
xor
push
xchg
loop
pop
fmul
add
add
inc
xor
mov
je
emms
jno
hlt
inc
out
adc
je
icebp
test
dec
inc
lahf
je
not
dec
jb
dec
nop
add
outs
test
cmc
sbb
je
mov
or
push
outs
jne
(bad)
ins
sub
fs
neg
stc
mov
jne
mov
ins
pusha
xchg
push
popa
sub
outs
push
pop
mov
fadd
xor
jbe
daa
in
sahf
cmp
jne
sbb
or
jbe
mov
call
inc
add
jno
out
jne
adc
das
cli
jno
jae
fist
pop
jp
pop
add
and
adc
xchg
outs
sub
ja
jge
sbb
rcr
sbb
out
mov
js
mov
inc
mov
mov
(bad)
push
mov
push
pop
jo
xor
add
and
fisub
push
jbe
xchg
out
stos
sbb
movs
stc
jae
sbb
retf
aas
test
jl
fistp
cld
pop
enter
cld
mov
cli
jne
cli
movs
ja
dec
pop
add
nop
add
adc
push
pop
sub
call
add
add
call
cmc
loopne
out
jno
ficomp
or
shl
mov
out
push
gs
jb
cwde
sti
mov
stc
push
lock
das
sub
daa
xchg
popf
out
mov
scas
inc
add
add
jg
clc
(bad)
jg
lahf
jg
pop
std
inc
sub
sbb
jp
(bad)
inc
xchg
call
push
jmp
stos
test
jmp
pop
push
je
in
adc
inc
dec
or
add
mov
add
add
or
in
xchg
daa
push
push
or
jecxz
add
and
shl
jns
add
gs
test
mov
mov
in
xchg
test
lahf
ds
fidiv
fs
loopne
add
cmp
dec
pushf
push
and
ret
cmp
sub
mov
mov
add
in
jmp
adc
inc
cdq
push
xor
js
mov
repnz
xor
int3
call
cmps
dec
je
adc
inc
adc
pop
in
adc
rol
push
dec
or
add
and
xchg
sub
loope
test
or
shr
dec
mov
arpl
fisub
rcr
daa
pop
(bad)
push
sub
and
in
test
bound
je
sub
or
icebp
add
shr
jne
inc
xchg
pop
or
cwde
mov
sbb
adc
lahf
nop
mov
cmps
pop
push
push
inc
mov
hlt
ror
and
inc
mov
mov
inc
mov
ret
and
retf
sub
push
js
dec
push
fsub
lea
(bad)
mov
js
xchg
fidivr
test
xchg
jnp
(bad)
push
push
add
add
push
adc
in
inc
inc
or
shl
mov
pusha
pop
jo
mul
adc
daa
lahf
call
dec
dec
inc
pop
lea
sbb
cmp
adc
mov
add
or
add
popf
xor
jb
mov
add
(bad)
jbe
sbb
jle
xchg
push
dec
mov
push
icebp
and
adc
mov
mov
pop
push
jne
sub
xlat
pop
or
addr16
jbe
xchg
cwde
bound
(bad)
daa
mov
(bad)
test
and
sub
xchg
push
add
sbb
mov
ds
pop
mov
hlt
add
sub
neg
add
jo
add
sahf
adc
pop
sbb
mov
rol
xor
mov
cmp
mov
loop
inc
gs
pop
add
enter
ret
ror
daa
push
or
loope
pop
ins
movs
pop
les
mov
lods
or
cwde
adc
jl
mov
push
dec
mov
push
or
dec
inc
dec
push
inc
enter
xor
adc
or
push
inc
add
cdq
out
xor
and
fcom
xor
je
nop
inc
push
repz
adc
ror
je
xchg
push
sbb
out
inc
sbb
fwait
cld
jb
es
or
adc
call
adc
fdiv
xor
inc
adc
jmp
and
stos
or
imul
pop
add
(bad)
pop
jae
sbb
sub
pop
lock
mov
ss
xor
inc
ror
ss
fiadd
lahf
pop
sahf
loopne
js
gs
loop
jne
and
mov
push
out
lods
out
(bad)
(bad)
call
aas
data16
enter
and
dec
lea
mov
fwait
adc
mov
test
mov
pop
xchg
mov
mov
inc
sbb
clc
pusha
xor
or
sahf
div
loop
test
inc
aaa
in
lds
mov
jb
test
addr16
mov
shl
scas
je
fcmovnu
sbb
mov
imul
adc
push
inc
add
inc
push
test
ret
(bad)
out
push
xor
xor
and
ret
push
add
xor
xchg
xor
xor
fadd
fsub
adc
push
cmc
xchg
ret
imul
pop
ins
mov
cmp
inc
ds
and
pusha
or
fbstp
xchg
ret
or
and
mov
and
xchg
arpl
stos
push
add
push
mov
add
sbb
add
sbb
xchg
xchg
add
ins
gs
or
xor
or
sub
push
outs
mov
adc
ror
ja
fmul
push
add
addr16
dec
or
test
or
inc
push
jae
cld
sbb
xchg
and
jg
js
sbb
mov
fs
(bad)
or
jo
inc
mov
xor
pop
in
fiadd
pop
imul
cmp
cwde
dec
add
pop
out
xor
and
imul
mov
scas
mov
pop
popa
mov
mov
jl
rol
adc
cmp
les
int
repnz
sahf
dec
addr16
imul
in
mov
leave
jb
mov
(bad)
loop
xchg
dec
and
(bad)
aam
loopne
lar
mov
pushf
adc
daa
mov
push
inc
rcr
mov
daa
loope
arpl
xor
(bad)
cmp
into
in
sub
mov
scas
sbb
add
or
mov
sbb
add
les
cmp
mov
dec
cmps
xor
sub
cmp
inc
add
outs
pop
(bad)
dec
rol
mov
dec
cmps
bound
mov
mov
bound
nop
mov
inc
adc
test
out
test
cdq
jl
test
sbb
loope
rcl
fiadd
push
hlt
add
and
and
jmp
pusha
or
and
or
sub
xor
push
fsub
cmp
xor
mov
add
call
xor
add
icebp
movs
pop
stos
out
xchg
ins
les
and
into
nop
xchg
xchg
adc
ins
sti
aad
xchg
sar
mov
ret
scas
add
add
ror
push
ror
inc
push
sbb
push
and
sbb
int
test
test
imul
cmp
imul
test
pop
inc
adc
ret
and
pop
inc
adc
loop
pusha
and
inc
jo
sub
cmp
jle
inc
jnp
lods
pusha
push
sub
and
test
sub
loopne
mov
aad
imul
rol
and
add
jae
fadd
cmc
arpl
gs
sub
mov
gs
and
mov
add
add
shr
rol
mov
add
mov
retf
mov
and
aas
in
aam
shl
xchg
lea
add
mov
cmc
xor
fcmove
inc
xchg
popa
int3
popa
push
fsub
js
xlat
or
ins
or
mov
popa
jno
cmp
call
imul
sub
mov
mov
dec
sub
ror
je
outs
adc
call
test
dec
push
xchg
pop
adc
(bad)
xor
jmp
popa
sbb
pop
test
fstp
lock
jno
jo
or
add
mov
push
mov
mov
addr16
int
repz
and
push
cwde
pop
xchg
nop
test
mov
mov
add
inc
clc
mov
and
or
das
inc
add
sub
inc
sbb
adc
mov
push
lods
out
mov
dec
jmp
sbb
xchg
mov
or
lods
jecxz
loopne
push
dec
inc
add
lea
sub
mov
mov
jecxz
adc
mov
into
daa
leave
rcr
sbb
pop
add
inc
mov
sbb
int
sbb
loop
ja
add
cmps
shl
fisttp
fsub
push
jmp
cmp
dec
je
lahf
mov
sub
adc
dec
es
outs
jne
dec
cwde
ret
aas
call
xchg
mov
sub
out
cmp
sub
js
sbb
aam
mov
xchg
inc
fdivp
sahf
or
and
sub
not
sbb
ret
or
loop
sub
xchg
cmp
xchg
mov
fwait
pop
jo
inc
aas
aas
sar
mov
jmp
mov
pop
and
mov
xor
add
cwde
add
and
pop
mov
stc
sahf
jbe
popf
bound
fcomip
cdq
dec
icebp
(bad)
mov
pop
mov
lahf
fild
push
pop
sbb
addr16
rcl
fbld
sbb
cmp
test
in
pop
test
inc
in
rcr
add
mov
push
sub
pop
and
mov
cld
(bad)
push
add
std
or
add
inc
sbb
rcr
sbb
call
add
popw
lock
mov
pusha
add
add
sbb
ficom
jbe
or
movs
gs
jno
mov
or
test
or
dec
and
test
or
test
ret
inc
xor
pop
xor
pusha
psubd
add
and
popa
add
mov
clc
add
and
loope
and
ins
loope
and
fimul
call
jmp
popa
retf
aad
sbb
into
mov
inc
leave
loope
xchg
enter
rcr
rcl
rcr
rcl
add
and
sbb
jecxz
add
adc
add
lock
and
sbb
sbb
das
push
pop
rol
cdq
rcr
sbb
lds
and
popa
mov
stos
add
and
je
push
retf
sub
lahf
push
call
sbb
jbe
pop
mov
mov
dec
add
dec
or
sbb
or
xor
and
cld
loop
popf
fcmovbe
dec
adc
xor
push
inc
arpl
push
pushf
neg
sub
aaa
bound
lods
add
pop
push
popf
sbb
fsubr
sub
pop
das
dec
and
sub
xor
pushf
cmp
jecxz
xchg
inc
loopne
ficom
or
adc
inc
or
add
fldenv
or
and
dec
and
popf
call
sbb
rol
push
ror
rol
adc
pop
movs
add
dec
or
ror
pop
dec
pop
xchg
pop
inc
xchg
sub
sub
sbb
and
mov
and
cmp
push
jb
aas
jle
push
jb
push
add
add
or
(bad)
xor
inc
mov
cs
movs
adc
ins
gs
call
ret
iret
xor
fistp
test
push
inc
pop
and
push
aam
sbb
jecxz
mov
sbb
dec
push
pop
stos
arpl
push
cmp
popa
xchg
ret
or
and
sub
loop
mov
or
mov
pop
ins
es
add
and
mov
xor
loop
aam
sbb
clc
inc
ins
(bad)
iret
ins
out
fistp
push
das
rol
add
mov
or
mov
lock
pop
bound
nop
ret
out
lods
sbb
add
int3
mov
cmps
add
push
shl
pop
mov
loop
cmps
movs
sub
mov
pop
fldenv
jge
and
loop
jle
jg
push
or
cmps
xor
or
not
in
inc
pop
mov
and
les
fisubr
out
(bad)
xchg
xchg
pop
addr16
add
mov
enter
sub
loop
or
jp
inc
inc
rcl
sub
push
cmps
int
sub
loope
jmp
bound
and
jg
fwait
sub
xor
cmc
ins
mov
cmps
or
mov
ret
rcl
dec
jle
add
push
fistp
psubw
jb
pop
mov
fwait
xchg
pushf
retf
stos
sub
sbb
aas
add
inc
or
mov
rol
pop
jb
es
push
imul
cs
shl
pop
stos
pop
fldenv
adc
push
loopne
push
mov
(bad)
jmp
push
lods
inc
cmp
sbb
(bad)
ficom
lods
out
dec
scas
push
es
push
add
xor
mov
popf
inc
cmps
sahf
ret
or
imul
sub
inc
dec
cmp
fnstcw
mov
push
mov
test
xchg
sub
ds
push
and
adc
mov
lock
imul
sbb
int3
mov
add
mov
dec
jae
xlat
mov
lods
fwait
xchg
add
fiadd
loopne
sub
lods
mov
pop
sbb
inc
lods
and
ins
or
add
lock
jmp
sub
fcmovne
inc
leave
retf
stos
sub
sahf
inc
retf
sbb
retf
inc
adc
mov
cmp
(bad)
ins
inc
test
ins
or
add
adc
add
mov
or
add
fistp
sub
sub
out
es
xchg
add
ins
cmp
fisubr
sahf
outs
sub
pop
rol
pusha
add
sbb
sub
push
jb
mov
sub
test
clc
lea
sub
es
std
push
fistp
(bad)
ja
int3
mov
inc
pop
in
or
and
sbb
dec
std
adc
mov
out
(bad)
gs
sub
stos
inc
das
cmp
movs
out
add
and
and
mov
inc
or
outs
(bad)
xchg
loopne
xchg
inc
addr16
sub
scas
inc
fiadd
sub
and
(bad)
push
das
inc
das
inc
add
inc
pop
das
pop
outs
iret
test
add
or
mov
mov
pusha
and
lods
es
pop
cmps
add
push
out
inc
daa
in
lock
cmps
push
cld
retf
es
call
push
add
imul
or
adc
pusha
add
frstor
nop
ins
add
lock
out
stos
lahf
repnz
movs
call
adc
sub
outs
inc
iret
(bad)
int
and
xadd
sbb
leave
test
je
dec
lods
arpl
retf
jo
sbb
adc
sbb
xor
retf
jb
sti
dec
add
je
xor
push
mov
fs
adc
add
sub
push
jno
es
add
mov
push
call
cmp
add
int
sbb
cdq
pop
movs
push
ins
xchg
movs
repnz
(bad)
lea
pop
bswap
fsubr
push
iret
outs
adc
mov
add
sbb
add
xchg
adc
adc
loop
pop
jnp
or
xchg
out
enter
rcr
dec
and
cli
sbb
lock
and
cmp
inc
sbb
es
retf
adc
iret
retf
in
add
inc
sub
iret
and
add
cmp
in
sub
jecxz
fild
jb
sub
push
cs
push
and
inc
sbb
mov
xor
fwait
sbb
add
sbb
shl
mov
push
pop
lahf
dec
xor
(bad)
add
out
push
adc
js
cmp
lods
inc
sub
mov
test
adc
ror
add
aam
out
sahf
add
int
mov
je
push
or
jmp
sbb
mov
pop
dec
dec
and
inc
jle
push
xor
fadd
jl
xor
je
jbe
inc
pop
rol
sbb
add
add
mov
and
test
stos
and
add
mov
mov
adc
ror
add
add
add
fdiv
je
mov
inc
dec
cmps
xor
mov
and
sub
push
push
mov
jo
xor
in
mov
xchg
lods
aas
cmps
xor
scas
cli
mov
push
pop
xor
(bad)
sub
jb
jg
xchg
icebp
inc
sub
pop
jge
stos
lds
cmp
inc
mov
pop
mov
xor
inc
lock
sbb
ror
ss
mov
test
and
mov
stos
mov
data16
ja
addr16
mov
adc
cld
call
out
or
add
xchg
add
and
and
outs
jnp
fadd
test
and
idiv
xor
inc
pop
arpl
stos
aam
adc
pop
mov
sbb
or
(bad)
cmp
mov
daa
inc
adc
xor
sbb
push
sbb
sbb
inc
dec
stos
mov
mov
ret
adc
stos
(bad)
jl
inc
lahf
data16
sbb
xchg
imul
outs
pusha
imul
pop
mov
push
mov
js
inc
mov
movs
rol
ins
outs
mov
mov
cmp
jae
lahf
clc
inc
inc
push
sti
mov
and
sbb
fwait
hlt
pop
push
xchg
shl
jno
jne
pop
popa
rol
xor
ja
jne
inc
jbe
cmp
mov
inc
sub
rol
and
stos
push
mov
pop
adc
cmp
sbb
jg
pop
popa
ror
shl
popf
cmp
mov
pop
sti
pop
rol
std
imul
fdivr
add
lahf
out
pop
mov
pusha
xor
mov
add
add
or
adc
mov
or
jbe
cwde
inc
add
inc
dec
or
shr
bound
sub
and
sub
mov
dec
sar
or
aad
fistp
jp
test
jbe
stos
stc
mov
inc
das
xor
xor
jns
cs
pop
aad
mov
cmc
pop
jmp
sub
sbb
add
mov
js
mov
pop
pop
dec
dec
add
pop
and
scas
ror
and
outs
pusha
jae
hlt
cmp
or
push
push
stc
adc
ror
mov
shl
mov
push
inc
cmc
adc
xchg
punpcklbw
sub
add
jbe
outs
imul
popf
xchg
push
cld
lds
sti
call
rol
mov
inc
mov
sbb
adc
mov
inc
iret
aam
dec
xchg
sahf
pop
loope
or
xor
jbe
ret
adc
and
sbb
mov
pop
fadd
adc
jge
aas
cmp
cmp
fwait
(bad)
mov
mov
popa
retf
dec
call
cmp
jbe
or
mov
xor
ja
sbb
xor
adc
fiadd
inc
xor
fwait
cmp
or
inc
cwde
add
call
mov
aaa
sbb
mov
movs
shl
arpl
and
ret
aaa
dec
pop
inc
and
push
inc
and
dec
xor
rcl
nop
and
les
test
sbb
rcr
adc
ins
icebp
nop
add
push
pop
mov
sbb
leave
xchg
xor
ror
mov
stc
xchg
push
dec
cdq
cmps
pop
aad
add
mov
test
mov
and
out
pop
shl
add
adc
jp
mov
test
and
xchg
shl
adc
addr16
fldenv
fdiv
fdiv
repz
shr
call
inc
sahf
hlt
jmp
mov
cmp
clc
shl
xchg
es
sbb
dec
xor
stos
inc
or
je
shl
sub
fst
test
pop
cvtdq2ps
xchg
arpl
lea
fs
rcl
xchg
ret
pop
mov
dec
push
xor
fst
cmps
push
pop
sub
loop
(bad)
dec
mov
icebp
mov
cmp
xor
push
test
test
(bad)
mov
mov
enter
imul
dec
xchg
leave
xchg
mov
or
mov
xchg
push
push
cmp
les
imul
shr
ror
lea
(bad)
cmp
sub
xor
(bad)
fidivr
add
cmp
in
mov
mov
adc
clc
rol
outs
or
mov
test
pop
xor
pusha
add
jp
jl
mov
adc
ret
mov
mov
xor
dec
ins
mov
push
sbb
xor
or
rcr
lock
dec
push
sub
ret
int3
pop
arpl
fs
stos
test
shl
sbb
inc
sub
mov
push
jae
movs
(bad)
loope
repnz
cld
or
cmp
ins
ret
pusha
ins
jns
xchg
jmp
arpl
dec
sub
and
loope
adc
and
int3
and
sbb
adc
je
adc
(bad)
aam
retf
int
jecxz
jae
inc
push
test
dec
ret
sbb
mov
fs
inc
push
test
je
inc
(bad)
inc
add
push
inc
add
xchg
pop
cvtdq2ps
or
pop
xor
aad
push
call
jg
mov
jne
xchg
test
test
call
mov
mov
add
pusha
inc
and
push
mov
dec
scas
mov
lods
popf
cdq
sub
sub
xchg
aas
adc
add
pop
xor
sbb
cmp
psraw
push
add
xchg
shl
loope
fdivr
dec
pusha
xchg
repnz
push
pop
or
adc
xchg
loope
imul
call
jno
push
arpl
retf
test
sbb
push
test
jb
and
fstp
(bad)
xchg
fisttp
jmp
cmp
loopne
shl
inc
add
inc
or
inc
xchg
daa
mov
jecxz
aam
lods
pop
mov
mov
mov
(bad)
clc
sbb
scas
xor
pop
clc
mov
dec
xchg
jle
and
mov
push
mov
xchg
push
inc
cmp
inc
or
cmps
outs
mov
and
mov
sub
popf
add
lea
add
jae
aas
add
mov
lock
adc
or
pusha
data16
pop
popa
add
inc
xlat
add
mov
inc
mov
pop
or
push
in
adc
stos
jns
mov
add
mov
pop
mov
pop
mov
(bad)
and
inc
adc
fmul
xchg
cmp
leave
jp
adc
mov
bound
jp
adc
cld
mov
loope
dec
or
sbb
xor
loope
sbb
cs
stos
dec
(bad)
fdivp
mov
cwde
mov
movs
pop
pop
mov
mov
pop
xor
and
retf
dec
mov
fisub
and
mov
jns
jge
cs
imul
sbb
outs
or
or
inc
sbb
pop
pop
dec
pushf
inc
mov
xor
push
fwait
or
xchg
enter
icebp
outs
push
cmp
or
and
mov
add
data16
sbb
shl
xchg
sbb
add
mov
je
mov
inc
or
pop
cmps
adc
push
lds
test
xor
inc
test
xchg
hlt
ficom
fdivr
ret
das
push
inc
shl
dec
xchg
ins
dec
sub
movs
xchg
mov
xor
mov
jmp
fbld
and
and
add
jo
pop
pop
cmp
or
push
cs
jo
xabort
aas
(bad)
mov
mov
das
sbb
xchg
push
push
call
aam
pop
out
inc
sub
inc
xchg
dec
inc
sub
call
into
inc
xchg
mov
push
fcomp
add
sbb
mov
or
or
xchg
and
cs
xchg
jecxz
in
(bad)
jl
inc
or
(bad)
les
push
mov
lds
mov
inc
xchg
or
lods
and
xchg
ror
cmc
not
ret
add
sbb
push
xor
ds
mov
add
pusha
add
and
hlt
jo
adc
lds
aaa
pop
dec
adc
fwait
mov
test
dec
vrsqrtss
push
mov
inc
cwde
push
and
nop
mov
xchg
xor
leave
mov
jb
es
arpl
shr
arpl
add
sbb
add
sbb
add
aad
inc
sub
xchg
mov
mov
add
xor
and
mov
aam
or
add
xchg
popf
ins
pop
and
add
fwait
push
loop
fdiv
dec
sbb
adc
jb
push
push
xor
xchg
cmp
movs
xor
test
sub
pop
fcmovnu
test
pop
sub
sbb
mov
ret
or
add
enter
mov
test
into
dec
in
nop
test
mov
or
loopne
pop
in
push
sbb
xor
aas
add
(bad)
mov
push
mov
sbb
pusha
add
mov
inc
add
cwde
(bad)
cs
cmp
loop
xchg
push
pusha
cmp
cwde
adc
push
add
dec
shr
ret
push
leave
or
and
fimul
xchg
daa
loop
xchg
fadd
daa
fisub
inc
icebp
mov
mov
mov
inc
mov
jecxz
jl
mov
mov
arpl
pop
add
inc
inc
xchg
mov
fs
sti
add
daa
fidivr
mov
icebp
inc
and
rol
add
das
dec
push
pop
das
aas
mov
ret
pushaw
call
add
pop
repz
loopne
add
into
je
repz
add
jg
fisub
test
ror
jbe
inc
das
outs
xchg
pushf
aam
movs
jmp
ret
mov
dec
test
rcr
mov
lea
rcl
icebp
fmul
cmps
dec
mov
mov
add
mov
or
cs
adc
aas
ins
test
das
mov
push
jb
out
add
mov
adc
mov
or
mov
int
xchg
repz
pop
mov
or
nop
rol
add
xchg
ret
inc
rol
bswap
ins
cmp
mov
sbb
and
nop
mov
and
cmp
call
mov
add
fisttp
push
inc
push
or
out
adc
icebp
mov
loope
mov
out
sub
add
xchg
sbb
add
stc
add
lock
dec
mov
cmp
imul
ss
push
int3
jae
call
pusha
xor
(bad)
jmp
or
cmp
test
dec
sub
or
mov
movs
(bad)
mov
ret
inc
fs
mov
fcomp
and
mov
sbb
sti
jb
and
jne
sub
loopne
mov
xor
ror
test
js
jo
aas
ins
or
or
(bad)
enter
xor
in
mov
push
and
sub
mov
das
rcl
pop
jb
ficom
lods
out
outs
push
mov
add
add
adc
inc
adc
adc
add
pop
or
push
add
mov
test
outs
or
clc
push
test
xchg
(bad)
stc
test
jp
pop
fwait
(bad)
in
movs
(bad)
cli
lea
cwde
add
loope
(bad)
mov
fsubr
xchg
ins
lds
xor
pinsrw
lods
cld
sub
std
jl
or
or
inc
adc
and
mov
(bad)
adc
push
stos
(bad)
in
adc
add
push
mov
mov
add
add
jo
push
outs
add
xor
pop
sar
add
push
xchg
popa
sbb
add
adc
out
ror
xor
add
add
rcl
and
and
jmp
les
mov
adc
clc
fsubr
(bad)
fimul
or
pusha
movs
jnp
mov
xchg
dec
sbb
stc
int3
push
(bad)
pusha
in
or
sti
ds
mov
sub
adc
(bad)
(bad)
cld
lock
sbb
jge
push
call
test
scas
scas
data16
retf
iret
icebp
sbb
sub
loop
inc
jno
add
add
je
xor
add
repz
imul
sub
dec
outs
adc
mov
or
mov
adc
jge
adc
push
add
popa
push
or
(bad)
jmp
inc
and
inc
rcl
adc
add
sub
jb
stos
push
and
mov
scas
(bad)
sbb
inc
sbb
xor
dec
loopne
mov
mov
pop
int
fist
in
cmps
in
mov
push
xor
cld
test
cld
hlt
into
push
icebp
sbb
out
std
mov
sub
add
and
mov
sub
and
lods
ror
out
push
pusha
sub
call
icebp
xor
adc
mov
xchg
fsqrt
mov
inc
add
mov
or
and
cmp
adc
xor
cs
das
xchg
call
add
and
adc
stos
xor
xor
add
add
(bad)
and
and
clc
push
xacquire
clc
pop
add
mov
sbb
xor
dec
push
es
rcr
xor
mov
es
in
jbe
(bad)
jp
and
ret
jno
and
icebp
loope
mov
ror
nop
mov
add
xchg
cmp
cmp
mov
out
out
sub
xchg
repz
push
xchg
add
int
popa
pop
or
dec
(bad)
into
sub
xor
arpl
cmovo
(bad)
push
add
xor
push
fucompp
imul
add
add
xchg
inc
adc
xor
rol
add
xor
shl
test
mov
push
rol
rcr
xchg
xor
jae
jbe
inc
mov
inc
call
adc
pusha
or
dec
test
jo
into
ret
std
xchg
or
lock
or
sub
inc
jnp
inc
jnp
or
pop
cs
jecxz
in
push
ud1
and
in
xchg
add
push
add
mov
jae
fist
cmc
or
sbb
and
sbb
add
add
xor
outs
pop
out
sub
push
test
ins
inc
mov
push
aas
adc
ins
xor
and
xor
xor
sbb
inc
gs
daa
in
es
out
inc
push
aam
inc
(bad)
adc
out
outs
sub
push
pop
pusha
std
(bad)
adc
and
xchg
popf
call
push
pop
inc
xchg
sub
add
push
xchg
push
dec
addr16
and
push
ins
cmc
pop
push
loopne
in
dec
scas
aam
mov
das
daa
jo
add
hlt
add
push
pop
inc
loopne
aam
push
jmp
add
loope
int3
pusha
pop
sub
loope
ror
mov
push
nop
shl
push
dec
inc
or
inc
std
adc
dec
rcl
inc
push
or
push
or
adc
jnp
mov
mov
adc
mov
(bad)
(bad)
push
xor
shl
push
sub
pop
dec
adc
lods
inc
push
inc
inc
push
cmc
xor
xchg
push
xlat
push
sub
aad
mov
push
mov
cmp
popa
and
lds
mov
xchg
cmc
add
loopne
loop
push
fadd
sbb
mov
mov
test
dec
rcl
mov
adc
out
and
cmc
inc
xor
shl
xchg
stc
in
cmc
pop
inc
xor
scas
add
mov
dec
push
add
aad
pop
inc
sub
or
ins
adc
or
cmp
push
arpl
or
arpl
arpl
mov
inc
adc
lods
push
test
int
push
fistp
pop
push
pop
lds
loopne
shl
add
out
mov
inc
add
pusha
push
inc
pop
lea
mov
mov
mov
imul
jno
ss
mov
rcl
(bad)
ins
and
sbb
and
sub
pusha
jmp
sub
outs
icebp
ss
outs
aaa
xchg
cmp
div
or
pusha
out
loope
jae
hlt
push
xchg
hlt
js
xor
pop
rol
loopne
xchg
and
sahf
in
inc
push
adc
adc
and
jmp
hlt
add
jne
hlt
push
test
xchg
inc
or
jbe
mov
fs
mov
aad
jns
ja
mov
iret
add
sub
add
xlat
js
add
xacquire
and
jb
mov
or
jae
pop
xchg
outs
mov
mov
test
or
sbb
fidiv
pshufb
pop
pop
popa
push
add
mov
adc
sub
rcl
or
outs
bound
pmaddwd
mov
pop
xor
aad
in
nop
dec
inc
jno
push
pop
dec
mov
add
pusha
xchg
and
mov
lods
add
pop
sbb
mov
into
and
pop
jp
sub
jb
jnp
aad
mov
mov
sbb
or
xchg
pop
mov
mov
lahf
fsub
cwde
xchg
xchg
aad
pop
inc
or
pop
mov
jle
rcl
adc
or
stc
xchg
leave
xchg
jp
hlt
and
add
xchg
invd
fwait
add
dec
adc
ret
popa
push
lahf
mov
cmp
(bad)
ja
ja
adc
xor
inc
add
dec
popa
add
push
loopne
popf
popf
ja
add
hlt
(bad)
push
imul
cmp
repnz
dec
pop
add
adc
add
push
xchg
ds
adc
mov
xlat
mov
rcl
pop
cmp
pop
add
jecxz
adc
aas
lods
xor
inc
xor
xchg
push
sub
cmp
mov
ss
hlt
mov
nop
jnp
fwait
popa
rcl
pop
push
ins
das
pushf
and
pop
call
sub
or
(bad)
fidivr
xchg
sub
xchg
in
jns
push
add
loope
adc
int
add
pusha
cs
xchg
adc
mov
push
sbb
sbb
mov
popa
add
pop
add
inc
xchg
call
push
jp
stos
or
mov
pop
jmp
in
dec
sbb
push
call
xlat
cmps
gs
mov
setbe
add
add
dec
add
aam
sub
cdq
test
sbb
push
test
mov
outs
xor
icebp
jns
loope
pop
repnz
cmp
add
call
push
xchg
adc
mov
mov
add
les
push
jb
stc
mov
fild
sub
sub
jb
adc
fwait
jo
and
mov
xlat
cmps
mov
or
xor
clc
xchg
jle
pop
and
inc
pop
mov
mov
cmp
pop
rcr
xchg
in
mov
cmp
stc
xchg
jnp
mov
pop
cmp
cmp
mov
stos
add
(bad)
loopne
cmp
les
jle
mov
or
das
push
scas
loopne
inc
add
add
sbb
mov
jp
ins
mov
daa
pushf
dec
cli
mov
pop
add
sbb
fst
mov
add
push
cmps
mov
push
push
ret
push
test
(bad)
add
sar
mov
arpl
jns
adc
jae
pop
add
dec
and
das
sub
jp
pop
xor
lds
and
add
add
or
xchg
mov
or
mov
jbe
inc
test
out
mov
dec
dec
dec
scas
gs
aam
daa
mov
and
add
jg
sbb
dec
pop
leave
cmc
sbb
xchg
aaa
je
test
dec
enter
adc
bound
mov
xchg
mov
adc
sar
arpl
jae
adc
mov
mov
and
mov
and
or
add
cs
inc
mov
sbb
add
cmp
stc
fidivr
ins
and
in
sbb
pop
xchg
sbb
cmc
push
ret
mov
jmp
loopne
sub
or
dec
addr16
scas
sbb
mov
inc
pop
or
cmp
retf
sbb
mov
sti
dec
fldenv
add
loopne
ja
cmp
sub
(bad)
out
mov
hlt
mov
mov
enter
sbb
fs
ins
mov
pop
popa
cmp
fisttp
or
in
xor
fisttp
jle
or
jno
seto
(bad)
ror
ss
lods
inc
popa
loop
ror
xchg
loopne
pop
push
mov
or
jmp
mov
retf
jae
clc
int3
sbb
add
ror
mov
xlat
and
push
ds
mov
adc
(bad)
out
cld
add
sbb
call
shl
into
mov
clc
call
jmp
fwait
pop
dec
je
mov
cmc
pop
aas
jmp
(bad)
sbb
cmps
imul
xchg
or
cmp
add
push
pop
(bad)
repnz
add
and
jne
aaa
pusha
and
push
add
(bad)
int3
push
jnp
cmp
add
(bad)
or
ror
add
add
add
out
xor
cmp
scas
in
jno
popa
pop
add
pushf
call
mov
iret
mov
inc
fist
cwde
mov
lods
pop
mov
sbb
jmp
inc
xor
adc
pop
mov
mov
mov
retf
push
sub
dec
rol
xchg
and
bound
add
mov
or
dec
(bad)
cld
cmp
mov
and
adc
add
ficom
push
adc
cmp
or
aam
pop
jp
jmp
sub
xor
pusha
add
xchg
daa
imul
pop
xchg
fdiv
jmp
outs
fidiv
popa
inc
and
push
dec
add
test
js
and
or
into
inc
adc
push
cmps
ss
and
mov
xor
mov
mov
push
or
sub
jno
ret
mov
fistp
pop
xor
xor
or
xor
and
adc
dec
push
test
xchg
adc
cmp
inc
loopne
sub
lods
in
fsubr
push
movs
push
mov
(bad)
mov
dec
pop
xchg
mov
push
pushf
push
outs
jecxz
movs
jnp
push
jp
rcl
jle
data16
jmp
bound
pop
inc
sbb
inc
mov
rcr
dec
mov
or
xor
mov
mov
push
dec
inc
fnstenv
xchg
ins
mov
push
push
ins
cmp
xchg
fwait
aaa
ficom
and
outs
add
dec
ror
or
enter
add
leave
daa
loopne
add
add
jl
xchg
push
jecxz
add
jne
push
push
ins
test
add
test
push
(bad)
push
push
xchg
dec
adc
mov
cwde
add
add
popa
add
inc
lock
xchg
popa
test
and
and
test
mov
mov
fisubr
nop
cmp
sub
outs
pop
stc
mov
sub
rol
pop
xchg
mov
add
cmp
sbb
xchg
pop
add
pop
pop
mov
inc
mov
sahf
or
pop
push
push
outs
ret
adc
(bad)
cdq
add
mov
cmc
(bad)
leave
add
xlat
pop
es
add
add
adc
xchg
call
jp
push
(bad)
int
call
outs
cmp
sbb
(bad)
sbb
mov
xchg
int
aad
pushf
and
pop
and
adc
nop
add
xchg
aad
sti
(bad)
cmove
push
pop
sahf
mov
popa
pop
push
add
and
test
add
xor
dec
cmp
sub
mov
mov
or
(bad)
sbb
or
dec
shl
test
mov
xor
(bad)
mov
push
xor
or
dec
inc
mov
sub
mov
mov
out
or
int
or
int3
repz
ds
call
push
cwde
jo
sub
adc
adc
sbb
and
mov
jo
or
mov
add
push
inc
jl
cld
mov
adc
xchg
ret
enter
xor
mov
scas
xchg
or
aaa
mov
mov
scas
fcmovnb
mov
jle
scas
mov
or
and
sahf
fisttp
int
sti
stc
push
rol
inc
sub
leave
push
out
inc
xor
hlt
and
xor
add
hlt
rol
les
ins
ja
stos
mov
ret
rol
clc
xchg
adc
and
or
out
dec
popa
rcr
test
shr
mov
retf
loop
and
mov
arpl
dec
(bad)
loope
mov
jno
mov
sti
pusha
add
movs
fmul
stc
fistp
into
std
jo
punpcklbw
sub
adc
adc
adc
pop
push
mov
pop
aam
push
enter
call
test
sbb
or
arpl
mov
xchg
xchg
das
and
xor
pusha
xchg
dec
cmp
data16
sbb
inc
mov
pop
les
push
mov
xchg
xchg
movs
mov
mov
push
jle
movs
inc
fmul
je
call
sub
mov
cmps
movs
sub
sub
shl
add
cli
mov
nop
es
or
add
clc
inc
jne
pop
ror
xor
jg
jmp
mov
and
mov
xchg
fsub
or
loopne
xchg
xor
pop
aaa
mov
push
push
push
mov
mov
in
pusha
scas
or
xchg
enter
jb
mov
dec
add
test
ret
jl
mov
arpl
or
fcom
test
hlt
cmp
sub
xchg
es
and
sbb
cli
push
add
push
pusha
mov
popa
test
loopne
dec
jp
and
test
addr16
retf
xchg
xchg
call
mov
ins
sbb
inc
shr
movs
popa
dec
push
ficomp
xchg
ins
adc
and
call
pop
push
sub
cmps
push
add
mov
je
or
(bad)
cmp
push
xchg
(bad)
imul
mov
mov
out
js
add
out
adc
loope
cmp
add
mov
popa
adc
mov
inc
sub
call
ror
pop
mov
push
stos
jb
(bad)
or
adc
sar
in
lea
sub
adc
lods
add
push
rcr
dec
sbb
sub
inc
xor
fwait
or
mov
pop
cmps
push
je
pop
leave
sahf
pop
xor
mov
or
push
ja
clc
sub
outs
loopne
rcr
dec
test
gs
test
inc
mov
rol
cbw
push
sbb
push
mov
push
sub
jle
mov
stos
cmp
clc
push
and
xor
adc
scas
ret
dec
add
gs
test
mov
jne
add
js
mov
mov
add
nop
add
nop
les
cs
inc
hlt
ja
push
push
fs
xchg
add
mov
add
sub
sbb
push
mov
cmp
cmp
push
mov
push
data16
sbb
fwait
push
lea
push
loop
or
jl
push
fistp
lods
loop
and
lock
add
add
rcr
adc
mov
adc
enter
movd
in
bound
add
ins
add
lods
inc
adc
mov
(bad)
cli
or
inc
daa
or
inc
pop
inc
adc
adc
rcr
mov
jmp
iret
jnp
lods
pop
inc
shr
or
call
inc
mov
dec
shl
scas
or
adc
adc
push
fiadd
arpl
push
mov
cmps
push
sbb
mov
cld
push
ss
inc
leave
dec
imul
xlat
and
pop
pop
inc
popf
ds
scas
ja
test
and
jb
pop
xor
xchg
mov
iret
lods
mov
cmp
sbb
(bad)
loopne
mov
sbb
jno
fwait
sbb
xchg
xchg
inc
fadd
jb
sbb
outs
retf
jg
dec
mov
ins
jl
dec
out
jl
xor
xor
in
jge
pop
jg
dec
es
or
cmp
aad
sbb
adc
(bad)
call
mov
push
jnp
ret
adc
jle
xor
jnp
xchg
jl
lds
js
mov
mov
xchg
jg
fcmovnu
outs
mov
pop
add
cdq
sub
xor
ds
xchg
shl
lods
mov
add
jg
add
mov
or
add
nop
cmp
mov
jmp
imul
push
dec
repnz
xchg
mov
inc
adc
sbb
dec
stos
je
fwait
mov
push
in
push
mov
imul
push
jge
inc
lahf
fs
or
stc
mov
mov
ja
iret
shr
sahf
add
jp
xor
shl
aam
(bad)
stc
adc
icebp
xchg
mov
dec
jo
mov
xlat
hlt
inc
add
mov
jnp
dec
or
xor
cmp
xchg
pop
lds
jae
and
lock
jge
ja
jl
js
(bad)
or
mov
fcmovb
jge
and
xchg
pop
cmp
sbb
inc
outs
inc
lock
add
sub
add
jg
xchg
imul
inc
dec
jg
and
adc
inc
mov
rol
push
pop
or
push
or
inc
adc
push
ja
dec
and
int3
div
jne
sbb
push
pop
enter
js
inc
inc
sub
js
xchg
adc
xchg
inc
sub
js
fs
xor
sbb
add
lahf
push
add
mov
inc
push
adc
nop
pop
push
inc
jg
idiv
and
xchg
add
pop
push
pop
mov
push
jecxz
or
pop
adc
sar
je
inc
aam
mov
add
sub
ds
mov
and
xchg
arpl
aad
cmp
cmp
es
add
iret
aam
push
adc
jae
sub
fsubr
shl
adc
inc
nop
push
test
sub
jno
mov
add
sbb
mov
scas
aam
fs
gs
pop
ret
loopne
and
push
loop
and
(bad)
sbb
leave
cmp
fmul
pop
aam
dec
xchg
in
imul
fisttp
dec
xchg
xor
sbb
or
add
mov
ror
in
push
mov
adc
inc
fs
idiv
inc
cmp
xor
pop
sbb
and
and
mov
cmps
push
arpl
mov
push
push
inc
xchg
mov
mov
popa
mov
retf
jnp
dec
and
test
or
add
cwde
xchg
and
ins
xchg
adc
cmp
jl
sbb
jb
jae
and
addr16
nop
or
dec
cwde
test
xor
(bad)
test
lock
cmp
nop
dec
jo
call
inc
jmp
add
fst
cmp
and
push
add
xchg
mov
cmp
sar
mov
push
mov
push
lea
push
pop
xor
mov
shl
(bad)
or
mov
repnz
movs
push
enter
rol
daa
cdq
fsubr
dec
pusha
add
inc
lea
pop
cmps
xor
imul
sbb
add
mov
mov
aaa
sbb
or
data16
jo
pslld
(bad)
inc
mov
pop
dec
mov
adc
xchg
shr
and
or
imul
sbb
arpl
sub
xchg
mov
inc
push
jno
cmp
add
push
add
add
xor
call
mov
sbb
stc
add
jmp
and
add
lahf
out
sbb
mov
fiadd
adc
sbb
mov
xchg
sbb
les
or
push
mov
cdq
push
cdq
iret
xchg
mov
add
pop
xor
mov
add
add
sahf
nop
or
pop
mov
add
push
mov
jp
pop
clc
cdq
or
push
inc
jo
out
or
sbb
or
jmp
inc
jns
add
enter
js
mov
dec
xor
jo
add
or
cli
nop
xchg
inc
lahf
sub
add
ficomp
xor
cli
sahf
out
pop
xchg
push
inc
add
inc
fisubr
pusha
add
mov
clc
or
sub
clc
shr
dec
lock
jp
out
pushf
push
xchg
or
push
and
xor
mov
jg
xchg
sub
pop
push
jns
or
shr
xor
sahf
mov
les
sub
pop
push
dec
xor
push
popa
lock
mov
or
sub
add
add
fisubr
call
scas
out
cwde
jl
adc
mov
mov
and
sbb
jecxz
adc
fdiv
out
push
out
gs
aad
mov
movs
mov
mov
sbb
out
or
mov
push
stc
(bad)
jns
loopne
xchg
push
mov
enter
mov
push
pop
add
mov
fcomp
call
jmp
stos
das
sbb
mov
xor
cmp
pop
int
stos
test
cmp
ds
fwait
adc
mov
dec
mov
lock
inc
rol
push
or
xor
inc
xor
add
lahf
pop
pop
or
lea
fisttp
push
cmp
mov
scas
mov
push
inc
or
mov
sub
jmp
push
popf
stc
add
jns
rol
sub
mov
imul
mov
outs
adc
or
pop
cmp
(bad)
pop
daa
leave
lods
call
test
jmp
adc
jnp
dec
sbb
cmp
mov
shl
jmp
ret
xchg
jl
and
repnz
(bad)
xchg
retf
aam
outs
loop
outs
les
xchg
jge
push
or
cdq
popa
loopne
mov
pop
mov
adc
sub
inc
cmp
xchg
mov
mov
pop
mov
sub
test
push
jmp
mov
ret
push
adc
xchg
nop
call
push
pop
nop
ja
(bad)
js
cwde
sub
add
popa
pusha
xchg
pop
mov
inc
ror
test
pushf
test
sub
sahf
stos
and
push
push
mov
aad
mov
mov
mov
and
pop
adc
cmp
cwde
mov
xchg
dec
mov
aaa
cmp
es
pop
lea
xchg
adc
jecxz
add
es
add
in
or
sub
adc
aas
jo
(bad)
popf
sbb
dec
cmp
cmps
inc
lods
pop
stc
lds
pop
mov
xchg
push
or
rcr
or
mov
cmp
pop
jno
sub
sar
sbb
cmp
xor
retf
(bad)
jae
imul
pop
(bad)
xor
fsubr
lods
cmp
scas
mov
imul
or
or
int3
dec
or
xchg
bound
or
push
ror
data16
jb
and
xor
popf
sbb
mov
sub
mov
xor
dec
pop
call
arpl
arpl
jns
mov
add
sub
inc
dec
fnstcw
test
retf
ror
lods
inc
jmp
xchg
mov
or
pop
or
and
jmp
retf
mov
cmp
fsub
jb
int3
test
and
repnz
les
mov
lgs
lea
push
ror
dec
dec
in
mov
test
add
push
sbb
sub
cmc
rcr
inc
retf
sbb
xchg
clc
cmp
lahf
push
movs
movs
or
pop
stc
add
or
test
jecxz
aam
inc
dec
mov
push
rcl
and
xchg
ins
rcl
les
xor
jae
pop
cmp
adc
adc
and
std
sub
xchg
les
cmp
shl
cmps
xor
(bad)
adc
retf
mov
mov
cmp
add
add
mov
dec
inc
add
fild
neg
adc
call
sub
sbb
and
and
inc
ficomp
shr
push
jno
add
stos
lods
adc
movs
fist
enter
push
out
lock
xchg
fsubp
push
ds
pop
jno
add
sbb
lods
push
bound
or
fsub
das
movs
loope
popa
adc
push
je
xor
fldenv
mov
mov
or
iret
stos
mov
jmp
repnz
cmp
sub
test
dec
push
push
rol
pop
es
mov
scas
adc
(bad)
and
adc
mov
leave
sbb
adc
repnz
or
dec
add
and
ja
pop
aad
adc
rcl
fnstenv
cs
push
jecxz
shl
inc
sar
int
jge
fidivr
cmp
mov
pushf
test
(bad)
stos
mov
pop
lds
nop
mov
int
cdq
arpl
add
adc
push
jmp
sbb
pushfw
mov
xor
in
jle
lods
lds
jle
dec
jo
cld
lods
mov
mov
mov
and
cmp
or
fidivr
in
jg
call
push
jl
xchg
or
mov
push
cwde
inc
jmp
xchg
loope
cmp
data16
jmp
dec
out
pop
push
out
sahf
ds
icebp
sbb
pusha
out
gs
inc
test
jmp
inc
out
shr
shl
jmp
fnsave
fld
mov
sub
ja
xor
in
ficom
int
in
movs
cs
jmp
repnz
icebp
and
out
cmp
sub
scas
jns
into
clc
mov
das
repz
test
xor
sbb
mov
inc
xor
(bad)
repnz
jns
xchg
mov
jmp
mov
add
cmp
hlt
xchg
mov
adc
adc
sub
jb
fimul
shl
movs
enter
ins
push
inc
inc
push
push
(bad)
and
out
in
into
imul
imul
cs
add
inc
xchg
stos
into
repnz
repz
loopne
ss
add
mov
pop
push
clc
cmp
clc
fstp
jne
pop
test
inc
jo
mov
hlt
cli
dec
fwait
std
fsubrp
rol
cmps
sub
out
call
test
cmc
popa
(bad)
sti
test
mov
(bad)
inc
out
or
sti
mov
jmp
loopne
repnz
icebp
sub
rep
xchg
repnz
test
jg
clc
jg
clc
mov
clc
xchg
repz
stc
dec
and
ins
mov
mov
or
stc
shr
div
add
cmp
adc
popa
in
das
mov
cmp
addr16
and
int
(bad)
loopne
adc
add
or
inc
sub
add
add
add
add
or
add
mov
sub
lock
xchg
and
jns
and
lds
push
imul
leave
xchg
sub
pop
dec
xchg
mov
xchg
xor
pushf
dec
jae
retf
fwait
outs
sahf
lods
stc
push
fs
adc
es
inc
shl
(bad)
fmul
mov
sbb
cmp
mov
in
scas
adc
int3
adc
dec
es
(bad)
dec
mov
call
imul
mov
sbb
xchg
mov
nop
inc
es
mov
or
fcmovne
pop
jnp
mov
cwde
xor
shl
pop
pop
sbb
fwait
cmp
mov
outs
into
sar
out
or
lods
add
sub
jne
sub
jge
mov
xchg
mov
shl
pop
cmps
inc
test
loop
ds
movs
fstp
mov
out
mov
xor
jmp
mov
xchg
and
dec
pushf
mov
xchg
ins
jge
loopne
sub
mov
push
pop
je
ja
inc
inc
loope
loope
div
fbld
mov
(bad)
xchg
push
xchg
dec
out
mov
fwait
xor
xchg
adc
or
jo
and
and
add
or
test
shr
inc
pop
pop
fs
addr16
imul
add
popf
nop
daa
adc
and
xchg
push
ins
mov
popw
dec
push
or
xchg
pop
push
xchg
and
pop
jle
pusha
cwde
bound
in
pop
ror
dec
ret
mov
call
jbe
xchg
push
jp
fldenv
mov
shl
out
add
retf
sbb
loopne
or
(bad)
jmp
jmp
mov
retf
xor
test
xchg
dec
cdq
pop
cmp
mov
sbb
call
push
mov
and
mov
(bad)
sub
and
retf
ins
stos
and
xchg
add
xchg
rcl
mov
jno
xchg
jno
mov
adc
dec
inc
lods
or
add
sub
or
(bad)
test
fwait
loop
pop
movs
sbb
xchg
scas
mov
arpl
jno
push
jno
loope
and
pop
mov
jl
enter
scas
cmp
pop
fwait
inc
test
sub
add
(bad)
and
out
ret
sbb
test
rcr
jl
or
test
or
cmps
cmp
dec
leave
xchg
xor
ret
fld
test
les
std
sub
jmp
pushf
jb
ffree
push
test
sub
xor
cmp
xchg
mov
sub
xor
sbb
mov
lea
scas
retf
add
pop
ds
scas
xchg
sbb
fisubr
lods
xchg
lds
lods
arpl
cs
adc
cmp
in
out
test
push
cmp
push
sub
enter
ins
pop
jmp
int3
mov
ins
jae
int3
aaa
iret
cld
in
rcr
stos
stos
fimul
vorpd
stos
mov
inc
out
mov
les
fsub
(bad)
cmp
cmp
aam
sti
xor
mov
cdq
shl
sbb
xor
mov
add
pop
mov
inc
mov
inc
scas
(bad)
pop
rol
push
dec
int3
xor
ja
test
into
sar
cwde
lock
mov
jo
ret
jo
jmp
fnstsw
xor
mov
enter
lock
scas
adc
inc
imul
call
pop
push
adc
pop
push
arpl
mov
cs
adc
loop
mov
test
fmul
mov
push
or
test
pop
ud2
inc
or
loopne
jg
add
call
mov
dec
test
mov
xor
ficom
fwait
cmps
cmp
pop
ror
push
les
hlt
ror
add
or
enter
xor
add
xor
adc
sbb
out
mov
or
add
mov
retf
ja
loop
push
mov
inc
dec
dec
adc
or
ror
ror
ins
(bad)
int
sub
fcomp
mov
or
dec
xchg
test
ficom
xchg
mov
sub
and
mov
adc
adc
inc
dec
in
cwde
inc
or
daa
(bad)
or
sahf
xor
fmul
sbb
cmp
sbb
adc
adc
mov
mov
dec
jmp
cmp
add
cmp
out
xchg
inc
and
out
add
daa
xchg
fs
mov
jo
test
adc
loope
jle
je
adc
cmp
or
add
fidivr
or
sub
fsub
call
xchg
push
xchg
(bad)
adc
test
sahf
div
dec
enter
rcl
jle
sub
cli
mov
loopne
push
and
cmp
sbb
fcmovb
shr
cmp
push
mov
xchg
jb
sub
pop
pop
or
push
cwde
ret
movs
mov
mov
imul
(bad)
fcom
mov
or
sar
or
jecxz
mov
ret
sbb
mov
repz
push
test
sbb
mov
aaa
adc
jecxz
add
(bad)
add
adc
pop
out
cmp
test
movs
data16
push
cmps
mov
and
cdq
cmp
sahf
fcmovbe
mov
test
pop
adc
jecxz
inc
test
jo
dec
fsubr
jecxz
mov
ret
out
pop
popf
add
cmps
xchg
push
or
stos
ss
aad
shl
pop
retf
nop
sub
ficomp
and
pop
inc
add
aad
sbb
mov
push
ffreep
inc
sub
xlat
mov
repnz
arpl
xor
or
jle
cmp
jb
and
scas
loop
rcl
xor
ins
cmp
sbb
outs
add
in
add
xchg
sub
pusha
fmul
outs
sbb
jge
in
xor
pop
jo
add
ja
lods
jo
xchg
add
or
lods
or
pop
jb
and
push
outs
or
add
or
daa
dec
sub
jle
push
xchg
sub
ins
mov
jecxz
jnp
mov
repnz
clc
mov
enter
cmp
push
inc
ror
mov
cmc
fsub
sahf
jae
fwait
ret
sbb
sar
inc
add
xor
fidivr
lea
push
repz
dec
pop
jmp
sub
xlat
ret
mov
sub
xlat
out
sbb
inc
inc
mov
repz
scas
cli
xor
sub
inc
js
popf
dec
pop
sbb
and
out
push
movs
ins
sub
mov
cmp
daa
inc
(bad)
mov
xor
cmp
and
pop
ja
fld
ja
adc
sbb
in
nop
add
sti
fisub
js
or
sbb
pusha
add
out
or
mov
call
or
mov
shl
xchg
test
popa
push
iret
mov
jno
ins
push
cmps
add
faddp
sub
or
push
cmc
mov
pop
mov
fcom
(bad)
sub
pusha
lods
adc
out
mov
mov
xlat
lods
int
add
hlt
dec
bsr
pop
add
mov
dec
sub
lds
mov
mov
clc
mov
pop
int3
mov
inc
inc
push
sar
jecxz
jmp
push
sahf
jecxz
scas
xor
fsubr
out
rcr
stc
dec
pop
(bad)
fld
push
mov
cld
call
(bad)
fdivp
dec
xchg
cwde
repnz
pop
mov
fistp
lea
pop
aas
push
(bad)
out
add
xor
jle
mov
pop
mov
ja
jl
std
cmp
popf
nop
or
imul
push
push
pop
ret
loope
retf
xor
jo
ss
xor
jo
sub
add
jo
sbb
je
arpl
mov
hlt
lds
out
lahf
ja
sbb
ins
jmp
push
icebp
lock
jmp
jne
hlt
ja
jmp
ja
inc
or
ret
pusha
dec
add
not
add
dec
xchg
xchg
add
mov
je
aaa
add
pusha
je
rol
or
lock
adc
sbb
cmp
je
adc
jle
call
loope
shufps
loopne
div
mov
jb
mov
icebp
ror
xor
inc
push
test
(bad)
push
sub
test
call
dec
push
pop
inc
dec
mov
mov
add
xchg
or
pusha
or
mov
xchg
popa
xchg
xchg
xor
push
xor
sbb
ror
out
jo
test
push
aad
jle
xor
xchg
xchg
(bad)
jne
cmp
ja
sar
add
rol
inc
mov
test
push
and
add
inc
jae
test
add
lock
ja
inc
push
mov
or
or
je
mov
dec
nop
sbb
loop
pop
jnp
jns
inc
jle
or
or
nop
paddq
mov
xor
push
cli
xor
cmp
or
add
pop
movs
nop
or
xchg
out
arpl
mov
bound
xchg
dec
dec
pop
jne
mov
mov
mov
cmp
add
or
or
sbb
add
xor
(bad)
adc
mov
mov
adc
nop
fcmovbe
add
lock
xchg
push
mov
mov
mov
in
inc
psubw
in
and
or
je
xor
aas
call
das
push
xchg
dec
(bad)
inc
mov
xchg
aas
pop
popa
or
mov
lea
add
or
clc
jne
mov
pop
xchg
add
or
xchg
mov
push
xor
nop
mov
xchg
addr16
jno
xlat
jno
adc
cs
and
xor
xchg
inc
or
cdq
xor
jae
xchg
cli
pop
test
cwde
mov
mov
push
test
xor
jnp
jo
jmp
mov
mov
and
(bad)
js
rcr
test
mov
call
mov
jle
js
mov
or
push
scas
lock
pop
nop
push
pop
mov
(bad)
test
dec
repz
push
out
mov
inc
enter
pop
jl
fs
xchg
sbb
shl
out
lea
sub
xchg
mov
js
mov
jge
fstp
mov
call
mov
(bad)
rol
retf
dec
pushf
inc
push
push
stos
cmp
xchg
fs
es
scas
mov
in
xchg
cmp
push
adc
dec
cdq
or
inc
pop
add
push
adc
je
push
jns
mov
mov
jmp
dec
hlt
mov
inc
sub
pop
inc
gs
hlt
inc
or
ss
cmp
outs
jmp
push
mov
loopne
je
jmp
jl
push
xor
push
xlat
loop
hlt
mov
das
inc
add
fsub
xchg
je
test
mov
push
adc
adc
adc
jno
mov
jle
fimul
mov
popf
je
fcom
ss
jp
jo
jmp
and
pop
cmp
cmp
test
dec
dec
pop
test
mov
je
xchg
xchg
mov
and
test
test
adc
lods
ret
inc
cmp
mov
test
stos
push
xchg
jp
jmp
rol
cmp
sub
push
cmp
push
out
lods
aam
pop
(bad)
pop
add
bound
sbb
(bad)
cmps
mov
scas
cld
retf
pop
lods
sbb
jno
retf
push
(bad)
(bad)
jmp
pop
cmc
push
inc
mov
jg
out
fwait
jp
lahf
mov
stos
jae
imul
adc
and
mov
ffreep
cmp
dec
push
mov
add
mov
in
adc
inc
and
jo
and
push
mov
test
pusha
add
pop
inc
and
lds
stc
nop
movntq
mov
pop
je
xor
call
mov
cmp
push
cmp
add
sbb
push
inc
popa
es
dec
pop
jns
scas
into
stos
mov
or
mov
in
mov
dec
push
das
add
or
or
jg
jbe
mov
test
push
mov
scas
sub
mov
sub
sbb
cmp
sbb
retf
stos
std
hlt
xchg
cwde
sub
pop
inc
stos
mov
xor
adc
outs
jae
test
lock
imul
pop
in
add
enter
test
mov
mov
call
xor
ret
xor
add
xchg
or
jmp
into
sti
mov
sub
jno
(bad)
jno
xor
(bad)
push
aam
or
adc
xchg
mov
jg
mov
jge
stos
mov
jecxz
push
jmp
cmps
retf
add
and
inc
cmp
mov
xor
mov
mov
sub
xchg
inc
int3
pop
add
push
cmc
fmul
fwait
mov
xor
push
xchg
jmp
jno
push
addr16
sbb
retf
enter
imul
movs
push
pusha
mov
out
out
call
jl
push
mov
xchg
stos
xor
ret
mov
ret
add
xor
push
sbb
fstp
les
or
les
les
shl
add
shl
pushf
cmp
cli
mov
dec
mov
push
jno
cmp
inc
mov
inc
repnz
(bad)
add
int3
dec
mov
jae
loop
enter
fcomp
pushf
mov
mov
pop
inc
xchg
shl
hlt
repz
dec
add
js
retf
ins
call
clc
leave
retf
bnd
cmp
aam
into
rcr
movs
retf
cmp
xor
mov
and
bound
pop
mov
mov
cld
lods
mov
rcpps
jae
inc
jne
shl
popf
xor
shl
jmp
add
xchg
aaa
pop
test
rcl
lea
push
jge
xor
xor
rcl
(bad)
rcl
popf
push
inc
sub
dec
sub
sbb
mov
jae
dec
movs
adc
test
cdq
xchg
cmp
aam
mov
ins
enter
popf
adc
iret
cmp
xor
rol
jge
out
mov
aad
inc
lds
sti
push
rol
pop
ret
movs
lods
mov
sar
pop
push
pop
and
mov
aad
rcl
pop
std
aad
jge
bound
ins
(bad)
pop
sub
fist
inc
daa
jo
add
repz
jecxz
(bad)
shl
imul
cld
aam
adc
sub
push
add
in
lods
inc
cmp
adc
loopne
inc
in
mov
cld
or
lods
psubq
inc
cmp
cmp
ins
(bad)
scas
jb
jne
or
aam
nop
fisubr
fisubr
sbb
outs
cmp
fidiv
add
xchg
dec
push
mov
adc
scas
sub
jge
adc
push
dec
mov
pop
cld
mov
push
fisttp
aas
jmp
call
or
(bad)
pusha
daa
push
pop
int3
push
ficomp
fisubr
fisubr
dec
xchg
inc
push
(bad)
fcomp
outs
and
xchg
xlat
dec
bound
leave
cmp
arpl
psubd
(bad)
or
adc
rcl
pop
cli
fisttp
add
dec
aad
xor
jge
add
mov
sahf
lock
push
jecxz
ds
pop
jecxz
popf
daa
ins
xor
jae
in
fistp
inc
mov
adc
dec
les
loopne
sub
retf
mov
fs
inc
or
adc
mov
xchg
mov
ins
mov
dec
in
ds
xchg
pop
fdiv
loop
jnp
(bad)
fnop
push
sbb
adc
adc
sahf
and
into
jecxz
xor
push
push
ds
xor
sbb
ss
scas
and
xchg
loop
sbb
mov
out
cmp
sbb
add
loope
cdq
ror
shr
push
lods
push
push
mov
add
mov
xor
jge
sub
push
rcl
push
loope
stos
xor
sub
repz
pop
or
or
in
sbb
push
out
adc
nop
pop
sbb
jmp
int
loope
sub
and
add
push
xor
push
out
repnz
dec
xchg
retf
push
dec
mov
sub
lock
jge
mov
push
jle
mov
test
inc
push
xrelease
xor
cmp
rol
dec
mov
push
add
jns
push
xlat
jmp
mov
popf
dec
mov
push
push
inc
cmp
cs
out
sbb
sbb
inc
fstp
pushf
popa
arpl
call
in
mov
or
and
jg
add
loopne
gs
mov
push
iret
sub
fcomi
rcr
in
cmp
scas
sbb
data16
xchg
xor
xor
sbb
adc
popa
mov
shl
mov
movs
adc
cmp
or
mov
inc
push
dec
and
in
pusha
dec
out
inc
mov
test
xchg
pop
(bad)
in
sbb
xor
adc
cli
xchg
xor
push
jg
imul
popf
sti
cmc
sbb
aas
inc
lds
xchg
pop
scas
in
dec
lock
and
iret
out
or
iret
js
sahf
mov
imul
aad
cmp
popa
and
add
outs
loop
xchg
clc
mov
bound
pop
das
cmp
dec
fcom
push
push
hlt
or
lds
fst
int
and
add
out
add
add
test
aas
stos
jnp
stos
fcom
nop
xor
clc
xor
jo
xor
mov
in
mov
jp
adc
push
sub
dec
shl
jle
adc
test
add
dec
shl
inc
mov
fild
pxor
pop
das
das
xor
fcom
and
and
inc
add
xor
int3
mov
cs
les
dec
mov
cmp
mov
retf
sar
inc
movs
dec
movs
cli
push
int
xor
inc
push
xchg
sub
push
(bad)
in
pop
push
fdivr
mov
repz
dec
lahf
cmp
sahf
push
jae
outs
sahf
ret
mov
add
stos
out
in
daa
mov
xor
movs
dec
xchg
xchg
pop
mov
cmp
jbe
aam
pop
jmp
popf
dec
mov
sub
movs
sahf
push
ja
fcmovu
or
das
scas
fcom
mov
and
arpl
dec
mov
jns
hlt
icebp
mov
xchg
fnsave
fcomp
ret
jp
mov
(bad)
loopne
and
data16
stc
lahf
out
adc
je
test
in
outs
or
stc
out
jg
daa
mov
mov
adc
mov
lahf
jnp
cmp
outs
pop
jge
jnp
push
ja
mov
add
xchg
or
cdq
les
cmps
repnz
lea
ds
call
jae
dec
mov
push
and
cmp
push
jbe
pushf
(bad)
mov
loopne
ror
(bad)
mov
scas
or
iret
cmp
inc
mov
sbb
int3
les
sbb
out
xor
js
and
inc
stos
sub
dec
mov
ds
jl
fwait
add
xchg
xchg
mov
outs
lahf
daa
pop
test
out
jns
je
dec
push
mov
jo
and
cmp
sbb
inc
retf
push
repz
icebp
aam
into
xor
xor
shr
mov
inc
jp
push
mov
or
das
rcr
mov
dec
pop
pushf
push
ret
mov
mov
popf
dec
lahf
push
test
lea
fadd
out
inc
adc
and
cmps
push
pop
lds
jne
pop
jge
mov
dec
push
jns
pop
repz
pop
pop
jmp
mov
xor
pop
mov
retf
fidivr
cdq
xor
lods
cmps
inc
or
test
dec
imul
iret
cmp
outs
mov
pop
xlat
fdiv
stos
dec
pop
fwait
jo
or
sbb
or
jns
sub
or
or
pop
cmp
or
scas
nop
jecxz
dec
push
pop
inc
mov
sub
adc
mov
push
stos
fstp
cmp
nop
and
sahf
add
xchg
add
sbb
inc
cmps
xchg
push
sbb
xchg
inc
repz
fwait
(bad)
mov
lds
cmp
or
in
retf
shl
int
std
sbb
hlt
mov
inc
xchg
test
cmp
jns
sbb
lods
mov
in
mov
cmp
jp
scas
jo
fcom
push
push
popf
mov
imul
cmc
push
cmps
jae
xchg
and
test
cs
pop
mov
jl
push
mov
rol
lods
(bad)
loop
ror
das
lahf
loopne
push
xor
(bad)
imul
push
in
nop
(bad)
pop
fidivr
shl
add
inc
xor
mov
or
inc
sbb
sub
or
(bad)
fisttp
or
cmp
inc
xor
dec
or
fcom
sahf
scas
mov
add
sbb
into
jno
add
adc
jne
scas
pop
adc
mov
mov
out
push
xchg
cmp
inc
inc
bound
sbb
adc
xor
and
or
es
and
push
scas
sbb
pusha
shl
daa
cmp
or
repz
dec
adc
cs
inc
or
into
cdq
mov
or
test
push
xchg
loop
les
mov
cmp
dec
ins
mov
mov
cvtps2pi
sbb
xor
pop
push
mov
cs
mov
or
xlat
adc
lea
out
inc
pop
pop
sbb
ffreep
push
mov
or
or
clc
mov
pop
cmp
inc
and
out
push
fs
sbb
js
cmp
mov
movs
movs
addr16
sub
in
adc
jb
or
repnz
jg
gs
enter
add
mov
ret
sub
push
xchg
clc
sub
push
mov
les
lods
and
rcl
jle
mov
dec
loopne
pop
test
pop
aam
inc
dec
(bad)
pop
fisttp
icebp
pop
mov
fiadd
cmp
jne
or
je
push
xor
iret
push
push
push
cmp
dec
inc
add
fst
sti
test
not
push
add
(bad)
mov
cdq
ret
or
or
jmp
ja
fiadd
loopne
mov
mov
inc
dec
mov
imul
or
pop
mov
fwait
aam
sub
jae
or
sub
cmp
(bad)
jmp
loop
dec
rol
xor
push
jp
jb
dec
xchg
dec
imul
adc
or
dec
fldenv
mov
lahf
rol
in
jae
test
movs
or
loopne
(bad)
and
xchg
add
dec
inc
add
and
bound
ss
lds
pusha
repnz
cmp
mov
push
ja
bound
les
add
cmp
imul
mov
mov
ror
push
ds
stc
push
jo
(bad)
xor
in
cmp
rcl
mov
pop
xor
add
imul
xchg
int
aam
inc
fbld
cs
leave
or
ret
sbb
add
gs
lahf
xor
and
lock
adc
fistp
rcpps
jo
or
xor
(bad)
sub
mov
in
mov
or
cmp
sahf
add
jle
add
and
(bad)
push
inc
pop
add
imul
mov
pop
mov
adc
mov
inc
adc
out
push
jbe
loop
sub
dec
enter
mov
enter
mov
jecxz
jmp
iret
ds
fiadd
pop
add
pop
xchg
(bad)
mov
or
dec
pusha
cmp
cmc
push
std
mov
fwait
(bad)
clc
add
dec
test
rol
push
adc
imul
mov
jge
not
aad
enter
jo
cmp
and
jp
mov
nop
mov
stos
cmps
jno
imul
push
cmp
cmp
pop
mov
jg
push
ud0
mov
xor
or
dec
pop
add
into
popa
shl
in
push
push
inc
or
fdivr
mov
pushf
and
data16
sbb
xchg
loopne
jnp
shr
sbb
fcmovnbe
into
mov
imul
add
stos
pop
xchg
xchg
mov
int
cmp
push
pushf
mov
(bad)
mov
adc
cld
push
test
addps
add
xchg
and
jae
xchg
xchg
sub
and
sbb
push
jbe
push
mov
add
pop
inc
xlat
xor
dec
fistp
xchg
jmp
nop
stos
pop
shl
adc
inc
xor
inc
inc
(bad)
fadd
ds
stc
movs
sar
jb
out
xor
lahf
movs
shr
mov
add
lock
push
adc
jge
setb
mov
adc
fidiv
dec
cld
or
dec
jbe
popf
pop
cmc
test
or
rcl
mov
xor
(bad)
fimul
adc
or
inc
popf
repz
push
clc
cmp
lea
lds
sbb
iret
js
cmp
xchg
mov
and
jge
sub
jp
dec
into
or
aas
cmp
lahf
cld
jae
sbb
push
add
scas
jge
sub
push
xor
or
add
shl
nop
and
dec
rcl
and
shl
mov
add
in
shr
fisub
or
add
fdivr
add
cmp
in
sub
xor
push
aas
or
mov
sub
test
pop
and
mov
cmp
and
pop
mov
xchg
cmp
in
pop
mov
and
cwde
add
xor
sbb
push
loopne
shl
add
ret
adc
rol
into
add
xor
popf
sbb
mov
or
mov
push
or
sbb
or
sbb
and
xchg
adc
sub
jecxz
(bad)
jecxz
adc
push
imul
jb
iret
dec
lahf
mov
daa
dec
test
nop
xchg
mov
les
movs
jecxz
pop
rol
rcr
dec
fsub
mov
and
mov
rcr
push
in
inc
aas
cmp
hlt
or
(bad)
call
sub
add
add
add
adc
mov
push
add
mov
mov
add
jns
xchg
jmp
adc
rol
add
(bad)
sub
lock
movs
and
push
inc
call
je
xor
add
cmp
jmp
or
mov
sub
ins
add
mov
iret
and
sar
pop
push
lahf
repnz
outs
mov
(bad)
sbb
push
test
xchg
or
cmp
xor
test
sbb
mov
mov
(bad)
pop
inc
jnp
inc
sbb
lea
sub
sub
popa
mov
retf
ret
inc
(bad)
les
jmp
pop
leave
dec
pop
and
mov
daa
(bad)
dec
retf
adc
cmp
add
rol
test
in
inc
pop
push
add
retf
dec
push
push
or
add
movs
and
mov
mov
jmp
out
inc
arpl
cdq
xor
jae
(bad)
aam
mov
and
in
mov
cdq
add
mov
xchg
dec
inc
adc
xchg
int
aam
cmp
mov
jmp
retf
arpl
pop
push
mov
and
mov
mov
mov
nop
or
cmp
push
inc
mov
stos
movs
retf
xor
push
cwde
cmp
mov
push
test
inc
mov
mov
and
test
les
imul
mov
inc
fsubrp
dec
push
or
lea
je
or
mov
into
jecxz
dec
and
retf
push
adc
add
shl
xor
xor
add
into
add
cmp
leave
es
jne
or
fcomip
sub
pushf
add
xor
dec
push
sub
shr
cmp
inc
mov
mov
or
mov
or
jae
bound
gs
dec
or
cmp
push
xor
inc
add
dec
and
push
pusha
add
add
dec
push
rol
adc
xor
sbb
add
mov
sbb
outs
jp
xchg
ins
mov
push
std
sahf
fnsave
cmps
and
cmp
cmp
test
mov
sti
je
hlt
push
lahf
pop
rol
sar
int
mov
mov
shr
std
push
pop
(bad)
inc
aas
fsub
xor
xor
add
push
push
pop
adc
inc
das
ror
dec
add
sbb
bound
test
mov
xor
shl
mov
xchg
mov
and
add
inc
js
xlat
add
test
lods
or
xor
push
xor
sbb
push
or
fcomp
aad
in
fld
enter
call
rcr
add
add
cmp
dec
mov
mov
add
mov
cmps
or
add
sbb
add
ret
movs
ds
add
movs
es
dec
mov
test
push
push
xchg
addr16
sbb
adc
add
or
sub
push
xor
(bad)
sub
pop
int
clc
or
cmp
aas
lods
enter
pop
(bad)
or
xor
xor
test
add
loopne
aaa
mov
cmp
scas
lock
add
fldcw
inc
jo
add
add
add
and
cmps
sub
and
dec
loop
in
jb
push
inc
add
sbb
inc
sbb
cwde
test
dec
movs
popf
shl
xchg
pop
add
add
dec
cwde
add
push
cmp
push
cmp
cmp
add
dec
pop
test
mov
push
xchg
xchg
mov
imul
push
mov
les
jns
cs
mov
add
cli
and
sbb
add
lds
clc
mov
pusha
pop
add
not
sbb
add
clc
or
xchg
and
xchg
pop
jne
mov
test
jge
pop
jp
push
inc
and
and
(bad)
cwde
xor
or
xchg
in
cmp
repnz
xor
push
cwde
mov
fstp
cwde
add
xchg
cmp
push
xchg
add
pop
jge
(bad)
icebp
dec
jle
stos
mov
pop
mov
add
add
and
mov
adc
sbb
repnz
adc
pop
push
pop
neg
in
mov
add
pop
or
push
cmp
das
inc
xchg
arpl
adc
add
and
or
mov
add
jecxz
jle
inc
loopne
fistp
add
scas
sbb
das
mov
add
pusha
xor
and
(bad)
scas
add
ds
data16
shl
test
icebp
mov
in
cmp
add
aad
pop
jb
inc
rol
sub
adc
add
adc
add
jge
pop
js
sub
add
enter
call
pop
loopne
imul
push
arpl
or
ret
data16
lock
push
gs
add
dec
push
push
pop
dec
outs
pushf
aas
xor
test
mov
pop
fld
pusha
pop
push
mov
aas
sub
inc
fs
xor
mov
fmul
ret
scas
dec
lea
push
pop
adc
test
dec
out
popa
dec
push
add
pop
test
push
gs
mov
xchg
lea
les
daa
dec
pop
push
pop
pop
or
test
add
sub
call
into
pop
(bad)
sub
add
dec
and
arpl
xor
add
add
inc
and
cwde
add
int3
mov
push
cmp
inc
fcom
xchg
loope
(bad)
shl
sbb
sti
aad
mov
lea
pop
push
bound
rol
and
(bad)
gs
mov
ds
mov
add
add
add
in
inc
xchg
imul
movs
and
xchg
test
arpl
mov
jmp
pusha
add
and
inc
add
or
out
jecxz
inc
clc
test
loopne
test
push
fst
and
push
std
push
je
in
into
dec
xor
or
inc
and
(bad)
sub
inc
push
xor
mov
inc
push
les
pop
jmp
push
nop
test
test
clc
loope
push
push
inc
add
cmp
fild
lods
mov
inc
add
push
sub
mov
dec
adc
cmp
push
imul
in
xor
dec
dec
loopne
fisubr
push
jmp
sahf
xor
test
test
cmp
inc
cmp
xchg
(bad)
loopne
in
inc
rep
lahf
push
ins
add
adc
loope
push
ja
dec
test
shl
dec
and
test
add
mov
fs
add
pop
stos
and
fld
outs
push
mov
mov
call
push
imul
lahf
cmp
test
ins
sbb
jns
xchg
add
dec
adc
out
push
outs
and
out
dec
loopne
outs
add
mov
add
inc
clc
test
and
and
inc
add
inc
adc
(bad)
aas
add
aaa
out
xor
dec
mov
inc
lock
sub
pop
ins
(bad)
iret
xchg
fs
movs
push
fdiv
push
enter
add
ret
dec
xchg
addr16
push
push
in
jbe
pop
jbe
or
dec
mov
je
xchg
add
or
imul
dec
or
cmps
add
repnz
sub
or
add
and
and
add
sbb
xor
add
xor
xor
repz
jae
mov
add
in
jne
repz
lea
mov
or
add
xchg
test
daa
test
test
push
cwde
push
mov
repz
out
or
add
push
push
outs
adc
neg
lahf
icebp
sub
or
outs
call
dec
push
test
xchg
push
cmp
push
dec
jne
cmps
add
add
aas
cmp
and
or
sbb
pushf
adc
inc
adc
dec
data16
iret
ds
sbb
push
aas
add
loopne
jae
xchg
outs
pop
push
inc
pop
sub
mov
sub
cmp
shl
hlt
jge
scas
push
jbe
lahf
hlt
sbb
ins
enter
xchg
ja
add
and
sbb
fucomip
xchg
bnd
pop
sbb
add
adc
inc
jecxz
inc
nop
pop
jbe
and
inc
add
addr16
fcomp
cmp
cmps
xchg
pop
fs
addr16
xchg
jns
js
sbb
shl
test
rol
jno
jbe
xor
daa
sahf
repnz
xchg
imul
xchg
cmp
adc
sub
jl
push
popa
mov
pusha
lock
sub
push
clc
sub
jnp
dec
in
(bad)
fild
cs
stos
sti
jno
xchg
shl
fadd
fs
gs
in
iret
jle
imul
xor
jo
loopne
lds
push
js
enter
cs
push
in
(bad)
or
fadd
repz
iret
jg
jne
in
retf
pop
std
sub
add
(bad)
div
bound
or
adc
call
arpl
and
mov
cmps
lea
mov
add
inc
mov
adc
retf
ds
xor
mov
pop
add
inc
jg
adc
push
mov
fs
call
adc
hlt
imul
push
dec
push
mov
int
push
xchg
and
stos
xchg
aaa
pop
hlt
movs
xor
cdq
xor
cmc
xchg
test
leave
or
shl
(bad)
push
and
mov
(bad)
lock
push
ins
in
sbb
add
cmova
or
mov
pop
mov
adc
lods
pop
xor
mov
mov
push
and
bound
cmp
adc
adc
add
adc
ins
out
jmp
inc
mov
adc
inc
push
shl
leave
sub
hlt
jmp
(bad)
adc
hlt
cmp
or
pop
addr16
dec
pop
mov
dec
pop
jnp
lock
pop
enter
and
xor
test
pop
mov
or
nop
(bad)
and
loope
push
inc
ret
dec
xor
or
cmp
xchg
outs
jle
aam
add
adc
scas
push
add
push
sub
sbb
inc
inc
les
cmp
cmp
movs
js
add
ficom
gs
jnp
jno
sub
push
icebp
xchg
inc
retf
fsub
or
jo
inc
xlat
and
pop
add
sbb
ret
adc
arpl
and
mov
add
mov
add
mov
mov
ds
sbb
and
cmp
dec
fadd
jno
rol
lds
cmp
mov
push
jmp
in
or
push
push
int
imul
in
jns
mov
and
xor
xchg
and
xchg
pusha
add
mov
enter
pop
cwde
inc
inc
jno
or
add
mov
sub
sbb
in
push
push
rol
and
push
xor
fild
sub
xor
mov
bound
mov
xchg
(bad)
shl
outs
pop
and
add
xchg
or
(bad)
sbb
xchg
add
inc
dec
xchg
(bad)
cmp
sub
mov
lahf
shr
push
popa
mov
pop
data16
cmp
and
in
and
sub
pminub
inc
enter
and
aad
and
fcomp
add
test
les
sbb
fst
push
dec
rcl
push
push
inc
ret
or
das
(bad)
in
inc
test
add
sbb
inc
mov
mov
pop
jle
out
imul
and
xchg
into
movs
addr16
out
push
xchg
or
and
xor
jp
xor
pop
push
(bad)
pusha
fs
adc
sbb
test
dec
ss
dec
xor
pop
maskmovq
div
sub
mov
aaa
cld
retf
das
mov
jb
cmp
pop
cmp
(bad)
xor
sbb
xchg
add
adc
jg
std
pop
fidivr
add
pop
rol
iret
jb
xor
xchg
mov
scas
cmp
pop
cmp
pop
add
pop
mov
and
sahf
inc
or
push
int
and
fstp
lods
mov
retf
push
push
xor
mov
loope
push
xor
and
fdivr
loope
pop
mov
out
rol
ret
shl
push
call
cmp
or
sbb
dec
lock
sbb
sbb
push
dec
pop
add
cmps
(bad)
retf
dec
and
add
js
aam
loop
cmc
jno
and
mov
xor
inc
fwait
out
repnz
cmp
nop
sbb
or
fist
shl
xchg
sbb
sub
(bad)
retf
ror
sub
add
outs
mov
cmc
xchg
mov
xchg
pop
sub
ror
cmp
xchg
push
mov
mov
jno
retf
and
mov
bound
test
add
xor
ins
je
jns
sbb
icebp
mov
and
arpl
repz
inc
mov
repz
mov
aad
adc
xor
fs
nop
cwde
add
jmp
and
loope
popa
push
xchg
inc
push
add
xchg
add
or
push
bound
xor
call
loop
jae
and
inc
sbb
pusha
test
xor
in
jno
(bad)
stc
dec
cdq
cdq
imul
lahf
or
dec
rol
in
mov
push
inc
adc
icebp
(bad)
pop
mov
imul
sub
pop
add
or
mov
mov
push
sbb
loopne
inc
pop
dec
rcl
hlt
mov
shl
call
push
cmp
mov
call
adc
push
dec
xor
push
xor
cwde
inc
sub
shl
cld
lods
aam
xor
int3
daa
int
cmps
ror
(bad)
icebp
push
adc
and
add
xchg
nop
test
retf
add
dec
sbb
add
fistp
xor
ret
adc
test
or
cmovge
mov
aad
jmp
xchg
(bad)
and
jmp
arpl
xlat
jae
adc
rcl
xchg
sahf
xor
arpl
movs
cdq
sahf
(bad)
mov
test
jmp
test
xor
sbb
sub
xor
add
add
mov
push
lods
mov
icebp
pop
dec
iret
fmul
push
stos
into
or
data16
mov
loopne
mov
test
sub
mov
jmp
xor
add
cmps
or
and
(bad)
and
dec
shr
(bad)
sub
push
shl
sbb
movs
mov
mov
add
imul
scas
and
mov
add
cmp
add
adc
retf
enter
push
aaa
push
not
ret
aam
loopne
inc
loop
popa
popa
test
sbb
jg
ret
call
xchg
pusha
lds
imul
in
(bad)
pop
sub
out
and
mov
(bad)
adc
jo
xchg
pop
daa
pop
clc
bound
shl
in
lods
aaa
popf
sub
sar
or
out
inc
or
push
push
cdq
retf
push
xor
mov
pop
xor
pop
int
in
fdiv
push
jmp
push
xor
jns
add
ins
push
xchg
xor
in
cwde
mov
pop
dec
aaa
push
enter
jnp
retf
add
repnz
sub
shrd
fsubr
inc
and
sbb
aas
dec
adc
adc
scas
inc
in
outs
mov
cmp
cld
data16
inc
pusha
jb
aam
mov
xchg
mov
mov
rcl
push
cmp
lds
fdiv
in
mov
and
je
cli
sbb
or
(bad)
mov
xchg
ja
je
inc
cdq
adc
ds
dec
add
and
or
fcomi
cmps
test
loope
cdq
loope
sub
clc
xchg
ret
adc
push
inc
pushf
test
in
mov
stc
pop
jo
mov
cdq
mov
retf
xor
call
jo
jo
pop
(bad)
in
jns
inc
pop
int
sub
call
loop
or
pop
rsqrtps
jecxz
pop
push
lock
leave
mov
mov
push
cmp
lahf
push
xchg
add
lock
retf
scas
cwde
(bad)
mov
leave
xor
push
xor
enter
stos
sub
pushf
sbb
mov
shl
out
retf
in
in
test
gs
ficomp
loop
pop
fcmovbe
mov
jb
nop
cmp
pop
dec
ret
movs
cmp
push
xor
push
icebp
mov
pop
jecxz
das
sub
jle
repnz
xchg
out
mov
adc
pop
jp
dec
ins
add
cmp
add
add
mov
in
lods
adc
repnz
and
sbb
pcmpgtw
xchg
(bad)
sbb
pushf
xor
xor
inc
popf
add
je
add
not
sbb
cmp
adc
clc
test
clc
xchg
pop
add
mov
mov
into
les
sub
and
pop
jge
inc
out
ror
adc
in
and
xchg
(bad)
jge
arpl
and
je
fs
push
or
push
dec
pushw
je
les
movs
pop
iret
cmc
movs
fld
cdq
inc
or
pushf
push
les
or
inc
ret
aam
jl
or
div
or
mov
call
or
test
rcl
scas
pop
jl
ret
and
movs
ret
lahf
cld
sbb
das
fcom
jmp
xchg
adc
into
xlat
or
test
dec
dec
or
stos
enter
or
cld
sbb
inc
sbb
inc
mov
adc
push
sub
(bad)
pop
leave
and
jo
clc
rol
and
rol
add
or
adc
fstp
int3
shl
inc
and
and
es
and
cli
inc
and
and
add
push
inc
outs
bound
inc
das
pop
(bad)
jmp
icebp
mov
pusha
mov
ficom
push
add
dec
out
add
call
ret
sub
bound
outs
sub
clc
lock
add
ds
dec
and
mov
loope
iret
sbb
and
push
adc
sahf
pop
cmp
mov
push
and
jl
sub
and
(bad)
xchg
mov
cmp
sub
pop
push
icebp
fist
mov
mul
sub
mov
outs
push
addr16
cs
pop
test
push
pop
iret
pop
lods
dec
inc
call
push
outs
fsub
sbb
and
jmp
mov
fdiv
call
sbb
add
das
enter
inc
adc
and
inc
sbb
xchg
dec
pop
xchg
inc
xor
push
cmc
loope
push
inc
push
push
(bad)
adc
mov
jle
pop
adc
sub
inc
mov
fdivrp
inc
xor
rol
add
pop
pop
dec
mov
mov
lea
xor
mov
movs
movs
pop
outs
or
fisub
add
inc
das
xchg
inc
cmp
movs
es
rcr
sbb
stc
pop
adc
push
out
cmp
test
cmp
push
jle
or
mov
rcl
sub
addr16
outs
int
movs
push
inc
imul
pop
hlt
sbb
rcr
and
dec
or
inc
int
adc
dec
ret
push
jns
cmps
daa
mov
std
add
xor
cmp
movs
cld
mov
or
je
xlat
cmp
adc
lahf
popa
and
ja
xchg
xchg
add
add
dec
mov
jns
jp
push
fisub
jnp
and
mov
sub
inc
sbb
(bad)
out
push
cs
fistp
jecxz
stc
adc
add
inc
nop
rol
outs
(bad)
loopne
mov
inc
sub
ret
fbld
call
cmp
out
xor
sbb
inc
and
call
fs
jo
inc
mov
data16
int3
xchg
nop
or
js
aaa
cmp
aaa
dec
and
scas
enter
rcr
mov
xor
inc
rcr
push
push
pop
sbb
es
or
add
fsub
sub
aaa
sahf
and
aam
and
test
bound
mov
call
mov
es
mov
imul
(bad)
shr
clc
imul
cmp
fwait
ins
sbb
and
inc
jmp
fadd
sub
or
xor
gs
xor
add
mov
sti
loopne
popa
pop
test
pop
lods
stos
cmp
(bad)
cmp
daa
cwde
push
mov
lds
sub
popa
xchg
call
scas
mov
imul
ror
inc
add
inc
mov
sub
movs
mov
out
mov
mov
xor
cmps
shl
sub
fild
and
imul
adc
or
pop
sbb
mov
mov
jmp
push
sub
in
sub
add
stos
call
ds
push
or
mov
add
fimul
push
mov
add
in
fst
push
push
pop
aaa
adc
sub
clc
(bad)
das
push
sub
inc
sets
loopne
sub
int3
dec
(bad)
add
ret
xchg
mov
xchg
push
out
call
lods
fcmovbe
sbb
pop
aad
inc
(bad)
fmul
js
or
bnd
es
sbb
dec
mov
es
fldenv
leave
xchg
shr
lods
mov
add
jmp
call
inc
into
sbb
ins
sbb
stos
mov
jecxz
test
inc
sub
in
cs
cs
ror
mov
push
or
rcl
inc
push
test
mov
ror
inc
push
xor
mov
jp
cwde
aas
mov
in
jb
pop
or
leave
loop
out
ds
sub
inc
sub
or
shl
ins
mov
xchg
aam
test
int3
inc
movs
imul
das
sbb
stos
jp
leave
loop
ret
scas
xor
stos
cmp
div
in
stos
cdq
shr
sub
or
pop
or
cmp
inc
scas
loope
adc
add
int3
scas
pop
jo
daa
mov
and
out
sbb
fisttp
inc
xor
add
fadd
mov
sub
ret
inc
addps
js
pop
or
fstp
test
add
sbb
xor
js
adc
adc
in
in
cmp
mov
inc
adc
inc
out
inc
adc
shl
sbb
adc
adc
or
ud0
adc
icebp
std
pop
pushf
xor
(bad)
sub
xchg
mov
adc
xor
sub
test
pop
test
aam
jnp
sub
sbb
inc
sbb
sub
(bad)
loope
jp
das
stos
ret
clc
mov
call
push
mov
cmps
or
jb
nop
shl
lods
pop
imul
in
call
sbb
pop
mov
adc
es
sub
push
sbb
xor
imul
outs
gs
aam
sub
cs
or
rol
sub
ret
inc
dec
add
add
mov
out
sbb
test
jae
jl
(bad)
jo
in
sbb
mov
cmp
ror
jae
cmp
hlt
mov
lock
sub
xor
in
je
rol
cld
(bad)
out
push
add
push
shr
daa
fsubr
xor
rcl
mov
xor
push
sbb
add
sub
inc
add
ret
inc
sbb
sar
add
rcr
push
dec
sbb
add
in
fistp
call
push
out
xor
add
sbb
sbb
push
pop
jl
dec
retf
mov
outs
pop
cmp
push
nop
adc
xor
and
inc
mov
clc
inc
sub
ret
or
xchg
(bad)
xchg
lods
cmp
inc
sub
movs
leave
push
lock
outs
or
mov
push
ja
push
jnp
sub
add
cld
adc
sub
pop
add
and
mov
pop
dec
sbb
dec
xchg
xor
pop
xchg
pop
add
adc
aad
cdq
cmp
xor
xor
js
add
test
ins
add
imul
xchg
adc
add
xchg
data16
ins
test
xor
ret
mov
adc
xor
mov
pop
mov
ins
inc
sub
jbe
sub
pop
inc
xor
inc
enter
adc
pop
fistp
iret
mov
and
ret
xchg
mov
dec
idiv
lds
mov
sub
scas
loope
push
sub
js
and
ins
mov
inc
sub
push
aaa
add
jmp
push
mov
sub
xchg
adc
xor
xor
lock
out
or
pop
test
rcr
ss
jno
hlt
pop
xor
add
js
sti
mov
sbb
cwde
xor
inc
cs
mov
je
mov
inc
jne
inc
mov
add
ins
loope
arpl
add
inc
gs
mov
jg
sub
mov
sub
jae
(bad)
xchg
mov
sub
sub
shr
sub
popa
xchg
pop
xor
inc
adc
dec
push
xchg
mov
sbb
ss
rcr
das
(bad)
in
data16
sahf
add
ret
add
ret
retf
push
add
xor
mov
xor
sahf
out
mov
sbb
test
or
dec
paddusb
cmp
and
sub
inc
inc
mov
cmp
test
pop
mov
pushf
int
popf
push
mov
(bad)
shr
xchg
jp
cmp
adc
pop
mov
mov
sub
mov
loop
mov
or
test
pop
or
test
pop
and
retf
mov
cmp
call
push
cmp
jnp
idiv
pushf
mov
sub
aam
xchg
push
mov
inc
add
out
and
mov
push
(bad)
nop
mov
ret
aaa
cmp
js
push
ss
loop
or
fnop
mulps
stos
sub
dec
rol
jl
cmp
int3
push
leave
adc
cli
cdq
inc
and
rcl
popa
add
pop
test
xor
test
(bad)
pop
jecxz
sub
div
xor
int3
xlat
jl
add
dec
call
mov
or
push
pop
adc
add
sub
inc
sub
inc
sub
aam
cmc
jmp
mov
jecxz
mov
cmp
mov
sub
rol
and
ret
ret
pop
xchg
out
add
adc
mov
imul
fistp
call
fbstp
sbb
cmp
pusha
or
in
adc
das
inc
jecxz
cmp
push
add
call
enter
add
sub
or
inc
push
shl
and
add
inc
and
inc
mov
aad
push
lods
cwde
scas
data16
cwde
gs
lea
jne
clc
shl
xchg
and
jne
(bad)
sub
mov
int
add
adc
mov
mov
dec
push
ret
jmp
(bad)
loop
outs
jecxz
inc
xor
xchg
dec
jnp
jno
in
push
test
jb
dec
pushf
inc
mov
adc
adc
push
pop
mov
fnstenv
cmps
aas
push
mov
mov
push
ret
mov
dec
call
rol
daa
imul
addr16
popf
in
pushf
stos
push
and
lock
fpatan
adc
mov
adc
push
or
lock
add
inc
xor
and
mov
mov
(bad)
dec
(bad)
mov
ret
xor
test
xchg
adc
mov
xor
mov
ins
cmp
add
inc
xchg
xor
xor
aam
jmp
les
inc
dec
xlat
pop
stc
(bad)
iret
sahf
jne
pop
jmp
mov
add
push
out
jmp
inc
and
dec
inc
or
adc
pop
fldenv
int3
mov
sub
jo
xor
inc
sbb
xor
push
pop
dec
add
and
call
cs
or
and
or
mov
mov
mov
mov
mov
adc
xchg
sub
mov
movs
loopne
or
mov
repz
fsubr
mov
stc
jmp
mov
mov
add
shl
inc
and
push
js
ret
mov
inc
or
dec
sub
sbb
hlt
xchg
scas
lock
push
mov
and
adc
jno
pusha
stos
fldenv
xchg
rcr
dec
dec
and
ret
and
adc
pop
xchg
inc
loop
leave
sub
test
jmp
lds
pop
and
leave
jecxz
inc
xchg
xor
jae
test
add
bswap
je
fidiv
and
push
pop
test
add
test
pop
loope
dec
adc
pop
leave
nop
mov
sub
xchg
mov
push
js
push
pop
push
push
mov
sub
pop
or
or
adc
push
imul
aaa
inc
dec
in
arpl
push
mov
cmps
popfw
cmc
lds
push
pop
inc
or
fcomip
pushf
inc
push
sub
sbb
add
test
add
pop
jp
push
rol
jge
add
mov
int
add
add
xchg
dec
sub
pop
xor
jae
adc
inc
stos
loopne
or
mov
jne
arpl
cs
add
pusha
push
xchg
mov
cmp
aad
xchg
cdq
pushf
cdq
leave
call
loop
xchg
dec
lods
adc
xchg
ror
cmp
jmp
test
xchg
mov
movs
rol
xchg
mov
mov
sar
add
cmp
dec
test
mov
pop
(bad)
rol
xor
dec
add
or
mov
dec
inc
or
dec
push
add
out
mov
inc
outs
mov
repz
sub
test
int3
loopne
cmp
push
js
stc
dec
and
jns
inc
xchg
and
and
mov
ds
je
mov
test
push
mov
push
sbb
aam
mov
out
and
out
jp
cmp
popf
adc
adc
mov
inc
nop
xlat
add
mov
add
nop
push
dec
pushf
loop
and
mov
nop
(bad)
jne
repnz
popa
outs
in
sbb
adc
jae
adc
jmp
mov
(bad)
cmp
test
xor
or
arpl
repz
xchg
aam
aas
(bad)
clc
retf
adc
add
and
clc
rol
xchg
mov
pop
push
adc
mov
add
pusha
lock
ret
int
jmp
xlat
xchg
out
out
setns
inc
es
sbb
je
pop
popa
sub
test
adc
jno
cmp
fst
lea
adc
mov
mov
mov
xor
out
or
enter
xchg
inc
xor
hlt
mov
mov
and
jecxz
inc
adc
out
xor
dec
jge
ret
sbb
mov
mov
add
inc
mov
jo
cdq
sub
dec
orps
xchg
in
call
adc
xchg
(bad)
lock
adc
inc
add
inc
cs
ret
jno
loop
jno
sbb
daa
mov
adc
(bad)
and
bound
jo
inc
out
scas
jb
and
inc
pop
sbb
sar
jge
and
jl
mov
or
sbb
adc
jno
xor
push
pop
sub
cld
arpl
addr16
xchg
push
xor
inc
and
add
add
and
or
or
repnz
xor
sub
sub
mov
bound
fs
sub
ins
bound
test
mov
ret
imul
or
or
arpl
dec
inc
adc
push
xchg
jg
cmc
es
xchg
mov
stos
loope
dec
xor
shr
daa
adc
rol
arpl
sahf
push
(bad)
mov
ins
and
or
ds
mov
xor
fs
lgs
pop
mov
push
xchg
mov
inc
ins
fs
pusha
mov
mov
and
push
rol
pop
adc
je
lods
dec
outs
stos
add
shr
add
and
arpl
ins
ret
and
or
loopne
xor
mov
mov
in
adc
xchg
les
adc
push
dec
sub
xor
ret
gs
pop
fld
test
sahf
pop
jecxz
dec
ja
or
js
jb
(bad)
ins
mov
cmps
sbb
mov
push
mov
bound
fsub
shld
jmp
mov
and
sar
push
mov
add
dec
inc
inc
es
arpl
movs
fs
inc
mov
pop
dec
push
dec
xchg
bound
and
xor
das
fld
retf
into
jbe
add
jge
mov
loop
adc
or
lock
add
pop
xchg
dec
or
jle
(bad)
cmp
fs
in
cli
adc
push
out
xchg
ret
or
sbb
ret
jmp
sub
fs
fcomp
pop
out
xchg
mov
popa
int3
inc
(bad)
xor
mov
rol
and
arpl
dec
xor
jo
xor
outs
jg
sbb
xchg
jecxz
cli
daa
inc
jmp
and
mov
jne
lods
dec
movs
mov
andps
fmul
cli
shl
jge
mov
mov
jne
inc
rcl
sub
inc
or
mov
icebp
fidivr
push
jle
and
imul
cli
push
mov
inc
scas
test
pop
pop
inc
push
add
retf
arpl
sbb
dec
in
inc
call
or
and
jnp
sbb
adc
loope
mov
mov
fdivp
dec
in
inc
inc
and
loopne
in
jmp
jecxz
add
xor
call
xlat
adc
call
repnz
cmp
mov
lods
(bad)
push
or
sub
jecxz
enter
pop
jb
cdq
pushf
mov
xchg
push
pop
pop
sbb
sbb
mov
ins
aas
dec
jae
call
pop
hlt
push
sbb
pop
std
xor
push
dec
jle
sub
scas
out
cmps
jnp
sahf
in
push
add
pop
repnz
dec
mov
mov
jnp
scas
cmps
jmp
js
xlat
xlat
cs
mov
cmc
test
mov
pop
mov
sar
cmp
mov
sub
or
jo
fdivp
xor
movs
inc
bnd
mov
cmp
call
mov
push
imul
adc
ret
int3
addr16
push
cld
fcomip
add
push
test
sub
and
iret
xor
add
jno
adc
rcl
ins
or
add
stos
mov
add
idiv
mov
mov
enter
scas
mov
retf
scas
xchg
jle
das
jle
das
shl
mov
sbb
outs
mov
or
mov
arpl
shr
in
add
je
or
and
in
dec
sbb
push
iret
movlhps
dec
adc
sbb
test
call
int
xchg
add
mov
jmp
pusha
adc
jmp
pop
and
adc
adc
add
inc
in
clc
inc
dec
pop
dec
adc
jmp
push
pushf
daa
or
iret
jmp
mov
or
pop
rcl
or
out
dec
dec
or
das
or
cmps
jo
out
mov
mov
fptan
(bad)
shl
and
push
adc
or
(bad)
mov
and
mov
(bad)
push
repz
jo
psubq
mov
add
inc
rcl
sbb
adc
icebp
adc
clc
add
and
add
cmps
inc
add
mov
adc
inc
or
and
in
sub
add
pop
repz
sti
and
add
nop
popa
adc
cmps
jo
gs
inc
or
push
pop
mov
int3
xor
or
sbb
or
sbb
(bad)
clc
loopne
dec
mov
mov
sbb
dec
cmc
mov
shl
ud2
ins
or
or
pop
pop
inc
xchg
adc
(bad)
gs
add
in
inc
push
shl
scas
jmp
loopne
lods
inc
scas
push
pcmpeqb
test
or
sub
and
adc
cs
and
adc
pop
inc
repnz
or
adc
sbb
rcr
adc
out
pusha
out
xchg
(bad)
cld
or
xchg
es
daa
jmp
xor
xor
sbb
inc
popf
xor
and
pop
cmp
sbb
gs
and
(bad)
dec
dec
lock
mov
mov
sub
inc
enter
push
add
out
and
add
(bad)
mov
cwde
mov
inc
mov
cmp
jp
pop
nop
or
lock
mov
rcl
loope
not
adc
or
outs
pop
or
int3
jle
push
sahf
inc
sbb
shl
scas
xor
xor
ror
cmp
sbb
cmp
call
and
stos
(bad)
not
push
test
cmp
ss
loop
and
ss
push
push
mov
dec
loope
add
adc
lods
adc
mov
add
xchg
or
pusha
pop
xchg
cmp
test
loopne
mov
pusha
(bad)
sub
xor
bound
int3
or
je
push
rcr
inc
ds
ds
sar
out
push
dec
leave
mov
jae
push
pop
adc
mov
retf
push
mov
xor
and
push
xor
test
sub
jle
pusha
push
mov
bound
xchg
jmp
inc
clc
js
aaa
stos
es
hlt
dec
push
int
pushf
out
push
loopne
out
inc
or
les
das
add
add
loopne
jnp
push
leave
loopne
adc
and
adc
inc
or
inc
call
or
mov
adc
loop
or
adc
and
arpl
pop
mov
shr
lods
shl
or
adc
outs
bound
fs
xchg
push
fcom
add
pop
movs
add
pop
add
xchg
cmp
mov
addr16
xor
inc
inc
aas
inc
inc
sub
xor
movs
push
lds
push
inc
and
add
jge
push
sub
or
lods
and
push
loop
or
je
mov
push
movs
repz
loopne
loopne
dec
xchg
int
mov
ficom
push
lahf
or
inc
ret
test
xchg
xor
push
cwde
and
and
retf
and
jno
test
das
inc
or
das
shl
dec
in
dec
adc
mov
addr16
pop
fld
pop
fldenv
push
inc
ins
cmp
imul
lds
fcom
(bad)
es
xchg
jbe
test
add
ror
arpl
fmul
arpl
cmc
retf
pop
adc
pop
mov
or
xchg
push
cmps
xor
inc
inc
pop
int3
loopne
mov
sbb
test
and
pop
inc
repz
sbb
in
test
adc
add
sbb
push
mov
and
jbe
push
push
neg
and
pop
out
data16
add
pop
inc
adc
inc
jns
je
mov
scas
out
jle
adc
and
and
xchg
lods
mov
(bad)
pop
call
xchg
cmp
add
in
adc
imul
and
nop
xchg
mov
and
inc
push
(bad)
jbe
mov
adc
jp
jae
inc
and
mov
xor
adc
shl
ins
pushf
add
inc
pop
or
or
popa
jno
add
add
push
and
mov
push
mov
push
mov
out
or
jmp
movs
sub
enter
pop
mov
enter
movs
imul
adc
mov
and
and
and
aaa
imul
and
push
mov
(bad)
int3
js
mov
popf
mul
jne
cmp
pop
xor
sbb
add
inc
cmp
sbb
repz
sbb
pop
jmp
jmp
xchg
and
adc
mov
repnz
sbb
xor
push
rol
mov
mov
or
sub
add
mov
repnz
jecxz
mov
repnz
ror
xchg
pusha
dec
jg
imul
and
das
mov
cmp
jbe
mov
ins
aaa
push
mov
inc
sub
sub
xchg
fmul
ss
xchg
mov
mov
aaa
jo
int3
inc
adc
xchg
loope
dec
stc
sbb
popa
or
xchg
out
sub
mov
call
or
dec
xor
xchg
jge
sbb
aaa
dec
and
ins
arpl
div
add
mov
sbb
mov
mov
adc
mov
cmp
(bad)
into
push
(bad)
shl
or
gs
jns
pop
nop
(bad)
pop
or
popf
rcr
pop
mov
jecxz
mov
push
push
in
push
push
push
push
js
fwait
dec
pop
(bad)
mov
sti
cmp
mov
lods
out
mov
push
adc
add
pusha
or
jnp
adc
xlat
xchg
inc
add
dec
pop
jl
dec
outs
mov
mov
nop
sbb
neg
stc
jecxz
fadd
sahf
pop
push
call
pop
into
push
cmps
addr16
pop
fst
jmp
cs
pushf
rcr
popf
pop
stc
nop
or
push
mov
sahf
cmc
xchg
xor
pop
push
or
push
pop
test
push
cmps
cli
jns
arpl
fldenv
add
mul
sbb
mov
dec
fcmovbe
mov
movs
jno
das
sbb
popa
or
mov
add
test
jb
mov
push
cmp
inc
cmps
test
fwait
test
mov
inc
or
addr16
or
daa
jnp
aad
xchg
sub
popf
mov
add
push
push
inc
mov
or
jae
arpl
lahf
stos
call
stos
gs
xchg
and
xchg
imul
mov
or
fcom
add
add
mov
cmp
and
mov
add
push
or
loopne
inc
cmp
cdq
mov
dec
push
add
sub
xor
popf
test
xchg
nop
fidiv
ja
fwait
or
jo
push
jnp
add
add
and
int3
mov
inc
inc
mov
inc
adc
inc
or
les
mov
das
inc
imul
fcom
mov
(bad)
in
dec
arpl
rcl
cdq
fwait
and
mov
scas
push
mov
imul
fcmovnbe
add
or
mov
enter
mov
mov
cmp
push
mov
pop
mov
mov
call
push
lahf
inc
sub
sub
and
les
sbb
adc
(bad)
adc
test
cmp
leave
pop
and
mov
xchg
lods
cmovs
(bad)
mov
jo
sbb
pop
sbb
scas
mov
cwde
das
loopne
fs
cmp
(bad)
mov
adc
js
cs
loop
push
out
cmp
jl
xlat
fstp
sbb
adc
adc
cdq
scas
loopne
cmps
mov
std
push
retf
jno
sub
mov
fdecstp
or
push
or
adc
int
sub
test
inc
xchg
and
outs
inc
xor
into
push
sahf
popf
hlt
ss
sbb
or
inc
dec
push
sub
dec
cmp
push
pushf
(bad)
(bad)
loopne
xchg
and
xchg
add
jb
mov
fs
(bad)
repz
shr
std
shr
push
pop
test
pop
fild
inc
xchg
add
loopne
(bad)
rcl
(bad)
std
fld
std
mov
and
adc
leave
cld
push
out
add
mov
pop
xor
mov
fdiv
outs
das
(bad)
imul
dec
iret
test
retf
or
rcr
mov
gs
mov
mov
jo
retf
popf
add
sbb
add
sbb
fucom
xchg
sub
loop
mov
sar
jge
jae
test
jge
dec
mov
outs
jbe
mov
loopne
inc
(bad)
adc
jle
adc
pop
ret
in
add
inc
pop
fisttp
test
(bad)
mov
(bad)
fmul
or
push
push
pminub
repz
pop
out
ins
jb
push
nop
ret
stos
clc
cmps
pushf
ins
(bad)
out
popf
lds
sbb
xchg
xor
xchg
ds
mov
jge
xchg
and
aas
test
jns
xchg
pop
pop
iret
mov
adc
out
aad
jb
or
loope
sahf
add
(bad)
inc
pavgb
iret
inc
mov
xchg
loopne
mov
out
rcl
ds
(bad)
mov
lods
or
test
push
mov
push
stos
mov
scas
jge
jne
dec
fmul
add
repnz
ja
pop
pop
mov
jecxz
or
pop
inc
jg
out
popf
dec
(bad)
jmp
cs
ja
sbb
adc
xor
add
add
ret
add
push
push
mov
and
or
cs
nop
mov
dec
xchg
cmp
cld
clc
rol
mov
sub
fisubr
sub
mov
fnstcw
fcmovnu
sub
ret
sbb
movs
jmp
lods
addr16
fldenv
sub
mov
popf
xchg
xchg
add
cwde
cmp
inc
movs
je
cli
add
(bad)
call
mov
cli
cli
std
or
mov
pop
add
or
and
and
jge
mov
push
push
cmp
inc
mov
ret
pop
sbb
cmp
jno
inc
add
ss
jecxz
xchg
xor
sahf
inc
test
mov
ret
(bad)
int
cmp
daa
mov
fisttp
sub
cmps
loope
cmp
imul
lods
inc
mov
lods
nop
imul
cmp
jl
jns
dec
pop
(bad)
jne
into
std
mov
xor
jg
sbb
sbb
cdq
fs
popa
inc
xchg
mov
inc
add
imul
and
sbb
xor
inc
fsubr
cs
enter
leave
jno
pop
xor
inc
adc
je
add
stc
adc
xor
add
bound
adc
push
pop
sbb
imul
and
(bad)
pop
jg
and
fistp
(bad)
rcl
adc
test
test
sub
pusha
add
and
nop
loope
mov
jns
add
int
pop
mov
sub
pop
ror
mov
mov
mul
nop
cmps
push
sub
push
ins
mov
js
mov
dec
push
daa
mov
out
lods
mov
ja
xchg
test
push
(bad)
xchg
jbe
adc
popa
jl
addr16
mov
or
add
sub
sub
sbb
call
jmp
cmp
push
mov
ins
and
push
retf
mov
pusha
call
mov
not
and
test
stos
scas
bound
mov
jp
pop
out
stc
pop
enter
and
jle
mov
ins
cdq
leave
push
push
pusha
pop
int
pop
in
(bad)
push
or
sub
sub
xor
jecxz
and
out
and
dec
jmp
in
mov
shr
sub
xlat
imul
xor
out
mov
add
rcr
mov
scas
mov
imul
mov
pop
and
outs
pop
xchg
test
jg
ins
test
bound
inc
pop
sbb
mov
pop
das
sbb
add
hlt
inc
lods
pushf
xchg
adc
mov
xchg
inc
xor
retf
rcr
repnz
add
dec
mov
je
mov
jb
mov
xchg
pop
int
jnp
xor
or
cmps
or
inc
mov
xchg
adc
or
je
inc
into
cmp
std
mov
mov
and
mov
es
inc
sbb
fwait
retf
fiadd
sub
mov
jmp
mov
gs
retf
push
mov
pop
loope
out
js
xor
add
ins
push
rol
and
jns
call
aaa
or
out
outs
jg
shl
shl
sub
jl
add
jmp
test
inc
jb
dec
xchg
in
pop
cmp
stos
inc
adc
pop
mov
mov
(bad)
push
xchg
add
rcl
imul
into
sbb
sub
icebp
sub
shr
popf
lods
mov
inc
sub
or
add
push
mov
add
hlt
clc
inc
mov
and
(bad)
pop
inc
clc
inc
or
pop
cmp
inc
adc
or
pop
movs
inc
cli
push
mov
xor
sti
adc
ds
(bad)
call
std
test
and
nop
sbb
rcl
movs
(bad)
or
into
push
add
call
in
push
xchg
xor
mov
pop
jmp
add
xor
inc
popf
dec
out
add
pusha
shl
adc
loop
rol
mov
out
and
imul
push
cld
sub
mov
push
or
push
dec
dec
xchg
fld
inc
cmp
mov
sahf
int3
cmp
push
and
nop
mov
pop
dec
pusha
in
je
adc
mov
jo
pusha
mov
cwde
mov
call
retf
cdq
jg
adc
fidiv
adc
ret
xor
dec
aaa
test
xor
rcr
ss
test
out
xchg
push
jmp
clc
pop
sbb
(bad)
and
push
movs
jmp
je
push
aad
cmp
mov
xor
call
aas
push
xchg
(bad)
mov
jmp
(bad)
loopne
xor
inc
rcr
and
mov
or
mov
mov
jnp
adc
call
push
ins
movs
add
mov
mov
out
scas
jle
sbb
jae
and
xor
mov
je
jmp
aam
stos
pop
jl
inc
and
pop
pop
sti
add
ret
inc
mov
jbe
jmp
loop
and
loope
(bad)
ds
push
mov
mov
dec
xchg
add
xchg
lock
mov
test
in
jo
jmp
inc
and
mov
neg
xlat
xchg
fldenv
sar
adc
inc
pop
xchg
mov
jp
std
adc
xchg
jbe
call
es
add
call
jae
mov
sub
add
cmp
adc
mov
ffree
cmp
mov
aam
push
sub
sbb
scas
sub
mov
push
cmp
or
icebp
iret
sbb
jae
dec
es
aas
call
push
fistp
aad
adc
sahf
icebp
cmp
push
add
sbb
adc
stos
cmps
jno
jnp
ret
dec
sbb
mov
xor
inc
arpl
lock
mov
fst
xor
idiv
mov
cmp
das
adc
mov
inc
fsincos
call
mov
jb
pop
rol
push
cdq
mov
push
(bad)
pop
push
dec
std
shl
push
push
xchg
ret
inc
cmp
cmp
mov
cdq
sti
inc
loope
test
pop
xchg
cli
push
mov
aaa
les
sbb
add
call
push
outs
xor
(bad)
cmc
cdq
mov
and
shr
lea
stc
cmp
sahf
test
enter
xchg
sbb
repnz
add
push
xchg
movs
jmp
les
scas
push
cld
rcr
imul
lods
jo
lahf
jns
arpl
js
mov
dec
lds
fwait
mov
or
sub
cli
rol
mov
ins
xchg
pop
inc
fcmove
xor
repnz
movs
jp
mov
adc
arpl
pop
(bad)
add
out
dec
gs
dec
(bad)
and
push
lock
add
adc
xchg
fist
data16
(bad)
ror
or
xor
shl
mov
jle
enter
add
hlt
ins
in
and
pop
sub
scas
(bad)
inc
shl
cld
stc
retw
pop
jmp
leave
xchg
jns
sahf
ror
test
jae
xor
std
(bad)
(bad)
push
and
ins
mov
out
push
lods
pusha
les
mov
in
scas
sub
and
fdivr
push
fisttp
add
jne
jne
pop
mov
xchg
icebp
mov
adc
inc
adc
movnti
mov
inc
inc
scas
fstp
lods
aam
sti
test
xchg
push
xor
jnp
adc
add
lock
icebp
xchg
push
js
sbb
mov
repnz
xor
pop
cmc
push
push
jge
mov
nop
ret
popa
rcl
cld
xlat
ror
out
ja
or
in
dec
gs
add
call
mov
mov
push
inc
jmp
aad
cmp
imul
jae
out
xchg
inc
adc
xor
sbb
and
test
or
add
pop
jne
inc
jle
je
add
xor
in
aaa
popa
xor
sbb
push
je
sub
shl
inc
cmp
nop
jg
pop
adc
div
add
icebp
and
mov
or
xor
push
dec
adc
dec
les
pop
adc
gs
rcl
fwait
gs
sbb
push
push
xchg
daa
adc
pop
cwde
xor
mov
hlt
add
mov
in
push
jne
xchg
push
sbb
push
jo
push
out
pop
add
mov
mov
mov
xor
hlt
cmp
inc
repnz
or
push
dec
xor
dec
cwde
pop
(bad)
xchg
outs
cwde
push
outs
mov
adc
add
adc
sbb
or
daa
xchg
jns
cmp
mov
xchg
je
rol
neg
jns
inc
xchg
jne
mov
aas
adc
and
xor
adc
cwde
mov
ja
dec
call
repz
mov
sbb
icebp
ja
cmps
inc
inc
rcl
push
xor
fdiv
and
jle
push
sbb
push
les
js
shl
inc
retf
xor
jbe
gs
movs
jne
and
aas
and
or
mov
mov
and
aam
add
mov
adc
jl
adc
fstp
jge
cmps
inc
pop
push
adc
xchg
jae
jns
test
mov
jno
test
and
pop
movs
popa
mov
cmp
and
cmp
pop
inc
jno
xchg
xchg
cmp
add
mov
call
or
and
pop
xchg
push
push
xor
data16
call
xchg
add
inc
idiv
shl
push
and
and
jne
cmp
inc
es
inc
adc
or
mov
jp
in
fnstenv
leave
test
mov
add
add
pusha
or
nop
push
xchg
jnp
and
loopne
nop
fst
outs
pop
in
push
mov
mov
mov
push
and
pop
fdivr
cwde
xchg
adc
sub
cmp
mov
int
(bad)
mul
cmps
xchg
sbb
pop
jmp
cwde
ret
cmp
arpl
cwde
pushf
xchg
test
into
stc
xchg
cmp
adc
pop
push
and
xor
call
mov
add
aas
and
sbb
popa
test
xchg
std
push
push
push
sbb
enter
or
je
dec
push
cwde
shl
push
inc
cmp
mov
ja
call
sbb
clc
pushf
or
loop
xchg
ss
retf
inc
xchg
adc
aam
popf
fisub
and
hlt
jle
daa
sahf
ret
mov
dec
rol
push
nop
cmp
or
add
push
or
pop
mov
xchg
ret
add
mov
ret
inc
mov
cwde
mov
stc
pushf
inc
icebp
xor
adc
xchg
iret
add
xor
sbb
xchg
jmp
xchg
sbb
inc
jo
jbe
sahf
jge
and
pop
push
mov
fidiv
lds
mov
inc
and
mov
retf
sub
pop
movs
cdq
leave
mov
cli
xchg
push
adc
rcr
jne
stos
movs
mov
xchg
mov
(bad)
jae
outs
inc
cmps
ffree
jge
ss
push
nop
or
add
ret
or
imul
xor
(bad)
leave
cwde
jg
mov
mov
ja
std
xor
or
cmp
js
stos
test
sub
pop
lods
scas
xchg
inc
bound
cdq
xchg
adc
pop
popf
or
test
stos
mov
stos
pop
xchg
fwait
cmp
push
xor
push
xor
inc
inc
mov
sub
stos
mov
cdq
dec
push
cmp
xchg
inc
(bad)
dec
inc
dec
jmp
(bad)
in
xchg
test
push
shl
aaa
aam
adc
jns
retf
or
xor
or
inc
(bad)
push
xchg
cmp
xor
jle
or
cwde
je
fwait
or
cmp
sub
jle
cmps
stc
cli
stos
inc
shr
push
push
cdq
mov
cmp
cmp
xor
sbb
mov
inc
xor
mov
pop
popa
nop
cmp
push
dec
mov
push
mov
scas
dec
mov
ins
movs
test
cmp
add
imul
and
data16
xor
inc
mov
jae
les
fwait
js
jno
pop
xchg
ins
sub
add
add
or
sbb
or
mov
xor
(bad)
ret
pop
inc
nop
push
jg
mov
sbb
pop
xor
out
lock
jmp
cmp
popa
push
add
stos
lds
sbb
push
ret
into
les
inc
jo
xchg
test
ss
movs
pop
mov
add
pusha
mov
jo
mov
push
imul
mov
jo
mov
mov
inc
or
pop
mov
push
clc
lock
push
mov
mov
mov
sub
sbb
pop
mov
inc
imul
dec
adc
xor
imul
mov
or
xchg
call
mov
mov
mov
sti
pop
cmps
lock
pop
jnp
(bad)
add
add
xchg
addr16
jns
sub
xchg
sti
pop
cmp
push
clc
loopne
inc
or
jae
ror
jge
jnp
mov
mov
retf
rol
mov
add
push
push
outs
test
into
(bad)
inc
jae
xchg
jl
and
add
and
retf
(bad)
pop
jmp
cmps
jmp
ret
sub
push
jge
imul
imul
cmps
sahf
mov
cmc
sbb
and
dec
and
stos
mov
stos
pop
in
scas
adc
inc
jnp
mov
xchg
mov
and
mov
mov
imul
inc
sbb
mov
mov
pushf
jne
xlat
jns
mov
and
test
sub
imul
xor
or
mov
mov
icebp
mov
imul
mov
lds
outs
push
inc
(bad)
sbb
int3
dec
dec
in
out
xor
dec
les
popa
mov
push
das
jns
mov
mov
add
mov
jge
mov
xor
lods
pop
cmp
add
dec
or
cmp
mov
inc
xchg
mov
int
pop
and
cld
mov
dec
pop
cmp
shl
not
aas
mov
mov
pop
sub
into
xchg
xchg
iret
mov
mov
or
js
imul
mov
ret
ret
push
push
xor
or
movs
push
(bad)
popa
jo
popa
adc
push
jae
dec
dec
pusha
or
dec
mov
xchg
mov
dec
or
loopne
retf
ror
stos
and
cmps
xchg
xor
and
lods
les
jne
fcom
push
xchg
jle
js
jbe
xchg
out
sub
mov
adc
xchg
sti
ret
pop
pop
or
ins
(bad)
mov
pop
or
inc
xor
movs
mov
inc
mov
dec
stc
and
push
mov
dec
adc
push
dec
xor
(bad)
adc
les
sub
les
inc
sbb
pop
sbb
fwait
sub
bound
mov
ror
in
mov
fadd
adc
mov
add
dec
fidiv
adc
into
out
rol
loopne
scas
fisttp
ins
mov
movs
and
data16
xchg
div
dec
lds
jbe
xor
scas
sub
xor
dec
jae
add
push
fnstcw
sbb
fldenv
loope
lods
fcomp
test
mov
mov
or
jge
sbb
or
adc
cmps
dec
push
sub
sbb
dec
jbe
test
into
cmp
dec
xor
mov
iret
int
xchg
fistp
enter
xchg
fucomip
je
pop
ret
xchg
loopne
adc
les
and
mov
add
mov
nop
mov
xor
(bad)
xchg
pop
xchg
fwait
jl
push
les
jge
xor
shl
fdiv
fist
mov
push
mov
je
out
call
ret
dec
outs
loopne
xchg
ret
dec
lds
push
outs
pop
and
addr16
(bad)
push
rcr
adc
repnz
fbstp
push
mov
pop
movs
inc
fbld
fsubp
sbb
mov
retf
or
scas
out
xor
xchg
mov
add
(bad)
and
loop
xlat
dec
gs
das
pop
xchg
or
jle
test
sbb
dec
(bad)
scas
call
iret
and
pop
je
jge
out
call
movs
add
push
jno
or
out
inc
aam
arpl
je
jmp
ficom
and
loop
pushf
push
xor
inc
inc
lds
pop
push
add
cmp
cmc
arpl
inc
sbb
pop
mov
icebp
sar
sub
add
aam
jnp
test
inc
mov
mov
icebp
shl
jnp
pop
adc
push
add
aad
scas
add
lock
push
pop
xor
lds
or
js
out
cmps
mov
add
outs
sbb
cmp
mov
iret
push
sahf
inc
outs
ds
mov
mov
cmp
push
or
add
cmp
jbe
out
cmp
aas
neg
mov
ins
mov
sbb
cmp
push
jno
addr16
aad
imul
mov
dec
jl
cmc
cs
mov
or
sbb
nop
sub
not
fcom
pop
mov
sbb
stc
out
jecxz
cmp
cmc
mov
cli
stos
mov
scas
popa
test
or
mov
cmp
adc
loope
cmp
add
add
adc
aas
cli
test
cli
lahf
psubd
push
cli
aam
idiv
loopne
cmp
std
popf
iret
std
aad
stc
jo
(bad)
in
call
dec
lock
scas
add
mov
(bad)
lock
cwde
and
xor
jmp
pusha
and
push
dec
loopne
add
call
or
mov
fsubr
outs
sbb
ins
pop
mov
and
int3
(bad)
retf
pop
lods
pop
cmp
(bad)
int3
ins
faddp
cdq
xchg
cdq
inc
gs
mov
jecxz
sub
mov
int
add
rcl
dec
fwait
test
push
jmp
adc
and
mov
xchg
xchg
inc
int3
pop
xor
mov
call
pop
outs
sbb
add
or
add
call
push
pop
xor
push
data16
bound
add
mov
into
bound
pop
mov
dec
(bad)
lods
ins
add
out
call
cmp
pop
not
mov
sbb
pop
imul
mov
mov
frstor
je
jo
pop
push
push
cmps
dec
pop
mov
xchg
inc
and
cmp
ret
push
or
pop
cmp
xor
mov
mov
jl
xchg
sub
pop
mov
std
inc
xchg
test
leave
push
aam
mov
es
and
xlat
pop
retf
(bad)
sbb
adc
test
add
and
add
or
inc
sub
add
add
add
add
or
add
mov
sub
mov
and
dec
adc
(bad)
mov
fcomp
and
sbb
mov
cdq
mov
pop
leave
xor
(bad)
sub
xchg
in
fwait
cmp
test
or
gs
adc
data16
dec
inc
mov
repnz
mov
retf
test
mov
push
pop
jb
xlat
scas
or
imul
retf
aad
push
lods
mov
dec
aaa
and
xchg
add
jmp
jge
push
pushf
xchg
dec
sbb
jge
cmc
sub
dec
sahf
sub
leave
lds
clc
jo
pop
ret
scas
xor
fwait
pop
sbb
icebp
pop
leave
sbb
out
fisttp
aaa
stos
and
popf
stos
push
retf
std
fnsave
in
mov
div
fsub
pop
out
popf
cwde
clc
push
fsubr
imul
in
xchg
mov
inc
xchg
nop
mov
dec
pop
stos
cmp
neg
mov
pop
stos
and
inc
mov
cmp
xor
fadd
and
mov
repnz
inc
pop
push
(bad)
push
clc
lahf
jo
ins
inc
push
sbb
loope
loop
mov
and
loop
es
adc
dec
xor
xchg
lahf
xchg
enter
and
inc
mov
hlt
sbb
loop
dec
cdq
sar
add
inc
ja
or
xor
and
xchg
aaa
sahf
adc
adc
les
inc
pop
xchg
and
adc
movs
mov
dec
cwde
in
dec
cmps
shl
dec
cli
pop
and
and
sahf
pop
jbe
pusha
cwde
xor
jnp
or
mov
pop
out
aam
xchg
rcr
dec
jne
aad
(bad)
ret
cmps
pushf
rol
sahf
jl
mov
cmp
mov
mov
inc
ja
call
jmp
dec
cs
imul
push
movs
ins
sbb
jne
push
cmps
and
in
mov
js
lods
cmps
addr16
dec
sub
xchg
ins
out
push
lods
aaa
adc
je
lods
pop
fild
mov
(bad)
mov
scas
mov
sbb
xor
sub
mov
mov
cmp
test
jne
neg
jmp
daa
lods
push
outs
dec
out
xor
jmp
cmp
mov
cmp
jno
cmps
(bad)
rol
xchg
mov
cmp
adc
call
sbb
sub
cmp
retf
jl
mov
xchg
xor
fisubr
cmp
mov
mov
hlt
rcr
pop
jmp
xchg
sub
retf
pop
lahf
push
mov
daa
retf
and
(bad)
xchg
ins
or
arpl
inc
or
(bad)
and
xchg
test
dec
aas
cmc
rol
sub
inc
mov
idiv
sub
fwait
out
mov
dec
xchg
cwde
jae
int
pop
aam
add
daa
les
add
cmp
push
pop
stc
in
push
mov
ror
not
sub
je
mov
push
jnp
and
(bad)
test
mov
cmps
mov
adc
pop
jne
mov
les
xor
dec
cmp
hlt
xchg
dec
scas
cmp
cmps
test
dec
fisttp
dec
pop
rol
call
call
pushf
into
and
adc
dec
push
pop
adc
loop
(bad)
or
push
inc
xor
jns
mov
jne
and
fcom
sbb
adc
and
sub
jmp
xchg
(bad)
jge
dec
popa
add
xchg
and
jle
test
std
mov
jg
adc
mov
loope
aas
and
or
jo
add
fadd
ds
clc
inc
or
das
jp
mov
or
pop
and
pop
mov
fwait
adc
cdq
or
test
fstp
imul
loope
in
push
ret
fadd
leave
jnp
add
inc
add
shr
icebp
xchg
enter
add
inc
les
cld
loopne
adc
fld
adc
lods
sahf
xor
mov
mov
stos
jb
xchg
cmp
and
adc
cmps
pop
daa
inc
xor
add
adc
or
push
mov
cmp
jae
or
and
(bad)
jns
and
jae
mov
and
xor
adc
xor
neg
xchg
add
retf
adc
pop
adc
shl
or
test
test
retf
mov
leave
mov
call
xor
inc
pop
(bad)
fsub
mov
adc
int3
cmp
mov
iret
pop
jmp
sbb
popa
cs
pop
or
inc
jo
jecxz
jg
ret
inc
mov
xor
push
ins
gs
sbb
adc
and
mov
mov
in
add
mov
das
xor
inc
adc
in
mov
cmps
(bad)
and
and
aad
pop
push
call
addr16
pop
adc
movs
sub
sbb
dec
sbb
mov
jb
add
and
push
xchg
xchg
xchg
add
sbb
shl
ja
and
das
clc
jmp
adc
pop
(bad)
xor
bound
xchg
sub
loopne
or
sbb
(bad)
fisttp
jp
dec
mov
and
call
xchg
call
arpl
pop
push
push
popa
popf
ins
jne
push
or
aaa
add
mov
mov
sbb
mov
sub
mov
enter
pop
fcmove
ds
push
jne
loope
movs
fwait
xchg
pusha
jmp
sub
fidiv
inc
ins
pop
imul
sahf
add
ins
imul
sbb
(bad)
or
dec
pop
test
adc
cmp
or
retf
mov
sbb
mov
adc
ss
pop
in
sahf
aam
fld
pop
pop
push
popf
in
sbb
bound
pop
loop
mov
test
pop
fucomip
add
adc
out
imul
sbb
xchg
add
lds
inc
scas
mov
mov
addr16
stc
loopne
xchg
repz
das
lods
pop
sbb
pop
je
and
cmc
sbb
pop
mov
cmp
shl
mov
sub
scas
popa
and
fcom
out
jne
out
repz
cwde
in
daa
frstor
fcmovbe
sbb
xchg
das
int3
addr16
xor
mov
retf
test
cs
shl
adc
out
push
add
xor
cwde
sub
in
test
cmp
or
outs
enter
xchg
rcr
aad
inc
mov
dec
movs
push
jecxz
mov
adc
cmp
inc
mov
(bad)
mov
out
cmp
int3
dec
or
mov
popf
sub
mov
jl
cmp
mov
pop
dec
outs
mov
xchg
mov
(bad)
popf
imul
xor
pusha
or
cmp
inc
scas
lds
lods
hlt
sub
pusha
push
scas
sbb
lods
ss
popf
pop
or
stos
fcomp
test
xor
xchg
imul
mov
jecxz
rol
inc
mov
sbb
dec
xchg
rol
push
das
sti
int3
imul
sub
mov
cmp
dec
cli
push
dec
cdq
hlt
and
pusha
add
pop
(bad)
stc
cld
and
sbb
outs
push
das
push
in
or
push
stc
sahf
and
mov
mov
(bad)
lock
mov
int
out
pop
push
(bad)
aaa
push
fadd
rcl
dec
cmps
into
(bad)
mov
xlat
fucomp
cmc
js
fimul
scas
mov
jbe
adc
sub
cmp
mov
out
cmp
add
stc
fsubr
adc
in
mov
or
hlt
(bad)
sbb
jecxz
sbb
or
pop
ja
sub
xchg
aaa
sbb
cmp
pop
xchg
xlat
and
xchg
and
out
mov
jae
pop
cmc
or
pop
cmp
xlat
ret
pcmpgtw
lahf
add
idiv
lahf
add
xor
or
add
leave
outs
icebp
ret
inc
jne
out
mov
popa
pop
xchg
push
jns
jbe
cmp
imul
psubw
setae
cmp
push
jbe
aad
or
xchg
xor
inc
or
daa
cmp
inc
jle
(bad)
sub
mov
jmp
jo
inc
add
jnp
xlat
add
xor
sub
js
cmp
div
jnp
daa
jne
dec
outs
jg
push
out
or
ins
or
xor
pop
dec
and
xchg
adc
adc
loopne
retf
mov
xchg
inc
or
pop
xor
cmc
inc
cmp
shr
call
pop
add
stos
mov
sti
(bad)
jnp
sub
xor
(bad)
pusha
or
adc
loop
inc
xor
and
mov
mov
dec
or
and
jae
aad
outs
adc
ficom
xchg
cmp
loopne
xchg
imul
mov
push
pop
out
xchg
sbb
je
je
inc
dec
das
mov
dec
mov
jns
js
xor
fadd
sub
or
or
sub
aaa
outs
mov
inc
xor
mov
jne
(bad)
pop
sub
out
cmc
test
xor
test
or
mov
out
cmova
cmp
xchg
or
and
and
stos
dec
ins
jmp
inc
or
mov
mov
mov
adc
addr16
adc
icebp
xor
mov
dec
or
mov
out
dec
adc
xchg
mov
aaa
cmp
(bad)
rol
xor
div
mov
sbb
pmaxsw
(bad)
push
push
add
rol
stc
lock
cli
push
iretw
or
add
idiv
pop
mov
inc
(bad)
cmp
mov
pop
mov
das
inc
mov
nop
(bad)
loop
mov
mov
push
or
mov
or
mov
js
js
movs
xchg
pop
dec
aas
push
adc
sbb
outs
xchg
adc
psubd
push
(bad)
or
ror
loopne
and
aam
push
in
xor
repz
shl
jae
xor
arpl
xchg
and
mov
nop
push
imul
adc
loope
or
push
imul
xchg
mov
jb
xchg
fldcw
sbb
or
movs
xchg
xchg
sub
mov
cld
mov
scas
dec
cmp
ror
mov
shl
mov
data16
jmp
lahf
call
popa
jbe
call
and
add
xchg
repnz
fwait
mov
xchg
mov
xchg
mov
adc
xchg
sbb
xchg
push
adc
sbb
les
aas
dec
(bad)
leave
push
mov
cwde
aam
or
adc
arpl
mov
jge
enter
mov
cmp
adc
push
dec
mov
dec
stos
fstp
nop
add
sub
xor
je
daa
mov
test
stc
adc
add
inc
aam
out
aad
or
outs
pop
cli
push
std
lock
stc
shl
add
imul
rcr
add
call
cmp
add
sbb
mov
icebp
pop
popa
xor
xor
aas
mov
test
push
dec
movs
push
pop
add
jl
xchg
jns
mov
ins
inc
push
and
shl
jge
jmp
push
mov
outs
jp
mov
xor
add
addr16
add
repnz
mov
popf
xchg
cmps
cli
mov
jno
jl
in
dec
xor
cmp
mov
or
test
push
(bad)
fiadd
xchg
or
pop
ja
dec
stos
out
xor
xor
mov
xchg
sub
cmp
div
jno
adc
rcl
cli
stos
and
es
ret
fisub
test
add
dec
and
xchg
jmp
or
pop
stos
push
mov
sub
sbb
cmp
cmp
jnp
(bad)
push
push
sub
xchg
mov
add
shr
jmp
or
mov
push
sub
jns
push
push
and
or
imul
es
daa
xor
adc
ss
adc
add
inc
xchg
clc
xor
and
fstp
je
cmps
mov
xchg
stos
mov
retf
cmps
push
xlat
ins
xchg
dec
movs
mov
xor
mov
(bad)
mov
xchg
daa
mov
dec
mov
adc
add
loope
inc
ja
pop
adc
add
je
sub
jle
and
push
nop
mov
stos
xchg
mov
push
inc
mov
pop
add
cmp
push
mov
leave
push
scas
mov
sti
sub
add
and
pop
fwait
mov
cmp
arpl
je
add
pop
xor
jno
push
xchg
push
pop
mov
mov
stos
dec
cdq
add
ds
sets
retf
dec
mov
loopne
(bad)
aad
dec
adc
mov
mov
pop
cmp
mov
mov
mov
test
lods
loop
dec
in
inc
mov
mov
push
adc
jnp
cdq
pop
adc
sti
shl
adc
and
call
outs
push
mov
or
in
clc
xor
loope
jg
pop
xor
addr16
icebp
mov
dec
mov
pop
mov
(bad)
stos
imul
fs
and
lods
mov
and
or
cdq
sub
sbb
scas
fs
mov
mov
fiadd
les
pushf
test
in
pop
cmp
sub
lods
mov
push
das
or
lock
jno
mov
adc
(bad)
pop
push
ret
std
imul
ds
adc
out
xchg
call
ja
push
push
popa
push
dec
(bad)
cld
mov
jmp
cmp
lock
enter
fild
mov
pop
test
stos
mov
daa
cmp
push
imul
out
fwait
mov
xor
mov
cmp
adc
ret
stos
ds
mov
out
je
mov
data16
es
mov
adc
fmul
in
hlt
enter
shl
fsubr
cdq
pushf
leave
out
push
add
lds
fidivr
dec
pop
cmps
in
cwde
out
lock
jns
retf
stos
stos
leave
into
cmc
sub
and
jne
pop
jg
iret
jg
xor
adc
iret
hlt
ins
iret
add
movs
loope
jp
xor
mov
addr16
sub
sub
cmp
iret
or
jo
int
push
int
aam
sbb
cli
outs
fstp
loopne
add
jg
cmp
and
(bad)
jge
mov
lods
lods
xchg
(bad)
in
into
and
add
lock
or
aam
shl
inc
std
or
dec
mov
popa
mov
push
repz
or
xchg
push
popa
adc
lahf
iret
adc
xor
fwait
rcr
ror
paddb
unpcklps
rcl
shl
dec
or
push
dec
icebp
lock
mov
pop
shl
sub
or
and
mov
xlat
cmp
fmul
fst
inc
ins
cli
push
or
inc
pop
push
aad
pop
les
aad
xlat
aad
stc
shl
add
stos
shl
(bad)
add
leave
cmp
les
cmp
or
test
mov
jg
cmps
or
test
mov
cmp
rcr
lea
mov
xchg
(bad)
fstp
sar
jl
jl
jmp
ja
int3
adc
adc
aas
sahf
rol
jle
and
fstp
gs
cmp
add
xor
iret
add
dec
add
out
shr
or
or
lock
enter
xlat
jo
mov
es
sbb
xchg
sahf
shl
lahf
lock
aam
sbb
sbb
xor
popa
dec
fisttp
dec
push
cmp
push
mov
jno
inc
lods
fimul
adc
mov
call
fidiv
add
or
loopne
push
loopne
leave
cmp
mov
gs
movs
jns
loope
ss
sub
or
je
shr
iret
std
fsub
cmc
fcom
add
scas
repz
test
xor
and
adc
push
movs
enter
fild
sahf
in
mov
sbb
loopne
mov
out
dec
or
rcr
cmp
cs
pop
loope
pop
cmp
mov
push
cld
or
out
mov
mov
cs
pushf
push
jmp
jl
and
pushf
sti
jecxz
dec
call
pop
mov
into
or
sub
add
fadd
mov
test
sahf
xor
jg
push
loope
fwait
xchg
movs
push
cmp
adc
cmps
mov
adc
stos
mov
pop
xchg
jecxz
hlt
sbb
pop
call
inc
xor
mov
mov
add
or
push
add
sahf
add
loope
out
in
loope
outs
call
jno
jnp
dec
pop
add
jne
aad
aad
mov
jne
int3
and
ds
mov
shr
ror
ficom
fcmovb
stc
loopne
sub
rcr
mov
das
dec
or
pop
xor
inc
sbb
icebp
popa
cs
xchg
sub
out
push
out
shl
push
shl
xor
icebp
and
movs
stos
or
sbb
(bad)
clc
std
dec
std
inc
or
fincstp
pop
rol
lea
cmp
data16
sbb
out
mov
shr
in
jno
fst
inc
stos
and
neg
push
xchg
jmp
stc
mov
add
in
lahf
leave
inc
mov
cmc
or
cmp
stc
in
in
mov
sbb
test
push
adc
call
mov
sub
lahf
cmc
in
xor
popa
xor
fld
pop
sub
and
cmc
ficom
cmp
ret
dec
cmp
mov
std
(bad)
fiadd
(bad)
mov
out
fisttp
rcl
push
add
(bad)
mov
stc
sub
call
inc
add
jne
or
push
cmps
dec
pop
sbb
inc
test
dec
sbb
sbb
(bad)
mov
in
jno
inc
sbb
lds
call
fs
test
movs
movs
sub
clc
stc
jmp
scas
lahf
aas
jg
pop
jge
les
add
or
fidivr
jle
movs
jmp
mov
mov
shr
fcmovnbe
in
fist
and
mov
xor
inc
out
in
icebp
mov
stos
inc
or
lock
add
mul
js
popf
xor
out
dec
mov
inc
fdiv
in
xlat
mov
mov
(bad)
push
mov
cmp
inc
std
fldcw
mov
mov
cmps
int
cmp
sti
mul
ficomp
sbb
push
pop
mov
lods
add
push
sti
(bad)
jns
mov
jnp
dec
inc
(bad)
fnstcw
arpl
les
adc
es
es
hlt
call
(bad)
std
sbb
and
retf
jle
jl
jo
push
adc
cmp
lahf
aad
or
pop
sbb
rol
popf
js
xchg
push
mov
out
jno
mov
ds
or
in
push
out
sub
(bad)
jp
cmp
mov
out
sub
cs
repz
mov
jae
ins
mov
or
fidiv
or
adc
mov
call
daa
pop
test
add
in
mov
jbe
lea
sub
add
rol
rcr
adc
dec
jno
mov
mov
mov
xchg
dec
ds
out
in
inc
in
adc
jmp
inc
movs
sahf
test
mov
dec
out
pop
push
shl
dec
xchg
dec
test
mov
add
dec
rol
or
mov
pop
push
jae
mov
ins
xchg
lods
adc
mov
jmp
ret
mov
mov
in
sar
loop
hlt
adc
xor
pop
out
jne
jl
push
dec
movs
mov
mov
xor
add
pop
xor
into
xor
mov
loopne
or
pop
outs
test
into
jmp
sub
scas
xor
(bad)
cmc
mov
xor
jmp
mov
pop
push
cmp
pop
add
sbb
icebp
clc
push
or
jae
pop
aam
mov
jmp
cwde
sbb
add
push
jae
pusha
fild
call
fisubr
loopne
lods
inc
cmp
xor
mov
cmp
pop
js
pop
mov
fcomp
in
push
push
fsub
jns
sahf
mov
dec
jmp
jo
xchg
inc
movs
nop
sub
(bad)
popa
push
add
cdq
imul
dec
movs
sbb
jl
cwde
stos
cs
and
pop
imul
xor
jae
cmc
in
repz
mov
jecxz
scas
mov
(bad)
jle
popa
pop
rol
mov
xchg
jecxz
repnz
mov
sti
retf
xchg
jne
cmp
out
inc
sub
stc
mov
jle
cmps
pop
mov
sti
rcl
movs
xor
jg
inc
jge
aad
push
sbb
mov
push
or
mov
add
xchg
inc
mov
push
dec
mov
dec
ja
test
mov
push
stc
pop
cmp
adc
rcl
cs
aad
cmp
mov
idiv
jmp
inc
aam
daa
into
jno
das
and
dec
xchg
ds
imul
mov
or
cli
and
call
test
inc
pop
iret
call
aaa
stos
mov
pop
mov
test
jne
inc
sbb
rol
sar
sbb
mov
cmc
xor
dec
mov
xor
pushf
popa
rol
sahf
icebp
and
in
pop
dec
sbb
jbe
cmp
lods
xchg
fcomp
mov
inc
adc
and
or
adc
icebp
adc
add
stos
rol
or
fld
xchg
add
jb
mov
mov
(bad)
jl
repnz
shr
pop
mov
and
mov
(bad)
sbb
dec
xor
jecxz
aas
rol
cmp
xchg
inc
adc
test
iret
xchg
and
inc
cmp
rol
add
(bad)
rol
sub
or
(bad)
xchg
lds
iret
js
push
push
enter
xchg
popaw
adc
ins
and
cs
loopne
pop
out
mov
mov
mul
adc
mov
cdq
addr16
adc
jno
fs
inc
sbb
pop
inc
aaa
xlat
loopne
adc
movs
sub
xor
xchg
ret
xchg
push
push
inc
dec
mov
cmp
inc
retf
in
jmp
jle
arpl
out
js
xor
jns
cmps
int3
arpl
mov
xor
or
push
sub
leave
jp
xor
sub
cmc
test
pop
iret
pop
xchg
stc
push
push
fst
sub
shl
jecxz
xchg
dec
adc
mov
jge
cmp
adc
inc
movs
retf
adc
push
sbb
jmp
sbb
add
xor
inc
sub
or
push
jb
and
xlat
out
popf
inc
xchg
arpl
inc
in
pop
add
scas
or
loop
add
arpl
pop
movs
cmp
cmp
jge
sub
dec
(bad)
xor
shl
ins
adc
add
push
out
leave
sbb
or
adc
xchg
and
push
sub
pop
sbb
pop
scas
cmc
retf
pop
mov
jbe
jge
stos
arpl
jecxz
inc
sbb
jb
and
inc
mov
loop
mov
fsubr
out
xchg
pusha
xchg
add
sbb
add
mov
jae
cmp
test
out
in
jne
jno
shr
dec
frstor
lea
or
cwde
aaa
or
rol
pop
and
jmp
in
inc
pop
jne
jae
jl
xor
call
cwde
jmp
dec
adc
fdivr
xchg
(bad)
and
adc
or
inc
pusha
sub
or
aas
daa
sti
and
lods
mov
dec
stos
lea
or
(bad)
mov
push
sbb
enter
popa
or
pushf
and
adc
push
push
arpl
and
popf
mov
mov
jg
or
daa
mov
cmp
push
les
sbb
xor
sub
xor
and
rol
xchg
lock
pop
add
movs
addr16
bound
jl
mov
or
mov
mov
movs
push
ins
adc
mov
sbb
aam
(bad)
xor
adc
fisubr
add
and
idiv
sbb
and
out
mov
add
adc
xor
xchg
imul
xlat
sub
mov
cmps
enter
xchg
mov
push
(bad)
mov
popa
mov
add
push
rol
xchg
or
arpl
fstp
add
push
mov
pop
mov
outs
ins
ja
(bad)
jle
(bad)
jbe
xlat
xchg
push
in
repnz
mov
jo
xchg
(bad)
cmc
scas
loopne
jmp
repnz
jae
(bad)
mov
add
cmp
pop
jg
js
jne
jno
push
es
int3
dec
or
in
leave
movs
sbb
jne
mov
into
and
mov
xchg
jecxz
in
(bad)
sub
pop
addr16
(bad)
aaa
enter
add
push
xchg
into
lods
test
push
push
lods
bound
sub
mov
add
mov
out
and
cwde
mov
or
add
daa
jb
sbb
pop
and
jp
aas
inc
pop
push
and
rol
(bad)
mov
(bad)
and
mov
leave
int
inc
or
into
(bad)
jnp
arpl
adc
and
in
lods
cmp
push
push
pop
rol
daa
add
test
rol
pop
aaa
(bad)
and
mov
add
add
bound
sub
popa
jno
pop
push
cmc
and
inc
add
add
jmp
pop
scas
xchg
mov
sbb
jnp
fsubr
and
add
retf
arpl
loopne
test
xchg
loop
cmp
imul
movs
sub
jmp
mov
clc
inc
movs
xor
sar
ins
test
addr16
aaa
(bad)
xchg
add
push
and
add
cli
mov
aad
mov
mov
fcom
mov
cmps
sbb
jge
cmp
push
xor
and
add
mov
or
and
add
pop
jns
add
cmp
xchg
sbb
xchg
inc
mov
scas
mov
call
cmp
inc
mov
and
jnp
repnz
add
dec
cmp
aam
adc
mov
pop
stos
mov
inc
mov
inc
dec
sti
mov
mov
add
mov
dec
lock
mov
add
stos
pop
ins
push
add
pop
popf
inc
rcr
inc
test
js
call
ret
add
cmps
icebp
ret
and
xchg
xor
mov
sbb
or
add
add
rol
repnz
inc
in
and
ret
scas
add
xchg
and
clc
les
sub
xor
arpl
or
push
mov
push
and
xor
test
mov
inc
test
add
xor
fistp
call
inc
imul
adc
cmp
mov
retf
sub
push
lods
jp
sar
mov
adc
clc
repnz
sbb
inc
dec
inc
(bad)
mov
adc
mov
cmp
add
jl
jbe
push
pop
js
sub
adc
mov
test
mov
push
movs
or
push
push
jo
in
imul
rol
and
scas
cld
cmp
sub
arpl
mov
mov
jb
inc
xchg
aam
cld
fstp
inc
mov
xchg
hlt
xchg
and
repnz
dec
jne
mov
xor
lea
cmp
js
xchg
push
pop
enter
inc
add
add
dec
daa
add
add
pusha
mov
xchg
fwait
cmp
add
sub
sub
test
movs
pop
cmp
call
cmp
jmp
shr
ret
ret
bound
and
cmp
mov
dec
stos
hlt
add
dec
pop
into
in
xor
cld
retf
mov
mov
inc
dec
xor
sbb
lds
and
sub
imul
test
cli
push
jne
test
mov
xchg
or
inc
jl
cmp
dec
push
xchg
or
inc
mov
sbb
cmp
call
sbb
test
sbb
clc
ss
xchg
sub
push
dec
out
push
nop
jp
retf
call
xor
mov
xor
adc
mov
lock
dec
jo
pop
add
repnz
and
add
mov
pop
aam
sub
add
add
push
mov
cwde
adc
daa
cmp
aam
and
shr
and
dec
sbb
xlat
sub
and
or
or
repnz
cmc
push
add
test
cmp
adc
xor
add
inc
or
sbb
and
leave
movs
dec
loopne
dec
sub
out
xchg
add
inc
push
add
jns
ds
jns
add
sub
sub
icebp
arpl
pop
(bad)
adc
sti
mov
add
cmp
dec
out
inc
cmp
and
test
mov
add
retf
dec
in
in
add
xor
or
rol
push
shl
js
inc
rol
mov
sbb
adc
push
inc
add
or
and
add
sbb
add
add
adc
pop
and
dec
push
push
inc
sbb
xor
mov
push
xor
sbb
add
repnz
sti
test
cmp
std
adc
test
add
dec
sub
push
cmp
ss
les
push
xchg
pop
pop
cmp
(bad)
pop
ret
fs
inc
and
jo
sbb
add
pop
or
or
inc
adc
mov
or
sbb
inc
lock
sti
sbb
inc
loope
pop
and
mov
(bad)
arpl
retf
pusha
clc
test
aas
clc
adc
leave
lds
sub
mov
add
gs
push
std
test
or
xchg
inc
mov
xchg
pop
push
add
and
aad
daa
push
add
mov
xor
add
add
movs
xor
aam
enter
add
or
adc
jns
pop
test
pop
or
movs
inc
mov
push
inc
test
push
test
add
xor
rol
retf
pusha
ss
clc
cmp
sbb
lds
test
cmp
lods
xchg
gs
sbb
fadd
ins
pop
mov
pop
cdq
push
fsubr
pop
(bad)
and
enter
and
pop
or
int
cmp
jge
jns
pop
push
sbb
or
push
scas
jg
add
jno
ror
lea
test
(bad)
inc
jae
push
push
enter
test
in
mov
sub
pop
in
mov
jp
jmp
add
cmp
std
fidivr
popa
ret
hlt
int
lea
dec
js
clc
in
and
add
mov
mov
pushf
or
xlat
std
jge
adc
pop
js
pusha
add
bound
add
pop
or
int
pop
pushf
and
es
mov
push
test
add
lds
jbe
or
inc
add
push
mov
lods
scas
pop
and
rol
and
add
(bad)
sbb
sbb
sar
xor
gs
sbb
dec
push
add
test
test
dec
bound
adc
pop
sub
add
int3
int
pop
mov
je
pop
daa
imul
or
xor
in
mov
rol
nop
xchg
add
pop
or
inc
enter
xchg
mov
and
or
push
(bad)
mov
(bad)
out
lods
mov
inc
push
mov
dec
cmp
push
imul
scas
add
nop
pop
pop
mov
sub
sbb
mov
add
loop
or
push
xchg
xlat
daa
push
pop
add
mov
lock
pop
cmp
push
jbe
xchg
mov
jbe
test
push
push
lock
push
jmp
out
pop
lock
sub
add
mov
push
and
xlat
xchg
jmp
aas
outs
push
addr16
(bad)
jmp
sub
xchg
jae
pop
cmps
pop
out
and
dec
(bad)
loope
test
push
fsub
mov
sbb
jb
dec
adc
and
pop
test
jmp
cmp
sti
pop
rcl
add
loopne
lock
push
shl
push
jmp
outs
add
lock
sub
call
xchg
imul
sub
add
mov
xchg
ret
hlt
jecxz
inc
test
adc
and
es
out
cdq
aad
cmp
add
push
test
inc
mov
pop
test
inc
rcl
mov
fmulp
cmp
push
or
push
push
(bad)
push
xor
mov
add
push
bound
test
lock
imul
inc
add
jecxz
mov
sub
adc
and
push
or
push
mov
imul
nop
sbb
ror
in
ins
clc
jb
loope
sbb
push
push
in
push
nop
add
js
sbb
mov
call
(bad)
cmps
mov
test
push
(bad)
fbstp
inc
pop
add
test
jno
pop
adc
jbe
icebp
mov
imul
sub
outs
jmp
in
or
xor
add
jle
or
dec
cmp
push
mov
cmp
cmp
cmp
sbb
adc
int
test
into
push
inc
xor
or
mov
xor
fs
add
pop
sub
add
fwait
pop
cmp
add
out
push
cmp
scas
xchg
add
mov
adc
jbe
int3
out
icebp
mov
hlt
mov
cmp
in
sub
outs
cmp
in
adc
mov
fidiv
jae
sbb
je
icebp
lea
scas
loope
stc
adc
jge
ret
fsubr
cmp
addr16
add
enter
xchg
add
mov
push
mov
or
pop
sub
jmp
push
and
push
aas
iret
or
cmp
outs
scas
xchg
push
pop
mov
imul
lock
jg
ja
add
mov
cmp
jno
iret
hlt
js
add
fadd
sub
push
pop
pop
cmp
pop
adc
add
cmp
jae
data16
push
out
push
imul
lea
xchg
jne
pop
xchg
xchg
and
mov
xchg
add
and
leave
fdiv
scas
xchg
jbe
shl
daa
mov
jb
inc
adc
add
imul
xchg
push
pusha
sbb
jno
test
dec
jne
jmp
xor
jp
xchg
not
or
mov
fld
inc
add
sbb
imul
js
dec
in
sub
inc
cmp
inc
jnp
xchg
leave
mov
push
add
add
xchg
test
aaa
pop
enter
add
mov
sti
sbb
cmp
call
xchg
and
add
xchg
xchg
test
add
test
data16
test
jmp
mov
ja
idiv
icebp
dec
pop
in
jnp
loop
cmp
pop
add
les
xor
pop
xchg
mov
jp
lahf
repnz
lods
jb
lahf
mov
outs
cmp
test
xchg
jbe
mov
cmp
or
les
push
add
push
iret
stc
inc
clc
test
push
pop
js
pop
add
pop
xchg
test
fadd
add
adc
inc
in
inc
xor
push
fidiv
or
adc
add
add
add
adc
push
add
loop
adc
sub
lods
pusha
add
in
adc
shl
inc
xor
sbb
push
ja
cld
push
out
shl
cli
xor
shl
addr16
aaa
dec
pushf
and
out
jmp
jae
inc
mov
es
clc
cwde
xor
mov
inc
mov
lds
pop
xor
cmp
fimul
add
or
mov
mov
ins
fnstsw
push
mov
shl
repnz
int3
xchg
add
dec
ret
sub
and
js
and
pop
push
lods
add
pop
push
stos
add
xchg
daa
into
call
test
adc
sahf
jmp
xchg
xor
cld
stc
jno
mov
push
and
ror
jmp
push
pop
retf
retf
jp
or
mov
cmc
enter
add
mov
imul
fidivr
shl
popa
and
sbb
dec
xor
xchg
push
cwd
and
popf
ins
mov
sbb
and
or
sbb
pop
jl
sbb
sbb
rcl
push
mov
mov
xor
movs
arpl
jb
and
pop
sbb
pushf
sub
sub
sahf
sub
and
dec
test
or
dec
adc
call
xor
jns
push
or
clc
lock
fcomp
inc
ret
sbb
xlat
inc
test
jne
pop
sbb
jne
jg
or
inc
data16
and
test
pop
pop
cwde
popa
sbb
movs
push
adc
push
lods
cmc
inc
or
add
mov
les
or
sbb
ret
loope
sub
dec
aas
push
cmps
aam
inc
bound
xchg
mov
lahf
cmp
retf
or
xor
add
sbb
and
mov
test
inc
idiv
inc
add
popa
lock
jns
ss
or
(bad)
or
pop
dec
xor
mov
in
xchg
push
bound
lahf
mov
pop
sti
add
push
les
stos
add
sub
cmp
stos
mov
fdiv
push
or
dec
mov
fisubr
enter
mov
rcl
inc
and
cmp
dec
or
cs
jo
inc
adc
xchg
or
imul
adc
add
inc
mov
add
je
in
cmp
ror
loope
retf
mov
mov
and
aaa
test
jp
test
push
sub
add
xchg
(bad)
pop
mov
and
icebp
bound
daa
xchg
jb
jae
ss
ds
sub
nop
mov
dec
pop
jne
cmp
clc
xchg
lahf
call
or
inc
dec
cmp
push
aaa
aas
mov
in
repz
lods
inc
nop
xor
adc
xchg
shr
dec
(bad)
ret
pop
ror
lea
int3
bound
push
arpl
mov
mov
adc
dec
xor
inc
clc
ins
aam
or
and
movs
(bad)
ror
sub
in
jg
stc
xor
dec
fs
xor
sbb
enter
ins
dec
sub
je
repz
into
xor
cmp
clc
rol
loopne
adc
xor
mov
rol
inc
and
aas
jne
push
push
inc
(bad)
mov
push
pop
jmp
add
push
sub
mov
mov
pop
adc
jne
pop
sbb
jno
pop
adc
sbb
sub
and
mov
jecxz
mov
mov
out
repnz
or
imul
ret
pop
sub
(bad)
or
or
mov
sahf
or
adc
mov
pop
jbe
mov
push
add
loope
pop
aaa
xchg
push
or
adc
test
test
add
das
bound
mov
dec
fs
push
mov
in
stc
lock
mov
or
mov
mov
pop
adc
mov
and
and
(bad)
mov
add
xchg
mov
cs
out
dec
je
push
test
sbb
sahf
sbb
movs
pop
jbe
sub
imul
sbb
fs
adc
inc
cmp
inc
and
xlat
sbb
mov
pop
jb
es
mov
mov
mov
mov
add
shl
jg
mov
dec
pop
mov
add
xchg
sub
fisub
sub
sub
cmp
adc
mov
cmp
xor
xor
mov
sub
fwait
pop
shr
or
repnz
mov
jecxz
loopne
inc
test
ss
jo
arpl
add
and
mov
mov
inc
push
and
mov
in
movs
daa
lea
xor
outs
inc
aam
clc
push
mov
adc
dec
pop
mov
inc
ret
stos
sbb
stos
inc
adc
stos
xor
push
aaa
pop
adc
mov
jno
inc
pop
dec
cwde
push
(bad)
(bad)
cmps
push
lock
push
jo
mov
icebp
add
call
retf
aaa
add
retf
adc
push
movs
or
xor
xor
punpcklbw
or
mov
outs
es
jmp
xchg
mov
push
jne
push
inc
push
lods
popa
movs
pop
sub
dec
mov
mov
add
sbb
(bad)
pop
hlt
inc
scas
xchg
clc
gs
mov
add
sbb
stc
enter
mov
pusha
rcl
(bad)
fidivr
arpl
lea
push
(bad)
mov
add
gs
das
pop
cmp
sub
xchg
cwde
outs
shl
(bad)
xor
add
sbb
lods
dec
lahf
es
imul
fild
push
xchg
mov
and
leave
xchg
fcomp
pop
mov
push
mov
mov
mov
ret
mov
mov
cs
jno
cs
pop
test
push
mov
std
jmp
xor
mov
push
cmps
lea
sub
repnz
inc
sub
jge
ffreep
in
pop
jmp
and
mov
sbb
pop
and
cmp
add
inc
shr
sub
mov
xor
dec
xchg
jmp
dec
mov
or
jp
out
inc
mov
cmps
imul
adc
mov
jmp
cs
jecxz
sbb
hlt
or
and
idiv
ins
adc
mov
mov
add
adc
xlat
sub
retf
mov
mov
add
mov
mov
mov
lahf
xchg
cld
add
fdivr
adc
(bad)
out
add
mov
fs
and
pop
fs
fwait
or
fsubr
dec
jmp
(bad)
xchg
cld
jmp
repnz
add
dec
rcl
popa
adc
(bad)
cmp
scas
mov
jmp
jmp
stos
rcl
not
dec
and
lods
test
cmp
add
jbe
sub
or
xchg
fcmovbe
cmp
mov
(bad)
sar
arpl
mov
or
pop
pop
inc
push
imul
pop
push
aad
ret
or
mov
sar
cmc
ror
lock
sbb
adc
pop
dec
out
cmp
adc
jne
test
cmp
push
ror
mov
in
jns
adc
imul
imul
dec
xchg
lahf
mov
sti
(bad)
aaa
xchg
mov
or
shl
dec
jb
xchg
in
or
das
mov
lea
test
push
clc
ror
lock
pop
cmp
(bad)
sbb
or
add
and
and
sbb
fwait
repz
ins
out
xor
mov
mov
jecxz
fisubr
dec
pop
adc
xor
outs
xchg
out
fst
mov
outs
inc
cli
pop
ror
mov
xchg
ret
scas
ins
aaa
shl
sub
mov
ret
and
(bad)
mov
inc
mov
mov
inc
sub
adc
sbb
mov
or
mov
add
pop
mov
pop
mov
xchg
add
jno
xor
mov
mov
inc
or
inc
and
sbb
pop
xor
adc
fnsave
je
lods
add
and
fdivrp
jne
dec
in
sbb
add
sub
add
(bad)
jno
pop
mov
push
push
aam
add
mov
add
sbb
xchg
xchg
inc
add
ror
jbe
loope
(bad)
sbb
or
inc
xchg
div
cmp
(bad)
mov
fucomp
sar
jge
push
jmp
loopne
push
sbb
and
inc
in
adc
push
ret
ret
enter
lea
mov
adc
loopne
or
imul
aad
pop
je
repnz
sub
sbb
popa
sbb
int3
in
sbb
or
addr16
rcr
and
ror
xchg
xchg
cli
jmp
push
out
aam
inc
cld
pop
pop
and
test
pop
and
ffreep
xor
inc
push
inc
sub
in
and
or
pop
mov
daa
call
sbb
sbb
fadd
pop
add
or
xor
loopne
int
and
loop
xchg
dec
sbb
inc
cmp
and
pop
xchg
popa
or
sbb
and
test
xor
inc
sbb
sbb
xor
inc
inc
jecxz
xor
adc
xchg
xchg
cwde
adc
(bad)
xchg
xor
and
jecxz
cmc
or
hlt
aad
xchg
and
cwde
and
pop
add
leave
mov
shl
adc
cmp
and
xlat
jnp
arpl
push
sbb
push
popf
inc
inc
je
add
in
jmp
or
mov
adc
inc
call
(bad)
rcr
add
xor
sub
das
add
pop
add
cmp
sub
bound
xor
and
out
movs
sbb
sub
sbb
push
push
gs
das
inc
ret
jecxz
and
ret
jo
push
jmp
pop
inc
idiv
loopne
sbb
je
in
jge
jecxz
pop
in
rol
movs
xor
add
or
(bad)
loope
lahf
rcl
rol
es
fimul
pop
mov
dec
mov
sub
inc
pusha
add
or
movs
popa
repnz
bound
in
cli
and
clc
dec
rol
loop
aam
pop
call
or
fld
xchg
inc
xchg
cmps
xor
dec
(bad)
fst
test
pop
jle
imul
fldcw
lahf
aad
lea
outs
mul
mov
imul
test
jno
inc
jb
out
or
loop
popa
cli
aam
and
push
clc
xchg
jne
add
add
and
dec
movs
aaa
inc
popf
lods
fst
int
jp
loop
sub
je
addr16
aad
ret
scas
out
out
mov
and
cmps
cwde
jmp
data16
xchg
jg
mov
add
xchg
bnd
sub
cmp
xor
push
inc
cmps
test
adc
inc
push
(bad)
out
jge
push
push
out
(bad)
out
lea
stos
test
(bad)
mov
ret
jl
pop
jge
in
leave
test
push
and
sub
xlat
adc
sahf
inc
pop
data16
push
mul
retf
sub
aam
in
push
push
and
dec
imul
xchg
push
jl
addr16
jge
cwde
inc
ret
sub
in
add
cdq
mov
push
sub
mov
jbe
jmp
fisubr
xchg
xchg
int3
jmp
add
fadd
pop
sub
jl
add
fimul
movs
fcom
test
mov
add
in
movs
dec
fiadd
cwde
sub
push
sub
aaa
pop
sub
xchg
mov
jmp
fs
adc
push
call
loop
and
ret
lods
(bad)
pop
scas
sub
shr
std
add
and
sub
mov
(bad)
lahf
pop
test
rol
mov
xor
or
mov
or
loopne
repnz
or
add
pop
mov
daa
jo
mov
in
dec
push
bound
es
mov
jne
ret
xor
in
aad
psubsb
ror
fwait
mul
mov
ins
shl
rol
dec
and
add
inc
loop
(bad)
pop
pop
leave
rol
lods
pop
inc
jmp
mov
mov
shr
add
cld
or
out
add
retf
movs
ret
retf
mov
arpl
xchg
gs
test
jmp
jmp
adc
push
fimul
fs
call
shl
dec
lods
push
push
scas
add
jo
xlat
sub
psubusb
sub
(bad)
aad
push
push
loop
xchg
sbb
mov
inc
jbe
addr16
jmp
out
or
out
sahf
inc
cmp
int3
fimul
cmp
inc
fs
and
sub
popw
sbb
call
and
(bad)
xor
out
inc
(bad)
xchg
ret
out
ret
mov
jmp
inc
pop
lods
add
mov
mov
lods
mov
mov
out
imul
jmp
xor
inc
add
mov
(bad)
adc
and
dec
push
loope
arpl
mov
sub
inc
jg
shl
add
clc
cdq
lods
lds
mov
shl
je
adc
out
(bad)
ins
xchg
cs
and
cmp
pop
shr
push
xchg
in
std
jb
cmp
ins
inc
sub
xor
out
mov
and
sub
icebp
xchg
jmp
ins
xor
or
clc
xor
(bad)
into
mov
add
ret
push
jae
sub
inc
inc
add
jp
push
adc
adc
ret
lods
(bad)
lock
ins
(bad)
ss
(bad)
xchg
push
shr
pop
add
add
popf
or
dec
jb
ins
add
(bad)
outs
mov
inc
add
mov
retf
or
out
(bad)
sbb
pop
jno
imul
arpl
adc
sub
adc
aad
sbb
sub
cmp
xchg
or
dec
rcr
loopne
push
scas
jmp
pop
add
push
xor
sti
mov
xchg
pop
inc
js
mov
fcomp
and
mov
xor
and
es
outs
daa
jnp
fimul
out
and
stos
sbb
js
and
sub
and
mov
add
xchg
ret
inc
sbb
cdq
je
push
mov
add
hlt
repnz
aam
cs
bound
imul
scas
and
adc
je
xor
jo
inc
mov
scas
add
mov
into
out
outs
jp
dec
xor
cld
out
mov
lods
fisub
sub
pop
pop
outs
xor
retf
pop
xchg
or
idiv
add
or
cmp
xor
xor
inc
adc
jns
xor
in
sbb
and
gs
jmp
xor
mov
ins
adc
test
add
pop
cmps
inc
xchg
in
and
xor
pop
rcl
hlt
xor
cmps
dec
aas
xor
outs
xor
jb
fs
xor
hlt
icebp
(bad)
loopne
or
aam
mov
push
push
xchg
sub
xor
add
and
inc
wrmsr
jne
(bad)
in
dec
cmc
or
sub
cmc
inc
or
loopne
jmp
inc
jmp
es
mov
pop
popa
pop
scas
jne
mov
adc
add
pop
pop
pop
arpl
pop
mov
adc
rcr
fidivr
push
pop
mov
adc
mov
cmps
mov
mov
shl
sbb
xor
or
pushf
test
push
into
pop
inc
das
add
jmp
jae
leave
push
xor
daa
in
or
call
push
cmp
push
inc
in
adc
push
push
je
das
cmp
add
imul
out
jne
inc
inc
adc
add
ss
xor
inc
xor
retf
je
pusha
jne
cdq
mov
pop
iret
mov
nop
xor
gs
inc
pcmpeqb
add
inc
cmp
inc
and
adc
inc
scas
and
jo
add
fdiv
jle
inc
daa
xor
daa
mov
ins
xlat
mov
stos
xor
mov
add
cmc
adc
mov
test
sbb
inc
or
mov
mov
add
ins
jae
outs
xchg
inc
mul
loopne
pop
pop
jne
jae
ins
push
or
test
ret
jp
int
lea
pop
das
les
jne
outs
outs
call
mov
das
fdiv
(bad)
xchg
inc
add
movs
rcr
ret
dec
es
(bad)
xor
mov
inc
lods
sub
sub
add
ror
mov
dec
rcl
clc
push
sub
imul
mov
(bad)
stc
mov
movs
mov
sbb
sbb
cmp
mov
add
ss
mov
and
out
imul
(bad)
mov
pop
fcomp
movs
pop
xor
mov
jno
pop
js
sub
test
test
shr
inc
lods
and
mov
call
lods
fisttp
ror
lock
cld
cli
scas
jecxz
(bad)
or
sub
enter
sub
das
mov
sub
mov
fwait
loopne
js
mov
mov
jnp
jno
daa
ins
sub
cmp
cmp
lock
add
lods
mov
add
(bad)
adc
and
lods
adc
retf
and
shl
mov
push
ret
jne
adc
sbb
jp
cmp
dec
jp
add
mov
(bad)
out
(bad)
or
adc
rcr
jge
jo
mov
inc
sub
std
cmp
jnp
mov
mov
mov
sub
or
xchg
cmc
mov
xor
push
outs
ret
ret
dec
sbb
mov
js
add
pop
pushf
lods
adc
fcmovu
ficom
mov
sub
jge
cmp
dec
std
dec
jbe
pop
cld
inc
fadd
in
or
add
fwait
sub
rol
add
test
mov
fwait
std
ins
cmps
cmp
mov
or
std
fdivr
fucom
std
push
sbb
mov
int3
jb
pusha
fwait
or
jo
fidiv
lahf
loopne
retf
loop
sbb
mov
fs
push
sbb
into
(bad)
call
mov
std
inc
push
xchg
mov
inc
xor
je
mov
ss
adc
dec
mov
gs
mov
xchg
xor
hlt
or
sub
sub
cmp
ret
xchg
jp
cmc
inc
dec
xchg
movs
dec
cmp
cmc
hlt
fst
sahf
mov
push
movs
es
mov
icebp
adc
mov
stos
mov
aas
add
fs
and
sbb
lods
push
imul
pop
les
xchg
sub
jmp
cwde
lods
(bad)
lds
fld
test
(bad)
or
xor
test
fs
mov
push
mov
imul
ret
fnstenv
push
adc
xor
sub
or
jns
push
ss
cmp
stos
pusha
outs
or
daa
xchg
clc
cmp
inc
dec
push
xor
add
inc
sbb
cmp
retf
pop
mov
dec
fwait
cmp
cli
stc
popf
xchg
push
inc
dec
mov
xor
hlt
jmp
and
adc
cli
xor
clc
shr
pop
pop
sub
(bad)
call
scas
bound
or
int3
sbb
push
pop
sub
push
(bad)
jl
in
inc
retf
and
pop
xchg
fwait
push
and
adc
and
sub
lds
fdiv
aaa
fiadd
dec
jecxz
pop
push
call
js
add
dec
sbb
jb
sbb
pusha
add
mov
movs
es
out
cmp
and
adc
in
loop
sub
mov
daa
outs
cwde
mov
sub
cmp
iret
test
cld
or
movs
xchg
(bad)
clc
add
pusha
shl
nop
inc
push
ror
rol
push
mov
daa
pushf
hlt
ret
je
xchg
inc
sbb
xchg
les
popa
es
imul
call
push
lods
mov
mov
push
icebp
inc
test
xlat
xchg
dec
arpl
add
jl
test
jp
loopne
addps
mov
add
mov
inc
call
loopne
dec
test
sub
and
sub
cmp
push
test
sbb
js
imul
sbb
push
mov
inc
or
mov
(bad)
shr
xor
mov
dec
inc
sub
inc
xchg
push
push
push
dec
inc
lods
(bad)
aad
fwait
xor
lea
pop
or
xchg
xchg
or
add
or
inc
ror
add
aas
mov
in
dec
loopne
xchg
pop
jp
leave
or
dec
dec
jbe
sub
xor
cmc
rol
xor
sbb
pop
sar
cmp
jle
loop
adc
gs
mov
adc
es
adc
push
adc
in
fdiv
inc
add
cwde
les
mov
rcl
push
into
pop
adc
push
fs
push
push
pop
in
pop
jbe
xchg
into
cmp
sub
imul
out
(bad)
dec
or
cmp
adc
das
or
push
fdecstp
imul
movs
cmps
pop
dec
mov
jmp
fdivr
cli
stos
lods
xor
les
stos
mov
repz
pop
inc
fnstsw
ins
mov
pop
lahf
sar
dec
ret
fld
push
dec
mov
inc
add
pushf
(bad)
std
sbb
stos
push
sub
jo
mov
out
xor
adc
es
xchg
aad
push
cdq
or
out
and
mov
or
dec
les
xor
add
mov
pop
ss
xchg
mov
or
jg
lds
rol
hlt
mov
out
movs
ror
pushf
shl
push
shl
push
stos
push
cmp
sub
add
mov
(bad)
call
fst
mov
mov
mov
jb
pop
pushf
in
ins
pop
add
mov
in
pop
jb
pop
cld
or
mov
scas
push
cmps
sub
ds
mov
sbb
sar
or
sbb
add
cmp
sbb
dec
sub
xchg
inc
xor
and
inc
sub
adc
push
test
or
repnz
push
sbb
mov
or
sub
sbb
and
pop
add
mov
call
loop
lahf
rol
jl
loop
pushf
js
xor
push
mov
daa
sbb
pusha
jno
ins
(bad)
pop
test
inc
sbb
mov
ret
mov
mov
mov
ret
push
mov
xchg
push
sbb
or
or
sbb
and
ins
sub
inc
jg
xchg
sbb
and
cdq
lock
push
adc
adc
and
xchg
or
mov
push
sub
ins
mov
cmp
pop
inc
xchg
stc
shl
cwde
pop
and
mov
mov
jg
jb
xor
cld
loop
test
ror
(bad)
sub
movs
add
push
sbb
into
push
and
add
mov
in
pop
add
in
or
add
sbb
inc
sbb
into
inc
pop
sub
jmp
addr16
rol
hlt
inc
and
jb
sahf
push
sub
push
mov
mov
popf
mov
sub
inc
scas
inc
dec
ret
push
xor
adc
mov
shl
push
pop
pop
mov
adc
les
mov
or
jmp
clc
js
and
test
idiv
bound
test
call
mov
aam
cmp
sbb
cmp
aad
in
push
imul
pop
sti
cmp
xlat
lods
or
sub
std
adc
jmp
fcom
or
js
xchg
mov
xchg
inc
sbb
push
sahf
loop
movs
sub
outs
(bad)
pop
sbb
(bad)
mov
pushf
popf
test
jmp
or
ins
imul
sub
cdq
bound
xchg
fldenv
sub
(bad)
add
jno
shl
and
or
sub
push
mov
outs
push
xor
pop
cmp
rcl
je
push
pop
loope
movs
xchg
sub
xor
rol
push
sbb
pop
dec
and
sub
inc
push
hlt
out
mov
sub
sub
pop
pop
cmp
loopne
cmp
sar
xchg
cwde
out
ja
daa
push
jae
popa
and
pop
hlt
jmp
cld
test
fiadd
loop
push
mov
aaa
es
outs
jo
inc
fwait
or
dec
add
ror
lds
and
dec
pop
lea
mov
in
bound
lds
daa
jne
fld
ror
stc
inc
xchg
xchg
les
and
and
fdivp
dec
(bad)
jns
push
mov
xchg
mov
adc
or
sub
dec
or
sub
xor
or
add
gs
fild
aam
sar
sahf
stc
dec
fld
out
adc
shl
push
mov
xor
test
shl
sahf
push
movs
add
sbb
ja
popf
out
cmps
inc
int
pop
or
mov
xor
sub
jmp
lods
arpl
sbb
xchg
push
pop
push
cdq
xlat
mov
ret
mov
fadd
sub
mov
inc
adc
xor
xor
fmul
mov
lock
adc
das
(bad)
mov
daa
ss
ins
imul
mov
jae
dec
and
inc
sbb
sar
push
pop
call
push
or
test
push
push
nop
cmp
cmc
mov
aaa
pop
aas
test
pop
adc
stos
xchg
inc
cmp
xchg
test
fimul
pop
inc
sub
sahf
icebp
pop
push
test
sbb
icebp
bound
jmpw
jmp
sbb
pop
out
mov
pop
mov
xor
xor
fadd
push
fcom
mov
jge
dec
mov
add
fwait
loopne
pop
mov
imul
cmc
jl
popf
fbld
dec
mov
cmp
adc
in
cmp
and
cmp
adc
cmps
mov
sti
mov
inc
clc
neg
mov
js
(bad)
mov
pop
stc
in
(bad)
mov
fimul
xor
add
retf
cwde
test
dec
and
dec
out
hlt
cld
sub
push
iret
adc
sub
lods
jmp
sub
inc
shl
loopne
out
imul
loope
mov
and
cmp
pusha
xchg
sub
test
inc
(bad)
and
pusha
cmp
loopne
outs
xchg
in
inc
pop
ins
add
cmp
mov
sti
shr
xchg
inc
cld
xor
xlat
push
(bad)
dec
or
add
outs
std
fimul
mov
inc
(bad)
es
repnz
xor
shl
push
inc
iret
repz
xor
hlt
mov
mov
jo
and
loope
dec
test
or
div
add
xchg
nop
or
xor
jb
push
in
mov
adc
loope
scas
and
adc
add
sub
mov
adc
aad
data16
push
pop
fwait
ins
sti
mov
retf
sbb
into
xlat
loopne
cld
push
dec
std
mov
lock
mov
(bad)
pop
cs
movs
cs
xor
xor
outs
push
mov
mov
push
sbb
or
and
adc
add
push
add
mov
add
nop
hlt
mov
mov
dec
psubw
or
add
cmp
pop
dec
bound
add
cmps
adc
data16
in
scas
inc
inc
sahf
add
sbb
rcl
xor
lock
dec
sahf
mov
mov
sub
int
rcl
push
and
loopne
loopne
out
ret
outs
push
mov
push
imul
sbb
(bad)
in
shr
pop
or
cmp
add
ror
dec
sbb
stos
push
cmp
sbb
xor
test
lods
inc
dec
xor
and
ucomiss
adc
adc
pop
cmps
popa
sbb
sub
sbb
sub
in
sub
push
std
lock
push
pop
ror
nop
rcr
and
popa
shr
and
bound
mov
(bad)
test
repnz
pop
mov
cdq
mov
fimul
mov
loopne
(bad)
jl
pop
xor
sub
in
rcl
fs
loopne
inc
loopne
inc
scas
jo
adc
add
test
inc
test
xchg
movs
je
ror
push
sbb
mov
or
loope
movs
shl
xor
test
xchg
shr
sbb
icebp
push
popf
inc
or
ror
pop
int
sub
sub
sub
pmaxub
jle
in
(bad)
loop
adc
push
stc
in
sub
xor
sub
fsubr
mov
inc
adc
les
sbb
add
jb
repnz
das
lea
or
jmp
mov
adc
xchg
in
and
inc
xchg
sub
cmp
mov
mov
pop
jmp
push
xor
mov
lods
pop
inc
shl
xchg
xchg
push
xor
mov
out
adc
and
mov
loopne
or
aaa
ja
sub
add
or
test
std
sub
jbe
cmp
adc
cmp
xchg
clc
jb
loop
inc
jecxz
lds
in
cmp
and
adc
dec
xchg
loop
repnz
data16
ds
lds
jb
cmps
dec
aas
ret
xchg
adc
add
xor
xchg
xchg
jb
adc
loopne
dec
loope
call
movs
inc
xor
stos
mov
lea
aaa
jne
sub
sbb
adc
and
enter
rcl
push
xchg
ins
pop
xor
adc
neg
inc
cmp
inc
ins
xchg
mov
xor
add
cmp
lods
dec
aaa
jne
pop
add
add
add
xchg
cmp
fsubr
dec
mov
adc
or
push
inc
ret
aam
jae
push
pop
dec
in
push
add
pop
add
popa
push
fsubp
dec
fbstp
and
mul
out
or
push
inc
(bad)
in
inc
and
xor
test
xchg
push
(bad)
mov
or
or
push
imul
jae
icebp
sar
lea
inc
sti
adc
sub
popa
lods
dec
adc
adc
sbb
push
xchg
and
mov
pusha
pop
mov
pop
cmc
loope
push
xor
mov
ret
add
push
and
jp
std
fmul
push
and
loope
int3
inc
ds
pop
xchg
mov
call
adc
xchg
aaa
mov
pop
sti
hlt
pop
sub
inc
add
sbb
jo
leave
xor
xchg
test
cmps
arpl
add
les
bound
jle
push
push
push
xchg
push
lock
dec
pop
sub
push
push
dec
push
push
popa
adc
push
mov
inc
adc
mov
add
sahf
inc
add
mov
adc
adc
fdiv
lea
les
adc
add
inc
add
mov
jmp
sbb
or
mov
xor
outs
ss
xor
adc
aas
xor
xor
les
xor
dec
scas
inc
or
adc
inc
or
push
jbe
xchg
add
inc
or
shl
aad
dec
pop
push
add
adc
cmp
cs
(bad)
push
adc
or
repz
pop
push
sub
scas
xor
mov
pop
xchg
xor
and
popa
adc
sub
add
retf
mov
test
push
int
or
iret
dec
mov
push
and
ret
mov
jb
div
outs
xor
jo
outs
jle
or
iret
fnsave
fsubr
retf
je
and
movs
push
inc
inc
xor
or
fadd
cmp
xor
and
push
imul
dec
mov
dec
call
jns
xlat
push
lods
aam
lea
mov
pop
pop
jmp
add
add
mov
outs
out
jl
and
(bad)
pop
or
xlat
or
xlat
repnz
fsub
push
inc
inc
in
ja
mov
xor
mov
not
or
or
fld
add
push
mov
pusha
sbb
psraw
jle
pop
mov
and
pop
mov
cmp
movs
imul
lea
repz
lea
xor
sub
jno
or
dec
add
jns
adc
(bad)
arpl
ds
idiv
or
mov
xor
nop
fcomp
push
aaa
movs
mov
in
ret
inc
mov
mov
aas
repnz
or
add
mov
push
push
lea
fmul
and
jmp
push
or
sub
or
pop
ret
xchg
sbb
fnstcw
ss
dec
mov
retf
push
push
into
jbe
and
inc
xchg
xchg
jg
xchg
xchg
fld
xor
out
inc
ss
pop
mov
cmp
or
call
dec
sar
or
cmc
mov
mov
jg
pop
mov
xlat
push
scas
add
test
add
in
mov
test
dec
cli
movs
and
add
adc
add
imul
sbb
stc
fwait
add
push
imul
inc
push
sbb
bnd
aad
daa
jns
ins
clc
add
add
mov
(bad)
int3
add
shr
push
and
or
or
cmp
inc
lods
lds
mov
inc
and
jle
sub
xor
jb
sbb
xchg
pop
(bad)
mov
mov
mov
(bad)
ror
movs
inc
popa
xchg
push
dec
xchg
xor
or
ja
add
mov
mov
cmps
(bad)
test
adc
idiv
retf
adc
add
test
pusha
push
adc
xchg
aas
(bad)
or
sti
push
(bad)
imul
shl
push
adc
or
xchg
adc
adc
das
push
rcr
lock
enter
cmp
into
push
xchg
inc
xor
push
add
and
add
adc
pop
mov
retf
pop
jbe
add
sbb
mov
or
xor
stc
adc
push
xchg
inc
mov
inc
fwait
mov
jns
push
add
add
rol
ds
add
mul
xchg
or
gs
ror
sub
outs
das
call
push
mov
or
sbb
xor
mov
jb
fisub
xor
fs
mov
hlt
mov
mov
enter
aaa
enter
lods
mov
add
cmps
xchg
sbb
xchg
push
cmps
out
sahf
shl
inc
cmp
add
push
sti
test
jp
and
or
add
cld
sbb
pop
or
jne
jge
shl
in
inc
or
mov
ins
mov
iret
xor
jg
pop
jb
pushf
xor
dec
loope
mov
(bad)
scas
and
sbb
shl
jne
je
mov
pop
xchg
inc
or
sti
js
mov
adc
or
mov
aad
sub
adc
test
fstp
popa
int3
leave
cld
sbb
mov
int3
jo
and
(bad)
jmp
rol
mov
int3
push
ss
ds
add
sbb
pop
arpl
popa
rcl
cwde
(bad)
and
xchg
mov
jp
shl
jge
fs
mov
jle
movs
and
fwait
dec
mov
and
mov
or
mov
shr
imul
xadd
int3
inc
or
jge
jae
adc
add
ror
jge
cld
add
and
shl
inc
and
xor
mov
pushf
lods
mov
fadd
mov
xor
(bad)
mov
sub
jge
push
sub
sar
call
arpl
ins
jo
jp
(bad)
cmp
mov
mov
sbb
xchg
or
adc
mov
adc
add
push
cmp
push
inc
dec
or
xor
sahf
fidivr
inc
mov
xor
mov
mov
mov
loope
enter
pusha
not
pop
inc
xchg
loop
addr16
push
cmps
ss
pop
(bad)
lahf
(bad)
mov
add
sahf
push
adc
and
and
loopne
scas
pop
(bad)
add
(bad)
mov
cmp
add
pop
aad
shl
xchg
aas
(bad)
mov
ds
and
push
push
inc
pop
cmp
lock
jg
push
cmp
dec
inc
fdivr
ret
and
(bad)
gs
add
imul
std
jns
inc
sub
jmp
jmp
inc
pop
cmp
mov
ret
hlt
dec
mov
imul
arpl
add
add
push
sbb
inc
add
and
shl
add
mov
push
sub
adc
sub
push
je
jmp
jmp
sub
jp
sti
stc
rcr
adc
shl
jle
cdq
sub
stos
inc
mov
dec
addr16
inc
adc
mov
and
(bad)
mov
xor
test
call
mov
or
jo
mov
sub
jo
lds
cmp
pop
adc
test
and
sbb
jb
leave
dec
sti
cmp
pop
scas
xor
rcl
add
cwde
mov
add
and
mov
movs
test
push
fptan
in
in
cdq
iret
sub
mov
ss
jge
sbb
in
ficom
push
push
fwait
pop
aad
push
pop
addr16
fs
adc
or
or
mov
mov
mov
cmp
mov
or
jbe
pop
sub
adc
add
pusha
sbb
fs
dec
xchg
movs
test
sbb
inc
sub
les
or
data16
and
pop
and
sbb
mov
inc
pushf
jno
or
fdiv
xor
ret
dec
mov
dec
push
popf
jne
or
cmp
int
push
ins
dec
xchg
push
mov
rcr
cmp
adc
gs
or
int3
add
push
icebp
inc
and
aad
sbb
clc
add
inc
push
loopne
punpckldq
and
popa
adc
sub
adc
mov
or
sbb
xor
retf
cs
mov
cwde
mov
loop
pop
inc
rol
fcomp
stos
mov
aas
push
imul
xchg
dec
sub
stos
dec
rcl
xor
dec
inc
or
push
sbb
fild
int
ror
adc
ret
cmps
(bad)
jmp
nop
sbb
xchg
test
adc
mov
add
xchg
popa
adc
popa
repnz
jbe
mov
add
push
cmps
add
cwde
pusha
jb
imul
les
push
and
stos
loop
and
mov
push
scas
and
jmp
dec
ret
gs
jp
lods
push
fdiv
mov
test
xchg
xor
adc
dec
loope
rol
in
ret
adc
lock
mov
push
mov
pop
in
mov
sub
push
loopne
hlt
div
add
or
js
bound
push
sbb
fcom
ret
or
fs
and
ret
imul
jmp
push
sbb
jb
mov
test
scas
inc
(bad)
push
stos
xchg
sub
adc
inc
mov
push
int3
xor
pop
mov
iret
call
mov
adc
or
je
and
or
xor
xchg
mov
aad
out
mov
mov
pop
test
repz
inc
call
(bad)
sub
ins
and
rcl
or
dec
lock
(bad)
pushf
cwde
cmp
mov
js
sub
ret
dec
xor
test
mov
dec
xchg
push
dec
cld
fnstenv
fnsave
cwde
shr
and
xor
jge
or
fadd
outs
in
add
push
or
jne
cmp
inc
sbb
test
add
mov
pusha
or
xor
nop
addr16
cmp
(bad)
cmp
ret
hlt
cmps
cmp
test
out
pop
sub
lds
jbe
gs
jge
arpl
leave
in
mov
jno
pop
sbb
xor
xchg
data16
or
aam
or
add
push
ss
jne
sub
loopne
push
out
dec
cmps
imul
ja
mov
pushf
xor
rcl
sub
push
das
ds
or
aam
jecxz
add
or
or
pop
ret
cs
dec
loopne
xchg
jl
imul
ficom
add
pusha
or
aad
fwait
clc
or
xor
shl
aas
daa
inc
inc
mov
push
jg
dec
xchg
gs
xchg
push
xchg
enter
push
leave
sbb
aaa
xchg
stos
lock
jne
or
je
xor
rcl
outs
(bad)
mov
or
mov
push
ins
push
add
jno
mov
gs
lea
xchg
cmp
loope
jmp
sub
inc
ficom
xor
scas
inc
fist
and
xor
add
mov
pop
xor
clc
retf
pop
push
xchg
mov
jo
push
arpl
mov
dec
jns
aaa
ret
sub
pusha
mov
mov
sahf
xor
add
sub
int
add
popf
sbb
and
jmp
inc
out
rcl
pop
and
pop
jnp
pop
ret
xchg
rcl
aam
loope
xchg
rol
mov
sub
addr16
or
adc
pushf
popa
mov
sub
sbb
lods
stos
adc
dec
mov
sti
and
xor
cmps
sar
gs
cmp
(bad)
mov
lods
cdq
pop
stos
xchg
mov
int3
mov
aaa
cmc
jecxz
jle
sar
add
lsl
sbb
pop
xchg
adc
cmc
rol
jmp
pop
jb
inc
mov
or
jne
mov
enter
inc
lods
lea
xlat
movs
retf
push
adc
and
mov
mov
adc
cmp
mov
jne
pop
out
stos
(bad)
aad
push
mov
adc
dec
push
ret
jo
popf
data16
add
and
and
(bad)
aam
mov
add
add
test
jnp
js
sub
or
ss
jb
jmp
and
push
fisttp
push
adc
push
movs
aad
sbb
jae
push
mov
(bad)
adc
das
jno
xlat
xor
cmp
mov
jecxz
call
(bad)
ja
les
xor
(bad)
push
lods
and
stc
fs
mov
xor
mov
repnz
cmps
stc
inc
inc
push
loopne
stos
cmp
or
ror
fadd
ins
or
cmp
inc
ret
ret
xchg
ret
adc
or
dec
sub
popa
push
or
mov
jae
stos
mov
pop
out
(bad)
push
sbb
stos
mov
(bad)
mov
and
add
movs
lods
xchg
mov
les
ds
adc
imul
inc
sub
pop
adc
das
sub
adc
xchg
add
inc
rol
or
and
dec
shl
dec
rol
mov
or
cmp
mov
add
dec
cmp
cmp
jae
daa
nop
push
adc
out
jo
sub
or
dec
sub
mov
sbb
retf
mov
inc
jae
int
mov
dec
(bad)
call
pop
lahf
jne
xor
xchg
xor
mov
(bad)
imul
aaa
loope
sbb
push
pop
sbb
hlt
adc
or
inc
mov
sub
mov
push
sbb
cmp
or
ret
loopne
mov
ffree
xor
and
mov
bound
lds
jp
mov
add
jp
in
xchg
icebp
jbe
ror
cwde
inc
pop
fnstcw
and
aad
add
je
cld
punpckhwd
xchg
mov
fsub
jl
das
or
outs
enter
retf
mov
int
add
lods
loopne
add
sbb
jne
pop
daa
pop
sub
dec
inc
rcl
adc
dec
sbb
xor
adc
push
adc
outs
adc
imul
in
mov
pop
xor
std
fst
cli
ja
shl
aad
ja
aaa
mov
xlat
sub
and
adc
jle
xor
or
and
sbb
sbb
nop
rol
and
sbb
and
cld
adc
loopne
xor
sub
mov
inc
icebp
ficom
leave
cmp
pop
mov
pop
aaa
rcl
sub
(bad)
push
hlt
dec
(bad)
pcmpeqw
pop
(bad)
mov
push
scas
(bad)
push
daa
push
ja
pop
addr16
mov
dec
mov
jnp
pop
jl
add
xor
push
or
pop
xor
retf
jnp
jge
or
pop
add
and
mov
sub
mov
jge
inc
sub
(bad)
out
adc
inc
sbb
inc
and
mov
(bad)
out
lds
adc
daa
xor
pop
push
pop
or
test
mov
pop
pop
mov
fadd
push
inc
adc
jno
adc
inc
xor
xor
push
gs
js
daa
push
push
add
js
jno
dec
lea
and
mov
xchg
inc
sbb
cmp
inc
and
sub
push
push
fidiv
retf
call
add
jbe
add
dec
and
scas
inc
cmp
pop
pop
cmp
sbb
pop
push
and
xor
out
dec
outs
add
xor
or
mov
mul
pop
jp
xchg
push
fst
pop
xchg
aas
repz
jp
aam
std
add
test
dec
pop
inc
mov
sbb
test
daa
mov
mov
dec
add
and
push
call
lods
cwde
pop
call
mov
cs
and
mov
in
xor
xor
pop
and
add
mov
jle
inc
jg
icebp
mov
arpl
inc
jp
ret
or
cmp
cwde
daa
jl
jbe
mov
mov
xlat
xchg
movs
inc
inc
dec
add
sub
cmp
js
pusha
xchg
add
cmp
mov
or
(bad)
fild
clc
jbe
xor
jns
imul
loope
jg
push
or
or
xor
leave
dec
add
retf
psubusb
sbb
daa
stos
gs
push
dec
out
push
pop
dec
repz
xor
pop
inc
loop
imul
jge
gs
sub
xor
cmp
xchg
je
adc
rol
aad
cmp
sub
pop
mov
jb
cmc
cmps
adc
adc
cmp
xchg
xor
imul
push
stc
add
pop
adc
call
sub
push
or
jno
push
icebp
or
jmp
ror
int
xchg
dec
sub
leave
cwde
leave
imul
push
inc
cdq
dec
popa
cdq
aam
push
and
adc
push
adc
loope
xchg
inc
ret
xchg
and
gs
xchg
cdq
mov
mov
pop
mov
push
jmp
psadbw
sti
jns
mov
jle
cwde
call
xor
xchg
adc
mov
iret
cmp
js
cmp
popf
fld
add
or
call
out
inc
scas
cdq
pop
jecxz
pop
arpl
jno
or
jge
add
imul
mov
mov
sbb
popa
xchg
push
mov
or
mov
jmp
mov
sbb
mov
scas
ss
push
or
pop
add
add
xor
sbb
mov
xor
xor
mov
nop
push
xor
lahf
idiv
stc
mov
lock
inc
dec
push
lahf
addr16
aas
rcr
or
or
xlat
nop
add
cdq
mov
and
jae
lds
popf
mov
das
sbb
fwait
sbb
xchg
jge
add
pop
push
adc
pop
(bad)
dec
test
pop
cdq
xor
test
xor
psubb
clc
mov
push
and
xchg
push
enter
fisubr
clc
xor
movs
imul
test
movs
jbe
sbb
lahf
sbb
add
(bad)
mov
rcl
nop
or
cmp
cmps
mov
dec
push
add
pop
or
stos
pop
inc
cmps
mov
lods
jp
lods
mov
adc
mov
or
aad
or
repz
dec
sbb
rcr
add
cmp
test
push
mov
pop
cli
fiadd
jg
pop
adc
xchg
arpl
test
push
jecxz
dec
add
repnz
jbe
cmps
add
lods
jnp
lahf
push
jmp
or
jp
rcr
sbb
aas
ret
dec
add
sbb
jecxz
pop
and
mov
inc
mov
retf
push
js
loopne
xor
cdq
nop
or
and
call
lock
or
dec
adc
mov
loopne
cmp
add
adc
js
or
xchg
sti
inc
xchg
(bad)
pop
mov
cdq
cmp
pop
mov
mov
mov
test
test
adc
pop
stos
popa
rol
imul
mov
sbb
daa
adc
movs
cmp
add
call
cmp
mov
mov
stos
jecxz
mov
dec
mov
jnp
pop
jmp
xchg
sbb
mov
pop
jns
fwait
inc
pop
sbb
push
mov
adc
add
popa
mov
jge
das
aas
nop
scas
sahf
adc
jp
add
cli
scas
jg
or
imul
lock
adc
mov
and
mov
call
dec
or
pop
add
aam
jle
xor
jne
int3
cmp
push
ficomp
scas
loope
movs
adc
mov
mov
push
sahf
nop
or
or
add
inc
cmps
out
fs
fld
in
call
(bad)
add
xor
sti
mov
je
inc
dec
jns
cmc
sub
xor
sub
(bad)
mov
rcr
popf
leave
cdq
mov
mov
test
in
dec
xor
lock
xor
mov
pushf
mov
in
mul
pop
push
rol
mov
inc
add
add
inc
dec
les
mov
jmp
dec
or
int3
jnp
xor
leave
addr16
fist
mov
(bad)
rol
inc
sbb
add
scas
pop
mov
clc
xor
add
nop
or
ret
add
or
pop
popa
nop
mov
mov
cmp
aas
push
or
or
in
stos
dec
int3
enter
pop
shl
jnp
nop
sbb
dec
or
enter
sub
aas
pop
adc
push
(bad)
pop
push
shl
xchg
xchg
mov
dec
sbb
jge
add
cld
add
mov
or
add
or
sub
or
or
sbb
or
adc
mov
ror
rcr
jnp
shl
dec
in
les
or
add
and
leave
out
push
pushf
cmps
outs
test
mov
movs
dec
sahf
jns
call
mov
or
mov
imul
scas
gs
(bad)
lock
pop
push
dec
mov
and
inc
mov
rcr
cmp
(bad)
fwait
sub
sbb
push
push
sar
es
outs
cmp
lahf
ins
aas
and
cmp
adc
in
xchg
sub
cmps
sub
psubusb
push
sbb
sub
(bad)
dec
push
push
imul
adc
mov
sbb
or
sar
or
test
sub
cmp
push
pop
int
loope
ror
sub
and
ror
cmp
xlat
jne
cmp
mov
int3
(bad)
shl
mov
or
pop
push
fcomp
dec
mov
lea
add
cmp
xchg
push
test
fstp
out
or
inc
sbb
xchg
or
push
sbb
arpl
push
test
adc
(bad)
loope
xor
sub
lds
je
lods
inc
icebp
mov
xchg
xor
cmc
and
pop
fwait
lods
gs
std
fs
xchg
dec
cdq
imul
daa
jbe
add
push
add
aam
call
int3
mov
push
cmp
or
enter
push
in
fsubp
cmp
mov
sbb
lods
and
push
or
jge
sub
or
push
outs
(bad)
lds
adc
aam
dec
inc
cmps
pop
xor
out
mov
pop
gs
test
loope
imul
ret
sub
ins
int3
cmps
xor
sub
inc
enter
fcom
add
push
(bad)
int3
sar
mov
int3
and
mov
je
dec
outs
in
jae
aam
push
outs
push
lods
or
cli
xchg
mov
sbb
pop
mov
ret
jmp
in
fsubr
bound
sbb
dec
out
jo
arpl
push
stos
adc
mov
dec
xor
adc
movs
loope
or
inc
jecxz
(bad)
cmp
rol
call
repz
test
cmp
call
fst
mov
xchg
dec
fmul
retf
xor
add
ja
mov
sbb
pop
mov
mov
test
bound
lds
out
into
ds
jmp
cmp
dec
cmp
test
mov
push
push
mov
pop
jnp
jns
in
fsub
dec
fucom
adc
imul
or
add
loopne
push
scas
fdivr
dec
aad
mov
imul
adc
pop
xor
sbb
jne
fcom
add
retf
jmp
cmp
jmp
dec
dec
jnp
push
dec
pop
mov
outs
push
lods
cmp
arpl
or
xlat
call
daa
jg
lods
sbb
call
in
dec
and
adc
xchg
(bad)
cmp
push
loopne
add
div
neg
inc
push
mov
xor
jne
push
push
xchg
dec
outs
fild
leave
idiv
jg
mul
repz
pushf
clc
push
fistp
(bad)
inc
dec
push
push
fdivr
out
adc
lock
jg
sbb
mul
movs
cwde
jmp
aas
add
xchg
das
xchg
add
stc
pop
iret
inc
stos
aas
cli
fild
ins
das
cli
lock
out
icebp
sbb
push
in
mov
iret
jp
add
push
loope
sub
pushf
repz
hlt
jle
pop
push
aas
and
lock
leave
push
aas
mov
outs
imul
mov
sub
call
stos
aas
(bad)
out
add
mul
sub
shl
scas
add
mov
addr16
das
bound
ins
mov
(bad)
jp
outs
push
add
pop
xor
add
nop
pusha
mov
int
sub
adc
fcom
fistp
push
lods
clc
mov
xor
imul
mov
inc
call
les
cmp
inc
push
ret
adc
dec
cmps
dec
lea
aad
push
(bad)
push
test
cmps
push
sub
and
dec
xchg
rcl
adc
jp
dec
xchg
and
xchg
inc
jmp
leave
xchg
cmp
pusha
icebp
xor
sbb
mov
sbb
or
clc
push
jo
mov
cdq
arpl
add
lods
in
xchg
scas
cmp
inc
mov
xor
int3
ss
inc
pushf
loop
xor
dec
lahf
sbb
inc
fwait
imul
adc
aad
pop
and
or
arpl
imul
test
sbb
mov
dec
mov
xlat
push
repz
enter
out
cmp
fisubr
cmc
(bad)
lods
adc
mov
das
outs
mov
ss
cmps
mov
xor
sti
int3
and
and
sub
jmp
out
fidiv
push
aaa
or
or
ret
lods
sub
mov
dec
xchg
inc
cmp
mov
mov
mov
mov
mov
out
sub
xchg
mov
cli
push
jo
and
(bad)
mov
xor
jo
retf
sbb
ins
and
push
inc
xor
mov
sub
push
inc
cdq
mov
cmps
mov
fimul
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
cmps
pusha
cwde
and
adc
pop
enter
test
xchg
xor
sbb
call
imul
movs
leave
xchg
sub
pop
leave
push
and
mov
int
sub
ins
fst
sbb
test
push
xchg
pop
les
jecxz
cmps
and
in
mov
aad
aaa
scas
call
daa
mov
sub
and
cmp
bound
push
jecxz
add
mov
dec
mov
jmp
in
push
cmps
fnsave
push
push
push
sub
ins
fcmovnb
mov
sub
mov
fincstp
in
mov
cmp
inc
movs
mov
push
mov
fwait
push
outs
popf
or
repnz
stos
arpl
dec
cmp
loope
dec
dec
ds
mov
cwde
jns
inc
pop
mov
aas
jmp
int
out
(bad)
xchg
mov
sbb
outs
push
or
loopne
cmp
(bad)
cli
cmp
jmp
xor
xchg
div
jecxz
mov
mov
cmps
call
es
sti
leave
inc
push
(bad)
cmc
adc
push
inc
push
pop
stc
cdq
push
mov
sahf
test
cmps
(bad)
pop
push
push
ret
xchg
out
pop
pop
or
inc
sub
xchg
in
mov
dec
or
and
fs
mov
and
push
pop
pop
and
xchg
ss
push
enter
mov
mov
movs
or
xor
imul
in
push
dec
fld
in
jne
xchg
inc
popf
jne
jno
dec
pop
scas
cwde
xchg
xchg
pop
ss
cwde
icebp
cmp
mov
inc
ret
mov
adc
fmul
addr16
jb
dec
xchg
sbb
mov
jns
mov
jae
call
sbb
mov
add
cmps
cmps
sbb
sahf
xchg
xor
mov
jnp
or
mov
xchg
aam
pop
pop
cmp
sbb
push
pop
in
test
pop
cmps
and
enter
jnp
mov
daa
fidivr
fisubr
push
aaa
out
mov
pusha
out
mov
mov
(bad)
xchg
sbb
xchg
aam
sar
gs
xchg
xchg
dec
dec
sub
in
daa
cmps
call
push
lods
int
pop
aas
xchg
mov
(bad)
call
push
add
sbb
mov
adc
outs
mov
mov
rcl
pop
mov
stos
lea
dec
stos
out
lahf
call
test
into
shr
(bad)
repz
push
push
or
sub
jg
mov
dec
or
sti
sbb
fyl2xp1
xor
lock
(bad)
mov
adc
fst
mov
add
dec
cmp
loope
pop
or
jae
enter
stc
xlat
sub
movs
pop
shl
les
mov
and
xchg
xchg
dec
je
fadd
fnsave
add
mov
out
mov
scas
dec
loopne
pop
dec
cmp
push
stos
repz
pop
mov
into
push
push
or
daa
sar
imul
jns
mov
inc
or
xor
sub
lea
xlat
dec
imul
sub
outs
add
into
xor
jge
push
js
or
icebp
push
pop
cmp
mov
xchg
push
and
sub
int3
push
mov
pop
push
mov
mov
and
fsub
inc
cmps
test
xchg
test
adc
shr
mov
push
cmp
f2xm1
xchg
js
push
clc
push
xor
pushf
inc
pop
cld
loopne
add
adc
cmp
xor
jo
jnp
cmp
popa
mov
inc
or
or
push
inc
or
pop
add
cmp
hlt
mov
inc
and
rcl
sbb
in
xchg
int3
mov
cmp
out
add
into
xchg
(bad)
jle
and
lea
push
dec
inc
inc
sub
mov
pop
sbb
or
loopne
cwde
dec
adc
cmp
xor
mov
cmp
dec
jne
add
imul
sub
mov
sbb
mov
and
out
mov
mov
xor
movs
xor
xlat
lods
sbb
nop
dec
push
jmp
mov
dec
int
jle
push
sub
sub
movs
xor
push
mov
jb
mov
cmp
nop
adc
mov
dec
pop
out
ret
add
out
or
inc
stos
cmp
dec
sbb
nop
int3
dec
dec
jno
xchg
sti
fiadd
aaa
lods
int3
inc
xor
leave
leave
shl
fwait
inc
add
pop
rcl
pushf
or
inc
jne
mov
and
rol
and
daa
adc
add
lock
sbb
and
xlat
stos
mov
pop
pop
push
inc
inc
aas
dec
or
mov
xabort
test
test
loope
cmp
into
aaa
test
sub
dec
aas
mov
imul
cmp
mov
ret
or
mov
lea
or
stc
mov
sub
in
and
sahf
mov
sbb
push
jo
stos
pushf
inc
mov
dec
sbb
pop
pop
rol
int3
ror
dec
mov
hlt
sbb
cmp
popf
inc
sbb
fs
xlat
stc
int3
xchg
rcl
mov
jl
jae
pop
(bad)
mov
stos
test
fadd
inc
movs
and
lods
cmp
mov
enter
xchg
lods
lods
gs
sub
dec
mov
addr16
(bad)
jne
and
test
mov
pop
je
add
push
add
or
imul
leave
cmp
push
xor
aaa
pop
loop
sar
jno
pop
mov
lods
in
gs
aaa
pop
stc
shr
jbe
push
pxor
dec
sbb
movs
inc
fisub
inc
pop
jmp
adc
xlat
cmp
and
sub
fist
out
call
pop
out
or
jge
jne
dec
mov
rol
cmps
jecxz
mov
(bad)
cmps
or
loope
mov
imul
nop
add
jb
xchg
cmp
pop
sub
loop
pop
or
xor
stos
xor
xor
dec
pusha
mov
cmp
jno
jg
addr16
out
or
(bad)
sbb
add
outs
cmps
loop
pop
xchg
xor
jnp
imul
inc
cmps
mov
ret
and
leave
pop
pop
test
inc
scas
inc
pop
or
(bad)
sbb
in
in
pusha
ins
pusha
pop
ret
cmps
lahf
std
dec
enter
sbb
adc
jns
fild
and
dec
outs
aad
adc
cmps
xor
int
fmul
cmp
jmp
mov
fwait
and
cwde
sbb
sub
test
jo
mov
clc
mov
or
fcmovnb
and
outs
imul
or
mov
sbb
sub
xchg
xchg
fbstp
add
lea
mul
(bad)
clc
mov
test
xor
ins
out
js
(bad)
popf
dec
adc
les
outs
aad
xchg
fidiv
cmps
dec
jmp
add
mov
cli
into
ret
jmp
(bad)
pop
xchg
dec
frstor
cld
mov
jmp
fisub
popa
jo
in
and
xlat
shl
dec
cmps
outs
or
rol
(bad)
cmc
xor
leave
pusha
pop
cmp
shr
inc
adc
stc
call
or
adc
sbb
out
cwde
ret
pushf
sar
fild
or
jae
ror
rcl
(bad)
mov
xchg
fisubr
aam
jmp
xor
es
jmp
add
jp
sbb
inc
test
fdiv
in
scas
(bad)
jo
xor
mov
pop
and
mov
mov
jae
adc
idiv
(bad)
div
fidiv
and
stos
int3
adc
dec
sbb
loop
jl
or
jne
stos
std
js
mov
push
xchg
div
retf
sub
or
add
ss
sbb
es
lods
icebp
push
cli
inc
mov
xor
scas
pop
lock
scas
jge
stc
ins
sti
adc
or
cwde
rol
mov
ret
aad
mov
pop
fs
je
push
jl
xlat
jo
test
push
scas
loopne
rcl
mov
add
add
mov
jns
pop
gs
inc
or
clc
or
add
test
popa
ret
sub
jle
idiv
daa
jg
daa
ja
xor
push
jnp
adc
dec
lock
jge
add
ret
cmp
add
push
cmp
pop
jne
(bad)
cmp
jo
lahf
sub
inc
or
sar
push
push
jbe
call
or
jle
mov
and
xor
xor
enter
ja
mov
mov
jnp
mov
test
test
es
add
and
test
(bad)
push
test
mov
push
jns
cmps
inc
rol
or
push
cmps
enter
or
jne
add
sub
jle
mov
test
sub
(bad)
daa
mov
sbb
cmp
jnp
mov
add
test
add
push
dec
mov
mov
dec
jmp
xlat
or
or
jne
(bad)
fs
ja
adc
mov
add
inc
gs
mov
ja
jnp
ds
daa
loopne
adc
xor
jle
out
cwde
movs
jnp
or
nop
add
test
cmp
mov
lea
aam
push
(bad)
pop
push
int3
cmps
(bad)
fld
(bad)
lea
dec
dec
js
jno
call
sub
ins
loopne
stc
jae
out
adc
addr16
test
fs
mov
nop
mov
xor
rol
test
ja
push
jnp
cwde
xchg
inc
rcl
add
repnz
xchg
push
inc
xchg
fmul
je
pop
cmp
ja
push
inc
or
rol
inc
xor
dec
push
xchg
out
push
pop
rcl
sbb
add
add
mov
xchg
dec
test
dec
fst
ja
(bad)
jnp
addr16
sub
loopne
dec
and
pop
xchg
pusha
cdq
test
test
jae
mov
pop
sub
or
or
or
inc
inc
add
outs
and
push
push
(bad)
ja
rcr
loop
mov
nop
test
xchg
and
xchg
or
test
mov
ja
test
popf
les
jns
sub
pop
xchg
(bad)
out
movs
dec
sbb
ret
xor
imul
outs
leave
push
push
xor
stc
add
sub
xor
or
sbb
cdq
cmp
mov
mov
jae
mov
cld
aaa
test
(bad)
outs
xor
dec
or
popf
xchg
mov
adc
push
and
loopne
test
pop
ins
nop
inc
(bad)
cdq
call
outs
cmp
test
idiv
bound
adc
adc
cmp
mov
in
ss
jae
dec
add
cmp
mov
xchg
fimul
sahf
pop
ins
sbb
mov
sar
cmp
adc
scas
leave
or
ins
jmp
pusha
xchg
push
mov
inc
adc
push
sbb
add
cmp
add
es
inc
movs
mov
sub
shl
add
pop
leave
adc
in
add
mov
dec
movs
dec
add
pop
push
cmps
iret
cmps
movs
test
add
call
cmp
add
or
loopne
push
jb
shl
push
cmp
pop
lock
inc
xchg
inc
jp
mov
test
adc
cmp
test
movs
(bad)
cmps
test
out
push
call
sub
or
movntq
imul
icebp
push
test
sub
xchg
outs
cli
stos
jb
sbb
bound
mov
jg
and
mov
inc
lods
mov
or
movs
mov
test
jns
or
jge
test
and
inc
(bad)
movs
ret
pop
pop
push
and
adc
arpl
mov
dec
sub
xchg
push
and
cmp
sub
push
neg
sti
push
xchg
stos
dec
add
or
jmp
hlt
pop
xchg
pusha
xchg
add
jecxz
fsub
ss
stc
sbb
push
test
cmp
(bad)
mov
and
pop
sti
scas
and
(bad)
xchg
xchg
es
xchg
fcomp
sti
stos
xor
pop
push
imul
add
loopne
or
add
xlat
inc
cwde
xchg
jmp
int
mov
scas
call
push
inc
push
adc
rol
retf
stos
mov
retf
mov
test
(bad)
addr16
les
inc
or
repz
loop
lods
mov
mov
mov
or
xor
imul
fist
or
data16
dec
mov
jo
mov
jo
loopne
xchg
rol
jne
test
push
cmps
or
jp
sbb
stos
retf
mov
retf
hlt
xchg
jg
sub
mul
test
or
sahf
retf
cmps
and
lock
cwde
(bad)
movs
aad
mov
mov
add
sub
mov
mov
iret
pusha
mov
xchg
mov
jnp
jl
add
icebp
adc
adc
add
pushf
shr
movs
stos
mov
jmp
mov
jno
pop
and
mov
shl
ins
dec
ror
gs
clc
dec
jne
dec
or
xor
xor
shl
push
mov
retf
mov
retf
sbb
jge
mov
dec
ss
fild
mov
mov
and
sub
dec
push
fwait
xchg
mov
pop
adc
dec
add
pop
jl
fsubr
dec
addr16
xlat
mov
jmp
iret
ror
cwde
(bad)
aam
or
daa
mov
or
jnp
and
add
mov
mov
xor
add
scas
ret
lock
jp
adc
pop
cwde
pushf
leave
call
mov
gs
dec
cmp
lds
inc
mov
movs
push
sti
shr
call
(bad)
sbb
(bad)
mov
ret
(bad)
aas
push
add
ret
jp
mov
inc
or
loopne
lahf
ror
loopne
scas
sar
mov
pop
and
mov
sti
in
push
or
xor
loopne
into
loopne
cs
cs
into
jns
(bad)
in
into
in
fmul
jecxz
sub
mov
sahf
mov
cmps
jl
xlat
push
imul
mov
fld
sbb
mov
call
lea
add
retf
or
retf
mov
push
ss
loopne
or
sbb
cmp
int3
aam
into
shr
push
stos
(bad)
sar
mov
mov
fistp
sub
cs
ret
rcl
xor
shl
pop
rol
mov
pop
inc
pop
ins
das
and
gs
fmul
fst
dec
cwde
adc
std
add
sub
jo
mov
pop
xchg
nop
xor
data16
sbb
inc
outs
add
fcmovnbe
cmp
or
lods
xlat
cmp
push
rol
shr
mov
arpl
lods
xor
sbb
xlat
jbe
shl
shl
xlat
ja
shl
icebp
les
shl
retf
pop
mov
retf
mov
aam
or
or
aam
mov
adc
jl
pop
dec
sbb
iret
lock
sbb
cmps
fnsave
jo
or
mov
add
dec
rol
xchg
iret
jne
or
into
sahf
loopne
mov
or
or
pop
fadd
jge
(bad)
popf
mov
push
cmp
push
sub
sub
push
fwait
add
rcl
jmp
or
fnstcw
xchg
mov
mov
mov
cdq
jp
movs
lea
sub
add
enter
fdivr
aad
test
and
leave
add
loopne
jb
pushf
mov
pushf
cld
pop
add
leave
es
sub
test
data16
cmps
mov
mov
adc
aam
dec
in
fld
std
fucom
cmp
mov
jno
adc
cmp
add
xor
pop
add
scas
nop
fbld
jbe
in
rcl
fldenv
js
loopne
mov
je
leave
aas
mov
jne
loope
div
sbb
xlat
xchg
and
add
and
(bad)
leave
mov
mov
jg
mov
sub
xchg
loopne
push
sbb
pop
inc
inc
jne
adc
mov
sbb
cmps
or
mov
das
xchg
jp
out
shr
movs
jb
jno
call
inc
xor
adc
push
jnp
sub
add
stc
and
and
js
sbb
or
lock
je
ds
mov
sub
xchg
adc
aam
ficom
cmp
(bad)
push
and
cmp
stc
sub
mov
fmul
daa
mov
adc
call
inc
inc
es
sub
js
iret
call
add
mov
jecxz
add
popf
std
je
fwait
push
nop
stos
(bad)
xchg
pop
pop
or
rol
mov
std
jge
mov
mov
and
pop
jne
jne
push
pushf
and
dec
sub
(bad)
in
gs
mov
xlat
pop
and
shr
pushf
sbb
adc
out
mov
sahf
jecxz
icebp
jbe
ficomp
nop
add
dec
jno
add
dec
mov
clc
(bad)
fldenv
xchg
scas
mov
ds
and
add
adc
adc
xchg
gs
daa
mov
sbb
xchg
popf
jp
or
sahf
(bad)
inc
xchg
inc
fmul
push
and
or
call
inc
xor
retf
jle
pop
mov
or
fcmovnb
jne
cmps
ja
sbb
loope
js
icebp
shl
push
push
pop
jnp
pop
push
in
xor
jne
hlt
mov
js
setae
adc
popf
ficomp
rcl
scas
mov
ins
push
pusha
call
pop
xor
ins
xchg
out
add
mov
lods
retf
mov
test
daa
popf
adc
jg
clc
or
loop
clc
or
lock
cmovns
jle
jg
sbb
lahf
stc
out
(bad)
jns
push
mov
js
mov
add
sbb
lds
out
popa
arpl
into
and
jbe
dec
sti
xlat
ds
lods
mov
shl
xchg
fs
pushf
xchg
pmuludq
push
(bad)
dec
lock
imul
push
adc
fdivr
xchg
or
adc
push
cwde
inc
les
and
sbb
ret
loop
and
xchg
mov
push
and
and
shl
mov
aad
lods
rcl
in
xchg
and
pushf
movs
pop
shl
inc
xor
jne
loope
mov
and
test
jmp
mov
mov
retf
inc
scas
sbb
mov
push
jge
mov
in
push
jmp
sub
pop
push
fistp
add
and
xchg
and
movs
pop
icebp
bound
sub
in
cmc
js
out
fist
sbb
popa
ror
cmps
dec
das
adc
hlt
mov
mov
mov
das
lods
pop
test
into
mov
inc
dec
fild
pop
mov
push
sti
aad
fdiv
call
lods
dec
push
fdiv
and
fwait
shl
mov
xor
dec
mov
xor
mov
fdivr
jae
cs
adc
pop
pop
push
pushf
ss
loopne
ja
dec
xor
(bad)
rcl
xchg
cmp
popf
fwait
aad
neg
mov
add
mov
call
fwait
data16
ret
jecxz
jmp
jmp
push
gs
push
push
shl
xchg
into
inc
das
mov
push
dec
icebp
mov
xor
lods
sti
loopne
ins
and
add
cmp
shl
das
mov
cmp
je
inc
or
nop
and
push
pop
nop
inc
push
cmp
cmp
daa
sahf
lock
cmp
mov
mov
jns
cmp
xor
js
push
jae
imul
fsub
(bad)
fld1
push
loop
fsubr
push
cs
in
sbb
xor
inc
adc
mov
dec
shl
mov
xor
and
sahf
pushf
jecxz
cmp
xor
rol
pop
jl
aad
sub
inc
sbb
dec
aam
fsubr
int
xor
sub
push
fcmovnbe
push
adc
inc
push
pusha
add
sbb
and
mov
cs
mov
mov
mov
or
shl
pop
inc
xchg
pushf
movs
dec
out
mov
cdq
or
bound
push
add
dec
push
fbstp
js
adc
les
adc
push
pop
in
ins
push
add
out
or
pop
ds
pop
xchg
(bad)
out
sbb
xor
mov
cmc
mov
inc
movs
shl
push
jno
cmps
arpl
jae
stc
les
push
ins
rol
loopne
push
adc
ja
mov
xchg
xor
sbb
in
cmps
mov
xchg
cmp
jne
data16
into
mov
jo
adc
popa
fs
(bad)
mov
and
aaa
(bad)
jmp
xor
inc
adc
ins
cmp
imul
and
stc
and
inc
push
xchg
jecxz
pop
pop
loopne
test
fbld
mov
add
cwde
add
aam
lods
jmp
dec
cmp
out
repz
jbe
cdq
dec
add
sbb
sub
inc
mov
ins
push
inc
idiv
test
nop
retf
out
jno
push
push
clc
xchg
out
fs
push
cs
or
nop
and
dec
(bad)
nop
and
lds
and
add
inc
add
mov
inc
pop
retf
das
outs
jp
adc
(bad)
sbb
shl
push
(bad)
cmp
mov
add
push
data16
adc
mov
test
xor
dec
retf
(bad)
push
movs
xchg
add
add
cmc
mov
push
xchg
mov
popf
fs
jo
cs
sar
dec
jo
(bad)
gs
jnp
lock
clc
push
les
xchg
pcmpeqb
and
cdq
fdiv
cmps
cwde
inc
xor
jecxz
(bad)
or
sub
inc
xchg
call
pop
in
jb
shl
dec
or
or
and
mov
js
and
sbb
push
sub
dec
rol
dec
arpl
cmp
sub
(bad)
movs
mov
xchg
cmps
imul
js
pop
mov
lds
and
inc
mov
jb
dec
out
xchg
xor
xchg
gs
pop
inc
mov
and
xbegin
mov
xor
sub
jno
sbb
cmp
xchg
call
xor
loop
retf
xchg
inc
fimul
xor
hlt
jecxz
addr16
sub
bound
cmp
ja
mov
aaa
addr16
icebp
adc
inc
jp
add
cmp
add
cdq
sub
push
xchg
inc
xor
jp
and
mov
inc
rcl
dec
aaa
cmps
leave
popf
sub
mov
xor
cmp
and
and
and
retf
pushf
xchg
and
adc
inc
sbb
push
inc
mov
leave
aaa
and
jl
das
(bad)
xor
test
mov
int
je
popa
cmp
sbb
fiadd
cli
js
in
jmp
(bad)
(bad)
mov
xchg
sbb
xor
sbb
xchg
inc
adc
xchg
cmps
xor
int
inc
push
dec
mov
sub
xor
and
test
sbb
xchg
or
pop
mov
icebp
nop
sub
out
add
adc
xchg
je
mov
xor
and
push
sbb
inc
cmc
stos
dec
pop
ss
mov
add
push
inc
jp
js
test
mov
push
xchg
sti
dec
sbb
je
or
add
icebp
mov
fild
adc
lahf
push
fadd
xor
sbb
pop
jl
xchg
or
test
push
mov
xchg
ret
sub
ds
sbb
push
add
mov
pop
ds
call
inc
(bad)
in
push
push
mov
or
or
arpl
fs
lahf
push
mov
push
dec
jne
xchg
pop
je
push
movs
sbb
retf
jo
pop
xchg
xchg
xor
pop
sbb
ror
loopne
or
call
xor
sbb
aas
cmp
int3
and
jmp
sub
fidivr
fistp
jecxz
fisub
push
pop
mov
xchg
xor
mov
xor
int3
pusha
add
fs
xchg
pop
push
mov
add
loopne
add
jo
adc
adc
cmp
push
ror
clc
mov
xchg
bound
jnp
add
cmp
call
pop
mov
mov
arpl
add
push
add
pop
in
out
mov
and
aas
bound
jecxz
mov
pusha
jo
and
add
movs
xor
push
mov
icebp
and
fisub
mov
jge
sub
cmp
maskmovq
test
sti
adc
sbb
and
cmp
add
call
or
mov
push
or
pop
ficom
mov
shr
adc
rol
inc
xor
xlat
lods
ds
icebp
or
sub
push
jge
pop
or
cmp
mov
push
fcomp
jge
cmp
cli
add
call
and
repz
sub
icebp
mov
cmp
jg
add
push
add
fcomp
mov
push
ins
test
sbb
xor
and
jnp
cs
cmovs
adc
ror
cmp
ds
inc
jbe
sbb
dec
xchg
cmp
outs
loop
fs
aaa
xor
fmul
retf
fadd
(bad)
push
adc
push
inc
or
mov
ficom
xor
mov
xchg
sbb
add
sub
and
clc
push
or
repz
lea
or
xor
add
pusha
popa
or
daa
ror
mov
dec
push
mov
mov
sub
push
push
in
mov
in
sub
inc
and
mov
dec
or
pusha
and
push
aaa
sbb
add
into
stos
dec
dec
sbb
aad
outs
jo
nop
lea
mov
mov
and
jno
push
and
sbb
enter
inc
pusha
add
or
or
sbb
or
in
pop
sub
mov
loope
jge
dec
cmp
dec
jmp
stos
repnz
je
adc
ret
jp
ret
lahf
es
xchg
jg
push
mov
or
ja
cmp
icebp
mov
push
pop
add
mov
arpl
mov
js
ss
jno
dec
mov
pop
mov
cwde
add
mov
fadd
pusha
add
xor
call
shl
add
retf
stos
adc
adc
les
xchg
stos
fistp
mov
mov
pop
or
add
mov
add
sub
clc
mov
cwde
xor
call
sbb
xchg
daa
push
add
jno
dec
cmp
and
add
shr
mov
fisubr
push
xchg
and
and
sub
adc
ret
shl
ret
add
adc
add
add
test
add
arpl
fiadd
or
out
enter
xchg
jp
inc
push
sub
repnz
mov
arpl
js
pop
sub
retf
adc
add
icebp
mov
fdiv
pop
sbb
sahf
add
bound
(bad)
fisubr
(bad)
aam
(bad)
data16
jl
aaa
xor
dec
add
inc
das
add
add
mov
mov
jp
or
xor
add
pop
sub
xor
stos
adc
or
adc
cdq
mov
cli
inc
xor
inc
pop
and
cmp
xor
xor
mov
inc
mov
push
(bad)
leave
fild
and
dec
clc
(bad)
sbb
(bad)
arpl
cmp
mov
inc
add
pop
(bad)
pop
ret
scas
add
add
add
mov
mov
adc
ret
mov
cwde
sub
add
xor
repz
cdq
popa
jl
gs
lods
xchg
dec
dec
ror
mov
xchg
enter
mov
mov
sub
add
js
inc
and
mov
rol
rol
mov
inc
lock
lahf
add
xchg
test
add
int
lods
jl
pop
bound
(bad)
mov
pop
clc
adc
wbinvd
(bad)
xor
(bad)
js
daa
pop
and
int
sbb
add
sub
arpl
repz
cmp
xchg
fild
scas
fcmovbe
dec
scas
int3
int
sbb
scas
int3
shl
retf
mov
dec
mov
xor
mov
test
daa
or
rol
mov
retf
and
cmp
fmul
cdq
imul
xor
pusha
add
sbb
cmps
jb
sub
lods
cmps
les
test
and
or
add
push
jg
movs
mov
test
xchg
or
adc
xchg
out
add
mov
fistp
jl
or
dec
imul
loope
dec
and
inc
mov
mov
arpl
loopne
cmp
add
jo
out
cdq
movs
push
add
mov
mov
dec
xchg
in
add
add
push
test
add
cmp
fwait
mov
call
dec
inc
cmp
mov
or
call
mov
stos
sub
jge
(bad)
sbb
test
mov
movs
add
dec
push
gs
sar
add
push
scas
ins
push
pop
jge
or
or
in
rol
adc
inc
jo
ret
sub
sbb
cmp
mov
push
xchg
lods
rol
xchg
sub
sbb
mov
add
je
and
xor
(bad)
xor
and
cmp
push
inc
inc
add
add
pushf
mov
(bad)
sbb
cmp
push
and
test
cdq
js
ss
fidivr
cmp
cmp
cmp
(bad)
jmp
cmp
aam
and
add
push
mov
aam
in
cdq
shl
cmp
add
int3
pop
rol
or
addr16
xor
or
dec
dec
cwde
add
add
sbb
mov
push
nop
xor
xor
call
fs
mov
sbb
push
or
push
data16
out
aas
cmp
test
out
push
sub
add
xor
sbb
cmp
fisttp
mov
fwait
add
cmp
test
test
pop
shr
(bad)
jmp
pop
push
push
cmp
dec
cmp
mov
push
cmp
push
or
dec
mov
pop
mov
aas
or
and
(bad)
(bad)
fild
(bad)
dec
and
cmp
call
push
jb
or
ins
int
xchg
jge
jo
add
mov
retf
into
sbb
add
add
int3
test
or
jbe
pop
movs
dec
pop
shl
push
push
fld
xchg
pop
cmp
lods
lea
std
pop
inc
inc
add
imul
mov
bound
mov
or
xchg
pop
jecxz
(bad)
or
push
push
nop
mov
xchg
sbb
pop
nop
test
add
push
adc
inc
(bad)
gs
mov
lods
fmul
ja
fcomp
sbb
sbb
push
imul
sar
and
cwde
add
add
jle
inc
push
inc
sbb
fcom
xor
push
lock
repz
mov
aad
xor
mov
sub
jecxz
loope
sbb
sbb
push
xchg
lea
xchg
fiadd
add
mov
out
dec
pop
cdq
lds
mov
test
leave
xchg
pop
cmc
pop
fild
jo
div
xor
adc
pop
je
(bad)
cld
jge
iret
in
pop
test
mov
ss
sub
loopne
mov
inc
fild
sub
test
mov
add
adc
adc
test
push
xchg
jne
push
loope
xor
addr16
pop
inc
push
dec
add
(bad)
inc
nop
sbb
and
dec
and
bound
sbb
and
push
js
dec
or
dec
xchg
test
push
pop
add
cmp
inc
pop
inc
add
(bad)
fdiv
sub
or
add
mov
sub
and
xor
add
adc
mov
cmp
pop
and
sbb
out
xor
enter
popa
mov
xchg
add
or
test
pop
push
in
pusha
fs
sub
repnz
dec
into
fs
pop
int3
test
mov
xor
gs
add
test
fstp
call
push
pop
(bad)
bound
fiadd
add
enter
adc
push
xor
dec
xor
arpl
push
outs
out
jle
out
popf
push
loope
cmp
mov
fwait
inc
or
xor
inc
mul
pop
pop
xchg
add
mov
sub
cmp
mov
sub
add
jl
add
and
imul
inc
xchg
cmp
mov
call
data16
add
nop
int
inc
add
adc
cmp
jmp
pushf
dec
mov
adc
add
mov
fwait
into
imul
out
jb
cmps
hlt
add
dec
dec
mov
pop
and
or
add
push
xchg
out
inc
pop
jns
pop
jns
xchg
xchg
test
shl
mov
jmp
pop
fisttp
push
add
add
clc
test
pop
and
sub
or
add
dec
aas
loop
pop
cmp
ficom
mov
mov
push
mov
jmp
mov
jmp
add
add
(bad)
jmp
mov
mov
int
dec
sahf
pop
mul
ins
div
jp
cmp
cmp
inc
mov
data16
(bad)
xchg
add
add
mov
pop
mov
sub
or
adc
add
out
mov
outs
sbb
jmp
outs
jecxz
pop
xchg
call
fisubr
ss
popf
sti
xor
adc
out
gs
xor
pop
jne
pushf
mov
cmp
push
hlt
les
lahf
gs
add
test
lock
test
push
test
shl
ins
pop
lock
fadd
(bad)
in
cmps
xor
xor
ins
ficom
jno
std
mov
cmp
mov
mov
and
inc
pop
je
jg
sbb
mov
or
ror
je
sahf
jecxz
dec
pop
xor
repnz
mov
(bad)
data16
jg
pushf
push
into
push
and
pop
add
int
mov
pop
ds
loop
xor
pop
jae
inc
jo
mov
pop
das
xchg
xchg
test
xor
lahf
repz
test
cmp
jae
ds
aas
iret
add
jno
test
cmps
add
aaa
and
add
hlt
sbb
or
mov
imul
mov
jno
je
iret
add
(bad)
ja
lahf
ja
scas
ja
xchg
dec
dec
test
test
adc
(bad)
adc
test
jno
pop
mov
and
cmc
fwait
aam
call
icebp
jbe
bound
imul
pop
mov
lods
cmp
add
add
xchg
pop
iret
xchg
xchg
out
pop
fadd
idiv
mov
cmp
jbe
inc
add
imul
js
es
call
inc
pop
add
pop
neg
dec
ja
lods
jno
(bad)
hlt
inc
cmps
test
add
jg
test
jp
xchg
jp
sbb
adc
inc
imul
dec
push
pop
js
cmp
add
jo
movs
(bad)
jb
pop
bound
pop
or
and
mov
gs
sbb
loopne
shr
xchg
push
xchg
mov
bound
stc
rcr
sub
push
not
pop
push
jbe
pop
jne
repz
mov
(bad)
ror
std
rcr
div
hlt
dec
dec
add
pop
je
pop
jp
scas
imul
cli
test
add
and
and
bnd
cmc
push
fadd
out
mov
add
add
mov
ror
dec
inc
push
pop
push
iret
jnp
jmp
pop
out
js
pop
jl
lock
popa
push
xchg
pop
xlat
lock
cmps
sub
or
add
xlat
in
mov
pushf
cld
or
and
outs
mov
nop
inc
add
inc
add
pusha
cmps
test
adc
ins
call
unpckhps
pop
lock
mov
aaa
jb
js
adc
shl
mov
pop
xchg
sub
mov
xlat
movs
xor
jmp
outs
cmp
add
and
add
sbb
push
(bad)
ins
mov
push
push
inc
pusha
nop
and
or
pop
xor
mov
lds
imul
sub
mov
sbb
fiadd
retf
jb
mov
xchg
xor
lock
loop
test
adc
adc
mov
adc
shl
push
add
and
jmp
out
in
fpatan
cmps
rcr
push
mov
arpl
xchg
xor
xchg
and
xchg
cmp
adc
inc
inc
rcl
mov
push
push
or
push
cld
mov
div
shl
repz
lods
fstp
pop
inc
outs
and
dec
mov
lock
sete
adc
mov
xchg
and
sbb
and
test
call
sbb
dec
xchg
push
adc
push
mov
pop
cld
push
pop
dec
jp
rcl
inc
mov
add
cmp
mov
adc
popf
xor
push
jns
add
ss
mov
ror
frstor
daa
pop
jnp
mov
ins
jmp
push
jg
xchg
add
lock
sub
icebp
lahf
adc
push
cmp
arpl
or
shl
ja
sbb
cmp
addr16
push
push
cmp
sbb
les
mov
js
xchg
or
xor
(bad)
bound
bound
arpl
in
popf
push
adc
push
add
xor
or
cdq
cmp
pop
or
fld
aaa
out
test
xchg
je
jmp
adc
cwde
bound
xchg
test
sub
or
pop
adc
or
js
lahf
or
dec
sub
loope
loope
xchg
test
inc
xor
and
and
dec
pop
add
pushf
push
ret
adc
sub
pop
push
ss
push
cmp
imul
mov
xor
push
jnp
in
dec
and
inc
mov
popa
(bad)
ja
mov
sub
jmp
sbb
lods
cs
mov
add
fidivr
mov
test
test
and
mov
mov
outs
imul
push
mov
inc
jbe
or
cdq
pop
fcomp
jne
nop
imul
cmp
movs
movs
mov
mov
adc
scas
fcom
icebp
(bad)
jmp
sbb
or
sar
dec
push
hlt
sbb
xchg
add
outs
cmp
or
mov
and
fsubr
xor
sahf
add
xor
mov
sbb
sbb
mov
pushf
mov
cmc
je
adc
jbe
xchg
int
xchg
or
jmp
(bad)
jno
cdq
movs
(bad)
adc
enter
and
adc
mov
cdq
cmp
or
push
mov
enter
or
mov
fistp
stc
mov
sub
sbb
sbb
pop
cmp
adc
jbe
add
jae
nop
sbb
sbb
add
rol
out
(bad)
out
je
lods
ja
retf
inc
lock
mov
ins
and
mov
cmps
cmp
push
or
xlat
fadd
push
xchg
add
add
shl
out
test
les
dec
push
lods
(bad)
fldcw
int
pop
test
adc
in
rcl
push
jo
add
or
push
push
adc
inc
call
inc
jecxz
out
pop
retf
sbb
(bad)
jne
or
call
push
ss
or
dec
int3
test
push
xor
in
or
inc
(bad)
mov
mov
push
mov
or
add
mov
xchg
aad
or
sbb
and
mov
jle
loop
mov
or
push
adc
and
sub
loop
lods
enter
add
cmp
inc
sub
and
fnstenv
xor
out
ins
sbb
and
and
mov
xor
shl
xor
js
and
cmp
adc
sub
pop
rcl
cmp
push
xchg
jbe
mov
retf
ins
adc
push
inc
or
inc
adc
dec
xchg
mov
movs
add
or
push
jbe
xor
cmp
xor
div
mov
xor
mov
je
mov
inc
aaa
in
or
fcmovu
bound
int
clc
inc
pushf
mov
outs
test
dec
outs
popf
cmps
imul
dec
jp
mov
jns
aaa
push
adc
jge
add
add
push
and
cmps
adc
mov
popa
and
cwde
adc
xchg
xor
rol
mov
or
stos
xchg
pushf
jns
push
mov
jno
fucom
test
inc
jbe
or
push
mov
rcl
adc
xchg
mov
stos
dec
fwait
sub
cmp
mov
xor
movs
cmps
or
mov
fsub
adc
loopne
add
sub
call
movs
lds
ror
or
mov
ret
dec
je
lods
jl
arpl
cli
fadd
je
leave
jns
ins
push
das
mov
sbb
add
shl
mov
in
push
xor
sub
repz
mov
jecxz
imul
add
enter
clc
stos
lods
gs
ret
mov
mov
push
loopne
test
mov
xchg
popa
push
iret
mov
cwde
inc
stos
mov
outs
adc
call
movs
bnd
xor
adc
scas
add
dec
pop
call
shl
test
call
int
popa
add
push
pop
add
jp
loopne
mov
add
enter
dec
mov
xor
jecxz
shr
sbb
int
fnstenv
call
ror
loopne
call
call
fld
pop
xor
out
cmps
sub
pop
cmp
pop
les
inc
add
stos
call
adc
div
ds
(bad)
fmul
and
mov
mov
jmp
inc
leave
cli
mov
mov
mov
jb
or
mov
sub
imul
adc
nop
jo
pusha
call
int
pusha
repz
(bad)
pop
mov
dec
or
cs
stos
sub
inc
pop
iret
push
dec
push
push
xchg
jno
pop
jns
xor
ror
adc
cld
ss
sbb
retf
cmp
sbb
(bad)
(bad)
xor
loopne
ins
ins
retf
out
jle
stos
jg
mov
nop
mov
mov
pop
ret
jns
iret
and
sub
pop
pop
jb
rcl
daa
inc
mov
dec
sbb
(bad)
push
rcl
in
add
(bad)
fst
lock
sub
sbb
push
dec
jecxz
mov
ficomp
ror
mov
jl
mov
popa
ja
jmp
mov
rol
sti
jle
jb
ins
and
js
lods
jnp
test
cmp
popa
mov
add
push
sbb
xchg
push
jecxz
repnz
mov
loopne
cmp
addr16
xor
add
movs
inc
xor
bound
cs
fldenv
cdq
sbb
dec
jp
clc
push
mov
arpl
jbe
add
add
inc
xchg
outs
push
xchg
pinsrw
aam
out
or
bound
jb
mov
ret
xor
mov
(bad)
cmp
fidiv
xchg
mov
cmp
daa
xlat
movs
pop
lock
(bad)
(bad)
xchg
retf
mov
jo
push
push
jl
rol
js
rcl
mov
div
and
ds
jp
and
fisttp
inc
mov
sahf
pop
ins
inc
add
jg
imul
ficomp
lods
outs
jge
pop
pop
mov
sbb
mov
cwde
and
(bad)
out
and
mov
sbb
jo
or
dec
jne
mov
or
xchg
cmps
inc
(bad)
loope
sbb
int
popa
push
lds
pop
push
sbb
sbb
ret
rcl
sbb
pop
sub
or
jae
lahf
push
mov
and
pop
std
popa
mov
adc
xchg
add
cdq
inc
add
adc
add
sbb
in
in
pop
(bad)
sub
push
cmp
mov
or
dec
push
xlat
pusha
inc
stos
call
imul
mov
loopne
(bad)
pop
out
pushf
or
or
push
test
pusha
fcomp
or
sbb
inc
adc
mov
mov
and
loope
mov
adc
lahf
xor
sar
(bad)
cmp
mov
ficom
add
or
fisttp
rcl
popa
push
dec
lahf
sub
aaa
dec
lahf
fld
test
retf
and
xchg
loopne
mov
and
inc
mov
xor
imul
push
sti
jge
sahf
sub
xchg
sahf
jbe
adc
(bad)
and
bound
xor
(bad)
cmp
outs
loop
pop
loope
pusha
loope
sbb
sbb
add
pusha
pop
repnz
lods
mov
sub
xchg
mov
nop
pop
sub
inc
ret
or
sbb
adc
sbb
dec
cdq
adc
in
test
xor
dec
imul
fs
and
and
icebp
test
jno
pop
or
xchg
jecxz
and
cmc
or
loopne
xchg
push
add
push
cmp
popa
lock
ror
(bad)
xchg
jo
test
sbb
mov
xlat
ror
inc
cs
daa
mov
xor
cli
rcr
inc
outs
test
ins
enter
sub
ret
xor
inc
dec
and
jo
les
inc
or
dec
sbb
and
mov
jl
mov
pop
ror
int
ins
inc
xor
iret
sub
mov
dec
pop
pop
movs
sub
lds
sbb
rcl
rol
sub
add
shl
inc
or
rcr
rcr
in
gs
imul
in
push
xor
xlat
mov
dec
cli
dec
aas
popf
leave
dec
enter
aad
mov
push
in
(bad)
add
cwde
inc
dec
push
adc
mov
push
sub
push
loop
inc
dec
inc
es
rol
cmps
and
popa
sub
fs
jno
add
push
and
movs
sbb
inc
push
stos
inc
imul
xor
jmp
and
(bad)
push
shl
sub
out
out
or
add
push
add
push
sbb
and
xor
dec
outs
and
mov
pusha
(bad)
jecxz
(bad)
mov
fld
int3
pop
pop
hlt
inc
sbb
inc
sub
sub
pop
mov
call
sub
cmps
push
sbb
sub
sub
inc
sub
ins
retf
movs
inc
mov
adc
and
cmp
jne
dec
nop
pop
inc
add
pop
push
clc
inc
sub
xor
sub
pop
repz
sub
mov
xor
pushf
sub
ret
sub
inc
jmp
call
xchg
lea
(bad)
sub
out
clc
sub
dec
and
sub
and
sbb
or
jns
outs
out
or
ror
ror
ins
add
fadd
mov
mov
pop
jae
call
in
fld
nop
push
test
sbb
jb
and
ret
dec
pushf
sbb
out
call
ret
dec
add
inc
movs
mul
push
jmp
cmps
rcr
push
(bad)
jmp
dec
ror
inc
stos
out
rol
add
inc
add
ror
rol
jmp
fadd
and
call
mov
mov
ret
sub
ret
inc
loope
jmp
xor
sbb
add
push
dec
mov
or
popa
stos
mov
stos
push
push
ins
sub
lea
hlt
cmps
xor
inc
movs
jmp
pusha
add
imul
mov
push
cmp
add
adc
sub
fs
push
xor
push
sub
push
scas
cli
xchg
bound
aas
sub
pop
sub
fsubr
jl
test
jmp
stc
xchg
data16
je
dec
inc
lods
sub
out
adc
pop
sub
inc
xor
test
clc
daa
into
out
xchg
loop
iret
retf
es
or
dec
mov
sar
push
inc
and
sub
pop
push
aad
inc
ss
cmp
sub
rcr
lock
inc
xor
adc
arpl
stos
inc
dec
(bad)
in
mov
sub
in
and
sub
nop
sbb
movs
adc
mov
dec
pop
push
adc
push
pop
jmp
scas
cmc
pushf
adc
adc
rcl
ror
sub
aam
xor
ret
sub
loopne
cdq
push
pusha
jbe
je
scas
xlat
sub
dec
mov
inc
xor
inc
ret
sub
andps
test
out
xchg
adc
mov
inc
adc
jbe
inc
inc
jo
inc
mov
push
dec
dec
arpl
scas
ret
out
dec
in
int
ins
cmc
call
scas
mov
add
jp
jno
aad
add
in
adc
or
ror
ror
lods
out
lods
mov
cld
shr
mov
pop
stc
scas
pop
loopne
into
xchg
adc
stc
adc
ss
popf
or
hlt
shl
shr
arpl
int
mov
inc
push
sbb
inc
or
repz
movs
sub
or
iret
pop
shl
add
dec
fstp
add
or
rcl
cs
inc
adc
ins
sti
dec
in
aam
test
enter
inc
xchg
or
xor
out
rcr
adc
icebp
ds
dec
sbb
outs
xchg
xchg
jne
aaa
mov
cmp
enter
xchg
lods
add
sbb
adc
pop
vcmppd
inc
sbb
jae
inc
xor
jae
cmp
repz
movs
add
cmps
inc
sub
lods
enter
cmp
add
das
scas
push
add
sbb
push
and
inc
or
rol
cmp
inc
and
fs
es
sub
fld
fild
adc
push
xchg
pop
mov
xchg
jo
sbb
ins
jno
pop
cmp
scas
in
sbb
ror
cwde
push
inc
retf
pop
sub
shl
loopne
cmove
das
inc
cld
inc
sbb
or
and
das
jae
test
sbb
repz
mov
add
fild
aas
add
inc
fs
shl
rcl
mov
push
test
dec
and
rcl
dec
add
ffree
sub
arpl
in
and
adc
mov
inc
sub
xor
lock
(bad)
rcl
adc
aad
dec
dec
push
iret
jb
mov
sbb
out
adc
scas
xchg
(bad)
dec
or
xor
or
and
xchg
xor
test
enter
pop
xchg
adc
inc
dec
push
sub
xchg
jbe
mov
mov
lock
and
or
shrd
sbb
inc
xchg
mov
pop
rcr
cmc
popf
sub
jne
push
das
mov
in
xchg
sbb
mov
jecxz
or
inc
add
outs
cmp
sbb
inc
dec
pop
xor
popa
sub
inc
add
hlt
add
je
pop
inc
rol
add
call
(bad)
lods
ret
test
add
inc
adc
pop
cmp
hlt
stc
sbb
add
dec
test
test
mov
sbb
je
xor
jbe
xchg
fist
pop
jnp
ret
adc
xor
dec
and
ins
mov
mov
mul
in
push
outs
push
je
test
xor
shl
xchg
cmps
jmp
out
shr
adc
inc
sbb
pop
add
cld
ror
adc
or
frstor
fimul
xchg
add
idiv
mov
out
ja
stc
ja
fwait
jbe
lea
mov
sbb
fisubr
call
adc
ds
push
pop
clc
lods
inc
out
mov
outs
mov
adc
mov
(bad)
inc
in
ins
sub
jmp
jne
rcr
mov
mov
dec
popa
pop
or
jnp
dec
jnp
and
mov
add
cmp
cmp
in
push
dec
ficomp
fimul
shl
inc
inc
sbb
fcomp
xchg
mov
xchg
inc
or
cmp
adc
add
sub
inc
ret
xor
jns
je
inc
pop
hlt
jns
outs
pop
mov
xor
add
fs
es
jmp
out
loope
outs
mov
add
dec
cli
cmp
push
aaa
dec
test
sbb
cmp
jle
sti
mov
inc
pushf
cli
pmuludq
push
inc
add
mov
test
adc
dec
stos
mov
pop
(bad)
xchg
xchg
in
out
pop
repz
jle
mov
psubq
xchg
mov
rol
rcl
or
inc
adc
add
sti
mov
ret
xor
dec
push
lds
cmps
mov
jae
xor
add
xchg
push
jo
mov
jp
push
add
in
movs
push
aaa
out
rol
cmp
gs
push
arpl
mov
push
in
jnp
idiv
add
enter
(bad)
mov
or
and
les
retf
push
(bad)
mov
iret
inc
dec
ins
push
int
and
xor
es
mov
pop
(bad)
std
mov
and
dec
push
jge
mov
ins
sub
test
xor
test
xor
sti
aad
mov
pusha
jp
imul
pop
pop
sub
out
pop
and
pop
test
paddq
xchg
scas
ja
jg
push
mov
add
lods
rol
add
call
adc
cmp
scas
pop
jle
out
jecxz
repnz
sar
cmp
loopne
sbb
mov
in
cmp
das
mov
jo
out
cmp
and
lea
(bad)
retf
jae
mov
daa
pop
sar
push
bound
mov
mov
add
and
popf
cmp
add
lea
cdq
repz
push
into
pusha
cmp
hlt
sbb
push
push
mov
cli
or
and
(bad)
xor
add
add
add
sub
stc
mov
arpl
stc
repz
int3
mov
sbb
pusha
clc
push
ret
cmp
loopne
and
adc
adc
cmp
adc
jl
xchg
lds
sbb
push
sbb
scas
pop
xchg
loop
xchg
mov
jae
or
rcl
dec
push
mov
aad
xchg
xor
in
je
pop
into
cmps
jge
loopne
test
sub
mov
lahf
lea
das
(bad)
les
or
xor
jno
inc
(bad)
xchg
inc
pop
mov
int
xchg
cld
stc
sbb
xchg
jle
jp
imul
pop
sub
mov
test
imul
movs
adc
mov
add
sahf
mov
lea
fld
or
inc
push
sbb
mov
adc
add
or
and
xor
int
add
add
mov
sbb
mov
sbb
data16
mov
aaa
data16
in
adc
mov
dec
inc
movs
pushf
adc
pop
cmp
inc
mov
(bad)
jmp
enter
dec
jmp
sbb
iret
adc
xor
sub
xor
and
mov
or
mov
fs
xchg
push
dec
push
adc
sub
test
dec
lahf
fdiv
cmp
push
pop
sub
test
push
cmp
ret
or
jmp
adc
lea
aaa
pop
pop
stc
cmc
adc
sbb
or
adc
pop
arpl
dec
stc
xchg
(bad)
adc
ins
arpl
and
mov
lds
int3
out
je
inc
pop
sahf
je
gs
jbe
push
fidiv
xchg
sbb
adc
push
adc
xchg
inc
aam
mov
add
add
xor
dec
xor
jo
mov
inc
inc
or
push
inc
pushf
lods
les
xchg
push
xor
iret
cmp
adc
movs
test
adc
or
push
pop
outs
push
inc
(bad)
(bad)
call
call
gs
jmp
sub
imul
add
loopne
adc
sbb
sub
mov
daa
js
xchg
ja
jp
mov
dec
dec
xor
xchg
dec
loop
out
psadbw
adc
ffreep
pop
data16
adc
(bad)
mov
xchg
in
loop
sub
int3
scas
mov
cs
adc
ret
ret
push
(bad)
and
push
xchg
pushfw
jne
aad
stos
jnp
cmp
imul
ins
mov
stos
aad
mov
xor
fsub
lods
rcr
push
imul
in
aaa
push
jns
out
ja
ds
mov
movs
sbb
push
mov
pop
jmp
lds
aas
test
add
int3
gs
or
stc
fmul
ss
sbb
or
xchg
cmp
retf
ret
or
popa
jne
inc
ret
add
and
jb
xor
popf
lock
(bad)
or
int
inc
repnz
(bad)
mov
cmp
shl
add
inc
dec
dec
push
xor
xchg
sub
xchg
daa
stos
outs
cmp
jae
inc
or
js
jle
mov
and
cmp
out
gs
(bad)
in
popa
mov
pop
out
sbb
adc
cdq
or
and
adc
or
xchg
nop
test
inc
pop
xor
and
ins
addr16
cmp
jmp
lods
cmps
cmp
fs
cmp
popa
or
mov
in
out
xchg
mov
(bad)
nop
xchg
xchg
loop
push
inc
add
xchg
ins
xor
sbb
(bad)
dec
ds
in
iret
mov
and
retf
(bad)
adc
cmp
inc
dec
push
xchg
jb
scas
adc
or
or
pusha
adc
mov
sbb
or
xchg
enter
shr
cmp
or
inc
jbe
ret
adc
adc
into
aad
popa
pop
cmp
fs
fsubr
mov
dec
sub
xchg
mov
iret
adc
dec
mov
add
add
pop
sbb
nop
xchg
push
and
xchg
daa
cmp
lea
xor
sar
cmp
repz
movs
mov
mov
cwde
aas
and
xchg
(bad)
loop
and
sbb
xor
fs
or
xchg
push
xchg
mov
fld
pop
js
push
push
test
cmp
imul
cmp
cmp
pop
enter
sahf
ret
scas
test
adc
push
pop
cmp
inc
arpl
dec
push
xor
or
and
xor
mov
mov
mov
dec
fidiv
(bad)
and
or
adc
(bad)
mov
push
mov
add
test
ins
sub
pop
inc
ror
pusha
test
cwde
mov
jb
inc
and
add
push
ret
in
cs
pop
ficomp
push
inc
cmp
and
ret
pop
dec
(bad)
icebp
(bad)
sbb
or
lock
sbb
mov
or
mov
push
imul
lods
mov
jmp
das
or
mov
pushf
pop
imul
adc
nop
cmp
pop
jmp
mov
pusha
mov
fidiv
or
xor
sbb
add
imul
adc
pop
inc
das
jp
or
dec
adc
fwait
mov
fs
imul
adc
daa
push
std
test
push
test
lahf
js
jo
jno
pop
xchg
add
stos
dec
sub
mov
mov
pop
movs
stc
ret
jne
jbe
mov
or
popf
enter
mov
dec
sub
or
sbb
jae
and
fdivr
fdivrp
retf
jl
comiss
shl
scas
repnz
js
leave
fadd
cmp
pop
dec
sub
or
push
mov
push
(bad)
arpl
cs
fucomi
rol
adc
sub
jno
loopne
mov
scas
adc
or
mov
push
fstp
(bad)
xlat
or
addr16
sbb
adc
jp
repnz
adc
jbe
dec
sbb
mov
pop
sub
dec
dec
dec
push
mov
add
jecxz
inc
outs
js
and
ficom
xor
push
loope
in
cdq
iret
dec
cmc
xor
add
inc
add
mov
push
test
aaa
sar
cmp
in
test
dec
jecxz
inc
nop
xor
arpl
sbb
loop
jae
inc
add
jo
jmp
lock
lds
mov
add
dec
mov
pusha
and
and
int3
retf
mov
add
cmps
xchg
mov
add
mov
aas
jmp
sbb
(bad)
aam
add
push
nop
lock
pop
inc
imul
mov
scas
sub
stos
sbb
jecxz
cmp
jp
loopne
push
hlt
int
pop
clc
sbb
adc
mov
mov
popa
push
js
test
add
adc
retf
add
push
sub
shrd
test
ror
inc
sbb
inc
sub
push
aaa
and
adc
xchg
xor
sbb
jae
or
pop
ror
cmp
and
iret
sbb
xor
mov
inc
adc
mov
test
and
ja
sub
(bad)
cmc
push
xor
pop
pop
jnp
stos
xchg
adc
add
into
adc
and
xlat
dec
sar
and
jge
or
cmp
push
ds
jmp
add
lock
xchg
mov
pop
ret
(bad)
mov
xchg
nop
fdivr
(bad)
and
leave
out
mov
xchg
int
xor
push
add
shl
scas
add
iret
arpl
test
cli
call
aam
add
mul
adc
push
repnz
cld
pusha
adc
sahf
sub
imul
sub
xor
bound
and
and
shr
mov
adc
cli
cmps
dec
scas
scas
sidtd
scas
loopne
pusha
add
mov
push
into
mov
add
stos
xor
hlt
out
cld
pushf
add
dec
icebp
inc
out
sub
or
and
add
sbb
fmul
or
popa
pop
mov
shr
or
stos
rcr
test
dec
outs
out
dec
or
mov
push
pop
xor
add
mov
lahf
or
inc
add
push
lahf
movs
add
push
adc
xor
and
mov
aas
xchg
push
lds
bound
and
into
jns
cmps
pop
adc
push
xchg
jo
cmp
or
pop
sub
sbb
pop
lods
rcl
iret
jp
add
into
add
les
mov
mov
loop
and
pop
(bad)
and
ret
ror
inc
add
loope
push
into
inc
fimul
inc
add
xor
cmp
scas
or
sub
add
and
pop
scas
add
or
xor
inc
nop
add
dec
test
and
xchg
and
sbb
mov
xor
pop
and
rol
or
xchg
nop
fwait
cmp
push
pop
jmp
popa
jmp
mov
jo
bound
pusha
add
cmp
and
mov
(bad)
mov
cmps
push
sbb
add
add
or
add
fnstenv
test
cmp
rcl
adc
add
adc
and
add
push
cmp
sbb
or
adc
sub
and
push
in
call
inc
and
adc
adc
bound
and
adc
dec
inc
test
loopne
xor
nop
mov
cmp
sahf
and
in
adc
(bad)
aad
shl
repz
scas
sub
inc
icebp
or
ds
sub
adc
push
mov
(bad)
bound
xor
sub
or
add
ins
sbb
adc
xor
in
add
sbb
push
pusha
fcomp
cmps
xchg
sub
or
push
add
add
loopne
jbe
push
jmp
nop
sub
jae
sahf
push
fld
mov
and
sbb
jb
mov
jmp
and
ins
inc
xchg
stos
adc
xchg
push
dec
loope
lds
and
xor
and
dec
pop
and
pop
stc
xchg
sar
aad
sub
(bad)
push
add
inc
adc
inc
inc
adc
sbb
add
mov
add
push
gs
nop
rol
jp
adc
sbb
test
gs
jmp
inc
and
mov
add
inc
cmp
mov
retf
xor
in
mov
pop
mov
sub
and
adc
cmp
mov
add
out
push
dec
iret
mov
adc
outs
and
dec
pop
mov
pop
into
adc
xchg
fadd
add
add
jo
xor
mov
outs
repnz
mov
sbb
call
or
adc
pop
mov
gs
inc
mov
mov
je
adc
cli
or
lods
push
mov
inc
add
push
inc
mov
cs
or
cmp
sub
mov
push
ret
ret
dec
adc
jns
inc
test
sbb
pop
clc
xchg
cmp
add
adc
adc
leave
inc
repnz
movs
xor
sbb
sub
les
pop
xchg
rcr
or
and
enter
and
ss
mov
dec
dec
into
es
xchg
jl
or
xchg
push
jmp
int
mov
xor
and
hlt
rol
gs
xchg
iret
pop
push
mov
or
push
adc
add
and
mov
or
xor
rcl
and
mov
pop
push
xchg
ss
xor
add
aam
jle
dec
dec
test
mov
loopne
loopne
jecxz
and
push
xor
test
mov
and
stos
cwde
jle
aam
sub
aam
xchg
jecxz
push
inc
std
arpl
shr
pop
pop
push
pop
fbstp
adc
jmp
out
add
inc
pop
push
hlt
aaa
xor
add
retf
xor
pusha
dec
and
popa
pop
(bad)
pop
retf
repnz
or
sub
push
jne
push
jbe
xlat
push
arpl
and
fs
xchg
mov
xchg
sbb
rcl
jb
ss
out
pop
fidiv
ja
inc
mov
jbe
(bad)
imul
adc
shl
popf
push
pop
(bad)
pop
pop
popa
push
ror
hlt
add
ret
pop
pop
xchg
pusha
mov
push
popf
test
or
mov
and
inc
add
xchg
ins
fnsave
inc
pop
loope
mov
outs
pop
ret
mov
jp
push
mov
and
cpuid
and
sbb
aaa
jb
pop
inc
or
sbb
daa
test
jge
pop
addr16
das
lods
and
(bad)
ror
mov
not
dec
adc
xchg
jae
js
rcl
jb
jge
xor
clc
imul
add
imul
les
jg
ja
inc
push
loop
or
mov
sub
test
add
sub
adc
bound
adc
sub
push
out
scas
ja
aaa
xchg
jnp
add
test
js
add
cmp
ret
sbb
ja
add
or
adc
sub
push
mov
sub
jg
adc
adc
push
cmp
jae
aaa
xor
lea
outs
ror
adc
jne
adc
loopne
sub
push
dec
dec
iret
xchg
pusha
cmp
pop
mov
or
or
test
mov
jae
xchg
cmp
xchg
cmp
xchg
xchg
and
and
cmp
mov
js
pop
loope
inc
push
pop
pop
inc
xchg
push
fstp
aad
inc
inc
jg
mov
add
in
pop
add
clc
imul
or
in
or
cs
jne
cmp
cmp
and
fdivr
push
fcmovnbe
pop
cdq
pop
fstp
cmp
xchg
cmp
and
cwde
inc
adc
pusha
or
xor
xchg
cwde
add
test
call
cdq
mov
outs
jg
push
push
stc
or
xchg
add
inc
add
sbb
jne
push
popa
cwde
fwait
rcr
rol
cwde
pop
or
cmp
or
pcmpgtd
or
sbb
jo
imul
and
jno
and
arpl
jnp
xchg
dec
rcl
stc
add
loopne
xor
xchg
int
fisubr
fidiv
pop
mov
mov
mov
mov
inc
push
sub
clc
inc
sar
jle
adc
pop
adc
inc
fs
and
dec
cmc
je
sbb
ja
push
les
or
xchg
adc
test
sbb
sbb
cmps
xchg
lds
loope
loope
push
inc
mov
xchg
jp
call
(bad)
out
mov
lock
mov
stos
mov
dec
push
mov
call
add
clc
mov
rcl
shr
add
cmps
mov
scas
cdq
sbb
sub
jno
and
fdiv
sub
mov
mov
test
cmps
adc
mov
fstp
call
sbb
jnp
repz
dec
arpl
dec
and
xchg
sahf
mov
dec
xchg
mov
ins
scas
test
dec
or
jb
dec
rep
pop
mov
stos
xchg
loopne
adc
es
or
pusha
pop
jbe
mov
sti
push
ficomp
int3
icebp
mov
mov
xchg
and
ins
push
pop
lds
adc
cmp
jb
retf
mov
mov
mov
sti
xchg
mov
cdq
mov
pop
(bad)
out
repz
dec
icebp
daa
dec
rcl
sbb
gs
sar
cmp
or
push
ret
mov
jae
cmp
loope
sub
cdq
mov
adc
pop
scas
jg
mov
sbb
push
sbb
fst
lds
das
test
aas
jno
out
cmp
cdq
inc
pop
or
dec
add
loope
jge
and
mov
fcomi
in
fwait
enter
push
sbb
or
cmp
add
adc
mov
(bad)
xor
sub
adc
lods
mul
cld
mov
fmul
and
popa
cli
les
div
push
mov
sub
iret
addr16
popf
inc
sbb
sub
js
jg
sbb
ss
push
xor
bswap
mov
(bad)
sbb
xor
adc
adc
test
pop
gs
aad
or
mov
scas
fmul
push
in
in
xchg
xchg
jbe
fwait
push
lods
dec
std
push
dec
popf
int3
leave
pushf
ret
xchg
sbb
jge
inc
ins
xchg
int
fcmovne
imul
cdq
adc
dec
sub
jne
aad
cmp
push
cmps
int
test
jo
mov
sbb
in
cmp
mov
movs
dec
push
inc
or
std
fistp
xchg
icebp
out
fdiv
scas
int3
mov
movs
inc
aam
pop
pop
pop
and
inc
aam
push
imul
sar
jno
js
dec
mov
mov
loopne
sub
xchg
jecxz
xlat
xor
jnp
adc
jle
mov
repz
xchg
enter
das
mov
pushf
mov
mov
push
sbb
mov
retf
in
ret
in
xlat
push
xchg
add
loopne
mov
jp
push
inc
push
push
or
pop
das
test
ja
sbb
out
shl
xchg
mov
cmp
sbb
xchg
mov
mov
jmp
xchg
inc
xor
sub
jle
add
ds
pop
mov
cmc
in
add
adc
test
sub
pop
jle
mul
dec
dec
aaa
pop
jg
movups
and
add
mov
(bad)
aas
lock
lahf
scas
imul
nop
sti
jge
mov
(bad)
leave
cli
jge
cmp
not
popf
in
and
xor
cld
xchg
and
inc
jecxz
xchg
call
and
adc
sub
ret
pusha
or
(bad)
pop
jmp
lds
rcr
sbb
pop
or
add
cmp
cmps
in
ret
and
outs
test
pusha
and
push
xor
jp
fcom
mov
inc
dec
push
or
in
dec
dec
pop
cmp
adc
cdq
xor
mov
mov
pop
repnz
stc
jmp
scas
mov
push
(bad)
sub
mov
dec
xchg
data16
xchg
fwait
aaa
jno
stos
xchg
lods
loope
jge
push
sub
mov
push
movs
cmp
adc
pop
pop
je
cli
mov
sbb
lods
cld
stc
arpl
xchg
sub
inc
cmp
and
push
cmp
cmp
arpl
add
dec
mov
add
lds
ds
mov
ins
add
cmp
dec
and
dec
scas
mov
cwde
addr16
(bad)
or
dec
mov
gs
mov
dec
mov
stos
mov
out
xor
mov
ins
fidivr
adc
fidiv
loope
iret
adc
and
ja
cmp
or
sbb
mov
mov
push
nop
inc
or
add
in
push
call
aaa
mov
mov
jb
ret
ins
es
push
dec
dec
mov
pop
outs
mov
mov
inc
or
or
jb
cmp
or
movs
jae
imul
add
inc
sahf
jns
fld
aaa
fistp
in
mov
pop
mov
addr16
cli
pop
push
and
je
fiadd
cmp
pusha
or
lods
or
sbb
mov
lahf
pop
pop
hlt
mov
ret
mov
push
test
or
jmp
adc
leave
cmp
fidivr
xchg
jno
jge
arpl
int3
xor
inc
aad
aaa
fisubr
ret
fs
jle
sbb
fimul
mov
mov
inc
sbb
push
fcom
cdq
add
jo
cdq
fs
mov
fwait
adc
xchg
call
add
imul
sbb
jmp
push
add
xchg
nop
push
inc
pop
cmp
push
out
dec
nop
or
sub
dec
(bad)
stc
popa
adc
imul
jmp
push
cmps
adc
aaa
push
lods
mov
mov
cld
in
push
inc
in
add
leave
xchg
sbb
mov
push
(bad)
pop
retf
retf
lods
jle
and
jb
mov
inc
out
test
fucomi
and
push
push
mov
scas
dec
call
mov
out
ret
mov
dec
xchg
out
jnp
mov
sbb
sub
in
xchg
sub
xor
xor
ss
das
xchg
aad
(bad)
sbb
xlat
push
push
ficom
mov
sbb
or
add
cld
xchg
mov
mov
imul
retf
xchg
(bad)
inc
or
xlat
xor
dec
fild
es
mov
inc
rol
(bad)
ret
jo
outs
rol
loope
or
xor
hlt
or
push
mov
ret
mov
jo
imul
ret
cmp
ret
mov
retf
fisttp
neg
or
jmp
jp
cdq
sbb
(bad)
pop
dec
call
lods
mov
retf
(bad)
jb
xchg
dec
mov
in
out
cmps
jns
cld
lods
fnstcw
mov
pusha
add
or
pop
push
clc
cdq
add
xchg
mov
or
mov
cs
dec
or
shr
xor
cdq
repnz
test
aad
push
repz
mov
xor
mov
aaa
out
cmp
cwde
xor
mov
push
call
movs
mov
int
xchg
imul
popa
call
xor
add
inc
or
sub
inc
or
add
adc
stos
loopne
fistp
cmp
xchg
cld
or
push
mov
xor
xor
adc
or
leave
jmp
ss
and
mov
sub
ret
dec
stc
and
pop
dec
dec
cmp
inc
bound
rcl
inc
sbb
adc
push
xchg
mov
int
ror
inc
inc
arpl
inc
or
add
push
add
add
or
push
add
and
jo
mov
jbe
inc
xchg
add
or
sahf
es
clc
int
std
icebp
inc
add
push
jb
xor
sahf
cmp
dec
sbb
sbb
out
jne
jl
add
cmp
call
dec
fs
jae
add
or
jb
xor
rcl
add
adc
inc
sbb
inc
jo
add
dec
dec
inc
sub
xchg
mov
pusha
sbb
(bad)
xchg
ins
outs
xchg
daa
ficom
shr
cmp
je
popf
retf
or
test
push
movs
or
add
mov
pop
fdiv
scas
mov
lahf
sahf
in
les
push
lea
sub
mov
pop
mov
rol
es
loopne
xchg
sbb
cdq
pop
cmps
cwde
add
jg
mov
jge
cdq
mov
add
add
push
add
sti
rol
mov
xchg
bound
test
sbb
lock
shl
and
mov
mov
and
mov
ss
or
cmp
fnstcw
movs
and
inc
jne
cld
int3
into
push
scas
jp
pop
jbe
pop
push
sbb
inc
(bad)
inc
ins
dec
lds
adc
mov
in
ins
xchg
(bad)
pusha
add
and
jg
pop
rcr
inc
and
or
mov
out
enter
icebp
imul
ins
fsubr
pop
sbb
pop
sbb
xchg
imul
sub
jmp
dec
lods
outs
pop
leave
xchg
sbb
lds
and
push
repz
fiadd
or
(bad)
bound
test
push
mov
xlat
xchg
push
inc
aam
mov
cs
pop
in
mov
mov
cmc
mov
out
jno
aad
pushf
mov
ret
mov
stos
inc
adc
dec
jns
fcomi
or
sub
std
inc
ja
sbb
std
dec
jmp
mov
shl
xor
mov
(bad)
(bad)
mul
and
retf
push
rol
cmp
aas
sbb
lods
xchg
clc
mov
xchg
xchg
dec
aas
sbb
sub
addr16
aam
push
push
sub
aas
(bad)
stc
movs
sbb
cs
ja
aaa
push
add
out
pop
cli
pop
lea
dec
mov
dec
xchg
aad
in
aas
outs
dec
jnp
sbb
xchg
jg
dec
int3
cmps
setae
cs
das
jl
ucomiss
popa
mov
mov
mov
jnp
fcmovnb
xchg
sbb
dec
cdq
pop
mov
dec
movs
inc
and
sub
and
(bad)
jb
fs
xor
mov
jns
adc
jmp
aas
outs
in
jo
aad
cmp
je
and
fmul
cmp
call
mov
xor
sub
or
adc
xchg
push
popf
pop
into
ins
sbb
jne
jle
push
cmp
xor
cmp
sub
push
add
arpl
outs
jmp
jns
hlt
mov
je
dec
push
xchg
mov
add
outs
dec
cwde
ret
adc
dec
into
mov
out
cmp
cs
dec
or
push
inc
add
dec
retf
arpl
(bad)
add
jbe
or
add
or
dec
mov
jp
add
cdq
jl
ins
pop
repnz
inc
jmp
add
cmp
fcmovnu
int3
imul
out
lea
popa
and
popfw
mov
lods
test
popa
cmp
stos
sbb
dec
pop
daa
mov
outs
movzx
lahf
ja
inc
push
lock
sub
aam
xor
jp
inc
mov
icebp
scas
ja
jecxz
mov
pop
fwait
out
jg
jmp
call
or
je
retf
jo
retf
test
or
push
cmp
int3
imul
mov
outs
mov
mov
jge
lods
jbe
(bad)
fdivr
cmp
xchg
pushf
and
je
mov
mov
(bad)
cmp
rol
push
xor
les
(bad)
push
pop
inc
aaa
or
lds
pop
jge
adc
adc
push
jne
cmp
(bad)
jge
rcr
cmp
push
pop
pop
das
inc
lock
inc
jle
push
pop
in
idiv
and
ret
cmps
jle
xchg
add
xchg
add
inc
jnp
mov
stc
cmps
jg
xlat
jg
xchg
addr16
or
adc
lds
add
ss
sub
js
xchg
inc
test
jge
push
jne
xor
fadd
stos
cmps
jle
and
es
jle
mov
lods
push
sbb
arpl
mov
sub
dec
inc
pusha
add
pop
jae
xchg
jnp
enter
ja
and
or
mov
lock
ret
push
movs
je
push
push
cwde
jo
or
dec
xchg
push
push
sbb
cmp
jb
arpl
gs
jbe
pop
xchg
pop
mov
sub
cmp
xor
(bad)
es
inc
jns
add
pop
jg
add
clc
pop
or
cmp
mov
call
xchg
xchg
adc
or
fadd
or
push
mov
test
cmp
push
jb
add
pop
sbb
pop
sbb
pop
push
mov
jmp
mov
adc
push
lds
or
nop
iret
cwde
addr16
or
cmp
test
les
ja
and
fmul
add
data16
cmp
adc
push
(bad)
push
mov
pop
call
test
pop
movs
xchg
jb
gs
data16
dec
push
push
inc
loopne
aaa
dec
ja
out
push
sbb
adc
retf
adc
sbb
push
arpl
push
rcl
repnz
and
dec
pop
adc
pop
add
sub
xor
cmp
xchg
mov
lock
sub
pop
cdq
nop
or
sub
aam
push
add
ret
inc
inc
mov
jnp
or
xchg
push
sub
jno
pop
or
and
ds
xlat
cmp
push
jns
mov
out
test
icebp
cwde
xchg
push
nop
add
push
cmps
inc
adc
mov
lea
sahf
lock
popa
loopne
push
rcr
inc
sub
sub
xor
mov
add
cdq
mov
or
leave
imul
mov
xchg
aad
xchg
aam
dec
push
movs
dec
(bad)
int3
(bad)
xchg
push
inc
fwait
mov
mov
cmp
fnstcw
pop
call
add
jb
int3
stc
add
mov
push
push
sahf
jo
cld
popa
jbe
out
popa
dec
pop
pushf
mov
xlat
cdq
push
ret
aas
or
jo
mov
push
push
pop
sub
or
sub
mov
jmp
pop
or
adc
ds
fmul
sahf
mov
pop
inc
aad
cld
mov
mov
outs
lods
out
scas
push
mov
mov
add
jb
xchg
add
xor
push
xchg
cwde
xlat
cdq
or
mov
lock
push
ins
or
add
rol
or
or
fisub
mov
ds
stc
test
jl
adc
mov
cmps
aad
xchg
test
cmp
imul
adc
mov
sub
xchg
mov
mov
or
sub
sbb
cdq
xor
adc
inc
and
adc
xchg
or
cdq
pushf
(bad)
adc
repnz
lock
sub
test
cmc
dec
jnp
call
ss
fnstenv
test
pop
dec
pop
dec
mov
inc
in
retf
xchg
loope
cmps
cmps
push
ss
push
es
icebp
xchg
imul
mov
or
add
or
sub
jo
int3
mov
mov
and
and
jmp
xchg
xor
clc
lock
mov
lods
ret
jmp
call
push
ss
mov
inc
add
sbb
rol
cmp
push
dec
call
es
(bad)
jb
(bad)
jno
(bad)
jns
xlat
cmc
pushf
cs
xchg
dec
adc
or
mov
nop
push
jg
pushf
fmul
add
and
pusha
add
sub
retf
call
cmp
add
mov
or
movlps
fbstp
cs
or
enter
test
mov
dec
xchg
mov
or
in
mov
mov
xchg
addr16
test
push
add
pop
jge
add
mov
sti
pop
popf
jg
push
cmp
pushf
popa
lock
scas
cmp
inc
mov
cmp
sahf
push
mov
movs
push
sbb
cmps
clc
loopne
gs
mov
mov
sbb
dec
xchg
adc
jo
lods
jb
lahf
or
mov
lds
mov
enter
test
push
inc
fldcw
jns
sub
jge
cmp
pop
mov
pop
call
add
sub
push
movs
sahf
cmp
pop
imul
push
mov
add
mov
test
mov
sar
add
mov
mov
imul
jmp
lock
dec
lds
pop
dec
pop
stc
arpl
pop
call
aam
fidiv
int3
loop
rol
mov
add
mov
dec
push
jge
or
mov
jo
in
add
fldenv
sti
or
inc
xor
je
stc
retf
mov
or
jnp
add
add
inc
pop
sar
mov
xchg
inc
mov
imul
jge
or
jo
push
jae
mov
jb
fisttp
dec
xchg
push
mov
pop
cmps
rol
jne
jg
pushf
mov
add
pop
push
aaa
cmp
jp
ret
cli
inc
mov
shl
les
lods
shl
out
add
stc
mov
dec
aad
xor
or
dec
vcvtss2sd
mov
ss
loope
jno
xlat
pop
call
(bad)
cmp
mov
aaa
inc
and
add
jg
(bad)
xlat
jmp
mov
cmp
or
or
jmp
aaa
cmp
dec
pop
mov
les
mov
or
stc
cmps
pop
add
jns
test
movs
test
lods
shl
or
test
popa
shl
xchg
and
int3
test
or
adc
xchg
push
fwait
sar
sbb
sub
mov
ror
nop
mov
popf
mov
mov
mov
push
ror
sbb
cmp
pop
rcl
rol
aad
inc
ret
aad
dec
nop
xor
ins
ret
gs
jne
mov
es
les
test
pushf
dec
cmp
push
xlat
addr16
lods
int3
pop
sub
je
push
aad
shl
and
stos
and
push
xor
add
cdq
rol
(bad)
por
shr
xor
enter
cmps
in
dec
adc
sbb
shr
les
push
add
inc
mov
pop
movs
jbe
pusha
or
mov
jge
adc
push
xor
adc
pop
dec
xlat
es
outs
mov
popf
(bad)
dec
xor
pop
pop
inc
inc
jle
cmp
adc
ror
andnps
popf
in
fstp
xor
sti
cmp
inc
fisub
mov
adc
dec
sbb
js
arpl
sbb
or
sub
retf
in
mov
jecxz
std
inc
fld
jge
xchg
inc
inc
pop
cmp
pop
mov
pop
inc
fstp
pop
mov
sbb
dec
push
pop
pop
rsm
add
(bad)
add
jecxz
aad
sbb
pushf
std
(bad)
fst
test
push
fiadd
test
fmul
stos
cmp
(bad)
pop
jl
test
hlt
jne
aam
or
lods
ffreep
add
fcomp
lds
inc
fld
(bad)
in
jne
lock
add
imul
jne
ficomp
pop
inc
loope
js
cmp
lock
and
fst
rcr
jnp
lock
in
(bad)
inc
fiadd
pop
dec
pusha
ins
int
jae
mov
xchg
adc
arpl
dec
push
jmp
fld
add
xchg
and
ins
loope
sbb
ins
loopne
push
(bad)
sbb
add
add
lock
push
in
(bad)
in
pop
in
out
push
enter
pop
pop
pop
(bad)
xlat
push
scas
fst
cmps
jno
dec
mov
xor
movs
inc
sbb
movs
test
fstp
mov
repz
pop
add
and
call
out
xor
dec
mov
push
jle
push
dec
in
sahf
add
ins
(bad)
in
(bad)
ficom
and
add
(bad)
jmp
mov
sldt
push
jo
out
(bad)
xchg
addr16
sub
ja
mov
mov
dec
or
inc
jl
cmp
pop
xlat
sub
fsubrp
dec
push
add
push
fsubrp
push
mov
push
pop
jmp
daa
cdq
fadd
in
push
mov
mov
adc
adc
loopne
scas
pop
(bad)
sahf
add
add
dec
nop
pop
mov
or
add
scas
xor
fld
push
jmp
dec
out
leave
ficomp
dec
js
mov
sahf
mov
mov
mov
call
fsubrp
push
dec
icebp
cwde
(bad)
adc
out
loope
pop
inc
and
out
mov
push
movs
push
dec
or
repnz
add
xor
dec
test
nop
add
in
cs
sahf
cdq
es
push
(bad)
xlat
pusha
cmps
jbe
or
add
dec
leave
mov
xchg
jae
js
out
xchg
outs
popa
cmp
leave
scas
pop
adc
pop
out
icebp
popa
(bad)
not
jmp
mov
and
fidivr
jmp
xor
sub
push
xor
sbb
out
daa
shl
inc
out
aad
hlt
sub
or
hlt
popa
add
in
mov
inc
scas
mov
scas
outs
mov
call
mov
inc
test
add
and
add
or
inc
sub
add
add
add
add
or
add
or
es
or
sbb
mov
xchg
xchg
loopne
xor
xor
enter
cmp
inc
mov
mov
(bad)
xchg
xor
dec
nop
push
pop
retf
jb
int
cmp
(bad)
leave
mov
enter
push
inc
sbb
loope
and
js
bound
daa
mov
stos
dec
test
pop
repz
sahf
pop
mov
ins
dec
scas
sub
sub
mov
ror
mov
movs
fldcw
mov
stos
retf
rol
add
ret
bound
mov
or
dec
inc
or
jmp
outs
jmp
ja
outs
push
dec
cmp
loop
mov
mov
in
test
nop
cdq
dec
mov
or
dec
daa
mov
fadd
or
xchg
jno
leave
scas
mov
stc
ins
fsub
aaa
xchg
inc
pop
cwde
mov
loopne
jae
daa
outs
aam
rcl
leave
in
xchg
in
fwait
xlat
mov
sub
pop
(bad)
lock
call
clc
jbe
push
xchg
call
imul
iret
aad
adc
jne
clc
pushf
inc
jae
xlat
pop
adc
loope
repz
push
lahf
imul
sbb
xlat
inc
xchg
sbb
ins
xchg
pop
cmp
jp
mov
loop
cs
cmp
je
dec
test
test
sub
xchg
cmp
nop
sbb
icebp
pop
mov
call
jecxz
push
push
fld
pop
mov
pop
(bad)
dec
cmp
jecxz
sub
addr16
imul
xor
fmul
xchg
push
pop
cdq
in
jl
mov
pop
pop
sbb
out
arpl
pop
inc
sbb
inc
sbb
nop
push
mov
ror
test
sub
gs
and
aad
mov
mov
push
push
pop
jbe
ret
or
shl
popa
movs
jle
pop
sbb
xor
sbb
int3
ss
mov
pushf
and
sbb
or
jno
mov
mov
cld
shr
scas
add
imul
enter
into
lock
mov
mov
cmps
inc
(bad)
mov
sbb
ins
xor
out
mov
adc
add
dec
es
sub
add
and
xor
dec
push
pop
mov
pop
in
jne
dec
jae
mov
ins
repnz
sub
sbb
add
and
in
xor
and
or
into
cmp
int3
jae
cmp
lahf
int3
xor
shr
mov
cmps
jl
mov
adc
inc
jno
out
lods
and
(bad)
mov
into
jo
add
sub
lods
repnz
mov
int3
push
mov
rcr
out
ja
ds
add
xor
les
arpl
xor
mov
pop
dec
adc
mov
in
pop
cmps
cmc
jle
mov
mul
lahf
daa
and
and
push
inc
jne
and
int
jmp
iret
sub
xlat
outs
sti
fnsave
out
aaa
loopne
pop
inc
int3
xor
loopne
repz
xor
xor
enter
(bad)
xchg
pop
xor
jmp
mov
jbe
popa
ror
jle
xchg
lods
outs
sub
ror
mov
dec
sub
rol
pop
mov
inc
loopne
pop
add
ficom
out
jg
leave
add
shr
imul
shl
mov
push
je
mov
(bad)
sub
and
pop
in
pop
mov
stos
hlt
fxch
jge
push
or
push
mov
jns
inc
cld
cwde
rol
jo
dec
add
add
xor
dec
ds
jae
push
adc
cmps
sub
pop
and
sbb
les
ss
and
nop
xor
in
in
push
test
push
inc
adc
mov
add
push
or
je
loopne
js
push
arpl
mov
rcl
inc
fmul
mov
and
ins
inc
and
cmp
mov
xor
and
bound
push
xor
cs
ret
sub
dec
xchg
icebp
mov
inc
loopne
and
mov
mov
pop
pop
mov
xor
adc
fld
retf
and
and
pop
add
leave
retf
pop
dec
nop
outs
mov
and
sbb
dec
add
mov
pop
xchg
cli
not
dec
xor
cdq
and
int
aas
and
sub
push
pop
hlt
mov
mov
leave
inc
pop
ret
dec
pushf
ror
cmp
test
and
dec
and
or
lods
not
(bad)
mov
mov
data16
mov
and
loop
mov
movs
ins
mov
ja
aam
out
nop
arpl
je
or
inc
or
sub
call
and
cmp
add
or
add
push
test
fnstsw
gs
jl
xor
or
gs
add
inc
xchg
ja
adc
and
push
jo
hlt
mov
xchg
out
xchg
cwde
mov
stos
sub
inc
sub
dec
movs
fld
adc
test
push
ins
mov
inc
cmp
dec
cdq
sbb
jne
inc
xor
leave
xor
dec
push
test
mov
icebp
mov
sub
ins
jp
loope
cmp
sub
mov
push
retf
jmp
add
mov
xor
add
lds
test
(bad)
xor
jl
xchg
stos
ss
mov
mov
push
inc
xlat
sar
lods
cwde
mov
and
mov
movs
dec
mov
ret
int
outs
jne
sub
push
aad
push
cmps
enter
ins
push
pop
mov
jbe
mov
lods
cmp
xchg
pop
jne
mov
jo
bound
sub
cmps
das
ret
fcomp
lea
loopne
test
xchg
mov
add
jnp
pop
pop
xor
or
add
xchg
add
movs
hlt
mov
or
inc
push
add
pop
jmp
pop
dec
fcomp
out
rcr
inc
arpl
ret
stos
icebp
pop
scas
cmp
add
mov
stc
popa
in
test
jmpw
add
test
mov
lods
mov
punpckhdq
aaa
pop
push
adc
arpl
add
push
xchg
in
adc
scas
rcr
adc
stc
retf
adc
pusha
pushf
mov
sete
lahf
cmp
mov
pop
xor
dec
popa
test
sbb
sbb
push
jge
cmp
mov
adc
mov
sahf
cmp
in
mov
mov
rcr
mov
xor
imul
lods
xchg
mov
mov
sahf
mov
adc
push
xor
push
ss
push
popf
push
and
mov
call
mov
sub
jno
pusha
pop
(bad)
lock
and
adc
adc
mov
sbb
div
cmp
fidiv
lea
xor
(bad)
jbe
ret
dec
add
sub
call
ret
mov
push
sbb
cmp
loope
sbb
int
mov
leave
pop
out
jecxz
fistp
add
and
sub
inc
mov
pop
ja
add
xchg
movs
sahf
sti
fcom
jg
jecxz
add
sbb
loop
cs
jecxz
and
mov
fsub
add
into
jne
sar
out
pop
xor
adc
out
jbe
loop
mov
dec
nop
dec
push
cmp
sub
retf
mov
call
mov
push
pop
js
pop
(bad)
push
scas
ja
jmp
ja
fmul
push
test
fisubr
ja
and
xchg
jnp
call
std
outs
adc
mov
shl
aam
or
mov
mov
lock
pop
or
hlt
mov
jbe
scas
rcr
push
xchg
(bad)
cmp
(bad)
xchg
inc
int
test
dec
(bad)
and
repz
and
cwde
les
es
inc
in
fstp
adc
cld
aad
out
cli
cs
adc
fild
call
das
or
outs
push
les
call
pop
test
cld
push
cmp
cmp
inc
js
es
sbb
or
or
shl
push
xlat
jp
repz
jae
pop
outs
mov
jle
aaa
bound
hlt
ins
mov
pop
call
pop
cwde
div
pusha
or
push
pop
repnz
sbb
push
and
pop
cwde
jnp
in
sbb
mov
aaa
inc
ror
pusha
sub
push
xlat
jb
mov
out
loop
xor
adc
arpl
bound
dec
call
and
mov
xlat
icebp
jno
push
cs
jns
xchg
sub
inc
retf
inc
add
or
jo
rcl
or
add
xchg
dec
stos
(bad)
adc
mov
or
test
daa
dec
iret
and
xchg
inc
or
xor
xchg
jbe
les
jo
(bad)
nop
or
adc
jno
push
and
mov
sbb
inc
sbb
pop
test
adc
fsub
sub
dec
inc
add
les
push
xchg
pop
jns
xchg
frstor
sub
loope
push
and
lock
cmc
add
inc
cmps
or
dec
fld
cmp
mov
sub
outs
call
mov
aaa
js
push
adc
or
gs
xchg
jne
mov
add
xchg
movs
ja
xchg
push
clc
mov
or
xchg
or
push
pop
bound
test
div
add
fadd
jge
cmp
call
push
pop
test
mov
mov
mov
out
idiv
mov
or
nop
cwde
out
push
shr
and
into
inc
(bad)
jae
or
ins
add
dec
arpl
dec
retf
xlat
pop
js
xchg
inc
mov
add
dec
mov
mov
inc
lods
test
mov
aas
ret
push
push
dec
jne
scas
loopne
inc
lock
sbb
adc
add
mov
jne
test
int3
jb
mov
gs
xchg
loopne
mov
xchg
adc
jae
push
pop
test
pop
jmp
std
jae
ret
inc
or
add
imul
cmp
push
push
pusha
push
add
push
sbb
loop
jno
cwde
sub
sub
cmps
jae
and
nop
fld
adc
mov
fs
into
cdq
add
nop
and
ret
and
push
imul
ja
cmp
call
and
dec
popa
loopne
jmp
and
push
mov
pop
jns
jns
adc
lgs
or
push
aam
xchg
int
pushf
sar
les
mov
xchg
in
and
cmp
lea
xor
adc
sahf
adc
adc
cwde
mov
sahf
out
or
cdq
jae
push
pop
bound
(bad)
sub
xchg
std
jns
mov
push
nop
inc
daa
xor
and
sub
push
adc
loope
push
dec
jno
inc
mov
in
test
mov
es
clc
lds
(bad)
xchg
cli
push
cmps
inc
push
mov
add
adc
cli
bound
and
(bad)
mov
inc
call
add
jae
push
and
inc
call
mov
cmp
jmp
sub
(bad)
std
sbb
repnz
lods
xchg
xor
jecxz
bound
pminsw
sub
jp
jae
cmps
jge
sub
test
loopne
scas
cli
stos
cmp
(bad)
mov
mov
mov
test
cs
xchg
cmps
mov
int
push
popf
shl
add
loop
inc
xchg
push
inc
add
addr16
sahf
push
push
scas
out
scas
and
jnp
jne
mov
fwait
aad
(bad)
call
mov
les
or
rol
pop
movs
cmps
push
mov
dec
inc
lahf
sti
mov
xchg
push
cmp
sub
pop
push
adc
dec
and
scas
out
scas
out
test
mov
cwde
and
push
lds
jno
(bad)
aas
outs
xor
dec
cmc
or
add
ja
sbb
mov
call
repz
bound
mov
dec
and
ss
mov
fst
adc
mov
and
test
scas
stos
inc
sbb
test
cmp
test
push
dec
ja
arpl
cmps
mov
les
xor
out
inc
or
jo
pop
inc
sub
popf
pop
popa
mov
fld
jnp
inc
cmp
sub
xlat
es
cli
stos
push
jmp
pop
mov
imul
mov
leave
aaa
repnz
dec
cdq
ret
inc
imul
or
test
ja
cs
sub
jbe
jbe
sub
dec
clc
push
cmps
dec
and
jl
cmp
cli
mov
repnz
mov
sbb
mov
mov
jmp
mov
stos
js
mov
aaa
xchg
jnp
imul
push
je
add
(bad)
jnp
fcomp
(bad)
mov
(bad)
jmp
adc
xor
push
mov
sbb
out
mov
nop
or
jnp
lods
jmp
scas
fild
mov
inc
inc
mov
adc
and
lock
mov
fisttp
imul
dec
div
mov
cmp
xor
cmp
mov
sbb
shl
ret
ror
dec
inc
ret
shl
rcr
push
data16
stc
ss
jo
inc
int
mov
fld
jp
add
sub
popf
pop
xor
fidiv
in
or
push
aam
cmp
xor
cmps
loopne
cdq
loopne
cmps
jo
sub
in
shl
cmp
(bad)
fs
mov
dec
inc
bound
cli
out
or
and
sbb
test
pop
add
cmp
les
push
repnz
and
sub
inc
adc
jmp
adc
mov
jmp
xchg
pop
leave
xchg
in
cmp
xor
ins
ret
leave
and
ror
dec
add
dec
push
cmps
(bad)
mov
ss
cdq
push
adc
xchg
and
sbb
inc
ins
cwde
mov
adc
or
jmp
mov
jg
or
fwait
or
sub
int3
sub
adc
adc
int
cld
int
mov
loopne
xor
stos
adc
cmp
jmp
mov
jl
sbb
mov
fadd
mov
ds
rcl
loopne
mov
pop
sahf
loope
ja
adc
push
lds
(bad)
into
frstor
icebp
pushf
mov
or
mov
stc
or
and
xor
retf
(bad)
cld
dec
mov
add
inc
mov
mov
test
hlt
pop
dec
icebp
adc
pusha
test
sub
pop
and
and
mov
adc
mov
and
and
retf
xor
shr
lods
rol
adc
dec
add
stc
sub
(bad)
lock
pushf
jmp
jne
adc
sub
sub
call
jae
adc
adc
adc
jne
mov
and
dec
in
push
inc
sbb
(bad)
hlt
pop
iret
iret
pop
add
jo
push
(bad)
retf
mov
push
shl
mov
jmp
clc
mov
lahf
jo
add
(bad)
shl
mov
and
in
rol
daa
inc
xor
cmp
inc
sbb
lea
iret
jl
fcom
mov
pop
fstp
mov
stos
pop
pop
push
repz
xor
or
shl
push
dec
mov
bound
pop
cmc
fucom
push
adc
xchg
and
int
mov
mov
jnp
jo
sbb
pop
retf
and
fmul
fmul
cwde
repnz
cs
aas
test
ins
pop
push
mov
adc
inc
test
dec
shl
ds
fidivr
cmps
cli
ficom
push
and
dec
sbb
push
aad
(bad)
fist
cwde
test
movs
int
inc
push
dec
pushf
add
or
cmp
mov
sti
or
jo
dec
rcl
and
or
xlat
out
loope
xchg
add
or
sbb
loop
cmp
and
add
les
mov
mov
inc
jns
mov
adc
add
jecxz
shl
inc
in
scas
cmp
sbb
rcr
inc
in
popa
xchg
mov
fmul
(bad)
fld
mov
dec
repz
mul
jae
hlt
imul
in
aad
cli
push
lahf
and
add
push
imul
inc
outs
in
dec
push
xor
out
fiadd
add
ror
mov
inc
fwait
sub
add
jmp
mov
cli
lock
lock
push
xor
retf
cli
call
cmp
mov
sahf
jmp
fiadd
sbb
popf
xchg
add
arpl
sub
pushf
cs
lods
fsubp
sub
imul
out
not
in
stos
or
adc
lock
mov
mov
in
rcr
in
stc
std
aad
stc
fisttp
in
ins
loopne
mov
enter
outs
adc
push
not
fst
psubsw
jmp
and
jns
out
mov
adc
in
(bad)
stc
dec
sbb
(bad)
jge
inc
lock
lock
call
shl
xor
xor
cs
adc
repz
(bad)
(bad)
jmp
and
push
add
add
and
cmp
out
lea
int
(bad)
stc
fsubr
xchg
mov
xor
cmc
xor
pushf
(bad)
mov
out
out
adc
hlt
outs
pop
shufps
adc
icebp
(bad)
icebp
js
jecxz
(bad)
idiv
pop
pop
jp
jmp
lahf
neg
xor
adc
sahf
sub
ja
sbb
adc
dec
inc
pushf
mov
cmc
imul
mov
enter
dec
adc
adc
leave
les
inc
jmp
rep
dec
icebp
adc
not
add
je
cdq
mov
jnp
sti
dec
loope
and
mov
jno
fwait
push
cmc
push
pop
repz
popf
cmp
rol
test
int3
out
mov
loope
lahf
pusha
test
jmp
pop
cmp
mul
scas
cli
lods
das
dec
push
in
(bad)
pop
and
adc
mov
jmp
dec
adc
jmp
mov
pop
shr
adc
pop
ret
add
cmp
shl
adc
popa
or
daa
push
mov
add
mov
mov
nop
and
jle
push
repnz
cmp
dec
xchg
es
retf
xchg
(bad)
int3
cwde
imul
outs
out
in
shl
iret
call
int3
push
cwde
das
(bad)
sub
call
dec
xor
cmp
cmps
mov
cmp
and
(bad)
retf
pop
mov
rol
(bad)
retf
xchg
int3
or
jno
scas
pusha
inc
lock
test
cmc
into
ins
clc
adc
(bad)
fistp
jecxz
nop
jmp
(bad)
stos
addr16
cmp
leave
ds
xor
and
jmp
inc
xchg
imul
push
lods
sbb
mov
call
xor
and
sbb
and
and
lea
push
pop
call
inc
xor
inc
push
icebp
lock
sbb
mov
mov
push
mov
mov
mov
movs
cmp
(bad)
sti
(bad)
mov
mov
loope
(bad)
fstp
call
scas
sbb
push
jo
or
rol
adc
popa
ret
pop
sar
push
push
mov
or
(bad)
in
cmp
jmp
and
fadd
out
push
ror
mov
test
mov
daa
into
push
jmp
inc
fs
sub
push
rol
je
cmp
lahf
pop
mov
loop
xchg
mov
inc
fwait
cmovnp
xor
ret
mov
cwde
pop
dec
stc
inc
lea
loop
repnz
and
jmp
aas
fadd
mov
or
iret
cli
cld
jmp
xchg
push
mov
inc
push
sub
xor
add
push
mov
test
xor
sub
cmp
adc
cwde
add
pop
xchg
jns
pushf
xor
dec
jae
lock
or
int3
repz
inc
adc
jecxz
pop
pop
add
fwait
jne
aas
popa
outs
repnz
sub
repnz
mov
mov
add
adc
cmp
push
lock
push
dec
xor
add
ror
bnd
xchg
push
xor
jmp
sahf
repnz
adc
jne
mov
mov
imul
sub
or
nop
in
imul
xchg
mov
js
mov
pop
pop
pushf
fs
jns
fst
and
retf
pop
rol
push
mov
cmc
sbb
xor
cdq
xor
add
cmp
xchg
cmps
cmc
push
jge
cdq
aad
jmp
dec
movs
(bad)
std
(bad)
retf
js
xor
jge
js
cld
call
jns
jo
cmp
in
push
and
push
fisubr
mov
lock
sub
add
mov
and
xchg
jmp
sbb
adc
outs
sub
push
shl
clc
sub
(bad)
push
sbb
rol
js
xchg
pop
mov
out
jge
and
pushf
pop
(bad)
dec
cmps
xchg
fisubr
inc
cwd
jns
fs
push
dec
fsubr
rol
rol
aam
push
adc
cmp
cli
in
jne
lock
push
jge
les
pop
sbb
cld
popf
jb
cwde
loop
xchg
add
popf
add
je
daa
push
fdivr
loope
sahf
jmp
xor
sbb
xchg
dec
add
les
mov
das
out
dec
int
mov
pushf
(bad)
mov
(bad)
js
inc
adc
lods
test
dec
mov
fcom
push
adc
push
(bad)
call
dec
pop
cli
cwde
(bad)
cmp
or
movs
push
cmp
enter
nop
ret
movs
loopne
aaa
or
add
mov
sbb
popa
mov
arpl
clc
fiadd
ins
jo
jno
push
or
pop
sub
(bad)
push
imul
aam
iret
xlat
mov
pop
jno
inc
sahf
add
xchg
mov
xor
cmp
(bad)
fst
or
movs
retf
dec
pusha
mov
loopne
(bad)
daa
add
imul
arpl
mov
enter
add
mov
clc
xchg
xlat
lock
sar
adc
or
xor
leave
adc
or
add
xchg
pop
and
xor
jno
jecxz
add
mov
xor
push
sbb
adc
pusha
call
sub
adc
add
xchg
xchg
dec
lods
pop
stos
out
jge
movs
adc
pop
or
add
jge
inc
mov
adc
push
adc
push
shld
cmp
add
pop
mov
jno
sub
lods
and
dec
lods
fisttp
mov
inc
dec
cld
mov
gs
sub
fs
sbb
pusha
push
add
add
test
or
xchg
jae
mov
dec
add
dec
dec
ret
cmp
push
mov
push
xor
mov
adc
in
fs
lds
xchg
movs
xchg
xor
leave
cmp
bound
fmul
push
ins
pop
jmp
nop
fdiv
inc
add
pop
mov
add
jo
lods
cmps
stos
mov
xchg
mov
sub
cs
push
popa
xchg
push
push
mov
test
sub
sub
mul
dec
push
xchg
adc
mov
jb
push
cld
pushf
gs
mov
aad
popa
jno
pop
call
in
(bad)
sbb
add
sbb
add
ins
add
mov
or
popf
mov
mov
push
jg
test
pop
and
pop
adc
add
push
das
(bad)
outs
dec
sub
pop
adc
mov
sub
mov
push
fisubr
cmc
cld
out
(bad)
push
or
mov
(bad)
push
pop
mov
sub
xor
or
mov
and
sub
icebp
xchg
div
or
push
adc
sbb
(bad)
mov
fcmovbe
idiv
mov
xchg
je
push
sub
or
test
fcom
ret
lock
xor
sub
shl
test
xor
mov
pop
dec
sbb
or
add
shl
inc
ins
sbb
pop
adc
ret
inc
pop
xor
aaa
sti
push
xor
push
dec
mov
sub
or
inc
shr
cmp
or
jae
cs
lahf
cmc
jge
scas
and
cwde
pop
popf
adc
xchg
out
sub
dec
jmp
ffree
lds
jo
cmp
jns
adc
shr
inc
or
jl
in
mov
or
dec
into
movs
lods
ins
lods
inc
sbb
push
int
xor
scas
cmp
dec
nop
test
xor
test
(bad)
sbb
cs
inc
mov
aad
fimul
sub
ja
loope
inc
add
pusha
and
sbb
adc
lods
or
mov
add
movs
aam
add
add
pop
ret
ins
push
ficom
add
lock
sar
xchg
xchg
pushf
inc
sbb
std
iret
pop
fild
push
jb
pusha
sub
inc
daa
cmp
ss
sbb
leave
aad
mov
cli
mov
sbb
push
and
or
bound
mov
out
push
add
or
and
fsub
inc
mov
out
int
fwait
or
mov
adc
ficom
ds
and
mov
pop
pop
fcmovnbe
sub
xchg
pushf
aam
aad
stc
mov
cmp
inc
sub
adc
lock
pop
sbb
push
data16
and
adc
cmp
or
add
or
sbb
outs
aam
repz
add
xor
ins
daa
push
xchg
xor
adc
sub
add
or
xor
call
movs
je
cmp
inc
(bad)
dec
sub
aam
jle
out
stos
jns
sti
and
sahf
cmps
call
sbb
jmp
jg
lods
and
and
stos
mov
add
sti
cmp
sbb
mov
jmp
test
pop
jge
pop
call
sub
out
lods
push
sub
adc
test
es
xchg
dec
push
daa
push
retf
imul
or
sti
shl
mov
mov
adc
sbb
fdivr
aam
add
sub
adc
sbb
add
stos
mov
sub
push
in
cmp
sbb
add
mov
lods
pop
pop
mov
mov
mov
mov
test
inc
xor
cmp
pusha
and
icebp
adc
fcomp
add
add
mov
inc
movs
xchg
push
je
dec
mov
int3
sbb
push
add
push
cmp
aam
mov
or
jp
es
push
aam
push
aam
push
movs
test
mov
(bad)
add
hlt
inc
push
sub
fild
xor
add
imul
push
call
inc
mov
add
cwde
cmp
xor
leave
and
stc
test
test
dec
les
inc
ja
inc
jbe
ror
mov
mov
adc
stc
and
push
inc
mov
and
pusha
inc
cs
or
or
or
lds
cmp
pusha
adc
add
jnp
pop
xor
sbb
mov
xlat
mov
push
jns
arpl
xchg
dec
dec
xchg
cmp
xchg
cmp
mov
test
test
pushf
inc
push
imul
inc
sbb
inc
cli
mov
jns
popf
jp
push
jnp
mov
in
push
hlt
(bad)
jg
add
sub
test
cmps
mov
enter
sbb
out
fst
ins
add
sub
jns
dec
push
sbb
cmp
mov
pusha
pop
adc
push
pop
cwde
test
test
xchg
(bad)
outs
cmp
sub
les
fmul
shr
inc
push
pop
lahf
sti
dec
retf
inc
cmp
add
adc
or
xchg
in
or
mov
mov
xor
push
sub
cmp
fnsave
adc
(bad)
jmp
xchg
mov
adc
test
or
push
test
xor
hlt
and
int3
into
jae
scas
and
sbb
mov
sti
cmp
mov
les
add
mov
cs
adc
retf
rol
adc
add
sbb
or
iret
call
call
sbb
jbe
rol
aad
in
and
and
bound
loop
dec
pop
mov
add
ins
test
add
xor
mov
add
cli
add
push
pop
jne
jmp
dec
sbb
mov
cli
dec
cmp
imul
dec
pop
sbb
je
cmc
push
dec
mul
pushf
adc
ror
add
gs
cld
iret
add
ja
cmp
add
and
jo
pop
cmp
jae
adc
xchg
aam
mov
into
or
test
cwde
ror
rol
test
shl
add
mov
call
test
cmp
inc
mov
int
xor
imul
sbb
cdq
and
sbb
ins
dec
test
sbb
test
add
mov
mov
or
dec
sub
(bad)
shl
add
cmp
retf
jbe
push
jbe
dec
xor
sahf
inc
mov
loop
pop
or
sar
ins
add
adc
add
pop
add
call
and
add
cmp
push
ins
cmp
inc
lds
in
sbb
sbb
mov
push
xchg
inc
cmp
div
dec
dec
add
push
sub
add
or
sub
sub
add
add
and
push
imul
imul
or
sbb
xchg
xor
fst
add
mov
sbb
das
push
add
popf
shl
dec
test
mov
xor
mov
dec
in
fs
dec
xor
dec
js
clc
je
sbb
xlat
inc
pusha
mov
add
adc
dec
test
sub
iret
add
cmp
cmp
pop
loopne
push
push
pop
add
xchg
dec
or
add
fadd
adc
adc
adc
xor
inc
in
call
mov
je
push
stc
dec
pop
jnp
cmp
loop
mov
add
loopne
push
enter
test
pop
jle
stos
sbb
pop
aam
add
add
movs
push
call
iret
stos
fisttp
in
push
enter
cmp
dec
loopne
pop
test
loop
push
pop
push
imul
out
xchg
mov
loopne
pop
test
adc
rcr
adc
inc
loopne
sub
and
(bad)
jp
mov
pop
repz
(bad)
outs
dec
pop
cmc
mov
enter
mov
pop
cli
mov
cli
into
lods
mov
push
movs
test
addr16
fst
add
js
sbb
sub
test
clc
or
fstp
int3
ficom
loopne
in
fild
ins
fadd
jecxz
test
add
test
pop
sub
mov
fs
pop
xor
pop
jmp
pop
inc
push
and
or
loope
and
adc
xchg
icebp
fst
ins
or
push
bound
les
dec
mov
inc
stc
sbb
pop
push
push
fistp
test
jo
inc
sbb
(bad)
cmc
pop
add
aam
xor
mov
adc
retf
jp
pop
aam
dec
jle
fistp
or
add
mov
adc
fisubr
test
add
popa
push
into
pop
xor
push
(bad)
sub
sbb
(bad)
loope
jmp
pop
and
bound
push
push
dec
dec
push
dec
out
dec
jle
stos
clc
or
daa
cmps
dec
fwait
sub
add
aam
inc
push
mov
cmp
sbb
loop
or
add
ret
fsubr
add
or
add
enter
xchg
push
pusha
test
pop
add
add
ds
xor
add
inc
sub
in
sbb
sub
adc
pop
fisub
add
sbb
mov
and
(bad)
dec
scas
in
fsubp
dec
xchg
out
movs
test
(bad)
out
dec
fbstp
bound
add
push
add
in
pop
test
add
in
pop
nop
es
ret
cmp
adc
sub
popf
loopne
movs
pusha
std
jl
pop
(bad)
iret
bound
sub
or
push
popa
adc
pusha
mov
test
sub
outs
sahf
rcl
out
fstp
adc
adc
pushf
xchg
xchg
add
add
ds
ss
dec
add
rol
(bad)
leave
jl
push
pop
push
dec
test
lods
into
push
fisubr
out
push
into
jmp
inc
and
jp
xlat
add
pop
mul
add
add
add
mov
pop
cwde
loopne
jmp
test
jmp
push
xchg
push
pushaw
jmp
fadd
out
vmovlpd
fmul
stos
fisubr
jmp
jl
jmp
ror
add
pop
ins
(bad)
mov
fmul
push
sbb
(bad)
ins
mov
inc
dec
add
into
dec
shl
xor
nop
mov
cmp
add
sub
pushf
push
std
or
gs
pop
adc
cmp
popa
sbb
xor
push
lds
inc
nop
imul
or
add
sub
ret
es
lds
fimul
cs
pop
jmp
rcl
addr16
lock
jle
fisub
fld
imul
sub
pop
out
and
xor
cmp
arpl
jno
fisubr
out
outs
out
into
add
add
and
push
xchg
out
cmc
out
bound
(bad)
push
in
push
out
xchg
mov
fld
add
adc
add
and
into
in
or
repnz
cmps
or
lock
clc
add
scas
push
aad
ins
or
das
div
pop
jae
xchg
test
sub
cmp
adc
inc
rol
clc
adc
arpl
sbb
repz
add
pusha
test
out
repz
jb
outs
pop
xor
mul
nop
int
leave
(bad)
imul
mov
cdq
add
test
pop
iret
repnz
mov
pop
(bad)
cmc
pop
(bad)
jne
push
xlat
jne
aas
jae
dec
jae
ja
fs
dec
and
call
imul
dec
out
nop
lds
push
jno
lock
xchg
pusha
je
push
ret
or
stos
fmulp
add
mov
mov
rol
dec
addr16
data16
mov
push
pop
cmc
ins
into
out
mov
sub
add
push
xor
cmp
inc
cmp
mov
xchg
pusha
iret
js
xchg
js
cmps
push
(bad)
js
test
xchg
mov
mov
push
iret
dec
test
imul
pcmpeqb
cwde
repnz
push
inc
out
sub
ror
sub
jcxz
pop
ja
(bad)
jno
pop
imul
jo
ins
outs
call
(bad)
out
idiv
div
cmp
cmp
out
xchg
lods
jp
and
pop
cmps
clc
pop
mov
mov
clc
mov
js
addr16
bound
jns
imul
ds
iret
lock
pop
stc
pop
or
cmp
dec
inc
mov
clc
jnp
addr16
xor
and
jmp
lock
jno
add
cmp
je
out
shl
jo
cmps
addr16
jl
jb
div
jg
cli
push
rol
cmp
or
adc
sbb
add
pusha
js
mov
pop
push
sti
mov
dec
jnp
(bad)
std
lods
(bad)
ins
fistp
iret
in
(bad)
dec
add
jae
or
jbe
jo
sbb
push
fdivr
add
push
fistp
ins
call
bound
jo
cli
(bad)
out
je
scas
cli
rol
cli
lods
out
dec
mov
adc
sub
cmc
fadd
or
add
test
xor
mov
inc
test
adc
fs
and
mov
sub
and
nop
and
cld
fs
push
xchg
cs
xchg
aam
pop
scas
dec
push
pushf
cmp
inc
or
call
in
cwde
mov
push
add
push
inc
xchg
out
pusha
mov
sub
call
or
adc
adc
inc
add
dec
mov
xchg
inc
adc
arpl
fnstenv
xchg
scas
pop
mov
das
loopne
gs
sub
dec
jle
retf
inc
push
sbb
xor
add
ds
and
and
ror
jne
sub
push
mov
mov
dec
repnz
pop
push
aad
xchg
mov
stos
or
in
inc
into
into
loopne
mov
shl
xor
adc
retf
push
adc
cmps
pop
in
adc
add
enter
pop
pop
rcl
imul
cs
gs
xlat
dec
mov
add
adc
push
sar
je
and
sbb
and
xchg
pop
xor
stos
mov
xchg
ins
sbb
adc
aam
xchg
and
and
loope
outs
shr
pop
mov
icebp
(bad)
jno
sub
scas
xor
adc
jecxz
fsub
or
in
fcomp
inc
sbb
mov
lds
dec
and
cmc
xor
jno
jle
mov
repnz
mov
lock
inc
add
and
or
adc
push
inc
adc
sbb
test
ret
jo
mov
sub
or
add
daa
jecxz
cmp
clc
pop
or
gs
jecxz
or
xchg
mov
xchg
fs
ret
sub
xor
mov
and
or
pushf
sub
dec
push
fs
ret
sbb
jno
inc
daa
popf
jbe
xchg
leave
mov
jb
daa
mov
cdq
in
lahf
xchg
shl
adc
test
mov
lods
enter
sbb
mov
dec
gs
imul
push
sbb
int
int
mov
call
sbb
mov
aad
jb
or
rol
add
inc
and
dec
inc
sar
cmp
dec
fld
div
mov
imul
inc
sub
pop
pop
out
or
xchg
mov
add
cld
cmp
or
repnz
sbb
(bad)
popa
adc
push
ffreep
mov
mov
pop
or
aad
adc
add
mov
or
(bad)
mov
mov
push
sub
int
ja
cmps
sub
enter
outs
aaa
fadd
call
inc
sbb
push
dec
and
dec
pop
cli
sbb
dec
addr16
mov
hlt
dec
jne
popa
jne
sub
sub
(bad)
jp
mov
ror
xchg
cmp
enter
shr
aad
sti
pop
pop
adc
adc
movs
ins
fwait
mov
sbb
loope
and
sub
mov
aas
dec
ds
in
bound
xchg
xor
aaa
outs
lea
shr
hlt
shr
inc
lock
cmps
std
push
push
pop
mov
push
pop
add
jnp
data16
mov
stos
je
cs
bound
imul
loop
mov
mov
mov
cmps
mov
sbb
push
or
test
bound
push
test
push
(bad)
push
sbb
push
push
fs
mov
mov
popf
(bad)
inc
xor
push
ds
and
sub
and
lods
test
add
or
xor
xor
add
and
bound
fdiv
mov
mov
xor
mov
and
repnz
stos
outs
into
add
retf
inc
enter
adc
push
dec
or
ret
jae
sbb
and
jb
inc
adc
or
rol
jo
nop
pop
jp
adc
outs
add
inc
xchg
adc
in
ds
add
or
bound
sub
and
mov
(bad)
xor
and
push
pusha
add
call
adc
jecxz
inc
cmp
jle
int
add
nop
fist
cmp
and
fidivr
add
jo
or
pusha
adc
sub
push
inc
mov
adc
adc
xchg
mov
add
outs
add
ret
mov
test
push
pop
mov
mov
adc
ret
jbe
dec
mov
sbb
je
xor
cmp
jo
or
or
mov
test
ss
enter
retf
enter
add
adc
push
out
(bad)
ja
xchg
xchg
popf
aam
(bad)
fisub
test
repz
test
pop
rol
aas
sub
movs
inc
mov
lds
pop
fwait
inc
mov
aad
inc
push
mov
shl
clc
xor
adc
pushf
in
call
jg
es
add
inc
xchg
es
retf
sub
call
and
fimul
xchg
xor
pop
cmp
jmp
ins
mov
add
push
call
sub
push
push
xor
shl
sbb
mov
or
pop
push
push
mov
mov
fild
adc
sub
xchg
or
loope
cs
dec
dec
push
add
lods
shl
sub
pop
inc
jmp
out
mov
mov
ror
aad
retf
mov
inc
cwde
inc
clc
ror
adc
and
inc
xchg
xor
bound
cwde
shl
mov
(bad)
and
sti
mov
div
mov
cmps
leave
mov
setl
xchg
dec
lea
mov
ds
ss
add
outs
add
or
push
mov
jbe
cmp
push
stos
and
dec
lock
pop
aam
or
std
sar
pop
(bad)
into
loope
cmps
and
inc
or
pusha
or
ins
ror
inc
and
ficom
fwait
js
inc
xchg
pop
mov
xor
jmp
jbe
leave
fstp
fucomp
vunpckhps
push
pop
aam
mov
add
popa
sub
fchs
sti
xchg
pop
leave
pop
ds
mov
and
or
xchg
inc
pop
add
mov
or
imul
ret
cdq
or
bound
ret
and
push
call
mov
ins
adc
pop
xlat
int
repz
sbb
add
sbb
cld
les
xchg
data16
aas
(bad)
mov
mov
es
jge
or
test
adc
cmp
xor
sbb
dec
stc
aam
mov
push
mov
addr16
or
pop
sub
sub
scas
or
mov
(bad)
xor
mov
add
ja
adc
ss
std
aas
mov
repz
sbb
push
shl
jmp
inc
mov
dec
lods
repz
iret
push
shl
in
mov
in
icebp
mov
and
pop
push
inc
loope
mov
ret
lea
fs
sbb
adc
adc
mov
jns
jae
xor
fimul
retf
pop
jb
mov
sbb
arpl
push
add
mov
ss
iret
add
push
dec
jmp
clc
into
in
and
push
mov
(bad)
shl
nop
hlt
and
cwde
jecxz
xor
inc
(bad)
xor
(bad)
mov
fdivr
scas
loop
cmp
pop
mov
js
add
and
outs
repz
jno
sti
mov
cld
and
cmps
retf
idiv
pushf
ret
pop
cmp
jmp
fisubr
cmp
pop
(bad)
cmp
retf
and
mov
dec
jo
daa
push
mov
fsubr
sti
js
addr16
sbb
inc
pop
fmul
mov
xchg
sbb
and
test
out
in
pop
or
cmps
and
sub
mov
inc
sub
xchg
cmp
dec
xor
cmc
mov
and
pop
rcl
ret
push
out
inc
aad
dec
out
xchg
ret
sbb
lds
gs
mov
adc
mov
inc
adc
and
lahf
pop
lods
test
mov
pop
xchg
sbb
inc
les
xchg
nop
sub
ret
icebp
xor
and
out
inc
pop
and
and
shl
in
push
dec
push
or
dec
idiv
sbb
int
dec
xlat
jae
(bad)
pop
xlat
daa
jge
cmps
int3
fnstenv
rol
inc
(bad)
nop
retf
inc
xor
add
and
sub
loopne
lea
pop
jle
fwait
inc
cdq
pusha
rol
jo
xchg
test
pop
shl
xchg
rcr
mov
loope
jp
or
sbb
jecxz
sar
fcmovb
cmp
mov
mov
popa
jb
loope
xchg
lahf
movs
mov
jne
iret
rcr
push
cmp
pop
push
and
inc
add
(bad)
xchg
and
mov
and
add
pop
(bad)
lock
in
or
lods
add
je
das
cmps
mov
and
call
hlt
push
loop
loop
mov
sub
xor
fsub
jno
mov
mov
int
out
pop
xor
mov
push
inc
pop
js
lds
xor
inc
add
fadd
mov
mov
and
adc
fldcw
repnz
ret
sbb
or
jp
mov
add
mov
aam
inc
movs
loop
scas
loop
outs
fldcw
push
rcl
cmp
bound
enter
sbb
psubb
imul
jg
lahf
cmp
loope
jmp
pusha
or
mov
push
fadd
dec
xchg
movs
dec
cs
inc
sub
mov
push
mov
stc
pop
fdiv
adc
adc
and
fadd
into
inc
je
push
jle
ror
xchg
add
cwde
popa
and
call
in
gs
and
mov
adc
add
sbb
pop
mov
push
je
add
je
add
clc
sbb
add
daa
jo
fs
fisub
mov
mov
push
(bad)
fs
pop
push
mov
xor
arpl
dec
sahf
dec
out
cwd
ins
pushf
add
and
sub
cmps
mov
cmps
imul
jne
jae
out
dec
fs
(bad)
scas
push
inc
jbe
xchg
ins
rol
add
add
inc
jo
and
jmp
cmps
pop
pop
push
xor
inc
jle
shl
push
add
pusha
sub
and
adc
cli
and
cmps
sbb
test
pop
inc
lods
fldenv
push
in
ss
mov
inc
or
xchg
xor
jg
in
cmp
mov
xor
or
inc
pop
mov
mul
cmp
pop
inc
call
(bad)
push
test
retf
inc
int3
jge
sub
aam
fs
cmc
add
sbb
rcl
inc
jo
push
out
sub
sub
jmp
jp
mov
sub
pop
inc
and
out
repnz
adc
nop
es
clc
jmp
jg
fs
fcom
test
prefetch
sbb
es
push
test
sbb
mov
or
fcmove
(bad)
pop
ret
retf
popf
ror
xor
sbb
and
cmp
bound
sub
shr
in
mov
les
pushf
add
call
loop
mov
stos
jnp
xor
xchg
movs
into
enter
inc
push
cmps
data16
add
sub
test
in
lods
ror
sub
lds
push
adc
sub
rcl
sbb
xor
mov
jmp
and
sbb
sbb
and
je
jns
loope
pop
add
and
and
add
stos
jge
imul
or
push
push
mov
adc
add
adc
adc
rcl
lods
pop
mov
pop
fisubr
inc
mov
inc
loop
jmp
sub
call
stc
inc
adc
inc
sbb
inc
adc
sub
inc
and
pop
ins
and
sbb
inc
hlt
rcr
add
pop
mul
es
inc
sub
sub
inc
push
add
gs
scas
add
xchg
mov
in
into
repnz
fwait
lods
(bad)
jmp
inc
adc
inc
xor
push
and
inc
push
ss
jae
add
int3
aam
sbb
aad
add
mov
retf
and
xadd
psllw
cwde
enter
iret
cmp
mov
inc
out
add
push
dec
lds
add
dec
dec
and
rol
adc
or
mov
mov
lods
and
or
rcl
scas
add
or
xor
mov
or
and
inc
and
outs
sub
es
sub
fstp
dec
sbb
xor
dec
mov
sub
push
xchg
mov
lods
push
ret
out
add
push
nop
mov
ins
fisub
sbb
adc
cld
inc
sbb
cmp
out
push
add
pop
and
jl
jle
(bad)
imul
cs
add
leave
add
push
inc
adc
scas
add
add
scas
add
inc
push
and
out
scas
push
loopne
or
add
inc
ret
add
fsub
xchg
sbb
add
inc
jmp
jl
mov
lock
fstp
inc
or
and
ficomp
loope
add
push
sub
mov
cmc
outs
movs
xor
stos
add
add
bound
push
sub
add
jo
or
scas
ret
daa
push
sbb
scas
add
ror
inc
sbb
pop
push
or
push
mov
aad
jne
mov
inc
add
xchg
sbb
aad
lahf
pop
(bad)
add
add
stos
pop
aam
shr
pop
adc
sahf
sub
jno
mov
xor
data16
inc
enter
repnz
iret
dec
sbb
(bad)
stos
mov
xchg
push
and
adc
push
dec
xor
inc
adc
int
hlt
ret
les
jae
adc
sub
les
inc
sbb
pop
mov
ins
jb
das
sub
pop
(bad)
and
sbb
js
sub
xor
cwde
stos
and
std
xor
xor
xor
pop
mov
scas
cmp
sub
add
test
mov
and
cmp
out
or
add
or
push
pushf
gs
pushf
push
or
or
pop
and
inc
or
xor
cmp
ds
test
pop
add
je
sub
stc
mov
jb
inc
shl
hlt
inc
fidiv
call
daa
enter
adc
mov
loopne
inc
push
(bad)
fadd
out
xor
or
shr
(bad)
int3
je
lods
dec
ret
jbe
aaa
mov
fstp
test
and
adc
push
push
add
pop
mov
mov
and
sub
das
lock
(bad)
repz
(bad)
sub
mov
adc
mov
iret
fcom
jb
sub
loop
mov
xor
xchg
inc
pop
jnp
pop
xchg
jo
xor
stc
pop
jb
mov
dec
xor
jbe
out
je
test
push
call
(bad)
iret
adc
rol
xchg
or
adc
jl
push
call
sbb
add
add
jbe
hlt
(bad)
adc
addr16
mov
call
and
nop
or
(bad)
jb
shl
mov
out
outs
addr16
das
xchg
push
jne
xor
aaa
mov
lahf
pop
jmp
aam
push
or
add
push
cmp
inc
inc
neg
nop
mov
pushf
inc
ss
sbb
inc
and
inc
jle
(bad)
scas
scas
adc
sbb
pop
cld
add
int
xlat
mov
jbe
sub
les
ret
jbe
xchg
fcomip
clc
mov
or
imul
or
ss
addr16
pop
jg
pop
test
sbb
xchg
js
or
push
sub
push
fcomp
dec
jle
scas
mov
mov
lock
pop
and
rcl
fsub
out
jmp
outs
sbb
sub
add
int3
cmp
mov
pusha
add
or
sbb
sbb
sbb
sbb
cmp
inc
mov
or
xlat
or
sbb
add
jno
out
sbb
xor
(bad)
stos
push
push
stos
push
xchg
push
push
xchg
stos
loop
scas
or
rol
add
aaa
movs
jae
or
sbb
adc
(bad)
in
pop
and
mov
stc
or
sbb
and
cmp
stos
inc
and
pop
add
lea
fwait
mov
or
in
scas
jnp
sub
jmp
or
(bad)
sub
psubsb
lock
or
sti
sbb
inc
and
cdq
fs
jg
mov
mov
adc
inc
cdq
sub
cmps
add
sbb
xchg
add
and
mov
js
xchg
push
and
push
inc
mov
add
sub
adc
mov
sub
push
cmp
inc
and
mov
jo
stc
enter
or
int3
xchg
sbb
shl
cld
adc
in
cld
das
sbb
(bad)
repz
out
rcr
mov
pop
xor
fwait
in
stc
cmp
adc
xor
jl
(bad)
dec
lods
inc
pcmpgtb
clc
test
pop
ins
cmps
imul
mov
cmp
sti
cmp
mov
push
ins
pop
lods
fstp
xchg
cmps
ss
cld
push
popa
add
sar
mov
sbb
mov
push
pop
push
je
or
add
add
adc
in
jle
or
adc
mov
lods
out
and
scas
in
mov
xor
(bad)
xchg
js
xchg
mov
sbb
adc
cmp
repz
inc
call
add
sub
sahf
or
xor
adc
and
dec
mov
bound
push
sbb
and
mov
pop
imul
add
sub
push
jno
ror
or
lahf
jo
cmp
mov
or
cwde
loopne
rol
fadd
add
mov
lods
pop
mov
les
lods
gs
stos
push
mov
xchg
(bad)
mov
imul
aad
mov
arpl
xchg
fnstenv
gs
mov
in
pop
scas
cmp
inc
test
add
rcl
and
jmp
push
stos
adc
and
mov
lds
inc
jg
movs
dec
mov
push
lods
or
and
lods
xchg
fwait
xchg
cs
bound
les
cmps
repnz
sub
pop
mov
in
inc
adc
rcr
dec
popf
ds
mov
adc
mov
mov
pushf
and
push
popa
shr
mov
scas
mov
pop
test
das
popa
cld
add
sub
les
jae
nop
dec
and
lds
test
xor
int3
xor
cmp
ins
nop
inc
dec
sub
mov
in
mov
sbb
in
xchg
sub
xchg
mov
inc
or
add
dec
or
call
clc
add
xor
push
imul
mov
enter
fs
int3
xor
and
fs
mov
or
repnz
sub
mov
sub
lods
add
stos
movs
inc
add
push
nop
xchg
dec
adc
dec
sbb
or
rol
push
ret
sub
pop
xor
popa
les
dec
aam
mov
ds
(bad)
cmp
inc
sbb
icebp
mov
adc
cmp
test
add
pop
mov
femms
add
inc
push
dec
push
cmp
pop
js
test
push
lods
inc
(bad)
dec
xor
mov
dec
movs
mov
mov
mov
add
std
mov
xchg
inc
bound
inc
and
aam
popa
add
xchg
scas
push
pop
cmp
sub
cmp
xor
sub
mov
sub
jno
aad
dec
mov
mov
retf
cmc
pop
and
sub
add
xchg
add
cdq
and
js
call
sahf
cmc
shl
stos
mov
stos
test
xor
mov
push
out
and
jbe
gs
ficomp
je
loope
xor
add
fistp
adc
sbb
mov
imul
ja
dec
cmp
test
dec
inc
mov
xor
arpl
and
xor
hlt
pop
xchg
fs
sbb
gs
ins
xor
add
pop
dec
pop
rcl
and
jg
cli
mov
xchg
cmps
adc
jmp
fisub
mov
mov
add
push
add
(bad)
cmp
fmul
(bad)
test
and
cmps
test
push
mov
pop
sub
or
call
fsub
or
mov
cmp
icebp
arpl
sbb
inc
adc
mov
dec
inc
out
int
scas
jae
jecxz
pop
(bad)
push
or
push
ret
jp
or
call
lock
add
cmp
adc
icebp
pushf
sub
emms
dec
stos
add
inc
dec
js
cmp
adc
inc
push
leave
rol
and
sub
out
xchg
add
jle
test
cld
and
mov
push
mov
jne
outs
mov
(bad)
adc
cmps
push
mov
mov
ds
fsub
jge
mov
push
sub
adc
inc
rol
adc
(bad)
jb
fmul
or
or
call
adc
adc
dec
(bad)
xchg
xchg
add
or
add
inc
mov
lods
mov
adc
mov
sbb
mov
cmp
xor
xchg
or
mov
mov
cmps
inc
and
mov
jle
dec
push
push
cld
push
stc
mov
mov
xor
cdq
in
arpl
es
sub
xchg
icebp
mov
jecxz
sbb
aas
aaa
xchg
sbb
cmp
leave
mov
adc
add
or
nop
popa
call
enter
sbb
cmps
adc
adc
and
inc
add
xor
cmps
daa
mov
dec
sub
movs
and
popa
lods
repnz
xor
fwait
rcr
sub
(bad)
sub
adc
and
ins
data16
add
mov
xchg
mov
loop
bound
push
jne
and
jp
push
mov
popa
js
aas
xor
inc
call
aad
(bad)
xchg
rol
aad
ficom
push
popf
loop
cmp
enter
nop
jb
add
hlt
inc
ror
push
push
pop
loope
jmp
gs
push
or
add
ret
xchg
inc
xchg
cmp
add
add
enter
pusha
ret
mov
xchg
cmp
pop
sahf
jecxz
mov
cmps
mov
adc
mov
jecxz
mov
sub
dec
sbb
js
adc
test
adc
imul
jp
das
cli
mov
movs
or
dec
cmp
adc
add
pusha
aam
(bad)
(bad)
xor
jl
sbb
sbb
cmps
retf
leave
aad
inc
inc
rcr
dec
and
add
or
push
lahf
dec
xor
jp
xchg
pop
mov
pop
sar
mov
push
or
je
shr
or
in
mov
and
lods
test
popa
xor
xchg
sub
push
icebp
mov
sbb
mov
xchg
pop
jp
sub
sbb
sbb
mov
test
rcr
je
sbb
jnp
das
jb
mov
repnz
pop
loopne
push
pause
pop
push
lock
nop
add
dec
leave
pop
fwait
mov
dec
push
dec
pop
int
mov
adc
dec
fidivr
push
imul
cmp
gs
pusha
add
cwde
and
rep
das
push
fcom
dec
movs
or
jmp
cmp
jbe
leave
inc
lds
or
adc
sub
arpl
loope
jns
les
dec
ror
fs
mov
adc
dec
pop
inc
mov
enter
and
adc
cmps
mov
jecxz
inc
cmp
add
cld
pop
test
add
mov
call
int
xor
sub
and
mov
adc
mov
pop
pop
fst
movs
ds
aam
mov
push
lods
loope
scas
fs
mov
hlt
bound
mov
ins
hlt
rol
js
inc
sub
fisttp
fistp
mov
cmp
(bad)
sbb
pop
fst
loop
cmps
or
xor
or
jns
hlt
and
popa
mov
clc
cwde
int
sub
repz
mov
sub
imul
jb
sbb
stos
cmp
sub
sbb
sbb
pusha
push
jmp
out
sbb
mov
jo
adc
pushf
xor
fild
retf
fild
sbb
jb
or
ins
and
fisttp
mov
(bad)
dec
out
jae
jb
inc
pop
mov
pop
jo
xchg
mov
adc
and
adc
adc
sub
add
test
ror
add
dec
xor
aam
fs
add
mov
bound
outs
add
adc
xor
mov
mov
xchg
shl
jl
xchg
cmp
imul
cmp
mov
pusha
test
add
enter
movs
mov
lock
push
lahf
inc
div
mov
xor
lods
jmp
mov
popa
or
fdivr
neg
outs
adc
les
stos
sti
fnsave
add
and
add
xlat
fnstsw
fsub
out
(bad)
in
adc
(bad)
sub
add
mov
pop
cs
(bad)
mov
fs
arpl
push
xor
mov
fild
mov
sahf
jecxz
add
stos
jge
add
inc
shl
(bad)
xchg
ret
jg
and
add
add
ror
cmp
ret
push
ror
call
pusha
call
(bad)
retf
repnz
pusha
fs
test
sbb
popa
pop
call
adc
add
push
adc
lods
adc
ret
scas
clc
add
push
(bad)
scas
pop
push
inc
rcl
jle
sbb
sbb
loope
mov
inc
sar
mov
das
sbb
add
mov
sbb
xchg
cld
clc
cs
and
add
bound
mov
(bad)
movhps
xor
or
call
dec
push
das
enter
mov
mov
jmp
add
jno
call
test
mov
mov
sub
sub
xor
xchg
inc
mov
jmp
adc
dec
icebp
adc
out
test
add
mov
ins
nop
clc
push
sar
das
sub
push
rcr
and
adc
mov
push
mov
sub
dec
rcl
ret
mov
icebp
sbb
sbb
sbb
pop
inc
stos
out
in
dec
lds
(bad)
mov
or
lea
push
stos
ret
loopne
push
add
add
lds
lock
lods
loopne
mov
or
xor
les
les
mov
data16
push
xor
data16
nop
and
and
xor
aad
lods
xor
adc
add
jecxz
fs
sbb
nop
jbe
adc
cs
and
outs
adc
cmp
push
mov
add
add
imul
scas
pusha
in
mov
sbb
pop
push
jmp
or
out
aas
push
data16
adc
mov
sbb
mov
int
ror
dec
mov
(bad)
inc
sbb
rcr
adc
pusha
jno
lods
add
add
jp
push
jne
dec
pop
mov
push
rol
and
je
pop
add
(bad)
and
call
cs
or
je
add
in
retf
dec
das
cmp
inc
and
xor
xor
xor
or
dec
add
cmps
and
sbb
inc
adc
add
jo
cmovle
push
repnz
arpl
movs
inc
adc
daa
adc
and
cld
and
or
mov
xchg
push
sub
sub
cwde
hlt
scas
pusha
rcl
fwait
mov
in
adc
xor
mov
fs
icebp
push
fst
push
repnz
cs
cs
das
adc
sub
fmul
xor
adc
sub
ds
sbb
cmp
pop
xor
leave
fcmovnb
ins
xor
rcl
sub
shl
add
loopne
sub
mov
xchg
daa
popa
add
xchg
inc
and
cld
inc
adc
push
sbb
sbb
sbb
cdq
adc
ret
sar
inc
sbb
cmp
push
mov
pop
push
or
(bad)
push
sbb
nop
sub
push
push
loope
repnz
and
cmp
mov
pop
add
and
dec
mov
and
repnz
cmp
stos
adc
xor
(bad)
adc
jno
sahf
scas
ficomp
add
out
dec
adc
adc
add
or
and
rcl
in
loop
rcr
rol
jbe
or
sbb
push
cmc
push
push
xchg
cmp
das
sbb
sub
sbb
or
add
mov
icebp
test
ficom
stc
mov
mov
or
stos
mov
push
push
shl
aas
inc
xor
loopne
or
sub
adc
nop
aas
(bad)
jp
dec
xlat
or
inc
fnsave
rol
add
xor
and
punpckhbw
in
adc
loopne
out
and
mov
push
or
mov
sti
call
movs
sub
adc
hlt
jne
stos
mov
into
and
xor
dec
adc
lgdtd
xor
nop
add
push
bound
push
pop
rcl
dec
sub
cmp
ficom
pop
leave
or
in
push
(bad)
fcom
adc
xchg
div
mov
mov
dec
adc
adc
lidtd
inc
pop
test
fld
adc
or
mov
sbb
into
push
(bad)
test
pop
pop
hlt
pop
aas
adc
inc
imul
pop
mov
fild
xor
test
push
dec
out
push
(bad)
hlt
xor
push
or
push
(bad)
jmp
mov
cmps
mov
stos
hlt
arpl
fs
iret
pop
scas
shl
aad
and
add
into
gs
mov
ja
data16
inc
pop
inc
rol
dec
add
rcr
addr16
and
add
addr16
push
push
adc
into
cmovle
out
in
push
into
(bad)
out
or
sub
or
push
mov
push
out
aad
jmp
push
dec
popa
pop
xchg
inc
push
and
inc
cmc
sub
inc
add
xor
imul
jbe
cmps
push
or
xchg
sahf
dec
(bad)
arpl
imul
repz
xor
adc
test
xchg
jbe
push
add
mov
and
mov
test
aam
push
cmp
addr16
mov
adc
inc
xchg
je
sar
loope
xchg
push
ss
pop
mov
fwait
jno
sbb
scas
div
ss
mov
mov
sbb
xchg
push
jns
pusha
iret
add
aaa
ins
pop
inc
(bad)
and
xchg
call
pop
(bad)
push
dec
sbb
ja
mul
and
iret
xchg
jnp
clc
and
mov
push
inc
push
or
cmps
inc
mov
jno
push
xor
pop
(bad)
or
push
test
mov
in
ja
cmp
jae
loopne
in
movs
je
aaa
xor
jl
dec
rcl
mov
adc
jbe
js
mov
or
jne
retf
scas
ja
out
cmp
leave
jbe
mov
dec
imul
unpcklps
cmp
xchg
adc
xchg
xchg
xchg
push
in
mov
or
mov
dec
sbb
out
jmp
xchg
jne
mov
aaa
add
add
mov
add
pop
shl
or
test
adc
push
mov
loope
push
imul
pop
fs
jge
xor
mov
xor
test
fs
fidiv
add
adc
cmp
push
xor
xchg
add
xchg
fwait
into
xchg
(bad)
fmul
add
repnz
inc
out
jae
clc
add
pop
mov
out
cli
jns
bound
push
mov
inc
inc
mov
xchg
mov
or
das
and
sbb
das
cli
data16
adc
cwde
mov
xchg
adc
in
por
adc
or
cmp
cwde
add
adc
xor
adc
call
xchg
iret
cdq
and
in
push
jno
pop
rcr
pop
repz
jg
fst
(bad)
lock
(bad)
lahf
add
mov
xchg
mov
in
xchg
outs
mov
out
lea
cmc
jbe
cmp
or
fnstenv
push
loope
jmp
movs
add
sahf
mov
add
xchg
(bad)
jnp
jo
jp
push
xor
or
test
imul
pop
add
inc
and
pop
or
popf
aas
sbb
xchg
adc
test
add
sbb
jp
mov
sbb
sbb
mov
sbb
clc
sbb
push
jmp
scas
xor
outs
and
mov
aaa
es
cmp
xor
jne
addr16
adc
pop
mov
jge
aaa
cmp
cmc
popf
xchg
mov
mov
cmp
xchg
sbb
mov
xlat
xor
inc
fwait
mov
mov
jmp
stos
mov
and
outs
mov
or
popa
arpl
call
add
mov
pop
cmp
xchg
xchg
or
mov
fs
push
xor
adc
add
stos
mov
xor
cmp
pop
test
mov
and
mov
mov
shl
scas
sbb
fucomi
push
dec
sbb
pop
xchg
cmp
pop
mov
or
mov
push
xor
aaa
aad
xor
and
push
scas
fwait
dec
inc
pop
xchg
and
mov
cmp
cmp
jl
addr16
data16
xor
pusha
add
mov
mov
or
cmps
push
pop
lds
xchg
xchg
mov
std
stos
add
pusha
add
fnstcw
mov
je
sbb
out
fstp
pop
pop
adc
enter
mov
leave
std
push
ins
add
stos
and
jmp
enter
add
cmp
mov
lods
pusha
mov
and
mov
cld
add
pushf
ret
mov
scas
mov
inc
or
movs
popa
sbb
add
pop
xor
pop
vhaddpd
dec
add
enter
pop
sub
cld
test
sbb
repz
loop
movs
out
jle
cld
and
stos
xor
cs
popf
push
mov
sbb
xchg
push
movs
inc
or
pop
push
add
inc
popf
mov
and
mov
fld
(bad)
pop
xor
cdq
test
jbe
fs
pop
pop
daa
scas
and
pop
cmps
add
iret
mov
rcr
inc
sahf
sub
cwde
ret
ret
push
rcl
mov
pop
mov
sar
dec
push
iret
fucom
movs
mov
aam
std
cli
xchg
xor
push
out
inc
or
imul
cmp
sahf
sbb
scas
or
shr
jo
cmp
xor
ds
es
push
sahf
mov
pop
cwde
(bad)
and
lods
inc
add
and
push
test
ins
loope
fsubp
leave
scas
xchg
sbb
mov
pop
lock
out
pop
std
sub
sar
xchg
inc
test
arpl
pop
loop
fwait
adc
add
imul
mov
bound
mov
xor
jae
sar
cmp
adc
imul
loop
xchg
mov
adc
retf
shl
or
pop
(bad)
movs
mov
xor
push
out
loopne
jno
mov
shl
out
sbb
fwait
mov
push
aaa
outs
dec
cmps
aas
sbb
push
or
out
xor
xchg
pusha
dec
rcl
jmp
repnz
sub
(bad)
cmp
and
jne
inc
adc
adc
inc
mov
inc
and
mov
(bad)
fidiv
gs
lea
imul
rol
and
pusha
rol
xchg
mov
add
leave
adc
sub
adc
dec
pop
xor
mov
mov
xor
fstp
sub
mov
loope
adc
outs
fstp
sub
test
xchg
jmp
push
sub
retf
add
cmp
(bad)
mov
mov
call
inc
aas
out
cli
test
loope
loopne
or
sbb
mov
mov
pop
sbb
ja
add
pop
cmp
rol
mov
pop
ins
sbb
xor
push
cwde
ds
ret
sub
enter
push
fiadd
or
bound
rcr
xchg
lds
and
iret
and
pop
mov
int
mov
mov
xor
(bad)
lea
push
movs
dec
shl
in
imul
mov
int
jne
cli
cmps
(bad)
(bad)
xchg
sub
and
ds
mov
and
jg
jne
add
bound
ds
sub
push
add
add
add
(bad)
shl
popa
sbb
add
add
add
mov
or
mov
dec
inc
mov
nop
ins
mov
in
or
pop
xor
or
add
push
and
add
mov
iret
inc
pop
fnsave
addr16
or
cs
or
pop
leave
xchg
jns
xchg
jns
js
or
mov
push
push
(bad)
cmp
push
and
or
fild
nop
push
mov
in
or
sub
fldenv
inc
enter
jno
inc
test
call
inc
cwde
mov
xchg
data16
pop
sbb
sbb
mov
or
mov
jmp
mov
fisttp
mov
and
xor
pop
pushf
jo
lods
xor
push
dec
retf
push
xor
push
xor
pop
push
ficom
xor
xor
and
push
inc
gs
push
jo
mov
jne
pop
jns
add
mov
ret
cbw
loope
or
jp
cmps
mov
add
or
and
cmps
mov
push
adc
test
cwde
loopne
and
sbb
mov
adc
(bad)
mov
mov
fsubr
or
mov
test
xchg
sub
pop
push
fnsave
das
popa
stc
xchg
jns
test
out
call
sub
ss
popf
aad
add
ins
dec
test
movs
push
call
mov
and
shl
jmp
cmovo
xor
(bad)
or
inc
push
es
and
cmp
jb
push
mov
push
aas
call
xchg
hlt
jmp
call
and
mov
ss
dec
int
dec
aaa
dec
jmp
cmp
lods
push
pop
add
ret
pop
out
pushf
mov
push
mov
jbe
inc
pop
pop
jmp
ins
aaa
test
jbe
addr16
dec
fadd
add
out
pop
bound
fmul
test
test
test
adc
ds
imul
dec
jmp
cmp
test
inc
enter
and
mov
jg
xchg
into
jne
mov
inc
cmp
arpl
and
pop
ds
int
xchg
dec
out
stc
xor
imul
lea
mov
xor
popa
pop
or
add
imul
adc
pop
xlat
xor
hlt
sub
shl
fiadd
shl
mov
push
cmps
jnp
jmp
add
jl
add
int3
enter
fwait
sub
add
push
test
sti
movs
loopne
nop
int3
dec
or
loop
into
mov
xchg
inc
loope
std
arpl
dec
jae
js
or
xor
aaa
arpl
test
mov
pop
imul
and
fwait
jno
popf
je
dec
into
mov
mov
ret
mov
fisub
ret
arpl
jle
xchg
add
loope
hlt
mov
push
cmp
and
stc
dec
in
sub
das
and
mov
jl
ins
jne
xchg
add
or
pushf
adc
sbb
or
inc
lock
cmp
jae
mov
sub
xor
sub
imul
loopne
mov
cmp
pop
ja
es
daa
sbb
test
bound
sbb
test
add
push
add
outs
sbb
and
or
mov
loopne
sub
fiadd
adc
data16
mov
or
fbstp
or
inc
and
adc
call
add
arpl
pop
add
jne
mov
mov
and
mov
call
push
call
mov
aam
inc
sub
or
inc
cmp
icebp
ins
push
out
xchg
leave
fcom
xor
mov
gs
push
(bad)
or
frstor
xor
or
push
push
and
add
inc
xor
inc
mov
retf
arpl
mov
rcl
rcl
jns
dec
xchg
sbb
retf
push
ja
adc
outs
push
dec
call
sub
das
push
xchg
xchg
(bad)
scas
hlt
push
sub
cmc
mov
cmp
push
lea
stos
push
sub
shr
movs
(bad)
inc
push
inc
sbb
dec
pop
push
inc
inc
inc
sub
sub
js
add
inc
or
dec
cwde
xlat
mov
jmp
cmps
push
fidivr
adc
fnsave
ja
or
xchg
or
iret
fwait
(bad)
mov
cmp
push
retf
jnp
pop
fdivr
add
outs
xchg
ins
push
jecxz
(bad)
fdiv
xor
xor
cmp
call
mov
and
ret
(bad)
lds
retf
push
jbe
shl
add
jbe
sbb
cs
call
mov
lds
es
jmp
add
xor
repnz
dec
or
clc
frstor
add
es
jl
pusha
add
or
fimul
ins
inc
dec
popf
shl
icebp
sub
nop
inc
test
push
cmps
ror
dec
mov
sbb
pushf
out
dec
mov
push
mov
adc
xchg
sub
int3
xchg
pop
repnz
mov
xchg
push
stos
and
sbb
(bad)
in
int
adc
inc
dec
mov
dec
aam
mov
popa
retf
out
inc
xchg
xor
js
ficomp
not
stos
pop
or
sub
inc
repz
dec
sbb
shl
and
enter
mov
xchg
jge
jbe
pushf
cmps
movs
adc
lods
dec
add
ror
jl
inc
addr16
in
mov
retf
lock
loop
aam
dec
mov
and
or
(bad)
enter
data16
stos
push
or
sub
gs
aaa
ja
xlat
mov
xor
xchg
and
pop
ficom
sub
adc
adc
and
std
repnz
nop
pop
fild
xor
mov
or
push
clc
add
and
pop
in
ss
and
popa
(bad)
jns
mov
cmp
mov
test
pop
inc
mov
mov
sub
imul
jns
int
test
lea
and
and
stc
xchg
test
stos
das
cmc
xchg
jb
inc
jmp
and
and
pop
fcmovne
ficomp
cmp
inc
aas
push
xor
out
scas
mov
icebp
or
(bad)
mov
pop
call
jne
jns
je
lea
test
dec
push
push
dec
idiv
in
dec
cdq
clc
fmul
push
adc
pop
ja
inc
scas
aad
les
jne
push
sbb
out
jne
or
lods
lock
lock
adc
and
mov
call
mov
repnz
jmp
popa
fstp
jnp
cmp
xor
cmps
push
xchg
inc
or
movs
fucomip
sub
fnsave
pop
mov
loopne
cmc
adc
mov
add
jo
add
jl
js
(bad)
jl
out
lock
les
dec
inc
jge
xchg
sbb
add
and
push
mov
loop
jle
mov
pop
or
sbb
and
jle
xor
jmp
and
inc
mov
adc
adc
pop
push
inc
dec
hlt
xchg
jnp
push
aaa
add
cdq
nop
or
gs
xchg
jae
xlat
or
mov
pop
xchg
test
es
adc
adc
add
pop
out
dec
rol
sbb
mov
sub
pop
xor
aaa
xor
add
rcr
xor
or
push
test
pusha
add
(bad)
jnp
aam
and
rcl
xor
sub
or
mov
repz
push
mov
loope
jo
bound
lods
mov
pop
(bad)
jns
adc
cmp
xchg
(bad)
push
cmp
xchg
fs
jnp
or
xor
add
nop
xchg
push
push
jl
inc
jae
fs
jb
sub
mov
or
sub
loopne
ins
and
xlat
ss
loopne
sahf
lock
inc
inc
dec
dec
inc
push
inc
js
test
push
fmul
adc
cmp
pop
and
(bad)
es
call
arpl
cli
xlat
mov
lock
add
ja
cmp
cwde
inc
sbb
pusha
add
mov
inc
out
cmps
xchg
jb
pop
jl
and
sbb
mov
pxor
call
mov
push
sub
sub
add
loop
imul
add
loop
repz
jb
push
or
inc
cmp
pop
inc
and
xor
sub
cmp
and
lods
pop
add
call
mov
xchg
and
imul
xchg
push
fmul
add
test
xor
xor
dec
pop
cmp
xor
xchg
add
enter
ins
cwde
cmps
sub
add
sub
mov
mov
fwait
shl
ins
(bad)
popa
sub
and
or
sub
mov
and
imul
stc
push
loopne
call
out
call
(bad)
cmp
rol
hlt
xchg
sbb
and
or
out
sub
cmps
nop
or
mov
mov
add
rol
xchg
xor
add
xchg
mov
xchg
or
pop
pop
jo
shl
stos
leave
mov
xchg
jb
xchg
mov
jns
les
clc
adc
sbb
fwait
mov
dec
std
(bad)
push
stc
and
inc
test
add
mov
popa
lock
mov
add
add
push
adc
pushf
mov
sub
loopne
cmp
add
outs
out
sahf
push
add
mov
lahf
fsub
movs
or
xchg
lahf
(bad)
mov
fld
repz
stc
pop
ja
xchg
xchg
or
xor
sbb
adc
nop
xchg
push
cmp
pusha
add
jmp
or
lea
add
push
sub
push
test
sub
adc
adc
inc
ins
xor
pop
in
dec
jp
pop
jo
xor
pop
dec
inc
sub
xor
mov
xlat
pushaw
mov
dec
pop
dec
sbb
push
popf
push
rol
xchg
mov
xor
adc
pop
fld
mov
mov
xchg
push
call
leave
push
je
adc
and
jo
push
fwait
idiv
dec
mov
sub
inc
jle
cmp
mov
cmps
test
jno
xor
fwait
jb
je
dec
jne
add
dec
fwait
jmp
mov
nop
or
add
mov
and
ror
sub
test
mov
ins
repnz
jecxz
mov
popa
jmp
fwait
push
rcl
xor
fwait
add
data16
inc
sub
mov
cmps
aad
xor
push
xor
lea
and
call
mov
dec
scas
adc
test
jo
xadd
mov
or
loope
xor
jecxz
dec
or
jo
mov
dec
inc
cmp
addr16
cmp
in
mov
push
sti
mov
pop
dec
test
add
push
and
and
add
sub
nop
sub
xchg
sbb
ja
in
or
push
aad
pop
dec
pusha
or
push
or
mov
je
hlt
or
shl
adc
xchg
add
fldenv
je
shr
add
xor
movs
sub
and
jecxz
dec
jne
(bad)
mov
pusha
inc
mov
lds
outs
cmps
mov
pop
rcr
dec
scas
or
cmp
lds
jecxz
mov
adc
lea
push
mov
dec
popa
add
into
popa
bound
inc
xor
bound
repz
nop
pop
pushf
add
pop
mov
lods
jmp
je
sbb
pop
push
fstp
sub
jne
clc
pop
pusha
xchg
xor
rcr
add
arpl
cmp
sub
inc
addr16
mov
mov
mov
mov
cmp
pop
push
add
add
mov
popa
jge
add
(bad)
test
inc
adc
ds
jnp
pop
xor
xchg
test
fwait
sbb
fwait
mov
nop
cmps
sub
sbb
mov
shr
inc
xor
pop
xchg
mov
mov
add
imul
or
imul
jbe
int3
jnp
jge
lds
rcl
xor
or
or
popa
dec
jge
mov
jmp
jno
int3
mov
test
and
add
jg
rol
push
or
ja
ret
jno
movs
pusha
jb
add
push
das
daa
rcr
ins
or
outs
ds
jne
mov
or
adc
adc
adc
mov
int3
leave
push
cmp
stos
rol
mov
lds
mov
add
lods
push
jnp
ds
out
or
jne
push
div
and
mov
adc
pop
jb
repnz
jns
jbe
adc
bound
inc
adc
fadd
push
repz
cmp
test
or
jne
mov
pop
retf
dec
sub
adc
leave
in
lds
sub
ret
lea
scas
and
stc
pushf
iret
sub
iret
add
bound
nop
adc
jmp
mov
outs
fwait
rcr
sbb
iret
and
rcl
rcr
popa
or
shl
cld
scas
xchg
rcl
imul
popa
add
adc
popa
jl
or
(bad)
call
xor
movs
(bad)
mov
mov
mov
iret
lahf
fs
cmp
push
cmp
ror
in
sar
pop
nop
rcr
and
sbb
aam
in
rol
stc
retf
imul
sar
popf
and
popf
add
sar
ret
aam
fstp
mov
dec
daa
fist
loopne
sbb
pushf
rcr
retf
and
enter
mov
test
jo
loop
stc
leave
lds
xchg
aad
fsub
rcr
aad
int
xchg
pop
jge
xor
dec
dec
fld
cmp
add
aam
repz
jo
or
pusha
push
cld
scas
xchg
mul
out
fistp
inc
and
push
xchg
xchg
or
(bad)
(bad)
fxch
fst
mov
dec
popf
aam
sbb
mul
fst
aas
out
mov
pop
jns
jno
fstp
sub
pop
inc
mov
push
jmp
fdivr
sbb
add
orps
hlt
or
lods
sub
fist
in
fld
pushf
leave
push
sub
dec
pop
dec
mov
imul
pop
mov
in
(bad)
dec
fisub
fcom
mov
sbb
nop
pop
xor
jge
shr
in
loop
pusha
loop
scas
fsubrp
sub
jne
or
add
mov
popa
je
jno
or
cli
scas
aas
outs
(bad)
sbb
into
jnp
mov
loopne
sahf
sub
and
daa
xchg
pop
lock
and
or
fdiv
pop
in
jle
sbb
push
pop
loope
mov
dec
sub
sbb
fldenv
(bad)
add
push
fld
and
in
scas
inc
mov
adc
fcmovb
lahf
ins
xchg
movs
add
or
addr16
ja
mov
sbb
and
add
or
inc
sub
add
add
add
add
or
add
mov
or
sbb
in
ret
test
sbb
or
and
ret
mov
(bad)
(bad)
data16
xchg
sub
pop
leave
mov
dec
cmp
arpl
int
xor
je
shl
lds
pop
push
and
inc
(bad)
push
mov
cmps
sbb
xchg
in
dec
mov
push
sahf
ss
call
aas
adc
lods
inc
add
pop
or
inc
(bad)
sbb
pushf
pop
mov
ins
inc
mov
(bad)
mov
dec
push
mov
fstp
pop
adc
lea
data16
daa
push
mov
xchg
js
and
lds
leave
test
int
mov
(bad)
pop
jmp
mov
popf
xchg
scas
bound
int3
jnp
inc
shl
mov
pop
sub
shr
dec
lahf
stc
fsubr
sbb
pusha
inc
mov
outs
jp
retf
in
shl
push
mov
imul
cmc
and
retf
mov
fs
gs
jo
xor
push
push
data16
pop
sbb
jge
mov
jge
push
mov
cmps
fistp
jbe
pop
inc
add
fs
out
mov
inc
pop
sub
dec
inc
sbb
sbb
jl
out
xlat
pop
pushf
mov
popf
xchg
add
ror
push
inc
stc
and
xor
mov
cmps
jecxz
pop
icebp
sub
inc
aas
jp
in
fs
dec
xchg
(bad)
(bad)
push
xchg
inc
xchg
push
inc
and
pushf
push
dec
leave
mov
daa
adc
int
xchg
mov
nop
call
push
mov
js
and
imul
pop
lea
test
(bad)
aaa
ret
or
xchg
jns
adc
inc
ret
sbb
xchg
(bad)
scas
test
gs
mov
jmp
mov
cld
xor
mov
es
dec
sahf
jle
test
shr
sahf
push
test
mov
scas
push
xchg
push
xchg
movs
dec
es
sub
mov
mov
pop
mov
xchg
mov
clc
jle
out
sub
repnz
scas
and
adc
imul
or
ret
adc
jo
icebp
(bad)
jmp
ss
push
xchg
retf
and
enter
repnz
outs
es
int3
adc
retf
(bad)
les
xor
mov
ins
jge
pop
pushf
xor
add
mov
adc
les
jecxz
cdq
out
lods
xchg
leave
das
shl
pushf
mov
xor
div
loopne
or
xchg
mov
mov
(bad)
sbb
sar
mov
in
nop
dec
int3
jmp
popf
add
sbb
mov
inc
pop
fcom
xchg
jb
sbb
(bad)
sbb
in
ja
cmc
mov
xor
pushf
std
mov
push
mov
repz
movs
sub
or
fnsave
(bad)
xor
pop
jle
or
scas
cmp
imul
xchg
xchg
jnp
in
push
stc
repnz
aaa
outs
stc
mov
xlat
mov
mov
mov
cmps
ja
cmp
enter
push
jo
jp
jecxz
inc
add
(bad)
das
jg
hlt
pop
into
mov
cwde
sbb
out
loop
mov
outs
rol
fadd
sub
cmp
nop
pusha
test
sbb
push
das
ins
fmulp
mov
ins
sbb
fiadd
lds
sub
sti
add
mov
test
mov
test
(bad)
mov
dec
inc
out
inc
add
jo
adc
xchg
inc
add
rol
or
rol
ror
cmp
cmp
ret
mov
cmp
fsubr
imul
xchg
rol
jb
adc
popa
std
adc
mov
push
mov
sbb
adc
pop
sbb
or
xchg
mov
push
movs
cmps
les
xor
mov
push
lds
and
jmp
addr16
pop
sbb
inc
retf
mov
into
push
adc
xor
lods
add
dec
and
jmp
int3
pop
inc
or
loop
(bad)
cmp
rcr
or
inc
aas
add
nop
or
hlt
push
fadd
xchg
xchg
mov
arpl
ss
rcl
(bad)
mov
xchg
sub
movs
sub
pop
les
lea
fwait
adc
retf
sub
dec
out
rcl
mov
adc
idiv
jecxz
ror
test
cdq
ror
cdq
cmp
xor
inc
cld
es
inc
inc
rcl
mov
xchg
in
mov
xchg
test
adc
jb
sub
and
jno
or
mov
sti
mov
xor
mov
jne
sbb
imul
mov
dec
and
call
movs
push
add
push
sub
inc
push
js
push
mov
sub
fist
movs
fdiv
xor
and
inc
(bad)
mov
and
push
fwait
cs
mov
push
mov
mov
sbb
aam
mov
sub
xor
mov
or
push
out
pop
push
ins
inc
adc
mov
inc
ret
cmc
enter
add
arpl
pop
jmp
pop
ins
out
fadd
pop
cmc
stos
or
dec
push
daa
and
call
fidivr
adc
cmc
movs
(bad)
push
jmp
retf
retf
xor
pop
ror
(bad)
in
dec
mov
mov
mov
sub
fdivr
call
scas
inc
pop
lods
bound
lock
sub
call
cmp
int
(bad)
inc
or
xor
inc
jecxz
cmp
push
mov
jnp
jbe
fwait
xchg
and
sbb
cmp
idiv
cmp
xchg
xor
mov
out
push
(bad)
xchg
clc
xchg
xor
(bad)
xor
xchg
stc
imul
gs
mov
push
clc
std
test
push
out
cli
cmp
addr16
or
stc
push
xchg
xchg
imul
add
mov
and
neg
inc
cmc
loop
add
repnz
stos
xchg
jno
dec
sbb
add
ja
sti
add
or
and
jne
rol
pop
push
sub
retf
pop
mov
pop
sub
xchg
jno
push
pop
or
stos
fucom
sub
cwde
in
dec
cmp
aaa
sub
into
ja
sub
ds
xchg
mov
xor
iret
cwde
rcr
cwde
loopne
dec
call
shr
outs
jp
jne
xor
jp
xchg
jns
stos
dec
hlt
jae
stos
mov
adc
and
and
sar
sub
jl
mov
dec
add
and
pop
jnp
ret
ss
ja
imul
jecxz
xchg
cmp
aaa
cmps
cmc
pop
jne
ins
cmp
pop
les
cld
jne
gs
mov
das
mov
scas
sub
(bad)
in
xchg
xlat
or
adc
sub
xchg
leave
jnp
enter
xchg
popf
in
mov
pop
push
mov
mov
(bad)
xor
mov
test
sub
icebp
lods
jmp
pushf
jns
je
pop
aad
pop
lea
outs
mov
fmulp
or
fsub
loopne
leave
(bad)
div
mov
andnps
arpl
nop
aam
inc
jns
jae
retf
push
fdiv
cmp
or
xchg
arpl
xor
pop
mov
inc
mov
jb
sub
mov
and
fdivr
ins
mov
sub
ret
and
in
ror
lds
and
or
cmps
sti
div
ror
fsubp
ds
or
clc
adc
ins
les
int
fdivrp
xchg
cmp
out
or
add
xor
push
push
test
bound
retf
dec
rol
clc
stc
out
test
fisttp
ja
es
jecxz
sar
pop
jg
xlat
dec
add
cmps
pop
pop
ins
les
xchg
pushf
inc
mov
fidivr
iret
add
imul
es
pop
lea
xchg
nop
add
aaa
adc
inc
ja
(bad)
jge
xchg
pop
jle
xor
in
pop
jnp
inc
add
add
jo
or
jg
push
jg
shl
or
jg
les
aaa
jns
neg
ror
in
ror
xchg
sar
ror
xchg
inc
add
aaa
jge
xchg
adc
sbb
sbb
adc
push
or
push
inc
loopne
push
jmp
lock
idiv
adc
mov
mov
sub
inc
retf
(bad)
jg
jecxz
add
pop
xor
mov
or
ds
(bad)
pop
test
test
arpl
ja
les
in
sti
cmps
xor
jb
add
aam
inc
push
clc
or
xor
cmps
add
les
inc
and
jg
pop
adc
js
and
test
xor
call
add
repz
das
enter
dec
(bad)
ins
xchg
push
dec
push
xchg
imul
push
push
mov
ins
adc
xchg
mov
aaa
jne
sbb
movs
mov
or
mov
xchg
data16
push
and
add
or
cmps
add
cmp
les
xchg
xchg
jns
push
pop
add
imul
or
push
push
dec
mov
or
sbb
sub
lea
mov
inc
iret
mov
call
cmps
add
pop
dec
nop
xchg
dec
in
je
pop
mov
mov
(bad)
adc
test
ss
xrelease
out
or
adc
jae
and
jmp
adc
push
nop
adc
pop
int3
xlat
or
aaa
jns
enter
dec
xchg
inc
jge
daa
adc
data16
xor
sbb
shl
jns
les
xchg
add
aam
or
inc
add
sub
cmp
and
xchg
ret
add
mov
mov
xchg
mov
xchg
ds
test
pop
ja
cdq
mov
ja
test
jg
dec
nop
push
jne
daa
gs
fs
ror
jo
gs
sub
lea
inc
aad
dec
or
mov
push
pop
gs
lds
das
cld
and
je
adc
pop
sbb
xchg
(bad)
xchg
sbb
(bad)
push
fs
out
test
push
dec
jne
xor
push
xchg
dec
faddp
dec
iret
adc
lock
jns
cmps
xchg
xchg
imul
mov
push
sub
push
dec
mov
dec
test
add
xchg
shl
add
push
call
inc
test
pop
popf
adc
push
iret
rcr
je
scas
and
daa
ins
push
cdq
cdq
sbb
sub
(bad)
push
push
push
mov
add
mov
or
sti
xor
sahf
in
xor
pop
test
push
sar
mov
outs
icebp
add
adc
and
(bad)
mov
std
imul
lock
inc
push
lods
in
adc
repnz
cs
add
shl
mov
push
mov
out
(bad)
inc
push
lods
add
and
pop
pop
push
jnp
mov
out
jo
(bad)
loopne
xor
cmps
push
push
xchg
sar
adc
repz
stos
dec
iret
cdq
dec
mov
gs
mov
cmp
jp
cmp
movs
inc
pop
movs
scas
jns
cmp
cdq
jbe
sub
and
dec
push
push
jbe
les
dec
out
cmps
call
and
movs
add
adc
test
test
push
aas
dec
xchg
mov
add
xchg
jp
inc
call
cmps
jle
jl
fiadd
lock
cmp
je
shl
shl
and
cld
add
mov
or
jecxz
aas
push
sub
test
mov
add
adc
dec
cmps
jbe
stos
jecxz
stos
inc
mov
sbb
inc
dec
mov
test
pop
out
and
rol
push
and
push
adc
mov
lock
fisub
aam
mul
and
and
or
pop
mov
cmps
jo
adc
and
stos
loopne
xchg
scas
inc
in
or
xchg
test
mov
test
cmp
popf
and
bound
daa
add
stos
push
add
cs
push
daa
push
or
push
retf
push
lahf
movs
adc
mov
pop
cmps
ficomp
jnp
cdq
in
mov
pop
cmp
cmp
and
nop
push
xor
pop
adc
push
mov
jb
shl
retf
jnp
dec
or
cmps
ins
sbb
sbb
push
stos
adc
mov
fwait
outs
dec
call
xchg
push
cmp
cli
pop
ja
mov
loopne
ret
mov
lds
sub
pop
rcl
add
cmps
ja
mov
test
pop
mov
es
and
mov
cmp
jge
mov
or
mov
or
xlat
scas
repz
mov
or
pop
mov
fwait
mov
jnp
sahf
sub
nop
or
cmp
fwait
sub
inc
mov
fwait
or
cwde
mov
call
outs
stos
popa
scas
xchg
xor
mov
push
icebp
adc
lahf
mov
mov
pop
mov
adc
hlt
hlt
xor
pop
movs
xchg
push
ss
shr
adc
add
rol
ror
rol
aaa
or
ror
rcl
shr
rcl
cmps
popa
cmp
xor
idiv
push
es
inc
push
or
adc
daa
sub
out
sti
lods
icebp
stos
mov
ja
ss
push
test
pop
movs
aam
or
xor
cli
push
or
or
or
dec
xor
ror
dec
dec
xor
shl
xchg
push
push
xor
out
daa
or
ret
sbb
stc
or
retf
mov
ret
add
inc
cmp
les
pushf
adc
test
pop
mov
inc
fsubr
jle
shl
or
int3
les
rcl
enter
push
jl
push
dec
xor
push
xor
xor
pop
mov
pop
dec
push
pop
or
scas
fwait
ret
scas
data16
push
fiadd
add
mov
repz
or
pop
lds
xchg
fwait
retf
mov
mov
xor
les
jl
(bad)
mov
mov
shr
out
xor
pushf
mov
dec
mov
popf
int3
daa
es
xor
xor
movs
repnz
mov
dec
pushf
pmuludq
cmp
scas
cld
or
push
or
or
jb
ret
pop
mov
aam
jmp
scas
pushf
test
mov
sub
int
mov
pop
or
fmulp
add
sub
fimul
sub
dec
(bad)
and
ins
xor
mov
or
nop
dec
repz
mov
and
(bad)
jns
cli
fsub
push
movs
adc
loop
test
mov
lods
loope
push
lods
push
adc
gs
mov
into
pop
ss
and
enter
cld
pop
data16
or
mov
adc
pop
shl
add
lea
push
mov
push
jge
call
in
add
adc
adc
dec
pop
popa
test
jecxz
rol
jnp
jo
sbb
push
jne
pop
je
and
jge
test
xor
and
mov
and
xlat
jns
into
jecxz
xlat
jle
xlat
jge
mov
not
aad
dec
adc
xor
add
dec
or
mov
push
xchg
iret
sub
sbb
lea
jle
inc
fsub
sahf
cmp
xor
xlat
jbe
pop
dec
push
fisub
ret
shr
fisub
cmp
mov
adc
push
inc
pop
loop
mov
test
ins
sbb
sbb
fcomp
dec
shl
and
loope
ficomp
sar
adc
inc
sub
lods
dec
addr16
inc
xchg
and
out
jmp
push
pop
cmp
xchg
and
fsincos
sbb
scas
and
ja
(bad)
jp
(bad)
cwde
jno
inc
push
jge
xor
aam
aad
in
ror
je
adc
loopne
or
popf
mov
push
shr
mov
mov
das
loop
dec
cs
cmp
(bad)
fdivr
fld
stos
xlat
push
nop
loop
sbb
pop
pop
mov
inc
mov
add
xlat
loopne
les
repz
add
retf
hlt
dec
mul
data16
inc
inc
lods
pop
pop
in
jp
jno
push
and
mov
call
cmp
sbb
ds
sbb
sub
dec
xabort
xchg
mov
in
not
or
or
jbe
data16
pop
movs
push
jmp
dec
stos
cmps
psubq
rdmsr
cdq
aad
sub
sub
int
fbld
call
add
ja
and
std
fild
xchg
lahf
xchg
ja
in
dec
dec
andps
or
hlt
in
pcmpgtb
dec
aaa
ds
push
jbe
adc
xor
adc
mov
mov
fsubrp
dec
repnz
cmp
scas
push
push
push
(bad)
pop
mov
cmp
shr
mov
pop
adc
pusha
or
push
inc
retf
(bad)
jne
aaa
bound
push
bswap
(bad)
jne
cmp
push
adc
push
and
mov
cmps
inc
fsubrp
jb
test
pop
pop
mov
mov
popf
lahf
add
dec
fs
jmp
dec
xchg
ror
cmp
test
jnp
pop
psllq
jne
imul
sub
pushf
cmc
or
adc
call
mov
jmp
mov
adc
repz
(bad)
shr
dec
push
out
mov
icebp
xchg
push
pop
iret
push
and
les
push
ret
pop
xlat
out
sub
jmp
scas
mov
sti
rol
arpl
int
mov
icebp
repz
(bad)
jbe
imul
inc
adc
out
sbb
xor
fsubr
cmp
stc
pop
jecxz
push
mov
cmp
jb
add
icebp
cmp
mov
inc
rcl
not
dec
sub
xor
mov
je
mov
(bad)
repz
mov
mov
out
ds
pop
pushf
sti
imul
cmp
inc
int3
stos
sar
int
mov
out
jne
out
jne
outs
stc
iret
add
pop
mul
hlt
(bad)
icebp
pop
xor
push
jno
adc
push
lock
sub
shl
cli
nop
cmp
outs
jmp
das
pushf
das
xor
or
and
xor
icebp
scas
sbb
std
or
icebp
or
or
repz
or
cmp
jnp
mov
pushf
cmp
mov
xor
xor
jecxz
nop
and
push
les
popa
push
push
popa
fst
dec
xor
stos
push
add
sub
out
cmp
aam
push
adc
shl
loop
jmp
int3
cwde
mov
sbb
mov
sbb
loop
inc
inc
shl
rol
pushf
cmp
loop
push
pop
push
pushf
cmp
addr16
fnstsw
add
xchg
popa
inc
and
retf
in
fdiv
arpl
dec
xor
into
cmp
je
sar
sahf
mov
push
inc
test
bound
int3
mov
loope
or
xchg
inc
xchg
pushf
dec
test
sbb
xlat
and
jbe
pop
ds
pusha
sar
or
sbb
out
(bad)
ja
call
out
mov
mov
xchg
mov
shl
dec
pop
push
sub
into
sar
adc
and
ins
loop
daa
cmp
mov
ror
or
xor
mov
enter
xor
inc
mov
mov
and
sub
lock
call
lock
pop
jl
and
(bad)
inc
or
rol
ret
jp
dec
xchg
ret
add
ret
and
add
sar
mov
test
int3
mov
loop
call
or
mov
push
ret
or
pop
sub
dec
(bad)
call
cmp
rol
dec
and
or
inc
lock
adc
out
ret
xchg
ins
fsubrp
mov
scas
push
popf
xchg
mov
dec
pop
imul
cmc
loopne
jae
push
jmp
das
(bad)
cmp
mov
pop
xchg
xor
pop
pop
push
push
inc
xchg
inc
in
jbe
(bad)
pop
pop
jecxz
pop
(bad)
mov
mov
adc
inc
mov
rcr
cmp
rol
aad
jmp
out
shl
stos
imul
jge
stos
or
pop
shl
and
ror
push
dec
sar
and
mov
or
sub
push
jl
inc
xchg
pop
rcr
fs
xchg
add
pop
pop
push
loope
xor
dec
mov
loope
adc
dec
xor
add
adc
adc
dec
or
repnz
jae
pop
ja
cmp
sbb
out
ja
mov
xor
adc
mul
icebp
inc
repz
mov
and
mov
pop
mov
xchg
push
ss
mov
and
loope
xchg
dec
pusha
(bad)
xchg
dec
sbb
adc
and
arpl
inc
xchg
pushf
icebp
stos
jmp
pushf
in
push
mov
cs
dec
and
jg
dec
jp
jle
dec
mov
ins
push
adc
lds
loope
mov
and
cmp
jns
push
xchg
xor
inc
adc
cs
popf
sbb
pop
jg
arpl
inc
or
cmp
cs
push
and
ret
out
retf
dec
cs
(bad)
addr16
mov
in
out
xor
and
aad
cld
jae
jl
push
add
jge
test
adc
pop
xchg
(bad)
adc
(bad)
sahf
enter
cmc
(bad)
ja
mov
and
int3
ret
mov
or
add
fadd
xor
popf
and
retf
push
push
test
popa
aam
push
ret
test
adc
sbb
int
adc
rol
repz
(bad)
add
jb
push
or
xor
ins
dec
inc
jg
(bad)
and
mov
add
pusha
pop
mov
jne
add
xor
pop
or
mov
push
jno
pop
and
dec
add
jo
dec
adc
ret
nop
push
sub
jns
enter
test
or
addr16
inc
pop
repz
adc
or
xchg
or
and
sbb
dec
sar
add
aas
jae
adc
bound
cmp
mov
imul
pop
or
or
mov
sbb
mov
pop
shl
inc
add
or
adc
push
add
int3
loopne
adc
mov
adc
stos
dec
xor
loopne
xor
jo
rol
push
and
mov
test
test
adc
pusha
push
pop
leave
imul
inc
adc
add
clc
push
xchg
cmp
sbb
xchg
or
xchg
add
sub
test
add
and
or
push
dec
or
nop
add
mov
mov
loope
push
xchg
add
mov
sbb
ret
mov
pop
and
cmp
sbb
add
retf
xor
xor
mov
lahf
cs
jne
sbb
or
add
ret
sbb
pop
xor
rol
and
and
imul
push
add
or
push
cmp
xor
inc
and
sub
ficom
mov
inc
loopne
mov
cmc
xlat
in
push
call
add
adc
or
loop
daa
push
add
and
adc
iret
and
adc
out
mov
mov
test
fstp
jo
loopne
mov
add
xchg
or
mov
in
jno
mov
icebp
pushf
mov
push
push
(bad)
mov
test
inc
out
mov
xchg
xor
and
loop
call
jno
adc
in
push
cmp
test
mov
dec
ss
pop
movs
xor
mov
or
inc
pusha
out
mov
add
jae
les
add
and
popf
cs
fdiv
fstp
dec
and
pop
retf
or
adc
fldenv
mov
xor
pop
loopne
test
call
sub
and
jg
mov
mov
mov
in
pop
pop
fstp
dec
lods
mov
jecxz
out
fisttp
ins
and
dec
je
movs
aam
jb
xchg
icebp
mov
inc
fst
leave
dec
bound
ja
sub
fs
push
inc
and
or
call
pop
sbb
and
fild
pop
xchg
add
lock
sbb
jmp
and
sbb
stos
mov
test
test
sub
xchg
adc
arpl
cwde
test
lods
pop
in
mov
int3
stc
xor
add
repnz
mov
imul
pusha
add
xchg
cwde
js
jecxz
push
push
xchg
push
icebp
dec
dec
outs
lods
dec
idiv
mov
push
push
es
cs
xor
js
cmp
cmps
ja
movs
inc
dec
or
test
xor
cwde
mov
in
jb
adc
add
jno
stc
pop
jne
xor
inc
push
mov
sbb
adc
leave
cmp
add
adc
sbb
inc
in
dec
stc
and
or
add
pop
div
into
pop
sub
test
mov
xchg
adc
dec
mov
pop
cmps
fcmovbe
das
mov
mov
fstp
sub
cmp
jb
leave
dec
sbb
add
mul
dec
rol
inc
nop
push
stos
push
inc
mov
cmp
mov
mov
push
push
lock
mov
in
mov
or
jo
pop
push
jo
jle
jb
lea
mov
dec
jle
mov
(bad)
pop
jb
inc
in
mov
jns
mov
mov
xchg
adc
jno
imul
sbb
pusha
cmc
push
mov
add
into
nop
add
xchg
and
ret
inc
adc
mov
inc
ret
call
mov
pop
dec
ret
adc
xchg
mov
in
mov
pop
movs
shr
mov
dec
lods
push
cmp
sub
lods
fisub
ds
aas
mov
dec
mov
(bad)
aaa
jmp
test
cld
xchg
or
and
add
add
call
sbb
add
add
lock
adc
sub
or
mov
push
jne
test
cmp
or
cmp
fwait
dec
arpl
dec
sub
inc
ror
js
push
sub
inc
mov
inc
sbb
sbb
cmp
jl
jp
aas
iret
push
xor
sti
push
inc
cmps
cs
mov
or
add
xor
add
inc
push
pop
sbb
mov
add
shr
scas
or
adc
in
popf
hlt
and
adc
adc
mov
mov
add
loopne
adc
inc
call
or
arpl
ins
ret
inc
push
add
push
dec
lds
mov
ss
push
in
call
stos
sub
(bad)
push
mov
and
add
inc
inc
and
jo
cs
stos
daa
xor
sbb
mov
clc
or
test
loop
loopne
ret
add
sub
adc
jne
movs
hlt
shr
cwde
mov
lock
pop
xchg
mov
mov
push
sub
inc
xor
inc
push
mov
xchg
sti
sbb
pop
pop
dec
dec
mov
add
push
push
inc
and
dec
push
mov
(bad)
shr
cmp
pop
test
sub
(bad)
call
pusha
add
cmp
(bad)
xchg
stc
setg
or
sbb
in
cmp
add
or
pop
sbb
or
cmp
arpl
fwait
mov
or
push
cmp
je
arpl
xchg
sbb
sbb
nop
aas
cmp
adc
enter
push
pop
dec
imul
mov
aas
int3
mov
pop
lods
enter
cmp
enter
daa
rol
inc
lock
mov
or
dec
xchg
sar
add
adc
cwde
add
cdq
add
xor
hlt
xor
or
int3
jbe
pop
ins
rol
test
xchg
pop
lock
push
pop
scas
test
add
hlt
dec
fmul
jns
ss
cmp
retf
test
dec
mov
dec
push
dec
mov
add
test
adc
or
retf
push
sub
add
jno
and
fwait
add
cwde
add
pop
ds
movs
sahf
xchg
mov
push
cmp
iret
into
add
inc
push
inc
pop
retf
add
push
add
cmp
xchg
dec
add
movs
and
mov
mov
inc
dec
in
dec
dec
and
xchg
and
mov
mov
cmp
jmp
cmp
mov
dec
xchg
cmp
mov
pop
pop
inc
add
mov
call
inc
cwde
add
ins
test
test
add
cmp
and
add
test
call
add
push
scas
mov
cmps
imul
in
imul
mov
add
in
push
sub
or
push
adc
jmp
rol
add
call
dec
add
jno
jbe
xchg
fs
sbb
xor
jmp
dec
pop
mov
ins
xor
push
and
or
xor
xchg
enter
and
dec
aad
mov
lods
int
cld
xchg
xor
aaa
repnz
cmp
push
and
movs
test
add
mov
cmp
mov
ss
dec
add
imul
cmp
xchg
rol
pop
push
or
jbe
aam
push
dec
(bad)
push
or
add
fadd
push
ss
retf
inc
push
test
push
(bad)
int
je
lock
stos
pop
cld
pushf
rcr
jno
cmp
add
enter
add
add
js
sbb
cmp
push
mov
ins
push
imul
fcom
inc
add
imul
dec
push
jnp
push
jbe
dec
and
add
inc
xor
inc
pusha
or
sbb
add
mov
mov
add
mov
dec
add
pop
fsubr
mov
sbb
rcr
mov
retf
fld
test
or
addr16
loopne
dec
xchg
push
mov
and
aam
cmp
mov
xchg
pop
imul
pop
add
push
push
scas
pushf
inc
xlat
dec
in
fstp
or
fisub
add
inc
adc
cdq
rcl
jg
pop
push
movs
pop
mov
pop
ror
movs
jmp
pop
test
stos
aad
ret
adc
mov
test
push
adc
lods
jb
fbstp
imul
pop
jmp
adc
add
add
pop
mov
push
pop
pop
mov
cmp
add
nop
fcomp
add
add
mov
shl
add
cli
pop
push
js
dec
stos
fild
pop
std
fstp
xor
shr
nop
call
scas
push
mov
inc
push
addr16
mov
add
jne
inc
adc
inc
add
fist
sub
cmp
rcl
dec
sub
add
mov
push
test
test
popf
fld
add
repnz
das
clc
fxtract
xor
cli
inc
add
add
xchg
pop
test
mov
es
fist
sub
jmp
(bad)
fstp
adc
add
add
push
pop
dec
mov
cld
pop
mov
cmps
pop
push
mul
add
adc
adc
and
adc
add
scas
xchg
add
pusha
add
mov
lahf
inc
add
out
pop
into
push
inc
push
or
scas
pavgb
fmulp
sub
fs
xchg
push
pop
lods
gs
jmp
xchg
pop
pop
lods
add
loopne
pop
test
sbb
fldcw
pop
sub
jecxz
pop
and
adc
or
add
test
test
xchg
push
pusha
test
pop
mov
pop
mov
sub
add
mov
dec
push
add
cmp
add
add
and
and
or
push
or
push
aad
sub
out
addr16
bound
lods
pop
xchg
cmp
lock
adc
mov
pop
scas
in
mov
(bad)
adc
pop
(bad)
sub
and
jmp
stos
jmp
cmp
adc
add
and
imul
push
xchg
xchg
sub
sub
pop
sub
xor
pop
adc
mov
frstor
jmp
mov
or
es
dec
mov
lods
test
mov
push
push
add
inc
mov
test
arpl
cmp
push
bound
sbb
fisubr
push
dec
mov
or
and
xchg
push
push
lds
push
xchg
outs
xchg
push
xchg
out
xor
push
mov
dec
push
bound
and
nop
rol
test
in
stos
mov
jnp
add
(bad)
xlat
ror
add
(bad)
stos
mov
stos
scas
ins
fucomi
jmp
call
imul
add
out
in
fnsave
jmp
mov
mov
dec
fisttp
pop
mov
xor
imul
(bad)
xchg
mov
imul
add
mov
mov
nop
push
imul
push
lds
xchg
in
(bad)
out
push
pop
mov
scas
in
jb
out
outs
add
push
loopne
dec
leave
mov
sbb
dec
call
lods
inc
ins
push
outs
jo
jg
movs
(bad)
(bad)
cmps
in
fld
fdivp
in
or
lock
mov
push
add
cmp
test
dec
nop
test
in
jle
cmp
imul
clc
aad
int
jno
fstp
out
or
add
test
out
pop
ins
(bad)
jle
outs
mov
scas
jmp
out
out
mov
add
adc
ret
adc
or
pop
jae
xchg
jmp
pop
movs
sahf
jo
scas
jo
ja
fsub
rep
out
cmp
push
(bad)
mov
test
mov
push
mov
jmp
xor
adc
(bad)
inc
into
icebp
mov
icebp
cmp
out
xor
and
popa
imul
jg
pusha
mov
jo
call
pop
fs
sbb
mov
add
cmp
pop
mov
mov
cmc
pop
lahf
test
jbe
fcomip
inc
push
cmp
cmp
jmp
cmp
jae
(bad)
shr
inc
push
pcmpeqb
sbb
add
mov
dec
pop
je
add
adc
or
sbb
stos
test
sub
push
enter
push
pusha
dec
repnz
mov
inc
sub
fidiv
cmp
fild
lock
clc
fwait
mov
retf
js
fistp
mov
(bad)
scas
jmp
(bad)
mov
mov
test
repz
test
imul
pop
div
sbb
dec
call
or
div
pop
repnz
shl
test
add
push
clc
push
scas
cli
fwait
xchg
jmp
push
(bad)
xchg
inc
popf
mov
inc
daa
xchg
add
push
cwde
and
cmc
mov
clc
mov
pop
clc
js
mov
mov
jns
iret
lock
push
pop
jns
push
daa
mov
call
daa
add
das
add
push
dec
div
icebp
or
add
jnp
cli
jl
jne
pop
js
mov
std
(bad)
jp
aaa
push
aas
cmp
jg
fbstp
add
mov
pop
shl
std
mov
jne
mov
(bad)
(bad)
js
xchg
jnp
mov
mov
mov
rcl
mov
jbe
pop
hlt
(bad)
jns
loope
add
pop
add
fnsave
fcomp
sub
test
retf
inc
cmps
out
(bad)
ja
push
add
cmps
add
paddw
push
js
aaa
clc
lods
pop
in
sbb
add
sti
dec
sar
pop
or
adc
push
or
sub
sub
les
call
sbb
jb
sub
ds
add
sub
stos
movs
(bad)
mov
cmp
arpl
cmps
dec
sub
lahf
lock
push
movhps
add
pusha
add
adc
adc
jmp
and
lods
daa
mov
push
sub
dec
mov
pop
mov
bound
sbb
retfw
push
sub
push
sub
ja
cwde
xor
cli
vaddsubps
add
inc
mov
ror
and
adc
push
sbb
jae
mov
inc
sub
dec
sahf
inc
test
test
test
pop
pop
mov
aas
mov
rol
dec
fwait
xor
xor
lahf
and
xchg
xor
(bad)
call
fdivr
adc
je
mov
and
jl
icebp
repnz
out
pusha
sbb
pop
add
and
add
xchg
fld
and
cmp
sbb
dec
cmp
inc
stos
cdq
(bad)
sbb
shl
add
sbb
leave
and
and
(bad)
hlt
inc
adc
xor
pop
int3
and
jo
push
ror
popf
push
push
lods
jo
push
pop
mov
jb
pop
fist
nop
mov
sbb
adc
in
and
int
push
and
push
or
cld
jo
bound
nop
dec
push
cdq
add
add
clc
pusha
test
pop
call
jo
push
test
mov
xchg
adc
add
and
sub
cmps
pop
mov
push
jo
lea
int3
or
cmps
cmp
call
or
xchg
(bad)
mov
xor
pop
retf
es
dec
or
ins
xchg
jno
sbb
mov
xchg
daa
ret
cwde
std
cdq
pusha
add
outs
add
or
push
es
data16
cmp
sub
push
inc
and
movs
or
xor
movs
inc
push
call
fcomp
inc
dec
jp
add
pop
mov
cmps
adc
cmps
cmp
cmp
xlat
lea
jmp
test
ins
imul
call
scas
aad
inc
retf
sbb
xor
inc
mov
cmp
sub
cdq
cmp
adc
mov
popa
mov
lahf
outs
shl
xor
and
mov
xchg
pop
mov
inc
or
dec
mov
or
into
test
cmps
cmp
or
das
sub
(bad)
mov
stos
push
cs
ret
adc
cmc
les
sbb
add
(bad)
and
fs
fld
retf
out
mov
mov
fcmovnu
xor
dec
xor
push
into
xor
cmp
mov
in
call
xchg
shl
(bad)
xor
sbb
sub
jns
ret
xor
icebp
push
push
lods
xor
mov
jns
adc
jno
aad
sbb
xchg
sbb
and
lods
xor
xor
es
cs
sbb
jnp
das
shl
into
enter
or
cmp
mov
mov
(bad)
cwde
hlt
ror
mov
jle
and
dec
mov
or
sar
xor
push
add
xor
lea
les
sbb
and
lods
push
mov
lods
pop
push
scas
jo
enter
icebp
adc
jns
jno
adc
in
cmc
mov
hlt
mov
jae
and
ds
mov
stc
rol
jne
js
sub
xchg
aas
scas
lods
retf
rol
pop
and
or
fwait
pop
sub
or
adc
or
adc
cs
xor
adc
jecxz
adc
mov
mov
in
test
cwde
xor
bound
jae
or
xchg
scas
ret
test
fwait
adc
cwde
repnz
stos
inc
not
cmp
jmp
ins
mov
add
pop
fsub
adc
fld
leave
ret
inc
inc
cmp
sub
or
add
aam
jno
mov
inc
pop
mov
jecxz
out
push
inc
shl
mov
icebp
(bad)
cmp
ror
loope
adc
sar
xchg
pushf
pop
sti
call
sub
adc
cmp
loope
or
aas
dec
push
rcl
cwde
mov
xor
mov
xchg
jmp
sub
mov
inc
pusha
inc
add
sbb
sub
popa
dec
arpl
mov
out
or
add
dec
enter
inc
inc
sbb
cld
cmps
jo
mov
dec
push
mov
inc
lea
add
leave
and
nop
test
lods
pushf
xchg
xor
cmp
dec
pusha
jo
push
mov
inc
and
inc
retf
push
bound
cmp
mov
add
push
pop
adc
mov
push
mov
test
and
jl
and
pop
out
mov
jae
dec
ds
dec
and
inc
push
call
push
pop
push
xor
and
jbe
aas
mov
xor
push
repnz
xchg
xor
push
and
fnstcw
add
addr16
ror
adc
xor
sub
push
push
stos
pop
aad
movs
cmp
sub
sbb
leave
retf
cmp
mov
cmp
lods
pop
sub
xor
pop
dec
mov
push
xlat
scas
dec
add
push
repz
stc
fld
cmp
and
cmp
jmp
iret
and
add
fxch
pop
mov
imul
mov
hlt
je
xchg
cmp
adc
ins
test
or
fidiv
pop
int3
aam
or
ja
daa
enter
gs
mov
idiv
jle
inc
jb
dec
ret
out
idiv
sbb
pusha
jmp
div
mov
pop
sub
out
lods
mov
or
and
shr
or
push
aad
ret
inc
cmps
out
add
je
cmp
cwde
movs
lock
inc
jnp
pop
arpl
add
popf
int
dec
mov
out
icebp
fs
push
or
xchg
ficomp
sub
test
fcom
pop
or
lds
mov
cmp
gs
punpcklwd
push
jmp
sub
les
xchg
in
xchg
push
leave
dec
cmps
push
xchg
fwait
or
jmp
xor
push
fisttp
xor
retf
push
sub
stc
add
sbb
imul
adc
xchg
xor
jl
test
nop
pop
jnp
inc
adc
inc
pop
pop
lock
add
lock
pmulhuw
mov
dec
jp
enter
xchg
push
jnp
cmp
mov
mov
fisub
push
int
push
mov
or
bound
(bad)
mov
imul
and
mov
movs
mov
lds
loope
imul
mov
loop
inc
div
sahf
add
jg
add
adc
adc
in
jne
movs
loope
ins
dec
xchg
jle
les
test
test
cmps
retf
xchg
int3
jbe
jae
pop
pusha
fsubr
or
mov
hlt
adc
shr
cmp
cmp
cmp
ret
idiv
mov
xchg
das
add
scas
pop
in
inc
ins
retf
sub
es
and
push
xchg
imul
dec
push
mov
mov
adc
rcl
mov
add
enter
lea
dec
scas
cmc
scas
scas
rol
adc
adc
pop
lods
jmp
xor
(bad)
and
mov
popa
or
or
inc
mov
adc
pop
mov
jnp
mov
out
adc
jmp
arpl
js
fcmovnu
mov
cmp
(bad)
inc
stc
jnp
loopne
inc
jns
out
out
pop
(bad)
fbstp
cmc
shr
cli
cmp
mov
rcl
dec
cmp
fmul
mov
sbb
pop
fwait
mov
xlat
icebp
in
movs
sub
repz
rcr
pop
mov
sub
adc
mov
push
pop
stc
in
rcl
mov
call
dec
xor
inc
xor
pop
xor
pop
xor
(bad)
sub
(bad)
fistp
sbb
fdiv
and
mov
push
retf
push
gs
inc
pop
pusha
retf
pusha
retf
test
popf
sub
daa
mov
sbb
pop
pop
sbb
pop
or
pop
or
add
nop
(bad)
in
add
clc
adc
add
push
enter
shl
cdq
xor
(bad)
add
stos
sbb
fsub
adc
add
inc
ret
add
adc
leave
mov
pop
repnz
mov
popa
sbb
mov
adc
push
pop
and
call
jecxz
ror
lahf
dec
clc
les
add
pop
cmps
and
pop
ret
frstor
repnz
retf
test
pop
add
xor
inc
loop
stc
lahf
jns
and
pop
bound
rcr
mov
vmwrite
push
and
adc
retf
nop
xor
sub
push
jge
ret
pop
inc
movs
push
loopne
inc
sub
loopne
mov
div
cli
ror
pop
and
in
lahf
inc
cmps
pop
mov
mov
mov
mov
jp
dec
adc
adc
fs
inc
sub
add
and
mov
ja
(bad)
and
inc
adc
adc
xchg
sbb
stc
add
pop
imul
push
fild
movs
inc
push
fild
push
inc
xor
fs
mov
cmp
mov
mov
add
and
sbb
xchg
dec
(bad)
pop
dec
popf
and
push
mov
popf
ror
in
mov
cmp
pop
sub
mov
sub
arpl
hlt
add
xchg
mov
inc
pusha
xor
inc
cmp
dec
jmp
pop
in
movs
inc
loope
pop
jge
pop
cmps
or
adc
fdiv
movs
movs
push
lods
gs
pop
add
sub
add
push
xor
call
sub
sub
in
mov
pop
pop
bound
(bad)
pop
and
in
mov
push
in
cmp
clc
or
fwait
xor
sbb
push
jp
test
sbb
and
add
push
or
sub
xor
xor
inc
cs
sbb
adc
or
add
out
loop
mov
call
gs
cmps
or
clc
shl
add
adc
cmps
pop
retf
add
inc
ret
into
cwde
in
jl
(bad)
ret
pavgb
ja
out
adc
mov
popf
daa
jp
in
lods
adc
mov
sub
int
inc
sub
pushf
cmps
shl
jle
cmps
and
addr16
out
repnz
mov
mov
or
push
xor
cmp
sbb
test
inc
cwde
xchg
lds
cmps
xchg
pusha
jle
bswap
into
dec
mov
jne
lds
hlt
inc
mov
in
stc
add
dec
push
and
and
jnp
and
pop
xor
fcom
sub
sbb
addr16
sbb
enter
cmps
cmp
mov
add
pop
xchg
push
push
and
adc
ror
rol
push
or
cmps
lods
bound
cwde
adc
push
loop
ret
rol
into
fcom
inc
ret
xor
add
add
shl
pop
es
sub
test
inc
(bad)
mov
rcr
add
inc
push
or
xchg
add
jp
and
and
cmps
jg
(bad)
jmp
add
add
inc
xor
test
add
and
sbb
push
je
jno
ret
push
push
lods
push
dec
pop
test
xor
les
jnp
xlat
mov
xor
mov
pushw
sub
mov
fld
test
and
sub
fs
daa
or
daa
push
test
jno
mov
cmp
xor
rol
call
cli
shr
inc
mov
stos
xchg
rcr
xchg
xchg
sub
sub
call
dec
lds
sbb
ins
push
lods
add
add
ret
or
or
jbe
mov
xchg
add
and
shr
and
gs
mov
inc
add
pop
adc
and
ret
call
sub
adc
jle
stos
xor
mov
push
outs
sub
rol
jb
ror
lods
call
sahf
inc
adc
stos
xchg
push
cmps
jno
inc
pop
xchg
sub
ds
mov
fnstenv
or
shr
lods
fst
push
icebp
sub
mov
lahf
push
or
inc
sbb
movs
inc
add
test
inc
sub
inc
cmp
cmc
jo
and
and
outs
xchg
ret
add
mov
sbb
repnz
add
or
push
and
in
retf
int3
adc
lods
and
das
adc
and
lock
sub
jge
stos
push
fsubr
cmp
lods
out
push
ror
rol
sbb
shl
add
cmc
dec
add
outs
pop
push
outs
sbb
movs
sbb
rol
inc
push
sbb
add
add
test
sbb
inc
inc
lods
add
adc
xor
cmps
mov
mov
ja
pop
sub
lock
push
add
out
lods
add
add
mov
ror
pushf
vaddps
jmp
imul
add
add
add
popa
shl
inc
xchg
push
or
mov
xor
rcl
push
sbb
arpl
inc
add
xor
adc
add
add
les
adc
add
rcl
xor
pop
pop
or
clc
sub
cs
sub
add
push
push
sub
mov
shr
fwait
in
sbb
push
jl
fcomp
call
or
and
arpl
jb
into
xchg
and
or
or
scas
test
push
mov
and
cli
ret
jne
popa
dec
cs
inc
es
xor
inc
adc
add
mov
icebp
cs
sub
mov
adc
or
pop
ret
pop
or
repz
inc
cmps
cdq
rol
and
pop
add
shl
mov
stos
enter
inc
scas
cwde
mov
aad
adc
add
pop
ret
mov
int3
or
inc
pop
ins
movs
pop
cli
add
xchg
cmp
dec
mov
ret
mov
fimul
inc
or
jle
shr
repnz
mov
mov
adc
jmp
and
inc
pop
inc
mov
dec
je
push
test
push
sbb
fiadd
lods
rcr
out
arpl
gs
xchg
mov
outs
test
bound
fcmovne
mov
stos
lods
test
fdiv
lahf
inc
dec
das
push
dec
inc
or
adc
sbb
fs
xlat
xchg
mov
inc
cli
data16
stc
xchg
addr16
call
adc
add
add
test
sbb
pop
push
aas
and
aam
dec
lods
ret
xor
test
in
add
pop
(bad)
in
pushf
rcl
shl
jbe
push
dec
xor
mov
push
addr16
repz
sub
mov
or
hlt
sbb
les
daa
pop
test
push
jnp
mov
add
mov
stos
ss
xor
lahf
jb
add
in
sub
mov
pop
xchg
dec
shl
inc
xchg
pop
hlt
xchg
xchg
jmp
dec
inc
jo
cmc
mov
and
push
jae
cmc
aad
(bad)
pop
ja
pop
inc
mov
or
dec
xor
jnp
push
sub
aas
jno
movs
cld
xchg
adc
or
pop
jmp
addr16
int3
pop
jb
(bad)
or
pop
inc
test
inc
jl
jp
inc
sub
or
shl
adc
or
bound
outs
repz
rcr
add
aad
clc
adc
inc
push
lock
xlat
mov
jnp
pop
repz
jns
daa
rcl
jmp
cmp
pop
adc
pop
add
mov
dec
sbb
loop
les
pop
and
es
movs
inc
or
cld
sbb
icebp
pop
adc
gs
fldcw
mov
imul
cmp
sbb
pop
stos
add
mov
cmp
sub
lahf
jns
mov
sbb
xor
xchg
xor
(bad)
inc
dec
adc
stc
bound
add
dec
mov
jbe
ret
or
jbe
int3
ins
int
test
rcr
push
hlt
inc
cmp
pushf
ret
push
mov
push
cld
(bad)
and
mov
xor
iret
sbb
sbb
xchg
mov
mov
mov
loopne
lods
mov
add
mov
jno
std
mov
imul
nop
jo
push
or
retf
mov
call
aad
fwait
xor
sub
add
inc
mov
cmp
sbb
sbb
inc
data16
add
lods
mov
jae
in
mov
sbb
cld
add
pop
cli
sub
jmp
mov
or
clc
sti
sbb
xor
push
ins
ins
rcl
mov
or
into
sub
jae
les
jo
xchg
lds
(bad)
pop
clc
(bad)
sub
jbe
jmp
cmp
in
popa
shr
jl
add
call
or
sbb
rcl
and
sub
mov
scas
mov
sub
(bad)
cmp
test
jne
sti
mov
adc
dec
pushf
dec
push
sub
cmp
dec
jl
rcl
paddusb
inc
ret
mov
(bad)
stos
lods
(bad)
std
pop
push
push
dec
mov
jbe
push
xchg
rcr
or
or
ja
adc
or
and
jecxz
mov
lock
xchg
push
nop
retf
sbb
push
pop
mov
jg
and
xor
stos
mov
call
cs
and
mov
cmp
xor
loopne
test
gs
adc
xchg
lea
cmp
hlt
jmp
sub
dec
pop
leave
xchg
scas
ss
sub
data16
cwde
sub
mov
xchg
sub
mov
adc
mov
or
movs
dec
xlat
test
mov
adc
pop
mov
lods
push
test
xchg
leave
shr
xchg
call
jmp
xor
cmp
xchg
stos
pop
shl
adc
lahf
cmp
loop
xor
daa
or
cmp
ret
add
mov
ret
push
jmp
js
dec
inc
mov
shl
push
cmps
jo
xor
sub
ins
addr16
and
addr16
les
and
dec
pop
hlt
push
mov
clc
lods
pop
ret
xchg
aaa
(bad)
mov
mov
xchg
imul
adc
jg
adc
jmp
add
jns
add
xor
sub
add
or
test
ror
xor
ror
in
mov
push
pop
dec
xchg
sbb
and
(bad)
push
mov
(bad)
xchg
call
call
clc
cmp
mov
mov
jmp
and
test
ret
mov
sub
enter
test
in
inc
mov
add
adc
call
adc
add
xchg
fs
add
sbb
mov
aam
nop
push
or
xor
inc
jae
inc
xchg
pop
sub
inc
or
cmp
or
and
sub
and
sbb
hlt
xchg
mov
inc
pop
test
es
jle
push
mov
sbb
sbb
adc
sbb
adc
mov
leave
ret
push
test
dec
(bad)
mov
test
pusha
clc
push
push
adc
js
aas
(bad)
ficom
dec
cmp
add
push
xchg
cmps
adc
rol
add
and
addr16
push
xor
jge
dec
mov
dec
mov
jecxz
test
jl
add
les
adc
inc
ins
movs
push
push
inc
add
and
cmp
pop
jns
cmp
sti
icebp
(bad)
and
mov
dec
and
pusha
pusha
add
or
call
dec
fisub
test
outs
push
add
pop
cli
ret
int
xor
xor
sub
ret
sahf
lock
mov
mov
pop
fistp
sub
sub
mov
mov
mov
xor
cmp
in
push
adc
repnz
cmp
push
xlat
xchg
mov
mov
mov
fcomp
retf
sbb
nop
inc
cwde
adc
cmp
mov
movs
inc
dec
and
cmps
in
loope
cmp
ss
lods
mov
sub
xchg
cmps
sbb
das
pop
arpl
mov
inc
pop
ins
push
xor
dec
mov
in
ret
mov
jbe
xchg
outs
aad
add
push
xor
shl
ret
ins
add
jno
cmp
mov
cmps
(bad)
xchg
pop
mov
mov
in
fdivr
add
inc
xlat
xor
xchg
into
je
cmp
les
mov
mov
pop
idiv
or
sbb
mov
rcl
add
sub
daa
in
test
xchg
dec
sbb
fs
jge
mov
ret
dec
pusha
mov
mov
cmps
and
icebp
mov
or
push
pusha
jno
ror
jmp
(bad)
nop
add
cmp
movs
pop
jmp
lahf
pop
ss
push
and
dec
push
inc
mov
cmp
or
dec
pop
aas
add
push
push
shl
and
or
and
push
sub
add
dec
(bad)
jle
xchg
adc
daa
push
inc
dec
or
push
push
push
adc
sub
fsubr
sbb
repnz
test
inc
(bad)
enter
inc
pop
lahf
call
aaa
mov
fwait
test
or
(bad)
push
jl
inc
cmp
mov
mov
popa
mov
into
cmp
jns
dec
les
aas
pushf
ror
inc
mov
cmp
xchg
movs
mov
mov
add
cmp
add
pusha
add
add
add
jle
cmp
repnz
call
sbb
sub
fsub
xchg
sbb
mov
mov
push
adc
and
cmc
inc
arpl
ja
sahf
inc
mov
dec
cmp
inc
les
popa
or
loope
xchg
or
mov
enter
or
adc
push
cmp
dec
and
ror
pop
cmp
cmp
add
mov
(bad)
dec
enter
or
movs
xchg
lods
scas
fdiv
(bad)
xor
push
inc
test
sti
pusha
loopne
jb
ret
pop
(bad)
lods
sbb
push
jno
daa
or
or
call
add
pop
bound
outs
cwde
mov
or
sub
inc
add
push
and
adc
ret
test
mov
cmp
xor
pop
(bad)
jb
cmps
dec
lahf
lea
pushf
arpl
es
dec
push
adc
inc
sbb
enter
retf
ficomp
and
sub
jno
fadd
xchg
fiadd
clc
inc
je
dec
and
lahf
in
test
adc
adc
pusha
(bad)
pop
lds
jle
push
dec
mov
cwde
(bad)
aaa
jo
or
adc
jo
imul
retf
rol
scas
adc
or
or
add
sbb
cmp
nop
jmp
add
je
test
int3
xchg
xchg
sub
sub
mov
mov
cmp
jbe
mov
out
cwde
lods
cmc
test
ss
cs
inc
mov
sub
imul
push
pushf
mov
test
in
jbe
xchg
sub
xchg
inc
test
push
dec
add
mov
mov
add
push
in
inc
mov
cmpps
add
xlat
ds
add
fnstcw
scas
sub
xor
test
adc
inc
xchg
and
rcl
or
add
pop
inc
or
test
and
push
adc
test
xchg
adc
and
daa
xchg
enter
cmp
inc
aaa
pop
mov
mov
lock
add
and
adc
fsubr
call
aad
clc
sbb
add
jecxz
imul
cld
jmp
or
cmp
push
ja
in
and
xlat
jl
sub
(bad)
in
jmp
add
push
push
bound
fidivr
add
fstp
or
inc
cmps
cmp
add
add
bound
mul
out
pop
inc
int3
inc
fisttp
or
push
stos
push
popf
test
sbb
dec
push
mov
cmp
xor
dec
sti
bound
in
adc
dec
jo
shl
add
in
aam
dec
xor
stos
les
in
out
add
xor
xor
repz
add
fistp
pop
xchg
nop
scas
repz
leave
jg
les
jp
fsubp
sub
add
(bad)
ficomp
mov
sbb
mov
fdiv
neg
sbb
sbb
add
xor
lods
push
test
inc
sub
or
push
enter
icebp
mov
jnp
add
mov
adc
fs
ins
ss
out
lock
fcomp
xor
test
jg
aam
xchg
cmp
dec
fld
(bad)
clc
test
or
mov
(bad)
call
daa
and
imul
and
dec
xor
pop
cli
pop
add
mov
pop
cli
lock
stc
jns
xchg
pop
jge
addr16
xchg
mov
and
fs
push
icebp
add
bound
sub
or
mov
add
daa
mov
fcom
push
xor
ins
xchg
mov
mov
arpl
jb
jg
loopne
mov
fwait
push
push
sbb
icebp
xor
adc
adc
out
mov
sub
and
jecxz
dec
in
and
out
je
dec
pop
mov
fucom
mov
shr
shl
add
xor
bound
jp
push
shl
outs
add
jmp
jo
add
inc
loopne
add
call
sar
loopne
je
or
and
xchg
(bad)
mov
(bad)
cmp
or
add
loopne
scas
dec
sti
mov
sti
mov
or
cs
inc
inc
out
call
loope
popa
sar
sbb
add
jb
dec
(bad)
outs
retf
push
loopne
rol
shl
outs
jecxz
dec
add
push
push
inc
or
icebp
leave
movs
loopne
outs
sub
or
inc
adc
xor
mov
lods
ror
dec
or
ror
pushf
cmps
pop
bound
gs
lock
retfw
clc
xor
ins
retf
mov
jmp
mov
push
push
add
add
pop
or
shl
or
cmc
sub
out
inc
mov
rcl
inc
sbb
dec
sbb
push
sbb
inc
sbb
and
loope
xchg
in
shl
psraw
push
cmp
jo
cmp
ucomiss
daa
add
(bad)
jecxz
mov
rcl
out
mov
and
mov
xchg
or
or
or
sar
ds
test
add
and
out
shl
inc
inc
push
mov
sub
or
jmp
(bad)
mov
xchg
add
add
and
jle
int
xor
in
adc
shl
and
fwait
push
daa
pop
adc
loopne
xor
adc
sbb
sbb
icebp
or
icebp
jno
mov
mov
mov
xchg
daa
inc
loopne
xor
add
xchg
add
mov
push
add
enter
and
pop
cmp
add
fsubr
das
jmp
xchg
das
adc
and
adc
adc
retf
test
dec
jb
nop
jo
sub
mov
repnz
movs
add
sbb
mov
repz
sub
sbb
mov
mov
sbb
sbb
sub
xor
iret
ret
sbb
xchg
push
bswap
pusha
or
sub
pop
cmp
pop
inc
(bad)
repnz
sub
cmps
xor
in
and
pusha
loopne
push
mov
dec
adc
adc
mov
out
ror
dec
inc
push
in
or
mov
adc
clc
sbb
xchg
into
push
and
mov
mov
pop
repnz
add
jae
and
jbe
fisub
fiadd
push
jmp
inc
sbb
loope
xor
(bad)
xchg
sbb
push
lock
ss
(bad)
stos
icebp
sbb
sbb
push
cmp
sar
add
mov
sub
pop
out
cmp
sub
add
rep
adc
pushf
pop
jo
mov
cmp
xor
je
adc
jmp
sbb
and
jae
push
jae
push
inc
adc
loope
sahf
sar
outs
add
adc
or
add
add
pop
ror
or
xor
push
adc
sbb
and
sbb
jno
imul
out
and
daa
sbb
inc
aad
les
mov
adc
je
pop
push
and
sub
nop
push
in
add
ror
jb
add
adc
mov
in
mov
mov
loope
or
ins
inc
mov
mov
adc
je
pop
jb
popa
mov
mov
int3
and
adc
adc
pop
sbb
adc
or
xor
push
dec
movs
dec
add
jecxz
or
xor
loope
xor
sub
xor
cld
je
fdiv
sbb
adc
jg
pusha
jecxz
mov
dec
mov
aam
sub
outs
add
sbb
add
jo
in
bound
outs
sub
jb
add
out
lock
adc
(bad)
repz
mov
xchg
xchg
adc
pop
add
inc
ror
mov
push
mov
hlt
fld
add
add
(bad)
repz
out
or
or
outs
out
cld
pusha
adc
jno
add
je
dec
popa
push
sbb
xchg
or
xor
movs
sbb
dec
mov
sbb
dec
inc
adc
stos
loope
dec
inc
sub
add
rol
lea
or
adc
outs
cld
jmp
outs
ins
shl
(bad)
iret
pushf
add
inc
or
inc
retf
mov
lock
xor
and
push
mov
popf
mov
loope
jmp
xchg
push
add
fstp
xor
bound
xor
gs
xor
mov
pop
and
cmc
dec
test
lock
jmp
jne
add
mov
mov
retf
dec
call
sub
xor
sub
or
jbe
aam
pop
adc
pusha
add
adc
aas
loop
outs
dec
addr16
or
scas
pop
pop
inc
xchg
outs
sti
mov
xchg
push
adc
pop
xor
js
movs
xchg
mov
movs
push
jmp
fs
xchg
add
and
cmps
adc
gs
push
dec
and
mov
daa
dec
sbb
rcr
xlat
jae
push
or
xchg
sbb
into
push
movs
adc
mov
push
imul
add
mov
outs
sub
out
(bad)
neg
pusha
test
and
pusha
inc
ins
div
ret
shr
mov
mov
cdq
mov
stc
mov
push
jnp
jo
push
xlat
jl
ror
retf
mov
adc
add
inc
ins
leave
mov
jno
into
push
not
out
sbb
aaa
add
aad
or
inc
adc
cmps
sbb
sbb
js
cwde
(bad)
imul
xlat
push
je
cld
in
(bad)
(bad)
pop
xor
xchg
and
rcl
and
xchg
dec
enter
mov
clc
jp
cmp
or
and
fisttp
fs
and
bound
retw
loop
and
(bad)
rcr
shl
mov
jecxz
inc
stos
adc
aad
sbb
hlt
addr16
and
out
jo
jb
adc
push
adc
int
add
push
dec
test
sbb
loop
jmp
test
sbb
jmp
fnsave
test
jbe
sbb
adc
xchg
daa
mov
fld
or
mov
xchg
and
pop
test
mov
rcl
ins
and
push
sbb
or
pop
sbb
mov
je
sbb
cwde
jne
rcr
mov
mov
je
js
(bad)
dec
clc
add
ret
mov
mov
cmp
dec
pop
cmp
dec
test
repz
xor
xchg
xor
xchg
fld
add
inc
push
fidiv
xchg
jmp
xchg
mov
xchg
xchg
xor
popa
loope
js
dec
aaa
sbb
pop
lods
and
imul
int
sub
in
pop
xchg
movs
mov
movs
fisttp
mov
test
ins
popa
cmp
test
cmp
sub
fsub
xchg
sar
sub
xchg
inc
rcr
scas
mov
and
xchg
clc
add
call
stos
jge
movs
push
cmp
push
sbb
push
mov
mov
js
daa
cli
mov
cmp
xor
sub
jp
movs
loopne
test
adc
movs
pop
pop
jnp
out
mov
or
mov
in
lock
(bad)
jae
dec
shl
clc
sub
popf
sti
jbe
inc
mov
test
push
sbb
add
and
cmp
dec
or
loopne
ss
sbb
lock
shr
imul
add
or
pusha
bound
and
es
in
mov
and
(bad)
stos
jae
(bad)
jg
dec
mov
jns
or
mov
mov
pushf
jmp
and
sbb
sub
mov
dec
mov
icebp
mov
shl
mov
sbb
cmp
dec
pop
jl
paddusb
popa
rcr
mov
adc
add
nop
inc
or
cmps
pop
scas
inc
int
mov
fcomi
pop
and
cmp
or
fmul
movs
push
pushf
mov
sbb
sbb
sbb
inc
fsub
ds
sahf
shl
mov
sub
sahf
xor
dec
outs
out
in
adc
mov
push
push
fcmovne
fsubr
xor
fcom
sbb
shr
mov
retf
test
xor
ror
in
adc
inc
int
inc
xor
inc
sub
add
(bad)
loopne
cwde
inc
pop
jmp
pop
sbb
add
les
push
add
stos
(bad)
mov
sbb
pusha
or
or
shl
xchg
and
cdq
xchg
push
xchg
dec
cmp
add
pop
adc
push
hlt
pop
dec
add
leave
stc
fwait
mov
and
daa
xor
or
lods
lds
adc
adc
sbb
imul
sub
and
loope
lock
loopne
out
mov
mov
(bad)
mov
mov
iret
dec
xor
mov
or
shr
push
mov
and
xor
add
jnp
pop
jne
mov
inc
sub
push
xor
call
mov
popf
sbb
hlt
dec
icebp
pop
aam
sti
stos
cmp
aam
pop
loopne
sti
xchg
pop
fcom
pop
(bad)
mov
inc
and
or
pop
int3
repnz
cmps
je
popa
xchg
inc
jle
fisubr
jmp
fcomp
not
jmp
ficom
mov
shl
cmp
or
call
push
test
aad
dec
ins
sub
outs
popa
call
into
inc
pusha
jmp
push
jmp
or
mov
cmc
push
aas
je
cmp
ja
int3
int
adc
jle
push
mov
add
out
xchg
cmp
jno
enter
or
not
dec
mov
setge
arpl
fs
js
sbb
mov
xchg
and
xchg
xor
cmp
xor
loopne
mov
cs
pop
hlt
stos
push
hlt
dec
pop
aam
popf
and
mul
(bad)
outs
fprem1
sbb
div
loop
ret
sbb
jbe
mov
jecxz
xchg
cmp
pusha
call
aas
test
or
pop
je
add
movs
enter
cmp
or
pop
push
sbb
mov
add
adc
or
jle
pop
add
add
push
push
dec
fiadd
pop
mov
imul
fwait
test
add
dec
pusha
shl
adc
jae
dec
add
sbb
pop
mov
xlat
sbb
imul
fidivr
retf
mov
or
mov
(bad)
int
jne
out
jno
leave
xchg
sub
mov
mov
outs
fistp
ja
xchg
sub
stos
cdq
scas
push
lea
and
inc
xchg
sbb
in
cdq
cmp
and
pop
call
inc
cwde
sub
and
mov
shl
add
cmp
out
push
or
test
mov
sub
sbb
and
sbb
jo
and
loope
inc
sbb
add
dec
add
nop
dec
xchg
cdq
addr16
popa
out
gs
jne
fnstenv
mov
cmps
movs
push
or
jnp
fs
or
cwde
inc
(bad)
dec
sbb
push
xchg
dec
sub
fadd
add
adc
adc
(bad)
(bad)
add
rol
adc
(bad)
aaa
push
addr16
adc
dec
pop
xor
xchg
and
push
bound
test
xor
adc
inc
movs
adc
xor
add
lods
lock
pusha
cmp
es
mov
mov
int
jecxz
fstp
mov
push
fisub
jb
popa
movs
sahf
jle
mov
and
mov
push
and
inc
stos
pop
mov
inc
movs
xchg
inc
das
mov
adc
dec
cmp
xor
sub
add
scas
and
inc
pop
cs
jo
push
lods
mov
xor
(bad)
jmp
push
cwde
popa
mov
push
push
clc
jo
or
call
test
jns
or
leave
cmps
xor
test
popa
sub
xlat
pusha
mov
call
adc
sub
jmp
movs
fwait
ds
test
lock
rcl
mov
(bad)
jnp
pop
mov
sbb
repnz
scas
xadd
sub
(bad)
cmp
dec
cmove
ret
nop
pop
jne
mov
cwde
jo
das
push
rol
push
lea
inc
push
dec
mov
xchg
sub
call
push
clc
add
sub
xor
or
pop
cli
inc
fsubr
test
fldcw
xchg
jmp
fstp
mov
cmps
sahf
mov
and
movs
hlt
ret
pop
mov
int3
dec
outs
test
dec
out
cli
clc
dec
sub
imul
mov
leave
loop
fs
aad
shl
pop
nop
inc
or
loop
sbb
cmp
xor
fsubr
cwde
cdq
out
inc
fcomp
mov
pop
mov
ret
rol
mov
(bad)
xlat
pop
cmp
pusha
sti
push
jbe
mov
sti
retf
int3
xchg
mov
imul
neg
sub
pop
xor
xor
cmp
and
imul
retf
inc
cmp
aas
sbb
and
xlat
fcomp
ret
jno
inc
cmp
sbb
and
cmp
and
jl
mov
dec
adc
jo
sbb
mov
sub
inc
lock
xchg
jo
cld
mov
cli
popa
inc
sub
sbb
(bad)
xor
cmps
pop
in
and
cmp
cdq
sub
idiv
inc
data16
jnp
cdq
cwde
clc
sub
cdq
ins
sub
fistp
xchg
(bad)
push
lea
sub
ret
jae
cmps
mov
and
hlt
nop
mov
clts
and
inc
add
ficom
sub
jb
repnz
test
mov
add
enter
mov
cs
and
mov
test
into
lock
inc
sub
adc
test
and
mov
ret
nop
xor
stos
and
repnz
sbb
cmps
or
mov
mov
stos
int3
fidivr
icebp
mov
(bad)
add
fwait
add
outs
in
addr16
jns
and
mov
pushf
xor
dec
add
and
inc
cmp
inc
or
js
cmp
inc
or
je
push
inc
and
push
in
test
repnz
bound
jp
and
push
xor
ss
xchg
inc
sub
mov
data16
add
ss
lea
cmp
pusha
cmp
jno
lods
call
es
mov
jmp
add
jbe
sbb
dec
dec
dec
rcl
fs
or
add
fcom
push
test
sbb
sbb
(bad)
call
or
push
test
sub
inc
sub
dec
test
pop
or
daa
cmc
sbb
ret
bound
ficom
push
out
lds
(bad)
fisttp
xchg
dec
mov
ins
or
retf
mov
fs
cld
or
mov
loopne
push
sbb
lods
addr16
sub
mov
test
in
add
call
push
aam
sbb
adc
add
jmp
adc
mov
out
push
jnp
fs
mov
mov
loop
int3
cmps
mov
xor
pop
mov
sbb
int
and
lods
sub
or
mov
stos
cdq
push
sahf
jecxz
lea
mov
call
adc
sub
sub
rol
mov
inc
(bad)
cmp
ret
movs
sub
adc
pop
int3
outs
dec
mov
xor
popa
add
or
add
das
xor
ficomp
sahf
mov
lods
dec
sub
mov
sahf
ins
cmp
xchg
or
retf
jge
dec
jp
push
pop
mov
cs
cmp
mov
(bad)
test
out
aaa
call
and
xor
push
imul
mov
mov
mov
mov
in
push
pop
aaa
inc
test
fcmovnb
ficom
cmps
and
inc
aaa
mov
retf
call
jge
dec
mov
pop
loopne
mov
xor
inc
cdq
movs
pushf
or
les
push
and
add
add
sbb
loop
nop
sbb
repz
pusha
mov
jmp
ins
hlt
or
and
leave
xchg
push
push
int3
in
xor
sbb
out
stos
lea
mov
sar
xchg
aam
mov
push
pop
loop
mov
icebp
call
add
adc
pusha
push
out
pop
mov
cmp
jge
inc
sub
xchg
jmp
inc
inc
daa
enter
outs
mov
dec
cli
jns
push
and
iret
ins
outs
outs
add
pop
sbb
mov
jge
fisttp
jne
fucomp
stos
mov
call
repnz
cmp
mov
mov
arpl
repnz
pop
mov
add
xchg
dec
ins
aaa
fdiv
ins
pop
push
xchg
xchg
movs
gs
jnp
imul
ss
xor
popf
xor
fadd
sbb
xchg
adc
adc
mov
mov
stc
popf
(bad)
sahf
add
add
cwde
mov
fiadd
lds
xchg
pop
into
jo
and
fxch
dec
(bad)
movs
pushf
lea
pop
jle
(bad)
(bad)
push
gs
(bad)
mov
cdq
sub
inc
or
aam
ret
std
sub
mov
or
int
popf
pop
clc
or
test
pop
and
jmp
sbb
mov
call
(bad)
mov
jne
fadd
mov
adc
enter
inc
xchg
and
loope
iret
push
mov
xchg
cmp
fistp
das
sti
push
jl
and
mov
add
inc
jae
(bad)
fwait
cld
pop
inc
adc
pop
push
(bad)
cmp
inc
cdq
inc
add
fs
into
out
sbb
sar
dec
cli
scas
pop
call
xchg
fwait
xchg
pop
out
in
lock
fdiv
sub
adc
popa
or
das
outs
jbe
sub
ret
sbb
push
rol
mov
out
push
and
bound
adc
push
retf
mov
xchg
pop
push
pop
push
jo
inc
xchg
add
jg
jge
adc
adc
lock
push
addr16
and
push
jp
mov
sub
jnp
xor
pop
(bad)
push
ja
add
adc
add
dec
jbe
inc
fs
or
mov
int
sub
jae
mov
cmp
xor
add
add
nop
push
adc
and
retf
test
inc
push
pop
cdq
nop
or
add
or
call
repnz
js
in
aaa
sub
imul
mov
pop
jmp
push
adc
inc
mov
jge
mov
sub
cmp
imul
sbb
add
adc
push
sbb
mov
test
xchg
jl
rcr
(bad)
lock
call
mov
sbb
js
loop
jno
mov
cs
jb
or
mov
dec
icebp
xor
or
cmp
shl
xor
test
pop
sub
retf
mov
popa
add
nop
mov
xchg
xor
in
push
pop
adc
add
or
add
or
shl
push
jp
sub
jp
mov
dec
out
shr
xchg
xchg
fs
loop
out
jne
sub
shl
retf
push
sbb
shr
sbb
sbb
pop
mov
(bad)
aaa
add
jge
add
xor
fs
adc
jbe
bound
mov
imul
dec
stc
mov
das
out
movs
inc
push
enter
push
pop
sub
cwde
js
data16
out
rol
cmps
adc
shl
cdq
pusha
xchg
popa
add
rol
(bad)
bound
sbb
xor
add
call
push
test
dec
mov
or
xchg
inc
test
movs
(bad)
mov
ins
xor
mov
mov
cmp
and
movs
sub
inc
dec
sub
xchg
enter
clc
and
or
add
or
or
jns
sbb
xchg
aas
xor
test
inc
pop
adc
xchg
add
jno
cdq
nop
leave
fdiv
mov
add
sbb
xchg
shl
mov
push
cdq
mov
cdq
sbb
or
ss
aam
and
push
mov
cmp
cmp
pusha
add
and
sub
lods
push
push
adc
add
mov
je
inc
out
inc
xchg
add
ret
mov
mov
lods
mov
xchg
xchg
xor
inc
mov
cdq
mov
pop
add
cdq
dec
adc
fild
push
loop
xor
xchg
js
pop
xor
sub
add
es
lahf
test
rcr
push
and
cmp
or
test
pop
jo
mov
mov
push
push
fst
cmp
jp
inc
fs
hlt
adc
mov
xchg
sub
sbb
je
es
dec
cmps
sahf
jge
cmp
aas
jg
push
cmp
lahf
push
add
ret
and
sar
lods
sub
add
push
dec
call
xchg
rcl
test
sbb
push
cmps
jp
retf
movs
jbe
mov
ss
das
mov
dec
add
ret
mul
inc
xor
sbb
add
cmp
test
mov
xchg
popa
add
arpl
jbe
pop
or
test
jns
mov
stos
mov
mov
test
adc
cmp
shl
pop
stos
sbb
arpl
push
and
popa
mov
and
(bad)
and
add
arpl
adc
adc
and
jnp
and
xchg
jno
cmp
mov
push
xchg
dec
adc
mov
shl
lods
xchg
jmp
fs
dec
add
sub
scas
or
pop
inc
jl
push
ret
sbb
push
and
push
push
and
add
mov
xlat
shl
push
aas
lock
movs
lock
push
sti
pop
mov
ds
dec
movs
or
mov
(bad)
mov
loope
mov
mov
push
scas
fs
mov
fisttp
repz
xor
mov
sahf
lahf
pop
gs
adc
xor
xor
jl
inc
pop
es
sbb
xchg
cmp
and
mov
fs
inc
nop
movs
mov
push
shl
push
xor
shl
lock
popa
imul
ins
outs
inc
mov
aaa
scas
push
cmp
test
fcmovu
mov
cmc
mov
mov
and
fwait
or
adc
xor
push
adc
outs
in
cmp
rcl
aas
add
xor
rol
inc
or
xor
fsubr
dec
pusha
or
or
jo
mov
sbb
shl
mov
retf
inc
fdivr
mov
dec
dec
repz
jmp
xor
data16
sub
add
push
inc
add
jns
dec
cmp
pop
out
gs
push
mov
pop
or
add
jnp
push
pop
mov
mov
pushf
imul
xchg
arpl
mov
adc
in
mov
shl
mov
pop
mov
inc
data16
imul
sub
pop
scas
dec
hlt
push
iret
cmc
pusha
cmp
push
sbb
xchg
xchg
adc
add
pop
jne
add
movs
push
and
(bad)
into
and
adc
mov
jo
test
rol
jne
jle
push
or
xor
or
adc
or
jbe
and
xchg
arpl
push
xchg
jns
mov
ret
mov
enter
stc
dec
das
push
ja
mov
mov
cmp
sbb
push
mov
leave
dec
xchg
loopne
inc
loopne
sbb
push
push
dec
je
add
outs
addr16
and
dec
mov
cmp
and
(bad)
jns
ins
popf
mov
lock
inc
sub
dec
cmps
call
sbb
enter
push
cli
fwait
movs
inc
ins
cmp
cmp
pop
test
mov
leave
gs
cmp
or
mov
retf
test
add
jo
out
into
mov
je
pushf
cs
retf
into
jne
mov
add
retf
jle
test
dec
int3
sub
xor
push
imul
cmp
not
ret
aam
ror
sti
hlt
pop
xchg
in
jp
ja
fisub
retf
push
into
clc
lods
jae
pusha
shl
inc
cs
shl
push
and
into
das
jge
call
inc
sub
call
pop
add
shl
push
hlt
(bad)
into
and
add
and
xchg
sbb
mov
inc
or
xchg
mov
lds
jecxz
xor
pushf
rcl
mov
pop
cmp
repnz
push
lock
fwait
jb
pop
push
dec
xor
cmp
adc
popf
popa
es
xor
ins
rol
retf
xor
xlat
sub
xor
xchg
retf
fadd
aas
daa
dec
fadd
fmul
shl
into
mov
in
adc
dec
in
aam
jl
aad
ret
mov
std
pop
mov
arpl
ficomp
lods
pop
pop
ds
pop
retf
jne
dec
add
jg
xlat
jno
dec
stos
push
inc
fldenv
ror
fst
mov
fadd
mov
inc
call
(bad)
(bad)
ror
fldcw
pop
and
bound
pop
loopne
fdivrp
fstp
jge
jmp
jne
cmp
mov
xlat
movs
fist
and
xor
cmp
arpl
cdq
mov
(bad)
cmps
inc
sbb
push
push
cmp
dec
xlat
daa
lods
loopne
push
loope
popf
xlat
js
fisttp
add
or
(bad)
sub
fucomp
sub
lds
add
jge
sbb
and
or
xor
mov
test
mov
fisttp
sub
ins
cdq
ja
dec
add
add
or
daa
jnp
or
pop
repnz
ins
pop
div
daa
or
retf
cmp
iret
xor
in
cmp
bound
xlat
adc
fst
loope
push
push
cmps
or
dec
cmp
add
mov
test
pop
mov
arpl
in
outs
push
lahf
push
push
add
add
or
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
sldt
and
add
add
add
inc
push
dec
inc
add
add
or
add
inc
ins
outs
bound
add
add
add
add
add
push
lahf
mov
add
cli
and
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
out
add
add
add
push
add
add
add
lds
fadd
or
sbb
add
add
add
add
add
add
add
add
add
add
add
cdq
push
mov
or
retf
push
adc
and
adc
push
add
pop
mov
or
(bad)
mov
add
or
or
or
or
or
or
or
or
cmps
or
add
or
or
or
add
or
or
add
add
pop
or
add
add
or
add
add
or
push
add
or
or
add
add
add
or
add
add
or
add
add
or
pop
or
test
scas
or
leave
or
iret
or
clc
or
daa
push
add
push
add
add
push
fadd
push
add
sldt
or
paddusb
or
ds
clts
add
mov
paddusb
repz
add
add
sysenter
(bad)
add
sysenter
clts
add
adc
adc
add
add
sbb
push
add
add
add
add
aad
adc
adc
repnz
pop
or
or
add
adc
add
add
sbb
or
es
add
add
adc
add
add
sbb
adc
jb
adc
adc
ja
adc
adc
adc
mov
mov
adc
adc
adc
pop
push
add
mov
adc
adc
adc
add
jbe
adc
add
add
adc
add
add
adc
or
add
sub
or
test
fadd
push
add
add
adc
adc
add
adc
add
add
add
adc
ja
imul
(bad)
add
add
add
adc
cmc
adc
movhps
or
add
cmps
or
add
add
add
sbb
or
mov
fadd
or
rcl
mov
sldt
or
or
stc
push
or
sbb
mov
pop
stc
push
push
add
add
sbb
or
add
add
add
sub
or
popa
sbb
or
add
or
add
add
add
sbb
add
add
sbb
or
int
fadd
push
add
sbb
or
add
sbb
add
add
sbb
bound
popf
sbb
lods
sbb
mov
fadd
or
lock
sti
sbb
add
(bad)
and
add
push
xor
or
cmp
(bad)
pop
push
fadd
add
add
add
add
add
add
add
add
adc
adc
daa
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
or
add
add
add
add
add
add
add
daa
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
cmp
add
add
add
add
inc
add
add
add
adc
add
add
inc
add
add
add
push
add
or
inc
add
add
adc
int
add
or
dec
add
add
add
add
push
add
add
add
sbb
add
add
pop
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
out
add
inc
add
adc
add
and
add
cmp
mov
add
add
add
adc
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
inc
add
add
add
add
push
jo
mov
add
push
cmp
add
jle
add
push
or
call
add
add
add
mov
mov
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sub
aas
add
dec
add
push
add
mov
jp
push
push
jo
mov
or
push
sbb
or
add
cmp
add
add
fs
xchg
add
add
add
push
test
push
and
add
push
add
add
add
add
pop
loope
adc
xor
add
(bad)
sbb
adc
or
or
add
lods
or
add
icebp
adc
add
add
add
sbb
add
add
mov
add
add
add
add
add
add
sbb
sbb
add
add
sbb
pop
and
push
sbb
pop
and
(bad)
sbb
pop
and
fstp
push
pop
push
add
add
add
add
sbb
add
add
les
dec
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
lock
add
add
add
jp
add
add
xchg
mov
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
les
out
add
pop
add
add
add
add
add
or
je
add
add
add
or
jl
add
add
add
or
add
add
add
add
add
add
les
dec
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
and
add
add
add
xchg
add
add
pop
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
push
mov
and
xor
add
add
xchg
add
xor
and
push
aaa
add
add
xchg
add
add
and
add
add
add
and
add
lods
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
xchg
or
pop
mov
add
add
add
xchg
or
pop
lds
daa
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
add
add
xchg
add
retf
add
add
add
add
add
aas
add
add
xchg
add
add
add
add
add
add
add
inc
add
add
xchg
add
push
sub
nop
inc
add
add
xchg
add
or
sub
mov
add
add
add
add
add
add
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
sbb
or
add
inc
add
add
xchg
add
push
or
add
inc
add
add
xchg
add
and
add
add
or
add
add
add
xchg
add
sbb
or
add
add
add
or
in
inc
add
add
xchg
sbb
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
loope
xor
xchg
aas
add
add
add
add
cdq
push
aas
add
loope
ins
psraw
aas
add
add
add
or
add
add
add
pop
adc
aas
add
loope
sbb
add
add
add
loope
pop
sbb
add
add
xchg
mov
add
add
add
add
inc
add
aas
add
add
xchg
mov
add
aas
add
add
xchg
or
add
add
add
xchg
and
sbb
inc
add
add
add
mov
adc
add
sar
add
add
mov
sbb
pop
inc
add
add
add
mov
sbb
add
inc
add
add
xchg
mov
add
add
add
add
xchg
inc
add
add
xchg
jmp
inc
add
add
mov
adc
add
adc
add
add
mov
sbb
pop
inc
add
add
add
mov
sbb
add
stos
inc
add
add
xchg
mov
add
xchg
or
xor
inc
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
add
add
push
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
push
or
add
add
add
add
pusha
or
add
add
add
add
add
add
push
or
add
add
add
add
push
or
add
add
add
add
mov
add
add
mov
add
add
xchg
or
add
add
add
xchg
or
add
add
sbb
add
add
add
add
add
add
jo
add
add
aas
sbb
add
add
add
add
inc
sbb
add
add
add
adc
add
add
sbb
add
add
sbb
add
add
add
add
add
add
aas
sbb
add
add
sbb
add
add
add
add
aas
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
dec
add
add
add
add
add
or
add
repz
add
add
or
add
add
or
add
add
or
add
add
push
add
add
add
or
add
in
or
add
add
mov
add
or
sbb
push
add
sub
add
add
add
push
add
add
add
add
mov
xchg
or
lahf
or
sub
add
add
mov
add
add
or
push
push
jg
or
sbb
imul
add
push
xchg
test
add
add
push
add
pop
push
imul
add
push
add
jp
imul
add
add
add
add
push
add
add
add
push
mov
push
adc
dec
add
push
push
add
add
add
mov
adc
sbb
lds
leave
add
add
rol
xor
pmullw
fld
inc
push
fild
adc
ins
psraw
loope
nop
pslld
dec
add
add
add
add
add
add
rol
stc
add
sysret
add
add
add
rdmsr
add
add
push
add
or
add
add
add
adc
or
out
add
push
add
add
push
adc
add
add
push
add
add
add
add
add
add
adc
imul
dec
add
adc
add
add
adc
dec
add
adc
add
and
mov
add
adc
or
mov
add
add
adc
mov
pop
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
adc
add
add
adc
cdq
add
adc
add
add
mov
adc
dec
add
adc
add
ret
add
inc
adc
add
push
adc
add
add
push
add
add
push
add
add
add
add
add
mov
pop
add
rcl
loop
dec
add
adc
add
add
adc
add
add
add
lock
dec
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
cmp
add
add
inc
add
add
rol
icebp
add
add
add
add
xchg
adc
add
add
add
adc
add
add
adc
add
add
add
and
add
adc
ds
inc
adc
dec
adc
mov
add
add
add
mov
stc
add
adc
push
rol
mov
add
add
add
add
push
dec
add
adc
popa
add
add
xchg
add
popf
add
mov
adc
push
lds
rol
loopne
or
mov
jmp
add
push
push
cmp
mov
add
add
push
das
push
or
xlat
push
cmp
and
or
push
push
sub
sbb
lds
leave
add
push
dec
add
ins
psraw
or
jecxz
mov
xor
or
pop
cdq
add
cdq
push
test
add
sbb
lds
test
add
push
mov
add
add
mov
adc
push
add
add
push
inc
add
mov
push
push
rol
sbb
push
inc
add
add
push
inc
add
add
add
add
add
sbb
pop
dec
add
sbb
pop
jmp
add
add
add
add
pop
add
mov
push
mov
ins
add
mov
sbb
pop
ins
add
sbb
pop
je
(bad)
sbb
pop
je
fstp
push
pop
jl
mov
add
add
sbb
leave
add
mov
add
add
sbb
pop
add
adc
sbb
add
xchg
add
add
add
add
sbb
or
or
(bad)
sbb
or
mov
mov
add
add
sbb
add
add
add
sbb
or
or
add
sbb
aad
sub
leave
add
push
inc
or
mov
add
add
add
imul
add
adc
dec
push
pop
or
mov
add
add
push
add
sub
push
add
add
push
add
movs
add
add
add
retf
add
add
add
add
add
add
sbb
or
je
sbb
add
add
add
add
add
enter
or
int3
add
add
add
add
iret
add
add
inc
or
add
dec
or
add
aaa
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
fild
mov
xchg
add
stos
add
mov
xchg
add
mov
mov
fild
cs
add
mov
mov
fild
loop
inc
add
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
or
add
or
or
or
or
sbb
or
push
sbb
ror
push
sbb
loopne
jnp
sbb
and
jnp
sbb
inc
or
sbb
or
push
sbb
ror
push
jb
loopne
jnp
sbb
loope
jecxz
jb
add
jnp
sbb
add
jecxz
jb
and
jnp
sbb
and
jecxz
jb
inc
or
sbb
mov
add
or
sbb
loopne
jnp
sbb
add
adc
add
adc
aaa
add
add
and
xor
mov
nop
add
add
add
add
add
add
add
add
mov
push
adc
es
bound
mov
push
hlt
push
cld
push
add
test
mov
mov
pop
es
or
or
or
adc
aas
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
ins
pop
fadd
add
jno
fld
add
test
fadd
add
mov
fld
add
fstp
scas
push
add
pop
sbb
sbb
add
inc
sbb
pop
add
aas
sbb
add
icebp
sbb
pop
add
or
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
mov
fwait
add
add
add
adc
add
dec
push
pop
push
jns
jg
iret
push
jnp
xchg
pop
lahf
pop
test
or
or
or
or
or
add
sub
add
add
pop
push
add
add
add
add
push
add
add
adc
add
adc
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
fadd
add
add
add
add
mov
add
add
add
add
mov
add
add
jbe
add
cwde
or
add
add
add
or
add
add
add
pop
or
add
add
aad
add
add
add
pop
add
add
add
add
add
adc
or
adc
adc
add
add
and
jecxz
add
add
and
icebp
sbb
add
add
add
sbb
add
add
add
sbb
jo
jnp
test
out
add
repz
or
add
or
add
or
add
add
cmp
outs
fs
gs
je
jo
gs
add
jb
inc
outs
arpl
jo
gs
imul
outs
add
outs
imul
popa
jb
dec
outs
fs
jns
add
jb
inc
popa
ins
add
outs
outs
ja
add
imul
jae
push
je
jb
jne
dec
gs
outs
fs
jns
add
jb
inc
popa
arpl
jb
jne
add
arpl
outs
add
je
imul
je
jo
push
jb
jo
jb
imul
outs
jne
arpl
add
imul
push
jb
addr16
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
arpl
ins
imul
gs
add
push
arpl
outs
jne
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
inc
popa
je
inc
jb
fs
imul
popa
inc
jb
fs
imul
jns
je
fs
imul
popa
inc
jb
fs
imul
inc
outs
js
outs
ins
jne
outs
add
ins
jne
outs
inc
gs
gs
add
ins
jne
outs
push
popa
je
add
arpl
add
outs
je
jb
jae
inc
outs
jb
inc
outs
arpl
jo
gs
imul
add
jae
ins
bound
jb
fs
inc
outs
fs
imul
gs
bound
outs
jo
jb
addr16
jae
ins
bound
gs
imul
jb
jo
imul
inc
js
outs
jae
outs
outs
add
js
imul
outs
inc
outs
arpl
jo
dec
outs
inc
jns
gs
inc
outs
arpl
jo
imul
ja
jb
add
arpl
outs
jb
push
je
jb
dec
outs
fs
jb
jb
gs
popa
add
jb
jb
imul
jb
jne
dec
gs
outs
add
jo
js
push
gs
popa
je
jbe
push
popa
je
add
jo
js
push
popa
je
add
outs
popa
ins
inc
js
push
gs
popa
je
jbe
push
popa
je
add
outs
popa
ins
inc
js
push
popa
je
add
jb
inc
outs
ins
fs
gs
popa
je
jbe
push
popa
je
add
jb
inc
outs
ins
fs
popa
je
add
ins
jns
jne
inc
data16
jb
jns
push
gs
popa
jb
add
gs
imul
imul
jb
popa
je
push
imul
imul
push
imul
imul
arpl
jb
outs
je
jb
popa
ins
add
ins
arpl
gs
gs
popa
add
ins
jne
pop
pop
add
jne
add
je
imul
outs
jae
inc
gs
gs
dec
je
gs
data16
jae
add
imul
push
arpl
pop
gs
outs
outs
outs
je
pop
imul
ins
add
jb
inc
popa
ins
gs
dec
outs
popa
add
push
jne
add
gs
inc
imul
popa
je
push
popa
jb
ins
jae
addr16
inc
jb
popa
je
push
popa
jb
ins
jae
inc
outs
jb
inc
ins
outs
jae
outs
addr16
jbe
outs
je
jb
jae
inc
outs
jb
inc
popa
ins
gs
inc
outs
jb
inc
ins
outs
jae
outs
add
ins
gs
jns
imul
arpl
imul
je
outs
inc
push
gs
inc
ins
imul
je
outs
push
imul
jns
je
fs
imul
arpl
je
ins
gs
outs
jne
je
outs
ja
pop
push
imul
gs
add
gs
push
gs
arpl
add
gs
je
ins
gs
jns
imul
arpl
gs
inc
outs
js
je
js
inc
outs
js
fs
jae
add
je
outs
outs
add
je
outs
outs
inc
push
gs
bound
je
outs
push
imul
jns
je
fs
imul
gs
outs
jne
je
outs
ja
add
gs
inc
outs
jne
je
outs
ja
add
gs
inc
imul
ins
gs
add
gs
push
popa
jae
add
arpl
gs
outs
js
jo
arpl
gs
outs
js
push
add
push
pop
dec
dec
push
dec
pop
inc
add
push
pop
dec
dec
dec
dec
push
inc
add
je
je
jb
jne
add
je
je
jb
jne
inc
outs
ins
fs
push
gs
je
jb
jne
push
imul
gs
outs
jbe
push
je
jb
jne
push
imul
gs
imul
jae
dec
push
dec
inc
pop
push
dec
push
dec
dec
push
push
add
imul
jo
outs
jae
add
popa
jb
jne
inc
outs
ins
fs
push
imul
imul
imul
arpl
jb
je
ins
gs
arpl
popa
je
inc
push
jb
push
imul
outs
jae
push
gs
jb
arpl
outs
jae
dec
outs
imul
jb
add
gs
ins
popa
jb
inc
outs
jo
add
outs
jne
fs
arpl
popa
je
add
ins
outs
jbe
dec
je
gs
data16
outs
inc
js
arpl
fs
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
addr16
bound
add
je
inc
js
outs
jae
outs
outs
jae
outs
inc
outs
arpl
jo
add
je
imul
je
push
je
jb
dec
outs
fs
bound
add
ins
je
jb
add
add
je
outs
jae
outs
outs
jae
outs
inc
outs
arpl
jo
add
jo
jns
push
je
jb
dec
outs
fs
bound
add
arpl
jo
gs
imul
popa
je
add
jae
gs
cs
outs
jb
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
popa
jae
push
gs
xor
inc
outs
arpl
jo
gs
imul
jb
jo
inc
imul
ins
add
je
outs
arpl
jo
gs
imul
popa
je
inc
imul
ins
push
imul
outs
outs
add
outs
jne
gs
bound
xor
inc
gs
js
outs
jae
outs
outs
jae
outs
inc
outs
arpl
jo
add
je
imul
jb
jo
inc
imul
jb
jo
inc
imul
jb
jo
inc
imul
jns
je
imul
gs
cs
arpl
imul
je
addr16
jo
jns
push
jns
ins
gs
imul
imul
jo
jae
outs
add
outs
fs
add
ins
add
popa
jb
jne
dec
gs
outs
add
gs
popa
je
add
outs
add
outs
fs
outs
jae
jb
inc
data16
jb
pop
add
arpl
arpl
jne
ins
popa
addr16
data16
popa
jb
dec
outs
fs
add
jb
gs
js
push
popa
je
add
gs
jb
je
add
ins
fs
imul
fs
push
popa
ins
jne
add
je
add
push
popa
je
add
arpl
jo
imul
outs
jae
outs
outs
add
je
outs
jae
outs
outs
jae
outs
inc
outs
arpl
jo
add
add
jo
je
imul
jne
inc
imul
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
jo
dec
inc
imul
ins
add
jne
jo
jb
dec
outs
imul
add
imul
inc
outs
outs
je
outs
ins
add
jae
outs
fs
popa
jns
jne
add
je
inc
ins
ins
outs
ja
jae
jb
outs
inc
fs
outs
ja
add
je
inc
ins
ins
outs
ja
jae
jb
outs
inc
gs
gs
push
outs
ja
add
je
inc
ins
ins
outs
ja
jae
jb
outs
push
gs
jp
inc
outs
ins
jne
outs
jae
jae
je
inc
ins
ins
outs
ja
jae
jb
outs
push
gs
jp
push
outs
ja
add
popa
inc
jb
fs
imul
ins
outs
dec
gs
fs
dec
imul
gs
outs
fs
je
inc
outs
ins
jne
outs
dec
gs
fs
dec
imul
gs
outs
fs
popa
inc
jb
fs
imul
ins
outs
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
ins
jne
outs
jae
inc
popa
je
inc
jb
fs
imul
ins
outs
add
fs
popa
outs
add
arpl
je
ins
add
je
inc
outs
arpl
push
outs
imul
pop
dec
outs
arpl
imul
pop
dec
jne
je
push
gs
arpl
gs
dec
popa
ins
add
je
push
gs
fs
outs
ins
jns
jae
je
push
outs
ja
gs
fs
push
imul
inc
popa
je
inc
jb
fs
imul
arpl
outs
dec
outs
fs
je
push
gs
arpl
outs
dec
outs
fs
jp
add
je
push
imul
pop
push
popa
bound
fs
jae
je
dec
gs
fs
gs
add
popa
inc
jb
fs
imul
add
je
push
imul
gs
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
fs
je
dec
popa
js
ins
imul
jae
je
dec
popa
js
ins
jne
push
imul
pop
dec
imul
inc
outs
js
jae
je
dec
imul
imul
pop
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
gs
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
fs
outs
imul
gs
popa
jns
jne
add
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
push
je
imul
arpl
add
jae
gs
cs
dec
add
ins
add
imul
je
inc
jb
fs
imul
outs
ins
ins
arpl
outs
add
je
push
outs
ja
add
jbe
dec
gs
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
je
dec
gs
imul
push
bound
add
je
inc
jne
jb
outs
je
imul
jns
inc
imul
jns
inc
imul
jns
outs
outs
add
gs
je
inc
imul
jns
jae
je
dec
outs
je
jb
popa
ins
add
je
inc
outs
popa
bound
add
je
push
imul
push
gs
inc
outs
js
popa
jae
add
imul
js
add
gs
add
arpl
je
outs
outs
add
je
inc
ins
popa
jae
push
je
ins
add
je
inc
ins
popa
jae
push
je
ins
add
outs
arpl
inc
jbe
outs
je
jb
jae
jae
je
inc
popa
outs
arpl
add
jae
popa
addr16
outs
js
inc
imul
jae
ins
je
dec
push
imul
outs
ja
push
push
jne
jae
jb
outs
add
je
dec
outs
addr16
add
je
push
gs
add
pop
inc
jno
popa
ins
imul
add
ins
outs
jb
addr16
dec
imul
pop
inc
popa
arpl
outs
ins
outs
jb
dec
ins
popa
add
je
dec
ins
popa
add
je
push
outs
ins
popa
je
add
je
xor
dec
popa
je
add
ja
inc
outs
outs
je
imul
jo
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
ins
popa
arpl
inc
outs
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
addr16
push
gs
je
inc
outs
jb
inc
outs
ins
outs
jb
popa
fs
push
imul
fs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
pop
gs
ins
outs
ja
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
popa
fs
inc
ins
imul
pop
inc
push
popa
je
add
arpl
jb
je
ins
gs
jae
je
inc
outs
arpl
jb
inc
outs
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
inc
jne
outs
push
imul
pop
dec
popa
jbe
outs
fs
addr16
push
jb
outs
jae
popa
jb
outs
je
push
imul
outs
js
imul
add
je
push
imul
add
je
push
popa
bound
outs
jo
inc
gs
bound
arpl
gs
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
addr16
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
inc
outs
jne
ins
gs
jne
data16
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
ins
outs
jae
outs
addr16
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
outs
jb
inc
ins
outs
jae
outs
add
jb
outs
jb
dec
popa
jns
jne
add
je
imul
dec
imul
je
push
imul
imul
jns
inc
jne
jb
outs
je
jae
jb
dec
jo
outs
push
jne
dec
gs
push
gs
popa
ins
jne
add
gs
push
popa
ins
jne
add
dec
ins
jo
jb
inc
je
jb
bound
add
gs
xor
fs
ins
add
je
dec
popa
outs
fs
add
je
je
add
arpl
inc
imul
ins
popa
jae
xor
gs
inc
outs
ins
fs
popa
je
add
outs
arpl
jae
cmp
outs
imul
jb
bound
xor
jo
push
jb
arpl
jae
outs
fs
add
je
dec
popa
imul
add
je
inc
imul
push
je
jb
jae
imul
popa
arpl
dec
jae
popa
je
push
outs
outs
je
add
je
imul
imul
je
outs
jae
outs
outs
add
je
popa
jb
outs
je
push
outs
push
je
imul
push
jb
arpl
jae
jae
jns
popa
ins
add
outs
arpl
add
jae
gs
cs
imul
ins
gs
bound
inc
imul
gs
jne
je
push
jns
je
ins
cs
push
imul
gs
add
gs
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
imul
arpl
imul
pop
inc
js
arpl
popa
bound
popa
je
add
popa
jb
add
jo
add
je
dec
outs
ja
outs
jo
inc
jb
popa
je
jb
push
gs
imul
jns
popa
ins
add
jae
gs
cs
gs
add
arpl
imul
gs
ins
push
jb
je
jb
push
gs
push
jb
je
jb
push
jb
je
add
jb
gs
xor
cs
ins
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
je
imul
add
outs
arpl
outs
outs
imul
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
je
imul
je
jb
jb
ja
popa
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jb
popa
jns
push
jb
je
inc
ins
ins
dec
imul
popa
fs
ins
ins
dec
imul
imul
push
je
imul
je
jo
imul
ins
imul
xor
push
outs
dec
imul
ins
add
ins
outs
jbe
add
gs
imul
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
bound
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
bound
push
jns
je
ins
cs
je
imul
je
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
bound
inc
gs
outs
jne
gs
je
jb
cmp
xor
arpl
jb
outs
je
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
je
imul
je
inc
jne
jb
outs
je
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
je
jb
push
gs
je
push
gs
je
push
jns
je
ins
cs
inc
imul
ins
gs
imul
cmp
xor
jae
popa
je
add
ins
pop
pop
imul
push
push
dec
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
cmp
xor
jo
je
add
gs
pusha
xor
cmp
jne
jne
ds
cmp
imul
xor
cmp
ds
cmp
ins
pop
pop
inc
imul
add
aaa
pop
pop
ja
popa
jo
add
aaa
pop
pop
ja
popa
jo
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
je
imul
jb
outs
je
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
je
jb
inc
jne
jb
outs
je
inc
bound
addr16
imul
jb
bound
add
je
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
jno
gs
add
jne
jne
add
je
imul
imul
jae
ins
add
je
inc
jb
outs
jb
addr16
inc
outs
jne
je
dec
outs
je
jne
jo
jb
gs
js
gs
imul
pop
pop
inc
outs
outs
outs
jns
outs
jne
push
jns
xor
add
imul
push
popa
jb
cmp
js
ds
pop
push
push
popa
jb
cmp
imul
imul
je
imul
js
imul
add
je
gs
add
jne
ins
jae
inc
gs
popa
jae
inc
outs
fs
ins
add
je
inc
bound
addr16
imul
je
jb
bound
add
jne
addr16
jb
ja
popa
bound
je
jb
bound
add
jne
addr16
jb
ja
popa
bound
je
je
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
jne
ins
imul
jb
jb
xor
cmp
pop
pop
inc
outs
outs
outs
jns
outs
jne
push
jns
xor
add
imul
push
popa
jb
cmp
imul
imul
je
imul
add
arpl
inc
imul
ins
popa
jae
xor
add
jo
inc
imul
popa
add
jo
inc
imul
bound
inc
jne
arpl
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
add
jo
inc
imul
arpl
cmp
push
popa
outs
jae
popa
jb
outs
je
fs
je
imul
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
add
jo
inc
imul
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
add
ins
gs
outs
outs
add
jo
inc
imul
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
cmp
outs
arpl
jo
inc
imul
data16
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
arpl
jo
inc
imul
xor
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
add
fs
imul
arpl
outs
jns
push
push
push
gs
arpl
je
imul
popa
jb
jae
outs
add
jae
jb
jo
outs
push
gs
imul
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
pop
dec
gs
inc
jns
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
xor
xor
xor
cmp
sub
sub
inc
inc
xor
cmp
inc
jge
push
popa
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
outs
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
jae
je
dec
push
add
ins
gs
outs
xor
xor
xor
xor
ins
gs
je
gs
ins
add
ins
gs
outs
fs
jb
jo
outs
push
jb
outs
jae
outs
jb
add
gs
je
inc
outs
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
add
jb
popa
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
popa
add
gs
je
inc
arpl
jo
outs
jb
push
push
inc
push
push
inc
je
jb
bound
add
outs
add
imul
inc
popa
ins
gs
jae
jne
arpl
add
imul
inc
outs
arpl
jo
gs
imul
outs
jne
arpl
add
je
jo
push
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
imul
inc
popa
arpl
jb
jne
fs
jae
jne
arpl
add
add
je
popa
add
jb
imul
imul
inc
add
arpl
jb
jns
jo
je
add
add
ins
add
jae
add
inc
add
ins
add
je
add
sbb
outs
add
add
outs
add
add
add
add
or
popa
add
add
adc
ins
add
ins
add
push
add
je
push
add
jb
ins
add
outs
add
jb
jns
jo
je
add
add
ins
add
jae
add
arpl
jb
jns
jo
je
add
add
ins
add
jae
add
add
add
jo
add
add
pop
add
push
add
add
add
and
jb
jne
outs
add
add
add
jae
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
and
jns
outs
add
and
data16
jb
jae
je
and
ins
add
jae
je
and
imul
je
popa
add
add
add
outs
add
and
outs
add
and
je
push
add
outs
add
add
ja
imul
and
jbe
add
jae
imul
and
outs
add
and
je
push
add
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
aas
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
jae
imul
and
cmp
add
add
add
inc
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
outs
add
je
imul
imul
je
imul
and
inc
add
jb
outs
add
add
dec
add
ja
jae
outs
add
je
pop
add
bound
outs
add
imul
add
add
add
js
add
sub
add
add
jae
jae
inc
add
outs
add
pop
add
bound
outs
add
imul
add
js
add
sbb
add
and
jo
add
jae
outs
add
popa
add
add
imul
jae
and
popa
add
add
add
add
outs
add
and
add
ins
add
je
add
add
add
outs
add
jb
and
jo
push
add
jae
sub
and
jbe
imul
outs
add
sub
and
add
arpl
jne
ins
add
outs
add
add
and
add
add
add
add
add
jne
add
je
sub
and
add
outs
add
add
add
outs
add
jb
jns
and
and
dec
add
add
imul
and
outs
add
ins
add
and
push
add
add
and
imul
jns
outs
add
and
add
outs
add
add
add
outs
add
jo
ins
add
add
sbb
add
jbe
add
and
dec
add
add
add
add
ins
add
add
add
and
add
arpl
jb
jns
jo
je
add
add
outs
add
jb
and
jo
add
jae
outs
add
popa
add
add
imul
jae
sub
and
jae
outs
add
add
outs
add
and
arpl
popa
add
outs
add
je
and
popa
add
arpl
add
jae
and
je
push
add
add
outs
inc
add
add
jns
and
push
add
and
dec
add
add
add
add
je
and
jae
outs
add
add
add
data16
add
add
ins
add
add
add
add
add
add
add
add
add
ins
add
outs
add
outs
add
add
sub
add
add
add
add
outs
add
add
add
and
ja
outs
add
daa
add
add
add
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
je
push
add
and
add
je
push
add
add
adc
add
outs
add
and
je
jne
jb
outs
add
add
data16
and
jns
outs
add
jb
and
arpl
outs
add
jo
jne
je
add
and
outs
add
and
je
jb
jns
and
je
outs
add
add
ins
add
jae
add
add
add
and
ja
push
add
add
and
jae
je
popa
add
je
and
outs
add
js
je
and
je
imul
add
add
jne
and
ja
imul
and
add
je
and
xor
xor
xor
xor
and
data16
ins
add
jae
and
add
ins
add
je
add
add
jae
and
popa
add
add
jne
outs
add
jae
push
add
je
add
sub
add
jae
and
jns
outs
add
and
ja
imul
and
ja
popa
add
je
and
ins
add
and
je
outs
add
add
je
popa
add
je
and
outs
add
js
je
and
je
imul
sub
and
jae
imul
add
add
and
popa
add
and
je
push
add
outs
add
add
add
outs
add
and
je
push
add
add
jae
and
arpl
popa
add
popa
add
ins
add
and
je
outs
add
add
add
jb
jns
jo
je
and
jns
outs
add
jb
and
jo
add
jae
outs
add
popa
add
add
add
add
add
outs
add
and
jns
outs
add
add
pop
dec
add
popa
add
ja
push
add
add
add
add
add
add
add
outs
add
and
ja
popa
add
je
and
popa
add
add
popa
add
add
outs
add
aas
add
add
popa
add
popa
add
popa
add
popa
add
popa
add
add
add
add
add
jb
jns
sub
and
jbe
add
jns
and
bound
popa
add
add
add
imul
outs
add
and
add
add
jb
add
add
outs
add
and
jae
jne
jb
add
add
bound
outs
add
je
and
imul
add
pop
add
sub
push
add
push
add
push
add
add
dec
add
pop
add
inc
add
inc
add
add
pop
add
add
add
add
je
and
and
and
sub
and
dec
add
add
and
add
arpl
jb
jns
jo
je
imul
and
jns
outs
add
jb
and
data16
ins
add
jae
add
add
add
sbb
add
jns
jo
je
imul
and
jns
outs
add
jb
and
data16
ins
add
jae
add
add
je
and
ja
imul
and
je
popa
add
add
add
outs
add
and
popa
add
add
push
add
add
add
add
add
outs
add
add
ins
add
arpl
imul
add
outs
add
add
add
add
add
data16
add
and
arpl
jb
popa
add
push
add
jne
and
ins
add
jae
add
add
outs
add
jb
and
data16
ins
add
jae
add
add
data16
add
and
add
outs
add
and
dec
add
add
imul
and
arpl
ins
add
jae
add
add
outs
add
add
outs
add
jo
ins
add
je
add
add
add
add
outs
add
add
add
jns
jae
add
add
add
jb
outs
add
and
jns
outs
add
jb
and
arpl
outs
add
jo
jne
je
add
add
adc
jb
add
je
and
and
and
add
push
add
outs
add
add
add
add
and
and
push
add
jns
and
popa
add
popa
add
outs
add
add
add
add
sub
imul
jae
and
ja
imul
and
bound
add
add
add
add
add
sbb
arpl
imul
and
inc
add
outs
add
outs
add
add
sbb
add
add
add
ins
add
outs
add
add
dec
pop
add
jne
jb
and
jo
add
jae
outs
add
popa
add
add
imul
jae
and
popa
add
add
add
add
outs
add
and
add
ins
add
je
add
add
sbb
js
je
inc
add
js
inc
add
add
add
jae
add
je
je
outs
add
inc
add
add
imul
add
jns
add
add
imul
imul
ins
add
and
add
arpl
jb
jns
jo
je
imul
and
imul
add
sub
and
outs
add
ja
and
add
jbe
add
add
add
add
popa
add
imul
add
jns
and
data16
ins
add
jae
and
add
bound
jne
je
je
outs
add
push
add
add
inc
add
arpl
jb
jns
jo
je
add
add
ins
add
jae
add
push
add
add
and
add
arpl
jb
jns
jo
je
add
add
imul
jae
add
push
add
ins
add
jae
and
dec
add
ja
and
push
add
ins
add
outs
add
sbb
bound
add
add
jne
outs
add
add
ja
outs
add
or
add
and
bound
add
add
ins
add
jae
push
add
inc
add
ins
add
je
add
das
xor
and
data16
ins
add
and
ja
imul
and
bound
add
add
add
add
add
add
adc
add
add
add
jae
imul
xor
outs
add
jb
and
add
arpl
jb
jns
jo
je
imul
and
imul
add
and
imul
add
add
sbb
imul
jne
jb
add
outs
add
dec
add
sub
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
adc
outs
add
ins
add
popa
add
add
pop
push
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
sbb
jb
ins
add
popa
add
imul
add
outs
add
outs
add
or
outs
add
ins
add
add
add
add
add
add
and
add
ins
add
je
add
je
jae
add
add
add
popa
add
cmp
add
ins
add
add
add
add
add
xor
jge
and
or
add
and
add
imul
and
and
jnp
xor
jge
and
and
add
je
outs
add
add
add
add
add
add
add
add
add
xor
je
jne
jo
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
bound
jns
add
daa
inc
add
je
add
jae
imul
jae
push
add
inc
add
arpl
jb
jns
jo
je
add
add
jo
push
sbb
popa
add
je
dec
add
add
inc
add
bound
jne
add
sub
imul
push
add
jae
je
add
push
add
ins
add
ins
add
je
imul
add
push
add
je
push
add
jae
je
add
add
and
and
popa
add
and
popa
add
add
add
add
add
je
add
and
outs
add
add
je
push
add
jae
je
add
outs
add
add
je
add
dec
add
add
ins
add
add
dec
add
add
and
je
js
je
and
je
add
je
add
adc
and
data16
ins
add
and
cmp
adc
and
add
je
and
cmp
add
add
sub
and
data16
and
cmp
adc
pop
add
imul
outs
add
jae
add
push
add
push
add
push
add
push
add
add
dec
add
pop
add
inc
add
inc
add
add
pop
add
cmp
sub
outs
add
jb
jns
jo
je
add
add
ins
add
dec
add
jae
je
add
add
add
add
cmp
stc
or
inc
lods
dec
dec
loopne
aaa
call
push
sbb
mov
push
adc
add
and
add
push
adc
add
adc
sbb
and
push
push
sbb
add
add
jae
jae
and
bound
outs
add
imul
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
xor
sub
add
add
add
add
add
jae
outs
add
je
add
add
ins
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
xor
xor
add
add
add
add
add
add
add
add
add
jo
add
or
xchg
cwde
add
push
add
push
add
push
add
push
add
add
dec
add
pop
add
inc
add
inc
add
add
pop
add
cmp
add
add
push
adc
add
adc
push
add
push
adc
add
add
add
add
add
add
add
push
or
cdq
cdq
cdq
icebp
aas
add
add
add
add
or
add
sub
and
add
sub
add
adc
add
adc
add
add
sub
push
or
sbb
add
add
or
pop
add
sbb
or
or
add
sbb
add
adc
push
add
add
or
push
adc
add
add
sub
add
sub
push
adc
push
adc
add
adc
add
adc
add
add
dec
or
aad
cmp
add
dec
add
add
add
add
inc
add
add
dec
add
add
dec
add
add
push
push
adc
pop
add
adc
pop
add
adc
or
add
push
or
add
push
push
adc
add
push
add
push
pop
add
add
pop
push
push
add
push
add
add
push
push
and
add
adc
add
add
push
and
add
sub
lods
pop
and
add
and
add
xor
or
and
add
cmp
cmp
add
and
add
push
and
add
or
and
add
adc
and
adc
add
and
sbb
and
add
push
and
add
sbb
pop
add
adc
or
add
adc
push
adc
push
add
add
add
push
add
add
push
add
in
add
sbb
and
add
add
adc
push
add
push
adc
add
or
push
add
push
push
push
push
push
add
adc
add
sbb
push
push
add
push
add
or
add
push
adc
push
add
and
or
pop
add
sub
sub
add
adc
push
add
or
add
add
and
push
add
sbb
adc
add
and
adc
add
sbb
or
add
push
sbb
sbb
add
or
add
sbb
push
pop
add
or
add
add
adc
push
and
add
xor
adc
push
or
add
and
add
cmp
and
add
adc
adc
sbb
push
and
add
sbb
and
and
cmp
add
sbb
add
push
push
add
adc
adc
and
add
sbb
pop
add
sub
push
add
and
sbb
and
add
cmp
jge
and
add
push
add
adc
add
push
push
pop
add
sbb
or
adc
add
push
add
add
push
add
add
jns
add
adc
pop
add
adc
pop
or
add
adc
push
push
push
add
add
add
push
add
pop
add
add
add
and
adc
add
adc
add
add
cdq
or
add
push
add
sbb
push
push
adc
add
add
push
add
push
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
sub
add
adc
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
and
adc
add
adc
adc
inc
add
add
dec
push
and
sbb
adc
pop
add
dec
push
and
push
push
adc
pop
add
push
and
add
cmp
add
and
add
add
add
sbb
push
add
add
or
push
push
add
add
sbb
adc
push
sbb
add
push
adc
push
adc
add
add
adc
and
sbb
add
adc
push
add
add
adc
push
or
add
adc
push
adc
push
push
pop
push
adc
push
adc
sbb
leave
add
add
push
push
adc
push
or
add
push
or
add
adc
add
aad
and
sbb
push
adc
push
add
sbb
push
add
add
mov
pop
add
cmp
adc
add
aad
adc
push
add
add
mov
sbb
pop
pop
push
adc
push
or
pop
pop
add
adc
add
pop
add
cmp
adc
push
pop
and
add
add
add
push
adc
add
adc
add
add
add
add
sbb
sub
adc
add
add
add
add
pop
jnp
imul
jnp
imul
je
cmp
je
and
add
push
jns
adc
outs
outs
outs
jns
outs
jne
and
gs
and
add
xor
add
add
add
adc
add
add
add
add
add
add
and
adc
add
and
adc
add
pop
add
xor
cmp
add
adc
adc
pop
and
add
add
add
adc
adc
or
add
add
add
add
add
add
or
add
sbb
imul
imul
and
jge
jge
add
push
jns
adc
outs
outs
outs
jns
outs
jne
and
gs
add
add
pop
add
add
add
or
add
push
or
add
push
push
push
push
push
adc
push
push
adc
push
or
add
adc
push
or
add
push
push
add
add
push
adc
push
or
add
push
push
push
or
add
adc
adc
push
adc
adc
add
adc
adc
inc
add
adc
add
adc
adc
adc
inc
add
adc
add
push
adc
push
or
add
push
or
adc
adc
adc
or
adc
push
adc
or
add
push
adc
push
daa
adc
add
add
add
push
add
add
push
add
add
add
or
push
push
adc
push
or
adc
inc
add
push
add
adc
add
add
add
push
add
or
add
push
or
adc
inc
add
push
push
sbb
add
adc
add
add
push
add
add
or
adc
push
push
push
adc
push
adc
adc
push
adc
adc
add
add
or
add
adc
add
add
or
add
adc
add
adc
adc
or
add
push
adc
push
add
and
add
adc
sbb
add
sbb
push
or
add
adc
pop
pop
add
or
add
add
or
pop
add
adc
add
push
adc
adc
add
xor
cmp
and
or
and
add
pop
push
sbb
adc
or
adc
add
fs
jae
and
outs
imul
add
add
add
xor
jo
jb
addr16
xor
sub
and
ja
outs
data16
and
ins
and
addr16
gs
jb
gs
adc
add
xor
xor
xor
xor
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
add
pop
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
adc
add
add
add
push
add
add
or
push
push
inc
push
dec
imul
dec
mov
stc
jo
add
add
pop
push
jae
jb
pop
inc
inc
aaa
xor
pop
inc
gs
je
jo
push
gs
jo
push
gs
jo
outs
bound
js
ss
inc
bound
pop
push
gs
jo
jo
bound
adc
add
add
add
mov
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
