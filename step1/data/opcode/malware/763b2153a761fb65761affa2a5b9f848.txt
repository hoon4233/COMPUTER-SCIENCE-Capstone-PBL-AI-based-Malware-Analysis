in
retf
idiv
push
mov
movsx
cmp
jl
or
pop
jg
adc
mov
call
push
cli
popa
and
fcompp
xchg
inc
jmp
sub
sbb
cmp
sti
(bad)
fld
rol
sub
jne
mov
jmp
mov
pop
ret
int3
add
(bad)
fild
cmp
je
mov
xor
mov
int3
(bad)
push
icebp
test
je
xor
jmp
mov
ins
in
(bad)
jmp
mov
add
mov
mov
mov
cmp
jae
inc
hlt
inc
add
xlat
fisubr
cmc
icebp
inc
sub
add
ins
ja
rol
jae
adc
mov
xor
add
add
ins
retf
test
icebp
push
mul
add
test
push
call
add
pop
test
das
xchg
push
repz
call
push
call
ja
das
icebp
xchg
imul
jle
outs
js
shl
and
sar
or
mov
dec
cld
mov
or
cmp
loopne
shl
(bad)
lock
gs
sar
or
mov
or
outs
sub
icebp
sbb
lods
(bad)
and
shl
inc
test
dec
add
ss
lahf
or
in
fild
mov
or
mov
inc
es
ror
hlt
or
mov
push
or
sbb
dec
jle
jge
add
add
test
mov
sahf
sbb
inc
ja
fild
add
call
call
ins
ds
(bad)
loop
ds
ins
ja
lea
shr
xchg
lahf
fist
jmp
xchg
or
pop
add
jmp
cdq
sub
into
aas
int
mov
in
or
in
add
in
ret
add
es
es
pop
or
fs
or
jmp
mov
fisttp
or
popa
and
iret
enter
push
dec
bswap
and
xor
jb
adc
sbb
add
jne
sbb
sbb
and
mov
mov
xor
sub
daa
das
add
sbb
(bad)
push
add
lods
add
(bad)
out
std
cmps
imul
cmps
imul
cmps
imul
(bad)
in
inc
add
add
push
pop
or
push
add
or
xchg
cmps
adc
adc
adc
pop
mov
fnsave
mov
(bad)
test
jg
cmp
lea
ret
mov
sbb
lea
scas
sbb
mov
push
addr16
repnz
add
cmp
rcl
inc
inc
mov
inc
push
adc
add
adc
and
movs
mov
cmps
dec
pop
xor
out
(bad)
cmps
add
push
lods
push
add
push
xchg
mov
mov
adc
mov
sbb
push
push
mov
push
adc
push
neg
je
and
test
lea
cmp
pop
add
or
adc
in
push
xchg
adc
icebp
mov
cld
xor
hlt
and
jne
fist
cld
sbb
pushf
cmp
push
pushf
nop
pop
scas
xor
add
mov
or
or
xor
mov
cmc
clc
mov
dec
lock
mov
sub
jo
jmp
sbb
push
xor
pop
push
or
fmul
sbb
or
(bad)
hlt
sti
movs
fisttp
mov
call
int3
add
pop
jp
sti
ds
ret
jnp
lock
adc
push
push
sbb
or
xor
jo
pop
sbb
in
or
push
xchg
out
mov
inc
xor
cmp
jb
mov
mov
cmp
push
dec
neg
cmps
sbb
cmp
ret
movs
int
adc
pop
mov
lods
sbb
xchg
xor
adc
pushf
(bad)
scas
cmp
sar
sub
dec
inc
bnd
call
movs
int3
out
loopne
xor
add
ins
jbe
out
dec
lea
iret
enter
ss
lock
lods
dec
inc
add
mov
push
push
daa
mov
jmp
mov
cmp
je
mov
(bad)
adc
and
(bad)
pop
push
mov
mov
int3
out
lock
sub
sub
ds
call
and
push
lock
hlt
(bad)
xchg
fld
sar
push
mov
out
std
xor
(bad)
jnp
xchg
cmp
push
(bad)
dec
stc
es
dec
sbb
repnz
les
pop
dec
in
inc
outs
in
pop
mov
add
mov
pop
mov
hlt
mov
enter
dec
fild
pop
sti
xchg
outs
xchg
adc
dec
mov
es
adc
ins
xchg
dec
adc
or
xor
push
pop
test
ja
push
call
sub
(bad)
shl
sbb
mov
pop
out
jne
cmp
popf
cld
sbb
retfw
retf
mov
fwait
or
sahf
js
push
jmp
nop
call
sti
aad
add
pop
add
jns
sbb
add
dec
pop
cwde
mov
push
jae
fldcw
js
in
sbb
xor
pop
shl
and
dec
cmp
mov
es
inc
rcl
mov
lock
cmp
xor
es
test
xchg
ds
pop
adc
cmp
daa
mov
sbb
test
inc
push
div
pop
sbb
adc
inc
mov
(bad)
fdiv
(bad)
sbb
push
dec
fild
sbb
cli
ss
cs
ins
stos
mov
sbb
das
xor
mov
in
add
fucom
in
in
and
ss
icebp
inc
aam
or
mov
arpl
jl
add
or
add
jbe
popf
add
cli
or
jmp
mov
pop
ror
movs
movs
pop
mov
imul
add
mov
lock
icebp
add
popa
pop
pop
push
sbb
popf
dec
pop
and
test
mov
movs
jp
imul
int3
imul
and
jl
adc
push
xchg
call
retf
mov
sbb
add
sbb
inc
enter
sbb
jmp
fimul
push
jne
and
mov
mov
and
dec
loope
inc
sub
push
int3
(bad)
push
mov
enter
ss
adc
push
mov
leave
test
loopne
loopne
imul
loope
sbb
das
xchg
lock
sub
sar
sbb
movs
push
adc
inc
call
fadd
jle
ficom
jmp
xchg
(bad)
xor
call
adc
add
add
ja
data16
jmp
or
sbb
outs
xor
push
and
and
enter
dec
or
fsubr
mov
jmp
add
jnp
dec
and
add
sub
ins
clc
rol
shl
cmp
enter
pop
jbe
ficomp
cmp
inc
in
loope
in
adc
push
jmp
ds
nop
cmp
add
pop
pop
mov
ffreep
add
das
fs
cmp
xchg
hlt
add
loopne
dec
xchg
jno
add
fld
cmp
movs
popf
fdiv
dec
test
rol
xor
or
adc
cmc
jmp
out
ins
or
push
add
mov
pop
jp
cmc
out
sbb
repnz
cmp
xor
movs
fwait
sub
std
xor
add
jno
std
(bad)
sbb
imul
push
inc
rcl
jnp
jg
adc
push
nop
adc
sbb
cs
or
lods
inc
xor
inc
adc
shr
das
pop
mov
jmp
clc
push
and
or
push
push
punpckhbw
push
rcr
sub
jae
sbb
mov
ja
jge
add
push
push
push
xchg
pop
out
cmp
pop
push
push
push
push
xor
stc
mov
nop
dec
mov
push
shl
lds
and
pop
pusha
xor
movs
pop
xchg
push
mov
gs
add
sar
pop
fld
mov
scas
(bad)
not
lea
push
ds
pushf
mov
(bad)
xchg
sti
inc
mov
and
neg
aas
inc
pop
cwde
jno
and
outs
rcr
out
test
adc
clc
xor
fstp
and
adc
sub
mov
pop
mov
sub
and
xor
pushf
loopne
push
xchg
rcl
add
daa
in
mov
sbb
inc
inc
bound
sbb
test
cmp
add
fs
push
push
pop
movs
dec
loopne
pop
cmp
shl
jne
jae
stc
imul
sub
push
push
imul
and
pop
jb
sar
clc
sub
pop
sub
cmp
xor
js
in
pop
cmp
xor
arpl
jp
mov
mov
fwait
lock
fist
orps
sbb
test
cmps
dec
push
or
(bad)
lea
push
add
es
add
pushf
xor
fdivr
repnz
loopne
test
mov
sub
stos
mov
cmp
js
ss
push
add
loop
or
xchg
gs
push
add
cmp
mov
cmp
add
sub
fld
adc
mov
ret
es
ss
shl
ror
or
jns
mov
and
pusha
add
fmul
inc
jb
out
jecxz
push
or
adc
bound
popf
out
ret
dec
push
or
pop
xchg
xchg
call
sbb
inc
cs
lock
jecxz
sbb
addr16
pop
inc
fimul
or
ds
jge
mov
ds
pop
push
movs
cmp
imul
push
rcr
movs
push
test
and
adc
aam
xor
cmp
mov
and
or
test
int
cmp
mov
ret
mov
push
(bad)
jmp
or
dec
adc
inc
or
adc
hlt
dec
cmp
sbb
add
adc
int3
mov
cmp
inc
sub
clc
mov
xchg
popf
test
push
or
rcl
jg
movs
xor
xor
jmp
adc
or
pop
call
dec
push
mov
je
rcl
sbb
lahf
mov
icebp
movzx
and
(bad)
test
mov
sar
xor
mov
or
in
add
call
retf
dec
gs
shr
jbe
add
push
cmp
ja
enter
cmp
jge
sbb
loopne
inc
inc
sub
dec
xor
into
jbe
and
das
mov
mov
enter
sbb
push
push
fldenv
leave
shr
cmp
aaa
shr
cmp
nop
add
call
mov
das
pusha
or
std
arpl
movs
cmp
ja
add
jb
add
add
(bad)
fisttp
sub
aas
or
bound
ins
fisttp
xchg
loope
jle
mov
mov
sbb
inc
das
in
pop
or
xchg
and
das
cmp
mov
jne
jp
sub
pop
push
pop
add
and
mov
mov
call
lods
push
cmp
fmul
add
or
cmp
pop
inc
shr
and
sbb
mov
xor
das
inc
retf
(bad)
test
mov
dec
mov
push
xchg
sbb
push
test
pop
mov
cdq
mov
adc
sbb
in
and
popa
and
push
xor
adc
push
outs
aad
sbb
jbe
pavgw
sbb
es
mov
jg
add
inc
mov
and
inc
add
int3
push
pop
inc
pop
inc
(bad)
ins
push
(bad)
movs
repz
sub
adc
das
push
mov
lods
push
jae
test
or
cwde
sub
dec
jmp
pop
or
jmp
ror
lahf
rol
mov
movs
jle
mov
sub
sub
loopne
push
sbb
cmp
shr
dec
sub
xchg
lea
dec
jle
add
inc
icebp
call
dec
pop
neg
call
aaa
ret
(bad)
sti
test
dec
mov
inc
cmp
repnz
cmp
mov
mov
nop
aaa
hlt
popa
hlt
cmps
cli
ret
and
xor
dec
inc
push
push
gs
push
sub
clc
stos
push
sub
je
mov
cmp
in
in
push
pop
mov
lahf
test
pop
out
nop
es
cld
sbb
mov
jb
into
(bad)
mov
out
rol
adc
popa
xchg
std
inc
clc
push
imul
pop
in
and
shr
dec
test
fnsave
mov
sub
sbb
sub
push
sbb
data16
mov
retf
and
cmp
in
push
int3
pop
mov
xor
push
push
mov
out
xchg
leave
sub
and
pop
fstp
mov
or
dec
fadd
sar
enter
add
stc
push
dec
cs
shl
ins
scas
mov
mov
cmps
scas
test
push
jae
xor
jnp
sti
in
push
pop
and
(bad)
sub
cli
pop
inc
test
imul
mov
jmp
cs
in
ds
add
and
xor
adc
leave
dec
fs
aad
movs
popf
inc
or
dec
pushf
add
fnstcw
int
scas
call
rol
inc
push
xor
push
push
jb
call
movs
test
adc
mov
pop
adc
xchg
mov
into
rcl
in
push
sub
adc
mov
sub
in
sti
push
and
jmp
hlt
dec
mov
jecxz
inc
rcl
dec
das
int
mov
ror
mov
and
das
cld
test
push
inc
repnz
pusha
xchg
int3
(bad)
(bad)
mov
sahf
adc
retf
push
cmp
outs
and
jg
cmp
fs
in
cmp
out
in
or
outs
sbb
xchg
cmp
or
jmp
pop
adc
or
push
inc
sbb
pop
(bad)
add
add
pusha
lock
in
fsub
pushf
sbb
mov
clc
jmp
imul
adc
add
fs
sbb
dec
xor
(bad)
add
sub
inc
fwait
shl
stos
fsub
mov
cmps
or
adc
nop
mov
cld
push
sbb
pop
add
mov
ss
mov
and
jae
push
clc
div
clc
dec
loopne
je
mov
sbb
xlat
js
or
or
pop
add
(bad)
into
and
add
add
push
dec
sahf
mov
fisttp
ret
loop
mov
push
scas
dec
(bad)
xchg
cmc
lock
adc
xchg
inc
mov
enter
int3
stc
retf
xor
repnz
add
dec
mov
cmp
add
jge
or
enter
hlt
hlt
test
lock
loopne
repnz
cmc
or
and
movs
xchg
in
dec
pop
lock
push
popf
out
jge
push
xchg
push
pop
mov
sub
es
popf
sub
hlt
push
in
fld
into
and
xor
mov
jb
dec
or
or
movs
adc
jmp
cmp
cld
sbb
mov
data16
push
cmp
jae
adc
(bad)
nop
fmul
or
lods
(bad)
inc
pop
mov
dec
or
adc
or
jo
cs
imul
jmp
jmp
xchg
es
in
outs
or
test
stos
add
ins
add
mov
cmc
push
sbb
mov
mov
stos
fstp
jge
ror
sub
mov
call
inc
sub
mov
repz
sub
add
dec
inc
adc
jbe
xchg
fdiv
mov
push
push
rcr
and
xor
fst
sbb
adc
inc
clc
shr
out
mov
adc
or
movs
mov
mov
inc
add
sti
out
mov
jmp
mov
or
add
mov
repz
pop
out
add
add
or
les
inc
jne
(bad)
call
and
inc
mov
inc
das
mov
mov
sbb
loope
gs
adc
push
sbb
sbb
cld
mov
jmp
out
int
lods
mov
cdq
daa
int3
cmp
outs
jmp
lea
pop
adc
fcomp
scas
jmp
pop
adc
lock
sub
jge
(bad)
and
clc
not
jno
pop
inc
ret
inc
xchg
lea
adc
push
cmp
shl
adc
sbb
fisubr
sbb
adc
mov
lock
or
popf
or
call
pop
cmp
adc
addr16
iret
pop
inc
hlt
jg
and
js
or
cmp
or
(bad)
and
lods
imul
(bad)
xor
and
push
hlt
cmp
pop
pop
in
data16
cmp
into
mov
cdq
fwait
clc
shl
cmp
clc
dec
sub
repnz
leave
push
enter
(bad)
cmc
adc
mov
xchg
adc
test
daa
push
and
xchg
inc
std
test
in
and
cwde
sub
lahf
pop
and
test
mov
(bad)
jmp
scas
inc
jle
xlat
pop
mov
and
stc
leave
push
enter
xchg
jno
std
and
mov
jns
stos
in
push
cmp
or
cmp
xchg
repz
mov
jno
sahf
repz
mov
rcr
xor
pop
clc
xchg
push
stc
pop
adc
es
jp
inc
inc
adc
in
ret
stos
(bad)
mov
adc
sbb
sbb
pop
adc
(bad)
in
push
and
push
adc
add
and
test
out
and
mov
and
in
in
(bad)
pop
aaa
ret
or
pop
test
xchg
adc
repnz
stos
nop
inc
xor
jmp
jb
or
mov
dec
scas
sbb
add
in
sub
leave
xor
aas
jle
mov
clc
into
lea
and
push
sbb
imul
ror
das
mov
sbb
dec
xor
loopne
mov
div
out
loope
jmp
inc
in
std
jmp
sbb
in
cmp
xor
and
and
ins
adc
into
lea
mov
addr16
test
loopne
adc
jl
add
sahf
mov
sbb
mov
(bad)
shl
mov
popf
in
adc
pop
popa
fs
mov
test
in
dec
or
sahf
mov
pusha
dec
mov
or
aam
mov
adc
add
sahf
sar
mov
cld
sub
mov
int
pop
adc
in
sbb
dec
sub
inc
cwde
xchg
sbb
call
fidivr
mov
or
mov
adc
out
out
fcomp
or
mov
(bad)
ja
mov
adc
mov
arpl
into
sbb
out
sbb
or
or
cmp
aam
xor
repnz
xor
cdq
(bad)
cmp
push
inc
jle
jl
pop
or
leave
mov
dec
or
add
cs
ror
movs
sbb
sbb
xor
or
movs
push
lods
xchg
inc
(bad)
sub
mov
xchg
hlt
mov
cmps
das
adc
push
stc
sbb
adc
dec
hlt
cmps
xor
fs
lahf
pop
pop
pop
gs
sbb
xchg
hlt
mov
cmps
xor
dec
inc
push
stc
xchg
int3
or
or
call
dec
out
clc
cmps
xor
call
adc
repnz
jmp
rcr
test
xchg
mov
daa
sbb
dec
jle
outs
mov
sbb
cmps
inc
jle
and
cmp
loopne
sub
sar
xchg
xchg
or
clc
cmps
ds
aas
push
pushf
adc
add
xor
cld
cmps
inc
and
mov
or
es
and
lahf
cmp
and
jle
imul
lahf
dec
test
mov
repnz
mov
rol
or
push
or
or
fmul
enter
outs
push
or
add
and
out
pop
jge
or
ja
and
rol
lock
lods
cmp
mov
pop
mov
mov
cmps
or
jg
xchg
pusha
mov
or
push
test
pop
push
fmul
jae
in
or
shr
dec
jbe
push
sbb
add
push
test
sub
fcomp
rcl
push
movs
or
ins
sbb
jae
xchg
std
dec
nop
jo
add
dec
pop
xor
add
sub
fnstcw
push
pop
inc
sub
lahf
mov
mov
dec
sub
sbb
lods
sbb
int3
aaa
movs
jg
dec
jmp
xchg
loope
mov
bound
add
pop
mov
mov
push
nop
sub
test
cmp
mov
and
push
mov
inc
cmp
mov
ficom
ja
mov
and
sub
popa
inc
movaps
jmp
in
leave
scas
sbb
xor
hlt
xchg
cmp
std
dec
pusha
inc
nop
leave
or
fst
inc
cmp
pop
xchg
fdivr
add
adc
test
cld
push
(bad)
lea
test
call
cmp
add
xor
xor
call
add
jge
dec
call
(bad)
lock
leave
push
jae
push
jge
jnp
lea
add
add
mov
call
and
shl
fs
in
sub
in
in
out
jnp
loopne
fsubr
and
or
rcl
and
dec
pusha
jb
mov
push
dec
mov
leave
imul
dec
pusha
rcl
or
push
mov
gs
lods
or
and
mov
push
and
inc
sub
cmp
xchg
or
sbb
and
call
cmp
lock
inc
hlt
test
and
stc
into
xchg
xor
lock
ins
shl
in
movs
in
sub
xor
test
call
call
out
mov
leave
jae
inc
xlat
pop
rcr
mov
dec
in
ret
movs
in
pop
pop
xchg
lds
pusha
xor
in
hlt
mov
cwde
add
mov
or
call
imul
mov
test
je
adc
dec
push
lea
mov
mov
add
xor
xor
out
mov
ror
je
test
in
mov
fadd
in
adc
pop
fsin
mov
inc
jmp
rol
(bad)
pop
nop
dec
es
cld
(bad)
pop
mov
pmuludq
mov
loopne
and
push
jne
cmp
adc
cs
fcom
stc
cmp
hlt
mov
neg
add
ror
jl
call
mov
inc
add
push
adc
pop
add
je
rep
mov
or
jmp
xor
stos
adc
push
adc
pop
mov
jge
jne
add
sbb
adc
retf
dec
cmp
ret
jp
adc
aas
out
enter
test
pop
lock
push
pop
(bad)
enter
pop
xchg
mov
mov
ret
sub
mov
push
push
jb
push
push
mov
clc
jge
xor
(bad)
cmp
jbe
cmp
jb
jmp
sbb
jae
pop
nop
add
(bad)
lock
pop
jg
push
test
ret
inc
rep
jmp
mov
mov
add
sbb
inc
clc
pop
(bad)
hlt
nop
pop
js
add
sti
or
je
xor
and
mov
push
mov
mov
add
add
pop
mov
mov
dec
add
and
lods
add
cmps
and
mov
shl
enter
mov
cld
aaa
dec
test
cwde
mov
mov
call
call
hlt
xor
xor
clc
clc
cld
fcom
mov
add
cmps
add
pop
and
hlt
add
out
inc
in
fst
add
leave
ret
nop
mov
or
in
ret
or
push
sub
dec
push
loope
cmp
test
push
adc
inc
jo
xchg
stc
sub
out
fld
and
mov
pop
popa
add
outs
push
out
add
add
in
add
add
je
stos
out
sub
mov
daa
and
sub
push
mov
push
out
cmps
jmp
xor
cmp
xchg
pop
fs
call
sbb
imul
dec
call
cmps
jmp
cwde
test
(bad)
mov
mov
invd
add
xchg
mov
push
add
pusha
fs
gs
dec
xchg
or
xor
push
adc
pop
mov
push
push
push
or
pop
mov
push
(bad)
jle
popa
(bad)
pop
in
cmc
ret
sub
aad
out
lods
pop
sbb
cmp
ja
icebp
mov
shr
ja
add
sub
dec
cmp
push
and
std
outs
fnstsw
dec
pop
pop
mov
imul
mov
jmp
xlat
mov
push
jmp
adc
jne
jg
rcr
loopne
dec
movs
aaa
sbb
call
mov
call
mov
test
jne
int
cmp
jp
je
xchg
imul
je
nop
jmp
mov
adc
xor
pop
mov
pop
jmp
push
es
ss
add
ja
pop
sbb
mov
ds
jne
ja
or
cmp
push
or
int
sbb
inc
inc
test
(bad)
or
or
scas
or
mov
mov
lock
inc
push
jmp
push
pop
pusha
cdq
mov
(bad)
clc
xor
daa
pop
adc
aaa
clc
xor
mov
jl
adc
outs
mov
mov
neg
adc
jne
scas
mov
ret
jnp
scas
or
fstp
cmp
xor
pop
pop
pop
icebp
ret
adc
(bad)
pop
pop
push
lea
mov
popf
sub
add
les
mov
jnp
mov
not
je
jmp
xor
mov
jnp
xchg
lea
or
(bad)
loope
(bad)
mov
mov
xor
fsub
sbb
cld
add
dec
fimul
and
xchg
fstp
push
or
xor
dec
jo
pop
bnd
mov
push
pusha
ret
add
les
cmp
or
pop
bnd
outs
clc
jno
inc
add
test
jne
xor
fld
add
pop
inc
add
lock
clc
sbb
mov
outs
sub
jecxz
and
xchg
xor
mov
mov
fmul
ins
pop
lock
push
cmp
sbb
lahf
adc
dec
cs
jne
mov
cmp
(bad)
adc
mov
test
sti
and
push
jnp
fcmovu
inc
and
je
cmp
jne
inc
data16
push
cmp
(bad)
jecxz
pop
fadd
fmul
cmova
cld
fild
call
inc
adc
cmp
je
xor
or
jo
and
adc
cmp
mov
pop
popa
adc
dec
sub
mov
cmp
pop
pop
loope
jbe
imul
inc
inc
dec
sti
out
lods
cwde
(bad)
or
clc
pop
aaa
adc
mov
fadd
push
or
push
clc
cmp
je
mov
imul
inc
fdivr
pop
add
pop
in
push
jns
mov
mov
sti
je
sbb
add
mov
or
mov
jecxz
cmp
cmc
ror
iret
or
pop
adc
pop
pop
imul
(bad)
addr16
lea
adc
ins
xchg
adc
(bad)
in
jl
pop
add
cmp
icebp
ja
xor
adc
mov
les
fmul
inc
inc
cmp
inc
push
jle
jl
inc
aam
cmp
mov
(bad)
jmp
or
push
lds
(bad)
imul
(bad)
cmp
jns
test
or
jb
movs
adc
loopne
test
in
push
dec
or
inc
cld
cmp
jo
mov
jbe
pop
arpl
(bad)
(bad)
mov
mov
cmp
jbe
cmp
lods
or
push
inc
push
dec
in
popa
mov
cs
cld
push
je
lds
mov
test
adc
push
mov
sbb
fidivr
emms
or
(bad)
aad
and
into
imul
xor
xor
retf
add
sub
dec
inc
xchg
push
mov
stos
ins
mov
repz
pop
sub
dec
push
ja
xchg
dec
push
icebp
push
push
push
pop
inc
mov
sbb
fiadd
xor
mov
mov
loop
inc
inc
cmp
dec
inc
mov
aam
arpl
push
mov
push
jp
cmp
icebp
jmp
jle
or
ret
cmp
ins
jo
sbb
cmp
cmp
mov
out
mov
mov
jae
sbb
or
adc
mov
cmp
(bad)
xor
or
mov
push
sbb
or
dec
fs
jge
fst
pop
jb
pop
jmp
in
inc
add
mov
cmp
(bad)
(bad)
(bad)
call
cmp
jl
cmp
jg
add
mov
inc
cmp
jne
mov
popa
cmp
movs
mov
(bad)
mov
push
push
dec
sub
nop
mov
jge
fcmovnb
add
dec
or
(bad)
pop
out
loop
outs
mov
jle
push
dec
pop
div
fwait
test
ins
data16
dec
or
sbb
outs
sbb
movs
cmp
dec
cld
jmp
and
or
push
mov
jae
in
inc
or
jne
(bad)
bound
scas
push
loopne
fcmovnu
cmc
clc
lods
or
lods
pop
rol
pop
adc
psadbw
jmp
mov
push
push
dec
xchg
ret
aad
ror
xchg
add
adc
(bad)
js
dec
mov
cmp
xor
inc
pop
ss
inc
loop
retf
in
and
cwde
nop
mov
fisttp
add
cwde
aaa
mov
loopne
mov
adc
pop
fs
cmp
sbb
jns
jmp
push
sub
outs
add
jmp
std
jmp
sar
arpl
mov
pop
test
jmp
mov
add
outs
mov
mov
ins
mov
outs
loope
fcomp
mov
test
cmp
add
(bad)
cmp
leave
push
sti
add
mov
and
cmovge
sahf
jb
add
xor
adc
mov
xchg
mov
xor
fisttp
jge
dec
pop
mov
add
mov
or
neg
data16
mov
not
fimul
sbb
xor
cmp
jno
setne
pop
ds
je
push
icebp
cbw
or
dec
aam
leave
fadd
adc
sbb
mov
pop
in
sbb
add
cld
mov
imul
fisttp
jb
and
sbb
or
mov
(bad)
mov
sbb
and
pmaxsw
inc
in
mov
enter
push
push
push
push
out
adc
arpl
push
mov
cdq
cmps
out
sbb
iret
fcom
cmp
xor
sbb
jecxz
mov
cmp
sub
neg
sub
out
outs
inc
mov
add
leave
add
movs
std
or
push
out
sbb
push
cmps
pop
pxor
push
mov
nop
or
adc
xor
cli
jns
inc
push
pusha
jo
mov
test
dec
and
push
or
lock
sub
dec
push
test
cmp
sbb
es
and
or
retf
mov
ret
pop
dec
test
outs
jno
pop
adc
sub
fist
mov
rep
sbb
cs
rcr
or
mov
sbb
xor
rcl
mov
fld
push
dec
fadd
mov
xchg
or
inc
mov
sub
pop
add
pop
sub
neg
add
sbb
push
das
ret
cmp
ret
inc
cmp
jbe
and
push
mov
xor
pushf
pop
sub
je
push
popf
pop
cpuid
sbb
cmp
adc
push
push
dec
pop
imul
mov
out
fcom
add
clc
dec
cwde
rcr
je
mov
cwde
test
in
cwde
add
test
out
fld
pusha
call
dec
or
sub
sbb
(bad)
push
mov
jecxz
cmc
movs
add
add
sbb
dec
aam
xchg
fistp
out
or
cmp
or
add
sub
xchg
xor
cmp
inc
sahf
dec
push
or
pop
into
(bad)
ins
call
cmp
xor
pop
add
cmc
cmps
ins
lea
dec
dec
sbb
clc
dec
inc
pop
outs
stos
(bad)
into
ins
inc
outs
pop
xchg
test
mov
ins
imul
jns
cmp
sbb
scas
pop
aad
lods
rcl
push
xor
add
or
inc
sbb
dec
mov
ja
add
fnsave
pop
and
std
je
jne
jmp
add
or
xor
inc
push
push
sbb
ins
or
push
cmp
adc
jmp
test
pop
push
cmp
mov
mov
cmp
mov
add
inc
mov
ds
fisttp
mov
mov
(bad)
mov
sub
xor
fxch
sub
loopne
fcom
iret
popf
aam
sar
clc
push
cmp
enter
enter
shr
lods
mov
add
mov
(bad)
imul
mov
aaa
hlt
sbb
mov
mov
rol
add
or
adc
or
sbb
jnp
shl
fist
add
xor
ret
jnp
daa
push
xor
jns
add
loopne
add
mov
adc
cmp
sub
(bad)
mov
in
pop
adc
push
pop
jae
les
add
cmp
mov
shr
push
add
pop
cwde
mov
adc
popa
mov
inc
repnz
push
xor
daa
movs
pop
and
test
dec
mov
shl
lahf
popf
cmp
jne
add
sbb
das
jmp
xchg
loopne
push
cdq
mov
push
pop
mov
and
inc
sub
mov
push
add
push
or
ja
xor
and
xlat
push
push
sbb
adc
inc
fld
fucomi
push
sub
ins
lods
aaa
mov
jmp
pop
scas
in
dec
std
dec
mov
dec
popf
ror
enter
ins
adc
cmp
sbb
xor
imul
mov
push
jbe
out
xor
xchg
jge
cmp
sbb
test
xchg
mov
add
fwait
fwait
adc
mov
sub
div
or
call
mov
pushf
pop
ins
lods
pop
add
xlat
pop
mov
ins
int
and
push
push
(bad)
sahf
fisub
mov
or
or
(bad)
mov
and
pop
or
stos
sbb
(bad)
fiadd
xchg
inc
xchg
pop
xchg
xor
leave
repz
clc
fcomp
adc
push
lea
push
je
push
add
add
and
fwait
out
and
dec
push
pop
outs
dec
ins
ss
jbe
jle
jno
cmp
repz
ja
mov
mov
nop
ja
jo
jp
ss
mov
xchg
leave
mov
ret
out
and
jge
imul
or
jne
pop
mov
into
pop
jg
cmp
add
sub
push
push
push
dec
push
rol
mov
push
outs
ja
and
shl
rol
fsubr
fldenv
jbe
(bad)
idiv
and
movs
mov
push
cmp
jne
sbb
aaa
or
in
in
in
leave
inc
sti
cmp
push
push
push
popa
push
js
push
push
jmp
ss
mov
rep
mov
lea
inc
push
push
xor
outs
aad
mov
std
xor
sar
or
lea
mov
push
(bad)
scas
sbb
pop
xchg
or
cmp
jl
les
sub
mov
jmp
dec
push
mov
adc
lods
(bad)
mov
je
sbb
push
call
push
jb
add
(bad)
or
jl
sub
mov
mov
jne
push
pop
ficom
dec
push
xor
sbb
call
cmp
mov
test
mov
stos
lods
cmp
push
retf
(bad)
push
push
adc
ins
xchg
call
cli
or
xchg
push
or
shl
sub
or
fs
xchg
inc
xchg
pop
lods
or
(bad)
fiadd
jp
adc
repz
adc
xor
push
imul
stos
out
aam
inc
sub
arpl
dec
aam
test
shl
lock
mov
call
daa
cmp
jns
(bad)
cld
shr
mov
imul
or
jnp
sbb
movs
cld
imul
jne
add
xor
outs
push
mov
test
je
movs
(bad)
push
dec
add
cmp
jbe
aas
pop
mov
cmp
(bad)
fwait
mov
jne
mov
sbb
(bad)
call
jmp
dec
add
shl
pop
mov
and
stos
dec
jbe
loopne
pushf
mov
cmps
dec
push
pop
add
push
cmps
pop
adc
jge
adc
push
or
mov
push
or
jne
sub
clc
and
(bad)
hlt
stos
(bad)
jnp
rcl
sar
sbb
fidiv
sub
or
ficom
cli
outs
cmp
adc
cmp
je
sbb
out
jg
mov
mov
shr
not
and
shl
dec
and
and
pop
lods
popf
outs
ss
sbb
aas
inc
mov
mov
mov
or
gs
or
or
or
test
ror
ret
sub
add
mov
(bad)
loopne
mov
inc
mov
inc
and
or
sbb
retf
je
sbb
fadd
or
cmps
or
sub
adc
arpl
jmp
adc
and
push
mov
dec
xor
dec
add
add
ja
sub
mov
mov
push
push
mov
push
inc
scas
mov
or
mov
in
call
pop
xor
push
or
mov
inc
adc
movs
mov
mov
dec
or
cmp
cdq
pop
das
sbb
adc
push
pop
and
bound
or
adc
adc
fs
ja
mov
jecxz
enter
jmp
cs
lds
test
fbstp
sub
ins
or
hlt
dec
mov
out
out
jbe
mov
push
push
jmp
inc
mov
push
jg
push
xchg
sub
(bad)
popf
jl
push
xor
add
sub
jl
das
push
add
push
or
loop
icebp
je
push
sbb
in
push
dec
sub
adc
push
jmp
cmp
add
and
mov
push
les
loopne
cmp
arpl
js
rol
xchg
imul
lds
mov
add
dec
jne
test
jp
cmp
jns
push
cld
adc
add
cli
push
aaa
pop
sub
ja
arpl
iret
aaa
or
inc
adc
loopne
ss
dec
cmp
nop
cld
jge
shr
push
mov
pop
out
cs
cld
lock
push
mov
mov
or
adc
psrad
test
add
arpl
mov
int
xchg
inc
fs
inc
add
jmp
mov
mov
clc
test
stos
mov
icebp
cmps
sbb
or
bound
fstp
lods
data16
int
fiadd
xor
adc
mov
sub
dec
xchg
mov
retf
and
xchg
dec
xchg
mov
mov
jle
in
sbb
or
fnstenv
adc
sub
(bad)
cmp
push
retf
pushw
pop
pushf
sub
pop
cmc
pop
fistp
stc
xor
clc
loopne
nop
pop
mov
leave
es
test
and
jecxz
dec
or
or
add
popa
jg
jns
sub
add
push
movs
or
xchg
mov
in
inc
inc
xor
(bad)
out
pop
hlt
sub
sti
mov
pop
aas
or
aas
dec
inc
pop
dec
pop
jns
gs
pop
push
pop
adc
add
call
iret
pop
out
(bad)
pop
cmp
adc
and
cmp
dec
cs
mov
out
int
bound
dec
test
jae
cld
fild
add
adc
ds
rcl
cld
add
popa
ret
jge
mov
dec
and
pop
xor
test
jmp
(bad)
sbb
adc
(bad)
pop
not
sbb
sbb
sub
push
dec
shl
sahf
dec
je
outs
push
adc
and
ins
and
shr
ja
ja
dec
outs
jmp
outs
mov
ins
mov
mov
dec
cwde
cmp
dec
add
inc
xchg
cmps
jns
push
clts
dec
xor
mov
out
cmp
or
(bad)
into
setns
push
xchg
sbb
dec
xchg
adc
sub
mov
jbe
popa
add
push
pop
mov
jge
(bad)
push
dec
xor
out
mov
imul
mov
or
mov
pop
push
enter
(bad)
mov
or
fdiv
and
sbb
pop
and
not
(bad)
jne
jmp
jnp
add
lock
or
xor
ficom
lock
mov
adc
push
mov
fistp
test
rcl
inc
and
int
ficom
in
movs
or
add
loop
and
jl
and
sti
sub
ret
bound
cmps
and
js
call
xchg
test
in
dec
jp
jo
out
stc
dec
inc
cs
sbb
push
mov
outs
loopne
and
leave
inc
test
and
dec
shr
or
div
push
out
jle
jae
pop
adc
not
movs
xor
pop
dec
lea
jae
add
iret
sub
cmp
pop
fisubr
in
and
mov
xchg
pcmpeqw
in
mov
rcr
sub
mov
in
pop
arpl
sub
or
sub
pop
sub
pop
xchg
gs
sbb
dec
jp
loope
fidivr
cdq
sub
and
pop
jle
retf
or
adc
frstor
xor
mov
or
and
imul
or
stos
mov
push
mov
clc
add
and
or
adc
outs
sub
add
xlat
adc
sahf
mov
ds
sbb
jle
inc
sub
sbb
(bad)
xor
jb
and
add
push
outs
mov
adc
fnstenv
jle
inc
and
ins
add
add
ret
jecxz
pop
sub
gs
mov
fstp
mov
rol
push
mov
cmps
ror
push
(bad)
mov
sti
push
and
xor
icebp
std
add
hlt
add
jnp
(bad)
and
add
xor
mov
sub
je
mov
movs
jo
push
mov
adc
cli
push
repnz
ins
imul
outs
es
sti
inc
or
sbb
add
dec
xchg
xor
adc
mov
xchg
xlat
inc
lods
div
je
push
icebp
jl
jg
daa
fadd
into
sub
push
sbb
hlt
fld
push
shl
fxch
test
mov
jae
loopne
sar
and
addr16
int3
scas
mov
pop
inc
call
adc
cld
sub
je
push
push
inc
sub
lods
jmp
pop
mov
int3
ins
cld
lock
or
or
push
or
fcom
retf
push
clc
gs
lds
inc
ins
inc
mov
xchg
sar
mov
enter
add
std
dec
cmp
jno
scas
push
mov
sub
repnz
add
adc
sbb
ficomp
cmps
sbb
adc
add
add
rcr
int
and
push
cmp
ror
cmp
imul
sub
inc
or
shl
sahf
or
ret
or
push
jmp
(bad)
xchg
xor
test
fstp
ss
push
push
and
or
in
and
xor
lds
sbb
add
lods
or
jns
pusha
add
add
xor
sbb
xchg
sub
jl
sbb
add
and
ffree
sahf
sbb
xor
je
push
xor
jo
dec
or
xchg
mov
fwait
dec
sbb
or
jne
fsub
jne
cmp
or
fadd
fcmovu
jmp
mov
add
pop
mov
sub
inc
jge
hlt
js
and
or
mov
fcomp
stos
sub
or
push
sbb
cmp
mov
or
push
sub
mov
call
push
adc
xchg
cmp
add
push
fadd
or
outs
mov
lahf
stc
inc
sbb
pop
inc
mov
dec
call
(bad)
pop
test
loop
or
xor
dec
sti
clc
inc
or
xchg
sbb
add
adc
or
sub
push
push
xor
xchg
add
mov
call
or
xchg
iret
out
mov
mov
mov
cmp
fisttp
cmp
shr
push
(bad)
mov
pop
mov
xchg
cmc
cmp
sbb
fst
out
sbb
je
sbb
jb
xor
ja
add
mov
adc
push
inc
ds
push
sub
push
sbb
push
ins
xchg
sti
push
or
mov
arpl
sbb
xor
out
in
sbb
xor
push
add
popf
retf
inc
mov
inc
jno
retf
js
mov
lea
inc
dec
sti
fistp
mov
stos
push
inc
jnp
je
inc
push
addr16
mov
fnstenv
or
cmp
(bad)
stos
mov
dec
ins
inc
(bad)
sub
push
das
mov
inc
push
sub
adc
xchg
test
stc
std
daa
clc
push
stos
dec
popa
pcmpgtb
ret
add
adc
fcomp
shl
mov
xor
rcr
cmp
loopne
ja
inc
fcomi
pop
in
lea
(bad)
aad
pop
push
or
cmp
or
xor
jnp
cmp
xor
push
push
mov
jmp
ins
mov
jmp
(bad)
sub
add
ror
push
movs
fiadd
jmp
test
push
add
(bad)
repnz
hlt
into
outs
inc
adc
div
jl
add
push
mov
loope
icebp
sbb
cmp
imul
cmp
and
int3
inc
(bad)
adc
add
mov
loopne
lods
mov
inc
jmp
cmp
mov
jge
add
add
adc
(bad)
(bad)
ins
or
mov
stos
inc
or
(bad)
cmp
lea
xor
sbb
xor
pop
cmp
mov
jb
dec
mul
or
or
adc
idiv
add
add
bound
mov
mov
retf
or
not
ins
add
sub
sub
jmp
or
mov
mov
sub
cmp
pop
ja
sbb
jp
jmp
pushf
mov
xchg
cld
jb
add
fist
retf
push
add
pusha
lods
test
sbb
movs
and
adc
xor
push
jmp
mov
scas
pop
dec
out
cld
cli
mov
jmp
add
sbb
jbe
sub
dec
xor
sub
shl
ret
jbe
mov
xor
arpl
je
mov
loopne
int
setne
sbb
pop
dec
mov
pop
jb
mov
or
sbb
loop
and
xor
sbb
mov
inc
mov
test
nop
leave
inc
or
jmp
jb
and
ins
sbb
xchg
dec
ror
or
bound
mov
mov
or
adc
push
push
mov
or
xchg
cmp
iret
test
push
adc
cmp
mov
sti
sub
adc
xchg
dec
ror
ins
or
icebp
call
cmp
out
xchg
add
loope
jne
and
push
loopne
outs
pushf
and
pop
pop
fld
add
rol
ss
cmp
sub
shl
sbb
(bad)
outs
call
xchg
sub
je
nop
push
std
cld
fcom
fidivr
movs
cwde
je
sub
pop
add
push
lock
out
sar
mov
adc
or
scas
pop
adc
imul
push
lea
push
lds
push
mov
cli
leave
retf
add
jne
retf
or
rcr
push
addr16
add
sub
lock
add
test
or
fimul
enter
add
jne
pop
pop
jbe
inc
mov
aaa
int3
sti
mov
out
xchg
ds
loop
hlt
mov
adc
in
and
or
out
gs
mov
ja
sub
inc
push
mov
push
push
cld
nop
or
inc
mov
inc
popf
fnstenv
mov
out
jbe
outs
cld
ins
push
(bad)
jns
push
iret
mov
mov
push
push
jbe
ror
xor
push
or
and
mov
out
mov
mov
sbb
push
mov
adc
add
dec
mov
cs
mov
inc
in
rcl
(bad)
and
(bad)
cmp
test
push
add
lea
aaa
fist
or
push
rol
mov
sbb
adc
and
and
and
push
jbe
iret
jb
push
adc
inc
xor
jl
sub
aaa
(bad)
cmps
bound
sbb
pop
mov
push
mov
add
popa
and
adc
push
ss
fwait
inc
mov
dec
hlt
jno
inc
dec
sahf
push
dec
mov
mov
loop
lds
mov
pop
sti
jb
jmp
mov
pusha
popf
inc
and
cli
push
sahf
pushf
cmps
mov
je
data16
int
pop
(bad)
int3
jp
dec
push
cmp
je
bswap
fist
movs
jmp
and
jne
push
jmp
xchg
std
stos
ins
push
cld
add
sbb
push
mov
cmp
mov
and
and
sub
xor
rol
inc
pop
outs
jns
jne
mov
data16
mov
mov
xor
mov
jb
and
jmp
fs
push
pop
iret
mov
notrack
inc
call
das
sahf
inc
xor
push
mov
rol
in
jae
scas
out
or
call
out
push
iret
leave
push
movs
mov
push
test
pop
rol
leave
mov
fst
xor
lea
add
ret
int3
sub
out
outs
stos
mov
add
cli
loopne
sbb
inc
cmp
dec
cmc
mov
cmp
jbe
lahf
inc
inc
xor
mov
push
mov
mov
inc
jb
mov
call
std
xchg
dec
push
mov
ja
lea
mov
loope
inc
inc
inc
dec
jne
mov
and
lahf
in
pop
jp
test
add
neg
(bad)
cld
ficomp
push
mov
retf
push
fwait
stc
mov
push
push
xchg
mov
es
lahf
mov
mov
jnp
test
xor
mov
pop
(bad)
aaa
jmp
adc
in
dec
dec
loopne
or
add
mov
push
sub
out
(bad)
jmp
push
and
je
ins
sub
mov
sbb
sti
rep
and
sub
cmp
(bad)
push
mov
and
sub
ror
mov
cmp
push
cmp
std
jo
(bad)
add
push
imul
pushf
in
pop
or
rol
jbe
mov
test
inc
fs
jo
or
push
js
jmp
inc
jmp
sbb
dec
sbb
mov
push
aad
dec
xchg
xor
add
out
popa
sbb
cmp
push
xor
leave
mov
xchg
mov
xlat
int
(bad)
jmp
retf
into
dec
jne
nop
and
dec
jnp
rol
mov
movs
push
gs
je
idiv
sub
adc
adc
lods
mov
sub
les
jbe
call
fcmovnbe
outs
xor
mov
adc
pop
imul
adc
fxch
xchg
pop
fsubr
push
or
cmp
lods
cmp
inc
inc
or
fwait
cmp
fnsave
(bad)
adc
or
mov
in
aam
push
loopne
fild
les
mov
dec
add
mov
adc
mov
clc
or
xor
xor
je
or
inc
add
sub
dec
lods
and
sub
(bad)
mov
dec
xor
pop
stos
push
and
sbb
cmp
mov
lea
jnp
mov
sbb
adc
or
push
ret
xchg
add
int3
adc
add
ss
call
mov
cs
jne
xor
pop
cmp
pop
icebp
sbb
add
stc
pop
repnz
push
and
jbe
pop
mov
inc
imul
and
lods
jns
cmp
jo
jo
test
pop
add
imul
xor
jns
jmp
sub
inc
clc
xor
mov
pop
mov
ret
and
sub
push
add
data16
cmp
and
loopne
test
(bad)
enter
xchg
pop
ss
enter
loopne
or
cmp
mov
call
jp
nop
add
inc
arpl
or
push
sbb
jp
sbb
fs
(bad)
dec
mov
ret
xchg
push
push
sub
icebp
jl
push
or
sbb
pop
sub
mov
push
test
and
cmp
pop
xchg
loope
jg
xor
xor
adc
and
sbb
int3
mov
push
jge
(bad)
paddb
lods
add
sub
xchg
inc
push
dec
add
sbb
inc
push
or
xor
and
ss
add
enter
ins
outs
mov
sahf
sbb
jo
mov
adc
inc
mov
sahf
cmp
sub
jp
and
push
adc
setns
pop
nop
adc
sbb
push
sub
(bad)
mov
push
cmp
es
jmp
cmp
mov
jmp
cdq
out
lock
pop
imul
js
sar
adc
sbb
pop
mov
dec
in
mov
sub
enter
adc
or
dec
xor
inc
test
inc
dec
inc
and
loope
cmp
pop
stos
jne
push
and
xchg
call
dec
dec
addr16
movs
adc
cmp
mov
push
pop
cmp
je
aas
and
sbb
push
or
aas
cmove
dec
adc
add
pop
adc
or
int3
jo
add
inc
pop
and
lea
adc
mov
sbb
adc
or
enter
cld
mov
mov
cmp
shl
fistp
mov
add
dec
jge
shl
xchg
inc
or
mov
mov
mov
popf
jo
dec
retf
xchg
inc
les
ror
sahf
xor
jae
mov
bsf
mov
js
ins
sbb
pop
retf
jbe
fisub
jl
push
stos
mov
push
dec
fnsave
push
enter
scas
call
jl
or
repnz
ffreep
jne
push
adc
sbb
test
addr16
in
cmp
inc
js
sub
les
(bad)
jle
rol
dec
cmp
and
retf
leave
dec
sub
dec
cmp
mov
push
mov
lods
pop
test
xchg
addr16
movs
mov
xor
push
sti
inc
and
sbb
push
cmp
and
dec
push
and
and
pop
mov
fcomp
jg
(bad)
jle
or
sub
outs
neg
aaa
lea
mov
or
mov
data16
ds
xor
sub
mov
xor
in
and
inc
addr16
xchg
add
pop
addr16
div
cli
jp
sub
mov
dec
or
push
jle
in
cmp
xchg
pop
ror
sbb
sub
hlt
cmp
je
mov
in
jmp
shl
stos
xor
sub
push
mov
ret
and
test
mov
push
fcom
sub
mov
mov
cs
add
or
ret
add
xchg
adc
stos
data16
add
mov
sahf
mov
add
mov
loop
sbb
push
push
dec
mov
xchg
inc
jmp
ret
aaa
test
loop
push
mov
add
not
inc
neg
cmp
in
or
stc
daa
cld
cmp
je
mov
out
jmp
mov
stos
fmul
frstor
mov
jno
aam
pop
add
xor
lods
jae
clc
push
and
in
mov
jo
xor
ficomp
mul
sub
or
jne
sub
xor
dec
mov
mov
cdq
or
inc
sbb
fldenv
fcmovne
push
in
or
add
pop
fsubr
jle
add
sub
dec
inc
or
push
cmp
inc
inc
mov
mov
mov
(bad)
or
call
inc
cmp
pop
pop
or
inc
sub
js
and
cmp
je
cmp
inc
push
cmp
xchg
stos
push
jl
out
rcl
popf
inc
cmp
fwait
js
pusha
dec
add
iret
sbb
pop
sub
lods
cmp
jge
outs
push
mov
imul
ror
and
out
imul
ret
jae
sbb
push
cmp
adc
aam
sti
add
add
pop
fimul
pusha
call
mov
or
hlt
pop
pop
xor
xor
mov
push
call
leave
or
pop
and
sti
sbb
push
cmp
nop
cmp
jl
mov
push
adc
fs
pop
mov
je
fs
jmp
cmp
stc
cmp
ds
inc
test
cmp
cmp
push
cmp
xchg
pop
dec
dec
les
xor
imul
sar
in
or
sbb
add
pop
fsubr
xchg
push
pop
into
add
(bad)
mov
push
cmp
ja
aam
fwait
mov
and
leave
(bad)
xchg
ror
jp
add
rcl
fst
sub
inc
xor
cmc
mov
nop
loopne
sub
mov
nop
pop
sbb
rcr
jge
cld
cmp
cmp
pop
mov
add
jmp
int
scas
mov
ja
jg
inc
jo
mov
xchg
inc
xor
inc
sub
or
push
sub
push
push
dec
psubq
sub
sbb
les
and
cmp
daa
add
and
ret
pop
mov
stc
and
test
in
mov
mov
repnz
add
int
xchg
dec
nop
sar
sub
adc
adc
ins
cmp
push
mov
add
cld
mov
inc
dec
pop
push
mov
jmp
xchg
jo
outs
cmp
push
adc
add
sub
and
xchg
mov
outs
std
pop
rol
test
sub
int
jne
dec
add
inc
mov
retw
sbb
mov
mov
ror
fsubr
jecxz
sar
pop
xchg
inc
pop
add
(bad)
and
je
lods
adc
xlat
retf
mov
jmp
sub
jbe
fdivr
(bad)
jae
dec
jl
loope
cmp
leave
jne
retf
ret
je
mov
or
mov
movsx
sub
in
sub
fsub
imul
cmp
je
ss
sbb
xchg
imul
mov
xor
adc
fs
scas
pop
sub
mov
pop
or
ss
add
mov
in
sbb
cmp
add
inc
jle
cmps
mov
lahf
jne
sbb
call
jge
xchg
jo
sub
push
aad
out
fdivr
jae
ds
xor
shl
jno
call
mov
bound
add
test
add
push
push
inc
dec
mov
mov
ret
xchg
or
push
mov
push
mov
aam
xor
int3
mov
xchg
inc
mov
mul
(bad)
add
pop
mov
xor
jl
inc
inc
rol
mov
or
stc
push
repnz
or
adc
add
(bad)
push
rol
(bad)
or
fcmovnu
shl
das
fstp
cld
and
ret
mov
hlt
and
jl
cld
jo
add
fmul
and
(bad)
mov
sbb
ss
jb
cmp
loopne
push
cdq
daa
xlat
inc
sub
jae
clc
cmp
addr16
or
loopne
mov
scas
or
sbb
not
leave
repnz
mov
lea
adc
mov
mov
push
cmp
(bad)
jle
test
cmp
or
push
xor
add
stc
add
and
add
outs
(bad)
pop
xor
inc
add
add
xor
int3
cmp
into
push
or
adc
add
adc
arpl
fimul
mov
ret
add
pop
(bad)
lea
inc
pop
in
xor
(bad)
mov
add
sub
mov
adc
and
xchg
(bad)
mov
adc
(bad)
cmp
jb
call
iret
aas
jl
jmp
or
cmp
or
aad
pop
mov
push
mov
addr16
arpl
sub
int3
mov
push
push
mov
add
jmp
pop
shl
add
xor
inc
add
adc
fisttp
mov
test
or
fisttp
add
loopne
xchg
mov
repz
xor
inc
push
stos
or
push
aaa
mov
stos
xor
jb
dec
or
mov
rol
add
push
fwait
mov
and
das
inc
bnd
sahf
ins
aas
push
fwait
xor
ds
adc
push
out
jne
or
add
or
cld
imul
cmc
daa
adc
call
push
rol
lock
rcr
adc
adc
in
push
mov
rcl
(bad)
aaa
pop
jecxz
sbb
iret
jb
jnp
leave
jae
and
out
push
adc
fild
mov
inc
mov
inc
mov
neg
add
pusha
push
aaa
mov
add
xor
mov
cmp
mov
add
adc
mov
ficomp
or
xor
not
pop
movs
test
adc
leave
clc
inc
imul
test
stos
ss
push
(bad)
mov
sub
in
dec
dec
mov
dec
push
popf
sbb
sub
cld
mov
cli
mov
push
xor
(bad)
xor
hlt
iret
dec
mov
xor
sub
push
adc
dec
lds
clc
jb
loope
loope
sbb
inc
aad
aaa
add
loopne
mov
or
jnp
in
dec
sub
and
cli
sub
movs
das
inc
sbb
enter
lea
mov
mov
adc
ss
and
jmp
inc
mov
push
dec
mov
pusha
leave
std
mov
sbb
fisttp
aad
mov
das
lds
ds
ror
pop
or
loope
test
or
fwait
inc
fcomp
push
jb
adc
in
cmc
push
sbb
xor
push
cmp
mov
pushf
xchg
jno
xor
push
adc
xor
push
inc
(bad)
test
xchg
push
call
mov
mov
pop
and
fcmovnbe
sti
pop
sub
bound
or
xor
jge
rcl
fwait
lock
clc
mov
adc
add
or
rol
xchg
popf
jle
imul
and
sub
icebp
cs
jmp
ins
adc
sbb
jl
and
pop
sub
xor
stos
push
jne
xor
test
pusha
daa
adc
mov
lods
mov
sub
stos
outs
sbb
in
jbe
add
in
fisttp
jge
div
or
or
test
fmul
lock
mov
cmp
in
sar
mov
adc
(bad)
lea
jmp
dec
shl
lock
add
jae
retf
add
bound
pop
sub
mov
xor
mov
arpl
loopne
mov
dec
mov
lea
sub
mov
lea
rcl
mov
cmp
movs
sub
scas
add
push
push
mov
ds
and
xor
fwait
sub
add
cmp
outs
out
ja
adc
push
push
int3
add
push
(bad)
sti
fimul
fisttp
or
sub
inc
pop
out
ins
outs
iret
or
xor
xchg
test
loopne
fidivr
mov
xor
cmp
rol
add
fadd
push
call
or
(bad)
adc
js
cmp
push
addr16
add
add
call
hlt
cmp
sbb
jb
jno
mov
and
jge
mov
or
sbb
retf
mov
adc
pop
push
es
xor
imul
pop
push
and
mul
cmp
mov
jae
jmp
lahf
mov
inc
and
or
mov
or
ins
and
cmp
inc
sub
ret
repz
sub
adc
pop
inc
scas
and
fisub
test
pop
mov
adc
adc
inc
test
(bad)
int3
call
ror
add
jb
inc
cmp
es
retf
retf
loopne
inc
mov
(bad)
push
add
pop
mov
or
inc
jp
cmp
adc
shr
fistp
mov
scas
in
bound
pop
add
enter
jl
fcomip
imul
retf
cmp
sti
in
les
mov
add
retf
fs
cmp
add
add
aam
inc
repz
mov
(bad)
imul
lock
push
sub
cdq
sub
adc
movs
les
sbb
ins
mov
mov
xchg
out
push
xor
push
lea
imul
add
jmp
test
sar
ror
sbb
or
aas
arpl
jb
and
xor
popf
xchg
adc
pop
xchg
ds
or
ins
jne
es
mov
sub
adc
push
push
sti
xor
dec
pusha
(bad)
pop
sbb
je
mov
movs
cmovnp
aas
daa
js
sbb
ja
push
cmp
pop
adc
xor
jne
cmp
sbb
and
jne
scas
sub
and
mov
cvttps2pi
mov
mov
shl
push
adc
dec
sbb
ror
cmp
aam
or
or
sbb
or
inc
sbb
ror
inc
adc
adc
xor
loope
popa
add
add
cmp
mov
xor
sub
sbb
add
iret
or
adc
not
mov
or
mov
inc
repnz
adc
fwait
stos
mov
mov
adc
pop
jge
jbe
loopne
mov
add
jl
enter
and
adc
add
ja
mov
scas
sar
sbb
sub
mov
loop
shl
stc
push
pop
jl
push
mov
fsin
pop
and
(bad)
cli
push
pop
test
(bad)
out
pop
xor
fdiv
or
jl
pop
shl
les
push
inc
ja
jnp
mov
imul
clc
pop
mov
fistp
lock
push
jne
pop
mov
into
sub
sbb
dec
or
pop
pop
sbb
das
sbb
and
adc
stos
jle
adc
push
adc
sub
retf
rol
and
xor
stc
xlat
(bad)
arpl
ins
pop
cmp
push
jg
int3
popf
jmp
pop
adc
cdq
sbb
adc
jnp
jbe
jge
xor
push
jne
aaa
sub
lods
sub
push
call
push
push
fild
jmp
jb
mul
(bad)
aas
outs
dec
pusha
jne
test
daa
cmp
fdiv
int
rcr
push
jge
lea
xchg
and
pop
pop
retf
mov
fstp
(bad)
or
aam
les
xchg
test
ret
dec
(bad)
inc
pusha
dec
hlt
xchg
sub
je
rcr
jne
add
and
pop
shr
pusha
or
sub
adc
adc
loopne
dec
or
add
sbb
push
rol
mov
sub
xchg
pushf
lods
fild
icebp
cs
imul
push
jge
mov
push
rcr
xor
in
ja
jge
das
mov
jns
test
mov
push
mov
and
int
push
pop
push
add
adc
ins
in
retf
mov
adc
cmpps
and
xor
test
xchg
sbb
(bad)
jne
addr16
sti
jbe
and
pusha
jmp
call
xor
mov
jno
adc
adc
es
inc
and
add
dec
fwait
mov
mov
add
sub
adc
mov
sbb
xlat
icebp
mov
and
pop
mov
ret
mul
scas
pop
add
push
mov
or
and
jmp
shr
pop
xlat
(bad)
fmul
leave
jne
div
das
and
out
adc
push
cmp
ja
jb
sub
dec
sub
pop
arpl
sbb
adc
fidiv
fadd
fldenv
test
rcr
jl
or
inc
or
mov
push
outs
cmc
dec
js
adc
adc
ins
add
stos
push
push
shl
pop
push
adc
mov
int3
movs
sbb
(bad)
pushf
test
cmp
cmp
sub
in
ja
fidivr
xor
add
jmp
mov
xor
push
iret
aaa
inc
cmp
inc
pop
in
(bad)
loopne
cmp
pusha
push
mov
sbb
shl
js
xor
mov
cwde
mov
iret
out
mov
fadd
xchg
lock
call
xchg
test
jmp
les
ja
sub
mov
ins
pop
test
out
mul
pop
add
pop
rcr
add
loope
call
pop
mov
sar
shl
add
sti
inc
jns
jg
xchg
daa
sbb
adc
jecxz
aaa
and
xlat
lea
fsub
gs
mov
int
aaa
test
mov
out
test
(bad)
or
clc
lods
inc
aas
sub
or
mov
sub
cmp
ja
faddp
out
pop
push
js
lea
ror
jbe
push
mov
pop
sbb
push
in
pop
push
popa
loop
pop
xor
xchg
hlt
imul
out
push
xor
or
xchg
int3
arpl
fidivr
jne
call
add
mov
lea
or
sti
fidiv
mov
sub
add
adc
(bad)
xchg
add
sbb
cmp
or
rol
dec
cld
mov
cwde
mov
(bad)
stc
aam
lods
jnp
cmp
mov
ins
jbe
retf
sar
pop
xor
es
mov
call
call
add
je
call
ja
bound
shr
push
mov
inc
adc
ins
inc
sbb
mov
ror
dec
cmp
or
in
pop
jge
jnp
xor
pop
inc
cmp
cmp
and
movs
xlat
jbe
jo
and
pop
xor
pop
iret
repnz
int3
outs
les
js
int3
repnz
pop
lods
pop
ror
jbe
enter
das
fmul
mov
mov
and
lea
movs
xlat
lds
mov
(bad)
test
mov
clc
xchg
(bad)
cs
imul
jmp
je
ds
add
dec
bound
pop
test
popa
cvtpi2ps
mov
popf
hlt
pop
adc
jl
test
sbb
add
jle
pusha
cmps
push
pop
movs
push
test
pusha
stos
cwde
add
sub
pop
jecxz
push
mov
pop
xor
cdq
sub
inc
jnp
inc
pop
or
inc
and
xlat
mov
xor
imul
pop
mov
ret
or
pop
hlt
or
inc
bound
jbe
push
rol
rcr
sub
loopne
fwait
fwait
add
fs
mov
fwait
add
jns
cmp
test
out
movs
cli
sti
dec
add
xor
cmp
mov
stos
(bad)
repnz
pushf
cmps
add
sub
jo
int3
push
repnz
and
jo
loope
gs
add
scas
jg
addr16
je
add
xor
jl
cmp
outs
jne
scas
xor
stc
mov
popa
mov
and
push
ss
mov
sbb
jb
cli
xor
mov
data16
or
arpl
ins
or
add
add
or
adc
mov
arpl
mov
mov
push
cld
das
movs
shl
(bad)
pop
call
pop
cmp
jle
push
sbb
sbb
adc
pop
rcr
retf
cmp
add
test
lods
pop
pushf
mov
and
int3
push
sti
inc
pop
jns
mov
cld
push
mov
mov
jmp
add
jge
lea
push
and
pop
mov
out
popf
cmp
shl
inc
push
push
adc
pop
adc
int3
mov
lods
in
sbb
and
add
jo
cmp
leave
push
cmc
ja
sub
das
mov
test
into
fwait
lea
fsqrt
loopne
in
cld
test
test
sub
and
add
xor
dec
sub
into
(bad)
ror
test
xchg
retf
xchg
add
test
ins
fidiv
adc
dec
pop
pop
test
sbb
push
push
or
mov
inc
jmp
aaa
cdq
push
mov
test
and
test
jg
jl
ss
push
jae
push
rol
pop
jmp
and
inc
inc
fdiv
aas
adc
xchg
push
mov
add
mov
sbb
or
xchg
lea
jne
and
dec
jge
pop
dec
jo
push
push
je
or
push
push
je
lea
fcmovb
xor
sbb
mov
test
mov
dec
jmp
aad
mov
mov
fs
cwde
outs
xor
mov
cmp
je
arpl
mov
and
aas
dec
cmp
inc
inc
lds
mov
sub
pmulhuw
dec
sub
cmc
imul
test
push
xchg
loope
add
je
stos
sub
xchg
push
or
fsub
xor
mov
lea
addr16
shl
add
(bad)
js
inc
and
and
and
pop
popf
add
or
fld
xor
inc
mov
ret
jo
data16
scas
nop
imul
xor
fwait
int
aam
cmp
inc
push
inc
popa
mov
dec
sub
and
retf
xchg
test
pop
jne
mov
xchg
cmp
cmp
pop
daa
fdivr
xchg
out
jl
je
lods
mov
mov
popf
adc
jnp
and
movs
adc
ins
cmp
fmul
iret
mov
adc
cmp
nop
loopne
inc
pop
pop
je
leave
adc
push
daa
jg
test
xchg
fild
mov
sahf
in
lahf
push
push
pop
shl
(bad)
rcl
sbb
sub
inc
dec
cmp
and
out
cmp
jl
das
or
xor
cmp
shl
jge
unpcklps
adc
mov
rcr
add
inc
das
stos
adc
int
add
nop
pop
sub
out
stos
test
add
add
and
inc
das
stos
adc
scas
mov
or
cmps
imul
inc
sub
das
xor
adc
add
dec
in
and
das
lods
mov
jnp
cmp
pusha
stos
mov
mov
or
xlat
or
add
or
das
enter
lods
mov
mov
jne
push
pop
push
add
xor
je
test
inc
das
and
je
add
in
sbb
inc
das
addr16
push
icebp
adc
add
mov
push
push
lods
or
les
js
mov
push
xor
or
xor
je
inc
xor
cli
dec
fdivrp
lea
lea
or
stc
int3
dec
sub
jmp
fdivr
mov
jmp
adc
push
ss
les
mov
xchg
jno
cmp
add
lock
pop
xchg
or
cmp
enter
in
lods
pop
push
adc
sahf
mov
and
mov
mov
cmp
sub
jno
add
mov
and
sub
mov
push
mov
pop
cmp
adc
pop
inc
jmp
pushw
mov
out
adc
mov
mov
(bad)
into
clc
cmp
mov
push
inc
mov
add
mov
add
mov
inc
cmp
rol
add
sbb
ja
xor
ret
lea
inc
stc
fstp
or
inc
adc
add
sbb
test
jbe
xor
rol
cmp
jb
lea
sti
jb
inc
add
cmp
jb
or
dec
push
ret
(bad)
inc
mov
cdq
mov
sbb
sub
pop
inc
and
pop
cwde
in
jmp
push
xchg
sub
pop
jo
or
mov
adc
and
outs
xchg
push
ss
dec
add
lock
cli
cmps
mov
add
inc
loope
and
inc
adc
cmp
mov
clc
in
jle
add
sub
lea
clc
outs
scas
jge
inc
ja
sbb
nop
jae
pop
and
or
sbb
sti
movmskps
inc
les
rcr
push
inc
mov
sti
add
push
mov
mov
pop
and
mov
adc
add
adc
add
mov
not
add
(bad)
lods
int
mov
inc
adc
sbb
pop
xchg
sub
stos
es
cmp
(bad)
js
cmp
std
imul
push
lock
outs
push
loop
xchg
jns
pop
dec
mov
or
push
adc
adc
fldcw
nop
cs
fpatan
sbb
ret
adc
add
adc
mov
stos
jg
cmp
cmp
sti
icebp
imul
add
cwde
test
add
mov
shl
add
xchg
icebp
ins
xchg
lock
and
sbb
jp
or
mov
add
add
fs
inc
inc
jo
rol
or
cmp
jmp
push
mov
lods
mov
outs
inc
in
mov
mov
pop
dec
mov
outs
outs
mov
je
add
je
dec
je
dec
repz
jl
jmp
dec
lock
or
or
repz
jmp
hlt
hlt
enter
fcom
(bad)
pop
jo
outs
arpl
add
cmp
jne
dec
ins
aas
or
retf
pop
mov
push
scas
sar
or
sub
mov
aam
inc
pusha
out
fnstenv
jne
or
mov
(bad)
mov
shr
movs
adc
or
test
mov
adc
adc
add
mov
push
mov
pop
stos
adc
fsubr
fist
xlat
outs
test
fbstp
fs
stos
movs
jmp
pusha
sub
in
fsub
mov
push
mov
or
push
sbb
fisub
adc
pop
xchg
inc
lock
or
hlt
mov
jl
adc
cmp
mov
and
push
(bad)
loop
jle
and
adc
loop
push
pusha
adc
pop
push
pusha
in
sti
test
bound
adc
pop
xor
adc
loope
stos
and
(bad)
mov
loope
push
pop
sbb
push
ret
sbb
imul
clc
or
je
cmc
push
ins
adc
sub
add
mov
in
add
fld
mov
neg
jne
cmp
xor
and
dec
cld
or
adc
ins
sub
mov
or
jmp
and
rol
mov
adc
push
pop
xchg
or
jmp
push
inc
jge
cmp
push
jmp
sub
mov
push
inc
ror
rol
sar
jp
inc
sbb
mov
dec
add
ins
icebp
mov
aaa
out
cmp
sbb
push
mov
fimul
push
mov
pop
pusha
adc
dec
xchg
mov
dec
mov
iret
pop
jne
xchg
dec
into
jl
sbb
add
add
sub
iret
inc
in
cwde
jmp
push
or
mov
ret
cmp
inc
das
mov
sub
fdiv
add
std
mov
mov
sbb
jmp
mov
ins
mov
rcl
cwde
inc
inc
or
jp
adc
push
push
mov
stc
mov
or
sub
xchg
clc
je
dec
pop
push
(bad)
jmp
neg
add
jp
sbb
cmp
imul
and
jmp
jbe
pop
mov
je
inc
aam
nop
lock
shl
enter
pmullw
push
pop
loope
push
add
xchg
or
add
pop
or
ins
push
and
stc
mov
cmp
out
jp
push
int
xor
outs
fs
arpl
push
cmps
iret
add
add
es
xchg
add
pop
sbb
pop
cdq
in
adc
stos
add
xor
and
sub
je
pop
aas
test
es
adc
test
sbb
xchg
mov
adc
inc
popa
sbb
clc
or
pop
dec
adc
leave
cmp
sub
lds
lea
adc
xor
push
arpl
or
es
lods
push
ror
out
push
mov
repnz
(bad)
lea
adc
stos
add
movzx
add
push
pop
add
mov
sub
outs
pop
or
jbe
enter
ss
enter
and
and
and
xor
or
enter
pusha
sub
adc
pop
or
dec
dec
push
push
or
fsub
pop
sbb
and
and
test
xor
mov
test
cs
xchg
cwde
xchg
dec
cs
es
test
sub
pop
shl
and
pop
(bad)
add
clc
ret
cld
(bad)
rsm
dec
jbe
push
add
mov
dec
inc
jle
or
push
add
enter
adc
adc
enter
sbb
lahf
add
or
and
sbb
xor
and
fiadd
add
imul
ja
lods
mov
jmp
mov
ficom
shr
das
retf
pop
sbb
mov
pop
add
push
fist
aas
stos
shl
pusha
mov
cmp
and
sar
jne
adc
add
push
add
sbb
mov
(bad)
lea
ret
nop
loopne
loopne
add
inc
xlat
mov
(bad)
mov
sbb
pop
add
fcomp
xor
lds
fild
fmul
push
inc
aam
lea
fst
pop
sbb
outs
push
xor
es
xlat
adc
or
push
pusha
fld
(bad)
js
sbb
rcl
mov
mov
adc
cmps
cmp
fdiv
loopne
test
ins
add
fdivr
pop
push
inc
adc
rol
cdq
stos
push
adc
xor
stos
(bad)
adc
ins
movs
dec
inc
aad
and
inc
add
cmp
fsub
pop
inc
loopne
dec
inc
cmp
jle
cmp
in
push
das
(bad)
je
inc
cwde
lods
adc
cmp
pop
push
mov
int3
mov
add
(bad)
mov
adc
mov
lods
cmp
je
shl
imul
rcl
dec
mov
jg
int3
cmp
adc
push
jb
loopne
and
jb
add
fcom
pop
in
clc
push
aam
lds
pop
push
dec
pop
(bad)
jne
push
mov
and
ret
mov
jmp
mov
jmp
and
sti
ins
inc
push
mov
mov
push
leave
add
sar
adc
nop
inc
mov
test
jne
adc
mov
and
sar
or
stos
add
sbb
lods
add
mov
test
cmp
push
jmp
pop
xor
push
bound
ss
inc
sbb
inc
sbb
jmp
fcmovbe
add
adc
sbb
jg
dec
push
dec
jne
push
push
jmp
add
jmp
test
fisttp
dec
sar
push
pop
jmp
xchg
mov
imul
sbb
pop
inc
add
xchg
inc
cmp
or
not
aad
xor
add
out
fdiv
mov
sbb
not
lods
mov
or
mov
mov
je
dec
pop
dec
or
adc
ror
cwde
stos
adc
les
or
xchg
imul
addr16
retf
call
mov
loop
lods
push
push
inc
jns
fwait
test
movs
(bad)
push
add
mov
cmp
imul
data16
scas
mov
ret
addr16
sub
stos
or
push
dec
push
and
push
sub
mov
cmc
add
pusha
cmp
(bad)
mov
add
mov
xor
cmc
sub
lea
sub
adc
adc
push
inc
jecxz
mov
adc
add
inc
mov
inc
add
stc
mov
mov
into
jecxz
pop
and
jo
mov
push
es
inc
inc
inc
or
retf
ficomp
push
xchg
jge
add
mov
je
in
inc
cmps
xor
je
jb
push
scas
sbb
(bad)
es
jmp
jo
xor
mov
and
pop
pop
sbb
adc
outs
sub
(bad)
bound
rcl
adc
sbb
stos
cmp
sbb
mov
jae
and
das
jne
pushf
sbb
pop
dec
push
pop
jno
push
ins
xor
xor
ror
add
push
push
jmp
sti
dec
add
je
retf
mov
test
xchg
add
test
idiv
adc
sub
mov
push
cmp
adc
xor
enter
and
push
inc
jmp
push
ret
pop
add
xchg
add
inc
lods
aad
mov
and
pop
cmc
mov
add
icebp
and
mov
inc
push
pop
push
outs
xchg
fidivr
in
(bad)
mov
jns
cli
std
mov
jmp
adc
retf
das
cmp
outs
mov
movs
jle
adc
inc
ret
mov
mov
or
inc
cld
int
inc
jno
adc
addr16
adc
jmp
mov
repz
xor
aaa
loop
sub
sbb
or
add
add
jl
push
xor
inc
sub
push
xchg
stos
sbb
pop
inc
pop
mov
dec
mov
test
ds
mov
xor
je
jne
mov
sbb
pop
or
bndldx
std
pop
push
xchg
mov
pop
inc
jmp
nop
xor
or
mov
ret
add
add
enter
and
or
mov
xchg
addr16
inc
stc
es
(bad)
(bad)
iret
jbe
push
pop
mov
or
inc
dec
fisttp
pop
(bad)
scas
mov
icebp
adc
cdq
add
adc
ja
or
in
push
xchg
cdq
add
ss
adc
aaa
add
(bad)
lds
push
nop
mov
xchg
ficomp
fcomp
cmp
push
add
add
add
mov
ret
in
or
(bad)
mov
daa
je
and
ret
and
cmp
sbb
mov
and
fsubr
(bad)
mov
ins
or
cwde
jge
add
mov
mov
sbb
xchg
ds
das
pusha
out
mov
add
mov
dec
sub
add
dec
mov
dec
fcom
mov
xor
lds
daa
mov
dec
repnz
add
or
pop
sbb
xor
push
jp
ret
sub
push
fwait
inc
add
and
loope
xchg
(bad)
mov
or
pop
push
xchg
push
in
cmp
adc
out
push
mov
mov
jo
xor
stos
sub
pop
add
jne
out
push
xchg
adc
push
jmp
cmp
je
push
add
mov
in
push
cmp
lea
or
mov
int3
repnz
mov
enter
inc
sub
adc
push
mov
enter
pop
cmps
cmp
push
xor
jnp
fs
cld
outs
inc
push
sub
sbb
xor
and
test
or
dec
test
popa
jmp
pusha
enter
lea
mov
sub
push
stos
retf
(bad)
push
push
cmp
xor
das
mov
std
ss
dec
jne
test
cmp
xor
mov
popa
push
dec
and
sbb
pop
call
add
sti
push
fst
cmp
(bad)
out
ins
or
mov
imul
imul
inc
add
imul
pop
adc
movs
dec
and
rcl
pop
add
pop
mov
and
std
out
dec
push
stos
sbb
xchg
mov
je
bound
call
or
pop
push
mov
sti
add
mov
pusha
mov
push
dec
clc
pop
scas
add
add
test
add
mov
jle
es
hlt
cmp
(bad)
in
mov
push
or
or
mov
sbb
pop
mov
inc
or
adc
push
xchg
scas
xchg
inc
in
ret
outs
dec
push
lds
push
mov
push
jecxz
dec
push
in
ss
int3
dec
add
adc
pop
push
pop
inc
jmp
dec
add
shl
aam
xor
rol
xor
and
xor
and
retf
jge
fld
repnz
ret
jmp
(bad)
push
xor
dec
push
sbb
fdivr
jge
dec
jmp
xchg
or
adc
jle
add
stos
push
daa
pop
out
mov
call
mov
add
lds
dec
loop
or
or
and
int3
cmp
mov
aad
and
pop
push
aam
sbb
rcl
add
in
int3
in
fstp
ret
sbb
fldenv
sar
or
cmp
push
(bad)
cmp
cld
mov
test
mov
or
sub
daa
cwde
fidiv
mov
sbb
or
test
sahf
outs
int3
jmp
nop
adc
fwait
push
or
je
call
mov
mov
mov
add
add
mov
ret
inc
fldl2t
and
cmp
ja
add
mov
out
out
(bad)
or
(bad)
cmp
xchg
adc
shl
or
cld
sbb
mov
pop
pop
pop
mov
data16
pop
push
mov
lods
sti
sbb
sbb
inc
inc
push
pop
pop
xchg
push
lock
cs
ins
jp
xor
cwde
xor
les
retf
inc
fistp
mov
jne
(bad)
stos
mov
mov
or
sbb
das
pop
dec
out
loopne
push
enter
push
adc
or
ror
popa
push
cmps
into
mov
nop
mov
jle
test
je
add
es
and
adc
mov
mov
add
std
add
or
add
and
jbe
xchg
cmp
mov
sub
pop
in
sub
pop
pop
cs
push
push
popa
ins
inc
jb
jbe
and
(bad)
xor
xor
dec
dec
dec
outs
outs
je
add
fiadd
adc
add
popa
sub
gs
fbstp
sbb
outs
imul
outs
and
jb
jb
add
and
xor
adc
std
loope
xchg
popf
fild
mov
popf
(bad)
(bad)
call
(bad)
xlat
fadd
popf
xchg
cli
out
loop
sbb
(bad)
mov
imul
add
xlat
rol
out
fisubr
fnstsw
cmp
(bad)
ret
rcl
(bad)
fist
add
mov
lahf
aam
rcr
mov
(bad)
xlat
(bad)
xor
xlat
shl
jbe
(bad)
fisubr
ja
xlat
inc
inc
outs
ins
not
(bad)
fidiv
xchg
fimul
add
(bad)
jg
les
aam
add
mov
xchg
jmp
mov
adc
lahf
sub
fs
div
dec
outs
into
xchg
or
xor
jnp
enter
ins
gs
movs
out
scas
sub
je
jae
add
imul
sbb
sub
(bad)
je
jne
push
xchg
outs
mov
outs
cmp
inc
jne
je
add
(bad)
xchg
nop
test
(bad)
mov
out
dec
je
jb
popa
cmps
push
push
ss
push
cmp
add
pop
daa
jecxz
xor
dec
xlat
dec
imul
jecxz
sub
stc
imul
xor
cs
ins
and
jae
cmp
outs
add
pop
add
ins
xlat
push
test
push
add
add
test
or
ins
xchg
pop
dec
int
bound
sub
jae
xlat
sbb
outs
adc
inc
je
outs
jae
mov
add
dec
pop
or
jmp
pop
rcr
adc
jmp
pop
add
inc
fcomp
cmps
mov
lods
fnstcw
out
ins
fldpi
mov
outs
inc
xchg
push
aaa
fs
xlat
ins
or
inc
inc
push
mov
pop
popa
ja
pop
repz
push
or
push
add
jecxz
or
inc
push
and
outs
inc
adc
jnp
cmp
adc
mov
(bad)
xchg
sar
rcl
lods
nop
in
jg
push
xor
and
in
in
jmp
call
scas
cmps
mov
and
cdq
fcom
mov
inc
mov
jl
das
loope
jns
xor
into
in
mov
jecxz
lods
inc
cld
call
pop
dec
test
adc
(bad)
inc
hlt
dec
call
push
mov
xor
leave
dec
lahf
(bad)
xor
mov
adc
add
stos
mov
sub
jbe
iret
and
mov
daa
scas
jns
mov
xor
std
adc
nop
inc
cmp
cwde
dec
addr16
out
ror
jno
and
gs
jb
stc
dec
jo
std
push
xchg
scas
ins
aaa
cs
mov
and
repnz
push
dec
xchg
jg
daa
popf
push
sub
test
cmps
inc
pop
fwait
cmps
stc
sbb
mov
adc
sbb
push
pop
cmp
bndstx
xor
lea
sub
or
outs
jne
or
push
std
(bad)
push
cmc
add
pop
push
add
add
(bad)
lahf
jecxz
add
and
push
pop
pop
or
aaa
pop
imul
test
push
pop
nop
and
add
dec
mov
out
push
jo
or
adc
xlat
add
add
fnstenv
add
mov
jb
sub
outs
arpl
jae
ins
mov
pop
loop
repz
in
ins
and
int
cmp
fild
push
dec
dec
push
push
adc
and
push
add
dec
inc
mov
sbb
adc
xor
xor
inc
int
lock
loop
jo
ins
push
outs
or
jae
ins
clc
push
outs
sub
popa
pop
nop
gs
jo
jbe
dec
fsub
and
push
mov
or
jae
xor
mov
ffreep
jb
ins
jns
or
inc
add
lods
sbb
outs
je
xor
(bad)
dec
mov
pop
add
cs
(bad)
mov
mov
or
div
sbb
lods
lahf
xor
(bad)
pop
jne
dec
fmul
leavew
adc
imul
les
jb
and
enter
cmp
cmp
ins
out
or
fs
cmp
bound
packssdw
pop
mov
stos
and
sub
sbb
jmp
pop
into
ins
in
mov
lods
ret
outs
pop
push
ins
ins
sub
sub
inc
sti
or
sub
arpl
sahf
sub
sub
outs
push
inc
sbb
ss
cld
add
dec
dec
popa
imul
div
imul
pop
sahf
push
or
rcr
jbe
das
popa
mov
sbb
sti
gs
push
push
outs
or
cmp
ins
add
xor
lahf
pusha
fs
xor
mov
bound
int
dec
lods
daa
aaa
jecxz
push
adc
ja
mov
xor
fs
jo
std
jbe
xor
test
leave
sub
neg
ss
sub
das
pop
push
fdivr
pop
xor
imul
mov
sbb
xchg
dec
(bad)
cmp
aaa
fild
cmp
sbb
xor
mov
and
fild
pop
xor
mov
cs
xor
and
(bad)
ficomp
push
in
adc
cmp
push
dec
pop
dec
in
out
sbb
inc
ja
repnz
enter
xor
pushf
fxch
rcl
mov
ins
sub
sub
xchg
addr16
cmps
scas
addr16
push
xor
je
scas
xchg
ins
imul
rcr
mov
mov
adc
in
sub
xorps
or
daa
or
in
cmp
cs
fbld
jne
xor
ja
sub
inc
xchg
sahf
ins
sub
scas
xchg
sub
loop
(bad)
aas
push
inc
rcl
sbb
sbb
sbb
push
pop
and
and
pop
clc
jmp
and
es
sub
sub
sub
cs
loopne
scas
xor
push
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
mov
mov
pop
pop
pop
pop
pop
pop
pusha
mov
(bad)
call
addr16
push
ins
ins
outs
outs
jo
jb
je
jbe
js
jp
jl
jnp
loope
jle
add
push
or
dec
adc
dec
jne
ss
int
fld
cmp
lock
loope
inc
ins
jae
ret
gs
push
gs
mov
xor
inc
ins
movs
sbb
or
sbb
movs
sbb
sbb
nop
add
xchg
xchg
push
add
add
adc
retf
inc
add
sbb
push
xlat
mov
or
pop
mov
sub
(bad)
(bad)
test
or
xchg
nop
mov
ja
jo
stos
mov
push
push
push
inc
not
shl
dec
pop
pop
push
adc
(bad)
fimul
rcr
gs
je
jp
fcom
jo
clts
fdiv
popa
and
aad
xor
inc
push
int
dec
mov
xchg
add
sub
mov
add
add
adc
add
and
mov
cdq
and
xor
retf
add
add
add
push
mov
xchg
(bad)
and
sbb
add
xchg
sub
adc
das
pusha
mov
add
add
mov
(bad)
dec
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
(bad)
(bad)
(bad)
dec
into
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
dec
loop
(bad)
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
and
dec
movs
mov
add
jg
inc
test
lods
mov
jg
hlt
and
dec
xlat
fsubr
add
dec
and
xor
add
das
das
jns
dec
adc
dec
(bad)
daa
shl
ret
outs
jbe
push
mov
int3
jo
adc
pop
mov
push
in
dec
inc
iret
out
mov
inc
pop
outs
gs
out
(bad)
cs
imul
ins
test
and
addr16
push
push
dec
jnp
jne
inc
inc
aaa
jns
aas
cmp
in
mov
fnstenv
sbb
sub
or
mov
mov
pushf
jl
push
jne
fsubr
pop
mov
jne
inc
jnp
mov
daa
and
add
cmp
fmul
adc
pop
es
scas
or
pushf
jae
lods
mov
ror
mov
sbb
dec
push
push
and
enter
pop
xor
inc
add
mov
cwde
mov
or
mov
aam
nop
pop
leave
outs
pop
inc
sbb
pusha
fisttp
cmp
or
pop
pusha
int
inc
inc
push
mov
test
and
mov
enter
cmp
aas
jb
int3
ret
and
pusha
das
mov
jnp
or
sbb
jge
jge
lods
cmp
xchg
xchg
sbb
mov
(bad)
in
jg
push
add
cmps
pop
pop
test
out
mov
jne
mov
aas
mov
add
aas
mov
mov
pop
rol
js
ffreep
or
les
ffree
pop
lds
mov
(bad)
or
leave
mov
leave
xchg
dec
pop
int3
or
fcom
into
rol
push
jbe
add
add
sub
xor
loope
jns
fmul
call
ret
xor
add
sbb
inc
lar
fcom
movs
jnp
pop
push
add
pop
shl
or
dec
or
or
or
enter
sbb
push
rol
fidivr
pop
xorps
adc
add
pop
and
cmovno
fsub
xor
push
pop
push
pop
frstor
or
ins
stos
and
dec
shl
sbb
(bad)
fsub
jge
xor
or
sub
or
sahf
mov
ss
into
pop
xlat
pop
ret
or
pop
xor
test
pop
add
mov
fnstenv
pop
push
mov
adc
add
in
and
mov
or
dec
sahf
cmp
mov
test
push
adc
jns
enter
sbb
int3
sbb
ins
sbb
or
fdivr
in
in
pop
mov
push
and
pop
and
xchg
daa
(bad)
fidivr
jp
jo
in
cld
test
je
sbb
and
or
aad
test
adc
or
dec
and
add
mov
add
add
movs
sahf
sbb
pusha
cmp
cmps
fild
mov
dec
sbb
jb
or
mov
inc
inc
or
mov
inc
mov
and
ja
iret
mov
in
call
leave
outs
ja
or
add
pop
ficomp
fisubr
xor
nop
fistp
fcomp
loopne
cmp
jle
je
xor
add
or
stc
add
add
jo
xlat
pop
outs
pop
out
jmp
das
pop
or
lock
jmp
add
ja
xchg
std
xor
or
jbe
xchg
sbb
adc
mov
push
add
in
push
add
add
movs
add
in
add
mov
pushf
cwde
xchg
nop
mov
xor
ror
dec
shl
cmp
xor
shl
xor
and
xor
shl
sbb
adc
je
call
jmp
rcr
int3
les
dec
test
cwde
test
add
into
sahf
xchg
aaa
fld
pop
hlt
add
or
jg
sub
adc
leave
out
inc
jo
push
add
xor
arpl
lock
call
push
push
mov
inc
mov
push
stos
test
adc
xor
(bad)
jecxz
cmp
je
je
pop
xchg
add
dec
repz
xor
shl
pop
ja
scas
jnp
dec
mov
repnz
daa
das
add
add
sub
push
add
push
xor
adc
add
add
pop
inc
inc
shl
dec
adc
add
dec
outs
fs
gs
popa
outs
add
adc
imul
dec
idiv
add
rcl
shl
push
inc
js
dec
out
add
getsec
adc
(bad)
xor
mov
adc
xor
dec
gs
push
add
dec
jae
inc
ins
mov
or
inc
jne
data16
dec
and
add
out
std
mov
fs
pand
mov
je
add
mov
adc
mul
(bad)
dec
outs
adc
xor
adc
sahf
cmp
mov
or
mov
jns
push
nop
ins
push
outs
ja
adc
sbb
jo
ja
imul
and
push
jo
arpl
ret
pop
adc
cmp
or
fimul
mov
or
dec
dec
mov
mov
push
pop
inc
and
push
inc
jo
in
push
outs
hlt
pop
outs
dec
push
nop
ins
or
adc
pop
inc
dec
add
pop
xor
inc
xor
loopne
xchg
daa
fimul
adc
xor
(bad)
fmulp
push
imul
jne
push
cmp
pop
mov
adc
adc
push
loope
imul
xchg
jo
cmp
or
jne
jns
mov
or
outs
bound
arpl
and
fwait
int
push
sbb
dec
ja
xchg
push
mov
pop
add
sbb
das
bound
inc
dec
push
cmp
mov
inc
arpl
push
imul
push
mov
sbb
in
int
sub
pop
or
adc
ins
in
push
outs
gs
mov
int
add
push
mov
lods
test
jl
adc
push
jo
test
sub
dec
adc
jp
jae
and
xchg
xor
push
aaa
push
push
sub
ss
(bad)
dec
jbe
pusha
movs
in
jo
popf
adc
mov
data16
dec
dec
xor
adc
inc
in
out
jmp
xor
jo
jg
dec
popa
ins
mov
ins
lods
jnp
pop
imul
arpl
ins
call
inc
gs
cmps
test
fld
dec
inc
dec
or
ret
popa
(bad)
fs
(bad)
push
popa
adc
jnp
mov
cmp
enter
cmc
cmp
inc
mov
pusha
rol
fld
fmul
xor
call
or
or
loope
lods
cdq
into
dec
push
lds
mov
outs
pop
or
shr
add
mov
push
outs
into
inc
jb
dec
adc
add
les
int3
adc
xor
mov
cld
sar
test
inc
fmul
mov
inc
ins
adc
adc
imul
lods
sub
fmul
xor
jl
jbe
clc
and
pop
mov
adc
mov
adc
imul
int3
ins
or
lea
lods
mov
push
push
(bad)
(bad)
pop
sbb
int3
ror
leave
push
sahf
je
jae
fwait
int
push
sbb
aaa
pop
fisubr
pop
iret
imul
fisub
xchg
test
out
jae
or
xchg
inc
xchg
or
fs
inc
adc
mov
fs
fwait
data16
adc
outs
pop
or
cli
int
xchg
loope
ins
call
pop
fs
inc
or
fdivr
adc
xchg
gs
xchg
jae
or
add
add
(bad)
pop
add
add
movs
add
lock
add
pop
and
cmp
cmp
and
sbb
pop
add
lock
add
outs
(bad)
call
push
and
pop
or
adc
es
or
pop
push
sub
adc
jle
fstp
adc
xor
or
movups
(bad)
jmp
fild
sub
or
or
adc
pop
or
pop
sub
adc
or
xor
or
or
pop
pop
cmp
pop
adc
imul
dec
or
push
or
sub
(bad)
push
add
push
movlps
push
adc
or
or
push
out
fdivrp
call
adc
or
or
lock
jo
or
or
div
jg
arpl
or
adc
or
push
adc
idiv
pop
sbb
xor
stos
sub
or
pop
add
dec
daa
sub
jg
sti
mov
das
lock
push
inc
or
mov
neg
idiv
jbe
push
or
and
add
test
popa
lods
push
add
sar
jp
xor
sub
push
pop
daa
in
fisttp
add
or
pop
push
and
xor
jmp
push
push
and
adc
dec
aam
or
add
push
push
jns
cs
fld
and
adc
push
adc
add
add
bound
stc
ss
in
ror
or
and
lock
pop
push
add
outs
test
or
mov
icebp
add
fadd
push
push
jmp
add
push
scas
pop
sbb
adc
add
sbb
loope
lock
add
ins
lods
ins
mov
pop
adc
push
movs
pop
sbb
mov
add
cmp
rol
dec
push
sbb
mov
sub
or
pop
or
mov
or
push
or
or
adc
adc
mov
mov
sbb
and
or
sub
and
lock
ss
out
js
add
adc
or
sbb
in
(bad)
outs
xchg
aaa
xor
ins
pop
jne
adc
sbb
pop
sbb
pop
out
idiv
outs
popf
daa
sub
and
sub
dec
dec
popw
adc
mov
mov
sbb
adc
push
pop
imul
push
add
push
sub
sbb
xchg
lods
mov
or
or
sbb
rcl
or
fistp
shr
fld
pop
lods
add
in
or
and
or
xor
pop
clc
jle
lock
sub
sbb
scas
or
or
adc
lock
mov
or
ins
push
movs
dec
(bad)
das
cld
aaa
dec
adc
sbb
or
sub
inc
xor
push
xor
mul
add
and
dec
or
mov
lock
mov
(bad)
call
mov
loopne
xor
inc
pop
popf
xor
jge
sub
sti
ret
test
adc
and
inc
xor
aaa
add
pop
jno
add
lock
imul
lock
add
icebp
mov
lock
lock
add
inc
sbb
adc
or
or
ret
cmp
aaa
xchg
xor
or
or
sub
lock
imul
(bad)
das
push
inc
add
outs
jle
nop
inc
push
test
inc
sbb
and
or
push
xor
adc
inc
add
(bad)
jg
pop
sbb
(bad)
cmc
add
sbb
push
adc
sbb
or
or
sub
nop
mov
sbb
cld
outs
cli
movs
outs
sub
or
push
(bad)
or
dec
dec
pop
adc
cmp
call
imul
push
and
or
gs
sbb
and
inc
push
sub
jmp
jne
lea
aaa
or
cmp
ja
aas
fwait
add
or
lock
out
mov
mov
dec
and
sbb
add
or
(bad)
int
imul
add
sbb
mov
outs
cs
add
add
sub
lock
add
inc
fdiv
push
pop
adc
push
sbb
adc
aaa
shl
and
add
repz
or
add
add
add
add
mov
jbe
popf
out
jg
sbb
or
fistp
leave
add
out
in
mov
sub
xchg
adc
cld
jmp
das
repnz
push
jno
cmp
mov
push
lock
xchg
aaa
das
pop
push
push
enter
mov
lods
iret
in
ret
nop
jmp
and
add
cs
popa
sti
sbb
sub
in
push
shl
aam
inc
cs
pop
fldenv
pusha
mov
in
daa
shr
ins
idiv
jae
arpl
repz
das
dec
outs
xchg
leave
shl
ss
dec
inc
clc
ds
mov
cmp
shl
sbb
add
add
add
add
or
inc
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
cld
inc
add
