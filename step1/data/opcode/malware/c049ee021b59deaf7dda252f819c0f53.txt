jo
adc
add
add
dec
add
add
add
add
xor
add
add
add
add
push
jo
add
lods
cdq
adc
pop
sub
add
or
sub
add
or
add
push
sub
add
or
add
adc
add
add
or
add
adc
or
add
sub
sub
add
adc
add
xor
add
add
add
sub
add
add
add
or
add
or
or
adc
add
pop
xchg
pop
sbb
outs
adc
add
pop
pop
pop
or
push
mov
pop
xor
push
sub
add
adc
add
sub
adc
add
adc
sub
adc
pop
add
push
sub
jle
add
add
push
add
or
adc
add
adc
add
add
add
adc
push
mov
add
add
add
adc
add
add
sub
add
xor
add
add
add
add
adc
sub
pop
add
add
push
push
jb
add
jo
push
adc
sub
adc
add
or
add
add
sbb
and
add
add
or
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
leave
add
jo
or
jo
or
jb
add
jo
or
or
add
jo
or
or
add
jo
or
or
add
jo
or
or
jno
add
or
or
jo
or
push
jb
add
jo
or
(bad)
iret
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
push
add
jo
or
adc
jo
or
push
jb
add
jo
or
pop
jb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
xor
add
or
sbb
jo
or
push
jb
add
jo
or
pop
jb
add
jo
or
and
add
jo
or
and
add
jo
or
and
add
jo
or
and
add
jo
or
and
or
jo
or
and
jo
or
es
add
jo
or
daa
jb
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
inc
jo
or
sub
jo
or
cs
add
pop
das
jb
add
pop
xor
add
pop
xor
add
pop
xor
add
pop
xor
add
pop
xor
cmc
add
pop
xor
jo
or
ss
push
add
or
aaa
jb
push
add
or
cmp
push
add
or
cmp
push
add
or
cmp
push
add
or
cmp
push
add
or
cmp
xlat
push
add
or
cmp
jo
or
ds
pop
add
or
aas
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
or
jo
or
inc
jb
or
jo
or
inc
jb
or
jo
or
inc
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pusha
jb
or
jo
or
popa
jb
or
jo
or
bound
or
jo
or
arpl
or
jo
or
fs
or
jo
or
gs
or
jo
or
data16
or
jo
or
addr16
or
jo
or
push
jo
or
imul
or
push
fwait
or
jo
or
imul
add
or
ins
jb
or
jo
or
ins
jb
or
jo
or
outs
jb
or
pop
outs
jb
or
pop
jo
arpl
pop
jno
ja
add
or
jb
fwait
or
pop
jae
mov
or
je
out
add
or
jne
add
add
or
jbe
sub
or
ja
push
push
add
or
js
jno
add
or
jns
lahf
push
add
or
jp
(bad)
push
add
or
jnp
in
push
add
or
jl
std
push
add
or
jge
sbb
add
or
jle
xor
add
or
jg
pop
(bad)
jo
or
add
add
(bad)
jo
or
add
(bad)
jo
or
add
add
(bad)
jo
or
add
add
(bad)
jo
or
test
add
jb
adc
jo
or
test
add
jb
adc
jo
or
xchg
add
jb
adc
jo
or
xchg
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
lea
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
pop
add
jb
adc
jo
or
nop
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
cwde
add
add
adc
jo
or
cdq
add
add
adc
jo
or
call
add
or
fwait
add
add
adc
jo
or
pushf
add
add
adc
jo
or
popf
add
add
adc
jo
or
sahf
add
add
adc
jo
or
lahf
add
add
adc
jo
or
mov
test
add
or
mov
mov
add
or
mov
lds
add
or
mov
cmc
adc
jo
or
movs
add
add
adc
jo
or
movs
add
add
adc
jo
or
cmps
add
add
adc
jo
or
cmps
add
add
adc
jo
or
test
add
jb
adc
jo
or
test
(bad)
adc
jo
or
stos
add
add
adc
jo
or
stos
add
add
adc
jo
or
lods
add
add
adc
jo
or
lods
add
add
adc
jo
or
scas
add
add
adc
and
xor
and
dec
adc
and
jno
add
or
mov
add
jb
adc
and
test
or
mov
add
jb
adc
and
repz
and
or
add
or
mov
add
jb
push
add
or
mov
dec
push
add
or
mov
addr16
add
or
mov
jg
add
or
mov
(bad)
push
add
or
mov
mov
add
or
mov
rcl
add
or
mov
jecxz
add
or
mov
add
add
or
rol
add
pop
add
or
rol
add
pop
add
or
ret
add
pop
add
or
ret
add
add
pop
add
or
les
add
jb
pop
add
or
lds
add
jb
pop
add
or
mov
add
pop
add
or
mov
sbb
jo
or
enter
jb
sbb
jo
or
leave
add
add
sbb
jo
or
retf
add
sbb
jo
or
retf
add
add
sbb
jo
or
int3
add
add
sbb
jo
or
int
add
jb
sbb
jo
or
into
add
add
sbb
jo
or
iret
add
add
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
aam
add
jb
sbb
jo
or
aad
add
jb
sbb
jo
or
(bad)
add
add
sbb
jo
or
xlat
add
add
sbb
jo
or
fadd
add
jb
sbb
jo
or
fld
add
jb
sbb
jo
or
fiadd
add
jb
sbb
jo
or
fild
add
jb
sbb
jo
or
fadd
add
jb
sbb
jo
or
fld
add
jb
sbb
jo
or
fiadd
add
jb
sbb
jo
or
fild
add
jb
sbb
jo
or
loopne
add
jb
sbb
jo
or
loope
add
jb
sbb
jo
or
loop
add
jb
sbb
jo
or
jecxz
add
jb
sbb
jo
or
in
add
jb
sbb
jo
or
in
add
jb
sbb
jo
or
pop
adc
adc
adc
sub
add
or
add
or
add
adc
xor
add
sub
add
push
push
sub
sub
add
push
add
sub
add
push
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
add
int3
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sbb
add
outs
sbb
jnp
add
add
push
add
or
add
or
jnp
add
add
pop
pop
pop
jae
add
or
add
or
jnp
add
add
das
sbb
jo
and
add
add
add
add
outs
and
add
add
add
add
push
add
or
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
outs
sub
add
add
add
add
sbb
pop
jae
add
or
add
or
jnp
add
add
cmp
jo
sub
add
add
add
add
popw
sub
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
dec
sbb
jo
and
add
add
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
and
add
and
add
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
sbb
jo
sub
add
add
inc
or
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
jae
add
or
sub
add
adc
add
add
sbb
add
sub
sub
push
sub
add
sub
add
sub
add
push
sbb
inc
sub
jb
sbb
jo
adc
add
sub
add
add
add
jle
add
add
sbb
add
or
call
call
add
outs
cmp
add
sub
add
pop
sbb
sbb
cmp
add
sub
add
pop
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
xor
pushf
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
cmp
add
outs
cmp
jnp
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
hlt
add
add
jge
and
add
outs
and
add
add
add
add
mov
add
sub
add
add
add
add
ins
pop
pop
jae
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
retf
sbb
jo
and
add
add
add
add
outs
and
add
add
add
add
inc
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
add
inc
jae
add
or
add
or
jnp
add
add
fstp
jo
sub
add
add
add
add
cmp
or
or
add
or
jnp
add
add
jmp
add
and
add
add
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
pop
add
pop
dec
jae
add
or
add
or
jnp
add
add
mov
add
outs
inc
add
or
jnp
add
add
stc
sbb
jo
sub
add
add
add
add
outs
inc
add
or
jnp
add
add
dec
pop
sbb
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
outs
sub
add
add
add
add
cmp
add
outs
cmp
jnp
add
add
outs
aas
add
or
jnp
add
add
test
adc
add
or
add
or
jnp
add
add
cmp
jo
sub
add
add
add
add
or
adc
add
or
add
or
jnp
add
add
outs
inc
add
or
and
add
add
test
add
jae
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
sbb
add
or
add
push
adc
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
add
dec
add
or
adc
add
sub
add
adc
add
add
and
sbb
add
add
dec
add
or
add
or
add
or
push
or
add
add
sbb
add
add
push
add
sub
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
sub
adc
xor
mov
test
pop
leave
test
neg
xchg
mov
sub
push
aad
mov
adc
sbb
adc
dec
fwait
xchg
mov
(bad)
xchg
repnz
es
jo
cmp
mov
xor
mov
mov
lahf
cmp
lahf
xor
sbb
xlat
stos
mov
pop
retf
xchg
mov
daa
cli
and
or
sub
add
test
aaa
es
stos
aas
iret
dec
stos
sbb
stos
sti
mov
or
mov
push
push
mov
out
sbb
(bad)
call
mov
(bad)
push
mov
inc
sub
mov
outs
js
mov
not
leave
mov
adc
push
pinsrw
jne
mov
add
retf
addr16
or
lock
push
imul
iret
rol
aam
xor
adc
hlt
rcl
jge
fdiv
cwde
data16
jns
fsubp
mov
loopne
adc
in
add
in
mov
iret
inc
pop
out
lods
jo
(bad)
aam
call
shl
call
push
stc
ins
jmp
push
push
mov
mov
out
popf
gs
sar
in
(bad)
xchg
or
mov
inc
xor
xchg
mov
hlt
out
mov
cmc
adc
or
xor
retf
stc
or
pop
std
push
push
std
sbb
cdq
repnz
push
ins
or
div
or
dec
or
jmp
sbb
mov
ins
pop
push
cld
in
stos
adc
sbb
cli
adc
cwde
jne
cmp
adc
pop
xor
push
mov
sbb
mov
sbb
xor
pop
jp
or
and
ins
and
mov
and
push
mov
fldcw
and
pusha
mov
daa
cs
ins
daa
pop
xchg
fldcw
sahf
xor
push
sub
sub
inc
sub
push
and
adc
xor
sub
xor
mov
iret
xor
call
xor
mov
inc
shl
add
sub
jo
xor
and
aaa
ret
cmp
mov
cmp
and
cmp
push
jo
push
mov
aas
jmp
inc
ins
sub
lea
inc
sahf
imul
inc
ja
mov
inc
ror
out
inc
inc
xor
mov
repz
dec
int
popa
dec
lock
dec
dec
dec
mov
mov
dec
or
inc
dec
pop
stc
sbb
arpl
push
push
les
cmp
adc
push
push
jae
cwde
push
dec
sbb
pop
pop
vaddsd
retf
adc
out
cs
xor
(bad)
call
cmp
gs
cmp
xchg
addr16
jne
addr16
shl
push
mov
cmc
imul
sub
mov
sub
fisubr
push
sub
pop
and
ins
push
ja
inc
shl
push
ja
mov
dec
jp
jno
jp
imul
jge
sub
jle
xor
jns
es
sbb
add
add
and
add
and
add
jb
add
int3
sldt
cld
sbb
add
or
add
aam
add
jl
add
pop
add
add
or
add
adc
add
or
add
sub
add
pop
add
rcr
add
add
xchg
adc
add
or
add
add
nop
add
adc
add
sbb
add
adc
add
add
(bad)
sbb
add
pop
adc
add
pop
add
sbb
add
fstp
add
jp
add
push
or
add
add
scas
pop
add
jae
add
cli
push
add
mov
add
push
add
mov
push
add
push
adc
add
add
sbb
add
call
add
add
inc
push
add
xor
add
in
sbb
add
jb
add
(bad)
or
add
add
popf
or
add
add
mov
add
lods
sbb
add
add
mov
add
enter
inc
adc
add
add
dec
or
add
add
add
add
xchg
add
push
push
add
xor
add
dec
adc
add
or
add
adc
add
movs
or
add
adc
add
add
sub
add
lods
add
add
adc
add
adc
add
add
mov
add
loopne
add
add
add
mov
add
xchg
sbb
add
adc
add
sub
add
push
pop
add
aas
sbb
add
or
add
pop
add
(bad)
add
add
rcl
add
stos
add
add
or
add
sbb
add
add
add
repz
add
repnz
add
sbb
add
test
add
push
add
mov
sbb
add
or
add
sbb
add
add
add
add
or
add
add
mov
add
cmp
add
add
add
add
imul
add
jb
add
scas
sbb
add
push
add
jno
add
push
adc
add
or
add
push
add
jae
add
enter
jo
add
leave
add
add
adc
add
add
add
bndldx
add
add
into
sbb
add
push
add
dec
add
add
and
add
sldt
push
add
add
or
add
add
add
add
mov
add
xor
add
jne
add
out
add
dec
sbb
add
dec
add
imul
add
inc
push
add
call
add
or
add
or
add
add
add
adc
add
xor
add
repz
add
add
inc
adc
add
cmp
add
add
add
add
add
or
add
add
add
or
add
adc
add
pop
sldt
ds
add
jbe
add
mov
adc
add
pop
add
addr16
add
push
add
and
add
stos
adc
add
sldt
not
add
test
add
cdq
pop
add
xchg
or
add
add
add
adc
add
add
add
add
add
cmp
add
sbb
arpl
ins
add
jns
pop
add
jp
je
arpl
jno
dec
add
add
add
sbb
push
jmp
imul
call
dec
aam
or
jle
adc
aas
push
jle
jle
or
aas
push
ds
jle
sbb
inc
add
push
sbb
mov
jle
inc
pop
jle
dec
push
jmp
sbb
push
jle
or
jmp
pop
pop
pop
aam
mov
sbb
ds
or
jle
fdiv
add
or
dec
jle
mov
ds
jo
inc
pop
jle
scas
gs
add
and
dec
ds
or
hlt
jle
adc
aam
out
jmp
push
add
adc
or
add
adc
dec
ds
jle
jle
jle
adc
or
scas
cmps
mov
add
or
pop
inc
mov
sbb
call
add
mov
push
cmp
scas
gs
push
sbb
add
or
cmp
aam
aam
jle
jle
ds
cmp
ds
scas
gs
pop
test
push
(bad)
add
adc
dec
jle
adc
add
lea
or
jmp
or
cmp
rcl
(bad)
aam
sbb
cmp
ds
jle
ds
dec
push
aam
jle
jle
ins
call
push
sgdtd
adc
dec
jle
pop
pop
jle
jle
cmp
aam
test
add
push
or
(bad)
pop
ds
scas
gs
inc
cmp
add
aas
push
or
or
sbb
cmp
mov
jmp
(bad)
fcom
add
push
pop
pop
ds
shl
xor
cmp
or
cmp
(bad)
aam
adc
rcl
push
jle
cmp
pop
pop
or
add
and
push
jo
ins
call
jo
jmp
pop
hlt
jle
dec
rcl
cmp
hlt
jle
push
adc
push
jle
jle
jle
jle
jle
hlt
jle
dec
or
add
and
ds
sbb
cmp
jle
jle
jle
jle
scas
gs
jle
out
jle
hlt
jle
arpl
add
dec
push
sbb
jmp
cmp
lea
jle
inc
mov
jle
or
xor
cmp
ds
scas
gs
faddp
add
push
dec
push
add
dec
ds
ds
dec
push
hlt
jle
push
test
fiadd
add
dec
push
add
pop
ds
sbb
arpl
inc
mov
imul
icebp
add
es
push
inc
mov
cmp
or
push
ds
adc
jle
ds
jle
or
test
gs
jle
sub
sbb
push
jle
ds
jle
jmp
mov
or
pop
shl
gs
jle
lea
jle
inc
push
add
push
rcl
dec
jle
jle
hlt
jle
(bad)
ds
rcl
pop
jle
jle
aas
push
cmp
rcl
pop
loopne
add
sub
push
aas
push
add
push
dec
push
jg
dec
push
pop
pop
test
pop
sbb
xor
jmp
push
jle
jp
add
sub
push
sbb
or
inc
mov
ds
or
push
ds
inc
mov
push
or
sub
rcl
imul
add
bound
add
rcl
pop
ins
call
scas
gs
mov
inc
mov
push
scas
gs
or
aam
mov
out
ds
cmp
scas
js
add
rcl
imul
or
cmp
inc
pop
ins
call
jle
jg
sbb
lea
dec
ds
jg
ins
call
dec
pop
add
rcl
jle
dec
aas
push
jle
aam
dec
push
hlt
jle
sub
cmp
ds
loop
add
rcl
cmp
or
jo
inc
pop
sbb
dec
out
or
cmp
sub
jle
jle
shl
push
jg
jl
add
adc
push
ins
call
jle
jle
inc
pop
jle
jle
push
rol
add
or
inc
mov
add
dec
hlt
jle
pop
ins
call
jle
mov
scas
gs
jle
cmp
jo
mov
add
sub
push
ds
jg
pop
pop
sbb
scas
gs
sbb
jle
push
jg
aas
push
jle
hlt
jle
jle
dec
jle
or
inc
mov
add
push
or
ds
sbb
dec
jle
test
pop
in
add
adc
push
hlt
jle
push
or
gs
jle
sbb
sbb
sub
push
jle
or
jle
aam
or
push
aam
ds
hlt
jle
pop
sbb
sbb
and
push
jle
out
sbb
jle
jle
dec
push
sbb
adc
add
arpl
imul
jle
push
jle
mov
add
and
push
sbb
dec
or
jle
cmp
scas
gs
cmp
jle
ds
jle
scas
gs
jno
add
push
aas
push
sbb
pop
jle
jmp
push
jle
or
add
xchg
add
ds
aas
push
jle
ins
call
sbb
push
inc
pop
rcl
(bad)
shl
cmp
inc
mov
out
sbb
sahf
add
adc
push
ds
rcl
sbb
push
aam
ds
sbb
push
ds
or
jle
jle
jmp
jle
mov
inc
pop
jo
add
mov
jle
jle
pop
pop
jle
mov
add
and
push
ds
jg
aam
or
or
push
add
arpl
ds
sbb
inc
mov
pop
jle
add
loop
add
ds
out
or
(bad)
scas
gs
test
sbb
jle
rcl
rcl
imul
pop
call
ds
inc
pop
jo
jle
cmp
inc
pop
ins
call
adc
push
mov
rcl
pop
scas
gs
sbb
es
adc
push
hlt
jle
pop
add
mov
or
mov
add
sbb
push
jle
or
or
hlt
jle
sub
or
push
push
add
and
push
jle
ds
ds
adc
hlt
jle
or
ds
dec
push
ds
cmp
sbb
dec
jmp
jle
hlt
jle
dec
jo
jle
mov
inc
pop
test
lea
jle
or
pop
or
push
ds
jg
add
add
ds
test
push
pop
pop
ds
or
sbb
push
ins
call
ds
jle
ins
call
add
adc
push
jmp
or
push
pop
pop
mov
ds
ins
call
adc
sbb
shl
les
sub
push
sbb
mov
pop
jle
jle
jle
jle
jg
test
pop
inc
pop
sbb
or
scas
or
add
adc
push
hlt
jle
xor
adc
jle
rcl
add
push
jle
aas
push
sbb
lea
jle
ds
inc
mov
push
pop
pop
jmp
pop
sbb
aam
and
add
jle
or
aas
push
or
ds
mov
sbb
or
dec
push
mov
jle
ds
sbb
imul
dec
jle
jle
jle
jmp
push
push
xor
pop
or
pop
pop
aas
push
sbb
mov
(bad)
out
dec
add
ds
mov
ds
scas
gs
out
sbb
dec
jle
inc
mov
push
ds
mov
add
sbb
sbb
add
jle
xor
jle
scas
gs
scas
shl
jns
add
sbb
scas
or
cmp
jle
jle
ds
adc
cmp
ins
call
dec
push
mov
inc
pop
aam
jmp
lea
pop
or
cmp
lea
push
inc
pop
push
cmps
add
aas
push
jle
jle
or
add
jle
jle
(bad)
out
inc
mov
pop
aas
push
lock
pop
jle
scas
gs
jle
mov
or
or
pop
jle
jle
add
push
or
jle
jle
or
jmp
mov
jle
jle
push
hlt
jle
lea
aas
push
jle
jo
jle
jle
ds
scas
gs
adc
jmp
push
cmp
jle
ins
call
push
add
cmp
ds
jg
adc
cmp
cmp
hlt
jle
push
shl
xor
push
add
cmp
jle
jle
hlt
jle
push
jle
sbb
push
rcl
pop
mov
push
cmp
pop
pop
ins
call
aas
push
or
dec
push
sbb
out
shl
and
push
add
cmp
inc
pop
hlt
jle
push
jle
out
inc
pop
sbb
imul
push
or
or
rcl
pop
shl
adc
pop
cmp
inc
pop
ds
jg
rcl
pop
hlt
jle
mov
add
cmp
hlt
jle
call
rcl
or
cmp
jle
rcl
addr16
push
hlt
sahf
push
add
cmp
or
jle
or
add
cmp
dec
or
sbb
or
mov
hlt
jle
jle
mov
mov
pop
jle
out
mov
jle
sbb
cmp
jle
add
sub
push
add
cmp
pop
pop
or
shl
(bad)
ds
jle
shl
cmp
jle
ret
add
cmp
mov
jle
hlt
jle
pop
add
stc
push
add
pop
jle
shl
xor
hlt
jle
gs
gs
jle
adc
cmp
jle
jle
cmp
jmp
add
cmp
aas
push
ds
ds
or
sbb
dec
push
jle
sbb
es
add
inc
pop
or
dec
ds
aam
jle
or
or
rcl
cmp
pop
scas
or
dec
jle
jle
jle
aam
or
ds
jle
jg
les
add
inc
pop
hlt
jle
(bad)
test
arpl
jle
arpl
(bad)
cmp
jle
pop
push
add
inc
pop
jle
jle
jle
jle
shl
call
ds
sbb
add
add
push
or
push
aam
inc
pop
hlt
jle
cmp
cmp
aam
inc
pop
jle
jle
jle
or
cmp
mov
xchg
xchg
pop
add
add
pop
rcl
(bad)
rcl
dec
jle
jmp
cmp
sub
pop
add
add
adc
jle
shl
dec
jle
sbb
arpl
mov
jle
mov
add
add
add
rcl
add
add
fild
add
add
cmp
adc
inc
mov
sbb
mov
imul
call
add
xor
inc
mov
icebp
pop
add
add
mov
sbb
dec
inc
pop
inc
mov
cmp
scas
gs
jle
call
jle
sbb
jo
xchg
or
add
pop
cmp
jle
jle
aas
push
scas
cmp
jle
add
push
jle
mov
cs
or
cs
pop
add
pop
cmp
jle
add
push
adc
inc
pop
dec
push
jle
ds
or
pop
jle
add
pop
ins
call
aam
enter
es
pop
jle
jg
aas
push
cmp
mov
add
dec
scas
or
add
push
ins
call
sbb
dec
or
sub
pop
cmp
pop
pop
or
mov
adc
ds
jle
aam
sbb
jmp
push
sbb
jle
pop
jle
cld
bound
add
pop
or
jle
adc
dec
jle
add
dec
sbb
sbb
jle
dec
xchg
jns
add
pop
adc
inc
mov
inc
mov
sbb
call
jle
or
nop
or
push
mov
add
call
inc
mov
or
push
jmp
cmp
cmps
or
sbb
jle
push
shl
gs
jle
out
add
pop
or
push
fs
pop
jle
jle
jle
jle
jle
test
sub
sbb
push
sbb
or
sbb
hlt
jle
push
(bad)
ror
add
mov
jmp
sbb
pop
shl
pop
jle
cmp
aam
jo
dec
push
hlt
jle
cmp
cwde
jmp
call
or
ds
cmp
aam
sbb
cmp
jle
out
out
inc
pop
test
add
shl
push
or
lea
shl
imul
or
test
push
jle
ds
out
jle
rcl
pop
jle
int3
pop
or
sub
arpl
dec
hlt
jle
gs
hlt
jle
jle
cmp
ins
call
rcl
cmp
push
jle
dec
push
test
shl
addr16
scas
gs
jg
jle
jle
cmp
rcl
inc
or
sbb
arpl
jle
push
test
mov
jle
dec
inc
pop
or
jle
arpl
add
arpl
shl
dec
jle
cmp
scas
gs
jle
or
jle
or
rcl
mov
xor
or
and
arpl
hlt
jle
add
inc
pop
jle
jmp
dec
scas
gs
jle
lea
push
jle
cmp
jg
into
mov
add
shl
lea
push
hlt
jle
or
mov
cmp
(bad)
jle
jle
jo
jle
sbb
lahf
or
push
scas
gs
ds
out
or
(bad)
hlt
jle
or
addr16
add
gs
jle
add
mov
jle
sbb
jle
jle
mov
or
inc
mov
push
ds
jle
ds
inc
pop
pushf
int3
or
push
scas
gs
test
pop
jle
ds
mov
or
dec
hlt
jle
mov
jecxz
add
scas
gs
mov
or
dec
jle
ds
sar
or
sbb
gs
jle
jle
jmp
mov
mov
arpl
or
ds
push
or
sub
rcl
add
cmp
ins
call
test
cmp
pop
ds
ds
or
add
or
sbb
inc
pop
inc
pop
ds
ds
aas
push
ins
call
pop
pop
pop
pop
jle
sahf
cmp
ins
call
cmp
dec
push
test
push
sbb
lea
pop
dec
push
cmp
push
aam
or
gs
jle
push
cmp
shr
add
aam
aas
push
ds
rcl
cmp
cmp
imul
cmp
sub
and
imul
ds
jle
ds
inc
pop
out
or
pop
inc
mov
push
hlt
jle
push
add
(bad)
adc
or
cwde
or
sbb
imul
jmp
push
or
dec
out
sbb
push
mov
aam
mov
jle
ins
call
scas
gs
sbb
hlt
jle
mov
pop
or
lds
add
aam
jle
dec
push
sbb
pop
jle
sbb
jg
out
inc
pop
sbb
aam
or
and
imul
push
jle
inc
mov
hlt
jle
sub
ds
mov
jle
cmp
hlt
jle
sub
add
aam
jle
jle
jo
adc
hlt
jle
gs
call
jle
inc
mov
add
pop
jle
sbb
cmp
or
add
aam
jmp
push
rcl
dec
sbb
mov
or
ds
ds
mov
hlt
jle
dec
ds
pop
pop
adc
jle
or
hlt
jle
push
jmp
add
jle
push
mov
aas
push
or
or
dec
hlt
jle
sub
sbb
jg
jle
(bad)
dec
or
sub
jle
and
rcl
dec
dec
push
aam
ds
jg
add
(bad)
jle
pop
pop
out
inc
mov
ds
jmp
push
jo
or
adc
jle
cmp
cmp
sbb
hlt
jle
mov
imul
or
add
hlt
jle
mov
dec
sbb
ds
ds
hlt
jle
pop
inc
mov
jle
or
jle
test
nop
or
sbb
jle
(bad)
out
inc
pop
adc
sbb
jle
ins
call
adc
jle
sbb
cmps
or
sub
jle
(bad)
cmp
ds
hlt
jle
pop
jle
rcl
cmp
shl
cmp
lea
push
inc
mov
pop
jle
aam
adc
fdivr
jle
call
inc
mov
push
or
lea
push
add
jle
push
ins
call
jb
or
push
jle
sbb
lea
push
ds
mov
jo
jo
inc
pop
scas
gs
jmp
jmp
add
sbb
ds
aas
push
or
adc
jmp
dec
pop
pop
jle
hlt
jle
push
hlt
jle
sbb
push
sbb
add
jle
or
cmp
push
sbb
sbb
and
aas
push
out
jle
ds
sbb
pop
or
jle
jle
jle
cmp
jle
jle
fisubr
or
sbb
dec
push
or
adc
out
add
dec
or
push
jle
sbb
add
jle
rcl
cmp
pop
shl
lea
pop
pop
jg
jle
aam
inc
pop
scas
gs
scas
gs
jle
test
jle
or
rcl
push
jle
sbb
push
or
sbb
jle
add
lea
push
pop
pop
pop
pop
test
or
and
or
ds
ds
jle
rcl
pop
aas
push
hlt
jle
pop
hlt
jle
adc
sbb
mov
adc
or
test
dec
jle
jmp
lahf
or
push
jle
ds
scas
gs
jle
jle
jle
jbe
or
adc
cmp
aam
shl
pop
jle
cmp
cmp
adc
or
sbb
and
jle
sbb
ins
call
aas
push
cmp
jmp
sub
sbb
or
pop
pop
pop
pop
pop
sbb
dec
push
jle
jle
jle
test
cli
or
es
sbb
jle
jle
dec
push
sbb
push
out
jo
hlt
jle
mov
aam
jle
out
inc
pop
or
call
cmp
dec
push
or
dec
jle
aam
cmp
js
or
inc
pop
or
vphaddubd
push
jo
aas
push
ds
adc
or
inc
pop
jo
ds
scas
gs
push
lods
push
or
inc
pop
ins
call
jle
or
hlt
jle
mov
inc
imul
pop
sbb
jle
sub
inc
mov
jle
or
shl
push
ds
ins
call
shl
push
cmp
add
cmp
jle
sub
pop
pop
aas
push
jle
ds
jp
or
mov
inc
pop
ds
hlt
jle
cmp
adc
or
mov
pop
pop
or
cmp
sbb
cmp
sbb
add
jle
mov
mov
cmp
test
dec
cmp
jle
jle
cmp
dec
fmul
shl
push
test
jle
repnz
shl
mov
push
test
or
add
sub
pop
pop
ds
ds
cmp
jle
inc
mov
jle
jle
out
push
and
add
jle
scas
gs
gs
or
or
adc
hlt
jle
lea
jle
jo
dec
push
or
ds
sbb
or
and
dec
dec
push
add
adc
aas
push
or
push
out
ds
rcl
lea
add
adc
ds
aas
push
jle
ds
ins
call
sbb
xor
add
sbb
or
push
add
jle
aam
jle
ds
hlt
jle
mov
jle
inc
mov
xchg
push
add
xor
sbb
pop
jo
jle
jle
jg
scas
gs
push
add
jle
hlt
jle
push
jg
jo
sbb
or
or
arpl
push
dec
mov
xor
cmp
test
push
jle
or
push
ds
inc
mov
or
cmp
inc
pop
cmp
jle
out
push
add
xor
jle
cmp
dec
push
out
ds
jle
or
cmp
or
dec
sub
add
jle
jle
or
dec
jle
out
cmp
jle
sbb
verr
jle
jle
or
jle
cmp
xor
or
xor
jle
mov
aas
push
inc
mov
mov
dec
pop
pop
dec
push
mov
verw
jle
jle
aas
push
ds
or
pop
pop
adc
cmp
jle
test
imul
aam
jle
cmp
or
(bad)
pop
pop
out
dec
das
verw
jle
jle
aas
push
jo
ds
out
rcl
imul
cmp
dec
push
jmp
mov
dec
jle
test
inc
verw
jle
jle
aas
push
test
call
out
jle
add
push
jle
jg
jle
hlt
jle
cmp
push
sbb
jle
jle
ds
mov
ds
jle
aam
rcl
cmp
hlt
jle
pop
test
dec
dec
push
ds
scas
gs
verr
jle
jle
adc
jle
sbb
cmp
cmp
push
inc
mov
pop
jle
ds
jle
shl
push
dec
push
mov
verr
jle
jle
cmp
sbb
ds
jle
jle
sbb
push
jle
or
cmp
pop
push
mov
cmp
pop
jo
jmp
xor
lea
pop
sbb
cmp
mov
mov
add
jle
jle
hlt
jle
push
inc
pop
or
aas
push
jle
jo
or
xor
aas
push
mov
jle
inc
mov
cmp
jle
cmp
push
rcl
cmp
jle
adc
push
in
add
jle
jle
jle
ds
inc
mov
pop
jo
scas
gs
jle
aam
aam
jle
out
ds
hlt
jle
imul
cmp
cmp
jle
push
ds
or
ds
jle
inc
pop
jo
ds
sbb
jo
aam
push
adc
add
jle
jle
test
call
test
xor
aam
in
daa
adc
push
jle
jle
test
mov
dec
adc
ds
mov
jle
xchg
adc
adc
test
imul
pop
ins
call
es
test
pop
or
or
pop
add
mov
jle
aas
push
ds
jle
mov
jle
jle
mov
jle
inc
mov
jle
jle
ds
jle
inc
pop
or
aam
hlt
jle
push
jle
or
push
adc
sbb
inc
mov
jle
ds
pop
pop
jle
dec
push
cmp
ins
call
out
cwde
adc
sub
sbb
lea
push
jle
jle
jle
or
jg
inc
pop
adc
jle
scas
gs
pop
pop
jle
inc
pop
mov
sbb
ds
rcl
and
adc
and
cmp
sbb
lea
inc
mov
dec
push
shl
adc
jle
ds
aas
push
mov
jo
mov
jle
jmp
push
ds
jle
push
repz
push
jle
ins
call
or
lea
jle
pop
pop
inc
pop
jmp
dec
lock
add
sub
sbb
pop
or
pop
rcl
mov
jg
or
dec
scas
gs
jg
dec
push
and
adc
push
jg
ds
hlt
jle
push
sbb
or
mov
jg
jle
dec
push
hlt
jle
dec
or
ds
add
pop
add
pop
pop
adc
test
xor
jle
out
adc
shl
arpl
push
out
out
rcl
adc
jle
dec
push
inc
mov
jle
mov
pop
pop
bnd
add
test
push
mov
rcl
adc
jle
aas
push
jle
jle
cmp
adc
sbb
mov
jle
mov
hlt
jle
gs
jle
out
jo
out
es
add
inc
mov
push
test
jle
pop
add
cmp
jmp
mov
mov
pop
shl
call
adc
add
imul
ins
call
pop
aad
add
inc
mov
pop
jle
or
hlt
jle
push
hlt
jmp
add
mov
or
pop
ds
aas
push
ds
adc
jle
inc
mov
push
aas
push
jle
ds
mov
adc
sbb
jle
test
push
shl
pop
jle
jle
ds
aam
jle
sub
adc
sub
jmp
dec
test
pop
ds
hlt
jle
pop
jo
aas
push
jle
or
jle
ins
call
sbb
or
shl
gs
rcl
jle
addr16
jo
pop
inc
adc
push
sbb
push
sbb
(bad)
hlt
jle
cmp
gs
neg
sub
push
or
jo
test
pop
adc
dec
push
hlt
jle
jle
or
dec
inc
mov
push
jo
jle
nop
jae
add
mov
add
dec
push
or
push
sub
lea
sbb
jle
test
push
jle
dec
push
les
lea
jle
aas
push
jg
out
jle
scas
gs
test
pop
aas
push
inc
mov
dec
pop
mov
add
sbb
adc
add
push
sbb
inc
mov
imul
inc
mov
jo
jg
or
ins
call
lea
jle
scas
gs
aam
ins
call
rcl
(bad)
dec
push
scas
gs
in
add
lea
push
ds
jle
jle
adc
ds
hlt
jle
imul
pop
rcl
pop
jle
sub
adc
sub
lea
sbb
or
or
jle
rcl
pop
jle
jle
mov
inc
mov
dec
or
pop
pop
scas
or
(bad)
adc
add
cmp
jle
dec
push
or
pop
pop
shl
pop
sbb
ds
aas
push
pop
pop
or
jle
mov
jle
scas
gs
push
cmp
adc
adc
lea
hlt
jle
push
jle
jmp
add
adc
adc
mov
or
pop
or
sbb
sbb
inc
pop
test
dec
scas
gs
ds
aas
push
jle
arpl
add
jmp
push
shl
pop
mov
rcl
call
rcl
lea
sar
add
jmp
cmp
pop
ds
out
hlt
jle
nop
adc
sub
(bad)
jo
inc
mov
adc
jle
jle
aas
push
jg
dec
push
test
pop
ds
jle
jle
aas
push
jle
jle
sbb
cmps
adc
sbb
(bad)
jle
jle
jle
jle
jo
jle
inc
pop
jle
cmp
add
pop
inc
pop
jle
sahf
mov
(bad)
ins
call
aas
push
jle
jle
pop
pop
cmp
adc
and
pop
mov
hlt
jle
lea
ds
or
mov
test
jle
jle
push
aas
push
shr
adc
cs
call
ins
call
aam
ds
jle
jle
jle
jo
aas
push
ds
jle
or
pop
jo
ds
inc
mov
ins
add
cs
call
scas
gs
rcl
arpl
(bad)
ins
call
sbb
arpl
rcl
mov
jo
jle
or
sbb
and
arpl
jo
sbb
sbb
jle
jo
jle
shl
gs
ds
jle
cmp
jmp
ins
call
jle
scas
gs
ds
scas
gs
sbb
sbb
aam
jo
sbb
push
hlt
jle
inc
adc
and
mov
imul
hlt
jle
dec
ds
inc
mov
inc
mov
pop
pop
sbb
push
jo
aam
adc
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
out
add
push
add
add
push
call
mov
(bad)
nop
in
xchg
call
mov
mov
in
mov
add
nop
mov
mov
call
mov
add
in
xchg
jmp
stos
call
cmps
call
mov
mov
add
in
xchg
out
xchg
call
mov
mov
in
sub
mov
nop
mov
movs
mov
mov
mov
call
lods
in
xchg
in
mov
popf
mov
push
add
add
in
mov
mov
test
call
mov
test
in
xchg
in
and
nop
out
xchg
call
mov
mov
call
add
add
mov
test
nop
mov
mov
in
xchg
call
mov
popf
mov
mov
scas
xchg
out
xchg
call
mov
mov
in
xchg
in
cmps
push
or
add
inc
call
mov
mov
out
mov
mov
call
mov
movs
mov
scas
mov
mov
mov
in
mov
mov
mov
mov
in
mov
add
call
xchg
mov
mov
mov
nop
mov
mov
mov
call
mov
mov
push
or
add
and
mov
mov
call
mov
mov
mov
or
add
and
mov
mov
out
scas
call
popf
in
sub
mov
or
add
push
call
mov
test
xchg
scas
in
mov
mov
in
cmps
push
or
in
xchg
call
scas
in
mov
mov
call
add
add
out
mov
mov
test
mov
mov
call
stos
in
pushf
call
mov
add
call
mov
mov
mov
call
mov
nop
mov
mov
in
xchg
call
mov
(bad)
nop
in
mov
test
add
in
mov
mov
in
mov
test
xchg
cmps
call
stos
in
mov
adc
add
push
in
xchg
call
mov
nop
mov
nop
mov
mov
adc
add
sub
mov
(bad)
nop
call
mov
mov
mov
in
popf
out
mov
mov
in
popf
call
add
add
mov
out
scas
call
mov
adc
add
ss
xchg
in
mov
mov
test
call
mov
test
popf
mov
mov
test
in
mov
adc
call
mov
scas
mov
mov
in
mov
mov
nop
mov
mov
add
aas
in
sub
xchg
mov
in
popf
call
mov
mov
call
mov
nop
mov
test
mov
in
sub
xchg
mov
popf
mov
pop
add
add
mov
call
mov
mov
push
sbb
add
aas
call
mov
nop
mov
mov
call
mov
popf
mov
test
in
xchg
in
mov
mov
call
mov
mov
in
xchg
out
mov
mov
add
in
mov
mov
mov
mov
call
xchg
push
sbb
add
daa
in
mov
mov
nop
mov
(bad)
nop
out
scas
out
xchg
call
cmps
in
and
xchg
in
mov
nop
mov
sbb
add
and
mov
in
mov
mov
out
xchg
call
mov
test
mov
push
sbb
add
daa
in
mov
mov
nop
mov
mov
in
xchg
in
mov
mov
call
mov
add
in
mov
mov
in
mov
xchg
scas
call
mov
mov
push
push
add
add
in
pushf
in
mov
nop
mov
movs
mov
mov
in
mov
mov
nop
mov
pop
add
add
mov
mov
mov
push
and
add
daa
out
xchg
in
mov
mov
mov
mov
mov
mov
and
add
and
mov
in
mov
mov
out
scas
call
xchg
out
mov
popf
mov
movs
mov
and
add
sbb
mov
call
mov
nop
mov
mov
call
scas
push
and
add
xor
mov
in
mov
scas
xchg
call
mov
mov
in
mov
mov
call
xchg
nop
mov
and
add
sub
xchg
scas
call
mov
mov
out
mov
scas
mov
scas
mov
(bad)
nop
call
mov
mov
and
in
xchg
out
mov
mov
call
xchg
in
mov
mov
out
scas
out
nop
in
xchg
in
mov
nop
mov
add
mov
in
mov
xchg
scas
call
add
add
in
mov
mov
in
mov
mov
in
mov
nop
mov
nop
mov
mov
mov
test
mov
call
scas
out
mov
mov
add
out
xchg
in
mov
mov
mov
mov
scas
xchg
in
pushf
out
mov
movs
mov
test
mov
add
sub
mov
in
popf
in
xchg
call
xchg
mov
nop
mov
mov
call
mov
add
test
in
mov
mov
call
mov
mov
call
xchg
mov
push
sub
add
sbb
mov
call
mov
mov
in
mov
mov
out
scas
push
sub
add
cmp
mov
mov
call
mov
scas
mov
mov
call
mov
test
scas
mov
mov
in
mov
sub
in
xchg
call
mov
mov
out
mov
mov
call
mov
popf
mov
mov
nop
mov
add
add
in
mov
mov
mov
test
out
nop
push
das
add
add
call
xchg
mov
call
mov
mov
mov
jmp
mov
movs
mov
add
call
mov
test
nop
mov
(bad)
nop
in
sub
mov
nop
mov
mov
add
mov
in
xchg
in
mov
mov
call
xchg
mov
in
mov
mov
nop
mov
add
call
popf
in
mov
mov
in
mov
mov
nop
mov
mov
in
and
mov
mov
mov
xor
add
sbb
mov
in
mov
nop
mov
test
mov
xor
add
daa
in
mov
nop
mov
mov
in
mov
mov
call
mov
nop
mov
mov
add
scas
mov
mov
call
mov
mov
mov
out
nop
out
nop
in
mov
xchg
cmps
in
xchg
call
xchg
call
mov
mov
call
mov
mov
add
daa
in
mov
mov
nop
mov
scas
xchg
in
mov
nop
mov
nop
mov
mov
in
pushf
push
aaa
add
add
in
mov
nop
mov
nop
mov
mov
scas
mov
mov
call
mov
popf
mov
mov
in
pushf
call
mov
mov
add
call
mov
mov
call
mov
mov
in
mov
test
cmp
add
sbb
mov
test
mov
out
xchg
in
mov
cmp
add
sbb
mov
call
popf
in
mov
mov
in
mov
mov
cmp
add
sbb
mov
out
scas
call
mov
nop
mov
mov
test
add
call
mov
mov
in
mov
mov
out
xchg
out
mov
mov
in
pushf
out
mov
movs
mov
test
push
cmp
call
mov
nop
mov
mov
nop
mov
scas
xchg
in
xchg
in
mov
mov
mov
add
out
xchg
call
xchg
call
xchg
mov
mov
popf
mov
mov
in
mov
mov
mov
push
aas
add
add
call
pushf
call
mov
mov
in
mov
popf
mov
mov
call
xchg
call
cmps
in
and
lods
push
inc
add
add
in
cmps
call
mov
mov
nop
mov
mov
inc
add
add
call
mov
mov
call
popf
out
mov
mov
xchg
scas
out
mov
inc
add
add
out
mov
mov
mov
test
nop
mov
mov
call
xchg
in
cmps
call
mov
mov
in
mov
inc
add
add
in
mov
mov
out
mov
mov
mov
call
scas
call
popf
call
mov
test
in
mov
mov
movs
mov
inc
add
add
mov
test
in
mov
mov
in
mov
mov
in
mov
mov
call
mov
scas
xchg
in
mov
xchg
cmps
in
mov
mov
add
out
scas
call
mov
movs
mov
mov
mov
out
mov
mov
call
mov
mov
mov
mov
mov
push
inc
add
add
call
mov
movs
mov
movs
mov
mov
in
mov
mov
add
mov
call
mov
nop
mov
mov
out
nop
in
xchg
in
pushf
in
mov
mov
in
mov
mov
out
scas
in
mov
dec
add
add
in
mov
mov
mov
mov
in
mov
dec
add
add
mov
call
mov
mov
in
xchg
call
mov
mov
mov
in
mov
mov
in
sub
mov
mov
push
dec
add
add
in
mov
mov
call
xchg
mov
call
popf
call
lods
out
nop
call
popf
call
mov
dec
add
add
in
popf
in
and
xchg
call
xchg
in
mov
movs
mov
dec
add
add
in
cmps
call
mov
mov
in
pushf
call
mov
nop
mov
mov
call
xchg
in
pushf
out
xchg
push
dec
add
add
call
mov
popf
mov
mov
in
sub
mov
mov
in
mov
mov
in
xchg
in
popf
call
mov
movs
mov
add
mov
mov
in
popf
in
cmps
call
mov
mov
push
dec
add
add
call
mov
(bad)
nop
call
mov
mov
call
mov
popf
mov
xchg
cmps
push
push
add
add
test
in
sub
scas
call
xchg
out
nop
call
lods
out
nop
call
mov
test
out
nop
call
xchg
call
mov
mov
push
add
add
mov
in
mov
nop
mov
mov
add
in
mov
mov
out
scas
in
mov
mov
call
mov
nop
mov
mov
nop
mov
mov
in
mov
mov
call
mov
add
in
xchg
in
pushf
in
mov
mov
call
mov
xchg
cmps
in
mov
nop
mov
mov
out
scas
in
xchg
call
xchg
out
xchg
in
mov
mov
add
and
scas
xchg
call
mov
mov
in
mov
test
call
cmps
in
and
add
add
stos
in
mov
nop
mov
nop
mov
test
mov
push
push
add
add
call
mov
nop
mov
mov
out
scas
call
mov
scas
xchg
call
cmps
in
mov
scas
xchg
push
push
add
add
in
mov
nop
mov
popf
mov
nop
mov
mov
mov
mov
nop
mov
nop
mov
pop
add
add
test
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
in
mov
nop
mov
mov
add
in
pushf
in
pushf
in
and
mov
mov
mov
nop
mov
(bad)
nop
push
pop
add
add
out
nop
out
mov
mov
call
mov
mov
mov
add
in
mov
xchg
cmps
in
mov
xchg
scas
in
mov
mov
nop
mov
test
push
pop
add
add
mov
nop
mov
mov
in
cmps
in
and
mov
mov
call
popf
push
pop
add
add
(bad)
nop
out
scas
call
mov
mov
call
mov
mov
in
mov
mov
mov
mov
mov
test
pop
add
add
in
mov
mov
xchg
scas
call
popf
in
add
add
add
in
mov
test
in
sub
xchg
test
mov
add
inc
jmp
mov
nop
mov
xchg
scas
call
mov
mov
nop
mov
mov
in
and
xchg
out
mov
mov
in
xchg
in
xchg
out
mov
popa
add
add
mov
mov
call
xchg
in
mov
scas
xchg
in
pushf
call
mov
mov
mov
in
and
mov
mov
call
add
add
call
and
mov
mov
in
cmps
push
arpl
add
sub
mov
call
mov
mov
test
call
popf
in
xchg
call
mov
xchg
scas
push
add
add
out
mov
test
call
mov
mov
out
mov
test
mov
nop
mov
mov
call
popf
in
and
mov
add
add
call
lods
in
mov
mov
mov
in
xchg
call
add
add
in
sub
mov
mov
mov
call
mov
(bad)
nop
call
mov
mov
add
mov
call
mov
mov
in
xchg
in
mov
mov
test
mov
push
call
mov
nop
mov
mov
call
mov
imul
nop
mov
mov
test
in
mov
scas
xchg
in
mov
add
test
in
pushf
call
lods
in
mov
mov
nop
mov
mov
popf
mov
test
mov
mov
in
mov
mov
push
imul
add
in
popf
out
xchg
in
mov
mov
call
xchg
in
mov
mov
mov
in
mov
mov
push
ins
add
add
nop
mov
nop
mov
test
in
mov
mov
mov
nop
mov
mov
call
add
add
out
mov
mov
mov
test
out
mov
mov
out
xchg
in
mov
outs
add
add
call
mov
mov
mov
nop
mov
test
add
in
popf
out
mov
nop
mov
nop
mov
scas
mov
mov
out
nop
in
xchg
in
xchg
out
xchg
in
mov
test
in
mov
mov
call
add
add
in
mov
nop
mov
nop
mov
nop
mov
test
nop
mov
test
in
mov
nop
mov
test
in
mov
jno
add
cmp
mov
call
mov
mov
call
popf
call
mov
scas
xchg
in
sub
mov
mov
in
sub
mov
mov
push
jb
add
sbb
mov
mov
call
cmps
in
mov
mov
add
in
mov
mov
jmp
mov
mov
out
nop
in
mov
mov
out
xchg
out
mov
test
mov
je
add
xor
mov
call
mov
mov
call
mov
mov
call
mov
xchg
scas
in
mov
jne
add
cmp
(bad)
nop
call
popf
call
cmps
out
mov
mov
scas
mov
test
call
stos
call
mov
mov
nop
mov
add
call
mov
nop
mov
mov
mov
in
mov
mov
ja
add
cmp
mov
call
xchg
in
mov
scas
mov
mov
in
pushf
in
mov
mov
in
mov
nop
mov
nop
mov
mov
xchg
cmps
push
js
add
xor
mov
mov
mov
in
mov
mov
call
and
mov
popf
mov
scas
xchg
push
jns
add
sub
mov
call
mov
mov
out
mov
mov
out
scas
call
stos
call
lods
push
jp
add
inc
in
mov
nop
mov
mov
nop
mov
mov
in
mov
mov
mov
out
xchg
in
xchg
in
xchg
in
cmps
call
mov
mov
push
jnp
add
cmp
test
in
mov
mov
mov
in
mov
mov
in
mov
mov
call
mov
test
xchg
cmps
push
jl
add
ss
nop
call
nop
in
mov
mov
test
mov
nop
mov
test
call
mov
mov
in
xchg
call
mov
add
mov
mov
mov
in
add
add
add
in
xchg
in
mov
mov
mov
mov
call
cmps
call
and
mov
add
call
mov
mov
in
pushf
out
mov
mov
movs
mov
add
add
call
mov
nop
mov
mov
in
mov
mov
call
mov
mov
in
mov
mov
in
mov
mov
add
mov
mov
in
mov
scas
mov
mov
in
mov
mov
call
mov
add
add
out
scas
in
mov
xchg
cmps
in
mov
mov
out
mov
mov
popf
mov
mov
add
in
mov
mov
mov
mov
mov
out
scas
call
stos
in
popf
call
mov
mov
call
mov
test
out
mov
nop
mov
test
add
xor
mov
in
mov
test
in
mov
mov
call
mov
mov
mov
scas
mov
xchg
scas
in
mov
test
add
aas
call
mov
popf
mov
nop
mov
mov
scas
mov
mov
call
mov
mov
in
mov
mov
call
xchg
in
add
cmp
mov
mov
mov
out
nop
call
mov
movs
mov
scas
xchg
in
and
mov
mov
scas
mov
xchg
add
cmp
popf
mov
mov
mov
call
mov
test
mov
popf
mov
mov
movs
mov
nop
mov
nop
mov
mov
add
out
xchg
in
mov
nop
mov
nop
mov
xchg
cmps
in
mov
mov
in
xchg
out
mov
nop
mov
mov
in
mov
mov
add
and
mov
test
in
and
mov
mov
nop
mov
mov
call
add
add
jmp
mov
mov
call
mov
mov
scas
mov
mov
mov
in
mov
mov
add
and
mov
xchg
scas
call
mov
mov
mov
mov
push
mov
add
and
mov
in
mov
mov
mov
call
popf
call
mov
mov
lea
add
adc
(bad)
nop
in
mov
scas
mov
mov
call
mov
mov
add
aas
out
nop
in
mov
mov
call
nop
out
xchg
out
mov
nop
mov
test
in
mov
mov
in
mov
nop
mov
mov
mov
call
add
add
in
xchg
call
mov
mov
in
mov
mov
out
scas
in
mov
mov
test
mov
jmp
popf
call
add
add
mov
in
mov
mov
xchg
add
add
mov
out
nop
jmp
mov
mov
mov
in
and
xchg
in
mov
test
call
mov
xchg
add
add
in
mov
mov
in
xchg
call
stos
out
mov
mov
in
mov
mov
in
add
xor
nop
mov
mov
nop
mov
scas
xchg
call
mov
mov
in
mov
mov
mov
xchg
add
add
popf
in
mov
test
nop
mov
mov
call
mov
mov
mov
out
scas
out
mov
mov
call
mov
add
in
xchg
in
mov
mov
test
mov
in
xchg
call
and
mov
mov
xchg
add
add
test
call
mov
mov
in
xchg
in
xchg
in
pushf
in
mov
mov
mov
test
in
mov
xchg
add
add
in
mov
mov
mov
call
mov
nop
mov
mov
add
sub
mov
out
mov
mov
mov
in
and
mov
test
in
popf
in
popf
out
mov
mov
add
and
scas
xchg
in
cmps
call
mov
mov
mov
call
mov
mov
add
in
and
mov
nop
mov
scas
xchg
in
and
mov
mov
scas
xchg
in
sub
mov
mov
call
mov
mov
add
call
mov
test
scas
xchg
call
mov
test
push
pushf
add
add
mov
in
mov
mov
call
mov
test
in
mov
scas
xchg
push
popf
add
add
out
mov
test
out
mov
mov
in
mov
mov
in
mov
mov
jmp
pushf
in
popf
out
mov
sahf
add
add
in
mov
mov
mov
call
mov
mov
mov
in
xchg
call
nop
call
mov
mov
mov
push
lahf
add
add
call
xchg
in
mov
test
nop
mov
mov
call
add
add
in
mov
test
out
nop
call
mov
mov
out
scas
in
pushf
out
mov
mov
call
mov
nop
mov
mov
call
mov
mov
call
xchg
in
xchg
call
mov
mov
call
xchg
mov
in
mov
mov
in
xchg
in
mov
nop
mov
test
test
scas
mov
mov
mov
in
mov
mov
in
sub
mov
mov
add
in
pushf
in
mov
nop
mov
test
mov
call
stos
push
movs
add
add
mov
in
and
mov
mov
nop
mov
mov
in
and
mov
mov
call
and
mov
test
in
mov
scas
xchg
push
movs
add
add
in
mov
mov
in
xchg
out
nop
call
mov
(bad)
nop
call
mov
cmps
add
add
in
cmps
out
mov
mov
mov
call
xchg
call
add
add
mov
call
mov
mov
push
test
add
adc
mov
call
mov
mov
test
call
mov
scas
mov
mov
out
mov
test
in
sub
mov
mov
call
add
add
mov
mov
nop
mov
test
call
xchg
out
nop
in
mov
mov
in
sub
mov
mov
call
xchg
in
mov
nop
mov
add
in
mov
mov
in
mov
mov
call
xchg
scas
xchg
call
add
add
in
mov
popf
mov
mov
xchg
cmps
in
sub
mov
add
call
xchg
call
mov
scas
mov
mov
mov
push
scas
add
add
call
mov
mov
test
nop
mov
mov
call
mov
nop
mov
mov
add
xor
mov
movs
mov
nop
mov
mov
test
test
out
mov
mov
mov
push
mov
add
xor
nop
mov
nop
mov
mov
out
mov
xchg
scas
in
mov
mov
test
mov
out
mov
mov
in
mov
mov
add
push
call
and
stos
in
mov
mov
popf
mov
test
mov
add
cmp
mov
in
xchg
in
and
mov
xchg
cmps
in
and
mov
scas
xchg
call
xchg
in
mov
mov
in
mov
xchg
cmps
in
xchg
in
pushf
push
mov
add
sbb
mov
call
mov
mov
in
mov
mov
add
xor
mov
mov
call
mov
popf
mov
test
mov
mov
test
popf
mov
mov
add
aas
in
mov
test
in
popf
in
xchg
in
mov
mov
mov
in
mov
mov
in
xchg
call
mov
xchg
cmps
in
cmps
in
sub
xchg
push
mov
add
sub
mov
nop
mov
mov
in
mov
mov
mov
call
mov
mov
add
and
mov
call
cmps
in
mov
nop
mov
mov
call
lods
call
mov
add
in
mov
nop
mov
mov
out
scas
call
popf
jmp
mov
xchg
cmps
call
mov
mov
in
popf
call
mov
mov
push
mov
in
mov
xchg
scas
in
and
mov
test
out
mov
mov
in
and
mov
mov
call
mov
nop
mov
mov
call
mov
add
call
sub
popf
call
mov
mov
mov
mov
out
mov
mov
call
mov
test
nop
mov
mov
add
in
mov
movs
mov
nop
mov
scas
mov
mov
in
and
nop
call
mov
mov
in
xchg
call
add
add
add
nop
mov
test
in
mov
test
mov
test
in
cmps
out
nop
call
add
add
mov
in
mov
mov
call
mov
add
scas
xchg
out
mov
test
in
pushf
in
xchg
in
xchg
call
mov
mov
call
xchg
out
mov
test
add
call
mov
mov
popf
mov
mov
mov
mov
in
sub
add
add
in
mov
nop
mov
mov
in
mov
mov
mov
xchg
scas
call
mov
mov
(bad)
nop
push
ret
add
add
jmp
xchg
scas
xchg
call
mov
mov
call
mov
popf
mov
mov
call
mov
popf
mov
les
add
push
call
xchg
call
popf
out
nop
call
and
mov
mov
push
lds
add
ss
nop
call
mov
mov
mov
call
stos
in
and
popf
out
scas
out
mov
mov
in
mov
mov
movs
mov
add
call
mov
mov
mov
in
mov
popf
mov
mov
in
sub
mov
mov
test
mov
mov
mov
test
in
and
pushf
in
pushf
call
mov
mov
xchg
scas
in
mov
mov
nop
mov
enter
sub
mov
mov
test
call
popf
in
mov
mov
out
scas
call
add
add
out
mov
mov
in
and
mov
test
in
xchg
in
pushf
in
xchg
in
xchg
call
add
add
mov
xchg
cmps
in
mov
test
call
mov
test
call
mov
scas
xchg
push
retf
add
add
call
mov
mov
in
mov
nop
mov
mov
nop
mov
mov
int3
add
add
out
mov
mov
in
and
pushf
call
lods
in
and
mov
mov
int
add
and
mov
nop
mov
popf
mov
test
in
mov
mov
(bad)
nop
in
xchg
push
into
add
add
(bad)
nop
call
mov
mov
in
mov
iret
add
add
mov
mov
(bad)
nop
jmp
mov
mov
in
mov
rol
add
aas
out
xchg
call
mov
mov
out
mov
xchg
scas
jmp
mov
mov
mov
mov
mov
call
xchg
call
mov
add
in
popf
out
xchg
call
mov
mov
in
sub
mov
mov
add
xor
mov
mov
out
mov
test
in
mov
mov
mov
call
mov
mov
mov
push
rol
add
sbb
nop
mov
scas
xchg
out
mov
xchg
scas
in
mov
test
aam
add
inc
call
popf
in
xchg
out
mov
nop
mov
mov
in
xchg
call
mov
mov
call
mov
nop
mov
mov
in
pushf
in
mov
mov
push
aad
add
ss
mov
(bad)
nop
call
mov
mov
out
scas
call
mov
mov
in
mov
mov
mov
call
mov
add
call
mov
mov
mov
in
mov
nop
mov
mov
mov
in
popf
call
mov
add
cmps
in
mov
mov
in
xchg
call
xchg
movs
mov
mov
out
mov
mov
xchg
scas
in
xchg
out
xchg
in
pushf
in
xchg
push
fadd
add
and
mov
in
xchg
call
xchg
in
mov
mov
xchg
cmps
call
mov
fld
add
xor
mov
call
mov
movs
mov
mov
nop
mov
xchg
scas
in
and
and
xchg
mov
add
and
movs
mov
test
mov
in
xchg
in
mov
mov
in
and
add
add
add
in
mov
mov
mov
scas
xchg
call
mov
nop
mov
mov
test
mov
test
jmp
mov
add
test
out
scas
in
mov
xchg
cmps
call
mov
nop
mov
mov
call
lods
call
xchg
call
mov
mov
out
xchg
call
mov
mov
push
fld
add
cmp
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
mov
mov
call
mov
add
mov
out
mov
test
nop
mov
fild
add
sub
(bad)
nop
out
mov
test
mov
call
mov
mov
in
mov
mov
in
mov
loopne
add
inc
in
cmps
in
popf
in
mov
mov
call
pushf
call
mov
mov
scas
mov
mov
in
and
pushf
in
mov
nop
mov
nop
mov
loope
add
inc
in
xchg
call
mov
mov
in
and
mov
mov
in
mov
mov
mov
mov
call
mov
nop
mov
movs
mov
add
mov
mov
in
mov
mov
mov
in
mov
mov
mov
mov
mov
in
mov
mov
push
jecxz
add
cmp
nop
mov
test
mov
in
and
mov
mov
jmp
cmps
out
xchg
in
pushf
call
mov
xchg
scas
call
mov
popf
mov
in
add
xor
mov
in
mov
mov
call
xchg
out
xchg
in
cmps
call
xchg
call
cmps
in
sub
mov
in
add
aas
call
mov
scas
mov
(bad)
nop
in
xchg
jmp
pushf
call
mov
mov
nop
mov
movs
mov
mov
call
xchg
push
out
add
and
mov
out
mov
mov
call
mov
(bad)
nop
out
mov
(bad)
nop
call
mov
out
add
inc
call
mov
nop
mov
mov
nop
mov
mov
call
xchg
in
sub
mov
mov
in
mov
nop
mov
xchg
scas
in
xchg
out
scas
in
mov
mov
add
jecxz
inc
mov
cld
repz
loopne
sbb
in
jecxz
mov
dec
das
loope
push
jb
push
mov
pop
mov
xlat
(bad)
stc
clc
inc
ins
dec
mov
les
mov
icebp
push
and
aas
cli
push
pushf
in
loop
push
(bad)
into
cdq
or
mov
mov
sub
pop
test
mov
repz
mov
sub
ds
mov
imul
mov
xlat
cmc
pop
push
jl
push
add
push
cmp
push
mov
push
ret
mov
jge
xchg
push
jl
xor
ins
mov
jbe
imul
mov
inc
add
push
aad
mov
adc
(bad)
and
enter
jecxz
and
pop
adc
sbb
inc
mov
pop
xor
fld
push
jg
xor
and
je
or
xor
cmp
aaa
fistp
retf
adc
lods
(bad)
adc
jmp
loopne
sbb
or
aas
hlt
add
push
call
pop
jmp
call
cdq
add
jecxz
sub
mov
xor
mov
add
xchg
or
and
push
cs
cli
or
jp
fdiv
lods
sbb
mov
shl
mov
rcl
mov
ror
ss
gs
pop
ins
sbb
xor
mov
mov
mov
adc
in
repnz
or
in
mov
pop
test
sub
or
lods
addr16
xchg
dec
cmp
add
or
add
sti
pop
dec
cmps
movs
mov
pop
pop
out
jnp
push
test
mov
cmc
retf
dec
lods
dec
aad
adc
jmp
sub
dec
fadd
xor
jl
cmps
or
movs
pusha
xor
push
xor
in
and
push
lods
mov
fst
jbe
add
lods
and
xchg
adc
(bad)
mov
ds
in
cmp
add
lods
aaa
inc
std
repnz
stos
dec
add
pusha
or
mov
(bad)
jmp
arpl
imul
push
in
mov
ror
mov
imul
fdivr
repnz
inc
aam
inc
scas
pop
cmp
outs
jbe
arpl
lods
lea
fisttp
ret
imul
dec
jae
xor
adc
add
cmps
out
jnp
xchg
jae
es
pop
clc
out
mul
imul
ret
inc
fsub
mov
jnp
shl
mov
enter
or
data16
ret
mov
aaa
xchg
(bad)
in
mov
lods
add
fbstp
icebp
mov
pop
sub
test
pop
dec
xor
and
ss
pop
dec
mov
xor
pop
stos
js
inc
xchg
mov
mov
(bad)
mov
es
xchg
and
push
xlat
scas
inc
sub
data16
test
in
fnstenv
or
pop
add
sti
not
pop
pop
jae
inc
imul
(bad)
sar
int
inc
dec
jl
pushf
ret
movs
pop
push
mov
neg
bound
imul
cmp
dec
adc
add
jno
adc
mov
cmc
adc
fst
mov
and
mov
(bad)
mov
sbb
xor
movs
xchg
push
and
leave
mov
ss
sbb
mov
retf
fdivr
ret
sub
jae
inc
mov
dec
push
mov
or
es
retf
mov
(bad)
cli
ret
mov
mov
push
sub
xchg
jp
int3
hlt
push
xor
icebp
cmp
dec
mov
xor
cmps
aad
loop
push
fldenv
pusha
xchg
popa
xor
stos
sub
sub
push
jbe
repnz
loop
iret
leave
addr16
mov
mov
xchg
jmp
movs
push
jno
xlat
(bad)
sbb
and
fcom
(bad)
sub
dec
xor
cmps
sub
mov
xor
mov
mov
in
movs
mov
in
inc
sub
push
adc
inc
(bad)
popa
jl
or
jge
sbb
inc
nop
xchg
rcr
and
fstp
sub
cmp
adc
adc
add
push
or
and
nop
out
pop
dec
dec
xchg
stos
mov
sbb
jae
pop
sti
add
and
(bad)
daa
lahf
push
out
dec
jmp
jg
push
or
xchg
pop
(bad)
adc
xchg
xchg
iret
in
mov
test
(bad)
mov
retf
xchg
inc
mov
popf
repz
bound
inc
xchg
xor
jno
pop
pop
fcomi
retf
daa
xor
fnstcw
jle
call
daa
repz
jmp
out
push
clc
jecxz
in
and
fnsave
jmp
in
arpl
jno
and
retf
mul
movs
xor
pop
or
popf
rol
cmp
xchg
xor
das
adc
mov
push
mov
je
sbb
clc
push
jns
lahf
movs
mov
fwait
ins
mov
mov
push
or
add
cmc
outs
mov
adc
jae
loope
stos
mov
inc
(bad)
retf
(bad)
dec
or
test
test
loope
das
loopne
jno
stos
sar
dec
stc
mov
es
mov
lds
loope
out
call
cmp
ja
stc
(bad)
ins
jecxz
xchg
xchg
xor
in
mov
jl
dec
(bad)
aam
fwait
and
cli
dec
sahf
(bad)
sbb
push
jle
push
out
and
dec
sub
imul
cmps
js
call
rcr
xlat
imul
ja
jbe
inc
out
loope
xor
ret
push
add
test
cmps
out
dec
mov
push
movs
adc
test
call
fisub
xlat
mov
mov
dec
mov
out
or
pop
sub
stos
dec
stos
cmps
mov
int
shr
aam
fcomp
xor
adc
icebp
aam
shl
inc
dec
dec
jge
jae
test
ficom
pop
loopne
(bad)
xor
mov
add
loope
lods
dec
sbb
out
in
fmulp
mov
mov
ds
leave
dec
xor
sbb
jae
push
cmps
(bad)
pop
mov
and
leave
inc
stos
int
mov
lock
ja
stos
add
jno
daa
sub
push
aaa
mov
inc
sub
dec
movs
sub
xchg
ret
cmp
pop
adc
enter
cdq
inc
mov
jle
rcl
out
outs
adc
pop
in
aad
and
jge
push
adc
inc
scas
adc
dec
out
xchg
sub
mov
ins
lock
and
adc
leave
popa
sbb
and
push
or
(bad)
mov
cmc
mov
fs
and
rol
xchg
aas
add
mov
and
bound
xlat
or
scas
mov
or
add
jo
ss
fstp
lea
or
js
(bad)
mov
sub
es
jp
or
rol
into
out
cli
cmps
cmps
and
cs
cmp
mov
mov
adc
mov
popf
cli
test
js
xchg
add
mov
dec
dec
mov
clc
and
and
test
arpl
xchg
cmp
xlat
mov
xchg
xor
pop
mov
cmp
in
movs
pop
inc
imul
cmp
into
pop
xchg
and
cmps
xchg
xchg
and
sahf
fist
sbb
and
test
push
and
xor
sbb
nop
mov
out
push
sub
xchg
jb
xlat
mov
xchg
mov
push
in
cwde
adc
fwait
sub
jl
shl
scas
jo
je
imul
imul
cli
cmp
sub
inc
(bad)
mov
mov
mov
cld
cmp
lods
add
jmp
pop
aaa
call
adc
inc
in
sub
dec
stos
es
fsubr
inc
cld
lahf
sub
das
mov
out
cmp
inc
fimul
mov
or
sahf
and
test
popa
les
dec
add
xchg
ja
data16
ins
iret
add
mov
popf
cmps
call
mov
frstor
hlt
dec
ja
cmp
loop
pop
shl
(bad)
jp
sar
call
dec
and
mov
int
ins
movs
sub
adc
hlt
rol
add
int
fcmovnb
adc
shl
sahf
nop
mov
call
ins
mov
inc
sar
fnstenv
adc
mov
jne
inc
xchg
enter
lods
sbb
pop
ins
push
cmps
ins
inc
cmps
push
sub
pop
je
js
into
inc
pushf
je
bound
shl
dec
and
jno
int
xor
std
cmp
loop
outs
pop
cmp
add
retf
popf
bound
pop
shl
and
test
pop
push
push
out
in
jno
mov
ins
jo
sar
dec
cmc
loop
xchg
add
mov
add
js
into
fld
(bad)
mov
push
fnstenv
fwait
ret
data16
movs
mov
mov
fadd
popa
jg
nop
inc
jmp
mov
scas
mov
cmp
fwait
mov
xor
dec
mov
cmp
mov
fwait
sbb
or
adc
rcl
mov
std
test
cdq
pop
cmps
ja
outs
test
pop
sahf
cmp
ins
sub
dec
push
addr16
pushf
idiv
stc
cmp
(bad)
cli
iret
stos
int3
sub
iret
mov
inc
movs
pop
dec
add
push
lods
jp
popa
data16
pop
push
push
xchg
push
movs
push
cmc
jmp
rep
jl
scas
stos
push
jmp
adc
into
ror
mov
and
xor
cmc
cmps
cmp
in
inc
(bad)
es
sub
nop
retf
jp
xor
mov
or
cmps
dec
add
add
mov
repz
mov
add
adc
lea
mov
push
out
push
ss
push
push
lods
adc
scas
les
push
retf
pop
arpl
or
inc
jnp
mov
jecxz
add
cmp
pop
clc
and
mov
cli
out
mov
and
sub
std
xchg
ret
jl
mov
aaa
or
mov
sub
sub
in
sbb
in
mov
icebp
jmp
fcmovne
ret
pop
push
xlat
stos
mov
jg
pop
sub
xor
fldenv
pop
iret
mov
(bad)
ins
jmp
test
xchg
imul
clc
mov
jns
pop
dec
test
xor
daa
mov
mov
add
cmp
ins
scas
pop
cmp
mov
dec
jae
add
in
inc
es
ds
pop
into
mov
mov
jbe
and
add
and
inc
fucomp
test
xlat
push
and
aaa
xor
dec
and
sub
xchg
sbb
add
das
push
lds
inc
cmp
pop
sbb
inc
aam
imul
(bad)
mov
mov
inc
adc
(bad)
nop
push
and
jecxz
lea
jmp
fiadd
mov
aam
xlat
je
in
les
nop
icebp
pop
out
cmps
arpl
sbb
cmp
push
push
xor
xchg
dec
pop
nop
ficomp
mov
sub
mov
ds
(bad)
mul
pop
lods
mov
sbb
adc
(bad)
mov
cmp
js
movs
clc
and
call
shr
aas
xchg
jmp
ja
aaa
mov
inc
dec
xchg
add
sahf
stos
jns
inc
jmp
je
lods
add
rol
xchg
pop
jmp
loop
or
fbstp
das
and
mov
retf
mov
mov
ds
iret
stos
lea
lock
and
xchg
int3
daa
mov
xor
sub
adc
cmps
pop
xor
cmps
loop
xchg
and
imul
outs
(bad)
xlat
scas
test
xor
movs
push
xchg
jns
mov
sub
rcl
inc
dec
jae
mov
movs
into
push
or
popf
not
ja
sar
inc
rcr
es
clc
retf
shr
push
arpl
mov
cwde
pop
or
imul
xor
loop
(bad)
call
int3
dec
push
sub
mov
dec
push
pop
gs
sub
fwait
and
sahf
add
fadd
div
pop
lock
push
fild
retf
mov
pop
mov
fdiv
fidivr
jbe
fisttp
jne
and
leave
stos
mov
xchg
repz
push
rcr
ss
movs
das
lds
stos
movs
sbb
enter
iret
sub
test
and
push
out
sahf
or
fiadd
xchg
fld
cli
xchg
sbb
arpl
jp
push
xchg
xor
(bad)
outs
mov
mov
xlat
adc
jae
xchg
sub
pushf
jne
dec
test
adc
hlt
test
sub
mov
push
pop
ss
inc
mov
je
xchg
loope
xchg
mov
icebp
inc
sub
out
int3
lahf
in
push
mov
je
pop
jae
scas
dec
psubb
dec
mov
cld
dec
cmps
sub
mov
(bad)
cmp
jg
(bad)
fbld
lock
cmp
jg
das
lds
lds
call
sub
sub
pop
adc
ds
retf
js
aaa
out
ror
cdq
jg
fcmovne
and
and
mov
rcr
mov
test
cdq
lahf
cmps
lock
cmps
loop
dec
lea
outs
stos
mov
mov
ins
fdivp
(bad)
in
mov
movs
sub
inc
sub
scas
pop
and
hlt
jp
mov
add
jecxz
push
daa
inc
xchg
xor
push
(bad)
push
jp
int
bound
dec
push
in
mov
xor
bound
sti
aad
sahf
cld
jge
out
ret
jne
cdq
inc
out
cmps
pop
std
jmp
daa
(bad)
daa
jge
fnstenv
mov
loop
sub
retf
cmp
jmp
sbb
in
mov
sub
lahf
cld
xor
stos
std
and
hlt
jmp
mov
xor
lock
jo
fcom
mov
mov
cs
push
jbe
xlat
cmp
or
in
fstp
pop
mov
ins
sbb
mov
jne
push
mov
dec
imul
arpl
mov
sbb
fmul
xchg
pop
ja
icebp
sbb
cmps
iret
iret
outs
mov
fs
outs
xor
push
fild
xchg
jl
je
mov
add
push
fwait
mov
push
or
sbb
fisub
mov
ins
pop
pop
div
pop
dec
imul
sahf
loop
adc
std
mov
in
cmps
xchg
ja
dec
(bad)
sahf
mul
mov
setle
je
sahf
pop
jno
sub
xchg
rcl
jno
push
lods
jns
call
ss
out
das
fcomi
int
test
xor
xchg
sub
and
xchg
jns
jmp
or
push
jp
stos
std
into
add
xchg
rcr
push
cwde
leave
loopne
add
jp
inc
retf
adc
jo
xchg
dec
dec
(bad)
out
(bad)
js
ins
jl
add
sub
and
add
xor
mov
call
(bad)
fnstsw
sub
or
and
nop
mov
pusha
js
or
sub
ret
mov
sbb
scas
std
jg
arpl
hlt
iret
add
mov
dec
fld
and
inc
fsubrp
leave
pop
pop
and
xchg
pop
enter
bound
(bad)
or
inc
fiadd
mov
leave
xlat
sti
es
dec
and
add
adc
add
add
int
xor
mov
push
push
pop
jno
cmc
pop
(bad)
imul
shl
iret
(bad)
gs
and
xchg
sub
add
add
int
int3
(bad)
xor
or
xchg
add
(bad)
inc
and
mov
mov
dec
pop
mov
mov
mov
cs
adc
cs
data16
pop
loopne
test
add
arpl
lods
pop
sub
fcomp
(bad)
cmp
movs
in
call
movs
or
adc
jmp
mov
out
movs
sbb
ss
sub
pop
sub
daa
pop
ins
sti
or
fsub
test
in
icebp
setae
mov
cmps
and
mov
fisubr
adc
adc
aam
inc
add
xchg
loopne
and
and
mov
scas
(bad)
and
(bad)
sar
adc
or
fcom
and
dec
xlat
shr
cmp
stc
fdiv
xchg
mov
lahf
lods
xor
dec
xor
push
pop
daa
jns
int3
or
sti
sbb
test
inc
enter
or
xor
addr16
pop
(bad)
hlt
jge
cmps
das
jmp
in
mov
inc
mov
bound
inc
add
fwait
ror
or
sti
xchg
push
dec
push
push
lods
add
or
push
sub
cmp
xchg
popf
rol
inc
pusha
fwait
pop
jns
ror
mov
push
test
jge
jne
dec
xchg
add
inc
pop
mov
pop
pop
cs
jae
sahf
(bad)
cdq
inc
or
cmp
dec
ins
dec
pop
sub
dec
into
(bad)
cld
push
add
jns
adc
xlat
movs
or
or
hlt
ror
lods
push
icebp
dec
mov
call
iret
inc
stc
pop
cmps
adc
jg
cmps
imul
sub
mov
shr
jl
or
xor
(bad)
push
in
sbb
cmc
mov
pop
nop
imul
mov
or
push
xchg
add
aad
mov
outs
fsub
iret
jmp
and
pop
repz
sbb
pop
neg
dec
pop
add
pop
push
mov
cmps
mov
aam
pop
pop
hlt
pop
dec
sar
std
push
cmp
sahf
add
add
fmul
std
push
fisubr
jbe
cmp
andps
mov
out
and
ror
jmp
fldenv
es
mov
int3
dec
cmp
push
and
sti
sar
test
sub
pushf
pop
add
mov
inc
cmp
xchg
fs
dec
fwait
enterw
push
xor
sub
retf
xor
cmps
push
and
popf
retf
xlat
mov
sbb
jg
mov
cld
or
ins
cmc
dec
dec
jp
in
xchg
xor
mov
repz
mov
js
pop
push
push
xchg
ror
jb
and
jecxz
vpmacsdql
mov
ja
mov
std
mov
sbb
outs
dec
push
inc
mov
inc
inc
sti
or
ret
test
js
push
test
push
mov
mov
push
and
sbb
ds
xor
mov
mov
and
mov
gs
popa
in
dec
fadd
mov
dec
inc
mov
outs
jbe
retf
bound
adc
aam
sbb
mov
retf
jno
mov
lahf
xchg
fdiv
fs
mov
movs
lods
repz
mov
pop
cmp
fiadd
ret
out
daa
mov
imul
dec
(bad)
mov
mov
mul
adc
mov
add
push
jmp
inc
mov
dec
jmp
add
add
or
shl
scas
imul
push
xchg
in
xchg
add
pop
or
lock
mov
xor
sbb
fwait
test
cwde
test
out
jge
dec
faddp
test
cs
add
xchg
push
add
sbb
add
jle
stos
nop
sbb
jge
in
scas
cmp
jne
cmp
push
adc
bound
jb
jae
jb
icebp
bound
call
mov
mov
cmc
cmps
ret
lods
repnz
mov
pop
sbb
into
lods
int
sbb
std
pushf
fistp
inc
xor
sti
pusha
sbb
cmp
test
xchg
addr16
push
mov
stos
xor
sub
call
in
in
mov
iret
xchg
fidivr
pop
out
test
fild
and
(bad)
pushf
shl
cli
icebp
mov
stos
daa
pusha
sub
cli
push
dec
sbb
xchg
cmp
sbb
jle
aad
(bad)
(bad)
xlat
call
hlt
cmps
pop
or
(bad)
fisttp
out
clc
ret
test
or
mov
inc
sub
mov
mov
shl
rcl
ret
xchg
ret
and
outs
cld
test
cwde
sti
mov
xchg
movs
pop
sub
sbb
dec
test
ins
paddq
mov
sub
clc
mov
mov
push
scas
int
movs
lock
call
jge
in
aad
loope
shl
cmps
xor
push
xchg
cs
adc
imul
popf
(bad)
mov
in
(bad)
shl
stos
call
xor
lahf
clc
mov
or
cmp
mov
or
mov
das
test
mov
xchg
mov
dec
adc
push
xor
mov
xchg
or
gs
test
retf
inc
add
inc
or
test
cld
sbb
jb
ins
pop
pop
mov
cmp
(bad)
xchg
fistp
popa
add
test
xchg
mov
stos
imul
push
dec
or
int3
adc
ret
cmc
(bad)
mov
test
sahf
int3
out
mov
push
dec
adc
arpl
data16
inc
xor
sti
pop
popa
movs
in
hlt
xchg
fadd
cmp
dec
sub
mov
jne
push
push
push
jne
push
jge
fdivr
push
sbb
stc
mov
add
popa
scas
in
sub
and
lods
fld
imul
and
jbe
mov
mov
and
or
xor
ret
cs
push
add
sbb
(bad)
lahf
dec
or
retf
fs
inc
sbb
push
inc
es
inc
daa
inc
ins
sub
add
pop
cmp
inc
sub
addr16
mov
push
inc
add
mov
and
int
movs
(bad)
arpl
dec
repnz
nop
add
stos
jmp
cmps
jmp
ret
mov
mov
nop
sti
mov
jl
push
ins
(bad)
out
bound
mov
lods
rcl
push
adc
sbb
pop
xor
add
mov
jmp
fidivr
and
cmp
imul
retf
adc
and
dec
adc
cmp
je
jns
gs
(bad)
movs
loopne
ret
(bad)
mov
adc
jle
and
outs
push
jle
jo
cwde
sbb
inc
xor
sti
mov
mov
push
adc
repnz
fcomp
mov
popf
hlt
mov
push
cs
lock
(bad)
push
cmp
push
and
push
adc
jg
push
cmp
ins
imul
sub
xchg
rol
fisttp
test
das
xor
dec
sti
mov
mov
fcomp
outs
pop
sbb
jno
push
pushf
fidivr
add
loop
adc
push
push
rcr
sti
add
dec
sub
cmp
sub
adc
add
jb
dec
adc
outs
sub
addr16
cs
xchg
jns
out
or
jbe
jno
lods
out
jbe
sbb
mov
mov
mov
xchg
fistp
scas
std
sahf
addr16
sub
add
push
adc
jl
and
push
push
mov
jnp
jg
popf
ret
mov
mov
pop
dec
(bad)
and
mov
mov
mov
mov
inc
push
pop
sub
sbb
pusha
xor
dec
fdiv
retf
mov
mov
mov
lods
push
inc
int3
mov
addr16
push
inc
es
lock
or
test
int3
pushf
out
mov
cmps
in
xor
sbb
xchg
aam
repz
out
push
gs
or
loop
aam
out
mov
call
mov
aam
out
cmp
add
pop
xor
hlt
xchg
mov
push
pusha
cmps
loope
xlat
cli
mov
test
stc
cmp
shl
xchg
loope
pop
in
js
in
mov
mov
enter
mov
or
mov
mov
shl
test
(bad)
push
push
dec
sub
jge
pop
sub
iret
xchg
(bad)
fstp
jns
pop
loopne
(bad)
mov
xchg
aad
mov
bound
dec
dec
adc
xchg
movs
in
and
xchg
jno
je
and
add
mov
movs
cmps
enter
jno
jno
mov
jne
cld
mov
adc
int
aad
dec
push
jne
sub
in
test
imul
cmp
jge
fdivr
push
dec
sub
pop
or
inc
call
sub
jg
push
sbb
jne
mov
sti
mov
jbe
mov
imul
adc
mov
(bad)
std
xchg
icebp
mov
div
cmp
xchg
les
inc
mov
jne
pushf
push
pop
fwait
stc
xchg
push
pop
add
ret
div
dec
cmp
cmp
pop
or
(bad)
mov
rol
bound
push
or
out
scas
in
xchg
repnz
mov
pop
test
lds
add
dec
add
mov
sub
(bad)
push
in
stc
xchg
loop
jg
jns
cmps
retf
jo
dec
push
jge
int
sub
clc
scas
(bad)
mov
mov
lahf
ror
lods
fs
xor
cdq
xchg
loope
mov
push
dec
adc
stc
popa
das
ins
xchg
icebp
inc
add
sub
pop
xchg
hlt
lods
out
sbb
nop
or
push
add
int3
scas
call
sbb
addr16
fcom
push
sbb
stos
stc
mov
adc
int
pop
pop
push
pop
sbb
xchg
cmc
mov
addps
js
lods
mov
mov
dec
(bad)
sar
je
xor
or
adc
call
mov
clc
mov
es
push
and
retf
aam
fst
push
dec
or
jne
not
cmc
xchg
xlat
xchg
inc
(bad)
retf
mov
xchg
loopne
pop
sub
jbe
sbb
xchg
fidivr
movs
rcl
xchg
aam
les
cmps
into
pushf
fild
and
jnp
mov
int
in
mov
xlat
mov
mov
dec
mov
mov
loope
in
mov
jecxz
jp
mov
xchg
imul
or
bound
jb
xor
add
xor
or
inc
out
(bad)
rcr
outs
xor
inc
ins
sub
jg
mov
fadd
push
push
shl
sahf
(bad)
mov
push
pop
dec
cmp
and
mov
scas
cwde
mov
mov
mov
scas
cmp
ficom
jne
jne
int3
jbe
push
adc
jnp
push
loop
mov
fldl2e
xchg
lods
out
mov
and
pop
or
cmp
aas
das
bound
imul
cmp
mov
or
sti
mov
or
sub
sub
cmp
push
fist
push
int3
push
pop
out
rcl
inc
sbb
inc
jo
cmps
repnz
mov
cmp
pop
adc
mov
cmc
mov
rcl
sti
mov
push
test
sbb
dec
cmp
cdq
fiadd
loope
mov
adc
inc
inc
sbb
inc
sbb
xchg
icebp
lods
sub
leave
xchg
aad
mov
(bad)
xchg
sub
lahf
mov
outs
sub
adc
push
int3
mov
cmp
repz
jle
xchg
aad
hlt
mov
pushf
fisttp
ror
push
adc
add
or
cmp
nop
ror
and
pop
sub
push
adc
mov
pushf
push
xor
pop
cmp
call
mov
xchg
out
pop
jo
retf
stos
clc
mov
ins
out
jmp
nop
cmp
fldcw
ds
clc
jae
push
pusha
and
sbb
or
jge
imul
jle
sub
leave
sbb
or
scas
rcl
fisttp
dec
inc
out
jne
push
call
dec
(bad)
jno
jno
leave
retf
jg
push
out
cdq
sahf
int
lds
imul
mov
sbb
dec
int
out
ja
jecxz
popa
das
ins
push
fs
lahf
std
lahf
sbb
in
(bad)
mov
loop
push
add
fild
jb
in
fsub
int
lods
hlt
(bad)
xchg
out
std
scas
in
mov
inc
das
jbe
add
dec
sub
clc
mov
scas
call
in
test
rcr
mov
(bad)
retf
jmp
cmp
dec
adc
test
mov
adc
sbb
xchg
rcl
iret
iret
jnp
arpl
mov
jae
inc
sub
push
adc
xlat
ins
iret
add
adc
outs
jg
in
stos
ret
and
inc
int3
lods
jecxz
mov
std
sahf
int3
mov
xor
rcl
bound
inc
sub
push
add
mov
clc
mov
mov
xor
clc
sti
inc
and
fild
dec
adc
mov
add
mov
repnz
test
iret
xchg
shl
and
adc
xor
lods
or
dec
adc
sbb
cmp
pop
inc
leave
jnp
imul
add
ret
mov
push
outs
sub
js
inc
sub
inc
jge
js
jns
js
mov
shr
jle
pop
sbb
fstp
fist
imul
fist
ja
addr16
lahf
fst
pop
sbb
mov
or
mov
fisubr
mov
jns
jns
std
lods
out
frstor
dec
pop
mov
cmp
pop
adc
popf
les
stos
enter
test
ins
push
loope
adc
jb
push
add
pop
pop
pop
pop
inc
(bad)
aam
xchg
fisub
es
cmp
sbb
and
xchg
(bad)
jg
or
sbb
test
push
and
je
pop
aas
jo
cmps
repnz
and
out
cmp
sbb
dec
push
inc
add
nop
shl
sub
xchg
mov
push
jmp
sbb
sub
jae
inc
sbb
inc
std
pushf
fimul
mov
loope
test
inc
loop
cld
mov
nop
lahf
rcl
pusha
add
inc
cmps
aam
loop
clc
inc
cwde
rol
add
and
dec
or
or
push
or
mov
outs
pop
sbb
popa
ds
ret
mov
xchg
rol
test
(bad)
(bad)
cmps
in
loopne
iret
or
es
dec
retf
cmp
call
mov
cmps
in
xchg
les
jb
dec
jmp
cwde
pop
add
cmc
test
sbb
adc
imul
xchg
rcl
xor
push
xor
retf
mov
hlt
sub
mov
and
or
imul
pcmpgtb
imul
xlat
xchg
not
cmc
mov
xor
pop
or
(bad)
mov
jecxz
pop
enter
in
div
xchg
ja
pusha
ins
and
mov
add
out
xchg
rcr
push
adc
fst
(bad)
xchg
iret
lods
(bad)
mov
ret
adc
jbe
xor
inc
add
inc
or
aad
jae
dec
sub
mov
push
shl
xor
sti
mov
sub
xor
rol
mov
mov
hlt
call
cwde
bound
(bad)
xchg
into
mov
call
lahf
inc
or
rcr
xor
push
inc
inc
aas
pop
pop
cwde
movs
inc
or
pop
sti
xor
sbb
inc
or
imul
and
inc
or
sbb
mov
and
ja
sti
mov
xor
add
push
xor
jnp
addr16
aam
sbb
xchg
shl
push
pop
add
or
arpl
lods
into
push
push
inc
xor
sub
and
test
leave
aaa
push
sbb
xchg
push
or
(bad)
int
fstp
sub
inc
popf
lds
jae
add
js
arpl
outs
sub
mov
mov
mov
(bad)
iret
lods
loop
les
repz
fwait
(bad)
mov
stc
mov
(bad)
sub
mov
and
pop
sbb
(bad)
mov
mov
jecxz
fisttp
leave
call
out
cdq
pop
add
add
enter
lods
jecxz
cs
mov
inc
adc
push
and
pop
pop
rcl
mov
cdq
fstp
es
arpl
mov
jno
cmc
pushf
fadd
pop
cmp
xchg
inc
sub
push
repz
inc
add
fst
pop
or
test
fisub
lods
jmp
stos
ret
arpl
(bad)
out
out
push
aaa
push
adc
mov
scas
mov
int3
mov
xchg
ror
cmp
call
pusha
xor
mov
(bad)
retf
mov
mov
or
xchg
shr
pusha
es
add
in
sbb
xchg
fcmove
cmp
jne
lock
mov
xor
jbe
fdiv
jb
lahf
repnz
js
mov
xchg
cmc
jge
in
sub
cmp
mov
adc
jb
push
sbb
sub
mov
mov
sbb
data16
cmp
test
jb
inc
cmovns
jg
(bad)
lahf
in
push
adc
fwait
movs
aaa
inc
xor
pop
(bad)
push
xor
iret
cmc
lods
or
jnp
push
pop
je
dec
add
sbb
or
sub
push
rcl
add
pop
or
jno
inc
push
add
xchg
jecxz
test
fwait
push
or
inc
or
mov
scas
in
mov
stos
in
add
aas
push
adc
dec
test
inc
sub
js
sub
sub
pop
sub
add
mov
fisttp
lock
xor
fisubr
cmp
pop
sbb
add
xchg
pop
mov
inc
adc
inc
test
inc
data16
xchg
cmp
ss
adc
xchg
xor
in
lahf
fsubr
and
inc
sbb
mov
mov
dec
idiv
dec
cmps
neg
div
inc
push
inc
xchg
xchg
fisubr
pop
adc
sub
adc
jae
mov
test
or
jne
scas
jmp
dec
jnp
retf
test
sbb
jle
pop
sub
fld
imul
ret
cwde
add
jle
add
jno
pop
inc
adc
push
inc
adc
push
jl
mov
mov
mov
xchg
inc
pop
and
mov
and
ficom
stos
enter
or
push
or
cmc
cmps
in
ss
sbb
or
arpl
jb
jge
pop
xor
mov
loope
fldenv
mov
cmps
fist
pop
adc
ficom
rcl
cmp
cmc
mov
pop
fild
cmp
lods
fbld
xlat
xchg
and
mov
adc
jbe
pop
sbb
cmp
das
inc
xor
dec
push
or
dec
or
dec
add
pusha
pusha
push
ss
leave
push
dec
out
add
mov
iret
add
dec
jecxz
retf
nop
pop
xor
pop
sub
inc
in
ficom
jl
pop
push
push
into
cs
pop
cmp
movs
xlat
or
jp
je
jg
add
ins
das
jne
and
retf
xchg
into
mov
xor
das
jge
sti
call
movs
shr
outs
and
repz
stc
test
xchg
ret
jle
pusha
add
jno
cmp
in
and
mov
call
cli
fs
push
push
scas
inc
xor
pop
push
ins
sahf
fld
sti
mov
ja
out
out
out
sub
mov
outs
aaa
inc
push
or
xchg
mov
mov
stc
or
jne
push
xor
dec
xchg
fdivr
(bad)
xchg
lock
adc
jae
add
sub
cwde
fstp
mov
aad
mov
lock
and
mov
adc
mov
and
sub
push
jl
pop
add
inc
sbb
jmp
retf
(bad)
retf
stc
mov
in
lds
xlat
(bad)
out
mov
xor
mov
cmp
enter
into
mov
out
lods
fidivr
cld
movs
(bad)
dec
mov
jg
dec
or
dec
ja
cld
xchg
in
repz
mov
adc
pop
sbb
jne
daa
popa
cmp
aad
(bad)
mov
mov
loop
stos
clc
and
test
test
mov
mov
imul
xor
cmp
push
adc
mov
test
adc
pop
sbb
mov
(bad)
ja
outs
test
mov
stos
fcomp
push
je
ins
xor
(bad)
xchg
(bad)
mov
xchg
(bad)
stc
xchg
xchg
fisub
ret
cdq
(bad)
mov
cmps
xchg
stc
mov
(bad)
fimul
jns
dec
adc
scas
int3
cmp
jg
inc
loopne
paddd
out
adc
fldcw
cld
aad
sub
inc
add
sub
xchg
imul
rol
ss
out
mov
xlat
aad
gs
sub
or
inc
das
pusha
xor
sbb
cmps
cdq
fist
sahf
movs
xlat
(bad)
fmul
dec
sbb
mov
mov
sbb
xchg
movs
sub
or
jne
push
cmp
pop
sub
xor
jne
pop
loope
push
xchg
int3
scas
std
mov
xchg
ret
mov
imul
rol
retf
xor
jne
push
in
stc
jecxz
cld
lahf
aaa
inc
sbb
cmps
(bad)
fs
sub
inc
and
inc
or
aaa
shr
repnz
in
lds
push
sbb
cmp
sub
jle
mov
xchg
add
fild
inc
add
adc
mov
push
ins
mov
pop
and
loope
int3
mov
test
mov
xchg
cmp
add
jg
js
push
cmp
pop
out
out
jmp
(bad)
mov
test
sahf
sub
or
aas
bound
inc
xchg
and
dec
push
and
add
xor
stc
mov
pop
cmp
sbb
mov
add
push
xor
cmp
call
mov
cmps
inc
ss
dec
outs
sbb
lea
sub
fimul
icebp
in
add
hlt
xchg
pop
jl
(bad)
mov
ins
push
push
push
adc
jne
pop
ins
das
pop
add
adc
and
pop
push
pop
loop
mov
cmc
or
das
adc
dec
cmp
xor
xchg
pop
sbb
cmps
jb
dec
adc
xor
fistp
leave
mov
xchg
jo
pop
cmp
ror
cmp
push
and
aaa
sub
jns
pop
cmp
pop
ss
rcr
cmp
sbb
xchg
cli
mov
lods
into
fisub
add
mov
sub
ret
and
shl
or
fwait
sub
jg
jle
ret
int3
movs
mov
push
je
fs
and
fisub
dec
and
inc
mov
test
mov
sbb
outs
sub
jbe
call
push
or
test
cmps
rol
pusha
and
pop
sbb
lahf
repz
add
xor
lods
fcomp
cdq
shl
dec
add
jmp
and
cmp
out
ins
push
ins
test
mov
add
mov
test
bound
dec
movs
jmp
push
pop
test
dec
xchg
xlat
jle
sbb
cli
dec
mov
xchg
push
add
cdq
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
stos
sti
mov
lock
into
pushf
fidivr
add
in
lods
hlt
mov
movs
(bad)
jno
push
adc
lods
(bad)
mov
(bad)
xchg
ret
scas
in
lahf
mov
mov
xchg
cmc
mov
mov
into
pop
sub
push
inc
daa
imul
rcr
pop
adc
(bad)
int
mov
add
sar
call
mov
test
or
adc
jle
pop
movs
icebp
xchg
ror
or
movs
cld
mov
js
arpl
cmp
jo
mov
retf
test
out
cmps
int3
jns
imul
mov
mov
inc
or
bound
jnp
repnz
jge
jl
add
pusha
fcomp
fnstcw
sub
cmp
jl
jge
sahf
loopne
dec
xor
sub
xchg
std
mov
out
mov
pop
cmp
sub
repnz
sub
add
jmp
cmp
xor
cld
sbb
(bad)
int3
scas
loopne
pop
pop
push
and
dec
jmp
jmp
adc
imul
cld
out
repnz
daa
out
or
and
push
popf
mov
loopne
mov
or
dec
stc
call
push
aas
cmp
sbb
adc
popa
ficomp
movs
sbb
sub
mov
stos
xchg
repnz
ret
call
outs
push
jge
scas
out
or
add
mov
push
dec
sbb
xchg
xchg
retf
inc
pop
aas
jp
sub
cli
push
or
xor
pushf
stc
call
push
xor
dec
adc
out
lahf
stc
mov
push
dec
or
leave
cmp
or
fimul
xchg
es
pop
push
(bad)
xchg
enter
(bad)
ins
push
add
push
cli
mov
xchg
lahf
(bad)
(bad)
inc
or
cmp
shl
jmp
add
mov
mov
and
dec
loopne
in
test
fstp
ror
loop
lock
fdiv
xchg
hlt
mov
mov
test
lahf
stc
(bad)
shl
nop
clc
mov
mov
aad
aam
cld
(bad)
retf
xchg
sbb
jnp
push
dec
pop
popa
and
push
inc
es
add
pop
sub
ss
pop
ja
ins
xor
jns
pop
pop
inc
pop
or
and
xor
dec
cmp
jg
sbb
sub
inc
sbb
imul
das
push
dec
xor
inc
add
push
cmp
maxps
jg
pop
push
push
cmp
sbb
imul
and
jl
inc
pop
cwde
(bad)
mov
sbb
sbb
ins
and
sub
cmp
cmp
pop
cmp
repz
fcomp
sbb
pop
addr16
ror
popf
ins
aaa
inc
mov
or
push
adc
push
push
and
aaa
in
xchg
cmps
mov
sbb
lods
(bad)
popa
test
or
mov
mov
stos
(bad)
lods
shr
mov
sbb
jmp
les
rcr
add
jne
jg
fwait
ror
out
not
in
in
mov
sahf
hlt
xchg
cwde
in
mov
fistp
retf
stos
sti
mov
in
std
mov
(bad)
mov
ret
mov
xchg
hlt
fstp
mov
mov
fisubr
aam
cmc
mov
fstp
inc
loop
repz
into
mov
stos
clc
mov
repz
jecxz
lock
mov
mov
fwait
cli
mov
sahf
fild
div
in
into
mov
lods
jecxz
test
fistp
mov
xchg
shl
retf
mov
out
not
aad
loop
rol
int
jmp
jmp
(bad)
int
les
shl
sub
out
fimul
int
in
sahf
fild
popf
shl
movs
jmp
movs
loope
lock
in
mov
call
retf
(bad)
int3
mov
mov
mov
pop
inc
push
push
ss
pop
adc
jp
pop
cmp
imul
and
das
ficomp
jb
scas
retf
and
dec
mov
sbb
push
cmp
mov
sbb
ins
daa
loope
movs
cld
cmc
sub
jno
pop
pop
cmp
xor
shl
mov
pop
ss
pushf
test
ret
or
or
addr16
add
mov
dec
arpl
xchg
push
scas
repnz
xor
outs
or
pop
adc
mov
sub
(bad)
mov
mov
push
inc
mov
mov
sbb
push
ja
icebp
test
pop
mov
lea
and
inc
ss
xchg
out
dec
clc
mov
xchg
dec
dec
xchg
movs
push
sbb
imul
cmp
mov
and
inc
adc
cmc
jnp
call
and
and
mov
xor
mov
sti
mov
sbb
add
mov
in
stos
adc
pop
sbb
cs
pop
data16
js
fiadd
push
cli
xchg
rcr
inc
add
movs
enter
cli
cwde
pushf
lahf
fnstsw
rcr
loopne
and
retf
add
pop
test
call
(bad)
dec
xchg
mov
inc
or
inc
lock
add
jae
or
aad
jns
fisttp
mov
stos
mov
(bad)
xchg
adc
jg
pop
(bad)
(bad)
xchg
fdiv
aas
popa
and
in
enter
lock
pusha
add
or
pop
rcr
(bad)
mov
jp
pop
jp
cmps
in
mov
cwde
xchg
lds
or
xchg
shl
(bad)
(bad)
jno
add
std
or
mov
mov
inc
or
push
inc
es
mov
lods
(bad)
cmps
fsubr
jp
push
sbb
mov
mov
outs
sub
fdivr
out
call
test
mov
sbb
xor
inc
jo
push
xchg
mov
movs
int3
and
cs
(bad)
movs
jecxz
add
push
clc
mov
sub
mov
aaa
test
lea
pop
pop
gs
aaa
push
aaa
adc
jp
dec
fld
mov
ret
mov
dec
adc
and
fild
inc
stos
rcl
(bad)
and
add
mov
ss
xchg
xor
aam
cs
jbe
in
mov
cmps
dec
and
mov
in
mov
test
popf
(bad)
cmp
or
nop
loope
xchg
les
pop
lock
sbb
mov
aad
aam
ds
aad
cli
mov
fcomp
aaa
push
mov
xchg
icebp
add
jo
dec
cmp
mov
pushf
rol
pop
dec
sub
in
lods
cmps
loope
mov
xchg
icebp
mov
lods
loop
inc
push
dec
xor
or
outs
test
movs
loop
enter
mov
xchg
retf
jp
dec
or
rcl
call
push
inc
push
gs
ret
ins
(bad)
in
in
ja
push
cmp
or
mov
and
adc
inc
sbb
sub
mov
and
mov
or
arpl
lock
dec
sub
or
dec
test
xchg
mov
rcl
(bad)
xchg
(bad)
xchg
das
dec
and
xchg
(bad)
jbe
jg
clc
mov
ficomp
lods
ins
ds
mov
pop
cmp
and
loope
jno
pusha
cmp
or
pusha
or
pop
adc
(bad)
mov
mov
sub
inc
sbb
jg
pop
test
into
popf
fidivr
call
push
ins
icebp
bound
jb
pop
or
mov
pop
xor
pop
mov
and
ret
mov
dec
or
(bad)
xchg
cmps
aam
push
or
sbb
into
(bad)
xlat
aas
ins
cmp
mov
mov
pop
test
cmp
xor
lods
xchg
rol
jmp
or
arpl
int
int3
lahf
int3
lahf
std
mov
sub
in
in
ret
mov
sub
inc
jmp
std
xchg
fisttp
arpl
push
xchg
fidivr
jbe
add
mov
(bad)
mov
cmp
mov
mov
add
outs
cmp
sar
(bad)
cs
sahf
test
sbb
int
cld
mov
mov
xchg
xlat
in
arpl
jb
push
popf
hlt
xchg
lods
not
outs
in
ret
ss
mov
pop
adc
adc
call
jmp
rol
xchg
xlat
daa
inc
icebp
mov
les
xor
dec
xlat
xchg
into
sub
inc
daa
popa
lock
or
arpl
out
imul
shl
stos
(bad)
sahf
in
or
mov
fst
sub
mov
lahf
aad
add
out
lods
sbb
fstcw
loop
sub
imul
movs
(bad)
jns
push
pop
push
pop
je
pushf
shl
push
xor
jmp
retf
add
sub
out
repnz
or
sub
xor
pop
add
push
jge
push
aas
jl
into
popf
(bad)
in
jbe
scas
in
stc
aas
data16
jns
and
(bad)
fdiv
jp
inc
fwait
mov
lock
add
scas
in
lahf
mov
pop
js
mov
mov
pop
inc
ret
push
mov
popa
cs
or
cmp
sub
popa
sbb
ss
fdiv
stos
leave
xchg
pop
pop
lea
pop
mov
add
jmp
int
daa
aas
es
fistp
in
cli
mov
out
mul
adc
(bad)
movs
div
pop
aaa
inc
fiadd
pop
push
pop
je
cs
out
fbstp
out
add
movs
mov
lods
inc
pop
and
jge
inc
push
xchg
repnz
fwait
ret
hlt
lods
out
mov
jbe
cmc
xchg
add
jecxz
jns
mov
fs
xchg
mov
add
push
add
imul
leave
sahf
call
(bad)
aam
(bad)
aaa
inc
cmps
in
mov
jge
pop
dec
or
rcr
dec
mov
push
out
mov
fnstcw
mov
es
stc
js
push
inc
clc
call
dec
and
dec
mov
push
cmc
xchg
fs
sub
cmc
xor
jo
lods
mov
push
pop
inc
cmps
shr
cmp
jno
push
daa
jmp
mov
xchg
hlt
and
push
pop
push
push
test
js
adc
js
repz
and
rcl
in
sahf
fnstsw
ds
into
push
jb
sbb
gs
sti
mov
loope
shl
cld
mov
sbb
mov
ficomp
mov
enter
fisttp
push
dec
popf
(bad)
xchg
rol
aam
jecxz
leave
adc
sbb
jne
ficom
mov
cwde
sti
test
xchg
icebp
mov
sbb
xchg
mov
int
sbb
jmp
mov
jl
gs
push
popa
add
push
mov
das
ins
ds
mov
leave
mov
retf
cld
mov
inc
dec
out
xlat
test
sbb
jle
rol
sbb
mov
mov
outs
adc
je
push
addr16
outs
rcl
adc
jecxz
pop
inc
xor
xor
retf
xchg
test
(bad)
push
push
ret
pop
sub
ds
data16
mov
rol
sub
mov
test
xor
lods
(bad)
mov
cdq
int3
scas
std
cmp
xchg
sbb
mov
mov
iret
mov
ss
scas
(bad)
movs
stos
icebp
xchg
rol
call
dec
cmp
mov
outs
dec
adc
retf
popa
std
sahf
int3
pop
sbb
dec
xchg
movs
mov
cmps
inc
push
lods
iret
cwde
or
aad
jle
out
sub
rcl
into
div
(bad)
cmp
jo
out
imul
shufps
lahf
rcl
in
(bad)
sahf
scas
mov
cdq
fisubr
sbb
pop
icebp
stos
rcl
jb
push
outs
sub
(bad)
mov
pop
jmp
or
dec
fadd
ins
das
(bad)
movs
test
and
(bad)
pop
push
adc
jmp
ficomp
cmp
fcomp
and
hlt
or
gs
(bad)
mov
cmp
movs
xlat
cmps
mov
scas
loope
adc
push
sbb
repz
cs
add
xchg
cmps
in
pop
test
in
adc
sbb
(bad)
mov
fcomp
retf
xchg
jle
dec
adc
mov
fst
pusha
adc
lds
mov
outs
sub
jae
sbb
pop
sbb
mov
jnp
lea
push
fstp
pop
mov
fisttp
loop
jg
in
lds
loop
(bad)
mov
ja
push
sbb
mov
jbe
out
imul
out
clc
adc
movs
stc
popa
retf
aam
in
mov
lds
mov
aad
into
pushf
fiadd
push
pop
mov
into
mov
(bad)
aad
loope
sub
fwait
aam
int
inc
or
xor
(bad)
mov
push
adc
xchg
(bad)
dec
and
inc
adc
sbb
(bad)
in
pop
pop
lahf
enter
jmp
(bad)
dec
add
adc
jns
mov
in
xor
repnz
repz
push
and
push
dec
xchg
pop
add
mov
and
fstp
rcl
add
data16
xchg
arpl
mov
push
in
ins
and
pushf
xchg
ror
pop
xchg
sti
push
rcr
mov
ret
cdq
push
cmp
jge
int
rcl
jg
bound
ja
cmp
shl
or
lea
mov
mov
jmp
int3
(bad)
aad
popa
and
fldenv
push
ins
xlat
movs
out
int3
or
xchg
fnsave
inc
and
out
int3
xchg
out
test
and
outs
test
aas
pop
sbb
imul
cmc
xchg
xor
pop
cmp
xchg
cmps
les
sub
ja
fist
fs
test
jnp
fdiv
ds
clc
mov
push
inc
mov
(bad)
jmp
cmp
retf
adc
std
shl
dec
adc
mov
call
adc
dec
adc
and
test
outs
add
fisttp
cmp
push
psubw
jns
mov
arpl
daa
ret
test
sub
movs
out
mov
xchg
lahf
aam
jno
xor
shl
inc
mov
jmp
loopne
jle
test
fdiv
call
jno
cld
cmps
les
sbb
sbb
adc
lds
adc
jl
int
jl
in
pop
push
inc
xor
mov
movs
div
test
icebp
mov
mov
mov
cs
pop
ins
add
sbb
aam
mov
xchg
daa
push
mov
ins
and
mov
or
rol
ror
(bad)
jmp
push
push
adc
push
adc
ror
xor
mov
mov
sub
ficomp
mov
mov
and
add
cmps
les
adc
push
and
ss
pop
data16
and
sub
pop
sbb
jae
shl
call
dec
aam
les
shl
int3
xor
dec
or
leave
xchg
dec
mov
test
in
ror
and
dec
cmc
pop
pop
gs
cmc
sbb
ins
pop
sbb
dec
or
les
mov
xchg
jno
repnz
xchg
js
jne
imul
cmp
sbb
dec
sub
fistp
fst
popa
cmp
enter
or
mov
idiv
pop
sbb
adc
mov
mov
ss
adc
leave
pop
sbb
fstp
xchg
loope
rcl
xlat
dec
sub
xchg
scas
arpl
inc
and
clc
push
and
mov
fwait
jl
pop
adc
lock
jmp
push
scas
fistp
aam
sbb
and
pop
sbb
push
scas
in
outs
fistp
pop
rcr
xor
cmp
lahf
in
imul
call
sub
dec
adc
mov
scas
rol
jmp
das
ja
dec
sub
pop
adc
das
leave
mov
icebp
mov
nop
or
xor
popf
fsubp
movs
dec
mov
xchg
ror
cmp
stc
add
sub
mov
add
pop
aas
pop
sbb
xlat
push
or
scas
stos
dec
or
stos
in
ret
add
ss
ret
jl
push
adc
js
movs
fcom
pop
push
scas
jle
outs
or
and
iret
mov
xchg
shl
mov
mov
xchg
(bad)
pop
or
push
add
mov
add
jb
in
daa
ins
add
lods
push
es
pop
pop
dec
psadbw
subps
ret
cmp
out
mov
ret
mov
div
fs
jge
(bad)
ins
shr
xchg
adc
and
or
mov
fs
in
in
dec
add
push
sbb
jb
jle
int3
inc
sbb
sbb
cmc
and
loope
ficomp
ja
(bad)
repnz
sbb
pop
sbb
out
dec
icebp
mov
xor
xchg
int
test
mov
scas
popa
and
xor
add
and
sub
inc
xor
call
cmps
call
push
xor
sahf
cmp
imul
lods
sbb
mov
mov
xor
or
popf
pop
cmp
mov
fiadd
enter
jge
dec
mov
jae
mov
jbe
mov
mov
cdq
xor
xor
add
rcr
inc
add
ss
(bad)
fimul
sub
fcom
mov
sbb
sub
iret
popf
cmp
ficomp
sbb
aaa
push
ss
cli
xchg
int
shl
xlat
mov
xchg
fstp
inc
icebp
pusha
and
imul
sub
data16
xor
dec
imul
push
add
inc
mov
mov
fadd
mov
jno
popa
add
loope
daa
inc
push
inc
cmp
ret
or
sahf
out
test
adc
sbb
add
pop
add
xor
cwde
sar
fsub
jle
outs
sub
fiadd
ficom
sbb
int3
xchg
jl
mov
adc
or
pop
ds
and
test
lahf
pop
lock
out
gs
xchg
les
mov
inc
clc
stos
fstp
jp
sar
sub
push
aaa
push
mov
jp
dec
aad
stc
nop
test
xor
je
hlt
dec
mov
mov
jo
push
fs
not
inc
push
add
outs
sbb
mov
xor
add
jo
cld
mov
pop
push
mov
dec
or
mov
add
push
mov
daa
dec
cmp
scas
cwde
rol
and
pop
or
mov
outs
ins
xor
push
and
into
mov
sub
fmul
mov
imul
push
adc
(bad)
enter
add
push
mov
rol
fwait
jmp
movs
xlat
xchg
out
jnp
xor
xchg
jae
mov
(bad)
cmp
or
mov
arpl
mov
movs
out
rcl
fild
mov
sub
add
(bad)
test
movs
(bad)
or
inc
repnz
sub
sar
loop
ret
mov
cmp
(bad)
fistp
pop
inc
mov
mov
cmc
cmps
mov
and
andnps
fs
into
test
cmp
xor
cmps
mov
stos
imul
repz
(bad)
or
sbb
add
and
mov
xchg
cmc
and
pusha
es
addr16
xchg
inc
test
cwde
rol
fidiv
js
or
sub
dec
add
lahf
xchg
xchg
loope
out
pop
inc
pop
sub
dec
fwait
rol
add
jno
sub
inc
xor
add
aaa
jp
push
xlat
imul
es
popa
sub
(bad)
aam
cmp
push
sbb
add
mov
xlat
nop
xchg
jo
inc
push
ins
mov
popa
mov
mov
xchg
cmps
dec
loopne
fdiv
aas
adc
mov
cdq
cli
xor
pusha
cmp
and
mov
shr
jno
inc
jne
idiv
jns
inc
adc
nop
mov
mov
daa
lock
enter
mov
inc
and
rcr
xchg
aam
jns
mov
cmp
retf
pop
and
cmps
(bad)
aad
jge
dec
adc
repz
and
loope
and
outs
aaa
inc
cli
pusha
push
adc
adc
retf
xchg
hlt
push
loope
mov
push
push
out
mov
cmp
sub
mov
mov
xchg
xchg
mov
inc
pop
sub
(bad)
and
mov
inc
aaa
jo
movs
out
lahf
(bad)
int3
sahf
inc
ds
in
ja
dec
sbb
xchg
jl
dec
and
fwait
pop
ins
xor
fmul
movs
out
dec
sbb
inc
xchg
mov
xchg
pop
or
mov
fisttp
or
hlt
pop
les
(bad)
int3
(bad)
cld
movs
out
inc
inc
pusha
retf
push
pusha
es
sub
mov
xor
cdq
(bad)
xchg
jmp
es
js
mov
cwde
fld
xor
in
movs
sub
mov
hlt
inc
(bad)
mov
sbb
test
mov
mov
fwait
enter
jae
push
mov
or
xchg
mov
mov
xor
movs
pop
sbb
(bad)
stc
and
jb
fmul
sub
dec
sub
sti
int3
test
imul
mov
mov
or
xor
popf
(bad)
fld
push
jle
mov
mov
cwde
jnp
jp
pop
push
out
ficomp
add
ret
cmps
std
mov
out
je
xor
push
mov
xor
les
test
test
xor
stc
into
lea
pop
cdq
fstp
jbe
icebp
mov
pop
test
mov
pop
mov
add
inc
nop
fbstp
out
sahf
fldcw
ja
addr16
mov
sub
xor
push
fwait
test
sub
push
or
js
sbb
mov
cld
(bad)
cmp
xchg
(bad)
test
aas
js
cld
mov
push
imul
je
jmp
loopne
in
mov
adc
xchg
cmps
loope
dec
daa
pusha
cmp
jp
loope
sub
sar
cmp
jns
clc
mov
cmp
adc
mov
cwde
sti
mov
adc
in
stos
enter
scas
ret
mov
lods
ficomp
shl
jnp
dec
or
into
in
inc
rol
hlt
cmps
in
dec
and
sahf
or
ins
cs
aam
into
test
cwde
fild
jne
(bad)
mov
sub
dec
adc
jne
es
ret
movs
out
jbe
test
mov
ja
jp
out
push
add
inc
push
pop
cmp
dec
and
ret
jp
mov
mov
test
add
lods
cmp
scas
in
mov
hlt
mov
mov
mov
adc
xchg
cmps
bound
push
sbb
inc
add
sub
int
inc
repz
hlt
xchg
ror
cwde
leave
xchg
cwde
jmp
pop
add
ins
stc
sub
es
outs
cmp
inc
dec
scas
xchg
lods
ror
int3
and
add
and
push
cmc
mov
aam
mov
int
data16
jge
and
push
clc
mov
(bad)
ja
jb
ret
call
add
or
dec
dec
call
push
nop
mov
mov
call
bnd
mov
sub
cmp
xchg
rol
leave
jo
xchg
test
mov
mov
mov
fstp
call
js
(bad)
mov
out
rcl
repz
xor
and
xchg
aaa
outs
dec
dec
hlt
xchg
stc
shl
repnz
shr
out
ror
rol
retf
mov
mov
ret
adc
icebp
call
leave
lea
mov
mov
sti
call
cdq
mov
test
in
fwait
jmp
call
dec
add
cdq
and
push
(bad)
pop
mov
lods
hlt
xlat
repnz
jo
push
or
jnp
jp
jnp
pop
sub
jo
imul
sbb
jno
push
shl
xchg
push
and
movs
mov
add
jb
(bad)
loop
sub
test
shl
mov
cmps
add
test
outs
sub
aad
jmp
add
cdq
xchg
fcmovne
arpl
pushf
into
mov
mov
std
scas
in
mov
stos
in
cmps
retf
mov
out
std
scas
in
mov
test
movs
(bad)
pushf
iret
lods
cmp
mov
mov
pop
or
dec
sub
gs
pusha
xchg
test
mov
sub
addr16
inc
or
inc
inc
inc
idiv
mov
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
ror
mov
mov
adc
(bad)
iret
jb
inc
xchg
adc
dec
push
push
inc
repnz
icebp
pause
dec
cmp
mov
mov
pushf
call
retf
cmps
in
iret
mov
pushf
push
jecxz
jo
imul
jns
xor
nop
ror
test
mov
jmp
xchg
aad
(bad)
mov
call
(bad)
int3
scas
int
int3
xchg
call
fmul
dec
sub
mov
xchg
jmp
pop
and
mov
rcl
inc
sti
cdq
retf
enter
in
jl
bound
push
and
pop
sbb
enter
xor
jo
jno
push
daa
pusha
cmp
jp
popa
xor
pop
xor
cmp
push
adc
push
adc
inc
add
push
adc
push
sbb
mov
push
push
pop
xchg
push
cli
cmp
rcl
mov
stc
sub
pusha
pop
and
dec
ds
sub
nop
call
adc
add
jno
inc
add
inc
add
push
adc
jnp
push
adc
pusha
das
inc
or
jb
bound
arpl
jae
pop
sbb
jb
bound
dec
daa
push
add
inc
add
push
adc
jnp
push
adc
pusha
dec
xchg
sub
add
xchg
jmp
jo
jp
or
je
(bad)
in
out
cmp
jne
mov
mov
into
ja
jo
loopne
bsr
arpl
push
or
push
pop
inc
imul
addr16
and
jb
ins
pop
pop
das
ja
data16
or
ins
aaa
push
push
inc
es
add
arpl
push
or
fsub
ins
xchg
mov
push
xor
daa
push
xor
nop
rol
(bad)
jnp
mov
pop
sub
cmp
inc
je
mov
lea
inc
xor
push
stc
mov
scas
es
sbb
push
(bad)
(bad)
cli
jle
add
cli
mov
lods
into
popf
fidivr
clc
mov
xchg
in
aad
into
pushf
fidivr
int
cld
mov
cmc
cdq
jmp
sar
outs
sbb
imul
sbb
mov
iret
stc
xchg
in
in
and
ins
adc
mov
mov
sub
ror
cmps
or
inc
pop
jge
lds
lahf
and
inc
cmp
in
mov
adc
adc
pop
ss
add
push
adc
push
sbb
popa
xor
jo
jno
push
daa
pusha
cmp
mov
xchg
mov
dec
sub
or
(bad)
bound
push
ins
or
add
sub
cmp
mov
out
or
jl
call
xor
sbb
dec
jmp
jmp
mov
(bad)
sbb
jmp
xchg
repnz
loopne
lock
icebp
mov
mov
jmp
ret
ja
xchg
sub
mov
add
pusha
or
ja
dec
dec
jne
mov
loop
and
push
sbb
shl
fimul
jl
sbb
inc
jle
mov
stc
out
pushf
out
int
popf
shl
out
rcl
(bad)
arpl
xor
iret
(bad)
push
push
add
outs
push
dec
or
popa
and
and
je
xchg
push
int3
test
out
arpl
mov
fdivr
push
dec
or
imul
cwde
jmp
and
aad
sub
sbb
cwde
xchg
(bad)
mov
xchg
popa
cmp
and
or
movs
(bad)
fdivr
arpl
ins
jb
mov
cmps
xor
sbb
stos
fsub
aaa
xor
pop
cmp
push
or
gs
push
jns
mov
jl
inc
shl
xchg
sub
xchg
ficom
das
push
xor
or
jns
xchg
pop
addr16
iret
test
mov
xchg
lock
rol
adc
xor
push
mov
xchg
repnz
repz
jae
dec
ret
xchg
sti
cmps
and
dec
into
mov
mov
mov
cld
cdq
repz
jg
aaa
je
jne
je
push
and
dec
sub
adc
inc
jmp
sar
inc
jmp
out
push
push
ins
ins
adc
pop
popa
adc
sub
rcl
ret
shl
repnz
mov
mov
xchg
div
out
mov
out
into
mov
stos
ficomp
jno
push
adc
(bad)
xor
and
jle
arpl
push
adc
jg
(bad)
ffreep
push
rcr
retf
jne
inc
sbb
pop
add
adc
mov
fwait
mov
je
arpl
mov
test
movs
sbb
std
jp
xchg
cmp
pop
aas
(bad)
aad
cmc
in
jbe
imul
outs
aas
jae
jg
jl
addr16
pop
popf
(bad)
mov
mul
mov
test
fimul
jmp
out
scas
out
cmps
shl
stos
out
mov
(bad)
lock
xor
add
in
mov
test
(bad)
(bad)
rcr
inc
xchg
fcomp
gs
les
in
jmp
popa
xchg
mov
mov
aam
dec
aas
ja
xchg
sar
ficom
iret
mov
adc
addr16
daa
jle
pop
xor
adc
add
aaa
jbe
jo
call
ret
xchg
xlat
stos
sbb
xchg
repnz
addr16
or
aaa
cs
popa
loope
icebp
jecxz
pop
jno
adc
cmps
movs
leave
stos
push
xor
jb
mov
adc
jno
dec
inc
bound
push
inc
jb
scas
in
push
ins
pop
sub
rcr
cmovnp
sub
bound
jge
dec
add
inc
adc
inc
add
jg
inc
pop
mov
xchg
(bad)
test
cli
stos
loope
aad
adc
pop
dec
jg
jle
lahf
lods
loope
ret
mov
dec
dec
(bad)
pushf
push
mov
ficomp
sub
xor
loop
adc
movs
in
or
inc
xor
ja
inc
cmp
xor
jns
addr16
dec
push
ja
shl
add
jle
jns
in
or
mov
or
stc
mov
lods
sbb
outs
xor
fs
dec
add
and
xchg
retf
push
xor
sbb
mov
push
push
outs
dec
hlt
xchg
xlat
fs
int3
dec
das
arpl
jae
dec
xlat
je
pop
movs
scas
retf
mov
xchg
mov
xchg
cmps
sbb
pushf
hlt
mov
mov
jl
ins
dec
cli
mov
inc
cmp
pop
fwait
pop
or
inc
sub
sub
or
imul
(bad)
lods
div
push
(bad)
aas
jnp
outs
adc
dec
rol
clc
inc
pop
cmp
pop
das
mov
and
fld
rol
ret
sbb
in
cmp
xchg
aam
int
clc
sub
jg
xor
addr16
adc
sub
gs
in
rol
repnz
repz
xchg
or
or
pop
cmp
sbb
call
fnstenv
repz
lea
jmp
sub
stos
mov
mov
jae
pop
pop
sub
pop
jmp
ror
inc
sar
dec
loope
hlt
ja
mov
aad
xchg
and
int3
mov
stos
fstp
jmp
mov
mov
in
mov
sbb
inc
cmovne
xor
gs
pop
push
xor
cdq
in
fmul
rcl
and
inc
sbb
jns
movs
jmp
addr16
movs
push
test
gs
imul
cld
pop
loopne
mov
icebp
test
add
mov
sahf
mov
out
xchg
int3
mov
mov
sti
xchg
xlat
mov
lods
out
mov
(bad)
in
mov
mov
test
sub
pop
xor
(bad)
lahf
jmp
mov
cmp
xor
call
push
cmovno
xchg
bound
fistp
ins
scas
ficomp
dec
xlat
lods
out
and
inc
adc
cmp
loope
add
jl
test
mov
or
arpl
ja
dec
add
adc
push
xlat
pushf
idiv
out
call
mov
mov
xchg
mov
mov
icebp
test
retf
mov
pusha
mov
mov
xchg
cmps
loopne
cli
jl
push
sbb
arpl
sub
not
sbb
sbb
dec
cmp
xor
ss
adc
or
or
and
rdmsr
xor
xor
push
sbb
inc
ds
js
push
sbb
sub
push
jb
movs
mov
inc
aaa
sbb
push
sub
jbe
mov
or
dec
daa
mov
(bad)
mov
sbb
dec
cld
xchg
loop
and
fidivr
cdq
(bad)
dec
sub
fs
push
(bad)
xor
xchg
loop
jb
lock
jecxz
ret
dec
(bad)
adc
jge
xor
dec
or
sbb
dec
or
push
push
ins
std
jle
imul
maxps
mov
mov
fdiv
cmp
and
arpl
data16
mov
push
ins
dec
std
mov
mov
imul
sahf
and
push
stc
mov
jmp
gs
retf
jmp
push
cmp
mov
repnz
dec
hlt
mov
movs
mov
cli
imul
ret
imul
and
pop
push
inc
int
xor
push
sub
mov
scas
mov
mov
icebp
imul
lock
mov
jmp
mov
xor
push
or
or
pop
pop
dec
cmc
mov
rol
xor
sub
jnp
jmp
call
pop
adc
sub
dec
or
or
leave
sbb
jle
data16
lds
dec
out
test
push
xlat
xchg
imul
xchg
repz
mov
ror
jmp
pusha
cmp
lds
jns
push
outs
movs
cmps
fld
test
inc
sub
cmp
in
scas
push
out
mov
jmp
inc
push
popa
cwde
fisubr
push
xchg
push
push
iret
lods
into
test
cli
jmp
lea
pop
adc
or
inc
sbb
sbb
ss
push
xor
ins
ss
mov
mov
rol
stos
icebp
test
mov
add
adc
loope
push
push
jno
jmp
aaa
pop
or
sbb
dec
sti
cwde
jmp
and
aad
sub
sbb
push
int3
or
and
and
xchg
xor
xchg
sub
jno
inc
mov
push
inc
mov
xchg
xor
imul
jae
inc
mov
jbe
dec
or
inc
test
scas
sar
cs
jg
mov
popf
add
sub
shr
(bad)
push
adc
jno
mov
xchg
mov
(bad)
fs
pop
dec
add
xor
jg
fild
bound
aaa
popa
xor
shl
sub
dec
sub
dec
add
pop
add
inc
cmp
dec
add
push
lods
paddusw
test
imul
(bad)
scas
or
xor
(bad)
cmp
mov
mov
das
pop
cmp
retf
jmp
adc
dec
hlt
xchg
adc
stos
jecxz
or
imul
sbb
xchg
test
int
push
test
adc
(bad)
retf
mov
and
fnstenv
jno
in
mov
push
xor
push
sbb
inc
sbb
pop
add
js
sar
enter
shl
cmp
xchg
or
lods
aad
or
mov
retf
cli
arpl
fs
call
adc
xchg
enter
cmp
or
cmp
outs
sbb
xchg
lods
loope
pop
sbb
mov
jle
pushf
pop
push
and
fadd
jo
cmc
lahf
repz
push
and
(bad)
repnz
mov
enter
jecxz
pause
fbstp
es
or
sar
gs
cmps
add
stos
retf
movs
cmp
popa
jo
dec
dec
popf
cmp
jge
loop
call
mov
int
and
repnz
mov
mov
cmps
sub
push
fs
mov
adc
dec
cmp
and
inc
les
fwait
push
pop
pop
sahf
add
cwde
sbb
int
jmp
fadd
fisttp
mov
fcom
add
ins
in
fcmovb
xchg
shl
mov
mov
fcomip
push
jnp
mov
push
cmp
(bad)
in
retf
or
sub
dec
add
fimul
ins
cwde
test
ret
rol
repz
add
dec
and
nop
and
les
retf
mov
rol
nop
repnz
loop
les
test
inc
sub
imul
stc
out
mov
mov
pop
and
lahf
mov
xchg
adc
in
nop
fst
push
cmovns
or
sar
jne
call
in
xor
jbe
loope
mov
xlat
imul
xchg
mov
dec
or
dec
or
pop
sbb
jo
pop
sbb
imul
imul
dec
aas
js
push
adc
jns
imul
mov
mov
pop
dec
repnz
xlat
lds
test
mov
outs
jge
fnstenv
lahf
xor
clc
nop
aad
(bad)
gs
jb
adc
stos
lods
fdivr
nop
mov
icebp
fadd
jb
dec
or
dec
or
pop
sbb
jno
pop
sbb
push
dec
add
js
push
and
jns
push
adc
js
push
and
dec
or
dec
or
lock
out
ins
jle
je
jns
mov
inc
adc
xor
test
dec
pop
jo
dec
sub
mov
mov
sbb
ins
aas
test
cmp
mov
sub
and
dec
or
inc
sub
inc
ss
pop
sbb
dec
pop
inc
push
jl
ins
(bad)
sub
cmp
push
adc
aas
jl
ins
cmovo
and
dec
or
inc
sub
inc
ss
pop
sbb
mov
push
xor
(bad)
hlt
jge
push
inc
repz
fs
les
iret
icebp
cwde
div
adc
add
cmps
pop
or
popa
xor
pop
xor
cmp
push
adc
push
adc
inc
add
push
adc
push
sbb
popa
xor
jo
jo
adc
dec
cmp
push
inc
or
push
ins
cs
ss
mov
mov
fs
mov
cdq
lock
aam
aad
aam
repnz
out
lods
fild
clc
xchg
ficomp
(bad)
mov
mov
xchg
jecxz
std
mov
mov
push
sbb
jmp
pop
pop
pop
adc
outs
ss
add
jns
jo
pop
adc
sbb
out
hlt
xchg
hlt
mov
inc
sub
inc
sbb
sbb
aaa
je
test
test
and
movs
cmps
ficomp
(bad)
mov
jmp
mov
scas
int3
mov
xchg
fadd
fisttp
mov
mov
mov
(bad)
mov
jmp
mov
scas
int3
mov
xchg
fadd
frstor
mov
pop
push
jae
adc
rcl
cmp
in
sbb
xor
and
or
std
mov
push
ins
(bad)
cli
ret
jo
jnp
imul
sub
sbb
pop
adc
or
gs
or
jb
push
pop
dec
das
jl
pop
ds
jne
imul
ins
das
jge
pop
adc
jbe
dec
sbb
pop
adc
or
gs
or
jb
push
pop
dec
das
jl
pop
ds
jne
imul
ins
das
jge
pop
adc
jbe
dec
sbb
pop
adc
or
gs
or
jb
jno
in
loope
es
jge
sbb
imul
das
fisubr
push
xchg
fdivrp
outs
jge
sub
and
jge
mov
pop
sbb
dec
in
sbb
inc
xor
mov
mov
hlt
mov
iret
mov
cmps
in
hlt
xchg
fdiv
(bad)
xchg
not
test
scas
in
sahf
mov
lahf
fadd
cmc
mov
mov
iret
mov
cmps
in
hlt
xchg
fdiv
(bad)
xchg
not
test
scas
in
sahf
mov
lahf
fadd
cmc
mov
(bad)
pop
push
cwde
or
dec
neg
jg
hlt
mov
sbb
push
inc
jo
outs
dec
ins
sbb
fldenv
addr16
sbb
std
fs
test
pop
adc
mov
jp
ja
div
inc
call
(bad)
mov
int3
pop
je
fldenv
inc
and
push
jbe
push
xor
inc
or
sub
push
add
inc
push
inc
or
push
or
dec
adc
inc
and
dec
or
arpl
inc
and
push
jbe
push
xor
inc
or
sub
push
add
inc
push
inc
or
push
or
dec
shl
jl
(bad)
sub
inc
or
sub
arpl
jne
aam
add
sbb
push
cmp
mov
daa
ja
out
pushf
(bad)
std
mov
mov
movs
int
adc
fnsave
int3
in
nop
enter
cmp
xchg
popa
and
outs
sub
mov
mov
mov
lods
into
mov
test
cdq
fiadd
fisttp
lds
int
jmp
mov
std
mov
jmp
out
fisttp
test
cdq
fiadd
fisttp
lds
out
(bad)
pusha
add
out
clc
shl
in
int3
inc
cmp
icebp
mov
mov
push
adc
cwde
call
add
xchg
push
add
jbe
sbb
sbb
sbb
sbb
mov
sbb
test
or
out
adc
or
sbb
sbb
sbb
sbb
sbb
cmp
pop
sbb
cmp
pop
sbb
cmp
pop
sbb
sbb
sbb
cmp
pop
sbb
test
pop
sbb
sbb
sbb
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
add
sbb
sbb
sbb
sbb
sbb
pop
add
sbb
sbb
sbb
sbb
sbb
or
xor
push
sbb
sbb
sbb
adc
sbb
sbb
sbb
sbb
adc
sbb
sbb
sbb
adc
sub
sbb
int
sbb
sbb
or
test
pop
sbb
sbb
cmp
sbb
sbb
sti
sbb
sbb
adc
sbb
sbb
pop
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
adc
popa
sbb
sbb
sbb
sbb
sbb
xor
cdq
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
adc
sbb
cmp
sbb
sbb
add
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
jmp
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
xor
sbb
sbb
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
xor
nop
sbb
xor
nop
sbb
xor
nop
sbb
xor
or
xor
push
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cdq
sbb
jns
sbb
sbb
sbb
cdq
sbb
jns
sbb
sbb
sbb
cdq
sbb
jns
sbb
sbb
sbb
cdq
sbb
jns
sbb
sbb
sbb
cdq
sbb
jns
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
xor
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
push
sbb
sbb
adc
ins
sbb
sbb
sbb
mov
sbb
sbb
lods
sbb
sbb
sbb
sbb
movs
sbb
sbb
sbb
movs
sbb
sbb
sbb
movs
sbb
sbb
sbb
sbb
add
ds
aaa
sbb
and
or
add
ds
aaa
sbb
dec
sbb
or
add
nop
sbb
mov
test
mov
sbb
sbb
sbb
int3
sbb
les
std
sbb
lock
xlat
sbb
add
sbb
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
hlt
sbb
or
hlt
sbb
sbb
hlt
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
hlt
sbb
sbb
hlt
sbb
sbb
hlt
sbb
push
retf
sbb
sbb
add
repnz
xor
xor
stc
sbb
sbb
sbb
jmp
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
stos
sbb
sbb
adc
sbb
sbb
sbb
sbb
sbb
sbb
mov
adc
sbb
sbb
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
sbb
adc
lock
adc
adc
rcr
add
xchg
sbb
sbb
push
sbb
push
adc
sbb
jb
jmp
adc
sbb
adc
sbb
sbb
sbb
sbb
xchg
adc
sbb
sbb
sbb
adc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
mov
sbb
sbb
rcl
sbb
icebp
adc
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
adc
sbb
cmp
and
adc
and
adc
sbb
sbb
push
sbb
sbb
sbb
nop
adc
nop
sbb
sbb
sbb
sbb
clc
sbb
sbb
clc
sbb
adc
clc
sbb
or
rcr
adc
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
repnz
out
adc
pop
adc
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
add
cmp
xor
jmp
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
push
sbb
dec
sbb
or
sub
hlt
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
(bad)
sbb
dec
sbb
or
xor
sbb
sbb
sbb
call
sbb
sbb
sbb
call
sbb
call
sbb
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ficomp
retf
sbb
sbb
sbb
sbb
sbb
xor
dec
sbb
sbb
sbb
sbb
sbb
pop
sbb
sbb
pop
sbb
sbb
sbb
jns
or
xor
sbb
mov
sbb
sbb
sbb
sbb
stc
sbb
sbb
sbb
or
xor
sbb
jns
jmp
sbb
cmp
pop
sbb
jns
stos
sbb
cdq
sbb
mov
sbb
sbb
stc
sbb
sbb
sbb
cmp
sbb
pop
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pusha
sbb
call
sbb
sbb
sbb
sbb
cmc
sbb
rcr
rcr
sbb
sbb
rcr
sbb
sbb
pop
sbb
sbb
or
push
sbb
sbb
sbb
sbb
pusha
sbb
sbb
iret
sbb
sbb
jp
lea
sbb
sbb
sbb
sbb
sbb
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sub
ins
sbb
sbb
inc
sbb
je
jae
push
sbb
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
ret
sbb
sbb
sbb
repnz
sbb
sbb
sbb
push
sbb
sbb
sbb
push
sbb
sbb
sbb
dec
sbb
sbb
sbb
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sti
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
sbb
sbb
sbb
adc
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
out
sbb
push
sbb
sbb
sbb
and
jne
daa
sbb
jbe
jne
jnp
push
jo
imul
jg
aaa
dec
jo
ins
js
pop
js
jo
sbb
imul
jo
ja
push
pusha
sbb
jbe
imul
dec
imul
jp
sbb
jl
dec
jl
outs
jo
jl
sbb
imul
js
jl
jnp
jl
ins
dec
imul
jge
imul
push
imul
jl
pop
ja
jo
dec
ins
ja
pop
sbb
push
pop
pop
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
sbb
pop
dec
dec
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
sbb
imul
jg
aaa
dec
jo
ins
js
pop
js
jo
aaa
pop
imul
jo
ja
jl
outs
jo
jl
sbb
imul
jbe
pop
js
jl
aaa
jp
jbe
sbb
imul
jg
aaa
dec
jo
ins
js
pop
js
jo
aaa
pop
jl
jo
jl
sbb
je
ins
ins
jl
sbb
push
jl
sbb
jae
jp
sbb
jp
ins
jbe
sbb
ins
inc
pop
jbe
imul
pop
jbe
imul
jl
ins
dec
imul
jge
imul
jl
inc
pop
imul
jo
ja
je
pop
imul
ins
dec
imul
jge
imul
push
imul
jl
inc
dec
push
imul
inc
dec
push
imul
jl
ins
dec
imul
jge
imul
jl
inc
dec
jl
dec
jl
outs
jo
jl
sbb
pusha
dec
jl
dec
jl
outs
jo
jl
push
jnp
jl
ins
dec
imul
jge
imul
imul
jo
ja
dec
jl
dec
jl
outs
jo
jl
sbb
js
push
jbe
pop
jl
push
js
jno
jbe
jl
dec
pusha
imul
imul
jo
jle
pop
imul
inc
inc
push
ja
ins
js
jp
inc
inc
sbb
jo
push
js
jp
sbb
push
jbe
jl
inc
push
ja
ins
js
jp
inc
inc
sbb
ins
inc
pop
jl
push
ja
ins
js
jp
sbb
jno
jl
jge
ins
js
jo
dec
js
ins
jl
pop
jl
push
ja
ins
js
jp
sbb
imul
push
ja
js
jno
je
jo
pop
jo
jl
imul
push
push
pop
sbb
jbe
dec
jl
push
push
pop
sbb
ja
jp
ja
jg
pop
jl
imul
sbb
ins
js
push
jl
push
pop
popa
ins
imul
ins
ja
push
push
ins
ins
popa
sbb
pusha
sbb
js
jl
sbb
dec
js
jge
jbe
jo
sbb
dec
jo
jl
jno
imul
push
jo
jge
jl
sbb
dec
dec
pop
sbb
jl
ins
jl
imul
push
sbb
imul
jbe
push
js
jl
jp
je
js
jge
jo
jl
imul
pop
ins
ins
imul
ins
jl
sbb
imul
ins
ins
imul
ins
jl
sbb
jno
imul
js
jge
jl
sbb
jl
ins
jo
ja
jne
jle
sbb
jo
jbe
je
ja
sbb
imul
ins
pop
jo
jl
ins
jbe
pusha
sbb
js
ins
ins
imul
imul
push
push
ja
jbe
je
ins
jo
ja
pop
jl
dec
jno
jl
jge
jbe
ins
jl
ins
sbb
imul
jp
ja
jl
ins
sbb
outs
das
sub
jno
jl
jge
jbe
ins
jl
ins
sbb
ins
dec
jno
jl
jge
jbe
ins
jl
ins
sbb
outs
das
sub
jno
jl
jge
jbe
ins
jl
ins
sbb
js
dec
imul
push
push
jl
jbe
pusha
sbb
jbe
jl
push
jnp
push
pop
jge
imul
jnp
jg
jl
sbb
jg
jl
dec
jo
jl
jnp
ins
jl
dec
jl
jge
dec
imul
dec
imul
push
push
jl
jbe
pusha
sbb
ins
jl
dec
imul
jl
sbb
dec
ja
js
dec
jo
outs
push
jg
jl
ins
jo
ja
dec
jo
ins
ins
js
dec
imul
jp
pop
popa
sbb
imul
push
sbb
pop
jge
imul
jge
dec
jo
jl
jg
push
jl
dec
imul
jp
sbb
jg
push
jne
dec
imul
jp
sbb
imul
jne
jne
jbe
pop
popa
sbb
ja
jne
sbb
jge
jl
push
jne
ja
ins
jno
ins
pusha
imul
jp
sbb
push
je
dec
jno
jl
jge
imul
sbb
jge
push
jbe
push
push
sbb
push
pop
sbb
imul
imul
jge
jge
ins
js
jp
je
js
jo
jne
sbb
jne
jl
pusha
imul
push
push
js
jge
jl
dec
jno
jl
jge
js
jge
jl
dec
imul
push
push
jge
dec
jno
jl
jge
jge
dec
jo
jl
dec
jl
jl
outs
jl
sub
pop
jl
jb
jbe
sbb
ins
jne
sbb
jp
dec
jl
jl
outs
jl
sub
dec
ins
jge
ja
ins
ins
sbb
jge
ins
ins
imul
imul
sbb
push
jl
aaa
pop
jbe
imul
jbe
jl
sbb
ins
jbe
pop
imul
js
jne
pop
ins
ins
imul
ins
jl
pop
jge
ins
jbe
pop
imul
js
jne
dec
ins
js
jl
dec
pusha
push
jl
aaa
pop
jbe
jl
jbe
aaa
pop
jbe
imul
jl
jl
js
jl
pop
jbe
jl
ins
ins
imul
ins
jl
dec
pusha
push
jl
aaa
pop
jo
jle
jbe
ins
jo
push
pop
jl
ins
jle
jl
push
jo
jge
ja
ins
ins
imul
ins
jl
push
jo
imul
jg
aaa
dec
jo
ins
js
pop
js
jo
aaa
pop
jbe
imul
imul
jl
sbb
js
jge
imul
jge
jne
pop
ins
ins
imul
ins
jl
push
jo
jl
jbe
ins
jne
push
js
jl
ins
ins
imul
ins
jl
dec
pusha
push
jl
aaa
pop
jbe
imul
jbe
jl
aaa
pop
jl
jo
ja
push
jl
imul
jge
ins
ins
imul
ins
jl
dec
pusha
push
jl
aaa
dec
ins
ja
jo
jl
pop
jbe
imul
imul
jl
sbb
ja
jo
jl
jl
imul
push
jnp
jl
ins
dec
js
ins
jl
dec
ins
ja
jo
jl
pusha
imul
sbb
ins
dec
pusha
imul
ja
jne
sbb
ins
jo
js
jbe
sbb
jl
ins
jl
ja
ins
js
jp
sbb
imul
pop
jbe
jne
jp
jo
ja
ins
ins
imul
ins
jl
dec
pusha
push
jl
aaa
dec
ins
ja
jo
jl
push
ja
jl
jbe
dec
jl
outs
jo
jl
sbb
je
jo
jo
jne
pop
ins
ins
imul
ins
jl
dec
jno
jl
jge
ins
js
jo
pop
ins
ins
imul
ins
jl
pop
jbe
imul
ja
imul
jge
ins
ins
imul
ins
jl
pop
jbe
outs
jl
push
jbe
push
dec
pusha
push
jl
aaa
dec
jl
jbe
imul
sbb
push
ins
imul
js
js
jl
sbb
jbe
jl
push
dec
js
jge
je
dec
imul
push
dec
ins
js
ins
push
ja
jbe
push
jo
imul
jg
aaa
dec
jo
sub
sbb
jle
push
imul
pusha
sbb
jl
ins
jo
ja
dec
pusha
push
jl
aaa
dec
jno
jl
jge
ja
sbb
imul
dec
pusha
push
jl
aaa
dec
jl
jne
jp
jo
ja
pop
push
jl
jnp
pusha
sbb
ins
pop
popa
jl
ins
ins
jo
jle
push
jl
jnp
pusha
sbb
ins
push
js
jo
jl
ins
dec
jl
jbe
imul
js
jl
sbb
imul
sbb
imul
ins
imul
push
pop
jbe
imul
jno
jge
dec
imul
push
ja
jl
jl
sbb
jl
imul
js
jbe
push
pop
jbe
imul
jo
jle
jle
ins
inc
dec
ins
js
ins
push
ja
jbe
push
ins
inc
pop
jo
jl
js
jl
dec
imul
push
dec
jo
jge
outs
dec
ins
pusha
jne
sbb
ins
inc
dec
jo
jge
outs
dec
ins
pusha
jne
sbb
push
jl
aaa
dec
jo
jge
outs
push
pop
jbe
je
sbb
ins
inc
pop
popa
jl
ins
ins
js
jne
dec
js
jno
pop
jbe
jp
ins
sbb
ins
inc
pop
imul
jl
ins
push
dec
ins
js
ins
sbb
jne
sbb
push
jl
aaa
dec
jl
ins
imul
aaa
dec
imul
jo
js
sbb
ja
jbe
push
jge
ja
jo
pusha
sbb
ins
pop
ins
imul
ins
sbb
ja
jbe
push
imul
jo
js
sbb
ja
jbe
push
ins
jo
ins
push
ja
jbe
jl
push
push
ja
jbe
jl
push
ins
inc
dec
push
dec
jno
jne
pop
popa
jl
ins
ins
jl
pop
jl
pop
ja
imul
push
je
jne
sbb
ins
inc
push
jbe
js
jo
ja
push
ins
inc
dec
jl
jnp
dec
imul
jp
pop
js
js
pop
ja
pop
imul
imul
jl
ins
sbb
jl
jo
jne
jbe
jge
imul
jl
pop
jbe
jge
imul
jno
dec
pusha
push
jl
aaa
push
push
sbb
jne
sbb
push
push
dec
jl
jge
jne
pop
pusha
ins
jl
sbb
jo
jl
jne
pop
pusha
ins
jl
sbb
ins
pop
ja
jo
jbe
je
ja
dec
js
jo
jnp
jl
push
jl
ins
sbb
ins
jno
pop
jbe
jnp
ja
sbb
ins
inc
push
js
jl
dec
imul
pop
jne
dec
jl
ins
sbb
jo
pop
jbe
pop
popa
jo
sbb
jne
ins
jl
dec
jl
jo
ins
imul
jbe
js
push
js
jno
ja
sbb
jl
dec
ins
jnp
jl
sbb
ins
dec
js
ins
jl
dec
jl
dec
js
ins
jl
pop
jo
jl
ins
ins
imul
ins
jl
sbb
ins
pop
ins
ins
imul
ins
jl
sbb
ins
dec
imul
jp
pop
imul
sbb
jl
imul
jae
jp
pop
imul
sbb
ja
js
ja
sbb
ins
push
jnp
jl
ins
sbb
ins
jl
js
ins
jo
ja
push
push
pop
jbe
dec
jl
ins
jne
sbb
pop
jbe
dec
ins
pusha
jne
sbb
pop
jbe
sbb
ja
jo
jl
ja
jo
jbe
je
ja
sbb
ins
dec
ins
ja
jo
jl
jo
jl
ins
jbe
pusha
sbb
ins
inc
dec
pusha
push
jl
pop
jo
jl
ins
jbe
pusha
sbb
imul
ins
js
ins
sbb
js
ins
je
ja
dec
ins
js
jl
dec
jl
pop
imul
ins
dec
ins
js
jl
jle
ins
inc
push
jl
push
jle
sbb
push
jl
aaa
dec
jl
ins
sbb
jbe
jo
jle
jle
ins
inc
pop
jl
js
jne
sbb
ins
pop
pusha
ins
jl
sbb
imul
dec
jl
jo
jl
push
ins
ins
jl
sbb
ins
dec
imul
push
pop
pusha
push
jge
dec
dec
pop
dec
jno
jl
jge
ins
ins
imul
ins
jl
dec
imul
push
push
jbe
ins
jne
sbb
push
jl
aaa
pop
jbe
jne
jp
jo
ja
sbb
ja
je
imul
imul
jl
pop
ins
imul
ins
dec
imul
push
sbb
jbe
jl
push
jbe
add
xchg
push
add
mov
retf
mov
mov
dec
(bad)
jns
es
in
mov
cmp
adc
inc
mul
mov
cmps
ficom
test
and
fwait
into
das
call
push
pop
jmp
ins
adc
pop
xchg
int
ss
enter
sti
or
ja
pusha
mov
or
xor
mov
shl
outs
xchg
jo
dec
gs
pop
mov
dec
cmps
shl
scas
jae
movs
mov
jmp
or
lahf
mov
push
mov
cmp
sbb
jo
or
outs
push
sub
scas
sub
jbe
cmp
xchg
sbb
mov
sbb
cmps
add
ss
mov
jg
scas
(bad)
push
loop
jp
sub
idiv
jnp
in
(bad)
aam
icebp
pop
mov
push
rol
mov
imul
sbb
mov
stc
mov
sahf
fisttp
fst
repz
push
call
loop
cvtdq2ps
dec
adc
xlat
test
(bad)
ror
dec
ins
inc
mov
ins
push
xor
(bad)
dec
fnstenv
(bad)
fldcw
aad
inc
arpl
stos
push
pop
dec
retf
into
movs
idiv
cmc
outs
call
leave
cmp
jno
add
loope
mov
mov
loope
loopne
fisttp
scas
ror
js
shl
jns
(bad)
dec
arpl
lods
xor
xchg
stc
repnz
movs
and
nop
mov
mov
add
mov
sbb
in
mov
clc
inc
ja
add
in
add
pop
pop
addr16
(bad)
sar
imul
cmp
sub
imul
aad
movs
sub
sbb
inc
mov
mov
aad
popa
xchg
push
aam
std
sahf
or
cs
inc
inc
sbb
mov
xchg
movs
pop
sbb
stos
and
into
pop
xchg
xchg
push
add
mov
mov
retf
pop
popf
popf
ins
xor
sub
not
fstp
inc
js
mov
outs
(bad)
jle
aaa
fnstenv
aaa
sar
jmp
sub
adc
jnp
gs
add
sbb
add
mov
push
sub
jmp
fdiv
(bad)
mov
rcr
(bad)
(bad)
xor
mov
and
add
jo
dec
retf
xchg
fadd
loopne
mov
shl
cmc
xchg
daa
or
mov
movs
pop
cmp
repz
add
fst
mov
or
mov
xor
pusha
mov
add
cmp
push
adc
and
and
cld
mov
imul
ret
inc
sub
into
jmp
imul
in
leave
and
cli
outs
cmc
add
cdq
stc
push
nop
xchg
jns
out
cs
movs
inc
and
in
add
in
xlat
das
ins
mov
push
dec
push
push
enter
cmp
shl
sbb
adc
cwde
sbb
movs
jne
mov
xchg
mov
jae
mov
jg
stc
fdivrp
pop
pop
cmp
scas
jnp
popf
ret
cmp
xchg
(bad)
inc
fisub
sub
loope
pop
dec
fidiv
inc
dec
bound
mov
test
mov
xor
xchg
repnz
loope
jmp
lahf
cwde
and
mov
jnp
push
xchg
into
push
lock
movs
rsqrtps
xchg
fidivr
or
sbb
xor
out
(bad)
lahf
popa
cld
sar
aad
retf
xchg
mov
repz
ins
mov
sti
(bad)
int3
sub
sub
push
dec
jg
cmp
icebp
dec
fistp
mov
adc
xor
cmp
in
stos
inc
cld
fcmovne
es
outs
mov
mov
cpuid
jb
jecxz
xchg
or
cmp
cwde
cmps
cmp
sar
pop
ins
push
push
test
jge
mov
cld
xor
mov
call
stos
(bad)
sbb
inc
pop
loope
inc
sub
push
cmps
idiv
retf
push
adc
div
test
adc
sub
adc
xchg
sub
mov
mov
arpl
sub
push
push
dec
arpl
mov
jb
cmp
push
mov
pop
mov
xchg
mov
push
fs
fs
jecxz
fnstsw
push
sbb
lods
jne
icebp
icebp
fwait
cmp
movs
(bad)
xchg
push
or
sbb
lea
mov
dec
add
mov
jmp
aaa
jnp
retf
mov
int3
std
mov
mov
push
ret
xor
test
sub
sbb
dec
add
dec
sbb
sbb
xchg
scas
sub
mov
pop
ja
int
clc
ss
add
lods
inc
cld
fsub
es
dec
pushf
xchg
lds
jmp
leave
xchg
sbb
test
je
push
jg
fld
mov
arpl
in
xor
ja
fimul
(bad)
push
mov
aam
test
repz
jns
xlat
in
imul
in
ins
push
movs
fwait
fwait
pop
mov
aas
pop
mov
aad
mov
cli
xor
cmp
cmps
sti
mov
pop
lahf
sub
sbb
ror
or
fstp
mov
cmp
xor
retf
icebp
cld
call
popf
imul
inc
sbb
mov
clc
cld
out
test
test
sbb
js
icebp
(bad)
(bad)
stc
frstor
mov
pop
fidiv
cmp
jbe
push
and
cdq
popa
cmp
mov
sti
push
mov
adc
icebp
aad
jae
pop
stc
dec
icebp
xor
jecxz
xchg
inc
add
movs
push
xchg
das
(bad)
scas
xchg
add
pop
jmp
mov
sbb
adc
push
dec
outs
inc
pop
mov
sbb
fnop
leave
inc
adc
xchg
lgs
cmp
jne
stos
and
shl
xchg
push
fcomip
cmps
mov
xor
inc
adc
iret
mov
adc
cmc
dec
push
out
repnz
aad
adc
jne
push
jns
push
push
add
call
scas
xor
fmul
inc
mov
outs
sbb
(bad)
xchg
(bad)
sub
sub
sbb
sub
push
sbb
cmps
add
out
dec
and
int3
out
fbstp
cmp
lods
mov
movs
out
mov
xor
mov
test
add
cmp
ret
je
add
pushf
xchg
xchg
call
jne
xor
into
test
or
mov
das
inc
sbb
clc
scas
sbb
inc
pop
add
xor
or
dec
mov
mov
mov
xor
ins
inc
inc
sub
mov
xchg
lods
outs
shl
mov
jecxz
(bad)
rcl
mov
sbb
mov
cmp
cmps
add
imul
dec
rol
push
push
icebp
popa
xor
in
push
fisttp
call
xchg
in
mov
divps
(bad)
rcl
adc
fidiv
cmp
mov
adc
mov
xchg
jecxz
jo
dec
mov
inc
shr
icebp
idiv
sahf
dec
add
fwait
or
xor
sub
push
pop
xchg
inc
ret
adc
in
(bad)
mov
iret
xchg
or
pop
lock
xchg
enter
mov
cmp
push
push
scas
cli
scas
clc
dec
loopne
mov
mov
aam
sahf
sbb
iret
ret
mov
fsub
clc
retf
push
bound
enter
or
dec
imul
mov
lea
sti
fld
ror
inc
sub
in
sub
movs
lods
mov
outs
xchg
test
sbb
call
xchg
adc
mov
lods
aaa
fstp
xchg
daa
lods
or
js
test
bound
call
les
cmp
add
sub
outs
fs
aaa
mov
push
lods
inc
dec
sbb
mov
add
jne
pop
mov
daa
dec
ss
leave
pop
cmp
add
xchg
bound
adc
xchg
mov
jecxz
not
adc
(bad)
sar
loopne
mov
dec
xor
les
mov
movs
je
pop
sahf
ja
mov
test
lods
call
mov
and
popa
xor
push
test
mov
or
stos
mov
out
mov
pop
and
loopne
cmp
mov
adc
bound
popf
lds
mov
push
movs
sub
pushf
nop
mov
ds
sbb
jne
sub
dec
in
sbb
jne
jne
stos
sbb
in
in
xor
inc
sti
mov
sbb
mov
mov
test
cmp
rcr
mov
jle
repnz
or
and
pop
js
pop
repz
mov
in
cmp
out
mov
xchg
xor
fs
mov
adc
ds
and
loope
(bad)
sahf
ja
ja
mov
and
inc
cli
xchg
add
mov
mov
jmp
lods
dec
repz
push
jbe
test
pop
jmp
ficomp
sbb
cmp
cmp
pop
push
fisttp
outs
shl
pop
(bad)
fimul
pop
(bad)
and
out
mov
cwde
test
(bad)
loope
fadd
jecxz
ss
cmp
popf
aad
mov
push
inc
mov
enter
jns
pcmpgtd
mov
xchg
rcl
push
int
sbb
inc
pop
loopne
movs
xor
outs
lods
rcl
cmc
enter
xchg
jns
cmp
jae
xchg
xchg
and
pop
jno
rcl
jb
idiv
rol
imul
mov
ins
not
and
pop
xor
add
cli
mov
cmp
in
scas
mov
outs
lea
in
in
ja
dec
aaa
adc
xchg
test
ret
jbe
mov
cmp
adc
retf
pop
int3
aas
push
jmp
dec
and
jge
xchg
xchg
or
dec
rol
das
adc
out
add
shr
jo
dec
jecxz
and
outs
jmp
jp
cmp
frstor
and
cmp
sar
cmp
(bad)
cdq
mov
bound
pushf
and
and
cmp
es
jp
les
fldcw
mov
stos
outs
or
adc
lods
mov
dec
test
les
out
clc
hlt
cdq
test
push
and
sbb
adc
xlat
int
xchg
jmp
bound
mov
pop
or
jbe
movs
sbb
das
loop
into
jecxz
shl
add
xor
push
jle
jp
test
test
xchg
test
inc
outs
inc
mov
inc
push
cmps
pop
popa
pop
test
jne
movnti
add
sub
call
adc
xor
mov
dec
xor
enter
xchg
shr
in
add
jno
dec
mov
jnp
mov
mov
mov
push
loope
inc
push
inc
cli
imul
call
fld
gs
cmc
cmp
jp
mov
or
imul
mov
bound
sub
mov
sahf
sbb
lea
cdq
repz
cmp
mov
xchg
shr
xor
es
icebp
or
jp
add
pop
rcr
into
test
pop
mov
outs
cmp
in
ins
mov
mov
popf
repz
push
movs
(bad)
cmp
ficom
out
and
jmp
push
inc
jae
and
call
rcr
pop
adc
pop
imul
mov
sub
aad
mov
popa
adc
sub
hlt
inc
mov
xchg
xor
add
and
pop
inc
cmp
adc
and
xchg
add
rcr
xchg
mov
sbb
xor
iret
sbb
mov
mov
shr
push
out
mov
xchg
push
xor
push
test
mov
sub
and
out
sub
lds
push
dec
pop
arpl
retf
repz
loopne
das
inc
jle
enter
mov
fucomp
sub
jp
push
icebp
pop
fucomp
fnsave
adc
xchg
mov
cmp
iret
cmp
in
mov
rol
and
push
inc
cmp
mov
pushf
xchg
pusha
jne
in
cmp
fxch
inc
jmp
cs
loopne
pop
push
xor
mov
mov
mov
in
cmp
xor
xor
movs
and
pop
cmp
dec
fwait
sub
cmp
cs
push
ins
adc
out
(bad)
adc
inc
fldcw
xchg
movs
sbb
adc
add
sbb
in
mov
push
(bad)
in
or
sub
push
pushf
ins
enter
shl
ficomp
das
shr
in
jne
in
jbe
add
out
pop
ret
pusha
xchg
jg
shl
(bad)
xor
in
jmp
sbb
wbinvd
sahf
shl
fldcw
jp
sbb
in
push
and
jns
sar
popf
and
int3
(bad)
xchg
retf
cdq
clc
out
pop
addr16
mov
cmp
arpl
aad
fwait
pusha
test
adc
std
pop
dec
or
fcomp
jnp
iret
adc
xchg
daa
movs
std
loope
fsubr
jle
add
stc
inc
cmc
cld
add
test
pop
retf
cmc
xchg
popa
dec
iret
adc
jp
call
call
push
adc
cmp
push
call
mov
jns
jge
mov
xchg
and
push
xchg
cwde
cmp
rcl
or
xchg
push
repz
leave
xchg
cmps
mov
sbb
cmp
cmovo
mov
mov
cdq
push
mul
cdq
adc
ret
cmc
mov
jne
mov
sbb
sbb
outs
mov
pushf
push
cmp
jnp
push
mov
push
pmulhuw
adc
pushf
mov
mov
jl
cmp
dec
inc
jns
loopne
add
add
(bad)
sub
push
mov
jmp
or
dec
mov
xor
or
les
inc
cmp
add
lea
rol
imul
push
int3
mov
not
xchg
sahf
mov
fwait
push
sub
pop
imul
sbb
retf
cld
push
cs
lahf
sbb
stc
xchg
pop
mov
fild
cld
jb
int
lods
std
out
dec
aaa
(bad)
mov
mov
(bad)
les
jne
fadd
stos
xor
pop
mov
mov
xor
sbb
jmp
or
sahf
rcl
fldcw
xor
xor
cld
and
adc
iret
cli
push
sub
push
xchg
aaa
add
fnstcw
push
sub
fstp
rol
fsub
cmc
mov
sbb
and
adc
pop
or
and
push
add
rcr
cdq
in
(bad)
outs
mov
std
and
stos
fwait
loop
and
mov
add
sti
dec
mov
cmp
jae
das
(bad)
push
(bad)
xor
jmp
stos
fwait
push
scas
jmp
add
pop
pop
(bad)
enter
das
pop
cmp
int
push
pop
movs
add
lahf
inc
pop
push
or
in
sbb
in
push
mov
pop
xchg
ret
push
stos
repz
ror
mov
push
jo
iret
mov
scas
sub
repnz
(bad)
cmp
ja
xchg
ins
fwait
mov
xchg
mov
out
mov
push
and
xchg
sbb
test
xor
bound
cdq
(bad)
out
mov
hlt
mov
xchg
lahf
clc
or
add
sub
test
fdivr
stos
jo
mov
push
(bad)
sbb
lea
inc
pop
mov
mov
inc
ret
pushf
das
movs
(bad)
xchg
pop
sbb
adc
sub
aad
cmp
add
(bad)
sbb
mov
push
rcr
dec
pop
ja
push
cmps
test
ds
movs
nop
popa
hlt
scas
cwde
inc
push
aas
stos
in
or
mov
jle
mov
loop
test
dec
mov
out
xchg
stos
xchg
pop
or
xor
add
xor
xchg
and
or
adc
shr
inc
cs
push
(bad)
fimul
popf
ja
call
mov
enter
adc
scas
arpl
jno
not
mov
push
mov
and
stc
(bad)
push
jp
jge
pop
mov
cmc
cwde
xchg
fcmovnu
push
(bad)
div
cmp
jmp
sbb
or
mov
mov
icebp
inc
xchg
fsub
and
icebp
jne
cmp
mov
xor
ds
fs
mov
mov
(bad)
enter
ret
add
outs
outs
fidivr
and
and
mov
or
outs
adc
jmp
add
push
gs
retf
cmp
jno
jp
lea
add
mov
fld1
mov
jecxz
xor
in
ret
pop
ja
sahf
jge
sbb
xor
lahf
lahf
add
jg
sbb
add
retf
and
clc
add
aas
aas
or
jl
inc
sub
jmp
stc
mov
gs
das
fsub
test
fst
jg
sbb
(bad)
(bad)
test
outs
retf
pop
stos
sub
mov
mov
dec
or
jge
push
out
cmps
fdivr
sbb
mov
movs
inc
sub
xor
mov
outs
mov
sub
xor
cmc
fstp
or
push
into
cld
retf
or
rol
add
sbb
xchg
fwait
inc
nop
cwde
jns
pusha
ret
xor
int3
jecxz
xlat
sahf
imul
stos
sbb
jge
adc
loopne
loopne
sbb
iret
and
rcr
sbb
jg
(bad)
dec
adc
jnp
add
pusha
dec
adc
fs
in
hlt
jp
dec
mov
mov
rcr
shl
int3
ret
push
popf
jmp
mov
cli
jne
pop
pop
add
jno
inc
ror
popf
push
pop
psraw
xchg
dec
add
jo
leave
loopne
jns
sub
cwde
out
cmp
ds
shl
js
es
jb
in
sti
adc
xor
mov
xor
inc
shl
popf
inc
jp
sub
dec
cmp
push
outs
jle
shl
cmps
mov
call
and
push
out
cmps
cli
(bad)
out
sub
jbe
dec
pop
test
in
jae
das
inc
push
push
xor
mov
in
sbb
pop
std
push
fwait
mov
shr
dec
repz
xlat
mov
or
daa
jg
and
stc
mov
sub
cld
add
imul
ins
mov
add
inc
pop
mov
add
and
push
push
call
and
(bad)
mov
and
ins
dec
lock
and
xor
sbb
pop
fdivr
and
imul
ja
in
mov
enter
mov
popa
es
aad
cmps
call
pop
test
ins
push
inc
mov
mov
xchg
out
xchg
movs
mov
pop
outs
mov
or
jl
cwd
movs
jb
cmp
xor
sbb
jmp
and
ja
(bad)
cmp
aas
or
xchg
(bad)
and
bound
cmp
pop
(bad)
aas
setl
push
cmp
mov
shl
cmc
stos
mov
and
mov
push
mov
call
xchg
js
movs
jecxz
xchg
fild
xchg
mov
adc
lahf
clc
stc
jb
scas
mov
mov
popa
or
or
ja
push
jmp
push
xor
sbb
mov
push
test
cmc
mov
in
push
shl
mov
sar
scas
xchg
adc
fisub
jb
(bad)
mul
inc
lock
push
adc
add
xchg
push
add
xchg
push
xor
cmp
push
loopne
pop
je
cmc
push
es
adc
jne
push
int
sub
imul
mov
mov
xor
out
nop
jmp
arpl
xchg
lods
jg
mov
test
sbb
sahf
or
out
scas
mov
nop
add
scas
in
(bad)
adc
call
std
add
xchg
jmp
out
stos
xchg
shl
popa
es
add
outs
daa
popa
push
repnz
sub
sbb
jp
add
ja
adc
js
imul
and
sub
call
jns
push
xor
sub
pushf
(bad)
div
stc
inc
jne
gs
push
es
test
punpcklwd
and
mov
xor
popa
and
or
popa
add
imul
mov
in
mov
jae
inc
sbb
or
push
xor
or
fistp
jae
ins
loopne
xor
daa
inc
or
xor
int3
frstor
xor
pop
es
stos
lahf
retf
ret
clc
mov
test
cdq
fidivr
shl
jmp
or
inc
mov
xchg
rcl
sbb
test
mov
sub
add
jo
dec
sbb
inc
mov
mov
es
dec
(bad)
fucomip
imul
aaa
jg
jb
clc
mov
mov
pop
in
xchg
sti
mov
lods
dec
bnd
jg
clc
mov
mov
xchg
aad
inc
pop
xor
push
sub
sbb
adc
scas
fstp
push
sbb
mov
and
loop
mov
mov
aam
ins
(bad)
test
mov
xchg
lds
pop
cmps
xlat
nop
pop
xor
dec
or
xlat
pusha
xor
and
fild
pop
sbb
cmp
dec
or
stc
(bad)
mov
(bad)
int
pop
pop
xor
mov
add
call
fnstsw
in
xadd
inc
sub
cs
fwait
jmp
sbb
cmp
in
mov
dec
mov
mov
scas
div
(bad)
fbstp
jl
push
imul
fild
push
sub
inc
push
mov
pop
mov
xchg
rol
jo
xchg
ror
push
add
xchg
fisttp
sbb
jl
pop
mov
call
sbb
inc
and
jmp
add
xchg
test
mov
mov
mov
ret
xchg
in
or
jns
cmp
jno
ins
mov
(bad)
enter
push
pop
je
stc
loopne
cmc
xchg
jle
dec
sub
test
loopne
adc
movs
out
stc
test
push
in
adc
sub
popf
fimul
ins
jle
jnp
dec
sbb
push
cmp
iret
mov
jno
cli
or
pop
pop
or
mov
mov
test
scas
ins
aas
mov
bound
or
popa
adc
inc
out
adc
jnp
xor
inc
or
(bad)
rol
inc
es
mov
mov
rcl
fwait
clc
add
push
sbb
jne
jle
imul
push
push
jne
jo
inc
(bad)
ds
inc
pop
out
(bad)
mov
(bad)
in
dec
or
enter
push
inc
and
mov
test
cdq
hlt
daa
add
gs
jne
mov
fcomp
pop
mov
idiv
and
adc
add
add
adc
or
fcomp
jns
mov
cmc
mov
mov
scas
jl
jg
mov
in
stos
in
cmps
call
mov
ret
mov
mov
mov
fidivr
(bad)
aam
in
in
mov
(bad)
movs
jmp
sahf
std
lahf
fnstcw
addr16
jbe
inc
enter
int
loope
adc
add
and
inc
xor
push
xchg
jnp
dec
mov
les
cld
dec
and
shr
pop
fs
mov
pop
xor
sti
mov
pop
inc
stc
xchg
iret
mov
jo
nop
xchg
ror
push
and
sub
loopne
icebp
cmp
test
idiv
ja
stc
mov
loop
fnsave
push
(bad)
mov
xchg
mov
xchg
in
aam
dec
sbb
scas
xlat
pusha
out
loope
loopne
pop
stc
sub
add
inc
pop
es
inc
and
add
mov
xor
out
mov
popf
fidivr
jp
sub
fcomp
adc
mov
xor
add
jae
pop
mov
lods
fs
push
xchg
cmp
sbb
push
dec
adc
lods
rol
inc
adc
jle
inc
adc
fsubr
sahf
repnz
mov
stc
stos
jmp
mov
sbb
clc
mov
jb
ss
sbb
ficom
inc
in
cmp
jb
icebp
inc
add
imul
push
mov
push
jle
jae
push
or
cdq
ficomp
mov
pop
pop
sbb
adc
mov
xor
dec
fcomp
push
adc
mov
or
pop
sbb
dec
pusha
das
inc
xchg
test
rol
xchg
dec
out
popf
fiadd
mov
jb
repz
inc
add
(bad)
shl
loop
(bad)
cli
mov
leave
fstcw
addr16
cld
inc
or
push
mov
cmp
pushf
fist
scas
call
cmp
ds
mov
lods
jmp
ins
sbb
pop
push
xchg
retf
fs
(bad)
movs
inc
movs
leave
add
repnz
bound
inc
add
add
jbe
(bad)
mov
je
jmp
fistp
pop
or
mov
xchg
aad
iret
push
xor
xor
sub
ret
sub
retf
xor
dec
(bad)
in
(bad)
loope
sbb
pop
cmp
and
jmp
jno
pop
mov
pop
(bad)
push
push
adc
int
cwde
push
data16
adc
fwait
xlat
or
fbstp
xchg
aad
inc
das
sbb
jl
jne
and
xchg
jl
fild
mov
scas
inc
or
fbld
add
jnp
jb
xchg
loopne
sti
xor
call
test
or
pushf
enter
stos
loop
les
dec
sub
test
cdq
inc
leave
sahf
in
scas
fisttp
and
ja
pop
mov
and
jl
jo
cli
mov
xchg
sub
mov
cmps
cwde
(bad)
pushf
mov
xor
dec
pop
xlat
add
adc
icebp
mov
cld
ins
add
pushf
cli
or
daa
jne
push
cwde
stc
daa
outs
xor
nop
into
mov
sbb
shr
dec
or
repz
jl
mov
xchg
aam
daa
push
or
mov
xchg
inc
jecxz
xchg
mov
inc
add
mov
xchg
imul
(bad)
jmp
push
pop
leave
mov
daa
daa
inc
push
addr16
mov
call
test
push
push
or
cvtpi2ps
call
sub
in
inc
sbb
push
push
inc
xor
test
xchg
clc
mov
pop
iret
call
movs
aad
dec
cmp
cmp
pop
sbb
fcomp
cdq
cli
jge
in
adc
jg
fst
cmc
pushf
cld
pop
test
xchg
rol
out
rcl
ins
das
jge
cmps
shr
aaa
es
jmp
jae
js
lods
cld
and
xchg
retf
clc
bound
mov
ins
mov
or
jle
test
inc
or
pop
ds
cld
jl
(bad)
jo
jge
push
data16
xchg
nop
fnsave
ret
mov
cmp
pop
inc
aaa
je
test
gs
inc
jmp
stos
aam
pop
in
inc
cmp
and
inc
in
(bad)
xchg
xlat
mov
scas
sub
mov
fwait
daa
lock
fst
out
test
mov
int
aam
in
(bad)
out
test
push
sbb
xchg
into
(bad)
fistp
push
push
icebp
mov
jmp
mov
call
dec
push
sub
pop
or
jmp
ds
push
jge
gs
mov
repnz
fbld
push
jmp
add
repnz
out
mov
lods
dec
sbb
xor
fwait
dec
out
in
sub
inc
(bad)
(bad)
adc
cmp
in
not
push
push
push
data16
mov
repz
push
pop
jbe
les
mov
scas
push
adc
and
fisub
dec
push
(bad)
ja
mov
das
ja
jmp
dec
mov
inc
xor
icebp
mov
lahf
jne
pushf
js
dec
retf
mov
fst
shl
imul
sub
pop
dec
sub
movs
ficomp
lods
sar
jecxz
je
cld
mov
push
fcomp
js
jmp
loopne
cld
add
ins
test
popf
rcl
movs
inc
add
loope
in
fisub
dec
psubusb
jnp
adc
dec
or
fld
lea
mov
pop
cwde
clc
call
mov
xor
jne
not
and
pushf
es
jmp
xchg
or
mov
jl
jmp
xchg
mov
pop
das
pop
les
jnp
inc
das
jl
pop
mov
mov
jecxz
cld
mov
outs
xor
fiadd
in
shl
adc
iret
jg
ret
sub
in
sub
pop
imul
or
cmps
lds
movs
xchg
arpl
pusha
aas
pop
xor
add
in
push
sub
and
cmp
out
test
les
push
adc
xchg
jle
push
add
je
cmp
test
mov
dec
adc
sbb
jmp
xor
retf
add
test
push
loop
cmp
fidiv
add
ret
jbe
call
mov
push
inc
daa
push
js
and
sub
xor
xchg
xlat
lods
jae
arpl
jge
dec
paddw
push
(bad)
movs
out
mul
stos
cdq
push
adc
jbe
sub
mov
mov
mov
out
in
aam
fiadd
nop
(bad)
xchg
and
iret
mov
mov
jmp
int3
pop
(bad)
push
add
dec
mov
mov
pop
mov
inc
cmovl
lock
pop
aas
cmp
pop
cmp
stc
mov
mov
push
push
add
and
int3
(bad)
out
mov
out
dec
test
call
jecxz
iret
cmps
inc
add
fistp
xchg
push
pop
push
jne
repz
adc
movs
bound
sbb
test
push
mov
mov
add
cld
xchg
push
pushf
(bad)
movs
jo
jle
sub
push
movs
xlat
hlt
add
mov
dec
push
dec
cs
mov
ficomp
repnz
mov
jge
add
shl
(bad)
(bad)
loope
xor
pop
sbb
clc
pop
out
test
add
inc
adc
sbb
push
and
rol
jl
pop
in
daa
out
xchg
mov
cmp
fbld
adc
xchg
(bad)
in
ja
and
mov
fbld
les
mov
cli
or
mov
ret
and
lds
adc
stos
inc
push
aam
imul
aad
push
adc
fsubr
jge
not
xor
into
lods
push
nop
(bad)
cmp
scas
in
mov
mov
retf
and
sti
mov
pop
push
test
leave
push
sbb
add
pop
sbb
sub
mov
push
adc
js
shr
inc
or
pushf
cld
mov
and
test
repz
cmp
bound
(bad)
mov
test
aam
jp
pop
mov
cmp
mov
mov
les
xor
je
retf
lds
jge
aaa
retf
cmp
mov
lods
sar
retf
(bad)
push
sub
call
js
loope
push
mov
and
push
push
mov
xchg
icebp
pop
pop
hlt
xchg
pop
stc
mov
lods
jmp
mov
cmp
inc
adc
mov
sbb
adc
sub
add
fidivr
xor
xor
jg
loopne
cdq
jae
inc
mov
mov
mov
stos
dec
sbb
cmp
icebp
xor
stos
inc
pushf
in
scas
fld
dec
and
lock
push
iret
add
inc
add
movs
add
nop
jecxz
lods
ja
mov
adc
out
icebp
mov
dec
test
ret
xor
pop
sbb
scas
jno
call
out
fdivr
mov
sub
aam
and
not
pop
lahf
push
pop
ja
imul
fcomip
aaa
imul
sbb
mov
sbb
sti
in
dec
push
pop
push
clc
mov
in
(bad)
sahf
inc
mov
aam
push
sbb
int3
ins
rcr
nop
out
dec
or
xor
mov
fild
cmps
jmp
sub
inc
add
jbe
gs
mov
aas
ja
(bad)
mov
jae
out
(bad)
stos
imul
pop
int
call
shl
stos
call
call
call
cmps
loopne
push
pop
out
mov
sbb
(bad)
sbb
pushf
fild
lods
cmc
or
xchg
aam
inc
dec
(bad)
sahf
int3
mov
fcomp
cdq
cli
out
or
mov
repnz
pop
or
sub
mov
add
popa
sub
jb
lds
std
out
mov
inc
mov
cdq
fcomp
in
outs
stos
cmps
(bad)
mov
add
shl
jae
jle
in
sbb
sub
sbb
jl
ret
nop
or
lahf
fstp
push
xchg
mov
bound
dec
mov
mov
push
xchg
icebp
outs
mov
mov
mov
add
jle
push
xchg
loop
dec
lods
push
scas
hlt
lahf
push
adc
(bad)
mov
mov
nop
jecxz
pop
push
cli
cmp
fldenv
sbb
call
jmp
popa
mov
mov
and
dec
mov
sub
xchg
jns
xchg
and
leave
mov
cmp
push
push
movs
popa
cmp
dec
mov
lahf
sub
fmul
movs
ficom
pusha
mov
mov
stos
jp
inc
inc
packsswb
movs
aam
pop
sub
imul
shl
push
bound
rol
dec
(bad)
push
cmp
adc
cwde
inc
test
ins
sbb
pop
mov
iret
cmps
jmp
stc
fwait
stc
dec
test
xchg
scas
in
sahf
inc
push
or
mov
icebp
mov
imul
sub
mov
mov
popa
and
fs
inc
mov
cmps
nop
imul
stos
fstp
push
loope
repnz
repnz
in
(bad)
ficomp
and
adc
pop
pop
cmp
mov
movs
(bad)
adc
push
fld
or
repnz
or
ins
xor
and
jmp
or
pop
in
add
pop
shl
dec
add
mov
sub
jmp
cmp
mov
and
cmp
mov
inc
mov
xchg
outs
fst
imul
xchg
mov
inc
fwait
(bad)
movs
loop
push
xor
adc
sub
sar
dec
(bad)
les
mov
xchg
loope
pop
add
or
sub
xchg
cmp
ror
hlt
mov
push
jl
inc
adc
and
jmp
jmp
xor
lahf
inc
je
pop
mov
aas
push
scas
push
or
push
push
jb
(bad)
std
mov
pop
mov
dec
test
in
shr
test
and
into
mov
cmps
mov
adc
xchg
sti
iret
mov
movs
mov
lods
fild
popa
or
hlt
lock
mov
arpl
mov
push
std
mov
test
or
xor
fsincos
sahf
shr
mov
xor
xchg
jno
pop
adc
mov
je
in
(bad)
movs
jecxz
jl
scas
call
adc
adc
jae
fbld
ss
adc
out
mov
add
nop
ret
and
add
dec
or
xorps
xchg
aad
inc
sub
xchg
pop
add
into
sub
(bad)
jns
mov
lods
pushf
push
gs
gs
jle
cmp
or
lods
loop
inc
daa
movs
loope
sahf
cmps
loope
(bad)
icebp
mov
jmp
fisttp
add
and
cmp
push
push
sahf
mov
mov
xchg
lods
outs
cmp
adc
or
dec
or
lods
lods
inc
sbb
add
adc
js
loop
cld
mov
test
push
pop
inc
xor
fstcw
push
pop
inc
daa
inc
lea
aaa
inc
jge
leave
in
mov
and
inc
and
fyl2x
mov
lock
jae
in
mov
imul
xor
cs
push
scas
jmp
cwde
fisttp
jmp
repnz
sub
jbe
scas
jmp
popa
or
jb
int
(bad)
scas
call
jmp
xchg
xlat
add
cs
or
and
sbb
fldcw
(bad)
add
jge
jno
aam
inc
cs
and
xchg
lds
mov
sar
ins
bound
xchg
daa
bound
arpl
dec
adc
push
bound
dec
add
lds
outs
sub
stos
das
jae
mov
pusha
jmp
xor
retf
push
stos
enter
inc
sub
les
fmul
push
pop
add
mov
pop
adc
or
sti
jp
dec
or
xor
dec
or
xor
dec
sub
movs
and
test
xlat
pop
jne
das
hlt
hlt
mov
mov
std
mov
inc
fdivrp
xchg
fistp
not
mov
mov
push
idiv
nop
sbb
dec
daa
daa
xchg
retf
mov
js
clc
mov
xchg
cld
cmps
pop
sbb
cmp
repnz
mov
inc
add
push
lahf
cld
pushf
je
or
cmc
movs
out
out
inc
shl
xor
mov
mov
pop
es
pop
fidivr
aas
dec
or
or
mov
popa
adc
stc
mov
and
loopne
(bad)
fst
sahf
hlt
aas
mov
scas
std
mov
sub
or
nop
aad
repz
push
and
shl
cmc
scas
int
pop
pop
stc
mov
adc
sbb
push
or
dec
cs
sbb
lock
adc
icebp
jmp
mov
pop
paddq
pop
retf
xchg
not
add
push
xor
and
les
inc
std
loop
sti
adc
(bad)
mov
mov
sub
or
xchg
jne
cmp
and
loop
sti
mov
mov
xchg
rol
sbb
out
test
push
adc
aam
mov
mov
push
cmp
loop
inc
or
mov
rcl
js
and
lock
gs
pop
shl
inc
and
dec
add
cmp
pop
push
ins
mov
sbb
jge
iret
fs
sti
data16
mov
lock
cwde
and
leave
adc
dec
ret
not
inc
repz
fwait
and
push
pusha
das
test
fcom
pop
push
mov
sbb
imul
es
mov
push
or
adc
fstp
adc
inc
adc
mov
call
mov
cmp
nop
ret
or
ss
xor
and
add
xchg
push
add
dec
or
js
ja
dec
clc
popf
out
sbb
dec
sub
inc
sub
dec
imul
das
fisubr
push
xchg
fdivrp
outs
jge
sub
and
jge
mov
pop
sbb
dec
in
sbb
inc
xor
mov
inc
push
pop
ds
cs
das
imul
adc
jge
ins
cs
add
addr16
dec
or
imul
inc
sbb
or
inc
push
pop
ds
cs
das
imul
adc
jge
jae
or
sbb
mov
ficomp
pushf
pop
lds
(bad)
stc
inc
or
repnz
mov
test
(bad)
bound
xchg
and
xchg
pop
add
inc
or
jge
jo
aam
add
into
mov
in
je
jae
adc
inc
inc
call
out
or
fdivr
fstp
adc
jmp
push
or
mov
ret
daa
xor
sbb
jge
inc
push
push
ss
adc
jae
inc
sbb
inc
pop
push
ss
pop
sbb
and
xor
xor
bound
addr16
xor
sbb
jge
inc
push
push
ss
paddsw
aad
xlat
mov
sti
fwait
hlt
retf
xchg
and
sahf
sub
repnz
scas
shl
mov
fnstsw
mov
sbb
movs
neg
(bad)
or
inc
repnz
add
movs
sbb
jmp
out
push
add
inc
jmp
or
outs
cmp
pop
(bad)
or
ins
push
(bad)
out
in
and
dec
aaa
mov
dec
adc
inc
and
or
bound
inc
and
imul
xor
pop
sub
arpl
inc
or
push
add
inc
pop
inc
or
push
or
dec
adc
xlat
popf
jp
lods
aam
add
outs
daa
imul
cld
in
inc
sbb
call
inc
xchg
test
test
xchg
retf
(bad)
div
addr16
outs
popf
mov
mov
sub
dec
adc
and
into
mov
fdiv
ja
fs
adc
pop
imul
pop
dec
push
jg
dec
jmp
push
mov
jle
jg
mov
push
cli
cwde
sbb
das
imul
lock
cli
aad
mov
mov
push
inc
inc
xchg
mov
mov
loop
repz
popf
hlt
mov
shl
test
add
shl
ret
mov
or
shl
cmp
fadd
pushf
cmp
jns
stos
rcr
jae
clc
mov
mov
pushf
mov
stos
cmp
nop
jmp
fs
push
dec
or
jno
lods
push
fisubr
mov
add
inc
rcl
(bad)
adc
adc
fwait
std
jmp
cli
stos
pop
jmp
retf
ds
cmps
retf
mov
(bad)
(bad)
icebp
pushf
leave
(bad)
aad
bnd
lea
push
cmp
xor
sub
xchg
loope
dec
mov
fwait
repnz
(bad)
mov
xchg
(bad)
pushf
lock
in
scas
fld
lahf
shl
jg
mov
rol
inc
xor
add
bound
jns
mov
scas
pop
les
push
mov
(bad)
shr
mov
mov
cmp
xchg
xchg
stos
aaa
sub
sar
sub
mov
int3
mov
mov
jne
mov
adc
call
cmp
sahf
pop
call
nop
sbb
(bad)
movs
out
cmp
and
push
pop
dec
sub
mov
inc
loop
jecxz
loop
les
mov
mov
call
and
(bad)
(bad)
jge
jo
shl
xor
and
mov
pop
xor
mov
mov
pop
add
add
push
push
inc
in
cmps
jmp
mov
jmp
xchg
leave
mov
add
xchg
mov
adc
inc
adc
pop
push
and
stc
lods
push
fisubr
mov
add
jg
mov
call
and
adc
mov
jecxz
adc
adc
shl
bound
addr16
test
pop
push
call
sbb
xor
xchg
ret
add
retf
cmps
xlat
nop
leave
mov
ret
and
loope
mov
mov
mov
fdivr
jae
pusha
imul
enter
xchg
in
pop
cmp
jp
jge
call
fld
push
jno
xchg
cmps
push
cld
test
gs
mov
retf
lods
cwde
cli
fxch
push
push
pop
sahf
cld
mov
loope
jmp
loope
out
pushf
jmp
sbb
mov
leave
(bad)
adc
cmp
mov
mov
and
imul
mov
lds
xor
call
outs
or
cmp
sub
sub
aad
les
iret
xchg
mul
lods
shl
fxch
inc
ds
lock
int
and
adc
dec
out
scas
cld
adc
test
ret
icebp
xchg
repnz
daa
xor
cmc
mov
aam
mov
int
data16
inc
pop
and
xor
mov
scas
repnz
fdivr
ficomp
std
mov
xchg
iret
xchg
shl
shr
loopne
mov
push
add
pop
push
jb
pop
or
jne
adc
add
jle
fwait
aad
jmp
iret
ret
push
and
and
mov
dec
cmp
or
pop
inc
pop
sub
dec
adc
and
jno
fs
mov
add
mov
or
or
shl
jae
ficomp
in
mov
int3
cld
mov
ror
xchg
lock
into
push
imul
data16
jnp
js
cwde
cli
sahf
ror
shl
sub
jns
jg
fwait
(bad)
mov
retf
xchg
mov
sahf
loop
aam
(bad)
(bad)
into
mov
xlat
stos
clc
mov
scas
jmp
loope
cmc
test
mov
ret
xchg
cmp
jnp
jb
bound
dec
and
clc
mov
leave
neg
lahf
std
mov
in
mov
test
scas
or
dec
pop
jge
lds
lahf
and
inc
cmp
in
mov
push
jmp
sti
fadd
xchg
loopne
iret
bound
jae
adc
xor
aaa
push
xor
adc
pop
and
fs
xor
cmp
cmp
pop
pop
jno
inc
push
arpl
jp
bound
push
daa
ins
and
dec
or
or
addr16
add
outs
cmp
aaa
bound
ins
and
pop
push
or
cmovg
arpl
dec
and
jnp
pusha
add
aam
jo
(bad)
cmp
xchg
or
mov
mov
repz
sub
dec
sub
aad
repz
inc
add
mov
jmp
mov
push
xor
arpl
nop
and
popa
inc
jge
mov
mov
pop
or
dec
pop
ja
dec
add
inc
sub
inc
pop
ins
sub
imul
cs
add
addr16
fwait
ror
fisubr
ficom
pop
cmp
jge
outs
cs
inc
sub
inc
cmp
inc
add
arpl
push
cmp
arpl
enter
mov
mov
(bad)
sti
adc
dec
cli
fwait
call
rol
jg
out
div
xchg
inc
push
push
aaa
js
pop
sbb
rcl
les
outs
dec
(bad)
cmps
cmc
out
and
cs
in
jmp
add
nop
(bad)
test
push
pop
inc
clc
mov
xchg
cmp
inc
adc
lods
call
aaa
jle
popa
add
addr16
xor
sbb
cmp
imul
ds
inc
and
push
cmp
ins
and
sub
push
movq
inc
add
jne
pop
jb
inc
add
and
jg
jns
popf
les
cmc
movs
jmp
adc
pop
or
inc
add
cmp
jbe
adc
inc
(bad)
fldcw
cmps
aam
mov
scas
fdivr
enter
les
je
mov
and
test
jmp
(bad)
out
shl
fbld
aaa
dec
or
push
jge
fadd
jle
jl
push
mov
imul
mov
sbb
pop
push
dec
or
jne
ins
pop
cmp
pop
adc
push
sub
inc
cmp
cdq
retf
stos
stc
sar
mov
fmul
mov
stos
ror
in
ret
adc
add
push
dec
outs
sub
retf
xor
pushf
enter
lock
mov
enter
daa
push
xor
nop
rol
(bad)
jnp
mov
pop
sub
xor
xor
scas
es
test
jp
jge
push
dec
dec
dec
repnz
adc
pop
push
inc
jle
stos
or
and
ins
pop
inc
jmp
sbb
test
(bad)
emms
gs
pop
cmp
push
mov
(bad)
cli
(bad)
(bad)
mov
jno
js
push
jp
push
pop
fnsave
enter
pop
gs
in
push
(bad)
lahf
sbb
scas
jg
pop
daa
cdq
ret
lods
adc
loope
into
jno
jp
cmc
test
mov
inc
jae
jo
jns
or
daa
sub
push
(bad)
(bad)
fyl2x
push
shl
cmc
xchg
inc
xor
clc
xchg
pop
mov
lods
shrd
fwait
jmp
aam
test
sub
push
sub
xchg
lods
mul
xor
adc
or
add
ins
and
and
rol
mov
push
shr
int
jnp
inc
sub
outs
sub
js
ins
pop
sub
ins
pushf
fmulp
ret
xchg
lods
add
in
mov
adc
jne
push
and
cdq
leave
retf
add
add
ds
(bad)
(bad)
mov
cld
sahf
int3
iret
rol
scas
loope
mov
arpl
popa
sub
mov
or
ss
xchg
fstp
cdq
xor
sti
test
dec
push
xor
and
mov
std
nop
add
lahf
xchg
xchg
sti
mov
call
mov
pop
fsub
or
inc
push
xor
dec
adc
add
outs
das
cmp
push
adc
sbb
jbe
pop
xor
mov
cmc
movs
jmp
jbe
idiv
mov
fwait
int3
movs
loope
xchg
fsubr
xor
dec
jge
js
jl
ror
pop
add
fild
sub
jae
ja
outs
and
inc
add
and
dec
adc
pop
inc
add
call
push
jbe
out
in
daa
imul
inc
and
mov
pop
cmp
xchg
aam
int3
jne
test
add
aam
sbb
sar
test
retf
mov
xchg
fstp
mov
pop
sub
cmp
ins
out
mov
int3
mov
es
pop
call
fdivr
ret
xchg
xlat
stos
sbb
pushf
div
jns
je
addr16
jle
push
or
outs
pop
xor
pop
xor
into
movs
retf
test
fst
push
pop
pop
ins
dec
dec
push
ins
sub
xlat
mov
xchg
mov
and
dec
xor
xor
pushf
rcl
push
aad
pop
mov
pop
jl
adc
xor
or
pop
jb
mov
mov
int
add
retf
or
and
sbb
inc
push
sub
push
ss
bound
pop
movs
mov
sahf
push
les
pop
sub
inc
sub
push
inc
cmp
and
sub
push
inc
adc
inc
add
dec
or
ss
adc
push
adc
outs
sub
inc
cmp
xor
cwde
(bad)
mov
xchg
les
xor
sub
push
or
pcmpeqb
jo
xchg
inc
sbb
jbe
jmp
out
aaa
daa
arpl
enter
jle
mov
push
or
test
arpl
mov
out
cmp
cmp
or
push
sub
push
xor
cmp
jge
or
push
es
and
mov
sahf
test
cmc
scas
cli
fld
popf
aam
repnz
aad
repz
adc
in
test
mov
shl
xor
push
xor
imul
adc
inc
cs
or
ds
push
push
inc
cmp
jno
ins
das
dec
adc
inc
add
dec
add
je
pop
ins
and
jae
adc
popf
cmp
mov
or
aad
adc
icebp
mov
fidivr
jl
icebp
scas
add
loop
out
int
push
test
cmp
jl
xchg
cmc
(bad)
mov
adc
mov
(bad)
push
retf
dec
jmp
outs
in
xchg
hlt
jnp
mov
into
push
loope
lds
int
loop
repnz
retf
mov
ins
pop
sub
push
pop
pop
popf
les
xchg
rcl
ret
rcr
out
movs
leave
xchg
int
leave
mov
aam
push
out
mov
popf
in
out
mov
aad
retf
mov
mov
test
and
call
adc
(bad)
mov
pop
xchg
add
jmp
shl
jmp
adc
jl
imul
add
retf
mov
mov
int3
pop
cld
imul
adc
inc
add
push
and
jae
inc
in
mov
fstp
xchg
xchg
shl
adc
jns
xchg
loopne
mov
loope
nop
fnsave
retf
mov
mov
loopne
out
leave
xchg
shl
out
retf
test
popf
hlt
mov
nop
leave
mov
mov
mov
cmps
out
(bad)
mov
cmps
int
call
add
sbb
outs
xor
imul
int3
mov
or
or
jno
inc
inc
inc
in
mov
mov
jae
ficom
pop
mov
daa
fs
mov
mov
pop
cs
sub
or
xor
outs
repnz
adc
lods
enter
div
xchg
mov
scas
mov
not
xchg
mov
adc
and
inc
add
dec
pop
cmovne
jb
call
movs
sbb
fs
or
push
sub
add
jne
jne
and
jo
push
or
imul
pop
adc
jns
ja
arpl
inc
add
pushf
sar
test
nop
hlt
jmp
in
int3
jp
mov
add
jns
mov
sar
inc
popw
test
test
xchg
out
jmp
sbb
jnp
nop
test
cdq
pop
cmps
mov
xor
adc
jle
cmp
dec
sbb
dec
aaa
jo
jbe
xchg
fwait
cmp
xchg
(bad)
aam
and
stos
mov
mov
jnp
jo
std
xor
je
add
outs
mov
out
mov
mov
sub
xor
push
inc
xchg
ds
xor
mov
lods
sub
leave
mov
dec
ins
mov
(bad)
test
loopne
sti
loopne
sub
or
pop
fisubr
push
xchg
mov
sub
outs
call
xchg
xor
mov
outs
cmp
pop
(bad)
or
ins
mov
mov
ror
(bad)
mov
add
adc
ds
jb
or
imul
call
pop
push
div
outs
cmps
mov
fcomp
pusha
out
mov
dec
(bad)
sub
jo
out
sbb
jp
dec
lods
mov
mov
mov
inc
add
mov
jmp
mov
push
xor
arpl
nop
and
popa
inc
jge
mov
mov
pop
or
dec
sub
gs
pusha
xchg
test
mov
ss
addr16
inc
or
xchg
rdmsr
imul
fidivr
sbb
pop
dec
jp
cmps
ins
scas
(bad)
cmps
mov
fistp
test
enter
pop
pop
cs
cmp
aaa
sbb
pcmpeqw
sub
mov
fild
mov
icebp
mov
mov
lock
(bad)
mov
xchg
fwait
pushf
fidiv
mov
mov
sub
cmp
jno
cmp
inc
push
add
push
setl
mov
sti
call
pop
les
xchg
push
(bad)
mov
mov
enter
je
test
pop
cmp
pop
push
inc
dec
hlt
fnstcw
fldcw
jns
(bad)
lahf
sti
out
mov
popf
pop
in
mov
push
xchg
mov
xor
or
imul
push
retf
jbe
push
or
repnz
push
pop
(bad)
dec
fld
inc
mov
loope
fisub
cmp
jo
pop
add
pop
cmp
dec
pop
inc
std
gs
popa
ss
cmps
movs
(bad)
movs
mov
ret
xchg
cld
push
rcl
enter
add
cmp
and
jle
movs
call
ins
les
dec
xchg
add
or
inc
inc
xchg
mov
cmp
daa
dec
cmp
ds
mov
(bad)
mov
test
in
repz
pop
arpl
sbb
inc
and
inc
jo
aam
add
into
mov
in
je
jae
adc
stos
imul
(bad)
push
pop
push
shl
ficomp
ins
mul
dec
leave
pusha
aaa
ja
push
or
push
sbb
dec
fsubr
inc
cmps
movs
(bad)
mov
dec
xlat
mov
idiv
addr16
out
adc
jmp
(bad)
mov
add
stos
cdq
leave
lea
mov
mov
pop
pop
test
sub
jge
lods
loope
jg
dec
inc
sbb
mov
js
adc
test
adc
mov
lods
adc
and
(bad)
xchg
test
out
xchg
jmp
push
jnp
pop
adc
pop
sub
gs
pusha
xchg
test
mov
sub
addr16
test
xchg
mov
mov
mov
idiv
mov
and
dec
or
cmp
sbb
inc
add
cmp
ins
adc
sbb
and
adc
retf
push
fcom
imul
jmp
in
iret
mov
je
mov
dec
leave
mov
pop
fstp
push
ins
dec
std
mov
mov
imul
sahf
and
push
stc
mov
jmp
gs
retf
adc
mov
iret
sbb
jg
(bad)
mov
push
jg
in
out
sbb
jg
mov
dec
pop
jl
adc
or
mov
sbb
in
mov
(bad)
ret
rol
jle
ret
dec
aam
pop
inc
ficomp
dec
out
pusha
sub
dec
adc
mov
out
mov
mov
popf
addr16
mov
(bad)
and
pop
sbb
and
sub
js
sub
and
xlat
push
push
dec
cmc
jp
push
fld
jno
pop
add
inc
aaa
inc
(bad)
dec
add
cli
bound
jp
bound
ins
mov
shl
int3
jnp
push
in
and
mov
inc
inc
ja
scas
jecxz
ins
aaa
fs
int
not
push
fs
xchg
add
or
inc
inc
nop
mov
pop
jle
out
lahf
sbb
jg
dec
adc
data16
inc
xor
stos
fisttp
(bad)
jb
gs
mov
cmps
stc
xchg
stos
lods
cld
mov
sahf
lds
cdq
mov
mov
call
je
mov
pop
iret
xchg
jmp
push
imul
repz
loop
fmul
xor
repnz
xchg
push
add
test
neg
arpl
xor
ror
mov
adc
lods
out
add
mov
call
mov
ror
mov
ja
sub
in
jg
rcl
mov
cmps
mov
or
rcr
outs
or
jle
mov
inc
les
add
jb
mov
movs
jecxz
dec
retf
mov
cmp
add
adc
stos
jp
xor
xchg
xchg
ins
sbb
inc
sbb
inc
test
push
retf
test
pushf
fstp
push
pop
push
mov
das
pop
mov
arpl
xor
popf
inc
sbb
mov
sti
mov
adc
dec
lds
adc
jge
xchg
mov
cdq
sti
xor
and
lods
fist
xlat
xchg
test
sahf
shl
jg
mov
ss
cmc
and
cmc
dec
push
or
sbb
jb
mov
xchg
mov
pop
pop
pop
pop
ror
dec
(bad)
mov
aas
in
jbe
cli
mov
mov
ret
jp
cmp
mov
jne
adc
clc
dec
or
mov
scas
jne
add
hlt
data16
dec
mov
adc
test
add
out
sub
(bad)
retf
add
aam
add
out
bound
pop
jl
add
int
mov
pop
or
cdq
jnp
cmc
mov
div
repnz
and
dec
icebp
mov
sti
xor
in
sub
fist
mov
add
rcl
fs
gs
or
cmps
add
push
cld
and
sub
and
xchg
movs
nop
retf
in
mov
mov
pop
sbb
inc
retf
lock
call
mov
push
daa
xor
retf
jmp
arpl
inc
cmc
cmps
xchg
idiv
repnz
(bad)
mov
imul
dec
sub
inc
retf
int3
daa
dec
mov
loope
fs
in
push
sbb
mov
daa
inc
jecxz
mov
mov
je
(bad)
aad
mov
or
inc
rol
lea
xchg
lods
jg
xor
lock
and
and
aam
je
cdq
jno
repnz
repz
or
pop
jnp
xchg
inc
xor
inc
pop
cmp
adc
mov
pop
dec
dec
inc
sbb
xchg
mov
je
rol
scas
mov
jns
mov
loop
ins
lds
mov
cmp
in
mov
and
rcl
imul
inc
fstp
cdq
fisub
dec
cli
mov
dec
or
inc
ror
add
popf
dec
add
mov
mov
sbb
fdivr
jl
in
cmp
fistp
xor
(bad)
ds
or
mov
add
jge
clc
mov
fisttp
or
scas
push
stos
sahf
repnz
mov
rcr
loopne
outs
and
dec
fadd
or
inc
xor
pop
cld
mov
(bad)
movs
mov
sub
out
jl
rcl
mov
mov
in
pop
adc
js
scas
inc
adc
sub
mov
movs
cld
and
mov
clc
call
inc
sub
dec
mov
(bad)
jnp
in
xchg
fisttp
sub
add
fisubr
cmp
inc
mov
sub
mov
das
and
mov
cmp
push
xor
xor
clc
mov
shl
in
push
sub
(bad)
je
aaa
gs
sub
xchg
ror
sbb
data16
cdq
jmp
cmp
(bad)
jle
loope
fcom
sbb
xor
call
dec
mov
imul
call
pop
cmps
std
add
enter
dec
fild
fild
or
mov
retf
mov
fld
jo
mov
sbb
xchg
pop
or
add
inc
sti
mov
scas
int3
xor
in
cmp
popa
lods
iret
inc
add
lahf
xchg
rcl
pop
sub
fcom
int3
lahf
push
xor
mov
xor
jp
cdq
xchg
int3
push
add
xchg
dec
xor
xchg
imul
sahf
imul
outs
sbb
xor
hlt
add
xchg
push
push
adc
mov
cmp
fiadd
call
and
imul
add
jp
and
mov
mov
out
pop
push
fnstsw
add
cmps
xchg
shl
sub
int
inc
xchg
dec
sbb
mov
mov
push
pop
cmp
xchg
ins
and
bound
inc
mov
mov
mov
or
rcr
dec
aam
jo
or
mov
cmp
jecxz
or
(bad)
lods
xchg
cmc
pop
pop
in
cmps
inc
xor
inc
mov
inc
(bad)
mov
loopne
and
mov
int
or
(bad)
add
cmps
je
cli
mov
call
outs
sub
in
pushf
pusha
cmp
mov
fcom
inc
mov
push
add
enter
mov
dec
lds
cmp
jmp
xor
iret
lods
jl
out
mov
xor
mov
and
div
sbb
mov
leave
mov
sub
popf
pusha
adc
mov
mov
inc
std
sahf
stos
in
push
pop
sbb
add
push
into
pushf
jbe
adc
mov
cmp
into
dec
and
inc
mov
jne
sti
mov
push
pop
or
sti
and
mov
les
cmp
pushf
mov
pop
or
xchg
xlat
and
xchg
mov
pop
sbb
popf
xchg
sar
sbb
ret
add
scas
cmc
and
sbb
mov
jb
adc
jmp
sub
imul
pop
jmp
outs
fistp
jmp
mov
push
xor
xor
xchg
jns
and
(bad)
(bad)
out
pusha
jmp
mov
add
cs
jne
mov
ficom
mov
pop
cli
mov
rol
jge
int3
ds
mov
mov
cmp
in
cmp
xchg
frstor
sbb
mov
adc
rol
push
pop
aam
jp
sbb
mov
sti
mov
sub
inc
(bad)
movs
stos
(bad)
jmp
imul
imul
ds
ror
xchg
push
ins
sbb
mov
outs
mov
mov
call
add
lods
mov
pop
or
xchg
fsave
fldcw
cmps
jmp
popa
sti
xchg
dec
paddsw
mov
lods
(bad)
(bad)
push
and
popa
cs
ror
loope
fist
call
imul
mov
cmp
mov
xchg
mov
mov
mov
or
xchg
xlat
jnp
loop
mov
(bad)
xchg
xlat
add
jp
xchg
mov
ins
xor
pop
mov
xchg
inc
es
sbb
push
mov
jns
movs
nop
jecxz
cmp
pop
mov
add
mov
mov
popf
in
inc
sbb
gs
xlat
add
lods
scas
(bad)
cmp
leave
jae
ret
pop
pop
sbb
sahf
dec
cmp
cmps
in
jnp
into
aaa
ins
sti
test
add
jno
lea
popf
mov
dec
scas
mov
call
and
fs
jle
pop
inc
fcom
in
cwde
sti
add
rcr
pop
pop
fild
sar
lods
out
jl
xlat
nop
dec
and
stos
test
inc
xor
and
or
not
(bad)
pushf
outs
pop
xlat
mov
fdivr
sbb
xchg
pop
(bad)
mov
in
sahf
fsubr
gs
inc
pop
pop
inc
fdivr
sbb
inc
cld
mov
cmps
lds
pop
cmps
in
ss
rcr
or
and
xchg
xlat
and
stos
in
cmp
add
inc
sbb
mov
repnz
popa
or
mov
ins
movhps
jmp
xor
fwait
stos
in
jp
scas
inc
pop
pause
scas
call
leave
nop
xchg
rcl
mov
sbb
mov
lahf
std
inc
add
xchg
xchg
aaa
inc
jmp
in
jno
or
inc
cld
mov
jmp
leave
xchg
bound
out
mov
(bad)
pop
sbb
gs
mov
imul
call
xor
inc
iret
pushf
call
call
dec
push
add
ret
xor
mov
(bad)
jge
ficomp
scas
fadd
jno
xchg
jnp
leave
xchg
push
dec
repnz
idiv
push
sar
pop
sub
das
sub
(bad)
int3
es
ret
test
pushf
mov
jp
out
(bad)
ret
fild
aam
jo
adc
scas
fs
sbb
rol
or
jmp
mov
pop
xor
mov
scas
mov
stos
mov
jge
xor
in
sub
cmps
call
sbb
movs
mov
dec
daa
loop
test
xchg
ins
sub
dec
stc
mov
ds
pushf
arpl
mov
ds
movs
jecxz
daa
add
jbe
test
nop
(bad)
int3
jge
div
loop
pusha
enter
in
add
fld
pusha
adc
xchg
xchg
cmc
pop
pop
idiv
mov
sub
icebp
outs
or
jbe
lea
out
and
xor
jle
clc
push
and
mov
not
test
inc
pop
clc
fwait
mov
sar
rcl
dec
sub
add
test
fistp
mov
pop
std
mov
sbb
cwde
ja
ds
mov
mov
dec
cmps
lds
cs
out
mov
dec
mov
jne
adc
test
pop
out
mov
hlt
mov
sub
rcr
adc
jecxz
inc
fistp
xchg
sti
add
retf
mov
pushf
fiadd
inc
lods
imul
js
fwait
mov
inc
or
jge
cmp
inc
mov
(bad)
jnp
adc
in
mov
nop
xchg
loopne
jecxz
adc
push
ficom
and
sub
into
mov
out
mov
out
je
leave
mov
scas
in
jp
or
lods
inc
add
xchg
ins
push
add
mov
add
mov
mov
ins
xor
jecxz
outs
or
cmp
xor
dec
les
cmps
loopne
pop
mov
or
enter
mov
mov
(bad)
lea
inc
retf
xchg
imul
dec
repz
ds
mov
pop
into
mov
mov
xchg
data16
mov
mov
and
or
and
in
jp
or
xchg
mov
pushf
cmps
loope
and
pop
mov
nop
rol
xor
mov
iret
aaa
push
movs
jecxz
aas
sbb
cmp
inc
fisttp
fistp
pop
cmp
mov
pop
out
jbe
hlt
xchg
adc
std
das
jne
ror
imul
jle
repz
leave
xor
add
scas
in
dec
das
xor
stc
pop
sub
push
dec
push
or
cli
dec
sbb
mov
xchg
dec
adc
sahf
int3
push
aaa
cmp
int3
xor
mov
sub
sbb
iret
mov
jl
idiv
outs
or
jnp
xchg
mov
push
push
or
test
sti
pop
cmp
pushf
inc
das
dec
mov
cmps
(bad)
cld
inc
xor
adc
es
add
outs
cmc
mov
xchg
xlat
inc
sbb
mov
add
jno
test
jb
leave
daa
pusha
cmc
cdq
outs
sub
dec
mov
mov
fwait
rcl
retf
adc
jmp
sbb
movs
xchg
push
je
xchg
mov
rcl
div
inc
or
data16
sbb
push
cmps
xlat
aas
data16
pop
add
mov
(bad)
into
cmp
cld
dec
sub
pushf
fstp
dec
xor
pusha
int3
mov
xchg
nop
fbld
jge
lds
cs
cs
repz
rol
mov
mov
add
loop
xor
popf
xchg
aad
xor
lods
popf
ror
in
mov
stc
mov
or
and
inc
mov
jp
xchg
and
add
push
fisubr
ficom
or
(bad)
and
out
sahf
bound
loopne
jg
or
retf
aad
dec
retf
lock
mov
in
(bad)
cld
push
adc
push
sti
mov
sub
dec
das
div
mov
mov
enter
dec
sub
mov
nop
cld
dec
push
sbb
lods
add
jno
leave
ins
and
push
std
scas
mov
mov
mov
inc
sbb
cmps
fdivr
mov
mov
(bad)
mov
pop
sbb
xchg
mov
into
xor
mov
xor
out
fs
mov
xlat
xchg
xchg
idiv
in
jl
out
or
mov
dec
or
stos
ins
and
push
aad
mov
mov
pop
sbb
arpl
cmp
cmp
pop
jmp
lods
shl
mov
mov
(bad)
mov
cmp
cmps
(bad)
in
jno
or
mov
in
mov
fisttp
push
je
adc
cmps
les
jg
mov
leave
inc
xor
pop
mov
fstenv
js
in
call
push
mov
push
daa
xor
nop
ror
scas
mov
xchg
ins
cs
cdq
mov
je
pop
push
cmc
xchg
mov
ret
jo
loop
mov
and
mov
retf
jne
int3
(bad)
jge
stos
stos
ret
or
test
stos
dec
push
sbb
fwait
jnp
sub
clc
cmp
cmps
mov
stos
xchg
fistp
sbb
fisttp
cmps
nop
stc
pop
sbb
sahf
jg
aad
(bad)
retf
and
jmp
imul
sbb
imul
mov
rol
aas
push
xchg
aam
push
(bad)
mov
jmp
mov
sub
call
jo
sub
lds
pop
push
add
push
ret
icebp
pop
ds
scas
int3
pop
sbb
mov
imul
mov
cld
inc
or
arpl
or
sbb
sti
mov
cs
leave
mov
sbb
adc
mov
nop
add
sub
outs
cmp
pop
pop
add
pushf
fistp
loopne
mov
push
adc
cmp
scas
mov
jae
scas
mov
retf
push
push
add
(bad)
pop
div
or
stos
dec
adc
xchg
and
add
shl
pop
fdiv
sub
xchg
(bad)
sbb
mov
aam
daa
das
jbe
mov
jmp
movs
arpl
(bad)
mov
mov
dec
or
mov
pop
pop
fistp
ror
lds
cli
mov
aaa
gs
jl
mov
sti
dec
sub
mov
stc
dec
push
repz
mov
push
and
jmp
sbb
lods
mov
pop
paddb
adc
lock
sbb
mov
clc
sub
mov
stos
je
(bad)
xchg
push
cmp
jne
in
scas
mov
jne
cmc
push
push
shl
push
mov
ret
mov
das
ins
int
mov
dec
and
mov
rol
popf
bound
or
js
mov
cmovl
push
mov
dec
or
pushf
ins
das
lds
pop
pop
mov
ja
jmp
or
inc
mov
mov
cmp
scas
xchg
out
and
pop
ret
fwait
mov
add
into
cmp
and
imul
nop
cld
sub
mov
jle
pop
inc
push
ins
ds
push
repnz
stos
mov
dec
and
dec
fdivr
cld
mov
sbb
scas
add
pop
adc
pop
cmp
mov
aas
mov
add
push
mov
add
dec
les
das
push
push
and
pop
std
mov
les
add
rcl
dec
mov
call
daa
fs
xchg
popf
fisubr
inc
cmps
loopne
sub
popf
fild
mov
ss
mov
dec
retf
shr
mov
fnstenv
push
push
out
mov
in
lods
jmp
push
xchg
jl
or
jmp
inc
adc
fs
addr16
xchg
scas
in
sub
out
mov
mov
ins
push
sbb
mov
(bad)
jg
sbb
retf
repz
adc
push
scas
loope
outs
movs
(bad)
and
jecxz
rcl
pop
adc
test
cli
dec
sub
dec
enter
pop
push
fidivr
add
pop
lds
fst
sti
cwde
ja
xor
ror
jae
hlt
jnp
add
mov
jae
add
xchg
mov
pop
pop
aas
dec
fsubr
mov
icebp
or
int3
pop
pop
rcr
aad
mov
jg
movs
mov
pop
cmp
mov
in
sbb
dec
aam
lods
loop
sub
dec
fdivr
mov
jnp
call
fdiv
mov
test
sub
stos
cdq
jmp
aaa
js
cli
das
jl
sar
jl
sti
and
or
cmp
push
mov
push
xor
mov
add
xchg
jae
iret
add
and
adc
stos
mov
and
test
mov
ins
sti
mov
mov
lds
pop
push
or
mov
daa
push
movntps
xchg
call
mov
ret
fwait
outs
cmp
dec
or
sahf
mov
test
imul
addr16
xchg
scas
std
jg
sub
scas
mov
dec
adc
inc
mov
mov
movs
(bad)
pop
sbb
dec
enter
pop
sbb
nop
push
lock
fdiv
mov
and
push
add
cmps
mov
fwait
xchg
rcr
ja
in
dec
xchg
xchg
idiv
and
mov
or
xlat
pop
adc
pop
xchg
cs
mov
jmp
repz
repz
and
sbb
mov
cs
fsubr
into
xor
cmp
push
enter
jl
rep
test
lds
js
test
cli
ss
fcomp
add
mov
mov
ss
jmp
in
jae
pop
inc
rcl
sbb
lods
mov
dec
jmp
cmp
and
pusha
mov
es
in
inc
adc
or
hlt
test
jno
lahf
inc
es
xor
inc
mov
bound
push
mov
dec
or
mov
test
xchg
cmps
in
pop
sub
dec
jmp
cli
and
call
and
ins
sub
push
stos
fnstenv
jae
mov
dec
mov
js
adc
xchg
pusha
and
movs
div
sbb
stos
call
adc
mov
mov
inc
xor
mov
test
inc
sbb
pop
mov
inc
add
mov
es
pop
fcomp
add
out
lods
cwde
cli
pop
sbb
push
lods
jmp
hlt
sub
mov
out
popa
(bad)
mov
pop
pop
into
popf
outs
or
outs
rcr
mov
jo
xor
lock
or
adc
push
xchg
clc
cmp
pushf
xchg
in
data16
mov
mov
sbb
sub
mov
mov
jb
cmc
es
mov
and
mov
mov
and
cdq
arpl
idiv
push
add
nop
icebp
cmp
leave
(bad)
icebp
stos
jmp
mov
(bad)
ficomp
(bad)
mov
pushf
loope
sti
stos
jmp
les
rol
aam
iret
mov
rcl
mov
mov
(bad)
out
lods
in
fnstenv
fld
aam
idiv
movs
clc
popf
ficom
jmp
fild
sahf
loopne
cld
add
mov
out
xchg
cmp
push
ret
mov
add
xchg
in
mov
stos
or
mov
add
ds
push
pop
adc
repz
pop
mov
scas
call
sar
mov
jne
loop
ret
out
ins
and
sti
shl
mov
mov
lahf
cld
outs
mov
push
(bad)
repz
mov
jnp
inc
pop
adc
or
ins
(bad)
push
pushf
leave
xchg
jbe
xor
(bad)
jecxz
scas
jnp
push
and
in
scas
leave
and
xchg
int3
pop
jle
dec
rol
inc
repz
stos
(bad)
btc
stos
sub
or
jecxz
cmps
dec
popf
fiadd
cs
jmp
add
dec
jo
inc
mov
sub
aas
mov
dec
sbb
cmc
mov
push
call
dec
imul
cs
fnstcw
fstp
xchg
sub
stos
push
je
sbb
bound
in
sbb
cmc
lock
mov
mov
adc
pusha
scas
pshufw
stos
out
mov
cwde
(bad)
fdivr
nop
cmc
mov
xor
push
add
dec
and
clc
mov
addr16
mov
in
cli
mov
lock
and
inc
or
call
jno
push
rol
jecxz
push
push
cmc
loop
call
xchg
push
sbb
or
inc
adc
jns
push
cmp
or
adc
inc
cs
or
or
inc
cmp
jle
jb
dec
sbb
pop
adc
popa
adc
jg
dec
push
push
pop
inc
daa
push
dec
push
push
ss
inc
bound
push
jo
popa
adc
cmp
push
sbb
and
dec
push
dec
add
dec
adc
push
or
pop
ds
push
or
addr16
inc
and
mov
push
sub
test
cmp
lea
xor
out
fidivr
arpl
sbb
out
movs
(bad)
cmp
lods
sbb
out
mov
pop
xor
addr16
adc
pop
sub
sti
(bad)
(bad)
leave
fnstenv
movs
dec
sub
imul
push
xor
jl
jg
or
or
jl
xor
lea
je
xor
and
outs
loop
xchg
hlt
jne
cdq
fnsave
imul
scas
and
push
scas
pop
sub
jmp
mov
repnz
sahf
sub
sub
repnz
retf
iret
pushf
lea
pop
pandn
cwde
mov
enter
out
test
fucomp
fldcw
das
je
jmp
(bad)
mov
enter
inc
jo
xor
leave
lods
mov
mov
bound
mov
pop
fnclex
iret
mov
jnp
sub
fdivr
xchg
adc
xchg
in
sub
popf
and
xchg
call
xchg
lock
call
jecxz
cmc
test
gs
add
or
mov
sub
jmp
les
jge
push
sub
(bad)
rcl
(bad)
stos
out
inc
addr16
mov
inc
call
xor
das
rcl
div
shl
pushf
ficom
rcl
jmp
les
retf
(bad)
lods
ror
mov
shr
mov
test
test
movs
aam
retf
mov
xchg
rol
je
pop
adc
push
pop
pop
xor
push
and
cmps
out
retf
movs
in
mov
out
mov
(bad)
clc
xchg
sbb
dec
or
das
outs
xor
sbb
loope
mov
adc
push
add
push
or
sti
cli
ret
or
outs
mov
push
adc
idiv
pop
mov
dec
or
arpl
inc
mov
cwde
retf
ficomp
xchg
pushf
ficomp
sbb
fisttp
arpl
pop
and
ficom
ja
push
fistp
stos
jmp
and
push
cmps
pop
jp
sbb
ror
mov
dec
enter
scas
pop
pop
adc
retf
dec
or
mov
adc
std
dec
xchg
xor
fimul
jb
pop
cs
xchg
daa
addr16
mov
push
push
cmp
cld
sbb
mov
jle
or
loope
imul
jecxz
data16
rol
mov
jl
xor
enter
mov
pop
ja
sbb
mov
mov
cmp
out
cld
mov
cmp
out
and
cwde
push
dec
movs
xor
in
dec
pop
push
adc
(bad)
mov
loope
loopne
push
xor
scas
punpcklwd
into
lods
sbb
mov
mov
cmp
fnstenv
sub
mov
mov
mov
cmps
push
ja
jmp
jg
loopne
not
sahf
fstp
dec
and
sar
sub
push
add
ret
mov
dec
mov
cmp
xchg
mov
jnp
cmp
sub
inc
cmp
cdq
ror
retf
mov
shl
mov
xchg
sbb
jl
inc
pop
pop
push
dec
sub
push
inc
add
push
dec
sub
push
jno
jb
inc
xor
jnp
pop
adc
xor
dec
sbb
xor
add
pop
sub
imul
dec
pop
or
ja
addr16
fs
jae
push
adc
xchg
repz
rep
sbb
pop
sbb
push
or
repz
xor
and
push
jnp
push
mov
cmc
mov
or
inc
or
movs
(bad)
mov
scas
pop
imul
movs
sbb
idiv
mov
scas
add
iret
mov
or
jecxz
iret
push
xor
out
xchg
in
lods
out
bound
jno
adc
sar
ret
add
movzx
push
ret
cmp
fadd
mov
fs
mov
jge
call
js
add
jl
jcxz
movs
stc
gs
jb
xor
sbb
add
mov
imul
test
push
jne
sbb
stos
xor
adc
(bad)
mov
call
dec
push
and
icebp
sbb
push
sbb
call
sub
mov
push
outs
mov
jnp
jnp
jmp
aaa
inc
mov
dec
psubusb
or
sub
outs
and
lds
mov
mov
bound
lock
std
mov
dec
add
inc
inc
call
popa
mov
mov
pop
(bad)
or
mov
or
dec
sbb
call
and
jmp
outs
push
in
dec
jb
cmp
or
pop
sbb
jge
imul
cmp
cmp
add
pop
add
sub
or
outs
xor
ins
sub
and
je
pop
pop
outs
ss
sbb
pop
adc
sub
fs
push
das
outs
aas
jl
push
cmp
popa
add
jo
push
adc
cmp
or
push
inc
add
jns
ins
ss
pop
inc
and
xor
dec
cmp
xor
data16
and
cmps
in
xchg
add
icebp
test
mov
les
mov
cmp
loope
pop
and
mov
add
mov
pop
bnd
xor
push
or
lods
jmp
adc
hlt
test
cmp
int3
mov
push
cs
cmp
rcl
xchg
jns
gs
mov
lods
jmp
mov
mov
mov
ss
adc
iret
in
jmp
loope
mov
aam
mov
sti
out
lahf
xchg
jns
sub
retf
cmc
mov
shl
hlt
xchg
mov
sub
push
push
add
push
xor
mov
dec
leave
or
or
ficomp
and
mov
jne
add
scas
cld
inc
xor
stc
sbb
or
imul
and
(bad)
cmps
imul
fsubp
test
test
fld
sbb
pushf
repnz
cwde
arpl
pop
xchg
adc
ret
jl
sbb
movs
pop
pop
lea
inc
add
push
fdiv
xchg
repz
mov
xchg
ror
daa
xchg
rol
outs
xchg
cld
nop
push
jne
push
mov
cmp
sbb
out
sub
dec
inc
setns
(bad)
(bad)
stos
cld
mov
mov
mov
xchg
in
cli
mov
mov
retf
mov
retf
stos
retf
xchg
xchg
leave
xchg
sbb
jnp
push
dec
pop
pusha
outs
aaa
push
pop
inc
daa
inc
add
push
push
jg
dec
or
push
aaa
jge
pop
adc
jp
pop
cmp
push
pusha
pop
add
inc
sbb
dec
and
inc
pop
pop
xor
cmp
jnp
dec
adc
and
add
cs
or
push
xor
fnsave
loope
aam
icebp
mov
ror
fwait
xlat
popf
ins
popf
shl
movaps
cmc
test
dec
ja
push
lea
push
xlat
mov
js
cmps
sbb
nop
loop
inc
adc
cmp
sbb
adc
or
lds
idiv
mov
or
adc
adc
dec
add
cld
mov
adc
arpl
jae
inc
mov
mov
cmp
mov
jle
adc
push
fwait
repnz
popf
or
xchg
mov
imul
jae
es
(bad)
push
pop
or
adc
pop
mov
push
fst
push
dec
loopne
jmp
fst
dec
cmp
(bad)
mov
mov
jnp
or
push
out
push
js
dec
mov
shl
dec
and
ret
retf
xchg
aam
pushf
repz
ret
xchg
imul
adc
adc
call
into
mov
and
push
mov
jg
pop
test
add
mov
add
xor
or
iret
fsubr
mov
into
cmps
aam
mov
outs
mov
pop
sti
aas
sar
xchg
dec
cmps
jnp
xor
movs
icebp
fldenv
or
dec
xor
and
imul
aas
pop
push
dec
and
inc
add
push
add
pop
push
inc
or
add
push
xor
daa
inc
arpl
outs
add
xor
push
and
gs
or
outs
ss
push
inc
es
add
ins
adc
addr16
add
push
aaa
jnp
pop
adc
jl
pop
xor
jge
gs
add
xor
fwait
(bad)
xchg
shl
jmp
jmp
test
stc
test
(bad)
les
xchg
aad
shl
(bad)
mov
(bad)
adc
push
jmp
dec
inc
xor
(bad)
push
jae
icebp
(bad)
mov
lods
sbb
or
push
stos
in
jae
sub
add
lods
out
pop
dec
adc
adc
in
fisub
push
mov
push
adc
mov
cwde
retf
in
addr16
and
lock
push
jne
js
sbb
sbb
xor
mov
and
das
addr16
(bad)
sahf
in
pop
jns
arpl
mov
cwde
popf
or
adc
ins
xor
xchg
dec
shl
aad
lods
xor
loop
mov
ja
adc
outs
std
loope
xchg
xchg
or
jl
ins
stc
aad
xchg
push
aad
mov
sub
adc
fdivr
or
shr
push
js
out
mov
and
jns
push
test
xlat
xchg
int3
xor
inc
add
mov
sub
hlt
mov
aaa
jbe
jge
(bad)
mov
or
lahf
rol
popa
aas
outs
rol
rcl
mov
jae
repz
test
sub
inc
scas
and
(bad)
icebp
jecxz
fistp
mov
data16
jl
out
pop
cmp
fiadd
outs
fucom
lods
sbb
cmc
scas
fistp
jmp
stc
xchg
ficomp
jl
jp
pop
and
fst
sti
mov
scas
into
pushf
shl
lods
in
mov
xchg
mov
(bad)
fistp
(bad)
mov
pushf
loope
sti
stos
jmp
les
rol
rcl
mov
call
rol
fld
cwde
fimul
ret
mov
in
lods
sbb
jae
push
adc
scas
iret
sub
xchg
ret
mov
lods
xchg
sub
aad
test
imul
mov
out
sbb
nop
enter
(bad)
je
pop
cmp
xchg
or
adc
mov
test
dec
push
cli
fist
pop
movs
cmp
lahf
iret
xor
dec
mov
stos
fst
xor
pop
xchg
cmc
mov
shr
and
mov
test
inc
and
adc
int3
and
(bad)
cmp
shr
add
into
test
cmp
ja
in
popf
jb
dec
or
aam
repnz
pop
cmp
adc
iret
cmps
hlt
push
jns
push
mov
lahf
sbb
cmps
push
dec
mov
inc
sub
mov
scas
imul
enter
ds
into
mov
jecxz
or
dec
pop
pop
mov
repz
fwait
data16
pusha
(bad)
xchg
cmc
ss
sbb
stos
cld
mov
mov
test
mov
or
push
arpl
sbb
loope
call
dec
mov
gs
add
fisttp
idiv
xchg
hlt
jge
jle
inc
add
mov
jge
xor
loopne
dec
aaa
adc
popf
icebp
push
(bad)
dec
adc
push
add
sub
dec
or
xor
adc
inc
add
or
inc
add
js
ja
dec
pop
push
aaa
push
adc
ins
sbb
push
ja
inc
push
pop
add
pusha
and
cmp
jb
jae
push
pop
adc
jp
push
or
jnp
push
adc
sub
gs
jnp
dec
or
jp
push
ds
push
pop
sbb
push
or
pop
sbb
pop
pop
dec
add
inc
or
jb
cmp
push
jge
dec
push
addr16
push
push
dec
adc
pushw
inc
add
imul
sub
outs
add
push
pop
add
cmp
fmul
fs
xchg
bound
aas
pop
test
dec
mov
sub
fnsave
bound
dec
mov
and
xor
(bad)
xchg
jno
jle
out
(bad)
cld
and
cmp
ror
mov
dec
nop
hlt
mov
and
ins
adc
fidivr
sbb
stc
mov
jmp
cwde
rcr
icebp
retf
mov
jae
sbb
or
rep
sbb
ficomp
push
mov
dec
cmp
sti
mov
int
mov
(bad)
test
sbb
adc
push
push
cmp
arpl
es
xlat
mov
movs
sbb
idiv
mov
outs
unpckhps
or
ds
mov
add
push
adc
ror
dec
test
mov
pop
aaa
jnp
cmp
stc
stos
int
jp
and
out
xchg
rcl
inc
mov
dec
es
arpl
push
test
repz
imul
cmp
and
repz
(bad)
hlt
sub
ret
pop
xchg
cmc
pop
xchg
push
dec
cmp
jge
jne
jne
push
and
cmp
js
arpl
jo
pop
aaa
jnp
pusha
add
inc
pop
dec
and
jg
dec
or
pop
pop
push
push
outs
aas
jg
jl
jge
inc
sub
dec
or
cdq
int
in
lds
mov
stos
in
fnstenv
shl
mov
stos
call
mov
add
loop
aad
(bad)
mov
stc
pushf
aad
lock
test
mov
test
xchg
movs
aam
into
mov
ficomp
leave
xchg
mul
in
int3
mov
out
repnz
mov
xchg
in
mov
xchg
div
sbb
cli
sbb
std
adc
or
(bad)
xchg
jb
fbstp
dec
or
rol
mov
ss
mov
out
shr
or
lds
mov
add
stc
int3
and
sbb
xor
mov
cwde
dec
push
or
not
jne
cmp
add
icebp
stos
push
sub
or
lods
loope
inc
inc
cmovg
mov
jb
sbb
and
ds
push
jmp
dec
and
shl
inc
sub
shr
ins
cmp
push
dec
and
iret
xor
jno
pusha
fsub
dec
enter
mov
push
push
sbb
jp
pop
and
mov
(bad)
hlt
cmp
pop
sbb
fsub
mov
inc
add
ins
inc
pop
or
test
xchg
sub
xchg
sbb
and
cmps
sbb
out
cmps
sar
int
outs
jg
jbe
xor
adc
mov
jns
xor
cmps
cld
jo
inc
and
mul
scas
(bad)
aam
int
fadd
(bad)
(bad)
pusha
cmps
ja
scas
add
aad
hlt
test
xchg
mov
stos
in
ret
mov
out
jmp
vphaddubw
fiadd
repz
mov
lods
loopne
iret
(bad)
fistp
xlat
mov
mov
mov
scas
jmp
shl
test
(bad)
xchg
hlt
mov
mov
stos
fcomp
enter
std
mov
xchg
ror
hlt
mov
mov
iret
(bad)
icebp
stos
jmp
mov
test
(bad)
loopne
ret
lods
ficomp
rcl
clc
test
aad
int
int3
mov
mov
mov
(bad)
mov
dec
out
fcomp
js
xor
add
sbb
jecxz
mov
jno
cmp
sub
test
mov
add
inc
xchg
jmp
setg
movs
jo
pop
das
push
mov
movs
sahf
in
test
dec
push
adc
aad
xchg
test
cmps
(bad)
xor
dec
xadd
mov
jb
cld
mov
or
add
stos
(bad)
mov
pop
psubb
inc
xor
aam
call
out
xchg
or
fldcw
push
cmp
sti
fsubr
out
test
dec
dec
add
fst
and
jbe
add
leave
fisub
xchg
inc
jo
ins
ffreep
(bad)
ror
popa
rol
stos
in
pop
jae
pop
mov
pop
cs
retf
mov
nop
leave
xor
out
jb
pop
inc
cmps
push
inc
adc
icebp
mov
push
call
mov
cdq
(bad)
mov
and
add
(bad)
retf
jl
cmp
ffree
mov
xor
test
adc
xchg
stos
jo
lock
push
dec
das
sbb
xchg
(bad)
lahf
jae
stos
(bad)
frstor
rol
test
fwait
sti
mov
sbb
jo
push
pop
inc
cmp
jl
push
aaa
push
adc
inc
sbb
push
add
sbb
imul
sbb
push
or
push
pop
inc
aaa
imul
outs
and
adc
jnp
pop
sbb
inc
pop
push
and
movs
out
retf
mov
loop
les
fld
xlat
xchg
idiv
in
in
and
in
iret
mov
mov
xor
loope
repz
fild
add
cmp
imul
ins
and
dec
pop
pusha
and
push
add
js
jbe
push
daa
arpl
add
and
xor
jo
or
arpl
(bad)
arpl
inc
cmc
(bad)
rol
pop
or
popa
mov
jl
and
ss
out
mov
les
fst
sbb
inc
or
push
mov
mov
push
mov
pop
inc
fnstsw
in
mov
cld
mov
cmp
jo
sbb
and
ins
cmp
mov
js
out
ins
loope
lods
xor
dec
or
es
and
push
xchg
cwde
ficomp
xor
out
cmp
mov
lock
sar
imul
outs
push
push
cmp
and
iret
fwait
mov
into
mov
sahf
scas
hlt
aas
and
movs
cdq
mov
gs
dec
(bad)
sub
xor
leave
call
cmps
neg
loop
enter
mov
imul
push
mov
pop
enter
and
aas
add
jge
mov
popa
add
xor
cmp
xchg
dec
cmp
mov
and
repnz
sar
stos
in
mov
out
loope
add
inc
push
sub
push
adc
xor
call
outs
sub
and
dec
xchg
jp
scas
ret
fistp
xchg
(bad)
cwde
push
sub
les
xor
neg
mov
jmp
push
sub
mov
retf
xchg
sub
xchg
mul
fninit
xor
jae
pop
out
sti
adc
sti
pop
ror
fxtract
or
add
or
inc
jmp
xlat
and
push
sbb
inc
sbb
and
dec
mov
mov
adc
jmp
adc
in
adc
enter
mov
fild
inc
sbb
push
adc
xchg
fstp
popa
xor
jle
sub
(bad)
push
sbb
rcr
cld
add
push
daa
arpl
adc
inc
xchg
adc
jle
pop
or
dec
or
ss
mov
and
call
lods
jmp
(bad)
mov
sahf
xchg
lods
out
ja
and
dec
mov
sub
mov
push
inc
cmps
bound
push
push
inc
(bad)
jmp
js
ja
xor
or
and
int
in
fdiv
mov
adc
div
iret
xchg
outs
les
cmp
imul
adc
jp
dec
mov
push
loopne
clc
xchg
and
add
xchg
ins
sub
cwde
jbe
sub
add
imul
xor
sub
js
out
mov
or
push
pop
adc
and
push
cmovnp
aas
cli
mov
fwait
scas
test
xchg
popf
(bad)
pusha
scas
lahf
(bad)
xchg
hlt
lods
(bad)
aam
clc
test
clc
arpl
pushf
fisub
or
stc
lea
adc
and
cwde
cmps
(bad)
xchg
test
xchg
sahf
je
test
xor
mov
cmps
fdiv
push
mov
add
cmp
retf
xchg
xor
rol
shl
push
push
out
xchg
leave
mov
inc
das
dec
adc
xchg
ret
mov
mov
and
add
push
and
jae
push
fst
and
dec
cmp
sub
and
les
inc
and
and
push
dec
adc
jle
je
out
fldenv
mov
adc
inc
push
push
repnz
mov
jbe
cmc
ret
mov
(bad)
fsubr
leave
sbb
in
scas
loope
mov
mov
in
mov
cld
movs
in
mov
mov
scas
xchg
mov
js
mov
xor
fsub
mov
jo
fnstsw
bound
inc
cmp
call
dec
adc
dec
adc
jnp
inc
cs
in
les
mov
in
ds
arpl
mov
stc
mov
in
xchg
es
je
lahf
std
xchg
arpl
imul
mov
and
jg
pop
sbb
cmp
loopne
call
in
fisub
sub
or
xchg
cmp
or
pusha
cmp
jp
popa
repz
pop
ss
adc
lods
and
nop
cmps
jmp
cmp
aam
pop
xor
je
jno
xlat
popf
iret
mov
dec
lods
ret
mov
stos
pop
mov
mov
mov
push
or
imul
inc
mov
scas
bnd
inc
or
pop
push
sbb
je
gs
dec
xor
add
mov
inc
inc
or
jle
sub
and
adc
sub
inc
clc
adc
bound
loopne
or
xlat
mov
test
xchg
jp
imul
mov
mov
push
push
pop
jl
sbb
shr
cmp
xchg
mov
test
push
xor
in
test
daa
inc
adc
(bad)
aam
repnz
(bad)
cmp
dec
push
cmp
or
xor
cli
pop
push
or
sub
xor
jge
stos
outs
mov
test
cmc
or
dec
hlt
fnstcw
mov
aaa
ret
mov
mov
cli
popa
add
rol
popa
adc
mov
call
scas
xlat
mov
xchg
test
data16
lds
repz
cmc
lods
ror
jecxz
packsswb
and
sbb
xchg
rol
jnp
rcr
push
xor
popa
aad
cmps
(bad)
cmova
(bad)
mov
ficomp
int
outs
adc
sbb
je
dec
sbb
dec
adc
inc
cmova
outs
fld
call
pop
sbb
lock
pop
mov
and
rcr
retf
mov
xchg
leave
pop
add
in
lds
dec
add
and
cmp
inc
xor
push
adc
adc
push
and
push
es
push
jb
dec
sbb
das
xchg
aam
jmp
int
jecxz
std
addr16
push
ins
ss
or
mov
mov
cmp
out
mov
push
and
jb
retf
xchg
int
test
xor
dec
adc
add
add
rcl
inc
push
arpl
(bad)
cdq
rol
sub
dec
or
lods
(bad)
cdq
(bad)
data16
mov
or
sbb
daa
dec
xchg
inc
push
adc
xor
outs
aaa
pop
es
pop
and
pop
je
jp
stc
mov
adc
in
dec
das
pusha
das
jl
dec
sahf
pop
cmp
lahf
push
and
jns
add
push
(bad)
jmp
dec
xchg
bound
pop
jmp
std
call
jo
enter
scas
lock
dec
mov
dec
aas
inc
sbb
jns
dec
and
das
push
pusha
test
jg
dec
rol
es
adc
xchg
int3
mov
push
push
in
ret
and
lods
out
cmp
mov
or
add
add
push
aas
pop
sbb
rcr
nop
clc
sbb
mov
cmp
jmp
jo
jb
push
and
xadd
fs
dec
adc
jl
sub
inc
pop
or
mov
dec
and
fs
add
test
inc
pop
and
pushf
imul
mov
rcl
out
retf
mov
xchg
stos
ins
mov
push
sbb
xor
mov
rcr
fstp
in
xchg
ror
(bad)
mov
dec
sbb
in
mov
adc
mov
mov
mov
mov
test
lahf
rcr
test
adc
es
xor
cmc
mov
fwait
mov
jns
and
ja
cmp
mov
xchg
in
fmul
nop
jecxz
ror
mov
hlt
sahf
cld
xchg
dec
mov
hlt
lods
jmp
(bad)
idiv
clc
stos
inc
push
inc
adc
(bad)
lahf
jge
repnz
sub
imul
mov
cmps
retf
sub
pusha
sub
in
xchg
nop
mov
test
sahf
int
scas
jle
sbb
cmp
xor
push
xchg
push
xor
dec
repnz
pushf
mov
rep
test
icebp
imul
and
mov
and
sub
out
lods
movs
int
(bad)
push
clc
add
pop
mov
in
and
cmp
addr16
and
mov
mov
lods
out
test
imul
xor
jl
adc
push
xchg
std
call
inc
and
xchg
daa
push
and
into
pushf
push
and
dec
or
xor
imul
xchg
dec
or
pusha
xor
mov
popa
mov
fstp
scas
mov
ins
das
jbe
ins
neg
mov
addr16
pop
sub
lods
sar
clc
ficom
std
mov
jmp
rcl
cdq
mov
adc
es
test
outs
scas
jmp
pop
pop
bound
ins
sub
repnz
add
out
inc
add
iret
xchg
les
jg
loop
cli
outs
cmc
rcr
add
push
mov
xchg
and
push
and
jle
ss
sub
cmp
cmp
and
pop
or
jb
imul
sbb
jnp
and
xchg
mov
mov
cmp
rcl
(bad)
out
inc
sbb
dec
fidiv
jp
dec
mov
mov
xchg
jecxz
fcmovnbe
lahf
in
mov
and
jo
inc
push
dec
or
movs
leave
mov
push
test
rol
(bad)
xchg
hlt
sub
dec
and
mov
sbb
xor
js
xchg
mov
mov
mov
in
fsub
sub
jmp
ret
add
inc
xor
cli
xchg
dec
mov
dec
bound
inc
add
sub
add
inc
das
pop
out
ficomp
popf
(bad)
mov
imul
mov
or
jmp
add
mov
fisub
mov
and
pop
inc
or
sub
fucomi
sub
xchg
aad
inc
sub
daa
mov
mov
in
mov
packsswb
dec
sbb
in
repnz
fimul
pop
sbb
imul
inc
xchg
lds
loope
sbb
jo
outs
cmp
fisub
jo
pop
push
jge
out
pop
sub
rol
out
lods
rep
push
dec
aas
es
out
mov
sbb
rol
inc
and
xor
cmps
inc
and
(bad)
ds
sub
sbb
mov
add
xor
cwde
cli
mov
lds
mov
ror
cmp
push
or
xor
daa
(bad)
(bad)
(bad)
stos
fstp
dec
out
pushf
stc
mov
shl
xor
and
loope
stc
xchg
inc
push
adc
or
leave
mov
mov
pop
out
jmp
adc
xchg
int3
mov
mov
mov
mov
mov
in
cwde
fnstsw
repz
and
sub
cmps
inc
sbb
push
(bad)
div
bound
out
push
cs
push
out
(bad)
xchg
jno
aas
pop
or
imul
pop
adc
popf
lds
mov
inc
jecxz
fdivr
sbb
pop
push
or
xchg
dec
pop
pop
cmp
clc
(bad)
popf
(bad)
stos
mov
in
(bad)
les
inc
pop
push
or
mov
and
or
test
add
sbb
(bad)
xchg
fisub
je
ja
sbb
jb
adc
sub
mov
push
jne
inc
adc
(bad)
mul
fnsave
inc
cmp
inc
add
ficomp
cmc
xchg
cli
fs
adc
cmp
(bad)
int3
mov
pop
pop
xor
and
fdiv
xchg
icebp
mov
mov
movq
dec
adc
ss
call
ss
iret
xchg
adc
sbb
mov
add
iret
mov
mov
movs
iret
pushf
movs
xlat
mov
pop
lds
add
out
ret
mov
xchg
jnp
dec
or
scas
fs
xor
cmp
mov
and
pop
xor
push
in
shr
or
xor
pop
cmp
and
jbe
jp
xchg
sar
inc
sub
iret
nop
jecxz
mov
test
or
aad
stc
mov
xor
fdivr
xchg
cmp
je
or
xor
pop
inc
in
iret
data16
xchg
mov
imul
pop
pop
pop
scas
imul
dec
loope
sti
fs
xor
dec
or
jl
fld
leave
imul
and
inc
push
and
lds
pusha
and
dec
or
inc
sbb
ds
xchg
fisttp
or
jl
ficomp
jo
and
push
mov
imul
lds
mov
call
loopne
add
dec
retf
add
retf
pushf
inc
cld
mov
imul
aas
jns
hlt
sbb
out
inc
add
ja
mov
lods
in
xchg
adc
clc
mov
xchg
iret
mov
cmps
shl
mov
test
add
shl
ss
inc
in
stos
lds
xchg
icebp
pop
xchg
mov
pusha
sub
sti
push
jb
inc
lahf
inc
push
pop
cmp
mov
mov
scas
int
mov
fldenv
push
or
ds
mov
jbe
loope
xlat
lahf
cmc
inc
mov
push
movs
fisub
js
and
sub
or
ja
push
sbb
sbb
sub
cli
mov
retf
popf
mov
xor
and
inc
addr16
imul
cmp
jp
dec
xor
xchg
jecxz
ror
mov
in
(bad)
call
xchg
ret
mov
and
xor
and
jns
adc
pop
mov
in
out
mov
inc
arpl
dec
or
add
dec
adc
jmp
rcl
dec
pop
pop
loop
retf
daa
xchg
les
cmp
push
sbb
mov
add
ja
outs
xor
out
xchg
cmps
cmc
mov
retf
xchg
push
mov
and
or
inc
or
xor
lds
jp
pop
jecxz
inc
push
pop
in
stc
sahf
push
mov
or
xlat
repnz
or
sub
or
push
add
dec
or
adc
inc
cmp
sbb
inc
cmp
sub
fbld
loope
call
or
sub
ret
loop
stos
ret
mov
xlat
add
push
not
dec
mov
fwait
mov
fld
jno
jne
mov
sahf
fisttp
mov
lods
xchg
cmps
popf
clc
mov
arpl
mov
test
fwait
cmps
jnp
xchg
xchg
fiadd
sub
fisub
push
(bad)
lods
cld
mov
jl
jle
xor
daa
jne
jg
pop
cmp
cmp
sub
imul
mov
fwait
or
push
push
sbb
mov
test
fistp
mov
iret
mov
mov
fwait
aad
add
mov
sub
jo
pop
push
sub
imul
add
inc
rol
fimul
jbe
fiadd
stc
mov
push
inc
or
fcom
sub
pop
lahf
jp
pusha
sub
mov
cdq
sti
adc
xchg
pop
add
mov
mov
in
mov
sub
mov
fisttp
daa
pusha
mov
or
mov
push
pop
cs
fsub
pop
in
xlat
mov
mov
fs
lods
cli
ss
fsubr
pop
add
(bad)
sahf
jmp
ds
ror
je
gs
adc
adc
and
aas
test
xchg
icebp
mov
arpl
and
and
and
(bad)
mov
mov
push
add
xchg
shl
push
push
call
xor
mov
mov
fidivr
add
or
dec
test
nop
enter
jae
pop
cld
fisttp
mov
nop
movs
sbb
and
push
leave
add
mov
call
mov
inc
or
stc
mov
pop
add
push
cmp
jle
int
sti
lods
enter
adc
mov
scas
retf
xor
dec
sbb
mov
scas
in
test
mov
cmp
retf
xchg
fdivr
sub
mov
jecxz
frstor
and
mov
mov
nop
jmp
xor
stos
enter
inc
sub
push
or
ja
add
pop
test
imul
int
aad
ds
ja
popa
cli
mov
outs
sbb
xchg
idiv
imul
add
jl
jle
jbe
cmp
inc
add
dec
call
mov
and
pop
cmc
mov
xchg
retf
pop
sub
scas
aam
mov
cmp
and
jg
push
sbb
inc
pop
adc
mov
ror
aaa
daa
js
dec
minps
xor
sub
sub
mov
and
mov
xchg
xlat
movs
loope
loop
into
cmp
retf
ins
(bad)
sub
pop
sub
add
xchg
repnz
in
fistp
out
test
cmps
xor
mov
pop
sbb
call
ss
in
cli
stos
icebp
ins
mov
mov
push
dec
das
pop
sbb
or
addr16
jmp
cli
mov
leave
xchg
(bad)
jp
addr16
cld
pop
pop
xor
test
rol
push
adc
jbe
pop
std
mov
lods
cmc
mov
movs
xlat
pop
aad
test
scas
call
fistp
test
push
xor
pop
mov
xchg
mov
xchg
shl
dec
or
(bad)
popf
fcomp
lea
mov
xchg
aad
(bad)
daa
mov
mov
xchg
lds
cmps
in
xor
js
dec
adc
in
iret
ins
adc
sub
sub
jb
inc
xchg
in
stos
std
cmp
jge
push
out
int
je
inc
in
jbe
scas
jmp
outs
sbb
pop
pop
sub
ret
stos
repnz
mov
test
scas
lds
xchg
inc
call
and
cmp
pop
fdiv
or
xchg
stc
call
call
and
jp
das
and
mov
inc
jmp
sub
outs
push
mov
xor
aaa
jne
and
add
adc
xor
pop
scas
mov
pop
push
inc
in
div
and
jmp
dec
sbb
cmp
inc
mov
aaa
pop
fild
xor
xchg
test
not
sub
aad
test
mov
adc
push
mov
arpl
ds
push
fdivr
loop
shl
pop
out
fistp
shl
pop
or
push
and
jb
retf
lds
loop
enter
fsubp
mov
ror
rol
mov
aas
in
mov
sahf
les
ss
adc
sbb
jb
mov
ins
rol
dec
sub
jmp
mov
pushw
retf
or
sub
or
inc
cmp
les
scas
mov
das
int3
scas
jmp
pop
push
add
ss
add
cmp
scas
aam
push
jle
ss
sbb
scas
les
fbstp
pop
es
ret
mov
xchg
jmp
xor
cmps
out
cmp
nop
sub
or
pop
adc
inc
ror
daa
dec
adc
push
in
in
les
test
sub
sub
push
add
nop
(bad)
lods
out
cld
test
mov
mov
in
sahf
dec
sbb
js
dec
add
adc
sti
xchg
dec
xchg
ror
outs
mov
fstp
mov
outs
sbb
inc
pop
dec
inc
sbb
sub
aaa
xchg
retf
mov
xchg
iret
mov
mov
shl
hlt
add
cmc
mov
popf
xchg
and
mov
test
test
std
test
mov
movs
adc
push
adc
nop
std
mov
fmul
lock
adc
cmp
sub
push
movq
dec
cli
pusha
loope
mov
(bad)
bound
push
sbb
addr16
jbe
mov
sahf
or
aaa
jle
adc
dec
les
test
mov
stos
cdq
pushf
les
inc
sbb
or
retf
mov
in
int3
test
sbb
and
ds
dec
add
add
rcl
mov
sbb
pop
cmp
push
cdq
retf
dec
arpl
pop
add
jae
bound
inc
sub
pop
or
addr16
xchg
mov
aad
adc
adc
inc
lds
lods
call
movs
imul
and
lds
inc
fisub
xor
pop
repz
pop
clc
pop
adc
bound
add
sahf
lahf
jmp
or
xor
push
fnstenv
ret
push
adc
jae
push
aam
mov
icebp
je
sbb
sub
xor
or
mov
pop
sbb
sar
jno
mov
fist
hlt
ficomp
shl
inc
xor
dec
and
mov
(bad)
bound
push
sbb
addr16
jbe
mov
scas
loope
shr
in
inc
retf
sub
cmp
cli
jp
mov
test
test
xor
cmps
mov
or
aas
jnp
push
out
stos
mov
xor
adc
push
adc
cmp
add
sar
lahf
jmp
adc
scas
jno
loope
test
jnp
addr16
test
xchg
not
cld
mov
adc
movs
inc
(bad)
lds
outs
aaa
adc
or
pop
cmps
out
inc
inc
addr16
daa
jle
lahf
xlat
mov
lods
mov
aas
sbb
push
dec
shr
test
pop
and
add
pop
sti
stos
sbb
js
mov
mov
xchg
xchg
(bad)
mov
out
xlat
inc
iret
push
or
push
rcl
mov
call
mov
mov
xchg
iret
sub
or
imul
dec
(bad)
(bad)
xlat
(bad)
out
jmp
mov
ins
sub
cli
push
shl
int
iret
or
ins
sub
clc
outs
ficomp
ja
pop
xor
fistp
movs
adc
push
push
cmp
add
sbb
dec
pop
or
or
dec
int3
mov
dec
int3
jge
and
outs
imul
retf
xchg
enter
int
in
iret
mov
lock
add
sub
push
push
lahf
icebp
lods
icebp
lods
clc
mov
les
jne
push
out
push
xor
ss
lds
mov
out
push
pop
or
ja
push
rcr
ja
dec
push
adc
or
dec
les
into
cmps
sbb
add
je
push
pop
jle
imul
sub
push
or
jl
imul
jno
pop
sbb
push
dec
cmp
cdq
hlt
mov
test
jae
je
push
push
ja
sbb
xchg
enter
pop
push
xor
adc
xor
inc
xlat
xchg
mov
gs
loop
fisubr
push
fdivr
and
pop
or
pop
or
in
movs
idiv
add
push
xor
imul
jo
sub
inc
xor
dec
push
ins
and
inc
sbb
outs
sub
dec
cmp
push
pop
fs
sub
gs
push
pop
outs
push
jp
xor
push
adc
cmp
dec
rcr
mov
repz
(bad)
aaa
adc
repz
dec
sbb
cmp
int3
mov
lods
in
mov
mov
jmp
cli
mov
icebp
stos
leave
call
dec
ror
cmc
pushf
rcl
fstp
out
test
jmp
cli
mov
icebp
stos
leave
call
lock
cmp
loope
int
mov
mov
inc
les
push
pop
sbb
inc
cmps
aam
in
cmp
sub
jns
pop
fiadd
inc
ret
inc
or
cs
push
dec
pop
pop
ds
push
adc
sub
cmp
cmp
push
je
inc
aaa
outs
sub
cmp
adc
jne
dec
push
pop
ds
sbb
jnp
dec
adc
dec
sbb
lock
(bad)
in
movs
sbb
pusha
xor
jnp
movs
mov
xchg
fidiv
jge
add
sbb
pop
fst
fs
(bad)
out
add
pop
(bad)
xchg
mov
xchg
leave
inc
jmp
adc
bound
inc
cmp
inc
or
sub
push
add
inc
push
inc
or
push
or
dec
adc
inc
and
dec
or
arpl
inc
and
push
jbe
push
xor
mov
shr
xchg
into
xchg
pop
push
pop
push
add
sbb
pop
aam
mov
push
and
and
stc
dec
leave
mov
es
sbb
fild
mov
or
adc
dec
xor
push
push
ins
aas
jl
jge
jl
pop
sub
inc
add
das
ins
ds
push
cmp
outs
or
pop
sbb
push
es
dec
or
jl
popa
xor
mov
add
cmc
mov
sahf
mov
shl
das
or
jae
inc
call
repnz
aad
cmp
sbb
mov
das
and
jns
pushf
popf
lods
mov
fmul
loop
(bad)
leave
sub
fadd
(bad)
ret
sbb
jmp
retf
test
(bad)
mov
sti
mov
in
mov
cmp
ins
(bad)
nop
cld
(bad)
sub
jae
jp
or
imul
add
xchg
ficomp
add
sbb
pop
ret
sbb
imul
add
(bad)
into
push
fist
and
jns
push
stc
mov
or
push
dec
cmp
and
popa
cmp
push
inc
das
pusha
and
dec
or
dec
or
pop
sbb
jae
pop
sbb
nop
leave
mov
mov
xchg
sar
mov
les
xor
and
push
add
popa
push
sbb
loope
ror
jo
mov
ins
int3
pop
adc
adc
cmps
mov
outs
cmc
je
fnstcw
pop
adc
adc
dec
push
dec
add
pop
add
inc
sbb
dec
sub
inc
add
imul
sub
bound
jle
pusha
adc
jnp
push
dec
add
and
xchg
out
mov
xor
in
add
and
push
inc
add
jb
dec
pop
or
arpl
cwde
mov
das
arpl
jb
mov
shr
(bad)
leave
pop
fimul
pop
fld
imul
sbb
ins
add
outs
sbb
fs
or
outs
xor
inc
add
popa
adc
jl
dec
adc
or
or
cwde
lds
jo
fistp
add
dec
push
rcr
popf
xchg
lock
add
lods
loope
into
xchg
sbb
in
pop
cmp
outs
or
push
and
(bad)
mov
rcl
dec
push
jnp
push
push
add
imul
add
jo
push
sbb
bound
jb
jae
jb
push
and
cmp
jns
bound
jb
jle
inc
cmp
in
mov
push
dec
pop
das
int3
and
les
push
push
push
mov
xchg
xchg
int
cld
test
cld
mov
mov
mov
mov
xor
cmp
dec
push
inc
add
dec
push
or
jo
movs
test
call
mov
fdiv
rcl
(bad)
jmp
xchg
repnz
jmp
jmp
xor
retf
mov
push
jecxz
into
cmp
inc
sbb
jo
or
out
sti
in
jp
push
ja
mov
mov
dec
cmovg
outs
sub
sub
icebp
test
jp
push
adc
cmp
pop
fimul
mov
je
pop
and
(bad)
mov
call
(bad)
int3
scas
int
int3
xchg
call
fmul
mov
dec
add
mov
cmps
aad
and
sub
jge
jo
mov
pop
sbb
fwait
jmp
jecxz
repnz
dec
and
ja
pop
push
outs
pop
inc
lds
sahf
addr16
dec
add
xor
inc
int3
movs
test
lds
cmp
pop
in
push
loope
loope
test
pop
sbb
call
stos
loope
std
mov
clc
mov
out
mov
retf
mov
mov
mov
fsub
sub
ins
pop
cmp
sbb
inc
pop
jp
jo
jle
pop
push
sub
xor
inc
aas
lahf
cld
fst
sahf
pop
dec
add
inc
or
js
inc
pop
add
jl
or
xchg
mov
fwait
into
ror
loop
jecxz
loop
les
mov
mov
call
and
les
in
mov
test
mov
enter
lds
sbb
das
dec
cmp
ror
dec
adc
push
fs
adc
push
push
pop
fs
ins
cs
(bad)
scas
imul
call
mov
retf
push
and
pop
adc
pushf
out
mov
add
inc
add
push
adc
jnp
push
adc
pusha
das
inc
or
jb
bound
arpl
jae
pop
sbb
jb
adc
js
pushf
stc
(bad)
jnp
pop
pushf
imul
jp
jp
pop
jge
mov
push
add
cs
movs
xchg
xchg
sbb
or
cmps
or
or
xor
pop
fst
mov
movs
xchg
leave
js
imul
sbb
sub
test
xchg
dec
ror
hlt
popf
rcl
fidivr
out
test
add
jmp
dec
or
jge
in
stos
inc
(bad)
mov
movs
sar
mov
mov
ror
(bad)
add
push
aad
stc
xchg
call
retf
dec
and
adc
ficomp
ret
dec
pop
outs
outs
packuswb
pop
xor
pop
cs
push
inc
add
push
pop
pop
push
fs
je
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
outs
es
push
add
push
cmovo
push
add
test
inc
xor
rol
call
xchg
icebp
lods
clc
mov
mov
mov
xchg
into
lods
clc
test
push
sub
dec
xor
or
push
push
push
ins
pop
fstp
loope
mov
mov
mov
lahf
fsubr
(bad)
mov
scas
in
mov
xchg
cmps
les
aam
(bad)
mov
lds
(bad)
mov
dec
pop
cmp
fwait
div
clc
ficomp
out
sbb
add
jae
bound
jno
jbe
push
push
ja
addr16
addr16
inc
and
push
pop
outs
push
jp
pusha
push
pusha
imul
inc
pop
or
stos
ret
fistp
je
jne
pop
sbb
dec
pop
inc
push
jl
ins
(bad)
sub
cmp
push
adc
aas
jl
ins
cmovo
and
dec
or
inc
sub
inc
ss
pop
sbb
dec
pop
inc
push
jl
ins
(bad)
in
stos
in
daa
dec
cmp
xlat
xchg
in
jg
ins
pop
test
mov
stos
leave
mov
sub
(bad)
lahf
in
scas
int
(bad)
xchg
xchg
fnstenv
add
pop
dec
and
dec
cmp
or
push
inc
push
gs
ja
addr16
and
std
mov
mov
inc
sub
push
adc
stos
sbb
in
ror
push
adc
and
pop
lds
dec
mov
gs
xor
dec
retf
sub
psubw
psubsw
je
imul
dec
enter
xchg
call
add
gs
mov
inc
leave
cmp
push
cmps
mov
sub
out
add
jecxz
or
in
push
and
jno
fwait
xchg
div
xor
pop
mov
aam
clc
sub
dec
test
adc
dec
sti
push
test
and
and
dec
cmp
jno
push
push
ja
in
mov
xchg
xchg
push
(bad)
or
push
les
adc
ja
pop
cld
jnp
xchg
dec
mov
mov
jle
mov
push
in
movs
fmul
xchg
stos
leave
imul
cdq
jg
xor
pop
repnz
xor
sub
pop
mov
cmp
jg
inc
leave
dec
dec
xor
lods
jge
mov
lods
out
popf
lds
inc
enter
loopne
(bad)
in
pop
sbb
push
jne
mov
mov
in
push
push
(bad)
pushf
jno
cli
cwde
jge
in
cmp
fstp
sahf
rol
pop
fmul
sahf
aad
leave
(bad)
repz
das
(bad)
xor
xor
dec
pop
das
pop
cld
xchg
addr16
ins
fcom
pop
test
fisttp
ins
shl
clc
and
lock
lds
sub
ja
sub
das
jmp
push
add
jecxz
adc
dec
rcr
fnsave
sbb
fld
sti
add
iret
cmp
mov
sahf
mov
rol
loop
fisub
jmp
test
mov
ins
(bad)
pop
in
mov
xchg
(bad)
popa
cld
cmp
xor
int
sti
add
add
int
sub
das
out
fcomp
xchg
lds
aas
dec
cli
xchg
mov
mov
mov
sub
xor
pop
mov
inc
fnstcw
xchg
mov
lahf
test
adc
and
inc
aaa
pop
adc
pop
sti
adc
and
add
and
cli
add
lods
mov
outs
jmp
sub
push
jmp
sub
add
icebp
js
nop
ror
adc
dec
icebp
push
mov
inc
cmc
daa
push
hlt
jmpw
jne
xor
xor
push
mul
xor
out
sbb
(bad)
or
or
and
cdq
addr16
popa
(bad)
jp
call
je
ins
maxps
jg
pop
sbb
cmp
push
daa
push
mov
call
adc
push
xor
outs
rcl
fwait
jb
mov
mov
inc
adc
lock
adc
pop
jmp
ret
sti
popf
mov
push
lods
jle
xchg
inc
out
cmp
and
push
add
add
xlat
xchg
not
inc
scas
cwde
fstp
pushf
push
lods
xchg
popf
test
mov
mov
sbb
push
jmp
and
ss
rcpps
cs
push
std
das
push
(bad)
and
je
call
add
pusha
and
jo
jge
outs
sub
pop
cli
pop
xchg
jno
and
cmp
clc
add
sub
add
outs
sbb
dec
mov
cmps
out
xor
mov
mov
retf
pushf
fild
lods
cli
mov
xchg
int3
lods
(bad)
mov
fild
cmps
aad
jb
(bad)
jmp
int
mov
aad
sar
test
cwde
and
out
mov
cmps
hlt
xchg
fdiv
div
repnz
jmp
fild
cld
xchg
ficomp
shr
mov
mov
enter
out
loope
jmp
jae
imul
cmovo
inc
push
lahf
retf
rcl
adc
pop
push
jns
inc
das
popa
pop
add
jno
adc
add
jo
mov
mov
jmp
out
mov
xchg
fnsave
inc
pop
cmp
xor
inc
into
xchg
mov
daa
ss
out
scas
(bad)
ficom
inc
cmp
push
rol
fnstcw
sub
sub
mov
stos
addr16
adc
or
or
out
into
scas
mov
mov
outs
imul
(bad)
sub
push
ins
pop
jb
push
call
or
push
push
or
push
jno
push
pop
inc
pop
push
inc
push
sub
mov
xchg
sbb
jb
jae
adc
jg
outs
retf
shr
jecxz
dec
gs
pop
(bad)
push
xor
pop
cmp
cmp
in
xchg
scas
mov
(bad)
out
dec
pop
sub
and
dec
int
std
mov
fnstenv
inc
sbb
sub
inc
outs
addr16
fld
mov
nop
mov
or
dec
or
pop
sub
out
jae
(bad)
aam
fnstenv
jb
pop
sbb
pop
xor
or
jge
mov
adc
cmp
sbb
push
cmp
add
sbb
adc
inc
cmp
imul
(bad)
pop
xlat
push
xor
adc
ret
mov
js
push
or
and
adc
dec
sub
dec
add
pop
add
inc
sbb
inc
push
or
ja
mov
fistp
add
into
mov
mov
mov
mov
jmp
div
repnz
mov
call
je
jo
jbe
sahf
fmul
inc
aaa
sub
pop
repnz
dec
jmp
xor
cmps
aam
iret
popf
fistp
scas
std
mov
hlt
cwde
call
mov
popf
aad
rep
repz
retf
adc
adc
inc
ret
mov
(bad)
push
iret
dec
sub
or
push
outs
aaa
ja
jbe
ja
push
and
dec
(bad)
and
xor
jge
ins
cmp
jp
push
je
mov
fwait
loop
loope
mov
(bad)
bound
push
sbb
addr16
jbe
mov
push
add
push
xor
pop
sbb
jno
push
xor
js
push
dec
adc
jp
loope
push
int3
lahf
fbstp
into
test
movs
(bad)
mov
fimul
adc
add
jg
dec
daa
pusha
daa
ins
add
outs
sbb
sub
aaa
gs
inc
or
sahf
(bad)
lahf
and
pop
fdiv
jl
(bad)
pop
push
je
xchg
iret
(bad)
xor
ins
and
nop
xchg
repz
out
fild
xor
push
(bad)
ds
jl
jge
pop
sub
movq
dec
or
fnstcw
icebp
mov
(bad)
fwait
sbb
jo
jae
inc
cmp
inc
aam
hlt
mov
test
jae
inc
sbb
inc
pop
push
ss
pop
sbb
and
xor
das
arpl
fistp
addr16
inc
imul
inc
rcl
pop
hlt
inc
add
xor
pop
enter
and
pop
inc
pop
fs
inc
pop
dec
and
dec
cmp
or
pop
inc
xor
adc
push
adc
push
pop
adc
dec
or
add
shl
(bad)
(bad)
out
xchg
mov
(bad)
imul
jmp
xchg
push
fstp
std
(bad)
retf
mov
fstp
enter
fnstcw
out
call
sub
stc
ins
and
push
or
cmp
push
sbb
ror
inc
cld
mov
xlat
lea
stc
sahf
aam
enter
test
mov
jmp
fild
sbb
and
jmp
(bad)
mov
out
imul
in
test
mov
xchg
ror
std
sahf
ror
push
je
dec
push
dec
or
jb
outs
aaa
dec
push
dec
das
inc
cmp
dec
aaa
push
jnp
jnp
fwait
ret
mov
or
imul
pop
push
push
adc
cmp
pop
pop
adc
pop
xor
inc
aas
lahf
mul
cmp
dec
pop
dec
xor
ins
pop
xor
pushf
icebp
fmul
mov
(bad)
les
lods
jmp
mov
(bad)
movs
lock
push
add
in
out
pop
cmps
repnz
hlt
mov
pop
mov
iret
mov
outs
sub
xor
lds
je
inc
or
pop
or
and
fld
dec
stc
mov
lahf
ins
repnz
push
add
cdq
fmul
xchg
retf
js
mov
lahf
sar
enter
lods
leave
sahf
(bad)
cdq
scas
repz
jle
and
loop
lock
retf
shr
and
loope
loope
jmp
aas
dec
pop
loop
jmp
fisttp
sahf
mov
ins
ret
mov
data16
jmp
inc
aad
hlt
mov
ret
out
sbb
jle
(bad)
jl
outs
add
push
shr
xor
add
clc
lahf
(bad)
pop
xchg
mov
and
pop
int3
adc
daa
inc
(bad)
(bad)
mov
pop
adc
dec
jmp
sbb
es
sub
and
adc
mov
mov
scas
ret
mov
xchg
retf
ficomp
xchg
jge
push
aaa
outs
sub
push
adc
sub
sbb
pop
mov
in
test
test
mov
xor
push
or
xor
icebp
add
nop
ror
test
int3
sahf
aam
icebp
push
adc
je
xlat
aaa
dec
in
or
add
pop
pop
jle
scas
int3
inc
sbb
add
sbb
mov
pop
lods
jmp
pusha
or
dec
or
aas
mov
test
xor
push
adc
stos
out
xchg
push
adc
dec
enter
mov
(bad)
rcl
dec
adc
mov
lods
xchg
fistp
jmp
ds
xchg
mov
mov
nop
repnz
xchg
sti
mov
pop
out
xchg
stos
inc
in
cmc
xchg
mov
xchg
hlt
xchg
rcr
dec
pop
inc
in
sbb
cli
cdq
shl
ins
aaa
aaa
bound
mov
inc
xor
dec
or
add
adc
and
pop
test
popa
fiadd
sar
and
sbb
xor
pop
add
push
ret
mov
xchg
pop
or
sub
repz
scas
ficomp
adc
gs
pop
lds
adc
pop
rcl
(bad)
xchg
movs
movs
loop
inc
dec
or
enter
xor
shl
xchg
mov
pushf
test
lods
(bad)
out
and
std
enter
cmp
inc
xor
pop
push
xor
adc
(bad)
inc
push
dec
or
iret
outs
in
aad
and
movs
dec
push
adc
std
cdq
cmps
(bad)
xchg
mov
mov
ins
add
movs
mov
jns
cdq
lock
or
push
or
in
popf
iret
xchg
fidivr
nop
mov
mov
sbb
pop
mov
outs
jns
lds
inc
push
sbb
adc
mov
dec
sbb
aaa
std
pusha
das
push
dec
inc
adc
stos
mov
loope
int
mov
mov
fsub
push
lods
test
fisubr
ja
pop
xor
pop
in
cmps
jmp
test
fisttp
sahf
les
cmc
lods
lds
inc
and
fldcw
xchg
sar
cwde
out
mov
xor
or
inc
mov
xchg
aad
popa
jl
sbb
push
inc
add
in
iret
(bad)
hlt
popa
or
pop
or
add
and
outs
movs
in
pop
cmp
hlt
and
push
aas
pop
sbb
jno
xchg
fiadd
dec
sbb
ins
and
mov
scas
mov
lahf
dec
cmp
adc
sub
repnz
int3
mov
mov
xchg
dec
call
lahf
cmps
out
and
inc
out
xlat
(bad)
scas
cli
aas
xor
adc
push
xadd
cmps
(bad)
xchg
scas
mov
mov
jo
push
jmp
(bad)
and
push
stos
hlt
mov
scas
cmp
jmp
mov
stc
bound
in
ja
test
add
fistp
les
jecxz
scas
sbb
ret
push
sbb
ins
xor
or
mov
pop
inc
sbb
scas
cld
mov
fadd
sbb
jmp
rcl
(bad)
mov
xchg
call
pop
out
clc
jo
add
jge
and
push
test
adc
pop
lds
dec
cmp
pop
out
xor
into
sub
xor
(bad)
lods
hlt
xchg
fistp
or
int3
pusha
out
iret
and
dec
cdq
rcl
and
scas
jp
mov
and
cmp
not
nop
retf
xchg
lds
fistp
imul
add
mov
cs
or
mov
bound
add
pop
loopne
jb
jmp
lahf
mov
push
and
outs
pop
inc
test
and
call
pop
adc
test
packuswb
or
jo
mov
idiv
pop
out
nop
fidivr
xchg
cmps
cmc
test
arpl
int3
lahf
cmps
push
fiadd
pop
ins
cmp
and
ss
jbe
mov
adc
mov
dec
or
cwde
lods
call
ret
out
and
lods
cmp
pop
adc
addr16
push
jl
dec
push
stos
ret
mov
cmc
cmp
mov
mov
cdq
not
xchg
shr
mov
nop
test
test
inc
push
dec
or
push
pop
mov
sti
cmp
aad
xlat
pop
loop
in
cmp
lock
push
or
add
outs
add
imul
popa
out
adc
mov
outs
adc
dec
sub
sub
dec
adc
(bad)
in
fld
fidivr
jnp
js
jl
int
pop
not
pop
loop
loop
push
call
pop
jmp
lahf
lds
cli
mov
lds
arpl
dec
or
adc
push
sbb
and
sbb
push
sbb
jno
sbb
jns
data16
jp
aam
jmp
add
mov
mov
mov
push
or
nop
out
mov
test
mov
add
aad
mov
fsubr
popf
sbb
inc
jmp
lods
sar
and
jg
imul
mov
std
mov
xor
push
inc
and
push
sub
pop
cmp
or
pop
inc
add
in
dec
or
cmp
dec
aaa
jno
mov
pop
push
ins
xor
dec
jl
xor
inc
add
mov
addr16
fimul
adc
or
sub
jnp
push
cmp
test
popf
(bad)
popf
inc
xchg
les
or
xor
inc
or
adc
dec
sbb
es
aaa
in
aam
repz
xchg
call
sbb
pop
adc
dec
loope
and
sbb
gs
xchg
mov
cmps
les
imul
arpl
or
pop
pop
push
and
jo
add
dec
cs
call
loop
aad
(bad)
mov
in
fidiv
shr
or
mov
stc
ins
sub
xchg
frstor
mov
dec
cs
(bad)
popf
fld
xor
mov
mov
cwde
fmul
push
pop
cmp
mov
addr16
mov
xchg
fld
inc
sub
jmp
pop
xor
or
mov
mov
mov
(bad)
stos
mov
xchg
fst
outs
mov
and
and
cmc
mov
jp
push
xchg
push
test
outs
cmp
cmps
(bad)
call
outs
and
fimul
rcl
pop
or
pop
lock
in
inc
ds
arpl
jl
test
add
inc
es
pop
mov
cmp
mov
(bad)
rol
push
xor
shl
add
dec
cmc
mov
aas
sub
dec
icebp
sub
jae
inc
xchg
hlt
xchg
mov
fimul
outs
aaa
stos
jmp
pop
rsqrtps
xor
push
mov
mov
xor
loopne
xlat
pushf
mov
es
ret
jae
movs
repnz
push
jecxz
cli
test
mov
jns
cs
pop
loopne
sti
sbb
adc
loop
out
scas
iret
xor
jns
jae
pop
xchg
dec
sub
pop
xchg
popf
les
bound
dec
sqrtps
cli
rcl
adc
cmps
push
push
cmps
lods
adc
jns
jno
lock
enter
mov
and
outs
push
sbb
aas
and
es
adc
inc
or
cmp
xor
das
inc
jmp
(bad)
mov
data16
sahf
js
mov
jmp
jbe
and
retf
inc
shl
pusha
das
jne
push
std
pop
add
ret
in
inc
cmp
sub
inc
or
mov
enter
mov
std
imul
inc
or
push
out
sbb
ret
xor
(bad)
sub
cmp
sbb
or
dec
lock
mov
push
or
ficomp
sub
adc
xor
push
hlt
cmp
call
xor
cmp
stc
mov
jns
stos
stc
lods
rcr
int3
mov
pop
or
push
fldcw
dec
push
dec
xor
stc
bound
sub
and
iret
mov
mov
and
pop
sbb
stos
fstp
leave
xchg
test
out
mov
sbb
pop
push
ins
xor
or
daa
jle
cmp
inc
sar
pop
pop
pop
in
cdq
jge
xchg
test
cli
mov
xchg
pushf
outs
retf
stos
fisttp
leave
ins
adc
xor
dec
mov
sub
mov
sbb
pushf
cli
mov
fwait
test
mov
sahf
retf
xchg
jno
add
test
push
and
jg
and
in
cmps
cld
call
mov
and
or
push
mov
sbb
mov
hlt
dec
adc
dec
adc
popa
xor
cmp
push
clc
mov
je
in
jo
push
xchg
(bad)
es
xchg
loopne
or
and
lods
(bad)
test
(bad)
in
stos
ins
cdq
fs
int3
or
jae
pop
adc
mov
push
call
cmp
leave
cmp
adc
fiadd
pop
fimul
call
enter
cmp
mov
add
ds
es
test
push
cli
sahf
fnsave
sub
icebp
mov
out
stos
scas
and
aaa
dec
repz
xchg
mov
pusha
push
clc
dec
xor
sbb
inc
in
(bad)
mov
cdq
fsub
(bad)
scas
loope
push
pop
(bad)
pop
cmp
pop
adc
dec
adc
xchg
retf
fdivr
cmp
dec
sub
push
sbb
test
cwde
rol
shl
not
rol
xchg
shl
sub
add
push
pop
add
xchg
mov
dec
mov
xor
push
in
inc
repz
mov
test
lods
cmps
jmp
mov
rcl
sbb
inc
and
stc
mov
push
push
sub
add
stos
in
test
pop
iret
mov
test
cmps
lahf
inc
push
bound
rol
jnp
push
mov
cld
test
and
jnp
(bad)
retf
scas
fld
cmp
pop
call
rcr
(bad)
jae
das
ins
adc
mov
mov
movs
jmp
repnz
mov
sbb
inc
add
mov
ds
cmp
sub
mov
enter
sbb
xchg
stc
stos
cmc
addr16
iret
dec
or
push
sub
xor
inc
pop
pusha
fisub
inc
(bad)
adc
popa
scas
test
mov
xor
inc
fst
adc
out
sub
rol
and
add
xchg
ror
gs
addr16
cmp
inc
cmp
pop
dec
mov
cld
xchg
mov
popa
leave
cmp
(bad)
imul
loopne
scas
sbb
fst
xor
loopne
xchg
les
mov
pop
pushf
les
push
or
shr
(bad)
outs
in
mov
jmp
lods
xlat
test
mov
aas
push
(bad)
rol
xchg
(bad)
scas
out
xchg
fnstcw
mov
mov
popf
clc
(bad)
rcr
cmp
aaa
pop
loope
aas
inc
es
pop
jno
push
or
inc
neg
xor
push
sti
movs
cld
mov
or
push
sbb
pop
std
add
test
pop
jo
ins
rcl
push
xor
imul
mov
xchg
repz
jno
es
lds
inc
loope
int
cmps
rol
xchg
fild
sbb
mov
fnstcw
aad
sub
shl
sub
sbb
push
jne
imul
les
popa
adc
cs
ret
sub
mov
xor
inc
and
out
mov
xchg
rol
cs
and
xor
cmp
sub
rcl
lahf
rcr
mov
xchg
out
call
rcr
jnp
xchg
sar
or
js
js
das
dec
adc
(bad)
xchg
cmc
mov
adc
jge
fistp
push
cs
adc
addr16
and
fs
xchg
out
mov
mov
dec
adc
add
jnp
es
in
xor
add
add
popa
xchg
cmp
daa
retf
dec
pop
inc
add
mov
push
pop
mov
ficomp
adc
loope
fstp
mov
cmps
jmp
les
xor
pop
nop
xchg
in
scas
fld
je
push
sti
inc
cli
arpl
jno
pop
pop
gs
out
bound
sub
test
and
inc
sbb
cwde
fild
dec
out
idiv
xor
and
in
or
test
xor
add
les
xchg
sar
mov
jp
test
or
imul
in
add
jmp
jne
imul
or
cmps
int
fldcw
pop
in
and
outs
retf
cli
lods
out
xchg
xchg
int
adc
jb
pop
cmp
mov
cmp
test
mov
and
and
enter
jle
mov
nop
push
sti
mov
xchg
cmc
popf
dec
mov
scas
movs
repz
cli
xchg
leave
xchg
jnp
lods
loop
pop
retf
cdq
sti
mov
mov
adc
push
sub
pop
sbb
push
dec
sub
sub
adc
xchg
cmc
xchg
inc
mov
test
sub
and
test
xchg
xlat
cdq
fisubr
jmp
or
xchg
mov
pop
aad
icebp
cmps
imul
cmp
sbb
inc
push
dec
mov
fild
aam
jg
scas
int3
gs
push
stos
(bad)
mov
xor
and
and
call
mov
sub
je
je
jnp
push
aaa
dec
loop
repnz
xchg
shl
js
sbb
xchg
dec
ret
xchg
jl
lds
xor
cmc
xchg
shl
xor
clc
xchg
retf
xchg
aad
add
cdq
ficomp
mov
xchg
jecxz
fs
pop
sub
es
(bad)
inc
adc
inc
loop
test
iret
nop
fidiv
xchg
xchg
pop
in
cli
sbb
es
push
jmp
repz
and
push
jle
dec
sbb
pusha
or
pop
xor
push
add
lds
leave
(bad)
out
movs
hlt
xchg
(bad)
mov
dec
jmp
(bad)
push
imul
(bad)
jmp
and
cmp
sbb
pop
out
aas
pop
adc
xchg
int3
(bad)
mov
sub
outs
and
js
xchg
jae
inc
loop
movs
hlt
outs
mov
inc
adc
push
aas
push
leave
pusha
and
dec
push
inc
in
scas
not
pop
sub
pop
pop
cs
fstcw
jp
mov
fwait
jp
inc
push
daa
mov
mov
pushf
loope
movs
div
hlt
mov
cdq
fimul
and
pop
add
jle
(bad)
dec
xor
sub
ss
push
pop
sbb
test
add
sub
in
or
push
and
and
ins
daa
push
xor
loopne
dec
pop
push
and
xor
shr
jecxz
into
xchg
fsub
pusha
xor
mov
dec
push
inc
sub
out
call
scas
into
sub
fs
loop
pop
push
in
dec
adc
jno
cdq
mov
popa
mov
cmp
cmp
dec
cmp
sub
and
push
sar
fidiv
jb
imul
pop
adc
outs
xor
pop
imul
int3
cs
nop
enter
sbb
ror
xor
loopne
jmp
lahf
pop
sar
add
jae
dec
adc
and
aas
inc
or
pushf
aad
mov
aas
cmp
adc
push
jae
imul
and
jno
push
xchg
add
inc
pop
iret
cmp
sub
ret
cmp
push
xor
jae
aaa
enter
push
cli
mov
jecxz
dec
push
push
test
or
jns
popa
leave
dec
push
and
push
add
jle
jbe
imul
jp
inc
pop
pop
lods
and
add
das
pop
out
cmp
inc
pop
jns
stos
shl
dec
or
xor
inc
adc
inc
sub
cli
inc
jecxz
fisubr
cmp
inc
or
xchg
pushf
int
stc
mov
loopne
jmp
push
out
lds
jg
jle
pusha
paddusb
jg
pop
push
dec
or
(bad)
gs
or
dec
inc
js
adc
pop
pop
push
pop
ds
lods
out
lods
neg
aad
sar
daa
pop
dec
or
mov
mov
icebp
nop
fstp
arpl
sub
jecxz
fimul
jge
cmp
xor
inc
fsubr
ja
daa
int
xor
pusha
lea
dec
or
aas
jecxz
inc
and
cmp
cs
int3
dec
adc
inc
orps
or
cs
sbb
jo
dec
retf
inc
push
xor
and
pop
dec
push
jae
jns
daa
aas
push
out
mov
pop
add
inc
fadd
jle
adc
mov
mov
fcomp
jnp
mov
push
pushf
jno
or
out
scas
(bad)
out
xchg
mov
jmp
mov
lods
hlt
popa
pop
mov
and
outs
sub
fdivr
jge
and
sub
pop
aaa
loop
(bad)
xchg
repz
test
mov
inc
add
or
and
add
dec
and
inc
call
or
es
(bad)
xchg
out
sbb
push
imul
in
adc
or
jnp
dec
adc
inc
and
push
or
inc
and
addr16
push
clc
mov
xchg
rol
and
pop
sbb
sbb
dec
cmp
and
popa
cmp
push
icebp
hlt
xchg
les
and
jns
push
adc
jp
push
cmp
clc
mov
fstp
mov
fistp
loopne
stc
fwait
pop
in
in
repz
enter
jecxz
clc
fwait
aam
les
test
cmps
loopne
lods
fstp
fnstcw
imul
mov
mov
inc
es
daa
ins
add
ins
push
pop
arpl
in
mov
(bad)
out
mov
(bad)
(bad)
stos
fistp
add
cmp
push
mov
mov
neg
or
pop
cld
mov
cli
mov
mov
arpl
xchg
ret
pop
cmp
xor
dec
or
or
sub
mov
xchg
retf
dec
push
mov
xchg
fucom
mov
(bad)
mov
sub
pop
pop
je
inc
xchg
mov
hlt
mov
imul
rcl
sbb
xor
mov
test
lods
xchg
push
loopne
iret
pop
mov
movs
int
inc
mul
push
bnd
and
ins
sub
mov
test
mov
or
outs
sub
cmp
les
test
sbb
mov
xchg
push
add
enter
or
mov
xchg
pop
push
sbb
push
push
dec
pop
sahf
std
pop
add
push
outs
and
cmp
dec
shr
mov
addr16
mov
mov
cmp
xor
pop
sub
out
mov
or
pushf
ficomp
ja
mov
xchg
fst
and
cs
test
test
mov
ret
cdq
jmp
movs
mov
pushf
cmc
(bad)
mov
mov
pop
in
sub
sub
inc
inc
xor
mov
(bad)
in
mov
ror
aad
loope
fild
in
repnz
pop
xor
xchg
(bad)
mov
mov
outs
add
mov
stc
stos
jmp
(bad)
cdq
clc
stos
cmps
adc
fstp
sub
or
add
inc
and
mov
mov
imul
xchg
cli
mov
es
push
dec
or
adc
xchg
clc
test
lods
or
sbb
repz
mov
in
out
out
sub
scas
out
ds
int
xlat
xchg
loopne
(bad)
mov
xlat
jb
pushf
cmps
lds
sbb
(bad)
fcom
jg
pop
add
xor
int
int3
iret
mov
sahf
mov
pusha
jns
adc
arpl
stc
xor
mov
repnz
jae
mov
mov
pop
adc
push
dec
pop
add
adc
(bad)
(bad)
repz
div
mov
pop
pop
out
mov
mov
xor
pop
mov
ins
movs
cmp
fstp
jp
out
and
mov
sub
bound
jne
mov
(bad)
push
jns
aad
sub
test
daa
push
cmp
cdq
ret
xchg
mov
fcom
jl
in
pop
sbb
ss
scas
xchg
call
push
mov
clc
xchg
cmc
je
inc
push
jmp
inc
sub
mov
mov
sbb
push
jmp
or
jnp
popa
ror
rol
cmp
nop
rol
push
add
dec
sbb
call
retf
(bad)
jp
gs
mov
arpl
xchg
sar
retf
popa
xor
and
xor
test
lods
into
ficomp
jge
out
sbb
pop
inc
rcl
sub
not
mov
(bad)
adc
pop
adc
push
mov
repz
xor
xor
scas
(bad)
mov
or
xor
into
shr
pop
into
inc
loopne
clc
mov
adc
mov
add
cmp
ds
adc
xchg
jle
xchg
lahf
rcl
js
int
ror
mov
test
mov
pop
add
adc
retf
pop
cmp
mov
pusha
sub
adc
push
out
adc
and
and
sbb
mov
lods
call
and
dec
sub
mov
mov
call
pop
mov
dec
add
pop
xlat
xchg
lahf
mov
out
mov
adc
push
(bad)
mov
xor
popf
iret
xor
sbb
ja
(bad)
pop
add
lds
test
mov
gs
mov
lds
movs
add
mov
pushf
sar
ret
xchg
repnz
ficom
iret
sahf
les
in
ror
adc
inc
sbb
sti
(bad)
into
out
cld
lahf
pop
xor
ret
fs
je
sbb
fidiv
shl
adc
(bad)
mov
sti
lea
xor
ins
and
dec
stc
xchg
mov
and
scas
mov
cs
push
sbb
and
mov
mov
loop
les
inc
or
jno
push
(bad)
stos
pop
out
retf
(bad)
int
cs
mov
das
leave
inc
mov
mov
and
add
push
cmp
daa
pop
xor
mov
aad
or
in
mov
popa
xor
inc
and
cmp
fistp
add
sbb
test
pop
mov
push
add
sub
jl
jbe
cmp
test
cdq
fisttp
and
dec
add
dec
jle
sub
adc
cmps
mov
pop
dec
(bad)
or
mov
xchg
pusha
daa
cmovae
and
jmp
xchg
aad
cs
mov
(bad)
mov
sub
ds
cmp
xchg
rcr
retf
mov
repnz
into
pop
and
arpl
push
dec
or
std
push
sub
lea
mov
(bad)
daa
out
cwde
sbb
sbb
lock
jns
pop
cmp
frstor
out
popf
pop
sub
cwde
ret
mov
daa
inc
add
ret
and
outs
aaa
mov
cdq
fdivr
ins
or
ds
les
pop
push
aaa
inc
pop
jae
icebp
mov
mov
fidivr
mov
les
lods
push
push
xor
jmp
add
cmp
mov
dec
sub
jmp
into
ret
ss
(bad)
xchg
mul
and
cmp
mov
and
cmp
xor
lods
into
sbb
cmp
dec
fbstp
in
shl
sahf
fidiv
jne
dec
das
imul
xchg
rol
and
sbb
pushf
mul
fs
imul
push
clc
mov
mov
dec
sub
push
sbb
push
xor
xchg
aad
jb
cmc
mov
cmp
sbb
pop
or
adc
mov
and
ss
mov
xchg
pusha
xor
stc
mov
movs
push
xor
mov
inc
adc
or
nop
xchg
rcl
push
jmp
rcl
loop
or
test
mov
dec
or
fistp
cli
mov
repnz
sidtd
push
out
popf
lds
inc
push
push
pop
aaa
jge
jmp
ins
mov
mov
inc
xor
call
jg
out
dec
jmp
sub
out
lods
movs
mov
movs
out
mov
jmp
xlat
je
pop
mov
adc
aaa
inc
and
xchg
leave
jle
inc
and
inc
sbb
cmp
and
add
js
mov
test
adc
ret
xor
xchg
mov
jg
(bad)
outs
in
or
pop
xor
mov
xchg
sti
scas
xor
xchg
xchg
clc
sub
lahf
dec
jecxz
fild
popa
or
arpl
imul
pop
fadd
xor
push
mov
xor
test
scas
jbe
(bad)
sub
in
inc
adc
push
adc
cmc
and
xor
adc
inc
adc
pop
(bad)
push
pop
add
sbb
js
adc
push
adc
rcr
data16
xchg
repnz
or
inc
sbb
les
cmps
ja
icebp
mov
xor
mov
shr
mov
sub
call
cmp
sti
cdq
cwde
popf
iret
lea
xchg
stc
clc
mov
mov
add
loopne
repnz
test
add
dec
add
cmps
inc
add
push
or
xchg
aad
or
and
fs
in
fcomp
rcl
or
push
jp
mov
fcomp
mov
pop
push
fs
lods
fist
push
imul
mov
ja
scas
movs
les
or
pop
sbb
lahf
add
pop
and
shl
sbb
addr16
dec
inc
xor
mov
stos
(bad)
xor
pop
stos
dec
add
pop
test
outs
sahf
fcomp
les
push
add
icebp
adc
fsub
xchg
ror
jno
mov
push
retf
ja
inc
mov
jmp
cmp
inc
adc
mov
pop
xchg
and
mov
xor
push
scas
call
cld
mov
push
xor
cs
shl
arpl
std
ins
stos
dec
loopne
stos
cmps
(bad)
nop
xchg
sub
inc
add
xor
clc
mov
gs
adc
cmp
mov
imul
xor
popf
sar
or
dec
sub
in
leave
iret
mov
mov
retf
xor
pusha
xor
cmp
or
sub
fist
push
pop
out
sbb
inc
xor
movs
fnsave
ins
push
sbb
dec
lds
inc
xchg
adc
ror
out
sti
test
mov
scas
cmp
push
sub
std
mov
dec
or
shl
mov
or
cmp
outs
ss
and
jge
out
and
imul
aaa
inc
test
mov
in
call
or
add
fs
inc
jnp
mov
test
scas
in
ror
sub
mov
xchg
or
mov
sti
std
mov
sub
or
lahf
(bad)
lahf
fdivr
jge
xor
push
mov
ja
inc
and
cmp
(bad)
out
adc
mov
mov
es
pop
or
jl
and
xchg
neg
ins
sti
xchg
cld
mov
xchg
les
arpl
xor
mov
ins
or
mov
push
and
hlt
mov
inc
test
scas
fisttp
pop
adc
cmp
xchg
(bad)
lods
(bad)
jae
jle
sti
loope
push
push
adc
aaa
ins
cmp
mov
xchg
in
movs
int
add
cs
dec
sub
push
and
cs
dec
or
test
mov
pusha
add
mov
mov
add
inc
push
fcom
cmp
cmp
pop
or
mov
add
cmps
cmc
mov
in
popf
test
mov
mov
mul
into
ja
inc
dec
sub
inc
loopne
std
jmp
add
aaa
jno
inc
in
ffree
sbb
xchg
ss
imul
mov
dec
adc
clc
lock
jl
pop
adc
gs
mov
or
push
cmps
les
xor
dec
or
imul
jge
jnp
jp
or
xlat
add
adc
push
pop
inc
or
mov
pop
cmp
arpl
stos
aam
in
into
into
mov
cmps
call
pop
out
stos
leave
pop
pop
sbb
in
xchg
pop
and
cmovge
jae
fld
nop
ret
sub
das
daa
push
and
jmp
and
xor
add
leave
ret
call
mov
movs
cld
sahf
pop
push
xchg
sar
sbb
sub
(bad)
mov
in
mov
pop
fiadd
das
jmp
das
jge
call
mov
arpl
mov
ds
in
scas
mov
gs
xchg
push
jno
xchg
aad
js
sub
and
movs
cld
je
jmp
shl
jecxz
jp
add
aas
cld
mov
mov
push
xchg
add
dec
push
add
stc
mov
sbb
pop
popa
cs
add
repnz
push
xor
les
xor
aaa
push
add
pop
(bad)
xchg
xchg
mov
loopne
jo
push
pop
jmp
cmps
std
lahf
inc
ror
and
cdq
shl
test
jmp
test
icebp
mov
leave
sbb
test
dec
test
scas
or
sub
(bad)
mov
stos
idiv
pop
xor
(bad)
stos
mov
xchg
dec
add
pop
xchg
mov
xchg
inc
in
outs
pop
cwde
mov
fsubrp
call
mov
xor
cwde
push
out
xor
pop
pop
in
test
and
push
fwait
scas
push
or
mov
push
sbb
or
mov
js
xchg
ror
mov
cmp
div
repz
mov
mov
in
mov
xchg
inc
mov
pop
aaa
push
pop
inc
xchg
cmps
enter
aas
pop
sbb
movs
movs
in
cmps
retf
push
ds
scas
in
ins
adc
pop
rcr
mov
hlt
clc
mov
aaa
xor
popa
cwde
out
mov
jnp
sub
ss
test
cmp
fcomp
or
and
push
adc
iret
jl
dec
pusha
aam
retf
dec
xor
sbb
popf
(bad)
pushf
aad
cmp
mov
mov
xor
call
sub
test
add
div
mov
arpl
(bad)
xchg
mov
mov
popa
mov
mov
mov
repz
in
sbb
sub
bound
ret
fiadd
(bad)
lods
outs
or
aaa
jno
dec
fs
pop
add
clc
mov
fldenv
push
cmp
out
jl
arpl
sbb
call
gs
fidivr
inc
push
lds
retf
leave
mov
pushf
fnstcw
sbb
ins
loop
repz
inc
mov
aas
push
sbb
(bad)
xchg
cmc
mov
xor
and
jp
push
outs
ss
adc
repnz
adc
or
or
dec
sbb
xor
inc
push
sbb
mov
lea
loop
loopne
stc
imul
jge
imul
rcr
or
cdq
int3
cdq
jbe
mov
out
daa
jb
out
fsub
fidivr
sbb
and
cmp
ja
push
mov
hlt
ja
xchg
fadd
rol
mov
scas
mov
push
bound
inc
add
lahf
or
rcl
cmp
loope
jge
pop
pop
sub
mov
shl
dec
add
sub
jmp
fld
jge
rcl
xchg
fsub
adc
(bad)
dec
dec
push
push
ds
inc
xor
adc
inc
repnz
xchg
mov
sub
adc
mov
fldcw
jmp
mov
test
lds
xrelease
or
jno
add
xchg
(bad)
xor
test
ins
and
mov
adc
ret
inc
or
add
out
pop
add
add
mov
in
lods
ins
sbb
push
loope
dec
int3
mov
xor
mov
scas
mov
pop
push
sbb
shl
lods
imul
popa
and
dec
or
fs
(bad)
xchg
loope
push
(bad)
(bad)
add
push
sub
leave
or
mov
push
inc
sub
lods
inc
xor
jmp
add
mov
cmp
mov
sbb
xchg
cmp
in
mov
ja
mov
in
daa
(bad)
pushf
in
jp
dec
ds
sub
mov
cmp
movs
(bad)
xchg
push
xor
fs
fisubr
sub
mov
jmp
loope
fldenv
mov
mov
mov
data16
xchg
(bad)
int3
mov
js
call
and
add
(bad)
call
cmp
neg
xlat
arpl
lods
jmp
pusha
or
stc
(bad)
mov
movs
outs
clc
sbb
inc
sub
cmc
fcomp
pop
stos
pop
cmp
popf
out
lods
pop
fdiv
mov
sbb
push
arpl
sbb
icebp
dec
mov
push
adc
sub
xchg
dec
(bad)
mov
pop
(bad)
xchg
(bad)
mov
pop
imul
and
jne
(bad)
mov
dec
push
pop
or
lahf
xchg
les
mov
scas
in
fisubr
out
stos
lods
cld
sahf
int
mov
xchg
out
sub
jl
bound
jae
mov
adc
aaa
push
fdivr
mov
rcl
je
hlt
je
jl
test
mov
pop
cmp
imul
adc
js
or
mov
out
outs
inc
or
test
mov
ins
cs
xor
add
jno
push
add
ins
push
dec
mov
mov
jae
nop
shl
push
outs
fstp
inc
and
mov
add
and
pop
xchg
iret
mov
push
inc
pop
sub
outs
aaa
icebp
mov
jle
mov
xchg
mov
adc
mov
int3
lods
fstp
jno
outs
sub
cmp
add
mov
cli
mov
(bad)
mov
rcl
inc
and
mov
mov
dec
comiss
cs
inc
add
fcom
cmp
dec
or
retf
gs
jns
push
pop
or
pop
nop
mov
test
mov
jb
push
out
in
arpl
push
out
adc
rcr
add
push
out
mov
cvtdq2ps
add
xchg
jl
jnp
data16
mov
mov
push
repnz
sar
or
push
gs
cmp
sahf
fld
jmp
dec
dec
and
mov
adc
cmp
mov
loopne
dec
push
dec
adc
mov
adc
daa
dec
push
lods
jmp
dec
push
mov
push
pop
push
pushf
lods
adc
mov
lock
ins
fiadd
sub
inc
pop
pop
popa
xor
lahf
pusha
out
in
pop
aas
pusha
adc
sub
rcr
dec
mov
mov
sbb
jns
mov
inc
pop
je
fwait
jbe
dec
xor
icebp
mov
fidivr
jmp
int3
pop
sub
mov
out
add
es
fldl2e
cdq
jle
sbb
cmp
std
jg
je
movs
(bad)
mov
cmp
and
push
xor
sub
sbb
add
(bad)
pushf
fbstp
inc
daa
push
xchg
rep
sub
mov
pop
aas
ins
in
and
(bad)
repnz
out
fmul
int
invlpg
xchg
out
cmp
lea
push
cs
test
jns
pop
rcl
out
ret
xor
cwde
fnstsw
mov
mov
push
xor
outs
and
pop
arpl
and
ficom
and
push
push
gs
test
bound
push
pop
xchg
retf
mov
adc
aas
push
arpl
fist
in
dec
outs
pop
adc
pop
sub
in
mov
push
retf
int
ins
xor
xchg
cdq
add
jmp
push
adc
hlt
into
pop
in
imul
ret
adc
mov
mov
xor
push
and
movs
cld
mov
lds
mov
mov
or
push
gs
repz
push
jle
mov
test
shl
ds
fdivr
xlat
mov
out
popf
lds
mov
jp
and
or
jne
add
ds
fidiv
inc
ror
mov
ja
sbb
mov
sbb
mov
sub
xlat
cdq
lock
sbb
call
(bad)
mov
adc
ja
scas
retf
mov
dec
xor
outs
or
mov
jle
(bad)
retf
xchg
daa
pop
sbb
pusha
outs
fnstcw
dec
icebp
pop
or
test
sbb
pop
cmc
jl
ins
push
mov
sbb
mov
(bad)
ins
sbb
jmp
cmp
(bad)
xor
xchg
rcr
lds
outs
push
mov
mov
pop
(bad)
mov
and
inc
push
inc
test
pop
sbb
jns
push
xor
mov
dec
in
mov
push
rol
inc
xor
cld
xchg
or
pop
add
mov
push
adc
xchg
aad
outs
fadd
aam
dec
call
mov
movs
jb
movs
(bad)
sbb
or
daa
hlt
mov
jg
cmp
retf
arpl
mov
jp
dec
in
ja
jl
mov
mov
imul
int
mov
sub
dec
mov
sbb
mov
rol
hlt
inc
ss
(bad)
das
and
inc
neg
jge
sbb
jns
lods
mov
fdivr
add
push
call
inc
mov
cdq
rcr
push
sub
in
adc
mov
dec
push
fistp
dec
lods
bound
pop
sahf
ficomp
cmp
pop
adc
xchg
mov
cmp
pop
aaa
xor
stos
call
nop
mov
std
cld
imul
cmp
das
mov
retf
sahf
(bad)
mov
pop
dec
adc
cmp
into
outs
sub
mov
aaa
jo
movs
out
jmp
pusha
sub
and
test
mov
push
or
and
lods
repnz
jbe
not
mov
cmp
jg
xor
push
adc
mov
dec
nop
fiadd
xchg
int3
ins
lods
jo
and
sub
dec
loopne
mov
jno
pop
cmp
sbb
xlat
mov
adc
idiv
cmp
scas
cmps
jmp
push
je
sub
xor
adc
test
and
sub
fs
cmp
adc
jecxz
mov
mov
mov
xchg
pop
push
push
outs
push
cmps
push
daa
pop
add
(bad)
mov
cld
in
push
xor
sar
push
pop
cs
xchg
xor
sub
jmp
mov
xchg
mov
sbb
out
mov
cmp
mov
pop
or
bound
and
jo
lock
mov
sbb
js
mov
push
cmp
pop
jecxz
ja
or
and
jmp
fild
sahf
fldcw
outs
sub
pop
mov
jns
jae
push
or
retf
pop
out
add
jb
jl
movs
add
xor
jb
push
cmp
lea
inc
call
push
sbb
xor
sub
push
xchg
(bad)
movs
add
cmps
sub
adc
lea
push
and
sub
fisub
popf
mov
cld
pusha
xor
dec
adc
fisub
push
mov
cmp
fisubr
into
mov
inc
or
out
mov
xchg
mov
ss
cmp
retf
xchg
repnz
inc
mov
std
ins
mov
dec
add
pop
xor
jecxz
clc
(bad)
mov
xchg
aam
rol
dec
or
sub
cmp
call
push
cmp
arpl
mov
test
and
int
xchg
pop
xchg
mov
sub
jle
cmps
adc
data16
shl
mov
jae
pop
ds
jno
pop
not
(bad)
gs
jge
jb
or
cmc
sbb
xlat
ficomp
add
lods
lods
imul
mov
repz
pusha
adc
or
push
lods
inc
add
sub
dec
adc
or
mov
push
xchg
enter
shr
ret
outs
or
or
xchg
ret
adc
pop
ins
pop
sub
shl
pop
xchg
in
fld
aad
mov
mov
(bad)
std
(bad)
jnp
push
and
add
mul
ret
in
rcr
jno
ja
jns
cmp
pop
sub
dec
add
pop
or
mov
sub
add
shr
dec
test
push
xchg
iret
xchg
(bad)
push
sbb
xor
test
xchg
retf
mov
mov
dec
std
mov
jle
sbb
cmp
jl
fnstsw
jg
xor
jmp
push
das
(bad)
test
mov
xchg
jg
in
idiv
sbb
hlt
xchg
clc
push
test
xchg
fsubp
pusha
xor
and
pop
sbb
rcr
fisub
pop
fs
movs
jecxz
sti
cdq
cmps
push
retf
ret
pushf
(bad)
fidivr
mov
mov
mov
xchg
shl
out
mov
nop
aam
sar
xor
mov
sub
jmp
cs
in
cmp
out
retf
mov
sub
jae
mov
(bad)
fstp
daa
jb
mov
outs
jp
and
jne
jnp
mov
ins
mov
lock
test
push
cmp
or
ins
add
and
push
fdiv
adc
es
fstp
test
lahf
and
pop
call
mov
mov
mov
sbb
sub
sbb
push
loopne
push
push
jb
fistp
sbb
dec
(bad)
rcr
sub
popf
sti
cmp
xor
inc
push
cli
jmp
xchg
outs
out
push
xchg
mov
or
and
sbb
popf
aam
adc
pop
sahf
dec
adc
sub
in
mov
mov
test
xchg
fild
mov
scas
loope
jb
mov
mov
push
push
test
dec
lea
jno
fcom
dec
sub
mov
cld
xchg
mov
and
popf
push
test
nop
ret
xchg
xlat
mov
or
call
(bad)
or
int3
fs
lods
fld
sbb
jmp
adc
repz
push
test
leave
mov
sub
js
leave
push
or
dec
adc
and
inc
mov
push
jbe
and
test
sahf
and
cmp
pop
or
sbb
sbb
add
div
jmp
push
sahf
adc
cs
jecxz
rcl
mov
pop
cmp
jmp
cmps
jmp
jb
push
adc
outs
loope
push
out
fidivr
les
cmc
add
push
adc
fistp
cmp
jle
mov
pusha
scas
xor
pusha
loop
inc
fidivr
mov
std
sahf
cld
push
xchg
loopne
lods
jl
std
lahf
cli
mov
outs
ficomp
fbld
adc
ret
pop
dec
sbb
mov
imul
enter
dec
cmovae
inc
(bad)
stos
sbb
xchg
mov
lods
lds
xchg
loopne
imul
cs
ret
xor
sbb
ror
push
fld
mov
cmp
test
cdq
sti
add
and
sbb
ret
(bad)
cmp
rcl
retf
fdivr
scas
fbstp
outs
xchg
rcl
(bad)
xchg
jae
shr
lea
mov
xlat
movs
mov
adc
out
xor
xchg
(bad)
ja
xor
lahf
out
push
or
test
adc
sahf
dec
sub
sbb
dec
xor
pop
(bad)
loope
dec
mov
repnz
xor
pushf
dec
adc
mov
lock
mov
xor
aam
imul
push
add
xor
scas
mov
cwde
jne
clc
mov
leave
push
pop
pause
test
adc
inc
add
inc
mov
fmul
dec
xchg
push
adc
jo
xchg
mov
xchg
dec
cmp
inc
scas
in
sub
add
push
test
push
push
iret
test
cmps
jle
adc
ja
scas
in
mov
repnz
sar
inc
add
mov
adc
xchg
into
sbb
ja
out
pop
mov
dec
or
mov
call
xchg
inc
and
jo
les
pusha
mov
add
push
adc
add
push
sbb
pop
cld
scas
int3
scas
shr
sub
xor
fcomp
mov
dec
or
test
dec
sbb
sbb
sar
pusha
lds
shl
xchg
cmc
jne
(bad)
pushf
push
adc
adc
pop
sbb
mov
mov
xchg
lds
pop
sbb
popf
outs
pop
aad
cwde
fist
arpl
pop
hlt
mov
scas
fcomp
mov
mov
ja
test
cwde
addr16
xor
xor
xchg
mov
jmp
adc
mov
and
popf
fidivr
dec
out
pushf
xchg
aad
jno
out
and
sub
inc
push
adc
xchg
add
ja
(bad)
jl
ret
neg
sbb
fiadd
outs
mov
jl
adc
outs
fcom
mov
dec
sub
pop
xchg
fsub
push
mov
add
stc
sub
mov
lds
inc
add
xchg
dec
and
repnz
mov
icebp
xchg
and
enter
aam
add
xchg
jnp
enter
and
jo
jnp
jge
stos
shl
mov
jno
dec
or
cdq
fistp
cmps
jmp
popf
inc
adc
scas
shr
cld
cmp
cld
and
add
xchg
sbb
clc
add
cmc
add
fld
outs
fist
lds
fdivr
cwde
cli
push
pop
adc
out
xor
dec
test
pop
sub
movs
fs
inc
adc
aas
jne
repnz
jle
div
push
jnp
cs
cmp
into
push
jle
je
fs
mov
pop
fild
les
jp
cmc
mov
mov
and
inc
add
inc
call
fwait
inc
xor
cmps
xchg
shr
pusha
mov
sahf
les
icebp
xchg
xchg
xlat
or
shl
xor
mov
clc
xchg
mov
test
push
or
test
popa
cs
push
jecxz
ret
or
add
push
or
jnp
jp
jl
push
jmp
js
jle
test
in
scas
fstp
mov
pop
push
mov
fwait
xchg
loop
sbb
or
enter
inc
sub
add
inc
pop
add
rcl
aaa
je
inc
pop
dec
add
mov
out
sub
mov
cmps
(bad)
cmp
in
dec
push
ret
mov
scas
int
js
jmp
sbb
xchg
xchg
shr
pop
xchg
out
fstp
in
mov
push
ret
ror
jne
dec
adc
bound
arpl
mov
popa
or
mov
mov
add
pushf
nop
fistp
arpl
(bad)
pushf
bound
rcr
inc
scas
int
dec
mov
push
aaa
sub
fidivr
jg
mov
in
popf
out
pusha
adc
adc
push
sbb
(bad)
loopne
shl
xchg
out
fmul
xor
popa
fidiv
mov
out
dec
and
or
cdq
outs
sub
les
mov
and
xchg
mov
adc
lds
push
mov
les
mov
lods
ins
das
cli
mov
ss
dec
sbb
mov
mov
inc
pop
add
std
sahf
sub
cs
lock
sbb
scas
fstp
cmps
xchg
rcl
sbb
adc
push
xor
stos
inc
push
leave
fwait
dec
sub
pusha
add
jb
in
push
adc
scas
mov
data16
mov
mov
daa
jge
jmp
mov
cwde
nop
shl
jle
hlt
pop
cmp
jbe
mov
sahf
cld
arpl
cmp
dec
in
fld
pusha
das
imul
add
adc
push
mov
movs
(bad)
ds
xchg
aad
pop
mov
add
test
sbb
fwait
gs
mov
cwde
mov
cwde
retf
dec
sub
adc
dec
adc
push
or
jp
jnp
jge
push
mov
mov
mov
jo
pop
xor
popw
ins
mov
shl
js
pop
sbb
movs
fwait
ret
mov
aaa
inc
loope
ds
out
mov
test
sbb
and
gs
(bad)
adc
(bad)
push
mov
imul
ficomp
cs
aaa
pop
push
push
add
push
test
push
aaa
fst
popa
xchg
call
iret
xchg
loop
dec
push
loope
xor
jnp
js
(bad)
cdq
les
test
jmp
pop
mov
cld
pop
pop
and
xor
std
ins
mov
dec
nop
and
adc
jno
mov
xor
movs
aas
inc
or
mov
mov
mov
aaa
(bad)
dec
out
or
(bad)
neg
sub
push
lea
pop
add
sub
ja
push
imul
out
sbb
stos
ja
std
mov
cmp
adc
loope
sub
push
xor
(bad)
scas
int3
mov
jmp
jmp
hlt
sub
in
cmc
cmp
mov
mov
pusha
adc
inc
(bad)
sbb
inc
adc
push
pop
jge
pop
or
ja
xchg
pusha
cmp
xchg
adc
mov
mov
mov
xchg
fisttp
fisttp
clc
sbb
and
imul
loopne
xor
pop
out
cmpxchg
test
or
and
mov
or
es
pop
add
dec
sbb
mov
and
jne
pop
fwait
sub
sub
cs
dec
jmp
mov
in
mov
xor
je
xor
cmp
jecxz
sbb
and
xchg
xor
shr
mul
push
(bad)
or
sub
dec
sub
aaa
inc
gs
gs
ja
dec
mov
loope
sbb
dec
lea
imul
ficom
ja
mov
dec
pop
dec
or
aad
mov
test
cmp
icebp
cmp
jae
sub
es
xor
retf
retf
xchg
inc
mov
dec
jns
push
push
jne
push
test
sub
inc
xor
cli
add
out
dec
cmp
push
adc
mov
stos
out
shl
fsub
dec
pop
pop
xor
mov
test
cmp
mov
adc
jg
jge
or
add
aam
mov
ja
outs
mov
inc
lea
ret
mov
add
les
sti
ja
fstp
fiadd
add
or
rcr
pusha
adc
dec
test
popa
test
mov
dec
xchg
movs
(bad)
movs
hlt
xchg
fistp
inc
aaa
inc
mov
jae
push
pop
sub
repz
inc
jmp
mov
mov
inc
mov
in
fsubr
xchg
scas
jo
pop
ds
in
out
mov
sbb
(bad)
mov
dec
sub
mov
pop
push
inc
push
pop
hlt
mov
call
pop
cmp
in
mov
add
pop
cdq
rcr
mov
push
retf
and
jo
pop
in
mov
add
dec
push
ss
daa
in
lods
fcomp
or
add
loop
pushf
test
or
cwde
inc
stos
sti
bound
inc
push
fnstsw
add
xor
jne
inc
or
cld
div
pop
loope
shl
stc
xchg
mov
(bad)
in
lds
adc
cmc
mov
fcom
jbe
sub
pop
pop
xor
data16
call
pop
mov
mov
call
mov
ret
sbb
dec
xor
int
iret
mov
cmp
imul
xchg
stos
cmps
inc
ins
xor
pop
idiv
(bad)
fild
sbb
push
sbb
test
cmp
xchg
hlt
cmp
or
add
jg
push
jb
xlat
jmp
jmp
fisubr
adc
call
and
and
es
mov
js
fnsave
and
lahf
scas
icebp
call
stc
bound
and
test
pop
leave
pop
xchg
mov
imul
inc
aas
outs
sub
inc
adc
dec
pop
inc
pushw
ja
pop
out
pop
add
sahf
jb
push
push
inc
aaa
ror
mov
mov
(bad)
mov
mov
inc
mov
or
jnp
mov
jle
ins
sbb
cmp
or
mov
pushf
mov
in
mov
adc
mov
mov
sbb
enter
movs
in
outs
int
(bad)
xor
icebp
test
aas
and
(bad)
mov
sbb
icebp
mov
mov
dec
mov
not
cwde
test
and
pop
sbb
jne
dec
push
push
out
sbb
xchg
or
in
movs
ins
hlt
xchg
fdivr
push
ds
jl
mov
jns
sbb
in
ds
call
aad
pop
rcl
aam
add
dec
pop
rcr
push
js
xchg
jmp
sar
test
loope
pop
sub
push
mov
mov
sbb
fidiv
lods
aam
repnz
mov
sar
loop
loope
retf
add
jbe
jle
jge
shl
cmps
int
int3
push
adc
movs
outs
loopne
icebp
mov
push
mov
mov
sub
adc
in
jle
repnz
xchg
stos
dec
lock
inc
shl
add
fild
in
mov
jnp
mov
out
xchg
std
mov
neg
scas
mov
jae
es
or
retf
pop
jmp
mov
scas
call
sbb
jl
retf
push
cmp
sub
sbb
pop
pop
cmc
pop
xor
inc
push
ret
loop
push
add
ficom
wrmsr
jae
push
xchg
test
sub
scas
aad
fidiv
fstp
cwde
fsubp
sub
loope
pop
xchg
movs
aam
mov
mov
or
adc
fs
add
cmc
dec
adc
sbb
clc
and
xchg
mov
int
adc
(bad)
cdq
fidiv
pop
cmp
jnp
pop
cmp
jg
stos
in
cmps
fnstcw
(bad)
mov
sar
pop
ds
xchg
dec
xor
in
xor
cmp
dec
push
push
test
adc
ret
test
sti
loope
adc
in
arpl
jne
rol
aaa
pop
neg
push
jns
push
out
adc
dec
or
cmp
and
xor
repnz
sbb
and
gs
cmp
bound
das
jnp
scas
into
call
sbb
imul
sub
pop
cwde
mov
pop
push
pop
pop
arpl
mov
mov
ss
cdq
arpl
lahf
jae
xchg
push
div
imul
and
shl
adc
retf
int
push
jbe
inc
and
out
ins
test
pop
sub
pop
es
adc
(bad)
mov
sub
jmp
jg
ret
mov
aad
inc
xchg
sar
iret
lahf
fcomp
call
push
mov
mov
push
and
xchg
int
ficom
add
xlat
mov
shr
daa
dec
sbb
mov
ret
hlt
mov
stc
push
xchg
cmp
and
jmp
repnz
cwde
icebp
mov
out
pop
pop
jle
daa
std
rol
mov
test
add
stos
jns
cmp
jecxz
scas
sti
jb
cli
or
(bad)
int
push
ins
cmp
das
dec
sahf
push
loop
lds
iret
mov
rcr
mov
mov
(bad)
pushf
int
iret
pushf
ror
stos
pop
inc
adc
loop
movs
retf
or
mov
mov
xchg
(bad)
daa
lods
(bad)
fs
mov
xchg
sar
dec
bound
call
enter
mov
dec
or
sar
sub
cwde
mov
push
adc
or
or
inc
sub
mov
jp
adc
jbe
lock
adc
stc
dec
in
stos
ror
mov
mov
call
push
mov
adc
enter
jl
out
fidiv
push
inc
cmps
(bad)
xchg
cli
test
mov
fnstsw
mov
xchg
cmps
push
aam
retf
(bad)
mov
and
push
push
sbb
hlt
or
rcl
cmp
jle
pop
fs
and
push
and
repz
in
sub
mov
or
lods
ins
int3
mov
xchg
fdivr
std
and
inc
out
retf
xor
jb
push
and
add
pop
push
sub
imul
xor
push
aaa
ret
mov
lods
sti
xchg
test
sbb
js
dec
cmp
or
push
call
mov
pop
pop
and
test
mov
call
aam
sar
mov
into
mov
mov
push
cdq
std
xchg
shl
out
imul
rcr
data16
adc
daa
imul
jb
sbb
imul
(bad)
ja
rcr
inc
or
sahf
dec
in
ins
sbb
pusha
xor
rol
sahf
movs
stc
jg
xor
dec
loope
icebp
idiv
sbb
inc
or
sub
mov
test
add
mov
mov
mov
data16
dec
mov
inc
sub
inc
push
push
cs
xlat
dec
cmp
repz
jg
mov
add
push
in
scas
mov
push
add
into
call
jb
enter
retf
outs
mov
cwde
sbb
lahf
jo
jecxz
jae
shl
repnz
mov
shr
ror
cmc
sub
inc
or
movs
or
or
jno
aam
xchg
mov
fsub
jmp
mov
xor
ret
cmc
push
jo
push
call
sub
dec
inc
inc
xchg
mov
pop
inc
ss
push
adc
aas
mov
mov
push
fistp
fidivr
mov
sbb
stos
sbb
les
xor
jnp
mov
mov
mov
jne
ins
rcl
test
mov
cld
cwde
call
xchg
imul
test
pop
sub
cmps
push
pop
xor
inc
mov
jmp
xchg
add
jmp
les
sbb
sub
sbb
ss
mov
pop
popa
cmps
and
add
jo
xchg
adc
mov
stc
cmp
loopne
ret
out
add
iret
mov
sub
inc
mov
ret
outs
outs
sbb
(bad)
mov
and
mov
stos
push
(bad)
shl
sahf
xchg
mov
xchg
push
pop
aam
mov
in
(bad)
cli
test
lods
add
and
adc
cmp
(bad)
cmps
inc
and
shl
or
call
cmp
jmp
mov
outs
cmp
gs
stos
mov
pop
stos
lds
mov
jne
sar
cmp
gs
or
fsub
push
stc
fbld
rcr
pop
pop
in
xor
mov
fiadd
int3
rcl
js
xor
jb
fwait
sbb
in
test
(bad)
rol
out
jge
xlat
xchg
mov
aam
sahf
cmp
dec
adc
fcmovb
ror
movs
cmp
jo
xchg
mov
mov
dec
repz
loop
or
shl
icebp
stc
mov
and
(bad)
loop
ds
es
dec
add
cmp
pop
dec
rol
xlat
add
push
ret
push
fnstcw
cwde
pushf
jb
cmp
fcomp
lods
loop
js
push
sub
leave
xchg
dec
aam
stos
pop
sbb
sbb
xor
cs
imul
push
xor
sbb
stc
xchg
dec
inc
leave
cld
fiadd
in
pop
jbe
jle
mov
fwait
cmp
call
pop
or
lds
xchg
(bad)
shr
addr16
repnz
loope
jp
xchg
dec
push
add
retf
aas
dec
movs
push
or
push
out
jp
mov
cli
movs
je
(bad)
fs
mov
scas
out
icebp
push
or
stos
push
test
mov
sbb
scas
jmp
xchg
stos
add
out
dec
repnz
mov
sbb
pop
inc
(bad)
pop
cmp
and
popf
pop
les
cmp
xchg
int
sub
push
sbb
jne
ds
xchg
(bad)
lahf
sbb
adc
cmp
clc
mov
mov
daa
or
dec
test
aam
mov
popa
mov
loopne
pop
xor
jmp
scas
stc
fst
push
out
test
cmps
jo
sub
cwde
(bad)
mov
imul
scas
dec
xchg
xchg
mov
loope
push
or
adc
push
out
mov
lods
sub
sahf
sbb
mov
retf
outs
shl
test
or
xchg
pop
adc
fisttp
cmc
mov
mov
cmp
dec
mov
fisubr
in
cdq
or
test
mov
or
dec
mov
or
cmp
in
xor
fadd
scas
mov
push
push
mov
in
xor
jecxz
addr16
int
aam
imul
int3
ror
jmp
add
push
xor
sbb
test
fstp
and
ret
sub
ror
xor
imul
add
mov
inc
in
cmp
adc
inc
and
inc
mov
jge
and
dec
jnp
bound
sub
nop
(bad)
popa
aad
dec
cmp
and
clc
test
jb
push
or
mov
lock
call
(bad)
call
(bad)
movs
fisttp
or
dec
sti
scas
into
fs
mov
mov
sti
fld
push
enter
mov
jecxz
aas
and
xchg
in
rcl
mov
or
je
hlt
movq
cmp
ds
cmps
sub
xchg
jnp
arpl
push
push
ins
mov
int3
les
xor
push
xor
lds
cmp
mov
mov
sbb
cmp
push
movs
xchg
fiadd
fdiv
jbe
pop
(bad)
jnp
and
inc
lds
in
jnp
fbld
js
adc
shl
in
xor
xchg
push
lea
sbb
xor
mov
jge
enter
std
leave
rol
aam
jae
mov
sub
jle
fs
addr16
pop
mov
push
fisttp
push
dec
cmps
jne
add
js
dec
cmp
jo
not
sbb
int
mov
repz
sub
sbb
test
pop
pusha
in
loop
cs
sub
push
cmps
aaa
imul
inc
or
fidivr
movs
jnp
rcr
lahf
test
or
ds
jmp
jb
rcr
xor
pop
repnz
fimul
rol
imul
pop
les
lock
clc
pop
imul
sbb
ror
lds
and
jns
mov
pop
inc
in
ins
dec
add
neg
push
fstp
fs
out
(bad)
js
adc
popf
shr
(bad)
adc
xor
nop
int
sbb
leave
shl
test
inc
fimul
inc
rol
add
cmps
fidiv
ret
ds
sbb
fisubr
aam
hlt
or
retf
out
pop
fcomp
mov
pop
movs
mov
sbb
xor
outs
or
mov
movs
movs
dec
pop
pusha
xlat
popa
movs
pushf
in
or
xchg
dec
dec
fdivp
(bad)
aad
out
repz
mov
sar
aas
daa
push
mov
out
bnd
fcmovbe
fsub
call
stc
mov
jb
jle
add
adc
push
jnp
cmp
shl
shr
fdivr
lahf
lds
test
(bad)
std
pop
mov
push
add
jmp
mov
push
jmp
jmp
ins
test
xchg
fucomi
xchg
ds
mov
in
repnz
arpl
ss
jo
ret
jmp
mov
mov
mov
cs
fsubp
jge
nop
mov
xchg
mov
and
jno
nop
xchg
push
idiv
pop
das
mov
sahf
lahf
mov
lahf
xchg
mov
pop
out
lea
loop
in
cmp
xor
inc
dec
stos
popa
adc
and
cmp
bound
daa
fild
ins
jmp
(bad)
fstp
fwait
sbb
cmc
mov
fs
or
jmp
push
xchg
ins
cmps
popa
cmps
popa
inc
ret
test
das
fadd
mov
dec
jb
js
pop
cmp
jns
lock
mov
inc
mov
cmp
call
pop
jmp
pop
outs
pop
test
adc
je
cdq
xor
mov
cmp
or
mov
aas
fwait
dec
cwde
xchg
adc
and
mov
addr16
icebp
sbb
jg
adc
push
mov
in
repz
cli
and
sar
adc
dec
leave
nop
sub
aam
mov
std
and
push
int
ror
xchg
imul
jp
jge
push
sub
xlat
aad
cwde
std
shl
dec
cmp
call
dec
sub
mov
rcl
icebp
loopne
mov
mov
jle
sti
or
outs
push
sti
mov
aad
arpl
mov
xchg
add
sub
fbld
js
out
out
stos
jmp
cmc
(bad)
pop
retf
nop
in
repz
mov
xor
cwde
shl
pusha
hlt
std
or
stos
dec
data16
shl
lods
dec
xchg
shr
mov
and
push
push
in
ss
pop
and
mov
mov
xchg
push
or
cs
add
jbe
fild
in
jl
out
and
sub
fwait
xchg
pop
rol
sbb
mov
push
push
leave
or
es
cmp
cwde
sbb
push
cli
lock
pop
add
fwait
js
mov
xchg
loop
aas
popf
jno
call
push
adc
jg
pushf
push
stc
or
mov
cld
repz
mov
popa
inc
push
out
jmp
into
popa
pop
hlt
push
repnz
pop
pop
push
and
and
inc
aam
jecxz
jb
arpl
test
ficom
movs
jb
and
loop
(bad)
movs
pop
mov
aam
push
adc
fidivr
push
mov
lods
dec
add
inc
test
retf
js
repz
out
and
cdq
(bad)
mov
stc
sbb
fidiv
or
xchg
mov
sub
shr
into
mov
dec
or
imul
mov
pop
not
jns
popf
push
je
bound
lods
cs
sbb
rol
stos
loopne
test
int
xchg
push
fistp
mov
cmp
(bad)
lock
bound
add
stc
mov
test
adc
sahf
js
pusha
jge
leave
or
mov
lock
push
imul
dec
cmc
pop
push
pop
arpl
push
cmp
ins
cmp
pop
dec
sub
movs
daa
xchg
and
xchg
pop
sub
xchg
in
and
xchg
(bad)
xchg
pop
dec
outs
lds
das
and
sbb
push
movs
inc
push
or
cld
call
and
pop
inc
sbb
je
inc
sti
fs
pop
jmp
pop
adc
mov
jmp
inc
mov
xor
jb
xor
adc
outs
pop
imul
(bad)
jne
mov
in
into
mov
pop
in
ds
ins
cmp
loope
mov
mov
jp
jmp
mov
pushf
(bad)
scas
push
jns
cmp
mov
cmp
repz
cmps
int3
ficomp
pop
mov
arpl
inc
lds
mov
cvttps2pi
mov
add
imul
mov
rcr
inc
mov
xor
pop
repz
or
rcl
dec
jae
xchg
sbb
loop
fimul
add
mov
adc
icebp
in
nop
adc
fidiv
movs
sahf
push
xor
push
add
jno
int
jg
test
js
ret
stc
mov
push
push
push
mov
inc
jl
xchg
iret
je
hlt
test
fisub
and
adc
mov
pop
jmp
movs
adc
pop
jecxz
push
adc
adc
scas
xchg
sahf
neg
jns
test
sub
leave
dec
fld
(bad)
jl
ja
push
iret
popf
sub
jp
test
jge
mov
push
push
in
xor
inc
fdiv
call
in
nop
movs
stos
dec
mov
add
outs
cmp
mov
lahf
jbe
ror
dec
pop
test
mov
test
(bad)
addr16
dec
sub
stos
fistp
cli
dec
(bad)
and
xor
dec
and
and
inc
lods
mov
out
add
mov
movs
mov
push
fwait
jge
repz
and
call
mov
cmp
dec
aaa
pop
gs
jbe
aam
cmp
jg
and
iret
addr16
sub
mov
push
mov
or
aaa
adc
lods
fnstcw
adc
arpl
int
das
imul
push
lock
and
ror
xchg
jae
cmp
cmp
pop
addr16
dec
cli
dec
dec
jno
mov
es
mov
loope
push
inc
push
in
xor
sbb
int3
cli
cld
cmps
inc
mov
inc
mov
jns
dec
outs
cmc
repz
mov
adc
ins
(bad)
stos
pop
mov
mov
fs
scas
cmp
pop
and
add
inc
mov
pusha
xchg
cdq
and
das
pop
mov
jb
xchg
sbb
pop
fwait
and
int
sar
xor
mov
lea
add
jb
xchg
pushf
aad
jbe
sbb
scas
jg
test
fimul
xchg
shl
popf
adc
push
in
jg
pushf
pminsw
sub
daa
out
cli
mov
xchg
jo
adc
pop
fldcw
jl
jb
push
loopne
jno
shl
sti
ins
mov
fist
jmp
push
push
and
daa
shl
xor
pop
cwde
jle
sub
dec
loop
aaa
inc
int
cmp
lea
sar
push
and
aam
add
cdq
cwde
repnz
xchg
mov
(bad)
loopne
and
and
ins
push
rcl
xor
movs
and
retf
add
test
sub
dec
push
test
mov
dec
ja
sub
popa
jmp
cmp
clc
pop
shl
mov
xor
imul
add
add
and
repnz
mov
jno
push
fdivrp
push
ja
test
xchg
or
call
adc
mov
xchg
pop
add
xchg
imul
js
cmc
rcl
loopne
sub
stos
aaa
ret
or
js
adc
les
pop
test
adc
mov
gs
fstp
cmp
enter
inc
fidivr
or
ret
rol
sbb
fs
mov
into
std
xchg
dec
sbb
adc
add
sub
sub
or
(bad)
mov
pushf
jmp
push
out
jle
scas
test
mov
mov
ins
push
dec
or
int
cmp
ret
repz
scas
stc
pop
dec
mov
dec
inc
sub
repz
jmp
mov
test
xor
ds
pop
shl
jnp
jge
cdq
mov
pushf
int
or
mov
mov
xchg
mov
jnp
cmps
movs
int
fld
inc
sbb
fistp
fdivr
xchg
jmp
push
cli
bound
lea
sbb
cmps
mov
push
inc
rcr
mov
stos
dec
cmp
mov
loopne
loop
int
shl
out
sbb
test
adc
scas
stos
ror
and
mov
ret
mov
fstp
dec
loop
test
div
sbb
xchg
repz
push
dec
ror
dec
test
scas
popf
cmps
sti
stc
pop
jle
sub
or
dec
pop
shl
aad
and
sar
and
push
aam
jmp
outs
cmp
mov
dec
add
inc
outs
push
popw
icebp
loope
mov
or
repz
mov
jo
test
push
and
std
arpl
or
jb
popa
cmp
call
into
mov
arpl
push
push
and
hlt
fistp
dec
dec
xlat
sbb
movs
test
jp
push
push
mov
jecxz
jmp
add
les
push
aaa
push
enter
stc
cdq
push
daa
out
sahf
outs
jle
dec
add
ins
xor
xchg
push
cmp
cmps
cmc
pop
sub
sub
mov
outs
ret
cmc
iret
imul
fcos
xchg
inc
retf
mov
and
pop
mov
dec
jmp
adc
add
sub
adc
mov
fs
call
repnz
das
xor
test
ret
xor
cmp
xchg
push
out
push
pop
stc
jmp
(bad)
jl
xor
sbb
stos
jg
lods
mov
test
and
sbb
cli
adc
sbb
mov
dec
call
jmp
mov
mov
xor
sbb
lds
dec
or
std
into
inc
xor
mul
mov
cmps
jnp
xor
(bad)
jecxz
or
in
push
jnp
lahf
into
pusha
movs
enter
aaa
movs
call
jmp
mov
dec
adc
adc
push
js
xchg
sbb
cwde
movs
mov
and
sub
xchg
gs
xchg
mov
adc
daa
out
ins
loop
sbb
stos
inc
dec
cmps
push
sub
(bad)
mov
dec
imul
cmp
shr
inc
push
das
jae
mov
push
jg
adc
cwde
push
cmp
cmp
xor
std
push
xlat
push
pop
pop
(bad)
std
mov
sbb
push
jae
or
xor
dec
jl
pop
mov
jns
xchg
push
or
and
dec
sbb
jo
cmc
mov
out
mov
repz
fisub
call
mov
mov
add
sbb
cdq
fld
(bad)
loopne
ins
jp
dec
dec
mov
(bad)
in
cmp
mov
test
push
or
push
movs
dec
movs
mov
scas
clc
dec
fcom
ret
lea
xchg
in
dec
loope
inc
pop
and
xchg
(bad)
loop
adc
xchg
cmp
scas
cmp
and
xchg
mov
leave
jne
ficomp
inc
(bad)
or
pop
ds
mov
imul
jb
mov
mov
inc
scas
sbb
push
leave
outs
adc
fucomi
push
dec
pop
cmp
shl
ins
xor
adc
xchg
cmc
hlt
xchg
js
mov
mov
sbb
in
loopne
cmp
mov
mov
dec
test
cmp
mov
les
movs
fwait
mov
in
fimul
ret
pop
adc
dec
mov
push
movs
in
scas
xchg
retf
retf
ins
jp
stos
jne
mov
jae
outs
out
add
adc
add
(bad)
jns
add
mov
adc
cmp
pop
fnstsw
inc
cmps
aam
(bad)
arpl
dec
ds
mov
fist
out
sub
call
mov
dec
lock
in
in
cdq
fild
and
(bad)
mov
jge
xchg
jae
hlt
mov
cld
jge
mov
fnstenv
jno
and
aas
inc
mov
loope
hlt
daa
jne
sbb
xchg
int
inc
out
jno
jns
mov
loopne
xor
mov
pop
das
(bad)
call
jmp
mov
jle
or
and
loope
(bad)
leave
shl
ds
fistp
fsub
inc
(bad)
xchg
fsubrp
(bad)
and
xor
dec
mov
push
push
or
mov
scas
push
xchg
movs
and
fcmovnbe
inc
jecxz
sbb
push
scas
mov
test
test
jmp
test
out
cmp
sub
inc
and
aam
cmp
fucomi
push
ins
add
imul
sti
ja
cmp
or
cmp
mov
(bad)
push
xchg
ret
das
cmp
jne
fdivr
aad
pop
push
test
leave
jo
bound
jge
add
rcr
shrd
adc
mov
pop
test
sbb
sub
ins
or
inc
ins
dec
cmc
dec
cmps
loopne
and
xor
and
mov
test
and
add
sbb
or
retf
mov
jns
mov
fdivr
xor
scas
and
xchg
pop
clc
inc
fs
adc
push
mov
not
ins
pop
mov
cmp
dec
cs
xor
(bad)
outs
nop
popf
sti
(bad)
sbb
call
add
inc
pusha
and
imul
rcl
pop
adc
sub
fmul
retf
add
xor
mov
out
sbb
sbb
aaa
cmp
push
xlat
(bad)
xor
sbb
sbb
mov
repz
in
es
or
jbe
lods
pop
xchg
cmps
or
jbe
adc
mov
push
ins
xor
mov
xor
inc
jmp
lock
rcl
xchg
pop
not
xor
cs
cmp
in
jbe
lds
mov
add
xchg
fs
cdq
(bad)
pop
(bad)
inc
or
mov
push
add
sbb
int3
mov
adc
add
sbb
jg
or
shl
adc
rol
jg
pop
lods
jmp
cmp
loop
movs
push
jp
sub
ret
call
leave
(bad)
rcl
int3
test
test
shl
inc
enter
add
adc
pop
xor
movd
cwde
in
mov
shl
mov
sbb
jae
inc
pop
outs
cs
cmp
cmp
dec
andps
jge
push
xor
js
cwde
ror
(bad)
xchg
xlat
mov
dec
imul
in
or
mov
shr
movs
retf
jecxz
(bad)
jge
psrlw
jb
sbb
xor
stos
sbb
push
xor
pop
or
pop
cmp
add
mov
in
mov
push
fst
fwait
dec
xor
mov
push
aaa
(bad)
xchg
aam
lods
icebp
mov
jne
je
out
sahf
fsub
mov
int
inc
xor
imul
xor
xchg
(bad)
xchg
and
ret
mov
pop
dec
inc
and
mov
pop
cs
push
xchg
jnp
cmc
scas
cwd
not
inc
data16
in
adc
dec
sub
mov
add
inc
pop
pop
loopne
ror
or
push
and
cld
scas
stos
and
xor
sub
jns
sub
pop
jl
cmp
mov
xor
sbb
cmp
mov
int
pop
xor
xchg
mov
gs
mov
popa
cmp
(bad)
rcr
pusha
pop
pop
mov
fcom
fsub
sar
push
pop
cmp
dec
and
dec
cmp
inc
imul
mov
cmps
dec
aaa
jle
retf
mov
xchg
cmp
and
(bad)
fcom
push
ss
fadd
fistp
pop
xor
cmovne
leave
rol
cmp
adc
cmp
mov
mov
fwait
jmp
scas
call
dec
aas
inc
add
pop
daa
ins
pop
mov
inc
fild
xlat
mov
xor
sub
push
sub
call
div
in
mov
pop
jb
push
dec
dec
add
inc
dec
adc
sub
sub
mov
das
pop
ins
push
cmp
aaa
push
pop
test
fisttp
inc
xor
int
ret
ss
retf
rcl
jl
call
pusha
inc
ss
adc
mov
enter
jbe
fiadd
fistp
and
or
dec
adc
loopne
popf
aas
js
dec
js
ja
sub
fist
xchg
sbb
idiv
test
push
xchg
inc
push
push
test
(bad)
jnp
in
je
add
xor
dec
cmps
cmp
sub
stos
pop
sub
sbb
cmc
rcr
mov
cwde
enter
jg
sbb
adc
fs
scas
out
pushf
js
add
sets
or
pushf
adc
jmp
outs
pop
pop
cmps
pop
dec
sbb
push
cs
push
iret
shr
xchg
adc
in
fnsave
cmp
cld
mov
jbe
aaa
cwde
aad
nop
les
ret
cmp
dec
bound
fistp
pusha
push
inc
aaa
hlt
fld
push
sahf
in
adc
jg
xor
(bad)
mov
cmp
adc
and
fbstp
dec
mov
dec
aas
lock
div
xchg
ror
mov
scas
out
data16
and
dec
popa
mov
mov
aam
pushf
xor
in
dec
sbb
mov
lahf
jb
(bad)
nop
popa
adc
xchg
jne
jo
aas
dec
or
add
xor
dec
bound
cmp
push
pop
push
inc
push
inc
and
dec
xor
gs
or
ja
jne
pop
adc
push
adc
pop
push
inc
xor
add
push
dec
or
and
jns
inc
adc
push
push
push
sbb
add
sbb
and
add
push
pushf
sbb
enter
jl
shl
xchg
mov
loopne
inc
icebp
sbb
pop
std
add
mov
push
sbb
mov
cwde
ds
cdq
and
push
(bad)
rol
loop
(bad)
jecxz
fiadd
mov
add
adc
inc
push
adc
cmp
fcomp
arpl
jb
repnz
stc
adc
or
outs
and
push
push
cmp
mov
mov
call
and
jne
dec
fst
jg
call
rol
call
push
test
stos
adc
adc
sub
mov
mov
jmp
add
cs
shl
leave
lock
adc
jnp
mov
push
rcr
mov
inc
push
and
pop
adc
inc
outs
xor
out
push
fs
call
and
repz
ret
rcl
lea
adc
push
and
add
les
pop
or
lahf
hlt
xchg
xchg
sbb
out
mov
dec
push
cmp
and
(bad)
pop
push
or
or
cmp
and
add
les
inc
push
sbb
cs
test
cmc
mov
mov
dec
add
clc
scas
in
cmc
mov
call
inc
ins
dec
and
inc
add
sub
xchg
fdiv
xor
mov
dec
cmp
fbstp
stc
sar
adc
dec
pusha
dec
cmp
in
pusha
and
xor
(bad)
mov
mov
push
pop
push
or
adc
mov
cmp
sbb
xor
mov
adc
aaa
(bad)
iret
lods
and
xchg
fidiv
pop
push
add
and
ss
mov
repnz
xchg
hlt
cld
mov
jg
nop
clc
mov
cli
rcl
call
test
push
adc
jmp
xchg
or
dec
and
loop
shr
cmps
leave
cmc
aam
cwde
pop
sub
cmps
rcr
push
xor
mov
test
xor
out
scas
test
jo
or
std
cmps
sub
mov
mov
mov
xor
sub
or
out
fst
mov
test
sub
pop
sub
daa
mov
push
mov
(bad)
rcl
xchg
call
loopne
and
rcl
mov
test
adc
push
dec
and
inc
dec
or
out
cmc
or
retf
nop
cdq
adc
call
cmp
xor
inc
dec
xor
or
sbb
shr
addr16
inc
add
movs
into
sbb
sbb
in
mov
or
je
clc
mov
data16
inc
lock
addr16
clc
mov
mov
adc
pop
xor
call
dec
add
add
in
xchg
repz
dec
xchg
adc
(bad)
nop
(bad)
adc
loope
inc
xchg
adc
sbb
jl
sub
add
in
xchg
out
xchg
jno
inc
mov
out
int
cld
xchg
into
and
mov
mov
popf
dec
or
pop
aaa
jnp
pop
pop
inc
pop
cmovb
jns
ins
pop
sub
ss
pop
push
dec
push
ins
es
add
jo
popw
and
inc
xor
sbb
sub
jg
push
cmp
xor
pop
adc
cmp
bound
jo
jns
push
push
inc
and
inc
leave
adc
or
in
sbb
mov
jae
add
ret
xchg
mov
mov
in
fnstcw
popa
cmp
mov
shl
aam
mov
add
xor
out
aam
retf
call
into
scas
cld
adc
(bad)
mov
scas
sbb
dec
sbb
fiadd
jb
repz
jp
adc
mov
jge
mov
mov
out
inc
push
dec
mov
inc
sub
hlt
lods
shl
(bad)
mov
jecxz
int
xchg
and
add
mov
sub
xor
or
jmp
push
push
mov
pop
inc
(bad)
(bad)
rol
fcmovnb
mov
push
jno
inc
retf
cmp
aaa
ja
cmp
add
pop
sahf
cld
push
gs
shr
xchg
retf
ss
push
(bad)
test
jbe
inc
aam
push
loopne
mov
sbb
adc
lods
clc
mov
sub
or
aad
out
sahf
push
jl
inc
addr16
cdq
retf
jmp
push
ja
xor
and
fadd
dec
dec
xor
(bad)
pushf
daa
popf
shl
ins
add
sar
xlat
mov
jo
jb
in
jmp
ss
adc
loop
outs
cmp
test
or
dec
jae
and
and
aam
hlt
loope
xchg
repz
jp
jnp
dec
cmp
repz
ffreep
cmps
repz
cmp
mov
mov
mov
jl
stos
sar
xor
and
mov
enter
xchg
scas
pop
push
or
lock
in
retf
cmps
jmp
ins
add
dec
sub
(bad)
mov
dec
and
mov
push
outs
lahf
ror
push
ja
(bad)
sahf
shr
leave
(bad)
aam
je
dec
sahf
sar
loope
mov
data16
pop
push
or
outs
sub
cmp
mov
ret
cs
(bad)
pop
pop
(bad)
in
test
out
scas
out
rol
fs
cld
fidivr
loope
xchg
into
mov
ss
retf
mov
push
fs
dec
(bad)
cs
xor
mov
(bad)
cmc
mov
mov
stos
out
js
inc
add
ret
fild
icebp
(bad)
iret
cmp
outs
cmps
adc
sbb
inc
test
mov
add
arpl
push
push
mov
mov
nop
bound
ins
mov
xchg
idiv
std
ret
and
nop
leave
and
xor
retf
mov
pop
pop
adc
or
pop
mov
push
inc
stos
add
and
scas
adc
shr
mov
add
gs
out
sahf
fdivr
sahf
rol
ret
mov
sub
mov
inc
sub
mov
xor
(bad)
mov
fs
lods
sbb
scas
jmp
js
push
or
mov
imul
mov
movs
jge
jno
out
sti
mov
sbb
imul
adc
shl
cld
(bad)
mov
ja
cs
out
fadd
mov
bound
in
ds
sub
movs
loopne
call
(bad)
loope
mov
mov
jl
jnp
cmp
cmp
mov
fwait
enter
iret
test
sahf
icebp
cmps
in
fist
int
cld
mov
lahf
fimul
mov
and
(bad)
mov
mov
clc
popf
aam
repnz
mov
sahf
call
sbb
mov
pushf
(bad)
mov
cmps
and
push
cdq
std
jle
push
sbb
pop
bound
add
shl
pop
jno
add
adc
stos
in
daa
sahf
dec
jl
dec
add
mov
mov
fnstsw
movs
out
cmps
out
dec
push
push
jbe
(bad)
xchg
repnz
bound
jns
push
imul
sbb
adc
les
xor
inc
sub
ret
scas
out
mov
mov
add
sbb
pop
popf
push
push
and
mov
movs
jns
pop
or
in
scas
cld
dec
xchg
or
cmp
mov
jg
ds
mov
jle
dec
shl
(bad)
mov
in
sti
icebp
mov
push
inc
or
mov
test
pushf
les
pusha
jecxz
xchg
idiv
outs
sub
fmulp
mov
jno
jo
hlt
sbb
fdiv
mov
jbe
aaa
dec
pop
idiv
mov
(bad)
mov
mov
push
mov
nop
add
push
imul
jp
arpl
cmps
or
mov
push
push
fdivr
pop
cmp
lods
out
mov
xchg
out
pop
xor
mov
inc
push
or
pop
mov
popa
adc
sbb
int
(bad)
mov
xchg
cmc
fld
enter
inc
and
dec
xor
pop
push
dec
jb
push
mov
inc
and
xchg
jge
dec
cmp
lods
faddp
fld
lea
push
xchg
mov
out
xchg
fistp
mov
fld
xchg
call
mov
std
xchg
test
xor
nop
or
mov
pop
outs
dec
and
lahf
jmp
adc
add
lods
sbb
add
mov
call
adc
fcom
(bad)
sar
les
mov
and
xlat
xchg
ficomp
xchg
retf
cmp
mov
retf
mov
xchg
or
cs
pop
mov
mov
iret
adc
sti
popf
shr
xlat
nop
cmp
test
sbb
dec
ins
push
add
(bad)
fnstcw
pop
imul
push
pop
sbb
adc
mov
mov
nop
push
xor
iret
mov
cmps
jo
add
cmp
cld
or
stos
movs
pop
popf
fisttp
add
adc
cmps
mov
ffree
xchg
jb
ret
xlat
xchg
mov
ret
nop
inc
jne
dec
mov
fild
xor
movs
hlt
xchg
push
push
xchg
mov
outs
mov
mov
xor
bound
int
aad
inc
xor
or
adc
or
add
sbb
add
xchg
jl
xor
jmp
(bad)
pop
push
sub
pop
push
adc
imul
and
stos
iret
lods
inc
xor
cli
stos
jmp
push
lahf
int3
mov
pop
mov
and
jns
jge
pop
inc
sbb
movs
enter
jne
rcr
rcl
popf
rol
test
mov
add
in
(bad)
mov
pop
xchg
test
push
xchg
jmp
js
push
xchg
jnp
cmp
xlat
cld
lock
int3
pop
mov
ins
outs
das
daa
out
icebp
mov
jbe
(bad)
mov
jg
lds
sti
push
inc
or
xor
in
in
scas
cmc
and
stos
xlat
jns
loop
xchg
cdq
rcl
(bad)
stos
fadd
sbb
and
dec
cs
push
inc
add
dec
adc
push
or
adc
jge
pop
sbb
imul
push
sub
push
sbb
jle
inc
push
push
aaa
push
adc
inc
pop
pusha
and
adc
inc
pop
pop
pop
cmp
inc
inc
pop
adc
xor
push
pop
idiv
inc
push
cmp
repz
mov
lahf
cs
outs
push
or
add
loopne
cs
icebp
xchg
sub
xlat
mov
dec
imul
mov
dec
pop
int3
test
call
scas
neg
ss
mov
movs
in
scas
dec
push
cmp
xor
stos
in
packuswb
iret
mov
pop
xchg
les
mov
push
aaa
jo
cmc
fwait
jmp
jp
std
mov
cmp
push
dec
sub
mov
pop
and
hlt
movs
in
push
inc
pop
pop
sub
icebp
mov
leave
call
jns
push
int
mov
add
retf
xor
sbb
add
cmp
fs
sbb
enter
xlat
or
push
(bad)
push
mov
sub
dec
sub
scas
adc
cld
fistp
add
outs
jno
or
pop
sbb
mov
fld
dec
pop
inc
and
mov
and
xor
retf
int3
mov
out
cli
mov
push
jle
xor
(bad)
ds
and
enter
fwait
push
xor
iret
aam
hlt
loope
xchg
test
pop
je
les
sub
pop
pop
jae
inc
or
add
mov
addr16
and
(bad)
mov
rcl
ja
jno
leave
retf
push
mov
mov
lods
or
aad
(bad)
test
pop
xor
outs
inc
add
mov
jp
inc
jp
inc
and
mov
sahf
push
cmp
mov
bound
dec
mov
stos
repz
mov
into
xchg
add
ret
adc
cs
imul
jmp
xor
sbb
fadd
sub
mov
fwait
add
or
mov
or
adc
int
push
ds
lods
push
dec
or
sub
xchg
movs
sub
pop
cmp
mov
scas
add
pop
jnp
adc
add
sbb
xchg
xlat
dec
cmps
and
or
ja
pop
cmps
call
add
es
inc
inc
imul
jmp
jo
cmps
punpckldq
fsubr
pop
test
scas
sbb
(bad)
mov
adc
jnp
out
fist
jl
loop
repz
sub
loope
(bad)
add
jo
std
xchg
fcom
outs
push
pop
xchg
or
stc
mov
sub
cwde
int
lahf
shr
repnz
jno
inc
aad
mov
and
call
sub
sti
test
test
pop
adc
sti
(bad)
(bad)
in
scas
out
mov
imul
rol
lea
in
daa
mov
sahf
inc
xor
sar
das
push
shl
jo
sbb
dec
mov
arpl
sub
mov
cwde
push
inc
sbb
out
pop
sub
iret
xchg
xchg
push
js
and
sbb
push
stc
loop
mov
jp
inc
popf
add
sbb
sbb
iret
sbb
mov
pop
cdq
in
mov
into
pop
or
jnp
jle
ins
sub
pop
inc
xor
pop
push
dec
punpcklwd
dec
cmp
inc
pop
dec
sub
cmp
push
and
cmp
movd
dec
or
ins
ss
add
sbb
pop
sub
add
and
push
inc
sub
jo
jns
push
xor
ins
add
popa
pop
push
and
ds
and
push
adc
icebp
rol
mov
jle
and
adc
aam
lods
fild
push
aaa
push
fwait
das
dec
sti
add
lods
lahf
xor
into
cmc
cmps
les
aas
nop
aam
das
lahf
ficom
mov
cmps
out
and
jne
ret
xchg
ror
ins
pop
pop
call
ror
and
lods
call
fldcw
call
xchg
sub
inc
and
pop
inc
adc
in
cmc
sub
xchg
pushf
add
mov
mov
imul
add
jmp
mov
add
loopne
popf
push
push
cmc
adc
sub
repnz
popa
xchg
and
cmp
mov
and
mov
sar
cmp
repnz
or
sahf
leave
xor
(bad)
mov
lods
loope
sub
gs
das
jbe
repnz
into
iret
test
ret
leave
sahf
fsub
lods
out
stos
push
and
mov
rol
cmp
add
push
cmp
fs
add
add
retf
mov
pop
repnz
push
js
outs
das
mov
in
or
daa
stos
adc
sbb
ror
pop
inc
cmp
pop
pop
stos
lock
out
mov
mov
jle
inc
inc
pop
adc
dec
sbb
push
xor
cs
adc
add
pusha
(bad)
cld
add
jbe
jp
sub
in
out
mov
cmc
jmp
pop
je
xor
imul
mov
pop
push
mov
stos
fadd
fcmovnu
mov
cld
xchg
lea
pop
pop
inc
push
and
popa
add
xchg
push
add
leave
scas
ds
cwde
nop
jnp
out
stos
es
cmps
inc
aam
lods
arpl
sub
cmp
jle
pop
cmp
or
xchg
call
shr
hlt
xchg
ins
js
cmp
ss
inc
loopne
cli
push
mov
hlt
call
movs
mov
lock
add
repnz
add
lea
cmp
js
jae
mov
(bad)
test
lods
and
das
in
sub
add
jns
dec
pop
sbb
std
jge
daa
aad
test
adc
push
mov
sbb
jecxz
std
lahf
test
mov
and
hlt
push
retf
or
jb
fmul
aas
clc
lods
(bad)
cmps
jmp
xchg
and
cmp
aad
push
xor
xor
sahf
dec
mov
test
dec
and
in
mov
inc
pop
push
getsec
jg
push
repnz
jg
popf
mov
adc
add
in
shr
addr16
repz
cmps
test
pop
lock
xchg
add
cli
std
dec
leave
push
(bad)
xchg
outs
inc
outs
dec
out
or
mov
retf
js
push
push
into
and
fadd
jmp
xor
ja
icebp
or
(bad)
pop
inc
push
dec
and
gs
es
jae
mov
paddsw
mov
pop
test
(bad)
stos
shl
jmp
adc
mov
pop
inc
(bad)
mov
call
inc
mov
ror
retf
mov
sub
les
and
mov
ss
mov
cwde
hlt
test
sub
pop
xchg
frstor
adc
sahf
push
inc
or
loop
cmp
mov
mov
mov
mov
js
dec
(bad)
and
xlat
call
out
cmp
push
imul
adc
popa
cmps
popf
jmp
fcom
cmps
addr16
mov
cli
jbe
sbb
aas
dec
ins
xchg
jg
outs
jecxz
out
dec
and
dec
test
push
ss
cmp
icebp
or
and
frstor
mov
cmps
aam
and
ror
mov
lods
and
imul
and
and
xchg
int
mov
adc
fstp
shl
mov
jae
ret
jl
mov
push
push
ins
mov
cmp
or
out
xchg
and
int
push
inc
add
add
mov
mov
mov
in
xor
mov
addr16
pop
loop
pop
test
pop
cdq
adc
pushf
(bad)
stc
pop
movs
test
aam
aaa
jle
mov
aam
fdivrp
mov
cmp
out
popa
jns
mov
push
test
ins
xor
xor
add
sar
jns
lock
jmp
xchg
push
mov
sub
ds
pop
mov
add
out
add
call
js
lds
pop
dec
ds
pop
dec
movs
icebp
(bad)
stc
aas
xchg
dec
lods
sub
add
fsubr
icebp
ins
cli
or
adc
jmp
out
fdivp
in
int
push
pop
dec
or
jle
lea
(bad)
lock
jge
inc
push
(bad)
xchg
(bad)
leave
pop
enter
or
pop
out
cmp
rcr
jns
mov
popa
pop
mov
pop
lods
stos
jns
adc
lods
call
push
sti
xchg
pop
sbb
mov
mov
xchg
jns
sahf
or
pop
lock
cmp
mov
mov
adc
dec
cwde
mov
push
retf
(bad)
pop
or
inc
push
iret
repnz
nop
mov
inc
mov
shr
mov
or
push
(bad)
enter
add
ror
(bad)
mov
cmc
sbb
icebp
pop
mov
call
(bad)
mul
pop
pop
enter
call
jbe
adc
fs
rcl
xlat
or
dec
add
pop
mov
jmp
aas
loop
mov
adc
push
sub
pop
pop
ja
sbb
sub
adc
ret
jo
ror
cmps
les
pop
or
pop
dec
icebp
cmc
or
aas
out
outs
xchg
jae
in
lods
enter
mov
push
popf
push
movs
mov
fisubr
jno
les
jecxz
(bad)
adc
mov
xchg
mov
or
inc
mov
fadd
xor
or
in
or
sti
bound
mov
mov
es
frstor
dec
fidiv
add
movs
xchg
mov
mov
xor
push
adc
sbb
xor
je
mov
xchg
addr16
inc
cmc
les
pushf
jp
add
jl
xor
inc
xchg
dec
icebp
das
xchg
sbb
test
pop
test
mov
movs
repz
test
mov
in
inc
sub
int3
add
mov
addr16
call
push
in
xchg
xchg
test
add
pusha
je
call
jb
xchg
mov
xchg
push
mov
fisttp
int3
scas
aaa
jne
rol
push
fst
inc
into
outs
sbb
mov
xlat
addr16
xchg
repz
inc
fistp
stos
or
repz
sub
popa
adc
fadd
mov
in
dec
mov
push
out
fiadd
adc
mov
jae
add
out
or
mov
(bad)
pop
sub
movs
cmp
jne
dec
xchg
movs
div
ret
lods
mov
cmc
dec
sbb
sbb
test
inc
cmp
jmp
fild
cmps
xor
movs
push
mov
mov
inc
adc
push
lods
lods
jno
bound
mov
rcl
scas
sub
sub
xlat
lea
jge
and
inc
stos
inc
addr16
rcl
rcl
and
xchg
adc
pop
popa
dec
xor
push
cli
jge
sbb
sub
call
lea
sbb
pop
loopne
mov
frstor
xor
dec
out
fisttp
loope
sbb
gs
pushf
sbb
xchg
mov
or
lods
rol
cs
gs
pop
mov
mov
jmp
dec
mov
push
cdq
fnstenv
mov
daa
call
xchg
push
jns
fstp
dec
push
cmps
stc
sub
push
sbb
mov
cmps
push
pop
push
cmp
dec
jae
sahf
pop
push
pop
mov
sti
dec
and
aad
pop
mov
mov
mov
loopne
or
enter
fs
lea
xchg
iret
cwde
push
or
shl
xor
mov
mov
mov
cmp
inc
aaa
jmp
push
or
xchg
sbb
pushf
xor
inc
sti
in
in
loop
iret
push
mov
repz
mov
rol
out
mov
outs
jecxz
xchg
sbb
cmp
dec
mov
cmps
xor
(bad)
clc
(bad)
xchg
or
lds
data16
xor
sub
jb
(bad)
cmp
xchg
add
pop
neg
or
cdq
arpl
pop
mov
pop
and
imul
or
jge
mov
mov
push
es
add
test
cs
sbb
cmc
aaa
and
aad
xchg
inc
pop
lods
adc
ret
pushf
cmp
mov
mov
adc
push
push
sbb
daa
sub
rol
lods
out
xchg
push
mov
sub
(bad)
das
adc
and
aam
and
cmp
repnz
cmps
cdq
test
mov
or
adc
inc
mov
dec
pushf
repnz
ins
sar
lahf
add
test
or
mov
addr16
xlat
call
pushf
retf
cmp
dec
fnsave
outs
or
ja
fstp
fdivr
xchg
and
push
scas
push
sbb
mov
or
mov
sub
rcr
pop
enter
pop
shl
(bad)
jg
jl
lds
xchg
icebp
mov
lods
and
out
xchg
call
dec
and
imul
and
cmc
std
adc
dec
retf
dec
enter
and
call
dec
mov
popa
(bad)
sbb
jp
jecxz
js
(bad)
retf
inc
retf
jne
fistp
pushf
jl
inc
movs
mov
sbb
xchg
loop
mov
xchg
xchg
xchg
push
imul
call
add
call
stc
or
cmp
xor
ret
push
cmp
in
mov
inc
stc
pushf
xchg
inc
lock
lock
jae
(bad)
lods
int3
dec
and
movs
in
push
pop
mov
test
rcr
pushf
int3
pop
rcr
sti
cmp
mov
(bad)
stc
add
cmp
jle
adc
xchg
mov
movs
loop
mov
aad
bound
cwde
xchg
mov
ja
dec
add
push
push
fisttp
inc
test
adc
int
push
sub
mov
cld
sbb
inc
dec
loop
das
mov
in
daa
pusha
into
fs
push
test
push
hlt
pushf
sub
sbb
sahf
test
push
mul
or
xchg
cmps
scas
sbb
cmp
aam
cld
mov
inc
jmp
cmp
rcl
cmp
bnd
and
fsub
mov
data16
jge
das
or
and
adc
and
pop
cmp
bound
pusha
call
xlat
test
pop
or
repnz
fnstcw
and
mov
jg
out
loope
(bad)
dec
loop
cmp
loopne
dec
jbe
es
jno
inc
adc
inc
jmp
mov
inc
cs
xor
cmp
add
in
sbb
cmp
adc
gs
daa
mov
dec
adc
pop
pusha
les
sub
out
dec
scas
mov
into
test
jle
adc
cmps
les
int3
dec
js
cdq
(bad)
dec
cmp
and
sbb
and
sbb
sbb
pop
mov
les
mov
imul
scas
std
cmp
push
jno
aas
xchg
dec
stos
mov
in
(bad)
bound
lods
adc
int3
mov
mov
cs
dec
stos
ss
jo
in
pop
adc
or
cmp
cmp
shl
xchg
and
cld
pavgb
push
(bad)
mov
cmc
gs
sbb
push
retf
dec
mov
js
pop
add
jne
or
jmp
movs
cmp
cmc
dec
or
dec
ret
or
dec
sub
mov
into
mov
inc
stc
or
sahf
loope
test
dec
or
(bad)
jae
nop
fwait
xor
inc
je
lods
jg
xchg
fcmovb
in
test
int
mov
cmp
push
pop
or
xlat
(bad)
addr16
cdq
cmc
cmps
jge
idiv
aad
ret
sub
into
xchg
daa
stos
(bad)
sbb
mov
repz
adc
add
enter
dec
leave
loopne
ret
push
sbb
cmp
mov
sub
mov
es
mov
jg
cwde
push
xchg
cmp
cmp
pop
ja
movs
imul
ins
mov
pop
(bad)
dec
int
mov
das
pop
mov
xor
jp
rcr
lds
aad
ds
push
cmp
xchg
push
rcr
push
xchg
sbb
sbb
jae
ffreep
push
into
push
lahf
js
fist
xor
and
mov
pusha
xchg
jge
pop
push
mov
push
and
std
fstp
xor
add
(bad)
das
dec
sbb
enter
jl
ror
pop
add
aam
repnz
mov
into
jmp
dec
gs
adc
(bad)
cdq
call
xor
mov
in
enter
out
sbb
fst
dec
ret
jae
dec
popa
sar
rol
in
sub
mov
add
mov
mov
jp
stos
jbe
jl
jp
xchg
call
ds
aad
pop
test
sbb
repnz
pop
and
js
cmp
adc
push
sahf
sti
outs
ret
jl
(bad)
in
icebp
adc
or
jo
sub
xlat
mov
es
jmp
loopne
sub
adc
dec
call
ja
test
data16
cmp
enter
dec
push
sub
mov
mov
stos
in
scas
(bad)
cld
in
adc
(bad)
loop
addr16
inc
cmps
fcom
(bad)
popa
jmp
jo
mov
lahf
mov
or
pop
sbb
fdiv
fldcw
sub
xor
loopne
jl
adc
lods
mov
(bad)
jns
pop
or
xor
idiv
mov
dec
arpl
mov
sub
pop
cli
lock
jo
mov
cmp
sub
in
inc
adc
jo
retf
xchg
lar
and
lds
ins
(bad)
jmp
(bad)
cdq
movs
gs
outs
xchg
daa
push
lds
and
ins
mov
push
cmp
jbe
sbb
cmp
xor
(bad)
jge
xchg
push
test
je
xchg
push
push
cmps
jge
pusha
fs
data16
iret
pop
lods
(bad)
fisub
mov
inc
sub
xlat
dec
xor
mov
lds
sub
adc
rol
test
pop
je
dec
add
fmul
xchg
stos
popa
jb
arpl
push
or
div
lods
mov
pop
daa
dec
sub
shl
mov
cmp
xchg
rcl
cdq
nop
xor
xchg
into
fmul
sbb
ss
(bad)
push
jns
std
add
dec
or
clc
pop
(bad)
sbb
inc
shl
mov
loop
das
cwde
inc
pop
sub
dec
daa
pop
rol
cwde
iret
mov
repnz
push
or
xchg
cwde
xchg
mov
xor
add
arpl
stos
cmp
push
retf
push
std
dec
repnz
sbb
inc
rcr
aas
imul
or
je
cld
aas
jne
mov
outs
sbb
mov
mov
iret
mov
dec
sahf
into
jo
xor
(bad)
nop
ins
mov
test
(bad)
xchg
add
loopne
pop
ins
leave
adc
inc
cmp
or
outs
cmp
scas
cmp
sti
inc
xor
push
mov
and
jp
mov
inc
cmp
sbb
adc
push
clc
push
pop
inc
xor
dec
push
dec
or
popf
or
movs
dec
xlat
cmp
std
(bad)
fistp
push
jmp
neg
pop
pop
jge
add
int3
mov
mov
lock
cmps
xor
mov
out
call
mov
leave
dec
and
gs
dec
or
sar
xchg
inc
xchg
mov
jne
dec
sbb
push
push
push
test
sbb
lds
in
sub
xor
xchg
adc
push
sub
xchg
mov
or
mov
mov
sub
xchg
dec
(bad)
nop
std
popf
in
rcl
cmp
fiadd
iret
push
or
clc
push
sbb
lock
jg
mov
pop
jl
fcom
retf
shr
repz
cdq
jmp
(bad)
repz
and
xor
mov
popa
xchg
retf
and
adc
cmps
fist
pop
xor
dec
cmp
sub
inc
ss
sbb
retf
lahf
iret
loop
push
nop
hlt
addr16
inc
fsubr
mov
adc
sbb
pushf
in
jmp
dec
mov
cmc
cld
stc
jp
xchg
idiv
pop
test
div
lods
(bad)
rcr
fwait
inc
mov
shl
or
cmps
sub
add
mov
ins
jae
hlt
in
scas
(bad)
jle
es
ja
idiv
cli
mov
cld
sbb
pop
jne
ret
sti
jecxz
jo
dec
gs
xchg
(bad)
xchg
jle
mov
into
stos
ja
xor
jp
fwait
mov
mov
iret
data16
dec
or
sbb
loopne
inc
pop
push
dec
retf
cmp
cld
xor
lods
cmp
in
push
mov
out
gs
jg
inc
shr
das
mov
fwait
call
xchg
lahf
inc
mov
shl
mov
push
add
dec
jae
leave
adc
or
xlat
xor
cld
aad
neg
add
dec
lock
add
push
pop
aam
or
repnz
mov
bnd
popf
cmps
aad
mov
mov
ror
xchg
mov
cwde
mov
add
pop
mov
mov
loopne
pop
into
mov
lahf
std
stos
pop
or
dec
push
dec
pop
mov
(bad)
xchg
add
inc
fisub
(bad)
xchg
ja
cld
dec
mov
cmp
jb
adc
xchg
push
jecxz
jmp
arpl
std
dec
xchg
mov
mov
dec
in
pushf
in
ret
xor
jge
and
push
fldcw
call
inc
mov
in
out
cs
fwait
add
push
jbe
mov
jb
inc
add
lahf
stos
xor
inc
push
inc
es
mov
and
and
faddp
test
popa
xchg
cmp
and
jp
gs
das
pop
jp
test
xor
fild
sbb
mov
stc
ficom
mov
imul
enter
repz
loop
xor
cmc
cmp
jmp
adc
dec
sbb
add
adc
mov
sbb
out
cmp
pop
test
sahf
outs
add
mov
lds
in
scas
lock
fst
mov
pop
mov
lods
scas
loope
pop
pop
test
pop
sub
push
xchg
es
jmp
xchg
outs
rcr
fs
push
enter
out
fcomp
sub
xor
add
push
(bad)
fst
bswap
and
fmul
sub
ds
inc
loop
pop
mov
sub
inc
fs
lods
pop
mov
sahf
lsl
data16
imul
mov
popa
mov
sub
pusha
xor
sbb
jl
jge
push
adc
pop
pushf
push
sbb
add
rcr
ret
xor
iret
movs
xchg
pop
call
and
ficomp
add
jmp
(bad)
cmp
call
cs
lds
cmp
xor
or
pop
in
out
xor
rcl
clc
stos
test
xchg
rcr
cmc
or
inc
jle
jmp
mov
push
inc
push
mov
lds
shl
ret
mov
mov
lahf
pop
adc
mov
(bad)
fidivr
mov
call
scas
mov
in
cmp
sub
xchg
ror
xor
xor
lahf
inc
cmp
leave
out
scas
dec
cli
inc
in
(bad)
stc
cmp
test
popa
or
jnp
mov
(bad)
xchg
mov
mov
(bad)
xchg
mov
ret
aam
sub
movs
stos
stos
and
cmc
jmp
sti
lahf
stc
test
jne
sub
(bad)
jne
pop
shl
bound
sbb
adc
imul
out
jg
shl
js
add
sub
daa
fsub
pop
adc
ja
pop
cmc
je
mov
shl
js
cmps
jne
xlat
fcmovbe
gs
addr16
pop
push
(bad)
out
aaa
clc
mov
lahf
fadd
and
test
aad
sahf
dec
and
push
addr16
aaa
xor
cmp
jmp
shl
fs
bound
or
pushf
lods
jle
mov
pop
out
mov
sub
pop
gs
sub
mov
mov
mov
or
ret
pusha
scas
(bad)
call
(bad)
ss
or
mov
out
pop
mov
adc
jbe
or
jmp
push
push
aaa
push
repz
push
add
xchg
push
add
sub
or
dec
sbb
sbb
dec
adc
inc
jne
das
sub
xlat
inc
xor
adc
mov
sub
inc
xor
push
adc
jl
into
sub
call
jb
push
sub
dec
or
dec
and
pop
push
push
ss
xor
dec
mov
loope
jle
outs
or
icebp
xchg
rol
mov
xchg
scas
in
sahf
mov
xchg
mov
shl
test
fstp
loope
hlt
scas
int3
arpl
inc
and
push
je
push
cmp
push
ds
push
adc
inc
sub
cmp
cmp
push
sub
ins
das
dec
jecxz
les
mov
xchg
sar
mov
retf
cmps
in
ret
lock
inc
jo
cmps
aam
jmp
fistp
mov
push
imul
jl
xchg
out
add
xchg
movs
xchg
mov
hlt
mov
jge
mov
mov
mov
xor
push
push
push
add
push
sbb
mul
pop
loopne
push
push
pop
and
inc
push
push
sub
jbe
popa
or
sbb
cmps
lods
mov
lahf
ret
outs
sbb
hlt
mov
jmp
xor
push
sub
inc
adc
cli
push
adc
mov
or
gs
cmp
rol
rcl
call
mov
dec
sbb
in
sub
xor
jg
push
sbb
dec
or
jecxz
neg
mov
repz
call
scas
idiv
pop
sbb
or
iret
pusha
or
jl
xchg
aam
aad
xor
ror
es
in
jne
inc
in
(bad)
std
movs
in
mov
mov
sub
xor
xor
cmp
push
xlat
push
cmp
pop
out
xchg
lock
mov
jbe
push
(bad)
mov
fst
xlat
mov
inc
add
push
adc
test
sbb
push
inc
daa
imul
or
pushf
ficomp
lds
or
jp
xchg
fiadd
dec
je
jmp
cmps
xchg
mov
test
outs
push
fsub
push
cmp
and
test
imul
hlt
mov
xchg
jmp
add
je
pop
adc
add
imul
jle
sbb
mov
pushf
and
ret
xchg
rcr
xor
nop
repnz
test
lods
fsub
inc
add
pop
push
push
loop
ret
mov
sub
fcom
pop
out
add
shl
mov
fstp
movs
stos
fsubr
sub
dec
loop
test
sub
pop
in
mov
test
mov
cmp
cdq
cwde
cmp
xor
lock
mov
ss
cld
(bad)
mov
ror
lods
not
inc
push
push
jb
xor
ret
movs
imul
adc
sub
cmp
imul
pop
inc
xor
cmc
popa
lock
or
jns
push
mov
mov
sbb
ret
imul
add
pop
pusha
es
xor
cmc
mov
sub
jl
ret
ins
adc
enter
pinsrw
sbb
lods
retf
sub
sub
sbb
je
xchg
cmps
mov
cdq
aad
outs
sub
or
cmp
and
imul
xchg
in
rcl
(bad)
mov
or
sbb
dec
xor
jne
push
daa
jbe
out
(bad)
(bad)
mov
retf
test
cmps
les
pushf
arpl
pop
adc
bound
and
sub
dec
or
dec
or
sbb
xchg
div
mov
aam
fiadd
lds
dec
add
jg
addr16
sbb
sub
and
into
addr16
das
push
shl
inc
or
cmp
xchg
mov
mov
int3
scas
call
aas
sbb
aas
bound
lock
lds
pusha
cmp
inc
add
fisubr
push
sub
adc
xor
dec
add
inc
orps
pusha
xchg
mov
mov
outs
sub
(bad)
arpl
call
xchg
jns
in
leave
ins
cmc
stos
jnp
xor
jl
fdivr
shl
xor
retf
(bad)
imul
sti
mov
jo
movs
rcl
pop
ds
xor
pop
cmp
in
retf
mov
pushf
cmc
xchg
mov
pop
shl
push
sti
sub
mov
mov
gs
or
cmp
pop
loope
sub
inc
iret
lods
(bad)
lahf
cli
inc
test
mov
inc
shl
jg
push
jmp
sbb
and
scas
int
pop
sbb
mov
call
mov
mov
push
cmp
cmp
or
add
add
call
in
ret
mov
sbb
mov
icebp
mov
mov
push
movs
loopne
and
push
xor
jp
lock
lock
cwde
adc
bound
jp
sti
lods
iret
data16
dec
mov
lds
test
leave
xor
push
emms
rsqrtps
inc
xor
push
sub
cmp
or
xchg
lds
(bad)
stos
jmp
lahf
or
iret
and
push
jno
jl
addr16
mov
mov
pop
adc
and
mov
sub
clc
mov
scas
pop
sbb
mov
cmps
retf
or
mov
sub
push
fisub
loop
fisubr
xchg
and
mov
push
push
jno
aaa
inc
add
pop
out
test
ficom
cmp
dec
icebp
mov
or
mov
rcr
add
jnp
and
das
retf
test
mov
pop
adc
pop
divps
sub
nop
or
adc
mov
xchg
test
jb
push
int
scas
int3
scas
call
call
out
sar
mov
mov
jle
jl
push
adc
pop
add
inc
or
jg
(bad)
and
fwait
data16
sahf
in
mov
(bad)
sahf
int3
xchg
cli
mov
ficom
sub
adc
add
jno
arpl
aad
repnz
cdq
(bad)
lahf
imul
and
in
adc
scas
lahf
test
mov
pop
clc
mov
aam
(bad)
push
pop
cmps
dec
jp
cli
cmp
pop
loopne
pop
xor
dec
push
inc
add
pushf
movs
out
mov
jbe
sbb
mul
sub
dec
mov
pop
add
xchg
xchg
jle
dec
or
jl
jae
(bad)
cmp
mov
add
adc
push
or
in
pop
cmp
int3
push
sbb
out
xchg
mov
test
jne
xchg
stc
mov
push
and
jmp
mov
inc
xor
es
mov
call
fnstsw
and
movs
xor
leave
addr16
xor
out
scas
in
loop
mov
mov
xchg
shl
pop
sbb
jge
xor
push
(bad)
mov
mov
mov
aam
pop
mov
test
xor
and
loop
into
pop
pop
xchg
cmp
cmp
jg
sbb
or
in
rol
pop
jne
pop
add
lods
jge
or
pusha
xchg
dec
(bad)
psubb
ja
jno
out
xchg
in
jbe
in
pusha
or
out
retf
mov
(bad)
sahf
repz
xlat
mov
xchg
fidiv
jp
inc
or
in
mov
mov
repz
or
push
push
inc
fcomp
adc
cwde
cmp
aad
out
imul
sbb
inc
adc
cmps
les
fst
or
mov
cdq
shl
or
adc
scas
call
iret
test
or
lea
mov
cdq
pop
movs
les
retf
mov
xchg
call
dec
mov
pop
push
clc
mov
ret
daa
out
lahf
scas
test
jg
gs
mov
dec
add
pop
add
dec
inc
or
es
push
adc
jnp
sub
gs
sub
ins
or
or
out
rcr
sti
jo
ss
rcr
jmp
jb
out
mov
sub
dec
loopne
enter
jne
add
das
dec
in
mov
data16
mov
lahf
dec
mov
(bad)
sbb
shl
icebp
mov
add
pop
sbb
or
in
fisttp
push
pop
jge
imul
adc
lock
ds
popa
or
loop
mov
fwait
jge
mov
mov
cs
add
out
fist
ins
or
pop
(bad)
adc
jg
pop
cmp
xor
inc
stc
xchg
mov
shl
ss
push
lds
std
lahf
jl
mov
test
inc
mov
xchg
push
mov
adc
xchg
shl
add
push
scas
dec
adc
add
mov
pop
and
inc
gs
out
push
jno
fadd
in
inc
mov
pop
jl
sti
pop
cmp
cmp
ja
jecxz
pop
sbb
adc
outs
xor
jb
das
sbb
inc
and
das
pop
mov
dec
fstp
sbb
mov
aad
aam
out
pop
test
ficom
jge
ins
xor
xor
push
sub
xchg
(bad)
xchg
in
dec
aam
ret
mov
add
xchg
neg
stos
shl
add
cmp
jb
push
loope
xlat
mov
sub
scas
call
pop
sbb
aam
clc
xor
dec
andnps
fs
cmp
dec
xorps
xchg
into
cwde
pop
sbb
je
jns
inc
outs
sub
mov
lahf
mov
fistp
movs
adc
push
or
push
jae
and
mov
int
loop
stc
mov
cs
or
les
xor
add
ins
out
xor
add
popa
mov
(bad)
ret
popa
cwde
fld
xor
arpl
lods
lock
and
cli
cwde
retf
sahf
mov
out
rcr
jae
xor
jp
dec
std
fldenv
jg
imul
out
mov
enter
enter
sub
jne
arpl
js
cmp
inc
in
sti
bound
repz
pop
dec
add
sbb
sub
retf
cmps
sar
jecxz
fidiv
ins
sub
add
aam
std
mov
xchg
mov
sbb
outs
sub
pop
adc
cmp
cmp
jbe
add
push
sub
push
das
pop
in
fild
push
push
push
inc
cmp
and
sti
mov
xchg
int3
test
sahf
cwde
fisttp
daa
push
pop
repz
je
mov
xchg
fmul
dec
and
jg
and
jl
xor
jp
jp
pop
loop
ins
outs
push
adc
mov
std
(bad)
fidivr
and
fild
jecxz
adc
jle
push
shl
mov
jge
xor
dec
sub
imul
sahf
pushf
inc
add
and
mov
push
pop
sbb
icebp
imul
xchg
inc
mov
xchg
mov
gs
je
and
xor
js
bound
jns
js
cmp
pop
or
cmp
pop
pop
inc
scas
pop
ins
push
int
rcl
dec
pop
dec
out
add
fmul
inc
out
lahf
fadd
cmps
aam
add
push
mov
movs
mov
inc
mov
test
or
sbb
ss
jbe
mov
iret
cmp
pop
pop
retf
or
dec
push
inc
hlt
add
test
movs
leave
pushf
mov
lods
enter
or
ja
cmp
cdq
sti
mov
aad
shl
imul
sub
push
cmp
das
ins
cmp
loop
dec
out
mov
push
dec
add
xchg
xchg
clc
mov
xchg
(bad)
fild
out
sbb
jns
cmp
xchg
mov
es
cmp
pop
aam
icebp
xchg
scas
icebp
mov
mov
stos
imul
ins
mov
mov
scas
lock
je
push
in
add
xor
outs
xor
push
shl
shr
and
lock
clc
xor
arpl
jb
adc
sbb
dec
or
leave
xchg
stc
xchg
or
cmc
mov
(bad)
sbb
inc
push
push
sbb
sub
jecxz
out
jo
and
movs
mov
pop
in
add
movs
shr
mov
jmp
sbb
nop
cld
sub
add
and
outs
or
jmp
mov
mov
fst
cli
mov
rcl
and
inc
adc
mov
xchg
repnz
test
out
cwde
sti
mov
xchg
xlat
(bad)
fisttp
loopne
leave
xchg
cwde
icebp
mov
cdq
fimul
rol
rol
imul
dec
or
xchg
fstp
inc
and
sub
enter
sbb
jns
fisttp
mov
mov
fcomp
cmp
pop
adc
or
clc
jbe
and
or
pop
das
jb
or
(bad)
scas
loope
mov
or
xor
jns
push
adc
pop
ror
jmp
push
xor
pop
dec
pop
jno
sub
dec
adc
push
xchg
scas
into
jne
jne
rcl
fwait
rol
test
xchg
into
mov
mov
xchg
gs
push
pop
je
push
adc
pop
sbb
ror
bound
inc
pop
jb
inc
adc
add
cld
(bad)
retf
(bad)
mov
xor
arpl
xchg
shl
(bad)
aam
and
dec
adc
popf
rcl
into
lods
jmp
les
movs
ret
jne
jae
aaa
test
cmp
adc
outs
or
push
adc
in
mov
push
adc
mov
(bad)
xchg
mov
test
mov
xor
adc
xchg
std
lea
add
sahf
stc
adc
aaa
jle
in
jle
dec
ss
movs
(bad)
cdq
movs
sar
inc
adc
xchg
mov
mov
nop
movs
mov
cli
mov
sbb
scas
in
mov
cld
sub
xchg
dec
cmp
jo
inc
ret
xchg
std
mov
call
xor
pop
adc
out
(bad)
mov
pushf
fdiv
jecxz
ret
mov
xchg
fistp
test
arpl
push
adc
cdq
fst
(bad)
into
mov
lahf
sar
stos
call
xchg
inc
cmc
cs
pop
dec
das
adc
fnstsw
mov
sbb
mov
mov
and
sbb
push
cmc
xor
test
adc
inc
adc
mov
mov
pusha
fisubr
fistp
sub
mov
ror
pop
aas
jbe
pop
in
mov
data16
mov
(bad)
aad
std
mov
scas
jl
retf
ins
jecxz
adc
sub
push
sbb
mov
jmp
add
mov
xlat
mov
xor
call
test
pushf
fisttp
dec
xchg
xor
add
scas
(bad)
sahf
xchg
arpl
sub
in
into
lods
fisubr
iret
(bad)
in
mov
mov
test
test
rcr
add
mov
and
je
push
xor
pop
xor
test
pop
aaa
js
dec
sub
es
sub
test
jg
xor
(bad)
cmp
movs
jne
inc
sbb
ficomp
mov
aam
mov
test
neg
movs
ret
mov
inc
add
call
xor
ds
push
clc
test
cmp
and
pop
mov
push
inc
add
dec
cwde
cmps
xlat
mov
(bad)
ss
or
jne
inc
repz
stos
leave
mov
jg
data16
arpl
push
sub
shl
push
adc
cdq
not
fidiv
jae
dec
out
cmp
cmp
ret
mov
mov
les
cmp
loopne
adc
icebp
imul
scas
pop
xor
push
cmp
and
ucomiss
jns
push
pop
cmovp
jp
test
jns
dec
sub
add
scas
ret
mov
ror
and
ds
mov
mov
jno
push
adc
dec
pop
aaa
ret
scas
into
mov
dec
fstp
rcr
pushf
lock
xchg
xchg
out
lock
movs
aam
(bad)
jl
jns
inc
loop
inc
add
(bad)
mov
mov
sub
add
fbstp
call
mov
mov
mov
in
mov
or
push
adc
add
push
xchg
rol
jne
mov
mov
lods
hlt
jl
xchg
leave
mov
jmp
idiv
jno
dec
or
jnp
dec
loopne
(bad)
in
int
sub
push
or
ins
es
retf
mov
mov
lock
lahf
xor
popa
sti
and
ins
sub
enter
sub
jb
ins
xor
outs
or
int3
aas
pop
cmp
dec
or
fwait
ret
mov
mov
mov
stos
xchg
and
jns
jbe
test
nop
sti
mov
sbb
pop
or
add
aam
or
push
push
add
dec
pop
loop
adc
inc
adc
ja
pop
cmp
lahf
(bad)
mov
or
pushf
std
mov
add
xchg
mov
pop
jle
dec
mov
push
pop
in
mov
repnz
inc
adc
pop
sbb
jle
vmread
add
popa
adc
in
test
mov
mov
pop
out
xor
xchg
test
cwde
retf
jo
nop
(bad)
mov
cmp
dec
cmovne
dec
adc
adc
or
js
es
cdq
sti
mov
mov
sub
int
loopne
scas
push
cdq
fild
push
xor
adc
mov
sub
sub
xor
daa
sbb
add
add
mov
push
dec
andnps
sub
shl
adc
scas
loopne
int3
mov
xchg
cmc
mov
push
cmovb
or
aaa
dec
sar
xchg
xlat
xchg
(bad)
lahf
test
arpl
jae
ins
cmp
pop
add
dec
or
push
movs
repnz
xchg
lds
fwait
outs
aaa
inc
add
inc
add
and
pop
retf
lahf
inc
stc
and
arpl
ds
cmps
push
adc
pop
push
imul
(bad)
xchg
sti
xchg
inc
jge
dec
add
popa
adc
push
sbb
dec
mov
pop
mov
mov
jle
jne
cmp
mov
lea
mov
xchg
(bad)
mov
jle
cmp
jo
int
aam
mov
fdivr
add
lahf
mov
in
scas
std
test
mov
in
stos
(bad)
pusha
xor
sub
les
fld
les
and
sbb
pop
cmp
dec
adc
pop
add
test
test
jecxz
std
mov
xor
sbb
cs
push
and
and
cli
mov
xchg
out
stos
fld
into
mov
xor
mov
stos
mov
cmc
and
out
aaa
push
sbb
scas
call
(bad)
pushf
les
sub
ins
(bad)
pushf
in
mov
push
adc
cmp
sub
aam
xchg
ror
int3
mov
aaa
jge
cmp
jo
fs
loop
push
xor
(bad)
std
or
push
adc
inc
push
sub
(bad)
neg
retf
cwde
mov
pop
jecxz
adc
sbb
movs
out
fistp
sbb
(bad)
mov
dec
ds
cmp
stos
xor
sub
ficomp
movs
enter
cdq
dec
pushf
rol
enter
fdivr
ror
sar
mov
push
inc
or
rcl
mov
mov
popa
test
inc
pop
pop
or
add
xchg
push
add
test
add
xchg
lds
hlt
fwait
jmp
movs
div
icebp
stos
retf
fstp
in
ror
rol
mov
mov
mov
out
stos
cmc
mov
xchg
push
xchg
fadd
inc
xchg
hlt
cwde
inc
fwait
rcl
sub
sbb
movs
push
adc
ins
sahf
fdivr
sbb
movs
dec
cmp
add
add
cwde
pop
pop
cmp
jge
int
fcomp
lahf
adc
test
mul
mov
sbb
in
int3
seto
mov
push
push
cmc
ficomp
stos
push
aaa
jb
aam
mov
out
mov
adc
repz
mov
sub
movs
sbb
fcmove
mov
inc
popa
inc
or
adc
std
(bad)
cmps
hlt
cmp
pop
pusha
dec
pop
sub
(bad)
cmps
in
popa
daa
je
stc
stos
ret
and
mov
add
mov
mov
mov
clc
rcl
dec
xchg
lods
out
cmp
dec
pop
pop
pop
out
(bad)
fidivr
lds
bound
sbb
and
fdivr
push
xlat
aad
xchg
imul
lock
push
pop
or
enter
daa
inc
mov
das
addr16
adc
or
popa
and
jbe
inc
adc
push
ins
mov
push
sub
push
jge
cmp
mov
aas
xchg
mov
cmp
inc
add
(bad)
fld
cli
out
fist
scas
pop
mov
xchg
jl
add
cli
fisttp
stos
and
and
cwde
push
arpl
sti
ret
mov
ss
loop
cmps
addr16
call
fcom
out
mov
mov
dec
stos
das
mov
push
test
(bad)
lods
jmp
std
add
test
dec
inc
inc
adc
leave
into
mov
sub
adc
aaa
(bad)
loop
push
pop
adc
mov
dec
test
imul
sbb
out
sbb
in
call
inc
or
mov
inc
rol
retf
dec
sub
xchg
or
cmps
in
stos
jmp
mov
das
imul
mov
sub
sub
push
pop
pop
cmp
or
icebp
test
(bad)
fistp
mov
sbb
and
xchg
(bad)
pop
and
lods
loope
retf
loopne
adc
pop
jo
popa
sub
pop
and
cs
add
not
jl
stos
clc
(bad)
int
mov
xchg
dec
push
pop
push
and
test
in
or
cmp
pop
dec
sbb
xor
ss
sub
popf
(bad)
mov
je
xor
adc
jmp
std
mov
imul
push
imul
sbb
sti
mov
fstp
loopne
(bad)
and
test
int
add
mov
jl
rol
ret
nop
iret
scas
jecxz
lds
add
push
push
cmp
addr16
inc
add
ins
and
and
cdq
ror
les
rcl
xlat
mov
mov
mov
fcomp
xlat
cmps
out
into
mov
xchg
lock
loopne
lock
repz
mov
mov
lds
into
xchg
hlt
fstp
mov
mov
cwde
fisubr
stc
test
jmp
mov
mov
iret
(bad)
jmp
fidiv
xlat
xchg
not
iret
mov
fstp
lahf
sar
ret
and
stc
mov
mov
mov
(bad)
mov
out
jmp
aad
std
nop
cmc
mov
mov
scas
jmp
mov
jp
pop
adc
popa
imul
das
push
lahf
or
jecxz
mov
dec
lsl
xchg
fsubr
(bad)
nop
mov
vphsubwd
mov
jno
rcl
or
call
fld
pop
dec
mov
push
(bad)
in
cs
clc
xchg
fwait
repnz
ficom
mov
and
adc
cld
mov
xor
sub
xor
shl
mov
lea
sbb
pop
arpl
(bad)
mov
jb
fidiv
adc
xor
icebp
add
or
mov
gs
mov
and
in
push
xor
jmp
inc
adc
(bad)
xchg
ror
pusha
and
bound
jo
inc
cmp
add
mov
pop
pusha
xor
jmp
push
lock
mov
push
daa
adc
jb
jbe
int
sahf
jae
dec
or
out
stc
push
jns
push
push
xor
adc
imul
leave
stos
cwde
adc
out
dec
js
cmp
cmp
cmp
loopne
aad
std
xor
lods
rol
cmp
test
sbb
hlt
enter
js
inc
aad
jne
dec
or
lea
(bad)
mov
xor
adc
xchg
adc
ret
mov
mov
jnp
(bad)
mov
cmp
repz
lea
mov
inc
mov
test
jmp
shr
cwde
xchg
add
int
mov
inc
mov
bound
add
div
xor
ficomp
or
mov
or
in
out
fidiv
pushf
jge
dec
cs
xchg
neg
pop
xor
sbb
sti
mov
pop
inc
cs
aad
stos
jecxz
mov
lds
ds
fsub
mov
enter
push
adc
aad
(bad)
aas
stos
sbb
iret
icebp
mov
jae
lods
adc
mov
adc
sbb
dec
and
out
fcmovu
nop
fbstp
jp
dec
or
fst
mov
fwait
in
lods
hlt
clc
mov
add
ins
cmp
mov
xchg
sbb
imul
add
or
and
inc
jb
imul
xor
cmp
ja
push
dec
and
cmp
ja
pop
push
jge
xor
sub
jmp
push
adc
mov
ficom
mov
xchg
jmp
pop
mov
dec
sbb
jmp
clc
mov
in
dec
ja
es
test
xor
or
mov
and
(bad)
ins
sbb
daa
je
in
pop
xor
data16
bndstx
push
cmc
cwde
call
js
pushf
xor
fiadd
(bad)
mov
cld
movs
enter
jmp
scas
not
cmp
popa
cmp
js
fwait
retf
cmps
ror
nop
hlt
mov
mov
enter
jecxz
cmc
mov
xchg
fistp
movs
mov
mov
mov
aad
out
rol
stos
loope
nop
inc
jecxz
clc
lods
out
mov
stos
in
call
mov
lods
ficomp
fcom
les
jecxz
loopne
nop
fdiv
out
lahf
mov
ret
stos
call
mov
rcl
loopne
int3
cmps
jmp
xchg
rcl
fsub
les
out
mov
xchg
(bad)
aam
int
mov
add
mov
jmp
pop
dec
call
mov
lods
fistp
pop
inc
adc
cli
stos
sar
pop
aas
push
xchg
es
in
sub
cmps
xchg
xor
adc
add
les
popf
jne
add
mov
fmul
mov
jge
leave
sar
mov
push
daa
repz
sahf
fistp
xchg
cmc
mov
mov
(bad)
jmp
sbb
sub
mov
push
aaa
(bad)
fmul
push
call
xor
pop
aas
mov
mov
dec
pop
fnstenv
ins
and
aad
sti
jmp
div
mov
jbe
sbb
ret
rcl
lods
cmp
adc
fst
clc
aam
shl
stos
push
jg
std
mov
fiadd
dec
cmp
movs
sbb
lods
pop
pop
adc
sbb
mov
cmp
ret
call
mov
ins
movs
sub
or
add
cmp
add
enter
push
jns
sub
int
xchg
call
jne
push
addr16
out
xchg
mov
popa
dec
or
loopne
lahf
lea
mov
push
(bad)
ret
xchg
dec
pop
pop
pop
xchg
pop
mov
add
imul
pop
aaa
inc
mov
xchg
jl
push
dec
mov
mov
pop
mov
jno
push
mov
leave
call
nop
cmc
jl
add
sbb
sub
jl
jge
add
call
or
jno
add
repnz
outs
jno
adc
leave
mov
dec
mov
xchg
or
push
fs
and
cmps
mov
mov
push
movs
loop
mov
jae
out
loope
repnz
push
pop
mov
sbb
push
addr16
fdiv
ins
push
dec
or
mov
ret
stos
or
jne
dec
add
sub
or
dec
or
add
stos
clc
(bad)
int
mov
mov
and
cmp
sub
xchg
jmp
int3
lds
and
adc
mov
cwde
lock
movs
lock
ss
add
stc
mov
sbb
jb
or
in
test
jae
dec
sahf
aad
fsub
add
push
push
jl
leave
xchg
enter
pop
push
jno
pop
sbb
jmp
pop
cs
push
int3
mov
mov
enter
jp
sub
add
lea
push
loope
popa
xor
aam
stc
pop
mov
jmp
dec
or
pop
adc
add
aas
jmp
mov
sub
scas
(bad)
lock
sbb
retf
cmp
repnz
loop
dec
add
ins
push
dec
or
dec
sub
das
movd
or
push
js
push
adc
je
inc
adc
push
adc
cmovnp
mov
out
mov
les
loop
aad
(bad)
mov
(bad)
cmps
jmp
int
fnsave
nop
(bad)
sahf
hlt
xchg
cwde
jmp
mov
mov
iret
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fst
push
fdivr
icebp
add
in
lods
hlt
mov
cmps
(bad)
mov
lods
loope
fisttp
iret
test
call
out
mov
cmc
test
call
mov
cmps
sbb
push
jno
pop
sub
push
data16
in
ret
test
add
add
les
dec
movs
inc
sub
cmp
shl
xor
mov
popf
and
aaa
fld
inc
outs
and
fmul
call
mov
and
clc
mov
nop
push
pushf
fidivr
pusha
es
test
inc
add
outs
cmp
pusha
xor
lods
lds
jecxz
cmps
out
imul
mov
fnsave
dec
and
out
mov
das
sbb
and
leave
scas
loopne
pushf
ror
xchg
div
lahf
push
add
xchg
sbb
(bad)
add
jne
jb
push
jb
(bad)
stos
out
lahf
dec
fmul
clc
pushf
into
sbb
dec
pop
sub
shl
xchg
and
das
adc
scas
je
push
pop
mov
test
sub
stc
mov
loop
js
clc
ret
and
int
ja
icebp
xchg
jp
es
rcl
(bad)
scas
call
arpl
aad
imul
pop
outs
(bad)
stc
rcl
jmp
das
shrd
std
sbb
imul
clc
in
scas
mov
mov
and
enter
mov
dec
jbe
xor
xchg
cmp
iret
pop
je
push
call
push
push
or
leave
rcl
cmc
in
repz
push
enter
ja
add
stos
aas
outs
sub
mov
cmp
movs
and
sti
push
xchg
out
pushf
aas
mov
mov
fwait
add
or
sar
stc
mov
dec
push
xor
out
(bad)
fld
and
lock
shl
ret
pop
xor
sbb
int3
cmps
xlat
mov
(bad)
mov
inc
mov
xchg
aad
mov
jae
xor
(bad)
aam
in
pusha
dec
pop
mov
cmps
jecxz
ins
arpl
repz
shl
and
ficom
pop
jnp
in
jp
stc
(bad)
outs
arpl
jae
in
mov
mov
cwde
(bad)
nop
enter
cmp
in
mov
xchg
sub
cli
test
inc
pop
push
xchg
fidiv
lea
ja
jp
cmovne
fcom
(bad)
lahf
push
push
push
jne
sub
cmps
out
fidivr
mov
fwait
enter
imul
jno
push
or
pop
push
aaa
mov
mov
xchg
pop
sub
sub
xlat
fst
inc
xor
stos
adc
rol
dec
or
neg
dec
sub
(bad)
icebp
movs
int3
dec
ins
arpl
push
rcr
jge
add
ficom
stc
push
push
loop
movs
jmp
pop
ds
mov
cmp
sub
cmps
loopne
xchg
jmp
mov
mov
xchg
sub
test
and
adc
lods
mov
sub
mov
fild
retf
call
retf
test
mov
mov
mov
pushf
out
stos
hlt
xchg
mov
mov
idiv
int
ret
mov
xchg
ror
leave
call
into
scas
(bad)
mov
neg
ret
stos
sti
mov
rep
retf
fsave
call
xor
sahf
sar
rcl
int
rcl
fcomp
int
stc
mov
xlat
xchg
(bad)
lahf
cmc
xchg
call
shl
ret
mov
mov
scas
out
(bad)
mov
lock
cmps
(bad)
mov
stos
jmp
rol
les
std
mov
movs
pop
dec
cmp
ss
jbe
or
pop
mov
xrelease
ret
sub
je
dec
sub
loop
inc
adc
push
dec
out
sub
xor
pop
sbb
mov
addr16
xor
std
movs
sbb
xlat
mov
xor
adc
cmp
xor
mov
or
or
iret
mov
pop
addr16
xchg
xlat
cmp
retf
nop
imul
mov
mov
ins
add
into
test
and
xchg
or
rol
cmc
sub
inc
gs
ins
xchg
clc
xchg
fsub
fistp
push
cdq
lock
jecxz
sahf
loopne
and
or
movs
out
mov
mov
push
mov
or
cli
lds
jle
push
xor
fld
cmps
(bad)
jp
dec
pop
push
test
push
clc
cmc
cmps
icebp
push
jo
xor
mov
pop
cmps
aas
mov
dec
fs
add
(bad)
(bad)
nop
imul
cmps
push
and
(bad)
bound
jne
adc
mov
jnp
sbb
sub
jns
out
mov
int
lock
cld
mov
test
pop
(bad)
mov
mov
popa
(bad)
(bad)
xchg
call
pop
leave
add
ss
icebp
test
pop
cmps
xor
dec
bound
inc
ins
sub
cmp
fcomp
lahf
jmp
std
sbb
sbb
fmul
mov
out
add
dec
inc
cdq
rol
add
pop
fld
or
cmp
out
pop
fwait
sbb
sub
ficom
or
out
mov
cmp
repz
dec
mov
cdq
call
sbb
xor
sub
and
mov
test
pop
das
pop
mov
jge
iret
(bad)
movs
dec
xchg
icebp
xchg
cdq
adc
cmps
(bad)
xor
popf
icebp
es
lods
xchg
and
adc
rcl
jle
push
and
icebp
lock
cdq
add
or
cs
pop
mov
xchg
mov
inc
cmp
xor
jg
sub
loopne
xor
xor
and
les
jae
pop
cmp
and
icebp
mov
inc
cmp
out
nop
(bad)
jmp
retf
mov
stos
or
enter
push
and
ja
scas
sbb
mov
retf
mov
xchg
das
sahf
call
call
rcl
and
in
popf
pop
dec
sub
mov
xor
(bad)
sbb
and
stos
ret
mov
stos
jg
js
inc
cmp
add
dec
fnstenv
jg
add
dec
pop
add
ja
sub
xchg
in
xchg
pushf
sub
cmp
mov
xchg
aad
inc
icebp
stos
jmp
std
xchg
fild
retf
mov
mov
xor
ret
add
out
mov
ret
add
retf
cmps
leave
sbb
mov
out
in
test
int
iret
xchg
pushf
fld
aad
(bad)
cmps
jmp
int3
sbb
scas
jmp
out
cld
mov
sti
mov
jmp
out
rol
cli
mov
mov
(bad)
fstp
mov
mov
mov
mov
mov
or
inc
add
or
ins
sub
pop
cmp
or
inc
sbb
sub
cmovle
pop
xor
push
or
cdq
fdiv
shl
lock
jmp
repnz
je
jns
push
stos
js
push
mov
push
or
dec
pop
aaa
out
ins
or
adc
push
stos
jmp
xchg
add
hlt
out
mov
outs
lods
pop
sbb
aad
mov
stc
mov
lea
das
pop
xchg
out
shr
clc
lods
cwde
push
push
cmp
(bad)
fdiv
pop
sub
mov
cmp
adc
or
clc
enter
inc
cmp
cmp
cld
test
sbb
mov
pop
mov
scas
call
mov
dec
cmp
add
cmovae
mov
inc
ss
(bad)
test
push
xlat
xlat
pushf
hlt
add
pop
sahf
cld
nop
cmc
add
repnz
fsubrp
(bad)
(bad)
xchg
inc
pop
sub
data16
(bad)
out
xchg
xchg
punpcklwd
sbb
scas
jmp
(bad)
les
mov
movs
hlt
mov
sub
jae
xor
push
inc
cmps
cmp
cmp
mov
out
xor
lahf
jmp
mov
ret
xchg
adc
jmp
mov
sub
rcr
nop
pop
pop
stc
out
jmp
sbb
sahf
pushf
inc
inc
push
sbb
cld
mov
add
pop
dec
cmp
sbb
and
loopne
mov
jbe
and
aad
push
in
push
adc
xchg
pop
imul
and
mov
push
daa
sub
repz
rcr
ins
es
(bad)
mov
pushf
adc
mov
inc
mov
cdq
sahf
inc
push
cmps
mov
scas
aas
jae
hlt
int3
sahf
popa
fwait
cmp
iret
sbb
add
mov
icebp
fwait
ins
mov
xchg
add
test
outs
int
rcl
ffree
cmps
inc
(bad)
loopne
xchg
or
inc
mov
mov
pop
mov
pop
mov
jns
shl
xchg
pop
pop
jmp
inc
int3
std
test
mov
fxch
shl
dec
sub
cli
pop
dec
and
or
call
icebp
mov
or
mov
add
pop
and
push
pop
or
cs
arpl
jae
push
adc
imul
outs
pop
dec
cmp
xlat
mov
fist
xchg
loopne
mov
mov
mov
mov
test
ret
fcom
shl
cmp
mov
pop
push
outs
and
add
loope
movs
mov
jl
adc
ins
in
or
add
rcl
call
push
dec
leave
push
icebp
movs
movs
test
sub
pusha
loope
mov
(bad)
bound
push
sbb
addr16
jbe
mov
sub
jg
ja
pushf
mov
xchg
jl
ins
push
sub
sub
pusha
push
or
push
or
push
sub
add
add
popf
cmp
adc
cmp
push
fiadd
mov
js
pop
sub
stc
outs
jmp
leave
push
xor
sub
je
jne
nop
scas
mov
ficomp
ins
cmp
and
dec
enter
movs
stc
pop
fstp
pop
xor
jmp
lds
outs
sub
adc
jns
js
mov
sub
out
iret
cmps
jecxz
cmp
jnp
repnz
test
enter
adc
dec
int3
ins
loopne
test
and
icebp
je
fwait
ror
sbb
push
aad
stos
xchg
or
adc
jge
xchg
xchg
mov
add
inc
ficomp
repz
cmp
sbb
xchg
mov
inc
(bad)
push
cmp
dec
call
icebp
xor
or
addr16
cmova
aad
rcl
mov
jg
and
out
lods
mov
repz
add
sbb
scas
mov
push
out
jbe
sbb
push
or
add
outs
out
inc
enter
mov
push
inc
or
adc
jl
and
cmp
ja
or
jg
pop
or
jno
and
push
fdiv
aad
or
pop
iret
mov
dec
add
shl
dec
cmp
jae
bound
mov
push
(bad)
out
add
pop
(bad)
xchg
mov
xchg
leave
mov
iret
xchg
cmps
pop
inc
add
enter
mov
mov
mov
shl
and
jnp
dec
aas
dec
xor
inc
or
cmp
or
jp
jp
push
inc
ds
sbb
cmp
test
pop
repz
les
cmps
sub
push
pop
push
pop
lahf
mov
xor
jae
cwde
in
mov
push
cmps
(bad)
lds
sub
xor
jb
scas
loop
lock
fisttp
iret
mov
clc
xchg
imul
in
scas
fmul
sbb
pop
sub
out
pop
push
push
inc
and
call
mov
mov
jbe
dec
cvtpi2ps
push
pop
sar
mov
ficom
outs
pop
sub
pop
cmp
jp
imul
ss
es
mov
and
in
push
scas
fist
int
xchg
mov
ret
dec
sub
or
imul
stos
mov
pop
(bad)
jg
and
sbb
pop
fstp
push
mov
or
shl
pop
cld
pop
sbb
enter
cdq
(bad)
add
add
pop
jl
adc
and
add
push
push
add
mov
retf
ja
outs
movntps
sub
jnp
mov
cmps
out
cmps
mov
cli
jp
xor
push
adc
cmp
dec
rcr
mov
repz
(bad)
aaa
adc
repz
dec
sbb
cmp
push
xor
mov
in
jae
push
cmp
gs
jne
call
call
and
dec
or
daa
sahf
(bad)
mov
mov
inc
iret
mov
icebp
jo
sbb
or
cmp
push
ficomp
ds
clc
lods
lods
mov
adc
add
inc
ret
mov
les
popf
aad
repz
jg
lahf
call
fbld
jle
push
jecxz
xchg
pop
sbb
mov
(bad)
mov
mov
retf
dec
push
push
cs
ins
push
adc
dec
std
mov
data16
mov
pushf
hlt
mov
mov
xchg
rcr
mov
mov
aaa
xor
adc
mov
nop
xchg
retf
outs
or
sub
mov
fcmovnu
xor
and
ror
cmp
push
fwait
xlat
xchg
shr
mov
push
and
add
pop
clc
stos
bound
inc
add
inc
xor
jp
pop
adc
sub
std
outs
outs
push
addr16
push
push
cmp
(bad)
mov
cmp
cmp
inc
add
sub
push
cmp
arpl
pop
mul
pop
lock
sub
sbb
arpl
cmps
stos
test
cs
and
mov
push
repnz
sbb
je
jp
pop
sbb
pusha
xor
inc
cmp
push
inc
aas
outs
add
add
cmp
lods
(bad)
mov
hlt
scas
int3
lahf
fdivr
std
xchg
mov
jmp
jmp
inc
pop
sbb
inc
add
or
and
push
retf
push
ret
scas
test
push
retf
ja
and
sub
retf
mov
fs
inc
adc
xor
(bad)
(bad)
push
imul
push
adc
dec
xor
dec
pop
dec
sub
sub
leave
mov
mov
mov
movs
(bad)
mov
scas
in
mov
xchg
cmps
les
aam
(bad)
mov
lds
(bad)
mov
movs
(bad)
movs
jecxz
mov
and
jb
push
aam
mov
sti
outs
or
sbb
pop
cmps
scas
mov
sbb
sub
jo
pusha
rol
rcr
sbb
sbb
dec
retf
push
pop
add
fwait
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
mov
mov
rol
test
jbe
xor
xor
mov
inc
rcr
xor
ja
sub
add
inc
lds
inc
(bad)
jp
dec
add
gs
or
jo
pusha
add
pusha
sub
jno
pop
sbb
jo
pusha
add
sub
inc
add
inc
add
push
adc
jns
push
adc
bound
push
cmp
imul
shr
xchg
pop
inc
aas
addr16
aas
ds
mov
sbb
push
into
(bad)
mov
rcr
daa
pusha
in
iret
mov
push
(bad)
push
add
sbb
nop
cmc
cmps
in
in
in
ret
mov
lods
ficomp
in
leave
mov
mov
mov
mov
sbb
and
inc
pop
dec
xor
popf
fidiv
les
push
cmp
dec
in
sahf
test
or
dec
shl
(bad)
sub
div
mov
repz
fidiv
call
nop
repz
loope
icebp
xchg
lock
mov
retf
mov
fnsave
mov
mov
into
in
inc
xor
enter
loope
mov
movs
call
rcl
pop
aaa
add
scas
mov
jns
pop
push
cmp
inc
into
lods
mov
scas
jmp
sub
push
fnstcw
mov
imul
inc
outs
sub
js
je
dec
pop
pop
aas
pop
sbb
or
addr16
cmovl
pop
aas
jo
push
adc
pop
cmp
sub
fsubr
jecxz
pop
push
xor
and
push
add
inc
les
jne
inc
sbb
or
retf
mov
in
in
sub
je
and
dec
fcomp
sub
adc
dec
pop
push
push
adc
pop
push
jne
inc
sbb
bound
inc
pop
pop
aas
ins
das
dec
cs
ds
and
aas
ins
das
dec
add
data16
adc
imul
and
int
dec
or
(bad)
rcr
cli
xchg
jmp
jecxz
stc
add
cmc
mov
sbb
push
cmp
sahf
fwait
xchg
aas
push
sbb
rcl
cmps
mov
or
imul
push
add
inc
sbb
dec
sub
inc
add
imul
pusha
or
cmp
push
and
push
and
pop
or
jp
jo
push
pop
sbb
jne
fwait
sar
imul
js
popf
jmp
xlat
mov
iret
pushf
pushf
mov
dec
and
xor
jne
je
xchg
mov
jecxz
cmp
jmp
xchg
xchg
lock
aam
sbb
inc
adc
mov
cmc
scas
int
fnstsw
sti
mov
xchg
out
(bad)
mov
lahf
fnstsw
into
cmps
hlt
mov
hlt
xchg
in
mov
in
mov
cmp
dec
and
and
cli
dec
add
rcr
xchg
into
cmps
jmp
in
fadd
pop
or
cwde
shl
dec
das
xchg
jmp
xchg
std
mov
and
sub
inc
xor
cwde
ret
mov
mov
mov
xchg
out
clc
mov
mov
rcr
mov
xchg
jmp
sbb
push
cmp
pushf
push
retf
pop
leave
pop
sbb
mov
pushf
clc
mov
xchg
hlt
mov
lods
stc
movs
out
xlat
mov
mov
mov
adc
and
jo
ja
imul
mov
and
cmp
dec
xor
add
pop
sbb
jo
push
xor
adc
dec
cmp
jno
push
pop
jbe
jp
inc
adc
dec
add
push
fwait
cmp
jg
mov
daa
addr16
mov
xchg
push
ret
test
jecxz
sub
retf
rol
pop
jle
xchg
lds
xchg
jmp
dec
push
add
sub
dec
ret
dec
shl
jg
dec
pop
idiv
mov
out
xchg
fisttp
out
(bad)
out
test
jmp
(bad)
lods
out
(bad)
ret
cmps
std
lahf
int3
(bad)
in
mov
(bad)
dec
cld
mov
add
pop
enter
mov
push
je
sar
mov
xchg
out
mov
push
adc
fsubr
dec
sub
or
jno
push
shl
test
es
push
shl
mov
pop
add
sbb
xchg
movs
in
test
xchg
fnsave
out
pushf
les
rcr
not
shl
adc
pop
xor
dec
add
call
stc
cmp
movs
adc
mov
mov
mov
mov
xchg
mov
rol
cmp
mov
sti
fcomp
adc
dec
add
and
cmp
push
es
bound
dec
cmovs
outs
push
pop
add
inc
sbb
dec
sub
add
push
dec
sub
arpl
jg
popa
adc
fs
es
push
adc
popa
add
mov
lods
hlt
mov
mov
(bad)
leave
test
inc
and
push
in
movs
loop
clc
add
push
push
daa
imul
cmp
pop
sub
jge
dec
cmp
in
ror
mov
imul
js
push
or
pop
outs
sub
inc
xor
jnp
pop
adc
dec
sbb
pop
pop
pop
adc
dec
adc
push
or
pop
cmp
adc
cmp
pop
outs
and
mov
mov
mov
add
jbe
cdq
int
pop
ds
jbe
addr16
cmp
or
shl
xchg
data16
and
xor
jbe
inc
retf
cmps
xchg
xchg
xchg
in
aam
or
sbb
imul
stos
mov
scas
jecxz
xchg
cmc
mov
jmp
or
xchg
rol
movs
aad
retf
mov
rol
nop
repnz
aas
outs
cmp
hlt
sbb
pop
push
inc
pop
or
sahf
(bad)
lahf
and
pop
fdiv
jl
popf
aam
imul
in
dec
add
and
jle
push
shl
je
inc
sbb
ret
mov
push
rep
sub
sub
sub
jl
addr16
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
addr16
dec
xor
cs
or
and
packuswb
addr16
lahf
ror
fisub
pop
adc
dec
xor
jp
arpl
push
push
dec
cmp
xor
and
dec
adc
lahf
loopne
out
iret
lahf
(bad)
scas
mov
cmp
xlat
test
movs
jmp
cmps
les
icebp
mov
pushf
fild
mov
lods
out
mov
test
movs
mov
dec
or
push
dec
pop
or
outs
pop
lahf
rcl
sbb
aam
call
scas
icebp
mov
mov
(bad)
xchg
into
mov
rol
push
adc
push
cmp
pop
push
cmp
in
fldenv
or
ins
ss
pop
inc
daa
inc
add
adc
jg
dec
pop
push
push
inc
daa
push
xor
bound
ins
push
pop
cs
addr16
ins
ss
pop
inc
daa
inc
add
adc
mov
mov
(bad)
movs
jmp
movs
(bad)
movs
and
xor
pop
push
ins
xor
inc
pop
adc
cwde
retf
mov
mov
scas
jmp
imul
cmp
jl
jae
dec
sbb
pop
sbb
dec
push
gs
dec
minps
mov
mov
mov
add
jmp
adc
lods
sbb
mov
mov
mov
adc
xor
repnz
mov
imul
jmp
retf
cdq
xor
mov
in
adc
inc
add
pop
cmps
imul
or
and
in
fild
aas
sub
xchg
mov
neg
jmp
push
sbb
jecxz
adc
xor
sti
dec
int3
sub
repz
lds
dec
sub
or
pop
ds
cs
das
cmp
xor
pop
fst
fsubr
pushf
pand
xchg
xor
cmp
push
mov
int
jge
add
out
xchg
or
add
leave
outs
in
dec
push
mov
das
aas
cmp
adc
jne
pop
pop
ins
ret
jle
sub
push
dec
push
inc
loopne
call
test
shl
cli
sbb
jne
and
mov
push
pop
jmp
movs
mov
cli
hlt
pop
jmp
push
pop
cmps
mov
ins
popf
adc
stos
and
pusha
ror
cmp
jl
scas
test
enter
xor
ins
inc
push
push
push
idiv
or
jno
addr16
dec
pop
rcr
xchg
out
pop
jno
inc
jg
test
(bad)
int
loop
shl
movs
nop
call
test
adc
sub
loopne
cwde
enter
mov
out
cmps
(bad)
jmp
iret
xchg
xchg
loop
fistp
shr
adc
xor
xor
inc
loop
shl
call
mov
jge
outs
es
in
(bad)
iret
(bad)
sti
ds
jp
ja
sbb
ret
mov
out
and
jp
push
add
mov
mov
mov
mov
jmp
mov
rcl
mov
mov
xor
inc
cmp
mov
cld
stos
test
jno
mov
clc
mov
jo
jg
jb
cmovo
js
mov
stc
sub
ret
cmp
aas
pop
push
sahf
and
or
ficom
pop
stc
test
outs
(bad)
and
mov
cmc
and
rcl
jo
xchg
xor
iret
push
in
pushf
and
cmps
pop
dec
xor
cmp
push
ins
mov
xchg
inc
mov
rol
adc
sub
icebp
imul
jbe
mov
leave
ja
ja
xor
adc
mov
data16
rcr
pop
xor
nop
or
cmps
popf
cwde
xor
jns
push
add
cmp
ss
pop
dec
xlat
test
dec
jmp
mov
ins
(bad)
lea
xchg
xchg
out
inc
pop
popa
and
test
mov
outs
jle
shl
cwde
jmp
jg
jns
adc
test
mov
aam
mov
ja
(bad)
into
mov
arpl
mov
jne
push
mov
imul
std
fwait
aaa
lds
scas
lods
mov
enter
push
stos
pop
fisubr
fcomp
lock
pusha
test
pushf
push
repz
and
inc
push
jae
dec
or
std
sub
inc
xchg
invlpg
cdq
pushf
ds
xor
rcr
mov
in
cmp
push
daa
hlt
adc
pop
cmp
leave
jmp
cmp
mov
bnd
test
sbb
rcl
mov
sbb
or
sbb
les
and
sbb
addr16
pop
adc
inc
int
lahf
add
push
sub
pop
daa
pop
fistp
sti
aaa
dec
mov
arpl
scas
pop
je
push
add
je
stc
ja
push
daa
mov
fadd
dec
addr16
jecxz
imul
cmp
push
and
cmp
mov
(bad)
iret
es
mov
loopne
pop
cmp
adc
jmp
pop
jns
xor
in
leave
dec
shr
rcl
and
sbb
into
jns
cwde
jno
mov
stc
enter
xor
arpl
mov
or
leave
mov
lods
mov
dec
js
lods
mov
test
in
and
adc
pop
sbb
pusha
jmp
inc
bound
ficomp
sub
add
ret
neg
jns
or
and
scas
dec
stos
fcom
pop
jo
mov
jne
push
push
bound
lea
clc
loop
jno
mov
cs
xlat
test
pop
adc
adc
sahf
push
and
mov
add
cmp
loope
cmp
in
push
dec
(bad)
or
idiv
and
rcr
mov
pop
arpl
adc
pop
jp
imul
push
out
push
jle
add
mov
dec
and
ror
fidivr
cmp
sahf
sub
sti
in
(bad)
push
aas
push
in
ret
out
cdq
jb
and
(bad)
imul
cli
popf
aad
push
mov
pop
xchg
cmp
sub
sub
sti
fbld
push
adc
test
lock
cmp
xchg
rcl
cmps
pop
cmp
jns
ror
cwde
add
dec
ret
dec
mov
add
daa
ja
jb
ss
sbb
punpcklbw
push
jecxz
outs
imul
enter
in
mov
sti
xor
in
(bad)
and
xor
push
jne
movs
push
ja
mov
mov
fwait
pop
push
loope
add
mov
lods
pushf
xchg
iret
sahf
pop
xchg
pop
or
sbb
leave
rol
add
mov
inc
outs
mov
jae
aam
ja
push
cwde
scas
mov
or
and
aas
pushf
retf
nop
mov
in
sbb
xchg
pop
aaa
and
cmp
in
jp
adc
out
mov
or
sub
xchg
pop
push
mov
push
xchg
adc
retf
xor
(bad)
mov
pop
jecxz
(bad)
in
jbe
data16
jecxz
mov
dec
rcr
aam
mov
outs
mov
daa
pop
int
loop
pop
retf
outs
imul
xchg
iret
hlt
xor
and
mov
scas
jbe
xor
stos
fdiv
jne
lea
xchg
mov
adc
xchg
sbb
mov
mov
jmp
cmp
jo
ret
pop
das
sbb
add
push
retf
out
jg
in
nop
(bad)
dec
add
inc
fadd
les
or
movs
(bad)
push
adc
test
inc
mov
inc
ss
rcl
fld
out
test
pop
sub
mov
pop
or
push
push
shl
cs
in
in
dec
or
mov
ins
aaa
out
mov
repnz
or
nop
imul
jge
or
mov
movhps
jmp
push
int
xchg
push
pop
adc
xor
fs
mov
adc
inc
stos
jmp
hlt
xchg
push
cmp
addr16
mov
loope
inc
mov
xchg
mov
xor
adc
mov
and
sti
add
sbb
pop
sbb
pop
rcl
or
sub
outs
rol
repnz
adc
jnp
shl
pop
push
mov
aas
data16
int3
and
mov
pop
xor
dec
(bad)
pushf
arpl
jle
mov
sbb
mov
dec
pop
pop
push
lock
xchg
inc
and
loop
cwde
sar
dec
rol
test
dec
sub
pop
sbb
int3
mov
cmp
retf
idiv
pop
dec
mov
jl
cmc
mov
test
cmc
jb
aam
add
xor
jb
lods
stos
in
push
cmp
mov
sub
(bad)
cs
cld
cmps
(bad)
fimul
sti
mov
lock
jmp
(bad)
das
dec
(bad)
int3
es
into
mov
pusha
(bad)
xor
cmp
inc
lods
into
push
adc
pop
(bad)
xchg
scas
idiv
cmp
fnsave
test
int3
sub
xchg
xchg
out
jne
adc
ret
sbb
popa
adc
stos
outs
sub
mov
out
es
test
sahf
fld
out
push
stc
add
hlt
inc
xor
ja
out
pushf
(bad)
sahf
int
push
icebp
mov
rcr
jo
clc
es
repz
fnstenv
cmc
mov
out
xor
inc
xor
popf
mov
popa
test
adc
cmps
fisttp
inc
shl
sbb
jg
mov
or
lds
jne
xor
xchg
cwde
fist
push
inc
cli
mov
xor
and
mov
add
lods
inc
add
dec
int3
movs
and
fs
cmp
stos
in
jl
sbb
shl
push
mov
mov
rol
movs
out
pop
sub
mov
and
loopne
xchg
jmp
(bad)
mov
xchg
cmp
test
(bad)
sbb
retf
ins
and
into
popf
inc
and
je
mov
hlt
sub
pop
neg
(bad)
mov
stos
(bad)
dec
or
mov
mov
ds
fdiv
push
cli
ds
rol
jge
xchg
mov
mov
or
test
mov
push
(bad)
mov
std
jo
(bad)
mov
daa
adc
repz
adc
mov
rcr
pop
test
test
ins
sub
pop
std
mov
and
xchg
xchg
mov
mov
add
xchg
mov
outs
sub
sub
(bad)
repz
and
cli
xchg
lods
jmp
or
mov
mov
sub
dec
ror
sbb
rol
pop
rcl
adc
scas
xchg
xlat
push
xor
push
lds
scas
call
jle
sub
rcr
xchg
in
(bad)
(bad)
push
and
add
enter
nop
xchg
sar
retf
mov
inc
movs
xlat
dec
aas
or
enter
and
inc
repz
out
sahf
out
fs
ins
aas
not
mov
aas
jl
in
push
jmp
jl
fisubr
adc
int
xchg
fcomp
add
mov
aad
mov
popf
fidiv
xor
mov
(bad)
mov
(bad)
and
lock
out
cmp
popa
and
ror
int
xchg
sar
adc
pop
add
mov
dec
push
ret
and
cwde
and
dec
movs
loop
inc
mov
xor
scas
jg
lock
or
cwde
popa
sub
js
(bad)
mov
mov
int3
pop
cmp
shl
mov
pop
das
adc
xchg
test
push
(bad)
jle
push
jge
call
sahf
(bad)
pop
sbb
pop
int3
sahf
mov
cdq
lock
pop
cmp
sub
jmp
nop
shr
(bad)
mov
rcl
scas
popf
fisub
jle
imul
sbb
ficomp
add
popf
inc
sub
lea
sbb
ret
js
out
test
iret
push
and
je
pushf
mov
inc
(bad)
mov
sti
mov
adc
mov
pop
sbb
cmp
lea
aas
sub
jecxz
pop
mov
jle
add
lea
mov
and
lock
sbb
push
jmp
das
cmp
mov
push
and
mov
clc
call
sub
jb
test
in
gs
inc
sbb
bound
inc
scas
fiadd
pop
sbb
mov
sti
xchg
bound
loop
jge
or
xlat
dec
or
mov
add
mov
sub
or
fst
pop
int3
mov
jl
sub
cmp
xchg
xlat
popa
add
pop
(bad)
jecxz
dec
test
pop
sub
movs
arpl
repz
xchg
shl
jns
movs
ja
sbb
in
sbb
xor
(bad)
sub
sub
lods
mov
mov
into
adc
sbb
pop
mov
sub
stc
jae
xor
std
pop
sbb
data16
xchg
icebp
and
(bad)
mov
inc
xor
in
mov
pop
adc
stos
cdq
retf
sbb
sar
inc
repnz
leave
pop
or
mov
add
lahf
gs
sbb
mov
cli
mov
jmp
add
adc
out
and
lock
push
add
jp
lea
aaa
push
fistp
aam
sbb
cmc
xchg
loope
mov
sti
push
add
imul
fwait
shl
push
ror
cmps
cmc
jo
neg
hlt
mov
add
mov
or
movs
imul
jno
in
mov
js
(bad)
push
xor
hlt
and
hlt
jo
in
fstp
fstp
add
les
in
xchg
out
por
int
nop
ret
dec
cs
lock
sub
pop
add
dec
and
push
fdivr
test
push
cmp
mov
sti
pop
sub
push
mov
pop
adc
mov
jo
mov
aaa
in
mov
dec
adc
inc
retf
into
dec
or
call
pop
into
mov
test
pop
sbb
das
pusha
sbb
push
cmp
call
dec
or
imul
jns
les
add
mov
(bad)
sub
or
dec
leave
xchg
sbb
(bad)
retf
add
hlt
xchg
push
ds
pop
shl
sbb
fsubr
pop
movs
(bad)
push
adc
pop
mov
nop
nop
ret
xor
stos
rcr
xlat
xchg
mov
mov
(bad)
popf
fidiv
fcomp
shl
or
mov
and
inc
fisttp
stos
loope
and
inc
(bad)
mov
int3
scas
mov
dec
or
inc
and
dec
scas
ret
lds
stos
jmp
push
or
mov
fdiv
push
push
mov
sub
icebp
pop
pop
aas
ins
(bad)
mov
sbb
retf
(bad)
imul
fstp
test
sub
retf
les
mul
(bad)
(bad)
fld
dec
adc
and
in
or
lods
outs
or
popf
fidivr
lods
fidivr
add
pop
push
mov
or
xchg
cdq
je
retf
fld
jnp
xchg
pushf
cmc
pop
sbb
imul
rcr
jmp
xor
jl
mov
or
call
pop
repz
aad
xor
js
push
add
jae
nop
(bad)
int3
aas
pop
retf
jmp
ficomp
cmp
les
out
mov
shr
pop
pop
mov
pop
sub
bound
mov
mov
aaa
push
lds
dec
and
inc
shl
sar
iret
sub
mov
or
scas
movs
cld
xor
scas
mov
adc
shl
mov
push
ins
loop
stos
(bad)
jg
sbb
aad
or
movs
jo
cmp
icebp
or
retf
inc
add
dec
call
ins
fadd
loope
jge
add
loope
dec
enter
push
inc
shl
in
ja
jmp
mov
cmc
push
adc
mov
and
scas
bound
cmp
cmps
iret
jp
sub
push
out
test
and
int3
ds
call
scas
cld
pop
aas
out
mov
into
sub
leave
xchg
mov
push
jne
lds
imul
pop
sbb
mov
std
push
adc
mov
cli
test
stc
mov
sbb
mov
mov
loopne
cmp
into
lods
xchg
daa
dec
lods
jmp
pop
test
pop
push
add
sub
xor
pop
cs
add
retf
xchg
sahf
int3
js
stc
nop
add
xor
jae
jmp
retf
adc
xchg
outs
sub
dec
jecxz
popf
rol
pop
rol
in
cmps
xchg
loop
int3
dec
or
popa
jmp
loopne
sub
stos
inc
and
cli
xchg
test
dec
cmp
das
in
mov
fisttp
enter
push
rol
mov
sar
cmc
xchg
imul
inc
sub
scas
outs
sbb
jl
mov
xlat
cwde
arpl
add
jno
popf
mov
pop
movs
std
jge
in
fs
dec
mov
inc
add
push
rcl
into
and
xlat
xchg
push
cld
mov
daa
cmp
or
stos
ficom
cmovl
mov
cmp
xchg
ror
add
cwde
push
les
ret
in
push
adc
jg
repz
cmp
inc
retf
test
and
pop
movs
aam
pop
fcomp
push
xor
jae
cwde
mov
pop
sbb
jb
hlt
push
daa
sub
mov
ror
dec
(bad)
mov
lods
cmc
cs
retf
adc
jge
cwde
inc
add
push
xor
sbb
jae
out
popf
jno
sbb
movs
mov
out
es
pop
push
or
adc
test
fimul
push
or
scas
in
ss
(bad)
retf
into
mov
push
jne
mov
sbb
in
and
jge
cli
and
mov
(bad)
mov
mov
cmp
aas
push
inc
lds
std
mov
aad
mov
jbe
mov
jmp
pop
sbb
inc
fisttp
and
mov
lahf
mov
pop
pop
int3
mov
out
xchg
aam
adc
imul
test
ins
not
(bad)
mov
jecxz
mov
popa
add
stos
mov
pop
cmp
mov
sub
mov
add
xor
movs
xchg
not
cld
mov
adc
inc
in
(bad)
aad
jo
mov
aad
fcomp
shr
mov
and
push
push
cmp
xchg
mov
jbe
aad
sbb
mov
inc
push
hlt
xchg
push
adc
in
aas
or
mov
adc
fistp
lock
xchg
les
loope
mov
and
test
mov
js
mov
mul
inc
stos
in
ins
add
pop
mov
(bad)
and
hlt
and
fld
mov
pop
xlat
xchg
fild
inc
das
xor
test
inc
sub
push
fisubr
add
push
mov
dec
adc
pop
xchg
test
cmps
(bad)
sub
stos
call
xchg
icebp
and
jmp
sub
xchg
dec
iret
mov
rol
repnz
or
call
xchg
inc
pop
adc
sub
inc
and
imul
adc
rol
mov
cwde
xlat
dec
add
mov
xor
jl
out
jbe
std
lea
mov
ret
dec
sub
push
mov
sub
jmp
data16
ret
stos
call
test
movs
lahf
cld
aaa
jno
push
lock
inc
cli
mov
loop
nop
shl
jne
jmp
sub
add
out
arpl
rol
idiv
rcl
xor
(bad)
push
push
or
xchg
outs
or
add
enter
inc
fistp
xor
xchg
xchg
repnz
popa
adc
mov
test
jnp
jb
jmp
sti
cdq
xchg
rol
outs
fstp
daa
xlat
xchg
sub
pop
mov
and
sar
lods
mov
inc
sbb
rcr
mov
outs
sub
jo
popf
inc
das
sbb
(bad)
add
out
outs
retf
test
pop
shl
mov
mov
test
pop
xor
js
xchg
imul
xchg
xchg
xchg
loop
or
pop
mov
cmp
ret
pop
add
ins
pause
mov
mov
(bad)
xchg
mov
dec
call
xchg
sar
or
icebp
popf
xchg
(bad)
sub
retf
mov
repz
je
cs
sbb
fisttp
xor
cmp
mov
das
ins
lods
into
or
sub
pop
stc
mov
aas
jl
cwde
sub
mov
push
push
fnstcw
lods
fcom
dec
movs
out
add
scas
addr16
call
ret
mov
pop
push
push
ins
test
jbe
out
push
xor
mov
int
rcl
shl
aad
jb
in
inc
add
ja
icebp
pop
das
pop
sub
inc
scas
in
jge
in
mov
movs
(bad)
push
adc
mov
jae
out
inc
pop
adc
into
push
adc
pop
enter
and
ja
xchg
jbe
add
in
add
sbb
dec
sbb
and
(bad)
fcomp
mov
out
sub
int3
(bad)
arpl
adc
lea
call
lock
sti
sub
mov
loopne
sbb
mov
movs
cld
dec
or
mov
xor
xchg
cmovl
mov
add
xor
loopne
sbb
mov
mov
mov
iret
xchg
mov
aas
fisttp
cmp
aam
pop
mov
inc
and
ins
sbb
test
stos
call
pop
adc
dec
mul
push
push
out
sahf
inc
pop
adc
cmp
xchg
rol
popa
lds
push
(bad)
rcl
jmp
jmp
push
adc
fisttp
loope
mov
sub
jmp
hlt
popf
inc
add
(bad)
mov
adc
xchg
(bad)
dec
add
stc
mov
or
shl
mov
out
or
push
test
jb
add
mov
adc
(bad)
in
jno
xor
int3
dec
adc
mov
add
sbb
mov
jl
fisttp
shl
cmp
pop
adc
push
adc
cdq
fs
aas
jl
lea
adc
push
(bad)
lea
push
cmc
lods
(bad)
inc
add
mov
sbb
fstp
push
gs
mov
mov
sti
cwde
jb
cmp
ins
xchg
aad
cmp
pop
shl
mov
sahf
fstp
xor
mov
scas
in
jge
(bad)
mov
mov
ret
add
xchg
stos
call
dec
sub
jbe
cld
xchg
icebp
lahf
fdivr
loope
fs
scas
xor
mov
and
std
mov
loope
push
push
jne
cmc
push
sbb
xchg
push
jecxz
sar
mov
mov
jo
jmp
dec
cmc
mov
retf
add
mov
add
mov
mov
(bad)
int3
xchg
mov
mov
fstp
push
dec
mov
lds
and
xor
mov
retf
jo
cmp
cmp
mov
test
sub
in
es
xor
mov
es
jmp
sbb
mov
rcl
sbb
lea
xchg
fdiv
inc
clc
mov
(bad)
xchg
js
cmp
(bad)
cmp
test
icebp
mov
sbb
jl
xor
inc
std
cmps
adc
mov
dec
cmp
pop
adc
xchg
xchg
rcr
outs
sbb
enter
push
rcl
ret
push
and
push
div
mov
and
cdq
mov
jl
les
mov
jnp
rcl
shl
mov
fcomp
push
sbb
popf
call
popf
xchg
fs
fwait
leave
xor
dec
clc
call
mov
jno
mov
add
xchg
sub
pop
mov
lahf
cld
pop
sbb
sub
(bad)
xor
add
sbb
jmp
nop
jecxz
or
lods
mov
imul
mov
es
mov
push
push
loopne
jnp
sub
cmps
xchg
push
jne
mov
loopne
pop
xlat
nop
xchg
dec
jno
mov
push
clc
stos
sahf
std
ss
movs
dec
ds
outs
mov
popf
mov
js
retf
or
xchg
addr16
es
(bad)
movs
shl
repz
mov
arpl
and
mov
rcl
movs
mov
dec
or
push
pop
push
pop
ins
adc
mov
call
or
out
inc
add
pop
iret
mov
push
aas
ins
jmp
popa
or
inc
xchg
jle
pop
jge
out
xchg
stc
pop
sbb
mov
leave
pop
inc
lods
out
pop
pop
aaa
js
cdq
imul
pop
adc
(bad)
int3
and
movs
(bad)
mov
pop
cmp
mov
jecxz
div
mov
and
loopne
sbb
mov
sub
inc
sbb
ror
ret
mov
xchg
retf
lock
fwait
repnz
je
test
adc
loop
cmp
jg
fild
jmp
addr16
dec
fist
adc
adc
jecxz
sub
jo
sbb
mov
mov
fdiv
test
pop
leave
xchg
adc
sub
jecxz
fwait
ret
push
inc
leave
fwait
push
xor
push
mov
jmp
das
inc
mov
(bad)
dec
or
xchg
push
repnz
cmp
pop
cmp
bnd
les
lds
pusha
fnstsw
in
imul
xchg
xchg
xlat
dec
or
push
movs
jmp
mov
cmp
mov
sbb
inc
cmc
xchg
imul
sub
in
xor
es
mov
test
xchg
(bad)
ret
sbb
mov
stos
fisub
jns
nop
scas
imul
adc
aam
scas
in
outs
or
pop
movs
(bad)
pop
sbb
add
dec
mov
mov
iret
bound
pusha
add
outs
out
addr16
(bad)
(bad)
mov
mov
adc
mov
cwde
mov
cs
pushf
dec
cmp
jge
(bad)
nop
fild
popa
cli
mov
adc
rol
or
call
fwait
repnz
shr
pop
mov
xchg
jb
aad
mov
inc
lar
repnz
inc
test
daa
popa
loope
bound
out
inc
push
pop
inc
rcl
and
imul
test
jo
sbb
xchg
inc
xor
jb
or
aam
dec
push
loope
test
add
xchg
push
add
lods
in
cmp
gs
adc
xchg
adc
sbb
cdq
adc
in
inc
and
call
adc
pop
loope
dec
xchg
outs
and
out
dec
dec
cli
mov
pop
jno
pop
rol
pop
mov
cmps
mov
jecxz
movs
mov
std
xor
push
sbb
icebp
xor
and
pop
mov
popa
xor
inc
pop
mov
xor
cmp
(bad)
jg
cwde
and
jnp
in
jg
or
xchg
out
xchg
sbb
mov
adc
sub
cwde
mov
cmp
out
mov
imul
sbb
cmp
out
inc
fcomp
pop
stos
push
adc
inc
mov
loopne
mov
jp
js
or
test
pusha
cmp
and
push
icebp
in
test
adc
popa
or
aaa
xchg
mov
add
sub
xchg
pop
cli
icebp
mov
imul
iret
adc
sub
mov
out
jns
jle
and
leave
out
retf
push
adc
dec
xchg
shr
inc
les
pusha
or
shl
(bad)
int3
inc
idiv
push
push
push
(bad)
mov
dec
pushf
jmp
jns
xor
sbb
retf
push
(bad)
sbb
mov
or
rol
pop
cdq
scas
push
mov
frstor
int
les
lods
cs
nop
and
cmovs
mov
jnp
mov
test
mov
shr
xchg
jge
and
mov
xchg
jae
imul
mov
gs
or
loope
cmp
mov
test
adc
sub
jmp
xor
sbb
xor
xchg
pop
cmps
aaa
jl
outs
or
out
add
mov
sbb
push
jge
dec
(bad)
test
lods
pop
or
in
inc
mov
add
(bad)
fmul
sbb
ror
in
in
xor
arpl
out
push
mov
mov
push
stos
out
fnstenv
movs
ss
and
xchg
mov
icebp
sub
iret
cmp
lahf
int3
cmps
jae
scas
fist
xor
sub
or
loopne
shl
pop
mov
sub
pop
inc
dec
sbb
in
mov
es
sar
bnd
mov
and
aas
out
dec
je
cmp
fadd
retf
sub
mov
mov
lods
pushf
adc
test
outs
add
dec
add
fiadd
aad
or
cld
in
enter
add
xlat
mov
movs
xchg
stc
stos
add
int3
hlt
(bad)
pop
stos
adc
xlat
mov
jge
pop
int3
mov
or
pop
xor
mov
cld
push
lock
test
pop
ror
in
push
add
(bad)
fs
test
push
imul
ins
add
pop
pop
push
dec
sar
or
sar
push
mov
popf
push
sub
outs
pop
and
mov
addr16
jl
retf
imul
and
pop
mov
ins
fadd
lock
xchg
je
mov
cmc
adc
jg
jno
dec
imul
add
lahf
aas
sbb
xlat
popf
cmp
add
sub
jns
pop
push
dec
cdq
jmp
in
call
dec
push
shl
jb
add
sub
jmp
pop
scas
fnstsw
loop
idiv
adc
imul
icebp
sub
leave
or
xchg
out
sub
mul
in
adc
jno
movs
xchg
neg
mov
mov
cmps
ror
mov
mov
loope
aaa
inc
(bad)
cs
nop
imul
call
in
mov
push
jg
inc
int3
xchg
pop
lods
les
or
test
jge
shr
xlat
gs
push
push
cmp
stos
sub
and
(bad)
cmp
test
pushf
ror
sbb
fisubr
ins
jmp
vorps
or
arpl
ins
pop
lods
jge
test
jecxz
fmul
pop
addr16
mov
cmp
or
cli
mov
sbb
adc
push
cmp
aas
adc
pop
and
mov
out
into
out
fcomp
shl
push
mov
ret
push
fwait
in
(bad)
jmp
mov
shl
std
icebp
gs
jnp
push
and
smsw
out
push
or
inc
mov
retf
xor
pop
ror
outs
jg
sub
mov
out
call
fwait
ins
mov
or
fcmovbe
inc
leave
movs
in
sbb
daa
daa
pushf
mov
loopne
aas
pushf
pop
xor
call
add
lods
sbb
sar
fist
inc
pop
iret
repnz
pop
sbb
jb
pop
pushf
out
cmps
ret
xor
lock
das
call
xchg
ins
or
push
inc
arpl
hlt
(bad)
sbb
jecxz
retf
repz
xor
js
sti
dec
rcr
popf
cmc
jno
clc
shr
push
jle
ret
not
mov
pop
in
popa
test
cli
mov
call
pushf
cmp
outs
push
adc
mov
sub
mov
dec
cmc
pop
stos
sar
ret
out
fisubr
sub
mov
imul
mov
adc
xor
push
pop
jecxz
push
es
pop
mov
cli
inc
xchg
out
lahf
fldcw
sub
scas
inc
loope
in
jmp
int3
fnsave
add
add
dec
xchg
out
out
pop
pop
pop
xchg
aam
fimul
iret
pop
xor
lock
or
sbb
and
mov
mov
push
idiv
fnsave
bnd
add
in
cwde
and
mov
jno
arpl
mov
mov
xor
cld
int3
lahf
push
mov
fiadd
std
fstp
mov
retf
push
push
push
and
xchg
pop
mov
repnz
dec
add
pop
jne
(bad)
sbb
(bad)
out
shl
xchg
ins
aas
ins
mov
push
retf
xchg
fdivp
je
es
pop
xchg
xlat
(bad)
stos
and
mov
and
sub
xlat
inc
ror
clc
jp
dec
push
call
icebp
ins
mov
mov
xlat
icebp
inc
int
mov
imul
fstp
inc
bts
and
pushf
lock
cmp
in
aas
iret
arpl
cmp
int
adc
ins
arpl
and
sub
sar
repnz
add
jae
mov
jno
arpl
shr
cmp
and
fst
and
icebp
mov
xor
imul
div
mov
sub
sub
fmul
out
cmps
dec
lea
xchg
sbb
sahf
rcr
jg
push
xchg
popf
arpl
add
or
mov
fs
fsubrp
ror
out
gs
jo
dec
and
jecxz
sbb
das
cwde
inc
mov
add
push
xchg
xor
or
fld
xchg
cmp
xchg
mov
int3
and
inc
fwait
shr
mov
xor
outs
push
bound
adc
add
cmp
inc
mov
inc
xor
sub
jnp
outs
push
jns
adc
jb
fisub
jnp
ja
cmps
adc
lods
dec
mov
out
dec
call
(bad)
aad
leave
add
inc
pop
mov
stos
loope
loope
out
ret
fcom
pusha
leave
push
xchg
inc
imul
hlt
loop
sbb
leave
add
in
adc
inc
mov
in
sbb
fimul
hlt
leave
add
lods
dec
pushf
movs
(bad)
mov
add
call
add
xchg
sbb
sub
rcl
add
pop
std
movs
mov
add
jmp
imul
jp
dec
jmp
std
push
or
mov
pop
ja
shl
loope
mov
ficom
ins
nop
dec
and
arpl
mov
cdq
aad
fwait
dec
ja
mov
fisub
clc
adc
cmp
inc
jb
int3
sbb
xchg
sbb
cmps
popf
xlat
ja
sahf
push
lahf
(bad)
jl
mov
mov
fidivr
fild
(bad)
ins
xchg
mov
push
dec
add
mov
lds
out
jmp
test
cmp
lahf
mov
dec
rcr
out
mov
ror
dec
arpl
(bad)
je
adc
aaa
repnz
push
mov
jecxz
in
mov
fsubr
les
push
ror
sub
mov
and
mov
aas
ss
sbb
out
cmp
ja
ret
pop
mov
inc
mov
popa
rol
adc
fadd
rcl
repz
mov
leave
mov
xchg
into
into
add
aad
adc
clc
add
mov
jle
rol
adc
add
pop
loopne
shr
aas
jb
sbb
adc
sbb
sbb
lds
sbb
(bad)
fstp
(bad)
(bad)
cli
mov
mov
in
inc
(bad)
jmp
push
es
cwde
pop
mov
add
xchg
movs
(bad)
rcl
je
clc
loopne
and
mov
ss
clc
inc
mov
push
jns
jmp
stc
sbb
add
(bad)
repz
imul
mov
sahf
sbb
es
and
int
(bad)
and
pop
add
and
mov
lods
test
(bad)
adc
mov
jg
ret
leave
sbb
xor
imul
sahf
fnstenv
stos
js
outs
add
push
fcmovb
aaa
jno
mov
outs
ds
push
mov
movs
mov
xlat
xor
jb
or
mov
test
ficom
ins
pop
outs
xlat
cmps
test
dec
int3
inc
jge
mov
ret
sbb
mov
mov
push
movs
and
je
add
jns
jb
adc
loop
out
push
cli
mov
push
add
dec
sub
sub
mov
sub
and
or
loop
push
hlt
or
xlat
xchg
stos
cdq
sub
jp
test
repz
std
and
jle
push
mov
inc
test
dec
test
or
outs
cvtpi2ps
mov
movs
fs
mov
pop
cmps
pop
test
ret
lock
or
data16
or
(bad)
fdivr
adc
in
and
inc
mov
(bad)
add
sub
aaa
rcl
daa
imul
es
shr
sbb
pop
imul
aas
sbb
sub
addr16
fcmovu
dec
cmps
push
cmp
imul
aas
and
mov
inc
dec
enter
pop
imul
(bad)
out
or
(bad)
call
jbe
xlat
adc
ret
arpl
mov
push
stos
iret
cli
or
(bad)
(bad)
std
out
fs
fsubr
xchg
mov
aas
cmp
push
cmc
(bad)
jp
mov
cmc
lahf
repnz
scas
loope
addr16
mov
ss
das
mov
call
push
lock
mov
ds
or
jmp
xchg
mov
sahf
adc
push
iret
xchg
rol
cwde
add
jmp
or
stc
in
lea
in
rcl
rcr
add
xlat
cmp
xchg
cmp
and
ins
inc
jmp
adc
jl
mov
sbb
and
in
cmovo
shl
rcl
bound
push
cdq
outs
shl
adc
clc
lods
bound
imul
or
dec
inc
sub
arpl
iret
stc
fisttp
leave
repz
repz
pop
dec
sub
shl
call
and
scas
js
lock
cmp
and
lahf
and
call
cs
mov
cmp
cmp
mov
(bad)
mov
add
add
out
cmp
js
out
loope
repnz
das
test
mov
shl
cli
fsubrp
push
imul
(bad)
in
xchg
sub
add
fcmove
(bad)
cmps
push
dec
mov
mov
dec
mov
jb
ret
cmps
pop
xchg
mov
xchg
push
call
cs
sub
adc
cmps
pop
inc
fcom
add
inc
cld
aaa
sbb
mov
jb
outs
cmps
pusha
inc
scas
push
cmp
xchg
jecxz
lods
jns
xchg
out
jmp
pop
scas
mov
rol
add
(bad)
aaa
mov
stos
rcr
and
in
jae
stc
mov
in
imul
pop
ror
ror
or
pop
and
inc
(bad)
neg
aad
mov
aam
mov
adc
fadd
cmp
dec
ins
pop
ins
and
ret
ins
loopne
popa
adc
popa
inc
scas
mov
and
dec
clc
or
repz
jno
and
mov
xlat
xor
sahf
aas
fmul
ins
lea
or
movs
lea
inc
add
cwde
inc
std
pop
jl
loop
xor
repz
adc
das
jmp
sahf
jb
imul
pusha
and
ins
leave
adc
repnz
aas
(bad)
xlat
or
(bad)
mov
xor
(bad)
xor
ja
fsubr
xor
add
das
mov
js
cmp
xchg
outs
stos
mov
clc
inc
xor
jo
push
nop
push
add
sub
shr
into
hlt
jge
mov
mov
test
fwait
sub
lock
or
stc
add
and
outs
fs
inc
aaa
scas
outs
xor
hlt
icebp
(bad)
call
cmp
push
scas
popf
xchg
add
cmp
sub
push
fnstenv
and
cmp
sahf
pop
inc
inc
std
xor
loope
or
scas
and
hlt
fs
ins
sbb
ins
jo
stos
fidivr
fiadd
stos
xor
mov
push
or
loopne
jbe
pusha
lods
jmp
mov
mov
and
push
push
sbb
and
jno
mov
cs
inc
sahf
imul
popa
lods
lods
dec
ja
(bad)
dec
push
retf
je
pop
cmps
bound
fs
retf
mov
ja
fcom
cmp
push
sbb
lds
ds
sbb
call
ja
xor
leave
or
aam
add
push
loope
sub
xor
adc
or
dec
push
ins
out
ret
mov
jnp
cwde
loopne
mov
cmp
mov
ins
mov
fsub
inc
inc
adc
pop
jecxz
fistp
adc
imul
jo
fsub
add
out
adc
enter
addr16
(bad)
out
sbb
fdivr
(bad)
mov
and
popa
dec
es
pminub
inc
mov
lahf
or
sbb
and
or
jns
push
shl
jl
mov
leave
mov
fld
mov
jne
mov
ficom
cmc
stc
movs
lods
mov
pop
into
xor
mov
into
fs
fcomp
cld
jnp
pop
int3
fcmovbe
pusha
dec
pop
mov
xchg
arpl
jg
(bad)
and
shl
in
add
push
add
jb
ffree
jge
in
jmp
or
pop
mov
mov
scas
dec
(bad)
in
sar
fwait
mov
push
int
loope
mov
adc
in
mov
inc
sbb
test
mov
xchg
cmp
sub
push
cmp
repnz
out
and
arpl
stc
cwde
mov
out
loopne
test
int
sahf
in
(bad)
out
(bad)
push
jle
sbb
rcr
add
sub
jno
aaa
nop
mov
fild
sbb
out
imul
cmp
scas
cmp
lods
outs
xchg
test
aas
sahf
push
jne
movs
shl
mov
sub
push
cld
jmp
and
dec
les
test
aas
mov
stc
cmps
dec
repnz
out
mov
test
mov
jp
jge
add
jle
cmps
retf
or
cmps
add
loope
jmp
xchg
nop
inc
jecxz
cmp
ss
retf
retf
fdivr
retf
aad
xor
outs
fcmovnb
pop
loop
in
pop
adc
in
cmp
mov
js
rcr
lds
inc
mov
fwait
enter
es
pop
inc
jle
xchg
add
xor
mov
cli
rol
loop
mov
xor
or
sbb
xor
mov
and
and
sbb
in
fcom
or
xchg
ds
sbb
ins
xchg
pushf
pop
sti
dec
int3
enter
loop
and
popf
and
std
mov
hlt
jmp
xor
stc
lahf
mov
xchg
sub
popf
adc
or
cwde
mov
jnp
pop
pusha
add
sbb
push
scas
dec
idiv
bound
loopne
and
pop
or
push
icebp
sub
test
call
pop
cdq
ss
popa
mul
ret
jmp
retf
cli
jbe
call
stos
pop
(bad)
and
ss
pusha
cmp
jno
xchg
ss
sbb
sbb
mov
imul
mov
bound
int
test
stc
retf
aam
sbb
fisubr
inc
inc
test
addr16
scas
cmps
or
cmc
div
mov
push
dec
push
loop
lock
mov
bound
jbe
into
ret
adc
dec
in
stos
jns
cmp
popf
outs
je
or
sar
push
daa
jns
xchg
or
icebp
adc
adc
sub
cwde
sub
xchg
lds
jg
push
aas
add
not
arpl
mov
xchg
or
pop
into
push
and
xchg
xchg
push
ss
mov
add
mov
push
pop
inc
inc
outs
cmp
push
pusha
mov
pushf
dec
mov
sbb
or
cmp
sub
enter
or
and
inc
shl
sbb
mov
ret
aaa
aaa
aam
cmp
sbb
mov
lock
inc
pop
cdq
xor
jmp
cld
shl
xor
push
es
jbe
sbb
retf
fbstp
sbb
sbb
je
cmp
mov
outs
cmp
push
jmp
aad
cmp
push
jecxz
sahf
add
xchg
icebp
jge
ins
xchg
fsubr
push
pop
jle
repnz
mov
adc
iret
jo
xor
dec
gs
pusha
loope
xlat
mov
xlat
call
lods
popf
aaa
dec
cmc
xchg
lock
push
push
add
add
clc
movs
daa
(bad)
jnp
out
dec
dec
icebp
in
aam
pop
loope
pop
jmp
push
jne
rcl
gs
clc
or
das
push
lods
sbb
nop
dec
mov
and
inc
shl
call
das
das
or
ret
xor
ins
mov
and
cmp
imul
dec
cmps
dec
shl
dec
bound
add
jmp
les
add
iret
xchg
js
imul
repz
test
push
fcom
(bad)
pop
fwait
jns
mov
pop
jno
pop
pop
iret
out
rol
jo
not
push
mov
mov
add
jl
pop
lock
cmp
add
mov
adc
add
not
shl
jbe
daa
(bad)
mov
jmp
call
popa
dec
daa
jmp
mov
mov
jmp
(bad)
pop
or
add
dec
out
add
xor
je
aam
pop
mov
and
loope
in
clc
jnp
cmp
adc
ins
mov
jo
movs
cmp
xor
retf
retf
in
and
dec
or
jb
in
cdq
jmp
rol
out
test
add
pop
dec
jmp
clc
xchg
xchg
mov
and
xchg
imul
(bad)
retf
xor
je
push
and
pop
mov
leave
aaa
lldt
or
outs
adc
push
add
push
iret
jmp
or
fimul
jg
and
mov
pop
frstor
jo
scas
sbb
movs
shr
jecxz
push
push
ret
and
pop
mov
jp
fimul
fdiv
mov
add
in
xlat
jge
xor
adc
mov
pusha
push
jo
push
mov
add
and
popf
pop
(bad)
mov
jb
js
jno
cmp
mov
mov
dec
xchg
xor
daa
dec
sbb
fld
popf
test
lahf
mov
or
out
popf
lods
(bad)
mov
(bad)
jbe
daa
dec
andps
jp
pop
cmp
inc
test
ins
test
jbe
push
ror
hlt
mov
int3
sahf
cmc
mov
jmp
test
push
mov
lock
jmp
mov
xchg
jp
int3
scas
xchg
rol
outs
mov
xor
fidiv
jae
(bad)
fcomp
int3
pushf
lods
push
mov
sbb
movs
mov
jb
ficom
and
and
std
mov
xchg
push
in
mov
sbb
inc
movs
cwde
(bad)
test
lods
in
mov
aam
aam
xchg
(bad)
push
int3
dec
pop
pop
sbb
add
pop
mov
bound
dec
push
and
cmc
jbe
ins
xor
fs
jl
cwde
pop
pop
adc
test
les
mov
mov
sub
sbb
mov
xor
ins
rcpps
je
and
nop
xlat
jecxz
or
sub
rcl
lahf
sar
arpl
mov
dec
sub
sub
mov
mov
pushf
idiv
cwde
cli
xchg
ficomp
push
repnz
mov
cwd
mov
or
mov
mov
aam
popf
shr
pop
xor
ja
jle
inc
in
test
stos
lds
mov
pop
mov
mov
inc
sbb
pop
cmp
imul
add
pop
push
push
adc
push
loope
and
jb
scas
fld
sbb
dec
and
jmp
in
cmc
mov
cmp
add
or
or
adc
hlt
cmc
mov
or
xchg
inc
inc
and
in
fsubr
mov
out
mov
data16
xchg
lock
cmps
mov
fbstp
xor
xchg
jae
les
inc
jecxz
lds
in
mov
jg
mov
out
pop
call
gs
cmp
fnstcw
pop
cmp
push
or
sub
stos
cmps
iret
adc
mov
push
int
outs
in
arpl
pop
popa
aam
jns
dec
or
jp
es
sub
sub
in
mov
sbb
ins
cmp
dec
or
and
push
dec
lea
pop
les
fs
data16
cmp
std
sub
ins
cmp
xchg
xor
mov
or
add
push
out
sbb
fmul
popf
int3
pop
sbb
in
mov
jnp
int3
add
outs
add
ret
add
and
or
out
dec
cmp
add
dec
mov
push
out
mov
cs
add
xchg
rol
inc
(bad)
push
dec
sbb
aas
pop
jmp
mov
xchg
lods
inc
jno
jl
dec
pop
sub
pushf
std
sub
jne
dec
sbb
mov
add
call
add
cmp
mov
scas
lods
call
pop
add
pop
mov
adc
shl
outs
or
(bad)
hlt
ja
jg
sub
(bad)
mov
cmc
mov
dec
sbb
call
mov
jg
xor
mov
call
mov
xchg
dec
mov
call
cmp
inc
mov
dec
add
dec
out
fisttp
inc
ret
pop
pop
mov
or
iret
call
out
mov
xchg
and
xchg
rcl
hlt
ds
cmps
repnz
pop
jecxz
jb
rcl
fcomp
adc
stos
jmp
cmc
dec
or
inc
out
call
mov
iret
jne
or
lods
mov
pop
cmp
push
fild
outs
retf
test
xchg
nop
retf
inc
and
inc
icebp
mov
or
scas
fisttp
xor
jnp
js
push
jecxz
scas
leave
mov
sbb
push
nop
stos
out
xchg
xchg
fld
jb
jno
mov
push
sbb
retf
cs
push
inc
adc
adc
inc
xchg
or
adc
push
jnp
pop
sbb
repnz
lahf
cli
sub
jg
push
fcomp
mov
call
int
push
cli
adc
push
add
and
(bad)
mov
xchg
fdiv
outs
out
jbe
cdq
cmc
mov
mov
xchg
inc
cdq
fisttp
xchg
mov
std
xchg
call
pop
or
je
cmp
(bad)
lock
out
ins
das
jbe
lods
pop
out
data16
push
dec
xor
stos
cmps
repz
jmp
xlat
push
push
fs
ret
outs
adc
pop
add
adc
jae
rol
pop
lods
inc
in
xchg
lds
and
add
loopne
cmp
push
adc
dec
loopne
xchg
fimul
test
not
retf
pop
jp
mov
sahf
mov
cmp
mov
inc
data16
and
ins
pusha
cmp
daa
push
cdq
pop
push
sbb
inc
test
and
sub
arpl
out
mov
adc
pop
jl
leave
out
test
or
or
push
xor
idiv
fsub
out
(bad)
out
mov
scas
fstp
repz
xchg
jmp
popf
fcomp
imul
pop
sbb
in
ds
and
sub
inc
bound
aad
cdq
fmul
jae
jne
mov
retf
mov
push
or
push
or
scas
dec
sbb
ret
hlt
mov
cmp
xchg
jbe
adc
xchg
addr16
loop
ins
ins
xor
js
dec
cwde
aas
pop
adc
mov
sbb
inc
pop
rcl
movs
lock
fist
xor
leave
add
cmp
outs
xor
aaa
inc
imul
(bad)
or
xchg
and
or
or
cmp
rol
pop
xor
or
frndint
mov
jl
iret
xchg
loopne
movs
jbe
or
and
mov
inc
data16
adc
in
movs
inc
addr16
es
or
mov
cmp
xlat
mov
or
ins
dec
push
push
fs
mov
ret
pop
retf
addr16
stos
and
sub
mov
pusha
xchg
xor
pop
pop
pop
xchg
imul
rcr
(bad)
(bad)
fnstsw
fs
shr
cld
jg
xor
and
cmp
add
fsub
sbb
(bad)
in
scas
push
xchg
mov
shl
jae
jl
push
adc
cmp
sbb
mov
repz
push
aas
pop
out
jno
inc
sbb
iret
sbb
mov
in
aas
retf
add
repz
ret
lods
in
xchg
and
mov
mov
cmp
retf
pusha
addr16
sahf
retf
add
out
sub
repnz
or
ins
aas
pop
call
add
fwait
inc
push
popa
sbb
pushf
pusha
add
hlt
or
jne
xor
push
add
cmp
and
push
jle
pop
mov
movs
retf
jmp
cmp
ret
scas
(bad)
adc
cmps
fistp
sub
loopne
pop
popa
sub
fs
cld
mov
jbe
cmp
leave
cdq
fild
in
mov
sar
mulps
or
jle
imul
(bad)
jle
inc
xor
dec
or
loop
in
cwde
mov
or
jmp
in
or
dec
pop
jae
cmps
jmp
les
(bad)
cmps
sahf
stos
(bad)
sbb
ins
cmp
xchg
scas
(bad)
or
jl
outs
xor
out
aaa
jb
sub
and
pop
sbb
jg
sub
dec
sub
inc
add
stos
jmp
enter
and
inc
adc
popa
push
aaa
out
ror
jnp
leave
mov
nop
add
jg
jge
test
lahf
stos
sub
adc
cs
in
(bad)
mov
xlat
outs
mov
ss
adc
or
je
jo
test
jne
jns
mov
or
sbb
pop
out
mov
ins
(bad)
stos
stc
mov
pushf
lods
ret
cs
jne
je
jb
scas
bnd
push
jge
push
out
lds
mov
push
and
daa
push
mov
jne
stos
cli
xor
cmp
fmul
outs
or
add
test
add
ins
sub
sbb
inc
or
loop
daa
or
push
loope
cmp
rcr
inc
or
pop
pop
cmc
hlt
mov
sub
and
inc
mov
inc
sbb
xchg
sub
sbb
hlt
mov
lods
jo
pop
adc
sbb
frstor
jne
push
repnz
test
imul
cwde
inc
ret
mov
sbb
out
repz
mov
push
movs
rcr
lock
int
mov
mov
addr16
inc
adc
push
jmp
cdq
mov
stos
cmps
imul
fnstsw
pop
out
(bad)
retf
mov
push
clc
repz
xor
in
lahf
aad
lds
mov
xchg
cmc
xchg
scas
imul
mov
popa
xchg
sahf
(bad)
xchg
ror
rcr
rcr
sahf
(bad)
and
fwait
je
sub
fistp
add
or
(bad)
push
inc
jecxz
addr16
inc
mov
mov
cs
in
push
xor
div
or
dec
in
fisubr
or
inc
xchg
pop
aaa
dec
sahf
dec
adc
pop
in
push
pop
xor
std
mov
cmp
inc
add
pop
popf
add
add
inc
call
or
jl
jle
cmp
test
jne
sub
(bad)
cmp
push
or
and
(bad)
fimul
(bad)
in
mov
retf
ins
add
and
cli
jb
push
movs
cmp
xor
add
mov
movs
pop
cmp
adc
les
mov
mov
mov
inc
push
mov
mov
push
sub
or
pop
loop
mov
xor
sub
push
sbb
jp
aas
mov
mov
in
mov
ins
or
dec
mov
push
mov
mov
cmp
pop
or
fistp
data16
mov
add
sbb
js
xor
mov
nop
das
dec
out
mov
inc
clc
xchg
retf
add
(bad)
ss
out
loope
mov
mov
sbb
ins
add
div
sub
js
mov
mov
nop
je
mov
jmp
jmp
jno
mov
cmp
rcr
cmps
pop
imul
dec
push
dec
arpl
sti
adc
mov
jnp
aaa
and
jns
sbb
fbld
and
scas
scas
(bad)
mov
inc
sbb
push
test
lahf
mov
pushf
std
sub
ja
cmc
jnp
cs
loop
retf
cmp
ja
mov
mov
mov
mov
ins
xor
in
mov
loopne
icebp
or
inc
sbb
pop
out
add
xchg
stos
ficomp
push
dec
or
mov
aam
daa
push
fwait
shr
add
xor
push
addr16
mov
rcr
rcr
or
mov
shl
mov
imul
popf
push
adc
cmc
std
mov
pop
xchg
lds
aaa
ja
push
cs
jbe
loope
cdq
mov
stos
fld
pop
add
or
jno
mov
scas
inc
xor
nop
movs
loop
(bad)
xor
bnd
jno
in
mov
mov
xchg
outs
dec
adc
xlat
ins
sub
outs
or
repz
inc
push
in
repz
add
loop
jno
inc
out
inc
xor
pop
sti
mov
pop
aaa
jp
push
pop
and
mul
or
in
ret
gs
or
pop
out
aam
pop
daa
jns
sbb
dec
add
leave
adc
fnsave
cli
xor
xor
sbb
cli
mov
stc
mov
add
add
xor
mov
sbb
cwde
fstp
sbb
cmps
int
push
xor
dec
adc
or
daa
imul
sbb
pop
es
pusha
xor
or
mov
pop
out
rol
dec
add
cmp
add
pop
jne
dec
push
push
or
push
xor
jns
sbb
jmp
sub
mov
js
cmp
cmc
mov
or
cmc
test
fidivr
outs
or
(bad)
cmc
pop
xor
adc
stc
mov
pop
push
out
sub
xchg
lds
xchg
into
mov
mov
mov
cmp
mov
lea
sub
ins
adc
jle
xor
add
les
ret
stos
in
jbe
and
dec
in
jns
pop
push
xchg
adc
cmps
out
mov
add
mov
xchg
loope
out
mov
cld
xchg
mov
adc
(bad)
xchg
int
leave
popa
mov
jecxz
cdq
pop
or
push
or
jne
inc
fwait
aad
std
popa
cmp
dec
sub
ins
adc
mov
outs
cmp
xor
dec
cmp
popa
sub
xor
push
pop
pop
(bad)
xor
(bad)
adc
rcl
frstor
sub
out
dec
pop
not
mov
aas
inc
pcmpeqb
mov
mov
aad
add
cmp
mov
adc
stc
out
xchg
fbstp
in
push
adc
shl
push
dec
test
out
dec
neg
mov
leave
test
pop
dec
mov
inc
push
ss
mov
pop
jmp
pushf
mov
xchg
jb
adc
push
cmps
and
adc
and
ds
mov
dec
add
cmp
out
(bad)
mov
loop
pop
jmp
hlt
cmp
shl
bound
(bad)
or
jnp
pop
in
ins
or
pop
pusha
sub
in
sbb
push
shl
push
push
loope
pop
ins
xor
cmp
(bad)
pusha
or
fsub
push
pushf
push
sub
popa
aas
jnp
lock
stos
shr
and
les
ret
aas
pop
sbb
mov
xor
xchg
and
hlt
adc
xlat
loopne
cmp
imul
jmp
cmps
jecxz
mov
add
push
pop
push
cld
data16
lock
or
dec
mov
cmp
mov
adc
lock
inc
pop
dec
push
pop
popf
jo
and
or
push
add
jmp
pop
jmp
stos
sti
xchg
stos
mov
add
add
test
xchg
std
jg
pop
nop
inc
(bad)
adc
jnp
jno
jno
pop
add
ins
xor
and
das
je
and
jno
inc
adc
xchg
fmul
icebp
mov
daa
push
xchg
out
mov
add
pop
imul
pop
pop
push
sbb
cli
jge
(bad)
out
xchg
mov
xchg
or
add
dec
jmp
cmp
sub
push
xchg
pop
pop
add
jae
pop
test
jnp
push
in
push
lock
pop
jmp
or
mov
mov
icebp
mov
and
fs
adc
arpl
ds
push
loope
je
ret
xchg
mov
cmps
int3
pop
cmp
dec
xchg
mov
mov
les
push
xor
ins
sbb
fdiv
mov
clc
pushf
ret
sbb
adc
adc
ins
sbb
hlt
addr16
daa
bound
push
add
ficomp
mov
(bad)
push
ficomp
pop
inc
div
bound
pop
cmp
pop
xchg
mov
cmp
adc
dec
or
out
scas
into
bound
inc
xor
fsincos
xchg
push
cmps
(bad)
(bad)
mov
push
pop
in
mov
or
aaa
dec
xchg
inc
adc
xor
cmp
out
push
scas
inc
xor
add
pop
push
out
pushf
ret
leave
xchg
fistp
mov
inc
aas
dec
push
inc
push
int
cmp
sti
out
and
jne
and
pop
cld
scas
mov
sub
inc
or
dec
div
or
js
in
cli
test
jg
push
xor
cli
jle
push
cmovns
push
xor
inc
jmp
sbb
jbe
outs
or
sub
inc
xor
jnp
or
sub
inc
fiadd
or
or
xchg
inc
mov
mov
xor
jmp
jbe
imul
hlt
outs
ror
mov
mov
out
out
push
rcr
lidtd
xor
mul
in
lahf
mov
mov
mov
mov
int
call
mov
lods
push
mov
cmp
ds
pop
(bad)
xor
out
pop
fmul
lds
not
(bad)
cwde
dec
mov
mov
jl
push
mov
inc
add
mov
shl
pop
inc
fld
sti
add
iret
cmp
dec
cld
sub
xor
inc
movs
inc
movs
pusha
(bad)
cmps
push
push
or
dec
or
xor
(bad)
xchg
ror
ins
retf
dec
ret
cdq
mov
aam
push
in
pop
mov
cmp
mov
data16
pop
adc
or
inc
jmp
hlt
cwde
enter
out
int
fcomp
xlat
(bad)
out
mov
push
mov
fcomp
cs
xchg
jle
ins
sar
jae
outs
xlat
xor
pop
enter
aad
stc
nop
fistp
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
push
adc
pop
cs
push
inc
add
push
pop
pop
push
fs
je
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
push
adc
pop
cs
push
inc
add
push
pop
pop
push
fs
je
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
push
adc
pop
cs
push
inc
add
push
pop
pop
push
fs
je
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
push
adc
pop
cs
push
inc
add
push
pop
pop
push
fs
je
jne
je
push
and
dec
or
daa
fs
pop
xor
addr16
push
adc
push
and
inc
add
jae
test
or
mov
addr16
movs
aam
lds
out
mov
test
movs
mov
lock
mov
xchg
sahf
cld
(bad)
mov
dec
daa
jg
popa
xchg
(bad)
ror
das
ins
ss
aas
fdivr
cmp
mov
cli
test
mov
stos
in
std
lahf
int
jmp
push
or
dec
adc
inc
sub
pop
cmp
sub
test
sbb
jne
inc
sbb
cmovo
es
adc
xor
mov
xchg
pop
add
xor
pop
pop
or
fs
gs
mov
mov
icebp
add
jmp
lods
out
mov
test
add
and
inc
xor
pop
push
ins
xor
bound
dec
and
sub
inc
jo
jb
jae
push
and
inc
sbb
or
inc
add
mov
lods
jmp
sahf
in
mov
movs
out
int
jmp
repnz
hlt
mov
xchg
in
sti
xchg
xlat
movs
cld
mov
jmp
jmp
stos
loopne
cld
mov
cmc
mov
cmps
les
daa
je
push
ss
jge
popa
and
dec
cmp
jb
push
sbb
cmp
jg
outs
or
sub
dec
add
pop
add
push
xor
mov
scas
lods
mov
xchg
(bad)
stos
in
mov
test
scas
mov
aad
mov
iret
pushf
fistp
jp
dec
std
mov
out
(bad)
ret
aas
leave
xchg
inc
bound
jnp
dec
adc
stos
clc
loop
fidiv
enter
push
add
pusha
ret
jge
repnz
ror
and
test
fist
dec
mov
(bad)
rol
add
mov
sub
cmp
inc
adc
or
cli
push
ss
jne
dec
(bad)
mov
xchg
outs
pop
push
bound
das
mov
adc
bound
xchg
int
(bad)
in
outs
pop
xor
xchg
lods
sbb
in
adc
sbb
int3
jns
push
or
dec
sbb
jmp
push
mov
xchg
or
or
jnp
dec
sahf
int3
icebp
cmp
inc
lds
pop
pop
dec
fistp
mov
je
mov
cs
popf
jne
adc
sub
cmp
jmp
pushf
ret
rcr
push
dec
gs
stos
sbb
mov
dec
aas
in
movs
call
mul
adc
mov
rcl
jp
or
xchg
dec
clc
idiv
in
(bad)
in
xchg
cmp
gs
stos
xchg
fwait
xor
push
(bad)
adc
or
sti
call
scas
ds
jbe
dec
fsub
and
mov
test
out
(bad)
sub
cmc
fldenv
jb
jbe
cwde
imul
scas
lock
loope
and
scas
and
scas
adc
loope
adc
pop
out
movs
push
in
push
mov
cmp
dec
mov
imul
sub
rol
ins
lock
or
fnstcw
jmp
inc
cwde
movs
pop
push
dec
cmc
mov
shr
mov
pop
ror
and
xchg
adc
push
loop
dec
xor
sub
sbb
mov
sub
retf
or
(bad)
jnp
out
test
int
inc
dec
(bad)
xor
pushf
xchg
sti
into
sbb
stc
mov
jmp
rcl
(bad)
inc
cmp
sub
mov
jbe
mov
aam
movs
mov
jb
jo
enter
and
cmc
test
call
or
adc
jbe
sub
xchg
fdiv
inc
sti
adc
lods
push
adc
push
(bad)
div
out
jmp
xor
pcmpgtb
sbb
arpl
in
and
push
xlat
ds
rcr
xor
sbb
xchg
xchg
cmp
mov
lods
leave
inc
dec
loopne
xchg
fistp
movs
inc
jge
cmp
mov
jl
mov
push
in
mov
std
in
call
pcmpeqb
fistp
mov
add
clc
aam
aas
into
js
das
test
cdq
xor
xchg
inc
pop
cmp
and
push
or
sbb
pop
jo
lahf
sbb
rol
imul
adc
(bad)
scas
fcos
and
dec
add
ja
mov
daa
sub
inc
cld
mov
scas
scas
jl
fstp
in
mov
movs
aas
push
daa
mov
inc
dec
scas
pop
ret
adc
adc
call
sti
and
or
(bad)
xchg
jmp
xor
popa
mov
or
loop
retf
xchg
sbb
mov
jae
or
test
pop
push
pop
push
sbb
test
(bad)
out
or
pop
into
repnz
mov
jb
pusha
xor
scas
or
or
sbb
ror
cmp
pop
mov
mov
je
sub
mov
fidivr
push
stc
cdq
push
push
(bad)
lods
sbb
and
and
pop
jo
xlat
movs
mov
and
mov
sti
mov
ins
and
or
cmp
lods
bound
push
bound
push
dec
popf
xchg
movd
mov
nop
daa
loop
ficom
cmps
rol
in
arpl
xchg
mov
(bad)
lds
outs
out
pop
aam
mov
mov
movs
outs
sub
scas
nop
xchg
sub
stos
and
ds
cmp
out
push
pop
popw
scas
sbb
xchg
xchg
das
adc
das
mov
scas
or
out
and
pop
rcl
jae
ins
mov
and
or
pop
(bad)
dec
pop
push
xchg
scas
rcr
add
push
paddb
ret
cmps
sbb
jmp
or
add
xor
mov
test
fldenv
mov
mov
stc
xor
pop
ficomp
outs
mov
das
xchg
leave
jl
sbb
inc
(bad)
loopne
rcr
sar
sbb
stos
fist
adc
(bad)
push
inc
xor
mov
and
outs
mov
in
repz
(bad)
scas
rcl
xor
int
movs
cmc
ret
pop
aam
out
leave
add
outs
sub
pop
dec
pop
inc
and
scas
(bad)
lods
inc
cmp
stos
js
gs
pop
mov
inc
sbb
sub
push
cdq
sub
mov
cmp
fwait
ret
outs
daa
movs
push
add
fucomip
mov
xor
mov
inc
mov
fcmovnb
xor
sbb
inc
idiv
call
push
adc
popf
cmps
inc
cmps
or
add
sub
mov
cmps
mov
or
inc
xchg
gs
cs
test
inc
and
fldenv
std
push
and
push
dec
loop
call
inc
call
jmp
lea
ret
and
mov
les
ret
pop
test
add
fdivr
cmp
cdq
aas
or
cmc
fadd
xlat
(bad)
call
js
(bad)
pop
or
jg
not
adc
sbb
icebp
pop
loopne
fnstsw
out
and
pop
mov
movs
push
xchg
sar
push
and
ds
je
imul
lock
and
nop
inc
inc
cdq
mov
js
call
xor
add
call
nop/reserved
das
shl
mov
add
sub
cmps
hlt
loop
jne
cmp
dec
jae
jmp
imul
push
jp
mul
xchg
jmp
int
f2xm1
mov
push
xchg
push
ins
or
dec
jmp
sub
ins
fstp
fsub
jno
or
rol
shl
push
rcl
cmp
dec
ret
int
add
movs
or
pop
nop
loope
mov
stos
sub
repz
xchg
inc
fucomip
or
int3
mov
mov
sar
dec
bound
into
jmp
jne
push
inc
mov
push
mov
dec
retf
and
fild
call
sub
clc
jle
outs
pop
dec
shl
adc
imul
jnp
jne
jnp
es
in
push
(bad)
fsubrp
mov
loop
test
sub
stc
dec
pop
sahf
loopne
(bad)
xlat
shl
push
lea
mov
addr16
jecxz
dec
sbb
dec
adc
mov
(bad)
inc
aas
fst
mov
scas
enter
pop
aam
daa
jecxz
cmp
fstp
cli
not
(bad)
loope
movs
adc
inc
add
lods
call
clc
aas
push
dec
sbb
loope
call
jne
pop
pusha
xchg
jno
xor
cmp
mov
or
stos
pop
icebp
(bad)
cmp
add
cmp
lock
(bad)
fisub
pop
bound
stos
outs
push
and
repz
sbb
dec
bound
hlt
into
clc
test
mov
in
(bad)
jmp
loop
test
stos
push
(bad)
jmp
or
push
dec
dec
jnp
jae
and
stos
mov
push
call
(bad)
xlat
shl
xchg
dec
sysenter
jecxz
jmp
add
popa
leave
sahf
cld
inc
push
test
rcr
into
fdiv
hlt
push
mov
rol
push
xchg
add
mov
aad
xor
xor
nop
jno
and
bound
sub
sub
jb
dec
iret
mov
outs
mov
rcr
les
addr16
mov
mov
fild
jle
fcomp
cmp
icebp
xchg
adc
xor
pop
div
or
pop
(bad)
inc
jge
cmp
pop
stos
(bad)
jl
pop
fidiv
xor
fdiv
xchg
pushf
cmp
fadd
add
scas
mov
sbb
(bad)
and
cmp
or
mov
and
jne
daa
(bad)
mov
fcmovnbe
and
cmc
imul
sub
xor
sub
jne
(bad)
dec
fs
fsubr
repnz
dec
inc
cmp
mov
cmp
movs
or
inc
pop
retf
push
inc
mov
mov
js
pusha
xor
adc
push
adc
pop
leave
or
pusha
mov
retf
bnd
dec
mov
add
loop
jmp
add
pop
cs
test
adc
in
fdivrp
ja
inc
push
call
aad
pop
ds
ficom
sbb
sub
cmp
jecxz
clc
into
cdq
mov
imul
int
cmp
(bad)
fwait
ret
popf
loope
sbb
(bad)
mov
in
and
loope
repnz
(bad)
repz
cmp
push
aam
cld
pop
cmp
push
mov
test
xor
xor
mov
xor
arpl
outs
dec
pop
rcl
push
fnstcw
pop
cli
adc
adc
sub
or
int3
mov
xor
push
(bad)
fsub
jmp
jl
dec
rcl
sub
or
(bad)
enter
(bad)
dec
daa
fidivr
(bad)
mov
or
(bad)
adc
ret
xchg
stos
fwait
mov
and
popa
outs
inc
out
mov
call
gs
sub
fidiv
std
daa
in
fdiv
jbe
cmp
cmps
adc
push
fdiv
cmp
rol
arpl
sub
xchg
jbe
jb
add
(bad)
mov
push
test
cmp
cli
loop
bound
aad
xchg
pop
add
pop
dec
ins
mov
jle
imul
pop
add
mov
inc
lods
leave
adc
lea
dec
mov
in
inc
test
push
leave
xlat
dec
inc
imul
jmp
(bad)
popf
repz
push
mov
xor
shl
retf
mov
cmp
sbb
int3
int
xchg
cmp
jl
mov
cmp
sub
(bad)
repz
and
jmp
clc
fwait
inc
pop
sar
xchg
add
push
fild
in
xchg
cwde
inc
fstp
test
nop
mov
cs
ss
sbb
push
mov
stos
mov
mov
addr16
fcmovb
(bad)
mov
xor
mov
mov
into
cmc
sbb
(bad)
call
inc
test
ds
cmp
jnp
out
bound
out
movs
cmc
mov
in
push
imul
popf
cwde
and
add
mov
aam
movs
mov
adc
push
inc
retf
cmc
setae
sbb
aaa
sub
add
fdivr
jle
into
sti
push
xchg
daa
add
cmc
mov
rcl
mov
dec
push
fucomi
retf
xor
push
sub
stos
loope
and
pop
fistp
in
pop
jbe
push
fisubr
icebp
xor
mov
mov
and
dec
addr16
push
mov
adc
adc
ja
ret
scas
xchg
pop
or
nop
sbb
test
mov
cs
fldcw
and
je
nop
or
mov
inc
xchg
ins
pop
ins
pop
fcom
push
pop
mov
xor
jge
test
xor
mov
cmp
aad
les
mov
loope
sub
inc
mov
or
jbe
fst
push
push
rol
ds
mov
pusha
movs
and
sub
pop
lds
call
xchg
jle
imul
addr16
das
movs
mov
or
dec
push
dec
call
out
add
dec
(bad)
out
dec
jmp
adc
pop
push
fsubr
dec
adc
sbb
push
sti
add
ins
xlat
jge
and
xchg
push
(bad)
stc
addr16
fwait
mov
iret
push
and
jmp
aaa
ret
mov
(bad)
data16
or
sub
add
test
fst
jge
cmp
outs
cmps
mov
xchg
jmp
ret
mov
shl
mov
or
or
int
outs
clc
stos
mov
xor
enter
imul
dec
push
push
outs
xchg
push
pusha
icebp
add
xchg
add
les
mov
scas
dec
xor
arpl
retf
enter
xchg
xchg
ins
leave
add
call
hlt
sub
sbb
sub
int
dec
in
jbe
and
arpl
and
pop
pop
or
je
xchg
cmp
sahf
std
jecxz
fist
sbb
dec
stos
(bad)
out
bound
inc
mov
jnp
mov
dec
mov
pop
(bad)
fisub
leave
xor
loopne
fisttp
pop
xchg
dec
jg
mov
dec
(bad)
adc
cmp
arpl
pop
in
fiadd
xchg
add
enter
iret
fdivr
stc
jge
dec
dec
jmp
icebp
ins
in
addr16
ss
into
fcomp
cmps
cmps
pop
or
(bad)
les
xchg
pusha
xchg
xor
and
dec
cmp
xor
jmp
xchg
addps
adc
mov
dec
outs
adc
mov
sub
fisub
cwde
imul
mov
adc
jne
das
mov
jmp
pop
outs
add
daa
stc
jb
fcomp
push
jp
push
inc
jge
mov
mov
jl
cmc
not
and
test
repz
enter
xor
and
mov
and
cmc
outs
scas
popf
inc
ja
out
jno
push
mov
push
scas
jle
daa
inc
ins
(bad)
mul
add
imul
sub
push
sub
nop
ret
xor
out
arpl
cwde
dec
jmp
or
add
jmp
jb
mov
int
push
mov
cli
inc
cld
pushf
lods
sub
out
pop
push
dec
mov
or
xor
(bad)
sbb
push
leave
arpl
xchg
pop
std
iret
mov
popf
add
push
mov
adc
int
arpl
mov
mov
dec
clc
xchg
cmp
add
mov
adc
sub
sub
ja
stos
out
mov
cmp
pop
and
rcl
adc
stos
data16
repnz
push
imul
mov
addr16
xor
das
out
mov
pop
jbe
mov
dec
rcl
in
adc
sahf
cld
pusha
dec
inc
mov
lock
and
fild
pop
shl
pop
sub
ins
aaa
mov
sub
enter
add
xchg
ds
pop
mov
inc
mov
mov
ins
int
mov
dec
data16
in
mov
icebp
ror
xchg
leave
popa
int3
push
jbe
adc
(bad)
bound
imul
sub
mov
xchg
(bad)
stc
sti
add
pop
cmp
(bad)
cmps
and
daa
jmp
pop
pop
stc
mov
popa
lahf
aad
jle
xor
bound
dec
fiadd
mov
lahf
lea
cmps
outs
cs
call
jbe
aad
cld
fdiv
inc
les
in
cli
mov
addr16
ret
push
jne
mov
dec
sub
sub
cmp
pushf
mul
inc
fsub
cmps
retf
mov
add
sbb
sbb
jnp
enter
rol
sbb
dec
xchg
ror
mov
xchg
shr
xor
movs
enter
shr
dec
jmp
or
pop
hlt
mov
mov
das
jmp
fmul
into
jle
sub
cdq
outs
dec
adc
scas
sahf
jbe
mov
or
aas
dec
mov
mov
in
mov
sbb
pop
mov
pushf
push
adc
gs
cmp
push
das
ja
fimul
pop
adc
or
cmp
call
leave
sti
xchg
mov
loope
cld
stos
fmul
retf
icebp
mov
pop
mov
sbb
call
movs
ins
aaa
les
fidiv
retf
xlat
sar
xor
add
push
jne
mov
jae
fidivr
les
shl
clc
dec
adc
int
sbb
pop
push
addr16
push
rcr
xchg
dec
dec
mov
and
xor
push
test
test
add
loopne
push
xor
pusha
add
lods
xchg
sahf
dec
fcmovb
daa
xor
js
jle
pop
sbb
test
and
jl
lods
dec
dec
in
jecxz
movs
repz
or
fidiv
pusha
std
das
in
mov
xchg
or
mov
shr
jns
arpl
shl
fwait
(bad)
and
cmp
adc
dec
xor
fild
(bad)
stos
mov
outs
sbb
(bad)
out
jne
mov
js
mul
gs
jge
sbb
ja
aad
or
clc
int3
jge
outs
(bad)
mov
mov
mov
jmp
lea
test
xchg
fdivr
aaa
cmp
lds
icebp
sub
loop
das
mov
fwait
out
mov
xor
jle
sub
push
lods
cs
cmp
mov
call
mov
push
fsubr
mov
fisubr
adc
ss
outs
dec
fucomp
cs
mov
xor
addr16
out
test
cld
mov
pop
ins
in
mov
je
call
mov
js
sar
push
push
or
dec
dec
into
jno
push
rol
xor
push
and
in
fnsave
cld
outs
pop
jns
dec
stos
xchg
call
stos
adc
in
or
mov
test
add
add
cwde
test
stos
jl
xchg
ficomp
add
repz
jecxz
jg
mov
inc
lods
xchg
mov
or
mov
push
arpl
repz
fild
and
cmp
(bad)
add
mov
push
ins
xor
out
cmp
(bad)
(bad)
(bad)
mov
imul
cmps
sbb
inc
fmul
pop
inc
mov
add
or
bndldx
jmp
sahf
ss
dec
clc
jecxz
imul
mov
jns
loope
xchg
fst
ins
xchg
out
sti
pop
repz
call
push
jecxz
jmp
xor
add
dec
xor
mov
mov
ins
xchg
pop
cmp
call
idiv
cmc
or
arpl
and
in
cmps
mov
imul
xchg
add
mov
std
xor
pop
hlt
arpl
repnz
lods
test
out
jecxz
ja
xchg
adc
or
sub
stos
or
js
mov
repz
push
cmp
into
mov
frstor
inc
mov
out
imul
xchg
int
cmps
jp
ficomp
add
shr
fcom
mov
in
sub
shl
ds
ficomp
loope
sbb
stc
js
sub
ror
(bad)
lock
jno
test
mov
in
sub
ins
fmul
pushf
jae
xor
or
lea
dec
jecxz
mov
pop
jmp
jmp
adc
inc
loop
stos
inc
jmp
sub
jne
mov
sbb
test
dec
sahf
in
sub
dec
mov
and
jl
push
out
jl
in
pop
adc
aas
xchg
push
jo
loop
cmc
and
pop
hlt
xchg
das
outs
(bad)
or
cmp
mov
push
jl
add
cli
xchg
cli
push
pop
fwait
inc
fucomp
pop
lahf
mov
inc
(bad)
pop
adc
xchg
mov
cld
test
fiadd
fdivr
ss
sbb
frstor
cdq
ds
jb
shr
jg
xchg
fwait
and
add
sbb
pop
stos
frstor
push
scas
adc
xchg
dec
inc
shr
xor
jecxz
push
mov
mov
popf
es
loop
ss
retf
into
loope
popa
aas
outs
loopne
push
shl
mov
add
out
call
push
inc
jp
jno
stc
or
inc
(bad)
jmp
mov
call
pop
and
and
mov
test
xchg
aaa
outs
add
xchg
push
add
test
adc
ret
stos
push
addr16
pop
fs
int
and
and
push
jns
out
dec
bound
outs
nop
aas
xchg
dec
outs
ret
adc
shl
sbb
dec
pop
nop
mov
scas
sub
retf
xor
ins
pop
ret
and
pop
xchg
pop
sub
cli
ret
repz
sub
dec
enter
sub
xor
or
scas
test
jge
lahf
scas
dec
add
mov
push
ins
jmp
ds
mov
rcl
ins
cwde
mov
std
mov
enter
mov
pop
add
movs
mov
je
pusha
bnd
loope
jns
sub
movs
out
mov
mov
xor
cmp
mov
sub
rol
scas
shr
or
ja
add
ror
(bad)
cdq
sub
and
fild
in
sub
jns
cld
or
lds
push
loopne
push
sahf
mov
add
vdivpd
data16
jnp
cmp
es
push
or
mov
xchg
shl
sbb
add
push
std
inc
outs
push
test
dec
lea
dec
inc
jg
cld
cld
repz
cli
cli
pop
mov
xchg
adc
das
mov
stc
lock
push
outs
cwde
out
mov
and
inc
ret
cmp
movs
in
popa
cs
movs
sahf
test
test
jge
(bad)
adc
out
clc
pop
xor
jl
add
test
stos
dec
int
mov
arpl
nop
mov
int3
fidiv
pop
mov
(bad)
adc
jle
fnsave
(bad)
pushf
jno
(bad)
dec
mov
sbb
cmps
mov
adc
pusha
dec
js
test
ret
js
retf
fmul
iret
test
outs
sbb
add
lods
stc
fnstcw
dec
sbb
mov
aam
dec
inc
xchg
repz
sbb
movs
clc
lahf
aam
icebp
mov
xchg
das
dec
jae
shl
lock
cs
aaa
bound
in
dec
sub
lock
jle
int3
fcmovnb
out
mov
cdq
and
out
pop
fdiv
jmp
je
cmp
das
loope
shl
cld
and
sahf
push
pop
(bad)
ret
xor
shl
push
xchg
outs
aam
enter
lds
test
pop
xchg
mov
cmp
mov
fld
sbb
cmps
adc
call
pop
clc
cmp
loope
pop
das
fidiv
dec
int
sar
shl
sbb
sbb
clc
bound
lods
stos
fbld
xchg
int
adc
pop
jbe
(bad)
and
sub
cmp
xor
add
scas
xchg
cwde
sahf
arpl
icebp
add
push
jnp
cmp
sti
xlat
and
iret
rcl
sbb
sub
dec
fwait
and
inc
in
js
retf
or
retf
stc
cwde
add
out
cmp
or
(bad)
in
mov
cmp
mov
or
imul
mov
mov
std
in
push
dec
shl
imul
xchg
cwde
(bad)
pop
not
pop
inc
inc
mov
test
jp
sahf
fistp
test
mov
test
repz
inc
enter
repnz
mov
pop
xor
push
call
adc
fstp
xor
dec
fwait
pop
fimul
xor
(bad)
fsub
mov
pop
mov
cmp
cld
sub
add
xchg
mov
js
xlat
out
pop
int
ret
inc
dec
rcl
daa
sbb
pop
loope
inc
mov
(bad)
dec
pop
js
loopne
fst
sar
(bad)
pop
adc
daa
sbb
loopne
mov
(bad)
push
cmps
scas
jge
pop
push
xchg
xor
test
pop
jo
pop
xchg
cmp
cmc
mov
outs
mov
inc
push
lahf
push
or
pop
lods
pusha
stos
mov
out
mov
mov
sub
dec
xchg
iret
pusha
ror
imul
pop
cmp
repnz
push
or
xchg
or
xchg
sahf
sti
and
dec
ficom
push
mov
addr16
stos
mov
retf
cmp
addr16
add
icebp
imul
xchg
push
mov
adc
push
and
adc
aaa
mov
push
fs
out
movs
mov
xlat
jo
jle
mov
jo
dec
jns
call
pop
jle
sub
lahf
shl
adc
xor
inc
add
dec
push
sbb
pop
inc
lock
inc
test
pop
mov
sahf
jge
aam
push
mov
mov
cmc
into
mov
jmp
push
nop
lods
push
stos
fidiv
mov
add
das
xchg
add
clc
fisubr
mov
js
xor
loop
push
mov
jle
(bad)
lods
mov
mov
adc
pop
push
(bad)
fild
and
lock
pop
adc
jns
mov
(bad)
in
icebp
in
in
and
mov
js
not
mov
dec
cmps
mov
jecxz
adc
cwde
pop
jge
dec
in
pop
sub
sub
or
jmp
add
pusha
push
cwde
jno
sahf
popa
repz
pop
pop
lea
in
and
cmp
xor
adc
xor
pop
adc
sbb
xor
in
mov
cmp
enter
push
arpl
mov
fiadd
fld
cmp
cmp
dec
(bad)
or
imul
adc
xor
adc
outs
mov
jg
int
lahf
ja
adc
adc
inc
jecxz
xor
or
out
mov
push
sbb
push
fnstenv
mov
in
xchg
arpl
mov
stos
scas
xor
fld
or
xchg
inc
sbb
sbb
lods
rol
jne
mov
inc
adc
iret
xor
or
xor
dec
imul
rol
out
ret
stos
or
adc
aaa
push
rol
or
(bad)
push
mov
pop
add
sub
mov
xor
mov
ficom
xor
jg
movs
lods
int
rcl
and
mov
enter
call
retf
test
enter
shl
sbb
aam
sysenter
push
xchg
aas
inc
fstp
or
std
mov
jmp
movs
enter
add
xchg
jl
retf
inc
inc
call
stc
enter
mov
jo
adc
leave
mov
imul
push
jp
fld
into
jnp
iret
push
dec
pushf
aad
xchg
scas
retf
mov
mov
cs
bound
xchg
dec
fstp
and
out
das
sahf
fimul
cli
sub
pop
mov
sti
lods
(bad)
pushf
rcl
fsub
and
mov
jp
sub
and
xchg
mov
jmp
imul
gs
cmp
jo
add
loope
pop
out
mov
daa
push
leave
out
stos
cmc
loopne
add
pop
lock
sbb
outs
mul
dec
aas
dec
pop
cmc
js
cld
femms
add
out
dec
jp
jns
add
popf
in
xor
out
inc
xchg
jmp
(bad)
shl
int
cld
cld
aam
js
adc
dec
cdq
in
clc
movs
ret
pop
stos
and
ret
jno
mov
cmps
outs
mov
popf
je
or
jns
enter
xlat
cmp
ins
mov
mov
mov
fsubr
cmps
ins
cld
dec
ret
test
movs
sbb
pop
xchg
aaa
gs
and
ss
movs
xor
or
and
pop
inc
(bad)
loopne
push
xor
sbb
lahf
xchg
add
out
mov
outs
mov
mov
pop
xchg
inc
pop
inc
fwait
xchg
sub
pop
cmps
lahf
lock
leave
xchg
push
jp
fstp
mov
pop
in
icebp
mov
add
jecxz
fs
sub
dec
mov
push
mov
xchg
mov
adc
sbb
shr
pop
pop
mov
and
jecxz
pop
mov
out
iret
mov
mov
scas
mov
je
ret
sbb
fs
out
inc
and
loopne
stos
xchg
aas
repnz
in
in
stos
fnstcw
jns
jl
arpl
adc
adc
mov
into
sbb
movs
jnp
mov
mov
sbb
popf
cmp
nop
mov
loopne
jmp
mov
ficom
cmps
or
in
cmp
lods
pop
ror
les
test
pop
mov
rcr
rcr
hlt
bound
push
jns
(bad)
(bad)
lds
xor
test
leave
mov
pop
sbb
sub
mov
and
and
cmp
inc
xor
pop
retf
int
adc
mov
adc
jp
(bad)
(bad)
xor
std
push
mov
popa
scas
cld
imul
jo
jnp
push
mov
cld
pop
push
and
mov
sbb
mov
jge
out
out
shr
inc
adc
jp
sub
imul
push
das
sbb
xor
daa
loop
push
cmp
lock
stc
inc
pushf
std
mov
std
in
retf
stos
mov
mov
fs
(bad)
rol
rcl
mov
in
je
sbb
xor
mov
cs
lds
jecxz
push
jmp
cmp
cmp
mov
xchg
mov
aam
mov
(bad)
add
or
xchg
inc
push
stos
adc
or
pop
mov
dec
pop
fistp
movs
hlt
mov
or
jne
push
pop
xor
mov
popf
nop
shl
xlat
ins
mov
xchg
adc
out
fisttp
data16
jne
sbb
xor
or
adc
repz
fcom
(bad)
fidiv
jns
mov
mov
xchg
daa
adc
jns
mov
mov
mov
leave
mov
jb
xor
jg
(bad)
call
add
cmp
in
ds
dec
xchg
arpl
lahf
enter
pop
cld
lock
sahf
mov
(bad)
push
adc
popa
mov
dec
test
cmp
int
in
dec
dec
aad
sbb
pcmpgtb
cmp
mov
or
stos
fst
mov
cdq
(bad)
mov
out
add
bound
icebp
xchg
sub
dec
and
mov
adc
pop
fucomi
add
xor
popf
or
add
in
mov
imul
adc
fwait
push
xor
mov
pop
popf
je
sahf
movs
lea
imul
les
mov
enter
rcl
sub
arpl
lods
xlat
inc
jle
aad
sbb
jne
adc
jmp
dec
mov
jns
or
cdq
xor
ins
pop
jnp
jle
sahf
fwait
xchg
cli
test
xor
test
jo
mov
mov
dec
cmps
sub
icebp
push
xlat
data16
aam
call
or
mov
pop
mov
mov
mov
add
cld
imul
in
les
(bad)
push
add
adc
push
mov
repnz
cmp
fcmovu
adc
sub
sbb
(bad)
mov
xchg
mov
sbb
fstp
pop
inc
dec
mov
xchg
sub
(bad)
cmc
enter
add
and
xchg
int3
jb
(bad)
retf
shr
push
(bad)
dec
ret
scas
jmp
(bad)
push
and
mov
xor
inc
gs
mov
and
or
cld
enter
mov
mov
ret
mov
mov
mov
clc
mov
mov
and
mov
mov
push
xchg
push
lahf
fwait
enter
or
pusha
outs
mov
adc
xchg
mov
pop
lds
mov
(bad)
sub
push
imul
pop
icebp
jmp
stos
push
mov
inc
mov
test
pop
int3
div
inc
dec
sub
pop
imul
ja
ror
test
mov
loopne
push
ins
jae
iret
mov
inc
mov
pusha
dec
(bad)
lods
xchg
xor
lods
leave
popf
mov
inc
pushf
(bad)
shr
cmp
pop
cmc
ins
mov
sbb
ja
push
retf
adc
dec
fs
cmps
dec
(bad)
fisubr
push
das
mov
sub
lods
shr
fist
xlat
test
xchg
mov
test
fadd
rcr
xor
xchg
pop
and
inc
ja
pop
mov
lock
xchg
ret
and
loopne
sbb
bound
sbb
bound
shl
push
mov
mov
adc
add
mov
or
xchg
in
mov
cmp
cs
xchg
inc
push
xor
int3
pop
mov
push
cmp
sbb
sti
int
cmp
jp
jmp
add
movs
ds
add
lea
mov
cdq
cmp
das
mov
cld
inc
gs
fcom
push
call
jns
loopne
ins
push
sbb
out
xchg
adc
jb
cld
mov
sub
ret
sti
adc
pop
push
sti
rol
dec
cmp
clc
lea
int
cmp
jmp
xor
nop
(bad)
pusha
cld
mov
clc
lods
cmp
lea
stos
cs
enter
(bad)
mov
xchg
fisttp
xchg
neg
movs
mov
call
jne
jnp
bound
test
cdq
pusha
cmps
fld
or
push
adc
lahf
pop
mov
and
mov
sub
int
cmp
xlat
pop
push
lods
test
xchg
add
xchg
arpl
mov
mov
mov
cdq
inc
js
setns
jb
pop
xor
add
repnz
aaa
jg
inc
aam
adc
cmp
mov
sbb
adc
sub
dec
(bad)
jnp
ret
cmp
rcl
test
sti
dec
loope
and
(bad)
bound
xchg
mov
jge
movs
dec
cmp
in
jne
outs
jnp
push
shl
dec
jmp
nop
and
(bad)
jnp
gs
push
nop
inc
daa
sti
repz
lock
add
dec
movs
inc
add
cmp
sub
cdq
pop
push
inc
ja
repz
mov
mov
popf
mov
push
mov
or
pop
popa
adc
rol
push
cwde
xor
stos
dec
ret
or
sub
daa
clc
ror
pop
ret
pushf
cli
or
add
cmp
pop
jmp
scas
jle
mov
vhaddps
sub
xor
inc
push
pop
cmp
xchg
or
(bad)
rcl
adc
mov
movs
test
(bad)
lods
repz
repnz
repnz
div
cmc
dec
xchg
popa
imul
retf
mov
or
int
push
inc
lods
test
pop
jo
dec
dec
fist
sti
push
gs
xlat
sbb
xchg
lds
mov
(bad)
cmp
xchg
loop
xor
mov
push
call
(bad)
std
cld
push
jb
inc
inc
mov
inc
cmp
mov
jmp
sub
loopne
add
les
iret
lds
out
or
fsub
cmps
jp
rol
test
in
xlat
xlat
mov
sub
sub
sub
imul
pop
out
and
sub
mov
outs
mov
lea
daa
push
pop
jecxz
pop
pop
sbb
jns
add
les
shr
mov
push
mov
xor
cmp
loop
jg
mov
fimul
retf
and
out
add
scas
jnp
imul
sbb
push
mov
icebp
add
stc
fnstsw
retf
outs
outs
push
mov
scas
sub
mov
or
stos
cmp
push
pop
fsub
mov
sbb
xor
rol
inc
cmc
or
pop
inc
and
jns
ret
xor
pop
cld
mov
add
jae
and
inc
aas
pop
loopne
add
outs
jnp
dec
cwde
adc
sti
jnp
test
lahf
jb
stc
retf
xor
jns
mov
fst
inc
js
test
inc
imul
ret
loope
inc
out
jbe
sbb
out
clc
xor
pushf
xlat
cwde
aaa
ret
adc
push
cli
jg
(bad)
test
enter
(bad)
pop
mov
or
add
and
push
add
push
push
lahf
int
xor
movs
jecxz
out
xor
stos
in
mov
fs
into
clc
cmp
pop
lods
outs
cmp
stos
dec
inc
push
add
aaa
mov
dec
inc
cmp
call
(bad)
jle
int
xchg
sub
or
in
xlat
adc
jbe
xchg
sbb
inc
fisub
xchg
and
lods
shl
mov
sbb
jns
jecxz
jecxz
repnz
xchg
dec
pop
mov
dec
pop
sar
xchg
out
push
movs
fstp
sub
pop
dec
mov
pop
mov
sub
fistp
jecxz
inc
mov
dec
add
lds
(bad)
shl
adc
adc
ins
adc
stos
mov
in
or
arpl
test
scas
repz
mov
cmps
out
lods
dec
push
int
shl
and
xor
mov
ins
repnz
loopne
pop
and
jecxz
mov
enter
jo
dec
mov
and
out
push
cmp
adc
fistp
adc
jne
scas
pop
rcl
jle
fmul
or
rcl
sbb
cmp
fs
fdiv
repz
(bad)
mov
jae
add
or
rcl
sbb
push
jecxz
iret
dec
jg
push
push
rol
xor
rcl
sub
scas
push
sbb
inc
loope
adc
fild
mov
cmp
int3
call
push
sbb
cmps
pop
out
push
dec
mov
fdivr
mov
shl
(bad)
clc
not
outs
inc
outs
mov
aaa
sar
cdq
not
loope
popa
aad
mov
or
arpl
mov
ret
pop
inc
pop
jl
and
push
or
out
jmp
mov
jns
(bad)
fs
and
outs
and
sub
mov
cmp
mov
xchg
pop
sahf
sub
test
pop
and
fwait
xor
sahf
popa
pop
pop
sbb
sar
js
cmp
adc
cmp
inc
fisubr
mov
scas
add
mov
push
sets
dec
dec
repz
popf
sti
repnz
das
sbb
dec
sar
push
jmp
jne
imul
pop
jmp
mov
jbe
js
adc
into
stc
in
sub
mov
inc
movs
mov
je
xchg
fstp
arpl
mov
cld
mov
xchg
scas
xchg
int3
push
jb
push
daa
dec
scas
push
jmp
xchg
inc
pop
pop
ja
nop
(bad)
jl
rcr
mov
fwait
stos
xchg
mov
js
fcmovne
push
(bad)
jno
es
xchg
xchg
push
add
outs
pusha
mov
repnz
push
push
ss
pop
push
sub
adc
aas
xlat
mov
(bad)
sbb
repnz
jl
mov
mov
int3
sti
sbb
sub
mov
les
in
sub
test
jg
out
or
push
mov
nop
popf
and
push
add
mov
ret
xchg
push
jl
push
fbld
jmp
push
popf
sub
pop
and
imul
call
mov
(bad)
mov
icebp
jmp
add
adc
sbb
inc
add
jle
push
or
cwde
movs
retf
bound
jg
push
and
inc
sbb
adc
xchg
imul
pop
in
xor
mov
call
sar
xor
push
add
xor
push
aaa
push
sbb
and
xor
jnp
push
sbb
(bad)
in
(bad)
fistp
ds
pushf
ret
or
js
je
mov
xchg
gs
xchg
fstp
sub
sbb
arpl
mov
xchg
sti
mov
mov
xchg
fist
push
loopne
xor
add
add
dec
push
pusha
clc
call
push
lds
push
jo
pop
push
sbb
inc
or
(bad)
aam
inc
fstp
iret
mov
xor
ja
jp
data16
pop
xor
and
push
xor
add
push
call
push
adc
dec
loope
fimul
add
fistp
push
cmp
js
dec
add
adc
popf
(bad)
and
jns
shl
daa
lock
call
push
and
std
mov
stos
jmp
cmps
lods
stos
jmp
or
cs
sub
dec
or
imul
push
xor
popf
fidiv
retf
xor
xchg
ror
or
loope
(bad)
(bad)
scas
cwde
mov
lods
clc
cmp
inc
sub
adc
push
in
sub
sub
int3
xchg
loope
xor
pop
sbb
push
push
and
imul
xchg
lds
fwait
shl
nop
mov
lods
lock
fimul
enter
ret
xchg
shr
in
out
popf
movs
fst
adc
(bad)
mov
(bad)
mov
mov
fcomp
mov
addr16
fstp
dec
add
imul
sub
add
push
push
push
or
das
push
lods
rcr
lods
xchg
in
(bad)
mov
outs
test
nop
leave
cmp
outs
sub
push
and
or
test
sahf
sar
mov
addr16
sub
arpl
push
dec
or
add
movs
jge
xlat
mov
xor
mov
cs
adc
mov
(bad)
jno
popf
push
cdq
mov
scas
repz
dec
(bad)
dec
sub
jnp
dec
sub
push
retf
push
or
pusha
add
or
or
dec
ins
aaa
and
js
jle
mov
xchg
pop
jecxz
out
mov
shl
cmp
inc
push
ins
stc
ds
and
sub
pop
in
scas
(bad)
adc
imul
daa
dec
push
xchg
xlat
mov
icebp
push
xor
sbb
lods
fcom
int3
(bad)
cld
mov
into
mov
jecxz
(bad)
sub
xchg
jmp
rcl
in
mov
stos
idiv
aas
inc
mov
add
dec
mov
aad
jmp
(bad)
iret
pop
sbb
loop
or
push
daa
in
mov
test
adc
cdq
fiadd
jg
sbb
imul
not
add
push
jecxz
add
outs
and
jo
dec
cli
mov
cmps
jmp
(bad)
movs
mov
xor
fs
aas
jo
push
sub
out
or
out
mov
or
js
push
jmp
adc
adc
adc
inc
xor
mov
pop
mov
xchg
fdiv
xor
stc
inc
ds
and
out
jbe
jb
pop
cld
xchg
fidiv
sub
jae
push
in
cmps
retf
mov
jae
pop
mov
adc
push
div
pusha
(bad)
scas
cmp
and
lds
xor
xor
push
sbb
aaa
je
sbb
push
dec
fisubr
mov
movs
fisub
(bad)
cmp
mov
test
inc
or
scas
call
mov
xor
or
dec
sbb
jle
out
sbb
jecxz
ficom
call
in
retf
test
mov
add
or
push
imul
mov
cli
scas
int3
and
pop
in
ret
mov
pusha
sahf
mov
jnp
ins
mov
sbb
loopne
pop
add
pop
add
bound
inc
adc
scas
repnz
adc
jnp
sub
pop
sbb
lahf
(bad)
mov
xchg
call
pop
loop
loope
call
ss
and
inc
add
or
les
ror
push
jnp
inc
cli
sahf
test
test
mov
and
outs
push
pop
add
ja
cmp
dec
inc
push
cmove
jl
ret
test
xchg
outs
rcl
jmp
xor
loopne
push
or
clc
jp
test
jo
pop
daa
popa
cmp
pop
or
and
dec
loop
lods
jmp
hlt
add
es
sbb
mov
in
mov
rsqrtps
xchg
loop
shl
mov
jae
bound
imul
cmp
inc
mov
xchg
clc
cmp
mov
movs
ret
lahf
(bad)
add
or
jno
call
xchg
dec
icebp
test
(bad)
scas
test
cmps
sar
jno
es
je
jns
inc
loope
sub
jle
ficom
cmc
mov
dec
xor
popa
or
and
dec
mov
xchg
iret
pop
sub
push
dec
aas
jp
mov
mov
movs
in
pushf
(bad)
cwde
ja
ins
jmp
jge
jnp
pop
icebp
mov
scas
jg
call
mov
sub
fcomp
inc
sub
jnp
cli
pop
sub
daa
push
inc
adc
dec
cs
out
out
jae
imul
adc
xor
test
dec
add
clc
pop
lock
popa
xor
imul
cli
js
pop
rcpps
es
lahf
fmul
mov
add
xor
in
sahf
mov
pusha
push
adc
jg
lea
lods
int3
xchg
gs
sahf
rcr
movs
imul
call
cmc
mov
cld
add
movs
(bad)
bound
or
pushf
repnz
pusha
and
loope
sub
cmp
jl
(bad)
in
mov
test
scas
stos
clc
push
stc
mov
or
dec
es
xchg
(bad)
mov
fnstenv
xlat
pop
loopne
rcl
mov
adc
sbb
pop
test
cmps
(bad)
stos
jnp
data16
aaa
inc
mov
or
loopne
ret
hlt
mov
mov
adc
sub
arpl
push
stc
test
push
mov
ror
and
arpl
cwde
mov
mov
mov
ins
movaps
dec
xchg
aad
inc
clc
fwait
aam
repnz
xor
mov
sbb
jb
pop
rcl
lahf
xchg
repnz
add
xchg
out
retf
mov
rol
addr16
pusha
scas
in
stc
sbb
jmp
rol
icebp
mov
mov
mov
(bad)
jecxz
and
dec
cmp
jae
push
sbb
adc
repz
xchg
loope
push
inc
sbb
pop
sbb
lahf
fnstsw
lods
jmp
and
lds
ficomp
cli
je
and
iret
lahf
(bad)
and
dec
adc
mov
scas
jmp
outs
sub
dec
or
sub
(bad)
cmps
in
push
jnp
cmp
int3
stos
stc
mov
rcr
scas
call
jno
retf
and
jns
jne
mov
or
jp
jne
dec
(bad)
and
fild
movs
loop
(bad)
ds
or
pusha
cmp
mov
aad
or
arpl
in
mov
jne
pop
pop
xor
jno
mov
cwde
sar
mov
sahf
mov
aad
into
mov
xlat
xchg
std
push
loope
in
xchg
cdq
xchg
int3
mov
pop
popf
mov
xchg
fstp
xlat
cmp
xor
mul
push
sub
dec
sbb
add
adc
inc
add
ror
dec
add
mov
add
jle
call
ret
popw
push
out
mov
lea
xchg
(bad)
mov
cmp
xor
pusha
or
js
out
lods
inc
xchg
int
rcr
push
cmp
push
ds
imul
dec
push
inc
sbb
inc
es
call
mov
xchg
fmul
ret
xor
mov
jle
jg
pop
sub
xor
(bad)
xchg
mov
repnz
es
and
sbb
xchg
aad
xlat
xchg
(bad)
xchg
rcl
jo
ret
test
xchg
mov
xchg
fistp
lods
xchg
retf
add
hlt
xchg
test
les
inc
xor
sbb
push
jg
and
mov
mov
call
xchg
scas
(bad)
lahf
lock
lods
fdivr
mov
mov
xor
mov
jmp
and
mov
and
mov
and
mov
repz
fidiv
scas
stc
mov
orps
push
adc
in
cli
mov
mov
(bad)
cmps
call
aaa
inc
or
jle
xchg
cld
mov
ja
pop
out
xchg
scas
repnz
outs
xor
xor
out
xchg
cld
mov
jae
pop
cmp
xchg
ror
rol
jle
cs
movs
(bad)
fwait
dec
sar
mov
or
outs
aaa
je
jge
mov
dec
loop
enter
jl
movs
jecxz
fimul
neg
fistp
pusha
add
xchg
(bad)
mov
out
mov
push
stos
call
sbb
aaa
jp
sub
scas
shl
cs
das
ins
push
push
loop
rcl
xchg
mov
xchg
aam
ins
mov
mov
xchg
(bad)
stos
iret
scas
hlt
addr16
push
iret
sub
or
repz
neg
mov
push
ss
sqrtps
pop
xchg
popf
out
lock
clc
push
cmp
outs
sbb
outs
or
inc
pop
pop
sub
add
push
sbb
lods
into
cmp
fimul
fstp
cmp
pop
pop
ds
pop
mov
loope
xor
push
and
retf
data16
push
xor
jle
(bad)
es
data16
add
lods
and
aaa
je
sbb
ss
push
not
mov
mov
cld
movs
out
int
loope
aad
xor
push
movs
lahf
cmps
loope
fld
cs
inc
sbb
out
mov
inc
mov
push
pop
sbb
push
pop
dec
cmp
sbb
movs
call
ja
es
add
sub
pop
jb
out
je
push
out
and
and
jl
pop
rol
jp
outs
popf
xchg
out
clc
nop
mov
inc
mov
mov
stos
jl
jl
sub
inc
in
popf
je
mov
mov
retf
mov
ror
pop
movs
lahf
fmul
jmp
dec
fcomp
xchg
int3
mov
fnstcw
mov
sar
sbb
fidiv
orps
(bad)
scas
shl
movs
js
clc
mov
movs
enterw
dec
test
jecxz
fwait
dec
test
retf
mov
test
mov
mov
ins
mov
mov
sar
cdq
jmp
inc
mov
test
jo
imul
(bad)
add
inc
add
xchg
addr16
mov
mov
push
sub
ja
icebp
mov
and
push
or
pop
sbb
gs
and
adc
push
jl
outs
adc
retf
push
pop
sub
push
inc
adc
mov
daa
pop
jmp
call
push
and
push
les
ret
add
sbb
cld
(bad)
xlat
xchg
mov
xor
dec
push
push
stc
ds
and
dec
std
mov
inc
adc
push
cmp
fidivr
ins
or
dec
or
mov
xchg
ror
lock
mov
dec
sbb
(bad)
push
push
dec
push
push
sub
mov
xchg
cmps
test
mov
adc
mov
mov
and
addr16
mov
jmp
and
mov
or
dec
into
test
fs
mov
xchg
sar
(bad)
hlt
fldenv
mov
or
inc
add
cmp
je
cmp
push
retf
mov
ficomp
push
aas
dec
out
(bad)
mov
(bad)
xlat
pusha
push
aam
adc
jge
inc
sbb
adc
dec
(bad)
std
mov
add
adc
ret
jno
jae
dec
ds
push
adc
adc
loop
sar
cwde
push
les
test
xlat
xchg
iret
mov
xchg
arpl
clc
mov
mov
lods
enter
je
pushf
stos
fmul
fs
cs
sub
jne
test
lock
lahf
xrelease
push
push
and
(bad)
xchg
mov
in
pusha
or
cmp
dec
cmp
mov
mov
int
cmc
cmps
in
in
in
cmps
retf
mov
scas
div
pop
pop
push
gs
je
jl
pop
or
adc
js
arpl
sbb
mov
inc
add
aaa
jo
loopne
add
in
stc
or
push
jae
arpl
add
or
lods
out
bound
cmps
into
mov
adc
pop
cmp
cmp
pop
sbb
jle
lahf
fcom
sti
mov
or
jmp
movs
rcl
mov
cmp
sbb
inc
into
adc
rcl
retf
pusha
pop
sub
xchg
cld
mov
stos
enter
mov
mov
pushf
in
nop
mov
adc
inc
and
sub
stc
xchg
lock
or
cld
movhps
or
popa
xor
pop
sbb
jge
push
cmp
jns
push
out
dec
adc
leave
stos
in
and
push
test
and
dec
mov
fwait
mov
(bad)
lea
call
fidiv
jmp
test
xchg
(bad)
and
mov
xchg
inc
movs
les
sbb
and
dec
ret
popf
lock
jmp
sub
push
aam
jg
push
outs
or
xor
jno
dec
out
ficom
out
mov
shl
inc
test
test
inc
xchg
ficomp
in
dec
or
rol
std
mov
xchg
enter
mov
dec
adc
das
dec
xchg
test
movs
jmp
cmp
bound
jge
in
mov
cmps
fcmovb
and
fadd
into
pop
sbb
movs
in
push
cmp
int3
cmp
pop
(bad)
adc
call
fistp
mov
and
jl
dec
and
ds
mov
mov
jnp
sahf
fld
lea
and
jg
cmp
cmp
dec
or
jb
add
push
ds
pop
(bad)
jb
inc
push
jecxz
or
cmp
bound
jns
mul
inc
pop
add
pop
popa
daa
ins
pop
dec
push
std
add
xchg
retf
mov
nop
ret
xchg
(bad)
call
xchg
out
div
jp
dec
call
mov
inc
cmp
dec
adc
push
movs
mov
scas
repz
cdq
(bad)
out
push
or
out
cli
mov
mov
lods
loopne
lods
add
retf
mov
ds
cmp
mov
push
leave
xchg
rcl
test
addr16
add
mov
stos
loope
ret
push
in
sahf
repnz
fidivr
mov
(bad)
repnz
mov
push
es
inc
sbb
push
mov
cwde
lods
icebp
pushf
xor
pushf
fldenv
push
adc
fdiv
in
(bad)
jnp
outs
(bad)
adc
dec
out
int
fnstsw
mov
mov
mov
xor
mov
inc
gs
push
mov
jno
adc
pop
rol
pop
sbb
jae
pusha
add
ds
inc
push
add
or
adc
jp
push
ss
pop
or
push
push
push
sbb
inc
sbb
pop
or
sbb
call
xor
push
ds
push
dec
cmp
push
dec
or
mov
mov
shl
test
scas
in
lahf
fnstsw
xor
xor
xchg
cli
nop
inc
ins
sbb
xor
xchg
fisubr
cmc
popf
shl
adc
outs
adc
xor
sub
pop
xor
in
mov
test
movs
cmc
dec
push
xor
out
hlt
mov
add
adc
dec
and
cmp
es
mov
sub
out
mov
into
test
xchg
test
pop
sub
push
adc
sub
mov
out
test
cmc
xchg
idiv
jmp
jg
add
dec
push
inc
out
or
add
or
cs
ret
addr16
mov
sub
lods
jle
dec
sbb
jns
imul
pop
sbb
and
adc
mov
pusha
pop
loopne
test
dec
imul
aam
lds
aam
add
xor
pop
xor
push
cmp
inc
add
sahf
fst
dec
lods
fiadd
nop
imul
cdq
les
jmp
pushf
mov
mov
mov
neg
or
mov
mov
pop
jo
pop
loope
scas
fstp
int
fnstsw
test
mov
inc
das
push
inc
and
sbb
cmp
jge
scas
call
mov
sbb
dec
cmc
push
xor
aas
pop
(bad)
imul
jae
ins
xor
cmps
iret
or
inc
ror
inc
xor
push
jg
jmp
inc
pop
dec
push
pop
ds
in
cld
outs
pop
daa
and
add
and
imul
movs
loop
in
xchg
cwde
lahf
(bad)
mov
imul
addr16
enter
mov
jmp
mov
outs
loopne
(bad)
mov
mov
lods
into
mov
pushf
aam
les
stos
(bad)
ins
sub
pop
add
jnp
pop
add
lahf
bound
dec
pop
dec
or
or
and
enter
outs
mov
jne
int3
mov
and
std
mov
mov
retf
xchg
rol
stos
(bad)
mov
adc
je
pop
out
shl
mul
and
pop
cs
inc
push
lock
pusha
xor
icebp
js
inc
pop
add
in
jle
pop
xor
loop
push
hlt
lods
out
mov
mov
popf
fdivr
cmps
cwde
fist
mov
test
movs
out
fild
dec
push
dec
mov
ret
mov
in
scas
int3
mov
(bad)
pusha
xlat
xchg
(bad)
cwde
cld
xchg
mov
xor
and
jns
jne
or
gs
(bad)
retf
mov
call
sbb
ds
js
inc
sbb
mov
stos
rcr
jns
push
inc
enter
cmp
or
dec
or
dec
data16
fdivr
aad
dec
or
rol
je
jo
sub
jge
ins
das
sub
xchg
dec
sbb
aad
clc
mov
xchg
xor
das
retf
cld
mov
sahf
rcl
fs
push
xchg
push
jbe
arpl
jmp
mov
xor
inc
adc
push
xor
and
mov
scas
jmp
ror
aaa
dec
sub
lods
fistp
xchg
fnsave
mov
leave
pushf
mov
movs
inc
jb
push
sbb
(bad)
push
jne
imul
test
jnp
int
sbb
in
inc
or
mov
adc
bound
in
stos
fadd
ss
(bad)
mov
imul
push
clc
mov
xchg
push
add
sbb
jb
inc
add
xchg
sbb
stos
mov
mov
sub
ret
outs
retf
sbb
imul
lods
mov
adc
add
inc
ret
mov
popa
rcl
add
and
(bad)
stos
xchg
pop
cmp
push
inc
das
orpd
push
movq
inc
enter
mov
push
inc
or
adc
inc
mov
xchg
in
(bad)
sub
push
gs
das
mov
xchg
adc
inc
mov
pop
stc
je
adc
or
jge
mov
mov
xlat
rol
xor
xchg
mov
ret
dec
sub
or
imul
stos
mov
pop
(bad)
jg
and
sbb
pop
fstp
push
mov
loopne
in
mov
sbb
cmp
pop
fcom
lea
pop
into
lahf
xlat
scas
sbb
popa
xor
xchg
rcl
sbb
mov
jecxz
cmps
mov
ins
add
and
clc
mov
leave
xchg
shl
hlt
gs
clc
pop
fcomp
pop
jmp
loopne
ret
xchg
mov
dec
pop
sub
lahf
jecxz
xchg
mov
or
adc
cmp
rol
add
ins
data16
push
sbb
push
and
fcomp
enter
xor
cdq
lds
pop
shl
lahf
mov
imul
add
jno
dec
ds
add
sbb
push
push
(bad)
mov
(bad)
stc
dec
or
sbb
in
xchg
in
es
stc
mov
add
xor
je
lds
xor
out
cmps
mov
pop
add
sbb
xchg
adc
test
ins
and
xor
pop
sub
push
push
adc
cmp
jp
xor
cmp
pusha
xor
inc
pop
dec
pop
push
cs
cmc
mov
mov
inc
into
imul
or
ins
ficomp
mov
mov
cmp
sbb
leave
lods
lea
fs
or
fs
cmc
mov
(bad)
rcr
sbb
pushf
out
repz
int3
sbb
movs
loop
(bad)
sbb
push
and
imul
adc
or
cmp
call
int
iret
xchg
iret
cmps
call
mov
and
(bad)
pop
adc
xor
imul
push
cdq
and
sub
inc
les
pop
sar
sub
adc
push
sub
bound
dec
push
dec
xor
aas
xchg
int3
xchg
int
sub
loope
test
out
ror
rol
retf
mov
mov
jmp
div
repnz
mov
call
je
jo
cmp
fs
push
shl
dec
shl
and
push
aam
aad
xchg
addr16
mov
push
jno
or
push
outs
repnz
mov
xchg
xchg
retf
mov
cdq
fimul
rol
stos
in
stos
loope
std
mov
clc
mov
out
mov
retf
(bad)
retf
pushf
fild
fimul
rol
mov
test
mov
je
es
(bad)
xchg
cmc
ins
push
sbb
inc
and
sub
call
or
(bad)
iret
sub
inc
and
daa
inc
xor
inc
sub
inc
or
outs
xor
add
inc
or
adc
jge
dec
adc
push
dec
andnps
fs
inc
es
daa
ins
add
outs
sbb
es
add
push
inc
daa
outs
daa
jle
push
push
jle
lahf
rol
nop
inc
or
sub
ins
int3
pop
fdivr
jp
dec
pop
and
sbb
push
aam
xchg
push
sub
pop
pop
fbstp
mov
test
adc
jle
pop
sbb
jo
push
xor
adc
dec
cmp
jno
push
pop
jbe
jp
inc
adc
push
adc
inc
sbb
pop
add
inc
pop
pop
push
pusha
pop
xor
jl
jg
push
or
sbb
ficomp
push
hlt
jo
cmp
fs
push
shl
dec
shl
and
push
aam
aad
xchg
addr16
mov
cmps
call
sub
out
fimul
into
test
cwde
fild
fimul
xchg
mov
call
mov
cld
mov
into
mov
pop
lahf
mov
mov
sbb
jb
jb
push
or
xor
pop
fimul
mov
je
pop
and
push
push
in
(bad)
xchg
xchg
mov
pop
sub
adc
jno
xchg
mov
loop
cmp
xor
jns
popa
add
jo
push
adc
inc
add
imul
add
jo
push
sbb
bound
jb
jae
jb
push
and
cmp
jns
bound
jb
pop
aaa
js
cdq
cmc
fst
call
cmp
in
call
jmp
cmp
pop
jmp
mov
push
sbb
cmp
retw
mov
jl
dec
adc
retf
inc
cmp
jg
aaa
sahf
fdivr
cli
mov
xchg
out
xlat
(bad)
int3
sahf
fdivr
iret
lods
(bad)
mov
neg
lds
into
mov
neg
xchg
out
mov
mov
sti
mov
mov
fmul
loop
sar
sbb
dec
retf
stos
cmp
xor
jno
mov
inc
loop
and
push
cmp
loope
shl
jle
push
sbb
fwait
retf
sbb
xor
cmp
bound
dec
or
arpl
jae
pop
ss
pusha
add
jno
push
adc
inc
add
push
inc
add
jno
inc
cmp
inc
cmovbe
and
rol
adc
fstp
jp
jo
ins
and
sbb
inc
add
and
dec
int3
mov
push
fidiv
xor
or
sub
xor
sbb
ins
in
mov
nop
popf
test
or
fwait
retf
cmps
(bad)
xchg
enter
rcl
lds
loope
loopne
loope
(bad)
mov
test
jmp
jmp
inc
pop
sbb
inc
add
and
mov
pop
outs
and
sub
mov
inc
pop
sub
in
(bad)
cmps
adc
pop
jge
jb
inc
xor
add
xor
sbb
inc
or
sub
jbe
dec
retf
mov
jmp
mov
sahf
sar
fistp
mov
in
iret
mov
pushf
jmp
out
in
fnstenv
(bad)
jb
inc
mov
jae
test
mov
pop
jmp
in
movntq
ficom
pop
aaa
jnp
jge
jne
inc
xor
aas
inc
and
mov
jnp
inc
pop
add
sbb
fsubr
sbb
push
inc
das
pusha
and
dec
or
dec
or
pop
sbb
jae
pop
sbb
push
and
inc
pop
cmp
and
jne
fidivr
bound
fiadd
jp
mov
jmp
mov
cmps
jns
test
mov
test
xchg
push
stc
push
adc
cmp
dec
rcl
sub
je
and
sub
jp
cmps
sbb
jp
push
add
je
push
sbb
jbe
ja
jbe
push
and
dec
push
jge
data16
adc
xor
push
popf
mov
imul
push
adc
xchg
fcomp
sti
xor
xor
dec
cmp
dec
jne
xchg
aam
adc
popa
xor
sub
jnp
movs
mov
aam
push
add
cs
xlat
push
(bad)
mov
scas
mov
imul
add
or
addr16
addr16
push
adc
pop
cmp
cmp
jne
inc
outs
sub
js
je
dec
pop
pop
sub
jge
inc
and
retf
mov
movs
(bad)
mov
xchg
jmp
dec
pop
and
(bad)
mov
lds
fistp
ins
and
add
push
call
jbe
pop
xor
sbb
loope
ror
enter
xchg
hlt
cmps
in
in
in
ret
lods
fistp
xchg
mov
mov
mov
lahf
out
in
out
xchg
stos
pop
push
push
addr16
adc
push
pop
adc
add
jnp
dec
add
and
xchg
out
mov
xor
ins
pop
cmp
or
or
call
cmp
jg
and
adc
jns
stos
ret
xchg
dec
add
and
xor
jg
arpl
and
jo
jl
inc
pop
push
aaa
push
adc
add
outs
sub
pop
inc
add
or
outs
popa
rol
adc
rcr
xchg
ficomp
je
push
inc
(bad)
mov
or
jge
pushf
popf
test
cs
cmp
mov
xchg
xchg
mov
push
inc
cmp
adc
pop
xor
add
push
inc
add
jno
push
sbb
arpl
jae
jb
jae
push
and
js
arpl
jae
dec
pop
cmovg
cs
arpl
call
jg
inc
push
dec
pop
push
mov
into
pushf
leave
movs
lock
sub
or
outs
jmp
leave
push
xor
sub
je
jne
nop
scas
mov
ficomp
ins
cmp
and
dec
enter
sbb
jns
or
addr16
and
aas
ins
das
dec
add
data16
or
dec
add
sbb
jne
inc
sbb
bound
inc
xor
gs
sub
dec
cmp
push
adc
retf
mov
jmp
jmp
jecxz
xchg
shl
pop
and
scas
loopne
(bad)
mov
sub
jae
dec
sub
aad
int3
mov
or
adc
arpl
jns
inc
push
ins
cs
add
jp
pop
pop
inc
daa
je
push
ss
jge
popa
es
dec
cmp
daa
jne
push
sbb
jle
inc
cmovbe
je
xchg
cld
xchg
fsubr
retf
push
sub
sbb
imul
push
push
xor
inc
push
cmp
mov
mov
mov
mov
mov
sar
mov
cmp
dec
aas
dec
cmp
es
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
cmc
xchg
rcl
fisubr
push
push
std
mov
xchg
push
dec
cs
pop
cmp
sbb
pop
add
jae
push
sub
sti
mov
xor
imul
push
ds
imul
sbb
pop
push
push
jnp
dec
adc
in
into
int
fnsave
pop
sbb
gs
or
fs
push
or
jl
inc
mov
mov
and
(bad)
pushf
mov
fadd
inc
shr
push
(bad)
jl
dec
stos
jnp
inc
stos
(bad)
xlat
xchg
sahf
dec
fimul
add
shl
push
fsubr
(bad)
xor
push
movs
xchg
inc
xchg
pop
mov
mov
shr
out
pop
stos
xchg
jno
adc
cmp
pop
xchg
popa
mov
sub
cmp
sti
fwait
ja
jo
inc
mov
mov
out
scas
xchg
mov
pop
push
ins
xor
popa
add
shl
pop
xchg
nop
adc
enter
jnp
mov
imul
nop
dec
test
mov
fs
shl
std
sub
cmp
sub
pop
cmp
ds
sub
sub
retf
jnp
inc
mov
cmp
pop
sbb
and
icebp
das
sbb
xor
(bad)
daa
add
jnp
dec
sbb
push
retf
cmps
mov
cwde
push
push
push
sbb
mov
sahf
test
and
lods
into
and
ret
xor
stos
(bad)
mov
test
xor
inc
or
sub
dec
sbb
and
push
add
stc
pop
shr
xchg
inc
mov
cmp
dec
rcl
jl
(bad)
dec
cli
cwde
mov
inc
movs
sahf
dec
mov
in
push
fstp
ja
add
std
daa
adc
out
in
mov
xchg
je
nop
jo
push
repz
sbb
sahf
ins
sub
outs
and
pop
mov
jle
outs
xchg
inc
sbb
ficomp
stos
imul
sbb
sbb
pop
mov
mov
adc
aas
jmp
nop
shl
(bad)
movs
repz
mov
and
movs
data16
dec
fistp
add
dec
xchg
xchg
rol
sub
cmp
mov
(bad)
mov
out
mov
(bad)
mov
mov
fistp
mov
sbb
test
mov
lods
retf
loopne
(bad)
ja
inc
pop
cmp
or
and
movs
es
pop
inc
test
sub
push
and
cmp
sbb
push
adc
jnp
daa
inc
add
adc
jg
dec
pop
push
push
inc
daa
push
cli
mov
xor
bound
inc
cmp
push
ds
inc
and
push
or
mov
in
test
(bad)
cmp
xchg
jmp
sbb
pusha
cmp
xor
jb
addr16
inc
aaa
sub
pop
repnz
dec
jmp
xor
push
out
je
cmps
mov
bnd
add
sub
dec
into
movs
xchg
xchg
mov
jl
push
adc
or
js
jle
ins
cmp
push
fadd
in
cmps
mov
dec
adc
or
je
pop
fistp
pop
stc
jge
xor
pop
add
jae
lods
lea
inc
adc
xor
push
mov
jmp
dec
inc
lea
retf
inc
iret
push
xor
and
bound
push
ds
push
push
push
add
js
pop
cs
ror
sbb
inc
pop
and
adc
or
ja
jne
(bad)
xchg
out
mov
jle
dec
lea
lods
add
fldcw
popf
or
mov
rcr
daa
pusha
in
iret
mov
push
(bad)
push
add
and
add
imul
retf
loop
mov
arpl
arpl
xor
push
sbb
test
mov
aas
cmp
xor
jb
mov
je
outs
sub
add
jnp
pop
adc
cld
jge
scas
mov
jne
adc
cmp
xor
cs
pop
sahf
lock
(bad)
mov
mov
out
jp
bound
add
push
jge
dec
shl
daa
and
inc
test
out
xchg
mov
mov
lods
idiv
xor
cmp
outs
or
pop
sbb
dec
outs
pop
add
gs
popf
mov
es
and
fwait
loop
loope
lock
fdiv
rcl
(bad)
jmp
mov
mov
stos
rep
enter
and
cmp
push
in
mov
bnd
das
or
movs
icebp
(bad)
lds
int
std
mov
xchg
mov
in
in
push
dec
pop
das
int3
and
call
add
push
or
inc
out
(bad)
xchg
sahf
xchg
icebp
dec
(bad)
dec
xor
add
cmps
out
cmps
(bad)
mov
xchg
aad
in
mov
std
mov
stos
in
mov
test
scas
out
out
ret
cmps
push
rcl
movs
ret
lods
in
jb
dec
cmp
sub
inc
in
iret
or
ins
sub
push
dec
cmp
or
pop
inc
pop
sub
dec
adc
pop
push
outs
or
cmp
jnp
lods
push
jo
xchg
lock
(bad)
pop
movs
mul
aaa
popa
add
imul
out
mov
mov
mov
lock
aam
fnstenv
jmp
cli
mov
pop
lahf
outs
push
dec
outs
shl
lds
jns
adc
pop
or
sub
fdiv
popa
in
add
ja
inc
aaa
outs
sub
cmp
adc
jne
dec
push
pop
ds
or
call
mov
cmp
retf
fmul
out
xchg
push
pop
dec
dec
sub
dec
ds
add
inc
jmp
push
jle
inc
pop
fs
inc
pop
dec
and
dec
cmp
or
pop
inc
pop
sub
jle
aas
rcr
adc
push
xchg
xchg
(bad)
mov
add
xor
push
inc
test
sbb
jle
outs
or
jge
dec
(bad)
push
dec
cmovne
pop
push
jno
imul
xchg
ret
fisttp
lods
adc
jnp
pop
sbb
fsubr
lock
lock
clc
popf
fistp
cmps
in
iret
mov
pushf
push
in
mov
std
mov
stos
in
mov
test
scas
in
mov
div
loope
loopne
mov
mov
(bad)
fisttp
aam
fdivr
js
les
cs
xchg
fidiv
cmc
mov
mov
xchg
mov
dec
in
ret
mov
xchg
loope
sbb
jns
add
jl
je
push
push
cmp
(bad)
lock
outs
and
pushf
leave
lea
dec
cmp
pop
or
stos
rol
pop
or
jae
adc
inc
cmp
inc
ds
in
fnstsw
cmp
ja
js
nop
repnz
mov
sbb
and
je
inc
pop
cwde
rol
xchg
iret
mov
sub
mov
mov
std
mov
mov
xchg
retf
mov
enter
movs
out
sar
addr16
push
xor
push
dec
cmp
add
popf
sbb
fs
sub
arpl
bound
push
cmovb
xchg
sbb
ja
push
push
inc
cmova
bound
ja
dec
es
hlt
mov
out
jmp
repnz
jmp
ror
jmp
rcl
push
cmc
js
sbb
mov
sub
sbb
jae
dec
rcl
inc
int3
dec
push
xor
sub
ins
jmp
in
aad
aas
cmp
xor
jb
mov
add
mov
push
ins
bnd
test
test
xor
adc
imul
ret
jle
or
jbe
mov
mov
sbb
dec
pop
pop
sahf
lock
push
std
push
(bad)
jg
push
shl
mov
pop
add
sbb
xchg
ror
sub
push
pop
sar
mov
ficom
xor
adc
dec
jmp
xchg
ja
unpcklps
call
and
cmp
dec
in
add
pop
add
xchg
repz
ds
or
call
sbb
push
retf
sub
mov
ja
push
pop
sbb
in
sahf
test
push
adc
or
jp
(bad)
into
mov
leave
js
pop
or
std
xchg
data16
and
xor
jbe
inc
retf
cmps
xchg
xchg
xchg
in
aam
or
sbb
imul
stos
mov
jae
jb
adc
push
out
mov
scas
stos
retf
inc
jmp
jae
fiadd
into
mov
mov
mov
cmp
mov
dec
pop
adc
fnstcw
pop
or
mov
push
(bad)
jle
out
(bad)
cmps
mov
call
and
dec
int3
jge
mov
femms
or
popa
loopne
scas
mov
hlt
es
dec
mov
pop
enter
or
xchg
mov
std
dec
unpcklps
fstp
dec
shl
das
or
jae
cmp
retf
mov
xchg
(bad)
mov
fmul
mov
js
jns
pushf
stos
stos
mov
dec
cli
pusha
and
cmp
stos
or
and
sub
sub
xchg
xlat
ficomp
xchg
cmc
mov
int3
idiv
cdq
cdq
ds
neg
dec
and
pusha
dec
sub
(bad)
adc
push
addr16
sbb
sub
scas
imul
shl
outs
test
ins
sbb
cld
mov
in
out
mov
aam
dec
aas
jl
push
imul
call
jno
pop
sub
shr
repz
push
aas
(bad)
out
repz
into
scas
ret
mov
push
xchg
enter
push
sbb
fist
mov
push
add
(bad)
mov
or
sbb
ss
lock
mov
cld
test
cmps
fs
and
scas
sbb
and
push
push
mov
jge
int
mov
pop
inc
push
push
cmp
jns
jmp
xchg
hlt
jne
cmp
jnp
sbb
cdq
ss
leave
adc
push
ins
dec
or
nop
jmp
into
pop
jnp
jnp
and
std
repnz
push
jne
cmp
dec
(bad)
iret
into
mov
xor
pop
inc
add
imul
xlat
popa
fmul
jle
xor
mov
lods
cmp
sub
loopne
ret
cmp
add
call
jg
pop
(bad)
sbb
imul
add
rcl
icebp
sub
and
stc
lods
loope
xchg
aam
jnp
inc
cmp
mov
addr16
or
lods
rcl
les
mov
aad
movs
int3
xor
enter
adc
jno
mov
scas
in
sbb
push
dec
add
es
icebp
into
mov
jae
loopne
xchg
mov
leave
or
in
retf
pop
dec
xor
jecxz
xlat
cmp
nop
fidivr
out
hlt
daa
(bad)
mov
lods
push
call
xchg
enter
add
pop
jno
fadd
addr16
icebp
into
xchg
add
loopne
jae
add
lods
or
jnp
sar
mov
dec
xchg
sbb
cli
mov
mov
and
les
dec
or
pop
mov
add
fnstsw
cmp
sti
fistp
in
icebp
stos
call
mov
test
lahf
pop
imul
adc
arpl
jne
mov
dec
sub
ins
inc
xor
hlt
daa
ret
pop
pop
adc
fdiv
xchg
sahf
sub
sar
mov
movs
jno
fs
test
cmps
cdq
add
pop
mov
dec
or
fidivr
cld
jg
jle
and
enter
ds
std
mov
sub
ins
dec
adc
mov
movs
add
xor
sbb
cmp
(bad)
cmps
jmp
arpl
js
out
scas
int3
sub
clc
mov
jne
ins
gs
ss
mov
mov
jns
push
mov
dec
or
fcom
sahf
cs
cmp
cmp
xchg
sbb
sub
mov
add
div
mov
das
jmp
das
fmul
sub
ret
mov
dec
add
std
xor
xor
imul
movs
or
sbb
pop
pop
mul
mov
xchg
mov
ret
adc
jmp
cdq
and
out
test
pop
jns
dec
mov
xchg
cmp
cmp
mov
fdiv
or
push
out
pop
pusha
es
dec
movq
mov
cld
cmps
push
ss
adc
loop
mov
scas
cli
xor
(bad)
fisttp
std
cmp
jp
pop
adc
adc
nop
mov
mov
push
jge
xlat
mov
mov
cmp
imul
loopne
jo
jne
push
xchg
aaa
inc
leave
loop
mov
adc
cld
ror
xor
scas
idiv
nop
in
imul
mov
mov
ins
pusha
jl
pop
fistp
push
in
and
lea
mov
adc
cmp
fnstcw
mov
imul
add
in
inc
xor
aam
sar
repnz
out
cli
or
mov
jp
and
cmp
sbb
xor
jge
cmp
out
clc
mov
xlat
sbb
fldenv
or
shl
mov
cmp
mov
jle
popa
xchg
cdq
rep
stos
pop
cmp
dec
jp
aas
sbb
es
repz
fidivr
ss
test
cwde
shr
and
sbb
lahf
int3
js
loopne
mov
popa
out
out
mov
inc
add
mul
push
mov
test
add
adc
hlt
in
test
pop
dec
xor
repnz
jnp
and
clc
movs
retf
aaa
mov
pop
sbb
mov
pop
fadd
ror
mov
repnz
cmc
loope
out
mov
dec
add
cs
mov
push
or
mov
mov
xor
lods
or
shl
cmp
cmp
cs
loop
(bad)
fimul
ss
adc
jmp
inc
jne
xor
in
test
pop
sub
jmp
or
jbe
xor
iret
daa
aad
xchg
dec
pop
sbb
fstp
test
jg
dec
jb
addr16
rcr
imul
jb
sub
int3
(bad)
lahf
call
mov
push
adc
sub
clc
adc
pop
jp
dec
add
test
cmps
sub
dec
xchg
stc
mov
out
mov
mov
jge
sub
aaa
jae
fldcw
dec
ins
sub
ret
xchg
sbb
pop
pop
mov
cli
adc
out
push
retf
mov
loope
cmc
pop
js
imul
or
adc
leave
sti
fbstp
stos
rep
loope
mov
adc
sbb
imul
push
or
out
ret
call
jmp
push
and
mov
xchg
not
cmp
sub
fisubr
push
sub
jecxz
mov
es
push
cmp
shr
stc
push
stos
enter
push
xchg
ret
adc
jmp
push
jp
imul
fwait
aaa
mov
jno
cmp
jb
jmp
repnz
lods
and
cmp
jnp
and
out
lods
mov
cmps
div
loope
mov
daa
mov
dec
mov
inc
pop
fs
pusha
add
cmp
xor
lock
lods
addr16
mov
dec
or
jmp
sbb
retf
fsub
mov
fld
mov
inc
pop
clc
shr
xor
mov
pop
(bad)
cwde
inc
inc
push
pop
xchg
test
xor
test
push
inc
sub
add
xchg
shr
lds
lods
loop
mov
add
shr
ins
ret
fcom
leave
mov
shl
mov
div
sub
icebp
test
out
ins
jbe
pop
mov
mov
push
sbb
rol
add
adc
push
jb
dec
mov
mov
mov
dec
ror
dec
cmps
cdq
push
sbb
pop
sahf
mov
test
lahf
inc
sub
stos
retf
adc
jp
(bad)
fistp
shr
mov
dec
jo
jbe
(bad)
clc
stos
xchg
sub
add
mov
add
sbb
je
call
ror
test
cmp
ficomp
dec
jb
sub
in
mov
int
dec
dec
cmp
out
mov
test
xchg
shl
pushf
jmp
xchg
pop
jle
push
lods
(bad)
mov
mov
fs
mov
std
int3
and
xchg
ins
fdiv
call
retf
mov
mov
jne
test
mov
cmp
and
mov
push
popa
jp
push
test
mov
dec
jge
push
add
idiv
xor
repz
adc
mov
mov
or
fwait
clc
xchg
dec
mov
outs
mov
sbb
ficomp
cmp
test
xchg
repz
mov
and
jnp
push
or
cli
in
mov
ds
push
push
int3
inc
mov
in
loop
scas
in
mov
fwait
in
(bad)
cmp
sbb
sbb
(bad)
fadd
dec
add
call
cmp
sbb
icebp
cmc
test
stos
or
int3
test
fwait
pop
or
add
fld
cmp
or
ret
movs
sbb
hlt
cld
mov
jecxz
xlat
xchg
mov
ss
call
mov
jae
(bad)
add
in
xchg
ror
jge
cdq
mov
mov
jo
sti
cld
xchg
mov
mov
add
sub
sub
push
or
push
or
add
ret
mov
xchg
ficomp
stc
mov
es
adc
xor
adc
pop
nop
jmp
fcomp
cmp
retf
enter
cmps
sahf
pop
add
mov
lods
loope
(bad)
sbb
out
ficomp
xchg
leave
xchg
inc
xor
add
clc
mov
mov
sub
sbb
ds
addr16
ret
push
inc
mov
(bad)
repnz
jmp
stc
lods
push
pop
xor
mov
sub
lds
inc
inc
xor
jp
ins
cwde
into
xchg
shr
dec
xor
movs
icebp
loopne
mov
data16
push
adc
movs
cmp
loope
ror
jno
dec
mov
fcomp
xchg
add
div
retf
mov
movs
inc
xor
adc
movs
cmp
jecxz
inc
shl
in
lahf
fild
retf
fs
cs
push
sub
sti
mov
mov
cwde
jmp
xchg
fsub
test
ins
push
add
sbb
add
push
jl
push
jmp
fistp
mov
ficomp
and
push
dec
pop
xor
(bad)
lods
(bad)
mov
cs
xor
mov
jl
stos
adc
sbb
mov
test
xchg
fdivr
adc
add
mov
or
pushf
(bad)
and
or
out
mov
fwait
push
and
adc
rol
pop
fs
or
jl
pop
xor
jge
arpl
pop
adc
(bad)
scas
stos
sub
fs
mov
stos
inc
sub
xlat
mov
pop
adc
mov
dec
call
test
push
fs
cmp
pop
and
push
mov
pop
pop
mov
xchg
shr
mov
or
sbb
leave
stos
(bad)
mov
dec
sub
xor
adc
stos
sbb
(bad)
les
stos
jp
aaa
push
mov
bound
add
retf
imul
and
pop
pop
pop
pop
addr16
cmp
std
mov
xchg
jl
push
or
test
pop
pop
test
pop
pop
pop
retf
rcl
je
outs
sbb
and
dec
add
and
add
inc
add
cli
shl
ss
dec
sub
push
push
mov
(bad)
out
xor
push
es
xchg
out
xchg
(bad)
lock
pop
retf
sbb
sbb
push
mov
jle
or
test
mov
in
mov
test
jno
sbb
pop
pop
iret
shl
jns
push
fs
and
fwait
enter
add
jl
sub
mov
mov
sub
bound
push
cdq
in
movs
jns
sub
es
push
or
adc
loopne
mov
inc
stos
dec
add
cmp
out
ret
mov
sbb
ins
and
and
dec
test
outs
loopne
movs
aam
bound
push
mov
iret
test
pop
xor
enter
mov
lea
jp
push
mov
inc
adc
retf
add
sub
int3
sub
pop
cmp
icebp
mov
sbb
jno
pop
test
fistp
mov
nop
add
outs
popf
loopne
icebp
(bad)
jg
xor
leave
pop
pop
xchg
xor
test
mov
push
pop
pop
jno
out
mov
add
(bad)
retf
out
or
pop
and
xor
mov
jae
fbstp
ins
pop
icebp
jmp
ror
mov
mov
stos
retf
test
mov
mov
out
jmp
pop
call
mov
inc
test
xor
xchg
sbb
push
pop
shufps
fisttp
popa
cmp
push
push
xor
jmp
xor
sahf
push
inc
into
sbb
add
loope
mov
test
mov
bound
inc
rcl
mov
xchg
mov
fidiv
xchg
pop
das
pop
xchg
pop
sbb
movs
add
sub
fistp
repz
mov
add
xor
sti
movs
iret
xor
or
xlat
stos
enter
(bad)
sbb
pusha
mov
sahf
cld
mov
push
xor
xor
test
sbb
sub
cdq
fistp
into
scas
(bad)
mov
call
xchg
aam
test
xor
sbb
nop
jno
cmp
mov
and
dec
ss
add
xlat
mov
adc
das
xchg
jmp
std
push
lahf
bnd
adc
in
lock
cmc
(bad)
cwde
rcl
jmp
xchg
cmp
pop
sbb
call
pop
sbb
and
sub
cdq
push
push
add
iret
mov
xchg
stos
inc
push
sub
rol
ror
mov
mov
movs
jp
push
cmp
sub
cdq
shl
bswap
les
sbb
inc
adc
push
push
push
push
je
inc
sbb
push
add
popa
or
push
xor
fidivr
jmp
loop
test
sub
ins
add
add
out
mov
push
(bad)
sahf
iret
xor
dec
and
fstp
inc
das
adc
rcl
aas
frstor
fnsave
addr16
add
push
cmp
and
sbb
aam
jecxz
jg
ins
fucom
int
nop
adc
jmp
bound
arpl
call
test
popa
es
or
movs
cmovp
cmp
cli
fstcw
fadd
cmc
mov
xchg
fist
fdivr
stos
cmc
mov
retf
fidiv
xchg
cs
stos
fld
retf
sar
mov
jmp
pushf
cwde
sbb
in
fild
enter
stos
js
sbb
imul
dec
xor
jle
or
fwait
lds
dec
into
hlt
not
fisubr
sub
push
fcmovb
mov
sbb
push
sub
adc
cmps
mov
int3
mov
dec
jle
sub
pop
xor
jne
push
xor
js
fwait
ror
fmul
mov
mov
mov
jmp
retf
mov
movs
out
iret
adc
jmp
dec
ja
cmp
std
adc
ds
push
mov
dec
xor
movs
xlat
or
or
repz
aaa
and
arpl
(bad)
out
(bad)
push
dec
or
mov
pop
add
ins
jbe
xor
pop
sub
nop
jp
push
xor
scas
sbb
push
dec
maskmovq
div
jg
adc
cmp
xchg
dec
dec
xlat
adc
push
pop
movs
push
adc
js
pop
pop
dec
push
ja
addr16
and
inc
aaa
jb
push
adc
ret
adc
repnz
in
in
mov
stos
out
movs
retf
cmps
retf
mov
stos
jmp
std
xchg
cmp
add
ret
div
(bad)
jno
or
stos
jge
and
sbb
clc
lahf
fcom
jnp
js
add
lock
adc
mov
xchg
js
push
outs
enter
mov
mov
and
bound
loop
data16
in
xlat
mov
inc
xor
or
sbb
cld
sbb
pushf
shl
xor
push
loop
mov
push
pop
in
fadd
inc
and
hlt
mov
(bad)
(bad)
iret
mov
xchg
popf
ror
add
out
xchg
mov
mov
mov
sbb
bound
push
or
push
pop
aas
jae
push
or
jl
push
sub
adc
push
adc
mov
xchg
jmp
ja
cmp
and
push
clc
mov
cmp
pop
cmp
fld
(bad)
movs
retf
dec
cmp
xchg
mov
push
dec
add
movs
lock
outs
jl
je
mov
and
sbb
idiv
lods
add
loopne
fst
and
sbb
sbb
cmp
into
inc
mov
jl
sub
xchg
lock
mov
jecxz
repnz
repz
mov
scas
jmp
stc
mov
int3
mov
sbb
cmp
pop
or
inc
sbb
pop
add
dec
and
pop
inc
pop
cmp
jg
gs
dec
(bad)
adc
jg
jmp
aaa
popa
or
stos
cdq
mul
xchg
inc
aaa
dec
sbb
pop
sub
ret
test
adc
loopne
iret
sub
shl
adc
xor
pop
sbb
(bad)
rcr
xchg
pop
push
xor
dec
jb
add
cld
rcr
sub
lods
je
push
dec
and
retf
xchg
out
aam
iret
lahf
fdiv
into
scas
cld
mov
test
fcom
movs
leave
xchg
rol
call
call
fistp
out
scas
(bad)
mov
hlt
mov
iret
mov
xchg
nop
enter
dec
pop
cmp
call
div
das
mov
cmps
cdq
cmp
push
ret
lds
pop
adc
scas
iret
lahf
push
dec
and
mov
nop
rcr
adc
lods
pop
push
xor
repnz
int3
push
fwait
(bad)
lahf
dec
pop
pop
jp
or
sbb
enter
in
scas
ins
test
js
loope
xchg
int3
(bad)
mov
xchg
shl
aam
std
mov
test
cmps
out
test
mov
xchg
aam
icebp
mov
cmps
(bad)
mov
stos
call
pushf
lock
cmc
scas
fist
out
pop
lods
in
test
dec
or
dec
or
push
cwde
ror
enter
dec
sbb
push
pop
push
sbb
in
mov
mov
xchg
jb
sub
enter
xchg
inc
cmp
shr
mov
hlt
shl
and
ins
push
sbb
mov
test
sbb
fimul
pop
aad
fmul
mov
sahf
fcom
enter
loopne
call
movs
(bad)
lahf
iret
and
mov
mov
fisubr
rcl
les
les
loop
aad
into
lahf
fdivr
shl
mov
loopne
shl
iret
and
loop
fimul
int3
mov
mov
dec
scas
pop
push
ss
jmp
mov
xor
or
jecxz
mov
xchg
shl
add
ss
test
jp
aam
xchg
scas
popa
je
push
mov
jge
push
fsub
adc
xor
(bad)
mov
mov
sahf
(bad)
mov
xchg
leave
xchg
repnz
in
les
sbb
push
adc
pop
pop
push
movq
jl
jne
jne
pop
and
ficomp
iret
fstp
shr
sbb
outs
push
or
sub
cmp
mov
scas
jmp
sbb
mov
retf
stos
cli
mov
neg
push
pop
pop
inc
add
xchg
push
add
inc
or
mov
je
push
push
jno
lds
cs
xor
add
dec
lock
fs
xchg
ror
cmp
jns
dec
loope
retf
sahf
pushf
cmps
in
sti
or
fs
jge
xor
adc
scas
sti
mov
mov
gs
push
sub
sbb
push
dec
and
mov
mov
retf
cwde
sar
inc
(bad)
inc
cs
sub
xchg
aad
ficomp
mov
leave
mov
mov
mov
jno
pop
push
dec
fstp
mov
xchg
mov
dec
sub
pop
adc
jno
ss
aaa
inc
push
sti
popf
in
stos
(bad)
aas
pop
sub
push
les
mov
pop
mov
jge
dec
adc
push
push
jne
ja
cmp
jl
adc
and
jl
push
call
pop
sbb
das
jl
fs
mov
add
scas
fistp
fnstcw
xor
xchg
ror
xor
jnp
push
push
inc
cmp
cmp
pop
icebp
nop
jb
inc
or
retf
xchg
rol
aaa
pop
adc
mov
sahf
mov
xchg
clc
mov
stos
stc
stos
test
mov
mov
sti
fnstenv
lock
xor
das
or
jle
mov
mov
sbb
mov
and
xor
push
adc
xor
push
js
pop
pop
sbb
cdq
test
mov
cmps
add
fidivr
movs
stos
and
ror
mov
ja
inc
pop
dec
aaa
das
ds
mov
retf
imul
(bad)
and
jmp
cld
scas
in
mov
in
scas
cli
sbb
arpl
outs
adc
pushf
lds
test
mov
cmp
cmp
push
(bad)
fs
sub
dec
rcl
push
ins
xor
cli
mov
jbe
fsubr
and
inc
add
shl
mov
lods
xor
lds
scas
ret
inc
cld
scas
in
xchg
sti
cmps
in
cmp
mov
ins
ds
mov
pop
sub
gs
push
out
scas
shr
or
mov
subps
cmp
jne
inc
ss
or
pop
xchg
rcl
call
sar
inc
and
popf
jo
push
sub
jno
inc
cmp
jne
dec
(bad)
adc
cs
add
jne
pop
mov
(bad)
cld
stos
or
mov
mov
xchg
not
adc
add
rol
in
adc
sbb
pop
lds
std
div
mov
xor
pusha
cwde
cli
mov
outs
aaa
inc
or
inc
mov
xor
mov
fcomp
scas
sar
pop
push
movaps
push
xor
aad
repz
mov
adc
cmps
xchg
std
mov
je
mov
add
es
aad
push
and
inc
mov
iret
lods
jmp
adc
scas
int
into
lahf
mov
add
arpl
jb
xchg
adc
sbb
push
xor
daa
or
push
xor
repz
arpl
jle
into
dec
push
pop
add
loopne
add
out
xchg
cmps
rcl
sub
push
mov
dec
loop
test
popf
ficom
and
xchg
rol
ss
out
test
xor
push
cmp
inc
add
or
mov
test
data16
cmp
inc
loope
mov
or
hlt
mov
lahf
test
popf
(bad)
fs
popa
das
xor
pop
sbb
xor
inc
add
push
out
mov
pusha
sbb
movs
(bad)
mov
ss
mov
stc
or
push
and
cmp
stos
loopne
icebp
mov
adc
ja
jno
jge
popa
sbb
pop
loope
mov
mov
bound
pop
pop
int3
inc
or
out
and
xchg
mov
mov
sub
mov
mov
cdq
(bad)
jp
dec
xor
pushw
and
sub
cwde
shl
dec
cs
push
cmp
lods
iret
bound
lea
push
sbb
push
or
xchg
mov
test
popa
or
cmp
cmp
jecxz
(bad)
dec
adc
(bad)
mov
hlt
xor
cmp
push
or
push
push
add
ins
aaa
pop
mov
es
cwde
call
test
adc
pop
mov
push
pop
add
pop
pop
adc
arpl
pop
shl
mov
imul
mov
xor
dec
mov
jbe
push
fnstcw
mov
xchg
aam
mov
arpl
repnz
sub
mov
mov
popf
fisubr
adc
sub
mov
cmps
ret
mov
int
shl
xchg
ror
push
add
pop
ss
push
push
and
clc
mov
scas
(bad)
or
outs
cmovl
dec
or
sbb
jne
xchg
retf
mov
arpl
das
jl
pop
ds
jne
xchg
ror
imul
xor
pop
or
dec
add
sbb
pop
pop
das
jge
ins
cs
cmp
or
xor
adc
push
jge
pop
add
dec
and
dec
sub
popa
add
bound
inc
and
scas
div
scas
loope
clc
call
shl
dec
add
push
mov
lods
out
fwait
stc
stos
not
push
daa
pusha
mov
loop
repnz
pop
push
test
scas
call
imul
xor
jge
out
jmp
jo
jmp
ins
xor
rcl
jo
pop
sti
and
push
sti
gs
pop
sbb
inc
out
aaa
inc
pop
jp
sub
and
outs
mov
dec
out
sar
jne
push
dec
neg
adc
pop
idiv
into
ss
sub
imul
fdivr
xlat
movs
loop
fsubp
xchg
int
lods
out
(bad)
ret
lods
cmc
xchg
into
mov
ret
xchg
mov
bound
hlt
mov
ins
pop
imul
sbb
sub
adc
or
cwde
mov
pop
cmp
jge
pop
mov
add
icebp
mov
(bad)
mov
cmps
retf
mov
sbb
inc
sbb
(bad)
frstor
(bad)
jbe
inc
sbb
test
movs
ret
cmp
or
outs
and
je
stos
in
enter
adc
aad
das
gs
push
push
retf
mov
bound
repz
neg
inc
sbb
fisttp
loop
pusha
xchg
lds
mov
xchg
fdiv
(bad)
into
fs
ja
jbe
push
repnz
ja
jge
fidivr
pop
xor
jp
push
and
pop
stc
call
mov
(bad)
fsubr
ret
inc
add
loopne
repnz
sub
and
jae
jle
cmp
xchg
in
adc
sbb
mov
push
ds
hlt
jl
dec
push
imul
sbb
fnstenv
xchg
(bad)
mov
adc
add
pop
in
mov
adc
jg
sub
cwde
fist
stos
imul
mov
test
out
xchg
loop
les
jmp
mov
add
xchg
mov
les
cmp
mov
test
out
popf
rcr
sub
out
ret
mov
mov
in
mov
cmps
retf
div
fs
ror
push
daa
jg
into
adc
sbb
icebp
xor
jmp
adc
lods
hlt
mov
or
push
add
sub
dec
adc
push
push
adc
or
sub
lahf
(bad)
(bad)
repnz
mov
xchg
lds
fwait
mov
test
mov
in
movs
std
mov
mov
cmps
jmp
scas
retf
push
dec
or
in
popf
fimul
call
les
add
jns
push
outs
and
test
mov
(bad)
fcmovnb
xchg
sar
add
jae
push
sub
cs
mov
data16
(bad)
stos
mov
inc
in
ret
mov
out
mov
mov
jae
dec
sub
test
pusha
or
xchg
loope
fadd
sub
adc
add
xlat
mov
pushf
adc
inc
xor
adc
mov
jle
aaa
jo
dec
mov
mov
pop
or
adc
into
loopne
stc
popa
cmp
lods
mov
push
pop
jmp
push
imul
push
adc
mov
xlat
fstp
pop
add
addr16
xchg
(bad)
mov
dec
aaa
push
movs
jecxz
lds
push
daa
fs
mov
test
lods
iret
lods
into
jno
imul
enter
mov
mov
mov
scas
in
xchg
shl
aad
test
mov
sub
lods
call
stos
cli
mov
mov
sub
aaa
and
stos
fld
les
rol
sub
fstp
arpl
js
fidiv
sbb
sahf
cld
mov
mov
lods
in
adc
pusha
xor
in
mov
aas
pop
lods
push
adc
xor
lods
fisub
push
adc
sbb
lods
jecxz
repz
ret
inc
mov
addr16
minps
inc
adc
add
and
add
call
xor
ja
int3
ja
mov
sbb
call
push
scas
stos
repz
test
test
call
pushf
mov
fmul
mov
into
jne
jmp
rol
int
cmp
shl
push
inc
daa
imul
inc
add
push
adc
inc
sbb
sbb
or
dec
jmp
aas
inc
repnz
out
mov
fistp
jle
ins
aas
and
les
loop
xchg
mov
arpl
js
xchg
sbb
xchg
movs
mov
shl
mov
pop
push
les
pop
lahf
mov
test
sub
jo
daa
adc
push
sti
xchg
aad
jmp
fistp
(bad)
mov
sbb
pop
sbb
popf
hlt
mov
sbb
sub
push
sbb
jbe
inc
in
fcomp
pop
adc
jl
lahf
int3
(bad)
repnz
push
int3
cwde
hlt
test
cmp
outs
sub
retf
mov
add
clc
clc
mov
pushf
in
xchg
push
push
dec
in
scas
push
cmp
dec
ins
cmp
xor
inc
cmp
pop
sub
xchg
int3
(bad)
mov
xchg
cdq
push
pop
cmp
push
sbb
add
jne
push
sbb
or
push
sbb
inc
push
pop
cmp
push
adc
push
outs
sub
cmp
loop
repnz
inc
std
mov
pop
push
das
pop
dec
cmp
outs
movs
div
push
pop
and
js
and
and
jle
jl
jle
pop
add
cs
icebp
test
enter
lods
(bad)
out
mov
into
cwde
fldcw
mov
push
or
mov
ret
mov
ret
dec
sub
fs
sar
xchg
jmp
push
push
inc
and
mov
scas
leave
or
fcom
mov
add
xchg
ficomp
xchg
repz
pop
inc
xor
or
imul
mov
mov
ds
js
aam
iret
arpl
outs
xor
idiv
pop
aas
pop
(bad)
shl
add
push
out
push
je
push
pop
pop
sbb
add
stc
mov
and
cdq
mov
xchg
icebp
daa
inc
and
inc
lock
gs
or
and
in
jmp
add
imul
xchg
adc
pop
clc
mov
dec
sub
mov
cli
mov
sahf
jg
mov
aad
into
shl
xor
and
ficomp
imul
fild
mov
push
popa
cmp
hlt
fnsave
pop
dec
cmp
mov
dec
out
std
stos
cwde
add
dec
cdq
retf
inc
sbb
mov
aam
imul
pop
adc
add
jns
add
loop
aad
(bad)
fild
repnz
aad
int3
adc
mov
mov
xchg
rcl
sbb
pop
mov
xchg
aas
ins
das
push
notrack
and
inc
add
inc
stc
xchg
mul
mov
cs
(bad)
cmp
call
loopne
and
daa
out
cmp
loop
ins
add
pop
lods
out
pushf
retf
inc
and
or
push
mov
shl
mov
daa
adc
arpl
into
stos
in
or
popa
fmul
dec
out
int3
cmp
push
rcr
stos
xacquire
scas
ja
or
cmp
sahf
aam
fsub
cmps
in
aad
mov
cwde
test
xchg
ficomp
das
xor
push
pop
cmp
das
jne
gs
(bad)
cli
retf
xchg
(bad)
cwde
fnstsw
push
adc
adc
es
xchg
mov
in
dec
cs
push
rcl
ja
dec
dec
or
sub
scas
les
push
pop
and
inc
push
dec
or
gs
or
lods
jg
and
dec
or
jne
fimul
sub
jl
push
adc
add
pop
lock
dec
out
and
inc
add
xor
xchg
(bad)
dec
or
retf
scas
in
mov
fiadd
inc
add
dec
and
xor
push
dec
lock
mov
xchg
or
icebp
les
outs
or
stos
cld
ds
mov
dec
ss
or
cmp
daa
push
xchg
jb
dec
clc
xchg
lds
lahf
retf
xchg
test
cmps
lds
scas
(bad)
mov
test
imul
add
cmp
inc
cs
sbb
popf
fistp
mov
xlat
xchg
not
xchg
jnp
inc
push
push
sbb
and
push
xor
retf
pusha
and
data16
sub
mov
mov
lods
mov
call
dec
pop
sbb
neg
push
stos
pushf
in
xor
inc
xor
imul
dec
fstp
mov
mov
outs
xor
into
test
clc
dec
out
jno
pop
push
pop
dec
add
cli
cdq
fisubr
ds
clc
mov
lods
jl
js
jmp
push
xor
jbe
daa
dec
cli
xchg
mov
cmp
loopne
les
add
or
cmp
lds
mov
mov
enter
xor
fcom
mov
mov
jge
xor
ins
cmps
arpl
push
ss
jecxz
and
int3
mov
pop
jecxz
adc
xor
and
cmp
dec
or
pop
aas
jns
jbe
fisub
scas
lock
retf
bound
pop
out
mov
mov
scas
int3
mov
in
mov
movs
fiadd
imul
sbb
clc
mov
inc
or
or
fwait
cmps
inc
inc
add
call
cld
mov
cmps
retf
inc
or
xor
or
jecxz
pop
adc
cmp
sahf
test
cwde
cli
mov
pop
or
jb
jae
jbe
pop
cmp
ret
mov
(bad)
bound
loope
cmovs
xchg
lds
pop
and
std
dec
in
mov
or
ja
cmps
in
mov
mov
scas
shl
jae
repz
cwde
aad
jae
inc
push
shr
fs
adc
in
retf
outs
or
imul
mov
pop
and
rcl
jge
movs
mov
enter
enter
jo
push
mov
adc
mov
mov
sahf
(bad)
cwde
movs
aam
imul
push
and
or
daa
pop
div
cs
hlt
fwait
movs
xlat
dec
push
pop
push
les
clc
sahf
in
xchg
std
mov
test
rcr
rcl
and
sbb
dec
cmp
jo
inc
dec
push
aaa
(bad)
or
jle
pushf
mov
ret
sbb
aaa
inc
fadd
sbb
mov
rol
jns
popa
push
int3
out
mov
lods
xlat
or
repz
dec
sub
jg
push
outs
sub
mov
repnz
popf
hlt
arpl
xchg
repz
bound
dec
mov
lods
xchg
aad
les
sbb
sub
pop
cmp
dec
pop
sbb
add
cmps
ret
je
inc
add
dec
xor
daa
dec
cmp
enter
adc
(bad)
stos
int3
imul
adc
sbb
sbb
fs
inc
add
sbb
pop
adc
sahf
mov
or
rcl
inc
adc
jge
pop
pop
add
inc
sub
dec
add
enter
imul
inc
fisub
in
inc
and
pop
jp
push
sbb
xchg
ret
adc
je
dec
pop
pop
loope
mov
cwde
movs
mov
sub
test
aam
xor
aaa
dec
or
(bad)
into
mov
fcom
sub
stos
in
push
xor
and
jl
push
adc
or
cmc
mov
mov
xor
ins
fnstsw
stos
stos
repnz
retf
ins
push
ins
xor
(bad)
jecxz
rcl
lock
dec
sub
push
cmovp
inc
cmc
ss
aaa
jno
xchg
stc
mov
jg
movs
xlat
xchg
dec
ret
test
push
mov
mov
mov
stos
fsub
test
mov
(bad)
mov
sbb
mov
xchg
enter
ret
push
adc
retf
gs
mov
out
test
int3
mov
pop
push
pop
or
ins
add
mov
mov
push
and
sbb
push
out
inc
sub
inc
das
out
lods
iret
lods
icebp
mov
xchg
rcl
ss
sbb
xor
pop
scas
cli
xchg
(bad)
leave
add
push
and
pushf
fsubr
je
pop
stc
test
mov
imul
xor
or
aam
repnz
xchg
xor
daa
push
imul
mov
xchg
lds
lods
fcomp
js
gs
(bad)
mov
push
sbb
rcr
ds
inc
add
ficomp
xor
jnp
mov
cmp
pop
out
test
aaa
pop
sub
dec
or
xchg
nop
fsubr
jbe
push
out
adc
push
daa
jle
and
shl
adc
lahf
inc
sub
popa
push
inc
add
mov
sahf
mov
inc
sbb
sub
inc
or
out
adc
inc
and
xor
pop
cmp
push
adc
sub
inc
add
sub
stos
not
xchg
clc
test
sahf
cli
xor
js
and
das
pop
add
xchg
mov
cmp
sbb
mov
mov
retf
dec
push
dec
add
or
out
shl
mov
stos
test
push
jo
push
loopne
lods
int3
lahf
mov
repz
aam
hlt
popa
movs
mov
fcomp
add
adc
(bad)
mov
mov
adc
push
cli
sub
ja
ds
pop
(bad)
jbe
ja
jl
out
rcl
scas
cmps
idiv
retf
jmp
test
xchg
mov
or
xchg
inc
or
jmp
aaa
pop
sub
js
dec
(bad)
mov
js
arpl
xor
sbb
adc
inc
mov
add
xchg
ds
inc
pop
push
sbb
xor
adc
loop
movs
retf
cdq
fild
xlat
xor
dec
adc
sti
inc
xor
or
xchg
mov
add
dec
cmp
dec
(bad)
call
add
push
ja
pop
or
pop
push
ins
sub
mov
nop
shl
imul
rcl
pop
in
rol
fucom
pop
xlat
cmc
mov
xchg
popf
cmps
fistp
ficomp
and
sub
and
push
jae
jnp
dec
aam
out
mov
ret
cmc
mov
xchg
in
mov
in
sbb
or
adc
data16
inc
xor
pop
pop
ins
xor
and
ins
cs
inc
push
gs
inc
push
dec
and
dec
cmp
inc
push
sub
dec
adc
data16
inc
xor
pop
pop
ins
xor
dec
and
sub
push
adc
add
outs
sub
out
mov
movs
les
(bad)
test
movs
scas
mov
mov
or
pusha
and
movs
jmp
mov
push
or
sub
ja
data16
or
inc
add
push
mov
jne
imul
test
xlat
pop
cmp
mov
push
adc
pop
mov
stos
mov
aaa
gs
mov
fidivr
jmp
out
sti
mov
(bad)
mov
sub
jg
dec
or
dec
or
pop
sbb
jo
pop
sbb
imul
add
cmps
bound
pop
icebp
sub
out
mov
inc
add
imul
push
pop
pop
adc
popf
jb
jecxz
jp
out
imul
xchg
enter
xchg
and
xor
(bad)
scas
cld
mov
(bad)
or
loopne
push
mov
dec
mov
out
mov
pusha
push
cmovl
dec
or
jno
mov
xor
mov
imul
dec
or
dec
sbb
pop
ficomp
inc
xor
ins
cmps
in
popa
mov
xchg
fcomp
sbb
push
push
xor
lock
mov
dec
push
into
lods
fwait
repnz
or
xchg
imul
xchg
rcl
add
test
mov
push
sbb
pushf
imul
mov
sar
xor
xchg
inc
adc
xchg
(bad)
out
jmp
sbb
rcl
hlt
xchg
mov
xor
xchg
lds
fwait
shr
pop
sbb
jno
(bad)
ins
aas
in
jno
repnz
fnsave
je
fild
inc
(bad)
stos
ins
sub
jo
mov
js
pop
push
das
pusha
sub
inc
retf
ss
ins
sbb
lods
js
(bad)
sahf
dec
sbb
mov
xor
ja
movs
fidiv
popf
out
and
xor
adc
in
mov
test
push
and
push
rol
fld
outs
retf
mov
mov
packsswb
push
shl
(bad)
mov
fiadd
jmp
jbe
inc
push
sbb
fadd
outs
cmps
in
dec
test
dec
adc
in
xor
cs
jmp
xor
jns
xchg
push
mov
into
sub
mov
lock
inc
pop
ret
sub
cmps
rol
mov
cmp
fistp
add
sbb
int
jo
in
mov
xchg
mov
cmp
les
outs
add
cmc
inc
add
jl
loopne
xor
mov
and
xor
xchg
fiadd
xchg
jmp
push
cmp
mov
lock
in
dec
add
cmp
push
je
cmp
pop
or
mov
add
mov
sub
ja
shl
mov
dec
adc
and
inc
mov
push
xor
fistp
sbb
or
xor
stos
fisttp
push
pop
mov
aam
sbb
xchg
mov
jbe
out
mov
ds
mov
stos
jmp
inc
sbb
imul
pop
inc
loope
fld
std
xchg
dec
or
popf
jnp
(bad)
movs
sahf
fldcw
add
add
xchg
aaa
pop
push
(bad)
movs
test
data16
inc
cmc
lods
fistp
test
pop
mov
and
shl
lods
shl
or
mov
jg
into
xor
fistp
xchg
retf
or
xchg
shl
repz
xor
retf
ss
push
movs
inc
mov
mov
test
mul
jno
cdq
jns
popa
jmp
fisttp
lock
mov
(bad)
jb
inc
scas
imul
xor
ss
and
xchg
jg
ret
scas
addr16
sti
pop
sub
cmp
(bad)
aaa
ret
aas
lock
jae
dec
int3
pop
mov
(bad)
les
pusha
rol
push
cli
xor
es
add
sub
movs
jno
push
int
lock
inc
imul
test
xor
mov
xor
mov
mov
aam
mov
inc
sar
pop
xor
push
push
lea
or
in
pushf
jbe
xchg
xchg
jl
imul
push
fadd
mul
popa
xlat
mov
push
or
in
iret
ins
rol
out
pop
xchg
outs
leave
pop
mov
xchg
shl
push
loopne
jmp
stc
sub
sub
ret
arpl
cmp
or
imul
pusha
sbb
in
push
scas
xchg
xchg
dec
pop
int
or
cli
xor
dec
test
push
mov
jge
inc
not
pop
adc
aaa
sub
pop
test
arpl
xchg
popa
rol
iret
ds
add
cmp
xor
pop
clc
mov
out
sub
push
movs
jb
iret
xor
neg
dec
mov
sbb
sub
dec
ficomp
stos
inc
mov
cmp
or
pop
cmps
xchg
nop
test
xchg
inc
ror
and
dec
rcl
mov
ret
jnp
dec
jecxz
add
dec
or
mov
ror
mov
dec
test
in
not
mov
les
push
icebp
jb
outs
add
dec
enter
xchg
mov
fdiv
pop
xor
das
dec
push
and
inc
in
mov
dec
aad
lds
loopne
xchg
je
call
(bad)
dec
test
jno
jno
push
retf
cdq
popf
inc
sar
pop
jmp
push
jecxz
adc
adc
sub
inc
adc
and
ja
pushf
mov
retf
lahf
push
call
push
or
pop
fild
ds
inc
mov
(bad)
cmp
hlt
pop
std
jge
mov
shl
sub
pop
stos
xchg
cwde
inc
mov
jecxz
dec
aam
fadd
jmp
sbb
ds
mov
jmp
mov
ret
pusha
jecxz
pop
add
cmp
and
inc
int
(bad)
cmp
add
stos
bound
adc
mov
push
iret
cmp
pop
mov
int
ret
in
sub
push
movs
xchg
jno
inc
mov
jmp
mov
rol
mov
jnp
push
repnz
sbb
pop
cmc
xor
sbb
xor
in
(bad)
shl
cmp
fisttp
jbe
cmp
ss
test
mov
lea
mov
retf
das
or
int3
dec
loope
mov
mov
xchg
jnp
pop
mov
les
jmp
les
xchg
dec
retf
nop
sub
or
jae
cwde
mov
mov
ja
jecxz
adc
fs
retf
pop
adc
and
jge
cmc
sub
inc
xor
or
or
or
push
pop
mov
stos
mov
jmp
(bad)
das
in
shl
cmc
pop
rol
jecxz
std
fwait
mov
adc
in
cvttps2pi
jb
call
cld
mov
in
mov
or
or
xor
test
jne
push
jmp
mov
jne
mov
mov
in
or
jo
ins
movs
mov
dec
stos
ins
fidiv
sbb
out
pop
xchg
pop
shl
leave
cmp
in
mov
xchg
(bad)
jns
lahf
mov
push
ins
cmps
cwde
xchg
lea
inc
stos
arpl
and
dec
or
push
pop
and
jmp
out
push
xchg
push
fstp
ja
dec
mov
cld
add
and
xor
xor
int3
das
adc
push
loop
in
sub
inc
mov
mov
mov
cdq
jnp
retf
pop
mov
cmp
inc
mov
mov
pop
fisub
ret
push
dec
mov
fdivr
cli
js
cmp
clc
cmp
pop
fidivr
call
lock
mov
mov
push
xor
dec
mov
sahf
dec
sbb
push
loop
cmps
xchg
fsubr
push
div
adc
es
les
and
std
cmp
aad
xor
in
lods
outs
rcr
xor
mov
ss
pmaddwd
call
inc
icebp
and
adc
cvtdq2ps
pop
push
ss
out
(bad)
imul
sbb
inc
sar
pop
ror
sub
mov
jle
dec
mul
in
shl
adc
es
xchg
dec
mov
and
pop
lods
xchg
popa
iret
cmp
dec
mov
xchg
dec
rol
add
xor
jns
mov
js
jne
xchg
mov
nop
shl
out
jge
cmp
dec
fbstp
aam
out
push
fstp
ja
arpl
das
out
or
dec
sbb
dec
mov
xor
enter
push
adc
jge
xchg
lahf
dec
scas
fwait
inc
mov
outs
out
mov
mov
hlt
sahf
fidivr
ss
sbb
loope
lock
or
pop
sbb
or
adc
xor
rcl
jg
push
ret
add
sti
xor
jl
push
sbb
pop
add
test
jg
jnp
lea
inc
rol
jne
jb
mov
gs
mov
cmp
pop
(bad)
cdq
mov
shr
int
loope
pop
iret
pusha
adc
adc
pop
sbb
into
add
push
xchg
sar
in
jle
inc
scas
test
retf
pop
jmp
imul
or
rcl
iret
pushf
xchg
xchg
mov
dec
fld
and
cmps
aad
leave
mov
fisubr
iret
pop
jecxz
nop
mov
xchg
mov
mov
ror
push
or
push
iret
sub
inc
loop
cmps
mov
add
int
clc
xor
and
sub
cmp
jmp
test
dec
cld
je
fs
rcr
je
and
daa
push
cmp
push
pop
xor
dec
sbb
mov
loop
repnz
std
xchg
xchg
leave
push
push
lds
mov
shl
or
push
xchg
movs
xchg
mov
stos
lahf
mov
inc
sbb
adc
push
shl
mov
cmc
pusha
cmps
mov
popa
std
push
xchg
mov
fs
bound
inc
or
xor
in
xchg
pop
ja
jge
ret
pushf
fdivr
dec
int3
sub
js
daa
test
ret
ins
jmp
inc
loop
add
(bad)
retf
xchg
mov
jle
sub
cmp
jmp
test
xchg
arpl
sub
pop
int
sub
aas
pop
sbb
cs
jg
xor
cmp
in
adc
leave
cmp
add
enter
ficomp
js
sub
push
fisttp
pop
pop
or
adc
aad
fbld
(bad)
and
and
shl
xchg
dec
jmp
test
ror
sti
cmp
jns
add
cmp
imul
jp
sbb
dec
out
pop
fcomp
ja
inc
clc
pop
mov
push
xchg
imul
add
repnz
fsub
or
outs
mov
enter
outs
aad
cmp
mov
mov
adc
add
jne
inc
std
sahf
lods
into
imul
data16
adc
(bad)
or
sbb
clc
pop
enter
mov
leave
sub
das
jmp
leave
outs
or
sbb
not
ds
mov
xchg
jp
dec
mov
xchg
ins
mov
push
mov
scas
nop
jnp
push
sbb
pop
mov
cmps
(bad)
(bad)
cmp
sub
pop
push
mov
inc
xor
(bad)
je
push
mov
jge
call
mov
xor
or
cs
adc
movs
xchg
addr16
inc
fld
in
dec
xchg
jne
jb
inc
lods
cdq
bound
add
adc
mov
xor
add
ins
jmp
mov
and
cmc
pop
sbb
cs
jnp
xchg
dec
aam
jg
and
sub
mov
lods
(bad)
jne
and
pop
lods
imul
pop
or
cmp
hlt
push
xchg
cmp
cs
or
pop
sti
cmp
dec
mov
ja
pop
lods
xchg
ins
jmp
inc
mov
js
pop
and
jl
or
dec
adc
sub
jno
sbb
stc
push
scas
xchg
test
dec
mov
xor
xor
inc
test
call
out
aam
lea
jbe
pop
mov
(bad)
xor
ins
mov
dec
mov
mov
jne
ja
xor
ja
mov
out
xchg
mov
mov
jmp
cmp
sbb
xor
div
inc
sub
cld
jg
fwait
mov
lock
add
lods
nop
fisubr
mov
sub
mov
gs
pop
ret
push
xchg
xchg
dec
(bad)
sub
out
cwde
sbb
xchg
mov
iret
adc
jne
jp
mov
push
xor
in
pop
mov
data16
sbb
out
mov
outs
ss
push
xrelease
rol
les
loop
sub
jbe
test
loope
stos
imul
ins
mov
hlt
mov
adc
ds
xor
fwait
cmps
cmps
(bad)
xchg
mov
jl
sub
sahf
jae
xchg
mov
fild
pop
(bad)
lahf
imul
sti
pop
xchg
outs
in
push
cmp
shr
ja
call
into
sub
aaa
adc
movs
mov
inc
mov
cmc
inc
add
xor
cmp
mov
jnp
inc
add
ja
add
out
ins
add
or
push
push
out
or
fstp
in
add
test
shr
aam
jecxz
mov
and
cs
sbb
push
jg
xor
cmp
push
repz
pop
lods
mov
jge
and
push
add
pop
jmp
ins
loopne
pop
je
push
xor
push
add
dec
scas
popa
shl
add
or
pop
hlt
push
test
fisttp
add
pusha
add
mov
mov
hlt
dec
or
and
pop
ror
and
lods
ret
(bad)
jge
dec
mov
pop
scas
pushf
dec
mov
mov
jp
jns
cwde
iret
bound
inc
add
inc
jmp
not
imul
xor
sub
shl
sbb
rol
xchg
rol
jne
inc
xchg
jmp
scas
int
int3
push
jmp
(bad)
sub
push
in
cmp
xchg
fdiv
sub
pop
clc
jnp
inc
or
push
repz
ud0
adc
push
sar
(bad)
cs
sbb
and
sahf
into
imul
popa
movs
or
hlt
xchg
into
test
pushf
inc
mov
mov
fadd
pop
retf
and
adc
add
sbb
jb
sub
sbb
jg
dec
(bad)
adc
pop
add
pop
cmp
pop
add
cmp
and
add
aaa
xor
sbb
sbb
out
fisub
adc
test
lahf
cwde
mov
inc
rcl
(bad)
daa
in
rcl
push
fimul
push
imul
shr
sbb
or
loop
jmp
loop
fidivr
jb
push
ror
repz
add
aaa
inc
loopne
clc
(bad)
cld
movs
out
mov
movs
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
int
rcr
scas
jmp
mov
stc
stos
jmp
mov
jmp
iret
mov
scas
ficomp
fistp
sbb
push
pop
sbb
sbb
sbb
sbb
adc
sub
sub
sub
sub
sbb
sbb
sbb
jne
sbb
cmc
adc
sbb
inc
adc
sbb
push
sbb
cmp
imul
push
sbb
sbb
sbb
sub
dec
dec
sbb
sbb
sbb
pop
dec
push
pop
sbb
sbb
sbb
jne
jnp
sbb
sbb
sbb
sbb
sbb
dec
movs
mov
sbb
jecxz
sub
nop
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sbb
sbb
sbb
adc
les
stos
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
stos
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
jecxz
pop
sbb
sbb
dec
pop
adc
mov
or
pop
sbb
pop
mov
pop
sbb
pop
les
pop
sbb
push
add
pop
sbb
push
add
adc
inc
push
or
pop
sbb
sbb
sbb
sbb
push
dec
pop
pop
sbb
push
cli
push
pop
sbb
sbb
sbb
adc
pop
pop
sbb
sbb
add
pop
sbb
push
adc
sbb
jnp
pop
sbb
sbb
sbb
adc
sbb
sbb
adc
pop
sbb
adc
pop
or
rcr
and
adc
adc
adc
adc
pop
sbb
sbb
sbb
pop
sbb
inc
adc
sbb
sbb
adc
adc
adc
jge
or
adc
imul
adc
sbb
sbb
sbb
adc
pop
sbb
adc
pop
sbb
adc
aaa
adc
and
dec
adc
jp
xor
pop
sbb
sbb
sbb
adc
add
sbb
push
pop
sbb
add
pop
sbb
add
pop
sbb
sbb
sbb
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
push
pop
sbb
pop
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
sbb
pop
les
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
adc
sbb
sbb
inc
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
adc
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
or
add
xchg
push
add
or
mov
cdq
fst
sub
sub
hlt
or
repz
jae
add
call
mov
lds
adc
mov
sub
add
call
fcomp
pop
mov
in
xchg
push
and
iret
cmp
dec
or
cld
sti
mov
loopne
push
ret
and
cmps
fcomp
scas
iret
dec
mov
sub
daa
aad
inc
test
(bad)
cwde
fmul
fld
stos
lahf
sub
pop
aad
leave
xor
xchg
mov
(bad)
or
adc
mov
outs
lods
jmp
push
and
adc
stos
int3
sahf
add
outs
adc
push
pop
stos
icebp
mov
sti
mov
hlt
mov
cdq
lds
inc
sub
xchg
mov
xor
xor
sub
or
retf
mov
test
push
push
inc
push
pop
push
lods
(bad)
mov
mov
pushf
jmp
mov
pop
xor
add
mov
inc
mov
jb
cld
adc
fldl2t
mov
cmps
and
push
xchg
sbb
div
mov
dec
jnp
in
bound
jmp
aam
ins
dec
push
xor
data16
icebp
aad
outs
jle
add
cmp
or
cmp
push
pop
sbb
mov
imul
mov
jl
in
mov
push
jge
push
push
scas
add
cld
loope
mov
out
jg
cmp
ficomp
call
imul
(bad)
retf
daa
mov
imul
stos
sbb
cmc
fcomp
lock
mov
int3
(bad)
mov
in
mov
and
push
adc
fs
or
jg
adc
mov
ins
add
mov
fs
mov
movs
gs
and
retf
jmp
cmc
test
add
sbb
(bad)
xlat
inc
xchg
mov
jmp
stos
aaa
mov
imul
jno
int
pop
call
pushf
test
cli
pusha
sbb
clc
loop
jbe
sub
mov
lahf
hlt
mov
jns
adc
cmps
add
lods
loope
and
retf
xor
aaa
int
fild
repnz
pop
and
movs
in
jg
dec
or
aam
clc
in
retf
cmps
jmp
mov
mov
dec
imul
clc
mov
ror
out
xor
int
cdq
pop
addr16
mov
(bad)
xchg
or
sbb
mov
xchg
lock
bound
sub
in
lea
jl
jne
cli
movs
stc
push
jae
sbb
lds
lods
test
add
lods
loope
cmps
in
movs
sbb
xor
adc
push
iret
(bad)
retf
mov
and
fadd
mov
xchg
jp
and
or
fdiv
push
pop
mov
mov
popa
sub
(bad)
(bad)
outs
xor
stc
mov
lods
sbb
(bad)
test
sbb
and
inc
xor
cmp
(bad)
mov
js
dec
xchg
pop
jbe
call
mov
pop
mov
dec
push
cmps
in
(bad)
adc
dec
popf
test
outs
jle
cmp
(bad)
mov
aaa
call
mov
mov
inc
mov
adc
stc
mov
sbb
inc
push
adc
xor
repz
stos
pop
push
adc
fs
push
pop
gs
aas
jae
and
clc
mov
aas
push
daa
(bad)
mov
mov
cmp
ret
adc
jl
dec
cmp
icebp
lods
sar
mov
scas
and
pop
add
add
ss
ret
test
cwde
shl
data16
jle
or
mov
push
inc
mov
add
adc
xchg
mov
sbb
mov
lahf
xor
cmp
popf
mov
push
xor
add
pop
mov
bound
or
adc
out
mov
popf
sub
into
in
mov
inc
mov
jbe
in
int
xchg
aam
pusha
xchg
mov
add
pushf
jbe
js
imul
pop
mov
add
retf
fsubr
stos
sbb
mov
mov
(bad)
stos
hlt
mov
push
stos
stc
jmp
sbb
jp
pop
adc
repnz
sbb
dec
mov
fild
cmps
sbb
mov
adc
pop
adc
sub
test
test
adc
and
dec
pop
pop
mov
in
cmp
shl
in
ret
xchg
cmp
daa
jl
ror
mov
pushf
daa
dec
sbb
inc
jle
push
xchg
pop
adc
pop
(bad)
mov
sub
int3
jmp
ss
mov
fsubrp
int
xchg
and
cmp
pop
addr16
mov
rcl
xchg
mov
cmp
fdiv
aam
xchg
and
out
imul
retf
icebp
fidiv
adc
mov
jl
push
sub
and
popa
cmps
add
mov
stos
arpl
bound
sti
mov
xor
call
and
call
jb
push
mov
mov
pop
mov
cmps
cwde
in
xor
mov
mov
call
pop
add
pop
std
xlat
sahf
cmc
xor
pop
pop
sti
aad
out
(bad)
into
xchg
outs
push
push
je
push
das
test
push
dec
call
mov
xor
sbb
xchg
movs
push
rcl
mov
sub
pop
dec
or
retf
mov
push
movs
xlat
aaa
(bad)
hlt
mov
dec
push
push
push
fsub
sbb
mov
or
in
sbb
jmp
cmps
cmps
ins
jo
cmp
in
test
push
sub
and
inc
repnz
ficomp
test
js
cli
mov
xchg
rcl
hlt
mov
in
mov
or
mov
jo
push
pop
xor
mov
(bad)
sub
call
sub
adc
mov
inc
push
in
sar
mov
xchg
fmul
push
or
mov
cdq
repnz
and
xlat
push
outs
push
adc
iret
fistp
mov
aaa
jp
adc
gs
cli
mov
cs
les
out
sar
ret
(bad)
cmp
repnz
lods
adc
test
push
add
push
ss
std
mov
test
push
push
or
std
stos
enter
addr16
mov
or
push
or
lds
mov
mov
punpckhwd
xor
(bad)
mov
push
lods
or
rcl
call
mov
sbb
sub
mov
aaa
jnp
cmc
lods
not
cdq
aam
dec
pop
or
cmp
ret
pop
pop
inc
sbb
out
nop
imul
pusha
les
mov
and
les
mov
pushf
call
add
mov
lods
push
xor
mov
push
cmp
(bad)
(bad)
mov
ds
aas
scas
adc
pop
inc
xor
dec
cs
jg
pop
inc
mov
mov
rcl
inc
push
cmp
faddp
xlat
pushf
fsubrp
mov
pop
imul
cmp
(bad)
stos
out
mov
cmovl
push
jmp
jmp
stos
sti
mov
xor
repz
icebp
cmp
adc
sbb
clc
jmp
inc
adc
hlt
xchg
lea
cmp
das
sti
fwait
cmps
sahf
xor
std
cmp
xchg
stc
sub
jmp
inc
popf
shr
jb
sub
or
sbb
mov
stos
xchg
push
adc
test
(bad)
xchg
fstp
xchg
test
mov
cmp
sub
repnz
mov
dec
daa
mov
scas
jmp
cs
jmp
aaa
pusha
daa
jl
cmp
adc
aam
rcr
xor
xchg
jmp
int
add
xor
pop
test
and
adc
cmps
in
jmp
xchg
out
je
jp
dec
add
pop
dec
daa
sar
add
add
es
pusha
dec
or
fucomp
shl
mov
sbb
adc
pusha
adc
das
fst
push
retf
xlat
xchg
pusha
ins
cs
adc
push
sbb
sbb
cdq
ins
xchg
sbb
mov
xor
int3
movs
iret
pop
dec
sub
pop
pop
aas
adc
cmp
retf
add
mov
mov
dec
sti
sbb
pop
pop
int
int3
xchg
mov
push
add
aaa
ja
int
repz
fld
bound
cli
fisttp
scas
ins
dec
and
jmp
cmc
test
js
int
jmp
stos
pause
jnp
xor
loop
shr
fisubr
shl
fwait
in
mov
stc
mov
pop
add
mov
fst
test
jle
and
loopne
add
or
les
pop
neg
fisubr
push
or
push
es
leave
cmp
loopne
jo
jmp
push
outs
cmp
sbb
push
out
add
std
mov
and
cmps
cld
jl
push
xor
repz
out
dec
in
sbb
mov
enter
push
mov
fst
arpl
jge
scas
pop
inc
cmp
xchg
mov
add
fsub
shl
inc
xchg
xchg
sbb
inc
call
sahf
sub
shl
dec
and
rol
cld
mov
mov
push
ja
(bad)
mov
adc
add
test
xor
enter
mov
inc
js
jne
(bad)
aad
popf
ss
adc
mov
pop
test
pop
mov
pushf
icebp
dec
inc
dec
cs
push
arpl
sti
int3
mov
dec
dec
dec
add
lahf
stc
mov
sar
xchg
addr16
sub
sub
out
(bad)
jbe
cmp
in
fistp
scas
add
mov
sbb
sub
icebp
or
test
mov
cld
inc
mov
add
jae
into
mov
pop
push
jns
push
cwde
or
pop
int
lds
xchg
mov
cmp
push
adc
in
xchg
enter
jns
sti
test
ds
adc
xor
in
mov
dec
or
inc
sub
fucomp
stos
fistp
outs
dec
cmp
(bad)
fisttp
dec
inc
sub
fiadd
ds
jne
imul
adc
movs
icebp
stc
rcl
leave
or
add
xor
push
sub
add
aad
sti
into
aad
rol
shl
mov
sub
and
test
fnstcw
jno
stc
add
cmp
movs
jecxz
mov
mov
dec
sub
inc
and
or
icebp
(bad)
cwde
dec
add
adc
mov
pusha
test
push
jae
push
mov
jne
xor
out
xlat
sub
sahf
mov
nop
shr
sub
repnz
or
test
ror
dec
cmp
cld
mov
cmp
pop
pop
mov
sub
jno
out
das
jl
pop
int
(bad)
push
xchg
and
xchg
dec
cwde
neg
data16
mov
pop
jns
test
push
dec
pop
int
stc
mov
jg
jne
fldenv
cmp
push
fcmovnbe
xchg
out
iret
sahf
(bad)
sar
xor
pop
inc
xor
sub
mov
xchg
ins
mov
mov
add
add
cmc
mov
pop
js
dec
jae
je
int
enter
inc
adc
mov
mov
jge
mov
movs
cld
repnz
dec
lea
popa
and
stos
inc
pushf
fidivr
jns
pop
lods
push
es
hlt
pop
push
in
xor
outs
jmp
xor
out
adc
sbb
repnz
sbb
(bad)
sbb
movs
out
jo
jge
pop
aas
fs
aad
addr16
jmp
fwait
pop
xor
imul
fwait
and
cmp
add
cmps
mov
pop
sbb
mov
mov
push
xchg
and
aas
ja
jmp
jae
arpl
iret
xchg
mul
shl
popf
rep
ficom
mov
daa
imul
mov
push
fwait
rcr
ret
cmc
and
pop
retf
lds
mov
pop
sbb
ficomp
mov
(bad)
mov
popf
ja
dec
or
out
hlt
xchg
neg
dec
jmp
jle
rcl
sahf
push
xor
pop
inc
aad
inc
adc
push
inc
sub
loop
movs
xchg
push
jmp
sbb
sub
hlt
mov
ss
(bad)
(bad)
lods
jmp
ds
stc
add
ficomp
push
push
inc
and
out
xchg
aad
sahf
fadd
scas
adc
ret
test
or
call
dec
ins
push
sub
lds
inc
mov
push
sbb
push
pop
push
popf
and
jo
into
sahf
fmul
lahf
fstp
ja
ins
adc
lds
sbb
ror
arpl
pop
mov
xchg
mov
and
sub
ds
(bad)
(bad)
sar
cmp
mov
out
(bad)
mov
push
cmovns
out
lods
mov
lds
jmp
aas
or
stc
mov
iret
aad
test
push
adc
icebp
xchg
and
pop
add
daa
xchg
std
movs
out
inc
inc
dec
sub
fwait
(bad)
lods
dec
dec
push
je
adc
adc
out
jo
and
push
jg
cmc
(bad)
mov
stos
pop
sub
aam
xchg
hlt
add
fwait
int
imul
xchg
push
inc
add
adc
in
les
mov
out
jmp
jns
in
mov
push
mov
mov
xor
mov
lds
rol
pop
cmp
icebp
mov
stos
pcmpeqb
arpl
pushf
aam
xor
outs
jb
jo
mov
addr16
sub
push
add
and
mov
pop
push
mov
xor
imul
clc
jecxz
sbb
dec
pop
je
call
xchg
call
div
pop
adc
xchg
retf
jle
inc
fst
xchg
hlt
dec
mov
pop
in
jecxz
aam
add
jp
icebp
xchg
fs
leave
ins
mov
jnp
aaa
out
inc
adc
adc
sbb
int3
mov
sar
lods
lock
xchg
lods
sbb
shl
push
loop
mov
and
xchg
lea
ss
sbb
xchg
iret
and
add
popf
cld
mov
(bad)
(bad)
sbb
data16
(bad)
mov
lods
pop
and
test
or
es
in
sbb
dec
nop
les
dec
jae
pop
sbb
or
dec
arpl
fs
fisttp
jb
std
xchg
lock
punpckldq
jle
mov
test
loope
lods
loop
cmps
sbb
jmp
inc
pop
adc
dec
xor
cmc
test
jmp
and
fwait
out
test
jge
inc
jnp
push
in
cmps
call
test
loope
mov
stc
hlt
fstp
cmp
hlt
jmp
fs
(bad)
loopne
retf
lods
fisubr
cmp
mov
and
xor
adc
mov
lahf
push
mov
pop
shl
rcl
rcr
jl
push
daa
or
xchg
fsubr
movs
sbb
xor
movzx
(bad)
bound
jae
not
mov
fcmove
mov
push
jns
pop
test
retf
mov
mov
pop
adc
retf
xor
or
repnz
adc
inc
xchg
mov
(bad)
dec
js
outs
xchg
jp
loopne
enter
add
aas
outs
sub
into
fist
(bad)
shl
in
mov
mov
pop
ja
inc
mov
ja
cmp
add
leave
jnp
add
cmp
cmp
shl
cwde
(bad)
and
test
push
nop
enter
int3
mov
aad
cmp
shl
jne
cmp
cmps
movs
inc
add
scas
and
shl
fmul
retf
js
push
aas
cmps
sub
scas
sub
aaa
test
(bad)
push
add
imul
mov
test
dec
and
xchg
mov
sar
imul
mov
nop
inc
sub
retf
inc
test
xchg
retf
ds
bound
jae
clc
adc
inc
sahf
sbb
(bad)
loopne
jns
popa
xchg
ret
cmp
pop
xor
cmc
fwait
jmp
mov
sbb
and
inc
dec
das
push
sub
mov
jle
loope
mov
inc
js
dec
(bad)
xor
add
retf
mov
mov
retf
push
sub
mov
ja
loopne
fcomp
xlat
(bad)
scas
out
xor
cli
mov
add
aad
pushf
sbb
or
jo
xor
xchg
dec
dec
xor
aaa
jg
into
(bad)
xchg
add
add
pop
mov
pop
push
push
pop
lods
cmp
add
xchg
stc
mov
jl
jbe
cmp
sub
rep
stc
daa
(bad)
jmp
jp
ss
ror
mov
xor
cld
or
jle
loop
mov
mov
xlat
mov
cwde
lock
stc
call
je
adc
and
(bad)
movs
in
dec
cdq
pop
inc
sbb
retf
jp
xlat
add
sbb
outs
and
icebp
sbb
push
push
fwait
loope
sahf
cmp
pop
dec
cmp
aaa
popa
or
ins
xchg
pop
jle
mov
sbb
or
mov
xchg
sub
fwait
shl
push
dec
adc
add
xchg
movs
sub
mov
ins
pop
or
ror
mov
ins
add
sub
repnz
sbb
xor
(bad)
mov
and
fisubr
jle
add
movs
repnz
test
ins
xlat
es
xchg
stc
mov
pop
fs
out
xor
les
dec
mov
sbb
es
mov
jge
gs
int3
movs
call
dec
cmp
cmp
shl
inc
ja
jbe
(bad)
(bad)
icebp
pop
inc
or
mov
mov
push
jnp
addr16
lods
ret
sub
aam
jmp
and
xor
int
leave
stos
push
cmp
fimul
push
pop
je
xor
ss
mov
dec
das
mov
pop
pop
mov
inc
xor
out
scas
int3
call
xor
lods
div
add
fsubr
fidivr
adc
xor
sbb
or
inc
cdq
repz
and
shl
(bad)
adc
cld
ja
add
jmp
cwde
mov
pop
cdq
std
and
cmps
out
push
mov
mov
push
jae
xor
jo
ds
pop
ins
sub
pop
pop
ficomp
pusha
and
cmps
sub
xor
ficomp
icebp
sbb
add
mov
(bad)
mov
das
popa
add
mov
or
cs
and
mov
jg
or
mov
test
movs
in
out
aaa
ins
xor
push
dec
or
ret
mov
and
push
sbb
or
stc
xchg
fisttp
ins
add
add
add
add
les
ja
add
sbb
fnsave
mov
fwait
inc
push
xor
add
call
push
cmc
sbb
ficomp
inc
loop
fstp
jae
ja
push
aad
pop
adc
loopne
cli
sub
popf
shl
stos
(bad)
aaa
int3
or
hlt
cmps
loopne
fistp
sti
int
ror
mov
mov
mov
popf
and
mov
jbe
in
inc
dec
or
ret
(bad)
std
cmps
inc
aas
jo
(bad)
mov
mov
sub
lds
out
loope
xchg
clc
mov
mov
add
xchg
push
add
test
daa
inc
test
(bad)
mov
jl
les
jle
sar
idiv
jg
add
rcl
and
jb
dec
popa
mov
ins
or
aas
das
js
test
xor
in
retf
ret
jg
xchg
xor
iret
xor
mov
jl
outs
scas
retf
mov
not
mov
mov
repz
adc
jp
or
push
xor
add
or
dec
cmp
add
xchg
push
bound
jae
jmp
mov
jecxz
cwde
jl
and
push
aas
cmp
retf
hlt
cmp
xchg
test
leave
add
adc
or
es
ds
dec
fsubr
xchg
xor
stos
jge
mov
cmp
call
cmc
mov
cmp
pop
jne
adc
dec
fisub
jns
pop
data16
xor
jo
cmp
or
xchg
paddsw
jns
iret
rcl
stos
xor
push
mov
push
iret
sub
push
pop
sahf
or
dec
push
out
push
rol
mov
(bad)
outs
das
jbe
das
mov
cmp
dec
xor
mov
enter
mov
xor
fimul
into
pop
jae
test
cmc
(bad)
repz
dec
fistp
jnp
jp
add
retf
mov
stos
cwde
lods
cdq
sbb
xchg
and
mov
data16
jl
sub
pop
push
cmps
ins
mov
and
aas
loope
jecxz
xor
push
cmps
lock
ins
pop
mov
repnz
(bad)
mov
sahf
out
dec
fdiv
pop
jg
pusha
push
dec
mov
mov
sbb
pop
ins
outs
jb
shr
loopne
movs
loop
aas
imul
push
xchg
cmp
popa
stc
stc
mov
fld
fld
cmps
adc
add
jg
inc
fstp
push
fbld
das
stc
lods
add
pop
sbb
shl
xchg
jle
and
mov
ror
add
pushf
dec
daa
call
les
jae
dec
and
mov
hlt
hlt
mov
out
jo
repz
call
lds
xchg
dec
jecxz
dec
jb
lahf
icebp
movs
mov
xchg
or
push
imul
sbb
ror
inc
aaa
ja
clc
xor
fs
sbb
and
stos
mov
xor
jmp
int
jnp
and
push
add
scas
es
or
mov
inc
mov
jmp
hlt
cmc
je
jno
imul
mov
(bad)
adc
pushf
icebp
xchg
dec
cmc
fwait
jmp
mov
sub
inc
xor
xchg
sub
cmp
push
xchg
rol
mov
adc
retf
jns
sub
call
cmovs
xchg
xor
leave
xchg
cmp
add
loop
addps
and
std
hlt
(bad)
mov
jg
mov
and
mov
cmps
jle
popa
adc
fcom
pop
sahf
mov
xchg
jmp
or
sahf
mov
and
(bad)
(bad)
out
in
xor
je
xchg
fwait
inc
push
fsubr
call
jbe
stos
(bad)
movs
add
fimul
lahf
mov
mov
dec
or
out
test
enter
sub
cmp
cmp
or
xor
pop
sbb
bound
ins
push
or
xchg
pop
cmps
lds
sbb
lock
popa
das
and
test
popa
popf
dec
pusha
call
mov
adc
pop
cwde
xchg
xor
ror
outs
in
cli
daa
call
xchg
push
dec
in
loopne
pop
outs
and
fldenv
jns
mov
daa
scas
sub
popa
adc
stos
in
sub
xchg
fldenv
mov
adc
cmps
mov
ja
popa
push
scas
std
jb
push
daa
xlat
mov
es
out
fsub
es
test
dec
jo
push
ins
cmp
frstor
jno
in
sbb
aad
mov
sbb
cmp
jns
ret
test
in
pop
xchg
jnp
mov
xor
inc
inc
inc
retf
neg
adc
or
push
cmp
jb
push
jp
fwait
mov
or
sti
cmp
xlat
mov
sbb
lock
(bad)
js
test
push
sbb
out
inc
or
jb
pop
aad
cli
mov
inc
mov
call
sub
jmp
mov
jp
and
dec
add
int3
(bad)
aas
or
jp
push
jmp
xchg
(bad)
mov
rcl
inc
mov
in
mov
test
mov
inc
mov
test
mov
loopne
mov
addr16
sahf
push
and
adc
lods
cmps
jb
lods
data16
push
add
and
das
sbb
pop
in
adc
arpl
dec
xor
cmp
jmp
cmp
sbb
jg
retf
fdivr
mov
test
inc
push
lock
loop
push
adc
push
fiadd
imul
js
pop
repz
loop
hlt
inc
cmp
aaa
loopne
mov
fbstp
mov
mov
repz
mov
xchg
jne
dec
adc
shr
rcl
inc
cmc
add
inc
outs
repz
dec
add
jmp
aaa
inc
cmp
inc
mov
xchg
push
jp
stos
xor
jmp
push
mov
int
(bad)
xchg
or
or
pop
dec
sahf
sar
xchg
jg
adc
cmp
xchg
jmp
pop
sahf
rcr
push
add
leave
jo
enter
or
pop
popa
pop
mov
fs
mov
neg
popf
leave
test
dec
rol
(bad)
or
iret
int
adc
test
mov
xchg
cdq
dec
and
arpl
sbb
loop
add
pusha
pop
ret
jb
or
lds
cli
xchg
fnstsw
mov
(bad)
nop
mov
cwde
stc
test
or
cmp
mov
xchg
and
fdiv
sub
or
fnstenv
fidivr
jbe
das
sub
bound
sbb
dec
mov
js
add
jo
ins
jg
dec
xchg
aam
(bad)
imul
in
(bad)
sbb
mov
setg
les
shr
stc
rcl
shl
jo
xchg
(bad)
or
loop
push
je
sbb
mov
scas
cmp
dec
rcl
test
in
xchg
xchg
rcr
cmp
call
push
stc
neg
push
or
sub
jmp
out
out
scas
jb
fdivr
cmp
fld
movs
fadd
adc
push
js
clc
repz
ins
cmp
ja
call
retf
mov
scas
add
mov
dec
or
inc
mov
cmp
out
out
rcl
mov
es
or
push
pop
jae
cmc
inc
dec
inc
push
aas
sti
or
sub
cmps
pop
movs
outs
lock
movs
pop
dec
sahf
adc
pop
scas
jg
test
addr16
out
mov
hlt
sbb
mov
cmp
xor
cmp
cdq
sub
jnp
dec
jbe
mov
sub
and
cmp
dec
aad
push
mov
std
inc
dec
setge
cmp
popf
and
dec
jmp
jle
pop
in
xchg
or
fild
retf
dec
xor
(bad)
mov
mov
ja
je
mov
sbb
sti
mov
xor
adc
loopne
xchg
aad
xor
lea
xor
test
push
leave
arpl
pop
ins
ret
sar
jne
adc
bound
xor
inc
mov
into
aas
xchg
and
outs
jp
clc
pop
jge
xchg
lahf
out
xchg
sub
popfw
push
test
mov
fbld
fidiv
sbb
mov
or
cbw
jge
movs
cld
repnz
loop
jp
sub
cmps
loopne
fsub
add
dec
mov
hlt
xlat
aam
jl
cmc
test
and
pop
movs
pop
push
adc
mov
push
pop
mov
jle
push
inc
pop
aad
fnstcw
int3
adc
sub
aaa
cld
jns
xchg
loop
xchg
cmc
or
xor
les
inc
mov
and
int3
mov
inc
add
sub
push
adc
mov
mov
(bad)
jmp
jge
sbb
movs
call
popf
icebp
iret
cmps
addr16
sub
or
loope
pusha
cdq
push
fmul
push
gs
xor
inc
sbb
xor
add
push
(bad)
call
sub
inc
xchg
outs
adc
retf
aam
ss
movs
test
idiv
sbb
or
lds
ret
push
adc
sub
lock
pslld
push
mov
loopne
sbb
outs
out
sub
sub
rcr
enter
add
popf
push
fisubr
or
add
stc
imul
xor
sub
cmp
lock
mov
or
stos
ret
test
dec
push
add
add
xchg
adc
in
sar
lods
fcmove
or
and
and
inc
push
mov
mov
gs
add
sub
loope
push
fist
rcr
daa
or
xchg
hlt
push
je
sahf
lods
pushw
mov
dec
mov
mov
sti
adc
sar
lock
push
add
cmp
sbb
or
bound
mov
das
fsub
or
xor
data16
push
jo
xchg
int
inc
lahf
pop
retf
sub
xchg
iret
rcl
xchg
or
add
clc
add
adc
sbb
retf
mov
push
test
daa
fisttp
fisubr
popf
repz
lahf
pop
or
movs
sbb
or
sbb
sti
sar
not
jno
sub
jbe
dec
dec
xchg
ss
inc
inc
repz
lods
daa
xor
stc
push
inc
push
fidiv
and
sbb
adc
xchg
mov
xlat
pop
hlt
sub
jno
xchg
(bad)
pop
jnp
pop
pop
sub
xchg
cmp
test
add
fimul
(bad)
int
dec
lds
add
and
data16
inc
lods
cmc
or
jg
dec
sub
cmp
push
(bad)
dec
pop
fsub
icebp
in
fldenv
jb
jmp
and
fild
fisub
sub
add
jnp
sub
pop
dec
push
add
jb
add
or
cmp
call
int3
xchg
fcom
pop
imul
jp
addr16
xchg
push
lock
mov
cmps
xor
hlt
cs
add
mov
loopne
mov
dec
dec
xchg
inc
rcl
and
cmovae
push
data16
rcl
das
mov
or
jns
xor
stos
add
xchg
or
inc
cmp
xor
loope
inc
loopne
mov
pop
mov
ficomp
mov
push
xor
mov
daa
push
inc
jp
int3
mov
mov
lods
dec
imul
test
in
mov
jg
(bad)
cmc
loop
imul
mov
dec
daa
outs
mov
(bad)
fucomp
out
xchg
dec
pop
pop
xor
daa
leave
sub
shl
add
sti
mov
retf
sbb
icebp
dec
add
mov
stos
sbb
gs
cs
push
call
jmp
pushf
clc
sahf
jp
cmp
xlat
mov
(bad)
stos
aam
fcomp
es
aad
add
cmp
jg
xor
ja
jo
(bad)
mov
arpl
dec
push
dec
test
inc
add
jg
adc
ja
mov
and
int3
dec
adc
cmp
push
aam
ss
xor
pop
cmp
js
or
mov
outs
rol
ds
in
dec
ss
aad
mov
cmp
rcr
cmp
sar
jbe
xchg
mov
sbb
sbb
push
shr
push
fnstcw
lods
shr
fucom
mov
iret
adc
mov
mov
hlt
or
loope
pop
loopne
cmp
rol
add
retf
mov
imul
mov
retf
(bad)
fcom
outs
sub
mov
mov
dec
jnp
and
jo
add
imul
in
aad
xchg
xor
xchg
cmp
push
or
pop
xor
out
mov
inc
dec
(bad)
mov
es
sbb
adc
and
test
inc
out
jp
pop
push
mov
outs
mov
inc
out
sub
push
jo
mov
movs
pop
fmul
(bad)
aad
jno
nop
je
call
pop
ins
cmps
out
jl
push
dec
imul
neg
adc
out
dec
push
jae
push
push
gs
hlt
mov
scas
iret
cmp
push
mov
mov
and
adc
out
inc
enter
adc
dec
pushf
sbb
push
jmp
adc
and
and
or
push
add
sbb
dec
in
mov
cmp
or
xchg
sbb
popf
xchg
xor
(bad)
fnsave
mov
xchg
fisttp
mov
mov
dec
inc
jnp
sar
sub
scas
xor
cmc
enter
jg
lods
test
mov
es
jp
es
scas
xlat
test
jmp
sahf
mov
sbb
pop
push
cmps
imul
cwde
and
mov
pop
adc
scas
pusha
jle
(bad)
or
pushf
enter
jecxz
dec
hlt
ss
loope
mov
inc
shr
icebp
push
hlt
adc
and
scas
ds
lods
js
fsubr
and
dec
sar
sbb
mov
dec
jns
jl
jecxz
mov
push
pop
push
mov
retf
xchg
popa
ss
mov
sub
xchg
call
adc
retf
rcr
rcr
dec
mov
hlt
dec
cdq
adc
pop
sub
iret
pop
repnz
lods
movs
nop
push
test
jae
mov
call
jb
fcomp
inc
out
inc
fadd
sar
adc
and
int3
and
fsub
lahf
fidivr
pop
scas
jmp
inc
add
xchg
add
push
icebp
and
retf
les
xchg
call
out
movs
cpuid
mov
icebp
mul
inc
std
add
int
out
sbb
mov
out
jg
push
jb
push
sti
data16
loopne
and
inc
neg
inc
mov
gs
das
shl
data16
jo
inc
test
xor
shr
cwde
adc
fnsave
sbb
and
out
and
inc
jg
shl
xchg
ret
iret
icebp
inc
xchg
jno
je
add
jbe
aad
leave
int
jo
nop
scas
cmp
xchg
jbe
cmp
arpl
inc
xchg
mov
pop
cmp
rcr
mov
cli
and
call
add
rcl
loope
jae
pop
mov
cmp
fist
into
mov
mov
adc
fwait
loope
and
or
cmps
bound
shr
xchg
xor
or
mov
ins
mov
xlat
pop
scas
mov
jmp
fldenv
mov
xchg
xchg
sub
ret
sub
pop
push
xor
push
psadbw
mov
stos
xchg
fwait
mov
pop
sub
jnp
int3
mov
ja
dec
xlat
retf
xchg
or
pop
mov
fcom
popf
popf
inc
cmp
sbb
shl
xor
adc
stos
jle
(bad)
add
rcr
mov
(bad)
mov
and
aaa
jge
(bad)
das
test
loope
mov
adc
mov
and
dec
mov
not
sbb
xchg
xchg
push
int
adc
scas
loop
push
inc
(bad)
out
push
jnp
sbb
inc
mov
jne
in
fsub
aad
mov
or
mov
scas
cdq
out
mov
cmps
and
add
aad
dec
enter
bound
xchg
or
or
cmp
movs
dec
loop
movs
inc
xor
add
daa
aas
mov
push
movs
pop
cld
pop
sub
mov
ja
into
push
dec
aaa
popf
mov
push
mov
outs
mov
outs
popf
les
inc
sub
je
pushf
gs
pop
lods
cld
je
or
cmps
inc
int
xchg
xor
into
mov
jmp
jnp
std
sub
dec
lahf
push
jp
dec
fldenv
in
sbb
inc
xchg
dec
cmps
push
in
mov
hlt
pop
mov
mov
inc
inc
xor
dec
inc
aaa
lock
push
inc
(bad)
push
fistp
xlat
cmp
push
sar
ret
mov
jne
retf
adc
pop
inc
xchg
add
ds
pop
xchg
jbe
push
out
cld
jecxz
xor
scas
pusha
push
sub
shr
cmp
xor
mov
fiadd
fxch
popa
pop
out
sub
and
js
cmp
test
inc
cmp
pop
add
cdq
imul
dec
addr16
mov
out
fcomp
int
scas
pushf
icebp
test
push
sub
lea
bound
dec
inc
pop
adc
gs
dec
pop
shl
fiadd
pop
push
push
push
jae
adc
mov
es
cmp
pop
mov
mov
mov
pop
push
cli
mov
inc
fs
jmp
iret
push
ja
sbb
leave
out
cmp
fsubp
inc
shl
jmp
mov
cwde
dec
iret
inc
test
sub
sub
and
shr
scas
stos
dec
and
xchg
data16
inc
scas
mov
popa
out
and
dec
lods
mov
outs
das
scas
sti
mov
ret
adc
scas
scas
inc
cdq
xchg
and
mov
ret
jg
push
xchg
xchg
pop
pop
ins
mov
pop
inc
sbb
pop
xchg
push
xchg
movs
arpl
inc
neg
or
std
push
into
aas
xchg
mov
call
xchg
sub
mov
mov
mov
sbb
mov
enter
inc
iret
mov
inc
cmps
sub
dec
and
push
aas
xor
adc
xchg
and
sbb
gs
add
mov
ins
or
xchg
jno
daa
jae
xor
std
pop
movs
neg
out
xchg
and
movs
lods
dec
aaa
lods
or
daa
loopne
jne
sub
sub
sub
sbb
cmp
pusha
jmp
mov
out
add
xor
cs
in
cmps
neg
leave
stos
test
cmp
test
stos
pop
inc
or
out
sbb
imul
es
cld
xlat
call
xchg
inc
mov
out
call
movups
ror
jg
test
(bad)
adc
fcmovb
mov
mov
loopne
call
push
shl
dec
les
loop
das
jmp
popf
mov
clc
pop
test
lock
test
mov
or
(bad)
cli
push
mov
dec
push
clc
mov
jne
mov
jp
daa
mov
xlat
push
addr16
mov
and
cwde
add
es
cmp
dec
lods
outs
push
lea
mov
or
mov
jmp
sub
ret
or
in
retf
iret
aas
out
lea
mov
push
cwde
dec
inc
push
test
cmp
cmp
fisubr
cmp
mov
adc
mov
mov
sub
jbe
add
or
in
add
sbb
outs
sub
inc
push
cli
mov
div
adc
sub
es
inc
aad
fcomi
daa
outs
dec
fadd
fs
cwde
jb
pop
mov
xchg
jecxz
(bad)
lods
sub
pusha
out
hlt
fdivr
jbe
mov
pop
inc
out
int
lods
ins
cmp
(bad)
mov
scas
aaa
pop
cld
cld
and
cmp
push
and
mov
(bad)
jne
lods
movs
popa
mov
pop
pop
pop
int3
jnp
test
arpl
xor
xchg
pusha
cmp
pop
adc
dec
and
jae
outs
sbb
xchg
push
in
mov
or
(bad)
into
mov
jg
mov
xchg
push
add
xor
xchg
aam
int
ret
cdq
ficomp
mov
mov
pop
test
mov
leave
mov
nop
movs
test
pop
loop
std
add
jo
mov
fwait
cmps
dec
stc
adc
cmps
fimul
fadd
push
es
dec
mov
in
sub
dec
std
inc
push
not
or
clc
mov
jmp
(bad)
jp
inc
adc
adc
movs
out
mov
rcr
es
sub
ret
xchg
mov
fcom
and
sbb
mov
aas
sub
pop
ficom
daa
outs
ret
cmp
std
nop
push
(bad)
gs
push
adc
jl
inc
or
adc
or
sahf
(bad)
dec
adc
fisubr
push
sbb
sub
and
cmc
xor
lahf
or
jl
ins
ud0
das
jle
dec
mov
jmp
jmp
and
dec
in
inc
test
clc
push
cmp
push
mov
mov
push
adc
add
inc
pushf
mov
pop
sbb
movs
out
mov
pop
inc
or
and
std
out
(bad)
fwait
cmps
jnp
xchg
(bad)
fstp
test
cmp
and
push
inc
sub
cmp
sub
js
pop
test
test
or
dec
and
pop
loop
jg
inc
call
mov
cmps
in
dec
or
ficom
enter
sub
dec
stos
ins
in
lds
jne
js
jg
les
jne
jp
cmp
push
and
jl
outs
add
idiv
rol
fstp
icebp
mov
iret
outs
shl
push
dec
sub
(bad)
not
nop
out
sub
pop
sbb
or
cmps
loop
or
popa
push
push
shl
jns
ja
dec
cmp
or
mov
call
push
xor
sbb
pop
or
repz
push
dec
adc
cs
jg
test
ret
or
jb
ror
cli
mov
ret
lods
jmp
cld
mov
pop
(bad)
mov
test
int
les
popa
mov
(bad)
fsubr
jo
(bad)
push
add
ret
dec
out
int3
push
mov
das
in
dec
adc
test
fcomp
sub
xchg
movs
enter
scas
(bad)
mov
daa
push
push
pop
lds
fadd
adc
pop
iret
popf
gs
xchg
movs
out
fld
xor
jp
xchg
shl
ror
cmps
ror
pop
mov
nop
sar
loope
pop
repnz
test
pop
cmp
push
push
outs
out
mov
push
in
add
cmc
cmps
in
leave
mov
arpl
dec
fcomp
pop
adc
and
or
mul
xlat
loope
fld
in
ins
xor
in
add
lds
inc
packssdw
and
xor
iret
dec
xor
cmp
pop
lds
pop
add
(bad)
idiv
xor
inc
or
sub
add
fwait
retf
mov
movs
sbb
in
scas
(bad)
and
mov
data16
push
es
pop
ret
mov
mov
icebp
mov
test
mov
icebp
test
loopne
mov
sub
rcl
fsubrp
test
pop
loope
(bad)
mov
mov
inc
pop
push
cmp
adc
push
sar
xor
and
xlat
mov
mov
lods
int
sbb
mov
add
dec
mov
sub
jmp
pop
pop
push
xor
add
iret
xchg
out
jl
or
jns
rcr
mov
out
(bad)
sub
js
bound
sub
jmp
lahf
ins
mov
call
(bad)
mov
ds
loop
fbld
sbb
lahf
fnsave
das
pop
push
rcr
aad
pop
dec
push
jo
cmp
inc
or
pop
cmp
adc
and
pop
inc
mov
add
inc
sbb
or
cld
mov
int
ds
or
xchg
sti
mov
hlt
sahf
int
jmp
pop
out
retf
ss
mov
pusha
jmp
jp
push
cld
popf
jb
mov
inc
xor
inc
add
(bad)
aas
push
sbb
and
test
aas
pop
sub
jbe
sub
mov
into
xor
inc
and
push
shr
(bad)
mov
mov
cwde
dec
add
ror
fstp
push
dec
sbb
pop
cdq
movs
idiv
push
int
inc
cmc
cdq
test
out
sbb
cld
xchg
ficomp
stc
inc
add
pop
sub
add
scas
icebp
mov
mov
ret
pop
dec
cs
not
cmps
mov
outs
adc
or
cmp
lahf
mov
sub
jmp
cmp
sahf
int3
lea
jae
pop
adc
push
in
icebp
xchg
(bad)
es
inc
pop
bound
or
dec
sbb
ss
mov
test
mov
add
das
push
adc
add
push
mov
scas
int
mov
and
pusha
xor
mov
mov
mov
js
cmp
push
push
xlat
adc
pop
sbb
xor
and
adc
inc
adc
out
jne
xchg
int3
lahf
stc
xchg
push
loopne
cmc
scas
test
add
retf
xchg
cli
nop
mov
aaa
inc
push
aaa
in
mov
xchg
inc
and
les
mov
test
mov
arpl
ins
sahf
jmp
push
test
mov
(bad)
fidiv
mov
and
imul
dec
adc
jo
sti
mov
fadd
sub
ins
and
cmps
xor
xchg
xchg
scas
fidiv
scas
in
mov
lds
(bad)
movs
jecxz
int
dec
jbe
xor
jp
adc
movs
out
(bad)
stos
(bad)
movs
scas
mov
sub
xor
jg
or
push
stos
repnz
add
dec
xor
push
inc
sub
pop
sub
movs
in
(bad)
movs
push
sbb
add
jnp
sub
sub
mov
cdq
mov
inc
pop
pop
call
loopne
div
pop
das
push
mov
inc
sub
jae
(bad)
call
and
es
popf
ficom
push
pop
pop
mul
sub
inc
sub
xor
push
adc
or
push
out
retf
lods
ror
out
test
jge
js
adc
mov
pop
inc
pop
jo
sub
data16
in
shl
retf
mov
mov
call
popa
add
int3
mov
inc
out
mov
stos
fild
mov
outs
ss
jae
cs
sar
leave
fadd
dec
xor
sub
pop
sbb
and
pop
dec
out
aam
ret
imul
or
in
stos
cdq
mov
aas
add
scas
stc
mov
xor
ss
dec
xor
sbb
jne
and
repz
fisub
jle
imul
jmp
or
cli
cdq
(bad)
test
mov
call
outs
fnstenv
in
call
mov
out
(bad)
cmc
sub
bound
loopne
xor
mov
pop
and
lods
ins
cmovns
mov
fwait
(bad)
cwde
or
in
test
pop
bswap
xchg
clc
mov
inc
lods
fcomp
out
mov
push
pop
push
in
lods
jmp
jno
cs
or
out
mov
add
jb
pop
call
std
xchg
fild
stos
dec
pop
pop
push
push
push
cmp
stc
fadd
mov
mov
push
les
xchg
(bad)
mov
jbe
test
xchg
addr16
xlat
movs
loope
mov
xchg
xchg
pop
(bad)
xchg
rcl
bndstx
inc
jecxz
neg
lahf
(bad)
mov
mov
pop
fsub
stos
jmp
cdq
cli
cwde
cmps
call
ret
test
push
ds
sbb
jns
push
xor
sub
pop
push
cli
mov
dec
out
lods
iret
sub
in
fisttp
xchg
fisttp
or
jne
gs
dec
and
je
inc
push
inc
and
push
pop
mov
hlt
cmps
in
enter
not
xlat
or
sub
aas
dec
(bad)
and
daa
inc
or
xor
xor
jo
ret
ins
jge
push
sbb
(bad)
ins
les
pushf
(bad)
mov
(bad)
push
loopne
clc
mov
lock
cmp
mov
xchg
shr
add
and
adc
imul
ret
mov
es
adc
outs
or
nop
leave
mov
pop
mov
jne
push
pop
dec
in
gs
adc
inc
cmp
cs
ss
out
das
push
push
aaa
inc
das
push
retf
xor
mov
aaa
outs
sub
dec
inc
or
ret
xlat
mov
mov
cmp
scas
in
lahf
mov
ror
cwde
jl
mov
xor
push
jnp
aaa
add
dec
in
ret
pushf
mov
test
xor
cmp
pop
sbb
sub
data16
sbb
(bad)
aad
std
cmp
dec
fcom
call
mov
rol
ret
cmp
cmp
xor
stc
inc
in
pop
ret
cwde
fild
adc
retf
add
(bad)
in
scas
scas
add
add
push
pop
push
dec
or
xor
cmp
push
cmp
pop
ds
cld
lahf
mov
bound
mov
ins
add
lock
fs
dec
xor
into
jg
push
adc
jge
sbb
push
cmp
mov
fistp
sysenter
loop
cli
mov
pop
sbb
lds
out
cmp
pop
(bad)
(bad)
(bad)
mov
adc
add
in
mov
mov
add
retf
frstor
push
mov
jecxz
xchg
hlt
mov
shr
aad
(bad)
into
xchg
pusha
adc
pop
or
dec
adc
jbe
pop
out
mov
push
sub
cmp
push
ds
icebp
pop
inc
cmp
adc
inc
adc
into
mov
mov
(bad)
out
stc
pusha
or
aas
loopne
mov
mov
cmp
into
xchg
aad
rcl
ja
jl
(bad)
sbb
dec
mov
push
push
jecxz
or
clc
mov
fwait
pop
sar
xlat
lods
icebp
lahf
(bad)
sub
jno
int3
ret
mov
mov
xor
dec
add
mov
inc
xor
and
push
adc
icebp
fwait
stc
test
out
cmps
stc
xchg
dec
rcl
sbb
lock
fsubr
push
jb
push
jp
push
mov
or
jecxz
repnz
(bad)
jge
das
imul
adc
add
rcl
leave
sahf
mov
icebp
mov
pop
mov
jno
mov
gs
sbb
jo
sub
and
push
adc
dec
pop
and
mov
iret
cwde
fisttp
mov
cld
clc
test
jo
pop
out
or
inc
xor
push
sbb
add
cmp
push
js
and
and
pop
bound
dec
cmp
stos
dec
sub
loope
(bad)
ins
jnp
imul
dec
or
jge
xor
dec
or
and
imul
dec
sbb
xchg
xchg
cmp
and
inc
or
mov
loop
clc
data16
push
cs
aad
in
(bad)
sahf
adc
xor
sbb
bound
sub
or
lock
sahf
mov
inc
in
retf
sahf
aad
sbb
cmp
pop
dec
adc
push
cmp
repnz
repnz
push
jge
int3
sbb
ja
iret
test
jae
and
icebp
cmp
repz
push
cmp
or
sub
push
out
xchg
pushf
in
stos
clc
push
lods
movs
cld
test
push
cmovs
push
jmp
js
(bad)
pop
daa
cli
rcr
in
mov
ret
pop
add
(bad)
pusha
lock
push
and
retf
mov
xor
in
mov
gs
mov
test
cs
mov
mov
sbb
out
and
push
pop
out
mov
enter
cli
mov
stos
cmps
call
ins
sbb
dec
sbb
outs
sub
ja
xchg
aam
loope
arpl
push
sbb
rcl
pop
add
xor
dec
adc
mov
mov
bound
scas
icebp
test
retf
rcr
sub
push
ins
pop
sbb
inc
or
pop
fisubr
push
jecxz
shl
sar
jnp
jae
arpl
outs
sub
xor
jae
pop
or
sub
or
lock
pop
push
and
dec
sbb
inc
and
bound
int3
pop
sub
dec
cmp
or
imul
xor
push
dec
popa
pop
jg
xor
and
add
push
pop
add
ret
fiadd
push
inc
or
xor
pop
sbb
enter
xor
cmp
push
(bad)
mov
cmp
xor
dec
mov
add
(bad)
cs
push
ins
mov
test
and
test
loope
ret
stos
rcl
out
(bad)
aam
popf
jns
bound
sub
push
cmp
add
test
adc
cmp
pop
jecxz
mov
lods
int
mov
mov
xchg
fstp
fdiv
and
imul
pop
cmp
jb
fsub
mov
mov
inc
push
push
ins
xor
push
cmp
jp
out
repnz
lahf
cmps
xchg
adc
inc
(bad)
adc
jge
push
push
ss
aaa
inc
mov
icebp
mov
mov
shr
mov
je
mov
xchg
iret
stos
clc
pop
cmp
ficomp
movs
movs
(bad)
mov
imul
jl
or
push
das
sbb
cmp
fimul
push
xor
out
lods
rol
xor
fild
mov
pop
cmp
push
push
cmp
out
lds
xor
clc
inc
push
push
push
add
outs
xor
push
mov
mov
xor
sub
ss
adc
loopne
xor
scas
mov
test
jp
mov
cwde
shr
and
(bad)
lods
fbld
cli
mov
add
retf
pop
xor
inc
or
inc
pop
add
push
xor
pop
outs
sub
outs
xor
div
cmp
imul
loope
pop
inc
out
adc
fisttp
mov
test
jmp
imul
mov
call
gs
(bad)
test
cwde
fnstcw
fs
xor
(bad)
xchg
imul
daa
inc
mov
pop
cmp
repnz
push
or
xor
jmp
sbb
fidiv
pusha
push
sub
imul
mov
(bad)
sub
mov
xchg
fisttp
jg
ins
and
gs
stos
repnz
sbb
dec
adc
xor
imul
pushf
dec
add
push
push
and
in
lds
pop
repnz
xchg
inc
(bad)
mov
data16
shl
cwde
ror
nop
shl
sbb
pop
sub
and
push
dec
xlat
cdq
lock
push
movs
loop
in
dec
frstor
push
in
je
xchg
aad
push
and
jl
jns
adc
and
cwde
adc
inc
cmc
cdq
enter
in
sbb
or
sti
fcom
xchg
push
sub
out
xlat
daa
addr16
call
mov
int3
mov
loope
adc
pop
jl
inc
in
fistp
gs
adc
cld
test
push
pop
and
sbb
jne
and
push
ja
pop
pop
sbb
and
sbb
mov
or
inc
arpl
sbb
or
push
or
jp
jbe
cmp
push
mov
jmp
mov
aaa
jge
ins
js
arpl
xchg
cmc
fs
pusha
and
mov
pop
cs
je
sub
gs
or
imul
loop
(bad)
imul
adc
jae
test
cdq
mov
ficomp
xlat
jae
je
xor
pop
cmp
(bad)
mov
(bad)
stos
loope
xchg
int
jecxz
push
pop
push
and
dec
and
fistp
into
lods
lock
mov
mov
or
jge
sub
ret
mov
xchg
rcl
ret
je
pop
adc
sub
mov
xor
sbb
and
jo
imul
push
cli
mov
xchg
lock
movs
test
mov
shr
loopne
int3
stos
retf
loop
sti
bound
je
dec
loope
push
or
lahf
iret
adc
(bad)
into
lods
iret
ja
push
loop
(bad)
pop
ja
pop
pop
out
test
pop
cmp
sbb
add
or
lock
cmp
adc
push
out
jne
clc
mov
mov
mov
loop
and
lock
nop
fbstp
cdq
fidivr
adc
dec
data16
add
jp
mov
les
test
mov
mov
in
leave
jns
jmp
rol
nop
inc
add
inc
rcr
pop
sbb
mov
stos
cmc
sub
pop
xor
(bad)
ds
lods
popa
repz
ins
in
and
xor
sub
in
inc
and
cmp
div
xrelease
retf
test
stos
in
cmps
retf
add
(bad)
fstp
fist
add
push
pop
push
icebp
popa
nop
push
dec
pop
ins
aas
and
aam
scas
int3
(bad)
leave
dec
dec
lds
jmp
cmp
sbb
cmp
sbb
xchg
std
mov
push
aas
and
addr16
add
(bad)
or
sub
push
ds
cmp
ins
cmp
outs
add
imul
add
push
(bad)
aas
js
pop
ret
aas
(bad)
out
retf
mov
mov
xchg
mov
add
data16
call
dec
adc
dec
mov
and
cs
out
outs
stos
retf
call
jle
push
aaa
pop
test
data16
enter
popa
iret
xchg
into
test
bound
inc
cmp
jbe
pushw
inc
adc
pop
inc
or
mov
inc
mov
faddp
mov
lods
ret
cmp
pop
pop
rcl
jp
jno
test
xchg
in
pop
mov
mov
dec
mov
stos
loopne
mov
xchg
rcl
loop
push
push
adc
aaa
aam
xchg
fcomp
shl
ja
add
xor
retf
jb
test
aaa
pop
jnp
sub
cmps
fild
dec
jne
lods
not
mov
in
retf
mov
pop
and
std
lods
int
jmp
push
test
dec
cld
pop
pop
sbb
jl
dec
sub
test
mov
arpl
jl
jmp
iret
std
xchg
shl
and
jnp
aad
in
mov
fidivr
mov
call
mov
xchg
(bad)
mov
popf
rol
push
cld
pop
ret
(bad)
(bad)
cmp
sub
xor
mov
ficomp
pusha
push
(bad)
pop
mov
rep
fldenv
adc
mov
xor
and
mov
rcr
ss
push
jnp
jne
sbb
push
xchg
jne
push
add
xchg
adc
dec
lods
movs
jecxz
fimul
imul
jne
and
dec
in
das
push
adc
cld
adc
mov
out
div
ss
(bad)
inc
and
test
inc
aas
repz
pop
push
cmp
or
outs
jmp
push
inc
add
adc
leave
mov
xchg
mov
mov
adc
cld
shr
pop
out
(bad)
sub
adc
in
stos
fimul
xor
mov
pop
add
inc
(bad)
cmp
imul
inc
pavgw
jle
adc
push
lock
jbe
dec
push
pop
or
push
inc
add
cmps
std
mov
(bad)
xchg
out
pop
cmp
and
mov
sub
jb
retf
mov
mov
xchg
ds
mov
ror
add
data16
push
or
dec
jl
(bad)
aad
push
mov
cmp
sub
hlt
and
out
jmp
jb
mov
es
call
out
pop
shl
dec
addr16
pop
adc
nop
jnp
in
push
movs
cmp
mov
mov
(bad)
fiadd
jae
fisubr
jg
test
add
sub
movs
aas
pop
adc
dec
and
fisttp
test
sbb
mov
rcl
sbb
(bad)
mov
or
mov
push
movs
cmp
(bad)
sti
cmp
mov
into
mov
mov
dec
mov
fld
inc
movs
(bad)
aaa
and
add
icebp
es
push
sub
shl
lahf
or
xchg
fs
js
fmul
push
pop
add
mov
loop
ja
(bad)
cld
adc
and
das
mov
add
popa
stos
ja
rcl
retf
bound
aas
out
xor
pop
xchg
push
xor
es
jo
mov
test
xor
fst
mov
pop
rcr
mov
lock
adc
ror
loope
mov
lock
jno
xchg
dec
push
pushf
and
sub
pop
out
pop
mov
stc
mov
or
ror
mov
rcl
dec
retf
icebp
and
outs
lea
daa
(bad)
das
inc
lods
add
loop
push
push
xchg
push
ret
jp
cmps
adc
imul
pop
fucomi
inc
jp
loop
fldenv
mov
add
ja
or
mov
xor
test
outs
ret
add
sti
out
retf
call
mov
xchg
push
sti
mov
mov
loop
sbb
pop
leave
xchg
aas
push
adc
xor
jmp
mov
or
cmp
loop
loop
inc
push
int3
mov
adc
and
sub
sbb
call
push
jmp
jl
mov
push
(bad)
mov
das
repnz
add
or
daa
psrld
cmp
adc
popa
lods
mov
jmp
fstp
and
shl
mov
mov
mov
sub
jmp
lock
xchg
inc
fwait
xchg
lahf
xchg
push
jmp
out
pop
inc
test
retf
popa
fs
xchg
pop
jae
add
inc
jecxz
push
ds
mov
fldlg2
lods
out
in
jle
push
cmps
dec
pop
inc
push
in
scas
adc
cmp
into
enter
add
retf
lds
popa
icebp
or
mov
out
mov
dec
xor
dec
inc
pusha
dec
ret
out
adc
repnz
mov
push
sbb
pop
sahf
pop
cld
xchg
rcl
jns
repnz
mov
pop
cmps
mov
in
xchg
sti
cli
in
inc
aam
lods
in
inc
xchg
inc
pushf
loop
jge
sub
clc
(bad)
sub
cmc
sub
mov
das
add
mov
out
sub
mov
sub
pop
push
push
inc
or
sbb
dec
dec
stos
jmp
in
dec
mov
cwde
(bad)
lea
not
sbb
mov
add
cli
inc
lock
dec
push
push
inc
fdivr
xchg
(bad)
mov
jns
xchg
loop
movs
enter
mov
rcr
cld
adc
hlt
mov
ds
dec
and
jmp
jne
out
inc
sub
jo
into
test
mov
scas
and
out
adc
sub
in
add
cdq
jmp
jp
(bad)
mov
es
xchg
inc
daa
and
(bad)
dec
fdivr
ret
push
jno
push
push
or
jecxz
retf
fsub
sbb
imul
cmp
(bad)
xchg
sbb
(bad)
pop
or
push
sahf
lahf
xor
rcr
mov
shl
arpl
ds
sbb
in
repz
loopne
mov
cmp
xor
dec
add
fist
mov
pop
cmp
(bad)
test
sbb
jg
mov
mov
outs
movhps
inc
pusha
ins
movs
push
sbb
in
es
js
add
xchg
outs
inc
(bad)
aaa
sbb
out
or
mov
(bad)
jmp
dec
aaa
out
inc
dec
and
shr
push
push
iret
imul
movs
into
jecxz
push
ins
pop
movs
mov
inc
in
jg
std
cmp
push
pop
dec
push
movs
ds
push
fsubrp
arpl
movs
ret
xchg
(bad)
into
leave
imul
inc
(bad)
movs
aam
repnz
pop
push
(bad)
jmp
int
jae
out
jecxz
jne
idiv
mov
retf
cmp
sahf
inc
push
shl
add
mov
xchg
push
stos
adc
jns
fst
mov
ja
mov
add
dec
loop
mov
adc
(bad)
push
cmp
xchg
hlt
cmps
cmp
push
cmp
cld
jno
das
inc
sbb
rcr
mov
mov
scas
sbb
movs
adc
scas
pop
adc
mov
jo
and
xlat
add
fild
sbb
dec
add
call
inc
add
dec
pop
inc
mov
cmc
jno
imul
es
add
inc
frstor
and
(bad)
pop
push
add
je
loop
test
out
aas
in
sub
cmp
jp
cmp
fild
mov
outs
cwde
jno
xchg
sahf
pop
cmps
das
aad
scas
test
frstor
ins
fsub
and
inc
cdq
push
in
lds
jae
loope
fidivr
push
add
cdq
icebp
dec
sub
lods
imul
sub
mov
into
in
jl
imul
cmp
or
dec
inc
dec
lea
and
mov
mov
jp
mov
int
sar
adc
push
outs
test
sub
repz
mov
in
mov
in
fcomp
jb
xchg
(bad)
cli
inc
lock
cs
xor
lods
test
mov
add
sub
inc
xor
add
ret
scas
push
adc
add
ja
hlt
mov
mov
push
push
push
xor
fadd
jl
pop
adc
jp
int3
push
adc
jmp
dec
pop
test
mov
xchg
daa
dec
push
cmps
ds
(bad)
daa
adc
xor
dec
in
push
idiv
popa
add
push
lds
popf
xchg
(bad)
test
mov
icebp
retf
push
or
dec
fisubr
fst
(bad)
mov
imul
in
adc
cmp
adc
xor
pop
push
je
movs
cmp
test
mov
das
and
xchg
adc
push
not
mov
(bad)
punpcklbw
xchg
jg
push
ss
pop
test
pop
sub
arpl
mov
push
sahf
jne
inc
fsubr
mov
xor
and
sub
inc
gs
push
and
daa
int
sbb
and
iret
popa
fsub
cwde
aam
mov
jecxz
adc
inc
xor
bound
add
int3
gs
mov
inc
xchg
cwde
or
xchg
add
cmp
stos
jbe
hlt
and
call
jp
jo
sub
dec
outs
or
dec
push
sub
jle
repz
sahf
xlat
out
mov
cs
imul
jo
aad
sub
cmps
and
cmps
ins
sbb
nop
cwde
and
xor
xchg
xor
cdq
shl
and
xor
jmp
push
in
mov
xchg
jge
fidivr
adc
xchg
es
cmp
jl
psraw
in
jmp
fsub
push
fcmovu
or
out
jg
or
dec
lods
mov
aam
in
push
xchg
and
retf
or
jmp
mov
or
shr
adc
pop
sbb
xor
pop
jl
fisttp
dec
scas
test
ss
jle
lahf
mov
jbe
imul
pop
std
sar
xor
test
arpl
(bad)
dec
lods
and
arpl
add
cmps
mov
pop
(bad)
int3
out
xor
or
cmps
dec
out
jmp
jp
fiadd
xchg
push
pop
(bad)
call
test
push
mov
ud0
out
jle
bound
leave
mov
das
call
nop
jge
lahf
inc
and
inc
sbb
cli
mov
fldenv
jne
pop
mov
iret
gs
popf
sub
xor
fnstcw
movs
scas
int
bound
retf
add
test
shr
daa
cmp
lods
sub
stos
mov
push
test
es
iret
xchg
inc
jb
out
in
lock
xlat
xchg
push
sti
inc
arpl
jnp
mov
pop
retf
fscale
xchg
jo
es
mov
daa
fistp
(bad)
(bad)
and
mov
(bad)
aam
push
mov
jge
mov
and
icebp
adc
and
fstp
cmc
dec
jo
mov
in
retf
xor
cmp
shr
mov
call
jge
call
mov
mov
dec
jae
pop
div
and
sub
div
fnsave
cmp
or
sub
loope
(bad)
fcomp
jae
lods
out
adc
adc
fwait
mov
sub
push
ds
addr16
jb
sbb
xchg
push
scas
inc
or
stos
inc
cmp
and
cmps
mov
fwait
mov
outs
jl
enter
(bad)
in
fstp
test
push
push
inc
jge
jge
cmp
xchg
loope
or
or
and
sahf
xor
fxch
(bad)
mov
mov
mov
(bad)
(bad)
leave
aam
mov
call
mov
jle
out
push
cdq
dec
dec
jb
and
inc
mov
sub
fstp
and
movs
pusha
ror
jp
(bad)
jg
bound
jno
lods
dec
jae
mov
xchg
das
xor
mov
mov
add
xor
jae
(bad)
jmp
add
inc
cmp
ror
lahf
inc
push
push
mov
mov
fld
ds
sub
xchg
xchg
aaa
jbe
(bad)
mov
mov
popf
adc
(bad)
int3
cmp
aam
mov
jecxz
ins
mov
fld
std
mov
sbb
daa
cs
mov
lods
sar
mov
fdivp
jae
clc
mov
stos
ins
adc
(bad)
ins
adc
sub
mov
out
jge
sbb
mov
ret
test
ror
nop
imul
xchg
inc
fmul
jbe
mov
mov
pop
nop
dec
movs
stc
push
mov
sub
xor
cdq
popf
add
scas
adc
dec
ret
dec
pop
test
xor
outs
push
cld
xor
scas
jle
push
bound
loope
arpl
or
mov
out
jne
fnstenv
cmp
inc
dec
clc
add
mov
and
and
faddp
stos
fimul
pop
dec
push
call
cwde
cdq
and
scas
add
and
mov
ds
repnz
push
adc
cmps
call
mov
sub
jbe
jmp
test
jb
ret
enter
enter
daa
in
mov
ins
sub
movs
retf
cmp
shr
mov
dec
cs
in
xchg
lods
mov
inc
xchg
(bad)
cmps
mov
cdq
inc
pop
mov
enter
mov
and
ss
cs
pop
xchg
and
mov
mov
and
ret
bound
lods
and
icebp
aad
pop
cmp
ja
mov
xchg
jo
fcmovnbe
les
sbb
lahf
stos
fbld
daa
mov
xchg
repz
adc
jno
test
and
xchg
or
stos
or
clc
ja
inc
pop
aas
fsubrp
mov
jb
xchg
push
aad
adc
push
mov
scas
mov
push
mul
aad
pop
inc
xor
pop
not
push
mov
sbb
cmp
call
or
jle
lahf
(bad)
adc
js
retf
retf
jge
fmulp
sahf
(bad)
enter
ss
fsubr
mov
arpl
pushf
jmp
mov
mov
std
mov
call
and
or
pop
mov
jmp
scas
xchg
add
push
pushf
aam
inc
and
ss
push
ror
jecxz
not
cmp
pop
popa
jecxz
enter
push
lods
dec
in
in
gs
les
shr
xor
pop
jecxz
sub
lock
stos
mov
mov
out
repz
mov
test
ficomp
push
jne
dec
in
adc
cmp
dec
add
into
xchg
cli
sub
pop
aam
push
or
jbe
cld
aas
test
in
jno
cmp
ja
push
xor
add
hlt
pop
xchg
in
mov
out
out
fdiv
jl
or
aam
loopne
dec
xor
es
pop
sti
inc
ja
pop
mov
popf
out
mov
jae
add
test
dec
rdtsc
int3
jbe
dec
jecxz
xchg
cmc
loope
mov
js
adc
in
mov
stc
in
or
out
lods
dec
daa
dec
push
push
sub
dec
daa
loopne
rcl
xchg
add
pop
mov
das
push
and
in
fs
or
adc
mov
pushf
and
loop
xchg
adc
push
cwde
scas
or
sub
push
shl
push
lods
in
fs
xor
das
(bad)
xchg
xor
sbb
mov
shl
lds
sbb
out
sahf
push
ds
xor
push
mov
stos
(bad)
das
lahf
sub
loope
out
jg
mov
outs
xor
pop
pop
bound
and
jbe
retf
jg
xlat
nop
sub
fcomp
sbb
in
add
leave
jbe
test
outs
mov
das
cmp
xor
into
cdq
mov
pop
fs
add
cmp
pusha
stc
(bad)
retf
mov
add
pop
pop
jbe
cmp
lea
and
retf
jae
outs
je
cmp
idiv
and
jp
push
pop
and
fidiv
xchg
xchg
ds
loopne
fdiv
mov
dec
push
mov
push
inc
in
out
sub
lds
push
adc
lahf
mov
sub
rcl
mov
mov
popf
xchg
xchg
sub
cmp
(bad)
out
loop
mov
jmp
inc
in
mov
mov
ins
dec
sub
fstp
xchg
jmp
mov
sbb
stos
mov
pop
movs
xchg
mov
mov
pusha
(bad)
sub
div
movs
mov
daa
inc
adc
aas
adc
(bad)
enter
pop
xchg
iret
data16
cmp
fisubr
mov
sar
sti
xchg
sub
dec
sub
add
xor
scas
and
fcomp
and
jle
sbb
sub
inc
in
clc
shl
xor
and
pop
rol
outs
addr16
lods
mov
retf
xchg
call
sahf
mov
test
cmps
dec
les
mov
ret
rcr
out
dec
fisub
(bad)
pop
push
pop
call
push
fmul
enter
test
daa
icebp
out
cmc
adc
xor
or
or
or
out
lods
mov
mov
in
xchg
mov
and
loop
into
and
and
call
imul
sbb
(bad)
les
(bad)
fild
je
sahf
sar
pop
xor
or
pop
aaa
add
retf
xchg
and
test
jb
je
inc
add
into
les
pop
cmc
mov
mov
jb
cmps
fst
std
xchg
push
sar
jo
push
pop
jb
add
add
(bad)
call
push
iret
xor
iret
pop
jb
fistp
pop
shr
daa
cld
mov
and
add
pop
mov
std
inc
inc
hlt
mov
push
mov
xor
sahf
lea
jmp
std
push
xchg
mov
xchg
and
sahf
out
adc
xchg
js
fld
cs
aad
dec
cs
mov
aad
adc
pop
or
jmp
lock
and
sub
call
in
nop
lods
sub
leave
sub
inc
into
repz
dec
call
imul
jns
test
add
push
cmps
dec
xchg
adc
or
loopne
sbb
xor
out
repnz
mov
xchg
pop
in
bound
and
sbb
xchg
mov
clc
shl
and
stos
fwait
inc
ror
or
sbb
add
loopne
(bad)
add
lds
mov
loop
hlt
sub
adc
cmp
push
jmp
xchg
dec
and
sbb
bnd
cld
pop
xor
retf
clc
(bad)
(bad)
aad
push
ins
jne
add
and
sbb
sub
xor
sbb
lock
jns
sbb
lock
adc
dec
cmp
jmp
xor
inc
outs
cmp
fcmove
and
popa
cli
out
clc
cwde
cmp
jb
push
nop
in
js
imul
aaa
daa
fnstcw
aas
fst
call
push
pop
stos
(bad)
jl
movs
pop
fdivr
push
daa
shl
dec
fwait
dec
jne
or
rol
sub
mov
test
or
mov
cmp
mov
mov
cwde
jle
xchg
stos
mov
mov
xchg
xchg
ins
aad
shl
popa
inc
neg
fsubr
mov
inc
mov
stc
xchg
sub
stos
lods
fimul
fnstcw
xchg
movs
push
push
jp
test
mov
mov
xchg
(bad)
int
adc
mov
mov
adc
fmulp
ins
addr16
iret
ds
in
out
hlt
nop
mov
inc
dec
xor
lea
jecxz
jle
stos
sub
dec
test
rol
push
adc
xchg
jg
mov
daa
pop
pop
dec
xchg
test
ror
jecxz
in
sub
push
lea
mov
fwait
popa
shr
(bad)
mov
stos
js
cli
sub
add
enter
cmc
jecxz
sbb
scas
jno
lea
(bad)
pusha
aam
into
ins
mov
aaa
sub
push
sub
cmp
sbb
pushf
sar
aas
dec
test
in
mov
and
lods
idiv
retf
and
xor
cs
sahf
push
cmps
cmc
or
popa
sub
mov
mov
push
mov
jbe
pop
add
cmps
sbb
pop
popf
adc
add
dec
punpckldq
jmp
call
adc
shr
(bad)
pop
cwde
mov
sub
stc
cli
daa
xchg
jno
fwait
arpl
sub
mov
std
mov
add
push
mov
push
or
rcr
jmp
(bad)
repz
call
pop
das
add
mov
sub
mov
inc
or
xchg
pop
ins
xchg
sbb
pop
mov
lods
enter
aam
and
inc
adc
popa
pop
jmp
movs
sbb
adc
add
dec
test
sahf
movs
xchg
aaa
pop
sbb
js
cmps
pop
stc
mov
imul
rcl
daa
pop
out
movs
jb
sub
arpl
nop
pusha
xor
dec
pusha
add
jmp
push
(bad)
xchg
inc
retf
ins
das
rol
mov
jns
cmps
fldln2
cwde
mov
daa
mov
ret
push
mov
call
push
jge
jnp
fist
enter
shl
and
das
les
push
test
fcom
xlat
inc
adc
jns
adc
test
and
cmp
mov
call
shl
jmp
out
push
ret
aad
cmp
and
mov
gs
dec
adc
loopne
pop
add
xchg
push
add
(bad)
mov
mov
(bad)
fidiv
(bad)
stos
fistp
lods
cli
gs
mov
rcr
add
adc
leave
(bad)
(bad)
stos
aad
or
and
or
push
add
shl
push
pop
das
jb
mov
call
sbb
cmp
push
sbb
repz
gs
mov
arpl
cmp
sub
loopne
add
inc
xor
xor
ins
push
inc
add
jl
mov
cli
xchg
mov
pop
ds
add
fsubr
mov
xchg
cmps
outs
mov
scas
repnz
fld
ret
cdq
sbb
cmp
iret
lods
clc
mov
or
push
and
push
jecxz
fiadd
out
(bad)
ficomp
dec
xchg
out
iret
das
movs
xlat
(bad)
sar
out
mov
xor
dec
push
add
jge
push
adc
les
idiv
ss
(bad)
cwde
sar
iret
adc
mov
mov
or
xor
pxor
inc
sbb
pop
pop
jne
pop
test
jb
xchg
fisttp
das
jb
pop
mov
dec
mov
aas
jl
cld
pop
in
xchg
mov
cmp
out
lods
fsub
jo
push
loopne
fwait
pop
sbb
jecxz
dec
push
bound
add
shl
sbb
js
jle
push
daa
jg
adc
add
shl
add
push
pop
mov
jmp
pusha
or
jg
sub
aam
xchg
retf
fisubr
test
(bad)
std
and
jo
dec
or
imul
and
jmp
jb
jmp
sti
bound
xchg
mov
xor
xchg
mov
scas
test
pop
or
in
(bad)
call
lods
inc
mov
inc
aas
pop
ret
push
sbb
js
lods
out
popf
iret
cmp
ins
(bad)
pushf
(bad)
test
fld
lods
ficomp
lds
xchg
mov
adc
adc
xor
aaa
ss
cs
rcl
xchg
fstp
cmp
xor
and
ficomp
adc
inc
or
inc
sub
sub
ja
out
(bad)
mov
jnp
mov
xchg
mov
mov
fsubr
and
add
cdq
add
inc
push
es
int3
lds
jno
push
jb
push
add
mov
push
pop
push
sub
dec
shl
nop
shl
aad
add
xchg
fild
imul
sbb
jge
push
adc
dec
cmc
test
mov
ins
adc
mov
pop
ror
pop
jb
das
in
cdq
fimul
retf
mov
xchg
mov
out
mov
aam
inc
push
inc
adc
or
inc
jmp
sub
cmp
push
add
ins
test
leave
outs
add
mov
cmps
aam
in
mov
adc
scas
int
shl
add
iret
shl
(bad)
mov
inc
in
mov
push
js
mov
sub
xchg
aam
idiv
xchg
pushf
retf
xor
cmc
gs
pushf
movs
stos
sbb
aaa
jp
pushf
lods
fimul
xchg
mov
sub
in
xor
xchg
cmc
xchg
mov
inc
xor
sub
inc
sti
dec
jmp
inc
pop
xor
cmp
push
push
sub
push
mov
mov
xchg
push
push
cmp
outs
cmp
fst
jbe
icebp
and
dec
pop
pop
fdivr
sti
pusha
push
adc
and
inc
daa
xchg
cmps
rcl
sbb
push
imul
dec
andnps
cld
mov
test
jmp
mov
rcr
bound
jge
dec
or
sbb
jbe
lods
fild
xchg
push
iret
mov
add
gs
xor
dec
and
cs
pop
mov
mov
pop
adc
cmp
push
adc
arpl
or
into
call
mov
mov
cmps
in
leave
repz
and
xchg
retf
mov
out
sti
test
add
xlat
test
mov
sti
mov
xchg
out
(bad)
mov
popf
fild
popa
or
(bad)
in
mov
push
sbb
add
ins
cs
add
aaa
push
pop
jbe
adc
sub
das
dec
cs
ja
imul
or
sub
idiv
push
aaa
push
sbb
retf
fwait
stos
or
jbe
daa
bound
push
mov
xchg
xchg
js
or
ror
pop
xchg
xor
out
inc
pop
jge
push
adc
in
in
stos
repz
mov
xchg
cmp
pop
scas
or
adc
aas
inc
or
dec
loope
fild
xchg
ret
mov
aad
les
mov
and
jo
mov
movs
out
inc
ret
nop
gs
adc
aas
pusha
sub
cs
loop
movs
cld
mov
xchg
dec
sub
lock
mov
push
add
iret
sub
gs
in
lods
mov
pusha
lods
lahf
out
test
or
push
adc
fistp
shr
sbb
rol
jl
cmp
dec
adc
and
mov
pop
out
addr16
mov
fwait
js
cmp
idiv
adc
loopne
add
retf
sub
dec
adc
push
sbb
dec
xor
and
cmps
(bad)
xchg
aam
mov
inc
jmp
out
and
ds
ins
sub
dec
or
gs
cmp
outs
pop
dec
or
cmp
xchg
rcl
test
ds
adc
dec
mov
(bad)
jl
pop
push
jge
jno
jl
je
pop
sub
mov
clc
popa
cs
cmps
out
mov
hlt
outs
or
and
pop
inc
add
out
or
jnp
js
ret
mov
xchg
jp
push
and
(bad)
pop
add
in
mov
cwde
fist
leave
ins
pop
sub
fs
add
arpl
sub
clc
sub
push
pop
jae
es
xor
and
dec
lods
jecxz
ror
rcl
jl
ins
das
jge
es
push
sbb
pop
jne
push
cmp
mov
mov
add
int
mov
inc
sbb
(bad)
and
mov
rcl
scas
loopne
fld
icebp
cwde
inc
mov
test
leave
inc
in
mov
push
push
adc
add
(bad)
bound
add
jmp
repz
mov
call
int3
mov
lea
call
retf
push
jmp
jno
mov
inc
out
and
and
adc
pop
and
adc
gs
inc
ror
xor
or
mov
cmps
(bad)
arpl
pop
mov
dec
pop
sbb
pop
sub
inc
add
(bad)
out
lock
sbb
(bad)
mov
mov
jnp
pop
cld
xchg
ficomp
lds
(bad)
push
push
add
sub
cmp
mov
xchg
mov
inc
mov
aas
push
dec
pop
pop
mov
xor
cmps
in
enter
movs
mov
or
stos
clc
xchg
mov
xchg
cmps
scas
fidiv
dec
sub
or
cmc
mov
pop
pop
push
dec
stos
xchg
mov
cld
gs
stos
in
mov
mov
xor
sar
push
sbb
and
daa
fs
pushf
stc
xor
daa
and
jp
pop
pop
jo
scas
repz
into
cmp
je
repz
pop
stos
mov
mov
jle
cmp
pop
std
mov
shl
push
out
xor
push
mov
xchg
fld
mov
pusha
adc
and
fidivr
xor
fcomp
xor
int
ror
pop
sub
mov
xlat
xchg
into
lods
movs
out
imul
sti
sub
xor
dec
or
xor
jp
push
or
and
inc
in
jg
dec
pop
and
add
dec
jmp
es
cdq
cmc
sub
xchg
xlat
mov
mov
jnp
dec
repz
and
xor
loopne
ror
jno
ror
add
lock
fdivr
mov
xchg
dec
adc
jns
dec
sbb
dec
adc
sub
loope
call
inc
xor
pusha
aad
in
leave
cmp
fs
stos
in
cmps
shl
push
push
push
or
repz
int
inc
cs
adc
xor
push
sub
lock
mov
jbe
and
cmovs
ins
sbb
dec
adc
test
lods
xchg
(bad)
xchg
aam
into
(bad)
sar
and
push
push
push
mov
lods
(bad)
fiadd
inc
and
cmp
xchg
fisubr
je
push
hlt
lods
out
(bad)
ret
mov
mov
mov
mov
push
pop
repz
push
pop
sbb
push
or
mov
xchg
(bad)
movs
in
call
mov
mov
or
std
(bad)
retf
pop
ds
jnp
ficom
adc
dec
sub
(bad)
(bad)
pushf
(bad)
mov
and
iret
mov
mov
inc
sub
inc
or
sub
lods
fstp
dec
ss
mov
or
push
mov
(bad)
or
sbb
jp
fld
scas
hlt
aad
add
les
fldcw
pop
pop
ins
cmp
mul
cmc
mov
mov
test
or
mov
stos
leave
call
inc
aaa
jo
inc
pop
je
ja
addr16
pop
xor
push
xor
gs
inc
in
mov
pop
iret
ds
js
add
push
adc
adc
dec
xor
repz
ins
cs
lods
push
adc
adc
jns
pop
mov
int
stc
jb
inc
adc
fdiv
and
out
or
push
cmp
outs
sbb
sub
in
dec
sub
pop
push
add
inc
and
and
ins
mov
movs
std
lahf
fdivr
push
xor
push
mov
fcom
daa
push
push
dec
pop
pop
cmp
pushf
rcl
(bad)
mov
pop
pop
in
push
inc
jmp
ins
scas
lds
call
stos
imul
stos
jbe
add
scas
in
rcl
or
lahf
scas
int3
xor
lahf
fiadd
pop
sbb
pop
sub
lahf
fdiv
jne
sbb
ret
mov
xchg
push
pop
ins
sub
push
inc
push
jle
push
dec
sub
add
sub
hlt
test
mov
sbb
cmp
mov
(bad)
mov
cmp
cld
add
jb
bound
and
mov
sahf
scas
int
fld
inc
sbb
adc
lahf
cli
mov
repz
mov
out
mov
sbb
or
mov
jae
inc
loopne
add
xor
mov
xor
bound
cs
sbb
cld
jbe
inc
in
cli
je
mov
mov
arpl
retf
aad
xor
jmp
pop
jecxz
repnz
je
fs
cmp
cld
cwde
fild
pop
iret
mov
mov
cdq
mov
fs
inc
icebp
xchg
mov
popf
xlat
mov
daa
hlt
lods
cmc
cmps
in
leave
mov
pop
pop
cmp
dec
push
inc
or
push
xor
adc
dec
ds
fdivr
jmp
add
cmps
sbb
push
push
push
ss
das
imul
cmp
pop
div
mov
jmp
cdq
ficom
xor
(bad)
into
pushf
fisub
test
repnz
add
sbb
add
dec
or
mov
loop
int3
(bad)
int3
(bad)
aad
popf
mov
int3
push
rol
cmps
cmc
mov
or
idiv
adc
imul
mov
out
movs
iret
xor
imul
outs
push
ret
and
fild
out
mov
pop
mov
lods
retf
data16
inc
or
mov
xchg
mov
xor
pop
outs
and
retf
inc
aad
cmp
ins
ret
imul
and
inc
or
lods
popf
fidivr
ja
push
or
xchg
loopne
rcl
fdiv
mov
mov
rcr
pop
cmp
or
or
inc
xlat
data16
sbb
push
and
leave
mov
stos
lods
lock
dec
xor
and
push
adc
adc
sbb
pop
adc
adc
sbb
in
inc
or
out
fdivr
out
not
inc
xor
fsub
inc
push
shl
adc
adc
test
repnz
xchg
jg
(bad)
in
mov
jg
arpl
push
dec
or
dec
or
xor
and
xor
aaa
pop
jl
and
or
pop
jmp
xor
les
in
ret
push
push
jecxz
repnz
inc
or
scas
loope
gs
int
repz
mov
fwait
mov
ja
mov
lds
and
sbb
or
fisttp
ret
jbe
or
ja
push
loope
repz
les
lock
pushf
mov
and
bound
sub
push
or
inc
add
xlat
cmp
sbb
pop
inc
sub
cmps
cld
mov
idiv
xor
push
lods
pop
push
push
add
outs
xchg
jp
push
push
dec
(bad)
in
mov
jns
retf
xchg
dec
scas
ret
pop
xor
and
inc
pushf
sar
sbb
sub
ja
and
push
jecxz
push
into
xchg
aad
jo
push
cmp
iret
mov
jno
pop
inc
sub
shr
mov
retf
push
pop
sbb
and
imul
bound
pop
das
push
fsub
mov
xchg
mov
scas
cli
mov
imul
fadd
ret
cmp
mov
adc
dec
xchg
ret
mov
mov
movs
xchg
int
fiadd
bound
dec
test
in
pop
or
mov
mov
jo
div
jg
das
jno
es
jae
push
sbb
inc
xor
cwde
mov
cmps
ror
and
mov
mov
retf
xchg
fild
sti
mov
mov
fs
or
xchg
ror
sub
push
arpl
minps
and
pop
pop
aas
ins
das
or
idiv
shr
sahf
fnstsw
jnp
push
in
mov
inc
daa
dec
pop
and
xchg
ror
in
icebp
add
push
jp
sub
add
in
pusha
cs
mov
mov
daa
push
fs
loopne
fiadd
retf
xchg
fisttp
pop
pop
fnstsw
test
movs
xlat
pop
mov
push
pop
or
jecxz
movs
jmp
shl
fld
cli
mov
pop
xor
push
aas
cmps
in
out
and
adc
jge
xor
pop
xchg
lahf
sar
add
jae
je
inc
sbb
cmp
jg
mov
push
pop
sbb
scas
call
aas
addr16
or
dec
sbb
pop
pop
inc
adc
es
adc
inc
add
pop
sub
jo
jns
outs
or
cmp
xor
fstp
(bad)
out
lahf
scas
shl
xchg
jne
pop
cmp
mov
(bad)
fsubr
in
rcr
arpl
push
adc
mov
hlt
sub
jnp
ja
aaa
jno
inc
add
or
retf
mov
add
gs
sub
or
cmp
xchg
fild
adc
sbb
mov
adc
inc
jmp
fdiv
add
cmovle
jle
es
xchg
jb
jae
sbb
inc
or
fmul
bound
dec
or
sub
sub
popa
and
jae
xchg
cli
mov
add
scas
hlt
test
pop
adc
jmp
fs
popa
(bad)
sub
jmp
icebp
mov
jl
out
push
ss
ret
test
push
jg
pop
in
loop
data16
dec
or
test
xchg
shl
or
push
push
jne
les
jl
dec
push
cmp
jp
push
cmp
data16
lds
cli
popa
and
adc
mov
xchg
shl
lock
stos
call
sbb
dec
mov
jo
and
dec
push
pop
xor
data16
inc
or
arpl
xchg
pop
sbb
sub
int3
lods
jecxz
iret
add
lods
(bad)
mov
mov
jmp
xchg
or
movs
scas
scas
lds
fild
sub
mov
xlat
xchg
int3
jbe
addr16
push
clc
mov
enter
in
rcl
mov
bound
pop
or
(bad)
cmp
ficomp
inc
adc
mov
pop
dec
cmovae
inc
loopne
(bad)
mov
test
mov
dec
iret
call
jecxz
pop
pop
cmp
sbb
test
mov
aaa
jge
push
push
push
push
jg
add
clc
dec
out
int3
xchg
mov
(bad)
mov
(bad)
fstp
push
or
and
fisub
adc
push
and
imul
outs
and
pop
fistp
xor
mov
xchg
sar
push
adc
push
mov
mov
idiv
test
sbb
dec
pop
lds
outs
xor
ret
and
add
and
aaa
jo
dec
movs
jge
mov
mov
aam
loope
in
mov
push
int3
outs
sub
pop
push
push
sub
xlat
xchg
shl
mov
xchg
call
xor
jge
add
jne
sahf
cdq
mov
xchg
loop
cld
(bad)
mov
sahf
fld
popa
cs
jmp
fimul
retf
jnp
arpl
mov
popf
iret
pop
mov
jg
cld
mov
in
xlat
stos
gs
rol
xchg
lock
and
dec
stc
scas
dec
mov
mov
xor
daa
jge
mov
bound
fs
cli
xchg
fcomp
gs
inc
out
xor
jmp
imul
sub
mov
or
rcl
and
add
sub
stc
or
es
sub
mov
add
jns
push
push
sub
fld
lds
inc
cmp
out
add
pop
dec
mov
mov
add
cs
dec
adc
loop
jg
bound
mov
pusha
or
cmp
dec
mov
fnsave
dec
jmp
lds
loopne
sub
popf
out
mov
stos
outs
mov
xchg
fmul
adc
je
push
addr16
stos
call
sbb
lods
lds
loop
out
mov
add
arpl
or
jg
data16
add
in
lea
fstp
pop
mul
lds
arpl
dec
and
lock
(bad)
in
mov
test
adc
jae
(bad)
iret
lods
in
push
es
js
pop
push
dec
icebp
icebp
popf
in
mov
mov
adc
js
cmp
and
jbe
arpl
(bad)
lahf
fmul
mov
jns
adc
pop
jnp
pop
add
pop
sub
push
in
inc
fcom
fwait
clc
fs
loopne
inc
aas
js
xlat
out
pushf
les
jae
inc
shr
sub
and
jle
cmp
repz
dec
or
dec
jecxz
lds
push
add
sbb
int
int
sti
int3
xchg
fld
outs
aas
mov
mul
cld
and
movs
loopne
icebp
add
arpl
and
(bad)
fsub
fdivr
out
add
imul
push
xor
pop
cmps
cld
lds
iret
mov
lods
fcomp
dec
scas
fisttp
repnz
dec
or
int
movs
(bad)
movs
jecxz
std
inc
cmp
test
lds
rcl
les
gs
push
sbb
std
mov
mov
cwde
test
xchg
dec
mov
mov
(bad)
xchg
fnstsw
push
add
jno
dec
sub
test
sbb
lea
fcom
fcomp
or
ins
stos
clc
fwait
clc
push
push
test
inc
xor
inc
scas
in
add
ror
daa
sbb
dec
shl
mov
(bad)
(bad)
aaa
inc
mov
movs
imul
mov
cs
imul
mov
imul
push
and
jno
in
sub
fst
inc
sbb
fdiv
or
js
cmps
fidiv
sub
lock
sbb
retf
xchg
pushf
iret
sub
xchg
inc
or
inc
adc
call
sub
jo
inc
movs
(bad)
jo
(bad)
xchg
rol
sbb
scas
je
lds
not
jns
and
ins
movs
mul
ret
stos
in
lahf
std
pop
sbb
xchg
inc
add
movs
(bad)
cmp
ror
inc
mov
xor
clc
pop
push
out
sahf
push
or
cmps
mov
dec
sbb
scas
mov
pop
sbb
xchg
lods
out
cmp
mov
mov
iret
jge
enter
pop
pop
pop
dec
mov
pushf
bound
rcr
test
jle
inc
and
jbe
jecxz
fistp
ja
adc
nop
stc
inc
fld
stos
in
mov
pop
sub
mov
(bad)
fld
arpl
sbb
jns
in
cmp
push
and
ja
(bad)
cdq
mov
mov
sbb
fwait
inc
add
call
mov
test
retf
push
push
pop
les
gs
cs
repnz
fadd
pushf
dec
pop
clc
fwait
inc
sub
push
jmp
imul
add
dec
cmp
pop
inc
mov
fadd
jmp
cmp
mov
sbb
sar
or
pop
sbb
inc
add
mov
push
adc
dec
sti
test
adc
dec
or
iret
outs
sub
pop
mov
dec
aad
popf
ror
adc
pause
mov
sbb
jne
minps
stos
(bad)
out
and
movs
(bad)
jle
and
xchg
sbb
out
sub
in
xor
inc
push
xchg
xor
xchg
pushw
int3
xchg
out
mov
add
fisttp
add
lods
push
or
push
daa
and
lahf
je
push
mov
mov
inc
or
in
jno
cld
movs
xchg
shl
mov
cmp
es
aad
arpl
mov
sub
nop
shl
outs
mov
sub
pop
retf
cli
ss
repnz
add
mov
addr16
xchg
dec
push
push
pop
pop
pop
movs
(bad)
xor
mov
xor
nop
dec
cmp
cmp
xchg
fcom
dec
adc
leave
and
test
jle
mov
lds
movs
int3
cmp
shl
xor
(bad)
popf
lahf
in
push
daa
loope
mov
xchg
sbb
je
int3
dec
or
mov
or
in
pop
or
push
mov
xchg
and
mov
jg
mov
out
mov
pop
add
fs
scas
push
add
stos
dec
or
mov
int
nop
sar
pop
mov
cmp
rcl
call
push
mov
sbb
es
rcl
jle
ret
sbb
pushf
cmc
push
push
cmc
xchg
jbe
repnz
jns
out
sub
or
ins
cmps
in
adc
call
sahf
push
pop
into
xchg
add
test
and
lock
aas
sbb
enter
mov
iret
mov
mov
or
out
and
lahf
jbe
in
jno
jecxz
jnp
(bad)
lahf
jbe
add
mov
xor
data16
mov
repnz
ins
push
or
sbb
imul
jnp
adc
push
es
scas
data16
push
into
sub
or
mov
mov
sbb
mov
iret
cmps
xchg
(bad)
aas
pop
mov
push
scas
ret
dec
or
xchg
loope
jg
cld
and
(bad)
pop
cmp
mov
jae
enter
adc
imul
imul
jl
shl
xchg
mov
sub
adc
mov
stos
stc
xor
cdq
dec
push
sbb
inc
rol
xchg
imul
dec
fistp
push
dec
add
mov
mov
fsub
aad
xchg
lds
push
hlt
mov
shl
(bad)
aam
add
fwait
leave
aas
pop
mov
add
out
pop
sbb
adc
jg
or
leave
mov
popa
or
outs
mov
xor
mov
add
adc
adc
and
mov
push
xor
cmps
les
mov
popa
test
xor
jge
lock
pmaddwd
and
orps
nop
mov
push
pop
(bad)
out
xchg
cli
dec
pslld
inc
add
fwait
call
aam
jl
test
push
cmp
dec
mov
out
push
push
inc
hlt
inc
sub
dec
xchg
and
retf
aam
jno
in
jle
cmp
pop
sbb
(bad)
xchg
ret
rcl
imul
xchg
ret
ss
mov
xchg
shr
clc
mov
int
inc
add
cmps
(bad)
cld
dec
push
into
mov
pop
jne
jns
jmp
jecxz
jb
in
push
add
add
ret
nop
fstp
hlt
mov
adc
(bad)
xchg
mov
pop
dec
mov
lds
hlt
mov
out
inc
sbb
push
mov
fnstsw
stc
mov
test
cld
pop
ret
frstor
ins
push
push
fimul
mov
sti
xor
mov
mov
jne
or
jmp
push
mov
lahf
push
mov
bound
inc
es
aad
addr16
int
mov
daa
jg
cld
sahf
std
sub
mov
ins
psubb
sahf
in
push
and
movs
(bad)
xchg
xchg
frstor
push
mov
inc
fld
inc
sbb
xchg
mov
pop
outs
fistp
sub
cdq
mov
rol
xor
mov
sub
ja
sar
enter
daa
jg
mov
push
out
ins
das
in
inc
add
jae
or
mov
dec
push
cmp
mov
in
jp
rcl
daa
push
or
imul
mov
div
mov
pop
jnp
clc
push
and
inc
add
and
fistp
add
push
or
movs
inc
sbb
lds
fadd
adc
and
mov
jg
add
jecxz
jno
les
js
aam
popa
mov
and
push
rol
pop
(bad)
mov
mov
mov
mov
mov
sti
or
xchg
jbe
adc
pusha
mov
data16
sbb
and
add
cmp
(bad)
aas
push
fistp
rol
cmps
in
lods
inc
or
popf
mov
scas
sbb
sub
push
lods
lds
or
pop
shl
retf
icebp
push
add
ror
push
test
dec
sbb
cmps
jae
loope
ins
sbb
xchg
xchg
shl
cmps
xchg
jmp
ins
mov
aad
inc
mov
scas
cld
mov
ins
push
call
mov
cwde
(bad)
xlat
daa
je
mov
push
dec
out
xor
cld
aaa
je
clc
daa
jne
ret
xor
lock
cmp
jge
loop
or
sahf
rcl
movs
out
rcr
addr16
push
xor
mov
cdq
rcl
dec
retf
adc
call
stos
retf
(bad)
mov
out
lods
push
lock
xchg
shl
or
clc
aaa
je
pop
iret
popf
fistp
movs
mov
iret
and
in
out
dec
cmp
push
mov
call
xchg
aam
dec
ret
aaa
repz
in
jle
sbb
mov
stos
jbe
ret
enter
jmp
je
adc
out
xor
xor
scas
jnp
jp
and
ficomp
sub
lock
mov
cmp
data16
lds
dec
mov
or
in
addr16
inc
mov
and
clc
and
les
adc
dec
mov
mov
mov
cs
scas
in
inc
or
push
lds
loope
mov
push
or
pushf
mov
jg
fadd
sbb
fcomp
fs
stos
mov
cmp
mov
idiv
addr16
cmp
push
aam
fs
test
lds
dec
or
jb
push
pop
jge
movs
sub
out
popf
ja
adc
call
bound
xor
sbb
xor
xchg
iret
add
mov
ds
hlt
mov
fisttp
add
cmc
sahf
in
dec
cmp
int
lds
cld
scas
nop
repz
rol
pop
ficomp
fidivr
gs
stc
mov
cmp
and
ret
inc
add
aas
jmp
xchg
call
out
push
dec
sub
push
nop
rol
pop
sbb
dec
mov
push
pop
fld
repnz
and
mov
(bad)
jmp
jae
pushf
fwait
ret
and
int3
aas
push
rol
xor
cmps
int3
mov
outs
sbb
lods
addr16
push
xor
inc
mov
in
or
inc
lock
scas
in
and
push
mov
sub
test
scas
int3
add
and
mov
div
cmp
in
cmp
ret
push
cli
test
adc
repz
adc
daa
inc
cli
xchg
mov
push
ins
(bad)
xchg
xchg
repz
add
pop
into
mov
(bad)
daa
fcom
pop
push
and
jo
mov
(bad)
mov
movs
add
xor
and
cmc
jno
add
inc
xor
jp
xchg
mov
cmp
popf
movs
aad
pop
cmps
in
imul
pop
movs
out
xor
jb
mov
clc
mov
jb
cli
ja
aaa
fs
jmp
outs
cmc
test
dec
scas
cld
das
dec
icebp
cwde
xchg
aad
push
mov
xor
push
and
stos
push
repz
mov
movs
jecxz
xchg
pop
add
cmps
jno
sbb
dec
loope
mov
push
and
ins
fistp
imul
sub
mov
xor
mov
lds
mov
add
dec
fdiv
jge
int3
scas
arpl
lds
mov
pushf
iret
cmp
pop
rcr
ret
and
dec
mov
sahf
movs
mov
xor
sbb
cs
mov
dec
or
or
out
mov
mov
pop
ja
repnz
in
mov
loopne
or
cmp
inc
mov
and
sar
jle
ret
and
ror
out
dec
add
pop
(bad)
xchg
arpl
inc
add
inc
leave
mov
imul
sub
xchg
pushf
(bad)
jl
loope
movs
loop
das
les
(bad)
mov
enter
xlat
test
push
mov
mov
mov
out
lods
mul
mov
adc
add
mov
in
into
add
mov
lods
(bad)
jge
or
xchg
out
sub
sbb
push
rol
add
dec
into
mov
sub
cld
dec
or
dec
pop
in
bound
push
push
idiv
call
xor
addr16
mov
fisttp
in
xchg
shl
aam
add
dec
cmc
mov
xchg
lock
je
test
imul
adc
push
(bad)
mov
(bad)
push
xor
pop
mov
es
stos
fmul
jp
mov
lock
jne
rol
arpl
ins
sti
mov
rol
mov
ret
popa
sub
pop
(bad)
xchg
jl
jmp
mov
push
or
ss
cwde
pusha
adc
outs
ret
adc
xchg
rcl
data16
mov
jb
sbb
lods
mov
aaa
inc
xlat
movs
push
jmp
ss
nop
inc
and
mov
xchg
mov
sub
test
jmp
clc
call
loop
(bad)
jle
lods
xchg
in
ins
jmp
cld
add
fld
push
cs
jecxz
popa
rol
enter
lds
in
and
add
mov
data16
cwde
dec
das
div
in
ja
in
arpl
add
push
mov
add
cmp
mov
rcr
dec
ficomp
cmp
xor
pop
mov
pop
sub
add
mov
adc
mov
xor
mov
cli
mov
aad
xchg
loop
les
pop
or
les
imul
mov
xor
adc
in
test
mov
fbstp
fld
into
adc
push
xor
loopne
jbe
sub
xchg
jg
push
jge
int
pop
add
mul
push
add
cmps
mov
stos
je
cmp
inc
or
lods
mov
xchg
(bad)
(bad)
dec
adc
scas
in
xchg
dec
and
dec
and
outs
mov
add
shl
mov
jecxz
add
test
das
jecxz
mov
sbb
pop
fisubr
dec
adc
sub
xor
div
mov
(bad)
xor
shr
mov
sub
inc
dec
retf
xchg
jge
sbb
retf
not
nop
xlat
packsswb
sahf
jp
out
lods
scas
loope
pop
cmc
scas
jnp
or
cld
and
mov
aad
les
jmp
xchg
mov
cmps
bound
sbb
stos
fadd
inc
mov
sbb
in
add
ins
aam
xchg
rol
stos
test
pop
sbb
pop
cmp
stos
xchg
push
ja
pushf
jnp
lds
xchg
fimul
push
lods
jmp
dec
enter
or
div
jne
mov
sbb
mov
fsub
inc
mov
jne
mov
aaa
das
pop
mov
(bad)
pop
adc
stos
sbb
jb
ror
mov
and
addr16
pop
psadbw
lods
iret
cmovl
mov
repnz
lods
jmp
and
lock
pop
mov
mov
add
mov
sbb
xchg
sbb
in
jle
call
js
mov
fld
adc
std
jno
adc
ret
fadd
inc
stos
(bad)
jb
or
in
cmp
dec
adc
or
les
jp
jmp
rol
push
push
lods
into
and
fistp
std
mov
stos
jmp
xlat
cwde
jns
in
mov
leave
xor
inc
sbb
inc
mov
stos
sahf
cld
inc
add
and
ds
pushf
xchg
aad
pop
adc
xchg
sbb
sbb
xchg
movs
loop
fimul
xor
push
iret
popf
imul
pop
(bad)
xchg
jne
jmp
cmc
and
mov
(bad)
mov
mov
data16
xchg
mov
dec
push
cmp
xchg
and
int3
sahf
outs
or
nop
mov
push
je
mov
add
dec
mov
cwde
inc
xor
dec
xchg
aad
xor
sub
push
xchg
jae
and
(bad)
cmp
mov
std
and
xchg
inc
add
add
push
fiadd
jno
xchg
test
pop
adc
mov
not
movs
ror
(bad)
xchg
popf
(bad)
pop
xor
(bad)
imul
fmul
jecxz
dec
or
pop
adc
mov
add
xor
cdq
fisubr
jbe
xchg
inc
sbb
jmp
inc
lods
out
xor
retf
cmp
lods
addr16
xchg
add
mov
xor
mov
adc
mov
xchg
dec
sbb
test
call
or
or
dec
mov
pop
mov
(bad)
dec
adc
mov
jecxz
mov
cdq
test
push
push
adc
lahf
fdivr
pop
mov
and
hlt
outs
add
stos
cwde
jmp
add
je
icebp
mov
add
rol
cli
inc
add
sub
ret
cmps
les
popa
leave
stos
mov
lea
gs
xchg
shr
movs
jmp
lds
sbb
sbb
jo
mov
sub
mov
lds
or
loop
sub
mov
fld
ret
sbb
mov
mov
xor
out
(bad)
stc
stos
test
arpl
(bad)
mov
loopne
jg
add
xor
pushf
xchg
sar
sti
mov
and
push
fimul
push
xchg
xlat
push
sub
fadd
outs
(bad)
mov
mov
(bad)
and
test
or
in
dec
add
push
retf
lock
lahf
je
lds
mov
push
mov
mov
inc
push
sbb
nop
jne
call
push
cmp
call
add
leave
nop
rcl
(bad)
movs
fidiv
add
jmp
push
(bad)
mov
retf
mov
add
movs
addr16
inc
jecxz
mov
sub
sbb
cli
pop
xor
jbe
xchg
imul
ja
mov
sbb
cmps
aam
pop
out
lods
mov
imul
mov
es
retf
and
out
mov
cmc
dec
sub
jl
test
in
scas
inc
and
mov
or
mov
sahf
(bad)
iret
dec
pop
xor
adc
or
(bad)
mov
mov
fild
shl
inc
xlat
mov
xor
das
pusha
cld
mov
out
add
(bad)
call
icebp
push
adc
jbe
mov
ret
sub
repz
adc
scas
int
add
stos
ins
sub
xchg
dec
cmp
sbb
add
dec
sub
inc
iret
test
mov
and
call
and
jo
or
pop
shl
ret
ret
es
fwait
jne
xor
lea
aaa
outs
fmul
xor
rol
xchg
add
pop
div
pop
sbb
mov
push
dec
movs
div
and
lahf
out
and
and
ins
icebp
xchg
ja
iret
mov
dec
sbb
aad
es
add
inc
adc
call
mov
sub
mov
adc
mov
aad
cmp
jbe
mov
(bad)
xchg
jno
cmp
lds
jno
xchg
popa
cs
mov
dec
das
loop
fist
test
mul
inc
mov
xchg
loop
push
push
mov
push
and
mov
clc
and
rcl
outs
cmps
loope
fisub
push
into
xchg
mov
inc
sbb
mov
ror
(bad)
leave
mov
imul
mov
mov
rcl
mov
push
or
dec
cli
cdq
outs
sub
jne
mov
in
mov
mul
pop
outs
ficomp
or
mov
mov
(bad)
jb
lock
dec
sub
movs
pop
inc
xor
imul
pushf
cmc
dec
or
or
mov
push
ins
leave
mov
inc
push
cmp
ror
sbb
jle
push
pop
ficomp
loop
mov
retf
mov
mov
dec
cmp
imul
sub
sahf
std
sub
mov
add
inc
cli
mov
mov
cmps
xchg
div
sbb
lods
lahf
repz
or
push
mov
out
gs
cs
std
cmps
fwait
enter
mov
leave
dec
ds
push
(bad)
xchg
mov
jl
push
push
clc
call
arpl
sub
mov
stos
xchg
(bad)
das
jne
xchg
inc
daa
div
mov
cmp
fwait
push
add
aad
dec
xlat
add
xchg
push
add
add
dec
(bad)
add
stc
or
aaa
ret
lahf
inc
ficomp
aad
scas
dec
mov
xchg
inc
rcr
dec
mov
mov
push
adc
les
push
mov
jae
pop
fs
push
jae
pop
rol
call
push
loop
adc
pop
add
sbb
pop
cmp
out
cmp
sub
and
stc
and
(bad)
cs
pop
push
retf
mov
sbb
sbb
cmp
xor
in
adc
repz
sbb
add
(bad)
pop
cmps
jae
ss
std
push
jecxz
fsub
push
repnz
loope
icebp
jb
and
push
and
retf
or
push
daa
push
push
lock
jmp
loope
ins
shr
int3
dec
mov
ret
jns
sahf
std
jbe
sub
sti
cmp
outs
out
sbb
sbb
cmc
and
or
in
loopne
aam
sub
hlt
push
xchg
inc
fdiv
sbb
loopne
or
xlat
aaa
pop
aas
ss
sub
sbb
pop
aad
pop
retf
pop
jecxz
adc
dec
movs
xchg
ins
aam
jbe
dec
mov
mov
test
iret
xor
mov
hlt
pop
mov
adc
pop
cmps
inc
add
xor
lods
pushf
outs
int3
dec
mov
mov
test
mov
fild
pop
retf
dec
jns
adc
cmc
adc
in
ror
loop
mov
cmc
and
ret
dec
movs
(bad)
add
loope
mov
fisubr
sub
inc
rol
mov
fsubr
(bad)
pop
mov
pop
mul
loop
mov
cs
dec
aam
in
cld
and
adc
cmp
out
mov
and
inc
mov
inc
aad
mov
xchg
call
gs
adc
push
mov
outs
shr
out
jmp
je
jb
pop
shl
(bad)
ds
push
mov
xchg
inc
xchg
data16
cld
inc
ror
fwait
pusha
ret
xor
imul
and
das
inc
mov
fist
push
retf
ss
xor
sub
sbb
inc
mov
mov
stos
jne
xchg
xchg
call
xchg
mov
pop
retf
xor
add
sub
adc
and
and
pop
aad
test
pop
adc
ror
or
push
stos
enter
sbb
cmp
nop
add
les
push
call
jns
sahf
xor
int3
push
aam
cli
cmp
xchg
sahf
dec
test
mov
fmul
push
(bad)
and
dec
xlat
add
or
sar
daa
sbb
pop
stos
xchg
popf
inc
sub
ret
xchg
mov
mov
daa
sbb
retf
push
repnz
or
dec
retf
and
pop
lea
repnz
jno
pusha
mov
inc
int3
dec
test
inc
fstp
or
dec
stos
nop
inc
mov
scas
lods
cmps
sbb
xchg
inc
leave
pop
or
out
les
in
sub
inc
add
pop
ret
dec
leave
xor
cmp
lods
call
enterw
fdivr
int
mov
je
xor
mov
lods
mov
je
shl
inc
fist
test
add
pop
xchg
icebp
dec
sar
cld
or
test
nop
or
sub
mov
pop
mov
data16
and
add
and
dec
mov
push
sbb
pop
stos
je
xor
or
dec
mov
mov
jae
push
loope
fdiv
aad
inc
frstor
sbb
push
movs
xor
xchg
jle
movs
mov
out
out
and
push
or
adc
ds
jp
nop
ins
mov
xchg
ins
(bad)
je
mov
loopne
jmp
lock
ins
fmul
xchg
movs
mov
add
fld
cdq
pusha
mov
arpl
pop
rcl
mov
rol
pusha
int3
aas
and
das
or
jae
js
push
lds
dec
mov
shl
mov
pop
xchg
sahf
jne
adc
dec
mov
loop
mov
xchg
test
cmp
rol
jo
sub
mov
mov
mov
mov
jbe
xchg
in
jp
jl
(bad)
xlat
cmp
jg
addr16
push
cli
add
pop
stc
jns
and
sti
outs
jecxz
call
or
sub
push
ror
ja
add
repnz
xor
dec
ficomp
test
mov
loopne
cmps
jae
jg
pop
fadd
jl
cmp
jge
push
mov
(bad)
pushf
dec
mov
and
sbb
jns
js
jge
and
inc
add
lock
test
test
push
mov
leave
cmp
sbb
add
sbb
push
out
xchg
fist
pop
sbb
lds
cdq
inc
lods
imul
push
repz
std
cmp
add
loop
mov
fwait
push
ror
cs
sti
or
pop
mov
fisubr
adc
jmp
les
out
mov
push
sbb
or
mov
xchg
xchg
jae
jb
and
daa
add
push
adc
add
int3
ds
repz
mov
xor
add
adc
and
mov
imul
mov
movs
xchg
jno
ins
fmul
sti
cmp
push
cli
cs
pop
(bad)
and
inc
iret
xor
push
mov
mov
sub
push
enter
add
push
sbb
sub
xor
cmc
comiss
push
std
sub
les
(bad)
jne
ss
mov
into
or
popa
mov
inc
mov
fcomp
lods
mov
jnp
inc
retf
out
or
mov
rol
pop
xchg
clc
pop
adc
stc
and
sub
loop
mov
mov
mov
cmps
xchg
xchg
arpl
ret
sub
loopne
cmp
hlt
sub
out
aas
sbb
and
push
mov
inc
sar
hlt
add
pop
iret
cmp
mov
stos
cwde
sar
cmp
sub
xchg
inc
shr
sbb
xor
and
ds
(bad)
js
xchg
jns
xor
je
ds
into
dec
fidivr
cmp
sub
cmp
xchg
mov
mov
mov
sbb
xchg
mov
pop
xchg
cmps
sub
and
(bad)
or
daa
sbb
pop
pop
(bad)
imul
push
(bad)
nop
fisttp
test
cmps
jg
call
das
pusha
xlat
cmp
push
fstp
and
es
aas
or
sub
icebp
jl
arpl
pop
sbb
scas
lods
fcom
and
repz
int3
cmp
ret
dec
sar
loop
sub
sub
dec
movs
inc
scas
xchg
xchg
xchg
js
test
cmps
arpl
jns
movs
mov
ins
into
dec
jmp
mov
mov
mov
pop
mov
add
or
mov
mov
arpl
mov
mov
mov
outs
fiadd
adc
and
inc
mov
(bad)
dec
mov
mov
jge
outs
lea
sub
adc
test
jns
jns
push
repz
pop
ret
sub
cs
stos
js
fdivr
ret
jns
sbb
lods
cmp
mov
pop
sbb
push
rcl
pushf
arpl
mov
les
bound
(bad)
cmp
fild
sbb
push
mov
mov
inc
mov
ficomp
pop
lods
inc
lods
fidivr
cmp
das
adc
inc
mov
popf
xor
in
dec
lods
ja
popf
outs
cmps
mov
mov
pop
std
and
or
ss
push
push
lock
pushf
popf
xchg
cmp
and
xor
push
out
or
jno
data16
fwait
jb
xchg
popa
mov
inc
and
arpl
sar
out
xor
jns
jns
lds
add
adc
cmc
sub
int3
cmp
fs
jbe
pop
enter
mov
mov
scas
fisttp
call
cs
scas
data16
lock
mov
add
jp
call
lea
xor
out
mov
movs
lahf
imul
pop
(bad)
adc
sub
dec
test
mov
jno
dec
mov
fnstenv
pusha
repz
cdq
(bad)
into
add
pop
cs
lea
xor
adc
pop
sti
pop
mov
ds
push
inc
xchg
cwde
imul
ins
mov
aad
cli
cwde
rcl
in
test
sar
xor
loopne
and
ret
and
push
fistp
mov
inc
(bad)
inc
mov
jnp
gs
lods
mov
xchg
jge
xor
int3
dec
(bad)
sti
mov
mov
lds
sbb
rol
push
sbb
inc
out
lods
xchg
js
cdq
dec
test
call
sub
aaa
div
out
push
scas
inc
movs
jne
sub
or
mov
push
movs
push
js
mov
ins
in
push
ret
and
pop
fistp
rcl
jle
pop
mov
sbb
cmp
xor
dec
mov
inc
int3
ds
cmp
push
ud0
xor
or
dec
xlat
xor
and
sar
xlat
jnp
xchg
jns
xchg
ja
inc
les
pop
adc
add
ds
ret
imul
lds
stos
xchg
fwait
mov
inc
stos
xor
test
cwde
mov
stc
daa
push
lds
sbb
dec
(bad)
and
dec
mov
jle
xchg
fidivr
arpl
cs
mov
ins
cmps
jle
std
dec
mov
fmul
call
pop
xchg
jne
xor
push
ficomp
sub
ja
ins
int3
pop
test
shl
fisub
adc
jl
imul
fmul
pop
call
out
test
jne
fs
jno
mov
sbb
(bad)
pop
shl
out
jno
and
daa
sbb
xor
jp
sub
in
push
loop
add
add
adc
(bad)
sbb
or
in
or
fs
fld
aam
sbb
mov
jle
call
or
cmps
lahf
push
adc
(bad)
push
sbb
cmc
cmp
xlat
sub
cmp
aas
sbb
sub
or
daa
xor
dec
int3
jp
call
jg
out
into
jns
jno
fwait
mov
popf
mov
mov
add
inc
lock
hlt
inc
(bad)
push
cld
ins
out
popf
stos
scas
or
jnp
sahf
xchg
mov
fimul
fwait
xchg
test
rcl
addr16
sub
add
pop
and
push
or
aaa
and
pop
adc
or
and
femms
push
loope
mov
cmps
mov
mov
mov
dec
out
icebp
ja
jp
push
pop
fsub
loope
test
jmp
dec
stos
popf
data16
cwde
cdq
jnp
outs
fbstp
in
pop
lea
cmp
pop
pop
sti
push
retf
aaa
adc
pop
mov
push
std
and
sub
aad
adc
sub
xor
sub
mov
push
jmp
sub
das
call
loopne
mov
jmp
xchg
inc
lds
int3
push
xchg
jo
ret
or
or
(bad)
pop
mov
sub
mov
shl
(bad)
pop
lods
mov
inc
add
pop
sbb
test
cmp
pop
cmps
mov
inc
cmps
popa
fstp
jmp
stc
and
in
imul
je
mov
call
and
enter
inc
into
pop
xor
mov
cmp
sar
adc
inc
mov
jb
jmp
sbb
push
and
sub
sti
dec
mov
je
or
push
sbb
pop
ficom
int
loop
cmp
in
xchg
jne
mov
mov
fsubr
leave
aaa
adc
xor
cmp
imul
pop
cld
push
fcom
call
nop
xchg
inc
lds
jmp
int3
pop
sub
mov
dec
xchg
jo
test
lds
loope
add
and
cmp
mov
jne
xor
stc
or
pop
stos
imul
(bad)
out
cmp
call
adc
cmp
test
sbb
xor
cmp
pop
mov
retf
jns
or
sub
dec
fcomp
xchg
popf
into
xor
push
jmp
mov
adc
mov
out
movs
imul
adc
sub
add
jb
dec
mov
push
fadd
cld
inc
shr
adc
pop
mov
mov
xchg
add
push
adc
(bad)
jmp
mov
and
jnp
fdivr
sub
pop
add
outs
int
sbb
or
cmps
jp
mov
dec
mov
inc
mov
dec
retf
sub
or
pop
fldcw
sbb
push
fdivr
sti
and
add
hlt
das
push
(bad)
fiadd
stc
pop
out
pop
cld
pop
mov
xchg
add
shl
mov
sar
inc
movs
cwde
inc
test
fldcw
or
sbb
xor
clc
jae
ja
pushf
lea
jns
sub
xor
loop
mov
iret
pop
xor
(bad)
jp
psubb
push
repz
xchg
nop
fbstp
arpl
outs
fisttp
out
sub
ds
push
sar
xor
cmc
cmps
mov
mov
dec
mov
std
sub
cmp
push
adc
mov
sbb
gs
dec
test
mov
pushf
dec
ror
icebp
dec
movs
arpl
scas
lea
xchg
pusha
mov
jne
aaa
push
cmc
add
push
xchg
inc
mov
cli
js
jp
mov
call
aaa
cmc
and
xchg
call
lds
mov
sbb
jmp
(bad)
dec
mov
inc
mov
sub
pop
mov
mov
jae
fbstp
out
hlt
xor
in
pop
in
adc
ins
ficomp
fwait
inc
mov
sbb
mov
add
movs
xchg
loope
jbe
xchg
cwde
xlat
outs
and
xor
mov
add
repnz
dec
(bad)
xor
cmp
pop
in
scas
data16
dec
push
jg
hlt
dec
cmp
imul
jno
add
cmp
sbb
stos
mov
(bad)
push
push
or
and
cmp
movs
cwde
cli
mov
and
icebp
ss
test
fcomp
(bad)
popf
imul
or
inc
push
sbb
(bad)
mov
loopne
ins
add
mov
pop
sbb
stos
(bad)
loope
jg
mov
aad
mov
pop
cmps
hlt
pop
cmp
mov
cli
mov
mov
outs
fdivr
pop
sbb
sub
shl
sub
loop
add
inc
loope
scas
jmp
xlat
mov
retf
xchg
rcl
jb
adc
leave
mov
or
(bad)
sub
call
xor
dec
sbb
pop
int
jp
sti
mov
into
(bad)
fiadd
movs
int3
sub
mov
stos
lahf
fdivr
push
lock
mov
in
dec
adc
mov
ret
mov
ret
test
lds
repnz
mov
test
push
adc
in
mov
xor
mov
xchg
cmps
bound
lds
int3
mov
jge
(bad)
mov
in
test
das
jl
int
adc
cmp
ret
nop
enter
mov
cmc
xchg
jg
retf
xchg
mov
xchg
mov
cmp
rcl
jo
(bad)
xchg
mov
and
xchg
out
fmul
in
pusha
xor
jp
into
ss
mov
jle
out
and
cdq
mov
int
rcr
movs
ins
ds
mov
jo
adc
mov
jg
aad
jg
cs
mov
fmul
fnstcw
fstp
fadd
fistp
rcr
mov
mov
sti
daa
fs
leave
jp
leave
stos
xchg
ror
addr16
jno
lods
aad
ja
clc
mov
or
je
out
xchg
fild
pop
mov
and
aaa
je
mov
push
adc
stos
inc
add
mov
fcomp
gs
cmp
push
ret
loop
sbb
push
ror
test
pop
pop
and
cmp
mov
add
xchg
cmc
dec
or
xchg
bound
stc
stos
cmps
les
ins
fadd
data16
pop
test
pop
sbb
not
das
push
xlat
xchg
jne
push
dec
jmp
js
into
lods
fbld
imul
sbb
pop
and
and
les
std
xchg
nop
xlat
xor
rcl
lea
and
pushf
dec
dec
mov
cwde
lahf
fcom
sub
test
cld
pop
sbb
pop
out
sub
jl
stc
push
and
jl
or
inc
retf
cld
or
out
ins
sub
stos
mov
add
lods
push
or
mov
jns
adc
popf
fidivr
retf
fisubr
mov
inc
jmp
pusha
add
sub
mov
dec
push
into
lods
loop
pushf
fild
dec
mov
es
scas
call
out
jg
mov
jmp
fdivr
gs
mov
shl
add
imul
push
and
lahf
dec
cmp
push
test
icebp
cs
loopne
sub
push
mov
xor
lods
cmc
sub
push
movs
mul
inc
stos
ret
cmp
mov
sbb
test
cld
cmp
mov
sti
and
add
pop
pop
jmp
pop
jmp
mov
sub
jns
(bad)
cmp
xchg
out
push
adc
xchg
in
mov
xor
cmp
test
or
test
and
stos
nop
shl
imul
outs
sbb
ins
rep
push
push
inc
sbb
and
mul
add
loop
pop
lds
lods
fisub
popa
movs
out
gs
dec
mov
sbb
mov
and
cmps
les
(bad)
mov
in
mov
mov
mov
dec
push
sbb
push
mov
pop
or
dec
movs
loop
pop
adc
mov
fwait
addr16
cmc
cmps
nop
repz
call
inc
es
pop
repnz
add
jns
xchg
xchg
(bad)
sub
shr
pop
xchg
into
cs
push
pop
scas
std
sub
inc
(bad)
out
pushf
fistp
ret
test
adc
mov
daa
and
mov
xchg
ja
call
pushf
fild
sbb
inc
mov
xchg
cmp
mov
les
or
sbb
retf
cmp
mov
mov
jbe
outs
sbb
and
pop
dec
add
pusha
mov
in
pop
adc
mov
cmp
call
and
pop
pop
pop
fadd
shr
and
push
mov
call
cmp
fldcw
rcr
(bad)
cmp
xor
jle
cld
(bad)
ficom
inc
mov
push
addr16
mov
jle
add
xchg
push
cmp
cmp
dec
or
push
mov
pop
and
scas
fild
ins
or
mov
dec
sub
imul
imul
lea
outs
xchg
shl
mov
in
pusha
mov
sub
pop
mov
pusha
les
aam
arpl
call
jno
mov
ss
inc
test
and
repz
sbb
push
test
mov
cld
jle
loop
popa
adc
xchg
mov
sub
mov
ret
ror
fidivr
jle
mov
xchg
es
in
xor
cmp
aaa
jecxz
(bad)
aad
addr16
lods
mov
push
adc
shl
cmovs
mov
sub
dec
aam
bound
push
dec
stos
loope
or
(bad)
leave
mov
sub
les
pop
loop
or
test
adc
jns
mov
inc
add
pop
push
inc
pop
les
push
ret
(bad)
xor
push
out
mov
addr16
jp
mov
push
movs
arpl
sti
mov
stc
nop
jl
adc
mov
stos
and
addr16
js
inc
add
add
add
cmps
ins
ds
mov
adc
out
xor
lea
and
xor
or
or
dec
popf
xchg
cmc
mov
call
es
xchg
out
mov
ja
sub
leave
cdq
js
pop
adc
sti
test
jne
jmp
bound
lock
mov
in
mov
loop
xchg
cli
jne
les
pop
push
pop
adc
icebp
xor
fcomp
js
pop
icebp
mov
and
(bad)
push
cmp
shl
test
out
mov
loop
aam
or
add
inc
dec
test
jg
hlt
mov
and
clc
xchg
mov
popf
(bad)
in
push
xchg
sar
inc
aaa
jle
(bad)
int
in
mov
add
cmp
jecxz
cli
jge
ss
pop
cmp
mov
arpl
es
in
sbb
ins
xor
pop
fwait
ja
pop
test
cmp
adc
sub
pop
or
pop
or
mov
mov
inc
in
cdq
(bad)
retf
pop
imul
jp
dec
cmp
pop
pop
out
xchg
loop
stos
jae
je
adc
out
jbe
push
jmp
dec
adc
push
and
int
ret
jnp
and
cld
xor
push
dec
sub
cmp
sar
es
mov
mov
shr
xor
repnz
jecxz
ror
(bad)
lods
ret
stos
repnz
rcl
sahf
repz
push
adc
pop
pop
fadd
mov
xor
cvtpi2ps
iret
stos
cli
cmp
imul
into
push
fisub
mov
add
xchg
cdq
stos
shl
(bad)
ins
scas
int
ficom
push
adc
xchg
xchg
shl
pop
test
mov
mov
pusha
lods
cmc
mov
js
pop
(bad)
lahf
fistp
sbb
inc
xchg
punpckhbw
dec
or
jp
dec
or
iret
cdq
push
sub
ins
xor
retf
test
mov
mov
daa
jns
(bad)
aad
cmp
repz
pop
sti
mov
outs
pop
and
cmps
inc
and
inc
sub
xor
sti
mov
cmps
repz
xor
and
xor
jge
ins
sub
cdq
jmp
outs
and
ficom
imul
xchg
cmc
sub
jbe
sub
test
xchg
les
jge
popf
fsubr
sub
inc
push
jne
outs
cmp
loopne
aam
sub
sbb
sub
dec
or
call
dec
in
inc
lods
push
xor
xchg
mov
inc
fmul
bound
mov
mov
xchg
push
mov
neg
fimul
popa
adc
icebp
bound
jb
pop
add
outs
xor
push
mov
(bad)
mov
js
sub
inc
add
out
shl
ds
pop
mov
mov
jg
push
mov
std
sub
push
fnstcw
add
icebp
push
scas
ins
(bad)
test
test
data16
adc
aas
out
sub
aas
sbb
or
xor
or
ret
xor
pop
enter
add
aas
jecxz
or
clc
ins
dec
popa
sbb
dec
pop
jge
test
mov
idiv
and
jp
sub
dec
aas
arpl
jnp
pop
adc
inc
sbb
pop
cmp
and
jne
push
minps
jl
imul
jp
pop
jmp
int
(bad)
imul
sub
sbb
xor
add
push
push
bound
push
loope
shl
call
not
scas
retf
pushf
cmps
shl
and
push
adc
inc
add
inc
jecxz
lds
shl
adc
cmp
xor
and
arpl
inc
or
pop
in
sahf
(bad)
adc
imul
rcl
js
js
pusha
cmp
test
movs
dec
add
dec
or
dec
or
jns
push
push
and
or
jg
aam
outs
sbb
ins
sbb
push
push
and
pop
in
rcl
arpl
pop
adc
push
cmp
jb
scas
lds
(bad)
addr16
int3
xchg
iret
and
je
and
outs
xor
in
iret
xchg
fisub
sub
push
add
jb
xchg
rcl
aas
dec
out
pop
inc
pop
pop
adc
push
loope
enter
es
push
push
in
(bad)
xchg
shl
mov
fild
adc
into
mov
mov
loopne
clc
test
sbb
lds
xchg
fnstenv
imul
data16
push
mov
lods
(bad)
mov
repz
or
sub
sbb
jge
pop
adc
iret
mov
mov
cdq
shl
imul
rcl
stos
clc
jb
push
xor
out
xor
mov
test
lods
out
mov
div
sbb
dec
push
push
sbb
push
or
loop
mov
in
retf
cwde
mov
cwde
jne
push
loopne
mov
test
mov
xchg
ror
push
xor
daa
jp
jo
imul
call
sbb
add
dec
adc
adc
add
scas
loopne
repz
dec
push
ja
sub
sub
mov
mov
cmp
dec
popf
aas
sub
loope
jmp
jb
inc
cwde
aam
mov
in
mov
(bad)
fmul
ins
cmp
enter
jmp
mov
jne
and
inc
cmp
mov
or
adc
cmps
stc
jae
inc
cmp
jb
jnp
ja
js
(bad)
pop
sbb
cwde
movs
dec
cdq
cmps
std
popf
cmps
neg
in
cmp
cmovl
jnp
pop
lock
adc
dec
loopne
int3
scas
lock
ret
cdq
leave
xchg
rol
pop
cmp
pop
adc
jo
push
and
nop
stos
movs
std
mov
cld
mov
mov
nop
sar
aas
pop
and
jmp
jno
pop
cmp
imul
or
es
pop
dec
out
mov
or
dec
or
xchg
aam
fiadd
mov
add
out
sbb
retf
je
or
inc
xchg
les
lock
retf
adc
js
jl
jnp
push
out
xchg
pusha
(bad)
shl
push
dec
sub
cs
out
mov
sahf
clc
xchg
mov
call
push
add
inc
xor
jmp
fist
cmp
push
or
popa
add
jno
nop
cmps
jmp
add
dec
push
jae
push
jecxz
in
mov
aam
repnz
push
mov
ret
mov
(bad)
push
or
adc
jne
and
sbb
jmp
pop
outs
add
loopne
js
push
adc
sbb
imul
adc
pop
jmp
push
xchg
xchg
xlat
mov
stc
mov
test
test
test
push
xor
push
mov
jo
add
pop
adc
push
out
xor
sbb
es
push
push
aam
(bad)
cmc
or
cli
xchg
fcomp
mov
xchg
cmp
xchg
fmul
cwde
lock
jbe
je
jge
inc
add
jge
and
stc
xchg
pop
xchg
fldcw
jge
pop
add
inc
sbb
jecxz
mov
scas
shl
mov
mov
dec
push
push
lahf
sub
mov
mov
ss
cmp
out
out
xor
andps
push
bswap
adc
jl
bound
dec
add
add
test
nop
mov
(bad)
gs
inc
(bad)
pop
cmp
fadd
inc
in
pop
hlt
sbb
shr
test
mov
and
mov
in
movs
imul
sub
and
sub
sub
jo
jge
dec
mov
retf
scas
cld
sahf
std
mov
test
mov
mov
ins
push
dec
or
inc
add
aam
in
sti
test
loopne
imul
fst
movs
hlt
add
lahf
fistp
xchg
bound
pop
mov
fwait
mov
or
ficomp
lods
repz
dec
or
or
(bad)
stos
cmps
jmp
jno
stc
mov
rol
movs
addr16
cli
xchg
adc
jp
imul
(bad)
mov
add
dec
pop
push
sbb
mov
ror
fcomp
loopne
iret
sub
pop
cmp
push
xchg
mov
xchg
jns
lea
dec
sub
sti
mov
addr16
push
jb
or
div
movs
inc
aaa
jo
sahf
cmps
lds
mov
push
cld
inc
or
push
es
add
jl
sub
push
or
les
mov
movaps
add
mov
(bad)
into
mov
scas
stos
ret
ss
xor
(bad)
jmp
bnd
ja
ret
add
cmp
push
cmp
shl
icebp
lea
cmp
sub
pop
dec
or
mov
scas
leave
(bad)
fisub
std
into
mov
pop
sbb
in
(bad)
aaa
inc
mov
(bad)
aam
ja
jnp
dec
sbb
xor
push
or
das
dec
lock
xchg
in
pushf
lds
pushf
fidivr
fs
cmps
in
loope
aad
repz
repnz
mov
daa
jns
mov
stos
aad
sbb
dec
xlat
mov
mov
or
in
clc
and
push
cmp
sbb
mov
xchg
js
imul
int
(bad)
fcomp
data16
test
mov
xor
and
in
stc
pop
dec
(bad)
or
xchg
mov
je
ficomp
outs
and
in
cmc
xchg
lock
jecxz
leave
mov
out
div
and
and
shl
add
pop
or
cs
inc
add
(bad)
mov
jne
sub
or
xchg
rcr
add
enter
(bad)
cld
xchg
ficomp
fdivr
jmp
cmps
cmc
mov
call
fistp
xchg
fadd
fmul
retf
mov
cdq
cli
fs
cmp
je
pop
sbb
jg
outs
or
ss
push
das
imul
ins
cs
sbb
je
push
call
rol
sub
js
inc
xor
add
jnp
imul
push
pop
add
cmp
clc
mov
shl
jecxz
stos
ror
test
jns
jne
jne
xchg
mov
push
adc
add
sbb
jb
add
jno
adc
jae
add
imul
xor
and
or
push
add
dec
adc
sbb
inc
out
xlat
mov
repz
mov
(bad)
popf
sti
test
mov
xchg
fiadd
fisttp
rol
and
pusha
or
add
push
push
popa
or
pop
pop
pop
ds
je
mov
xchg
repz
jecxz
mov
cwde
(bad)
jb
push
adc
jo
xor
cs
push
ins
cs
out
stos
stc
mov
mov
hlt
xchg
mov
mov
stc
mov
and
or
rcr
mov
fadd
add
adc
jmp
jle
jnp
lods
out
(bad)
push
push
es
mov
cdq
(bad)
adc
xor
sub
add
int3
pop
pop
adc
adc
xor
int
pop
push
dec
sub
fwait
aam
leave
cmp
dec
aaa
fisub
inc
cmp
leave
icebp
mov
mov
mov
jmp
les
imul
xchg
fnstcw
lds
enter
leave
mov
lds
ret
gs
pop
sbb
test
mov
jmp
cmps
lds
hlt
mov
int
enter
cmc
or
xchg
fmul
xlat
xchg
retf
stos
leave
mov
xchg
fnsave
or
loopne
int
icebp
mov
mov
mov
cmp
add
dec
div
or
pop
out
pause
(bad)
jnp
jno
imul
pushf
fimul
mov
mov
sbb
daa
loope
out
cmp
push
and
inc
adc
outs
cs
sbb
add
push
ja
dec
test
test
and
cmp
cdq
aam
xor
mov
dec
push
in
mov
mov
aaa
daa
dec
jbe
shl
add
mov
(bad)
arpl
and
mov
mov
and
stos
fldenv
xor
mov
inc
cmp
ins
cmp
call
cmc
mov
outs
in
test
push
push
jne
ins
xor
inc
sbb
popa
movs
stos
adc
cmp
push
xlat
and
fwait
pusha
mov
sub
and
aas
pop
or
or
and
outs
or
sub
int
ret
mov
movs
(bad)
mov
call
pop
idiv
sub
aaa
jne
cmp
push
mov
test
mov
adc
mov
mul
pop
adc
jecxz
loope
pop
in
rcl
sbb
sbb
and
push
adc
mov
sbb
pop
pushf
ret
mov
dec
dec
push
loop
fld
jl
enter
leave
mov
mov
fldenv
jp
(bad)
ret
test
dec
or
push
or
sub
inc
and
cmp
sbb
call
loop
shr
push
or
cmp
lods
in
mov
mov
ret
mov
fidivr
out
sbb
imul
sub
push
data16
push
xor
jl
pop
push
jge
sub
add
ins
das
cmc
xchg
rol
mov
cmps
sti
xchg
scas
pop
fistp
sbb
pop
or
outs
sbb
adc
mov
mov
mov
cmp
mov
cdq
inc
sbb
retf
aaa
std
xchg
mov
(bad)
clc
mov
loopne
sti
das
rcr
fadd
mov
cld
mov
mov
arpl
adc
jnp
cmp
pop
mov
and
jmp
sub
sub
push
sahf
call
mov
popa
lods
pop
push
ja
je
push
pop
cli
mov
es
mov
fwait
dec
cld
stos
leave
stos
repz
fisttp
push
adc
cmps
call
or
xor
jecxz
push
push
aas
pop
sbb
ja
pushf
fist
fstp
shl
aam
stos
enter
adc
ficom
pop
sbb
cmp
idiv
mov
jge
ja
repnz
cmp
xchg
ja
jbe
inc
sub
out
ja
fisubr
dec
std
mov
fadd
and
cwde
ret
xchg
push
pop
push
call
and
and
in
bound
sbb
stc
idiv
mov
jnp
pop
cmps
ret
ror
lods
fs
push
and
and
shl
fbld
and
es
out
sub
les
mov
stc
shr
cmp
mov
jo
adc
jge
jl
cs
ret
and
cmp
push
mov
mov
iret
test
mov
imul
adc
pop
push
mov
mov
out
int3
mov
pop
out
call
addr16
(bad)
mov
lahf
es
bound
daa
loopne
(bad)
jl
aaa
lds
push
movs
loope
jl
push
push
sbb
jl
jg
and
inc
or
dec
addr16
das
ret
fcomp
xor
mov
stos
(bad)
scas
jmp
push
jecxz
js
dec
out
xchg
mov
and
cmps
sub
add
sbb
cmps
push
inc
pop
int
mov
fimul
aaa
(bad)
pop
xor
dec
add
push
popa
and
push
jbe
xor
jne
push
shr
mov
push
loope
gs
jmp
or
loope
cli
test
lods
aaa
sub
mov
sar
mov
loopne
jae
out
loop
mov
and
and
or
les
in
mov
adc
or
scas
repz
inc
sub
sbb
and
ret
mov
inc
pop
ja
pop
push
jb
dec
sub
and
imul
xchg
aam
sub
fldcw
aad
lods
int
clc
cmp
sbb
push
jae
in
mov
stos
cmc
xchg
cmc
mov
or
in
mov
xchg
repz
cs
sbb
retf
mov
mov
ret
adc
fs
enter
fs
jle
and
sbb
cs
scas
(bad)
or
jge
jmp
and
and
mov
xchg
mov
(bad)
popf
div
jl
iret
mov
pusha
xor
repz
jmp
cld
xchg
fmul
cld
mov
xchg
xor
ins
push
jae
dec
sbb
inc
or
push
in
das
mov
lods
in
cwde
retf
or
pop
adc
clc
xchg
leave
cwde
push
in
(bad)
lea
mov
retf
dec
adc
imul
bound
retf
pusha
pop
sbb
inc
fs
and
jb
ja
loop
inc
test
sbb
push
pop
out
rcr
cmps
leave
xchg
dec
adc
rcr
jecxz
loopne
jno
pop
or
adc
pushf
iret
xchg
fsubr
ins
xor
sub
aam
popaw
daa
jnp
and
sbb
(bad)
adc
cmps
mov
pop
ds
outs
sbb
mov
and
rol
push
mov
xchg
shl
inc
loop
pop
repnz
sbb
in
(bad)
loope
hlt
mov
add
cmp
pop
inc
add
test
cmp
xor
in
aad
movs
push
sbb
jns
fstp
cs
sub
daa
dec
std
mov
shr
ds
sbb
movs
ficom
xchg
jno
sub
in
push
es
scas
ficomp
js
push
xor
jmp
imul
sbb
imul
xchg
push
outs
adc
jle
rcl
lods
(bad)
inc
pop
fild
adc
cmc
push
in
into
mov
es
mov
inc
rcpps
pop
stc
sub
xchg
loop
test
scas
mov
xchg
std
scas
cli
loop
inc
out
lds
loope
test
pop
(bad)
mov
aaa
push
loope
(bad)
outs
inc
cs
add
int
rcr
pop
mov
call
dec
clc
mov
aad
(bad)
mov
cmp
inc
add
dec
adc
pop
sbb
sbb
dec
mov
mul
jnp
sub
ds
(bad)
int
clc
mov
mov
sbb
imul
mov
daa
push
add
inc
add
int
test
fistp
stc
mov
push
test
sub
div
js
and
sti
int3
mov
frstor
shl
aaa
bound
fadd
lahf
and
adc
inc
mov
pop
(bad)
(bad)
call
pop
xor
push
xor
ret
mov
jbe
inc
push
dec
lahf
aad
push
adc
leave
cwde
dec
and
das
imul
jp
dec
in
mov
fs
push
push
xor
out
into
mov
cdq
cmc
test
jmp
aam
xchg
popf
mov
jmp
imul
pusha
dec
cs
add
xlat
adc
popa
xor
gs
sbb
xor
sbb
in
std
pushf
ret
xchg
scas
pusha
dec
add
sbb
push
push
sub
xchg
dec
sub
retf
movs
push
mov
xchg
push
cmp
ins
add
jl
addr16
cli
mov
test
arpl
dec
cwde
xor
jp
xor
outs
adc
push
ffree
xchg
fld
mov
mov
sub
xor
daa
dec
jmp
clc
mov
sbb
jl
aas
dec
xchg
xor
cmp
neg
not
inc
push
jmp
dec
sbb
jns
inc
test
nop
push
movs
jmp
stc
mov
mov
add
lds
adc
loopne
cmc
sub
xchg
scas
fnstsw
pop
sbb
and
scas
mov
lods
stc
mov
rcr
(bad)
aad
retf
add
add
cmp
or
test
xchg
not
movs
cld
(bad)
pop
add
push
push
aas
push
aas
jo
jg
dec
pop
je
aad
fsubr
pop
add
in
mov
and
cmp
(bad)
jecxz
mov
call
push
cld
xchg
ficom
outs
cmp
sbb
test
mov
pop
sbb
jg
stos
call
stos
repnz
das
jl
cs
push
push
std
xchg
push
xor
push
nop
cli
mov
shr
mov
lea
dec
adc
jae
es
or
inc
xchg
retf
pop
dec
or
mov
or
push
sbb
inc
or
cmps
(bad)
fst
and
ds
fdivr
inc
add
adc
xor
es
cwde
mov
call
aas
push
cmp
sub
test
jg
jb
cld
mov
fmul
inc
add
je
scas
jmp
call
xchg
xchg
mov
adc
add
push
outs
sub
dec
xchg
stos
jmp
stc
mov
(bad)
jmp
iret
mov
mov
fwait
ret
imul
stos
ret
adc
pop
std
mov
jae
test
and
or
dec
xchg
rol
sub
pop
(bad)
sahf
in
cmp
push
retf
mov
jle
pop
enter
xlat
mov
and
sub
scas
jmp
sbb
xor
les
sti
cdq
fistp
shl
pop
sbb
jle
inc
adc
clc
mov
sbb
jno
outs
adc
(bad)
js
pop
ret
adc
xor
jmp
xchg
add
sub
cmc
cmps
xlat
mov
push
push
pop
addr16
push
or
daa
pop
sbb
sbb
cmp
fs
adc
leave
stos
in
stos
sar
dec
cmp
and
ja
shl
push
sbb
stos
in
mov
jmp
mov
sahf
ffree
(bad)
fcomp
dec
and
call
cmc
pushf
sar
adc
add
std
mov
pop
push
push
test
mov
loope
icebp
sar
test
lods
out
xchg
aam
push
ds
xor
dec
das
mov
adc
pop
push
inc
pop
mov
daa
push
sbb
or
mov
mov
movs
fiadd
push
lods
out
imul
pop
es
jmp
mov
scas
cmps
in
pop
sbb
sub
dec
inc
push
inc
push
dec
xor
das
cwde
test
scas
aad
cmc
mov
mov
imul
jns
imul
int3
xchg
nop
xlat
mov
test
ja
dec
adc
xor
out
jae
arpl
inc
add
jno
fadd
jecxz
leave
adc
imul
cmps
hlt
test
mov
pop
add
jb
push
add
or
repnz
daa
ja
xchg
mov
mov
jle
or
xchg
icebp
mov
lods
out
push
dec
adc
mov
mov
sub
or
pop
ss
dec
sub
xor
dec
sub
stos
loope
xor
daa
add
dec
push
fs
inc
or
xor
push
loop
(bad)
inc
sbb
xchg
retf
daa
out
repz
(bad)
in
out
aad
mov
sbb
add
cmovo
jl
inc
adc
pop
call
jb
mov
clc
test
js
pop
sar
in
xchg
add
add
gs
sbb
inc
add
and
jge
xor
in
cmc
pop
cmp
push
cmp
mov
fiadd
arpl
push
test
xchg
retf
test
in
mov
test
out
and
test
test
jg
(bad)
in
push
mov
xlat
in
fcom
mov
mov
out
stos
leave
xchg
stos
jmp
mov
xchg
sar
pop
aam
(bad)
sub
inc
(bad)
mov
mov
jmp
cld
mov
xchg
iret
mov
or
int3
or
dec
sbb
mov
mov
jo
mov
(bad)
out
sahf
cmps
les
scas
in
mov
test
push
pop
pop
and
ss
(bad)
fcomp
jo
(bad)
jnp
push
movs
sbb
mov
lods
retf
jp
pusha
shl
xlat
cmps
loopne
movs
out
movs
out
in
ds
(bad)
xchg
rcr
push
neg
sbb
gs
cmps
mov
xor
xchg
rcr
mov
out
xor
push
xor
out
push
add
inc
(bad)
stos
hlt
push
push
push
icebp
mov
inc
sub
or
xor
sub
ss
adc
push
and
sbb
push
jmp
in
repz
adc
push
and
push
or
mov
sbb
fstp
outs
out
outs
call
iret
cmps
repz
rcl
out
adc
loop
data16
inc
jae
xchg
fcmovu
xchg
repz
pop
adc
retf
mul
ss
add
sub
adc
loop
xor
inc
jecxz
add
mov
fwait
enter
cmp
xor
add
iret
mov
mov
sub
mov
les
sahf
repnz
jg
fadd
call
dec
cmp
xchg
enter
imul
and
cmp
pop
inc
push
push
cmp
push
or
in
ret
lahf
cdq
xchg
sti
mov
mov
mov
ja
mov
test
add
push
add
dec
div
sbb
arpl
pop
and
call
push
loope
dec
ficomp
les
arpl
jo
and
xor
scas
call
and
pop
cmp
xor
sub
adc
jno
retf
pop
fidivr
pusha
sbb
clc
jno
pop
xor
push
jge
std
mov
sub
mov
cwde
into
dec
adc
dec
cmp
sub
mov
adc
pop
lds
(bad)
xchg
(bad)
popa
add
sub
movs
div
mov
pusha
and
dec
jecxz
sahf
jg
pop
ror
add
mov
dec
cmp
adc
retf
repnz
mov
pushf
pop
test
xchg
inc
fwait
ret
sbb
int
sub
inc
and
retf
mov
jge
dec
adc
jbe
cli
test
ficom
fmul
dec
sbb
test
dec
or
pusha
add
jnp
inc
pop
dec
cli
sahf
fld
jne
pop
std
mov
sahf
fnstsw
mov
mov
sar
mov
cmp
adc
mov
and
pop
push
mov
imul
or
test
shl
std
mov
sbb
push
ins
add
mov
scas
in
mov
push
inc
ins
pusha
xor
daa
popa
es
and
or
jno
push
push
loop
sub
mov
or
stc
and
call
stc
dec
mov
cdq
cmp
and
mov
jb
cmp
loop
enter
rcr
fs
push
sbb
and
sbb
lods
les
(bad)
std
scas
in
into
mov
mov
shl
ror
fwait
xchg
aad
mov
inc
adc
jge
imul
das
es
ins
das
jge
xchg
fidiv
xor
sti
mov
fadd
je
jbe
ins
add
push
adc
loope
in
inc
xchg
aam
int3
(bad)
bound
pop
outs
aas
jl
pop
dec
getsec
mov
mov
movs
movs
std
mov
and
add
xor
pop
cmp
lods
jmp
mov
xlat
cwde
icebp
mov
out
aam
aad
cmc
mov
jo
imul
leave
loopne
(bad)
or
dec
pop
ss
(bad)
xor
test
fwait
ret
cmps
in
jg
mov
xchg
rol
mov
pop
pop
inc
adc
and
call
cmps
loope
je
movs
std
mov
test
sbb
xchg
fdiv
movs
out
aaa
jno
dec
cmp
popf
ficom
imul
push
add
jbe
and
aam
retf
scas
pop
sbb
enter
call
in
(bad)
mov
pusha
cmp
sub
inc
jp
pop
mov
pusha
add
dec
or
xor
mov
mov
push
adc
retf
cwde
fstp
mov
(bad)
shr
cld
movs
out
int
mov
stos
sub
dec
adc
and
cld
mov
dec
or
and
sbb
mov
dec
popf
xchg
lods
movs
(bad)
mov
cdq
fcmovnbe
aam
repnz
(bad)
mov
mov
test
jl
add
xor
mov
xor
cs
sbb
repnz
or
je
pop
(bad)
mov
scas
mov
shl
ins
sbb
add
jnp
push
xor
je
push
mov
jns
mov
add
dec
cmp
inc
or
add
jge
arpl
outs
cdq
cld
mov
cmp
sub
cmps
in
retf
cwde
fstp
pop
sbb
cmp
jnp
push
add
or
out
xchg
inc
sbb
jae
sbb
and
mov
xchg
out
lods
and
lds
aad
pop
inc
adc
nop
(bad)
xchg
movs
leave
xlat
fadd
sbb
or
adc
jl
dec
sbb
test
dec
push
popf
jmp
in
cli
mov
bound
je
sub
sub
pusha
ins
xor
ins
and
aas
ja
pop
es
add
aas
out
cli
mov
sub
imul
and
add
push
jns
imul
fistp
ja
(bad)
fild
pop
xor
pop
(bad)
inc
sub
cli
mov
imul
mov
mov
jle
inc
je
fs
sar
mov
stos
rcl
mov
xor
mov
(bad)
jmp
popa
or
pop
dec
pop
pop
and
ins
sub
sbb
mov
scas
(bad)
xchg
mov
sub
ins
push
pop
aad
add
inc
sub
inc
xor
(bad)
mov
and
outs
sub
aaa
jno
dec
and
add
outs
aaa
je
bound
sub
jp
jo
mov
pop
pop
add
inc
cmp
mov
cwde
fistp
cld
mov
in
iret
fmul
xchg
(bad)
mov
addr16
and
adc
jnp
hlt
rcl
or
cmp
(bad)
xchg
and
inc
loopne
sbb
int
mov
pop
jns
push
jne
mov
xchg
int
ins
inc
sub
sbb
jae
shl
mov
gs
push
pop
jbe
dec
pop
pop
push
dec
jp
jl
dec
daa
push
jg
push
(bad)
mov
gs
(bad)
mov
cwde
retf
xchg
icebp
push
add
or
outs
ss
sbb
lock
push
mov
outs
jle
jg
xchg
pop
dec
adc
cdq
rol
jbe
jo
inc
sbb
stos
sbb
adc
inc
add
sbb
aas
dec
add
scas
push
and
sbb
jns
test
popa
adc
in
enter
push
jp
dec
shl
mov
outs
ss
sbb
jg
outs
fisubr
pop
sub
xor
scas
xor
dec
aam
cld
mov
loopne
mov
(bad)
fisub
inc
jae
bound
or
cmp
loope
push
pop
paddsw
mov
xor
es
(bad)
mov
fadd
daa
push
sbb
lock
inc
and
sbb
call
arpl
rcl
es
rol
jge
inc
add
jle
pop
into
and
fidivr
jecxz
aam
rol
or
xchg
(bad)
and
push
jl
outs
sbb
leave
xchg
rcr
cmp
bound
push
scas
int
out
jmp
clc
fcomp
sub
leave
cmps
hlt
mov
lahf
fstp
aad
pop
pop
add
test
xchg
cld
mov
arpl
push
jmp
pop
xchg
push
pop
sbb
inc
inc
adc
sub
outs
xor
ss
dec
or
sti
mov
lahf
xchg
lods
out
mov
and
cs
inc
adc
inc
add
mov
lods
test
jae
clc
mov
imul
fmul
ss
cmp
mov
xchg
ficomp
sti
cdq
retf
js
je
clc
mov
xchg
(bad)
mov
xchg
stc
mov
call
push
imul
add
in
adc
cmc
mov
lods
and
inc
push
and
push
ins
rcl
test
pushf
fbstp
imul
out
shl
ret
or
call
out
cld
cwde
fidiv
shl
fcomp
les
mov
les
adc
pop
cmp
inc
sub
jno
es
bound
inc
sti
mov
mov
or
adc
jnp
imul
xor
pop
and
adc
retf
gs
mov
mov
je
jp
jl
(bad)
jmp
push
or
push
pop
adc
dec
cdq
lds
stos
cli
xchg
inc
or
and
mov
mov
loopne
(bad)
in
mov
xchg
fcom
ret
push
add
sub
rol
movs
stc
xchg
jo
fs
xor
arpl
dec
push
xlat
arpl
inc
loop
adc
push
and
push
gs
push
xor
inc
sub
pop
push
pop
cmc
mov
mov
mov
mov
fs
xchg
aad
rcl
gs
pop
hlt
xchg
fsub
imul
or
cwde
fmul
leave
mov
loop
jecxz
xlat
je
outs
sbb
adc
imul
adc
outs
pop
fs
(bad)
mov
mov
mov
push
pop
push
push
pop
push
dec
push
pop
xor
pushf
ret
mov
into
xchg
cli
mov
not
mov
pushf
sbb
xchg
retf
xchg
shl
or
xchg
mov
adc
cmps
sti
xchg
add
(bad)
pop
xchg
int
stos
call
pusha
gs
push
in
push
out
in
sub
test
push
ds
or
ja
data16
mov
mov
scas
inc
adc
cmp
and
aas
inc
add
arpl
imul
ss
movs
jecxz
jecxz
and
je
inc
xor
xor
jno
pusha
and
push
in
sub
pop
add
lods
adc
inc
movd
xor
dec
xor
dec
push
jae
out
iret
popf
scas
xchg
fidiv
outs
sub
xchg
cli
out
xchg
scas
mov
xor
dec
and
sbb
mov
mov
scas
mov
test
pop
xor
ror
mov
mov
push
push
pop
stos
call
mov
mov
dec
pop
push
or
retf
push
sub
jns
inc
add
imul
or
jns
ss
pop
and
inc
add
jp
retf
inc
adc
and
dec
adc
inc
add
inc
pop
push
xor
add
imul
or
jns
repnz
push
mov
mov
mov
mov
dec
cmovs
jl
shr
jg
je
push
call
cmp
dec
or
sbb
inc
sbb
jo
push
push
add
dec
add
jge
dec
out
fdivr
dec
sbb
cmp
scas
retf
mov
pop
adc
jno
std
mov
ss
pop
adc
dec
shl
std
mov
add
pop
add
aas
jo
dec
sbb
mov
xchg
lods
out
mov
out
out
jmp
test
xchg
aad
adc
(bad)
lods
iret
pushf
lods
into
sub
inc
dec
pusha
daa
jle
pop
addr16
pop
psllw
xor
popa
and
or
sub
pusha
push
jne
sahf
mov
jmp
and
(bad)
mov
retf
mov
fcom
or
aas
add
sub
jl
xor
jno
xor
add
dec
sub
and
sbb
rol
mov
dec
adc
ins
idiv
jae
pop
popf
xlat
mov
aaa
jne
shl
xor
cmc
mov
push
or
jae
and
aas
add
or
dec
cmp
push
adc
cdq
mov
test
xor
dec
add
mov
mov
ins
daa
enter
mov
adc
imul
sub
fdivr
les
inc
sbb
int
imul
dec
add
cmp
jmp
arpl
das
imul
imul
aas
jl
push
inc
les
dec
(bad)
movs
xlat
xor
(bad)
mov
xchg
xchg
mov
sbb
jg
ss
adc
mov
xchg
mov
or
retf
pushf
mov
loope
sbb
int
sbb
call
hlt
mov
add
bound
and
dec
or
mov
mov
pop
daa
dec
imul
inc
retf
outs
push
push
stos
rol
test
mov
mov
jae
xchg
xchg
cli
(bad)
int3
lahf
test
sbb
xchg
retf
mov
adc
and
add
xchg
xchg
add
xor
mov
out
lock
ins
cld
mov
xor
adc
ficomp
mov
xchg
xchg
shl
ja
push
and
add
jb
(bad)
cli
mov
loope
icebp
xor
jne
xchg
out
ficomp
fidiv
sub
adc
clc
pushf
jmp
pop
les
outs
div
sahf
test
lea
cs
or
lock
xor
stc
mov
mov
scas
ins
cmp
or
test
and
inc
cmovl
pop
adc
inc
xor
inc
add
push
pop
ror
arpl
push
inc
ret
ja
dec
sbb
cmp
js
out
lods
sbb
jae
add
adc
inc
ss
das
ins
clc
mov
sbb
retf
xlat
das
sub
test
mov
int3
sbb
dec
sbb
out
mov
stc
stos
call
push
ins
in
mov
and
cmp
inc
xor
hlt
std
lahf
int3
cdq
cli
dec
int
ror
loopne
jle
movs
div
call
mul
mov
pop
pop
inc
rcl
dec
inc
and
(bad)
mov
pop
sbb
cld
mov
jp
push
cwde
clc
mov
pop
sbb
sub
cmp
out
test
inc
sbb
lods
add
push
adc
and
jmp
das
jbe
in
fistp
pop
mov
(bad)
int
fadd
pusha
es
leave
movs
std
inc
sbb
jmp
loopne
fscale
movs
(bad)
xchg
je
inc
iret
mov
push
jg
popa
mov
(bad)
lds
pop
(bad)
xchg
(bad)
adc
xor
mov
mov
mov
sbb
daa
dec
add
inc
and
adc
shl
lahf
mov
cwde
cmp
xchg
adc
push
xlat
cmp
pop
dec
cmp
mov
mov
arpl
push
mov
xchg
sub
popa
cmp
stos
data16
fs
jbe
mov
in
ret
sbb
cmp
adc
stos
jmp
xor
pop
mov
js
or
gs
cmp
sbb
mov
sub
push
sub
jo
inc
jg
push
push
jmp
xchg
mov
clc
int
adc
imul
push
pop
pop
mov
cs
mov
sub
(bad)
dec
adc
adc
lds
(bad)
movs
(bad)
xchg
jno
scas
fcomp
and
cmp
cs
popf
hlt
sub
adc
dec
adc
ds
xchg
aad
arpl
pop
aaa
js
dec
sub
rol
fsubr
cmp
add
xchg
push
add
in
cmp
(bad)
jno
lds
xchg
sbb
dec
sub
test
shr
xor
xor
sub
mov
test
(bad)
in
sbb
popf
pop
sbb
sbb
mov
sbb
popa
add
cdq
jb
and
mov
cwde
ror
adc
mov
push
mov
repz
jmp
pop
in
inc
arpl
lahf
inc
ja
in
mov
int
jo
jecxz
and
shl
jmp
cmp
icebp
hlt
xchg
xchg
repnz
jnp
adc
mov
out
mov
jecxz
iret
ins
xchg
xor
int3
cld
cmp
clc
shl
push
sbb
out
sbb
fidiv
pop
add
popa
movs
retf
inc
or
xor
push
adc
push
cs
movs
bound
jp
out
mov
mov
adc
pop
lea
jmp
cmps
int3
jo
or
ficomp
ret
inc
es
xchg
mov
jg
and
enter
push
cld
ret
in
sahf
stos
dec
pop
xchg
xor
add
fistp
rcl
dec
xchg
and
xchg
shr
mov
adc
test
ds
outs
adc
je
bound
mov
xor
xchg
push
pop
mov
nop/reserved
rol
test
or
sbb
push
push
jae
rcl
adc
pop
push
mov
cmp
push
je
jae
daa
pop
and
inc
mov
iret
leave
dec
fidiv
(bad)
jecxz
pop
scas
mov
into
and
xor
(bad)
out
sub
add
jns
and
into
in
sub
sub
in
scas
inc
call
imul
mov
out
mov
mov
push
sbb
aad
cwde
pop
xchg
xchg
dec
dec
jl
mov
push
mov
jae
imul
cmp
fstp
mov
fild
mov
movs
jb
cmps
mov
add
imul
call
in
pop
xchg
dec
and
mov
cwde
cwde
push
mov
pop
scas
mov
jo
hlt
xor
outs
nop
mov
arpl
sti
repnz
push
mov
adc
stc
pop
add
out
dec
sub
jmp
xor
sub
jecxz
frstor
jae
push
jne
pop
and
inc
push
mov
cmp
mov
mov
push
loopne
pushf
aaa
push
add
cdq
cmps
ja
or
test
inc
xor
mov
push
add
pop
or
mov
mov
push
cmp
enter
inc
rcl
sub
pop
cli
xchg
add
mov
call
in
ins
cld
inc
mov
xor
outs
fsub
inc
mov
repz
cwde
(bad)
adc
mov
imul
mov
imul
aas
aas
in
cdq
(bad)
pop
cli
call
fwait
pop
ins
push
jo
aad
stos
xchg
inc
in
sbb
cmp
movs
adc
add
mov
(bad)
jmp
std
or
stos
outs
in
sahf
xchg
sar
xchg
xchg
mov
push
fldl2t
pop
scas
(bad)
mov
sub
cmp
repnz
push
popf
mov
hlt
or
jmp
pop
fcom
popf
dec
or
jge
cmp
push
(bad)
cwde
push
ffreep
sbb
xor
jno
sbb
sub
retf
fs
test
jge
ds
test
sbb
adc
ins
in
xor
pop
push
jae
enter
adc
cwde
mov
not
xchg
cmp
mov
popf
jmp
repnz
jmp
or
adc
cmp
jle
and
bound
pop
jecxz
mov
push
clc
mov
or
rol
rcr
cdq
ret
mov
lahf
test
pop
sbb
in
mov
xchg
inc
mov
(bad)
add
add
ins
outs
nop
push
pop
ja
sbb
mov
sbb
sti
xcrypt-ctr
cmps
pop
push
(bad)
jmp
retf
cmp
psrld
xor
sub
pop
inc
pop
bnd
repnz
out
shl
xchg
xor
add
lds
cwde
mov
sbb
mov
pop
retf
jne
cmp
cmps
cmc
inc
lods
mov
sub
lods
out
mul
pop
jae
xor
mov
sub
xlat
sbb
aaa
jp
push
mov
mov
clc
jmp
xchg
loopne
sbb
(bad)
xor
das
adc
test
sub
jo
leave
fnstcw
pop
mov
or
mov
lock
pop
lock
pop
out
and
inc
xchg
inc
cs
dec
dec
imul
in
cmp
aaa
call
inc
into
call
jbe
fsub
ja
nop
pop
xor
pop
xchg
push
jle
dec
rcl
dec
hlt
sbb
test
cwde
mov
pop
mov
cmp
call
xor
push
mov
(bad)
jb
pop
sahf
cld
nop
pop
imul
or
xor
and
out
ds
rcr
(bad)
mov
mov
xor
nop
cs
add
sbb
retf
pop
cmps
pop
xchg
cmp
adc
xchg
inc
adc
add
xor
popa
adc
fiadd
jb
or
cmc
call
mov
dec
dec
jne
ss
into
icebp
scas
ret
imul
mov
and
movs
push
loope
in
dec
stos
add
jle
xchg
into
push
mov
sbb
fiadd
push
mov
scas
fwait
aam
mov
fldenv
inc
sti
sbb
jne
cmps
loop
push
adc
test
les
rcr
mov
adc
sbb
sub
inc
or
retf
hlt
push
mov
mov
leave
mov
mov
jns
jmp
ret
adc
jo
mov
repnz
jns
lds
mov
dec
fisubr
jmp
push
pop
into
cmp
mov
or
arpl
or
mov
cdq
jb
retf
push
jmp
or
outs
cmp
adc
push
xchg
push
(bad)
fcmovnb
mov
cld
dec
xor
int3
fchs
shl
sbb
(bad)
jo
hlt
scas
xchg
and
or
mov
mov
outs
sub
(bad)
dec
pop
sub
cmp
shl
aas
mov
ja
add
inc
fmul
lock
push
jns
pusha
outs
push
gs
add
mov
xchg
int
lahf
out
push
push
fisub
pop
mov
loop
pop
jle
inc
test
sbb
jmp
cli
push
cwde
cmp
pop
adc
xor
shl
mov
test
gs
into
lds
arpl
jmp
dec
mov
dec
(bad)
adc
mov
mov
in
retf
and
pop
dec
fucomp
mov
loop
out
std
sahf
mov
add
test
ds
mov
js
cmp
stc
cmp
pop
das
jmp
cmp
jo
push
inc
xor
adc
jmp
cmp
cli
mov
mov
mov
jo
sub
leave
loopne
out
int
and
mov
pop
push
outs
lahf
jmp
inc
sub
jae
gs
mov
mov
cmps
dec
sbb
xchg
adc
test
fild
not
jmp
out
xchg
adc
pop
inc
test
adc
adc
mov
(bad)
es
sbb
ret
sub
mov
fdiv
shl
push
mov
mov
push
mov
cmp
sub
cmp
cmp
and
mov
cdq
mov
(bad)
jno
enter
or
in
sti
pop
into
jp
xlat
sbb
or
stc
cmp
jmp
pusha
fwait
clc
sub
outs
jg
mov
and
pop
push
xor
lds
clc
outs
jmp
push
adc
rol
outs
jmp
aaa
or
mov
ror
jmp
iret
jl
aaa
sub
pop
mov
xchg
jg
ins
cmp
mov
mov
test
xor
or
int
cdq
push
or
jnp
adc
xor
sbb
inc
adc
int
pop
mov
repnz
cwde
pop
iret
js
dec
dec
out
sub
in
adc
cmc
xor
mul
test
call
(bad)
call
lock
xacquire
std
aas
mov
lock
faddp
stos
pop
test
push
out
fwait
pushf
dec
mov
adc
cmps
sbb
es
inc
test
imul
mov
push
lock
bnd
dec
xchg
daa
ja
push
or
jge
or
out
pop
pop
out
int3
test
out
sahf
fiadd
jb
lods
mov
push
imul
or
cmp
rcl
xchg
sbb
pop
and
xor
xchg
push
adc
and
rcl
loopne
pop
inc
pop
aaa
ins
cwde
add
cmp
stc
jne
pop
xsave
inc
xor
jle
mov
pop
and
jmp
mov
xlat
jns
stos
sub
mov
aas
pop
xchg
out
jg
scas
arpl
sti
push
scas
retf
mov
adc
(bad)
call
test
or
call
sbb
and
pop
mov
cmc
push
xchg
jmp
add
sbb
cmp
push
jmp
xchg
add
sbb
movs
push
aam
popa
or
mov
and
adc
bound
scas
xchg
sahf
pop
adc
rcl
int
jbe
push
rol
movs
jg
sbb
sub
xor
push
hlt
cs
fs
mov
test
cwde
add
jp
(bad)
jle
cmps
shl
je
mov
sti
es
enter
lods
mov
(bad)
pop
mov
jbe
dec
(bad)
jg
mov
xchg
pop
nop
pushfw
xchg
loopne
xchg
sbb
and
mov
pop
or
xor
sti
call
je
xchg
add
dec
adc
popf
inc
sar
retf
mov
jp
stos
cmp
mov
pop
cmp
xchg
in
ja
dec
xor
push
xchg
xor
add
cli
xor
test
and
mov
outs
fnsave
mov
repz
arpl
popf
jge
cmp
or
sbb
(bad)
cmps
lock
addr16
jmp
aad
enter
div
daa
imul
push
sub
aas
dec
enter
shr
inc
js
shl
push
pushf
or
repz
adc
mov
add
xor
cmp
cmp
mov
imul
fstp
cmp
popa
das
adc
aas
retf
out
cmc
sar
test
push
push
aaa
popa
push
mov
shl
popf
mov
xchg
pop
mov
sub
movs
mov
xor
ret
lods
push
jp
fwait
pop
mov
xor
push
out
adc
or
mov
mov
dec
adc
cmp
xchg
dec
ins
cmp
sub
mov
hlt
fwait
ds
fwait
sahf
push
sub
bound
jecxz
(bad)
xor
retf
and
(bad)
mov
out
push
sub
sub
or
dec
test
sbb
xchg
mov
ins
aas
or
stc
addr16
jle
adc
cmp
mov
sahf
jge
push
bound
xlat
mov
push
fs
pop
mov
and
and
jge
or
cmp
lods
dec
sub
ds
xchg
or
dec
in
inc
shl
inc
push
fiadd
mov
call
mov
mov
or
xor
cmp
shl
cmc
adc
ds
cli
scas
adc
cmp
imul
dec
adc
in
nop
or
clc
push
mov
out
xchg
inc
sub
add
xor
test
mov
pop
jbe
cmps
jg
jae
cmp
and
jg
inc
push
daa
inc
inc
adc
sbb
cmp
mov
fst
jo
and
sub
rol
add
out
popf
or
inc
scas
mov
mov
lock
outs
jnp
lods
lds
fs
call
dec
cwde
fistp
retf
ficomp
inc
jne
lahf
mov
daa
push
add
mov
sahf
cli
mov
sub
js
jmp
ret
push
xor
rcr
xchg
data16
loop
jb
aas
in
push
hlt
fadd
ds
mov
adc
push
lahf
xor
and
notrack
dec
jns
aam
sti
sahf
inc
rol
jmp
adc
imul
xor
stos
cdq
pop
jmp
push
es
inc
in
pop
cmp
popf
imul
fwait
or
int3
inc
cwde
xor
push
cmp
xchg
shl
ror
adc
dec
test
mov
xor
loopne
das
xchg
repnz
(bad)
fbld
mov
cmp
or
lds
or
outs
pusha
lahf
or
mov
(bad)
jae
sbb
(bad)
ss
imul
dec
sahf
(bad)
fisttp
ja
aaa
inc
rcl
or
or
retf
jne
mov
fsubp
xor
and
in
and
sahf
cmp
adc
add
cld
lods
movs
dec
lahf
dec
scas
cmp
inc
inc
dec
cld
hlt
sbb
das
mov
mov
outs
mov
in
(bad)
sub
fdiv
popf
loop
push
mov
adc
dec
stos
jp
add
in
pop
cmc
pop
push
movs
jecxz
pop
dec
cld
dec
test
sub
(bad)
fidivr
mov
and
push
jnp
lahf
(bad)
sub
cmps
adc
outs
nop
sahf
pop
dec
cli
pop
or
xchg
iret
out
sbb
lods
test
mov
mov
jne
out
xor
std
outs
fucomp
fldenv
and
and
movs
out
mov
xor
retf
jl
mov
test
and
imul
stc
fcmovne
out
(bad)
test
iret
mov
dec
std
and
sahf
in
xor
and
push
retf
jp
retf
rol
push
jo
arpl
jns
sbb
pop
xor
and
mov
dec
sub
(bad)
lods
fsubr
mov
jae
(bad)
cld
into
fisub
cmp
cmps
jae
cld
movs
dec
idiv
repz
jmp
pop
jbe
push
setp
mov
sub
ins
and
nop
stc
enter
xchg
into
or
rep
or
xor
or
jnp
inc
test
pusha
cmc
cmps
int3
(bad)
adc
test
dec
mov
(bad)
mov
cmp
dec
mov
or
sub
xchg
call
sbb
icebp
rol
fwait
rol
iret
or
cmc
dec
repz
and
adc
mov
xchg
in
xchg
pop
mov
les
jae
pop
xlat
mov
jbe
or
adc
jge
mov
in
jne
mov
in
movs
add
add
icebp
or
push
stos
test
(bad)
push
shl
xchg
gs
hlt
imul
cmps
sub
pop
mov
out
lock
retf
scas
fsub
repz
cli
dec
fld
sub
or
pusha
retf
(bad)
sbb
pop
adc
int
bound
and
pop
in
cmc
(bad)
call
punpckhbw
sbb
or
sahf
push
pop
xchg
cdq
mov
mov
add
sub
cmp
movs
stos
mov
cmps
out
and
jne
xchg
jp
or
add
push
(bad)
pop
mov
fimul
and
xchg
dec
sub
loope
fwait
adc
fistp
push
jo
hlt
xchg
push
push
mov
cdq
sar
aam
xor
fcmovnb
mov
pop
cli
into
call
ret
xchg
leave
call
adc
stos
jle
xchg
mov
fdivr
xchg
(bad)
inc
popf
scas
push
(bad)
(bad)
dec
or
or
sub
mov
or
xchg
imul
push
and
jno
div
(bad)
lahf
jbe
mov
fldenv
cmc
xchg
out
mov
cmovs
xlat
fild
jnp
mov
inc
mov
pop
pop
clc
adc
cmp
(bad)
adc
test
out
add
enter
mov
cmps
jns
mov
and
mov
sub
add
cmp
push
add
push
std
mov
dec
sbb
or
popf
std
add
and
push
adc
mov
lock
add
or
mov
out
sahf
shld
add
and
ds
dec
sahf
jno
cli
inc
js
adc
lahf
loopne
jle
scas
loope
sahf
mov
jg
cli
enter
jl
jne
aad
bound
std
jo
mov
imul
mov
jp
shl
and
mov
cmp
imul
cmp
imul
add
push
mov
mov
sbb
popf
mov
ror
pop
shl
into
into
test
ficomp
dec
cmp
les
fisttp
mov
and
aad
jg
pop
fsubr
inc
and
dec
out
popa
(bad)
cs
fild
pop
aam
adc
sahf
aam
imul
lds
xor
pop
adc
cmp
neg
mov
add
xor
cmp
pop
shr
popf
xor
xchg
in
xor
int3
fsub
aam
inc
loope
jne
loopne
or
(bad)
mov
popf
int
sbb
add
jmp
cs
mov
mov
lods
jbe
sub
scas
jae
inc
pop
sbb
ds
xchg
inc
inc
dec
push
pushf
xchg
lock
push
pop
cmp
xchg
sbb
test
mov
dec
mov
sbb
(bad)
xlat
push
sahf
xchg
pop
push
cmp
dec
mov
sub
iret
push
shl
xchg
pusha
out
xchg
mov
jae
dec
or
enter
loopne
nop
xchg
loope
mov
jne
cmp
wbinvd
cli
aaa
repz
ds
add
mov
lock
les
add
fldenv
lds
inc
js
add
xchg
cli
ret
push
xor
retf
out
adc
aas
pop
mov
pusha
xor
lods
push
sbb
jecxz
(bad)
mov
sub
mov
test
xchg
int3
cmp
popf
sar
inc
leave
fadd
fnstsw
mov
scas
out
cmc
aad
sbb
or
loope
int
and
setge
jbe
call
dec
lahf
mov
nop
cmp
or
push
xchg
inc
or
ffreep
add
xor
mov
mov
out
xchg
retf
pop
loope
cmp
xor
imul
mov
jne
pop
cli
es
pop
and
(bad)
cmp
push
push
out
vcvtss2si
and
jg
jp
daa
xor
ds
(bad)
or
mov
mov
sbb
xchg
jbe
leave
in
sahf
dec
mov
test
sub
vaddsubps
mov
std
mov
adc
movs
sub
or
push
mov
outs
movs
mul
lahf
or
or
jns
cmp
imul
adc
or
aad
jno
push
sti
stos
mov
(bad)
mov
test
loope
jg
jp
rcl
mov
cmc
fsubr
sub
push
xchg
sub
push
lahf
sbb
popa
xchg
mov
cmc
inc
call
cmp
pop
rol
and
(bad)
jl
hlt
mov
imul
adc
pop
push
outs
push
and
and
sub
add
adc
push
jge
cmp
mov
sti
xchg
dec
xor
test
rcl
sub
xor
lods
scas
gs
or
mov
imul
jge
and
int3
cld
mov
push
fbld
ins
xor
aam
jmp
(bad)
iret
and
repnz
xor
mov
inc
sub
(bad)
xor
popa
cmp
mov
imul
fld
bound
(bad)
shl
test
xor
sbb
iret
(bad)
xchg
aas
jb
pop
mov
test
std
test
fdiv
fldenv
gs
sti
mov
inc
pop
cmc
retf
mov
sbb
add
adc
xchg
icebp
add
xor
or
fidivr
jb
lock
cs
sahf
cmp
xlat
mov
push
cmps
sbb
iret
(bad)
mov
pop
push
adc
or
xlat
mov
push
and
into
fnstenv
sbb
movs
aaa
jo
cmps
aas
dec
repz
jmp
popf
pop
push
call
inc
imul
cmp
mov
mov
stc
test
sub
xchg
lea
clc
loope
lods
ret
mov
lods
ficomp
pop
jmp
xor
fidiv
mov
pushf
jbe
pop
xor
clc
mov
push
xchg
pop
or
rcr
call
pop
mov
(bad)
mov
add
xor
je
cmp
popa
dec
add
push
or
adc
mov
test
cmp
add
jmp
pushf
leave
cmp
pop
mov
(bad)
aam
stos
jmp
scas
(bad)
mov
pusha
cmp
mov
stos
ss
pop
je
xor
int
mov
das
pop
mov
mov
xchg
cli
push
inc
aas
pop
mov
sub
xchg
jo
inc
add
loopne
in
and
mov
push
xor
jl
add
pop
loope
into
mov
mov
xor
inc
xor
aaa
jg
sbb
push
pop
clc
in
scas
fiadd
xchg
push
dec
movs
aaa
xchg
ret
ss
mov
loopne
jle
aaa
push
mov
movs
sbb
sbb
pop
xchg
pop
pop
fcmovne
lods
jmp
daa
fnstcw
push
iret
(bad)
aam
je
std
xchg
inc
addr16
or
sub
gs
xor
outs
and
or
or
mov
adc
xchg
push
movs
and
cmp
cmp
lahf
adc
mov
mov
adc
arpl
add
pop
adc
adc
leave
mov
pushf
add
push
adc
add
in
pop
pop
sub
cdq
adc
ja
add
call
stos
sti
out
mov
xchg
cmp
jno
out
sahf
fcom
push
pop
aaa
mov
push
jl
(bad)
mov
test
push
adc
dec
adc
inc
and
sar
cli
inc
xchg
push
add
pop
cmp
mov
inc
push
adc
retf
jno
pop
and
jmp
mov
scas
cmc
mov
sbb
add
mov
inc
sub
push
inc
and
retf
retf
cmps
xchg
sub
and
idiv
mov
or
inc
or
loop
inc
inc
inc
sbb
popa
and
bound
jg
(bad)
mov
shl
fisttp
outs
xchg
(bad)
xchg
(bad)
retf
mov
pusha
add
in
xchg
rcl
ja
jp
xor
(bad)
cmc
mov
popf
add
dec
arpl
jge
cmp
mov
cld
fcomp
and
dec
or
(bad)
hlt
xchg
xor
cmp
test
lea
rcl
or
mov
(bad)
xchg
adc
push
adc
xchg
ret
nop
jp
call
dec
and
mov
mul
mov
xor
add
es
(bad)
out
xor
ins
aaa
test
les
retf
out
aas
push
data16
mov
pop
jp
dec
test
js
(bad)
fsubr
and
mov
xchg
xor
xor
lock
stos
cs
cld
inc
inc
dec
das
in
scas
ret
retf
mov
in
cmps
call
xchg
loop
ret
and
push
dec
adc
lahf
jecxz
ret
add
into
mov
das
outs
xchg
jp
in
aam
inc
dec
movq
stos
std
mov
mov
movs
cli
mov
(bad)
cmps
out
ja
jge
loopne
(bad)
and
movs
(bad)
jo
add
aad
scas
mov
jbe
int
mov
jge
push
xor
pusha
add
or
sbb
mov
leave
sub
xchg
inc
mov
mov
mov
hlt
mov
scas
jmp
stc
mov
test
push
sti
mov
add
xchg
mov
fadd
dec
cmp
ret
pushf
dec
jae
push
test
sar
pop
aas
icebp
lds
pop
push
dec
or
mov
xchg
movs
push
cmp
lods
into
mov
ds
adc
and
rcl
data16
xor
mov
add
std
scas
out
loopne
test
push
dec
and
sbb
fiadd
out
lods
cmp
enter
pop
popa
xor
int
imul
(bad)
and
lods
fidivr
mov
bound
out
lahf
lahf
cmp
add
mov
jnp
js
repz
mov
push
adc
sub
fistp
pop
cmps
and
add
jp
in
xchg
out
dec
pop
adc
mov
mov
sbb
cwde
sbb
pop
aaa
pop
aam
mov
and
mov
xchg
ror
push
fmul
scas
in
mov
into
mov
std
xchg
jns
and
cmps
cmp
iret
push
ins
dec
or
(bad)
leave
add
or
aam
xchg
jno
and
repnz
dec
jp
jns
clc
stos
jmp
xchg
mul
daa
xchg
jmp
in
adc
add
cmps
cmp
cmp
mov
xor
mov
scas
dec
inc
and
and
mov
movs
out
scas
pop
and
sar
jmp
(bad)
rcl
test
fisttp
mov
lahf
out
pop
outs
adc
std
mov
or
pop
aas
rol
aam
xor
cs
addr16
and
add
add
cld
cmps
in
fs
cmp
mov
pop
addr16
pop
mov
cmp
sbb
arpl
adc
ins
aam
ficom
stc
mov
dec
jno
inc
(bad)
movs
sbb
or
(bad)
leave
and
and
movs
enter
pushf
jns
cmp
xlat
rcr
out
(bad)
movs
xchg
push
xchg
fstp
ja
adc
jmp
nop
imul
cs
xor
movs
in
adc
inc
ins
ss
add
or
mov
dec
sbb
call
test
clc
(bad)
scas
call
jl
call
iret
adc
dec
xchg
cli
mov
int
int3
mov
pop
jb
dec
outs
das
fs
jmp
pop
pop
cs
fbld
cmp
jg
loopne
pop
clc
sub
push
inc
mov
cmc
xchg
xchg
cmp
mov
adc
sub
add
jmp
xchg
sub
cmp
mov
stc
mov
add
push
push
out
xchg
ror
mov
fimul
stc
repz
stc
sub
jle
xor
push
lahf
loopne
inc
sub
xor
enter
stos
call
je
ror
imul
ficomp
or
das
jmp
mov
push
adc
sbb
repnz
sti
stos
call
jge
inc
add
mov
jns
pop
pop
iret
lods
ret
xchg
dec
jns
pop
xchg
neg
inc
xor
cmp
inc
push
(bad)
scas
cmp
jmp
sub
lock
mov
sahf
imul
push
pushf
or
lock
jmp
mov
jmp
mov
ficomp
and
dec
or
sbb
adc
movs
cld
jge
(bad)
iret
into
aam
aad
cmc
test
call
xchg
dec
sbb
data16
cmp
hlt
fwait
rcr
dec
or
shl
stos
mov
jbe
aas
icebp
out
(bad)
adc
scas
into
mov
aas
arpl
dec
pop
push
jl
push
pop
sbb
scas
icebp
mov
jg
jl
adc
sahf
in
or
imul
xchg
(bad)
sahf
int3
jecxz
rcl
dec
push
aad
fidivr
fisttp
xor
add
test
in
xor
push
ror
scas
in
(bad)
out
test
enter
cs
push
scas
cmp
in
jmp
mov
push
or
mov
mov
xor
(bad)
mov
arpl
xlat
mov
sar
call
cmp
pop
and
(bad)
xor
push
or
nop
lock
popf
adc
lock
fld
out
retf
stos
mov
jg
sbb
lock
test
dec
popf
or
cwde
jmp
(bad)
lds
mov
mov
sbb
or
and
adc
mov
jp
pop
xor
clc
shl
retf
int3
or
cmp
push
ins
es
aad
xchg
cmp
out
mov
jmp
add
jmp
sub
adc
dec
sub
arpl
dec
or
mov
sar
add
dec
aaa
outs
jb
leave
test
shr
jg
(bad)
cmps
call
add
xor
mov
sub
mov
mov
push
sbb
test
stos
(bad)
push
mov
cmp
adc
add
jmp
call
repz
(bad)
push
gs
retf
pop
imul
ja
dec
mov
sar
cdq
jmp
int
out
mov
push
push
in
mov
dec
push
push
or
out
aad
test
(bad)
mov
adc
(bad)
mov
pop
imul
int
rol
xchg
inc
mov
push
sbb
adc
mov
adc
or
sbb
scas
in
out
mov
fsub
fcomp
ds
outs
inc
ss
adc
cmc
mov
mov
pop
pop
inc
push
and
bsf
stos
call
xor
sub
in
xchg
in
aad
pop
and
xor
imul
jecxz
jno
enter
bound
bswap
mov
test
cmp
add
xor
call
in
jl
pusha
and
fild
imul
ja
push
mov
dec
dec
jo
inc
stos
xor
adc
loop
inc
sub
xor
rcl
add
push
adc
sahf
in
push
jne
arpl
pop
pop
add
pop
adc
mov
mov
inc
push
cmp
cmp
and
sahf
adc
cli
test
jle
fbstp
push
add
stc
popf
ficom
jle
cmps
adc
enter
jo
fwait
cmc
xor
and
cmp
enter
xlat
add
cwde
std
mov
pop
pop
inc
aam
lahf
dec
fs
cmp
leave
mov
xchg
call
push
sbb
jmp
shr
enter
push
out
gs
lods
dec
add
mov
or
in
jp
cmp
cmp
(bad)
jne
or
push
pop
xchg
jmp
mov
fs
push
fcom
fiadd
mov
xchg
push
jl
sub
call
or
xlat
int3
mov
mov
xchg
shl
mov
sub
pop
aaa
jnp
cli
popf
rcr
add
iret
movs
xlat
jmp
add
stos
cli
mov
hlt
fld
scas
sbb
movs
adc
cli
mov
ret
mov
js
fimul
ds
pop
outs
sub
mov
mov
xchg
sbb
add
lods
or
out
in
dec
jbe
daa
adc
es
je
jnp
sbb
leave
lea
xchg
std
xchg
jns
push
sub
xchg
push
ja
aam
fisttp
xor
add
add
es
and
in
fdivr
mov
xlat
(bad)
fistp
add
mov
pop
mov
xchg
cmc
mov
push
push
pop
adc
push
pusha
and
std
mov
and
inc
adc
das
cmps
pop
jl
(bad)
(bad)
cmps
mov
outs
add
push
adc
sbb
shl
cmps
add
fcmovb
mov
pop
in
stos
cmc
and
retf
xchg
jno
not
out
cmp
hlt
mov
push
push
daa
xor
ret
sbb
cmps
call
push
scas
pop
sbb
or
mov
ret
sub
ja
dec
inc
ss
sub
mov
dec
cmp
fbstp
scas
xor
ficom
lahf
lds
icebp
in
(bad)
mov
inc
dec
or
jbe
ja
ror
mov
or
pop
sbb
mov
xchg
add
dec
mov
arpl
push
data16
dec
fnstsw
mov
xchg
push
xor
out
or
arpl
add
ret
cwde
xchg
cmp
add
jmp
je
adc
outs
sub
sar
mov
jmp
sub
jmp
js
push
sbb
sub
leave
lds
jae
call
mov
scas
jo
inc
stos
inc
xor
movs
adc
pop
cmp
xor
loop
stc
shr
imul
fnstcw
fsub
ds
sbb
mov
shr
pop
inc
push
popa
xor
and
loopne
push
inc
cmp
in
(bad)
cld
cmps
icebp
xchg
ss
repnz
cmp
inc
fwait
les
mov
cmp
ficom
(bad)
mov
bound
and
popa
imul
sbb
xor
cmovnp
adc
dec
mov
push
pop
jmp
and
xor
xchg
sbb
rcr
sahf
iret
outs
es
mov
popw
stc
int3
movs
(bad)
xor
dec
mov
(bad)
test
call
data16
pusha
mov
pushf
in
bound
pop
mov
shl
mov
sbb
stos
call
add
push
add
outs
test
stos
out
mov
fnsave
dec
sub
pop
xor
rol
nop
sar
xchg
hlt
mov
movs
cmovle
(bad)
xchg
fsub
push
jbe
or
sub
rol
loop
repz
xchg
xchg
pop
sbb
es
pop
jmp
test
arpl
lock
dec
test
dec
aad
(bad)
int3
and
stos
enter
mov
push
xor
popf
jo
pusha
jmp
or
mov
scas
ror
mov
xor
bound
call
push
ret
aaa
scas
jmp
addr16
xchg
pop
jae
add
in
movs
into
pop
movs
jmp
call
push
pop
sbb
add
pop
ins
push
or
(bad)
fdivr
shr
push
fs
sub
adc
rol
dec
and
push
imul
or
cmps
call
inc
xchg
push
adc
into
mov
adc
push
adc
test
pop
push
sub
sbb
jb
push
fisubr
jo
(bad)
mov
xor
punpckldq
push
or
sub
mov
sub
daa
test
inc
outs
dec
adc
mov
xchg
jmp
sahf
sub
or
(bad)
(bad)
nop
ja
push
pop
lods
pop
sub
push
lock
not
cs
mov
and
cld
mov
mov
push
dec
sub
mov
and
add
cmp
pop
ds
ss
idiv
mov
pop
(bad)
ret
or
ins
iret
adc
add
stos
jmp
sbb
mov
mov
cmp
mov
stos
in
mov
ins
std
sti
lods
in
jle
and
loop
mov
int3
neg
ss
jne
push
arpl
mov
int
retf
iret
mov
test
jnp
test
cmps
(bad)
or
inc
pop
adc
dec
cmp
(bad)
mov
xor
dec
or
jbe
je
ror
(bad)
icebp
pop
inc
or
shr
imul
mov
pop
outs
push
pop
xchg
cmc
stos
sti
out
mov
cwde
cmp
push
mov
gs
daa
or
pop
and
jp
inc
mov
imul
jno
aas
loope
pusha
lock
xchg
mov
inc
sbb
clc
mov
or
test
lods
pusha
jnp
sbb
fmulp
lea
push
lods
sub
mov
xchg
dec
test
dec
push
(bad)
fnsave
mov
iret
hlt
scas
stc
push
pop
das
dec
mov
ins
add
xchg
call
retf
sbb
ret
push
test
dec
adc
jecxz
shl
mov
fs
add
out
movs
out
test
mov
das
imul
push
mov
cmp
test
or
dec
jne
pop
sbb
scas
loope
es
dec
ja
cmp
pop
xor
daa
outs
add
push
dec
or
das
inc
push
int
jecxz
add
pop
bound
dec
mov
push
or
adc
cmp
xor
xchg
sbb
add
lock
(bad)
es
jmp
jnp
adc
fdiv
stos
in
inc
inc
dec
cmp
xchg
pop
rcl
mov
add
push
push
imul
scas
cmp
bound
mov
cwde
outs
dec
add
add
unpcklps
pop
add
lock
sbb
mov
ss
adc
in
mov
in
scas
jbe
es
push
jae
inc
movs
and
hlt
lods
loope
mov
dec
stos
or
out
mov
jbe
adc
aas
int3
test
or
(bad)
sahf
sar
xchg
enter
adc
div
test
ins
cmps
or
movs
in
scas
outs
and
int
add
ins
adc
push
push
and
ret
sub
aam
push
es
adc
stc
popf
fimul
fwait
call
sbb
lahf
retf
jle
pop
aaa
icebp
push
jg
fnstsw
test
mov
dec
sbb
rcl
icebp
push
nop
int
xchg
pop
ds
mov
and
or
aas
clc
mov
cmp
dec
sbb
ds
or
ds
push
pop
cmp
imul
xor
cli
ret
xchg
mov
cmp
ins
into
sbb
rol
and
sub
shl
aad
js
push
outs
pop
push
je
out
jmp
xchg
int
fcom
jb
push
mov
stos
loopne
test
lahf
inc
xor
mov
scas
loop
push
and
sub
add
push
fs
lds
pop
jg
ss
jmp
dec
add
sub
sbb
sbb
xor
push
mov
popf
loope
fs
adc
adc
stos
ss
sub
mov
xor
aam
outs
push
das
add
imul
clc
rcl
retf
lods
shl
mov
rcr
fdiv
mov
push
dec
jns
in
loopne
jmp
dec
cdq
call
cmp
mov
ret
mov
imul
xchg
dec
sub
loope
xchg
cmc
scas
js
es
stc
fdivr
add
(bad)
ficomp
add
xchg
push
add
xor
dec
cmc
sbb
cmp
in
jl
movd
stc
cmps
out
mov
fdiv
and
(bad)
mov
mov
add
in
xlat
xchg
jns
aaa
jnp
repz
or
push
test
scas
in
mov
push
pop
add
ret
and
scas
out
hlt
add
sub
retf
mov
jno
add
sbb
or
lods
not
ret
test
std
inc
lahf
sub
rcl
dec
inc
movs
retf
push
sub
mov
jne
cmc
fcomp
sti
ficomp
inc
scas
adc
clc
mov
scas
and
data16
fst
imul
push
dec
mov
gs
out
xchg
mov
jnp
or
xchg
shl
mov
test
push
inc
sub
sbb
mov
push
and
enter
jg
in
(bad)
fcom
mov
inc
and
cmps
jecxz
inc
push
adc
sbb
repz
xor
imul
pop
and
mov
pop
ffreep
clc
mov
inc
mov
aas
sub
lahf
les
mov
pop
(bad)
(bad)
mov
mov
inc
or
js
jle
mov
stos
call
cld
cmps
out
ss
sbb
or
xchg
cli
and
and
cmp
dec
sbb
jmp
inc
arpl
cmp
or
push
cld
pop
xchg
stc
fs
ds
sbb
in
scas
scas
mov
es
retf
xchg
jmp
xchg
les
test
adc
pop
xor
pop
sbb
inc
cmp
or
xchg
iret
in
mov
adc
dec
ja
dec
push
mov
sahf
ficomp
call
xor
adc
and
les
and
sub
arpl
jmp
adc
mov
test
hlt
in
ret
xor
adc
xor
cmps
(bad)
push
mov
add
int
retf
adc
stos
popa
jle
gs
jno
adc
push
rcl
dec
mov
adc
cmps
call
cwde
inc
and
cli
sbb
test
es
icebp
stos
dec
cmp
(bad)
test
adc
jmp
les
inc
add
dec
gs
xor
inc
sub
sbb
iret
mov
movs
dec
and
in
mov
push
mov
pusha
adc
out
lock
ins
pop
cmc
in
shl
dec
dec
and
shl
test
cwde
in
push
xchg
call
mov
jmp
pop
cmp
mov
mov
sub
mov
jp
dec
popf
add
xlat
test
loop
(bad)
or
mov
inc
outs
dec
bndldx
je
mov
fdivr
pop
pop
push
and
retf
jmp
mov
scas
xor
rcr
xchg
call
xor
test
(bad)
xchg
pop
sbb
test
iret
cmp
mov
ins
xchg
fidivr
add
cmp
adc
out
pop
xor
(bad)
xchg
inc
sub
mov
sbb
xchg
sti
repz
movs
pop
pop
fwait
xlat
in
xchg
int3
adc
and
stc
mov
cli
mov
mov
call
adc
xchg
rcr
pusha
pop
pop
mov
bound
ficomp
jb
pop
retf
sub
sub
mov
fisubr
push
fmulp
into
scas
test
call
call
mov
hlt
and
fist
int3
ror
xchg
dec
push
xlat
retf
cmp
xor
idiv
pop
mov
push
push
add
test
mov
and
imul
popa
enter
dec
stos
retf
mov
(bad)
mov
inc
xor
lds
fild
icebp
lods
sbb
mov
jne
in
xchg
iret
adc
inc
xchg
out
loope
xchg
clc
mov
lea
cwde
ficom
mov
mov
mov
test
dec
arpl
push
adc
or
sbb
xchg
repnz
mov
pushf
icebp
inc
jl
pop
mov
out
stos
xchg
and
adc
sar
adc
mov
mov
mov
jmp
iret
mov
push
pop
cli
rol
inc
pop
and
adc
xor
dec
and
ds
(bad)
mov
pop
mov
mov
push
ja
dec
add
daa
jne
mov
inc
daa
imul
pop
outs
and
enter
cmp
jo
push
and
jae
sub
aam
add
test
mov
out
lods
fbstp
fst
js
pop
adc
popf
outs
das
sub
rol
jo
dec
and
ror
shl
mov
inc
xor
int
retf
fist
push
cs
add
mov
sub
push
and
jae
xor
fisub
add
jno
imul
into
mov
pop
pusha
push
xor
daa
jnp
fldcw
cmp
out
mov
ficomp
cmp
std
in
sbb
pop
cmp
push
sbb
icebp
adc
adc
(bad)
or
loop
test
sub
lods
loope
popf
loop
jne
or
cmp
enter
cmp
stc
mov
(bad)
mov
popf
dec
inc
pop
adc
fsubr
dec
stos
cmovle
leave
les
push
in
test
cmp
sbb
(bad)
out
lahf
fisttp
data16
sbb
mov
test
push
xlat
sti
mov
jle
xor
sti
std
movs
into
out
imul
mov
xor
mov
(bad)
in
stos
inc
sub
jno
ror
push
icebp
sahf
loope
lahf
out
lods
xor
rol
(bad)
into
mov
pop
push
push
sub
xor
sub
fsubr
mov
ret
fsub
cmps
or
in
xchg
xchg
pop
mov
cmp
dec
or
cmps
sbb
movd
loop
mov
ds
nop
call
jne
cmp
hlt
mov
xchg
pop
inc
mov
mov
push
xor
lock
ins
xchg
loop
test
sahf
in
dec
fs
(bad)
es
cmp
fadd
add
ret
adc
cs
imul
jecxz
sub
popa
xchg
loop
shl
mov
bound
enter
pop
dec
dec
sbb
data16
inc
push
adc
cmp
sub
repnz
stos
dec
push
pop
aas
shr
jne
sbb
xchg
(bad)
fistp
pop
pusha
inc
cmp
push
jns
mov
into
and
arpl
gs
jo
xchg
inc
cmp
fisubr
cmps
and
rcl
lods
pop
jno
into
aad
loope
ja
pusha
xchg
std
add
loope
int3
movs
aam
mov
aas
cmp
fnstenv
outs
dec
push
in
push
popf
aad
je
push
cmp
mov
adc
xor
imul
in
aad
ins
jno
push
ds
or
jp
or
and
call
loopne
stos
fst
push
push
shl
mov
push
mov
arpl
repnz
test
add
fistp
sub
fld
nop
ins
lods
out
lea
and
jmp
dec
arpl
sub
(bad)
mov
jnp
push
adc
leave
mov
sub
lock
fsubr
or
mov
mov
mov
push
ds
aaa
arpl
pusha
stos
or
cmp
repnz
lea
xor
call
pop
push
dec
retf
cld
mov
mov
pcmpeqw
in
lds
adc
lds
jb
in
aam
popa
arpl
fs
xchg
fmul
popa
sbb
jg
sti
in
rol
mov
jge
stc
(bad)
cdq
sbb
into
retf
and
or
pop
inc
push
adc
mov
push
pop
inc
push
addr16
mov
pusha
xor
jnp
dec
or
jmp
and
aam
leave
popf
add
repnz
jns
outs
lahf
out
mov
xchg
xor
jge
pop
pushf
int
in
outs
ss
call
aam
je
dec
xchg
(bad)
mov
int
int3
mov
push
jne
dec
imul
fucomp
mov
pop
outs
xor
shl
sub
push
pop
inc
(bad)
jmp
or
sub
sub
mov
pushf
aam
sub
pop
popa
jge
sub
sbb
in
xchg
mov
add
loope
movs
mov
add
icebp
xlat
or
(bad)
loopne
xchg
daa
xchg
xlat
dec
call
cmc
not
cmps
mov
mov
inc
js
jl
(bad)
sti
stos
pushf
pop
xchg
rcl
data16
mov
adc
push
push
xor
jb
jae
xor
bound
cmp
(bad)
pushf
shl
mov
mov
ja
push
inc
sub
pop
ins
xor
mov
add
pop
enter
inc
add
shl
mov
xor
js
aad
scas
and
inc
mov
jle
iret
mov
scas
inc
add
mov
inc
sub
test
outs
(bad)
out
lds
jnp
push
imul
popa
and
sbb
adc
fwait
rcr
push
or
sbb
imul
rcl
mov
inc
cmp
xlat
retf
jae
push
mov
xchg
xlat
es
mov
js
push
fmul
adc
out
or
push
cmp
neg
mov
add
and
push
inc
add
leave
ficom
or
pop
pop
sub
stc
mov
push
out
cmps
out
stos
cli
mov
pop
pop
cs
sub
rcr
call
leave
hlt
aad
cwde
push
xor
dec
cmp
sub
mov
mov
adc
cdq
stc
cmps
xlat
std
test
inc
add
xchg
movs
das
addr16
cmp
lods
out
mov
xchg
out
pop
xor
adc
mov
push
gs
arpl
std
mov
into
mov
pop
popa
push
xor
and
sub
mov
out
aaa
xchg
out
cmp
ret
nop
cmp
pop
add
cmp
push
cmp
movq
adc
jle
sbb
shl
jl
dec
pop
adc
mov
inc
adc
jmp
mov
sub
dec
(bad)
adc
adc
cmp
or
xchg
fyl2x
mov
js
dec
or
sbb
in
pushf
add
pop
ja
sbb
daa
inc
(bad)
sbb
aad
out
je
or
cmc
scas
in
sub
jno
(bad)
mov
test
xor
xlat
mov
shr
test
ds
mov
adc
push
xchg
mov
mov
sub
icebp
shl
mov
pop
ins
pop
pop
fs
test
sub
(bad)
nop
loop
arpl
cmp
rcr
add
xchg
sti
mov
pusha
mov
sbb
shl
cmps
push
ins
into
sbb
or
sbb
add
cld
mov
and
xor
cmp
iret
call
test
jmp
mov
pop
es
add
enter
jg
dec
mov
xchg
loopne
jbe
adc
clc
(bad)
lds
pop
pop
stos
add
loopne
enter
sbb
jae
pop
push
cmps
and
adc
outs
jge
dec
imul
xchg
leave
(bad)
fcom
rcr
jg
inc
ins
pop
xor
sbb
mov
sbb
dec
sbb
mov
mov
push
(bad)
loop
cmps
repnz
sbb
jne
xor
pop
push
inc
mov
xchg
jmp
mov
cmp
in
mov
mov
or
sbb
test
add
push
cmp
and
leave
lods
(bad)
jecxz
int3
lea
outs
pop
jbe
daa
dec
or
xor
xor
js
jge
mov
jl
test
mov
dec
test
xchg
aad
inc
mov
ins
shr
mov
jbe
std
push
pusha
sahf
xlat
jnp
je
out
mov
and
rcr
inc
push
aas
xchg
(bad)
mov
repz
fsubr
inc
jns
jno
iret
retf
fwait
jle
push
adc
sbb
out
dec
inc
pop
pop
add
jmp
jmp
cwde
out
js
push
xor
push
jo
pop
xchg
aas
cwde
fiadd
call
ret
mov
aas
je
xor
rcr
jmp
pop
jns
pusha
loop
mov
mov
aad
mov
pop
dec
rcl
bound
push
int3
and
fidivr
ins
in
adc
jns
xor
div
dec
test
imul
fidivr
std
stos
hlt
xchg
pop
inc
ins
pop
xor
pop
adc
enter
dec
cmove
mov
popf
cs
aas
adc
mov
(bad)
nop
jns
dec
or
enter
mov
inc
or
idiv
inc
mov
pushf
out
pop
dec
and
sbb
int3
call
ja
cmc
repnz
push
or
sbb
lahf
shl
xor
jp
and
movs
adc
push
adc
push
into
sbb
push
(bad)
call
add
adc
into
pop
inc
and
sti
popf
shr
aam
cmp
ds
push
adc
cmp
sbb
jecxz
(bad)
movs
cli
fwait
add
lods
adc
movs
icebp
lods
loope
inc
and
push
popf
imul
jp
aaa
je
xchg
xchg
retf
(bad)
loope
fs
outs
popf
in
jmp
mov
ds
or
in
scas
xor
inc
push
sbb
scas
or
data16
or
mov
inc
and
fs
add
dec
xor
mov
je
or
sub
push
out
sub
add
lock
xor
ret
and
and
data16
sbb
or
jecxz
sahf
xchg
adc
leave
and
pop
pop
icebp
cmc
test
push
jns
ins
mov
adc
test
xchg
ja
es
scas
pop
pop
cmp
mov
mov
mov
inc
es
push
addr16
fidiv
sub
or
adc
adc
sub
mov
mov
push
pop
sbb
mov
pushf
rol
sti
out
repnz
inc
mov
scas
dec
pop
std
add
lods
into
dec
bound
ret
stos
test
ds
sub
aaa
lods
in
mov
jnp
push
push
or
dec
or
clc
(bad)
les
mov
mov
push
je
cdq
gs
sub
daa
call
pop
cwde
retf
in
mov
xchg
in
dec
and
sbb
into
call
je
retf
ret
xor
ja
and
loop
popa
outs
xor
out
(bad)
data16
dec
cmps
sub
pop
push
loopne
sbb
jne
cmp
mov
(bad)
lods
jmp
stos
call
mov
outs
or
je
sub
add
add
aam
xchg
cmps
pop
add
sar
(bad)
lods
add
inc
push
pop
sbb
hlt
stos
repz
rcl
push
bound
jno
mov
mov
inc
je
dec
or
lds
fwait
cmp
js
je
mov
cmps
ret
xchg
call
inc
ins
dec
es
ja
pop
sbb
cs
push
dec
xor
add
jbe
pop
xchg
cli
movs
(bad)
std
test
pop
adc
adc
push
jl
cmp
sub
mov
cmp
cmp
les
iret
(bad)
lea
sub
leave
xlat
xchg
ins
ja
pop
sbb
mov
xor
shl
add
std
mov
cmp
jb
dec
sbb
xlat
test
inc
jg
das
adc
stos
stc
mov
xor
out
lods
in
inc
es
in
test
xor
push
pop
add
ret
and
cwde
enter
or
adc
repnz
popf
jne
adc
stos
add
adc
jne
shl
mov
xor
retf
mov
stc
xchg
bound
adc
scas
jg
pop
jmp
iret
mov
xor
stc
mov
cli
fcom
and
push
adc
loope
addr16
ins
xor
int3
fisttp
xchg
ds
xor
div
mov
pop
(bad)
sbb
cmovs
jmp
sub
pop
(bad)
lds
xchg
inc
dec
ss
frstor
dec
or
push
pop
pop
adc
dec
add
push
pop
pop
add
jmp
mov
sub
(bad)
and
push
jl
fnsave
lods
or
add
loop
popf
jno
es
or
pop
xchg
inc
and
mov
xchg
repz
inc
sub
test
fbstp
mov
xchg
shl
ja
outs
sub
rol
addr16
mov
stos
es
dec
inc
aaa
fs
imul
imul
adc
and
cmp
repnz
cwde
fisttp
das
jbe
stos
push
jle
(bad)
lock
push
jl
popa
and
mov
mov
xchg
daa
xchg
aam
pop
inc
xor
stos
jmp
mov
push
push
push
loopne
js
push
iret
mov
xlat
retf
mov
mov
pop
mov
mov
das
fcomp
mov
pop
xchg
cli
stos
mov
loop
inc
add
into
aad
xchg
or
adc
cmp
jmp
movs
and
pusha
fcomp
jno
xlat
cmps
rcr
les
pusha
pop
pop
pop
mov
inc
add
push
das
jle
int
mov
sub
inc
add
outs
mov
imul
jg
jmp
xchg
ja
sub
adc
mov
and
mov
push
jns
xor
adc
sbb
and
jno
rol
inc
adc
jecxz
jecxz
pushf
out
test
pop
adc
leave
pushf
rcl
push
xor
clc
lahf
iret
in
retf
jo
jbe
(bad)
mov
jb
or
mov
cwde
inc
inc
cmp
(bad)
fisubr
push
mov
inc
or
cdq
iret
xchg
data16
dec
fisub
dec
push
adc
sub
mov
movs
push
sub
and
pop
mov
jno
retf
jmp
mov
mov
sub
scas
setbe
xor
xchg
leave
inc
jne
cmp
(bad)
jmp
ja
(bad)
movs
stc
sbb
pop
nop
(bad)
fisubr
push
xor
jns
adc
repnz
sbb
dec
mov
stos
repnz
mov
clc
or
out
lods
inc
gs
in
ret
push
mov
popf
pusha
xchg
mov
adc
cld
dec
mov
leavew
lock
jge
adc
fisub
aas
pop
jae
inc
daa
leave
test
enter
adc
push
sub
and
test
mov
(bad)
adc
icebp
test
sub
into
add
fmul
xor
mov
add
add
pop
inc
or
pop
mov
sbb
stc
mov
sbb
imul
xchg
or
jmp
mov
xor
xchg
loopne
jne
adc
sbb
jmp
lea
mov
mov
call
repz
push
pop
push
lahf
push
fistp
gs
sub
rcl
loop
leave
cmp
mov
push
and
mov
movs
not
das
jns
fucomp
mov
(bad)
mov
push
xchg
in
je
out
mov
mov
aas
pop
or
adc
sbb
in
add
xchg
push
add
loope
cld
retf
xchg
aad
cmp
jnp
and
jmp
inc
es
fldcw
rcl
adc
(bad)
arpl
iret
mov
or
dec
daa
push
jo
cs
jno
push
dec
outs
xor
mov
inc
and
push
imul
cmc
scas
in
adc
or
mov
scas
and
rcr
xchg
pushf
(bad)
sbb
push
jg
jb
jecxz
mov
popw
sti
icebp
test
dec
xchg
sub
cmp
aam
mov
cdq
mov
retf
xor
int
fcom
sti
mov
dec
sub
push
adc
and
ret
mov
push
mov
(bad)
mov
push
mov
fst
aad
pushf
jecxz
cli
lods
loopne
iret
fmul
cld
xchg
repnz
cmc
scas
fistp
sbb
adc
push
cmp
sub
jo
pop
sbb
jbe
pushw
dec
and
imul
pop
sbb
inc
push
push
and
movs
sbb
pop
adc
push
jp
jl
jge
pop
sub
xor
jo
imul
adc
jbe
pusha
add
or
dec
pop
sub
pop
ja
sub
inc
sub
jle
dec
add
cmp
push
ss
or
xor
inc
pop
cmp
jle
fiadd
(bad)
xchg
enter
les
jmp
movs
cld
(bad)
mov
mov
jae
test
pop
jo
pop
test
lods
fisub
push
adc
and
shl
mov
cmp
jmp
push
cmp
retf
cmp
pop
aas
repnz
mov
jbe
inc
cmps
pop
jle
(bad)
clc
mov
and
dec
add
fnstenv
push
sub
mov
mov
push
cmp
or
add
dec
push
movq
test
xor
add
nop
dec
pop
das
pop
call
dec
mov
inc
sub
cli
movs
stc
sub
or
mul
sahf
push
aaa
dec
cmp
mov
mov
sub
add
stos
loopne
pop
daa
arpl
ja
std
xchg
jbe
pop
sbb
lock
mov
into
pop
add
mov
mov
mov
add
call
test
jno
add
mov
xor
mov
lods
cmp
call
mov
jnp
push
and
dec
pop
ds
and
aad
add
jno
out
jmp
mov
mov
fcomp
pmullw
stos
adc
and
push
pop
retf
xor
jmp
mov
leave
sbb
aam
lods
push
xor
not
jae
cs
dec
mov
inc
jmp
addr16
push
ficom
mov
aam
xchg
shr
mov
imul
out
sbb
jo
in
push
ins
jmp
and
pop
loope
lods
movs
push
or
xor
mov
int
xchg
adc
jnp
xor
cmp
cdq
call
cmp
add
cwde
mov
mov
aas
mov
(bad)
out
dec
xchg
cmc
test
and
nop
(bad)
xor
inc
cmp
(bad)
int
imul
out
lods
in
pop
dec
jns
repnz
jmp
mov
xor
and
jmp
jne
adc
inc
pop
(bad)
jmp
loope
stos
add
pop
ss
rol
rcr
jo
pop
pop
stos
div
aam
mov
nop
daa
jno
outs
mov
and
inc
or
iret
ficom
push
sub
repz
loopne
inc
sub
dec
subps
imul
mov
fs
mov
cwde
xor
ja
loop
into
cmp
ror
int3
mov
mov
jo
and
jmp
es
aaa
ja
sub
les
imul
imul
mov
jbe
adc
(bad)
mov
xchg
push
xchg
leave
ins
mov
sbb
and
dec
sbb
adc
std
sub
sub
mov
xchg
xchg
movs
(bad)
scas
cmp
je
and
cmp
mov
jge
in
xchg
xchg
xchg
(bad)
loopne
xlat
xor
fadd
in
rol
fcom
fiadd
rcl
fwait
shl
mov
sti
mov
mov
movs
in
mov
fist
repnz
loopne
dec
jmp
lahf
fild
push
dec
or
push
cwde
fidivr
out
mov
imul
repz
xlat
xchg
fisubr
shl
idiv
int
sar
mov
mov
clc
popf
aad
lock
adc
jmp
mov
mov
rcl
xchg
test
mov
scas
jmp
rcr
sahf
mov
sbb
mov
cs
test
dec
mov
aaa
retf
loopne
lods
fistp
ds
xor
lea
xchg
xor
les
xlat
mov
out
jp
je
sbb
fidivr
jle
jmp
popf
(bad)
aaa
xchg
int3
xchg
xchg
out
xchg
into
cmp
ds
int3
mov
pop
push
or
mov
mov
lea
add
mov
inc
pop
or
repnz
add
and
jmp
xchg
je
shr
sub
cwde
jmp
fs
movs
sbb
pop
dec
sub
mov
mov
loop
mov
aaa
xchg
popf
daa
ja
jg
retf
or
dec
cs
popf
adc
scas
loopne
xchg
adc
fdecstp
test
inc
movs
aaa
data16
jmp
fwait
jp
xor
sub
jmp
in
adc
mov
inc
jl
jne
sub
sub
lock
and
movs
mov
xor
jl
sub
jp
sbb
inc
loope
xchg
fstp
jb
pop
xchg
sub
(bad)
test
dec
dec
push
add
cli
clc
nop
inc
je
or
jmp
mov
aas
stos
cmp
sub
pop
fadd
(bad)
(bad)
xchg
xor
jecxz
mov
jp
or
dec
les
mov
and
mov
dec
(bad)
aas
dec
retf
sbb
jl
or
push
adc
add
mov
dec
sahf
in
push
(bad)
mov
mov
pushf
or
add
adc
test
ins
push
push
ret
rep
call
outs
cmc
repnz
mov
pop
pushf
in
or
imul
icebp
test
add
mov
mov
fsubr
lods
in
push
push
push
and
mov
sbb
loop
cmps
pushf
adc
add
(bad)
mov
xchg
retf
mov
cmp
add
ror
int3
push
dec
sub
call
adc
adc
icebp
mov
push
pop
sbb
mov
xchg
aad
mov
mov
or
pause
ret
ror
cs
out
lods
push
inc
add
jne
push
sbb
sbb
adc
ror
mov
not
mov
call
pusha
daa
inc
mov
xchg
aam
dec
ss
dec
(bad)
loope
jo
jb
add
test
out
fcomp
xchg
stos
call
cmp
sbb
adc
lds
or
mov
mov
mov
fistp
jge
add
sub
sub
pop
add
push
fs
idiv
ins
fs
jns
push
je
hlt
cmp
jno
adc
xchg
fisttp
imul
pushf
jle
es
push
push
push
or
idiv
xchg
jecxz
scas
ror
ret
xchg
(bad)
out
mov
mov
loopne
xchg
sti
mov
xchg
out
aam
iret
pushf
shl
ret
mov
div
or
dec
adc
jo
push
adc
and
push
sub
or
cwde
in
mov
shl
shl
cmps
in
xor
loopne
leave
mov
(bad)
fwait
cmc
mov
fidivr
std
(bad)
pop
and
push
daa
addr16
add
jp
pop
and
fst
retf
xchg
lock
in
shl
fstp
jb
ins
add
outs
or
xchg
nop
jecxz
xchg
arpl
pop
mov
sbb
clc
or
or
cld
xchg
fistp
or
into
mov
scas
imul
test
bound
push
xchg
fcom
cld
movs
dec
es
adc
test
std
fcomp
add
sub
xor
fisub
jno
adc
sbb
imul
push
push
pop
(bad)
test
jnp
xor
into
fdiv
mov
or
cli
or
cmp
add
int
mov
daa
mov
adc
mov
inc
or
loop
xchg
pop
dec
aas
jnp
icebp
mov
out
rol
inc
xchg
mov
add
bound
xor
adc
repnz
jecxz
cwde
std
pop
push
ds
(bad)
cli
lds
and
ficom
sbb
sbb
repnz
pop
lea
inc
mov
addr16
or
int
repz
out
sbb
mov
cs
into
js
cmp
clc
scas
cld
dec
mov
je
loopne
mov
jnp
aas
ins
in
sbb
dec
sub
retf
aad
and
int
daa
jns
bound
sub
pusha
cmp
loopne
pop
sbb
xchg
in
and
inc
jle
push
icebp
(bad)
aad
aam
test
sbb
adc
add
cs
lahf
js
pop
cmp
inc
adc
(bad)
xchg
test
icebp
sub
iret
scas
int3
lock
call
xor
pop
sbb
out
(bad)
lods
in
cmps
aas
jo
outs
inc
xor
in
xor
add
in
test
jbe
add
add
leave
jmp
cwde
ins
arpl
sbb
xor
daa
mov
jp
push
cmp
mov
dec
sub
mov
xor
bound
imul
mov
dec
sar
shl
jecxz
scas
jmp
arpl
mov
scas
push
pop
cmps
xor
scas
xchg
push
sub
adc
xchg
clc
pop
popa
push
push
lock
stos
(bad)
xor
sbb
jecxz
stos
jne
adc
call
jmp
movs
icebp
test
jge
sbb
test
push
push
xor
rcr
les
popa
adc
cwde
jmp
enter
lea
sub
pop
pop
sbb
adc
stos
pop
sub
(bad)
mov
push
bound
gs
and
addr16
adc
adc
xor
mov
push
ss
movs
loopne
inc
pop
add
xchg
inc
add
cmps
sbb
adc
std
mov
jo
sbb
xor
adc
out
add
xlat
xchg
jae
fsubr
and
ss
jecxz
fs
add
add
not
pop
sbb
sbb
or
mov
sub
out
retf
pop
mov
xchg
es
das
outs
sub
push
ja
sbb
push
adc
outs
ds
jg
jle
pop
das
push
inc
add
imul
adc
ja
ins
add
ins
add
ja
ins
sub
popa
daa
jbe
push
sbb
and
ins
sub
inc
add
bound
dec
or
jno
pop
or
cmp
ja
push
and
ds
push
jl
addr16
ja
pop
xor
cmp
inc
pop
adc
push
pop
pop
jbe
inc
adc
inc
daa
push
dec
push
dec
sub
xor
ja
jnp
jnp
cwde
in
mov
(bad)
mov
xchg
fst
fidivr
in
inc
imul
call
movs
(bad)
xlat
jecxz
into
cmp
mov
pop
popf
rcr
jnp
ret
nop
bnd
push
sbb
push
or
in
lds
jno
es
int
mov
mov
mov
imul
cli
(bad)
xchg
les
outs
push
inc
mov
xchg
loopne
pop
and
sub
hlt
and
jp
xor
arpl
adc
cmp
fbstp
mov
daa
xchg
stos
inc
and
pop
adc
mov
test
into
test
xchg
add
add
sbb
dec
or
aam
call
fdivr
out
jmp
mov
jge
repnz
xlat
(bad)
mov
(bad)
popaw
pop
xor
out
sar
mov
mov
aaa
mov
push
aam
aam
jbe
dec
add
mov
dec
(bad)
(bad)
sahf
jl
cli
cwde
ja
cmp
sbb
scas
call
leave
repnz
out
lods
in
lahf
push
dec
mov
mov
mov
jns
in
mov
xchg
adc
rcr
jbe
sub
sbb
jmp
push
shl
add
fistp
pop
xor
add
leave
rol
sub
add
mov
mov
jecxz
sti
stos
push
daa
inc
add
out
mov
jae
push
cmp
jnp
in
outs
scas
sub
cmp
xor
fwait
das
outs
in
and
out
mov
inc
add
ins
push
or
push
push
or
add
fnstenv
les
and
xchg
sbb
rcl
sbb
push
jns
sub
xor
push
and
dec
or
mov
jne
add
mov
ins
cld
pop
xchg
(bad)
pop
js
sbb
in
xor
inc
int3
test
pushf
xor
jecxz
mov
mov
retf
aad
retf
and
les
cld
mov
or
iret
mov
mov
mov
or
gs
sub
sbb
in
push
jmp
aam
test
mov
inc
pusha
dec
cmp
mov
adc
sbb
xor
push
jle
imul
shr
pop
pop
pop
push
fs
sub
popa
adc
push
dec
aas
not
xchg
sub
jmp
add
sbb
movs
adc
xlat
int
in
sub
sub
fnsave
mov
(bad)
test
and
sbb
cmovle
movs
in
push
jp
imul
dec
xchg
sbb
(bad)
int3
adc
xor
loopne
rcr
adc
das
movs
sbb
jmp
cmps
retf
neg
in
out
xchg
mov
mov
adc
loop
pop
push
jmp
inc
push
not
jae
pop
fnsave
ret
iret
fwait
push
aad
in
dec
mov
cmp
pop
nop
enter
(bad)
xchg
sti
mov
mul
retf
test
fistp
loope
repz
fild
iret
mov
vpcomw
xchg
xchg
mov
mov
mov
cli
mov
mov
add
dec
or
dec
add
jnp
imul
and
jecxz
shl
retf
xchg
mov
enter
icebp
mov
retf
mov
fidiv
fistp
shl
shl
hlt
pushf
aad
aad
sbb
push
or
cmp
dec
ds
pop
sbb
add
sub
mov
or
mov
sbb
mov
ins
fadd
pop
(bad)
and
aam
scas
dec
inc
add
pop
pop
cmp
add
and
cmps
ja
or
mov
mov
pop
sub
aas
dec
aas
idiv
mov
mov
cld
int
loop
mov
and
nop
loop
jl
adc
int3
ficom
mul
(bad)
sub
mov
popa
cmp
lock
int3
cmp
pop
sbb
test
ss
div
inc
xchg
loopne
out
pop
fs
dec
xor
ror
xchg
push
xchg
jmp
or
ds
popf
push
push
cmp
ret
xchg
repz
pop
mov
inc
xor
mov
push
movs
pop
and
mov
inc
ss
xlat
sar
cmps
jo
xor
(bad)
shl
dec
xor
(bad)
xor
fsubr
hlt
repnz
push
cmc
into
int3
lea
adc
rol
sbb
or
stc
(bad)
movs
mov
jb
jmp
outs
add
aam
addr16
add
call
xlat
jl
or
adc
jne
add
xor
sbb
xchg
(bad)
mov
shl
pop
aas
dec
add
pop
jno
int3
aam
out
push
jl
fs
(bad)
iret
jecxz
out
pop
and
test
or
adc
movs
leave
jae
ds
int
dec
or
adc
pop
jmp
pop
sbb
add
mov
mov
lods
loope
mov
lods
dec
dec
cmp
aam
(bad)
arpl
shl
outs
pop
and
add
mov
js
inc
mov
fcomi
cwde
mov
lahf
sub
push
aam
mov
jnp
push
test
or
xor
jmp
mov
dec
stos
ds
mov
add
xchg
aam
dec
inc
or
push
fs
pop
(bad)
cli
lods
fild
lea
push
ret
enter
popa
inc
sub
mov
dec
sub
test
pop
sub
rcr
sahf
mov
jle
dec
pop
push
aas
leave
fidivr
sbb
sbb
xchg
ja
inc
add
lock
inc
cs
shl
dec
pop
shr
add
jmp
cmp
out
xor
push
bound
jb
add
int
jmp
jno
or
or
movs
ds
adc
movs
sbb
or
loop
inc
dec
push
push
scas
pop
imul
push
add
daa
sahf
into
mov
adc
add
mov
sahf
inc
push
cmp
inc
and
push
bound
(bad)
test
test
aaa
inc
xchg
(bad)
iret
jp
cmp
(bad)
sbb
and
push
nop
add
sti
xor
mov
sbb
xor
sbb
hlt
xor
or
mov
stos
mov
sbb
push
xor
fisttp
imul
mul
mov
pop
inc
pop
or
outs
sub
xor
push
jne
inc
push
outs
das
pop
push
inc
or
popa
or
popw
dec
punpcklwd
jns
jp
jp
cwde
jmp
mov
xchg
ficomp
aam
out
test
mov
mov
icebp
mov
pop
ds
push
push
dec
cs
push
xor
xor
jnp
cdq
in
mov
fistp
retf
stos
sti
mov
in
std
mov
icebp
mov
cmps
(bad)
mov
lods
out
mov
mov
hlt
mov
mov
cmp
je
dec
add
addr16
add
jns
push
xor
jl
sbb
jmp
add
in
lods
int3
ss
movs
rcl
scas
in
push
xor
adc
or
push
popa
add
aam
xchg
aas
out
cld
shl
or
aas
dec
mov
ins
cmp
inc
sbb
retf
test
xor
xor
in
fmul
ja
inc
mov
das
push
call
mov
jo
adc
icebp
xchg
fist
fwait
hlt
cmps
nop
add
fwait
dec
cs
or
clc
mov
pop
dec
xor
push
jno
clc
(bad)
mov
xchg
cdq
jmp
ror
xchg
stc
mov
mov
stos
jmp
and
dec
adc
add
jns
(bad)
fisttp
cmps
fwait
xor
in
pop
es
in
in
mov
pop
jle
outs
ret
fdiv
mov
(bad)
jb
xor
cli
xchg
jl
dec
sub
add
xchg
push
add
jecxz
jno
in
push
out
test
into
dec
jmp
sbb
ds
sub
push
sahf
mov
mov
cs
inc
pushf
lods
pop
adc
std
int
int
inc
cmp
or
mov
inc
outs
mov
loope
pop
dec
mov
loop
push
dec
adc
and
adc
inc
enter
repz
add
mov
mov
mov
xchg
inc
push
movs
test
ret
sub
or
jmp
add
ror
mov
imul
mov
push
icebp
fmul
sar
sub
mov
mov
std
retf
gs
push
(bad)
loopne
push
or
outs
imul
jo
out
sub
clc
xor
test
xor
xor
mov
mov
and
pop
mov
retf
pop
dec
add
mov
and
daa
xchg
mov
icebp
(bad)
ffreep
aad
in
adc
sbb
jp
push
in
ret
daa
out
int3
je
dec
out
cmps
je
bound
xchg
push
inc
push
popf
push
leave
and
cli
fnstenv
rcr
cmp
push
outs
dec
pop
lea
sbb
inc
xchg
inc
retf
dec
mov
test
sbb
push
cmps
popa
pop
in
sahf
fmul
(bad)
dec
scas
repz
out
and
mov
inc
mov
add
out
jae
fidiv
outs
scas
loopne
push
or
push
daa
jge
mov
cmc
add
mov
dec
cmp
dec
mov
mov
ret
dec
push
jbe
cmp
mov
jmp
imul
jge
and
mov
sbb
loope
mov
icebp
sub
inc
mov
js
fwait
cld
int3
mov
mov
sub
in
inc
jae
jp
lods
jle
and
test
loopne
sub
xor
xchg
dec
xor
cmc
rcl
ret
push
sub
adc
jg
lock
sub
test
bsf
hlt
cmp
xchg
pop
xor
cmps
mov
scas
xchg
sbb
xor
and
mov
inc
pop
cli
jnp
push
call
add
xchg
jmp
arpl
loop
xor
mov
jbe
aad
stos
fsubr
lods
xlat
fdivr
jmp
fdiv
sub
icebp
popf
cdq
das
mov
push
jmp
xchg
xchg
xchg
dec
cmp
ds
jle
mov
in
push
out
lahf
mov
ins
pop
pop
(bad)
shl
inc
retf
fldenv
jmp
ja
or
addr16
fs
pushf
test
mov
outs
pop
jg
or
pusha
mov
add
jb
test
lods
jmp
out
adc
mov
cmc
push
and
mov
adc
(bad)
pop
jl
xor
fsub
inc
test
sti
data16
daa
add
xchg
push
mov
or
(bad)
pop
repnz
retf
mov
stc
daa
jmp
ja
push
mov
daa
cmp
mov
and
mov
and
xor
mov
fild
inc
imul
test
sbb
add
jl
sbb
sub
jno
jl
lahf
adc
nop
imul
scas
lahf
or
stos
push
mov
inc
xchg
test
(bad)
(bad)
mov
cmc
add
push
hlt
and
add
in
mov
pop
pop
xchg
mov
idiv
push
mov
cmp
dec
aam
lods
(bad)
pop
dec
in
xchg
stos
or
cmp
xchg
xor
std
stos
xor
mov
lods
xchg
scas
dec
cmp
inc
jno
pop
adc
mov
dec
gs
pop
xor
jge
push
jnp
push
int3
frstor
xor
xchg
cmps
or
xchg
not
push
pop
imul
adc
mov
sub
xor
push
mov
push
jbe
clc
inc
mov
xor
xor
mov
or
gs
pop
jmp
in
lahf
push
js
inc
xchg
int
mov
push
push
inc
dec
pushf
mov
mov
fxch
fs
xor
pop
dec
or
inc
sbb
data16
iret
iret
mov
pop
pop
ror
out
nop
mov
cli
ja
fs
xchg
stos
and
call
adc
dec
rol
lods
imul
lods
push
xchg
adc
loopne
or
push
addr16
fcomi
cdq
or
hlt
jg
imul
clc
dec
div
enter
xchg
pop
jp
ror
and
test
push
adc
lods
dec
and
and
sbb
lahf
cmp
cs
and
jg
lods
add
jns
ret
or
call
pop
cmp
cmps
(bad)
and
push
pusha
addr16
pop
push
invd
mov
cmps
sub
rol
mov
dec
int3
mov
push
mov
mov
add
loope
loop
lea
and
push
fcomip
imul
dec
pop
push
push
mov
jle
pop
xchg
or
adc
fdivr
jle
xchg
cmp
rcr
jp
cmp
mov
js
dec
add
jo
push
inc
stos
js
cs
lock
jo
mov
setae
cmps
popa
es
neg
ins
xchg
pop
cmps
and
aam
push
std
inc
jno
xchg
push
punpckhbw
pop
pop
push
pop
dec
inc
mov
push
dec
jg
jmp
xchg
or
cmps
ja
scas
test
aam
outs
bound
sti
sub
xor
outs
jb
jbe
call
jns
pop
sar
sbb
cdq
jbe
cmp
push
push
bound
xor
addr16
cs
or
mov
idiv
jp
ins
xchg
inc
xchg
fadd
in
fldenv
gs
dec
popa
add
push
test
mov
inc
out
icebp
loope
in
cld
dec
cld
pop
cmp
jns
sbb
data16
inc
sbb
cmovne
xchg
jl
push
mov
cmp
mov
loope
sub
xor
mov
dec
mov
mov
sbb
mov
sub
std
pop
push
sar
add
retf
fs
enter
fwait
sbb
es
cdq
pop
ds
out
out
push
mov
mov
jl
test
mov
xor
mov
dec
(bad)
enter
xor
sbb
mov
dec
sub
lods
lods
fsubr
add
pop
in
dec
call
aam
or
push
daa
loope
int3
adc
clc
repnz
paddq
pusha
push
mov
movs
jge
push
mov
aaa
pop
push
hlt
dec
scas
call
call
pop
mov
xchg
sbb
cs
aam
bound
int
pop
call
jae
pusha
push
cdq
ins
div
mov
adc
out
stos
add
int3
bound
out
enter
cmp
or
clc
bound
or
xchg
stc
xchg
mov
mov
fwait
ins
pop
retf
mov
call
xchg
(bad)
mov
cdq
inc
adc
xor
stos
(bad)
lea
call
xlat
fnsave
sbb
int
leave
adc
call
loopne
shl
sub
jge
imul
enter
in
jne
mov
cs
jo
outs
mov
inc
sub
push
popf
test
pop
xchg
mov
jae
sbb
repnz
imul
test
adc
movs
test
loopne
mov
imul
imul
xchg
pop
rol
retf
icebp
pop
call
retf
test
add
sub
in
or
(bad)
mov
cli
pop
(bad)
aam
cmp
jo
mov
leave
imul
into
stc
xchg
mov
test
mov
xchg
ins
push
sbb
inc
pop
sbb
jo
fstp
fwait
dec
pop
xor
mov
cmp
call
pop
inc
rol
dec
xchg
jg
pop
addr16
xchg
or
dec
paddusw
loopne
sbb
and
(bad)
cld
ror
cli
mov
outs
mov
adc
enter
out
cmps
mov
data16
pop
pop
or
icebp
sub
call
es
(bad)
(bad)
aad
in
adc
pop
retf
aaa
mov
aad
pop
adc
and
inc
in
jne
sub
xor
dec
sub
sbb
jmp
lds
in
cld
aaa
in
push
push
bound
pop
dec
xchg
rcr
pop
test
out
lock
adc
cmp
cmp
push
jmp
pop
add
adc
scas
mov
das
ret
push
mov
adc
imul
aad
mov
mov
aaa
pop
jecxz
mov
cli
cmovb
addr16
lea
sbb
(bad)
xchg
scas
pusha
mov
imul
pushf
pop
hlt
adc
push
retf
add
jg
jl
or
test
inc
adc
inc
jnp
adc
push
mov
mov
idiv
dec
push
popf
jno
xlat
sub
outs
shl
ret
outs
rol
je
lds
jmp
jae
mov
pop
sub
jno
or
aad
and
inc
xor
dec
in
in
(bad)
and
mov
gs
mov
inc
pop
sub
addr16
jb
add
js
jle
adc
loope
push
stos
mov
sub
hlt
or
mov
into
mov
dec
mov
test
xchg
sub
push
lods
xchg
sahf
shl
enter
push
inc
cmp
add
mov
nop
ss
xchg
mov
push
pop
inc
pop
sub
adc
mov
popf
cmp
cmp
mov
dec
cmps
pop
ja
push
xor
cli
dec
repnz
pushf
lahf
retf
jmp
stos
push
push
xor
mov
gs
scas
mov
push
lods
iret
xchg
sub
outs
out
xchg
pusha
(bad)
jbe
ss
push
cld
or
shl
push
jns
imul
rol
aas
cld
dec
je
movs
stc
add
xchg
sbb
xor
test
gs
dec
jle
sbb
xchg
or
xlat
adc
adc
push
mov
jno
push
add
mov
jmp
aad
xchg
test
jmp
mov
mov
aam
mov
fldz
cdq
or
outs
bound
or
jmp
dec
push
int3
or
cld
faddp
arpl
in
push
mov
xor
sbb
pop
popf
mov
call
or
mov
stc
adc
sub
int3
data16
leave
aad
cs
hlt
adc
push
stc
mov
add
cmp
idiv
jge
pop
add
call
mov
in
dec
lods
sbb
enter
or
adc
and
xchg
test
push
fs
adc
sbb
mov
pop
jle
aas
jo
pop
dec
cmp
cmc
sbb
repz
add
pusha
aas
(bad)
cs
xor
out
mov
(bad)
cmp
or
xchg
inc
fwait
jl
arpl
pop
push
jle
mov
arpl
mov
ss
jbe
(bad)
sar
add
adc
and
repnz
adc
rcl
or
cmp
stos
not
sbb
and
inc
sar
aas
in
ins
pop
test
shr
or
xchg
ficom
xchg
jbe
dec
sbb
sub
mov
inc
lea
rcr
in
hlt
xchg
mov
js
clc
idiv
jle
addr16
jns
fimul
fiadd
enter
in
int
jle
fistp
jno
loopne
ins
leave
or
fwait
mov
add
mov
adc
xlat
call
push
fsubr
xchg
ror
cs
push
cmp
mov
sbb
jl
adc
call
cmp
xchg
xlat
cwde
and
sbb
daa
lods
dec
stos
mov
fadd
or
sub
test
pop
dec
sbb
lea
inc
and
pop
call
ins
xchg
inc
in
pop
fnstsw
mov
push
and
les
sbb
inc
pop
out
cmc
inc
lock
les
mov
in
es
pop
adc
xor
push
push
inc
cdq
out
test
addr16
sub
dec
dec
(bad)
add
or
add
mov
mov
fisttp
adc
popf
dec
dec
movs
mov
(bad)
sbb
sbb
mov
and
or
pop
sbb
sub
sbb
sub
xor
adc
jg
test
mov
retf
dec
sbb
xchg
dec
mov
push
scas
nop
ret
mov
mov
cmp
xor
jmp
(bad)
fmul
mov
ins
sub
gs
(bad)
cli
sbb
(bad)
ins
hlt
mov
inc
mov
mov
push
adc
mov
or
mov
mov
xor
ja
fstp
fidivr
(bad)
int
(bad)
out
xor
cmp
in
cmp
jmp
cmps
adc
js
cmps
fwait
lods
clc
movs
aad
push
xchg
dec
mov
call
test
push
or
ficomp
add
inc
mov
les
adc
add
xor
inc
nop
sbb
xchg
push
mov
xchg
adc
pushf
popa
mov
jle
mov
cmps
push
lods
xchg
dec
pop
shl
jp
fsubr
push
adc
dec
add
and
push
data16
movs
pop
jg
cmc
xlat
mov
push
inc
stos
fmul
fld
pop
retf
rol
repz
xchg
aaa
mov
pop
rol
mov
add
bnd
adc
or
test
dec
aam
mov
jl
pop
test
inc
or
outs
add
lods
ret
mov
retf
arpl
mov
outs
(bad)
sbb
inc
mov
mov
out
push
dec
cli
test
hlt
ss
out
sub
test
push
pop
mov
or
or
fiadd
xor
stos
adc
or
lods
popf
(bad)
in
cmp
test
es
mov
sub
call
cmp
push
push
dec
stc
dec
ret
stos
gs
xor
lahf
xor
femms
xor
mov
fcomp
jle
mov
das
into
fsubr
sar
out
xor
loopne
xchg
xchg
leave
push
and
pusha
sbb
loopne
clc
fsub
push
sbb
outs
fisttp
adc
sub
mov
xor
jg
adc
enter
dec
sar
cld
xchg
push
and
inc
out
cmp
mov
mov
mov
push
sbb
sbb
jmp
out
push
loop
add
mov
sub
pop
out
xrelease
ret
mov
fidiv
mov
and
scas
dec
lods
cmp
mov
xor
push
ret
sti
xchg
mov
add
ret
fucom
sbb
xchg
jl
inc
xor
movs
fs
cwde
mov
jmp
and
mov
shr
scas
loop
je
and
(bad)
retf
jl
mov
retf
cmc
lds
dec
(bad)
push
test
mov
shl
iret
cli
inc
popa
loopne
sti
jmp
lods
cdq
lock
fcomp
push
jmp
pusha
in
dec
mov
pop
mov
xchg
inc
retf
mov
mov
push
add
adc
out
sub
xor
cmps
sbb
leave
imul
xchg
xchg
das
pop
test
icebp
cmp
add
add
rcr
jo
cmp
sar
mov
loopne
imul
mov
ins
add
or
les
adc
in
into
sub
imul
sar
jge
sahf
repnz
mov
imul
xchg
pop
adc
adc
ret
ror
xchg
xchg
js
mov
into
loopne
shl
popa
popa
adc
mov
mov
mov
stc
pop
scas
inc
(bad)
and
mov
rcr
and
js
adc
loop
clc
mov
inc
icebp
xchg
std
fisttp
gs
mov
or
lds
xor
mov
fwait
jbe
out
cmp
adc
loope
in
pop
cmp
fisub
inc
imul
ret
cmp
mov
(bad)
push
push
rol
cmps
cmc
les
mov
jb
in
sbb
(bad)
push
mov
jmp
xor
mov
imul
out
push
fwait
call
ins
push
out
jbe
xor
out
push
ins
fiadd
ins
dec
test
packsswb
psadbw
mov
in
add
mov
push
loop
xchg
sbb
mov
sbb
sbb
scas
add
pop
ja
psrld
sbb
sbb
and
loop
pop
mov
stos
jge
sar
mov
push
sub
mov
push
idiv
sahf
and
mov
scas
mov
(bad)
xchg
js
mov
and
dec
scas
or
fisttp
xor
sbb
out
fstp
jbe
mov
test
dec
(bad)
or
mov
mov
test
mov
retf
jnp
aam
add
pushf
xchg
lahf
cs
xchg
push
xchg
jle
out
movs
xlat
clc
mov
xchg
jp
mov
sar
aam
mov
mov
(bad)
ror
add
xor
loop
cmp
mov
and
push
out
out
inc
dec
loop
cmp
mov
push
adc
iret
sub
cdq
xchg
scas
(bad)
aam
xchg
adc
pop
cmps
aaa
xor
sti
cmp
fwait
imul
lahf
or
or
push
stc
inc
imul
js
imul
mov
rol
test
(bad)
sbb
mov
in
aas
inc
lods
fbld
popa
out
sbb
pop
adc
or
cli
repnz
mov
add
lock
sahf
daa
arpl
loop
lods
(bad)
inc
xor
mov
xchg
mov
(bad)
pusha
or
and
out
adc
pop
cli
xchg
test
sub
xor
cmc
(bad)
fwait
jge
cmp
cdq
int3
pop
movs
xchg
not
imul
adc
mov
and
scas
fcmovnb
dec
aam
jbe
add
dec
sbb
sbb
sbb
ror
or
xchg
inc
pop
lock
enter
pop
mov
and
cli
shl
add
mov
jmp
sar
inc
into
mov
add
enter
sbb
jno
aaa
sbb
add
pop
test
xchg
xchg
xchg
add
jl
(bad)
pop
fisttp
call
mov
adc
push
jns
sub
iret
push
movs
sub
mov
fcom
clc
(bad)
or
into
pop
cmp
aas
scas
fucomi
(bad)
aas
test
into
idiv
in
(bad)
iret
jmp
xor
cdq
cmp
fisub
adc
add
pop
outs
dec
mov
(bad)
jmp
movs
inc
sub
inc
jo
cli
xor
mov
mov
mov
(bad)
leave
jl
add
xor
pop
pop
(bad)
jns
movs
and
cmp
(bad)
jb
cmps
fist
movs
inc
call
pop
pop
mov
dec
addr16
cli
sub
ins
arpl
xor
in
sbb
mov
mov
retf
jo
pop
dec
add
sub
mov
mov
test
retf
mov
retf
sub
call
or
lods
fsubp
call
xchg
adc
icebp
lods
mov
cmp
daa
pop
push
bnd
mov
pop
sub
es
arpl
adc
cwde
std
cs
fidiv
std
fistp
aas
xor
mov
daa
pop
xor
xor
sahf
std
test
xlat
mov
shl
inc
mov
and
in
hlt
xchg
cmp
stc
xchg
fsub
je
loopne
cmp
xor
call
push
push
lahf
or
(bad)
adc
cmps
mov
pop
fwait
retf
mov
mov
mov
clc
mov
scas
out
lds
adc
fs
mov
mov
je
ret
cmp
out
sbb
inc
scas
mov
add
or
push
(bad)
pop
hlt
cmp
jecxz
push
jl
inc
rcl
xchg
adc
push
mov
aaa
pusha
cmp
jo
jnp
in
popf
push
mov
add
add
xchg
add
stos
pop
sub
sahf
inc
xor
push
sti
and
fdivr
add
out
in
pop
mov
pusha
pop
sbb
int
out
aam
lock
inc
mov
sahf
mov
pusha
push
aam
fcomp
xchg
mov
test
gs
out
mov
xchg
psllq
push
repnz
mov
push
(bad)
mov
stc
xchg
lods
gs
cmc
gs
pop
ficom
or
aaa
xchg
out
push
into
das
or
xchg
fidiv
push
or
ds
mov
jnp
sar
and
mov
xor
lods
out
call
push
mov
stos
jmp
add
and
pop
cld
sub
mov
mov
add
(bad)
rcr
push
ror
jno
ss
in
fwait
out
mov
pop
adc
inc
jbe
inc
sbb
in
(bad)
out
sbb
push
sti
xchg
movs
and
dec
test
mov
add
fnstcw
sub
aad
add
jle
or
mov
std
mov
xor
test
dec
daa
fist
cwde
jg
popa
mov
popf
adc
inc
pop
mov
sbb
div
sti
xchg
aaa
leave
inc
retf
xor
rcl
dec
sar
push
cwde
js
loope
adc
pop
mov
pop
or
and
jmp
adc
push
pusha
sbb
mov
sub
mov
int3
(bad)
inc
jge
cwde
and
or
sub
aas
test
xor
dec
cmp
push
mov
cld
ds
js
fiadd
shl
pop
mov
popf
imul
mov
rol
setge
jmp
jg
adc
mov
pop
dec
mov
push
jmp
and
mov
adc
inc
pusha
add
cs
mov
sbb
jmp
je
mov
pop
xchg
xchg
jg
cmps
lods
shl
mov
popa
shl
dec
push
pop
xchg
mov
add
inc
and
sub
dec
les
xor
push
dec
rol
push
add
icebp
sbb
mov
ds
xor
mov
call
stos
outs
cld
int3
and
fisubr
mov
fwait
inc
stos
mov
cmp
xchg
jmp
repz
movs
std
les
inc
pop
or
jl
into
dec
fldenv
loop
jle
sub
jnp
mov
lock
dec
jns
mov
mov
repnz
hlt
data16
xor
(bad)
sbb
inc
pushf
mov
xor
repnz
push
adc
iret
outs
mov
in
data16
adc
aam
pop
add
bound
aam
sbb
inc
jmp
test
dec
daa
mov
add
mov
test
scas
es
ret
(bad)
xchg
cmp
mov
jnp
retf
ja
xor
outs
pop
pop
gs
dec
lods
out
sbb
add
dec
fisttp
lods
cwde
or
inc
ja
inc
or
(bad)
sbb
sub
mov
mov
mov
and
adc
icebp
jmp
lock
dec
jne
lahf
lods
in
mul
inc
pop
mov
add
pop
push
outs
mov
loop
iret
int3
push
cmp
jl
cmp
push
or
jo
in
mov
call
xor
cmp
bswap
cmp
mov
add
popf
imul
out
enter
xor
jge
mov
pusha
cmp
sbb
stc
pop
in
xchg
and
xor
push
cmp
sub
in
dec
mov
jecxz
loop
outs
fdivr
xchg
in
ret
jb
jg
loope
addr16
out
or
mov
cs
jno
aas
adc
pop
inc
adc
mov
jle
cmp
mov
stos
dec
aas
fs
inc
push
push
popf
jno
mov
mov
das
js
ret
add
bnd
xchg
cld
cdq
xchg
or
sbb
jne
shl
cwde
cdq
push
cmps
mov
sbb
daa
cwde
jmp
fnstenv
cmps
pop
mov
push
pop
jmp
cmp
sub
jne
retf
test
lock
push
pop
cmp
(bad)
shl
in
es
imul
lmsw
pop
dec
mov
dec
and
imul
pop
fst
ja
xchg
retf
mov
dec
cld
inc
pop
or
mov
pop
int3
jle
popf
cmps
adc
gs
iret
dec
pop
mov
xchg
jecxz
mov
pusha
and
add
sub
imul
xor
not
jmp
rcr
int3
jg
shl
ins
bound
loope
and
loope
mov
mov
fdivr
mov
mov
pop
mov
fcmovnu
mov
xor
retf
repz
inc
scas
mov
pop
cs
mov
jle
mov
jl
pop
jnp
inc
das
scas
push
mov
and
not
sub
dec
push
std
test
mov
loop
sar
xor
sbb
cwde
jmp
mov
xor
lahf
push
fidiv
push
mov
mov
pop
imul
repnz
push
test
pop
ret
or
jecxz
dec
nop
leave
add
fisttp
pop
call
adc
mov
mov
inc
outs
lock
popf
retf
ret
sub
mov
leave
cmp
sbb
add
push
cmp
cmovb
popa
xchg
cmp
push
pop
not
mov
push
add
push
scas
outs
aad
cmps
push
mul
in
pop
data16
xchg
sar
nop
mov
add
cmp
popa
or
icebp
mov
out
test
mov
inc
int3
add
sahf
xchg
pop
push
pop
sbb
push
mov
cmp
fisub
fsub
out
nop
cmp
dec
xchg
lea
sbb
rcr
jg
out
mov
pop
popa
das
mov
mov
in
mov
out
das
js
sub
mov
in
mov
and
cdq
sbb
aaa
adc
clc
cmp
or
aaa
adc
inc
inc
cli
dec
repz
push
xor
sub
inc
in
mov
lods
cmp
retf
dec
bound
jae
or
ds
sbb
xchg
mov
or
nop
test
xchg
icebp
jno
mov
jns
or
out
fmul
jb
ds
aaa
and
ss
push
mov
out
xor
add
jne
inc
adc
or
mov
pop
scas
mov
or
or
sbb
dec
scas
xchg
sub
jle
add
cmps
lahf
and
jl
pushf
cmp
inc
adc
add
fucomi
div
or
mov
jmp
jge
mov
pop
sub
scas
ror
mov
and
enter
mov
dec
sub
sub
rcl
gs
(bad)
les
mov
cmp
or
movs
xor
mov
inc
(bad)
and
rcl
jb
sub
cli
push
inc
ins
pop
jg
xchg
fs
push
in
call
fild
popa
cmp
int
xchg
pop
pusha
fisttp
jmp
test
scas
dec
pop
cmps
int
pop
inc
mov
mov
jle
jo
loope
in
pushf
or
jo
jbe
cmp
loop
ins
push
movs
dec
dec
mov
and
and
push
fcom
pushf
call
inc
xchg
pop
pop
cmps
icebp
cmp
mov
xor
jecxz
xchg
and
gs
mov
sbb
dec
xlat
xor
fiadd
sar
mov
and
stos
push
cdq
pop
dec
mov
test
xchg
mov
and
xor
shl
sub
mov
sbb
clc
or
or
rol
jg
jle
jmp
mov
lods
sahf
jecxz
loop
es
push
jnp
ins
test
add
jmp
or
mov
enter
leave
int
enter
into
xchg
lock
sub
add
cli
inc
aaa
jg
xor
fisubr
mov
icebp
movs
add
jbe
out
mov
imul
shl
bound
add
iret
mov
into
jb
mov
dec
iret
adc
push
mov
test
xor
xor
(bad)
mov
sbb
sub
lock
(bad)
push
imul
outs
jns
push
mov
fucomi
movs
das
xor
(bad)
mov
neg
ret
iret
repz
push
stos
push
cmp
ss
xchg
mov
inc
adc
(bad)
inc
jl
ins
test
mov
mov
iret
dec
loopne
cmp
cmp
lds
sbb
test
das
leave
and
cwde
pusha
scas
xchg
mov
adc
cmp
or
pop
pop
adc
test
(bad)
push
sbb
sbb
cmps
out
mov
scas
mov
(bad)
out
pop
fwait
mov
sbb
daa
or
lea
aas
fwait
into
inc
adc
inc
push
xor
sbb
into
pop
(bad)
cmp
push
push
push
jmp
inc
je
test
test
mov
sbb
cmps
sar
pop
ins
sbb
sub
rcl
xor
xlat
jle
add
push
hlt
stos
cmp
gs
mov
dec
into
jl
sub
mov
mov
push
lds
les
mov
cmps
xchg
das
iret
adc
ja
ud1
adc
add
xchg
pop
retf
fs
addr16
arpl
nop
gs
adc
inc
push
dec
add
(bad)
mov
push
inc
jo
jmp
inc
sbb
ja
repz
scas
fild
add
xchg
fadd
icebp
and
out
sti
and
adc
icebp
dec
test
push
aaa
xchg
push
pop
sbb
in
je
movs
out
cli
jmp
ds
mov
inc
pop
cli
mov
cmp
retf
push
lods
push
bound
sub
mov
and
xor
mov
mov
call
(bad)
out
push
add
test
leave
sbb
jo
movs
retf
xchg
mov
ret
aam
cdq
cmps
inc
push
repz
enter
xchg
push
cmp
mov
mov
adc
test
icebp
loope
aad
sub
cmp
and
sahf
cmp
xchg
std
es
jae
or
int3
jbe
jle
mov
cld
push
ja
and
es
out
jae
loop
push
in
ja
addr16
jo
cmps
lock
lea
mov
and
pop
cmp
sbb
mov
outs
mov
mov
shl
cmp
dec
mov
xlat
sub
sub
cs
jle
popf
data16
mov
aad
js
in
loope
push
aas
sub
movs
aam
js
and
retf
mov
hlt
or
rol
dec
inc
adc
xor
jge
and
add
mov
push
icebp
sbb
xor
lock
adc
sub
push
lods
mov
mov
ret
mov
out
and
or
cmc
stc
inc
jmp
out
push
and
shr
push
push
gs
jmp
fild
lea
xchg
int3
cmpps
and
pushf
lahf
scas
mov
into
aam
add
inc
adc
out
pop
add
push
push
jb
outs
fnstenv
mov
fdivr
sti
add
or
inc
pop
clc
sahf
(bad)
pop
lods
fmul
hlt
arpl
popa
repz
lock
outs
gs
int
jmp
fimul
repnz
ins
popf
aad
add
sahf
daa
jle
clc
sub
(bad)
dec
cmp
add
push
jge
jo
jle
mov
jle
or
push
jb
mov
xchg
adc
jg
outs
lods
pop
push
push
aaa
sub
aad
clc
cmp
cmp
(bad)
mov
inc
(bad)
jg
pop
aam
lahf
in
mov
fsubrp
hlt
pop
cmp
sbb
sub
pop
cmc
mov
push
loopne
fsubrp
pusha
rcl
xor
repz
pop
test
call
cs
cmp
dec
mov
retf
add
jmp
mov
mov
push
aas
dec
(bad)
es
adc
pop
test
(bad)
adc
pop
fisttp
out
mov
mov
fmul
cmp
xchg
mov
adc
adc
pop
imul
sbb
xchg
in
icebp
sub
(bad)
jb
xchg
xchg
ret
inc
imul
xor
add
aas
sbb
xchg
sbb
or
pop
adc
sti
test
xor
add
js
xor
xlat
adc
and
(bad)
cmp
xor
not
push
(bad)
adc
pop
imul
jg
aaa
or
fsubr
aad
rcl
and
mov
popf
or
inc
sub
or
cmp
das
lods
inc
push
mov
pop
ss
xchg
movs
cmp
add
mov
cld
inc
popf
inc
and
jg
(bad)
or
das
lods
push
pop
dec
ja
ja
xchg
stc
xor
ret
jbe
dec
ja
(bad)
pop
sub
ret
add
sbb
aas
mov
adc
or
jp
dec
and
jge
pop
ds
(bad)
adc
int3
aam
jg
mov
or
adc
sub
jmp
jmp
push
jmp
cmp
movs
jmp
scas
ja
pop
or
xchg
add
sub
int3
push
pop
xor
fbld
lock
or
fcomp
pop
cwde
dec
stc
mov
mov
ins
fist
shl
mov
aad
xchg
jmp
push
jecxz
sbb
sbb
or
and
mov
cmp
dec
lods
gs
out
rol
test
sub
jg
data16
pushf
retf
jns
in
push
mov
jle
fs
pop
cmps
stos
jecxz
sub
fsub
mov
dec
dec
call
add
push
movs
or
mov
stos
xlat
(bad)
sub
imul
xchg
mov
mov
xor
sbb
popf
inc
jmp
sbb
jb
ror
arpl
mov
outs
or
mov
xor
into
add
test
inc
lods
fwait
aad
imul
fild
(bad)
adc
or
adc
icebp
push
sub
jne
loope
es
lea
jbe
mov
fistp
jmp
lock
sti
xlat
and
fst
btr
push
jecxz
adc
mov
adc
pop
div
jle
call
jbe
push
jbe
jmp
dec
fnsave
fwait
inc
adc
out
(bad)
push
inc
popf
add
mov
xchg
inc
das
adc
push
aam
dec
push
push
dec
movs
daa
out
add
mov
(bad)
clc
add
add
loop
inc
add
mov
sub
sub
ret
lods
mov
ja
mov
in
outs
mov
sbb
xchg
add
frstor
inc
mov
xor
push
mov
(bad)
fimul
lods
cmc
cmc
aam
push
jmp
xor
sub
das
icebp
ffreep
xor
inc
loopne
dec
aas
dec
xor
add
mov
retf
xor
jge
sub
mov
test
xor
or
inc
or
test
pop
outs
jo
(bad)
shr
pop
scas
cld
(bad)
dec
adc
dec
pop
cmps
inc
pop
cmp
mov
sub
cmc
(bad)
sbb
cmp
mov
pop
dec
pop
xchg
pop
std
sbb
popf
xchg
push
mov
pop
mov
push
mov
or
xor
ds
and
cmp
int3
leave
aaa
ja
inc
xor
xchg
leave
out
fsincos
pop
mov
int3
call
stc
mov
retf
dec
test
push
daa
test
in
into
xchg
imul
xchg
xchg
aam
adc
(bad)
(bad)
shr
retf
data16
xchg
fucomp
xor
imul
fisttp
or
sub
xchg
shl
jmp
int3
mov
pop
jle
jno
cmp
xor
mov
xor
call
cmp
idiv
stos
test
mov
sub
xchg
retf
lds
shr
sub
outs
arpl
aas
ss
cmp
nop
adc
inc
sbb
add
xor
mov
push
neg
cmp
mov
(bad)
dec
or
mov
lea
push
cmps
sub
jle
mov
push
loope
sbb
sti
jns
fst
stos
mov
shl
xchg
pop
stos
mov
pop
stos
mov
push
loopne
(bad)
and
xor
scas
stos
mov
sbb
inc
cs
xchg
and
push
inc
movs
sub
cmps
test
jmp
lods
mov
movs
cmps
or
dec
fs
adc
push
fnsave
jns
xlat
test
movs
aas
and
and
mov
pop
in
and
sbb
pop
xor
sbb
sub
dec
test
arpl
fidivr
fsubr
rcr
pop
xchg
mov
push
mov
mov
xchg
pop
sub
push
inc
pushf
ss
push
pop
outs
mov
mov
in
ins
mov
adc
nop
cmps
ds
jle
jno
imul
push
es
dec
call
in
push
iret
gs
sbb
mov
out
sbb
repnz
call
mov
inc
popa
mov
pop
in
js
push
mov
and
jns
adc
cmp
mov
fisubr
enter
cmp
ja
adc
popa
add
shl
loopne
jbe
and
xchg
jle
push
jmp
cmps
push
out
cwde
jmp
xchg
push
push
mov
adc
mul
repnz
push
push
pop
add
stos
mov
sbb
push
add
push
jmp
mov
sub
xor
sub
add
div
sub
dec
out
jo
jae
mov
xchg
into
cs
imul
mov
push
rol
(bad)
(bad)
mov
jmp
xor
lea
jg
pop
out
les
adc
mov
(bad)
clc
xchg
mov
dec
xlat
mov
add
(bad)
aaa
or
out
pop
dec
scas
mov
push
lods
adc
jp
and
enter
enter
or
push
xchg
pop
jno
aad
(bad)
pop
dec
mov
ja
mov
inc
cmp
(bad)
outs
inc
shr
adc
cmp
cmp
lods
jns
push
jb
es
sbb
xchg
xor
dec
mov
loop
mov
dec
das
aam
in
xchg
lock
cmp
and
mul
or
jp
dec
xchg
mov
mov
jecxz
jne
add
adc
or
mov
add
add
pop
lea
and
ins
nop
sti
test
pop
mov
adc
(bad)
sti
jl
jecxz
imul
xor
ins
and
push
out
cwde
xchg
stos
add
xor
sti
dec
adc
in
jmp
push
add
adc
stos
fnstenv
jo
ds
jg
jo
xchg
cmp
cmc
push
sbb
sti
shl
and
dec
int
ror
pusha
adc
xor
int
dec
je
jo
pop
out
imul
loop
pop
lea
sub
and
cmp
call
daa
pop
sub
inc
inc
inc
push
sub
mov
out
int3
xchg
(bad)
cmp
cld
loopne
(bad)
lods
ja
arpl
adc
loop
or
jg
push
cs
inc
mov
mov
mov
and
or
aad
shl
nop
lods
(bad)
jecxz
xchg
push
nop
mov
test
lahf
mov
sub
inc
mov
xor
dec
jmp
sub
cmps
outs
pop
xor
fcomp
jmp
and
add
arpl
dec
ins
and
or
xor
das
dec
stos
add
xchg
cwde
fwait
pop
mov
or
push
fwait
and
mov
jmp
shr
and
and
or
adc
adc
jne
nop
movs
jmp
loopne
jno
scas
sbb
lods
jmp
dec
daa
inc
pop
xchg
(bad)
stc
test
imul
xor
or
repz
sub
or
test
retf
adc
mov
js
test
mov
mov
inc
sbb
mov
xchg
sbb
dec
cmp
sahf
sbb
imul
loopne
pop
fs
pop
popf
int
fs
lahf
xlat
push
out
fxch
dec
add
jnp
enter
mov
test
sbb
jl
movs
push
fld
mov
dec
dec
adc
xor
mov
loop
xchg
sbb
mov
ins
pushf
xchg
or
pop
sahf
add
test
loopne
mov
jnp
xchg
mov
push
push
push
inc
dec
sbb
and
fld
mov
dec
adc
loop
inc
add
fiadd
stos
xor
nop
mul
out
stc
aas
bound
aas
xchg
xor
adc
xchg
add
and
or
enter
jo
int
inc
jo
pop
push
mov
mov
test
mov
das
and
pushf
xchg
push
loop
xchg
aam
(bad)
fadd
adc
in
fucomp
add
pop
push
outs
mov
or
lea
xor
ret
jmp
nop
or
jne
pop
inc
(bad)
stos
xor
add
cmps
jge
into
rep
imul
call
fidiv
inc
cmp
sbb
sbb
adc
ins
nop
test
adc
mov
mov
jg
mov
repnz
jo
adc
dec
sar
sbb
sbb
push
mov
aad
sbb
push
dec
push
push
pop
dec
push
inc
add
or
mov
in
push
mov
pop
sbb
call
retf
shl
push
repz
inc
add
test
shl
dec
add
or
push
ror
jge
mov
or
and
nop
add
jae
neg
fimul
cmp
xor
ss
inc
pop
lods
enter
lds
aaa
sahf
into
stos
jle
sahf
lahf
inc
cmp
lds
jne
xchg
cmovns
jae
mov
arpl
hlt
(bad)
pusha
movs
das
aas
cmc
dec
lock
mov
jmp
inc
stc
mov
or
popf
push
in
or
and
call
pop
pop
xchg
jns
scas
mov
icebp
xor
cmp
rcr
popf
jne
(bad)
lock
and
les
sub
out
xor
out
or
in
jle
ss
cmp
mov
xchg
lahf
mov
or
and
sub
add
int
es
add
nop
(bad)
xchg
pop
hlt
jbe
sbb
dec
xchg
inc
test
je
dec
pop
shl
cmp
sub
adc
mov
ds
sbb
inc
dec
dec
push
les
cmp
stos
(bad)
mov
jo
or
out
fst
call
rcr
shl
std
hlt
pop
jbe
inc
dec
mov
movaps
bnd
xchg
jmp
jmp
loop
xchg
test
dec
les
xor
call
mov
stos
out
sub
sahf
test
inc
jge
mov
test
cmp
out
xor
xor
loope
xor
ret
xchg
retf
sti
aam
pop
sahf
(bad)
out
inc
ffree
or
lds
push
jnp
mov
std
mov
push
popa
push
aaa
lds
mov
adc
(bad)
push
sbb
and
xor
pusha
jnp
dec
shl
popa
div
pusha
xlat
xor
test
cmp
push
gs
loope
xor
adc
push
and
(bad)
xor
out
mov
dec
imul
dec
test
mov
or
stc
push
add
and
sub
scas
pop
sub
push
std
shr
cmp
add
mov
xchg
push
add
pop
test
cmps
mov
mov
mov
mov
sbb
dec
stc
mov
sub
push
test
out
fwait
jg
jg
lods
mov
fnsave
test
push
dec
push
cmp
add
fwait
vandps
mov
mov
sbb
rcr
mov
pop
aaa
push
shr
cmp
add
dec
xchg
(bad)
or
xor
loope
retf
cmps
mov
je
push
fsubr
pop
sub
add
add
push
loope
ja
pop
popf
jno
mov
(bad)
xlat
enter
push
xlat
pop
xchg
and
movs
xchg
xchg
(bad)
jb
stos
xlat
repz
popw
out
and
sub
sub
je
test
jmp
das
push
pop
fstp
or
xor
jb
rcr
fisttp
sahf
and
mov
or
gs
xor
adc
aam
jnp
xchg
xchg
test
shr
and
pop
(bad)
mov
mov
mov
mov
xor
(bad)
jo
xor
int3
adc
icebp
das
sub
or
loop
shl
xor
mov
ret
fstp
clc
aaa
or
ins
sar
push
mov
sbb
jg
inc
lea
jmp
loope
xor
inc
retf
fcom
mov
inc
or
jg
fistp
(bad)
sub
add
test
shr
das
dec
mov
fimul
add
jo
rdpmc
shr
mov
xor
mov
fidiv
dec
mov
xchg
out
mov
fwait
push
aam
jo
sar
sub
inc
pop
inc
fs
pusha
(bad)
cwde
cmps
(bad)
in
pushf
dec
or
cdq
movs
stos
xchg
cmp
retf
lahf
xor
aas
(bad)
xchg
mov
js
addr16
ret
(bad)
push
xchg
mov
push
es
sbb
xor
aad
xchg
mov
je
xor
xor
je
inc
scas
add
dec
mov
mov
test
mov
in
int
mov
(bad)
int
scas
sti
push
mov
les
out
out
dec
lds
add
adc
test
inc
cmp
inc
and
popa
jno
nop
in
mov
cmp
shl
idiv
or
outs
cmps
lock
(bad)
scas
retf
sub
mov
jb
retf
or
sbb
outs
xor
stos
outs
ss
pop
mov
mov
pop
and
adc
pop
daa
test
rcr
fsub
andnps
pop
aas
aam
in
pushf
data16
xor
xchg
pop
xor
sbb
shl
stc
jmp
sbb
adc
fwait
mov
pop
adc
hlt
sti
mov
sbb
(bad)
leave
inc
fldenv
inc
(bad)
aaa
(bad)
imul
movs
dec
adc
adc
daa
jno
add
lds
ds
xor
imul
aam
mov
retf
cld
mov
push
jb
mov
sbb
push
gs
nop
or
dec
pop
jbe
imul
fwait
jg
out
adc
fwait
in
mov
mov
in
(bad)
mov
inc
push
in
sub
xor
js
cdq
bound
or
in
mov
(bad)
in
dec
xchg
cs
sahf
mov
sbb
popf
pop
push
xchg
xor
push
pop
lea
cmp
ins
pusha
jecxz
lea
into
es
popa
push
pusha
sbb
arpl
xor
pop
push
pop
sub
pop
idiv
or
scas
inc
fwait
and
adc
and
mov
out
cwde
or
push
mov
int
sar
adc
test
ds
sbb
xchg
hlt
xor
cs
xchg
ror
rcl
hlt
in
fwait
into
int3
sub
out
mov
and
sar
and
stos
(bad)
sbb
jo
js
ins
call
or
pop
ret
xor
imul
(bad)
jb
sbb
inc
jnp
sub
and
mov
inc
js
repnz
jmp
(bad)
loopne
sub
or
retf
dec
dec
dec
out
out
call
jno
add
mov
in
mov
add
adc
push
dec
mov
jnp
pop
(bad)
mov
add
jmp
rcr
pop
xchg
sahf
mov
xchg
dec
cmp
mov
int3
daa
fwait
xor
retf
mov
jmp
fdivr
loope
adc
lods
xlat
mov
rol
add
call
adc
iret
adc
cmp
dec
push
ret
mov
ins
xlat
jecxz
mov
pushf
into
xchg
lds
pop
fisttp
fmul
pusha
inc
and
rcl
lahf
push
cmps
pop
stos
retf
mov
arpl
mov
xchg
or
mov
dec
gs
je
daa
sub
sub
daa
aad
lock
dec
inc
inc
pop
pop
pop
pop
xchg
hlt
cmp
xor
pop
fld
and
test
and
ins
pop
mov
in
mov
in
fwait
mov
ror
add
test
pop
bound
movs
mov
jnp
jnp
into
ss
dec
pop
and
loopne
cld
push
and
test
adc
mov
ror
inc
push
fld
pop
fwait
inc
mov
std
or
lock
mov
sbb
data16
ins
je
jmp
mov
push
or
add
inc
and
cmps
scas
cmp
and
dec
loop
movs
cmp
inc
in
ds
stos
pop
add
loopne
movs
dec
cmp
out
lds
push
je
mov
dec
das
lods
dec
pop
fst
repnz
clc
mov
scas
icebp
(bad)
leave
xchg
scas
cmp
sub
int
sub
pop
gs
xchg
cmp
mov
jae
cmp
fcmovnu
popa
mov
pop
push
retf
inc
dec
cmps
stc
outs
shr
in
cdq
cld
pop
hlt
add
outs
dec
xchg
mov
push
pusha
add
icebp
icebp
pop
lea
mov
icebp
inc
inc
lods
mov
xchg
push
sbb
dec
jns
call
xchg
shr
ins
sbb
lds
adc
fld
cwde
test
rol
dec
out
mov
and
aam
cmp
dec
in
mov
dec
mov
xchg
dec
(bad)
cld
int
int3
mov
int3
das
pop
enter
popw
pop
inc
mov
xor
jno
cmps
sahf
sub
mov
inc
sbb
(bad)
iret
mov
scas
and
and
dec
mov
out
or
sub
retf
mov
sti
fimul
cmp
sbb
nop
cmp
in
cwde
fadd
repz
add
mov
xchg
push
inc
inc
scas
popf
xor
leave
stc
bound
cdq
add
push
je
call
inc
xchg
xchg
jae
sahf
stos
adc
push
push
cld
mov
adc
jle
popf
pop
dec
test
test
loopne
mov
pop
aaa
pop
dec
popf
fadd
mov
bound
into
mov
pop
addr16
icebp
inc
add
push
fistp
add
inc
adc
ret
xchg
jecxz
inc
data16
mov
sbb
adc
arpl
in
pop
fldenv
or
shl
pop
jmp
addr16
stc
cmps
adc
loope
and
lods
xchg
sub
push
inc
jg
jns
cld
std
and
sbb
ja
xchg
fidiv
jmp
out
push
pushf
xor
mov
sub
test
aam
sti
xchg
adc
imul
addr16
sbb
xchg
mov
sub
js
test
xchg
pop
cmp
pushf
mov
push
(bad)
or
dec
iret
dec
jmp
push
cmp
ss
jns
rcr
cmc
adc
xchg
loope
(bad)
fmul
sbb
inc
aad
clc
pop
jecxz
mov
rol
jecxz
mov
xchg
push
sbb
push
pop
mov
cli
inc
cmp
push
dec
and
lahf
mov
pop
sar
lea
ja
jg
xchg
outs
mov
in
in
(bad)
fimul
sub
xor
jecxz
les
test
gs
mov
mov
mov
jo
icebp
or
mov
jmp
js
add
push
inc
ret
dec
sub
mov
inc
fs
cwde
leave
pushf
mov
xlat
sub
retf
out
dec
sti
mov
xlat
or
pop
cmp
ret
mov
call
jmp
loop
inc
fldenv
xor
xchg
cld
xor
repz
ja
jmp
aas
and
pop
inc
push
jl
xchg
push
jno
(bad)
int
push
iret
rcr
std
add
jg
in
xchg
lahf
sub
out
cmc
clc
jno
ins
fcom
jle
jmp
and
(bad)
mov
push
scas
xchg
dec
fld
and
pop
in
call
ins
push
repnz
push
adc
pop
dec
dec
sbb
xchg
addr16
arpl
push
add
test
cmp
xor
jmp
adc
mov
inc
and
sar
xchg
aas
aaa
mov
mov
pop
jb
sub
outs
mov
or
test
and
xchg
pop
fidivr
dec
mov
icebp
xchg
sbb
cwde
push
xchg
stc
call
sti
xchg
or
sub
push
and
gs
(bad)
outs
dec
js
add
stos
inc
fimul
cwde
adc
pop
mov
cwde
mov
lds
push
xor
cmp
loop
inc
xchg
jbe
xchg
movs
mov
cdq
call
sar
mov
test
jmp
sub
dec
mov
out
pop
add
xchg
in
cmc
cmp
test
test
int
pop
xchg
cmp
out
mov
dec
cld
mov
jecxz
cli
cmp
cmp
cmp
mov
cmp
jle
push
add
add
pop
aas
push
pop
mov
stos
pop
aas
or
jbe
sub
adc
push
sub
jo
(bad)
mov
(bad)
sub
push
into
jmp
mov
xor
pop
mov
fisubr
push
jg
inc
pushf
xor
scas
sahf
rol
fsincos
push
jo
push
shl
and
pop
mov
lea
scas
cli
shr
xchg
in
xor
cli
mov
dec
jmp
rol
(bad)
ror
sub
adc
scas
cmp
or
cmp
call
repnz
and
pushf
sbb
xor
sub
fiadd
std
sbb
add
loopne
jb
js
dec
mov
dec
in
mov
mov
scas
lds
push
push
sbb
pop
jo
add
cmp
and
rcr
popa
inc
adc
popf
or
push
inc
push
(bad)
jns
xchg
into
dec
js
iret
add
push
(bad)
(bad)
push
jo
imul
pop
sti
xchg
push
fidiv
push
mov
mov
pop
sub
sub
ss
inc
mov
sub
pop
or
test
sub
popa
shr
mov
cmp
xor
add
es
or
out
push
inc
sbb
das
pop
jne
mov
sub
and
scas
test
rol
mov
pop
or
dec
sbb
xor
cld
adc
adc
or
adc
imul
shl
cld
xor
mov
xchg
ficom
push
loopne
int
jg
dec
jg
shl
mov
xlat
ret
pop
fsub
int
dec
sub
jns
mov
and
inc
icebp
or
pop
inc
xor
aas
test
push
ja
in
push
mov
cmp
and
jne
or
ins
sub
movs
xor
leave
pop
mov
pop
imul
xchg
movs
xchg
fs
xor
fwait
leave
fwait
xchg
jl
xchg
dec
pop
inc
cvtps2pi
cmp
jg
ret
inc
cmp
(bad)
mov
lods
push
adc
sahf
fild
inc
and
cmp
dec
out
adc
inc
jnp
daa
sbb
mov
xchg
ja
js
test
lds
pop
rcl
xchg
minps
loopne
mov
pop
sbb
movs
jmp
aaa
cmp
inc
cmp
test
jmp
dec
push
pop
test
pop
add
push
fistp
arpl
and
(bad)
xor
(bad)
xchg
aad
jmp
(bad)
loope
ins
popf
mov
pop
jle
loop
sub
lea
inc
ja
jg
fwait
stos
aam
cld
ret
jge
jg
aas
cdq
fwait
cdq
mov
retf
mov
iret
xor
cmp
mov
sub
shl
xor
push
push
loope
or
aam
in
cmp
jmp
sbb
jg
sbb
sub
add
or
push
or
pop
cmc
mov
jle
mov
inc
(bad)
les
stos
in
xchg
mov
or
add
(bad)
ins
mov
mov
in
xor
jne
dec
jle
out
pop
jg
out
ds
pop
inc
sbb
arpl
js
sub
lea
pusha
das
mov
jle
(bad)
fmul
add
inc
push
out
imul
sahf
daa
pop
push
push
mov
frstor
mov
repz
je
cmp
sbb
add
pop
sbb
mov
add
addr16
jl
jnp
sbb
jl
push
ret
ss
loopne
sbb
jmp
cmp
jp
lahf
jne
adc
dec
ret
push
sbb
das
sbb
sub
mov
sbb
add
jle
fs
and
mov
xor
aas
cmp
dec
sub
mov
jns
jle
inc
lahf
jbe
mov
sbb
mov
into
dec
out
cmc
sub
lock
fild
sub
cmp
fcmove
cld
test
xchg
xchg
addr16
inc
sbb
out
xor
mov
push
push
or
daa
pop
pop
push
add
jb
xchg
pop
fnstcw
movs
push
gs
mov
rol
ret
pop
ror
dec
cwde
mov
retf
adc
scas
fnstsw
cli
into
xlat
mov
push
pop
jnp
sub
mov
mov
fisub
mov
lds
inc
aad
ins
push
sbb
lea
(bad)
(bad)
(bad)
imul
imul
xor
ds
addr16
scas
add
js
aam
lahf
and
jne
jge
call
ret
push
retf
mov
into
xor
cmp
xchg
fcomp
in
add
pinsrw
inc
call
dec
jp
push
lock
pop
sbb
adc
lds
push
(bad)
adc
push
adc
ss
(bad)
outs
dec
mov
fbld
nop
icebp
jae
popa
inc
jnp
cmps
popa
dec
(bad)
and
adc
push
adc
cli
or
arpl
fnsave
fiadd
in
outs
mov
and
xchg
jg
adc
cdq
cmp
ja
lea
sbb
fisub
sti
ret
jnp
adc
mov
imul
dec
gs
in
add
inc
call
aam
fs
imul
rcl
in
test
jmp
mov
aaa
call
xchg
daa
jecxz
int
rol
pop
ins
and
or
mov
jmp
mov
popf
clc
xor
xlat
pop
sahf
aaa
or
in
xchg
mov
nop
into
jge
cmp
mov
push
pop
fwait
mov
add
mov
and
sbb
repz
repnz
scas
call
out
(bad)
retf
mov
mov
retf
lods
pop
imul
fistp
sub
cmps
ficom
stos
enter
daa
dec
test
inc
sbb
jecxz
mov
mov
push
add
sub
fst
mov
iret
(bad)
fsub
test
inc
cwde
ficom
repnz
cmp
mov
push
add
popf
ja
dec
stos
dec
adc
out
js
es
out
mov
jns
les
jbe
push
adc
pop
add
adc
xchg
(bad)
lds
inc
cmp
and
retf
mov
(bad)
rep
hlt
jbe
(bad)
popf
mov
push
jo
and
pop
movs
loop
xchg
dec
ds
adc
out
cmp
push
adc
sub
shl
in
lea
sub
stos
adc
mov
enter
sbb
sar
int
pop
aaa
push
fisttp
dec
adc
and
repnz
pop
xchg
(bad)
sahf
sahf
dec
push
jge
js
inc
retf
add
cmc
and
cwde
fadd
fstp
sar
mov
test
jns
sub
icebp
mov
jno
(bad)
push
and
cs
mov
repz
lods
push
loope
fs
cwde
and
test
idiv
mov
ins
int
xlat
mov
cmc
jmp
pop
and
int3
mov
xlat
retf
jmp
xor
sub
cld
xor
push
into
cmp
cdq
test
or
(bad)
mov
sub
add
stos
sub
loop
sbb
loope
mov
push
or
(bad)
mul
sahf
jns
sub
or
dec
mov
jbe
sti
ror
imul
mov
pop
sub
in
lds
or
sub
mov
inc
test
imul
in
scas
out
daa
test
dec
or
xchg
iret
scas
jb
xor
push
sbb
dec
mov
popa
add
arpl
jp
aas
jge
sbb
ds
test
pop
pop
add
aam
mov
xchg
inc
pushf
dec
or
pop
scas
jno
pop
mov
push
xor
sbb
sub
push
retf
mov
sub
mov
jl
jmp
cmps
mov
leave
inc
and
pusha
and
outs
and
pop
or
dec
cmovnp
outs
adc
jg
dec
push
push
pop
inc
es
aaa
addr16
aas
pop
sbb
jl
dec
or
dec
or
pop
aas
jae
push
or
es
daa
arpl
outs
add
push
pop
add
push
sub
lahf
rol
aas
xchg
out
mov
add
call
enter
je
xor
icebp
test
xchg
bound
fwait
movs
jbe
or
lods
sub
test
push
inc
mov
repnz
or
dec
xchg
in
aad
pop
xor
lds
mov
shr
mov
push
xchg
les
repnz
stos
repnz
std
xchg
dec
jle
popa
mov
lods
out
cmp
push
iret
stos
out
and
jmp
xchg
or
or
aas
dec
call
xchg
je
cmp
ss
pop
pop
and
ror
cdq
jp
cmp
into
rcr
or
daa
ins
lods
sbb
adc
nop
repnz
bound
jmp
mov
jb
out
mov
push
push
pop
pop
jmp
dec
(bad)
movs
aam
outs
daa
addr16
loop
mov
cmps
sar
outs
in
sub
inc
sub
test
adc
mov
repz
jbe
and
sub
in
xor
aas
rcr
inc
and
jb
cli
mov
mov
xor
ss
in
and
lock
jmp
jge
aas
rcl
aam
rol
xchg
push
ds
add
jo
pop
and
push
add
adc
add
imul
push
and
movs
cmp
push
push
je
xor
fbld
cmp
cs
xchg
adc
or
pop
sbb
loope
hlt
pop
stos
out
mov
xchg
in
xchg
push
fld
push
sbb
(bad)
xchg
fldenv
cs
jns
or
stc
movs
sbb
imul
cwde
and
cmovns
aas
data16
xchg
push
pushf
(bad)
xchg
ss
data16
inc
add
repnz
mov
out
popf
push
ins
int
imul
inc
mov
lea
into
xchg
push
xchg
std
mov
fld
cmp
sub
icebp
test
mov
fs
sbb
sub
(bad)
rep
xchg
xor
sub
not
mov
enter
and
mov
adc
xor
mov
test
sub
and
iret
mov
cmp
mul
call
es
push
add
inc
pop
adc
retf
mov
repz
scas
jns
cmp
aad
xlat
mov
(bad)
nop
mov
test
(bad)
cmp
sbb
mov
dec
sti
jmp
mov
test
dec
ffreep
mov
inc
push
ss
mov
lods
xchg
out
int
daa
push
retf
in
mov
lods
pop
jg
in
cmps
in
sub
push
pop
arpl
push
mov
popa
add
dec
adc
sar
add
add
enter
mov
adc
sbb
mov
and
pusha
int
sar
cmp
int
xlat
pop
xchg
jnp
dec
xor
loop
retf
mov
mov
je
add
in
push
or
xchg
loopne
mov
stos
xchg
dec
sub
jns
push
(bad)
mov
test
xlat
cmps
(bad)
mov
sbb
dec
and
dec
and
push
dec
push
push
daa
addr16
inc
add
push
sbb
or
jg
jle
pop
das
push
jns
inc
sbb
dec
and
inc
push
pop
aas
outs
das
dec
das
imul
or
addr16
push
es
jle
push
adc
ja
dec
adc
aaa
imul
or
cmp
and
(bad)
ret
and
xor
mov
sub
loope
test
dec
push
sub
imul
lds
mov
pop
and
arpl
mov
dec
mov
stos
adc
jmp
hlt
add
bound
test
xchg
jns
pop
push
mov
cmc
mov
push
sbb
xchg
jmp
ret
(bad)
mov
in
fmul
fisttp
ror
stc
(bad)
xchg
call
pusha
movs
sub
push
fsubrp
fistp
xchg
inc
and
mov
inc
add
adc
aaa
push
xchg
jne
push
adc
nop
jmp
lea
fs
jp
dec
mov
inc
add
(bad)
sub
push
aaa
xor
push
and
cmc
jnp
jbe
sub
sbb
in
inc
call
jae
sub
int3
cli
mov
push
xchg
cmp
ror
test
jb
xor
leave
xor
xchg
xlat
inc
mov
sub
cmc
add
rcr
rcr
push
mov
ins
loop
fsubr
add
std
scas
fnstcw
mov
xchg
push
mov
cdq
push
jo
pop
nop
and
xor
xchg
call
shl
pop
sbb
repz
xchg
lock
(bad)
mov
inc
dec
add
sbb
cmps
std
mov
shr
pop
inc
add
fbld
out
xchg
pop
push
pop
mov
sub
pop
sahf
pop
aas
pop
xchg
dec
das
pop
xchg
sub
popf
loope
cdq
pop
adc
imul
mov
cmp
ret
push
cmp
inc
imul
add
(bad)
shl
lods
out
test
dec
ds
or
out
lods
xor
or
adc
enter
pusha
inc
xor
and
and
lods
cmc
dec
and
dec
movs
cwde
test
mov
sbb
ins
and
fdivr
out
pop
aam
rol
(bad)
sahf
mov
pop
cmp
jmp
shl
iret
(bad)
iret
pop
je
pop
movs
das
imul
mov
mov
lds
movs
pop
or
(bad)
pop
push
cli
xor
hlt
sub
xor
sub
mov
imul
adc
sbb
or
pusha
cld
ds
imul
out
push
gs
adc
test
jmp
mov
jns
sbb
arpl
push
aam
mov
daa
iret
out
mov
and
aam
fcom
mov
push
xchg
bound
stos
xor
shl
ins
aam
lock
(bad)
mov
push
or
enter
mov
jbe
icebp
(bad)
mov
inc
dec
ss
into
movs
adc
adc
or
cmps
out
lods
jbe
adc
xor
mov
adc
stc
inc
popf
inc
ins
push
inc
lods
sub
or
lock
mov
add
cld
xchg
imul
out
sbb
nop
aaa
fs
mov
jb
jnp
and
out
rol
js
add
xlat
orps
xor
fst
mov
mov
stc
lods
jae
int3
xchg
imul
mov
rcl
lods
ins
sbb
loope
mov
clc
pushf
leave
mov
(bad)
mov
loop
jmp
mov
mov
call
pop
movs
stc
mov
movs
enter
lods
loope
int3
mov
pushf
(bad)
mov
xchg
aam
loop
repnz
repz
mov
mov
ficomp
aad
out
mov
jmp
retf
data16
push
test
and
pusha
adc
sbb
(bad)
xchg
iret
pop
mov
popa
xchg
ds
int3
or
inc
popf
ins
dec
cmp
cmp
(bad)
jmp
add
in
fidivr
xchg
pop
inc
add
mov
mov
test
fldcw
out
icebp
mov
sub
add
test
xchg
dec
and
loopne
adc
mov
add
adc
mov
or
aaa
inc
mov
(bad)
fist
mov
inc
and
test
mov
in
in
inc
push
cmp
mov
jge
or
sub
retf
xor
cmp
pop
gs
call
mov
movd
(bad)
loope
movs
stc
push
pop
and
and
clc
xor
adc
test
je
and
xor
ds
push
xchg
retf
or
dec
fs
add
mov
ja
sbb
movs
sbb
xor
cmp
rcl
gs
repnz
shl
int
jmp
dec
and
aam
ficomp
retf
(bad)
fidivr
enter
loop
fidivr
mov
leave
movs
sbb
jge
add
ds
fld
les
jne
or
fstp
xchg
aad
shl
test
imul
popa
and
mov
push
dec
jae
and
dec
push
pop
inc
dec
cmp
sub
jmp
ss
mov
mov
out
loopne
push
aas
push
sbb
xchg
mov
sub
or
sbb
(bad)
xor
adc
or
push
mov
mov
adc
data16
stos
or
fisubr
jecxz
dec
sub
mov
fistp
outs
and
jecxz
enter
loop
inc
and
lock
xor
dec
or
inc
push
sub
adc
push
add
add
fwait
xchg
inc
data16
retf
pop
push
out
aaa
out
lods
ficomp
(bad)
push
adc
cmp
xor
std
xchg
call
(bad)
xor
xchg
ret
jmp
mov
fisubr
pop
xor
pop
xor
jecxz
outs
adc
mov
dec
pop
fadd
sahf
mov
mov
int3
push
mov
push
popf
pop
cmp
sar
(bad)
jb
push
lods
ror
mov
gs
loope
adc
fist
ins
sbb
in
lods
fsub
shl
lods
and
pop
xchg
cli
pusha
mov
dec
xlat
out
cmps
fsubr
loop
lods
jp
or
(bad)
mov
(bad)
stc
mov
sub
jbe
sub
stos
cmp
xchg
shl
pushf
clc
mov
cmp
inc
xor
call
aas
lods
stc
lods
mov
dec
psllq
fisubr
push
push
or
sub
jl
pop
aas
out
(bad)
scas
ret
je
call
imul
fisubr
cmp
outs
jl
jge
cmp
fld
mov
movs
out
lahf
add
ffree
mov
mov
adc
or
push
jmp
ret
jmp
xchg
pop
cmps
push
adc
push
pop
or
popf
shl
not
or
inc
dec
daa
pusha
and
add
movs
jmp
enter
loope
div
cmc
test
call
rol
push
and
or
pop
sbb
dec
add
imul
das
push
inc
xor
inc
add
pusha
xor
mov
mov
push
outs
jo
and
fwait
jmp
outs
mov
jae
cmp
clc
xor
xchg
adc
adc
sar
cmps
mov
jne
push
xchg
add
rol
mov
pop
mov
fcomp
aad
mov
xchg
pusha
jl
inc
mov
push
add
scas
sti
mov
test
imul
fisttp
lods
sahf
jmp
ror
not
xchg
stc
lea
push
hlt
(bad)
ins
jg
jb
hlt
mov
and
pop
xor
pop
cmp
mov
pop
inc
fcmovnu
xchg
sar
push
dec
mov
outs
sbb
sbb
lock
mov
and
and
ret
shl
dec
pop
add
sbb
(bad)
loope
pop
sub
or
out
fldcw
out
hlt
xchg
dec
inc
xor
das
sahf
cld
cmp
add
mov
inc
cmps
and
mov
aas
mov
pop
nop
or
xchg
pusha
movs
clc
mov
mov
fwait
hlt
mov
jge
cdq
fmulp
stos
sti
mov
nop
in
cmp
add
(bad)
fnstcw
mov
in
test
rcr
(bad)
std
movs
sti
mov
jg
push
dec
movq
push
push
arpl
jae
xchg
popf
(bad)
out
mov
or
jp
push
adc
movs
out
push
and
movs
leave
(bad)
lods
repz
jg
inc
push
xor
adc
das
rol
add
daa
cwde
int
mov
cmp
and
retf
mov
sahf
push
cmp
mov
enter
movs
sbb
rol
in
(bad)
fst
inc
ss
mov
test
adc
bound
jge
mov
or
xor
dec
or
xchg
scas
push
xor
stos
(bad)
xchg
aam
fisubr
mov
sub
pop
jnp
jl
stos
adc
sbb
mov
inc
ss
(bad)
iret
into
mov
xchg
jnp
test
mov
movs
cmp
aaa
inc
adc
data16
sub
xchg
push
pop
adc
and
std
mov
std
fadd
cmps
push
inc
adc
in
xchg
outs
test
push
leave
sbb
xchg
int3
add
sbb
xchg
inc
jnp
sti
mov
ret
mov
cwde
sahf
dec
or
loopne
pop
or
cmp
std
or
sub
lods
cwde
dec
or
mov
jnp
test
inc
call
enter
jnp
add
enter
mov
aas
sub
jmp
cmp
sub
icebp
outs
pushf
pop
jno
fnstcw
cs
repnz
fsubr
cmc
mov
nop
and
or
jle
inc
in
loop
test
aas
sub
int3
scas
fadd
push
loop
xchg
rcl
jg
(bad)
cld
mov
out
mov
and
pop
dec
lods
pop
outs
sub
mov
outs
xlat
aam
pushf
mov
push
push
loopne
mov
mov
aas
add
cdq
inc
jl
pop
cmc
std
mov
cmp
es
int3
ror
jo
xor
or
pop
cmp
xchg
test
ss
in
lahf
js
and
in
scas
pushf
in
in
xor
push
add
call
mov
rol
pop
lea
inc
sbb
in
sti
push
or
push
fs
imul
ins
aas
adc
mov
and
cmc
mov
dec
mov
pusha
xchg
pop
stos
cmc
scas
cld
mov
sahf
jmp
int
sbb
pusha
adc
pop
add
inc
sub
data16
or
pop
adc
add
cs
push
jns
outs
das
dec
add
cdq
ret
mov
mov
scas
out
(bad)
mov
xchg
mov
test
clc
into
stos
repz
loopne
icebp
and
test
(bad)
cmp
adc
rol
xchg
inc
push
inc
lods
add
or
jle
enter
sub
in
mov
xchg
pop
inc
mov
clc
mov
mov
cmps
arpl
in
clc
fsubr
cmp
push
pop
test
lds
mov
repnz
stos
retf
cmp
mov
pop
mov
mov
test
pop
adc
adc
cmps
push
push
sbb
out
mov
push
push
pop
sub
or
les
xor
inc
dec
sub
(bad)
neg
push
mov
ins
and
(bad)
mov
aaa
lods
pop
jg
or
xor
std
stos
repnz
std
movs
mov
shl
aad
aad
xchg
xor
div
push
inc
sub
cld
mov
arpl
jecxz
mov
pusha
daa
push
inc
add
mov
mov
xchg
test
adc
sub
ret
nop
loop
mov
mov
push
mov
(bad)
aad
out
repnz
stos
push
jb
pop
inc
push
jnp
mov
test
mov
inc
cmp
push
and
mov
idiv
into
aad
jmp
imul
cld
mov
or
push
xor
xchg
jge
dec
cmp
repz
fadd
fistp
adc
adc
hlt
xchg
pop
add
test
imul
test
jge
pusha
imul
das
retf
hlt
adc
call
mov
xor
shl
movq
arpl
or
lods
push
push
and
loop
iret
repnz
mov
sub
aaa
imul
inc
cs
cmp
es
fldenv
cmp
and
cmps
call
dec
jae
sub
xor
xor
imul
xchg
repz
or
lods
rol
(bad)
mov
xchg
(bad)
dec
pop
xor
outs
and
or
inc
push
clc
add
loopne
add
push
or
repz
dec
outs
das
and
jmp
pop
mov
jne
aaa
mov
bound
jecxz
retf
fld
or
out
cmps
inc
jb
add
jle
sub
mov
jp
fadd
sub
add
ds
jmp
push
adc
mov
jnp
rcl
mov
idiv
mov
push
addr16
add
idiv
cmp
add
or
pop
push
and
mov
lahf
jg
push
ja
into
fnstcw
pop
and
out
movs
div
loopne
mov
test
mov
out
xchg
iret
xor
in
jo
cwde
fisubr
nop
cli
mov
fdivrp
add
xchg
mov
push
dec
aad
lds
test
add
hlt
xchg
loopne
es
or
iret
test
ds
and
stos
xor
add
call
sbb
cmp
jmp
stos
jmp
cmps
cs
out
add
xchg
push
add
xor
or
and
xor
enter
xchg
outs
std
inc
jne
mov
jne
aaa
dec
pop
push
sub
inc
out
dec
leave
addr16
fiadd
sbb
add
and
xchg
retf
jmp
daa
in
int
icebp
loope
jno
sbb
pop
jns
test
and
jno
clc
sbb
or
jecxz
sbb
add
mov
sbb
sbb
idiv
inc
call
cmp
stos
sar
lods
shl
(bad)
fnsave
movs
mov
jecxz
and
push
xor
call
or
xor
sbb
fsub
push
mov
mov
push
nop
and
pop
dec
stos
xor
dec
sbb
pop
popa
rdmsr
or
cmp
jmp
test
or
das
stc
inc
out
mov
repnz
scas
jl
push
scas
and
sbb
pop
push
fadd
dec
mov
cmp
inc
dec
cmp
or
sub
dec
dec
ss
loop
cmp
retf
inc
adc
inc
pop
mov
or
mov
push
ror
xor
xchg
pop
les
mov
push
leave
iret
jbe
pop
mov
pop
cmp
and
jno
aam
lahf
cdq
mov
mov
iret
jbe
or
inc
dec
ins
or
into
xchg
mov
arpl
mov
shr
fs
cmp
cmps
pop
mov
mov
mov
add
(bad)
and
or
out
xchg
adc
js
fidivr
xor
sub
sub
sahf
adc
sbb
shl
cmp
in
fmul
je
icebp
or
test
gs
out
mov
jge
add
mov
loope
dec
sub
pushf
lahf
jmp
cmps
ret
mov
xor
scas
cmps
ss
sbb
cmp
adc
lock
xor
retf
sub
pop
les
mov
cmp
inc
xchg
adc
aas
mov
ficom
imul
mov
das
push
xchg
imul
(bad)
js
out
rol
mov
cld
inc
pusha
hlt
inc
fisubr
and
xor
ins
fld
popa
(bad)
jmp
push
stos
scas
popa
jle
jg
dec
popa
mov
dec
sbb
sbb
outs
lock
xchg
ret
sti
das
mov
dec
cmc
jecxz
hlt
icebp
sbb
cmp
das
mov
mov
adc
inc
rcl
fst
inc
dec
add
in
daa
mov
adc
add
dec
enter
mov
jmp
inc
test
xor
xchg
popf
adc
inc
not
add
inc
dec
stc
inc
mov
or
and
(bad)
cmp
es
stos
test
fcomi
pop
cmp
in
sub
mov
daa
xor
cmc
cmp
push
xor
popa
push
stc
pop
test
xlat
mov
test
fadd
sbb
jle
data16
in
cwde
movs
mov
out
nop
or
pop
ss
and
inc
inc
hlt
test
mov
(bad)
mov
arpl
mul
push
jmp
and
inc
mov
sub
out
bound
xchg
pushf
cwde
mul
scas
mov
out
cmp
mul
shr
cdq
cmp
pushw
jle
cdq
push
idiv
jl
cwde
jno
pop
push
sub
mov
popf
mov
je
call
adc
(bad)
mov
sbb
sahf
sub
sar
sbb
and
outs
adc
jmp
sbb
cs
mov
pop
push
push
xor
fstp
es
clc
mov
adc
inc
dec
add
sbb
xchg
xchg
aas
push
out
in
sti
pop
cwde
pop
xchg
scas
mov
lods
sbb
or
xor
outs
loop
sahf
stos
jb
jns
loope
push
pop
or
lea
jge
sub
fwait
mov
mov
sbb
sti
dec
pop
add
pop
sbb
push
adc
mov
xchg
(bad)
xor
xchg
rol
popf
push
jne
cli
adc
inc
sub
inc
cmps
dec
mov
fwait
dec
xchg
pop
mov
cmp
sbb
xchg
sbb
jmp
mov
pop
push
out
test
jmp
cmp
cmp
add
mul
xchg
or
mov
rol
sar
push
fdiv
icebp
pop
test
mov
jo
lods
inc
mov
frstor
push
popf
jp
sbb
cli
pop
je
cmp
pop
xor
ins
push
mov
mov
pop
adc
mov
mov
shl
aad
cmps
push
aas
cmp
ja
cmp
inc
xchg
loop
stos
dec
jl
inc
imul
adc
mov
xor
scas
pop
fnstenv
add
push
cli
and
push
sahf
cwde
outs
cdq
add
stos
clc
adc
repz
xchg
xor
pushf
sub
arpl
aaa
call
aaa
or
inc
(bad)
fidiv
sub
stos
push
in
fisub
mov
lahf
(bad)
dec
lahf
sti
cmps
out
iret
dec
fucomip
arpl
dec
cli
mul
movs
aas
(bad)
into
mov
ins
cwde
mov
xchg
xor
dec
cmp
inc
xor
js
pusha
popa
xchg
addr16
ds
xadd
cdq
mov
sbb
outs
add
imul
(bad)
sub
fst
sub
ds
and
ret
and
inc
sahf
mov
mov
mov
mov
mov
imul
ins
pop
stc
dec
inc
xor
out
add
jae
pop
fadd
xchg
mov
test
ins
xor
fistp
jmp
push
adc
mul
fistp
inc
xchg
into
out
outs
(bad)
dec
jns
push
xor
xor
retf
cmps
(bad)
test
popf
inc
(bad)
cmps
enter
mov
ret
lds
icebp
mov
adc
pusha
ins
faddp
imul
adc
jnp
push
rcr
lods
sbb
sbb
xor
lock
push
(bad)
jl
icebp
add
dec
push
push
and
retf
push
in
mov
out
std
fdivr
cmps
fsubr
shl
and
out
inc
sub
inc
cld
mov
(bad)
popa
pop
xor
xchg
jecxz
inc
push
fsub
sub
push
xchg
push
pop
mov
cmps
in
test
cld
xor
inc
mov
pop
mov
adc
repz
or
in
loopne
add
icebp
inc
push
jg
pop
jle
mov
mov
iret
iret
cmc
les
sar
aaa
nop
imul
je
add
push
imul
and
push
iret
mov
movs
sub
ret
icebp
mov
leave
scas
jns
jne
aam
and
int
fsub
test
pop
jle
add
sub
push
sbb
inc
icebp
push
fwait
xchg
xchg
cmp
jle
ficomp
push
sub
xlat
sub
(bad)
shr
pop
(bad)
aas
add
ss
sub
mov
out
das
hlt
imul
dec
inc
pop
ja
cmc
aam
inc
daa
adc
loop
mov
jne
mov
lods
nop
add
jmp
iret
push
(bad)
gs
mov
jmp
shl
(bad)
xchg
(bad)
call
test
jge
mov
rcr
int
imul
adc
retf
clc
dec
mov
enter
jecxz
shl
popa
xchg
call
js
inc
cld
loopne
mov
in
movzx
adc
push
or
fmul
add
icebp
sub
add
out
sub
inc
inc
aas
mov
ins
inc
mov
sbb
test
leave
inc
(bad)
js
mov
mov
das
bound
jns
dec
and
or
inc
sub
dec
sub
jmp
pop
test
pop
sub
and
arpl
in
daa
mov
fxtract
retf
outs
push
mov
int3
cmp
(bad)
fadd
ror
cld
aad
out
add
shl
es
inc
adc
sub
bound
xchg
aam
jae
(bad)
pop
dec
out
in
mov
cdq
push
not
xchg
mov
dec
loop
mov
mov
out
xchg
or
dec
call
mov
dec
xchg
sbb
add
pop
inc
dec
xchg
jno
push
push
and
sub
cdq
sbb
push
leave
retf
mov
jle
mov
mov
mov
daa
das
add
mov
fst
sub
jmp
sbb
jne
lods
mov
js
hlt
jmp
repnz
leave
pop
(bad)
sbb
data16
scas
pop
sbb
mov
cwde
add
lds
and
repnz
fist
outs
int
fild
retf
nop
ror
mov
test
(bad)
cli
mov
xchg
stc
ins
add
jg
aad
adc
mov
inc
push
or
mov
xchg
add
jo
push
mov
retf
jne
add
and
push
pusha
loop
fsubr
and
mov
repnz
sbb
bound
js
lods
icebp
int3
xor
push
xchg
aaa
cmp
adc
cs
movs
aaa
inc
xchg
adc
push
stos
es
cmp
dec
dec
popf
sti
mov
lods
pop
mov
mov
mov
cmp
add
fist
mov
ret
test
add
in
adc
xor
fnstsw
stos
push
enter
bnd
outs
add
jecxz
adc
sub
test
jg
(bad)
or
jle
leave
bound
push
addr16
mov
push
jl
dec
in
je
shl
push
jecxz
jnp
and
popf
pop
fcomp
xor
in
push
cmp
repz
mov
sbb
fisttp
xlat
shr
push
push
nop
outs
mov
outs
stc
mov
adc
scas
pop
adc
mov
xchg
or
int
add
add
xor
cli
adc
lock
mov
adc
out
or
jecxz
sti
dec
jno
sbb
setg
retf
push
and
cmp
pop
or
call
test
sub
sub
push
fimul
js
mov
lea
pop
push
adc
dec
pop
xchg
dec
into
pop
mov
enter
outs
lahf
fisub
stc
loopne
pop
call
mov
mov
xor
push
sub
jb
xchg
cdq
push
retf
mov
pop
in
imul
and
add
and
daa
and
in
jns
mov
div
arpl
es
mov
fst
push
inc
outs
shl
mov
into
pop
lock
mov
scas
(bad)
cld
enter
and
repnz
jmp
push
mov
mov
ror
inc
in
add
lds
pop
push
inc
es
lahf
mov
retf
ja
add
scas
jo
xchg
jo
ins
call
and
or
cmps
js
jg
es
(bad)
pop
mov
bnd
mov
mov
cmp
sti
push
es
outs
inc
js
adc
adc
into
mov
imul
cmp
test
out
scas
sub
sbb
mov
(bad)
pop
(bad)
push
mov
in
xchg
fld
repz
mov
addr16
xchg
(bad)
int
out
and
ss
jbe
inc
mov
imul
and
movs
mov
ja
aam
gs
arpl
pop
les
mov
xchg
mul
rcr
sti
ja
mov
xor
xchg
mov
sub
popf
jae
test
mov
jmp
lock
mov
aas
in
adc
scas
(bad)
ret
inc
stos
stos
push
retf
ds
sahf
xor
(bad)
push
data16
clc
(bad)
das
addr16
pushf
ficomp
push
dec
pop
xchg
fmul
cwde
push
and
dec
push
sbb
adc
sbb
mov
stc
pushf
hlt
cdq
lods
rcl
mov
sbb
popa
test
retf
adc
popf
test
je
repnz
int
out
fdivr
xlat
sbb
mov
xchg
mov
sub
out
pop
cmp
jge
sbb
inc
cmp
pushf
fadd
fldcw
jbe
ror
mov
loopne
xchg
pop
jne
(bad)
cmps
jl
mov
or
int
sbb
adc
or
mov
es
sub
cld
aad
push
xchg
jle
push
movs
push
inc
cmp
aad
lock
aam
retf
add
sub
loope
adc
xor
xchg
cdq
mov
loope
sub
repz
add
sub
jg
ret
ds
mov
retf
imul
or
jge
repz
or
pop
pop
ret
seta
pop
test
int3
mov
jne
pop
stos
sbb
lock
aas
sub
cmp
dec
leave
or
inc
sub
(bad)
neg
addr16
sub
xor
or
fcomp
and
dec
inc
xor
sbb
mov
gs
loop
js
mov
movs
push
dec
iret
pop
addr16
jp
mov
sbb
fiadd
xor
(bad)
cmps
pop
call
mov
xor
stos
(bad)
xchg
cmp
(bad)
fs
adc
scas
pushf
sti
cmp
repz
scas
out
imul
out
and
sar
mov
aad
mov
jl
push
sbb
mov
stc
nop
hlt
dec
jbe
shl
int3
fstp
loop
mov
mov
daa
into
xor
sub
aam
add
xchg
arpl
mov
bound
xor
cld
lods
aaa
adc
hlt
lea
ja
mov
loope
and
ds
mov
(bad)
sub
fbld
push
mov
js
test
mov
rol
ror
pop
ins
ins
sub
mov
mov
iret
push
cmp
pop
add
fisub
sbb
xor
fcom
add
ret
mov
neg
push
add
outs
loop
call
loope
push
test
pop
and
icebp
or
js
nop
inc
ins
sbb
dec
push
sbb
add
mov
das
add
add
pop
in
jg
pop
xchg
(bad)
imul
jmp
test
jle
jae
leave
in
and
scas
dec
mov
cdq
loopne
mov
sbb
ins
popf
dec
push
and
add
fidiv
mov
adc
out
or
(bad)
ficom
and
mov
push
sub
sub
cmp
adc
push
out
adc
jne
sti
movs
jmp
bound
call
mov
loop
jecxz
stos
and
xlat
out
aad
pop
scas
test
clc
mov
sub
inc
mov
sbb
ss
jno
retf
mov
inc
jp
mov
push
fistp
jns
sub
jnp
sahf
jo
in
repz
lea
aad
adc
mov
push
inc
jo
retf
xchg
mov
js
fcom
adc
fist
out
xchg
cmp
jg
inc
mov
jmp
(bad)
out
and
fwait
dec
movs
nop
enter
cdq
pop
push
ja
jae
popf
daa
test
dec
add
jmp
dec
mov
jmp
fwait
popf
pop
mov
push
sub
ret
or
retf
das
ins
cdq
xor
and
shl
push
leave
pop
loop
sub
push
sbb
shr
add
push
add
adc
out
push
in
pop
shl
mov
retf
sbb
adc
push
cmp
aam
jne
in
dec
mov
jne
loope
xor
adc
lahf
xor
adc
fld
xchg
shl
mov
and
adc
or
pop
mov
outs
dec
clc
mov
sub
xor
ja
imul
arpl
lea
std
out
pop
popf
imul
aaa
mov
sbb
jb
mov
xor
lods
pushf
xlat
in
aam
ins
imul
je
fdiv
and
addr16
add
mov
daa
mov
test
jecxz
sbb
ret
pop
int3
xchg
jp
mov
imul
test
pop
in
jle
pop
xchg
inc
(bad)
jmp
lods
and
(bad)
sub
sub
loope
jae
dec
xlat
adc
movs
gs
retf
adc
or
sti
or
out
xchg
iret
sbb
movsx
inc
daa
dec
arpl
pop
js
sbb
inc
mov
adc
clc
jp
sub
jmp
add
jecxz
dec
or
(bad)
mov
cdq
imul
test
iret
gs
retf
jl
sub
add
out
aad
(bad)
adc
ins
inc
sub
add
pusha
jl
cdq
mov
xor
dec
xor
pop
mov
jno
imul
or
ja
test
loopne
fmulp
mov
rcl
aam
xor
in
imul
xchg
xchg
lea
pushf
xchg
lea
pushf
add
mov
jle
cmp
xchg
das
cmc
loope
imul
inc
ror
pop
add
pop
leave
fsub
sub
shl
scas
fisub
xchg
int3
sbb
jecxz
aaa
sar
cld
sbb
ds
addr16
popf
das
retf
frstor
hlt
cmp
and
or
lods
sub
pushf
fimul
inc
xor
sbb
aam
mov
lds
mov
in
in
add
aam
(bad)
std
push
mov
mov
xor
enter
inc
xchg
retf
xchg
push
pusha
imul
clc
pop
push
retf
cmps
jge
pop
dec
repnz
(bad)
(bad)
pop
add
push
xor
mov
mov
jmp
icebp
xor
and
idiv
inc
push
jo
add
mov
das
cmp
mov
ret
mov
test
lahf
sbb
lahf
(bad)
pop
callw
or
(bad)
adc
mov
stos
pop
xor
push
or
cmp
cwde
add
dec
jo
xor
pushf
loope
jae
jno
in
scas
pop
pusha
(bad)
inc
mov
mov
rol
call
sub
adc
push
add
retf
xchg
je
hlt
cmp
les
xchg
popaw
arpl
jmp
jmp
and
or
mov
or
adc
mov
push
cli
aaa
aad
test
sar
dec
mov
cmps
inc
je
popa
sti
pop
(bad)
mov
push
cmps
mov
dec
mov
addr16
jns
outs
jl
pop
pop
sbb
(bad)
mov
pop
or
nop
sub
sub
inc
xchg
icebp
lods
int3
pop
mov
(bad)
in
stos
das
ds
inc
mov
sub
xor
cmp
push
sbb
pusha
sub
pop
mov
imul
fs
push
pop
enter
mov
xchg
sub
sbb
mov
or
idiv
xchg
sub
jo
ins
shr
gs
adc
and
imul
in
cmp
scas
jnp
out
ss
aaa
rcr
movs
mov
cmc
packssdw
mov
retf
test
push
out
cmp
enter
sub
fwait
icebp
xchg
cmp
int
cmp
leave
xchg
lea
mov
xor
mov
in
ficomp
out
xchg
mov
in
retf
movs
dec
icebp
adc
pop
and
aaa
dec
cmp
mulps
xchg
aas
stos
or
jmp
sub
shl
shr
das
repnz
cmps
fwait
mov
sahf
inc
into
mov
inc
jae
adc
jno
je
pushf
ins
add
jo
push
cld
push
(bad)
mov
shl
cdq
or
add
cmps
fild
out
outs
(bad)
adc
jp
sub
xchg
stc
push
mov
add
sub
dec
leave
sbb
call
mov
call
xchg
mov
test
or
shr
xor
cmp
add
xchg
push
add
push
mov
daa
inc
out
movs
leave
mov
inc
pop
or
popa
cmp
dec
stos
enter
dec
cmp
jl
sahf
mov
shr
rol
mov
cmp
ss
adc
push
cmp
inc
cs
mov
rol
inc
mov
sbb
and
loopne
and
jae
pop
mov
add
or
mov
sbb
out
(bad)
sahf
(bad)
mov
test
jp
nop
stc
mov
fdiv
ins
push
ins
sub
cmps
es
jg
dec
jle
xor
inc
push
addr16
or
jno
mov
ret
mov
lods
ficomp
xor
out
mov
mov
cmps
les
pusha
mov
in
addr16
imul
push
outs
mov
or
adc
sbb
stos
push
mov
enter
jmp
pop
jae
scas
int3
dec
or
arpl
pause
sub
jmp
xchg
xlat
nop
fidiv
mov
jbe
loop
les
mov
movs
stos
sbb
call
outs
in
pop
int3
add
mov
xchg
rcr
je
mov
aas
jl
jbe
stc
mov
jno
movs
xlat
imul
adc
jg
iret
xchg
and
sub
in
inc
push
push
ss
xchg
aad
adc
mov
xchg
fidiv
js
lods
iret
aaa
je
jnp
(bad)
(bad)
loope
(bad)
(bad)
jl
(bad)
push
pop
je
push
mov
mov
mov
mov
mov
test
or
sbb
mov
pop
dec
mov
adc
pop
xor
fnstsw
push
or
in
call
mov
mov
pop
sub
loop
pop
icebp
cmp
dec
pop
or
mov
cli
sub
jmp
icebp
cmp
jge
jno
leave
jmp
enter
clc
mov
jns
movs
add
dec
mov
call
shl
push
adc
daa
cmc
movs
out
retf
das
rol
das
(bad)
xchg
jecxz
std
mov
cmc
xchg
mov
aam
jae
lods
hlt
xchg
lds
mov
pop
jmp
mov
inc
sub
popf
mov
rol
js
dec
xchg
in
es
sbb
out
test
inc
sbb
jmp
stos
(bad)
mov
in
mov
call
mov
icebp
std
pushf
ficomp
mov
push
mov
push
pop
aaa
js
popa
adc
ins
sub
xchg
push
mov
aas
cmp
ins
and
hlt
adc
aaa
push
adc
adc
xchg
mov
rcl
pop
add
add
sbb
not
cmps
loopne
retf
and
mov
push
inc
and
repnz
push
and
pusha
adc
out
div
retf
jno
mov
dec
add
sbb
cmc
mov
call
pop
dec
inc
add
into
lods
jns
mov
inc
pop
mov
mov
pop
test
stc
jno
adc
ret
call
push
adc
icebp
mov
push
test
int3
and
call
ins
mov
or
arpl
sahf
cli
cwde
ficomp
push
call
out
ror
cmp
aas
adc
std
mov
push
pusha
push
mov
cdq
cli
cwde
ficomp
push
mov
pop
fisubr
(bad)
xchg
idiv
rcl
into
lods
cli
xchg
call
cwde
pop
sub
ins
rcr
pause
in
mov
test
movs
inc
add
jg
fstp
mov
inc
sub
push
adc
push
jl
jb
outs
sub
sbb
iret
popf
fbstp
xchg
fstp
push
mov
loope
push
dec
cmp
jo
shr
xor
sub
ss
pop
sbb
int
cs
inc
in
out
xchg
mov
xor
mov
add
imul
jecxz
aas
ror
lods
mov
out
imul
gs
mov
jae
cmps
aad
js
pop
mov
lods
fstp
pop
jbe
add
out
inc
add
push
and
pop
ds
push
inc
scas
loopne
inc
pop
lods
out
mov
jg
jb
outs
sub
ror
inc
mov
xchg
dec
add
popa
and
mov
jp
pop
inc
add
gs
jne
(bad)
and
lds
sub
in
xchg
test
add
sti
sub
in
rcr
mov
inc
add
sahf
addr16
aam
jp
outs
or
(bad)
xchg
outs
shl
daa
dec
add
cli
add
pop
aad
aam
fwait
inc
inc
push
mov
mov
push
cmp
fstp
imul
jbe
rcl
mov
scas
fistp
test
jecxz
xchg
scas
repz
ret
add
mov
outs
sub
adc
pop
or
sub
nop
xchg
mov
add
(bad)
fs
stos
jmp
imul
lods
retf
aaa
pop
jae
xchg
xlat
adc
in
fadd
fwait
scas
retf
sub
adc
pop
(bad)
mov
pushf
(bad)
and
add
push
adc
adc
pusha
adc
jnp
jmp
xor
sub
ja
jbe
sar
pop
jp
call
xchg
stos
ret
mov
ret
mov
shl
jge
cmc
xchg
push
sbb
inc
leave
test
jle
into
add
iret
mov
call
pop
mov
mov
std
push
dec
lea
jcxz
sub
inc
add
adc
add
xor
adc
cmp
ret
(bad)
inc
adc
xor
xor
fdivr
pop
push
scas
in
mov
call
add
jge
cli
mov
out
mov
ret
mov
dec
repz
cs
or
jmp
ss
xlat
xor
pop
xor
mov
xchg
sti
cwde
jo
hlt
mov
mov
aam
(bad)
mov
mov
mov
or
gs
fs
scas
pop
push
lods
xchg
out
sahf
(bad)
outs
sub
in
dec
call
jo
mov
xchg
lods
outs
sbb
xor
sar
bound
push
adc
xlat
out
test
imul
and
push
sbb
fdivr
mov
inc
daa
push
pop
adc
popa
ins
sbb
inc
adc
clc
add
or
popa
and
sub
push
in
add
push
jnp
addr16
and
addr16
push
sbb
cmovs
sub
imul
shl
cmp
add
imul
rcl
leave
stos
in
stos
out
cmp
mov
pusha
or
pop
sub
fidiv
inc
add
imul
push
push
retf
mov
xchg
xor
xchg
cmc
cmps
in
in
out
fwait
adc
arpl
lds
rcl
ins
add
outs
sbb
lds
jne
or
jmp
mov
lock
xchg
pop
sub
bound
dec
add
test
xor
repz
mov
lock
es
add
jns
push
leave
inc
add
add
ds
popf
sar
inc
pop
xor
sbb
setb
movs
shl
repnz
jecxz
xchg
push
adc
or
cwde
shl
call
pop
add
nop
shl
add
xchg
mov
jmp
or
push
jg
mov
add
mov
movs
loop
adc
or
mov
les
lods
jne
cmp
test
je
daa
dec
dec
or
jp
push
and
lahf
aad
leave
mov
mov
or
mov
push
pop
sbb
aaa
pop
sub
mov
cwde
fidivr
jl
daa
ja
and
pop
(bad)
(bad)
push
and
push
ds
mov
ds
push
nop
retf
imul
cmp
mov
cwde
rol
push
push
test
in
mov
jbe
push
stos
cmc
test
mov
sbb
sub
dec
adc
stos
jecxz
push
adc
pop
sub
inc
mov
xchg
test
dec
dec
mov
mov
mov
add
push
das
mov
sub
or
popa
lds
cmp
fisubr
xchg
cmps
bound
mov
sub
idiv
in
or
xor
inc
or
test
xchg
hlt
cmps
xchg
repz
mov
adc
fldenv
jmp
cli
shl
cmp
aad
(bad)
pusha
sub
in
adc
adc
mov
out
add
into
stos
retf
mov
jmp
mov
pop
jecxz
in
in
fwait
sub
mov
or
daa
fs
sbb
push
sbb
or
xchg
fdivr
push
or
adc
jp
pop
pop
iret
mov
inc
and
jmp
xchg
loopne
dec
idiv
je
outs
mov
push
out
pop
inc
sbb
je
pop
xor
xchg
xchg
rol
inc
push
dec
push
les
data16
dec
xchg
icebp
mov
cwde
sub
pop
dec
xchg
rol
mov
mov
jp
sbb
dec
or
push
aas
pop
inc
push
xlat
in
cld
sahf
int
stos
sub
push
sbb
call
mov
ret
adc
ins
sub
or
(bad)
xchg
out
inc
pop
sbb
pop
adc
mov
jecxz
sbb
push
xor
aaa
js
fistp
push
dec
push
ins
cmovns
mov
ret
add
lock
jns
push
dec
add
and
inc
mov
movs
in
xor
out
sbb
std
mov
inc
lock
or
or
mov
fsubr
mov
test
or
jns
dec
push
xor
pop
popf
icebp
add
push
into
movs
scas
ja
dec
sbb
xchg
cld
mov
xchg
stc
pop
ret
push
out
mov
cmps
in
div
rcl
and
jecxz
out
xor
(bad)
pusha
mov
cwde
stc
or
mov
cld
adc
(bad)
retf
add
pop
sbb
jmp
mov
nop
jo
mov
xchg
(bad)
mov
cdq
jmp
pop
adc
jbe
cmp
pop
(bad)
mov
je
inc
push
dec
mov
push
bound
inc
call
add
(bad)
(bad)
pop
ret
mov
sub
outs
dec
push
push
(bad)
fcomp
push
test
mov
cwde
lds
adc
jbe
adc
stos
clc
mov
jle
bound
jg
outs
sub
sub
aaa
ins
(bad)
in
mov
cmovs
dec
mov
sub
call
push
ror
mov
retf
mov
pop
adc
idiv
xchg
mov
scas
sub
loope
rol
outs
push
push
fstp
retf
cmps
les
scas
jle
dec
cmp
inc
push
addr16
arpl
mov
push
adc
cmp
jne
rcl
dec
add
test
mov
xchg
imul
fwait
call
mov
pop
inc
clc
out
mov
inc
fmul
jp
jmp
add
lds
jne
mov
dec
mov
xchg
ror
mov
or
retf
mov
aaa
xor
push
gs
jo
popa
and
(bad)
(bad)
out
lods
neg
jne
lods
jl
jno
ins
mov
ins
xor
cmp
push
jbe
cs
aaa
push
sbb
in
in
inc
push
adc
and
dec
or
cmp
add
sub
dec
add
jno
mov
inc
push
cwde
dec
add
addr16
enter
jle
outs
ss
push
jne
sar
mov
(bad)
rcl
adc
xor
adc
jae
stos
in
mov
add
dec
pop
outs
lods
out
in
loop
repnz
sbb
inc
mov
ins
pop
xchg
sub
cs
dec
add
mov
xor
iret
mov
retf
dec
addr16
xor
addr16
push
imul
sbb
sbb
dec
or
lods
iret
adc
in
xchg
sbb
push
adc
fstp
fist
test
jge
ins
lods
into
pop
mov
xchg
fwait
pop
(bad)
retf
mov
stos
pop
push
in
repz
pusha
or
mov
daa
push
xadd
leave
mov
or
retf
jge
movs
out
int3
(bad)
pop
cmp
sbb
cld
in
pop
sub
xlat
mov
bound
inc
xor
jmp
(bad)
xor
mov
enter
and
pusha
mov
rcl
push
das
das
cld
scas
in
pop
xor
sub
mov
lods
mov
sub
scas
jmp
add
dec
sub
loope
icebp
in
mov
std
shr
jecxz
pop
adc
or
sahf
aam
enter
pop
ins
xor
mov
lea
mov
dec
sub
jo
inc
sbb
and
or
adc
inc
adc
cmovns
inc
xor
stos
fcomp
add
mov
xchg
aad
inc
rcr
or
aam
in
loop
imul
in
cmps
inc
add
inc
mov
xchg
push
stos
idiv
push
sbb
xchg
xchg
jnp
fistp
sub
pop
or
add
aas
lock
rol
and
dec
stc
or
fistp
inc
xchg
sub
sub
inc
aaa
jo
(bad)
inc
add
mov
addr16
pushf
fild
mov
nop
fiadd
jbe
ja
call
pusha
idiv
dec
jp
xor
push
stos
cmc
mov
ins
test
xchg
aad
adc
jne
xlat
mov
call
xlat
movs
cld
cmp
clc
mov
mov
not
jb
clc
mov
loopne
inc
and
dec
sub
repz
cmc
mov
test
add
nop
and
nop
repz
push
repnz
mov
xchg
rcl
popa
and
add
ficomp
shl
popf
fiadd
outs
cmp
movs
neg
lods
out
pop
jge
into
test
out
mov
addr16
mov
sbb
push
pop
jg
push
xchg
ret
mov
je
cmp
inc
fsub
and
lds
mov
lods
jl
push
in
mov
popa
popf
(bad)
mov
xchg
dec
push
pop
dec
or
dec
or
jmp
inc
mov
cdq
lock
sub
stos
in
jl
daa
test
or
sub
mov
aas
js
jno
jp
scas
push
adc
push
cdq
fisub
jecxz
repz
add
ins
test
lods
jmp
sti
loop
rcr
cld
lahf
inc
sbb
daa
dec
cmp
sbb
and
cmp
jge
inc
int3
je
mov
pop
test
adc
inc
hlt
pushf
aam
cmovo
pop
push
push
push
xor
pusha
sub
ss
or
mov
sub
cmps
retf
push
je
inc
stc
(bad)
mov
dec
xlat
mov
and
cs
and
retf
mov
dec
in
outs
sbb
mov
stos
in
mov
pusha
add
les
jae
adc
inc
xor
shl
into
cmps
call
sbb
test
(bad)
dec
lahf
fadd
mov
inc
es
xor
in
hlt
xchg
cmc
add
ss
add
cmp
pushf
push
jo
sbb
(bad)
xor
mov
xchg
aaa
dec
icebp
mov
mov
dec
ins
ss
pop
inc
mov
shr
pop
out
test
mov
mov
xlat
mov
dec
or
ret
sub
iret
inc
in
mov
pop
retf
mov
or
adc
xor
add
pop
xlat
ins
ror
in
loopne
les
lock
push
add
sub
dec
xchg
sti
iret
cmc
xchg
hlt
jmp
leave
mov
sub
jns
push
mov
add
push
data16
popa
movs
repz
mov
inc
daa
push
aas
ins
das
fdivr
sahf
fld
inc
pop
push
out
fcom
shl
fild
fsubp
mov
addr16
jb
or
xor
fcomp
fs
cmc
xchg
and
pop
imul
(bad)
lahf
fmul
sbb
imul
sub
call
dec
or
icebp
sahf
fistp
rcr
les
mov
jecxz
loop
loope
cmps
iret
adc
mov
mov
stos
int3
mov
jle
sub
bound
dec
daa
push
shl
xor
sbb
loopne
movs
(bad)
jnp
inc
add
ds
jl
push
inc
xor
mov
inc
xor
addr16
stc
mov
xchg
outs
xor
call
test
enter
inc
jmp
sbb
adc
mov
mov
pop
or
sub
xchg
(bad)
push
es
jl
xchg
mov
dec
push
push
ss
mov
mov
mov
push
pop
out
gs
or
pop
xor
mov
ror
mov
mov
mov
jbe
out
leave
dec
sahf
sar
mov
inc
int
cmp
popa
and
cli
inc
sbb
ds
aas
jns
repnz
jae
ins
adc
jne
(bad)
mov
ja
push
dec
push
pop
dec
or
es
add
add
adc
xchg
jb
mov
mov
cmc
cmps
in
push
aas
inc
imul
jmp
add
cmp
mov
leave
and
shl
clc
mov
add
mov
push
pop
pop
xor
mov
mov
cwde
xlat
xchg
into
ss
pushf
(bad)
mov
cmp
test
ss
adc
bnd
sbb
hlt
xchg
rcl
mov
out
out
retf
mov
add
aad
aam
add
jle
mov
loopne
or
cmc
mov
mov
add
xchg
out
jb
sbb
adc
add
not
xchg
rcr
mov
test
cmp
sahf
ret
or
cwde
rcl
mov
mov
idiv
push
addr16
jl
ins
cdq
(bad)
ret
sbb
shl
dec
cmp
jge
push
inc
xor
popa
lock
mov
pop
push
inc
es
xchg
les
adc
in
aam
in
inc
dec
or
xchg
inc
call
and
stos
mov
pop
adc
or
jmp
dec
and
in
sahf
push
sbb
lds
add
mov
xchg
icebp
mov
or
mov
mov
es
mov
shl
aam
(bad)
fidivr
dec
add
jae
les
fwait
mov
inc
ss
test
mov
int3
push
inc
sbb
call
push
cmp
or
rcr
inc
add
xchg
xchg
sub
cwde
ret
sar
hlt
test
cwde
fisttp
jne
in
(bad)
ins
sub
movs
leave
cmps
imul
or
loopne
or
repnz
aam
int
fs
out
ret
icebp
mov
mov
test
scas
jbe
xor
mov
pop
cmp
pop
popa
in
xchg
int
ja
in
lods
push
xchg
fdiv
das
ins
(bad)
and
mov
mov
repz
or
out
pop
sbb
mov
or
psubq
lods
out
mov
add
jp
stc
stos
dec
push
or
mov
mov
jo
mov
cmc
mov
adc
inc
jmp
and
xor
(bad)
xchg
iret
aaa
fs
fcmovbe
xchg
fnsave
xchg
loopne
dec
sbb
nop
sub
and
(bad)
popf
xchg
sub
mov
pop
inc
add
xchg
cdq
push
addr16
scas
cdq
leave
loop
cmps
loope
in
sbb
jle
dec
dec
rcr
or
jmp
dec
ss
add
xchg
push
add
jae
push
inc
push
adc
cmp
stc
mov
in
int3
mov
jnp
inc
dec
cmp
mov
test
cmc
fdiv
inc
imul
pusha
xor
cmp
neg
(bad)
(bad)
fistp
repnz
loope
scas
fcom
and
push
pushf
(bad)
popf
jg
iret
scas
jb
out
data16
or
fst
xchg
outs
sub
ins
pop
xor
add
call
aad
repz
test
xchg
not
les
lds
in
loopne
rol
push
les
cld
xchg
sar
ficomp
xlat
mov
out
rol
les
xchg
aam
(bad)
fisubr
ret
stos
jmp
rol
ret
mov
fwait
jmp
mov
mov
iret
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fistp
retf
mov
ror
sub
pop
sbb
cmp
jno
jne
adc
and
or
add
mov
cmp
scas
aad
test
mov
rol
jge
pop
adc
aam
ret
and
adc
imul
ds
fdiv
imul
adc
mov
dec
xchg
lods
out
mov
scas
ss
loop
dec
add
sbb
jns
popa
lahf
out
in
jle
jns
lock
cmp
jae
dec
pop
push
lods
adc
jb
pop
sbb
jne
jp
pop
sbb
sbb
mov
ja
retf
cwde
cmp
sbb
mov
mov
fwait
and
push
adc
out
dec
push
ins
mov
pop
sbb
mov
mov
jno
inc
inc
pop
sbb
lahf
into
xchg
shl
fdiv
xchg
cmp
ins
sahf
ret
mov
in
fcom
stos
push
add
jecxz
aaa
pusha
cs
arpl
js
or
rcr
xchg
mov
fld
bound
cld
movs
stos
gs
xor
aad
js
(bad)
ds
in
imul
xchg
inc
aaa
dec
stos
jge
sahf
call
fwait
retf
mov
mov
out
scas
test
movs
sti
mov
xchg
ror
in
lods
in
(bad)
aad
add
shl
in
in
mov
jmp
jmp
mov
stos
out
rol
pop
sbb
or
jl
inc
pop
pop
push
dec
das
arpl
push
dec
sub
push
jno
jae
inc
xor
pop
adc
je
inc
adc
push
adc
cmovnp
mov
out
mov
les
in
ror
jecxz
cmc
mov
mov
mov
jne
push
pop
stos
cmp
aas
ins
into
in
fimul
mov
call
ja
cmp
rol
ins
inc
sub
jecxz
fcmovnu
fwait
cli
fwait
in
loopne
aas
jl
push
push
daa
jo
fstp
pop
ins
sub
add
cmp
outs
jno
imul
push
push
inc
mov
mov
mov
mov
inc
add
mov
xchg
sub
dec
and
hlt
popf
in
add
jl
and
retf
std
pop
jp
inc
ja
cmp
cs
hlt
out
xor
xchg
ret
cmp
add
in
jmp
cmp
(bad)
scas
fild
ja
inc
add
int3
ror
pushf
sub
jae
iret
sahf
(bad)
fild
imul
outs
push
pop
sahf
repnz
adc
dec
jb
push
(bad)
imul
add
repz
fsub
fst
xchg
dec
add
test
mov
div
mov
mov
jp
cmp
clc
mov
test
mov
in
pusha
mov
test
fcomp
outs
mov
out
enter
jecxz
test
movs
in
mov
loopne
lock
add
cmc
test
hlt
mov
enter
int3
mov
mov
lds
rep
retf
call
sbb
imul
sub
add
ds
or
and
xor
inc
xor
inc
add
popa
xor
pop
ss
arpl
push
adc
push
adc
pop
push
jns
inc
xor
pop
adc
je
inc
adc
push
adc
cmovp
arpl
push
or
push
xor
jns
cdq
std
mov
leave
and
aad
jmp
fidiv
xchg
(bad)
mov
jecxz
xor
(bad)
in
pop
xlat
cmp
test
call
cwde
aad
or
jp
or
or
xchg
leave
xchg
sub
ins
sub
pop
gs
imul
scas
in
movs
sbb
cmc
mov
and
adc
(bad)
push
push
cmp
out
fwait
idiv
ret
nop
sub
pop
ins
push
(bad)
xchg
call
bound
jo
mov
xlat
test
fwait
es
fistp
outs
add
mov
mov
clc
fcom
test
adc
add
mov
mov
add
cmps
sbb
mov
fidivr
ret
lods
out
int
les
imul
hlt
loope
popf
lock
mov
xchg
pcmpeqd
bound
cmp
push
pop
dec
adc
fst
mov
outs
pop
inc
jle
push
jl
xor
fnstenv
enter
outs
sub
cli
mov
adc
into
pushf
fstp
inc
xor
scas
bound
jl
sahf
test
ret
mov
push
dec
or
inc
sbb
inc
and
or
bound
inc
daa
bound
outs
add
and
inc
sub
gs
cmp
push
adc
pop
ds
push
add
xor
das
jg
push
adc
jbe
dec
sbb
cmp
push
push
sbb
push
or
dec
adc
sbb
jbe
push
adc
jle
pop
aas
jnp
jbe
ins
sub
inc
xor
jnp
pop
adc
xor
dec
adc
dec
or
arpl
jb
pusha
add
or
ja
addr16
cdq
ror
cmp
add
sbb
sub
enter
mov
retf
das
outs
(bad)
sbb
xor
pop
popa
add
shr
xchg
adc
mov
movs
in
cmc
mov
scas
cmp
dec
and
mov
push
pop
add
mov
and
xor
int
mov
pop
fwait
les
dec
cdq
out
(bad)
fcomip
mov
xchg
aaa
data16
xchg
cmc
mov
stc
push
fs
outs
xchg
icebp
xchg
hlt
or
push
xchg
mov
cwde
sub
ins
push
test
adc
pop
add
cmc
mov
jnp
pop
sbb
inc
and
adc
dec
sbb
je
sub
jb
mov
ret
icebp
movs
sbb
push
pop
xor
mov
mov
addr16
outs
and
test
test
test
and
dec
adc
cmp
hlt
rcr
nop
enter
test
es
inc
and
mov
xchg
aad
xchg
xchg
or
push
push
fs
jp
mov
popf
aad
pop
or
lods
xor
out
mov
fwait
dec
gs
add
in
mov
cmp
fwait
shl
jmp
fnstcw
fidivr
mov
inc
add
sbb
jmp
nop
repnz
aam
fdiv
out
lahf
mov
call
cmp
jle
data16
dec
cmp
dec
das
bound
push
adc
push
adc
push
pop
sbb
ins
add
cdq
fdivr
mov
call
mov
mov
jmp
scas
into
mov
test
pushf
fld
fisttp
les
into
scas
call
mov
(bad)
mov
jmp
mov
mov
mov
shl
fld
dec
and
cmp
push
(bad)
mov
outs
mov
pop
jle
jmp
push
sbb
mov
int3
scas
das
call
xchg
shl
xor
shr
add
ss
(bad)
ficomp
cdq
push
cmp
ja
std
mov
call
mov
and
and
lds
gs
mov
push
je
je
les
cmp
shl
pop
mov
xchg
enter
lods
imul
outs
and
mov
add
push
jl
or
into
mov
inc
pop
mov
sahf
fcmovnb
mov
imul
cmp
cmp
mov
fdiv
inc
das
imul
outs
xor
test
fst
pop
adc
mov
cmps
(bad)
iret
ficom
lods
add
pop
push
inc
sub
pop
mov
out
cmps
rol
pop
cmp
jne
pop
das
scas
jmp
in
mov
ss
add
and
sub
add
pop
sbb
dec
pop
imul
push
rol
pop
mov
push
add
and
inc
add
pusha
and
data16
jb
outs
pop
pop
sub
aaa
addr16
sub
dec
adc
cmp
imul
xor
pop
push
outs
sub
or
pop
pop
inc
and
sub
and
imul
and
dec
xor
je
dec
add
pop
or
dec
cmovp
outs
adc
arpl
push
or
pop
cmp
push
adc
jp
pop
xor
push
dec
push
dec
cmp
dec
or
and
inc
sbb
and
xchg
fidiv
imul
cli
fwait
test
ja
cmp
cld
xchg
rcr
test
adc
xor
dec
or
mov
mov
xor
dec
cmp
or
sti
mov
push
pop
xchg
sbb
mov
mov
add
sub
adc
outs
add
lock
inc
cdq
loope
leave
adc
jnp
sbb
lds
loope
es
test
arpl
outs
add
fnstsw
xchg
enter
cwde
jb
and
add
lock
cmp
lods
add
and
test
mov
inc
outs
dec
aas
cmp
scas
jecxz
dec
dec
sbb
leave
int3
lea
pop
das
adc
ror
mov
xchg
imul
mov
add
out
out
leave
lea
push
sub
jl
cdq
std
aam
ror
test
xchg
ins
and
sub
test
out
icebp
test
outs
adc
mov
scas
clc
mov
bound
add
xchg
out
or
or
push
mov
xchg
lock
cmp
in
mov
pusha
call
jge
dec
push
js
sbb
inc
mov
mov
pop
add
cmp
jmp
cdq
sub
and
inc
sub
pop
adc
jl
cmp
dec
add
ins
and
pop
or
push
or
xor
push
add
jne
jb
inc
cmp
jp
ja
ins
sub
outs
das
jg
pop
adc
ja
inc
adc
jnp
pop
and
ficomp
rol
mov
stos
in
fnstenv
xchg
rol
add
xchg
movs
in
into
mov
mov
mov
jecxz
jmp
push
inc
cmps
dec
and
pop
xor
in
xchg
mov
call
(bad)
outs
xchg
cmp
mov
test
adc
adc
mov
inc
ins
cmp
js
stos
sets
loopne
clc
stos
inc
inc
and
jo
shl
jns
(bad)
sbb
movs
clc
popf
xor
ds
pusha
cmp
mov
andps
xchg
icebp
mov
add
and
xchg
icebp
mov
pop
sub
lods
cmp
inc
mov
jmp
int3
int3
iret
lahf
inc
fs
enter
sub
std
scas
xchg
and
push
mov
xchg
repnz
mov
retf
cmovg
ret
movs
(bad)
push
xchg
lock
inc
push
cmp
pop
adc
push
test
mov
out
rol
es
mov
push
pop
jge
inc
jge
(bad)
loope
das
cwde
idiv
sbb
push
scas
out
mov
clc
mov
sub
imul
test
lahf
and
jnp
sbb
clc
mov
ins
pushf
les
fucomi
or
adc
stos
outs
sub
pop
sbb
adc
daa
inc
push
dec
or
jae
jne
ja
push
daa
xor
imul
dec
pop
or
ins
xor
push
imul
xor
jns
inc
sbb
inc
and
push
xor
xchg
aam
inc
std
movs
sbb
gs
or
jbe
popw
and
inc
xor
sbb
sub
jb
pop
ss
cdq
std
mov
fist
out
retf
xchg
xchg
sar
in
fidiv
dec
cmp
into
mov
scas
ins
ja
cmp
pop
inc
and
stc
loop
arpl
fs
cmp
mov
int3
test
sbb
ins
sub
push
js
inc
popa
inc
pop
push
mov
mov
xor
xor
out
cmp
arpl
rol
call
dec
sub
(bad)
lods
sbb
lds
fs
int3
and
cmp
pop
xor
xor
add
jmp
xor
loope
xchg
xchg
sub
jbe
repz
sub
les
mov
mov
jno
clc
test
test
ss
repnz
mov
push
mov
dec
inc
daa
dec
mov
and
xchg
outs
call
clc
call
sbb
repnz
jno
(bad)
out
mov
es
or
add
mov
push
dec
ins
and
push
mov
mov
jecxz
sbb
arpl
jo
cs
pop
test
xchg
sar
inc
add
test
sub
popf
(bad)
mov
pop
cmp
and
fst
pop
jo
outs
and
cmc
mov
rcl
inc
and
push
adc
and
add
sbb
(bad)
icebp
mov
pop
sbb
sub
sbb
ss
adc
inc
add
je
inc
arpl
push
xor
ins
add
pusha
adc
jl
outs
cs
add
(bad)
shl
mov
out
hlt
fcomp
xchg
repz
xchg
fisubr
shl
xchg
cld
mov
lods
into
pushf
fidivr
add
in
scas
fadd
in
lds
(bad)
fst
les
jbe
cmp
xor
call
mov
js
push
pop
adc
sbb
stos
add
int
(bad)
iret
adc
fst
(bad)
into
mov
sub
xor
icebp
movs
sbb
retf
xor
sbb
or
repnz
inc
mov
out
mov
dec
imul
outs
push
adc
les
outs
mov
nop
fidivr
js
dec
enter
pop
lahf
cli
mov
test
mov
inc
fs
push
hlt
ret
xor
sbb
clc
inc
popa
jge
sti
call
mov
les
mov
xor
sbb
aad
leave
lea
and
ins
fs
xor
add
pop
push
cs
mov
test
into
xchg
nop
xor
jecxz
fidiv
dec
cmps
push
inc
adc
loop
cmps
sahf
and
out
xor
dec
or
cmc
(bad)
movs
call
stos
jne
cmp
loope
std
(bad)
mov
xchg
out
iret
(bad)
cmp
imul
int
popf
lock
adc
jne
add
movs
leave
nop
rol
and
cmp
imul
xchg
fsubrp
lahf
fiadd
jne
sbb
add
xchg
jmp
arpl
or
retf
mov
xor
repnz
mov
call
outs
les
fild
adc
ss
pop
push
adc
js
push
adc
lds
in
loope
fimul
int3
mov
mov
fcom
std
cmps
(bad)
xchg
xlat
mov
xchg
aam
inc
lods
div
in
loopne
rol
ret
imul
sbb
ins
and
sub
push
cmp
jne
je
pop
and
loop
jmp
das
fld
ins
mov
and
cmp
sbb
inc
outs
and
add
add
xor
cmp
not
scas
ins
and
mov
jge
jmp
(bad)
cmp
popf
lock
int3
out
fnstcw
ret
(bad)
push
inc
sbb
rcl
mov
pop
pop
push
dec
(bad)
out
retf
xchg
mov
jne
add
loope
outs
jno
push
out
int3
mov
loope
repz
ins
jns
call
inc
jp
or
pop
dec
or
adc
adc
arpl
and
mov
push
movs
dec
inc
daa
add
xchg
out
outs
inc
add
xchg
or
icebp
push
gs
pop
outs
daa
loopne
ret
popf
test
xor
lods
xor
cmp
ret
pop
(bad)
rcl
pop
outs
aaa
jae
sbb
int3
(bad)
mov
ds
mov
cmp
pop
mov
mov
push
xor
jl
ins
mov
adc
das
aam
adc
das
dec
das
mov
mov
in
scas
in
xchg
adc
jl
and
fmul
sub
arpl
mov
test
mov
jae
push
dec
pop
pop
push
jge
jns
sbb
pop
mov
sub
push
cmp
pop
popa
and
enter
jle
add
into
pop
data16
add
or
add
mov
outs
les
jns
xor
sub
adc
(bad)
aas
test
mov
repz
adc
jmp
mov
movs
sbb
jbe
fs
dec
and
and
inc
push
cmp
je
ins
sub
inc
xor
jnp
pop
adc
xor
dec
adc
dec
cmovnp
outs
push
pop
add
sub
pop
xor
dec
or
sub
outs
sub
jae
pusha
adc
jl
outs
cs
add
xor
inc
and
hlt
push
dec
nop
retf
jb
dec
das
dec
movs
push
adc
shr
xchg
inc
imul
aaa
out
movs
sbb
aam
cld
xchg
dec
cmp
sbb
mov
movs
cdq
sbb
xlat
cmps
sbb
pop
retf
mov
push
xor
leave
test
out
pushf
out
aaa
xor
or
fidivr
jae
(bad)
mov
leave
xchg
cmp
popa
(bad)
out
lea
xor
daa
or
retf
jo
adc
add
and
dec
fcos
fsubr
sbb
mov
jo
or
(bad)
out
movs
mov
pop
sub
push
xor
sar
cmps
call
push
lods
xor
mov
jbe
sbb
sbb
out
sbb
icebp
mov
pusha
bound
mov
dec
lods
cmp
add
mov
mov
fsubr
lods
jmp
cmps
out
xchg
(bad)
scas
sahf
xor
jl
(bad)
test
popf
lock
adc
in
fistp
pop
pop
push
or
cmc
stos
retf
out
scas
jmp
sub
sbb
rol
setnp
fwait
cmp
jae
push
push
daa
(bad)
outs
and
xchg
dec
imul
sbb
pop
js
dec
mov
mov
dec
jmp
bswap
stos
(bad)
and
nop
out
dec
xchg
jecxz
jno
in
mov
add
xchg
push
add
jae
sbb
stos
rcr
leave
loop
ret
adc
jns
push
clc
aad
dec
jne
les
push
loop
xor
repnz
clc
mov
push
push
mov
mov
enter
or
pusha
movs
pushf
inc
fild
dec
popa
inc
pop
mov
sub
mov
inc
jo
sar
cmp
arpl
icebp
sbb
cwde
inc
jns
jns
xchg
push
(bad)
(bad)
jo
jno
pop
jns
ret
jae
mov
std
adc
or
inc
cmp
sbb
aam
inc
aam
mov
aad
adc
pop
int
add
push
cdq
sbb
int3
push
cmp
inc
sbb
sub
(bad)
cmp
fstp
cmp
lods
dec
addr16
stos
stos
sahf
jns
mov
aaa
ret
mov
lods
shr
lds
xchg
xor
xor
cdq
or
cld
jns
sub
sbb
dec
mov
xchg
mov
pop
adc
pusha
out
sub
icebp
dec
cmp
sahf
dec
lods
mov
sbb
je
mov
js
cwde
sbb
dec
sbb
mov
push
repz
lods
pop
retf
lock
dec
out
cdq
xor
jmp
and
adc
inc
add
xor
repnz
inc
(bad)
leave
dec
pop
sub
cmp
(bad)
es
push
call
in
rol
cmps
and
sub
in
mov
sub
inc
mov
outs
arpl
pop
in
or
jmp
inc
xchg
test
mov
mov
test
and
push
or
mov
fsub
push
shr
movs
sbb
mov
xchg
icebp
or
mov
cmps
scas
loop
xor
and
in
mov
sti
mov
mov
fldcw
xor
xor
and
imul
cmp
clc
fwait
dec
add
mov
and
push
(bad)
mov
rcr
cmps
sbb
push
sti
fcomi
shl
lock
cmp
sub
dec
add
popa
add
lea
cmp
push
imul
(bad)
(bad)
stc
xor
loopne
fild
int
retf
aam
cmp
and
xor
(bad)
xchg
loop
inc
and
enter
cmc
push
mov
imul
push
pop
jne
repnz
pop
sub
fld
imul
hlt
push
cdq
and
jl
leave
push
pop
outs
loop
mov
xchg
in
fwait
mov
mov
or
and
out
in
or
mov
mov
xchg
mov
mov
pop
scas
hlt
cmp
jmp
push
addr16
(bad)
shl
ss
ret
mov
inc
sbb
(bad)
pop
dec
cmp
test
push
or
cmp
lods
push
adc
xor
rol
dec
push
or
mov
in
dec
sbb
push
and
push
jb
call
adc
jecxz
sub
pop
int
jp
mov
mov
fs
and
mov
cmp
popa
mov
inc
scas
jbe
popf
cld
retf
jb
pop
xchg
xor
push
into
dec
sub
stos
mov
add
mov
mov
fsub
aam
js
out
lock
xchg
arpl
je
pushf
loop
neg
push
mov
pop
cmps
int3
pop
popf
mov
test
push
test
sti
daa
loop
jmp
cdq
mov
repz
test
xchg
xor
and
push
imul
test
or
test
mov
ins
test
scas
nop
sbb
add
movs
inc
pop
int3
das
or
and
mov
fisub
jle
jo
mov
ja
out
(bad)
jecxz
gs
pop
bound
or
cmps
jne
std
scas
lods
xchg
jns
mov
mov
mov
sbb
fwait
xchg
and
push
js
ficomp
out
clc
cli
nop
sub
js
push
mov
div
jge
repnz
aaa
cmp
ret
mov
iret
adc
lock
add
pusha
or
jmp
fcom
lock
or
in
aam
movs
ret
rcl
js
sub
sub
dec
cs
cmp
loop
mov
push
add
cli
stos
shr
adc
cmc
out
push
jg
loop
clc
retf
sti
jp
dec
sbb
dec
pop
fmul
lods
cmp
sbb
mov
call
xor
stc
loop
cmp
loop
jmp
test
inc
add
dec
movs
inc
or
and
mov
imul
jae
js
xchg
lock
int
sub
rcl
jmp
hlt
push
sub
push
popf
and
call
push
iret
shr
xor
and
mov
pop
mov
push
lock
mov
ror
and
lods
dec
jmp
push
stos
stc
in
scas
ja
pusha
xor
jo
ror
clc
xchg
cmp
scas
(bad)
nop
retf
jmp
std
loope
je
cld
gs
(bad)
(bad)
pop
dec
push
rcl
inc
in
call
and
js
or
idiv
je
(bad)
addr16
pop
xor
(bad)
mov
cld
xor
push
mov
pop
mov
jne
xchg
(bad)
push
sbb
mov
jbe
jmp
xor
ins
ins
in
addr16
nop
push
imul
hlt
adc
dec
and
jg
imul
ins
fcomi
and
fwait
(bad)
dec
inc
int3
and
iret
jecxz
ins
je
in
adc
or
or
inc
mov
inc
stc
jo
pop
(bad)
inc
in
std
rol
sbb
cwde
arpl
cmp
sahf
pop
add
pop
pushf
adc
pop
jle
pop
int3
js
mov
je
push
clc
cmp
retf
mov
xor
sub
es
mov
add
mov
adc
sbb
aam
and
jge
sub
pop
lock
push
xchg
jle
mov
mov
xor
mov
aaa
pop
dec
daa
cld
jp
inc
xor
push
xor
and
loope
push
jge
inc
clc
inc
ds
lds
imul
sar
or
mov
call
add
jmp
xor
or
jecxz
popf
xor
sub
mov
jl
adc
cmps
push
jbe
adc
mov
cmp
das
dec
int
push
leave
stos
mov
les
in
in
(bad)
ror
icebp
dec
mov
pop
mov
aas
jg
inc
sahf
inc
push
and
mov
js
pop
push
mov
add
mov
(bad)
sti
jle
in
mov
fbstp
repz
addr16
sub
mov
cmps
ins
mov
cmp
xchg
call
movs
pop
outs
sti
outs
stos
xchg
mov
sbb
pop
fdiv
jae
call
aas
dec
inc
inc
pop
sbb
lods
push
dec
loop
xor
dec
dec
mov
test
push
mov
push
idiv
sbb
aas
test
dec
into
outs
xor
mov
test
inc
add
std
je
sbb
and
ret
jl
rol
stc
cli
cwde
neg
xchg
lock
inc
mov
dec
mov
and
jmp
lock
inc
lods
data16
sahf
movs
jmp
mov
mov
add
jp
xor
sub
pop
xchg
push
arpl
movs
mov
mov
rol
pushf
in
push
popa
push
cs
jo
rcr
jmp
pop
(bad)
jle
and
bound
jnp
fbld
(bad)
jae
popf
cmp
cmp
cwde
dec
in
xchg
sub
test
jb
cmp
adc
cmp
jae
fucomi
call
xlat
xor
dec
scas
inc
cli
movs
xor
sbb
sub
and
mov
cmps
cwde
and
inc
adc
xchg
lds
scas
mov
jecxz
loopne
jge
mov
aad
sub
cmps
jge
cdq
cmps
lods
cmps
aam
lea
or
jnp
jno
imul
mov
xchg
mov
xor
xor
and
dec
ror
ja
xor
bound
loop
sub
imul
into
and
sbb
ja
add
dec
nop
push
inc
lea
ror
jne
cdq
retf
or
xchg
mov
loop
dec
xchg
es
lea
add
imul
pop
xor
pusha
(bad)
sbb
in
pop
mul
pop
sub
or
bnd
pop
aam
out
xor
dec
pusha
adc
lods
bound
dec
jmp
in
or
les
xchg
loopne
rcr
test
mov
inc
outs
out
pop
xchg
mov
retf
lahf
adc
dec
fwait
(bad)
xchg
in
in
mov
std
push
pushf
dec
fistp
push
(bad)
fmulp
xor
pushf
ret
dec
push
pop
or
mov
or
mov
dec
(bad)
ror
dec
lods
xchg
jecxz
lahf
(bad)
das
(bad)
enter
xchg
and
test
inc
call
fistp
jo
clc
pop
adc
(bad)
cmp
lock
xchg
add
pop
or
sub
hlt
iret
mov
add
push
adc
cs
and
add
push
add
cmp
sub
out
leave
inc
enter
or
xor
and
clc
ss
adc
push
daa
movs
fadd
movs
cmp
inc
loop
push
mov
mov
cmp
ins
jo
push
or
rol
mov
and
jne
pop
xchg
add
sbb
ret
xchg
adc
xor
cmc
mov
jne
push
inc
ds
xchg
mov
adc
cmps
mov
cwde
sub
jnp
jno
nop
data16
cmps
xlat
stos
push
push
mov
pop
dec
xor
fldenv
pop
xchg
cmc
adc
retf
aaa
mov
aam
iret
xchg
xchg
pop
cmp
mov
mov
mov
cmp
int
outs
xor
and
in
mov
fild
jns
pop
sub
adc
hlt
jmp
les
mov
push
dec
addr16
cmps
jge
ret
shr
inc
repz
mov
ds
mov
inc
mov
mov
daa
jecxz
cmps
xor
ins
jmp
mov
or
push
mov
mov
sbb
xchg
jmp
into
fmul
scas
retf
ins
xor
popf
cwde
push
sub
outs
inc
jne
cmps
push
or
outs
mov
in
mov
out
sar
sbb
sbb
movlps
cmp
cmp
outs
mov
stos
xchg
jge
add
or
(bad)
fcos
xchg
xchg
cli
push
sub
adc
out
es
add
sahf
dec
mov
ins
fcmovu
pop
jecxz
daa
add
cmp
xchg
pop
jno
push
xchg
xchg
je
retf
push
in
gs
mov
push
cmp
mov
jne
mov
and
retf
add
xchg
push
cmp
or
inc
dec
xor
push
shl
ror
movs
jb
mov
and
inc
fsubr
pop
test
jle
xor
cmp
mov
imul
ret
les
je
mov
or
sbb
lea
mov
enter
fs
jle
ret
xor
xchg
mov
mov
call
add
pop
jl
adc
dec
mov
lock
or
sub
loope
pop
test
mov
sahf
mov
and
lods
movs
and
ja
sbb
dec
inc
aaa
imul
add
pop
push
int3
jbe
jae
addr16
cmp
sti
pusha
mov
mov
adc
out
(bad)
ds
enter
jo
movs
cdq
cmp
mov
fidiv
ja
add
sub
push
dec
sar
movs
mov
call
xor
scas
pop
or
jno
mov
cmc
sti
(bad)
pop
mov
push
ret
rcl
jbe
mov
(bad)
int
sar
enter
lea
jmp
fistp
loopne
inc
inc
mov
leave
outs
aad
xchg
or
test
in
and
inc
jecxz
fwait
sub
imul
je
into
jns
test
pminsw
adc
aad
pop
iret
adc
jg
mov
arpl
fabs
rcr
addr16
xchg
(bad)
movs
mov
dec
cmp
in
sbb
ins
adc
sbb
inc
sub
(bad)
out
xchg
mov
fsubr
and
stc
leave
les
inc
lods
int3
xor
adc
scas
push
shl
loopne
fcomip
jl
mov
add
cmc
popf
adc
les
xchg
mov
and
arpl
scas
jb
jae
mov
aam
adc
push
pop
repz
nop
xchg
mov
xchg
push
movs
enter
pusha
mov
outs
je
mov
cli
xlat
mov
int3
cmp
jge
daa
fiadd
mov
jmp
or
mov
mov
jnp
call
inc
mov
ins
mov
pop
les
icebp
or
test
xor
jbe
aad
mov
fst
pop
lea
fwait
sbb
and
mov
lahf
lahf
adc
push
xchg
pop
add
inc
(bad)
ficomp
arpl
lods
sbb
dec
shl
jmp
mov
(bad)
lahf
pop
and
in
and
(bad)
(bad)
(bad)
jns
sbb
sbb
cmp
cmp
mov
and
fadd
fwait
sub
push
adc
shl
xor
clc
loopne
dec
inc
cmp
sbb
jnp
push
fld
leave
xlat
jecxz
jbe
loopne
mov
fstp
inc
lock
sub
aam
and
mov
xchg
outs
int3
cmps
jecxz
xor
push
clc
cmp
or
cmps
jecxz
mov
xchg
cli
inc
inc
popf
cli
dec
mov
ds
sub
hlt
test
xchg
xor
jno
push
xchg
pop
pop
mov
xchg
add
xlat
mov
jmp
scas
repz
push
enter
inc
aam
cmp
pop
sbb
lods
pop
outs
adc
out
sub
push
adc
cdq
shl
test
mov
xor
pop
test
sub
cmp
push
adc
xor
stos
stos
cmp
jge
ins
retf
sbb
ja
push
cli
out
call
fs
aam
lahf
test
push
mov
push
add
ins
stos
data16
clc
mov
stos
int3
and
jge
inc
pusha
aad
pop
out
jnp
ja
dec
cmc
daa
cwde
add
xchg
xchg
cwde
jl
inc
hlt
loop
aad
lods
lods
(bad)
out
jbe
sbb
movs
mov
aaa
fidiv
(bad)
imul
fnstenv
cmps
jl
stos
into
les
loopne
cmp
dec
addr16
adc
outs
stos
fs
or
jecxz
dec
or
popa
xchg
int
add
fst
imul
js
mov
jecxz
jbe
mov
jns
shl
add
fild
sbb
cmp
outs
jmp
sti
ds
push
outs
rcr
popf
outs
dec
cmps
je
push
mov
cmp
fstp
adc
add
mov
cdq
call
jo
fsubr
push
cmps
out
sbb
test
add
icebp
lds
ret
rcr
jae
inc
sbb
sar
jle
addr16
div
cmp
inc
(bad)
xchg
movs
push
jp
sbb
cdq
jb
jecxz
sbb
sbb
inc
push
out
es
inc
aam
das
jmp
jmp
ins
add
add
sbb
xor
adc
push
add
pusha
or
mov
clc
sub
movs
test
sub
mov
cmps
pusha
cmp
repz
jo
xchg
cmp
xchg
lahf
jnp
neg
cmp
xor
mov
adc
fcomp
add
pop
mov
stos
xchg
inc
sub
or
xor
jno
sub
daa
ds
scas
push
loope
and
(bad)
ds
pop
cmps
xor
inc
mov
xor
mov
int3
and
or
adc
push
int3
push
jmp
lea
sbb
mov
cmp
mov
loop
int
in
inc
pop
mov
out
push
xchg
dec
nop
inc
mov
adc
movs
push
fstp
mov
jp
das
sahf
cmp
pop
push
fcmovne
loopne
sbb
add
aad
out
add
mov
les
fmulp
xor
or
cwde
adc
mov
les
push
mov
scas
inc
push
fcomp
push
or
icebp
test
data16
in
nop
add
aas
mov
ja
test
cs
aam
push
xor
not
cmps
dec
sbb
jp
jle
shr
jle
pop
fistp
cmp
pop
or
and
mov
push
test
test
xchg
inc
lock
sbb
retf
hlt
sahf
mov
clc
movs
lods
in
cmp
mov
lods
sahf
push
mov
xchg
mov
call
aaa
push
fsubr
xchg
dec
push
loopne
pop
jo
lds
sub
add
das
cmp
jns
sahf
arpl
and
mov
in
add
xchg
sub
or
stc
outs
inc
sbb
stos
dec
sub
nop
xchg
mov
int
scas
fimul
xlat
not
sbb
inc
jecxz
or
and
popa
std
cmp
ret
pop
inc
lock
or
xchg
push
xchg
(bad)
adc
ja
out
sub
mov
ret
outs
mov
fild
mov
cmp
jns
mov
popf
mov
pushf
gs
ficom
popf
lea
sub
or
outs
bound
inc
jno
stos
(bad)
jmp
fbld
rol
xchg
xor
pop
inc
jbe
nop
popa
ins
or
fidiv
fincstp
cmp
adc
pop
push
mov
sbb
test
sub
sub
jp
mov
arpl
mov
add
fsubr
scas
ret
mov
shl
pop
fdivrp
or
rcl
das
mov
dec
shl
hlt
and
ds
dec
lods
cmc
xchg
stos
or
jp
fist
push
cmp
dec
xchg
out
pushf
jl
dec
das
xchg
xor
movs
add
or
mov
fidiv
loop
mov
in
push
xchg
call
std
push
outs
repz
je
fsubr
mov
push
dec
sbb
arpl
lock
dec
mov
add
repz
cld
mov
test
icebp
stc
leave
push
sub
repnz
dec
xor
inc
sti
and
sti
or
mov
ss
jb
test
mov
gs
jne
lods
cmps
mov
and
and
push
in
movs
mov
jg
xor
inc
inc
int3
test
(bad)
adc
aam
dec
add
(bad)
mov
gs
das
lods
jp
sbb
dec
mov
mov
psubsw
jno
out
xor
sub
mov
mov
call
cmp
(bad)
mov
repz
push
xor
sub
adc
xchg
stos
aas
shr
dec
ja
mov
mov
in
and
inc
call
imul
adc
and
shl
ret
push
and
(bad)
and
into
dec
and
jae
sbb
repnz
in
mov
adc
mov
sub
or
dec
fs
or
lods
sahf
(bad)
jbe
aaa
inc
dec
retf
movs
in
and
(bad)
adc
jmp
popf
aas
inc
sbb
out
dec
cmp
gs
ins
sub
dec
push
(bad)
shl
adc
inc
enter
adc
cmp
and
jno
cmps
les
and
test
pop
dec
xor
mov
add
fidiv
lods
lahf
jmp
mov
hlt
mov
push
and
ins
mov
ja
loop
fild
scas
jb
repz
mov
xchg
aam
cld
(bad)
retf
mov
mov
pushf
rol
int
fdiv
out
jmp
vphaddubw
mov
loope
mov
test
nop
retf
nop
cmc
mov
jecxz
repz
repz
mov
(bad)
xchg
out
lock
sbb
pop
adc
je
xor
fdivr
mov
mov
adc
or
mov
or
pop
outs
(bad)
ficomp
(bad)
mov
xchg
dec
and
adc
or
inc
stos
push
dec
cmp
cmps
lock
test
pop
or
xor
mov
imul
outs
sub
cmps
sbb
mov
movs
adc
ss
fbld
mov
nop
dec
and
(bad)
lock
shl
clc
mov
icebp
sbb
in
cmp
dec
mov
sbb
sub
inc
cmp
dec
adc
add
pop
outs
cs
and
fistp
out
mov
repz
mov
cwde
std
xchg
leave
or
mov
rcl
mov
not
mov
sbb
outs
das
ja
jp
push
xor
push
je
push
std
jecxz
test
test
cmp
ret
or
lods
sbb
sbb
arpl
push
xchg
movs
stc
push
dec
cmp
icebp
ficomp
test
mov
mov
and
(bad)
cmp
xchg
xlat
add
push
adc
fs
add
aad
cld
pop
cs
add
leave
cmps
(bad)
sub
jg
hlt
enter
xchg
jmp
xor
adc
clc
mov
ja
adc
push
or
not
cmp
add
hlt
aas
cmc
test
loope
(bad)
mov
sbb
dec
das
bound
push
dec
sub
bound
jae
popa
adc
daa
jno
cdq
fnsave
iret
lods
(bad)
mov
neg
cld
sbb
movs
iret
add
cld
mov
out
ret
mov
lods
ficomp
lahf
sar
fistp
(bad)
mov
pushf
out
stos
jmp
loop
into
pushf
xchg
jl
xor
and
jmp
fist
cdq
repz
inc
xor
cs
(bad)
aad
clc
aas
mov
mov
out
std
xchg
fsub
mov
not
mov
xchg
sbb
pop
retf
not
pop
push
fxch
add
outs
or
or
sub
(bad)
mov
test
adc
aad
mov
mov
addr16
rol
and
das
xchg
les
xor
loop
jmp
lds
rol
rcl
mov
call
rol
cmps
(bad)
nop
retf
mov
fcom
fild
in
out
lds
mov
mov
hlt
mov
mov
pushf
(bad)
lahf
fistp
aad
pushf
loope
sti
stos
jmp
les
lds
loop
ret
div
xlat
mov
dec
dec
in
sti
mov
and
sbb
test
dec
pop
sub
or
pop
push
dec
mov
iret
(bad)
fcom
xchg
fidiv
retf
stos
popa
js
pop
movs
cmp
mov
pop
pop
xchg
inc
sbb
sbb
stc
mov
arpl
jecxz
fstp
sbb
cli
mov
pop
jp
dec
or
dec
or
push
sub
rcl
mov
push
aaa
popa
and
sub
outs
and
pop
or
dec
cmovp
popa
adc
jne
pop
add
push
push
aaa
jnp
pop
adc
jno
dec
sub
sub
lods
rcl
and
sub
cmp
add
imul
xor
inc
add
popa
xor
gs
add
int3
and
xchg
sbb
je
pop
cmp
outs
cmovae
popf
(bad)
test
mov
std
out
xlat
imul
sahf
xchg
daa
cdq
rol
std
mov
lahf
aas
data16
fidivr
xor
enter
into
mov
mov
scas
out
pop
ins
js
or
hlt
mov
das
mov
cdq
xor
(bad)
rol
mov
mov
add
divps
pop
outs
cmp
sbb
inc
push
inc
or
jle
inc
adc
jp
push
xor
pusha
add
or
add
add
inc
xor
pop
adc
pop
adc
push
xor
push
sbb
jae
push
adc
ret
xchg
lock
jecxz
call
fnsave
sbb
and
std
mov
xchg
enter
icebp
xchg
div
in
iret
mov
fstp
ds
imul
sbb
pop
sbb
inc
cmp
push
and
imul
cmp
pop
cmp
dec
and
inc
add
pop
add
pop
and
ret
add
adc
mov
lock
mov
xor
test
jb
in
mov
out
push
dec
cmp
in
rcl
pop
or
rcr
cmp
sbb
psubusw
sahf
or
and
jnp
pop
cmp
or
cwde
in
mov
shl
sbb
push
outs
sub
inc
xor
cs
pop
outs
sub
jle
push
cmp
outs
divps
jle
pop
push
dec
and
adc
push
dec
or
je
push
sbb
or
jnp
jnp
jp
push
and
dec
push
jl
sub
outs
and
enter
popf
icebp
test
jle
sub
pop
add
cwde
cli
mov
fstp
sbb
push
dec
and
fistp
ret
xchg
jmp
cmps
out
sub
pusha
push
daa
xor
fstp
movq
jg
inc
add
pop
es
aas
lods
adc
mov
rcl
(bad)
adc
and
cli
xchg
int3
lds
loopne
popf
jp
jo
stc
repz
outs
jle
add
cmp
dec
cs
add
imul
cmp
ss
mov
cmps
out
pop
dec
cmp
loope
jmp
outs
jp
dec
or
test
lahf
or
xor
ja
es
mov
pushf
in
fcomp
arpl
push
jbe
sub
mov
mov
push
imul
adc
out
test
movs
leave
xchg
rcl
xchg
idiv
in
cmc
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
call
push
cmc
xchg
popf
int3
mov
sub
out
fild
dec
sub
or
push
and
imul
cwde
(bad)
fmul
inc
or
mov
lahf
sbb
pop
pop
pop
inc
daa
mov
xchg
repz
xchg
and
sbb
adc
cmp
xchg
hlt
aad
aam
cmp
dec
inc
add
and
outs
imul
inc
jb
(bad)
cmp
fcom
sbb
cmps
outs
mov
inc
icebp
sbb
cs
jo
push
inc
pop
nop
repnz
(bad)
(bad)
jecxz
add
jae
jb
(bad)
jmp
test
data16
jg
or
or
xchg
aam
cmp
push
push
cmp
call
xchg
inc
add
dec
pop
sub
cmp
pop
sbb
mov
rcl
ret
xchg
iret
mov
rcl
mov
adc
test
mov
popf
loopne
sti
test
add
xor
shl
fs
dec
in
xchg
in
outs
mov
(bad)
int3
adc
adc
and
test
and
lahf
mov
and
xor
jecxz
div
pop
mov
dec
push
das
nop
aad
out
int3
mov
mov
cmps
(bad)
cmps
loopne
xchg
std
mov
xchg
out
(bad)
add
(bad)
mov
xchg
fistp
(bad)
mov
mov
xchg
out
std
add
mov
jmp
aam
cld
sahf
(bad)
mov
loopne
rol
xchg
fdiv
aam
jmp
push
or
cdq
int
out
(bad)
(bad)
ret
fwait
sti
lods
out
mov
fld
imul
ins
scas
imul
xchg
dec
lock
pushw
cmp
into
mov
and
fmulp
movs
repnz
scas
sar
sub
cmps
sub
(bad)
mov
xchg
jmp
push
jno
push
inc
add
aad
inc
or
(bad)
xchg
mov
mov
mov
xchg
lods
loope
fisttp
movs
int3
mov
mov
test
mov
movs
sbb
push
adc
sub
and
inc
sub
dec
add
xor
push
cmp
ins
add
push
dec
or
push
or
arpl
dec
or
jnp
push
adc
push
jnp
jo
outs
pop
sub
inc
aaa
ja
jl
arpl
in
add
nop
ret
inc
push
xor
adc
jmp
xchg
cmc
cmps
fs
push
mov
and
mov
adc
rcr
test
mov
add
outs
pusha
pop
sbb
pop
adc
sbb
push
ror
mov
xchg
cmp
or
std
xor
or
pop
push
ss
pop
push
jns
dec
add
jle
jae
pusha
pop
add
inc
sbb
add
outs
push
dec
or
addr16
and
and
fs
push
es
cdq
fnsave
out
xlat
xchg
not
sbb
in
rcl
repz
stos
and
xlat
xchg
rcl
adc
dec
inc
inc
or
inc
aaa
inc
call
cwde
sub
dec
xchg
icebp
lods
shr
test
call
push
mov
lea
fwait
std
mov
addr16
pop
push
jl
xor
sub
repnz
mov
pop
push
sub
cmp
xlat
mov
mov
mov
mov
add
mov
scas
cld
mov
test
fcom
movs
leave
xchg
rol
call
call
ficomp
in
div
movs
stc
lods
loopne
in
in
lds
mov
outs
scas
jle
dec
mov
or
xlat
scas
jmp
test
test
inc
cmp
sub
mov
jbe
(bad)
stos
int3
sahf
sub
dec
arpl
inc
lahf
loope
(bad)
cmp
push
xchg
stc
movs
(bad)
lock
stc
call
mov
scas
daa
mov
mov
inc
add
sbb
mov
stos
pop
call
xor
mov
pusha
stos
pop
sbb
push
push
adc
pop
xor
cmp
dec
or
add
push
adc
jp
push
or
je
push
sbb
pusha
xor
outs
daa
dec
cmp
es
push
fs
jg
cmp
push
adc
push
jg
ss
lods
xlat
dec
cdq
ret
jg
pop
pop
xlat
fadd
mov
imul
pop
jg
dec
or
(bad)
mov
std
rep
iret
and
add
pop
addr16
fsubr
out
xlat
mov
(bad)
retf
stc
scas
jmp
or
das
or
xchg
xchg
cmp
cmovae
gs
icebp
mov
jmp
in
pshufw
js
dec
or
mov
push
lock
repnz
mov
(bad)
aad
iret
mov
xlat
xchg
jmp
out
aam
in
cmp
cld
xchg
in
dec
sti
mov
cmc
mov
int
retf
fistp
lock
iret
mov
mov
inc
jnp
and
mov
mov
jo
les
cmps
push
push
add
add
mov
nop
int3
mov
aas
mov
cmp
out
stos
in
push
pop
push
and
xchg
add
aas
lahf
int3
pop
mov
mov
adc
gs
ret
rcl
sbb
add
ret
cli
lods
jecxz
and
sbb
cmp
test
jle
bound
jnp
pusha
and
cld
(bad)
retf
mov
mov
lahf
fimul
ret
mov
in
lods
sbb
inc
sbb
and
inc
and
imul
retf
cmps
movs
lahf
pop
sub
mov
jle
cmps
or
repnz
mov
pushf
inc
dec
add
sbb
clc
retf
pop
inc
aas
jg
loopne
pushf
xchg
cs
pop
and
loope
xor
push
add
adc
(bad)
cmps
(bad)
xor
lock
fs
or
lods
rcr
xor
sbb
stos
cmc
test
push
stc
mov
stos
jge
das
imul
add
(bad)
call
aam
fbstp
and
dec
push
pop
ds
push
adc
jnp
pop
cmp
pop
jbe
ins
adc
cmovb
sbb
repnz
imul
fmul
inc
mov
stc
xchg
fdiv
inc
cmp
pop
inc
or
scas
or
call
jns
in
jmp
mov
cmp
(bad)
lock
mov
push
or
ins
and
iret
jmp
add
jbe
jmp
retf
cwde
inc
nop
icebp
fwait
jno
push
aaa
loope
test
and
jns
pusha
xchg
cli
call
das
outs
movups
ins
aaa
inc
fild
imul
push
pop
dec
and
dec
cs
sub
stos
fistp
loopne
int3
cmps
jmp
jmp
pushf
fst
sub
adc
sbb
pop
xchg
(bad)
xor
xor
stc
fistp
aaa
push
in
imul
stos
ds
add
xchg
mov
sahf
(bad)
pushf
lahf
push
jns
icebp
std
ror
es
mov
outs
and
ins
xor
sbb
rcl
out
mov
mov
aad
fimul
sbb
dec
pop
pop
(bad)
adc
in
ins
inc
daa
repz
shl
gs
sub
ror
dec
lods
cmp
ret
aad
mov
push
(bad)
xlat
bound
pop
cmp
push
adc
je
push
aaa
jae
jg
and
dec
cmp
daa
je
sbb
fisubr
pop
or
lods
cmp
pop
cld
repnz
add
js
cmp
sbb
or
call
push
and
jnp
dec
add
mov
fdivr
pop
xchg
pusha
inc
sub
mov
mov
clc
out
stos
in
adc
pop
xchg
cmp
cs
dec
out
xor
push
add
fxch
mov
jge
or
xchg
inc
dec
and
mov
xchg
inc
pop
cmp
mov
mov
mov
mov
jne
or
cmp
mov
jmp
into
xchg
in
aam
ret
xchg
retf
stos
out
rol
test
(bad)
cmp
outs
das
jecxz
stos
in
and
sbb
mov
push
fstp
mov
cmp
ins
add
cli
mov
push
push
or
call
out
lods
and
js
add
mov
iret
scas
jmp
mov
mov
pushf
fnstcw
mov
into
fmul
pusha
or
repnz
xor
stos
mov
(bad)
idiv
add
ficomp
add
adc
mov
cmp
popa
mov
mov
imul
pop
aas
adc
mov
cmp
inc
cmp
sbb
pop
sbb
clc
clc
mov
pop
mov
cmp
gs
push
cmp
clc
mov
lea
sub
pop
push
adc
call
fwait
push
cmp
jmp
popf
cmp
outs
xor
cmp
push
push
or
cmp
xor
xchg
cli
push
mov
dec
inc
add
jmp
mov
ins
mov
mov
jl
jmp
mov
and
jg
xor
gs
lock
cmp
je
std
retf
sub
retf
jbe
inc
push
push
(bad)
pusha
test
fiadd
jmp
sbb
inc
cmp
dec
xor
cmp
ins
faddp
mov
test
loopne
push
ins
mov
push
adc
cld
test
sub
inc
cmp
jmp
push
adc
clc
fimul
xchg
sbb
cli
xor
cmp
sbb
adc
sbb
pusha
addr16
sub
mov
std
xchg
push
aaa
outs
and
icebp
test
jmp
jmp
retf
jmp
inc
or
push
jge
and
pop
jl
xor
sti
mov
jp
xor
loopne
mov
movs
sahf
in
aad
xchg
lods
sti
das
in
scas
out
movs
in
xchg
mov
mov
pop
xor
sub
xchg
scas
dec
inc
sbb
cmps
out
inc
inc
add
or
repz
mov
sub
out
fild
inc
enter
dec
pop
sub
cmc
cmp
pop
pop
fisubr
ss
dec
cmp
cli
sbb
inc
push
pop
pop
ja
push
jnp
cmps
pop
ja
mov
mov
imul
int
rcr
push
adc
cmp
popa
add
repz
xor
xlat
jnp
push
pop
cmc
adc
jmp
inc
mov
imul
cmps
mul
xchg
fild
inc
mov
inc
add
ins
push
pop
imul
test
add
sub
shl
popf
pop
push
sbb
cmp
loopne
xchg
dec
ins
push
push
mov
std
cmps
in
inc
inc
push
rcr
cmp
ret
sbb
fsub
lds
mov
scas
ret
xchg
jecxz
xchg
into
mov
jl
push
je
push
add
mov
pop
cmp
push
inc
add
(bad)
xchg
aam
add
aas
iret
in
scas
pop
arpl
ds
xor
std
repnz
ds
aad
stos
les
jmp
scas
jp
push
add
ret
shr
in
mov
out
movs
retf
scas
out
fisttp
dec
or
shr
movs
inc
and
fstp
xchg
add
sbb
int3
mov
inc
push
add
sar
fcmove
xchg
add
and
fidivr
retf
test
mov
repz
loope
xor
ret
call
les
into
scas
call
mov
(bad)
mov
out
jmp
mov
(bad)
fsubr
(bad)
mov
mov
(bad)
mov
scas
into
(bad)
iret
test
sahf
fiadd
rol
mov
(bad)
fistp
leave
movs
xlat
xchg
int
cmc
mov
rcr
xchg
(bad)
mov
mov
test
fistp
out
mov
div
xchg
rcl
fstp
loopne
retf
mov
jmp
iret
mov
mov
jmp
mov
movs
iret
add
(bad)
lods
out
mov
cmps
loopne
shl
movs
out
hlt
xchg
fdiv
sub
ins
sub
inc
add
or
inc
add
inc
or
jbe
data16
ficomp
leave
mov
iret
mov
mov
icebp
movs
sbb
dec
add
push
adc
xor
and
imul
xor
adc
cmp
jl
push
pop
xor
sbb
push
(bad)
ds
jle
jle
pop
das
push
js
dec
adc
jge
pop
sbb
jb
push
xor
jnp
cwde
ror
leave
popf
shl
out
xlat
xchg
hlt
mov
mov
mov
dec
out
lds
xchg
jmp
dec
or
bound
dec
or
jg
push
adc
imul
(bad)
xchg
ror
fadd
test
xlat
aas
pop
loop
lahf
repnz
hlt
mov
addr16
fild
push
imul
and
jg
aaa
outs
adc
lock
lea
leave
dec
mov
or
sbb
sti
mov
cmps
ins
fs
in
ss
mov
mov
cwde
pop
cwde
jmp
push
mov
je
and
icebp
hlt
pushf
push
adc
test
and
aad
sub
jne
fidiv
ins
pop
mov
into
mov
ds
lods
jbe
push
fadd
(bad)
int3
mov
dec
add
inc
adc
mov
jne
lds
xor
neg
push
sub
into
leave
mov
lock
int3
mov
dec
and
cmp
fnstcw
fimul
inc
cmp
div
mov
cmp
sbb
sub
ja
sub
icebp
xchg
scas
inc
pop
sbb
jmp
(bad)
jge
pop
sbb
or
fldcw
adc
jmp
sahf
ret
mov
retf
xchg
sub
pop
push
pop
sbb
jg
adc
dec
add
mov
jnp
mov
(bad)
imul
ret
les
cwde
inc
ins
sub
int3
add
push
inc
pop
scas
sub
fsubr
mov
dec
mov
push
xchg
dec
add
sub
jnp
int
xchg
cmps
popf
push
xor
and
pop
ret
mov
mov
pop
mov
and
adc
in
leave
pop
ds
mov
ja
daa
in
push
adc
call
imul
xchg
fild
sbb
or
xor
dec
cmp
xor
jle
push
sbb
inc
push
push
ss
adc
jb
inc
push
ins
and
adc
jl
pop
sbb
jne
dec
sub
adc
inc
push
outs
and
dec
pop
pop
aas
jne
push
adc
jae
push
xor
jl
and
inc
sub
bound
inc
sets
xchg
iret
scas
(bad)
mov
std
xchg
loop
lock
mov
xchg
les
call
mov
cmp
mov
xchg
mov
into
(bad)
out
sbb
inc
and
xor
and
popa
and
pop
add
inc
push
inc
pcmpgtb
inc
sbb
pop
add
inc
and
ja
inc
push
addr16
inc
cmp
push
push
aas
ins
and
fs
jns
jno
pusha
sub
xor
outs
sub
jne
inc
and
jle
dec
movq
dec
push
inc
sub
jb
pop
sbb
imul
add
js
push
pop
xor
pop
das
outs
sbb
pop
push
or
dec
add
jge
cmp
pop
adc
dec
adc
push
or
jg
jns
popw
push
pop
ja
push
adc
pop
sub
inc
add
imul
ins
and
arpl
ins
add
ins
push
pop
imul
dec
push
pop
xor
push
adc
inc
push
outs
cs
cmp
outs
add
arpl
js
inc
pop
cdq
cld
mov
loopne
retf
fstp
(bad)
mov
nop
cmc
fcomp
sar
iret
mov
test
mov
imul
xchg
mov
mov
xchg
out
lods
hlt
mov
pop
xor
push
adc
jno
dec
sub
pop
adc
inc
push
outs
and
inc
or
add
pop
aas
outs
and
gs
adc
add
dec
or
push
dec
push
ins
and
arpl
inc
std
cmp
mov
sub
pop
sbb
push
push
jno
in
fdiv
sti
fwait
int
(bad)
(bad)
cmc
sub
cmps
mov
cmps
inc
daa
dec
cmps
push
push
sub
lds
jb
pop
sbb
aad
mov
out
mov
mov
test
jae
add
fisttp
and
xor
mov
in
call
das
mov
xor
inc
or
cmps
out
sub
dec
mov
cmp
lods
jae
add
ret
sbb
imul
gs
sub
scas
icebp
mov
xchg
push
clc
test
pop
ins
inc
and
in
nop
shl
iret
pushf
and
cmc
mov
cmp
mov
imul
lds
push
(bad)
in
mov
test
sbb
mov
fild
(bad)
adc
sbb
(bad)
into
mov
adc
adc
(bad)
int3
cmp
cdq
int
cmp
hlt
popf
in
add
imul
inc
cdq
in
(bad)
idiv
xchg
fnsave
test
pushf
fsubp
into
scas
jecxz
(bad)
xchg
sar
shl
push
dec
or
into
loope
sahf
cld
adc
and
out
mov
sub
cmp
pop
push
and
adc
inc
sub
cmc
inc
inc
leave
loope
mov
aaa
hlt
push
dec
cld
out
js
sub
repnz
or
pop
bound
mov
fsub
es
adc
jle
ds
in
cmps
xchg
js
jle
loope
ficom
and
sbb
cmp
or
xchg
aam
sahf
pop
sub
add
movntq
mov
ins
mov
shl
xchg
sti
mov
push
aaa
fs
ss
out
inc
mov
push
pop
dec
cmp
and
dec
pop
or
popa
ss
pusha
pop
adc
pop
sbb
sub
dec
or
pop
ja
push
sbb
cmp
and
inc
or
cld
mov
mov
sahf
push
cmc
fstp
fidiv
loop
iret
adc
icebp
mov
(bad)
rcl
repnz
loop
lock
out
scas
(bad)
mov
fwait
idiv
xlat
mov
xchg
xlat
pushf
cmc
xchg
call
in
add
sbb
addr16
inc
add
push
and
dec
add
and
jne
pop
jno
push
pop
pop
aaa
inc
add
or
adc
sbb
(bad)
xor
sub
pop
ss
ins
adc
add
push
ss
pop
push
inc
es
push
sub
arpl
jne
popa
pop
dec
aas
data16
sub
push
pop
pop
add
int
in
lock
sahf
jecxz
repz
mov
nop
lds
into
xchg
hlt
cmps
in
out
out
ret
scas
fistp
call
call
mov
sbb
jne
bound
jne
push
sbb
jle
inc
push
push
ss
adc
jb
inc
pop
outs
das
pop
push
inc
or
pushw
inc
add
push
dec
sub
push
jno
jae
inc
xor
jge
pop
adc
jbe
dec
push
pop
ds
sbb
jl
dec
adc
mov
loope
in
fild
mov
xor
clc
movs
sbb
imul
add
jle
outs
or
bound
jns
dec
push
addr16
push
dec
pop
pop
aas
jb
push
push
dec
sub
cmp
xor
popa
pop
add
inc
sbb
push
cmp
or
inc
cmp
imul
pop
or
xor
push
retf
(bad)
lahf
mov
xor
adc
loop
int
ds
mov
or
jne
dec
int3
adc
in
or
push
mov
and
leave
test
rcl
cmps
mul
push
or
cli
sti
mov
stc
out
mov
push
cdq
xor
enter
jno
and
xor
mov
inc
push
sbb
xchg
imul
aam
ror
popa
pop
add
mov
mov
mov
test
xchg
inc
dec
cmovnp
rcl
mov
not
test
(bad)
aad
int
jne
jnp
loopne
jmp
mov
inc
and
mov
pop
push
inc
pop
outs
mov
mov
sub
cmp
in
mov
addr16
int3
mov
aaa
sahf
out
mov
cmp
movs
idiv
popa
xchg
sbb
mov
mov
mov
mov
mov
mov
xor
jmp
(bad)
(bad)
mov
rcr
xchg
dec
jb
dec
ja
ds
jno
sbb
shr
test
sahf
and
xchg
(bad)
pop
jp
sar
imul
mov
cmps
push
pop
or
adc
adc
lds
(bad)
(bad)
sbb
push
sub
sbb
mov
jbe
movs
loopne
jmp
dec
cmp
mov
bound
mov
stc
std
mov
pop
jo
or
stc
mov
inc
mov
jl
add
jp
sub
mov
dec
ja
pop
xchg
jnp
rcl
cmp
test
ss
lock
(bad)
dec
mov
push
and
hlt
mov
sub
cmps
jecxz
call
popf
int
shl
xchg
inc
xor
jp
add
imul
sahf
dec
push
push
test
mov
iret
or
dec
cmp
inc
adc
ss
add
outs
adc
pop
add
dec
and
inc
cmp
jnp
pop
sbb
cmp
ja
sub
inc
sub
jg
inc
add
cli
mov
sbb
jne
bound
je
dec
add
pop
or
dec
cmovp
popa
adc
jg
dec
push
push
pop
inc
daa
push
dec
push
push
ss
inc
bound
push
jo
popa
adc
cmp
push
sbb
and
push
sub
dec
add
push
add
pop
push
inc
adc
sub
cmp
pop
adc
imul
adc
jge
pop
sub
not
inc
pop
push
and
in
mov
cmps
out
int3
cmps
jmp
jg
jl
js
dec
or
inc
sbb
cmovl
pusha
or
pop
xor
cmp
jb
inc
pop
outs
sub
or
pop
cmp
push
adc
pop
cmp
cmp
ins
push
pop
imul
push
add
inc
cmp
dec
cmp
push
push
fs
jg
popa
add
jo
jns
push
xor
js
data16
dec
cmp
or
add
pop
aas
outs
das
dec
sub
sub
bound
push
and
push
daa
addr16
add
jg
pop
sub
pop
jbe
bound
jo
pop
xor
cmp
ins
and
and
push
xor
pop
adc
je
inc
or
inc
cmp
push
es
cmp
js
fwait
retf
cmps
ror
nop
cmc
mov
mov
scas
jmp
sti
mov
aad
sbb
push
adc
jb
dec
cmp
pop
sbb
cmp
ins
add
or
imul
cmp
(bad)
loope
xchg
mov
idiv
jg
out
cmp
sub
mov
push
lods
jmp
adc
cli
idiv
mov
mov
int3
push
rcl
xchg
jge
push
xor
adc
jmp
sub
aad
test
outs
and
(bad)
loop
pushf
pop
dec
and
mov
js
or
cmp
lods
iret
xchg
das
fidivr
mov
data16
xchg
jmp
xchg
inc
xor
adc
lods
sar
int
repz
mov
pop
xor
mov
(bad)
cs
not
das
xchg
int
inc
push
or
dec
sub
mov
adc
dec
mov
dec
add
stos
out
test
jbe
push
ins
mov
mov
out
(bad)
mov
lea
jl
rep
jmp
push
cmp
and
mov
jmp
stos
or
xchg
aam
xchg
(bad)
xchg
adc
(bad)
adc
mov
mov
mov
popf
(bad)
cmps
call
lahf
hlt
test
cdq
dec
and
push
jg
clc
aad
in
cmp
ins
mov
pop
push
rcr
pushf
fucompp
lods
ficomp
jae
or
not
jmp
xchg
call
aas
(bad)
jp
enter
adc
mov
dec
and
xlat
add
mov
push
mov
sbb
fldenv
adc
and
aad
add
mov
push
cmp
adc
xor
mov
ror
shr
clc
outs
lods
xor
cmc
aaa
lods
loope
scas
push
add
ret
jmp
stos
outs
xchg
idiv
push
stos
stc
cdq
inc
ins
push
and
in
dec
and
int
repnz
xchg
sbb
xor
dec
mov
cmp
arpl
ss
mov
sub
gs
or
xchg
sub
xor
cmp
or
push
push
jno
jnp
call
cld
fidivr
xchg
leave
test
popf
fistp
out
mov
mov
mov
(bad)
mov
jmp
loopne
std
mov
mov
xchg
cmc
fistp
(bad)
scas
rcl
(bad)
mov
sbb
push
sub
push
sub
adc
inc
adc
add
dec
das
cmovne
bound
push
or
dec
cmova
pop
sbb
push
adc
imul
and
inc
xor
sub
adc
ret
test
(bad)
out
movs
rol
test
push
pop
pop
xor
fs
inc
add
dec
add
imul
das
push
inc
xor
push
push
xor
sbb
pop
adc
push
xor
push
and
ds
push
jl
addr16
or
js
inc
add
mov
scas
call
lods
loope
repz
fild
aaa
ja
jbe
je
pop
and
inc
cmp
push
pop
inc
pop
or
outs
xor
sbb
push
sbb
add
sub
cmp
outs
cmovae
xor
jo
popa
sub
dec
push
fs
cmovg
xor
inc
and
gs
(bad)
sub
js
push
push
inc
add
sub
sbb
and
mov
lods
ficomp
ficomp
int3
add
sti
stos
in
and
in
shl
mov
les
mov
add
sbb
test
mov
cmps
ret
xchg
call
mov
mov
scas
jmp
test
loop
loop
loop
pop
jb
add
enter
pop
retf
mov
mov
retf
xor
out
stos
cli
and
aam
scas
xor
(bad)
jecxz
shl
movs
int3
imul
sub
loope
scas
jb
out
pushf
jbe
shl
dec
cmp
(bad)
(bad)
lahf
mov
pushf
dec
pop
dec
push
call
mov
ins
iret
adc
out
push
push
or
push
retf
movs
sbb
mul
push
push
xor
mov
xchg
aad
leave
cmps
leave
sbb
adc
out
cmp
cdq
es
stos
dec
xor
sub
cmps
in
add
or
ror
in
jge
ins
sahf
hlt
mov
cmp
pop
jns
stc
mov
out
sahf
cld
add
push
add
icebp
test
inc
popa
cmp
mov
stos
les
mov
cwde
idiv
rol
add
test
mov
pop
cmp
jp
clc
movs
leave
sbb
cmps
pop
xor
test
mov
popa
sub
leave
sbb
push
inc
lahf
cmc
test
sbb
pop
sbb
jmp
push
adc
lahf
push
pop
pusha
rol
jbe
(bad)
lods
fdivr
into
mov
test
xchg
cli
mov
shr
aad
jmp
int3
xchg
in
jo
popa
xchg
std
xchg
fisttp
push
jo
push
or
and
mov
jge
pop
jnp
sbb
fwait
in
out
sbb
aaa
ja
add
shr
ss
inc
ds
and
fistp
mov
stos
and
pusha
pop
ret
neg
xor
push
ja
cmp
inc
xor
fxtract
mov
adc
mov
add
sub
in
dec
cmp
sbb
not
adc
aas
pop
sbb
fcomp
inc
lds
jns
hlt
add
retf
inc
xchg
sar
(bad)
pop
or
adc
cmp
adc
sbb
cmp
mov
add
not
daa
xchg
cld
(bad)
retf
xchg
sbb
ds
daa
jp
pop
adc
bound
je
push
ret
scas
out
sahf
stc
mov
sbb
dec
das
jno
dec
sub
adc
push
dec
adc
push
or
jg
inc
cmp
sub
pusha
add
jb
inc
xor
daa
je
dec
pop
popa
and
push
cmp
jo
popa
sub
xor
cs
adc
pop
pop
jno
pop
pop
dec
adc
sbb
push
cmp
or
sbb
push
jns
pop
pop
inc
pop
cmovg
inc
pop
inc
or
cld
mov
(bad)
rcl
mov
(bad)
rcl
(bad)
scas
ficomp
int3
adc
in
movs
int3
add
(bad)
lods
out
mov
fst
fild
enter
retf
lahf
jmp
out
cmps
int
cli
mov
sti
test
add
xchg
lds
hlt
fwait
jmp
movs
div
clc
movs
(bad)
xchg
(bad)
mov
mov
test
popf
fadd
aad
(bad)
cmps
jmp
movs
(bad)
cmps
loopne
out
xor
out
lahf
fild
cmp
push
adc
jp
pop
cmp
push
popa
pop
add
inc
sbb
dec
sub
or
outs
das
dec
cs
cwde
idiv
xchg
iret
mov
lahf
(bad)
mov
xchg
ror
sti
mov
rep
rcl
adc
aas
addr16
or
add
dec
es
add
ins
adc
pop
adc
push
sbb
sub
ins
sub
dec
cmp
daa
dec
or
sub
push
pop
aaa
jp
cmp
and
pop
pop
jbe
pop
xor
cdq
xor
(bad)
rcr
int3
and
in
pop
ds
(bad)
out
push
loope
jge
adc
neg
stos
shr
fistp
pop
call
mov
bound
push
jg
cmp
std
or
push
mov
pop
xchg
sub
jge
mov
dec
or
mov
push
push
ins
sub
xlat
cmps
js
xor
out
scas
call
nop
sar
fidivr
ja
(bad)
lods
test
pusha
dec
or
mov
adc
popf
mov
sub
or
leave
aad
aad
stos
fcomp
mov
inc
add
push
xor
sbb
shl
inc
add
(bad)
loop
sbb
icebp
lods
into
jmp
mov
out
rcr
push
outs
add
adc
push
add
xchg
push
add
test
jbe
mov
neg
cmp
sub
not
enter
jecxz
out
push
xchg
xchg
(bad)
dec
fild
cwde
cmp
sbb
push
fldenv
aam
icebp
popf
mov
jno
push
clc
mov
into
push
cmp
repnz
mul
mov
not
std
sar
dec
outs
jno
inc
sti
sub
jo
cwde
mov
lds
cmp
mov
mov
adc
fnstcw
cmp
lock
mov
iret
adc
int
sbb
mov
and
push
inc
jne
aam
imul
cld
iret
outs
mov
add
mov
clc
adc
(bad)
cmp
es
add
jb
imul
out
fst
jmp
sub
(bad)
out
test
das
and
xchg
pop
pusha
and
pop
loop
pop
movs
and
push
icebp
sub
call
nop
pop
retf
sar
add
add
fdivr
mov
mov
dec
mov
ins
cdq
es
cwde
mov
push
stos
lea
scas
and
fistp
push
xlat
mov
dec
iret
(bad)
je
sbb
push
and
ror
fs
js
popa
cmp
xchg
repz
sub
pop
push
pop
sub
addr16
popf
jge
cmps
jae
add
lods
ins
pop
in
adc
(bad)
jmp
jge
mov
(bad)
pop
ins
cwde
movs
xchg
pop
aaa
shl
mov
stos
jnp
mov
adc
mov
call
cmp
imul
stos
pop
jb
shr
inc
(bad)
sbb
xchg
cmp
pop
das
dec
cmp
sub
xchg
ret
outs
jl
and
scas
jb
retf
xchg
cmps
popa
gs
loopne
sahf
test
arpl
int
pop
cmps
adc
xor
adc
mov
mov
sar
fimul
mov
(bad)
loopne
iret
jp
loopne
in
mov
jg
test
pop
stc
pop
mov
jecxz
outs
cmp
getsec
(bad)
inc
and
retf
jmp
adc
mov
jo
pop
xor
sbb
xlat
jp
ds
mov
cmps
cmp
xchg
mov
sub
fcom
mov
je
in
cli
jp
aaa
stos
inc
ret
pop
jnp
or
std
fimul
pop
mov
movs
pop
jb
lods
stos
jle
ins
rcl
shr
adc
lock
push
imul
aas
adc
mov
push
leave
cmp
cmp
fcomp
icebp
vrcpss
push
xchg
adc
xchg
push
retf
sub
data16
(bad)
xor
sbb
imul
loop
retf
fist
xchg
pop
(bad)
(bad)
xchg
mov
movs
cwde
imul
mov
fnstenv
jb
sub
or
call
movs
xchg
jo
mov
push
mov
jp
ins
xlat
jns
fdiv
pop
shl
stc
push
xchg
adc
ds
mov
cld
bound
fwait
scas
aad
sbb
iret
ret
pop
pop
cdq
dec
in
jb
mov
retf
add
je
cmp
jnp
xlat
iret
in
inc
jo
retf
cmp
jbe
fadd
inc
push
fmul
add
mov
(bad)
std
push
cs
lock
pusha
xor
pop
lods
xor
push
push
lods
xchg
(bad)
rcl
ja
in
lds
pop
jno
adc
sub
mov
addr16
lods
clc
add
movs
jp
int3
jmp
cmc
imul
bound
push
add
mov
cs
cmc
xchg
mov
push
mov
cmp
outs
push
lods
outs
aaa
movs
pop
push
xor
mov
mov
data16
inc
mov
ins
jmp
mov
in
dec
inc
push
movs
jbe
fucomi
dec
rcr
jmp
clc
dec
in
adc
ret
fcom
(bad)
fisttp
test
sahf
arpl
(bad)
call
mov
call
sti
sti
das
push
mov
movs
bswap
cmp
pop
mov
ins
shl
aaa
jge
std
cmps
and
pop
das
pop
shl
push
add
fld
sbb
adc
or
(bad)
jnp
mov
out
mov
fcomp
xchg
push
ret
(bad)
push
out
mov
or
xor
std
jns
inc
mov
lea
pop
(bad)
adc
and
cmp
enter
(bad)
lods
mov
addr16
mov
in
lea
movs
pop
mov
mov
pushf
lock
fadd
test
rcr
pop
cld
ret
jmp
dec
call
shl
or
mov
sbb
push
adc
clc
hlt
sbb
adc
test
sub
adc
call
cmps
add
or
pop
retf
push
push
ficomp
in
les
inc
and
adc
xchg
xlat
sbb
(bad)
in
dec
adc
jmp
mov
xchg
inc
das
retf
mov
push
rcl
jb
lods
(bad)
int3
mov
push
mov
call
pop
jo
mov
pop
arpl
movaps
call
arpl
lods
xchg
or
outs
outs
and
div
cli
jne
repnz
sub
mov
xchg
cmp
(bad)
mov
xor
mov
(bad)
retf
test
test
xor
sub
xchg
jmp
mov
mov
(bad)
aam
arpl
mov
int
xsha256
cmps
pop
push
push
cmps
jecxz
je
jns
sub
jge
inc
loopne
(bad)
jno
addr16
inc
pop
mov
xchg
jmp
jne
jae
das
or
popf
jns
mov
mov
jns
loope
and
fwait
pop
inc
bound
xor
sar
dec
divps
pop
mov
sbb
adc
je
les
cmps
lods
in
adc
dec
mov
stc
dec
adc
stos
cmp
inc
mov
mov
and
jnp
xchg
jle
adc
movs
jns
add
hlt
(bad)
(bad)
pop
adc
mov
sbb
rol
push
jmp
mov
movlps
push
ret
in
nop
inc
xchg
xchg
or
pop
xchg
xchg
lock
lea
into
adc
fstp
xchg
xchg
dec
inc
push
dec
and
mov
pop
jnp
pop
stos
and
neg
into
inc
adc
inc
fild
and
ret
stos
and
add
add
jnp
inc
(bad)
out
mov
sar
cmp
cmp
icebp
xlat
or
push
in
daa
sub
jecxz
dec
inc
sbb
xchg
xchg
inc
inc
pop
pop
retf
cli
mov
adc
inc
bound
cmp
mov
ds
fdiv
gs
in
jns
mov
jle
cmp
leave
lock
cmp
sbb
ins
(bad)
ret
add
sbb
add
jmp
mov
aam
movs
jb
call
adc
xor
cmp
cmp
retf
pop
or
imul
xchg
mov
xchg
add
mov
sbb
mov
mov
xor
xor
cld
mov
mov
add
xchg
push
lds
test
popf
mov
sub
cli
inc
and
dec
push
nop
cli
shl
iret
xchg
test
and
or
cmp
jae
mov
rcr
fisttp
pop
sub
fsubr
or
arpl
adc
mov
data16
jg
cs
xchg
ds
cmc
leave
xchg
in
push
shl
jmp
ins
push
popa
sub
cmp
mov
xor
dec
mov
inc
js
xor
cmp
stos
outs
jge
push
adc
ja
mov
cmp
mov
loopne
sbb
jl
repz
and
mov
je
sub
ja
ror
aas
add
cmc
ror
sbb
cmp
xchg
jp
pushfw
int3
imul
sbb
mov
les
mov
sar
or
jae
fs
pusha
xchg
mov
jo
lods
and
mov
mov
sub
dec
test
mov
push
push
scas
pop
cld
cmp
push
xor
mov
outs
stos
call
add
push
(bad)
stos
xchg
mov
in
jo
add
push
lds
dec
lds
mov
pop
sbb
mov
cmps
pop
scas
push
mov
mov
jmp
inc
imul
sbb
test
jmp
sahf
xlat
retf
sar
rol
and
and
mov
cmp
mov
leave
jo
pop
mov
xchg
pop
push
mov
mov
xlat
xor
dec
mov
sub
add
int3
leave
mov
xchg
call
jmp
pop
xor
jle
loope
cmp
xor
out
ins
mov
mov
push
fstp
cdq
cmp
cs
call
sub
mov
pop
iret
dec
in
push
jl
dec
cmp
sub
pop
xlat
pop
xor
xlat
mov
idiv
sub
and
or
cmp
mov
hlt
push
cmps
mov
xor
pop
push
retf
stos
sub
(bad)
xchg
jp
sbb
mov
ficomp
inc
movs
xchg
je
xchg
pusha
adc
adc
push
mov
pop
and
jnp
xlat
jg
stc
mul
dec
xor
clc
pop
inc
xor
and
je
mov
lock
push
pop
imul
fimul
or
jno
xor
mov
test
(bad)
pop
aad
minps
mov
sub
aas
ficom
(bad)
cld
or
and
fadd
pop
retf
shr
stos
and
fimul
mov
mov
loope
mov
outs
loope
and
call
imul
popa
test
aas
ins
shl
lds
fnclex
out
cmp
xor
and
in
and
cmp
add
aas
or
inc
sahf
in
sbb
test
std
mov
fs
xor
cmp
int
cmps
cmc
inc
and
lods
push
mov
aas
jmp
fcomp
lods
mov
push
push
test
fisttp
adc
ss
mov
dec
dec
adc
(bad)
mov
(bad)
in
xor
jno
out
call
xor
mov
mov
outs
daa
or
cmp
xchg
push
rcr
dec
sti
pop
(bad)
inc
lahf
pop
jle
ret
adc
cwde
xor
aaa
dec
test
push
mov
push
es
pushf
imul
mov
cmp
out
mov
adc
imul
sahf
mul
xchg
inc
imul
enter
aam
fwait
or
cmc
movs
ss
clc
mov
xchg
hlt
in
adc
xor
stos
jo
cmp
sahf
or
push
scas
xchg
retf
jle
into
cli
test
jae
je
fs
mul
xor
add
cmp
cmp
fiadd
mov
jle
adc
(bad)
adc
and
out
push
int3
enter
fstp
cmps
mov
push
fisub
std
adc
inc
dec
nop
push
popf
mov
adc
popa
mov
repnz
lahf
sbb
inc
imul
or
ins
dec
cs
fsubr
ja
dec
inc
lea
add
test
pop
les
sbb
push
push
sbb
xor
mov
leave
mov
cmps
xchg
cmp
jecxz
mov
je
mov
and
hlt
sub
sub
dec
into
hlt
sbb
xchg
cld
mov
jo
ds
push
gs
sub
test
popa
xchg
(bad)
jl
mov
int
sbb
cmps
ret
cmps
mov
mov
test
es
or
(bad)
mov
lahf
mov
sub
jmp
inc
jmp
dec
in
push
mov
loop
cmp
aad
pop
mov
xor
adc
sub
mov
movaps
fiadd
icebp
enter
push
mov
enter
pop
xchg
out
fcomp
scas
cld
adc
adc
outs
pusha
je
ficom
mov
pop
fsub
pop
repz
and
je
in
cmp
sub
sub
out
cmp
mov
test
mov
mov
test
lahf
mov
mov
add
es
sar
push
pop
jnp
mov
dec
shr
adc
xor
ror
in
sub
xchg
pusha
out
ret
adc
mov
das
xor
ret
imul
fild
or
push
shl
icebp
or
nop
xor
inc
xchg
push
aam
(bad)
sub
(bad)
xor
imul
cmp
out
sbb
in
xchg
add
lods
cmp
mov
lds
std
push
inc
clc
arpl
fmulp
(bad)
iret
dec
ins
fisubr
inc
cmp
push
inc
loopne
movs
ss
jnp
mov
mov
imul
cwde
add
jnp
inc
xchg
shr
xor
add
or
or
or
push
fcmovb
inc
push
aad
popf
dec
inc
xchg
jbe
mov
loopne
(bad)
repnz
mov
inc
retf
out
std
inc
mov
in
and
sub
and
add
mov
mov
std
adc
scas
add
lods
cs
fdivr
push
retfw
dec
(bad)
jmp
or
and
xchg
loop
popa
sbb
sub
push
xor
popa
inc
push
mov
mov
scas
fld
bound
shr
dec
jnp
jmp
push
xchg
push
stc
ss
jb
into
dec
lods
out
pop
aad
adc
sbb
in
xchg
dec
icebp
push
rol
jo
test
pop
fidiv
loop
dec
jbe
sbb
fist
mov
xchg
cdq
push
xchg
jmp
cld
inc
sbb
mov
mov
inc
ret
sahf
fsubr
pop
mov
iret
pop
jne
sti
push
fcomi
outs
push
inc
mov
(bad)
inc
inc
dec
sbb
loop
inc
sti
mov
push
and
lahf
or
jl
out
iret
loope
sub
mov
rol
xor
gs
mov
and
inc
dec
in
xchg
dec
in
dec
fsubr
into
mov
push
jb
adc
xchg
dec
aas
loop
ds
sbb
inc
cmp
sub
push
inc
test
sar
sub
sub
inc
xchg
cmp
and
out
xchg
cwde
sbb
popf
iret
inc
pop
inc
xchg
repnz
and
das
adc
dec
dec
add
pop
test
popa
dec
nop
xchg
(bad)
pop
in
cmp
dec
xchg
inc
xchg
addr16
adc
dec
movs
dec
cli
sub
mov
loope
(bad)
retf
dec
scas
es
xor
out
stos
mov
pop
call
adc
pusha
out
int
aas
mov
pop
jo
or
sbb
fist
jne
cld
retf
mov
xor
add
mov
stc
sub
paddusw
mov
ficom
or
ficom
(bad)
sbb
out
fistp
call
dec
push
imul
mov
stos
cwde
jle
or
pop
or
out
push
call
xor
sbb
and
and
push
mov
imul
cmp
adc
adc
mov
mov
mov
mov
ds
mov
mov
cmp
adc
xchg
or
call
inc
and
fsub
pop
outs
rol
xor
jge
stos
leave
test
sar
scas
push
mov
mov
sbb
sub
addr16
(bad)
aad
cdq
call
dec
sti
push
lods
icebp
ret
add
stos
cmp
pop
ja
dec
(bad)
leave
push
sbb
mov
sbb
push
mov
push
outs
pop
add
(bad)
std
inc
adc
(bad)
xor
sahf
popa
nop
into
outs
pop
cs
inc
iret
cli
mov
pop
aad
imul
std
nop
mov
sub
cmp
cmps
or
ins
fidiv
sbb
jge
add
mov
inc
sar
or
pop
push
mul
lods
mov
jle
cmp
xchg
loope
inc
mov
dec
xlat
out
aad
pop
(bad)
xor
aaa
push
jne
je
pop
pop
push
(bad)
pop
imul
addr16
out
gs
inc
in
popa
mov
inc
cmps
in
push
adc
mov
call
xchg
add
popf
and
mov
inc
xchg
les
inc
dec
(bad)
imul
into
xor
lds
popf
ja
cmp
ror
inc
sbb
in
mov
sub
sbb
pusha
(bad)
adc
ret
out
cmc
sub
xchg
lds
nop
test
dec
cmp
xor
jle
fmul
mov
(bad)
in
add
mov
rcr
and
mov
xor
lea
cmp
out
sbb
and
add
je
mov
push
repnz
mov
fwait
int3
rol
cmps
inc
scas
add
mov
bound
iret
or
mov
jle
jg
xchg
int3
retf
sbb
pop
mov
xchg
sub
frstor
out
pop
retf
repnz
xor
scas
jmp
cmp
jns
pop
push
popa
stc
push
mov
push
push
pushf
adc
push
(bad)
mov
sbb
mov
sbb
inc
xchg
mov
lock
mov
jnp
into
nop
test
mov
sub
jl
xor
rol
xor
and
dec
sub
mov
fwait
hlt
add
cmp
xchg
xor
ja
mov
xor
sbb
jns
sub
shl
push
je
movs
mov
es
push
movs
repz
rol
ins
les
into
out
dec
scas
xchg
or
loopne
shl
xchg
adc
jg
xor
mov
or
fs
mov
inc
outs
test
or
outs
mov
ds
add
xor
nop
sti
mov
dec
xchg
lea
xor
sbb
sahf
fdiv
inc
add
pop
push
lahf
or
ins
sahf
pop
jns
imul
rcr
fcom
sub
retf
enter
outs
sbb
dec
add
pop
daa
in
adc
lock
mov
xchg
push
pop
dec
daa
ffree
sti
js
or
dec
lahf
sub
or
push
movs
mov
inc
xor
push
jecxz
mov
and
mov
shl
sti
aas
push
or
arpl
mov
xor
xchg
pop
jnp
cmc
jecxz
xor
repz
(bad)
mov
dec
mov
add
mov
push
ins
push
pop
add
inc
int
sahf
mov
enter
mov
cdq
popa
xlat
adc
adc
inc
je
sbb
into
inc
sar
jp
pop
in
or
fldcw
add
cs
jmp
or
jmp
rcl
adc
je
mov
js
dec
xor
sbb
cs
dec
arpl
out
sbb
ins
jmp
movs
mov
add
outs
mov
xchg
push
icebp
sbb
gs
icebp
retf
mov
das
(bad)
mov
sub
or
movs
and
mov
out
inc
inc
mov
mov
fwait
jmp
or
xlat
in
retf
jle
enter
int
xor
xor
popf
mov
cld
popa
jae
out
gs
or
adc
xchg
sub
into
sahf
(bad)
adc
cmps
mov
xchg
inc
pop
xchg
mov
push
mov
jmp
pusha
mov
push
and
inc
int3
imul
sub
jp
nop
je
jp
and
add
xchg
push
add
inc
push
sbb
push
xchg
xchg
shl
(bad)
(bad)
push
(bad)
push
bound
ret
xor
jb
push
cmps
xchg
cdq
jne
jbe
push
or
xor
das
xchg
packuswb
mov
jle
js
inc
ds
and
jmp
adc
cld
fstp
mov
aas
repnz
adc
or
push
out
mov
xchg
mov
ret
scas
int3
shl
scas
ss
sub
or
test
sbb
(bad)
(bad)
cmps
jp
cmp
mov
pop
int
sbb
repz
mov
inc
repz
ja
loope
in
out
ffreep
sub
push
push
cmp
push
popa
fcomp
or
jo
dec
mov
aad
lahf
dec
jmp
rol
xchg
shl
retf
push
in
and
mul
lea
retfw
mov
pop
fiadd
or
pop
lods
push
es
stos
out
inc
scas
std
(bad)
sbb
rcr
xor
ja
imul
mov
test
sub
push
js
fmul
out
jo
adc
mov
push
popf
dec
ss
push
jo
imul
popa
dec
fs
mov
sub
cmp
dec
xlat
mov
sahf
and
test
sbb
mov
inc
xchg
mov
aam
fmul
outs
cmp
pushf
sbb
xchg
enter
xor
push
xchg
sub
imul
pop
push
xor
push
mov
lahf
stos
pop
pop
mov
es
shr
repnz
mov
push
loope
mov
pop
(bad)
pop
xchg
daa
adc
mul
and
ss
out
fistp
cmp
fwait
mov
lea
popa
push
sub
gs
sbb
repz
push
cmp
(bad)
xchg
sbb
scas
aam
pop
clc
add
test
xchg
mov
mov
sbb
pop
fisubr
pop
iret
jmp
loope
popa
cli
inc
xor
loop
adc
retf
imul
lock
in
push
sbb
adc
or
xchg
sbb
adc
mov
push
rol
bound
cmp
xor
rcl
mov
imul
xchg
(bad)
(bad)
lods
cwde
dec
sub
jmp
test
xchg
dec
cmp
mov
sub
adc
les
imul
mov
(bad)
mov
mov
mov
xor
sbb
ds
repz
sub
sub
inc
xor
mov
es
mov
xchg
xlat
jecxz
(bad)
pop
inc
xor
fld
add
mov
and
mov
mov
sbb
retf
fs
cmps
jbe
mov
shrd
add
cmp
mov
ret
adc
adc
int3
cmp
mov
adc
pop
repz
(bad)
ftst
aas
stos
pushf
sbb
mov
mov
popa
or
fsub
adc
mul
hlt
push
dec
lock
xchg
popa
dec
bound
xchg
cmps
mov
or
xchg
xor
mov
imul
int3
jae
dec
test
push
je
xor
mov
xor
pop
mov
cmc
mov
mov
add
push
or
jbe
add
fisubr
mov
dec
cdq
push
jmp
bound
push
xor
inc
or
pop
jbe
cli
fcom
sar
pop
mov
push
inc
sub
adc
mov
movs
lds
mov
pop
test
outs
xchg
mov
retf
mov
dec
push
jmp
push
jmp
out
dec
imul
pop
arpl
out
mov
or
ficom
leave
les
je
dec
jo
repnz
cmp
jmp
sub
mov
jle
lods
out
stos
mov
or
xchg
das
inc
mov
in
fdivr
lods
pop
stos
int
call
mov
(bad)
or
xchg
(bad)
jmp
movs
out
or
or
dec
outs
xchg
retf
mov
pop
imul
pusha
fisttp
dec
push
fiadd
cs
outs
hlt
xor
pop
and
das
sub
sbb
xchg
cli
inc
sbb
push
sbb
xor
test
es
cli
rcr
or
push
sahf
mov
push
rcl
jb
sbb
fwait
popa
test
movs
pop
retf
test
jl
inc
add
pop
mov
(bad)
ins
rcl
jmp
xchg
outs
jno
fist
lds
pop
int3
adc
(bad)
fnstenv
or
mov
pusha
mov
mov
mov
sbb
xlat
cmp
dec
dec
(bad)
loop
stos
call
or
mov
sahf
push
sti
in
pop
pop
sahf
dec
xor
test
mov
lods
dec
fwait
test
pop
push
in
add
adc
push
ror
fst
int3
push
outs
(bad)
in
mov
jbe
fisubr
gs
push
ins
mov
mov
mov
mov
push
inc
fwait
(bad)
pop
and
ret
stos
adc
cmp
dec
mov
cwde
adc
lock
mov
pop
movs
mov
je
inc
sub
and
mov
jns
adc
push
out
or
mov
push
sti
pop
sub
out
(bad)
dec
mov
sub
test
sbb
or
movs
test
sbb
gs
xor
mov
xor
cmps
jmp
sbb
repz
(bad)
and
xchg
pop
adc
jnp
fist
dec
int
test
mov
jbe
stc
out
jmp
and
aam
dec
ja
ins
call
into
jo
popf
dec
ror
call
aad
or
mov
dec
in
mov
test
movs
dec
pop
cmps
rcl
xchg
push
icebp
xor
jg
outs
xlat
es
retf
dec
xchg
inc
loope
sub
and
jnp
leave
faddp
mov
stos
(bad)
push
add
jae
mov
nop
sar
pop
xlat
inc
pop
movs
and
adc
pop
ret
addr16
out
rol
jo
pop
mov
sub
call
push
inc
adc
scas
adc
push
push
cmp
idiv
popa
xchg
scas
out
fild
(bad)
xchg
or
mov
sub
pop
and
hlt
fdiv
mov
pop
out
test
psrld
push
imul
mov
idiv
pop
jae
sbb
mov
pop
adc
ror
das
pop
cdq
mov
out
cmp
data16
sub
pop
iret
nop
adc
rcr
int
pop
and
sbb
cld
je
shl
mov
mov
lds
push
add
rep
and
push
(bad)
(bad)
fist
inc
xor
cmp
sbb
dec
xchg
test
stos
adc
sub
std
sub
imul
mov
cmovle
cli
cs
btc
adc
ror
ins
lock
fs
ja
movs
aad
les
push
push
test
retf
mov
sub
lahf
mov
xor
ja
sbb
mov
sub
mov
cmp
add
mov
ds
jl
imul
movs
pop
stc
pop
outs
data16
mov
jl
imul
xchg
jmp
loopne
cmp
ret
out
inc
mov
rol
ins
imul
inc
test
mov
inc
int
jbe
movaps
movs
mov
adc
push
imul
imul
outs
loopne
test
inc
sbb
fsubrp
punpckhdq
mov
in
xor
addr16
lods
jge
push
pop
and
xchg
sbb
sub
fmulp
pop
stos
scas
sbb
mul
cs
outs
loopne
mov
fs
test
retf
cmp
inc
or
push
jno
mov
call
or
pop
sub
icebp
movs
mov
pop
cld
and
fdiv
mov
lods
loope
dec
dec
mov
jecxz
mov
xor
imul
pusha
jb
daa
jbe
arpl
adc
jbe
cmp
xor
cmc
(bad)
cmp
in
adc
dec
or
adc
adc
fwait
inc
fsubr
out
jns
int3
sbb
leave
(bad)
jmp
shl
jecxz
mov
or
sar
out
out
inc
daa
dec
in
popf
xor
aas
adc
sbb
push
mov
jge
xor
rcr
pop
imul
adc
pop
clc
loopne
push
movs
mov
lock
push
jg
shl
stc
in
xor
pop
imul
pop
xchg
push
aad
sub
vcmpss
shr
cmps
cmp
cwde
or
hlt
mov
sbb
in
xor
mov
mov
int
sub
and
xlat
or
jl
fimul
call
push
idiv
or
out
mov
mov
shl
test
sar
add
pop
sti
lds
int3
and
and
dec
dec
xlat
lods
push
add
scas
in
fiadd
mov
push
sbb
outs
xchg
jnp
and
pop
int3
arpl
ds
mov
(bad)
cmps
mov
inc
mov
movs
inc
lods
pop
arpl
imul
and
into
out
stos
mov
or
enter
cmp
push
cld
pushf
(bad)
dec
ins
or
mov
xchg
cmc
int3
iret
xchg
(bad)
adc
int
fdivr
pop
sbb
enter
mov
repz
xchg
loope
dec
mov
addr16
sub
xchg
xchg
inc
jae
mov
call
mov
cmc
push
div
loopne
lahf
ret
mov
cmp
cli
dec
xor
xchg
pop
lods
sbb
imul
jmp
push
xchg
cmc
cmps
call
mov
aam
daa
lods
xchg
test
mov
mov
mov
add
adc
mov
dec
push
and
mov
lea
js
arpl
jge
stos
inc
sbb
push
rol
iret
jno
sti
xchg
jno
adc
ds
sbb
cmp
test
add
pop
push
sub
xchg
dec
lods
push
mov
sub
mov
jmp
sub
jle
sbb
dec
mov
add
movs
hlt
pop
les
arpl
ins
jp
rcr
jae
push
or
arpl
fdivr
nop
dec
add
push
fimul
popf
push
shr
mov
out
adc
push
fdivr
pop
add
mov
repz
and
dec
pop
repnz
sub
stos
mov
sbb
shl
push
fcom
adc
lea
gs
push
aaa
add
add
xor
xchg
sub
and
outs
fcom
cmp
inc
add
mov
add
cmp
(bad)
out
dec
mul
stos
repz
add
adc
test
jo
mov
sbb
aad
adc
push
inc
add
adc
add
mov
loope
add
mov
pop
sbb
mov
mov
in
or
(bad)
and
fidivr
movs
out
or
dec
inc
sbb
js
sub
sbb
fimul
nop
fcmovnbe
orps
enter
ds
imul
aas
ret
mov
jno
pop
cmp
xchg
dec
xchg
push
cmps
lods
push
dec
push
sar
pop
fld
scas
add
adc
cmps
pop
and
call
cld
cdq
clc
data16
leave
mov
ja
add
inc
shl
stos
scas
cmps
push
mov
mov
jo
(bad)
fisttp
and
sti
js
mov
xchg
push
mov
sub
rcl
fs
dec
in
out
inc
jmp
scas
inc
mov
xor
fidiv
jp
int3
sub
inc
inc
push
cmps
push
retf
and
(bad)
loope
(bad)
enter
cmps
ja
inc
mov
fnstsw
scas
cwde
lock
inc
mov
xor
test
cli
clc
daa
call
sbb
bound
mov
test
xor
jmp
arpl
mov
int3
stos
dec
cld
ja
sar
out
cld
pop
je
ret
lods
push
cmp
pop
not
mov
test
bound
outs
jmp
pop
mov
arpl
xchg
jo
mov
pop
inc
fisttp
adc
fsub
pop
dec
fistp
stos
pop
mov
std
int3
xor
rcr
(bad)
imul
push
arpl
dec
mov
js
mov
cmps
test
pop
mov
mov
stos
xchg
or
lahf
cmp
sbb
or
jmp
aam
mov
ror
lahf
repz
es
sbb
sbb
retf
fimul
mov
fcomi
pushf
test
jns
add
sbb
pop
add
test
dec
outs
pop
leave
leave
xor
into
xchg
cs
dec
lock
repz
(bad)
repnz
sar
or
cs
dec
cmp
mov
mov
dec
or
and
sub
daa
add
jns
(bad)
int3
sbb
call
or
mov
push
or
push
push
xor
push
mov
mov
jmp
outs
inc
or
dec
jbe
loop
mov
mov
inc
movs
mov
adc
or
inc
outs
jge
push
or
add
pop
out
(bad)
adc
dec
popf
sub
in
push
stos
xchg
push
inc
push
jb
pop
mov
dec
pop
cmps
sti
arpl
mov
in
cmp
pop
xchg
sbb
lahf
or
movs
pop
bound
mov
add
adc
jp
mov
adc
mov
int3
icebp
fcomp
xchg
mov
das
(bad)
loopne
pop
and
adc
inc
lock
js
add
mov
sub
mov
mov
jb
loopne
push
aaa
push
pop
or
add
repz
fldenv
loope
stc
mov
sub
pop
jp
std
(bad)
cmp
jmp
fbstp
gs
jbe
aaa
cli
js
fnstsw
loop
daa
fdivr
xchg
jbe
sahf
fist
mov
jbe
fcomp
sbb
adc
in
sbb
mov
mov
dec
loopne
push
jecxz
cli
mov
bound
jno
and
adc
pop
jbe
out
in
jne
mov
ret
add
sub
push
mov
sub
pop
test
mov
fnstsw
push
cwde
inc
cmp
test
or
dec
outs
dec
sbb
test
(bad)
sub
or
xacquire
ror
aas
cli
adc
(bad)
adc
hlt
inc
jmp
xor
mov
jnp
mov
stos
push
rol
cmp
cmps
inc
mov
call
fwait
mov
sbb
mov
out
lock
cmps
sub
mov
mov
rcl
call
cmc
adc
sub
ror
mov
out
mov
mov
sub
jne
xchg
push
mov
jmp
mov
out
sbb
mov
and
and
jp
retf
add
lods
pop
cmp
jle
cmps
cdq
jb
ret
push
cmc
out
pop
pop
mov
repnz
sbb
jo
pusha
or
pop
enter
lods
fdivr
imul
aas
cmp
xor
and
call
xor
aaa
cmp
cli
add
lock
adc
push
mov
sub
in
inc
jle
fs
aam
add
and
sbb
dec
xchg
outs
push
inc
stos
push
cmp
dec
dec
cmp
add
cmp
(bad)
push
sbb
xchg
gs
add
enter
cmp
sti
jno
xchg
stos
mov
(bad)
lahf
sti
pop
push
fnstenv
retf
(bad)
mov
(bad)
call
push
std
outs
mov
push
je
(bad)
cwde
add
xor
into
inc
shr
or
in
mov
sub
mov
dec
std
cmp
mov
pop
xchg
inc
(bad)
fisubr
sti
cld
push
enter
ss
adc
xor
push
adc
js
or
nop
je
setbe
scas
hlt
loop
pop
mov
js
scas
pop
xchg
fcomp
ret
adc
test
stos
push
movs
mov
add
sbb
test
mov
jle
(bad)
hlt
rol
shl
add
jg
cld
test
sub
inc
xor
or
stos
or
fs
(bad)
sub
arpl
cmp
fwait
inc
fld
add
xchg
std
sbb
dec
ja
add
mov
xchg
stc
hlt
mov
or
imul
cmp
mov
(bad)
pop
push
lds
retf
imul
add
jne
fcmovnu
lock
test
data16
out
movhps
xor
(bad)
leave
sbb
inc
inc
cld
jns
cwde
loopne
stos
xchg
stos
add
mov
sbb
pop
cmp
shr
cmps
data16
and
dec
fnstenv
int
jmp
mov
jecxz
mov
push
lock
lods
int
mov
mov
repnz
dec
loop
xor
imul
xor
and
popa
xor
(bad)
mov
(bad)
or
push
adc
in
mov
aas
jge
sbb
ret
scas
pusha
mov
add
sbb
ret
mov
xlat
repnz
hlt
clc
dec
inc
test
xlat
sub
in
sub
scas
mov
inc
add
jbe
lods
iret
sbb
pxor
jbe
sub
jnp
in
ins
mov
jl
(bad)
out
popa
push
dec
hlt
xor
scas
jo
fs
mov
xchg
dec
js
test
sbb
jmp
add
sar
jae
mov
dec
jno
les
popa
(bad)
pop
push
das
mov
jne
adc
sub
sbb
inc
movs
popa
ffree
add
mov
iret
out
test
(bad)
cmp
mul
push
jbe
inc
cdq
and
push
jg
into
ins
int
jmp
int
inc
out
pop
hlt
fdiv
std
mov
mov
call
repnz
mov
fstp
aaa
repnz
xor
inc
fcomp
out
mov
nop
sbb
clc
jae
jae
repnz
or
in
dec
sti
aas
sbb
sbb
into
scas
in
push
cmp
pusha
sbb
xchg
or
retf
sub
pop
int3
movs
shr
pop
push
aad
cmps
push
push
push
stos
jb
push
loopne
mov
cmp
(bad)
fcmovbe
xor
mov
js
(bad)
iret
enter
jge
jno
sub
rol
jge
push
sbb
fild
pop
add
or
mov
push
xchg
stos
je
retf
dec
scas
lahf
out
(bad)
fbstp
mov
sub
retf
call
push
and
xor
int3
jl
pushf
fs
test
rsm
hlt
jmp
int
xchg
ins
hlt
jne
loope
fsubr
sbb
xor
dec
jnp
aam
push
arpl
adc
out
mov
les
pop
bound
dec
pop
ja
push
pusha
mov
xor
mov
test
in
scas
icebp
push
data16
cmp
ret
or
mov
fucompp
adc
in
daa
sub
adc
sub
andps
sti
and
loop
jmp
in
iret
arpl
mov
fs
imul
(bad)
icebp
dec
inc
(bad)
cmp
push
in
mov
stos
mov
out
int3
sar
movs
xchg
sbb
and
sbb
fstp
push
mov
stos
retf
xchg
and
js
mov
(bad)
mov
jmp
and
into
xchg
adc
lods
test
mov
movs
push
dec
and
(bad)
das
test
mov
xor
mov
jbe
cmps
jg
cmp
fucomi
popa
xlat
ret
pop
imul
popa
iret
mov
jmp
dec
ja
dec
fst
mov
cmp
sahf
lds
add
inc
pop
jb
sbb
add
bound
loope
scas
jl
data16
loop
gs
push
or
lea
out
cmps
stos
repnz
jecxz
iret
mov
jnp
pop
add
sbb
mov
push
cmp
pop
mov
cmp
pop
mov
xchg
aad
movs
xlat
(bad)
mov
(bad)
mov
jge
mov
mov
popf
js
sub
cmovo
mov
xor
(bad)
nop
movs
(bad)
int
jne
inc
pop
sub
pop
sub
int3
inc
or
jp
shl
ret
lds
xchg
arpl
dec
ficomp
and
jmp
inc
or
mov
pop
xor
xchg
ss
fiadd
add
sbb
or
out
pop
pop
rcl
pop
pop
loop
(bad)
jmp
mov
clc
mov
mov
mov
stos
enter
add
dec
add
ror
test
mov
cmps
loop
out
les
popf
adc
lds
mov
dec
and
mov
push
sbb
mov
data16
movs
repnz
cmp
dec
or
aas
jno
mov
and
cwde
mov
in
aam
ja
mov
or
push
jecxz
push
push
xor
pusha
cmp
mov
or
mov
out
push
inc
add
icebp
mov
aad
push
dec
pop
jp
movs
(bad)
fcomp
outs
outs
or
or
loop
lahf
push
div
idiv
pop
cmp
dec
adc
into
mov
je
outs
cmp
mov
sahf
lahf
fcom
sahf
mov
movs
adc
jmp
out
scas
xchg
fnsave
adc
ins
test
sub
xchg
ss
data16
pop
out
out
cmp
sub
sub
pop
outs
hlt
push
not
shl
mov
fadd
jns
fwait
stc
mov
ror
ins
js
xchg
adc
jmp
inc
clc
mov
xchg
sbb
call
imul
xchg
scas
cmps
aam
jecxz
in
mov
inc
mov
jb
fistp
xor
push
cmp
ins
sar
sbb
pop
mov
xchg
dec
popa
sub
jne
push
imul
fistp
std
mov
inc
into
inc
pop
dec
int3
mov
cli
mov
sub
push
adc
sahf
fstp
push
cli
xchg
fnstsw
test
daa
sahf
pusha
xor
jne
push
lahf
aad
stc
jo
inc
add
mov
push
cmp
push
or
movs
les
inc
fld
mov
jns
push
mov
mov
mov
mov
push
jmp
scas
ror
and
cmp
les
fstp
imul
fdiv
in
movs
mov
stos
call
jmp
push
adc
jmp
loopne
xlat
xor
mov
icebp
mov
or
out
mov
test
inc
add
jmp
sbb
sub
mov
cmp
mov
idiv
push
inc
mov
lea
inc
push
push
adc
popf
rcl
inc
adc
mov
xchg
add
push
sub
je
iret
lea
loope
fisttp
mov
popf
(bad)
mov
push
into
outs
dec
mov
in
mov
xor
popf
ficomp
fwait
jnp
outs
aaa
pop
inc
pop
push
jmp
lods
sti
cmps
cs
sbb
mov
fwait
add
stos
out
test
inc
push
sbb
retf
gs
dec
minps
and
or
sub
xchg
mov
lahf
imul
iret
xchg
jge
gs
xlat
jge
dec
mov
pop
push
xor
cmp
cdq
cmp
dec
add
adc
int
int3
jp
das
inc
xchg
mov
scas
dec
ja
push
xor
sbb
imul
sub
ins
pop
pop
scas
hlt
je
xchg
mov
lods
sbb
scas
aam
movs
(bad)
movs
fwait
scas
jo
mov
xor
xor
cmp
dec
or
and
or
loope
aas
sub
jg
push
movs
out
pop
or
inc
int3
mov
mov
pop
xlat
or
inc
fistp
shl
test
popa
sub
jbe
loop
adc
cmp
adc
shl
and
retf
add
sbb
jge
shl
xchg
inc
ds
mov
pusha
sub
add
sbb
(bad)
mov
in
frstor
dec
jp
xor
movs
shr
push
lods
push
retf
(bad)
dec
out
mov
outs
or
loope
xchg
dec
dec
cmp
push
enter
leave
mov
test
dec
neg
ja
pop
sti
xchg
mov
shr
inc
dec
(bad)
int3
scas
xor
icebp
(bad)
mov
mov
and
push
mov
push
not
out
and
loope
sbb
xor
hlt
push
cld
mov
cwde
cli
test
movs
(bad)
loopne
fs
and
adc
dec
push
dec
aad
add
and
dec
mov
js
test
mov
xchg
jecxz
sbb
aaa
sbb
jmp
cmps
add
mov
test
and
shl
cmp
push
pop
or
pop
add
int
and
jl
push
dec
mov
(bad)
mov
or
jmp
mov
stos
in
add
jb
jp
popa
add
mov
mul
dec
sbb
mov
and
adc
rol
and
hlt
in
add
mov
pop
inc
into
call
dec
aas
js
fdivr
mov
dec
out
xlat
sub
mov
push
ins
ss
pop
sbb
cdq
out
mov
mov
cmp
dec
xchg
sub
loopne
(bad)
dec
adc
xchg
jecxz
imul
add
add
or
add
jg
dec
dec
mov
call
in
scas
inc
retf
pop
sbb
sub
shl
loopne
in
xchg
mov
xchg
shl
jp
sub
mov
dec
mov
rcr
in
clc
jb
retf
sbb
fidivr
push
push
push
and
imul
mov
jb
jb
aas
js
iret
(bad)
jmp
push
dec
aad
jecxz
dec
das
gs
dec
mov
cmps
in
daa
daa
inc
lds
mov
dec
and
(bad)
(bad)
out
test
ret
sbb
jns
fldenv
inc
xchg
inc
or
retf
mov
jge
dec
jmp
shl
mov
or
push
aad
dec
adc
mov
lea
xchg
fist
retf
fcomp
fistp
or
div
push
or
mov
pushf
in
scas
dec
push
jp
cmp
sub
adc
call
pushf
icebp
fsub
retf
shl
test
jge
(bad)
xor
mov
mov
mov
neg
cs
mov
xor
jmp
fistp
jae
ins
ins
aam
sbb
and
adc
inc
add
sub
fistp
push
fistp
popa
or
int
rol
push
jge
mov
mov
(bad)
mov
mov
imul
ja
pop
int3
fwait
aam
(bad)
and
mov
mov
adc
pop
push
mov
pop
sbb
jmp
mov
mov
xchg
jo
mov
xor
mov
(bad)
cs
sbb
mov
or
cdq
(bad)
jmp
out
int
or
pop
xor
mov
je
(bad)
int
dec
or
jb
sti
mov
clc
js
loop
sbb
loop
mov
add
dec
in
mov
sub
(bad)
pop
pop
pusha
sub
pop
dec
lahf
cld
aaa
dec
rcl
es
dec
or
enter
push
bound
ins
or
and
inc
sbb
(bad)
mov
xor
fstp
push
hlt
mov
in
lea
cdq
xor
es
pop
inc
add
test
cmp
ret
scas
add
les
sub
xchg
sub
or
call
xchg
jno
jecxz
mov
dec
lea
js
addr16
jne
icebp
sbb
lea
popa
dec
add
mov
or
movs
and
(bad)
(bad)
cmp
xor
mov
sub
(bad)
xchg
ror
ins
(bad)
into
mov
(bad)
(bad)
mov
cmp
cmps
jl
dec
adc
movs
(bad)
push
in
mov
xchg
in
mov
adc
xchg
in
pushf
movs
rcr
cmp
mov
jb
pop
jl
inc
sbb
int3
jae
das
ins
cs
xchg
ins
push
ss
jo
rcl
daa
in
bnd
sbb
or
mov
adc
sub
xor
mov
sbb
fadd
inc
dec
add
(bad)
repz
adc
mov
stc
nop
adc
iret
push
int3
scas
int
mov
ins
push
cmps
aam
cmps
pop
sub
add
call
mov
out
mov
fdivp
xchg
aad
and
js
imul
jo
rol
in
fadd
cld
xchg
or
adc
mov
sbb
dec
ds
lock
aaa
loopne
repnz
add
mov
mov
movs
les
lds
xchg
cdq
into
lea
ins
cmp
adc
xor
les
les
out
cmps
and
add
xchg
ins
adc
stos
(bad)
xlat
push
adc
and
mov
sbb
pop
jp
punpckhwd
dec
cmp
fld
xchg
in
add
sti
mov
mov
mov
imul
clc
movs
fwait
stc
mov
add
adc
push
or
mov
test
gs
inc
add
fisttp
xchg
adc
cmp
add
loopne
enter
jecxz
inc
or
adc
lods
call
dec
out
inc
(bad)
loopne
and
and
aad
and
sbb
test
fadd
xchg
xlat
not
fldenv
gs
imul
push
dec
add
add
mov
call
out
lods
sub
jl
fstp
es
or
or
je
push
xor
shl
push
sbb
jg
into
dec
icebp
jne
pop
xor
(bad)
adc
xchg
shl
xchg
xchg
fld
dec
mov
cmps
mov
mov
(bad)
xchg
shl
mov
in
stos
repz
cmps
mov
leave
arpl
add
and
jge
sbb
inc
dec
mov
fsub
adc
mov
inc
es
adc
inc
xor
inc
bound
sbb
add
scas
push
add
ror
push
std
mov
sub
xchg
fstp
sti
mov
test
jbe
jbe
lods
jmp
test
push
data16
jnp
ja
aad
push
xchg
add
imul
pop
pop
sbb
mov
xchg
mov
pop
or
mov
mov
test
dec
push
ins
cmps
inc
stos
rcr
fst
sub
pop
add
cwde
jmp
ja
fs
xchg
ss
shl
lods
in
(bad)
xchg
stos
mov
ja
lds
js
pop
mov
popf
iret
mov
push
fdiv
sub
sbb
idiv
out
mov
mov
lods
fstp
lds
in
xchg
aam
or
data16
rcr
mov
ficomp
loopne
imul
pmullw
jmp
gs
dec
xchg
leave
pcmpeqb
pop
adc
mov
xor
lods
mov
into
xchg
xor
iret
cmp
test
ret
mov
fwait
call
mov
or
xor
cli
xor
std
les
pop
das
adc
mov
test
test
jl
jmp
jae
ins
push
adc
ds
fdivr
ret
aas
in
push
je
sbb
pop
sbb
call
push
push
mov
mov
std
xor
loopne
call
or
and
test
fdiv
dec
xchg
fidiv
mov
adc
cmp
or
ins
add
test
jo
call
xchg
int3
outs
pop
add
jb
jle
repnz
not
ja
sub
inc
fidiv
outs
xor
scas
cmc
mov
nop
fist
sti
scas
fcomp
cmc
xchg
fdiv
push
fnstsw
sbb
mov
mov
and
pop
sbb
or
sti
adc
arpl
pushf
fidivr
jmp
retf
cmp
stos
in
push
sub
mov
sbb
mov
dec
int3
scas
std
fbld
loope
stc
xchg
in
or
dec
sbb
imul
xchg
and
or
pop
sbb
and
mov
pop
ds
push
inc
out
xor
cmp
int3
mov
jg
dec
adc
adc
mov
js
clc
cmp
sbb
sub
jp
dec
ficomp
arpl
test
or
pushf
mov
icebp
cdq
test
sbb
mov
jne
iret
mov
push
repz
or
dec
adc
popf
push
pop
je
fist
aad
and
add
arpl
push
std
(bad)
ins
sbb
cmp
add
cmp
jnp
int3
pop
or
mov
movs
pop
add
popa
add
and
push
sbb
hlt
mov
call
fimul
mov
stc
adc
pusha
sub
mov
mov
ss
sbb
pop
jo
jl
lahf
movs
cld
push
loop
jecxz
inc
shr
popf
fisubr
fbld
cmp
sbb
jp
pop
adc
enter
js
xor
xlat
cdq
lock
mov
sti
retf
test
jae
popa
in
icebp
test
mov
cwde
fcomp
sub
retf
sbb
(bad)
mov
and
sub
xlat
xchg
pusha
add
dec
arpl
sub
shl
mov
hlt
xchg
popf
or
inc
adc
ret
retf
nop
cmps
in
xchg
fstp
retf
inc
push
push
ss
lods
xor
mov
xor
push
cmp
mov
mov
push
pop
sub
push
and
fbld
repz
pop
push
add
jnp
leave
cs
call
aas
inc
push
sub
and
gs
sbb
rcr
pop
clc
xchg
cmp
push
in
es
jae
mov
out
cmp
ds
out
inc
xchg
int3
mov
push
adc
xlat
cdq
xchg
scas
or
ds
jle
xlat
mov
add
jle
rol
xor
mov
cmp
stos
test
loop
inc
jmp
mov
adc
or
jbe
sahf
mov
mov
fs
sbb
mov
xor
stos
arpl
pop
shr
das
lods
cmc
mov
fstp
cli
add
jge
(bad)
test
mov
aaa
inc
sbb
ror
inc
pop
dec
movs
cmp
inc
add
xchg
(bad)
cmp
lods
das
ins
push
mov
xlat
mov
add
cmp
shl
(bad)
cwde
jmp
pop
add
xchg
push
mov
xchg
lea
mov
into
xchg
out
xchg
inc
out
inc
and
retf
cmp
sub
imul
bound
jl
fwait
pushf
int
mov
fs
fmul
aad
inc
xor
sbb
adc
lea
push
pop
or
stos
mov
retf
rcr
xor
mov
imul
jae
(bad)
mov
mov
(bad)
jle
dec
or
sub
loopne
mov
jo
inc
xor
jne
fucom
sbb
adc
sub
and
xchg
lods
jmp
(bad)
mov
adc
cdq
(bad)
retf
lahf
sbb
enter
cmc
sbb
fadd
(bad)
scas
push
xor
shl
mov
dec
inc
sbb
dec
sub
xchg
fcmovnbe
popa
lds
push
dec
sbb
ins
xor
and
test
pop
aas
icebp
xchg
jbe
ror
int
jns
std
mov
test
sub
cmp
sub
jge
or
sub
mov
ja
push
daa
jno
aam
int
(bad)
adc
mov
push
lahf
in
sub
mov
sbb
inc
xchg
sub
test
mov
mov
mov
adc
sub
inc
mov
fbld
and
jmp
cmps
jecxz
in
jno
add
add
shr
call
dec
ficom
mov
dec
cs
sti
lods
std
cmp
out
mov
pop
push
adc
pop
mov
ss
sbb
push
dec
in
xchg
in
or
sbb
dec
sbb
cmps
xor
bound
push
call
adc
pop
jo
cmp
and
inc
or
shl
shl
stos
(bad)
dec
or
fnstsw
popa
and
push
adc
lods
cld
fcom
adc
repnz
aaa
inc
sbb
ret
movs
leave
xchg
sbb
xor
bound
in
mov
es
add
sub
mov
or
mov
call
inc
xor
fs
mov
add
dec
dec
cmps
jmp
xchg
popf
dec
xor
push
je
ret
mov
fs
push
add
adc
jne
fimul
jnp
xor
push
dec
push
pop
mov
mov
in
cmps
scas
ret
mov
xchg
cmp
(bad)
mov
sbb
sldt
dec
and
dec
mov
push
repz
adc
inc
leave
outs
add
retf
call
lods
fiadd
loopne
fistp
call
mov
call
mov
(bad)
lods
sbb
mov
xchg
or
mov
inc
xor
xor
pop
xor
popa
or
test
mov
lock
jbe
adc
out
mov
sub
ins
xor
addr16
push
(bad)
push
and
pop
out
add
xchg
int
add
iret
pop
in
cmp
sbb
xchg
xchg
jecxz
shl
clc
stos
lahf
shl
xor
aam
data16
icebp
ret
adc
mov
dec
add
pusha
(bad)
pusha
in
retf
mov
ret
add
in
cmp
call
and
jl
jo
or
jecxz
and
into
dec
pop
inc
aaa
mov
scas
(bad)
mov
mov
jo
jle
retf
xor
push
or
adc
mov
mov
aaa
inc
sub
pop
lahf
in
mov
pop
sbb
rcl
add
(bad)
sti
mov
jnp
push
jl
sub
mov
mov
mov
fdivr
adc
pop
es
pop
loope
int
xlat
mov
mov
stos
clc
pusha
das
jbe
jo
ds
pop
dec
sub
sbb
jp
mov
cmps
std
jbe
dec
sbb
add
pop
adc
pop
ds
pop
sbb
push
pushf
clc
mov
sbb
mov
mov
cwde
ror
mov
stos
xchg
dec
adc
add
dec
or
je
dec
(bad)
cwde
sbb
sub
dec
fstp
je
inc
es
int
sbb
push
sbb
fnstsw
mov
stos
rol
xor
mov
pop
pop
in
jne
arpl
push
mov
pop
dec
or
fimul
and
or
cli
xchg
aad
inc
xchg
stc
test
stos
retf
test
cmps
repnz
aas
inc
fs
dec
cmp
test
ins
cmp
sbb
mov
inc
sub
lods
jmp
xchg
int
out
rcl
push
sbb
inc
xor
jnp
test
mov
mov
mov
jae
pop
jmp
mov
div
sbb
imul
jge
jns
cmp
xor
cmp
inc
or
jo
and
mov
push
jno
sbb
sub
push
into
lahf
int3
(bad)
ins
sub
and
jmp
sahf
scas
cmc
xchg
mov
test
and
call
sbb
push
or
push
or
pop
cmp
pop
pop
cmp
dec
push
sbb
adc
dec
adc
mov
dec
sub
ret
nop
shl
dec
or
jne
inc
xor
jnp
add
imul
adc
pusha
add
push
jbe
push
cmp
sub
add
gs
pop
push
dec
cs
or
imul
add
xor
pop
or
cmovo
pop
cmp
dec
sub
or
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jge
arpl
push
and
imul
bound
pop
or
dec
or
pop
add
inc
sbb
dec
sub
inc
add
push
sub
jg
shl
push
adc
mov
fs
xor
mov
mov
shl
xor
pop
cmp
ficom
fld
inc
or
lods
out
mov
add
and
mov
addr16
xchg
scas
outs
aas
jl
sar
push
adc
xchg
aam
pop
xor
shl
pop
sbb
mov
pop
or
scas
iret
mov
pusha
adc
xchg
jecxz
push
or
pop
fidivr
and
mov
mov
xor
in
dec
div
jo
into
lahf
fidivr
cld
cmp
sub
mov
jae
in
mov
sahf
jle
pop
push
leave
cmps
leave
sbb
sbb
xchg
xchg
push
sbb
xchg
mov
or
es
ret
test
movd
dec
test
cmps
(bad)
push
push
ss
cmp
fld
xor
jmp
add
movs
jmp
popf
ficomp
lods
loope
int3
add
je
aam
fadd
fs
in
stos
in
pop
ss
in
xchg
aad
add
push
mov
nop
ficomp
inc
daa
ja
int
out
push
dec
sbb
loop
dec
add
fnstenv
enter
inc
push
dec
daa
enter
fs
or
pushf
lock
adc
in
pop
sbb
cmc
test
sahf
outs
das
push
or
sahf
fidivr
stc
nop
mov
jno
jge
ficomp
jns
jmp
push
rcl
push
psllw
inc
and
mov
arpl
mov
dec
adc
scas
out
mov
push
jl
repnz
mov
pop
mov
inc
cmp
add
cmps
jno
push
dec
scas
addr16
pop
mov
les
mov
adc
aam
(bad)
fs
test
sub
sub
test
jno
and
and
add
or
lock
sti
mov
xchg
lock
in
add
push
mov
scas
out
jg
gs
mov
dec
mov
data16
(bad)
in
lods
jmp
sub
push
jne
repz
enter
ins
mov
jg
cdq
push
add
fiadd
gs
ret
mov
loop
mov
or
outs
scas
ror
call
iret
mov
shl
sbb
mov
mov
cmc
mov
lahf
jno
push
adc
mov
sbb
rol
add
pusha
add
ror
inc
sub
stc
(bad)
shl
jl
aad
jmp
pop
inc
pop
(bad)
into
scas
iret
or
push
fistp
ins
and
test
test
bound
fimul
dec
pop
in
lahf
fild
ret
mov
push
pop
sbb
cmps
hlt
mov
aaa
jo
icebp
lahf
loope
add
inc
pushf
fimul
inc
xchg
mov
fdivr
jb
les
sbb
mov
dec
sub
mov
imul
mov
cmps
data16
pmaxub
push
or
jne
je
shl
jle
pushf
ret
and
js
ins
stos
retf
cmp
pop
xchg
lock
arpl
push
mov
xchg
leave
das
arpl
retf
or
sti
mov
xor
pop
lods
div
push
rcl
pop
ds
mov
add
ret
popf
rol
inc
es
sub
stos
out
stos
loop
jb
ins
nop
aad
add
sub
pop
sbb
and
inc
and
shl
add
stos
lds
jp
pop
call
shl
int3
sub
out
fmul
into
xchg
popf
fld
fadd
enter
loop
ret
mov
sti
mov
mov
aam
repnz
aam
xlat
nop
(bad)
lahf
repnz
lahf
out
scas
fild
out
rol
stos
in
stos
jecxz
icebp
test
jmp
mov
scas
int3
sahf
fdivr
cli
(bad)
int
out
xlat
mov
xchg
shl
ret
mov
div
out
leave
mov
rol
jae
push
xor
xor
mov
mov
pushf
fimul
lds
pause
leave
or
mov
rcl
mov
adc
repnz
aam
(bad)
aad
test
lods
loope
int
in
mov
in
ret
mov
dec
push
repz
xchg
fisubr
test
(bad)
mov
nop
cmc
fstp
fdiv
call
stos
retf
xchg
mov
ret
mov
sbb
jae
pop
push
dec
or
cs
or
jae
arpl
inc
aaa
jb
pop
adc
jne
sbb
xor
push
add
jbe
ins
sub
pop
sub
inc
sub
inc
cmp
add
xor
jnp
jb
popa
das
inc
sub
pop
adc
jne
sbb
push
pop
pop
pop
addr16
jbe
imul
jbe
push
push
xor
xchg
in
movs
int3
mov
out
retf
mov
adc
push
fs
mov
adc
sbb
push
pop
(bad)
mov
pop
lods
pusha
add
out
outs
or
mov
pop
adc
repnz
ss
in
cmp
jp
pop
in
lahf
test
je
push
mov
dec
and
imul
maskmovq
div
pop
adc
fimul
dec
fist
mov
mov
gs
hlt
in
push
xchg
push
dec
lahf
push
mov
sbb
or
jnp
sbb
nop
inc
sbb
push
adc
push
sbb
arpl
jne
ins
sub
je
push
pop
cdq
lds
call
retf
mov
mov
xor
sti
movs
out
not
in
adc
lock
mov
icebp
xchg
mov
cmps
jmp
mov
retf
stos
int
int
(bad)
fcomp
out
div
mov
mov
mov
stos
in
fdiv
loop
int
aad
in
movs
iret
add
clc
lods
loopne
out
out
lds
sbb
push
adc
dec
cmp
inc
pop
push
aaa
push
adc
inc
sbb
pop
add
push
sub
stc
lods
loope
out
out
ret
mov
scas
ficomp
call
loope
call
lods
shl
mov
int
jmp
lock
clc
mov
repz
loopne
xor
rcr
mov
sbb
in
scas
int3
mov
sbb
je
inc
pop
pop
push
dec
sub
push
inc
add
outs
sub
daa
bound
push
jo
outs
sbb
sub
aaa
addr16
sub
inc
sbb
and
arpl
sub
pusha
cmp
jp
cdq
retf
cmps
into
add
clc
lods
loopne
out
out
ret
mov
out
jmp
mov
jmp
cwde
shl
scas
int3
test
mov
ret
movs
clc
mov
mov
into
(bad)
jmp
(bad)
mov
mov
mov
jmp
ret
(bad)
loope
into
add
jmp
loop
std
mov
xchg
out
xlat
mov
xchg
shl
enter
int3
mov
(bad)
mov
hlt
test
rcr
call
shl
pop
pop
sbb
cmp
jg
je
inc
pop
push
aaa
push
or
push
push
push
jl
js
arpl
ja
pop
sub
jno
pop
adc
dec
or
or
fs
jbe
push
push
jbe
jp
inc
pop
push
sub
dec
push
ins
sbb
cmp
and
push
pop
add
ja
jbe
imul
xor
xor
ja
ins
xor
inc
cs
jl
js
pop
cmp
ja
ins
adc
addr16
dec
push
gs
cmp
imul
mov
loope
mov
movs
loopne
mov
dec
add
inc
aaa
jae
push
or
sbb
sub
inc
push
jg
bound
and
leave
mov
lock
test
fstp
mov
lods
sbb
jge
push
or
cwde
rol
jo
pop
sbb
pop
pop
push
xor
push
pop
sbb
outs
push
inc
and
je
pop
adc
dec
or
pop
sbb
inc
xor
push
leave
adc
sbb
dec
cmovle
pop
adc
xor
pop
jnp
gs
xor
push
or
jg
pop
xor
fs
dec
xor
inc
or
in
int3
movs
push
es
and
jns
arpl
add
add
sbb
push
push
or
xor
sub
div
or
add
pop
jmp
sbb
sub
cmp
ficom
aam
stos
(bad)
mov
xchg
je
jp
push
jnp
in
pop
cmovge
cs
or
scas
std
dec
mov
xor
fidiv
jns
out
fs
push
cmp
cmc
movs
les
pop
push
adc
test
js
icebp
adc
and
ins
aaa
adc
scas
int
xlat
xchg
fdivr
loop
mov
push
dec
add
cmp
pop
fnstcw
scas
out
push
ins
ins
adc
lock
mov
push
mov
or
outs
es
xor
dec
or
push
or
jo
inc
daa
bound
jl
jp
outs
pop
jge
addr16
jp
pop
adc
popa
xor
add
and
push
add
dec
and
push
ja
jp
pop
xor
addr16
ss
adc
xor
jo
dec
cmp
pop
add
jbe
imul
inc
xor
sub
outs
sub
push
pop
jnp
dec
or
dec
(bad)
or
popf
loope
leave
xchg
xlat
test
nop
fidiv
fistp
fdiv
int
out
scas
cld
mov
cwde
lock
mov
xchg
aad
retf
(bad)
in
into
mov
mov
mov
fisubr
add
sbb
xor
jg
and
push
pop
inc
pop
data16
jns
ins
sub
inc
add
add
dec
or
sbb
add
aad
repz
mov
xchg
repnz
(bad)
xchg
fdiv
int3
mov
scas
(bad)
mov
sahf
call
hlt
test
mov
add
and
inc
or
popa
push
inc
add
outs
cs
and
cmp
adc
and
ins
pop
dec
or
data16
adc
inc
cs
or
data16
add
jbe
push
sbb
pusha
add
xchg
out
icebp
test
sbb
ret
stos
lds
sbb
pop
sbb
dec
or
bound
xor
push
or
cwde
ror
into
mov
les
repz
xchg
aad
retf
sub
fadd
rol
jmp
xchg
test
test
movs
aam
retf
mov
xchg
rol
je
pop
adc
push
pop
pop
xor
pop
cs
push
jns
outs
das
dec
add
cdq
ret
mov
mov
mov
(bad)
movs
out
iret
(bad)
fcom
fild
loop
jecxz
(bad)
mov
test
cwde
jmp
mov
mov
test
mov
(bad)
retf
xchg
sbb
dec
add
popa
xor
cmovne
popa
daa
jle
inc
cmp
imul
dec
cmp
dec
movd
dec
add
push
xor
inc
or
(bad)
mov
scas
(bad)
mov
hlt
mov
les
rcr
xchg
retf
stos
sbb
jg
jns
outs
push
outs
sub
inc
add
push
inc
add
push
sbb
jnp
js
imul
pop
push
ins
aaa
ja
cdq
std
mov
xchg
ror
jmp
mov
icebp
mov
mov
xchg
lock
loopne
ret
mov
lods
ficomp
out
iret
fmul
test
mov
xchg
rol
add
mul
adc
inc
add
imul
cmp
dec
pop
popa
and
pop
ds
jae
xor
lods
cmp
push
jmp
(bad)
aam
jns
aad
xchg
dec
push
imul
retf
fdivr
or
(bad)
in
daa
in
div
rol
mov
daa
imul
rcl
cwde
gs
shr
stc
xor
push
jmp
inc
adc
adc
or
scas
fnstsw
xchg
fadd
and
enter
push
xchg
int3
lods
nop
push
xor
pop
int
push
psubd
mov
arpl
adc
jecxz
push
or
xlat
cmps
cli
push
xchg
mov
int
jbe
in
push
inc
add
add
cmp
icebp
mov
sub
dec
push
ds
rcl
adc
cmp
cdq
in
mov
jae
inc
cmps
jo
pop
(bad)
or
(bad)
sbb
sbb
jmp
sub
aas
jae
dec
and
ja
inc
add
pop
inc
pop
dec
and
ja
push
adc
jae
jle
cmp
das
dec
imul
idiv
sbb
ins
and
push
inc
adc
sbb
adc
dec
add
ins
push
js
imul
pop
pusha
and
pop
cmovg
dec
or
pop
add
dec
sbb
je
push
adc
jl
pop
xor
jge
arpl
jno
jns
push
push
inc
add
sub
dec
or
jp
jge
jl
inc
aaa
jae
push
adc
nop
repnz
loope
jmp
cmps
retf
fldcw
fcom
fiadd
repnz
mov
int
cmc
lods
loopne
not
adc
repnz
aam
(bad)
fld
les
aam
(bad)
cmps
mov
mov
mov
(bad)
(bad)
rol
lods
ret
mov
lods
ficomp
clc
call
aam
in
cmp
movs
cld
add
repz
mov
jmp
mov
in
iret
(bad)
(bad)
fstp
ins
and
add
inc
add
push
adc
cmp
inc
and
add
add
pusha
and
sbb
push
adc
push
dec
or
inc
add
jle
outs
or
es
sub
push
or
data16
je
pop
xor
cdq
cli
test
mov
stos
in
fdiv
(bad)
movs
(bad)
mov
jmp
out
fimul
mov
ret
xor
loope
repnz
fidiv
aad
in
mov
pop
stos
ficomp
xchg
mov
call
jmp
xor
loopne
call
movs
(bad)
lahf
iret
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fistp
retf
xchg
sahf
(bad)
lods
out
mov
cmps
jecxz
stc
mov
call
jecxz
iret
(bad)
cmc
mov
mov
or
daa
addr16
dec
or
adc
pop
xor
cmp
inc
arpl
ins
add
ins
push
pop
imul
ds
cmp
and
inc
sub
jb
pop
adc
gs
jnp
jbe
dec
sbb
xor
add
push
and
ficomp
retf
lahf
cld
scas
in
mov
test
cmps
retf
cmps
xlat
xchg
out
cmc
cmps
out
retf
movs
in
mov
fnsave
cmc
mov
xchg
aam
add
int
loopne
mov
out
jmp
retf
fstp
xchg
fisubr
test
sbb
inc
cmp
call
lods
loopne
rol
mov
cmps
out
int3
fcmovnbe
mov
push
mov
add
stc
push
outs
ss
fstp
inc
movs
xchg
idiv
imul
push
adc
pop
mov
stos
mov
dec
adc
aas
js
adc
mov
dec
mov
sbb
adc
lods
call
ficomp
mov
or
(bad)
sbb
cmp
retf
nop
repnz
mov
lea
call
les
push
cmp
fst
sti
aaa
ja
or
pop
dec
mov
rcr
jno
jb
sub
push
adc
and
sbb
sbb
xlat
sbb
repz
cwde
cli
mov
popf
dec
add
sahf
cmps
les
ss
lea
pop
out
sub
mov
add
adc
cmp
imul
add
push
xchg
mov
(bad)
into
shr
pop
adc
shl
sbb
dec
test
int
xchg
dec
or
(bad)
enter
icebp
cdq
jmp
sbb
dec
xor
jmp
adc
addr16
mov
mov
test
jecxz
daa
mov
pop
sahf
push
aas
ins
sub
shr
in
mov
lods
lds
(bad)
jmp
mov
(bad)
jg
push
adc
jae
pop
cmp
add
push
mov
ficom
pop
mov
sti
test
adc
sbb
pop
push
pop
adc
(bad)
lods
fbld
and
mov
nop
test
cdq
jge
push
xor
pop
sbb
cmps
rep
cwde
dec
popf
(bad)
mov
mov
cli
cwde
ficomp
test
outs
xor
inc
adc
jecxz
(bad)
ret
push
push
gs
lds
dec
ror
push
cmp
es
outs
out
iret
mov
fimul
sbb
lds
jnp
sbb
dec
add
fdiv
hlt
mov
sbb
aam
clc
gs
or
or
nop
fadd
pop
or
movs
in
mov
mov
call
lds
nop
jno
dec
add
push
cmps
lds
sbb
jg
cdq
enter
xchg
cmc
cmps
xchg
hlt
mov
and
test
shl
push
or
loopne
out
aaa
inc
pop
daa
mov
mov
mov
out
mov
add
dec
nop
mov
fs
lock
fwait
jmp
ficomp
hlt
mov
nop
ret
test
xchg
lock
or
pop
stc
xor
push
xor
imul
pusha
mov
pop
pop
mov
mov
mov
mov
cmp
push
inc
pop
rcl
cmp
pop
dec
or
mov
fs
add
div
test
stos
(bad)
pop
hlt
xchg
data16
ja
mul
push
movs
rcr
cmp
xlat
mov
mov
or
gs
jne
dec
add
push
push
mov
mov
push
pop
and
and
jb
mov
push
popa
and
popa
movs
outs
sub
pop
mov
cwde
jne
xchg
rol
enter
popa
aad
(bad)
xchg
movs
loope
pop
dec
in
repnz
pop
adc
in
push
sub
sub
rcl
sahf
les
fisub
outs
out
les
bndstx
pusha
sub
int3
mov
pushf
dec
cmp
jo
mov
and
loop
fstp
xchg
daa
pusha
xor
push
test
jle
(bad)
mov
stos
fild
outs
sub
imul
inc
movs
or
div
imul
adc
inc
pop
push
cmp
lahf
jb
arpl
mov
push
or
adc
iret
(bad)
aam
ror
jmp
ret
shl
std
nop
fxtract
add
mov
pop
cmp
dec
dec
or
sbb
jecxz
cmp
jnp
jo
outs
sub
sbb
dec
out
cmps
retf
push
adc
js
push
adc
xchg
fnstenv
dec
dec
sub
mov
xchg
in
push
ss
or
inc
ret
and
and
xchg
mov
lea
fidivr
push
sbb
popa
add
mov
push
adc
dec
in
mov
inc
add
das
pop
cmp
xchg
lock
inc
xchg
aad
int3
mov
sbb
jge
mov
mov
ds
lahf
mov
add
push
pop
imul
add
imul
xchg
ja
push
cdq
adc
jne
xor
test
stos
int
sub
and
xor
das
dec
dec
or
ja
add
push
pop
sub
pop
add
cmp
and
sbb
cmp
rcl
js
dec
push
clc
bound
push
cmp
out
das
gs
inc
in
mov
test
mov
xor
jmp
or
hlt
pop
or
loope
fisttp
daa
les
lds
mov
pop
sbb
jno
movs
div
imul
loopne
aam
into
xor
call
mov
add
test
aam
lock
mov
jg
mov
shl
test
test
xchg
xlat
mov
mov
fcomp
mov
xor
push
or
jne
push
sbb
pop
cmp
and
xlat
xchg
enter
push
pop
or
jno
js
pop
pop
push
jmp
sbb
push
dec
sbb
jl
in
mov
xor
and
outs
cmp
cmps
hlt
mov
adc
je
js
cs
pop
cmps
sbb
lock
mov
call
adc
jmp
rcr
nop
in
and
imul
mov
fisubr
mov
mov
or
bound
inc
mov
data16
shl
dec
or
lea
jle
inc
loope
jle
mov
xchg
out
repz
stos
jns
fs
mov
dec
sbb
xor
and
cmp
inc
mov
sbb
pop
add
jg
cwde
cmps
loope
dec
pop
sbb
dec
pop
or
add
ds
mov
xchg
icebp
test
jbe
je
jno
inc
stos
bound
cmp
ds
loop
mov
or
mov
mov
mov
outs
jecxz
pop
lods
mul
mov
sub
outs
adc
jl
pop
sub
adc
pop
push
xor
mov
xchg
lea
cmps
in
xchg
in
retf
xchg
pop
and
pop
add
das
je
dec
in
xor
pusha
sub
pop
sbb
rcl
pushw
inc
hlt
cmp
pop
add
rcr
jo
loop
int
jmp
bound
aad
call
pop
xchg
mov
xlat
popf
(bad)
mov
fnstcw
jl
out
out
mov
iret
xchg
fidivr
lock
fdivr
mov
sub
and
div
xor
call
test
ds
ins
das
pop
mov
ret
mov
mov
xchg
fld
or
mov
loope
imul
loop
fnstsw
inc
and
adc
dec
mov
mov
(bad)
fcom
addr16
loopne
cld
adc
mov
mov
arpl
push
(bad)
sbb
inc
or
xor
dec
hlt
popa
mov
fist
jmp
data16
out
xchg
inc
scas
std
lahf
sar
popa
and
out
mov
jb
(bad)
add
inc
mov
pop
push
and
adc
sub
push
push
(bad)
inc
sbb
int
clc
fild
and
mov
dec
mov
sub
dec
mov
and
and
mov
adc
jno
std
movs
fld
jle
jne
inc
adc
std
push
cmp
pop
pop
les
inc
das
pop
(bad)
js
push
ss
sbb
inc
mov
imul
mov
push
or
mov
test
loope
xlat
sahf
jbe
push
and
mov
cwde
dec
ficomp
fwait
clc
pusha
or
sbb
inc
es
nop
movs
int3
mov
(bad)
cwde
inc
or
push
xchg
mov
test
bound
push
mov
dec
or
popa
out
iret
fisub
xlat
test
stos
cmp
xor
dec
stc
outs
or
xchg
(bad)
fnstenv
leave
pop
xchg
xchg
icebp
push
out
jmp
rcl
jmp
lahf
test
and
jg
dec
es
lods
mov
ficom
xchg
into
(bad)
out
call
pop
out
xlat
call
cmc
fwait
scas
pushf
(bad)
stos
clc
sub
test
mov
jbe
jne
popa
aaa
pop
out
mov
mov
fwait
iret
jb
adc
fwait
mov
sub
mov
out
cmp
test
mov
sahf
in
mov
int
leave
cmp
push
dec
mov
arpl
jb
inc
sbb
outs
adc
imul
jp
push
push
inc
push
dec
adc
cmp
jge
pop
loopne
ror
dec
adc
add
popa
cmps
test
jo
iret
cmps
cmc
pop
adc
jle
xor
out
mov
fnstcw
int3
lea
push
pop
push
mov
daa
ror
pusha
adc
mov
dec
or
mov
shl
add
add
(bad)
fistp
sub
jl
mov
add
inc
adc
xor
dec
add
pusha
cmps
push
mov
popf
lds
fdiv
lds
test
xchg
cld
mov
jmp
aaa
xchg
shl
xchg
int
add
dec
adc
sbb
inc
sbb
pop
or
cli
push
push
adc
ret
xchg
cmc
popf
movs
retf
add
pop
add
push
cmp
pop
pop
dec
dec
loop
int3
pop
test
sub
enter
inc
adc
fwait
enter
sub
es
dec
add
pop
movs
les
and
(bad)
xchg
xlat
mov
loope
jmp
sbb
retf
mov
or
in
mov
push
fwait
div
shl
sbb
cmp
enter
push
repz
and
jb
jmp
(bad)
sub
jmp
xchg
mov
out
sub
fild
iret
xchg
imul
mov
and
inc
aaa
inc
icebp
scas
in
xor
and
scas
jl
pop
push
pop
push
fs
xor
movs
std
test
pop
sub
jp
cdq
mov
in
loope
iret
test
mov
imul
stos
cld
gs
push
les
gs
sbb
cld
xchg
cli
mov
fisub
ja
outs
or
mov
or
inc
push
iret
pusha
or
and
jmp
jo
mov
mov
call
neg
rcl
push
in
inc
mov
bound
pop
sbb
sub
jb
adc
sub
jge
pop
in
cmps
rcl
call
mov
xchg
mov
mov
mov
pushf
les
ficomp
mov
lods
xlat
lea
into
mov
xchg
cmps
addr16
(bad)
rol
bound
jle
pop
loop
cmc
inc
pop
push
inc
cmp
pop
add
div
sbb
lods
aad
ficomp
jecxz
jecxz
clc
mov
mov
mov
push
push
xchg
js
ins
aaa
adc
add
test
add
sub
mov
inc
aaa
inc
adc
jns
sub
xchg
les
adc
pop
sub
push
out
push
dec
adc
pop
inc
add
bound
aas
jl
pop
sbb
jp
jl
pop
sbb
(bad)
or
sub
cdq
retf
test
cmc
mov
mov
mov
or
aam
inc
cmp
adc
repz
sub
cwde
rol
test
xlat
(bad)
iret
test
scas
add
mov
std
mov
sbb
les
sbb
std
test
fstp
lahf
ret
test
mov
sbb
mov
imul
arpl
jno
daa
pop
sbb
sbb
mov
mov
sub
call
mov
adc
clc
mov
pop
cmp
pop
push
jb
int3
xor
or
adc
fisubr
push
dec
or
(bad)
js
clc
xchg
jmp
and
pop
cmp
xor
dec
xor
les
je
pop
rol
mov
mov
cld
scas
not
pusha
popa
cmp
inc
sbb
dec
sub
inc
add
push
std
mov
stc
mov
scas
in
bound
inc
or
push
add
inc
movq
add
jne
outs
cmp
sbb
pusha
add
dec
mov
mov
mov
imul
lds
fwait
mov
sub
pusha
daa
jp
dec
cmp
dec
jmp
xor
cmps
jnp
(bad)
xchg
cmps
dec
rcr
mov
test
loopne
les
sbb
xchg
inc
or
retf
add
out
or
sub
mov
sub
dec
test
hlt
add
push
stc
imul
sub
ja
and
into
mov
cmp
out
sbb
test
dec
adc
inc
or
retf
sub
and
cs
and
mov
enter
xor
bound
pop
or
fild
and
or
mov
mov
repz
sbb
add
repz
(bad)
mov
xchg
cdq
stc
mov
test
das
push
mov
scas
cmps
ret
adc
ja
in
pop
sbb
jmp
cmp
push
pop
cmovns
sbb
lods
out
mov
shr
mov
(bad)
ror
ret
cmp
push
and
js
push
adc
std
mov
les
ret
and
imul
xchg
or
push
ins
sbb
enter
inc
aas
jle
fsub
and
sub
dec
or
in
fld
pop
sub
dec
cmc
xchg
mov
stos
(bad)
pop
int
jecxz
dec
call
pushf
addr16
popf
iret
lods
cli
sub
push
adc
std
mov
xchg
mov
arpl
pop
xor
fisub
sub
pusha
test
mov
mov
mov
lods
iret
cmp
pushf
mov
cwde
dec
adc
lock
int3
mov
dec
mov
mov
nop
leave
cmp
fsub
nop
aam
inc
push
pop
jecxz
retf
das
out
neg
xchg
push
in
iret
arpl
mov
out
fld
mov
cmp
xchg
loop
jmp
mov
ss
cmp
mov
je
sti
mov
add
push
dec
or
adc
push
adc
dec
sub
in
xchg
inc
add
push
adc
jns
imul
xchg
cmc
cmps
in
in
pop
loope
cmps
out
popf
out
lods
fild
cmps
int3
mov
cli
add
cmc
data16
jne
mov
stos
into
mov
pusha
loopne
push
mov
xchg
fbld
js
push
or
inc
out
repnz
mov
xchg
xor
cmps
loopne
fdiv
push
lock
xor
or
ja
mov
div
out
inc
add
jge
(bad)
xor
and
jo
jns
push
and
add
es
dec
(bad)
sub
(bad)
or
pop
out
iret
test
push
add
push
aas
jo
mov
in
fisub
mov
mov
sub
pop
mov
mov
sbb
mov
xchg
mov
dec
sbb
xor
sbb
idiv
inc
sbb
ss
daa
ins
ds
sub
add
mov
mov
mul
push
mov
dec
push
xor
dec
and
and
rol
and
sbb
sub
push
clc
lahf
push
mov
mov
dec
push
push
push
jl
call
mov
ds
mov
repz
cmps
loopne
or
jle
jo
outs
sub
enter
sbb
inc
add
es
push
inc
(bad)
or
push
mul
loope
fldenv
call
mov
sub
and
sahf
fadd
scas
retf
pop
sar
cmp
sbb
sub
bound
loope
not
ret
mov
dec
sbb
dec
adc
inc
mov
sbb
ret
push
mov
xchg
fnstenv
lahf
lahf
fisubr
inc
add
es
jno
inc
or
test
mov
call
or
mov
jae
mov
push
adc
sbb
add
or
pop
pop
push
adc
push
sbb
jl
push
and
hlt
nop
icebp
mov
jg
loopne
pop
sbb
dec
sub
in
div
leave
stos
loope
out
xchg
sub
push
ins
sbb
cmps
popa
cmp
mov
jle
pop
push
ja
jbe
sub
cmps
dec
add
sbb
in
xchg
stos
shl
out
mov
add
jne
inc
or
cli
mov
or
push
mov
nop
repnz
iret
jle
dec
cmp
jge
es
pop
inc
and
call
push
adc
push
adc
jp
add
addr16
or
pop
sbb
mov
mov
arpl
jmp
dec
or
adc
mov
ret
mov
mov
fwait
rcl
int
and
pop
adc
xchg
fld
jo
mov
mov
push
out
lods
iret
sub
and
jo
jmp
(bad)
fs
fld
and
push
push
pushf
in
stos
repnz
sub
add
jp
and
xor
enter
popf
(bad)
xchg
fisttp
mov
mov
push
adc
aam
(bad)
scas
cli
xchg
jg
daa
gs
daa
jno
sbb
retf
pushf
mov
(bad)
xor
repnz
cmp
daa
pusha
mov
mov
mov
data16
mov
int
loop
adc
push
pop
out
mul
push
add
ja
clc
xchg
leave
nop
inc
fld
sub
push
pop
ds
in
into
xchg
out
ins
rcpps
inc
adc
mov
add
jmp
rcr
loope
xchg
lock
adc
aaa
bound
jmp
sti
jnp
popa
arpl
push
or
pop
sbb
or
or
pop
mov
pop
dec
add
sub
inc
mov
mov
fs
(bad)
aad
std
cmp
je
dec
(bad)
add
inc
push
inc
adc
cmp
xchg
cmps
mul
mov
xchg
inc
ror
mov
enter
jmp
lds
(bad)
shl
xchg
lock
lahf
in
(bad)
xchg
dec
shl
test
mov
pop
mov
jp
addr16
pop
jecxz
push
pop
movlps
adc
mov
cmp
rol
test
call
and
xchg
fisttp
nop
repnz
repnz
les
jbe
dec
add
add
inc
cmp
adc
ins
aas
jl
inc
push
ror
pop
es
add
pop
mov
fs
or
adc
idiv
xor
cwde
mov
leave
popf
cmps
push
adc
and
adc
pop
adc
push
mov
cmps
jmp
test
xchg
ror
fwait
mov
scas
mov
sbb
ins
xor
and
jp
jge
or
gs
jg
mov
stos
out
pop
sti
outs
cmp
push
xchg
rcl
fisub
sbb
inc
out
xlat
outs
pop
pop
add
int3
mov
push
ja
pusha
sbb
and
pop
or
sbb
mov
stc
cs
push
sub
mov
push
dec
xor
sar
frstor
push
or
in
scas
cld
gs
(bad)
scas
loope
inc
sbb
inc
inc
loopne
in
cmp
cmp
dec
imul
data16
call
lahf
cmc
or
leave
test
dec
add
mov
stc
mov
push
dec
or
pop
adc
or
mov
push
es
jbe
xor
popa
jmp
int
popf
fild
shl
je
dec
lds
add
sbb
and
ins
lock
mov
mov
imul
mov
movs
neg
pusha
adc
leave
inc
les
sbb
jnp
pop
mov
sub
clc
mov
mov
jbe
or
sbb
adc
mov
rol
out
(bad)
stos
adc
(bad)
mov
jecxz
ret
push
in
mov
es
and
pop
add
inc
cmp
out
int3
adc
in
int3
arpl
dec
or
and
dec
add
ja
mov
mov
and
imul
fs
js
or
mov
inc
mov
and
push
push
dec
jmp
mov
mov
retf
or
(bad)
ins
leave
(bad)
bound
add
mov
or
sbb
lahf
data16
int
cld
lods
pusha
inc
les
clc
sbb
mov
test
xor
into
mov
lods
sbb
jb
ja
xor
mov
jmp
dec
mov
sbb
push
pusha
fldcw
out
lods
int3
pop
enter
push
xchg
(bad)
out
and
sti
es
icebp
pop
cdq
jnp
mov
clts
repz
leave
push
ffree
sub
hlt
mov
pop
cmps
pushf
or
jne
movs
pop
mov
xor
dec
mov
pushf
lods
xchg
sbb
xchg
push
popf
dec
xor
jns
cmp
jnp
dec
jmp
popf
adc
imul
add
cs
in
fsub
out
es
loopne
push
xchg
and
adc
xchg
xchg
sbb
xchg
mov
cmp
mov
icebp
in
mov
ret
stos
sub
stos
retf
out
nop
fadd
xchg
mov
pop
sub
aas
in
dec
cmps
cmp
nop
jne
xchg
retf
scas
or
stos
cmps
dec
jle
push
jg
(bad)
push
fcom
repnz
call
sub
xor
jmp
fbstp
test
add
cmp
inc
mov
nop
sbb
cli
jne
jmp
cwde
ins
adc
fsub
cmp
mov
xor
adc
pop
ror
pushf
pop
mov
cmp
sbb
xlat
push
dec
ss
fsubrp
add
int3
rcr
popa
aad
test
(bad)
(bad)
fld
push
test
jp
sti
jge
cmp
bound
mov
mov
jge
push
push
std
sahf
dec
jbe
js
dec
stc
sub
pop
cmp
inc
pop
push
sub
ins
retf
cmps
lock
out
sbb
mov
call
xchg
sbb
scas
pop
mov
rol
test
sbb
jo
popf
nop
pop
lahf
test
inc
icebp
mov
jne
aas
sub
pop
push
mov
xor
in
sub
jno
fcmovnbe
fcomp
fst
push
sar
add
sahf
scas
push
mov
repnz
jecxz
jo
fld
adc
jl
data16
imul
lods
push
clc
in
cld
mov
mov
into
call
sbb
push
retf
ds
pop
in
cmp
push
std
dec
dec
rcr
(bad)
je
(bad)
lds
or
(bad)
(bad)
sti
inc
jmp
mov
fsubr
sbb
inc
jmp
in
mov
loopne
stos
jbe
dec
mov
and
cmp
mov
test
nop
(bad)
mov
push
mov
mov
mov
xor
jl
cwde
icebp
imul
sar
cmp
sub
stos
shl
sbb
pop
lds
or
aam
sbb
fld
jmp
mov
int3
dec
ror
aaa
pop
imul
push
push
popa
leave
sub
and
adc
js
pop
xchg
outs
cli
sti
aam
rcl
add
clc
jbe
mov
jnp
mov
xor
dec
je
add
push
(bad)
in
xchg
js
xchg
inc
fstp
aad
test
aaa
xchg
dec
aam
scas
mov
xchg
fwait
stos
aaa
mov
sbb
mov
cmp
mov
dec
sub
(bad)
sub
xchg
loope
jnp
aam
stos
out
adc
mov
sbb
sahf
repz
stc
cmp
popa
mov
std
icebp
jns
in
or
cli
daa
sub
sub
nop
and
or
and
dec
jbe
xchg
shl
test
stos
xchg
jle
cmp
dec
ficomp
sahf
pop
adc
mov
dec
push
rol
repz
ja
lods
sub
cli
pop
jne
inc
cld
sbb
stos
sub
sub
push
aas
push
ret
(bad)
sbb
int
std
div
fidivr
mov
xchg
mov
xor
mov
xor
dec
loope
xor
mov
out
out
jo
sbb
inc
dec
ja
dec
cmp
mov
rcl
enter
xor
es
dec
movs
dec
dec
(bad)
retf
idiv
add
loope
movs
xor
add
clc
leave
mov
jb
jp
inc
ins
push
dec
sti
push
xor
fsubp
test
sub
adc
xor
ror
scas
xor
sub
cmp
stc
lea
fisubr
jl
fldcw
(bad)
sbb
push
stos
xchg
das
cld
(bad)
cmc
cmp
inc
stc
ret
loope
test
fldenv
aaa
and
jns
sbb
sub
outs
mov
dec
push
ds
dec
aaa
sbb
dec
ret
push
push
dec
aad
adc
add
and
sbb
mov
xor
push
in
retf
into
xchg
aam
lds
ret
out
jmp
icebp
jp
dec
pop
or
adc
das
push
aas
jns
or
xlat
sbb
test
jge
mov
outs
push
sub
jae
ror
pop
pop
or
push
bound
push
inc
dec
dec
lods
je
mov
sahf
cmp
es
pop
push
shl
mov
mov
rcl
lock
shl
sbb
lds
mov
add
test
jnp
outs
cmp
jecxz
mov
lahf
retf
xchg
jae
call
push
retf
repnz
imul
nop
sbb
jb
scas
repz
gs
jns
mov
xchg
cmp
jecxz
cmp
jno
adc
fcmovnb
pop
ror
cs
ins
mov
mov
ds
inc
cmp
retf
jmp
mov
call
add
jbe
mov
xor
imul
lahf
arpl
sbb
test
pop
xor
mov
sub
xor
js
add
inc
xor
jno
pop
or
lock
test
add
ja
sub
es
jecxz
mov
push
inc
shl
mov
push
jbe
test
cld
jb
push
dec
cli
add
add
fiadd
fldenv
xchg
pusha
jae
mov
xor
lock
jne
mov
jg
and
jbe
std
pop
or
xor
imul
or
fbstp
cmc
inc
mul
out
mov
adc
xor
or
in
nop
cmp
add
cmp
and
push
xchg
fcmovnu
out
cmp
mov
aas
add
xor
push
imul
lahf
or
in
cmp
jae
add
mov
in
jmp
mov
int
pop
icebp
push
lds
ds
sti
sti
fldcw
data16
pop
mov
mov
not
adc
pop
add
mov
pop
inc
movs
fwait
sbb
js
fdivr
xchg
std
rol
stc
sbb
add
mov
test
push
xor
mov
mov
xor
mov
ror
mov
cmps
ins
and
mov
xor
outs
rol
cmps
push
call
add
std
lods
add
cld
fisttp
jo
scas
(bad)
jne
mov
lods
loopne
cmp
aam
push
bswap
les
mov
lods
xor
fdivr
mov
out
mov
(bad)
je
(bad)
retf
in
ja
jae
(bad)
push
or
test
ja
hlt
cmp
out
fsubr
movs
push
xchg
call
(bad)
pop
(bad)
outs
jne
das
rcl
pop
pop
into
fnstenv
jmp
or
adc
mov
pop
pusha
int
movs
inc
add
jne
sub
in
fwait
gs
mov
repz
sbb
mov
dec
sbb
test
int3
push
fidiv
fcomi
repnz
add
addr16
push
dec
pop
mov
inc
stc
or
fcom
pop
mov
jnp
cwde
lahf
add
push
jae
jmp
xor
jne
xor
mov
std
mov
imul
jge
jge
mov
cld
xor
jl
sbb
pusha
dec
mov
or
ds
sub
dec
mov
ds
movs
lods
mov
mov
fstp
sub
cmp
pop
and
je
and
pop
loopne
or
push
rol
xchg
mov
jo
cmps
jnp
push
push
cli
(bad)
xchg
and
nop
pop
sub
mov
mov
test
adc
add
mov
inc
pop
jno
arpl
mov
xchg
jbe
mov
leave
inc
(bad)
jo
xchg
ins
pop
stc
mov
adc
mov
cld
ret
cdq
xor
push
cmp
fwait
stc
call
ds
push
fbstp
jb
dec
and
and
je
hlt
ja
cmp
push
mov
push
push
add
stos
pop
in
or
adc
imul
je
sbb
movs
or
loope
lods
jl
fistp
cmp
cmp
das
aaa
cmp
cdq
push
frstor
sub
inc
pop
or
aad
aam
adc
stos
cmp
not
dec
(bad)
jle
jle
push
mov
aad
sbb
bound
fdivr
cwde
mov
sub
fild
ins
mov
into
xchg
xchg
fisubr
js
push
mov
imul
cmp
addr16
cmp
popf
xor
mov
mov
mov
std
sub
mov
mov
pop
popa
mov
hlt
push
jg
sbb
jle
mov
or
push
mov
mov
pop
in
push
xchg
test
xor
pop
cmp
clc
aaa
cmp
dec
dec
pop
stc
dec
and
push
push
cmc
int3
sub
or
dec
pushfw
sahf
loopne
push
rcr
sbb
ficomp
mov
xchg
xchg
fsubr
and
xor
mov
imul
stc
cdq
xchg
inc
dec
ds
sub
test
fsubr
pop
sbb
mov
repz
cmp
pop
xchg
icebp
popf
lock
inc
gs
ror
call
mov
sbb
mov
push
xacquire
nop
sub
test
outs
mov
jp
bound
aaa
mov
pop
jne
pop
enter
push
pop
add
inc
call
jg
retf
clc
outs
adc
cmp
push
sbb
popa
imul
sbb
fimul
and
fwait
mov
push
sar
fadd
les
scas
sbb
pop
outs
out
mov
scas
mov
jmp
add
push
scas
fs
pop
sub
(bad)
icebp
add
mov
push
mov
fdiv
retf
xor
popf
cmp
fucomp
(bad)
pop
cli
cs
mov
add
mov
ins
xchg
enter
pop
add
xor
xchg
pop
inc
fs
repnz
ins
mov
std
xchg
ds
cs
lahf
out
adc
in
jne
call
pop
adc
jmp
cdq
inc
fucomp
cld
cmc
push
cmp
retf
dec
int
and
inc
inc
movs
sbb
mov
outs
loope
push
xlat
into
in
into
pop
sahf
adc
leave
ficom
aas
adc
pop
retf
xchg
mov
mov
mov
js
test
and
push
push
adc
data16
stos
jb
dec
sub
clc
jmp
int3
out
loop
add
out
push
les
shr
xor
imul
cwde
jg
clc
test
test
mov
mov
fbstp
aas
or
outs
icebp
jl
pusha
js
adc
push
inc
jmp
movs
cmp
stos
mov
imul
out
ret
mov
or
addr16
movs
jmp
mov
pop
xchg
and
xchg
xchg
pop
mov
xor
or
pop
mov
mov
mov
xor
aad
cmp
jno
cmp
cmp
xchg
repnz
fs
je
add
xor
data16
sbb
call
jg
jmp
scas
push
xor
cld
adc
and
pop
mov
lea
lock
jl
mov
(bad)
pop
(bad)
sar
out
jecxz
or
mov
stc
ret
push
daa
inc
daa
hlt
out
retf
add
adc
sbb
sub
or
cmp
or
adc
mov
mov
daa
mov
mov
add
sbb
ins
jnp
cmp
or
pop
xor
xchg
xchg
in
pop
xor
aam
push
pop
pop
jbe
outs
sub
out
hlt
out
inc
sti
or
sub
in
lea
push
push
xchg
retf
mov
ss
out
sub
lahf
(bad)
hlt
xchg
adc
pop
mov
jbe
xchg
out
jno
jbe
cdq
add
push
sub
jmp
mov
gs
in
cmp
pusha
inc
fidiv
xor
xchg
js
lods
fwait
xchg
cmp
jp
movs
cmp
lds
or
jbe
mov
push
push
call
jne
fcmove
mov
inc
cmp
or
daa
call
call
(bad)
popa
xchg
mov
jnp
dec
clc
push
pop
int3
pop
add
sub
jo
out
cmc
clc
fsub
ret
pop
add
pusha
ins
push
xchg
cmp
sub
mov
lahf
std
dec
inc
movs
xchg
outs
mov
ja
jbe
push
jp
fucom
hlt
or
sahf
mov
mov
ja
and
mov
test
fstp
(bad)
(bad)
je
push
shr
mov
xor
lahf
pop
xchg
add
xor
inc
push
(bad)
out
stos
mov
cmp
pop
push
sub
mov
inc
xchg
outs
daa
scas
and
sub
cmp
pop
out
inc
cvtps2pd
sti
cdq
and
pop
mov
xchg
aam
pusha
repz
test
sub
aaa
dec
push
ret
sub
int3
outs
test
mov
mov
jge
pop
pushf
je
and
dec
inc
out
push
scas
xchg
pop
xchg
lock
pop
rcl
imul
stos
rcl
int
out
mov
pop
jl
(bad)
sub
or
ins
test
or
adc
arpl
(bad)
out
repnz
neg
pop
jnp
mov
repz
xor
ja
fcom
outs
imul
aas
xchg
push
iret
inc
lahf
sub
cmps
sub
sahf
fstp
mov
cmps
fadd
outs
push
inc
mov
jae
dec
pop
mov
and
jp
push
shl
call
sbb
xchg
rol
mov
lahf
out
xchg
and
outs
imul
in
sub
adc
aas
push
push
lock
fist
jl
fst
in
int3
clc
outs
and
pop
add
xor
xor
or
adc
iret
cmp
out
xor
xchg
ret
hlt
mov
outs
push
es
xor
rol
scas
les
ret
in
test
js
xor
scas
jbe
mov
or
data16
stc
imul
hlt
and
popa
push
pop
repnz
add
cdq
test
sub
in
enter
xor
cmp
or
xor
arpl
jns
and
adc
mov
pandn
es
stos
dec
rcr
arpl
enter
lods
mov
mov
retf
jp
out
xchg
hlt
ffree
(bad)
outs
lea
out
xchg
jo
fimul
jbe
nop
call
jns
jge
pop
jge
lds
push
pop
inc
xchg
sub
ds
movs
in
(bad)
jg
mov
into
mov
xor
mov
mov
jne
mov
or
sub
ins
lds
jmp
xor
xor
pop
jbe
pop
push
dec
call
or
shl
popa
inc
fcomp
hlt
xor
push
inc
pop
cli
mov
(bad)
hlt
mov
push
sub
mov
ror
sar
dec
outs
pop
xchg
pop
and
cmp
arpl
mov
or
into
add
mov
xor
mov
in
test
jnp
push
push
sub
movs
sub
or
dec
xchg
cmp
inc
mov
cmc
int3
or
inc
xchg
call
mov
ror
std
ss
inc
cmp
mov
loope
jge
out
(bad)
mov
xrelease
clc
xor
dec
sub
mov
mov
push
pop
or
fbld
sbb
mov
cli
push
leave
sub
ror
sub
mov
mov
adc
jp
pop
aad
dec
jp
sub
mov
data16
retf
mul
jne
je
cmp
inc
inc
sar
jo
mov
loope
addr16
pop
imul
or
cmpxchg
cmp
and
(bad)
std
mov
aas
or
loopne
push
hlt
dec
fwait
mov
movs
ds
jmp
sub
sar
clc
adc
adc
adc
fst
pop
ins
and
cmp
or
shl
aam
(bad)
repnz
mov
mov
scas
mov
movs
rcl
and
pop
jbe
div
cmp
lods
adc
sub
fistp
dec
sar
push
mov
es
mov
cmp
call
cmp
jmp
push
fadd
adc
push
mov
cmp
rcl
scas
xchg
retf
jle
cmp
adc
or
stos
or
cmp
int
fs
xchg
adc
mov
mov
or
cmp
arpl
and
(bad)
div
jo
fdivr
adc
push
sbb
bound
lahf
pushf
es
test
xor
sbb
and
pop
jg
push
lods
jmp
fwait
adc
retf
push
mov
stc
mov
fisubr
js
sub
or
push
jmp
movs
jae
leave
inc
adc
jmp
mov
sbb
(bad)
mov
int
inc
sub
jmp
push
cld
jecxz
fdiv
retf
sub
mov
lods
rcl
push
jmp
xor
les
or
or
sub
pop
pop
adc
mov
push
jbe
lods
xchg
and
ins
cwde
push
enter
jb
dec
aaa
sbb
sbb
and
xchg
lds
dec
and
xchg
in
adc
dec
push
mov
jb
mov
xor
mov
xchg
test
mov
outs
or
and
push
icebp
cli
stos
fsubr
jl
rcl
pop
cmc
pop
in
add
cli
pop
sub
sub
fisttp
adc
es
adc
pop
cmp
mov
ret
(bad)
jnp
aad
add
adc
sub
mov
nop
mov
mov
jmp
xor
retf
pop
mov
push
daa
aam
xchg
add
scas
js
aam
add
pop
or
xor
ss
cmp
aad
mov
imul
je
sahf
out
cmp
test
mov
loope
mov
add
pop
or
(bad)
jecxz
mov
scas
xchg
in
mov
js
pop
mov
jbe
ins
xchg
adc
scas
test
call
add
fnstsw
cmc
call
test
ss
mov
mov
push
push
scas
rcl
pop
popf
inc
sahf
sub
int
es
int
loopne
repnz
pop
xchg
mov
leave
pop
fdivp
dec
mov
movs
inc
push
dec
xchg
cmp
sahf
into
sub
mov
mov
in
pop
sbb
je
pop
adc
mov
push
xor
xchg
data16
cmp
jl
ret
cld
fnstenv
leave
inc
jle
add
xchg
push
add
inc
add
mov
mov
test
add
aad
xchg
mov
inc
add
jle
cmc
out
scas
imul
outs
jo
jns
add
add
dec
add
mov
mov
(bad)
pusha
cmp
shl
cmps
sbb
cli
mov
pop
lods
sbb
rol
out
daa
outs
cs
mov
pop
sbb
fisubr
outs
movs
sbb
dec
cmps
(bad)
pop
arpl
push
fldenv
jbe
enter
inc
pop
xor
adc
repz
test
sub
ds
push
ins
outs
stos
loope
lea
mov
xor
sub
and
int
lock
jle
inc
test
push
adc
fwait
out
mov
push
js
push
mov
mov
mov
js
cdq
inc
je
pop
mov
cmc
mov
pop
sub
repz
das
call
mov
lods
push
adc
enter
xlat
jne
dec
cs
scas
dec
or
icebp
cmp
xor
adc
mov
imul
add
xor
jb
jne
pop
and
lds
jmp
scas
iret
mov
xchg
lahf
fiadd
retf
fstp
enter
(bad)
mov
mov
xchg
in
dec
push
dec
das
bound
outs
das
dec
cs
cwde
idiv
xchg
iret
mov
lahf
(bad)
mov
xchg
ror
clc
mov
mov
fcomp
repnz
fidiv
aad
in
mov
pop
stos
fstp
xchg
stc
mov
popf
(bad)
cmps
div
in
sti
mov
or
pop
pop
ds
push
adc
and
push
xor
outs
sub
inc
xor
ss
sbb
jb
dec
sbb
xor
or
add
sbb
cmp
mov
stos
jp
sbb
call
sbb
adc
les
mov
jb
or
(bad)
ror
repnz
mov
popa
cmp
cli
mov
push
mov
push
or
cmp
sahf
add
adc
push
inc
retf
cmc
pop
push
aaa
addr16
cmps
jecxz
xor
adc
push
(bad)
popf
into
add
cmp
loopne
out
test
scas
push
sub
clc
mov
sbb
ds
div
mov
pop
sub
in
scas
loopne
jae
and
add
adc
repnz
push
js
lods
adc
rcl
xlat
fld
popa
dec
pop
or
movs
lock
ds
rol
shl
es
test
gs
inc
stos
in
lods
out
and
ds
repz
sub
int
mov
push
scas
iret
outs
test
jne
in
out
fidiv
xchg
leave
fs
add
jo
sub
idiv
icebp
xchg
div
std
fld
mov
movs
int3
test
movs
(bad)
xchg
leave
lods
sar
mov
in
in
add
lahf
into
(bad)
out
(bad)
retf
mov
lods
fistp
ficomp
rol
(bad)
in
lods
in
cmps
int
cli
mov
sti
test
add
sahf
int3
mov
add
loope
retf
mov
mov
lds
retf
mov
mov
scas
ror
rcl
lds
mov
stos
in
fnstenv
mov
xchg
ret
and
les
out
out
out
ret
mov
scas
ficomp
cmc
mov
xchg
fcom
int
out
in
xor
loopne
rcr
xchg
stos
loope
int3
movs
jmp
xor
movs
pop
xor
and
add
xchg
add
sub
out
adc
sbb
jb
push
bound
jecxz
mov
cmp
jecxz
popf
jno
dec
or
ror
sub
jmp
das
jg
push
ins
sub
lods
add
and
lods
loop
popa
pop
adc
clc
and
shl
xchg
jmp
xor
cmp
icebp
rcl
mov
daa
gs
fst
mov
dec
add
(bad)
sahf
fsubr
cld
mov
jnp
and
and
jmp
out
mov
push
inc
push
adc
(bad)
cmps
(bad)
cmp
xor
jmp
arpl
arpl
fild
lea
cmp
fidiv
scas
jg
xor
movs
jne
cmp
ret
rcr
adc
das
sub
mov
js
inc
add
sub
mov
mov
mov
loopne
xlat
mov
nop
idiv
out
hlt
mov
scas
jmp
into
mov
mov
out
not
in
in
mov
jmp
retf
mov
cmps
out
into
mov
xchg
lock
xchg
xlat
mov
mov
(bad)
out
stos
out
cmps
int
sti
movs
leave
mov
fcomp
(bad)
mov
mov
mov
mov
stos
in
fnstenv
xchg
iret
adc
fiadd
lock
into
xchg
in
aam
iret
pushf
shl
shl
mov
call
test
mov
lahf
call
div
(bad)
xchg
in
cli
mov
mov
leave
mov
sbb
gs
inc
push
dec
and
adc
jne
bound
jo
dec
cmp
push
add
ins
add
addr16
inc
sub
dec
add
xor
pop
call
mov
pop
ins
pop
or
and
sbb
jmp
jl
(bad)
(bad)
mov
bound
mov
mov
inc
into
aad
clc
and
push
or
jmp
inc
and
icebp
fwait
jl
adc
shr
test
pop
push
je
loopne
clc
pop
xor
das
je
jmp
enter
mov
lods
pop
imul
pop
dec
add
mov
or
xchg
xlat
xchg
dec
jo
inc
mov
dec
aas
or
jo
jecxz
scas
cld
and
ins
sbb
fldenv
push
repnz
outs
or
leave
cmps
les
mov
pop
sub
mov
push
sbb
push
or
pushf
(bad)
mov
dec
add
jmp
sbb
sub
add
pop
sbb
loop
retf
and
imul
mov
imul
test
add
sbb
mov
dec
push
adc
lds
rcl
cld
xchg
leave
or
stos
in
mov
xchg
scas
in
mov
mov
xchg
fistp
mov
out
rcr
xchg
shl
jecxz
rcl
cmc
fwait
in
lods
test
mov
hlt
mov
aad
aam
cld
(bad)
retf
xchg
sbb
jp
push
es
pop
add
jge
push
or
bound
jne
push
sbb
jle
inc
push
push
ss
adc
jne
inc
sbb
pop
add
push
xor
adc
and
xor
aaa
jo
jg
gs
data16
sub
outs
and
pop
or
dec
or
add
dec
adc
push
or
push
xor
pop
pop
sbb
push
and
push
jo
jae
inc
ss
and
dec
add
cdq
ret
lods
into
mov
push
inc
sbb
dec
push
xor
sti
push
dec
adc
fstp
scas
inc
pushf
fisub
add
mov
jno
add
repz
test
and
idiv
ds
cmp
sbb
sbb
push
popa
cmp
adc
sub
in
mov
adc
jns
ins
mov
ins
xor
int
loop
dec
cmp
ret
xchg
leave
pop
push
adc
dec
or
aam
cli
pop
xor
(bad)
mov
inc
push
sar
aam
nop
icebp
xor
inc
mov
(bad)
mov
add
or
cmps
out
popa
push
push
adc
stc
xchg
fcomp
adc
fst
adc
xchg
int
inc
push
xor
leave
(bad)
mov
shl
call
push
jl
(bad)
(bad)
mov
inc
xor
mov
ss
test
sbb
dec
and
inc
and
fidivr
out
mov
cmc
test
mov
xchg
cmc
mov
mov
hlt
mov
ret
and
retf
pushf
icebp
movs
sbb
push
inc
sub
sbb
jae
pop
sbb
ins
and
inc
pop
jl
outs
push
outs
sub
dec
cmp
sub
pop
adc
push
sbb
pusha
xor
outs
and
cmp
jg
sbb
sub
sbb
popa
es
sub
push
or
data16
je
pop
xor
cdq
cli
test
mov
stos
in
fnstenv
mov
xchg
ret
and
les
out
sbb
push
cmp
dec
cmp
dec
or
and
jl
cmp
pop
sbb
daa
push
adc
jnp
push
push
inc
push
sub
inc
sbb
push
ins
sub
es
cmp
and
gs
and
cli
test
in
mov
nop
cmc
mov
shl
bound
sub
movs
out
push
and
div
mov
adc
aad
test
dec
sbb
in
mov
data16
mov
mov
push
out
adc
aad
test
stos
repz
shl
stos
in
mov
mov
adc
adc
clc
mov
push
xchg
mov
push
pop
push
jmp
inc
adc
fsub
adc
mov
mov
push
retf
mov
cli
ror
jge
cmp
sbb
pop
xchg
xor
loopne
xchg
(bad)
mov
cmp
cmp
(bad)
std
mov
sub
mov
push
adc
or
loopne
movs
pop
sbb
dec
add
mov
bound
outs
sti
adc
or
mov
arpl
or
add
jo
jae
bound
push
adc
xchg
jmp
in
in
mov
test
popf
fadd
xchg
aad
sbb
jl
cmp
and
push
xor
pop
cs
push
jns
outs
das
dec
add
cdq
ret
mov
mov
mov
(bad)
movs
out
rol
ret
stos
jmp
jmp
jmp
test
mov
movs
out
retf
mov
sbb
ss
and
les
out
call
movs
stc
mov
jmp
mov
stos
out
into
mov
stos
clc
mov
jmp
xchg
aad
add
shl
lds
cmc
mov
xchg
out
std
add
mov
call
movs
clc
mov
mov
aam
cld
cmps
out
not
adc
cmc
mov
mov
stos
fstp
loope
(bad)
int3
mov
fnstsw
cwde
push
inc
outs
adc
in
movs
shl
rcl
ins
mov
cwde
pop
fwait
clc
pushf
pop
jns
inc
add
push
in
sbb
sub
in
or
ret
fxam
pop
push
(bad)
in
test
ret
aam
sahf
lds
cs
into
mov
push
pop
cmc
(bad)
mov
push
es
cs
scas
jecxz
pop
xor
shl
sbb
jmp
or
sub
retf
and
pusha
paddb
xor
pusha
cmp
push
outs
and
mov
outs
or
cwde
retf
xor
(bad)
jns
ss
sbb
ficomp
retf
div
jp
cmp
cmp
mov
fdiv
inc
add
dec
cmp
add
add
stos
(bad)
repz
pop
push
push
xor
fnstenv
cmps
repz
movs
sti
mov
xchg
ror
jmp
dec
cmovns
add
push
dec
push
ins
and
jnp
push
pop
xor
pop
das
outs
sbb
pop
push
or
add
js
push
pop
aaa
inc
add
or
inc
add
enter
lock
clc
mov
icebp
pushf
out
stos
hlt
xchg
mov
mov
idiv
int3
scas
iret
mov
xchg
lahf
fiadd
rol
scas
in
test
fstp
ror
loop
lock
fdiv
xchg
hlt
mov
mov
test
lahf
stc
(bad)
shl
nop
clc
mov
mov
aad
aam
cld
(bad)
retf
xchg
sbb
js
imul
add
and
pop
add
add
arpl
push
or
xor
and
ins
add
data16
adc
arpl
inc
add
sub
xor
pop
push
dec
arpl
ins
and
adc
ins
sbb
cmp
je
outs
cmp
adc
ds
lahf
adc
and
cmp
loopne
push
push
ret
cmp
or
or
ret
gs
lea
aas
sub
outs
xchg
neg
pushf
sub
or
jb
pop
mov
div
xor
int
fs
outs
mov
lahf
fisttp
cmp
sti
cmps
shl
dec
sub
aam
into
ds
call
jg
cmp
sbb
stos
ds
seta
pusha
mov
mov
xor
push
mov
add
dec
or
leave
out
test
sub
and
cs
jecxz
push
sahf
int3
addr16
jae
sbb
mov
sub
popf
out
inc
mov
enter
push
outs
ja
inc
aaa
imul
add
or
js
push
sbb
jno
dec
sbb
sbb
jp
dec
adc
mov
jmp
out
rol
mov
stos
out
test
(bad)
scas
in
mov
test
movs
icebp
xchg
rol
lods
fistp
enter
cli
mov
xchg
ror
icebp
mov
mov
lds
les
leave
stos
clc
mov
jmp
nop
aad
add
aad
sbb
jl
cmp
dec
and
ins
add
adc
add
push
xor
inc
add
xor
js
pop
pop
push
aas
dec
or
pusha
cmp
ins
add
data16
adc
arpl
jns
jp
js
data16
and
aas
ins
and
sub
push
cmp
cmp
pop
das
push
inc
add
imul
sbb
jno
popa
add
dec
or
push
pop
inc
xor
ins
cs
add
cwde
(bad)
fmul
ror
mov
nop
aad
stc
popf
aam
hlt
test
shl
repnz
xchg
leave
mov
mov
aad
or
xlat
sbb
or
dec
or
pop
add
dec
and
div
fidivr
in
popa
inc
add
repnz
lods
outs
fs
sbb
adc
and
and
xor
dec
mov
pop
div
test
(bad)
push
dec
and
cmps
pop
imul
sub
not
mov
cmp
imul
mov
add
outs
adc
adc
mov
mov
je
cmp
cli
mov
sub
jmp
addr16
in
stos
xchg
arpl
push
movs
popf
into
lea
and
fld
push
jg
daa
xchg
std
add
in
lods
hlt
mov
fnstcw
stos
std
mov
mov
mov
xchg
out
inc
sbb
jne
push
adc
jo
push
xor
jg
data16
dec
cmp
dec
and
inc
pop
pop
xor
cmp
jl
dec
adc
test
mov
popf
idiv
int
ret
mov
mov
popf
loope
leave
xchg
rol
mov
mov
aam
aad
hlt
xchg
popf
loopne
enter
call
out
mov
pushf
(bad)
lahf
fcomp
shl
aam
in
movs
into
add
cmc
fstp
mov
sbb
jmp
fdiv
enter
les
mov
rcl
std
cmps
(bad)
xchg
xlat
mov
xchg
aad
cmc
test
call
(bad)
mov
xchg
ficomp
movs
mov
mov
mov
xchg
aad
(bad)
cmps
jmp
retf
test
mov
lock
out
stos
hlt
mov
retf
mov
cmps
rol
jge
pop
pop
push
cmp
dec
cmp
push
push
inc
add
sub
inc
sbb
addr16
and
inc
aaa
jb
pop
sbb
fwait
cli
mov
(bad)
mov
inc
inc
add
dec
retf
or
fisubr
cli
and
in
xchg
fdivr
adc
cld
cli
lea
in
pop
call
dec
cs
imul
jmp
jnp
xor
lods
int3
cmp
xchg
fcomp
icebp
out
int3
adc
imul
rcl
mov
inc
(bad)
sub
cmp
(bad)
sbb
jmp
sub
fcom
pop
movs
push
pop
pop
mov
xor
jmp
cmp
cmp
nop
imul
jne
jge
pop
sbb
imul
add
je
sbb
pop
xor
pop
das
outs
pop
inc
pop
push
pop
ja
dec
cmp
inc
adc
dec
push
dec
add
sbb
add
inc
sbb
outs
cmp
je
pop
sbb
pop
sub
jns
inc
xor
pop
adc
imul
ins
pop
pop
add
dec
sbb
pop
adc
je
dec
sub
mov
jmp
test
pop
add
cmp
test
add
in
mov
cmc
mov
fidivr
out
ror
mov
mov
in
loopne
clc
xchg
leave
or
leave
sbb
out
lahf
stc
mov
fnstcw
scas
(bad)
mov
out
test
mov
pushf
fisubr
popf
idiv
enter
into
xchg
sahf
fadd
loopne
jmp
sbb
cdq
cli
mov
mov
mov
mov
mov
out
mov
iret
scas
sar
mov
loop
lock
sar
leave
mov
add
int3
movs
(bad)
xchg
into
mov
fistp
rol
jmp
out
cmps
int
(bad)
fldcw
adc
jl
call
ror
loop
fistp
or
imul
sub
xchg
cmc
and
movs
cmc
xor
test
cmp
sbb
and
call
sahf
mov
cmp
adc
test
out
retf
mov
sub
mov
and
fild
pop
mov
sub
jb
sbb
add
into
test
adc
pop
adc
cdq
int
mov
sahf
hlt
ficomp
fbstp
outs
sub
jnp
push
cmp
inc
cmp
jle
push
add
ja
pop
cmp
push
or
addr16
daa
fs
pusha
adc
cmp
push
dec
das
bound
inc
add
outs
sub
and
push
dec
or
adc
jae
arpl
inc
sub
jne
inc
push
cwde
cld
mov
iret
(bad)
lock
cmps
sbb
sub
inc
sbb
outs
(bad)
sub
imul
outs
aas
jo
pop
aaa
jg
cmp
jns
push
push
pop
xor
ds
in
mov
int3
mov
fnstsw
in
lods
out
(bad)
mov
jmp
sti
mov
repz
xchg
aam
(bad)
xchg
xlat
pushf
repz
out
lods
fidivr
ret
lods
in
and
repz
lock
into
xchg
in
aam
iret
pushf
shl
shl
mov
call
test
icebp
mov
scas
iret
lahf
fistp
std
mov
xchg
loopne
ror
icebp
fwait
xlat
xchg
int3
mov
jmp
in
cld
mov
(bad)
mov
loope
jecxz
fld
ror
(bad)
xchg
rol
test
test
pushf
fidivr
out
rcr
fwait
(bad)
xlat
xchg
icebp
std
xlat
lods
into
repz
mov
aaa
shl
das
in
push
adc
push
inc
aas
adc
cdq
clc
xor
movs
fdivr
fidivr
push
add
add
(bad)
scas
loope
jb
sbb
and
ret
mov
and
push
dec
pextrw
iret
sbb
push
jl
out
mov
mov
arpl
push
je
push
push
mov
(bad)
(bad)
sbb
into
(bad)
fdiv
mov
shl
clc
cmps
out
adc
adc
cmovae
movs
sbb
pop
sbb
test
pop
push
aam
retf
outs
and
ss
into
rol
mov
push
dec
jg
jg
mov
mov
jmp
add
or
and
mov
mov
test
mov
popf
cmp
push
ins
pop
cmp
cmp
out
pop
dec
pop
inc
xchg
popa
cmp
rol
movs
mov
cdq
shr
rcl
push
jns
cmp
sti
mov
(bad)
xor
popf
mov
mov
jbe
push
and
and
rol
adc
sbb
adc
test
call
loopne
fs
lds
jge
repnz
jl
outs
stc
pop
das
imul
dec
adc
pop
ds
xor
inc
push
punpckhdq
push
add
push
aaa
jno
dec
or
push
xor
cs
cmp
push
and
fs
aas
jne
push
adc
and
aaa
push
ss
jle
and
inc
xor
jne
dec
add
pop
or
inc
punpckldq
push
pop
add
bound
outs
aaa
push
push
inc
daa
inc
add
gs
push
or
dec
adc
jg
jns
cwde
jmp
ficom
rcl
in
add
in
test
dec
add
jle
jae
pusha
pop
add
inc
adc
js
push
cmp
sub
adc
cmp
ins
sub
dec
or
xor
addr16
push
pop
ja
push
push
pop
xor
push
inc
add
jo
pop
push
push
add
jo
imul
and
cmp
and
pusha
cmp
ins
add
addr16
jl
inc
cmp
jnp
je
push
je
inc
ss
and
jb
jle
inc
push
push
ss
adc
jl
dec
adc
and
add
dec
and
dec
or
bound
inc
and
push
imul
bound
jne
push
sbb
jle
inc
push
push
ss
adc
jb
inc
pop
outs
das
pop
push
inc
or
pushw
inc
add
push
dec
sub
push
jno
jae
inc
xor
jge
pop
adc
jbe
dec
push
pop
ds
sbb
jp
dec
pop
addr16
push
push
dec
adc
jle
pop
sbb
push
xor
xor
jp
dec
cmp
jb
push
adc
ja
inc
adc
jle
inc
sub
pop
pop
outs
ss
addr16
dec
daa
imul
add
arpl
adc
in
mov
push
test
or
cmp
pop
jb
cld
sub
xor
mov
jle
push
or
and
int
mov
pop
gs
push
mov
push
les
mov
jns
jnp
push
stos
pop
sub
call
mov
or
retf
fcomp
sub
xchg
rol
fistp
call
lods
xor
clc
mov
jl
fs
rol
sub
jg
dec
cmove
lods
ror
test
movs
out
mov
cwde
dec
push
adc
pop
sbb
retf
xor
sub
jns
fs
inc
pop
jbe
aam
in
mov
dec
add
sbb
popa
add
mov
je
ror
xchg
(bad)
adc
push
mov
mov
in
jl
imul
xchg
aam
push
and
ror
ror
xchg
leave
and
test
lea
pop
adc
sbb
and
int
out
jb
arpl
loope
jmp
push
cmp
mov
jg
mov
js
push
jae
jo
ret
or
mov
dec
sub
in
and
jge
mov
add
adc
push
and
and
enter
call
aad
jmp
scas
rol
xchg
loop
ds
cwde
push
xchg
(bad)
pop
or
add
mov
sbb
dec
mov
mov
cmc
aam
jmp
cmps
in
sub
push
push
(bad)
cli
mov
clc
fstp
mov
jecxz
jmp
dec
push
pop
in
sub
add
rcl
jle
xor
mov
jo
sbb
jae
pop
test
push
mov
sbb
jmp
cmc
mov
shl
xchg
hlt
push
xchg
fdiv
aad
or
mov
jns
popf
(bad)
and
adc
fild
cmp
push
push
inc
and
sub
and
dec
cmovns
dec
add
jns
ins
ss
pop
inc
daa
inc
add
add
add
dec
sbb
je
push
adc
jl
pop
xor
jge
arpl
jno
jns
push
push
inc
add
sub
dec
or
or
imul
ds
push
adc
jnp
push
and
inc
add
inc
add
push
adc
cmp
jae
push
sbb
cmp
dec
sub
push
pop
cmp
jne
ins
xor
adc
inc
pop
or
inc
add
dec
adc
ja
jl
push
pop
imul
push
xor
xor
add
inc
sbb
dec
and
inc
cmp
ins
and
adc
push
pop
pop
ja
inc
push
pop
add
outs
push
dec
or
bound
inc
and
push
imul
bound
je
dec
add
pop
add
cmp
cmp
jne
jge
pop
sbb
mov
fst
fdiv
in
sahf
stc
mov
in
movs
sbb
jae
push
xor
push
dec
push
push
and
pop
inc
add
or
dec
add
jnp
imul
das
push
inc
xor
push
or
addr16
ja
pop
xor
cmp
inc
and
push
or
bound
jne
push
sbb
jle
inc
push
push
ss
adc
jne
inc
sbb
dec
sbb
jno
push
pop
dec
das
jg
pop
xor
outs
add
outs
sbb
das
imul
jbe
jle
cmp
mov
adc
jmp
cdq
inc
or
outs
xor
test
inc
add
pop
pop
dec
test
aas
loope
outs
or
push
push
hlt
adc
inc
std
out
mov
lods
jae
aam
mov
inc
cli
xor
mov
inc
pushf
pop
das
aas
std
(bad)
mov
icebp
mov
xor
aas
pop
jo
inc
and
mov
pop
sub
mov
dec
add
mov
shl
push
or
sbb
cmp
movs
sbb
add
mov
mov
mov
inc
xor
mov
dec
mov
mov
inc
add
test
call
int
sub
stos
lock
push
xor
shl
pop
ror
xchg
leave
neg
mov
inc
mov
or
(bad)
fcomp
nop
jmp
pop
and
scas
cmc
mov
or
imul
adc
inc
xor
jl
(bad)
iret
scas
jmp
jne
ins
add
lock
jno
adc
retf
xor
cwde
aad
sub
int3
mov
jo
cmp
daa
addr16
or
scas
adc
retf
mov
out
push
sub
cmps
out
arpl
jo
cmp
leave
cmp
pop
or
jmp
mov
mov
pcmpgtw
adc
mov
push
push
mov
enter
imul
clc
mov
xor
lock
fstp
inc
add
popf
icebp
mov
sbb
push
inc
xchg
adc
enter
cmp
inc
jle
dec
push
mov
data16
mov
push
jno
jb
xchg
mov
or
sbb
xor
das
cdq
frstor
outs
sbb
not
xor
iret
lods
(bad)
sbb
mov
es
lods
cmps
ins
mov
mov
add
(bad)
test
es
mov
outs
or
stc
xor
pusha
push
add
mov
dec
mov
int3
nop
ins
mov
lahf
pusha
test
lea
add
add
hlt
mov
popf
pop
push
mov
push
js
cmp
inc
and
fiadd
les
ret
mov
xchg
enter
fistp
out
call
mov
in
mov
mov
xchg
sbb
jnp
dec
adc
inc
and
push
xor
js
pop
sbb
push
es
inc
add
inc
or
pop
jl
cmp
pop
adc
js
push
adc
js
pusha
add
jae
inc
add
inc
add
sub
addr16
outs
cmovae
int3
mov
cmp
test
add
in
mov
jmp
into
mov
vpcomw
pushf
mov
add
clc
lods
loopne
sbb
inc
sub
inc
ss
push
adc
inc
or
imul
and
fisubr
xchg
hlt
mov
in
hlt
mov
stos
in
fdiv
and
dec
pop
pop
xor
push
pop
dec
and
dec
imul
or
fs
push
es
data16
inc
or
popa
cmp
dec
sub
jns
push
and
dec
add
xor
pop
sub
add
jae
bound
je
ins
adc
inc
adc
jle
pop
sbb
jae
push
xor
push
dec
push
dec
cmp
inc
add
inc
or
jae
bound
fs
imul
outs
aas
jg
push
cmp
inc
push
addr16
add
inc
sub
dec
add
je
jl
outs
xor
stc
les
add
iret
mov
pop
mov
mov
push
sub
jae
inc
leave
cmc
test
jbe
dec
or
into
test
fisttp
mov
outs
mov
jno
push
fcomp
ds
dec
and
jmp
jge
adc
lds
mov
jno
push
add
or
mov
push
dec
add
sub
mov
mov
pop
sub
lods
out
movs
out
xchg
mov
sbb
pop
add
push
jbe
leave
mov
cmp
test
add
je
jmp
sti
or
popa
add
js
repnz
nop
push
cmp
adc
test
mov
shl
call
inc
sub
clc
mov
fstp
iret
(bad)
jns
inc
add
push
pop
call
push
pusha
and
jecxz
jge
xor
fwait
in
nop
sar
mov
sahf
xor
xor
push
push
outs
xchg
std
xchg
lock
cmp
aad
test
pushf
and
mov
xchg
dec
add
cmps
push
push
sbb
mov
mov
out
mov
and
xchg
sbb
int
xchg
sar
mov
and
push
cmp
and
fnstenv
or
push
cmp
es
pop
mov
jl
mov
sbb
mov
in
sbb
cs
hlt
mov
inc
cmp
movs
push
push
sbb
ror
pop
inc
add
xlat
scas
in
jmp
out
lods
aaa
inc
cmp
cmp
push
xchg
movs
(bad)
mul
or
sub
das
xchg
std
mov
xchg
sbb
cmc
stos
sti
in
mov
and
popf
int
shr
nop
(bad)
call
bound
gs
(bad)
in
mov
and
sbb
sbb
enter
jb
movs
stc
sahf
jo
and
mov
icebp
test
movs
inc
nop
loop
jb
jmp
call
cmp
(bad)
cmp
jmp
aam
stc
xor
fwait
shr
in
adc
sub
add
test
pusha
inc
dec
fdiv
sbb
or
cmp
jo
fs
add
xor
sahf
rcl
fidivr
in
lods
test
lods
rol
(bad)
into
scas
iret
mov
xchg
pushf
fld
aam
std
nop
sar
rcl
stc
xchg
sbb
jg
dec
or
push
sub
inc
add
xor
xchg
rcr
ficomp
lock
fild
aaa
ja
jbe
je
push
and
dec
pop
push
push
inc
daa
imul
and
bound
outs
add
pop
and
pusha
and
dec
pop
je
fs
and
inc
ss
pop
pop
outs
sub
js
push
aas
jb
push
pop
push
push
pop
xor
pop
das
outs
pop
inc
add
or
dec
add
js
push
and
imul
push
cmp
or
jne
dec
or
pop
sbb
ss
push
adc
inc
or
pop
je
fs
and
inc
xor
outs
ss
sbb
pop
adc
push
cmp
xor
cdq
ret
mov
sbb
ret
scas
stc
test
mov
add
ret
mov
xchg
ror
loop
repz
fild
aaa
ja
je
jne
push
daa
bound
dec
or
bound
jae
pop
ss
gs
dec
or
add
ja
ins
sub
jle
bound
push
add
add
das
inc
ss
push
adc
xor
(bad)
and
std
mov
cmp
stos
leave
dec
mov
or
jg
out
inc
cmp
pop
push
hlt
and
inc
add
in
idiv
add
ss
cli
fwait
adc
push
sbb
pop
sbb
fcom
mov
pushf
xor
aas
jp
(bad)
(bad)
test
cmp
push
dec
jns
pop
push
scas
cld
mov
test
call
push
add
ret
dec
ins
sub
addr16
test
or
movs
iret
sbb
and
dec
sub
(bad)
mov
loop
call
jmp
aad
js
or
sti
mov
inc
(bad)
call
sub
loop
out
push
xchg
les
cmps
cmc
test
repnz
xchg
and
outs
and
enter
sahf
(bad)
mov
mov
data16
adc
fist
inc
imul
jae
(bad)
nop
loop
pushf
stc
mov
aam
les
cmps
or
sti
mov
scas
bound
dec
push
outs
or
repnz
xchg
push
pop
pop
pop
jae
jbe
retf
scas
out
pushf
es
fwait
pop
cmp
mov
mov
cmc
test
outs
push
pop
(bad)
cli
mov
mov
iret
mov
mov
cmp
mov
xchg
xor
ins
popf
ret
mov
aad
ja
push
xchg
sti
mov
stc
hlt
fsubr
push
inc
pop
adc
adc
scas
jmp
dec
push
daa
arpl
jge
xor
repnz
js
push
ror
mov
loope
mul
push
or
pop
cmp
xor
retf
xchg
push
bound
xchg
shl
inc
cmp
pop
adc
sbb
lods
pop
outs
fnsave
pop
sbb
mul
mov
dec
scas
cmp
neg
imul
scas
in
jle
add
cld
and
sub
dec
cmp
mov
jb
jne
inc
sub
aam
push
out
or
movnti
retf
ret
pushf
jb
rol
popf
push
aaa
push
mov
inc
sbb
(bad)
and
(bad)
int3
push
mov
pop
push
sbb
addr16
sub
ds
adc
outs
ss
sbb
push
sbb
outs
das
pop
cmp
ins
add
data16
inc
pop
popw
inc
cmp
push
push
cmp
or
dec
sbb
push
sbb
pop
cmp
ja
outs
xor
xor
ds
push
pop
ja
push
adc
arpl
push
and
fs
cmp
push
push
adc
inc
and
push
dec
push
dec
cmp
cmovns
adc
push
sbb
arpl
jae
jae
jb
dec
cmp
sub
pop
pop
jle
pop
push
push
or
xor
adc
inc
add
jns
outs
das
dec
add
ds
cmovg
dec
or
pop
push
jns
inc
xor
pop
adc
je
inc
adc
push
adc
cmovnp
mov
loope
in
fisttp
int
xlat
fst
rcl
push
aad
retf
sub
fadd
rol
jmp
xchg
test
test
movs
aam
retf
mov
xchg
rol
je
pop
adc
push
pop
pop
xor
pop
cs
push
jns
outs
das
dec
add
cdq
ret
mov
mov
mov
loope
enter
div
icebp
stos
into
pushf
shl
cmc
xchg
popf
loopne
(bad)
add
pop
xchg
mov
pop
cmp
pop
add
push
addr16
sub
and
and
lods
in
cdq
inc
push
es
adc
mov
cwde
jg
daa
sub
or
lock
cdq
mov
dec
and
xchg
cld
jnp
or
or
ja
in
adc
add
sbb
into
stc
mov
mov
int3
add
mov
cmps
cmp
push
cmp
mov
mov
xlat
(bad)
rcl
push
int3
mov
loopne
jge
inc
popf
in
mov
mov
ds
test
ja
test
inc
cs
js
mov
and
push
cmp
fidiv
cwde
aad
cmp
and
sbb
adc
mov
cmp
bound
pop
sbb
or
rol
and
adc
scas
les
retf
lods
inc
dec
add
out
fsub
iret
scas
int3
in
xchg
hlt
fiadd
js
call
sub
and
std
cmc
fcomp
mov
jo
int
clc
call
bound
movs
out
test
push
xchg
in
pop
push
adc
xchg
dec
pop
cmps
loopne
(bad)
hlt
mov
or
les
inc
cmp
adc
cmps
or
shr
or
ror
mov
jb
mov
dec
and
cli
mov
xchg
xor
aas
jg
adc
enter
cld
test
mov
dec
or
cli
stos
jmp
mov
pop
push
jl
fs
ss
out
cmp
leave
call
cdq
cli
push
dec
sub
and
cmps
pop
js
mov
push
xor
inc
cmp
sub
fmul
push
inc
addr16
and
ss
lea
push
adc
out
mov
pop
sbb
jecxz
aaa
je
push
jp
xor
in
jmp
ja
dec
(bad)
in
mov
jno
enter
clc
lods
pop
cmp
call
inc
jns
and
repz
aas
mov
(bad)
fsubr
mov
lahf
and
or
mov
lods
xor
clc
cmp
push
ficomp
jbe
repnz
mov
adc
cmp
loop
jbe
xor
mov
xor
loopne
ror
sbb
imul
push
inc
pop
cmp
arpl
jo
jb
inc
ss
and
bound
outs
aaa
push
push
inc
daa
inc
pop
inc
or
inc
sbb
pop
add
sub
push
add
jns
jl
data16
dec
cmp
jae
push
sbb
cmp
cmp
pop
sbb
inc
pop
push
and
movs
sbb
push
adc
sub
pusha
pop
adc
inc
pop
push
and
movs
sbb
pop
adc
ins
xor
push
imul
ds
push
adc
jno
arpl
dec
pop
or
jo
pusha
add
stos
fstp
rcl
mov
lods
rcl
test
call
aad
(bad)
cmps
jmp
int
fidivr
loope
xchg
icebp
add
in
scas
fadd
clc
nop
ficomp
(bad)
lods
fistp
fistp
into
add
clc
stos
call
mov
ret
xor
call
mov
ficomp
mov
out
into
mov
xchg
call
out
leave
add
xchg
push
add
clc
mov
repnz
sahf
fimul
enter
sbb
fs
cmps
scas
loopne
stc
jmp
lahf
aaa
js
add
jns
xor
das
jge
mul
inc
add
leave
dec
or
popf
icebp
add
fsub
lods
mov
mov
fistp
mov
adc
pop
sub
mov
push
xor
mov
stc
std
call
fsubr
hlt
mov
call
add
and
adc
cmp
dec
outs
add
gs
xor
xchg
into
mov
scas
in
cmc
mov
fist
mov
or
add
push
xor
sbb
bound
inc
and
sti
xchg
mov
enter
addr16
mov
dec
jnp
frstor
jns
mov
pop
inc
add
mov
or
leave
in
and
inc
xchg
(bad)
scas
icebp
jl
push
cmps
frstor
push
cli
mov
push
adc
retf
clc
test
and
inc
lods
aad
xor
cmp
and
adc
call
cld
mov
movs
arpl
mov
sbb
and
(bad)
push
adc
xor
mov
jmp
mov
sub
dec
xlat
inc
fnstcw
lods
in
addr16
jnp
xor
test
xchg
leave
dec
test
jno
xor
cmps
test
mov
mov
lods
push
lahf
xor
mov
mov
mov
mov
cmp
out
jp
sub
adc
mov
rcr
cmp
jnp
(bad)
cmp
push
xlat
xchg
xchg
mov
push
ret
jno
and
adc
or
cdq
inc
aad
ja
adc
pop
rcl
pop
enter
push
ss
clc
jne
pop
out
jb
cs
(bad)
mov
js
xor
sub
pop
(bad)
(bad)
push
cmp
inc
sti
gs
pop
pop
xchg
mov
jp
imul
mov
dec
add
imul
and
pop
sbb
iret
inc
shr
or
arpl
test
push
inc
les
xor
push
das
xor
cmp
imul
int
mov
adc
jg
mov
pushf
cdq
xchg
mov
sbb
mov
or
aas
cmp
icebp
push
mov
daa
add
push
rol
test
sbb
inc
aam
xor
pop
addr16
cmp
std
dec
(bad)
clc
jl
popf
nop
test
cmps
mov
dec
rcr
add
mov
sub
mov
repz
jmp
sub
mov
inc
mov
cmp
sub
ins
std
pop
sar
loop
hlt
inc
xor
push
or
loop
and
test
sbb
inc
push
add
or
and
scas
jns
dec
mov
adc
jge
std
cmp
lahf
lods
lea
dec
adc
jno
push
mov
icebp
pop
les
lock
xchg
jns
mov
dec
mov
sub
test
adc
sbb
pop
mov
test
dec
inc
sar
and
jo
xor
jmp
sbb
mov
fidiv
sahf
ins
(bad)
sub
push
int3
add
dec
mov
test
pop
stos
jp
add
loopne
mov
mov
adc
aam
and
lea
enter
nop
inc
xchg
adc
fild
jae
sbb
bound
jno
jg
adc
mov
pop
xchg
mov
xchg
or
repz
mov
call
mov
push
ror
(bad)
cdq
cmc
sub
and
adc
aam
lods
jb
mov
lods
pop
scas
imul
push
or
mov
mov
sar
dec
mov
add
test
ds
pop
pop
lahf
test
pop
fadd
and
xor
add
test
mov
(bad)
adc
inc
ds
jno
dec
xor
sub
mov
cmp
int
les
jne
push
mov
xor
daa
jp
js
pop
sbb
nop
loopne
xchg
out
xlat
xchg
pushf
into
mov
test
cdq
push
xor
adc
or
mov
sahf
(bad)
inc
or
dec
pop
jne
nop
repz
lods
icebp
mov
cmp
pusha
and
xor
pop
cmp
xchg
mov
(bad)
retf
sbb
(bad)
cmp
jae
dec
jl
jge
push
jle
pop
jle
dec
dec
or
cmp
in
mov
(bad)
scas
int3
mov
pop
sub
fwait
call
sbb
mov
xchg
sbb
popa
idiv
call
pop
add
cwde
rol
popf
fiadd
stos
in
cmps
hlt
jle
pop
sbb
orps
mov
pop
out
ss
lds
or
dec
mov
lds
inc
and
add
or
push
or
vmread
jns
jo
xor
pop
sbb
jge
lahf
test
(bad)
loope
sub
inc
xor
and
mov
icebp
pusha
cmp
sbb
mov
or
inc
std
movs
ret
xchg
pushf
call
gs
mov
out
das
push
cmp
mov
push
pop
mov
stos
mov
xlat
sbb
xchg
sub
mov
retf
ret
cli
in
test
fdivr
sahf
jne
mov
fbstp
inc
daa
fs
test
ror
dec
push
ins
es
mov
dec
mov
bound
ret
push
xchg
hlt
rcl
int
retf
push
or
lock
jnp
into
stos
stc
adc
lds
xor
jle
push
mov
fcom
mov
xor
ins
push
cmp
xor
adc
jb
add
adc
mov
xchg
jno
push
ret
mov
daa
gs
adc
xor
mov
mov
cmp
jo
in
call
fs
repz
dec
stos
fild
mov
adc
mov
mov
repz
retf
mov
dec
sub
sar
mov
inc
or
shl
data16
ret
mov
les
and
add
and
xchg
lds
hlt
mov
sbb
mov
mov
fild
fimul
sub
gs
pop
cmp
out
movs
enter
push
pop
cmp
icebp
mov
addr16
shl
jp
fistp
mov
scas
int
xchg
mov
dec
or
in
xchg
out
pop
adc
mov
test
sbb
sub
scas
mov
movs
aad
arpl
push
loop
iret
popf
add
je
xchg
iret
lods
ss
add
sub
aas
jl
add
rol
maxps
push
mov
into
mov
fisubr
push
sbb
mov
sbb
sbb
jae
push
and
jno
popa
rcr
imul
cmp
scas
ret
mov
adc
adc
dec
sbb
ror
leave
push
add
adc
jnp
retf
jnp
pusha
clc
mov
movs
push
push
(bad)
xchg
test
or
repnz
sbb
push
jns
cmps
in
jns
js
sbb
(bad)
push
push
gs
arpl
jae
hlt
popf
shl
inc
and
sub
cli
mov
xchg
adc
jge
dec
in
hlt
mov
leave
xchg
icebp
dec
aam
aad
mov
pop
sub
and
dec
add
clc
mov
jl
jmp
xor
test
sbb
or
hlt
mov
ret
xor
pop
or
pop
aaa
js
lds
add
mov
dec
jecxz
sar
jae
aaa
out
faddp
fs
gs
jmp
ret
cmp
mov
jl
add
mov
dec
dec
mov
scas
int
pop
push
push
mov
call
(bad)
xchg
fidiv
pushf
(bad)
or
sbb
xor
mov
jb
xor
mov
or
jns
sub
jb
adc
int3
scas
push
in
ret
cmp
pushf
enter
les
sub
in
scas
int
imul
cli
bound
dec
scas
test
mov
adc
cwde
fneni(8087
outs
sub
push
and
xchg
(bad)
gs
jne
repz
lahf
std
mov
sbb
pop
sbb
pop
adc
jnp
xchg
neg
cmp
cmp
test
xchg
loopne
add
in
int
loopne
dec
adc
mov
and
pop
add
mov
ret
sub
bound
and
pop
sbb
push
daa
movs
cmc
cmps
in
repz
push
xor
fisubr
retf
inc
push
push
aaa
xor
out
cmps
push
xor
fisubr
dec
aad
stos
fmul
mov
das
jne
mov
aam
out
push
push
dec
gs
pop
and
scas
in
adc
mov
cdq
cdq
std
mov
ror
jle
test
push
popa
js
add
bound
push
pop
jge
ins
(bad)
mov
xchg
lods
pop
add
popf
(bad)
pushf
mov
jae
add
or
jecxz
clc
inc
adc
jmp
push
mov
cmps
loope
add
and
imul
sahf
retf
fwait
xor
mov
push
push
movs
and
mov
icebp
pop
and
ja
jmp
add
jne
imul
in
popf
movs
(bad)
movs
mov
xchg
lods
mov
cmp
add
mov
xchg
add
int3
ins
pop
sbb
xlat
movs
cld
dec
pop
pop
jl
repz
jl
or
call
mov
jae
cmp
sub
gs
data16
dec
xchg
(bad)
movs
loop
cwde
hlt
test
and
aam
repnz
aam
in
add
dec
sub
dec
cmp
push
push
mov
mov
imul
sbb
pop
retf
fwait
mov
dec
pop
mov
leave
xchg
mov
mov
sahf
fnstenv
or
xor
movs
jmp
bound
nop
cld
mov
mov
cmps
mov
scas
(bad)
sub
inc
sub
in
sbb
and
mov
test
in
rcr
push
inc
or
fstp
stos
xchg
stos
enter
paddsw
outs
sub
test
mov
loop
shl
scas
(bad)
mov
fdivr
adc
aaa
inc
mov
rcl
cmp
inc
sub
mov
sub
hlt
cmps
(bad)
mov
stos
pop
inc
push
movs
les
push
mov
lods
into
xchg
sbb
rol
call
fcomp
push
(bad)
fnsave
lock
sbb
mov
out
neg
imul
jb
ds
outs
ds
lds
pop
sbb
fiadd
jno
jl
jge
arpl
pop
pop
fs
adc
push
out
jp
jnp
popa
adc
jmp
push
dec
mov
lods
jecxz
and
mov
pop
ss
xchg
shl
mov
and
js
inc
fs
xchg
in
mov
fwait
and
bound
leave
mov
pop
pop
sbb
cmp
lods
mov
add
push
dec
das
xchg
pop
sbb
mov
(bad)
mov
popf
pop
push
daa
ror
dec
xchg
shl
stos
jle
push
es
cmc
xchg
cmp
js
jns
pop
gs
adc
arpl
bound
(bad)
jecxz
fld
(bad)
cmp
pushf
xchg
ror
pop
sub
and
mov
test
xor
ret
jae
sbb
mov
jle
jg
mov
cmp
icebp
mov
pop
dec
loopne
sar
imul
sti
in
stc
mov
fmul
loop
and
push
ins
popf
(bad)
les
fcmovnu
test
pop
jmp
(bad)
jg
mov
cmp
movs
loop
iret
push
adc
pusha
mov
mov
add
and
je
je
xor
mov
mov
cmps
in
loop
mov
inc
and
or
lds
pop
jae
fwait
repnz
in
xor
push
aaa
cmps
push
or
pusha
cmp
ja
pop
test
sahf
mov
test
add
fcomp
cmp
xor
mov
inc
sub
push
outs
sub
gs
or
and
cld
call
in
js
outs
push
out
push
es
ins
aas
into
xchg
fidiv
mov
push
sbb
arpl
dec
inc
(bad)
pushf
fild
(bad)
mov
mov
xor
test
inc
mov
cmp
aas
ins
das
data16
jge
pop
pop
ins
retf
xor
sbb
lds
mov
mov
icebp
mov
retf
stos
push
pop
ds
shl
push
mov
pop
sbb
mov
and
mov
mov
iret
fwait
call
push
xor
mov
cmc
mov
test
xor
ja
sbb
jb
mov
outs
and
ins
push
dec
rol
rcl
jecxz
sar
mov
mov
push
jno
xlat
xchg
das
jnp
push
adc
sbb
add
and
cmp
inc
add
out
cmc
scas
fisttp
mov
pusha
adc
dec
(bad)
jnp
repz
outs
pop
dec
aad
clc
stos
mov
sbb
mov
or
sbb
push
les
arpl
loope
retf
sbb
inc
add
lods
div
lahf
cld
add
push
loop
dec
adc
and
dec
sub
aad
jp
cli
ja
jbe
and
out
push
dec
or
pop
ss
cmp
jmp
add
jg
pushf
out
lods
jbe
fwait
leave
lock
cs
fist
dec
sub
mov
mov
mov
and
xor
mov
loopne
bound
les
jge
add
test
pop
jmp
mov
inc
adc
cmc
mov
xchg
jg
dec
dec
mov
mov
dec
pushf
repnz
(bad)
repnz
xlat
and
test
inc
jo
inc
retf
mov
jo
loop
fs
arpl
add
test
add
jl
pop
add
loop
xor
imul
and
dec
push
aas
mov
xor
xor
adc
push
push
or
fidivr
jae
js
bound
imul
aam
fisttp
test
mov
out
mov
xchg
jl
outs
sbb
pop
in
(bad)
mov
imul
ss
jle
or
div
mov
inc
sub
jne
or
push
adc
(bad)
scas
fcom
jge
jl
adc
xor
mov
call
popa
and
jg
push
xchg
sar
pop
sbb
pusha
retf
mov
pop
sub
adc
add
sub
nop
ret
rcl
outs
add
stc
fdiv
cmp
pop
adc
bound
sbb
mov
jne
jb
push
push
in
mov
pop
bound
pop
jmp
xor
pop
inc
xor
loope
out
mov
mov
mov
icebp
push
dec
or
test
idiv
sbb
dec
add
dec
adc
movs
cli
cdq
ret
test
jle
mov
cld
mov
mov
mov
fwait
test
ins
add
cld
(bad)
scas
fmul
jp
pop
add
mov
shr
push
xchg
test
cmovl
(bad)
mov
sub
adc
sar
(bad)
xchg
mov
out
sub
aad
and
fs
mov
mov
retf
jb
scas
in
ja
pop
sbb
test
leave
pusha
adc
add
jecxz
jmp
and
dec
ds
push
(bad)
xchg
retf
xchg
fmul
sbb
jmp
xchg
clc
nop
xlat
push
outs
sbb
fld
dec
add
ret
(bad)
bound
fmul
fisttp
loope
mov
imul
adc
adc
je
dec
dec
or
ficom
ins
ds
ds
or
es
add
cmp
mov
popf
jecxz
mov
in
inc
daa
outs
sub
xor
jns
jne
adc
inc
jg
sub
sub
shl
scas
div
sub
inc
cs
inc
daa
inc
adc
std
test
push
push
push
push
dec
sbb
inc
xor
lods
stc
mov
mov
ds
push
adc
ins
sbb
xchg
cmps
scas
idiv
cmp
out
lods
int
retf
shl
jl
add
mov
push
xor
lods
movs
out
cmp
pop
ds
std
mov
arpl
fwait
xlat
xchg
cmp
repnz
add
mov
ins
sub
into
fnstcw
std
pushf
jb
push
xor
outs
dec
cmp
(bad)
mov
mov
es
push
dec
psubw
aad
jecxz
sbb
neg
stos
leave
cwde
fcmovnu
xchg
jno
(bad)
retf
(bad)
cmp
push
inc
mov
stos
in
repz
dec
cmp
cmc
xchg
in
jle
dec
aaa
ins
scas
cld
mov
push
cdq
sti
mov
inc
out
iret
mov
push
sbb
std
scas
jae
jo
je
movs
aam
enter
inc
minps
inc
cdq
lock
mov
jne
ja
jp
mov
pop
iret
xor
test
movs
mov
cmovne
inc
cld
mov
enter
sbb
mov
das
jge
adc
xchg
rcr
mov
adc
or
scas
retf
sbb
fadd
mov
pop
jp
popa
add
mov
leave
mov
aam
sub
cmp
retf
adc
retf
lock
(bad)
pop
dec
nop
loopne
cld
xor
pop
pop
or
mov
pop
adc
cmc
sbb
fnstenv
pop
sub
xor
test
stos
(bad)
fisttp
cwde
sar
dec
adc
inc
add
sbb
mov
inc
or
ret
xor
cmp
retf
inc
and
cdq
fcom
xchg
(bad)
aas
gs
ins
push
fdivr
xchg
aam
stos
jmp
out
add
or
fs
aad
xchg
aam
dec
sbb
inc
add
int
mov
mov
mov
adc
push
js
es
push
adc
push
adc
into
stos
test
repnz
sub
jnp
push
fs
push
or
jb
pop
xor
mov
stos
(bad)
xchg
shl
xchg
ror
call
fcom
adc
pop
sbb
sub
sub
sub
push
adc
push
(bad)
and
jbe
jns
push
das
imul
inc
push
pop
or
adc
jge
pop
movs
in
sahf
out
mov
es
loopne
clc
stos
mov
ins
add
sbb
inc
and
xlat
lahf
lods
sar
jb
xor
nop
fs
les
xchg
leave
lahf
(bad)
add
cmp
cmp
mov
mov
cmp
test
daa
je
idiv
jnp
mov
jle
push
push
(bad)
call
out
stc
fwait
sub
imul
mov
dec
rcpps
mov
xchg
shl
test
scas
xchg
retf
mov
retf
mov
fst
movs
(bad)
icebp
mov
fild
jmp
ficom
pop
je
add
dec
and
dec
adc
pusha
adc
adc
jae
push
push
adc
and
pop
adc
dec
adc
bound
pop
jge
sub
pop
ja
and
mov
jmp
fld
mov
pop
or
jle
push
loope
jnp
dec
cld
inc
iret
mov
imul
mov
leave
mov
js
inc
jmp
test
mov
mov
xor
sub
xor
jne
scas
out
lods
icebp
inc
sbb
sub
sub
adc
mov
lods
retf
xchg
clc
lahf
push
or
ss
aaa
push
ret
xchg
sti
pop
pop
add
out
mov
xchg
mov
adc
fnstenv
dec
add
jbe
push
call
loopne
jne
outs
lock
loop
rcl
mov
aad
mov
inc
and
ins
test
mov
fs
rcl
cli
mov
cmp
imul
cmp
xchg
out
mov
mov
loope
cli
mov
sbb
ja
lods
loopne
mov
cmc
lods
mov
pop
inc
add
xor
ins
pop
and
sbb
push
clc
mov
fistp
xchg
inc
adc
push
out
add
repnz
(bad)
std
mov
mov
pop
add
push
lds
add
in
mov
daa
xor
and
jo
ret
xchg
scas
enter
cdq
int
xchg
scas
enter
out
leave
dec
out
fwait
or
adc
push
sbb
sbb
jnp
inc
cs
pop
js
dec
ret
pop
test
movs
out
mov
das
jge
pop
jmp
shr
pop
jbe
pop
in
popa
and
and
adc
outs
sbb
shr
unpcklps
dec
jmp
les
sbb
jnp
mov
xor
(bad)
mov
mov
dec
fidiv
add
fistp
hlt
jbe
sub
mov
cdq
fldenv
ss
add
mov
mov
retf
cwde
fild
jge
sbb
cmp
pop
add
(bad)
mov
nop
mov
push
xor
adc
stc
fld
fstp
mov
or
jo
pop
out
cli
cdq
cdq
xchg
fsubr
push
push
inc
cmp
shl
jmp
imul
and
pop
les
jns
dec
call
inc
add
cli
inc
or
enter
std
data16
or
jle
pop
add
mov
fwait
mov
xor
rcr
xor
mov
sbb
pop
sbb
cwde
(bad)
dec
inc
or
sbb
popa
jmp
jmp
pusha
sbb
shl
push
(bad)
add
and
gs
xor
imul
mov
pushf
(bad)
mov
sub
adc
(bad)
mov
sub
push
ret
movs
ret
mov
stc
mov
mov
popa
add
push
sbb
or
outs
adc
and
cmp
int
inc
pop
pop
jecxz
mov
outs
xor
rcl
ins
sbb
mov
sti
js
and
push
in
in
out
fld
mov
lahf
sar
es
scas
jmp
mov
push
and
mov
cwde
mov
add
dec
or
int3
mov
lods
aad
int
sub
test
sbb
nop
icebp
mov
xchg
xor
fs
into
jb
cmp
cwde
ret
mov
pop
push
push
or
pop
add
mov
imul
adc
out
shr
ss
cmp
std
(bad)
fwait
gs
push
add
mov
retf
cs
jp
addr16
js
dec
push
lock
and
sub
scas
in
mov
sub
ss
lahf
pop
push
and
sbb
stos
mov
jnp
test
xchg
fisttp
aas
es
syscall
sar
in
rcl
nop
mov
stos
mov
mov
jo
add
push
dec
in
shl
xor
hlt
mov
xchg
lock
(bad)
outs
or
xchg
push
leave
jle
mov
inc
(bad)
xor
fist
jns
dec
rol
sub
adc
ds
nop
shl
push
push
out
shl
shr
das
sbb
outs
push
dec
add
and
push
sbb
sahf
std
cdq
add
(bad)
push
or
xlat
mov
lahf
xchg
lahf
std
test
cmp
retf
jo
dec
or
adc
jns
and
clc
addr16
fcom
test
mov
inc
mov
(bad)
mov
mov
xchg
ficom
gs
stos
stos
(bad)
scas
xchg
dec
add
jecxz
test
test
cmp
xor
retf
jnp
fistp
pop
add
mov
mov
add
jb
jae
sbb
mov
(bad)
cld
clc
fst
pop
sbb
loope
cmc
mov
lahf
fmul
add
xchg
rcl
js
les
or
lds
iret
xchg
mov
lds
sub
jbe
mov
mov
adc
cmp
loopne
dec
je
mov
mov
movs
in
mov
enter
div
bound
iret
mov
aaa
dec
or
shr
jbe
cmp
jge
fld
cli
add
or
add
cmc
cmp
call
(bad)
lahf
mov
xor
je
out
aas
dec
shufps
ja
mov
xchg
ror
les
loope
loop
push
mov
push
cmp
pop
mul
jb
pop
mov
cmp
jae
mov
xchg
scas
cld
test
test
cmp
test
and
das
imul
push
xor
push
mov
xor
mov
xchg
fdivr
arpl
sbb
cmp
jns
dec
not
pop
ss
repnz
push
ins
or
pushf
aam
inc
xor
hlt
jle
pop
lds
jp
arpl
rcl
mov
cmp
ja
dec
sub
and
jmp
inc
add
shl
repz
pop
xor
or
push
sbb
pop
sbb
pop
sub
jnp
jbe
and
ss
sub
push
xor
jle
xor
nop
fdiv
aaa
dec
inc
loopne
not
adc
or
pop
mov
mov
sbb
inc
and
inc
pop
jnp
pop
add
jbe
ins
adc
outs
and
jo
imul
lock
(bad)
ja
push
adc
mov
ins
or
xor
push
sbb
and
add
xor
pop
sbb
xor
and
addr16
es
push
js
pop
or
xchg
aam
std
lods
jmp
xchg
rcl
add
add
xor
add
jne
inc
cmp
jp
pop
adc
and
add
ss
ror
push
sub
sub
add
dec
add
cmp
call
ret
mov
call
inc
bswap
push
add
cmp
push
nop
adc
jb
loope
push
sub
frstor
inc
pop
push
call
test
mov
adc
mov
in
(bad)
fisttp
cmc
gs
mov
lods
call
(bad)
mov
in
mov
addr16
jnp
push
jmp
add
ror
mov
bound
inc
or
sbb
push
push
adc
into
imul
push
pop
jno
cmp
sub
sub
ds
cs
add
or
sbb
cmp
xor
call
shl
push
pop
into
test
jo
inc
sub
push
fisubr
or
and
ret
aas
in
mov
mov
mov
popa
sbb
or
jl
jae
(bad)
sti
mov
nop
inc
inc
and
push
dec
sub
ror
test
add
pop
xor
and
push
out
(bad)
sub
cs
cli
mov
xchg
fcom
bound
pop
jmp
mov
jns
jmp
inc
imul
sbb
or
jle
loope
mov
or
mov
mov
xchg
movs
jmp
nop
inc
out
fst
cmp
je
push
dec
or
out
test
inc
xor
sub
xchg
sti
mov
jge
pop
lea
clc
movq
push
pop
pop
icebp
mov
into
lahf
(bad)
rcl
sub
or
daa
pop
xchg
lock
xchg
int3
mov
cwde
xchg
gs
cmc
test
mov
rcl
or
push
sbb
dec
aas
push
(bad)
cld
mov
and
fdivr
fcomp
dec
cmp
xor
inc
or
jo
sub
sub
and
fiadd
push
ins
add
mov
mov
mov
inc
sbb
push
loope
rcl
fld
fdivr
jle
jbe
test
sahf
(bad)
ficomp
popa
cmp
push
stos
cld
xchg
xchg
scas
fisttp
adc
mov
inc
or
push
cmovl
xor
mov
outs
sbb
fldenv
movs
push
push
adc
int
inc
jp
in
or
adc
pop
pop
jmp
ins
xor
(bad)
adc
jle
lock
cwde
lds
mov
test
(bad)
mov
inc
mov
push
sbb
movs
loop
icebp
popf
jmp
adc
les
push
adc
adc
stos
jle
or
dec
mov
sub
ret
ins
cmp
and
in
pop
and
adc
in
mov
movs
iret
sub
push
pop
div
mov
lahf
std
inc
test
out
jl
test
push
std
pushf
scas
push
outs
sub
xor
xchg
lock
xor
out
pushf
retf
cmp
pop
add
push
ror
dec
mov
aas
dec
in
add
sub
dec
(bad)
pop
or
xor
mov
cmps
aad
loop
leave
fldenv
xor
mov
ret
and
xor
inc
xor
fwait
ret
xchg
jo
or
dec
mov
mov
or
push
leave
mov
mov
(bad)
into
or
cli
mov
inc
add
or
hlt
mov
out
xlat
ja
loop
leave
nop
dec
jle
pusha
add
jecxz
loop
jp
outs
push
leave
js
repz
push
sbb
fadd
add
dec
mov
inc
dec
or
and
dec
push
sbb
pop
sub
pop
sbb
and
mov
gs
pop
sahf
stc
fwait
mov
mov
test
xor
or
push
adc
dec
das
pop
ret
adc
(bad)
mov
adc
jl
fdivr
adc
pop
pop
sbb
adc
add
add
xor
lods
retf
pop
mov
sbb
push
sub
cmp
jge
pop
stos
enter
mov
add
jl
repnz
(bad)
ja
bound
sub
xchg
aam
bound
dec
das
push
xchg
fdiv
sbb
out
and
add
mov
add
pop
dec
push
dec
push
sub
inc
xchg
fnsave
mov
pop
xor
cs
in
cmp
mov
outs
xor
loope
jecxz
rcr
and
inc
jmp
loopne
lods
not
xchg
mov
xor
adc
cs
xchg
or
inc
aaa
shl
call
push
cmps
lds
int3
(bad)
mov
inc
in
push
sbb
test
into
stos
movs
cld
mov
das
sbb
fidivr
sbb
jo
adc
or
data16
push
stc
dec
sub
cmp
lock
inc
add
ror
popf
fistp
ja
add
retf
cmps
xlat
inc
mov
test
push
jge
popf
ss
add
idiv
add
push
mov
bound
inc
add
or
and
inc
sahf
aam
add
mov
push
jmp
sub
in
out
into
add
add
jmp
bound
dec
or
das
shl
and
mov
inc
xor
das
jae
aas
push
sbb
or
fs
pop
fs
mov
ins
mov
sub
movs
out
add
mov
loopne
jnp
imul
dec
add
(bad)
popf
into
mov
pop
sbb
and
mov
mov
or
xor
inc
mov
jbe
imul
popf
fdivr
scas
mov
push
enter
jle
bound
pop
cmp
adc
inc
dec
ss
sub
xchg
shr
(bad)
repnz
cdq
shl
jno
push
movs
adc
sbb
or
ds
and
cld
(bad)
fisttp
xchg
xlat
mov
jns
icebp
stos
fbld
push
ins
sub
or
dec
test
leave
xor
pop
adc
cmp
xchg
lahf
adc
cmp
sub
ins
sbb
jmp
pop
out
es
outs
add
lea
dec
in
aam
xlat
mov
lahf
mov
pop
imul
adc
jmp
mov
adc
sbb
das
(bad)
dec
jmp
fstp
inc
ss
enter
mov
pop
ins
nop
std
(bad)
retf
jp
repnz
test
lds
xchg
mul
mov
xchg
(bad)
ins
mov
movs
icebp
mov
cs
andnps
mov
pop
mov
test
cmp
cld
sahf
scas
gs
hlt
test
inc
mov
mov
imul
dec
addr16
xlat
add
(bad)
mov
pushf
in
mov
sub
addr16
clc
ds
punpckhwd
cmp
scas
in
pushf
lods
xchg
lds
int3
push
dec
test
movs
lods
jmp
test
jo
int
fdivr
mov
fwait
repz
stc
fidiv
xor
xor
sti
xor
hlt
mov
ret
mov
xchg
mov
dec
mov
or
jle
dec
sbb
out
ret
icebp
xchg
mov
aaa
jge
inc
adc
mov
adc
inc
retf
mov
xchg
sbb
ret
cmp
mov
or
xchg
sub
jnp
push
adc
cmp
mov
jecxz
int
iret
sub
dec
adc
jnp
push
hlt
movs
out
add
imul
mov
nop
dec
in
scas
hlt
xchg
fiadd
movs
loop
retf
cmps
mov
add
pop
mov
push
pop
add
cwde
push
ss
push
mov
mov
dec
mov
add
sar
sbb
add
add
addr16
es
pop
test
adc
mov
lods
aam
adc
loope
inc
xor
es
sub
or
and
test
(bad)
stos
mov
pop
cmp
mov
and
mov
cmp
sub
dec
xchg
retf
push
adc
pop
ret
and
push
and
jnp
xor
jo
xor
push
sub
aas
and
mov
adc
sbb
loop
cmc
xchg
inc
div
adc
jns
jne
pop
pop
cs
sub
rcl
aad
repz
mov
dec
mov
rcr
nop
stos
inc
das
pusha
adc
jnp
and
sbb
sahf
fsub
or
adc
pop
sbb
jne
mov
ret
xchg
rol
paddsw
or
fnstenv
js
and
lds
cmovns
sub
push
jl
fnstsw
enter
and
int3
sub
jae
jae
out
imul
fs
cs
loopne
ret
push
adc
ror
loop
jmp
sar
in
scas
shr
dec
data16
ds
(bad)
sub
jp
cmp
add
or
stos
aam
fistp
jb
mov
das
stos
call
jae
push
mov
push
ins
fidiv
cmp
or
mov
pop
cmc
mov
std
data16
cmps
test
arpl
arpl
sub
daa
add
lods
inc
or
scas
dec
cmp
mov
push
pop
pop
bound
cmp
aad
fidivr
jne
xchg
bound
dec
or
adc
jle
ror
inc
aaa
jo
cli
pop
sbb
add
test
lods
jmp
lods
inc
sub
outs
add
inc
add
jl
jb
cmps
int3
imul
jmp
adc
mov
fwait
mov
sub
push
sbb
stc
data16
jge
push
pop
jne
dec
xor
in
sub
add
std
je
mov
ds
std
mov
shl
mov
cmp
xor
push
ins
xor
mov
es
sub
push
int3
scas
shl
sbb
cld
ds
cld
test
jl
add
in
popa
and
sub
mov
mov
rcl
movs
loop
fistp
push
push
fstp
outs
xor
ds
add
pop
or
dec
fisubr
into
mov
push
push
or
sub
pop
push
cmp
cmp
push
ss
or
and
sub
ins
out
mov
xor
or
fiadd
push
ins
xor
xchg
cli
mov
mov
bound
sub
shl
pop
push
test
or
and
mov
add
dec
sbb
jae
pop
jecxz
pop
pop
ret
mov
pop
ins
adc
jns
dec
leave
cwde
fimul
xlat
and
out
mov
js
jl
mov
add
cmp
jg
push
inc
das
dec
pop
cmp
test
call
jne
xchg
leave
mov
jne
push
and
mov
cmp
js
push
pop
xor
aaa
push
pop
(bad)
jne
push
sbb
sbb
cli
push
cmovl
push
jl
jmp
pop
jl
push
push
pop
scas
hlt
lods
movs
out
dec
adc
lods
lock
scas
int3
xor
jae
push
push
inc
mov
sub
jmp
dec
fcom
test
in
add
das
sub
movs
retf
js
imul
loop
pop
add
or
ret
xchg
inc
add
xchg
inc
icebp
mov
lods
popf
push
jl
retf
out
mov
inc
or
fldenv
scas
les
or
adc
dec
mov
pusha
mov
pop
adc
xor
jmp
std
jns
xor
sbb
jb
sub
push
sbb
xchg
rcl
dec
sub
ja
fnsave
test
push
les
pusha
xor
push
inc
or
jo
push
pop
cmp
push
jns
fcomp
fwait
test
lea
in
scas
jno
lahf
fstp
daa
pop
ret
mov
je
addr16
xor
xchg
repnz
and
js
xchg
rcl
push
fisttp
outs
nop
ror
cmps
fidiv
add
jne
and
movs
gs
lds
hlt
pop
in
adc
jmp
pop
pop
call
arpl
ror
pop
or
stos
ret
gs
and
aas
jecxz
jae
sbb
jl
in
mov
add
retf
mov
and
mov
jo
dec
les
daa
pop
push
dec
pop
ret
pop
push
sbb
cli
adc
adc
pop
repz
inc
ja
daa
lods
imul
ins
cmp
movs
push
push
ins
or
mov
cdq
movs
pushf
xor
sub
ja
xor
movs
fwait
xor
jg
pop
sbb
mov
bound
or
pop
inc
xor
mov
out
shl
xchg
push
adc
stos
mov
lahf
test
jae
into
lods
jmp
sbb
jge
and
inc
sub
xchg
retf
test
sub
push
test
or
mov
mov
pop
scas
inc
sub
cld
popf
into
xchg
cli
jae
dec
pop
push
movs
out
mov
xchg
ror
sub
jb
add
jno
pusha
and
out
test
hlt
mov
ins
mov
jle
test
out
(bad)
xchg
mov
outs
(bad)
ror
sbb
imul
xchg
push
add
push
out
ret
in
in
(bad)
(bad)
add
test
mov
cmp
out
test
jge
jmp
jb
cmp
sub
xor
fistp
mov
js
jns
jmp
fisubr
adc
int3
mov
xchg
inc
or
sub
adc
gs
xor
sub
dec
sbb
jge
push
lea
push
and
adc
xor
push
loop
movs
xchg
enter
pop
xchg
xchg
(bad)
push
fisubr
(bad)
pusha
les
xor
aas
call
popa
add
adc
cmp
inc
adc
gs
outs
push
push
sbb
or
shl
sbb
push
jns
dec
push
call
je
es
mov
dec
adc
sbb
stc
bound
sbb
jno
cli
add
pop
push
xor
add
lds
add
adc
sar
sub
ins
or
inc
mov
repnz
jae
and
pop
test
xchg
clc
xchg
sbb
and
adc
add
mov
cld
mov
mov
test
xchg
lods
mov
popf
(bad)
and
or
in
lahf
adc
jge
xchg
mov
push
pop
jne
xchg
ficomp
repnz
sbb
sar
retf
mov
lods
retf
adc
add
jp
fst
in
fstp
xor
pop
fistp
mov
mov
add
mov
(bad)
xor
jnp
dec
out
mov
mov
repz
shl
inc
or
loope
std
test
loope
(bad)
mov
shr
jmp
ret
xor
js
ja
and
stos
push
imul
sub
ror
mov
outs
or
std
div
xor
xor
mov
mov
dec
dec
pop
pop
sbb
inc
ror
adc
cmp
inc
add
xchg
(bad)
test
ret
scas
xor
push
cmp
jp
nop
movs
(bad)
daa
fild
pop
push
adc
pop
dec
das
inc
mov
cli
mov
mov
xchg
xchg
enter
mov
mov
aaa
mov
push
adc
jae
js
xchg
aad
fbld
and
xchg
cli
mov
pop
cmp
push
sub
push
adc
inc
adc
xor
das
push
comiss
dec
mov
jne
jae
push
sbb
cmps
jle
mov
xchg
call
fisub
jnp
cmc
pop
mov
xor
and
mov
push
pop
dec
cmp
inc
sbb
loopne
cmp
jle
dec
hlt
xchg
mov
shl
push
div
icebp
test
outs
xor
cld
bound
rcl
enter
jecxz
aam
xchg
fwait
call
mov
add
out
mov
push
fist
(bad)
popf
xchg
or
dec
sbb
jno
and
push
dec
ss
adc
cld
push
cmp
stos
jmp
aas
xchg
in
clc
jg
jge
push
mov
popa
cs
push
xor
mul
jns
adc
imul
fisttp
pop
jg
inc
adc
push
mov
test
imul
mov
cmc
cmps
in
xchg
rcl
neg
pop
sub
outs
sub
neg
out
xchg
cmc
mov
sub
jb
add
jl
ins
das
dec
add
data16
or
cwde
sar
retf
jo
push
xor
adc
inc
and
push
outs
mov
test
add
pop
adc
repz
call
xor
or
pusha
xor
pop
xor
rcl
es
cmp
cmp
test
xchg
hlt
mov
mov
cmps
or
push
sbb
jo
pop
sbb
imul
lods
into
lods
in
jmp
fstp
icebp
mov
mov
pusha
cmp
jnp
pop
fstp
add
gs
dec
or
jns
nop
fistp
add
xor
pop
sub
sbb
add
sub
and
jns
test
mov
scas
ficomp
fistp
cmp
pop
add
aad
aam
push
pop
xor
jo
pop
out
int
pushf
fdivr
aaa
sbb
sbb
cmp
ins
push
inc
(bad)
mov
xchg
test
mov
sub
xor
jp
and
dec
cmp
add
jg
sbb
jp
mov
stos
rcr
jmp
and
movs
mov
add
outs
and
cmp
push
adc
arpl
inc
push
dec
adc
arpl
push
imul
sub
or
pop
in
(bad)
jle
mov
out
jb
aas
inc
sbb
das
pop
sub
gs
adc
inc
pop
ss
ins
ror
test
enter
add
push
add
call
stc
test
cmp
ja
jns
push
dec
adc
add
cmp
js
sub
fsub
push
add
inc
fnstenv
test
push
cmp
push
pop
test
retf
test
cmp
sar
push
sbb
mov
in
lods
sar
loope
es
pop
inc
retf
xchg
(bad)
dec
sub
or
in
iret
xchg
repnz
xlat
js
push
and
xor
das
imul
cld
dec
push
inc
sub
push
cmp
sub
pop
or
aas
pop
push
inc
repnz
dec
push
push
sbb
push
and
sbb
jle
cmp
jg
mov
or
and
jle
pusha
adc
jae
imul
mov
outs
sbb
sub
scas
mov
jo
ficom
inc
and
xchg
rcr
jle
adc
mov
pop
lahf
xor
nop
push
test
push
fisub
push
push
add
jno
ja
or
pop
mov
pop
xor
test
std
sub
pop
or
movs
ret
mov
mov
sub
fisub
push
pop
(bad)
xlat
icebp
xchg
jo
lock
retf
push
push
push
or
xchg
bound
test
int
inc
push
ret
icebp
mov
aaa
pop
loope
aaa
pop
or
and
test
lahf
repz
push
dec
mov
mov
arpl
in
bound
pop
out
mov
mov
mov
imul
mov
dec
and
(bad)
into
mov
add
lea
jnp
jge
mov
xor
jecxz
stos
adc
inc
daa
jae
or
jmp
push
ds
xor
loop
lds
mov
mov
popf
adc
jl
aaa
jb
push
adc
mov
nop
mov
jecxz
aad
adc
aam
outs
and
cmp
mov
fstp
leave
push
pop
sub
xchg
fnstcw
retf
push
jb
inc
cmp
jns
or
ins
adc
sbb
ja
and
fsub
sbb
push
pop
push
add
add
xchg
cli
adc
push
jb
movs
retf
xchg
shr
sub
cmp
mov
mov
pop
sub
dec
hlt
ss
rcr
jg
and
cmp
subps
jecxz
out
mov
sbb
(bad)
jmp
ja
jecxz
mov
mov
xchg
cwde
mov
dec
and
dec
rcr
loopne
cmp
cmps
rcl
cmc
mov
cmp
cs
inc
pop
and
stos
(bad)
mov
adc
cmp
or
fnstcw
inc
lock
cwde
(bad)
retf
popf
cmps
imul
cmp
mov
shl
mov
pop
adc
loopne
sahf
fadd
cmp
ds
sbb
xchg
ror
pop
dec
sub
test
xchg
aam
mov
mov
inc
pop
pop
sbb
dec
adc
aaa
and
data16
out
cmps
les
cmp
cld
jns
push
dec
add
xor
add
jns
retf
mov
mov
or
add
je
nop
in
fst
push
sbb
mov
lahf
mov
aaa
je
push
ins
jmp
out
fcomp
int
mov
retf
(bad)
xchg
icebp
jl
pop
sbb
push
loopne
pop
in
stos
nop
push
les
add
imul
test
mov
mov
sub
and
cmp
les
(bad)
out
xchg
in
movs
retf
mov
div
cmp
data16
subps
pop
cmp
and
pop
push
movs
mov
lods
jmp
xchg
int
idiv
jp
push
das
push
rcl
jo
dec
(bad)
scas
les
test
and
pop
sub
jne
pcmpeqd
push
in
ins
push
pop
in
in
or
xchg
inc
push
pop
xor
push
push
dec
adc
adc
push
imul
das
je
pop
mov
fild
cmp
sub
push
bound
jne
push
arpl
inc
jmp
(bad)
mov
or
int
add
dec
andnps
lds
popf
hlt
sub
stos
(bad)
inc
mov
test
je
pop
sbb
mov
pop
pop
or
cmp
dec
sbb
cmp
and
das
pop
sbb
push
ins
add
mov
movs
fwait
pusha
mov
jecxz
in
mov
mov
sbb
add
jge
sbb
or
lahf
scas
jmp
cmp
push
sbb
stos
jmp
psrad
cmp
adc
mov
call
popf
enter
add
aad
enter
fs
push
cli
xor
ins
sub
ds
adc
mov
mov
xor
mov
push
add
(bad)
dec
cmp
mov
mov
cmps
data16
nop
ret
mov
lea
arpl
dec
stos
adc
ret
dec
or
adc
sub
div
jno
jae
jb
out
leave
nop
jne
add
sub
arpl
xor
aaa
cmp
inc
out
push
fwait
rol
shl
imul
pushf
fistp
test
cmp
outs
cs
cmp
test
rep
fld
adc
sub
dec
add
inc
and
sbb
fwait
inc
fmul
jp
arpl
out
mov
and
xor
push
adc
retf
inc
add
imul
sub
and
gs
inc
push
dec
es
push
cmp
inc
add
sub
imul
push
test
sub
push
or
scas
rcr
cmc
mov
fstp
test
xor
push
inc
xor
imul
fadd
mov
movs
in
mov
xor
into
lods
call
bound
pop
pop
push
or
add
aam
xor
adc
aam
loope
repnz
inc
add
das
bound
jns
out
shr
push
jge
mul
push
daa
jbe
xor
add
dec
adc
cmp
jle
out
jne
push
cmp
movs
in
and
js
pop
mov
mov
mov
inc
hlt
dec
adc
out
or
outs
push
fild
hlt
lods
retf
sub
push
adc
push
repz
inc
stos
dec
or
dec
dec
or
push
push
out
pause
clc
rcl
out
or
fs
mov
leave
pop
sbb
lods
shl
mov
mov
fldcw
and
mov
mov
scas
ret
mov
cvtdq2ps
add
push
sbb
xor
dec
aaa
push
sbb
inc
or
sub
call
out
test
xchg
(bad)
mov
bound
jne
jno
pop
out
int
push
adc
call
movs
out
in
stos
in
cmps
retf
mov
in
ret
mov
(bad)
mov
push
xor
and
das
imul
jge
mov
and
dec
adc
sbb
jnp
ret
mov
jmp
ins
or
sub
ret
mov
pop
xor
and
hlt
jbe
and
xchg
cmps
jmp
lahf
sbb
jae
adc
push
test
mov
call
jo
xchg
icebp
mov
mov
xor
pop
push
pop
mov
xor
enter
adc
hlt
mov
mov
mov
pop
sub
ins
shr
dec
or
dec
adc
pusha
or
iret
mov
sbb
sti
mov
mov
retf
or
sub
cs
cmp
lock
jge
adc
push
jmp
out
call
push
repz
adc
clc
add
xchg
mov
add
cmp
jns
into
lahf
imul
sahf
les
bound
push
aaa
jp
es
ret
and
pop
jb
sub
iret
xchg
lds
xchg
jmp
or
stc
call
mov
sbb
dec
pop
sub
sbb
inc
add
retf
test
inc
out
(bad)
movs
loop
retf
(bad)
jp
fs
out
ror
sbb
push
jecxz
mov
adc
out
imul
push
xor
ins
push
dec
adc
push
xor
cmp
push
adc
add
out
mov
iret
xor
icebp
mov
leave
jge
sbb
out
pushf
dec
in
jo
push
cmps
fbstp
mov
stos
loopne
int
sar
jp
repz
sbb
cmp
adc
sbb
pop
pop
push
pop
sar
fdiv
bound
push
xor
sub
idiv
pushf
fdivr
mov
movs
in
je
jg
dec
sub
cdq
push
das
push
xor
adc
gs
lahf
std
scas
not
jae
stc
mov
jne
jp
pop
sbb
inc
idiv
push
sbb
mov
popf
out
mov
lds
xlat
cmp
push
push
xor
mov
jbe
sbb
mov
xchg
ficomp
mov
jae
inc
std
mov
pop
stc
mov
in
or
stos
cdq
movs
xlat
mov
addr16
jecxz
sbb
addr16
not
push
pop
sub
rcl
dec
sub
xor
loope
or
test
addr16
or
mov
cdq
push
pop
pop
xor
into
xchg
hlt
xchg
fimul
das
dec
ds
sbb
push
mov
and
pop
int3
test
test
xchg
stos
(bad)
call
adc
jmp
mov
xor
add
test
xchg
xchg
mov
push
aaa
pusha
ficom
adc
jno
(bad)
jb
ja
out
adc
sbb
(bad)
scas
sar
imul
xor
add
inc
xlat
ja
jne
xchg
dec
aad
jecxz
jnp
mov
sahf
inc
or
nop
nop
std
lahf
movs
cdq
xchg
ret
mov
pop
sbb
es
xor
and
mov
cmps
sar
fsub
leave
jnp
outs
cmp
sbb
cmp
sbb
dec
or
les
jbe
dec
xchg
movs
loope
(bad)
jge
cwde
sti
mov
imul
sub
div
push
and
xor
and
and
inc
cvttps2pi
pushf
fstp
leave
add
ret
cdq
jg
outs
cmp
int
aad
iret
xchg
cmc
xchg
cmps
dec
loope
and
pushf
out
lods
xchg
fwait
leave
xchg
push
clc
imul
lock
aam
xor
js
arpl
lods
xchg
sub
add
ins
mov
lods
xlat
test
sub
push
inc
test
sahf
fstp
mov
jno
jne
pop
xor
mov
call
mov
addr16
aam
pop
jnp
pop
add
imul
lds
call
imul
pop
lds
jns
mov
pop
push
adc
sbb
inc
jge
adc
mov
mov
enter
cmp
sbb
sub
stos
in
cmc
or
and
and
std
xchg
mul
dec
xchg
loopne
cmp
jg
sbb
fimul
sbb
pop
cli
mov
pushf
in
and
dec
fistp
data16
loope
push
dec
adc
pop
test
push
fild
and
mov
cmp
ret
js
ins
cmc
mov
aas
jno
mov
inc
add
jae
push
(bad)
out
mov
mov
es
adc
ds
out
rcr
lods
int
ss
add
cmc
mov
lahf
ret
sub
push
outs
aaa
jp
jle
test
or
mov
mov
lea
and
add
jb
pop
push
push
int3
test
pushf
ret
je
inc
ret
movs
sbb
cmp
sub
mov
pushf
ss
and
pop
adc
or
retf
mov
stos
(bad)
pushf
leave
jg
push
clc
mov
mov
or
sbb
jno
clc
mov
cwde
push
fistp
je
cmp
and
or
adc
xchg
mov
add
jmp
rcr
or
fs
sub
outs
or
pop
pop
cmp
fcomp
lahf
shl
repnz
adc
inc
loope
mov
fs
jns
pop
add
into
jo
dec
sbb
jo
mov
add
dec
arpl
pop
sbb
in
xchg
(bad)
aaa
jo
pop
cmp
inc
adc
mov
sub
adc
add
sbb
xchg
rcl
or
mov
xchg
(bad)
lahf
outs
sub
push
test
test
sahf
aad
dec
sbb
pop
test
cdq
leave
push
xor
sub
xor
inc
adc
xchg
mov
out
retf
sahf
jnp
ins
and
int
cld
scas
repnz
ins
or
sub
add
je
repz
aam
sbb
ins
pop
test
mov
sbb
ins
and
inc
push
pop
cmp
nop
leave
jmp
cmps
loopne
hlt
pop
fs
movs
in
mov
test
movs
(bad)
xchg
lds
call
fwait
loop
mov
or
imul
ds
gs
or
(bad)
ins
sbb
inc
sti
enter
mov
cmp
push
adc
inc
adc
mov
js
dec
cmp
jo
push
hlt
and
(bad)
mov
ss
inc
mov
cmps
test
mov
xchg
lods
cli
or
sub
pop
mov
mov
movs
jecxz
xchg
sahf
fiadd
icebp
mov
xchg
clc
mov
xchg
inc
mov
clc
mov
test
imul
cli
mov
les
jp
adc
stc
test
xchg
fiadd
ins
ficom
jne
dec
inc
xor
dec
(bad)
mov
scas
in
test
imul
inc
loop
fisubr
xchg
add
dec
cmps
iret
pushf
fld
cld
mov
cli
mov
imul
repnz
mov
pop
les
pop
sbb
scas
mov
dec
sbb
add
fisub
and
enter
pusha
in
and
inc
mov
icebp
mov
iret
xchg
fild
cmps
loopne
mov
or
mov
push
or
pop
add
ficom
and
mov
sbb
and
jno
loope
into
test
imul
ret
cmps
aad
enter
sbb
cs
mov
les
cmps
int3
(bad)
(bad)
int3
cwde
dec
or
ins
or
dec
rcr
pop
(bad)
pop
jg
pop
mov
call
adc
jns
and
retf
xchg
xchg
fist
dec
adc
xchg
xor
and
pop
mov
pop
loope
pop
xor
ss
mov
das
push
in
mov
pushf
scas
mov
test
and
jle
jno
and
hlt
test
cmps
retf
mov
call
(bad)
jno
push
loopne
lods
sti
cmp
xor
mov
mov
call
add
and
stc
dec
in
retf
inc
xor
outs
or
test
mov
jle
push
sbb
std
cld
mov
fwait
movs
cmps
ja
arpl
pop
sbb
cli
xchg
out
mul
arpl
aaa
je
push
and
or
inc
das
pop
sbb
add
jb
es
loope
in
fistp
es
sub
cmp
push
adc
es
stos
lock
test
(bad)
pushf
(bad)
sahf
mov
scas
repz
push
les
push
jge
into
jae
jb
jo
jb
inc
sbb
xor
outs
or
inc
and
push
add
or
mov
dec
aas
aas
dec
fild
inc
mov
jb
int3
xchg
(bad)
xchg
retf
sub
mov
lods
in
push
inc
movs
push
add
sti
out
mov
call
es
xchg
sti
scas
into
adc
sar
sub
jo
jae
xlat
dec
pop
scas
cmps
sub
jbe
or
leave
mov
dec
jns
inc
pop
cmp
call
shl
fdiv
cmp
dec
adc
into
mov
jne
ins
ror
fnstcw
cmp
icebp
sub
push
jmp
xchg
pop
pop
dec
fist
mov
jb
shl
movs
inc
cmps
fsubr
inc
push
loopne
repnz
data16
(bad)
xlat
int
mov
and
xchg
push
sar
into
mov
test
(bad)
hlt
stc
inc
sbb
shl
repz
pop
loope
push
sahf
les
sub
dec
xor
xchg
sub
fs
add
push
lea
imul
inc
cmp
daa
sbb
repnz
add
push
shl
stos
outs
je
inc
test
or
jns
jno
and
mov
and
cld
mov
jecxz
add
bound
fs
xchg
pop
push
lds
fld
or
mov
cmp
and
xchg
cmps
cmp
fild
mov
jl
xchg
xchg
ret
mov
jnp
retf
jg
jb
sub
arpl
retf
or
cmp
rcr
cwde
and
mov
sar
test
dec
mov
shl
pop
je
mov
sti
mov
test
out
test
popa
leave
addr16
push
clc
add
js
mov
repnz
pop
loopne
jp
fiadd
ret
test
lods
push
sub
cmp
cld
sub
jmp
repz
ja
pop
mov
cmc
and
pop
jg
cmps
mov
mov
sub
add
pop
lea
mov
dec
add
not
in
stc
loopne
dec
in
mov
mov
xor
sub
mov
jp
fbld
jnp
jp
xchg
jle
test
test
retf
fidiv
jmp
(bad)
out
push
jl
mov
cwde
mov
ret
inc
aam
cmp
cmp
mov
pop
icebp
sbb
or
loopne
or
jp
loope
inc
loopne
adc
aam
and
repnz
dec
or
fwait
ret
and
xchg
adc
into
cld
xchg
xor
pop
jns
push
mov
xchg
push
icebp
(bad)
stc
add
popa
dec
push
dec
mov
jmp
dec
and
hlt
not
and
call
xor
rol
xchg
xchg
out
jp
mov
fild
cmps
fcos
loope
add
jb
call
jmp
pushf
sbb
dec
adc
adc
jmp
lock
push
arpl
push
test
cmp
jecxz
xor
rol
xor
enter
sahf
ja
daa
xor
mov
or
les
int3
sar
push
xchg
ss
jecxz
in
aaa
ds
dec
xchg
sub
adc
jnp
es
adc
repnz
xchg
mov
shl
mov
add
mov
rcr
imul
mov
ds
(bad)
iret
cmp
push
int3
test
or
mul
out
sub
dec
fsubr
sub
jo
aas
cmps
mov
les
dec
cmp
fsub
fs
ja
ins
nop
movs
add
sub
es
std
adc
jl
adc
pop
fistp
enter
fcomp
and
fidiv
in
mov
(bad)
ins
push
xchg
adc
clc
pop
push
mov
cdq
mov
mov
sub
pusha
std
scas
aam
or
idiv
mov
ss
in
cmc
movlps
mov
repnz
cmp
add
xchg
fst
scas
mov
lods
xor
movs
sub
dec
hlt
push
cmps
mov
cmp
sbb
add
mov
xor
jne
ds
test
and
and
repnz
xchg
das
fsub
or
outs
out
std
(bad)
sub
push
cmp
jmp
inc
aam
jg
movs
xchg
inc
jecxz
js
xchg
push
xor
call
jno
sti
push
fsub
outs
sub
mov
iret
jle
(bad)
adc
sub
imul
enter
adc
icebp
or
mov
jmp
sti
aad
cmp
stc
test
sar
mov
dec
sbb
mov
dec
imul
imul
aas
lods
and
stos
ret
pop
movs
js
sbb
sub
les
sub
cmp
shl
ins
pop
daa
or
mov
repz
jecxz
fdiv
lds
fistp
pushf
scas
cmps
sti
js
push
mov
(bad)
mov
pop
or
enter
jb
xor
mov
ins
mov
jl
lds
jmp
movs
push
(bad)
xor
int3
(bad)
dec
pop
lock
int
cmc
fwait
sbb
pop
test
jp
ret
imul
inc
adc
sub
push
mov
mov
mov
xchg
and
jg
and
adc
mov
sub
inc
sub
pop
shl
inc
ds
int
les
add
push
fwait
(bad)
(bad)
xchg
pop
daa
jge
fcmovb
or
lock
jge
adc
int
aas
retf
push
add
enter
cmp
fist
aad
popa
in
pop
cld
xor
out
mov
cli
and
adc
hlt
jb
clc
pop
dec
movs
dec
jo
and
outs
fild
sbb
dec
fcmovne
dec
aaa
mov
not
xchg
mov
or
jb
dec
into
shl
sbb
dec
ja
ficomp
mov
sti
test
xor
sub
test
push
cld
add
push
test
not
cmp
fcom
sub
pop
cmp
add
sub
fmul
mov
add
fiadd
and
xchg
add
xchg
ret
(bad)
ja
mov
mov
pop
sti
inc
int
int
cmp
push
icebp
adc
js
pop
in
sub
dec
adc
and
lock
pop
ds
push
adc
pusha
shl
inc
ja
pop
pop
rcl
push
sub
lods
mov
adc
jmp
movs
xor
test
shr
hlt
addr16
push
mov
mov
and
sar
rol
cmp
jmp
(bad)
jnp
(bad)
cmp
adc
push
jecxz
mov
sbb
cmp
xor
mov
dec
js
mov
lds
xchg
xchg
jne
jmp
or
push
mov
(bad)
xor
es
(bad)
cdq
cmp
shr
sub
cs
lods
lods
repz
ret
icebp
in
dec
ror
inc
shl
and
rcr
stc
push
int3
cld
cdq
ins
lods
sub
cmp
fistp
xlat
adc
push
xor
inc
mov
sbb
xor
pop
push
int
pop
pop
add
lds
dec
xor
in
jbe
jae
dec
push
xchg
(bad)
in
cmp
scas
pushf
test
mov
mov
xchg
sbb
jae
mov
pop
(bad)
ins
sahf
push
cmps
dec
push
pop
and
and
pop
mov
sbb
jnp
inc
dec
addr16
xchg
xchg
xor
movs
imul
scas
arpl
dec
rcl
out
pop
add
test
pop
xchg
popf
xor
xor
xchg
adc
call
cmps
push
xchg
pop
sbb
jne
shl
mov
cmp
leave
adc
cmps
shl
sbb
mov
mov
addr16
call
lahf
pop
mov
sbb
aad
adc
xchg
adc
movs
pop
ins
call
in
movs
(bad)
int3
jne
adc
cmp
aas
popa
jmp
aad
sbb
cmp
icebp
in
mov
ror
movs
aas
sbb
mov
jae
bound
ret
jo
addr16
(bad)
pusha
cmps
or
std
outs
popa
ror
mov
loopne
shl
mov
stos
clc
adc
aaa
das
xchg
nop
push
pop
sbb
es
loopne
jecxz
imul
add
mov
loopne
add
stos
push
outs
sbb
push
je
xchg
mov
sub
inc
fst
xor
stos
out
hlt
rcr
mov
or
add
loope
cli
and
mov
ds
dec
shl
inc
and
dec
cmp
daa
xor
shl
add
mov
lea
xor
jb
dec
(bad)
sub
add
xor
pop
lods
je
(bad)
sahf
sub
lods
loopne
rcr
(bad)
jp
bound
adc
clc
push
jg
movs
xchg
stos
rcr
adc
leave
sbb
in
sub
test
jae
jmp
ret
punpckldq
and
push
push
test
pop
movs
mov
xchg
ins
lds
(bad)
pop
addr16
push
mul
pop
jb
lds
pop
sbb
lds
jecxz
jl
daa
xor
cld
mov
dec
pop
push
scas
stos
mov
xchg
cmp
sub
or
pop
inc
pop
sbb
push
(bad)
and
cdq
mov
dec
mov
add
push
pop
rol
(bad)
out
sub
or
lea
or
jbe
jns
dec
inc
sub
add
(bad)
sub
imul
les
mov
adc
arpl
out
cmp
cmp
push
jno
fmul
out
imul
sub
jle
aad
fiadd
mov
mov
add
int
lea
repz
sbb
pop
pop
lea
adc
jno
sahf
mov
mov
fs
ret
mov
push
in
cmp
aaa
mov
mov
mul
ret
(bad)
jno
cmp
push
test
icebp
popa
nop
dec
cli
sahf
in
fsubp
fsubr
jno
push
add
popa
cwde
pop
dec
sbb
push
jg
cmp
adc
pop
sub
movs
pop
dec
jmp
push
sub
xor
sbb
pop
aad
pop
movs
pop
adc
fimul
cmp
fs
mov
btr
adc
xchg
inc
call
cs
xor
jle
inc
dec
call
jg
mov
cmp
push
(bad)
mov
pop
aam
or
mov
mov
pushw
dec
out
add
mov
push
lahf
imul
xchg
in
(bad)
rol
dec
outs
xor
jno
jmp
push
cmp
push
repz
mov
bound
aad
mov
or
cmovae
mov
scas
lock
inc
fisubr
inc
sbb
in
xchg
ss
loopne
xchg
imul
mov
mov
int
lds
xchg
div
mov
sbb
dec
lods
es
lods
test
scas
es
sbb
push
inc
(bad)
aad
fistp
mov
xor
push
cmp
sahf
sbb
(bad)
fldl2t
(bad)
gs
je
push
test
jnp
xor
sar
xor
pop
push
ret
mov
xor
mov
xchg
int
repz
cmp
push
gs
cmp
jb
mov
lock
xchg
cld
pusha
shr
sub
out
call
mov
les
push
mov
fst
aad
jb
ror
in
mov
mov
test
pop
jecxz
sub
push
aaa
nop
aas
sub
jbe
repnz
sub
xchg
test
stos
or
je
or
sub
jle
jl
hlt
push
mov
inc
loopne
xchg
js
sti
data16
loope
xor
xor
leave
rol
add
lock
push
jl
push
lods
addr16
ja
inc
test
fstp
or
and
out
add
push
call
loopne
loope
out
mov
sar
sbb
mov
imul
xchg
fst
cmp
std
sub
imul
push
cmovl
push
pusha
mov
int3
rcr
movs
out
fsubr
sub
hlt
and
mov
lock
je
imul
test
sub
dec
or
push
shr
je
xor
sar
out
movs
test
pop
jp
call
popfw
push
pop
nop
ror
outs
pop
xor
add
pop
stos
inc
stc
imul
(bad)
mov
gs
mov
mov
shl
jecxz
and
cmp
mov
push
movs
cmp
sub
test
pop
(bad)
adc
push
daa
mov
fisttp
cmp
sub
mov
mov
loopne
nop
loop
(bad)
cld
jmp
in
ror
je
push
mov
clc
cld
jmp
(bad)
jmp
sbb
or
in
aad
std
clc
push
mov
call
dec
push
mov
cwde
movs
dec
inc
xchg
mov
pop
xor
cmp
mov
xchg
push
scas
ror
cmps
sahf
sbb
sub
jl
(bad)
jmp
xchg
or
daa
dec
adc
outs
pop
and
leave
ds
lods
add
push
jle
lods
push
leave
push
dec
jle
dec
and
inc
fldcw
jp
mov
sbb
mov
cmp
push
in
fnstcw
xor
in
daa
stc
push
mov
js
(bad)
(bad)
and
jmp
leave
les
lds
and
or
xor
std
sub
enter
cmps
sbb
sub
xor
mov
icebp
mov
hlt
xor
xor
cwde
sub
int
jge
or
(bad)
(bad)
adc
xchg
add
sub
cmp
pop
js
outs
mov
test
push
jl
iret
movs
stc
out
dec
push
es
ret
call
test
dec
dec
ret
imul
push
mov
mov
arpl
mov
mov
push
in
fistp
out
jo
jecxz
add
in
movs
sub
loope
fwait
push
jge
pushf
add
dec
daa
imul
or
dec
call
adc
sub
clc
add
push
repnz
dec
in
js
jbe
sti
in
repz
retf
into
dec
push
jo
stos
(bad)
jg
jl
cmp
lods
ret
adc
mov
cmp
out
adc
mov
out
pop
jmp
jnp
fnsave
pop
mov
mov
cmp
mov
aam
add
loop
hlt
pop
cld
or
test
mov
cmp
push
in
ins
jle
adc
mov
ins
xchg
push
push
movaps
popf
(bad)
mov
sar
jae
or
or
pop
cmp
add
mov
dec
aaa
xchg
jne
test
mov
das
mov
add
xlat
mov
xor
mul
pusha
ret
cmp
(bad)
movs
push
ficom
mov
xchg
shl
push
pop
sti
pop
inc
mov
xchg
inc
imul
pop
inc
dec
aad
xchg
es
push
push
mov
in
adc
jmp
dec
ret
outs
sbb
into
test
cmp
ret
push
and
xchg
leave
cli
in
scas
xchg
inc
in
sar
xor
cmp
jnp
int3
(bad)
mov
daa
cmps
ficom
(bad)
inc
fild
pop
inc
and
xor
mov
xchg
add
sbb
cli
xchg
adc
jge
mov
and
xchg
sti
sub
adc
mov
cmp
add
lods
sbb
out
fcomp
sar
(bad)
in
popa
mov
stos
push
scas
scas
(bad)
int3
loop
jno
pop
out
aas
movs
lods
fsubr
add
call
repz
pushf
bound
pop
gs
bound
jmp
jae
ja
scas
push
sub
icebp
mov
leave
xchg
xor
frstor
mov
mov
cmp
retf
outs
into
dec
cmp
clc
gs
stos
fnsave
cmps
push
sub
mov
jl
jb
stc
pop
ret
cmp
aas
cli
sub
adc
xchg
pop
jl
jg
dec
push
jno
int3
mov
xchg
ins
add
ss
xchg
add
fist
sbb
mov
pop
xchg
into
stos
mov
push
dec
mov
xchg
loop
xchg
inc
mov
mov
and
icebp
test
pusha
push
les
ins
cmp
mov
into
loop
repnz
popf
js
sbb
ins
jecxz
out
xchg
jmp
mov
mov
push
and
in
(bad)
mov
dec
sub
in
test
sub
jle
jp
les
ror
xor
or
dec
outs
and
jge
in
call
leave
je
loop
repnz
pop
pop
and
add
stc
inc
ret
cmp
inc
into
adc
out
push
enter
push
adc
or
les
add
(bad)
nop
xor
cwde
(bad)
sti
js
imul
lahf
ins
fidiv
inc
iret
loop
jno
xor
(bad)
jle
sub
sub
lea
inc
mov
int3
cmp
pop
test
into
fldcw
and
stos
movs
int3
test
xchg
or
pop
bound
outs
sbb
arpl
push
test
sub
aad
ja
mov
xchg
imul
mov
and
lods
mov
adc
cmp
pop
xchg
or
mov
pop
fistp
call
push
imul
push
loopne
ss
inc
jecxz
icebp
int
sub
into
pop
lods
pop
jge
pop
rcl
xor
inc
mov
jmp
cmps
(bad)
push
dec
xor
cmp
mov
leave
inc
lea
(bad)
out
add
jg
dec
test
cmps
bound
add
xchg
movs
leave
sub
aam
cdq
push
xchg
sahf
lds
mov
xor
mov
and
leave
mov
lds
xchg
cmp
sbb
push
aam
adc
ror
push
mov
ins
sub
fisttp
popf
loopne
jne
sbb
mov
mov
push
lock
sbb
cdq
das
xchg
(bad)
in
push
clc
dec
rcl
fldcw
lds
bound
inc
cdq
stc
jecxz
test
xchg
and
mov
aad
add
(bad)
mov
mov
jbe
dec
cmp
pop
sbb
and
add
sub
jmp
pop
inc
ins
or
retf
lods
ret
jb
lods
jo
mov
and
adc
ins
scas
mov
loope
popa
pop
scas
mov
push
fsubrp
inc
or
jl
xor
cmp
push
xchg
shr
mov
and
pop
push
mov
jno
pop
hlt
adc
mov
inc
sub
push
pop
call
aam
or
mov
mul
sbb
cmps
push
outs
sub
imul
adc
inc
cmp
jle
mov
std
fbstp
nop
fcomi
jl
test
es
cmp
lods
xchg
jo
add
in
imul
adc
fadd
cmps
ja
cmps
inc
adc
sbb
mov
aas
inc
xchg
jmp
jmp
mov
add
mov
clc
dec
xor
dec
push
inc
fdiv
mov
inc
pusha
(bad)
xchg
ins
mov
and
and
cmps
cs
inc
and
mov
xchg
prefetch
or
icebp
jg
xor
call
sub
rcr
sbb
sahf
pop
addr16
je
jp
rcl
imul
sahf
dec
cdq
psrlq
cmp
jnp
xor
mov
xor
xor
mov
and
out
stos
or
(bad)
dec
inc
jmp
fnstsw
push
and
cmps
jbe
cmp
xor
add
movs
add
xchg
push
add
jle
dec
shl
leave
movs
cwde
cmp
mov
jp
jmp
pop
sub
push
cdq
ret
inc
pusha
and
cli
enter
mov
jle
and
(bad)
push
jbe
push
ror
pusha
inc
pop
das
sbb
gs
xchg
or
pop
nop
or
std
xchg
in
xchg
sbb
or
adc
es
pop
cmp
enter
outs
sub
aas
cdq
fld
xchg
idiv
fldenv
fst
xlat
mov
xor
aas
jne
loope
test
pop
push
adc
adc
(bad)
jns
pop
ja
xlat
call
xor
dec
sbb
rol
or
add
xor
retf
fwait
push
aas
jg
or
or
xchg
pop
mov
xchg
movs
(bad)
jge
ins
cs
stc
mov
fcom
shl
idiv
fiadd
mov
xchg
cmc
fs
push
dec
cld
out
movs
lods
push
inc
add
(bad)
adc
jo
ss
push
popa
xor
push
cmp
shl
jae
sti
test
dec
cwde
(bad)
cmps
(bad)
or
out
test
sbb
(bad)
push
ja
jb
div
push
shl
(bad)
ficom
test
inc
add
pop
and
sbb
cli
icebp
mov
pop
dec
push
add
shr
sub
sbb
retf
cmp
xor
(bad)
fidivr
int
xchg
cli
cmp
push
dec
mov
mov
mov
cmp
add
leave
xlat
xchg
shr
push
mov
int3
cli
mov
es
push
inc
xor
cli
lods
out
push
cwde
repz
cmp
pop
sbb
push
mov
jo
(bad)
fnsave
dec
mov
fiadd
inc
mov
push
or
sbb
ss
fnstcw
enter
push
std
mov
cmp
repnz
and
std
enter
mov
and
jg
add
add
cmp
cmc
jo
dec
sbb
mov
cmp
xor
mov
xchg
cmp
outs
bound
arpl
fwait
ror
add
push
pop
pop
data16
jge
mov
fistp
xchg
xor
push
popf
in
jecxz
cwde
in
lods
pop
pop
push
ins
call
repnz
lds
inc
ss
and
xor
push
pop
add
cmp
popf
movs
mov
cld
xchg
test
aad
xchg
xor
jp
pop
adc
pop
add
fcmovu
mov
(bad)
push
pushf
les
push
or
jmp
mov
cmps
pusha
jge
or
std
mov
cmp
(bad)
in
mov
jle
jb
or
retf
mov
jg
pop
in
add
push
fcomip
icebp
pushf
lods
js
call
sub
(bad)
mov
sbb
xor
out
add
sti
or
jecxz
mov
div
lock
push
dec
or
movs
in
push
es
or
adc
sahf
rol
test
dec
jle
gs
mov
scas
pop
sub
adc
mov
mov
jbe
add
(bad)
call
fadd
mov
imul
in
cmps
sbb
sub
lods
lds
pop
inc
push
jnp
mov
cwde
int3
mov
adc
es
bound
inc
ss
mov
inc
mov
push
sbb
sahf
mov
in
dec
ins
and
mov
retf
inc
and
repz
les
jbe
xor
fisubr
and
sti
mov
mov
inc
jmp
cmc
mov
xchg
jecxz
xchg
cmp
push
aaa
or
ficomp
xchg
pop
fst
mov
inc
nop
loopne
sahf
push
gs
xchg
stc
dec
mov
inc
enter
mov
repz
div
loope
fimul
repz
mov
sbb
pop
test
mov
lea
cmp
aas
jp
(bad)
scas
fild
lea
jae
jecxz
mov
and
leave
add
and
ret
xchg
shr
mov
es
pop
jl
sbb
push
push
inc
mov
js
cmp
std
xor
mov
xor
mov
fld
fisttp
lahf
pop
pop
les
push
xor
mov
gs
add
xchg
stc
popf
inc
imul
call
loope
outs
pushf
add
or
jmp
fild
ja
dec
mov
jle
sub
mov
repnz
addr16
mov
lods
imul
xlat
adc
in
inc
sub
fidiv
sbb
hlt
mov
out
mov
aaa
add
push
(bad)
mov
xor
jge
repz
loop
sti
mov
push
adc
fisubr
das
stc
mov
lods
jge
sub
fisttp
or
and
jle
push
ss
test
cmp
mov
mov
xchg
gs
cmp
add
retf
fsub
mov
popf
dec
ss
icebp
mov
mov
hlt
movs
out
popa
pop
sub
lods
rol
sahf
rol
mov
adc
mov
(bad)
shl
cld
mov
mov
dec
sub
shl
mov
push
daa
in
div
or
hlt
std
mov
xor
pop
mov
jge
loop
xchg
test
push
cmp
and
iret
mov
push
je
pop
inc
add
shr
outs
das
inc
pop
iret
fisub
pop
cmps
add
lods
(bad)
sub
in
mov
mov
jae
out
push
mov
xchg
enter
dec
nop
(bad)
mov
retf
fild
push
daa
ins
and
(bad)
xchg
aad
fisub
add
aas
jl
xor
xchg
fmul
mov
adc
ficomp
ins
and
out
(bad)
icebp
fild
inc
push
es
shl
rcl
push
mov
fnsave
jno
push
or
jnp
lar
jecxz
cmp
or
int
xchg
pop
ja
push
fbld
lahf
nop
add
es
aam
sbb
inc
add
adc
rcr
lock
jne
adc
mov
js
out
test
mov
mov
mov
addr16
outs
sti
push
mov
xchg
pop
xchg
enter
sub
add
fcomp
int3
push
stos
out
sbb
imul
test
fmul
shl
shr
lods
out
ret
add
cmp
or
repz
jae
lds
sub
sbb
jb
aas
jae
xor
xor
mov
push
sbb
std
cmps
leave
nop
cmp
and
bound
jg
test
dec
or
pcmpgtb
fld
popa
and
mov
pop
pop
inc
xor
ret
jge
ss
retf
or
fcomp
out
int
lea
sub
push
push
ret
mov
and
cmps
nop
dec
and
sar
fild
pop
sahf
out
scas
mov
stos
cmp
mov
sub
stos
push
push
stc
adc
pushf
pusha
ins
pop
sbb
adc
sbb
in
out
fsubr
jl
jmp
mov
dec
jb
xor
xor
push
adc
shl
push
lock
add
outs
inc
xor
push
dec
sub
fs
cmovg
lods
ficomp
(bad)
inc
or
cmp
push
mov
add
cs
stos
gs
sbb
mov
pop
cmp
repz
lock
and
sub
sbb
or
pop
push
loopne
test
pop
adc
sbb
daa
(bad)
mov
push
xchg
retf
pop
cmp
jne
jo
jbe
push
(bad)
xor
jecxz
inc
jmp
out
pushf
cmp
leave
jns
pop
add
and
cmp
cli
lea
lea
gs
or
fcomi
xchg
stos
jb
es
xchg
pop
push
pop
pop
das
jmp
ficomp
ret
test
cmp
cmp
sar
cwde
div
pop
mov
cmp
push
rol
daa
inc
paddq
js
cli
fnsave
dec
(bad)
lock
sub
ins
dec
adc
sbb
mov
je
out
test
dec
dec
pop
adc
xchg
les
loop
cmps
in
xor
loopne
rol
fs
aas
loope
mov
add
ins
sub
xor
data16
retf
stos
inc
pop
sub
push
inc
and
frstor
xor
mov
mov
nop
push
and
ret
fidivr
inc
mov
push
and
mov
and
test
mov
inc
cmps
cmp
aam
mov
call
inc
inc
cmovg
ror
lea
cmp
mul
inc
cmp
enter
lods
jb
sub
pop
cs
addr16
push
dec
xchg
push
pop
xor
dec
sub
es
rol
cmp
dec
sar
xchg
mov
xchg
neg
jle
sbb
jno
xor
cli
movs
(bad)
cli
test
mov
inc
push
push
popf
out
in
pusha
adc
jno
ins
adc
mov
(bad)
lods
push
pop
ds
push
ds
ins
pop
sub
push
dec
pop
or
adc
in
xlat
test
clc
(bad)
scas
call
jl
cli
popf
aad
aad
rcr
jo
push
popf
ret
mov
mov
inc
mov
pop
pop
adc
nop
(bad)
jnp
inc
cmp
push
daa
sub
sbb
push
leave
mov
loop
mov
jbe
xor
out
fistp
hlt
lock
mov
dec
jb
jns
test
ins
lock
test
mov
repz
mov
cmps
daa
jno
pop
movs
(bad)
jl
sub
jecxz
pop
sti
in
out
lods
mov
pop
xchg
aad
xchg
imul
fcom
xlat
cmp
dec
or
pop
sub
jno
jmp
jecxz
xchg
test
adc
dec
cmp
hlt
mov
cli
pop
inc
and
add
pop
pop
jg
sub
mov
mov
sti
out
movs
sbb
sbb
mov
bound
adc
mov
test
add
push
xor
mov
ja
fnstsw
or
in
mov
js
inc
jae
pop
fs
(bad)
fstp
push
cs
add
or
neg
stc
jno
dec
or
and
mov
push
or
mov
js
push
enter
popa
inc
push
sub
cmp
sbb
mov
addr16
addr16
sub
shl
mov
aaa
adc
stos
xor
dec
and
inc
jo
in
xchg
icebp
push
jg
add
leave
stos
call
fscale
retf
nop
pop
cwde
cli
xor
mov
and
ret
call
xchg
rcl
mov
sahf
jge
jbe
std
mov
sbb
jl
cmp
int3
fdiv
dec
cmp
pop
pop
movs
pop
dec
sbb
iret
sub
sub
cli
shl
dec
test
ret
popf
sar
jmp
jp
add
xor
sar
cld
cmp
int3
scas
shr
mov
hlt
add
add
mov
xor
test
cmp
lods
retf
pop
mov
mov
rcl
scas
jne
push
ficomp
aam
aad
adc
test
outs
fcom
jne
shr
rcl
mov
dec
clc
add
call
js
and
push
push
fsubp
sti
movs
push
cmp
push
xor
int3
test
imul
cdq
out
in
arpl
xchg
add
aam
clc
jecxz
mov
mov
in
ret
mov
pop
mov
push
pop
enter
punpckhwd
popa
dec
and
jmp
and
adc
ja
movs
adc
call
fistp
jns
jmp
dec
fsubr
ret
push
and
cmp
adc
jecxz
mov
push
movs
cmp
fimul
xchg
push
xlat
frstor
je
adc
in
std
fstp
mov
std
fldcw
jecxz
fwait
xlat
xor
enter
or
in
out
push
cmp
push
and
iret
mov
mov
or
mov
push
pop
imul
push
adc
rcl
popa
inc
das
arpl
fnsave
push
shr
adc
mov
ins
push
shl
or
adc
data16
cmps
sbb
sbb
mov
cmps
inc
dec
cmp
push
mov
cmp
imul
(bad)
mov
addr16
add
add
add
mov
stos
push
xor
mov
mov
pop
pop
aad
repnz
cwde
rcr
call
xchg
pop
popf
mov
outs
aaa
mov
loop
out
jmp
cmp
mov
test
and
mov
mov
loopne
rol
mov
push
sbb
cld
push
in
stos
int
aam
int
retf
push
pop
xor
(bad)
inc
lahf
cld
js
cmp
pop
mov
push
retf
cmp
sti
fwait
(bad)
sub
ds
std
movs
mov
aam
mov
leave
sti
mov
inc
test
inc
xlat
sbb
dec
push
xor
(bad)
lods
shl
mov
xchg
push
pushf
out
nop
inc
mov
fs
push
sub
add
loop
outs
or
pop
jl
jmp
inc
cmp
mov
rol
jne
jb
push
adc
jge
fwait
shl
mov
sbb
push
fs
mov
pushf
rol
sub
mov
retf
push
inc
and
(bad)
xchg
(bad)
retf
mov
pusha
add
in
xchg
rcl
ja
jp
xor
(bad)
cmc
mov
cwde
add
daa
dec
arpl
cdq
adc
xchg
or
ins
and
adc
retf
lods
mul
xor
iret
sbb
repz
or
rcl
sub
test
fs
sbb
mov
xchg
dec
bound
xor
repnz
sub
adc
or
loopne
mov
rol
xor
pop
mov
sub
mov
shl
mov
dec
and
retf
xchg
ss
loope
inc
and
sbb
pop
(bad)
out
and
push
retf
mov
int
int3
sahf
pop
pop
xor
cmp
xchg
out
xchg
aad
es
imul
push
sub
enter
nop
fbstp
mov
jnp
loopne
xchg
fbld
mov
cmp
or
xchg
call
mov
pusha
test
push
addr16
fstp
push
xchg
xor
jmp
mov
xchg
dec
mov
push
sbb
(bad)
leave
xor
xchg
dec
mov
sahf
sahf
push
cmp
jo
xor
mov
mov
mov
cmp
das
arpl
sub
xchg
lds
cmps
les
fcmovb
cwde
fsubp
std
movs
into
out
push
in
push
push
neg
mov
sbb
(bad)
xchg
push
inc
add
add
iret
fcom
rcr
mov
test
inc
push
std
into
(bad)
fsub
scas
jecxz
dec
xor
mov
mov
mov
ins
push
mov
cmp
push
push
dec
mov
inc
and
dec
and
fild
pop
ja
or
jmp
jecxz
ja
cmp
in
mov
sub
test
stos
ins
xchg
sbb
ss
mov
add
xchg
add
inc
das
jl
icebp
fnstenv
in
jmp
sar
test
xchg
xchg
sbb
(bad)
fdivr
add
cld
mov
add
and
fisubr
cmp
out
lahf
(bad)
cmp
adc
add
cmc
mov
cdq
ror
xchg
aad
add
and
or
xor
test
aaa
inc
xor
ret
push
adc
or
mov
adc
dec
xchg
mov
mov
mov
popa
cmp
mov
xor
inc
xor
add
idiv
fs
stc
test
push
mov
lds
cmps
mov
lods
add
push
lods
fmul
inc
add
mov
push
jbe
dec
or
dec
and
pop
push
jge
pop
cmp
xor
mov
in
or
es
adc
mov
mov
pop
pop
pop
push
jae
push
adc
movs
out
pop
pop
sub
cmp
jecxz
mov
sbb
pop
inc
dec
sub
lahf
(bad)
lods
fsubr
kmovd
push
lds
xchg
fstp
xlat
loopne
fisttp
lods
fiadd
dec
add
clc
mov
inc
push
or
stc
mov
jae
cmp
mov
mov
bound
and
sbb
jmp
push
mov
sbb
lods
(bad)
ja
and
sbb
pop
sbb
loopne
fstp
fdivr
mov
jb
int
sub
fdivr
stc
mov
stc
push
mov
mov
mov
es
jo
inc
add
call
pop
push
jo
ins
push
scas
adc
cmp
mov
mov
and
aam
push
xor
cmp
(bad)
(bad)
out
inc
sbb
cld
loopne
mov
pop
inc
pop
add
jp
inc
or
lods
loopne
add
xor
dec
add
in
(bad)
hlt
fsub
js
sbb
mov
ins
sub
test
lea
ins
fcomp
pop
sbb
sub
push
add
out
sahf
fwait
pop
popa
and
lds
mov
lds
sub
cld
ret
scas
gs
out
pushf
pusha
jnp
xor
xchg
jmp
gs
not
jo
or
mov
fs
in
leave
lea
inc
add
test
pop
mov
aam
fcomp
xor
push
push
sbb
inc
xchg
or
push
pop
mov
jne
aam
nop
lds
xor
fidivr
add
in
mov
cmp
jno
cmp
repz
shr
nop
aad
inc
pop
sbb
or
retf
pop
es
std
sub
jno
addr16
lods
jmp
mov
test
add
cmp
out
stos
fidivr
cmp
sub
(bad)
stos
push
dec
pop
jmp
aam
retf
cmp
(bad)
movs
xchg
mov
aaa
jnp
hlt
sub
or
pop
cmp
in
retf
dec
mov
or
jge
cmp
sbb
out
pop
pop
push
std
in
aad
fistp
push
sahf
xor
cmp
push
sti
out
(bad)
mov
xchg
test
ins
and
(bad)
call
or
sbb
leave
stos
hlt
xchg
jl
hlt
shl
push
sub
jbe
mov
mov
adc
xchg
sbb
idiv
pop
pop
leave
mov
push
adc
mov
xchg
pop
sub
fcomp
lods
and
sbb
fdiv
icebp
in
mov
dec
(bad)
test
inc
mov
ja
hlt
repnz
add
ror
enter
pop
jne
ins
fld
mov
pop
dec
add
cmp
add
cli
mov
push
push
jbe
cli
sti
fwait
retf
or
sub
fwait
sbb
in
je
fs
cmps
icebp
xchg
dec
and
loope
mov
sub
jo
out
ret
add
daa
jl
loop
shl
(bad)
mov
push
lahf
(bad)
movd
push
gs
ret
ret
cmp
ja
or
mov
rcl
mov
sbb
lahf
loop
shl
jmp
pop
outs
cmp
stos
cmp
lock
mov
inc
jp
aaa
(bad)
cmp
aas
add
mov
fwait
pop
cmp
mov
je
jl
pop
sbb
pushf
les
repz
(bad)
mov
xchg
sbb
sbb
mov
lahf
stc
xchg
ffree
xchg
mov
daa
inc
add
add
adc
sbb
add
movs
mov
sbb
jbe
mov
push
xchg
dec
mov
ins
push
sar
dec
mov
push
test
jnp
xchg
fdivrp
icebp
adc
retf
push
adc
aaa
cli
dec
xor
test
dec
(bad)
movs
cmc
imul
je
and
push
jne
ret
inc
fwait
inc
aam
sahf
pop
imul
cwde
xor
int
fdivr
mov
cmps
jecxz
loop
cmc
mov
and
push
aam
aam
sub
in
jle
aaa
add
mov
sbb
ret
dec
rol
dec
int3
sub
mov
sub
fisubr
and
fs
push
clc
dec
sbb
ja
xchg
aam
in
push
xchg
imul
cmps
in
stc
inc
outs
xchg
int
test
jl
push
sahf
push
or
xor
mov
or
xor
iret
adc
jno
inc
and
sbb
mov
lods
push
fwait
xchg
sub
mov
cmp
pusha
push
cwde
les
jb
xchg
cld
sbb
sahf
xchg
lods
fbld
xchg
add
add
dec
pop
pop
mov
inc
or
int
ja
lock
cld
pop
jns
ja
push
xchg
mov
shl
jg
mov
mov
movs
adc
(bad)
cwde
xor
lds
shr
push
mov
inc
mov
cmp
mov
pop
mov
cmp
ror
jmp
inc
jae
loop
sbb
xchg
and
sahf
and
dec
adc
fimul
(bad)
mov
leave
pop
inc
xchg
(bad)
or
std
pop
mov
out
cli
pop
mov
je
jg
je
nop
jo
mov
imul
or
lea
adc
cld
into
mov
jmp
in
repnz
dec
aad
outs
add
bound
or
rol
mov
repnz
cmp
push
jmp
test
retf
inc
jmp
in
push
call
popf
dec
sub
dec
fsub
mov
jle
dec
jmp
dec
scas
into
fild
jp
xchg
mov
iret
lahf
xor
pop
out
mov
loop
popa
shr
or
je
in
mov
sub
xor
sahf
fnsave
sbb
sti
mov
shl
cld
inc
daa
and
aam
lods
jae
sub
cmp
daa
ss
cmp
shl
inc
call
xchg
push
jbe
mov
mov
das
stos
cli
les
jg
jns
or
test
scas
mov
imul
cwde
nop
dec
ret
xchg
dec
dec
loopne
mov
and
mov
or
leave
inc
sahf
mov
out
xlat
xchg
leave
dec
int3
add
lock
dec
mov
stos
lds
push
nop
data16
push
or
ror
into
push
cs
je
pop
push
xor
push
neg
in
or
aaa
out
je
scas
sub
sbb
push
popf
cmp
in
(bad)
loope
scas
js
das
sbb
shl
shl
mov
mov
add
mov
outs
repz
xchg
popf
movs
loop
ja
outs
sbb
push
sbb
je
mov
inc
lds
inc
call
jne
xor
add
dec
dec
add
ja
imul
mov
(bad)
cmp
jl
add
(bad)
loope
xchg
inc
jae
mov
test
adc
jne
cs
cmp
cwde
jo
shl
leave
scas
call
pop
jp
add
mov
lods
adc
adc
adc
shl
dec
adc
loop
fldcw
cmp
mov
pop
rcr
retf
out
jb
cmp
sbb
jns
(bad)
rcl
and
mov
stos
push
push
sub
xor
cs
pop
out
jae
push
shr
cs
mov
jae
lods
pushf
mov
dec
test
(bad)
or
sahf
mov
enter
not
cmp
cmp
sbb
(bad)
mov
mov
mov
pop
mov
cwde
dec
es
pusha
mov
push
mov
dec
push
outs
push
jmp
jbe
ret
imul
ret
dec
add
je
stc
sahf
jecxz
jo
lahf
enter
mov
sub
inc
or
mov
xor
sbb
mov
add
add
in
lods
mov
scas
test
sub
je
sub
movs
jmp
imul
cmp
push
pop
add
sub
fist
ins
push
mov
aaa
dec
mov
movs
in
out
inc
dec
mov
call
mov
(bad)
xor
dec
xchg
push
or
mov
(bad)
pop
clc
and
das
adc
add
dec
or
sti
call
sbb
and
add
sub
test
lods
dec
xor
imul
push
call
mov
xchg
mul
test
test
mov
lahf
or
mov
or
retf
das
xor
sbb
call
jae
in
daa
push
mov
dec
(bad)
jge
mov
mov
call
push
xchg
xchg
inc
sbb
mov
pop
adc
pop
pop
sbb
ins
cmp
jbe
and
xchg
call
pop
and
mov
aam
xor
xchg
in
lahf
sbb
(bad)
scas
fnstsw
sahf
repz
jg
ja
aas
ja
and
repnz
in
stos
mov
dec
xchg
in
sub
mov
sub
jecxz
dec
aaa
add
test
test
pop
dec
mov
cmp
pop
mov
or
pop
add
mov
fmul
sub
ret
jl
xchg
adc
mov
inc
imul
push
or
stos
(bad)
cmp
xor
sub
les
dec
fistp
xchg
inc
mov
std
or
jae
add
out
popa
in
scas
xchg
sbb
xchg
adc
call
(bad)
movs
add
test
rcr
fld
and
(bad)
mov
lahf
loopne
not
dec
ror
fs
cwde
dec
mov
jae
cs
dec
dec
mov
jbe
outs
pop
aaa
xchg
or
cmp
sti
pop
mov
cmp
dec
ret
popf
mov
adc
dec
add
out
dec
retf
mov
mov
outs
inc
push
xchg
xor
leave
adc
xlat
loopne
aad
cmc
addr16
adc
pop
scas
rol
xchg
push
sub
(bad)
scas
mov
shl
into
clc
pop
and
xlat
jle
adc
mov
xor
push
ins
pushf
push
xchg
and
dec
cmp
ficom
dec
scas
add
lods
push
sahf
jo
pop
pop
inc
retf
cmp
rcl
fstp
sub
push
leave
cmps
mov
adc
dec
stc
cmp
(bad)
jno
cwde
adc
xchg
stos
call
cmps
mov
sti
stos
add
movs
ins
ins
jne
mov
mov
out
test
(bad)
cmp
sbb
and
scas
inc
mov
xor
jp
cmp
push
xchg
leave
repz
outs
dec
enter
mov
dec
sub
mov
xor
mov
jnp
mov
cdq
push
mov
test
xchg
rcr
dec
xor
dec
dec
adc
or
mov
jl
fsubrp
jg
pop
outs
pop
xchg
cmp
adc
push
ficomp
jbe
in
jmp
add
fstp
jge
xchg
jge
out
fld
pop
test
scas
bound
imul
stc
xchg
push
div
xor
cmp
ficom
jae
dec
jle
fdiv
jge
fdiv
sahf
mov
call
clc
sbb
jnp
inc
cmps
(bad)
call
pop
outs
test
test
xor
pop
adc
or
repnz
cmp
mov
jecxz
xchg
mov
jge
mov
test
sub
push
mov
sbb
scas
mov
xor
push
imul
data16
in
jbe
ret
ja
xchg
push
mov
jmp
dec
test
push
xor
mov
cmp
cwde
add
mov
daa
adc
xor
fdivrp
scas
aaa
push
aam
ja
xor
mov
mov
test
cmps
jl
fsubr
into
adc
xor
xlat
xor
jne
jb
push
mov
stos
xor
sub
add
hlt
stos
sbb
dec
mov
fcmovu
inc
mov
jp
in
jmp
push
jb
imul
push
xor
pop
xor
mov
pop
mov
cmp
mov
dec
inc
lds
dec
sub
sti
xchg
sbb
xchg
nop
sbb
dec
dec
push
jp
aaa
mov
pop
mov
pop
add
call
in
ja
(bad)
clc
cmps
push
ja
cs
pop
cmps
mov
push
out
scas
jmp
mov
(bad)
out
push
pushf
push
mov
xor
jl
sub
push
xchg
pop
(bad)
mov
clc
dec
and
adc
in
or
fnsetpm(287
fwait
jge
xlat
shl
cmp
not
(bad)
adc
sbb
hlt
cmc
xlat
les
aas
cmp
(bad)
inc
inc
inc
or
jg
sti
mov
popa
pop
rcr
sbb
in
mov
fs
pop
pushf
lods
pop
sbb
test
popf
add
push
arpl
(bad)
sub
(bad)
inc
mov
daa
adc
jge
mov
xor
sbb
js
mov
arpl
ror
imul
sub
cmc
or
add
xchg
push
jmp
jno
jl
scas
jge
ret
mov
mov
paddusw
mov
mov
popa
mov
in
inc
fiadd
pop
or
sub
pop
push
jmp
mov
sub
test
ret
dec
xchg
xchg
aaa
inc
push
push
dec
add
rol
pop
cmps
pop
sbb
ins
xlat
retf
js
popf
leave
mov
push
aaa
fwait
and
pop
xor
daa
fsub
xor
icebp
lea
jl
jbe
iret
fsubr
or
arpl
(bad)
add
cwde
(bad)
popf
or
adc
mov
sbb
mov
pop
cs
add
bound
hlt
pop
or
sbb
cs
aam
das
lea
xchg
(bad)
and
out
mov
(bad)
mov
mov
dec
sub
test
stc
sub
cli
(bad)
push
movs
push
jmp
out
pushf
mov
mov
sub
jg
inc
cmp
loope
addr16
mov
ret
cli
sbb
xor
icebp
mov
inc
jg
or
cmp
pop
push
shl
push
enter
mov
mov
aas
pop
mov
dec
ja
mov
inc
out
cwde
pop
mov
add
xchg
cli
mov
adc
pop
ss
gs
nop
jge
mov
sbb
sub
xchg
push
popa
pushf
lahf
repnz
adc
mov
pop
jp
xchg
cmp
and
pop
dec
sub
pushf
xchg
test
movs
fwait
sub
rcr
pop
int
pop
pop
movs
xor
(bad)
call
add
xchg
sub
repz
int3
mov
popf
nop
add
xor
in
cmp
xchg
xchg
les
aad
pop
or
div
push
out
push
pop
jle
lock
fdivr
pop
mov
xor
sub
adc
add
pop
pop
sub
xchg
adc
mov
jnp
mov
or
dec
outs
into
push
shr
shl
cmp
neg
sbb
rcl
inc
call
ds
pushf
cmp
mov
pop
mov
loop
popa
movs
retf
mov
mov
push
mov
or
loop
cmps
ss
sbb
(bad)
sbb
mov
pusha
fmul
xchg
in
mov
hlt
sub
push
mov
fdiv
sub
lock
pop
pop
sub
les
push
and
sti
lods
dec
aam
adc
sbb
xchg
cmp
popf
mov
int3
loop
xor
jb
lock
mov
jge
sbb
xchg
(bad)
mov
xor
dec
sub
iret
and
data16
mov
fxch
fst
retf
inc
pop
ins
cdq
rol
mov
adc
mov
fidiv
lods
or
cmp
int
push
mov
mov
neg
ins
stos
dec
rcr
fs
ficom
mov
outs
sub
std
xchg
inc
aas
addr16
xor
stc
and
dec
add
and
xchg
shl
push
test
mov
pop
leave
mov
mov
bound
dec
std
add
nop
dec
jmp
jae
call
daa
inc
add
pop
dec
xchg
sub
xor
nop
fidivr
jnp
add
mov
mov
jp
add
add
mov
in
data16
inc
jge
pop
jb
inc
jns
dec
in
push
add
xchg
inc
call
pop
ins
outs
and
(bad)
(bad)
jnp
jae
fisub
sbb
iret
jmp
nop
inc
int
dec
les
jg
mov
pushf
(bad)
cmp
and
cmps
add
retf
and
clc
int3
int
sbb
cdq
pop
xchg
cmp
jae
jbe
or
pop
mov
jle
or
int3
cmp
push
add
sub
cmp
xor
inc
mov
mov
jge
enter
adc
push
mov
xchg
pop
iret
mov
sbb
call
dec
mov
or
push
lea
jmp
jmp
push
cmps
push
test
out
cdq
outs
xlat
call
adc
adc
aad
pusha
sar
mov
xor
jle
xchg
into
push
fwait
and
cld
lods
lea
xchg
addr16
and
sbb
pop
arpl
jge
int
xchg
jmp
popa
xchg
in
lahf
jne
mov
xchg
fisubr
cmp
(bad)
pop
push
inc
repz
rcr
inc
mov
test
stos
or
cmp
sbb
xor
outs
xor
sub
sbb
adc
xchg
sub
dec
mov
outs
push
outs
rcr
rcl
cmp
mov
int3
shl
mov
mov
pop
ficom
mov
and
lock
sub
mov
int
imul
dec
dec
jnp
cmp
in
(bad)
fdiv
pop
or
inc
cmp
and
and
or
jmp
pop
add
leave
ficomp
dec
(bad)
(bad)
xlat
aas
jbe
mov
inc
sub
push
repz
lds
inc
es
and
ds
pop
test
cmp
and
dec
push
sub
dec
mov
jnp
sbb
mov
fmul
aaa
push
loope
mov
sub
pop
and
arpl
enter
mov
lock
(bad)
push
bound
jmp
push
inc
outs
push
pop
mov
stos
les
pusha
repnz
mov
aad
es
fwait
and
sub
mov
mov
enter
out
enter
daa
xchg
xchg
fldenv
repnz
leave
mov
sbb
mov
icebp
inc
pop
sub
mov
sub
sbb
call
nop
or
dec
cmps
clc
repnz
fxch
mov
sub
and
xor
xor
scas
pop
call
jecxz
sub
movs
inc
jae
inc
in
hlt
pop
jnp
loopne
aaa
pop
pop
xchg
push
ret
stos
or
xor
mov
mov
(bad)
ficomp
and
imul
sub
jnp
fimul
outs
sbb
out
icebp
dec
nop
js
push
cmp
mov
mov
leave
nop
fcom
retfw
push
popa
je
mov
push
jo
cld
sub
mov
mov
(bad)
imul
mov
aam
dec
mov
stos
jne
fisub
pop
xchg
push
inc
jnp
loopne
mov
jbe
inc
aas
cmp
push
sbb
xor
push
or
pop
fsubr
lahf
stc
push
dec
(bad)
in
add
daa
(bad)
sub
push
and
jnp
mov
fwait
pushf
(bad)
fstp
int
aam
xor
add
(bad)
adc
inc
push
aad
cld
std
mov
aam
lods
loop
pop
jb
pop
das
std
cdq
add
fistp
adc
mov
bound
icebp
inc
jb
les
retf
ds
frstor
cmp
adc
stc
ficomp
retf
pop
outs
sbb
out
stos
outs
push
push
mov
popf
pop
adc
adc
push
jns
jnp
push
mov
mov
or
std
pop
mov
mov
inc
fdiv
test
pusha
push
dec
icebp
pop
ret
test
mov
cmp
or
ret
push
scas
push
sbb
dec
pop
push
(bad)
popa
push
jl
push
addr16
push
sbb
jg
jnp
imul
push
add
mov
out
outs
lods
cmps
and
mov
ret
cmp
push
into
test
rep
pop
mov
xor
cmp
mov
in
call
mov
aas
aaa
aam
stos
pushf
pop
sbb
mov
push
xchg
jns
hlt
outs
mov
out
push
loopne
pushf
in
fiadd
push
xchg
retf
(bad)
rol
in
cmp
xchg
lahf
mov
dec
xchg
mov
sbb
pushf
js
push
lds
mov
cwde
add
jne
pop
pop
cmp
xchg
dec
cmp
and
push
pop
(bad)
shl
push
fiadd
(bad)
push
mov
or
sbb
cmp
and
pop
sub
pop
mov
or
cmp
ds
mov
aad
xchg
jge
rcl
pop
int3
bound
adc
pushf
add
adc
or
call
mov
gs
test
dec
in
xchg
add
dec
sub
lods
pop
pop
jp
ds
dec
dec
test
cs
fimul
out
mov
sbb
jne
neg
je
cmps
dec
fs
out
xchg
dec
cwde
dec
in
or
loopne
inc
cmp
mov
in
cmp
div
test
adc
imul
movs
out
or
dec
dec
(bad)
mov
out
push
ja
jae
inc
sti
dec
pusha
push
out
hlt
scas
fwait
repnz
or
retf
mov
out
sbb
xchg
les
mov
jnp
fcom
shr
lods
cmps
cwde
mov
daa
mov
xchg
sub
push
pinsrw
stos
scas
mov
xor
in
cmp
sar
stos
bnd
shl
cmp
xor
mov
jle
sbb
iret
dec
and
gs
fwait
jl
stc
mov
inc
in
ror
pop
pop
out
lahf
sub
mov
lods
xchg
pop
lock
mov
add
jecxz
mov
push
xlat
mov
adc
push
xor
jb
lds
sub
aaa
push
push
xchg
cmps
lods
int
sub
int3
pop
push
popf
imul
adc
clc
jb
(bad)
mov
inc
mov
adc
sbb
mov
(bad)
pop
sahf
cmp
je
sbb
aaa
dec
int3
ret
cmp
push
loop
mov
sub
imul
loope
int
xlat
mov
leave
jp
mov
push
or
stos
call
or
fs
jge
rcr
mov
lahf
sbb
jnp
bound
xor
leave
int
xchg
in
jge
or
mov
es
or
sahf
out
lahf
xchg
jmp
les
not
xor
pop
adc
jb
jg
jmp
inc
ret
xor
mov
fyl2x
dec
xchg
leave
cld
test
cld
fild
in
pop
add
cmp
lea
and
test
bnd
das
dec
dec
add
xchg
push
add
retf
add
or
sub
and
pop
mov
push
clc
xor
dec
mov
pop
psubb
inc
int3
add
push
mov
adc
adc
add
mov
add
cmc
push
mov
or
pop
icebp
pop
aam
push
stc
das
out
dec
sar
push
mov
lea
xor
dec
mov
mov
push
mov
outs
retf
push
repnz
adc
sti
sub
cmp
jl
ja
pop
movs
rcl
jnp
push
mov
lahf
in
inc
mov
rol
repz
mov
cmp
lods
mov
sar
stc
push
mov
popf
ins
int
xchg
inc
mov
jnp
pop
js
ins
rcl
pop
add
push
add
mov
rcl
or
pop
loopne
xor
std
es
pop
inc
sar
inc
(bad)
outs
add
inc
xchg
test
push
outs
mov
lods
adc
xchg
xor
ret
sub
daa
jmp
and
sub
and
add
jo
xchg
jo
mov
push
fldcw
pop
jecxz
in
pop
movs
imul
cli
add
xchg
dec
stos
ins
scas
xor
pop
cmps
xchg
imul
jp
in
mov
mov
inc
mov
adc
call
inc
mov
addr16
outs
(bad)
cmp
jb
dec
leave
sub
inc
(bad)
xor
push
mov
dec
fild
xor
dec
mov
inc
mov
sub
or
std
cmp
psllw
mov
add
neg
retf
cwde
xchg
lahf
dec
mov
cld
pop
test
inc
test
cs
mov
shl
pop
xor
or
mov
data16
xchg
sahf
mov
push
pop
jmp
not
add
cmps
popf
xchg
fs
mov
rcr
in
pop
xchg
mov
mov
pushf
popa
mov
sbb
jl
ja
stc
inc
mov
shr
push
sti
xor
cmp
scas
nop
cdq
lds
ss
pop
xchg
push
adc
jae
xchg
inc
lods
sbb
cmps
fdiv
sub
dec
cmps
sahf
inc
int
popa
aad
rcl
(bad)
push
ret
mov
xchg
inc
or
push
(bad)
jae
cld
pop
mov
sar
enter
cld
inc
int3
or
retf
pop
lds
add
sub
pop
ror
icebp
pop
stos
stc
inc
lock
mov
push
cmps
inc
mov
jg
inc
mov
pop
or
nop
outs
fcomp
adc
xor
popa
mov
test
shl
idiv
dec
xor
push
mov
mov
push
int3
xor
pop
lea
cmps
lea
shl
xor
pop
loop
or
inc
lods
xchg
popf
jg
mov
std
pop
push
call
push
ficom
pop
xchg
xchg
jl
les
pop
cmps
imul
or
pop
sar
sbb
xor
mul
sbb
ins
rcr
data16
shl
sti
mov
cmp
outs
pop
or
in
cmp
ss
jmp
in
(bad)
jns
ja
cmp
out
jge
sahf
cmp
in
add
cmp
(bad)
dec
mov
ret
or
jmp
sbb
aas
push
pop
or
mov
std
pop
mov
push
mov
ins
mov
pop
lgdtd
neg
popf
dec
clc
and
imul
test
xchg
and
scas
(bad)
jl
cs
cmp
pop
(bad)
push
ror
sbb
les
jecxz
cld
inc
mov
push
mov
inc
loope
scas
xchg
mov
mov
imul
stc
sub
es
push
mov
pop
mov
mov
cmp
pop
(bad)
cs
push
int
adc
cmc
and
jmp
dec
or
cdq
push
mov
stos
mov
jae
sub
(bad)
push
or
push
cmc
sub
mov
clc
pop
fstp
xchg
jl
pushf
mov
jmp
push
mul
call
mov
jl
push
mov
pushf
pushf
outs
int3
call
mov
mov
mov
scas
loope
adc
add
ja
or
movs
inc
mov
cmps
(bad)
fist
mov
and
inc
mov
nop
(bad)
nop
jb
pushf
xchg
jnp
or
push
scas
call
mov
jge
mov
aad
(bad)
jno
ds
dec
mov
aad
test
mov
imul
mov
push
sbb
cmp
mov
sti
mov
leave
pop
fld
les
jl
dec
mov
sar
jno
gs
and
loop
lea
fs
pop
scas
call
aaa
pop
adc
push
or
leave
cmp
cmp
dec
mov
fs
mov
retf
cmp
push
fldenv
push
sti
sub
inc
ficom
lock
xlat
and
and
loope
(bad)
push
into
das
sub
add
pop
mov
inc
mov
cmps
inc
div
xchg
add
xchg
fistp
popf
jae
inc
test
inc
ficom
push
loopne
stos
cdq
push
mov
push
call
add
xor
xor
dec
mov
test
mov
pop
stos
mov
xchg
js
ja
xchg
dec
xlat
dec
mov
imul
mov
(bad)
push
scas
pushf
lahf
jp
ins
icebp
jb
xchg
pusha
mov
ins
lea
jl
(bad)
xchg
dec
mov
jnp
jo
adc
add
sub
and
push
mov
pop
test
pop
mov
ins
mov
aam
jmp
ins
fisubr
add
jmp
arpl
add
mov
pop
mov
xchg
inc
shl
(bad)
(bad)
cmp
push
cmp
pop
add
dec
mov
data16
push
lock
inc
or
add
push
fbld
or
jecxz
adc
inc
loopne
adc
and
jmp
xor
push
add
push
lods
xchg
jl
scas
imul
cmps
xchg
jno
fisubr
pop
adc
push
xchg
add
jecxz
out
mov
sti
jnp
jno
lahf
push
jg
and
or
rcl
inc
rol
test
pop
sbb
jg
pop
mov
pop
enter
je
and
xchg
popf
and
mul
ret
cmp
push
ds
daa
jmp
cs
adc
sub
out
imul
dec
mov
pop
jmp
fnsave
out
in
sub
ins
jecxz
repz
mov
inc
mov
mov
mov
jne
mov
ret
cmp
icebp
inc
movs
jbe
pushf
jnp
adc
push
test
jmp
cmc
cs
lods
dec
or
sub
aaa
sub
stc
sub
pop
outs
in
pop
test
sbb
int3
xor
sub
or
pop
(bad)
sahf
shl
or
aas
in
sub
mov
lea
xchg
movs
retfw
or
jmp
sbb
loopne
mov
mov
mov
and
(bad)
jmp
jae
xchg
outs
fstp
sub
cmp
jno
imul
into
dec
mov
push
div
pop
ret
dec
retf
cmp
popf
fs
dec
call
pop
mov
lahf
outs
mov
mov
test
mov
rcr
jae
(bad)
pop
mov
or
cmp
jmp
or
rcl
fstp
push
movlps
test
mov
mov
sar
loopne
cld
dec
mov
mov
int3
xor
daa
fs
pop
fidivr
cmp
or
or
push
repnz
call
lds
icebp
pop
stos
je
loop
out
xchg
mov
pop
mov
stc
adc
push
xor
push
mov
retf
sub
xor
(bad)
xor
pushf
arpl
push
sti
add
pop
cmp
dec
xchg
push
pop
int
cmc
pop
mov
data16
xchg
js
inc
int3
push
fisttp
dec
sti
jmp
sbb
and
out
push
(bad)
xchg
sahf
jg
push
mov
in
push
stos
xchg
sub
lods
pushf
mov
mov
jnp
sub
sub
add
aam
add
push
loop
mov
out
cmp
jge
cmp
rol
sar
enter
jl
ror
push
cld
push
mov
retf
cmp
div
mov
fcom
pusha
aad
jmp
inc
(bad)
xor
push
lea
and
jg
xor
ss
sbb
cmps
shl
push
lods
jp
xchg
nop
arpl
retf
xor
dec
stos
fs
imul
ret
pop
rcl
aam
adc
jp
jns
xchg
repz
imul
sub
cmp
sahf
xchg
jae
cmp
and
pop
mov
ins
xlat
mov
jno
xchg
push
jp
sbb
not
lahf
push
push
xlat
pop
into
jnp
xchg
xchg
sahf
dec
or
pavgw
adc
pop
mov
cmp
pop
mov
dec
xlat
push
xchg
xor
daa
adc
push
ror
xor
xlat
cmp
pop
icebp
pop
stos
xchg
inc
or
enter
ss
data16
inc
retf
enter
lods
pusha
mov
lock
stos
in
test
or
sub
xchg
xchg
inc
movs
xor
movs
fwait
dec
(bad)
or
or
pop
scas
shl
pop
mov
add
pop
mov
cmp
push
scas
push
inc
fmul
iret
mov
jno
jns
pop
xchg
sub
pop
mov
mov
outs
mov
xor
sbb
push
xchg
jb
cmp
cdq
ins
fld
or
dec
lods
jp
popa
mov
mov
shl
push
(bad)
jp
mov
xor
cmp
cld
sub
aad
retf
aaa
loope
push
aad
int3
jne
adc
pop
adc
add
sbb
sub
sub
mov
outs
ror
hlt
aaa
sbb
pusha
movs
jg
sub
xchg
dec
fisttp
add
jp
data16
inc
fdiv
dec
shl
mov
inc
movs
mov
inc
and
rol
sti
es
or
push
int
jns
push
adc
lods
jle
in
inc
fistp
jle
push
shl
mov
jmp
ja
xchg
fwait
popf
push
fist
xchg
leave
push
std
and
push
cmp
xor
aad
and
inc
fistp
jns
inc
cli
and
xlat
and
loope
ret
inc
movs
sahf
outs
xchg
scas
mov
mov
mov
mov
pop
les
in
add
aas
or
pop
xchg
icebp
sub
jnp
add
into
pop
cld
push
(bad)
push
mov
data16
sbb
push
test
cmps
xor
push
(bad)
xchg
jae
cmp
adc
dec
mov
(bad)
and
clc
pop
stos
mov
xchg
rcr
xchg
inc
sbb
push
xchg
ss
or
pop
xchg
xchg
nop
js
sub
out
movs
lahf
inc
mov
call
test
mov
call
rcr
jge
or
sub
dec
fld
adc
pop
mov
jmp
out
xchg
dec
shl
adc
rcl
mov
in
inc
mov
stos
jno
outs
cmps
jbe
xor
dec
xchg
mov
fidivr
int3
aas
sbb
cs
cmp
xor
pop
mov
and
(bad)
sub
or
mov
or
pop
out
in
mov
inc
scas
dec
adc
xchg
inc
jmp
and
cli
cmp
push
lods
dec
mov
jl
cdq
ins
mul
in
xchg
sar
loop
jmp
adc
adc
add
test
sub
test
mov
mov
or
cmp
retf
xor
xor
xor
das
dec
aam
loopne
cli
inc
mov
add
add
mov
xor
in
xlat
es
out
cmp
pop
add
ret
adc
pop
stos
xchg
or
add
scas
inc
mov
enter
aad
outs
enter
in
rcr
cmp
xor
dec
cmp
adc
les
jecxz
int3
pop
xchg
xchg
arpl
pop
adc
dec
mov
dec
shl
inc
not
dec
cmps
rcl
xchg
xchg
jno
push
test
dec
mov
std
mov
imul
sbb
or
cmp
sti
and
pop
mov
xor
pop
mov
dec
mov
aad
mov
stos
xchg
(bad)
jg
jl
into
dec
mov
mov
call
(bad)
push
adc
adc
push
mov
fsubr
adc
adc
mov
xchg
dec
xlat
push
mov
mov
outs
sar
retf
cwde
push
xor
inc
fidivr
adc
call
sub
dec
int3
ds
xor
cmp
add
jmp
mov
cwde
jle
mov
pop
mov
fisubr
aaa
loop
mov
clc
push
mov
add
dec
rcl
cmps
pusha
scas
mov
push
test
nop
outs
aad
mov
loopne
mov
or
loopne
ins
mov
fild
adc
and
lock
mov
aas
in
(bad)
pusha
int3
cmp
inc
sar
sbb
cmp
je
push
mov
call
adc
or
daa
adc
push
xor
dec
retf
sub
in
cmp
pop
mov
daa
in
scas
loopne
hlt
and
or
and
cmp
cli
sub
sbb
push
shl
xor
out
mov
lock
dec
test
outs
fist
and
in
scas
push
jmp
stos
jne
add
sub
inc
test
sahf
jns
popf
jns
in
sbb
pop
mov
int3
push
fst
or
dec
mov
xchg
push
fild
loop
mov
mov
pusha
cmp
pop
test
sar
out
mov
or
jmp
pop
adc
cmp
pop
jecxz
les
out
das
or
mov
dec
or
in
dec
mov
pop
adc
add
mov
rol
retf
pop
fimul
clc
sub
inc
fidiv
cmp
loope
sbb
jg
xchg
mov
xchg
sahf
jne
mov
jl
dec
xchg
or
dec
mov
int3
add
sbb
pop
adc
popa
rol
retf
aaa
loope
out
mov
pop
sbb
dec
mov
xchg
add
cmp
jmp
loop
sbb
pop
xor
push
xlat
add
push
mov
push
mov
cwde
dec
cs
xlat
aas
out
xor
xor
sahf
jnp
push
mov
xor
ror
rcr
add
ja
cmp
inc
movs
jne
push
jmp
cmc
and
cld
cmp
outs
repnz
pop
enter
push
ret
push
mov
lea
dec
rcl
xor
not
xchg
outs
test
pop
xchg
int
mov
mov
mov
sti
push
shl
(bad)
or
das
push
jmp
popf
ins
mov
data16
dec
mov
shr
and
mov
jge
add
add
cmp
(bad)
dec
mov
add
dec
lds
repz
jp
push
mov
mov
das
sbb
les
jecxz
push
loopne
mov
cs
in
add
cwde
push
lods
xchg
imul
jb
xor
cwde
addr16
jb
add
push
cmps
xchg
ins
rol
or
xor
mov
lods
pushf
outs
(bad)
jp
cmp
inc
fidivr
jmp
add
std
sub
sub
aaa
adc
les
movs
mov
jo
popa
fidivr
cli
daa
add
sti
daa
adc
sub
ss
(bad)
mov
inc
and
or
jmp
jmp
dec
xchg
fisttp
pop
pop
fdiv
out
push
repz
mov
shl
adc
sub
aas
por
or
dec
mov
ss
push
call
les
xchg
xchg
lea
sub
scas
mov
stos
sub
fld
pop
cmps
lea
or
jmp
sub
pop
stos
pushf
mov
xor
and
mov
cmps
jb
adc
sub
sub
repnz
mov
inc
mov
xchg
pop
sbb
es
sub
daa
adc
aas
sbb
jmp
adc
clc
and
dec
ror
jl
push
push
les
ja
arpl
hlt
xor
sub
test
pop
stos
push
(bad)
or
pop
fistp
(bad)
cwde
(bad)
js
cmp
aas
adc
add
sub
sbb
push
test
push
mov
retf
outs
enter
mov
and
dec
mov
mov
push
mov
xchg
xor
push
adc
cmp
dec
fisub
sbb
mov
stos
inc
lods
cdq
inc
(bad)
dec
fbld
stc
daa
push
mov
popf
xchg
inc
lods
bound
movs
loop
hlt
xor
or
int
loope
sar
mov
dec
cmps
xchg
inc
fidiv
jno
mov
jle
call
cmc
dec
movs
cmps
sahf
addr16
mov
mov
pop
out
xlat
xor
and
mov
jno
mov
mov
jecxz
jmp
lods
fwait
mov
sub
xor
sub
test
mov
ret
or
push
shl
loope
mov
sub
dec
int
xor
mov
gs
inc
mov
movups
add
and
mov
inc
rcl
test
or
out
pushf
jae
cmp
or
ds
or
or
jne
and
inc
xchg
xchg
inc
cmps
ins
fidiv
out
test
ret
aas
pop
stc
pop
mov
stos
xchg
xchg
jns
call
imul
rol
pop
fild
push
fidivr
lds
jp
push
mov
stos
mov
popa
(bad)
jns
in
ror
add
lock
stos
(bad)
into
dec
cmps
popf
dec
scas
mov
pop
lock
mov
js
hlt
pop
xchg
jno
(bad)
xchg
outs
mov
inc
lods
iret
aas
repz
in
in
ret
dec
test
cdq
imul
push
(bad)
cmp
pop
lock
sbb
sub
cs
add
dec
mov
mov
(bad)
retf
cli
aaa
loopne
in
push
sbb
jmp
adc
in
mov
ins
stos
in
or
add
or
pop
sbb
push
xchg
sub
push
sti
or
and
ins
cmps
sahf
mov
or
or
das
mul
daa
adc
pop
ret
pop
cmps
sbb
push
stos
add
enter
dec
jmp
adc
pop
int3
cmp
arpl
cli
sub
inc
mov
dec
mov
xor
xchg
imul
cmp
dec
in
pop
mov
xor
and
jmp
fnstenv
int
mov
arpl
out
xchg
cmp
pop
ret
pop
mov
lods
iret
dec
test
pusha
mov
fcomp
out
js
jp
out
and
inc
repz
push
sbb
jmp
aam
mov
push
stos
mov
ja
pop
mov
mul
adc
pop
xchg
mov
push
jecxz
cld
daa
pop
shr
(bad)
and
retf
push
mov
cld
sub
pop
lea
js
adc
xor
xor
retf
test
jge
nop
jle
jge
push
mov
sbb
xor
pop
call
xchg
jp
nop
imul
inc
(bad)
push
test
jle
cwde
outs
adc
retf
adc
pop
scas
push
and
sub
pextrw
mov
mov
fstp
jno
pop
loope
enter
fidivr
sahf
pusha
(bad)
jne
pushf
fbld
push
or
repz
mov
mov
mov
dec
lods
pushf
xchg
xchg
inc
mov
imul
retf
mov
mov
mov
clc
and
pop
stos
mov
mov
jae
sahf
dec
sub
das
in
imul
in
or
or
ss
mov
sbb
push
fild
xor
out
pop
sub
in
cmp
sub
sub
ror
xchg
data16
loope
(bad)
sub
nop
nop
xchg
je
xor
sub
out
adc
and
std
sub
ins
fidivr
adc
pushf
jge
inc
mov
push
(bad)
xor
cmp
cli
cs
cmc
lods
dec
test
inc
mov
mov
jbe
jnp
das
repnz
or
mov
sub
sbb
das
sbb
sbb
pmaxsw
and
adc
push
add
(bad)
mov
cmp
and
xchg
pop
inc
mov
mov
dec
stos
das
jle
out
in
scas
adc
stos
pop
push
ss
ret
inc
push
cmp
xor
js
add
xor
mov
lods
hlt
in
(bad)
fild
push
and
fisub
add
aaa
aam
xor
js
ins
jne
dec
add
cmc
mov
in
iret
movs
xlat
mov
lea
pop
aaa
scas
adc
mov
sbb
pop
sahf
rcr
xchg
clc
xchg
shr
aam
iret
xor
xchg
fstp
inc
mov
jmp
arpl
and
add
or
add
call
mov
cmp
xor
out
jmp
(bad)
push
inc
sub
fadd
mov
sahf
js
sub
pop
push
ds
mov
sub
fsub
pop
push
push
mov
mov
jae
and
sbb
jbe
push
mov
pop
inc
aad
stos
(bad)
push
stos
out
pop
pushf
in
xor
ja
pop
sub
clc
sahf
int3
hlt
mov
pop
outs
lahf
out
xchg
aad
jg
lea
pop
aaa
scas
adc
mov
sbb
es
stos
hlt
mov
xor
fdivr
movs
sub
push
adc
push
hlt
test
mov
in
loopne
data16
inc
es
aam
pop
pop
sbb
cli
in
mov
cmp
std
mov
(bad)
lods
and
adc
mov
outs
int3
into
mov
jns
pop
je
or
mov
pop
adc
adc
add
jns
xor
out
push
inc
pop
inc
xor
pop
mov
inc
xor
xor
sbb
lock
pop
ins
pop
jbe
add
scas
call
pop
popa
iret
int
out
push
pop
cmp
mov
push
mov
jb
out
lods
into
sub
ror
mov
pushf
pop
sub
stos
jmp
jae
cdq
jle
push
mov
loope
xchg
xlat
sub
and
hlt
mov
jg
addr16
mov
js
jmp
arpl
jle
or
xlat
mov
pushf
jo
add
push
(bad)
cwde
fstp
fsub
inc
add
push
jae
and
scas
test
call
mov
dec
or
repz
push
in
sbb
rol
mov
xchg
hlt
cmps
out
fistp
(bad)
xchg
in
in
mov
(bad)
cwde
and
aad
xor
sbb
jp
scas
xor
cmp
imul
addr16
xor
jns
adc
jecxz
in
data16
aas
jp
iret
shl
push
add
retf
xchg
dec
sbb
movd
push
push
push
sbb
aad
fidivr
mov
mov
sbb
lock
jnp
pop
addr16
jbe
xor
fs
sbb
retf
arpl
cmp
leave
movs
in
popf
add
xor
jl
cs
jle
imul
test
inc
push
hlt
lds
(bad)
xor
xlat
mov
cmp
cmps
adc
pop
pop
adc
jl
cli
cwde
cwde
or
div
xlat
adc
cmp
leave
xor
and
loope
scas
fbld
fcom
pushf
jge
adc
ds
pop
or
out
cmp
mov
and
xchg
xchg
outs
cwde
sbb
aad
fnstenv
ja
cmp
mov
mov
push
fstp
xchg
mov
mov
jb
cmp
data16
div
stc
mov
std
mov
fwait
sub
push
push
jns
cs
das
dec
or
push
pop
xchg
(bad)
mov
movs
push
cmp
mov
stos
in
cs
clc
mov
jne
ins
fs
and
es
cmp
(bad)
retf
packuswb
imul
pop
xor
call
dec
mov
ret
inc
push
inc
mov
push
inc
hlt
adc
sahf
pushf
daa
test
jl
or
repnz
xchg
bound
and
mov
gs
(bad)
(bad)
cmps
test
xchg
cld
and
mov
dec
mov
jnp
(bad)
fimul
scas
jge
add
fdivr
mov
add
cmc
pop
jo
addr16
stc
mov
adc
out
adc
xor
leave
mov
jmp
in
call
into
mov
or
sti
movs
(bad)
cli
mov
ja
sar
arpl
sub
fwait
ror
add
push
pop
pop
data16
jge
mov
fistp
xchg
xor
push
popf
in
jecxz
fwait
in
stos
pop
push
adc
fs
adc
push
cmp
data16
sub
fdiv
into
dec
mov
adc
ret
sbb
icebp
xor
pop
xchg
jmp
or
dec
pop
mov
(bad)
pushf
mov
or
(bad)
hlt
mov
dec
xor
add
out
sar
addr16
cmp
and
jne
adc
loopne
shl
rol
mov
(bad)
stos
jmp
gs
push
(bad)
lods
sbb
cmp
sti
pop
sub
sbb
fbstp
mov
in
fiadd
adc
sub
pop
push
or
in
shl
in
stos
clc
mov
out
mov
sbb
adc
cmp
mov
xchg
push
sub
(bad)
mov
sub
pop
sbb
retf
adc
or
add
(bad)
rcr
mov
sbb
ss
int
and
ins
sub
outs
xor
mov
imul
jmp
arpl
inc
fmul
mov
mov
ret
cs
(bad)
adc
add
mov
xchg
punpcklbw
inc
add
xor
inc
and
ret
stc
mov
push
(bad)
xor
cmps
mov
mov
bnd
aas
popw
enter
push
aam
cwd
frstor
mov
lods
jno
jle
cli
mov
iret
mov
push
sbb
mov
fincstp
scas
lds
push
pop
or
jmp
mov
cmp
push
ja
les
and
and
(bad)
sahf
rcr
imul
ins
cmp
mov
mov
sbb
xchg
pop
inc
add
xor
fstp
cli
mov
push
pop
push
mov
dec
lods
daa
fwait
retf
sub
mov
stos
jp
mul
dec
sub
mov
call
push
call
xchg
jbe
cs
cli
jmp
mov
inc
dec
adc
push
jno
sti
shl
mov
stc
stos
in
push
pushf
lock
pop
add
xor
add
cwde
or
lock
out
fnstcw
pop
mov
popf
dec
jnp
cld
neg
mov
nop
jmp
stc
mov
pop
(bad)
shl
cli
(bad)
mov
fwait
jle
out
(bad)
pushf
pop
and
int3
or
daa
or
leave
adc
cmps
pop
push
and
out
mov
popa
dec
dec
add
adc
mov
or
sbb
cli
call
jae
pop
inc
es
xlat
mov
retf
nop
pop
xor
test
mov
or
leave
lock
mov
or
mov
sahf
and
jb
xor
fld
fstp
adc
jns
in
add
les
push
cmc
add
sub
pop
dec
and
lods
xor
int
(bad)
shl
mov
imul
stos
and
int
push
adc
jmp
xchg
cmp
and
scas
adc
int
scas
call
fcomi
mov
dec
leave
sti
mov
sub
aam
(bad)
fxch
call
loop
mov
cdq
cli
xchg
jp
(bad)
inc
push
stos
jmp
aad
in
movs
sbb
rol
adc
xor
mov
cmc
mov
mov
pop
pop
inc
push
and
xor
xchg
mov
push
sbb
sbb
dec
pop
sub
mov
mov
sub
pop
jge
jo
scas
adc
dec
es
mov
pop
mov
mov
mov
dec
xchg
sub
xlat
(bad)
mov
ins
popf
(bad)
push
add
adc
test
enter
and
cs
daa
imul
mov
push
inc
pop
adc
lds
lods
pop
jge
adc
mov
sub
sub
movs
xor
stc
fstp
sub
int
fisubr
mov
mov
call
fidivr
test
mov
adc
movs
or
push
and
jle
sar
pop
fwait
in
adc
jne
xor
sti
mov
cmp
push
jbe
sbb
call
cdq
aad
dec
sub
(bad)
(bad)
add
push
dec
adc
leave
mov
cmp
popa
cmp
fisubr
stos
xchg
adc
lock
sti
mov
mov
test
pop
mov
outs
pop
shr
lods
test
jge
push
xchg
pop
or
retf
out
push
xchg
in
xchg
jae
dec
mov
sub
mov
ja
inc
fdiv
push
pop
call
add
or
lahf
loopne
ficom
xchg
enter
into
xchg
pushf
fistp
lahf
pop
inc
and
sbb
or
push
into
sub
das
pop
jmp
sbb
call
pop
imul
push
fidiv
inc
adc
out
ror
jnp
(bad)
mov
jmp
mov
adc
std
mov
popa
and
push
stos
loope
pop
push
adc
xchg
cli
mov
in
movs
sbb
loop
out
or
jnp
enter
push
cdq
fild
movs
adc
mov
ds
retf
call
or
dec
mov
in
pop
xchg
repz
inc
and
(bad)
mov
pop
lahf
sbb
add
mov
push
shl
enter
icebp
mov
scas
pop
inc
pop
call
jg
repz
fistp
pop
shr
jno
jmp
mov
mov
xor
push
and
enter
imul
jmp
dec
jp
cmp
sbb
cld
sti
mov
clc
in
cmps
gs
sbb
pop
add
lods
sub
mov
pusha
mov
xchg
dec
mov
mov
jg
dec
push
cmp
int3
adc
and
outs
mov
leave
call
mov
push
nop
adc
ret
mov
std
mov
adc
pop
xor
pop
sbb
inc
cmp
fld
pop
xchg
sti
(bad)
aam
aam
jmp
mov
mov
xchg
sbb
and
mov
pop
fs
cmp
adc
inc
xor
retf
mov
bound
je
in
movs
iret
push
addr16
call
jae
xlat
mov
dec
ds
xlat
adc
push
or
inc
cwde
lds
dec
jns
adc
rep
fwait
cmp
or
(bad)
mov
inc
nop
sbb
loope
mov
sub
cmp
loopne
xchg
or
xchg
cmp
fild
call
inc
push
call
shl
lahf
outs
mov
gs
in
sahf
xchg
jne
fidivr
add
or
adc
into
sbb
pop
fs
dec
xchg
dec
cmp
mov
fsubr
mov
movs
sub
xor
outs
sub
ret
test
adc
and
dec
pop
pop
mov
jmp
shl
mov
fld
retf
mov
add
add
icebp
mov
push
jns
outs
sub
or
dec
adc
mov
or
mov
call
dec
into
or
or
inc
clc
sbb
jns
push
mov
sti
mov
add
pop
mov
mov
mov
inc
cmp
leave
mov
cwde
jp
cs
mov
xchg
iret
mov
jmp
nop
ficomp
fwait
rcl
mov
mov
mov
jmp
inc
cmovg
cdq
(bad)
nop
inc
ja
jbe
lds
push
rcr
ficom
sbb
add
adc
loop
cli
add
and
stos
idiv
cmp
aam
enter
dec
mov
mov
and
push
push
pmaxsw
nop
repnz
xor
xchg
add
loopne
test
aaa
xchg
movs
pusha
sub
scas
in
cmp
outs
fmulp
mov
dec
sbb
or
push
dec
xchg
xchg
(bad)
xor
dec
mov
mov
jno
cmp
pop
add
or
test
neg
std
xchg
pop
adc
sub
lods
leave
pop
xchg
sar
cmp
mov
imul
ror
int3
mov
mov
jb
push
mov
bound
mov
sub
(bad)
mov
jae
call
fcmovb
cmps
jae
or
dec
adc
jbe
loope
retf
fiadd
aad
lds
mov
ins
xor
add
inc
pop
adc
ss
frstor
imul
cmp
jl
and
jecxz
shl
mov
call
movs
sub
or
inc
push
jg
cmp
xchg
mov
clc
lds
jmp
ins
ss
xchg
in
cmps
outs
dec
cs
push
jl
cmp
mov
cmp
loopne
call
mov
sub
adc
test
and
fistp
and
pop
push
or
adc
sbb
test
dec
test
inc
xor
push
push
xor
sub
nop
add
mov
jg
aaa
mov
push
jb
sub
sbb
icebp
(bad)
fadd
lods
add
or
les
dec
cmps
cmp
adc
test
xchg
xchg
or
cdq
jl
inc
pop
in
xchg
out
inc
dec
or
mov
push
mov
ret
push
ins
inc
and
(bad)
out
sub
cdq
fnsave
and
cwde
lds
xchg
adc
cmp
fild
jle
ja
rcr
mov
adc
gs
out
xchg
xlat
hlt
lods
loopne
xor
outs
and
mov
call
inc
aaa
cmps
in
retf
nop
(bad)
std
xchg
add
push
imul
inc
sub
push
dec
cmp
arpl
dec
lods
xor
mov
out
mov
dec
mov
adc
adc
or
in
push
out
adc
inc
fld
or
sbb
jge
push
xchg
shl
pop
dec
or
test
shl
ret
and
sub
jmp
sbb
inc
test
or
push
and
xor
mov
mov
jle
xor
mov
sub
mov
sub
cmp
pop
mov
(bad)
fstp
inc
mov
xchg
cmp
cmovs
dec
cmp
loope
aam
jp
imul
adc
repz
mul
(bad)
xchg
cld
repnz
add
inc
xchg
ret
out
movs
sbb
xor
mov
mov
neg
sub
daa
mov
cmp
pop
es
shrd
fbstp
inc
pop
jle
cmp
clc
repz
addr16
jle
cmp
push
pop
scas
xor
sub
call
fisub
imul
sti
lahf
shr
mov
scas
jg
xor
xor
mov
inc
mov
imul
scas
out
pusha
push
pop
inc
xlat
ret
daa
fwait
loope
xor
stos
call
xchg
sbb
(bad)
retf
inc
pop
sub
int3
aam
in
inc
fs
cmp
mov
pushf
gs
out
addr16
cmp
in
fld
clc
cmps
les
test
mov
mov
dec
or
cmps
add
loopne
xchg
lock
ins
test
mov
adc
push
and
jecxz
ror
outs
ds
dec
mov
and
cmp
aad
int
jae
jns
imul
dec
mov
shl
fsubrp
loop
mov
jp
push
nop
and
out
das
aad
ror
retf
mov
mov
jg
and
jmp
ret
and
cmp
loopne
inc
lahf
push
dec
cmp
dec
cmp
push
or
xor
ja
imul
sub
inc
cmp
sbb
xchg
sub
out
pop
inc
sub
sar
(bad)
mov
cwde
sub
(bad)
cmp
call
jae
ins
cwde
sbb
lds
push
sbb
call
mov
and
adc
sub
fwait
sti
xchg
fcomi
fidiv
addr16
sahf
loope
(bad)
repz
xor
cmp
push
js
inc
ins
push
xor
pop
push
jge
dec
adc
push
out
xchg
retf
shl
leave
cmps
icebp
pop
dec
push
or
loopne
fwait
imul
call
mov
xchg
shr
mov
xchg
outs
lahf
loop
bound
lods
(bad)
pop
ins
daa
pusha
(bad)
std
mov
and
jp
or
lods
(bad)
sub
fnstcw
clc
in
std
nop
xor
scas
pushf
or
iret
inc
inc
pop
add
jnp
inc
or
(bad)
repnz
cld
pop
jnp
xor
movs
push
dec
test
fwait
icebp
test
(bad)
cld
aad
and
fcomp
dec
inc
js
or
rcl
ud1
mov
xchg
and
jmp
jmp
jb
ret
test
xor
or
and
mov
push
adc
jo
pop
test
fs
sbb
loop
jbe
adc
mov
add
mov
xor
out
rep
rol
sbb
xor
mov
or
pop
adc
cmp
xchg
test
les
adc
cmp
and
(bad)
fcom
dec
add
pusha
dec
or
sbb
or
inc
xor
add
mov
pop
jl
sub
cmps
in
cmps
and
pop
leave
xor
adc
popf
lods
dec
push
pop
push
retf
int
mov
dec
sub
stc
out
nop
mov
push
and
test
inc
movs
inc
jb
sbb
fistp
call
sar
movs
test
mov
inc
cmps
pop
dec
or
(bad)
nop
xchg
inc
bound
sar
mov
sub
ins
xor
jmp
mov
and
rol
jge
jo
lods
adc
or
sbb
or
in
mov
(bad)
sbb
pop
fs
add
in
icebp
call
fstp
push
pop
or
xchg
sbb
adc
fsubrp
test
mov
outs
xor
xor
(bad)
fmul
xor
out
add
xor
sub
mov
scas
dec
cs
out
mov
mov
push
rol
gs
fcmovne
cld
mov
jbe
(bad)
xchg
cld
sahf
cdq
sbb
adc
sub
sbb
stc
stos
jmp
call
iret
lock
jge
pop
sbb
repnz
fimul
gs
(bad)
movs
in
cs
push
mov
movs
mov
xchg
jmp
mov
push
cmp
xor
fsub
push
sub
inc
fcomip
movs
dec
ins
adc
mov
aam
imul
rcr
int3
mov
add
jbe
or
retf
and
call
popa
daa
je
out
mov
mov
mov
scas
jmp
adc
shl
add
mov
pop
sbb
adc
bound
add
xchg
push
add
sub
sar
push
and
int
int
scas
rol
out
les
jle
jbe
pop
adc
dec
aas
data16
test
push
pushf
xlat
xchg
xor
ins
jne
jle
fcomp
mov
test
push
pop
adc
jnp
pop
inc
xor
int
rol
loopne
enter
in
inc
pop
cmp
mov
cwde
add
clc
mov
pop
(bad)
pop
add
in
dec
xchg
fisttp
dec
sbb
fsubr
mov
icebp
pop
inc
or
add
icebp
test
pop
fs
fidiv
push
sbb
movs
xor
retf
loope
(bad)
shl
movs
es
jecxz
add
call
xor
pop
into
loop
mov
inc
push
sbb
enter
and
xor
sti
imul
jae
push
dec
add
movs
enter
add
fimul
adc
cmp
inc
scas
sub
lock
push
clc
mov
jge
fidiv
lods
inc
dec
or
mov
test
inc
sbb
ret
mov
leave
dec
inc
ds
and
outs
es
mov
fcomp
stc
sar
add
retf
cld
mov
mov
call
and
sub
in
dec
cmp
ret
push
popf
test
jmp
sbb
les
sbb
and
and
adc
outs
adc
ja
pop
add
das
outs
or
arpl
jl
inc
push
addr16
inc
add
cs
or
popa
cmp
ins
cmp
popa
add
jge
inc
sti
xor
nop
sar
in
jl
sar
pushf
test
jg
pop
iret
jmp
into
imul
jmp
mov
test
xor
ror
cmp
icebp
mov
adc
sub
test
cmp
fisubr
pop
mov
mov
sahf
push
es
loop
mov
sub
ss
cmp
xchg
icebp
xor
pop
ds
fwait
repnz
xchg
push
inc
adc
in
test
xor
addr16
or
sub
adc
xchg
mov
add
call
mov
aas
cwde
cli
mov
(bad)
not
pop
and
in
lods
out
xor
inc
adc
in
mov
(bad)
jge
pop
push
(bad)
aad
rol
mov
call
dec
sub
into
xor
pusha
xor
push
or
and
int3
mov
xor
or
in
std
inc
ja
sbb
ins
gs
fsubr
lock
jl
dec
js
jne
sar
cmovae
aas
outs
xchg
sbb
movs
adc
or
adc
mov
push
pop
aaa
scas
adc
and
sub
mov
push
or
or
lods
jecxz
add
pop
arpl
dec
mov
cmps
(bad)
repz
push
inc
push
adc
add
fldenv
inc
cmp
retf
push
jp
outs
jae
inc
push
mov
jo
xlat
fnsave
pop
dec
cmp
add
jg
pop
inc
sub
stos
adc
mov
enter
arpl
xchg
stc
sahf
shr
leave
(bad)
aam
jne
dec
lahf
into
mov
adc
int3
xchg
dec
xor
and
stos
in
mov
add
mov
aas
jnp
jecxz
(bad)
repnz
call
inc
push
adc
fnstsw
xor
sbb
mov
inc
adc
cmc
mov
adc
aaa
pop
sahf
into
mov
in
xchg
xchg
xor
lock
push
sub
mov
ror
jbe
add
loopne
jecxz
mov
fchs
stos
out
test
dec
ds
or
in
scas
xor
inc
imul
sub
sbb
jnp
and
scas
jmp
test
adc
pusha
dec
sub
ins
push
sbb
add
jo
pop
fwait
cld
mov
repz
ficom
xchg
dec
xor
test
mov
pop
into
xor
mov
aas
cld
mov
mov
xchg
aam
jne
daa
inc
mov
cmp
cmp
shr
imul
adc
and
out
mov
fcmove
movs
lea
mov
jp
jb
and
(bad)
xor
shl
movs
sub
sbb
dec
stc
test
or
out
movs
in
popa
push
pushf
mov
inc
add
(bad)
call
sbb
fisubr
inc
fmul
(bad)
fdivr
pusha
and
clc
push
es
stc
mov
push
scas
xor
adc
push
or
push
xor
cmp
pop
sahf
stc
and
push
dec
mov
call
aam
fsubr
xchg
push
mov
mov
jl
sub
in
scas
mov
(bad)
ss
lock
enter
mov
les
lods
jb
arpl
es
sbb
sub
fldcw
cmps
inc
and
inc
push
push
sub
pop
xor
addr16
ss
adc
cmp
or
and
push
dec
or
cdq
fdiv
cmc
test
xchg
in
leave
xchg
aad
stc
xchg
sar
mov
cmp
shl
rcr
es
mov
push
pushf
add
aas
mov
cmp
int3
(bad)
(bad)
data16
jmp
pushf
int3
mov
push
push
mov
aad
loopne
frstor
mov
jno
in
shl
mov
jno
(bad)
cld
add
xchg
enter
push
outs
fnstenv
inc
and
movs
cmp
(bad)
sti
movs
out
and
inc
and
rcr
lahf
call
add
shl
movq
mov
mov
jno
loop
cmps
pushf
adc
icebp
inc
mov
adc
dec
mov
jno
out
jmp
cwde
jnp
add
xor
and
nop
(bad)
mov
mov
mov
or
push
inc
daa
repnz
test
add
clc
mov
lods
add
or
int3
mov
push
jo
adc
mov
pop
mov
test
xor
xchg
(bad)
jg
aas
jae
aas
(bad)
shr
stos
or
push
cmp
push
and
inc
push
jns
fisub
push
xor
mov
mov
pop
dec
and
repnz
mov
das
mov
xchg
pop
xor
sti
mov
call
inc
push
jns
mov
sub
cmp
enter
push
mov
mov
lods
or
shl
or
xor
lods
rcl
scas
cmc
mov
out
loop
mov
(bad)
test
retf
mov
jae
inc
or
add
mov
imul
and
cmps
out
xor
inc
dec
push
cmp
dec
add
je
ror
mov
or
adc
test
stc
and
dec
sub
mov
bound
xchg
mov
inc
jo
pop
fs
(bad)
fdivr
add
inc
imul
sbb
inc
pop
pop
addr16
adc
ss
mov
fisubr
dec
imul
(bad)
mov
sub
jae
aam
xor
jns
popa
push
repz
shr
xlat
nop
cmp
hlt
xchg
cdq
out
scas
add
dec
pop
popa
xchg
cld
fidivr
mov
mov
out
popa
cmp
ficomp
jg
push
dec
or
pop
cwde
adc
iret
mov
mov
mov
mov
inc
adc
push
and
add
stc
fnsave
push
mov
movs
dec
cmp
inc
add
xor
jmp
push
outs
adc
jecxz
cmps
gs
jmp
dec
cmp
xlat
ret
push
pop
adc
fcmovnu
xchg
mov
xchg
ror
sbb
test
lea
xor
mov
(bad)
into
ins
test
jle
cmp
mov
push
enter
cmps
push
jbe
cmp
int3
xchg
xchg
push
and
pop
mov
jns
or
retf
mov
push
es
jmp
iret
inc
push
or
loope
mov
mov
aad
cmps
(bad)
and
dec
ds
cmc
rcl
in
fistp
and
inc
push
cmc
hlt
adc
pusha
cmp
mov
in
lds
cmp
mov
fsubr
mov
jg
add
in
sbb
xor
push
dec
mov
inc
aaa
sbb
out
or
xor
sub
sub
cmps
sti
xor
pop
push
ss
test
dec
mov
lods
popa
retf
mov
adc
dec
add
imul
jl
dec
push
data16
adc
jo
push
pop
dec
das
jle
pop
cmp
sub
sub
inc
sub
jp
pop
adc
ja
in
mov
xchg
mov
jecxz
cmps
les
mov
inc
stos
push
adc
shl
mov
pop
inc
cmp
aas
jnp
jmp
mov
mov
mov
push
outs
sub
lds
dec
mov
inc
push
iret
les
bound
inc
mov
ror
test
inc
or
ins
and
jecxz
(bad)
pop
xor
(bad)
cld
mov
dec
sub
iret
add
sub
adc
out
test
das
arpl
fimul
push
sbb
pop
jae
inc
mov
mov
lods
jp
push
cmp
ret
push
mov
fnstenv
adc
lock
fld
mov
push
sbb
push
test
mov
sahf
popf
jecxz
aad
pop
cmp
fimul
jnp
fs
frstor
xchg
sbb
push
popa
cmp
rcl
ins
dec
push
adc
and
adc
movs
xor
aad
jmp
ins
and
fs
add
sub
ret
in
aam
in
mov
aam
cmp
ins
imul
xchg
retf
mov
or
cmp
push
or
add
ror
mov
or
pop
sbb
loope
(bad)
sti
and
or
or
ret
sub
fild
pop
push
sub
add
(bad)
nop
shl
fnsave
stc
sar
add
enter
jnp
push
jge
or
or
(bad)
fld
call
cmp
jg
push
(bad)
in
fistp
mov
xor
add
sub
mov
fnstcw
dec
xor
sbb
cmp
test
push
addr16
pop
dec
xchg
in
mov
dec
mov
cmps
icebp
call
fcom
mov
pop
or
xchg
out
in
or
and
nop
aad
jp
pop
dec
aas
pop
or
(bad)
fstp
cdq
jmp
xor
sbb
dec
sub
out
fnstenv
jns
pusha
cwde
ret
movs
in
jmp
repz
mov
mov
inc
sub
stos
out
mov
add
fst
sti
mov
or
fild
inc
jbe
push
adc
sbb
add
lock
mov
xor
dec
and
sub
enter
(bad)
iret
imul
repz
outs
mov
mov
xor
es
stos
rol
mov
add
into
cmp
jge
cmp
popa
in
xchg
push
mov
jbe
sbb
add
or
jg
adc
sub
xchg
movs
inc
and
fmul
push
sbb
shl
or
lods
or
jmp
jne
and
loop
loop
mov
xchg
sahf
add
adc
bound
lock
cmps
in
test
cdq
int
xchg
in
stos
xchg
in
hlt
pop
push
pop
pop
adc
retf
jb
push
xchg
dec
cs
mov
push
pop
push
gs
test
xchg
popa
push
sbb
add
popa
bound
and
dec
adc
out
adc
lock
aad
xlat
xchg
stc
add
nop
mov
stos
je
pop
mov
and
dec
add
dec
push
pop
enter
cmp
mov
jg
dec
test
jbe
jp
inc
pop
dec
das
dec
or
cmp
dec
add
ins
xor
adc
inc
daa
imul
hlt
xchg
call
xlat
mov
xor
fsubr
xlat
xchg
stc
or
xchg
mov
xchg
jl
sub
xchg
rcr
mov
mov
mov
imul
aas
dec
mov
dec
sub
cmp
fdiv
mov
inc
add
mov
lods
test
dec
mov
clc
mov
adc
pusha
fsub
add
int3
and
mov
test
mov
cmp
stos
lds
cmps
out
inc
outs
pop
jbe
ret
adc
imul
mov
xor
stos
enter
sbb
jp
pop
(bad)
(bad)
aam
push
add
xor
adc
xor
xlat
mov
dec
aas
jg
clc
movs
out
pop
sbb
dec
dec
pop
ja
mov
and
mov
cmps
pushf
sbb
rcr
mov
je
or
(bad)
and
push
cmp
in
movs
mov
mov
imul
xchg
or
jns
cdq
pop
pop
sbb
dec
xor
imul
pop
imul
and
div
test
mov
pushf
and
std
mov
sub
push
push
mov
sub
aam
jmp
and
xor
test
jge
dec
cmp
scas
ffreep
cmps
repnz
xor
fidivr
ret
mov
ins
add
sar
shl
nop
sbb
enter
rcl
loopne
test
mov
arpl
jae
ds
push
stos
out
in
pop
popf
lock
add
popf
into
cmc
mov
cmp
push
and
push
pop
inc
pop
pop
inc
js
inc
or
add
mov
jle
jne
sub
(bad)
call
jl
jbe
pop
inc
add
fstp
jecxz
mov
sub
pop
xor
sub
movs
sti
mov
push
inc
sub
cmp
and
rcl
jg
clc
lahf
cld
out
rcr
repz
add
(bad)
mov
mov
jae
arpl
scas
in
mov
je
popa
and
in
ret
cdq
fild
fidivr
sbb
adc
xchg
ror
js
ins
xchg
sbb
xor
ins
push
mov
jns
dec
jno
jbe
retf
mov
jae
mov
loope
nop
sahf
dec
dec
adc
fisubr
dec
adc
xor
or
or
cli
out
test
das
retf
adc
inc
cli
xor
data16
stos
fstp
xor
ss
sub
retf
xchg
and
hlt
jb
loopne
mov
lods
cmp
or
inc
push
cmp
leave
lods
(bad)
sub
pop
out
jb
push
add
leave
lea
or
jmp
call
clc
add
popa
xor
mov
test
xor
cmp
or
and
outs
cmp
or
sti
mov
or
push
outs
and
(bad)
mov
xchg
pushf
loopne
call
mov
push
dec
add
mov
gs
gs
test
cmp
mov
cmp
sbb
sbb
sub
sbb
ret
jge
aaa
pop
sub
adc
sbb
stos
call
repz
ret
jge
jle
push
and
inc
pop
imul
xor
dec
or
jl
jne
je
push
and
dec
adc
sbb
pop
or
scas
and
jmp
mov
in
adc
adc
sbb
clc
push
ja
shl
xchg
iret
mov
(bad)
xor
out
scas
int3
es
sbb
add
out
(bad)
loope
fs
lods
out
in
pop
mov
inc
add
les
jb
dec
dec
lea
sbb
lods
or
mov
movs
addr16
leave
lods
call
aaa
cli
ficom
xor
outs
fstp
movs
jmp
and
cmps
adc
sbb
out
jo
(bad)
pushf
sti
mov
rol
scas
jmp
fwait
shl
jmp
mov
dec
mov
mov
pusha
xlat
rcr
cwde
cdq
adc
enter
pop
xchg
lds
fsubr
mov
aas
sahf
icebp
mov
sbb
(bad)
fisubr
in
mov
movs
cld
and
cld
cmps
mov
and
mov
adc
call
jl
in
mov
dec
sub
mov
jne
inc
dec
sub
cld
xchg
in
js
dec
arpl
gs
(bad)
fpatan
fdivr
pop
add
lock
cmp
push
fnstsw
ret
xchg
aad
pop
push
or
hlt
mov
inc
jb
inc
add
adc
jl
leave
mov
xor
pop
xor
jnp
fisub
dec
sub
rol
jl
jle
mov
mov
mov
(bad)
retf
mov
pushf
(bad)
cmps
call
cmp
and
jb
popa
cmp
mov
lds
lahf
loop
xchg
js
or
stos
in
jle
inc
ins
xor
or
jecxz
repz
imul
xchg
push
jb
dec
inc
sub
fimul
outs
sbb
sbb
xchg
or
imul
push
adc
sub
stos
ret
mov
(bad)
xor
cmp
push
inc
add
(bad)
shl
mov
push
dec
or
mov
es
out
ret
jmp
loopne
(bad)
xchg
(bad)
jmp
repz
cmp
pop
jne
xor
and
fld
pop
push
imul
dec
sub
mov
loop
xchg
and
and
mov
dec
das
aam
out
lods
pop
and
sub
call
ret
mov
mov
retf
cmp
add
and
pop
push
mov
mov
ret
xchg
ds
ret
mov
es
jnp
inc
fwait
mov
mov
dec
loope
cli
mov
dec
jge
and
loopne
xchg
jb
add
retf
test
push
inc
push
or
jmp
jmp
pop
and
xor
pushf
hlt
and
and
xor
or
shl
push
sahf
shl
mov
mov
mov
stc
test
sub
shl
mov
popf
aad
inc
jle
jg
clc
mov
dec
push
cmp
adc
cmp
jle
js
or
cld
(bad)
mov
jno
and
in
(bad)
xor
dec
hlt
and
mov
fidivr
in
sahf
fimul
rol
xchg
jnp
push
fs
push
retf
sub
sbb
pop
sbb
sub
test
fwait
clc
mov
hlt
mov
xchg
mov
test
sbb
jo
dec
sub
adc
inc
adc
inc
adc
aad
movs
sti
and
lods
xlat
add
fnstcw
push
cmp
in
sbb
or
ret
inc
mov
xchg
and
popa
add
mov
test
cmp
push
cld
mov
pop
mov
mov
enter
fnstcw
nop
les
(bad)
mov
and
test
xor
repnz
xor
js
out
test
mov
xchg
test
and
movs
push
push
xor
test
cmp
or
ds
mov
nop
rcr
sub
mov
cmp
jns
ror
xchg
inc
and
retf
mov
xchg
push
add
mov
clc
mov
dec
add
iret
mov
cmp
xchg
mov
aas
jno
std
or
inc
xor
mov
xchg
cmp
(bad)
(bad)
movs
jg
addr16
repz
in
mov
mov
dec
inc
daa
ins
cmps
add
sbb
shl
fild
lock
nop
lock
sub
stc
into
mov
cmp
repnz
inc
dec
sbb
jecxz
in
push
pop
push
and
mov
fst
sub
add
cli
enter
sub
jmp
jg
cmp
frstor
mov
push
cmp
mov
ins
push
or
call
shl
xlat
stos
call
cmc
movs
sti
mov
sub
inc
psubb
mov
pop
jnp
dec
mov
lock
or
and
xor
mov
outs
add
lock
jmp
mov
and
into
mov
pop
push
xor
cmp
adc
out
mov
div
or
das
pop
popa
dec
push
pop
cdq
dec
out
adc
test
cmp
push
ret
mov
mov
stos
add
pop
dec
and
rol
daa
jl
cmp
adc
int3
mov
or
cmp
ret
test
mov
add
rol
mov
lock
sti
mov
ja
mov
mov
hlt
ret
cmc
mov
fwait
cmp
pop
jle
(bad)
adc
in
shr
icebp
movs
stc
das
mov
xchg
and
loop
jae
inc
pop
jmp
sub
(bad)
test
or
xor
cmp
das
fisub
cmp
aaa
jns
(bad)
xchg
loopne
rol
ja
loope
aam
xchg
push
jg
xor
outs
inc
add
out
xchg
xor
push
xor
je
adc
push
mov
mov
or
pop
call
jecxz
cmps
loop
sub
stc
(bad)
(bad)
sti
ficom
mov
pop
or
adc
lds
mov
inc
push
arpl
fldenv
out
cmp
leave
call
sub
sub
fisttp
jo
pop
test
popf
inc
mov
jae
dec
adc
sub
adc
stc
mov
dec
inc
sbb
cld
rcr
test
push
(bad)
adc
sbb
mov
mov
jae
pop
pop
or
(bad)
push
pusha
and
sti
adc
jg
sbb
loopne
push
sti
push
inc
sub
mov
and
inc
rdpmc
scas
push
push
into
int3
mov
mov
rol
ror
dec
xchg
(bad)
mov
sbb
jo
loop
in
sahf
jns
pop
inc
fld
pop
ror
lods
in
and
push
adc
popf
rol
xlat
mov
sub
or
retf
cmp
inc
test
je
rcr
(bad)
push
pop
push
jl
out
jmp
xchg
enter
lahf
(bad)
xor
xor
int
movs
sbb
(bad)
sar
pusha
xchg
in
pop
ja
and
test
cmp
ficomp
xchg
bound
pop
fcom
inc
add
in
xchg
daa
in
adc
data16
es
mov
mov
jl
cmp
pop
inc
add
shl
movs
push
mov
call
ficom
imul
pusha
xor
xor
mov
popf
dec
xor
(bad)
(bad)
sbb
and
mov
shl
inc
or
shr
mov
popf
and
push
ss
mov
jb
(bad)
mov
mul
data16
mov
push
ss
sbb
rcl
xchg
int3
adc
sub
push
jo
inc
stos
jmp
popa
pop
sbb
scas
or
out
mov
push
stos
das
fcomp
dec
pop
jecxz
xchg
xor
ins
pop
(bad)
mov
pop
or
aam
out
dec
dec
ds
mov
jg
(bad)
(bad)
pop
pop
sub
cmp
pushf
out
imul
xchg
bound
adc
mov
(bad)
jne
cmp
hlt
int3
mov
mov
mov
sub
cmps
jne
pop
dec
mov
(bad)
ficomp
in
lock
nop
inc
outs
push
xor
cmc
shl
stc
sti
mov
gs
mov
mov
and
cdq
ja
and
adc
sbb
arpl
pop
mov
retf
and
scas
push
es
rcl
clc
jl
jno
jecxz
xchg
(bad)
jae
pop
pop
pminub
mov
adc
sub
cmp
movs
in
sub
or
dec
and
push
sbb
imul
sbb
xlat
lods
jecxz
push
push
inc
or
mov
out
mov
ds
sbb
adc
mov
mov
ja
jg
in
stos
pop
add
fnstsw
and
call
ret
scas
in
into
mov
pusha
or
jmp
call
xchg
(bad)
sahf
in
adc
pop
pop
pop
sbb
int
in
ficomp
xchg
push
push
je
fistp
xlat
xchg
aas
dec
sbb
ins
xor
(bad)
lods
fistp
jge
imul
movs
in
jmp
call
sub
xor
add
sub
xor
fiadd
xor
pop
jo
cmp
xor
inc
add
sbb
sub
lods
jecxz
xor
inc
dec
push
cmp
push
adc
dec
dec
cmp
mov
movs
leave
(bad)
lods
lock
cwde
repnz
sahf
loop
ret
mov
repnz
mov
(bad)
iret
test
or
inc
jnp
inc
and
mov
lahf
push
cmp
mov
rcr
dec
cs
cmp
adc
(bad)
fild
pop
add
sbb
shr
add
cmp
je
or
rcr
fst
nop
cwde
pop
(bad)
dec
push
adc
(bad)
mov
jo
sub
dec
mov
outs
or
mov
mov
scas
adc
rol
into
add
xchg
mov
repnz
jae
xor
sbb
loope
(bad)
xchg
fwait
sub
mov
div
retf
mov
dec
jb
jb
clc
mov
or
cmp
dec
cmp
cmp
ret
loop
dec
push
or
xor
mov
mov
sub
out
mov
mov
dec
xor
add
test
imul
fisttp
cmp
call
xchg
std
mov
or
sub
fistp
scas
mov
and
or
xor
loope
pusha
and
int
shr
repz
(bad)
iret
popf
ins
mov
mov
dec
mov
les
xor
pop
mov
(bad)
push
jge
aas
aam
add
retf
(bad)
sub
cs
out
sub
or
and
add
ret
mov
inc
mov
fcom
inc
arpl
fwait
ror
ja
bound
push
cdq
std
jmp
popf
(bad)
adc
rcr
mov
lea
sub
fisttp
nop
xor
jbe
in
aam
ins
sub
adc
in
stos
sti
push
imul
retf
shl
out
lods
jle
std
scas
(bad)
and
push
mov
mul
ins
enter
inc
jnp
dec
into
ret
test
aas
scas
pop
ja
cmp
ret
sub
push
aas
pop
test
mov
push
movs
pop
pop
mov
cmps
cld
mov
dec
dec
add
ret
inc
pop
and
push
(bad)
retf
into
mov
add
jge
or
cli
les
xchg
dec
push
add
sbb
loopne
out
sub
outs
mov
popf
int3
mov
mov
jno
out
movs
stc
and
jl
adc
sar
inc
xchg
and
push
ds
add
aad
imul
mov
ror
mov
mov
cmps
or
xor
push
xchg
cmp
mov
leave
xchg
and
shl
jae
popa
cmp
mov
mov
push
mov
mov
inc
pop
sbb
jge
xor
mov
jmp
pop
sub
shl
pop
imul
stos
in
and
cmovg
inc
push
iret
stos
out
mov
(bad)
ret
xchg
leave
or
lds
jge
pop
jns
adc
pusha
xor
rcr
add
xchg
leave
xor
push
dec
cmp
mov
pop
popa
dec
daa
imul
lods
in
adc
daa
dec
or
fs
jle
jae
test
je
mov
push
cmp
jmp
inc
ds
stos
out
scas
int3
adc
xor
xor
xchg
into
repz
mov
or
add
push
inc
push
and
xor
xchg
mov
push
sbb
sbb
dec
es
je
and
push
push
inc
imul
sbb
cmc
fbstp
and
shl
pop
jo
mov
add
sub
add
xchg
clc
mov
repz
mov
or
push
inc
std
std
cli
mov
lahf
cwde
xor
mov
push
sub
pop
or
dec
gs
scas
out
xchg
sub
xor
xchg
lock
dec
and
push
outs
pop
jmp
mov
data16
mov
fist
imul
jb
hlt
out
in
js
(bad)
movs
xchg
jl
shl
fucom
mov
jns
pop
sub
or
cld
jecxz
in
call
or
cmp
xchg
popa
jne
xor
xchg
pushf
pushf
add
jb
or
lods
div
mov
repz
jbe
push
inc
mov
xchg
out
ja
xor
or
sbb
daa
bound
xor
cwde
add
or
fisttp
ss
mov
push
dec
and
mov
dec
add
(bad)
xchg
(bad)
xor
mov
iret
sbb
fcmovb
lods
mov
ja
aam
dec
or
or
or
and
or
cmps
dec
push
(bad)
xchg
mov
jne
cmp
cmp
mov
ss
dec
in
and
fist
push
mov
shl
int3
adc
adc
shl
call
jge
push
cwde
push
js
cli
lods
ret
(bad)
push
mov
test
adc
repnz
call
ja
push
jbe
inc
add
sahf
ficomp
or
xor
pop
add
std
xlat
mov
cmp
stc
xchg
out
dec
cmp
mul
daa
ja
test
lock
into
movs
jne
push
and
mov
cld
cmps
cld
cmp
cwde
aad
xchg
cld
movs
jle
xor
aam
mov
xchg
pop
sbb
ret
lods
in
dec
pusha
cmp
jmp
mov
push
and
fcmove
rol
into
ret
xchg
or
shl
push
cli
mov
aaa
idiv
int3
mov
test
lds
scas
jp
and
(bad)
daa
ror
sti
xor
out
cwde
jle
aas
jg
sub
dec
(bad)
cmp
repz
mov
inc
pop
shr
cli
sub
pop
sbb
cli
scas
cld
and
push
xor
ja
jge
xor
aam
lods
mov
adc
ret
xchg
add
repz
xchg
cld
test
clc
rcl
mov
mov
push
adc
adc
movs
push
mov
pushf
idiv
jp
popa
xlat
and
cmp
fisttp
and
mov
jge
mov
test
outs
xchg
push
dec
or
jns
addr16
cdq
std
les
add
xchg
inc
xchg
pop
xchg
fst
je
jge
(bad)
lods
jmp
add
push
sub
sub
add
or
jns
push
adc
pusha
sub
jmp
mov
jmp
sbb
jne
xor
pop
sbb
inc
cmp
mov
xlat
xchg
iret
in
mov
adc
inc
ja
dec
add
div
add
frstor
add
sbb
jne
out
(bad)
out
retf
push
xor
mov
push
add
hlt
mov
xchg
ss
lods
adc
mov
fidivr
mov
nop
aam
cmp
ins
imul
mov
stc
rcl
mov
xchg
push
pop
sbb
cmp
cmp
je
and
add
loope
pushf
mov
inc
xor
jnp
sub
fadd
xchg
xchg
pusha
mov
cmp
scas
inc
push
cmp
les
call
cli
ror
int3
cli
fist
daa
je
cmp
mov
stos
lea
ins
fucompp
iret
mov
in
fwait
or
jmp
movs
out
mov
adc
sbb
enter
dec
cwde
not
push
call
mov
imul
ror
dec
or
fnsave
ins
xchg
js
shl
jae
rcl
lahf
fistp
jb
pusha
mov
dec
xor
cmc
stos
fstp
push
cmp
pop
xchg
add
outs
pop
jbe
add
repz
mov
outs
fsubr
and
add
ret
ror
ins
stos
add
xor
xor
cmovg
sbb
shr
mov
dec
mov
sahf
pushf
dec
or
jno
pusha
mov
cmp
in
data16
out
idiv
fistp
daa
pusha
ror
out
lods
cwde
jg
and
in
leave
sub
movs
aad
stos
enter
inc
jmp
and
or
mov
adc
dec
mov
fistp
ins
mov
dec
sub
pop
mov
(bad)
leave
cmp
push
push
push
fs
lods
out
out
mov
adc
dec
arpl
push
adc
push
jl
mov
inc
pop
push
ins
cmp
inc
pop
arpl
pop
jl
fs
xchg
iret
mov
adc
cli
mov
pop
dec
shr
xchg
cmp
icebp
xchg
inc
arpl
leave
add
imul
xlat
iret
mov
xor
add
into
rcr
jns
sub
or
jle
xor
jmp
push
mov
jns
sti
(bad)
retf
test
adc
(bad)
into
mov
mov
xor
pop
cmp
(bad)
test
pop
imul
jmp
xlat
add
dec
sub
add
push
mov
into
mov
sub
cmp
push
mov
sub
xchg
push
adc
fwait
fs
xor
push
jle
dec
mov
mov
xor
push
cmp
retf
test
and
pop
xchg
shl
mov
xlat
mov
nop
out
nop
dec
push
or
mov
pusha
add
(bad)
mov
sub
nop
js
xchg
rcl
scas
ficomp
jle
je
mov
loopne
aam
test
pop
inc
xor
int
ret
and
pop
or
inc
adc
hlt
mov
adc
pop
xchg
std
fldcw
inc
sub
push
int
in
mov
xchg
leave
lods
xor
jle
addr16
dec
adc
out
movs
out
lods
lock
inc
cmp
xor
ds
movs
sbb
rcl
dec
cmp
clc
sahf
fcmovnb
mov
jmp
movq
mov
push
cmp
sbb
push
cmp
or
cmp
inc
push
adc
mov
xchg
popf
daa
mov
mov
xor
sbb
fcomp
mov
sti
adc
and
movs
leave
or
and
mov
add
fldenv
or
cs
sbb
mov
mov
fs
or
dec
sub
hlt
jmp
mov
stos
or
cmps
sbb
mov
std
mov
scas
add
inc
push
fs
mov
cdq
iret
(bad)
push
pop
adc
push
and
jg
mov
movs
iret
sub
cli
test
and
cmp
pop
popa
and
repz
cwde
test
mov
dec
jmp
jle
cmc
fwait
jb
fistp
pop
adc
enter
jnp
sbb
dec
fwait
loope
xchg
aas
call
fbstp
jbe
fbld
mov
mov
jg
es
les
enter
ss
sbb
adc
je
adc
loope
imul
pop
dec
and
mov
mov
out
push
jp
sbb
or
js
or
add
jmp
jl
adc
cmc
mov
mov
aas
jno
shr
inc
or
test
lahf
push
inc
daa
pusha
fbld
pop
sbb
aad
fcom
jnp
inc
mov
xchg
pop
ss
sbb
inc
mov
jns
sbb
mov
push
test
aad
ins
jge
pop
(bad)
call
repnz
cmp
popf
fistp
movs
in
gs
inc
mov
das
inc
mov
cmp
or
cmps
in
push
mov
lods
pusha
add
outs
xor
mov
dec
mov
arpl
sbb
and
pop
push
cmp
adc
lods
ret
xor
xchg
mov
(bad)
jmp
test
sub
sti
out
movs
mov
inc
sbb
sahf
push
movlps
jae
std
adc
jge
inc
add
fisubr
les
jmp
jo
xor
shl
dec
ins
mov
push
push
call
imul
cpuid
int3
xchg
aam
dec
and
rol
sar
ins
inc
sub
leave
aam
shl
xchg
mov
je
sbb
and
xchg
call
dec
mov
jbe
push
scas
repnz
adc
jecxz
std
aaa
scas
adc
adc
sub
xchg
cmc
xchg
imul
mov
test
xchg
js
xor
xor
shl
(bad)
adc
unpckhps
ror
loope
(bad)
iret
add
pop
or
call
push
es
jmp
out
cmp
cmp
enter
test
aad
xchg
pop
or
mov
das
dec
mov
not
mov
add
add
mov
cmp
sub
and
xchg
mov
push
or
shr
fist
stos
in
jg
cwde
jmp
ss
xor
outs
cdq
les
stos
add
add
enter
add
ja
dec
pop
push
sub
jns
aad
rcr
stos
out
scas
int3
adc
xor
xor
xchg
iret
repnz
mov
pop
addr16
xor
or
xor
sbb
test
mov
mov
pushf
ffree
mov
movs
dec
cmp
movs
loop
neg
outs
and
push
push
outs
bound
dec
jg
outs
add
push
dec
or
sub
bswap
test
mov
xchg
retf
stos
aas
outs
sub
cmp
mov
mov
imul
std
mov
mov
dec
and
adc
pop
sub
clc
sahf
int3
hlt
mov
adc
sti
mov
jecxz
in
push
pop
or
(bad)
xchg
repnz
jge
jo
ror
xor
push
sub
and
adc
mov
pop
or
mov
mov
adc
add
mov
push
adc
les
test
jne
sub
sub
pop
test
je
jnp
dec
add
add
sar
popf
(bad)
out
fst
and
sar
mov
ror
mov
xchg
dec
push
lahf
fucom
iret
xchg
mov
and
cmp
and
int
call
ins
inc
sub
inc
pop
jg
jb
rcr
(bad)
ror
enter
adc
das
popa
adc
enter
xor
xor
push
xor
pop
sub
pop
inc
dec
add
mov
stos
retf
shr
adc
mov
sahf
add
pop
adc
loope
fucom
add
cmc
cmp
das
mov
xchg
inc
popa
add
mov
inc
dec
or
scas
in
stos
xchg
pop
xor
cmp
adc
repnz
fisttp
test
push
mov
ins
sbb
cmps
leave
lea
or
lea
push
loopne
mov
push
ins
mov
inc
aaa
jecxz
jmp
je
pop
adc
cmc
stos
lock
inc
leave
ror
jbe
ds
packuswb
pop
lods
adc
sub
lds
imul
inc
xor
sti
mov
mov
popf
lock
xchg
jmp
aad
jns
imul
js
jnp
aad
cld
xchg
fs
or
in
mov
pop
push
addr16
mov
mov
pop
inc
and
fst
add
aad
add
or
mov
mov
sbb
sub
loope
leave
add
outs
and
and
cli
iret
mov
mov
out
and
mov
in
inc
cdq
cli
mov
imul
jns
or
sbb
mov
jbe
lock
cdq
std
xchg
retf
or
retf
sbb
loope
iret
(bad)
fcom
int
in
mov
xchg
cmc
mov
mov
movs
in
int3
mov
pop
dec
pop
sbb
add
pop
movs
in
dec
mov
outs
mov
movs
mul
sub
add
fisttp
jp
mov
mov
sbb
push
xor
or
in
inc
cmp
xor
(bad)
adc
loope
jecxz
popa
xor
push
jg
(bad)
mov
cmp
pop
push
dec
xor
aam
fnsave
fs
jecxz
rol
inc
cmp
or
mov
mov
adc
jle
or
pop
ja
in
int3
mov
pop
push
adc
in
add
xchg
cmp
stc
shl
inc
xchg
sbb
mov
add
scas
adc
iret
repz
push
jge
data16
retf
fs
adc
adc
push
stos
cmp
jecxz
mov
inc
ja
cmp
or
jmp
lods
out
push
js
jp
dec
es
and
ss
dec
mov
popf
sbb
mov
dec
mov
out
test
adc
jbe
mov
adc
(bad)
mov
call
jb
fbstp
pop
aaa
push
mov
call
nop
hlt
push
xor
mov
fdiv
dec
or
lods
in
add
cdq
pop
push
or
std
sbb
test
fwait
cmp
push
sub
dec
or
mov
mov
add
jmp
cli
popf
fcmovb
mov
jns
mov
dec
sbb
leave
mov
mov
push
outs
xchg
icebp
mov
popa
stos
in
rcl
shr
cmps
into
and
push
push
adc
mov
and
mov
cs
fcom
fucomip
scas
cli
cmp
sahf
fcom
sbb
mov
je
push
mov
cdq
jae
ds
mov
sbb
int3
or
adc
subps
cmp
xchg
test
fdivr
pop
in
dec
test
jne
adc
sbb
mov
pop
dec
daa
jl
jns
push
cwde
ret
adc
ins
xor
mov
xchg
push
pop
xchg
mov
xchg
pop
and
xchg
xor
pop
ins
push
cmp
xor
mov
out
cmp
xlat
mov
repnz
mov
(bad)
out
push
jp
inc
jnp
inc
and
mov
sahf
push
cmp
mov
leave
scas
jecxz
movs
sbb
rol
mov
popf
push
cmp
mov
rcl
mov
fcomp
inc
lods
inc
xor
jo
pop
scas
jecxz
mov
js
push
mov
add
repnz
pop
xor
add
add
pop
push
jge
sbb
in
mov
lods
imul
push
out
aam
jmp
or
lods
ror
mov
jno
sbb
rcl
test
scas
sbb
cmps
out
fs
leave
popf
jae
pop
adc
sbb
sbb
outs
and
into
mov
mov
fwait
clc
cmp
dec
mov
lahf
stc
mov
xchg
test
push
stos
or
sbb
jnp
or
(bad)
mov
add
es
mov
jae
gs
int
cmc
sub
dec
sub
div
mov
mov
and
jmp
mov
sahf
call
loop
jl
pop
or
adc
jmp
fdivr
jecxz
mov
xchg
mov
xor
xlat
push
or
rol
mov
mov
mov
add
cli
mov
mov
movs
loop
rol
ret
fadd
jmp
test
xor
(bad)
mov
movs
cdq
and
xor
shl
push
les
dec
add
push
push
out
(bad)
leave
and
sbb
adc
fimul
mov
cmp
imul
sub
mov
mov
mov
sar
inc
cwde
out
mov
loop
mov
out
enter
pusha
xor
adc
inc
push
dec
add
pop
add
mov
mov
jns
das
outs
aaa
test
scas
iret
xor
xchg
int3
push
js
jge
jmp
lods
xchg
jbe
adc
add
cwde
pop
xor
and
jp
jmp
adc
cmp
dec
and
out
test
and
inc
(bad)
fidiv
repz
sbb
cli
sbb
adc
sbb
pop
imul
and
clc
(bad)
cmps
in
xchg
out
mov
mov
push
xchg
jb
cmp
gs
sub
inc
call
xchg
xor
sbb
xor
sub
pop
ins
add
and
cmp
fist
cmps
xchg
push
ss
mov
aas
pop
lds
imul
jmp
js
adc
ror
popf
sub
(bad)
mov
pop
inc
sub
xchg
ret
idiv
pop
xchg
idiv
fadd
enter
scas
not
(bad)
cmp
mov
mov
lods
and
loope
xor
add
lods
loop
dec
sub
repnz
out
mov
xlat
cwde
cmp
aad
jo
or
mov
xlat
jge
ret
pusha
(bad)
adc
mov
mov
sahf
fld
ss
(bad)
adc
add
call
and
push
call
xchg
push
and
cmps
jl
js
cmp
pop
bound
add
adc
leave
or
pop
lods
ss
mov
stos
jmp
stos
cli
mov
xor
ins
popf
push
dec
cmp
sub
out
push
xor
icebp
xchg
aad
fldcw
test
inc
push
push
jp
inc
sub
mov
cmp
mov
sub
pop
jo
cmp
sub
out
stos
jecxz
stos
out
mov
xchg
out
and
aas
jg
push
dec
or
fstp
xchg
call
add
pop
jp
inc
(bad)
ds
xlat
pop
or
cmp
das
rol
pop
jle
add
or
push
and
or
fsub
sbb
xchg
jae
adc
add
sbb
inc
mov
ss
stos
out
test
or
sbb
dec
fisub
adc
sub
call
ror
mov
cmp
mov
call
and
stos
sbb
cli
aad
and
in
dec
sub
cmp
cmp
pop
dec
add
adc
xor
in
out
sub
sbb
mov
and
dec
mov
cmps
in
xchg
(bad)
mov
dec
and
jmp
add
or
xor
or
les
add
std
ds
shl
push
retf
stos
je
xor
(bad)
clc
movs
mov
jmp
scas
fcomp
and
or
xchg
shl
jmp
xchg
inc
pop
popa
fcom
push
out
movs
loop
pushf
inc
xor
pop
sbb
jecxz
icebp
mov
adc
jmp
int
int3
movs
aam
ret
mov
pushf
mov
mov
iret
scas
iret
add
in
lahf
fild
lods
mov
call
in
or
mov
mov
pop
por
dec
shr
sbb
scas
cmp
or
sti
mov
xor
sub
loope
dec
pop
cmp
(bad)
scas
fdivrp
retf
sbb
xchg
sbb
xlat
mov
not
ins
aaa
inc
call
add
dec
sub
mov
cmp
inc
cwde
lock
(bad)
mov
add
stc
mov
sub
sub
push
pop
push
adc
call
aaa
jne
in
test
sbb
into
fnstenv
(bad)
out
movs
stc
push
inc
pop
xor
(bad)
out
pushf
jne
push
adc
cmp
mov
xchg
push
jb
sub
in
fadd
adc
push
dec
rcl
dec
scas
add
pusha
sar
mov
cdq
pusha
bound
adc
or
enter
inc
stc
push
xchg
cwde
pop
pushf
icebp
xchg
inc
popa
or
mov
pop
cli
cmp
mov
sub
xchg
rol
enter
cld
sahf
leave
sub
mov
jge
loop
les
jae
cmc
sub
adc
test
test
int3
mov
ins
push
and
jmp
lods
(bad)
jecxz
into
mov
pop
and
add
sub
sbb
jnp
ret
jmp
nop
push
fild
mov
stos
or
pop
ds
in
mov
scas
add
dec
movq
fadd
fwait
add
and
dec
popf
fiadd
mov
or
adc
or
mov
sub
mov
not
push
mov
aaa
dec
test
pusha
adc
aas
jg
repz
movs
xchg
pop
add
push
xor
loopne
mov
sahf
inc
inc
dec
sub
mov
xchg
leave
add
push
adc
cmc
test
les
push
and
cmp
(bad)
xor
test
cmps
lock
das
xchg
jmp
aaa
cwde
xlat
mov
xor
ja
(bad)
sahf
shr
enter
imul
ret
fcom
in
inc
cmp
cmp
cmps
in
mov
(bad)
int
retf
hlt
mov
dec
or
enter
popa
mov
lahf
iret
hlt
mov
hlt
xchg
cwde
out
lods
add
push
push
fnstsw
pusha
fsubr
sbb
mov
inc
shr
rol
shl
pop
push
scas
pop
inc
(bad)
xchg
jmp
test
pusha
and
mov
push
adc
int3
xor
jp
es
hlt
scas
rol
enter
mov
inc
sub
xor
cmp
sub
inc
or
fld1
mov
outs
fcmovnbe
mov
jno
ss
fisttp
and
movs
sbb
cld
mov
cmp
push
mov
ja
jno
les
mov
xor
fidivr
dec
xor
jmp
out
mov
xlat
mov
mov
pop
aas
sti
ficom
dec
mov
inc
cmp
int
out
cmp
jg
clc
mov
mov
addr16
loope
imul
icebp
adc
(bad)
int
xchg
daa
push
or
add
fstp
mov
cmc
adc
and
mov
ret
test
cmps
les
icebp
mov
iret
mov
fstp
(bad)
(bad)
ret
cwde
cld
mov
pop
push
cmp
cmp
push
daa
jle
fidivr
dec
lods
pop
adc
and
in
scas
and
sbb
or
fwait
mov
xor
or
std
mov
adc
inc
mov
test
out
mov
(bad)
fabs
xlat
mov
jmp
dec
or
adc
mov
fld
outs
pop
sbb
mov
inc
sub
rol
jns
popa
cdq
loope
loopne
mov
mov
fadd
cdq
leave
loopne
ret
xchg
aaa
jp
pop
fs
and
add
fucomi
sti
xchg
jno
push
sub
test
push
stos
push
xor
mov
and
or
mov
fidivr
test
mov
fidiv
pop
fldl2e
ficomp
nop
cmp
out
les
push
dec
inc
or
out
mov
aaa
jo
jmp
mov
in
cmc
cmps
mov
sub
jmp
cdq
adc
adc
inc
shl
idiv
mov
sahf
cld
pop
outs
sahf
xlat
jl
cmp
adc
cwde
sahf
dec
imul
(bad)
mov
push
push
adc
jecxz
mov
xchg
shl
and
inc
push
adc
xor
mov
mov
sti
mov
sahf
out
scas
add
cmp
daa
fadd
aaa
cmps
or
out
stos
fadd
fild
sbb
daa
stos
loope
(bad)
or
jg
ds
xchg
xchg
retf
xchg
jmp
add
rcl
aam
rcl
push
cmp
sub
mov
push
iret
lock
inc
pop
jmp
enter
jl
xlat
retf
add
ja
pop
xchg
adc
(bad)
adc
pop
cmps
and
jl
add
scas
pop
pop
dec
or
mov
data16
lods
sbb
sub
into
test
mov
cmp
mov
fidivr
mov
das
sahf
out
lods
pop
inc
cmp
pop
push
xor
or
mov
dec
es
sbb
xor
sub
push
or
pop
adc
adc
(bad)
mov
(bad)
mov
jno
jae
loop
lock
cmp
pop
pop
and
jbe
or
loope
jnp
dec
jno
pop
pop
mov
xor
push
push
mov
mov
mov
sar
retf
cmps
aas
arpl
inc
push
push
pop
repz
test
and
add
jmp
js
add
inc
test
sub
and
mov
cdq
in
and
cmp
aam
stc
lods
cdq
adc
out
sti
mov
sub
je
xchg
cmovb
adc
push
mov
fisttp
mov
adc
xchg
into
push
push
or
es
std
movs
xchg
jnp
not
test
ds
jmp
imul
lods
pop
xchg
rcl
mov
mov
pop
or
lds
jg
dec
xchg
sbb
sub
shr
sbb
repz
or
xor
loopne
jecxz
cmp
xchg
in
push
add
repnz
fild
add
jge
add
loopne
xchg
jno
ins
aaa
(bad)
mov
inc
daa
jmp
and
ins
dec
pop
sbb
scas
push
and
mov
std
(bad)
xchg
test
inc
mov
pop
sub
mov
call
jecxz
mov
add
mov
scas
out
mov
out
test
inc
push
dec
and
ds
dec
or
pop
ja
dec
cmp
inc
or
inc
cmp
jp
dec
adc
push
jl
sub
enter
cdq
test
sub
cmp
inc
jbe
push
test
push
xlat
sbb
cmp
ret
or
push
ins
test
inc
pop
test
jo
stos
push
push
xadd
dec
cmp
inc
ss
mov
lods
out
push
and
test
cmp
adc
mov
cld
mov
xor
sbb
call
add
pop
jne
jne
mov
inc
and
mov
mov
cs
fldcw
pop
dec
inc
or
or
call
and
scas
add
pop
add
out
lahf
jne
es
enter
sub
stc
mov
mov
js
push
cmp
mov
dec
scas
push
push
and
aad
mov
repz
daa
xlat
mov
jle
sti
enter
loopne
outs
inc
cs
ret
out
rcl
push
fwait
sbb
hlt
idiv
sub
mov
xchg
enter
sub
and
fsubr
fldenv
mov
(bad)
xchg
dec
daa
jns
int3
mov
sahf
cmp
pop
xchg
call
in
mov
dec
push
pop
cmp
jno
or
and
mov
movs
sbb
mov
mov
jl
push
dec
add
or
or
mov
movs
push
cs
imul
mov
dec
jl
push
add
stos
(bad)
mov
(bad)
loopne
daa
ins
add
push
cmp
jle
xor
pop
adc
xor
mov
aad
into
icebp
fisttp
fwait
add
jl
(bad)
cmps
jmp
retf
mov
in
cwde
cli
retf
mov
ds
adc
jae
cmp
mov
enter
sahf
sub
mov
lods
loope
lods
(bad)
mov
mov
mov
push
inc
xor
stos
fistp
scas
hlt
mov
std
cmps
repnz
ss
mov
mov
std
adc
adc
push
or
repnz
adc
jbe
pop
adc
dec
xor
jmp
shl
int
add
data16
movs
leave
or
and
mov
add
fldenv
or
cs
sbb
mov
mov
fs
or
dec
sub
addr16
jg
mov
stos
call
(bad)
fstp
imul
pop
and
cmp
xchg
test
ffree
or
sub
mul
mov
push
inc
jle
or
mov
das
mov
sub
in
int
lahf
stc
call
cmp
cmovnp
lock
xchg
jb
or
or
xchg
shl
xchg
enter
popf
les
jmp
ja
fs
mov
push
mov
fwait
enter
nop
aad
js
imul
inc
dec
or
mov
jbe
retf
mov
fild
xor
std
test
aaa
call
neg
mov
arpl
mov
mov
int
ror
rcr
mov
or
bound
mov
sbb
not
inc
and
adc
movs
clc
mov
pop
inc
aaa
pop
mov
call
and
in
stos
pusha
cmp
imul
or
xchg
ret
mov
inc
test
mov
ret
cmc
sub
pop
add
push
xor
sbb
adc
pop
inc
add
inc
add
sub
pop
sbb
imul
ja
outs
push
pop
adc
dec
push
js
jnp
fwait
jmp
clc
aad
ror
jle
xor
and
xor
pop
int
add
and
sbb
mov
fwait
rcl
xchg
aam
push
cmp
test
mov
lods
dec
pop
add
int
int
bound
popa
pop
inc
xor
mov
pop
pushf
les
jl
sbb
ror
push
push
mov
std
mov
cmc
fdivr
xlat
hlt
fst
hlt
or
je
in
jmp
cmp
enter
iret
test
dec
movs
push
inc
push
lock
outs
(bad)
icebp
leave
lea
xor
call
xchg
jo
dec
paddsw
fld
jecxz
pop
and
push
inc
push
out
xchg
out
inc
dec
or
mov
bound
sbb
add
xchg
push
add
ds
arpl
cli
bound
jmp
icebp
mul
xchg
pop
cmp
test
int3
cli
and
mov
lea
mul
and
sbb
mov
jbe
sbb
sub
call
jmp
sub
fadd
cmp
xchg
xchg
sbb
(bad)
cwde
xor
pop
mov
mov
add
and
call
sbb
int3
addr16
mov
mov
cmp
aad
leave
ja
pop
inc
es
shl
(bad)
inc
repz
ror
sar
cmp
test
inc
xor
cmps
push
dec
nop
js
mov
enter
jb
xchg
add
shl
adc
cmc
fs
add
fistp
repz
loopne
and
retf
pop
push
or
adc
mov
call
xchg
pop
mov
mov
data16
cmp
ds
cmps
sub
popa
cmp
fmul
(bad)
cli
fistp
pop
pop
rcr
and
ins
push
pop
inc
dec
ins
push
jmp
pusha
push
dec
loope
and
cmp
repz
mov
mov
(bad)
add
(bad)
in
ds
fistp
jg
or
arpl
pop
(bad)
test
test
xchg
pop
pop
mov
popf
lea
sar
loope
sbb
test
add
sub
jb
scas
cmp
jp
(bad)
xor
or
je
inc
push
stos
sub
mov
sbb
cdq
mov
add
das
mov
fwait
sbb
xchg
fild
ret
push
stos
jne
cmc
mov
movs
xchg
int3
or
mov
fist
mov
or
sub
sub
adc
int3
sub
or
dec
xchg
adc
cmp
jno
mov
std
lahf
imul
shl
hlt
or
cmps
outs
or
cmps
in
inc
mov
in
mov
leave
pop
mov
sbb
and
movs
test
je
cmps
in
jmp
into
scas
jmp
sub
push
cdq
pop
shl
into
push
in
loop
adc
ins
mov
inc
loope
push
sbb
jmp
stc
(bad)
sti
inc
shr
or
lea
or
push
aaa
std
mov
inc
xor
jbe
in
xchg
imul
aas
adc
sub
mov
int3
lock
lods
xchg
or
cs
sub
xchg
stc
call
aam
dec
mov
jns
loopne
sbb
xchg
aad
idiv
aas
sub
shl
bnd
sub
mov
in
je
out
rcl
mov
imul
sbb
lea
jb
mov
adc
sub
push
aas
pushf
pop
push
es
add
sbb
inc
fwait
or
pop
aas
dec
adc
int
loop
mov
jmp
jle
lock
ins
lea
cmps
and
lock
out
pop
mov
or
mov
sub
dec
jo
xor
ret
mul
test
cmps
repnz
xchg
push
mov
xchg
popa
sub
dec
cwde
jnp
mov
add
(bad)
aaa
jne
outs
mov
sbb
mov
dec
cmps
xor
jg
xchg
push
lea
outs
push
cdq
es
cwde
add
les
imul
or
and
(bad)
rcl
mov
pop
xor
data16
int
fidivr
pop
jne
ja
jge
sbb
or
(bad)
mov
mov
inc
or
jecxz
add
es
aam
cmp
xchg
(bad)
jle
or
inc
adc
dec
pop
push
pop
fyl2x
and
test
jge
test
stos
dec
pushf
or
or
wbinvd
call
sbb
inc
loope
outs
add
or
ins
cmc
pop
fs
jbe
lods
sub
push
cs
in
adc
shl
lods
shl
int
out
(bad)
xchg
add
pop
retf
xchg
inc
stos
mov
inc
pop
and
xchg
hlt
sbb
hlt
out
sub
or
outs
pop
icebp
jns
(bad)
aam
icebp
aad
jbe
lea
jle
aad
dec
enter
retf
ret
je
pop
pop
js
nop
push
into
push
jns
sbb
lods
adc
pop
ss
fs
mov
sub
add
fbstp
xchg
scas
rcl
out
lahf
fidiv
clc
inc
and
das
sbb
addr16
(bad)
dec
cmp
cdq
test
imul
mov
xor
push
jmp
nop
push
cmp
adc
loope
arpl
cmp
fsubr
sbb
scas
mov
xchg
aam
jb
pop
sub
fist
push
cmp
adc
outs
(bad)
sub
loopne
jle
retf
ja
fwait
xor
ror
hlt
mov
jo
gs
dec
ins
popa
mov
jmp
div
push
xchg
dec
adc
cmp
and
packssdw
js
sbb
xlat
sbb
(bad)
and
or
or
pop
push
cmp
clc
les
pop
movs
cmp
sub
arpl
out
mov
fcomp
daa
ss
mov
pop
cwde
and
lock
add
push
jp
push
rcl
test
jl
and
aad
lea
mov
mov
push
cs
push
aaa
aam
sbb
clc
jo
push
pop
jb
movd
mov
in
scas
inc
sti
ins
mov
fiadd
outs
pop
sub
jle
push
pop
and
shr
inc
mov
iret
outs
sub
cmp
xchg
mov
mov
adc
fwait
mov
enter
leave
je
mov
cs
jg
mov
ins
cmp
add
inc
arpl
inc
movs
stos
cmps
sbb
movs
jns
retf
pop
add
imul
add
pop
push
in
cmp
cmps
pop
dec
push
in
retf
inc
mov
test
lods
stos
int3
push
fmul
cmp
mov
push
and
ss
ror
cmc
ins
jg
not
push
cmp
mov
sub
sbb
mov
pop
jle
retf
mov
push
sbb
imul
pop
pushf
adc
push
sub
mov
hlt
stos
movs
xchg
sub
aas
pop
dec
jo
mov
(bad)
out
test
imul
push
mov
jmp
(bad)
arpl
setl
ret
movs
bound
sbb
xor
inc
ins
lods
xchg
push
xchg
jo
lds
ss
xor
or
adc
xor
aaa
iret
daa
dec
cmp
sahf
sbb
das
dec
aam
fld
mov
dec
add
sub
xchg
adc
iret
mov
cmp
(bad)
(bad)
and
ds
add
jbe
stos
push
jle
jmp
mov
push
xor
adc
js
lea
lods
addr16
rol
pop
adc
mul
dec
push
mov
inc
cmp
mov
jb
jnp
inc
movs
dec
add
sahf
jmp
jns
lea
xor
mov
sbb
and
outs
sbb
add
push
clc
and
lods
hlt
aas
add
lods
or
xchg
xlat
loopne
cmc
hlt
daa
pop
int3
push
imul
mov
mov
push
mov
inc
jg
mov
jns
(bad)
js
jb
push
jae
xchg
inc
movlps
popa
mov
es
xchg
or
cli
inc
js
bound
aas
xchg
push
xchg
cli
out
mov
call
inc
sub
ret
int
fistp
xor
fcomp
xchg
xlat
cmp
stc
mov
stc
or
jecxz
int3
cdq
mov
push
mov
cmp
sub
mov
xor
data16
inc
test
sub
xchg
lods
sub
cmp
push
pop
sub
(bad)
(bad)
js
sbb
ins
(bad)
and
mov
push
adc
dec
retf
ds
add
mov
jne
aas
punpcklwd
jne
dec
cmp
cmp
push
push
mov
xchg
mov
jb
scas
sub
push
cmp
test
adc
and
add
(bad)
xchg
cmps
lahf
cmp
xor
or
fmul
std
jl
retf
jecxz
pop
inc
lods
lea
adc
or
imul
or
stc
les
pop
and
mov
jb
mov
imul
bnd
inc
retf
jmp
scas
pusha
test
dec
sub
jg
les
mov
loopne
ds
inc
je
xor
je
dec
fmul
dec
mov
jecxz
push
mov
ins
mov
sti
adc
retf
into
push
test
loope
add
push
dec
cs
(bad)
imul
mov
push
popa
sbb
cmp
pusha
stos
mov
push
dec
inc
inc
xlat
lahf
sbb
mov
mov
jmp
sar
sbb
add
outs
adc
in
or
mov
fstp
mov
mov
push
pop
in
cdq
ins
add
push
or
(bad)
dec
adc
pop
jnp
das
iret
dec
out
call
fs
and
dec
ins
mov
fdivr
or
inc
mov
and
rol
shl
inc
push
dec
fisttp
jne
mov
push
adc
shl
xor
mov
add
adc
out
push
pop
retf
jno
ret
xchg
fsub
bound
and
js
push
jecxz
push
(bad)
mov
push
pop
mov
jne
lea
dec
(bad)
icebp
xor
pop
add
fimul
mov
xlat
xchg
dec
leave
jnp
lea
loop
add
jnp
xor
and
push
jae
fwait
xchg
jge
xor
iret
dec
add
xchg
or
sti
les
jmp
jmp
mov
(bad)
fsub
bound
pop
jecxz
pop
sub
cld
dec
adc
lods
or
inc
stos
es
dec
sbb
push
pop
es
fptan
sub
cmp
xchg
cmp
xchg
and
jb
and
cs
outs
cmp
pop
mov
jne
stc
jo
hlt
ret
pop
out
inc
dec
int3
pop
push
push
push
mov
or
outs
mov
cs
mov
sbb
jae
aaa
fnsave
hlt
dec
pushf
aad
mov
aad
idiv
in
(bad)
mov
into
and
cmp
pusha
leave
or
cmp
sbb
adc
xchg
pop
push
ds
sub
cwde
pop
or
cmp
scas
dec
icebp
retf
xor
pop
shl
pop
(bad)
jo
dec
movs
sub
dec
cwde
sbb
cli
mov
mov
sbb
retf
and
mov
inc
sahf
sbb
add
(bad)
repz
out
ja
add
add
daa
ror
inc
iret
jne
mov
cwde
jecxz
xchg
call
bound
ss
mov
and
sahf
push
fs
aam
cs
(bad)
fdivp
fwait
adc
xlat
repnz
sub
mov
sbb
inc
repz
add
sub
in
out
xchg
mov
jmp
imul
into
jl
cmp
and
mov
ins
mov
stc
mov
mov
pop
lods
into
sbb
mov
xor
cmc
shl
inc
mov
cld
and
mov
sbb
pop
daa
jle
fisttp
mov
ins
cdq
test
movs
adc
nop
mov
popf
push
cdq
and
jl
push
lahf
std
or
xchg
mov
pop
mov
test
xor
and
dec
std
icebp
add
test
xchg
lahf
push
xor
retf
ss
loopne
mov
pop
mov
mov
mov
mov
sahf
hlt
jbe
adc
mov
out
test
aad
mov
mov
call
pusha
rol
mov
fwait
(bad)
hlt
mov
jmp
dec
clc
pop
in
nop
movs
cdq
retf
out
arpl
fwait
shr
adc
xor
sbb
out
jmp
pop
jmp
fisubr
mov
sbb
push
xchg
or
fiadd
or
movs
dec
rcl
mov
sub
jle
push
int
jne
add
lods
je
inc
out
cs
push
pop
pop
bound
cwde
lods
shl
sub
ja
call
sbb
adc
cmp
jnp
movs
arpl
sbb
out
inc
cmp
mov
mov
sti
ja
pop
adc
jp
pop
cs
repz
push
add
xchg
adc
push
in
mov
adc
jecxz
ret
jge
jns
push
dec
push
enter
in
pop
imul
mov
out
retf
addr16
movs
xchg
inc
adc
adc
jmp
push
dec
mov
cmp
dec
test
pop
out
mov
fs
aad
mov
sti
or
div
and
add
imul
mov
jno
cmps
cwde
std
dec
cmps
call
(bad)
cmp
test
xchg
mov
sub
rsqrtps
xor
ja
lock
test
test
and
test
cwde
pop
loope
xor
in
in
mov
bound
repz
scas
sub
dec
mov
jl
aas
mov
ins
gs
inc
adc
in
jecxz
cmps
mov
mov
dec
or
inc
xchg
pop
ss
aas
or
repz
xlat
adc
xor
call
adc
inc
xchg
adc
aaa
fld
leave
inc
(bad)
call
clc
test
fwait
add
mov
push
sbb
add
clc
push
jb
pop
pop
xor
clc
cmp
pushf
mov
or
or
xchg
addr16
push
jp
sbb
sar
sbb
cmp
lock
mov
movs
sub
push
popa
pop
xor
sbb
outs
in
mov
push
cwde
(bad)
adc
imul
je
pop
loope
and
jmp
in
(bad)
jnp
data16
mov
sub
jae
xlat
ret
xor
or
mov
cld
cmp
jge
adc
outs
pop
push
ins
mov
jge
leave
idiv
retf
cwde
fs
retf
mov
(bad)
xchg
lahf
retf
into
mov
adc
ret
pop
adc
xor
das
sbb
and
imul
xchg
out
inc
test
std
add
(bad)
pusha
mov
fimul
(bad)
xlat
push
je
inc
mov
adc
arpl
ret
mov
iret
fistp
cmp
fmul
aaa
and
xchg
fs
or
adc
mov
push
push
aas
(bad)
mov
movs
out
dec
mov
cmps
mov
xor
xchg
add
mov
mov
xchg
in
push
mov
jnp
dec
mov
inc
cld
mov
xchg
pop
aaa
jo
push
(bad)
jb
add
fucom
(bad)
or
xor
scas
imul
xlat
ds
fnsave
popf
fisttp
ret
shl
imul
pop
fdiv
xchg
rcl
sti
int3
jge
fsubr
sub
xlat
xlat
stos
jecxz
stc
cmp
les
mov
jmp
cmpps
sti
inc
mov
xor
int
out
mov
sub
sbb
jl
cmp
xor
push
ss
(bad)
push
sbb
cmp
rol
or
je
adc
xchg
push
stos
(bad)
xchg
push
xor
mov
enter
sub
cmp
std
cmp
lods
loope
imul
in
cmp
jb
lods
sub
xchg
add
clc
mov
js
bnd
nop
or
inc
test
stc
fnop
mov
es
xlat
jno
add
ins
mov
fmul
clc
push
or
imul
leave
in
push
adc
dec
int3
lods
pop
dec
enter
mov
jp
imul
sub
push
jne
sbb
mov
(bad)
mov
mov
daa
and
(bad)
sbb
jb
ror
jne
cmp
cs
cs
jp
cmps
out
and
das
loop
repz
jge
hlt
sub
mov
pop
dec
sub
cmp
fs
les
inc
or
mov
bound
mov
movs
(bad)
xor
adc
ret
cmp
lods
jp
push
or
inc
sub
add
and
dec
inc
in
imul
scas
mov
dec
lea
gs
in
call
push
or
movs
fldenv
mov
out
iret
lea
inc
jb
jmp
mov
adc
mov
je
out
sti
out
std
mov
mov
fstp
lods
shl
cmc
adc
sbb
inc
pop
aas
jno
ss
ss
movs
(bad)
fmulp
cmp
(bad)
mov
sar
mov
or
(bad)
in
dec
push
push
xchg
sub
pop
jl
test
les
sbb
cwde
xchg
out
ret
ret
cmps
inc
ret
ins
sub
mov
mov
(bad)
retf
mov
inc
mov
test
jge
jne
or
test
sti
gs
mov
hlt
mov
daa
adc
int3
jae
fwait
jbe
adc
cdq
pop
inc
mov
adc
in
mov
add
inc
stc
movs
sti
out
shl
sahf
jno
inc
pusha
dec
hlt
enter
inc
push
int3
icebp
hlt
idiv
out
pop
add
fdiv
iret
sbb
fiadd
add
or
push
fstp
push
pop
sub
out
clc
xchg
add
icebp
aas
das
sub
sub
je
mov
pusha
int3
add
popa
jg
sahf
int3
mov
or
out
mov
push
shl
dec
cmp
loopne
mov
loope
(bad)
clc
cld
xchg
jmp
mov
and
mov
add
test
inc
sbb
cwde
pop
mov
or
xchg
xchg
outs
shr
minps
aaa
dec
jbe
je
les
xlat
bnd
pop
pop
mov
mov
sub
mov
or
mov
dec
or
outs
pop
push
test
leave
or
imul
xor
ins
or
inc
jp
popf
repnz
in
mov
int3
loope
ja
lods
push
outs
inc
ja
push
out
aam
outs
pop
or
jne
std
sbb
or
retf
push
cli
popf
cmps
or
stos
fisttp
mov
or
fld
xchg
mov
mov
inc
stc
test
gs
rcl
shr
xchg
popa
ror
pop
and
pushf
sub
xor
in
push
jo
xchg
mov
in
push
dec
dec
inc
sub
mov
inc
xchg
dec
adc
in
std
sbb
fadd
push
push
scas
pop
arpl
xor
test
enter
push
dec
inc
hlt
bound
repnz
pushf
xchg
in
jg
add
xchg
data16
or
sbb
ret
mov
and
mov
mov
dec
retf
cmp
mov
adc
push
inc
movs
mov
push
push
and
out
ffree
ret
loope
or
int
retf
push
inc
mov
out
xchg
mov
push
sub
lods
rol
das
pop
inc
add
xor
push
aaa
and
retf
fsub
js
dec
iret
adc
(bad)
(bad)
jnp
ret
inc
and
pop
inc
sahf
stos
xor
cmp
fisubr
mov
sub
repnz
push
retf
sub
bound
(bad)
mov
bound
jl
dec
xor
pop
(bad)
movs
or
sbb
nop
into
mov
sti
xor
cld
mov
sar
imul
(bad)
enter
mov
pop
sbb
and
test
adc
mov
xchg
aad
mov
push
sub
pop
loop
outs
mov
inc
inc
xchg
xor
cmp
sti
push
cmp
add
mov
enter
xchg
lds
sub
and
pop
cdq
nop
enter
icebp
mov
xchg
ins
pusha
sub
pop
stos
stos
push
divps
jge
inc
or
cmc
dec
and
push
or
push
sar
pop
call
fldcw
inc
inc
out
stc
icebp
outs
cmp
rcl
(bad)
out
outs
inc
dec
(bad)
push
dec
jno
leave
inc
sub
in
test
xchg
gs
sar
push
or
(bad)
jge
cmc
mov
cmps
aam
bound
jecxz
jle
test
pop
adc
call
clc
inc
push
pushf
stc
cdq
nop
pop
call
fisubr
jmp
dec
push
push
rcl
hlt
test
xchg
jo
dec
pop
pop
pop
jo
jbe
inc
xchg
and
dec
cmp
push
push
and
xchg
gs
jo
aaa
push
add
dec
jbe
icebp
mov
cmp
test
xor
push
jne
push
xor
push
jae
lods
mov
sbb
fst
and
jg
outs
or
add
in
int3
fucomp
fs
das
push
push
popf
iret
dec
cmp
pop
sbb
xor
mov
loopne
dec
into
sub
jmp
xchg
ja
xchg
repnz
fmul
cmp
pop
and
bswap
out
dec
call
fmul
(bad)
rol
jmp
js
shr
cli
xchg
mov
fbld
sbb
cmp
and
add
and
sbb
fild
repnz
stc
push
mov
push
in
and
cli
in
daa
pop
and
xor
push
pusha
jmp
jbe
out
out
adc
cmp
cwde
jno
xor
or
aaa
clc
test
iret
pushf
inc
into
xchg
xchg
cdq
cmps
adc
(bad)
jne
push
fld
pop
jae
add
rep
stc
ret
add
cmp
sub
mov
jne
mov
inc
mov
or
push
inc
xchg
adc
dec
and
mov
adc
movs
jle
scas
xlat
inc
jnp
jnp
test
jo
aaa
sbb
push
stc
lds
push
out
fidivr
xchg
xchg
imul
mov
push
mov
iret
ja
pop
adc
cmp
bound
jecxz
in
cli
add
inc
loope
rcr
mov
sub
pop
jle
mov
jbe
mov
inc
shr
jge
xchg
mov
outs
or
fadd
dec
adc
ret
fcmovne
push
adc
mov
lahf
mov
pop
cmp
mov
xor
cmp
ja
jl
or
hlt
cld
xchg
mov
daa
call
mov
sti
(bad)
pxor
jl
(bad)
mov
jo
jg
xchg
das
mov
sub
sub
inc
pop
sub
mov
mov
inc
retf
jne
das
outs
retf
fld
shl
lods
icebp
adc
push
fwait
int
xchg
arpl
and
loop
popf
out
mov
xor
pushf
outs
(bad)
and
mov
sahf
movs
pop
xlat
movs
xor
pop
ret
mov
jo
xchg
mov
fcom
jl
lods
cli
and
(bad)
imul
inc
mov
inc
leave
push
push
mov
fisub
cmp
xchg
add
xchg
adc
sar
out
ror
sar
loop
xor
lock
xor
inc
sar
push
jmp
mov
test
xor
push
stc
pop
lds
xor
mov
std
mov
fsub
xchg
outs
mov
loope
dec
jae
ret
jg
xor
cld
shl
in
cli
ffree
lods
dec
nop
xor
jb
scas
lock
int3
and
or
push
xchg
mov
mov
sahf
add
sbb
movs
fmul
mov
fwait
or
ds
xchg
fmul
mov
xlat
sbb
sub
std
xor
scas
call
inc
sbb
cmp
dec
out
movs
je
inc
fwait
jg
mov
inc
shl
mov
push
ins
sub
push
out
ds
call
nop
push
jge
jmp
dec
mov
addr16
shl
movs
adc
scas
sar
adc
xchg
inc
pop
sahf
add
lahf
pop
shl
pushf
ror
xchg
out
cmp
sub
pusha
mov
mov
or
mov
dec
inc
js
mov
ins
retf
mov
mov
or
cmp
inc
cmps
mov
xchg
and
jmp
cmp
(bad)
cmp
mov
xor
mov
add
jbe
in
mov
ins
int
lds
pop
loop
sub
cmp
sub
cmps
out
mov
stos
add
aam
sub
dec
mov
sbb
imul
adc
xchg
stos
jecxz
out
iret
hlt
mov
jg
int3
adc
std
cdq
cs
outs
mov
mov
xchg
inc
les
inc
xchg
arpl
adc
out
mov
pop
hlt
push
inc
pushf
mov
aaa
dec
loopne
test
add
or
aaa
fld
or
mov
or
retf
adc
in
inc
jns
in
pushf
mov
fwait
sbb
mov
ins
jmp
xor
out
sub
or
sbb
xchg
or
mov
ins
bound
mov
or
push
xor
outs
addr16
cmp
pusha
lds
adc
lods
mov
xchg
cmp
mov
cmp
mov
sbb
retf
cmp
mov
mov
sti
jns
pop
fnsave
stos
frstor
packuswb
mov
popa
pusha
lods
stc
iret
(bad)
push
cdq
int3
int3
inc
push
xchg
sbb
mov
popf
jge
js
cs
movs
push
and
dec
jmp
call
repz
enter
sub
addr16
jne
int3
or
je
std
adc
or
out
cwde
out
push
popf
xor
mov
ins
dec
outs
ja
jae
cmps
fstp
mov
push
xor
jb
xchg
ret
cmp
dec
sbb
test
gs
movs
lds
lahf
scas
jnp
ror
jmp
sbb
xor
sub
mov
imul
push
dec
sbb
test
test
pop
lea
sbb
rol
cwde
sbb
pushf
movs
enter
adc
(bad)
mov
xchg
jecxz
mov
mov
ror
mov
inc
xor
push
cld
ja
mov
rol
push
dec
xchg
out
pop
push
shl
int3
sub
cmp
out
sbb
pop
or
dec
icebp
imul
fstp
fst
xchg
adc
rcl
mov
cld
mov
inc
bound
sbb
mov
loope
scas
ja
(bad)
int
movs
xchg
adc
cmp
mov
aad
adc
ss
mov
mov
cmp
imul
rcr
scas
lea
icebp
and
mov
int3
ins
bound
gs
fwait
call
cdq
mov
call
leave
retf
mov
cmps
std
jae
stc
clc
out
test
loop
mov
dec
push
xchg
aas
push
cdq
mul
mov
mov
fcomp
fldcw
stos
ret
pop
or
arpl
sbb
call
into
jno
push
addr16
dec
pop
cmps
test
shl
jns
sbb
inc
mov
adc
push
addr16
mov
jo
xchg
or
clc
sub
fcmovnbe
mov
jecxz
or
mov
add
xor
push
fwait
mov
push
push
retf
into
mov
xchg
mov
in
cmp
cmp
rcl
ins
int3
(bad)
aas
jae
clc
sub
add
mov
fcom
cmp
push
cwde
xor
mov
mov
mov
mov
cmp
mov
(bad)
dec
lods
and
out
and
kmovb
push
out
scas
cmp
sbb
stos
or
xchg
loopne
in
mov
adc
stos
or
adc
xlat
xchg
popa
pop
addr16
xor
shl
or
(bad)
jmp
imul
stc
jg
jmp
sbb
jnp
fcom
cmp
mov
xchg
push
adc
jle
ja
adc
cli
call
fs
(bad)
lods
pushf
jmp
mov
mov
(bad)
xor
push
repnz
fwait
bound
sbb
push
popf
into
gs
xor
ss
rol
push
mov
lock
les
stc
sbb
retf
push
es
inc
pop
repz
jge
mov
(bad)
jp
mov
aaa
sub
and
push
or
mov
jo
dec
dec
std
push
dec
pop
imul
lahf
cmp
aaa
dec
inc
push
jae
add
js
int3
or
pop
(bad)
pop
jb
or
xchg
push
xchg
lea
mov
fadd
mov
push
loop
push
aam
rcl
jns
adc
into
icebp
out
stc
jno
push
pop
ds
sbb
mov
aam
mov
in
imul
pop
rcl
and
cmp
lods
dec
mov
mov
cmp
add
adc
cld
(bad)
adc
ja
ret
sbb
xchg
test
in
lods
stc
jg
lea
test
dec
dec
ja
pop
pop
dec
les
mov
xor
out
gs
xlat
mov
fcmove
xor
ins
lods
dec
cdq
nop
jo
push
inc
mov
sar
jecxz
sub
cmc
rcl
sbb
gs
xor
fld
aaa
mov
je
out
xchg
adc
jle
push
mov
repz
popa
ret
nop
into
sbb
sub
cmp
cmps
addr16
aaa
xor
retf
popa
js
jb
and
(bad)
mov
sub
(bad)
inc
out
push
fmul
and
pop
fstp
or
xchg
push
dec
dec
ficomp
pop
xchg
lods
push
dec
retf
(bad)
std
jo
mov
inc
sbb
in
repz
push
and
sar
sbb
jns
push
ins
int3
jnp
jne
loope
mov
bound
into
es
and
mov
leave
mov
fisttp
or
out
jge
adc
in
bnd
ror
loop
stos
pop
add
or
add
or
jbe
cmps
push
inc
in
retf
pop
cld
test
add
sahf
push
ror
push
xor
outs
shl
push
outs
lock
dec
ret
mov
xchg
fisttp
popa
add
push
ror
xchg
in
add
outs
xchg
pushf
and
pop
push
xchg
push
xor
push
sbb
cmp
xor
push
bound
cmp
sub
cmp
push
movs
int3
int3
sub
push
inc
cmp
div
sbb
cld
adc
fistp
lds
ss
push
inc
mov
pushf
pop
dec
mov
lds
mov
sbb
sub
test
pop
repz
push
mov
jl
mov
bound
jecxz
and
mov
clc
mov
es
jb
adc
push
(bad)
lea
aam
retf
das
jl
mov
cmc
aam
sub
outs
fstp
scas
(bad)
sar
pusha
and
adc
sti
push
push
outs
loope
xor
daa
jnp
xor
int3
addr16
cld
(bad)
out
pop
fmul
xor
jns
mov
push
pop
popa
and
sti
xor
shl
inc
stos
ret
sar
add
popf
ins
xchg
push
sbb
pop
aad
das
pusha
outs
in
jbe
repnz
adc
ret
xor
xor
test
mov
sub
mov
das
jbe
adc
dec
mov
inc
fistp
cmp
ja
(bad)
jg
and
jecxz
inc
repz
stc
mov
push
dec
and
ret
nop
pop
xchg
test
xor
and
ror
stos
sar
(bad)
cdq
outs
push
ss
sbb
(bad)
pop
addr16
cld
cmc
(bad)
xchg
dec
xchg
retf
movs
lahf
xor
pop
xor
push
fistp
sbb
icebp
mov
inc
sub
stos
call
clc
xchg
xchg
jnp
shl
adc
fs
loope
jl
xor
or
sar
push
int
adc
sub
rcr
fiadd
into
clc
push
or
sahf
push
mul
mov
nop
scas
frstor
xor
aas
pop
xlat
jo
mov
(bad)
mov
sar
loope
pop
rcl
add
rcr
jns
arpl
or
jecxz
jmp
push
and
and
mov
pop
paddusw
dec
std
stc
hlt
test
daa
fimul
imul
retf
mov
jmp
ror
dec
adc
pop
mov
cmp
push
cmp
test
add
ss
push
frstor
inc
iret
adc
xchg
sbb
popa
out
mov
inc
xchg
loope
cmp
mov
loopne
pop
lods
(bad)
lock
rol
gs
es
not
in
mov
mov
inc
retf
stos
mov
jecxz
std
jmp
xor
ret
mov
mov
xchg
sbb
cli
imul
pmaxub
aas
xchg
dec
cld
jmp
jg
int3
pushf
mov
stos
sub
and
ss
cmp
inc
xor
pop
adc
hlt
clc
repnz
dec
push
jge
jecxz
pop
data16
arpl
inc
pop
mov
add
lahf
repz
mov
clc
lea
rcl
add
and
daa
loope
dec
cdq
mov
xchg
xchg
pushf
in
mov
adc
pop
sbb
sub
pop
cmc
jmp
jbe
addr16
and
mov
xor
xor
mov
ret
or
cmp
sub
sar
cmp
aam
cmc
fidivr
xlat
mov
cmp
stos
mov
outs
imul
mov
test
inc
xor
mov
rcr
test
mov
bnd
call
and
mov
test
frstor
(bad)
jnp
daa
inc
pop
pop
retf
mov
jae
ja
leave
xchg
jmp
pop
test
and
push
test
pop
mov
pop
inc
adc
mov
pop
mov
cmp
enter
jns
stc
adc
call
cmp
sbb
pop
mov
retf
shr
fs
stos
jnp
sbb
test
lods
mov
test
pop
jae
adc
leave
data16
push
push
movs
ins
rol
xor
(bad)
sbb
ds
lock
int3
cdq
mov
out
in
lds
sub
int
in
das
or
xor
sub
push
mov
jge
mov
mov
into
cli
fcomp
jmp
(bad)
repz
inc
jle
fcomp
shl
aam
jl
rcl
or
or
ja
mov
jne
int3
mov
mov
push
mov
and
cld
sbb
movs
and
std
pop
mov
adc
call
sar
jp
mov
fnstsw
sar
retf
inc
inc
xchg
pop
inc
add
dec
movsx
outs
or
adc
std
(bad)
sbb
mov
cwde
xchg
mov
bound
lock
xchg
xchg
mov
lods
pop
loopne
pushf
fcmovnb
and
xor
data16
xchg
aaa
xchg
cmps
pushf
xor
and
and
pop
mov
add
sub
jo
(bad)
(bad)
arpl
or
sub
arpl
mov
clc
(bad)
mov
test
scas
mov
retf
inc
shl
retf
push
mov
mov
fcom
jo
fldcw
and
ja
add
das
ret
and
fst
mov
mov
push
dec
sbb
lods
push
inc
mov
fdiv
sub
jecxz
popf
in
leave
or
repnz
push
inc
loope
test
xchg
add
and
inc
call
sub
ret
mov
fimul
sti
jns
jne
sub
xor
pop
cld
out
sub
mov
mov
in
add
adc
dec
ja
lock
mov
aas
ins
retf
mov
mov
lds
xor
retf
retf
push
outs
sbb
fld
xchg
sahf
push
pop
pop
ja
jmp
mov
xor
in
inc
sbb
push
into
sbb
add
int3
pop
dec
jg
sbb
sub
push
daa
out
sbb
xchg
cmp
mov
mov
sub
jl
pop
push
in
mov
ins
(bad)
dec
(bad)
pusha
int
mov
movs
(bad)
pushf
sar
rcl
jne
sbb
jo
adc
(bad)
xchg
pop
sbb
pop
cmps
icebp
rol
jg
jae
sub
lock
cmp
cli
test
or
sbb
adc
jmp
xchg
cmp
jmp
mov
lods
jge
inc
ss
fidivr
fnstenv
mov
cmps
inc
pop
data16
mov
(bad)
jmp
pop
mov
xor
xor
fs
scas
sbb
xchg
xor
add
aad
fnstenv
xor
dec
pop
jb
lea
fistp
loopne
and
rol
pop
test
pop
jo
push
or
mov
xor
jle
push
leave
and
push
adc
(bad)
fwait
shl
ins
icebp
inc
and
movs
std
(bad)
(bad)
adc
test
arpl
cs
int
lock
out
and
mov
push
push
sbb
jmp
mov
out
jno
adc
jnp
je
sub
adc
dec
xchg
xor
add
aas
xor
jl
adc
bound
stc
cmp
cmps
mov
push
mov
add
xchg
xor
loop
loop
push
fisttp
mov
cs
ror
rcr
pop
ins
pushf
lods
movs
cmp
cli
add
out
ss
mov
inc
icebp
sti
loop
jnp
push
hlt
pop
inc
jno
dec
jae
push
pop
cmp
mov
lds
loop
mov
jnp
sub
push
add
(bad)
enter
sti
fcom
push
adc
loopne
fldcw
pop
xchg
jns
lods
fnsave
and
mov
rcl
retf
call
call
int
lock
ret
retf
sti
retf
mov
pushf
dec
iret
in
lahf
in
sbb
lahf
nop
cmp
xchg
jno
bound
or
or
jmp
or
ss
xlat
mov
xchg
es
fistp
pop
or
mov
mov
retf
mov
mov
ror
imul
out
lahf
addr16
push
aad
add
nop
je
mov
ret
lea
lock
jns
stos
out
fisubr
cmp
cmps
repz
lea
dec
lahf
scas
push
dec
ins
cmp
ss
mov
repnz
xchg
push
call
pop
xlat
cmp
cli
push
sub
push
fidiv
mov
xchg
or
jno
add
mov
jmp
(bad)
push
cmp
rcl
mov
mov
ins
and
fcmovne
fdivr
add
and
(bad)
iret
stos
adc
sub
jbe
ret
outs
cld
ja
xor
mov
add
mov
lods
pop
push
adc
daa
retf
sub
aam
and
ret
add
int3
sbb
adc
shl
push
mov
lahf
mov
ja
enter
call
or
jecxz
xchg
xlat
mov
pop
lahf
dec
sub
jecxz
cmp
lods
cmps
dec
jo
inc
and
adc
mov
cwde
lahf
jp
ror
sub
dec
movs
push
lods
int3
or
push
retf
into
ja
cdq
sbb
jmp
push
or
mov
inc
xchg
dec
and
adc
outs
(bad)
iret
outs
int
jo
fsub
iret
loop
enter
outs
jmp
inc
xchg
idiv
cli
mov
xor
bound
mov
pop
ja
sbb
inc
dec
and
jp
add
adc
push
inc
adc
add
xchg
push
add
je
pop
pop
jns
popa
add
es
add
inc
add
push
adc
add
inc
add
inc
or
jo
cwde
cld
xchg
leave
or
aam
into
mov
stc
mov
cli
mov
sar
mov
mov
iret
scas
in
rol
mov
add
push
push
inc
or
pusha
or
add
imul
xchg
rol
cmp
xor
sbb
xchg
shr
push
pop
or
nop
ret
and
sub
inc
mov
xchg
jl
enter
shl
loope
fsub
clc
mov
outs
mov
push
inc
cli
push
lods
shr
pop
pop
pop
xchg
pop
or
lock
scas
leave
sub
or
jmp
ins
xor
ds
ror
out
pop
ins
add
cmc
jecxz
cmps
push
push
cmp
(bad)
mov
jo
sub
fnstcw
cmp
ret
out
lahf
sbb
dec
stos
push
pop
xor
cli
mov
push
xchg
arpl
loop
(bad)
sub
push
add
stc
mov
xor
pop
dec
sbb
icebp
jecxz
test
and
and
mov
inc
xchg
es
je
push
xor
icebp
mov
push
popf
push
or
jmp
cwde
inc
jnp
add
sbb
stc
adc
xchg
mov
je
cmp
adc
shl
stos
aam
rcl
mov
dec
jmp
mov
jo
jg
jp
push
cmp
jns
pop
mov
sub
hlt
ss
add
es
in
mov
mov
call
int3
cmp
and
shl
sahf
xchg
jp
es
xchg
je
imul
dec
mov
scas
mov
cmp
sbb
mov
dec
push
outs
cmp
pop
dec
and
imul
push
push
push
cmp
dec
cmp
dec
add
add
jg
cmp
pop
adc
inc
push
outs
and
adc
ja
push
adc
dec
and
into
xchg
out
aam
iret
pushf
shl
ret
mov
scas
call
mov
xchg
xlat
fld
(bad)
xchg
fistp
shl
loop
lock
in
mov
in
movs
sbb
or
and
bound
push
push
cmp
cmp
sub
inc
add
inc
add
push
pop
inc
xor
push
dec
pop
popa
and
push
add
pusha
sub
xor
popa
cmp
imul
and
jno
inc
add
inc
add
push
pop
inc
xor
pop
push
dec
push
outs
and
and
dec
push
dec
add
dec
add
outs
aas
jl
push
cmp
pusha
add
or
dec
daa
push
adc
jp
push
adc
bound
or
jae
arpl
pusha
pop
adc
pop
push
inc
xor
add
pop
dec
add
inc
or
jne
sbb
pop
aaa
inc
add
push
sub
popa
and
pop
cmovg
dec
or
pop
add
dec
adc
cwde
repz
movs
clc
pushf
fcomp
fild
leave
mov
cmps
rol
(bad)
in
lods
in
cmps
int
cli
mov
sti
test
add
xchg
les
std
nop
loop
lock
in
scas
(bad)
mov
imul
mov
and
xlat
xor
xchg
leave
lods
in
ret
sbb
jecxz
ret
mov
loopne
enter
mov
stos
out
rol
jecxz
in
xor
loopne
leave
mov
pop
or
outs
aaa
push
cmp
ss
push
pop
adc
jp
push
adc
bound
or
push
ss
dec
cmp
push
push
xor
jle
pop
push
push
add
or
ins
pop
aaa
jnp
cdq
in
mov
shl
shl
sbb
jnp
dec
or
sub
jns
push
or
cmp
not
pushf
loop
lea
adc
(bad)
sbb
loopne
ja
call
push
fs
and
adc
mov
(bad)
mov
mov
cdq
fld
repnz
pop
sbb
ds
in
pop
outs
das
and
in
movs
clc
pop
cdq
int
mov
and
pop
xchg
(bad)
(bad)
push
inc
adc
fadd
lods
retf
adc
outs
adc
stc
xchg
iret
adc
ret
xchg
mov
pop
dec
das
xor
in
cmps
mov
jo
add
in
mov
push
and
push
mov
lock
push
mov
jg
xor
or
jmp
maxps
sub
addr16
push
fistp
pop
pop
enter
xor
inc
cld
cmp
sbb
in
sbb
jg
cmp
icebp
jns
pop
ds
(bad)
mov
jge
cmp
cmps
jle
add
movs
push
adc
xor
pop
xchg
sub
xlat
xchg
fistp
mov
mov
xchg
xchg
pop
mov
lea
dec
nop
cmc
cdq
pop
jnp
dec
xchg
sub
or
int
outs
mov
mov
cmova
out
test
inc
mov
sbb
adc
or
cmp
mov
add
sub
mov
and
mov
xor
add
cmp
or
and
lahf
enter
mov
cwde
jmp
or
mov
out
out
ret
mov
cmp
add
dec
sub
pop
xor
pushw
jno
jne
jnp
dec
or
adc
xor
push
pop
pop
jg
push
adc
pop
sbb
push
adc
bound
or
cdq
cld
xchg
enter
xlat
xchg
shl
mov
mov
ret
mov
xchg
(bad)
lahf
cmc
xchg
call
shl
shl
jmp
retf
(bad)
test
sahf
rol
mov
xchg
cmps
mov
into
mov
sahf
fistp
aam
push
lock
loopne
xor
clc
movs
sbb
sub
jb
bound
fs
cs
xor
sub
push
add
push
add
inc
add
dec
add
imul
add
je
push
sbb
or
outs
sub
dec
cmp
sub
pop
jns
popa
and
sub
push
add
inc
cmp
dec
cmp
push
push
fs
jg
popa
add
jae
inc
add
jns
jp
jp
cdq
in
mov
fidivr
scas
(bad)
mov
jmp
mov
mov
cmps
in
mov
fst
repnz
loop
lock
(bad)
aam
mov
jmp
call
inc
push
pop
sub
sbb
pop
push
or
dec
add
jge
cmp
pop
adc
dec
adc
sub
inc
or
cmp
dec
sub
jns
pop
cs
sub
jle
push
cmp
jns
push
xor
outs
sub
jp
push
adc
cdq
leave
mov
fst
fbstp
out
lahf
stc
mov
lds
in
fcomp
retf
xchg
sbb
js
popa
and
dec
push
imul
jl
js
dec
or
inc
pop
pop
push
dec
das
arpl
ins
and
fs
outs
add
push
daa
jo
cdq
fidivr
ret
mov
pop
pop
or
inc
sbb
pop
cmp
sub
cli
idiv
mov
inc
mov
adc
mov
movs
push
in
test
inc
ror
push
out
mov
mov
icebp
ins
rcl
test
cmp
dec
adc
cli
xchg
test
sub
loope
xchg
xchg
adc
aaa
inc
in
sbb
das
cs
mov
jb
sub
add
jb
rol
cmps
rol
mov
cwde
inc
jl
add
push
cmps
jecxz
call
mov
xchg
and
sbb
jmp
int
mov
dec
sbb
sahf
push
addr16
xor
mov
adc
ja
xor
jmp
push
add
clc
mov
clc
adc
cmps
mov
addr16
mov
inc
xor
mov
ja
push
push
or
cmps
jecxz
dec
mov
outs
mov
push
xchg
jl
lock
xlat
mov
imul
loope
mov
ins
mov
jbe
adc
loopne
lods
push
xor
(bad)
cmc
mov
ds
sbb
pop
stos
enter
imul
adc
fst
pop
mov
push
cld
inc
test
cs
push
and
xor
aam
mov
mov
lds
inc
or
and
dec
adc
push
mov
fwait
(bad)
fld
(bad)
cdq
dec
add
shl
add
add
out
and
cmp
in
lock
in
mov
enter
(bad)
lods
loop
out
out
shl
xchg
(bad)
xchg
(bad)
fadd
mov
in
sahf
fild
cmp
push
adc
pop
xor
jnp
jge
cdq
in
mov
retf
stos
out
rol
fst
rcr
lods
out
pop
lods
in
test
dec
or
dec
or
js
dec
cmp
fisttp
mov
mov
cmps
(bad)
movs
in
out
test
mov
xchg
aad
add
shl
in
in
mov
sbb
pop
push
jbe
inc
adc
jns
push
aas
jb
outs
push
pop
sbb
pop
push
adc
ds
push
push
and
in
mov
cmps
out
retf
movs
jmp
cmp
cli
mov
mov
(bad)
mov
out
jmp
rol
ret
mov
popf
loope
leave
xchg
rol
scas
out
mov
xchg
cmps
mov
iret
xchg
aam
cli
cwde
enter
call
mov
mov
scas
ficomp
ficomp
int3
add
sti
stos
jmp
call
inc
push
pop
sub
pop
jns
popa
and
dec
adc
cmp
ja
push
and
ds
push
jl
addr16
or
js
inc
add
mov
scas
call
lods
loope
repz
fild
aaa
ja
je
jne
pop
and
fistp
retf
xchg
sahf
(bad)
lods
loope
sbb
inc
sub
inc
ss
push
adc
inc
cmovle
ja
addr16
and
inc
xor
outs
ss
sbb
pop
adc
push
cmp
xor
ds
push
jg
sub
jns
pop
pop
inc
pop
cmovg
dec
or
adc
jp
push
adc
cwde
leave
mov
lds
sti
mov
mov
fld
fist
iret
sahf
fistp
jmp
leave
xchg
loopne
stos
div
inc
cmp
push
adc
dec
or
pop
or
es
enter
dec
adc
(bad)
xchg
int
mov
adc
out
pop
or
mov
out
xchg
inc
mov
xchg
jle
aas
push
fist
jecxz
xchg
inc
add
(bad)
das
jl
mul
sub
push
inc
and
clc
pop
addr16
int3
mov
mov
add
jge
sub
adc
ror
scas
push
xor
mov
enter
sub
cmp
in
pop
jcxz
scas
out
jp
push
adc
stos
add
jmp
bound
stos
and
repnz
test
xor
jo
lods
icebp
xchg
dec
and
repnz
cld
mov
cmp
adc
(bad)
xchg
movs
dec
cmp
shl
dec
(bad)
call
push
fs
mov
xchg
inc
dec
cmovnp
test
lea
sub
shr
push
inc
mov
mov
jb
jecxz
add
inc
adc
or
ret
xchg
(bad)
loopne
(bad)
mov
sbb
scas
hlt
inc
fs
jns
sub
or
in
inc
sbb
out
adc
adc
aad
inc
imul
or
repnz
mov
or
(bad)
mov
outs
sub
pop
das
push
mov
repnz
ja
cmc
sahf
push
arpl
sub
sbb
jp
lock
paddusb
repz
cwde
lds
mov
aaa
and
jecxz
inc
add
xor
or
test
push
add
pushf
push
adc
into
sub
mov
jns
popf
std
inc
fist
fisttp
cwde
sahf
dec
mov
pop
mov
subps
jb
push
sbb
bound
pop
adc
push
and
push
je
sbb
xor
dec
push
ja
sbb
push
pop
sbb
daa
dec
add
popa
adc
subps
jne
push
sbb
data16
outs
sub
js
cwde
in
mov
leave
lods
in
rol
fcomp
xlat
cmps
out
rol
lahf
fiadd
hlt
mov
mov
rol
int3
movs
jmp
mov
jmp
jmp
mov
fnstcw
int
cld
mov
hlt
fwait
jmp
cmps
div
cli
movs
clc
stos
jmp
stc
mov
xchg
aad
test
lods
loopne
int3
movs
in
mov
fnstsw
in
lods
test
idiv
shl
idiv
jmp
mov
mov
(bad)
fistp
(bad)
mov
loop
retf
mov
popf
repz
xchg
enter
clc
call
sbb
ins
adc
pop
sbb
push
(bad)
ds
jg
jle
pop
sub
ja
ins
xor
pop
ss
arpl
push
adc
push
adc
jns
imul
sub
gs
or
outs
aaa
push
push
inc
es
add
bound
dec
push
push
cmp
push
ds
imul
sbb
pop
sbb
dec
xor
bound
jo
dec
cmp
push
add
ins
add
arpl
inc
sub
dec
or
jo
pop
ss
arpl
push
adc
push
adc
js
imul
sub
jl
push
pop
push
inc
add
inc
add
sub
sbb
push
jns
outs
das
dec
add
cmp
inc
add
or
inc
sbb
pop
add
sub
jns
pop
pop
inc
and
sub
imul
and
dec
cmp
or
dec
add
imul
das
ins
sub
call
stos
fld
stos
in
or
arpl
es
in
jmp
popf
jno
jg
and
stc
in
call
mov
mul
rsm
retf
jle
xor
loop
retf
dec
jge
and
bound
aad
movs
mov
pushf
dec
cmp
add
add
adc
movzx
xchg
jnp
fbld
xor
int
mov
leave
ret
adc
repz
jns
dec
or
mov
cmc
test
fmulp
mov
adc
jns
jae
sbb
mov
fwait
cs
pop
pop
nop
cli
fwait
xlat
add
jmp
rcr
mov
movs
sbb
or
hlt
mov
(bad)
xchg
aad
and
pop
xchg
or
call
sbb
mov
loopne
and
xchg
call
fidiv
scas
push
jbe
stos
push
push
cmp
or
mov
mov
int3
stos
jmp
cs
cmp
scas
jmp
dec
sub
ret
test
and
out
lahf
bound
adc
ret
ret
jns
or
test
imul
dec
sahf
int3
jno
daa
pusha
or
push
cdq
and
sub
adc
lods
rol
xor
clc
pop
test
cwde
jb
shr
aas
jae
or
jns
xor
pushf
xlat
push
ins
aaa
push
or
mov
and
jge
jne
popa
and
xor
or
cmp
(bad)
aad
mov
xchg
jb
pusha
movs
jns
inc
mov
sub
sbb
dec
test
mov
and
aas
add
xchg
jmp
inc
arpl
int
in
mov
mov
cmps
(bad)
fst
ret
lods
ror
sbb
jg
cmp
and
dec
daa
dec
add
imul
add
ja
push
sbb
je
ins
sub
dec
ds
dec
or
data16
ja
pop
xor
push
or
dec
or
jl
dec
ds
fimul
rol
adc
js
push
or
cdq
int
in
(bad)
mov
xchg
call
mov
lock
ficomp
icebp
xchg
fnsave
and
sbb
jge
dec
push
data16
adc
jo
dec
or
sub
ins
sub
idiv
jmp
jmp
mov
mov
mov
call
into
mov
fcomp
jmp
cmps
div
ja
jno
pop
sbb
jae
pusha
add
sub
inc
push
cmp
jae
pusha
pop
add
inc
sbb
add
or
outs
aaa
push
push
inc
es
add
bound
push
add
pop
pop
inc
adc
sub
pop
cmp
dec
sub
push
jno
jae
inc
xor
jnp
pop
push
jno
jb
dec
sbb
pop
push
pop
adc
jge
inc
sbb
cmovl
pusha
or
push
xor
inc
and
jg
or
push
adc
xor
dec
sbb
cmp
push
push
sbb
gs
sub
inc
or
ins
sub
pop
cmp
pop
or
or
bound
jo
pop
sub
ret
add
in
lahf
fild
retf
mov
int
cld
mov
std
nop
jecxz
icebp
test
mov
scas
cld
mov
pushf
hlt
mov
fdivr
cli
mov
xchg
in
lods
div
lahf
rcl
(bad)
mov
mov
xchg
in
cli
mov
mov
mov
loopne
leave
(bad)
in
repnz
xchg
sbb
jnp
dec
sub
std
mov
cmp
push
push
mov
sbb
cwde
movs
gs
sahf
inc
bound
es
(bad)
fldcw
in
rol
(bad)
lahf
cwde
and
sub
jmp
dec
or
(bad)
cmps
lods
ja
aad
addr16
into
outs
mov
ins
adc
cld
sahf
cmp
stos
mov
das
add
xor
xchg
das
push
xchg
push
add
shl
leave
mov
push
js
sbb
imul
les
jne
iret
cmps
lock
push
xor
addr16
adc
or
loopne
push
inc
cmp
stc
(bad)
(bad)
sbb
or
jmp
or
mov
aaa
popa
daa
push
xchg
std
mov
inc
xchg
repnz
stc
or
pop
sub
pop
and
pop
pop
dec
lahf
out
ret
sbb
in
fsubr
aad
(bad)
sbb
loope
icebp
ds
(bad)
mov
pop
add
enter
int
les
sub
or
mov
mov
inc
adc
or
or
fld
inc
sub
mov
add
je
pop
sbb
in
rol
sub
mov
cmp
mov
dec
lahf
sub
sub
lahf
mov
inc
or
mov
popf
push
js
sub
out
mov
inc
pop
pop
gs
push
mov
pop
(bad)
lods
out
call
dec
jmp
sbb
sbb
jecxz
inc
or
imul
xor
fnstsw
dec
or
or
cmp
push
dec
mov
xor
or
and
push
jecxz
inc
add
test
lds
call
inc
sub
pop
add
xor
jl
push
rcl
jmp
test
mov
xchg
leave
mov
and
pop
xor
xor
push
adc
dec
adc
sub
inc
or
popa
cmp
pop
inc
daa
inc
pop
inc
add
add
jp
push
inc
and
jl
inc
cmp
jno
bound
jo
outs
pop
pop
das
jbe
add
xchg
push
add
mov
add
or
nop
retf
cmp
pop
cmp
and
in
pop
sub
or
xchg
mov
xchg
(bad)
movs
in
ins
dec
inc
das
pop
in
mov
stos
fst
push
out
mov
jge
pop
es
mov
sbb
add
cmps
and
(bad)
mov
inc
adc
inc
xchg
rcr
(bad)
in
int3
sahf
int3
mov
pop
test
push
(bad)
xor
adc
into
or
cmps
or
fcomp
mov
add
call
jne
cli
xchg
push
sub
xchg
rol
dec
data16
jbe
icebp
xchg
adc
popa
sub
lods
repnz
scas
neg
mov
push
or
add
ret
and
fstp
sub
in
aas
dec
mul
inc
or
pop
ins
das
and
dec
int
lock
movs
lock
jnp
add
sub
inc
sbb
cmp
sbb
push
dec
stos
xlat
xchg
not
and
mov
fisubr
aaa
xchg
rcl
push
vmwrite
imul
add
xor
sub
mov
in
adc
fcomp
arpl
add
outs
ins
sub
mov
mov
sub
jge
pop
les
inc
push
cmps
aad
adc
dec
or
mov
lods
out
mov
scas
jl
fbstp
jg
ja
cmps
adc
pop
add
retf
sub
inc
popa
and
inc
push
jae
cld
mov
adc
xchg
aad
adc
xor
call
jo
fs
shl
jge
icebp
mov
sti
mov
loope
call
test
xor
sub
cmp
ja
fistp
push
fs
jecxz
sub
sub
mov
cs
retf
lods
iret
sbb
sahf
out
test
leave
arpl
jae
dec
mov
pop
sbb
lahf
std
out
mov
dec
and
arpl
xor
push
cmp
or
out
je
retf
sub
cmp
jge
xchg
fimul
and
not
jo
(bad)
mov
popf
out
mov
dec
cdq
sti
push
push
push
adc
inc
data16
and
sub
aad
lock
lock
(bad)
adc
aad
add
out
jle
adc
ins
push
pop
lods
into
sbb
daa
lahf
fst
jb
out
(bad)
out
fcomp
pusha
adc
std
mov
push
sbb
ret
aam
and
mov
add
jbe
push
packuswb
xor
repz
adc
gs
movs
aam
mov
cdq
loope
push
out
pushf
(bad)
lods
adc
stos
(bad)
mov
mov
out
mov
jbe
dec
sub
fidivr
mov
loope
nop
rcr
lea
sub
ins
sub
inc
xchg
iret
cmp
cs
or
mov
aad
ja
mov
hlt
mov
add
stos
jmp
xor
inc
mov
xchg
mov
aaa
pop
in
aad
or
test
leave
mov
inc
fidivr
jns
lea
xlat
jg
push
cmp
jg
push
and
out
jle
pop
and
cld
mov
call
jno
out
lods
iret
mov
loopne
cli
inc
pop
push
pop
cmp
mov
mov
mov
jp
mov
mov
jb
inc
aaa
push
xchg
push
cli
xchg
out
mov
xchg
test
mov
xchg
inc
and
ror
rcr
push
mov
jl
jge
cmps
in
mov
adc
mov
mov
in
cmp
mov
mov
sbb
add
hlt
popf
shl
mov
push
xor
cli
out
dec
jnp
jae
mov
rcr
xchg
mul
shl
cs
xor
jb
fcomp
xor
cdq
fsubr
scas
add
pusha
cmp
ror
xor
and
arpl
fcomp
sti
or
adc
xchg
fld
dec
sub
inc
push
js
retf
ja
imul
mov
adc
jg
mov
mov
lods
inc
aaa
adc
dec
add
repz
js
ja
not
fisubr
(bad)
cmps
mov
in
jmp
sub
cmp
lahf
movs
mov
es
fnsave
jle
scas
call
sar
dec
cs
xlat
xor
dec
and
xchg
test
test
scas
jne
mov
sti
mov
mov
outs
mov
mov
sbb
jg
pop
and
sti
adc
dec
mov
div
fs
cmps
in
leave
pop
pop
push
and
jb
(bad)
and
fstp
xchg
ret
push
inc
movs
(bad)
lods
cmp
dec
xor
pop
ja
mov
mov
sub
rcr
fld
mov
dec
sub
sub
and
xchg
(bad)
arpl
jl
jo
xor
mov
xchg
rcr
or
loope
xor
dec
daa
push
es
sbb
inc
stos
dec
xchg
mov
leave
cwde
stc
push
sbb
popa
mov
mov
lds
jo
inc
sbb
sub
test
fucomip
mov
cmp
ins
sub
mov
cmovs
mov
or
sbb
popf
cmc
or
dec
pop
pop
and
shl
add
xchg
out
cmp
movs
jmp
jae
inc
mov
in
or
jge
(bad)
arpl
jb
inc
call
out
je
sub
arpl
xor
mov
pushf
das
dec
mov
mov
cmps
fldcw
addr16
repnz
aaa
push
repnz
jl
xor
(bad)
push
movs
out
shr
cli
pop
cmp
addr16
call
call
out
pushf
push
xor
add
jo
sub
rcl
sub
ja
movs
(bad)
retf
mov
pop
sub
imul
repz
iret
(bad)
out
aam
inc
pop
fdivr
xor
and
jl
dec
cmp
call
hlt
mov
xor
sub
pushf
es
inc
xor
mov
mov
enter
push
adc
mov
pop
pop
(bad)
mov
out
lods
pop
push
idiv
popa
bound
aaa
dec
aas
enter
mov
xor
in
mov
ins
sub
add
and
push
in
arpl
inc
sub
pop
ds
imul
clc
sbb
je
jns
icebp
nop
into
dec
sub
jne
loopne
out
int3
mov
out
jo
pushf
shl
repz
movs
jecxz
jg
in
stos
repnz
pop
dec
iret
daa
gs
jl
lods
out
push
icebp
mov
es
dec
cmp
cmp
xchg
pop
push
pop
fwait
aad
inc
inc
mov
push
adc
stos
fiadd
mov
cmps
or
fcom
sbb
addr16
xchg
stc
mov
cli
mov
es
ja
outs
xor
fidivr
inc
or
in
imul
in
pushf
cs
inc
repz
or
mov
out
xor
dec
or
and
sti
test
inc
or
add
iret
sbb
in
push
sbb
and
call
mov
or
mov
add
push
xchg
push
xlat
xchg
idiv
mov
push
or
mov
retf
mov
test
enter
push
iret
mov
add
xchg
cmovno
lea
rcr
xor
imul
ss
ins
add
stc
mov
push
cmp
lods
ins
xor
dec
or
mov
arpl
jp
pop
outs
or
pop
pop
adc
movs
std
push
sbb
cdq
enter
rcr
mov
add
add
add
inc
xor
add
and
clc
mov
psrad
or
add
outs
or
lods
les
jae
lock
dec
mov
mov
out
or
je
(bad)
sbb
inc
pop
xchg
shl
imul
lock
scas
std
mov
mov
jge
cli
ret
xor
mov
xor
les
or
push
mov
fcomp
cmp
lods
inc
scas
hlt
xchg
call
loop
(bad)
fistp
dec
or
repz
adc
mov
push
sbb
push
ins
xor
xor
mov
ds
retf
or
inc
add
sbb
sbb
fs
ret
ins
sub
sbb
sub
sbb
xor
jnp
xor
cmp
stos
cmp
mov
test
loopne
int3
enter
mov
arpl
test
mov
js
rol
cmps
pop
ja
enter
jmp
fs
xchg
mov
jg
inc
or
mov
popa
add
mov
scas
ret
mov
inc
add
icebp
mov
leave
stos
je
xor
and
test
fistp
mov
or
and
sbb
mov
je
mov
std
(bad)
bound
xchg
rcl
xor
test
lods
out
popf
xor
fcomp
sbb
fwait
cmp
mov
add
dec
lods
retf
loope
xchg
pop
cmp
push
cld
push
imul
(bad)
xchg
inc
and
ds
or
outs
aaa
imul
repz
in
(bad)
neg
push
adc
stc
cmovns
pop
imul
or
sbb
sub
popf
mov
pusha
xchg
aad
jecxz
inc
in
scas
cld
das
ins
cmp
neg
aas
dec
mov
movs
nop
cmps
dec
cmp
ins
sahf
fidiv
jae
loopne
dec
or
scas
(bad)
cwde
shl
dec
or
fistp
aaa
pop
mov
xchg
(bad)
mov
out
mov
scas
pop
aas
jns
ins
nop
loope
outs
sbb
push
or
xchg
push
xchg
mov
or
mov
cmp
ficom
push
and
xchg
(bad)
xchg
daa
jp
sbb
dec
or
xchg
data16
jge
mov
dec
sbb
dec
fst
pop
and
scas
fld
sbb
(bad)
dec
arpl
push
add
xchg
shl
or
jns
mov
pshufw
(bad)
test
adc
scas
call
rcr
jbe
fiadd
inc
paddusw
dec
cpuid
in
test
sar
enter
in
inc
cmps
pop
sbb
push
mov
or
xchg
in
loopne
inc
and
add
fisttp
enter
dec
ins
push
pop
push
or
mov
cmp
xchg
xchg
push
push
ins
add
ror
push
cmps
jg
push
and
out
enter
hlt
add
and
fiadd
aaa
pop
pusha
and
adc
xchg
repnz
imul
push
dec
arpl
jae
dec
mov
fcom
jae
xchg
repnz
loope
outs
pop
dec
pop
hlt
mov
push
pop
inc
sub
add
movs
(bad)
pushf
repnz
into
mov
dec
xchg
retf
lea
push
jge
fs
div
inc
push
jb
pop
add
push
scas
and
sti
cmp
data16
cmp
fldcw
cwde
ds
sbb
(bad)
xchg
push
pushf
(bad)
mov
ret
repz
aas
push
jae
push
dec
idiv
dec
jbe
ja
pusha
mov
ret
add
pop
cmp
dec
cdq
rol
lds
and
and
jae
push
dec
or
pop
sbb
mov
add
stos
ficomp
mov
jne
jnp
lods
loopne
pusha
add
pop
mov
sub
movs
aam
fdivr
jge
cmp
or
xor
dec
or
iret
mov
aaa
stos
repnz
push
xchg
mov
adc
addr16
cwde
into
sbb
dec
cwde
clc
test
pop
pop
mov
add
cmp
dec
call
outs
dec
sahf
cld
mov
jecxz
cdq
fcmovu
test
cmps
xor
adc
stos
leave
fcmove
stos
enter
bound
movs
cld
(bad)
repz
test
pop
outs
xor
rcl
dec
loop
test
aad
je
push
(bad)
iret
lods
push
jl
rcr
in
call
or
mov
or
dec
sbb
outs
xchg
fstp
pop
lds
sub
fisubr
and
cmp
stos
test
push
call
mov
int3
test
aaa
jns
dec
or
jne
loop
(bad)
mov
pop
dec
inc
xor
add
mov
stos
leave
jmp
pop
mov
push
popf
rol
rcl
add
es
enter
xchg
pop
cmp
cld
mov
and
mov
add
sbb
or
bound
aas
jae
ror
cwde
inc
inc
mov
std
or
mov
or
dec
cmp
and
fstp
ret
mov
jno
pop
aaa
inc
aaa
outs
ins
sub
inc
add
gs
inc
push
inc
mov
ja
ss
push
pop
fisubr
adc
or
addr16
inc
push
ror
out
mov
pop
ins
or
aaa
js
fcomp
inc
push
mov
jns
dec
dec
jmp
dec
or
mov
fidiv
sbb
xchg
mov
pop
inc
pcmpgtd
in
sub
ret
lahf
jecxz
leave
mov
mov
stos
mov
sub
in
popa
es
cmp
(bad)
mov
out
pop
inc
adc
inc
xchg
rcr
or
test
pop
or
pop
(bad)
xchg
repnz
pushf
iret
mov
add
lahf
repz
push
adc
ins
aas
pusha
add
mov
mov
and
xchg
fidiv
push
(bad)
xlat
xchg
test
add
loope
mov
push
adc
cmovne
xchg
and
sbb
and
dec
push
inc
dec
adc
xchg
xchg
pop
inc
push
mov
push
dec
ds
mov
mov
sub
es
xor
pusha
push
retf
aad
in
jns
fstp
pop
outs
pushf
mov
mov
jmp
retf
xchg
loope
dec
data16
dec
add
sbb
mov
loopne
cmp
movs
cli
cmp
div
pusha
out
cmp
cmps
loopne
arpl
fs
ror
jbe
mov
gs
xchg
sbb
xchg
pop
ja
xchg
iret
lods
sub
push
sbb
adc
mov
adc
xchg
mov
outs
inc
add
add
mov
outs
sub
jmp
push
or
lahf
icebp
mov
mov
je
addr16
xchg
jno
cs
inc
dec
hlt
ss
adc
mov
call
out
ss
mov
mov
adc
sahf
push
aaa
(bad)
sar
aaa
outs
sbb
or
cli
mov
lea
fs
or
xor
retf
test
adc
xchg
imul
cdq
retf
jo
into
test
jle
xchg
in
inc
sti
rol
cmp
dec
psubsw
xchg
in
mov
(bad)
cld
mov
sub
fld
das
mov
scas
ret
out
xchg
pop
sub
xor
mov
add
in
scas
hlt
lds
jecxz
fistp
fstp
lods
loop
jecxz
sub
hlt
mov
div
and
dec
or
adc
xchg
mov
jns
cwde
ret
xor
les
or
jb
inc
and
mov
pushf
sbb
cmp
into
lods
iret
mov
sbb
addr16
out
mov
cmp
sti
mov
sti
fs
mov
test
pop
pop
or
loopne
jle
(bad)
mov
in
xor
mov
cdq
loope
push
out
jp
dec
inc
add
mov
add
sbb
sti
mov
push
xor
cmps
enter
or
ret
or
cmps
in
mov
fnstenv
jg
fild
fmul
and
punpcklbw
pop
sbb
inc
add
mov
pop
sub
xor
jnp
fmul
xor
pop
pop
add
and
and
push
mov
jae
into
xchg
in
xchg
push
ret
stos
loop
push
div
fiadd
and
mov
mov
scas
in
mov
loop
call
cdq
sub
pop
add
addr16
pushf
lahf
jmp
fimul
jbe
je
test
addr16
sub
lahf
xor
mov
in
rcr
jle
xchg
int
ret
mov
sbb
popa
bound
aaa
dec
aas
enter
es
jae
jecxz
mov
test
movs
inc
add
xlat
mov
jle
js
cli
mov
jecxz
je
cmps
call
jmp
cmp
sub
stos
jmp
mov
jmp
inc
pop
ins
push
mov
daa
hlt
scas
sub
adc
cld
mov
cs
sub
fiadd
push
dec
push
xor
or
cmp
jmp
sti
pop
cmp
xchg
mov
neg
aaa
test
xchg
lds
movs
call
add
pop
pop
sbb
mov
adc
test
popa
daa
fs
adc
push
mov
adc
cmp
pop
jnp
les
test
(bad)
mov
lahf
fldenv
push
adc
arpl
push
daa
inc
daa
popa
dec
add
mov
adc
mov
test
aam
not
mov
cmps
aam
(bad)
push
pop
dec
or
jo
iret
xchg
adc
arpl
test
mov
loop
xchg
aad
mov
retf
ins
or
call
add
sti
pop
cmp
lods
jmp
pop
push
mov
adc
loop
cmc
lods
into
add
pop
stc
mov
popf
out
ins
sbb
inc
add
mov
popa
xor
mov
jne
aad
jle
ja
xchg
into
sbb
push
add
inc
and
iret
mov
add
push
adc
ins
(bad)
inc
or
xlat
test
imul
mov
mov
out
xchg
fnsave
out
out
nop
sub
in
leave
mov
jmp
sti
mov
mov
inc
in
(bad)
int
pop
adc
push
adc
xor
push
pop
je
inc
fld
jb
ins
xor
test
out
call
ror
dec
or
xchg
cli
mov
mov
pop
lds
jp
dec
xchg
clc
hlt
sbb
pop
pop
mov
enter
lock
jge
repnz
out
into
xchg
sbb
jno
jge
jne
fmul
lods
jg
adc
pop
sub
xlat
push
or
or
push
into
xchg
dec
adc
daa
bound
int3
(bad)
dec
sbb
bound
stos
stc
sbb
jnp
jbe
sbb
repnz
ss
das
xchg
aad
jp
dec
sub
jne
loopne
or
xor
sub
dec
dec
out
inc
inc
add
stc
mov
mov
dec
in
in
pcmpgtb
addr16
mov
sbb
push
retf
popa
push
test
push
dec
adc
add
ss
mov
lds
inc
and
aaa
xor
cmc
pop
sbb
neg
pop
push
sbb
popf
mov
ja
or
and
outs
inc
push
mov
adc
xchg
sbb
xchg
cmp
mov
xchg
or
mov
sub
ret
popa
stos
jmp
mov
(bad)
fiadd
aas
retf
mov
jnp
retf
imul
adc
sub
pop
nop
test
dec
xchg
mov
loopne
test
lahf
ror
pop
or
clc
popf
in
mov
jno
sbb
pop
jmp
enter
cmp
clc
xchg
out
test
bound
jae
and
dec
sbb
and
add
dec
sti
mov
lods
stc
scas
fstp
not
nop
ret
sbb
cmp
pop
pop
pop
inc
xor
push
adc
add
jo
jns
inc
adc
pop
sbb
jb
dec
adc
stos
add
xchg
push
add
leave
cmps
(bad)
cmp
fld
(bad)
fdiv
jle
pop
add
cmps
and
pop
pop
adc
mov
dec
pusha
push
adc
fdiv
adc
in
xchg
cmp
lock
ds
ficom
xor
add
jecxz
fwait
xchg
std
imul
jb
stc
xor
lds
dec
in
mov
outs
xlat
or
sbb
cdq
leave
mov
sar
xchg
and
or
repnz
les
fistp
stos
add
jno
jnp
cdq
in
mov
fsub
outs
out
mov
adc
inc
ins
inc
and
dec
xor
push
or
dec
cmp
push
pop
cmp
sbb
pop
mov
das
outs
adc
sub
push
ins
sub
sbb
mov
jg
cmp
cli
rep
fst
mov
adc
movs
pop
sbb
leave
add
clc
loopne
mov
xchg
sub
sbb
es
mov
jb
and
add
push
repnz
outs
int3
pop
mov
push
mov
xchg
into
xchg
xchg
or
in
lock
out
mov
xchg
mov
gs
cli
mov
pop
mov
mov
cmp
neg
xchg
ror
std
mov
rcl
(bad)
jae
pop
or
repz
xchg
mov
cwde
shl
push
jno
push
clc
mov
lock
or
scas
jmp
in
std
mov
add
inc
and
jno
js
push
xor
popa
pop
add
pop
add
sub
or
jbe
fs
aas
scas
jmp
inc
mov
ja
and
sub
jnp
add
mov
jne
fs
rcl
iret
std
mov
test
jnp
ja
cmp
jmp
aas
xchg
sar
xchg
out
mov
test
pop
cmp
mov
mov
mov
cdq
shl
sbb
clc
ficomp
retf
repnz
fucomip
fild
cmc
icebp
xchg
and
push
lods
in
jne
cmp
loopne
xchg
add
stos
rcl
lods
into
dec
add
mov
sub
push
fs
jmp
dec
stc
sub
xchg
fadd
mov
or
mov
imul
cmp
push
jns
and
mov
lods
loope
stos
std
mov
inc
cmp
sbb
jle
jno
aam
mov
(bad)
retf
and
loopne
rcr
les
mov
adc
cmp
push
xchg
stos
enter
scas
push
imul
adc
std
int
call
mov
push
or
or
xlat
adc
out
sbb
repz
addr16
inc
push
xor
es
call
sbb
loope
mov
inc
mov
push
mov
test
arpl
jecxz
mov
es
lds
or
add
mov
and
out
lahf
mov
or
movs
cmp
add
pusha
xlat
ret
fcom
rcr
movs
call
push
je
adc
hlt
fiadd
shl
cld
dec
inc
ds
mov
pusha
push
inc
mov
push
add
fbstp
cmps
fist
cmps
in
scas
push
add
(bad)
jmp
mov
cmp
mov
loope
ins
cmps
in
leave
retf
mov
std
xchg
div
imul
hlt
fstp
iret
xchg
hlt
cmps
in
ficom
(bad)
mov
(bad)
lahf
inc
popa
and
in
in
int
fisttp
inc
mov
sbb
cwde
int
imul
xchg
jecxz
fist
popa
pop
xor
ret
sub
adc
retf
aas
(bad)
stc
mov
lods
pop
js
fcmovb
mov
clc
pop
dec
xor
sbb
cmp
mov
scas
call
xchg
outs
sbb
jmp
push
push
mov
stos
icebp
mov
adc
js
pop
sub
xchg
adc
aas
shl
jmp
mov
pop
dec
or
pop
xor
daa
pushf
stc
clc
xlat
mov
in
leave
xchg
add
jmp
pop
sub
fistp
jg
inc
add
mov
xchg
ds
xor
mov
mov
les
outs
cmp
fimul
js
inc
pop
inc
sub
scas
push
jnp
mov
mov
or
pop
gs
adc
ror
iret
mov
popa
fadd
shl
sbb
div
pushf
addr16
fst
fst
push
or
adc
fadd
adc
sar
aas
jg
xor
xor
fpatan
nop
adc
ror
mov
xchg
and
test
outs
and
mov
fsub
xlat
mov
mov
lods
xchg
push
dec
push
or
push
adc
iret
xchg
push
pop
cmp
adc
cmp
jne
xor
fcomp
lods
fisttp
popf
out
jl
and
adc
xor
cmp
stos
push
pop
add
(bad)
xchg
(bad)
sub
mov
mov
stc
pushf
push
cli
cwde
xchg
jo
sbb
dec
push
ins
sbb
add
pop
push
jnp
push
inc
and
jno
js
pop
cmp
jo
popa
pop
add
inc
sbb
ins
add
mov
enter
and
ret
arpl
cmp
in
in
xchg
push
addr16
aaa
in
stc
lods
shr
mov
out
sti
xchg
fld
mov
fs
pop
jne
or
and
scas
aam
inc
sub
aam
out
lods
cwde
or
push
movs
or
add
sbb
mov
test
pop
sub
aas
in
out
mov
sub
pop
pxor
enter
push
sub
sub
jae
adc
pop
add
cmp
cmps
or
mov
fiadd
aad
repnz
push
and
and
clc
sbb
outs
cwde
loopne
test
add
xor
pop
push
adc
or
aaa
fisubr
loope
push
add
sbb
shl
lock
cmp
and
sbb
pop
jns
push
jnp
ins
movs
punpcklwd
mov
sub
enter
cmp
sub
or
lods
in
sub
push
dec
push
and
or
leave
mov
jp
out
mul
cmp
jge
pop
movs
push
adc
enter
xor
mov
imul
inc
xor
fsub
cli
mov
dec
inc
sbb
jb
cmp
into
retf
xchg
aad
lods
mul
add
in
xchg
leave
dec
mov
mov
jl
pop
sbb
fisttp
jg
cmp
add
stc
xchg
shr
hlt
mov
sbb
iret
(bad)
bound
push
sub
sbb
sti
ret
add
mov
rcr
adc
mov
lods
outs
sub
inc
sbb
adc
lods
cmp
sbb
jb
push
ss
jno
popa
pop
add
dec
sbb
je
push
adc
jne
dec
imul
in
daa
scas
in
jne
inc
adc
cmps
pop
sub
cmp
in
sub
sub
pusha
(bad)
fcomp
mov
(bad)
mov
and
push
pop
movs
xor
sbb
mov
mov
pop
add
scas
jmp
sbb
fldenv
mov
or
push
cdq
in
mov
outs
cmp
into
fstp
and
lds
push
push
xchg
push
loop
push
sub
add
or
inc
pop
adc
aad
out
dec
xor
mov
scas
jmp
sub
add
mov
cmp
or
retf
xchg
aaa
pushf
ret
sub
sub
mov
test
push
push
jp
sub
add
xchg
cld
test
fcos
movs
pause
sub
es
bound
jnp
cmp
sar
ror
sar
ror
dec
push
js
mov
lahf
rol
push
and
arpl
jg
mov
int3
fcom
and
pop
xor
jle
daa
addr16
cmovg
repz
cmp
and
ror
sub
rcl
pop
sbb
call
sti
dec
xchg
add
lock
test
ret
ds
into
aaa
mov
jp
push
test
inc
xchg
mov
pop
or
mov
push
adc
ret
movs
xlat
cmp
adc
sbb
mov
pop
cmp
cwde
repnz
jge
add
or
loopne
mov
jg
cmp
adc
(bad)
lahf
fisubr
ror
(bad)
pop
data16
aad
pop
or
mov
cmp
cs
cmp
bound
dec
pop
or
jbe
fwait
cli
call
sbb
pop
push
inc
or
sbb
clc
mov
pop
gs
sub
sbb
rcl
sub
das
lock
xchg
int
jl
or
in
mov
inc
mov
sti
scas
out
sub
push
add
ds
aam
sti
sub
xchg
fidivr
jle
inc
lods
and
loope
mov
dec
mov
inc
sub
call
mov
mov
leave
lea
and
inc
cwde
mov
fadd
jb
push
daa
jle
pop
pop
jg
xor
aas
retf
fiadd
xchg
add
jns
dec
jp
jo
mov
jecxz
(bad)
sti
and
or
or
inc
xlat
mov
pushf
icebp
sbb
or
aad
mov
ret
adc
and
jae
pusha
jne
popa
cmp
mov
lea
jbe
jno
sbb
enter
(bad)
mov
shl
or
pop
dec
jno
xor
stos
push
add
mov
sbb
repz
(bad)
cmps
pause
sub
xor
xchg
sbb
mov
xchg
dec
popf
(bad)
test
out
imul
mov
jle
mov
inc
retf
in
popa
fild
or
int
mov
call
add
lods
jmp
ficomp
mov
sub
or
loope
fdiv
mov
(bad)
rcl
mov
cdq
enter
push
call
sub
les
xor
add
mov
pop
retf
and
pop
jmp
aam
fidiv
ficomp
fld
ret
and
stc
test
test
mov
popf
dec
ja
and
cli
mov
bound
(bad)
pushf
ja
adc
in
scas
idiv
sbb
add
in
out
lods
popa
pop
push
dec
cmps
sbb
push
aam
cmps
jecxz
fild
mov
imul
fidiv
push
call
fdivr
gs
xor
cmp
adc
movs
sbb
adc
in
mov
xor
retf
pop
dec
ds
(bad)
mov
and
add
jnp
jns
xor
xlat
fadd
xor
adc
in
jecxz
mov
sbb
pop
inc
dec
and
mov
(bad)
rcr
sub
cwde
jecxz
enter
out
in
scas
iret
jmp
pop
sub
iret
mov
into
mov
test
jnp
test
cmps
(bad)
or
jg
xor
mov
outs
sub
mov
mov
imul
jmp
dec
xor
cmovno
xor
inc
imul
icebp
sbb
stc
mov
in
sbb
cmp
mov
jp
mov
jbe
pop
xchg
sti
cmps
xlat
std
mov
mov
and
jbe
cmps
adc
(bad)
(bad)
push
outs
stos
ja
dec
movs
dec
push
push
test
or
ficomp
pop
cld
adc
and
add
ficomp
cmp
add
sar
jle
jmp
scas
scas
and
pop
adc
sub
push
outs
sub
mov
jle
ins
mov
bound
or
jl
cld
lds
xchg
inc
jae
ins
fcmovne
sahf
fadd
in
retf
xlat
outs
lahf
push
je
sbb
mov
ds
inc
add
and
pop
inc
add
and
imul
sub
pop
add
int3
and
clc
mov
xchg
in
cli
mov
mov
scas
ret
xor
call
pop
lea
push
push
cmps
push
pop
and
ds
mov
push
xchg
ficomp
xor
movs
out
xchg
xlat
pop
mov
mov
jne
cmp
or
mov
mov
and
fld
jns
sti
fnsave
mov
fwait
int3
mov
mov
enter
mov
pushf
outs
inc
cmp
stos
ds
iret
ret
mov
or
in
mov
add
cmp
fisubr
and
(bad)
test
ds
and
xlat
mov
fwait
add
popa
adc
out
mov
inc
setns
xor
push
xor
sbb
mov
sub
jmp
call
xchg
enter
inc
pop
test
mov
rcl
sar
test
mov
addr16
fsubr
neg
add
outs
cmp
in
adc
and
dec
sub
mov
gs
sahf
out
scas
jmp
stos
sbb
dec
or
push
sub
pop
or
ror
xchg
xlat
jmp
mov
mov
xchg
(bad)
mov
arpl
cmps
(bad)
mov
xchg
cmp
pop
sbb
xchg
pop
push
in
and
mov
cmp
inc
mov
cmp
push
ins
sub
test
outs
sub
fisubr
pop
leave
out
clc
popf
and
add
(bad)
jmp
shl
mov
jae
push
rcr
nop
fstp
and
cmp
fist
xchg
jbe
add
repz
call
xlat
jmp
aad
mov
push
push
fninit
scas
retf
mov
int3
sub
out
mov
cmp
xchg
cld
es
or
jnp
js
jbe
push
and
inc
add
outs
xor
and
jle
xor
pusha
jmp
int3
ins
mov
clc
mov
mov
lods
ficomp
leave
mov
sub
xlat
retf
stos
in
sub
shl
xchg
jecxz
idiv
inc
push
scas
add
out
pusha
gs
aas
call
xchg
stc
mov
ret
(bad)
es
das
fs
cmc
mov
es
xchg
dec
jne
imul
mov
scas
fsubr
mov
mov
inc
push
adc
lods
sbb
and
ret
sub
jo
dec
inc
cs
das
fimul
outs
sbb
pop
js
fiadd
inc
mov
test
mov
repnz
ret
test
pop
cmp
inc
push
inc
push
es
ins
push
js
mov
fsubr
dec
jne
push
adc
bound
mov
lds
jb
(bad)
sahf
(bad)
in
rcr
xchg
cmp
outs
bound
arpl
call
clc
mov
cli
mov
mov
xchg
in
and
pop
or
push
push
adc
push
and
mov
mov
inc
add
inc
push
sub
jmp
or
loopne
outs
bound
xor
stc
call
loop
mov
push
and
mov
jne
add
in
gs
or
sahf
xlat
cs
pop
add
ins
adc
sub
jmp
mov
sbb
(bad)
(bad)
int
mov
mov
sub
lock
cmps
in
test
cdq
int
cmp
or
fnstsw
cmp
fwait
scas
imul
inc
fnsave
push
push
out
aas
sub
ret
xchg
idiv
cli
stos
jmp
mov
mov
push
xlat
into
mov
jmp
adc
cs
(bad)
mov
adc
cmp
sar
pop
sbb
retf
mov
sbb
gs
ja
movs
pop
push
cmp
std
retf
mov
adc
popa
test
jl
loopne
movs
loope
xchg
iret
mov
add
jmp
ret
cmp
cdq
jle
je
into
cld
mov
aaa
imul
mov
nop
hlt
test
retf
(bad)
hlt
cmps
lea
adc
out
rcl
dec
push
adc
push
push
outs
ins
pop
aas
pop
dec
cmp
sbb
adc
or
push
or
pop
pop
push
outs
pop
inc
pop
rol
inc
and
call
jb
outs
mov
xchg
in
fimul
fs
call
push
or
dec
push
idiv
add
or
ror
aaa
ins
sub
push
sub
call
mov
xchg
add
cld
sbb
add
(bad)
mov
je
mov
mov
mov
sbb
push
fwait
std
mov
jmp
scas
pop
add
sbb
or
loop
(bad)
mov
sub
jnp
add
pop
push
xor
ffree
mov
pop
push
adc
movs
or
mov
jae
pop
ja
hlt
(bad)
mov
jne
adc
fldcw
mov
(bad)
int
mov
mov
sub
imul
jl
push
push
mov
es
sbb
data16
push
fdiv
and
pop
cmp
pop
mov
cmp
pop
adc
stos
or
inc
daa
inc
add
scas
idiv
int
in
sbb
and
in
fcomp
jle
ds
retf
mov
pop
ss
add
loopne
mov
mov
push
adc
aad
fcomp
xchg
fidiv
and
ret
cmp
cli
cmps
out
mov
lods
imul
nop
ret
jbe
addr16
js
stc
ret
lods
neg
adc
test
push
or
repnz
mov
jl
pop
mov
add
movs
ror
test
cdq
cmp
sti
adc
jmp
and
xchg
jle
sbb
int3
mov
jo
mov
fild
lods
adc
xlat
iret
mov
or
cmp
in
mov
test
ins
sub
xchg
jecxz
shl
stos
in
sahf
sub
xchg
idiv
jecxz
cmps
loopne
mov
repnz
pop
push
add
cmps
sub
xor
mov
jno
retf
xlat
mov
popf
aaa
(bad)
iret
loopne
mov
shl
ficomp
mov
bound
jno
push
pop
add
mov
cmovg
adc
mov
inc
or
stc
xchg
ffree
xchg
dec
ja
push
or
scas
ficomp
repnz
xor
xor
out
xchg
clc
jo
push
pop
retf
add
add
std
std
cmps
xor
fiadd
push
or
scas
test
jle
or
sbb
fst
pop
bound
lds
xchg
cld
mov
jnp
inc
scas
cmp
jmp
test
sbb
mov
cmp
aaa
jecxz
cmps
les
sub
inc
mov
adc
inc
or
add
or
sbb
or
mov
sub
jp
pop
adc
jbe
push
aaa
jo
cli
(bad)
div
aad
mov
jl
pop
dec
jmp
xchg
or
test
ss
inc
xor
in
xchg
(bad)
xor
jnp
jnp
sbb
es
mov
add
cmp
mov
scas
pop
xor
bound
adc
inc
sbb
fmul
xor
ficomp
fscale
mov
or
jecxz
into
push
ins
add
xadd
sub
sbb
rep
out
jo
dec
sub
sbb
pop
or
mov
(bad)
js
push
add
pop
cmp
aam
popa
dec
push
or
mov
mov
push
sbb
and
sub
xchg
jecxz
shl
stos
in
xchg
aas
sub
daa
inc
lgs
push
aam
add
xchg
push
add
mov
rcl
adc
popa
add
ret
jl
js
fisubr
ins
mov
and
jl
sub
xor
adc
jle
cmp
and
adc
pop
xchg
adc
jecxz
(bad)
jmp
leave
in
fwait
or
push
fnsave
cmp
cmp
pop
je
push
imul
ins
fwait
popf
rcl
mov
test
push
jecxz
ja
cmc
push
adc
push
pop
imul
jno
dec
sbb
retf
pop
add
push
(bad)
xor
adc
adc
ss
cmp
cs
push
(bad)
jno
mov
adc
aas
cmp
jmp
(bad)
mov
xor
pop
cmp
loope
test
cmp
mov
mov
test
lds
pop
xchg
gs
or
addr16
pop
push
imul
mov
jne
imul
sti
cmp
aaa
aas
mov
clc
pop
mov
ret
push
js
retf
test
add
in
sub
sar
inc
jno
pop
push
cmp
xor
mov
loope
sahf
dec
(bad)
xor
es
dec
out
out
fnsave
mov
fdivr
stos
xchg
cmps
imul
inc
inc
aaa
jns
aad
repnz
mov
test
push
jge
adc
ss
ins
jb
or
movs
or
add
push
and
lods
xchg
xchg
clc
cwde
mov
mov
rol
aas
inc
inc
mov
(bad)
mov
out
pop
dec
aad
fwait
int3
out
iret
dec
sub
jmp
sbb
mov
mov
out
adc
sub
scas
jnp
int3
outs
xor
sbb
or
xchg
fdiv
aaa
xor
repnz
adc
in
sbb
retf
xchg
xor
pop
inc
lock
push
cmp
jecxz
mov
mov
xlat
adc
jl
test
jne
push
nop
jle
mov
or
(bad)
in
mov
lods
xchg
jo
test
mov
stos
repz
inc
jge
and
jmp
sbb
test
shl
es
retf
cs
cdq
repnz
out
mov
data16
sti
mov
dec
jo
mov
push
iret
(bad)
sub
adc
or
or
or
add
mov
cmc
mov
sub
push
cmp
dec
call
jge
pop
or
adc
mov
cmp
sub
xchg
mov
adc
idiv
test
and
inc
ins
into
movs
and
push
xor
dec
push
jp
cli
jo
add
push
dec
xchg
clc
adc
inc
outs
push
adc
pop
hlt
ror
ins
jmp
dec
pop
push
mov
dec
arpl
daa
jg
pop
xchg
dec
pushf
pop
movs
sub
dec
sar
imul
mov
(bad)
cmp
xor
imul
cmp
daa
ds
jl
stc
sbb
cmp
cmp
mov
add
stos
cmp
cdq
inc
xor
clc
or
lods
mul
jb
mov
push
mov
adc
mov
sub
dec
(bad)
mov
(bad)
xchg
inc
mov
fwait
fs
das
inc
xchg
popf
cmps
in
sbb
es
enter
sub
int
aaa
rcr
sbb
sbb
clc
cmp
aad
adc
mov
mov
clc
ja
minps
ja
fmul
inc
test
jb
les
loop
cli
fist
test
mov
ja
push
push
rcl
sti
(bad)
int
aas
adc
iret
call
mov
fistp
xchg
test
inc
inc
cmp
dec
mov
push
add
mov
leave
xor
adc
dec
(bad)
(bad)
xor
pop
cld
scas
imul
outs
out
jg
loope
sub
pop
mov
mov
stc
mov
pop
mov
es
mov
inc
lods
jge
sub
pop
into
test
jo
stc
test
and
cwde
loopne
clc
std
push
mov
jle
aam
sahf
sub
loop
ret
push
(bad)
cmps
push
dec
jne
sti
cld
leave
inc
jae
cli
sbb
loopne
clc
test
ret
xlat
iret
mov
adc
cs
pop
repz
sbb
dec
xor
pop
mov
mov
xchg
gs
(bad)
lods
sbb
dec
inc
lods
xchg
cmp
push
mov
mov
adc
movs
adc
or
lods
mov
mov
lods
jne
ret
dec
pop
out
aad
xor
movs
mov
inc
cmp
and
call
inc
cmp
retf
popa
cli
das
mov
retf
jmp
lahf
and
fwait
in
dec
mov
pushf
aad
push
addr16
and
mov
mov
ret
dec
gs
(bad)
ror
sbb
add
or
int
aaa
movs
cmc
pop
pop
enter
xchg
mov
popf
popa
jae
and
push
inc
cmps
jne
add
(bad)
aad
imul
mov
inc
popf
push
outs
sahf
sti
inc
movs
xchg
popa
js
sbb
ffree
cmp
mov
scas
add
dec
imul
sar
push
(bad)
jl
in
aaa
rcl
out
add
mov
std
retf
shl
mov
rol
outs
jb
in
sub
cmp
or
cli
jb
fsub
jb
sub
cmp
rcl
push
gs
data16
cmp
scas
(bad)
ins
call
add
retf
ficomp
cmp
sub
mov
mov
push
mov
lea
mov
das
cld
sti
push
outs
adc
in
fdiv
xchg
mov
mov
popf
push
xchg
or
or
add
sub
lds
test
jbe
jle
dec
mov
dec
cs
inc
movs
and
aam
nop
retf
into
in
mov
mov
cmp
xchg
adc
aad
jge
inc
stos
cmps
jnp
inc
lea
(bad)
rcr
retf
nop
fcmovu
call
nop
jge
pop
or
dec
mov
mov
jmp
xchg
jne
sub
std
in
add
out
push
dec
or
mov
bound
cmc
inc
inc
xor
iret
sar
xor
inc
inc
mov
jmp
in
inc
or
fs
mov
sub
adc
retf
adc
sahf
in
push
jbe
add
push
(bad)
stc
sub
leave
adc
sbb
inc
sbb
pop
pop
sbb
je
and
repz
stc
fxam
(bad)
xor
jecxz
loopne
add
dec
cld
sub
xor
test
fwait
mov
pop
retf
dec
mov
popa
push
xlat
scas
pop
sub
lods
mov
add
(bad)
jns
aam
data16
add
cmp
int3
pop
cmp
aaa
pushf
and
xchg
cmp
sub
nop
int
pop
hlt
fs
ret
mov
lock
jmp
jb
movs
test
ins
rcr
pop
mov
in
and
and
adc
popa
ret
je
cmps
jb
shl
in
bound
mov
add
push
jecxz
arpl
in
ja
mov
adc
int3
lea
xor
mov
cmp
jnp
cmps
push
jmp
shl
xor
inc
sub
stc
inc
addr16
inc
mov
sbb
sub
ss
lea
xor
pop
add
in
push
pushf
add
mov
aaa
cmc
ja
movs
xor
outs
(bad)
xchg
sahf
rol
inc
xor
popf
dec
dec
jbe
sub
xchg
retf
sub
cmp
retf
add
pop
mov
inc
and
cmc
push
mov
lds
ins
mov
pop
sbb
xor
cld
scas
pop
test
sub
pop
les
and
icebp
pop
pushf
es
pop
xor
lahf
push
cmp
hlt
mov
inc
cmc
(bad)
fbstp
mov
mov
jmp
dec
fcomip
or
push
add
jmp
in
cwde
add
jp
imul
ins
push
push
sbb
imul
or
popa
xor
push
lock
test
call
mov
scas
lahf
fwait
mov
outs
and
fistp
mov
mov
mov
fwait
jmp
cmp
ja
hlt
mov
shr
cs
retf
xchg
push
xor
repz
cmp
ret
inc
sahf
das
push
bound
jae
mov
iret
fcomip
mov
push
popf
int
movs
push
jge
cmc
push
cmps
xor
dec
add
dec
mov
xor
mov
clc
jecxz
in
repz
xchg
add
add
jp
iret
inc
ins
add
and
push
xor
dec
cld
sbb
or
mov
ss
call
dec
aaa
adc
pop
add
adc
mov
sbb
std
cdq
jmp
rcl
pusha
jno
xchg
bound
and
in
in
adc
retf
pushf
and
sar
and
and
adc
sbb
mov
mov
iret
mov
int
dec
inc
inc
loope
xchg
jb
pop
enter
jo
(bad)
cmpxchg
idiv
ins
mov
mov
scas
add
pop
and
pop
mov
xchg
jl
stc
jle
jno
add
mov
mov
pop
push
xor
pop
add
dec
xor
jae
xor
fs
cmc
fst
sub
loope
icebp
mov
adc
push
xor
ins
push
push
loop
pusha
xchg
dec
jg
push
push
jns
adc
in
xchg
sti
fsubr
jne
add
retf
cwde
mov
ret
imul
jl
cmp
add
inc
jg
push
push
in
push
jns
fdiv
and
call
fadd
test
jmp
or
(bad)
aad
int3
push
xchg
repz
jnp
mov
jns
std
cmp
fcmove
sti
mov
out
inc
out
packuswb
mov
mov
outs
cmp
cmp
les
(bad)
jg
pushf
jbe
sbb
cmp
dec
shl
out
pop
fdiv
jns
mov
push
adc
shl
sub
add
call
out
pop
stos
test
in
lods
sbb
mov
and
dec
mov
sti
imul
fcmovu
fmul
xchg
pop
out
xchg
retf
addr16
push
cmp
repnz
or
(bad)
adc
sub
stos
(bad)
jmp
dec
aad
xchg
sbb
sub
les
data16
jne
test
pop
mov
(bad)
fwait
aad
and
inc
mov
xchg
out
cmp
sub
sub
enter
pushf
dec
daa
xor
test
push
ja
inc
fwait
adc
stc
mov
ins
loop
mov
pop
lea
xor
jb
nop
jle
in
ss
arpl
call
fidiv
cmps
pop
scas
data16
cmp
pop
aad
enter
xor
inc
xchg
ror
mov
push
cdq
clc
pop
inc
(bad)
imul
rcl
imul
mov
push
dec
dec
ror
push
daa
or
shl
jb
addr16
movs
or
lods
add
or
push
mov
adc
sbb
pop
jb
mov
mov
add
call
cdq
mov
adc
push
das
xchg
cwde
ins
pop
mov
xor
push
mov
clc
hlt
repnz
add
(bad)
and
pop
mov
in
dec
mov
mov
inc
inc
push
popa
fs
mov
xchg
bound
fdivr
cmp
or
fisub
sbb
orps
out
movs
xor
mov
xchg
ds
and
hlt
jmp
scas
add
cmp
mov
mov
adc
cmp
(bad)
mov
sub
cmp
rcl
js
jb
sbb
cmp
mov
or
test
neg
adc
push
les
hlt
jmp
xchg
pop
inc
iret
fs
mov
pop
sbb
xchg
pop
leave
and
fwait
clc
in
loope
test
adc
test
fimul
pop
or
xor
adc
fwait
lods
xchg
fcompp
stos
fst
pop
jp
xchg
stc
out
hlt
xor
cwde
neg
sbb
pop
and
push
addr16
cmp
cmps
nop
arpl
dec
mov
jo
push
xor
mov
scas
xor
sub
test
inc
in
mov
cld
xlat
jp
mov
dec
inc
gs
push
cmc
sbb
cli
rol
sbb
dec
mov
mov
add
fcomp
adc
jmp
pusha
stos
jmp
scas
cmp
outs
mov
jge
jae
popf
xor
mov
stc
push
into
or
mov
stos
inc
dec
(bad)
mov
test
jmp
outs
pop
ret
or
push
in
das
jmp
add
or
int
push
push
xchg
cmp
icebp
imul
retf
ds
and
xor
jmp
xchg
lock
retf
aam
push
icebp
cmp
dec
outs
cmps
lock
fcomp
dec
pushf
in
mov
packuswb
pop
xor
mov
xchg
ds
daa
dec
imul
bswap
push
pop
(bad)
retf
loope
sub
sbb
fiadd
fsubr
into
sbb
inc
loop
sub
std
dec
and
dec
xchg
sbb
test
shr
mov
outs
das
xchg
es
jp
inc
popa
shr
and
(bad)
mov
inc
cmps
into
push
fmul
jne
push
pop
data16
arpl
stc
addr16
mov
adc
inc
mov
or
(bad)
fisub
xchg
fisub
cmc
mov
out
jecxz
nop
sub
dec
enter
test
adc
sti
adc
outs
push
or
(bad)
loope
xchg
(bad)
test
jge
in
adc
jno
pop
push
add
or
stos
dec
fild
xor
stos
mov
sbb
clc
xor
pop
psubw
retf
call
jecxz
jge
pop
(bad)
gs
scas
xor
mov
call
and
arpl
mov
or
(bad)
push
xchg
mov
call
ss
adc
out
jp
jbe
inc
or
push
and
rol
imul
icebp
lods
inc
mov
push
dec
stos
enter
cmc
mov
fsubr
loop
fisubr
ins
fwait
loope
ins
cmp
shl
fcom
das
inc
xor
pusha
xchg
xchg
test
clc
cmc
(bad)
lea
sbb
call
jg
loope
rcl
push
jnp
mov
(bad)
cmp
add
fadd
adc
cwde
and
push
sub
call
sbb
push
outs
xor
sub
lea
loope
inc
(bad)
sbb
call
ds
bound
dec
cli
lahf
or
ror
es
mov
psubd
lock
sbb
adc
repnz
xchg
icebp
xor
ret
mov
pusha
xor
cs
cmp
push
xor
jle
dec
fdivr
imul
dec
and
mov
scas
cmp
push
int
in
(bad)
fwait
nop
mov
xchg
jns
push
mov
ins
pushf
push
mov
sbb
sbb
or
sahf
out
xchg
repz
repz
add
in
mov
pusha
xor
or
and
leave
pop
int
jp
jle
or
jno
cdq
sbb
sbb
rcl
push
and
adc
dec
test
dec
adc
arpl
or
int3
imul
mov
std
ins
and
dec
aaa
adc
daa
sbb
and
stos
mov
inc
dec
test
jns
shr
mov
out
movs
jg
xchg
test
cs
xchg
xor
sub
test
dec
jle
js
loopne
ins
push
adc
scas
mov
sti
das
movs
cmps
popa
loope
sbb
jb
stos
xchg
test
(bad)
and
or
mov
(bad)
inc
scas
scas
or
xor
lahf
lods
jae
push
push
out
mov
mov
movs
outs
jmp
mov
ficomp
ss
sbb
aas
inc
rol
add
and
ins
cmovo
aaa
mov
dec
and
in
jle
and
mov
(bad)
fsub
push
xchg
add
inc
mov
ja
ficomp
rcr
mov
jp
push
xor
mov
hlt
cmp
test
sub
outs
arpl
cmps
cwde
int3
sti
push
cmps
sbb
ss
std
(bad)
addr16
cs
mov
nop
and
push
scas
push
add
out
cdq
and
(bad)
sbb
pop
movs
add
mov
mov
call
push
add
(bad)
loopne
mov
enter
shl
sbb
inc
jo
mov
(bad)
into
mov
sahf
add
jp
and
jns
daa
daa
jnp
pop
lea
iret
push
dec
lods
xchg
sub
inc
push
and
mov
inc
fwait
sahf
jmp
pop
cmp
sub
xor
xchg
push
(bad)
fst
sar
xchg
lods
scas
mov
pushf
mov
mov
fdiv
dec
call
mov
jecxz
pushf
enter
clc
xchg
pop
inc
inc
inc
stc
daa
mov
clc
repz
nop
add
(bad)
mov
sub
sub
fist
aaa
jno
xchg
cmp
add
xchg
sub
and
loope
adc
sbb
inc
add
cld
das
dec
mov
popa
loop
and
mov
cmp
in
(bad)
repz
cmp
jo
jmp
push
aad
clc
push
jb
jl
fsubp
push
popf
jle
ret
sbb
(bad)
inc
cwde
test
jns
rcl
loop
leave
pop
inc
(bad)
mov
cmp
sahf
xchg
rol
iret
mov
ins
xchg
mov
jg
jp
icebp
xchg
or
mov
xchg
and
xor
add
aaa
stos
xor
lds
es
into
js
pop
pop
enter
sbb
mov
jp
mov
stos
inc
sub
movs
idiv
mov
ret
ins
jbe
jno
cmp
ret
adc
inc
cmps
adc
paddusb
inc
and
jle
adc
out
push
cmp
dec
call
and
sbb
push
and
push
fist
add
(bad)
in
xchg
sub
or
push
sub
out
ss
in
cli
push
aaa
repz
fist
int3
aam
ds
push
mov
callw
pop
cld
fnstcw
cmp
movs
mov
in
sub
dec
cmp
mov
fcmovbe
and
call
inc
pop
ret
jae
xchg
or
dec
fbld
or
xchg
test
dec
sti
stc
jo
adc
cs
inc
cmp
mov
xor
jo
test
fadd
cmc
cli
(bad)
jge
je
loop
out
cmps
icebp
mov
jns
add
call
push
dec
jb
and
mov
pushf
xchg
mov
enter
or
mov
cmp
mov
cmp
dec
pop
cmp
push
popf
adc
xor
jecxz
mov
push
ja
sub
inc
dec
in
add
popf
movs
mov
out
mov
inc
push
in
and
mov
xor
bswap
test
ftst
imul
push
inc
and
shl
iret
lock
inc
aaa
and
xchg
lea
add
adc
pop
and
stos
jae
push
xor
cs
rol
aad
sub
push
sub
dec
lahf
xchg
inc
sbb
and
xchg
sbb
iret
mov
stos
jg
xor
jbe
sub
call
(bad)
out
enter
std
xchg
retf
aaa
add
stos
fldenv
sub
sbb
cli
mov
push
shl
add
xchg
push
add
icebp
mov
add
or
movs
adc
fisubr
cli
es
or
push
xor
xor
push
sbb
mov
jno
jae
or
repnz
in
xchg
dec
je
jp
mov
mov
mov
inc
ds
jle
jns
jle
adc
sub
mov
scas
call
xchg
mov
mov
pop
inc
adc
call
cdq
test
dec
cmp
pop
inc
adc
push
add
push
and
sbb
push
jno
sti
xchg
mov
inc
add
int
retf
xchg
stc
xchg
inc
push
dec
push
stc
and
inc
dec
adc
jmp
sar
sub
push
pop
or
repz
pop
inc
daa
jb
jmp
xor
push
mov
xchg
fstp
lahf
fild
mov
or
xchg
jge
adc
(bad)
icebp
leave
mov
leave
mov
lahf
dec
pop
adc
(bad)
(bad)
mov
ins
and
std
push
sbb
out
test
out
xchg
test
cwde
cli
sub
arpl
xchg
in
jae
ja
and
lahf
dec
call
adc
jbe
idiv
popf
jmp
cmp
push
mov
int3
mov
add
std
(bad)
pushf
(bad)
mov
addr16
or
call
pop
sub
inc
hlt
pushf
loope
int3
xchg
stos
hlt
mov
mov
jecxz
ret
stos
call
loope
mov
jle
inc
test
js
pop
out
jbe
outs
or
mov
xor
push
rcr
mov
xchg
aad
movs
xchg
push
xor
ret
cmc
and
inc
sbb
sub
dec
adc
inc
fisttp
xor
adc
pusha
adc
movs
(bad)
mov
test
or
stos
lock
cmovs
ja
push
in
cmp
popa
sub
sbb
push
xor
int
add
dec
xchg
xchg
xlat
(bad)
mov
lahf
not
xchg
repz
sub
vmread
pop
pop
repnz
jno
push
lods
clc
mov
cmp
add
cmp
imul
inc
and
xor
adc
push
mov
pop
dec
sub
cld
mov
pop
pop
or
in
adc
das
iret
dec
push
pop
in
int3
push
ficomp
or
push
sbb
ret
call
inc
xor
mov
sub
push
or
push
pop
fs
cmp
mov
xor
dec
sub
xor
outs
xor
(bad)
movs
jno
arpl
ret
cwde
dec
sub
dec
pop
jno
or
into
pushf
stos
les
sbb
dec
sbb
cdq
cmps
in
xchg
xchg
cmps
(bad)
mov
popf
into
jne
lods
into
xchg
iret
(bad)
xlat
or
repnz
mov
bound
fs
add
xlat
cwde
icebp
test
mov
outs
xor
push
adc
out
cld
push
in
(bad)
mov
or
cmp
pop
sub
mov
ret
sub
(bad)
test
xchg
clc
fs
es
js
sub
inc
ret
mov
dec
jmp
frstor
pusha
add
adc
sbb
test
add
xchg
retf
mov
xchg
rcr
xchg
jmp
sbb
popa
fdivr
loopne
in
retf
xor
adc
sub
or
test
mov
outs
sub
and
sbb
jg
je
in
stos
jge
pop
gs
mov
and
cs
push
sbb
pusha
das
jb
imul
and
and
or
ret
push
xor
cmp
jmp
data16
test
xchg
leave
xchg
ret
push
add
or
push
xor
(bad)
xchg
sti
xchg
fidivr
je
dec
adc
imul
add
inc
mov
xor
call
add
int3
jns
pusha
or
jg
stc
aam
dec
xor
jne
inc
cmp
xor
pop
out
sub
sbb
xor
dec
mov
iret
xchg
inc
out
mov
in
mov
mov
shl
xchg
push
or
jbe
dec
scas
lods
out
mov
out
cmps
jne
jno
and
and
xchg
jg
or
es
mov
mov
jle
js
jle
xchg
mov
mov
or
daa
push
dec
cmp
mov
xchg
xchg
mov
mov
retf
pop
cmps
mov
imul
in
fsub
dec
in
imul
mov
or
popa
or
es
sub
dec
adc
or
xchg
or
out
xchg
rcl
mov
xchg
shl
or
fild
push
and
or
mov
mov
test
and
and
(bad)
out
call
in
sar
retf
mov
cmc
xchg
movs
mov
mov
das
sbb
mov
cmp
cmp
div
inc
and
xchg
mov
rol
in
lods
ins
and
pop
sbb
jae
loopne
cdq
jmp
add
xchg
fisubr
mov
jne
or
push
sub
movs
mov
inc
or
xor
lds
dec
add
out
cmps
hlt
daa
sub
cmps
loope
dec
cmp
popf
ficom
or
std
lahf
shl
inc
or
jnp
and
js
push
adc
arpl
call
aad
(bad)
jns
je
adc
or
jl
loopne
lock
inc
add
in
jbe
test
mov
mov
push
sub
jae
dec
sbb
pop
lods
inc
xor
das
outs
cmp
shl
pop
add
xor
icebp
xchg
(bad)
(bad)
aad
repz
dec
sub
clc
xchg
fstp
add
pop
pop
ds
sub
adc
cmp
xchg
and
ds
ss
mov
push
sbb
jle
pop
cmp
dec
or
rcl
mov
push
in
ds
and
ins
fst
ja
jbe
push
sub
bound
jns
sub
cmp
cli
test
scas
rcl
cmp
sub
aad
jmp
sbb
(bad)
ins
ret
fwait
ror
sub
inc
das
jmp
or
push
fwait
sbb
push
popa
sbb
inc
adc
ficom
or
(bad)
ror
pop
ds
mov
inc
or
dec
in
test
aaa
addr16
add
cmp
lods
xlat
test
mov
push
push
add
sub
push
sub
mov
lods
jmp
out
xchg
mov
and
and
ror
ins
xor
sub
dec
adc
jge
ins
mov
ficomp
cmc
pushf
cmps
fcom
push
jnp
(bad)
mov
test
sub
jbe
push
add
outs
xor
or
(bad)
mov
sti
mov
mov
mov
pop
(bad)
xchg
cld
mov
cmps
leave
popa
cs
rol
adc
ss
xor
jle
mov
mov
cdq
xchg
cld
mov
(bad)
mov
sub
popa
adc
jne
fist
ficomp
or
cwde
rcl
jae
push
les
jge
outs
cmp
or
mov
gs
out
(bad)
imul
xor
cmp
and
adc
imul
cmc
mov
cmp
movs
fisubr
sbb
xor
xchg
out
sbb
pop
cmp
clc
movs
out
movs
fbld
dec
sub
jl
push
add
xor
out
les
mov
pop
push
adc
jae
fs
sti
xchg
arpl
xchg
frstor
aam
(bad)
ja
fistp
xchg
xlat
scas
shl
jecxz
aad
cmp
ins
push
je
push
sbb
jmp
sub
mov
or
pop
out
mov
lahf
xlat
xchg
icebp
pusha
and
cmp
dec
adc
mov
mov
fisttp
pusha
xor
push
and
aas
adc
dec
mov
sub
and
jnp
jb
xor
inc
or
push
sar
fiadd
sub
inc
aam
popa
sub
call
pop
push
push
jg
adc
push
push
test
mov
in
sbb
inc
xor
jmp
xchg
shl
push
add
lahf
mov
jle
ret
dec
push
pop
or
bnd
stos
call
fadd
call
adc
out
sbb
cs
and
cmovs
sub
xor
les
out
mov
mov
mov
mov
test
cdq
mov
cmp
aam
add
std
push
sbb
jmp
fwait
call
dec
or
jo
inc
rcl
jge
pop
sub
mov
pop
in
mov
mov
pop
sbb
inc
or
inc
mov
nop
inc
hlt
cmp
jbe
jge
mov
inc
jmp
cwde
rol
mov
push
out
mov
(bad)
(bad)
scas
les
ss
jo
pushw
pop
in
movs
icebp
mov
aaa
(bad)
fist
arpl
mov
mov
test
(bad)
xchg
fdiv
jge
cmp
cmp
clc
mov
imul
fild
or
je
aam
arpl
mov
movs
cld
mov
lods
fs
pushf
fiadd
pop
inc
push
int3
inc
sub
(bad)
loop
cmc
xor
mov
int
mov
jmp
mov
mov
pusha
add
out
not
jl
jno
jns
ins
sbb
sub
and
test
js
cmp
out
out
bound
fs
repz
mov
sub
das
cs
add
scas
mov
in
retf
dec
push
dec
aas
ins
push
sub
sbb
test
mov
shl
add
push
outs
aas
dec
adc
mov
mov
retf
xchg
icebp
cdq
test
cmps
dec
mov
aam
ret
inc
(bad)
xchg
rcl
retf
call
add
mov
imul
popa
clc
mov
mov
mov
mov
jnp
push
add
jge
sub
mov
mov
test
xchg
mov
add
xor
das
sbb
sbb
xchg
xchg
aad
scas
jno
out
shr
push
push
call
jno
data16
push
adc
cmp
or
ja
push
in
outs
cmc
sar
sub
test
mul
ret
mov
or
dec
clc
mov
scas
jmp
out
push
or
xor
scas
jne
addr16
fbld
dec
xor
test
imul
mov
dec
aam
imul
inc
loope
inc
(bad)
test
add
inc
aad
mov
pop
push
cmp
dec
sbb
out
jno
cmp
and
js
stos
(bad)
daa
dec
std
mov
xor
pop
mov
dec
fidivr
stos
enter
and
sub
test
mov
jb
cmp
add
das
and
xchg
out
lods
movs
fldcw
call
gs
idiv
imul
call
jae
pop
pop
pop
mov
test
cmp
push
(bad)
imul
cmp
jo
cdq
retf
ss
mov
fld
inc
aaa
outs
xor
xchg
adc
aaa
data16
cs
sbb
pop
sbb
jb
int3
mov
(bad)
cdq
(bad)
in
arpl
dec
push
ret
imul
fbstp
ss
int3
sub
and
lock
jo
and
mov
mov
or
pusha
enter
test
stc
add
scas
hlt
pushf
jge
loop
jbe
cmc
cdq
jmp
mov
mov
call
mov
nop
mov
or
push
and
adc
arpl
rol
in
popf
fiadd
xchg
les
das
out
mov
fist
mul
scas
in
test
mov
mov
test
test
cdq
cmc
mov
ins
aas
jge
add
jo
and
inc
sub
test
dec
push
pop
xor
mov
test
push
cmps
fs
(bad)
pushf
mov
fdivr
inc
or
pop
cmp
imul
ror
jl
imul
inc
or
sbb
add
mov
xchg
mov
xchg
ret
sahf
jbe
cmp
push
jb
pop
sbb
cs
aaa
inc
das
pop
in
in
(bad)
push
or
xchg
idiv
mov
xor
mov
mov
adc
xor
and
sti
mov
leave
mov
mov
pushf
mov
mov
sar
push
adc
dec
stos
jb
inc
cmovnp
mov
jnp
dec
in
push
ss
bound
pop
adc
pop
mov
jmp
jmp
inc
pop
test
fistp
stc
sbb
jns
lahf
dec
cmps
sbb
jae
add
jnp
inc
xchg
rcl
jmp
es
hlt
(bad)
xlat
call
inc
loope
or
int
icebp
mov
dec
push
push
push
and
push
push
sbb
daa
dec
cmp
and
add
xchg
test
jmp
jmp
(bad)
cld
xchg
popf
lds
mov
stos
not
dec
fiadd
nop
stc
inc
push
(bad)
lock
or
dec
in
js
pop
adc
(bad)
or
(bad)
sub
jo
ds
and
stos
fcomp
push
sbb
lahf
or
gs
xor
push
jg
enter
loope
enter
cld
mov
mov
std
sub
mov
scas
(bad)
fwait
stc
xchg
xchg
fisubr
push
bound
inc
xor
dec
fs
in
fld
sbb
jg
cmp
mov
mov
repnz
adc
mov
jns
inc
mov
inc
das
and
(bad)
and
pop
daa
dec
pop
ret
hlt
daa
repnz
std
mov
pushf
mul
cld
addr16
scas
cld
mov
fbld
popa
xor
js
fcomp
mov
popf
jmp
cwde
retf
lods
cmps
in
mov
adc
inc
ds
mov
mov
pop
sub
xor
and
or
mov
out
outs
xor
push
loopne
repnz
test
mov
mov
xchg
fsub
add
xor
add
cmp
ins
in
mov
mov
cmp
cmp
push
inc
adc
sub
mov
es
sbb
pop
in
mov
xlat
(bad)
(bad)
aaa
xor
adc
(bad)
jnp
loope
shl
jb
popa
sub
inc
add
add
je
jb
loope
jno
lods
ret
das
sbb
cs
fild
ret
jle
not
cli
cwde
dec
mov
pop
cmp
jmp
add
ds
je
lds
outs
sub
inc
cmps
lods
or
pop
jmp
push
mov
fucomp
pusha
loopne
xchg
in
scas
mov
in
repz
xlat
call
aas
xor
push
out
lds
or
ja
inc
rcr
inc
out
movs
movs
fadd
popf
mov
ja
pusha
xor
sub
fistp
int3
xchg
cmps
into
inc
loopne
mov
cwde
fld
pusha
push
pop
push
jo
jg
adc
pusha
xor
lahf
shr
and
and
push
dec
cmp
es
pop
sub
dec
push
repz
inc
fdiv
fiadd
dec
xor
jne
lods
nop
popf
mov
stc
gs
aas
jnp
dec
sub
pop
pop
add
ret
xchg
out
pop
jle
cmp
add
imul
(bad)
mov
lahf
mov
sbb
jmp
cld
pop
mov
popf
fiadd
adc
addr16
mov
bound
jg
or
retf
xchg
inc
sub
ins
hlt
xor
dec
sbb
push
push
ja
inc
hlt
popf
retf
leave
mov
mov
jmp
and
add
inc
scas
icebp
call
dec
std
cwde
les
test
mov
pop
xor
jg
test
mov
or
sub
push
cmp
adc
pop
mov
out
pop
pop
push
adc
add
dec
adc
add
jnp
push
mov
rcr
mov
cwde
movs
inc
pop
jae
pop
fiadd
jne
je
pop
mov
push
xor
arpl
inc
push
iret
inc
xor
das
pop
add
mov
xchg
(bad)
and
jle
int
or
adc
inc
ds
mov
mov
retf
mov
shl
adc
sub
or
ficom
mov
mov
inc
add
xchg
fmul
mov
adc
push
cmp
cs
adc
push
(bad)
push
in
bound
jnp
pop
loopne
sti
adc
jg
xchg
xchg
in
mov
fisttp
push
push
repnz
xor
sub
jge
and
neg
fist
sub
jnp
popf
out
mov
stc
and
sbb
add
push
jmp
and
pop
mov
cmp
xor
jmp
repz
mov
daa
mov
mov
cld
xchg
fild
int
fbld
ror
aas
jne
js
cld
cli
xor
push
loopne
ds
cmps
ror
dec
mov
(bad)
retf
xchg
sbb
xchg
ret
sahf
stc
pop
rcr
mov
cmp
ja
inc
cmp
jl
int
dec
add
int3
fisttp
sar
push
and
xchg
leave
cdq
fild
shl
xchg
jnp
sub
jge
les
das
cmc
sbb
add
pop
add
rcl
pushf
iret
mov
cs
adc
ret
popa
and
ret
and
shr
sbb
pop
out
pop
xor
fwait
sub
sub
push
or
sbb
pop
fidiv
ins
sub
xchg
(bad)
mov
call
mov
lods
cmps
bound
inc
push
jno
inc
loop
retf
dec
sub
loope
xlat
popf
jmp
jbe
leave
cld
xchg
iret
xchg
lods
popf
fbstp
(bad)
fisub
pushf
lods
popa
xor
mov
jmp
adc
rcr
xchg
cs
push
es
pop
in
cli
or
popa
sbb
adc
pop
stos
shl
xchg
xlat
test
mov
pop
pop
sbb
dec
xor
ss
mov
test
mov
test
mov
pushf
push
rol
idiv
clc
mov
daa
inc
or
xor
inc
es
es
sahf
out
cmps
jnp
push
push
dec
or
push
data16
mov
jecxz
addr16
sbb
minps
jns
js
pop
shl
add
lahf
cmc
mov
push
xor
pop
jecxz
test
inc
or
fidiv
arpl
std
test
pushf
sti
pushf
sbb
or
(bad)
xchg
shl
dec
inc
adc
sub
mov
outs
or
nop
fiadd
arpl
mov
inc
fiadd
jge
test
mov
test
xor
pop
or
push
cmp
mov
pop
inc
pop
pop
adc
sar
dec
cmp
out
aam
or
repnz
adc
push
leave
mov
dec
sbb
jno
fsub
ror
rcl
sub
and
cmp
les
das
cmp
add
scas
aam
ret
and
mov
cmps
in
std
cdq
mov
push
add
sub
inc
or
push
push
loope
push
sub
push
loopne
sub
dec
add
jecxz
mov
je
hlt
sub
dec
push
pop
adc
xchg
rcl
xchg
push
add
sub
aas
jg
sbb
or
into
int3
mov
push
and
mov
scas
jecxz
xchg
adc
jmp
loope
ja
dec
cmps
sub
sbb
ret
lods
mov
imul
int
jg
xor
mov
push
sbb
mov
dec
rol
ret
dec
add
stc
jmp
sti
fwait
ins
jae
adc
icebp
ret
or
cmp
fs
sbb
and
(bad)
int3
ret
push
push
or
fisubr
test
pop
pop
dec
test
jo
int3
fld
adc
dec
mov
push
and
mov
je
int3
fst
test
pop
sbb
repz
or
sub
and
loope
test
clc
mov
mov
xchg
stc
mov
push
shr
mov
bound
in
scas
addr16
jmp
daa
inc
add
fidiv
mov
jnp
jne
push
sbb
sub
inc
(bad)
out
cmp
cmps
(bad)
pusha
cmps
cmp
add
vpshufd
jg
cwde
fisubr
inc
repnz
add
ss
std
xchg
fucomi
cmps
(bad)
xchg
daa
push
xchg
sbb
jecxz
jmp
push
add
xor
jge
arpl
enter
das
dec
or
and
mov
in
sbb
and
mov
dec
adc
sub
loopne
out
pop
sub
shl
inc
mov
cdq
ficomp
add
xchg
clc
jmp
shl
(bad)
mov
loope
mov
aas
mov
ja
cli
std
fnsave
mov
mov
push
lods
and
pop
mov
push
test
add
pusha
and
aad
call
int3
out
add
mov
push
adc
cmc
add
cdq
cmp
cld
cmc
(bad)
cld
sub
push
repnz
push
mov
sahf
(bad)
stos
push
pop
aaa
inc
mov
inc
pop
iret
xlat
cmps
jmp
mov
push
ins
mov
cli
scas
jmp
mov
jmp
push
adc
int
cli
sub
in
lods
fs
push
je
shr
mov
cmp
ds
out
movs
lods
dec
jo
add
lods
les
dec
sub
pop
or
adc
mov
pushf
cmp
outs
pusha
dec
sub
data16
add
fucom
retf
or
jne
and
pop
pop
jg
xor
ds
(bad)
or
adc
das
popa
adc
enter
xor
xor
sti
mov
jecxz
aad
cs
rol
inc
sub
(bad)
in
push
dec
cmp
scas
fadd
fld
lea
ins
ss
sbb
(bad)
xchg
iret
in
mov
faddp
xlat
popf
shl
mov
add
jl
dec
or
ret
pop
bound
jb
and
sub
movs
sti
mov
xchg
repz
repz
bound
bound
and
push
push
jne
push
add
adc
add
lds
(bad)
mov
arpl
movs
std
mov
xchg
cmp
and
imul
cmp
cmp
sub
push
pop
inc
(bad)
jmp
retf
dec
mov
mov
xor
retf
xchg
fidiv
and
retf
cmps
aas
pusha
cmp
push
mov
jbe
xchg
mov
jp
sbb
add
or
sbb
lods
lds
mov
lds
mov
leave
div
lods
jns
cs
or
std
mov
sub
pusha
sub
and
in
jl
and
ror
mov
sub
jp
adc
(bad)
shr
in
sahf
or
iret
scas
data16
stc
mov
push
ds
pop
push
add
pop
jg
adc
mov
xchg
mov
fsub
ret
mov
ds
inc
jge
jl
clc
mov
push
stos
push
pop
das
add
scas
dec
not
into
ror
pushf
div
xchg
dec
push
or
not
js
cmp
adc
mov
pop
sub
(bad)
stc
mov
mov
push
pop
inc
fmulp
cmp
outs
sub
cmc
ret
xchg
shr
mov
inc
push
sar
(bad)
setno
mov
add
push
push
cmp
into
mov
js
or
and
pop
push
enter
pop
addr16
jnp
push
sbb
push
inc
and
mov
ss
mov
ins
lods
test
mov
push
loopne
jecxz
clc
cmp
call
push
dec
push
scas
sub
mov
dec
xchg
sub
shl
mov
add
ins
add
(bad)
stc
xchg
jne
jg
fcmovu
add
shl
(bad)
ds
fwait
sbb
ror
xchg
cmc
adc
js
(bad)
xchg
cmp
loope
xlat
in
ret
mov
cmp
out
iret
loope
xlat
xchg
push
adc
sub
jle
cld
mov
mov
push
push
xor
pop
imul
not
xchg
pusha
addr16
xor
in
shl
mov
imul
pop
dec
ds
xchg
int
pop
sbb
retf
mov
and
add
rcr
mov
add
sbb
rcl
mov
call
(bad)
mov
push
push
fs
xor
les
mov
sbb
test
ss
dec
push
push
or
fimul
jg
cld
ficomp
adc
lea
add
movs
(bad)
mov
jge
push
mov
inc
add
ret
fisub
ret
fiadd
fwait
jne
push
aaa
cmp
mov
pop
mov
or
shr
mov
mov
inc
add
iret
mov
push
jb
pop
inc
cmp
test
mov
mov
mov
rol
push
mov
in
add
enter
xor
inc
adc
mov
pop
fs
mov
adc
and
sub
or
cs
or
fstp
jl
jbe
sub
loopne
xor
inc
inc
dec
adc
sub
jns
dec
or
lods
repz
lahf
jmp
dec
cmp
mov
sahf
fcmovnb
mov
mov
movs
in
lea
js
inc
jae
pop
fs
shl
jae
pop
inc
pop
cmp
call
rcr
jb
dec
xchg
cld
mov
mov
jne
add
loopne
loop
mov
pop
outs
xor
pushf
fucompp
add
daa
(bad)
rcl
test
fisttp
mov
lahf
out
pop
outs
adc
std
mov
or
pop
aas
rol
aam
xor
aaa
ja
lock
fistp
jl
push
jne
adc
adc
aam
retf
xchg
add
xor
pop
cmp
(bad)
loop
scas
jle
retf
ja
inc
mov
cmovl
sub
or
fucomp
call
das
jl
stc
cld
xchg
bound
push
lock
add
or
jmp
mov
jl
dec
or
mov
mov
push
movhps
movs
(bad)
and
pushf
ficom
add
addr16
and
push
outs
cmps
and
and
rcr
mov
aas
js
retf
ret
or
cli
stos
(bad)
pop
xor
and
icebp
jnp
xor
pop
xor
in
aam
mov
(bad)
nop
xchg
or
std
fnstcw
retf
shl
mov
addr16
into
(bad)
mov
sub
ds
loope
retf
pop
add
cmp
(bad)
mov
adc
call
jmp
adc
jp
jl
leave
cmps
(bad)
lahf
jnp
ss
(bad)
in
iret
das
xchg
mov
sbb
jmp
cmc
pop
jg
cmp
outs
hlt
and
bound
adc
ins
and
pop
push
or
ret
mov
inc
mov
je
lock
or
in
call
fild
xor
stc
add
pop
retf
out
test
sti
lock
test
(bad)
mov
jae
int3
mov
or
sbb
add
jns
inc
add
xchg
xlat
xchg
xor
jp
mov
(bad)
xchg
repz
cmps
repz
aam
test
mov
cmp
cli
stos
dec
pop
pop
jno
int3
mov
sbb
dec
ins
and
mov
pop
addr16
sbb
out
jecxz
mov
mov
js
cmp
pop
icebp
in
scas
mov
xchg
shl
xchg
div
mov
nop
(bad)
xor
jb
adc
xchg
out
mov
xor
xchg
out
dec
sub
(bad)
adc
shr
mov
sbb
dec
mov
nop
cli
mov
aas
jg
fsubr
mov
mov
jbe
jp
add
jmp
mov
or
fstp
mov
xchg
shl
inc
pop
adc
sub
adc
movs
mov
mov
xchg
jae
or
sub
jnp
push
arpl
sbb
fadd
icebp
adc
cmovns
add
sbb
leave
adc
cmp
sub
or
fst
mov
push
jge
gs
pop
push
mov
jmp
(bad)
test
fnstenv
adc
rcr
call
xchg
pop
popf
mov
outs
aaa
mov
loopne
xchg
cs
add
les
repz
repnz
daa
imul
or
add
fdivr
es
out
(bad)
out
int
aam
(bad)
fstp
mov
mov
mov
xor
sub
mov
cdq
in
pop
(bad)
enter
or
rcr
jae
push
fwait
ret
into
cmps
in
xor
sub
mov
(bad)
iret
sti
mov
pushf
and
loopne
aad
mov
test
jbe
sbb
mov
test
pop
ss
and
leave
xchg
xchg
cmp
ins
mov
scas
int3
lds
jge
(bad)
xchg
mov
outs
push
xor
adc
jmp
aas
je
and
xor
adc
enter
adc
sbb
cmp
scas
repz
adc
(bad)
cwde
stos
nop
je
jb
pop
pop
xor
sbb
cmpxchg8b
dec
push
(bad)
push
dec
hlt
pop
test
xchg
pop
jb
cmp
push
sub
jl
adc
xor
or
clc
shl
popa
dec
sub
xchg
call
(bad)
rcl
call
cmps
adc
cli
mov
sbb
retf
outs
lahf
push
popa
(bad)
adc
jg
jecxz
mov
dec
inc
inc
pop
mov
sub
scas
adc
out
rcl
push
push
xor
sub
loope
push
xor
add
out
mov
movs
push
fs
push
jb
or
fst
mov
push
jle
not
push
mov
bound
sbb
je
add
(bad)
repz
pop
push
sbb
add
push
out
test
sbb
fld
nop
sar
xchg
idiv
(bad)
out
and
adc
not
jbe
aaa
ja
sbb
stc
xchg
jle
and
repz
push
mov
push
cdq
fist
stc
jle
(bad)
mov
call
push
xchg
cmp
adc
loop
mov
mov
ja
sub
jmp
push
jecxz
sbb
fs
or
sub
jle
ret
setle
pushf
and
add
inc
add
pop
xor
lods
ret
test
gs
in
xchg
aad
xchg
rol
movs
adc
ror
sub
mov
cmps
aam
xchg
rol
es
sbb
xor
adc
outs
cmp
iret
mov
aas
mov
movs
sahf
xor
adc
jo
sub
mov
lods
jmp
mov
sahf
int3
xor
add
pop
sbb
test
mov
test
and
in
retf
xor
pop
mov
or
iret
rcr
adc
push
sbb
sar
test
ret
loope
xchg
jmp
jns
or
loopne
xor
inc
push
sub
mul
(bad)
pop
pop
mov
xchg
in
dec
das
outs
xchg
or
in
mov
xchg
jno
push
outs
movs
sub
in
or
push
imul
icebp
or
pop
or
cmp
sbb
fadd
icebp
sbb
icebp
(bad)
mov
inc
(bad)
out
lods
pushf
pop
and
out
xchg
add
movs
pop
pop
and
jecxz
jne
cmp
(bad)
jecxz
mov
loope
rcl
(bad)
fst
jmp
icebp
fisttp
mov
imul
fstp
jp
arpl
add
bound
lods
ret
adc
push
jnp
adc
xor
fisub
pop
inc
jle
dec
or
lods
repnz
jno
push
inc
add
sbb
push
and
mov
outs
cmp
in
cmps
shl
mov
fmulp
mov
xchg
dec
ss
adc
out
jmp
sbb
sub
sti
mov
sti
mov
mov
sahf
loope
and
cmp
fisttp
xchg
es
cs
aam
xor
xchg
shr
jbe
pop
sbb
ja
jge
push
or
dec
cmp
das
jbe
stos
push
jle
(bad)
icebp
mov
push
inc
pop
pop
inc
jnp
dec
add
mov
pop
cmp
stos
loope
bound
dec
ja
add
loopne
loop
stos
cld
mov
xor
xor
sahf
adc
enter
ins
and
dec
jge
jno
(bad)
call
call
inc
test
mov
push
sub
and
adc
pop
pushf
out
mov
int
(bad)
push
sbb
cmc
in
mov
lods
shl
rcl
les
xor
or
cmps
add
cmp
pusha
(bad)
out
repnz
popa
inc
xor
or
(bad)
retf
ds
push
movs
jecxz
mov
jmp
sub
jmp
in
out
iret
sub
adc
mov
jecxz
out
inc
dec
add
mov
std
xchg
xchg
or
in
aam
sbb
mov
lahf
dec
icebp
mov
push
cs
fdiv
rcl
retf
jmp
pushf
ror
cmp
(bad)
test
push
adc
outs
dec
xor
cmp
fst
stos
jle
sub
push
push
cmp
and
push
or
les
pushf
dec
call
repz
push
pop
adc
pop
push
push
std
test
mov
mov
bound
push
test
pop
pusha
cs
lahf
and
sti
int3
lea
mov
ins
ds
jge
daa
cmp
(bad)
fidivr
xchg
clc
mov
jns
cmp
xchg
sub
cmp
add
cmp
movs
dec
sub
push
or
scas
and
sbb
aas
xchg
jae
loop
mul
fild
mov
repnz
shl
out
scas
call
gs
popa
mov
cmps
(bad)
out
mov
in
cmps
icebp
test
add
rcr
dec
add
clc
mov
inc
sub
cmc
sbb
add
mov
jnp
mov
mov
mov
sub
dec
or
mov
repz
and
push
adc
sub
pop
mov
jnp
(bad)
dec
dec
cmp
xor
xchg
sbb
(bad)
pop
lods
bound
call
sub
(bad)
rol
cdq
jae
cmp
xor
test
pop
mov
lahf
fsubr
push
aam
dec
dec
push
and
and
daa
mov
add
fnstenv
je
xor
mov
or
push
int
mov
cmp
cmp
add
in
clc
lods
into
cmp
ret
adc
out
(bad)
add
xchg
push
push
mov
sbb
loope
(bad)
lds
pop
or
fcmovnb
test
cli
ret
inc
outs
aas
and
add
xor
mov
mov
aam
dec
and
sar
retf
nop
pop
xor
sar
cmp
and
mov
inc
and
mov
pop
sbb
stos
fcomp
addr16
adc
sti
xchg
fcmovnb
and
pop
es
mov
sbb
and
ret
sub
ja
inc
jle
inc
pop
inc
sub
cmc
pop
xchg
rol
jmp
std
mov
jge
mov
scas
out
mov
imul
jmp
call
jge
out
lods
pop
push
dec
or
xchg
scas
push
xor
sbb
xchg
xchg
cmp
std
mov
cwde
fadd
jp
imul
adc
aaa
pop
nop
cld
cmps
aam
mov
mov
sub
int3
mov
ins
add
mov
mov
cwde
ror
dec
add
sbb
lods
repz
(bad)
int3
mov
inc
xor
xchg
or
fild
push
int
rol
jo
inc
xor
inc
xor
int
mov
mov
inc
movntq
inc
sar
dec
pop
cmp
pop
adc
adc
in
js
dec
nop
bnd
jo
aas
(bad)
in
mov
arpl
sub
not
rol
test
repz
das
mov
ja
pop
dec
cmp
mov
pop
test
xchg
push
push
daa
push
test
inc
add
(bad)
xor
pusha
add
cmps
pop
jp
pop
and
aas
add
stos
repnz
nop
cmp
(bad)
lock
ret
out
inc
dec
xor
test
pop
inc
clc
aad
sti
push
jo
ins
retf
mov
sbb
arpl
or
adc
push
jns
or
icebp
sar
cli
shl
mov
movs
(bad)
mov
lods
cmp
jmp
xor
std
retf
mov
jae
jmp
jl
leave
mov
sub
stc
lods
out
cmp
(bad)
fisttp
test
pop
xchg
jmp
retf
cmp
ja
dec
mov
inc
jmp
shl
ficomp
xchg
mov
lea
dec
fstp
inc
and
aam
shr
inc
pop
push
cmp
adc
aam
les
fild
je
sti
loop
mov
pushf
rcr
mov
mov
jno
adc
out
imul
mov
push
xor
mov
mov
popf
lock
sub
leave
movs
and
jnp
shl
and
xchg
cmps
pop
or
les
mov
add
outs
test
stos
jmp
arpl
jo
add
mov
xchg
(bad)
movs
pop
push
inc
pop
mov
cmp
pop
xor
add
(bad)
mov
or
cwde
std
daa
movs
pop
jp
and
cli
retf
push
push
es
scas
cmp
(bad)
mov
jg
imul
xor
call
pushf
jnp
push
adc
aam
retf
rol
test
pop
mov
cmp
jmp
xlat
(bad)
test
cmp
aaa
div
fdiv
repnz
lods
ret
cs
gs
cmps
out
mov
mov
les
dec
shr
fadd
adc
test
mov
or
jmp
imul
xchg
or
xor
cmc
call
dec
add
sti
mov
xchg
adc
jo
in
adc
cmp
call
test
arpl
fnstsw
add
sbb
or
pop
or
sbb
sbb
sbb
pop
pop
sbb
sbb
add
sbb
sbb
sbb
adc
sbb
sbb
pop
pop
sbb
sbb
pop
pop
sbb
sbb
add
pop
sbb
or
sbb
or
cmp
or
sbb
sbb
sbb
pop
add
pop
or
sbb
je
cmp
sbb
sbb
sbb
sbb
inc
pop
adc
sbb
cdq
movs
add
sbb
sbb
add
sbb
cdq
rcr
cmp
sbb
cdq
aam
push
cmp
or
inc
sbb
inc
pop
pop
pop
or
pop
pop
or
jo
or
or
or
pop
add
add
pop
pop
pop
sbb
pop
pop
or
je
pop
add
sbb
sbb
cdq
enter
add
pop
adc
sbb
sbb
add
sbb
sbb
sbb
push
sbb
adc
push
cmp
sbb
pop
or
adc
sbb
cdq
rcr
je
sbb
or
push
sbb
or
sbb
inc
sbb
sbb
cdq
lock
sbb
cdq
cld
sbb
sbb
or
cld
pop
sbb
add
inc
pop
sbb
sbb
sbb
sbb
pop
add
or
sbb
adc
adc
sbb
pop
add
adc
cdq
int3
adc
cdq
int3
adc
sbb
sbb
sbb
adc
sbb
or
add
xor
adc
or
adc
adc
adc
adc
adc
adc
adc
adc
or
adc
cmp
sbb
cwde
cmp
cmp
sbb
cwde
xor
pop
cmp
adc
sbb
adc
sbb
sbb
pop
sbb
sbb
dec
sbb
dec
imul
jbe
pop
popa
jp
imul
imul
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
xor
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
sbb
jbe
pop
popa
jl
js
ja
je
jp
imul
jne
sbb
sbb
sbb
cmp
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
dec
sbb
dec
sbb
sbb
push
sbb
push
sbb
push
sbb
pop
sbb
sbb
sbb
movs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
sbb
imul
sbb
jne
jl
push
sbb
jg
jbe
sbb
sbb
cmp
sbb
imul
sbb
push
jne
js
ins
sbb
jbe
ja
sbb
sbb
sbb
test
sbb
sbb
ins
sbb
jo
ja
jle
pop
sbb
jne
jl
push
sbb
jg
jbe
sbb
rcr
sbb
sbb
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
jo
jne
jl
pop
sbb
sbb
imul
sbb
ins
sbb
jbe
ja
sbb
sbb
cmp
sbb
sub
adc
sbb
pop
sbb
jne
jl
dec
sbb
sbb
jo
jbe
ja
sbb
sbb
sub
aaa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
push
sbb
ins
sbb
sbb
js
jne
push
sbb
je
jl
sbb
push
sbb
sbb
dec
sbb
ins
sbb
sbb
push
sbb
push
sbb
jne
push
sbb
jo
jne
jle
imul
jl
popa
sbb
sbb
sbb
sbb
sbb
sbb
jl
jle
js
jne
pop
sbb
imul
jo
jle
jno
ins
sbb
sbb
sbb
sbb
add
sbb
push
sbb
jo
jle
jo
ja
js
jne
pop
sbb
jne
jl
ja
js
je
jl
sbb
push
sbb
sbb
dec
sbb
ins
sbb
sbb
push
sbb
push
sbb
jne
push
sbb
jo
jne
jle
imul
jl
popa
sbb
sbb
sbb
sbb
imul
sbb
ins
sbb
ins
sbb
jl
imul
sbb
jbe
ja
sbb
sub
aaa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
jl
je
jnp
jne
pusha
sbb
sbb
jl
imul
sbb
jbe
ja
sbb
sub
aaa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
sbb
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
xchg
push
add
cmovg
cmp
jb
dec
cmp
push
push
xor
addr16
dec
and
inc
pop
addr16
add
push
pop
sbb
outs
cmovb
fs
add
mov
out
lods
jmp
mov
jmp
or
push
pop
ss
das
les
adc
mov
xor
stc
mov
aaa
adc
shl
cmp
int
cmps
(bad)
and
icebp
mov
xor
(bad)
mov
add
fwait
mov
adc
popf
push
adc
mov
loopne
fstp
stos
retf
jge
pop
fs
shl
int3
or
jbe
cli
ret
(bad)
stc
sub
mov
sbb
push
dec
mov
mov
and
mov
lock
pop
dec
or
fwait
or
add
rol
push
cdq
int
xchg
and
or
fstp
pop
push
(bad)
stc
stos
sar
fidiv
xchg
pop
ins
push
xor
sbb
fsubr
lahf
and
push
or
data16
push
mov
add
aaa
loope
push
lock
loope
sub
add
mov
je
cmp
push
loop
stos
in
mov
xchg
je
dec
mov
sub
jns
daa
add
mov
xchg
ins
movs
enter
xor
jo
jne
xor
clc
and
scas
bound
fmul
fisttp
icebp
movs
sbb
pop
adc
ins
xor
push
and
ja
push
or
cwde
int3
and
mov
popf
shl
call
mov
cmps
out
call
mov
out
mov
(bad)
sti
xchg
sbb
js
inc
sbb
dec
cs
or
pop
xor
cmp
pop
adc
dec
adc
sub
inc
or
cmp
add
outs
es
ds
push
adc
jo
cdq
cld
mov
nop
aam
loop
hlt
mov
test
cmps
retf
cmps
xlat
xchg
out
cmc
cmps
out
retf
movs
in
mov
in
cmp
movs
dec
mov
pushf
idiv
shl
cmc
test
call
shl
sbb
bound
gs
sub
dec
pop
data16
push
add
and
inc
cmp
ins
and
adc
push
pop
pop
ja
inc
adc
inc
daa
push
dec
push
push
xor
fdiv
sbb
push
ss
or
cmp
jge
jl
inc
aaa
jae
push
adc
(bad)
loope
retf
xchg
pushf
icebp
movs
sbb
pop
pop
push
cmp
push
es
inc
add
push
sbb
jnp
js
imul
inc
add
popa
xor
jns
pop
pop
inc
and
sub
and
jle
pusha
adc
jl
outs
sub
add
addr16
add
pusha
sub
pop
sbb
sub
push
pop
xor
ds
cld
mov
jecxz
(bad)
mov
stos
ficomp
out
retf
scas
not
xchg
mov
dec
fcom
enter
fistp
mov
clc
lods
out
mov
lods
in
and
repz
repz
mov
lods
loope
int3
adc
add
(bad)
lods
out
mov
cmps
loopne
shl
cmps
out
not
in
adc
repnz
aam
sar
call
xlat
mov
mov
adc
pause
enter
rcl
mov
std
mov
fmul
in
mov
fidivr
scas
(bad)
mov
jmp
add
lock
mov
or
sub
cmp
aas
js
jge
bound
jo
inc
arpl
jb
jle
inc
push
push
ss
adc
jne
jae
pop
adc
sti
mov
loop
out
mov
popf
shl
sbb
ror
add
jecxz
outs
mov
jp
push
adc
pop
sbb
cmc
mov
sub
mov
mov
aam
shl
fistp
jno
push
inc
add
loope
enter
and
mov
inc
in
jne
dec
test
dec
loopne
mov
fist
mov
jmp
scas
push
jno
cmp
pop
lods
into
outs
mov
cld
mov
fcom
call
dec
inc
add
or
sbb
adc
lahf
out
xchg
push
mov
bound
test
sub
xor
sbb
lods
leave
add
or
adc
pusha
jmp
pop
adc
adc
and
mov
cmp
fwait
scas
dec
inc
add
push
push
cmp
or
repnz
pop
push
pop
mov
and
cmc
fnstenv
inc
push
pop
(bad)
jns
pop
mov
sbb
fsubrp
mov
mov
call
out
addr16
push
ret
pmaxsw
sub
(bad)
cmps
shl
cmps
xchg
fimul
dec
adc
cmp
mov
pop
fs
sub
dec
or
inc
adc
push
sub
dec
add
popa
daa
jns
pop
push
dec
es
add
or
inc
pop
cdq
retf
movs
out
mov
fdiv
loop
lock
in
scas
(bad)
mov
jmp
mov
loop
aad
(bad)
mov
(bad)
cmps
in
mov
ret
mov
lock
xchg
leave
mov
leave
mov
jecxz
cmc
mov
scas
in
fsubr
clc
(bad)
xlat
xchg
mov
sbb
pop
sbb
push
and
push
adc
sub
inc
sbb
imul
das
push
inc
xor
jl
cdq
int3
and
int
(bad)
sahf
icebp
cmps
out
out
in
int3
mov
(bad)
fcomp
(bad)
mov
mov
mov
mov
lods
out
cmps
iret
mov
cli
cmps
sbb
arpl
dec
push
inc
pop
jl
cmp
pop
or
push
or
dec
adc
push
inc
daa
imul
sub
push
addr16
sub
jge
pop
sbb
bound
js
push
dec
sbb
ds
or
push
pop
pop
ja
inc
adc
adc
ja
ins
add
ins
push
dec
push
inc
sub
sbb
push
inc
cmp
dec
add
ds
push
dec
cs
or
ins
pop
pop
add
dec
sbb
jg
jns
cdq
cld
mov
out
ret
mov
lods
rcl
popa
and
inc
adc
jo
push
adc
pop
sbb
ss
push
adc
cmp
imul
cmp
xor
das
push
js
dec
adc
inc
pop
or
outs
xor
sbb
push
sbb
add
sub
cmp
outs
cmovae
xor
jo
popa
sub
dec
push
fs
cmovg
xor
inc
es
push
aaa
jae
jle
cwde
fiadd
fisttp
mov
mov
mov
jmp
jmp
mov
aam
repnz
xlat
mov
xchg
aad
cld
cmp
fcomp
rol
mov
cmps
loopne
shl
movs
out
hlt
xchg
(bad)
fwait
cli
call
aam
pushf
out
test
mov
nop
fidiv
and
pop
pop
pop
adc
jns
dec
or
pusha
xor
arpl
js
inc
add
test
test
mov
loope
jmp
fld
lock
repnz
fist
sbb
push
adc
gs
outs
add
pop
dec
daa
dec
or
pop
sbb
sub
jge
popa
cmovae
jg
sti
fxch
mov
pop
sub
stc
loope
scas
cdq
cs
adc
fcom
mov
mov
jae
loop
push
add
or
cmp
mov
mov
jno
aam
outs
jg
jg
std
xchg
test
mov
(bad)
mov
xchg
cwde
cmp
sub
sub
(bad)
lods
shl
out
dec
mov
call
sub
push
xchg
xor
es
retf
push
dec
and
hlt
adc
cli
or
add
test
add
inc
or
hlt
mov
push
jns
aas
cli
(bad)
fnstcw
push
xor
daa
addr16
neg
push
sti
push
sar
or
adc
push
push
jmp
pop
xor
call
call
mov
rcl
test
movq
jmp
jg
or
mov
into
xor
xchg
call
rol
(bad)
jl
jecxz
dec
test
pop
movs
adc
imul
popa
and
push
pop
pop
push
cwde
retf
mov
in
sub
xlat
cmp
in
jmp
into
mov
stos
cli
mov
cmc
cwde
in
scas
jmp
fisubr
aad
jmp
div
in
std
mov
icebp
mov
pop
ds
push
adc
and
sub
popf
repz
lahf
out
scas
fistp
jmp
mov
mov
loope
(bad)
mov
call
xchg
icebp
mov
mov
sar
mov
in
in
or
mov
mov
mov
xchg
div
in
into
(bad)
(bad)
fstp
int
(bad)
lahf
cld
scas
in
and
mov
scas
ficomp
cmc
mov
xchg
fst
leave
lods
jmp
pusha
and
inc
adc
pop
push
inc
daa
imul
call
cli
cmps
out
jmp
fild
out
stos
out
cmps
retf
cmps
(bad)
xchg
out
hlt
fcomp
and
in
and
loop
ret
scas
rcl
cwde
cld
mov
nop
aam
loop
hlt
mov
test
lods
ret
mov
lods
ficomp
mov
lods
in
test
dec
add
cmp
imul
sbb
ins
and
sub
push
add
inc
add
gs
push
or
dec
adc
inc
and
push
add
inc
add
push
pop
inc
xor
ins
and
sub
push
add
inc
pop
inc
or
fisubr
enter
fild
div
loop
enter
jecxz
cmc
mov
xchg
fistp
movs
mov
mov
mov
fistp
shl
sbb
imul
inc
pop
pop
or
and
push
xor
xchg
xlat
lahf
cmc
test
sahf
out
scas
fild
out
rol
stos
in
stos
jecxz
icebp
test
jmp
mov
scas
int3
sahf
fdivr
cli
mov
xchg
out
(bad)
add
mov
test
mov
mov
loope
(bad)
mov
call
xchg
cld
mov
lods
into
pushf
shl
lods
in
mov
test
mov
mov
jmp
mov
std
mov
icebp
mov
pop
xor
pop
sbb
jb
push
xor
push
daa
popw
dec
or
adc
pop
pop
push
or
xor
pop
je
jne
pop
and
fst
clc
mov
mov
xchg
retf
mov
and
mov
(bad)
cmps
jmp
int3
sbb
scas
out
lods
out
sbb
pop
and
sub
sub
add
pushf
int
in
mov
xor
fwait
scas
stos
enter
adc
fcomp
pop
add
jnp
and
and
test
and
push
out
fistp
test
sbb
fsub
mov
cmp
xchg
xlat
cmp
call
rol
mov
pop
cmp
out
cmove
pop
sbb
fdivp
nop
test
jbe
cli
jae
cs
out
cmps
aam
push
call
xchg
test
inc
mov
test
jbe
out
mov
daa
or
rcr
je
ret
mov
stc
mov
jnp
pop
mov
and
jo
jo
or
sbb
cmp
mov
shl
pop
sbb
hlt
xor
in
dec
mov
lea
xchg
jecxz
movs
sbb
xchg
push
fidivr
cld
(bad)
pop
sub
sub
ja
jg
cmp
push
adc
addr16
dec
aas
cdq
fld
rol
sbb
jp
dec
pop
cdq
fbld
rol
mov
repnz
(bad)
xchg
out
hlt
fcomp
(bad)
mov
mov
jmp
xor
loope
repnz
fidiv
rcl
fisubr
shl
nop
sti
mov
lods
rcl
and
(bad)
mov
mov
aam
cli
xchg
fcomp
jecxz
mov
mov
retf
mov
jmp
int3
mov
mov
mov
pop
inc
adc
sub
cmp
pop
adc
imul
adc
jge
pop
sub
not
inc
pop
push
and
mov
sbb
bound
jae
jo
popa
sub
pop
push
ins
ss
cmp
dec
push
push
ss
cmp
or
bound
dec
or
pop
aas
jb
push
push
dec
das
jle
pop
aas
jnp
jbe
outs
sub
jl
pop
sbb
popa
and
inc
pop
jl
ins
push
outs
sub
dec
cmp
daa
push
pop
xor
jle
pop
adc
jno
push
xor
popa
cmp
imul
and
jnp
dec
add
jno
bound
jae
popa
adc
cmp
daa
ja
push
sbb
and
cwde
ror
les
ficomp
(bad)
mov
mov
(bad)
mov
lods
jmp
mov
mov
(bad)
mov
cmps
(bad)
fstp
retf
xchg
sbb
jnp
push
pop
sbb
push
aaa
jae
jl
gs
addr16
ja
push
sbb
jg
js
push
and
imul
pusha
xor
jnp
arpl
push
adc
push
pop
pop
xor
pop
sub
sbb
add
or
inc
add
and
pop
pop
pop
adc
inc
adc
sub
aaa
fs
cmp
or
bound
inc
and
push
or
arpl
jae
push
sbb
cmp
inc
push
push
ss
adc
jb
inc
pop
outs
sub
cmp
add
addr16
jg
dec
or
add
dec
es
add
push
inc
add
jb
push
sbb
arpl
jae
push
xor
push
or
sub
inc
sub
jg
dec
movq
or
mov
mov
sahf
fimul
jmp
hlt
mov
nop
cmc
mov
mov
xor
cli
movs
sbb
fs
pop
or
jo
push
and
ds
push
jl
cwde
int
in
rol
into
into
mov
sbb
push
daa
adc
rcl
cs
sbb
repnz
or
clc
lods
repnz
mov
stos
xchg
inc
and
shl
lds
cmps
lea
pop
mov
adc
stc
cmp
xor
fnstenv
ins
add
sbb
or
adc
xor
sub
in
push
inc
pxor
xchg
popf
inc
push
push
mov
sub
data16
sub
loope
cwde
(bad)
xor
mov
(bad)
sub
outs
cs
or
add
xchg
icebp
inc
(bad)
out
lea
lock
jno
cmp
fcom
fcom
fsub
fcom
push
adc
out
outs
mov
dec
or
stos
cli
stos
adc
jae
pusha
pop
add
inc
sbb
dec
sub
push
xor
cmp
pop
or
aad
add
shl
loop
rcl
cld
mov
mov
cmp
add
sub
js
pop
sbb
and
adc
cmp
jne
dec
add
push
add
inc
pop
inc
or
inc
sbb
pop
add
sub
fs
add
xchg
xchg
movs
aam
retf
mov
mov
sahf
cld
mov
xchg
ror
(bad)
mov
in
mov
xchg
scas
in
mov
xchg
fild
add
add
pop
sub
ja
sub
sub
add
retf
mov
mov
scas
ror
retf
nop
cmc
mov
in
in
and
mov
mov
(bad)
scas
out
pop
stos
in
(bad)
lahf
iret
(bad)
out
(bad)
lods
fcomp
retf
mov
popf
lock
out
not
mov
scas
fcomp
hlt
mov
xchg
fistp
xlat
mov
mov
xchg
out
cld
add
mov
or
inc
daa
bound
popa
(bad)
sub
inc
xor
je
dec
add
and
pop
or
dec
or
add
push
add
pop
pop
inc
adc
sub
push
inc
add
imul
sub
call
loope
call
movs
lock
mov
lods
fistp
lds
jmp
scas
iret
mov
xchg
pushf
fld
les
mov
nop
dec
lods
hlt
test
idiv
(bad)
mov
mov
test
fistp
out
mov
div
xchg
rcl
fstp
call
mov
in
add
xchg
shl
xchg
idiv
fld
mov
in
xchg
aad
add
shl
lds
out
test
mov
mov
or
pop
pop
ds
push
adc
and
push
xor
fs
data16
sub
outs
and
pop
or
dec
or
add
dec
adc
push
or
pop
cmp
sbb
sub
cmp
ds
je
ins
sub
outs
sub
xor
jbe
jp
inc
adc
dec
add
pop
sub
ja
sub
inc
sub
jle
dec
add
cmp
cmp
pop
and
dec
push
pop
sbb
xor
dec
or
jne
push
imul
xor
inc
add
jae
pop
aaa
jge
ins
add
je
dec
cmove
push
or
arpl
push
inc
cmovg
ja
cmp
pop
or
dec
or
inc
adc
jle
inc
cmp
ins
and
fs
push
jno
imul
add
push
pop
push
xor
jmp
and
ficom
repz
arpl
jns
ja
and
ds
mov
test
shr
push
inc
retf
out
scas
fisub
call
test
jb
repnz
mov
add
xchg
test
pushf
ins
mov
mov
test
mov
push
aaa
push
sbb
mov
cmp
xchg
and
in
mov
ret
cmp
call
mov
ins
int3
cmp
stos
stc
push
ficomp
dec
fsubr
stos
scas
inc
xchg
aad
mov
push
xchg
mov
out
jmp
(bad)
call
shl
aad
in
movs
iret
add
sti
lods
loopne
ficom
sti
fisubr
leave
mov
scas
cli
mov
mov
mov
cmc
mov
mov
aad
in
cmps
ret
mov
mov
mov
idiv
mov
sbb
ret
and
(bad)
mov
xchg
lock
nop
fdiv
in
nop
int
rcl
mov
adc
mov
xchg
in
dec
add
push
jno
jne
inc
pop
dec
sub
imul
add
sub
or
pop
cmp
push
adc
dec
sub
arpl
jae
pusha
adc
or
inc
cmp
sub
ins
sub
pushf
loopne
ror
in
les
loope
mov
test
nop
retf
nop
cmc
mov
in
in
mov
fcom
fsubr
loopne
(bad)
mov
lods
loope
rol
(bad)
in
ror
mov
icebp
mov
test
xchg
not
mov
sbb
pusha
and
adc
xchg
push
add
dec
and
or
and
mov
push
dec
mov
mov
push
fidivr
sub
aad
sbb
jb
test
fwait
idiv
jns
imul
and
jns
jmp
pushf
lahf
out
es
cld
cmp
sub
fwait
push
in
xor
imul
stos
in
and
(bad)
pop
sbb
xchg
xchg
bound
out
lea
shl
scas
cld
push
xor
(bad)
fistp
std
aaa
jo
mov
sub
push
and
ins
mov
mov
xchg
ins
sub
pusha
mov
dec
adc
lods
xchg
lock
xor
adc
xchg
popf
jmp
ins
aad
inc
add
mov
mov
mov
dec
mov
mov
push
sbb
cmps
(bad)
cmp
mov
dec
sbb
mov
(bad)
pop
sbb
xchg
jg
les
sbb
sub
stc
pop
pop
stc
mov
jae
pop
dec
mov
mov
cmp
mov
out
xchg
icebp
sub
fistp
into
mov
mov
adc
cmps
mov
sub
adc
pusha
mov
push
push
jmp
gs
test
call
push
cmp
mov
mov
jg
pop
jae
jecxz
add
push
mov
dec
push
out
mov
lahf
scas
mov
push
pop
stc
mov
xor
add
into
sub
(bad)
or
test
pop
cli
mov
mov
inc
add
inc
retf
test
lahf
imul
sub
push
pop
clc
mov
into
cmps
mov
pop
cmp
cmps
jno
les
(bad)
fsubr
xor
add
mov
nop
(bad)
adc
jecxz
dec
adc
jmp
dec
test
popa
add
gs
jnp
(bad)
ins
add
pop
test
or
mov
cmp
stos
arpl
in
add
fiadd
out
jae
cmc
lods
xchg
ret
cmp
out
mov
dec
aam
rcl
inc
xor
ins
rcl
retf
test
retf
and
mov
sahf
fs
fwait
fs
xor
enter
in
jle
adc
pop
(bad)
mov
clc
inc
sub
mov
dec
or
inc
add
scas
mov
je
mov
les
or
push
pop
inc
cmps
cmc
inc
and
jo
in
push
xor
fstp
es
mov
sub
loop
pop
jmp
js
cmp
popf
mov
push
push
push
jbe
mov
inc
adc
cmp
mov
loope
jl
xlat
nop
arpl
sbb
lahf
in
inc
add
mov
sub
aad
pop
hlt
mov
jmp
and
xlat
push
pop
xchg
push
aas
sbb
lea
xchg
out
jb
cmc
xchg
adc
mov
cmp
repnz
or
jg
out
jb
cmp
pop
mov
or
mov
add
push
pop
lods
fimul
jnp
popf
xchg
(bad)
push
push
ja
adc
hlt
push
xor
mov
je
rol
mov
and
(bad)
into
push
xor
push
mov
add
iret
sub
test
jg
clc
aaa
ins
mov
cmps
fistp
call
mov
and
call
outs
sub
cmp
call
out
test
push
adc
jne
mov
scas
cld
and
inc
fist
fcomp
sbb
scas
(bad)
cmp
mov
mov
bound
(bad)
xor
mov
mov
mov
out
sahf
push
push
in
scas
jnp
or
cmp
jns
lea
std
and
es
jge
xchg
jl
loop
or
mov
cmp
sub
xor
(bad)
inc
mov
jmp
cmp
pop
lods
into
add
or
rcr
(bad)
scas
loope
dec
mov
cmp
lds
lds
dec
or
mov
js
mov
adc
and
std
dec
or
adc
mov
and
das
sbb
stos
jbe
jecxz
ja
adc
mov
sbb
mov
jmp
ret
test
movs
iret
jne
loop
dec
sbb
mov
cmp
stos
bound
(bad)
cmps
and
dec
pop
sti
cwde
jo
les
cld
sahf
inc
add
xchg
xchg
aad
sub
xchg
jp
adc
xor
in
jae
mov
or
mov
addr16
fwait
dec
sbb
stos
mov
js
adc
xchg
cwde
cli
sub
and
test
out
lods
ins
push
enter
icebp
mov
lea
leave
outs
fmul
aad
int
xchg
rcl
adc
das
pop
cs
out
lods
xchg
shl
xor
(bad)
jne
call
push
jmp
dec
sbb
scas
xchg
std
cs
cmps
les
inc
or
xchg
inc
sub
fldcw
scas
loopne
cmps
movs
call
inc
mov
and
pusha
adc
mov
(bad)
test
(bad)
scas
mov
cmp
hlt
xor
leave
jne
pop
sbb
push
mov
rol
stos
jp
ss
aam
inc
or
xlat
mov
mov
les
mov
add
mov
leave
mov
fldcw
mov
lods
(bad)
in
cmp
test
mov
and
call
sub
sar
mov
dec
or
cdq
and
ins
std
mov
lock
add
stos
sbb
jns
add
inc
mov
add
sub
xchg
jle
sbb
lods
lds
not
xor
mov
out
(bad)
pusha
xlat
xchg
jae
ret
fisttp
fisttp
repnz
js
cmc
lods
into
pushf
inc
and
jno
out
and
mov
sbb
push
adc
test
jno
mov
les
ret
mov
dec
cmp
add
out
lods
(bad)
clc
xchg
popa
and
pusha
iret
mov
push
in
stos
xchg
in
sbb
stos
fs
outs
cmp
sub
test
mov
cdq
inc
sub
inc
fnstsw
add
xor
sar
jl
lds
enter
push
jne
jecxz
sbb
imul
idiv
cmp
enter
mov
sbb
xchg
push
add
mov
or
mov
add
jmp
mov
fmul
push
rcl
xlat
mov
push
cmc
mov
in
sbb
and
jae
std
push
and
je
test
xor
cmp
loopne
cmp
scas
xchg
fsub
push
sbb
adc
dec
mov
pop
add
imul
(bad)
packsswb
fwait
jle
push
pop
lods
loop
movs
ret
cdq
fisttp
mov
out
or
out
pop
or
and
rol
shl
push
test
cmp
sub
je
pop
jl
(bad)
ds
call
movs
xchg
shr
mov
xor
stos
addr16
add
in
sub
nop
jl
ret
icebp
and
out
pop
add
inc
cmc
xchg
arpl
jecxz
rcl
leave
stos
nop
stc
xchg
aad
aas
or
mov
fidivr
push
fistp
fcomp
or
mov
inc
ret
mov
stos
(bad)
xlat
je
cs
sar
and
fistp
(bad)
mov
jp
sbb
in
rcr
jo
ret
xor
inc
ret
call
ret
stc
and
movs
fsubr
dec
lods
jmp
lds
daa
xor
sub
stc
call
dec
adc
cmp
aam
inc
jmp
rol
push
push
cli
jae
jmp
jns
out
outs
and
mov
push
jne
mul
push
(bad)
into
mov
cmp
outs
jmp
cmp
cdq
sahf
in
jno
out
lods
ficomp
popf
stos
stc
push
xchg
addr16
leave
nop
sahf
fst
jmp
cwde
sti
pop
xor
inc
xchg
pop
sbb
mov
call
dec
or
xchg
repnz
mov
and
fisttp
ins
mov
mov
mov
popf
inc
sub
hlt
xchg
push
cld
sahf
xchg
ror
div
fistp
xor
retf
pusha
call
mov
fwait
inc
daa
pop
jbe
xchg
jge
jmp
mov
jbe
pop
in
ins
sbb
stc
and
mov
mov
iret
mov
cmp
and
cmp
push
mov
movs
mov
cmp
mov
jecxz
ins
into
mov
lahf
xor
xchg
aad
dec
shl
inc
sbb
xchg
inc
and
sub
mov
in
das
dec
mov
and
lahf
mov
and
mov
push
adc
mov
and
out
or
jb
test
pop
xchg
lock
xor
adc
pop
std
lahf
inc
add
call
add
mov
push
sbb
or
out
mov
mov
pop
push
jmp
std
mov
jnp
in
push
xor
js
mov
jne
std
mov
pop
pop
sbb
ins
retf
test
outs
idiv
mov
xchg
sti
xchg
ja
or
jmp
gs
sbb
jl
fidiv
push
adc
or
repnz
test
dec
std
movs
jae
imul
pop
xor
mov
call
in
jb
and
mov
mov
push
adc
rol
fidivr
loope
imul
cmp
in
stc
ins
sub
into
mov
cdq
shr
arpl
jmp
jae
loope
icebp
dec
or
mov
in
scas
outs
sub
mov
sbb
lea
xchg
fld
dec
test
sahf
js
ds
nop
js
xlat
mov
sub
arpl
ficomp
xchg
fmul
rol
in
cmps
inc
sbb
in
add
fsubr
dec
scas
mov
bound
outs
sub
jnp
and
ret
jmp
jp
into
ss
iret
xor
aad
push
mov
mov
inc
add
mov
fs
mov
ins
ds
ret
or
fadd
dec
sbb
mov
lock
jae
lock
js
push
cmp
adc
je
fwait
jle
cli
mov
repz
add
xor
mov
mov
mov
or
lods
xchg
xlat
sahf
cld
mov
jne
xor
jo
cmps
jne
push
and
repz
adc
xor
ficomp
out
jnp
sub
leave
ss
add
push
idiv
pop
inc
mov
popf
inc
xor
xor
mov
aaa
or
lods
xchg
dec
cmp
icebp
test
repnz
inc
add
stos
imul
fwait
mov
push
ret
mov
adc
test
cmp
xchg
test
jne
push
adc
std
outs
sub
test
daa
dec
mov
pop
cmp
dec
movs
(bad)
sub
imul
push
loopne
ins
and
gs
cdq
jae
pop
jl
std
sub
shl
mov
sub
dec
jmp
mov
pop
sbb
jae
mov
popf
xchg
sar
dec
xchg
pop
sbb
les
mov
and
xchg
jecxz
sbb
movs
inc
sbb
gs
mov
and
cld
mov
out
xchg
shl
outs
mov
bound
cmp
mov
add
mov
mov
sub
lea
repz
or
cdq
inc
sub
std
mov
adc
in
inc
or
test
and
jae
dec
adc
push
or
jns
js
jle
push
call
sbb
stos
pusha
adc
mov
inc
add
inc
rcr
icebp
xchg
outs
sub
push
cmps
xlat
cmp
jns
xchg
inc
adc
out
dec
(bad)
int3
dec
cs
sahf
repnz
mov
ret
mov
cmps
xchg
lock
pop
xchg
int
outs
mov
(bad)
cmp
iret
push
fs
pusha
add
stos
xchg
push
jbe
sub
arpl
(bad)
mov
sysexit
outs
rcl
ror
sbb
sub
inc
cs
test
xor
lds
pop
fstp
inc
add
ret
hlt
jbe
inc
and
add
dec
sbb
es
fnstcw
pop
stos
call
arpl
sbb
mov
clc
mov
and
jge
call
push
test
je
pop
lock
mov
(bad)
in
sahf
fstp
sbb
enter
in
scas
fstp
mov
outs
cmp
push
push
sbb
push
add
in
sub
js
push
mov
xor
and
add
lods
xchg
shl
jne
mov
ds
in
jmp
enter
data16
lods
into
pushf
mov
ja
outs
sbb
sbb
sbb
(bad)
dec
cmpneqps
inc
into
or
mov
shr
pop
mov
dec
push
out
mov
(bad)
xor
jmp
adc
xchg
mov
add
push
fistp
and
push
inc
sub
popf
fisttp
and
mov
fs
or
arpl
in
(bad)
jnp
les
iret
mov
mov
(bad)
cdq
inc
sbb
cs
jmp
xchg
mov
stos
ret
push
cmp
cdq
mov
sub
inc
xor
cmp
mov
repnz
sbb
movs
mov
pop
sbb
xor
pusha
rol
push
push
cmc
xchg
ja
stc
fwait
ins
sub
jb
repnz
and
and
aad
pop
scas
cld
pop
cmp
xor
mov
std
dec
or
mov
mov
loopne
pop
out
mov
sbb
repnz
sub
jp
mov
sbb
fiadd
dec
mov
xor
icebp
das
ins
ret
fwait
mov
mov
test
test
shl
retf
in
mov
mov
cmp
mov
mov
into
dec
and
xor
fidivr
jl
mov
inc
ss
inc
leave
xchg
movs
into
lods
je
out
jge
xor
lea
retf
and
js
dec
or
dec
loop
ficomp
cmp
dec
hlt
mov
arpl
loope
xchg
aad
dec
xlat
cmps
(bad)
aam
or
lods
rol
in
imul
sbb
fwait
enter
rcl
and
inc
loope
and
push
and
pop
add
jno
xlat
ins
add
adc
scas
cld
xchg
mov
fisttp
clc
mov
mov
int
jo
in
scas
mov
je
imul
mov
dec
sub
pop
sbb
(bad)
retf
arpl
test
xchg
loop
push
in
push
xor
movs
xchg
hlt
xor
jmp
push
push
mov
jnp
out
inc
test
jo
rol
or
call
movs
jno
in
mov
and
jno
cli
sub
inc
mov
adc
fld
retf
test
test
pop
ficomp
mov
ficomp
out
mov
sbb
fldenv
rcr
and
loop
sbb
mov
sbb
imul
xchg
mov
sub
add
(bad)
jl
or
popf
aam
inc
sbb
cmps
xchg
cmc
jle
jmp
lods
fisttp
push
fistp
mov
add
mov
mov
cld
and
popf
ja
dec
or
adc
cmps
lds
sbb
lahf
push
or
inc
out
hlt
sub
lods
fnstcw
lock
pusha
ret
test
push
and
es
jo
pop
leave
call
or
mul
call
pop
pop
repz
jle
ds
mov
cs
mov
fdiv
jno
mov
int3
push
add
push
cli
mov
lock
xor
dec
mov
push
jg
push
mov
in
or
dec
cmps
loopne
inc
in
jno
adc
loope
daa
adc
mul
aad
inc
or
sub
fistp
aaa
push
outs
loope
test
inc
add
ja
push
pop
dec
test
push
lods
out
ins
and
mov
iret
pushf
js
loop
xchg
fist
push
ror
mov
add
call
jl
sbb
scas
fdivr
dec
adc
pop
pop
mov
inc
rcl
ins
mov
enter
sbb
dec
or
nop
push
clc
pop
xor
mov
jmp
cmc
mov
or
inc
mov
lea
mov
mov
inc
sbb
jge
or
mov
repz
and
dec
mov
mov
aas
dec
mov
or
retf
push
sbb
push
adc
fimul
lahf
out
cwde
shl
pop
leave
fwait
mov
movs
rcr
pushf
jnp
xlat
mov
and
cmps
aam
jo
mov
jecxz
lds
or
repz
cmp
xchg
inc
or
mov
adc
jnp
mov
fild
dec
mov
xor
int3
mov
ret
fdiv
je
leave
pop
adc
cwde
sahf
int
cs
mov
bound
cli
mov
and
xor
test
stc
pop
push
out
lea
xor
xchg
jae
call
cmps
outs
and
mov
loop
imul
pop
xchg
ficomp
sbb
sahf
inc
adc
mov
(bad)
movs
xchg
ror
or
fcom
push
ins
leave
mov
call
dec
mov
or
inc
mov
cdq
rcr
cmp
stos
call
or
out
cdq
(bad)
jns
retf
mov
mov
pop
in
jg
xor
push
call
fs
mov
mov
cmp
ds
fmul
push
movs
neg
cmp
or
jae
jmp
je
ror
xchg
rcr
pop
(bad)
stos
dec
or
mov
and
out
xor
jno
mov
lods
out
jne
cld
cmp
fst
jne
fiadd
inc
mov
sub
in
sbb
and
xor
(bad)
into
cmp
lds
adc
hlt
pop
aas
rol
jns
add
push
lock
sar
jp
mov
fadd
or
push
std
mov
jmp
lea
jmp
cwde
rcr
dec
lods
out
pushf
aad
and
pop
fbstp
aad
xchg
repz
rcr
and
inc
mov
push
fist
enter
je
out
sahf
sbb
push
rol
xchg
(bad)
sub
leave
es
fcomp
mov
mov
cwde
jle
ss
test
sub
jmp
or
dec
cli
test
mov
mov
jno
add
(bad)
ja
sub
js
mov
in
mov
ret
aaa
jo
or
(bad)
xor
jmp
xchg
cli
and
js
test
mov
shl
loopne
popa
cs
sbb
stos
in
scas
mov
jbe
or
hlt
lods
out
pushf
bound
icebp
cwde
jns
or
loope
push
(bad)
or
(bad)
ds
add
dec
(bad)
cdq
outs
and
inc
adc
movs
and
dec
(bad)
cmps
mov
dec
or
mov
int
adc
push
mov
push
xor
dec
shl
pop
xor
pop
sbb
xchg
push
push
inc
leave
stos
inc
add
cmps
ja
repnz
push
pop
fs
mov
jmp
inc
mov
pop
cmp
push
movs
(bad)
xor
mov
ss
mov
sub
stos
enter
and
mov
push
or
mov
cmp
mov
leave
mov
mov
jns
pop
inc
fist
imul
push
cdq
mov
inc
sbb
cmps
lds
mov
dec
or
pop
mov
ins
fisubr
and
in
inc
or
dec
jmp
aam
xor
fs
pop
sti
cwde
mov
dec
stos
call
out
or
dec
ud2
dec
int
test
ds
xchg
dec
mov
xor
push
int
xchg
xlat
cmp
sub
js
cwde
dec
es
add
xchg
push
add
dec
jl
(bad)
mov
add
xor
jmp
pop
sub
dec
xor
stos
in
adc
mov
stos
dec
xor
(bad)
mov
mov
fcmovnb
mov
sub
cmp
mov
gs
out
leave
xor
dec
cmp
leave
mov
cmp
add
lods
hlt
aaa
mov
scas
pushf
or
ret
loope
xchg
div
rcl
nop
jns
ds
xchg
aas
rol
sahf
inc
pop
pop
or
rcr
lahf
dec
jnp
inc
stos
sub
push
mov
mov
js
inc
es
xlat
call
out
xor
retf
dec
adc
add
mov
pop
cmp
stos
loope
bound
dec
je
add
jecxz
in
lods
cmc
test
cdq
or
es
into
pop
ja
cmp
cmps
(bad)
cmp
pushf
lods
xchg
jp
inc
xlat
add
daa
lods
fadd
dec
or
aaa
int
jo
retf
jmp
aad
xchg
mov
mov
out
sbb
and
int3
stos
in
test
xor
ret
sbb
ins
xchg
in
mov
or
sti
mov
sub
push
je
arpl
mov
std
lds
lods
jp
ss
into
mov
dec
jno
cmpxchg
fldpi
sti
xchg
jne
push
xor
jg
push
cmp
sbb
idiv
int3
mov
xor
addr16
sbb
in
leave
add
daa
jle
clc
movs
stc
dec
lahf
std
mov
push
and
in
xchg
adc
(bad)
mov
and
sub
cmps
(bad)
xchg
dec
inc
daa
pusha
shl
jle
cmp
(bad)
scas
xchg
out
test
imul
push
jae
das
(bad)
test
aaa
cmps
jmp
pusha
mov
int3
scas
mov
leave
inc
lea
outs
cmp
mov
inc
mov
mov
js
(bad)
retf
pop
test
pop
pushf
sbb
enter
push
sbb
(bad)
aad
loope
outs
pop
jbe
(bad)
test
dec
push
dec
pop
imul
jnp
iret
fidivr
das
or
adc
mov
(bad)
mov
test
retf
mov
or
inc
and
mov
lods
call
fs
test
pop
ins
dec
cmp
mov
jle
sbb
pop
adc
in
scas
fimul
mov
pop
fdivrp
fimul
add
repnz
ins
test
fcmovnb
test
add
mov
jnp
test
ins
aaa
fnsave
sbb
mov
das
imul
inc
cmp
(bad)
and
pop
icebp
cs
fnstcw
pop
inc
sbb
call
int3
dec
popa
jnp
adc
or
call
or
les
and
fld
dec
dec
and
sub
stos
adc
fdiv
les
daa
push
cdq
cmp
xchg
or
fild
arpl
aam
iret
lahf
add
dec
aas
sub
lock
lock
iret
sub
(bad)
cmp
cli
test
and
mov
dec
push
cmp
mov
inc
push
sti
retf
aas
xchg
cmps
outs
inc
xor
cmps
adc
loopne
xchg
add
dec
fldl2t
rol
repnz
call
ins
pop
sbb
xchg
out
ins
dec
sub
aad
jo
popa
(bad)
stos
call
mov
(bad)
sahf
call
dec
sub
stos
cmp
ror
xchg
fcom
mov
inc
sbb
or
dec
adc
xor
pop
dec
or
mov
xchg
dec
push
cmp
(bad)
mov
sbb
test
add
retf
std
adc
and
rcl
xor
mov
mov
sub
retf
fwait
dec
cmp
mov
xchg
jecxz
pushf
punpckhdq
icebp
sbb
sbb
stc
int3
mov
pop
mov
arpl
hlt
sar
pop
out
fcomp
or
mov
pushf
inc
push
push
add
ret
je
push
imul
add
loop
mov
pop
mov
fstp
xchg
or
loopne
mov
inc
jno
bound
retf
iret
scas
mov
pop
inc
sahf
sbb
pop
imul
inc
or
in
loop
fwait
in
stos
pop
push
adc
test
inc
or
lods
repnz
aam
inc
xchg
in
(bad)
pushf
and
sub
pause
xchg
sub
pop
mov
mov
jl
push
push
cmp
mov
mov
sub
arpl
das
mov
mov
clc
ret
call
ret
aam
lahf
das
inc
cmp
and
mov
mov
push
pop
inc
aaa
pop
fild
imul
and
sti
cwde
mov
mov
aaa
ja
loopne
mov
in
fnstcw
movs
in
icebp
xor
call
data16
add
imul
or
push
adc
mov
(bad)
fild
or
inc
cmp
out
mov
add
add
into
movs
inc
push
or
push
jnp
out
xchg
(bad)
js
pop
shr
mov
dec
jo
cmp
lock
cld
dec
lahf
(bad)
mov
jae
out
lods
nop
(bad)
sti
xlat
jmp
mov
xor
(bad)
cld
mov
dec
pushf
into
jne
pop
sbb
iret
std
mov
or
(bad)
mov
ins
mov
mov
jge
les
pop
sbb
loopne
(bad)
clc
cmps
out
gs
mov
xchg
add
mov
imul
fldcw
mov
in
mov
push
(bad)
ret
(bad)
jbe
and
fcomip
mov
pop
dec
inc
xor
mov
xor
mov
jmp
mov
bound
popa
es
aam
fwait
or
sub
pop
jle
adc
cmps
xchg
das
xchg
int
(bad)
cwde
ins
bound
cmps
hlt
cmps
in
test
push
adc
aad
std
les
jecxz
es
dec
jae
dec
xor
scas
rcl
mov
adc
lods
int
shl
popf
daa
cmps
aam
mov
loopne
sahf
or
xchg
hlt
xor
leave
xchg
mov
outs
jo
sbb
clc
mov
jnp
sub
or
cld
mov
jmp
dec
jno
xor
test
push
outs
adc
pop
(bad)
(bad)
(bad)
out
inc
adc
cmc
mov
adc
inc
lahf
ret
sahf
in
lahf
ins
mov
imul
dec
or
imul
jno
jmp
bound
bound
pushf
xlat
mov
dec
cmp
into
push
inc
cmp
lds
pop
mov
dec
or
les
popa
leave
call
mov
in
out
leave
call
xchg
mul
xchg
xchg
outs
add
and
arpl
retf
and
or
test
jp
retf
scas
fadd
ja
cmp
loop
pop
add
rcl
movs
pusha
fld
not
fst
cdq
jg
cmp
cs
stc
xor
jmp
outs
cmp
mov
hlt
mov
xchg
fnsave
into
lods
div
mov
scas
and
inc
test
mov
(bad)
mov
or
push
or
iret
cmps
out
ins
push
adc
mov
mov
or
out
ficomp
and
pop
sbb
(bad)
retf
mov
sti
sbb
push
ror
mov
sub
fldcw
cmp
dec
adc
cmp
mov
xchg
add
dec
and
cmps
sub
jno
ds
mov
pop
ins
sub
push
jl
pushw
pop
or
shl
bound
push
push
retf
stos
pop
and
shl
aad
adc
adc
stc
aaa
ja
(bad)
cmp
or
in
push
bound
xor
lods
out
mov
mov
lock
shl
push
adc
sub
xchg
aad
mov
jo
movs
push
adc
(bad)
jmp
xchg
cmp
xor
adc
les
shr
shl
(bad)
and
es
int
ror
lods
sub
xchg
mov
scas
adc
fwait
ins
jp
adc
fidivr
push
(bad)
xor
lds
adc
lods
(bad)
sub
icebp
mov
jp
jge
cmp
pop
(bad)
stc
stos
xchg
xor
loope
int3
xor
not
xchg
rep
rcl
sbb
or
int
fnsave
pop
dec
(bad)
mov
pop
popa
pop
dec
mov
cmp
out
movs
jmp
repz
addr16
push
je
adc
mov
mov
loope
inc
and
test
test
test
or
or
cmp
push
or
jecxz
sub
push
ss
sub
mov
dec
mov
mov
loop
push
xor
mov
popa
xor
imul
sbb
out
nop
push
sub
leave
dec
jae
jo
(bad)
stc
lods
mov
sbb
out
movs
xlat
ds
adc
pop
jno
retf
mov
and
pcmpgtw
in
arpl
std
clc
rol
das
mov
push
jae
xor
not
cwde
sahf
pop
ds
aas
out
iret
scas
mov
imul
push
cs
mov
cmp
aaa
je
inc
ins
and
mov
popf
push
mov
mov
mov
call
sbb
sar
cmp
sub
cmovp
lods
ret
sbb
lock
xlat
das
lock
fcom
cld
dec
sub
dec
and
lea
xor
cmp
xor
frstor
and
in
cmps
out
dec
jle
cmp
loop
stos
pop
popa
es
mov
pop
mov
push
jle
mov
mov
cmps
dec
ss
aad
out
cmp
sbb
mov
scas
xor
rcr
mov
jb
fnsave
xor
adc
cs
sbb
sbb
or
xor
push
call
mov
xor
cmp
pop
mov
mov
xor
leave
stos
lea
jo
add
mov
popf
jae
sbb
push
push
xor
inc
push
pop
inc
stos
movd
sbb
xor
fisttp
scas
js
jne
jmp
das
pop
imul
cli
stc
test
mov
addr16
mov
sbb
mov
(bad)
in
adc
test
push
les
int
mov
and
and
xchg
retf
add
cmp
mov
mov
push
leave
fadd
dec
cwde
sbb
retf
lods
jecxz
sub
arpl
add
sbb
xchg
jb
push
dec
fdivp
retf
cwde
jp
cmp
mov
dec
dec
and
or
mov
pop
fwait
in
sub
(bad)
cmps
pusha
outs
dec
sub
out
mov
test
cmps
or
or
(bad)
stos
call
sbb
and
fnstcw
pushf
mov
add
xor
add
cld
aam
push
cmp
mov
fwait
leave
mov
int3
mov
lods
push
aas
jbe
sar
dec
or
push
push
pop
jg
dec
xor
cmp
sahf
stc
and
test
jnp
daa
add
push
and
idiv
cmps
aam
mov
push
sbb
mov
inc
pop
out
scas
fisubr
in
mov
mov
xchg
arpl
sub
pop
or
and
mov
test
loope
lods
loop
cmps
sbb
jmp
inc
pop
push
inc
fwait
shl
or
cmp
mov
cmp
repz
mov
dec
ds
mov
or
add
lds
retf
mov
push
pop
mov
jbe
ret
in
and
fisubr
mov
inc
add
test
scas
aas
gs
mov
cmovns
jg
pop
xchg
adc
ret
retf
ror
(bad)
movs
sbb
cmp
ret
mov
dec
sbb
sbb
stos
(bad)
or
adc
xchg
pop
sub
pop
xor
loop
les
fld
pop
mov
push
arpl
pop
out
lods
sbb
mov
inc
xchg
lds
cdq
das
imul
xchg
sbb
rcl
aam
mov
mov
pop
sbb
rcl
pop
push
test
jl
retf
cli
cmp
mov
imul
ins
add
push
call
and
outs
iret
in
enter
das
arpl
sub
add
xchg
mov
ins
aaa
adc
or
sbb
adc
cli
mov
and
push
pop
adc
and
push
rol
xchg
mov
jae
das
ret
nop
ins
popa
gs
mov
fadd
lods
sbb
push
or
add
outs
and
cmp
mov
hlt
mov
les
xchg
not
inc
call
repnz
mov
pop
es
faddp
scas
out
daa
movs
out
mov
es
or
add
pop
retf
aam
in
inc
and
retf
in
cmc
xchg
mov
jle
call
mov
mov
pcmpeqb
inc
xchg
rol
stc
cmps
in
xor
js
pop
sub
aam
ficom
mov
adc
push
and
fwait
or
lea
ja
xor
or
das
xchg
(bad)
aaa
mov
test
push
pop
adc
sbb
sub
adc
ret
aam
sti
cmp
and
or
or
into
mov
dec
(bad)
out
ror
xchg
out
scas
iret
add
jb
aad
xchg
aam
sahf
jecxz
jne
sbb
push
pop
pop
neg
test
pop
pop
xor
aam
out
and
cdq
retf
call
xchg
loop
nop
jle
and
pop
scas
fucomip
aad
mov
cwde
cli
mov
xchg
ror
lds
iret
test
sub
lea
mov
push
sub
sti
add
add
retf
retf
mov
inc
jae
push
daa
std
retf
or
imul
adc
mov
push
add
fimul
sbb
adc
daa
call
ins
dec
add
sbb
adc
mov
ins
mov
xor
data16
inc
nop
out
fs
adc
(bad)
enter
push
adc
pop
push
mov
push
add
icebp
test
js
and
pop
inc
push
add
push
aas
xor
adc
lock
adc
sub
ins
and
push
sub
ret
and
mov
outs
fstp
fistp
pushf
push
inc
add
push
sbb
or
pop
adc
mov
(bad)
jno
adc
sbb
dec
retf
and
mov
push
inc
jns
loop
xchg
icebp
inc
xchg
pop
ja
adc
sub
cs
add
arpl
nop
or
aam
rcr
cmp
div
add
enter
jne
sbb
repz
mov
mov
jo
call
ds
or
sub
cli
pushf
icebp
daa
mov
das
pop
(bad)
or
mov
or
push
xor
aam
lds
pop
add
mov
movq
leave
mov
test
and
movs
(bad)
nop
dec
pop
sbb
test
pop
adc
fdiv
mov
(bad)
mov
mov
pop
pop
sbb
pop
sar
cmc
xchg
movs
outs
or
out
push
gs
aaa
inc
add
mov
xor
test
push
hlt
xchg
div
out
jecxz
fild
xchg
js
fbstp
cdq
frstor
xor
or
xchg
retf
mov
pop
adc
rcl
out
push
imul
bound
pop
sbb
add
sub
ret
call
lock
inc
fist
arpl
adc
aaa
ins
mov
jns
sbb
aam
lock
add
cmp
rcr
popf
xchg
and
js
loopne
mov
cmp
sub
mov
xor
mov
push
add
sbb
sub
push
xor
(bad)
out
test
into
sbb
icebp
int3
sbb
sbb
sbb
xor
scas
in
mov
xchg
sbb
and
mov
pushf
rol
das
push
pop
mov
mov
jmp
popf
je
dec
mov
push
cs
jmp
rcr
mov
movs
push
push
pop
add
leave
mov
and
push
pop
xor
scas
cmp
leave
push
pusha
jg
or
jmp
mov
xor
add
and
cmp
mov
mov
fcos
mov
je
mov
mov
mov
sbb
dec
nop
les
dec
je
push
or
imul
out
jmp
jmp
cmp
cmp
xchg
inc
inc
pop
pop
mov
rol
jl
add
repz
jge
push
test
jbe
add
xchg
jo
dec
add
sar
mov
mov
add
retf
cmc
aaa
call
repnz
adc
mov
adc
mov
xchg
fdivp
loop
mov
dec
or
hlt
idiv
shl
hlt
inc
mov
dec
cs
pop
inc
cmp
jle
imul
jmp
dec
sbb
(bad)
mov
fsub
out
mov
shr
jns
ret
jmp
pop
jb
dec
and
mov
xor
std
sahf
ds
pop
aaa
fmul
cmovg
dec
add
repnz
ret
inc
jne
add
movs
cmp
and
adc
sbb
or
adc
add
mov
(bad)
repnz
ins
pop
adc
loopne
lea
sub
div
sbb
xlat
mov
jl
out
sti
cwde
lahf
aas
popw
pop
mov
push
in
add
sub
repnz
mov
inc
xor
adc
mov
inc
and
outs
xchg
out
scas
int3
jmp
xor
pusha
sub
enter
push
mov
mov
mov
pop
repnz
jg
jecxz
jo
cmp
mov
xor
stos
leave
pop
outs
push
aas
dec
outs
out
xor
fimul
or
mov
push
fs
hlt
mov
sub
cmc
mov
pop
mov
add
cmps
push
push
jecxz
nop
repnz
hlt
mov
pop
add
sbb
or
scas
loope
xor
outs
and
mov
call
outs
adc
or
adc
(bad)
cwde
dec
mov
jge
push
cmp
cmps
xor
rcl
(bad)
mov
mov
push
add
adc
pushf
leave
push
jl
test
in
cmp
aam
call
mov
ss
jmp
inc
cmp
mov
test
xor
or
shl
push
dec
mov
inc
cs
xchg
neg
pop
cmp
(bad)
sahf
cmc
cmp
addr16
sbb
jae
adc
and
test
dec
mov
xchg
not
daa
addr16
add
outs
pop
sub
inc
xor
lods
daa
mov
inc
div
adc
stos
cmp
stos
fstp
xchg
add
stc
mov
mov
push
push
aaa
cli
lods
shl
mov
xchg
das
inc
sbb
push
ss
sub
cmp
in
loope
mov
call
ds
mov
addr16
push
scas
adc
adc
xor
jg
add
push
dec
sbb
iret
ret
xchg
adc
adc
push
lods
xor
sbb
test
dec
shr
jmp
lea
dec
fucomi
les
push
add
(bad)
adc
out
jecxz
mov
mov
ss
push
mov
leave
test
push
in
xor
dec
mov
sub
rcr
inc
loope
inc
xlat
int
movs
call
mov
mov
test
adc
call
icebp
enter
out
sub
xor
int3
sbb
jnp
lods
xchg
ins
xor
nop
scas
adc
adc
sbb
pop
mov
retf
cmp
inc
ds
fs
mov
sub
sahf
movs
add
out
out
or
test
sub
pop
sub
fwait
stos
inc
out
mov
fcom
sbb
or
mov
fwait
in
xchg
pop
lahf
dec
mov
imul
scas
adc
cmc
retf
(bad)
mov
cmp
jno
bound
(bad)
icebp
pop
cmps
(bad)
xlat
xor
dec
int3
inc
jmp
ss
push
jg
ret
test
mov
mov
dec
add
mov
mov
dec
loope
outs
idiv
mov
outs
jp
jmp
pop
xchg
call
(bad)
dec
scas
pop
push
xor
daa
xchg
repnz
sbb
btc
sub
sbb
xor
ss
mov
jge
push
fadd
in
add
sbb
cmps
int3
loopne
in
sti
pop
in
jo
jb
imul
ins
ins
dec
push
xor
sar
dec
pop
mov
inc
mov
mov
cmp
imul
push
jnp
push
aaa
adc
mov
gs
xor
cmp
push
mov
xchg
mov
fsubr
jge
dec
adc
mov
aad
push
mov
pop
xor
(bad)
std
inc
dec
inc
test
lea
test
ja
repnz
jl
mov
xor
sub
pop
push
sbb
mov
mov
clc
dec
mov
aam
repnz
js
lea
sub
pop
in
leave
das
sbb
ins
ror
push
lahf
jb
add
jg
or
sub
cmp
mov
iret
jmp
sub
fidiv
outs
mov
mov
mov
hlt
mov
aaa
sahf
dec
xor
lods
mov
ret
fs
clc
jp
xor
ins
test
pop
sbb
inc
jne
adc
jge
es
and
sti
stc
outs
mov
mov
int
fidivr
push
cs
inc
add
and
dec
mov
aam
push
shl
fcmovnu
pop
xchg
test
dec
sub
sbb
inc
jecxz
fmul
lea
jmp
xor
aad
(bad)
int
pop
mov
cmps
ins
mov
mov
sub
imul
sbb
add
lds
imul
push
scas
repz
mov
shl
int3
int
inc
xchg
cdq
sbb
inc
jmp
pop
outs
push
and
add
mov
aam
push
rol
repz
push
add
push
pusha
in
add
add
xor
fcmovne
and
mov
es
(bad)
neg
push
sbb
mov
mov
dec
daa
or
add
cmps
cmps
push
xor
xor
fs
inc
ror
in
mov
scas
call
shl
ror
xchg
or
mov
mov
push
dec
xchg
sbb
fmul
fnstcw
cmp
fs
and
cmp
jo
stc
ss
fwait
retf
ret
ins
inc
mov
mov
sub
rcr
xor
push
inc
pop
lds
lock
shr
fdivr
ins
xor
mov
sub
or
jmp
rol
cmp
xor
pop
pop
aaa
pop
jae
pop
aaa
and
test
iret
jle
xor
mov
cmp
mov
ret
sbb
or
lock
mov
dec
(bad)
stc
inc
pop
cmp
lods
dec
repz
shr
scas
dec
(bad)
push
repnz
aas
dec
leave
inc
aad
out
lahf
jp
out
in
arpl
jns
adc
and
(bad)
push
dec
jb
aaa
fmul
mov
retf
in
imul
frstor
ss
cmps
cmp
imul
stc
sbb
push
adc
push
out
jne
out
adc
outs
mov
inc
cdq
pop
loopne
cli
cmc
lea
mov
das
inc
xor
push
pusha
test
daa
ret
mov
adc
push
pop
push
in
xor
cmp
les
sub
or
inc
push
sub
scas
popf
push
pop
test
mov
(bad)
pop
inc
push
cmp
out
lahf
(bad)
xchg
mov
stos
mov
jno
xor
icebp
and
loopne
pop
sub
mov
dec
clc
pop
jl
jnp
or
xchg
ja
gs
std
sti
push
je
pop
cmp
jge
lea
add
bound
rcr
xor
mov
jmp
jno
in
jb
mov
rcl
stos
cmp
or
jecxz
dec
and
mov
mov
ds
jmp
fstp
ins
mov
dec
out
mov
and
ja
imul
lods
xchg
mov
inc
and
(bad)
stc
lds
int
sbb
add
sahf
mov
jle
jl
fs
ror
repnz
ret
add
mov
xchg
xlat
clc
jle
adc
push
test
xchg
add
xor
adc
loop
out
fisttp
in
loope
jno
cmc
shr
jge
pop
sbb
inc
fild
outs
jp
lods
and
out
aas
jle
push
push
inc
mov
cdq
dec
or
cld
mov
jecxz
mov
xchg
bound
or
sbb
adc
ss
sub
cmp
xlat
mov
xchg
cwde
dec
fwait
cmc
retf
push
xchg
pop
lds
out
pop
inc
lds
add
mov
ret
mov
jp
push
inc
dec
lods
push
dec
inc
jmp
xchg
pop
pop
xlat
cmp
push
stos
ins
sub
sbb
push
cs
or
sbb
in
jg
sub
sub
dec
cmps
cmp
lods
jne
(bad)
cs
cwde
xchg
adc
das
or
fisttp
stos
adc
push
pop
out
(bad)
jle
addr16
and
out
adc
jmp
(bad)
in
pop
mov
or
dec
imul
mov
ror
inc
lock
das
test
add
jnp
(bad)
cmp
fmul
mov
mov
mov
cmp
sub
add
sub
mov
inc
dec
inc
movs
test
shr
ds
xor
xchg
test
mov
adc
rcl
sub
(bad)
inc
mov
into
scas
mov
mov
fisttp
pop
cmp
push
ja
ja
les
mov
and
push
and
enter
inc
ja
jo
push
in
fnstenv
and
jl
push
movs
ins
stos
test
aam
xlat
cmp
mov
jmp
fcomp
adc
in
cmp
and
xor
lahf
(bad)
iret
out
adc
adc
das
and
in
mov
jno
ret
js
push
outs
push
jle
popf
or
adc
dec
or
jnp
xlat
pop
jl
dec
sar
bound
xchg
xchg
mov
in
iret
mov
push
test
push
mov
sub
scas
mov
add
adc
mov
sub
scas
gs
mov
jns
pop
mov
mov
cmps
jle
or
add
pop
jecxz
and
sub
pop
(bad)
out
inc
pop
jl
repz
iret
stos
sub
gs
aaa
adc
aad
pop
cmp
xor
inc
enter
jp
mov
or
adc
int3
pop
cmp
mov
or
outs
fst
(bad)
pushf
adc
and
jg
scas
push
mov
test
cdq
sbb
mov
out
ins
or
mov
les
neg
fist
pop
sbb
sbb
outs
leave
imul
popa
call
cmp
and
das
enter
retf
pop
cwde
mov
push
pop
sbb
add
push
ins
pop
pusha
scas
push
cmc
ret
mov
stos
cs
fidivr
retf
jno
popf
dec
aaa
pop
retf
clc
and
jp
pusha
loopne
or
lock
mov
loopne
int3
xchg
pop
push
pop
sub
sbb
int3
push
retf
mov
hlt
js
jb
xchg
test
fwait
das
adc
jno
pop
dec
push
and
inc
mov
fdiv
jno
xchg
pop
rcr
push
icebp
jno
stc
lock
inc
les
add
sbb
fwait
mov
adc
inc
lahf
pushf
xchg
jg
and
das
fsubr
jns
add
mov
sbb
xlat
xor
push
jg
leave
mov
mov
out
jns
mov
adc
addr16
out
xchg
pop
gs
push
jo
movs
mov
xchg
fsub
dec
sahf
in
sti
call
and
fisubr
pop
pop
push
fadd
mov
xchg
or
imul
jle
cmp
dec
mov
cmps
jb
std
mov
fwait
sub
pop
mov
cld
mov
jo
fadd
sar
test
push
inc
sbb
mov
mov
(bad)
in
in
mov
cmp
sar
inc
sahf
lods
mov
repnz
sbb
add
stos
xchg
and
dec
jecxz
push
adc
and
(bad)
mov
retf
ins
xchg
lock
repz
xchg
mov
pop
or
psubd
loopne
fmulp
xor
push
je
sub
cmp
outs
(bad)
jmp
jmp
pop
nop
add
outs
sub
inc
icebp
sub
mov
fwait
cmp
sub
sub
cmp
sbb
arpl
inc
fstp
mov
pop
jge
cmps
and
test
mov
pushf
mov
xchg
mov
mov
jg
xor
gs
test
push
xchg
and
fld
mov
dec
dec
push
pop
call
aam
aaa
aas
jge
sahf
in
push
and
inc
and
in
popa
adc
imul
dec
push
imul
or
inc
dec
test
cli
sub
pop
in
fwait
jle
scas
or
jg
jmp
push
fisub
shl
daa
inc
bound
fs
add
mov
inc
add
push
(bad)
fcomp
dec
not
cdq
fnstenv
imul
xor
call
pop
adc
cmp
push
pop
jg
cmp
out
rcl
jl
icebp
stos
dec
shl
leave
xchg
xchg
gs
fsubrp
test
and
loope
int
push
movs
pop
dec
mov
lea
test
call
dec
rcr
or
sti
pusha
loopne
mov
dec
adc
test
adc
and
mov
and
iret
or
inc
sbb
retf
adc
ret
push
clc
mov
push
fist
mov
push
aaa
and
fwait
dec
pop
cmp
add
add
in
dec
sbb
add
imul
mov
pop
xchg
mov
inc
pop
icebp
fsubr
addr16
bound
and
mov
lods
test
or
jle
jb
mov
call
sbb
test
imul
das
cmp
pop
ficomp
adc
cmc
mov
cmp
mov
bnd
(bad)
sub
das
jl
int
push
mov
jns
push
aam
pop
data16
mov
xor
mov
enter
xor
enter
inc
adc
dec
mov
pop
loope
pop
jl
and
sbb
dec
out
xchg
mov
xchg
lea
jecxz
movs
mul
mov
lds
int3
xchg
leave
imul
cmp
ret
mov
sub
popa
sub
xchg
ins
jae
add
xor
lods
loop
push
mov
enter
inc
add
ficom
cmc
cmc
into
(bad)
ss
cmp
test
sub
push
cmp
xor
and
outs
repnz
jmp
xor
xchg
sub
mov
push
mov
dec
push
cmp
fidiv
adc
mov
xchg
cmp
(bad)
imul
cmp
mov
cmp
push
iret
(bad)
mov
leave
mov
cmp
sahf
mov
fidivr
cmc
pop
and
addr16
xor
adc
sub
push
jb
sbb
mov
in
call
mov
lods
pusha
mov
xor
jecxz
jle
shl
cmc
lock
js
out
enter
mov
fadd
mov
and
mov
push
lods
inc
out
std
dec
pushf
mov
loop
dec
push
(bad)
call
out
cwde
add
push
and
loope
mov
pop
daa
inc
mov
mov
pop
cmp
xchg
in
enter
int3
int3
popf
fild
or
popf
xor
dec
movs
sub
dec
mov
xor
jmp
xchg
ror
add
cli
sub
sar
add
cmp
xor
push
jae
sbb
pushf
jne
xor
mov
test
mov
mov
pop
icebp
mov
movs
sbb
add
ins
or
pop
xchg
ins
and
rol
push
test
cmc
cmps
in
loop
das
mov
cwde
sub
adc
push
cmp
hlt
pop
mov
mov
or
mov
dec
add
lods
sub
jmp
adc
into
imul
pop
ins
loope
rol
icebp
scas
clc
xor
out
mov
dec
test
xor
jmp
pop
inc
aam
arpl
xchg
add
outs
cwde
in
rol
(bad)
shr
jp
mul
cmp
fnsave
push
add
push
mov
maskmovq
dec
stc
sbb
mov
(bad)
enter
mov
(bad)
(bad)
jb
adc
shl
sub
or
popf
sub
sub
shl
jo
ss
jb
or
jecxz
inc
outs
mov
and
sbb
pop
fistp
mov
cmc
sbb
int3
les
addr16
mov
mov
mov
sub
jmp
lea
shl
push
ds
cli
scas
jb
xchg
mov
sbb
pushf
push
call
mov
or
lods
mov
sub
push
pop
loope
or
sub
cmp
lahf
pop
dec
mul
nop
push
test
outs
(bad)
int
push
mov
popf
cmove
and
inc
ret
(bad)
dec
mov
adc
cld
sub
inc
pop
mov
mov
shl
mov
movs
aam
(bad)
imul
mov
jo
stc
enter
push
and
push
pop
pop
mov
popf
loopne
cld
dec
shl
clc
xor
retf
std
pop
mov
rcr
inc
jns
sbb
and
and
mov
in
enter
ins
mov
ins
dec
lock
test
idiv
lods
sub
in
cmp
mov
imul
push
inc
fdiv
lea
xchg
mov
in
sub
std
dec
mov
cmps
popa
fiadd
jno
test
(bad)
lods
imul
sub
movs
fiadd
loopne
xor
stc
inc
xchg
jmp
jnp
cld
xor
mov
cdq
cmp
xor
test
sbb
lea
or
hlt
cmp
fisttp
sbb
and
jns
js
dec
sbb
mov
ficomp
sub
pop
ror
neg
test
aaa
pop
mov
jb
mov
pop
adc
push
xor
or
lds
mov
mov
ins
dec
mov
dec
jg
mov
xor
out
add
in
arpl
imul
dec
cs
pop
add
rcl
dec
mov
cvtps2pd
fisubr
pop
cmp
repz
adc
cs
fisub
je
adc
aam
(bad)
xchg
jae
rcl
mov
adc
or
sar
inc
or
mov
mov
or
inc
xor
mov
pusha
xchg
arpl
clc
(bad)
into
mov
lds
outs
jno
xchg
adc
pop
cmp
pop
nop
mov
rcl
push
or
fxch
scas
dec
addr16
add
xchg
(bad)
sbb
int3
mov
jmp
mov
push
cmp
(bad)
lea
mov
jb
or
dec
inc
adc
clc
test
das
inc
push
xchg
sub
dec
cwde
aad
xor
int
sahf
inc
mov
pop
(bad)
lahf
out
inc
stos
inc
xor
test
push
push
add
enter
mov
inc
xchg
sbb
clc
(bad)
jl
mov
jge
mov
jo
mov
rcr
mov
fadd
je
aaa
mov
stc
aaa
outs
or
mov
xchg
mov
xchg
sbb
loope
jecxz
ret
(bad)
mov
inc
jo
mov
stc
add
clc
imul
shld
cmp
fild
nop
sbb
test
and
cdq
xor
dec
cmp
inc
sub
xchg
mov
(bad)
sub
or
iret
fild
push
xor
shl
ret
pop
dec
fcom
inc
sub
les
in
rol
test
fiadd
test
out
les
sub
scas
gs
sub
cwde
jo
daa
xchg
xor
std
add
jg
jg
ins
xor
mov
fiadd
jl
mov
fbstp
popf
mov
das
mov
adc
inc
call
repz
push
icebp
rcl
stc
mov
inc
data16
repz
test
and
iret
aam
add
test
lods
leave
adc
dec
popa
push
xchg
mov
xor
cmp
clc
push
pop
fld
iret
icebp
std
pop
in
loop
mov
mov
data16
mov
sbb
shl
jecxz
pop
mov
mov
out
sub
mov
test
popa
pop
(bad)
jp
xor
mul
xor
(bad)
inc
adc
xchg
sub
div
cdq
leave
dec
mov
and
or
ins
mov
add
jne
loopne
daa
nop
xor
pushf
and
pop
mov
in
and
arpl
fucom
rcr
and
repz
sub
inc
sbb
mov
out
call
mov
cmps
dec
pop
ret
pusha
out
aad
jne
aad
jmp
mov
pop
cmps
mov
pop
add
icebp
jae
leave
aas
xor
cwde
dec
mov
daa
and
xchg
add
pop
neg
dec
mov
loop
pusha
adc
or
jns
repz
ins
add
or
fistp
test
lahf
or
pushf
iret
ds
push
xchg
sahf
movs
or
fldcw
pop
sub
repnz
les
inc
sbb
fucom
add
sub
(bad)
mov
push
mov
mov
imul
xor
jmp
adc
in
nop
in
and
sub
loop
(bad)
adc
inc
in
movs
div
sar
daa
outs
mov
pop
nop
sbb
test
sbb
loop
int
xchg
(bad)
xlat
and
cld
rcl
enter
sbb
repnz
push
push
neg
fst
and
and
jno
enter
scas
popa
loope
dec
adc
ds
aam
mov
mov
jge
movs
sbb
rol
jbe
xchg
out
inc
push
movs
nop
cld
stos
iret
test
test
out
ds
daa
pop
xor
sti
test
inc
movs
iret
mov
jns
cli
or
mov
jmp
daa
adc
mov
add
xchg
push
add
pop
cld
lahf
xchg
mov
test
fcomp
movs
hlt
lods
ficomp
mov
out
mov
nop
ficom
pop
jne
inc
mov
scas
test
jecxz
rcl
ror
int3
ja
popa
and
push
mov
jb
je
and
sbb
inc
mov
push
jp
stos
enter
jecxz
stc
inc
pop
daa
pusha
xor
jb
and
push
out
std
inc
movs
retf
jo
stos
iret
pushf
lds
jae
pop
call
icebp
xchg
mov
jecxz
repz
sub
cmc
cdq
cdq
dec
mov
mov
inc
sti
mov
stc
imul
lods
inc
daa
ins
mov
out
iret
mov
cwde
mov
sbb
xor
push
jmp
pop
mov
jecxz
je
cmp
jp
inc
adc
pop
xor
test
cdq
(bad)
pop
mov
cmp
inc
pushf
pop
adc
outs
or
sti
jo
outs
sbb
dec
sbb
pop
out
(bad)
enter
ds
adc
repz
out
mov
enter
or
cli
mov
call
in
stos
fild
sub
mov
fs
dec
xor
push
adc
cmove
enter
xlat
and
mov
aad
jb
arpl
ud0
pop
out
adc
pop
push
pop
in
sti
sahf
cmp
gs
add
or
push
or
mov
mov
gs
mov
jl
jnp
sub
mov
fwait
les
sub
inc
mov
sub
ret
pushf
test
call
lods
xchg
mov
mov
mov
imul
or
imul
aas
je
jp
arpl
(bad)
xchg
aad
xchg
mov
cmp
xor
xchg
icebp
xchg
dec
add
call
retf
(bad)
mov
xchg
mov
and
out
jg
bound
loope
dec
mov
call
jecxz
inc
sbb
jnp
pop
adc
push
pop
or
fcomp
ss
xor
sbb
cli
or
push
dec
rol
sahf
out
test
pop
sbb
stos
loop
les
movs
jecxz
call
mov
jecxz
sti
test
push
inc
pop
jge
ins
push
ins
cmp
arpl
(bad)
adc
dec
mov
inc
or
ss
sub
add
in
dec
and
dec
stos
push
sub
in
dec
xor
es
xchg
mov
and
dec
push
push
sbb
repnz
cmp
sbb
push
fisub
dec
stos
mov
adc
call
pop
daa
jge
stc
repz
sti
sub
push
push
adc
in
imul
adc
lds
and
jbe
push
out
lods
(bad)
pop
into
stos
jmp
push
pop
dec
or
push
imul
jb
stos
in
movs
loope
clc
mov
lahf
ins
ja
jae
add
push
daa
push
add
shr
sub
pop
mov
gs
xor
and
test
addr16
push
pop
sub
imul
dec
cmp
test
cwde
rol
xor
push
pusha
add
jp
test
sub
mov
xchg
fmul
mov
dec
sub
mov
fbstp
ss
inc
sub
fbld
pop
jecxz
(bad)
pop
daa
cli
pop
in
aam
fldcw
sbb
dec
cmps
xchg
fld
out
fcom
mov
leave
int3
xor
jp
mov
lods
jle
js
jnp
or
idiv
xchg
dec
ins
sub
adc
pop
cmp
ins
xor
add
popa
test
jns
push
xchg
mov
jmp
xchg
ror
lds
mov
sahf
jl
mov
pushf
mov
retf
sub
inc
push
and
jns
push
in
jns
mov
lea
test
mov
mov
ror
xchg
jbe
dec
aaa
not
popa
sub
push
rcl
and
inc
adc
or
je
dec
sbb
jno
jo
fs
dec
and
adc
push
adc
(bad)
mov
sahf
aam
retf
mov
push
xor
ret
jae
dec
cmp
mov
cmp
mov
popa
cvtpi2ps
xchg
ret
mov
call
(bad)
xchg
outs
mov
sti
lods
sahf
push
pop
sbb
or
call
push
cli
mov
xor
mov
repz
jbe
dec
sbb
aas
inc
add
dec
out
cwde
dec
mov
(bad)
lods
repz
and
jmp
jbe
arpl
dec
and
call
ficom
pop
push
inc
popf
jbe
pop
sbb
jmp
in
mov
lods
scas
inc
retf
stos
imul
out
xchg
stos
iret
xor
mov
movs
loop
add
push
call
sub
je
inc
or
cmp
xchg
div
mov
lahf
inc
sbb
cmp
lods
jmp
clc
inc
rcr
push
and
ss
push
sbb
ins
xor
sub
stos
leave
vprotd
enter
inc
sub
ins
sbb
(bad)
push
mov
(bad)
hlt
xchg
mov
add
xchg
into
sar
inc
push
add
and
jbe
nop
shl
add
mov
cmp
ins
js
add
push
js
imul
enter
repz
fisubr
and
mov
test
add
mov
push
push
aas
dec
or
jmp
dec
daa
inc
adc
push
add
inc
push
inc
add
xor
inc
les
inc
add
jno
inc
sbb
adc
inc
mov
fsubr
mov
pop
xchg
movs
shr
arpl
ja
pop
cmp
pop
sbb
push
cmp
inc
sbb
push
in
leave
cmp
inc
adc
enter
out
repz
mov
pushf
mov
stos
pusha
lods
les
pop
cmp
cld
xor
sbb
fiadd
ds
jnp
cmp
rcl
mov
and
jae
pop
mov
pop
sbb
cwde
adc
mov
mov
mov
daa
ins
add
inc
xor
add
sbb
mov
ss
adc
xor
inc
mov
or
sub
jae
nop
(bad)
or
xor
fcomp
inc
fcom
pushf
popf
fcomp
inc
sub
ret
mov
pop
fsub
push
lock
cmp
aaa
into
xor
push
xor
loopne
in
stos
nop
outs
xchg
mov
ins
jmp
adc
dec
or
sbb
sbb
sbb
jg
ja
arpl
mov
mov
sub
loop
or
mov
popa
and
push
test
or
mov
dec
mov
push
and
lahf
fild
pop
push
cmp
rcl
fimul
mov
and
add
and
xor
mov
mov
jg
pop
push
push
or
das
dec
imul
cmp
inc
push
fwait
stc
mov
addr16
sbb
jno
jno
jb
push
es
cmp
je
outs
sub
inc
xor
data16
adc
adc
pop
pop
sub
push
adc
jnp
je
cs
or
jae
arpl
bound
jp
and
push
adc
push
xor
pop
iret
xchg
mul
jmp
jecxz
shl
je
arpl
dec
es
pop
inc
and
xor
xor
sahf
fld
mov
rcr
not
mov
mov
cmp
aaa
das
inc
or
inc
adc
rcl
pusha
add
mov
gs
push
mov
les
(bad)
pop
xor
mov
mov
jae
fistp
js
popa
adc
pop
test
repnz
in
jmp
fwait
(bad)
xor
mov
hlt
mov
jb
out
retf
mov
fs
push
push
sub
push
sbb
inc
xor
xchg
ds
add
jg
pop
adc
and
arpl
stos
call
popa
add
arpl
xchg
ret
xor
lods
fiadd
xor
mov
stos
push
push
adc
inc
mov
fwait
jmp
icebp
sbb
push
cmp
sub
push
or
xor
scas
jmp
jmp
cmps
shr
retf
sahf
cmps
ja
cdq
rol
aad
rol
mov
xor
jne
jp
jae
popf
into
mov
loope
mov
scas
rcr
or
or
fidivr
movs
mov
lods
lds
movs
cmps
mov
mov
mov
lahf
int3
js
push
sub
movs
jmp
int
pop
jecxz
in
mov
nop
std
(bad)
rcr
mov
test
cmp
push
and
(bad)
mov
icebp
(bad)
(bad)
mov
pop
in
iret
xchg
in
mov
xchg
lods
out
mov
xchg
outs
add
ins
repnz
adc
nop
shl
add
cwde
shl
jmp
frstor
add
push
imul
mov
mov
shr
and
xchg
ror
add
xor
mov
lods
out
mov
push
test
outs
pusha
adc
dec
push
jge
and
(bad)
mov
xchg
or
cmc
lods
call
jmp
mov
in
mov
lods
aam
in
mov
or
(bad)
retf
mov
mov
mov
outs
add
push
out
popa
add
test
retf
test
or
cld
test
fstp
test
xor
mov
bound
dec
cmc
and
adc
pop
or
push
cmp
pcmpeqd
arpl
pop
cmp
push
pop
fs
pop
jecxz
aad
add
inc
loope
fidivr
mov
fisubr
push
sbb
leave
or
push
and
pop
pop
loope
retf
mov
jae
les
dec
add
aaa
jns
inc
jmp
sub
mov
adc
(bad)
out
mov
mov
ja
bound
dec
in
adc
(bad)
mov
adc
lods
jmp
mov
scas
push
cmps
in
mov
icebp
sub
mov
mov
xchg
xchg
fbld
fisub
jno
xchg
movs
call
mov
sbb
(bad)
push
pop
xor
adc
jns
(bad)
ret
push
push
inc
and
push
sahf
dec
add
pop
sbb
popa
or
push
cld
movs
(bad)
call
cmps
fisub
lahf
movs
xlat
mov
retf
mov
and
shr
add
cld
mov
jmp
loop
jle
cmp
fs
mov
add
cmp
dec
cmp
pop
or
or
push
sbb
dec
adc
(bad)
retf
mov
les
(bad)
mov
xchg
xchg
stos
ret
(bad)
fiadd
push
test
xchg
in
cli
mov
jmp
mov
push
ins
sub
xor
dec
in
rcl
xor
in
imul
pop
add
cmp
mov
xchg
(bad)
lods
push
pop
jl
add
sbb
jp
stc
xor
dec
or
dec
or
and
lods
jmp
xchg
sahf
frstor
stc
or
pusha
loopne
ins
fnstsw
in
and
pop
mov
lods
lds
adc
add
inc
or
cmp
cmp
jp
cmps
hlt
xchg
cli
xchg
fsub
lods
dec
xor
sbb
outs
jmp
sbb
lds
(bad)
push
cmp
ret
pop
in
(bad)
mov
xchg
mov
push
jmp
xchg
lds
out
sti
mov
xor
jnp
pop
dec
and
gs
and
bswap
mov
aam
xlat
or
sbb
adc
pop
inc
xor
adc
and
popa
xor
push
je
pop
push
aaa
pop
xor
or
xor
scas
(bad)
ins
add
aaa
jae
and
or
xchg
push
test
fst
jle
xchg
mov
mov
(bad)
mov
xor
ret
mov
mov
scas
int3
mov
mov
mov
mov
mov
xor
xchg
repz
xchg
rcr
arpl
shr
mov
scas
shl
out
(bad)
bound
repz
(bad)
mov
cdq
pop
popf
fidiv
mov
push
and
xchg
fxch
lahf
cmps
fdivr
fwait
aam
loopne
xlat
mov
jecxz
call
fwait
mov
mov
lds
mov
aas
rol
or
dec
bound
pop
sbb
or
arpl
jnp
mov
mov
push
jno
inc
clc
aas
and
hlt
mov
xchg
int3
popf
inc
enter
dec
ss
loop
clc
xchg
mov
xchg
mov
je
push
sbb
and
jnp
pop
ds
imul
mov
ds
inc
pop
sub
ins
sub
inc
sti
mov
mov
call
mul
outs
xor
je
pop
jecxz
aas
jl
sbb
(bad)
in
mov
jmp
add
push
dec
pop
jmp
ficom
jg
sub
sub
(bad)
loop
lock
pop
add
mov
mov
test
idiv
sub
add
popa
and
jns
stos
in
cld
and
lds
pop
pop
popa
adc
and
in
stos
ret
nop
retf
dec
movs
popf
ficom
xor
jmp
jno
leave
stos
jmp
lock
xchg
test
xchg
push
fist
xchg
aaa
retf
(bad)
in
movs
(bad)
je
gs
not
nop
loopne
scas
fistp
cmps
jae
pop
pop
in
ins
cmp
jno
ds
adc
lds
ret
stos
in
dec
xchg
into
(bad)
jmp
lahf
jne
repnz
push
ds
xor
pop
sbb
out
mov
or
inc
adc
ja
ficomp
push
inc
push
ret
xor
inc
test
mov
mov
push
ins
sub
or
es
add
add
arpl
(bad)
or
ja
cmp
and
mov
(bad)
mov
(bad)
clc
ss
popa
and
add
stos
clc
mov
xchg
mov
fs
pushf
fiadd
xor
push
or
cmp
in
and
lods
cmc
mov
mov
mov
sti
mov
xor
inc
jmp
movs
out
int
adc
jg
and
pop
cmc
sub
xlat
inc
jecxz
or
popa
and
or
add
mov
add
xor
jg
push
shr
add
test
cwde
pop
in
enter
ror
jb
and
sbb
addr16
mov
data16
retf
cwde
icebp
xchg
sub
pusha
adc
inc
xor
mov
mov
or
not
(bad)
dec
and
retf
out
nop
xor
xlat
xor
jns
xchg
fisub
scas
iret
xor
sbb
xchg
movs
leave
(bad)
jnp
pop
sbb
jns
retf
test
fdivr
xor
imul
jmp
scas
pop
out
std
inc
or
and
dec
lahf
ret
es
imul
les
adc
pop
xor
inc
add
adc
rol
dec
cmp
es
dec
add
cmp
sbb
push
add
inc
adc
add
xlat
mov
or
nop
leave
sbb
mov
adc
mov
stos
imul
inc
or
jmp
dec
push
pusha
pop
push
adc
push
jb
inc
ret
lods
leave
jno
dec
pop
cmp
call
xor
push
hlt
sbb
pusha
aas
(bad)
in
xchg
rcr
xchg
ins
and
data16
and
jno
adc
fdiv
push
dec
pop
pop
out
iret
push
es
pop
pop
cmp
bound
add
int3
data16
hlt
mov
xchg
mov
pop
push
loopne
retf
xchg
faddp
stos
in
fadd
jp
pop
mov
imul
sti
pop
outs
adc
lds
add
shl
inc
call
rol
mov
jne
jle
clc
push
jo
dec
adc
rol
fcomp
adc
push
adc
pop
(bad)
cmp
sub
push
ins
cs
jmp
dec
sbb
rcl
fwait
test
mov
or
movs
out
loope
icebp
xchg
ret
sub
out
cwde
lods
rcr
adc
outs
sbb
inc
and
cmp
cli
xor
or
movs
push
sbb
les
aad
sub
into
mov
inc
adc
xchg
pop
inc
es
sti
jecxz
fdivr
pop
cli
jecxz
sti
add
ret
pop
mov
es
lea
shl
cmovge
popa
push
fdivr
stos
enter
loope
jmp
sub
aad
das
pusha
mov
mov
in
out
gs
sar
repnz
and
push
lahf
aam
lock
adc
or
sti
repz
scas
cdq
popf
sar
std
mov
fisub
jp
arpl
test
mov
out
sbb
adc
dec
or
jne
hlt
lods
out
mov
mov
pushf
popa
mov
fwait
iret
xchg
scas
int
pop
sbb
adc
mov
ins
sub
sar
test
adc
sbb
dec
xor
and
pop
jae
pop
xor
add
movs
repnz
jl
pop
sbb
push
push
jae
adc
int3
push
and
xor
jae
push
mov
add
jmp
xor
or
jo
pop
mov
stos
jmp
pop
add
cmp
lods
frstor
pushf
dec
xchg
rcl
or
sbb
pop
sbb
idiv
mov
outs
out
stos
call
imul
aam
inc
push
js
pop
clc
test
mov
pusha
(bad)
mov
xchg
mov
dec
xchg
mov
(bad)
movs
das
ins
push
ins
imul
scas
test
push
add
pusha
add
inc
and
cmp
loope
(bad)
cld
mov
or
enter
push
pop
add
and
or
dec
out
stos
sar
retf
mov
or
int3
and
cmp
lahf
fsubr
ret
jae
div
sar
div
cs
jmp
push
mov
cmps
loopne
xlat
cdq
ficom
cmp
push
xchg
aaa
jge
pop
stos
push
sbb
and
jne
jmp
xchg
ror
gs
call
jmp
ins
adc
push
sub
xor
or
push
popa
retf
jo
inc
mov
popa
daa
popa
push
jbe
std
push
ins
cs
test
ins
cs
sbb
lods
shl
push
push
or
outs
nop
add
daa
dec
add
jno
jns
adc
test
(bad)
dec
js
push
das
jmp
adc
pop
in
pop
sbb
jo
sbb
push
dec
in
cmp
pop
mov
mov
data16
cld
and
inc
shr
sbb
adc
adc
ds
pop
or
mov
repz
outs
dec
adc
outs
or
loop
aad
sub
add
or
lods
test
jno
xchg
xlat
xchg
fist
xchg
mov
push
shl
rcr
shr
xor
neg
fs
je
pop
lahf
ds
daa
je
push
idiv
out
test
pop
pusha
sbb
or
in
retf
sahf
mov
mov
sub
pop
cmp
ins
sub
sub
inc
or
inc
push
push
cmp
pop
es
pop
pop
cmp
pop
cli
mov
sub
cmp
and
adc
nop
sar
push
dec
cmp
inc
add
icebp
call
add
adc
arpl
neg
sub
fnsave
mov
call
xchg
xchg
adc
add
inc
repnz
paddsb
mov
sahf
test
mov
aas
adc
sub
ror
cld
sub
dec
or
lods
lods
loopne
cld
imul
es
or
mov
and
push
(bad)
mov
mov
xchg
jecxz
pop
jne
pop
inc
add
add
jae
push
push
dec
sub
rol
aad
mov
xor
and
(bad)
pushf
ins
sub
cmp
push
ficomp
outs
and
xor
add
inc
xlat
mov
loope
push
push
jne
cmps
iret
test
push
mov
xor
pop
xchg
out
in
xor
jbe
retf
imul
ja
and
ror
cdq
aam
cmc
add
into
mov
sbb
pushf
mov
xchg
jl
ds
je
add
mul
ror
(bad)
xchg
enter
mov
mov
test
pop
ds
xlat
lea
xor
push
adc
jmp
mov
daa
add
dec
cmovne
pop
cwde
leave
leave
shl
cli
rcr
outs
adc
mov
aaa
dec
jns
dec
adc
fcom
retf
sahf
cmp
ret
shl
les
das
lock
pusha
add
fistp
pop
imul
pop
and
dec
mov
mov
jle
je
cmp
sub
xchg
arpl
pop
adc
ret
add
repz
jae
inc
sbb
push
pop
push
call
pop
inc
daa
outs
ss
scas
ret
les
fdivr
fnstcw
or
dec
adc
cmp
xor
mov
lods
out
mov
test
sbb
jmp
adc
push
(bad)
stos
in
dec
sub
test
push
cmp
imul
jnp
loopne
dec
and
ja
ins
fdivr
mov
fs
dec
dec
sbb
sub
aad
and
hlt
xchg
cmc
mov
aas
push
rcl
jmp
mov
xchg
cs
push
dec
out
push
out
out
stc
mov
adc
(bad)
in
scas
int
int
jp
mov
fwait
clc
call
shr
aam
cmc
mov
mov
or
mov
repnz
pop
pop
ret
jnp
inc
adc
lock
xchg
add
(bad)
sbb
sub
pop
push
push
xchg
int
es
adc
add
mov
lds
pop
jae
jg
inc
outs
xor
xchg
lds
ja
stos
call
jbe
mov
xchg
(bad)
lods
js
add
cmp
pop
dec
sbb
test
and
push
movs
(bad)
movs
or
xchg
cli
inc
call
pop
cmp
(bad)
rcl
rol
popf
sub
xlat
xchg
xchg
aam
sub
inc
sub
mov
mov
mov
jmp
mov
scas
fcomp
jb
mov
cwde
jnp
xlat
addr16
inc
and
push
mov
pop
pop
add
adc
icebp
fdivr
int3
(bad)
fs
jno
jmp
je
fs
pop
aas
ins
test
lods
jbe
ss
sbb
jno
jmp
jo
push
jmp
mov
je
out
xchg
loop
xor
scas
adc
or
mov
rcl
push
mov
gs
dec
mov
fwait
pop
dec
and
repz
xlat
nop
and
adc
je
ret
mov
jo
push
sbb
popf
mov
add
xor
inc
push
adc
sub
and
cld
(bad)
mov
or
push
(bad)
xchg
(bad)
mov
sbb
dec
xchg
icebp
sbb
mov
dec
jecxz
pop
push
push
into
lods
imul
and
sbb
or
arpl
jl
push
ret
mov
sbb
xchg
push
pop
sbb
loope
push
sbb
outs
add
hlt
call
mov
or
jae
icebp
sar
mov
call
sub
inc
fwait
mov
jnp
ror
stc
mov
sub
scas
fcomp
out
rcr
dec
pushf
sbb
test
cmps
aam
in
inc
push
pop
cmp
sub
cmp
aad
aam
pop
adc
rcl
mov
dec
sar
(bad)
mov
cmp
in
test
adc
xor
stos
and
lahf
out
stos
mov
repz
add
mov
je
or
push
gs
adc
div
inc
pop
sbb
jno
out
icebp
(bad)
mov
dec
push
and
dec
sbb
jmp
xor
mov
push
fcomp
push
or
cdq
fiadd
clc
mov
jb
pop
sbb
mov
repnz
adc
xor
inc
jne
test
je
push
pop
mov
and
mov
push
push
cmp
aam
mov
cmovo
push
push
and
outs
ss
lds
sbb
gs
movs
push
and
push
sbb
cmps
hlt
scas
mov
mov
test
sub
mov
cmps
outs
or
out
(bad)
ficomp
sbb
push
imul
jecxz
clc
stos
call
outs
xor
xor
cs
sbb
popa
xor
test
fistp
push
or
jns
xor
cmp
sbb
mov
fcom
ins
fnsave
aam
jmp
ins
sub
out
push
cmp
adc
push
xchg
scas
mov
dec
jae
dec
ss
je
lock
sbb
retf
ficomp
scas
call
adc
mov
add
popf
iret
lea
mov
adc
push
adc
add
dec
bound
div
xchg
cld
lds
(bad)
stc
leave
sub
fcomp
jo
adc
inc
push
rcr
stos
clc
or
repz
mov
repz
leave
adc
mov
imul
or
mov
adc
sbb
dec
test
push
cmp
mov
xchg
out
(bad)
mov
mov
sub
add
mov
xor
aas
dec
fwait
call
sbb
jge
ins
jo
push
mov
arpl
push
dec
or
cwde
cmp
ins
aas
jl
jge
retf
int3
mov
in
fnsave
and
call
push
sbb
outs
add
ins
lahf
fmul
fmul
cmp
xor
outs
sbb
push
or
sbb
into
(bad)
xlat
aas
ins
cwde
(bad)
shr
and
ret
mov
cmp
mov
loop
push
adc
movs
jecxz
jl
hlt
mov
mov
inc
imul
sub
fsubr
inc
mov
fmul
lods
out
test
sub
not
mov
mov
xlat
mov
fimul
adc
loopne
jae
pop
sbb
call
loop
into
cmps
jb
fcmove
sahf
(bad)
push
push
pop
in
fstp
mov
dec
or
pop
cmp
sub
mov
retf
leave
lods
scas
pop
pop
push
fs
or
mov
cmp
or
mov
fld
push
in
mov
ins
sbb
dec
adc
ret
mov
pop
push
mov
pop
pop
sbb
jnp
rol
add
imul
stos
sar
ins
push
pop
jno
push
les
sub
sub
lahf
retf
and
ret
and
push
ds
jmp
ror
and
sub
mov
sbb
cs
dec
mov
mov
rcl
add
rol
fwait
jmp
test
fmul
inc
cli
repz
ret
xchg
rcr
jae
outs
sub
rcl
dec
pushf
test
inc
sub
inc
and
imul
xchg
stos
cmps
clc
test
mov
mov
loope
xor
call
or
inc
xor
pop
(bad)
retf
test
popf
push
jge
pop
sbb
jmp
add
push
enter
dec
push
clc
stos
(bad)
sbb
es
push
pop
sub
ss
idiv
imul
dec
stc
into
mov
push
pop
je
xchg
lods
iret
lods
jmp
popa
mov
mov
in
mov
test
aaa
call
addr16
push
or
pop
das
rcl
ret
inc
or
movs
(bad)
xchg
xlat
mov
popa
mov
jl
imul
rcl
jno
dec
push
outs
or
mov
xchg
in
inc
femms
inc
push
pop
mov
int
inc
xor
sub
mov
mov
pop
xor
pop
sbb
or
scas
int
inc
int3
mov
xchg
in
mov
cmps
push
push
push
jg
cmp
arpl
inc
movs
jmp
aad
mov
test
scas
jbe
xor
es
and
ss
std
lahf
fstp
inc
xor
sub
or
push
adc
shl
retf
mov
mov
scas
and
push
gs
retf
xchg
mov
ins
dec
cmp
xor
dec
cs
pop
test
xlat
pushf
fist
call
jge
pop
dec
or
loopne
pop
sbb
mov
mov
nop
inc
add
lahf
adc
push
xor
pusha
daa
ins
add
shl
and
in
call
mov
das
inc
or
mov
dec
adc
js
jl
or
mov
sub
outs
push
add
outs
pop
enter
icebp
dec
sub
adc
mov
mov
sti
cwde
xlat
mov
movs
(bad)
movs
loop
gs
xor
pop
mov
leave
add
in
test
mov
or
fwait
sbb
sub
ret
mov
mov
jne
jp
inc
adc
mov
inc
pop
and
mov
ret
xchg
repnz
sbb
sub
xchg
out
mov
inc
pop
jo
or
out
lods
not
inc
add
div
(bad)
into
pushf
pop
cmp
cwde
xlat
xchg
stc
push
or
push
adc
repz
cmp
popa
cmp
add
xlat
add
adc
mov
dec
cmp
push
xchg
rcl
mov
test
push
xor
retf
mov
(bad)
(bad)
mov
fisttp
inc
repnz
or
rcl
ss
push
repnz
or
rcl
mov
add
add
arpl
dec
mov
imul
adc
jge
rcr
addr16
lock
jae
mov
test
daa
jne
jle
test
adc
in
xchg
fdiv
add
xor
mov
icebp
out
lods
not
nop
xlat
out
enter
call
add
and
and
push
jl
jge
movs
aad
loop
shl
imul
jno
jge
ret
stc
shl
xchg
cmps
push
inc
xor
add
in
jle
push
mov
xchg
aam
mov
imul
outs
sub
shl
lods
jecxz
dec
or
add
dec
loopne
(bad)
cmp
ds
push
xchg
loop
rol
and
mov
ins
add
ja
pop
or
jo
rol
mov
es
(bad)
mov
dec
pop
push
inc
mov
push
dec
pop
jne
out
mov
mov
and
pop
add
dec
adc
fidiv
lds
iret
mov
popa
xor
mov
mov
lahf
in
scas
fadd
aam
hlt
(bad)
addr16
bound
push
add
push
cmp
pop
aaa
js
shl
xchg
(bad)
mov
test
add
fiadd
jne
xor
mov
call
xor
jl
xchg
jge
fs
or
mov
cmp
ds
(bad)
std
xchg
loope
jmp
movs
movs
sahf
fisttp
sbb
jle
adc
or
add
pop
sbb
ret
push
adc
in
ficom
push
or
inc
jmp
retf
ficom
push
fwait
sbb
icebp
mov
mov
pop
sbb
add
cmp
jae
sbb
addr16
cs
mov
aas
jo
push
adc
fs
mov
bound
mov
mov
xor
inc
ds
repz
xlat
mov
dec
add
ss
(bad)
lods
icebp
out
mov
xchg
fdiv
mov
ret
mov
ss
and
std
sahf
push
inc
xlat
arpl
jg
out
dec
adc
leave
mov
call
pop
je
jl
les
pop
add
into
xchg
aad
jae
(bad)
data16
xor
daa
ins
sub
imul
xlat
mov
mov
jnp
push
adc
mov
cdq
push
sub
pusha
or
mov
scas
mov
iret
add
inc
out
outs
or
hlt
mov
aaa
je
pop
fwait
leave
icebp
mov
xchg
loopne
mov
mov
pop
sbb
nop
fstp
mov
mov
test
cs
es
js
ss
das
push
xchg
mov
sar
jbe
add
cld
ins
and
inc
call
(bad)
xchg
idiv
fwait
enter
retf
int3
mov
push
out
pop
add
in
repnz
pop
inc
daa
je
fiadd
jmp
bound
int
fld
pop
pusha
xor
pop
add
je
push
inc
push
adc
mov
mov
mov
cmp
jno
cld
xchg
scas
hlt
cdq
out
lods
fild
call
cdq
call
mov
in
lahf
fdivr
out
mov
add
scas
pop
cmp
aas
inc
int
fstp
loop
push
push
xor
cmps
mov
xlat
mov
(bad)
mov
sub
fs
jne
push
sbb
or
call
pop
xor
add
mov
sub
fcomp
jg
inc
pop
push
aaa
lahf
fnstcw
ds
push
ret
jmp
or
imul
add
popa
sub
jo
lds
popa
cmp
cli
and
fstp
push
sbb
ins
daa
aad
lods
icebp
div
dec
sub
das
push
inc
bound
or
sub
dec
pop
pop
ins
jp
loopne
or
addr16
or
push
dec
mov
ja
mov
scas
in
lahf
(bad)
push
push
fstp
xchg
cli
fbld
mov
icebp
or
(bad)
cdq
lock
fwait
clc
test
push
in
push
adc
jp
add
lods
out
lea
icebp
mov
mov
adc
(bad)
dec
add
xor
and
xor
jle
jnp
push
daa
pusha
cmp
push
in
mov
out
out
in
enter
sbb
jmp
cli
mov
jb
je
xor
rcl
push
es
mov
imul
mov
test
out
test
iret
stos
ins
aaa
outs
in
xlat
(bad)
int3
call
aaa
ds
aad
lods
leave
test
test
shl
das
or
push
sbb
(bad)
in
mov
(bad)
lahf
in
scas
fcomp
and
sub
sti
lods
das
inc
add
fisttp
popf
fiadd
pop
or
fs
jg
jns
jne
sub
and
out
fisttp
jge
mov
mov
popa
push
cmp
jbe
popf
dec
push
pop
or
lock
push
ds
pop
pop
(bad)
mov
jge
pop
sub
sti
(bad)
rcr
pop
sbb
push
fs
into
mov
retf
mov
je
adc
adc
jne
jmp
imul
(bad)
and
ficomp
xor
pop
iret
mov
loop
fcom
sub
xor
xchg
and
jns
push
imul
jnp
pop
fcomp
dec
sub
std
cdq
and
retf
mov
sub
out
int
jmp
and
aam
hlt
push
adc
mov
mov
sbb
popa
pop
push
jge
cmp
add
rcl
inc
push
and
(bad)
pop
out
mov
and
fist
mov
mov
push
inc
pop
inc
push
push
jnp
mov
ds
adc
adc
leave
mov
call
js
add
nop
aam
repnz
ds
adc
lods
retf
test
pushf
inc
dec
pop
lahf
fstp
cmp
aaa
je
cli
pop
cmp
jns
out
mov
ds
or
sbb
imul
cmp
xor
scas
cdq
les
aas
jecxz
icebp
add
inc
(bad)
mov
cs
rcr
stos
inc
pop
sbb
push
push
adc
test
add
xor
pop
sub
not
and
imul
mov
sbb
scas
push
bound
pop
inc
enter
cmps
hlt
mov
hlt
gs
sub
jmp
add
inc
add
push
aad
cmp
jle
clc
arpl
inc
add
pop
jecxz
or
imul
adc
sbb
fsub
test
cwde
jmp
sbb
or
xor
xchg
js
dec
adc
pop
ds
mov
jmp
mov
cs
push
out
mov
inc
loop
ficomp
outs
scas
scas
jmp
sbb
jb
hlt
mov
jecxz
repnz
repz
sub
icebp
sub
mov
jns
inc
and
dec
sub
outs
sub
cmps
mov
and
ins
cs
inc
adc
lock
cli
mov
(bad)
cdq
ins
sbb
fs
xor
inc
add
xchg
jb
out
(bad)
mov
nop
and
fldcw
sbb
pop
out
and
and
inc
push
dec
cmp
retf
push
ds
push
push
inc
push
inc
cs
fld
push
add
and
or
jns
out
pop
out
in
aam
dec
adc
push
mov
jp
pop
jae
(bad)
fcomp
or
aam
stos
je
outs
sub
pop
add
fnstenv
call
cs
inc
not
and
imul
lods
out
mov
xchg
xor
pop
xchg
aam
add
push
sbb
add
dec
add
pop
fldenv
push
leave
mov
mov
and
push
push
pop
mov
mov
repnz
push
sbb
out
dec
or
cmp
stos
jmp
mov
jae
jg
fs
mov
mov
loope
out
xlat
(bad)
in
mov
fs
xchg
cmc
and
lds
in
lahf
jno
mov
add
push
jae
push
in
push
adc
aam
daa
gs
dec
sbb
test
and
push
xor
cmp
lods
lahf
call
push
pop
lock
xchg
leave
stos
clc
add
sub
mov
ja
int3
xor
xchg
sar
sahf
push
sbb
(bad)
xchg
jns
add
push
add
and
test
popf
cmp
push
jns
inc
pop
dec
and
into
mov
xchg
int
(bad)
fistp
lock
or
jnp
cmp
mov
fcomp
popa
imul
sub
pusha
xchg
(bad)
jnp
pop
pop
imul
adc
ja
retf
pop
cmp
cdq
dec
sub
jo
inc
push
jne
sar
mov
push
inc
mov
mov
(bad)
call
rcr
push
dec
add
xchg
ret
inc
mov
ror
pop
push
dec
cmp
nop
repz
or
jge
sbb
lods
cs
adc
popa
push
push
xor
popa
aaa
retf
jmp
sub
ss
push
push
add
pop
pop
gs
pop
sbb
fcom
sub
lds
jnp
ror
cmp
nop
mov
push
xchg
mov
mov
mov
cmp
imul
add
push
or
jb
cdq
fistp
mov
call
loop
les
fidivr
in
ret
sbb
mov
mov
jmp
mov
sbb
movs
int
and
push
adc
cmp
pop
xor
sbb
addr16
cmp
outs
jecxz
std
sahf
test
loop
cld
(bad)
int3
mov
add
idiv
retf
pop
sbb
push
adc
and
in
fstp
or
add
dec
and
jno
stc
enter
and
or
add
dec
or
imul
in
push
jnp
pop
out
ret
xchg
fidivr
pop
cmp
(bad)
(bad)
mov
pop
sbb
inc
adc
retf
mov
jp
sahf
sub
jae
jle
jbe
add
xor
mov
pop
dec
adc
jl
push
push
cmp
sub
iret
mov
lahf
fdiv
and
out
mov
xor
mov
mov
outs
add
(bad)
mov
lock
fnstcw
xchg
xchg
in
lods
mov
mov
nop
mov
into
test
ins
sbb
data16
add
jno
dec
shr
loope
les
mov
mov
bound
mov
xchg
aad
gs
xchg
add
shl
adc
(bad)
mov
fnsave
jbe
jge
pop
add
dec
adc
inc
and
pop
sbb
add
pusha
adc
pop
sub
ds
mov
sbb
jno
sbb
cmp
test
add
xchg
shl
mov
repz
mov
ret
push
pop
pop
dec
in
dec
cs
sub
cdq
mov
ja
cmp
cli
xchg
(bad)
ins
loopne
scas
mov
hlt
mov
inc
and
pop
push
dec
sar
leave
mov
call
(bad)
and
push
sbb
mov
push
test
push
adc
xor
imul
hlt
outs
movs
retf
cwde
dec
push
dec
out
pop
sbb
adc
jecxz
enter
sub
or
fs
mov
lods
hlt
or
clc
or
inc
push
jp
pop
xor
in
push
iret
mov
cwde
retf
outs
mov
mov
xchg
loope
mov
mov
sahf
retf
dec
ss
mov
xchg
call
ins
cmp
stc
add
push
or
in
test
xchg
rcr
popf
div
mov
xchg
xchg
and
inc
sbb
(bad)
lahf
cld
call
test
fs
mov
inc
fcomp
and
outs
mov
inc
ret
cdq
ficomp
or
repz
xchg
icebp
lahf
pop
aas
jg
outs
inc
mov
cdq
(bad)
scas
loope
cmps
xchg
pop
popa
xor
int3
xchg
shr
cwde
fild
pop
or
inc
pop
les
fwait
lods
in
scas
idiv
xor
push
(bad)
mov
sub
and
jae
inc
in
cmp
je
(bad)
fsubr
cli
push
xor
and
pop
ret
movs
mov
out
pop
mov
test
call
add
sbb
loope
or
int3
mov
xor
xchg
call
mov
xchg
fidiv
xchg
sar
sub
jb
loop
rcl
and
push
pop
or
and
sar
push
or
(bad)
cld
mov
xchg
repnz
jecxz
enter
jle
push
jp
ret
mov
adc
inc
das
out
test
cdq
dec
jo
jg
and
add
into
mov
lods
rol
sahf
mov
imul
push
sbb
cmps
les
xor
adc
adc
or
cmp
jo
push
in
fsubr
sub
jp
push
in
mov
outs
push
inc
sbb
lods
leave
push
xchg
adc
pop
pop
inc
es
repnz
icebp
mov
icebp
mov
inc
out
ja
inc
or
cmp
pop
mov
stc
sahf
xlat
pushf
mov
imul
les
ror
push
das
adc
inc
loope
int3
xchg
call
or
dec
or
mov
inc
out
ror
add
inc
ss
adc
add
add
inc
or
ss
inc
or
push
xor
mov
and
jl
jl
int3
std
mov
fst
lds
shl
jmp
int3
xchg
inc
sbb
pop
add
and
pop
jmp
in
mov
lea
cmp
xor
sub
jg
outs
sbb
sub
(bad)
fistp
lods
not
mov
scas
fisub
dec
push
jecxz
clc
stos
pop
cmp
sbb
push
push
pop
push
aaa
push
adc
add
ins
in
iret
mov
mov
cmps
mov
ret
and
mov
add
inc
and
hlt
xchg
lds
retf
xchg
ins
sbb
sub
add
in
ror
call
(bad)
pushf
out
lods
xchg
pushf
fild
jns
and
es
add
push
adc
fwait
call
mov
mov
stos
shl
add
in
xor
cmps
fcomp
inc
push
xor
fimul
(bad)
(bad)
mov
loopne
jg
jne
je
aaa
push
sbb
mov
(bad)
retf
cmps
out
pop
dec
pop
add
and
adc
xchg
ror
or
inc
push
dec
add
int
cli
lahf
lds
call
sbb
inc
ds
xchg
pop
sub
call
push
jmp
retf
add
jp
add
pop
adc
call
adc
cmp
push
xor
(bad)
mov
pop
fs
test
or
pop
mov
inc
not
jae
ret
lods
fsub
outs
cmp
pop
hlt
leave
mov
cdq
mov
test
jae
pop
push
jnp
outs
add
sti
and
int
out
mov
imul
xor
jae
push
in
mov
mov
popf
imul
outs
cmp
out
scas
int3
nop
mov
aad
dec
cmp
dec
cs
pop
jmp
fwait
shr
push
dec
and
clc
mov
(bad)
iret
xchg
hlt
xchg
xchg
fld
xchg
jns
popa
or
fistp
imul
fadd
jae
js
and
in
xchg
out
inc
cmp
pop
out
scas
jge
pusha
cmp
shr
fdiv
clc
test
std
mov
push
or
push
xor
add
popa
clc
popf
in
sub
jge
cmp
adc
dec
loopne
cmp
neg
sahf
repnz
jp
arpl
cs
pop
adc
ja
int3
mov
mov
xchg
shr
and
std
mov
mov
popf
add
imul
das
imul
(bad)
std
sub
js
imul
in
fnsave
push
add
call
and
imul
push
xchg
arpl
pop
jmp
dec
sbb
pop
xor
or
adc
lods
mov
inc
push
adc
das
jge
sub
push
out
mov
cmp
dec
hlt
mov
push
adc
loopne
(bad)
fs
xor
arpl
arpl
push
out
lds
(bad)
outs
sbb
repz
retf
mov
das
inc
add
jmp
mov
call
jo
inc
sbb
xor
or
adc
push
cmp
dec
mov
pop
ss
repz
cmps
repz
or
push
sub
dec
push
jb
clc
scas
int
(bad)
popf
pusha
ja
pop
in
add
push
adc
sbb
pop
sbb
mov
in
dec
push
pop
sbb
xor
rcr
xchg
jo
inc
pop
mov
cwde
retf
jecxz
test
mov
mov
out
mov
iret
mov
std
mov
into
xor
jb
jmp
movs
dec
sub
dec
jmp
sbb
shl
cmp
pop
push
cmp
dec
mov
stos
icebp
xchg
fdivr
cld
sub
or
pushf
in
and
jb
rcr
std
mov
jle
mov
jle
pop
ret
bound
pop
push
inc
mov
scas
cld
mov
or
lock
fisub
stc
xchg
aam
mov
leave
xchg
cdq
or
and
in
mov
je
jl
pop
sub
xlat
(bad)
cmps
in
mov
jmp
clc
cwde
dec
pop
outs
or
pop
leave
fdiv
sbb
cmp
mov
test
aad
fistp
xor
and
pop
in
fbstp
sbb
cld
mov
xchg
loopne
or
pop
add
push
lods
in
lods
neg
and
cwde
sar
popf
ret
mov
popf
mov
push
pushf
jmp
and
hlt
mov
mov
pop
add
and
in
in
scas
leave
pop
inc
jne
dec
or
call
add
(bad)
sar
pop
frstor
dec
adc
arpl
dec
and
xchg
into
xchg
adc
data16
dec
aas
pop
add
cmp
sub
inc
push
shl
cmc
mov
push
sub
push
xor
push
out
lds
bound
or
imul
cmc
mov
cdq
fcomp
adc
inc
or
bound
jbe
sub
js
jg
fmul
lds
sahf
sbb
sahf
in
test
cmps
out
sub
pop
adc
add
sbb
mov
mov
stc
xchg
push
cmp
outs
sbb
or
push
adc
ss
sbb
jns
add
add
lods
(bad)
mov
pop
pop
loope
add
arpl
push
push
push
xor
jo
aad
clc
mov
mov
iret
jo
push
and
ds
lahf
jecxz
(bad)
nop
ror
jge
xchg
aad
fbld
dec
aas
js
fs
and
mov
jmp
data16
aad
aad
rol
dec
add
dec
xor
mul
jne
imul
mov
stos
jmp
lds
out
stc
mov
sbb
pop
push
cmp
sbb
dec
cs
or
pop
pop
cli
xchg
out
ret
pop
mov
or
dec
adc
adc
aad
(bad)
xchg
fiadd
xchg
icebp
mov
sahf
push
add
inc
sbb
dec
mul
fwait
repz
outs
sub
in
je
add
dec
sub
sahf
out
mov
enter
inc
adc
mov
mov
mov
sbb
scas
call
sbb
pop
sbb
jecxz
adc
dec
sbb
fwait
enter
popf
ret
cwde
fimul
jl
dec
or
sti
xchg
lods
test
test
mov
push
xor
xchg
fbld
pop
pop
enter
rcr
outs
sbb
jl
les
jae
les
aad
and
sub
test
xchg
in
cmc
xor
jne
push
sbb
jnp
ret
call
lea
sub
cmp
pop
(bad)
scas
les
push
mov
test
jle
dec
xor
xchg
aaa
inc
sbb
push
ds
pushf
fstp
arpl
dec
or
ficomp
dec
or
mov
mov
and
xchg
retf
outs
fist
xchg
jmp
pop
adc
mov
stos
aam
je
jl
inc
and
fimul
dec
lea
xor
push
stos
les
dec
adc
sar
imul
jecxz
jmp
adc
pop
push
rcl
and
or
add
adc
out
out
(bad)
arpl
repnz
mov
lahf
fisttp
popa
add
scas
int3
ficom
jle
dec
adc
call
imul
cli
and
mov
mov
inc
add
out
stos
ret
cmp
push
xor
or
jmp
dec
cmp
mov
scas
repnz
retf
mov
call
(bad)
(bad)
mov
sub
ror
push
or
jmp
inc
push
shl
dec
push
inc
or
cmps
ret
xchg
aad
ins
sub
adc
cmp
adc
aad
jae
pop
adc
xor
xchg
and
inc
push
aas
outs
sub
and
or
ja
daa
inc
add
mov
adc
dec
cli
mov
pop
adc
jbe
dec
sbb
and
sub
adc
jne
arpl
push
nop
(bad)
nop
rcl
or
clc
fnstcw
jae
je
xor
xor
pop
rsqrtps
sub
cmps
hlt
cwde
hlt
mov
sub
mov
push
inc
or
nop
ret
add
rcl
jb
dec
andnps
ficomp
mov
mov
mov
mov
pop
hlt
fnstsw
sub
xchg
stos
in
mov
leave
xchg
mov
mov
jmp
pop
add
add
dec
adc
xchg
loopne
rcr
jbe
push
hlt
mov
outs
xor
movlps
retf
jno
adc
mov
xchg
int
cld
ins
xor
lock
jmp
call
push
dec
add
pop
call
push
jmp
aad
jbe
addr16
ja
jge
popf
stc
mov
les
pop
rsqrtps
xchg
jl
cmc
into
mov
adc
jnp
neg
daa
inc
sbb
mov
fcomp
fnsave
mov
dec
aaa
fs
bound
dec
or
bound
(bad)
leave
or
mov
outs
or
mov
mov
mov
mov
mov
js
popa
add
std
and
and
mov
jbe
dec
movs
js
and
inc
and
sar
dec
or
cmp
into
xchg
push
cmp
sub
jmp
bound
dec
cmovbe
lds
dec
adc
and
hlt
pusha
adc
push
hlt
mov
test
lahf
movs
(bad)
bound
int3
mov
popf
mov
jbe
dec
or
pusha
cmp
mov
xor
mov
pop
xor
fs
fwait
leave
xchg
cmp
pop
test
mov
push
mul
pop
push
ja
jnp
daa
jge
and
xchg
movs
out
xchg
frstor
ins
push
dec
pop
jge
and
dec
rol
popa
sbb
adc
mov
test
mov
lock
or
sbb
pop
sbb
inc
fwait
call
and
rcr
pop
cmp
push
ds
inc
out
aam
jmp
xlat
cwde
(bad)
loop
rcl
adc
je
pop
sbb
dec
sub
and
daa
je
cmps
out
pusha
and
push
outs
sub
inc
(bad)
lahf
ror
cmp
cwde
mov
and
idiv
test
sbb
push
push
cmp
xchg
test
mov
es
xor
dec
push
dec
add
pop
add
pop
rcl
xor
outs
sbb
jo
ins
sub
push
hlt
mov
sbb
push
push
pop
sub
push
xor
push
jb
sar
ss
inc
or
inc
sbb
leave
mov
mov
jae
jle
pop
mov
jle
and
daa
in
mov
mov
xor
popa
or
call
push
es
add
xchg
scas
aad
stc
cmp
fidivr
jns
jae
jae
inc
aas
dec
push
rcr
test
lahf
cli
xchg
fdivr
(bad)
jnp
popa
add
push
dec
sbb
xchg
int
les
popf
clc
xchg
inc
jecxz
(bad)
ret
mov
mov
mov
cmp
jo
jge
fmul
cmc
cmp
sbb
sub
je
dec
xor
mov
mov
cdq
(bad)
test
pusha
mov
out
lods
aam
dec
adc
cmp
xor
push
addr16
or
or
mov
inc
jmp
out
add
adc
or
sbb
cmp
push
pop
ror
sbb
(bad)
pop
mov
lahf
les
imul
sub
ja
push
or
ss
inc
adc
xchg
leave
bound
pop
add
cld
popf
rol
jle
xor
loopne
into
mov
mov
lods
in
call
(bad)
xor
pop
push
das
jb
or
jle
push
xor
sbb
outs
sub
mov
mov
lods
jp
mov
rep
cmps
repnz
cmps
mov
mov
push
dec
xor
sbb
jbe
les
dec
or
pop
cmp
clc
xchg
lods
push
pop
dec
cmp
push
int3
xchg
sti
mov
xchg
cwde
test
aaa
pop
loop
retf
lods
push
adc
(bad)
iret
mov
mov
cmp
inc
add
mov
xchg
movs
mov
mov
pop
daa
jne
xlat
arpl
pop
in
cmp
(bad)
mov
mov
ins
sbb
test
popf
les
es
retf
mov
xchg
dec
or
and
addr16
mov
stos
jmp
pop
add
js
mov
addr16
(bad)
cld
mov
push
cmp
stos
sti
cdq
(bad)
outs
mov
movs
mov
sub
sub
or
out
xlat
xchg
shl
int
xchg
in
aad
sub
cmp
adc
dec
ret
sti
cwde
cli
mov
mov
sbb
push
or
inc
add
mov
add
xchg
(bad)
pushf
cmps
pushf
mov
aam
inc
xor
pop
call
out
imul
and
dec
aaa
jne
pop
sbb
mov
mov
ins
pop
inc
sub
aaa
push
sbb
dec
or
bound
dec
or
xchg
fld
call
ins
cmp
or
loopne
sbb
mov
mov
cdq
test
xor
retf
mov
and
cld
mov
test
fcom
pusha
sar
cld
mov
sbb
jl
clc
popa
or
xchg
mov
div
imul
sar
push
or
adc
js
test
xor
jns
ja
fisubr
repnz
inc
push
cmp
dec
cmp
sub
push
cmp
scas
cld
sahf
leave
cmp
adc
mov
mov
xchg
std
mov
js
mov
xor
push
test
fcomp
xchg
call
lahf
rcr
inc
add
(bad)
inc
sbb
push
sbb
mov
add
pop
inc
in
inc
add
dec
hlt
nop
std
(bad)
rcl
call
ret
cwde
iret
data16
dec
adc
pop
(bad)
fldcw
jmp
loope
mov
popf
push
aas
and
and
(bad)
lds
xlat
sahf
mov
inc
or
dec
out
out
xchg
rcr
mov
inc
mov
xchg
scas
int3
cdq
test
ret
popa
add
shl
mov
lahf
test
test
outs
sbb
retf
mov
scas
(bad)
lahf
fiadd
popa
cmp
scas
in
add
xchg
mov
jae
mov
jno
push
sbb
dec
sub
out
mov
xchg
movs
jnp
sbb
push
inc
in
bound
and
inc
or
stc
mov
inc
xor
dec
or
jp
and
inc
nop
rol
ret
daa
pop
out
leave
mov
add
imul
aad
sub
dec
(bad)
mov
xor
mov
mov
test
dec
mov
in
jmp
jmp
test
sbb
pop
aad
push
in
and
mul
sbb
inc
or
adc
jg
mov
mov
sub
jp
aaa
and
or
mov
xchg
movs
std
inc
loopne
iret
mov
sub
shl
mov
jnp
lods
into
pop
mov
gs
xor
nop
xchg
ror
jecxz
cli
gs
and
cli
arpl
jg
(bad)
jle
pop
in
xor
cmps
mov
ss
inc
jmp
jmp
xchg
shl
outs
adc
ja
add
imul
pusha
push
inc
sbb
push
pop
add
je
cmp
test
mov
lea
sub
sbb
and
add
pop
out
lahf
fs
repnz
int3
pop
xor
scas
pushf
fstp
push
retf
call
adc
mov
and
popa
add
outs
repnz
sti
mov
lock
jp
pop
push
shl
sbb
(bad)
ins
sub
dec
mov
inc
add
test
mov
movs
mov
and
inc
jl
xchg
in
js
hlt
mov
cli
push
adc
sub
xchg
pusha
adc
pop
add
add
mov
add
fdiv
scas
(bad)
jmp
jp
out
pop
lds
xchg
aaa
push
scas
in
dec
sub
mov
cmp
mov
dec
or
mov
rcr
xor
out
or
push
xchg
pop
xor
mov
pop
jne
call
mov
mov
fild
retf
(bad)
push
daa
pop
add
dec
ror
dec
and
dec
cmps
les
ins
mov
inc
add
mov
fadd
mov
push
sti
mov
sbb
xchg
push
adc
outs
fstp
xchg
xor
push
mov
sahf
bound
arpl
sub
xchg
je
loope
xchg
xlat
ins
xor
inc
lods
into
xor
mov
mov
push
cmp
xchg
(bad)
pop
cs
ins
sbb
cmp
inc
adc
mov
dec
pop
outs
fld
fisttp
add
les
loop
test
adc
stos
imul
cmps
jne
cld
mov
xor
es
fcom
leave
mov
mov
xor
lock
cmp
aaa
jo
movs
stos
(bad)
cmovge
mov
xor
xchg
add
out
mov
and
out
or
pop
ds
mov
jle
out
(bad)
mov
mov
fild
and
test
or
jo
mov
stc
pop
xor
stos
test
push
adc
dec
mov
imul
push
test
inc
aaa
cmp
mov
ins
aaa
ret
repz
int3
mov
adc
test
pop
outs
sbb
int
or
adc
push
adc
mov
(bad)
push
sbb
jne
adc
repnz
cmc
mov
lock
lods
nop
shl
push
mov
inc
sub
lods
inc
pop
or
stos
fnstcw
sub
imul
pusha
jmp
into
mov
sbb
mov
sti
mov
push
cmp
cli
push
xor
pop
iret
mov
movs
xlat
inc
add
pop
adc
pop
xlat
test
call
mov
test
dec
mov
and
sbb
cmps
dec
or
jo
cdq
xchg
rcl
aas
jo
ficomp
subps
lods
data16
shl
ror
les
cmp
and
add
aas
xor
mov
sbb
test
mov
add
mov
mov
mov
xor
stos
pushf
fld
inc
ficomp
mov
push
cmp
mov
cdq
fist
pop
std
lea
xor
out
sub
mov
push
xor
std
pop
xor
pop
fisubr
or
sahf
xchg
es
fimul
imul
stos
bnd
out
mov
mov
push
ja
mov
repnz
push
or
into
mov
imul
mov
mov
add
add
cs
jge
sti
mov
fwait
leave
add
je
loope
dec
mov
and
lods
sar
fld
jecxz
xchg
fsub
mov
pop
xchg
(bad)
pop
mov
jl
icebp
test
sbb
jmp
and
push
fist
adc
fs
push
mov
test
pop
fld
cmp
fld
inc
mov
push
and
push
fisubr
and
ror
inc
(bad)
mov
cmp
or
int3
movs
mov
push
cmps
lds
hlt
cwde
and
inc
aam
arpl
sub
cmc
popf
(bad)
dec
sbb
test
lds
dec
or
outs
sbb
or
arpl
in
mov
pop
imul
jbe
xor
xor
pop
sti
mov
jmp
push
push
or
(bad)
sahf
(bad)
outs
sub
scas
fmul
adc
fild
pop
mov
xchg
nop
jecxz
ins
fstp
std
cmps
outs
cmp
mov
xchg
in
sub
sub
sti
xchg
dec
or
adc
in
and
mov
fs
xor
(bad)
pop
push
add
(bad)
test
push
xchg
pop
das
sbb
movs
out
jb
scas
mov
dec
and
pop
mov
push
mov
dec
fldcw
cli
mov
mov
aas
ins
fnstsw
xchg
out
aaa
in
scas
push
paddb
add
inc
movs
out
sbb
mov
and
dec
int
js
lock
mov
dec
das
cmc
mov
int3
pop
cmp
(bad)
jl
and
into
dec
daa
adc
mov
call
or
out
xor
pop
mov
push
adc
scas
popf
shr
jae
in
clts
inc
mov
mov
loope
cmp
jb
test
outs
div
daa
push
mov
rcl
push
scas
mov
and
fwait
mov
pop
sub
addr16
int3
inc
sbb
call
or
pushf
xchg
cmc
sub
jmp
mov
pop
sub
cmp
fistp
adc
lods
mov
and
inc
clc
mov
scas
mov
pushf
jmp
push
adc
jnp
loope
sbb
cmc
xchg
mov
sbb
and
dec
movs
jecxz
cmp
mov
nop
enter
jo
fisub
gs
ja
ret
mov
stos
in
jb
in
lahf
jo
cmp
out
inc
push
add
clc
dec
sub
mov
adc
out
ja
cmps
and
sbb
inc
add
nop
cld
cmp
lea
sbb
dec
retf
cdq
retf
sbb
loopne
and
dec
rol
mov
adc
mov
es
movs
enter
mov
mov
mov
and
fwait
xchg
shl
into
imul
mov
call
rcl
(bad)
out
inc
add
mov
cmc
mov
jecxz
adc
push
ret
retf
xlat
xchg
popf
xlat
inc
xor
cmp
es
ja
xchg
add
jb
mov
fstp
repnz
add
addr16
inc
aad
mov
pop
sub
pushf
outs
or
scas
call
dec
mov
add
stos
popa
cmp
pushf
push
xchg
test
sub
test
repnz
jnp
push
aaa
adc
enter
mov
aaa
adc
arpl
mov
das
adc
pushf
outs
or
xor
cdq
cmps
in
sbb
lahf
inc
and
hlt
pusha
and
call
pop
sub
xor
mov
ror
loop
mov
add
ret
dec
adc
mov
int3
pop
das
ins
test
mov
or
mov
idiv
xor
mov
dec
mov
cmp
out
inc
adc
das
ins
loope
fs
in
(bad)
jno
cmp
push
mov
push
rol
scas
imul
xchg
mov
fbstp
and
(bad)
push
adc
fstp
mov
lahf
dec
cmp
jae
mov
mov
(bad)
cmp
mov
and
mov
xor
xchg
dec
cs
xor
test
ret
cli
cwde
fsub
dec
(bad)
xchg
jns
out
xchg
shl
(bad)
(bad)
mov
xchg
mov
pushf
(bad)
retf
push
pop
pop
outs
std
movs
dec
push
in
xchg
lds
add
xchg
ins
pavgb
or
and
xchg
rcl
out
mov
sti
cwde
and
out
lahf
jle
cld
mov
stc
call
imul
pushf
jb
sub
sbb
jp
pop
cmps
in
jns
leave
jp
out
mov
loopne
fs
mov
and
xchg
mov
pop
fs
xchg
inc
add
push
fs
fidiv
pop
sub
cmps
mov
push
pop
fist
fwait
push
scas
mov
mov
jmp
stos
and
add
lea
cmp
cmps
mov
leave
dec
add
rol
ror
push
xor
xchg
xchg
pop
xor
enter
push
adc
jne
hlt
push
and
pop
push
(bad)
xchg
xchg
fidivr
in
mov
fimul
xor
mov
sbb
fwait
sahf
fisttp
loopne
add
push
mov
adc
mov
daa
loopne
xor
adc
mov
icebp
stos
fwait
enter
mov
shl
ins
sbb
jp
(bad)
and
xchg
mov
fidiv
jmp
and
mov
add
nop
jo
or
mov
and
adc
popf
fs
popf
iret
push
xor
mov
xchg
imul
pop
push
xor
pop
scas
in
ja
push
inc
pop
push
fild
cmp
jmp
and
xchg
cwde
sti
push
cmp
jnp
(bad)
push
iret
mov
jnp
mov
cmovge
cdq
mov
and
ret
jno
in
stos
mov
gs
pusha
cmp
mov
aam
mov
inc
pop
sub
ret
cs
retf
mov
mov
enter
xchg
mov
xor
stos
clc
dec
sub
scas
mov
or
scas
push
movups
(bad)
dec
and
pop
jge
mov
xchg
cli
inc
add
adc
rcr
mov
pop
cs
xchg
int3
push
pop
and
out
xor
inc
test
jae
in
push
add
aad
inc
lods
fidiv
pop
sbb
mov
and
aaa
fs
mov
jb
cdq
ficomp
adc
sbb
imul
sbb
dec
scas
in
and
out
jp
fwait
ins
aas
jmp
mov
sub
pop
sub
fld
sub
ret
sub
inc
(bad)
pushf
push
adc
cwde
cmps
loopne
inc
dec
lods
jecxz
imul
ficomp
les
sub
leave
sub
cmps
fnstenv
adc
lods
stos
in
arpl
out
test
adc
xchg
call
bound
inc
sbb
pause
data16
jge
ror
push
pop
pop
cmps
inc
add
leave
mov
ret
icebp
jne
push
bound
mov
ficom
push
push
(bad)
mov
sub
mov
xor
js
mov
or
mov
xor
clc
push
xor
imul
stos
fdivr
xor
leave
jne
icebp
stos
mov
fist
adc
test
adc
test
daa
lods
iret
das
push
sub
mov
jno
add
fadd
in
pop
(bad)
sti
mov
rcl
mov
and
or
addr16
inc
mov
dec
or
push
mov
mov
data16
arpl
inc
retf
test
stc
jnp
pop
jge
mov
jb
lock
add
sbb
test
scas
test
sub
mov
cs
push
cmc
test
retf
aam
jge
mov
fidiv
je
lea
xor
mov
cmp
mov
shl
popa
retf
mov
push
stos
icebp
sub
rol
sbb
movs
xchg
retf
and
std
and
ret
pushf
xchg
cmc
nop
rcr
out
test
repz
sbb
push
sub
pop
add
pushf
addr16
imul
xor
or
fiadd
leave
mov
and
shl
mov
ja
test
push
push
inc
(bad)
popf
frstor
imul
popa
cmp
mov
mov
and
or
mov
(bad)
data16
movs
xlat
cmp
rcl
mov
aas
sub
mov
add
cli
mov
std
sahf
dec
daa
jecxz
stos
enter
les
into
mov
sbb
jmp
movs
jmp
adc
mov
leave
and
mov
loop
std
dec
and
pop
lods
into
dec
or
push
mov
sub
xchg
loopne
add
mov
retf
sub
mov
xchg
outs
sub
dec
in
pushf
push
or
movs
lahf
(bad)
jno
push
aaa
in
xchg
rcr
cmp
stos
bound
sahf
in
jno
ret
fsub
push
clc
stos
mov
dec
into
mov
pop
add
mov
push
outs
aam
inc
and
ins
(bad)
mov
sub
addr16
cmp
lods
out
inc
add
scas
cmc
and
rcl
pop
add
jns
call
aaa
je
pushf
lahf
fadd
cmp
lods
push
lahf
push
out
lods
mov
mov
inc
add
loopne
jnp
xlat
xchg
movs
std
ins
add
scas
mov
dec
sub
dec
cmc
xchg
imul
pop
sub
xchg
jle
sub
cmp
mov
int3
and
sahf
xchg
lds
push
into
cmps
fcomp
out
popa
es
aam
dec
mov
mov
dec
fnstcw
and
out
or
mov
call
and
dec
or
mov
rol
fstp
in
mov
scas
int3
inc
add
movs
fwait
jmp
ret
ins
das
ret
(bad)
push
mov
inc
pop
cli
cwde
xchg
sar
leave
mov
sbb
mov
jne
into
lea
daa
push
adc
ins
jecxz
je
jmp
jmp
adc
nop
mov
sub
loopne
xor
fcomp
pop
pop
(bad)
mov
fild
adc
mov
push
or
mov
inc
and
addr16
jg
cmp
out
aaa
or
stc
push
or
xor
cld
pop
das
adc
adc
and
mov
xchg
dec
daa
cmp
sub
mov
rcr
jne
hlt
arpl
push
data16
pushf
xchg
int
add
pop
test
pop
pop
xor
xchg
mov
cdq
fisubr
inc
rcl
movs
gs
hlt
mov
mov
cwde
popf
xlat
je
clc
mov
xchg
ret
inc
and
sbb
mov
movs
enter
mov
aas
jge
out
inc
or
xor
scas
mov
je
or
pop
retf
xchg
imul
mov
pop
mov
xor
int3
xor
enter
mov
loop
sbb
mov
add
xchg
lahf
cld
add
in
pop
sub
addr16
and
cmps
mov
push
jg
lahf
and
add
loope
cdq
cmc
jle
push
jne
shl
(bad)
enter
sub
out
aas
in
stos
mov
inc
orps
dec
iret
xchg
addr16
mov
imul
out
test
stc
mov
sub
mov
fiadd
push
inc
mov
pop
adc
out
pop
mov
fadd
inc
xlat
mov
fisttp
in
test
and
ret
mov
jmp
aas
xor
adc
ror
jne
mov
cmps
jmp
out
inc
sub
xor
retf
adc
nop
fs
jmp
cmp
xor
inc
hlt
test
imul
cdq
ficom
cmp
hlt
sub
data16
mov
nop
mov
inc
or
cdq
retf
sti
mov
imul
stos
clc
es
xlat
mov
aaa
je
lods
mov
dec
daa
add
add
mov
(bad)
mov
xchg
dec
pop
add
les
loopne
sahf
out
pop
add
mov
mov
aaa
pop
movs
out
inc
stos
call
gs
stos
ins
push
repnz
inc
or
pop
cmp
mov
sub
adc
mov
add
push
mov
sahf
dec
or
xchg
in
adc
lods
popf
fild
pop
pop
adc
xchg
ins
(bad)
js
out
or
pop
add
mov
test
dec
(bad)
mov
enter
pushf
xchg
out
and
lods
outs
sub
xchg
int
jne
jp
out
arpl
loope
xchg
into
pusha
and
xchg
jo
xor
retf
sub
leave
add
xchg
add
dec
mov
cs
xchg
nop
rcl
cmp
lds
or
out
jge
or
push
(bad)
push
push
push
inc
repnz
pop
sbb
cmp
imul
data16
scas
fs
loop
xchg
push
adc
jo
loopne
pop
cmp
retf
int
xchg
int3
pop
sbb
pop
aad
mov
xchg
std
imul
inc
iret
mov
xchg
mov
dec
std
mov
or
stos
test
daa
inc
rol
mov
ret
icebp
mov
cmps
in
das
loope
ja
loopne
addr16
scas
xchg
and
rol
cmps
jmp
push
add
pop
ficomp
mov
adc
pop
(bad)
out
xor
pop
fstp
cli
xchg
mov
js
sbb
cmps
in
outs
mov
lea
jns
jecxz
or
lahf
cwde
(bad)
jle
out
xor
pushf
(bad)
int3
push
xor
and
jae
xchg
test
cmc
sub
and
dec
fcomp
imul
mov
in
and
or
fistp
xchg
jle
adc
dec
or
leave
mov
sbb
xor
push
mov
lock
leave
fwait
inc
and
pop
add
pop
cmp
push
fnstenv
push
lds
loop
mov
cdq
outs
sub
ins
(bad)
cmps
mov
sahf
inc
adc
popf
pusha
or
stos
ins
(bad)
cmovl
stos
fstp
hlt
xchg
int3
(bad)
dec
or
outs
xor
sub
mov
es
rol
sar
test
dec
sub
mov
pop
movs
xlat
pop
sbb
movs
arpl
mov
xchg
jne
and
fdiv
ret
jno
sub
popf
ins
cs
mov
xchg
ins
add
jle
cdq
inc
xor
mov
std
push
or
or
push
std
and
mov
xor
fstp
sahf
std
dec
es
cwde
cli
dec
or
lahf
repz
cmps
xchg
loopne
add
inc
into
and
cmp
lods
mov
pop
sbb
clc
and
mov
xor
xor
mov
std
mov
jge
in
ins
and
pop
movs
push
popa
fstp
mov
jmp
pop
mov
pop
mov
jbe
int3
push
push
int
dec
or
mov
(bad)
xchg
mov
rol
in
sahf
fsub
imul
sahf
(bad)
pop
sbb
cmc
cmps
shl
xchg
cmc
xchg
aam
inc
(bad)
mov
call
mov
pop
adc
lahf
mov
lahf
cld
push
adc
lea
fadd
sbb
iret
push
push
loopne
mov
pop
ret
mov
rol
addr16
mov
sub
mov
aaa
out
imul
push
repnz
cmp
mov
xor
and
ja
(bad)
ja
adc
retf
pop
sbb
dec
loope
lahf
shl
js
in
jmp
xor
sub
xchg
ror
fwait
repnz
jns
stos
xchg
lock
add
push
loope
mov
jnp
jmp
xchg
dec
add
stos
mov
sub
movs
lahf
fnstcw
das
sbb
stos
xchg
rcl
xchg
in
cmp
xchg
push
cmp
inc
(bad)
(bad)
imul
push
mov
cmp
in
xor
xchg
xchg
test
mov
xchg
sbb
inc
shl
jmp
add
jne
out
adc
xchg
jnp
loop
je
push
push
fadd
add
adc
sub
sahf
int3
sub
retf
mov
jp
or
loope
push
or
repnz
xor
stos
test
lahf
ror
push
iret
pushf
push
push
inc
mov
xor
stos
push
adc
pop
xchg
lds
inc
movs
int
imul
sbb
mov
clc
and
test
add
inc
adc
xchg
mov
pop
adc
nop
jne
lds
lods
into
jns
push
dec
fstp
or
fdivr
add
xchg
push
add
(bad)
adc
adc
mov
mov
test
dec
sub
adc
daa
dec
cmp
int3
mov
in
inc
cmps
call
outs
enter
out
adc
push
and
icebp
test
dec
mov
xor
sub
aas
jecxz
repnz
mov
mov
je
and
jb
jp
ins
pop
xor
add
jns
popa
and
or
outs
sub
push
xor
jl
jp
dec
pshufw
cmp
adc
cmp
daa
arpl
jle
jnp
dec
add
outs
ds
push
xor
push
pop
sbb
pop
sbb
dec
cmp
push
or
jg
pop
adc
jnp
jp
jnp
pop
cs
sub
pop
sub
not
aad
loop
enter
jecxz
cmc
mov
xchg
fistp
(bad)
mov
mov
xchg
out
cli
mov
mov
aam
idiv
int
les
call
jmp
(bad)
mov
fcomp
sar
shl
int3
sub
out
fmul
into
xchg
pushf
fld
les
(bad)
mov
loope
lds
test
nop
retf
mov
popf
icebp
mov
xchg
aam
loop
repnz
repz
mov
enter
jmp
mov
test
xchg
not
mov
in
movs
int3
test
movs
stc
lods
loope
sbb
push
cmp
dec
cmp
push
pop
inc
cmp
jg
imul
cmp
jg
jle
pop
das
push
inc
add
push
jp
dec
and
ja
inc
add
pop
inc
push
dec
and
dec
aas
jg
push
adc
cmp
jle
jb
dec
sbb
pop
sbb
or
push
or
dec
pop
push
pop
inc
es
dec
push
push
xor
fdiv
idiv
jecxz
(bad)
scas
out
pop
lods
in
and
repnz
cmc
mov
mov
scas
jmp
stc
mov
enter
ret
mov
jmp
in
cli
mov
lock
pop
cmp
adc
jl
push
sub
adc
inc
push
ins
cs
pop
inc
adc
sub
pop
cmp
pop
sbb
inc
cmp
push
and
push
daa
addr16
add
pusha
sub
pop
sbb
sub
jg
push
cmp
inc
add
jns
jp
js
data16
and
aas
ins
and
sub
push
add
cmp
cmp
jb
inc
xor
js
push
adc
ins
sub
push
sub
dec
cmp
cmp
jb
pusha
add
sub
inc
push
cmp
or
or
sub
pop
pop
jo
jne
inc
or
inc
cmp
push
es
cmp
js
arpl
jo
pop
aaa
jnp
pusha
add
inc
cmp
outs
sub
pop
pop
and
pusha
daa
js
inc
cmovo
jb
fs
jl
dec
adc
mov
adc
pop
inc
and
dec
lock
mov
dec
mov
lahf
push
popa
scas
out
mov
pop
sbb
xlat
adc
mov
jbe
das
jg
(bad)
sbb
repnz
mov
jmp
xchg
into
das
leave
stos
not
test
or
sti
in
int
in
mov
sub
mov
pop
bound
inc
(bad)
mov
mov
enter
sbb
xchg
cld
aas
ret
inc
mov
mov
xchg
inc
add
add
adc
mov
lock
xchg
mov
test
or
jp
push
test
sbb
inc
call
mov
adc
push
pop
mov
add
jmp
push
jns
or
jmp
daa
loope
popf
xchg
cwde
fiadd
ret
pop
push
xor
sbb
sbb
mov
mov
call
mov
mov
mov
pop
mov
pop
fwait
sub
pop
jnp
test
jne
popf
rcr
repz
lods
shl
aam
nop
sbb
dec
or
jns
js
outs
add
bound
pop
adc
jle
bound
(bad)
ds
jle
jle
pop
sub
xor
pop
or
outs
push
dec
or
bound
inc
and
imul
imul
sub
push
cmp
jb
jae
push
es
cmp
jp
cdq
retf
cmps
rol
mov
stos
in
fdiv
and
dec
pop
pop
ds
push
adc
and
push
xor
outs
sub
jp
push
or
je
push
sbb
sub
bound
arpl
inc
ss
pop
sbb
imul
jno
outs
maxps
jg
pop
sbb
push
and
dec
or
js
pop
adc
push
jnp
jp
js
pop
sub
pop
adc
jle
ins
push
inc
sub
jno
inc
add
test
test
std
cmps
out
hlt
xchg
fdiv
sub
ins
sub
inc
add
push
js
push
dec
pop
pusha
and
add
inc
add
adc
gs
sub
inc
or
ins
sub
sub
add
dec
adc
push
or
gs
inc
add
mov
xchg
rcr
jmp
mov
mov
iret
(bad)
out
mov
(bad)
stc
xchg
out
std
add
movs
sti
mov
xchg
aad
out
mov
loope
stc
mov
xchg
out
xlat
mov
lahf
fistp
aad
cld
mov
std
nop
jecxz
icebp
test
(bad)
aam
mov
nop
hlt
mov
mov
iret
(bad)
icebp
stos
jmp
mov
mov
sahf
call
xchg
int
hlt
mov
rcr
xchg
(bad)
mov
cmp
shl
int
(bad)
xchg
cmps
call
stos
clc
mov
call
pushf
shl
into
sub
loopne
fimul
(bad)
loopne
xlat
xor
xchg
enter
lds
lds
hlt
mov
pushf
shl
test
hlt
cmps
in
out
out
ret
scas
fistp
out
retf
scas
not
ret
xchg
mov
hlt
xchg
xchg
stc
mov
hlt
mov
retf
and
leave
xchg
jecxz
ror
xchg
fcomp
int
out
lods
sbb
cs
adc
jae
popf
repnz
sbb
cmp
cmp
ins
dec
pop
inc
sbb
out
sbb
or
xchg
mov
mov
dec
repz
jmp
adc
sbb
jmp
pushf
imul
inc
mov
and
pusha
or
jns
push
mov
outs
add
aas
in
xor
or
mov
lds
stc
popf
ret
das
push
imul
mov
pop
sbb
pop
or
movs
loop
jl
fst
stos
push
pop
inc
mov
addr16
(bad)
xchg
movs
ins
xchg
aam
rol
jo
(bad)
cmp
out
xor
(bad)
sbb
icebp
cmp
push
out
push
outs
add
jns
push
int
pop
pop
sti
jecxz
int
jmp
or
lahf
clc
sub
scas
mov
lds
ins
sub
aaa
ja
jmp
and
sbb
in
fidiv
jecxz
shl
mov
mov
xchg
xlat
sahf
push
dec
or
adc
mov
pop
xchg
mov
mov
pop
ja
push
icebp
mov
jbe
shl
movq
cdq
inc
sbb
daa
jle
pop
arpl
lock
out
daa
(bad)
in
scas
jecxz
in
in
sti
mov
add
dec
and
inc
pop
push
ss
aas
push
push
push
sbb
pop
cmp
jno
push
jl
push
cmp
outs
or
pop
jle
pop
push
push
cmp
daa
addr16
inc
add
push
pop
pop
pop
addr16
ja
imul
pop
pop
outs
sub
jle
push
cmp
ins
add
or
jb
arpl
jno
inc
xor
das
jl
push
sbb
inc
or
add
gs
push
jg
dec
or
pop
aas
jb
push
push
dec
das
jle
pop
aas
jnp
jbe
outs
sub
jl
pop
sbb
push
dec
add
jl
fs
data16
inc
xor
sbb
sub
jg
push
cmp
pop
pop
jg
pop
sbb
push
pop
sbb
imul
and
jle
dec
push
outs
cmovs
dec
and
inc
xor
push
or
dec
add
popa
add
ror
(bad)
mov
xchg
pushf
rol
xchg
lock
loop
(bad)
test
sti
mov
fidiv
(bad)
xchg
not
lds
mov
(bad)
mov
lds
repnz
sahf
fsubr
fist
rol
icebp
mov
aam
in
jmp
stos
lock
stc
mov
icebp
pushf
out
stos
cmc
mov
rol
xchg
mul
in
int3
mov
(bad)
fstp
int
stc
mov
ror
cs
inc
xor
das
jl
push
sbb
inc
or
inc
add
push
pop
add
ss
adc
inc
pop
or
outs
xor
sbb
push
sbb
jno
pop
sbb
jo
data16
and
adc
add
pop
inc
push
dec
and
dec
aas
jle
push
pop
inc
add
enter
not
(bad)
mov
jmp
mov
call
add
lds
fild
retf
mov
int
hlt
test
in
cli
mov
icebp
mov
cmps
(bad)
mov
lods
loope
fisttp
stc
mov
stos
out
test
fwait
jmp
jmp
mov
les
shr
retf
mov
fwait
sti
mov
xchg
ror
cmc
mov
mov
iret
mov
cmps
in
in
or
mov
xchg
repnz
or
push
or
bound
dec
or
and
out
mov
imul
out
test
push
mov
mov
and
aam
jge
cli
out
loope
lods
fbld
sub
pop
bound
inc
(bad)
adc
scas
(bad)
shl
js
fsub
ins
cs
mov
cmps
jmp
jne
jge
imul
aad
mov
mov
and
out
cmp
int3
jmp
and
cwde
fst
mov
rcl
mov
(bad)
cs
in
push
outs
add
add
enter
not
jl
pop
fwait
jmp
jbe
shl
outs
sbb
out
mov
ja
jmp
movs
js
ds
adc
clc
jecxz
sar
xlat
mov
sub
mov
fwait
imul
jne
jle
or
sub
cmp
(bad)
sub
or
ret
inc
test
sahf
sahf
pop
ss
movs
jg
dec
lods
dec
sub
aad
jae
in
xor
ja
add
out
mov
and
mov
xor
movs
dec
adc
fwait
sti
mov
mov
mov
mov
sub
sbb
sub
or
mov
jb
int3
sahf
sahf
pusha
xor
cld
pop
pop
(bad)
pop
fwait
jmp
push
pop
push
je
push
adc
outs
xor
das
ins
pop
xor
push
and
push
adc
sub
inc
sbb
pusha
pop
adc
pop
adc
js
push
or
jnp
pop
adc
imul
sbb
jnp
pop
and
dec
push
jl
data16
je
jns
pop
push
inc
and
aaa
push
xor
xor
pop
outs
sub
jp
push
adc
cdq
leave
mov
fst
fdiv
out
sahf
clc
mov
loope
in
fisttp
int
in
pushf
fiadd
fisttp
rol
lods
in
lods
out
cld
mov
sti
mov
jmp
out
rol
push
test
mov
fidiv
xlat
xchg
not
sbb
jmp
fnstenv
in
mov
in
xor
in
sahf
fsubr
fist
rol
icebp
mov
lods
loope
iret
mov
lahf
push
repz
nop
fdiv
in
sahf
stc
mov
in
movs
sbb
je
push
sub
or
cdq
in
mov
fidivr
aad
in
(bad)
fstp
iret
mov
mov
pushf
fimul
mov
out
call
call
rcl
retf
fidivr
out
ror
mov
mov
xchg
fistp
movs
mov
mov
mov
fistp
shl
loop
loope
icebp
test
test
mov
xchg
mov
xchg
mul
in
into
mov
mov
out
not
in
adc
repnz
xlat
xchg
fisubr
shl
hlt
mov
(bad)
mov
xchg
aad
cld
mov
xchg
out
(bad)
add
shl
sbb
push
ins
sub
jns
push
xor
cmp
dec
and
dec
and
enter
ror
in
rol
stos
in
stos
loop
repz
xchg
leave
mov
(bad)
fwait
cmc
mov
aam
int
enter
fld
fadd
scas
out
mov
lahf
fidivr
push
imul
jno
push
sbb
cmp
daa
inc
push
push
sub
dec
aaa
pop
and
sub
aad
mov
ins
and
adc
aas
(bad)
xchg
aam
clc
mov
sub
cwde
hlt
inc
mov
cdq
sahf
pop
xor
add
adc
cwde
fstp
std
nop
in
dec
lahf
out
mov
add
inc
test
xchg
inc
mov
xchg
in
inc
xchg
fiadd
cmp
adc
(bad)
jle
es
sbb
or
inc
sti
cmp
mov
fadd
and
les
jl
xor
mov
mov
pop
repnz
fiadd
and
sub
scas
aam
movs
sbb
dec
jo
ss
push
xor
xchg
mov
std
mul
xchg
jl
fld
add
mov
add
or
out
scas
stos
imul
jne
xor
inc
xchg
inc
push
dec
mov
push
icebp
sub
shl
es
outs
sub
test
jnp
dec
xchg
mov
inc
adc
xor
cmp
cmps
hlt
xor
mov
aad
mov
or
js
pop
mov
adc
dec
sbb
xlat
sub
push
cmc
test
xor
jecxz
repz
imul
xor
adc
pop
neg
and
adc
ret
loope
fiadd
xor
or
popw
dec
ds
fild
retf
mov
cmps
clc
lahf
fcomp
jecxz
enter
mov
movs
in
xchg
mov
mov
cmps
(bad)
fstp
and
inc
xor
push
push
jbe
jge
cmp
inc
and
je
outs
sbb
sub
xor
fdiv
int3
mov
out
stos
loopne
lock
in
mov
loopne
in
aad
cli
fwait
sti
mov
out
lds
fstp
(bad)
cmps
div
call
int3
mov
stos
sti
mov
cmc
mov
aad
aam
dec
ror
dec
and
pop
sbb
inc
sbb
push
or
adc
inc
add
pop
cmp
or
ins
push
pop
add
inc
sbb
dec
sub
or
cmp
sub
das
push
cmp
jle
popa
and
data16
push
add
inc
add
or
inc
sbb
push
or
push
xor
inc
and
sub
das
push
cmp
jle
popa
and
data16
push
add
inc
add
or
inc
sbb
pop
add
push
xor
adc
and
xor
aaa
jo
jg
gs
push
dec
xor
jnp
pop
pop
jno
jne
inc
adc
push
or
pusha
adc
jb
inc
sbb
cmovl
pusha
or
push
xor
inc
and
jg
or
push
adc
xor
dec
sbb
aas
pop
sbb
jnp
dec
pop
data16
push
add
sub
add
imul
pop
jbe
ins
adc
jge
gs
or
outs
aaa
push
cmp
xor
push
sub
ds
push
cmp
inc
add
inc
add
dec
xor
bound
jne
dec
pop
pusha
and
pop
cmovg
dec
or
pop
push
js
inc
xor
je
dec
add
pop
or
dec
or
ins
sbb
push
jbe
js
fwait
enter
enter
repnz
fmul
jmp
ror
sti
xchg
ficomp
test
mov
(bad)
cmps
xlat
mov
cmps
out
in
add
xchg
stc
mov
cli
mov
mov
xchg
retf
mov
retf
mov
dec
pusha
push
adc
xor
int
mov
xor
call
fld
mov
mov
sbb
sub
cmp
lds
mov
pop
and
fst
mov
inc
adc
in
cmp
xor
mov
outs
add
std
mov
rcl
lods
out
je
push
sbb
movs
sub
lea
call
ins
xor
ds
ror
or
jns
out
jns
leave
inc
mov
and
sbb
mov
jmp
xor
cld
repnz
aam
mov
dec
scas
push
push
xor
std
mov
ins
lahf
fild
sub
lock
mov
lahf
fsub
add
aam
pusha
imul
cmc
xor
call
adc
sbb
mov
adc
xor
cli
or
adc
shl
push
or
in
sub
xchg
frstor
lds
fld
push
push
es
ds
xor
test
and
and
imul
push
jecxz
pop
out
mov
iret
xchg
jle
loop
popf
outs
sub
cmps
gs
js
pop
mov
push
sub
add
std
daa
push
adc
rcl
frstor
sbb
sbb
leave
lods
int3
pop
mov
lods
outs
fild
test
ins
add
xor
cmp
pusha
xor
popw
push
daa
jle
pusha
and
push
or
sub
fs
imul
pop
push
adc
jnp
cdq
cli
lods
loopne
sbb
pop
xor
ins
adc
pop
adc
push
sbb
bound
jb
ja
je
pop
and
fst
cld
mov
lods
rcl
mov
(bad)
xchg
out
hlt
fcomp
retf
xchg
cmc
fstp
fidiv
in
rcl
stc
stos
in
test
nop
aad
int
int3
mov
into
mov
fstp
and
ja
inc
add
push
inc
pop
dec
and
dec
xor
and
push
sbb
cmp
inc
push
push
sub
dec
cmp
jge
das
popa
adc
jb
dec
push
inc
adc
push
cdq
ficomp
xlat
cmps
in
rol
pushf
fiadd
div
in
iret
(bad)
jmp
(bad)
scas
loopne
sti
fwait
retf
mov
mov
dec
add
add
dec
sub
xor
pusha
movd
pusha
adc
jge
bound
inc
setns
mov
lods
(bad)
mov
hlt
fwait
jmp
mov
mov
or
inc
and
and
push
pop
sub
pusha
and
dec
adc
cmp
ja
push
and
or
pop
sbb
dec
add
push
xor
inc
or
(bad)
mov
scas
cld
mov
popf
idiv
int3
mov
in
lahf
fiadd
clc
lods
out
mov
stos
out
(bad)
lahf
rol
pop
and
retf
mov
popf
icebp
mov
xchg
xlat
mov
mov
mov
scas
jmp
xor
loope
repz
fild
add
inc
add
adc
add
xchg
push
add
mov
mov
inc
scas
nop
sahf
dec
cmp
mov
push
xchg
popa
int
in
cmp
ret
inc
fadd
sub
cmp
mov
(bad)
adc
jmp
dec
mov
cld
pop
cmps
sahf
call
cmps
ja
sar
lds
test
data16
xor
pop
cmps
ins
cs
fldcw
sbb
pop
test
(bad)
cmp
add
add
mov
jl
and
mov
push
push
scas
mov
ds
cmp
and
jae
popf
pusha
mov
out
lods
adc
add
adc
das
add
pop
adc
cmp
pop
clc
cmp
pop
retf
add
in
sti
or
sahf
js
ins
loop
lods
call
mov
data16
inc
out
xchg
(bad)
mov
popf
mov
pushf
mov
rol
scas
stos
mov
mov
mov
ja
xchg
cwde
popf
dec
mov
outs
int3
sub
pop
mov
daa
(bad)
dec
mov
rol
(bad)
pop
stos
mov
xor
out
jp
inc
adc
dec
lods
nop
je
xchg
mov
mov
mov
lods
jp
popa
aam
repz
mov
xchg
call
gs
daa
or
sbb
ins
fbld
out
pop
fldcw
push
jmp
jbe
push
aad
adc
mov
mov
aad
push
rol
add
sbb
das
adc
pop
mov
cmp
sbb
aas
jo
sub
dec
movs
je
arpl
add
test
dec
cmp
cmp
repz
fistp
jmp
test
add
push
mov
xor
add
dec
repz
cmps
push
rol
or
mov
stos
(bad)
fstp
add
inc
into
cmp
pop
cli
mov
loopne
imul
jae
outs
fstp
adc
icebp
push
adc
ss
inc
movs
imul
inc
cld
jnp
and
inc
int3
jae
pop
jmp
jmp
pop
ret
bound
(bad)
cmp
xchg
xor
push
mov
mov
cli
pop
not
pop
mov
jae
xchg
inc
mov
aad
retf
dec
mov
mov
aad
mov
dec
(bad)
das
sbb
add
stos
xchg
mov
mov
adc
push
mov
xchg
pop
xchg
pop
fmul
jb
jne
add
call
iret
dec
ror
inc
shr
push
cld
cwde
popa
aad
or
call
fwait
imul
call
out
sub
repnz
into
pop
or
pop
(bad)
xchg
jae
call
popa
aam
test
call
push
mov
xor
lock
into
cmp
movs
jno
add
pop
cmp
shr
pextrw
daa
loope
jmp
mov
shr
and
push
sbb
sbb
push
xchg
mov
mov
or
loop
mov
retf
stc
xor
sbb
and
mov
mov
inc
mov
test
jmp
cs
push
mov
pusha
fimul
push
mov
and
aaa
loop
fmul
ror
dec
or
test
ret
and
push
mov
call
jb
pop
or
and
mov
mov
mov
lahf
mov
aas
in
(bad)
fbstp
mov
sbb
out
or
cmp
cmp
pop
mov
push
dec
mov
mov
popf
data16
shl
daa
shl
in
push
xlat
xor
hlt
push
lods
aad
ror
pop
out
push
mov
mov
fsub
sbb
and
cmc
mul
push
in
out
push
mov
mov
in
in
xchg
xchg
test
xor
pop
movs
aam
in
or
push
mov
arpl
add
jge
sub
and
pusha
test
jno
arpl
and
mov
xor
push
mov
adc
add
and
stc
pop
mov
daa
loop
mov
mov
inc
mov
dec
test
mov
retf
xchg
jno
xchg
xchg
jle
addr16
and
and
inc
ror
pusha
jmp
mov
push
test
pop
cmps
scas
cdq
lahf
inc
sar
mov
cmp
sub
pop
fild
adc
into
cmp
pop
int
jmp
sbb
ret
pop
mov
scas
mov
shl
sub
out
pop
mov
leave
es
nop
mov
jo
je
inc
shl
or
xchg
jae
mov
hlt
pop
sbb
cmc
add
cmp
push
in
or
inc
mov
pushf
jl
pushf
dec
cmps
xchg
xchg
jns
retf
pop
sar
retf
push
mov
pop
hlt
pop
push
loopne
stos
xchg
pushf
outs
fldenv
adc
push
mov
jl
add
into
pop
retf
aaa
adc
enter
retf
push
mov
in
or
cdq
sahf
xchg
lahf
inc
xchg
es
rcl
sub
add
aas
(bad)
sub
ret
and
mov
lahf
test
sar
in
add
xor
shl
test
arpl
push
jge
cmp
sbb
and
pop
fsub
std
dec
or
and
idiv
cwde
dec
mov
mov
cmp
xor
push
push
sbb
and
dec
xchg
inc
movs
stos
cmp
dec
fidivr
(bad)
add
cmp
push
out
mov
(bad)
imul
lods
stos
jbe
sub
out
test
xchg
lea
sub
pop
int
pop
(bad)
push
stos
imul
add
inc
mov
sub
pop
std
push
sti
and
and
ror
call
adc
mov
popa
into
sub
pop
xchg
add
outs
fiadd
leave
and
sbb
jno
and
lahf
test
cmps
sbb
add
dec
fld
out
adc
jno
jg
xchg
js
lods
mov
sahf
push
ret
dec
mov
lods
lods
outs
fisubr
or
xor
sbb
cmp
inc
mov
stos
mov
cwde
call
mov
(bad)
aas
in
loopne
xchg
xor
mov
and
and
lds
loop
mov
push
gs
cld
cmp
xor
push
lods
dec
test
inc
stos
dec
sar
or
add
pop
(bad)
jns
imul
add
repz
aam
in
mov
xchg
inc
fadd
sbb
xchg
inc
mov
or
adc
test
mov
mov
fimul
call
arpl
sub
xchg
sahf
inc
les
std
pop
iret
push
movs
fwait
dec
iret
pop
test
dec
scas
call
ror
into
ss
pop
retf
lods
retfw
push
cmp
mov
pushf
push
and
in
loopne
mov
mov
or
lock
inc
rol
lds
wbinvd
inc
inc
movs
mov
gs
sub
mov
shl
ror
scas
pushf
xchg
gs
pop
sbb
pop
mov
call
sub
cmp
or
daa
cmp
(bad)
aaa
or
mul
out
pop
mov
jb
mov
imul
loop
scas
mov
add
xor
dec
aam
jmp
sbb
and
daa
or
adc
cmc
cmp
sbb
cmp
inc
and
xchg
mov
sbb
adc
inc
rol
neg
inc
mov
in
push
inc
mov
ja
je
jne
or
les
lock
xchg
inc
mov
pop
scas
popf
xlat
pop
shl
jns
cs
push
adc
add
pop
les
adc
add
jg
data16
loop
(bad)
sub
jnp
xchg
js
push
gs
mov
jno
js
or
xor
inc
mov
ss
aas
div
jmp
xlat
pop
(bad)
mov
inc
scas
data16
inc
ret
and
mov
push
add
xor
stc
pop
sbb
lds
mov
push
dec
or
pop
mov
sbb
xor
retf
cmp
(bad)
dec
mov
xchg
dec
mov
fimul
sbb
add
pop
mov
inc
mov
xchg
inc
sar
loop
adc
in
xor
iret
ds
push
mov
sti
jno
ss
out
jnp
nop
cmovo
push
add
cmp
and
and
and
jecxz
pop
repnz
lods
aam
shr
clc
cmp
dec
leave
dec
lods
cdq
popa
mov
jno
loop
stos
lods
nop
imul
retf
xor
or
mov
es
stc
dec
mov
mov
std
push
ret
imul
adc
push
cmp
lahf
inc
rcr
jo
imul
pop
movs
xchg
mov
dec
mov
fs
cmp
push
adc
inc
ret
lea
jmp
inc
retf
add
add
pop
retf
xor
sub
movs
mov
inc
lds
shl
add
daa
loop
add
mov
arpl
push
mov
aad
sub
daa
loope
cwde
fs
pusha
cmps
imul
clc
pop
pop
lods
mov
jb
pop
or
lock
ins
lods
call
stos
lods
sbb
js
inc
mov
jle
pop
mov
lods
fs
or
std
and
sar
jns
mov
push
(bad)
mov
js
mov
(bad)
adc
or
aaa
adc
dec
xchg
out
push
(bad)
cmp
cmp
pop
clc
add
or
sub
pop
(bad)
cmp
inc
mov
cwde
inc
add
repz
adc
push
sar
or
adc
sub
inc
aad
loopne
mov
adc
dec
stos
sbb
sar
sub
pop
or
test
or
frstor
in
div
(bad)
aas
out
jo
jbe
and
xchg
xor
jg
push
(bad)
pushf
outs
fisttp
cld
(bad)
stc
pop
(bad)
xor
ins
shl
add
syscall
icebp
pop
mov
cmc
pop
fldcw
adc
jno
push
ror
ins
aas
or
pop
mov
call
lods
jns
mov
and
inc
into
shr
loop
adc
cmp
cmp
or
cmp
call
aas
jmp
add
pop
or
clc
pop
cmps
jae
pop
or
jo
add
and
mov
mov
fld
push
leave
push
and
push
adc
fisttp
push
cli
ds
push
mov
or
xchg
aam
jmp
sti
adc
cmp
xchg
inc
fstp
out
loop
iret
sub
sbb
sub
loope
imul
test
mov
xchg
xchg
jno
mov
push
lods
fist
sub
jge
or
add
pop
ficomp
popf
push
push
aam
adc
(bad)
adc
add
fwait
push
repnz
hlt
cs
xchg
inc
(bad)
adc
mov
ja
and
lds
arpl
ss
mov
mov
ficomp
imul
dec
mov
loopne
movs
mov
fisub
int
sbb
pop
fimul
jmp
pop
sbb
cmp
jb
xor
add
cmp
stc
es
and
push
add
fistp
or
mov
sub
pushf
push
xor
pop
lods
jp
adc
xor
push
mov
ins
xor
lock
movs
fs
les
enter
stos
mov
(bad)
push
cmp
cmc
push
mov
cld
pop
mov
or
aaa
in
scas
jle
(bad)
cmp
daa
into
xor
jnp
jp
es
xchg
mov
jns
nop
jg
pusha
retf
jg
push
sbb
es
mov
wbinvd
leave
jl
push
or
pop
in
and
ror
or
cmp
daa
cs
dec
mov
mov
xchg
jnp
pushf
inc
sar
push
mov
leave
cmp
pop
mov
les
sbb
call
js
js
xchg
popf
dec
nop
imul
adc
lods
mov
jae
popa
mov
push
hlt
cmp
sub
fwait
fwait
jp
cmp
in
cmps
gs
ins
aam
in
push
cmp
adc
sub
jmp
loop
jge
push
pop
mov
jp
sahf
push
lods
xchg
call
fiadd
aas
stc
mov
scas
cdq
(bad)
enter
shr
fidiv
lods
jnp
popf
imul
(bad)
out
mov
push
(bad)
lahf
imul
or
aas
sbb
rcl
popa
fiadd
lods
popf
inc
enter
or
pop
mov
pushf
xlat
add
and
dec
xlat
jno
psrad
inc
sar
shl
sbb
push
fdiv
out
enter
int3
sub
or
or
ret
repz
test
jo
out
out
push
mov
fcom
push
not
(bad)
xchg
(bad)
int
pushf
push
push
retf
sub
add
pop
sti
mov
aam
pop
sti
or
xor
nop
pop
add
into
dec
std
and
jo
icebp
jnp
js
mov
adc
push
lds
imul
cld
adc
sti
inc
lods
cwde
bound
pop
push
retf
cmp
pop
adc
and
push
adc
xor
cmp
out
dec
int3
adc
and
inc
mov
pushf
add
and
rcr
cmps
xchg
mov
push
adc
sbb
aas
out
jl
mov
inc
mov
add
add
lds
clc
mov
outs
mov
mov
mov
mov
adc
in
and
cs
add
retf
test
and
add
pop
lds
ins
(bad)
ss
pop
mov
push
aam
sbb
out
cmp
paddsw
jge
jnp
imul
scas
inc
mov
mov
jne
sub
pop
scas
ins
mov
pop
mov
xor
pop
test
pop
scas
popf
cdq
jae
xchg
arpl
sub
das
dec
mov
inc
test
fbld
jecxz
pop
push
into
pop
mov
cmps
xchg
xor
das
ins
iret
xor
dec
stos
pushf
fwait
inc
mov
inc
mov
movs
jb
add
(bad)
mov
ss
and
dec
enter
outs
fiadd
sbb
xlat
js
test
das
push
in
jbe
cmp
or
daa
sbb
add
inc
rol
jb
das
out
mov
mov
das
aaa
clc
cmp
mov
ins
(bad)
xor
inc
sbb
leave
aaa
(bad)
jb
aaa
sbb
push
cmc
and
mov
loop
mov
bound
icebp
pop
fst
jb
mov
stos
test
pop
push
push
repnz
xor
pop
in
inc
repnz
loope
into
xor
inc
mov
iret
and
sub
out
cmp
push
cmp
mov
inc
(bad)
jmp
add
ror
mov
movs
cwde
jnp
push
(bad)
push
stc
adc
xor
and
pop
into
jp
les
repnz
call
sub
adc
dec
cmps
xchg
jns
arpl
ss
pop
je
dec
repnz
lods
jb
push
ins
ret
inc
clc
push
fcomp
lahf
pusha
aam
jmp
stc
pop
mov
ss
dec
test
les
(bad)
cmp
xor
lahf
mov
cdq
xlat
inc
cmps
inc
movs
mov
push
loope
mov
adc
push
mov
loope
hlt
pop
mov
pusha
int3
pop
mov
adc
mul
out
push
lock
in
ja
gs
push
sahf
push
ins
adc
xor
cmp
sub
sbb
adc
and
test
or
cmp
dec
xlat
daa
jmp
lahf
dec
test
sub
cmp
xor
jno
inc
lea
pop
mov
mov
shl
out
cmps
fwait
popf
xchg
mov
pop
out
sbb
das
(bad)
ss
push
fmul
pushf
data16
xchg
ins
int3
cmp
pop
push
ret
sub
and
xor
neg
arpl
in
and
out
cli
and
cmp
jmp
in
sub
push
or
ror
out
(bad)
push
fbld
std
pop
mov
jo
ins
add
or
pop
fisttp
push
test
mov
fistp
adc
pop
fnstcw
xchg
and
scas
mov
and
daa
pusha
int
mov
stc
push
mov
xor
and
div
push
cmps
mov
inc
lods
out
aas
adc
inc
mov
sti
add
xor
sbb
mov
push
fstp
fild
pop
mov
rol
outs
fisub
adc
mov
fidiv
fwait
xchg
dec
cmp
mov
retf
std
pop
movs
sahf
ja
jnp
add
push
mov
outs
(bad)
xor
or
ds
pop
mov
and
in
cmp
mov
in
mov
sbb
push
fimul
jno
inc
mov
add
daa
push
adc
movs
cdq
mov
xchg
dec
iret
pop
pop
loope
call
inc
aad
adc
sub
fsub
or
sub
jae
cmp
out
mov
cmps
cdq
imul
cmps
mov
xor
adc
xchg
push
test
or
inc
into
cmp
jo
jle
sti
es
sbb
jns
sub
pop
(bad)
das
pop
mul
push
(bad)
push
fimul
dec
rcr
or
pop
retf
or
jb
je
arpl
sbb
pop
fisub
(bad)
mov
cwde
ins
mov
xchg
imul
pop
pop
cli
cmp
(bad)
cmp
jne
inc
mov
jp
push
retf
sub
lock
push
mov
pop
hlt
adc
retf
mov
xlat
cmp
cli
push
cli
cmp
rol
adc
inc
(bad)
push
mov
(bad)
das
clc
mov
call
sbb
push
lods
pushf
dec
aad
mov
fsub
les
repnz
xchg
dec
pop
or
fmul
push
xchg
sub
stos
fstp
addr16
mov
adc
cld
sub
rol
lock
stos
fldenv
repnz
call
jae
fs
adc
cmp
pop
mov
test
aad
jecxz
lods
mov
xor
call
adc
sub
inc
xlat
xor
push
in
popa
aad
(bad)
xor
scas
sbb
inc
int3
dec
mov
mov
jae
mov
sbb
mov
mov
adc
jbe
cmp
popf
jbe
inc
sub
pop
lods
dec
xchg
call
aam
sbb
pop
mov
pushf
xchg
jns
sahf
dec
xor
std
dec
mov
mov
xchg
nop
jae
cmp
push
mov
xor
push
or
adc
iret
dec
clc
es
mov
loopne
popa
rcr
push
or
imul
mov
outs
mov
mov
outs
and
pop
mov
stos
in
outs
ret
push
shl
retf
mov
dec
lods
outs
mov
dec
fstp
sti
and
pop
inc
movs
pushf
push
and
daa
or
xlat
inc
mov
jno
jle
mov
mov
iret
pop
stos
mov
sar
(bad)
popf
jae
sub
cmp
cmp
add
repnz
shr
int
push
lock
retf
dec
mov
xor
aas
pop
retf
xchg
jno
inc
xlat
pop
mov
stos
inc
(bad)
js
pop
sbb
xchg
mov
jle
mov
cmp
es
psubsw
and
les
mov
fnstsw
cli
or
je
pop
(bad)
or
outs
sti
xor
clc
push
mov
xchg
outs
rol
stc
or
dec
mov
and
pop
or
not
mov
mul
clc
add
(bad)
and
add
xor
add
cmp
sbb
mov
sub
add
jle
dec
(bad)
jbe
jne
cmps
stos
mov
dec
stos
cdq
inc
fsub
pop
int
mov
int3
jne
pop
mov
(bad)
or
test
lea
jecxz
mov
fdiv
adc
add
pop
sar
mov
ror
jp
jne
jp
movs
ja
adc
xor
je
sub
mov
mov
inc
mov
dec
stos
dec
mov
arpl
daa
push
repnz
and
pop
fisttp
call
mov
dec
or
sub
dec
aad
pop
jmp
ficomp
test
arpl
pop
les
xadd
pusha
scas
js
fisub
(bad)
ss
push
retf
add
pop
shl
into
xor
js
pop
fsubr
mov
fmul
mov
push
mov
data16
test
mov
fmul
add
xchg
push
add
sub
arpl
push
dec
xchg
outs
(bad)
adc
jmp
lock
push
je
add
mov
inc
xchg
push
aas
sub
shl
dec
in
jmp
pushf
add
out
nop
push
fs
sbb
push
adc
cli
test
jle
idiv
sub
jno
push
je
call
mov
jecxz
std
and
call
rol
mov
jg
xchg
or
pusha
inc
fild
ins
das
mov
neg
pop
mov
sbb
ret
cli
hlt
gs
ja
scas
ss
out
cmp
mov
cmp
sub
pop
out
push
ja
jb
sbb
cli
dec
cmp
rcl
xor
ret
fstp
int
pop
sub
inc
pop
sar
int3
icebp
jle
inc
retf
nop
cmp
nop
push
xchg
mov
pop
js
out
sbb
imul
xchg
push
retf
fsub
adc
icebp
dec
mov
xchg
and
pusha
fld
cs
push
xchg
mov
inc
mov
xor
js
add
sahf
sbb
add
(bad)
inc
mov
nop
cmp
mov
inc
popa
mov
es
and
cld
mov
pop
leave
jge
push
aam
lahf
mov
cmp
fild
xchg
mov
loop
sub
pop
push
and
cdq
pop
mov
jmp
dec
gs
inc
cmp
loopne
icebp
sub
sahf
pop
adc
jne
pop
mov
je
xchg
ret
mov
call
cmp
mov
sbb
adc
inc
push
mov
mov
fidiv
pop
or
jbe
mov
aas
(bad)
gs
dec
xchg
mov
fs
mov
in
mov
dec
and
mov
es
test
pop
shl
sbb
sbb
xlat
xchg
int
fwait
pop
retf
push
xchg
mov
repnz
pop
outs
stc
fst
push
sar
retf
(bad)
int
cs
jge
sbb
outs
xor
dec
(bad)
sar
add
jge
in
arpl
imul
jno
add
fs
or
jns
mov
adc
je
mov
xor
addr16
cmp
sahf
test
addr16
sub
clc
aaa
imul
dec
xchg
mov
cmps
push
mov
sub
pusha
hlt
rcl
stc
loop
stos
xor
adc
mov
call
daa
lods
cs
xor
pop
js
inc
inc
(bad)
mov
jg
rcr
jo
inc
inc
ret
mov
and
sbb
movs
aaa
popa
inc
(bad)
retf
arpl
ins
push
cld
jnp
xor
cmp
aad
xchg
mov
sbb
stc
xchg
xor
test
adc
jle
(bad)
retf
jmp
mov
imul
rol
adc
or
fs
rol
pop
movs
(bad)
pushf
xlat
pop
rcl
icebp
cmp
mov
sbb
adc
mov
mov
fiadd
stos
push
in
dec
mov
clc
movs
movs
mov
jo
pop
outs
icebp
outs
aas
cmc
pop
into
push
ins
push
cwde
mov
sub
mov
add
mov
cmps
jno
loop
repnz
sub
adc
imul
stos
sub
test
ins
bound
inc
leave
mov
push
and
call
ss
ins
test
inc
add
jae
cmps
pop
popa
int3
push
or
adc
xor
push
pop
cmps
add
pop
int
in
leave
dec
std
icebp
cwde
jno
and
es
mov
movs
push
sbb
sbb
cmc
cmp
jb
or
lods
sti
out
xor
mov
push
cmp
cmps
loopne
rol
sbb
imul
inc
jp
mov
pop
push
push
cmp
outs
inc
xchg
(bad)
xor
fisttp
xor
repz
iret
sbb
leave
icebp
test
(bad)
les
stos
mov
mov
mov
adc
mov
cld
jle
(bad)
call
mov
dec
inc
jmp
fnsetpm(287
daa
leave
(bad)
test
dec
fcom
rol
push
sar
iret
(bad)
call
jnp
test
dec
mov
fisttp
(bad)
into
push
mov
cld
jge
dec
(bad)
xchg
jbe
popa
std
(bad)
pop
lods
add
(bad)
call
repz
iret
pop
cmp
cvtdq2ps
push
popa
fmul
aad
jecxz
outs
popf
dec
test
(bad)
xchg
pop
add
xor
fdivr
fld1
lods
push
movs
in
(bad)
aad
mov
test
jmp
jbe
stc
bound
jecxz
mov
lds
add
pop
xor
dec
sub
dec
dec
neg
dec
into
int3
fwait
add
jle
sub
rcl
sbb
push
retf
sbb
cmp
movs
shr
ja
xlat
dec
in
outs
dec
cli
or
rcr
out
add
ss
into
jb
jmp
push
mov
or
push
dec
jp
xchg
push
aaa
and
ins
add
inc
popf
ins
jg
fwait
lahf
mov
icebp
dec
dec
sub
call
arpl
xchg
sbb
pusha
and
mov
dec
rol
icebp
fild
push
xor
add
add
sahf
in
movs
lock
mov
jb
dec
xlat
lods
scas
mov
inc
out
mov
push
movs
adc
dec
add
xor
int3
call
leave
iret
aam
mov
lea
jg
jo
xchg
fwait
cs
jg
loope
push
cli
loopne
or
and
stos
inc
retf
lock
xchg
out
sbb
xor
mov
push
add
gs
dec
addr16
frstor
hlt
xchg
sbb
fidiv
xchg
jecxz
dec
mov
arpl
mov
fldcw
int3
popa
dec
retf
push
push
xchg
fiadd
dec
and
les
fcmovnu
or
out
push
pop
pop
lahf
push
and
int3
je
ret
ror
hlt
scas
mov
cs
xor
ss
mov
xchg
in
in
popf
mov
add
fnstenv
in
sub
xor
adc
xor
into
out
jo
ja
into
icebp
fwait
mov
mov
xchg
fcom
sahf
adc
rcl
cs
retf
repnz
add
sub
hlt
aad
jae
xchg
cs
in
cmps
mov
stos
test
cmp
push
(bad)
xchg
dec
test
mov
cmp
iret
(bad)
cmps
sub
pushf
dec
jnp
stos
fdivr
add
cli
es
sbb
adc
popa
inc
jge
fs
or
fsubr
arpl
pop
mul
cwde
inc
cmp
das
mov
sbb
pop
jecxz
mov
mov
push
test
test
ret
xchg
jl
mov
idiv
sbb
data16
cmp
push
fldcw
ror
mov
imul
pop
sbb
add
rol
je
add
xor
out
ret
mov
xchg
in
and
lea
std
cdq
retf
sbb
pop
jno
jae
jmp
xchg
or
adc
inc
cmp
call
cmp
das
adc
mov
jo
test
xchg
fcomp
pushf
shl
inc
cmp
int
push
bound
sbb
imul
xchg
jno
nop
in
adc
ds
call
jg
ror
push
clc
ret
js
fisttp
or
add
xor
cmps
dec
adc
or
pop
xor
data16
jecxz
or
in
xchg
rcr
pop
sahf
es
sbb
inc
xchg
mov
popa
inc
sbb
push
repz
push
in
(bad)
cmp
pop
aam
iret
xor
imul
stos
dec
dec
mov
sub
jno
jo
int3
mov
pop
hlt
outs
sar
or
lea
ret
xor
arpl
and
stc
dec
sub
lahf
pushf
pop
and
aam
pushf
mov
adc
fisubr
icebp
xor
loopne
loopne
jle
call
maxps
repz
mov
nop
sub
or
test
imul
stos
repz
(bad)
jb
xor
cmp
mov
and
pop
add
(bad)
pop
in
enter
jge
mov
jp
test
mov
movs
mov
push
icebp
repnz
rcl
dec
inc
adc
movs
ds
mov
mov
addr16
jae
lea
ss
and
gs
jns
mov
jne
std
sub
cmc
jo
and
xchg
push
outs
ds
mov
cmp
push
dec
mov
pushf
adc
mov
fisttp
pushf
add
inc
adc
(bad)
mov
data16
std
jecxz
inc
sub
mov
je
xor
xchg
movs
scas
ja
push
push
call
push
add
in
push
adc
inc
cmp
pop
cmp
adc
cmp
cli
rol
mov
aam
aam
jne
popa
cmp
outs
icebp
mov
jg
cmp
test
sbb
js
stos
push
or
push
int3
adc
lods
mov
and
pop
aas
mov
clc
push
movs
cwde
push
inc
mov
inc
mov
mov
addr16
clc
daa
push
xchg
mov
mov
adc
test
ins
retf
fistp
dec
adc
pusha
pop
outs
adc
xchg
fisttp
push
and
movs
test
or
add
ins
pop
ret
mov
sub
jb
push
out
addr16
pop
mov
rcr
(bad)
add
daa
inc
xor
xchg
dec
mov
inc
xchg
jo
dec
add
inc
(bad)
cdq
jno
dec
call
adc
mov
inc
jbe
test
mov
mov
cli
imul
push
mov
dec
popa
jnp
rcl
jl
xchg
ret
cmp
sbb
fild
mov
in
out
inc
pop
xchg
and
lea
popa
jecxz
mov
pop
mov
xchg
sahf
push
jmp
dec
int
or
sahf
or
ret
ds
push
test
mov
jge
push
(bad)
mov
push
mov
sub
adc
push
out
sti
retf
mov
scas
aaa
cmp
das
push
lods
mov
push
jae
aas
fcomi
mul
cdq
jecxz
stos
mov
aas
imul
jl
aam
inc
out
sub
push
push
sub
pop
jno
dec
xchg
(bad)
fild
push
pop
push
cdq
cmp
mov
ret
fcmovu
fld
pop
adc
dec
loop
jl
test
jecxz
dec
rol
xchg
xor
sub
mov
inc
mov
pusha
jle
mov
out
or
in
aaa
push
mov
push
sub
push
jno
in
jb
jle
leave
cli
or
push
or
sub
test
pop
inc
shr
jle
mov
jl
movs
push
or
lahf
jecxz
and
arpl
lds
xor
xor
adc
xor
out
sti
push
mov
xchg
cmp
into
inc
add
ret
jmp
in
adc
xor
jge
aam
xchg
scas
adc
fidivr
ja
push
pop
sar
(bad)
inc
out
sub
jbe
sub
test
mov
jbe
sbb
iret
popf
pop
xor
fwait
jg
je
ss
cdq
sub
xchg
lods
int3
clc
xor
pop
retf
mov
cmp
in
dec
xlat
sbb
push
xor
cmc
add
lods
jbe
mov
fmul
scas
jl
cmc
test
nop
icebp
jb
sub
scas
out
mov
movlps
inc
mov
loopne
push
push
out
mov
jle
dec
xchg
pop
ins
push
outs
call
aaa
sbb
jae
sbb
and
daa
or
mov
cvttps2pi
mov
or
dec
xchg
xchg
jb
in
fwait
scas
dec
lock
pushf
mov
fcomp
push
or
lods
jo
dec
xor
adc
or
sbb
jnp
into
jmp
sub
cmp
sub
stos
cmp
in
fild
push
(bad)
cwde
adc
int
fistp
std
xor
imul
lds
xchg
adc
xchg
dec
dec
cwde
dec
mov
push
leave
ror
xchg
inc
aad
outs
or
imul
lahf
hlt
xchg
shr
jbe
je
lahf
lods
pop
retf
mov
mov
sub
mov
out
fisttp
and
cmp
fbld
adc
dec
dec
mov
inc
int
xchg
retf
inc
pop
rol
and
(bad)
jge
sbb
rcl
nop
jne
mov
ins
pusha
sbb
mov
inc
leave
test
shr
add
cwde
and
rol
adc
lods
mov
sub
ja
or
dec
(bad)
push
cmp
jnp
fld
dec
cmp
pop
pop
aaa
test
pop
data16
push
test
add
das
(bad)
jnp
push
and
std
sub
inc
jno
cdq
push
cmps
adc
ret
dec
xor
stos
scas
jmp
cdq
mov
and
fisubr
mov
add
xor
scas
mov
jo
mov
adc
cs
mov
adc
mov
je
or
rol
sub
test
mov
push
xor
je
and
fcom
inc
mov
loope
and
xchg
loope
sub
scas
sub
ficomp
sahf
push
and
mov
mov
jmp
mov
and
push
ss
fidiv
lods
mov
leave
inc
and
lahf
jno
push
inc
and
xor
fisttp
cli
pop
imul
jns
xchg
inc
hlt
xor
push
inc
adc
jmp
aad
aas
mov
lds
mov
xchg
xlat
(bad)
imul
cmps
cmp
call
cli
popa
call
pop
push
lock
or
xor
outs
fsubp
(bad)
stc
jmp
mov
jge
cmps
nop
addr16
mov
xor
sbb
sub
jecxz
mov
icebp
jns
or
loopne
and
xchg
cmp
sub
push
adc
dec
dec
jle
call
xlat
call
pop
push
xchg
mov
mov
add
pop
or
fimul
je
xlat
fisttp
retf
(bad)
jl
test
or
out
fst
lds
call
mov
and
adc
cmp
and
push
out
jnp
les
cmp
dec
inc
and
jg
dec
retf
add
xchg
add
movs
call
jae
dec
pop
and
cmp
dec
sub
sub
cmp
ds
xchg
cmp
xchg
frndint
xchg
pop
inc
in
sbb
std
sahf
test
cld
ror
jge
(bad)
mov
xchg
xor
mov
inc
icebp
jbe
xor
inc
xor
cs
jae
icebp
pop
xor
outs
ins
xor
lahf
loopne
push
cmp
push
mov
loope
mov
fwait
sub
cmps
cmp
ret
mov
ins
cmp
out
(bad)
jno
push
test
or
add
retf
mov
xchg
(bad)
jge
sub
int
mov
das
xchg
mov
imul
enter
xor
mov
adc
jno
repz
in
mov
inc
add
lea
mov
mov
and
mov
adc
pop
jno
push
(bad)
and
sub
mov
sub
jmp
and
pop
imul
add
push
cwde
dec
mov
xchg
std
dec
(bad)
(bad)
dec
das
neg
mov
loop
add
pop
retf
aaa
retf
shr
cmp
call
dec
adc
lock
lods
test
inc
lods
das
int3
shr
pop
dec
add
ror
gs
shr
jp
sub
das
push
pop
aam
adc
fisttp
fidiv
or
inc
jb
sbb
sar
outs
cmps
mov
inc
dec
out
enter
mov
adc
sub
push
xchg
das
mov
or
sub
adc
imul
ficom
dec
arpl
mov
sub
push
adc
cmc
lds
mov
shl
jae
iret
adc
fld
dec
outs
repz
ins
cli
inc
imul
adc
loope
jns
xchg
sbb
retf
jge
sub
xchg
out
ret
adc
xchg
rol
out
xor
pop
fnstsw
push
cld
mov
push
push
daa
fsubp
sahf
jge
(bad)
sbb
mov
pop
in
in
pop
xchg
push
push
arpl
and
mov
sbb
or
test
test
inc
mov
outs
jmp
cmp
test
imul
leave
mov
es
xchg
pop
mov
sar
sub
test
mov
xchg
stos
pop
dec
jg
mov
adc
movs
mov
mov
cmp
hlt
and
sub
mov
or
sti
xor
cmps
lock
mov
push
shr
int
pusha
fadd
pop
and
dec
push
imul
sub
sub
xor
mov
fcomp
sub
sub
popa
pop
cmp
test
shr
mov
push
mov
sub
jo
sbb
xchg
inc
sbb
loope
cmp
aad
sub
sbb
dec
sub
dec
mov
xchg
cld
movs
ror
sub
mov
adc
test
adc
cmps
es
xchg
out
push
int
or
jl
cmp
std
and
xchg
scas
xchg
cs
call
clc
dec
mov
push
and
stos
iret
add
js
sub
or
push
add
jmp
jecxz
jle
xchg
xor
das
mov
mov
shl
sbb
mov
pusha
daa
xor
sbb
es
xor
mov
xchg
mul
mov
fsub
xor
and
out
sbb
add
(bad)
push
repnz
xor
test
outs
or
jle
cmp
jne
sbb
push
mov
push
aaa
into
cdq
loope
mov
pop
out
jl
cwde
pop
xor
out
push
aam
xchg
dec
ss
out
xchg
mov
imul
sbb
push
adc
jae
mov
inc
stc
pop
xor
test
cmp
sub
mov
sbb
xor
sti
mov
aam
fstp
ret
out
mul
mov
jg
cmp
sbb
pop
pop
sbb
addr16
mov
push
xor
mov
adc
and
push
sbb
fdivr
add
arpl
mov
cmp
dec
sub
js
loope
adc
xchg
call
jbe
mov
imul
sar
ret
push
add
iret
xor
test
xchg
xchg
rcl
icebp
adc
mov
fcom
pop
(bad)
test
(bad)
pop
sbb
int
jp
xor
push
popf
jp
mov
and
daa
inc
outs
popf
dec
xchg
push
jle
jnp
inc
xor
xor
cmp
cmp
jno
imul
dec
(bad)
xor
cld
ficom
(bad)
ja
mov
dec
data16
mov
and
cmps
jmp
into
sub
sub
adc
cmp
or
mov
jp
sar
mov
and
pop
mov
or
mov
cmp
cli
sub
xchg
hlt
call
arpl
xlat
cmps
jge
sub
or
(bad)
aad
xchg
cmp
pushf
push
xchg
int
das
push
or
xor
int
lods
retf
jno
cdq
(bad)
outs
gs
adc
add
xor
lahf
cmps
rol
and
cmp
test
mov
cmc
and
xchg
test
xor
cmps
xchg
pop
cmp
push
retf
test
xchg
sar
dec
xor
and
stos
dec
add
lds
call
and
jo
nop
fadd
arpl
mov
or
sbb
push
mov
adc
adc
test
cmp
scas
mov
dec
lods
hlt
and
int3
pop
xor
cs
fstp
(bad)
mov
and
jmp
ins
fld
lods
jmp
or
pop
mov
add
mov
sub
pop
shl
leave
xor
scas
frstor
push
cmps
in
adc
mov
iret
jg
sbb
sar
push
pop
pop
jmp
sbb
mov
push
xor
xor
neg
mov
in
test
pop
test
cmp
out
psubd
aad
xchg
xlat
inc
daa
cmovs
dec
fisubr
les
or
(bad)
push
adc
jno
test
push
or
sub
fstp
or
xchg
dec
and
inc
sub
xchg
mov
xchg
xchg
inc
and
jl
mov
test
or
aam
pop
iret
cmps
and
test
push
into
dec
movlps
test
and
hlt
sub
test
pop
aas
rol
cmp
push
into
xchg
cdq
retf
inc
and
push
mov
loope
push
mov
cmp
xchg
xchg
loope
cli
lahf
fdivr
out
mov
(bad)
movs
out
push
and
pop
rcr
adc
arpl
lods
mov
xchg
dec
add
das
adc
sbb
jb
ds
xchg
test
and
xchg
retf
xchg
dec
sbb
jo
movs
test
adc
adc
movs
lods
shr
retf
mov
jns
iret
and
jno
lea
sub
mov
and
loopne
and
shr
dec
out
jle
out
nop
xlat
pop
sub
inc
add
inc
cli
mov
loope
jg
cmps
xchg
aam
je
repz
add
inc
mov
nop
imul
pop
sbb
and
(bad)
movs
test
dec
push
(bad)
xchg
ficom
mov
dec
das
adc
xchg
pushw
sbb
cmp
mov
add
out
jg
cmp
mov
scas
in
push
sbb
je
xchg
push
pop
je
sahf
sahf
aam
push
mov
add
pop
mov
outs
pop
cli
mov
mov
jo
loop
bound
and
xchg
mov
mov
loop
pushf
(bad)
ss
cmps
(bad)
cmp
out
jo
adc
into
cmps
cmps
in
push
(bad)
mov
in
cmp
clc
and
aam
adc
sti
and
stos
test
xlat
push
add
jnp
mov
repz
loope
data16
dec
mov
xchg
imul
stos
imul
adc
xchg
sahf
std
push
adc
mov
mov
push
les
cdq
sti
inc
add
push
test
pop
xor
jae
mov
imul
movs
imul
xchg
pop
or
or
out
jb
in
cmp
mov
sub
or
xchg
popf
ficomp
push
jne
xchg
jecxz
test
popf
(bad)
pop
push
les
mov
dec
push
pop
push
sbb
push
repnz
mov
sbb
arpl
mov
mov
and
stos
mov
xor
mov
cmp
fistp
dec
mov
and
lods
out
daa
inc
mov
mov
fisttp
ins
fsubr
leave
xchg
nop
inc
sbb
pop
mov
pop
sbb
mov
and
pop
scas
in
sub
lods
gs
out
jne
push
jl
mov
(bad)
stos
add
push
pop
xor
hlt
push
sbb
mov
ja
and
mov
xchg
mov
pop
or
pop
mov
pop
sbb
je
stos
jno
sbb
mov
mov
(bad)
imul
inc
adc
cdq
mov
ins
std
movs
fsub
jle
mov
aad
(bad)
int3
inc
daa
add
stos
and
dec
fstp
lock
not
sub
rcr
cdq
dec
add
jge
xchg
fs
mov
or
loope
fs
mov
jns
push
push
mov
scas
mov
push
sbb
pop
or
fsubr
rcr
xchg
outs
or
imul
adc
je
call
pop
sub
test
xchg
fisub
jp
cmc
daa
inc
int
xchg
fldenv
push
fld
mov
jp
mov
int
mov
lahf
fsubr
pop
stos
fmul
(bad)
mov
test
ins
aas
add
ficomp
jne
out
jns
adc
fdiv
call
test
push
cmp
mov
pop
pop
mov
retf
cmp
sti
jns
jmp
xchg
fst
adc
icebp
pop
add
inc
sub
cmp
ror
xchg
cmp
stos
arpl
cmp
ror
dec
and
pop
leave
sub
fiadd
repnz
jae
or
mov
out
and
out
test
lock
out
add
out
mov
push
ins
stos
in
pop
adc
jae
xchg
add
ret
push
xor
inc
xlat
xchg
jns
sbb
fisttp
dec
into
mov
int3
mov
dec
add
pop
fld
and
add
das
adc
sub
mov
xor
inc
stos
(bad)
dec
or
js
aam
aas
add
mov
push
fnstsw
mov
pop
add
mov
xor
adc
mov
inc
rol
out
sbb
pop
std
mov
fadd
rcl
fadd
push
pop
test
jo
add
xlat
push
pop
out
lea
adc
xchg
and
cld
mov
add
cmc
mov
out
xchg
icebp
and
inc
(bad)
mov
push
cs
mov
push
fs
test
pop
cmps
aad
sbb
mov
mov
loop
push
retf
sub
(bad)
cmp
scas
(bad)
cmp
sahf
jge
les
cmp
loop
imul
mov
push
sbb
ret
jp
jecxz
mov
sub
mov
(bad)
ja
(bad)
mov
push
je
mov
(bad)
movs
mov
push
adc
pop
enter
sub
hlt
and
pop
test
sub
loopne
gs
cmps
xchg
nop
rcl
adc
mov
loop
mov
test
sub
test
fmul
lods
out
pop
sbb
mov
sbb
adc
fst
adc
and
adc
js
call
adc
pushf
xchg
sar
jne
shr
jb
adc
shl
(bad)
movs
outs
sub
xchg
pushf
fistp
sbb
mov
xchg
(bad)
dec
or
push
idiv
ds
mov
xorps
mov
sub
mov
add
mov
out
dec
or
call
sub
jmp
lds
(bad)
lea
jo
mov
or
retf
(bad)
movs
mov
push
cmp
mov
retf
mov
mov
add
in
ds
popf
xchg
out
and
mov
aam
mov
and
mov
sti
cdq
ins
sub
push
ficomp
fistp
fwait
aam
movaps
xlat
jns
cmovne
cmps
mov
pop
sbb
repnz
cmp
jle
mov
mov
and
movs
xlat
push
jge
push
mov
pop
adc
add
inc
or
clc
push
or
imul
and
out
xor
mov
and
push
mov
and
dec
leave
xchg
dec
test
jb
jmp
inc
cli
mov
fidivr
scas
int
dec
cli
cwde
and
dec
jmp
in
push
adc
jno
repz
sub
imul
jnp
cdq
sbb
popa
fidivr
out
lea
adc
call
fldcw
enter
or
mov
(bad)
pushf
mov
and
call
mov
cmps
pusha
and
arpl
mov
repz
or
lahf
inc
xor
push
rcl
mov
cmp
mov
push
retf
sbb
xor
pop
mov
mov
xlat
sub
mov
cmp
mov
shl
jae
lahf
imul
mov
je
out
psllq
(bad)
out
js
loope
ins
sub
inc
ret
test
xlat
movs
xchg
rcl
in
ins
and
push
aas
jns
pushf
mov
ja
rcl
push
jne
ficom
loop
js
aad
sahf
fld
imul
js
fwait
or
xor
popa
stos
stc
dec
sbb
iret
dec
cmp
mov
enter
cmp
cmc
push
xor
xchg
rol
jmp
xchg
aad
add
jne
(bad)
mov
or
int
add
inc
fstp
les
or
add
scas
mov
inc
add
cmps
fild
leave
cdq
(bad)
daa
jge
shl
push
fistp
clc
mov
jmp
(bad)
in
push
cmp
mov
aaa
je
ret
inc
add
pop
rcl
les
jb
sub
aad
mov
out
jae
xor
loopne
push
fisttp
out
arpl
pop
pop
cmps
les
cmp
or
xchg
inc
add
jp
in
jne
(bad)
xchg
jle
jmp
fst
pop
sbb
outs
movs
mul
out
pushf
fistp
mov
or
lds
aad
xchg
rcr
out
mov
pop
or
xchg
fst
or
nop
mov
je
sbb
cmps
mov
jnp
cmps
mov
jge
add
icebp
jbe
lock
mov
xchg
and
mov
and
jns
cli
sub
mov
call
jmp
pop
mov
adc
add
cmps
mov
pop
adc
sbb
cmp
ins
mov
ins
rcr
arpl
scas
(bad)
in
adc
adc
pop
mov
push
fsubr
lods
loop
or
push
fimul
xlat
popf
xchg
pop
add
dec
jmp
gs
xor
int3
sub
cmps
outs
sub
daa
dec
cmps
loope
inc
mov
add
popf
mov
sub
popa
mov
jl
adc
out
push
or
call
xchg
xlat
push
aaa
xor
mov
pop
inc
mov
pop
sbb
fs
or
mov
das
xor
stos
mov
jp
jmp
arpl
adc
test
sahf
data16
dec
cmps
les
xor
push
mov
mov
std
dec
or
cmc
addr16
cmp
loopne
sub
outs
mov
mov
jmp
fcomp
cmovs
mov
les
iret
and
push
xchg
pusha
add
dec
lods
out
cmp
jo
mov
repnz
jge
in
mov
das
ins
fdivr
adc
fild
pop
ror
gs
scas
and
jg
fld
jae
cli
aas
addr16
dec
fnstsw
or
test
jbe
loopne
xor
jnp
push
mov
pop
push
sub
fsubr
dec
lock
repz
cmps
jb
sti
mov
neg
enter
pop
sbb
jne
out
dec
ds
xchg
(bad)
jo
int3
add
ret
mov
jmp
inc
rol
xor
mov
sti
and
mov
ror
push
pop
adc
xchg
test
mov
aam
ins
sbb
mov
sub
rcr
nop
popf
fidivr
sbb
fstp
test
nop
push
xchg
in
xchg
out
xor
leave
fwait
push
xor
das
dec
movs
out
xor
dec
mov
xor
adc
popf
arpl
dec
mov
pop
or
jb
int3
mov
sbb
out
add
outs
out
lods
sahf
cld
jge
aad
ja
loope
and
jne
xlat
jns
daa
rcr
aad
imul
jbe
test
mov
mov
(bad)
mov
rol
adc
mov
mov
mov
inc
push
subps
mov
sub
je
(bad)
push
or
push
(bad)
jl
sub
stos
call
movs
mov
inc
cs
and
test
rcr
mov
push
pop
sbb
enter
adc
mov
in
xchg
sar
jmp
fstp
push
in
stos
mov
push
rcl
andnps
stos
mov
inc
out
inc
push
cmp
xchg
imul
adc
retf
inc
add
jbe
aas
dec
ret
aas
loopne
jg
out
ins
aas
push
jne
popf
push
pop
call
add
pop
fmul
rol
mov
adc
hlt
and
cmp
pop
idiv
jl
sbb
jmp
cld
movs
bound
iret
xchg
sahf
int3
jno
iret
cmps
xchg
rol
iret
daa
pusha
xlat
mov
test
push
adc
pop
retf
xchg
dec
pop
or
fmul
inc
fldcw
pop
add
test
rcl
fnstsw
test
xor
stos
nop
rol
inc
or
add
dec
stos
leave
and
sbb
sbb
mov
push
ss
inc
pop
out
mov
cmp
enter
je
sbb
iret
adc
popa
add
mov
fs
stc
push
ss
rol
(bad)
push
push
test
test
pop
cmps
jmp
adc
outs
lock
es
data16
mov
jmp
mov
jns
loopne
jp
loope
mov
daa
pusha
mov
std
popf
fild
push
push
iret
xchg
lods
call
sbb
std
dec
ds
mov
rcl
outs
sar
jecxz
lahf
std
and
cmp
pop
lods
fimul
jecxz
arpl
dec
mov
xor
mov
aad
cmp
mov
or
push
lods
out
push
xor
adc
movs
cwde
fistp
dec
mov
mov
ret
out
mov
shl
aaa
shl
movs
scas
std
es
mov
xor
icebp
sub
ret
mov
pop
sub
gs
xchg
xlat
jb
out
mov
not
sub
idiv
jge
cld
ss
jns
xlat
xchg
jns
adc
rol
imul
xchg
loop
out
add
mov
repnz
and
lea
xchg
aas
cmp
dec
add
inc
sbb
imul
sbb
lods
bound
mul
cmp
mov
add
jl
sub
cmps
aad
imul
popa
call
jb
test
lods
out
cmp
popf
pusha
add
lea
jecxz
inc
pop
add
push
mov
mov
nop
rcr
cmp
or
mov
mov
ret
fwait
dec
sbb
mov
rol
add
mov
fdiv
sbb
adc
jmp
test
cmp
pushf
mov
mov
pop
dec
xchg
jle
icebp
mov
fnstenv
jo
in
sbb
jne
cmc
pop
das
pop
sub
cmps
mov
ds
loop
(bad)
xchg
(bad)
xor
rcl
out
adc
xchg
adc
cs
xor
jp
xchg
jne
ret
mov
sbb
push
daa
div
call
ss
in
sub
repnz
sbb
xor
inc
mov
popf
jmp
inc
cmps
retf
dec
cmc
mov
xor
mov
(bad)
js
rol
cld
mov
adc
mov
(bad)
sub
rol
(bad)
int3
and
std
dec
sub
icebp
pop
sub
pushf
add
js
test
xchg
gs
cli
test
ret
aad
push
jmp
scas
mov
mov
push
rol
xchg
(bad)
cs
(bad)
mov
in
imul
inc
xlat
popf
lahf
out
cdq
shl
push
ins
ret
stos
(bad)
into
ds
mov
and
call
inc
xor
test
cdq
mov
and
mov
scas
je
pop
cs
add
pop
es
ja
out
aad
daa
aas
data16
in
or
and
js
mov
xor
out
pop
in
outs
sbb
jg
xchg
mov
inc
or
pop
scas
hlt
push
pop
loope
mov
jge
(bad)
cmps
mov
cdq
ficomp
sbb
add
mov
int3
pop
cmp
push
(bad)
loope
imul
popf
out
push
adc
dec
jmp
adc
jae
ret
add
into
mov
std
movs
mov
or
jbe
xchg
test
jno
jmp
inc
add
(bad)
arpl
dec
repz
xchg
dec
add
xchg
jns
lds
in
dec
daa
add
(bad)
pop
pop
push
or
retf
mov
or
iret
jne
cmp
mov
mov
pop
sbb
pop
cmp
pop
mov
mov
sub
nop
jecxz
adc
inc
or
dec
ret
nop
inc
and
cmps
xchg
fsubr
repnz
dec
or
mov
mov
fcomp
fidiv
xchg
loop
sbb
lods
jae
ret
mov
jno
out
adc
jae
sub
mov
nop
stc
jne
pop
ds
aad
mov
mov
mov
jmp
aad
je
sub
in
dec
sub
mov
and
mov
stc
imul
xchg
add
addr16
popa
add
iret
mov
xchg
loopne
jl
pop
mov
xchg
test
rcr
xchg
xchg
ror
inc
sbb
lods
cmc
xchg
push
psubb
repz
mov
loop
fwait
div
jo
mov
xchg
aam
retf
push
push
leave
xchg
ins
aas
pop
jl
rol
xchg
rcr
in
mov
rol
(bad)
add
xor
ja
les
jp
sub
gs
mov
push
in
scas
pusha
cmp
pop
mov
cmps
data16
mov
ins
add
jecxz
dec
cmp
pop
rcl
ror
cmps
loope
sbb
push
ret
call
call
mov
js
stc
mov
jmp
push
mov
xor
es
push
shl
pop
addr16
xchg
aad
retf
inc
adc
jae
mov
sbb
(bad)
jl
push
jge
popf
mov
lahf
fnstsw
out
fadd
and
push
xchg
je
mov
leave
jae
push
pop
shl
push
dec
out
cmps
aam
jecxz
iret
popf
fimul
out
xchg
rol
push
ror
mov
inc
add
xor
out
nop
cld
cmp
mov
inc
add
mov
push
add
mov
push
or
stos
push
psubb
dec
or
cmps
fs
call
jne
mov
les
mov
pushf
(bad)
push
add
xchg
xchg
xlat
cmp
(bad)
pop
push
sbb
mov
stc
and
scas
in
push
xor
imul
jb
jecxz
jp
dec
or
inc
ficom
fwait
clc
cmp
(bad)
aas
dec
mov
jle
jmp
adc
cmp
sbb
sub
movs
(bad)
xor
(bad)
xor
shl
stos
je
add
imul
outs
mov
sub
jbe
ret
shl
out
xchg
sti
jge
or
mov
cmp
jo
xchg
sub
dec
cmps
hlt
mov
clc
mov
jmp
cwde
fld
add
mov
ret
(bad)
mov
out
push
and
retf
mov
std
mov
add
mov
pop
iret
lods
jge
adc
test
ret
and
mov
cli
and
xchg
jne
repnz
and
dec
mov
pop
sbb
xchg
lahf
in
es
enter
std
sub
dec
fst
in
scas
inc
sbb
cdq
inc
and
mov
push
add
and
shl
aaa
and
cld
pop
inc
jge
sub
inc
pop
jl
jl
call
mov
ins
(bad)
retf
xchg
test
push
shr
div
int3
pop
ins
jl
sub
lock
clc
(bad)
outs
int3
push
fst
push
xor
xor
stos
es
test
sbb
retf
pop
fist
mov
xchg
rcl
push
pop
sub
push
jno
and
icebp
and
jne
jb
outs
sub
iret
or
fs
iret
or
adc
mov
jmp
push
sbb
dec
ss
push
or
add
xor
pop
mov
mov
dec
fstp
out
cmp
adc
mov
inc
pop
xor
in
mov
lock
xchg
jle
sub
stos
loopne
and
mov
and
leave
test
fstp
sub
ja
adc
pop
pop
sub
xchg
mov
jg
cmp
adc
stos
xchg
mov
lock
cmp
and
add
xchg
fnstcw
loopne
pushf
stos
xchg
(bad)
imul
aas
dec
ret
mov
(bad)
jg
mov
jns
mov
gs
xor
xchg
xchg
cli
xor
and
jns
into
mov
mov
pop
popf
aaa
mov
pop
fcom
enter
test
or
leave
(bad)
repz
push
out
pop
rcr
push
ss
loop
das
ss
pop
xchg
stos
in
and
jno
(bad)
jle
cmps
call
daa
pop
dec
sub
fidivr
rcr
adc
adc
ret
iret
mov
jnp
sbb
add
or
jnp
fmul
sbb
sahf
and
ja
jg
cmp
xchg
adc
aaa
xlat
outs
repnz
jno
cmc
mov
neg
ficomp
mov
outs
data16
mov
jge
pop
cmp
cld
push
pop
sbb
mov
rcr
loopne
xchg
iret
(bad)
std
pop
mov
dec
fs
sbb
mov
sub
dec
loop
(bad)
mov
mov
ja
lds
sub
div
mov
cdq
shl
ins
mov
inc
mov
dec
add
or
popa
xor
fist
fcomp
and
jnp
mov
pop
sbb
popf
jae
ja
jno
jb
shl
movs
(bad)
push
adc
imul
hlt
fidivr
jb
icebp
mov
adc
sbb
fwait
push
mov
leave
scas
mov
pusha
jb
push
and
shl
cwde
leave
fs
lods
jns
loop
mov
cmp
and
std
gs
mov
inc
sub
sbb
daa
dec
fimul
ficom
test
fwait
sbb
sbb
push
movs
retf
jnp
mov
push
push
retf
xchg
sti
mov
and
jl
rcr
cmp
imul
repz
rcl
std
adc
lods
mov
ss
inc
or
cmp
jb
movs
int3
mov
jecxz
(bad)
adc
jae
das
jo
into
gs
inc
xchg
movs
call
xor
call
jecxz
leave
mov
pop
das
inc
sub
push
inc
push
cmps
popa
imul
or
sub
jbe
and
fisub
xor
ficomp
pop
idiv
in
xor
loope
dec
cs
int
jmp
push
inc
xchg
ret
mov
sbb
movs
ror
push
or
neg
je
rcr
jne
not
clc
iret
(bad)
mov
jmp
out
pop
mov
outs
and
push
rcr
data16
pusha
sbb
sbb
fwait
call
fmul
fild
inc
xchg
in
jb
push
iret
mov
fistp
jmp
jp
pushf
jo
lods
repz
xor
xchg
mov
dec
dec
fs
mov
add
ss
aaa
pop
mov
jmp
pop
test
fidivr
lds
mov
pop
xchg
es
cmps
mov
jmp
(bad)
aam
jae
cmps
rol
pop
sar
dec
mov
gs
xchg
jecxz
mov
fsubr
push
outs
fiadd
xor
div
xchg
iret
adc
retf
es
or
jno
cmc
aaa
and
ror
add
push
dec
popf
leave
push
add
mov
loopne
pop
fist
adc
sub
ja
movs
add
or
es
enter
je
icebp
xchg
push
pop
mov
xchg
cmps
(bad)
cmc
or
xchg
test
cmp
imul
adc
into
test
shl
cdq
jns
fild
ret
sub
std
push
out
mov
add
mov
loopne
jecxz
sub
xor
int
out
dec
mov
es
mov
xchg
dec
add
inc
and
xor
sbb
scas
sub
shl
jne
out
cld
dec
push
push
adc
pop
or
in
or
ret
cwde
xchg
test
adc
cmp
and
cmp
pop
mov
dec
movs
leave
add
xchg
jle
xchg
adc
imul
loope
ss
push
xor
add
rcr
(bad)
lds
mov
js
icebp
rcr
std
jge
push
push
sar
out
mov
aam
push
adc
int3
in
in
int
mov
adc
pop
adc
test
test
pop
lods
jns
fsub
pop
neg
movs
add
ds
mov
mov
mov
xor
pop
or
jo
jmp
inc
adc
inc
fdivr
sti
sar
sahf
pop
aas
fild
punpckldq
mov
stc
push
inc
nop
icebp
add
fstp
retf
sub
mov
(bad)
mov
(bad)
adc
jb
push
dec
and
test
aad
sbb
stos
test
push
jae
pop
fsubr
test
neg
int
rol
outs
adc
xchg
imul
adc
dec
dec
popf
sub
movs
mov
mov
add
mov
arpl
rol
(bad)
out
jns
out
into
mov
call
(bad)
clc
jle
pop
out
dec
or
cmp
cdq
adc
retf
xchg
div
ret
(bad)
leave
xor
mov
lea
mov
popw
retf
mov
inc
pslld
dec
cmp
xlat
and
imul
scas
sub
scas
in
std
fiadd
mov
hlt
adc
jecxz
xor
cmp
pop
repz
enter
mov
addr16
sbb
adc
pop
pop
mov
in
jge
clc
iret
push
movd
repnz
icebp
mov
(bad)
mov
sub
jae
inc
xchg
xor
test
and
adc
(bad)
and
sbb
mov
sbb
dec
(bad)
xlat
stos
inc
into
movs
push
(bad)
leave
fadd
adc
popf
adc
fistp
dec
sti
jb
mov
ret
xchg
xchg
repnz
jecxz
pop
sub
fnstcw
div
push
jbe
mov
mov
push
and
(bad)
or
mov
addr16
sub
sbb
inc
inc
aaa
dec
ficomp
scas
scas
jne
(bad)
jle
mov
and
mov
mov
or
movs
inc
jecxz
xor
push
jg
pop
sti
jno
ss
lods
(bad)
aaa
xor
mov
stos
xchg
popf
loope
jb
push
add
adc
push
and
ds
xor
cs
xchg
jne
push
jge
push
fdiv
ss
jmp
sub
ret
(bad)
xor
dec
popf
xchg
ffreep
hlt
fnstcw
loopne
and
adc
push
dec
add
les
push
pop
jnp
push
cdq
mov
mov
xor
xchg
(bad)
ret
xor
mov
sub
into
lock
xchg
or
stos
loopne
rcr
int
mov
jp
lds
mov
and
test
mov
adc
das
push
lods
dec
(bad)
mov
out
fbstp
fcom
xlat
mov
jmp
and
jge
popf
adc
aas
xchg
xor
push
je
mov
xchg
fidiv
mov
push
(bad)
pop
in
loopne
scas
in
scas
outs
or
test
inc
out
mov
cmp
or
xor
or
jmp
(bad)
fst
dec
mov
outs
xor
push
sub
test
add
mov
mov
popa
pop
or
jg
cmovge
xchg
loopne
xlat
(bad)
or
stos
lds
movs
(bad)
in
aam
mov
popa
jl
not
retf
and
sahf
scas
aam
sub
sub
es
sub
jmp
icebp
sub
popa
lea
cmps
out
jns
stc
std
jle
(bad)
icebp
xchg
lock
and
test
sbb
jb
pusha
ss
xor
pop
cdq
fld
adc
adc
lods
jnp
sub
test
dec
aad
in
(bad)
mov
cmp
pusha
(bad)
ss
loope
push
test
call
in
test
movs
cmp
neg
(bad)
sbb
sti
dec
add
ins
jg
data16
and
gs
and
out
dec
mov
jo
shl
jp
xor
jle
pop
cmc
or
arpl
cmps
popf
sbb
or
popf
rcr
ss
loop
inc
loope
xchg
adc
add
xchg
cmp
sbb
test
jecxz
je
fdiv
dec
add
push
push
ficomp
mov
cdq
es
ret
fldpi
mov
mov
fidivr
inc
fbld
add
pop
cmc
mov
shr
sbb
push
nop
xor
and
ficomp
call
xor
or
rcl
fisubr
push
in
xchg
sti
sub
push
stc
scas
repz
ins
mov
xchg
outs
retf
test
push
sar
aas
adc
adc
lahf
scas
nop
shl
stos
imul
and
(bad)
ins
jmp
xor
shr
loopne
fcomp
fisttp
aaa
jmp
mov
mov
(bad)
jbe
pushf
std
xchg
mov
mov
mov
sbb
repnz
test
mov
fdivp
xchg
adc
out
cdq
(bad)
fidivr
xchg
mov
mov
push
push
push
sbb
mov
push
jo
popa
dec
push
push
ficom
(bad)
movs
dec
int
jl
cld
mov
dec
fcmovnb
in
popf
(bad)
test
int3
(bad)
nop
clc
scas
inc
xor
sbb
int
cdq
dec
adc
icebp
mov
neg
and
(bad)
inc
adc
cmp
jbe
jae
int
bound
aad
scas
xchg
cld
dec
ins
cmp
mov
fst
sub
xchg
jecxz
fmul
jmp
push
pop
into
(bad)
push
sbb
shl
jne
xchg
jl
in
std
inc
clc
xor
ins
inc
hlt
adc
sti
enter
or
inc
dec
or
xor
xor
mov
push
push
pop
popf
mov
inc
adc
nop
jecxz
pop
sti
rcl
js
push
out
fnsetpm(287
add
(bad)
mov
rcr
call
xor
stc
inc
sub
xlat
je
stc
xlat
mov
out
repnz
jae
cmp
push
jb
outs
jl
adc
out
inc
(bad)
and
dec
hlt
cdq
mov
lods
xor
dec
mov
cmp
inc
loopne
adc
add
xor
mov
popf
and
adc
push
push
jne
out
mov
jmp
add
fcomp
into
ss
test
outs
sub
mov
push
in
mov
xor
pop
inc
imul
xchg
cmp
iret
pop
jns
mov
xchg
dec
sbb
aam
mov
imul
sub
outs
pop
mov
xor
movs
mov
xchg
out
fwait
push
fwait
rcl
in
test
outs
(bad)
call
dec
add
lods
ins
mov
jle
pop
repz
icebp
aad
int
xor
inc
adc
je
pop
fwait
repnz
dec
data16
sub
mov
rcl
dec
sti
sbb
pop
cli
test
lods
pop
mov
add
pop
clc
call
jo
mov
sub
mov
lock
clc
sub
dec
push
fs
and
add
sbb
add
in
adc
mov
inc
les
add
adc
fld
jmp
push
ss
cs
fisttp
xlat
adc
in
in
jo
add
inc
adc
add
mov
mov
mov
xchg
fcomp
push
(bad)
and
call
inc
outs
adc
fisubr
mov
jae
int3
nop
cld
jo
enter
push
cmps
mov
pop
fcom
and
aaa
clc
push
pusha
js
pop
fs
dec
mov
cmp
pop
mov
js
sti
xchg
or
mov
dec
out
push
add
clc
(bad)
mov
sbb
dec
lods
icebp
nop
arpl
jb
and
cld
lock
fsub
xchg
and
adc
dec
pop
adc
(bad)
and
mov
(bad)
mov
fcomi
enter
sbb
inc
cmp
sbb
mov
jnp
retf
mov
mov
scas
out
fwait
js
push
lock
popa
in
sub
sbb
les
pop
sahf
out
pop
xchg
(bad)
mov
mov
pop
or
retf
push
pop
stc
test
inc
xchg
xor
cld
mov
movs
ror
mov
xchg
jno
sbb
loope
adc
pop
sub
jge
sahf
into
add
imul
sub
cld
pop
mov
scas
push
add
and
icebp
or
mov
xor
popa
mov
mov
mov
arpl
loopne
push
cwde
push
pop
(bad)
mov
mov
lds
add
push
cmp
addr16
inc
inc
push
xor
mov
xor
mov
fcmovne
inc
and
stos
(bad)
fwait
pop
add
xchg
hlt
xor
mov
jecxz
xchg
aam
add
mov
sbb
shl
addr16
sub
pusha
scas
push
pop
les
push
lds
pop
dec
add
add
mov
ret
adc
jbe
sahf
inc
idiv
imul
ret
retf
dec
inc
xchg
cld
ins
xor
mov
repz
stos
jg
push
dec
pop
inc
call
dec
xlat
and
dec
sub
fmul
xchg
add
scas
fild
into
call
mov
jmp
mov
je
loope
add
mov
mov
mov
ins
cmp
into
push
jg
jge
push
jl
cld
mov
test
jb
jae
fisubr
addr16
jecxz
cdq
jmp
mov
lea
pop
push
ror
hlt
push
loope
mov
push
(bad)
adc
push
fld
stos
fild
xchg
pop
pop
rcl
mov
scas
mul
inc
out
leave
add
sbb
fsubr
fstp
std
mov
fisubr
dec
adc
icebp
rol
add
sub
and
rol
jne
jecxz
sbb
call
addr16
pop
cmp
ss
xlat
sbb
aad
ss
mov
push
pop
and
outs
xchg
xor
out
out
pushf
xlat
add
xor
scas
pop
jg
(bad)
inc
scas
add
fs
adc
aad
xor
pusha
cmp
sub
out
add
and
mov
adc
data16
(bad)
cli
jnp
js
sub
xor
inc
loopne
fiadd
iret
jbe
mov
popf
or
mov
mov
sub
loope
jmp
add
imul
hlt
cld
movs
aad
ds
jge
dec
int
xor
dec
sub
inc
dec
sub
push
in
mov
bound
retf
cmp
je
jns
cmp
test
inc
popa
sbb
push
sub
or
mov
iret
pop
inc
enter
push
push
(bad)
scas
std
(bad)
sub
cmp
pop
popa
cmps
inc
test
test
jmp
push
jg
lds
(bad)
cmp
ds
jl
les
push
sub
inc
xchg
loop
adc
cmps
(bad)
(bad)
aas
push
xchg
retf
movs
out
scas
mov
or
dec
nop
js
ds
aaa
cmp
js
aam
push
out
out
arpl
cld
xor
xor
sub
clc
or
mov
jp
lds
out
and
int
sub
jp
mov
xchg
push
(bad)
fst
rcl
inc
test
dec
cmp
ret
cmp
jbe
cmp
or
xchg
sbb
cli
mov
je
sahf
(bad)
ret
xchg
imul
fcomip
sar
loope
jnp
or
jl
adc
scas
cli
sbb
sahf
stos
inc
xchg
push
fstp
das
ins
ret
mov
pop
add
ficom
icebp
mov
xlat
jae
cmp
dec
leave
push
xchg
stos
mov
and
ret
fisubr
xchg
pop
inc
leave
test
jno
and
push
jge
out
cmp
stos
pop
in
nop
leave
cmp
xchg
lods
add
movs
mul
xchg
imul
retf
(bad)
jmp
daa
cmp
inc
nop
jae
mov
sub
add
into
push
or
xchg
imul
das
fs
mov
pop
mov
je
cdq
jp
xchg
jno
bound
or
repz
(bad)
mov
int
sub
cdq
add
mov
mov
pop
aad
xchg
mov
lock
shl
xchg
push
cmps
call
mov
jmp
imul
outs
dec
aam
cld
fs
sbb
cs
shl
test
adc
or
test
in
cmc
std
ret
inc
cmc
stc
push
ds
pop
sbb
call
jno
fwait
dec
fld
or
in
(bad)
cmp
mov
sbb
xor
adc
xlat
leave
clc
mov
icebp
jne
loope
data16
jmp
fst
xchg
jmp
push
in
xchg
cli
retf
mov
shl
cmp
nop
push
mov
jbe
xchg
repz
into
mov
inc
jmp
add
mulps
jbe
sbb
daa
or
inc
out
outs
xchg
or
mov
mov
lahf
test
push
pop
add
jns
arpl
lahf
ror
add
loope
sbb
sbb
scas
outs
add
(bad)
mov
cld
cld
pop
dec
shl
push
and
adc
fs
xor
mov
add
mov
push
xchg
add
push
retf
aad
mov
iret
mov
mov
push
ficom
cmps
imul
pop
sub
mov
mov
out
or
mov
push
test
(bad)
fucomp
(bad)
mov
loope
mov
inc
scas
xchg
jo
or
dec
add
mov
adc
dec
pop
xchg
in
into
push
inc
pop
inc
pop
push
mov
dec
jnp
xchg
loop
rcl
pop
pop
(bad)
outs
and
in
fimul
push
sub
and
push
xor
mov
int3
daa
cmp
out
pop
and
lds
add
rol
sbb
adc
add
mov
mov
xchg
or
mov
test
mov
pusha
jge
add
or
scas
push
sbb
jnp
add
leave
fild
mov
mov
jmp
inc
push
mov
adc
into
push
add
arpl
and
rcl
jl
adc
push
pop
push
sub
adc
mov
mov
mov
stos
fs
jnp
dec
xchg
cmp
rcr
push
das
icebp
ss
leave
jmp
rcr
mov
and
xor
outs
and
pop
cmp
cld
and
push
or
mov
sbb
adc
ficomp
nop
sbb
sti
fwait
push
loope
daa
popa
and
add
int
mov
in
jb
xlat
lahf
pop
lds
and
mov
jp
mov
mov
pop
push
xchg
enter
and
sub
mov
test
fcmovnb
(bad)
and
sub
daa
cmp
pusha
cmc
cmp
(bad)
(bad)
pusha
cmp
push
add
push
lds
adc
das
xor
jnp
sub
mov
ds
push
lahf
mov
sub
mov
lahf
mov
bnd
fisubr
int3
jb
sbb
push
jle
es
mov
and
pop
sbb
adc
push
push
xor
test
push
aas
repnz
xchg
mov
cmp
jge
mov
cli
dec
mov
pop
mov
rol
test
mov
jmp
adc
call
stos
outs
lock
pusha
jno
adc
out
scas
fsubr
mov
in
in
out
sbb
ss
push
out
retf
jo
push
cs
jg
cmp
push
xchg
fwait
and
scas
cmp
xchg
call
idiv
enter
dec
imul
into
out
loope
cli
icebp
dec
inc
ins
fmul
jmp
cdq
xchg
out
movs
repz
enter
jl
jne
outs
xchg
cmp
nop
add
cmp
cmp
xchg
and
mov
retf
repz
dec
push
scas
jle
cmps
mov
push
mov
gs
dec
mov
sub
hlt
popf
ds
pop
inc
or
sub
xchg
mov
pushf
adc
test
loope
cld
pop
ja
pop
inc
sub
jbe
hlt
js
sub
mov
mov
fsub
jns
adc
movs
jae
(bad)
leave
sar
pop
mov
sti
or
mov
hlt
loop
ins
mov
imul
pop
cmp
outs
sahf
lahf
mov
inc
dec
push
in
dec
popa
jmp
inc
dec
mov
mov
stc
scas
xor
lock
and
test
cwde
jmp
push
jp
mov
sbb
imul
cmp
icebp
movs
jae
mov
popf
popa
(bad)
cmp
div
push
ret
push
loope
and
xchg
test
xor
push
aad
lock
cld
jle
in
inc
sub
add
sahf
adc
push
sar
push
lahf
adc
cld
pushf
push
mov
jne
jb
test
sbb
imul
mov
shr
mov
iret
dec
loop
cs
out
inc
sub
adc
shr
xchg
mov
cmp
xchg
retf
das
adc
loopne
cld
add
jg
aas
adc
loopne
cmps
push
mov
adc
dec
shr
add
cmc
inc
bound
inc
xchg
popa
call
mov
aad
xchg
imul
lds
mov
ss
or
retf
mov
push
shl
cmps
scas
loope
cmp
jo
cli
loopne
mov
dec
sbb
xchg
loopne
and
mov
prefetcht0
cmp
mov
sub
ja
mov
lea
(bad)
in
push
adc
adc
arpl
and
cmps
jmp
sbb
hlt
sub
xchg
popa
or
pop
loopne
mov
int
loop
movs
sahf
fwait
push
shr
iret
(bad)
jle
je
jae
mov
fwait
sbb
test
pop
pop
push
fcomp
sub
pop
adc
mov
rol
jl
xchg
shr
cmp
mov
neg
xor
sbb
out
sar
ins
adc
xchg
add
ins
cmc
jecxz
push
(bad)
mov
cs
jle
push
push
out
dec
nop
repz
(bad)
mov
mov
sub
pop
cmps
das
mov
enter
in
push
dec
int
pop
nop
cmp
bound
mov
(bad)
iret
(bad)
repz
sbb
aad
iret
mov
add
ficomp
movs
add
pop
adc
int
in
mov
add
jb
mov
mov
ffreep
out
scas
dec
cmp
shl
ins
daa
inc
mov
or
adc
dec
cmps
mov
mov
push
in
xor
aas
outs
sbb
pushf
mov
mov
test
cdq
pop
xchg
lea
lds
mov
jmp
retf
pop
pop
sbb
pushf
fcomp
fld
mov
ret
mov
pop
add
mov
sbb
call
xchg
push
mov
mov
jmp
or
fnstsw
mov
pop
cmp
push
test
inc
loop
and
mov
ss
inc
lods
mov
imul
loopne
sub
nop
push
fwait
push
aaa
fsub
fs
mov
sbb
mov
and
test
loopne
std
cmp
cmp
shl
cmp
mov
sbb
loope
jp
or
sub
ror
int
dec
popf
inc
mov
xchg
outs
fdivr
jmp
and
or
stos
test
or
add
xchg
fwait
pop
pushf
mov
cmps
and
dec
pop
call
jbe
mov
enter
xchg
jmp
and
js
sub
iret
jo
pusha
or
jle
mov
cmp
int3
dec
pop
mov
mov
cwde
fs
xchg
loopne
mov
inc
out
loope
jmp
fst
cmps
setne
pushf
inc
sbb
repz
fwait
aad
xchg
sub
inc
mov
ss
push
and
out
and
mov
xor
xchg
(bad)
adc
xchg
inc
push
not
push
mov
movs
movs
xor
mov
aaa
imul
pop
sub
inc
(bad)
ins
or
in
loope
pop
adc
out
xchg
ja
xor
hlt
push
xchg
adc
data16
sbb
sub
inc
clc
mov
mov
outs
clc
scas
and
mov
sahf
jp
or
mov
adc
jp
lods
add
aad
movs
ins
cmp
ret
fdivr
pop
pusha
arpl
int
jge
add
lock
push
sahf
dec
cs
or
jmp
(bad)
(bad)
xchg
xchg
mov
xchg
cli
pushf
shr
pop
xor
mov
test
mov
or
cmp
mov
or
cmp
call
xchg
idiv
nop
sbb
out
and
or
xchg
retf
add
inc
mov
icebp
(bad)
(bad)
sbb
mov
outs
xchg
xchg
inc
nop
or
clc
or
add
outs
pop
jne
rcl
push
adc
push
rcr
mov
dec
mov
dec
or
inc
xchg
mov
sub
loope
xor
arpl
movs
lahf
xor
and
cdq
clc
pushf
inc
jmp
sub
pop
out
(bad)
fist
movs
popa
sbb
push
push
add
jnp
cld
cwde
jmp
xor
(bad)
adc
add
dec
xlat
xlat
push
cli
jns
into
cli
fild
mov
clc
and
push
cli
push
add
mov
leave
push
inc
sbb
and
sahf
pop
(bad)
sub
sub
icebp
imul
or
jne
cmp
repz
xor
inc
rol
in
xchg
ficomp
ret
xchg
adc
push
lods
pop
call
int
jmp
jle
out
clc
into
(bad)
cmp
pop
daa
es
jmp
ins
test
adc
pop
call
pop
jns
adc
xchg
(bad)
daa
in
mov
add
mov
retf
mov
mov
add
aas
mov
and
pop
jl
add
shl
pop
clc
sub
jmp
jmp
mov
loopne
pop
mov
adc
sbb
add
xchg
call
jl
stos
inc
cmp
sbb
xchg
std
inc
jo
and
add
aas
mov
(bad)
int
retf
jae
push
mov
clc
push
out
pop
scas
ss
aad
sub
inc
pop
xor
retf
jns
ins
les
cmc
push
xchg
(bad)
repnz
loope
mov
inc
gs
movs
sbb
or
in
js
fs
add
rcr
scas
cmp
jae
fcomp
arpl
loope
add
outs
mov
repnz
aam
inc
loopne
pop
sbb
jb
jmp
cmp
mov
aas
adc
cmp
sub
cmp
std
cmc
adc
push
fistp
mov
push
mov
pop
push
cli
fild
adc
(bad)
cmp
jbe
mov
push
cmc
(bad)
add
push
or
push
(bad)
rcr
jmp
and
enter
popf
outs
sti
mov
jl
call
(bad)
mov
push
jmp
sub
xor
mov
jg
sbb
pop
sbb
stc
mov
adc
pop
pop
adc
and
adc
xchg
loop
ss
test
test
jl
cmp
inc
es
int3
ficom
push
aad
popa
push
nop
pop
inc
sbb
cs
push
adc
stos
add
aad
rol
and
mov
movs
out
sub
out
cli
adc
jle
popf
out
outs
mov
mov
jnp
call
es
jp
dec
and
fcomp
sub
xchg
pop
scas
(bad)
fistp
test
sub
push
adc
mov
imul
jo
cld
not
xlat
xchg
dec
add
js
dec
adc
mov
or
or
inc
jne
xchg
push
rol
pop
fnstenv
lahf
push
adc
aam
jcxz
mov
mov
pop
out
mov
inc
inc
aaa
popa
cmps
jmp
sti
jno
fadd
jno
inc
mov
sbb
(bad)
test
fwait
adc
test
sbb
cmp
mov
int
pop
adc
(bad)
into
mov
push
idiv
shr
inc
push
push
(bad)
mov
add
xor
xchg
push
je
imul
scas
adc
aaa
stc
inc
cli
xchg
xchg
loop
dec
cld
das
sbb
jmp
sahf
pop
pusha
pop
faddp
dec
ss
jae
dec
add
(bad)
pop
cmc
mov
icebp
call
imul
dec
(bad)
(bad)
lock
pusha
sahf
push
js
popf
jmp
pop
gs
in
xor
jo
int
(bad)
pop
pop
or
and
imul
xchg
xor
mov
into
sub
int3
xchg
cmc
cmp
jnp
ja
je
fcomp
sbb
mov
js
cld
jnp
sub
(bad)
div
push
pushf
pop
mov
push
and
pushf
mov
lods
out
aas
dec
call
sbb
iret
ja
jg
fist
pop
sahf
daa
adc
xor
cmp
mov
fild
ror
cli
sbb
mov
lahf
call
sti
push
fsub
mov
and
inc
(bad)
adc
cld
mov
pop
mov
jb
test
jge
mov
dec
xchg
js
mov
add
cwde
sar
xchg
mov
clc
sbb
xchg
jns
and
cmp
jmp
gs
imul
dec
and
add
inc
inc
cli
jg
inc
jle
and
test
mov
mov
jns
mov
dec
sbb
add
sbb
sbb
mov
cmp
fstp
inc
mov
fstp
ja
push
int3
aaa
adc
push
lds
push
sub
ret
ss
push
lds
pushf
sub
test
js
jge
or
mov
add
pop
dec
and
int3
pop
or
arpl
xchg
sub
ret
xor
gs
and
shr
xor
jae
sub
inc
repz
jne
retf
cwde
scas
sub
sbb
pop
add
ret
popf
xchg
test
ffree
cmp
dec
fcmovu
pop
ret
stc
mov
leave
leave
mov
push
adc
sub
push
call
pop
fild
jne
mov
loope
call
loop
pop
ins
cmp
push
jl
sbb
and
mov
adc
xlat
cmps
cmovno
push
mov
or
outs
shr
cmps
call
mov
dec
addr16
mov
sbb
jle
test
or
push
pop
mov
hlt
add
mov
mov
cmp
push
(bad)
jmp
scas
outs
adc
lds
mov
lock
push
and
scas
popf
xor
add
sbb
cmp
rol
aas
sti
loop
stos
jecxz
outs
cld
or
(bad)
and
xchg
xchg
push
lods
xchg
sahf
push
mov
ret
adc
fcom
push
sbb
pusha
mov
jp
jp
addr16
jle
cmps
loopne
or
cmp
push
pop
add
xor
push
mov
cmps
sbb
mov
add
mov
xor
ret
les
dec
sar
lock
pushf
jmp
out
or
outs
dec
in
dec
jle
aas
dec
mov
dec
xchg
sti
fucomip
or
mov
mov
mov
inc
rol
aam
ins
adc
push
mov
psadbw
xor
jbe
add
(bad)
cmp
or
daa
test
hlt
dec
pop
cmp
xchg
lahf
adc
out
push
xor
xor
scas
pop
mov
lods
inc
stc
mov
repnz
in
mov
dec
mov
xchg
cmps
cli
ja
fcomp
jne
jle
outs
dec
aam
xchg
test
add
stos
and
push
arpl
cmp
push
repnz
(bad)
cdq
push
mov
jmp
mov
mov
(bad)
aam
push
test
jmp
fs
adc
dec
outs
retf
idiv
sahf
cmp
dec
test
sar
cwde
imul
or
enter
xchg
mov
rcl
dec
xor
iret
mov
xor
sub
push
mov
adc
arpl
sub
dec
mov
cld
test
pushf
mov
jns
xchg
inc
stos
or
jge
sub
call
pop
movs
retf
fst
fidiv
xchg
xchg
loop
jecxz
push
mov
cmps
cmps
jae
mov
mov
sub
sub
scas
xchg
mov
sub
push
pop
lock
jg
jo
ins
dec
pop
out
or
or
aam
je
push
fmulp
dec
repnz
jp
lods
xor
mov
sar
xchg
ret
cmp
mov
imul
mov
adc
push
std
cmps
test
imul
mov
add
call
sahf
(bad)
sub
inc
stos
adc
pop
mov
(bad)
pop
inc
adc
imul
ss
add
aad
gs
add
aam
fcom
lods
and
lds
xlat
sbb
xchg
call
ret
mov
jg
rcr
xchg
ffreep
jp
ins
cmp
aas
push
loop
jno
mov
std
je
(bad)
nop
dec
pop
addr16
ds
add
and
(bad)
(bad)
jecxz
xchg
gs
jbe
pop
push
inc
out
xchg
outs
popf
mov
sar
xor
into
dec
sub
pusha
aas
shl
les
jae
jmp
xchg
cli
xor
inc
inc
fnstcw
cmp
sti
jno
push
hlt
add
cmc
les
stos
jo
inc
pusha
push
or
add
jns
inc
sbb
dec
jno
inc
outs
cmp
add
cmp
ret
gs
jo
dec
outs
mov
mov
lahf
pop
mov
dec
mov
in
fld
loop
mov
cmp
mov
and
int
popf
ss
sbb
imul
mov
cs
push
daa
dec
(bad)
xor
fwait
pop
cdq
xchg
inc
pop
jo
mov
sub
(bad)
stos
int
push
mov
and
mov
data16
dec
je
out
jnp
mov
add
out
or
int
movs
lds
and
ret
test
nop
out
ret
in
fidivr
jae
or
jb
mov
push
jge
jmp
push
inc
cmps
xlat
pop
sbb
std
jne
(bad)
enter
rcl
ja
stos
nop
cdq
jg
push
sub
cdq
fdivr
jbe
inc
jmp
xor
sbb
jp
(bad)
mov
sub
inc
sub
jle
and
lahf
or
call
das
std
popf
sbb
sub
pop
pusha
inc
jnp
sub
xor
retw
cmp
mov
mov
pop
in
stos
repz
fdivr
sub
or
call
ins
les
out
sbb
mov
ins
dec
push
adc
jmp
dec
add
add
ja
loope
push
push
jle
retf
xor
dec
dec
xchg
or
std
xor
inc
iret
dec
jo
mov
dec
ss
pop
pop
ds
mov
pop
aam
call
movs
push
aas
ds
sbb
arpl
xchg
push
(bad)
cs
loop
inc
daa
xchg
imul
jle
cld
push
mov
mov
mov
push
stos
adc
mov
inc
(bad)
mov
dec
mov
dec
or
dec
jmp
add
arpl
adc
fild
sahf
aam
dec
retf
cmp
neg
sub
dec
push
loope
pop
addr16
psrlq
cmp
out
push
iret
das
je
adc
jmp
push
test
imul
sbb
shl
cmp
adc
das
ror
xchg
xchg
pop
inc
(bad)
test
xchg
push
sub
jg
cmp
mov
mov
les
jle
fcmovnbe
daa
jo
jecxz
int
ins
push
xchg
in
or
into
lahf
xchg
sub
test
pop
retf
mov
lock
js
mov
sub
rcl
pop
jb
adc
loop
or
movs
out
fwait
arpl
nop
pop
bound
inc
ins
dec
cmp
lods
(bad)
sub
(bad)
mov
and
call
or
rol
int
js
pop
shr
retf
sub
sub
jge
bound
sbb
adc
retf
test
nop
xchg
test
loopne
xor
retf
mov
jns
mov
dec
sbb
xor
das
or
aad
pop
push
pushf
mov
xor
jle
es
dec
pop
inc
in
pop
mov
mov
cs
imul
mov
jecxz
cs
rol
sub
pop
sub
mov
cmp
cmp
pop
push
or
cmp
stos
daa
push
div
cli
pop
aaa
dec
sbb
or
dec
add
int3
sub
adc
loopne
mov
cmp
add
push
je
add
mov
jg
pop
inc
retf
fimul
push
push
shr
and
push
(bad)
adc
aam
mov
push
pop
clc
add
push
ret
jno
das
gs
xor
jmp
add
sbb
mov
sbb
mov
mov
pop
sbb
mov
fidivr
ror
movs
adc
fldcw
mov
and
jne
jnp
add
cmps
xor
std
out
popf
jne
(bad)
sahf
ja
fiadd
pop
jp
ins
push
xor
repnz
jnp
jg
push
jae
push
into
lods
sar
mov
push
and
movs
pop
and
test
retf
mov
xor
fwait
sbb
or
push
popa
fwait
imul
push
cmp
fs
xchg
adc
cli
std
inc
sbb
dec
xor
pop
jb
mov
lods
inc
push
adc
pop
sar
enter
pusha
loope
out
add
pop
inc
and
xor
push
mov
pop
scas
out
not
sahf
add
push
ds
imul
fsub
xchg
ins
pop
(bad)
hlt
xchg
dec
test
dec
sbb
pushf
jmp
out
adc
sbb
sbb
lea
adc
out
shr
jl
inc
add
xchg
push
add
aad
cmc
pushf
repz
cmps
ret
ins
test
movs
dec
xchg
movs
jecxz
movs
mov
scas
mul
sub
inc
out
sbb
inc
add
add
inc
mov
fwait
ret
fs
add
and
rol
inc
inc
in
out
fild
add
mov
data16
jne
xchg
or
ret
addr16
adc
adc
adc
dec
loope
fsub
dec
and
or
fdivr
inc
add
pop
in
retf
lahf
aam
jmp
rcl
out
(bad)
outs
adc
(bad)
icebp
xor
push
pop
sub
xchg
outs
inc
daa
in
push
xor
or
dec
ds
mov
test
repz
into
cmp
inc
add
adc
inc
pop
loope
inc
push
push
jmp
pop
push
adc
jae
pop
push
dec
mov
push
(bad)
test
jmp
xor
jns
xchg
mov
mov
repz
in
pop
mov
pop
mov
call
cmp
and
jnp
imul
movs
popf
fidiv
jl
xchg
dec
in
scas
jl
jecxz
cmc
test
mov
ret
or
outs
lea
fistp
addr16
push
cmp
je
ja
pop
in
inc
push
pop
cmc
add
test
pop
sbb
jle
repnz
cmp
call
or
xchg
ret
leave
mov
mov
rcl
out
xchg
div
pushf
cmps
in
lds
jecxz
ins
out
mov
out
mov
stos
mov
rcr
arpl
dec
push
xor
(bad)
(bad)
mov
ror
xor
inc
jecxz
mov
aaa
jl
pop
sti
xor
pop
add
jge
xor
les
adc
pop
mov
lods
ror
cmp
sbb
and
adc
jbe
ins
cmps
call
test
jne
rcl
add
ja
movq
jg
push
xchg
dec
or
std
mov
pop
test
xchg
popa
add
es
xor
inc
add
je
fs
dec
and
and
ins
or
sub
push
and
dec
push
out
mov
adc
mov
popf
rcl
(bad)
scas
cld
mov
rol
div
pop
(bad)
xlat
(bad)
jmp
js
sti
mov
dec
pop
test
pop
in
cmc
pushf
mov
clc
sbb
ins
adc
retf
adc
dec
xor
xlat
cmp
pushf
rol
jb
and
mov
scas
lods
jmp
pushf
mov
jl
imul
cwde
dec
(bad)
or
lahf
fidivr
or
out
mov
movs
sar
std
mov
loop
les
iret
jb
lahf
add
pop
sbb
sbb
adc
push
hlt
push
inc
and
ds
push
mov
fwait
mov
nop
rcr
div
xor
pop
ret
jge
push
in
iret
jb
push
in
scas
int
lods
idiv
cli
mov
xor
dec
lds
mov
cli
stos
fldenv
(bad)
imul
inc
push
or
clc
jmp
pushf
jne
adc
xor
sbb
adc
push
jmp
enter
dec
jge
push
sub
aas
push
adc
cmp
jle
stos
into
cwde
sbb
lds
pop
cmp
aam
pop
lock
daa
out
lods
leave
test
(bad)
jbe
push
and
test
fmul
rcl
hlt
xchg
dec
adc
aad
repnz
mov
outs
mov
loop
into
stos
repnz
fisttp
xor
(bad)
jnp
cld
lahf
rcr
bound
inc
adc
adc
es
add
(bad)
xlat
mov
lods
int
sbb
jnp
ss
push
inc
mov
loope
retf
(bad)
int3
xchg
cmps
cmc
(bad)
fidivr
enter
dec
cmp
daa
jl
pop
sbb
adc
lahf
(bad)
ins
cli
outs
sub
jl
push
jns
push
pop
push
ss
push
jecxz
fstp
jecxz
fcomp
scas
neg
dec
cmp
push
sbb
dec
cmp
adc
aas
js
sub
pop
xlat
xchg
mov
add
nop
push
dec
pop
adc
out
mov
lods
call
sub
pop
cmp
pop
lock
jg
scas
idiv
sub
cmps
les
cmps
test
out
jnp
je
pop
sbb
rol
ds
sbb
cmp
sbb
xor
test
mov
(bad)
add
pop
stc
loop
ror
jecxz
dec
cdq
shl
xor
cmp
daa
jmp
mov
lahf
les
nop
inc
adc
and
stos
rol
movs
mov
add
jle
jmp
xor
mov
mov
pop
lods
ror
inc
cmp
das
out
dec
or
pop
push
pop
add
push
push
retf
and
jge
push
push
dec
jecxz
int
loopne
int3
mov
add
stos
outs
cmps
shl
repnz
mov
enter
aam
cli
pop
mov
mov
xchg
mov
adc
mov
imul
icebp
call
dec
and
sbb
xchg
mov
(bad)
icebp
mov
lds
cli
jge
mov
int
test
lahf
gs
inc
or
outs
xor
push
inc
sub
popa
or
addr16
and
rol
stos
call
lods
into
mov
nop
lods
ficomp
push
xor
adc
add
aas
repz
aas
inc
mov
enter
fnstcw
inc
daa
push
jne
jns
jae
jnp
pop
dec
mov
lds
mov
fstp
add
repnz
pusha
ds
ds
ja
jle
mov
js
jmp
in
xor
lods
hlt
lea
mov
xchg
(bad)
xchg
fidiv
pop
mov
dec
or
outs
les
xor
pop
and
add
sub
leave
outs
cvtps2pi
xchg
aad
lahf
loope
clc
sub
add
mov
xchg
test
test
cwde
mov
push
cmp
xor
addr16
inc
add
outs
sbb
sub
jg
pop
push
icebp
test
jbe
dec
pop
repnz
cdq
add
imul
(bad)
mov
xchg
cmp
add
imul
pop
sbb
pop
jecxz
cli
cwde
retf
mov
imul
or
jge
sub
sbb
push
sbb
ss
inc
pop
std
movs
xlat
call
into
cmps
call
shl
into
mov
xchg
scas
sub
jg
idiv
fwait
js
dec
adc
push
add
mov
fcomi
cmps
in
shr
repnz
mov
xchg
fstp
sub
hlt
cmps
xchg
addr16
pop
loopne
or
fnstsw
mov
scas
in
lods
fimul
mov
cmp
inc
cmp
xchg
dec
jecxz
inc
or
loopne
xchg
ret
mov
add
inc
inc
add
sub
mov
mov
xor
fild
loopne
imul
or
xchg
stos
repnz
push
test
inc
push
pop
add
push
dec
or
popw
arpl
inc
(bad)
in
aad
xor
imul
mov
mov
add
mov
or
and
adc
sub
jle
push
sbb
push
mov
stos
in
scas
cmp
mov
pop
inc
adc
or
outs
or
dec
mul
out
xchg
fdivr
add
ror
mov
sbb
jmp
int
xor
cdq
mov
inc
jp
sti
and
fmul
add
push
lods
mov
jmp
lock
pushw
clc
mov
nop
fdiv
and
ret
mov
add
shl
pop
push
pop
sbb
dec
icebp
arpl
xor
outs
add
(bad)
inc
adc
scas
in
mov
lods
call
push
and
push
sub
sub
sar
xchg
(bad)
mov
dec
or
pop
fs
adc
pusha
sub
push
or
xchg
rol
fidivr
rcr
push
adc
push
repz
imul
movs
lock
adc
xchg
rcl
ficomp
fcom
fcomp
inc
not
js
dec
or
sahf
jmp
mov
call
mov
inc
shl
rcl
xchg
rol
jo
mov
(bad)
fs
or
push
lods
inc
pop
ds
pop
out
push
or
sub
fadd
push
push
dec
xor
neg
xchg
pop
aas
arpl
inc
jle
pusha
push
sub
pop
sbb
adc
lahf
in
mov
dec
enter
adc
jno
ss
jg
sub
jle
in
push
nop
inc
add
pop
push
ja
inc
ret
sbb
push
jae
mov
xchg
jne
das
jbe
xlat
jmp
cmc
cdq
dec
je
dec
sbb
pop
mov
sbb
push
push
and
push
dec
or
sbb
mov
xor
push
out
ins
sub
call
dec
in
mov
popa
sbb
movs
(bad)
xchg
aad
push
adc
fs
mov
nop
ret
pop
mov
aad
add
dec
pop
push
xor
imul
rol
xlat
mov
push
or
sub
dec
hlt
dec
mov
jg
jo
sub
jecxz
cdq
cmc
adc
sbb
jp
repnz
or
ins
adc
into
mov
cmp
push
cmp
je
ja
and
pop
arpl
jp
sub
push
push
jno
and
push
or
ins
push
cmp
loop
cli
xchg
mov
aas
pop
in
lods
push
xor
jle
push
jns
push
sub
div
cs
stos
push
xor
jge
mul
pop
adc
push
mov
rcl
mov
pusha
fldcw
loop
or
pop
lock
in
mov
out
retf
push
sbb
jg
cs
add
or
jns
mov
xchg
repnz
add
xor
ins
das
jnp
jp
data16
clc
mov
mov
adc
xor
mov
bound
cmp
push
out
retf
mov
adc
nop
rol
mov
stos
movs
int3
lahf
int3
mov
arpl
repz
lahf
mov
cmp
outs
sub
icebp
mov
fwait
dec
cmc
mov
scas
div
ret
mov
jnp
cli
mov
fwait
std
mov
test
loope
or
jge
daa
sub
dec
adc
shl
sub
imul
add
leave
mov
xchg
scas
clc
mov
pusha
add
ja
jg
and
sub
push
in
mov
shr
mov
xor
(bad)
adc
pop
out
not
push
cmps
aad
dec
(bad)
mov
test
addr16
and
sub
push
std
cdq
mov
test
mov
mov
idiv
lods
add
retf
push
and
loope
cmp
sar
and
std
minps
inc
xor
out
mov
fistp
push
dec
adc
lods
hlt
jle
push
jne
andps
mov
shl
xor
jbe
cmp
and
pushf
ins
sub
jge
arpl
push
or
xchg
ror
push
mov
cmp
inc
add
cmp
push
ror
mov
jmp
leave
test
fmul
aaa
inc
cmps
add
sbb
out
mov
stos
test
loop
dec
or
test
xchg
shr
sbb
sub
jae
lods
not
retf
mov
es
jae
push
add
int
(bad)
adc
cdq
sar
or
sub
js
retf
repnz
retf
cwde
fisub
mov
and
sbb
inc
xor
outs
or
addr16
push
sub
cmp
or
ret
xchg
mov
mov
sti
push
push
sbb
scas
test
sar
dec
sub
push
or
add
es
sbb
call
pop
push
mov
add
and
shr
icebp
mov
jmp
lock
retf
jge
push
enter
sub
sbb
inc
add
jo
pop
add
push
mov
or
sbb
and
adc
push
adc
cs
xor
and
mov
sbb
pop
dec
cs
les
retf
mov
pop
mov
jp
push
jecxz
ja
inc
add
mov
mov
mov
jne
add
mov
mov
jmp
jecxz
or
add
adc
(bad)
mov
mov
adc
xor
xor
dec
add
imul
scas
repnz
sub
mov
mov
xor
pop
xchg
jb
jbe
popa
mov
xchg
fstp
jmp
dec
mov
jmp
addr16
sbb
imul
lds
jo
retf
inc
fld
dec
ds
adc
inc
adc
jl
in
ret
mov
clc
xchg
lods
fidiv
pop
push
and
addr16
jns
je
inc
or
push
cmp
movs
(bad)
mov
sbb
arpl
or
push
scas
cld
(bad)
ror
jnp
push
in
pop
outs
cmp
rol
jns
cmovl
addr16
push
clc
out
rcl
xor
pop
sbb
adc
jno
sub
inc
adc
neg
jge
ror
dec
jecxz
repz
div
iret
mov
test
popf
rcl
data16
outs
idiv
mov
mov
mov
jb
inc
loopne
or
or
pop
push
pop
(bad)
mov
sahf
fcmovnbe
addr16
adc
mov
xchg
repz
repnz
loop
ror
mov
xchg
dec
sub
gs
inc
add
add
adc
pop
push
inc
pop
push
xor
push
ror
in
scas
loope
arpl
shl
jmp
or
or
fld
sub
std
mov
stos
loope
imul
mov
lahf
in
(bad)
leave
aas
retf
addr16
nop
movs
int
dec
arpl
pop
in
in
clc
mov
ins
cs
lock
bound
jne
dec
or
nop
(bad)
xchg
(bad)
shr
rcl
popa
pop
arpl
jo
xchg
fiadd
loopne
jecxz
lds
cmp
(bad)
adc
ret
es
out
std
mov
mov
iret
stos
popa
mov
lods
movs
out
(bad)
xchg
jl
or
loop
push
mov
dec
cs
mov
pop
lea
test
xchg
cld
mov
rcl
ins
push
push
sbb
push
aad
mov
out
push
imul
and
and
call
out
sti
push
pop
sub
mov
outs
sub
adc
mov
push
cs
inc
in
(bad)
mov
add
sbb
mov
std
cmps
scas
daa
push
or
dec
and
fnstsw
nop
(bad)
lahf
icebp
imul
rcr
and
popa
cmp
cmp
in
or
fidiv
sub
mov
and
cmp
xchg
rcr
mov
loopne
retf
mov
cmp
jge
xchg
retf
test
rol
stc
or
and
pop
pop
ret
ins
or
call
sub
inc
les
out
lods
into
aaa
pop
adc
js
mov
cld
mov
xchg
xchg
in
pop
xor
jnp
jbe
mov
cmp
pop
in
push
dec
mov
jo
(bad)
jmp
and
cli
add
bound
dec
mov
ins
add
rol
bound
pop
xchg
dec
push
addr16
leave
(bad)
aam
pop
daa
outs
aaa
xor
add
mov
cdq
retf
sub
popf
sti
mov
sbb
xor
adc
dec
mov
dec
or
cmp
and
xlat
adc
repnz
mov
adc
ja
test
vpcomud
jae
test
sub
je
outs
or
adc
dec
push
cmp
je
push
out
cmp
(bad)
xchg
lods
leave
jne
pop
xor
imul
ret
adc
rcr
xor
imul
fistp
std
xchg
xor
out
mov
stos
mov
cdq
fst
dec
or
pop
push
retf
pop
and
sub
ja
aaa
pop
sbb
ror
inc
cmps
test
mov
imul
sbb
mov
inc
mov
mov
mov
jmp
addr16
and
imul
add
int3
cmp
je
lock
arpl
and
ret
bound
cmp
pop
add
pop
push
dec
neg
pop
aaa
inc
in
mov
(bad)
test
push
and
arpl
pop
cmp
jo
push
or
out
mov
ja
or
(bad)
stos
movs
enter
rcr
in
aam
ret
mov
mov
mov
xchg
xlat
mov
lods
loop
dec
or
and
pop
cmp
fst
outs
mov
xchg
fistp
mov
test
lahf
mov
lods
fsub
addr16
iret
jb
push
sbb
cmp
ins
sub
js
mov
call
push
and
(bad)
movs
jmp
inc
add
or
jo
jle
jae
jnp
xor
pop
adc
and
movs
cmc
mov
xchg
jp
aas
pop
out
addr16
aaa
jo
inc
xchg
xor
loopne
fistp
mov
dec
cmp
rcr
into
xchg
xor
clc
(bad)
div
aad
int
stos
mov
hlt
call
jns
aad
fld
push
jb
ja
jg
mov
pop
mov
es
or
jo
push
cmc
arpl
pop
or
and
call
add
pop
js
push
or
dec
adc
cmp
aaa
xchg
hlt
fwait
mov
mov
div
push
or
or
shl
out
outs
mov
imul
push
out
movs
in
adc
es
(bad)
cmps
mov
push
inc
idiv
out
mov
movs
loope
or
dec
in
js
pop
adc
stc
adc
outs
or
and
fidivr
lods
hlt
daa
inc
mov
sub
les
rol
jge
pushf
cmps
in
xchg
int3
mov
mov
or
jge
shr
fmul
dec
or
push
dec
adc
mov
lods
iret
addr16
mov
leave
cmp
sbb
(bad)
pop
pop
add
jno
dec
ror
inc
xor
sbb
jg
dec
das
jae
inc
xor
sub
js
and
pop
pop
ins
aas
jl
jge
or
lds
inc
push
dec
pop
cmp
daa
push
pop
sbb
daa
pusha
sub
jecxz
leave
pusha
adc
xor
fbstp
pop
add
inc
loop
fistp
mov
mov
cmp
pop
lea
dec
add
jge
dec
cmp
sub
dec
sub
add
jmp
daa
popa
es
jmp
pop
repnz
lds
jge
dec
hlt
js
popf
pop
and
ins
aaa
dec
sbb
push
test
add
dec
or
add
add
mov
sahf
enter
pusha
inc
andnps
pop
jge
jge
jp
leave
frstor
dec
mov
cmps
sbb
inc
add
stos
inc
mov
ret
mov
mov
and
and
push
and
or
mov
add
add
aaa
in
push
into
xor
sub
dec
or
ret
cmp
in
xor
icebp
inc
mov
mov
js
jne
xor
sub
inc
rol
pop
mov
jne
pop
and
lods
rcr
pop
test
lods
inc
test
fwait
js
ins
push
cld
pop
lods
je
or
pop
fild
into
mov
mov
ror
inc
push
lock
hlt
push
mov
mov
push
enter
inc
mov
cmps
xchg
jp
jbe
pop
mov
(bad)
retf
sub
push
mov
es
(bad)
cmp
inc
stos
imul
shl
or
sbb
cmp
pop
(bad)
cs
and
loop
scas
inc
mov
stos
xchg
(bad)
jnp
imul
and
xor
push
cld
pop
mov
stc
cmp
loop
mov
and
sub
imul
jmp
jp
in
fld
sbb
push
mov
dec
test
je
cmp
sub
inc
mov
mov
add
push
sar
retf
pop
add
sub
ds
daa
cmc
push
out
pop
xchg
aas
sbb
pop
icebp
daa
in
or
fadd
int3
cs
jp
gs
adc
and
bound
jmp
jmp
retf
inc
test
push
lds
dec
jmp
sbb
add
aas
add
jmp
dec
ror
push
dec
into
sub
add
pop
test
movs
test
add
xor
add
push
push
shl
aam
cld
inc
mov
dec
test
sar
jp
xchg
inc
rol
cld
push
repz
ss
and
imul
cmp
retf
and
pop
lds
xchg
leave
jp
sbb
add
push
out
pop
sar
out
add
add
out
pop
lods
jl
sub
dec
mov
stc
pop
not
xor
es
add
or
daa
loop
cs
aaa
push
retf
sub
jmp
xchg
dec
fnstsw
in
push
rol
jnp
ins
fdiv
pop
cli
sub
jmp
shl
in
mov
sub
sbb
sub
or
pop
mov
das
push
pushf
dec
fidivr
into
or
int
les
lds
adc
repz
movs
sahf
jns
js
cmp
es
push
shl
cmc
and
cld
cmp
mov
js
mov
inc
fdivr
in
push
cmps
nop
cwde
addr16
dec
mov
mov
mov
xchg
ja
jbe
jno
cdq
outs
mov
stos
mov
imul
adc
push
rcl
pusha
rol
or
or
or
cmp
cmp
repnz
addr16
aas
clc
pop
stc
push
cmp
retf
dec
mov
xor
out
mov
push
nop
jp
xor
sub
shr
adc
daa
jecxz
call
cdq
ins
cmp
retf
cmp
xor
push
retf
and
sti
pop
aad
xchg
imul
shr
lods
jno
sbb
sbb
dec
fidivr
jmp
mov
xchg
inc
fdivr
or
pop
mov
xor
cmp
sub
cmp
call
into
cs
sar
int
out
sub
sub
sbb
dec
movs
inc
scas
dec
xchg
and
cs
mov
push
sbb
or
xchg
xchg
inc
cmps
fwait
inc
push
sbb
add
imul
and
xor
add
push
into
xor
mov
mov
shl
push
ret
loope
out
cli
mov
sub
jl
push
mov
mov
loopne
mov
cmps
aam
xor
mov
test
jno
cmp
dec
mov
push
mov
mov
stc
jg
sub
mov
jle
ins
test
jmp
call
or
mov
dec
fstp
ss
mov
out
mov
mov
xchg
cmps
aad
les
outs
push
sub
xor
push
enter
neg
mov
inc
mov
adc
scas
cdq
ins
mov
and
mov
inc
aad
int
cld
pop
fidiv
ret
aas
stc
inc
scas
nop
mov
xor
push
lds
cmp
ins
cmps
scas
xchg
push
jp
pop
mov
sub
and
and
icebp
ds
pop
(bad)
xor
(bad)
stos
lahf
popa
stos
dec
mov
(bad)
pop
mov
mov
mov
mov
xor
and
pop
stos
mov
adc
in
aam
int
adc
dec
mov
ficom
out
imul
and
cmc
sub
jge
jbe
push
cli
push
mov
test
inc
lock
cwde
mov
sbb
push
adc
bound
mov
jg
pop
ret
stos
push
out
repnz
(bad)
pop
lods
inc
xchg
jae
or
les
adc
pop
fdivr
pop
sub
dec
cmps
xchg
adc
or
add
add
jae
xchg
jae
stos
dec
test
or
idiv
pushf
xchg
mov
sahf
dec
test
mov
fidiv
cld
ins
int
and
(bad)
enter
(bad)
add
sbb
add
rcl
imul
cli
pop
not
cmp
pop
mov
cmp
mov
dec
mov
stc
cmp
push
xchg
push
iret
es
push
les
jl
xchg
jle
push
rol
sub
fldcw
push
cmps
test
push
in
fisub
repz
inc
out
mov
jge
and
pop
fild
add
push
stos
pushf
pushf
pushf
dec
mov
je
or
in
test
in
mov
outs
les
mov
pop
movs
nop
imul
stos
jle
xor
add
retfw
fadd
pushf
mov
jle
xchg
dec
shl
adc
pop
imul
jbe
sbb
adc
les
in
add
cli
mov
scas
addr16
sbb
dec
mov
hlt
inc
mov
loope
add
xor
stos
imul
stos
test
and
das
sbb
cmp
xor
dec
aad
cld
and
out
movs
push
sbb
pop
mov
imul
add
add
ds
ds
es
pop
adc
push
fdivr
jmp
pop
movs
and
sar
cld
sub
test
dec
cmps
outs
fimul
inc
(bad)
cmp
sub
inc
ret
add
and
ss
xor
sbb
pop
(bad)
push
xor
push
push
in
daa
icebp
push
or
fdivr
mov
aas
jl
push
mov
dec
ror
xor
pop
fidivr
loop
xchg
xor
push
and
sahf
out
jbe
and
neg
jns
jge
cs
jmp
pop
test
pop
jmp
xchg
cmp
test
mov
test
mov
stc
and
cmp
cmp
sub
adc
push
xchg
jae
or
xor
pop
and
mov
imul
(bad)
push
lods
xchg
imul
loop
sti
sub
adc
or
and
xor
and
out
pop
scas
mov
sahf
inc
les
div
addr16
cmp
add
add
out
jb
dec
push
sub
fidiv
icebp
and
mov
jb
cli
and
sbb
push
loopne
aam
retf
mov
adc
cli
push
aam
cld
arpl
daa
adc
cwde
nop
(bad)
int3
dec
icebp
push
mov
push
mov
sti
push
sar
sti
pop
test
mov
mov
add
pop
mov
call
mov
imul
into
cmp
jl
lea
push
fiadd
iret
aaa
aaa
cli
push
test
fimul
inc
mov
(bad)
xchg
outs
int
xchg
lahf
ja
lahf
dec
jmp
sar
jmp
push
out
dec
(bad)
cs
icebp
cmp
xor
test
lods
shl
pop
mov
and
pop
xchg
ins
retf
dec
fild
hlt
and
out
mov
fcom
mov
xor
in
pop
fnstenv
ret
and
rcr
call
cmps
xchg
mov
and
es
pop
sub
xchg
jge
cwde
nop
jnp
xchg
inc
aad
sub
sti
push
lods
xchg
dec
mov
out
pop
fisttp
cmp
lds
sbb
inc
icebp
and
inc
(bad)
add
retf
push
retf
pusha
shl
sub
sbb
clc
dec
shr
ins
ret
xchg
push
mov
cmps
mov
push
shl
in
stos
popa
aad
pop
sbb
repz
push
fdivr
cs
xor
dec
mov
xchg
xchg
frstor
or
aas
call
loope
test
mov
out
leave
add
or
sbb
aaa
sbb
and
sbb
js
nop
ins
(bad)
cli
cmp
dec
xchg
out
inc
frstor
or
push
int
jmp
or
fst
cmp
xchg
xchg
or
cdq
inc
mov
les
loopne
adc
and
mov
fild
neg
or
and
jl
js
popa
fbld
call
add
push
fild
add
dec
sub
scas
adc
out
push
mov
test
sub
das
repnz
and
pop
mov
mov
dec
mov
fstp
add
sbb
loopne
mov
(bad)
cmp
scas
cdq
inc
mov
es
cmp
das
shr
or
sub
mov
nop
jnp
push
in
dec
jmp
dec
mov
jge
fsubr
push
test
pop
push
out
lods
popf
fdivr
add
cld
pop
stc
push
mov
xchg
movs
jg
out
and
inc
into
pop
mov
neg
dec
fistp
cmp
fdiv
in
std
dec
stos
fs
xchg
outs
int
iret
push
mov
(bad)
cmp
mul
sbb
es
in
mov
and
std
push
mov
jno
iret
inc
mov
push
hlt
pop
test
popa
sub
test
mov
add
hlt
or
pop
xlat
daa
xor
and
and
jne
sbb
je
aas
into
cmp
test
fs
aad
adc
mov
push
jbe
bnd
fs
adc
inc
fistp
in
stos
mov
inc
retf
pop
adc
pop
mov
add
xor
push
ins
aad
loope
call
jbe
cmp
lds
lea
cs
test
call
inc
xchg
mov
call
outs
movs
xchg
inc
sbb
xlat
xor
pop
into
pop
sbb
jmp
sti
paddd
sahf
push
mov
fldenv
psllq
jle
or
xor
xchg
push
test
mov
fist
je
xor
push
mov
jno
dec
mov
jae
addr16
sub
push
ins
cmps
push
xor
xchg
push
or
mov
out
sbb
add
push
aam
in
mov
lds
pop
call
mov
xchg
call
dec
mov
shl
inc
sub
ret
sub
and
div
or
sbb
mov
(bad)
ins
stos
xchg
icebp
jge
jb
pusha
mov
iret
ins
mov
inc
mov
in
mov
jne
push
mov
je
aas
stc
or
test
scas
inc
mov
out
xor
pop
stos
ja
push
push
je
aas
loopne
cmc
daa
and
int3
pop
lods
stos
push
in
pop
stos
jl
cmp
das
push
leave
dec
cmps
lea
xor
inc
mov
inc
loopne
sar
cmp
ds
pop
push
or
push
test
pop
scas
xchg
(bad)
enter
or
sub
das
in
lods
inc
mov
and
mov
add
and
cmp
dec
mov
loope
cmps
lahf
dec
(bad)
jns
sahf
(bad)
fnstcw
adc
stos
jae
push
add
shr
daa
in
push
movs
data16
repz
push
cmp
pop
out
dec
fistp
jnp
jbe
stc
inc
mov
lahf
dec
enter
cmp
sub
int
and
sbb
ret
aaa
add
add
dec
push
push
(bad)
push
mov
add
jmp
jo
jno
add
mov
call
out
sbb
les
icebp
dec
mov
xchg
jns
jle
retf
jns
popf
inc
aam
add
mov
jns
mov
in
mov
mov
cwde
cdq
inc
retf
and
xor
sbb
sti
aaa
adc
dec
xor
aad
repnz
(bad)
jo
imul
adc
pop
xchg
call
(bad)
ja
lahf
stos
lds
call
xchg
push
mov
imul
push
mov
ret
or
adc
and
aaa
push
cli
adc
stc
mov
jge
gs
out
adc
xchg
mov
inc
ret
dec
xchg
push
scas
dec
xchg
scas
lahf
push
mov
mov
mov
xchg
jnp
xchg
dec
int
fbstp
out
lods
outs
movs
xchg
je
cs
lds
pop
jl
psubsw
dec
enter
das
ja
dec
mov
cmp
sbb
das
dec
mul
adc
es
and
int
sbb
pop
adc
mov
mov
push
ror
jge
pop
lods
xchg
cwde
inc
int3
add
inc
rcl
icebp
inc
ficomp
ins
xor
sub
(bad)
pop
adc
pextrw
and
fdiv
mov
inc
mov
mov
inc
leave
pop
jecxz
pop
stos
xchg
push
(bad)
push
add
in
pop
(bad)
imul
icebp
subps
mov
sar
ds
in
adc
ret
pop
mov
mov
test
ja
jae
daa
lds
mov
lea
sbb
xor
rcr
or
loopne
clc
and
pop
xchg
popa
rcr
pop
xchg
jne
pop
test
mov
hlt
shr
rcl
nop
dec
ret
xor
inc
sar
std
push
stos
fistp
push
mov
mov
add
pop
stos
call
adc
outs
xor
add
xchg
ds
cmp
push
sbb
fadd
enter
outs
leave
fwait
mov
xor
pop
mov
xor
pop
retf
add
xor
es
inc
aam
or
cmp
pop
call
inc
mov
lahf
fdivr
or
aaa
sbb
or
push
mov
sti
pop
mov
or
not
or
std
cmp
pop
rcl
retf
sub
and
mov
mov
lea
cmp
xor
sub
(bad)
aas
cmp
pop
repz
xor
cmp
les
mul
lea
arpl
je
daa
loopne
xchg
pop
lods
mov
clc
dec
cli
cwde
call
dec
shr
inc
mov
add
sbb
xor
cmp
sbb
test
lock
int3
dec
ret
push
cmps
mov
add
dec
retf
enter
loop
jnp
xor
add
test
data16
mov
mov
ja
jns
jle
dec
or
pop
pop
(bad)
push
fistp
cwde
inc
retf
sub
sbb
lock
mov
xor
and
push
iret
es
es
imul
inc
iret
sub
std
pop
sub
cmp
retf
movs
xchg
inc
ror
sti
pop
mov
or
repnz
in
adc
stc
sub
lods
inc
int
mov
retf
cmp
jae
pusha
rcr
pusha
jmp
enter
fwait
dec
mov
xchg
jb
jge
inc
sar
adc
dec
aam
cld
sub
sbb
pop
loopne
shr
push
xor
sub
inc
cmps
imul
sar
rcr
xchg
xlat
arpl
outs
stos
and
js
adc
cmps
fs
cmp
int
mov
mov
pop
xor
and
pop
test
fisubr
(bad)
xor
pop
fldcw
push
or
add
or
dec
adc
icebp
inc
int3
pop
xchg
inc
mov
xchg
out
cmp
sbb
and
mov
je
pushf
push
mov
jno
out
mov
popa
mov
data16
in
pop
cmp
and
in
xor
in
es
es
cmps
lods
fwait
push
ret
push
test
leave
pop
scas
xchg
dec
lods
jae
repnz
cld
rol
mov
and
enter
mov
cmps
xchg
jae
outs
fstp
push
cmp
push
mov
xchg
pushf
inc
xor
ret
adc
push
mov
pop
mul
inc
(bad)
xor
and
pop
fsubr
sbb
inc
retf
mov
outs
enter
push
test
and
pop
mov
out
es
jno
dec
mov
pusha
into
xor
sub
and
test
cmp
and
xchg
sahf
popa
mov
je
add
ins
retf
xor
push
mov
jnp
pop
mov
scas
cwde
push
xchg
inc
test
es
popa
rol
pop
stc
pop
test
iret
cmp
fs
ins
mov
mov
jb
sti
and
in
pop
repz
or
mov
data16
(bad)
jb
jl
sbb
push
mov
fnstcw
js
sub
sahf
jl
icebp
cmp
push
fld
jmp
fist
push
mul
pop
sbb
push
scas
cmp
jb
aas
push
out
loopne
loopne
fsubr
ins
mov
adc
add
jne
jbe
sub
push
cld
sub
pop
sbb
push
ret
and
std
cmp
imul
mov
mov
rcl
or
push
mov
jmp
scas
cwde
jbe
into
sub
pop
mov
inc
shl
clc
dec
stos
xchg
add
or
sub
imul
fld
hlt
jge
ins
fdiv
cmp
pop
retf
xor
xor
push
adc
int3
cmp
in
les
dec
mov
sbb
inc
mov
mov
repz
test
aad
mov
or
dec
movs
xchg
ins
mov
pop
push
pop
sbb
out
and
and
hlt
push
mov
hlt
cs
jae
jno
arpl
aaa
aam
mov
and
loop
retf
cmp
cdq
ins
paddw
aas
enter
fisub
ret
add
jp
xchg
and
stos
mov
das
pop
cmps
jle
sub
and
pop
fst
mov
jp
push
cmp
into
xor
pop
leave
and
cmc
push
fiadd
in
pushf
jbe
ss
icebp
push
mov
and
sahf
inc
or
int
idiv
pop
mov
pop
fadd
clc
push
lock
xchg
inc
(bad)
jb
ins
mov
push
or
icebp
dec
aad
or
dec
jecxz
les
loope
lods
pusha
int3
or
add
cs
push
fstp
mov
inc
xor
icebp
inc
mov
aad
stc
sub
jle
xchg
jno
les
call
sub
xor
data16
jne
cwde
push
leave
push
mov
fwait
jne
xchg
pop
xor
and
adc
xor
push
mov
dec
lods
je
in
es
pop
fldenv
lds
mov
lahf
jge
mov
cdq
lea
jge
cmp
add
and
lahf
xchg
test
jl
imul
adc
sbb
add
xlat
cmp
hlt
or
pop
mov
xor
call
in
dec
jnp
fwait
dec
lods
outs
mov
icebp
push
mov
dec
mov
cmps
nop
imul
fstp
jl
xor
cmp
inc
fiadd
loop
in
and
loope
cmp
mov
sti
ss
jge
or
cli
and
inc
ror
not
paddw
bound
jp
and
jnp
jno
jle
xchg
clc
push
or
jl
cmp
idiv
and
pop
lods
jl
lahf
inc
stc
cmp
pop
fdivr
dec
mov
xchg
xchg
jnp
mov
jb
add
push
cld
aaa
jmp
cli
sbb
fwait
dec
fadd
sbb
cs
in
test
movs
mov
sbb
hlt
pop
mov
mov
retf
cmp
ds
inc
cld
and
std
pop
fiadd
shl
xlat
pop
fisub
and
or
inc
mov
ficom
pushf
mov
push
mov
and
in
adc
cmp
pop
mov
int
or
pop
fmul
sbb
and
sub
push
mov
dec
cmps
ins
(bad)
push
fisubr
add
stc
daa
repnz
inc
fldcw
add
call
daa
repz
(bad)
into
xor
sub
sbb
sbb
js
call
push
(bad)
push
mov
fcomp
jbe
neg
jp
data16
lds
(bad)
mov
jp
push
scas
shl
dec
mov
dec
mov
pusha
enter
pop
or
pop
cmps
outs
icebp
pop
mov
xchg
cwde
xchg
jno
das
sbb
lock
sub
jecxz
pop
sbb
push
rcl
push
mov
xor
(bad)
sub
jno
add
xchg
push
add
mov
sbb
pcmpgtd
pop
(bad)
ins
xchg
pop
cmp
jo
ja
lock
fmul
popa
and
test
mov
sub
jae
pop
sbb
shl
inc
or
pop
xchg
aad
jo
push
xor
clc
push
sbb
adc
push
inc
pusha
and
pusha
test
or
iret
mov
lods
(bad)
addr16
sub
add
jae
repz
and
ins
int
jl
pushf
fmul
pop
xlat
mov
mov
ins
daa
dec
cmp
test
and
xchg
faddp
sbb
jmp
pop
xlat
push
push
push
mov
push
push
or
dec
aaa
in
or
ror
sbb
js
into
jb
dec
xchg
xlat
push
dec
loop
jb
jle
rcr
aas
fsubr
bound
ret
cdq
pop
repnz
mov
(bad)
xchg
and
cwde
jae
js
xchg
push
sbb
stc
stos
cmp
popa
add
pop
arpl
inc
cdq
fild
popf
test
movs
inc
lds
pop
loopne
scas
in
mov
xor
movs
aad
sbb
sub
addr16
mov
not
lds
mov
xchg
ror
pop
or
mov
pop
in
ror
ins
aas
push
sahf
test
mov
mov
cmp
nop
fucom
mov
jbe
push
out
icebp
cmp
push
cmp
inc
cmovl
je
loop
out
jmp
mov
imul
add
inc
(bad)
aad
push
data16
push
adc
push
ss
mov
cmp
cmps
jp
pop
fistp
ret
(bad)
cld
mov
inc
stos
lods
int3
add
jg
jle
cld
mov
sbb
add
jmp
jl
push
cmp
in
aad
push
sbb
in
aad
inc
dec
xlat
xchg
ret
sub
test
movs
inc
push
sbb
inc
mov
cmp
sub
fidiv
xor
int
jb
and
sar
inc
sbb
xchg
dec
add
cli
xchg
mov
dec
or
inc
popf
shl
push
jno
jmp
(bad)
sti
mov
inc
sub
popf
sub
pop
hlt
outs
sbb
mov
je
push
push
dec
test
pop
hlt
xchg
rol
push
lahf
call
movs
std
cmp
call
ins
or
add
pusha
mov
ror
ins
shl
sti
mov
xchg
pop
or
loope
popf
fdiv
xchg
rcl
jmp
cmp
std
pop
push
aas
xchg
ret
add
add
out
call
int3
xor
dec
pop
xchg
repnz
mov
mov
jecxz
addr16
sub
in
mov
xchg
and
bound
inc
test
fstp
aas
jge
fs
cdq
out
pop
pop
jnp
(bad)
(bad)
jnp
and
ins
aad
call
jnp
cmp
push
adc
xlat
xchg
out
std
sub
stos
cmps
int3
adc
repnz
sbb
out
pop
ret
pop
in
adc
and
add
aam
ja
xchg
lock
jmp
inc
call
in
adc
ins
stc
out
mov
jns
ret
mov
rcl
loopne
stos
outs
or
les
mov
nop
jecxz
cdq
scas
or
xchg
add
int
iret
inc
ss
mov
push
es
ins
das
dec
sub
mov
mov
inc
or
push
mov
sub
inc
add
loope
mov
or
jp
jo
jbe
cmp
jp
mov
outs
and
sub
mov
mov
test
inc
dec
push
inc
sbb
or
xor
pusha
in
loope
push
cmp
shl
adc
js
cld
push
inc
sub
bound
ins
sub
into
scas
test
sub
sub
inc
sbb
push
mov
jns
mov
popa
adc
add
(bad)
nop
retf
out
out
imul
cmp
aam
and
(bad)
mov
cwde
iret
lods
inc
fs
into
ret
lods
fcomp
fisub
cld
xor
aam
les
loop
sub
xlat
sar
sbb
movs
test
add
pushf
and
or
fwait
out
mov
bound
jnp
aam
into
test
mov
mov
repz
pop
or
cmp
stos
mov
stos
ret
call
jb
jl
add
mov
mov
dec
ss
dec
push
or
add
lea
cmp
outs
inc
add
inc
xor
push
pop
push
push
enter
xlat
movs
jecxz
leave
mov
neg
dec
or
jns
adc
inc
add
push
xor
and
mov
sbb
nop
(bad)
ds
mov
push
mov
(bad)
ror
and
mov
mov
mov
pop
mov
sub
jo
add
inc
add
sahf
stos
ss
dec
cmp
mov
inc
and
add
push
jo
push
or
sub
mov
cs
test
and
pusha
es
jne
stos
test
xlat
xchg
ret
and
push
dec
fcomp
cli
repnz
mov
or
loope
sbb
push
add
inc
cs
shl
cmp
ret
lea
mov
mov
fnstsw
pop
in
idiv
lahf
repnz
pusha
add
fwait
(bad)
fstp
jb
jo
add
repnz
call
sti
jno
imul
in
dec
icebp
mov
outs
or
pusha
and
fwait
daa
inc
jle
jmp
loop
xor
push
pop
fs
in
test
data16
adc
repz
dec
movsx
lods
sti
jne
adc
jbe
xor
xchg
(bad)
(bad)
jmp
out
mov
movs
(bad)
mov
push
imul
or
call
clc
mov
pusha
das
inc
xor
dec
sbb
and
fadd
add
adc
and
loope
icebp
xchg
sbb
add
mov
inc
add
jo
xor
and
mov
test
sub
fwait
rol
cmp
mov
dec
ds
and
push
lar
addr16
cmp
xor
clc
xchg
leave
mov
inc
pop
inc
add
cmp
mov
int
cmp
lods
fistp
fist
gs
dec
sub
xchg
leave
mov
adc
xor
aad
cmp
jae
ret
mov
mov
int3
retf
mov
xlat
xchg
not
inc
add
ins
jle
outs
or
push
sbb
xchg
rcl
iret
jo
and
adc
popa
sub
cs
inc
or
fimul
and
(bad)
add
loope
ss
sbb
jns
sbb
or
out
push
jp
jmp
(bad)
scas
add
(bad)
xchg
iret
lods
js
xor
pop
nop
cld
mov
mov
xor
mov
mov
add
retf
xor
cli
xchg
aad
push
adc
(bad)
mov
jns
repnz
cld
ret
and
push
push
fwait
ret
mov
and
popa
sub
add
mov
addr16
and
sub
push
pop
ds
aam
in
sbb
fsub
loopne
rcl
jge
sahf
fmul
rcr
fdivr
test
xlat
fsub
and
jbe
dec
addr16
xor
pop
adc
dec
popf
mov
sub
xor
lock
fs
iret
popf
into
popf
repz
into
fst
dec
or
cdq
faddp
mov
test
fld
inc
or
jmp
xor
and
(bad)
push
pause
fdiv
scas
add
inc
add
nop
mov
jb
inc
pop
jg
push
cmp
sbb
nop
(bad)
outs
das
sbb
pop
or
pushf
fldenv
arpl
jb
jae
sbb
sub
and
pop
sbb
int3
mov
pop
push
inc
mov
pusha
mov
jp
dec
or
js
fst
ins
aas
jge
je
bound
add
sub
adc
je
ins
xor
jp
mov
ret
cdq
sti
rcr
jmp
pop
dec
or
jb
cdq
lock
nop
adc
jno
shl
lds
pop
adc
dec
add
fs
in
xor
out
sbb
push
adc
add
adc
pushf
rol
or
pop
out
lods
mov
into
sub
ficomp
stc
mov
xchg
lods
push
xchg
pop
push
frstor
pop
sbb
fwait
jmp
sbb
cmp
imul
or
(bad)
xchg
std
mov
in
(bad)
xchg
nop
mov
test
test
mov
lods
out
mov
test
ins
(bad)
out
jmp
out
xchg
shl
fsub
push
fidivr
gs
inc
push
dec
and
(bad)
dec
retf
xchg
nop
cli
nop
fistp
(bad)
nop
push
mov
leave
mov
mov
jne
repnz
aad
aam
jl
mov
pop
sbb
and
dec
xchg
(bad)
xor
jo
rol
sti
mov
cmp
mov
repnz
loop
inc
pop
stos
xchg
out
pop
retf
les
jecxz
pushf
ret
mov
mov
mov
cmp
xchg
aam
das
jmp
mov
cmp
push
pop
xor
and
inc
inc
mov
(bad)
mov
mov
lods
mov
shr
dec
bound
mov
and
imul
jp
popa
mov
pop
inc
mov
push
adc
cli
(bad)
out
enter
fmul
jnp
sub
jp
jnp
ror
out
xlat
movs
sbb
jb
and
or
xchg
rcl
pop
jae
jno
movs
out
or
call
fwait
ror
pop
pop
sbb
push
pop
pop
sub
and
mov
xor
xor
xchg
ficom
inc
sub
inc
inc
cmp
imul
or
pop
add
lds
in
mov
cmps
(bad)
mov
push
add
jbe
mov
in
jl
scas
test
sub
mov
sub
lea
test
mov
rcl
in
mov
jmp
jmp
fstp
push
dec
mov
mov
or
mov
xchg
rcr
jne
sbb
or
and
clc
popf
or
jle
aas
jg
and
cmp
les
(bad)
movs
je
adc
imul
sbb
add
xchg
loope
jns
push
outs
(bad)
mov
cmps
les
out
call
les
pushf
fmul
adc
jle
outs
xchg
cmc
repz
add
fimul
mov
scas
in
mov
mov
stos
fild
ss
test
mov
xchg
jecxz
ja
loopne
enter
int
mov
xchg
mov
icebp
mov
adc
jae
push
adc
jp
ss
(bad)
mov
ja
mov
movs
les
pushf
test
mov
hlt
jg
and
push
sbb
(bad)
push
adc
rcl
ds
push
jge
jecxz
pop
cmp
pusha
fidivr
inc
loop
cmp
jnp
not
xchg
idiv
aas
ins
das
(bad)
mov
clc
adc
pop
add
sub
in
mov
mov
loopne
or
and
cmp
inc
sets
mov
mov
dec
adc
lock
fs
inc
xor
push
das
ja
sub
pop
push
aas
popa
and
dec
xor
jecxz
jns
xchg
loop
lods
cmc
mov
and
das
popa
and
xchg
aam
fnstenv
sbb
jmp
push
push
pop
pop
(bad)
fnsave
push
leave
adc
cmc
mov
popf
clc
mov
and
add
popf
xchg
sti
mov
lahf
std
mov
dec
adc
pop
fbld
shl
fild
inc
push
gs
or
popa
cmp
push
ret
pop
cmp
push
nop
loopne
pause
repnz
in
call
(bad)
fcomp
out
pop
dec
lahf
cld
xor
lahf
ret
lods
fcomp
xchg
xchg
push
shl
and
jl
xlat
popf
xlat
mov
out
fcomp
sub
xchg
jne
dec
cmp
pop
sub
inc
xchg
ret
and
div
pop
out
hlt
cmp
pop
sub
aaa
out
test
nop
stc
mov
and
and
iret
mov
xor
cmps
(bad)
sbb
outs
and
stc
ins
sub
jmp
xchg
scas
in
lahf
inc
add
scas
mov
mov
out
repnz
sbb
aad
out
mov
mov
xor
rol
mov
sahf
out
test
or
fisub
jbe
shl
add
sub
mov
push
dec
das
cli
xchg
retf
cs
or
mov
xchg
out
add
cmp
jae
push
cmovp
push
adc
jns
call
movs
out
or
pop
sub
bound
xchg
jge
xchg
shr
dec
or
test
loopne
push
test
(bad)
xchg
iret
cmp
cs
or
adc
pop
fistp
neg
mov
lods
repnz
inc
and
add
ret
adc
stc
and
mov
test
push
fstp
cld
xchg
jmp
cli
cdq
sti
pop
pop
aam
cmc
mov
push
test
lock
hlt
rol
adc
mov
jbe
fistp
cli
mov
dec
cs
mov
mov
push
push
inc
push
push
cmp
shr
mov
in
inc
xor
jne
retf
repnz
mov
jo
repz
in
pop
pop
movq
shl
pop
xor
shr
inc
adc
pop
pop
push
or
adc
fld
arpl
inc
push
fstp
mov
ss
inc
sbb
pop
nop
stos
xor
push
mov
xor
into
pushf
fdivr
jmp
or
pop
sbb
pop
pushf
fistp
inc
mov
sbb
cli
popa
sti
test
xchg
ds
fimul
push
xor
inc
inc
add
xchg
fwait
es
int
mov
mov
into
lahf
lds
or
bound
push
(bad)
(bad)
clc
mov
aam
call
mov
sahf
xchg
outs
xor
jnp
mov
out
fwait
out
jmp
inc
add
jb
sbb
pop
stc
test
xchg
stc
mov
scas
jmp
bound
imul
xchg
(bad)
ficomp
js
jns
test
mov
clc
or
in
ret
out
pop
je
pop
cdq
fld
jb
pop
sbb
call
inc
bsr
mov
lods
into
adc
xchg
out
es
mov
imul
mov
popa
and
shl
bound
mov
lods
into
popf
fiadd
and
and
mov
out
les
sub
imul
jo
rcr
test
sbb
sti
mov
stos
leave
in
ret
(bad)
cld
jns
cmps
into
xchg
mov
stos
jns
add
or
out
pop
push
mov
mov
push
cmp
fist
inc
add
mov
adc
jo
inc
bound
(bad)
and
jnp
int
adc
jge
pop
lahf
aad
push
pop
pop
jb
and
add
ins
add
fwait
cmp
call
mov
iret
call
stos
xlat
test
movs
push
push
fidiv
pop
das
mov
dec
or
xor
mov
sub
fldcw
sub
cmps
rol
or
adc
rcr
addr16
dec
adc
imul
mov
mov
mov
nop
jno
jle
call
daa
jl
popa
cs
aaa
mov
mov
sbb
push
adc
ret
mov
scas
imul
mov
mov
add
test
or
xchg
test
leave
stos
(bad)
test
ja
pop
add
imul
push
xor
mov
popa
and
loop
sub
pop
(bad)
(bad)
push
ja
xchg
lds
mov
cwd
fld
sub
jae
retf
and
dec
adc
inc
sar
retf
add
adc
mov
sub
mov
sub
xchg
retf
movs
test
scas
cmp
mov
rcr
sbb
xchg
aad
jge
call
push
inc
add
or
mov
dec
sub
xchg
(bad)
jp
pop
sbb
mov
punpcklwd
mov
nop
rcl
xchg
jno
jno
push
mov
call
ret
or
cmp
fistp
adc
stc
mov
add
mov
push
jl
movs
ret
cmp
mov
das
fst
cmps
(bad)
(bad)
mov
xchg
dec
jo
push
add
cmp
inc
and
jo
push
and
pop
sub
jl
addr16
js
arpl
push
ds
mov
int
dec
loopne
leave
mov
mov
je
test
je
sub
data16
fistp
adc
dec
and
xor
shl
mul
fsubp
lea
inc
js
scas
into
stos
leave
(bad)
retf
mov
pushf
mov
lahf
idiv
mov
xor
jno
ins
push
pop
dec
adc
in
scas
int
jnp
rol
rcl
dec
call
ja
pop
push
in
sbb
xchg
data16
repnz
in
stos
repnz
jmp
(bad)
test
jno
dec
sbb
add
fist
sbb
inc
out
div
dec
js
repz
ins
xor
jno
mov
lods
arpl
mov
hlt
ror
dec
popa
mov
imul
rcr
cmc
mov
fistp
imul
sub
cmc
lods
dec
out
mov
jmp
sub
xor
mov
fiadd
lods
pop
push
ss
shl
mov
mov
inc
out
cmp
ficomp
inc
daa
push
(bad)
xchg
(bad)
das
dec
push
sbb
std
lock
dec
push
int3
lea
cmps
inc
push
jne
mov
jmp
mov
jbe
push
add
pushf
inc
sbb
mov
xchg
rcr
imul
cdq
dec
mov
sub
data16
mov
sbb
adc
shl
push
push
xchg
rcr
push
push
gs
icebp
mov
mov
dec
sub
jmp
xor
mov
jbe
push
pop
add
inc
pop
inc
xchg
shl
shl
mov
inc
ror
push
outs
outs
sbb
mov
ss
sub
xchg
add
rcl
jp
iret
mov
cmp
frstor
hlt
out
and
mov
mov
push
adc
(bad)
repz
adc
call
cmp
dec
mov
ret
xchg
fdiv
lods
test
cdq
retf
mov
jl
gs
dec
xor
xchg
ficom
cld
(bad)
xlat
jle
shr
out
jl
inc
add
repz
mov
pop
pop
sub
jmp
int3
sbb
jbe
data16
retf
mov
xchg
into
clc
mov
ss
cs
and
mov
ins
faddp
test
lock
jae
pop
push
mov
dec
add
out
test
dec
iret
inc
(bad)
and
ins
and
mov
stc
add
lds
lahf
fadd
inc
adc
hlt
xlat
(bad)
xchg
icebp
mov
add
add
dec
or
das
sti
scas
cmc
xchg
dec
or
sub
jno
cmp
dec
or
in
call
pop
inc
or
nop
push
push
xchg
and
loope
imul
lock
jnp
or
dec
or
sahf
adc
popf
shl
adc
xor
inc
push
pop
or
jmp
sub
dec
scas
es
or
xchg
xor
adc
aas
mov
jno
aas
je
xor
pop
cmp
adc
cmp
test
mov
add
fstp
xchg
les
inc
outs
xor
jae
stos
sbb
add
(bad)
std
xchg
cmps
pop
add
aad
es
sar
push
or
sub
rol
pop
cmp
ficomp
outs
xchg
call
sbb
cmp
and
loope
jmp
cmp
arpl
in
lods
(bad)
lahf
arpl
inc
out
mov
adc
jmp
mov
sub
cmps
aam
test
mov
jns
loopne
fs
loopne
test
fsubr
or
scas
cmp
lock
jl
in
repnz
xor
jp
or
and
mov
fadd
mov
xor
hlt
mov
jno
or
cld
mov
or
(bad)
movs
arpl
jo
xor
adc
inc
mov
outs
add
cmps
sbb
aad
call
xchg
xor
repz
call
loop
bound
(bad)
sti
(bad)
retf
add
push
cmp
push
imul
popf
repz
adc
ins
cld
or
aas
pop
mov
out
mov
imul
push
mov
add
add
not
push
push
jmp
sub
jmp
jecxz
bound
push
pop
dec
and
pop
or
cs
cmp
jns
dec
or
inc
ds
sub
loopne
mov
pushf
jb
aas
pop
lahf
pop
sub
sub
les
(bad)
fdivr
popf
mul
and
push
fsubp
xchg
test
fstp
mov
nop
inc
es
ret
scas
loope
pop
sub
loop
test
and
popa
xchg
jmp
sub
or
cmp
mov
adc
and
stos
jmp
mov
xchg
pop
pop
cmp
(bad)
or
je
add
int3
mov
mov
sar
(bad)
out
ss
iret
mov
add
jns
in
out
fld
jp
aas
je
cmp
idiv
mov
std
daa
xchg
aam
jle
push
sti
stos
loop
sahf
add
sub
sub
and
shl
push
aad
(bad)
test
pop
pop
adc
in
fdiv
jecxz
nop
cmc
sub
das
pop
xchg
cmp
pushf
shl
mov
xchg
je
xor
add
stos
loope
dec
and
into
mov
mov
dec
xchg
or
adc
push
sub
lods
jno
pop
inc
mov
outs
add
adc
std
leave
cmps
leave
or
inc
mov
inc
push
aam
mov
xchg
jb
cmp
cmp
jnp
add
shl
mov
fimul
mov
scas
aaa
push
daa
jle
es
std
sbb
or
sbb
adc
(bad)
mov
or
and
or
shl
int
fisubr
xchg
pop
(bad)
(bad)
mov
adc
jle
dec
cmp
repz
ffreep
fidivr
push
ins
push
push
dec
mov
movs
ins
es
retf
cmp
sbb
xchg
(bad)
call
popa
xchg
add
adc
cdq
arpl
rol
cmp
out
lods
fmul
lahf
push
push
aam
mov
pop
js
cmp
in
mov
out
mul
outs
shl
fstp
mov
popa
cmp
(bad)
test
adc
fidiv
xchg
sub
jbe
cmc
in
lea
or
(bad)
mov
daa
in
push
out
ficom
mov
sbb
cli
fisub
(bad)
pusha
or
test
jge
dec
cmp
lock
sar
mov
scas
and
pop
add
and
dec
or
(bad)
idiv
addr16
sbb
push
mov
scas
out
repnz
cmp
out
lods
pop
add
fnstsw
and
cmps
adc
cmpxchg
fs
or
repz
mov
daa
dec
sbb
inc
jge
push
xchg
pop
push
sub
adc
or
add
jmp
mov
and
and
mov
add
jb
add
fprem
mov
ins
mov
lods
xchg
add
cmp
jmp
jb
add
inc
enter
ja
sbb
pop
mov
adc
les
mov
in
test
push
sub
shr
xchg
push
pusha
cmp
aad
cmp
push
mov
jo
out
mov
mov
push
daa
arpl
xchg
clc
mov
(bad)
fnsave
arpl
lods
lds
xor
cmp
ficom
(bad)
dec
pop
xor
adc
sbb
jbe
inc
adc
xchg
cmp
xor
xor
loopne
ret
popf
call
lahf
es
push
adc
sahf
ret
inc
xchg
shl
jns
ret
call
dec
mov
mov
popf
repnz
aad
sar
shr
rol
inc
loope
ins
add
idiv
xchg
mov
popa
or
out
sbb
in
out
rcr
pop
add
call
jo
data16
scas
fidivr
lods
out
loope
jnp
popa
test
inc
add
sub
dec
xchg
lock
sbb
aad
lock
inc
add
dec
xor
cmp
gs
or
or
jecxz
movs
stc
cmp
pop
fmul
xchg
leave
loop
mov
jnp
pop
pop
jg
jmp
push
push
push
or
sti
test
mov
xor
ja
adc
leave
pop
mov
cmp
or
push
test
inc
add
int
(bad)
push
or
ds
adc
mov
push
gs
shr
xchg
inc
inc
push
pop
mov
lds
lahf
jne
or
idiv
xchg
sbb
loope
(bad)
(bad)
(bad)
mov
jmp
pop
sub
push
and
(bad)
mov
ja
add
retf
or
das
pop
gs
and
sbb
enter
sub
js
mov
add
cmc
fstp
push
mov
hlt
shl
sbb
cs
dec
je
pop
mov
mov
mov
lahf
shl
and
add
jp
popa
xlat
and
cmp
fisttp
and
mov
jne
pop
xchg
sti
cmps
xlat
cli
mov
inc
or
lods
jecxz
add
pop
gs
add
loop
(bad)
repnz
inc
jno
inc
cmp
cmps
sbb
outs
xor
cmovnp
(bad)
mov
inc
or
mov
mov
cmp
fcomi
iret
pushf
js
xor
aas
xchg
movs
in
jno
pop
ss
dec
mov
in
jmp
cld
fldcw
test
(bad)
call
dec
test
lock
cmps
cmp
adc
xor
jle
cmp
in
nop
outs
nop
cmp
icebp
rcl
dec
cwde
pop
sbb
(bad)
out
mov
xor
or
les
ror
sub
inc
pop
add
and
add
inc
mov
mov
stc
mov
mov
pushf
loopne
and
or
dec
adc
sub
aam
xor
push
jg
push
(bad)
in
fdiv
mov
aaa
xchg
sbb
imul
xchg
push
jne
inc
js
inc
es
mov
lahf
push
cmp
mov
retf
out
sar
(bad)
or
out
add
iret
adc
sub
stos
ror
mov
outs
popf
cmp
or
cmp
les
cmp
enter
popa
xor
mov
call
(bad)
aam
or
cmp
shl
sbb
in
jbe
dec
or
pop
mov
pop
jne
and
int3
jmp
mov
ja
pop
mov
dec
das
sbb
push
push
mov
sti
mov
jp
mov
add
inc
pop
or
stos
int
jnp
es
mov
(bad)
mov
push
inc
add
cmps
(bad)
lahf
jge
cs
xchg
push
cmp
retf
push
ja
bound
push
nop
arpl
bound
outs
push
push
sub
loopne
test
stos
and
xor
mov
inc
test
data16
add
cmp
mov
xor
mov
xor
popf
fisttp
loop
mov
cmp
pop
lock
in
xchg
sbb
cmps
in
loope
(bad)
mov
sbb
pop
pop
mov
mov
mov
adc
fcmove
mov
faddp
mov
mov
das
mov
jno
jo
fidivr
inc
add
mov
and
mov
mov
mov
loop
jecxz
inc
and
mov
add
imul
sbb
adc
and
ins
sub
jle
push
retf
mov
add
sub
ficomp
jmp
clc
add
out
mov
or
ja
xlat
aam
xchg
xchg
push
push
cmp
fimul
add
shr
nop
sahf
jmp
cli
mov
fldenv
xchg
hlt
add
jae
retf
xchg
dec
sub
(bad)
sti
stos
jmp
cdq
into
mov
or
xchg
aam
mov
mov
jle
outs
sbb
cmp
(bad)
inc
js
pop
lahf
in
test
xor
sbb
add
in
fnstcw
(bad)
loope
sar
mov
and
test
iret
xor
sub
ror
mov
sub
pop
aas
hlt
test
dec
sub
pop
scas
or
mov
or
jmp
mov
inc
std
and
inc
cmp
sbb
ret
test
std
xchg
movs
push
cmp
mov
inc
add
je
stos
rcr
ret
stos
aas
xchg
retf
stos
aas
outs
sub
sub
stos
adc
mov
es
fsub
cmp
xor
fisubr
fdivr
push
pop
inc
jmp
sti
push
mov
pusha
(bad)
push
pusha
xor
das
hlt
adc
test
xor
add
je
addr16
sar
push
stos
out
nop
lahf
out
in
dec
aas
pop
mov
xchg
xlat
cmp
sbb
cmp
jns
(bad)
push
adc
adc
stc
and
dec
cmp
and
cwde
lock
jne
adc
mov
jl
sbb
dec
(bad)
cmp
mov
xchg
push
ja
and
ds
adc
add
adc
test
mov
xchg
or
mov
xor
popa
xor
(bad)
in
stos
pop
add
fstp
add
add
(bad)
test
popf
add
jl
push
adc
cmp
stos
enter
scas
pop
push
jns
retf
sahf
add
push
inc
lahf
stc
mov
xchg
imul
in
xlat
fadd
xchg
loop
in
mov
or
dec
push
daa
mov
or
shr
test
pop
cwde
(bad)
dec
arpl
sub
shl
ret
rol
(bad)
(bad)
lahf
xchg
cmp
or
mov
(bad)
fdivr
hlt
xchg
mov
test
push
xchg
into
jne
pop
ja
sti
int3
mov
adc
cld
shl
imul
aam
mov
and
ja
aas
jae
or
xor
movs
sti
mov
xor
sti
add
jl
out
mov
pop
jl
cmp
push
loop
lods
fimul
xchg
ret
add
js
pop
push
or
cwde
fdivr
cmps
in
cld
aas
(bad)
rep
inc
add
ret
mov
push
mov
pop
test
push
or
lods
rcl
push
xchg
sub
(bad)
cwde
inc
mov
jae
push
adc
adc
mov
push
lods
loope
cwde
daa
je
hlt
cmp
repnz
test
das
cmp
mov
dec
xor
mov
cmp
cmp
cmp
dec
or
dec
and
dec
mov
xchg
retf
mov
test
shr
add
call
mov
jge
aas
dec
inc
and
sbb
loopne
dec
pop
sbb
mov
scas
imul
xchg
call
or
or
out
int
lds
jbe
push
mov
mov
mov
sub
xor
or
rcl
add
cmp
data16
mov
or
out
int3
sbb
shl
ss
adc
stos
iret
lahf
js
push
or
fcomp
adc
pop
cmp
xor
add
fidiv
ins
mov
addr16
push
adc
inc
pop
dec
(bad)
mov
mov
dec
add
imul
ret
xchg
dec
add
hlt
lods
rol
sahf
ret
sbb
rol
iret
sar
xchg
add
add
sbb
dec
pushf
not
mov
add
out
lock
cdq
ret
shl
xlat
clc
mov
in
mov
sbb
and
nop
sbb
(bad)
mov
xor
popa
mov
(bad)
retf
sbb
sti
mov
jne
leave
aad
loopne
dec
dec
sbb
dec
jg
push
mov
cmps
pop
or
clc
out
mov
(bad)
mov
push
jo
pop
inc
pop
add
shl
xlat
mov
sbb
dec
xchg
cld
mov
mov
jne
add
loopne
loop
mov
pop
outs
xor
pushf
fucompp
add
daa
(bad)
rcl
test
cmps
hlt
sbb
cmp
dec
and
jl
push
or
pop
adc
test
jne
and
xchg
adc
lods
retf
test
mov
into
lods
xchg
xor
clc
xchg
fmulp
aad
push
cmps
or
and
shl
mov
mov
and
cmp
sbb
sub
ins
and
or
ds
add
ret
setae
dec
stos
xor
imul
loopne
(bad)
sub
xchg
push
popf
sbb
push
aas
fldcw
cmp
rcr
pop
ins
inc
sbb
fld
fnstcw
and
sbb
aas
jg
xor
mov
(bad)
mov
adc
and
dec
pop
pop
mov
jmp
pop
sub
call
dec
imul
push
jnp
pusha
shld
push
daa
retf
stos
das
xchg
repnz
push
sub
mov
and
add
sahf
rcl
xchg
push
pop
sbb
mov
xchg
ins
xor
jg
out
ret
xchg
lods
push
aam
lods
pop
sub
and
in
mov
lock
scas
jns
xor
cmp
jae
adc
mov
xor
add
xor
dec
push
add
mov
cld
mov
pop
cwde
out
stos
mov
cdq
rcr
sbb
sbb
sbb
and
(bad)
mov
ins
mov
sbb
loope
fstp
repz
mov
adc
xlat
add
cmp
stos
repz
in
scas
in
test
xchg
nop
out
sahf
stc
sub
pop
retf
out
cmp
shl
(bad)
add
stc
pushf
into
cmp
add
xor
cs
mov
ja
add
rol
rcl
mov
sub
xchg
in
push
xchg
out
jb
hlt
mov
mov
cdq
std
lahf
imul
dec
aas
add
inc
call
icebp
(bad)
add
sti
stos
jmp
loope
lahf
leave
cmps
(bad)
nop
jno
cdq
in
mov
test
or
sbb
push
push
fstp
pop
adc
sti
test
fnstenv
adc
pop
cdq
push
jle
jbe
in
(bad)
mov
inc
and
movs
in
inc
pop
sbb
pop
cdq
ror
xor
adc
aam
test
outs
sub
in
sahf
fmul
push
add
add
shl
mov
xor
sub
rol
shl
ret
aam
inc
or
adc
lahf
in
movs
je
cmp
popa
jnp
dec
fisubr
arpl
and
jb
jae
pop
jp
leave
sti
mov
sub
cmp
bound
je
sbb
pop
xchg
sbb
in
stos
in
daa
mov
add
add
shl
fimul
(bad)
fld
pushf
pause
dec
daa
outs
add
or
or
popa
and
xchg
pop
push
xor
ss
fiadd
movs
or
in
loopne
inc
jnp
outs
mov
dec
or
ret
mov
aaa
cdq
fild
mov
jne
(bad)
mov
sub
sbb
cmps
adc
mov
inc
dec
cmp
sbb
call
test
jo
ds
lds
dec
adc
cld
fdivr
inc
pop
adc
push
and
pop
adc
xor
rcr
mov
adc
gs
out
xchg
xlat
hlt
lods
loopne
xor
outs
and
mov
call
inc
aaa
cmps
in
retf
nop
(bad)
std
xchg
push
jne
inc
jg
jp
sub
mov
nop
int
pop
push
cmovg
push
sbb
je
or
stc
ds
xor
xchg
shl
xchg
sub
inc
add
sub
mov
pop
push
es
daa
arpl
adc
fcom
cdq
sbb
xor
loope
cwde
dec
je
dec
mov
xchg
not
pop
cmp
sub
rcl
ins
inc
sbb
call
inc
or
ret
clc
pop
jg
sub
lods
sub
push
cmps
mov
inc
xor
lahf
push
xchg
fistp
or
cmp
out
add
jae
push
adc
cmp
adc
scas
shl
xchg
mov
inc
sub
xchg
mov
xor
xor
sub
or
retf
mov
mov
xor
jae
or
mov
pop
outs
push
xor
and
mov
jbe
outs
sahf
out
nop
rcl
sub
xor
sbb
jle
cmp
xor
repz
repz
aaa
lock
xchg
mov
dec
push
aaa
fldenv
movups
pusha
and
(bad)
aad
mov
mov
dec
test
mov
nop
adc
imul
push
cmps
and
or
pop
dec
aad
push
push
int
fistp
(bad)
out
outs
dec
sub
push
gs
das
xchg
(bad)
mov
and
mov
inc
mov
repnz
push
scas
sbb
leave
lock
or
dec
dec
cs
sbb
or
add
retf
mov
push
sbb
stos
cmp
outs
add
mov
jg
sub
jecxz
movs
imul
js
inc
or
outs
int
gs
mov
mov
cdq
rcr
fimul
jnp
sbb
xor
adc
inc
and
push
aaa
jo
push
call
lock
sbb
arpl
jb
add
xor
dec
xchg
pop
inc
fisubr
jl
(bad)
aam
int3
cmp
jecxz
inc
xor
xchg
pop
pushf
ret
sub
sub
mov
push
ins
mov
inc
push
loopne
movs
jmp
pop
sbb
sub
gs
mov
xchg
and
sub
mov
mov
xor
int3
mov
lock
and
pop
mov
mov
xor
mov
and
out
mov
mov
in
es
fimul
js
imul
cs
arpl
push
or
cmp
repz
and
and
or
push
lods
xchg
jg
add
mov
xchg
cmp
mov
cmp
sbb
sub
mov
pop
retf
leave
pop
xlat
xor
dec
ret
sub
popf
inc
aam
movs
movs
xchg
cwde
mov
inc
test
outs
test
test
int
repz
inc
mov
inc
into
add
xchg
xchg
test
test
inc
fimul
jecxz
scas
enterw
or
push
scas
mov
inc
test
jne
dec
test
add
pop
sti
sub
ss
sub
(bad)
fwait
jge
dec
phaddw
dec
fstp
inc
mov
rcr
sbb
aaa
in
mov
xchg
inc
xchg
inc
mov
push
add
mov
stos
test
push
mov
int3
ds
in
ins
scas
lea
ins
scas
lahf
outs
test
stc
inc
mov
pop
adc
inc
mov
xchg
push
add
sub
out
xor
inc
test
std
jmp
jecxz
mov
cdq
inc
mov
mov
(bad)
fsubr
add
cmp
stc
push
loope
scas
xchg
fs
shl
pop
mov
fild
cmc
push
mov
out
xor
or
dec
(bad)
or
shl
icebp
stos
jo
cmp
and
les
stc
xor
push
int3
(bad)
mov
mul
mov
jno
sub
sbb
jmp
cmc
cmp
ret
xor
or
xchg
jb
dec
fst
pop
(bad)
aaa
icebp
pop
mov
jno
arpl
add
push
mov
lea
xor
sbb
(bad)
cmp
dec
adc
(bad)
aaa
lock
arpl
cmp
movs
xchg
add
mov
add
xor
ss
movs
call
jns
in
mov
repz
lods
jge
mov
mov
mov
pusha
ficomp
mov
sahf
push
push
adc
xor
and
mul
inc
fstp
push
lods
jle
ins
in
std
das
jecxz
mul
sbb
sub
inc
movs
push
xor
dec
mov
dec
stos
dec
mov
popa
mov
cmps
cdq
mov
lahf
jb
add
adc
(bad)
or
jno
fwait
push
mov
add
xor
iret
sub
and
and
stc
add
lahf
xchg
jae
add
iret
inc
fmul
ins
lods
data16
cmp
daa
pop
sbb
mov
fwait
inc
stos
inc
xchg
lods
stos
jge
outs
fimul
cmc
inc
sub
cdq
je
push
mov
push
lods
(bad)
cwde
and
sti
add
retf
add
in
or
mov
fistp
fwait
jns
xchg
jae
xor
loop
mov
jnp
or
retf
push
mov
repnz
mov
fimul
push
adc
pop
mov
jl
daa
in
in
push
nop
jl
call
jnp
push
dec
int
test
hlt
and
hlt
add
sub
jmp
aas
loope
clc
aaa
pop
icebp
jle
cmp
inc
(bad)
add
and
push
mov
and
icebp
and
and
cmp
out
add
ret
cmp
and
dec
test
icebp
and
cli
sub
sub
(bad)
cmp
loop
push
push
or
das
push
add
xlat
dec
test
add
cmps
popa
cs
icebp
pop
int3
pop
lea
test
pusha
mov
lahf
popf
outs
retf
cmp
stc
or
sub
pop
sbb
adc
(bad)
xor
jg
inc
mov
sbb
push
mov
and
out
outs
mov
xchg
lds
iret
add
das
or
jno
dec
mov
out
test
shr
sbb
loope
mov
fisttp
mov
je
pop
scas
fwait
inc
mov
enter
mov
fist
adc
sub
repnz
mov
sbb
(bad)
sub
cld
pminsw
inc
movs
xchg
ins
int
jmp
lds
or
cmp
(bad)
jp
push
das
sub
(bad)
dec
lods
ja
stos
cdq
fild
stc
dec
lods
xchg
pusha
mov
push
jmp
sbb
neg
imul
iret
and
jle
push
(bad)
mov
xor
(bad)
push
fcom
mov
repz
(bad)
(bad)
jmp
out
loop
in
dec
mov
pop
adc
pop
movs
jae
das
add
std
push
(bad)
es
adc
repz
clc
inc
mov
cmp
mov
pop
aam
or
xchg
dec
sar
add
repz
aaa
in
push
mov
mov
scas
jnp
pop
mov
inc
into
popf
inc
sar
js
ins
cmps
fwait
xchg
xlat
dec
sub
sub
add
and
dec
aam
sbb
xor
xor
mov
xchg
jp
mov
stos
jge
or
add
cs
xor
pop
lea
nop
pop
mov
fidivr
lds
sub
xchg
gs
popa
fcomp
cmp
jmp
ins
aad
sbb
aam
adc
and
sub
and
add
push
mov
fdivr
jl
xchg
outs
lds
js
mov
fwait
test
daa
aaa
add
pop
jecxz
(bad)
push
xchg
mov
xchg
gs
inc
mov
pop
cmc
adc
add
daa
adc
retf
xor
and
std
mov
xor
inc
mov
sbb
add
das
in
cmp
out
pop
mov
push
retf
push
mov
mov
(bad)
cmp
dec
mov
leave
sub
push
xchg
je
pusha
fnstsw
and
sub
jecxz
jne
xchg
fwait
popf
cdq
jae
mov
jle
data16
adc
dec
lea
idiv
pop
push
adc
dec
test
mov
jb
ins
loope
mov
jge
popf
outs
add
out
jmp
into
aaa
loopne
fisub
out
loop
mov
add
dec
mov
test
(bad)
outs
mov
cmc
add
jns
jnp
jg
cmp
xor
mov
pop
mov
jp
jl
lahf
jne
xor
sub
pop
test
inc
mov
fs
pop
mov
mov
xor
lock
mov
cdq
xchg
pusha
mov
(bad)
pop
stos
nop
ja
xchg
sub
mov
rcr
gs
scas
stos
push
cli
cs
fs
dec
cmps
mov
fwait
imul
cmc
xor
loop
enter
sub
and
repnz
push
mov
repz
in
pop
retf
add
pop
mov
jmp
outs
stos
test
gs
sbb
(bad)
mov
mov
and
xor
ret
xor
mov
xchg
jle
je
push
neg
push
mov
hlt
xor
inc
leave
sub
cmp
lock
dec
mov
mov
invd
jmp
pop
cmp
mov
mov
loop
push
mov
shr
out
adc
cmps
jl
cmp
xor
icebp
aas
clc
mov
inc
test
in
pop
test
cld
push
(bad)
jle
inc
mov
fnstcw
jmp
in
adc
jmp
out
div
sbb
stc
cs
call
cli
add
cmp
shr
jmp
push
rol
cmp
cli
pop
xchg
cdq
ja
push
xor
sar
retf
push
mov
fwait
cdq
xchg
inc
push
adc
aas
push
adc
push
fistp
xchg
jo
inc
fiadd
in
aad
lea
pushf
lods
outs
retf
xor
les
std
or
sbb
or
mov
jb
cs
add
add
cmps
gs
adc
arpl
(bad)
(bad)
aas
iret
and
mov
mov
fdivr
dec
fisttp
pusha
icebp
and
cs
test
dec
xlat
pop
xchg
jb
pop
iret
xor
xor
add
fwait
xchg
ins
into
ss
psubq
out
xor
or
fsubr
adc
dec
mov
lahf
mov
mov
cmp
cmp
hlt
je
imul
test
jmp
cld
pop
shl
in
adc
dec
sar
or
dec
sub
(bad)
inc
fild
call
popa
iret
dec
lods
nop
jne
xor
aaa
les
clc
add
test
mov
popf
dec
mov
ins
fistp
std
push
xchg
dec
test
mov
loope
movs
xchg
inc
xchg
lahf
jg
cdq
jo
mov
jle
mov
xchg
inc
scas
nop
dec
mov
jne
sbb
adc
adc
cmp
inc
mov
mov
rol
push
aam
jge
sub
shl
(bad)
mov
int3
push
xchg
(bad)
sub
push
test
xchg
jo
cs
lods
mov
pop
fnsave
pop
or
add
adc
sub
jmp
(bad)
cdq
sahf
mov
mov
push
(bad)
rol
mov
fidivr
xor
retf
xchg
dec
(bad)
dec
fstp
push
adc
jno
cs
pop
mov
(bad)
popf
fist
pop
into
sub
in
aaa
xor
sub
das
pop
icebp
xor
or
stc
pop
mov
lods
xchg
xchg
jnp
mov
movs
xchg
imul
sub
push
shl
or
or
and
push
std
pop
mov
iret
xor
add
(bad)
and
dec
mov
pusha
(bad)
pop
stos
sub
test
ins
stos
mov
rol
hlt
sub
sbb
add
inc
mov
test
cmp
ds
lea
xchg
gs
add
xchg
inc
fimul
leave
push
mov
inc
fcomp
xchg
add
pop
mov
ins
fstp
nop
xchg
outs
icebp
dec
icebp
push
mov
push
sub
and
hlt
add
fisubr
clc
and
adc
mov
xchg
imul
adc
loope
xor
pop
jmp
pop
loope
stc
push
shr
sbb
fnstcw
imul
lock
xor
dec
cmps
xchg
mov
sub
repnz
add
ret
pop
stos
pushf
dec
enter
outs
test
xchg
cdq
jge
sub
inc
shl
out
pop
mov
sar
(bad)
jne
cwde
xchg
jb
shr
lock
mov
cmp
sar
adc
xchg
je
xchg
lea
jl
push
loop
jmp
sar
jo
inc
mov
inc
stos
imul
pop
fnsave
in
push
cld
pop
mov
mov
aaa
repnz
stos
popa
iret
cmp
dec
mov
sar
fs
je
jg
mov
cmp
inc
xchg
jb
daa
hlt
and
shl
and
in
xor
xor
ret
pop
rol
shl
jo
add
(bad)
and
xor
add
stc
and
enter
in
add
sbb
pop
sbb
fidivr
in
add
pop
retf
pop
jecxz
fwait
je
das
adc
and
xchg
xor
xor
out
aad
popa
fild
add
cmp
push
mov
mov
jmp
jo
pusha
cmp
dec
mov
or
call
mov
loop
sbb
loopne
sub
push
(bad)
or
call
pop
fsub
repz
retf
sbb
out
pop
mov
xchg
pusha
and
add
pop
cmps
inc
mov
mov
push
cld
es
push
mov
cmp
lds
jo
or
out
pop
mov
fld
enter
or
xchg
xchg
inc
(bad)
mov
dec
test
stos
xchg
dec
stos
lods
imul
imul
movs
mov
xchg
shl
cli
and
hlt
and
cmp
not
fs
ds
retf
popa
scas
jle
xchg
dec
ret
pop
movs
je
mov
xchg
je
mov
sbb
fcom
loop
or
mov
scas
mov
or
daa
sbb
iret
mov
ins
sbb
push
cmc
push
mov
stos
lea
sub
in
cmp
or
dec
mov
in
xchg
xchg
inc
repz
sbb
xor
iret
lods
push
push
in
push
fisttp
push
aad
in
and
dec
imul
xlat
and
mov
add
sub
aaa
sbb
pop
cmps
mov
mov
mov
push
cmp
ja
lock
cmps
jo
mov
lea
popa
fbstp
cli
inc
mov
add
lea
ja
leavew
dec
mov
mov
pop
loopne
xor
or
arpl
cmp
cmp
mov
xor
pop
shl
push
aad
aaa
(bad)
cmp
and
(bad)
movs
mov
fs
aam
loop
in
(bad)
das
pop
mov
lods
mov
loope
jge
js
popa
rol
or
mov
gs
xor
xor
push
fimul
fimul
sbb
icebp
push
es
dec
test
dec
test
xchg
das
mul
and
push
stc
cmp
sbb
and
lds
inc
iret
lods
popa
ret
cmp
push
test
sub
inc
xchg
data16
jmp
xchg
jnp
imul
jmp
xchg
xchg
jge
ins
shl
les
jae
dec
test
lds
(bad)
sub
nop
pop
clc
sub
xor
stc
push
es
repz
repnz
rcr
ret
div
jg
or
jle
(bad)
jb
test
shl
adc
xor
pop
mov
leave
rcl
pop
add
sub
push
mov
(bad)
popa
mov
xchg
nop
popa
mov
fst
ins
aad
enter
leave
adc
les
hlt
aas
or
xchg
xchg
jge
fs
hlt
and
cmps
mov
jbe
je
adc
in
pop
test
daa
sbb
or
sbb
dec
cmp
repnz
test
sbb
out
mov
push
test
adc
adc
(bad)
xchg
mov
xchg
fwait
jne
push
mov
aad
leave
dec
mov
aad
sbb
or
sub
loop
div
and
xor
stos
xchg
pusha
shl
sub
cmp
add
and
xor
dec
mov
jne
pop
test
push
cmps
fwait
push
mov
das
sub
xor
sbb
test
ficomp
dec
sar
pop
loope
sti
add
push
xchg
push
in
in
xchg
mov
leave
stos
xchg
dec
int
mov
test
dec
mov
int3
sub
jae
jbe
div
outs
ficom
mov
daa
das
in
adc
loopne
cmps
sahf
(bad)
enter
and
dec
stos
inc
adc
xchg
dec
test
test
les
adc
mov
adc
retf
sahf
popf
xchg
push
mov
xor
cmp
push
xchg
scas
cdq
fs
test
aam
mov
daa
pop
push
les
out
inc
mov
cmps
mov
aaa
rcl
adc
neg
call
loope
or
xchg
aam
stos
cdq
arpl
sub
pop
lods
fwait
repnz
xchg
cmc
jb
push
test
js
or
pop
mov
aaa
add
bound
mov
movs
jns
inc
xchg
nop
shl
and
idiv
jmp
mov
pushf
sbb
stos
popf
addr16
fbld
les
inc
mov
pushf
push
inc
shr
sbb
daa
or
sub
cmp
inc
sar
stc
or
sbb
jmp
nop
jle
popa
adc
push
mov
xchg
jae
gs
out
pop
mov
dec
mov
out
push
mov
add
add
pop
cld
es
fmul
dec
mov
mov
mov
popa
xlat
add
push
mov
sti
cmp
(bad)
cmp
push
lock
repz
addr16
mov
or
lahf
mov
push
adc
es
sbb
int
call
jae
imul
div
adc
pop
std
xor
lock
scas
lahf
fwait
jne
popa
mov
sar
cdq
dec
mov
mov
sti
push
mov
ins
mov
ret
dec
mov
mov
push
sbb
and
cs
pop
mov
in
xchg
dec
movs
sahf
data16
mov
lahf
int
mov
gs
imul
repz
push
icebp
xor
push
add
in
pop
cmps
sar
out
fdiv
in
adc
sbb
push
fisttp
jmp
sbb
xor
cmp
ja
sub
push
(bad)
pmaddwd
add
das
pop
jmp
cmps
bound
inc
mov
adc
iret
sub
loopne
pop
sbb
stos
mov
jg
lds
cmp
(bad)
push
and
sbb
dec
scas
cwde
fild
or
xchg
jbe
xor
or
cmp
lods
dec
mov
ficomp
(bad)
jp
ins
mov
jb
mov
not
add
inc
int
mov
movs
mov
sub
jmp
cwde
dec
mov
fist
pop
clc
sub
inc
jmp
out
mov
adc
lds
jmp
ret
mov
mov
call
leave
push
rol
ret
mov
outs
stos
bound
and
mov
imul
loopne
icebp
pop
movs
movs
inc
xchg
(bad)
loop
into
pop
test
mov
mov
mov
movs
(bad)
sub
icebp
push
iret
sub
xchg
lea
jnp
das
sbb
push
mov
sub
pop
movs
mov
inc
mov
xchg
pusha
mov
(bad)
or
inc
rcr
jnp
xchg
int3
dec
xchg
cdq
inc
test
(bad)
rcl
popa
(bad)
fidivr
repz
(bad)
sub
aad
mov
xchg
arpl
cs
mov
cmps
nop
bound
shl
cs
cld
mov
ss
test
inc
mov
int3
ds
cmp
fidiv
add
inc
test
jecxz
mov
dec
lods
cmps
arpl
pop
mov
xor
retf
fwait
xchg
bound
repnz
push
dec
cmc
inc
xchg
add
out
sbb
add
add
cmp
push
mov
pop
mov
cmp
(bad)
and
sbb
pop
mov
mov
jp
push
pop
mov
ss
push
fiadd
xchg
jae
cmps
cwde
push
mov
ficomp
fwait
outs
fld
cld
or
inc
aad
mov
jb
jae
enter
xchg
bound
push
int3
mov
imul
clc
ds
adc
enter
mov
xor
sub
movs
mov
mov
mov
xchg
inc
mov
mov
sub
(bad)
out
scas
popa
sar
lods
jl
gs
dec
or
and
int
lds
push
lods
mov
dec
stos
inc
(bad)
xor
stc
ds
or
push
shl
in
xchg
cmc
inc
leave
xor
sti
add
xor
add
add
test
jbe
cs
stos
mov
(bad)
add
cmp
int
cmp
test
inc
shr
out
add
jmp
xchg
pushf
cmp
xchg
jge
mov
pop
cmps
mov
bound
sub
lods
sahf
jp
daa
adc
imul
nop
or
inc
ret
pop
lea
mov
xor
les
adc
pop
lock
mov
adc
dec
out
push
test
ds
out
and
enter
push
dec
pusha
mov
sahf
or
clc
sub
cmp
iret
sub
xor
loope
stos
sub
xchg
dec
clc
or
dec
mov
or
enter
cs
and
jnp
inc
scas
cwde
push
(bad)
aas
das
into
aaa
imul
in
adc
sub
cmp
outs
into
pop
rol
je
fs
add
pop
xchg
(bad)
and
loopne
int3
xor
stc
and
add
dec
mov
mov
jl
imul
fwait
fwait
push
fiadd
mov
cmps
lahf
or
jge
and
jno
jg
stos
(bad)
loope
dec
add
adc
and
jl
aas
clc
pop
sub
adc
pop
mov
iret
pop
sbb
sub
add
and
int3
pop
mov
dec
mov
scas
xor
cmps
lds
fwait
xchg
mov
cmp
or
xor
adc
pop
fidivr
in
test
lock
mov
rol
pop
mov
cmps
xchg
jns
aaa
sbb
lock
mov
cmp
jg
add
cs
ins
(bad)
cmp
das
sub
xor
and
(bad)
cmp
aas
sbb
les
or
xchg
movs
js
gs
inc
mov
es
pop
aad
rol
cmc
add
xchg
push
add
loope
test
pop
dec
sahf
cmc
cli
jmp
dec
and
shr
in
cmp
daa
ret
daa
test
jbe
enter
or
xchg
mov
xor
loope
loope
dec
int
sub
data16
loop
sub
inc
psubb
fld
test
xor
inc
call
in
lock
out
stos
push
jno
outs
inc
lods
test
fdiv
les
data16
js
ss
inc
xchg
arpl
xchg
mov
outs
cs
sub
int3
mov
add
xchg
imul
inc
push
cmps
out
int
lahf
inc
retf
dec
cmp
push
in
push
outs
cli
cmc
jae
cwde
aam
stc
jno
dec
push
in
pop
mov
dec
dec
pop
pusha
jb
mov
int
fisubr
sbb
inc
pusha
mov
sbb
loope
neg
movzx
retf
or
test
(bad)
retf
ret
nop
sbb
fst
xchg
inc
xchg
idiv
rol
sbb
scas
xlat
and
loop
push
push
outs
das
in
cmps
icebp
xlat
push
pop
mov
xor
xor
xor
sbb
and
std
push
lods
fcomp
cmp
imul
mov
dec
push
lods
xchg
js
inc
(bad)
push
fst
push
mov
or
mov
sbb
push
inc
sub
adc
xor
outs
in
sbb
sbb
xrelease
scas
(bad)
dec
xor
imul
mov
mov
stc
ficomp
sar
clc
addr16
sbb
adc
sti
sub
daa
pop
mov
dec
iret
ficomp
mov
mov
nop
and
cmps
sub
fwait
stos
cmp
or
fisubr
and
fild
in
js
push
pop
and
push
jge
clc
bound
jnp
inc
mov
rcr
mov
xor
jmp
sub
pop
scas
shr
fs
pusha
adc
and
test
leave
call
xchg
mov
or
mov
jns
into
xchg
rol
mov
push
cmp
lea
scas
sti
sub
dec
pop
imul
xor
dec
add
setnp
das
mov
inc
mul
mov
es
shr
inc
aam
aam
mov
sbb
rcr
imul
jle
cmp
xchg
(bad)
(bad)
cmp
fdiv
rcr
or
mov
ja
sbb
(bad)
mov
fincstp
push
cli
fs
retf
mov
sub
ins
lds
jmp
adc
repz
cmc
xor
inc
enter
sahf
in
push
clc
adc
mov
add
pop
ss
push
xchg
push
idiv
pop
cdq
or
push
call
dec
sbb
pop
dec
adc
push
jle
inc
adc
test
ja
movs
adc
adc
stos
mov
sub
jg
shl
mov
and
movs
sub
or
rcl
(bad)
or
pop
pop
or
iret
mov
mov
xchg
outs
(bad)
jl
inc
data16
mov
(bad)
ds
xlat
jmp
add
lahf
stos
inc
mov
test
jmp
adc
mov
loop
stos
or
(bad)
adc
(bad)
std
aas
sbb
xchg
mov
sbb
or
mov
xchg
or
mov
(bad)
mov
inc
xor
push
add
xor
push
popf
or
push
sahf
sub
mov
js
out
mov
aas
jecxz
adc
repnz
mov
dec
jmp
cmps
cdq
pop
ins
test
mov
mov
scas
cmp
adc
xchg
xor
hlt
lods
fld
jle
leave
cmc
pop
es
pushf
pop
sbb
cld
dec
test
in
fwait
repnz
sub
mov
ja
hlt
xor
inc
pop
je
stos
xor
and
and
xchg
jne
adc
std
dec
in
xor
rol
out
jl
adc
ins
dec
in
test
sbb
call
push
lahf
push
dec
mov
and
pop
cmp
mov
pop
adc
in
adc
call
in
cli
ss
ja
dec
mov
sahf
inc
xor
enter
call
xchg
inc
cmps
test
xchg
(bad)
out
mov
into
pop
fild
inc
inc
hlt
and
cmp
mov
push
xchg
adc
gs
ja
stc
(bad)
mov
fisubr
popf
cmp
mov
sti
ins
movs
inc
ds
(bad)
icebp
ins
sbb
add
das
pop
test
lea
in
adc
sbb
mov
xor
addr16
lea
inc
cmp
ror
retf
mov
dec
ror
lahf
test
push
loop
call
push
or
mov
ret
jno
mov
popa
mov
sub
pop
push
jmp
xor
pop
loop
xchg
rcl
sub
or
jbe
push
icebp
push
pusha
mov
popa
inc
faddp
mov
inc
mov
jne
xchg
mov
adc
adc
sbb
leave
add
das
push
outs
fistp
jo
(bad)
fmul
push
sub
aas
pop
lea
fist
xchg
sub
bnd
je
cmps
and
mov
std
and
imul
and
inc
scas
dec
sbb
dec
add
xlat
add
jo
pop
aaa
mov
jmp
dec
es
xchg
in
bnd
(bad)
test
xor
sbb
dec
imul
nop
mov
loopne
cli
inc
mov
fwait
mov
outs
dec
pop
and
sub
xchg
stc
xor
fistp
je
xchg
jmp
sub
sub
xchg
add
dec
jecxz
or
and
std
push
frstor
cmps
add
xchg
fldlg2
lock
push
stc
es
mov
imul
cmp
(bad)
(bad)
(bad)
cdq
pop
loope
(bad)
pop
cmps
xor
hlt
mov
push
loop
cmp
mov
sub
call
mov
fcom
pop
sub
add
pop
mov
in
add
mov
(bad)
pop
dec
inc
xlat
js
(bad)
sbb
pop
sub
and
scas
enter
xor
mov
xchg
dec
pushf
sbb
inc
pop
cmp
jns
pop
pushf
ins
xchg
xchg
jp
mov
shr
cmp
pop
mov
sbb
mov
and
sub
xchg
mov
popf
aad
fstp
fs
cmp
test
add
das
pushf
and
rcr
push
je
and
leave
iret
sub
gs
mov
and
cmc
fwait
out
stos
push
shl
sub
fidiv
mov
or
adc
xor
test
push
jno
jbe
dec
or
jns
pop
sti
int3
imul
out
mov
inc
mov
aad
mov
(bad)
cmps
xchg
push
in
daa
out
cmp
ja
mov
jb
(bad)
or
test
sub
mov
cmp
jecxz
int3
pop
cmp
jmp
mov
verw
data16
mov
fs
test
pop
mov
and
popa
out
ss
cmp
fwait
mov
ja
shr
aas
cmp
lods
ror
test
mov
(bad)
xor
jnp
outs
stos
(bad)
dec
pop
test
push
fild
sbb
inc
inc
addr16
je
clc
in
leave
mov
outs
test
fwait
add
pop
in
arpl
call
xchg
sub
sbb
adc
nop
jecxz
stos
sbb
mov
pop
and
sbb
adc
mov
popf
adc
inc
fldcw
xlat
jmp
and
mov
int3
in
loope
sub
cmp
and
retf
pop
sub
fs
xor
ins
ins
push
jge
ror
or
add
sbb
cmp
sub
xchg
inc
jp
pop
mov
dec
sbb
loopne
inc
pop
push
into
or
sahf
and
imul
xor
aam
push
lahf
jne
sbb
lods
mov
sub
or
xor
and
sbb
xor
inc
mov
lock
out
loopne
dec
jae
call
sub
mov
pusha
addr16
mov
loopne
mov
stos
jo
cmp
pop
fwait
stos
test
stc
xchg
push
lods
(bad)
mov
or
aad
sbb
out
mov
push
cwde
push
inc
aam
lods
cmp
xor
psrld
mov
sub
xchg
add
xchg
inc
jmp
or
nop
nop
test
and
lds
enter
or
lock
fimul
adc
sbb
clc
(bad)
out
stc
sbb
xchg
add
je
sub
sub
dec
mov
mov
dec
push
mov
rcl
stos
push
adc
mov
add
outs
push
test
bound
pushf
fcmovnb
frstor
push
gs
int
shr
mov
jmp
mov
int3
jb
test
mov
jle
push
cld
add
loopne
mov
aaa
cmp
scas
mov
test
mov
sbb
(bad)
mov
pop
cmp
cs
arpl
xor
ins
and
lea
in
or
mov
shl
jb
dec
push
cmp
daa
pusha
xchg
imul
jnp
xlat
xchg
push
in
idiv
adc
out
adc
add
sbb
cmp
mov
pop
push
test
addr16
imul
xchg
scas
xor
ins
pop
jl
mov
add
int
sub
js
xchg
cmp
test
xor
sbb
and
mov
int3
push
cmp
int3
mov
add
and
mov
(bad)
leave
mov
xchg
test
fdivrp
pop
retf
lea
mov
cmp
bound
jne
lea
jno
jge
call
cld
push
sub
popa
push
lock
fadd
sti
sub
sub
in
lods
jne
mov
adc
popf
xor
(bad)
int
out
sar
mov
jmp
leave
sub
sub
pop
push
(bad)
push
cmp
adc
stos
hlt
stos
push
das
dec
ret
cmp
not
fwait
sub
shr
push
and
lods
pop
and
push
xchg
xor
push
mul
ss
xlat
jbe
ss
or
and
sbb
push
jl
retf
sbb
scas
adc
pushf
and
xchg
fild
jmp
fs
cmp
outs
aad
add
dec
aad
cmp
popa
jmp
jne
das
dec
xchg
add
repnz
mov
xchg
rcl
and
lods
enter
out
adc
popf
out
xchg
jnp
sub
inc
cmp
or
loopne
mov
rcl
dec
inc
mov
pop
cmp
in
mov
hlt
test
or
jno
and
mov
jmp
test
jne
inc
jp
adc
ds
mov
rcr
jb
cdq
push
jecxz
out
or
or
fimul
jmp
ds
jne
dec
and
fcomip
or
mov
js
push
ret
or
xchg
pop
mov
sub
fcomp
cmps
push
gs
std
movs
adc
dec
jmp
add
cmps
movs
out
mov
push
out
jno
icebp
pop
inc
ins
mov
cmc
sbb
popa
adc
adc
xchg
push
or
mov
adc
pop
lds
pop
test
xchg
sahf
aad
mov
aas
addr16
rcr
test
fbstp
or
push
jmp
mov
dec
inc
out
outs
dec
xchg
cs
add
sub
data16
leave
mov
loope
sbb
mov
adc
int
xor
cdq
dec
push
lahf
dec
(bad)
out
dec
rol
cs
test
ins
and
retf
xchg
sbb
and
int3
jbe
jmp
lea
xchg
or
cld
ja
adc
xchg
test
lock
imul
(bad)
xor
mov
dec
icebp
sti
loop
das
sar
xchg
fisttp
mov
xor
out
shl
fisttp
das
jno
push
adc
adc
mov
ja
pop
es
lods
lds
test
dec
imul
lods
nop
xor
les
out
(bad)
fimul
stc
gs
je
test
ins
inc
cld
jle
jnp
rol
mov
jae
rcl
cmp
cmps
mov
out
push
in
dec
jle
ins
add
icebp
xor
jge
sbb
adc
imul
adc
cmps
test
dec
cli
push
dec
fdivr
icebp
ja
outs
js
push
mov
xor
or
aaa
fadd
add
sub
fwait
sbb
dec
mov
add
push
and
lock
or
int
mov
lods
jecxz
adc
lods
push
ror
mov
mov
sbb
outs
dec
hlt
int
lahf
adc
mov
in
inc
cmp
and
xchg
loope
mov
jb
push
and
cwde
outs
fnop
mov
rcr
js
hlt
adc
pop
mov
fstp
pusha
push
retf
and
xchg
cmp
jbe
jg
mov
mov
retf
sub
jp
(bad)
aas
loop
xchg
add
xchg
mul
rcr
clc
xor
add
add
mov
das
pusha
or
test
mov
mov
jecxz
and
popf
xor
(bad)
neg
pop
inc
(bad)
scas
call
sub
jge
repz
push
and
es
sti
mov
jmp
(bad)
aam
mov
pop
int
push
and
movs
rol
jle
sub
mov
fsubr
test
sar
fucom
and
stc
lods
loopne
fwait
xchg
inc
push
scas
idiv
cli
fistp
pop
pushf
stos
mov
icebp
aad
fnstsw
(bad)
shr
sar
sbb
add
sbb
xor
and
push
inc
out
sbb
adc
sub
popf
out
dec
jl
xor
mov
pop
dec
sbb
cmovbe
int3
sahf
cdq
in
jnp
les
or
mov
sbb
add
sub
push
mov
cmp
xor
imul
xchg
dec
xchg
dec
sbb
repz
aas
xor
ja
test
dec
xchg
xor
jno
inc
popa
jge
sbb
rol
pop
mov
xor
xchg
jbe
ret
mov
push
ins
push
(bad)
pop
push
sub
sub
sub
or
adc
pop
cmc
(bad)
xor
push
dec
lods
sub
push
int3
jl
sbb
iret
pop
jmp
xor
cmc
lea
sub
push
push
retf
push
leave
push
jmp
pop
sub
add
push
xor
pop
or
(bad)
test
and
les
enter
xchg
xor
pushf
sbb
xor
push
fwait
(bad)
test
or
mov
std
cmp
mov
loope
push
sbb
or
cmps
mov
inc
mov
cmp
add
fs
std
xor
jg
and
add
arpl
adc
or
pop
sbb
stos
dec
mov
push
jmp
and
pop
xchg
cmp
pop
iret
and
repnz
fstp
pop
lods
pop
sub
call
sub
dec
cmc
(bad)
xor
sub
les
(bad)
cmc
jnp
push
lods
adc
in
and
sub
lods
bound
lods
daa
ret
fidiv
stc
jns
lahf
movs
fidiv
dec
stos
mov
pop
clc
(bad)
mov
repz
aad
sub
xchg
addr16
neg
inc
sbb
mov
sub
and
add
jnp
test
rcl
mov
xchg
jecxz
inc
xor
inc
and
cmp
leave
mov
push
inc
jae
(bad)
or
dec
add
ins
cmp
mov
dec
or
scas
dec
(bad)
cmp
inc
jmp
data16
test
scas
inc
push
js
scas
fld
sar
sti
outs
fidiv
div
out
dec
add
sub
ins
dec
xchg
inc
fsub
ins
test
fld
mov
imul
and
test
mov
clc
std
push
sub
or
(bad)
lods
adc
test
pop
jae
mov
sub
sahf
push
div
sbb
fiadd
je
hlt
dec
(bad)
sub
loop
scas
ds
or
js
or
jo
push
addr16
aas
push
call
pop
stos
add
aas
cmc
mov
mov
(bad)
movs
fcomip
(bad)
xchg
je
sub
scas
push
or
test
push
inc
xchg
push
ins
jno
hlt
cmp
call
stos
int3
dec
pop
ins
and
imul
aam
retf
xor
lea
push
push
xchg
bound
mov
imul
mov
adc
ja
cmp
xor
mov
into
jb
(bad)
push
inc
pusha
push
add
das
retf
cmp
push
add
(bad)
fisubr
test
push
sbb
mov
aad
pop
mov
adc
scas
fimul
stos
retf
and
pop
out
jmp
cmp
or
mov
arpl
(bad)
dec
fistp
cmp
imul
out
push
mov
push
(bad)
inc
test
push
aad
sbb
outs
mov
imul
and
fisttp
icebp
jne
cmps
out
inc
mov
inc
sbb
ins
jo
je
jmp
sbb
daa
std
cs
loopne
push
mov
lods
push
lock
add
cwde
shr
jo
push
fsub
push
fisubr
test
retf
jge
mov
push
scas
xchg
mov
rcr
mov
iret
mov
push
lods
push
pop
movs
mov
outs
push
mov
adc
cmps
sbb
mov
push
movs
pop
ret
jbe
sbb
fsub
mov
mov
cld
mov
stos
jecxz
mov
mov
lds
sbb
sbb
and
cmp
jns
(bad)
adc
xchg
(bad)
ins
push
dec
lods
fnsave
dec
outs
or
jl
pop
pop
lea
lods
push
cwde
into
test
mov
shl
shr
sbb
sub
or
mov
retf
clc
inc
scas
bound
dec
sbb
test
fisub
adc
adc
add
inc
in
dec
cdq
or
mov
in
addr16
inc
push
mov
or
jb
cmps
mov
or
movs
rcl
ins
xchg
das
cmp
inc
je
(bad)
in
mov
push
xchg
in
add
scas
push
popf
pop
and
and
push
mov
jbe
int
jle
fsub
xor
int3
aad
dec
push
(bad)
pop
xor
test
(bad)
movs
icebp
adc
not
cmps
in
inc
inc
pop
push
mov
xchg
mov
cmp
scas
inc
retf
xor
pop
add
sub
mov
jns
pop
pop
hlt
dec
mov
(bad)
fistp
adc
outs
jbe
mov
mov
in
ror
jl
mov
test
or
jno
sbb
adc
mov
popa
pop
push
movs
sub
and
sub
jnp
jo
dec
fcom
dec
push
pop
sbb
jne
into
nop
adc
sub
xchg
aam
or
stc
pop
push
aad
xor
push
dec
inc
push
inc
fiadd
mov
cli
push
popf
popf
push
xor
mov
clc
dec
jns
out
aaa
jmp
mov
cmc
mov
xlat
sub
rol
mov
lods
cmp
repz
test
xor
test
stos
add
xchg
push
add
ffreep
sub
daa
daa
out
aas
movs
add
nop
je
fdivrp
push
jmp
or
(bad)
std
sbb
jmp
test
ins
(bad)
xor
pushf
pop
out
lock
and
xor
clc
outs
es
fbstp
xchg
push
mov
xchg
pop
movs
pop
cwde
or
lahf
xchg
out
in
jbe
out
mov
inc
pop
xlat
cmp
iret
mov
jmp
(bad)
mov
xchg
dec
inc
pop
popf
pop
and
das
lods
js
out
je
push
and
sub
cmps
xor
sub
addr16
push
pop
shl
hlt
jae
cmp
les
out
adc
cld
in
mov
push
pop
call
fs
sbb
mov
mov
jge
mov
shl
mov
cmp
pop
fadd
retf
pop
(bad)
push
sbb
in
enter
mov
push
mov
push
pop
jle
sub
pop
push
inc
es
add
ss
mov
sar
dec
fcom
into
sbb
jns
xchg
lods
pop
inc
xchg
mov
xor
sahf
idiv
push
sub
imul
or
mov
push
out
add
adc
addr16
mov
sbb
pusha
adc
int3
fisub
fmul
in
fs
cmp
into
inc
jge
mov
sub
shl
fcom
pop
(bad)
repz
fstp
lahf
aam
dec
sbb
outs
sbb
data16
sub
jne
sbb
sbb
jb
pop
pop
(bad)
out
mov
mov
or
or
dec
lds
sahf
sbb
or
call
(bad)
mov
sub
push
jno
mov
add
cmc
adc
aam
xchg
mov
pop
ror
into
or
push
pop
repz
push
cmp
push
jb
dec
jl
push
sub
jmp
addr16
mov
xchg
pop
mov
push
not
dec
(bad)
mov
into
cmps
pop
adc
jge
and
xlat
sbb
push
xor
ins
jo
and
fwait
cmp
scas
xchg
mov
scas
cmps
icebp
lods
int3
call
int3
add
sub
push
(bad)
adc
lds
dec
sub
push
jb
pop
repnz
cwde
xchg
push
xchg
cs
jmp
es
lods
mov
sbb
or
out
mov
xchg
pop
cmp
call
(bad)
sbb
inc
jmp
xor
xor
outs
cmp
mov
xchg
jg
or
or
xchg
cmc
popa
icebp
sub
sbb
xchg
stc
xchg
sti
pushf
repnz
adc
and
out
jno
popf
pusha
mov
stc
inc
jo
fnstenv
(bad)
jp
jnp
std
dec
mov
arpl
popf
cmp
outs
cwde
cmp
jmp
aam
leave
jnp
out
out
or
(bad)
arpl
adc
pop
pushf
popf
inc
iret
scas
cwde
movs
gs
fmulp
test
or
mov
fcomp
pushf
sub
in
jno
xor
stc
in
dec
shl
lahf
jno
nop
mov
js
mov
imul
mov
push
xor
push
mov
addr16
and
or
fsub
xchg
cmps
outs
je
cmp
mov
les
ins
int
jg
in
sbb
int
sbb
into
mov
dec
lods
xor
push
icebp
mov
sbb
jno
lds
sub
jmp
repz
ror
repz
loopne
jb
neg
(bad)
nop
cmp
add
add
imul
mov
ret
inc
les
ds
ins
cwde
xor
shl
sub
mov
cmps
fmul
aaa
(bad)
cmp
push
mov
out
jmp
adc
xchg
add
adc
adc
sub
mov
or
xchg
das
mov
imul
pop
enter
test
fst
shr
jmp
in
xchg
inc
shl
pop
xor
xchg
sti
xchg
test
mov
mov
jae
sbb
or
cmps
out
stc
js
or
and
aad
add
dec
inc
sar
pop
aaa
outs
cmps
and
add
rol
sub
dec
jmp
cs
out
or
dec
popf
daa
jl
and
or
xchg
pop
sbb
and
rcr
sub
sub
mov
sbb
mov
xchg
sahf
rcl
mov
xchg
ins
mov
pop
xor
adc
jl
loop
mov
adc
stos
mov
out
mov
jmp
pusha
add
in
xlat
lods
sbb
adc
pop
dec
inc
xor
jl
call
mov
pop
repz
push
jle
push
dec
(bad)
movs
fdiv
pop
rol
pop
jns
fmul
mov
xor
mov
mov
sbb
xchg
mov
shr
iret
gs
cmp
fcomp
sub
pop
sbb
cdq
and
pop
cmp
push
js
enter
gs
leave
and
cmp
sbb
mov
inc
nop
stos
jno
push
popf
stos
push
jl
mov
xchg
dec
imul
aad
mov
pop
out
and
sbb
repnz
sahf
sub
mov
sub
popa
or
loopne
addr16
or
(bad)
mov
mov
cmp
sar
repz
push
mov
fwait
out
mov
inc
mov
rol
in
or
xor
js
fidiv
adc
push
fs
sbb
pop
adc
mov
aad
or
leave
sub
jg
jl
scas
pushw
mov
or
push
jmp
mov
dec
shr
sbb
adc
cmc
sub
in
ins
inc
sub
jae
xor
ds
(bad)
ins
ins
jns
pop
cmps
shr
xor
out
mov
fdivr
in
xor
or
add
add
retf
gs
pop
daa
xchg
movs
cmp
ficomp
jne
cmp
sub
xlat
in
inc
popf
aas
leave
cmp
in
xchg
retf
enter
movs
mov
sub
sub
fisttp
sbb
or
loop
jns
mov
mov
pop
cmp
xlat
sahf
retf
jmp
stos
or
shr
xchg
lahf
pop
xor
fwait
xchg
mov
in
sbb
fsub
push
sbb
mov
sub
and
(bad)
bound
xchg
das
sub
out
sbb
push
push
inc
pop
not
out
jno
popa
fwait
test
and
cld
sbb
cli
fisttp
push
aad
mov
ror
inc
test
dec
cmps
mov
jge
sub
int
cmps
mov
repz
shufps
or
adc
add
xor
out
iret
xor
aam
sbb
dec
fistp
cli
push
pusha
dec
xchg
sbb
icebp
sar
pmulhuw
mov
cmps
pushf
int
enter
mov
aam
xchg
rcl
bound
cmp
xor
cmc
out
into
push
aam
cmp
hlt
inc
gs
fisttp
(bad)
jmp
or
dec
push
int3
jb
dec
mov
pushf
add
in
adc
add
in
test
jmp
mov
jae
mov
pop
and
adc
pop
shr
pop
adc
xor
retf
in
leave
or
sbb
push
test
clc
scas
outs
movs
xor
sti
test
lock
push
not
push
int
adc
icebp
das
xor
jecxz
and
test
push
jecxz
mov
sub
inc
scas
mov
push
add
stos
loope
into
mov
dec
xchg
inc
xor
in
mov
push
inc
fimul
fucomi
jnp
push
xor
(bad)
out
call
fnstcw
sbb
or
stos
or
rcl
mov
add
pop
mov
and
call
pextrw
inc
test
xchg
xchg
test
cdq
add
adc
xchg
dec
or
mov
lahf
dec
scas
push
test
inc
xor
ins
das
je
mov
(bad)
inc
jnp
push
lods
retf
mov
sbb
mov
sub
pop
js
leave
data16
jb
ins
inc
ins
fcomp
sahf
jmp
inc
or
les
pop
mov
mov
mov
clc
iret
outs
pop
jmp
cs
mov
or
add
add
or
sub
or
cmp
test
xchg
add
sbb
sahf
mov
sbb
jo
mov
push
mov
push
mov
or
fnstenv
cmp
je
test
mov
mov
loop
jle
sbb
(bad)
loope
add
push
aaa
jae
out
adc
dec
fwait
daa
xchg
pushf
lds
add
inc
ss
inc
sbb
mov
pop
sbb
fstp
ret
outs
pop
int
bound
aas
das
sar
cmp
(bad)
cs
mov
ins
stc
mov
packssdw
(bad)
or
pop
sub
imul
add
adc
adc
cmp
in
sub
aad
adc
ins
in
retf
sbb
movs
stos
xchg
daa
jle
shr
sub
mov
and
imul
lock
adc
ret
arpl
clc
inc
leave
add
inc
std
or
cmp
dec
sbb
aas
add
pop
call
movs
or
cmp
retf
xchg
lds
addr16
xor
push
xchg
add
mov
mov
push
xchg
popa
sbb
push
inc
loop
int3
dec
js
sbb
sbb
retf
mov
enter
mov
leave
stc
inc
jo
icebp
cmp
xchg
sub
adc
int3
xlat
jnp
cmps
mov
hlt
sub
jg
in
jp
jne
loop
icebp
(bad)
xchg
inc
ds
cmp
xor
mov
jbe
pop
jg
inc
and
mov
dec
push
rcr
pop
jbe
or
jle
pop
ret
pop
movs
mov
mov
(bad)
out
jb
cmp
mov
cli
hlt
pop
(bad)
xor
xor
(bad)
scas
add
out
dec
dec
pop
adc
fdecstp
inc
repz
loopne
mov
aas
test
pop
stc
test
xor
lock
mov
int3
push
xchg
addr16
dec
jbe
out
add
xchg
(bad)
mov
test
xor
add
out
sub
arpl
adc
push
(bad)
fdiv
jns
push
into
adc
dec
and
or
add
repz
pop
xor
inc
or
shl
jmp
jmp
rcl
cmps
fld
scas
pop
sub
ds
pop
cmp
cmc
jae
adc
repz
push
das
aam
pusha
inc
loopne
out
fcmovbe
stos
cli
and
pop
jb
xchg
cs
aaa
adc
jbe
inc
xchg
fistp
cmps
xchg
sbb
xchg
ins
hlt
(bad)
stc
movs
nop
not
ja
xlat
fldenv
lea
sub
shr
and
aas
imul
movs
ror
out
loope
stc
aad
out
mov
xchg
xor
aas
repz
jne
cmp
js
push
gs
fdivrp
test
mov
cli
ja
mov
inc
mul
adc
shl
call
pop
jns
(bad)
cli
mov
cmp
std
inc
test
pusha
and
fdiv
mov
pusha
inc
aas
stos
fisttp
pop
dec
pop
dec
enter
aad
mov
push
pop
jns
and
add
jo
daa
jmp
std
loopne
pop
jmp
mov
add
jne
mov
ins
sub
clc
out
xchg
sbb
aas
push
call
scas
mov
xchg
jmp
cwde
ds
fistp
aaa
mov
sbb
or
xchg
iret
ret
cmp
mov
popf
(bad)
stc
or
mov
adc
in
jmp
jle
mov
test
stos
dec
push
movs
push
pop
cmp
in
pcmpgtd
xchg
adc
mov
xor
xchg
ja
adc
and
push
mov
ss
mov
lds
in
cwde
inc
and
fdiv
popf
jae
and
mov
dec
push
mov
push
jbe
cmp
jecxz
not
stos
mov
lods
add
sub
mov
or
hlt
in
stos
lods
ret
adc
xchg
and
inc
fild
(bad)
sub
mov
jmp
leave
jae
ja
and
lods
popa
aam
pop
fist
popa
fsubp
add
push
movs
or
jae
mov
std
or
xor
hlt
adc
in
xchg
adc
sbb
jge
shl
repz
es
shr
lahf
or
cdq
push
(bad)
shl
scas
out
sar
clc
mov
jle
or
pop
adc
dec
add
cmp
xor
sub
jle
(bad)
(bad)
(bad)
enter
ins
pop
arpl
clc
jno
movs
ss
jp
cmp
xchg
inc
aas
clc
in
jo
loop
push
aam
repnz
outs
sbb
or
mov
push
add
push
pop
fs
pop
xor
and
data16
punpckhdq
cmp
rcr
jl
icebp
retf
sbb
loop
push
pop
push
gs
add
into
sbb
ss
xor
(bad)
sub
inc
mov
mov
inc
dec
stos
je
iret
popa
mov
mov
test
outs
ret
call
sbb
movs
mov
out
test
out
jno
jae
imul
arpl
fidiv
jl
pop
pushf
and
jmp
sbb
inc
sub
sti
cld
mov
xchg
(bad)
ficom
int3
rol
mov
or
in
cmp
fcomp
ss
ins
pop
(bad)
out
dec
cmp
fnstcw
scas
cwde
cmp
inc
aad
aam
dec
cmp
popf
movs
pop
mov
mov
cmp
jle
jl
pop
cmp
stos
or
clc
mov
xchg
push
cmp
cmp
xor
inc
xchg
inc
or
repz
mov
sub
adc
scas
dec
lahf
pushf
push
stos
aas
jge
mov
rcr
cwde
push
popf
popa
jmp
loop
xor
imul
mov
mov
test
and
mov
cmp
(bad)
in
repz
fs
and
jbe
dec
mov
xlat
mov
int
fimul
push
(bad)
xchg
sar
js
mov
(bad)
mov
add
int
jbe
pop
and
nop
leave
mov
adc
or
pop
dec
sub
push
push
test
jno
mov
cs
dec
pop
or
pop
icebp
cs
in
adc
jecxz
js
or
loope
cmc
leave
or
inc
dec
mov
xor
adc
(bad)
retf
xor
daa
repz
in
lods
lds
lea
adc
mov
add
mov
jmp
loope
adc
pop
push
jmp
js
pop
js
movs
nop
int
mov
mov
sbb
pop
jl
in
test
xchg
call
fsub
add
xchg
cld
gs
std
push
imul
pusha
cdq
clc
pop
and
enter
add
iret
ret
nop
jmp
(bad)
sti
sbb
push
ss
adc
pop
(bad)
mov
xchg
adc
into
out
lods
mov
cld
mov
not
inc
or
ret
mov
les
pop
pop
call
cwde
adc
shl
pop
or
cld
xchg
ret
into
scas
and
iret
daa
xchg
(bad)
push
jne
(bad)
fidivr
mov
push
add
and
pusha
in
into
jmp
sbb
jg
add
cmp
sub
sbb
out
or
push
std
jmp
pop
adc
mov
or
les
sub
fsubr
pusha
add
daa
pushf
xor
dec
pushf
call
mov
cmp
ret
sub
jbe
push
dec
call
idiv
repnz
push
dec
cmps
push
sbb
adc
stc
adc
adc
cld
pop
push
icebp
xor
mov
jg
xchg
add
xchg
pop
and
mov
dec
retf
in
pushf
push
rcr
shr
pusha
and
pop
xchg
js
ja
mov
shr
fcmovne
xchg
jge
outs
or
lds
gs
mov
out
push
push
jno
lds
stos
dec
cmp
cmc
clc
and
push
sbb
or
das
repz
push
sub
inc
ins
(bad)
loopne
idiv
or
aad
dec
cmps
(bad)
js
inc
cmp
pop
push
rcr
dec
mov
test
xchg
shr
rol
imul
mov
ret
and
sub
sbb
dec
inc
aam
xor
outs
mov
cmc
jmp
add
clc
std
fstp
test
clc
push
dec
inc
(bad)
aam
shl
stc
je
jae
adc
pop
call
in
mov
mov
ss
aad
dec
test
loop
sbb
out
or
int3
fsubr
and
icebp
push
retf
inc
add
ds
mov
dec
clc
jecxz
xor
and
sbb
inc
mov
sahf
inc
pop
and
je
pop
dec
mov
adc
xor
popf
ins
pop
mov
push
and
js
mov
cld
cmps
push
cmovge
neg
test
jp
xchg
cmps
cmps
imul
push
addr16
push
imul
inc
xchg
jbe
ret
mov
sbb
pop
fisub
gs
dec
sub
mov
xchg
jb
cmp
jno
nop
sub
outs
push
rcr
inc
ficomp
push
push
stc
add
xchg
jle
iret
pop
cld
mov
mov
iret
(bad)
rcr
mov
pop
add
mov
cmp
inc
mov
mov
fidiv
jne
push
and
enter
into
rol
dec
fimul
sti
icebp
(bad)
inc
xor
les
add
je
adc
adc
jns
cmp
sub
lods
loop
mov
xor
inc
mov
aam
dec
cmp
call
lahf
inc
aaa
retf
add
dec
jbe
pop
add
movs
jp
(bad)
scas
pop
sub
faddp
mov
push
loope
pop
cmp
jle
cmp
push
sbb
mov
popa
test
test
xchg
retf
out
pushf
dec
fcomp
dec
add
lea
movs
out
(bad)
and
pop
das
mov
sub
add
cdq
loope
xchg
std
sbb
nop
xchg
clc
xor
imul
and
mov
jge
enter
ret
cli
js
popf
push
dec
add
add
imul
addr16
fs
add
xchg
cmp
xor
adc
adc
xchg
arpl
or
data16
sbb
loop
lds
into
xor
xchg
add
xor
in
xchg
lds
fnstenv
push
or
clc
dec
shl
mov
je
out
and
js
ret
pop
es
lahf
push
fstp
sbb
enter
(bad)
hlt
fnstcw
call
test
pop
int
adc
and
mov
jl
and
addr16
push
popf
push
dec
es
push
inc
jo
xchg
dec
movs
(bad)
in
adc
lahf
sub
aas
(bad)
jmp
sbb
pop
mov
movs
sti
dec
sub
pop
jbe
sub
retf
cmps
ret
or
idiv
push
bound
ja
pop
mov
mov
enter
fidiv
adc
clc
mov
mov
cld
ins
jb
imul
in
sub
push
jo
jns
mov
and
test
xlat
sbb
pop
or
adc
pop
cmc
ror
(bad)
jb
fidiv
loope
lods
dec
xor
fbstp
inc
rcr
push
xor
cmps
mov
add
fist
sub
int3
mov
popa
cwde
ss
mov
call
jp
ins
mov
je
pusha
(bad)
rcl
pop
out
(bad)
xchg
lahf
cmp
adc
xchg
out
test
cmp
add
scas
addr16
jg
sub
jecxz
test
test
push
xor
cs
mov
or
xlat
add
scas
rol
push
push
ss
mov
outs
xor
mov
sbb
cwde
(bad)
mov
mov
je
inc
inc
pop
push
ins
popf
(bad)
mov
push
jns
pop
dec
cmp
lods
call
pop
and
pop
push
push
mov
jnp
(bad)
dec
sbb
and
stos
sbb
cmc
aad
jge
cmp
and
bound
add
and
push
adc
mov
fistp
pop
(bad)
aam
mov
inc
mov
ficom
fcmove
mov
xchg
cld
(bad)
and
push
xchg
adc
test
movs
push
or
shl
sbb
or
cdq
adc
and
in
mov
loope
mov
mov
imul
push
das
outs
mov
lahf
push
adc
(bad)
fsubr
dec
sub
or
xor
mov
sbb
clc
mov
mov
mov
in
cmc
xchg
add
sub
adc
adc
inc
add
xchg
movs
sub
out
lods
sbb
ficomp
or
fmul
lea
add
(bad)
lock
adc
cs
cmp
push
pop
das
adc
pop
or
cli
mov
or
jo
je
push
inc
sub
mov
mov
sbb
(bad)
mov
fs
mov
xchg
rcr
push
jle
dec
or
outs
sub
(bad)
mov
mov
add
(bad)
into
ret
push
jns
jecxz
stos
fiadd
clc
(bad)
lods
es
(bad)
push
dec
dec
sub
xchg
cmp
js
aaa
push
std
(bad)
mov
ret
pop
adc
and
add
(bad)
jecxz
mov
data16
sbb
jecxz
lea
mov
push
outs
imul
jge
adc
adc
imul
clc
out
mov
xchg
cmp
dec
and
or
test
jo
ins
mov
std
mov
ds
mov
xchg
mov
xchg
iret
scas
popa
sub
sbb
mov
inc
add
jo
sbb
enter
xor
sahf
ja
pop
sbb
pushf
dec
push
cmp
lds
jae
jp
scas
push
jg
mov
push
cmp
movs
repz
cmp
in
cmps
gs
out
jl
loopne
lods
mul
(bad)
mov
cli
cwde
jno
cmp
sbb
repnz
dec
sahf
add
call
add
daa
mov
cmp
adc
pop
sub
aaa
scas
adc
xchg
in
(bad)
and
shl
popa
mov
mov
xor
push
and
test
outs
xor
hlt
cmp
mov
pop
ss
popf
cs
sbb
mov
outs
adc
or
cmc
in
mov
test
xchg
inc
push
cwde
jmp
push
and
sub
enter
imul
xor
jmp
mov
loop
cmps
aam
mov
mov
ds
adc
fimul
arpl
fwait
je
arpl
ins
mov
xor
aam
mov
hlt
xchg
xchg
jae
inc
jno
jbe
mov
stos
call
es
dec
or
adc
sbb
test
dec
mov
pusha
or
adc
(bad)
lock
ds
jle
daa
xchg
jecxz
push
test
push
sub
test
jne
jne
test
nop
retf
(bad)
aam
call
pop
sub
cmp
imul
mov
mov
and
sub
imul
retf
mov
or
gs
call
movs
repnz
sub
aam
pop
jno
pop
mov
inc
xchg
jno
inc
push
in
test
pop
das
outs
daa
cld
ficomp
movs
mov
scas
iret
and
mov
and
pop
aam
stos
out
sub
mov
fnstenv
or
pop
sub
sub
xchg
push
pop
sub
daa
popf
imul
cmp
daa
inc
mov
test
scas
inc
pop
cmp
in
or
data16
pop
sbb
sahf
jmp
call
jmp
loop
xchg
(bad)
mov
sbb
and
cmps
cmp
and
int3
inc
jle
pusha
stc
push
adc
fadd
sub
cmps
out
mov
popf
pop
pop
mov
adc
jbe
pop
adc
and
mov
enter
stos
repz
mov
movs
fwait
push
es
pop
sbb
xor
jns
adc
int3
(bad)
xchg
ror
retf
or
push
jge
jno
icebp
out
sub
sbb
pushf
out
pop
pop
cs
mov
fimul
and
sub
push
jg
jecxz
fwait
jmp
inc
adc
loopne
int
aaa
imul
mov
addr16
push
cmps
data16
add
cdq
std
mov
inc
in
add
and
outs
pop
or
dec
inc
popf
in
icebp
or
imul
jno
add
fidiv
cld
out
mov
fiadd
inc
xor
movs
sbb
adc
push
mov
push
mov
and
es
leave
rcl
mov
popf
sbb
jge
jno
in
push
add
mov
sbb
les
jg
and
pop
test
mov
into
jl
xor
jp
xor
mov
dec
and
stos
div
xchg
xchg
test
fnstcw
in
shl
push
sub
ret
es
sbb
cmp
out
fst
mov
push
daa
cld
(bad)
movs
fwait
in
adc
xchg
div
rol
xchg
or
repz
cmps
ror
dec
sbb
cmp
push
push
sbb
push
and
cmc
test
add
xor
and
(bad)
mov
mov
mov
retf
mov
push
jg
push
sbb
add
retf
movs
in
nop
cmp
lock
mov
xor
pop
dec
sbb
pop
mov
sub
rcl
cli
jbe
cmp
jne
(bad)
popa
push
xor
ja
push
jge
pop
cmp
add
mov
dec
imul
out
dec
sbb
jmp
rcr
push
jno
add
stos
out
test
dec
xor
dec
cmp
mov
or
ja
xor
or
into
add
mov
dec
jo
call
jle
pop
(bad)
out
fistp
xchg
jmp
ins
mov
js
push
iret
mov
xchg
or
add
(bad)
lods
in
cmps
dec
pop
push
inc
lods
add
push
xchg
or
cmp
and
cmps
dec
pushf
push
pop
adc
jge
inc
and
je
sub
or
pop
and
(bad)
lods
fdiv
frstor
fdiv
mov
int3
mov
test
lock
dec
inc
or
cmps
cmp
test
es
out
cmp
add
adc
mov
(bad)
pop
and
test
es
jb
cmovl
jnp
inc
push
repnz
loop
jnp
dec
pusha
outs
cmp
hlt
mov
xchg
jo
jae
lds
test
push
xor
jnp
adc
loope
mov
leave
jmp
mov
or
inc
add
aam
cli
adc
push
push
repnz
mov
js
push
push
call
jo
jns
clc
lahf
fcom
push
addr16
shl
fwait
cmc
fwait
pop
ins
add
ins
push
push
scas
xchg
cld
fnstcw
push
pop
inc
es
std
cmp
int3
add
lds
stc
mov
mov
sub
(bad)
jmp
inc
add
or
(bad)
das
mov
mov
cdq
dec
imul
loopne
xchg
hlt
or
cli
mov
adc
(bad)
add
movs
std
mov
jb
outs
jb
push
je
and
movs
aas
or
push
pop
ja
xor
rcr
mov
adc
retf
ja
jl
out
stos
pop
add
rol
dec
sbb
or
int
(bad)
mov
ror
pushf
out
mov
test
scas
ret
frstor
sub
dec
aas
fs
call
ficom
leave
mov
xchg
dec
push
js
aad
in
mov
sbb
add
cmp
mov
fstp
shl
or
mov
pop
push
jbe
mov
mov
into
loope
xchg
repnz
cmps
jp
ss
dec
and
and
or
mov
(bad)
(bad)
jp
push
xor
pop
sub
mov
pop
pop
xchg
sub
inc
adc
push
cmp
dec
pop
adc
fidivr
cpuid
jecxz
mul
test
pop
fs
repz
mov
repnz
inc
add
dec
add
cmps
or
pop
movs
cld
imul
aad
cwde
jmp
outs
movs
jmp
fild
xchg
(bad)
movs
je
adc
aas
inc
or
sbb
repnz
xor
jmp
jnp
clc
stos
lds
ja
inc
test
pusha
add
iret
cmp
mov
(bad)
mov
sbb
bound
pop
sbb
or
xor
(bad)
in
mov
scas
or
sbb
sbb
adc
jbe
cmps
push
jae
iret
mov
xor
push
in
mov
inc
jno
push
xor
lds
push
lahf
xor
leave
out
mov
mov
dec
push
inc
addr16
imul
jnp
outs
pusha
xor
mov
popa
cmp
ror
jmp
mov
scas
inc
dec
xor
dec
ds
mov
pop
addr16
xor
xchg
xchg
lds
aas
js
std
fisubr
add
jmp
jb
jns
rcl
(bad)
punpckhdq
movs
push
dec
cmp
ror
mov
jmp
xlat
sbb
jle
push
pop
add
mov
lea
add
sbb
in
mov
mov
pop
jle
inc
lods
dec
cmp
cld
outs
cld
and
xchg
enter
call
(bad)
test
(bad)
fcomp
push
xchg
pop
je
jmp
mov
mov
xchg
and
arpl
retf
cmp
push
push
mov
pop
push
push
test
lods
fistp
pushf
(bad)
jbe
gs
cli
jmp
jle
daa
aam
push
hlt
cmp
adc
adc
lock
lahf
js
push
pop
frstor
push
test
pop
xor
int3
int3
mov
pushf
push
add
inc
xor
fnstcw
xchg
lock
pop
sbb
pop
daa
inc
mov
fdivr
xchg
das
outs
adc
cmp
rol
stos
popa
push
sub
(bad)
xor
shl
xor
movs
or
out
shl
pop
shl
mov
jbe
push
push
ja
cmp
pop
dec
push
aaa
push
adc
pop
push
ja
inc
push
pop
cmovl
bound
push
pop
cmp
sub
or
add
fisttp
inc
sti
or
xchg
inc
xor
aad
lds
mov
stos
fst
jo
arpl
in
aas
nop
cmc
push
xor
stos
aaa
inc
lock
and
cmc
add
pop
xor
cli
in
fstp
fist
inc
or
add
hlt
xlat
xchg
cmp
pop
ins
xor
(bad)
cmps
repnz
daa
in
retf
stos
jns
pop
push
or
clc
in
mov
xchg
and
gs
sbb
hlt
fldcw
scas
sub
sbb
ja
or
dec
adc
mov
stos
jmp
imul
and
push
cmc
into
mov
sti
sbb
gs
jecxz
outs
xor
aaa
jb
(bad)
shl
dec
aam
in
mov
leave
sub
fwait
sahf
je
and
retf
mov
mov
out
(bad)
in
mov
cmovns
test
cdq
leave
mov
and
cli
mov
xchg
je
shl
mov
test
in
xor
sbb
and
test
inc
push
adc
cld
xlat
fwait
xchg
es
sub
fist
movs
sbb
lds
leave
xor
fwait
inc
inc
jo
xor
rcl
sbb
mov
imul
mov
push
jl
adc
sar
leave
lods
cmp
xor
stos
add
(bad)
mov
adc
sbb
push
push
fcmovne
mov
inc
inc
push
push
mov
(bad)
cmps
hlt
sub
xor
cmp
(bad)
fistp
mov
xchg
cmp
dec
jb
dec
and
mov
lahf
jge
push
stos
enter
mov
mov
mov
pop
cmp
data16
or
ss
push
je
bound
or
pop
pop
inc
daa
jbe
push
ss
jo
pusha
es
js
push
or
jl
pop
adc
mov
es
push
add
sti
add
xchg
enter
cmp
in
stos
enter
ins
mov
cld
movs
(bad)
cmp
or
pop
(bad)
mov
jns
gs
push
shl
mov
push
hlt
(bad)
mov
cwde
pusha
mov
xor
sub
mov
dec
or
fldenv
int
fcomp
sub
les
sahf
in
mov
mov
into
scas
xchg
mov
dec
jnp
or
lds
cmps
inc
pop
pop
inc
(bad)
xchg
addr16
add
mov
movs
rol
push
and
xchg
dec
movq
fwait
loopne
fist
mov
and
push
cdq
dec
jbe
ss
pop
pop
or
pop
or
outs
aaa
push
cmp
ss
push
pop
adc
jge
pop
sbb
ins
and
jnp
inc
or
dec
xor
or
adc
shl
xchg
push
push
sbb
call
ficomp
mov
pop
push
jmp
outs
add
sbb
or
push
aam
mov
ins
test
test
(bad)
in
rol
mov
push
mov
dec
push
or
mov
retf
mov
repnz
mov
lods
hlt
in
test
sbb
adc
cmp
std
mov
jle
dec
cmp
mov
rcl
shl
(bad)
sub
jb
cmc
cmc
fmul
pop
add
cld
nop
cmc
add
push
mov
mov
mov
pop
dec
mov
mov
or
mov
pusha
cmp
lock
inc
or
outs
sub
xor
push
sbb
pop
cmp
jb
popa
xor
jge
ins
add
jb
push
pop
push
xor
pop
sub
dec
pop
xor
int3
in
mov
mov
xchg
punpckldq
mov
mov
ja
sbb
movs
sbb
in
scas
in
mov
xchg
mov
xchg
ror
and
fcmovbe
mov
mov
lds
inc
test
jo
and
pop
cdq
add
add
cmp
and
stos
mov
(bad)
enter
xchg
adc
fcomp
mov
fadd
sti
mov
push
std
xchg
fwait
sbb
add
fwait
adc
add
aam
ficom
sub
loope
sahf
and
cmovnp
lods
repz
aas
dec
pop
aam
fisttp
imul
(bad)
xor
dec
adc
push
pop
push
sbb
pop
cmp
jne
outs
aas
jg
push
cmp
ins
add
push
dec
or
pop
cdq
ror
rol
repnz
inc
pop
sbb
inc
add
les
pop
into
in
test
add
lods
cli
mov
push
xor
fidivr
mov
mov
mov
add
(bad)
mov
fcmovne
mov
pusha
mov
mov
outs
in
das
rcr
dec
sbb
out
sbb
adc
sub
(bad)
mov
aam
div
ror
popf
jno
dec
pmaxsw
lahf
out
dec
inc
push
adc
xchg
lds
gs
cmp
inc
and
test
add
(bad)
mov
cmp
shl
fimul
int3
xchg
rcl
jmp
xchg
mov
loopne
lds
shl
fistp
ror
clc
mov
movs
retf
cmps
(bad)
xchg
out
cmc
cmps
out
retf
scas
not
repnz
pushf
lahf
add
into
jnp
dec
add
pushf
pop
push
xor
ror
jne
push
ja
sbb
inc
test
lods
out
push
mov
sub
clc
mov
xor
mov
jno
xor
sbb
cmc
mov
jb
and
push
adc
addr16
(bad)
mov
and
mov
je
adc
sub
hlt
mov
dec
js
das
sbb
not
lea
add
mov
inc
or
sub
xor
mov
inc
xor
lds
scas
imul
mov
inc
jnp
ss
into
jnp
stc
adc
pop
fs
adc
inc
add
inc
add
jns
ins
ss
pop
inc
daa
inc
add
gs
push
or
dec
adc
inc
and
push
dec
or
bound
inc
and
cmp
push
es
inc
add
or
iret
add
adc
pushf
fwait
xor
stc
hlt
mov
mov
movs
xor
mov
mov
sar
movs
out
and
jp
push
dec
(bad)
sahf
cld
cmp
dec
sub
mov
popa
push
jle
adc
out
mov
jle
xor
mov
fisttp
cmp
daa
js
shl
gs
push
sub
fidivr
push
fld
or
sbb
daa
inc
mov
cmps
jp
pop
pop
cli
test
enter
mov
cld
mov
or
dec
sub
(bad)
aaa
pusha
adc
or
and
push
dec
or
dec
sub
xchg
popf
loopne
ror
in
ret
sbb
loopne
clc
popf
fstp
stos
jmp
ret
xchg
idiv
jmp
pop
cmp
adc
fcom
inc
(bad)
cmp
or
stc
es
in
pusha
and
aas
rcr
sti
xor
dec
add
aam
int
mov
subps
into
mov
push
push
and
fnstsw
or
push
loop
aad
adc
es
fist
leave
fstp
xor
dec
mov
ficomp
les
mov
sub
xchg
dec
dec
pop
pop
std
jmp
je
add
mul
pop
or
in
shl
jmp
cmp
push
jl
dec
ds
fimul
int3
sbb
lods
in
lods
out
cld
mov
sti
mov
rcr
hlt
xchg
div
loopne
retf
movs
sbb
sub
jo
bound
arpl
cs
aaa
jae
push
adc
push
(bad)
mov
jne
xor
ret
push
je
cdq
ja
pop
pop
fisub
out
mov
nop
leave
xchg
sahf
repz
or
sub
mov
ins
xor
aas
jnp
out
xlat
xchg
jo
adc
xor
rcr
inc
or
test
add
xchg
push
add
mov
and
sbb
mov
ins
retf
fs
sub
imul
mov
aad
pop
popa
and
std
mov
jbe
imul
adc
test
daa
pop
push
int
aaa
bound
dec
popa
adc
adc
leave
xchg
adc
push
inc
sub
mov
xchg
cmps
lock
fld
and
jge
stos
repnz
jns
xor
arpl
rol
lahf
je
push
adc
mov
jno
pop
pop
in
movs
fisubr
pop
pop
pusha
ds
shr
outs
xor
popa
xor
popa
jmp
ret
jg
inc
or
rol
add
or
cmp
mov
(bad)
xchg
shl
daa
pusha
cmp
xchg
shl
daa
gs
pop
shl
sbb
ficomp
jle
xor
xchg
dec
xor
scas
leave
(bad)
mov
jnp
and
jg
add
pusha
mov
dec
add
js
std
test
mov
les
loopne
xor
and
lods
out
sbb
xlat
bound
(bad)
call
sbb
dec
xchg
mov
stos
clc
out
push
xor
call
add
xchg
fnstsw
pop
bound
cmovg
pop
dec
and
ss
mov
add
adc
jmp
rol
jmp
lock
mov
out
into
lods
push
push
cmp
daa
pusha
pop
aaa
nop
sti
stos
call
int
jmp
push
pop
sbb
xchg
out
xchg
adc
inc
aas
xor
sub
lock
inc
test
or
mov
jo
je
inc
pop
and
pusha
xor
jns
mov
sbb
jnp
cs
sqrtps
cmp
pop
sub
xor
jnp
push
dec
mov
mov
data16
shl
out
jbe
pop
in
(bad)
mov
push
je
inc
fld
arpl
hlt
cdq
icebp
mov
retf
push
inc
cmps
out
test
sahf
shr
jp
and
or
dec
cdq
rol
ror
mov
sub
adc
or
add
loopne
(bad)
gs
mov
add
ss
js
aam
shl
dec
mov
scas
lds
fisub
dec
adc
or
aaa
ja
jae
add
jns
push
out
cmp
jl
adc
jnp
jle
fsub
adc
mov
scas
aad
repnz
adc
xor
sti
nop
xlat
call
or
jle
push
adc
(bad)
aad
mov
push
es
and
loop
mov
push
es
hlt
mov
dec
xor
adc
lods
fist
mov
or
jb
cmp
bound
or
push
xor
jnp
clc
sbb
jno
mov
in
mov
mov
test
mov
sub
jo
and
sti
xchg
mov
mov
xchg
xlat
adc
(bad)
add
fwait
mov
cdq
ficomp
xchg
div
stos
call
std
test
cmp
imul
shr
xor
jno
dec
std
jno
outs
add
lea
xor
add
mov
fst
jno
pop
pop
xor
lea
imul
dec
movs
(bad)
popf
(bad)
jno
inc
in
out
cmp
mov
pop
jmp
rcl
fwait
mov
cmps
int3
mov
cld
(bad)
ror
xchg
add
xor
scas
lds
mov
ss
inc
add
cdq
mov
or
push
hlt
mov
sub
inc
xchg
shl
jno
push
imul
or
daa
jl
mov
sbb
xchg
sub
xchg
xor
hlt
lahf
shr
stos
sbb
push
inc
ss
sbb
inc
test
add
inc
es
sbb
arpl
mov
mov
call
sbb
dec
ds
sbb
mov
mov
pop
or
jbe
add
xor
push
add
ins
push
cmp
jb
dec
push
jl
je
push
sbb
aas
dec
das
pop
in
sti
xchg
jmp
clc
mov
mov
dec
or
bound
jns
and
jnp
xor
jmp
mov
xchg
fbld
in
fdivr
jae
push
sbb
push
loope
fcom
sub
das
inc
in
test
fs
imul
jne
arpl
call
pop
push
and
ret
mov
pop
inc
or
mov
adc
mov
das
inc
das
dec
cmps
mul
and
push
jae
lods
cli
mov
xor
mov
push
ss
lds
mov
xchg
jp
lds
scas
lods
les
jnp
pop
rol
shl
push
mov
test
call
mov
xchg
fldenv
fdivr
mov
jecxz
das
push
shl
(bad)
int
push
dec
loop
in
jmp
ja
stc
stos
shl
cmps
retf
scas
cmps
(bad)
mov
inc
and
pusha
pop
or
xchg
in
fisttp
sub
jnp
in
int
hlt
fisubr
pop
cmp
adc
inc
sbb
pop
sbb
cdq
fist
push
sub
inc
ss
outs
or
and
push
cmp
xor
lods
hlt
mov
imul
and
and
or
mov
ss
push
js
mov
out
mov
xchg
aam
and
pop
push
pop
pop
inc
or
es
push
cmp
inc
adc
in
inc
out
out
(bad)
rol
dec
add
cli
pushf
inc
adc
sub
xchg
mov
sub
fdivr
lds
push
out
xchg
dec
out
nop
es
adc
push
add
cs
fimul
fiadd
lods
repz
xor
mov
icebp
out
cmps
lds
jl
add
out
pop
cli
test
add
call
cmps
jmp
(bad)
xor
in
icebp
ds
inc
inc
pop
push
adc
mov
push
cmp
cwde
mov
gs
push
and
jbe
into
fwait
sbb
jle
iret
pushf
les
jnp
movs
std
sahf
repnz
inc
out
xchg
mov
loopne
sti
clc
popa
pop
sti
xchg
(bad)
xchg
iret
pushf
movs
xlat
idiv
xorps
dec
sbb
add
mov
or
repz
mov
pop
call
jl
jg
dec
dec
and
sbb
inc
add
cmps
adc
ret
mov
push
repz
sub
pop
loopne
jmp
jecxz
lods
scas
movs
lock
jle
sahf
ret
dec
aam
(bad)
mov
fstp
mov
hlt
mov
dec
sub
push
test
xchg
nop
leave
sub
ins
add
sbb
pusha
cmp
mov
daa
dec
add
fisubr
dec
push
(bad)
cmovo
jp
(bad)
stos
stc
xchg
stc
sbb
inc
or
jbe
dec
push
dec
lahf
stos
icebp
xchg
mov
ret
jl
cld
jg
dec
jmp
push
hlt
mov
jbe
mov
mov
cdq
ficomp
ds
sbb
imul
xchg
movs
jmp
jb
push
(bad)
mov
aas
and
loop
popa
out
mov
rcl
cs
add
jg
push
xor
mov
adc
sbb
or
or
call
fwait
rcl
outs
add
mov
inc
or
pushf
les
push
add
pusha
cmp
test
popf
fisubr
jo
cmps
lock
shl
ins
sub
ins
jmp
sti
mov
leave
xchg
leave
add
add
int3
mov
xchg
fild
scas
std
sbb
aas
jl
lock
mov
mov
pop
fisttp
mul
pop
push
sbb
mov
clc
jmp
test
sbb
xlat
clc
outs
leave
ins
das
inc
inc
or
jbe
dec
sub
push
push
in
pop
jecxz
(bad)
cwde
mov
mov
add
mov
(bad)
out
leave
mov
loop
jecxz
jmp
push
sbb
add
mov
cmp
es
out
inc
mov
outs
sub
addr16
dec
sbb
mov
mov
daa
inc
ss
loop
cmp
pop
cmp
lods
repz
push
cmc
mov
sub
pop
jmp
outs
or
cmp
and
loope
nop
enter
jmp
leave
movs
or
mov
xchg
fstp
call
and
fimul
call
aad
ret
cdq
outs
adc
or
add
lea
mov
sub
dec
mov
adc
out
fisttp
popa
and
lahf
test
mov
jl
push
add
int3
popf
fiadd
push
push
lock
and
(bad)
idiv
xchg
scas
fnstsw
mov
pop
popf
and
daa
jno
cmps
jmp
add
xchg
std
in
inc
xor
mov
(bad)
ins
adc
xchg
scas
icebp
sub
sub
dec
adc
outs
jecxz
push
mov
mov
fistp
jmp
daa
test
sub
leave
pop
(bad)
pushf
faddp
xchg
mov
scas
aad
loopne
ins
clc
xchg
lds
sbb
mov
jno
imul
xor
inc
out
xor
jl
jne
xor
dec
push
push
push
and
jp
xor
aas
dec
in
movs
ret
mov
jmp
push
adc
sbb
sub
mov
(bad)
cld
mov
loopne
enter
dec
out
xchg
(bad)
jo
mov
xchg
fldcw
xor
inc
fstp
rol
xchg
call
jae
xchg
sar
mov
add
adc
xor
xor
push
cmp
gs
ss
(bad)
fbstp
xor
dec
pop
out
or
jl
inc
cmp
sbb
push
push
cmp
jp
stos
jmp
sub
scas
mov
in
lahf
iret
lahf
push
jmp
cmp
jle
fsub
pop
cmp
addr16
sbb
aas
inc
and
and
and
jnp
rcr
sahf
iret
mov
inc
add
pop
pop
sub
sar
call
xchg
les
fdivr
ret
mov
xchg
(bad)
aaa
push
out
jb
jno
movs
shl
inc
and
lea
xor
ror
or
xor
aad
mov
pop
loop
cmp
aaa
dec
out
xchg
fild
pop
iret
ja
dec
cdq
int
cmps
call
adc
mov
and
mov
cli
test
lds
mov
jp
loope
mov
repnz
sub
mov
cld
push
cs
sbb
cmp
push
ja
xchg
cli
cwde
out
gs
(bad)
retf
sbb
leave
xchg
movs
push
sbb
ins
push
stc
stos
icebp
xchg
hlt
test
xchg
add
cmp
outs
sub
adc
sub
push
mov
sbb
dec
stc
mov
leave
pop
cmp
jae
mov
cli
call
fisub
xchg
into
lods
(bad)
gs
movs
div
xchg
fcomp
sub
push
scas
jmp
addr16
loopne
push
jmp
stos
cmc
lods
or
fsub
mov
js
es
adc
pop
pop
in
stc
ins
loop
add
and
js
mov
jg
out
or
ins
cmp
cwde
std
(bad)
out
xchg
cmp
add
repz
cmps
into
lods
(bad)
cmp
push
pop
or
gs
add
aas
xchg
movs
arpl
mov
jo
push
pop
sub
jmp
mul
test
outs
or
sub
mov
inc
cmp
xor
mov
xchg
shr
and
ss
lock
in
test
pop
or
jns
sub
mov
fs
mov
or
adc
icebp
mov
mov
inc
xchg
fdivr
adc
xor
call
(bad)
ror
pop
pop
xor
mov
or
leave
mov
mov
and
bound
push
cs
push
rol
cmovge
jge
(bad)
xchg
ficomp
ins
pop
mov
adc
arpl
push
ja
jg
stos
push
ror
ins
aaa
adc
pop
sbb
or
inc
cmp
jb
scas
fisttp
mov
out
les
push
push
jge
inc
and
inc
cs
add
mov
scas
(bad)
mov
scas
std
push
es
fs
pop
fs
(bad)
addr16
cs
sub
popa
cs
mov
iret
adc
ds
or
repz
push
adc
jb
push
(bad)
cmovno
push
fisub
fld
(bad)
or
test
lods
(bad)
xor
fs
test
stos
shl
add
inc
xchg
out
(bad)
into
cwde
repz
ror
dec
push
loop
adc
sbb
test
mov
push
sub
nop
aas
pop
sbb
pop
inc
pop
pop
das
push
in
xchg
sub
das
push
add
outs
jne
pop
pop
jmp
shr
mov
and
es
mov
jl
inc
(bad)
cld
cmp
js
rcr
jae
mov
pusha
sahf
cmps
sbb
mov
add
xchg
or
sbb
add
(bad)
std
xchg
stc
ins
in
xor
push
push
push
jnp
dec
sbb
inc
idiv
fstp
dec
add
push
rcr
cmp
push
ss
and
add
add
cmp
dec
add
xchg
aad
fwait
jo
and
sub
cmp
sub
dec
or
push
adc
pusha
in
pop
ror
pop
out
cmps
iret
push
pop
pop
inc
or
xchg
fiadd
mov
mov
ins
std
mov
in
xchg
hlt
xchg
stos
jno
jb
dec
or
sub
aas
dec
in
jmp
lds
clc
test
nop
mov
jne
adc
push
or
mov
stos
lds
mov
mov
or
sub
xchg
retf
adc
(bad)
mov
xchg
jmp
and
out
xchg
push
repz
xor
fistp
push
enter
mov
(bad)
popf
jae
cwde
sar
adc
add
mov
push
pop
int
sbb
or
pop
jle
jle
stos
(bad)
mov
jg
pop
cmovl
outs
cmp
test
lods
aam
cld
(bad)
xchg
fsubr
jnp
fstp
mov
les
mov
ret
jbe
push
call
stc
aam
mov
mov
mov
push
loopne
fdiv
test
or
mov
mov
mov
rcl
jne
shl
cmp
imul
xor
mov
sub
das
inc
(bad)
out
clc
stos
mov
inc
cmp
jg
xchg
mov
xor
dec
or
xchg
xlat
xchg
(bad)
lahf
call
aas
inc
es
in
jne
sahf
lods
iret
loope
(bad)
cmps
cmc
mov
retf
arpl
addr16
adc
fcomp
lahf
movs
(bad)
outs
add
ret
test
cdq
rcl
cmp
and
jge
dec
call
cmp
cdq
sti
pusha
cmp
pop
loop
mov
dec
iret
xchg
and
jns
rcl
cmp
jne
(bad)
hlt
mov
retf
adc
into
fs
test
sahf
push
jmp
add
xor
gs
and
inc
cmp
inc
pop
icebp
mov
daa
push
ins
movups
push
xor
out
imul
scas
(bad)
loopne
sahf
mov
xchg
lods
in
adc
enter
cmp
sub
mov
jbe
pop
aad
in
pop
pop
cmp
imul
int
jp
sbb
pusha
cli
outs
pop
xor
mov
stos
call
xchg
into
push
sbb
xor
iret
call
jbe
je
sbb
cmp
mov
das
and
outs
or
fstp
mov
stos
shl
mov
shl
test
sbb
das
adc
sbb
retf
cwde
or
jg
push
inc
sbb
ds
ss
stc
bound
pop
or
mov
and
scas
aaa
add
loope
ja
nop
repnz
xchg
(bad)
fst
aas
and
data16
stc
mov
pop
loop
xor
lahf
int
fld
inc
push
rcl
push
xor
dec
mov
pop
pop
push
adc
and
add
dec
std
pushf
sar
outs
lds
fidivr
bound
push
cmc
mov
mov
scas
inc
xor
out
push
add
inc
sub
popf
mov
mov
mov
pop
outs
cmp
rcr
jl
ror
add
push
push
cmp
ins
add
gs
push
(bad)
in
xchg
shr
add
sub
mov
call
xchg
pop
mov
lods
cli
mov
cmp
pop
(bad)
frstor
sahf
mov
test
jmp
call
cs
stos
neg
imul
cmp
lds
lods
out
std
fwait
movs
fcomp
add
pop
mov
(bad)
out
pusha
add
pop
in
fcom
call
mov
and
dec
xor
lods
pop
or
mov
enter
retf
(bad)
loopne
shr
cmps
loope
jecxz
ja
je
cmp
ins
and
pop
and
adc
shl
aad
icebp
jle
popf
mov
xchg
pop
call
and
or
cld
jg
aaa
inc
sub
push
or
aad
push
loope
in
mov
gs
sub
jl
jno
jb
xor
jno
pop
mov
mov
pop
cwde
lods
iret
mov
inc
aas
fistp
je
xor
dec
add
or
sbb
jl
jge
repz
mov
mov
es
sub
imul
jge
mov
add
inc
pop
fs
dec
call
(bad)
clc
xor
(bad)
dec
adc
jl
lods
out
mov
xchg
int
jp
jg
popa
bound
lods
fbld
jo
inc
or
mov
mov
jecxz
push
sbb
jl
mov
jl
push
int
dec
or
sub
scas
fcmovu
test
mov
mov
mov
mov
lods
jmp
lock
jae
cld
pushf
push
add
or
fistp
jb
(bad)
mov
pop
pop
fstp
arpl
jmp
mov
mov
ds
das
dec
pop
outs
push
adc
mov
adc
pop
in
iret
mov
jmp
out
stos
loop
push
add
sub
pop
add
mov
push
add
xchg
std
add
fimul
pminsw
pushf
(bad)
sbb
jo
inc
or
mov
add
test
popa
or
cmps
rcl
sub
enter
xchg
inc
and
lods
out
loope
dec
cmp
cld
out
mov
sub
(bad)
in
retf
fwait
sbb
loop
stc
mov
test
in
xlat
mov
mov
js
mov
push
adc
pop
aaa
jne
repnz
adc
mov
sbb
popa
dec
add
mov
js
cmps
jecxz
(bad)
scas
adc
sahf
std
(bad)
aam
aad
into
adc
hlt
mov
and
cmp
bound
stc
mov
cmp
das
push
sbb
dec
and
mov
loope
push
push
push
add
xor
lods
(bad)
mov
mov
shl
repnz
push
xor
pusha
mov
add
lahf
fisttp
ins
enter
jmp
mov
nop
jmp
mov
jbe
rcr
and
push
inc
adc
and
cmp
arpl
add
xchg
push
add
jp
arpl
inc
cmp
adc
rcr
das
bound
leave
fld
inc
call
loope
jae
arpl
ja
inc
xchg
mov
lods
popf
and
cmc
arpl
out
mov
scas
push
es
inc
add
mov
xor
pop
cmp
jecxz
into
pop
cmps
icebp
xchg
test
dec
dec
push
dec
sub
pop
xor
das
addr16
aaa
pusha
adc
or
inc
pop
pop
xor
cmp
jo
inc
adc
add
and
inc
pop
pop
cmp
sub
das
imul
or
push
es
arpl
inc
or
sub
push
cmp
jne
je
pop
and
les
out
mov
stc
popf
(bad)
mov
jmp
stc
mov
into
mov
shl
xchg
aam
cld
(bad)
and
adc
jne
fucom
cmp
outs
ret
push
mov
jge
fucomi
movs
mov
push
or
fimul
fs
jmp
xchg
dec
paddq
xchg
shl
jne
jb
in
sahf
fadd
xchg
xlat
cmps
jle
add
popf
jmp
or
pop
jg
repz
inc
test
retf
mov
dec
xchg
call
jmp
sub
mov
adc
pop
inc
pop
jmp
mov
cmp
ret
mov
retf
mov
jae
or
or
and
cwde
xchg
xor
clc
in
scas
sbb
aaa
clc
fmul
or
lock
das
jl
sbb
inc
ret
adc
jnp
adc
sub
mov
dec
adc
sar
stos
jge
cmp
pop
bound
fild
and
jecxz
pop
sar
lds
add
sbb
mov
je
push
inc
cmc
sbb
adc
stos
sbb
sbb
(bad)
xchg
mov
pop
cmp
repnz
test
xor
xchg
ficom
int3
mov
add
mov
pushf
sub
pop
fld
fs
sbb
ds
mov
shl
div
mov
fistp
and
sbb
mov
sbb
or
fistp
pop
sbb
push
mov
cdq
jg
fdivr
(bad)
dec
not
mul
or
repz
sbb
popf
pushf
push
push
or
mov
mov
imul
neg
call
pop
sbb
int
rcr
jg
inc
outs
pop
xor
sbb
xor
mov
dec
or
test
jno
push
mov
js
sar
lds
shl
popa
pushf
sub
add
nop
mov
lods
cs
repnz
(bad)
dec
gs
hlt
sbb
int3
sub
push
push
mov
lods
jmp
pop
sub
fiadd
pushf
and
ss
push
fbstp
cs
bound
dec
xchg
push
push
cmp
fld
jns
or
leave
fadd
mov
fcomp
js
or
or
fldcw
mov
sub
cdq
jne
xchg
leave
xor
push
mov
lahf
std
mov
(bad)
fld
inc
scas
and
jmp
mov
or
into
xchg
hlt
add
fist
popf
xor
push
gs
cmp
imul
mov
mov
jmp
daa
std
cmps
sbb
sbb
cmps
out
imul
mov
arpl
push
bound
dec
mov
je
pop
imul
add
mov
inc
adc
mov
popa
add
mov
or
mov
arpl
es
addr16
mov
push
nop
aas
je
cmp
mov
xor
mov
cmp
fwait
aam
pushf
fiadd
add
pop
add
sbb
or
xchg
(bad)
retf
mov
(bad)
xchg
out
dec
(bad)
mov
in
stos
enter
fistp
mov
cmp
inc
or
popa
cmp
dec
sub
dec
add
push
add
pop
inc
adc
sub
pop
cmp
pop
sbb
inc
add
outs
pop
jns
pusha
and
dec
adc
cmp
imul
xor
inc
add
outs
aas
jle
push
cmp
outs
sqrtps
imul
inc
cmp
popa
add
popa
(bad)
aam
inc
popa
add
sar
outs
adc
lock
xor
int3
lds
sbb
xor
in
mov
inc
mov
test
pop
pushf
in
test
ss
stos
pop
pop
sbb
add
sbb
inc
mov
mov
sub
(bad)
lods
push
sub
cli
lods
jmp
fs
movs
(bad)
pop
pushf
shl
sub
jae
or
call
loope
add
xchg
push
xchg
js
sbb
adc
lods
ret
push
daa
pusha
loope
mov
jne
xor
cmp
jle
add
imul
xchg
bound
(bad)
rcl
jmp
cmp
mov
nop
enter
jae
push
mov
pushf
inc
inc
add
xchg
and
in
lods
mov
mov
pop
call
bound
cli
fcomp
ins
xor
cld
xor
ins
add
aam
cmps
mov
ins
fwait
idiv
add
jmp
mov
out
mov
dec
inc
adc
or
imul
inc
cwde
cli
xchg
push
(bad)
mov
call
xor
push
outs
sbb
sbb
aad
jecxz
push
aaa
push
add
test
ret
xor
sub
sub
es
lods
pop
imul
sahf
rcr
xchg
es
loopne
jbe
repz
rcr
jg
push
popf
(bad)
mov
lock
jns
int3
popf
push
pop
push
push
fst
push
cmp
cmp
fcomp
(bad)
call
mov
loope
(bad)
xchg
cmp
jmp
shl
adc
(bad)
xchg
repnz
jl
jae
clc
test
clc
push
sbb
cli
jb
inc
sbb
jmp
ins
hlt
sub
mov
cmp
test
test
cmp
mov
jne
call
jbe
or
ret
xchg
push
and
hlt
test
mov
shr
lahf
es
sbb
add
(bad)
xchg
sti
aas
xchg
int3
mov
popf
cld
test
aas
call
repz
jne
out
mov
lea
jb
mov
lds
sahf
inc
inc
pop
push
mov
stos
out
and
pop
mov
dec
psrad
mov
jge
sbb
test
out
mov
test
push
mov
push
push
cmp
lods
rol
call
jno
inc
sbb
xchg
scas
inc
push
push
xor
lods
in
push
ss
fnsave
add
jno
cdq
push
push
jo
aad
fld
stos
sbb
add
and
sub
in
(bad)
out
and
mov
mov
xor
pop
push
mov
mov
sub
jle
loope
fst
(bad)
sti
mov
loopne
add
mov
ret
pop
push
dec
(bad)
pushf
shl
mov
aaa
rol
mov
scas
dec
or
data16
and
push
imul
bound
push
cmp
push
aas
jne
jae
inc
add
inc
add
dec
add
arpl
ins
and
add
jle
outs
movq
outs
es
xor
push
or
data16
je
js
pop
pop
inc
pop
or
jns
pop
sub
ss
add
xor
pusha
add
and
dec
or
dec
or
pop
pop
jns
inc
xor
pop
adc
ja
inc
adc
jb
push
pop
adc
push
inc
sbb
ret
adc
jmp
je
xor
(bad)
div
jbe
push
or
and
mov
pop
(bad)
xchg
outs
xchg
adc
movs
leave
lea
add
or
movs
(bad)
or
(bad)
fidiv
lods
ficom
test
pushf
inc
pop
cmp
jmp
jae
push
test
sti
mov
adc
inc
mov
mov
mov
sbb
rcl
adc
hlt
rcl
push
pop
cmp
(bad)
mov
and
push
adc
xchg
aad
je
outs
push
clc
(bad)
and
nop
pop
inc
sbb
pushf
fiadd
push
dec
in
test
imul
scas
mov
cli
retf
cs
int3
jge
outs
sub
rol
xchg
or
push
pop
cmp
fsubr
add
cmc
mov
sub
(bad)
mov
push
addr16
adc
xchg
or
add
sar
sub
pop
xchg
std
inc
sahf
cmp
push
mov
push
outs
inc
add
sti
std
cmps
mov
rol
movs
and
sub
pop
aas
and
int3
mov
mov
adc
idiv
cmps
xlat
popa
fucom
mov
pop
mov
jg
pop
iret
mov
xor
mov
inc
dec
pop
popa
xchg
cld
fidivr
in
xchg
shr
cmp
cmp
dec
add
pop
push
jl
sub
lods
les
lahf
pushf
push
jle
pop
retf
cmp
out
ins
xor
jmp
inc
jmp
cdq
js
inc
test
inc
(bad)
es
(bad)
fild
fld
or
jmp
movs
dec
xor
push
xlat
mov
das
outs
bound
bound
fwait
ror
pop
imul
sbb
test
xor
add
call
xor
lds
pop
cld
pop
mov
jnp
jecxz
mov
add
test
mov
pop
mov
les
test
or
mov
xchg
stos
dec
daa
data16
cmps
or
mov
mov
call
dec
mov
push
stos
push
push
push
push
sub
fistp
imul
pusha
add
sub
int
imul
movs
adc
sbb
les
pop
test
mov
out
mov
ja
and
xchg
ficomp
add
xor
add
mov
mov
cwde
in
mov
add
retf
cmps
in
mov
mov
jo
inc
jo
jp
mov
mov
div
or
or
ret
and
sub
adc
leave
(bad)
fdiv
mov
stos
jge
jae
fist
xlat
mov
dec
sub
ror
sbb
scas
sbb
push
shl
sbb
mov
jl
sbb
mov
test
push
cmc
and
fsub
jle
sti
adc
pusha
sub
and
out
pop
or
not
add
dec
adc
cmp
pop
pop
sub
jmp
fnsave
scas
div
xchg
rcl
fnsave
cmc
mov
lahf
fisubr
test
(bad)
iret
xchg
jmp
scas
jmp
xchg
out
cmc
cmps
out
retf
movs
in
mov
jmp
xchg
shl
xchg
idiv
in
mov
mov
scas
in
cmps
int
cli
mov
sti
stos
jmp
(bad)
mov
iret
(bad)
jecxz
stc
mov
xchg
sbb
cmp
jnp
(bad)
(bad)
aas
ficom
mov
jnp
shl
xchg
mov
xor
push
(bad)
cwde
and
or
aas
idiv
shl
sbb
push
mov
int
loop
and
loopne
inc
addr16
inc
mov
mov
jg
aad
mov
cmp
pop
mov
fwait
retf
inc
cs
(bad)
pop
push
shl
outs
sub
test
mov
(bad)
xlat
mov
ss
out
pop
push
jge
sbb
loope
call
push
or
addr16
cmp
fist
add
in
xchg
rol
mov
add
jmp
mov
mov
pop
jmp
outs
dec
pop
pop
ret
jecxz
(bad)
lds
test
out
mov
pop
mov
xor
fld
jb
cs
ret
sbb
les
test
push
sbb
adc
out
out
mov
je
pop
icebp
jmp
ins
outs
pusha
adc
int3
leave
mov
test
xor
icebp
cs
adc
xchg
pop
cmp
push
ss
mov
leave
mov
inc
sub
or
lods
jecxz
add
push
cdq
les
push
cmp
mov
mov
pop
push
dec
xchg
sbb
xchg
cdq
sar
mov
push
push
mov
sbb
fcomp
icebp
xchg
icebp
test
shl
fistp
jo
jmp
fmulp
ret
je
pop
inc
push
cmovg
dec
add
xchg
lahf
and
cs
pusha
cmp
mov
xchg
add
pop
sbb
popa
adc
cmp
pop
push
pop
aam
pop
clc
pop
xchg
shl
(bad)
icebp
les
add
sbb
sbb
sub
int
xchg
push
pop
sbb
pop
inc
daa
jl
sbb
pop
mov
fist
mov
xchg
adc
retf
(bad)
xor
cdq
pop
dec
cmp
in
mov
imul
pusha
add
(bad)
sbb
cli
(bad)
mov
add
ins
lods
jecxz
(bad)
push
push
xchg
repnz
sbb
xlat
mov
xor
pop
push
add
xor
sbb
dec
and
xor
adc
call
xchg
inc
dec
push
inc
imul
or
push
push
cmp
aaa
push
push
mov
fdiv
pop
jo
push
pop
std
fst
xor
jge
dec
cs
mov
push
and
test
xchg
pop
push
ja
lods
push
pop
add
rcl
pop
pop
pop
jns
push
pop
add
mov
mov
pusha
and
fimul
inc
xchg
out
xchg
xlat
pop
(bad)
ret
mov
pop
add
pop
jno
push
cmp
mov
pop
xchg
ror
xlat
shr
push
test
lods
xchg
es
cmp
ret
sub
mov
dec
scas
jecxz
jle
call
lahf
push
lahf
aam
fcom
sahf
rol
fnstcw
in
in
xor
jecxz
aad
add
shl
out
in
mov
and
(bad)
xor
les
in
test
mov
mov
cmps
(bad)
movs
out
loopne
icebp
test
add
jmp
mov
scas
int3
sahf
fdivr
std
mov
xchg
loopne
ror
jmp
int
fistp
sbb
jo
inc
adc
ja
data16
inc
or
outs
ss
pop
inc
es
add
js
dec
or
gs
fwait
enter
ss
xor
xor
ss
adc
dec
lds
(bad)
call
std
push
xchg
dec
test
ficomp
xchg
inc
jns
outs
add
pop
ret
lds
(bad)
jecxz
repz
jl
pop
xchg
out
adc
pushf
in
test
sub
inc
adc
rol
leave
mov
cmps
int
mov
movs
sahf
add
mov
or
add
adc
pushf
les
mov
sbb
out
call
xchg
add
xlat
xchg
push
add
sbb
je
add
jl
pop
mov
pop
das
ret
(bad)
jge
push
or
mov
dec
outs
add
stc
jecxz
mov
unpckhps
and
pop
sahf
cld
dec
call
popf
sub
retf
inc
outs
outs
(bad)
and
in
icebp
mov
jno
and
or
cmc
fs
arpl
add
mov
and
jns
cmpxchg
je
xor
mov
pop
cmp
enter
jae
aas
sti
out
fcom
mov
data16
ins
push
retf
cmp
xor
cld
push
ins
pop
rol
fldpi
(bad)
sahf
pop
or
leave
add
push
and
scas
cmc
fistp
outs
sub
test
test
out
xchg
rcr
jl
jns
and
mov
pushf
ffree
mov
mov
add
adc
in
pop
adc
pop
jl
jmp
add
aas
movs
jmp
dec
das
jmp
(bad)
int
dec
ss
xlat
lods
jecxz
xor
add
frstor
imul
pop
pop
cmps
adc
(bad)
sbb
xor
cmp
(bad)
mov
mov
push
mov
dec
int3
add
movs
rcl
xor
pop
mov
daa
cld
rcr
ds
shl
leave
in
clc
mov
mov
xchg
(bad)
mov
mov
nop
in
jle
data16
cmps
jmp
jne
or
repnz
xor
xor
(bad)
xor
sti
test
and
(bad)
ficom
outs
add
cmp
pop
hlt
enter
imul
mov
enter
xchg
retf
stos
inc
push
or
std
mov
pop
mov
mov
jnp
dec
stos
or
mov
push
aad
cmps
loopne
fs
scas
lahf
out
sahf
jae
push
pop
lods
sbb
jg
fcom
push
test
xchg
(bad)
in
not
jb
push
xor
xchg
movs
sub
cmovs
mov
(bad)
lds
arpl
ins
sub
les
ds
pop
das
jbe
retf
cmp
ja
push
or
aad
aad
mov
test
dec
or
out
mov
icebp
add
test
cmp
idiv
jp
sbb
xor
shl
inc
jno
push
cwde
xor
sbb
ror
xchg
pop
cmp
add
mov
mov
jp
gs
sub
retf
pusha
mov
cmc
mov
scas
jmp
cli
mov
shr
sub
pop
cmp
push
jo
jle
dec
or
sbb
add
inc
or
pop
jl
cmp
pop
or
inc
sbb
push
add
ins
add
or
jl
push
sub
adc
inc
adc
sub
inc
or
ins
sub
pop
cmp
pop
adc
inc
adc
ja
data16
jns
inc
cmovo
and
pop
pop
pop
adc
jns
push
adc
jno
arpl
dec
pop
or
push
jle
jg
jle
inc
sub
dec
movq
fs
loopne
xchg
aam
fld
mov
sub
aad
xlat
mov
retf
call
xchg
fnstsw
scas
jmp
outs
inc
add
push
pop
pop
mov
imul
cwde
cld
mov
mov
xlat
mov
adc
or
or
fimul
pop
xchg
cmp
jmp
scas
loopne
addr16
pop
pop
cmp
test
lods
jns
ins
aaa
cld
aad
test
cmp
cmp
add
push
or
idiv
dec
mov
test
dec
mov
mov
and
test
xchg
leave
pop
dec
outs
repz
lds
and
fnstcw
pop
ja
adc
(bad)
rol
and
jne
in
scas
mov
xchg
and
cmp
jne
adc
dec
(bad)
loope
xchg
mov
(bad)
in
mov
and
jmp
shl
dec
cli
ds
iret
jbe
cmp
in
sahf
xchg
sub
sar
xor
(bad)
sbb
in
fs
cmp
push
popa
and
cli
imul
mov
mov
jnp
and
sbb
push
je
in
inc
call
push
loope
or
inc
and
mov
dec
add
lods
stc
test
stos
icebp
xchg
aad
fld
test
jg
dec
pop
jl
jno
mov
and
loope
adc
mov
test
fld
mov
add
movs
jmp
test
add
cwde
cmps
jg
xor
pop
xor
pop
add
popf
leave
(bad)
sbb
js
js
inc
cmp
mov
push
daa
popa
ja
outs
and
dec
outs
pop
ds
mov
inc
xor
inc
push
mov
repz
stos
in
aad
xchg
push
imul
add
cld
scas
in
fdivr
pusha
cs
cmp
in
inc
xor
shr
push
inc
es
pusha
sbb
sbb
outs
cmp
mov
xchg
hlt
neg
fidiv
jnp
xor
jle
mov
and
neg
mov
cmps
dec
cmp
popa
adc
pop
add
or
push
sub
and
rol
inc
push
jns
or
aad
pop
cmp
xchg
cmps
rol
retf
xchg
mov
sub
or
fcomp
in
or
dec
or
mov
loopne
int3
xchg
and
mov
xchg
fistp
inc
pop
ins
sub
mov
stos
call
push
push
cmps
(bad)
mov
retf
mov
in
in
addr16
iret
mov
ins
imul
leave
dec
adc
jmp
out
mov
mov
lods
jmp
dec
loopne
push
push
pop
iret
lods
in
out
sbb
jo
fistp
mov
sbb
enter
out
add
push
push
inc
add
mov
sub
daa
jle
dec
push
pop
xchg
inc
add
adc
mov
imul
dec
jb
dec
adc
(bad)
aad
hlt
call
packssdw
loopne
outs
sub
stos
cmc
scas
mov
dec
and
sub
xor
mov
dec
std
mov
arpl
pop
jecxz
push
aaa
js
fistp
push
dec
xchg
mov
xchg
shr
or
je
jb
daa
fs
cmc
mov
mov
dec
outs
cmp
xadd
mov
movs
(bad)
das
inc
clc
mov
dec
adc
cmc
mov
movs
(bad)
adc
data16
xchg
aam
movs
dec
inc
or
push
xor
sub
movs
out
enter
iret
lods
(bad)
cmps
int
jae
jg
rcr
or
sbb
adc
xchg
leave
xchg
stc
rcl
push
aad
jnp
arpl
(bad)
mov
test
or
adc
test
adc
push
sbb
and
mov
lahf
adc
pop
push
push
lods
rol
cld
(bad)
std
addps
dec
inc
cs
or
iret
sbb
jnp
aad
pop
add
ror
scas
inc
sbb
cmp
pop
sbb
movs
aad
stos
movs
cmc
mov
mov
mov
and
in
data16
bound
or
hlt
cmps
mov
mul
stc
mov
push
xlat
nop
mov
repnz
or
dec
add
icebp
scas
in
(bad)
in
stos
in
cmps
std
xchg
ror
mov
(bad)
mov
cmp
jp
inc
aaa
inc
add
ja
clc
test
xchg
idiv
add
adc
adc
shl
retf
mov
cwde
sti
mov
outs
xor
pop
sbb
andnps
jae
inc
sbb
push
or
pop
cmp
icebp
mov
mov
fwait
clc
adc
pop
xor
pop
cmps
jmp
rol
dec
or
arpl
fist
into
mov
mov
cwde
addr16
imul
pop
adc
sub
inc
add
xchg
fidiv
jae
bound
inc
add
ret
mov
mov
rcr
fiadd
ret
test
mov
stc
mov
aas
jbe
push
sbb
jl
pop
cmovl
dec
or
leave
mov
out
fimul
pop
adc
arpl
arpl
pop
add
in
test
xchg
(bad)
mov
xchg
mov
in
mov
pop
outs
sub
in
imul
inc
movs
lds
into
sub
je
push
sbb
retf
xchg
hlt
aaa
sub
jg
dec
push
jmp
inc
xor
xchg
shl
inc
in
ret
sbb
aam
dec
sub
bound
jg
leave
mov
int
inc
or
sub
push
jl
jbe
push
adc
fisubr
dec
jecxz
iret
cmps
jmp
sbb
pop
sbb
add
out
lods
fadd
aas
jg
loop
enter
int
outs
sbb
je
inc
xor
mov
mov
imul
cmp
js
shr
je
push
movs
add
sub
mov
xchg
icebp
mov
pushf
(bad)
mov
push
pop
push
inc
pop
push
aaa
js
test
mov
add
xor
push
and
jmp
(bad)
int3
scas
mov
mov
aad
cmp
imul
sub
pop
inc
pop
push
lods
in
test
mov
mov
fstp
out
xlat
movs
cld
mov
fst
out
(bad)
out
test
out
mov
xchg
lods
out
sub
cmp
push
adc
pop
or
adc
pop
push
aaa
inc
add
inc
or
mov
movs
(bad)
movs
jecxz
or
cli
mov
cmp
sub
add
or
push
add
inc
push
iret
outs
add
ins
pop
pop
inc
stc
nop
outs
or
xor
and
fld
arpl
push
or
in
mov
mov
fs
jge
dec
or
mov
rcl
in
scas
cld
mov
es
dec
or
dec
or
imul
and
jbe
and
push
pop
dec
sub
movs
jecxz
ret
pop
sub
sbb
add
inc
push
dec
and
ja
clc
outs
or
dec
mov
lahf
in
scas
fadd
js
pop
sbb
rol
loopne
cmp
push
push
and
sbb
js
push
cmp
daa
fs
and
jno
inc
pop
ins
sub
xlat
je
fs
dec
cs
repnz
mov
mov
rcl
cwde
sti
mov
and
js
push
sar
mov
sti
mov
mov
stc
mov
loope
std
mov
arpl
jb
pop
pop
out
mov
retf
adc
jbe
inc
xor
sbb
mov
cwde
clc
stos
add
aas
jne
xchg
movs
mov
xchg
lods
jmp
aas
bound
push
xchg
mov
sbb
jmp
xor
push
or
cmovl
dec
or
add
jno
mov
movs
call
dec
sub
dec
mov
jecxz
std
mov
mov
rcr
(bad)
xchg
(bad)
mov
xchg
xchg
xchg
std
(bad)
retf
mov
stos
enter
mov
mov
mov
push
push
pop
add
xchg
iret
mov
pushf
cld
mov
pop
pop
inc
daa
je
push
pusha
cmp
xor
imul
xor
pop
or
aaa
ds
push
xchg
rcl
outs
std
mov
(bad)
je
jb
jle
inc
adc
fs
inc
pop
dec
cs
icebp
ins
push
pop
cs
popa
or
or
pop
aas
les
mov
in
mov
test
lods
out
adc
imul
imul
popa
jg
xchg
lods
out
fwait
ret
(bad)
push
adc
cmp
pop
dec
loope
icebp
xchg
lock
pop
dec
cmp
push
pop
outs
out
mov
test
push
adc
outs
add
ins
sbb
cld
test
xchg
xlat
mov
xchg
mov
int
cmps
fcom
loop
jecxz
clc
stos
call
stos
icebp
xchg
rol
ret
mov
lods
pop
repz
leave
mov
push
add
push
xor
(bad)
mov
ins
fcomp
loopne
neg
sti
test
jmp
jmp
pop
cs
(bad)
fcom
out
test
repnz
std
sbb
jmp
and
inc
push
cld
push
dec
sub
jl
std
mov
div
and
add
inc
add
movq
popa
adc
add
sbb
cli
mov
mov
xchg
mov
int
lea
retf
mov
mov
xchg
lock
loope
(bad)
mov
mov
push
add
push
sbb
jo
dec
sbb
call
lahf
fld
cli
test
mov
push
adc
jnp
jnp
in
call
rcl
hlt
inc
ret
cmps
std
pushf
iret
jp
mov
mov
xchg
loop
repnz
stc
push
sbb
jl
inc
pop
aad
aam
aad
lock
test
cwde
jmp
repz
xchg
idiv
not
rcr
pop
pop
ins
xor
lahf
test
pop
cmp
cmp
inc
xor
pop
sbb
pop
cmp
sbb
cld
sahf
int
in
mov
cmp
and
dec
mov
mov
mov
push
and
sti
mov
lods
jmp
sbb
ja
leave
mov
mov
mov
pop
jnp
dec
adc
and
cmovl
pop
ds
mov
xchg
cmc
cmps
in
stc
mov
jmp
pop
sbb
jno
bound
cwde
retf
pop
imul
or
pop
adc
adc
pop
add
imul
adc
xchg
cmps
inc
or
pusha
rep
call
mov
cdq
fidivr
xlat
ja
imul
push
pop
aas
jo
push
adc
jmp
sti
cwde
cli
mov
loop
test
cwde
rol
cwde
je
pushf
iret
mov
mov
and
push
daa
pusha
cmp
out
or
push
fsubr
jne
inc
pop
popa
add
js
pop
cs
adc
push
or
pop
cmp
push
jae
inc
(bad)
(bad)
cdq
ficom
sti
mov
xchg
ror
mov
call
dec
bound
push
adc
push
sbb
popa
xor
daa
inc
add
adc
jb
outs
lods
sahf
sar
sbb
mov
test
scas
ret
cdq
jmp
rcr
call
xchg
mov
aam
(bad)
mov
mov
cdq
lock
outs
or
aaa
jo
push
and
push
daa
jne
xchg
(bad)
mov
sahf
rcr
sub
into
push
cmp
push
and
sub
cmp
aas
or
inc
and
dec
andps
add
push
adc
lock
andnps
and
mov
mov
push
mov
fdivr
push
adc
push
fisttp
dec
push
inc
xor
out
int
ficomp
push
jmp
ficomp
sub
xor
jne
inc
(bad)
mov
xchg
aam
out
movs
mov
mov
mov
xchg
adc
stc
stos
jmp
lds
adc
push
add
inc
sbb
sub
jg
loopne
ror
loope
shl
dec
adc
pop
jmp
inc
sub
adc
popa
add
aas
push
and
dec
setle
jmp
jmp
xchg
cli
mov
xchg
out
rcr
cmp
inc
sbb
jbe
push
div
mul
test
cmps
push
add
or
outs
sub
stos
in
stos
loope
mov
pop
adc
fwait
repnz
fist
jb
jg
imul
je
inc
sbb
jbe
aas
jo
push
adc
fnstcw
pop
stos
repnz
xor
je
inc
push
test
es
and
repz
sahf
(bad)
jb
push
sbb
scas
cld
mov
add
outs
sbb
jecxz
ror
neg
mov
sbb
add
sub
inc
add
xor
dec
and
adc
cmp
mov
ret
sahf
les
mov
hlt
lods
push
movs
(bad)
mov
lahf
fidivr
nop
ror
pop
adc
loopne
ror
(bad)
scas
loopne
stc
addr16
fdivr
adc
mov
(bad)
sahf
mov
scas
loopne
shl
adc
dec
test
and
pop
cmp
sbb
inc
(bad)
js
pop
cmp
push
cld
mov
test
and
fistp
inc
xor
pop
sbb
adc
dec
add
aam
fcomp
ret
mov
mov
mov
mov
mov
sub
pop
mov
cld
mov
add
sbb
(bad)
pop
sbb
dec
or
pusha
adc
pop
sbb
fist
mov
stc
xchg
shl
push
pop
cs
inc
add
bound
js
adc
sub
sbb
nop
rol
mov
push
xor
push
sbb
enter
fadd
xchg
(bad)
mov
test
jo
jg
xchg
div
out
mov
stc
call
js
pop
cmp
and
xchg
ror
(bad)
xchg
(bad)
mov
sahf
rcr
mov
jmp
xor
pop
pop
xchg
js
pop
adc
pushf
imul
inc
jle
cdq
cmc
add
jmp
daa
push
rol
add
push
sbb
cmp
push
jecxz
ret
stos
call
cmp
mov
mov
add
push
mov
cli
test
xor
inc
add
push
mov
pop
add
cwde
fistp
push
and
dec
or
mov
movs
push
fcomp
sub
outs
sub
inc
sub
ins
and
lds
xlat
mov
push
inc
sbb
inc
add
dec
or
dec
add
mov
mov
mov
cld
mov
xchg
out
lods
in
dec
or
sbb
ds
icebp
dec
adc
bound
adc
cmps
retf
mov
mov
jmp
push
xor
dec
sbb
jmp
dec
leave
and
dec
cli
test
inc
ret
xchg
mul
jmp
int
std
sub
mov
cwde
fist
rol
bound
sub
xlat
es
push
gs
aam
repnz
mov
inc
and
inc
or
add
push
dec
or
loope
jmp
xlat
pop
pop
jl
pop
sbb
leave
mov
movs
out
enter
mov
mov
ja
js
or
cmp
push
and
add
pop
adc
(bad)
ficomp
retf
cmps
xlat
nop
leave
mov
fistp
movs
call
sbb
mov
enter
(bad)
xchg
(bad)
mov
jp
mov
mov
lods
iret
sahf
jno
jl
pusha
and
pop
sub
aaa
gs
lods
popf
rcl
inc
cld
mov
icebp
pop
les
sti
adc
int3
scas
cld
fwait
xchg
repz
mov
mov
shl
imul
jle
mov
nop
xlat
call
pushf
ret
sub
arpl
ins
xlat
xchg
not
and
dec
cmp
jae
push
sbb
xchg
les
pop
adc
jge
dec
cmp
stos
ror
movs
les
mov
fdivr
mov
scas
int
jge
dec
punpckhdq
sub
and
dec
cmp
repnz
jmp
jns
(bad)
aad
in
(bad)
imul
sahf
(bad)
pusha
clc
mov
nop
ret
mov
fcomp
retf
mov
fsubr
js
movs
jmp
repnz
int
mov
clc
mov
nop
rol
mov
push
xor
adc
jbe
enter
ror
add
jmp
sahf
cmps
in
mulps
inc
xor
add
sbb
push
mov
mov
das
pop
sbb
jle
push
stos
stc
mov
icebp
dec
sub
cmp
cmp
inc
sub
sbb
jle
jecxz
repnz
popf
hlt
data16
mov
mov
mov
xchg
out
fldcw
and
add
jns
pusha
add
jo
add
mov
dec
pop
je
ins
and
pop
pop
push
mov
mov
xchg
lods
out
mov
aaa
je
dec
sbb
xor
jg
shr
pop
pop
push
jge
stc
xor
pop
sbb
jp
mov
xchg
rcr
imul
cmp
jge
jg
xchg
call
fadd
pop
cs
sbb
fstcw
push
arpl
inc
and
call
lods
cmps
mov
jmp
shr
dec
pop
pop
pop
jge
jl
pop
sub
inc
pop
call
mov
ds
push
push
jb
add
push
ds
or
and
scas
in
mov
lods
out
mov
test
mov
adc
jp
xchg
loop
stc
stos
pause
scas
pushf
rcl
cmps
xchg
rcl
int3
(bad)
cld
mov
push
cmp
outs
or
(bad)
movs
loop
out
xor
out
xlat
mov
dec
add
gs
jmp
inc
pop
jnp
dec
adc
push
push
push
and
sub
dec
adc
add
inc
push
dec
push
popf
add
add
push
jmp
add
push
mov
adc
mov
sahf
std
popf
fist
(bad)
mov
test
jbe
add
in
jp
inc
adc
pop
fild
bound
jle
outs
sbb
scas
in
mov
pop
mov
(bad)
mov
cmp
xor
imul
sub
inc
adc
lock
ins
push
pop
sbb
sub
bound
jge
pop
lds
jmp
cmps
call
ficom
je
jns
pusha
adc
nop
shl
mov
stos
in
cli
cwde
and
dec
es
fsubr
fstp
pop
push
jg
jo
lahf
popa
and
and
sti
mov
std
leave
cmp
sbb
mov
cmps
loope
pop
sub
inc
add
inc
das
pusha
pop
pop
out
cmp
or
imul
add
push
add
ins
add
inc
sbb
imul
or
movs
leave
mov
les
ja
xchg
enter
fld
xchg
mov
(bad)
mov
scas
std
mov
iret
xchg
mul
fst
fistp
jecxz
cmps
iret
add
(bad)
xchg
pushf
xchg
repz
mov
in
aad
enter
in
ret
rcl
and
and
dec
cmp
push
(bad)
popf
sar
stos
jmp
mov
and
(bad)
es
dec
and
push
leave
call
lahf
out
test
or
rcr
sub
inc
outs
xlat
mov
movs
cmps
les
aam
(bad)
mov
fistp
call
movs
into
cs
addr16
nop
enter
test
ret
cs
aaa
push
add
jns
xchg
fdiv
jns
push
adc
ins
inc
retf
test
fwait
stc
test
mov
xchg
out
test
cmp
push
adc
pop
mov
xchg
ror
push
inc
pop
dec
cs
ins
int
std
mov
xchg
rcl
in
dec
stos
leave
stos
in
mov
lods
fcomp
cmps
in
fidivr
retf
cmp
dec
add
sub
inc
push
cdq
cli
mov
nop
rcl
push
add
dec
push
fisubr
lock
dec
sub
inc
stc
jae
inc
add
inc
add
in
popf
fidiv
mov
mov
fdiv
cmc
test
fs
add
push
adc
or
jmp
and
lods
jmp
mov
cdq
fimul
sub
xor
inc
push
inc
or
push
mov
inc
adc
jecxz
cli
xor
mov
mov
nop
loopne
push
xor
jns
pop
adc
je
jae
jb
jae
imul
pop
sub
dec
or
xchg
fisub
dec
mov
(bad)
mov
cmp
push
push
bound
mov
or
mov
and
popa
and
sbb
ja
inc
xor
add
jg
and
pop
ds
cs
sub
pop
xor
pop
sub
add
ins
add
inc
sbb
imul
push
jle
ins
pop
ret
inc
pop
push
aaa
js
jge
fs
push
adc
xchg
jb
jg
arpl
jp
push
daa
jg
outs
sub
push
inc
es
cwde
mov
mov
xchg
out
test
mov
int3
movs
jmp
rcl
stos
fstp
aad
add
cmp
add
xchg
push
add
xor
pop
mov
imul
ins
retf
repz
retf
sub
add
add
aas
or
inc
mov
mov
dec
fld
jle
cdq
inc
xchg
out
mov
inc
sub
dec
mov
cmps
fwait
dec
mov
ror
jb
or
repnz
mov
test
inc
jmp
push
push
out
push
mov
push
push
ror
loope
sti
push
scas
inc
mov
jle
cdq
dec
leave
xchg
pop
adc
neg
pushf
and
inc
rcr
shr
pop
movs
test
jbe
and
and
ds
shr
scas
xchg
jge
pop
lods
mov
sbb
xor
jle
cs
pop
mov
jmp
mov
mov
test
pop
fmul
(bad)
ss
loop
mov
int
sbb
xor
clc
add
fs
pop
fadd
jmp
pop
mov
mov
ja
cli
sbb
xor
sub
cmp
xor
inc
add
mov
xor
pop
mov
inc
mov
pusha
dec
sub
push
psadbw
sbb
pop
stc
pop
fisttp
jge
sub
push
cld
push
mov
jg
and
call
out
rcr
xchg
push
in
test
pushf
popf
imul
sbb
mov
jb
sub
sbb
pop
and
cmc
and
mov
retf
es
push
lods
xchg
(bad)
fadd
add
fistp
jbe
xor
je
dec
retf
and
movs
mov
sub
or
jl
pop
mov
jle
mov
fmul
in
sbb
push
stos
inc
mov
lea
inc
fidivr
int3
sbb
pop
test
pop
xlat
or
inc
mov
movs
(bad)
dec
jmp
scas
les
loope
sti
jg
pop
jno
sahf
dec
mov
mov
mov
mov
adc
js
pop
scas
gs
jbe
dec
retf
dec
int3
sub
adc
lock
in
push
ror
mov
sar
cli
pop
test
loope
jmp
xchg
cmp
es
test
lods
dec
and
pop
into
push
les
adc
add
(bad)
push
lea
sub
test
pusha
ror
mov
mov
or
repz
xlat
pop
xchg
jns
scas
mov
addr16
mov
pop
adc
and
cmp
jle
and
lds
xchg
jae
push
xchg
(bad)
add
push
lea
and
sub
and
jo
call
pushf
pusha
mov
fild
(bad)
adc
jge
das
or
inc
in
daa
add
adc
and
das
adc
pop
call
ins
scas
scas
xlat
cmp
out
fldenv
jmp
sbb
lock
push
mov
stos
push
jge
outs
fdiv
pop
in
pop
test
mov
je
imul
pop
rol
jp
jno
jl
mul
cmc
dec
fcom
rcr
push
mov
aam
adc
test
(bad)
sub
(bad)
cdq
jle
ss
add
dec
xchg
or
adc
pop
or
jnp
mov
pop
cmps
je
daa
repnz
cmp
cmp
xor
retf
jp
jno
xor
push
retf
jmp
sbb
jo
mul
add
push
test
push
clc
ds
repnz
iret
xor
xchg
pop
shl
clc
cmp
sbb
push
stos
je
das
dec
in
pop
xor
jecxz
sbb
lahf
inc
mov
sub
and
jmp
les
jp
inc
lea
stos
inc
mov
or
(bad)
cmp
push
jecxz
mov
xchg
mov
inc
adc
xchg
xchg
arpl
push
mov
inc
xchg
xchg
jge
imul
mov
jo
add
xchg
arpl
cmps
nop
imul
ins
(bad)
add
pop
mov
ins
mov
cs
push
mov
sub
pop
mov
sub
dec
aam
xor
pop
movs
jno
imul
push
(bad)
sub
in
cdq
ins
mov
in
fistp
mov
fisubr
add
sub
jge
mov
pusha
mov
out
push
ret
sub
add
rcl
mov
scas
xchg
xchg
ja
push
mov
mov
retf
cmp
jmp
ficom
in
pop
sbb
jle
push
adc
sub
in
jns
pushf
js
add
push
scas
pusha
sub
xchg
ds
and
pop
std
dec
sbb
iret
xor
sub
pop
sbb
and
mov
push
stos
xchg
jns
jge
add
ds
ins
fmul
push
dec
mov
nop
ins
mov
(bad)
sub
and
aas
test
mov
test
sar
js
mov
leave
xor
out
xlat
cwde
cwde
jo
xchg
xchg
jg
jbe
ss
pop
pop
loope
call
push
out
cli
pop
adc
cmp
pop
mov
sub
xchg
sahf
fwait
inc
mov
pop
mov
call
and
adc
dec
ds
and
mov
aam
jl
pushf
imul
adc
adc
and
out
fld
inc
mov
test
mov
mov
mov
aas
sbb
and
add
adc
ds
test
jge
jge
cmp
cmp
adc
cmp
stc
adc
jmp
adc
xor
and
xlat
xor
or
pop
add
fimul
stc
sub
in
push
mov
inc
mov
xor
xor
repz
xchg
cs
loopne
out
pop
aam
adc
sub
(bad)
mov
and
rcl
jmp
xchg
jp
ret
js
popa
mov
call
dec
mov
pusha
scas
in
push
mov
les
sbb
movs
or
pop
cmps
loopne
fcom
inc
and
shr
pop
lods
imul
jle
ss
icebp
inc
movs
jbe
aaa
out
fwait
data16
fidiv
shr
ret
scas
dec
mov
sub
outs
shr
fs
dec
shl
or
neg
or
or
push
retf
inc
iret
sub
(bad)
and
and
les
adc
pop
ficom
jmp
ret
pop
mov
clc
sub
out
push
rol
test
shl
outs
in
cmp
push
mov
cdq
ja
dec
mov
or
repz
push
cli
dec
pop
sub
sub
aas
or
push
mov
push
mov
xchg
addr16
adc
es
inc
mov
mov
cmp
pop
mov
(bad)
cmp
jmp
sbb
sub
das
out
movs
je
mov
arpl
fadd
loopne
call
gs
outs
xchg
dec
stos
push
aam
push
ret
pop
into
xchg
jge
mov
aad
stc
or
mov
fstp
lahf
jne
and
sub
add
pop
mov
cmp
pusha
mov
shr
adc
jns
leave
jmp
adc
rcr
sub
not
xchg
xlat
cwde
sub
sti
add
and
rep
rcl
xchg
add
jb
pop
aam
mov
cmp
sub
and
push
mov
mov
sub
pop
ss
pop
xlat
mov
mov
iret
lods
scas
stos
fst
adc
jns
inc
stc
fs
push
ret
scas
movs
cdq
call
retf
jno
jns
or
jne
sbb
sub
or
ss
sub
jmp
pop
cs
jmp
or
mov
into
cmp
adc
cld
cmp
xchg
mov
push
stc
pop
mov
mov
mov
lods
mov
cmp
das
xor
xchg
xchg
jno
cdq
test
inc
cmps
imul
out
xor
sub
push
pop
test
mov
jb
scas
jns
push
test
or
std
inc
ret
out
aaa
out
xchg
mov
cs
xchg
shr
pop
or
cmc
es
adc
pop
movs
fwait
ret
cmp
out
dec
mov
lods
push
add
out
mov
fidivr
sub
inc
mov
adc
shl
cmp
inc
mov
inc
cli
ds
(bad)
pop
ss
pop
retf
addr16
xchg
fcom
push
cmps
test
retf
xor
pop
or
cmp
dec
mov
add
mov
cmp
cmp
push
retf
lock
mov
xor
jmp
mov
cwde
popf
jo
xor
cs
xchg
popf
jg
inc
mov
retf
cmp
push
ds
test
or
add
mov
dec
mov
sub
not
sub
or
sub
or
(bad)
daa
or
xor
sub
sub
pop
mov
push
fisttp
add
inc
add
out
pop
lods
mov
cs
pop
mov
test
out
sub
cmp
cmp
push
mov
inc
mov
call
ret
xor
cmp
mov
xchg
jae
or
daa
and
push
retf
xor
pop
movs
(bad)
fdivr
js
jne
push
mov
adc
das
jecxz
mov
xchg
mov
ror
push
sbb
xchg
mov
xchg
ret
aad
sbb
and
loop
(bad)
and
pop
repnz
sbb
pop
lds
mov
inc
mov
xlat
push
adc
cld
sub
cmc
aas
loop
jmp
hlt
push
mov
mov
fisttp
cmp
inc
xchg
(bad)
jae
or
dec
mov
cli
jl
jno
xor
mov
sbb
loope
mov
mov
sahf
repnz
mov
mov
aad
lock
and
out
ss
and
cwde
fs
cmp
ss
and
sbb
retf
pop
test
mov
xor
div
and
cmps
inc
scas
fstp
xor
adc
les
ds
pop
mov
xor
outs
stc
inc
fnstsw
out
sbb
inc
xchg
mov
inc
ret
pop
scas
fbstp
adc
std
xor
pop
(bad)
pop
or
aaa
div
popa
std
ja
cmp
push
mov
jno
xor
loopne
and
in
pop
mov
imul
fwait
inc
mov
sbb
es
xor
push
mov
push
icebp
pop
mov
mov
cwde
push
jnp
fwait
push
mov
test
ret
std
mov
sbb
jecxz
jecxz
mov
push
dec
scas
jbe
mov
xchg
loopne
add
aam
dec
shl
sbb
cmp
dec
mov
add
xor
push
mov
fidiv
pusha
cmps
ja
cmp
push
add
(bad)
push
xchg
push
mov
push
mov
fidiv
iret
add
es
repnz
mov
shl
add
push
mov
mov
mov
cli
sub
repz
adc
jb
fwait
jbe
es
movs
jae
or
test
lods
arpl
aaa
adc
ret
js
push
(bad)
dec
xchg
inc
enter
pop
fcomp
xchg
xchg
inc
fidivr
call
lea
ins
aam
or
sbb
gs
int
cld
push
mov
fwait
inc
mov
nop
cmp
jecxz
loope
in
cmps
fdivr
in
pop
aas
loop
mov
pop
int
call
ficomp
jne
js
imul
mov
xor
add
mov
add
jb
mov
add
jo
nop
inc
test
sub
jge
sahf
jp
inc
xchg
into
and
stc
add
cmp
inc
leave
and
push
mov
jo
mov
and
mov
mov
inc
add
sub
xor
mov
pop
mov
imul
(bad)
cmp
xor
and
xor
aad
into
xor
pusha
clc
add
xor
add
in
xlat
cmps
mov
mov
cmc
push
adc
sbb
clc
and
adc
push
lds
fs
les
sbb
push
int3
xor
std
sahf
js
popa
lds
test
pop
sar
call
add
sti
cmp
subsd
sub
sub
repz
add
add
cld
xchg
push
mov
add
pop
stos
dec
mov
(bad)
push
mov
mov
mov
js
lahf
mov
dec
mov
xor
shr
jmp
iret
dec
mov
fwait
jle
imul
push
mov
pop
shl
pop
hlt
mov
and
adc
push
mov
rol
and
pop
cmps
push
push
movs
fstp
mov
sbb
push
or
mov
ja
cmp
push
or
mov
imul
cmc
pop
xor
lds
ss
dec
(bad)
sub
dec
(bad)
in
push
mov
or
pop
hlt
pop
add
bound
loop
(bad)
jecxz
imul
mov
dec
aam
loop
mov
jl
int3
dec
aad
aam
pop
adc
sub
bound
xchg
call
jmp
adc
cmp
inc
aam
out
mov
clc
or
mov
xchg
xor
nop
mov
pushf
jp
inc
scas
xchg
jno
daa
adc
out
ds
dec
mov
xchg
pop
call
call
stos
jbe
xor
push
iret
aas
pmaxsw
push
call
jmp
popa
mov
inc
mov
lods
dec
mov
cmp
sub
add
es
cmp
pop
loopne
mov
xor
scas
cdq
xchg
push
mov
fadd
pop
cmps
sahf
dec
int
cmps
mov
js
outs
xchg
rcr
shr
outs
fadd
sbb
cld
inc
xor
call
sti
daa
repz
retf
push
aad
adc
jae
add
add
dec
movs
xchg
out
mov
mov
daa
not
inc
int
sbb
push
inc
into
aas
loope
push
sbb
push
(bad)
jl
xor
div
iret
cmp
xchg
jns
bound
out
clc
pop
add
xor
dec
cmp
repnz
add
xor
les
pop
mov
mov
cmp
cmp
cmc
xchg
jns
popa
mov
push
iret
pop
cmps
lahf
fcom
push
mov
mov
outs
rcr
fadd
(bad)
dec
mov
fild
loopne
in
and
int
cmp
add
stos
jge
add
stos
mov
(bad)
cmp
aas
xor
es
dec
lds
jmp
sar
pop
scas
sar
repz
test
xlat
add
aam
cmp
daa
adc
cmp
inc
mov
cmps
loope
fisttp
sbb
dec
mov
arpl
xor
in
sub
mov
inc
(bad)
push
adc
or
sub
xlat
push
jmp
cmps
pusha
out
cmp
sub
loope
(bad)
sub
nop
fs
jp
cmp
cs
fdivr
aad
fmul
test
xor
out
add
dec
mov
mov
cmp
dec
fld
adc
push
movs
data16
pop
out
pop
stos
lahf
cdq
data16
cdq
xchg
jns
xchg
dec
fdivr
aam
cmp
rol
inc
mov
cmp
icebp
dec
stos
push
mov
js
imul
clc
push
adc
lods
lahf
arpl
sbb
(bad)
dec
mov
sar
adc
and
repnz
push
(bad)
pop
retf
push
jne
xor
iret
dec
stos
mov
inc
adc
mov
clc
or
enter
cmp
push
repz
mov
test
jbe
add
sar
mov
loop
xlat
add
out
mov
call
mov
fisttp
data16
pop
lods
lahf
xchg
dec
fidivr
add
add
and
ror
inc
ret
das
les
out
pop
adc
jo
pop
stc
add
and
xchg
jl
call
sub
cmovge
imul
aaa
out
out
pop
cmp
and
std
and
aaa
psraw
popf
dec
push
sbb
pop
repz
push
(bad)
cmp
xlat
push
mov
mov
rol
not
push
cmp
and
xor
xor
jge
pushf
je
xchg
nop
enter
and
jmp
clc
pop
std
pop
rcr
cmp
sbb
dec
xlat
and
ja
sub
sub
or
lds
int3
push
jne
pop
xchg
add
dec
mov
cwde
fwait
push
mov
(bad)
int3
sub
aad
and
das
jmp
test
cld
dec
stos
inc
int3
add
jne
xor
shl
shl
or
aas
loopne
xchg
mul
adc
adc
mov
mov
mov
sub
push
rcl
call
(bad)
push
mov
jne
jg
sub
repnz
(bad)
sub
jno
add
and
pop
scas
inc
scas
fdivr
dec
stos
imul
in
pop
test
shl
or
(bad)
push
mov
fldenv
cmc
and
mov
mov
mov
xchg
push
cmps
mov
inc
hlt
xchg
int
mov
lods
outs
mov
jp
push
dec
(bad)
addr16
add
sub
push
mov
fisttp
retf
push
mov
sub
ror
imul
sbb
ja
push
rcl
outs
mov
rol
xor
xor
leave
dec
cli
cmp
dec
lds
xchg
ja
pop
cmps
mov
dec
rol
mov
pop
clc
pop
stos
mov
xchg
mov
jge
inc
(bad)
js
cmps
mov
dec
movs
mov
imul
fcomp
(bad)
ret
xor
hlt
add
lds
push
int
(bad)
jo
inc
(bad)
ins
mov
mov
adc
rol
hlt
pop
aam
inc
out
pop
mov
fdivr
retf
jecxz
mov
add
push
test
call
ret
xchg
mov
adc
jle
pushf
imul
sub
xor
mov
adc
test
js
ja
lock
mov
xchg
jge
or
sub
pop
lods
jnp
jmp
std
pop
sbb
push
mov
inc
movs
push
push
mov
xchg
inc
cmps
popa
xor
sbb
push
test
cmps
jno
adc
and
dec
xlat
add
int3
add
cmp
ds
xlat
pop
mov
or
add
in
neg
ror
dec
clc
and
adc
add
and
push
neg
mul
int3
push
scas
pushf
fwait
outs
fiadd
int
sbb
pop
inc
sar
inc
mov
dec
test
les
jmp
in
push
ret
jo
dec
scas
in
push
fistp
sbb
or
pop
mov
push
mov
rcr
mov
sbb
ret
push
xchg
outs
mov
mov
movs
mov
test
cwde
jg
lahf
repz
mov
xchg
lahf
jg
ja
adc
imul
xchg
mov
xor
retf
aaa
or
mov
scas
outs
fnstcw
or
pop
not
cmp
and
out
dec
adc
and
clc
cmp
jo
dec
lods
popf
(bad)
int3
add
sbb
or
pop
test
clc
pop
loope
std
dec
mov
pop
aam
scas
xchg
jo
fwait
push
aam
(bad)
retf
inc
mov
cdq
inc
xor
loopne
push
sbb
dec
test
ins
mov
jnp
add
pop
ret
pop
int3
sub
dec
in
inc
retf
daa
push
sti
cmp
pop
sbb
ss
loope
scas
inc
mov
scas
mov
ja
js
pop
idiv
sbb
inc
mov
rcr
outs
shl
test
ds
cld
and
dec
mov
inc
add
nop
xlat
sub
inc
mov
sbb
outs
aam
movntps
stc
add
lock
ficomp
pop
cli
mov
ja
dec
mov
mov
add
and
sub
das
adc
jmp
ds
sub
int
cmps
lea
xchg
aam
lds
enter
(bad)
bound
sbb
push
int3
pop
pop
popa
fmul
les
jge
sub
adc
cs
lock
mov
adc
ret
pop
mov
mov
lods
out
inc
sar
cmp
inc
xlat
add
push
aam
jmp
mov
popf
hlt
and
ror
xlat
ss
dec
mov
aaa
loopne
adc
jb
pop
mov
push
in
push
in
inc
lods
mov
push
adc
push
mov
pusha
retf
mov
jl
repz
es
pop
sti
push
fstp
loope
imul
push
movs
(bad)
sub
cmp
or
and
and
stos
rcr
call
mov
or
and
iret
nop
fwait
int3
cwde
stc
loop
scas
lods
cmc
jae
or
int3
repz
jmp
fmul
stc
lods
pusha
call
adc
dec
dec
addr16
xchg
dec
in
jp
clc
push
and
adc
and
or
int3
cmp
and
test
sub
xor
sahf
data16
jo
std
retf
sbb
add
and
inc
jno
mov
movs
mov
inc
adc
mov
ror
das
or
sub
inc
mov
or
dec
pop
aaa
sbb
ins
out
jno
xchg
aad
or
aaa
xlat
aad
pushf
imul
test
dec
dec
sub
xchg
stos
and
gs
(bad)
ret
sub
pop
sbb
mov
ds
rcr
jl
or
test
xchg
mov
aaa
fs
fs
pop
xchg
mov
xor
xchg
xchg
shl
inc
lea
push
dec
xor
sbb
in
rcr
nop
pop
sti
xchg
xchg
push
outs
mov
add
lahf
out
mov
adc
lahf
aad
enter
out
push
aaa
repz
paddusw
push
cmps
(bad)
pop
pop
inc
push
ret
inc
xchg
jns
jno
and
push
and
jne
loopne
mov
fst
pusha
push
dec
aam
repnz
aam
(bad)
lods
pop
sub
push
sub
into
les
sbb
xchg
or
arpl
cmp
jmp
inc
jne
mov
cmp
and
sahf
bound
add
push
xor
fimul
test
leave
xor
sub
ret
jmp
push
ss
lds
scas
add
leave
and
leave
mov
in
mov
ins
pop
xor
dec
or
movs
out
iret
stos
test
xchg
je
shl
mov
aad
lock
jo
nop
add
pop
jp
(bad)
enter
rcl
mov
std
call
rol
jns
add
xchg
jecxz
mov
pop
and
ins
jb
xor
das
pop
jo
js
repz
nop
cmp
fs
jecxz
test
push
pop
fsubr
or
je
push
or
add
jae
xchg
mov
jmp
or
test
fild
(bad)
cmp
fstp
xchg
adc
or
cmp
cdq
inc
std
imul
rep
add
movs
scas
xor
inc
inc
scas
pop
out
scas
fmul
inc
pop
fistp
jmp
loop
(bad)
jmp
ss
cs
int3
shl
sar
cdq
mov
outs
aam
mov
jp
jl
sbb
xchg
cld
xchg
inc
sub
sar
lods
cmps
mov
into
xchg
aaa
retf
jno
adc
lock
adc
or
push
or
jb
outs
stos
inc
jp
add
xor
sbb
jno
call
imul
loope
shl
cld
sub
push
cmp
ret
xchg
call
adc
ror
fbstp
xor
loope
sub
xchg
jle
iret
(bad)
icebp
xchg
mov
dec
sbb
cs
mov
sbb
mov
xchg
push
gs
sar
inc
sbb
pusha
scas
mov
out
jno
sti
je
inc
cmp
retf
and
(bad)
adc
push
push
fst
adc
les
jne
fiadd
out
test
push
imul
int
push
nop
add
mov
(bad)
into
fstp
in
aas
xlat
jne
mov
jle
and
mov
mov
jns
psubw
push
cmp
(bad)
dec
xchg
inc
mov
adc
int
or
pop
adc
dec
sub
(bad)
dec
dec
lahf
add
jmp
hlt
fs
rcr
sub
aad
mov
cmc
mov
lds
pop
(bad)
mov
mov
fisttp
xabort
and
sbb
pop
popa
nop
add
sub
mov
call
and
and
loope
cmps
mov
retf
int
in
xchg
imul
or
and
cmp
pop
lock
shr
test
fidivr
mov
mov
sub
sub
retf
xor
aam
sti
mov
push
(bad)
or
or
mov
leave
jmp
clc
test
jns
mov
ret
lds
sub
test
xor
cli
ja
push
div
test
aad
adc
jmp
fcmovnb
cmp
loope
fstp
inc
loopne
mov
(bad)
enter
ins
cmp
outs
pop
out
and
lds
mov
gs
pushf
sub
jmp
sub
into
(bad)
jmp
jne
xchg
inc
inc
and
mov
mov
arpl
jg
mov
gs
mov
cmc
int3
and
lahf
int
in
clc
adc
in
cmp
push
shl
in
cmp
in
rcl
mov
in
pop
and
fwait
int
sbb
ins
in
ret
or
and
call
loopne
retf
push
fst
in
fsubr
inc
mov
shl
in
mov
repnz
adc
cmp
mov
mov
inc
popf
or
shl
leave
push
sar
cmp
fadd
ss
je
retf
arpl
sbb
xchg
popf
fwait
push
aam
jg
bound
in
or
lods
add
dec
(bad)
mov
sbb
add
push
mov
aad
xchg
inc
lods
int3
dec
pop
out
inc
pop
les
int
jmp
rol
repnz
jle
pop
aaa
je
sti
pop
and
scas
xchg
adc
jbe
push
and
aaa
rcl
in
scas
seto
stos
cmp
ds
test
mov
rol
jbe
daa
dec
add
stos
xor
push
mov
retf
loopne
jb
adc
out
cmp
xor
dec
(bad)
imul
aad
cwde
sbb
test
or
xchg
addr16
mov
pop
add
test
retf
mov
(bad)
call
sub
rcr
mov
nop
std
adc
pushf
arpl
add
mov
das
pop
movs
inc
ja
mov
sahf
inc
push
xchg
arpl
push
(bad)
sar
js
mov
inc
cmps
je
pop
mov
call
(bad)
js
in
and
cmp
dec
lods
or
jb
ds
dec
std
and
into
shr
cmps
cmp
stos
sub
xlat
push
lock
xchg
push
xchg
call
pop
cmps
int3
inc
mov
pop
or
rcr
lock
(bad)
ficom
jnp
outs
cmc
jp
shl
call
loop
inc
cmp
mov
hlt
js
inc
sar
icebp
cmp
xor
addr16
cdq
sub
jle
fnstsw
add
jbe
add
inc
(bad)
xor
fidivr
dec
cmp
mov
pop
push
scas
or
and
and
stos
nop
xchg
and
jmp
mov
push
push
sbb
add
sbb
cmp
outs
shr
aaa
pop
fisttp
ins
stos
xchg
mov
pushf
inc
in
pushf
xor
add
pop
ret
push
add
jno
mov
jae
out
ds
in
dec
mov
or
test
(bad)
imul
loopne
ror
test
and
jle
in
sbb
mov
shl
inc
daa
xchg
addr16
xlat
adc
icebp
test
pop
lock
add
cmps
mov
cld
cmps
addr16
leave
add
lds
mov
inc
dec
mov
sub
ja
sti
scas
and
sti
sti
test
icebp
dec
movs
ja
sti
push
xor
stos
enter
mov
and
nop
push
mov
shl
int
ret
sbb
cmp
or
ins
aam
mov
xor
jle
repz
xchg
adc
pop
loope
test
pop
pop
inc
retf
fisub
iretw
and
loop
jns
pop
lods
fwait
jecxz
sbb
icebp
add
jbe
inc
and
xchg
sub
(bad)
cmp
xor
imul
or
adc
mov
push
pushaw
lea
fild
(bad)
xor
cs
fdivr
add
repz
imul
loop
sub
and
popa
sbb
jl
push
repnz
jbe
cmc
mov
aad
add
cli
daa
and
fcmove
jle
mov
loope
call
jg
sbb
in
dec
xor
adc
dec
mov
and
mov
push
mov
adc
test
rol
retf
out
sub
sar
imul
in
and
push
(bad)
(bad)
cmp
(bad)
fidivr
push
and
iret
mov
mov
inc
add
adc
and
cmc
inc
lahf
mov
mov
movs
mov
cli
cmp
aam
add
div
or
(bad)
icebp
(bad)
mov
push
retf
push
and
and
(bad)
lock
dec
in
jmp
pop
mov
xor
pop
(bad)
shl
sub
scas
cmp
xor
les
(bad)
lahf
call
xor
mov
push
bound
pop
outs
dec
adc
sub
jnp
aas
adc
mov
xlat
bound
mov
stos
lea
retf
adc
ins
pop
mov
cwde
imul
ins
dec
hlt
xor
ja
js
add
jae
fstp
jo
(bad)
out
pop
ficomp
jne
fisub
pop
push
mov
movs
jg
and
inc
mov
xor
xor
das
jns
test
push
sub
sbb
mov
xbegin
mov
adc
push
pop
sub
sbb
xor
mov
sub
xchg
ins
cdq
(bad)
out
add
mov
xchg
push
inc
test
into
retf
lods
mov
movs
push
jo
outs
mov
fiadd
inc
scas
xchg
inc
xor
int3
pop
jno
aam
sub
xchg
bound
not
mov
fisubr
into
(bad)
and
xchg
fnsave
push
test
or
jmp
mul
arpl
scas
mov
cmps
adc
stos
inc
in
sahf
mov
clc
push
fwait
pop
stos
adc
popf
cmp
(bad)
mov
and
mov
(bad)
sahf
xchg
jmp
call
jns
clc
out
or
jb
sbb
jmp
cwde
cld
int
push
pop
lods
push
and
mov
and
push
and
jmp
push
xlat
mov
adc
pop
dec
mov
fs
nop
dec
mov
aad
cmp
mov
sbb
fidiv
mov
loop
clc
daa
movs
jmp
xchg
test
xor
pop
nop
xchg
dec
outs
cld
imul
movs
test
jb
sahf
mov
mov
fcomp
cmc
rcr
lock
mov
inc
cmps
test
popf
cdq
cmp
je
mov
adc
outs
fwait
push
pop
clc
pusha
sbb
jl
cld
adc
ret
inc
or
xchg
jmp
mov
add
mov
mov
test
add
and
dec
xchg
out
jl
dec
inc
call
mov
add
in
add
jbe
inc
scas
cmp
loope
push
add
fcom
inc
xchg
imul
fucomp
std
mov
fdiv
loope
cmps
aam
push
jmp
hlt
enter
mov
lods
jns
retf
jae
jns
out
pop
jg
pushf
add
sbb
push
mov
sub
das
add
sbb
pop
jecxz
in
cmp
out
dec
pop
or
dec
popf
mov
jmp
mov
lahf
adc
cmc
gs
inc
jecxz
jbe
adc
pop
sbb
test
cmp
and
ds
sti
mov
out
ds
inc
movs
xchg
(bad)
xor
inc
rcr
mov
ins
out
dec
mov
popa
cs
mul
ficomp
sbb
inc
imul
shl
or
sub
mov
xor
adc
loopne
dec
(bad)
loop
jno
sbb
add
cmp
push
jp
std
je
mov
xor
pop
adc
dec
out
lock
jae
sub
fistp
nop
push
inc
in
ret
(bad)
sub
mov
stc
inc
sub
xor
data16
dec
idiv
inc
fwait
mov
loop
test
pop
rcl
ret
scas
and
mov
outs
bound
pusha
cli
pushf
clc
aam
push
cld
jmp
int3
jecxz
push
out
ds
cld
es
push
jl
pop
pop
lods
popa
xor
mov
aas
jecxz
fcom
pop
ds
sbb
data16
ja
mov
pop
or
fsubr
(bad)
lods
repz
jmp
add
fcomp
rcl
jg
jae
push
jp
into
ficomp
out
ja
aas
jmp
jg
mov
js
cmp
ror
adc
push
dec
mov
retf
loop
std
pop
mov
(bad)
jl
xchg
sub
mov
mov
lods
(bad)
nop
cmp
sub
adc
xchg
scas
addr16
or
sbb
add
addr16
jne
xor
outs
(bad)
and
push
in
repz
idiv
push
out
jb
(bad)
mov
cli
inc
inc
sbb
sbb
aas
push
sbb
mov
mov
es
cmc
xor
push
lods
pop
dec
inc
jge
xor
fidiv
mov
loop
rol
xchg
sbb
sbb
js
mov
pop
jmp
mov
fiadd
lock
sbb
push
sar
int3
aaa
lock
and
add
jl
int3
retf
dec
inc
test
out
sbb
pop
inc
hlt
rcr
icebp
ja
loop
push
js
fisubr
xchg
mov
mov
mov
(bad)
pop
fnstcw
in
adc
mov
cmc
daa
rcl
nop
pusha
cld
push
jl
das
f2xm1
(bad)
ror
add
push
xor
lahf
lahf
inc
xlat
pop
jl
int
mov
clc
cmp
cs
push
les
std
mov
ss
into
sti
dec
pop
or
add
sub
jo
or
stos
lods
dec
gs
pop
in
movs
pusha
adc
in
push
inc
fcmove
xchg
adc
shr
popa
das
mov
leave
or
mov
mov
xor
aas
cmp
je
in
mov
xor
rcl
dec
sbb
sbb
or
sbb
cmc
dec
push
das
stos
popa
int
lods
cwde
pop
push
bnd
gs
mov
enter
jecxz
sysenter
bound
sub
test
(bad)
pop
xor
jo
mov
mov
or
popf
sbb
xchg
or
add
mov
inc
aas
pusha
stos
jb
out
bnd
sahf
sbb
xchg
mov
(bad)
out
js
jbe
ret
push
in
mov
test
pop
scas
xchg
mov
ffreep
lods
popf
xchg
lea
xor
pop
adc
popa
mov
std
mov
call
mov
mov
cmp
sahf
cmp
adc
mov
lahf
(bad)
lea
xor
ins
xchg
xor
adc
mov
pop
cmps
imul
iret
pop
sti
jecxz
vmulpd
jno
add
cmc
pop
jp
xor
jae
mov
(bad)
cmps
mov
sbb
rol
fadd
retf
xor
cmps
jo
mov
xor
stos
in
ror
xor
sti
out
stos
cmps
or
imul
stos
ret
iret
jo
mov
or
inc
inc
cmp
(bad)
push
or
popf
aas
imul
xor
xor
inc
cmp
scas
xlat
dec
push
test
inc
add
jl
sar
xchg
mov
and
xchg
inc
test
cli
cmps
mov
arpl
inc
mov
retf
dec
xlat
pushf
jae
adc
popa
fiadd
fidiv
les
or
sbb
and
push
das
test
test
(bad)
outs
cmps
xchg
fdiv
sbb
aam
inc
mov
ficom
mov
sbb
and
jp
(bad)
xchg
adc
mov
xchg
(bad)
scas
(bad)
clc
pop
ret
or
outs
dec
pop
ja
dec
outs
pop
stc
mov
xor
imul
pop
jnp
mov
mov
scas
std
mov
gs
std
pop
push
mov
lock
les
fs
in
cwde
push
cmp
add
call
popa
les
push
mov
cmps
loope
std
or
stos
xchg
xor
mov
add
lods
push
ss
aam
xchg
pop
jns
call
mov
or
sub
call
xor
xor
inc
jp
iret
imul
popf
jmp
jne
jecxz
mov
jle
adc
fs
dec
stc
mov
fsubr
stc
jmp
push
xchg
sbb
cld
out
adc
jmp
push
test
cwd
or
fcom
xchg
sub
in
or
gs
jno
leave
stc
cwde
out
stos
nop
cmp
call
ret
xor
mov
push
out
xor
test
mov
popa
jp
repz
add
push
mov
xchg
ret
sar
dec
sbb
sbb
out
xchg
ins
pop
mov
cmp
iret
pushf
push
or
sbb
rol
lods
popf
pop
mov
push
retf
movs
outs
(bad)
dec
xchg
mov
and
mov
xchg
fwait
cs
mov
loope
dec
bound
jae
cmp
idiv
cmps
adc
test
adc
mov
ss
(bad)
fiadd
ins
or
es
jge
or
and
fcom
dec
jmp
fcom
movs
add
iret
repz
ds
push
fsub
dec
or
fdiv
mov
xchg
addr16
push
mov
mov
pop
je
sub
jmp
dec
or
push
test
xor
in
aas
pop
les
aas
test
mov
jmp
pop
xchg
sub
and
into
and
mov
rcr
jnp
in
pop
inc
mov
iret
add
push
test
add
pop
and
push
clc
and
jecxz
push
fisttp
nop
push
pop
mov
dec
(bad)
xchg
sub
shr
pop
das
mov
sti
dec
push
sbb
dec
gs
scas
push
imul
xchg
xor
xor
or
add
ins
fs
jl
sub
push
mov
nop
and
inc
jbe
rcr
push
xchg
icebp
pop
shl
out
mov
sbb
test
xor
xor
scas
arpl
pop
popa
(bad)
ret
xchg
or
aas
sbb
jns
nop
leave
add
dec
pop
sbb
fdiv
(bad)
test
sub
inc
and
cmps
pop
sub
ins
aad
xchg
mov
xchg
or
aas
cmps
aad
rol
pop
cmp
pop
test
add
je
sbb
loope
enter
repz
icebp
dec
into
add
jbe
sub
mov
inc
add
enter
push
lea
cmc
iret
xchg
fwait
clc
jecxz
test
or
mov
add
ret
rcr
adc
fild
xchg
push
outs
lods
cmp
gs
outs
xor
(bad)
cli
push
data16
cmp
ja
cmp
sub
mov
(bad)
pop
or
lock
add
xchg
sbb
and
aad
xlat
or
into
push
inc
daa
outs
fcom
rol
pop
push
or
cld
dec
repnz
enter
int3
or
inc
ss
leave
jp
mov
mov
adc
fcomp
mov
or
push
daa
stc
mov
fiadd
and
jg
mov
shl
int
in
xchg
rol
bound
sub
outs
sbb
mov
pop
addr16
sub
(bad)
popf
fdivr
add
(bad)
out
pushf
fbstp
or
pop
mov
adc
jle
push
sub
lock
out
ret
psrlw
stos
jae
and
jp
and
in
pushf
dec
scas
(bad)
retf
lods
in
lahf
and
dec
add
addr16
fldenv
and
push
std
mov
mov
js
je
jmp
pop
nop
int3
pop
cmp
and
sbb
rol
cmp
sar
xor
push
lds
push
adc
stos
inc
mov
push
adc
sbb
xor
add
jne
xor
and
fadd
imul
fisubr
jecxz
ret
lea
stos
push
or
daa
dec
iret
stos
in
mov
xor
out
jl
in
mov
mov
fwait
shl
xlat
inc
adc
push
and
xchg
rol
int
xchg
fistp
pop
cmp
adc
jns
mov
xchg
aad
shr
jecxz
pusha
icebp
popf
into
xchg
jb
xchg
shl
scas
inc
sbb
aaa
imul
add
sbb
das
dec
push
pop
cmp
rcl
pop
jnp
push
into
cmp
imul
rol
pop
cmp
fadd
nop
add
or
aam
repnz
cmovns
loop
sub
xchg
out
fnsave
pop
or
call
mov
daa
inc
and
push
sub
push
dec
adc
mov
pop
jae
repnz
imul
sar
dec
(bad)
pop
jmp
hlt
xchg
scas
mov
push
jae
dec
(bad)
push
push
sbb
ds
cmp
adc
jbe
ins
mov
outs
mov
test
fdivr
push
loop
mov
frstor
xchg
aaa
inc
mov
xchg
scas
ficom
dec
xor
xor
imul
jae
dec
xor
push
mov
icebp
cwde
mov
icebp
push
mov
push
ds
adc
out
addr16
sbb
movs
aam
push
push
movs
repz
xchg
mov
scas
fild
inc
(bad)
adc
cmp
inc
adc
ja
pop
stc
xchg
arpl
test
sbb
cmp
sti
jmp
dec
cmp
in
aam
mov
xchg
and
adc
dec
loope
outs
aaa
dec
pause
fbstp
add
or
imul
sbb
mov
fdivr
ret
fisub
ja
mov
scas
mov
sti
test
popa
push
and
sbb
pop
loop
mov
or
rcl
xchg
fsub
mov
mov
imul
sbb
mov
inc
fcom
adc
xor
sub
jge
cmp
jecxz
int3
xor
test
arpl
(bad)
fs
lds
jp
push
add
stc
scas
int
mov
mov
repnz
gs
xor
push
add
inc
or
jle
ins
(bad)
cmp
push
bound
pop
push
jne
daa
jge
xor
and
dec
stc
scas
int
out
out
xchg
fadd
aas
dec
cli
jnp
jno
aas
or
das
xor
imul
xor
movs
xlat
xchg
in
mov
rol
xchg
push
lock
aad
inc
add
lea
dec
adc
dec
adc
dec
sbb
lds
pop
idiv
jmp
cli
into
adc
mov
sti
xchg
nop
outs
mov
xchg
call
push
test
xchg
cld
and
and
sbb
sbb
xchg
aad
call
leave
or
pop
rcl
dec
pop
push
loope
cmp
call
rol
test
aaa
push
cmp
mov
mov
xor
push
and
and
out
scas
in
mov
push
test
or
dec
div
test
mov
stc
arpl
movs
out
lock
fdiv
cli
mov
cmps
retf
ret
mov
imul
xor
pop
aaa
js
popa
jmp
cli
cdq
mov
mov
adc
bound
dec
in
lock
ins
add
(bad)
fcomp
push
cmp
(bad)
mov
or
pop
std
mov
xchg
xor
imul
xor
fild
dec
sub
cmp
inc
and
ds
wrmsr
mov
xchg
rol
pop
sub
xor
pop
adc
sbb
sub
or
ret
out
in
xchg
mov
(bad)
aam
shr
imul
xor
ss
sbb
or
dec
adc
arpl
inc
cmp
in
adc
xor
inc
stc
mov
push
popa
aas
jge
xchg
ror
into
lods
lds
xor
jae
push
or
shr
jne
jp
clc
mov
mov
shl
inc
ss
sub
int3
stc
mov
pushf
popa
in
out
add
inc
add
out
cld
xchg
fisub
cdq
jge
xor
out
std
outs
in
cdq
call
jmp
xlat
and
into
lods
aad
cmps
std
xchg
dec
cmp
xchg
fsub
(bad)
into
(bad)
shr
mov
mov
pop
jnp
push
dec
push
in
popf
retf
cdq
fisttp
mov
aas
xlat
out
mov
cs
jno
and
jae
push
cmp
fidivr
cvtps2pi
dec
sbb
mov
nop
ret
sbb
sbb
push
xor
das
pop
sbb
addr16
sbb
popf
cmps
enter
ret
repz
cmps
mov
dec
cmp
sbb
sub
lahf
rcl
mov
jo
pop
outs
sbb
cld
mov
ins
das
jne
div
and
cmc
xchg
push
jp
pop
adc
repz
jae
push
push
pop
adc
push
adc
pop
gs
cmps
rol
xor
aad
repnz
push
jnp
jbe
push
in
xchg
jns
lahf
rol
aas
jmp
stos
clc
or
bound
sub
dec
loope
or
xor
fimul
sub
rol
clc
sub
ja
sbb
jno
pop
(bad)
push
inc
push
adc
mov
cmp
and
js
push
sbb
push
mov
pop
mov
push
das
jb
dec
pop
pop
out
xor
scas
(bad)
test
sub
bound
pop
adc
call
les
jns
jp
and
ret
clc
lods
out
xchg
mov
jmp
movs
add
jmp
jle
gs
cli
xor
(bad)
imul
cmp
outs
sub
pop
bound
je
sub
aad
test
push
lock
jmp
(bad)
xchg
in
stos
lock
int
cmp
gs
push
push
aam
mov
popa
add
pop
pop
inc
daa
jae
stc
jbe
push
jmp
bound
jns
jae
pop
add
xchg
fdivr
js
aas
popa
push
pop
cs
add
dec
andps
call
out
xchg
lds
adc
mov
cld
mov
ins
or
push
pop
int3
das
sbb
inc
sqrtps
(bad)
fisub
sub
retf
mov
adc
stc
pusha
jecxz
call
aaa
jne
pop
cmp
daa
pop
xor
(bad)
xchg
loop
(bad)
xchg
cmps
xlat
mov
aad
out
fbstp
pop
dec
lock
jmp
or
dec
push
pop
push
add
mov
scas
loopne
repz
scas
shl
inc
xchg
sub
dec
add
bound
movs
neg
test
jo
pop
push
in
mov
sbb
pop
iret
mov
cmc
xchg
retf
and
dec
fsubr
cs
dec
sbb
(bad)
in
push
enter
mov
lock
mov
leave
cmp
adc
sti
mov
inc
add
idiv
addr16
rcl
cmp
jb
ins
or
pop
push
dec
adc
mov
mov
(bad)
mov
pop
push
adc
pop
in
pop
pop
jo
adc
ret
enter
or
mov
(bad)
cmp
(bad)
cld
sahf
fcomp
fimul
xchg
fild
ins
in
mov
xchg
jmp
lock
sahf
(bad)
ds
xor
add
dec
sbb
push
jmp
mov
outs
in
mov
sub
sahf
fst
les
push
xor
dec
sbb
sub
sbb
push
adc
loopne
xlat
sahf
mov
mov
mov
mov
pop
call
call
fild
cs
add
orpd
jl
mov
sub
arpl
js
add
pop
add
adc
xor
movs
enter
in
(bad)
imul
pop
adc
dec
int3
mov
aas
jns
je
jnp
jb
jge
push
out
into
mov
pop
add
(bad)
je
push
sbb
dec
or
idiv
mov
xor
inc
sbb
pop
cmp
mov
out
mov
sub
xchg
dec
rsqrtps
imul
data16
sub
jae
out
shr
add
in
adc
inc
es
xchg
pop
and
mov
xchg
stc
mov
push
xchg
in
dec
sbb
gs
adc
gs
sbb
(bad)
mov
mov
sub
gs
adc
push
pop
push
pop
(bad)
imul
pushf
mov
adc
outs
sub
ret
arpl
pop
mov
inc
rcr
xor
outs
aas
pop
adc
dec
pop
dec
hlt
mov
stc
sub
jg
xchg
(bad)
aam
in
test
xchg
mov
mov
or
call
in
push
push
out
aad
cli
sub
add
test
jns
pop
pop
jg
inc
sbb
dec
sub
push
and
in
xor
jbe
dec
pmuludq
dec
adc
test
gs
jne
and
mov
jbe
add
dec
shl
mov
pusha
add
xor
sahf
std
mov
imul
mov
repnz
xchg
scas
fldcw
stos
cmc
inc
push
push
inc
and
push
pop
mov
repz
pop
dec
adc
xchg
scas
lahf
mov
imul
lods
cmc
xchg
mov
jnp
cmp
and
mov
ins
cs
xor
add
sbb
adc
jp
pop
cmp
xor
test
push
dec
adc
or
pop
pop
pop
push
inc
jae
stos
icebp
xor
inc
push
adc
ror
push
push
xor
push
and
and
sbb
mov
test
sbb
retf
mov
movs
fcom
cmp
jne
rcr
movs
jmp
fstp
cmp
xor
std
xor
ins
or
mov
mov
sub
push
push
sbb
xchg
cmps
iret
mov
out
mov
stos
outs
add
dec
sbb
push
int
fsub
mov
xchg
push
adc
mov
mov
sahf
sar
xchg
std
mov
clc
addr16
popa
and
or
mov
cmp
imul
mov
cmp
retf
mov
test
mov
pop
mov
cdq
shl
aaa
xchg
(bad)
mov
mov
jbe
iret
mov
(bad)
neg
xchg
inc
aas
or
scas
jmp
popa
in
sbb
repz
lods
out
mov
mov
sub
xor
push
pop
cmc
lahf
sub
pop
or
ret
and
mov
pop
out
cdq
jmp
mov
xor
lods
jmp
aad
dec
adc
push
pop
mov
adc
mov
mov
in
clc
mov
sbb
xor
cs
pop
dec
pop
inc
jecxz
cs
hlt
mov
outs
or
mov
jb
pop
in
test
xchg
inc
add
xor
out
mov
dec
push
inc
pop
imul
jmp
jnp
dec
adc
and
fcom
xchg
cld
gs
cmp
dec
push
dec
add
leave
xchg
rol
movs
rep
rcr
addr16
aad
test
arpl
mul
xor
stos
icebp
xchg
(bad)
inc
jb
inc
or
push
imul
pop
cmp
loopne
add
stos
stc
xchg
mov
xchg
scas
fistp
add
pop
aas
dec
push
and
hlt
xchg
lds
aad
(bad)
xchg
enter
inc
or
add
jecxz
neg
sub
ins
out
iret
mov
repnz
hlt
test
mov
outs
add
cmps
outs
xor
and
pop
call
xor
sub
and
pop
mul
dec
icebp
aam
repnz
dec
and
arpl
inc
push
xchg
(bad)
sti
jecxz
xchg
mov
imul
adc
and
lods
into
mov
jl
data16
call
or
mov
sbb
dec
add
sub
adc
push
inc
add
mov
aas
cli
addr16
into
cmp
or
imul
mov
push
push
fld
mov
pmovmskb
xchg
jns
ins
sub
xor
pop
add
and
push
mov
jmp
jae
pop
dec
(bad)
cmps
aam
in
into
pushf
fdivr
(bad)
and
bound
sub
bt
mov
mov
arpl
in
pop
dec
or
push
adc
js
push
adc
je
ss
pusha
jmp
mul
out
sub
rcl
pop
les
push
jecxz
sub
ss
and
mov
sub
cmp
cmp
push
fdiv
pop
mov
push
loopne
cmp
inc
sbb
popa
or
sahf
cld
mov
cmp
in
mov
sahf
idiv
jmp
sub
outs
sbb
in
mov
(bad)
and
ja
dec
sbb
leave
pop
jecxz
retf
xchg
cmps
(bad)
and
dec
adc
pop
in
xchg
dec
lock
jmp
lock
movs
cmc
or
pop
add
xchg
aad
retf
mov
fnstcw
dec
adc
mov
sub
push
add
sub
pusha
add
cmp
cs
adc
cmp
pop
(bad)
jns
mov
jmp
sbb
sbb
ja
jae
sbb
push
inc
add
out
xchg
xchg
scas
mov
mov
mov
arpl
xor
adc
push
ja
lahf
ds
push
std
test
mov
cmp
ins
cmps
out
(bad)
into
xor
pop
cmp
cdq
icebp
add
je
ret
sbb
stos
lock
mov
or
sub
inc
xor
lock
jmp
jle
dec
push
dec
sbb
sub
dec
push
push
xor
mov
xor
test
mov
retf
mov
dec
cmp
pop
inc
adc
sub
push
adc
sbb
add
lock
in
test
mov
xchg
(bad)
mov
xlat
inc
mov
inc
add
jbe
jno
pop
cli
mov
xor
nop
dec
stc
mov
mov
fcomip
mov
nop
sbb
add
dec
in
test
mov
repz
inc
xchg
mov
adc
mov
mov
outs
sbb
mov
sub
push
ds
jg
mov
inc
out
mov
sbb
jno
xor
xchg
iret
fwait
clc
lahf
sbb
push
sbb
jae
call
ds
push
loopne
ins
ds
bound
lods
jmp
(bad)
xchg
call
mov
dec
pop
jl
cwde
int3
scas
stc
sub
xchg
xlat
pop
test
mov
stos
loop
fisub
pop
mov
xchg
adc
jge
dec
cmp
mov
pop
sbb
push
imul
mov
mov
movs
jg
dec
adc
inc
and
jp
push
mov
std
dec
adc
push
test
fwait
iret
arpl
clc
add
or
pop
jmp
iret
xchg
clc
push
mov
mov
ins
adc
pop
scas
int
out
dec
and
and
and
mul
jmp
rcl
int3
mov
and
push
cmp
loopne
jp
mov
test
fstp
sahf
repz
movs
loopne
shl
and
sbb
repz
push
mov
sub
dec
adc
pop
mov
movs
loopne
neg
dec
in
call
cwde
xlat
test
std
lahf
rcr
fdiv
shr
int3
xor
loop
loopne
ins
mov
add
es
dec
cmp
push
add
adc
scas
in
mov
ficomp
fidiv
std
mov
xchg
push
lods
loop
data16
scas
shl
pop
and
inc
mov
dec
or
mov
in
mov
add
xor
cmp
cli
arpl
push
mov
and
pop
xchg
sti
cdq
movs
loopne
repnz
sahf
pushf
push
and
cmp
rol
sbb
xor
sti
mov
xchg
retf
add
je
pop
cmp
xor
mov
sahf
mov
retf
push
push
mov
add
push
pop
inc
and
shl
scas
into
push
and
sbb
dec
add
pop
mov
sbb
sbb
push
or
imul
dec
sbb
and
dec
ret
or
push
add
div
out
push
sbb
dec
xchg
adc
jp
adc
cmp
sbb
pushf
fidivr
cmc
xchg
retf
dec
push
push
loope
or
test
pop
add
or
cmc
cmps
loope
mov
xor
xor
pop
push
or
sbb
sub
pop
out
mov
lods
leave
mov
and
sbb
adc
es
or
lds
xchg
int3
mov
xchg
sti
cdq
movs
add
xchg
rcl
add
rcl
pop
ss
adc
mov
js
xor
mov
cwde
mov
ret
mov
mov
ret
test
mov
cmp
iret
mov
mov
sahf
lods
cli
mov
or
cmp
clc
pop
lahf
(bad)
mov
bound
inc
and
shl
ja
pushf
retf
sahf
in
test
xchg
rol
push
adc
jae
pop
add
dec
xor
push
sbb
jo
ss
cmovo
out
sub
inc
dec
or
sbb
mov
arpl
adc
mov
nop
lods
xlat
jb
pop
in
mov
xlat
movs
ds
mov
sub
sub
call
and
int3
sbb
push
push
lahf
inc
in
sar
adc
clc
call
je
jne
shl
test
scas
aad
in
in
arpl
xchg
out
jbe
call
fld
xchg
xlat
xor
mov
mov
fsub
mov
push
cmp
std
in
fst
sub
mov
stos
jmp
xchg
icebp
mov
cmps
in
xchg
xchg
and
jnp
xchg
pop
adc
cmp
adc
push
push
xor
js
call
sub
jp
and
cdq
lock
(bad)
test
mov
fidiv
test
push
sbb
rcr
sub
imul
ss
xchg
push
fld
adc
cdq
rcr
pusha
outs
xor
pop
xor
ins
xor
icebp
mov
or
(bad)
add
imul
in
sti
mov
jne
pop
dec
or
mov
inc
lahf
shl
add
rcl
scas
fs
(bad)
mov
push
or
out
jle
jnp
mov
lods
into
sahf
xor
add
dec
mov
je
pop
xchg
fmul
mov
rcl
inc
mov
lahf
std
mov
dec
call
rcl
sub
mov
out
sbb
push
cmp
into
mov
ficom
pop
sub
in
push
sub
pushf
jbe
or
cmps
lds
cli
fwait
push
adc
cmp
dec
and
and
dec
ss
push
xlat
xchg
xor
pushf
test
mov
loop
popa
or
dec
mov
xchg
fdiv
scas
adc
dec
hlt
ins
sub
and
pop
mov
call
movs
dec
sub
inc
add
lods
ja
(bad)
xchg
fwait
jne
ins
mov
add
retf
pop
mov
mov
rcl
ds
mov
or
mov
cmps
in
test
sbb
in
mov
mov
and
ror
std
xchg
inc
mov
or
inc
or
lds
cmps
imul
iret
scas
aad
mov
addr16
sub
in
aam
xor
imul
add
hlt
mov
cld
and
jnp
dec
cmp
mov
je
jo
dec
and
mov
test
repnz
sub
pop
and
mov
sub
adc
mov
sbb
retf
mov
xchg
sbb
pop
sbb
xchg
jecxz
out
add
outs
stc
(bad)
int3
mov
and
push
pop
sbb
xlat
push
xchg
or
neg
fwait
lea
shl
jbe
enter
scas
loop
xchg
repz
xor
not
loop
xchg
push
mov
pop
(bad)
shl
cld
cld
ror
sub
ja
or
mov
pop
mov
nop
(bad)
cs
sahf
xchg
in
gs
adc
add
cmp
cmps
imul
fisubr
fcmovu
mov
sbb
mov
stos
xchg
cmp
(bad)
iret
fild
(bad)
jmp
test
xor
in
mov
inc
dec
das
sub
(bad)
xchg
xor
aam
mov
or
lock
and
call
sub
loope
repz
pop
xchg
cmc
stos
clc
loopne
sbb
dec
adc
pusha
dec
sub
ins
push
sbb
xor
mov
inc
and
imul
add
mov
mov
ins
push
pop
add
mov
pop
sbb
or
aaa
imul
sbb
inc
(bad)
cwde
mov
je
ins
cmps
jnp
dec
fnstenv
inc
adc
or
push
test
push
xor
call
(bad)
push
pop
inc
aam
int3
xor
pop
aas
in
mov
jbe
jbe
out
mov
xchg
(bad)
ficomp
stc
movs
loop
xchg
out
xchg
xor
in
outs
jns
and
loope
mov
adc
adc
(bad)
fdiv
and
jg
sbb
loope
ret
adc
or
or
imul
inc
sub
mov
lods
hlt
in
xlat
fld
jle
je
rcr
(bad)
iret
adc
sbb
pop
jns
mov
movs
into
sub
jmp
bound
inc
outs
pop
and
dec
subps
pop
popa
xchg
(bad)
fdivr
fld
data16
(bad)
out
scas
aad
movs
jmp
mov
inc
mov
je
add
daa
xor
pop
xor
mov
mov
mov
(bad)
rol
push
retf
pushf
dec
jge
push
sbb
enter
cmp
iret
mov
sahf
jl
and
add
rcl
jmp
idiv
xchg
fistp
adc
fisub
lods
sbb
out
fiadd
and
push
je
lock
sbb
mov
dec
retf
xchg
dec
jb
jp
(bad)
mov
bound
jne
inc
mov
jne
ins
lods
adc
lods
adc
clc
mov
jnp
int3
lods
shl
mov
mov
jmp
ja
repnz
sub
cmovl
push
js
iret
push
jbe
in
mov
xor
jecxz
mov
in
movs
call
ret
xchg
xchg
inc
add
inc
xor
xor
jmp
cmc
lahf
fisubr
not
mov
div
or
pushw
dec
or
add
jnp
jge
sub
inc
and
pop
sbb
(bad)
mov
fstp
pop
test
pop
inc
or
or
xor
sbb
push
jp
dec
xchg
std
mov
cmp
ins
mov
inc
and
iret
xchg
repz
jl
jmp
popa
pop
pop
jg
pop
adc
loop
(bad)
loop
fadd
push
and
retf
lds
inc
cmp
or
fistp
bound
cmp
xchg
lds
mov
xchg
or
(bad)
mov
jecxz
mov
imul
add
popa
mov
xchg
loopne
push
push
sbb
int3
mov
or
mov
xchg
inc
ja
add
mov
ret
dec
xor
add
lods
push
arpl
in
push
bound
jecxz
mov
daa
stos
out
mov
add
mov
in
inc
nop
repnz
out
(bad)
adc
stc
mov
sbb
push
inc
std
adc
ds
sub
enter
jmp
nop
and
pop
leave
or
pop
iret
adc
inc
loope
add
sbb
clc
mov
or
test
sar
leave
call
cld
xchg
aaa
cdq
std
sahf
push
jo
pop
xchg
cli
cmps
xlat
std
mov
mov
xor
push
inc
and
adc
aam
(bad)
mov
data16
pop
push
or
outs
sub
fucomip
test
mov
pusha
aaa
je
pop
xor
jns
xlat
fnsave
push
jg
sub
cmovg
or
pop
test
ja
and
dec
push
jmp
push
imul
mov
pop
sub
sbb
push
sbb
mov
out
test
das
(bad)
xchg
mov
adc
loope
cwde
or
and
daa
or
jbe
adc
enter
push
jns
or
adc
mov
mov
movs
and
and
scas
mov
xchg
pop
sbb
mov
imul
int
sub
or
repnz
les
rcl
ins
aaa
jb
movs
icebp
test
ret
xchg
xor
push
pop
xor
adc
(bad)
cmps
jecxz
imul
rcr
mov
push
cmp
push
cmp
xor
cmp
dec
ja
jbe
iret
mov
test
jp
mov
inc
es
push
sbb
shl
js
test
call
aad
lods
in
addr16
push
adc
int3
aam
lea
mov
cwde
jns
sub
or
popa
xlat
frstor
cmp
lock
in
inc
pop
xor
adc
lock
ins
scas
cmp
call
gs
xor
ror
je
cmp
icebp
imul
ins
dec
or
rep
in
gs
inc
mov
in
cmps
out
dec
dec
cmp
or
sbb
xchg
repz
in
addr16
push
cmps
sbb
iret
retf
xchg
and
call
out
ret
enter
addr16
test
jno
jmp
jp
cdq
outs
dec
xor
sbb
cmc
test
retf
retf
cmp
pop
mov
inc
or
lods
(bad)
mov
inc
adc
xchg
jmp
and
and
xchg
fistp
mov
and
cmp
mov
mov
dec
sub
dec
aaa
jae
push
adc
jb
cwde
cli
mov
xchg
aad
sbb
pusha
add
imul
or
jo
int3
out
div
das
idiv
lods
(bad)
xor
pop
iret
sbb
test
inc
test
and
sub
dec
imul
xor
adc
dec
sub
pop
pop
inc
mov
adc
into
movs
out
pop
movd
push
push
je
in
movs
sbb
mov
cmp
xchg
out
nop
(bad)
in
sti
mov
sahf
rol
push
jle
(bad)
retf
add
gs
inc
add
outs
xor
mov
jle
jae
sar
pop
mov
test
sub
rcr
dec
dec
daa
inc
stc
loope
mov
jg
or
push
ss
mov
scas
adc
out
sub
sbb
mov
(bad)
int3
inc
jle
(bad)
retf
into
pushf
jno
inc
add
add
sar
scas
in
xor
mov
inc
xchg
hlt
pushf
jb
dec
sub
mov
gs
mov
ret
loope
sahf
pusha
xchg
pop
pop
leave
jmp
(bad)
out
and
test
das
sbb
sbb
pop
pop
adc
fcomp
(bad)
pop
test
inc
xchg
in
nop
xor
imul
addr16
cmp
push
scas
lahf
push
dec
pop
adc
in
mov
xchg
test
or
sub
sub
xchg
mov
test
push
loope
mov
iret
scas
dec
dec
cmp
sbb
rcr
xchg
xlat
ret
aam
xchg
ds
inc
dec
xor
stos
or
mov
or
cli
lea
sahf
out
lods
add
dec
push
outs
xchg
cld
fidivr
mov
mov
pushf
add
jle
cmp
jns
or
cmp
xchg
cld
pop
data16
push
ret
add
loope
shr
std
xchg
mov
nop
shl
cmp
sar
adc
(bad)
mov
mov
retf
loope
scas
pop
ja
das
cmc
shl
push
xchg
subps
cmp
mov
mov
mov
frstor
mov
pop
jns
sub
pop
ja
and
mov
jle
ror
fs
jmp
jecxz
and
xor
jl
inc
add
adc
call
cmps
clc
stos
pop
and
aad
dec
cmp
mov
outs
and
push
or
cwde
shl
test
and
mov
ja
jb
push
adc
dec
mov
fadd
inc
cmp
xchg
pop
pop
stos
lock
mov
test
jae
jge
cmp
ret
push
inc
hlt
sub
and
cwd
xor
sti
aad
cwde
ds
mul
dec
pop
cmp
clc
lods
shr
shl
xchg
je
into
fst
js
sbb
jmp
cmovae
sbb
ret
or
outs
mov
inc
sub
cli
mov
add
sub
(bad)
in
out
dec
inc
push
and
movs
cld
mov
out
ret
mov
ss
jl
cmps
hlt
mov
or
fadd
imul
repnz
dec
push
inc
daa
stc
ficom
pop
mov
rcl
lods
in
mov
adc
and
jecxz
leave
adc
es
aad
std
ss
dec
sub
(bad)
mov
repz
xchg
inc
dec
cmp
cmp
mov
sub
jmp
cwde
int
retf
xor
movs
rcr
mov
addr16
int3
mov
cmp
and
or
ror
xlat
xchg
cmps
jmp
retf
mov
pop
xor
push
jbe
ja
push
or
rcl
scas
jg
jmp
cmp
out
or
add
cld
arpl
and
idiv
test
or
jne
test
(bad)
sub
call
lock
push
add
add
cld
mov
imul
push
adc
(bad)
out
inc
movq
aad
mov
add
adc
pop
data16
sbb
scas
loop
pop
or
sub
push
cmp
jmp
cmp
das
outs
xchg
stc
lahf
rcl
inc
cmp
jmp
enter
xor
shl
cmp
mov
cdq
fstp
push
adc
cdq
push
dec
mov
xor
jle
cmp
jecxz
out
inc
dec
inc
adc
pop
inc
dec
xor
or
xchg
push
cmp
mov
dec
cs
pop
es
test
imul
mov
inc
retf
mov
mov
inc
retf
popf
xor
ret
daa
movs
aas
pop
mov
data16
fsub
add
sahf
push
sub
aad
std
mov
push
add
cs
xlat
and
hlt
xchg
add
fcom
cmc
inc
sahf
cmp
jecxz
movs
mov
jmp
inc
add
ror
mov
cmp
sbb
push
scas
neg
dec
sub
iret
mov
stos
aas
inc
cmp
xor
mov
fld
fidivr
sbb
adc
sbb
add
(bad)
cli
mov
stos
dec
xor
loopne
sbb
leave
xchg
sbb
mov
retf
call
jae
pusha
cmp
mov
xchg
mov
(bad)
shl
inc
sub
and
dec
loope
std
xor
adc
popf
mov
mov
imul
je
pop
cmp
retf
test
jae
and
cmp
fdiv
mov
cs
mov
inc
imul
jmp
jo
xor
cwde
fnstenv
fadd
stos
jl
call
mov
push
push
hlt
add
loope
popf
sub
out
push
je
pop
inc
dec
sub
nop
ret
clc
leave
mov
faddp
iret
xchg
pop
jl
cmp
mov
fbstp
and
in
test
arpl
pop
fwait
adc
leave
mov
pushf
add
push
adc
cmp
mov
push
dec
add
sti
lods
out
lock
ror
jo
push
mov
lea
sub
aas
ins
or
add
fld1
lea
jp
or
sahf
fsub
cmps
jecxz
arpl
pop
or
cmp
scas
loope
jb
pop
jns
pop
popa
cmp
lock
adc
or
call
add
sbb
imul
les
(bad)
(bad)
mov
or
push
push
add
out
into
sub
loopne
ja
cmp
cmp
adc
iret
mov
add
test
mov
sub
mov
adc
dec
adc
lods
loopne
dec
inc
push
dec
mov
inc
add
fs
lods
out
nop
(bad)
add
ja
leave
movs
iret
add
add
pop
xor
sbb
push
(bad)
cdq
repz
aas
pop
nop
call
xlat
cmps
lahf
add
mov
out
jbe
push
xor
(bad)
cmc
mov
cmp
mul
(bad)
push
ins
and
sbb
cmp
mov
fisttp
jmp
fisub
imul
add
outs
sub
jle
cdq
out
lods
ror
cmc
lahf
rcl
aam
loopne
xchg
icebp
add
in
repnz
sahf
rcl
clc
out
mov
sbb
retf
push
mov
dec
test
or
hlt
cmovg
stc
ror
mov
fisttp
pop
sub
test
scas
les
leave
test
lods
inc
dec
push
outs
xchg
mov
sbb
iret
xchg
repz
xchg
std
nop
fimul
and
cli
icebp
ficomp
mov
jb
ret
xchg
movs
inc
push
adc
sub
cmps
pop
push
adc
jl
dec
cmp
adc
retf
mov
mov
dec
lods
dec
jp
out
sbb
push
sbb
xchg
idiv
daa
inc
cmps
push
ds
(bad)
lock
mov
rol
stc
test
addr16
push
sbb
sbb
and
call
dec
popf
icebp
test
pop
cmps
cmp
leave
inc
jno
jg
repnz
clc
push
pushf
or
push
dec
cmp
mov
xchg
ret
push
lahf
out
xchg
ss
and
loopne
lea
test
jae
or
push
(bad)
rcl
or
sti
repnz
lea
fistp
pop
stos
push
mov
cmc
lods
aad
fidivr
dec
imul
fmul
in
jb
jecxz
mov
inc
je
xor
test
add
pop
add
lahf
int3
idiv
sub
sub
fimul
ins
push
sbb
add
push
jae
cmp
push
sbb
rcl
out
inc
add
lahf
push
push
or
call
cs
or
scas
xor
aas
jp
or
pop
mov
xchg
dec
jo
jmp
mov
inc
mov
sbb
out
jle
retf
in
cmps
cdq
and
add
ficomp
fnsave
xor
loope
mov
addr16
push
ins
or
mov
lea
retf
mov
cmp
inc
ss
mov
pop
adc
sbb
xchg
shr
and
push
data16
or
mov
ins
sub
sub
fild
xor
add
sbb
xor
cli
cwde
and
add
cld
sbb
test
call
test
inc
pop
inc
inc
pop
sbb
pushf
les
outs
xchg
hlt
mov
into
shl
jnp
and
cmps
neg
pusha
and
push
add
ret
mov
pop
inc
mov
dec
add
sti
stc
test
or
fadd
jb
icebp
in
mov
dec
push
aas
pop
mov
mov
push
adc
xlat
ficomp
xchg
xchg
outs
jnp
pop
xchg
sbb
sbb
or
or
xor
cmc
lods
(bad)
sub
jns
xor
add
shl
dec
pop
aas
dec
mov
js
adc
arpl
or
ret
mov
in
sbb
jecxz
stos
mov
xchg
ror
mov
lahf
js
inc
add
cmps
retf
(bad)
push
dec
push
jl
add
repnz
mov
leave
scas
(bad)
mov
push
and
mov
mov
and
das
jns
pop
dec
sub
fistp
pop
lods
push
inc
xor
inc
and
sub
stos
jmp
jle
jo
cmp
shr
add
loopne
lods
sar
xchg
test
push
cmps
dec
cmp
test
adc
adc
pop
mov
or
push
adc
cmp
push
clc
nop
xchg
inc
cmp
loope
stc
mov
mov
mov
popf
rol
div
call
xchg
out
cli
mov
repz
cmps
jg
enter
ja
in
dec
jmp
mov
out
mov
pop
daa
cld
stc
test
jle
jo
clc
fnstenv
xchg
inc
add
test
fdivr
(bad)
mul
bound
mov
mov
pop
mov
lods
jmp
jp
cdq
rcl
rcr
or
cli
xchg
xor
sub
jmp
jp
jmp
(bad)
repz
dec
push
lods
in
add
mov
fisttp
push
loopne
aad
xchg
cmp
stos
mov
mov
sub
fild
es
int
xor
rcl
inc
and
pop
imul
mov
pusha
cmp
shl
fnstenv
jne
jecxz
mov
xor
imul
std
mov
loopne
xchg
sbb
pop
test
dec
inc
pop
psrad
aam
mov
rcr
jne
loope
cwde
not
jbe
or
xlat
xchg
mov
xchg
fbstp
pop
inc
jecxz
(bad)
loope
nop
or
mov
jp
das
dec
sti
sbb
(bad)
cmc
or
xor
dec
xchg
dec
mov
xor
or
or
mov
xlat
stc
sar
scas
pop
imul
sbb
mov
inc
ss
(bad)
sar
lds
xchg
mov
out
xchg
fistp
mov
cmps
dec
push
inc
and
and
jno
add
mov
mov
pop
xchg
retf
mov
lods
or
shl
pop
push
jl
xor
and
div
fisttp
test
jns
sub
jmp
inc
add
add
mov
inc
cmp
mov
retf
cwde
rcl
dec
cs
fdivp
test
mov
fadd
inc
std
cmp
mov
ror
mov
cmp
rcr
mov
lock
push
xchg
hlt
xchg
push
xchg
div
adc
add
adc
sub
ret
adc
and
in
push
fdivr
ret
dec
jmp
push
int
les
aas
(bad)
dec
out
xchg
sbb
push
daa
aad
icebp
xlat
shl
cmp
test
pusha
push
inc
or
jno
inc
inc
inc
in
mov
mov
jae
ror
mov
jbe
cld
mov
pushf
and
ror
rol
enter
loopne
adc
cld
ffree
sahf
sbb
retf
mov
mov
clc
popf
neg
enter
xchg
fnstcw
sbb
add
mov
out
xchg
into
ret
lds
sub
push
mov
push
or
or
(bad)
mov
cmp
out
adc
ins
inc
call
ret
(bad)
std
jge
lea
add
mov
lahf
out
leave
rcr
sbb
push
mov
mov
and
loop
repz
lahf
fild
sbb
pop
pop
js
test
mov
xor
aas
lods
test
mov
(bad)
inc
aas
adc
in
mov
pop
test
test
mov
outs
dec
lahf
mov
jecxz
retf
jl
mov
ins
inc
jno
jb
jae
cmps
add
jne
call
inc
dec
jae
mov
and
js
jns
mul
jns
and
adc
mov
iret
sbb
inc
cs
loope
sbb
jne
jg
push
push
dec
or
mov
bound
(bad)
test
add
push
outs
inc
jae
jl
jge
fnstcw
pusha
out
lahf
cld
cld
mov
mov
test
mov
aam
push
outs
dec
icebp
stos
clc
call
shl
mov
mov
jmp
stos
or
mov
jecxz
daa
test
cmp
add
push
jp
mov
or
mov
int3
clc
cwde
mul
int
cmp
je
inc
inc
inc
in
add
fld
mov
xor
dec
call
jne
std
mov
shr
pop
push
pop
and
and
sbb
and
(bad)
div
pop
mov
call
or
jge
js
sbb
jp
lods
or
js
imul
ret
retf
cmp
popf
xchg
scas
ficomp
fistp
int
rcr
scas
jmp
shl
int
daa
pop
or
cmps
stos
sti
fsubr
jo
mov
call
push
xor
es
xor
lods
into
test
cld
xchg
add
scas
out
(bad)
xchg
fst
enter
push
fist
cmp
repz
cld
ret
mov
mov
lds
mov
xor
cmp
inc
dec
adc
mov
add
std
scas
or
jns
jl
sbb
inc
jle
mov
stc
out
pushf
out
int3
in
pushf
retf
sub
imul
popa
add
dec
and
adc
jp
push
adc
popa
cs
or
jae
arpl
bound
dec
xchg
retf
pop
and
and
(bad)
mov
in
adc
(bad)
js
ins
(bad)
mov
cmp
mov
leave
call
xchg
repnz
xor
xchg
sub
retf
ret
dec
sub
shl
ja
jmp
xor
xchg
pop
cmp
movs
mov
fcomip
inc
adc
inc
or
adc
aad
sbb
sahf
neg
retf
inc
and
cmp
xchg
mov
mov
cld
mov
jmp
lods
iret
mov
test
cwde
fild
fimul
xchg
mov
gs
jne
ins
adc
je
test
inc
adc
or
shl
jb
rcl
rcl
push
ja
jo
jno
popf
sti
in
(bad)
loopne
and
push
xor
and
and
inc
adc
outs
push
push
pop
cwde
test
int3
cld
jne
(bad)
xor
cwde
fcmovu
call
pop
pop
inc
test
cmc
sbb
jbe
addr16
or
pop
inc
push
jge
test
icebp
mov
mov
call
int3
mov
mov
fcomp
ror
cli
mov
jmp
mov
icebp
mov
fidivr
loop
fidiv
xor
stc
xchg
rcl
iret
mov
mov
xchg
cmps
loopne
cli
jl
push
mov
nop
clc
xlat
lds
xchg
pop
dec
sub
dec
stc
(bad)
out
retf
mov
push
inc
dec
ja
inc
inc
inc
not
push
sti
movs
mul
inc
push
jge
test
leave
adc
cmp
add
push
push
dec
and
xchg
sbb
mov
mov
ss
jle
nop
cmc
stc
inc
cmp
mov
loop
repnz
fidiv
rcl
fnstenv
jmp
rol
cdq
fiadd
repz
mov
leave
mov
mov
inc
jle
mov
cmp
loop
adc
out
out
sbb
test
(bad)
(bad)
movs
aaa
cmp
or
jb
mov
in
xchg
stc
fucomi
mov
retf
stc
mov
fxch
sahf
(bad)
fxch
imul
push
cmp
dec
inc
test
cs
xlat
jp
call
jmp
push
jo
jp
ins
or
add
push
imul
add
int
sti
in
retf
mov
mov
jmp
div
repnz
mov
call
mov
out
ror
rol
retf
mov
mov
jmp
div
repnz
in
lds
inc
add
mov
jmp
mov
push
xor
arpl
nop
and
popa
inc
jge
mov
mov
pop
or
dec
sub
gs
pusha
xchg
test
mov
sub
addr16
inc
or
inc
inc
inc
jmp
cld
mov
pop
add
add
or
call
cs
in
xchg
int3
mov
mov
cmc
cmps
in
in
in
ret
mov
lods
ficomp
in
leave
mov
mov
mov
mov
cmc
cmps
in
in
in
ret
mov
lods
hlt
loope
and
aaa
cs
ins
in
fucompp
xchg
aad
add
pusha
pop
fwait
mov
(bad)
hlt
mov
ret
sub
dec
push
pop
cmp
mov
cmps
das
add
js
mov
mov
and
ret
rol
jle
test
push
and
inc
pop
pop
push
dec
jmp
and
mov
push
or
dec
call
inc
icebp
mov
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
into
(bad)
(bad)
cmps
in
cmc
xchg
fnstenv
xlat
xchg
not
ret
scas
in
lahf
mov
mov
xchg
hlt
mov
mov
in
and
fld
cmps
ficom
in
into
movs
cmp
jnp
outs
adc
dec
rol
clc
inc
adc
pop
push
aaa
stos
lods
fistp
dec
lock
pop
aad
sub
aaa
cmp
stos
xlat
mov
ds
jle
jnp
or
inc
inc
jmp
add
out
lods
fild
clc
xchg
ficomp
(bad)
mov
mov
xchg
jecxz
std
mov
mov
(bad)
cdq
lock
aam
aad
aam
repnz
out
lods
fild
clc
xchg
ficomp
(bad)
mov
mov
xchg
jecxz
std
mov
mov
(bad)
cdq
lock
aam
aad
aam
repnz
add
and
mov
sub
bound
pop
aaa
mov
je
jl
dec
dec
jb
and
push
out
add
mov
js
mov
ins
pop
push
sub
pop
cmp
enter
pop
fiadd
bound
dec
daa
push
add
inc
add
push
adc
jnp
push
adc
pusha
das
inc
or
jb
bound
arpl
jae
pop
sbb
jb
bound
dec
daa
push
add
inc
add
push
adc
jnp
push
adc
pusha
das
inc
or
jb
bound
arpl
jae
pop
sbb
jb
bound
dec
daa
push
add
inc
add
push
adc
jnp
push
xor
jnp
shr
lea
outs
in
imul
les
jae
inc
inc
jp
stos
or
inc
pop
cmp
mov
sahf
aaa
sub
mov
or
push
ins
aas
jl
jge
jl
pop
sub
inc
add
das
ins
ds
push
cmp
outs
or
pop
sbb
push
es
dec
or
pop
pop
push
push
ins
aas
jl
jge
jl
pop
sub
inc
add
cs
mov
div
xor
push
or
jp
dec
cmp
sar
pop
adc
dec
push
inc
sub
inc
xor
sbb
push
nop
repz
std
popa
and
sbb
test
mov
sbb
ficomp
mov
nop
ret
add
daa
pusha
sub
jbe
sbb
sub
xor
or
sahf
int
ins
cmovns
inc
sub
(bad)
mov
test
sahf
int3
push
ins
and
inc
push
jl
ins
(bad)
sub
cmp
push
adc
aas
jl
ins
cmovo
and
dec
or
inc
sub
inc
ss
pop
sbb
dec
pop
inc
push
jl
ins
(bad)
sub
cmp
push
adc
aas
jl
ins
cmovo
and
dec
or
inc
sub
inc
ss
pop
sbb
dec
pop
inc
push
jl
ins
(bad)
sub
cmp
push
xchg
out
cld
scas
in
mov
sub
jle
dec
(bad)
mov
pop
test
dec
cmp
jno
push
pop
ss
pusha
add
xchg
lock
mov
mov
rol
jae
inc
cmp
jle
push
ds
or
push
dec
pop
pop
cmp
sbb
shl
loope
xchg
dec
push
or
mov
jmp
repnz
lock
test
test
mov
cmp
push
add
scas
loopne
mov
cmp
push
mov
sbb
jmp
jno
call
dec
enter
(bad)
and
dec
stos
xchg
xchg
inc
(bad)
pop
cmp
xor
mov
jbe
outs
test
aam
xchg
dec
call
adc
ds
sbb
xor
sub
ds
add
into
xor
push
mov
and
jo
xor
lahf
xchg
mov
mov
lock
sub
push
mov
test
cmps
jo
add
scas
mov
jp
or
jmp
cwde
dec
adc
push
or
pop
cmp
push
mov
into
push
stc
jp
arpl
push
stos
fwait
jnp
outs
cld
or
das
push
loope
jecxz
std
xor
ret
mov
jbe
xchg
inc
mov
mov
scas
mov
push
aad
adc
or
inc
movs
fwait
(bad)
into
push
mov
dec
mov
or
sub
adc
add
xor
pop
mov
inc
out
js
adc
call
test
sbb
add
mov
add
mov
mov
std
pop
xor
sub
inc
adc
jle
pop
sbb
jae
push
xor
dec
and
pop
cmp
xor
inc
xor
push
shl
add
(bad)
aas
sbb
sbb
push
daa
push
or
xor
clc
jnp
pop
int3
cmp
test
cmps
popf
push
mov
push
iret
cmp
pop
mov
data16
out
jp
pop
int
ror
pop
enter
popa
or
in
sbb
push
cmps
rcl
test
repz
cmps
jmp
jae
pop
fild
or
scas
popa
sub
sbb
pop
in
lds
dec
mov
jne
jbe
popa
mov
add
sub
xor
jmp
out
fisttp
fsub
fadd
push
mov
js
ins
not
fwait
(bad)
xchg
not
xchg
(bad)
dec
stos
inc
sub
xchg
mov
loopne
lock
icebp
mov
mov
mov
lds
sub
scas
jmp
lds
push
xor
mov
lods
out
pop
jns
js
jbe
inc
call
nop
ret
scas
cmps
jmp
sub
leave
mov
test
lahf
(bad)
mov
test
sahf
int3
mov
mov
les
sbb
inc
xor
dec
sub
je
jge
push
adc
imul
or
adc
dec
push
pop
daa
sahf
out
neg
xchg
div
push
inc
pop
sahf
imul
mov
fs
and
(bad)
jg
call
sti
mov
imul
add
in
enter
mov
pop
fnstcw
sbb
jnp
dec
shl
push
aad
cmp
imul
(bad)
cmp
lods
mov
and
xor
push
(bad)
mov
mov
daa
sub
fsubr
inc
retf
and
sbb
jb
fwait
js
pop
and
daa
sahf
aas
(bad)
cs
mov
push
xor
and
movs
(bad)
(bad)
neg
call
xchg
rcr
cmc
mov
fst
dec
enter
xor
push
fs
and
inc
or
dec
ins
imul
xor
pop
enter
and
aad
mov
retf
gs
push
and
inc
lds
xchg
retf
inc
ret
outs
movhps
adc
xchg
ss
xor
stc
mov
dec
outs
imul
cmps
scas
mov
mov
lods
test
xor
cmps
mov
cs
jge
xor
das
data16
pop
add
ins
ret
(bad)
adc
jg
adc
(bad)
mov
ficom
aam
rcl
cmp
pop
jmp
mov
push
sbb
cmp
ds
cmp
cmp
js
jg
and
sbb
ds
or
jge
dec
(bad)
push
dec
cmovne
pop
push
jno
imul
mov
(bad)
arpl
sub
jb
push
xor
inc
push
sub
push
add
inc
add
or
push
or
dec
adc
jae
inc
daa
bound
pushf
stc
mov
jb
jae
adc
and
mov
dec
in
sub
pop
aaa
imul
or
addr16
and
aas
ins
das
dec
add
data16
or
js
jp
scas
xor
lock
in
add
sub
jo
xchg
xor
and
cmp
dec
or
imul
inc
sbb
adc
inc
add
imul
and
inc
fsubr
sahf
test
push
adc
or
jp
(bad)
into
mov
xchg
xchg
ror
rol
retf
mov
mov
dec
and
pop
mov
data16
mov
aam
in
fdivr
(bad)
mov
(bad)
xchg
nop
add
mov
int3
mov
xchg
fadd
lds
shl
inc
push
test
mov
mov
jmp
sbb
jae
mov
mov
mov
mov
(bad)
movs
jmp
cmps
(bad)
rol
out
cld
test
(bad)
movs
in
ret
adc
repnz
(bad)
jecxz
retf
mov
xchg
mov
int3
fmul
leave
sub
fadd
(bad)
std
test
xor
and
fdiv
outs
pop
push
pop
xor
les
push
iret
dec
sub
or
inc
in
pop
fild
rcl
cdq
ret
mov
div
repz
int3
sbb
movs
loop
(bad)
sbb
jg
dec
add
dec
aas
jbe
inc
push
inc
pop
aas
jns
je
push
xor
pop
adc
ja
dec
sbb
cmp
sbb
jns
dec
pop
fs
push
or
sbb
push
push
jl
mov
rol
pop
inc
cdq
std
mov
leave
stos
hlt
popf
rcl
pop
cmp
ret
inc
sbb
cmp
jb
xchg
fdiv
repz
mov
or
(bad)
xchg
enter
rcl
lds
jmp
jecxz
xchg
(bad)
push
addr16
pop
ja
push
adc
push
sahf
mov
cdq
in
movs
imul
int3
cmp
mov
fidiv
iret
mov
loopne
jmp
hlt
cmp
lods
call
test
xchg
adc
arpl
jne
jne
jl
push
adc
sbb
adc
inc
cmp
(bad)
call
mov
(bad)
iret
(bad)
out
in
mov
xlat
ror
cli
mov
pop
xor
inc
pop
or
sub
and
out
xchg
rcl
jg
dec
cmp
inc
adc
or
cmp
ins
push
push
pop
xor
adc
js
pushf
stc
xchg
lock
rcr
int3
mov
sub
mov
test
cmps
loop
hlt
or
sbb
pop
push
dec
pop
es
xor
inc
adc
or
fld
pop
dec
pop
sub
ss
or
adc
imul
or
aaa
aas
push
or
dec
stc
outs
das
cmp
and
xlat
mov
jnp
sbb
sub
movs
movs
mov
(bad)
daa
or
inc
fnstsw
scas
mov
outs
sub
add
jb
imul
adc
sti
add
inc
in
lahf
data16
dec
push
cmp
and
push
fnstenv
movs
adc
inc
aas
outs
add
and
sbb
cmp
hlt
xor
pop
fadd
imul
and
dec
stc
mov
pop
(bad)
jle
and
adc
mov
cli
inc
aaa
sub
pop
repnz
dec
jmp
xor
push
out
je
cmps
mov
bnd
add
sub
dec
into
movs
xchg
xchg
mov
jl
push
adc
or
js
pop
fild
rol
out
fmul
jbe
movs
push
arpl
pop
and
jl
jge
mov
xchg
mov
je
ja
mov
push
pop
or
sub
inc
les
xchg
mov
daa
and
setns
arpl
add
or
enter
test
inc
ret
or
loope
movs
mov
jl
adc
ins
in
or
aam
shr
out
mov
add
xchg
sar
push
xlat
xchg
shr
add
jne
pop
cmps
hlt
je
pop
xor
imul
retf
jns
arpl
push
sub
jne
les
push
iret
dec
sub
or
inc
in
pop
fild
pop
(bad)
push
xor
imul
movs
test
and
xor
dec
rcr
mov
cmps
adc
lock
or
repnz
push
or
push
jnp
bound
cdq
jecxz
stos
stos
stos
scas
ret
push
sbb
ds
ins
int
stos
mov
(bad)
out
xchg
mov
(bad)
imul
loop
cmp
into
ror
jmp
sbb
push
xor
sbb
cmp
sbb
dec
push
jg
aaa
addr16
aaa
dec
or
jnp
inc
or
sbb
or
jns
pushf
xchg
nop
mov
jl
pop
xor
jo
or
add
adc
sub
test
call
cmp
call
outs
retf
ds
or
push
push
jns
jno
push
push
push
pop
outs
pop
sub
pop
cmp
jp
imul
and
push
or
popa
pop
xor
push
cmc
lods
in
mov
mov
aad
cdq
cdq
mov
or
and
dec
in
push
vphsubbw
(bad)
add
cld
and
adc
arpl
mov
xchg
xchg
je
and
cwde
call
dec
pop
push
out
pop
fstp
inc
shr
out
mov
stc
das
jecxz
cmp
inc
scas
imul
out
and
cld
push
xor
mov
adc
xor
adc
pop
mov
loop
(bad)
in
inc
mov
mov
push
frstor
into
dec
mov
dec
sub
mov
jae
pop
mov
les
mul
add
ss
jl
sub
or
pop
xchg
jnp
mov
je
xchg
xchg
(bad)
jo
retw
inc
xchg
retf
add
add
int
in
pop
iret
add
iret
dec
mov
cmps
bound
sahf
jne
pushf
ins
rcr
jbe
and
xor
sbb
clc
inc
(bad)
push
mov
xchg
add
xchg
shl
and
inc
jmp
fnstcw
cmp
push
cld
jge
js
mov
mov
outs
sub
sub
inc
mov
mov
mov
jmp
mov
or
fwait
mov
inc
mov
leave
cs
cld
sub
pop
call
inc
(bad)
or
cmc
and
xor
ins
iret
push
rol
mov
adc
sub
cmp
in
hlt
push
xor
in
retf
sub
ret
push
(bad)
push
mov
out
jg
sub
lds
and
test
movs
mov
int
int
mov
enter
and
jmp
pop
adc
sub
in
dec
shr
into
and
hlt
outs
retf
cmp
jecxz
retf
aas
(bad)
add
idiv
(bad)
cs
sbb
add
pop
mov
popf
fs
jp
aas
add
es
(bad)
push
add
push
int3
sub
push
ror
out
ret
mov
inc
fdivr
push
or
sub
sub
or
sbb
daa
or
inc
ror
jg
jle
and
xchg
mov
scas
imul
std
push
cmps
mov
stos
nop
test
fiadd
stos
enter
out
push
xchg
pop
sbb
sbb
add
imul
jle
sub
or
das
lds
iret
dec
test
jle
jb
mov
pop
sbb
jle
sbb
jae
and
inc
in
lods
mov
fld
xor
inc
mov
cmp
test
xchg
popf
jge
jno
outs
mul
jmp
ins
jecxz
cmps
outs
int3
dec
retf
xor
sbb
es
inc
sbb
dec
mov
outs
repz
std
pop
les
ror
(bad)
jnp
jne
jbe
pushf
mov
pop
mov
fisub
xor
or
push
mov
jnp
jg
repnz
adc
cld
add
adc
push
adc
add
dec
test
out
mov
pmaxsw
imul
pop
cmp
pop
leave
sub
push
std
pop
cmps
xchg
dec
push
add
sub
adc
jns
jg
sub
cmp
ds
dec
mov
mov
shl
adc
or
pop
lea
sub
test
mov
arpl
jo
inc
mov
inc
xchg
jge
cmp
es
pop
mov
or
pop
pop
int3
pop
jmp
pop
test
xor
lock
and
into
pop
mov
shl
std
aas
jmp
jne
push
mov
inc
test
jne
xchg
dec
enter
xor
mov
mov
mov
cs
push
mov
mov
and
push
add
out
ficomp
mov
call
retf
push
ds
xor
mov
retf
xor
sub
sub
add
push
mov
mov
test
and
into
sub
mov
sbb
sbb
mov
ins
stos
call
movs
mov
xor
out
pop
sar
mov
xor
sub
xor
xchg
xchg
jo
jns
popf
jo
enter
cld
(bad)
(bad)
retf
daa
or
not
jno
aas
stc
push
shl
xor
jns
pop
xor
mov
lahf
rol
les
fs
fst
or
pop
fld
aam
iret
xor
push
mov
scas
jne
lea
cmp
and
cs
xchg
jne
xor
push
stos
xchg
aad
fdiv
push
in
xor
add
push
mov
xchg
jle
and
aam
mov
test
or
push
fisubr
xor
pop
fld
xor
icebp
push
cmc
pushf
xchg
xchg
js
inc
scas
imul
daa
adc
add
in
push
mov
mov
cmc
ds
rol
lods
or
(bad)
lahf
dec
cmp
pusha
int3
aaa
ret
aas
in
lock
push
(bad)
push
shl
sub
cmp
inc
aam
cmps
mov
push
mov
aad
shr
aad
adc
xor
jbe
inc
mov
mov
mov
inc
enter
jne
call
sbb
push
xchg
cdq
inc
ret
cli
and
cmp
push
sub
stc
jl
pop
sub
test
mov
call
jne
add
and
in
jne
ins
frstor
push
and
or
push
mov
mov
mov
mov
add
xchg
arpl
aaa
sbb
movs
and
xor
pop
test
aaa
add
lea
test
(bad)
int
add
aas
or
dec
rol
loopne
mov
jp
in
ins
fild
or
dec
mov
stos
jne
xor
add
sub
loop
mov
retf
not
push
mov
fnstcw
in
(bad)
fidivr
jecxz
(bad)
cmp
pop
das
add
add
cmp
and
sbb
dec
stos
xchg
xchg
pusha
aam
out
cmp
cmp
pop
fidivr
push
loope
iret
sub
cmps
add
shl
stc
pop
mov
inc
and
and
test
push
xchg
retf
and
mov
add
nop
mov
mov
mov
aaa
adc
pop
scas
xchg
xlat
add
and
inc
cmps
xchg
inc
mov
lods
dec
mov
jecxz
fnstsw
iret
and
mov
jmp
push
icebp
cmp
sbb
push
cmc
cmp
adc
rcl
repz
cmp
enter
push
xchg
jg
mov
xor
pop
sbb
shl
xor
sahf
mov
add
dec
repz
jb
jbe
sbb
sbb
pop
movs
mov
fld
icebp
and
inc
mov
xlat
mov
fimul
cli
(bad)
not
aaa
loope
add
sub
pop
movs
data16
cmps
lods
mov
jae
test
enter
call
call
in
popf
inc
mov
xchg
jnp
ins
shl
out
pop
test
sub
jmp
cwde
jae
push
sbb
push
mov
popf
inc
fmul
lds
rcl
jno
gs
jmp
sbb
inc
(bad)
push
add
cs
cdq
jns
sahf
xchg
bound
push
jmp
adc
das
or
push
int
add
stc
sub
adc
push
xchg
inc
mov
sahf
les
pushf
sahf
mov
pushf
imul
fisubr
dec
cmps
sahf
cwde
push
outs
rol
out
jmp
ins
fsubr
sbb
jb
pushf
fwait
enter
cmc
inc
xchg
cmp
cmp
push
adc
lock
js
arpl
mov
jl
xor
(bad)
aaa
or
jmp
inc
mov
mov
inc
test
sub
xor
dec
mov
and
sub
xchg
bound
retf
ss
xor
jecxz
sti
push
mov
test
mov
test
(bad)
loop
in
scas
pushf
fwait
inc
cmps
xchg
xchg
jle
nop
outs
mov
out
test
fcomp
dec
test
ins
mov
ds
inc
fistp
add
and
inc
ret
sub
pop
sub
xchg
inc
fild
sbb
cwde
cdq
inc
ret
sti
xor
ja
push
lods
jbe
or
pop
adc
daa
std
and
pushf
dec
test
add
stc
sub
or
xlat
ds
jo
arpl
push
or
mul
pop
stos
xchg
jl
pop
iret
add
dec
lods
inc
sub
iret
dec
ret
out
pop
mov
cmp
add
and
(bad)
cwde
jo
in
mov
xchg
jo
xor
or
pop
mov
xchg
jl
ins
shl
sbb
adc
imul
std
sub
fbstp
jmp
movs
cwde
fist
mov
lahf
test
outs
sub
dec
aad
cli
dec
shl
add
pop
mov
and
mov
jge
imul
jmp
lock
sbb
scas
jg
mov
lahf
in
jg
pop
or
mov
mov
xor
adc
dec
mov
jo
or
xor
cmp
addr16
cmp
daa
cmp
sub
add
sub
pop
fnsave
(bad)
add
jno
pop
(bad)
jno
sub
cmp
inc
aam
fs
aaa
or
and
push
mov
mov
mov
repnz
icebp
pusha
inc
cmp
jmp
outs
mov
repz
cmp
outs
aam
lds
les
daa
adc
sbb
not
sbb
jno
gs
jo
sahf
fsubr
pop
call
pop
or
dec
xchg
arpl
pop
xchg
xchg
mov
sub
aaa
add
cmp
jae
cs
cmp
push
mov
in
cs
dec
into
je
xchg
int
mov
outs
ficomp
arpl
jl
xchg
inc
cmps
inc
mov
retf
adc
pop
mov
repz
cmp
pop
mov
int3
cmp
dec
mov
stos
(bad)
sub
adc
add
push
mov
adc
pop
mov
enter
inc
(bad)
outs
fnstenv
sbb
xchg
pop
test
sub
push
scas
mov
fld
pop
stos
(bad)
fst
sub
dec
test
imul
aam
mov
xor
ss
push
or
push
fbld
and
dec
retf
ss
pop
xchg
popf
inc
aam
outs
aad
push
aaa
loopne
not
pop
in
cs
jge
jne
xchg
lea
inc
scas
nop
fs
xor
pop
neg
jp
dec
aad
sbb
aas
sbb
push
fstp
and
or
push
mov
sar
out
and
pop
and
or
push
retf
xor
inc
fisttp
test
test
cmp
push
mov
cmps
xchg
jle
xlat
inc
mov
sub
mov
outs
mov
cmp
into
aaa
sbb
adc
and
scas
xchg
jno
fwait
mov
test
jmp
pop
cmps
mov
dec
mov
rcr
cmp
or
lsl
pop
mov
cmps
test
in
cmp
out
aaa
adc
(bad)
sub
sbb
sub
pop
or
aas
loope
jmp
pushf
mov
pop
xor
(bad)
sub
cmps
xchg
mov
cmp
pop
movs
push
pop
fist
mov
pop
fcomp
push
dec
stos
mov
adc
stc
sub
pop
push
in
cld
sub
push
sbb
xor
mov
dec
cdq
ja
(bad)
cmp
dec
fistp
(bad)
and
or
cmp
(bad)
dec
add
push
cmp
jge
pop
mov
pushf
jo
fwait
mov
adc
dec
mov
xchg
je
and
pop
sbb
xor
and
add
in
pop
mov
or
jns
inc
mov
and
pop
repnz
dec
xchg
xchg
inc
and
sub
repz
jp
addr16
icebp
add
push
mov
scas
fdiv
sbb
mov
fsub
or
ds
dec
mov
jb
xchg
jp
mov
pop
in
jae
addr16
jle
pusha
repnz
sbb
mov
scas
lahf
ja
jne
movs
mov
fisubr
daa
out
test
and
in
or
sub
dec
xchg
sti
pop
mov
push
or
aas
sbb
and
das
sbb
aam
mov
mov
aad
test
inc
mov
mov
xchg
push
stos
xchg
jp
push
int3
cmp
pslld
jne
mov
movs
lea
jbe
aad
movs
jbe
or
mov
push
clc
and
mov
in
xor
inc
mov
stos
jns
or
push
stos
test
fisubr
sbb
and
out
sbb
sub
sbb
dec
mov
cmp
imul
lea
retf
push
stos
push
fisttp
ins
test
mov
and
xor
push
dec
sbb
cmp
dec
xchg
inc
rol
adc
adc
add
pop
mov
jne
push
test
xor
cmp
int
movs
call
adc
push
test
and
sub
or
das
adc
mov
pop
sbb
or
add
ss
cmp
(bad)
push
xor
in
hlt
and
enter
add
add
cmp
mov
jp
ret
jnp
cmp
sbb
and
pop
cmp
add
jbe
sub
and
cmp
loopne
add
pop
(bad)
push
leave
mov
shl
leave
cmp
retf
and
jge
sub
push
les
ret
aaa
sbb
pop
mov
or
inc
int
(bad)
cmp
shl
in
movs
jb
pop
(bad)
mov
jnp
mov
ds
and
and
add
push
loopne
push
adc
or
jnp
popf
dec
sub
cdq
js
inc
(bad)
xor
out
xor
dec
adc
sub
pop
xlat
cmp
cmps
fcom
popf
jle
or
lock
xor
dec
test
jbe
xor
gs
shl
push
test
push
mov
xchg
mov
push
push
or
std
sub
and
inc
lods
xchg
nop
push
push
mov
mov
mov
and
and
fadd
call
pop
ss
push
(bad)
daa
or
or
dec
shr
in
inc
mov
jp
sub
std
dec
test
ret
test
popa
test
sub
sti
inc
lds
mul
adc
push
scas
mov
and
sub
jmp
add
sbb
adc
pop
movs
cwde
inc
jmp
in
mov
nop
inc
fbstp
in
sub
cli
dec
mov
xor
or
mov
pop
xchg
loop
sbb
mov
xlat
or
xor
js
mov
or
ret
jg
out
adc
adc
push
mov
jle
inc
test
cmps
nop
jb
or
nop
cmp
adc
les
jecxz
nop
je
xor
sub
pusha
mov
add
add
pop
int3
xor
push
mov
jo
test
jecxz
sbb
push
sbb
jecxz
shr
pop
test
aad
ret
hlt
push
mov
lods
adc
jnp
xor
push
xchg
js
bswap
xor
add
cwde
mov
jnp
pop
mov
mov
shl
sbb
xor
sbb
cmp
jg
aaa
adc
ret
mov
cmps
outs
mov
inc
fistp
je
jg
cmp
push
(bad)
sub
push
test
push
cld
cmps
xchg
inc
int
mov
ror
mov
pop
mov
mov
mov
fwait
pushf
mov
movs
(bad)
push
cmc
and
or
push
pop
jmp
call
sub
lock
mov
lods
mov
pop
sti
pop
cmps
xchg
inc
sahf
xchg
jb
jno
push
sar
push
retf
add
shl
imul
adc
dec
mov
std
dec
lods
jp
xor
clc
and
loope
xchg
(bad)
xor
xor
jo
xchg
inc
mov
stc
pop
mov
imul
aaa
lock
mov
jno
outs
mov
lds
ins
rcl
(bad)
cwde
inc
cmps
jle
cdq
mov
fld
dec
ror
std
jb
dec
stos
imul
pusha
mov
xchg
cdq
inc
scas
xchg
xchg
jno
jnp
jo
cmp
cmp
das
into
lea
ror
or
jno
cmp
es
sub
cld
xor
sahf
dec
mov
fld
aam
out
dec
fisub
push
ret
push
stos
dec
mov
add
ss
call
pop
lods
ins
ficomp
inc
fmul
repnz
mov
(bad)
sbb
adc
xor
and
sbb
and
daa
push
loope
(bad)
mov
(bad)
pop
icebp
pop
mov
and
mov
ss
pop
in
add
push
mov
(bad)
fcomp
pusha
sti
add
pop
test
dec
fdivr
add
jg
push
pop
xlat
pop
mov
(bad)
push
test
inc
test
and
clc
cmp
sub
cmps
test
mov
cs
add
mov
add
mov
inc
(bad)
ss
sub
sub
adc
iret
push
loopne
jp
fs
push
add
inc
rcl
ins
ret
jl
inc
mov
les
repnz
mov
cwde
arpl
mov
fisttp
inc
mov
iret
push
mov
sub
dec
test
push
ror
repz
mov
ror
popa
stos
inc
stos
mov
jae
xor
dec
movs
std
sub
pop
xchg
and
pop
test
fld
cld
add
bound
cmp
aaa
out
add
jnp
out
rcl
imul
imul
fisttp
dec
mov
mov
arpl
adc
aas
int
jmp
les
mov
sbb
mov
or
in
dec
test
imul
repz
(bad)
rol
mov
xchg
xchg
sar
call
loopne
lock
mov
mov
scas
jns
push
lds
mov
inc
cmp
inc
mov
fcomp
mov
dec
mov
in
mov
loop
fidivr
icebp
pop
mov
imul
bound
xchg
popa
mov
shl
push
div
add
hlt
pop
test
push
clc
dec
fisttp
mov
cmp
mov
gs
icebp
dec
or
int3
cmp
dec
shl
adc
cmp
icebp
pop
mov
or
cmp
out
push
mov
dec
mov
mov
idiv
loope
sar
and
leave
pop
mov
repnz
idiv
xchg
inc
mov
lods
mov
sub
mov
xor
lds
cmc
pop
movs
std
inc
xchg
aaa
ret
cmp
push
mov
in
jge
je
gs
sub
add
xor
aas
jmp
fbld
sbb
cdq
xchg
add
retf
(bad)
pop
test
fild
int3
push
ins
mov
std
sub
add
push
mov
mov
xchg
or
cs
loopne
xchg
jno
ins
fdivr
sbb
push
fiadd
repz
push
movs
and
and
sbb
enter
jmp
inc
mov
mov
xchg
pushf
jo
sub
pop
cmps
mov
lods
dec
mov
push
push
retf
pop
pop
retf
cmp
push
mov
push
(bad)
daa
adc
and
push
xlat
adc
cld
pop
mov
int
mov
lds
push
ret
push
mov
ret
jb
sub
or
cmp
retf
or
jns
mov
fsubr
sbb
sub
add
pop
lds
mov
repz
retf
sbb
push
mov
lods
fstp
fstp
test
ret
das
sbb
clc
sub
mov
push
mov
rcr
mov
rcl
cld
pop
fdiv
iret
pop
add
mov
xchg
jno
pushf
dec
test
aas
repz
adc
and
hlt
and
lds
or
pop
mov
xor
hlt
xchg
mov
aaa
out
push
retf
sbb
pop
scas
mov
adc
test
sub
test
jae
arpl
dec
xchg
cmp
or
add
enter
int
add
mov
dec
or
into
push
test
push
leave
add
and
imul
nop
mov
pop
sbb
jge
xor
add
push
or
out
add
push
stos
dec
push
or
jmp
add
jmp
and
and
sbb
xchg
xchg
(bad)
cmp
call
push
leave
push
mov
mov
fidivr
stc
xor
and
and
lahf
cld
ja
xchg
inc
or
xchg
inc
cmps
inc
mov
jge
add
xchg
push
add
clc
ret
mov
or
movs
out
mov
xchg
ror
push
fs
cs
sbb
jmp
sub
in
mov
mov
popa
sbb
fcom
or
aam
fidivr
mov
push
not
int3
pushf
pop
pop
cmp
test
jg
sbb
rep
scas
push
pop
cmp
ficomp
mov
push
rcl
stos
out
ins
jb
or
scas
push
inc
sbb
rol
sbb
shl
dec
into
push
mov
ins
and
xchg
xor
jo
jmp
or
lds
sbb
dec
pop
push
add
fld
dec
inc
dec
sub
inc
movs
out
lahf
hlt
mov
dec
push
adc
stc
aam
mov
mov
jnp
and
les
and
(bad)
cmp
enter
and
mov
retf
ss
cmc
xchg
and
xlat
cmps
je
jl
(bad)
fidivr
fmul
jl
push
test
movs
out
or
push
or
cmps
sbb
(bad)
mov
sub
add
call
lahf
aam
ja
or
pop
push
mov
adc
xor
xchg
lods
push
pop
push
inc
mov
inc
push
jg
xor
jecxz
stos
stc
or
adc
enter
add
add
mov
scas
in
mov
daa
dec
adc
mov
cmovg
mov
inc
add
sti
mov
es
fst
mov
aas
and
pop
pop
les
enter
cwde
ficom
pop
xor
jge
dec
stos
push
sub
cmp
shl
rcr
lods
mov
ret
js
call
int3
mov
mov
mov
out
(bad)
xchg
jmp
mov
hlt
xchg
xchg
clc
mov
jmp
aad
call
fisub
add
add
cmps
(bad)
lahf
into
(bad)
out
(bad)
xchg
sbb
jg
dec
or
pop
aas
jae
push
or
jl
push
xor
push
cdq
ror
leave
call
shl
lods
sbb
jle
sub
adc
push
ja
push
sbb
jae
jb
jb
dec
cmp
sub
pop
sbb
xor
push
add
jb
jne
je
pop
das
imul
or
fs
add
ins
cs
and
ins
add
popa
adc
ja
push
sbb
sub
dec
push
dec
add
dec
add
outs
aas
jl
push
cmp
outs
or
sbb
push
pop
push
push
cmp
popw
inc
add
or
dec
add
es
or
dec
push
xor
loop
gs
out
lods
retf
add
xchg
into
mov
daa
loopne
inc
pop
in
push
push
retf
out
mov
push
mov
mov
push
adc
sbb
mov
inc
adc
xor
cld
mov
sub
sub
(bad)
mov
sub
sub
test
lods
mov
inc
daa
sbb
push
push
xor
rcr
ds
adc
(bad)
mov
nop
bound
xchg
js
rcr
cli
aaa
mov
aaa
ja
rol
add
fadd
xor
mov
cmps
jle
and
fidivr
test
aaa
xchg
mov
inc
add
cmp
iret
cmps
call
or
sub
adc
aam
into
and
gs
jp
test
(bad)
pop
jge
push
push
ins
aaa
seto
lahf
fs
or
mov
mov
rol
sbb
enter
add
(bad)
in
lods
scas
jnp
and
xor
idiv
scas
mov
shl
and
repz
cmps
jnp
adc
mov
pop
bound
xchg
jge
adc
lock
xchg
sub
add
or
ret
test
mov
jb
push
adc
fsub
add
retf
jmp
sbb
push
inc
xor
iret
ret
inc
dec
sbb
inc
inc
pop
shl
lods
mov
jle
push
sbb
fcomp
push
jle
sbb
data16
repnz
scas
add
mov
test
pop
cwde
sbb
mov
shl
test
lods
mov
pushf
adc
cmc
lods
loop
xchg
add
sub
fldcw
(bad)
mov
sub
adc
(bad)
sar
jno
das
inc
test
sahf
in
sub
sbb
mov
pushf
jns
push
dec
mov
mov
mov
popa
inc
xor
daa
jmp
jns
cmps
sbb
cmps
out
nop
(bad)
or
cmp
out
mov
dec
mov
fs
cmps
or
stc
cld
mov
push
inc
cmp
sbb
(bad)
aam
ret
stc
xchg
xchg
out
ficom
mov
mov
lods
ds
shr
daa
ror
fisubr
jmp
je
ds
xchg
adc
push
stc
mov
add
add
and
stos
jmp
inc
and
(bad)
mov
inc
adc
fistp
in
lods
out
inc
fwait
add
loope
js
cmps
and
pop
retf
test
or
pop
pop
mov
jge
and
ror
(bad)
xchg
mov
inc
sbb
jmp
cdq
clc
mov
in
lock
xchg
retf
mov
movs
in
xchg
(bad)
leave
lods
icebp
mov
lods
jmp
xchg
aam
test
test
add
sbb
addr16
add
inc
sub
or
jae
dec
cmp
js
pusha
add
and
imul
popa
xor
pop
sub
push
ins
add
dec
and
inc
xor
push
dec
pop
popa
and
push
inc
es
add
pop
sub
pop
push
outs
sub
jg
push
cmp
inc
add
jns
jp
js
data16
and
aas
ins
and
sub
push
cmp
jb
jae
push
es
cmp
jp
cdq
retf
cmps
rol
(bad)
in
lods
in
cmps
int
cli
mov
sti
test
add
xchg
lds
hlt
fwait
jmp
mov
hlt
mov
fistp
cli
(bad)
int3
xchg
out
xlat
add
xchg
fst
(bad)
fstp
push
push
xor
push
data16
(bad)
(bad)
sub
xchg
aad
ficomp
push
mov
or
inc
mov
pop
test
cmp
out
(bad)
bswap
mov
out
stos
clc
and
mov
mov
fsubr
xor
fdiv
lods
je
and
movs
sbb
in
and
gs
mov
(bad)
outs
ds
cmp
loope
enter
add
adc
les
ins
(bad)
lods
in
pop
sub
mov
jno
out
lds
xchg
shl
adc
hlt
retf
retf
enter
dec
shl
cdq
imul
jmp
outs
pop
inc
mov
movs
out
scas
ins
imul
adc
pop
add
retf
fist
stc
aad
xchg
addr16
adc
adc
adc
aad
int
bound
xor
cld
xchg
mov
loopne
xchg
inc
daa
test
out
gs
cmp
cwde
ss
pop
loopne
xchg
iret
inc
imul
lods
das
outs
jmp
(bad)
mov
adc
loopne
mov
pop
sub
mov
inc
or
mov
dec
rol
dec
iret
hlt
enter
push
cmp
add
in
popa
add
mov
jp
push
arpl
xor
shl
dec
imul
aam
xchg
mov
dec
in
clc
mov
dec
inc
dec
sub
mov
inc
cmps
and
aas
ds
push
retf
out
test
aam
or
jmp
mov
cwde
jmp
xchg
sub
pop
sub
icebp
inc
pusha
dec
cs
mov
mov
mov
push
out
jmp
push
sub
movs
out
dec
push
or
or
jmp
(bad)
mov
rcr
mov
mov
and
lds
jbe
inc
add
movs
aam
pushf
loope
push
and
hlt
scas
in
inc
push
add
add
mov
(bad)
fidivr
sub
ret
cmp
sub
xor
shr
push
dec
cmp
enter
cdq
aad
push
push
pop
sbb
fcom
xchg
ja
cmp
xor
lods
sar
dec
xchg
push
push
sbb
mov
jmp
push
push
daa
dec
test
inc
sti
add
cwde
fcom
mov
inc
add
and
mov
cmp
imul
pop
adc
in
stos
repz
xor
mov
cmp
dec
push
sbb
ins
add
fldcw
cli
movs
sbb
imul
add
js
pusha
add
inc
xor
cs
adc
pop
sbb
jge
jns
popa
add
test
lahf
stc
mov
mov
mov
aad
fild
out
stos
in
fld
test
(bad)
mov
mov
mov
cld
test
rcl
in
add
pushf
into
mov
(bad)
retf
mov
lods
fistp
enter
cli
mov
xchg
ror
lock
stos
clc
mov
mov
mov
pushf
fimul
mov
loop
loope
(bad)
mov
call
xchg
cld
mov
lods
into
pushf
fidivr
add
in
lods
hlt
mov
movs
(bad)
mov
scas
in
test
fstp
ror
loop
lock
fdiv
xchg
hlt
mov
mov
icebp
test
(bad)
aam
ficomp
aad
out
jmp
sar
idiv
jg
dec
mov
(bad)
push
adc
loop
call
jmp
push
lods
shl
pop
(bad)
cmp
mov
arpl
add
jb
dec
retf
leave
test
and
repnz
call
xor
repz
imul
dec
adc
ffree
mov
push
mov
(bad)
mov
test
push
push
clc
cs
mov
(bad)
stos
call
arpl
test
mov
js
enter
push
cwde
ret
mov
aaa
popa
and
and
ds
scas
add
ror
fistp
inc
sbb
jnp
gs
mov
mov
mov
js
push
add
imul
xor
retf
stos
sti
xor
push
mov
imul
test
sahf
fwait
sbb
clc
mov
mov
sbb
aam
sti
cwde
inc
dec
aas
push
ret
les
or
adc
sub
mov
and
rcr
test
cmps
sub
int
mov
fnstcw
jno
daa
mov
loope
sbb
sub
rcl
jns
pop
pop
push
lods
or
add
and
icebp
xchg
and
hlt
jne
jmp
bound
mov
mov
inc
jo
es
mov
ins
aaa
push
movs
sbb
push
fwait
sti
imul
imul
and
movs
sbb
adc
inc
push
and
jmp
cwde
bound
sbb
call
sub
lods
xor
cmc
int
mov
push
aaa
cs
std
sahf
pusha
sbb
mov
int3
cli
mov
xchg
in
mov
jne
sub
xchg
and
add
std
mov
sbb
push
add
mov
or
add
or
mov
mov
mov
(bad)
loope
imul
fs
daa
addr16
in
mov
pop
sahf
icebp
lods
into
sbb
jl
adc
aas
int
dec
xchg
call
repz
sub
cmp
scas
out
cmps
inc
inc
data16
pusha
cmp
imul
push
inc
add
(bad)
mov
push
mov
and
or
dec
xchg
lods
fist
or
add
cs
xchg
cld
sub
xchg
jmp
outs
dec
or
in
cld
and
dec
adc
xchg
ficomp
hlt
jmp
test
or
int3
std
mov
inc
cwde
ficomp
mov
or
test
cmp
pop
adc
push
push
pop
adc
mov
mov
and
int
stc
fstp
out
loopne
icebp
test
add
in
mov
jmp
scas
iret
mov
xchg
xchg
retf
xchg
sbb
jp
imul
push
popa
and
push
add
daa
inc
add
arpl
push
movd
dec
or
xor
push
pop
sbb
sbb
pusha
pop
inc
cmp
outs
sub
jp
push
adc
cdq
enter
pause
ret
add
retf
cmps
enter
jmp
fnstenv
in
mov
test
popf
fadd
xchg
shl
ret
mov
out
test
mov
mov
cli
mov
in
mov
into
lods
rol
xor
xchg
aam
clc
nop
ficomp
(bad)
retf
xchg
out
std
add
mov
call
movs
stc
mov
out
test
(bad)
scas
in
mov
lods
in
and
repz
repnz
mov
mov
mov
(bad)
call
aam
retf
mov
xchg
xchg
int3
xchg
out
or
pop
cmp
jmp
xchg
ror
retf
test
push
lods
rcl
hlt
mov
add
xchg
push
mov
imul
(bad)
into
cmp
clc
push
add
adc
out
inc
outs
dec
or
call
push
adc
fstp
xchg
jo
add
(bad)
fild
adc
jmp
xor
fsubr
xchg
mov
push
add
fmul
sbb
ret
movs
stc
and
mov
jne
mov
lods
test
inc
fidiv
adc
or
ret
es
retf
jp
popa
mov
fst
or
xor
jne
sbb
or
add
imul
xchg
add
add
dec
dec
add
mov
inc
and
jle
inc
mov
iret
mov
or
ja
sbb
fidivr
test
xchg
out
bound
push
mov
aad
loop
push
jmp
mov
test
outs
(bad)
loopne
mov
(bad)
mov
imul
(bad)
in
mov
call
sub
mov
stc
jmp
mov
mov
fs
or
(bad)
mov
arpl
std
ror
ins
pusha
jno
cs
or
test
push
push
retf
fisubr
ds
mov
push
inc
pop
push
rol
add
pop
sbb
retf
fimul
ret
in
stc
call
cmp
add
pop
enter
bound
add
sti
fwait
mov
pop
inc
bound
in
out
in
dec
push
cmp
adc
clc
mov
addr16
fbld
jo
adc
xor
shl
je
push
jbe
(bad)
inc
lods
ins
and
add
mov
js
cmps
pop
dec
and
lods
test
jp
fisubr
arpl
loope
mov
mov
add
scas
loopne
inc
inc
add
rsqrtps
in
ficom
mov
cmc
(bad)
(bad)
int3
pop
and
test
cmp
cmp
push
jle
xor
std
pop
das
inc
and
fs
xor
ret
pop
jge
sbb
shr
pushf
jbe
xor
cmp
enter
and
rcr
jbe
ss
mov
adc
sub
or
into
mov
xchg
das
ins
out
and
jne
sub
or
nop
aam
ficomp
lahf
xchg
pop
xor
aas
or
or
sub
gs
and
adc
dec
and
push
xor
jnp
jnp
popw
push
daa
jle
outs
das
dec
add
cdq
(bad)
into
lods
rol
popf
jecxz
leave
xchg
rol
div
test
lahf
sti
(bad)
shl
hlt
mov
leave
lods
sar
mov
in
in
add
lahf
into
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fistp
retf
xchg
xchg
repnz
jecxz
sti
mov
xchg
sbb
jp
ins
cs
add
cmp
inc
add
gs
or
dec
adc
jb
push
push
dec
sub
cmp
aas
js
ja
ins
sub
outs
sub
xor
jbe
jp
inc
adc
push
pop
push
sbb
jno
pop
sbb
push
sub
ret
add
in
lahf
fild
retf
mov
enter
leave
lods
jmp
push
adc
mov
in
fisttp
les
repz
stos
repz
mov
push
xor
sbb
push
push
mov
jno
shr
cmps
dec
imul
and
and
mov
jns
push
inc
fcomip
mov
dec
jg
push
mov
mov
lods
inc
and
retf
movs
xchg
sbb
adc
call
hlt
sub
push
ins
aam
stos
jmp
mov
push
or
inc
push
or
icebp
stos
repnz
pop
xor
cmps
in
mov
icebp
scas
jmp
retf
push
das
jle
iret
fdiv
mov
push
xor
add
les
subps
movs
icebp
xchg
jl
ss
mov
stos
stc
add
outs
sub
shl
xchg
xchg
mov
ja
arpl
fstp
scas
sbb
adc
inc
add
(bad)
mov
xchg
imul
cli
es
cmps
and
std
daa
mov
dec
(bad)
fidiv
push
jl
dec
leave
jmp
and
pusha
cs
fild
jg
push
pop
add
out
add
rol
push
into
or
or
movs
loop
bound
sbb
stc
lods
icebp
je
pop
sbb
mov
pushf
call
gs
fnstenv
daa
(bad)
and
outs
xchg
adc
repnz
mov
cs
fiadd
jmp
outs
daa
adc
lods
not
dec
adc
in
shl
xchg
div
or
sbb
or
cmp
hlt
adc
mov
aaa
inc
mov
test
mov
push
pop
jno
add
sbb
imul
lods
ficomp
xchg
xchg
inc
pop
xor
mov
pcmpeqb
dec
stos
add
loope
dec
and
iret
mov
mov
or
mov
push
push
imul
adc
leave
xor
jp
pop
pop
iret
mov
xor
mov
ret
stos
jmp
bound
icebp
movs
in
jne
pop
cmp
cmp
mov
retf
and
push
jecxz
mov
cmp
in
mov
int
xchg
out
xchg
int
mov
cmp
push
sbb
jae
jno
cmc
les
js
add
cmp
imul
sbb
ror
dec
sbb
sub
scas
icebp
daa
retf
test
das
xlat
mov
pop
pushf
repz
(bad)
mov
dec
pop
ins
icebp
and
and
stos
cld
test
scas
lds
sbb
popa
daa
inc
push
cwde
leave
(bad)
leave
lods
icebp
mov
lods
in
stos
loop
repnz
sahf
fild
leave
mov
out
not
mov
xchg
into
(bad)
fcom
ror
in
lods
in
(bad)
xlat
fld
in
ret
sbb
loope
(bad)
cmps
loopne
out
xor
out
lahf
fild
cmp
push
adc
jp
pop
cmp
push
popa
pop
add
inc
sbb
dec
das
bound
push
adc
push
adc
xor
push
and
pop
inc
add
or
inc
pop
jl
cmp
pop
or
push
or
dec
adc
pop
inc
es
push
add
cmp
pop
dec
jl
ret
xor
sub
(bad)
aam
dec
mov
jne
test
ins
push
(bad)
and
jle
pop
iret
add
sar
dec
sub
push
clc
adc
in
sbb
lods
xchg
out
enter
pop
lahf
add
add
inc
jp
jo
gs
cmp
sar
adc
add
dec
arpl
push
stos
and
cmovae
xor
iret
dec
fsub
fadd
and
test
mov
jns
dec
cmc
jmp
and
cmps
and
sub
dec
and
jo
int
lds
hlt
pop
(bad)
cmp
dec
das
lods
pop
push
inc
and
das
retf
addr16
adc
cmps
scas
mov
dec
test
add
in
test
stos
cmp
cmc
adc
dec
ficomp
aaa
movs
ins
jp
pop
cmp
aas
lahf
adc
mov
cmp
add
inc
(bad)
iret
nop
test
cmp
add
(bad)
aam
cmp
fdivr
jmp
enter
xor
push
in
mov
jecxz
loope
les
out
jmp
jb
add
push
mov
(bad)
fild
xor
add
jo
pop
dec
retf
arpl
fistp
pop
mov
cmp
out
lods
aas
fcompp
mov
ja
movs
ret
dec
xor
loopne
gs
and
fisttp
jle
cmps
lea
lods
mov
jne
mov
jge
cmps
repnz
xchg
test
leave
stos
cmc
enter
aad
test
adc
add
jl
retf
(bad)
icebp
or
push
or
aaa
cmp
add
arpl
cmps
pop
call
pop
sbb
mov
jmp
jmp
in
lds
jno
adc
sub
ror
or
popf
popa
sbb
addr16
aad
shl
aam
jmp
fwait
imul
ss
dec
jnp
xchg
cmps
cwde
pusha
jp
nop
imul
xchg
ror
adc
push
leave
aad
xor
popf
jb
jl
shl
scas
clc
mov
inc
push
mov
ds
scas
pop
mov
jmp
xor
in
dec
enter
out
push
(bad)
into
dec
enter
dec
cwde
(bad)
mov
ret
pop
cmp
mov
outs
in
imul
retf
(bad)
aad
(bad)
jg
test
repz
retf
sar
jae
repnz
ja
es
call
xor
add
push
dec
cli
loopne
push
arpl
mov
sbb
(bad)
xor
sub
addr16
pop
pop
cmp
aam
adc
xor
jmp
movs
mov
sti
or
sub
cmps
loop
jnp
into
xor
out
add
xchg
shr
dec
mov
mov
shl
xchg
stos
out
stc
mov
mov
ror
lds
push
push
icebp
dec
or
xchg
inc
and
enter
outs
cmp
push
xor
dec
les
fsub
xchg
fldcw
sbb
les
add
push
cwde
mov
mov
shl
adc
jo
inc
push
sub
xchg
jb
jae
or
jmp
daa
mov
lods
movs
into
jo
mov
out
xor
cmp
and
mov
sbb
jae
cmp
jle
push
add
out
inc
pop
lea
movs
and
sub
add
push
fild
adc
mov
in
cdq
push
add
cmc
xor
(bad)
rcl
test
cmps
lahf
pushf
ss
xchg
sbb
sub
xor
es
mov
cmp
mov
xchg
mov
movs
test
movs
and
sahf
inc
xor
pop
out
es
arpl
mov
shl
daa
and
mov
pop
rcl
cmc
mov
jne
add
pop
jmp
lahf
test
retf
mov
enter
addr16
dec
xchg
inc
les
pop
in
das
inc
cmp
mov
cdq
inc
jo
jno
push
or
xor
pop
inc
adc
mov
in
mov
mov
and
psubsb
pop
jns
into
test
push
dec
jne
rcr
movs
clc
cmc
cmp
adc
sub
add
inc
in
push
mov
mov
rcl
jno
mov
sub
push
jns
nop
mov
(bad)
xchg
retf
popf
lahf
dec
aad
imul
add
or
out
sahf
imul
mov
add
daa
repnz
inc
aam
sbb
sub
jo
cmp
stos
push
xor
sti
scas
stos
movs
cmp
shl
(bad)
rcl
add
xchg
adc
outs
mov
ss
add
imul
or
fisttp
add
dec
inc
inc
scas
clc
or
add
jo
enter
xlat
sub
out
pop
scas
jnp
mov
fimul
ja
popf
in
aas
lods
xor
(bad)
cmp
test
mov
or
shl
and
cwde
mov
scas
inc
add
loopne
jmp
xacquire
xor
mov
mov
jb
arpl
lock
push
inc
les
fld
aad
push
std
cmc
add
ds
sub
push
mov
sub
out
fsub
icebp
xchg
adc
sub
retf
pop
scas
aas
cmps
add
jbe
mov
mov
lahf
rcr
pop
stos
xchg
std
xor
jecxz
adc
clc
rdtsc
repnz
mov
into
iret
mov
aam
xchg
call
adc
jge
(bad)
adc
(bad)
les
xor
inc
lahf
cli
adc
fs
rol
leave
jl
sbb
jno
in
enter
popa
xor
ins
inc
bound
in
nop
adc
sti
je
in
in
inc
mov
popa
dec
test
loop
lods
daa
ins
mov
(bad)
leave
les
jne
cmp
ror
mov
movs
and
iret
daa
push
adc
dec
push
jp
std
pop
sub
sub
xchg
cs
inc
addr16
xchg
mov
imul
out
cmps
pop
in
push
enter
ret
fisubr
iret
sbb
cmp
pop
jmp
lods
xchg
outs
jmp
lods
pushf
jge
sti
fidivr
cmp
inc
cmp
outs
mov
gs
loop
xchg
mov
dec
cld
ins
int3
jge
pop
sbb
add
arpl
xlat
ja
leave
add
cmps
sub
ret
repnz
in
cmp
ror
sub
xchg
push
lahf
add
pop
push
popf
cmc
popf
jp
inc
(bad)
jl
dec
ret
sub
pop
add
sqrtps
adc
mov
push
jne
loope
inc
pop
ror
add
call
(bad)
cmps
xchg
and
add
or
pushf
pop
pushf
pop
int3
cmp
es
lea
arpl
into
mov
jno
or
loope
fdivr
jle
sub
and
sbb
jg
push
push
jae
test
out
les
sar
mov
jecxz
icebp
push
rcl
fldcw
(bad)
jmp
mov
rcr
add
sub
test
fwait
imul
scas
imul
sti
sub
popa
xchg
adc
mov
and
xor
lock
adc
lea
dec
push
dec
in
ds
jge
loope
or
adc
push
scas
int3
pop
iret
sub
xchg
jbe
push
mov
pop
sbb
jne
aas
ins
inc
cs
mov
mov
call
loopne
loop
push
cdq
pusha
mov
mov
fld
jbe
sub
sub
adc
and
inc
push
push
rol
ins
push
out
inc
inc
sub
mov
cmp
lea
into
outs
push
cwde
push
cmp
push
jno
bound
pop
pop
cs
xor
add
cmp
movs
push
call
repz
fsub
jmp
loope
cmps
aas
sbb
xor
xor
(bad)
cmp
xor
popa
movs
dec
pusha
fcomip
ret
mov
push
stos
sbb
dec
aaa
pop
sub
xlat
dec
and
test
xchg
mov
int3
and
cmp
ficom
jp
mov
and
arpl
(bad)
pop
adc
cmps
sub
jmp
pop
fmul
idiv
and
mov
inc
shr
pop
sbb
std
mov
dec
sbb
and
fistp
jp
in
(bad)
dec
loope
popf
fistp
mov
je
jge
mov
sub
jmp
scas
aam
pop
inc
fwait
test
leave
xlat
mov
pusha
int
fld
fist
adc
cmp
mov
int3
xchg
cmps
mov
push
imul
ja
lock
cmc
test
aaa
adc
jge
jle
pop
int
fild
mov
jnp
cmp
sub
add
or
fnstenv
(bad)
pop
cmc
mov
pop
(bad)
pop
jecxz
sbb
dec
js
imul
xchg
nop
jg
loope
xor
dec
jno
adc
jge
add
stos
push
sbb
mov
je
fwait
cmp
xchg
(bad)
nop
or
sub
(bad)
inc
dec
gs
ret
push
fadd
ins
xor
fdiv
stc
cmp
sbb
and
(bad)
aad
sbb
mov
mov
aam
xchg
mov
scas
push
bnd
icebp
add
and
ret
scas
sti
inc
imul
retf
mov
stos
dec
cmp
test
clc
fs
icebp
pop
jne
jbe
ret
retf
jecxz
fsubr
jno
inc
jb
adc
pop
mov
das
mov
(bad)
aas
shl
(bad)
aam
dec
aaa
jmp
mov
neg
lea
scas
(bad)
out
mov
mov
and
out
jbe
xchg
sbb
mov
out
and
xor
inc
fcomp
sub
xor
xor
xchg
inc
shr
es
cmc
mov
jns
ret
or
pop
jg
imul
jg
imul
outs
fwait
pop
repnz
rcr
scas
mov
jmp
add
inc
lds
mov
adc
test
xchg
dec
ret
add
inc
(bad)
imul
iret
jns
sub
(bad)
push
sbb
rcl
dec
icebp
xor
dec
clc
dec
jnp
das
sbb
sub
inc
sti
fisttp
(bad)
out
add
ret
fldenv
push
push
push
xor
jno
jg
outs
mov
bt
jecxz
movs
mov
mov
loop
sbb
stc
cmp
add
mov
dec
xchg
or
push
aas
hlt
(bad)
fisub
add
add
scas
jb
push
adc
or
xor
push
add
push
xor
pop
inc
rol
pop
xchg
and
call
fwait
inc
lock
int
add
aad
mov
xchg
sub
addr16
je
sub
mov
and
cmp
cmc
pop
push
sub
ss
ffree
push
push
sahf
movs
dec
fiadd
inc
mov
adc
jo
jl
(bad)
cmp
(bad)
test
repz
pop
pop
aaa
lea
das
enter
cmc
pop
or
cwde
(bad)
jle
and
add
sub
outs
xor
jge
sbb
sbb
les
cli
mov
inc
addr16
mov
and
sub
cwde
sbb
pop
sar
mov
and
adc
mov
fld
ss
push
ins
rcr
fnstenv
lods
push
push
sbb
jmp
and
add
fs
scas
aas
dec
lods
mov
lock
push
retf
push
std
sbb
or
or
cmps
inc
call
mov
jae
out
xchg
mov
cmp
cs
nop
inc
aas
hlt
leave
inc
fsubrp
adc
lock
dec
inc
fisubr
je
xchg
cmp
add
sbb
add
int
ret
jno
js
ror
(bad)
push
cmp
rcr
pop
xor
lods
leave
mov
sahf
sbb
mov
adc
inc
lahf
outs
xchg
xchg
(bad)
adc
dec
or
mov
push
cmps
push
int3
sbb
jno
cs
fwait
je
add
sub
xor
xchg
xor
pop
je
sbb
es
fimul
add
jge
and
mov
mov
aam
ror
pop
idiv
sub
xchg
xlat
xchg
cmps
(bad)
sub
fld
(bad)
jmp
ret
loop
out
(bad)
and
stc
call
mov
scas
sbb
popa
push
das
imul
or
sbb
push
mov
lods
pop
mov
fld
stos
xchg
add
and
mov
push
fiadd
push
ret
dec
pop
jns
cld
pop
mov
pop
add
jb
in
xchg
mov
pushf
(bad)
dec
dec
repz
push
ds
jmp
popf
mov
mov
leave
inc
(bad)
fs
js
imul
in
test
sub
xchg
sub
jp
pop
leave
sub
dec
jmp
retf
sub
xchg
push
add
in
aam
daa
sbb
stc
jecxz
or
mov
xor
sar
jbe
ins
nop
sbb
outs
or
sub
jne
(bad)
es
lods
data16
pop
mov
add
(bad)
shl
cli
mov
ss
test
push
cmp
movs
movs
cmp
dec
sbb
add
(bad)
leave
sub
and
adc
jmp
jmp
popf
test
cwde
xchg
add
jmp
sub
jl
push
mov
inc
cmp
cld
inc
jmp
cmps
lods
inc
(bad)
out
mov
mov
dec
(bad)
jno
scas
push
shl
xchg
mov
gs
xchg
xor
pop
mov
xor
dec
sub
mov
pop
fwait
push
pop
xchg
lods
xor
cld
imul
nop
popa
mov
loopne
mul
add
sbb
data16
inc
mov
jno
push
test
jmp
pop
sub
les
dec
mov
ins
pop
add
mov
loop
adc
mov
adc
add
into
dec
mov
retf
mov
in
data16
cs
bound
jp
outs
mov
sub
or
push
cmp
mov
inc
push
cmp
xor
xor
and
xor
or
mov
stos
ret
fistp
jnp
jle
pop
mov
push
pop
mov
daa
pop
movs
sbb
adc
mov
into
mov
data16
mov
sub
jecxz
jno
fcomp
add
popf
mov
push
fisubr
adc
inc
movs
inc
adc
push
adc
sbb
cmp
sbb
scas
ss
mov
or
test
in
loopne
jle
cmp
mov
icebp
aad
in
push
(bad)
mov
hlt
inc
push
sub
(bad)
jns
sbb
xor
pop
xchg
inc
enter
sub
inc
jnp
adc
rcr
xchg
adc
icebp
sub
ret
out
repnz
out
pop
xor
add
mov
pusha
add
loop
and
fdivrp
mov
pop
add
add
icebp
ja
dec
xchg
or
imul
mov
shr
fcmovb
aas
scas
mov
movs
sbb
jae
xor
sbb
push
in
dec
mov
daa
jmp
loopne
dec
enter
sub
push
and
xchg
push
out
add
call
push
inc
sar
sbb
popf
jo
call
in
(bad)
or
adc
mov
cmc
push
test
aad
nop
sub
sbb
ror
es
push
mov
sahf
add
cmps
mov
popa
xor
and
(bad)
xchg
addr16
mov
lock
test
cmp
pop
xchg
inc
aad
outs
mov
(bad)
sub
stc
scas
aas
ds
fadd
cmc
sub
sahf
xor
jge
cmp
ss
dec
(bad)
stc
add
cli
xchg
xor
mov
mov
js
mov
gs
lock
imul
sbb
push
jo
dec
jae
fsubr
loop
dec
lock
mov
sbb
hlt
stc
sub
add
push
test
and
jmp
enter
fst
cmps
sbb
in
lea
mov
sbb
stos
push
pop
(bad)
sahf
stos
mov
imul
test
loop
mov
data16
sar
(bad)
rcr
and
fwait
mov
mov
xchg
leave
sar
daa
inc
mov
xor
fidiv
mov
fstp
cmp
idiv
inc
xor
imul
or
pop
es
mov
xor
or
jno
jge
jmp
jmp
jge
lds
stos
call
sub
xchg
jmp
sbb
dec
adc
adc
ins
jge
cdq
mov
and
ins
outs
push
popf
inc
mov
cmp
fisub
or
mov
cmp
xchg
call
outs
sub
popf
sbb
inc
adc
push
(bad)
rcl
adc
xchg
scas
aam
js
dec
jg
adc
pusha
adc
inc
and
dec
not
mov
mov
out
add
inc
jbe
xlat
cmp
imul
ins
fwait
or
(bad)
div
arpl
bound
lds
clc
mov
cmps
test
ds
push
xchg
(bad)
call
sbb
lods
cmp
dec
icebp
push
cld
(bad)
fs
hlt
pop
jmp
xor
movs
sub
xor
push
push
retf
movs
sbb
xchg
push
daa
sti
(bad)
movs
sub
cwde
xchg
jb
pop
add
push
in
pop
scas
sub
gs
mov
rcl
std
push
(bad)
mov
sbb
out
mov
ficomp
inc
mov
jo
outs
fild
sahf
pop
push
mov
retf
jp
add
jecxz
daa
jo
test
cmp
les
adc
pop
or
out
ror
or
mov
pop
jns
push
rcr
push
xchg
(bad)
test
mov
push
je
repnz
sub
daa
adc
push
dec
clc
lods
(bad)
push
cmp
mov
jle
loopne
idiv
je
mov
mov
out
sbb
inc
dec
ret
mov
jle
int
icebp
xchg
test
xchg
cwde
push
repz
inc
sbb
mov
fisub
sbb
push
sbb
in
or
into
dec
add
inc
lock
or
fsub
xchg
or
mov
test
call
dec
test
mov
jl
mov
sbb
xchg
imul
or
mov
scas
or
xor
dec
mov
test
(bad)
lahf
jb
movs
out
(bad)
fwait
jnp
(bad)
inc
adc
ds
lods
adc
mov
sub
enter
jg
push
xchg
fwait
and
out
std
test
mov
outs
xor
mov
mov
mov
add
cmc
movs
pusha
sub
ja
loopne
scas
jle
(bad)
lock
pop
push
mov
js
loopne
ffreep
xor
inc
arpl
sbb
imul
jl
or
mov
cmc
pop
cmp
dec
mov
xchg
shl
adc
ins
cdq
or
lahf
in
aad
stc
js
mov
cmp
dec
or
ret
js
fistp
push
fidiv
retf
mov
xchg
lds
pop
pusha
mov
out
dec
push
mov
cmp
les
sar
push
loope
scas
retf
out
jmp
(bad)
xchg
fstp
cmc
jge
data16
xchg
outs
mov
enter
test
retf
push
cmps
outs
xchg
or
xchg
test
cld
mov
mov
aam
cmp
in
sbb
movs
aaa
adc
push
jle
jle
outs
pop
in
sub
push
xchg
sub
inc
adc
out
mov
out
and
into
mov
(bad)
jmp
and
inc
sbb
mov
sub
int
inc
dec
adc
adc
leave
lea
pop
sbb
cli
rcl
repnz
(bad)
mov
cmp
jle
sub
icebp
mov
pop
inc
dec
ds
enter
test
test
popa
cmp
punpcklwd
mov
mov
xor
add
mov
xchg
sub
cmp
ret
xchg
retf
es
or
dec
addr16
fidivr
out
iret
mov
mov
pushf
rol
int3
mov
mov
cmps
(bad)
cmps
jecxz
out
test
mov
nop
shl
mov
aad
in
(bad)
fld
dec
jne
push
(bad)
cmps
fcomp
and
jecxz
ret
pop
ss
frstor
mov
push
jl
lock
xor
sub
xchg
adc
shl
mov
stos
jmp
fst
call
fstp
(bad)
cmp
pop
fcomip
jecxz
addr16
jmp
sbb
enter
outs
mov
not
addr16
sbb
sahf
or
or
leave
lea
sub
fs
push
dec
jge
cwde
fdivp
mov
sub
rsm
in
jmp
sahf
icebp
mov
packuswb
mov
xlat
stos
sti
pusha
sub
pop
ret
fdiv
(bad)
push
jl
sub
inc
sub
jl
inc
cmp
jle
jo
pusha
pop
add
inc
sbb
push
xor
popa
add
inc
add
push
adc
loope
add
add
rcl
lods
pop
push
add
mov
xor
cmps
inc
aaa
popa
xor
movs
out
inc
push
add
add
test
je
pop
dec
aas
adc
scas
out
push
inc
jns
loopne
(bad)
pushf
lahf
add
add
jmp
adc
fs
(bad)
iret
sub
jecxz
fnsave
lods
jmp
mov
neg
mov
ins
test
nop
leave
inc
popf
and
in
xchg
xchg
adc
(bad)
mov
lea
cmc
cwde
and
cld
and
dec
add
stos
jmp
and
jl
leave
fcomp
test
xchg
sbb
adc
cmc
hlt
mov
dec
ins
sub
jnp
data16
mov
mov
mov
ret
test
jp
jge
jns
inc
sbb
pop
add
sub
inc
arpl
jp
dec
or
inc
cmp
imul
sbb
jp
pop
or
sub
mov
sub
adc
or
in
test
out
mov
mov
sub
jmp
inc
cmp
or
mov
or
cdq
fnsave
pop
inc
not
xchg
sub
retf
stos
enter
mov
adc
idiv
push
mov
mov
cmp
pop
add
rol
pop
rcl
cmps
in
popf
sbb
jecxz
mov
jecxz
shl
scas
push
inc
shr
fmul
xchg
(bad)
(bad)
cmp
outs
scas
sbb
loope
scas
iret
adc
pop
popf
jmp
or
adc
(bad)
xlat
out
(bad)
in
lods
in
cmps
shl
test
(bad)
xchg
not
stc
mov
fld
push
int
jb
ret
or
enter
cmp
in
dec
daa
dec
or
(bad)
mov
push
inc
add
shl
ss
xchg
in
shl
fsubp
mov
sbb
lahf
int3
mov
rcr
pop
push
inc
adc
out
sti
fwait
popf
dec
inc
push
add
mov
dec
or
(bad)
mov
inc
sbb
add
es
aam
mov
inc
add
mov
dec
in
aas
int3
movs
fstp
stos
retf
pop
jbe
aaa
add
mov
loop
scas
loopne
jne
sub
cmps
sub
jmp
or
imul
test
adc
fnstsw
imul
xchg
add
xor
scas
aad
inc
inc
cmp
xchg
push
or
sub
cmp
retf
cdq
inc
add
cmp
int3
xchg
xlat
test
xchg
sar
rcl
int
rcl
fistp
nop
sub
xor
jne
push
nop
cmp
or
das
retf
cmps
iret
xchg
inc
and
div
outs
pop
push
repnz
sahf
fmul
mov
mov
cld
repz
mov
call
(bad)
int
movs
mov
cs
sbb
aaa
push
les
test
jbe
jg
sbb
dec
or
xchg
lock
movs
lahf
and
fsubr
sbb
dec
or
jmp
mov
cmps
dec
or
fsub
movs
mov
ja
sub
rol
mov
lea
outs
in
xor
jne
xor
add
pop
jl
cmp
mov
ss
retf
pop
xor
sbb
or
sbb
out
fs
imul
popf
ror
icebp
test
cmc
scas
fistp
cmc
mov
xchg
(bad)
mov
(bad)
xor
(bad)
rcl
and
(bad)
mov
test
bound
icebp
les
sbb
cld
rcl
loopne
enter
jno
adc
call
hlt
call
adc
sbb
in
or
repnz
xor
or
mov
cmc
shl
aad
shl
adc
add
xor
jmp
clc
enter
and
mov
jno
push
dec
shl
sti
mov
sub
or
shl
push
dec
(bad)
out
pop
pop
cmp
fistp
dec
mov
stos
in
pop
jp
dec
mov
add
cmp
test
push
sub
(bad)
cli
mov
pusha
scas
imul
mov
(bad)
in
lods
in
cmps
int
jmp
les
cld
xchg
sar
ret
and
call
pop
mov
fdivr
mov
mov
(bad)
mov
mov
loopne
add
sbb
jae
sbb
retf
mov
cmps
sub
pop
mov
jno
aas
pop
sar
cmps
mov
xchg
in
popa
mov
imul
jl
push
sahf
(bad)
adc
push
fs
adc
add
push
minps
sti
mov
adc
pop
lods
sbb
shl
jle
and
fstp
or
fadd
dec
xor
shl
lea
fisttp
mov
stos
retf
js
add
leave
adc
dec
mov
(bad)
(bad)
lahf
addr16
dec
(bad)
cmps
sbb
out
test
lods
sbb
hlt
mov
(bad)
xor
or
test
fistp
int
cli
movs
clc
stos
call
mov
retf
add
mov
add
xor
in
mov
daa
mov
xchg
aam
cmp
adc
adc
dec
pop
adc
rcr
mov
xchg
rcr
call
adc
aas
les
push
jo
and
fistp
adc
into
in
scas
sbb
(bad)
mov
jecxz
scas
iret
jmp
push
and
mov
and
in
call
fwait
sar
cmp
and
fidivr
cmp
std
adc
adc
(bad)
not
std
xchg
and
jb
add
dec
mov
bound
daa
test
lods
xchg
cmp
xchg
jmp
dec
mov
jne
jp
ds
sub
std
xchg
std
mov
test
add
lea
mov
outs
test
cs
mov
mov
push
int
repnz
int3
mov
sub
es
in
mov
pop
push
sub
and
jmp
out
mov
mov
rcr
add
inc
lahf
mov
dec
ds
test
pop
push
fiadd
inc
es
xchg
leave
(bad)
retf
popf
shl
stos
loope
clc
mov
shl
pop
aas
dec
pop
mov
je
aam
mov
mov
or
pop
sbb
ins
sti
sbb
(bad)
popf
dec
nop
push
push
and
call
xchg
adc
out
nop
repnz
imul
mov
jnp
or
cmp
mov
dec
push
adc
shl
cmp
dec
imul
xlat
sub
clc
jecxz
cmc
mov
lods
in
fdiv
fcmovnbe
mov
mov
sub
scas
lds
retf
xor
clc
rcr
scas
addr16
scas
loopne
call
add
(bad)
mov
dec
ds
cmp
sar
pusha
push
ds
and
int3
inc
xor
mov
mov
add
pop
cmp
xchg
adc
fdivr
jmp
ins
xchg
pop
push
aas
cmps
or
retf
mov
mov
stos
add
pop
dec
and
xor
mov
call
jns
movs
or
pop
ror
sbb
jnp
push
jl
add
out
out
out
std
mov
fcomp
lock
mov
xor
mov
pop
nop
xor
out
add
ins
push
daa
and
and
stc
xchg
inc
dec
push
ja
aam
lds
mov
xchg
ins
sub
sbb
int3
mov
test
mov
retf
and
xor
pop
cmovl
shl
(bad)
fsubr
fistp
out
aad
inc
push
push
fs
push
adc
std
mov
ds
aas
js
adc
loopne
mov
mov
push
adc
cli
daa
mov
mov
cs
(bad)
mov
xchg
int3
mov
sbb
ret
xchg
pop
mov
xchg
dec
xor
mov
repnz
mov
xor
cmp
xchg
mov
xchg
cmp
inc
add
cli
shl
test
pop
or
stc
movs
stc
adc
jl
dec
cmp
loopne
iret
stc
mov
and
push
xor
loop
(bad)
les
popf
(bad)
jp
jo
sbb
stc
popf
xchg
push
and
iret
push
inc
pop
inc
mov
mov
cmp
inc
push
or
fwait
retf
push
dec
subps
adc
(bad)
adc
sub
dec
pop
je
out
xchg
movs
pushf
sub
popf
loope
jbe
bound
mov
sbb
lock
xchg
xchg
in
loopne
pop
push
ins
(bad)
lds
pop
mov
fst
stos
imul
xchg
popf
adc
or
or
pop
movs
dec
arpl
stos
or
fst
jno
repz
jmp
cdq
into
xchg
in
popa
inc
add
icebp
out
mov
test
dec
sub
mov
arpl
inc
jge
sbb
pop
sbb
lahf
fstp
lahf
adc
cmp
mov
mov
inc
adc
cmp
aad
sti
mov
jp
xor
or
clc
imul
cmp
int
clc
and
je
leave
movs
jmp
sahf
cld
add
stc
mov
inc
jl
es
nop
rcl
out
cwde
ins
mov
mov
push
addr16
test
dec
jp
cmp
shl
xchg
(bad)
xchg
out
sahf
out
scas
pop
das
gs
and
adc
test
push
outs
sub
or
stos
int
pusha
jnp
mov
push
call
fwait
std
cmps
popa
mov
pop
ret
adc
rol
cmp
xchg
loopne
lock
cmp
pop
es
or
jmp
loopne
xchg
ds
ins
(bad)
fist
push
adc
or
fidiv
retf
xchg
mov
gs
adc
mov
dec
pop
aaa
pop
call
pop
jg
inc
or
cmp
call
push
fisttp
push
stc
sub
mov
inc
dec
or
cmps
push
inc
loopne
jmp
fild
adc
cmps
sbb
aaa
push
pop
ret
xchg
js
inc
add
add
repz
data16
inc
shl
sahf
fidiv
call
xor
shl
jg
shl
test
inc
sub
jmp
retf
sub
add
lods
add
retf
pop
inc
cmp
jmp
xchg
or
mov
or
cs
jmp
test
(bad)
iret
push
jo
fs
fdiv
rcl
mov
mov
mov
pop
push
add
pop
xor
or
or
stc
cmove
adc
push
ret
fdivr
inc
xchg
popa
fsub
div
inc
mov
cmp
fstp
(bad)
xor
call
inc
ins
dec
and
jnp
xor
push
pop
inc
fstp
push
in
cmp
xor
lock
add
test
lods
test
sub
scas
jne
or
fldenv
lahf
imul
das
(bad)
jmp
fcom
jmp
xor
rol
js
loope
mov
aas
xchg
inc
cld
les
push
pusha
dec
adc
scas
xor
add
mov
xor
les
(bad)
push
push
or
cmp
imul
test
call
nop
rol
pop
inc
xchg
add
(bad)
aas
sub
and
mov
mov
xchg
push
push
mov
pop
popa
push
in
shr
jp
outs
(bad)
mov
push
dec
sub
and
push
sbb
adc
and
das
test
cmps
enter
leave
lods
push
sub
scas
scas
jnp
aad
xchg
and
ins
adc
mov
ja
add
dec
or
fisubr
dec
lods
add
test
pop
cmp
xchg
in
ficomp
xchg
outs
rcr
outs
sub
sub
dec
call
push
mov
jne
adc
loop
cld
or
adc
in
mov
in
scas
(bad)
mov
lock
sahf
outs
daa
nop
loop
mov
pop
mov
data16
iret
mov
jle
push
addr16
aad
leave
lea
push
pop
fwait
pop
push
cmp
fiadd
xchg
push
and
or
sar
cli
fcom
dec
nop
lock
jecxz
mov
daa
jle
hlt
push
fs
or
lods
jle
mov
sub
loopne
dec
sub
not
xchg
mov
dec
sbb
jmp
mov
aaa
mov
mov
add
les
repnz
cmc
sub
(bad)
mov
inc
ja
sbb
shl
mov
int3
xchg
dec
xor
leave
std
mov
pop
push
pop
inc
ror
mov
xor
push
pop
repz
test
call
ja
cmp
addr16
mov
add
push
lahf
sbb
cli
movs
lock
inc
and
neg
xchg
dec
add
into
shr
xchg
ins
dec
add
or
sbb
ret
popf
arpl
push
mov
mov
pop
pop
mov
(bad)
call
pop
or
sti
out
mov
lahf
add
jecxz
dec
sub
mov
fsetpm(287
stos
call
cmp
jne
or
sub
pop
mov
test
js
add
in
cmp
sub
jge
shl
cld
movs
add
pop
jns
pop
ja
das
fs
in
mov
clc
test
cmp
xor
adc
push
jle
adc
scas
sbb
sbb
and
fdivr
mov
sub
push
addr16
pop
jl
ds
aas
icebp
ror
loop
icebp
cwde
xor
xor
pop
ja
xor
mov
jg
aaa
pop
pushf
dec
adc
sub
es
jg
jg
inc
mov
ja
adc
mov
mov
add
mov
imul
in
push
push
jbe
sbb
out
mov
and
add
in
mov
pop
sub
add
jo
xor
cmp
lods
ror
and
dec
stos
sub
inc
pop
ds
inc
shl
stos
test
lahf
fsubr
xor
aas
mov
add
sub
adc
xchg
dec
cmp
rcl
jb
std
xchg
repz
outs
inc
sub
mov
mov
imul
push
sti
or
cli
daa
mov
scas
jmp
add
mov
push
jl
adc
mov
and
pop
push
and
cs
mov
sub
jnp
std
xchg
imul
inc
mov
sbb
in
and
push
cmp
std
fstp
dec
push
add
hlt
(bad)
mov
fs
add
fild
jmp
and
enter
jns
cdq
dec
push
dec
aas
loop
mov
inc
mov
mov
dec
xchg
in
fcmove
xor
sub
or
mov
fidiv
mov
(bad)
imul
xor
and
xchg
fst
mul
mov
(bad)
mov
adc
pop
pop
inc
push
and
add
popa
aas
jae
mov
push
sub
adc
loope
lods
mov
js
pop
mov
fiadd
jo
test
sbb
shl
pop
fdivp
lods
fbstp
mov
dec
lods
dec
add
fxtract
mov
push
sub
mov
jae
inc
ins
push
pop
inc
mov
mov
sbb
dec
mov
jns
inc
scas
sub
sbb
xor
cmp
xor
je
pop
sub
stos
sbb
add
fcmovbe
test
sub
in
dec
push
inc
sbb
adc
bound
jg
test
dec
or
jecxz
out
lahf
push
and
inc
sahf
push
arpl
int3
clc
cmp
jne
jp
pop
cs
dec
add
pop
adc
ss
adc
in
and
imul
mov
jnp
test
test
pop
out
aaa
cmps
in
dec
cdq
loope
cwde
or
add
ret
push
addr16
pop
paddusw
inc
mov
scas
cld
mov
pop
sub
movs
sti
stos
push
ss
cmp
add
rcr
pop
or
mov
xchg
pop
pusha
add
mov
xor
je
outs
mov
popf
aad
dec
or
in
fistp
lahf
cmp
das
push
xchg
xor
cdq
frstor
sub
add
pop
add
nop
sbb
sbb
test
mov
push
aad
xchg
push
jae
cmp
mov
test
sar
sub
pusha
dec
sub
data16
cmp
pop
sbb
cmp
xchg
mov
(bad)
fucomip
mov
pop
outs
xor
xor
movs
sbb
dec
adc
pop
xor
out
std
jne
daa
pusha
add
add
or
jbe
pop
jno
out
sbb
jecxz
popf
(bad)
push
inc
sub
leave
std
ret
das
mov
cmp
add
pop
out
ret
push
jge
mov
xchg
ror
aas
dec
xlat
lock
sub
mov
xchg
sub
dec
add
hlt
mov
mov
fdiv
dec
mov
ja
cmp
ins
pop
adc
cs
movs
das
fwait
jmp
je
adc
push
pop
or
or
cdq
ror
shl
ret
in
fwait
in
mov
arpl
jge
int
sbb
rcl
dec
cmp
mov
fdiv
jmp
add
pop
mov
scas
push
cmp
pop
jl
dec
cmp
lock
sar
mov
scas
and
lock
mov
inc
or
push
add
jmp
(bad)
rol
cmp
xlat
xchg
popa
dec
sub
pop
sub
ret
gs
push
out
(bad)
or
mov
push
sar
xor
iret
mov
xchg
push
add
push
retf
lahf
fisttp
movs
enter
fiadd
inc
sub
mov
mov
xor
int
stos
lock
pop
loope
test
mov
or
add
pushf
div
mov
das
dec
sbb
bound
and
push
or
jb
dec
in
(bad)
mov
leave
mov
lock
fistp
imul
nop
mov
xchg
sar
fwait
idiv
test
mov
xchg
lods
lock
(bad)
enter
repz
popf
les
or
aad
pop
pop
add
dec
sub
or
loop
adc
dec
sbb
loopne
ficomp
dec
stos
push
dec
cmovno
pop
in
out
test
cdq
rcr
data16
and
popa
xor
xchg
shl
fwait
mov
add
in
jae
js
imul
push
ror
lock
lods
retf
xchg
push
mov
ja
pop
inc
sub
test
adc
iret
movs
(bad)
cmps
not
sub
scas
in
lock
ret
sub
or
hlt
add
test
push
adc
cmovo
push
scas
push
sbb
xchg
inc
xor
ja
push
dec
cmp
sti
ret
xchg
dec
bound
ins
add
test
push
mov
lahf
xchg
rol
pop
loope
mov
retf
add
cdq
cmc
mov
cmp
push
and
es
push
xor
aad
jle
inc
call
lods
xchg
inc
in
sti
bound
pusha
cmp
jbe
shl
mov
cmp
and
enter
pushf
aaa
jp
dec
les
jmp
aam
inc
mov
and
xor
push
pop
sbb
xor
cmp
or
jg
jmp
inc
adc
or
out
xchg
icebp
mov
loop
cdq
ds
or
es
push
dec
mov
dec
ficom
add
cmp
dec
sbb
sbb
stc
pop
xchg
mov
lods
retf
pop
push
jecxz
ins
xor
ror
mov
daa
fldenv
jle
cmp
ror
mov
mov
imul
push
push
jbe
adc
sar
aaa
pop
adc
push
pop
jge
push
scas
stos
hlt
mov
pop
or
not
rcl
mov
out
mov
push
push
pop
xor
xchg
fild
push
loop
sbb
inc
mov
pop
sbb
sar
repnz
sub
(bad)
xchg
movs
iret
push
je
outs
mov
mov
fistp
xor
and
or
add
jp
pop
mov
inc
and
pop
add
jbe
(bad)
fsub
pop
push
jb
pop
mov
lods
out
xchg
icebp
inc
add
lds
lock
icebp
mov
pop
xor
or
xor
stos
enter
lahf
and
xchg
mov
push
int3
xchg
iret
mov
mul
test
test
and
add
jb
push
mov
jp
pop
or
jmp
inc
out
fistp
scas
fwait
into
mov
(bad)
ins
std
mov
out
icebp
jp
push
adc
dec
in
bound
inc
pop
add
cmp
push
ret
jecxz
shr
adc
add
and
scas
int3
fwait
test
and
jg
or
and
add
es
xchg
add
inc
cmps
cmp
push
in
sbb
fcmovbe
stos
repnz
mov
frstor
mov
cmp
push
neg
and
pop
adc
and
outs
(bad)
jle
or
inc
and
jae
cmp
mov
add
jecxz
ror
rcl
dec
stc
dec
loop
int3
and
bound
inc
sbb
cli
stos
jmp
aad
mov
sbb
sbb
inc
mov
aaa
je
cmp
retf
loop
fcomp
bound
imul
in
jno
dec
ret
and
pop
mov
bound
dec
xor
mov
test
dec
add
mov
call
cmps
in
in
pop
cmp
jae
push
retf
sahf
in
mov
pusha
mov
call
xchg
jmp
les
mov
inc
dec
ss
push
daa
loopne
xchg
aam
ror
loop
or
or
out
js
movs
out
mov
rcr
xor
scas
cld
adc
movs
cmc
cdq
push
and
push
sbb
mov
das
or
jp
shl
mov
fisub
(bad)
out
test
mov
mov
out
lds
jb
sub
pextrw
enter
adc
push
jp
sub
arpl
clc
mov
lahf
push
jg
jnp
pop
or
loopne
int3
xchg
dec
xchg
jmp
sub
pop
xchg
push
push
ss
fsqrt
pusha
es
(bad)
(bad)
mov
aam
stos
int3
add
jmp
rcr
cli
jnp
dec
adc
je
ins
aaa
push
or
retf
mov
sbb
std
in
std
mov
dec
jbe
jg
add
out
fiadd
push
push
in
lea
mov
cwde
fadd
fdivr
jns
jg
and
xchg
adc
outs
mov
add
fisub
push
mov
into
mov
mov
outs
mov
scas
lock
or
inc
out
std
scas
stos
test
mov
dec
or
or
fistp
out
div
test
ficomp
aaa
dec
or
daa
fs
aaa
push
dec
push
hlt
xchg
lds
adc
cld
sbb
cmc
xchg
int3
fbld
push
loope
scas
mov
mov
mov
les
mov
sbb
test
outs
and
and
or
mov
jae
inc
or
fstp
mov
push
adc
pushf
fst
lea
sub
call
add
push
adc
add
push
sbb
out
stos
mov
dec
jmp
jmp
div
mov
jae
dec
adc
xor
fisubr
fsub
dec
pop
pop
sbb
dec
mov
in
(bad)
ja
aas
jp
xor
and
cmc
mov
outs
cmp
daa
inc
add
sbb
fsub
push
sbb
sbb
imul
adc
std
data16
mov
sub
sbb
mov
movs
imul
mov
mov
mov
dec
adc
mov
cmp
pop
mov
pop
push
push
or
inc
push
das
out
hlt
(bad)
int3
mov
out
outs
ss
imul
cmps
lds
out
pop
mov
ds
aad
icebp
push
nop
fist
mov
sub
dec
mov
fmulp
xchg
cmc
xchg
dec
dec
packsswb
ffreep
mov
(bad)
xchg
hlt
arpl
mov
cdq
push
jb
jge
cmc
icebp
gs
and
sub
(bad)
popf
(bad)
mov
je
jecxz
stos
in
mov
mov
xchg
pusha
cli
fwait
aam
in
mov
jmp
mov
inc
ror
xchg
or
ins
daa
push
or
push
or
push
(bad)
jp
jbe
and
(bad)
movs
jecxz
(bad)
pushf
jmp
inc
ror
out
xlat
gs
cwde
cmps
in
(bad)
sti
xor
inc
push
pop
cmp
pop
and
sbb
leave
mov
xchg
inc
jl
xchg
cmps
adc
inc
sbb
pusha
sub
mov
xor
xchg
xor
les
dec
cmp
loope
fwait
ret
mov
cmp
loope
ficom
lock
ins
mov
lahf
cmp
and
pushf
stc
or
cmp
adc
xor
mov
adc
jnp
jnp
jns
dec
pop
xor
sub
cmp
inc
or
push
loope
loop
push
adc
pop
sbb
fstp
call
sub
cmp
xchg
scas
ficomp
push
adc
pop
push
cmp
shl
mov
ins
and
dec
or
mov
cmp
ror
xchg
cmps
retf
xchg
cdq
div
mov
call
imul
add
dec
add
shl
mov
fwait
mov
xchg
into
cmp
(bad)
lea
lods
iret
jg
jmp
ficomp
mov
xor
push
mov
test
iret
pushf
std
xchg
xor
jnp
(bad)
stos
fistp
adc
push
xor
pop
dec
or
cmp
xchg
xchg
mov
imul
je
js
in
fisub
cdq
enter
popf
cmps
rcl
mov
jl
or
outs
out
mov
ins
in
push
mov
sub
push
pop
inc
sub
jmp
in
mov
stos
in
mov
mov
jecxz
iret
xchg
clc
lods
jno
jb
dec
and
loop
mov
adc
pop
cmp
and
sub
mov
imul
arpl
adc
pop
mov
push
add
xor
jle
retf
xchg
mov
cmp
popa
push
inc
xor
jae
inc
repnz
add
ss
adc
add
cs
mov
mov
push
inc
out
mov
dec
sub
sbb
or
jl
loope
ret
addr16
and
arpl
inc
adc
mov
mov
aaa
pop
cmp
push
adc
gs
mov
pop
xor
xchg
retf
xchg
addr16
cs
sub
popf
fiadd
out
cmps
cli
arpl
aas
arpl
loopne
hlt
test
repz
xchg
cld
mov
cmp
adc
call
xor
cmp
xchg
rcr
inc
adc
bound
js
xor
dec
adc
loop
out
mov
push
jle
(bad)
mov
stc
mov
stc
mov
int3
lahf
call
shl
mov
test
fstp
or
sub
jp
cmp
sub
popf
lds
cmp
lds
inc
cmp
pop
sbb
jo
push
loopne
ret
push
test
dec
and
sub
js
mov
jmp
push
adc
pop
movs
or
daa
inc
add
sbb
xor
outs
ss
jecxz
std
cwde
ins
movs
loope
int
push
imul
pop
add
adc
jle
call
cdq
cmc
test
test
or
lds
cli
mov
not
les
aaa
jne
jb
xlat
(bad)
xchg
rcl
je
dec
test
mov
cmp
push
cmp
sub
aas
pop
pusha
int3
cmp
(bad)
mov
scas
push
sub
sub
jmp
repnz
cdq
sar
pop
pop
jbe
xchg
aam
repnz
aam
out
loope
fsubr
adc
call
xchg
cli
cdq
rol
or
movs
xlat
mov
inc
aam
lock
(bad)
out
xor
or
retf
push
and
pop
dec
push
es
push
cmp
js
mov
(bad)
rcl
ds
pop
pop
jbe
dec
clc
and
and
pop
sbb
sbb
pushf
out
mov
mov
mov
mov
push
xor
shr
in
mov
sub
ret
scas
sti
mov
ret
sahf
(bad)
mov
lock
cwde
rcl
mov
jns
jno
loope
adc
xor
sub
call
push
mov
dec
adc
out
fist
into
mov
add
cmovle
sbb
imul
loop
lock
jne
pop
sbb
out
test
scas
mov
sahf
dec
je
dec
push
push
fidiv
mov
xchg
or
movs
mov
mov
inc
pop
dec
cmp
inc
sbb
pop
inc
pop
jne
cmp
pop
pop
outs
add
out
jmp
sti
xchg
mov
fwait
fs
jge
add
imul
pusha
add
mov
mov
lods
stc
xchg
pop
xor
push
push
cmp
sub
or
repnz
lahf
mov
cmc
mov
xchg
hlt
mov
cmp
les
pop
xor
push
std
jne
push
out
sub
lock
cmp
cmp
or
dec
rcl
les
mov
bound
dec
or
inc
or
call
call
jbe
repnz
push
adc
mov
xor
outs
aaa
push
xor
dec
ins
sub
or
jl
jns
push
mov
std
lahf
scas
rol
inc
or
inc
add
sub
cli
xchg
fsub
push
sahf
lds
ins
xor
std
mov
inc
out
js
mov
push
pop
jp
dec
or
sti
xchg
aam
retf
xchg
xchg
cmp
and
minps
sbb
sub
fs
dec
or
les
stc
fwait
enter
rcl
xchg
in
mov
mov
mov
push
hlt
cmp
sub
int
fs
pop
fdiv
jge
ja
mov
sar
imul
jb
enter
aad
push
and
adc
ret
add
leave
stos
enter
dec
push
dec
or
cs
sbb
test
nop
leave
mov
loope
call
mov
cmp
xchg
cli
mov
inc
and
scas
int3
mov
mov
mov
fwait
mov
xor
dec
add
dec
add
sbb
aad
mov
movs
rcr
sub
pop
aas
and
push
xchg
shl
xlat
call
sahf
push
push
cmp
daa
ins
add
sahf
in
scas
mov
sbb
push
sbb
push
je
bound
dec
or
cmps
rcl
jmp
out
aad
repz
popa
daa
push
adc
lock
stos
cld
popf
mov
add
mov
cmp
arpl
dec
sbb
xor
sbb
(bad)
mov
lods
ficom
cwde
repz
popa
aad
and
mov
ficomp
add
mov
xchg
fdivr
cmp
leave
(bad)
lods
jmp
cwde
fstp
mov
mov
mov
es
data16
pop
aad
(bad)
mov
sub
les
add
dec
das
sub
fist
bound
loopne
inc
pop
cmp
out
fist
hlt
mov
mov
jp
ins
sub
outs
cmp
popf
fdivr
pmaxsw
ds
jne
mov
fs
cwde
cli
xchg
xor
mov
adc
adc
sbb
je
and
inc
es
or
dec
and
rcl
bound
inc
sub
sbb
inc
(bad)
cdq
ficom
xlat
jl
ficomp
dec
mov
int
ret
in
push
adc
pop
loop
and
and
inc
sbb
cmps
push
pop
ds
jae
jns
push
in
xor
cli
mov
cwde
out
mov
jecxz
fistp
shl
ja
popa
sbb
inc
out
std
mov
xchg
test
ins
mov
push
adc
ins
in
mov
xchg
xchg
scas
cld
xchg
clc
cdq
(bad)
test
outs
cmps
ins
cmp
push
dec
add
sbb
adc
ss
cmp
pop
out
mov
ins
cmp
fbld
push
cs
(bad)
into
xchg
in
or
(bad)
mov
mov
les
lea
sahf
std
mov
inc
out
cli
std
ins
ds
imul
dec
in
sub
jle
jno
es
mov
mov
imul
mov
mov
(bad)
cmp
mov
mov
cli
popa
popa
add
dec
ror
push
and
ret
push
add
sub
outs
sub
pop
out
ins
push
lock
jb
jmp
daa
ins
mov
idiv
(bad)
mov
fs
and
ja
sbb
mov
ins
sub
mov
and
add
lahf
adc
dec
or
inc
ds
mov
and
lahf
int
or
iret
fisttp
sti
mov
and
fisub
dec
xchg
aaa
dec
xor
cs
test
mov
movs
shl
daa
fs
dec
and
mov
hlt
push
adc
cmp
xchg
into
mov
bound
inc
adc
ret
add
leave
stos
enter
jge
push
pop
sbb
mov
xor
add
mov
xchg
fstp
mov
push
ss
int
inc
rcl
xlat
mov
push
and
imul
test
mov
mov
in
mov
xor
jmp
cmp
inc
push
dec
pop
cmp
dec
aas
jns
je
push
xor
push
adc
lods
loop
xchg
icebp
mov
out
movs
enter
xlat
xchg
out
sub
out
fist
jno
jo
jno
push
daa
outs
aaa
inc
pop
out
mov
cmps
lahf
cli
mov
test
sahf
cld
mov
cli
mov
xor
stc
mov
push
cmp
push
(bad)
or
imul
imul
mov
outs
movs
sti
mov
rcr
sbb
ins
sub
add
pop
push
jg
or
movs
in
test
mov
movs
(bad)
movs
jmp
(bad)
cmps
shl
(bad)
movs
lock
push
cli
cdq
sti
mov
sti
mov
sub
jle
and
push
xor
inc
and
imul
push
xor
jb
dec
out
ins
and
aas
inc
and
add
mov
iret
xchg
out
fild
xchg
retf
mov
cmp
xor
sub
xchg
shl
mov
xlat
cmp
ins
and
mov
aaa
les
pop
pop
inc
sbb
pop
sub
mov
jg
imul
arpl
mul
sbb
movs
or
dec
fucomip
or
xchg
(bad)
mov
jns
push
and
or
mov
stos
hlt
jge
pop
adc
jno
pop
and
and
mov
cmps
loopne
and
push
xor
fldenv
push
xor
lods
repnz
sti
call
inc
or
add
(bad)
(bad)
into
test
push
outs
loop
mov
(bad)
imul
push
mov
cdq
stc
mov
xor
inc
add
repnz
imul
xor
mov
ret
xchg
mov
cs
orps
xchg
jae
jb
inc
adc
mov
adc
pop
sbb
cmp
in
push
sub
mov
out
adc
in
scas
rol
jg
pop
jne
push
repnz
(bad)
aam
in
fidiv
sub
and
pop
xor
add
jecxz
loop
xor
adc
or
cmp
adc
cmp
push
dec
or
dec
hlt
sub
rcl
cmc
cli
test
(bad)
fiadd
add
inc
and
and
and
push
jae
cmp
pusha
add
ret
cdq
xchg
outs
xor
cmc
xchg
arpl
mov
clc
mov
arpl
jbe
sub
pop
mov
ficom
inc
sub
pop
cmp
and
mov
js
gs
dec
or
push
or
push
pop
sti
fild
cmps
jmp
les
arpl
and
fcom
pop
dec
sub
push
(bad)
and
ja
pop
out
mov
or
nop
mov
mov
mov
outs
stos
pop
push
dec
ss
adc
ret
xchg
fnsave
das
push
and
push
shl
and
push
inc
add
iret
call
rcl
scas
call
(bad)
test
jge
xchg
mov
fldcw
push
loop
les
hlt
test
add
(bad)
xchg
scas
rcl
push
sbb
enter
rep
call
cmp
lahf
shr
add
inc
repnz
sub
loope
xlat
pusha
repnz
out
sbb
jp
sub
call
mov
dec
aaa
dec
or
in
jmp
fadd
data16
(bad)
cmps
jmp
push
xor
add
mov
and
and
test
cmps
jno
and
cs
sub
imul
in
or
xor
xchg
lahf
popf
jne
push
shr
adc
in
push
fdivr
cld
xor
dec
std
js
pushf
js
xor
and
push
mov
jns
xchg
dec
scas
popa
lea
es
sti
inc
mov
xlat
or
je
mov
fist
lahf
outs
mov
and
hlt
dec
mov
stos
data16
je
nop
inc
mov
das
std
pop
aad
jecxz
movs
ins
int3
dec
mov
aad
jmp
das
or
pop
scas
inc
xchg
js
add
sbb
ret
sub
icebp
push
xchg
outs
mov
outs
icebp
pop
mov
mov
jmp
xor
pop
(bad)
mov
popa
ret
pop
lods
call
jb
and
dec
repnz
ret
xor
pop
mov
dec
aam
loop
stc
pop
nop
mov
fistp
aas
lock
pop
out
push
hlt
inc
mov
ss
cmps
ins
fistp
jp
sahf
push
adc
lods
call
(bad)
or
loopne
enter
neg
mov
dec
scas
jg
ss
aas
adc
and
sub
pop
scas
inc
mov
rol
ret
dec
rol
adc
add
cmp
shr
(bad)
and
pop
add
mov
mov
jo
jge
cdq
inc
shl
cmp
mov
fimul
cli
inc
(bad)
or
cli
and
nop
dec
mov
cli
and
pop
jecxz
(bad)
xor
pop
mov
or
push
test
jg
cwde
outs
(bad)
jle
add
inc
pop
in
(bad)
(bad)
mov
xor
push
push
(bad)
push
mov
xor
xor
jo
data16
dec
cmps
xchg
inc
sub
inc
sar
push
test
jg
inc
mov
arpl
push
mov
jae
popf
dec
xlat
add
fild
in
ret
ret
pop
enter
mov
pop
adc
sub
adc
dec
cmps
xchg
lahf
ins
fadd
jmp
call
scas
(bad)
rcr
inc
fimul
addr16
xor
loope
aad
or
inc
stc
and
pop
loope
scas
mov
jle
push
adc
push
mov
and
lods
mov
mov
test
dec
fsubr
push
loope
loop
adc
in
dec
lea
xor
leave
add
cmp
imul
mov
and
or
push
aam
mov
inc
mov
inc
mov
pop
cmc
pop
lods
sahf
jns
mov
daa
push
loop
les
mov
or
(bad)
cmp
xor
push
add
shl
xor
sub
pop
sbb
aaa
(bad)
cmp
inc
test
ins
enter
mov
sbb
cmp
push
lods
imul
es
sar
sbb
pop
mov
xor
mov
fld
or
pop
test
fstp
sbb
dec
aad
or
dec
mov
or
adc
ret
movs
jnp
push
std
and
pusha
fisub
add
pop
aad
lds
jp
sub
cmp
push
mov
icebp
xor
ss
stos
jp
push
pop
adc
push
mov
sbb
pop
xchg
dec
mov
cmp
xchg
test
je
inc
(bad)
and
cmp
cs
scas
fbld
out
and
out
neg
push
lods
js
pop
out
pop
leave
daa
in
dec
stos
cwde
addr16
scas
xchg
dec
mov
sub
lods
inc
xchg
xchg
cdq
dec
mov
test
inc
test
neg
pop
leave
push
sbb
and
jmp
mov
outs
stos
inc
mov
(bad)
loop
xchg
outs
cmc
cmp
jmp
cmp
shl
or
pop
shl
retf
push
mov
pop
mov
fwait
(bad)
xchg
dec
ror
push
cmp
and
mov
jae
push
mov
add
dec
rcr
test
xchg
inc
cmp
in
push
test
loopne
std
sub
inc
fst
nop
fs
or
push
cmps
data16
push
fstp
pop
or
out
or
mov
push
push
mov
call
push
or
pop
mov
js
outs
out
sub
std
inc
enter
repnz
cmp
movs
inc
lea
push
xchg
es
xor
shl
outs
shr
sbb
daa
mul
and
nop
cld
pop
xchg
push
dec
loope
mov
adc
or
and
push
dec
repz
sbb
or
dec
stos
fimul
jne
and
out
lea
imul
jmp
or
aas
pop
mov
call
aas
jmp
push
loope
enter
mov
sub
shr
jmp
sbb
in
call
outs
cmc
ja
sub
push
mov
push
sti
arpl
sub
imul
adc
enter
sub
out
adc
call
retf
add
rcl
fidivr
cmp
out
loop
jecxz
lods
jp
or
and
(bad)
maskmovq
div
loopne
push
sti
inc
mov
mov
aaa
retf
dec
shr
xor
(bad)
and
dec
mov
push
int
sbb
push
test
cdq
imul
cmp
rol
push
test
call
imul
mov
cmp
sbb
imul
mov
sbb
xor
or
xor
std
inc
fisubr
add
dec
retf
out
or
push
iret
and
repz
push
repnz
mov
cdq
ret
jo
xor
pop
rcl
mov
push
xchg
jno
inc
mov
mov
mov
push
sbb
and
dec
test
sar
or
out
sub
call
cmps
arpl
adc
cmp
and
cmp
or
movs
xchg
xor
stc
pop
mov
imul
sbb
cld
dec
xchg
out
mov
mov
mov
rol
and
sub
jmp
cmp
dec
clc
cs
ficomp
jae
jge
aaa
sbb
div
sbb
adc
or
sub
jmp
pop
jl
cwde
dec
mov
in
push
(bad)
sub
les
sub
dec
test
pop
adc
pop
xchg
test
sub
and
push
cmps
xchg
push
lods
pushf
jmp
or
cmp
cmp
in
cmp
test
iret
imul
xor
inc
mov
mov
in
stos
inc
mov
retf
shl
mov
(bad)
jo
and
push
ret
or
add
add
sub
push
mov
jmp
adc
pop
and
adc
push
lea
icebp
das
cmc
add
mov
repz
and
clc
or
push
lds
in
stos
gs
mov
dec
mov
(bad)
mov
dec
cmps
pushf
jmp
cli
sub
sbb
test
or
sub
pop
mul
sbb
mov
mov
arpl
cmc
and
inc
aam
in
mov
les
sub
push
call
mov
scas
in
push
shl
sbb
imul
(bad)
pop
sbb
mov
(bad)
dec
mov
pop
out
sub
jno
push
int3
xor
push
int
jb
dec
(bad)
(bad)
cmp
jmp
pop
mov
sub
or
and
dec
jmp
(bad)
ds
out
pop
mov
mov
bound
ror
add
jne
and
(bad)
jge
ins
xlat
add
adc
xlat
pop
xchg
mov
jns
add
pop
or
jecxz
jmp
adc
pop
in
pop
mov
mov
push
mov
jecxz
cli
aaa
loop
adc
pop
mov
into
sub
mov
gs
add
les
xchg
ins
mov
or
outs
fisub
in
jbe
inc
mov
cmps
popa
int
pop
sbb
cmp
cli
or
sti
pop
fsub
shr
sbb
call
nop
inc
adc
pop
jmp
push
dec
mov
push
aam
mov
enter
push
sbb
shl
das
jmp
ins
mov
pusha
mov
mov
xchg
test
dec
hlt
es
int3
dec
mov
test
jg
sbb
dec
mov
mov
mov
mov
(bad)
xor
int
out
sub
out
mov
into
dec
scas
fs
jb
lea
sahf
in
jl
push
push
adc
inc
mov
jnp
xchg
jle
cdq
mov
sub
popf
mov
mov
retf
out
iret
pop
and
push
sti
pop
cmc
push
(bad)
sub
out
or
push
pop
mov
cmp
(bad)
aaa
push
stc
sub
lods
xchg
jo
mov
add
or
mov
sar
loopne
popa
iret
add
loop
cmps
les
(bad)
ficomp
or
retf
inc
rol
hlt
dec
shl
push
sbb
and
adc
sub
adc
mov
xchg
fwait
imul
ds
add
(bad)
jne
es
stos
aad
mov
xchg
inc
stos
test
popa
ret
ret
sub
clc
mov
cmc
pusha
daa
or
in
push
scas
dec
mov
jbe
add
sub
inc
adc
adc
and
out
pop
lock
test
push
icebp
cmp
in
cmp
sub
(bad)
pop
fldenv
repnz
mov
jnp
add
out
dec
fisub
(bad)
mov
mov
mov
adc
pop
mov
push
inc
mov
jae
and
xchg
data16
hlt
and
add
and
lock
and
push
add
jmp
fst
dec
scas
mov
dec
mov
push
push
mov
jb
add
and
cmp
lock
mov
and
xor
repz
movs
jno
clc
push
cli
add
dec
mov
es
xor
jmp
cld
es
pop
(bad)
push
enter
int3
(bad)
xchg
pushf
jp
jnp
jle
add
or
cli
push
mov
xchg
sub
sbb
inc
hlt
arpl
pop
fcomp
jbe
ins
xlat
cmp
(bad)
and
dec
xchg
aad
rol
push
sub
out
dec
xlat
cmp
lds
call
enter
fmul
mov
iret
cmp
dec
ret
lock
(bad)
outs
fist
inc
fisub
pop
add
pop
test
fsubr
(bad)
push
xor
pop
cmps
call
aas
int3
pop
fdivr
push
cli
adc
(bad)
cs
sub
jecxz
pop
jmp
fst
mov
dec
fsub
cmp
rcl
sub
or
ret
and
ins
cmc
jnp
jb
stos
test
lea
push
cmps
gs
sub
inc
test
mov
shl
inc
stos
arpl
pop
stc
pop
mov
daa
adc
sbb
pop
(bad)
loope
les
(bad)
es
icebp
pop
stos
xchg
jbe
pusha
leave
daa
loop
movs
jb
xchg
jnp
and
cs
loopne
js
add
lods
jnp
jbe
xchg
cmp
sbb
xor
push
mov
ins
mov
popf
jg
fwait
jnp
mov
clc
sub
movs
pushf
(bad)
js
push
cdq
dec
push
sub
xor
xchg
arpl
pop
mov
pop
lea
cwde
ins
mov
je
xchg
mov
pop
fidivr
dec
mov
shl
out
pop
test
inc
stos
je
test
pop
cmps
loopne
retf
cmp
inc
sar
sub
jle
cmp
sbb
je
dec
mov
fbstp
test
aad
sar
out
lds
fwait
lahf
mov
int
xchg
jp
call
stc
and
add
in
(bad)
push
mov
mov
imul
mul
imul
je
jae
or
xor
(bad)
sbb
pop
sbb
cmp
sti
xor
jmp
imul
xchg
jbe
cmp
and
or
in
rcl
std
jae
cmp
xor
in
dec
mov
mov
iret
xor
sbb
pop
ficom
jb
test
jge
mov
ds
pop
test
push
cli
dec
fldcw
retf
mov
aad
xchg
xchg
jae
dec
fiadd
cld
mov
mov
sbb
add
or
repz
dec
xchg
cmp
int
add
cmc
and
push
mov
std
dec
out
outs
fbstp
sar
add
dec
(bad)
push
hlt
dec
mov
jle
scas
jl
pop
xchg
xor
adc
inc
cmps
mov
daa
les
xor
cmp
daa
repnz
mov
mov
sbb
add
pop
sbb
lods
outs
fisttp
cld
aas
sbb
push
mov
inc
mov
cmp
pop
mov
jle
mov
(bad)
imul
fwait
popa
mov
fldcw
push
and
inc
int3
inc
aam
std
push
cmps
cmc
pop
aam
shl
out
xlat
cmp
movs
xchg
jg
inc
fild
adc
out
pop
pop
push
jmp
lock
lods
call
pushf
jno
jbe
inc
add
jecxz
adc
and
push
repz
mov
jmp
cmp
in
dec
retf
pop
cmps
in
add
dec
mov
push
mov
adc
cmp
push
xchg
xchg
loope
mov
xor
retf
add
in
sub
mov
dec
fild
lds
dec
fidivr
jge
xor
(bad)
ins
test
inc
test
add
pop
fnstcw
outs
or
jo
dec
mov
cld
sub
scas
xchg
(bad)
js
cmp
cmc
pop
sbb
sub
sbb
jne
ins
enter
jp
and
dec
ror
push
adc
sub
pop
mov
mov
pop
fisubr
adc
es
cmp
les
in
ins
xchg
inc
mov
les
popf
jnp
stos
leave
pop
lea
and
add
sbb
iret
ud0
inc
retf
or
xor
push
xor
into
add
outs
retf
jmp
mov
sub
inc
scas
sbb
pop
mov
dec
not
inc
shl
loop
outs
mov
inc
(bad)
jne
xor
push
rol
xchg
lahf
data16
push
pop
adc
push
xlat
aas
pop
jmp
push
test
inc
mov
and
sbb
inc
stos
push
and
imul
sbb
jl
ds
dec
ficom
into
push
int
or
jmp
in
enter
xchg
xchg
arpl
or
fist
ret
cmp
ds
lods
xchg
stos
mov
cmp
sbb
hlt
pop
mov
shl
fdiv
sbb
push
mov
les
les
daa
or
pop
fldcw
cmp
sbb
inc
(bad)
adc
nop
gs
(bad)
arpl
fistp
out
xor
push
fstp
xor
ds
and
xchg
inc
int
scas
mov
and
add
pop
test
adc
add
(bad)
pop
mov
jle
xchg
lods
popf
inc
fisub
push
mov
outs
mov
mov
mov
jne
jae
test
(bad)
leave
aaa
sbb
dec
fiadd
push
cmps
outs
movs
pushf
inc
adc
addr16
and
xor
call
dec
xor
sbb
and
sbb
sub
add
jbe
push
pop
stos
addr16
cmp
dec
test
bound
rcl
dec
mov
ret
push
xchg
inc
mov
test
mov
jb
popf
test
fdiv
cmp
sub
and
and
jno
dec
stos
mov
gs
push
call
mov
mov
aaa
loop
mov
rcr
xchg
fwait
(bad)
retf
loop
enter
test
jne
inc
mov
cmp
push
movs
lahf
js
jmp
adc
add
push
or
outs
fistp
sbb
jge
outs
sar
les
sub
xor
jg
push
dec
fnstsw
or
push
mov
cmp
retf
push
ror
xor
or
add
out
add
loope
sbb
pop
stos
lods
pushf
jb
jnp
nop
lods
mov
or
push
fnstcw
sbb
and
sub
jmp
retf
ss
cmps
jne
fild
sub
push
mov
pushf
dec
adc
ror
mov
jno
sub
pop
cmps
gs
sbb
icebp
and
add
inc
fisttp
repnz
lea
jns
sub
inc
(bad)
cmp
pop
mov
sar
or
cli
push
vpshaq
adc
ss
lds
icebp
dec
aam
mov
(bad)
push
retf
xor
pop
mov
add
push
mov
inc
leave
sub
dec
lods
xchg
popf
(bad)
js
jmp
test
sbb
call
rcl
out
cwde
push
popa
mov
sub
loop
sahf
dec
movs
xchg
jl
lahf
popa
mov
and
dec
xchg
aad
mov
mov
imul
lahf
inc
xchg
nop
jae
test
fst
push
sub
dec
sbb
push
in
cmp
fistp
in
pop
or
std
and
sub
sbb
or
pop
mov
je
nop
(bad)
fistp
ss
push
mov
in
dec
test
in
pop
xchg
pop
pop
and
sbb
les
lds
adc
cmp
sub
sbb
adc
and
or
aas
std
cmp
ret
xor
sub
(bad)
xor
psubq
ret
pop
movs
xchg
test
(bad)
add
inc
cmps
mov
mov
pop
sub
and
or
aad
or
jecxz
std
and
out
inc
aam
ror
repnz
mov
jmp
ja
mov
inc
scas
xchg
inc
mov
enter
sbb
pop
fadd
(bad)
mov
test
xlat
cmp
and
jno
push
xchg
jne
and
loope
jecxz
mov
xchg
xchg
inc
sbb
loope
ret
adc
js
jnp
aas
ret
add
in
cld
inc
lods
xchg
xchg
jno
repz
pop
les
ficom
(bad)
mov
test
outs
cmc
addr16
cmp
or
sti
pop
enter
mov
dec
(bad)
sub
dec
adc
add
psubd
sbb
push
mov
sub
inc
mov
inc
mov
mov
mov
cli
sub
sbb
out
jg
test
ja
push
xor
popa
leave
dec
into
push
mov
fidiv
dec
xchg
cmp
push
lds
arpl
pop
mov
add
push
mov
dec
fbstp
xor
cs
xlat
push
mov
ds
cmp
inc
mov
xor
xor
dec
enter
popf
imul
push
xchg
jmp
repnz
ds
push
shl
dec
mov
rol
pop
fidivr
jbe
imul
inc
test
out
and
sbb
xor
add
scas
(bad)
mov
and
das
sti
push
mov
ret
dec
mov
inc
leave
xor
pop
fmul
add
mov
scas
arpl
or
push
mov
add
out
test
xchg
xchg
je
sub
outs
(bad)
jl
cdq
inc
mov
aad
mov
gs
add
pop
pop
sbb
inc
mov
stos
jle
add
(bad)
cmp
adc
add
les
(bad)
xor
das
aas
ret
cmc
and
dec
aam
adc
int
out
pop
ficomp
jo
mov
std
add
and
or
push
mov
pop
adc
int
in
cmps
imul
lds
loopne
scas
cwde
jp
sub
push
mov
(bad)
div
add
push
sar
jmp
fisttp
idiv
mov
mov
jg
mov
jp
xchg
cdq
dec
icebp
dec
(bad)
sub
das
sbb
out
dec
xchg
inc
and
sbb
das
add
sti
xor
add
inc
mov
stos
xchg
jg
std
cmp
jo
and
dec
or
addr16
retf
push
not
xchg
push
fdivr
es
add
xchg
in
mov
mov
jno
lock
daa
sbb
rcl
rcl
sub
out
rol
mov
mov
push
pop
scas
jb
and
add
ds
(bad)
xchg
jbe
xor
pop
xchg
mov
mov
fnsave
enter
pop
xchg
scas
imul
adc
mov
fcomp
lea
xor
in
pop
cmps
ja
xchg
or
push
lods
inc
add
or
jne
and
pop
cld
sub
add
dec
mov
xchg
xchg
adc
nop
nop
inc
sar
sbb
xor
inc
ret
and
adc
or
push
ret
sbb
pop
mov
into
ja
ds
sbb
and
ds
aas
jecxz
mov
cmp
add
mov
test
ins
mov
cmp
popf
dec
fisubr
sbb
pop
fcomp
iret
sub
xchg
lahf
push
add
and
jmp
lods
and
cdq
jnp
(bad)
mov
jns
adc
mov
repnz
and
sub
lea
jmp
and
xchg
jb
ret
xchg
gs
movs
jne
jecxz
jnp
or
xchg
call
retf
ror
jl
loop
add
xchg
dec
and
push
cmovs
fwait
jne
int
jae
adc
fmul
js
mov
inc
or
js
(bad)
adc
out
pop
adc
imul
xor
mov
push
jmp
mov
fstp
retf
mov
pop
pop
xor
in
shl
mov
pop
add
scas
inc
sbb
outs
adc
xlat
xchg
and
or
mov
jecxz
int
cmp
pop
out
mov
xchg
xchg
mov
neg
cmc
xchg
jo
(bad)
mov
mov
or
dec
or
cmp
adc
rcr
mov
cwde
push
mov
into
pushf
dec
das
add
mov
dec
out
sub
outs
in
cmp
pop
push
cmp
repz
jmp
test
xor
stos
xchg
sar
mov
xchg
(bad)
sbb
(bad)
cs
xchg
(bad)
jp
mov
icebp
pop
adc
pop
mov
dec
sbb
mov
jb
sbb
je
retf
mov
scas
in
es
stos
in
dec
and
mov
loop
sub
lods
fistp
adc
mov
sahf
aam
push
test
pop
sbb
mov
rol
mov
das
ins
addps
call
sbb
out
(bad)
andnps
mov
mov
push
adc
es
xchg
push
adc
mov
adc
inc
sar
mov
lods
loop
mov
mov
sbb
daa
push
ins
out
xchg
adc
mov
out
test
jns
xchg
inc
ss
jge
cmp
retf
inc
ud0
stos
in
push
sbb
xchg
jge
sbb
sub
sub
test
fidivr
int3
add
add
movs
cwde
fisub
imul
xor
jp
cmc
jle
icebp
mov
xor
inc
mov
retf
sub
test
pop
cmp
mov
or
lods
outs
sbb
mov
(bad)
pop
push
jmp
mov
push
push
or
call
xchg
ins
ds
jnp
loopne
bound
enter
inc
jmp
popf
out
dec
cmp
scas
in
push
sbb
stos
fs
stos
addr16
dec
mov
add
lahf
pushf
fisttp
les
jp
or
push
(bad)
pushf
push
adc
mov
stos
fldcw
ins
mov
into
lea
repz
sub
test
(bad)
xchg
mov
dec
sbb
stos
xchg
(bad)
das
ins
mov
(bad)
and
mov
movs
(bad)
aaa
je
mov
push
push
mov
ret
cli
mov
aaa
jo
add
test
jne
into
xor
sub
xchg
inc
add
xchg
mov
xchg
clc
inc
xor
sub
pop
sbb
(bad)
push
pop
sbb
aad
pop
leave
mov
mov
mov
stos
jmp
and
sub
hlt
pop
sbb
leave
xchg
lds
push
sbb
ins
fld
sti
test
add
call
add
and
xlat
pop
sub
adc
jecxz
add
pop
sbb
xor
lods
cmc
xor
mov
aam
ins
div
adc
popf
jns
or
adc
(bad)
ins
scas
in
das
pusha
xchg
sub
fistp
pop
lds
popa
cmp
mov
mov
jbe
into
lea
adc
mov
jmp
pop
mov
mov
mov
xchg
xchg
in
pop
adc
lea
push
jne
xor
dec
test
push
adc
jp
out
ds
mov
in
scas
outs
sub
jecxz
fstp
fwait
outs
sub
push
lods
fmul
push
ret
xor
pop
and
aaa
in
ins
push
aam
arpl
adc
aad
adc
mov
int
dec
or
add
mov
xlat
pop
pop
stc
mov
and
add
or
xchg
cdq
cli
and
jecxz
dec
xchg
aad
mov
iret
sub
lahf
bound
lds
sbb
jmp
aaa
jno
xchg
popa
adc
ss
sti
ss
stos
mov
ds
cmps
cwde
(bad)
fcom
std
mov
cmc
mov
fisttp
sbb
gs
pop
mov
pop
sub
sub
lds
outs
leave
mov
in
and
add
xchg
xchg
sar
dec
mov
ret
mov
mov
daa
adc
imul
gs
aam
cs
dec
retf
test
jmp
jle
shl
cmp
jge
scas
outs
sub
pop
mov
mov
sub
lods
jmp
cmp
add
pushf
jl
enter
add
cs
xchg
std
cmp
movs
xchg
in
push
retf
fld
leave
xchg
call
jns
std
sub
div
outs
fimul
stos
jmp
shl
cmc
mov
adc
popf
outs
sub
hlt
mov
xchg
test
mov
mov
cmp
mov
push
jnp
mov
mov
dec
cmp
dec
xchg
dec
add
pop
sbb
or
in
ins
ficom
aam
xor
mov
add
fwait
jle
or
fcomp
int
inc
pop
shl
dec
int
sub
dec
fisttp
cmps
in
xor
jmp
mov
xchg
out
lea
adc
xchg
jb
adc
sar
sti
push
adc
retf
test
loopne
outs
or
jae
imul
pushf
into
xor
xchg
push
adc
nop
pushf
(bad)
sub
lds
inc
xor
pop
mov
xchg
shl
hlt
push
aaa
cli
mov
mov
out
sbb
mov
add
mov
xchg
push
push
lds
enter
lods
out
push
sbb
fild
or
out
sub
dec
fstp
push
jmp
mov
call
xchg
cmc
pop
sbb
scas
mov
es
dec
fcomp
stos
repnz
jl
loop
add
mov
cmc
mov
fidivr
and
or
sbb
movs
ret
and
cli
das
pusha
ror
mov
mov
cmp
les
push
add
mov
inc
cmps
loopne
inc
mov
or
int3
pop
jns
adc
(bad)
pop
mov
push
and
pop
cmps
in
rol
add
push
lods
out
aas
pop
xchg
cmp
clc
and
mov
mov
into
jbe
movs
ins
sub
push
(bad)
mov
cmp
mov
xchg
mul
dec
add
adc
repz
retf
pop
pop
hlt
xchg
out
lods
(bad)
int
push
sbb
and
mov
jl
sbb
fistp
in
push
cmp
movs
cdq
sti
and
fdivr
add
or
(bad)
dec
push
sub
xchg
push
sbb
icebp
ins
mov
mov
pop
cli
mov
mov
mov
scas
fsubr
ja
iret
aaa
ins
fimul
xchg
(bad)
push
mov
adc
xchg
pusha
repnz
cmp
and
ror
dec
ret
scas
dec
or
mov
in
daa
rcl
int
addr16
and
int
xchg
ror
push
mov
mov
pop
cmp
cmps
bound
hlt
mov
push
adc
mov
mov
not
fisttp
jmp
xchg
cdq
fidivr
push
mov
out
xchg
loope
cmp
push
mov
call
jns
call
lods
dec
nop
loop
daa
sub
call
or
xlat
nop
inc
sub
sbb
xchg
in
ins
fcomp
(bad)
mov
jne
ret
cmp
sub
lods
iret
aas
push
sbb
out
pop
or
cwde
and
pop
scas
fiadd
pop
ficomp
lds
lods
into
or
fstp
(bad)
retf
fisubr
mov
fisubr
js
mov
(bad)
adc
aam
inc
test
mov
enter
cmps
sub
xor
int3
add
xchg
gs
mov
rcl
mov
in
sbb
mov
add
mov
mov
pop
sbb
mov
mov
pop
push
aad
pusha
das
out
cdq
ret
pop
push
sbb
fs
outs
sbb
push
dec
std
scas
fdivr
add
stos
xchg
lahf
fadd
adc
mov
ss
mov
pushf
and
or
jne
movs
ror
cmp
xchg
push
repnz
rep
sub
cld
mov
dec
mov
dec
sub
jle
cwde
jle
mov
xchg
mov
mov
retf
cmps
jmp
add
and
arpl
mov
ds
ins
cs
xchg
dec
sbb
scas
test
outs
sub
sbb
cmp
sub
cld
pop
pop
in
jb
loopne
jl
sub
out
sbb
imul
arpl
cld
movs
xchg
(bad)
pop
cmp
outs
fstp
mov
push
inc
test
adc
mov
xor
aaa
cmc
mov
cwde
retf
cmp
loopne
or
jno
xchg
addr16
pop
(bad)
test
jp
jb
pop
in
(bad)
mov
imul
mov
xchg
(bad)
jne
add
adc
(bad)
test
arpl
mov
cld
jg
aas
addr16
mov
dec
daa
pop
sbb
pop
enter
jle
das
inc
cld
mov
dec
fisttp
inc
add
mov
ret
pop
cmp
mov
scas
fnstsw
inc
rcr
mov
inc
and
push
mov
mov
ror
sub
sbb
call
mov
pushf
jae
or
xchg
ins
and
sub
test
std
sahf
push
aas
aas
jl
stos
ins
cs
lahf
push
adc
sbb
shl
pop
rcr
jo
sbb
xchg
mov
out
dec
adc
pop
fnstcw
or
in
scas
mov
data16
mov
inc
mov
iret
lods
mov
jb
mov
adc
hlt
xchg
mov
pushf
fisttp
aaa
je
mov
(bad)
mov
xchg
sar
jl
repz
or
inc
push
sbb
ror
xchg
ret
sub
fadd
inc
mov
sub
mov
aam
push
sti
mov
sbb
mov
xor
std
and
inc
enter
repz
nop
mov
lea
rcl
xchg
not
in
and
adc
std
add
mov
in
mov
xor
das
pop
mov
pop
sbb
mov
sbb
test
das
dec
mov
loop
cs
mov
sbb
clc
or
leave
pop
or
popf
and
dec
iret
mov
outs
ss
cmps
lds
push
add
push
hlt
xor
lds
sub
inc
mov
jg
pop
push
xlat
cwde
fs
aad
cwde
call
mov
fwait
cdq
lock
fdivr
inc
push
call
shl
mov
out
outs
fstp
fldcw
mov
fwait
popa
or
mov
call
jge
adc
leave
mov
push
out
add
sub
sub
retf
xor
pop
movs
aam
pop
movs
out
ja
(bad)
jns
std
xchg
outs
sub
jnp
nop
call
not
cmp
iret
push
inc
aad
outs
and
and
shl
jo
lods
cdq
sar
mov
iret
sub
fidivr
jp
mov
rcl
xchg
loop
sub
cmps
xchg
push
sbb
mov
mov
xor
mov
test
and
add
mov
not
retf
mov
cmps
mov
jge
ror
and
mov
jg
jmp
inc
mov
cmp
int3
add
in
and
test
adc
leave
aaa
inc
mov
or
mov
xlat
cmp
sbb
jp
xchg
xchg
aad
adc
xchg
jne
into
cmps
xchg
(bad)
cmp
in
dec
sub
mov
cmps
aam
jbe
mov
imul
and
rcr
mov
cmp
mov
and
xchg
cdq
retf
cmp
xlat
or
enter
mov
arpl
popa
icebp
xor
(bad)
inc
sbb
cmps
xchg
icebp
add
out
dec
xchg
imul
xchg
inc
adc
lods
xchg
clc
es
enter
cmps
xchg
aad
dec
mov
push
push
mov
pop
dec
aad
jge
add
in
sub
fcom
fstp
fidivr
cmp
jne
in
mov
push
aas
out
mov
mov
mov
fimul
xchg
fist
adc
lahf
mov
pop
mov
xor
mov
ficomp
shl
retf
mov
xchg
loop
sbb
lock
sub
push
mov
pcmpgtd
fwait
jg
cli
mov
adc
stc
pop
sub
hlt
mov
mov
repz
ins
xlat
popf
test
pop
add
(bad)
xchg
jp
adc
xchg
jnp
(bad)
mov
adc
and
push
sbb
xchg
cdq
ret
push
add
add
mov
sbb
or
call
mov
clc
es
mov
push
es
jge
mov
scas
loopne
or
mov
add
push
int
out
call
push
std
mov
pop
jne
xchg
dec
daa
cld
mov
cmp
mov
jp
in
inc
push
(bad)
movs
jb
push
inc
shl
adc
sub
dec
movs
(bad)
xor
retf
dec
add
inc
fild
rol
dec
or
lods
mov
pushf
inc
cs
mov
sbb
cmp
xchg
mov
add
dec
cmp
mov
popf
iret
cmp
jmp
and
adc
push
lods
fiadd
enter
or
mov
inc
and
mov
and
pop
lods
hlt
and
xchg
cmp
mov
or
stos
popf
call
jmp
into
add
mov
cmps
call
ins
ds
xchg
sar
jne
ror
(bad)
xor
mov
mov
mov
push
loope
call
and
mov
pop
and
push
std
mov
push
jmp
mov
fnsave
enter
pop
mov
js
mov
add
retf
test
enter
stc
mov
jl
jmp
push
lock
push
xor
lock
xchg
outs
add
movs
push
fdiv
jne
ret
push
sbb
mov
xchg
rol
dec
int3
mov
ret
mov
pusha
and
(bad)
jns
pop
push
sbb
adc
mov
jl
add
loop
xchg
fstp
pop
push
cmps
les
cld
mov
xor
dec
scas
in
cmp
lea
adc
pushf
gs
ret
imul
sar
sbb
pop
mov
add
jl
jmp
test
jmp
mov
cdq
cmps
mov
ficom
adc
in
add
push
and
scas
push
(bad)
mov
call
int3
xor
inc
add
push
lods
(bad)
jge
out
xchg
loopne
dec
stos
in
push
cmp
mov
loop
outs
sub
cmp
loope
sub
iret
mov
(bad)
cmps
xchg
shl
xchg
push
adc
movs
add
das
out
cdq
cmc
sub
aam
dec
mov
ja
stc
mov
or
scas
imul
or
mov
pop
push
sbb
in
dec
sub
pusha
das
inc
mov
das
ins
mov
rcr
pushf
push
std
mov
jmp
xchg
enter
push
rcl
movs
cld
sub
mov
cmp
cld
lahf
dec
daa
sbb
ret
cmp
sbb
movs
pusha
daa
pop
repnz
xchg
fsub
jl
fmul
push
shl
test
or
scas
dec
pop
(bad)
xchg
inc
and
add
shl
mov
mov
dec
or
pop
ficom
mov
push
adc
sbb
rcl
fidivr
outs
or
sbb
(bad)
jecxz
dec
adc
loopne
pusha
and
stc
mov
xlat
pop
add
or
mov
cmp
sti
mov
mov
push
dec
test
daa
fs
leave
pop
sbb
pop
sub
dec
mov
mov
jp
sbb
cli
and
mov
jae
repnz
mov
xchg
gs
je
jmp
rcl
mov
xchg
pop
mov
into
pop
rcl
outs
add
cmps
cwde
jmp
aas
sub
in
sub
cmc
pop
add
mov
lahf
xchg
out
and
test
int
push
xchg
aad
inc
rcl
outs
add
mov
xor
test
push
mov
and
fmul
cmp
mov
cmp
mov
cmp
mov
stc
and
and
cmps
arpl
in
stos
xchg
stc
ds
scas
gs
or
inc
fcom
xlat
xchg
mov
scas
cwde
rcl
push
xchg
aas
pop
(bad)
out
ins
repnz
ins
das
(bad)
pushf
push
adc
test
adc
and
stc
push
adc
mov
sub
rcl
(bad)
aam
(bad)
data16
sahf
add
shl
je
es
shl
dec
push
push
rcr
adc
inc
out
mov
sahf
fstp
sub
mov
outs
stos
in
cmps
jb
xchg
sahf
in
push
fwait
mov
mov
and
dec
add
(bad)
rcr
nop
jbe
out
xchg
add
loop
push
add
pop
xlat
nop
inc
or
mov
lods
jecxz
or
mov
add
aad
pushf
in
pop
add
lods
inc
sbb
sahf
jge
lds
test
lods
dec
or
or
cs
mov
sbb
lods
mov
cmp
out
sub
(bad)
aam
popf
mov
pusha
sti
xchg
je
sub
jmp
jge
push
jge
fbstp
jne
nop
bound
jp
add
adc
xchg
inc
sbb
mov
test
and
inc
mov
add
xchg
imul
push
adc
lods
cwde
xlat
and
sar
pop
out
jne
out
lods
js
adc
fild
push
xchg
outs
or
and
ins
cmc
xchg
into
lea
add
rcr
mov
xchg
in
mov
sub
mov
or
leave
and
shl
in
stos
mov
cwde
jge
ror
in
dec
sub
sbb
aad
xchg
retf
cmp
lds
push
sahf
xchg
neg
(bad)
stos
inc
add
mov
cdq
fild
sbb
and
rcl
mov
cmp
push
adc
dec
mov
inc
daa
sbb
cmps
in
and
cmps
lds
addr16
adc
mov
fcom
std
scas
pushf
dec
dec
mov
xor
mul
arpl
mov
call
or
xchg
add
dec
mov
add
cmps
in
mov
push
push
pop
xchg
and
out
push
or
test
scas
int3
xor
push
mov
nop
lahf
je
or
pushf
out
inc
xor
outs
retf
sti
ss
xchg
pushf
iret
sub
sahf
dec
add
rcr
sbb
(bad)
ds
mov
aas
pop
mov
or
pushf
mov
jl
ds
mov
mov
mov
xlat
dec
or
mov
inc
add
js
sbb
mov
and
sub
loopne
push
mov
add
std
and
pop
add
add
loopne
das
out
bound
adc
mov
shl
xchg
cmp
inc
aaa
out
jbe
adc
cdq
mov
sub
xchg
xor
in
adc
fwait
jo
sbb
cli
aaa
gs
bound
div
add
xchg
add
xchg
push
add
in
xor
pop
(bad)
inc
fidivr
je
(bad)
dec
icebp
push
jle
mov
adc
and
xor
loope
pop
jle
sti
loopne
out
(bad)
sbb
icebp
push
push
mov
push
cmp
(bad)
shl
addr16
jle
sub
outs
stos
add
inc
dec
adc
sub
in
dec
call
cmps
retf
sub
cs
mov
or
push
jp
fiadd
add
mov
mov
es
sub
mov
inc
xlat
test
push
xlat
xchg
sahf
stos
mov
cmps
in
cli
dec
loope
stc
sub
mov
outs
sbb
and
ss
xor
xor
mov
cmps
popf
or
cli
nop
sbb
pop
gs
or
mov
out
add
mov
int
(bad)
aas
and
sub
xchg
test
lds
out
cmc
mov
xchg
int3
pop
sbb
int
hlt
fiadd
fild
iret
push
add
ins
fld
(bad)
sbb
and
xor
mov
push
scas
hlt
das
push
xor
lea
stc
cs
lea
sub
fistp
in
aaa
sub
mov
pop
cmp
inc
loopne
mov
push
inc
pop
sub
xchg
call
inc
out
jnp
shl
xchg
int3
jmp
out
pop
mov
inc
scas
or
mov
adc
out
loop
push
xor
sahf
mov
leave
aam
push
ror
inc
mov
std
rol
aad
cs
sbb
pop
push
popa
jmp
pop
call
test
and
jbe
sbb
shr
dec
in
shr
pusha
out
add
ret
cmp
bnd
fld
out
fidiv
out
jp
xor
jno
adc
push
nop
mov
mov
push
add
in
retf
mov
test
inc
outs
gs
jmp
aam
or
popf
fisttp
je
mov
and
add
adc
clc
inc
jo
movs
jmp
add
call
cs
(bad)
push
loopne
shl
lahf
js
fst
cmp
clc
xchg
das
push
sbb
cmp
mov
dec
inc
pop
mov
pop
les
jo
mov
dec
mov
fnsave
lods
stos
or
sbb
(bad)
int
push
cmps
shl
cmps
fidivr
dec
mov
je
mov
mov
or
mov
les
mov
xor
into
jb
mov
fcom
leave
and
inc
inc
xlat
push
cmp
dec
rcr
cmp
xor
and
dec
jmp
inc
sub
scas
pop
sub
inc
inc
int3
xor
sbb
into
jno
popf
cmp
push
es
sahf
or
inc
push
sbb
inc
imul
xor
push
ficom
sub
movs
cmp
xchg
outs
xor
in
(bad)
and
jne
and
gs
and
imul
je
stos
inc
test
js
out
mov
repz
or
lds
cld
in
and
push
xchg
cmp
dec
in
push
rcr
test
pcmpeqd
cld
stos
dec
mov
cld
nop
mov
xchg
cmp
inc
sbb
mov
enter
lahf
xchg
out
mov
cwde
jmp
xor
ret
sysret
xchg
dec
mov
das
and
xlat
sub
sub
jl
popa
rol
mov
sbb
inc
lahf
(bad)
jg
iret
adc
adc
inc
div
mov
mov
in
pop
mov
mov
xchg
push
shr
out
int
clc
fdivr
and
add
xor
and
test
or
pusha
fnstcw
lods
sub
test
pusha
xor
and
in
inc
sbb
mov
add
inc
repnz
ret
call
rcl
jno
ins
mov
pop
test
out
je
and
aaa
sti
mov
js
fild
dec
in
test
sub
inc
inc
jae
hlt
mov
mov
retf
pop
push
aaa
jl
mov
mov
ror
jb
cli
mov
enter
add
in
mov
inc
xlat
push
retf
sub
pop
repnz
cmps
dec
push
jle
aas
mov
sub
ror
xchg
adc
fsubr
fst
in
or
jp
div
es
sub
retf
not
aam
or
push
fwait
xchg
sub
pusha
pusha
push
cs
sbb
mov
xor
hlt
in
out
loope
dec
or
loopne
or
sbb
inc
pusha
aaa
and
enter
es
xchg
mov
pusha
xchg
in
jns
push
add
pop
(bad)
repz
rol
pop
clc
mov
mov
(bad)
xor
shr
mov
or
fadd
or
movs
mov
arpl
dec
rol
test
pop
xchg
ds
inc
push
into
fs
out
adc
push
js
xchg
push
sub
cmp
xor
xchg
(bad)
test
add
sub
adc
and
cmp
in
lds
cld
daa
mov
or
sub
sub
xchg
adc
repz
pop
or
xor
sub
adc
out
(bad)
cmp
fidiv
psrlq
imul
retf
leave
push
cdq
sbb
ret
arpl
jmp
sub
fimul
fadd
test
cmp
ja
out
push
pop
lock
repnz
lods
mov
sub
cmp
sbb
sbb
call
cs
mov
jnp
pop
dec
cmovne
xchg
ret
cmp
fcmovb
aam
push
add
iret
mov
ds
pop
cmp
and
adc
push
xchg
mov
out
sub
fisttp
test
(bad)
(bad)
cmps
dec
lods
retf
test
mov
pop
xchg
jno
neg
jmp
sub
xor
mov
pushaw
jno
ret
inc
lods
push
lods
dec
cld
out
xchg
pop
mov
inc
xchg
pop
xchg
mov
mov
shr
cmps
mov
mov
retf
sahf
cmp
jmp
push
pop
addr16
ins
mov
cs
lods
adc
call
fstp
mov
int3
jle
inc
scas
inc
adc
hlt
imul
add
mov
and
in
mov
add
clc
adc
push
pop
sbb
loop
ret
fimul
rol
stos
sbb
and
adc
(bad)
(bad)
movs
xor
call
dec
fist
sub
mov
cld
nop
pop
sahf
fmul
int
pop
push
loope
or
ja
hlt
popa
ficom
hlt
mov
rcl
imul
in
ret
es
inc
arpl
repnz
fstp
sub
cmps
int
jae
or
jno
js
inc
scas
add
sbb
sub
cmc
into
je
jne
xchg
lock
outs
mov
call
loope
mov
fucomip
sub
stos
xchg
(bad)
sub
jl
inc
mov
loope
out
inc
sbb
loop
adc
mov
into
push
fstp
sub
or
stc
or
xchg
add
sar
inc
jp
push
cmps
loopne
sub
ins
push
iret
sub
bound
cmp
sub
jg
fsub
mov
mov
sub
stc
je
and
sub
mov
cld
and
sahf
ja
ins
je
retf
mov
out
add
and
(bad)
adc
and
ror
and
mov
movs
inc
push
jno
push
xor
inc
mov
sahf
scas
shl
xchg
ja
aas
mov
jbe
add
xor
push
fucomi
(bad)
stos
imul
hlt
mov
aas
into
repz
repnz
(bad)
push
outs
fdivr
(bad)
dec
cmp
lea
mov
pop
sub
(bad)
les
or
and
fiadd
dec
xchg
jge
scas
adc
sbb
xchg
cmp
dec
jmp
out
pop
inc
inc
(bad)
fldlg2
enter
popf
dec
jbe
xchg
xor
lds
xchg
hlt
ffreep
jo
sub
cdq
pop
iret
cmp
test
inc
jb
int
popf
data16
xor
xor
inc
pop
push
shl
mov
sbb
sub
fsubr
pop
(bad)
daa
enter
ret
mov
imul
mov
lods
les
mov
sahf
shr
mov
pushf
ins
fldenv
fst
or
das
pop
and
mov
lock
aam
mov
rcr
pop
jecxz
xchg
pop
xchg
lock
imul
outs
shl
jae
aam
aad
xor
sbb
repz
out
cmp
jo
inc
or
xchg
jmp
ins
push
fistp
out
add
je
jbe
inc
xchg
movs
bound
dec
adc
push
(bad)
mov
xchg
mov
mov
out
clc
ret
in
mov
xor
jo
lock
xchg
mov
call
xor
mov
iret
add
or
push
xor
sub
repz
js
mov
push
add
out
cmp
cmc
jnp
inc
stos
scas
mov
pop
(bad)
into
sbb
dec
cli
bnd
cmp
fisubr
mov
or
popa
loope
jae
das
push
bound
fisttp
push
dec
fsubr
popa
or
mov
mov
stos
imul
cmp
call
stos
das
cmps
jb
nop
aaa
mov
cld
data16
mov
mov
hlt
movs
jge
jno
adc
shl
das
adc
fldz
inc
rcr
cmp
daa
fist
pop
ss
or
outs
mov
push
push
lods
rol
test
rcr
mov
ficom
jmp
movs
sbb
jae
fld
push
popa
mov
sub
sub
jg
xchg
je
inc
or
daa
mov
sbb
aas
xchg
push
xor
ficomp
and
dec
bound
movs
loopne
dec
mov
popf
lds
mov
push
and
sbb
cmps
or
add
and
inc
jge
add
lods
dec
mov
jno
mov
(bad)
std
outs
sbb
hlt
cmps
pop
and
cmp
enter
sub
pop
jb
sbb
movs
jle
jmp
dec
rcl
jg
sub
ja
cmp
cmps
ja
jmp
adc
or
cmps
mov
mov
mov
inc
dec
out
or
or
pop
push
fldenv
cwde
js
ret
and
jle
jg
ins
jo
jbe
pop
sti
fcomp
xlat
cwde
movs
leave
repz
sbb
aad
call
mov
ret
mov
loope
arpl
arpl
aam
mov
xlat
and
inc
stc
outs
imul
test
das
fwait
mov
xchg
push
ret
jg
in
xlat
clc
jbe
and
xor
loope
xchg
sbb
inc
pop
jmp
mov
mov
sbb
cs
mov
jae
mov
test
aam
mov
div
dec
or
imul
popf
jns
mov
or
sbb
imul
jns
mov
fucomip
pop
leave
aaa
sub
pushf
loop
pusha
or
enter
aam
iret
shl
xchg
pop
in
fdivrp
je
arpl
out
enter
jns
xor
xchg
xchg
fsubr
cmps
sub
jl
or
out
xor
icebp
ds
in
cmps
push
out
fbstp
mov
pop
(bad)
ficom
in
add
cld
xchg
loopne
dec
jae
inc
dec
leave
mov
call
pop
push
inc
stos
stos
xchg
out
scas
push
adc
push
(bad)
ins
mov
xor
sbb
pop
push
xchg
cmp
mov
out
pop
pop
lea
xchg
or
ret
add
xor
mov
ds
sub
int
inc
and
bnd
push
inc
dec
sub
int
and
out
inc
repz
shl
jmp
xchg
je
pxor
cmp
mov
mov
sbb
clc
fidiv
ret
dec
rcr
sti
(bad)
mov
xchg
push
movs
mov
rol
push
and
pavgb
es
mov
test
push
push
inc
push
fnstenv
lahf
adc
cwde
adc
adc
cmp
adc
mov
scas
or
in
or
add
inc
mov
ds
push
mov
ins
int
ins
ror
add
jbe
retf
add
push
jmp
lea
sar
mov
inc
cmp
rol
cwde
loope
loopne
xor
sti
outs
mov
and
ins
out
test
mov
stos
out
cmp
aad
push
fiadd
push
add
mov
inc
sub
sub
or
out
lods
aaa
fld
xchg
(bad)
cmp
dec
sar
in
dec
adc
adc
adc
xor
ds
outs
sub
pop
in
fld
(bad)
das
cmp
popf
mov
loopne
retf
sub
and
sbb
cwde
xchg
xchg
xor
mov
push
call
movs
(bad)
unpckhps
adc
cmp
inc
push
xor
mov
out
daa
jp
push
pop
cwde
mov
stc
push
push
xor
adc
jo
or
movs
and
das
adc
sahf
mov
leave
push
ret
movs
mov
cmps
scas
stc
retf
mov
mov
(bad)
fwait
popa
xor
shl
test
cmp
cli
mov
and
push
cmp
pop
pop
enter
mov
sub
mov
je
push
inc
int
sbb
xchg
mov
dec
mov
jns
add
scas
dec
shr
and
xor
cmp
cmp
neg
into
call
mov
xor
dec
ud1
popa
das
(bad)
adc
call
dec
mov
push
aas
dec
mov
cmp
dec
sub
test
mov
fxch
mov
mov
xor
enter
cmp
cld
in
ins
repz
pop
and
add
push
ins
jle
idiv
test
xor
in
xchg
mov
xor
mov
loopne
inc
sti
inc
sub
mov
xor
and
sbb
push
cmpps
repnz
fidiv
push
jl
scas
fs
dec
fadd
mov
sub
shl
ja
in
in
mov
(bad)
adc
loope
mov
jnp
sub
xor
cmp
jmp
int
retf
div
or
ja
movs
ss
retf
je
or
sbb
push
stc
loopne
in
or
dec
test
outs
imul
ret
ror
pushf
pop
test
push
pusha
xchg
push
in
jno
imul
sti
add
xor
les
and
(bad)
in
xor
or
hlt
or
pop
push
inc
push
xchg
or
dec
cld
mov
inc
ret
add
adc
cmp
jns
xor
ret
or
adc
push
add
popf
outs
mov
mov
imul
outs
push
jne
sub
lahf
aaa
inc
fwait
out
mov
rol
mov
or
data16
fistp
pop
xchg
inc
inc
sbb
(bad)
ror
iret
ds
xchg
jl
or
cld
in
and
sbb
add
lea
int
pop
sbb
stos
mov
aad
lds
inc
xchg
jb
jns
lods
mov
rol
test
lahf
ret
xchg
inc
shr
adc
iret
ins
inc
sar
xor
clc
xchg
scas
cmp
mov
pop
sub
push
add
das
jb
repnz
lahf
nop
adc
ins
jle
mov
cwde
inc
sub
les
arpl
pop
mov
push
jl
jl
ss
inc
sub
fmul
mov
(bad)
sub
sub
xor
mov
ss
mov
sar
jnp
dec
sahf
addr16
retf
mov
mov
cmp
sahf
xchg
xchg
out
retf
in
mov
push
jb
pop
xor
mov
(bad)
lods
fimul
int3
aas
jae
xor
and
xchg
mov
jmp
add
xor
xchg
pop
push
sub
pop
rcr
pop
mov
or
aas
int3
sbb
inc
stos
jle
bound
sbb
push
test
jl
mov
adc
or
mov
shr
xchg
loopne
push
mov
mov
sbb
iret
mov
xchg
(bad)
stc
(bad)
mov
mov
cmps
call
stos
jae
or
lods
(bad)
sub
jl
into
(bad)
iret
js
mov
rcl
movs
jecxz
jbe
cmps
outs
mov
inc
cmc
jl
shl
loope
aam
pop
mov
cdq
fsub
sbb
cwde
or
sub
mov
sti
inc
mov
add
mov
xchg
adc
and
out
ret
test
jo
add
lods
(bad)
es
push
pushf
sar
ins
inc
outs
movs
or
leave
jo
cli
ja
das
xchg
push
test
dec
test
xor
sar
or
cmc
sbb
out
dec
adc
sub
fistp
stos
mov
shl
sbb
mov
repnz
test
repz
movs
outs
mov
aad
pop
add
jns
sbb
iret
jno
pop
dec
jmp
out
retf
push
test
add
pop
xor
rol
sub
cmps
pop
mov
add
and
fcmovbe
(bad)
adc
std
fsubp
(bad)
imul
loopne
repz
or
xchg
out
pop
push
lock
add
in
cmp
sti
xchg
inc
jne
gs
sbb
mov
stc
rol
call
cmp
inc
jnp
mov
jg
and
iret
rcr
add
sub
adc
pop
fist
mov
bound
mov
out
jae
dec
push
les
mov
pop
dec
mov
push
jle
xor
cmp
icebp
dec
mov
and
in
int3
or
dec
push
cmp
loop
ficom
in
xchg
cmps
call
jecxz
push
out
(bad)
inc
adc
cs
stc
lds
and
movs
cmc
aaa
scas
xor
pop
xchg
cmps
movs
pushf
sub
inc
(bad)
mov
jo
or
fld
fidivr
dec
and
ss
call
push
pop
fistp
adc
pop
pop
clc
and
xor
dec
in
jb
push
xlat
dec
mov
inc
lea
push
inc
repz
adc
(bad)
cwde
dec
int
xchg
cmps
mov
(bad)
test
pop
sahf
sar
outs
xor
add
call
gs
paddusb
mov
sub
ss
pop
into
inc
stc
mov
mov
je
mov
xor
inc
dec
bound
sub
dec
fsub
popa
stc
xchg
pop
xor
mov
leave
in
fld
cmp
cmp
(bad)
cmc
cli
(bad)
mov
cmp
xchg
ds
sbb
sbb
in
xor
icebp
jmp
and
push
div
add
das
inc
nop
daa
icebp
clc
leave
mov
popa
(bad)
sti
jae
jbe
adc
jnp
add
iret
and
mov
aas
add
lock
in
imul
stos
cmps
mov
or
adc
(bad)
xor
inc
dec
and
and
icebp
jg
sub
mov
and
or
cld
inc
rol
movs
(bad)
mov
stos
test
push
or
sbb
dec
adc
aas
ss
clc
fsubr
ins
push
xchg
jmp
dec
das
pop
and
lods
into
push
ret
into
dec
lahf
pushf
call
add
mov
mov
push
shl
icebp
xchg
call
das
mov
(bad)
push
add
out
int3
mul
adc
out
push
js
inc
loope
leave
rol
and
and
shr
outs
mov
pop
mov
xchg
das
cmp
jp
add
psrlq
push
ficomp
xor
data16
stos
es
les
(bad)
into
cmp
sub
cli
ror
inc
push
push
rcl
in
xchg
adc
daa
mul
ret
imul
xor
call
movs
pop
mov
shl
pop
int3
outs
or
xchg
jle
cmp
dec
xchg
cwde
js
cmp
lea
loop
cmps
and
add
cmc
sbb
xchg
mov
sub
jl
lahf
adc
cmc
aad
add
adc
aaa
rcl
inc
mov
fisttp
mov
xchg
adc
shr
and
pop
mov
or
jns
add
lods
and
sub
adc
cmc
data16
mov
jnp
sbb
call
jne
mov
bound
mov
xor
push
or
enter
add
iret
lock
sub
mov
push
repnz
and
pop
mov
adc
stos
xor
in
inc
sbb
adc
imul
nop
adc
inc
jne
cmp
sub
test
popf
je
ja
inc
xor
pop
in
jle
or
ins
mov
adc
add
rcl
or
call
std
lods
pop
test
ds
aam
or
stc
icebp
jmp
adc
xchg
inc
dec
ficom
lea
out
lods
(bad)
xlat
jb
and
fisubr
aas
jo
dec
es
into
xor
arpl
dec
outs
push
out
repz
add
(bad)
mov
call
inc
movs
mov
and
in
jg
xchg
sbb
jo
shl
and
or
dec
xor
ficom
push
test
or
sbb
inc
xlat
(bad)
pop
jb
stos
sbb
sbb
gs
stos
les
out
cmp
push
add
sub
fisttp
add
and
cli
sbb
inc
std
xchg
scas
call
sbb
mov
mov
ins
clc
pop
jo
jge
test
test
aaa
retf
test
out
dec
(bad)
xchg
jecxz
jne
mov
or
cmp
cmp
jne
xor
sti
mov
arpl
pop
movs
icebp
mov
add
sub
xchg
mov
push
push
push
cld
sbb
sub
fbstp
inc
mov
popf
mov
jle
or
pop
adc
out
pop
in
push
dec
les
arpl
dec
add
rcr
cmc
push
into
add
std
fld
call
nop
div
jae
adc
jg
inc
push
rol
mov
leave
sbb
fisttp
sbb
scas
sar
cmp
jmp
mov
mov
test
add
or
fidivr
sbb
xor
test
jp
sub
push
mov
sti
mov
push
or
fbstp
fisttp
push
retf
adc
jecxz
stc
add
stc
add
movs
jae
push
mov
ja
pop
test
fld
es
xor
repz
sbb
sbb
inc
lods
out
test
test
in
pop
test
mov
xchg
and
or
adc
mov
les
sbb
xchg
push
(bad)
std
mov
push
mov
inc
dec
push
or
outs
(bad)
jae
inc
sub
adc
arpl
test
dec
push
xchg
and
and
sbb
outs
out
shl
dec
pop
mov
xchg
jae
mov
pop
arpl
sbb
dec
imul
mov
pop
das
jmp
push
mov
push
inc
(bad)
jecxz
jmp
aad
(bad)
push
adc
push
xlat
mov
xchg
test
arpl
xor
mov
adc
pop
xchg
mov
aad
mov
nop
hlt
aaa
shr
mov
cld
mov
cwde
dec
pop
fwait
cmp
lods
push
push
jg
xlat
jp
mov
push
test
popa
stos
add
add
(bad)
mov
test
sbb
les
xlat
fisttp
hlt
jmp
je
and
mov
jo
xchg
lock
mov
dec
sbb
cmps
sahf
fdivrp
icebp
or
pop
inc
push
mov
mov
dec
ret
push
imul
pushf
cmp
mov
int
push
adc
sbb
xor
push
jbe
sti
xor
push
or
(bad)
fisttp
xor
lock
push
or
xchg
pop
and
adc
repz
lods
retf
push
jbe
sub
add
sbb
pop
adc
(bad)
and
call
inc
sub
xor
cli
sub
jp
shr
loop
xor
outs
jno
lods
pop
adc
fsub
mov
and
ins
fs
mov
inc
stc
les
add
jbe
push
out
in
xor
push
cmps
mov
shr
add
in
in
fwait
cmp
add
out
dec
sbb
jge
or
(bad)
cmp
dec
(bad)
add
sbb
retf
push
or
cwde
nop
inc
push
das
sub
shl
jno
and
iret
mov
pushf
xchg
dec
gs
(bad)
call
and
aam
enter
cmc
ja
loop
mov
mov
adc
(bad)
leave
push
pop
dec
cmc
(bad)
int
mov
int3
jmp
lods
and
jo
ret
push
pop
sub
cmps
retf
rcl
pop
(bad)
movs
mov
sbb
and
push
cmp
cmp
xor
push
push
dec
jle
dec
jno
pop
add
or
push
cmp
add
pop
sahf
push
adc
add
je
mov
mov
dec
cli
xchg
clc
in
jmp
iret
jle
jns
mov
cli
push
mov
add
fld
sbb
out
dec
pop
pop
call
stc
int3
cmp
rcr
sbb
scas
loop
push
mov
lahf
mov
pop
gs
shl
mov
retf
(bad)
leave
sbb
fwait
mov
leave
aas
jmp
pop
dec
(bad)
jns
xor
inc
mov
xchg
(bad)
js
rcr
mov
sub
jne
(bad)
mov
popa
cmp
mov
xor
mov
enter
aam
rol
outs
inc
mov
lds
pop
ret
js
scas
inc
and
jno
mov
shr
push
es
sub
mov
inc
lods
int3
sti
pop
sub
nop
nop
fimul
jecxz
movs
inc
movs
fsubr
sbb
repz
fwait
stos
(bad)
leave
sbb
dec
icebp
add
pop
add
dec
fsubr
add
mov
inc
sahf
std
push
nop
leave
mov
mov
and
cdq
push
or
fmulp
jns
jo
or
jns
xchg
nop
cli
and
fcomip
pop
leave
shr
jl
stos
outs
mov
jge
mov
test
cmc
stos
bnd
mov
xchg
mov
mov
pushf
adc
push
sbb
xor
xchg
mov
sub
scas
es
lahf
xor
iret
lds
xor
push
test
fmul
fdiv
outs
sbb
mov
xchg
cs
push
cdq
fcomp
adc
data16
push
js
in
int
dec
ficomp
cdq
aad
cs
js
xor
pop
inc
cli
jbe
repnz
retf
mov
repnz
inc
ficomp
sti
out
aaa
int
mov
xor
or
cmp
lock
pushf
icebp
rcl
ins
inc
sahf
in
scas
jae
hlt
or
popf
movs
cmp
or
xchg
ins
add
jbe
mov
mov
in
and
addr16
bound
out
test
xchg
clc
jmp
movs
add
push
int3
xchg
pop
das
pop
or
sbb
repz
or
sbb
test
leave
inc
fld
sti
mov
sbb
xor
pusha
and
sbb
mov
neg
jp
sbb
mov
lods
xchg
dec
mov
pop
test
xchg
pmuludq
mov
(bad)
shl
into
ret
lds
int
cld
(bad)
xchg
popa
sbb
mov
pusha
dec
add
div
addr16
jmp
out
sub
pushf
adc
cli
es
popa
ret
xchg
and
shl
add
dec
fistp
aam
aaa
mov
push
imul
out
pop
lahf
dec
dec
adc
or
test
sub
cmp
and
hlt
pop
xor
lods
pusha
ss
mov
push
clc
in
enter
sbb
rcl
lahf
repz
leave
mov
jo
pop
pop
ret
mov
call
fdiv
xlat
fcom
jne
lock
nop
cmp
inc
mov
mov
xchg
fimul
pop
fstp
in
push
out
into
add
jecxz
mov
cli
xchg
add
dec
push
cmps
xlat
adc
mov
mov
push
inc
jbe
pop
cli
push
and
pop
jp
gs
push
and
cmp
fcom
pop
lock
mov
mov
or
and
jecxz
cld
repz
mov
shl
(bad)
sahf
in
pop
push
test
cmp
int
xchg
or
mov
shl
call
or
mov
icebp
inc
out
arpl
ret
retf
pop
retf
lea
xlat
xor
push
jmp
push
xchg
jmp
pop
(bad)
stc
jnp
ficom
cli
mov
jge
jnp
mov
pop
mov
and
ror
pop
lds
or
xor
mov
bound
shl
pop
inc
arpl
mov
in
and
gs
jmp
inc
dec
dec
push
(bad)
push
mov
push
mov
fist
nop
xlat
test
sbb
inc
adc
push
retf
fsubr
dec
je
adc
push
pop
add
push
xchg
pop
test
lods
inc
fstp
push
aaa
xchg
push
dec
inc
sbb
push
les
leave
in
mov
(bad)
and
xchg
push
test
mov
sbb
xor
or
int3
repnz
call
loope
or
dec
or
jmp
stos
mov
adc
sar
or
mov
push
pop
out
cmps
movs
iret
std
pushf
inc
cmps
mov
inc
add
pop
test
adc
repnz
dec
iret
push
sbb
out
popf
xor
cmp
mov
ja
stos
pop
test
pushf
stos
mov
sbb
or
pop
push
scas
jnp
jl
inc
enter
pop
inc
and
clc
inc
and
ret
cmp
stc
cmp
outs
sti
inc
sub
add
adc
arpl
pop
stos
test
rol
push
mov
fild
jmp
sti
pusha
xchg
mov
pop
dec
(bad)
xchg
cmp
cmp
fnstcw
arpl
(bad)
into
cmp
repz
fwait
inc
mov
aas
pop
adc
dec
pop
or
shr
and
inc
ror
add
test
(bad)
rcl
stos
popa
rep
(bad)
cmp
lods
xor
push
jmp
pop
dec
not
out
xlat
cmc
sar
(bad)
push
and
mov
sub
sar
push
push
je
add
das
mov
cmps
xchg
in
sub
inc
mov
xchg
mov
xor
mov
or
test
icebp
retf
test
imul
xchg
dec
daa
mov
bound
xchg
rcr
and
cdq
ror
es
sar
sub
inc
jmp
cmps
gs
fisttp
fs
jmp
and
adc
call
pop
jp
jmp
out
inc
push
push
inc
lods
aam
jp
adc
(bad)
pop
inc
pop
sahf
dec
push
cmp
(bad)
lahf
pop
movs
rcr
dec
ret
dec
inc
dec
aam
dec
xchg
push
xchg
pop
data16
and
sbb
sbb
add
mov
es
add
pop
cmps
out
popa
aaa
add
push
mov
inc
aam
es
(bad)
retf
lods
mov
adc
xor
bound
and
cmc
jns
(bad)
sub
dec
inc
or
fisttp
retf
jg
xchg
pop
cmp
inc
and
addr16
(bad)
shr
sub
dec
test
test
sub
adc
xor
add
scas
dec
lds
in
or
aad
pop
mov
out
stc
jnp
fdivr
outs
inc
and
es
push
dec
call
and
xchg
push
test
add
retf
inc
inc
add
cmps
and
sti
mov
imul
push
fwait
mov
mov
push
jo
pop
nop
mov
(bad)
pop
mov
mov
mov
test
adc
mov
push
jge
fldl2e
add
ja
add
mov
std
imul
retf
mov
lea
mov
jbe
daa
mov
jge
sbb
dec
and
add
icebp
call
cmp
in
int3
retf
aad
dec
mov
hlt
fild
(bad)
adc
sbb
pop
inc
sahf
adc
fnsave
cmps
outs
cmp
push
(bad)
mov
(bad)
je
ss
jg
stos
mov
lods
pop
mov
xor
add
sub
inc
addr16
in
inc
lods
in
scas
adc
xchg
ror
out
aas
add
das
mov
stc
inc
faddp
shl
sbb
mov
mov
jg
pop
mov
push
jmp
arpl
or
add
add
mov
xor
jmp
xchg
shr
jae
addr16
push
sub
sbb
(bad)
out
push
xchg
sar
add
dec
push
inc
xchg
jbe
ins
in
push
mov
aad
retf
pop
js
add
movs
xor
imul
popa
mov
cmp
outs
daa
fild
pop
xchg
push
fwait
sub
test
jbe
frndint
cmp
pop
enter
out
gs
push
fsubr
retf
movs
dec
sub
cmp
dec
jb
ror
aam
jmp
dec
cmp
mov
in
(bad)
push
sbb
ret
mov
add
jge
mov
bound
mov
jp
mov
dec
sub
mov
call
(bad)
or
cmps
loope
jl
inc
dec
mov
push
or
pop
fcom
xor
mov
imul
xor
pop
add
les
aaa
sub
mov
call
pop
loope
(bad)
xor
out
pop
out
into
out
retf
data16
repz
xchg
test
icebp
pop
je
mov
jecxz
add
lods
or
inc
jbe
push
cdq
das
inc
clc
(bad)
out
out
sahf
jle
xor
fld
aaa
mov
add
bound
xor
test
in
dec
mov
xchg
aad
cmps
inc
and
aam
movs
sub
pop
sub
mov
(bad)
jg
mov
xor
mov
mov
out
push
ret
in
mov
xchg
jns
and
or
sub
cmp
or
inc
mov
retf
fsub
pop
and
movs
fld
jmp
jp
outs
mov
xor
retf
mov
pop
lock
(bad)
mov
imul
mov
dec
mov
adc
push
movs
jnp
sbb
outs
sbb
cld
ins
int3
mov
mov
outs
push
call
xchg
es
les
jns
cs
ret
sub
or
add
mov
js
ret
in
mov
retf
mov
add
ins
pop
out
out
adc
add
fs
fdiv
fmulp
gs
xor
and
dec
repnz
mov
mov
inc
xor
push
add
daa
push
mov
pop
ins
xchg
shl
mov
push
daa
aad
add
das
cli
jmp
inc
push
push
jbe
and
add
or
sahf
cmps
shl
pop
scas
fnsave
into
imul
or
ror
imul
push
lods
push
mov
mov
jp
mov
es
int
stos
or
push
cmp
in
and
pop
pop
outs
fld
shl
(bad)
cs
fwait
dec
lods
dec
adc
mov
les
dec
and
cmp
xchg
xchg
push
sahf
adc
popa
movs
inc
test
(bad)
loopne
sbb
int3
jne
jp
(bad)
ret
adc
cmp
mov
stos
push
ds
add
jbe
fs
sbb
or
cwde
(bad)
shr
cld
std
arpl
pusha
mov
and
pop
repz
mov
xor
in
nop
stc
inc
jae
sub
bound
int
cmp
fisttp
mov
sbb
shr
psubb
pop
fist
xor
mov
test
adc
sub
mov
adc
fild
mov
lea
cmp
push
mov
retf
add
xchg
inc
mov
fidivr
ss
lods
dec
loop
xor
mov
dec
jo
call
mov
stos
test
dec
je
fimul
rcr
stos
push
mov
iret
sti
jmp
fld
out
test
mov
mov
dec
cdq
or
mov
enter
arpl
mov
call
imul
daa
enter
jge
mov
adc
mov
and
and
jno
call
(bad)
daa
xchg
movhlps
xchg
das
xchg
mov
pop
jmp
add
add
loopne
rcr
repz
shl
xchg
ret
inc
aas
xor
mov
adc
aaa
in
mov
retf
sbb
pop
ss
jno
inc
jb
adc
pop
hlt
jl
add
add
or
shl
lock
aad
inc
inc
mov
stos
mov
cwde
addr16
or
fs
pop
push
rcr
dec
retf
ror
shl
mov
jl
out
dec
in
add
mov
sub
fisttp
add
or
cmp
xor
in
in
out
jnp
dec
push
das
aas
mov
xlat
jb
push
aas
jmp
add
xlat
xlat
mov
sub
and
jmp
cs
clc
fcmovu
enter
fsubr
inc
fwait
das
movs
call
pop
adc
mov
loopne
les
ja
icebp
outs
push
sub
or
push
retf
mov
sbb
gs
jbe
fadd
add
mov
jge
out
sbb
pop
adc
adc
ss
mov
xchg
retf
push
(bad)
dec
add
(bad)
ret
jne
fisub
sub
fsubp
mov
aad
inc
(bad)
imul
inc
iret
jmp
stos
push
adc
(bad)
xor
pop
leave
imul
jmp
out
cdq
xor
in
adc
jp
jcxz
cdq
loopne
in
cmp
les
ins
ficomp
or
mov
mov
xor
xchg
xlat
cwde
mov
cwde
bound
and
push
sub
adc
mov
movs
inc
dec
mov
imul
int
int
push
(bad)
cld
mov
mov
gs
pop
dec
imul
jae
jecxz
add
test
popa
fistp
sbb
fst
repnz
xchg
imul
rol
adc
cmp
popa
mov
lods
test
stc
mov
dec
jg
frndint
int3
sbb
or
push
xchg
or
sub
xor
mov
les
gs
mov
in
dec
push
imul
lods
cmp
iret
cmps
shl
jecxz
in
push
xor
in
add
push
xchg
inc
pop
int3
pop
xchg
nop
jmp
hlt
std
in
mov
mov
add
xchg
adc
xchg
popa
mov
loope
fcomp
fsubr
mov
int3
adc
jg
xchg
outs
mov
movs
push
jne
aaa
mov
aaa
pop
dec
pop
(bad)
mov
out
rcl
add
xchg
push
add
jmp
jmp
call
add
in
call
in
je
jge
cmp
jns
add
xchg
xchg
iret
loop
push
mov
xor
xor
popf
mov
stc
movs
sti
(bad)
adc
ret
out
pop
popa
movs
xchg
sbb
jno
dec
inc
xchg
mov
stos
fistp
in
sbb
aad
xchg
mov
icebp
adc
xchg
xchg
fs
pop
cmp
int3
sbb
imul
stos
std
mov
mov
sbb
xchg
cmp
aad
push
pop
adc
pushf
cmp
jecxz
xchg
repnz
jmp
lds
mov
pop
sbb
std
mov
xor
call
add
adc
adc
inc
mov
fadd
push
cmp
push
mov
test
in
and
mov
(bad)
mov
lods
repz
enter
lds
mov
cmp
sub
and
push
pop
inc
es
ret
cld
scas
stc
sub
fild
pop
scas
inc
movs
cli
rol
mov
vmwrite
push
dec
mov
mov
mov
cmp
les
gs
pop
mov
fist
xor
xchg
ret
add
div
push
test
sub
pop
mov
out
icebp
cld
sub
rol
mov
jmp
or
repz
stos
and
dec
ret
adc
cwde
or
mov
test
in
cwde
in
leave
fstp
mov
xchg
outs
nop
add
aaa
inc
push
push
ins
mov
daa
test
sti
pusha
out
aas
fucomp
dec
(bad)
xor
movs
cmp
and
retf
xor
sbb
in
ja
in
sahf
xchg
sbb
xchg
jns
mov
mov
cwde
aad
jmp
jmp
test
add
mov
shl
and
les
ror
cmp
pop
mov
es
not
jnp
jge
pop
(bad)
push
cmps
mov
mov
cmp
cmps
movs
lahf
sub
xchg
fucomip
test
adc
push
jb
adc
sahf
adc
adc
jg
fucomip
sbb
adc
les
xchg
mov
adc
jb
ins
xor
sbb
add
sub
(bad)
ins
nop
test
sbb
inc
out
int3
int3
(bad)
je
jg
sti
sub
push
pop
je
mov
std
or
inc
in
xor
call
inc
adc
mov
and
add
lds
cmps
(bad)
dec
cdq
outs
(bad)
mov
les
pop
jb
cwde
jmp
add
push
ss
xchg
call
dec
sbb
dec
pop
popf
xor
adc
ficomp
sti
test
repnz
xchg
shl
(bad)
imul
jne
mov
and
cs
add
jmp
ins
fisubr
fld
and
das
jmp
adc
arpl
dec
sti
xor
ss
mov
fdiv
outs
and
addr16
inc
repnz
(bad)
aad
cdq
shl
mov
jg
pop
inc
call
cmps
(bad)
jecxz
out
jne
stc
dec
mov
out
jge
pushw
push
jl
push
push
sbb
adc
cmp
jnp
das
scas
inc
inc
ficom
or
mov
fistp
mov
jmp
add
repz
jg
movs
xchg
jmp
mov
adc
pop
sub
hlt
pop
(bad)
sub
ss
lods
xor
fs
pusha
cmp
mov
fimul
and
lahf
inc
movs
outs
(bad)
loop
sbb
push
mov
mov
out
xchg
dec
cld
scas
mov
jnp
addr16
jne
pop
cmp
add
and
cmp
push
loopne
adc
or
mov
push
fldcw
cmps
pop
sahf
sbb
sbb
add
fstp
adc
mov
pop
retf
cdq
dec
(bad)
xor
(bad)
or
out
xor
mov
cs
loopne
xchg
loope
gs
push
jmp
pop
push
or
fs
sbb
inc
sbb
inc
or
sub
pop
outs
pop
or
aad
loop
mov
or
imul
mov
rol
dec
inc
clc
add
dec
pop
pushf
fucomp
mov
addr16
arpl
sar
movs
xchg
mov
repz
test
inc
mov
fwait
mov
loopne
mov
inc
test
bound
jmp
and
adc
les
daa
push
sbb
push
jecxz
popf
call
mov
dec
push
retf
xchg
mov
add
fdivr
inc
mov
lods
cwde
mov
aas
or
cmp
test
enter
aas
xor
call
push
retf
jno
lods
lods
sbb
pop
sbb
ja
cmp
stos
fadd
jge
es
iret
fisttp
out
popf
cdq
gs
icebp
add
xchg
fstp
mov
movhps
adc
mov
sahf
or
aas
retf
not
adc
movs
clc
pop
in
in
inc
mov
outs
nop
imul
aad
adc
inc
push
nop
inc
(bad)
jle
pop
ficomp
mov
jno
sbb
xchg
adc
jmp
jnp
mov
fwait
dec
hlt
jg
loopne
xchg
mov
aas
cmp
add
xchg
int
repz
ja
inc
scas
cwde
fs
or
or
cmp
retf
jb
sar
frstor
push
xor
aam
aam
cdq
mov
test
or
and
sub
dec
rdtsc
fst
push
pop
adc
adc
fidivr
cli
add
in
clc
call
fwait
or
nop
test
push
rcr
icebp
sub
and
xchg
inc
inc
jne
jmp
das
push
cmps
add
cmc
pop
imul
xor
lods
sub
pop
pop
int
mov
rol
retf
mov
cmp
repnz
clc
dec
aad
mov
nop
pop
jmp
and
cmp
xor
rol
shl
das
hlt
push
sub
xor
sub
sbb
cmp
xchg
fs
fsub
stos
repz
std
mov
inc
mov
(bad)
dec
pushf
add
in
push
adc
fdivr
ror
sbb
and
cmp
aas
in
call
int
jp
xchg
cmp
dec
stos
mov
adc
div
cwde
fstp
pop
mov
dec
aad
stc
sbb
adc
pop
push
dec
loop
mul
fdivp
and
sub
loop
and
mov
dec
and
ds
je
dec
cli
add
cmps
test
push
or
(bad)
jp
cmps
jb
push
fstp
test
pop
or
pop
scas
inc
adc
sbb
xor
jbe
sbb
cmp
mov
test
pop
adc
aad
sub
pop
mov
and
(bad)
xchg
imul
adc
dec
test
or
push
lea
stc
push
stc
das
push
jg
in
xor
pop
test
je
or
jns
xchg
int3
into
or
aaa
or
into
dec
xor
and
ds
(bad)
jmp
mov
jne
hlt
jno
int3
call
test
pop
mov
sbb
shl
data16
and
jge
mov
ret
jne
mov
fbld
test
fcom
dec
dec
iret
sbb
(bad)
in
mov
and
xchg
add
icebp
dec
int
and
add
daa
mov
pop
xor
xor
test
ror
bswap
fcmovnu
mov
sub
mov
repnz
dec
sub
pop
ret
inc
add
int
mov
pop
and
push
jmp
jo
icebp
lock
push
and
xchg
test
adc
ins
lods
call
mov
pop
hlt
xor
dec
xor
and
jmp
push
je
aaa
cdq
sti
out
inc
jns
lds
mov
sbb
lea
(bad)
adc
cmc
jmp
arpl
jl
cli
jne
fdiv
out
and
imul
sahf
sti
xchg
neg
scas
adc
retf
xchg
push
pop
sbb
sub
inc
xchg
jge
or
pop
cmps
sub
and
and
sbb
rol
clc
mov
pop
nop
pop
test
outs
or
aaa
test
push
pusha
adc
popa
dec
out
test
xor
mov
push
ins
stos
int
loope
mov
xchg
fs
sbb
push
pop
add
push
js
repz
push
dec
or
arpl
xchg
jno
(bad)
jbe
push
push
ror
in
dec
pop
inc
shr
in
adc
push
sbb
xlat
fs
ror
loope
inc
(bad)
or
xchg
adc
jl
pop
lahf
mov
mov
sub
sbb
xchg
mov
add
push
clc
jb
jl
and
js
loopne
xchg
push
or
pop
(bad)
bnd
retf
jmp
mov
jp
mov
push
adc
or
div
test
addr16
ins
rol
pop
ins
mov
movs
mov
sar
and
xchg
dec
xchg
pop
(bad)
int
rcl
stos
jmp
rol
hlt
out
gs
cld
jne
xor
sbb
in
lahf
movs
push
xor
cli
lock
nop
cmp
dec
mov
dec
inc
mov
pop
fsubp
mov
add
xchg
xchg
data16
xchg
dec
aad
jecxz
fisub
adc
int3
sar
cld
popf
std
jno
add
sbb
(bad)
mov
ror
or
adc
ds
mov
push
retf
inc
int
add
jae
cmc
imul
in
test
out
mov
or
repz
add
or
lea
push
mov
mov
(bad)
scas
lods
jo
xor
ins
pop
test
fnsave
push
or
mov
pusha
mov
mov
pop
add
mov
dec
(bad)
fsub
pusha
hlt
test
adc
imul
sahf
fs
aam
pop
sub
imul
je
mov
mov
add
cmp
jl
outs
cmp
sub
mov
repz
or
add
pop
out
fcomp
mov
test
addr16
loope
outs
or
jbe
xor
mov
int
cmp
shr
fisubr
shr
lock
(bad)
pop
inc
push
lock
popf
mov
inc
data16
inc
addr16
es
inc
fwait
cwde
imul
ret
sub
movs
jmp
add
and
popa
mov
xor
dec
mov
imul
inc
pop
popf
shl
sbb
fsubp
std
and
movs
mov
stc
sub
sub
pop
repz
pop
sub
xchg
pop
cmp
sar
xor
cmp
pusha
fimul
mov
dec
mov
xchg
out
and
mov
bound
cmp
cdq
cmp
and
pop
adc
movs
push
sahf
sar
dec
inc
shl
jge
mov
lds
fs
sbb
or
xchg
outs
sub
inc
fnsave
or
fidiv
lock
lock
cli
add
fld
cmps
xchg
adc
adc
xor
fiadd
fbstp
mov
xchg
mov
pop
xor
adc
mov
adc
xchg
aas
xor
mov
repz
loopne
mov
cmp
mov
mov
dec
jne
or
lods
pushf
jmp
pop
mov
xor
call
add
cmp
pop
sbb
jge
cwde
jp
ret
xor
cmps
mov
sub
lock
inc
xchg
pop
or
in
dec
call
pop
imul
fwait
int
test
stos
mov
adc
out
cmps
jnp
pop
cwde
gs
cmp
outs
pop
loope
sub
fld
sbb
(bad)
ret
and
xlat
std
mov
push
pop
cmp
stc
es
adc
push
push
push
dec
xchg
ja
xchg
add
push
lock
add
mov
pop
adc
inc
xor
out
movs
out
and
adc
mov
lods
retf
pop
pop
push
popa
inc
repz
sbb
gs
pusha
inc
push
js
cld
xor
push
cmps
dec
xchg
mov
jae
js
dec
popf
push
sub
pop
rcl
test
push
stos
mov
lea
fbstp
or
call
shl
jnp
enter
push
inc
mov
(bad)
mov
mov
sbb
mul
add
add
ret
arpl
push
jle
js
enter
imul
push
out
adc
sub
cmps
push
call
repz
adc
repz
dec
nop
hlt
leave
dec
xchg
or
inc
mov
mov
adc
arpl
inc
je
int
adc
fdiv
mov
stos
cmp
hlt
jbe
xchg
stos
pop
in
cmp
cld
outs
mov
sti
mov
mov
add
ret
pop
scas
mov
sub
leave
or
iret
jl
xor
mov
loop
ror
xor
or
mov
cmp
dec
mov
daa
xor
sub
sbb
jnp
and
test
xor
mov
mov
jl
mov
cmp
out
sbb
mov
mov
mov
xchg
popa
lahf
in
cmps
add
inc
nop
loope
xchg
aad
pop
add
into
sub
push
xor
push
bound
xchg
xlat
jge
add
push
fs
(bad)
int3
fsub
xchg
add
xchg
xor
dec
mov
add
jb
cmc
dec
or
adc
pop
mov
fs
sub
arpl
inc
inc
mov
fidivr
add
sbb
ja
adc
cmp
cmp
push
jo
cmp
lds
and
push
add
in
cdq
bound
mov
mov
cld
enter
popf
lea
adc
mov
int
jno
dec
mov
mov
les
std
rol
and
(bad)
pmulhuw
mov
pop
mov
dec
test
sbb
ret
pop
ja
imul
lea
stos
out
mov
xor
or
arpl
cs
(bad)
cli
out
adc
jmp
ja
sub
mov
inc
adc
ret
sbb
sub
and
xchg
sbb
imul
in
inc
out
sub
lods
int3
stc
loop
ret
push
and
sti
adc
sbb
fcomip
lods
mov
push
jg
xchg
pop
mov
add
jnp
arpl
rcr
je
xor
mov
test
adc
or
xor
cmp
int3
mov
jg
outs
mov
mov
jnp
jno
ja
ret
pop
cs
ret
and
mov
mov
jnp
xchg
push
in
xchg
sbb
test
dec
xlat
scas
sar
std
dec
in
rcl
adc
loop
pop
(bad)
in
test
lock
jns
in
repz
cmp
jp
bound
mov
adc
enter
aad
xor
ficom
call
mov
sbb
sbb
xchg
daa
dec
push
dec
xchg
pop
and
mov
xchg
leave
xchg
sbb
sbb
ins
cli
xor
pop
xchg
inc
xchg
mov
pusha
add
repnz
sahf
mov
ins
sub
pop
mov
(bad)
mov
mov
and
stos
push
sub
cmp
shl
cmps
cmp
loope
push
jnp
mov
punpcklwd
ret
pop
test
xchg
cmp
or
jbe
cmps
mov
xlat
or
jae
(bad)
jge
mov
or
add
stos
dec
loopne
adc
pop
xor
pop
shr
(bad)
call
pushf
dec
jnp
repnz
cs
add
push
sbb
stc
inc
mov
pop
retf
mov
xor
je
mov
mov
add
pop
adc
outs
dec
mov
or
mov
add
mov
enter
or
stos
lock
js
(bad)
int
xor
sahf
outs
test
stc
lahf
or
test
(bad)
retf
repnz
sahf
and
xchg
jno
mov
cwde
or
(bad)
push
sar
push
fdiv
pop
pop
(bad)
sar
in
push
xchg
lock
inc
xor
dec
mov
(bad)
jmp
jmp
or
mov
or
mov
ds
out
in
dec
in
mov
pop
push
add
mov
adc
test
fidiv
xchg
lahf
scas
pusha
rol
pop
xchg
sbb
outs
retf
and
push
jg
cs
aad
xchg
mov
es
cmp
nop
(bad)
mov
jecxz
(bad)
cs
pop
or
or
inc
cdq
push
xchg
out
enter
sbb
mov
and
push
add
pop
mov
xchg
inc
cmp
sub
fisttp
ins
int
std
adc
dec
xor
sub
test
push
mov
inc
cmps
hlt
aas
jge
scas
sbb
jo
sub
out
str
cmp
fwait
jbe
icebp
inc
add
jns
dec
inc
std
shr
sub
repnz
(bad)
es
mov
inc
sub
out
mov
add
add
fistp
in
mov
pop
inc
pop
or
xor
shr
xchg
sub
icebp
push
jne
les
pop
and
sub
pusha
xor
inc
stc
pop
call
std
mov
sub
or
inc
jge
loopne
xor
bound
test
repnz
xchg
pushf
js
inc
or
mov
leave
ret
or
mov
sar
stos
add
cwde
xlat
jne
jl
shr
popa
std
push
push
sti
or
sbb
outs
mov
or
faddp
mov
push
cmp
push
ret
adc
retf
sub
mov
icebp
fisubr
scas
(bad)
sti
mov
stos
fimul
fnstenv
sub
add
mov
repnz
fcom
push
test
sub
dec
adc
pop
loopne
mov
loope
mov
mul
sbb
pop
fwait
loopne
(bad)
ror
dec
or
mov
mov
imul
sbb
mov
mov
fpatan
pop
inc
mov
sbb
rol
push
(bad)
cli
fstp
dec
icebp
test
test
add
(bad)
push
test
cmp
inc
lds
pop
xchg
pop
xchg
lock
test
jns
xor
sahf
adc
pop
lds
adc
push
sub
xor
test
je
xchg
adc
xor
sub
mov
jl
call
push
add
or
pop
lahf
shl
sbb
push
mov
mov
mov
jecxz
sub
jmp
gs
xchg
aas
jb
adc
stc
addr16
sbb
sub
ficom
sahf
pop
cmps
adc
cmps
repz
xor
inc
mov
inc
xor
xchg
repnz
jnp
scas
push
ret
or
push
jle
jae
js
adc
in
inc
sub
in
fadd
adc
neg
and
sub
stc
call
sub
push
lods
fwait
mov
sar
and
das
stc
adc
inc
shr
adc
lea
lea
gs
cmps
cmp
inc
shl
cmp
add
push
jp
push
shr
call
cmps
or
or
movs
cmp
jl
enter
cmps
adc
mov
je
(bad)
mov
xor
ret
mov
ja
(bad)
xchg
push
test
jbe
dec
stos
mov
je
pushf
pop
adc
adc
adc
out
adc
cwde
ins
xchg
fmul
(bad)
jg
ds
inc
add
call
pop
arpl
and
pop
xor
ins
add
sbb
and
xor
mov
mov
hlt
mov
mov
mov
dec
lods
(bad)
mov
xchg
repz
or
pop
sbb
pop
pop
dec
add
or
cmp
xor
dec
cmp
sub
pop
adc
push
sbb
(bad)
xor
das
imul
add
sahf
fsubr
movs
pop
imul
fwait
clc
mov
aam
retf
mov
xchg
adc
in
(bad)
mov
fdivr
(bad)
std
test
xor
sub
inc
add
adc
and
inc
and
fadd
mov
scas
jecxz
repz
mov
fist
mov
in
sbb
jno
xor
das
dec
or
jo
sub
jne
jp
dec
add
scas
jmp
and
clc
mov
subps
arpl
jns
sbb
fstp
jecxz
ret
fsubr
stc
test
std
mov
int
pop
outs
sub
jbe
pop
add
jae
dec
pop
inc
push
outs
aas
jg
bound
arpl
pop
push
push
daa
je
jg
pop
adc
jg
jl
outs
and
cmp
inc
push
xor
mov
movs
iret
mov
mov
mov
(bad)
out
fstp
loopne
ret
stos
jmp
inc
push
pop
inc
daa
jbe
ja
inc
sub
jp
dec
pop
jns
imul
add
sbb
call
cli
aam
fwait
in
cmps
sbb
call
mov
jge
dec
xor
fwait
rcr
popf
shl
mov
mov
sub
in
and
inc
mov
out
test
pop
adc
inc
push
inc
push
and
push
(bad)
and
pop
sbb
inc
add
lds
enter
mov
add
inc
sub
std
iret
mov
sbb
cs
test
mov
dec
out
cmp
es
sub
ins
test
jb
pop
xor
das
adc
shl
imul
jmp
shl
test
mov
inc
test
fwait
jns
sbb
iret
in
pop
add
and
imul
or
pop
add
(bad)
int
sbb
ds
dec
xor
cmp
jns
push
pop
jbe
push
sbb
imul
adc
jg
jg
dec
xor
imul
or
es
std
cmps
lds
out
mov
xchg
aad
loope
(bad)
mov
mov
loope
dec
xlat
mov
loopne
repz
iret
sahf
shl
pop
push
sub
cmp
pusha
cmp
adc
or
pop
pop
add
ficomp
clc
mov
xchg
out
in
jmp
xchg
stc
mov
adc
inc
add
sub
cmp
dec
xor
cmp
jno
adc
jp
dec
or
nop
cmc
mov
std
rcl
loop
in
dec
rol
mov
xchg
cmc
mov
iret
(bad)
leave
scas
out
lahf
stc
scas
(bad)
mov
lea
dec
or
mov
scas
in
enter
fsubr
pop
and
dec
cmp
cld
mov
cmp
or
push
pop
cmp
call
enter
fld
in
call
ins
xor
fistp
shl
pop
dec
pop
or
pop
add
sub
ins
das
fwait
in
mov
in
sbb
outs
sub
pop
aas
jp
data16
sub
inc
and
dec
sub
push
jb
ins
add
xor
ins
add
jno
imul
sub
das
jle
outs
push
xchg
leave
or
cmps
loop
repz
popf
ret
xchg
shl
sbb
imul
std
mov
(bad)
mov
jmp
sbb
jp
jp
dec
cmp
pop
out
mov
lods
cmc
stos
hlt
mov
repnz
fisubr
dec
or
push
inc
xor
outs
push
dec
push
outs
pop
pop
push
push
or
mov
int
lock
(bad)
xchg
shl
and
cs
in
mov
test
fwait
shl
or
fistp
sbb
pop
jecxz
clc
popf
rcl
scas
lds
(bad)
xchg
aad
retf
xchg
rcl
int3
mov
mov
sbb
pop
es
push
jmp
int
lods
into
pushf
fimul
les
(bad)
test
mov
add
push
add
push
inc
pop
pop
sbb
adc
or
sub
imul
push
pop
xor
cmp
push
daa
push
push
pop
cmp
jp
imul
push
and
ins
xor
js
push
cmp
jle
dec
sbb
dec
cmp
mov
retf
mov
push
adc
jl
jns
das
pusha
cmp
adc
inc
or
test
mov
movs
clc
mov
xchg
retf
fimul
and
push
xor
cdq
rcl
imul
and
jb
imul
or
sub
stos
cli
iret
aam
push
jl
adc
dec
adc
jge
dec
or
test
cmps
cli
mov
xchg
mov
mov
enter
cli
mov
push
xor
or
sbb
adc
mov
push
test
call
cmp
push
inc
and
push
mov
mov
outs
push
push
int
inc
pop
or
call
shl
adc
mov
push
pop
dec
adc
std
sahf
fistp
cmps
int3
mov
xchg
sbb
cmp
jb
pop
cmp
imul
cmp
mov
xchg
xchg
(bad)
imul
xlat
aad
adc
add
or
in
shl
push
dec
add
jae
dec
pop
cs
and
jp
jno
pusha
adc
or
or
loop
int
cwde
ror
clc
cmp
fidiv
sti
cmps
sbb
jno
sub
movs
stc
ins
pop
sbb
(bad)
fmul
fwait
shl
div
stos
fistp
in
nop
sar
out
mov
(bad)
lods
fisubr
jns
pop
cmp
jne
jns
das
popa
cmp
adc
push
out
call
call
cmp
mov
mov
mov
mov
xchg
mov
popf
(bad)
xchg
les
add
dec
sbb
popa
pop
adc
add
push
add
or
add
or
mov
out
lods
icebp
test
dec
and
addr16
es
cdq
mov
sbb
inc
sub
jae
push
sbb
or
pop
cmp
outs
sub
arpl
jno
dec
cmp
aaa
addr16
inc
sbb
cmp
add
mov
mov
ret
mov
fmul
jecxz
shl
bound
jae
dec
cmp
jl
push
push
dec
pop
das
dec
add
xor
in
mov
adc
ja
je
outs
cmovno
ins
push
pop
sbb
jl
push
cmp
sbb
imul
xchg
cmps
cli
xchg
fcom
mov
cmps
loop
retf
mov
shr
aaa
es
cmp
bound
push
loop
in
in
int3
mov
icebp
test
mov
repnz
mov
sahf
cld
xchg
(bad)
nop
fnsave
cdq
in
mov
cmps
in
enter
jmp
popf
ficomp
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
cli
mov
mov
rcr
ret
nop
shl
and
test
jmp
pop
out
ja
xor
(bad)
nop
or
jecxz
shl
ja
out
push
lea
adc
inc
leave
sub
out
int3
cli
aad
add
loop
iret
stos
sub
sub
add
pop
inc
daa
mov
mov
pushf
bound
inc
enter
in
scas
or
pop
outs
dec
pop
dec
enter
jbe
cs
sub
loope
outs
retf
or
fidivr
cmp
mov
into
shr
mov
inc
rcr
or
std
pop
(bad)
xor
out
dec
and
pusha
pop
inc
or
dec
mov
xchg
inc
cmp
call
and
pusha
sbb
push
mov
or
and
xchg
loopne
vcomiss
test
in
cdq
jne
stos
mov
push
xor
dec
sbb
pop
not
(bad)
sbb
pop
jns
mov
add
xor
into
mov
inc
add
xchg
(bad)
xchg
jp
inc
mov
imul
cmps
rcl
rcl
rol
add
call
pop
cmps
out
loop
dec
mov
js
and
loope
cmc
dec
mov
inc
inc
mov
jp
shl
inc
cmps
popf
and
fdivrp
rcr
cmp
aad
movs
outs
lea
inc
retf
jb
and
es
pop
(bad)
cmps
pop
test
jne
dec
push
xor
add
test
mov
pop
xor
xchg
imul
push
repz
fwait
cs
bsr
scas
xchg
sub
mov
mov
test
neg
push
jae
pop
fidiv
(bad)
jnp
sub
cwde
adc
gs
pop
jmp
add
cmp
pop
mov
ins
jne
retf
jmp
mov
mov
movs
mov
cmps
jno
pop
imul
xor
xchg
xor
jb
push
cld
and
ret
mov
or
push
fist
pushf
xor
adc
in
cmc
jmp
adc
mov
in
not
ror
call
out
mov
fcomi
arpl
jbe
loop
push
adc
scas
add
add
inc
ss
outs
jmp
mov
fidiv
call
ins
pop
es
sbb
cmp
(bad)
mov
fld
ins
pop
push
iret
stc
test
mov
xor
sub
jmp
pop
fs
fnclex
scas
pop
mov
out
fisttp
fistp
lahf
cmp
out
xchg
retf
mov
js
jl
mov
push
iret
ja
mov
aad
sub
sub
ds
jg
sub
cmc
push
dec
rcr
std
lods
jo
aaa
in
loopne
aad
push
jns
xchg
pop
adc
or
pop
int
jns
mov
mov
fcmovnb
pushf
test
mov
sub
stos
aad
dec
pop
pop
in
mov
push
cmp
jbe
xor
add
mov
cmp
outs
stos
jno
mov
dec
and
inc
jae
das
push
test
in
push
addr16
loop
xchg
fld
mov
dec
(bad)
adc
sbb
mov
sbb
fs
test
(bad)
pop
inc
into
arpl
inc
mov
xor
fisttp
cmp
mov
ins
adc
mov
inc
xchg
leave
push
or
cmps
addr16
cmp
cmp
ret
mov
push
(bad)
popa
add
cmp
mov
scas
ror
std
jne
iret
push
mov
add
xchg
stos
lods
add
nop
dec
inc
cs
sbb
xor
mov
adc
mov
xor
into
push
mov
add
adc
or
inc
xlat
fs
nop
or
call
xor
unpckhps
fdivr
and
repz
cmp
mov
jmp
sbb
dec
out
push
push
(bad)
xor
fbstp
mul
and
and
jmp
aas
ins
and
dec
mov
out
movs
dec
push
(bad)
paddd
cmp
mov
xor
pusha
repz
jns
push
pop
repnz
sbb
jae
into
popf
sahf
xchg
or
xchg
scas
cld
or
aam
xchg
fs
jg
fnstcw
xor
lods
lods
shl
stos
adc
in
mov
test
dec
scas
push
repz
mov
jns
call
sar
cmc
add
push
int
cmp
stc
mov
pop
jbe
mov
sub
mov
movs
nop
cdq
idiv
xlat
ror
mov
dec
outs
scas
repnz
shl
xor
add
shr
cmp
loopne
leave
xchg
enter
les
icebp
daa
sub
sub
xchg
ins
out
movs
pop
sbb
jle
xchg
pop
or
mov
mov
pusha
out
test
aaa
and
push
(bad)
mov
cmp
shl
sbb
mov
fsubp
xchg
adc
pop
out
inc
push
jge
mov
mov
cdq
push
mov
push
shr
cmp
mov
scas
adc
pop
retf
push
pop
out
and
add
popa
rol
aaa
mov
retf
dec
add
jle
pop
ficomp
jns
inc
dec
sub
stos
lods
and
xchg
cmp
mov
pop
je
mov
out
arpl
mov
rcl
sub
scas
inc
(bad)
gs
loopne
retf
out
and
popf
mov
mov
mov
or
out
push
xor
cmp
fsubr
mov
(bad)
shl
xsavec
cmps
fdivr
aam
jbe
fsubp
cmp
sub
(bad)
mov
repnz
pop
add
sar
push
xlat
add
mov
das
cwde
lea
inc
imul
(bad)
dec
pushf
pop
inc
and
scas
mov
rcl
sar
ins
mov
adc
sub
ja
mov
fwait
xchg
loop
add
mov
inc
in
add
inc
push
daa
imul
jne
xor
jp
pop
mov
(bad)
stos
sbb
call
stos
mov
jne
stos
inc
(bad)
push
add
sbb
sahf
ror
jno
and
or
xor
repnz
cmp
aad
pop
popf
adc
ret
or
xor
ja
xor
sub
inc
jns
test
icebp
mov
dec
inc
mov
pop
add
in
das
push
bound
inc
jl
je
outs
cmp
nop
mov
fwait
mov
mov
mov
(bad)
mov
fistp
inc
jp
sub
in
clc
outs
cmp
dec
jp
cdq
loope
add
and
aas
add
cmp
xchg
lods
fdiv
out
fimul
cmp
scas
jg
pop
or
sub
push
jg
test
sbb
and
push
push
sub
scas
sbb
loop
jae
xor
or
mov
pop
push
cmps
mov
inc
or
aam
sbb
push
imul
jbe
jg
mov
and
aam
cs
xchg
and
cmp
or
sub
mov
mov
lods
mov
sub
test
aam
jae
jg
pusha
sbb
nop
jmp
add
sbb
in
cmp
push
rol
xchg
les
add
lahf
inc
or
stos
sub
sar
and
mul
cmp
jbe
adc
into
es
fs
lds
nop
daa
dec
push
mov
mov
push
inc
scas
lods
sub
(bad)
mov
pusha
inc
aam
cmps
lods
dec
xchg
mov
sub
mov
push
add
push
lahf
xor
std
adc
push
dec
pop
shr
xor
or
fild
pusha
pop
sbb
push
mov
and
or
inc
movs
icebp
sbb
dec
ret
int
loopne
movs
xor
ror
mov
pop
mov
mov
stos
lea
xor
rol
or
or
add
mov
pushf
gs
cmp
push
pop
das
mov
mov
mov
mov
and
mov
mov
xor
sub
(bad)
or
retf
hlt
repnz
lea
pop
jo
sbb
call
xchg
stc
add
in
or
add
cmp
jg
jmp
lahf
dec
(bad)
jns
rcl
mov
or
retf
mov
adc
push
fdivr
sub
fs
sub
ror
aad
inc
les
outs
jo
cmps
int
add
mov
pop
scas
ds
jge
xor
fwait
call
and
aad
mov
out
lahf
arpl
out
call
sub
loope
out
call
pop
clc
fadd
sub
jmp
sbb
in
inc
fsubr
(bad)
push
sub
lea
cdq
popa
mov
pop
xchg
sub
aam
dec
add
sti
sub
ja
push
and
aaa
pop
imul
bound
mov
jg
sbb
sub
dec
adc
adc
xchg
icebp
cli
xor
pop
fstp
sub
fstp
add
cmp
jecxz
ficomp
out
lods
or
jns
std
lahf
pushf
ins
(bad)
or
mov
repz
mov
inc
popf
sbb
or
add
pop
pusha
outs
adc
pop
xchg
pop
mov
xchg
pop
js
lock
sar
mov
scas
js
out
mov
(bad)
imul
in
mov
std
jb
fs
sbb
mov
or
or
dec
xchg
xor
(bad)
dec
mov
call
movs
pop
pop
cmp
inc
and
iret
sahf
mul
out
and
fisubr
mov
adc
(bad)
or
sbb
fnsave
imul
cs
and
xor
idiv
ficom
repz
cmp
je
xor
ins
in
fnstcw
push
daa
mov
retf
rcr
and
xchg
into
xor
shl
pop
leave
test
mov
shr
add
cmps
pop
jo
loop
jg
adc
icebp
dec
scas
push
push
pop
sub
int3
pop
sbb
daa
sub
fs
jg
xchg
shl
jne
rol
retf
cdq
daa
add
mov
xchg
jge
dec
test
test
inc
xor
xchg
fist
push
lds
add
push
call
xor
cmp
push
lods
ffreep
les
repnz
pop
(bad)
mov
or
or
or
sbb
xchg
jecxz
fisttp
xchg
(bad)
(bad)
mov
cmp
aam
outs
or
addr16
xchg
sar
add
clc
fst
lods
push
enter
(bad)
daa
sbb
jns
mov
or
sti
jno
mov
pushf
add
fs
iret
fdivr
add
and
jmp
aad
inc
pop
jg
addr16
xchg
jnp
stc
sub
dec
cmp
stos
dec
jl
ret
mov
jbe
add
inc
push
mov
icebp
jge
push
sbb
in
out
arpl
mov
movs
rcr
pop
dec
add
cmp
xchg
clc
adc
repz
fwait
mov
and
jmp
repz
jle
pop
mov
cwde
addr16
lock
outs
sub
jmp
sbb
jns
add
dec
push
movs
popf
cwde
mov
cwde
lods
retf
push
and
add
paddusb
add
sbb
cmp
mov
retf
icebp
(bad)
dec
xor
cmp
add
(bad)
in
jge
repz
cdq
lods
fcomip
jg
les
jo
sti
adc
mov
loope
fnstsw
push
cmp
fadd
push
addr16
sub
pop
out
sbb
ret
jnp
jmp
int
sar
ret
leave
int3
pop
cli
iret
(bad)
call
fs
popf
dec
fadd
and
cmp
sbb
mov
jmp
adc
mov
clc
lock
(bad)
xchg
loope
xor
add
cmp
sbb
jmp
push
push
jp
int
enter
dec
pop
fs
jne
ss
xchg
cmp
xor
adc
(bad)
loopne
bound
mov
sbb
cmp
pop
iret
shl
cmp
dec
mov
inc
inc
push
ja
cld
(bad)
iret
stos
jp
inc
pop
xrelease
test
popf
mov
sub
push
sub
(bad)
call
pop
ja
in
out
sar
mov
mov
add
push
mov
sub
div
jmp
jae
pop
das
mov
or
call
iret
bound
imul
(bad)
test
push
sti
cmp
xor
rol
cdq
xchg
add
retw
pop
mov
data16
jns
test
icebp
sub
bound
lock
loopne
xchg
js
popa
fiadd
shl
das
(bad)
stos
pop
retf
jne
lock
push
inc
pop
jns
jmp
aam
or
aad
jb
int
loop
adc
fwait
lock
cmp
mov
xchg
push
xlat
lods
(bad)
outs
mov
shr
lea
xchg
xchg
and
enter
movs
cdq
loopne
push
pop
aam
test
and
add
pop
xchg
dec
movs
sbb
xchg
xor
mov
repnz
lea
cmp
jb
mov
push
dec
imul
mov
out
mov
xchg
mov
push
xchg
sahf
push
ror
xchg
cmp
and
inc
pop
test
addr16
ret
es
mov
cli
sbb
test
out
out
sbb
inc
cmp
ret
and
stc
xchg
push
sbb
movs
ins
or
std
stos
or
or
xor
push
data16
sub
mov
pusha
(bad)
and
pop
retf
push
test
clc
jl
scas
jbe
cwde
push
sub
inc
clc
add
inc
xchg
shl
outs
cmp
sub
in
fcom
fdivr
and
pop
push
gs
cmp
mov
les
jge
dec
js
fnstsw
cdq
xor
ja
(bad)
mov
and
push
pop
ret
mov
mov
inc
retf
test
fsubr
push
mov
nop
out
inc
(bad)
mov
mov
xchg
pop
sbb
lods
jo
sbb
fdivp
mov
loope
test
jp
or
sbb
adc
jmp
mov
xchg
or
cmp
mov
xlat
push
sub
jae
fmul
mov
pop
adc
stc
mov
add
fsub
out
pop
stc
into
ror
in
test
pusha
add
pop
mov
fld
mov
xchg
adc
sub
adc
and
shr
aaa
jnp
mov
stos
cs
add
adc
jbe
(bad)
xlat
cdq
adc
mov
retf
movs
imul
inc
arpl
xchg
push
mov
out
loopne
sahf
mov
mov
inc
add
fld
pop
sub
ss
enter
ds
inc
(bad)
sbb
pushf
lock
adc
jno
sub
rcr
repz
pop
pushf
hlt
lahf
or
sbb
push
stos
nop
push
test
adc
mov
xlat
pop
xchg
aaa
fidivr
pushf
sub
and
xlat
call
dec
test
das
or
dec
and
fisub
adc
xor
pop
jp
icebp
sbb
fisubr
jmp
sbb
mov
rol
inc
dec
fadd
stos
fyl2x
iret
xchg
mov
arpl
std
and
mov
test
mov
xor
jae
mov
retf
iret
mov
mov
fcmovnu
in
push
and
lods
leave
cs
dec
mov
scas
test
cmp
jmp
cmps
daa
aad
push
lds
jge
inc
ins
pop
push
in
stc
push
movs
mov
xor
jae
inc
adc
mov
fistp
inc
and
sub
sbb
jb
arpl
xchg
data16
sub
test
mov
cs
push
or
mov
in
jg
xchg
pop
sub
jbe
mov
cs
adc
sbb
repnz
cmp
addr16
arpl
pop
data16
xor
pusha
mov
adc
repnz
out
push
xchg
loop
mov
and
fcmovnu
ds
cdq
pop
push
in
mov
sbb
jnp
test
dec
loope
xchg
and
test
pop
mov
mov
jle
call
or
js
retf
mov
arpl
pushf
movs
add
sub
mov
out
mov
out
outs
aam
jae
(bad)
or
ficom
rcr
mov
xlat
push
or
add
test
or
sbb
mov
inc
fmul
cmps
mov
(bad)
call
mov
push
out
sbb
pushf
and
sar
xor
das
or
imul
pop
xor
fs
push
inc
cmp
shl
mov
cmps
dec
test
mov
dec
jno
xchg
mov
or
jl
daa
push
ror
mov
fist
and
mov
gs
add
dec
cmp
mov
or
mov
and
xchg
fs
cmc
xrelease
cmp
mov
js
mov
(bad)
loopne
mov
loope
jb
and
or
and
out
aas
add
jmp
jbe
or
push
inc
xor
sbb
mov
mov
push
and
push
(bad)
(bad)
in
gs
popw
in
inc
lods
jmp
ret
outs
imul
call
aaa
in
adc
cmp
shl
mov
mov
cmp
out
dec
gs
cmp
cmp
xor
cwde
pop
mov
cmp
pop
lahf
add
push
mov
ds
pop
jmp
sub
hlt
into
nop
jp
push
js
cmp
cwde
retf
out
mov
dec
mov
rol
out
or
aas
in
enter
jle
sti
push
mov
add
mov
push
scas
add
inc
jmp
rcr
pop
jbe
out
jbe
pop
or
sbb
dec
dec
int
or
pop
mov
xor
iret
call
sbb
gs
mov
mov
jbe
jno
cmp
sbb
xchg
jle
sub
pop
aaa
dec
ja
mov
fcmovbe
jl
jae
mov
ss
mov
inc
jl
retf
jo
xor
jmp
loop
xchg
(bad)
xchg
dec
or
xlat
push
div
das
in
lock
(bad)
outs
push
les
push
mov
mov
xchg
mov
out
(bad)
int3
and
popf
push
jns
cmps
mov
jl
retf
xor
(bad)
cvtps2pd
jno
add
pop
arpl
arpl
fld
jo
and
cmc
mov
out
call
js
mov
dec
(bad)
pop
test
out
jmp
int
div
jmp
dec
lds
xchg
pop
es
data16
pop
xchg
and
add
push
or
into
(bad)
lds
sub
push
icebp
cmp
lds
sbb
xchg
pop
dec
cmp
add
inc
adc
in
(bad)
mov
(bad)
mov
fisttp
in
dec
adc
xchg
add
cmps
push
out
(bad)
sbb
mov
mov
js
add
popf
inc
stos
nop
in
clc
dec
and
scas
mov
or
int3
dec
mov
cwde
jl
in
sbb
stos
jae
xlat
test
imul
inc
xchg
xchg
(bad)
xchg
inc
mov
add
xchg
push
add
inc
aad
ja
rol
push
les
add
fild
jae
fmul
push
mov
xchg
xchg
jae
les
imul
call
pop
xlat
nop
fidivr
xchg
push
pop
jmp
jne
aam
push
scas
jmp
or
fcom
inc
mov
rol
retf
fisttp
dec
mov
mov
add
mov
std
push
xor
pop
mov
pop
sub
dec
scas
in
cmp
(bad)
iret
mov
out
sbb
(bad)
imul
int
inc
mov
inc
lock
rol
xchg
fstp
add
mov
mov
inc
sub
add
mov
ja
cwde
inc
sub
cmp
bound
loopne
je
dec
jmp
cwde
sti
adc
arpl
adc
cli
or
dec
push
adc
or
mov
int3
add
inc
hlt
cmps
mov
cld
inc
and
cmps
lds
jbe
retf
ins
sub
push
cmps
popa
and
test
jne
jmp
cmc
dec
cmp
mov
sub
mov
push
jge
int
outs
mov
inc
lods
jmp
and
test
or
pushf
popf
fistp
jmp
xchg
leave
push
add
xchg
call
sub
test
(bad)
cmp
retf
loopne
ins
ud0
jmp
jmp
int3
add
dec
xchg
dec
and
jg
jnp
pushf
xchg
jg
pop
dec
cmovo
mov
add
fcom
inc
add
scas
fisttp
push
push
cld
sahf
push
stc
fwait
dec
paddb
mov
jp
dec
or
outs
out
enter
mov
dec
or
mov
ss
mov
ss
movs
xchg
les
test
fs
and
scas
stos
in
(bad)
jecxz
aas
inc
aaa
es
repz
out
sub
std
scas
fwait
clc
js
pop
adc
cmc
outs
ss
sbb
enter
mov
rol
push
dec
mov
push
adc
repz
aad
es
loope
xchg
jns
cs
cmp
add
or
xchg
inc
and
jno
mov
out
lods
je
ret
sbb
ss
cld
(bad)
mov
test
(bad)
ret
pop
add
inc
mov
sbb
jmp
mov
push
push
inc
les
cld
mov
stc
mov
les
ror
fsubr
adc
rcl
scas
int3
push
cmp
push
mov
inc
mov
pop
xor
mov
loop
popa
and
mov
hlt
cmps
xchg
lock
dec
test
cmp
or
ret
sub
inc
mov
push
jg
in
mov
mov
stc
das
inc
stos
in
push
adc
out
or
jne
retf
mov
lea
lds
icebp
test
mov
add
sbb
xchg
mov
inc
sub
xchg
jl
lock
mov
fwait
mov
add
sti
pop
adc
xchg
js
sti
mov
fistp
out
dec
or
xchg
in
adc
inc
add
into
cmp
fidivr
(bad)
cmps
inc
add
xor
inc
es
hlt
and
mov
retf
mov
pop
adc
scas
nop
retf
cmp
aaa
cmp
cmc
es
jmp
adc
xchg
popa
add
lea
mov
in
lahf
dec
cmp
push
jecxz
add
inc
not
stos
in
test
lea
retf
mov
into
(bad)
out
jge
mov
fsubr
sub
repnz
dec
mov
lds
repz
inc
add
dec
xchg
xor
mov
push
adc
cmp
fistp
xor
mov
sbb
retf
cmp
call
push
pop
hlt
mov
cmc
push
pop
andnps
lods
sahf
std
or
arpl
call
outs
loopne
and
div
push
rcl
shl
sbb
scas
call
mov
imul
and
jbe
mov
cmp
int3
xor
cmps
mov
outs
icebp
mov
and
mov
std
scas
scas
int3
xchg
rcl
xor
mov
or
cmps
jmp
and
adc
repz
lock
fdivr
pop
sbb
inc
shl
jb
push
pop
int3
xchg
fimul
adc
movs
sahf
(bad)
and
stos
xchg
(bad)
aaa
push
xchg
push
adc
xchg
ins
das
(bad)
pushf
inc
add
cld
pop
das
loop
pushf
fidiv
or
fiadd
add
mov
pop
fadd
scas
(bad)
xor
les
cmp
sbb
cmps
test
inc
or
je
fs
push
xchg
pop
das
in
into
nop
xchg
iret
aas
ins
(bad)
mov
or
mov
xchg
jbe
stc
fwait
dec
or
sahf
out
test
cld
(bad)
jnp
pop
push
int3
adc
pop
aas
pop
fwait
sbb
jo
dec
push
push
(bad)
mov
add
mov
jmp
int
and
pop
fmul
sub
in
popf
fisubr
xchg
push
push
fwait
adc
aam
mov
(bad)
sub
fcom
cmp
mov
loop
or
lods
dec
adc
xchg
xchg
mul
sbb
xchg
mov
dec
cs
(bad)
(bad)
mov
sub
retf
test
push
mov
xchg
xchg
iret
outs
sub
and
adc
mov
stc
mov
sub
in
pop
sub
add
mov
mov
adc
push
leave
nop
rcl
in
(bad)
jle
sbb
dec
test
inc
and
dec
mov
mov
sbb
xor
add
inc
mov
xchg
inc
int3
xchg
mov
aaa
outs
leave
fwait
arpl
sti
xchg
dec
push
pop
movs
out
dec
mov
mov
inc
add
mov
mov
mov
arpl
stos
pushf
in
dec
adc
ins
test
inc
adc
mov
mov
push
cmps
retf
dec
push
jmp
jbe
int3
pop
adc
loopne
sbb
movs
and
pusha
loope
xchg
jecxz
sub
retf
cdq
inc
daa
or
jmp
add
push
push
inc
mov
pop
test
dec
add
test
aad
jns
mov
sub
js
div
jo
out
call
jmp
(bad)
fisub
mov
and
mov
imul
out
xchg
frstor
push
and
icebp
mov
retf
cdq
shl
test
cmp
mov
adc
int
fwait
stc
cs
jl
mov
xchg
or
mov
mov
pop
std
movs
jno
out
mov
cmp
cmp
xor
xchg
push
adc
lods
jns
adc
xor
je
mov
xchg
jns
in
ds
mov
mov
xor
pop
xchg
push
adc
xchg
push
xor
imul
xor
mov
mov
das
sbb
mov
loop
imul
pop
cmp
je
fwait
jp
(bad)
mov
sar
iret
mov
add
mov
sbb
js
(bad)
sub
cmp
jns
out
dec
sbb
in
test
or
icebp
inc
and
or
or
xchg
movs
jmp
xor
popa
movs
div
lods
fisttp
push
ficomp
shl
push
scas
in
sub
repnz
mov
nop
shl
sub
sbb
dec
mov
xchg
js
sbb
sar
adc
ret
(bad)
mov
iret
mov
in
ins
and
dec
rol
sbb
loop
inc
sbb
je
add
mov
jecxz
push
mov
push
fs
mov
or
cmps
aam
jl
out
imul
stos
leave
push
push
cli
mov
cmp
xchg
sbb
pop
xchg
cmc
daa
dec
add
fdivr
jns
retf
ss
retf
cmps
aam
inc
sbb
and
xchg
dec
adc
mov
clc
or
les
sbb
mov
jl
sti
mov
add
xchg
inc
cs
mov
sbb
push
push
cmps
jmp
xor
(bad)
nop
jge
(bad)
cmps
nop
leave
sub
sbb
mov
push
ins
int
popf
fidiv
push
test
pop
gs
jg
mov
jle
pop
in
sub
mov
adc
bound
pushf
call
dec
lods
out
and
enter
lods
sub
jl
lea
repz
shl
ins
mov
inc
add
int
jle
(bad)
mov
aaa
std
mov
scas
int3
das
inc
fstp
call
add
push
mov
push
adc
scas
jae
loope
inc
adc
cmp
out
mov
pop
xlat
mov
fadd
pop
adc
dec
enter
cmp
test
sbb
out
pushf
fidivr
sbb
mov
dec
add
add
(bad)
iret
xchg
aam
icebp
xchg
mov
sahf
fnstsw
cmp
cdq
xchg
push
ds
test
pop
les
cmp
pop
lods
(bad)
and
xchg
inc
cmovae
and
mov
not
mov
xchg
jle
call
push
and
ins
fld
movs
jecxz
sbb
xchg
inc
sbb
pop
mov
push
xchg
pop
pop
loop
jno
(bad)
pushf
dec
push
loope
fstp
xchg
(bad)
sub
out
je
push
int3
lahf
inc
daa
(bad)
mov
jno
leave
mov
in
arpl
jmp
popa
and
push
hlt
push
fs
mov
push
pop
lods
fimul
jnp
dec
stos
call
pop
pop
mov
and
ins
retf
cdq
inc
daa
out
outs
sub
addr16
mov
inc
xor
mov
push
sbb
fmul
mov
and
add
pusha
in
mov
mov
movs
and
xor
mov
inc
cmps
in
push
ss
inc
and
lea
xchg
xchg
retf
add
bnd
sbb
add
movs
and
sub
ret
sub
dec
pop
push
fist
pusha
or
mov
arpl
or
mov
inc
xor
(bad)
(bad)
movs
(bad)
into
fwait
stc
mov
jb
mov
sti
mov
popa
test
push
hlt
xchg
imul
in
aas
jl
in
fiadd
mov
sbb
jb
out
push
adc
movs
xchg
or
push
add
idiv
jl
pop
jl
iret
cmp
mov
iret
mov
jmp
imul
int
gs
xchg
inc
add
daa
push
xor
adc
mov
xor
pop
std
cmps
lds
mov
jp
cld
movs
inc
add
stc
stos
xchg
cmc
pop
xor
mov
pop
cmp
cmp
mov
mov
jae
int3
sub
sahf
inc
div
cmps
(bad)
cmp
icebp
and
add
dec
and
jae
aaa
pop
cmc
mov
fimul
cs
jmp
push
in
mov
es
dec
cs
mov
sbb
xchg
mov
imul
(bad)
mov
movs
out
daa
add
lds
xor
mov
sbb
scas
popf
fidivr
sub
rol
inc
mov
mov
xlat
or
jne
or
mov
jmp
sbb
dec
adc
mov
(bad)
(bad)
pop
sub
add
jg
jecxz
and
push
mov
jb
out
mov
add
clc
push
and
jl
mov
rcl
adc
add
cmp
pop
mov
loopne
or
repz
cmc
jp
jecxz
imul
and
repnz
push
cld
mov
mov
das
jl
sahf
popf
fild
dec
and
adc
ret
movs
mov
cli
mov
mov
jl
add
fsubr
cmp
fisttp
push
fisttp
test
lock
in
xor
xor
mov
not
jae
inc
add
popf
fdiv
inc
shl
outs
and
mov
mov
cmp
mov
popa
xor
loop
push
ss
mov
nop
xlat
jae
hlt
xchg
pop
les
sbb
mov
ret
pop
sbb
inc
(bad)
test
aas
ins
fnstsw
and
mov
sub
fistp
jno
adc
loopne
dec
cli
mov
lods
jmp
jbe
sub
mul
inc
or
mov
push
xor
inc
fnstsw
call
add
mov
mov
push
push
(bad)
in
jae
out
jl
dec
jmp
inc
mov
mov
paddd
(bad)
pushf
inc
add
xchg
xchg
ror
pop
mov
icebp
and
inc
xlat
xchg
jae
(bad)
mov
ret
and
(bad)
add
push
mov
(bad)
inc
add
je
out
cmp
scas
arpl
ret
and
pop
fist
imul
inc
push
adc
movs
lahf
(bad)
pop
push
sub
lock
test
dec
or
call
xchg
stc
add
dec
test
xor
lock
jge
aam
lods
mov
or
mul
push
xchg
dec
and
movs
addr16
and
sub
add
icebp
add
and
xchg
jp
in
nop
fidiv
in
add
fcom
movs
int3
dec
xsavec
jge
sbb
test
retf
rcl
retf
in
push
xor
mov
shl
add
xlat
xor
jecxz
or
js
cdq
outs
or
mov
or
mov
jl
mov
sti
mov
outs
xor
mov
dec
dec
mov
xchg
xchg
rcr
inc
sti
inc
and
pusha
fistp
mov
xor
jge
adc
mov
mov
pop
adc
popf
cwde
retf
push
gs
pop
adc
xchg
dec
adc
retf
xor
inc
and
push
shl
lds
dec
xchg
pop
sbb
mov
rol
icebp
pop
inc
movs
out
cmp
mov
out
sbb
test
clc
mov
adc
pushf
inc
das
clc
mov
jnp
pop
push
aad
ins
and
rcl
cld
cmp
pop
aam
jl
sbb
mov
xor
js
mov
sbb
test
add
cld
and
clc
dec
or
pop
xor
adc
mov
ins
hlt
lods
inc
add
inc
lods
call
jmp
xchg
xchg
lock
pop
xor
lods
addr16
pop
sti
mov
mov
pop
nop
into
cmp
add
sub
fisttp
pushf
fild
dec
mov
xchg
push
ds
mov
xor
shl
dec
stos
lock
cs
loope
dec
mov
push
inc
fiadd
(bad)
ficomp
push
sbb
jo
stos
arpl
cli
mov
movs
jmp
push
cmp
mov
mov
xchg
xchg
int
mov
in
scas
mov
fidivr
jle
lods
inc
add
movs
mov
inc
add
add
iret
jae
pushf
ins
sub
pop
shl
ror
inc
das
or
call
ret
test
in
ins
pop
shl
cli
pop
adc
pushf
bound
pop
jl
sahf
push
sbb
out
lods
dec
adc
(bad)
xchg
jns
adc
lea
and
xchg
jl
lock
fisubr
addr16
sub
or
pop
xchg
(bad)
pop
xchg
enter
xor
mov
xchg
shl
push
mov
push
xor
mov
shl
inc
sbb
cmps
jge
sbb
xor
inc
xor
mov
sbb
pop
stos
in
dec
mov
xor
mov
xor
sub
cwde
fistp
inc
and
sbb
rol
shl
xchg
mov
daa
aaa
js
inc
loopne
pusha
add
push
test
dec
aas
adc
loope
push
aaa
pop
rol
or
js
lea
adc
push
enter
je
or
sbb
mov
cmps
mov
add
and
push
mov
jp
sub
mov
fld
dec
mov
dec
or
out
mov
mov
ins
stc
mov
add
lods
into
sub
jmp
dec
sub
add
xchg
mov
dec
sbb
pop
fld
inc
add
dec
push
outs
sbb
mov
sbb
repz
or
div
ss
xchg
xor
fld
pop
push
sub
sbb
mov
enter
pop
mov
pop
inc
jecxz
push
(bad)
xchg
push
adc
cld
sahf
push
int
dec
or
fistp
sar
bound
dec
mov
xchg
(bad)
int3
sub
icebp
and
jmp
cld
outs
or
sbb
mov
xor
les
test
push
sbb
jmp
imul
push
data16
std
jg
rcr
sub
jb
push
iret
mov
cwde
call
or
or
cli
inc
sbb
mov
or
sub
add
xor
lods
pushf
cmc
daa
fs
dec
fnstsw
repnz
cli
es
test
and
push
mov
mov
pushf
(bad)
(bad)
push
and
inc
ficomp
sub
leave
xor
sub
push
ret
test
outs
add
push
xlat
cmp
xchg
sub
mov
stc
call
jecxz
lods
out
or
cmp
cmps
xchg
(bad)
xor
in
xor
enter
adc
mov
dec
sbb
sbb
in
sub
stos
bound
push
pop
mov
push
es
mov
push
mov
xlat
daa
inc
mov
ins
shl
lock
or
xor
add
mov
xchg
les
mov
jmp
in
pop
repz
xchg
(bad)
ss
push
loop
push
sti
mov
jb
clc
stos
xchg
div
jbe
pop
scas
fiadd
pop
rcl
sbb
mov
rol
mov
xlat
movs
fdivr
pop
in
dec
sbb
cwde
ficomp
dec
mov
outs
ss
pop
sub
fisubr
dec
(bad)
into
dec
sub
push
mov
push
fsubr
xor
mov
push
dec
xor
jp
imul
push
add
xchg
js
rol
test
enter
cmp
add
xchg
int3
scas
mov
idiv
lods
arpl
sub
(bad)
movs
xchg
cli
pop
sbb
(bad)
ins
das
cli
cwde
inc
push
clc
xchg
xchg
shl
mov
add
fwait
cdq
(bad)
and
xchg
gs
jge
retf
ins
sub
retf
push
div
test
pop
sahf
fld
rcl
sbb
mov
int3
lahf
dec
sub
mov
sahf
(bad)
and
call
or
ret
mov
mov
aaa
pop
ficomp
imul
repz
inc
and
cmp
push
outs
mov
xor
cmc
push
aaa
sub
repnz
xor
dec
fnstsw
mov
test
xchg
ins
and
push
push
aaa
push
mov
gs
nop
sahf
fisttp
(bad)
lods
mov
inc
sub
pop
stos
leave
pop
inc
aad
mov
mov
mov
popf
jge
jmp
inc
mov
add
neg
hlt
xchg
dec
and
pop
add
adc
shl
test
pop
mov
push
inc
xlat
cwde
push
push
sbb
sahf
ins
sub
pop
mov
(bad)
aas
rol
add
adc
adc
movs
aad
movs
(bad)
add
xchg
jae
ror
mov
fcom
jge
cld
movs
xchg
sar
(bad)
out
fistp
cmc
mov
or
mov
jmp
and
mov
pop
add
sub
push
lods
fisttp
pop
aad
jle
outs
(bad)
and
test
push
adc
movs
jge
add
(bad)
ins
fistp
xchg
and
fdivr
inc
xor
inc
mov
sub
inc
mov
aaa
je
(bad)
inc
add
sub
imul
jns
(bad)
mov
into
popf
jnp
out
leave
sbb
jp
push
inc
mov
pop
outs
add
xchg
push
add
pop
mov
and
mov
push
test
fs
dec
or
mov
fbstp
(bad)
cdq
(bad)
movs
out
in
mov
arpl
(bad)
pushf
rcr
stc
inc
or
inc
and
pop
and
imul
ins
or
dec
sbb
pop
cmp
stos
shl
adc
jnp
xchg
mov
sar
inc
xchg
neg
fisttp
aam
(bad)
mov
sbb
bound
and
push
(bad)
out
pop
call
mov
jg
scas
enter
stc
mov
icebp
call
lds
mov
fild
add
push
xor
add
lock
sbb
xchg
xor
sub
add
pop
xchg
(bad)
mov
mov
leave
mov
shr
jae
scas
in
sub
test
pop
out
shl
jmp
push
add
je
jb
(bad)
cmp
leave
inc
or
pop
cmp
int3
(bad)
aad
std
and
arpl
(bad)
(bad)
push
adc
pop
aaa
dec
or
mov
aam
aaa
push
sbb
jbe
mov
or
jle
jne
jle
pop
out
call
fcomp
movs
movs
(bad)
mov
add
rcr
repz
push
sbb
xor
sti
mov
sbb
sub
xchg
neg
xchg
mov
and
push
cmc
test
inc
call
mov
lock
add
jl
cmps
lods
(bad)
mov
out
lds
push
ret
xchg
mov
clc
test
push
inc
fadd
pop
mov
sbb
lods
retf
xor
(bad)
ror
je
push
dec
gs
ds
xchg
aam
in
add
pop
ret
ins
jg
adc
dec
fwait
ret
xor
jae
and
scas
mov
cmps
lds
sub
leave
or
adc
stc
inc
ins
add
xchg
jnp
repnz
sub
or
xchg
sub
dec
test
imul
pusha
mov
push
mov
jns
ret
ds
xchg
aam
fisub
test
push
and
fiadd
addr16
mov
xchg
lods
loop
sti
(bad)
test
mov
in
jmp
ins
movs
movs
div
jb
bound
mov
mov
fwait
(bad)
mov
movs
int
and
sbb
mov
lds
pop
mov
add
stos
sub
fs
int
xor
or
push
icebp
mov
ins
or
dec
popf
into
(bad)
call
ss
das
int
and
test
or
pop
sbb
push
jl
adc
sub
push
dec
xor
add
pop
or
inc
aas
bound
pop
shl
mov
mov
push
aad
jle
out
stos
jb
sub
es
or
dec
ins
push
js
cmovo
pop
push
or
jb
enter
adc
adc
add
lock
mov
jp
rcl
mov
ins
add
outs
xor
xor
ja
dec
loop
aam
sahf
mov
mov
sbb
inc
add
adc
jo
mov
pop
sbb
push
pop
or
stc
mov
mov
jb
(bad)
(bad)
sub
jb
es
lock
loopne
push
aaa
pop
out
sbb
(bad)
popa
mov
adc
imul
sbb
dec
sub
push
loopne
in
movs
enter
jmp
dec
in
push
rol
stos
jns
test
mov
and
shl
and
inc
out
mov
fld
dec
xor
jno
out
(bad)
mov
lahf
fnstsw
adc
xchg
js
das
add
xor
xor
xor
add
lock
fs
and
lock
shl
sub
daa
leave
inc
push
gs
(bad)
loop
std
test
mov
lahf
cld
mov
inc
pop
sub
pop
sbb
push
outs
test
or
add
icebp
and
adc
inc
sub
jbe
aam
hlt
mov
or
or
dec
adc
cmps
inc
in
out
dec
mov
pop
mov
repz
sub
pusha
add
xor
mov
pop
add
loop
repnz
test
imul
push
arpl
and
and
cmps
in
cmp
sub
dec
mov
test
retf
push
push
ins
cs
call
arpl
jl
es
jp
dec
out
lods
cmps
adc
pop
in
mov
or
sub
xor
push
or
mov
mov
mov
imul
popa
cmp
push
and
pushf
add
jb
mov
fwait
into
pop
lock
scas
cwde
mov
mov
stos
jns
into
mov
lahf
ret
push
sub
add
add
add
pop
mul
retf
xchg
repz
cmp
ins
jnp
adc
ficom
mov
sbb
jo
push
or
leave
mov
pushf
sbb
(bad)
fstp
xchg
dec
call
xor
call
xchg
js
mov
xchg
(bad)
xchg
cli
adc
loope
dec
add
lods
cmps
shr
gs
or
test
mov
scas
(bad)
and
fs
mov
(bad)
fst
pop
cmovl
dec
bound
pop
xor
mov
inc
adc
lods
lds
iret
mov
dec
je
ret
loopne
shl
mul
sub
and
adc
dec
pop
lods
mov
fcom
or
je
xor
aaa
adc
xor
fstp
sbb
addr16
jo
and
lods
mov
cmps
ret
inc
or
pop
xor
sbb
inc
push
gs
repnz
pop
add
dec
push
shl
adc
sbb
(bad)
iret
mov
mov
cmp
sub
pusha
cmp
or
and
xchg
mov
mov
or
mov
add
ds
rcr
adc
loope
(bad)
jbe
sub
outs
or
jp
or
xor
jmp
and
dec
cmp
dec
add
scas
clc
mov
mov
mov
rsqrtps
dec
call
or
mov
movs
leave
hlt
mov
jbe
data16
in
call
test
movs
jb
jbe
es
sbb
lock
dec
or
dec
fist
in
mov
ret
jno
stc
mov
jle
jne
jno
adc
dec
ficomp
daa
inc
sub
sbb
bound
push
adc
mov
cmp
scas
les
mov
and
inc
shl
and
xchg
fistp
mov
inc
pop
ret
lahf
repnz
loope
(bad)
inc
xlat
cdq
fimul
sbb
or
xchg
in
sar
push
ds
mov
mov
dec
push
dec
test
xchg
mov
xchg
movs
cli
inc
xchg
mov
inc
ss
pop
out
aad
jae
sbb
cld
or
cmp
push
adc
shl
xchg
aam
pop
push
jmp
test
ins
and
sub
pop
cmp
sbb
inc
pop
jne
out
movs
(bad)
mov
xchg
sbb
js
sub
cmps
rcl
mov
outs
pop
das
pop
add
or
dec
sahf
fst
xor
pop
sbb
ins
lock
loope
sahf
sti
inc
xor
pop
inc
jmp
stos
stc
call
out
fisubr
ins
xor
sub
adc
ja
jmp
inc
and
xor
cmp
cmp
pusha
adc
push
sbb
push
xor
pop
imul
jno
ins
or
jmp
aam
dec
adc
(bad)
scas
loope
xchg
push
push
ss
xchg
fstp
add
inc
sbb
mov
pushf
fistp
mov
mov
sub
inc
or
mov
in
out
mov
test
mov
cmp
pop
aaa
jle
cmps
loope
(bad)
jge
sbb
retf
sbb
add
jmp
idiv
jge
push
sbb
push
cmp
out
jo
push
or
aad
hlt
add
mov
mov
mov
cli
xchg
enter
jge
inc
xchg
mov
add
or
dec
add
pusha
push
jmp
mov
cmp
cmp
sbb
bound
push
ds
and
int3
mov
xchg
shr
icebp
xchg
fld
push
adc
arpl
jp
jb
ds
adc
xor
push
or
cmp
adc
int3
mov
scas
in
sahf
mov
jnp
jo
dec
or
mov
into
xchg
inc
and
rcl
cmp
test
xchg
push
adc
retf
push
xor
js
sahf
ret
data16
stos
call
inc
sub
(bad)
shl
push
adc
stos
int3
or
scas
cld
mov
shl
jp
ins
cmp
dec
sub
fstp
pushf
std
(bad)
(bad)
add
pop
add
outs
or
sub
pusha
add
mov
test
push
or
or
mov
mov
inc
out
xchg
test
data16
pop
push
inc
ds
adc
pop
pop
xor
jg
dec
or
mov
sahf
mov
out
fdivr
adc
inc
add
sub
mov
fnstsw
in
fwait
rcr
retf
test
cdq
fsub
lods
jmp
movs
iret
xchg
popf
aad
into
sub
je
pop
add
sbb
ds
stc
scas
mov
addr16
mov
fwait
mov
adc
pop
loopne
lds
out
pushf
fisub
and
push
clc
arpl
or
add
test
push
inc
adc
pop
xor
pusha
add
ins
int3
xchg
shl
sbb
pop
jb
push
or
push
sbb
push
or
scas
mov
out
leave
nop
sub
arpl
das
push
jmp
scas
int
repz
pop
add
mov
popf
leave
jno
lods
fdivr
test
outs
adc
push
adc
mov
pop
push
dec
adc
rcr
pushf
into
xchg
jae
sub
pop
xchg
mov
and
addr16
push
iret
stos
in
test
fist
push
adc
push
and
jb
jno
pop
add
jmp
clc
mov
mov
ja
pop
pop
ss
dec
in
sbb
adc
push
pop
pop
or
inc
adc
push
pop
inc
aas
and
add
and
push
inc
adc
cmp
movs
out
mov
jg
push
pop
push
hlt
push
loop
fbld
aaa
dec
mov
movs
ret
lods
stc
sar
dec
sub
out
pusha
repnz
pop
xor
loop
sar
cs
or
or
std
mov
mov
jnp
cdq
test
dec
xor
mov
mov
pop
xor
and
in
cwde
ror
mov
xor
hlt
mov
iret
data16
mov
data16
sub
(bad)
aad
aad
fistp
mov
test
mov
les
in
in
iret
popf
in
(bad)
pop
adc
call
mov
out
adc
push
ret
mov
mov
lock
leave
inc
or
push
sub
aaa
inc
sbb
push
push
adc
mov
push
adc
je
(bad)
xchg
loopne
cli
cmp
mov
mov
and
jg
out
adc
stc
inc
or
imul
das
inc
out
add
xor
(bad)
mov
adc
in
ficomp
inc
in
add
data16
mov
mov
pushf
push
add
pop
in
mov
jnp
in
mov
imul
push
adc
xchg
mov
xchg
mov
cmp
pop
sbb
mov
fnstsw
push
jg
jp
hlt
out
out
in
adc
jb
push
test
lods
retf
clc
inc
jb
pop
add
imul
imul
es
or
or
pusha
add
(bad)
mov
call
mov
and
adc
add
jnp
dec
mov
loop
jns
pop
sbb
pop
je
push
loopne
pop
adc
bound
pop
pop
sub
jbe
sub
aam
mov
movs
iret
call
push
retf
add
mov
mov
mov
mov
push
cmp
outs
adc
std
fwait
xchg
mov
adc
jmp
mov
lds
jb
sti
mov
mov
mov
mov
movs
jp
es
aaa
or
loopne
imul
add
ins
or
sub
rcr
sub
cld
fdiv
mov
lods
movs
cli
pusha
cmp
dec
cmp
popa
sub
repz
mov
pop
(bad)
push
inc
and
in
mov
mov
cmp
jecxz
pushf
fistp
cmp
jns
popa
sub
xchg
xchg
int3
mov
pop
ret
stc
addr16
sbb
cmp
lea
inc
sbb
sbb
mov
or
inc
cmps
inc
or
push
cmovge
imul
and
sub
dec
cmp
lods
fistp
cmp
jae
jns
(bad)
sahf
fnstsw
loope
jecxz
dec
add
sbb
enter
xchg
fistp
loop
jno
dec
cmp
ret
add
sub
hlt
mov
mov
popf
xchg
retf
or
dec
mov
xchg
mov
lods
int
outs
sub
jb
pop
xor
or
mov
cdq
(bad)
xchg
enter
cwde
sar
push
addr16
lods
frstor
int
clc
lods
in
xor
pop
xor
cmp
cmps
out
lds
test
inc
or
stc
mov
xchg
pusha
and
dec
mov
(bad)
inc
push
xor
mov
and
andnps
jg
daa
loope
and
ss
push
out
lods
out
mov
cmps
loope
xchg
fld
ins
xor
adc
push
out
stos
je
pop
sbb
int3
xchg
aas
dec
adc
sub
imul
iret
mov
es
sub
(bad)
xchg
aam
repz
push
sbb
push
push
pop
push
mov
xchg
shl
dec
push
pusha
sub
int
mov
nop
jns
and
fs
jne
cmp
xchg
fisub
mov
popf
cli
cwde
movs
sahf
add
and
std
mov
mov
call
mov
lds
sub
xor
lods
leave
xchg
mov
dec
iret
je
ficomp
jnp
xlat
movs
sar
jbe
and
call
gs
jmp
ds
adc
adc
ja
cmp
mov
test
mov
iret
xor
sbb
shl
pop
cmp
sub
xor
cs
xor
pop
sbb
mov
nop
fbld
js
dec
adc
pop
xor
pop
sub
fstp
and
retf
mov
mov
scas
fstp
xor
not
sbb
imul
or
pop
sbb
mov
fwait
jg
push
mov
call
iret
mov
push
and
inc
adc
dec
test
mov
test
lea
adc
xchg
xchg
in
mov
and
push
dec
pop
jns
leave
mov
cwde
dec
jl
ins
xor
mov
inc
or
jge
xlat
test
stos
in
test
das
dec
cmp
sti
jge
sub
dec
ja
push
in
out
lods
hlt
xor
jno
jg
and
inc
xor
add
dec
in
xchg
popa
sub
cmp
push
mov
cmc
sub
mov
mov
aas
dec
adc
xor
pushf
cmc
sub
mov
mov
pusha
mov
sbb
inc
xchg
mov
lahf
(bad)
mov
sbb
in
inc
mov
xchg
ror
inc
test
in
xchg
mov
mov
int3
(bad)
stos
in
shl
daa
adc
or
retf
xchg
inc
fs
pop
out
cmps
ja
cmps
les
sbb
sbb
jo
and
pop
or
dec
or
jne
(bad)
fisubr
(bad)
xlat
mov
xchg
dec
or
pushf
dec
sub
leave
mov
add
and
aaa
push
dec
and
ds
sbb
not
xchg
pop
inc
xor
daa
fs
xchg
(bad)
mov
nop
pop
inc
and
mov
and
inc
adc
out
retf
jnp
stos
enter
in
outs
xor
or
inc
gs
int
mov
loopne
push
or
pop
pop
loope
xchg
aam
repz
fdivr
push
adc
out
aad
repnz
hlt
movs
out
ss
mov
jl
pop
das
jb
inc
push
push
sbb
or
mov
stos
mov
mov
test
lahf
mov
cld
test
sub
ja
stc
repz
aas
push
sub
daa
pop
stos
(bad)
mov
xor
aas
mov
popf
lds
jo
pop
lds
pop
adc
dec
pop
inc
xchg
jo
pop
mov
popa
adc
or
lods
out
mov
xor
mul
xchg
mov
cmp
sbb
or
pop
mov
out
pop
inc
sub
xor
push
dec
mov
or
xlat
fs
jb
jns
jle
and
cmp
push
in
das
dec
add
dec
and
fldenv
clc
mov
js
je
and
mov
icebp
or
pop
add
pop
jns
dec
loope
xchg
daa
mov
imul
aas
and
or
cmp
inc
pop
sub
jbe
sbb
ds
in
cwde
shr
mov
rcl
jno
push
(bad)
mov
cmc
cdq
inc
clc
or
mov
in
mov
rcl
push
sar
mov
lahf
push
jmp
xchg
mov
push
jo
and
das
ins
add
xor
adc
sbb
inc
push
inc
sub
enter
stos
cli
jno
mov
cwde
leave
push
and
cmc
xor
mov
(bad)
jmp
push
jp
scas
dec
ja
data16
and
stc
cmovl
push
loopne
icebp
pusha
jmp
cdq
jmp
int
cmc
or
nop
jb
xor
pop
adc
push
pop
sub
clc
mov
mov
jmp
cmc
nop
stos
mov
mov
mov
pop
jge
sbb
pop
in
add
mov
mov
jmp
mov
xchg
fist
or
and
imul
fs
push
xor
xchg
(bad)
jp
pop
ds
push
adc
pop
adc
in
mov
popa
call
jmp
mov
pop
jbe
xor
inc
push
xor
jo
inc
lea
and
mov
or
sti
gs
rcl
lods
hlt
lea
pop
add
mov
adc
inc
mov
mov
cwde
call
int3
(bad)
out
(bad)
mov
inc
pop
jnp
stc
iret
mov
stos
jmp
call
push
mov
fsubr
jnp
jae
push
clc
xor
rcl
adc
mov
xchg
clc
mov
xchg
ret
mov
and
in
shr
inc
add
lds
in
call
std
(bad)
rcr
lods
(bad)
mov
stos
fnstsw
pop
cmp
mov
mov
cmp
ficomp
mov
mov
mov
fdiv
leave
popf
retf
inc
and
gs
les
dec
ins
aas
jge
iret
pop
in
jmp
fwait
and
sub
loope
loopne
iret
jnp
pop
out
cmps
leave
test
mov
jnp
ja
pop
(bad)
loope
stc
test
nop
mov
add
pop
xor
jl
sti
test
mov
cwde
frstor
jnp
popa
sbb
dec
stc
jae
jo
push
add
test
mov
lahf
in
call
hlt
adc
les
xrelease
cmp
(bad)
mov
mov
lahf
arpl
pop
or
nop
fst
ret
ss
aaa
ja
and
mov
lock
xchg
test
imul
mov
xchg
cmp
mov
xor
aam
and
jmp
out
das
cmp
dec
xchg
sbb
xchg
xor
inc
sub
adc
fisttp
fld
test
adc
inc
mov
fadd
pop
jl
pusha
ins
cwde
lods
scas
pop
leave
out
mov
sbb
fist
adc
cld
aas
mov
xchg
jns
rcr
jp
int3
into
xchg
in
push
adc
sar
cmp
in
iret
icebp
mov
inc
jns
jno
and
cmp
call
or
cs
rcl
bound
das
cmp
(bad)
jb
ds
jb
fxch
dec
lds
leave
mov
mov
scas
pop
jl
mov
jo
mov
sub
cmp
dec
pop
aam
adc
fwait
pop
movs
aam
jmp
xchg
sub
mov
or
scas
sub
sbb
pop
std
dec
xor
pop
sbb
cmp
mov
mov
popa
fbstp
jb
cdq
push
js
cmp
push
adc
jns
adc
cwde
inc
adc
mov
jnp
push
xchg
stc
mov
or
pop
adc
movs
gs
xlat
mov
fcomp
inc
out
jp
mov
jo
xlat
imul
xor
sub
stos
adc
push
push
add
or
(bad)
(bad)
sar
icebp
jmp
mov
xchg
repz
xor
call
adc
hlt
daa
sub
aaa
cmp
(bad)
pop
stos
dec
clc
xor
aas
loop
or
mov
cs
(bad)
repnz
push
stos
in
sbb
mov
mov
sub
jbe
jbe
fldcw
pusha
mov
fcmovnb
dec
jno
cmp
fdiv
loope
es
add
test
mov
sub
sti
stc
mov
sti
mov
jne
mov
mov
inc
(bad)
addr16
imul
jle
add
mov
sbb
xchg
stc
sub
cdq
mov
xor
(bad)
xchg
ror
ds
mov
ja
and
dec
adc
sbb
ss
mov
jnp
adc
cmp
mov
add
dec
push
mov
sub
xchg
clc
adc
fcom
add
sbb
sub
js
fwait
ret
loop
and
div
cli
or
jle
test
clc
inc
ja
cmp
mov
or
add
mov
pop
mov
and
cmp
je
cmp
sub
mov
idiv
repnz
ds
sti
add
inc
sbb
out
jl
test
pop
daa
pop
inc
or
(bad)
repnz
call
mov
xchg
aad
dec
mov
jge
jo
stos
or
cmp
lea
push
push
pop
cdq
pop
mov
inc
push
mov
xor
daa
mov
xchg
ficomp
loop
sub
sbb
mov
in
arpl
int3
push
aam
mov
scas
imul
cmp
pop
cmp
fild
mov
jb
mov
es
repz
ja
ror
jo
and
or
xor
in
inc
loop
dec
sub
scas
in
dec
sub
or
in
jae
movs
jo
std
xor
mul
test
(bad)
data16
(bad)
(bad)
std
mov
out
sbb
fisttp
mov
pop
repnz
(bad)
fwait
add
pushf
ja
mov
pop
scas
xchg
adc
jae
jbe
adc
push
or
not
hlt
inc
ins
xchg
jns
stos
jb
push
xchg
in
mov
neg
sahf
xchg
mov
ins
pop
aad
call
inc
dec
and
inc
inc
jbe
in
hlt
and
jge
outs
lds
sub
push
lods
cld
push
jl
mov
cmp
xor
push
in
fwait
nop
shr
sbb
fldpi
inc
aaa
(bad)
and
sub
sar
fsubr
adc
push
out
popf
pop
imul
xor
mov
data16
xchg
mov
inc
lahf
inc
mov
xchg
inc
daa
call
out
movs
rcl
das
sub
mov
sub
sti
add
inc
or
mov
mov
int
cli
cdq
add
jo
jns
inc
sysenter
iret
rcl
xchg
fdiv
ficomp
mov
call
ins
sub
test
arpl
jp
mov
pop
mov
mov
sbb
mov
aaa
sar
push
inc
and
pop
jo
push
data16
xchg
dec
bound
dec
and
or
add
adc
mov
es
mov
retf
xlat
pop
push
movs
ja
repz
cmps
lods
imul
push
push
mov
add
adc
xchg
push
call
push
ins
fwait
int3
cmp
test
jo
and
retf
fmul
dec
dec
xchg
jno
mov
inc
sub
loop
dec
xchg
dec
lods
fwait
dec
sub
movs
aam
mov
and
iret
fnstsw
stc
into
(bad)
mov
adc
fcomip
into
mov
push
push
add
mov
adc
into
and
pop
sub
mov
or
clc
data16
push
mov
stos
fstp
aas
and
mov
mov
push
pop
leave
sub
movs
scas
std
fisubr
js
xchg
xor
es
mov
jno
inc
call
mov
ds
fwait
push
in
ds
dec
jl
scas
fld
(bad)
xchg
test
pop
and
movs
out
dec
push
out
mov
repz
fisttp
sbb
arpl
ret
repz
sbb
inc
ds
or
mov
fs
mov
(bad)
cmp
dec
stos
nop
mov
sbb
scas
add
(bad)
xor
inc
or
cmps
mov
fld
call
xchg
fnstcw
inc
ds
stos
out
inc
pop
mov
sbb
mov
jnp
sbb
jg
xor
mov
ja
ret
push
mov
cmp
fs
das
mov
mov
jmp
(bad)
icebp
sbb
mov
loope
xor
inc
jnp
test
mov
mov
adc
pop
xor
aad
les
and
(bad)
push
push
push
daa
(bad)
mov
sub
daa
sub
sbb
pop
movs
fdivp
retf
jns
push
jb
jo
jo
add
sbb
mov
add
cmp
dec
and
inc
test
sbb
enter
jae
inc
retf
or
fisttp
mov
mov
mov
aad
dec
fisub
adc
scas
hlt
push
adc
dec
inc
cmp
std
in
sub
mov
movhps
jecxz
repz
mov
outs
test
or
pop
lahf
int
push
inc
sar
imul
and
mov
inc
into
in
and
sub
fbstp
or
mov
ins
imul
les
jae
mov
xor
cdq
retf
xchg
lods
jb
cmc
imul
ja
mov
add
or
dec
and
push
ins
sub
adc
mov
jmp
jne
out
jo
cmps
sub
leave
dec
xchg
push
jg
or
out
int3
retf
loopne
cmp
and
dec
bound
jg
push
stc
shl
dec
movs
popa
mov
fsubr
adc
inc
je
mov
mov
sbb
mov
sbb
pop
ds
idiv
cli
je
ret
mov
lds
and
inc
push
sub
jmp
lds
es
stc
loopne
cld
jle
jmp
rcl
sub
fwait
jg
mov
fwait
pop
adc
or
fmul
push
inc
and
sub
rol
or
mov
sbb
mov
outs
mov
arpl
or
inc
enter
cld
dec
add
push
jae
inc
outs
rcl
test
fwait
sub
push
aaa
sub
mov
scas
(bad)
test
cmp
mov
in
cmc
jge
xlat
fld
dec
sub
sbb
ds
xchg
rol
pop
out
and
pop
cmp
lds
(bad)
add
mov
fistp
pusha
pop
dec
mov
gs
push
mov
ja
int
push
xor
sub
(bad)
xlat
xor
fucomip
cmp
adc
mov
rol
aam
jle
fsub
sar
sbb
in
xor
mov
test
adc
cmp
xchg
or
stos
xor
inc
jns
add
add
(bad)
mov
scas
xlat
mov
sbb
mov
sbb
lahf
cs
test
call
dec
enter
push
(bad)
pop
js
ret
cmp
or
xlat
dec
jmp
xor
je
lods
leave
and
outs
mov
jns
movs
push
dec
jno
and
popf
stos
repnz
fs
stos
mov
mov
push
hlt
mov
push
popf
iret
jne
dec
loop
cmps
daa
(bad)
pop
out
push
test
xchg
sahf
and
and
adc
aaa
rol
mov
mov
or
fadd
pop
je
ins
ins
xchg
bound
imul
int3
mov
popf
pop
sub
push
adc
sub
sbb
shl
(bad)
mov
stos
es
fbstp
(bad)
retf
dec
mov
jmp
sub
(bad)
xor
push
adc
fidivr
pop
sbb
dec
adc
outs
rep
jge
inc
inc
xor
inc
xchg
mov
jbe
mov
sbb
sti
xor
movs
leave
stos
test
mov
jo
sbb
xchg
pop
retf
pop
loope
adc
pop
xor
and
je
popa
pop
jmp
loop
cld
sub
dec
push
xchg
xor
inc
mov
xchg
pop
sub
xor
idiv
or
js
test
test
sub
inc
xchg
imul
fcomp
lea
mov
aas
sub
mov
push
test
(bad)
or
mov
xchg
cmp
jle
mov
icebp
lea
aas
mov
out
adc
outs
add
mov
int3
xchg
mov
ret
hlt
xor
test
jmp
sti
sub
ret
les
sbb
cld
das
add
jbe
call
or
hlt
mov
ret
add
mov
lods
add
sbb
(bad)
pop
iret
dec
push
addr16
jecxz
mov
push
push
jmp
sub
shl
(bad)
bound
ins
jmp
les
mov
lods
nop
pop
dec
push
adc
mov
rcr
jmp
inc
xor
sbb
pop
mov
push
icebp
es
pushf
fs
into
inc
repz
data16
inc
and
out
push
or
repnz
jns
jg
(bad)
imul
out
mov
jae
nop
enter
popf
loop
daa
add
or
fwait
sub
js
and
sbb
bswap
dec
lea
mov
push
cmps
repz
ret
adc
sub
push
mov
in
pop
add
std
adc
sahf
cmp
cmp
jmp
arpl
mov
xchg
add
loopne
xchg
stos
mov
cmp
loopne
push
sti
int3
push
(bad)
stos
fwait
aad
movs
pop
sbb
or
sahf
jmp
daa
or
ret
dec
xor
jle
cmc
inc
ds
pop
fcmovne
jns
test
xor
mov
test
xor
xchg
mov
aam
xchg
mov
test
daa
outs
jne
push
add
daa
out
mov
mov
out
jno
inc
xlat
mov
pop
rcr
or
adc
pop
not
cmp
daa
or
xor
mov
cmc
test
mov
sti
pusha
add
dec
les
ret
jge
fs
and
inc
loopne
fidiv
sub
add
jno
scas
pop
outs
out
mov
mov
push
clc
jo
jb
data16
stos
out
adc
xchg
pop
icebp
jae
js
in
retf
push
fucomi
or
cwde
inc
cmp
sbb
pop
ror
(bad)
mov
sub
push
xchg
cmp
mov
arpl
jo
not
js
and
xor
lods
aad
aad
pop
jg
call
push
pusha
stos
retf
push
std
xchg
sub
sub
push
icebp
(bad)
push
push
jmp
out
dec
mov
mov
cli
daa
sar
lea
hlt
or
adc
xchg
std
push
popf
pop
push
xor
jo
arpl
xchg
mov
sbb
fild
cld
fiadd
pop
(bad)
nop
aad
jmp
dec
or
xchg
push
fimul
inc
xchg
je
jp
sub
sbb
dec
xchg
repz
jnp
mov
mov
(bad)
add
add
pop
cmp
aas
imul
mov
lea
les
and
xchg
data16
xchg
mov
movs
and
cmp
out
inc
and
mov
sbb
iret
sahf
into
pop
arpl
push
xchg
push
scas
push
adc
hlt
movs
sbb
add
or
call
jbe
out
test
push
cmps
cmc
sub
and
pushf
cmp
mov
mov
dec
shl
push
dec
sub
outs
scas
shl
mov
aad
cmp
retf
cwde
xor
scas
jmp
jp
push
rcr
jmp
push
and
jl
outs
pop
bound
aam
es
xor
push
out
jae
pop
pop
test
cmps
fild
cmps
and
loop
pmullw
fidivr
jle
and
cmc
dec
mov
mov
js
adc
inc
fdiv
ins
idiv
pop
daa
inc
mov
sub
lods
xchg
loopne
jns
xor
push
sahf
push
in
div
cmp
or
xor
sbb
pop
or
rcr
push
pop
repz
mov
seta
aaa
nop
into
sub
pop
adc
cmp
data16
or
push
xor
test
cdq
jae
push
jg
hlt
aad
cld
int
shl
dec
sub
jns
adc
fs
mov
movs
adc
mov
ds
dec
loop
and
test
stos
jbe
inc
add
test
jnp
loope
jg
mov
mov
mov
js
loope
je
(bad)
movs
mov
das
add
pop
pop
les
push
std
mov
inc
enter
push
xchg
sti
pop
(bad)
out
ret
sbb
fmul
lea
sti
and
in
add
add
repz
cmp
out
mov
pop
xlat
gs
mov
and
in
cmp
test
call
mov
xlat
out
jp
inc
mov
jge
scas
and
(bad)
ja
inc
sub
imul
add
icebp
ds
retf
mov
jmp
call
dec
mov
add
dec
inc
pop
pop
mov
std
aas
inc
imul
int
ds
inc
ins
or
or
in
fsub
jge
mov
(bad)
xlat
out
cwde
xor
aas
inc
mov
idiv
mov
js
fwait
pop
out
cmp
xlat
inc
jns
sub
jnp
iret
xlat
adc
arpl
push
aam
cmps
es
pushf
out
les
dec
xor
sub
pop
mov
std
xchg
icebp
sbb
cmp
add
mov
bound
or
sbb
loopne
sti
or
rcr
or
loop
or
mov
lds
jmp
inc
mov
and
fisttp
out
adc
pop
sti
mov
cmp
dec
mov
lods
inc
sub
in
aam
push
cli
mov
stos
pushf
icebp
mov
jno
xor
test
adc
out
or
into
ror
and
rcl
enter
mov
add
sbb
add
pushf
jae
and
(bad)
rcl
and
xor
mov
jl
pop
loopne
xchg
and
lds
xor
cwde
xor
and
xchg
fmul
call
icebp
mov
and
sahf
xor
je
rcr
shl
sahf
int
mov
sahf
iret
mov
adc
push
add
push
pop
mov
test
cli
pop
lock
pop
push
shr
bound
jle
into
or
popa
cmp
pop
xor
rcr
adc
jnp
mov
mov
dec
mov
int
dec
test
pusha
mov
aad
mov
mov
push
imul
loop
mov
inc
idiv
ins
je
ret
popf
push
jo
in
jmp
adc
out
mov
ret
jno
stc
mov
retf
das
icebp
ss
inc
scas
xchg
pop
mov
js
loop
les
icebp
push
std
jb
stos
mov
cdq
call
and
leave
pop
hlt
or
fcomp
sub
(bad)
jge
cld
adc
pop
mov
and
ins
je
les
mov
retf
inc
adc
retf
daa
(bad)
sahf
cdq
cmc
xchg
lahf
pushf
xchg
nop
outs
je
fucomip
jbe
nop
xor
xchg
mov
sub
jo
rcl
lods
cmp
and
cmp
shr
inc
ja
or
mov
ret
popa
sti
pushf
push
xlat
xchg
and
out
jle
pop
or
xlat
(bad)
mov
dec
push
fcmovnu
mov
idiv
pop
and
jae
fidivr
popfw
or
stc
inc
ds
dec
pop
mov
cmp
mov
shl
fld
mov
sub
mov
add
popa
aad
pop
cmp
sub
jle
jmp
add
cmps
fild
and
dec
and
push
std
stos
arpl
lods
shl
rcl
rol
mov
cmps
movs
sbb
push
sar
xor
xchg
push
in
mov
jle
test
mov
ss
sub
add
xor
mov
xchg
adc
das
mov
fstp
jns
xchg
lock
(bad)
push
repnz
(bad)
int3
js
ins
xchg
pop
ja
retf
dec
mov
lahf
mov
sti
adc
jbe
pop
pop
jmp
lods
fcmovnu
retf
adc
int3
ds
push
clc
out
and
add
(bad)
sahf
push
dec
sub
test
jno
frstor
adc
mov
ret
push
mov
fcomip
jmp
std
cmp
jnp
inc
cmp
movs
jle
ss
loop
jbe
mov
test
les
aaa
shl
pop
stc
inc
xor
cmps
jbe
pop
je
ja
xchg
jae
call
retf
inc
loop
pop
aam
xor
pop
inc
inc
in
mov
xor
cmp
movs
outs
cmps
aam
sar
inc
(bad)
int3
adc
sub
js
shl
adc
jecxz
adc
iret
fnstsw
cmps
adc
mov
pop
(bad)
jmp
xchg
cli
in
imul
sbb
aam
mov
and
retf
dec
jp
xchg
clc
xor
hlt
aaa
jo
cmp
lea
int
and
or
jo
sub
ss
sbb
sti
mov
movs
pop
push
xchg
movs
jle
ud2
mov
push
adc
ja
das
test
cmp
(bad)
cwde
push
cmp
ds
push
ror
pop
lds
dec
addr16
mov
or
cmp
(bad)
call
lods
stos
mov
mov
sub
jp
fimul
stos
sub
pop
jmp
mov
inc
aaa
pop
sbb
jae
jp
push
xchg
or
js
aaa
mov
mov
in
enter
jge
inc
push
jmp
in
ins
push
fnstcw
xchg
loop
xchg
pop
push
jbe
imul
dec
jl
jne
xor
add
imul
mov
push
push
test
and
and
xor
cwde
loope
in
lods
adc
and
pusha
or
mov
sahf
daa
push
cmp
lock
mov
adc
adc
outs
stos
push
mov
or
inc
retf
mov
js
inc
cmp
cld
or
rol
and
pop
sbb
shl
pop
mov
scas
jp
push
xchg
test
sbb
xchg
outs
test
cmc
test
cmc
cdq
je
xlat
or
sar
and
pushf
iret
out
rcl
and
xor
sub
aaa
pop
xchg
xchg
das
das
cmp
jnp
out
and
adc
repnz
sub
ror
inc
call
enter
test
movs
and
(bad)
inc
test
scas
inc
test
mov
mov
xchg
push
imul
fsubr
inc
mov
stos
inc
clc
xor
push
loope
lds
pop
out
out
inc
add
jb
sbb
neg
sub
and
pop
lods
inc
push
xchg
int
push
pop
jmp
(bad)
jo
imul
and
add
fld
pop
sbb
out
jno
popa
pushf
shl
out
jl
dec
ins
(bad)
push
movs
test
sbb
les
mov
jns
fsubr
push
mov
popf
sub
mov
rcl
pop
xor
jl
or
xor
das
xlat
je
outs
pop
pop
mov
jmp
sub
fisubr
and
aas
jo
ret
sub
sbb
lods
mov
xor
(bad)
xor
mov
cmp
mov
push
cmps
push
shl
fdiv
jg
mov
and
mov
gs
push
gs
xchg
push
adc
mov
mov
fidiv
std
inc
mov
test
pop
mov
scas
jp
push
xchg
(bad)
outs
cmp
jbe
dec
mov
adc
jo
stos
(bad)
js
xchg
inc
and
into
inc
sub
mov
aas
sbb
movs
cmps
sub
ret
mov
adc
cmp
push
mov
dec
adc
sbb
aam
push
sbb
sahf
jae
out
push
or
push
and
jecxz
mov
in
in
xor
fldcw
lods
mov
in
test
jecxz
xchg
inc
add
test
pop
xor
add
clc
mov
sbb
mov
in
mov
xchg
inc
call
and
xlat
adc
(bad)
movs
jmp
xor
sar
out
lea
repz
adc
(bad)
je
or
cmp
scas
fldenv
jecxz
retf
cwde
fist
push
scas
push
mov
mov
leave
add
sbb
push
mov
outs
test
xor
push
push
pop
fistp
cmps
(bad)
push
inc
xchg
mov
push
fld
dec
stos
call
push
js
idiv
adc
aad
(bad)
sbb
push
or
aaa
dec
lods
jmp
jo
pop
sahf
retf
or
mov
(bad)
adc
fidivr
adc
mov
mov
mov
inc
and
test
dec
cmp
xor
movs
(bad)
mov
out
xor
cmovl
cmps
rcl
mov
stos
xor
and
sub
ficom
clc
mov
hlt
sbb
rcl
aam
and
sub
ja
das
jmp
test
jge
les
or
fstp
inc
and
push
jns
call
inc
add
jnp
bound
sbb
rol
bound
shl
pop
(bad)
sub
and
mov
lods
jmp
jo
pop
sahf
inc
mov
test
push
rcl
cli
xor
mov
test
mov
jp
dec
xchg
stos
adc
fdiv
pop
add
fild
ret
cld
cmp
stos
mov
in
mov
or
cwde
sti
repz
ins
cmps
xlat
and
dec
xchg
mov
loop
test
xchg
push
enter
cmps
mov
jb
xor
mov
and
js
jb
imul
cwde
mov
sub
into
xchg
idiv
jp
mov
jne
push
mov
out
mov
mov
xchg
enter
pusha
push
xchg
aam
movs
mov
push
inc
(bad)
cld
movs
leave
inc
fidivr
(bad)
mov
jbe
popa
stos
ins
xor
xchg
lahf
mov
nop
fisttp
sub
data16
aad
mov
adc
nop
xchg
jne
push
into
push
cmps
les
add
(bad)
cld
popa
icebp
mov
jae
mov
cmp
ins
movs
mov
dec
add
sti
mov
mov
dec
or
rcr
int
push
sbb
mov
push
jg
mov
mov
or
cmp
mov
outs
call
popf
in
mov
lds
push
stos
lock
sar
push
xor
fcomp
in
dec
or
mov
mov
or
pop
mov
jns
push
push
adc
sbb
aas
push
lds
js
repnz
pop
cli
inc
sub
lock
fdivr
(bad)
pop
(bad)
cld
mov
lea
dec
lahf
fst
jge
fdivr
mov
push
adc
mov
lahf
cli
xchg
fiadd
les
push
imul
dec
push
push
sbb
leave
call
cmp
pop
or
or
push
cmp
hlt
xchg
lds
dec
and
mov
sub
bound
das
imul
xor
mov
out
xchg
leave
mov
fadd
cmp
dec
adc
jne
pop
jbe
popa
add
sub
inc
add
adc
and
jle
mov
in
sbb
inc
sbb
shl
pop
xchg
scas
xlat
test
aam
lock
or
cwde
int
fisub
dec
sbb
and
push
pop
daa
dec
pop
bound
dec
fs
adc
dec
add
mov
push
sbb
push
push
ja
jb
jmp
add
mov
pop
(bad)
(bad)
cmp
mov
mov
shr
out
cmp
or
jmp
or
sub
add
cli
add
xor
xor
pop
dec
and
lea
sub
dec
xchg
xlat
lea
idiv
push
call
pop
mov
ss
scas
push
adc
mov
mov
cmp
(bad)
scas
loope
stc
xor
add
add
jmp
xchg
fnstenv
stc
add
out
xchg
jge
loop
enter
inc
jmp
outs
or
and
ins
xor
and
xchg
push
inc
cmp
je
push
sub
pop
mov
popa
push
aas
inc
adc
and
pop
inc
or
test
push
add
dec
cwde
cli
test
nop
outs
add
aam
mov
fstp
jmp
pop
clc
xor
loopne
and
test
inc
inc
nop
ror
cs
add
ins
add
loopne
lahf
int3
sub
and
int
int3
adc
pop
std
mov
mov
rol
inc
lods
into
mov
push
ja
xlat
cmp
add
outs
mov
mov
fisubr
ret
loop
xchg
ret
pusha
stos
enter
and
xor
push
jmp
out
out
stc
dec
jmp
mov
icebp
mov
fmul
out
lahf
fadd
test
lds
push
nop
repnz
ja
out
sahf
cwde
lods
push
cld
jno
dec
mov
mov
push
mov
jmp
int
out
mov
pop
cli
xor
fistp
pop
add
add
mov
popa
adc
inc
fidivr
or
jmp
mov
loope
out
(bad)
repz
es
aam
pop
test
mov
(bad)
in
aam
sbb
and
int3
movs
lods
retf
jle
loopne
jl
and
adc
shr
jmp
inc
in
cli
sub
pop
cmp
outs
xor
rcl
stos
mov
and
(bad)
xchg
shl
or
or
sar
sbb
cmp
sub
shl
gs
mov
xor
sub
leave
push
xchg
lock
jl
lods
stos
mov
dec
pop
cli
xor
add
sub
inc
mov
bound
ins
or
int
add
mov
mov
xor
test
scas
add
std
sbb
mov
mov
test
push
sti
xchg
(bad)
jno
inc
xchg
lods
mov
sub
xchg
stos
arpl
jbe
push
dec
fld
leave
fmul
inc
sub
sbb
jne
pop
xor
iret
mov
pop
cmps
lds
xchg
lahf
fdivr
in
jecxz
std
retf
je
pop
jl
not
jmp
in
xchg
out
jno
pop
sub
adc
stos
shl
pop
adc
hlt
cwde
call
mov
das
popa
or
or
aam
jge
lds
addr16
rol
sub
push
loop
enter
(bad)
in
fwait
cmps
dec
mov
les
jge
xchg
xchg
push
dec
mov
mov
jno
sbb
xchg
xlat
movs
std
fwait
arpl
add
in
ror
mov
cmc
daa
adc
mov
stos
rcl
movs
fwait
mov
stos
pop
stos
repz
shr
adc
retf
retf
fidivr
add
daa
jle
pop
les
(bad)
mov
icebp
imul
jno
pop
ja
call
inc
fisubr
mov
sbb
div
or
adc
and
push
add
cmps
dec
cmp
xchg
cmc
aam
stos
dec
call
or
sbb
stc
mov
mov
idiv
loope
dec
movs
jl
mov
cld
pop
outs
xchg
fcomp
int3
ds
imul
add
imul
int3
out
sbb
jge
jns
sbb
les
and
dec
pop
aad
aam
mov
test
xchg
retf
popa
mov
popf
sti
xchg
fadd
icebp
nop
rcr
cmp
mov
pop
inc
or
cmp
xor
or
xchg
fidivr
jle
pop
loop
xchg
mul
test
test
sub
inc
jge
lock
and
fnstcw
jnp
shr
mov
aas
lock
mov
mov
pop
mov
sub
test
cdq
jne
cmc
jmp
out
mov
cdq
fidivr
jns
jp
inc
sub
ds
push
and
jmp
sub
sti
hlt
mov
jo
push
imul
mov
push
or
mov
push
lods
dec
or
push
scas
fs
(bad)
(bad)
in
mov
int
in
retf
mov
mov
mov
inc
add
dec
cmp
xor
and
push
cmps
les
outs
mov
ds
in
hlt
cs
sbb
jl
inc
or
add
ins
add
mov
mov
sbb
dec
or
pop
hlt
add
cwde
rcr
(bad)
pusha
test
dec
clc
inc
in
or
div
and
lods
out
mov
aaa
push
add
add
std
(bad)
fistp
push
add
cmps
call
lahf
add
push
aaa
mov
js
push
dec
sbb
bound
adc
add
jns
scas
in
(bad)
mov
dec
or
jmp
(bad)
popf
retf
(bad)
int3
(bad)
jb
and
push
dec
ret
test
ja
inc
jmp
push
add
push
fstp
js
push
ins
sub
pop
jnp
sub
cmp
and
xor
mov
xchg
and
sbb
sar
test
mov
fcomp
leave
jne
(bad)
cmps
add
inc
and
fcomp
into
jnp
jp
das
cmp
jae
es
(bad)
mov
test
lds
mov
push
adc
sahf
shl
test
and
pause
repnz
out
add
jp
mov
push
xor
adc
leave
stos
mov
mov
imul
add
lds
lds
call
mov
jb
bound
(bad)
pushf
iret
mov
lock
cmp
nop
mov
push
js
call
stos
mov
(bad)
sar
jge
in
mov
jle
dec
push
sub
mov
iret
cdq
mov
jae
mov
dec
push
cld
and
fidivr
rcl
out
mov
mov
dec
loopne
xor
fstp
xor
loopne
rol
or
jle
add
mov
adc
adc
clc
in
iret
repz
outs
jns
js
or
sub
xor
movs
loope
int
or
push
inc
or
aas
push
adc
xchg
xchg
aaa
cmp
add
in
and
icebp
mov
push
stos
and
adc
imul
add
xchg
sbb
test
sahf
xchg
fdiv
pop
xor
lods
shr
add
and
push
sbb
dec
adc
mov
mov
xor
push
adc
sti
mov
into
pop
pop
push
mov
and
sbb
(bad)
fsubr
fdivr
lods
mov
jo
sahf
ret
jno
in
mov
or
and
mov
or
add
add
sub
pushf
fistp
jno
outs
sub
cmps
add
dec
or
lods
enter
push
pop
sbb
pushf
mov
jge
push
xor
repnz
sar
mov
xchg
adc
mov
or
mov
mov
cmps
daa
arpl
jae
cmp
scas
(bad)
mov
addr16
call
jecxz
adc
dec
or
jae
bound
dec
inc
xor
dec
lds
sbb
push
adc
test
test
sub
push
pop
movs
leave
js
movs
and
in
addr16
inc
data16
push
shl
cs
fwait
mov
mov
inc
cmovg
adc
ret
and
dec
adc
into
(bad)
out
sbb
lahf
and
xchg
inc
and
pusha
stc
cmp
loopne
lock
scas
push
jo
inc
dec
jmp
mov
stos
cmc
push
cmp
fs
popf
in
sahf
sar
clc
fs
lods
dec
or
ds
fs
sub
sbb
rcl
inc
mov
or
pushf
jne
jo
clc
sbb
ficomp
push
call
pushf
out
lods
ficom
or
or
ins
pop
adc
frstor
or
call
inc
and
xor
pushf
outs
ss
xchg
loope
nop
dec
mov
pushf
icebp
outs
(bad)
sbb
cwde
fstp
in
push
inc
add
jbe
and
push
int
pushf
iret
mov
inc
fistp
push
and
into
popa
addr16
retf
imul
dec
aad
leave
sbb
or
mov
push
das
dec
cli
xor
sub
jge
or
xchg
cmp
jo
in
push
sti
(bad)
mov
cli
icebp
test
test
push
jne
je
pop
mov
sub
shl
icebp
popf
enter
scas
inc
or
retf
outs
sub
and
call
sbb
pop
cmp
fdivr
pop
inc
inc
pop
ins
adc
jl
xchg
cmc
mov
popa
je
push
sub
test
xor
pop
leave
test
aaa
cmps
in
iret
xchg
mov
test
cmps
jmp
out
fadd
jmp
mov
not
rcr
mov
mov
out
mov
push
(bad)
aad
adc
outs
or
ins
daa
dec
out
mov
sahf
lea
addr16
sub
and
adc
sbb
xchg
jecxz
lods
dec
push
daa
jg
fsubr
enter
mov
sbb
daa
in
retf
mov
test
fwait
shr
push
cmp
xchg
push
gs
mov
xchg
mov
addr16
or
push
or
sbb
push
dec
fs
dec
pop
push
xor
retf
cmps
in
mov
inc
jg
popa
jns
dec
adc
jmp
push
jb
bound
in
in
add
add
leave
add
bound
or
mov
fisttp
retf
cmp
add
sbb
cmp
inc
mov
(bad)
cmps
in
inc
sbb
add
sbb
ins
adc
adc
add
cs
push
out
mov
mov
xor
sub
movs
out
sbb
push
sbb
dec
sub
xor
pop
sub
jl
inc
push
addr16
push
push
aaa
pushf
loop
jecxz
mov
cmps
aam
push
fcomp
sub
loop
adc
jb
out
pushf
lds
inc
ret
sbb
xor
add
add
cdq
ins
stos
push
xchg
mov
aaa
jne
push
and
xor
inc
sub
mov
push
cmp
mov
sub
dec
and
mov
mov
mov
jnp
(bad)
aad
xchg
popa
and
mov
cmp
dec
push
inc
int3
pop
mov
in
ror
pop
mov
xor
stos
in
stos
leave
lahf
int3
mov
icebp
add
mov
push
push
dec
jge
pop
inc
or
and
sub
fcom
push
push
sahf
std
lahf
pop
aad
lock
cmp
mov
cdq
call
test
sub
iret
lods
xor
pop
mov
ret
xchg
leave
in
int3
mov
pop
or
inc
ja
addr16
xor
in
pushf
fcmovnbe
mov
out
lods
inc
loopne
jmp
es
iret
or
dec
cmp
xchg
ja
fldenv
into
jo
sbb
clc
sub
dec
daa
ins
add
mov
lods
out
or
aaa
repnz
mov
or
adc
sbb
jb
shl
jns
and
push
movs
xchg
je
sar
je
test
dec
mov
iret
cmp
pop
push
inc
daa
popa
push
shr
arpl
js
cmp
sti
xchg
ss
and
pop
lods
inc
jnp
adc
xor
sub
outs
cmp
aaa
std
arpl
xor
and
enter
lds
sbb
sub
dec
call
cld
(bad)
int3
sahf
fcomp
add
pop
imul
call
pop
jmp
in
cwde
fisttp
mov
mov
mov
push
iret
and
stc
cmps
(bad)
mov
mov
push
or
mov
fcom
pop
popa
adc
cdq
jne
repnz
mov
pop
inc
pop
aaa
adc
into
jo
push
xchg
in
cld
xchg
fiadd
dec
sahf
fcmovnbe
mov
fwait
mov
stos
adc
jmp
js
push
cmp
or
xor
pop
(bad)
fistp
or
adc
cli
and
and
fisub
les
cmp
lock
mov
push
adc
fstp
popf
jmp
pop
xor
retf
push
xchg
inc
xor
std
push
mov
inc
pop
add
cmp
push
test
int3
test
test
call
xchg
fisttp
or
push
stos
mov
outs
xor
jg
nop
popf
pop
sbb
ds
data16
sbb
push
push
push
dec
aad
repz
movs
mov
imul
xor
jecxz
mov
pause
repnz
or
dec
ins
xlat
pop
call
aam
(bad)
lods
out
mov
push
cdq
push
jl
bound
xor
push
jle
pop
cdq
xor
jge
retf
out
(bad)
inc
daa
mov
retf
out
xlat
test
sahf
out
xor
pop
push
int
fistp
sub
jg
leave
fst
bound
push
je
fsubr
mov
add
call
xchg
xor
push
into
push
iret
fwait
adc
mov
enter
cmp
arpl
in
rcr
pusha
sbb
add
dec
mov
icebp
sbb
fdivr
and
stos
repnz
xchg
push
add
mov
jno
add
inc
mov
not
xor
mul
in
scas
fwait
jno
push
xchg
pop
xchg
imul
rcl
inc
mov
jno
or
(bad)
xchg
mov
cwde
shr
pop
mov
retf
pop
xlat
xor
sub
aaa
sbb
dec
mov
enter
cmp
xor
push
fldcw
xchg
js
call
test
mov
jae
pushf
mov
push
ret
push
cli
push
lds
imul
mov
retf
cmp
jno
add
sub
xchg
imul
ds
int
scas
xchg
popa
add
dec
scas
jno
or
mov
inc
mov
arpl
dec
scas
and
ret
push
int
mov
fldcw
xchg
fwait
inc
fiadd
jecxz
repz
mov
xor
xor
or
pop
(bad)
cmp
das
pop
jl
outs
jmp
mov
cmp
int3
inc
fist
xchg
lahf
ins
mov
jmp
(bad)
pop
idiv
sbb
jge
ja
dec
stos
xchg
int3
and
cmp
push
and
cli
and
imul
dec
mov
lods
xchg
mov
in
leave
sub
jns
pop
cmp
in
sub
sub
loope
inc
aad
out
ja
xchg
inc
add
lods
mov
aas
aam
stos
jl
mov
das
jecxz
call
inc
(bad)
cdq
lahf
jle
cmp
sub
add
outs
xlat
and
push
ret
add
scas
mov
je
pop
stos
popf
addr16
daa
or
jl
cmp
std
add
pop
add
icebp
pop
cmp
xor
(bad)
dec
movs
xchg
enter
mov
ret
sti
imul
mov
mov
movs
ins
int3
cmp
add
adc
push
movs
mov
xchg
stc
push
mov
fiadd
loopne
cmp
ret
mov
int
cmps
mov
in
add
shr
adc
and
jmp
jbe
mov
jnp
and
aam
adc
inc
mov
std
xor
jl
push
mov
sbb
cmp
(bad)
or
pop
retf
pop
mov
sub
mov
call
div
adc
lds
jge
and
sub
jg
jne
data16
jae
popa
adc
adc
and
call
sub
mov
jl
outs
movs
mov
mov
call
sub
dec
pop
in
and
push
out
stos
xchg
jbe
xchg
iret
inc
mov
dec
cmps
fwait
(bad)
les
out
push
jge
cwde
inc
mov
jl
xchg
in
repnz
xchg
mov
and
cmps
mov
and
mov
mov
outs
fldenv
sbb
ja
ds
push
or
jg
and
dec
(bad)
iret
pop
cmps
ins
shl
sbb
or
or
pop
mov
es
js
fs
xor
repz
movs
cdq
push
rol
hlt
dec
mov
outs
retf
or
push
cmc
and
add
mov
leave
imul
push
pop
scas
jb
xor
out
test
push
jmp
bound
clc
es
and
cwde
mov
xor
add
ins
shl
xor
mov
push
sar
loope
loope
mov
daa
out
aad
jl
and
pop
stos
popa
mov
dec
fcom
cmp
test
mov
imul
(bad)
sub
iret
cmp
and
inc
scas
jl
ja
div
dec
mov
sub
sub
cld
mov
lock
mov
(bad)
pop
xor
cdq
inc
mov
cmp
loope
cmps
cdq
outs
mov
repnz
push
test
add
adc
cmps
cdq
scas
inc
xchg
bound
xor
push
dec
xlat
daa
or
or
pop
fldcw
push
mov
popf
nop
inc
pop
sbb
adc
xor
ins
mov
adc
xchg
lahf
and
fistp
sbb
enter
xchg
rol
push
dec
ficomp
xor
cmc
es
add
mov
popf
outs
lds
sti
adc
xor
popa
cmc
push
fdivr
dec
xchg
xchg
xchg
jl
imul
iret
pushf
jge
jno
push
jecxz
sti
cs
call
std
ds
xchg
popa
rol
xor
sub
std
pop
fmul
into
sub
(bad)
fdiv
pop
cli
or
push
test
data16
and
and
js
push
push
fsub
jg
ds
or
push
std
and
push
retf
loope
sbb
dec
xchg
das
sbb
adc
xchg
ins
int
out
aas
add
and
test
dec
fmul
cdq
inc
mov
fidivr
jmp
jae
adc
into
sub
hlt
dec
or
ds
cmps
test
and
mov
dec
cmp
or
enter
push
add
pop
mov
push
cmc
sub
pop
xchg
push
inc
mov
aad
mov
mov
adc
ret
push
neg
std
push
sbb
dec
or
sbb
and
sbb
prefetchwt1
adc
outs
xchg
xlat
dec
mov
mov
outs
movs
xchg
lods
sub
fst
scas
test
add
int3
xor
add
push
sar
sbb
push
and
rol
shl
pop
ficom
and
push
and
in
mov
adc
sub
adc
adc
mov
dec
test
mov
jp
cmps
jle
lahf
imul
mov
ds
cmp
and
iret
xor
push
pop
or
add
pop
fdivr
cmc
pop
cmps
jmp
call
sbb
test
int
out
and
adc
mov
lods
ins
and
jmp
cmp
push
test
xor
xor
repnz
cld
cs
jp
jbe
imul
dec
test
data16
mov
mov
xchg
jl
jl
outs
cmps
aam
clc
pop
xchg
mov
jg
jl
cmc
pop
adc
or
sahf
jb
in
pop
test
jbe
push
push
icebp
cmp
push
mov
add
or
push
lods
loop
cmps
jbe
sub
dec
xchg
pop
mov
lods
dec
(bad)
inc
test
sti
xor
cmp
out
fisub
adc
mov
in
or
scas
push
cmp
pop
fmul
(bad)
ss
loope
mov
popa
cmps
les
adc
pop
cmp
push
mov
jle
nop
lahf
dec
lods
arpl
sbb
pop
mov
outs
scas
cdq
outs
leave
sub
(bad)
daa
(bad)
xor
sbb
pop
mov
test
cmp
mov
das
imul
cmc
pop
add
pop
neg
aaa
loopne
pop
je
push
xchg
popa
mov
shl
out
xor
les
pop
adc
pop
(bad)
sbb
psubsb
fs
and
sbb
aad
dec
fidiv
gs
cmc
pop
test
inc
jmp
push
movs
mov
push
ret
pop
out
and
sbb
push
lods
(bad)
and
cs
sub
sbb
rol
sbb
popf
mov
push
sbb
aad
lea
mov
jl
inc
add
add
pop
fsub
shl
pop
adc
push
leave
xchg
test
inc
jmp
and
push
mov
dec
cmps
jmp
push
int
(bad)
push
test
popa
mov
movs
test
xchg
cmps
je
xchg
cdq
imul
lock
sar
mov
push
mov
ror
ret
sub
shl
inc
mov
jno
leave
dec
aad
pinsrw
or
jle
pushf
jl
add
pop
mov
in
and
xor
lds
pop
(bad)
ja
call
pop
movs
(bad)
(bad)
(bad)
sub
nop
sar
cmp
ret
pop
sbb
rcl
ret
pop
mov
jge
mov
fwait
xchg
jg
imul
dec
fsub
jecxz
cmps
(bad)
fstp
nop
mov
mov
pusha
aam
sub
dec
ror
inc
mov
mov
add
hlt
pop
stos
jo
mov
or
jmp
cmp
out
push
mov
sbb
inc
mov
mov
pop
std
or
and
adc
add
adc
mov
inc
shr
ds
sub
lds
xor
aas
add
adc
dec
mov
mov
jge
xor
mov
sahf
div
shl
in
stos
test
mov
sar
adc
dec
shr
mov
gs
xchg
fcomp
mov
shr
into
pop
xchg
ror
mov
xchg
inc
xor
mov
fnsave
mov
cmp
pop
sbb
pop
movs
cdq
mov
sbb
paddsw
sub
cmp
pop
mov
mov
adc
icebp
dec
enter
lods
xchg
push
mov
cmp
pop
aad
hlt
pop
sbb
les
dec
mov
mov
lods
lahf
adc
xchg
inc
into
aas
push
mov
inc
hlt
inc
mov
xor
and
cs
push
aam
imul
lods
xchg
int3
cmp
loopne
in
and
mov
push
mov
mov
sub
ret
sub
stos
mov
int
mov
jb
jae
lahf
and
jmp
fimul
or
pop
(bad)
dec
mov
mov
mov
fmul
xchg
test
xchg
ja
je
jne
push
fidivr
not
sub
sub
add
inc
mov
cmps
jo
in
and
pop
xchg
in
or
dec
mov
cwde
jb
xor
cs
(bad)
repz
mov
push
iret
xor
leave
xor
add
loop
stos
jp
xchg
outs
mov
adc
std
cmp
pop
sti
and
js
push
lea
repnz
out
stc
mov
repz
xor
mov
int
test
push
sar
aam
pcmpgtd
or
push
or
dec
mov
fiadd
xor
sar
xchg
mov
add
mov
add
adc
and
inc
jecxz
lea
push
test
jo
mov
mov
wbinvd
int
lea
pusha
retf
sub
cmp
mov
or
(bad)
ins
add
pop
aam
lods
mov
dec
cmps
xchg
jae
out
cmp
in
or
retf
or
aas
or
and
cli
jge
fs
out
mov
push
cli
pop
mov
lds
ja
xchg
and
out
or
xor
sar
push
les
out
mov
ret
test
pop
fist
aas
add
(bad)
pop
mov
in
dec
sbb
and
adc
add
rcl
je
imul
pop
sbb
mov
jge
mov
jnp
or
cmp
push
fiadd
jmp
repnz
arpl
push
fcom
dec
movs
sahf
lahf
arpl
pop
mov
jp
popf
outs
test
xchg
xchg
jns
mov
leave
sub
xchg
js
dec
stos
mov
inc
cli
pop
lahf
outs
or
aas
into
dec
int
pop
sbb
pop
mov
in
cmp
cli
and
retf
pop
mov
cmp
push
fdivr
aas
cmc
pop
(bad)
cmp
je
mov
cmp
sbb
fnstenv
push
movs
xchg
(bad)
fiadd
stos
lahf
inc
mov
outs
cmp
sub
popf
xlat
and
mov
xor
xor
jge
test
cmp
xchg
fs
push
into
cmp
inc
mov
sbb
fistp
les
test
xor
and
jge
ins
mov
enter
stc
jl
daa
sbb
inc
iret
mov
cs
cdq
jne
fs
add
adc
push
push
jb
and
sbb
sbb
pop
clc
jo
das
sbb
jne
dec
loop
sbb
cmp
xor
pop
push
pop
rcr
mov
imul
(bad)
pushf
sahf
mov
and
or
lods
mov
sub
dec
jmp
imul
aaa
add
jnp
push
je
pop
retf
imul
(bad)
mov
cmc
jnp
(bad)
xchg
jmpw
pop
leave
mov
xchg
call
jge
jns
mov
sbb
push
or
inc
cmps
mov
retf
xchg
test
rol
lds
push
mov
(bad)
inc
mov
sahf
data16
int
aad
xlat
dec
stos
(bad)
xlat
xor
sbb
xor
movs
mov
xchg
mov
stos
mov
scas
mov
(bad)
fstp
push
iret
cmp
add
leave
inc
into
pop
movs
nop
imul
pop
adc
enter
add
adc
call
pop
cmp
pop
(bad)
add
or
sub
mov
and
call
arpl
lods
xchg
jnp
rcr
(bad)
shl
movs
and
jne
pop
les
jge
or
or
std
and
xchg
mov
lock
movlhps
dec
enter
cli
es
pop
sti
mov
mov
addr16
daa
xor
jne
jne
mov
jmp
sub
adc
jb
dec
mov
and
xor
sub
jb
dec
fld
aad
loope
int3
and
fsubr
xor
hlt
push
mov
xor
je
mov
cdq
lea
popa
iret
inc
add
pop
test
rol
lahf
cdq
test
pop
mov
xor
fs
dec
stos
rol
les
mov
les
dec
leave
jg
pop
add
adc
add
in
leave
dec
jmp
jmp
ins
pmulhuw
inc
(bad)
and
push
or
repnz
fild
sbb
pop
movs
lods
mov
cld
inc
stc
sub
mov
movs
mov
rcl
lds
push
mov
cdq
xchg
rol
pop
fld
test
mov
call
jp
and
jb
xor
outs
cmc
pop
lds
ins
fidiv
adc
jae
dec
mov
mov
dec
int
mov
dec
fstp
(bad)
arpl
inc
call
in
les
and
xor
cmp
cmp
cld
dec
or
leave
dec
shl
pop
xor
pop
ltr
sub
sbb
xchg
frstorw
add
pop
adc
and
sbb
add
push
or
inc
movs
mov
fwait
call
push
in
repnz
mov
sahf
xchg
xchg
mov
dec
(bad)
and
mov
add
add
pop
int
(bad)
es
jecxz
scas
test
loopne
les
sub
das
push
xor
in
dec
push
cmp
push
retf
dec
int
sbb
outs
ret
dec
scas
mov
sub
loopne
sub
hlt
inc
mov
mov
stc
inc
mov
mov
imul
push
in
push
test
arpl
adc
inc
fisubr
adc
sub
or
adc
in
repnz
out
sub
xlat
aaa
adc
adc
neg
js
dec
fild
or
shr
call
(bad)
jne
jl
and
call
int
(bad)
daa
sbb
dec
test
ror
stos
mov
push
xor
clc
sub
adc
push
cld
js
pop
stos
push
test
shr
or
imul
inc
iret
pop
call
push
push
or
inc
mov
repnz
cld
xor
verw
mov
mov
dec
sub
jmp
push
(bad)
and
test
xor
cs
xor
lea
fs
adc
dec
mov
add
(bad)
jb
push
std
push
or
xchg
out
ja
cmp
or
les
out
or
js
push
clc
sub
add
inc
shl
hlt
push
rol
inc
sub
call
jae
into
pop
xchg
xchg
popf
ins
mov
mov
push
nop
nop
inc
test
lahf
call
pop
rol
sbb
push
cmc
cmp
push
or
shr
icebp
add
inc
mov
cmp
inc
mov
cdq
cdq
js
ins
mov
ror
cmp
xor
jmp
aas
sbb
cmp
push
pause
mov
mov
(bad)
jo
jne
push
cmps
lods
(bad)
lahf
mov
adc
push
lock
fstp
jno
sub
imul
push
(bad)
sub
dec
std
inc
movs
mov
inc
mov
fdivr
xor
popf
data16
or
in
jns
and
jmp
addr16
sti
adc
jle
dec
mov
dec
aam
test
mov
and
push
cli
xchg
gs
cmps
outs
mov
inc
mov
loopne
mov
and
mov
add
dec
mov
cli
and
jnp
inc
fstp
mov
lock
clc
xor
push
mov
push
iret
add
les
jbe
dec
mov
sub
pop
movs
js
cmp
add
dec
mov
mov
adc
out
repnz
fnsave
jg
fwait
jae
or
push
sbb
jo
inc
shl
cmp
aaa
out
jl
mov
pop
int3
dec
xor
test
inc
fisttp
inc
rol
or
push
mov
or
int
movhps
inc
fcomp
popf
ja
ss
dec
mov
stc
pop
mov
cs
ret
xchg
inc
fbld
jmp
sub
pop
mov
leave
add
cmp
fmul
nop
mov
js
push
in
push
mov
push
ror
xor
dec
shl
test
jb
pop
mov
cmp
cmp
pop
mov
je
data16
pop
movs
xchg
(bad)
stc
and
mov
jmp
fstp
scas
cwde
data16
or
push
test
mov
jne
cmp
pop
xor
pop
sbb
jns
push
loope
movs
xchg
ins
aam
mov
dec
mov
test
jle
daa
add
dec
lods
pusha
fcom
not
leave
aas
cld
sub
pop
adc
(bad)
and
and
mov
sub
and
inc
movs
mov
outs
(bad)
push
xlat
das
wbinvd
xor
pop
out
sub
sbb
and
test
loop
mov
rcr
or
add
pop
retf
inc
mov
jne
pop
lods
mov
scas
call
jne
ja
mov
add
add
ins
leave
add
or
or
in
icebp
inc
and
jmp
adc
sbb
movs
(bad)
jae
cli
inc
lods
jle
pop
int3
push
ret
mov
sti
jns
and
add
fsubr
add
add
sbb
aad
adc
jae
data16
mov
je
dec
int3
and
inc
fidiv
cmp
inc
leave
jp
stos
test
loop
mov
imul
rcl
out
fcomp
cwde
test
pop
out
repz
jmp
push
adc
sbb
jb
pop
rcl
into
sub
sbb
xlat
mov
mov
xchg
xchg
dec
(bad)
(bad)
enter
retf
add
cmc
push
int
clc
and
lahf
pusha
ret
mov
cs
adc
jb
xor
cmp
inc
enter
adc
jg
push
cmc
inc
leave
daa
xor
sub
ins
leave
push
sar
push
fadd
inc
fmul
jb
add
sti
sub
dec
(bad)
jno
out
aam
xor
and
imul
and
jmp
inc
adc
jb
jno
lahf
bound
icebp
push
cmp
sub
adc
mov
test
sbb
int3
sub
and
pop
icebp
dec
(bad)
sbb
jnp
ror
inc
adc
jle
je
test
xor
cmp
loopne
idiv
jae
cmc
jg
inc
int
(bad)
xor
jg
jb
pop
mov
jg
and
pop
mov
shl
cmp
sub
dec
mov
mov
add
cmps
fwait
arpl
ds
push
mov
jae
(bad)
push
inc
adc
cmp
mov
inc
xor
or
aaa
adc
push
mov
mov
sub
aaa
jecxz
hlt
push
(bad)
sub
or
nop
ja
pusha
fld
push
mov
or
cld
inc
mov
iret
pop
mov
loopne
sbb
and
pop
mov
jno
and
add
xor
sbb
je
lahf
xchg
cwde
jl
mov
jb
sub
cmp
mov
test
je
mov
dec
test
pop
inc
mov
jns
push
je
add
xchg
push
add
test
push
dec
cmps
push
inc
adc
repz
cmp
push
jg
pop
dec
and
retf
ror
int
popf
repz
scas
or
lock
push
jb
outs
sbb
in
retf
mov
push
dec
cmp
rcl
jg
jns
lds
jbe
in
sar
mov
sbb
call
dec
xor
cmp
mov
push
mov
dec
pop
push
jmp
(bad)
cmp
ins
mov
imul
scas
out
mov
xor
or
mov
inc
sbb
je
arpl
fstp
je
imul
mov
mov
push
pop
sbb
jne
and
sub
push
mov
mov
add
xchg
jp
xor
push
jno
or
pop
je
shr
sbb
and
scas
(bad)
mov
(bad)
mov
push
movs
out
test
mov
xor
lds
outs
int3
cmc
mov
dec
mov
cmp
(bad)
mov
fld
sahf
out
xchg
jg
adc
int
adc
sbb
pop
mov
ins
cmp
adc
clc
fsubr
xor
sbb
leave
test
out
sti
mov
push
mov
mov
pop
mov
stos
enter
xchg
js
jge
ret
(bad)
mov
stos
pusha
and
int3
xchg
shr
mov
pop
or
scas
in
aam
lds
stos
pop
movaps
int3
movs
leave
or
push
hlt
xor
sbb
ret
stos
data16
jg
pop
outs
or
aam
push
add
rcr
mov
xor
hlt
in
sbb
jns
inc
adc
sub
dec
cmp
inc
sbb
and
bound
bound
js
dec
or
inc
push
pop
or
and
push
sbb
pop
sbb
dec
cmp
pop
sbb
ins
and
inc
pop
jg
outs
(bad)
sub
jnp
dec
or
jnp
push
xor
popa
add
dec
or
push
pop
inc
xor
ins
cs
add
cwde
(bad)
fmul
retf
xchg
(bad)
xor
mov
movs
in
test
sbb
in
mov
sti
mov
xchg
out
(bad)
add
xchg
fst
fstp
lock
lahf
fisubr
(bad)
mov
lods
out
mov
xchg
cmps
mov
mov
mov
(bad)
fmul
rol
push
test
mov
(bad)
fistp
ret
xchg
into
mov
rol
xchg
repnz
in
lds
mov
movs
out
retf
scas
not
jge
inc
sub
dec
or
arpl
jo
pop
aaa
jnp
bound
push
adc
inc
sub
jb
pop
sbb
popa
and
inc
sbb
and
lahf
aam
retf
cmps
in
rol
popf
ror
clc
mov
mov
fcom
out
pop
lods
in
test
dec
add
ss
and
inc
ss
and
je
jnp
inc
or
inc
add
pop
and
rcl
inc
cld
xor
xchg
aam
scas
int3
addr16
mov
sub
hlt
mov
cmp
xor
or
or
movs
cld
outs
lods
push
push
repz
(bad)
sub
mov
ret
ret
sub
(bad)
retf
into
mov
mov
push
add
retf
inc
push
sub
aaa
jno
in
mov
dec
mov
pop
xor
or
sti
mov
add
or
dec
sbb
test
cwde
arpl
bound
ja
arpl
mov
mov
adc
cld
add
xor
dec
scas
cmp
sbb
stos
int3
sahf
dec
inc
and
scas
lds
cmp
sbb
pop
jl
mov
mov
inc
or
mov
mov
(bad)
push
xor
jmp
imul
scas
or
mul
clc
iret
mov
and
and
in
mov
push
add
inc
dec
xor
lds
ja
sbb
in
(bad)
js
inc
push
repz
fld
pop
dec
add
in
fnsave
mov
mov
xchg
sahf
repz
adc
repnz
das
bound
out
movs
sbb
scas
(bad)
sub
dec
or
mov
or
loope
int
nop
int3
mov
or
dec
pop
or
movs
repz
in
neg
pop
sbb
call
jmp
sbb
std
int3
mov
push
and
add
lea
push
cmps
cmp
mov
pop
das
fs
leave
mov
mov
xor
adc
mov
cwde
fiadd
mov
push
je
lods
repnz
pop
sub
pop
(bad)
loopne
or
cld
pop
push
adc
call
jnp
shl
xchg
test
mov
(bad)
mov
xor
in
into
xchg
or
xchg
retf
je
xor
adc
out
jg
daa
in
lods
in
cmps
jecxz
push
(bad)
sahf
jb
cwde
lods
xchg
dec
add
or
outs
es
ds
push
adc
je
sbb
push
push
outs
ds
jg
jle
pop
das
imul
ja
gs
pop
xor
or
js
pop
sbb
push
pop
sbb
push
jns
pop
pop
inc
daa
jbe
dec
sub
mov
call
or
jmp
add
retf
cmps
leave
sbb
call
xchg
idiv
out
mov
std
test
ficomp
cli
fwait
xlat
mov
mov
(bad)
fistp
(bad)
mov
loop
retf
mov
popf
icebp
mov
xchg
aam
in
in
and
loop
clc
mov
xchg
out
xlat
mov
xchg
shl
ret
mov
div
sbb
push
push
dec
sbb
xor
cdq
cli
test
mov
stos
in
fnstenv
mov
xchg
ret
scas
clc
test
fidivr
in
ror
jecxz
cmc
mov
xchg
fistp
scas
into
mov
mov
rol
(bad)
xchg
pause
leave
or
les
icebp
xchg
fnsave
leave
(bad)
loope
mov
aad
ficomp
aad
out
mov
(bad)
mov
scas
jmp
mov
div
test
or
stos
in
mov
xchg
mov
(bad)
mov
rcl
stc
xchg
out
std
add
cmps
(bad)
mov
scas
loopne
fiadd
repz
add
div
ss
retf
push
sbb
pop
lock
jl
ss
mov
sub
fwait
cmps
inc
ins
sub
lds
fisubr
imul
scas
call
sahf
jns
xor
icebp
jecxz
stos
sub
dec
mov
pop
or
cmp
adc
test
inc
es
cmc
xor
adc
lods
(bad)
sub
mov
push
fmulp
(bad)
retf
sub
movs
(bad)
sub
xor
cli
and
test
pop
pop
and
out
mov
mov
inc
adc
lods
ret
out
fnstenv
icebp
stos
jmp
mov
mov
int3
mov
mov
xor
cmp
retf
lods
ror
(bad)
xchg
adc
sbb
bswap
ficomp
sahf
jno
cmp
mov
gs
cmps
mov
out
xchg
aad
and
cmp
in
aad
and
outs
inc
add
pop
inc
sbb
fs
call
push
xor
shl
nop
out
leave
xor
and
in
xchg
rcr
add
mov
ds
int3
mov
cli
clc
mov
sub
rol
shr
adc
sub
cmp
inc
dec
or
aaa
inc
and
dec
add
std
rcl
shl
sbb
adc
push
xor
inc
push
push
or
xor
sbb
fistp
cmps
xchg
or
loopne
jae
push
dec
shl
adc
sbb
in
xchg
in
pop
and
xchg
mov
mov
js
inc
sbb
sbb
fadd
(bad)
out
repz
or
(bad)
aam
inc
imul
sahf
or
mov
sti
sub
mov
aaa
mov
sar
dec
or
or
adc
mov
aaa
jge
push
or
dec
sbb
out
lods
jo
das
jl
dec
xor
adc
cwde
lock
retf
stos
ficomp
div
lahf
rcl
retf
stos
loopne
icebp
test
in
mov
in
movs
sbb
jae
push
xor
ins
add
outs
pop
pop
sub
aaa
fs
cmp
dec
sub
outs
sub
jle
or
push
pop
jno
jne
inc
or
inc
add
push
pop
add
xor
adc
inc
daa
imul
sub
popa
pop
adc
inc
adc
ja
es
or
push
cmp
jb
jae
push
es
cmp
jp
cdq
retf
cmps
rol
(bad)
in
lods
in
cmps
int
cli
mov
lock
out
retf
scas
not
ret
xchg
movs
aam
retf
sbb
iret
mov
mov
icebp
movs
sbb
pop
pop
push
cmp
push
es
inc
add
push
sbb
jnp
js
imul
push
or
data16
je
pop
xor
cdq
cld
scas
out
mov
stos
out
movs
retf
mov
xchg
int3
mov
pushf
(bad)
mov
xchg
aam
loop
repnz
cmc
mov
mov
mov
add
inc
cmp
xor
xor
inc
and
jno
dec
cmp
push
push
fs
jg
popa
add
jo
jns
push
xor
js
data16
dec
cmp
or
add
pop
aas
outs
das
dec
sub
sub
bound
push
and
push
daa
addr16
add
jg
pop
sub
ja
ins
xor
adc
inc
cmp
pusha
pop
adc
je
push
adc
mov
call
adc
fcomp
aam
stos
call
outs
lods
sub
cmp
outs
push
iret
out
mov
xchg
(bad)
bound
leave
stos
fstp
mov
aas
cs
ins
cs
xchg
pop
adc
add
cmp
ins
lods
loop
mov
adc
sub
jmp
xchg
std
mov
and
mov
xor
mov
xchg
jl
add
jmp
mov
mov
pop
push
or
xor
clc
retf
pop
sub
adc
inc
cmps
xor
(bad)
(bad)
xchg
xlat
sub
sub
out
mov
shr
imul
mov
xchg
movs
cdq
or
retf
rcl
movs
out
xchg
xlat
pop
mov
mov
mov
retf
aas
jno
push
mov
mov
aas
mov
or
adc
mov
sub
add
xchg
in
mov
xor
xor
add
xchg
aad
jnp
add
div
mov
sbb
loop
(bad)
rol
adc
int3
xchg
xor
dec
mov
and
sub
pop
mov
mov
add
xchg
cmp
cmp
xchg
jmp
test
and
add
fidivr
jge
pop
adc
(bad)
test
mov
push
jle
add
pop
sahf
enter
xchg
shl
and
sbb
in
aad
mov
or
fnstsw
mov
hlt
fdiv
push
mov
bound
repnz
pop
je
fidiv
mov
aad
mov
sahf
fwait
sbb
add
jmp
movs
mov
jnp
xor
jmp
fmul
mov
inc
stos
push
pop
sub
rol
push
mov
je
das
pop
out
rcl
adc
jbe
ss
repz
xchg
fsubr
mov
cld
mov
jl
mov
mov
mov
inc
sub
dec
sbb
xor
outs
add
push
pop
sub
dec
or
xor
js
bound
push
adc
push
adc
jns
imul
sub
gs
or
outs
aaa
push
push
inc
es
add
pop
sub
pop
adc
jle
ins
push
inc
sub
jno
inc
add
inc
add
sub
sbb
push
push
adc
push
inc
add
mov
mov
add
inc
cmp
jo
jne
inc
or
dec
cmovnp
outs
push
pop
add
inc
sbb
outs
cmp
jbe
inc
pop
addr16
add
dec
cmp
push
adc
cdq
leave
mov
fst
fdiv
out
sahf
clc
mov
out
mov
(bad)
cmps
mov
(bad)
(bad)
mov
shl
lds
out
test
mov
mov
or
pop
pop
ds
push
adc
and
push
xor
outs
sub
jge
pop
sbb
push
inc
add
jb
bound
pusha
pop
adc
pop
push
inc
xor
add
pop
dec
add
inc
or
jne
sbb
pop
aaa
inc
add
push
sub
popa
and
pop
cmovg
dec
or
pop
add
inc
sbb
dec
and
inc
pop
pop
xor
cmp
jnp
dec
adc
and
add
push
aaa
jnp
pop
adc
jnp
pop
cmp
bound
jo
outs
sbb
sub
aaa
fs
cmp
dec
sub
xor
ss
jl
fs
cdq
fadd
iret
(bad)
mov
scas
jmp
push
sbb
jb
push
adc
jno
dec
sub
pop
sub
hlt
push
popf
into
lahf
bound
xor
cmp
and
xchg
sbb
add
xchg
add
sub
adc
or
inc
out
fdivr
mov
mov
in
lods
xchg
test
pop
and
pop
cmps
cmp
add
sti
xchg
ret
sub
push
jbe
sbb
sbb
in
iret
sub
mov
ds
xchg
or
cmp
mov
je
cld
lds
or
jmp
outs
jg
pop
and
mov
pop
test
mov
mov
mov
into
(bad)
sub
popf
lock
jmp
stos
push
outs
aas
repnz
xchg
push
sub
sti
fistp
pop
mov
fistp
stos
jns
add
cmp
jmp
xchg
pop
inc
push
pop
cmps
aas
inc
sbb
fistp
xchg
jns
cwde
fidiv
arpl
(bad)
(bad)
lods
jmp
cmps
out
mov
call
sbb
sbb
adc
jmp
(bad)
xchg
jle
cwde
lock
test
and
xor
std
sub
or
dec
add
add
call
popf
(bad)
pop
and
lock
iret
sub
popa
and
xor
pop
inc
xor
bound
fild
ret
ficomp
sub
retf
hlt
fld
mov
pushf
jnp
or
fisubr
push
ds
or
sub
int3
mov
mov
cmps
in
icebp
sub
xor
push
cwde
fisubr
inc
push
in
adc
add
out
xchg
pop
jno
cmp
into
and
sbb
and
daa
addr16
rcl
gs
sub
pushf
push
cmp
mov
push
inc
aam
push
add
add
ffree
cmps
or
sbb
pop
add
jle
fs
dec
daa
push
jne
pop
adc
inc
cmp
outs
sub
inc
xor
jno
push
push
imul
imul
or
push
or
arpl
dec
or
je
push
sbb
sub
gs
push
sub
pop
sub
retf
mov
mov
rol
icebp
mov
xchg
aam
in
in
and
mov
test
cwde
jmp
mov
mov
(bad)
fistp
(bad)
mov
loop
retf
mov
popf
icebp
mov
xchg
xlat
mov
mov
(bad)
out
stos
out
movs
retf
mov
out
cmc
cmps
out
retf
movs
in
mov
jmp
sar
(bad)
into
mov
enter
fild
add
add
sub
pop
adc
jle
outs
push
inc
sub
and
dec
push
ins
add
dec
and
inc
xor
push
adc
cmp
pop
cmp
dec
sub
dec
cmp
cmp
jb
pusha
add
sub
inc
push
cmp
jne
imul
sbb
outs
sub
add
xor
inc
and
inc
add
add
dec
sbb
je
push
adc
jl
pop
xor
jge
arpl
jno
jns
push
push
inc
add
sub
dec
or
jp
jge
jl
inc
aaa
jae
push
adc
nop
repnz
out
not
mov
xchg
int3
mov
pushf
(bad)
mov
xchg
aam
loop
repnz
cmc
mov
mov
mov
add
or
and
js
inc
pop
push
sub
dec
cmp
inc
add
ins
xor
pop
xor
pop
jg
dec
sub
or
jno
mov
add
fsub
mov
(bad)
dec
push
and
in
mov
adc
fwait
mov
outs
mov
jle
aaa
ja
pop
mov
sub
scas
push
and
xor
cmp
hlt
xchg
dec
xchg
lds
loopne
xchg
(bad)
mov
mov
dec
push
xor
push
pushf
icebp
pop
das
lahf
repnz
dec
add
cmp
cdq
aam
mov
fstp
iret
ret
mov
mov
in
mov
xor
outs
mov
dec
add
lods
aam
jne
add
mov
and
movs
(bad)
lods
xchg
add
mov
cmp
cmp
sbb
(bad)
scas
sahf
jmp
cmp
out
lds
sbb
arpl
jb
sbb
sbb
or
enter
xchg
xlat
pushf
jbe
pop
jns
out
into
add
push
nop
push
push
adc
stc
scas
out
push
mov
and
repz
pop
sub
(bad)
mov
push
ss
cmp
jmp
movs
mov
ins
pop
cld
int3
mov
and
mov
mov
add
mov
push
or
ror
mov
outs
adc
mov
imul
xlat
xchg
sar
sub
adc
div
push
mov
inc
add
mov
pop
cld
mov
or
add
(bad)
mov
movs
iret
sub
enter
stos
inc
dec
or
mov
pop
sub
or
in
mov
pop
das
bound
out
mov
retf
xchg
inc
pop
adc
pop
pop
sbb
sar
test
int
lea
pop
lahf
sar
addr16
repz
adc
call
jae
mov
jecxz
mov
je
daa
sbb
xchg
mov
sahf
inc
packsswb
or
or
call
ret
pushf
(bad)
jg
jl
mov
arpl
ins
pop
dec
or
inc
sub
imul
cmp
inc
push
data16
dec
adc
inc
push
inc
push
gs
push
jle
inc
sbb
pop
push
jle
jb
dec
sbb
js
pop
sub
add
and
ins
add
or
jbe
data16
ror
shl
in
movs
iret
add
std
mov
fist
loop
ror
dec
xlat
xchg
not
sbb
jmp
fnstenv
in
mov
in
xor
in
sahf
fsubr
fist
leave
pushf
shl
repz
out
lods
fidivr
ret
lods
in
and
repz
lock
into
mov
and
xor
inc
sbb
push
aas
push
xchg
fisubr
or
fs
shr
xchg
repz
movs
into
lods
jge
inc
loop
retf
cmp
cmp
or
xchg
mov
mov
adc
mov
mov
cmp
push
xchg
jnp
dec
ret
or
mov
push
cmps
xor
in
retf
mov
test
xor
shl
imul
xchg
cmc
jmp
cmp
dec
cmp
add
push
lods
push
es
pop
push
es
aad
jae
test
pop
adc
adc
hlt
and
pop
scas
jp
mov
xor
jmp
jle
push
sbb
bound
mov
(bad)
push
mov
(bad)
pop
call
(bad)
jecxz
mov
sbb
and
enter
add
pop
lea
aad
loopne
cs
outs
imul
aas
jno
dec
dec
lods
fmul
sbb
js
loop
xchg
jnp
in
sub
add
popa
cmp
adc
push
push
jmp
jno
out
repnz
mov
call
ins
cmp
lds
cli
adc
dec
xchg
add
call
pop
dec
gs
leave
cmps
adc
stos
jg
movs
jnp
jecxz
rol
xlat
pusha
int3
in
sti
cmp
xchg
and
arpl
pop
jle
jl
add
bound
sub
sar
rcl
add
dec
ins
loop
mov
and
lds
in
jl
fucomip
xchg
push
lahf
and
sub
jmp
(bad)
les
and
push
cmp
mov
loope
jecxz
ret
sahf
push
push
leave
pop
xchg
lods
(bad)
cmc
cmp
inc
repnz
push
mov
sbb
dec
lea
dec
(bad)
adc
(bad)
ffreep
jl
xchg
fwait
movs
js
inc
pop
pop
mov
cdq
pop
jmp
lods
xor
scas
mov
dec
push
inc
dec
jmp
cmp
(bad)
popf
jge
mov
or
pop
arpl
and
and
out
xchg
mov
(bad)
in
xor
inc
test
dec
jnp
add
(bad)
jne
mov
mov
rcl
mov
js
mov
test
push
pusha
ror
push
mov
sub
fld
rol
popa
xchg
out
ret
mov
mov
mov
mov
mov
adc
dec
in
xlat
cli
je
mov
xchg
sbb
out
mov
xor
adc
inc
loope
pushf
add
xor
mov
jl
jge
loope
hlt
dec
loop
arpl
mov
xchg
pop
push
mov
push
add
(bad)
in
pop
out
shr
xchg
xlat
cmps
push
jg
clc
mov
xchg
dec
mov
adc
sbb
inc
dec
sti
mov
repz
pusha
fsub
loopne
les
and
(bad)
enter
out
std
sbb
loop
pop
sub
jne
sub
out
add
jmp
mov
push
ret
mov
lock
sbb
(bad)
dec
cmp
mov
sar
jl
mov
mov
mov
aaa
inc
mov
jg
hlt
jno
outs
sub
repnz
imul
retf
jge
cmps
not
jnp
pushf
scas
sbb
jbe
or
sti
or
aam
adc
dec
fwait
ins
pop
rcl
xor
xor
xchg
pop
pop
call
aad
shr
mov
push
cmp
leave
add
push
mov
pop
adc
js
ret
jo
xchg
in
pop
xchg
cmp
cmp
pop
gs
cwde
jbe
mov
retf
add
push
mov
in
leave
inc
add
sbb
adc
clc
je
xchg
lds
or
xchg
in
sub
add
mov
retf
jo
fisub
call
jo
xchg
xchg
jmp
ins
adc
xchg
push
or
call
sub
jp
test
adc
xor
push
iret
jge
pop
jno
ins
xor
mov
jo
or
jg
lds
bswap
int
mov
cmp
jl
lds
jge
mov
mov
inc
aaa
and
adc
jnp
stos
mov
(bad)
add
dec
xchg
xchg
or
jae
xchg
xor
push
add
stc
push
dec
pmuludq
stc
sti
push
sbb
dec
icebp
cmp
into
sub
add
jb
push
or
mov
sbb
or
cwde
jbe
mov
retf
push
cli
or
loope
mov
es
pop
jmp
fs
jbe
jae
mov
and
xchg
sbb
int3
outs
sbb
push
or
mov
sbb
cmps
dec
mov
pop
dec
mov
pop
retf
inc
inc
cmp
je
mov
(bad)
addr16
xchg
faddp
dec
jno
int3
aaa
and
pop
xor
daa
movs
shr
pusha
imul
cld
mov
sub
setl
sti
aad
mov
mov
xchg
shr
lods
ins
enter
mov
and
cmp
(bad)
and
and
push
adc
or
mov
adc
cmp
rcr
mov
mov
mov
pop
mov
mov
rcl
jb
out
and
push
jecxz
or
aam
shl
dec
rol
sub
dec
mov
add
mov
jb
imul
jp
inc
pushf
test
sub
push
mov
jne
add
aam
and
mov
cmp
inc
xchg
mov
fcomp
and
jns
push
push
mov
cmp
xchg
xchg
test
imul
push
jmp
push
mov
xchg
movs
sbb
adc
clc
pusha
push
jno
cmp
add
cmp
sub
adc
xchg
mov
dec
mov
inc
dec
je
jb
bound
sbb
jp
iret
mov
call
hlt
jo
push
or
inc
aaa
shl
jns
mov
xor
add
pop
fmul
mov
jecxz
stos
and
into
jmp
cmp
pop
inc
aad
sbb
rep
jnp
pop
jmp
(bad)
xchg
inc
retf
out
mov
xlat
loop
pop
mov
rcr
cmp
xchg
pop
inc
retf
aad
sahf
xor
mov
and
fdiv
adc
pop
retf
jne
dec
scas
cmp
(bad)
adc
hlt
xor
(bad)
mov
xchg
push
lahf
(bad)
and
lahf
sbb
jno
mov
sahf
sti
dec
fdiv
sub
inc
push
fs
cmp
mov
aad
mov
cmc
adc
and
pop
cmp
(bad)
and
pop
xlat
stos
sbb
pop
xor
cmc
outs
mov
fwait
clc
mov
aas
lds
jmp
scas
jge
dec
pop
loope
jl
fimul
not
movs
add
out
mov
fcomp
arpl
adc
lea
ss
bound
retf
sbb
mov
sar
xchg
add
jne
mov
test
popf
jg
aad
test
loope
(bad)
cmp
and
push
ins
(bad)
jmp
add
repz
add
mov
add
movs
dec
push
jg
in
jmp
fs
xchg
sbb
ror
cld
cmp
adc
ss
fcmovnbe
jne
loop
add
fcom
adc
dec
cmp
push
std
fs
inc
cmp
pop
(bad)
fadd
fdivr
pop
sub
pop
mov
add
(bad)
mov
mov
int3
push
adc
imul
push
and
mov
loope
js
xchg
cmp
shl
sahf
sbb
cmc
add
neg
sbb
sar
dec
push
aas
pop
ret
mov
xor
mov
out
test
sbb
fbstp
cmp
sahf
inc
jmp
outs
imul
or
xor
ds
cmps
fcmovu
clc
add
out
loop
pop
dec
std
adc
fmul
aam
and
adc
popa
pop
cld
pusha
sub
jnp
mov
mov
add
inc
push
sub
jp
out
add
jg
(bad)
jge
lods
inc
jge
mov
movs
mov
xchg
add
imul
(bad)
inc
cmps
or
pop
mov
pop
inc
pop
popa
cmp
adc
clc
or
add
mov
sbb
push
movs
fst
xchg
scas
adc
sbb
mov
adc
call
pop
(bad)
push
repnz
inc
adc
mov
(bad)
js
retf
imul
test
inc
int
pushf
stc
or
push
addr16
push
sti
ror
arpl
pop
aad
loopne
retf
mov
pop
pop
or
pusha
scas
fcmovb
scas
lods
test
stc
adc
jmp
push
(bad)
xchg
test
bound
hlt
add
clc
add
dec
hlt
cld
outs
sbb
adc
out
aaa
and
mov
sbb
xor
mov
mov
jb
and
adc
sbb
js
jg
add
cli
lods
fld
popa
adc
sti
lds
push
test
mov
mov
pop
mov
sub
shl
test
pop
aad
sub
test
push
push
in
mov
adc
xor
add
dec
mov
sub
aam
ret
mov
fmul
test
mov
das
mov
sbb
inc
mov
xor
retf
arpl
movsx
and
cmc
or
lock
inc
out
push
xchg
fnstsw
sbb
mov
push
mov
in
inc
daa
adc
add
mov
daa
jle
cmp
push
fidiv
out
leave
or
xchg
fld
push
les
pop
cmp
repz
cmp
popa
(bad)
cmp
nop
and
in
mov
rcl
jmp
adc
test
aaa
inc
mov
push
adc
ror
jns
arpl
icebp
or
data16
sti
(bad)
xchg
pushf
into
dec
xchg
icebp
rcl
arpl
jmp
sub
ds
pop
jns
mov
and
ins
xor
add
xchg
add
(bad)
sbb
jmp
aaa
inc
sub
hlt
mov
cmps
adc
cmp
sar
lea
cs
and
std
sar
gs
arpl
mov
adc
push
push
aad
jb
and
mov
or
sar
lds
lods
in
je
lods
mov
add
fmulp
(bad)
dec
dec
cmps
mov
jmp
pop
sbb
js
push
out
(bad)
outs
mov
sbb
(bad)
sti
fsub
fistp
mov
xchg
cmc
mov
cmp
mov
ret
leave
jmp
iret
mov
mov
int3
mov
aam
imul
gs
ret
jmp
out
rcl
jle
or
outs
xchg
pop
sub
inc
mov
mov
dec
iret
movs
jbe
or
adc
or
mov
sub
or
test
push
mov
iret
inc
test
adc
fbstp
rcr
and
push
stos
enter
adc
mov
fldenv
adc
fadd
inc
pop
xor
das
cmc
mov
adc
gs
data16
or
push
shr
inc
mov
push
add
push
xchg
xchg
into
pop
xchg
adc
cmp
outs
adc
or
or
mov
push
cwde
mov
jge
cmc
inc
jnp
jmp
inc
dec
outs
cdq
outs
mov
mov
pushf
or
xlat
pop
xchg
inc
arpl
enter
mov
(bad)
fdivr
enter
fadd
mov
add
xchg
dec
aad
jbe
cld
mov
hlt
idiv
cmps
or
lds
inc
mov
add
mov
in
mov
and
mov
mov
lods
adc
sbb
add
jp
jp
out
das
xor
xchg
jmp
cdq
dec
sub
push
mov
xchg
dec
sahf
sbb
add
mov
lods
arpl
lea
cmp
xor
(bad)
popf
xchg
pop
ss
mov
dec
sub
repz
repz
ds
pop
ror
add
pop
push
pop
xchg
int
sub
push
adc
sbb
test
push
aam
adc
dec
pusha
mov
out
inc
in
or
or
mov
test
push
in
lea
jno
dec
sub
ror
add
or
jle
mov
(bad)
clc
in
cmp
mov
sub
mov
mov
clc
ret
inc
mov
push
xchg
mov
leave
(bad)
adc
mov
rcr
inc
jns
clc
leave
pop
fcomp
gs
push
dec
sub
mov
mov
fs
cld
ret
fcom
sbb
and
(bad)
in
mov
arpl
xor
test
outs
(bad)
xchg
ja
dec
in
ret
mov
movs
xchg
push
out
mov
push
adc
imul
mov
push
enter
or
mov
jmp
in
jo
add
and
adc
dec
out
out
and
sbb
outs
out
xchg
xor
cmp
repz
or
add
mov
push
out
xor
(bad)
xchg
leave
mov
mov
scas
dec
mov
ret
(bad)
jo
dec
inc
test
leave
mov
js
adc
aas
jo
sar
es
jmp
dec
int3
inc
jle
push
xlat
push
push
scas
outs
repnz
lock
jle
sub
pop
dec
add
stos
dec
mov
loop
xchg
lods
inc
sub
ins
cmp
popf
sbb
cmp
push
cmp
out
inc
cmp
dec
inc
sbb
popf
dec
lock
(bad)
cwde
pop
mov
add
pop
cdq
pop
adc
inc
mov
mov
jne
and
jl
cli
call
xor
add
and
mov
rol
add
jecxz
ss
outs
adc
mov
das
bound
sbb
inc
fs
push
pop
and
(bad)
(bad)
jl
stos
sbb
and
icebp
movs
push
fs
fs
inc
popf
test
(bad)
jmp
mov
jmp
and
and
out
cmps
mov
jge
shl
mov
dec
repz
mov
pushf
sub
retf
xchg
cmp
xor
xchg
stc
adc
mov
push
ss
int3
pop
lods
adc
pop
js
daa
div
fcom
nop
xor
mov
sbb
inc
ss
(bad)
add
das
cdq
jnp
mov
push
sti
imul
enter
loope
imul
mov
out
add
adc
rol
cmc
sub
lock
ja
pusha
or
ror
or
dec
ins
lods
in
arpl
call
shl
(bad)
or
sbb
leave
push
fadd
pop
jecxz
adc
mov
dec
sysexit
vcvtps2pd
sub
jecxz
rcr
ret
ret
or
iret
pop
int3
adc
mov
fist
lea
push
addr16
add
ret
adc
pop
test
sub
inc
imul
pop
xor
mov
push
(bad)
out
cld
inc
mov
ins
shl
push
jbe
dec
add
shl
mov
cmp
mov
ret
sub
repnz
jmp
mov
aad
adc
ret
fwait
jno
pop
imul
mov
sub
mov
add
push
jmp
sbb
inc
js
ror
xchg
push
inc
or
mov
scas
sub
inc
push
sti
mov
js
mov
mov
add
or
sbb
mov
push
dec
add
adc
adc
push
aas
jle
adc
push
ins
int
daa
aam
push
xchg
xchg
ret
mov
repnz
in
xor
sbb
shl
sbb
fnsave
pop
jl
test
sbb
dec
enter
nop
stos
scas
mov
mov
inc
stos
push
jns
in
leave
int
sbb
sub
out
(bad)
ret
arpl
test
add
and
mov
idiv
sub
mov
pusha
xchg
mov
inc
or
movs
aam
push
xchg
mov
mov
aad
out
cmp
shl
data16
jnp
(bad)
sub
push
int
std
mov
xor
cmps
xor
add
fiadd
or
or
je
jbe
xor
hlt
mov
jbe
movs
inc
in
jno
jno
test
jno
clc
sti
ss
mov
cmp
mov
jns
mov
enter
xor
(bad)
ficomp
cmc
arpl
cwde
daa
mov
inc
cli
fs
mov
xor
or
fidivr
clc
mov
sbb
arpl
div
sub
or
cmp
out
xchg
sbb
mov
pop
xchg
sti
ds
or
clc
cmp
test
add
ss
movs
xchg
repnz
(bad)
sbb
(bad)
jecxz
stos
mov
jno
sub
jno
loopne
lea
cwde
test
and
into
jne
test
test
shr
int3
xor
imul
pop
or
pusha
leave
and
jno
sbb
leave
dec
imul
push
fcom
mov
(bad)
mov
jno
jge
movs
inc
mov
dec
int3
jmp
sub
iret
pop
cmp
cli
and
add
bound
clc
in
and
sub
inc
push
push
stos
xlat
push
mov
out
loop
inc
fld
push
cmp
inc
scas
icebp
jno
or
jecxz
loopne
mov
test
movs
test
repz
sub
jae
mov
jg
adc
(bad)
mov
xor
cwde
pop
fdiv
mov
(bad)
and
sub
or
or
inc
fmul
mov
jae
pop
aam
jecxz
cmc
or
es
test
xor
scas
mov
ds
jbe
jo
push
test
push
stos
pusha
mov
dec
imul
adc
jo
les
xchg
cdq
scas
inc
cwde
add
or
xchg
aad
sub
pop
rcr
dec
jecxz
mov
mov
xor
ins
(bad)
jns
outs
std
inc
xor
xchg
rcr
(bad)
stc
jne
(bad)
sub
dec
cmps
ret
pop
sbb
(bad)
stos
push
mov
mov
retf
or
movs
loop
xbegin
cmc
pop
dec
dec
out
dec
jle
xchg
ret
imul
ret
repz
adc
push
sub
inc
popf
xor
(bad)
repnz
and
rcl
cdq
(bad)
mov
out
sub
ret
call
das
add
add
cmp
shl
bound
fmulp
xor
adc
ja
push
add
inc
mov
fistp
add
sahf
jmp
lds
push
xor
cmp
les
pop
jo
sbb
or
mov
pop
dec
mov
push
inc
jmp
xlat
xor
outs
loop
xor
fidivr
cwde
popf
test
xor
aad
das
aas
add
pop
in
mov
pop
pop
xchg
mov
mov
pop
sahf
mov
add
jo
imul
jb
hlt
push
push
addr16
outs
stos
jg
xchg
xchg
pop
call
je
(bad)
iret
jle
not
ss
mov
xor
pop
jge
add
sub
nop
das
scas
pop
or
imul
retf
adc
sar
xchg
push
add
retf
sub
bound
enter
cdq
inc
xor
pop
or
ret
fnstsw
ds
dec
mov
test
sti
mov
mov
call
push
adc
push
loop
inc
ss
pop
mov
or
fwait
ja
adc
dec
out
lods
dec
adc
retf
mov
mov
lds
pop
int
inc
adc
jmp
std
cmps
mov
pop
lds
icebp
test
adc
pop
(bad)
fild
arpl
mov
das
pop
jge
cdq
lods
into
sub
mov
lods
fild
(bad)
xchg
ficom
inc
ret
dec
jle
in
cmp
mov
nop
dec
daa
adc
in
fistp
call
jne
lods
shl
scas
loopne
xor
mov
sub
jns
pop
sbb
rcl
mov
jns
stos
stos
jmp
xlat
mov
loop
dec
inc
push
dec
mov
pop
adc
xchg
pop
popf
mov
bound
adc
movs
mov
xor
fcmovnbe
mov
jno
pop
pop
xor
xchg
xchg
adc
mov
adc
cmp
aas
in
push
push
inc
inc
int
loop
arpl
inc
and
sbb
imul
dec
imul
(bad)
mov
adc
sbb
inc
adc
sub
dec
pop
pop
das
inc
adc
shl
push
xor
inc
or
sub
jnp
push
cmovge
mov
fwait
repz
pop
jge
test
lods
movs
shl
pop
in
mov
mov
sti
outs
in
mov
(bad)
cmc
xchg
xchg
fdiv
hlt
mov
mov
movs
int3
mov
dec
xor
pop
pop
outs
xor
sahf
stos
ins
ds
or
pop
pop
inc
xor
jge
popf
fsubr
out
test
inc
or
in
outs
cs
sbb
jb
mov
jbe
xor
adc
rcr
and
jge
loop
test
call
dec
push
push
mov
fwait
repz
shl
pop
sbb
cmp
adc
cwde
movs
fst
repz
fistp
xchg
retf
mov
xchg
les
jns
mov
or
js
cmp
jg
ss
push
cmp
adc
ror
push
push
adc
sub
dec
or
daa
pusha
aas
jge
push
add
in
mov
fs
inc
or
jge
pop
sbb
jno
iret
retf
fs
daa
jg
aas
and
rcr
lods
int3
push
mov
and
bound
and
jmp
(bad)
ins
scas
cs
pop
xor
mov
stos
mul
xlat
mov
dec
mov
test
mov
bound
dec
adc
cmp
dec
mov
adc
mov
ins
or
(bad)
data16
iret
xchg
repz
hlt
mov
cld
mov
fimul
bound
sub
mov
mov
mov
push
jecxz
inc
add
pop
or
ret
mov
xchg
lock
or
jo
push
pop
sbb
fld
fstp
xchg
int3
cmp
push
mov
pop
push
inc
das
dec
pop
dec
lods
iret
nop
mov
pop
push
or
and
mov
mov
jg
adc
xchg
aam
stos
add
or
push
ds
inc
scas
into
mov
ret
sub
mov
add
lds
inc
push
cs
mov
(bad)
cs
sub
sbb
dec
sbb
dec
push
dec
adc
daa
lds
cmc
imul
imul
mov
xchg
fcomp
xchg
aam
cmp
push
in
jmp
mov
xchg
mov
sbb
adc
into
jl
push
sbb
cmp
fsub
in
call
mov
cmp
jne
addr16
daa
inc
add
cmps
imul
fsubr
lock
popa
inc
or
jge
cld
add
and
adc
jnp
push
pop
inc
or
cmp
sbb
xor
sbb
dec
sbb
(bad)
mov
sbb
iret
push
sbb
sbb
pop
add
inc
pop
pop
sbb
pop
ds
or
orps
push
sbb
xor
or
ror
mov
jge
into
push
jae
pop
sbb
enter
xor
pop
or
jmp
add
popf
adc
(bad)
adc
sub
rol
mov
sbb
jns
std
xor
stos
rcr
lods
repnz
ret
xchg
std
lahf
cmps
out
mov
aam
leave
mov
lods
aam
(bad)
xchg
jno
in
stos
idiv
mov
add
icebp
adc
movs
sti
xchg
(bad)
lahf
shl
and
in
sub
mov
and
sahf
rol
(bad)
loope
mov
daa
xchg
xchg
pop
pusha
sbb
cmps
int3
xchg
shl
(bad)
leave
mov
sbb
adc
dec
adc
jge
jg
imul
or
ds
mov
out
pop
sub
outs
sbb
test
stos
into
pop
or
dec
sub
push
add
sbb
mov
cmp
add
push
xchg
clc
imul
pop
js
xor
and
scas
shl
inc
xor
mov
push
mov
hlt
fs
mov
inc
and
bound
dec
xor
outs
aaa
push
sahf
loop
stos
js
pop
xchg
in
lods
iret
xchg
les
xor
jb
push
mov
test
push
or
test
xchg
sti
xchg
scas
gs
cmp
jecxz
mov
lods
in
pushf
pop
ss
push
sub
sbb
jmp
add
ja
hlt
xchg
dec
cmp
or
and
jle
ds
dec
adc
cmc
(bad)
in
cmps
mov
fisubr
pop
adc
outs
sub
stos
enter
lea
xchg
mov
hlt
mov
mov
aad
retf
mov
mov
cdq
xlat
jbe
std
mov
jge
jg
push
push
push
push
inc
add
xchg
mov
mov
and
ss
adc
sbb
pop
adc
pushf
iret
mov
xor
jns
das
hlt
push
and
adc
xor
dec
jmp
rcr
mov
mov
or
jl
cwde
int3
call
cmc
inc
add
das
jmp
push
ja
dec
xchg
mov
mov
xchg
fstp
pop
clc
mov
fld
and
inc
adc
test
or
jp
push
or
mov
ja
inc
sbb
outs
sub
xor
or
adc
cmp
adc
mov
movs
loopne
ret
mov
xor
std
gs
jno
outs
in
(bad)
cmc
scas
sti
out
add
push
adc
inc
aas
fild
dec
sbb
push
xchg
mov
ins
cmovp
pop
xor
ret
mov
les
stc
mov
xchg
fnstsw
aas
inc
adc
xor
(bad)
mov
inc
stos
(bad)
jnp
and
clc
and
dec
push
push
and
test
push
adc
push
add
push
adc
dec
add
loope
mov
daa
inc
adc
ins
mov
mov
fsub
inc
sub
xor
mov
push
inc
call
retf
addr16
lds
sub
or
cmp
and
loope
push
repnz
push
mov
mov
jmp
ret
scas
imul
ja
out
es
add
jmp
add
sbb
stc
aaa
push
mov
cmc
fs
or
push
push
push
sahf
dec
xor
pop
jmp
outs
sub
fwait
icebp
mov
test
cmps
ret
mov
pushf
mov
loope
icebp
mov
outs
dec
cvttps2pi
dec
adc
xchg
push
dec
mov
jne
inc
jmp
or
clc
outs
scas
jle
xlat
mov
jl
pop
in
and
and
dec
sbb
adc
ds
push
and
je
inc
or
popa
mov
pop
retf
xchg
js
cwde
inc
into
fwait
mov
xchg
scas
ja
retf
mov
cmp
cmp
loope
push
push
or
inc
mov
pop
lods
push
or
jbe
jg
inc
scas
inc
ss
sbb
js
ins
push
xor
daa
sub
add
pop
cwde
cmovp
jno
push
sbb
inc
and
cmps
aam
aaa
dec
out
mov
call
shl
pop
mov
xchg
sub
sti
mov
jb
xor
jns
push
xor
je
leave
sbb
dec
or
out
fmul
inc
add
leave
mov
jb
and
fmul
mov
jo
jnp
imul
push
pop
out
jl
icebp
xchg
cmp
jns
jns
pop
adc
retf
adc
loop
stos
cmp
inc
adc
retf
scas
rol
mov
scas
icebp
test
add
fistp
mov
mov
cmps
icebp
fwait
stc
cmp
addr16
adc
adc
inc
mov
aas
jmp
inc
xchg
mov
add
(bad)
xchg
int3
add
inc
and
sub
dec
mov
push
loopne
clc
je
out
mov
adc
pop
call
cli
push
push
daa
pop
xchg
out
mov
push
sbb
ds
cli
imul
mov
sti
push
adc
inc
scas
cmc
mov
or
xchg
mov
ins
scas
xor
out
aad
test
movs
rol
xchg
int3
lea
sbb
mov
xchg
push
and
pop
loope
je
popa
adc
jg
sub
shl
pop
imul
mov
xor
loope
std
mov
iret
mov
pop
xor
and
xchg
sar
inc
xor
data16
dec
loop
or
mov
xor
adc
mov
pusha
and
sub
sbb
scas
cli
call
xchg
retf
jno
inc
or
sbb
dec
pop
pop
sbb
push
out
rol
xor
leave
not
aad
scas
push
xor
cdq
mov
dec
cmp
loopne
sub
jnp
dec
or
jl
into
push
in
mov
inc
call
xor
dec
add
lds
in
cmps
xlat
popa
xchg
fwait
enter
in
into
movs
jmp
fld
xchg
and
inc
cmp
xor
lock
mov
sar
jge
jns
loope
cmps
mov
and
and
or
stos
aam
ret
inc
pop
inc
or
loope
rol
xchg
shl
gs
(bad)
inc
mov
add
push
push
in
out
test
sahf
(bad)
xchg
pusha
jge
jnp
mov
sbb
jle
pop
(bad)
imul
ror
scas
aad
repz
pop
sbb
xchg
fadd
sub
shl
test
ins
mov
inc
pop
lds
dec
sbb
loop
int
les
(bad)
jmp
add
ins
cmp
push
mov
inc
repnz
sub
inc
cmp
mov
ds
xchg
(bad)
call
int
ror
jp
std
arpl
inc
cs
push
data16
je
and
inc
or
call
ins
lea
outs
sti
xchg
popf
rcl
lods
ret
mov
add
xor
mov
mov
inc
xor
dec
popf
arpl
cmp
cwde
fild
jge
cmp
mov
outs
div
or
jmp
xlat
or
in
jecxz
pop
inc
push
es
lahf
ficomp
xchg
xor
mov
inc
dec
sbb
dec
loope
xchg
adc
test
mov
jb
dec
add
or
xor
or
push
sbb
jg
das
jp
mov
mov
aas
mov
cwde
dec
in
out
mov
sub
add
scas
mov
ret
ror
dec
cwde
in
ja
jne
jne
add
ret
jl
jge
int
hlt
mov
sbb
dec
aaa
jle
pop
add
cmp
adc
daa
jp
pop
pop
dec
add
gs
out
sbb
xchg
mov
pusha
sub
sbb
mov
pop
pop
pop
pop
out
in
mov
je
inc
pop
dec
out
xchg
int3
fwait
(bad)
sbb
test
or
jns
and
imul
mov
cmp
popf
int3
popf
jge
fadd
idiv
adc
mov
call
add
cmp
fdivr
outs
or
mov
aas
cmp
push
push
sbb
sub
sub
sti
sub
inc
xor
adc
das
sub
push
xor
jne
jnp
pop
adc
sub
dec
adc
jb
(bad)
jo
shl
mov
(bad)
xchg
fstp
cld
lock
rol
jbe
pop
stos
mov
enter
pop
inc
adc
push
mov
es
and
inc
popf
xchg
fimul
adc
jmp
mov
and
mov
cdq
into
fwait
push
fild
rol
mov
fild
cwde
push
sub
push
push
out
jmp
lods
hlt
sbb
inc
jecxz
int3
imul
enter
rcl
in
and
push
mov
xchg
push
pop
inc
or
sub
loope
aad
xlat
sahf
mov
into
mov
or
xchg
mov
lahf
retf
nop
ror
mov
mov
icebp
(bad)
movs
les
ret
sbb
dec
mov
pop
cmp
ins
ss
pop
push
sbb
pop
adc
mov
push
adc
bound
or
sub
fild
or
lds
jg
fcmovb
mov
ss
inc
add
mov
icebp
popa
rcr
or
loopne
xchg
inc
cmp
sahf
ret
stos
(bad)
or
mov
(bad)
dec
or
xchg
ret
outs
lods
sti
mov
adc
push
cmp
outs
in
sub
xchg
fild
clc
nop
(bad)
lahf
cmps
leave
mov
jbe
(bad)
jg
pop
adc
jge
jle
outs
sbb
das
push
shl
jg
jne
lds
jns
scas
hlt
xchg
mov
jne
jae
dec
cmovbe
and
pop
mov
fs
inc
cmp
inc
loopne
test
sub
jmp
sub
arpl
and
div
dec
adc
dec
dec
sub
or
out
leave
test
adc
retf
nop
in
mov
and
mov
xchg
push
inc
xor
add
lds
jle
push
sub
dec
push
pop
push
jnp
xor
xchg
retf
fs
push
push
mov
inc
mov
jp
dec
loope
retf
mov
mov
pushf
aad
jmp
sub
stos
pop
adc
sub
and
dec
pop
inc
ds
xchg
sbb
test
out
fwait
enter
hlt
adc
sub
shr
adc
adc
(bad)
ds
in
ror
add
add
mov
ins
or
jns
sub
dec
mov
push
nop
and
sub
pop
fisubr
arpl
push
and
dec
pop
pop
push
push
dec
in
mov
xchg
in
jb
sbb
js
fstp
mov
and
cmovns
pop
cmp
pop
or
ret
lods
jmp
retf
call
xlat
cmp
sub
jnp
dec
or
(bad)
mov
and
cmps
push
dec
or
or
pop
adc
loopne
fstp
push
add
out
mov
mov
pusha
movs
adc
push
xor
mov
xchg
out
test
push
mov
addr16
das
retf
fist
add
movs
bound
sbb
pusha
add
jae
jg
dec
sbb
imul
dec
loope
arpl
fld
inc
or
loope
jle
sub
jmp
gs
ret
les
push
pop
push
push
push
mov
xor
xchg
retf
cwde
fild
mov
push
xor
sub
adc
cmps
stc
mov
sub
and
sbb
arpl
ds
dec
xchg
shl
pop
add
and
bound
pop
mov
fbstp
pushf
cmps
mov
mov
sbb
pusha
movs
in
jne
popa
xor
pop
imul
dec
adc
neg
pop
or
mov
mov
loop
ret
pop
ds
xor
pop
jmp
fistp
sbb
repnz
mov
nop
push
sub
cld
mov
dec
out
addr16
push
mov
fimul
and
mov
cmp
or
add
stc
mov
ds
sbb
ins
cmp
loope
int3
popf
lods
dec
ds
or
pop
lahf
(bad)
scas
in
popf
retf
ins
cmp
or
clc
pusha
push
inc
and
xchg
(bad)
call
xor
dec
pop
inc
adc
icebp
cmp
ins
and
nop
adc
inc
push
enter
fld
dec
sub
mov
je
pop
adc
(bad)
mov
xor
add
es
test
mov
test
cmp
and
in
mov
std
push
jb
inc
xor
ret
nop
retf
xchg
int
jns
sub
xor
sbb
shl
inc
sbb
rol
inc
or
push
adc
adc
jnp
in
fwait
push
cld
jae
pop
adc
jg
mov
arpl
push
sbb
and
jbe
jae
pop
push
inc
xchg
mov
test
sbb
imul
or
(bad)
mov
test
js
jno
mov
arpl
loope
mov
xor
test
mov
inc
test
jne
jg
imul
inc
sbb
stc
cdq
aam
adc
mov
or
add
test
jp
sbb
and
and
mov
mov
add
fiadd
pop
popf
mov
mov
add
ja
pop
xchg
ds
out
jp
inc
in
fs
clc
mov
push
sbb
jne
sub
push
and
inc
push
pop
in
leave
scas
lds
dec
sbb
addr16
(bad)
pop
jecxz
ret
cwde
mov
xchg
mov
xchg
ret
rcl
fwait
rcl
test
mov
add
jecxz
loope
enter
aas
js
jp
inc
call
aaa
fcompp
pushw
jb
sbb
jne
adc
and
idiv
add
call
mov
xchg
enter
xchg
mov
jmp
lods
rcr
int
lds
popf
iret
sub
js
sub
retf
cmp
push
sbb
fmul
pushf
movs
dec
and
pop
mov
dec
sub
sub
push
es
cmp
push
cmp
out
cld
pushf
pop
pop
push
fcmovbe
pushw
das
lds
and
data16
out
aam
test
mov
call
call
icebp
xor
outs
adc
fst
mov
sbb
push
jb
movs
lds
imul
test
xchg
not
push
sbb
int
and
sti
cdq
pop
add
dec
adc
repz
lahf
mov
push
cmp
out
and
adc
or
mov
das
popa
adc
push
(bad)
mov
add
pop
pop
or
jns
jb
inc
cmp
bound
inc
sbb
jmp
xchg
leave
xchg
movs
push
jmp
repnz
inc
sbb
mov
stc
push
cs
inc
jmp
js
and
test
and
daa
dec
sub
ret
mov
adc
push
push
jp
aaa
push
xchg
call
sbb
sbb
(bad)
mov
arpl
inc
sbb
push
popf
or
popa
sbb
mov
adc
xchg
fidivr
ficom
mov
pushf
ret
mov
mov
pop
jae
mov
and
mov
nop
push
add
mov
sbb
sbb
test
xchg
out
test
dec
test
not
mov
test
shr
xor
mov
daa
mov
cmc
mov
xor
test
pusha
cmp
scas
in
clc
ss
push
xlat
cwde
mov
test
cmp
jp
loopne
stos
pusha
retf
add
and
outs
or
sub
in
mov
mov
inc
out
push
xchg
push
add
and
nop
shl
bound
xor
cwde
test
retf
shl
ins
das
jne
iret
mov
jg
pop
adc
adc
(bad)
and
mov
push
and
les
add
adc
push
loopne
call
jge
or
pop
sbb
dec
dec
iret
test
fild
sti
xchg
retf
inc
pop
ins
lahf
(bad)
mov
test
or
arpl
cmp
cmp
in
push
inc
out
pop
sbb
adc
mul
mov
pushw
push
pop
add
sub
push
xor
jno
aam
or
sub
jb
fs
jne
ss
fstp
dec
xor
push
xchg
in
pusha
sbb
pop
fistp
scas
cmc
add
xor
(bad)
ins
sbb
mov
jecxz
add
shl
and
adc
scas
inc
add
pop
mov
test
pop
lods
into
mov
lods
fdiv
sbb
aam
pop
or
add
loop
xchg
test
out
inc
sub
xlat
add
xchg
(bad)
sahf
std
mov
sbb
call
add
and
les
jb
jp
dec
xor
or
xchg
mov
add
mov
cmc
cmps
in
mov
jp
stos
enter
sbb
xchg
fwait
push
jmp
adc
out
test
cmps
mov
sbb
dec
test
(bad)
xchg
ror
lahf
ds
loop
out
mov
inc
xor
and
aas
mov
xchg
xchg
int3
xchg
aad
push
push
sub
push
inc
ss
sub
mov
aaa
js
lods
(bad)
popf
leave
xchg
lock
cld
cdq
(bad)
jle
popa
and
xchg
xchg
rol
add
push
adc
add
dec
and
sub
sbb
mov
popf
ror
xchg
ins
xor
ret
mov
add
fistp
daa
movs
cli
mov
repnz
pop
inc
mov
xor
sub
push
jae
mov
fist
nop
lock
retf
cmps
xlat
aaa
dec
scas
jmp
cmovl
or
fbstp
mov
inc
sub
sub
es
sbb
lea
js
jns
xor
mov
int3
fwait
push
pop
sub
jecxz
sub
sbb
scas
and
mov
mov
xor
mov
jecxz
dec
sub
iret
ins
in
dec
(bad)
ficom
push
sbb
jg
loop
aam
sbb
mov
sti
xchg
repz
(bad)
mov
or
push
stos
dec
sub
sbb
xchg
or
adc
retf
sbb
call
cmp
or
sub
out
js
gs
and
cli
test
dec
jmp
push
push
inc
sub
mov
lds
test
in
inc
mov
ror
mov
adc
pusha
cmp
loope
adc
outs
ret
div
cs
mov
and
retf
add
bnd
mov
mov
aaa
add
push
out
jo
inc
cwde
stos
jle
adc
mov
cmp
mov
dec
int3
sahf
in
scas
daa
jg
aad
aaa
js
fcomp
not
add
lods
fiadd
dec
cmp
mov
sub
retf
or
cs
jmp
repnz
in
hlt
add
arpl
int3
mov
test
xchg
mov
sbb
test
ret
call
outs
pop
sahf
mov
das
dec
aam
mov
ret
aad
add
mov
fs
sub
ret
mov
push
mov
shl
aaa
fist
pop
sbb
fldcw
pop
xlat
mov
xlat
movs
cmc
lahf
call
out
(bad)
aad
ja
idiv
pop
sbb
lods
je
or
cwde
icebp
push
dec
add
icebp
mov
test
and
or
dec
adc
sbb
xlat
xchg
mul
cmps
adc
es
lods
inc
in
(bad)
fnstsw
aad
add
sbb
cmp
test
mov
pop
or
dec
popf
lods
fst
ss
outs
mov
xor
popa
jne
aad
push
add
xor
sbb
outs
and
mov
mov
lods
push
inc
and
pop
jo
imul
sub
push
jle
push
cmp
mov
push
cdq
repnz
outs
inc
add
mov
pcmpgtd
not
aas
jns
cmc
xchg
in
daa
fsubr
imul
mov
mov
jecxz
ror
mov
cwde
or
ss
fidivr
push
es
pop
in
stos
push
sbb
inc
add
push
pop
cmp
jne
push
retf
mov
outs
sub
sbb
adc
xor
cmp
push
jnp
xor
outs
bound
sub
(bad)
lahf
call
jo
es
sbb
pop
rcr
push
ds
jbe
push
sbb
mov
inc
push
cmp
out
mov
jg
daa
ins
sub
and
les
sub
dec
pop
inc
cwde
cli
jbe
retf
adc
cmps
mov
aam
int3
(bad)
cld
sub
add
jnp
jecxz
sbb
leave
mov
dec
adc
xchg
int
aad
xchg
fnsave
in
mov
(bad)
and
pop
add
fadd
iret
hlt
xchg
fsub
xchg
xchg
leave
cmp
out
popa
xor
and
cld
pop
or
dec
pop
sbb
stos
aam
dec
push
or
jbe
sti
mov
sub
xor
pop
pop
stc
imul
jle
xchg
loop
mov
stos
fldcw
jb
dec
adc
or
(bad)
(bad)
loope
push
out
add
add
ret
popa
cmp
jns
ja
jp
adc
shr
cwde
ror
repnz
sub
fld
test
cdq
fld
jge
mov
jnp
repnz
ret
jno
pop
sbb
add
mov
aaa
inc
pop
jb
repnz
repz
mov
int3
jb
leave
pop
hlt
xchg
cmc
cmp
mov
cmps
add
stc
ins
sub
idiv
out
(bad)
fbld
addr16
rcr
iret
(bad)
out
leave
xchg
clc
xchg
mov
lods
jle
cwde
fist
ficomp
pop
jne
and
outs
pop
inc
sub
int3
sub
ret
fs
jne
ror
jbe
mov
std
bound
mov
fnsave
into
mov
sub
popf
mov
jns
js
jne
(bad)
movs
cli
arpl
rol
frstor
adc
pop
sbb
shr
mov
(bad)
aam
pop
ds
pop
add
movs
xlat
xchg
jmp
shr
and
and
in
sbb
jmp
imul
fdivr
pop
cmp
stc
jecxz
call
mov
ret
nop
shr
je
inc
push
adc
adc
test
rcl
adc
or
and
mov
in
hlt
adc
and
mov
inc
cmp
dec
bswap
mov
fiadd
or
in
(bad)
xlat
movs
cld
lods
ret
add
lea
jge
fucomi
(bad)
mov
not
imul
out
mov
xchg
push
or
xchg
test
pop
je
jno
inc
mov
loope
dec
test
and
sbb
sub
leave
clc
popf
(bad)
iret
xchg
in
push
inc
or
adc
xlat
cdq
adc
mov
lock
imul
ror
adc
inc
shl
xchg
scas
lods
jmp
cld
sahf
int
adc
xlat
aam
enter
ficom
pop
pop
cmp
enter
out
mov
clc
sahf
xchg
jmp
lock
pop
adc
adc
stos
in
cmps
mov
mov
pushf
int3
inc
packssdw
and
sub
mov
pop
sbb
push
in
sbb
(bad)
(bad)
mov
(bad)
mov
jg
or
retf
retf
mov
test
pusha
and
addr16
cli
xchg
push
outs
xor
ja
cmove
cs
add
ss
ffree
xchg
in
mov
mov
ret
add
and
repnz
in
lea
int
mov
mov
dec
sbb
aam
int
int
cld
loope
repz
int3
mov
cli
mov
mul
sub
les
je
test
mov
and
adc
or
cmp
repnz
mov
and
xor
js
lods
jmp
add
popf
ficom
lds
in
sbb
repnz
mov
cmc
lods
push
das
pop
adc
xchg
fs
or
std
mov
adc
dec
ret
call
mov
gs
mov
jg
test
fcomp
stc
fwait
mov
neg
test
adc
cli
into
jle
outs
xchg
xchg
scas
sub
dec
push
(bad)
leave
movs
aad
mov
sub
push
push
jae
push
or
adc
add
adc
aam
xchg
stos
sbb
repnz
mov
mov
popa
adc
push
cdq
clc
les
es
jo
jno
aam
sub
jns
jo
xor
arpl
lods
mov
jle
push
adc
mov
and
mov
cs
das
repz
(bad)
aas
test
scas
and
mul
mov
jmp
push
mov
sbb
shl
or
sahf
cmps
jmp
push
jecxz
add
lods
(bad)
sti
xlat
test
xor
mov
push
bound
xchg
iret
pop
sbb
cmps
les
dec
ss
inc
and
retf
mov
rcl
push
push
mov
scas
call
xchg
(bad)
adc
sbb
mov
sbb
mov
aas
jns
test
mov
xchg
loope
lahf
sbb
sti
scas
bound
call
ret
or
div
pop
aaa
imul
rcr
bound
arpl
fadd
push
into
xchg
hlt
mov
aas
mov
xchg
inc
add
dec
out
fadd
jl
imul
test
pcmpgtd
icebp
movs
aam
cdq
fld
inc
jg
adc
sar
out
mov
aas
or
sahf
adc
push
fld
or
cwde
movs
leave
pop
movs
call
lahf
movs
out
cmp
mov
inc
sbb
push
xlat
addr16
test
jno
ss
jnp
add
dec
leave
xchg
cmp
ds
call
lahf
fnsave
pop
push
and
ficomp
and
jno
in
mov
mov
outs
mov
add
pushf
pop
push
xchg
repz
shl
in
push
push
or
mov
lahf
sar
pusha
inc
out
pop
pop
jl
jmp
or
sbb
scas
fnstsw
pop
sub
dec
pop
adc
out
lods
adc
mov
inc
xor
add
pop
push
dec
repz
push
(bad)
push
aaa
fs
jecxz
mov
cmps
sub
call
mov
pusha
add
jnp
mov
bound
jecxz
nop
call
xchg
jg
jle
bound
scas
lock
arpl
inc
shl
jmp
fnsave
pop
sbb
lds
out
xor
inc
push
aas
jo
out
and
test
pop
mov
mov
sahf
(bad)
mov
lahf
ffree
stos
add
xor
adc
je
outs
push
sbb
sub
mov
(bad)
mov
jmp
stos
xchg
xor
jmp
xor
and
call
leave
fld
cmp
pop
loope
adc
ins
iret
xchg
mov
xchg
cmps
in
sub
cmc
xchg
mov
jbe
out
lock
std
xchg
or
std
js
mov
cs
cld
mov
imul
cmp
jbe
inc
or
fiadd
sub
iret
stos
push
or
mov
call
mov
movs
(bad)
lock
adc
push
cmp
ss
aaa
imul
mov
add
lods
retf
cdq
xlat
dec
inc
or
(bad)
icebp
sahf
(bad)
or
lock
mov
not
xor
sub
repz
jnp
add
fistp
jecxz
xor
add
cdq
retf
fistp
jo
mov
pop
sub
inc
pop
cmp
sub
push
lods
out
mov
xor
int
js
fs
rcr
pop
loop
aaa
gs
popf
push
jb
mov
icebp
sahf
call
cmp
push
or
dec
inc
repz
add
outs
sub
inc
hlt
mov
daa
sub
bound
div
je
daa
fs
iret
lea
jecxz
in
sub
adc
mov
lea
and
dec
add
fiadd
mov
push
fnstenv
cmp
add
cmps
pop
sub
mov
xchg
ror
adc
je
or
pop
sbb
push
mov
pop
(bad)
cwde
jmp
add
js
dec
sbb
push
cld
test
(bad)
mov
cmp
js
imul
inc
cmp
mov
pop
aaa
fcomp
mov
mov
ret
aas
jl
std
mov
call
retf
xchg
ins
dec
cmp
jg
sub
fiadd
push
repz
(bad)
lahf
fsubr
rcl
data16
and
push
sbb
movs
out
mov
stos
scas
mov
pop
add
sbb
pop
add
inc
xor
jb
inc
daa
push
bound
jns
ret
out
pop
test
call
pause
test
add
push
imul
add
mov
add
pop
lods
div
add
add
div
jecxz
dec
hlt
data16
dec
sub
push
xor
adc
or
mov
push
out
jns
pusha
(bad)
popf
sar
cmp
es
in
js
(bad)
ret
inc
in
xchg
jbe
retf
loope
sahf
(bad)
shl
fcmovbe
fdivr
jecxz
(bad)
jl
push
sbb
pop
mov
jge
std
in
sbb
sbb
sub
push
sub
loope
jecxz
adc
xchg
lods
sub
(bad)
(bad)
data16
cdq
retf
push
mov
rcl
cmp
gs
jne
jmp
mov
imul
jg
push
xchg
mov
popa
sbb
popa
and
cld
stos
loopne
jl
mov
add
jle
out
movs
dec
inc
sbb
dec
add
pop
jno
mov
push
aaa
test
push
adc
sub
add
add
dec
cmp
dec
fcom
jmp
imul
jo
sub
dec
into
dec
pop
sbb
dec
add
enter
lods
addr16
mov
mov
stc
call
(bad)
into
lods
bound
aaa
dec
lods
jmp
jp
inc
in
xlat
xchg
imul
iret
xchg
pop
cs
enter
aam
fcomp
adc
dec
sbb
push
xor
jle
ins
pop
push
push
call
add
cs
aam
mov
xor
xchg
sar
sub
dec
xor
(bad)
xchg
mov
inc
sbb
repz
mov
imul
js
(bad)
sahf
in
mov
and
into
xchg
out
sub
(bad)
xlat
test
movs
cld
inc
sbb
xchg
jb
jae
pop
cmp
sub
fadd
inc
inc
xor
sbb
cmps
in
sahf
fld
pop
jo
jns
fadd
std
fstp
shl
jns
je
and
mov
retf
call
sub
pushf
(bad)
cmp
mov
xchg
pop
add
mov
xchg
xchg
sahf
mov
push
xor
adc
mov
dec
iret
mov
pop
pop
cmps
repz
dec
out
(bad)
mov
mov
dec
pop
mov
std
mov
stos
mov
xlat
nop
pop
repnz
mov
stc
lea
ins
and
pop
xchg
enter
xor
pop
mov
cmp
add
lock
repnz
hlt
mov
test
sbb
push
mov
scas
sbb
or
and
mov
or
push
or
ficomp
ja
dec
push
not
add
(bad)
rol
add
loope
ins
in
mov
push
push
pop
dec
or
hlt
mov
jns
ror
inc
sub
or
sub
sbb
inc
mov
jecxz
and
nop
xlat
popf
jno
data16
push
push
and
dec
stc
popf
rcl
mov
ret
lock
cmp
push
scas
sbb
xchg
cld
mov
data16
inc
or
mov
jno
stos
retf
sbb
push
fwait
fwait
push
jle
arpl
bound
fwait
ret
dec
pop
out
sbb
jle
pusha
xlat
mov
dec
(bad)
jo
pop
push
imul
adc
mov
xchg
pop
xor
pop
cmp
into
mov
jno
out
popf
not
xlat
cdq
pop
sbb
dec
sub
mov
popf
test
fnstsw
in
cmc
test
jmp
in
cmps
retf
pop
push
cs
aam
xchg
out
mov
sahf
int3
(bad)
aad
gs
and
push
mov
data16
jae
fnstcw
aad
cmp
inc
cmp
ret
scas
cld
lea
inc
push
push
test
jmp
fst
push
rol
push
sbb
push
jbe
pop
or
inc
(bad)
retf
xchg
cli
cmp
pop
fs
sub
mov
movs
dec
add
out
std
sahf
inc
add
push
adc
clc
(bad)
aad
hlt
or
data16
cdq
retf
mov
scas
call
sbb
pop
inc
inc
dec
fnstsw
dec
test
jnp
fld
std
fistp
outs
sub
cmp
adc
jge
jo
das
push
and
aas
scas
in
jl
pop
pop
sbb
fimul
jbe
xchg
aad
jge
(bad)
mov
leave
pop
js
(bad)
ret
div
jle
cmp
mov
mov
adc
bound
iret
cwde
popf
sti
cdq
fisttp
inc
pop
add
adc
mov
xlat
mov
inc
add
rol
mov
test
mov
mov
nop
repz
mov
aam
icebp
test
dec
adc
aaa
cdq
fstp
jl
dec
or
push
push
sbb
lock
xor
pop
aam
mov
repnz
ret
jo
inc
adc
ins
add
or
jp
pop
jecxz
mov
retf
dec
or
sub
ror
jecxz
icebp
mov
mov
xor
xchg
loop
add
leave
cwde
retf
fistp
icebp
xchg
rcl
adc
adc
mov
shr
jbe
je
cmc
mov
ds
sbb
sub
pop
xor
addr16
daa
mov
fadd
mov
xchg
fimul
push
cmp
cli
mov
movs
cld
rol
jae
shr
push
jbe
shl
pop
stos
addr16
add
xor
jg
dec
mov
jne
imul
jb
icebp
loopne
call
ds
pop
mov
mov
pop
out
push
pop
dec
ja
je
scas
jmp
clc
test
scas
fmul
icebp
mov
push
jb
es
add
mov
sub
inc
inc
sbb
(bad)
retf
ror
jmp
ret
stos
sahf
(bad)
sbb
inc
sbb
std
ror
pushf
inc
loope
test
mov
inc
movs
(bad)
test
shr
test
test
rol
rcr
inc
pop
fsubr
jae
ficom
add
xchg
push
add
leave
cmp
enter
das
mov
movs
enter
mov
lds
repnz
retf
mov
jmp
fld
fisttp
mov
fwait
jmp
mov
xchg
aam
std
nop
sar
rcl
scas
ror
retf
mov
pushf
icebp
mov
xchg
enter
(bad)
pushf
hlt
mov
mov
scas
jmp
and
xchg
cmc
nop
ja
fbld
push
push
push
mov
sar
lods
sbb
xor
ret
inc
jb
dec
test
outs
adc
mov
mov
inc
outs
movs
adc
jmp
mov
test
cmp
mov
nop
push
inc
adc
fidiv
jnp
pop
test
fst
stc
aad
and
xchg
pusha
jl
add
pushf
cmovnp
aas
jl
sub
add
mov
dec
imul
pushf
mov
sbb
loopne
nop
mov
pop
pop
popa
outs
pop
adc
out
lods
jne
adc
call
or
into
in
xchg
lahf
and
cmps
in
ins
push
push
repz
scas
dec
ins
sub
aaa
stc
sbb
sbb
jnp
pop
mov
add
loop
out
cmp
mov
push
outs
inc
sub
jne
ss
cmp
cld
xor
cmp
mov
pop
jl
sub
out
mov
gs
or
jmp
rcl
popf
in
scas
jmp
mov
mov
xchg
cld
mov
hlt
or
dec
pusha
sub
scas
or
adc
sbb
mov
dec
sbb
jmp
js
and
add
sbb
and
fadd
xchg
jne
sti
nop
mov
js
push
scas
push
outs
xor
aaa
ins
add
cmovp
or
cdq
in
mov
fdivr
iret
scas
push
in
cld
mov
std
mov
fnstcw
lods
lock
lods
in
lods
sbb
jo
pop
sbb
jo
cwde
std
mov
xchg
ror
cld
mov
loope
iret
xor
out
mov
pop
push
in
div
jno
sub
push
es
fsub
cmp
rcl
xchg
dec
push
(bad)
fild
dec
and
push
cmp
icebp
movs
stc
daa
mov
stos
data16
dec
test
popf
loope
inc
push
push
mov
ficom
lods
inc
pop
pop
push
mov
pop
and
(bad)
mov
movs
lahf
xor
mov
lock
fld
(bad)
call
push
add
(bad)
addr16
or
cld
cmps
in
scas
cmp
xchg
outs
mov
jae
xor
sbb
cmp
jmp
inc
push
push
sbb
(bad)
mov
(bad)
sub
push
or
repnz
mov
inc
push
mov
ja
pusha
lock
ret
popf
std
and
adc
adc
add
stc
sub
int
mov
mov
cdq
push
arpl
mov
shl
sbb
imul
repz
cmp
rcr
into
fdivr
hlt
ret
sbb
call
jp
jmp
mov
push
push
push
pop
scas
add
mov
pop
dec
sbb
jg
inc
gs
jno
adc
aam
out
lahf
cs
sbb
xchg
stos
gs
hlt
mov
dec
mov
icebp
cmp
mov
sub
and
jge
jne
dec
cmc
pop
sbb
or
call
rol
test
sahf
fistp
sti
mov
mov
mov
nop
aam
cld
nop
sar
rcl
clc
xchg
sbb
jnp
dec
adc
inc
and
add
imul
sub
sub
jo
js
push
or
jne
pop
adc
cdq
jmp
std
mov
test
xchg
in
dec
inc
pop
inc
xchg
pop
push
cmp
in
mov
dec
jne
inc
mov
lock
cld
sub
dec
mov
push
xor
outs
cmp
sbb
rcl
int
sub
add
mov
adc
or
pop
daa
jle
add
adc
sub
jae
sbb
loopne
fcomp
vaddsubps
cmp
rol
adc
sbb
retf
fcomp
sbb
shl
lahf
push
jne
jecxz
test
mov
and
cmovno
repz
scas
(bad)
pop
pop
push
cmp
leave
in
clc
mov
xor
icebp
test
mov
dec
stos
dec
push
adc
loopne
(bad)
(bad)
in
sbb
push
inc
add
xchg
mov
loop
mov
mov
jp
or
iret
or
push
xor
cmc
xlat
pushf
pushf
pop
xor
aaa
call
adc
xor
push
daa
arpl
or
add
mov
cmp
(bad)
sbb
aas
push
es
sbb
fisttp
sbb
es
(bad)
mov
sbb
or
mov
mov
sahf
jmp
aam
push
and
mov
and
sbb
pushf
fiadd
sar
sub
sub
sbb
mov
sub
jae
dec
add
sub
sbb
ins
adc
pop
pop
jle
pop
push
push
add
jb
jae
jb
push
and
inc
add
outs
ds
push
cmp
sub
pop
adc
inc
cmp
ins
sub
cmp
sbb
cmps
in
mov
fdiv
push
pop
add
inc
xchg
cmp
cdq
leave
outs
lods
cs
cld
sti
mov
dec
xchg
dec
add
leave
rol
ret
in
mov
sar
stos
neg
cwde
jns
pop
or
outs
pop
add
nop
into
lods
jge
cmp
ss
mov
daa
cmp
dec
jno
push
sbb
jae
ja
jmp
jb
push
mov
and
fdivr
ins
xor
xor
fidivr
xchg
dec
jb
sub
and
jmp
mov
ja
sub
push
xchg
rcl
and
jno
je
xchg
xchg
int
iret
and
addr16
outs
lahf
out
loope
add
inc
popa
sub
in
ds
push
cld
mov
ins
lahf
shl
adc
(bad)
push
fistp
dec
xor
pop
push
dec
jne
jne
mov
scas
int3
mov
add
cmp
cli
outs
mov
dec
loopne
mov
test
retf
xchg
add
aam
and
and
add
(bad)
lods
jmp
push
mov
mov
loopne
jb
arpl
adc
or
mov
mov
scas
add
popf
inc
call
mov
jns
out
stc
lahf
sar
inc
cmp
or
or
xchg
mov
rcl
mov
and
inc
or
sbb
cmp
sub
pop
mov
push
add
mov
retf
fisubr
ss
sub
fstp
(bad)
and
stos
loope
ret
mov
scas
fistp
test
xlat
mov
mov
xchg
out
cli
mov
mov
rcr
mov
loope
xchg
sti
(bad)
int
out
aam
std
mov
iret
les
(bad)
retf
or
ret
push
rol
xchg
mov
inc
cs
jne
add
fdiv
cmps
inc
push
cmp
push
jae
pop
ins
cmp
inc
sbb
hlt
mov
xlat
sub
pop
jecxz
mov
and
cmc
mov
xchg
leave
or
sbb
loopne
xchg
push
dec
xor
mov
mov
mov
push
adc
enter
fwait
aam
arpl
pop
mov
popf
dec
aas
pop
mov
mov
aad
jl
and
(bad)
enter
mov
dec
sbb
jmp
enter
sub
and
iret
(bad)
int
test
call
pushf
shr
push
mov
adc
imul
fwait
mov
imul
or
dec
ins
dec
push
ja
icebp
xchg
mul
enter
stos
test
jge
cmp
cmp
lods
jae
cmc
inc
sub
ja
aas
data16
out
jl
dec
pminsw
cld
mov
loope
fstp
movs
inc
and
(bad)
fst
movs
es
pop
jae
push
mov
scas
xor
repz
(bad)
out
fidivr
mov
push
and
lods
call
sbb
add
gs
cmp
mov
push
or
sub
inc
pop
rol
mov
and
dec
or
imul
pop
in
sub
fistp
pop
sbb
push
idiv
cdq
bound
fist
and
sti
xchg
sbb
dec
or
jb
pop
aaa
jp
arpl
push
adc
push
push
pop
xor
pop
outs
push
jns
pusha
and
or
ins
sub
pop
cmp
pop
or
dec
or
pop
pop
push
dec
das
arpl
add
push
push
push
jne
cmp
std
mov
push
rol
lahf
pop
jbe
and
cmc
xchg
mov
xchg
dec
setns
pop
and
ins
mov
cmc
mov
dec
mov
stos
adc
xor
leave
daa
xchg
ret
and
retf
leave
mov
imul
int3
sahf
jb
push
adc
push
dec
and
sub
xchg
sbb
lock
mov
pop
and
shr
mov
mov
xor
jge
out
(bad)
cmps
cdq
add
and
push
mov
cdq
mov
aam
xor
mov
mov
mov
sbb
push
call
jecxz
ins
push
dec
mov
pop
div
xchg
sub
add
stos
cmp
js
ins
add
xchg
mov
sar
retf
nop
and
inc
mov
test
sub
sti
in
mov
je
lock
pushf
fiadd
pop
adc
cli
ror
cmps
add
sbb
iret
pop
ins
pop
or
aad
mov
inc
jp
adc
int
bound
pop
out
lods
into
and
loopne
mov
mov
je
or
push
xchg
(bad)
dec
bound
push
call
test
jle
sar
mov
push
xchg
adc
icebp
mov
mov
rol
mov
mov
fld
xor
cmp
mov
mov
adc
ror
dec
sbb
hlt
fnstenv
pop
xor
js
dec
lods
dec
cs
cs
pop
or
ins
dec
add
push
push
js
jge
jl
jns
inc
sbb
pop
add
push
xor
jns
cdq
std
mov
jecxz
stc
mov
mov
mov
pushf
rol
retf
mov
mov
mov
loope
(bad)
mov
push
inc
or
push
sahf
test
xchg
neg
out
pushf
mov
mov
movs
inc
and
mov
push
sbb
mov
bound
or
jmp
dec
cmps
adc
pop
clc
mov
cmp
sbb
scas
loopne
xchg
jecxz
jo
push
adc
cld
mov
scas
jle
rcl
iret
xchg
push
pop
cs
mov
into
xor
pushf
cmc
test
rcr
mov
push
jb
sub
out
or
in
nop
push
jbe
xor
adc
retf
push
adc
leave
in
push
adc
push
cmp
loope
aam
xchg
pop
dec
sub
aad
sub
jno
add
shl
pop
std
cs
mov
push
jg
fiadd
lds
cmp
(bad)
mov
movs
cdq
pop
push
movs
fidiv
mov
jmp
jne
add
fs
scas
sbb
stos
dec
jne
pop
mov
xchg
les
xor
repnz
xchg
mov
mov
imul
or
adc
loopne
mov
pop
pop
cmp
fild
mov
dec
dec
and
adc
int3
xchg
or
sub
out
iret
add
or
fisub
pop
inc
mov
lahf
jmp
or
(bad)
mov
ror
test
ja
push
ja
sti
lds
xor
gs
xchg
push
jb
dec
mov
add
cmp
xor
jo
ins
xor
jge
js
bound
push
adc
dec
add
sub
pop
adc
jle
outs
cmovae
xor
jo
pusha
sub
push
or
addr16
or
pusha
and
sahf
std
mov
sub
in
or
pop
test
addr16
lock
test
in
jmp
fs
cdq
fs
pushf
les
mov
lods
sahf
pop
dec
sub
xchg
push
inc
add
xchg
or
in
adc
cmp
cmc
enter
and
adc
(bad)
cld
cmp
push
push
stos
add
in
loopne
shl
stc
call
cdq
in
dec
inc
or
test
xchg
fistp
push
push
fcmovnbe
mov
stos
push
push
inc
sbb
pop
outs
pmulhw
int
jo
and
sbb
xor
mov
sub
bnd
addr16
lds
arpl
iret
mov
jmp
mov
xor
sub
adc
inc
sbb
retf
mov
xchg
push
or
into
repnz
daa
xchg
aam
and
imul
add
in
mov
jg
push
adc
xchg
cwde
jo
dec
lods
inc
xor
mov
jne
pop
cmps
jmp
mov
or
rcl
cmp
mov
dec
pusha
inc
pop
enter
mov
dec
and
ror
fisttp
inc
push
daa
ret
iret
xchg
mov
jp
cmp
xor
jle
cmp
inc
fcom
pop
sbb
dec
mov
jmp
xchg
out
aam
mov
xor
pop
imul
mov
sub
adc
dec
test
arpl
or
int3
mov
and
mov
dec
mov
stos
jno
loope
jbe
out
mov
icebp
daa
fdivr
mov
cli
lahf
ficomp
mov
div
hlt
mov
mov
test
out
in
test
xchg
shl
jecxz
aam
(bad)
push
mov
es
xlat
add
xor
sti
in
mov
ja
popa
rcr
xchg
hlt
sub
imul
test
add
mov
adc
dec
add
test
inc
pop
and
loop
iret
xor
daa
ins
add
jmp
mov
js
and
fsubr
mov
pop
push
add
aas
outs
movhps
mov
dec
inc
pop
add
hlt
shl
cmp
mov
dec
cmp
mul
jmp
(bad)
daa
shr
cmps
dec
fwait
retf
inc
stos
aas
js
sub
pusha
mov
or
test
stos
enter
mov
int
loopne
or
aaa
ja
leave
sti
mov
add
mov
daa
pop
test
jg
ja
adc
stos
enter
movs
daa
ins
xor
add
fstp
scas
jmp
add
push
jl
pavgw
sbb
popf
rcr
rol
mov
cmp
add
sar
cmp
in
inc
bound
test
push
jmp
mov
dec
xchg
adc
push
mov
gs
adc
and
repnz
mov
das
pushf
fidivr
sbb
setns
daa
stos
idiv
movs
or
adc
dec
mov
icebp
mov
push
inc
or
fldcw
cmp
test
pop
xor
(bad)
xchg
sbb
retf
setno
cmps
jp
add
iret
mov
xchg
push
jns
cmp
mul
push
movs
popa
add
or
(bad)
xchg
repz
out
push
rcl
xor
push
xor
addr16
push
push
ja
push
or
pop
pop
js
inc
xor
das
jl
push
sbb
cmp
dec
sub
cmp
push
and
xor
inc
push
pop
add
outs
jae
sub
sbb
add
shr
mov
push
xchg
dec
pop
aaa
out
ins
icebp
leave
ficomp
imul
popa
test
cmps
aam
(bad)
retf
mov
mov
mov
mov
cmp
xor
mul
dec
sub
mov
inc
sub
out
shl
cmp
jge
loopne
cmps
(bad)
dec
push
add
cld
lods
hlt
and
dec
sub
mov
cmps
xchg
sub
ror
div
add
scas
fisttp
inc
push
and
xlat
fwait
mov
jne
sbb
call
sahf
cmp
ins
xor
int3
mov
mov
enter
popa
cmp
ficomp
jle
push
(bad)
dec
test
and
in
enter
icebp
aas
cmc
test
mov
xchg
lods
pop
push
or
icebp
movs
sbb
loope
rcl
mov
jno
sub
mov
lock
mov
sub
push
(bad)
sbb
pop
mov
dec
xchg
adc
sbb
ficom
sub
hlt
scas
mov
fcmovbe
nop
cmp
add
clc
mov
clc
sbb
outs
lds
mov
ja
out
mov
stc
fisub
pop
dec
add
loopne
shl
sub
test
push
fimul
retf
mov
xor
pop
cmp
stos
out
(bad)
popf
out
lods
sbb
fcom
xchg
sahf
sub
gs
adc
push
mov
addr16
das
pop
add
rol
mov
pop
aas
pop
sbb
push
or
dec
adc
sbb
jbe
push
adc
jge
push
ss
jg
fs
cdq
fld
mov
fidivr
push
jl
pop
or
out
push
je
or
retf
arpl
xchg
sar
fwait
xlat
cmps
ins
jl
sbb
(bad)
stos
out
pop
sub
pop
imul
cmp
xor
push
dec
aas
dec
mov
inc
and
sub
jae
test
out
mov
cdq
or
stc
mov
push
add
(bad)
rcl
mov
push
ss
lods
loope
jg
or
cmps
add
out
popf
loop
nop
xor
add
scas
jmp
pop
fs
add
adc
adc
jmp
mov
out
or
pop
lock
or
je
or
repnz
add
lods
or
push
xor
and
push
add
and
mov
int
test
xchg
mov
mov
test
dec
cmp
xchg
mov
pusha
shl
push
push
jl
xor
pop
sub
add
int3
xchg
xchg
pop
xor
mov
shl
jae
(bad)
ins
lahf
and
sub
cmp
ds
arpl
(bad)
sahf
movs
push
pop
cmp
rcl
nop
mov
sub
cli
(bad)
mov
xor
aad
js
sbb
in
xor
sub
in
lahf
out
gs
aas
jg
ds
sub
jo
jecxz
mov
mov
sub
push
push
adc
repnz
fsub
hlt
mov
aam
sbb
out
(bad)
ds
stos
call
fbstp
arpl
mov
jo
cmp
mov
push
out
and
xchg
sti
push
pop
mov
(bad)
xor
add
sbb
inc
and
sub
outs
and
ret
mov
mov
mov
mov
mov
cmovg
pop
ds
push
pop
dec
and
dec
sub
pusha
add
ins
push
pop
imul
fucomp
lods
stos
dec
ja
and
add
pop
test
mov
pusha
pop
mov
imul
bound
push
xor
add
rol
push
add
mov
pop
std
cwde
fild
fild
pusha
das
arpl
xor
push
adc
xchg
mov
movs
loop
leave
ror
adc
push
cmp
mov
iret
scas
fistp
int3
mov
pushf
mov
lods
loop
pop
gs
es
dec
adc
and
nop
fisttp
je
ins
repnz
aam
rcl
sub
call
lds
pop
nop
clc
and
sti
nop
fiadd
es
add
inc
es
push
add
ds
inc
sbb
sbb
jg
mov
jnp
ins
andnps
pushw
inc
adc
push
sbb
jg
jne
retf
sahf
retf
inc
daa
sub
pop
cmp
push
shl
ret
mov
pushf
std
xor
pop
or
mov
jmp
lods
out
idiv
out
mov
cdq
lods
cmc
addr16
and
push
pop
dec
jecxz
and
ja
imul
xlat
fwait
push
out
(bad)
std
xchg
push
jmp
sub
retf
nop
mov
and
out
cwde
ror
enter
adc
sub
push
push
into
mov
mov
xchg
inc
popf
ret
sbb
pop
jle
jl
test
popf
cli
inc
hlt
mov
mov
test
mov
mov
jmp
push
ins
aas
and
ficom
ss
pop
sbb
xchg
push
pop
or
imul
hlt
push
imul
inc
sbb
retf
addr16
ja
push
jb
jmp
push
pop
sub
cmp
mov
sahf
repz
push
pop
out
sti
mov
lahf
cmps
jb
pop
sub
shl
push
xchg
sar
addr16
inc
sub
sti
mov
xchg
aad
hlt
mov
fldenv
imul
sahf
mov
jmp
sti
ss
(bad)
mov
push
mov
divps
stos
and
pop
repnz
push
or
leave
mov
popf
fmul
push
mov
int
fisub
stos
retf
test
jg
add
jg
sub
dec
push
aaa
fldenv
push
(bad)
sahf
push
add
stos
rol
ret
jne
imul
aad
push
add
and
shl
cmp
xor
aas
sti
push
adc
or
add
cmp
and
push
daa
jbe
pop
out
and
test
mov
fild
lahf
mov
add
inc
cmp
out
lods
aam
loop
imul
ret
nop
ret
fs
loopne
mov
sahf
pop
sbb
pop
sub
cmp
add
dec
adc
repz
loop
les
sub
mov
test
das
ja
cs
out
daa
push
sbb
aas
pop
sbb
xor
call
je
test
mov
pushf
les
aaa
inc
add
sub
mov
daa
and
mov
in
mov
test
push
sbb
xchg
mov
push
ss
(bad)
cld
movs
xchg
je
xchg
mov
fwait
jg
ficomp
sub
and
imul
sbb
fld
ret
jnp
push
aad
loopne
lock
cmps
aam
mov
mov
nop
fidiv
movs
movs
ret
jne
jnp
mov
sub
adc
push
cmp
in
mov
inc
add
sub
push
pop
dec
repnz
jp
js
jle
dec
jl
pop
sbb
cli
xchg
popa
and
repz
lahf
cwde
cmps
aam
push
add
mov
mov
lock
pop
cmp
ret
jbe
dec
sbb
mov
mov
or
adc
push
push
sbb
pusha
das
jge
fs
retf
xchg
bound
push
popf
les
rcr
jle
jle
and
in
sahf
mov
lods
push
sbb
jns
and
into
mov
sahf
inc
sbb
adc
jnp
into
mov
addr16
and
cmp
es
xor
push
pop
jb
and
inc
ds
or
mov
xor
jns
ret
dec
aaa
loopne
pop
ss
adc
out
ds
pusha
sub
push
(bad)
lods
call
sub
jb
stos
cmps
ret
add
bound
push
pop
es
pop
lods
les
pop
adc
jp
dec
adc
lahf
cli
mov
add
sbb
push
in
mov
jp
imul
daa
pusha
sub
or
pop
mov
xchg
lods
int3
jo
ds
jmp
xchg
rcr
ins
cs
xchg
jns
fsubr
sahf
fisttp
data16
movs
out
mov
iret
mov
cli
mov
jmp
sub
sbb
add
imul
xchg
fsub
adc
lahf
xchg
cli
mov
cwde
jmp
test
xor
push
in
loopne
mov
cmp
ret
pop
xor
jb
or
cmp
pop
pushf
lds
jl
pop
xor
clc
scas
in
test
jp
xor
and
xor
imul
add
retf
mov
push
pop
jmp
int3
inc
or
stos
call
sbb
pop
add
inc
or
jno
ret
xchg
rcr
inc
xor
and
pusha
add
mov
add
push
cmovns
test
sbb
ja
ins
pushf
fadd
jl
add
in
movs
jns
cmps
dec
cmp
das
sbb
jecxz
int3
xor
pushf
cmps
sar
rcl
sub
pop
pop
push
xchg
sti
pusha
es
jns
sar
cs
and
mov
xlat
fidivr
dec
or
xchg
fisubr
inc
punpckldq
push
adc
pop
and
add
lods
int
fwait
ins
sbb
cmc
mov
mov
adc
and
add
mov
das
inc
push
dec
push
out
cmc
mov
mov
add
jae
inc
pop
add
mov
mov
sub
adc
xchg
aad
in
and
cmp
mov
dec
jmp
ficom
mov
imul
and
push
adc
or
inc
sbb
test
cmps
hlt
popf
fcom
pop
add
test
xchg
ins
gs
adc
jle
xchg
cld
mov
in
out
ficom
mov
arpl
pop
scas
les
ins
adc
and
lods
jmp
rcl
xchg
ret
xchg
cli
cwde
lds
and
dec
push
pop
cmp
cs
jp
or
jbe
jb
inc
out
push
pop
push
loopne
xchg
addr16
and
pop
bnd
cs
and
sub
clc
mov
jle
push
outs
sbb
pop
or
je
cmp
out
sar
stc
mov
mov
test
and
xor
pop
sbb
or
arpl
jnp
dec
mov
jae
ja
pop
je
jne
push
test
xor
mov
aas
data16
jle
dec
adc
xchg
pop
add
das
push
jp
add
dec
sub
add
push
and
xor
stc
push
inc
adc
xchg
jne
cmp
mov
push
clc
mov
retf
mov
jg
lods
jmp
mov
jp
es
loope
mov
ret
cdq
rcl
fistp
pop
sbb
push
inc
sub
push
adc
mov
sub
repz
outs
idiv
fmul
hlt
cmps
out
jne
jb
js
sub
jne
cmp
mov
jmp
cmp
xchg
fs
pop
iret
xchg
icebp
mov
and
inc
or
mov
stos
hlt
xchg
xor
lds
cmp
ds
xor
xor
and
dec
sahf
mov
nop
lds
pop
loop
dec
xor
dec
or
adc
mov
lods
xlat
xor
add
call
dec
adc
or
jge
jae
data16
sar
jle
jp
jbe
and
ja
push
clc
fwait
pop
out
(bad)
std
xchg
sub
retf
mov
and
dec
rcpps
adc
dec
add
mov
aad
cs
push
pop
add
cmp
outs
xor
and
add
mov
hlt
mov
dec
adc
or
pop
rcr
inc
andnps
imul
pop
imul
lods
cmps
in
scas
cli
mov
loop
fstp
inc
or
jb
inc
fistp
ret
mov
ja
inc
cld
xlat
mov
popf
inc
pop
dec
sub
gs
pop
ss
in
scas
mov
ret
(bad)
in
cdq
cmps
into
popf
movs
mov
(bad)
inc
push
push
pop
(bad)
js
pop
sbb
push
inc
or
imul
fstp
mov
xchg
mov
inc
pop
dec
add
sbb
in
or
jnp
jae
inc
out
cld
mov
data16
sbb
and
inc
pop
sbb
dec
add
adc
jnp
jno
inc
adc
push
imul
sub
frstor
je
xchg
xor
fcomp
scas
(bad)
xchg
sti
pushf
add
or
int
loop
out
lds
cli
ins
cmps
loopne
lock
jmp
xor
stos
std
test
scas
fst
mul
cmp
jae
retf
adc
repz
ds
sub
xchg
mov
lahf
stos
aad
add
in
dec
dec
or
in
icebp
cdq
cwde
add
sub
dec
out
mov
pop
aam
in
mov
cmps
in
xchg
adc
and
cld
jb
push
sbb
cmp
pop
or
add
cdq
cmc
test
outs
sbb
sub
sbb
push
cli
cwde
retf
imul
xchg
out
jmp
mov
inc
sbb
mov
cmp
imul
push
xlat
cwde
movs
cmps
inc
adc
lock
fnstenv
jmp
and
inc
push
les
push
add
jbe
ja
push
and
loope
ror
inc
pop
jb
xchg
movs
out
int3
pop
pop
cmp
sbb
pop
test
or
rcr
in
mov
jae
dec
mov
push
sub
std
xchg
aad
(bad)
ds
xchg
movs
mov
ss
or
push
icebp
mov
adc
fsubr
xor
mov
mov
lock
enter
add
aam
repz
fiadd
mov
xchg
cmc
xchg
scas
fadd
jne
adc
cmps
xlat
nop
leave
cmp
add
clc
add
mov
mov
mov
je
dec
sbb
in
mov
xchg
test
and
stos
fadd
sbb
adc
outs
scas
mov
mov
push
adc
ror
fldenv
jbe
push
push
xor
je
pop
sbb
mov
outs
adc
pop
pop
aas
jo
test
popf
int3
call
mov
das
and
stc
and
lds
into
mov
popf
pop
jmp
sahf
inc
push
push
sbb
and
adc
sti
fs
jle
cmp
std
(bad)
retf
(bad)
cld
mov
movs
out
mov
jmp
pop
aas
daa
ja
inc
adc
inc
cmp
daa
ds
adc
ja
dec
sbb
loope
lds
mov
test
pop
or
aaa
inc
shl
push
pop
mov
(bad)
(bad)
or
int
fisttp
mov
shl
call
scas
fadd
(bad)
xchg
mov
loopne
div
dec
or
sub
mov
jnp
mov
or
ret
repz
dec
or
aas
dec
adc
addr16
or
add
sbb
cmp
jo
scas
call
inc
add
inc
adc
sbb
push
cmp
cmp
sub
add
mov
mov
push
out
jp
sub
xchg
(bad)
(bad)
jb
push
cmp
sub
pop
mov
test
push
or
mov
mov
jle
dec
cli
mov
cdq
mov
mov
sub
adc
and
bound
jp
push
stos
ret
mov
(bad)
sti
sub
call
dec
adc
mov
ret
inc
add
lods
sar
fs
xor
adc
div
nop
and
dec
or
pop
sahf
fidiv
lock
mov
cld
fs
jb
jp
inc
adc
loop
xchg
mov
inc
out
loope
(bad)
ins
hlt
xchg
lds
jno
into
xchg
in
lock
scas
in
jne
push
sbb
sbb
push
loopne
sti
arpl
dec
or
push
add
jno
push
xchg
xchg
xor
pop
sbb
popf
sar
jno
sub
xor
mov
mov
test
fwait
iret
call
popf
ret
mov
scas
jmp
ins
sbb
sub
sti
fwait
stc
mov
xchg
mov
xchg
mov
mov
xchg
jp
(bad)
out
xchg
iret
mov
dec
xor
arpl
inc
rcl
mov
cwde
add
hlt
cwde
xchg
mov
outs
cmp
pop
out
push
aas
dec
mov
outs
sub
add
imul
mov
nop
fbstp
int
pop
push
ss
fcom
jns
div
push
scas
mov
mov
sub
dec
cmp
fild
xchg
mov
test
push
sub
inc
and
test
ret
movs
jo
push
adc
sbb
push
pop
inc
or
mov
cmp
push
and
cmps
jmp
adc
push
pop
out
in
mov
aaa
jo
push
adc
jecxz
and
xor
cli
mov
sub
sbb
jmp
xchg
aad
cmc
movs
fwait
movs
into
mov
(bad)
retf
dec
or
ins
cs
test
mov
stos
fiadd
div
inc
xor
pusha
add
and
cmp
mov
push
push
cmp
jg
imul
sub
daa
inc
adc
push
adc
add
cs
fild
or
and
nop
cli
jae
or
pop
hlt
mov
stc
mov
xchg
rcr
add
inc
sub
jg
sub
dec
mov
pop
dec
in
jbe
mov
mov
push
loop
cli
xchg
jp
add
or
sub
fadd
xchg
inc
ror
in
jge
int
cli
xchg
iret
cdq
imul
add
dec
pop
jge
ja
fbld
imul
std
xor
push
ds
jns
shr
inc
out
and
jp
popa
mov
xchg
lods
loope
jmp
movs
in
stos
jmp
xor
pop
inc
nop
mov
loope
inc
sbb
retf
mov
pushf
lds
ins
mov
mov
dec
push
imul
xor
or
out
xchg
xchg
shl
ret
sub
sub
test
mov
shl
fsubr
bound
jp
mov
popa
iret
(bad)
out
xchg
test
xor
fistp
jbe
dec
sub
mov
bound
call
stos
fnstcw
jne
ins
or
pop
rol
pop
dec
or
shl
xor
js
jle
jle
xor
dec
fnstsw
inc
punpckhwd
cmp
enter
rol
mov
test
cmp
pop
lds
xchg
fidiv
mov
mov
mov
das
ins
in
lds
shl
test
jge
das
pop
or
pop
cmp
mov
retf
add
jnp
lods
out
arpl
xor
sti
inc
or
jg
xor
fs
xor
pop
mov
out
enter
fst
inc
sub
movs
in
mov
or
mov
xlat
cwde
movs
cli
jmp
icebp
call
add
clc
test
mov
or
sbb
and
adc
push
int
out
mov
in
push
daa
inc
push
pop
stos
pushf
fcomp
ret
lods
leave
xchg
jae
lds
push
wrmsr
pop
pop
lock
xchg
jmp
addr16
scas
dec
pop
inc
or
push
or
out
(bad)
mov
loop
fdiv
in
mov
ret
es
add
lahf
jne
fwait
call
dec
push
pop
cmp
add
sbb
adc
pop
mov
push
add
sar
adc
mov
or
add
pusha
sub
or
ins
add
mov
sbb
rol
dec
jecxz
push
or
sbb
ret
add
cmp
add
and
dec
push
inc
out
inc
adc
loop
int
stc
adc
sub
adc
mov
mov
scas
mov
call
mov
add
in
stc
gs
jb
dec
sbb
popa
mov
mov
cs
mov
cmps
jmp
sti
push
dec
inc
sbb
inc
xchg
stos
test
adc
dec
cmp
fadd
mov
loopne
popf
out
popf
lods
stc
mov
outs
pop
sub
fsubr
inc
or
ret
(bad)
aam
call
pop
jl
and
xor
(bad)
popf
jg
jle
inc
cmp
(bad)
aad
frstor
jg
xor
daa
popa
aaa
inc
add
inc
loop
fdivr
icebp
mov
mov
nop
mov
pop
inc
sub
fild
cmps
lods
cld
mov
mov
or
xor
push
xor
cmc
and
loop
mov
cli
mov
dec
adc
jne
and
out
imul
out
mov
add
push
mov
cld
sahf
scas
fisubr
ins
cmp
ins
and
scas
movs
addr16
or
dec
sbb
jnp
lahf
cmps
loope
xchg
push
adc
xchg
stc
mov
xchg
fsubr
ins
add
push
cwde
ret
imul
jge
inc
add
mov
jbe
imul
push
lea
dec
scas
shl
mov
mov
stos
(bad)
mov
test
cmp
push
add
or
daa
dec
mov
scas
mov
fsubr
add
lods
jecxz
lds
outs
ss
jo
je
cld
(bad)
scas
pushf
cmps
inc
add
push
adc
dec
or
js
ret
das
jge
push
stc
cmps
lds
mov
fcomp
and
stos
sub
test
cmp
pop
xchg
mov
sar
xchg
test
or
sub
and
jl
pop
call
aad
sti
pusha
or
das
jbe
xchg
push
cmps
rcl
pop
adc
inc
add
jo
jecxz
leave
mov
or
loopne
addr16
(bad)
ds
mov
outs
fld
sbb
sbb
lds
enter
push
das
pop
sbb
sub
sub
xor
add
add
popf
cmps
(bad)
xchg
xchg
mov
jg
jp
and
pop
adc
dec
mov
popf
dec
pop
in
mov
outs
sbb
and
jg
and
add
dec
cmp
inc
fmul
xchg
popa
adc
xor
dec
mov
and
xchg
not
jle
and
sbb
jb
sub
push
leave
xchg
movs
leavew
mov
pushf
mov
adc
xor
call
into
lods
inc
jns
rcl
(bad)
(bad)
mov
sub
push
sub
sbb
loop
shl
rcl
fadd
repz
jmp
push
test
imul
and
inc
or
pop
pop
je
sub
popa
shl
es
sbb
pop
adc
push
push
or
xchg
into
lea
jp
test
mov
mov
out
test
jecxz
clc
mov
sub
pop
xlat
mov
rol
mov
fld
out
fst
(bad)
out
mov
mov
lods
(bad)
pop
sbb
cmps
ret
mov
mov
aad
aam
add
sub
inc
(bad)
xor
pop
into
jle
add
movs
jmp
retf
sbb
nop
(bad)
addr16
jno
push
cld
mov
mov
out
mov
pushf
test
mov
mov
fwait
lea
jno
pop
adc
int3
scas
std
test
cmp
jae
and
(bad)
dec
movs
test
jp
xor
out
pop
jmp
stos
jmp
mov
je
add
pop
jmp
xor
popf
les
fisub
push
js
push
or
movs
in
push
es
or
call
imul
jo
xor
mov
ja
fnstsw
cpuid
jecxz
neg
outs
and
push
push
outs
bound
push
js
or
outs
pop
int
cld
mov
mov
add
push
nop
fnsave
outs
add
ret
mov
gs
in
hlt
mov
dec
dec
or
mov
fadd
sub
les
retf
mov
cmp
stc
scas
(bad)
aas
adc
mov
or
clc
lods
shl
in
jp
cmp
sub
aaa
push
or
in
retf
xor
or
fwait
sti
mov
rcl
lahf
(bad)
mov
out
(bad)
mov
fadd
cs
xor
sbb
adc
lahf
adc
add
sub
or
call
movs
push
xor
into
mov
sbb
push
mov
iret
and
jge
je
cmps
pcmpeqw
das
xchg
shl
call
rol
lods
jmp
pop
sbb
not
or
xor
pop
imul
cmps
sbb
xor
fild
sub
adc
icebp
(bad)
(bad)
icebp
and
popa
and
cmc
xlat
mov
mov
sbb
pop
cmps
icebp
xchg
ja
loopne
jae
fsubr
rol
push
push
and
sqrtps
cmps
adc
fsubr
loope
push
add
mov
sbb
sub
cwde
inc
and
dec
test
xor
sbb
gs
icebp
stos
addr16
sbb
lods
dec
dec
add
mov
(bad)
xchg
pushf
pop
pop
aas
xor
xlat
out
scas
lods
jns
rol
and
pop
xchg
in
jb
push
mov
lods
ret
inc
and
lds
mov
add
and
sub
call
mov
inc
pop
or
mov
call
cdq
ror
mov
mov
pop
mov
inc
movs
pop
push
or
mov
jno
or
cdq
mov
cmp
mov
pop
out
mov
es
stos
dec
das
popa
xor
enter
xchg
shl
xchg
shl
enter
pop
xchg
in
movs
jno
cmp
push
inc
pop
test
jp
call
mov
not
jb
out
mov
or
sub
mov
fdiv
fistp
mov
and
pop
sbb
por
(bad)
out
fnstsw
icebp
leave
test
sbb
mov
lods
jno
xor
mov
dec
test
js
cmps
div
push
lahf
in
mov
mov
add
les
inc
cmp
(bad)
mov
jmp
imul
xor
shr
(bad)
jnp
out
nop
clc
and
ds
pushf
idiv
push
(bad)
into
mov
sbb
pop
test
ror
push
repnz
fisub
(bad)
sahf
inc
dec
cs
fxam
(bad)
mov
inc
f2xm1
mov
pop
ins
sub
js
bound
dec
add
dec
imul
mov
(bad)
in
mov
xchg
add
push
jbe
cmp
pop
add
xor
adc
imul
fmulp
xchg
mov
or
jmp
data16
(bad)
shl
xor
outs
sub
mov
xor
mov
mov
sbb
and
sub
mov
and
nop
sbb
aam
sbb
(bad)
fstp
add
pop
dec
and
rcl
es
jb
arpl
movs
daa
inc
out
in
scas
fidivr
mov
jl
pop
sbb
movs
(bad)
dec
push
clc
mov
inc
jne
movs
and
daa
push
fucom
mov
and
push
es
test
xchg
or
(bad)
mov
cmp
loop
jbe
push
push
cmps
add
push
loope
mov
add
in
xlat
pop
bound
clc
lea
(bad)
xchg
jae
fisubr
push
adc
fstp
xor
inc
(bad)
in
clc
mov
mov
fcomp
xor
out
lods
ins
popf
(bad)
xchg
pop
push
sub
push
gs
mov
mov
push
sbb
ficomp
or
int
les
jge
fs
test
mov
dec
(bad)
rol
fs
je
sub
xchg
div
mov
inc
adc
in
mov
xor
iret
mov
or
je
adc
out
cld
fnstsw
and
test
scas
jo
das
arpl
retf
or
imul
scas
jmp
jl
popf
ror
or
lahf
add
or
ret
xchg
dec
cmp
lahf
fcom
push
pop
mov
call
jno
pusha
(bad)
std
add
cmps
sbb
aas
jne
xchg
mov
jmp
mov
sti
movs
loop
es
cmps
dec
imul
inc
mov
sbb
loopne
jecxz
cwde
add
push
test
mov
cmp
xor
add
push
pushf
add
add
mov
nop
jecxz
inc
cwde
fimul
stos
dec
and
xchg
stc
xchg
repnz
inc
push
gs
jle
mov
stos
call
(bad)
mov
lods
xor
shl
push
push
dec
bound
jno
icebp
mov
rcl
leave
ret
ret
div
mov
in
mov
adc
repz
sbb
mov
adc
push
repz
xchg
hlt
pusha
xor
bound
push
adc
pop
cwde
fiadd
(bad)
aad
ret
sub
add
in
mov
test
mov
jo
in
fisub
sbb
jecxz
pop
adc
cmp
add
mov
rcl
imul
ficomp
pop
and
(bad)
add
pop
push
loopne
lods
in
mov
push
xor
mov
stos
repnz
dec
mov
mov
sbb
adc
(bad)
mov
inc
fwait
or
std
fmul
dec
lods
xor
das
or
or
scas
cmp
cmp
call
(bad)
xchg
push
and
or
fidivr
js
or
push
jl
out
xchg
fisubr
mov
mov
mov
mov
mov
cli
rol
add
ja
ror
jmp
mov
xlat
ficom
aad
(bad)
retf
out
xchg
push
dec
cmp
jne
or
push
pop
imul
push
scas
push
push
add
sub
loop
or
gs
icebp
fst
xchg
inc
mov
adc
retf
cli
mov
test
cs
sbb
sbb
out
mov
add
aam
xchg
jle
daa
push
mov
popa
and
cmp
jmp
mov
not
and
imul
mov
call
in
mov
xchg
sbb
and
mov
add
rol
mov
sub
movs
cmp
das
sbb
test
xor
bound
scas
cmp
test
fsub
lods
xor
nop
mov
bound
or
or
push
sbb
movs
out
popf
add
or
enter
gs
lods
out
mov
inc
xor
lock
rcl
int
mov
stos
bound
outs
sbb
les
movs
mov
xchg
das
sbb
cmps
call
rcr
or
iret
fst
sub
in
lahf
fild
inc
in
mov
jns
daa
jl
xor
mov
retf
retf
jmp
xchg
leave
lods
pusha
sub
mov
pusha
es
scas
jb
add
addr16
and
ja
hlt
mov
jae
out
mov
cs
mov
add
ret
out
test
dec
daa
(bad)
rol
imul
xchg
test
in
icebp
cmp
or
out
call
xchg
or
retf
retf
push
mov
mov
test
test
adc
pop
pushf
or
jne
cli
fistp
sbb
jp
mov
jl
mov
mov
sbb
jp
pop
adc
cmc
stos
retf
push
inc
cmp
pop
pop
jns
and
cmps
or
adc
xor
mov
ins
xchg
aad
mov
xor
dec
aas
jl
jb
lods
call
mov
push
dec
mov
mov
jnp
aam
(bad)
xor
adc
cmc
lds
and
div
jp
cmp
in
rcl
nop
dec
xor
cmp
faddp
aam
fsubrp
mov
cmps
sub
outs
mov
jo
aad
xor
imul
adc
retf
shl
pop
(bad)
push
mov
ja
push
add
movs
jnp
or
pop
jns
cs
addr16
sbb
fcomp
adc
xchg
cmc
pop
js
add
movs
aaa
popa
lods
pop
inc
sbb
cmps
out
dec
jo
jb
push
inc
add
jle
push
adc
movs
xor
fsubr
mov
nop
inc
aaa
push
add
movs
sti
mov
movs
xor
pop
or
jmp
pop
xchg
jmp
scas
mov
pop
mov
and
nop
call
mov
dec
push
ins
jmp
retf
mov
clc
lods
out
xor
ret
cmp
inc
fs
sbb
push
cmp
fsub
aas
js
adc
into
mov
mov
fxch
mov
xor
mov
cwde
pushf
out
mov
mov
daa
mov
aaa
push
scas
cmp
ror
xlat
pop
sub
cld
std
mov
adc
pop
push
dec
mov
aam
xchg
dec
push
pop
addr16
lds
mov
test
pusha
adc
cmps
enter
sub
pop
jle
clc
jmp
xchg
jmp
(bad)
std
cmps
xlat
cld
mov
f2xm1
fidivr
stos
aas
xchg
retf
stos
aas
outs
sub
sub
stos
adc
sbb
xor
rol
shr
outs
or
cmp
add
scas
or
inc
cwde
adc
push
or
out
add
sub
imul
sub
inc
sub
std
clc
mov
inc
add
or
mov
inc
mov
in
and
fnsave
xchg
sbb
fst
in
mov
ss
pop
sub
cdq
loop
(bad)
fldcw
mov
push
mov
xor
jge
push
outs
out
cmp
push
call
sbb
mov
rcr
pop
inc
inc
pop
jecxz
outs
or
into
rcl
and
retf
das
push
or
push
je
sbb
idiv
fwait
retf
push
mov
xchg
inc
daa
dec
cmp
ret
mov
or
jbe
sbb
cmp
sahf
hlt
mov
pop
jp
dec
mov
sub
cmovg
jnp
leave
mov
adc
movs
adc
adc
adc
dec
adc
out
mov
mov
outs
outs
jbe
clc
mov
test
movq
into
(bad)
movs
in
ret
add
jbe
add
movs
sbb
(bad)
sbb
mov
mov
sbb
or
adc
fst
pushf
ins
sub
cmp
aam
xchg
sub
in
out
sub
ret
sbb
cmps
jecxz
pushf
shl
xchg
hlt
sahf
rcl
popa
add
sub
les
dec
cmp
jmp
jb
dec
and
call
ds
lahf
out
pusha
arpl
adc
test
in
mov
hlt
ficom
sbb
jmp
js
adc
or
or
mov
test
(bad)
into
pop
xor
mov
xchg
jg
add
fdiv
xchg
and
pop
aas
ins
shl
(bad)
adc
pop
xor
repz
mov
mov
in
cmps
cdq
cmp
jns
sbb
clc
mov
pop
mov
ja
lock
adc
sub
int
mov
push
ja
add
jmp
enter
out
sahf
icebp
mov
xchg
cld
(bad)
ds
mov
xchg
leave
call
ds
jg
dec
and
(bad)
std
nop
stc
and
mov
add
jmp
lea
lods
jmp
or
cmp
enter
ins
mov
dec
shr
std
xchg
imul
lods
sub
iret
sbb
repnz
sub
fnsave
xor
cmp
repnz
adc
pop
mov
cmps
out
test
and
ret
jo
xor
sub
popf
clc
dec
(bad)
loope
ins
test
xchg
mov
xor
aad
adc
pushf
or
push
adc
and
movs
(bad)
fild
sub
xor
loop
(bad)
push
bound
jae
pop
data16
mov
movs
arpl
gs
scas
jmp
test
bound
ret
scas
call
push
mov
cld
lods
jmp
dec
pop
adc
sbb
inc
mov
sbb
rcl
lea
push
xlat
lock
adc
aaa
je
pop
push
test
daa
jns
sti
leave
cmps
leave
push
ins
adc
pop
pop
bswap
into
sub
test
mov
dec
and
jmp
xor
cmove
ret
cwde
xchg
or
and
or
ret
(bad)
mov
mov
fld
mov
fcomp
scas
repnz
push
jo
ins
push
lods
adc
cmp
mov
mov
xor
adc
push
ret
add
push
scas
inc
sub
dec
pop
cmp
add
cmp
std
shl
add
rcl
lods
div
fnsave
pop
pop
shl
and
rcl
mov
das
rcl
and
in
loop
push
jg
push
jl
jo
mov
sbb
and
shl
jp
and
mov
fs
jns
lds
ins
xchg
(bad)
test
sbb
push
ins
xchg
pop
dec
or
mov
dec
cmp
test
inc
sahf
add
pop
lahf
aam
mov
inc
clc
sbb
lea
(bad)
xchg
mov
es
int3
sbb
or
stos
in
xchg
push
push
mov
iret
mov
dec
mov
js
out
xchg
cli
sub
in
dec
pop
cmp
shr
movs
xchg
xor
and
pop
and
adc
fnstcw
mov
iret
xchg
xchg
cdq
pop
cmp
jo
push
ss
dec
loopne
fld
inc
sahf
pop
push
xor
repnz
push
jg
mov
scas
out
mov
jmp
arpl
sub
xchg
xchg
dec
sub
cli
fstp
cld
cld
stos
loopne
xor
outs
rcl
(bad)
out
push
dec
cmp
fild
cdq
rcl
lock
pop
arpl
sbb
ds
adc
(bad)
mov
test
push
pop
popf
pop
pop
aaa
stc
ror
sahf
daa
test
scas
pop
xor
mov
popw
dec
lods
add
std
stc
stos
retf
daa
stos
or
movs
mov
les
fdivr
xchg
sbb
aad
popf
(bad)
xchg
scas
pop
push
or
repz
mov
sub
or
and
pop
mov
cmp
lods
into
dec
mov
sub
xor
(bad)
pop
popf
adc
cmp
jmp
data16
stos
pop
dec
(bad)
out
cmps
push
xor
icebp
stc
popf
gs
outs
sub
test
jg
pop
mov
xchg
jl
cs
(bad)
xchg
idiv
push
pop
xor
sti
mov
jecxz
aad
and
imul
outs
push
outs
sahf
ror
sub
adc
pop
xor
inc
(bad)
les
push
jno
xor
or
xor
(bad)
cld
mov
xor
ss
lock
dec
jo
jo
add
daa
aaa
int3
into
mov
mov
stos
fs
cmp
jae
cmp
mov
xchg
dec
push
or
loopne
retf
outs
xor
scas
out
mov
cdq
ror
pop
mov
push
icebp
sbb
cld
scas
push
mov
and
(bad)
cmp
xchg
call
in
fild
leave
mov
and
mov
call
pop
add
adc
mov
xchg
arpl
imul
jmp
mov
fs
ficomp
mov
jmp
mov
es
xchg
arpl
dec
mov
mov
inc
mov
test
mov
stc
test
ss
push
jbe
sti
std
mov
pop
push
pop
imul
aaa
dec
sub
ror
add
enter
ja
adc
add
sbb
cmps
jecxz
dec
push
or
cmp
daa
adc
inc
pop
sbb
pop
push
aad
cdq
ror
leave
mov
sub
adc
pop
cmp
cli
popf
shr
xlat
nop
cmp
cdq
out
scas
add
dec
push
outs
xchg
lds
sbb
int
lods
xchg
push
pop
ret
xchg
mov
mov
in
mov
or
clc
dec
inc
inc
and
lock
push
dec
or
xchg
imul
lods
ret
lods
call
nop
cmp
push
and
cmp
int
popf
mul
retf
xchg
test
pop
je
lds
xchg
dec
or
xor
pop
aam
les
fld
ror
pop
mov
inc
in
ds
mov
mov
rcl
mov
mov
push
jbe
jbe
(bad)
cmc
mov
ss
out
shl
jp
call
mov
and
shr
and
or
mov
sub
outs
and
iret
(bad)
xlat
pop
sub
lock
adc
es
stos
out
test
add
add
or
movs
jmp
fistp
inc
mov
push
mov
ins
or
out
xchg
imul
ins
dec
adc
push
das
(bad)
ret
cwde
inc
cmp
shl
or
dec
add
mov
adc
fstp
inc
mov
loop
sbb
jmp
retf
fwait
push
inc
pop
sbb
lods
les
test
mov
(bad)
call
dec
and
sbb
rcr
hlt
aaa
popf
mov
sub
daa
aad
sbb
xchg
sbb
sti
mov
mov
mov
xchg
aam
(bad)
push
dec
aam
cmps
xlat
sub
lds
shl
jmp
push
add
mov
sbb
mov
mov
clc
mov
call
adc
retf
jmp
movs
(bad)
jge
jmp
ficomp
xchg
cdq
jg
xor
rcr
into
imul
mov
aaa
ja
pop
mov
adc
(bad)
test
mov
arpl
pop
stos
and
lock
xchg
shl
mov
(bad)
out
push
jp
inc
jp
inc
daa
xlat
mov
call
xchg
idiv
push
das
popa
add
xor
das
imul
pop
cmp
cld
mov
outs
es
aas
jnp
in
cli
mov
push
add
gs
hlt
loope
outs
test
mov
sub
inc
dec
cmps
fisttp
add
xor
lods
clc
pushf
sahf
add
retf
jns
push
jnp
dec
(bad)
xchg
xchg
sahf
jae
fwait
adc
in
adc
push
movs
iret
push
cmp
int3
xchg
fisttp
push
popf
fbstp
mov
or
rol
stc
xchg
subps
adc
jo
scas
push
jecxz
dec
push
lahf
outs
clc
adc
retf
in
push
es
retf
xlat
jno
xor
sub
mov
loop
jne
test
pop
jnp
das
inc
xor
retf
sub
mov
punpckldq
sub
sbb
scas
add
out
retf
xchg
mov
dec
ror
mov
mov
xchg
clc
pop
xchg
xchg
xor
pop
retf
mov
test
cli
push
cmc
std
xor
and
sub
mov
in
xor
sbb
dec
jae
clc
ja
inc
inc
xchg
cdq
sub
sbb
push
inc
repnz
push
mov
sub
fs
call
xor
jge
dec
pop
(bad)
mov
dec
and
mov
in
push
adc
ss
xchg
movs
mov
pop
cmp
aaa
out
call
cmp
fcmovnu
push
call
dec
mov
leave
dec
sti
in
test
mov
pop
or
push
popa
xchg
js
sub
and
push
imul
fiadd
ss
test
pushf
dec
mov
adc
mov
or
push
(bad)
imul
add
aad
add
adc
sbb
outs
add
inc
add
xor
pushf
xchg
mov
push
pop
mov
ins
mov
lea
call
or
pop
int3
xchg
jnp
stos
jb
mov
scas
mov
popf
rcr
mov
pop
and
imul
mov
jle
xchg
fstp
pop
sub
push
mov
cmp
sbb
std
mov
in
xchg
dec
dec
adc
fmul
ins
xor
jns
pushf
xor
dec
xlat
push
shl
mov
jno
push
jmp
ror
aam
mov
fmul
mov
je
mov
out
cld
add
imul
push
je
jno
test
aad
out
les
in
out
stos
(bad)
sub
dec
push
cmp
aaa
cwde
(bad)
(bad)
sahf
sbb
push
cmp
sub
inc
mov
mov
sub
mov
inc
das
test
or
jmp
xor
call
jecxz
dec
(bad)
in
lods
adc
pop
adc
movs
adc
aas
out
or
inc
inc
inc
xchg
inc
pop
xchg
push
arpl
fldenv
imul
bound
or
xor
push
mov
and
mov
inc
inc
aam
xor
mov
cmps
sub
mov
jmp
sbb
in
data16
inc
fld
add
mov
rcr
imul
fsub
jle
je
out
cmp
retf
xchg
xor
mov
mov
popf
or
mov
jae
mov
icebp
icebp
sub
(bad)
jmp
pusha
inc
sbb
jno
or
in
daa
jno
pop
adc
xchg
jle
xor
and
ret
outs
ins
fs
out
fiadd
repz
pop
aam
dec
add
or
add
ins
xchg
sub
and
jnp
mov
inc
xor
push
iret
xor
loopne
ds
out
jne
and
xchg
adc
rep
sub
cli
sub
mov
aas
push
adc
sbb
add
mov
mov
in
cmc
test
ret
lock
sub
cmp
push
adc
outs
ss
out
sub
xor
(bad)
pop
dec
std
and
in
mov
mov
xor
sbb
call
sbb
in
clc
push
jl
mov
ret
sub
cld
inc
jmp
in
sbb
movs
test
shr
inc
jae
push
add
test
fwait
dec
push
add
jmp
inc
dec
sti
adc
aaa
sub
nop
out
rcl
push
ret
inc
and
sub
fdivr
in
sub
int3
inc
sbb
ins
fwait
push
iret
out
aad
add
jb
xchg
das
mov
cwde
fmul
rcl
inc
arpl
push
inc
adc
pop
(bad)
xchg
ins
out
dec
push
jmp
aaa
(bad)
popf
test
jnp
(bad)
mov
mov
iret
movs
mov
xchg
mov
add
xchg
push
enter
fwait
test
fcmovu
cmp
jne
popa
pop
jl
adc
aam
push
and
imul
daa
jbe
sahf
test
xor
iret
adc
add
cdq
push
(bad)
fsubrp
call
js
pop
or
push
setg
pop
and
push
scas
int3
lock
(bad)
mov
frstor
mov
add
lock
mov
fiadd
push
push
sbb
or
aam
push
stos
sub
jne
jp
cs
bound
cmp
lea
lock
scas
dec
jae
out
call
scas
clc
push
into
jmp
push
jg
mov
sbb
jnp
xor
and
in
inc
rol
pop
pop
push
jecxz
jno
repz
xchg
jo
mov
stc
push
mov
mov
dec
loope
retf
cmp
idiv
int3
xor
mov
daa
test
cmp
(bad)
daa
dec
pop
inc
push
xchg
push
test
mov
lahf
add
push
pop
(bad)
retf
iret
sub
lods
or
scas
push
or
inc
pop
push
mov
sub
or
dec
inc
jmp
call
mov
add
sub
aam
pop
and
scas
js
jle
lock
push
mov
mov
in
addr16
xchg
lds
sbb
fcmovnb
mov
in
push
imul
adc
cwde
daa
push
cld
es
ja
pop
lahf
xchg
ret
mov
jmp
fxtract
adc
daa
std
inc
imul
mov
add
test
jg
cmp
loope
jno
aas
xor
mov
loope
jl
adc
fs
mov
(bad)
sar
push
test
jbe
jmp
out
mov
loope
jne
cmp
loopne
mov
xor
cmp
test
stc
push
and
jg
jl
out
lahf
sbb
dec
pop
mov
mov
or
mov
ror
cmp
test
in
mov
pop
stos
js
stos
add
adc
ffree
in
test
xor
cmc
add
add
mov
loop
icebp
push
iret
xor
es
xchg
je
enter
icebp
(bad)
aas
add
jne
call
add
xor
add
jl
jg
pusha
gs
fcomi
pop
fs
movs
movs
std
mov
or
dec
lea
inc
sbb
jb
dec
fcomi
ss
add
xchg
cli
pop
push
int
mov
add
xchg
popa
adc
xchg
xor
adc
cs
jmp
dec
gs
sub
push
ins
sbb
nop
je
add
repz
js
loop
cmps
pop
dec
shr
int3
(bad)
mov
sbb
cmp
sar
mov
and
cmp
scas
addr16
fild
popa
xlat
or
pop
mov
sub
pop
mov
lds
jge
pop
adc
pop
mov
xor
mov
clc
cs
or
loope
mov
and
(bad)
sub
add
mov
test
push
sti
int3
bt
sub
les
cmc
adc
and
jo
mov
mov
sub
sbb
cld
mov
jne
fisub
adc
jnp
bound
jne
add
pop
mov
mov
sbb
dec
lock
xchg
loopne
push
lods
retf
ret
dec
lods
jno
mov
mov
lea
test
inc
dec
mov
popa
pop
mov
inc
retf
inc
nop
push
pop
rol
in
xlat
jmp
xchg
mov
push
loope
jmp
imul
or
scas
lods
or
repnz
rcl
jb
adc
jg
push
inc
repz
int
xlat
enter
popf
mov
mov
cmps
repz
ffreep
pop
fs
enter
scas
mov
hlt
or
ja
cs
xchg
pop
ret
pop
enter
adc
xacquire
mov
add
popa
and
scas
cmps
lahf
(bad)
inc
cmp
sbb
out
add
jge
mov
into
out
dec
into
fs
inc
add
lds
cwde
sub
xchg
arpl
cmp
movs
jo
push
inc
or
push
xchg
imul
or
add
inc
rcr
dec
jb
lods
les
pop
fwait
aam
xor
clc
xor
sub
push
in
aas
out
adc
movs
mov
jmp
idiv
inc
and
lds
mov
mov
pushf
push
shl
sbb
push
out
sub
xor
mov
mov
add
pop
pop
pop
mov
stc
ret
test
int
dec
loopne
js
arpl
cs
in
movs
pop
stos
inc
pop
inc
je
rcl
dec
dec
ins
(bad)
mov
dec
add
dec
jle
jne
mov
mov
push
ror
sub
hlt
pop
sub
pushf
fldenv
(bad)
(bad)
je
add
jge
gs
push
jecxz
lahf
mov
sub
inc
dec
jp
mov
scas
xchg
jle
add
mov
add
rcl
iret
jle
jae
icebp
lahf
out
in
ds
or
cs
int3
(bad)
call
cdq
fld
out
test
adc
bound
repnz
call
add
pop
cmp
jae
cs
cmp
mov
hlt
call
pop
in
mov
into
add
push
gs
(bad)
call
sub
cmp
and
out
adc
xchg
sub
add
ins
pop
jb
call
lods
mov
mov
cwde
shl
sbb
xchg
sbb
dec
xor
xchg
ficom
pushf
sbb
mov
popa
mov
sbb
mov
add
std
std
(bad)
adc
fsubr
pop
cld
sub
test
push
imul
jecxz
inc
div
movs
test
xchg
test
int3
jmp
pusha
fdiv
push
sbb
int
add
jecxz
cmps
xor
out
add
sbb
scas
cmp
shl
movs
or
in
jle
and
std
xchg
sub
imul
cmps
rcl
jnp
cmps
inc
scas
adc
cs
xor
add
std
cdq
push
ficomp
popf
jge
out
mov
div
mov
mov
or
xchg
in
add
fnstenv
iret
ja
sbb
jp
xor
mov
mov
mov
pop
(bad)
xor
mov
dec
shr
test
in
or
scas
rol
aad
push
add
jns
mov
out
push
dec
sub
xchg
sub
xchg
push
ds
or
mov
mov
shr
push
inc
pusha
xchg
add
aas
push
mov
addr16
addr16
popf
jo
mov
cmp
loop
sub
push
ret
jge
dec
repnz
mov
lods
sub
mov
cld
xchg
push
mov
and
jb
cmc
das
sahf
aaa
fnstcw
mov
jns
idiv
retf
(bad)
aad
int
push
xor
and
add
and
in
pop
loop
outs
push
pop
cld
xor
retf
out
inc
mov
nop
je
xor
cmp
shl
cld
jnp
lods
fimul
ret
out
sar
pop
rcl
imul
push
lods
sub
mov
mov
inc
push
cs
std
mov
jnp
pusha
in
test
push
or
or
pop
cmp
inc
mov
xchg
fldcw
pusha
lods
call
in
xor
inc
cli
in
shl
jno
jne
push
dec
pop
in
xchg
mov
arpl
and
lods
cmp
ret
movs
sub
sti
push
inc
push
imul
and
mov
push
call
ins
push
or
outs
sbb
jle
jnp
aam
push
pop
jp
xor
(bad)
(bad)
ja
mov
fstp
sbb
imul
mov
data16
pop
jle
pop
mov
les
mov
js
inc
xchg
mov
sub
loop
add
mov
xlat
xchg
ror
mov
sahf
lock
mov
es
hlt
or
push
enter
xchg
inc
(bad)
lock
fnstcw
jae
mov
push
push
ins
dec
mov
(bad)
push
(bad)
cmps
push
jnp
adc
retf
dec
cwde
nop
xor
ret
out
push
cmp
push
cdq
sti
loope
sub
or
xlat
dec
mov
out
push
inc
pusha
ret
push
popa
push
dec
jnp
mov
xchg
pushf
(bad)
repnz
jb
lods
jecxz
xor
outs
addr16
xor
loop
cmp
jecxz
fimul
gs
xchg
outs
iret
mov
or
lods
das
ret
test
sub
sub
stos
popa
je
les
mov
xor
lds
mov
cli
jb
cmp
push
cdq
pusha
(bad)
inc
nop
jp
inc
out
mov
jmp
pop
movs
or
imul
mov
push
(bad)
push
mov
cmps
jns
scas
pop
mov
pop
adc
retf
cmp
das
add
add
add
jbe
and
lock
(bad)
sbb
aam
mov
fcomp
sbb
pushf
(bad)
(bad)
fidiv
pop
pop
jbe
ins
call
cmps
aas
xchg
add
jl
cmc
mul
ror
push
je
sbb
mov
shl
mov
cmp
lods
mov
mov
clc
bound
cmps
pop
mov
sub
and
and
cld
aas
add
mov
call
cmc
dec
js
or
dec
sbb
fld
mov
inc
adc
fstp
mov
dec
mov
mov
mov
jl
out
mov
add
cdq
xchg
or
mov
push
jb
and
pop
sbb
push
adc
add
push
inc
push
scas
mov
sbb
std
in
sub
mov
ss
pushf
gs
add
movs
mov
jbe
or
or
mov
int3
fisttp
(bad)
or
mov
stos
mov
jecxz
movs
stos
jge
ja
enter
ins
dec
xchg
push
in
mov
push
adc
xor
scas
das
shl
xchg
popf
jge
test
call
mov
fcmovbe
clc
shl
loope
mov
clc
lea
aaa
xchg
mov
leave
outs
inc
sbb
dec
pusha
or
in
adc
fiadd
jo
movs
rcl
xor
xor
pusha
les
mov
test
lock
ret
sub
fmul
dec
bound
dec
inc
xor
cdq
rcr
xor
fs
jo
ret
mov
jnp
aam
je
inc
cmc
adc
sti
fwait
dec
pop
xchg
mov
into
mov
push
fnstenv
repz
iret
dec
sub
aaa
cmp
das
mov
adc
mov
shl
stos
test
(bad)
sti
cld
and
mov
aad
sbb
sbb
adc
sidtd
sbb
add
enter
rol
das
inc
cld
dec
push
cwde
test
push
test
or
push
(bad)
and
mov
jle
gs
fcmovnbe
data16
jno
and
movs
mov
icebp
xchg
mov
jle
cmp
pop
mul
pop
loopne
push
addr16
loopne
mov
push
mov
or
jo
mov
mov
(bad)
xchg
pop
idiv
mov
mov
sbb
mov
jne
nop
std
push
mov
inc
mov
je
and
mov
test
sbb
jbe
outs
repnz
pop
mov
(bad)
addr16
push
sbb
jmp
pop
or
aas
movs
call
jmp
out
in
ss
sub
mov
push
or
push
xchg
fist
mov
daa
mov
out
lock
(bad)
(bad)
cwde
cld
div
and
jl
je
test
jmp
je
mov
cmp
das
bound
cmp
pop
(bad)
repz
mov
xchg
mov
jns
rcl
retf
mov
sub
jbe
or
es
pop
sahf
sub
sbb
xor
or
out
stos
out
xlat
sbb
xor
mov
addr16
das
mov
jmp
jns
call
xchg
loope
jmp
dec
gs
mov
jae
cmps
dec
nop
jns
fsubr
adc
or
mov
push
adc
dec
int
jmp
fs
inc
fsubrp
fild
xor
xor
mov
adc
mov
fsub
cmp
and
pop
pushf
sbb
mov
and
or
dec
loop
sti
xor
dec
dec
jmp
frstor
jno
adc
sub
into
dec
mov
jno
xchg
mul
scas
cld
xchg
sbb
xchg
mov
sbb
aad
bnd
lods
and
jne
xchg
or
add
sbb
(bad)
in
imul
ret
lods
fcomp
test
jp
mov
call
lock
popf
imul
(bad)
mov
mov
push
leave
jle
push
sbb
dec
xchg
push
mov
rol
xor
jl
das
or
dec
and
cmp
jmp
dec
jmp
cmp
xlat
or
inc
popw
cmc
push
mov
cmp
test
push
jo
add
ret
sbb
mov
lds
retf
inc
xchg
or
xchg
popf
inc
and
and
paddusb
data16
pop
inc
retf
mov
inc
fsub
sti
or
rcl
out
or
push
retf
adc
mov
sub
xchg
leave
pop
xor
pop
out
dec
fwait
add
mov
mov
jge
pop
cli
mov
fisub
dec
div
xlat
inc
cmc
sbb
cld
into
push
arpl
adc
inc
adc
inc
xchg
xchg
push
scas
je
sti
aas
das
and
cmp
inc
push
popf
aas
inc
fdiv
push
ret
mov
xor
jno
mov
ret
jmp
mov
jecxz
push
mov
cmp
push
pushf
fs
out
ins
xchg
cwde
push
std
cmc
xor
xchg
mov
out
(bad)
fidiv
call
or
ss
or
rcr
jg
jle
(bad)
test
or
cmp
add
or
(bad)
mov
cmps
xchg
pop
outs
out
inc
dec
lock
dec
xchg
inc
pop
adc
mov
sbb
ret
inc
in
mov
in
mov
and
in
add
lock
pop
mov
push
cmps
sub
test
outs
int3
and
cmp
jmp
out
test
sbb
fdiv
in
rcl
or
mov
mov
push
pop
jno
cmp
add
fwait
xchg
mov
mov
cmp
in
lods
fisttp
sbb
sbb
sbb
pop
aam
xor
dec
and
xchg
inc
outs
pop
or
adc
add
ret
xchg
shl
out
xor
loop
and
sahf
push
std
sahf
mov
arpl
je
xor
xor
cli
mov
test
push
pop
mov
stc
push
pop
sub
pop
mov
idiv
into
fsubr
mov
cmp
cmp
inc
cwde
or
and
pop
adc
es
xor
push
mov
ins
lods
xchg
sub
call
loope
test
ds
xor
and
out
push
adc
iret
cmp
or
add
jg
xchg
sar
ret
sub
push
jo
xchg
ins
mov
fwait
push
push
fadd
in
cmp
repnz
int
loop
loopne
sbb
pop
mov
or
aam
rcl
fcomp
outs
fnstsw
pop
out
mov
lods
pusha
xlat
push
push
mov
mov
mov
fisttp
ds
push
div
test
nop
dec
or
nop
jp
jmp
dec
lods
cwde
cli
jnp
ss
xor
pop
add
or
sbb
jb
es
or
ins
enter
pushf
dec
adc
icebp
and
dec
out
fsub
ja
jg
or
sub
js
push
ficom
inc
fadd
pop
fnstsw
push
mov
popa
(bad)
or
outs
retf
adc
dec
fadd
imul
js
cdq
push
div
jp
mov
mov
stos
fs
xor
and
loop
int
les
mov
sahf
fst
jg
sub
jmp
xchg
nop
scas
mov
imul
movs
test
xchg
gs
jl
pop
mov
lahf
xchg
mov
and
shl
jmp
lock
xchg
xchg
dec
rol
neg
sti
inc
retf
fmul
cdq
ins
mov
pop
mov
pop
adc
cmp
pop
mov
sbb
and
push
mov
data16
ins
lods
into
and
aas
cli
pop
test
dec
mov
adc
sub
sbb
cmc
sub
stc
push
aaa
push
add
adc
sbb
or
pop
int
dec
cmps
mov
data16
and
add
push
pop
ficomp
push
movs
mov
fadd
push
in
adc
inc
int3
and
adc
and
push
div
out
mov
repz
std
dec
fdiv
sub
or
ret
pop
xchg
sbb
push
stos
inc
ror
in
adc
inc
lock
scas
inc
scas
dec
adc
pop
scas
jp
pop
test
daa
sbb
int3
push
fistp
sahf
mov
pop
(bad)
jne
and
ret
sub
sub
leave
xor
cmp
push
shr
or
jmp
mov
dec
fidivr
fwait
inc
xlat
push
adc
daa
add
cmps
gs
call
dec
mov
mov
inc
mov
leave
pop
mul
inc
shl
jo
dec
aam
loope
icebp
push
xchg
movs
xchg
mov
in
pop
xchg
sub
pop
aam
into
add
pop
mov
inc
fcomp
jp
push
adc
lahf
addr16
ss
std
jae
cmp
cmp
xor
push
mov
add
add
jle
cwde
jae
call
push
xor
dec
pop
pop
or
std
sub
(bad)
pop
xchg
retf
jo
ds
sub
jecxz
adc
sub
sub
cli
and
ins
into
dec
xlat
xor
call
(bad)
fwait
xchg
xchg
lahf
outs
mov
test
fidivr
vpmacsdql
dec
mov
push
sub
les
repnz
mov
inc
test
mov
scas
test
sub
jecxz
add
cld
xchg
fwait
push
mov
add
enter
adc
pop
mov
jb
ins
fisubr
sub
push
push
cmps
jae
jne
pop
lock
mov
mov
sbb
pop
test
inc
test
enter
out
push
std
das
jecxz
mov
mov
fwait
ins
stos
in
jg
je
xchg
pushf
popf
dec
stos
lahf
js
push
push
repnz
pop
add
fimul
sti
pop
aad
push
or
push
sar
sbb
pop
cmps
gs
xchg
jns
inc
mov
inc
not
mov
js
inc
ret
pop
ror
push
adc
push
xlat
cmps
scas
mov
jle
dec
movs
add
in
push
mov
scas
mov
and
add
add
sbb
and
cmp
or
push
loop
sar
and
cmp
xor
jp
sub
push
add
clc
jle
jo
jnp
dec
iret
push
mov
xor
jmp
mov
test
repz
push
mov
xchg
sbb
jl
xchg
xchg
cdq
mov
repz
jle
dec
into
jb
push
stos
xchg
sahf
fnstsw
sub
push
or
mov
pop
mov
mov
mov
lahf
std
inc
lods
xchg
bound
lods
hlt
jae
add
les
arpl
rol
in
shr
sub
xor
xor
pop
sti
jo
xor
mov
hlt
js
cmp
pop
adc
stos
xchg
jno
push
mov
lods
jnp
out
cmps
jae
push
int3
sub
cmp
jle
outs
movs
rol
hlt
push
sar
xchg
outs
aam
rol
jb
xchg
mov
lahf
pushf
dec
mov
mov
sub
inc
(bad)
aas
nop
sub
iret
add
add
pop
mov
nop
js
pushf
fisubr
sub
jmp
test
not
clc
mov
lea
xchg
xchg
xchg
xchg
jle
dec
mov
add
jmp
cdq
xchg
inc
aam
adc
mov
imul
pop
mov
hlt
push
mov
(bad)
adc
pop
stos
jl
cwde
rcl
pop
mov
fisub
jmp
sbb
add
retf
stc
cs
or
xor
push
xchg
xor
jecxz
mov
movs
inc
xlat
dec
lea
out
pop
mov
sahf
jns
shl
repnz
scas
inc
mov
and
int
shr
mov
dec
rol
cmc
and
adc
sbb
pop
mov
or
sub
cmp
sbb
and
lea
mov
xchg
add
sbb
dec
cmp
jne
cmp
add
or
and
and
dec
mov
dec
mov
call
inc
xchg
inc
mov
xchg
jge
jo
or
imul
or
daa
iret
daa
add
ja
mov
pusha
fistp
pop
mov
push
push
rcr
fadd
mov
daa
or
pop
and
push
sbb
or
sbb
or
dec
stos
mov
fisubr
cdq
push
mov
dec
aam
shl
adc
adc
jp
imul
mov
stos
mov
sar
daa
add
jl
xchg
imul
fdiv
js
dec
cmc
push
ret
and
in
push
mov
fsubr
or
or
adc
jo
mov
gs
pop
mov
mov
cmc
push
fdiv
dec
scas
mov
add
xor
out
push
fisubr
add
add
pop
ins
jmp
adc
jns
xor
loop
(bad)
and
xchg
pushf
jmpw
in
jg
aas
pop
or
push
mov
xchg
popa
rcr
(bad)
mov
mul
std
dec
shl
sub
jae
push
fst
inc
fistp
dec
test
xchg
rol
loope
les
sub
xor
cmp
jo
sub
ins
mov
mov
imul
shr
lds
ficom
jo
dec
cmps
xchg
cwde
(bad)
std
dec
retf
push
(bad)
daa
xor
jmp
rol
popa
sub
sbb
push
out
leave
pop
cld
jl
pop
stc
ja
jge
mov
icebp
dec
aam
cmc
je
jle
jp
ss
push
int
ss
repz
push
ret
push
repz
sti
push
(bad)
pop
fisub
pop
add
push
pop
movs
mov
lods
cdq
jno
jg
dec
int3
jge
sub
jmp
mov
mov
dec
stc
jnp
jg
inc
scas
in
and
adc
cmps
les
jmp
stc
jp
ss
pop
add
pop
out
jmp
ss
enter
js
push
mov
xchg
xor
dec
retf
dec
mov
xchg
ins
mov
mov
jmp
aad
cli
push
cmps
call
loop
clc
pop
(bad)
pop
std
inc
fstp
push
fistp
dec
fstp
pop
sbb
cmp
add
mov
ds
ss
sbb
push
ret
(bad)
jmp
dec
(bad)
jns
and
pop
sbb
sub
leave
dec
cmps
out
and
jne
inc
xlat
es
aaa
pop
adc
cmp
dec
rol
xchg
cmp
jg
inc
xchg
xchg
je
pop
aas
add
add
dec
fidivr
ja
inc
bnd
test
cdq
lea
cmp
cmp
xchg
popf
dec
in
push
mov
jmp
cs
jbe
inc
(bad)
push
aad
mul
prefetch
or
mov
cwde
sub
inc
cmps
inc
scas
dec
fdivr
loope
jg
(bad)
fst
clc
and
stc
add
lds
dec
aam
lock
es
out
jo
test
mov
popa
stc
js
nop
data16
jmp
(bad)
not
jbe
jne
sahf
push
lock
mov
jle
arpl
into
pop
mov
adc
inc
stos
outs
test
cmp
push
lods
js
aaa
or
xor
or
add
and
mov
jne
(bad)
and
add
dec
fimul
xor
jo
mov
push
pop
loope
std
pop
inc
ins
lock
mov
popa
call
rcr
xor
dec
test
mov
add
ds
xor
adc
cmp
or
out
cli
inc
call
add
sbb
jnp
jns
push
test
sbb
xor
add
mov
cmp
outs
ficomp
mov
iret
push
repz
prefetchnta
inc
int3
and
push
sbb
add
and
or
sub
xor
xor
psrad
or
loop
add
call
out
jmp
mov
test
std
jns
push
add
xor
jns
dec
cli
dec
rcr
jns
sub
xor
xor
and
or
inc
scas
mov
mov
aad
int3
dec
scas
mov
movs
mov
push
jl
js
pop
(bad)
mov
ficomp
fwait
inc
add
cs
pop
mov
sub
nop
xchg
scas
mov
cwde
mov
stos
mov
std
dec
leave
movs
xchg
lahf
xchg
mov
mov
ja
outs
mul
or
adc
jmp
ret
sub
cmc
lods
stos
sbb
jmp
cmp
call
inc
xlat
and
cmp
dec
enter
fdivr
mov
sahf
mov
mov
test
out
jae
push
rcr
hlt
mov
cmp
jbe
jge
jno
mov
push
movs
cdq
mov
or
das
ins
fisttp
test
xchg
xchg
mov
mov
leave
inc
(bad)
jae
jle
or
or
and
mov
inc
enter
cmps
pushf
jle
dec
int
ss
sbb
sbb
loope
fld
es
mov
call
xor
or
mov
adc
cmps
addr16
and
push
rcl
add
mov
jl
and
loope
ret
jge
xor
adc
xor
loope
scas
xchg
xchg
push
rcl
retf
or
add
or
add
or
adc
add
jmp
movs
cwde
pushf
outs
repz
(bad)
add
add
xor
pop
ret
jae
jge
inc
jmp
xor
jnp
cs
mov
jne
pop
sub
cmp
or
(bad)
jl
es
loop
stos
addr16
push
xlat
je
jae
jae
dec
cmc
inc
das
sub
cmp
fldcw
cmp
sbb
adc
sub
in
jge
pop
mov
xor
add
ja
mov
loop
mov
adc
jmp
dec
movs
mov
push
aad
xor
das
ins
fisttp
test
xchg
xchg
mov
mov
popf
xchg
test
mov
pop
mov
retf
sub
add
adc
adc
push
lods
test
stc
inc
out
imul
xchg
test
xchg
(bad)
rol
(bad)
or
adc
cmp
pop
int
mov
test
out
daa
push
call
in
sti
inc
cmc
je
pop
int
fstp
dec
fistp
inc
les
dec
(bad)
mov
mov
gs
outs
rcr
ret
inc
lds
jl
jns
jge
pop
retf
dec
rcr
xlat
inc
lock
pop
icebp
dec
aam
(bad)
call
adc
add
loopne
sbb
add
push
enter
repz
pop
stc
ja
mov
mov
(bad)
lock
adc
jle
lahf
jnp
sub
sbb
or
adc
push
cli
inc
into
jb
das
xor
sbb
call
popf
xchg
push
call
mov
xor
or
jbe
test
cwde
pusha
aad
lock
(bad)
push
pop
sub
lock
daa
das
adc
out
pop
aam
rol
push
movs
enter
push
test
mov
sbb
jp
inc
fld
inc
mov
lahf
mov
rcr
push
ficomp
(bad)
dec
bnd
pop
clc
dec
rcl
nop
dec
test
dec
lods
mov
rcr
cmp
pop
scas
js
cmp
ins
fiadd
call
mov
icebp
push
test
xor
push
mov
or
or
lds
fimul
repnz
jae
pop
fst
ins
aaa
mov
int
jmp
stos
push
mov
popf
inc
adc
push
in
cmps
mov
lods
xchg
cwde
jle
ins
stos
mov
je
popa
ret
pop
lds
sub
adc
adc
movs
stos
mov
mov
mov
xchg
mov
xchg
or
xlat
jle
sub
push
ret
aas
sbb
mov
pop
mov
fild
pop
int3
push
shl
sbb
and
or
sbb
sub
add
sub
push
fild
inc
rcl
and
mov
cdq
jge
dec
retf
and
in
dec
cli
inc
into
jbe
in
jmp
inc
stos
mov
mov
mov
mov
popf
mov
jl
and
add
pop
or
push
pop
scas
xchg
ins
in
dec
call
jbe
sub
and
movups
adc
or
xor
sbb
or
pop
(bad)
(bad)
(bad)
jo
dec
mov
test
lods
mov
fisttp
sub
adc
inc
xlat
inc
aad
shl
cmp
ds
mov
inc
repz
ret
cmp
or
adc
(bad)
pop
clc
and
add
add
xor
loopne
bnd
mov
ins
rol
in
xor
cmp
adc
pop
cmps
fwait
pusha
ret
unpcklps
jmp
xor
dec
lds
cmp
add
add
ss
out
mov
push
mov
movs
mov
push
cmps
test
fwait
xchg
hlt
arpl
pop
retf
push
xlat
xor
cmp
inc
rcr
cdq
bound
imul
adc
(bad)
push
iret
dec
retf
fidivr
inc
fcomp
pop
(bad)
pop
mov
cmp
mov
pushf
outs
(bad)
pop
fcom
pop
stos
and
ret
mov
hlt
ja
dec
fst
pushf
mov
rcl
mov
cdq
or
aas
aaa
cmp
push
sub
loope
lock
mov
mov
je
inc
movs
cdq
ins
mov
jb
inc
fldcw
xor
les
aas
sub
out
pushf
or
ins
(bad)
jbe
push
fcomp
es
dec
lds
push
sti
xor
rcr
inc
leave
pop
mov
add
sub
jns
ins
icebp
sub
sub
sub
int
xlat
jae
ss
push
xlat
push
leave
pop
rcl
movs
xchg
mov
jne
and
pusha
int
mov
imul
and
sbb
inc
in
pop
lods
cwde
xchg
pusha
lock
fnstsw
popa
fisubr
jmp
xlat
dec
cmps
lds
dec
rol
cld
pop
fstp
cmp
in
ret
inc
retf
pop
lods
or
inc
mov
stos
test
test
mov
mov
test
mov
(bad)
inc
retf
inc
cmc
inc
shl
or
add
add
sbb
jae
jg
inc
cmps
mov
mov
call
nop
ror
inc
fnstsw
dec
aad
cmps
scas
xchg
mov
in
inc
stos
js
popa
les
mov
xchg
xchg
sub
push
adc
push
clc
push
movs
mov
ror
push
mov
aas
jmp
imul
ins
(bad)
jp
popa
rol
adc
and
shr
leave
bound
mov
pop
fadd
addr16
and
adc
adc
imul
fs
mov
sahf
xchg
jg
aad
loopne
in
je
push
xchg
dec
lods
imul
in
mov
movs
jae
ins
(bad)
xor
pop
xchg
loop
sar
lock
sub
jns
jge
pusha
loop
(bad)
push
bnd
jo
xor
in
repz
add
dec
ret
inc
lds
jecxz
or
(bad)
call
into
es
cmp
or
pop
ret
xchg
mov
mov
popa
call
inc
movs
mov
mov
fild
jecxz
lea
mov
jl
mov
fwait
mov
pop
mov
mov
div
retf
sbb
xor
mov
mov
fidiv
xchg
imul
mov
je
js
pop
std
cmp
shr
rcl
out
cmp
push
xlat
push
jne
inc
mov
mov
pushf
jge
imul
and
xor
adc
jl
add
pop
mov
adc
loop
mov
mov
inc
lods
outs
fidivr
popa
rol
mov
xor
aas
jmp
mov
jae
add
repz
(bad)
xor
loopne
data16
imul
add
sub
(bad)
pop
sbb
sbb
scas
xchg
imul
sbb
cmps
aad
out
and
in
pop
lods
xchg
mov
sub
stc
xor
inc
mov
retf
dec
in
xor
scas
lahf
mov
nop
arpl
dec
mov
inc
xchg
dec
stos
jg
pop
mov
pop
mov
and
ret
imul
pop
ret
xchg
mov
fisttp
loopne
in
or
and
pop
out
dec
retf
or
icebp
push
ficomp
jp
add
push
test
mov
and
out
xor
sub
or
and
sbb
cmps
jle
xor
in
mov
mov
jle
jl
mov
adc
repnz
shl
stc
sub
jbe
add
and
inc
aam
mov
(bad)
ret
xor
pop
mov
inc
mov
dec
mov
pop
cmc
cdq
test
push
rol
jle
sub
xor
fs
cmp
cli
sub
or
test
leave
ss
sbb
and
sub
pusha
movs
out
movs
xor
jno
pop
mov
mov
aam
call
fisttp
gs
mov
cwde
js
jnp
add
cmp
adc
mov
push
std
sub
xchg
imul
cmps
outs
retf
aaa
adc
repz
and
sbb
clc
sub
push
lods
call
rol
cmp
inc
lods
adc
repz
test
push
mov
inc
adc
cmp
xor
loop
sti
pop
lods
arpl
pop
mov
sar
in
rcr
jmp
pop
mov
push
adc
pop
mov
popa
mov
sbb
cmp
push
icebp
and
xchg
ins
int3
xor
in
daa
fs
imul
push
mov
adc
xor
cmc
push
inc
mov
pop
enter
loop
leave
sub
add
or
xor
push
xchg
mov
pusha
aam
sbb
jecxz
mov
test
inc
(bad)
xor
int
ret
test
sbb
das
ds
out
push
push
lds
sbb
cmovns
xor
sub
inc
repz
rol
(bad)
pop
test
js
ins
enter
ja
dec
mov
jns
jbe
gs
sbb
push
stc
push
test
and
adc
push
iret
mov
in
push
push
shl
adc
into
push
(bad)
nop
jae
call
data16
ret
pop
mov
and
dec
les
aad
lock
icebp
outs
movs
jae
outs
movs
xchg
push
retf
and
and
mov
addr16
aaa
retf
mov
add
xchg
daa
ins
cmp
add
ret
cmp
cmps
pop
ins
inc
mov
add
mov
pop
adc
xchg
jmp
mov
mov
hlt
mov
push
scas
out
movs
stc
mov
sti
mov
mov
push
pop
inc
pop
mov
out
mov
mov
lods
in
ror
repnz
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
mov
xchg
ror
clc
mov
call
stos
jmp
mov
fistp
sar
loopne
retf
mov
cwde
sti
pushf
cmc
mov
icebp
push
xor
js
inc
add
push
inc
adc
popa
cs
or
jae
arpl
bound
sub
je
pop
xor
push
pop
sbb
xor
jb
popa
xor
or
ret
xchg
sti
(bad)
int3
xchg
cmp
and
outs
push
dec
or
pop
sbb
pop
mov
fmul
outs
add
add
xor
cmp
ror
ds
push
popa
sub
ds
pop
sbb
mov
mov
mov
pop
pop
jbe
cmp
mov
mov
icebp
test
mov
int3
mov
mov
or
fs
push
sbb
sub
inc
cmp
push
and
aas
inc
add
xor
cmp
sub
mov
sbb
icebp
sbb
loope
jbe
fdiv
mov
pop
ins
and
scas
and
push
call
aam
xchg
daa
je
hlt
push
outs
adc
leave
loope
jmp
imul
loopne
retf
scas
not
ret
xchg
movs
xlat
xchg
retf
mov
xchg
ret
and
(bad)
mov
xchg
repnz
sbb
or
pop
popa
cmp
push
pop
dec
cmp
cmc
neg
ja
jns
xor
repz
sub
cwde
jecxz
mov
ins
cmp
mov
xchg
xchg
fld
gs
jle
jns
or
or
dec
and
or
pop
add
jmp
xchg
scas
loope
retf
mov
shl
out
dec
add
arpl
outs
ss
add
and
ds
pop
sub
pop
sbb
jae
adc
enter
lds
lds
push
pop
jo
je
jmp
daa
fnstenv
inc
or
movs
in
sub
inc
jo
pop
sbb
sub
retf
inc
mov
clc
mov
movs
jecxz
in
mov
cmc
test
sahf
out
scas
fidivr
ret
cmps
(bad)
lahf
into
(bad)
out
(bad)
lods
fcomp
int
cwde
sub
(bad)
pushf
jnp
sub
sub
push
dec
adc
sub
daa
ins
and
rol
bound
pop
sub
mov
das
arpl
scas
into
mov
inc
cs
push
push
jl
xchg
adc
sub
cmps
(bad)
ja
ds
xor
shl
mov
fwait
hlt
mov
leave
lods
sar
mov
mov
cmps
mov
into
icebp
mov
and
das
aad
nop
(bad)
sbb
arpl
fbstp
xchg
fadd
lahf
sbb
aaa
pusha
pop
test
jae
loope
mov
icebp
push
pushf
loop
ja
dec
sub
add
push
ds
into
mov
les
cmp
adc
in
ret
lods
mov
push
ret
add
dec
xor
popa
xor
push
cmp
pusha
add
or
dec
and
js
hlt
or
cmp
and
mov
inc
cmp
lods
pop
dec
mov
inc
xor
neg
mov
nop
add
out
jmp
inc
(bad)
fiadd
in
sbb
repnz
retf
xchg
xchg
or
cmp
stos
out
dec
dec
push
pop
sahf
jecxz
loop
jle
arpl
out
sub
aaa
div
mov
cli
mov
loope
retf
mov
minps
not
jmp
test
mov
ror
xchg
imul
nop
cmc
mov
sbb
leave
nop
mov
pop
xor
clc
ficomp
shl
mov
retf
movs
leave
es
repz
sub
jle
push
adc
add
push
mov
xchg
cmp
(bad)
adc
arpl
pusha
pop
push
dec
daa
push
adc
outs
or
cmp
cmp
mov
xchg
aas
je
clc
(bad)
fiadd
push
mov
movs
test
data16
in
out
into
push
mov
aas
popf
(bad)
mov
daa
gs
fisubr
stos
add
mov
rcl
jg
das
movs
aaa
push
aad
(bad)
cmps
mov
mov
inc
xor
mov
jae
xor
mov
xchg
(bad)
mov
loope
leave
mov
push
std
adc
xchg
bound
inc
mov
inc
add
cmp
dec
pop
loopne
mov
push
(bad)
sbb
in
ss
dec
dec
ds
mov
mov
ins
add
lods
sub
movs
out
cmps
and
(bad)
lahf
test
mov
cli
cs
rcr
fwait
leave
lea
inc
add
pop
pop
xchg
xor
rcl
sub
sahf
int3
add
mov
jno
cmp
out
fisttp
push
mov
rcr
pushf
or
gs
(bad)
out
in
sbb
popf
(bad)
in
fsubr
xchg
cs
fsubp
std
mov
dec
gs
xlat
aas
mov
cmp
shl
dec
mov
jbe
push
lahf
pop
sub
inc
push
pushf
mul
fnsave
dec
sub
enter
nop
fnsave
cmc
int
stc
push
pop
sub
jl
test
repz
imul
in
mov
xor
or
mov
mov
dec
mov
nop
cmc
mov
inc
cmp
sbb
fdiv
mov
pop
rcl
in
jecxz
call
cmp
pop
repz
call
(bad)
cli
mov
int
cmc
mov
mov
xchg
les
(bad)
lds
dec
jge
jns
jmp
mov
aaa
mov
in
sbb
pop
inc
mov
mov
jge
pop
lods
xor
push
xchg
(bad)
xor
dec
sub
pop
add
and
mov
cmp
imul
push
push
dec
adc
loopne
mov
jae
ins
and
adc
(bad)
aad
sti
pop
xor
rol
jmp
iret
or
icebp
or
pop
idiv
test
and
lods
rol
shl
add
shl
adc
mov
mov
dec
mov
push
or
test
inc
rol
inc
jmp
jns
ret
xor
sub
sbb
cwde
or
mov
adc
pop
sub
xor
pusha
popa
sub
sbb
(bad)
lods
sbb
mul
nop
js
pop
adc
out
scas
xor
sub
(bad)
mov
popa
cdq
std
imul
out
scas
aaa
jae
or
xchg
in
rol
test
mov
inc
(bad)
(bad)
lds
in
mov
aaa
push
clc
add
mov
pop
fild
sbb
dec
sub
mov
popa
cmp
jecxz
scas
jne
pop
or
movs
or
movs
clc
mov
xor
and
cld
(bad)
mov
xor
aas
jnp
push
inc
ss
retf
das
mov
bswap
jmp
jge
xor
pop
sbb
xor
cmp
mov
xchg
push
lock
mov
jne
sbb
movs
clc
mov
pop
pop
inc
or
es
lock
sub
test
or
jns
popf
rcr
pop
sbb
jmp
jae
push
adc
in
mov
pop
jno
cdq
js
jae
mov
adc
xchg
test
enter
push
inc
pop
jl
pop
cmp
and
test
xchg
outs
xchg
aas
jae
(bad)
out
push
ja
and
ins
push
cmp
mov
scas
sbb
pop
push
adc
cld
scas
in
jle
pusha
es
pop
sub
pop
push
fisttp
popa
xor
inc
inc
push
and
mov
mov
mov
ins
add
stc
xlat
mov
sub
loop
mov
clc
mov
xor
cmp
xor
fadd
pushf
xchg
das
stos
retf
push
inc
dec
add
(bad)
sbb
call
xchg
jle
imul
add
xchg
cwde
popf
or
mov
xor
inc
add
shr
xchg
scas
inc
ja
add
lahf
cld
or
sbb
cmp
pop
mov
sub
outs
cmps
pop
pop
adc
out
xchg
imul
adc
in
lds
fnstsw
dec
or
(bad)
sbb
cmp
mov
pcmpeqb
scas
adc
ret
jl
add
out
stos
fisttp
adc
ficom
jb
cmovge
repnz
mov
add
cdq
in
nop
xchg
pop
sbb
adc
cli
movs
sbb
pop
adc
out
mov
(bad)
(bad)
fdivr
inc
xchg
in
arpl
sbb
in
movs
loop
xchg
je
rcl
aas
movs
adc
imul
lods
test
jecxz
mov
adc
hlt
fild
inc
retf
in
ja
sar
sahf
loopne
idiv
daa
cwde
cli
sbb
or
jb
and
out
xchg
mov
in
lock
and
clc
mov
dec
shl
std
push
js
(bad)
stc
into
mov
lahf
and
setns
ja
inc
nop
sbb
repz
inc
fwait
div
dec
ds
repz
push
arpl
cmp
fsubp
int
retf
addr16
enter
xchg
dec
aas
jl
sti
fisttp
outs
mov
inc
push
retf
test
and
xchg
out
lahf
les
mov
nop
ss
out
lods
ds
fwait
pop
inc
xor
push
pop
cmp
mov
mov
cdq
add
push
dec
xchg
rol
dec
xor
mov
scas
imul
leave
mov
sbb
pop
dec
pop
adc
or
adc
and
adc
xor
addr16
xchg
in
jne
push
adc
lods
ret
push
and
in
loop
rcr
imul
fdivr
push
in
adc
fcomp
push
cmp
pop
mov
idiv
mov
push
jb
dec
sahf
push
jb
(bad)
xchg
push
pop
adc
cs
adc
and
cmp
iret
movs
jecxz
jo
push
push
lock
mov
add
mov
pop
xor
or
mov
xchg
gs
adc
std
rcl
jne
andps
jge
push
ss
jl
inc
outs
mov
xchg
lock
or
loop
fwait
sub
loopne
xchg
mov
cdq
pop
or
pop
xchg
shl
std
xchg
add
in
cs
cmp
neg
jnp
xor
pop
cmp
inc
push
aas
dec
lahf
push
inc
add
lds
xor
xchg
pushf
jb
push
or
mov
dec
or
retf
mov
push
push
adc
inc
adc
sub
mov
outs
or
xchg
or
daa
sbb
ins
aam
xlat
xchg
fcom
xchg
sar
push
cmp
int3
mov
pop
xchg
ds
mov
cmc
fstp
inc
pop
add
push
or
std
cmp
xchg
fwait
es
ss
movs
arpl
push
iret
mov
dec
(bad)
in
jecxz
cwde
in
stos
push
pop
pop
outs
fsubr
movs
push
inc
push
push
ss
adc
ins
pop
pop
push
ja
inc
push
pop
add
push
cmp
(bad)
dec
jo
leave
movs
loope
jb
adc
fmul
xchg
xlat
sub
dec
pop
add
cdq
sbb
repnz
mov
aad
ret
call
add
mov
jns
movs
push
dec
mov
(bad)
icebp
pop
pop
xor
mov
inc
or
mov
popa
es
lods
lds
mov
mov
pop
jbe
out
xlat
mov
movs
(bad)
cmps
loop
loope
(bad)
mov
lock
fstp
enter
xchg
ficomp
mov
push
(bad)
push
cmps
ja
jl
(bad)
fadd
ins
in
jmp
popf
test
pop
sub
int3
in
fimul
mov
cmc
jno
cmp
and
jl
or
and
cmp
adc
(bad)
mov
jne
ss
cmp
xchg
loop
sbb
pop
sbb
inc
pop
push
and
in
mov
cmps
out
retf
scas
call
mov
mov
xchg
pop
push
repz
pop
mov
mov
xchg
xor
add
retf
mov
aas
ins
stc
sar
ret
int
mov
fsubr
mov
pop
jno
ins
sub
into
pop
sub
movs
out
ins
imul
loop
retf
stos
fisubr
std
mov
bound
outs
(bad)
sub
sbb
ins
adc
pop
sbb
push
push
pop
pop
addr16
jbe
ja
imul
xor
sbb
clc
stos
clc
inc
mov
inc
loope
lods
into
aaa
stos
cmc
xchg
inc
pop
or
sbb
out
mov
test
dec
sub
jmp
lock
inc
(bad)
mov
fiadd
sub
jge
pop
mov
xchg
outs
and
and
lods
cmp
repz
pop
push
sbb
push
push
or
dec
add
push
adc
cmp
jo
dec
cmp
pop
cmp
inc
pop
cmp
cmp
push
outs
sub
add
cmps
cs
(bad)
dec
imul
sbb
fdivr
and
add
repz
test
adc
dec
fsub
pop
add
int
call
icebp
mov
imul
test
mov
sar
mov
sbb
sub
or
jae
arpl
arpl
bound
jns
dec
push
addr16
push
push
dec
adc
fwait
idiv
out
(bad)
in
lods
in
(bad)
(bad)
call
les
cmp
dec
jge
or
dec
rcl
mov
jno
es
shl
lods
cmps
imul
(bad)
lods
xchg
push
imul
mov
mov
int3
mov
jmp
mov
mov
out
mov
stc
pushf
lock
pop
xor
sub
inc
pop
add
jle
push
cmp
mov
stc
mov
xlat
xchg
int
sbb
jae
cmp
ds
push
push
mov
pop
jle
and
outs
sub
push
xchg
sub
neg
add
outs
adc
pusha
and
popa
xor
bound
arpl
mov
mov
and
cdq
int
xlat
call
jae
jb
sbb
dec
or
pusha
adc
pop
sbb
pop
adc
imul
jns
pop
das
push
sub
jns
push
cmp
xor
pop
sbb
pop
sbb
dec
or
pusha
adc
pop
sbb
pop
adc
imul
jns
pop
das
push
sub
jns
push
cmp
xor
pop
sbb
pop
sbb
dec
or
pusha
adc
pop
sbb
pop
adc
imul
jns
pop
pop
push
or
jp
popa
adc
jge
pop
stc
mov
rcl
les
lds
fistp
mov
movs
in
jmp
fild
xor
jmp
fbstp
jg
pop
cwde
mov
mul
retf
fcom
mov
repz
sbb
add
and
jns
arpl
jae
pop
sub
jno
adc
ins
aaa
int
ror
push
and
int
xchg
leave
pop
jns
adc
sbb
cmp
call
outs
push
outs
sub
inc
sub
mov
inc
ret
aam
lock
dec
push
jbe
ss
aad
mov
and
mov
mov
cld
or
ja
cwde
aad
cld
mov
cli
cwde
push
jae
add
jmp
nop
jg
jge
out
fstp
adc
sahf
inc
dec
jle
xor
push
push
and
(bad)
rcl
add
cmc
lahf
js
cmp
inc
dec
and
retf
clc
push
pop
cs
mov
cdq
ret
adc
add
dec
mov
mov
and
ret
mov
pusha
(bad)
int
loope
gs
jmp
mov
fsubr
inc
or
clc
mov
adc
xchg
in
push
dec
push
aad
adc
add
mov
pop
imul
add
cmps
in
mov
add
mov
in
nop
das
mov
retf
ja
sar
call
push
push
inc
enter
xor
jb
pop
pushf
out
jnp
jp
hlt
sbb
pushf
push
jle
ja
xor
or
sar
sub
aam
dec
cmp
(bad)
lods
dec
push
cmp
adc
ror
xchg
inc
push
out
test
xchg
xor
outs
dec
cmp
(bad)
rcr
mov
jnp
adc
jo
jns
add
jle
ret
retf
enter
pop
push
test
das
adc
mov
add
cmp
in
shr
loop
les
adc
pop
ss
mov
call
or
mov
jb
and
lock
mov
aas
stos
cli
movs
xchg
cmp
mov
jnp
out
neg
cmovnp
loopne
(bad)
dec
jge
pop
jbe
add
out
xchg
js
or
cmp
(bad)
fsubr
psllq
in
mov
mov
stos
enter
test
sub
jbe
add
enter
dec
inc
pop
pop
retf
popf
dec
pop
cmp
pop
data16
into
mov
sub
and
iret
xor
and
(bad)
cmps
in
xchg
xor
ss
mov
mov
and
rcr
gs
push
dec
push
out
jecxz
mov
(bad)
fnstsw
pop
je
pusha
ucomiss
adc
sub
mov
dec
(bad)
shl
aaa
sbb
inc
addr16
mov
xchg
shl
and
mov
add
icebp
mov
sub
cwde
int
mov
mov
pop
sbb
pop
pop
push
push
cmp
pop
push
or
xor
ret
mov
adc
das
dec
adc
dec
cli
sbb
cli
inc
xchg
pop
pop
scas
and
sub
cmp
ds
fimul
push
inc
sub
push
adc
cwde
enter
jmp
mov
or
jae
(bad)
leave
mov
adc
not
mov
push
div
mov
jge
bound
push
adc
push
adc
jns
imul
cmp
push
push
jns
dec
add
xchg
push
add
cmp
pop
cli
(bad)
call
repz
outs
cmp
into
jecxz
mov
sub
imul
mov
push
push
or
shl
fucomp
(bad)
cwde
mov
push
add
bound
pop
imul
push
fs
xor
call
adc
rcl
fs
adc
retf
mov
pop
push
xor
jecxz
mov
add
je
add
xor
test
xor
popa
add
lock
push
daa
jne
loope
repz
sbb
int3
rcl
mov
mov
das
jbe
add
test
adc
fstp
mov
shr
sbb
repz
in
pop
and
jmp
icebp
and
xor
mov
jg
enter
xor
jmp
mov
mov
xor
aad
mov
xor
mov
cmp
popf
ror
mov
js
movs
xchg
out
mov
jae
push
pop
pop
iret
push
add
repnz
sbb
inc
or
outs
sub
pop
cmp
pop
adc
jns
push
adc
lds
loope
in
fisttp
into
xchg
lahf
fiadd
fisttp
rol
mov
add
pop
push
inc
or
popa
or
add
push
cs
or
pusha
or
inc
push
call
cmp
add
loopne
push
xor
adc
xor
add
and
mov
push
mov
outs
mov
in
fst
mov
retf
sub
xchg
push
add
sar
imul
pop
dec
(bad)
into
pop
and
sti
dec
xchg
inc
pop
das
pop
mov
add
mov
stos
cwde
or
rcl
fidivr
mov
xchg
or
or
fbstp
ret
fisttp
pusha
ja
xchg
jno
xlat
mov
fs
ret
loop
outs
sub
ds
mov
xor
shr
push
push
test
jne
mov
mov
add
iret
mov
clc
fidivr
imul
scas
or
sahf
in
dec
inc
add
push
xchg
fcomp
cmp
cmp
or
lock
xchg
call
icebp
ficomp
add
mov
pop
arpl
into
call
mov
push
lods
pop
push
add
pop
pop
test
push
pop
stos
pop
js
pop
fsub
adc
cmp
sub
stc
neg
imul
push
cld
add
out
inc
popf
add
add
aaa
popa
les
test
cdq
inc
addr16
aaa
retf
out
repnz
js
enter
or
repz
cmp
mov
or
xlat
mov
or
jmp
push
add
mov
sbb
mov
mov
clc
mov
call
adc
movs
stc
mov
add
or
add
(bad)
or
hlt
cmp
loopne
mov
xor
or
loope
mov
dec
push
mov
mov
add
push
sub
sub
mov
xchg
out
leave
lea
addr16
or
clc
mov
add
pop
push
jns
out
loopne
shl
mov
xor
pushf
aad
repz
rol
rcr
cmp
sbb
pop
jno
bndstx
shr
xor
loop
xchg
enter
ja
sbb
(bad)
mov
cmp
and
pop
fisttp
mov
push
push
fdivr
fwait
sahf
xor
daa
push
(bad)
movs
out
and
shl
(bad)
les
data16
pop
rol
mov
mov
dec
std
jecxz
mov
push
lea
dec
std
in
fstp
inc
xchg
pop
inc
sbb
cmp
pop
shr
(bad)
test
add
in
test
shl
mov
scas
xor
std
sbb
stc
bound
ja
imul
fdivr
(bad)
mov
scas
xchg
adc
or
cmp
xor
or
push
cmc
(bad)
mov
push
cs
out
mov
mov
jp
jp
add
cli
mov
ins
shl
es
mov
jbe
sbb
push
dec
or
fdiv
lea
mov
popf
mov
ins
aaa
push
mov
push
stc
push
test
jns
xor
sbb
psraw
inc
in
lahf
fdivr
scas
dec
sbb
stc
mov
repz
scas
out
pushf
xchg
inc
or
cmp
in
pop
cmp
inc
daa
movs
cmp
rcl
jp
pop
adc
push
jp
jge
jl
inc
sub
dec
add
cmp
adc
arpl
push
adc
push
adc
pop
sbb
ss
push
adc
cmp
jbe
dec
push
pop
ds
sbb
jl
dec
adc
mov
loope
out
rol
repnz
int3
test
mov
ficomp
sbb
xor
mov
sbb
mov
jb
xor
nop
mov
stos
cs
jmp
or
retf
dec
arpl
push
jecxz
scas
jmp
and
ss
mov
xor
jmp
push
add
scas
loope
inc
push
das
dec
mov
bound
pop
mov
inc
add
cmp
(bad)
cmps
jne
and
test
movs
(bad)
cmp
aad
xchg
or
out
mov
lods
xchg
or
adc
add
pop
dec
test
mov
imul
ins
dec
sbb
aad
out
inc
jge
das
push
sahf
in
gs
cmp
out
fisubr
mov
mov
clc
scas
iret
dec
dec
aas
je
xor
or
out
fidivr
mov
push
shl
fcomp
clc
iret
test
hlt
sub
(bad)
cwde
jle
pop
inc
fucomp
mov
sub
aam
mov
ds
sub
retf
test
sub
push
cmp
retf
mov
adc
out
nop
push
dec
and
into
xchg
inc
arpl
xor
push
jl
add
call
add
in
add
(bad)
mov
jecxz
inc
out
fistp
cli
in
in
rcl
mov
shl
popf
enter
ds
je
imul
fdiv
jno
mov
mov
mov
push
rcl
push
sbb
xor
sub
lods
hlt
cmp
xchg
fmul
sti
mov
inc
add
xor
inc
adc
xor
inc
lahf
loope
mov
inc
push
data16
ret
or
jbe
push
adc
add
call
retf
or
inc
aas
jae
fld
adc
lock
mov
ins
mov
out
lods
mov
test
jo
adc
dec
or
pop
adc
adc
adc
sahf
xchg
pop
cdq
call
int3
sbb
push
fucomip
in
adc
mov
pop
lds
stos
in
pushf
adc
or
jecxz
xchg
or
call
push
xchg
sahf
inc
dec
add
test
fwait
inc
jae
and
push
(bad)
into
arpl
mov
jo
xor
and
(bad)
mov
mov
test
inc
xchg
adc
adc
inc
retf
hlt
push
push
sub
xor
dec
test
aas
sub
fst
pop
inc
ds
sti
add
mov
adc
fld
arpl
stc
xchg
(bad)
add
jno
jp
imul
fcom
add
or
(bad)
frstor
mov
jmp
das
dec
fsubr
or
movs
retf
jl
dec
mov
mov
adc
mov
sub
stc
jmp
or
cmc
fld
jae
fstp
push
(bad)
cmp
jmp
sub
cmps
les
popf
push
cmp
bound
push
icebp
and
mov
sbb
sti
fwait
cdq
sub
pushf
jecxz
rcr
xchg
leave
lods
out
rol
fstp
retf
pop
imul
dec
sbb
pop
sbb
adc
jns
push
adc
jle
outs
push
inc
sub
xor
jae
jb
dec
cmp
push
or
sub
inc
and
sbb
inc
add
pop
sub
push
inc
cmp
dec
cdq
cmp
jge
and
sbb
out
xor
sahf
frstor
les
jge
push
inc
out
xor
xor
jle
daa
(bad)
hlt
mov
jo
and
mov
or
cmp
loopne
stos
(bad)
es
xchg
inc
inc
or
in
cld
add
pop
stos
cmp
aas
rol
out
or
cmp
add
movs
sbb
out
jecxz
ins
pop
adc
repnz
pop
jg
pop
mov
cli
pop
cmp
push
or
int3
fild
mov
ror
mov
jle
cmps
push
jnp
add
sub
mov
call
lods
arpl
gs
ins
xor
sub
dec
mov
jo
cli
movs
push
push
test
and
fild
outs
mov
xchg
fnstsw
mov
add
pop
loop
mov
push
lods
cmp
inc
and
(bad)
jmp
sahf
mov
push
and
(bad)
out
xor
retf
stos
xchg
sub
sub
out
xchg
(bad)
and
mov
pop
jge
and
mov
push
and
inc
jo
cmp
push
dec
mov
add
std
sbb
stc
or
call
and
fldenv
xor
sbb
xor
movs
pop
pop
cs
xchg
(bad)
cmps
sti
mov
jae
outs
jne
add
push
or
adc
add
xor
pop
jmp
and
cmp
movs
in
add
lods
ja
shr
out
mov
mov
movs
dec
or
inc
ret
or
cmp
into
scas
ret
pop
mov
xor
pusha
cmp
sub
imul
loope
inc
mov
iret
test
adc
push
call
cmp
(bad)
mov
(bad)
arpl
sbb
mov
out
mov
nop
popf
inc
add
jecxz
stos
call
fsubr
std
xchg
mov
sbb
xchg
adc
adc
ror
sahf
and
ret
arpl
xchg
fwait
jg
sub
fsub
mov
add
jmp
test
cmp
or
and
out
mov
lahf
aas
outs
loopne
mov
dec
shl
xchg
cld
repnz
aaa
push
int
xchg
clc
inc
xchg
or
pop
xchg
inc
nop
xor
xchg
rcr
ficom
inc
xchg
pop
add
(bad)
pushf
mov
pop
mov
push
loopne
xchg
rcl
xor
out
out
lahf
mov
push
push
and
leave
mov
ret
fadd
hlt
xchg
sub
xchg
rol
fsub
or
fimul
mov
adc
icebp
mov
push
pop
dec
rcl
xchg
hlt
cmp
ins
xor
std
test
add
xor
fmul
imul
in
movs
(bad)
xor
repnz
ins
sub
and
pop
xchg
lock
int3
ss
jge
dec
cs
xchg
mov
fucom
nop
lods
inc
jb
ja
push
inc
xor
cmps
call
mov
ins
mov
push
push
dec
test
sti
mov
enter
mov
rcl
enter
(bad)
shl
sub
in
xlat
xchg
cmps
les
retf
xchg
sbb
jp
push
daa
addr16
add
sbb
sub
inc
xor
xor
bound
dec
pop
or
jbe
data16
ror
into
mov
stc
mov
imul
(bad)
xchg
xlat
sahf
idiv
xchg
out
fdivr
mov
lock
sbb
(bad)
test
fadd
lahf
jmp
cs
outs
add
jmp
test
push
mov
inc
pop
jmp
xchg
xor
sub
mov
imul
or
jmp
jae
xor
pop
and
ins
cs
jmp
mov
pop
lods
xor
mov
adc
adc
adc
leave
scas
enter
aaa
fs
mov
inc
mov
mov
or
aas
dec
xchg
push
push
call
mov
imul
cmp
movs
mov
imul
sub
in
lods
test
dec
or
ret
mov
cmp
and
mov
dec
mov
popf
in
push
dec
and
ss
int
mov
xchg
cmp
or
lds
inc
sub
(bad)
lock
addr16
sbb
jns
xor
in
jmp
test
sub
pop
inc
add
movs
dec
jge
sub
adc
mov
dec
xchg
sub
xor
neg
sahf
pop
sbb
loope
cmps
in
mov
inc
sub
mov
es
xchg
xor
cmp
shr
mov
mov
lds
sbb
mov
in
fiadd
es
shl
xchg
sbb
cmps
in
push
cs
adc
div
mov
jl
and
out
icebp
pop
jge
xchg
dec
add
sbb
inc
movs
(bad)
xchg
jbe
fdivr
(bad)
adc
jmp
aam
call
rcl
xchg
sub
or
cmc
mov
data16
pop
push
push
mov
scas
out
repnz
cmp
out
stos
pop
add
fnstsw
pop
dec
je
push
adc
std
nop
jecxz
mov
jb
sbb
sbb
lahf
jmp
push
mov
cmp
push
add
(bad)
out
scas
ficom
into
adc
stos
lock
inc
daa
sub
add
sti
sbb
and
pop
(bad)
cli
mov
lahf
inc
ja
xor
frstor
pop
fwait
and
add
test
mov
mov
xor
movs
and
or
jmp
fldcw
addr16
pop
jmp
pop
pop
push
enter
fidivr
adc
stc
mov
fs
adc
or
add
ss
pop
test
push
iret
aas
lahf
fmul
cmp
(bad)
loope
xchg
rcr
call
sbb
mov
in
scas
fdivr
xchg
les
fisub
dec
sub
xor
cmp
int
sbb
stc
scas
out
pop
dec
adc
fmul
mov
outs
adc
mov
lahf
lds
cmp
or
cmp
out
cli
mov
and
pop
xor
add
inc
punpckldq
movs
repnz
inc
ja
xor
jecxz
xchg
and
in
push
cmp
sbb
dec
imul
ss
loope
jae
pop
rcl
mov
movs
out
cwde
gs
dec
idiv
jg
jle
add
adc
jae
cdq
push
mov
idiv
int3
xor
mov
xchg
fistp
mov
out
xchg
enter
lods
div
loop
out
mov
xchg
cmps
mov
mov
mov
aad
sbb
jp
jnp
ins
add
adc
push
and
jge
sbb
mov
cmp
dec
sub
push
ds
loop
rcl
fist
ins
mov
hlt
mov
inc
inc
pop
sbb
inc
mov
outs
paddd
popa
and
mov
jge
adc
push
dec
(bad)
pop
push
cli
test
push
jno
push
push
leave
scas
sbb
call
pop
cmp
cmc
test
pop
ss
lods
call
mov
scas
or
cld
xlat
(bad)
(bad)
and
jg
adc
dec
adc
in
mov
xor
inc
aaa
add
add
jl
or
pusha
adc
call
xor
jmp
hlt
lock
dec
dec
xor
retf
push
arpl
gs
ficom
or
ins
es
fadd
imul
xor
jbe
call
jbe
pop
(bad)
mov
jb
cmp
sbb
jge
or
mov
cmp
push
(bad)
sub
(bad)
outs
fldlg2
adc
stos
fdivr
jo
inc
mov
imul
pusha
cmp
stos
xchg
pop
adc
cmovns
or
lock
pop
sbb
sbb
pop
push
cmp
ss
pop
test
cmps
hlt
sbb
dec
pop
sub
mov
sbb
aas
mov
mov
test
sub
int
mov
jge
and
lds
call
aam
xchg
dec
adc
pop
add
push
rcl
push
adc
rol
int3
mov
movs
and
add
jg
sub
shr
movs
aam
leave
mov
(bad)
in
mov
xchg
add
push
ins
push
sub
sub
or
and
xor
mov
outs
ret
add
cmp
inc
dec
test
cmp
out
mov
vpunpckhwd
jmp
and
and
out
adc
jl
add
pushf
lea
retf
sub
sbb
iret
loopne
mov
adc
imul
xchg
(bad)
pop
je
xlat
mov
cmp
push
pusha
cs
sti
mov
sub
icebp
mov
pop
imul
xchg
dec
inc
cmp
push
inc
sbb
retf
sub
fdivr
pop
outs
loope
mov
arpl
shl
fst
pop
push
adc
mov
jg
ss
into
cmps
cmps
ja
or
fscale
sahf
xchg
and
push
les
mov
pop
jecxz
mov
dec
jmp
jle
cmp
pop
aas
sbb
out
scas
sahf
add
adc
push
pop
sbb
movs
pop
outs
fbld
pop
adc
test
and
cdq
loop
jnp
sub
adc
xlat
test
pop
sub
daa
dec
mov
ret
nop
shl
ficom
xchg
pop
ds
fst
push
adc
lahf
fbld
pop
inc
add
or
sbb
jge
xor
or
sbb
mov
sub
mov
fsubr
(bad)
mov
inc
mov
addr16
add
add
cwde
aad
jmp
dec
mov
out
int3
mov
rcl
cwde
cld
scas
in
mov
stos
out
movs
retf
cmps
(bad)
xchg
out
hlt
fcomp
and
in
and
xchg
fnsave
sbb
jbe
addr16
dec
and
inc
add
inc
add
sub
pop
adc
jle
outs
add
fs
pop
sub
daa
arpl
inc
dec
cmp
jo
in
pop
add
sbb
sub
sar
movs
mov
jne
dec
fs
mov
xlat
imul
ret
sub
scas
addr16
adc
lock
fmul
popa
aas
outs
fcmovne
cmps
loopne
aaa
push
daa
pop
xchg
adc
xlat
adc
mov
xchg
push
addr16
sub
push
mov
sub
push
sub
xchg
ror
stos
cmp
(bad)
in
or
xchg
sbb
sub
cmp
sahf
or
fmul
dec
xchg
add
fcom
movs
xor
pop
fld
dec
scas
sub
adc
cmp
mov
pop
cs
mov
fwait
mul
mov
pop
adc
call
(bad)
pushf
addr16
inc
int3
(bad)
or
jg
imul
add
dec
adc
loope
mov
test
xchg
mov
mov
pop
aaa
js
dec
sub
loope
out
mov
mov
pop
dec
add
pop
and
gs
int
icebp
xor
adc
add
jle
(bad)
pusha
sbb
in
push
dec
or
and
in
inc
and
cmp
mov
xchg
rol
out
lods
shl
ret
push
out
les
and
pusha
(bad)
xor
dec
mov
ins
das
dec
add
(bad)
in
in
add
inc
out
fstp
cld
scas
bnd
pop
sbb
jl
jmp
inc
pop
int3
xchg
arpl
push
or
ins
or
add
add
dec
xchg
cmp
sub
xchg
movs
out
xlat
test
jbe
retf
icebp
test
gs
push
push
ja
add
mov
cmp
ins
jmp
das
jp
mov
xor
pop
or
mov
adc
pushf
lds
ror
inc
mov
mov
fnstenv
pop
xchg
cmp
push
out
xchg
cld
mov
push
and
dec
movs
jmp
jb
push
jo
or
jne
mov
mov
and
dec
or
sub
pop
in
sbb
jb
dec
or
adc
xor
inc
inc
adc
(bad)
aad
int
fwait
ret
xchg
sbb
arpl
sbb
dec
sub
push
and
and
pushf
fidivr
retf
xchg
inc
add
dec
or
sbb
add
loop
(bad)
fwait
mov
dec
or
and
add
push
mov
jo
arpl
adc
pop
sbb
jae
loopne
popf
fistp
jae
push
mov
mov
or
push
pop
pop
xor
pop
sub
int3
sahf
fisttp
stos
cmc
xchg
push
inc
ss
mov
sbb
or
jl
push
adc
sahf
fdivr
pop
cmp
cs
mul
add
mov
bound
sar
test
nop
fadd
repz
jbe
outs
adc
jg
mov
subps
add
lea
js
inc
out
mov
jbe
sbb
mov
adc
jnp
cmp
mov
inc
and
cmp
and
adc
jo
push
jmp
arpl
jno
inc
push
pop
adc
adc
add
adc
in
test
cmps
xor
push
and
mov
stos
repnz
ins
or
pop
sbb
ins
das
pop
cmp
sub
es
lock
jne
jecxz
out
mov
stos
ins
inc
cs
ror
into
dec
sub
jle
pop
neg
xchg
mov
pop
data16
pop
add
stos
rcr
mov
aas
pop
dec
test
mov
jg
xchg
lds
push
xor
pop
sbb
sbb
inc
add
js
pop
inc
or
movs
jne
xor
adc
and
and
push
adc
pop
xchg
push
push
mov
xor
sub
jb
ins
or
and
push
adc
and
in
inc
and
mov
dec
cli
cmp
imul
jecxz
mov
in
pop
adc
mov
push
out
mov
(bad)
adc
xchg
aam
aam
cmps
dec
data16
clc
arpl
cld
bound
fbstp
test
or
das
push
pop
dec
fadd
dec
or
cs
fs
push
rcl
pop
or
cmp
ret
retf
movs
sar
pop
ja
dec
sti
xchg
mov
xchg
xchg
clc
mov
mov
xor
sub
mov
outs
popf
fadd
jae
aas
jae
xchg
xchg
in
inc
xchg
stos
clc
mov
rcl
cmp
sbb
loopne
imul
dec
adc
adc
and
cld
test
scas
inc
fld
sub
std
mov
xchg
aam
loope
not
dec
mov
sub
stc
mov
xor
dec
pop
jns
ror
mov
sahf
mov
xchg
mov
add
js
das
jno
movs
out
cli
mov
push
(bad)
imul
add
and
int3
nop
fst
stos
sti
test
dec
and
dec
jmp
pop
add
push
push
and
pop
jecxz
ror
adc
pop
add
and
and
jb
push
les
add
and
mov
adc
mov
adc
sub
pop
int3
popf
mov
xchg
fiadd
mov
jbe
xor
daa
bound
xor
loop
mul
mov
xchg
jno
jns
push
push
inc
(bad)
rcl
cmp
repz
ins
jbe
dec
cmp
icebp
repnz
aam
hlt
(bad)
lods
mov
les
jmp
cmp
cmp
pop
mov
cmc
jl
mov
jle
ins
aaa
push
cmp
or
or
scas
in
pushf
(bad)
lods
out
add
pop
stos
sbb
jg
push
sub
add
dec
and
add
pop
lahf
sbb
adc
mov
arpl
xor
pop
add
cmp
cmp
pusha
sub
inc
sbb
xchg
ret
(bad)
hlt
test
xchg
inc
adc
sub
fs
iret
xchg
in
ret
push
push
ja
mov
fwait
xchg
push
dec
or
xchg
(bad)
je
inc
aaa
inc
add
mov
ins
xor
jg
imul
xchg
clc
sahf
push
pop
sub
stos
neg
add
push
outs
cmp
mov
out
cmp
and
pop
sbb
jae
pop
add
daa
inc
xchg
adc
push
add
dec
addr16
out
mov
and
daa
dec
repnz
(bad)
call
retf
cdq
fist
xchg
icebp
mov
leave
push
test
in
rcr
dec
add
cmp
ss
inc
mov
test
(bad)
or
pop
jmp
xchg
fistp
stc
inc
push
inc
or
dec
jecxz
push
popa
add
and
ins
and
sbb
popf
fidiv
popf
pop
inc
xor
pop
out
or
xor
fisttp
dec
or
cmovp
add
daa
inc
cmc
out
div
daa
popa
and
sbb
pop
iret
push
push
adc
inc
or
out
cmc
mov
call
gs
repz
xchg
es
and
jecxz
imul
mov
jae
push
cs
xchg
jecxz
fnsave
pushf
fiadd
add
je
(bad)
cmps
retf
mov
pop
or
and
fdivr
addr16
jmp
lods
call
outs
push
aam
ins
cs
push
bound
push
pop
aaa
or
mov
push
sub
addr16
call
cmp
inc
adc
idiv
iret
mov
or
das
pop
mov
fwait
ret
shl
mov
sub
xchg
int
jb
jge
pop
sbb
adc
dec
pop
and
fisub
push
out
xchg
out
(bad)
(bad)
je
pop
push
sub
lods
sar
or
xchg
sar
xor
add
xor
pushf
aam
fsubp
mov
xlat
sub
enter
jne
sub
aaa
inc
add
or
daa
fs
aaa
js
cmp
inc
adc
jnp
push
sbb
pop
add
push
adc
lahf
fnstsw
aaa
push
call
add
jmp
jl
adc
pop
pop
dec
mov
icebp
jp
sub
gs
add
jmp
jmp
test
mov
dec
adc
pop
sahf
adc
push
sbb
les
popa
cs
(bad)
(bad)
mov
shr
outs
cmp
cmp
jecxz
fldenv
xchg
fcom
fldenv
call
aaa
ins
or
ds
cmp
retf
or
aas
sahf
repnz
aad
mov
mov
xchg
div
mov
lock
test
dec
and
aas
and
gs
gs
xor
in
stos
repnz
cmp
xor
push
jmp
mov
je
cmp
push
jmp
add
enter
je
mov
sahf
aad
push
jnp
jns
test
aaa
iret
pushf
(bad)
mov
xchg
(bad)
stos
loopne
mov
inc
xor
aad
ficom
sti
test
dec
das
jp
mov
jns
addr16
es
dec
and
ja
sub
nop
repnz
fstp
xor
pop
jb
sbb
pop
cmp
push
adc
jae
inc
jmp
xor
lods
fiadd
sbb
jb
loopne
aad
cmp
rcr
xor
and
sub
jae
jg
fdivr
test
xchg
imul
loope
addr16
in
pop
(bad)
fild
cwde
sti
outs
fsubr
mov
arpl
dec
loope
out
xchg
icebp
(bad)
aam
daa
dec
sub
cmp
push
adc
jbe
or
ror
add
xor
dec
sub
loop
cld
pop
je
outs
cmc
aam
clc
xchg
fcom
xchg
jmp
ds
sub
rcl
adc
sub
sbb
sti
adc
inc
out
cmps
fadd
xchg
mov
pop
add
adc
stos
cmc
xchg
pusha
xor
retf
or
bound
dec
fucomp
mov
popf
repnz
cdq
aaa
inc
sbb
mov
and
cs
loopne
in
ret
dec
rcl
xlat
jne
cmp
push
xchg
fist
or
cmp
inc
add
sbb
pop
ds
mov
and
popf
and
pop
call
and
jne
xor
and
push
loopne
mov
call
jl
lds
inc
xor
je
pop
popf
fdivr
shl
jg
sbb
aaa
push
cmp
xchg
retf
test
jo
xor
repz
pusha
dec
aaa
jno
and
mov
ficomp
push
xor
add
stos
fistp
and
push
or
cmps
lods
xchg
(bad)
mov
mov
add
xchg
cld
mov
add
pusha
adc
xchg
(bad)
mov
outs
adc
xor
inc
sbb
inc
mov
outs
sbb
mov
pop
out
adc
scas
out
ret
test
or
popf
jmp
addr16
pop
out
out
or
scas
retf
(bad)
shl
das
jne
pop
hlt
cmp
fisttp
mov
mov
inc
scas
repnz
xchg
repnz
mov
mov
push
out
shr
pop
call
and
or
mov
imul
aaa
jle
addr16
or
pushf
out
mov
push
addr16
jge
push
aas
es
jnp
lahf
aas
pop
cmp
inc
mov
loop
sub
cli
and
test
jno
daa
inc
add
cli
nop
loopne
mov
ror
xlat
or
pop
sbb
das
ja
add
pop
jmp
in
mov
pop
and
jle
bound
iret
fst
xchg
xor
cld
scas
call
ss
cmp
lods
jmp
int
imul
pop
xor
adc
push
scas
in
xchg
cmp
cs
pop
(bad)
repnz
fld
test
lods
loopne
mov
cmps
fild
push
jne
bound
test
(bad)
int3
adc
shl
pop
das
push
jnp
cmp
jecxz
imul
xor
es
test
mov
xchg
bound
pop
sbb
pop
xchg
sbb
js
dec
pop
sub
test
(bad)
outs
cdq
movs
idiv
pusha
out
xchg
ror
jmp
or
mov
jno
push
push
add
pop
sbb
jnp
mov
dec
or
xchg
outs
das
cs
scas
cmc
popf
int3
ja
rol
cmps
sar
mov
push
(bad)
arpl
jle
mov
sub
mov
jae
push
out
in
aam
lds
ror
imul
loopne
fnstcw
stos
call
aaa
inc
pop
jb
jnp
ret
repnz
or
xlat
or
stos
rcl
or
retf
add
jecxz
fwait
push
xor
add
and
repz
lods
inc
cmp
sbb
cmps
shl
shl
mov
inc
or
aas
fisub
popa
fcom
shl
jmp
cmps
cli
test
js
and
or
lods
retf
inc
aaa
je
cmp
mov
xchg
mov
test
mov
(bad)
(bad)
out
ins
sub
in
lahf
mov
inc
adc
pop
xchg
(bad)
pushf
lock
xor
jae
loop
mov
xchg
icebp
mov
adc
pop
scas
sbb
int
fcomp
pop
jecxz
pop
cld
sub
popa
fiadd
and
(bad)
idiv
(bad)
mov
mov
pop
sbb
cmc
lods
(bad)
fisub
jb
pop
sbb
cmp
add
jnp
dec
adc
mov
mov
xchg
fdivr
in
cli
jle
adc
sub
(bad)
into
pushw
push
sbb
cmp
leave
pusha
add
jle
pop
cmp
and
xchg
pushf
fdiv
mov
mov
add
ja
arpl
cwde
into
lea
iret
mov
and
push
test
sub
push
sub
cmp
outs
or
fcom
add
pop
sub
cwde
fidivr
retf
mov
movs
(bad)
scas
call
cmps
call
fcomp
loop
cld
scas
in
push
dec
or
pop
sub
fisubr
inc
ret
xor
movs
lods
int
push
pop
in
nop
aam
mov
add
push
sbb
jmp
mov
ins
xor
out
inc
andps
jnp
push
pop
loopne
fstp
and
div
lods
in
lahf
les
daa
out
lods
not
popa
es
add
outs
sbb
adc
push
popa
imul
mov
mov
rcl
leave
mov
inc
and
add
xchg
int
mov
outs
mov
pop
adc
mov
mov
add
cwde
movs
sub
and
out
cmc
popf
stos
push
mov
pop
push
in
adc
ins
sub
xchg
mov
mov
jb
dec
in
popf
leave
mov
sub
push
scas
dec
sub
xor
push
pop
cmp
sub
cmp
clc
call
pop
dec
cmp
pop
xchg
xor
outs
xor
pop
bound
jno
dec
mov
and
(bad)
iret
xchg
in
fnstenv
dec
mov
jle
and
iret
test
int
js
jge
and
adc
in
xchg
int3
push
dec
adc
loope
add
scas
mov
outs
sbb
ret
les
lock
xlat
(bad)
xchg
jp
ins
dec
pop
ja
leave
xchg
rcl
sbb
jo
dec
or
xor
add
ds
sbb
pop
cmp
clc
fs
mov
icebp
add
std
mov
retf
popf
call
adc
fisub
dec
add
sub
add
ins
ss
sbb
cmp
pop
sbb
jmp
rcr
retf
jmp
mov
or
jbe
cmp
push
cmp
pop
push
aaa
inc
aaa
cmp
mov
jnp
push
adc
out
mov
xchg
movs
retf
movs
out
retf
daa
fisttp
push
and
shl
pop
pop
sahf
(bad)
mov
(bad)
cmc
mov
dec
das
imul
push
cld
xchg
int
mov
imul
bound
jne
ja
or
sti
sahf
stos
cld
mov
lods
js
cmps
loope
scas
mov
sub
mov
mov
pop
push
sub
and
jns
and
outs
aad
add
xor
int
mov
(bad)
(bad)
sub
inc
aas
pop
pop
or
pop
(bad)
wrmsr
mov
xchg
fisubr
mov
xchg
test
push
xor
or
and
mov
dec
and
jbe
push
fcom
pop
out
std
sahf
ret
lahf
repz
js
sub
push
jmp
inc
das
push
cld
xor
adc
push
(bad)
jb
pop
into
gs
sbb
inc
or
xor
je
cmp
inc
mov
xchg
mov
test
cmp
cs
icebp
in
test
out
(bad)
ja
pop
out
(bad)
inc
push
outs
movs
sbb
push
sbb
loopne
inc
add
sbb
pop
inc
loop
aam
lahf
sar
push
loope
div
into
mov
out
inc
js
imul
or
jl
xchg
fld
xor
xchg
in
int3
popa
or
popf
hlt
and
jae
fdiv
mov
data16
add
pop
cmp
cmps
repz
pop
pushf
cmps
lds
fcomp
call
cmc
xchg
fidivr
ja
imul
dec
or
mov
dec
cmps
add
jg
inc
movs
adc
pop
xor
cmp
(bad)
cmp
fisubr
fs
inc
or
loop
and
xor
and
inc
or
mov
jae
adc
jo
jle
xchg
xor
push
and
pop
jmp
(bad)
out
mov
jne
jo
test
fdiv
call
aad
mov
icebp
push
and
in
cmps
loope
rol
cli
mov
add
jle
outs
or
mov
mov
lahf
push
outs
pop
and
mov
sahf
(bad)
mov
mov
jns
inc
and
pop
add
inc
sbb
xor
inc
in
aas
pop
in
ins
pushf
fadd
std
test
xchg
xlat
mov
data16
sbb
inc
mov
ins
ds
fild
pusha
jno
xchg
fld
(bad)
lds
outs
cmp
xor
std
jmp
mov
add
shr
lock
out
xchg
(bad)
and
imul
pop
push
jnp
jbe
pop
sub
mov
jmp
cld
cwde
test
or
jp
iret
lea
js
push
test
inc
and
jns
jbe
push
out
loopne
cld
sahf
int
in
bound
push
cmp
push
add
jb
xor
cmp
in
test
cmps
bound
dec
or
xor
adc
stos
cmp
adc
imul
mov
sbb
and
repnz
and
or
pop
pop
pop
jnp
sti
out
shr
ret
add
add
xchg
add
push
or
mov
pushf
fbstp
pusha
xchg
add
jmp
push
inc
fdiv
stos
adc
adc
sub
add
sbb
fs
ret
mov
(bad)
ins
sbb
(bad)
mov
lods
icebp
mov
fidiv
xchg
clc
mov
sahf
mov
mov
sbb
sbb
inc
movs
add
and
mov
call
dec
mov
outs
cmp
pop
outs
test
or
jnp
in
repz
(bad)
xor
shl
add
shl
inc
(bad)
xlat
popa
xor
pop
adc
sub
mov
push
adc
pop
ins
push
je
aaa
mov
test
xchg
add
stc
xchg
xchg
mov
adc
add
push
adc
sub
jmp
push
and
push
(bad)
(bad)
in
mov
dec
sbb
sti
int
fisub
out
ss
pop
out
fimul
mov
call
or
xchg
cmps
ror
loope
pop
dec
or
loopne
out
lods
cli
or
cmp
push
xor
mov
jl
pop
sbb
dec
out
push
scas
fcomp
jo
ds
out
or
into
mov
mov
outs
xor
cmp
pop
loope
xchg
test
or
mov
adc
cld
xchg
fst
push
jp
mov
jo
push
or
adc
add
dec
mov
mov
in
mov
jge
mov
scas
jmp
aam
cli
daa
lahf
(bad)
xchg
repnz
jecxz
out
adc
dec
sbb
add
in
mov
repnz
or
call
xor
sbb
pop
add
xchg
push
add
push
or
sbb
xor
sbb
cvtpi2ps
(bad)
push
cmp
push
sbb
adc
or
adc
sbb
sbb
sbb
mov
sbb
xor
sbb
mov
sbb
sbb
sbb
sbb
packuswb
sbb
sbb
or
or
mov
sbb
push
sbb
adc
mov
sbb
sbb
sbb
cmp
sbb
or
or
jbe
sbb
adc
sbb
add
add
add
rdtsc
nop
pop
or
addr16
sbb
sbb
push
imul
sbb
adc
or
sbb
adc
add
push
imul
sbb
xor
sbb
cvtpi2ps
xor
sbb
or
or
push
add
sbb
adc
sbb
adc
out
or
imul
sbb
adc
sbb
adc
out
inc
xor
or
daa
sbb
adc
add
and
sbb
or
or
daa
sbb
adc
dec
sbb
adc
xor
or
or
daa
sbb
adc
add
and
sbb
or
or
daa
sbb
adc
dec
sbb
adc
addr16
sbb
sbb
cld
adc
cmp
sbb
mulps
sbb
sbb
or
xor
sbb
or
xor
sbb
adc
sbb
adc
out
or
imul
jbe
sbb
adc
out
inc
xor
xor
(bad)
add
add
mov
sbb
addr16
sbb
sbb
cmp
sbb
sbb
push
addr16
sbb
sbb
pop
or
imul
sbb
xor
sbb
cvtpi2ps
or
push
pop
or
xor
sbb
aas
xor
pop
imul
sbb
xor
sbb
cvtpi2ps
or
push
sub
cmp
dec
sbb
adc
xor
or
imul
sbb
xor
sbb
cvtpi2ps
or
push
or
cmp
dec
sbb
adc
xor
or
imul
sbb
xor
sbb
cvtpi2ps
or
invd
cmp
dec
sbb
adc
push
imul
sbb
push
sbb
adc
sbb
add
cmp
xor
sbb
pop
cdq
adc
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
xor
sbb
imul
sbb
sbb
adc
and
sbb
sbb
sbb
sbb
in
push
sbb
xor
sbb
cvtpi2ps
xor
sbb
imul
sbb
sbb
adc
and
pop
sbb
sbb
loope
sbb
xor
sbb
cvtpi2ps
xor
sbb
imul
sbb
sbb
adc
xor
pop
sbb
sbb
in
sbb
xor
sbb
cvtpi2ps
xor
sbb
imul
imul
cdq
push
sbb
sbb
sbb
sbb
jne
sbb
xor
sbb
cvtpi2ps
push
cmp
sbb
adc
or
imul
cdq
push
sbb
sbb
sbb
sbb
xchg
or
imul
adc
sub
xor
sbb
adc
addr16
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
sbb
pop
push
sbb
adc
sbb
adc
cmp
cmp
jbe
sbb
adc
cmp
sbb
adc
sub
sbb
sbb
sbb
sbb
aas
mov
sbb
or
or
jbe
sbb
adc
or
adc
xor
adc
sbb
pop
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
adc
sbb
sbb
sbb
sbb
sbb
sub
sbb
sbb
pop
sbb
or
inc
sbb
adc
jbe
sbb
adc
bndstx
scas
push
ret
jae
ja
jae
shr
dec
adc
dec
xchg
scas
inc
sbb
sbb
scas
inc
mov
adc
xchg
scas
inc
mov
dec
adc
iret
sbb
scas
inc
mov
cmp
sbb
sbb
cmp
sbb
sbb
adc
iret
adc
sbb
dec
xchg
scas
push
ret
xor
sbb
xor
dec
xor
sbb
add
sbb
cmp
sbb
push
sbb
or
sbb
sbb
sbb
adc
push
xor
xor
sbb
adc
pop
cmp
push
sbb
adc
adc
sbb
sbb
adc
sbb
or
sbb
sbb
sub
sbb
sbb
or
sbb
sbb
imul
xor
sbb
adc
pop
adc
xor
adc
pop
jbe
sbb
adc
leave
push
sbb
xor
sar
push
sbb
adc
push
sbb
adc
sbb
sbb
sbb
sub
sbb
add
sbb
pop
sbb
push
sbb
adc
add
sbb
sbb
sbb
sbb
or
inc
sbb
adc
sbb
adc
sbb
adc
and
jbe
sbb
adc
sbb
sbb
push
jbe
sbb
adc
sbb
adc
sbb
adc
sbb
xor
sbb
getsec
adc
imul
sbb
adc
aaa
adc
sbb
adc
(bad)
cmp
sbb
xor
sbb
sbb
sbb
adc
(bad)
pop
xor
sbb
movlps
push
sbb
adc
sbb
xor
sbb
sbb
sbb
sbb
inc
inc
sbb
sbb
sbb
jbe
sbb
add
sbb
or
sbb
or
sbb
or
sbb
imul
sbb
adc
xor
sub
sbb
sbb
sbb
sbb
or
or
imul
xchg
scas
movntq
xor
sub
sbb
sbb
sbb
fisttp
sbb
jno
sbb
xchg
scas
movntq
xor
cdq
adc
sbb
sbb
sbb
push
sbb
adc
or
sbb
pop
sbb
sbb
sbb
addr16
sbb
or
sbb
adc
sbb
nop
or
or
imul
sbb
xor
sbb
add
adc
inc
sbb
sbb
sbb
or
or
imul
adc
or
sbb
or
out
adc
sbb
or
sbb
or
jb
sbb
mov
sbb
sbb
xor
push
imul
sbb
xor
sbb
adc
sbb
addr16
sbb
addr16
sbb
lsl
sbb
adc
xor
sbb
pop
xor
push
sbb
adc
push
and
adc
adc
iret
xor
sbb
or
cmp
pop
sbb
sbb
adc
adc
cmp
sbb
sbb
adc
sub
or
bound
sbb
sbb
sbb
pop
xor
push
sbb
adc
sbb
sbb
sbb
sbb
pop
xor
push
sbb
adc
adc
xor
bound
sbb
sbb
or
add
sbb
cmp
sbb
xor
push
sbb
adc
adc
push
sub
or
bound
sbb
sbb
sbb
pop
getsec
pop
push
sbb
adc
or
push
dec
iret
xor
sbb
or
sbb
iret
xor
sbb
or
or
bound
sbb
sbb
cmp
sub
sbb
pop
xor
sbb
pop
or
adc
or
or
bound
sbb
sbb
sbb
sbb
push
pop
xor
sbb
pop
or
pop
push
sbb
adc
sbb
sbb
sbb
or
sbb
aas
sbb
pop
xor
push
sbb
adc
adc
loope
sbb
iret
or
sbb
xor
sbb
or
or
ret
or
or
and
or
push
adc
sbb
or
sbb
iret
xor
sbb
or
iret
xor
sbb
or
jnp
or
ret
push
iret
xchg
pop
sbb
sbb
push
sbb
invd
push
xchg
scas
xor
sbb
or
bound
sbb
sbb
iret
or
or
xchg
scas
or
xor
sbb
pop
xor
push
sbb
adc
sbb
sbb
sbb
iret
xor
sbb
or
push
pop
or
xor
sbb
pop
xor
push
sbb
adc
or
xor
or
or
push
iret
or
or
or
daa
inc
out
out
adc
adc
push
or
bound
sbb
sbb
or
add
sbb
aas
sbb
pop
xor
push
sbb
adc
or
push
xor
xor
sbb
or
pop
xor
adc
or
xor
sbb
add
ud2
sbb
sbb
sbb
sbb
pop
xor
push
sbb
adc
sbb
sbb
sbb
sbb
pop
xor
push
sbb
adc
sbb
sbb
sbb
pop
or
pop
push
sbb
adc
sbb
sbb
sbb
sbb
sbb
push
sbb
adc
add
sbb
sbb
jbe
sbb
adc
ins
sbb
adc
or
bound
sbb
sbb
sbb
or
or
xor
aaa
sbb
adc
sbb
sbb
adc
sbb
sbb
sbb
xor
sbb
adc
push
sbb
adc
adc
adc
push
sbb
adc
sbb
xor
xor
sbb
pop
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
into
ror
sbb
shl
cmps
sbb
sbb
mov
sbb
jne
pusha
push
jl
aaa
dec
jl
jbe
imul
aaa
dec
jl
jbe
imul
jl
jge
imul
imul
xor
push
jbe
and
aaa
sub
sub
sub
ins
ins
imul
ins
ins
imul
cmp
jnp
jo
push
jl
dec
jbe
jl
and
cs
jp
das
sub
sub
cmp
push
jl
aaa
dec
jl
jbe
imul
aaa
dec
ins
ja
jo
jl
jl
jbe
imul
jl
sbb
sbb
sbb
sbb
sbb
sbb
dec
pop
pop
dec
pop
pop
dec
adc
sbb
enter
or
sbb
ja
jg
jo
jne
jl
sbb
sbb
cmp
ror
sbb
pop
sbb
cld
pushf
in
stos
repnz
jmp
fidiv
nop
shl
cmc
test
fwait
call
xchg
shl
shl
mov
xchg
in
jp
dec
or
mov
mov
push
dec
loopne
dec
lock
xchg
or
nop
jo
xchg
xchg
lods
lea
lods
jo
cli
dec
bswap
add
push
mov
in
xchg
mov
mov
inc
add
push
sbb
or
pop
jno
add
shl
jecxz
frstor
ins
sub
es
jle
push
es
outs
sqrtps
mov
gs
pop
push
dec
cs
or
stos
fstp
adc
imul
cs
and
mov
xchg
div
ror
rol
mov
jo
jo
inc
pop
inc
or
mov
repz
mov
stc
mov
rcl
mov
mov
and
inc
pop
jge
ins
push
ins
sub
dec
cmp
adc
lods
into
sub
(bad)
int3
scas
int
int3
xchg
call
fmul
mov
lods
jmp
xchg
aad
(bad)
mov
or
push
xor
and
and
jb
inc
aaa
je
xchg
aam
les
xlat
mov
pop
add
leave
mov
test
aam
in
scas
mov
lods
jecxz
ret
sbb
jmp
retf
test
(bad)
mov
mov
fdiv
ins
das
dec
out
mov
sub
and
cmovl
pop
aas
jo
push
adc
sahf
cld
jp
push
fcomp
or
dec
or
pop
adc
(bad)
ds
xchg
rcl
fisubr
xchg
(bad)
mov
rcr
cmc
xchg
hlt
mov
mov
into
jle
inc
add
adc
shr
mov
push
adc
or
dec
out
lods
inc
jae
scas
std
mov
hlt
cwde
call
mov
scas
cld
mov
imul
ficomp
into
xchg
in
aam
iret
jae
(bad)
mov
jae
push
aaa
push
adc
pop
aaa
jo
and
ds
call
and
call
and
jne
aam
mov
movs
outs
add
or
xchg
daa
inc
add
adc
pop
pop
xor
adc
imul
loop
out
nop
xor
pop
sbb
push
add
neg
imul
stc
xchg
in
cmc
xor
rol
sub
sbb
sub
(bad)
cmps
aam
arpl
adc
lds
xor
pop
push
jb
dec
xchg
out
lods
fild
and
ror
inc
or
jno
iret
xchg
out
shr
dec
jne
pop
xor
mov
jle
pop
jecxz
pop
sub
xor
int3
xchg
xlat
xor
les
dec
or
aas
dec
fistp
dec
push
push
or
into
mov
dec
push
aam
lock
dec
or
add
ins
orps
iret
addr16
out
icebp
fwait
outs
xor
push
pop
add
(bad)
mov
inc
and
cdq
test
inc
div
sub
into
cwde
fstp
jmp
fadd
mov
push
clc
xchg
leave
stos
into
mov
dec
or
inc
loopne
push
mov
ret
pop
pop
cmp
ret
pushf
ficomp
mov
or
addr16
and
ret
mov
imul
mov
sub
or
mov
mov
(bad)
sub
cwde
shl
ds
loope
inc
add
push
xchg
icebp
xchg
aad
inc
mov
pop
cs
xchg
xchg
dec
aas
jo
jg
test
imul
dec
out
dec
mov
add
xchg
ror
push
ins
ss
sbb
add
push
xor
add
outs
mov
popf
rol
cmp
dec
adc
sahf
repnz
and
push
pop
int3
mov
mov
mov
stos
inc
dec
or
pop
imul
(bad)
fistp
hlt
scas
ror
dec
mov
push
pop
push
or
push
ud0
outs
cmp
jne
push
cmp
in
leave
(bad)
scas
cdq
jl
push
adc
mov
test
xchg
cmc
mov
call
push
push
ret
mov
cmps
retf
fs
loop
dec
cmovne
dec
pop
out
not
push
push
sti
gs
inc
add
mov
shl
sbb
test
into
xchg
pushf
retf
(bad)
jmp
and
int
shl
fcom
and
mov
mov
stos
neg
or
fwait
xchg
int3
scas
ins
rol
push
inc
sbb
stos
repz
adc
dec
add
aas
jl
pop
add
mov
retf
or
mov
push
push
cmp
mov
lea
cld
mov
ins
xor
int
fld
adc
or
rcl
cmp
fst
dec
adc
les
lds
mov
xchg
inc
add
mov
mov
daa
push
ss
jne
div
mov
mov
dec
or
ds
jmp
pop
sub
dec
sbb
xchg
hlt
mov
outs
cmp
cmp
fild
add
sbb
inc
in
adc
pop
sbb
and
push
pop
push
and
pop
mov
sub
in
mov
out
(bad)
mov
add
mov
xchg
jl
sub
sbb
pop
cld
lahf
std
add
fwait
imul
and
ja
movs
jmp
mov
add
rol
or
mov
test
add
xor
rcr
mov
out
adc
add
cmp
and
push
cmp
out
addr16
pusha
and
movs
jmp
sbb
jbe
ja
ins
repnz
mov
jmp
jb
retf
xchg
repz
sbb
js
push
and
pop
dec
(bad)
mov
jmp
loop
enter
jae
jae
and
dec
or
loop
jle
mov
call
and
pop
pop
inc
add
les
xchg
jge
ins
push
ins
sub
dec
loope
dec
mov
add
jns
jae
rcl
cs
push
and
xchg
xchg
lock
jae
outs
push
jnp
jp
lds
js
lds
jo
ins
adc
repz
fnstsw
ss
xor
cmp
xchg
xlat
mov
xchg
(bad)
mov
push
dec
cld
xchg
xlat
movs
(bad)
push
aas
jo
gs
movs
loopne
(bad)
popf
dec
(bad)
mov
mov
mov
mov
jg
dec
mov
xlat
and
les
mov
xor
outs
push
pop
adc
or
adc
jge
iret
inc
sbb
sbb
add
std
stos
dec
(bad)
mov
mov
mov
(bad)
adc
push
xor
jno
jg
std
sub
cmp
je
push
loopne
cmp
jbe
ja
repz
sti
mov
mov
jne
push
call
mov
pop
xchg
iret
mov
fild
dec
ss
mov
enter
lds
call
hlt
test
mov
mov
mov
xchg
shl
ret
jmp
test
mov
mov
out
mov
loope
xchg
mov
mov
(bad)
fwait
add
or
sub
inc
xor
inc
or
add
loope
shl
call
push
test
lods
les
into
lods
aad
ds
pop
imul
dec
push
pop
out
fcomp
repz
imul
sub
cwde
jmp
jg
jno
pop
ds
mov
(bad)
mov
jae
out
fadd
dec
out
jl
push
push
and
ins
ds
inc
mov
pop
or
push
or
mov
imul
push
ss
jne
repnz
fwait
mov
pop
ds
push
in
fcom
pop
adc
pop
daa
jle
popa
in
push
add
clc
and
xor
and
ret
mov
cmp
jns
jl
fcom
out
mov
mov
mov
adc
dec
or
fs
dec
sub
out
xlat
sub
adc
jge
push
and
xchg
hlt
sbb
xor
adc
dec
mov
cld
mov
lods
into
xchg
cld
ss
inc
pop
retf
xor
pop
add
xor
stc
xchg
leave
mov
mov
mov
and
xor
int3
mov
lods
(bad)
daa
dec
minps
test
gs
sbb
dec
add
mov
inc
pop
cld
(bad)
out
mov
jle
push
ja
inc
or
lds
jno
ret
inc
push
push
cmp
mov
in
stos
xacquire
mov
dec
or
push
inc
sub
icebp
xchg
lock
ja
shl
dec
or
push
sub
ret
mov
inc
adc
dec
adc
inc
test
stos
in
ficomp
sub
adc
mov
xchg
mov
add
cmp
push
sub
cmps
loope
fld
jge
push
adc
pusha
xor
push
mov
sbb
inc
cmps
shl
sbb
jle
push
adc
(bad)
mov
mov
and
inc
and
cdq
ficom
mov
popa
cmp
sub
jae
(bad)
pushf
(bad)
mov
adc
inc
or
pop
into
sub
push
sbb
retf
out
mov
cwde
imul
pop
sbb
scas
in
mov
out
pop
adc
push
jmp
sub
repnz
sahf
ret
mov
jns
dec
mov
fwait
stc
das
sbb
inc
xor
leave
pushf
out
mov
mov
inc
add
adc
dec
fcomp
sbb
cwde
fnstenv
add
cs
dec
push
call
sahf
repnz
rcr
enter
sub
pop
adc
ins
mov
add
pop
xor
mov
mov
pop
add
xchg
not
adc
jmp
cmp
fimul
or
sbb
sub
shl
jo
into
test
mov
pop
push
jns
push
jmp
xlat
pop
dec
push
push
or
(bad)
hlt
xchg
ins
adc
repnz
ror
inc
adc
sar
int
repz
pop
jmp
inc
xor
sub
push
add
mov
mov
lods
inc
xor
add
xchg
push
add
push
inc
mov
sbb
sbb
sbb
out
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cdq
sbb
sbb
push
mov
aam
mov
dec
jno
push
imul
cmp
ja
jbe
cmp
cmp
ja
jo
cmp
dec
cmp
jl
adc
adc
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
xor
sbb
cmp
sbb
pop
or
sbb
cmp
sbb
or
sbb
sbb
sbb
sbb
sbb
cdq
or
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
or
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
mov
or
sbb
pop
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jns
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
aaa
ins
jl
ins
sbb
sbb
cmp
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jns
imul
sbb
sbb
sbb
sbb
pop
or
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
imul
sbb
adc
jns
sbb
or
sbb
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
sbb
sbb
sbb
sbb
sbb
and
or
ins
sub
sbb
sbb
sbb
sbb
pop
inc
sub
sbb
ror
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
sbb
mov
adc
push
sbb
adc
push
sbb
adc
push
sbb
adc
xor
sbb
sub
sbb
sbb
sbb
sbb
or
sbb
sbb
adc
sbb
sub
sbb
sbb
sbb
sbb
or
sbb
sbb
adc
sbb
sub
sbb
sbb
sbb
sbb
or
sbb
sbb
adc
sbb
sub
sbb
sbb
sbb
sbb
adc
sbb
xor
or
sbb
adc
sbb
sbb
sbb
sbb
xor
sbb
adc
or
sbb
xor
sbb
or
sbb
push
sbb
sbb
sbb
or
xor
sbb
adc
sbb
sub
sbb
sbb
sbb
sbb
or
sbb
sbb
xor
sbb
sub
sbb
sbb
sbb
sbb
or
xor
sbb
xor
or
sbb
or
sbb
adc
sbb
sbb
xor
xor
sbb
xor
sbb
or
sbb
or
sbb
adc
sbb
sbb
sbb
or
sbb
add
cwde
sbb
sbb
xor
sbb
push
sbb
adc
or
sbb
add
sbb
or
sbb
adc
xor
xor
sbb
xor
add
sbb
xor
sbb
push
sbb
adc
sub
sbb
push
sbb
sbb
sbb
sbb
cdq
adc
sbb
imul
xor
sbb
adc
add
or
sbb
xor
or
sbb
pop
sbb
sbb
sbb
sbb
sbb
add
sbb
xor
sbb
adc
sbb
xor
sbb
adc
sbb
adc
sub
sbb
sbb
sbb
cmp
sbb
xor
sbb
adc
sbb
adc
imul
adc
xor
sbb
adc
addr16
sbb
sbb
cmp
sbb
xor
pop
sbb
sbb
addr16
sbb
sbb
adc
cmp
sbb
cvtpi2ps
sbb
sbb
pop
addr16
sbb
sbb
adc
cmp
sbb
cvtpi2ps
aas
sbb
adc
sbb
imul
sbb
xor
sbb
adc
sbb
adc
jbe
sbb
adc
jbe
sbb
adc
adc
sbb
adc
adc
imul
jbe
sbb
adc
jbe
sbb
adc
cmp
push
sbb
xor
jbe
sbb
adc
sbb
sbb
adc
cmp
sbb
cvtpi2ps
sbb
adc
sbb
adc
cmp
sbb
jbe
sbb
adc
xor
push
sbb
adc
sbb
sbb
adc
jbe
sbb
adc
sbb
adc
sub
sbb
jbe
sbb
adc
sbb
adc
sbb
adc
adc
imul
sbb
adc
xor
sbb
adc
sbb
sbb
adc
cmp
sbb
cvtpi2ps
addr16
sbb
sbb
adc
cmp
sbb
cvtpi2ps
pop
xor
sbb
addr16
sbb
sbb
adc
cmp
sbb
cvtpi2ps
addr16
sbb
sbb
adc
cmp
sbb
cvtpi2ps
pop
xor
sbb
addr16
sbb
sbb
cld
adc
cmp
sbb
mulps
sbb
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
adc
adc
adc
imul
adc
sub
push
add
sbb
adc
adc
imul
sbb
or
xor
cmp
sbb
adc
adc
imul
sbb
or
or
xor
sbb
adc
or
xor
sbb
adc
and
sbb
xor
sbb
adc
sbb
adc
adc
adc
imul
imul
(bad)
(bad)
sbb
sbb
sbb
adc
add
sbb
xor
sbb
adc
sbb
adc
push
xor
sbb
adc
sbb
adc
adc
or
sbb
sbb
xchg
imul
sbb
imul
jbe
sbb
adc
sbb
push
or
pop
sbb
adc
sbb
adc
adc
adc
imul
adc
sbb
or
or
packssdw
adc
imul
add
pop
sbb
or
add
push
mov
add
sbb
or
xor
sbb
jbe
sbb
adc
adc
sbb
cmp
push
sbb
xor
adc
adc
sbb
adc
push
xor
sbb
addr16
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
pop
sbb
adc
pop
sbb
jbe
sbb
adc
pop
or
imul
sbb
jbe
sbb
adc
push
or
imul
sbb
xor
sbb
cvtpi2ps
or
imul
sbb
push
sbb
adc
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
pop
sbb
adc
pop
sbb
jbe
sbb
adc
or
or
push
sbb
push
sbb
adc
sbb
adc
or
or
pop
sbb
xor
sbb
cvtpi2ps
or
imul
sbb
cld
adc
sbb
adc
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
pop
sbb
adc
push
sbb
jbe
sbb
adc
or
or
push
sbb
push
sbb
adc
sbb
adc
or
or
pop
sbb
xor
sbb
cvtpi2ps
or
imul
sbb
cld
adc
sbb
adc
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
addr16
sbb
sbb
cld
adc
cmp
sbb
cvtpi2ps
xor
sbb
adc
adc
sbb
sbb
add
dec
movq
push
jno
stc
retf
stos
clc
push
xchg
call
push
addr16
dec
or
push
pop
adc
mov
imul
into
mov
fwait
and
pusha
mov
mov
xchg
jp
push
je
sar
ins
push
and
or
fcomp
dec
mov
into
mov
(bad)
lock
fwait
push
pop
sub
sbb
pop
ret
test
pop
mov
cmp
loop
popa
lods
les
aam
inc
ja
inc
sub
sbb
arpl
inc
add
pusha
cs
or
jae
arpl
arpl
sub
popa
cmp
jnp
pusha
xor
or
js
inc
add
inc
add
cs
push
dec
cmp
or
pop
inc
add
enter
not
mov
repnz
jmp
clc
mov
hlt
mov
aad
aam
inc
jecxz
icebp
mov
mov
xchg
mul
or
push
pop
inc
xor
sbb
push
push
push
je
push
sbb
arpl
jo
imul
mov
mov
fistp
aad
in
in
and
mov
mov
mov
sahf
fisttp
mov
mov
fdivr
cli
(bad)
int
out
aam
int3
xchg
aad
out
ret
sbb
in
mov
and
les
jge
daa
js
push
adc
inc
inc
add
mov
pop
loopne
xor
push
outs
sub
in
jmp
ja
aas
pop
xchg
daa
push
lock
call
int3
icebp
test
ss
lock
js
add
or
rol
mov
mov
iret
(bad)
(bad)
pop
inc
push
pop
fnstenv
xor
cmps
call
cmp
sar
outs
xor
sbb
outs
xchg
mov
movs
xchg
or
sbb
dec
mov
test
mov
and
(bad)
fadd
cwde
idiv
pushf
(bad)
mov
xor
jmp
mov
mov
xor
mov
fmul
pusha
pop
aas
adc
and
retf
fistp
das
mov
ins
and
lods
or
(bad)
mov
pusha
in
mov
jg
pop
pop
in
adc
enter
(bad)
in
add
push
mov
jnp
or
out
push
push
syscall
shl
pop
bound
lods
daa
inc
adc
mov
cmc
lods
ror
sub
add
and
xor
call
fcom
(bad)
push
lahf
iret
imul
push
xchg
mov
mov
test
mov
push
push
jmp
mov
xchg
and
mov
adc
jl
ds
inc
(bad)
sub
stos
retf
sub
xchg
mov
nop
cmp
or
adc
(bad)
cli
mov
dec
pushf
and
push
fstp
or
sbb
xchg
sub
inc
rcl
imul
inc
pop
sbb
scas
or
cmp
and
mov
jb
add
jno
(bad)
stos
retf
pop
ins
inc
cmp
mov
mov
aaa
mov
pop
sbb
mov
mov
fstp
popf
jo
cmp
xor
pop
into
ret
pop
ja
inc
lods
and
clc
push
dec
push
sbb
push
shl
rcl
cdq
out
mov
out
adc
and
adc
jmp
mov
sub
shl
mov
pop
push
arpl
dec
add
push
jle
dec
and
mov
imul
into
scas
jmp
fwait
call
scas
and
or
fcom
dec
popa
dec
and
jmp
sub
adc
fs
lods
loope
and
iret
test
ins
xor
mov
xchg
pop
ss
mov
jl
or
leave
retf
and
cld
in
scas
mov
xchg
fimul
jne
les
dec
icebp
add
movs
int3
adc
mov
add
jmp
sbb
in
not
aad
push
int3
mov
(bad)
sbb
or
psllq
ins
sub
jp
push
pop
and
ins
and
data16
push
add
inc
push
inc
or
adc
or
dec
adc
jge
pop
sbb
jo
dec
sub
sub
idiv
in
mov
cmps
out
retf
scas
not
ret
lods
fistp
enter
sti
mov
xchg
aad
out
mov
(bad)
mov
lods
in
mov
xchg
mov
ret
lods
in
test
dec
add
inc
add
dec
ds
dec
divps
jno
pop
adc
addr16
imul
inc
xor
cs
sbb
cmp
push
inc
arpl
jp
dec
or
inc
cmp
imul
sbb
ins
and
sub
push
add
inc
add
push
fs
push
or
gs
pop
xor
mov
ficom
fld
inc
jl
sbb
sbb
lahf
mov
(bad)
adc
fmul
dec
adc
std
scas
iret
sub
cmps
(bad)
adc
push
icebp
aaa
mov
add
fucomip
mov
and
and
or
stos
out
push
in
mov
xor
daa
hlt
movs
in
es
pinsrw
lock
mov
cmps
jno
and
pop
ja
adc
sub
retf
ret
nop
dec
inc
setns
add
inc
pop
xor
sbb
mov
lea
inc
or
jbe
outs
xchg
lods
rcr
and
lods
in
mov
push
and
mov
jl
retf
les
push
xchg
out
je
adc
or
adc
cld
mov
and
lock
inc
ret
sahf
stos
push
and
cmps
test
repnz
mov
sbb
int
aam
mov
mov
push
jge
push
aas
ror
mov
scas
in
xchg
pop
jns
sbb
lock
mov
outs
popf
push
pop
ret
ret
dec
lea
dec
les
xchg
shl
pop
pop
retf
sbb
adc
imul
(bad)
iret
popa
xor
fstp
mov
imul
lods
sar
add
pop
aad
fcomp
aam
dec
jnp
sub
loopne
mov
dec
adc
arpl
push
scas
and
(bad)
jge
imul
lods
and
out
test
daa
fsubr
test
and
and
jecxz
movs
loop
sub
inc
add
sti
call
sub
push
adc
push
push
cmp
aad
mov
and
adc
ds
inc
popa
cdq
std
push
pusha
cdq
shl
pop
jns
loope
mov
lahf
fisttp
out
lods
sahf
daa
mov
jle
and
push
sbb
repz
ja
jno
stc
mov
push
popf
aas
imul
pop
jp
or
(bad)
movs
mov
push
cmp
in
mov
sub
fadd
clc
lds
stos
cs
ja
cmp
and
sar
in
push
mov
xchg
pop
adc
icebp
test
push
sub
repnz
rcl
fs
test
xchg
add
jne
push
jno
lds
mov
ss
iret
lods
js
cmp
cli
mov
xor
or
addr16
and
std
out
xchg
neg
add
sti
mov
popa
scas
out
mov
hlt
mov
fld
clc
mov
(bad)
mov
sub
pop
or
mov
call
xor
icebp
xor
mov
mov
outs
mov
pop
clc
cmp
mov
gs
jmp
outs
(bad)
iret
arpl
aas
jae
dec
xchg
shr
jnp
pop
into
push
dec
cmp
out
mov
jo
(bad)
push
fmul
mov
mov
out
test
ja
jp
dec
or
jg
push
cmp
xor
pop
sbb
pop
pop
push
cmp
dec
cmp
dec
movd
dec
pop
jns
jns
popa
pop
fs
and
push
xor
pop
sub
add
jae
bound
jo
outs
sbb
sub
ss
or
outs
aaa
push
push
inc
pop
cmp
ins
sub
jge
pop
sbb
outs
and
js
js
imul
das
push
inc
xor
push
push
xor
sbb
push
(bad)
xor
imul
xor
inc
add
cwde
std
mov
xchg
ror
cli
mov
call
xchg
(bad)
xchg
cmps
jmp
int
fdiv
mov
xchg
sahf
fadd
rol
mov
xchg
mov
add
(bad)
leave
mov
fld
and
cmp
push
ja
iret
sbb
and
test
aas
rol
mov
imul
int3
scas
lods
push
xchg
int
pop
xchg
shl
cmp
xchg
fnstenv
cdq
lds
leave
jmp
mov
cmp
xlat
mov
sub
add
(bad)
movs
out
ja
jp
loope
enter
mov
test
pop
mov
dec
or
scas
iret
sbb
sub
mov
(bad)
shl
mov
xor
ret
pop
pop
pop
int3
les
inc
xchg
jmp
add
cmp
(bad)
sti
call
adc
fisub
leave
call
call
dec
stos
sub
pop
mov
nop
add
popf
(bad)
bound
push
sbb
(bad)
ror
ins
addr16
and
rcl
jbe
dec
add
jne
or
hlt
mov
and
inc
ins
pop
pop
rcr
pop
out
mov
das
push
cdq
cmp
add
mov
pop
pushw
stc
sbb
pop
rcr
fs
aad
fnstcw
mov
inc
mov
jo
cmp
cmp
in
cmps
pop
arpl
sub
xchg
leave
data16
popa
sbb
jmp
mov
mov
jns
and
in
rcl
jae
pusha
or
push
push
scas
lea
push
(bad)
aad
mov
xor
cs
jmp
pop
(bad)
xchg
and
pop
enter
popa
call
cmps
and
jne
adc
ret
xor
(bad)
jmp
xor
mov
call
xor
(bad)
mov
je
cmc
mov
xor
das
xchg
out
inc
cmp
jmp
mov
inc
cli
call
cdq
ret
pop
push
js
adc
jecxz
inc
jno
arpl
test
sbb
push
leave
fst
je
not
in
fwait
(bad)
mov
cmc
(bad)
stos
jmp
enter
add
outs
jns
cmp
(bad)
jns
cmp
cmp
(bad)
fst
out
les
pop
mov
aam
iret
cmp
add
sti
mov
sub
jle
and
hlt
test
mov
dec
xor
iret
stos
lds
retf
shl
mov
inc
add
int3
adc
jb
add
dec
sub
cmp
xor
leave
sti
mov
and
jmp
ror
xchg
push
jge
xor
push
inc
cmp
sbb
cmc
xor
adc
call
mov
mov
mov
mov
test
stos
in
icebp
xchg
(bad)
mov
call
iret
mov
sub
cmovb
pop
cmp
inc
bound
outs
add
sbb
sub
aaa
addr16
inc
or
outs
aaa
push
push
inc
and
xor
inc
xor
push
or
ss
pop
ss
bound
jnp
je
push
je
inc
ss
and
outs
and
pop
or
dec
cmovnp
outs
push
pop
add
sub
dec
sub
cmovae
pop
cmp
pop
sbb
dec
or
pusha
adc
push
adc
dec
cmp
inc
pop
push
aaa
push
adc
inc
sbb
pop
add
push
sub
stc
lods
loope
out
out
ret
mov
scas
ficomp
call
in
not
aam
jecxz
rol
add
sbb
pop
or
inc
push
or
outs
and
dec
sub
das
xchg
ret
daa
clc
call
popf
(bad)
mov
ret
push
xor
sbb
adc
neg
push
stc
adc
(bad)
mov
imul
mov
xor
xor
in
stos
jmp
outs
es
int3
mov
cmps
cdq
in
xchg
push
and
in
mov
lahf
jp
sub
mov
icebp
test
push
add
xchg
jmp
cdq
or
int3
stc
scas
out
cmp
jae
repnz
push
mov
jno
int
mov
xor
xor
pop
push
shr
or
or
xlat
stos
pause
jge
sub
adc
ror
ins
stos
add
lock
add
jo
add
fdivp
lods
hlt
and
push
xor
fisubr
cmp
jecxz
mov
dec
dec
or
rcl
xchg
idiv
cmp
pop
sub
mov
dec
sbb
retf
scas
inc
pop
cmp
(bad)
fidivr
adc
sahf
fdivr
sub
(bad)
sbb
push
fwait
adc
sbb
pop
shl
jle
adc
sub
mov
pop
xor
int3
mov
xchg
sub
hlt
addr16
and
adc
cdq
mov
addr16
push
mov
call
and
(bad)
mov
leave
shl
ins
mov
mov
inc
arpl
pop
ja
cmp
sar
lea
cs
adc
jns
adc
mov
(bad)
std
sbb
mov
inc
ret
pop
mov
arpl
sbb
sub
mov
push
adc
cmc
imul
xchg
mov
pop
sub
scas
pop
push
sbb
mov
dec
iret
retf
stos
retf
dec
inc
and
sbb
sar
test
jnp
pop
shl
pop
mov
push
daa
clc
sar
out
cmp
and
sbb
mov
or
fist
movs
jae
and
sbb
dec
out
repz
daa
jl
sbb
sub
cs
jg
sbb
aas
icebp
cli
mov
xchg
dec
dec
adc
out
stos
in
daa
ins
push
pop
(bad)
push
pop
das
cmc
leave
pushf
shl
lahf
jmp
arpl
jns
in
scas
into
mov
inc
aaa
std
shl
cmc
mov
dec
fwait
(bad)
fnstcw
mov
mov
or
cmp
std
aam
(bad)
jnp
sbb
cmpxchg
inc
mov
mov
xchg
inc
push
mov
sub
shr
and
dec
lods
jl
push
mov
adc
inc
pop
pop
shl
(bad)
je
sub
add
out
aad
(bad)
sahf
(bad)
mov
sbb
jae
pop
push
dec
movq
dec
add
and
push
xor
inc
or
shl
mov
shl
mov
out
xchg
xlat
cmps
icebp
mov
pop
xor
push
or
fs
cmp
adc
adc
dec
adc
push
cmovle
pop
ds
push
adc
and
push
xor
push
dec
push
dec
cmp
inc
add
leave
mov
mov
movs
xlat
xchg
retf
mov
xchg
ret
and
stc
test
mov
add
ret
mov
xchg
ror
loop
repz
fild
rol
lods
fistp
enter
cli
mov
xchg
enter
icebp
xchg
jmp
dec
cmovs
js
push
or
je
push
sbb
or
push
imul
dec
cmp
pop
sub
dec
push
ins
es
add
jae
adc
int
stos
icebp
pop
sti
mov
pusha
cmps
push
adc
and
shl
mov
aas
add
mov
scas
out
jp
dec
sbb
mov
bound
outs
pop
xor
repnz
leave
xor
inc
pop
adc
xor
fst
pop
sub
std
cld
mov
sub
jae
ret
out
push
dec
cmp
lock
push
cs
int3
fdiv
mov
daa
inc
add
shl
mov
inc
add
add
std
fnstcw
mov
(bad)
nop
loop
inc
sbb
sbb
xor
mov
mov
sub
je
jl
adc
sbb
div
mov
loopne
call
add
or
add
xor
retf
mov
nop
xor
(bad)
xlat
test
aam
mov
ret
sbb
pop
mov
pop
iret
loopne
xchg
rcr
mov
dec
xchg
push
inc
jmp
(bad)
or
out
xchg
(bad)
inc
mov
addr16
call
mov
dec
lea
ja
test
test
nop
pop
jno
push
test
aad
lea
retf
xchg
inc
dec
pop
(bad)
adc
adc
cli
inc
cwde
or
sbb
iret
push
imul
stc
(bad)
pushf
mov
inc
es
xor
push
aas
(bad)
mov
ins
jg
adc
and
dec
retf
mov
pop
jo
ds
cmps
div
dec
push
or
icebp
add
or
pop
pushf
hlt
js
add
or
cmp
mov
inc
retf
out
mov
xor
sub
pop
sub
out
mov
dec
and
retf
lahf
cmp
not
jp
cmp
ret
xchg
das
imul
leave
mov
inc
inc
dec
cmp
clc
adc
test
dec
xchg
icebp
xchg
out
mov
mov
retf
aam
not
jae
dec
push
cli
mov
xor
imul
movs
cli
mov
pop
fwait
inc
sub
mov
or
mov
das
mov
(bad)
mov
outs
sub
cmc
lods
in
pop
dec
aaa
jae
out
movs
leave
adc
ss
adc
test
mov
and
out
mov
jne
idiv
inc
xchg
test
gs
sbb
loope
call
fsubr
adc
out
stos
repnz
xchg
sbb
add
ret
push
and
and
pop
jmp
fwait
mov
cdq
int
sahf
dec
or
push
and
sbb
and
xor
cmp
js
ret
nop
addr16
sub
cmp
or
cwde
fimul
mov
fdivr
cli
mov
mov
mov
xchg
aad
(bad)
cmps
jmp
int
fidivr
out
test
mov
mov
sti
mov
jmp
dec
and
fidivr
pushf
rol
ja
jns
push
xor
jnp
cdq
ror
rol
int3
mov
mov
cmps
(bad)
movs
in
out
test
mov
xchg
aad
add
shl
out
xlat
xchg
not
sbb
jmp
fnstenv
in
mov
in
xor
in
sahf
fsubr
fist
rol
icebp
mov
aam
in
jmp
out
cld
xchg
lds
hlt
fwait
in
lods
test
jmp
scas
iret
mov
mov
mov
xchg
xchg
stc
mov
repnz
enter
les
add
mov
xor
pop
xor
cwde
std
mov
jmp
dec
mov
ja
loope
mov
outs
mov
sub
or
popa
mov
nop
iret
scas
mov
jne
sbb
inc
add
lods
aam
jno
movq
fadd
or
cmc
mov
push
mov
sub
in
retf
sub
jno
pop
xchg
dec
and
cli
fwait
clc
das
or
daa
mov
adc
shl
lds
sbb
jmp
jae
aas
data16
adc
clc
lods
loope
imul
(bad)
mov
dec
sbb
add
jbe
push
xor
fisttp
xchg
pop
xchg
jmp
enter
mov
add
cmp
fidivr
jo
fistp
and
xor
mov
mov
mov
dec
outs
jl
add
fld
xor
add
dec
icebp
add
inc
push
int
outs
or
xor
clc
add
xchg
dec
sbb
movs
test
inc
add
loopne
push
ret
leave
sub
fidivr
rcr
adc
test
jl
xor
shl
pop
add
mov
in
scas
sahf
cld
pop
pop
call
adc
into
cmp
lds
push
mov
cmp
in
pextrw
pushf
xchg
shr
add
jecxz
and
dec
enter
jmp
stos
mov
adc
lods
js
sbb
mov
rcr
xor
stos
repnz
or
pushf
dec
and
retfw
test
out
pusha
or
dec
mov
jne
stc
mov
loop
mov
jle
xor
lods
mov
pop
sub
pop
mov
mov
push
fnstcw
scas
call
or
movs
mov
xchg
arpl
inc
jmp
push
clc
add
inc
mov
xchg
adc
loope
and
mov
mov
icebp
inc
ss
ins
jmp
jo
hlt
dec
cs
sar
lods
fs
add
cmp
jnp
cmp
inc
lock
xchg
aad
dec
fstp
pusha
and
lods
outs
and
mov
inc
and
push
stos
loope
pop
sbb
aaa
xor
mul
xchg
cdq
sti
arpl
loopne
test
push
push
in
cmp
push
rcl
and
sub
pop
stos
in
arpl
xor
stos
inc
add
inc
rol
int
arpl
repz
sub
jo
mov
pop
sub
dec
int3
mov
pop
or
(bad)
pop
sbb
mov
adc
lods
fimul
mov
cld
jle
in
ins
sub
inc
out
test
inc
out
arpl
add
mov
cmp
in
stos
test
pop
sub
dec
div
mov
pop
ss
fwait
jo
ret
test
mov
(bad)
jno
cdq
or
sbb
mov
mov
adc
ins
shl
pop
jge
mov
cmps
retf
push
ds
aam
fcomp
cmp
jg
stc
jnp
or
les
cmp
lds
push
inc
retf
test
cmc
sub
mov
shr
movs
xchg
push
stc
dec
push
sbb
nop
lahf
rcr
aaa
adc
out
aas
shl
rol
push
cmps
les
pop
push
shl
loope
mov
cmp
xchg
popf
out
popa
and
cli
cs
fsubr
dec
jecxz
rcr
(bad)
mov
fidivr
and
clc
sub
cmps
loope
cmp
call
xchg
bound
scas
int3
jl
adc
fisubr
jmp
lods
push
out
xchg
pop
cmp
mov
dec
and
dec
test
dec
cmp
ficom
mov
es
iret
mov
xor
test
xor
mov
adc
ror
dec
cli
xchg
rcl
add
inc
out
mov
mov
pop
cmp
repz
dec
mov
jl
pop
xlat
mov
icebp
mov
call
aam
mov
dec
add
xor
lea
xchg
data16
jnp
repnz
adc
push
push
inc
stos
stc
dec
das
cmp
daa
sbb
xlat
sub
mov
add
sub
or
addr16
popf
dec
sub
push
mov
add
shl
inc
retf
test
aam
push
(bad)
movs
call
mov
cmp
fs
movs
test
sub
mov
xchg
push
cmp
xor
lock
push
pop
push
sub
les
or
mov
rcl
sbb
adc
cwde
mov
mov
aad
pop
jmp
imul
jp
loope
jae
mov
cld
cmp
call
adc
mov
fnstsw
xlat
nop
test
and
rcr
cmps
jmp
not
int3
inc
push
add
cmp
gs
pushf
fistp
adc
int
jnp
mov
fdiv
and
dec
idiv
cmps
cmc
inc
and
inc
mov
in
push
adc
mov
xchg
xchg
jno
out
xchg
ror
cmovs
pop
mov
retf
push
push
movs
imul
out
xchg
pop
cs
dec
call
movs
pushf
jmp
repz
sar
in
(bad)
xchg
ror
fistp
cmp
or
ja
les
mov
popa
add
ins
(bad)
pushf
pusha
adc
call
cmc
xchg
inc
sub
bound
push
pop
push
fisubr
or
std
mov
add
dec
sub
jl
fwait
xor
je
in
xchg
not
daa
mov
pop
test
push
mov
mov
xor
add
jb
int
pop
in
pushf
xchg
int3
and
popf
push
fwait
inc
pop
adc
popf
xchg
cmc
pusha
daa
adc
shr
fsubr
sbb
lds
pop
fs
jg
out
dec
adc
pop
xor
mov
div
mov
sbb
pop
sub
jl
cmc
mov
adc
test
das
gs
mov
push
add
push
push
pop
jne
xchg
mov
std
jno
pop
sbb
xchg
dec
cmp
sub
pushf
addr16
dec
or
scas
jp
repnz
inc
add
dec
mov
xchg
xchg
aad
sbb
push
clc
call
mov
push
shr
mov
aas
int3
lahf
outs
or
mov
mov
in
cwde
sti
jns
rol
int3
and
pop
call
cmps
mov
mov
adc
fild
adc
aam
jp
rcl
mov
mov
and
adc
test
mov
out
xor
mov
ins
mov
daa
ins
mov
jle
sbb
xor
sar
scas
in
jg
jmp
jb
mov
enter
mov
xchg
xchg
pop
cmp
mov
jmp
or
mov
pop
cmp
mov
mov
outs
sub
mov
cwde
ret
cmp
div
jae
aam
scas
neg
stc
call
dec
or
fs
mov
push
jge
test
(bad)
mov
mov
mov
dec
add
push
mov
clc
push
add
jb
cmps
fs
add
fld
inc
stos
(bad)
push
adc
jns
loop
xchg
fld
imul
js
out
pop
sub
loope
gs
jbe
out
lods
and
lods
jmp
ins
push
loopne
bound
or
mov
fdivr
iret
mov
int
outs
cmp
scas
in
jae
cmp
rcl
in
xchg
in
cmp
imul
test
mov
and
push
or
mov
sub
jne
(bad)
daa
dec
lock
fstp
lock
pushf
fild
ins
mov
fs
dec
fist
jb
mov
scas
mov
add
in
mov
out
xor
arpl
mov
cli
ja
(bad)
pushf
xchg
shr
inc
std
mov
loop
arpl
add
xchg
push
lods
jmp
shl
or
mov
ret
stos
lahf
fdivr
lock
loope
aad
js
xchg
jb
in
lahf
jbe
xor
jp
in
pop
push
not
pop
sub
inc
iret
mov
test
loope
mov
imul
mov
call
jo
lods
xchg
fiadd
adc
fadd
add
aad
ror
sti
test
out
mov
aas
jl
lds
or
retf
aas
cmp
popf
imul
sub
or
imul
lds
ret
xchg
mov
jbe
iret
lods
add
imul
fcomp
sub
repnz
(bad)
mov
dec
leave
xchg
adc
stos
jmp
test
jae
and
loop
xor
dec
or
push
movs
jmp
add
inc
mov
push
mov
mov
fistp
adc
fidiv
repz
ret
rcr
push
add
mov
jl
mov
loopne
bound
adc
xchg
xchg
repz
or
outs
add
push
mov
hlt
inc
pop
push
inc
mov
mov
or
jbe
cmp
sbb
sbb
icebp
xchg
xchg
xlat
inc
and
leave
movs
cdq
ficomp
sub
mov
(bad)
cdq
xchg
iret
push
lahf
inc
or
js
sti
cmp
xchg
cmp
lds
je
cdq
xchg
xlat
inc
and
ins
cld
nop
lahf
fdiv
inc
scas
(bad)
imul
fcom
ret
add
ja
cmps
jge
cmp
loop
pop
or
in
push
pop
pop
mov
gs
lahf
repz
cli
mov
icebp
mov
leave
and
lahf
(bad)
xlat
pusha
xor
dec
cmps
loopne
or
push
ror
std
scas
popf
dec
push
pop
mov
dec
mov
sub
jnp
call
add
push
fist
mov
xlat
inc
or
pop
mov
pop
pop
sbb
test
cld
sahf
test
push
xor
dec
pmulhuw
les
sbb
ss
(bad)
jg
sbb
mov
jb
iret
aaa
je
stos
xchg
xlat
pop
cmp
sub
dec
shl
cmp
jp
test
movs
fist
or
in
mov
xor
(bad)
jmp
mov
into
sub
into
mov
and
mov
lahf
xchg
(bad)
sub
sbb
rcr
test
arpl
adc
outs
jmp
lods
fs
out
test
adc
mov
or
in
xor
out
mov
shl
inc
rcl
retf
cld
jnp
pop
or
jns
mov
jo
adc
cwde
fild
inc
repz
in
daa
in
fs
pop
cmps
call
daa
inc
rcl
sbb
mov
adc
xchg
jne
sbb
(bad)
mov
(bad)
stos
cwde
fbstp
dec
mov
and
inc
enter
pop
push
aam
mov
xlat
inc
sbb
mov
fisub
out
daa
add
in
or
(bad)
cld
imul
test
aam
cmps
cmc
jle
out
pop
js
adc
rol
jne
leave
jle
and
les
mov
mov
mov
inc
xlat
test
xchg
aaa
outs
cmps
cmc
and
fcomp
out
lea
or
mov
std
push
adc
fs
sub
inc
jmp
mov
xor
bound
xchg
dec
sub
dec
icebp
mov
shr
mov
push
push
lds
jmp
pop
rcr
std
scas
fnstsw
out
lahf
pop
pop
das
ins
xchg
int
sub
jns
retf
pop
push
cmp
mov
and
or
adc
fadd
xchg
push
sbb
inc
xlat
mov
scas
int
sub
jb
mov
cmp
sti
mov
xchg
mov
mov
test
aam
pop
(bad)
(bad)
push
adc
dec
test
pop
and
mov
fistp
cmp
call
(bad)
mov
sbb
sub
inc
ror
sbb
scas
in
jno
test
mov
cwde
mov
pusha
pop
pop
mov
jbe
cmp
rcl
cmp
xchg
xchg
fld
in
(bad)
in
pop
sbb
scas
ja
(bad)
cmps
lahf
fsubr
sbb
mov
leave
stos
mov
add
test
mov
fstp
std
cmps
jl
sub
mov
sti
mov
or
hlt
cs
retf
sbb
push
rol
adc
jne
adc
mov
repnz
rcl
jmp
pop
fiadd
push
pop
movs
(bad)
push
cmp
add
adc
mov
mov
int
dec
lods
out
xor
sub
aam
sub
xor
lods
inc
push
adc
cmp
es
rcl
push
push
xchg
jge
hlt
xchg
push
leave
xchg
adc
frstor
leavew
adc
jo
adc
lds
test
adc
shl
retf
push
adc
adc
mov
xchg
mov
inc
leave
sbb
mov
lods
sub
mov
xchg
mov
xor
mov
out
lods
mov
cwde
xchg
ror
inc
iret
test
imul
jo
mov
fstp
push
ins
sti
mov
push
es
das
xor
sahf
(bad)
ret
pop
inc
or
stos
jle
pop
dec
shl
sbb
mov
jle
repz
add
push
scas
ret
les
sbb
stc
pop
adc
mov
cmp
or
xchg
shr
push
push
mov
add
mov
retf
call
pop
fistp
lods
out
push
jmp
jae
lock
mov
sub
or
push
cmp
inc
test
push
adc
jae
test
cmp
or
mov
iret
addr16
mov
out
mov
push
sbb
(bad)
mov
test
inc
daa
pop
outs
aad
mov
sub
in
sub
mov
and
arpl
cwde
test
and
(bad)
pop
cmp
mov
je
or
xchg
adc
dec
sar
cld
mov
adc
rcl
mov
iret
inc
or
inc
rcr
mov
pusha
lods
out
push
or
and
add
and
mov
cdq
mov
xor
mov
ja
in
popa
xor
dec
clc
mov
in
mov
mov
or
mov
push
je
xchg
mov
jge
lea
test
mov
sub
mov
sub
push
adc
loopne
and
jb
mov
outs
mov
mov
imul
or
add
idiv
sbb
nop
inc
adc
test
mov
add
xchg
pusha
daa
xor
jb
dec
ror
lea
pop
int
mov
dec
pmaddwd
adc
mov
cmp
clc
dec
daa
hlt
mov
hlt
jg
out
lods
(bad)
int
rcl
lds
xlat
xchg
data16
dec
mov
push
push
adc
loop
and
pop
cmp
pop
(bad)
movs
pushf
(bad)
dec
retf
adc
js
xchg
xchg
shl
ins
mov
jge
lahf
outs
sub
or
lock
(bad)
lods
lods
iret
dec
and
xor
enter
xchg
add
rcl
jl
add
stc
and
mov
rcr
pop
fstp
cmc
xchg
pusha
or
pop
enter
and
xchg
push
cmp
jle
scas
mov
cmp
cwde
mov
or
hlt
push
push
jecxz
call
jmp
adc
inc
stos
clc
inc
and
popa
aam
jp
stc
mov
mov
pop
pop
or
cmps
call
ret
jno
mul
iret
test
sbb
hlt
push
or
mov
cmp
jae
cdq
je
add
pop
sbb
mov
out
mov
sub
add
xchg
mov
ds
addr16
xchg
mov
cmp
in
xor
les
mov
dec
or
dec
out
xchg
fldenv
jge
call
out
movs
jns
sbb
mul
out
jb
xor
in
push
pop
(bad)
mov
shl
fst
adc
inc
adc
shl
ret
cmp
pop
ss
pushf
jle
loop
test
test
sbb
popf
add
dec
(bad)
mov
out
adc
mov
std
movs
js
in
jbe
adc
hlt
push
xor
add
push
aad
test
add
xchg
mov
add
mov
std
scas
arpl
push
adc
mov
adc
mov
pop
wrmsr
push
mov
sar
not
std
inc
xor
fwait
jp
aaa
jne
in
sub
cdq
mov
dec
sub
push
or
push
sbb
test
cmp
lds
sub
adc
dec
test
xchg
fst
jmp
mov
push
adc
pop
shl
or
in
pop
ds
movs
out
push
mov
dec
scas
ret
repz
inc
wrmsr
jg
xchg
mov
pop
cmp
xchg
inc
push
sbb
mov
(bad)
fisttp
imul
addr16
(bad)
cli
mov
push
jb
out
or
cdq
add
cmp
inc
retf
fisttp
imul
outs
and
jne
fwait
call
mov
adc
push
lds
xchg
adc
sbb
add
inc
out
xchg
int3
pop
or
sub
jge
sbb
mov
data16
mov
(bad)
movs
mov
arpl
mov
jmp
or
sbb
popf
outs
cmp
jge
jmp
fidiv
(bad)
enter
pushf
fbld
inc
cmps
in
dec
mov
retf
add
fidiv
jge
lahf
push
or
frstor
sti
mov
sbb
lea
add
jbe
(bad)
lahf
std
pop
sbb
push
mov
or
in
sahf
fld
inc
pop
push
int3
or
mov
dec
mov
and
nop
jp
loop
xchg
pop
pop
or
mov
outs
xchg
rol
dec
into
push
sbb
test
scas
mov
jl
mov
pop
aaa
xor
call
add
mov
jge
std
mov
xor
adc
xchg
neg
mov
pushf
fistp
push
dec
test
stos
scas
int3
pop
push
in
jne
in
or
mov
or
in
jmp
fs
mov
rol
pop
sbb
ins
fcomp
in
sub
mov
mov
test
or
shl
jo
stos
jae
(bad)
cmps
xchg
shl
clc
xchg
lahf
fsub
dec
mov
outs
sti
mov
(bad)
mov
sbb
lock
sbb
mov
mov
gs
imul
and
mov
iret
mov
mov
sahf
xchg
fidiv
cmc
scas
jae
sbb
or
push
test
jge
sbb
mov
jle
clc
xchg
dec
pmulhuw
add
pop
movs
loop
add
push
dec
rcr
add
lods
ins
sub
lods
xor
imul
pop
xor
cmps
push
ret
adc
xchg
shl
push
cmps
aad
inc
rcl
cmp
call
mov
imul
mov
leave
sub
icebp
dec
and
jp
mov
cmp
leave
inc
sub
cmp
fstp
fcom
mov
inc
add
inc
jecxz
sbb
or
mov
dec
daa
add
inc
not
lods
mov
call
loopne
imul
dec
cld
mov
sbb
test
rcr
push
xlat
xchg
mov
arpl
xor
mov
mov
popf
shl
sbb
mov
mov
and
pushf
mov
mov
inc
pop
or
mov
(bad)
push
adc
mov
adc
fidivr
jns
mov
mov
(bad)
mov
sbb
pop
push
add
mov
sbb
out
fisttp
add
mov
pop
sbb
out
or
call
sub
jp
ret
xchg
jns
mov
scas
and
inc
lock
mov
xchg
js
add
out
xor
mov
(bad)
xchg
cwde
sti
es
lock
add
mov
loopne
push
and
retf
cmp
movs
out
ins
mov
xor
icebp
jno
call
push
rcr
add
xchg
push
add
sbb
sbb
push
nop
ret
loop
lea
(bad)
or
or
push
pop
out
cs
sbb
mov
jg
mov
add
inc
outs
mov
fld
pusha
xchg
pop
movs
or
xor
pop
mov
push
dec
xor
pop
fs
xlat
test
jmp
sub
fmul
xor
(bad)
into
hlt
jge
xor
mov
push
pop
mov
adc
arpl
xchg
dec
je
mov
mov
xchg
cmp
aad
xchg
in
sbb
push
aaa
ret
cdq
jo
in
(bad)
call
xchg
stos
cli
mov
inc
cld
(bad)
mov
hlt
pushf
rcr
pop
mov
jecxz
sub
sub
xchg
out
cmp
std
mov
pushf
inc
into
xchg
jno
mov
xchg
lods
mov
ja
and
iret
retf
mov
jne
popf
mov
xchg
add
lds
push
adc
mov
or
(bad)
lods
or
sahf
gs
mov
mov
sbb
push
fimul
jo
adc
dec
mov
sub
sub
nop
cld
nop
adc
sbb
iret
daa
mov
aas
push
xchg
(bad)
mov
add
mov
test
(bad)
jecxz
aad
jmp
or
les
pop
ss
cmp
or
inc
mov
mov
out
or
sbb
ins
push
lods
and
movs
and
lods
push
push
add
pop
or
push
inc
jmp
mov
fidivr
(bad)
pop
aaa
sub
cmps
xor
ds
nop
push
adc
loop
xchg
imul
pop
cli
or
jnp
dec
cmp
(bad)
cmps
fucomip
and
xadd
xor
or
cmps
dec
(bad)
sahf
inc
imul
fmulp
jb
loop
mov
fisubr
mov
sahf
xor
mov
sub
aas
sub
je
cmp
pop
jge
add
sar
test
fistp
fs
aad
xchg
pusha
push
sbb
icebp
and
aaa
dec
jo
fldln2
aad
inc
and
shl
arpl
push
jb
test
cmps
test
aam
dec
fucom
dec
adc
cmp
mov
inc
sub
mov
add
sub
xchg
hlt
nop
scas
ins
mov
sbb
xchg
mov
and
dec
loope
fdivr
inc
arpl
sbb
push
inc
jg
stc
mov
into
push
clc
call
cmp
sbb
sbb
sbb
or
test
mov
sub
pop
cli
scas
jg
cmp
test
ret
cmps
lock
push
inc
mov
cs
(bad)
out
leave
sub
mov
jmp
inc
xor
(bad)
js
dec
push
outs
int3
mov
dec
aam
mov
xchg
sbb
iret
mov
ror
setns
or
loopne
fbld
scas
stc
push
call
out
and
cmp
es
xchg
das
and
sub
jmp
test
adc
sub
push
fnstenv
retf
sbb
push
pop
sti
fstp
cdq
adc
pop
not
jg
sar
movs
jl
out
fisub
stos
(bad)
sub
push
lea
fisubr
nop
mul
popa
lea
inc
dec
mov
aam
cdq
sub
mov
push
mov
jnp
and
sub
push
icebp
dec
test
push
and
mul
or
out
test
sahf
xchg
inc
push
cmp
repnz
push
add
jb
dec
cmps
fwait
jmp
arpl
inc
retf
pusha
test
scas
adc
sbb
lahf
pop
repz
cwde
std
push
movs
jns
push
mov
mov
and
jmp
sub
lock
div
test
push
add
mov
js
(bad)
int
stc
ss
or
enter
push
mov
xchg
ja
clc
fiadd
shr
loop
push
pop
sub
fadd
in
or
cmp
xchg
in
add
mov
sbb
scas
push
imul
sub
scas
lahf
mov
sub
stos
icebp
inc
cs
and
cmps
fnstsw
es
inc
ret
mov
adc
dec
inc
out
push
cmp
jns
sub
in
shl
push
movs
in
jmp
(bad)
mov
clc
test
push
sbb
fsubr
xchg
sub
sub
cwde
lea
or
cmp
mov
(bad)
jae
scas
push
mov
fnstenv
xlat
out
xor
push
pop
scas
lock
adc
inc
push
dec
jle
add
dec
jl
jnp
push
int
add
out
sti
push
sub
sbb
adc
sub
push
dec
retf
inc
aaa
inc
popa
add
or
popf
retf
adc
adc
outs
mov
dec
das
mov
rcr
retf
inc
xchg
(bad)
sub
inc
movs
nop
rol
bnd
jp
sahf
(bad)
mov
(bad)
iret
or
cmp
sbb
or
xor
push
or
mov
cmp
mov
mov
jbe
push
js
sar
icebp
or
jle
mov
aad
not
jge
push
imul
jmp
mov
sahf
jo
arpl
inc
mov
fstp
mov
test
dec
(bad)
dec
sub
mov
ss
pop
(bad)
js
push
inc
pushf
retf
shr
mov
sti
call
lds
inc
std
(bad)
(bad)
xlat
les
push
xor
rcr
mov
mov
imul
aaa
mov
aad
loopne
outs
mov
mov
lods
jae
push
xlat
sbb
mov
pop
les
in
ror
cmps
push
xchg
push
mov
mov
data16
and
sub
mov
ins
shr
aam
sahf
imul
adc
push
daa
add
jno
stos
mov
outs
adc
jmp
jecxz
add
xchg
aaa
inc
cmps
mov
dec
test
jmp
ret
clc
sbb
mov
or
jo
sbb
jns
add
pop
aaa
cwde
test
pop
nop
pop
int3
data16
scas
add
mov
xor
clc
ret
jp
pop
lods
sbb
jecxz
out
add
lods
bound
xchg
shl
stc
xchg
(bad)
xor
xor
hlt
cdq
repz
mov
dec
jle
add
cld
mov
cmp
inc
pop
add
repnz
rcl
pop
cmp
or
pop
mov
mov
test
enter
aas
in
daa
pusha
pop
cmps
cmps
fdivr
mov
add
push
icebp
inc
push
pop
(bad)
ds
faddp
push
sub
into
movs
arpl
sub
shr
fwait
ss
dec
and
call
push
cs
mov
mov
enter
lods
push
inc
push
movs
or
fsub
push
test
and
adc
sub
mov
mov
add
(bad)
rcl
pop
fild
pop
xor
popf
mov
xchg
repnz
mov
ja
or
lock
out
aad
push
cmp
jmp
aam
popa
pop
arpl
outs
test
call
aas
fst
sbb
fidivr
aas
mov
ja
lock
push
shl
retf
(bad)
push
mov
xlat
mov
pusha
lahf
jb
ins
out
fidivr
sub
add
test
mov
pop
xchg
and
stc
inc
shr
dec
lahf
ss
sbb
sub
cmp
ss
sbb
sbb
out
popf
sti
sbb
sbb
xlat
sbb
js
xor
outs
in
xor
fsub
xchg
retf
push
test
add
not
push
jp
pop
outs
out
inc
movs
xchg
xchg
add
or
xchg
cli
mov
push
add
and
add
nop
fsubr
scas
mov
aaa
sbb
das
sti
movs
lods
cmp
jbe
dec
dec
addr16
sub
mov
jp
xchg
movs
lahf
imul
adc
mov
jge
dec
daa
retf
ficom
mov
add
repnz
sub
pop
xchg
fidivr
mov
std
arpl
push
inc
and
aam
les
push
mov
(bad)
out
loope
das
jecxz
enter
pop
jecxz
cmc
jg
pushf
lock
hlt
fstp
push
stos
std
xchg
loop
movs
shr
cwde
iret
fbstp
in
jae
jge
mov
xchg
push
inc
stc
ja
jmp
jnp
jb
pop
addr16
test
addr16
and
or
mov
xor
nop
neg
ror
cmc
ret
fcmove
movs
cmps
(bad)
iret
or
cmp
popa
cmovge
dec
cmp
bound
jmp
ret
mov
std
push
add
jbe
addr16
pop
hlt
sub
add
pusha
rol
in
xor
cmp
cmp
sub
pop
ss
(bad)
inc
call
sbb
inc
gs
(bad)
loop
cwde
std
jbe
fistp
mov
gs
sub
cmps
push
pop
popf
push
sti
call
out
scas
or
(bad)
inc
mov
in
jb
jp
ja
loope
pop
cmp
push
push
xchg
ret
es
xor
ins
fbld
fadd
in
iret
(bad)
lods
pop
aas
push
int3
repz
mov
cmps
ror
lods
scas
into
mov
inc
fs
push
jle
test
dec
cmps
or
xor
or
xchg
add
scas
xor
adc
xor
xor
in
pop
adc
xlat
mov
das
sub
movs
movs
cmp
xor
mov
xchg
dec
adc
shl
stos
(bad)
jo
sbb
popa
hlt
ins
inc
popf
jb
loop
stos
add
sub
test
xchg
cli
stos
pop
mov
in
fsub
inc
movs
js
gs
call
out
jg
xor
in
mul
loope
sbb
sbb
xchg
out
cmp
and
jbe
add
in
mov
shl
add
sbb
in
push
and
adc
add
pop
daa
push
hlt
mov
cli
retf
dec
sbb
imul
adc
cdq
inc
cmps
add
fcom
test
xor
out
add
push
out
sub
xchg
jmp
mov
into
inc
xchg
dec
push
retf
fisttp
sub
xor
and
pusha
lods
call
aas
mov
cmp
pop
ficomp
pusha
add
push
int
rep
and
jge
not
(bad)
dec
add
pop
mov
ins
and
int3
ficomp
hlt
(bad)
jmp
imul
adc
test
push
add
pop
adc
(bad)
std
js
inc
and
jp
pop
loope
dec
cmp
adc
scas
in
nop
pop
mov
jae
out
jnp
xchg
xchg
in
mov
inc
out
movs
sbb
jno
dec
stos
or
or
xchg
stc
pop
(bad)
rol
mov
mov
sub
(bad)
cld
das
mov
adc
into
adc
jg
fbstp
ins
and
stos
pop
jmp
jg
jns
lahf
inc
es
loopne
push
lock
les
pop
xchg
add
fstp
jae
inc
push
shl
cmp
mov
cli
cmp
push
jae
mov
mov
jns
fcom
scas
es
in
push
pop
test
push
jnp
lods
xor
xor
fmul
arpl
adc
jmp
inc
fadd
sbb
xor
sti
push
dec
das
inc
lock
in
repnz
fwait
add
inc
jne
sub
lds
shl
mov
rcr
sbb
or
not
and
mov
(bad)
loopne
pop
fsub
aam
inc
xor
or
cmps
adc
mov
mov
dec
jbe
pop
js
add
mov
inc
bound
mov
es
xchg
leave
mov
xor
add
mov
dec
xchg
lods
inc
lods
or
das
adc
pushf
pushf
call
shl
and
mov
xchg
data16
jnp
test
div
mov
cmp
clc
dec
in
and
clc
push
test
mov
fidivr
add
cmp
setle
mov
mov
enter
mov
(bad)
shl
dec
mov
popa
shr
jg
dec
pushf
test
pop
xchg
mov
inc
pmaxsw
mov
mov
retf
cmp
out
and
int3
xchg
jo
sub
jle
sbb
cdq
ins
cmp
dec
push
jns
inc
loope
push
mov
cmp
push
pop
jl
xor
retf
sti
add
jl
fistp
(bad)
fisttp
mov
jge
mov
sub
sbb
cmp
and
shl
pop
push
mov
and
pop
push
pop
dec
retf
pop
cmp
mul
mov
jl
sahf
and
mov
addr16
or
inc
jbe
xchg
mov
(bad)
cmps
push
adc
push
cmp
push
inc
cld
ds
cld
cmps
sbb
mov
cdq
jno
or
sbb
mov
iret
fisub
add
ss
xor
ss
jmp
(bad)
std
xchg
add
ficom
int
jecxz
pop
nop
push
gs
mov
stos
sbb
(bad)
(bad)
sub
call
xchg
adc
push
cld
shl
xor
or
mul
vmovupd
lahf
mov
jno
jno
call
popf
ds
jecxz
push
mov
jno
push
inc
jg
sbb
imul
dec
in
ret
(bad)
adc
add
inc
xor
jne
dec
cwde
or
cld
test
int
xor
xor
dec
rcl
outs
outs
stos
lock
popf
cld
jmp
mov
daa
adc
adc
cld
int3
cmp
jo
ficom
popa
adc
push
adc
add
out
push
pop
lods
xor
rol
dec
mov
or
sbb
jle
push
push
adc
sub
mov
jno
or
enter
dec
repz
push
or
fcomp
add
aad
out
dec
sub
jb
dec
stos
pop
stos
(bad)
fwait
sub
in
jns
mov
leave
jmp
pop
call
jmp
xchg
push
xchg
sbb
sbb
in
int3
nop
adc
pop
cmp
jnp
add
out
movs
fs
ret
ss
stos
shl
push
add
mov
repz
js
push
cmp
push
jl
xchg
jns
cwde
add
cmp
ins
les
jmp
call
inc
hlt
mov
inc
sbb
icebp
xor
rcr
pop
(bad)
mov
test
call
psadbw
jge
and
add
push
jne
sub
add
in
cmp
xchg
xchg
sbb
popa
and
outs
push
and
xchg
or
mov
fxch
mov
je
aas
jmp
movs
lds
in
movs
out
dec
mov
mov
or
sub
jge
(bad)
pop
ja
xlat
xor
out
add
push
pop
mov
call
jmp
lahf
dec
gs
scas
(bad)
adc
pop
and
jge
pushf
inc
repz
fstp
sbb
out
sti
movs
or
mov
int
dec
rcl
pop
sub
adc
aas
popa
add
or
mov
ror
daa
setle
loop
icebp
add
jns
fcom
or
aam
(bad)
fsubp
sub
sub
scas
sti
jg
mov
and
loope
enter
and
inc
push
mov
jne
xchg
adc
popf
out
mov
jg
outs
es
lds
and
mov
dec
scas
add
fild
(bad)
push
xor
adc
lds
call
mov
pop
clc
lods
mov
js
adc
jmp
ins
(bad)
gs
cmp
cmc
(bad)
clc
int
xor
xor
push
xor
loope
dec
into
and
iret
mov
cmps
sub
hlt
jge
rol
das
mov
mov
aaa
and
cli
xor
dec
pop
xlat
and
cmp
in
sbb
pop
jb
xor
mov
in
push
fbld
lods
scas
cdq
xchg
iret
ja
out
push
push
rol
mov
dec
push
iret
out
xchg
mov
jo
ret
and
cwde
dec
(bad)
hlt
mov
pop
inc
call
or
sti
aaa
cmps
pop
xor
cmps
jmp
retf
mov
and
(bad)
mov
or
inc
mov
sbb
scas
pop
push
std
or
retf
add
mov
ror
pop
leave
fmul
inc
sub
xor
in
mov
xchg
ins
push
popa
scas
arpl
mov
push
inc
pop
lea
xor
pop
jne
push
mov
mov
pop
scas
das
sbb
fwait
test
jle
jb
jnp
xchg
and
bnd
iret
nop
dec
sbb
inc
sti
bound
cmp
(bad)
test
dec
inc
adc
jmp
cmp
push
(bad)
ins
addr16
(bad)
and
push
scas
jp
push
xor
ins
nop
add
psrad
(bad)
out
cmps
ret
mov
in
sub
mov
pushf
cmp
pop
adc
xor
mov
dec
retf
mov
mov
and
pop
cli
and
jae
mov
mov
pop
xor
or
ds
sbb
ror
push
ret
bound
cwde
call
ret
inc
sbb
dec
adc
sub
outs
and
xchg
cdq
imul
push
js
jmp
repnz
xchg
daa
or
inc
mov
add
iret
mov
jp
lods
mov
popa
sti
sbb
daa
mov
int
dec
clc
pop
mov
clc
stc
ret
mov
jno
(bad)
cmp
add
loope
dec
mov
(bad)
fdiv
push
retf
push
stos
sar
adc
imul
dec
mov
call
mov
jne
nop
mov
stc
rol
es
dec
(bad)
cmp
mov
aaa
scas
mov
fs
dec
daa
enter
sahf
lods
adc
push
cld
pop
mov
dec
adc
sar
test
mov
inc
add
sbb
nop
adc
test
sub
hlt
mov
ret
push
sbb
je
jne
mov
pushf
cwde
(bad)
fnstcw
rcl
loopne
fnstenv
cmp
fisttp
leave
dec
or
pop
cmps
sbb
mov
nop
pop
push
loope
cmp
jmp
ret
cmp
push
inc
(bad)
in
cmp
imul
or
jp
cmc
(bad)
dec
xor
ret
add
stc
xchg
fs
inc
popa
inc
jecxz
retf
jl
pop
inc
in
cs
cmps
out
in
mov
adc
and
out
fwait
sbb
loope
outs
(bad)
mov
test
enter
and
stos
neg
push
fistp
movs
xchg
ror
mov
xlat
and
out
pop
jl
imul
cmp
test
fdiv
lds
ret
stc
pop
and
ror
push
push
mov
movs
jns
jbe
stos
imul
cld
sbb
add
dec
sbb
(bad)
pop
mov
shr
and
mov
(bad)
rcr
xchg
sub
int
mov
xor
fst
test
xchg
rcl
add
aad
repnz
cmp
push
adc
ret
mov
xchg
mov
clc
jl
jle
ds
sub
mov
and
mov
or
loop
(bad)
adc
mov
push
xor
in
sbb
cwde
sub
frstor
push
aas
xor
pop
add
das
jnp
sti
scas
retf
scas
call
and
cld
leave
cmps
nop
aam
scas
or
or
rol
mov
bound
push
jl
fiadd
ins
leave
outs
and
xchg
xlat
mov
loopne
cmp
ss
pop
daa
push
or
retf
jns
xchg
adc
mov
mov
shr
leave
xor
mov
sub
lods
int3
repnz
out
aaa
out
adc
scas
mov
inc
inc
sbb
jbe
inc
xor
clc
jno
cwde
popf
xchg
add
add
xchg
test
mov
in
pop
sub
or
pusha
xchg
(bad)
pop
fidiv
sar
std
mov
cdq
xchg
fisubr
daa
(bad)
jne
call
xchg
mov
sti
dec
in
js
imul
xchg
ins
inc
das
xor
rol
mov
jbe
inc
dec
fiadd
pop
stc
dec
mov
mov
and
push
or
call
sbb
fld
lods
out
inc
out
add
inc
pop
test
push
jbe
sahf
test
iret
inc
pop
mov
mov
cmp
gs
(bad)
xchg
retf
cmp
gs
stos
das
imul
or
in
fs
sbb
sbb
mov
jno
or
cli
sbb
fcomip
or
loope
add
xor
clc
loopne
or
mov
mov
in
mov
lock
push
or
inc
es
and
pop
jo
add
mov
mov
(bad)
dec
push
push
pop
inc
cmp
mov
ret
int
sub
repz
mov
imul
(bad)
jo
std
adc
cmp
push
inc
cmp
jb
repz
mov
dec
cmp
xor
pop
cmp
adc
data16
dec
jno
jae
jbe
or
xor
cmp
popf
shl
dec
jno
pop
jmp
add
push
or
mov
lods
inc
and
(bad)
push
in
aas
jp
cmp
and
xchg
xor
dec
mov
stc
std
pop
fsubr
jns
jp
add
pop
shr
cld
fwait
clc
outs
sbb
imul
repz
jmp
shr
inc
ins
pop
or
adc
lahf
ret
mov
es
lock
push
jb
test
das
ficom
(bad)
fld
cmp
cmp
dec
fcomi
cwde
or
jle
ret
cmc
mov
pop
mov
fidiv
leave
pop
faddp
xchg
test
mov
cmp
sub
dec
or
mov
aam
out
ja
inc
jecxz
or
xor
lahf
pop
mov
clc
or
cs
push
js
jl
adc
test
or
mov
sub
out
cmp
aas
cmp
mov
in
dec
sub
hlt
xchg
mov
(bad)
retw
out
push
or
ror
imul
push
sbb
xor
scas
les
push
mov
imul
ss
arpl
cld
cmp
aam
mov
sub
mov
enter
jecxz
mov
inc
(bad)
mov
dec
mov
jmp
jo
add
add
jo
aaa
add
inc
loop
sbb
push
mov
leave
pop
cwde
adc
xchg
mov
mov
and
mov
mov
ror
lock
add
mov
cdq
push
neg
dec
mov
gs
dec
fcom
sub
xchg
jmp
mov
popa
xor
imul
test
mov
xor
xchg
jmp
das
repnz
lahf
jmp
bound
movs
adc
fs
arpl
sar
fsubrp
xchg
js
add
cli
fmul
dec
out
das
and
ja
pop
add
fcmovbe
mov
jmp
mov
push
out
jecxz
out
adc
add
mov
enter
js
mov
and
push
cmc
clc
xchg
sub
sbb
cmp
cwde
arpl
or
adc
add
mov
mov
jmp
xor
js
mov
inc
mov
lock
test
mov
adc
pop
push
stos
out
dec
pop
(bad)
push
sbb
out
push
sub
inc
cmp
not
xchg
push
jne
jns
sbb
test
push
cmp
aaa
ret
cmp
push
push
out
lds
and
xchg
push
jmp
in
push
imul
adc
leave
outs
add
inc
dec
je
lock
(bad)
outs
daa
(bad)
pop
pop
aad
jb
mov
sub
mov
js
push
dec
daa
pop
or
xchg
sar
cs
sti
jmp
or
ins
and
push
call
cmc
xor
clc
pushf
loope
and
movs
repnz
lock
out
fsub
fadd
imul
cli
int3
sub
pop
mov
fnsave
add
(bad)
or
cmp
das
inc
outs
movs
(bad)
mov
ins
in
sbb
dec
cmp
or
rol
addr16
les
mov
aam
xchg
jmp
cs
(bad)
into
pushf
xchg
in
mov
mov
test
push
mov
fidiv
mov
xchg
out
sahf
mov
adc
sbb
sub
(bad)
fisub
data16
mov
imul
dec
cwde
imul
icebp
ret
stos
dec
push
arpl
jg
cmp
loope
xor
inc
inc
clc
dec
dec
dec
jns
cmc
(bad)
xor
inc
js
sub
dec
push
push
adc
int3
sahf
in
imul
mov
and
and
xor
mov
mov
outs
cld
push
sbb
mov
mov
push
cld
push
adc
xor
aaa
add
stos
and
hlt
sub
(bad)
pop
jecxz
mov
mov
mov
fnstcw
iret
xchg
shl
hlt
mov
adc
jo
push
jmp
mov
sbb
sahf
fnstcw
jle
ins
mov
mov
idiv
pop
or
xor
sbb
and
dec
loope
inc
xlat
cli
inc
mov
hlt
add
push
aaa
or
inc
push
push
or
out
pop
add
inc
(bad)
cdq
jae
es
ss
(bad)
cs
mov
mov
sbb
and
lea
aam
fcom
mov
ss
pop
sbb
ins
js
rcl
out
sub
in
scas
xchg
lahf
adc
scas
mov
jmp
pop
push
into
push
ins
fild
xor
jnp
out
sub
add
mov
dec
mov
push
or
jmp
mov
jae
pop
jl
les
imul
pop
rol
addr16
ret
dec
in
mov
jae
test
hlt
div
dec
jb
jle
dec
fs
fild
call
dec
popf
sbb
popf
lods
leave
mov
leave
ret
and
cdq
ret
neg
test
das
fcomp
fiadd
inc
data16
dec
dec
sbb
aaa
pop
push
push
lock
inc
mov
xor
lds
in
xchg
dec
stc
push
mov
or
jbe
mov
call
gs
jle
xchg
jns
pop
or
xchg
push
xor
push
add
in
rcr
call
ror
jae
inc
bound
jb
jmp
retf
inc
sub
mov
gs
xor
std
mov
dec
pop
mov
and
lahf
retf
fbld
test
dec
xchg
popf
jp
aad
inc
repz
mov
mov
push
add
xchg
dec
sti
inc
rol
adc
sbb
mov
js
out
mov
fld
add
jnp
push
sbb
inc
pop
popa
adc
sbb
or
push
sub
or
loop
daa
pop
pop
dec
sbb
sbb
push
iret
add
stos
push
in
jp
cmp
aaa
push
(bad)
mov
mov
cmp
mov
inc
mov
mov
xchg
sahf
into
les
stos
xchg
inc
mov
stos
xchg
sbb
sub
jmp
sub
and
into
scas
jne
sub
ins
popf
mov
xor
imul
adc
adc
mov
pop
cmp
mov
push
scas
lock
call
sbb
cmps
adc
enter
adc
mov
cmp
pop
mov
cmps
shl
pop
(bad)
out
loope
or
adc
mov
fdivr
call
jnp
js
ret
cmp
and
lods
mov
inc
movs
scas
sbb
mov
sub
iret
sbb
xor
pop
retf
stos
inc
cwde
mov
outs
and
push
mov
test
cmp
dec
daa
push
cmps
pop
call
mov
pop
repnz
and
dec
loop
mov
adc
in
jle
out
pop
in
and
and
ficomp
(bad)
xchg
inc
xor
ret
cmp
scas
test
pop
stos
rcr
push
adc
arpl
dec
sar
(bad)
test
jg
dec
adc
push
imul
icebp
fmul
xchg
inc
test
mov
mov
xlat
mov
mov
iret
pushf
sub
jae
sbb
fmul
pop
jnp
test
js
and
adc
mov
cmp
inc
dec
mov
outs
jae
mov
test
sbb
(bad)
mov
fcom
fcom
rcl
imul
inc
pop
xchg
pop
gs
in
and
sub
popf
pop
mov
(bad)
xchg
pusha
test
push
jecxz
sub
out
xor
xchg
cwde
aam
ret
sub
dec
mov
mov
mov
sub
mov
(bad)
pop
int
cmp
mov
sbb
int
xchg
sbb
push
ds
int3
cli
in
data16
sub
and
ror
push
add
mov
inc
or
or
cmp
mov
mov
xlat
hlt
fadd
xchg
xchg
and
mov
sbb
hlt
scas
ja
jo
das
(bad)
sbb
pop
outs
adc
(bad)
jbe
fbld
mov
mov
add
mov
sub
add
fist
pop
or
cmps
or
add
push
repnz
ror
test
clc
aad
pusha
stc
mov
sbb
pop
test
fadd
pop
inc
add
inc
jns
in
out
jp
aam
retf
push
not
ins
arpl
es
fimul
cmp
pop
dec
fcmovnbe
daa
mov
nop
add
inc
push
fimul
jb
jbe
daa
adc
mov
push
ret
imul
push
sbb
int
fisttp
int3
das
pop
sub
add
shl
test
sbb
out
sar
jecxz
sbb
ins
mov
mov
sbb
shr
cmp
add
in
inc
ins
xor
cwde
or
push
adc
push
sahf
data16
add
or
mov
add
push
bswap
push
push
sbb
popa
jno
les
xchg
fst
sub
(bad)
les
push
dec
jnp
dec
sbb
(bad)
(bad)
dec
imul
lds
jae
dec
outs
cmc
pop
inc
xchg
mov
pop
lods
cmp
xor
mov
mov
jmp
popa
repnz
mov
sar
cwde
gs
dec
xchg
sub
test
in
imul
js
arpl
retf
pop
stos
pop
mov
dec
mov
jmp
(bad)
out
imul
pop
js
into
and
xchg
pop
xlat
ret
mov
scas
fwait
cmp
fldenv
imul
cmp
outs
repz
outs
mov
lods
(bad)
dec
mov
jmp
lods
push
lahf
test
inc
out
dec
das
jl
aaa
cli
ds
(bad)
(bad)
gs
repnz
loop
mov
add
test
(bad)
aas
div
lods
mov
fild
xchg
mov
sbb
sub
pop
ins
push
jo
cs
xlat
xchg
cmp
adc
and
or
cmps
push
mov
loop
mov
push
inc
out
inc
jmp
ret
cli
mov
dec
int3
and
unpckhps
cmp
xor
push
cli
hlt
cwde
xchg
add
adc
scas
dec
mov
add
(bad)
xchg
cli
cmp
xchg
test
jno
call
sub
movs
inc
lds
scas
xchg
ret
fnsave
cmp
lock
loop
push
mul
mov
imul
daa
cld
js
mov
(bad)
fucomip
or
jae
stos
movs
je
xchg
(bad)
cmp
js
fimul
mov
push
jle
add
mov
sbb
ja
xchg
mov
adc
ror
scas
int
mov
aas
mov
cmp
jb
mov
adc
xor
outs
(bad)
ret
inc
test
push
jge
sub
retf
bound
mov
sbb
int3
add
push
and
ins
mov
clc
sub
mov
mov
ss
push
sub
adc
sub
and
mov
stos
ret
and
ins
xchg
sbb
xchg
cmp
cs
xlat
mov
inc
lds
mov
popf
jo
push
scas
cmps
push
fnstsw
(bad)
out
pop
cmp
adc
popa
or
push
xlat
movs
sti
mov
push
loop
scas
js
pop
mov
ins
stos
xchg
mov
pop
and
pop
sbb
aad
dec
push
test
repz
adc
add
dec
mov
ins
rol
mov
pop
pop
jecxz
dec
push
test
ret
cmp
adc
les
push
mov
jno
adc
cmp
sbb
inc
ficom
test
adc
sub
push
sub
stc
ins
mov
lods
test
mov
xchg
jmp
ret
ror
add
jl
sub
les
adc
jo
cs
add
push
ds
mov
inc
pusha
imul
cmp
jl
inc
mov
sub
mov
ds
outs
xchg
imul
scas
fldcw
and
push
sbb
inc
cmovge
(bad)
loopne
ror
mov
mov
out
(bad)
xor
adc
lahf
xor
adc
jb
(bad)
(bad)
loop
stc
fidiv
fnstenv
inc
mov
cld
jno
mov
or
aad
cs
sub
xchg
or
cmc
dec
leave
pop
add
xchg
jg
push
or
int
(bad)
jmp
adc
(bad)
mul
fiadd
dec
(bad)
push
jno
not
push
lods
sbb
sbb
ins
xor
dec
and
cmc
mov
mov
test
pop
sbb
push
mov
mov
ret
gs
add
jnp
pop
into
retf
cmp
pushf
mov
dec
das
pop
in
jnp
clc
fild
fdiv
cmp
pushf
pusha
int3
push
xor
jb
push
mov
inc
or
pushf
pop
stos
data16
jg
lahf
and
add
mov
mov
outs
pop
jno
push
push
faddp
fadd
xchg
sbb
gs
adc
test
push
mov
mov
add
fdiv
push
sub
push
mov
test
ins
js
mov
lods
and
ret
loopne
(bad)
outs
mov
jnp
push
fld
imul
cdq
mov
retf
inc
movs
or
or
and
jb
xchg
mov
shl
aas
sbb
js
call
mov
push
into
mov
jmp
push
jle
sub
cdq
cmp
dec
xchg
jg
jp
out
fs
push
and
sub
inc
sub
push
jbe
mov
dec
data16
retf
adc
std
inc
aaa
rcl
outs
xlat
mov
iret
sar
xchg
sub
xor
dec
in
sub
cs
adc
xor
outs
imul
push
jge
sub
xor
imul
and
aam
cmp
test
dec
and
call
jmp
pop
loope
pop
scas
xor
test
adc
scas
adc
or
xor
cmps
add
xchg
out
jo
aad
mov
stos
(bad)
into
scas
outs
pop
std
repnz
sbb
push
aam
inc
fistp
xchg
out
inc
shl
mov
push
or
cmp
mov
fist
push
aam
ja
sbb
hlt
gs
cmc
jg
xchg
push
sub
add
(bad)
cmp
lods
jmp
xchg
test
fimul
cmp
and
jmp
(bad)
div
and
daa
lods
xor
mov
pop
jl
retf
mov
inc
adc
push
xchg
ja
adc
adc
jo
loopne
push
inc
sbb
in
dec
cwde
ror
mov
or
jg
nop
jns
ins
loopne
cmp
add
stc
inc
sar
xor
and
push
icebp
jmp
mov
scas
je
repnz
out
jecxz
iret
ss
cdq
jmp
movs
sti
cmp
push
or
push
mov
push
jp
mov
jb
mov
aas
adc
or
in
rol
js
(bad)
cmp
cmp
clc
popf
mov
in
inc
fild
xchg
mov
jp
fidivr
in
inc
bound
push
adc
clc
popa
cli
(bad)
test
mov
ret
cdq
xchg
fninit
sbb
in
sub
mov
imul
stos
dec
push
das
cmp
push
xchg
xchg
out
adc
shl
mov
inc
pusha
sbb
test
sar
add
mov
mov
mov
jle
hlt
fnsave
add
mov
cmp
(bad)
clc
or
lods
push
in
pop
mov
mov
jmp
pusha
aam
jno
imul
mov
cmp
xchg
fnstsw
jnp
xor
dec
hlt
push
(bad)
jne
fimul
popf
ret
scas
push
add
xchg
xor
lods
fiadd
out
popf
into
and
sub
scas
xor
scas
int
aam
call
or
or
pop
cmp
cli
std
jl
cmp
push
std
pushf
fist
push
jb
sub
test
(bad)
cmp
into
sbb
xchg
sahf
push
iret
sahf
stos
pop
xchg
inc
imul
cld
call
and
cmp
stos
sub
sbb
cmps
lods
adc
data16
(bad)
inc
dec
aas
inc
aas
dec
mov
jne
outs
cmps
sub
cmp
push
ins
mov
add
test
pop
pop
xchg
(bad)
shl
pop
cmps
and
pop
lahf
and
out
mov
xlat
ins
into
aas
pop
xchg
mov
js
pop
dec
push
sub
sbb
scas
pop
ins
push
into
xchg
push
nop
lods
sub
popa
neg
jb
gs
ficomp
add
jo
mov
push
dec
cld
mov
inc
ror
jo
sbb
sub
imul
int
rcl
cmp
mov
mov
div
outs
pop
xor
pop
cmp
repz
push
mov
adc
cmp
pop
add
mov
mov
popa
scas
jmp
xor
jae
fimul
cld
mov
cld
mov
cmp
mov
push
pushf
sbb
pop
mov
test
push
cmps
push
fs
jp
or
mov
(bad)
mov
in
lods
mov
jae
xlat
fcmovne
sub
into
and
pandn
add
not
pop
jb
xchg
dec
xchg
int
sti
pop
or
fisttp
xor
pusha
and
and
stc
bound
sbb
test
mov
push
add
pop
je
dec
xchg
push
mov
aaa
es
ja
sbb
mov
inc
mov
adc
pop
pop
jns
lahf
fist
scas
imul
jle
aas
outs
and
push
pop
or
retf
mov
mov
out
(bad)
xchg
not
into
mov
cmps
in
rol
mov
xchg
repz
loop
stc
mov
xchg
out
scas
jmp
add
rcl
xchg
pop
pop
out
adc
add
dec
add
les
(bad)
and
ret
jbe
ds
sub
pop
sbb
movs
(bad)
cmp
leave
movs
inc
push
add
mov
mov
aas
fs
bound
adc
pop
not
mov
push
and
(bad)
mov
dec
or
stc
cmps
out
imul
pop
jns
jns
aas
addr16
enter
and
out
cmps
clc
mov
jp
jg
ds
push
lock
fucomi
mov
fwait
inc
push
cmp
cmps
es
add
popa
call
leave
retf
fcom
loopne
scas
int3
dec
dec
ds
imul
dec
and
mov
das
outs
mov
dec
or
mov
sub
cmp
leave
mov
shl
loope
dec
inc
xor
outs
cmp
aam
ret
jno
push
fcomi
xchg
jno
sbb
sbb
or
push
jns
imul
idiv
gs
ins
mov
jnp
aam
add
lahf
fcomp
and
inc
dec
aaa
cwde
fucom
sar
stos
pop
and
cmp
sbb
add
xlat
clc
add
dec
xor
sub
in
adc
inc
popf
ret
adc
cmovae
cmps
sbb
sub
scas
les
pop
inc
cmp
pop
pop
adc
xchg
test
xor
cmp
sub
in
push
xor
imul
lds
enter
fdiv
(bad)
loopne
ss
xlat
mov
xor
je
test
arpl
jg
sub
and
jmp
mov
mov
ja
arpl
test
(bad)
lock
dec
add
clc
scas
out
cmc
mov
jmp
cs
dec
jno
inc
xor
mov
mov
cmp
outs
xchg
std
fnstsw
fild
ss
ins
add
adc
pop
push
or
test
test
push
loope
test
test
push
dec
push
jge
leave
aad
clc
in
fadd
inc
shr
shl
inc
stos
inc
or
sbb
lods
stc
pop
in
stos
ret
shr
and
call
xchg
xor
mov
cmp
or
sbb
jo
int
jns
or
dec
sbb
push
push
and
imul
jne
addr16
movs
sub
aaa
mov
push
cmp
jmp
ins
cs
rcr
dec
mov
cmps
leave
jge
push
inc
loop
adc
mov
dec
repz
jl
or
jns
push
retf
and
or
leave
mov
inc
(bad)
ja
add
ds
ret
not
daa
addr16
add
mov
movq
aad
inc
sahf
out
mov
push
mov
or
scas
cmp
(bad)
xchg
jge
arpl
cmp
pop
sub
fidivr
xchg
pop
adc
and
iret
test
and
sbb
jb
clc
mov
lods
out
xchg
xchg
pop
sbb
and
das
pop
add
(bad)
xchg
repnz
mov
mov
retf
pop
mov
jge
mov
cmc
mov
out
test
mov
nop
mov
out
out
out
ret
scas
fistp
out
retf
movs
in
mov
in
(bad)
mov
xchg
mov
test
dec
or
mov
js
maxps
push
sar
or
dec
neg
mov
gs
jecxz
movs
pusha
xchg
(bad)
push
jns
add
mov
xchg
fsubr
inc
cmp
test
(bad)
mov
pop
sub
cli
lds
mov
or
retf
xor
repz
lds
es
sbb
sti
mov
sub
div
mov
sar
in
(bad)
fstp
mov
(bad)
aam
jnp
xor
daa
sbb
inc
sub
int3
int3
mov
movs
ja
ss
rcl
loopne
popa
push
adc
shl
popa
push
push
adc
enter
add
xchg
loope
jmp
movs
setp
jp
aam
xchg
adc
push
(bad)
in
sar
pop
test
xlat
inc
jnp
sub
mov
mov
adc
int
fwait
xchg
xor
inc
dec
cmp
(bad)
mov
push
dec
xchg
sbb
mov
(bad)
fst
fndisi(8087
xlat
mov
in
(bad)
xchg
cmp
arpl
push
mov
push
call
dec
xor
fild
inc
push
pop
jno
xor
repnz
rcl
addr16
jge
mov
rcl
push
pop
or
push
stos
out
xchg
aam
mov
test
xor
ret
adc
std
mov
xchg
out
cmp
sar
xlat
mov
inc
cs
mov
call
data16
xor
mov
inc
and
leave
mov
mov
icebp
retf
mov
push
pop
mov
mov
dec
or
jmp
(bad)
mov
push
dec
or
dec
ds
add
in
into
cmps
(bad)
stc
leave
mov
ffree
retf
or
dec
inc
sub
icebp
pushf
push
cmp
mov
push
mov
test
push
mov
scas
jmp
sub
inc
jle
je
rcr
mov
adc
icebp
test
inc
sub
push
push
int
rol
dec
sub
mov
mov
mov
mov
inc
xchg
jl
loope
jns
inc
or
sti
ss
in
inc
add
or
repz
es
jmp
mov
out
or
loop
push
repnz
mov
inc
stos
pop
sbb
div
mov
pop
push
es
sbb
or
xchg
sub
fisttp
sbb
leave
adc
dec
idiv
mov
sahf
dec
inc
sub
push
adc
out
pop
(bad)
shl
pusha
mov
pop
in
cmp
or
out
lock
and
cld
cmps
(bad)
hlt
xchg
ins
imul
cmps
or
jmp
mov
push
ins
daa
push
test
hlt
xchg
fistp
test
jge
in
nop
jecxz
pop
and
aaa
ins
xor
(bad)
sti
xchg
inc
dec
or
sub
or
sub
stos
in
mov
add
push
cmps
sub
mov
cmp
mov
scas
out
push
jl
adc
push
mov
jg
cmp
bnd
push
dec
out
fmul
xchg
jg
out
mov
jp
push
mov
jge
daa
xor
xchg
das
call
pop
call
imul
add
or
xor
jbe
jbe
push
es
cmp
jnp
bound
jne
jnp
pop
adc
je
push
sub
outs
add
xor
pop
sub
ds
adc
push
cmp
pop
or
stc
adc
ret
lods
cld
sub
test
adc
mov
add
cmp
push
fcom
fwait
push
jp
cs
mov
movs
ds
sbb
ror
push
cmp
sub
mov
lods
xchg
or
sbb
push
inc
shr
and
sbb
dec
inc
xor
mov
and
in
bound
jo
add
shr
add
in
mov
jg
in
mov
sub
xlat
retf
sub
js
call
push
jle
adc
outs
sbb
out
scas
out
sub
pushf
into
xor
out
retf
div
scas
adc
adc
add
out
add
and
jmp
les
adc
pop
pop
or
cmp
push
les
mov
push
mov
inc
pusha
and
mov
rol
dec
jbe
sub
sub
mov
mov
loope
aam
dec
cmp
fisub
(bad)
fpatan
fnstcw
pop
add
das
aad
mov
les
inc
sbb
sbb
movs
out
jmp
stc
mov
ja
or
loope
stos
std
mov
inc
cmp
push
bound
stc
mov
lods
aaa
pusha
or
arpl
mov
repnz
data16
loope
int
ror
ret
popf
lock
aaa
ja
icebp
xchg
fsub
ficomp
fs
push
or
or
or
xchg
popf
cmp
imul
sub
test
scas
pop
push
adc
dec
sbb
popf
cli
xchg
fcmovb
and
push
pop
ds
push
xor
pop
and
pop
js
aad
xchg
call
inc
sbb
cld
loopne
xchg
ret
popf
pop
pushf
stc
mov
scas
or
fidiv
js
(bad)
in
icebp
call
fstp
mov
inc
adc
push
test
gs
ret
pop
addr16
cmp
aad
and
or
out
mov
xor
arpl
cwde
les
jno
(bad)
pushf
rcl
push
(bad)
loope
mov
add
cmp
jmp
enter
(bad)
push
ins
cs
fcom
push
or
jle
dec
stos
dec
aas
dec
xor
cli
sub
ret
arpl
cmps
cmp
clc
sub
pusha
adc
ret
out
xchg
mov
pushf
icebp
arpl
xor
mov
loop
mov
in
loopne
mov
scas
iret
cdq
sub
out
test
leave
inc
imul
(bad)
call
retf
sub
(bad)
or
inc
in
test
jmp
mov
test
or
or
or
cmps
out
mov
jmp
mov
dec
push
adc
mov
fwait
jmp
imul
or
popa
jp
push
fldenv
push
or
jmp
imul
int
ficomp
out
mov
add
adc
in
and
xor
jmp
cmps
iret
adc
mov
mov
dec
sbb
jmp
sbb
shr
mov
push
xchg
(bad)
test
bound
and
not
mov
cmp
ds
mov
fild
add
es
add
adc
je
pop
pop
inc
or
popa
or
push
dec
sub
jl
bound
push
and
gs
or
popa
cmp
dec
or
push
jnp
sub
mov
adc
call
dec
add
not
jge
outs
mov
cs
in
push
mov
sahf
jp
fdivr
dec
push
(bad)
lods
rcl
xor
xor
cmp
std
test
xchg
and
(bad)
pop
push
or
push
js
enter
push
sub
adc
xor
xlat
xchg
das
jbe
sbb
or
add
jns
push
pop
cmp
mov
imul
stos
sbb
push
dec
or
jnp
ja
in
push
ins
leave
int3
mov
test
cwde
loope
mov
pushf
out
push
dec
sub
out
mov
mov
push
and
cld
xor
jmp
xchg
out
fiadd
loope
fst
and
aad
jg
sub
mov
fst
test
jae
sbb
xor
sbb
loope
pushf
xchg
daa
mov
fs
mov
in
fldcw
ffreep
into
test
or
dec
inc
sub
mov
xchg
push
push
push
and
int
int
test
jl
outs
and
in
fstp
nop
retf
xchg
dec
ss
(bad)
lods
jecxz
xor
inc
dec
push
cmp
push
push
push
inc
push
pop
adc
jg
bound
jp
fsubr
out
stos
push
add
mov
adc
lods
hlt
mov
cli
scas
jmp
add
popa
(bad)
repnz
push
inc
pop
push
inc
jl
jns
mov
scas
idiv
rcl
scas
sub
push
xchg
std
sbb
mov
ficomp
outs
sub
data16
stos
cld
mov
popf
jmp
jmp
mov
in
fisubr
ds
add
repnz
sar
(bad)
movs
dec
aaa
jle
retf
lahf
add
add
idiv
rcl
lods
outs
sub
pop
and
and
retf
mov
mov
sahf
cs
je
ss
retf
xchg
xor
rol
mov
xchg
jno
push
jp
sub
add
xchg
clc
add
dec
xor
add
jb
push
mov
mov
scas
and
ror
sar
add
test
cmp
adc
movs
in
imul
in
fisubr
xchg
jp
dec
mov
into
mov
or
push
push
and
pop
jno
fsubp
xchg
add
or
retf
pop
push
cmp
repnz
test
xor
scas
cs
bnd
xor
add
add
into
fcomp
gs
pop
sbb
int
mov
or
cli
mov
dec
ja
pop
xchg
aas
js
adc
add
pop
popf
into
inc
xchg
js
sbb
cmp
gs
sbb
(bad)
fcomp
mov
jmp
lds
adc
icebp
mov
lahf
inc
pop
or
in
fst
int
stos
out
dec
imul
or
push
and
repz
add
aas
dec
mov
popf
leave
call
mov
movs
xlat
out
(bad)
fistp
fild
adc
in
idiv
mov
adc
xchg
int
sahf
(bad)
mov
mov
cmp
push
pop
jo
xchg
leave
cmp
and
ret
lods
(bad)
mov
mov
mov
jmp
loope
into
adc
(bad)
mov
out
(bad)
int
clc
xchg
out
cli
mov
mov
test
mov
popf
call
mov
(bad)
mov
mov
mov
dec
mov
dec
jmp
cmps
push
adc
ror
dec
icebp
add
pusha
in
das
stos
in
pop
outs
cmp
mov
cmp
std
cmp
push
jle
add
jbe
push
fwait
mul
dec
daa
jl
aad
out
mov
aaa
ins
add
loopne
mov
mov
jne
(bad)
scas
sbb
neg
xchg
jbe
pusha
es
retf
(bad)
dec
pop
adc
adc
mov
sahf
pop
pop
ds
mov
fstp
popa
inc
pop
pop
jnp
lahf
jmp
push
test
imul
mov
dec
push
ds
test
mov
sub
ss
add
xchg
ror
rcr
xchg
ds
test
imul
aam
lock
push
gs
fldenv
pop
adc
loope
in
outs
xor
rcl
(bad)
jno
push
pop
(bad)
mov
push
dec
sub
cld
lds
sub
jmp
sub
pusha
daa
jl
push
adc
jge
cwde
aad
test
xchg
dec
xor
add
(bad)
mov
xor
add
(bad)
lods
in
sbb
fistp
sub
test
popa
xlat
test
pushf
add
je
pop
adc
cmp
mov
in
aam
retf
repnz
retf
icebp
stos
div
mov
retf
sahf
fst
inc
sub
or
retf
mov
mov
xor
jae
or
mov
pop
pusha
push
xor
jmp
mov
dec
jne
pop
sbb
mov
movs
dec
push
adc
ins
bound
inc
imul
pop
push
je
adc
xchg
or
imul
dec
or
jne
adc
adc
jg
retf
mov
movs
push
and
movs
in
mov
(bad)
int3
(bad)
retf
test
movs
sbb
loop
(bad)
stc
and
push
add
pop
mov
add
imul
repnz
and
inc
pop
cmp
mov
jmp
cdq
push
jnp
push
je
and
movs
cmp
or
push
adc
pop
or
sbb
out
lods
in
or
movq
repnz
nop
out
ret
jmp
push
lock
call
je
adc
push
(bad)
loop
fiadd
fbstp
cdq
popf
push
adc
out
push
sbb
loope
adc
pop
popf
add
push
jmp
lahf
push
inc
es
enter
call
mov
stc
lea
stc
rcr
or
div
cmp
std
mov
xor
fs
add
adc
pusha
wrmsr
retf
stos
cmp
loope
mov
jle
sbb
jecxz
enter
xor
pop
push
push
sbb
push
mov
cmc
mov
push
jl
data16
pop
push
adc
inc
add
push
(bad)
stos
in
pop
ss
hlt
add
stos
lock
fcmovne
test
xor
jno
jmp
pop
add
push
js
(bad)
rol
jl
cmp
repz
lods
into
imul
dec
sbb
sbb
loop
fdivr
fild
rcl
fwait
mov
pop
int3
or
push
aam
jmp
xchg
fistp
jno
jl
es
push
sbb
arpl
add
xor
jl
jo
ins
pop
ss
imul
and
fs
cmp
dec
and
dec
sub
mov
in
lock
out
int3
(bad)
in
and
xchg
inc
mov
ja
in
xor
jno
pop
nop
fidivr
js
add
inc
xor
and
icebp
xor
add
xchg
not
out
ret
outs
sub
or
stc
rol
pop
sbb
ffreep
test
pop
xor
aam
jae
jae
jecxz
add
push
or
std
pop
inc
aas
dec
mov
lods
out
add
dec
test
mov
sbb
in
stos
outs
jge
movs
adc
shr
jle
mov
mov
xor
int
mov
mov
add
mov
icebp
repnz
loope
bound
out
(bad)
aam
mov
mov
sbb
jle
out
fistp
rcr
mov
push
sub
call
retf
aam
(bad)
xor
jo
(bad)
sbb
les
inc
mov
icebp
into
mov
and
push
push
mov
out
xchg
push
imul
jmp
retf
xchg
add
pop
inc
push
sbb
and
out
stos
fcomp
dec
sbb
jb
and
lds
aaa
xchg
sbb
hlt
test
in
in
sub
loopne
sub
mov
push
or
or
lods
loopne
add
xor
ret
mov
les
ret
mov
cdq
iret
(bad)
push
pop
adc
push
pop
adc
mov
cmps
sub
xor
adc
cmps
adc
outs
sub
ret
std
xchg
cmps
push
cmp
mov
js
pop
xchg
std
fsubr
jp
inc
or
add
mov
pop
push
or
icebp
xchg
sar
ins
pushf
out
hlt
cld
xchg
test
push
push
and
push
jns
mov
nop
faddp
mov
mov
and
xlat
cmps
push
xor
inc
adc
or
dec
inc
add
xchg
push
add
sbb
cmp
imul
pop
add
lahf
vcvtsi2sd
ins
cmp
movs
mov
lods
mov
fisub
pop
mov
mov
sahf
cmps
stc
adc
bound
inc
or
push
push
or
mov
xor
sbb
sahf
push
int3
pop
push
and
and
mov
push
sbb
aam
mov
push
xor
push
pusha
and
cmp
or
nop
and
adc
movs
cmp
jae
mov
mov
out
add
pop
aaa
mov
cdq
mov
pop
daa
scas
test
fsub
inc
outs
sbb
mov
retf
jle
xor
push
enter
mov
mov
or
push
add
lods
sub
pop
(bad)
ins
pop
sbb
and
jmp
clc
mov
loop
iret
ss
push
pop
pop
mov
fwait
aaa
je
dec
call
retf
and
adc
jnp
push
push
jmp
mov
xchg
cmp
outs
sbb
fwait
popa
repz
jle
(bad)
test
in
rol
push
int
adc
dec
sti
scas
dec
xchg
cwde
dec
ja
mov
pop
in
or
add
fsubp
and
push
cmp
mov
repz
and
pop
mov
ror
repnz
inc
dec
ficom
add
(bad)
sub
xor
xor
mov
lea
mov
sbb
outs
push
mov
pop
lds
adc
push
sub
(bad)
pop
push
scas
inc
add
mov
sub
lods
push
mov
(bad)
pop
add
out
mov
mov
imul
test
stos
push
sbb
mov
fsub
vdivpd
pop
jecxz
clc
sub
test
jb
cdq
mov
stos
(bad)
movs
cmp
in
and
int
inc
mov
ins
and
push
or
pop
or
pusha
test
fs
fidiv
push
jg
adc
jns
xor
lea
not
jmp
adc
and
push
nop
pop
loopne
or
or
enter
jp
out
test
int3
es
shr
int3
adc
fisubr
fild
retf
test
mov
les
cmp
inc
dec
rcl
mov
mov
mov
sub
add
mov
imul
cdq
sbb
adc
popf
in
ins
cmps
icebp
popa
mov
adc
rcl
lods
arpl
and
or
nop
fmul
icebp
bndldx
imul
fucom
add
lock
sbb
sti
rol
gs
jle
addr16
(bad)
rol
push
adc
cmc
jecxz
outs
pop
fimul
sar
mov
leave
out
jl
jnp
push
retf
push
std
movs
(bad)
in
xchg
iret
sbb
je
repz
mov
adc
mov
int
aam
movs
and
cmps
inc
mov
sbb
jge
mov
mov
out
mov
out
test
ins
fxch
mov
cdq
adc
pop
dec
fld
repnz
pop
add
bswap
gs
cmp
shr
push
inc
xchg
ja
in
cmp
and
xchg
imul
mov
fmul
and
pop
dec
xor
outs
xor
mov
mov
shl
dec
and
loope
popf
jecxz
mov
retf
sbb
jmp
add
xchg
xchg
and
vmread
les
cmovl
push
jge
mov
jp
and
lds
xchg
scas
cdq
xor
test
mov
sub
push
sbb
add
xchg
je
xlat
and
sbb
movs
and
mov
ficom
xor
or
jl
dec
mov
mov
popf
pop
ins
popa
nop
adc
mov
dec
out
push
dec
jns
add
into
adc
in
sub
jb
and
mov
inc
xchg
inc
add
jne
inc
mov
ret
cmc
mov
sub
or
jp
in
dec
and
daa
call
repz
jb
lahf
nop
mov
mov
mov
xor
xlat
out
pusha
call
xlat
pop
loope
xor
xchg
enter
jmp
adc
fstp
shl
and
add
pop
xor
push
push
popf
xchg
dec
repz
enter
mov
push
repnz
dec
inc
(bad)
mov
or
stos
scas
push
cmp
inc
or
dec
pop
pop
cmp
pop
ja
and
xchg
xchg
push
aaa
sti
cmps
dec
fadd
push
jecxz
and
pop
je
fnstcw
xor
and
imul
hlt
sbb
lock
lea
sar
jge
sub
mov
outs
inc
das
cmc
or
adc
out
shr
(bad)
sub
inc
je
div
arpl
mov
mov
dec
stc
cmp
adc
imul
cmc
jb
adc
cs
in
fs
fld
fs
mov
dec
dec
pop
push
dec
sub
mov
mov
pop
fidiv
aam
fs
mov
dec
mov
dec
(bad)
fist
sub
lods
(bad)
mov
lods
stos
arpl
ja
dec
(bad)
(bad)
mov
mov
aas
stos
inc
dec
daa
retf
push
retf
daa
ret
add
jae
pop
in
test
fisttp
(bad)
jnp
mov
sub
push
mov
sub
lods
stos
rcl
mov
mov
out
jbe
mov
push
aas
sub
and
or
inc
out
scas
(bad)
out
in
nop
retf
mov
(bad)
jbe
fwait
pop
cmp
dec
jmp
std
pop
pop
adc
(bad)
mov
pop
and
cmc
and
clc
sbb
push
push
push
fwait
xor
xchg
xchg
out
in
std
sbb
mov
or
push
sub
pop
int
arpl
ins
loope
sbb
mov
cmp
jne
(bad)
imul
push
aam
jge
lds
je
push
adc
retf
sub
xchg
push
jno
and
sub
mov
retf
xor
adc
sub
arpl
xchg
jmp
mov
cmp
setg
jb
sub
(bad)
fcmovnbe
repnz
or
xchg
cdq
std
pusha
out
(bad)
in
(bad)
cmp
pmaxsw
pop
adc
pop
repz
call
(bad)
pop
inc
leave
xor
test
or
pop
lods
mov
add
adc
fbstp
ja
jge
push
sahf
sbb
pop
popf
and
lea
cwde
pop
loop
dec
inc
ins
cmps
(bad)
inc
jle
outs
xchg
jnp
das
mov
cmps
fnstcw
data16
retf
rcl
test
fs
mov
arpl
mov
in
xlat
cmp
jae
popa
pop
sbb
ins
lods
data16
add
pop
loopne
cdq
fmul
jecxz
daa
pushf
nop
add
mov
mov
jne
mov
hlt
leave
in
fcomp
in
mov
(bad)
in
push
enter
in
xor
jg
js
pop
jnp
or
add
add
sub
jb
add
lds
jns
retf
or
int3
clc
pusha
add
jl
sub
sbb
sahf
pushf
std
in
mov
in
xchg
inc
jae
sbb
jmp
and
sahf
pop
icebp
test
jp
popa
fs
scas
or
outs
hlt
mov
lods
mov
cdq
in
into
lods
loopne
push
aaa
xchg
mov
jle
aam
in
and
dec
xchg
enter
xor
add
cs
out
imul
cmp
pop
mov
pop
push
shr
sbb
movs
popa
les
shr
inc
sahf
push
cs
xor
mov
sbb
xchg
or
jo
jno
push
sbb
sbb
repnz
xor
inc
push
into
push
iret
push
imul
xchg
xchg
xor
addr16
dec
sbb
in
and
inc
lock
outs
lea
imul
int3
xor
pop
shl
adc
int3
sub
dec
add
retf
jo
add
inc
ins
sbb
nop
popf
cmp
bswap
xchg
xor
push
cld
push
cmps
test
popa
mov
out
mov
adc
jnp
test
or
fld
jp
dec
jns
sub
and
push
sbb
jae
mov
(bad)
int3
cwde
add
mov
repnz
or
push
pop
fisub
sub
jmp
xor
cld
fmul
int
push
loopne
and
idiv
cs
add
shl
cdq
jno
fisub
and
dec
jge
addr16
push
push
mul
xor
call
mov
sub
js
(bad)
out
(bad)
repz
out
lock
push
mov
sub
sti
idiv
js
mov
outs
aam
in
cmp
mov
push
ds
pop
jl
push
and
adc
xor
shr
xchg
inc
(bad)
or
push
mov
out
(bad)
in
clc
shl
ret
movs
jge
out
cmp
inc
jg
(bad)
call
sbb
call
xlat
loope
fisubr
sbb
ss
retf
add
out
cmps
loopne
movs
xchg
push
push
sbb
sbb
pop
mov
aaa
or
xchg
cmp
dec
pop
cmps
add
stos
adc
jo
daa
jp
adc
jne
jmp
lods
adc
fs
in
push
pop
sar
ins
inc
jecxz
add
adc
jbe
sbb
cs
jb
ficom
mov
add
inc
add
div
add
add
aas
arpl
add
add
dec
sti
push
leave
test
push
sbb
xor
cmp
popa
adc
and
aam
das
pop
dec
imul
movs
cmp
arpl
mov
mov
push
inc
imul
inc
jbe
into
mov
mov
(bad)
mov
outs
xlat
imul
or
(bad)
cmc
aaa
into
mov
push
aad
lods
xchg
and
add
mov
int3
pop
xchg
(bad)
cwde
push
and
and
mov
loope
outs
jle
sbb
inc
sbb
mov
xchg
dec
cmp
mov
aaa
cmc
xchg
add
xchg
add
mov
jecxz
movs
mov
outs
aaa
loope
xor
mov
test
or
es
mov
iret
shr
scas
call
cwde
iret
cmp
mov
movs
sti
popf
and
lock
sub
out
int
sbb
cli
or
push
pop
adc
mov
(bad)
jne
outs
(bad)
js
jo
les
mov
mov
mov
int
aaa
scas
test
mov
sub
daa
ins
mov
mov
(bad)
fwait
xor
call
xlat
ins
stos
mov
dec
push
push
(bad)
ins
jmp
or
in
and
fwait
sti
jbe
dec
sub
push
dec
lods
cmps
sub
fstp
(bad)
in
mov
scas
jl
mov
loopne
adc
scas
xchg
jae
test
stos
nop
shl
xor
and
daa
sbb
sbb
imul
idiv
(bad)
sub
gs
scas
jbe
mov
mov
mov
sbb
das
pusha
nop
rcr
arpl
shl
inc
and
xlat
jne
pop
or
cmps
xor
daa
jne
int3
popa
lea
inc
xor
add
mov
loop
jp
xchg
mov
in
sbb
vpackuswb
(bad)
std
inc
cli
xlat
daa
mov
push
cmc
and
das
pop
mov
shl
pop
mov
retf
xchg
or
leave
arpl
pop
mov
jecxz
or
inc
xchg
cwde
fst
sbb
mov
ror
add
mov
popf
je
fwait
je
cmovg
inc
in
sbb
sbb
inc
stc
mov
pop
mov
mov
data16
popf
rol
cmp
mov
adc
test
dec
test
ficom
mov
jl
and
pop
lea
outs
xor
sar
(bad)
in
mov
push
fwait
mov
xchg
ins
jb
fdivrp
inc
int
mov
sti
sub
inc
pop
mov
sub
push
mov
mov
rcr
pushf
xchg
sbb
inc
adc
dec
scas
fild
xchg
aad
sbb
sub
pop
js
jecxz
jle
xchg
(bad)
fstp
mov
xor
dec
je
push
mov
(bad)
shl
jnp
xor
mov
pop
ror
and
test
cmp
lods
sub
outs
jmp
and
int
(bad)
xor
idiv
xor
je
mov
movs
addr16
dec
in
aas
jae
lea
(bad)
sub
icebp
sbb
jmp
xchg
mov
sti
test
call
iret
iret
mov
imul
jns
pusha
leave
xchg
out
adc
pusha
test
cdq
aad
les
cmps
das
fs
sub
in
repz
inc
fs
inc
cli
sub
dec
mov
add
pop
(bad)
nop
mov
xor
pop
call
sti
cmp
pop
test
sub
mov
stos
pop
(bad)
pop
dec
xor
jmp
pop
mov
xor
adc
rol
sahf
ins
dec
popa
jg
sub
push
jmp
dec
sub
jo
movs
add
stos
adc
cmp
inc
mov
hlt
mov
xor
lods
xchg
jnp
mov
push
dec
dec
(bad)
iret
les
or
push
ins
sar
cwde
sbb
dec
jns
int
xchg
aas
cmc
add
call
inc
ins
test
cmp
mov
push
or
sub
sbb
int3
addr16
std
mov
loop
push
sub
sbb
push
jno
nop
out
inc
xor
retf
int
cmp
mov
js
daa
lds
sbb
(bad)
test
mov
and
fild
mov
adc
sbb
mov
sbb
mov
test
in
pop
push
push
mov
sub
push
pop
test
mov
out
fs
shr
imul
adc
and
push
or
lods
pop
dec
outs
ins
pop
rcr
pop
(bad)
cdq
das
adc
outs
jmp
or
int
test
(bad)
hlt
xchg
je
cs
fcomp
loop
popa
cdq
mov
pop
in
inc
sbb
mov
icebp
mov
inc
stos
frstor
mov
dec
add
cmp
push
inc
push
jecxz
dec
rol
fst
imul
lods
mov
push
or
js
adc
les
rcl
sbb
mov
jns
sub
mul
outs
fsub
ret
fs
xchg
cmps
cmp
pop
mov
xchg
js
mov
xor
mov
test
push
cs
pop
iret
push
push
sub
inc
in
mov
icebp
cmp
into
jmp
dec
ins
ss
jno
mov
adc
stc
jae
outs
dec
cmps
cmps
xor
cdq
cli
cli
stc
mov
jbe
js
and
and
aam
jp
retf
inc
repz
stc
test
adc
xchg
xchg
sbb
and
loope
sub
pusha
lods
test
fidiv
lock
mov
push
xor
inc
add
mov
ficom
sub
mov
xchg
inc
push
movs
test
repz
cmp
jg
mov
or
jmp
int
mov
mov
sub
mov
sub
out
sbb
outs
jl
aam
mov
inc
inc
add
rcl
aad
test
mov
sub
push
int
xchg
jmp
push
fwait
das
sbb
adc
pop
jecxz
dec
pop
rcr
and
into
mov
push
scas
shl
inc
call
bswap
dec
rcr
cmp
mov
or
movs
add
xor
out
in
scas
adc
dec
add
inc
fstp
sbb
ja
xchg
ins
xchg
gs
and
dec
push
cmps
push
aam
push
arpl
ja
loopne
push
inc
into
stos
fs
sbb
jmp
inc
cmp
push
mov
dec
dec
fdivr
cmc
mul
mov
add
outs
(bad)
repnz
push
out
test
dec
and
mov
jne
or
xchg
pop
xor
cwde
pop
adc
rcl
add
inc
inc
jecxz
ins
xor
add
or
sub
ja
ja
icebp
xor
cmp
rcr
outs
mov
push
sub
jp
dec
sbb
scas
cmps
cmp
pop
in
rol
enter
add
push
jmp
mov
push
inc
xor
hlt
nop
pop
fcmovnb
mov
mov
jae
or
aas
jne
lock
mov
imul
push
stos
(bad)
shl
xor
push
ins
add
and
xor
stos
jno
or
imul
cmp
aam
gs
push
mov
popa
fiadd
pop
scas
test
retf
jno
into
sub
inc
test
dec
outs
sbb
repnz
pusha
cmp
aam
xchg
push
add
into
(bad)
mov
loope
inc
shr
sbb
xchg
jne
retf
or
mov
pop
jno
pop
inc
enter
std
jg
sub
cmp
in
pop
jmp
add
xchg
arpl
add
cwde
lahf
or
nop
scas
int3
jl
and
sub
jp
outs
adc
jmp
into
mov
jecxz
mov
dec
ja
idiv
std
sub
enter
ds
or
in
cmc
pop
(bad)
repz
sbb
add
and
test
sbb
outs
aaa
into
popa
add
dec
cli
leave
pushf
or
inc
dec
mov
sub
jne
aad
jp
jmp
test
data16
test
mov
fild
jb
xchg
pop
or
movs
or
mov
add
scas
dec
sub
sub
fcom
jno
jge
aam
mov
test
les
mov
and
ror
push
cli
mov
or
jno
int3
mov
mov
je
ret
in
dec
xchg
nop
int3
push
(bad)
test
push
rcl
fcom
pop
leave
les
inc
sbb
leave
ss
push
out
mov
dec
idiv
andps
push
inc
xlat
not
inc
rol
add
jge
pop
bound
in
xchg
outs
aaa
xor
movs
push
movs
or
clc
push
(bad)
dec
ret
mov
ror
pushf
pop
push
test
(bad)
fwait
inc
jecxz
cmp
cli
push
sbb
int3
lds
and
repnz
out
mov
sub
dec
mov
jmp
int
rcr
push
inc
sbb
dec
cli
hlt
adc
push
std
push
sub
dec
xchg
inc
push
or
or
movs
fdivr
(bad)
pop
cmp
cmp
repz
xor
pop
in
xor
cmp
xor
mov
or
arpl
sub
call
into
mov
push
mov
inc
sbb
das
aam
push
daa
sub
lds
shr
add
mov
ficomp
and
adc
inc
addr16
sti
mov
cli
repz
out
mov
add
xchg
push
add
das
sbb
cmp
loope
adc
(bad)
cmp
xor
daa
push
repz
fld
adc
xchg
imul
sbb
cmp
pop
fiadd
in
pop
or
sbb
pop
mov
adc
dec
mov
jns
jl
add
add
cs
pop
cld
movs
jno
pop
mov
call
test
xchg
xchg
inc
mov
pushf
lahf
dec
movs
inc
test
xchg
cdq
ins
fmul
unpckhps
cld
push
leave
cmp
fwait
dec
xlat
push
mov
pop
mov
neg
mov
cmp
pop
cmps
and
dec
mov
loopne
psubsw
cs
mov
rcr
fs
dec
lods
mov
pop
mov
mov
je
mov
and
(bad)
push
sbb
repz
and
ss
iret
pop
mov
ss
dec
cmp
repnz
mov
leave
dec
test
inc
aad
adc
push
mov
aam
stc
mov
sar
out
rol
or
xchg
ins
mov
imul
mov
dec
stos
xchg
adc
movs
ins
xlat
daa
in
mov
pop
out
dec
xchg
cwde
call
nop
jno
loopne
cmps
xchg
jno
jae
es
cmp
es
popf
jnp
ins
fnstsw
sbb
pop
scas
lea
or
aaa
in
in
mov
rcl
mov
mov
lock
adc
inc
mov
xchg
mov
xor
cmp
push
fld
test
fld
adc
and
mov
fwait
inc
mov
mov
cdq
ja
jg
retf
aas
jecxz
dec
fisubr
cmp
or
inc
leave
push
mov
lods
xchg
popf
xor
movs
xchg
dec
cmps
fwait
dec
xchg
jge
jo
loope
mov
mov
lods
or
jle
and
dec
movnti
inc
fisubr
or
jne
fwait
jns
out
dec
test
movs
imul
arpl
das
pop
push
out
enter
hlt
inc
mov
shr
(bad)
and
and
repnz
or
adc
scas
dec
mov
movs
xchg
outs
(bad)
daa
adc
daa
ss
mov
pop
test
imul
out
jmp
lods
je
addr16
sub
push
mov
lea
adc
pop
cmps
popa
enter
mov
lods
pushf
ins
les
or
loope
test
cwde
inc
scas
imul
stos
xchg
je
xchg
js
test
sub
scas
xchg
jl
xchg
mov
cmp
pop
mov
pop
fistp
lds
shl
xchg
xchg
outs
mov
jecxz
cld
jo
fwait
xchg
jbe
xchg
mov
imul
test
mov
xchg
dec
sbb
pop
les
std
add
and
xor
les
loopne
inc
stos
dec
test
cmp
dec
mov
fisub
in
pop
sbb
loop
cli
jae
bound
nop
jl
ja
outs
or
cmp
pop
ror
mov
(bad)
loope
ror
adc
push
xchg
jg
ja
outs
fiadd
or
shr
sbb
jnp
ja
cmc
inc
int
out
aas
aam
psraw
call
push
xchg
dec
retf
sub
or
dec
fdivr
jecxz
xlat
inc
aam
or
dec
mov
out
xchg
mov
mov
leave
cmp
push
ret
inc
fisttp
std
mov
mov
and
int3
or
push
sbb
inc
xchg
xchg
jo
pop
push
cli
sub
adc
pop
ficom
pushf
ja
push
mov
jb
xchg
aad
mov
xchg
retf
jge
xor
inc
mov
dec
jmp
and
and
pop
xchg
mov
dec
cs
ror
test
push
or
xchg
jns
dec
mov
jb
and
in
adc
das
(bad)
retf
jp
or
ss
adc
pop
mov
imul
push
cld
ss
push
adc
adc
push
mov
xchg
mov
jno
imul
jmp
or
js
add
sbb
and
push
add
pushf
inc
fstp
pushf
inc
sbb
cmp
lds
sub
push
inc
leave
cmp
adc
adc
dec
mov
mov
ret
inc
scas
adc
lods
fs
adc
add
dec
mov
push
mov
xor
add
je
xchg
push
add
cmp
cmp
rcr
adc
or
and
lds
inc
cmps
xchg
ins
jmp
bnd
dec
call
mov
xchg
popf
xchg
add
cmp
cmp
loopne
int3
sub
jb
jb
sub
mov
sub
clc
inc
ret
das
push
add
pop
movlhps
jne
pushf
cwde
xchg
stos
mov
pop
xchg
push
mov
push
jecxz
call
(bad)
jns
aaa
lock
mov
pop
mov
mov
jbe
xchg
aam
or
leave
jnp
cmp
int3
dec
ficomp
stos
inc
fiadd
mov
cld
pop
cli
push
mov
jnp
jo
ror
sbb
pop
ficomp
xor
fstp
in
adc
aas
or
retf
push
lods
mov
aaa
jecxz
movs
inc
test
pop
stos
fwait
ins
enter
fisttp
adc
pop
(bad)
sub
xor
test
rcl
out
dec
dec
retf
push
shl
call
pmaddwd
xchg
inc
int
shl
out
sub
pop
mov
push
add
(bad)
push
test
ret
lds
adc
lds
in
jge
xor
pop
mov
int
movs
xchg
pushf
pusha
rcl
pop
mov
sub
sub
push
mov
enter
jmp
shl
rcl
add
sub
inc
fild
or
pop
mov
fiadd
add
cmc
and
loope
cmp
jo
add
in
xor
dec
sbb
ins
test
cmp
pop
mov
test
jne
cmp
push
xor
and
repnz
inc
stos
push
test
dec
mov
ds
sub
lds
not
fimul
push
in
lds
nop
popa
xlat
and
out
and
mov
call
add
mov
mov
test
cmp
pop
fsub
or
ja
ins
(bad)
push
jge
js
cmp
inc
ret
(bad)
cli
push
xor
call
xor
xchg
test
push
mov
and
repnz
mov
inc
into
pop
mov
push
adc
sub
or
push
mov
fld
ret
imul
xor
mov
(bad)
daa
add
aas
jmp
pop
movs
xchg
dec
leave
mov
mov
mov
push
jecxz
xchg
mov
retf
xor
adc
lock
mov
and
pop
lea
fistp
jp
xchg
jp
jge
popa
xchg
rcl
jmp
adc
pop
mov
fidivr
sbb
cmps
ins
dec
cmc
add
(bad)
adc
gs
cmp
dec
test
outs
test
jne
xor
add
add
xor
repz
mov
mov
xor
and
sub
push
test
jp
pop
sti
das
adc
add
add
repz
stos
push
inc
aad
out
mov
mov
aas
shl
sbb
push
daa
aaa
or
inc
movs
addr16
adc
es
fisttp
cmp
hlt
cmp
push
mov
jp
outs
fst
jg
push
scas
gs
loopne
icebp
adc
int
idiv
sbb
outs
(bad)
dec
mov
ret
(bad)
cmp
stc
pop
cmp
test
or
push
xchg
cmp
adc
sbb
pop
fimul
cmp
daa
(bad)
cmp
(bad)
cmp
mov
fld
sbb
mov
sar
sbb
das
jecxz
popf
js
jnp
cwde
inc
movs
imul
cmps
and
add
and
icebp
inc
(bad)
xchg
(bad)
push
mov
loope
jge
xor
add
ins
int
xchg
jns
pop
mov
xchg
ins
rcl
ja
and
jl
and
les
inc
mov
cli
dec
mov
cmps
lea
xchg
mov
or
in
xchg
ins
aas
cmp
ret
push
rol
pop
int
ret
jge
xor
adc
ss
mov
xchg
xchg
and
cmps
dec
adc
sub
jecxz
scas
mov
xor
ficomp
dec
movs
xchg
jge
add
sub
in
pop
into
aas
stc
push
mov
mov
jle
aam
dec
test
and
pop
add
and
outs
mov
sbb
sbb
and
mov
push
test
les
lock
stos
jnp
in
push
add
(bad)
push
stos
inc
mov
loop
xchg
push
fld
mov
pop
scas
outs
cmps
xchg
cdq
dec
mov
repnz
into
cmp
test
pop
scas
xchg
cdq
ficom
(bad)
and
pop
fstp
loop
cmc
ins
retf
and
mov
lea
push
push
lds
fdivr
xor
push
mov
pop
add
or
adc
aas
cld
ins
iret
dec
fadd
mul
adc
(bad)
mov
outs
cmps
mov
pop
cld
xor
add
adc
das
or
ret
and
cmp
xchg
jl
dec
cmps
xchg
call
dec
enter
add
pop
mov
std
sub
imul
imul
inc
les
add
xchg
inc
cli
inc
mov
jb
xchg
clc
jnp
cwde
xchg
outs
or
nop
jle
add
cmp
out
test
arpl
pop
mov
clc
sub
adc
loop
lds
in
stos
sbb
sbb
cmp
inc
mov
lods
fs
push
xchg
lock
jb
neg
push
mov
jno
ret
pop
loop
ins
fadd
cmp
jle
jp
add
sub
es
push
scas
mov
mov
adc
dec
lods
jmp
push
stc
or
xor
pop
les
jbe
mov
add
out
or
cs
fnstenv
leave
push
push
stos
inc
int
call
mov
cmc
inc
dec
retf
sbb
das
and
add
or
cmp
jp
push
cmps
fwait
pusha
push
cmps
lahf
(bad)
imul
mov
xchg
inc
out
js
inc
jmp
out
and
xor
imul
push
aad
ret
and
shl
adc
jae
popa
xchg
sub
and
dec
test
mov
in
mov
mov
pop
or
out
cld
pop
test
dec
mov
sub
sbb
sbb
scas
outs
mov
pusha
scas
fwait
push
lods
jg
gs
lods
dec
mov
cmp
sbb
sub
sub
les
aam
cmps
popa
xchg
icebp
mov
out
or
push
stc
and
in
adc
sar
pop
mov
or
and
mov
jnp
mov
lahf
mov
dec
mov
xor
pop
mov
dec
cmps
arpl
dec
enter
das
ret
and
adc
pop
fiadd
(bad)
xor
into
push
xchg
jg
sbb
or
and
ja
push
fmul
loopne
add
ss
test
(bad)
add
push
ret
dec
xchg
xchg
mov
dec
int
mov
js
iret
push
test
jp
outs
retf
xor
add
inc
cld
pop
fimul
les
fld
(bad)
xchg
inc
movs
xchg
xchg
jb
inc
mov
inc
repz
and
inc
rol
and
pusha
cmps
cmp
jbe
in
in
pop
mov
adc
add
pop
scas
int3
pop
mov
xchg
mov
das
ins
cmps
fwait
push
sar
int
div
or
xlat
add
cld
pop
xchg
das
adc
fimul
(bad)
pop
adc
pop
xchg
js
xchg
dec
enter
adc
cmp
repnz
add
push
xchg
mov
pop
fadd
ss
and
sti
ds
nop
xchg
jge
ror
xchg
dec
aad
sbb
add
mov
aaa
out
dec
stos
call
sbb
push
lods
mov
add
movs
jecxz
aad
mov
pop
(bad)
or
rcl
fidivr
jns
ret
pop
mov
jecxz
lods
fwait
pusha
retf
pop
mov
mov
outs
fsub
sbb
loopne
pop
(bad)
sbb
popa
aam
in
scas
lods
jmp
add
ins
fnstcw
shl
cld
pop
test
mov
fisubr
sbb
and
add
lock
mov
nop
rcr
xchg
jns
inc
aam
mov
adc
mov
and
push
out
dec
fdivr
jb
dec
mov
(bad)
push
ss
je
push
retf
cs
aaa
xor
dec
loopne
stc
jg
sbb
add
wbinvd
or
adc
js
lods
outs
repnz
shr
adc
push
sbb
lds
push
scas
(bad)
mov
bnd
inc
fidivr
inc
mov
pop
fild
push
shr
adc
cmp
cmc
jle
inc
mov
adc
out
ja
xchg
xchg
imul
xchg
sbb
jg
lods
out
jb
js
sub
cmp
sbb
jb
xchg
xchg
dec
fld
cdq
inc
leave
sub
int3
mov
and
and
pop
mov
sub
ins
retf
inc
int3
es
dec
adc
jle
inc
iret
jle
push
aad
fistp
call
imul
ret
inc
aam
adc
cmp
jmp
data16
jne
xchg
fs
dec
shl
aaa
pop
cmp
adc
mov
je
inc
icebp
push
cmps
call
ja
inc
lods
mov
mov
adc
push
jmp
in
(bad)
getsec
add
jne
jg
popf
imul
data16
dec
rcr
retf
sub
stc
jl
pop
xor
adc
es
push
out
(bad)
xor
jle
es
push
sar
sbb
jecxz
cmps
call
push
pop
loopne
(bad)
pop
mov
dec
(bad)
daa
jecxz
xlat
inc
fidivr
jnp
xor
xchg
sahf
xchg
mov
pop
enter
inc
cmps
mov
cmps
mov
and
adc
(bad)
or
pop
hlt
push
mov
jp
adc
xor
in
sub
push
adc
mov
shl
in
scas
lea
arpl
pop
cmp
pop
in
inc
cld
push
xlat
jle
and
fist
inc
enter
je
js
inc
int
or
and
cmp
cmp
jg
push
fldcw
cmp
cmp
sbb
pop
xor
lea
xor
sbb
mov
push
xchg
test
loope
scas
mov
dec
mov
frstor
push
add
and
dec
cmps
xchg
jp
pop
mov
cmp
pop
xlat
inc
(bad)
je
inc
cmps
scas
pushf
ins
shl
cs
aaa
xor
cmc
pop
cmps
loope
call
mov
pusha
hlt
push
mov
les
inc
rol
push
cmc
or
push
icebp
jb
sub
jmp
aaa
adc
out
pop
call
pop
shl
mov
lea
mov
mov
mov
shr
pop
mov
test
mov
mov
ret
push
cli
mov
add
nop
gs
sbb
dec
fnsave
jo
dec
(bad)
pop
ret
mov
ror
mov
sbb
movs
mov
data16
stos
xchg
sahf
imul
push
repz
mov
inc
lods
mov
xor
out
mov
std
inc
(bad)
push
adc
xor
pop
adc
inc
aam
icebp
and
jp
xor
cmp
jg
push
into
jns
sub
ins
repnz
mov
sbb
jg
pop
cmps
cmp
and
cs
cmps
mov
outs
cld
dec
fst
push
cli
pmulhuw
das
sub
ja
sub
shl
inc
mov
dec
lock
or
adc
inc
stos
xchg
mov
inc
iret
dec
test
mov
stc
dec
test
adc
iret
js
push
mov
lods
mov
nop
call
cmp
adc
or
sbb
mov
cmp
fs
pop
cmp
sbb
pop
mov
mov
xchg
retw
mov
xchg
outs
icebp
pusha
cli
cs
inc
ret
cdq
xchg
pushf
jle
lea
push
hlt
dec
cmp
or
dec
cmc
dec
jmp
xchg
push
ficomp
out
mov
mov
mov
and
sbb
fsub
cmp
cmp
add
adc
pop
fsubr
(bad)
leave
pop
fisttp
das
ds
ins
rcl
int
fnstenv
out
fisub
cmp
pop
mov
enter
sbb
xor
push
fsubr
movs
xchg
xor
int3
pop
stos
mov
pop
repz
mov
ret
ins
and
js
pop
xlat
inc
fimul
aas
xor
and
outs
(bad)
jnp
push
pop
std
xor
shl
retf
inc
scas
call
pop
cmp
sysexit
adc
xchg
push
stos
mov
push
adc
xor
xor
sbb
adc
jmp
mov
popa
shr
jmp
sbb
push
stos
xor
fimul
xchg
outs
retf
pop
scas
mov
xchg
in
movs
mov
mov
cmp
dec
cmps
mov
sbb
call
inc
cmc
push
stos
xchg
mov
cwde
fwait
call
mov
test
inc
shr
mov
cdq
xchg
addr16
jns
je
ja
daa
adc
gs
dec
sub
adc
js
das
or
and
sbb
outs
shl
jno
pop
clc
mov
fsub
add
and
adc
sbb
out
fiadd
pop
sub
push
les
push
pop
sbb
ds
cs
cmc
mov
mov
call
xchg
data16
fist
mov
mov
dec
shl
das
xor
jnp
sbb
dec
icebp
jle
jg
adc
(bad)
cmp
jb
mov
sub
sub
jg
sub
inc
les
push
push
loop
in
fnstenv
jo
xor
pop
ret
dec
cmps
xchg
fwait
js
nop
dec
mov
nop
inc
mov
mov
dec
mov
movs
xchg
cmps
mov
jns
dec
xchg
jno
xchg
jns
sub
idiv
jmp
or
clc
or
jae
pop
test
clc
pop
mov
sub
lea
sub
dec
test
adc
push
push
shl
pop
mov
scas
lahf
jo
sub
or
adc
and
sub
sbb
(bad)
pop
lods
out
daa
push
sbb
dec
mov
xchg
call
cmc
add
dec
and
int
or
push
sbb
jo
and
push
movs
ja
pop
xchg
push
frstor
sbb
pop
sbb
push
out
cmp
xor
and
pop
fnstsw
icebp
push
adc
ror
adc
cmp
in
shl
stc
ds
push
mov
fcomp
popa
xor
sbb
sub
push
shl
adc
pop
mov
repnz
scas
mov
dec
mov
and
mov
fnsave
jmp
lahf
cdq
(bad)
xlat
pop
retf
pop
mov
stos
js
out
movs
inc
fstp
or
pop
mov
lods
(bad)
jle
add
sub
sbb
xchg
jle
and
add
and
cmp
sbb
add
ds
mov
retf
pop
stc
daa
loopne
out
pop
dec
mov
jb
xchg
bound
mov
test
inc
sbb
pop
cld
lahf
dec
sar
test
hlt
pop
test
pop
loopne
mov
mov
xlat
push
les
scas
mov
or
pop
sub
movlps
bound
mov
push
stos
inc
mov
inc
mov
rcr
lahf
dec
mov
daa
add
push
(bad)
lahf
sahf
dec
mov
in
sub
push
mov
push
shl
adc
push
push
sti
mov
cmp
dec
mov
xor
test
ins
test
je
ins
mov
dec
mov
jae
xchg
dec
mov
add
push
mov
xchg
inc
cmps
popf
jnp
xchg
xchg
dec
and
adc
aas
adc
xor
popf
fimul
push
cmps
mov
lods
xchg
je
sub
loope
or
jne
pusha
rcr
(bad)
and
push
cmps
mov
ja
mov
dec
mov
mov
mov
jle
sub
push
stos
in
movs
jb
add
loope
iret
ss
mov
mov
pop
mov
stc
pop
lods
mov
cmp
sbb
sub
xor
rcr
ins
cmps
add
stc
ds
fs
pause
ins
fld
dec
in
mov
dec
mov
gs
pop
enter
adc
outs
xchg
push
xchg
mov
push
into
cmps
sub
mov
test
jl
mov
cmp
in
scas
cdq
add
xchg
push
add
mov
add
dec
cmove
test
mov
sahf
shl
lahf
in
jmp
mov
add
pop
outs
popf
(bad)
xchg
xlat
sbb
pop
dec
cmp
test
xchg
sar
fdiv
out
ret
xchg
cmp
ins
mov
scas
int3
lds
dec
and
adc
das
xchg
idiv
dec
add
sbb
iret
vphadddq
fs
loope
loopne
test
int3
mov
ins
adc
xor
(bad)
mov
sbb
and
out
(bad)
in
into
cmps
leave
cmc
aam
fwait
pop
das
popa
xor
ror
iret
(bad)
mov
push
and
dec
xor
mov
shl
push
adc
gs
xor
call
int3
mov
inc
pop
push
call
inc
inc
pop
adc
dec
sbb
cwde
cld
xchg
fadd
and
pop
cs
push
mov
xor
imul
adc
inc
jae
push
addr16
(bad)
fnstcw
add
cmp
aam
mov
jl
jp
pop
dec
sub
inc
pop
in
push
xchg
lock
inc
add
xor
add
ret
scas
cmps
ins
arpl
cmp
dec
pusha
xor
sbb
mov
mov
mov
sub
stc
ret
mov
jle
push
aas
in
push
icebp
clc
retf
jae
je
xor
cmp
fiadd
adc
adc
call
fs
adc
xlat
lock
in
dec
jae
sub
clc
mov
lods
imul
sbb
aas
cdq
retf
pop
imul
sub
jmp
(bad)
std
(bad)
stc
mov
jmp
jle
pop
mov
cmps
loop
dec
and
adc
fistp
xchg
inc
jle
outs
xchg
js
out
(bad)
pop
mov
push
adc
std
xchg
fcom
cli
test
push
ss
push
outs
adc
mov
test
inc
mov
mov
mov
pop
aaa
jle
adc
dec
test
imul
and
sbb
cmp
xchg
enter
hlt
push
mov
test
mov
or
in
sub
and
sbb
aaa
loop
leave
push
stos
jmp
lock
(bad)
dec
inc
bound
inc
retf
cmp
fistp
push
int
pop
push
leave
jmp
mov
stc
call
(bad)
movs
ins
cmp
addr16
(bad)
mov
push
mov
mov
fwait
inc
xor
test
gs
jmp
dec
pop
cs
fimul
fs
and
push
and
movs
sbb
rol
sub
idiv
mov
jno
jbe
in
fbstp
add
pop
nop
ficom
add
leave
push
push
cmp
sub
ret
and
adc
emms
aaa
adc
mov
jbe
out
shl
mov
in
cli
sub
xor
sti
mov
dec
mov
je
xor
jns
and
xor
data16
(bad)
xchg
sub
in
adc
and
jne
push
xor
int3
mov
es
sub
addr16
sti
lds
jae
xor
stc
cmps
div
test
jnp
(bad)
fmul
test
push
addr16
adc
std
fdiv
push
mov
dec
mov
pop
outs
xor
stos
xor
retf
ja
add
out
fiadd
fidivr
cwde
out
mov
stc
sbb
or
jb
mov
fstp
and
push
jge
cdq
fmulp
stos
sti
mov
xchg
in
adc
mov
xor
or
(bad)
mov
clc
xchg
dec
xor
and
repz
jl
pop
popf
sti
mov
xor
mov
mov
mov
cmps
dec
push
jnp
mov
call
inc
push
es
ins
add
or
(bad)
inc
jbe
push
pop
mov
shl
jmp
repz
push
ins
sub
and
mov
pushf
push
cmp
jmp
add
mov
cwde
and
adc
push
pop
add
pop
pop
pop
push
jae
push
adc
cmps
in
pop
pop
sub
cdq
adc
ja
add
call
stos
sti
out
mov
xchg
cmp
jle
pop
and
dec
add
add
int
out
pop
jbe
ja
dec
add
inc
das
imul
sbb
mov
inc
push
pop
bound
jl
ss
sbb
or
ret
lods
sar
jo
sbb
mov
dec
cld
add
sub
lahf
enter
lods
xor
push
in
push
(bad)
sub
xlat
js
aas
jg
sub
mov
lods
sub
jns
jns
in
jmp
mov
ja
push
loopne
xchg
fimul
add
fiadd
stos
adc
push
stos
cmc
dec
pop
pop
addr16
jle
cmp
push
in
xchg
cmp
and
and
push
mov
dec
push
jmp
stos
jge
ret
nop
je
sub
add
loope
rcr
push
cli
hlt
xlat
cmps
mov
stos
cmc
mov
push
jae
xor
jmp
or
out
into
lods
mov
xchg
leave
adc
rcl
loope
aad
inc
dec
movq
mov
dec
add
push
mov
pop
sub
leave
mov
stos
bound
jle
add
sbb
ins
cmps
cmp
out
movs
leave
cmp
jno
lods
ror
gs
cmp
lods
out
movs
inc
dec
or
stc
mov
xchg
dec
jl
aas
aam
test
cmp
pop
and
add
adc
mov
pop
mov
mov
lds
push
stos
jne
dec
cmps
inc
cmp
pop
push
mov
aam
inc
inc
pop
cmp
push
mov
push
cli
adc
and
(bad)
jmp
dec
jb
adc
mul
stc
fstp
mov
rcl
aam
mov
xor
xor
and
sbb
fld
test
mov
dec
pop
mov
sub
jle
inc
imul
imul
mov
cmovg
dec
add
mov
scas
sub
div
lods
jae
add
loop
popf
cli
mov
mov
(bad)
fistp
xlat
(bad)
stos
jmp
mov
mov
add
call
sbb
fst
mov
sub
push
jne
(bad)
in
daa
jbe
ret
rcl
inc
mov
inc
push
vpaddq
enter
mov
shr
sahf
or
int
rcl
mov
inc
daa
arpl
jne
or
cmc
pop
aas
scas
(bad)
lods
call
addr16
movs
sbb
mov
movs
xchg
xor
(bad)
ror
pop
cmp
fisubr
mov
xchg
loop
mov
(bad)
mov
xchg
mov
xchg
shl
(bad)
xor
xchg
(bad)
jno
popa
pop
leave
sub
inc
stc
aaa
icebp
mov
pop
push
pop
mov
cmps
hlt
adc
dec
cmp
js
ins
xchg
sbb
dec
sub
sbb
es
stos
hlt
mov
xor
fdivr
movs
sub
push
adc
gs
xor
jmp
enter
cmps
and
jg
dec
add
push
in
into
xchg
rcr
jp
pop
js
sub
(bad)
jecxz
mov
loope
rcl
enter
pop
inc
sbb
stc
pushf
icebp
push
dec
push
ins
inc
sub
stos
rcr
into
mov
scas
ds
aam
cmp
outs
imul
call
jbe
xlat
fadd
(bad)
test
jp
lock
out
retf
push
ins
add
dec
and
mov
out
enter
add
dec
aaa
popa
add
jp
pop
sahf
into
mov
out
test
xchg
sub
ficomp
imul
cdq
push
pop
add
scas
out
mov
imul
jmp
jmp
push
dec
cmp
daa
mov
push
fist
fmul
mov
xor
bound
inc
ror
cmp
add
into
push
addr16
test
sbb
push
push
ds
out
test
pop
cmp
add
push
xor
xchg
repnz
imul
xchg
mov
add
sbb
(bad)
(bad)
movs
xchg
or
pop
pop
dec
scas
sub
add
ja
jne
(bad)
ficomp
into
test
xor
pop
mov
fldcw
mov
pop
(bad)
hlt
mov
jecxz
inc
or
scas
adc
int3
fadd
out
rcl
cmp
or
xor
or
fwait
in
imul
sbb
outs
lods
or
sar
xor
retf
xchg
repz
xor
out
ret
mov
jecxz
fsubr
push
imul
and
cs
sbb
xor
imul
mov
cmp
mov
add
xchg
xchg
mov
xchg
leave
mov
fdivr
xor
in
cmps
cli
and
push
call
sahf
test
pop
out
mov
xor
and
dec
pusha
mov
jno
loopne
push
jo
ds
cmc
scas
test
xor
loope
mov
aam
mov
(bad)
mov
sbb
pop
mov
test
sbb
inc
popf
loopne
ret
sub
imul
dec
gs
jnp
mov
mov
sbb
bound
jae
pop
add
mov
mov
add
push
nop
retf
mov
pop
jo
dec
(bad)
lds
imul
into
lods
inc
and
fdiv
dec
paddsw
fcomp
jns
dec
or
mov
xchg
les
test
inc
lods
pop
pop
das
adc
dec
push
(bad)
out
mov
pusha
cs
or
cmc
daa
mov
cwde
jmp
or
inc
sub
adc
idiv
lods
sbb
aad
rcl
push
or
fiadd
data16
or
adc
jp
adc
xchg
xlat
and
add
lock
cmp
mov
call
inc
xlat
mov
arpl
hlt
dec
mov
or
call
imul
mov
add
das
dec
mov
fistp
and
(bad)
xor
add
cmp
and
mov
mov
shl
rcl
and
sbb
dec
xor
fisttp
outs
sbb
sbb
in
test
pop
mov
pop
push
or
cli
mov
cld
xlat
xchg
hlt
loope
repz
and
mov
pushf
loope
imul
les
js
sub
(bad)
into
mov
sub
cld
cld
mov
dec
iret
adc
sub
mul
lea
fucomip
mov
or
ret
pop
push
sub
pop
mov
or
sub
jmp
pop
pop
mov
pop
mov
xor
push
cmp
in
mov
(bad)
out
inc
sub
inc
add
scas
push
push
add
shr
xchg
cmp
fs
adc
loopne
(bad)
adc
push
arpl
push
fwait
icebp
mov
sbb
dec
mov
stos
repnz
mov
mov
jge
dec
or
mov
daa
arpl
jg
mov
fidiv
mov
inc
and
xchg
les
sbb
in
test
xchg
(bad)
fstp
inc
and
and
sbb
mov
sub
mov
push
mov
inc
cmp
sahf
xlat
gs
aas
cdq
(bad)
clc
mov
cdq
dec
inc
add
ror
mov
mov
fistp
jno
jmp
jecxz
out
pushf
sbb
add
mov
sbb
push
jecxz
fnstcw
push
dec
sub
lds
cwde
push
bound
out
aad
(bad)
adc
sbb
cs
pop
push
or
jmp
adc
iret
test
inc
call
(bad)
mov
jno
and
adc
push
xor
cmp
mov
movs
cmp
cld
fmul
dec
adc
add
lods
ret
(bad)
sahf
jmp
sub
mov
mov
movs
xor
mov
mov
jno
sbb
cmp
loopne
aad
cdq
fsubr
ins
jge
pop
xchg
sbb
adc
mov
imul
(bad)
fdivr
cmp
pop
and
xchg
inc
or
inc
ss
jp
imul
fild
mov
add
push
in
inc
inc
inc
and
sbb
cmp
rcr
pop
or
add
add
mov
(bad)
stc
mov
dec
imul
rcr
pop
fucomip
repz
xor
mov
movs
jae
dec
es
mov
mov
arpl
pusha
mov
push
cmp
stos
hlt
mov
sub
add
mov
jns
aad
sti
mov
jno
jo
push
and
clc
mov
call
arpl
int
lods
jmp
pop
sbb
sub
cmp
mov
cmp
xor
sbb
cmc
into
mov
cmp
ret
retf
adc
mov
cmc
push
and
fld
mov
outs
imul
mov
test
mov
xor
(bad)
mov
pop
sub
or
repnz
leave
push
xchg
div
aad
mov
aas
js
and
hlt
div
inc
mov
inc
sub
pushf
jmp
push
pop
das
dec
mov
not
mov
loope
mov
push
gs
adc
jmp
jae
cmp
clc
(bad)
fld
call
jge
or
xor
sbb
fs
scas
and
jecxz
adc
xchg
adc
pusha
adc
push
xchg
dec
jp
sbb
repz
stc
aam
movs
imul
and
jae
jae
sub
mov
sbb
movs
cld
mov
mov
mov
scas
push
daa
ins
and
(bad)
xchg
aad
fisub
add
aas
jl
xor
xchg
fmul
mov
adc
ficomp
outs
and
sub
mov
jnp
mov
jge
and
int3
loop
mov
cmp
or
mov
or
loop
sbb
mov
fwait
pop
cmp
jge
jns
jbe
sub
loop
movs
fist
or
in
or
fld
inc
adc
fist
push
int3
pop
retf
mov
jmp
mov
pop
add
pop
shr
and
outs
pop
cmp
xor
outs
and
sub
idiv
imul
jb
xor
int3
xlat
mov
into
jmp
push
jo
or
loope
jnp
inc
push
sbb
add
sbb
test
mov
mov
sar
dec
pop
lahf
rcr
(bad)
test
fs
adc
dec
inc
or
jl
pop
mov
mov
sbb
push
push
push
mov
das
imul
mov
jb
cmc
rcr
sub
adc
xlat
and
int3
pop
jne
xor
mov
xchg
fs
sbb
enter
push
ss
fsubr
rcl
cwde
or
in
repnz
sbb
or
jmp
pop
pop
addr16
out
pushf
cdq
aas
xchg
leave
dec
arpl
sbb
sub
pop
(bad)
cmps
jmp
push
pop
add
sti
cmp
push
and
sub
or
loopne
nop
push
jne
push
mov
push
out
lds
cmp
mov
imul
cmp
retf
xchg
push
pop
sbb
sbb
stc
mov
mov
pop
mov
mov
shr
inc
push
sti
std
xchg
ret
xor
inc
mov
mov
and
pop
mov
imul
daa
mov
mov
inc
or
pop
pop
sub
das
outs
sbb
aam
ret
adc
fnstsw
jle
rcr
or
rol
inc
and
sar
ja
lods
dec
inc
and
cmp
aaa
in
inc
adc
call
mov
add
fadd
scas
rcr
mov
dec
xchg
pop
xor
imul
sub
es
mov
scas
dec
aas
push
push
shl
adc
mov
outs
jne
dec
adc
arpl
gs
in
jmp
mov
sub
push
pop
gs
add
ret
in
iret
lahf
aas
dec
sub
(bad)
lock
loopne
dec
aas
jg
and
(bad)
scas
in
and
mov
add
pop
and
lods
adc
pop
and
mov
jns
jns
add
call
dec
and
icebp
daa
(bad)
div
daa
sub
mov
aas
or
jge
adc
call
or
das
jno
loopne
mov
and
loopne
jb
inc
mov
jmp
fisttp
dec
cmp
or
sbb
js
or
sub
rol
js
add
fisub
jae
retf
mov
es
jp
sbb
cmp
mov
push
pop
or
in
test
sub
or
sub
std
sbb
(bad)
call
jae
jmp
pop
shl
mov
jne
or
mov
jno
sub
sub
xchg
lods
pop
inc
push
push
or
aam
leave
jmp
pop
cmovg
push
fucomip
xchg
lea
outs
xor
pop
aaa
jnp
and
mov
imul
rcr
mov
push
cmp
push
aas
push
xor
or
push
jbe
push
inc
pop
cmp
(bad)
sahf
shr
leave
(bad)
aam
je
dec
nop
icebp
lods
out
mov
lods
pop
sub
and
xor
xor
in
xor
push
fstp
dec
(bad)
xchg
fadd
push
nop
outs
and
dec
cmp
stos
jne
(bad)
imul
mov
push
into
scas
ror
xchg
in
bound
adc
push
test
xor
pop
mov
sbb
xor
sub
push
inc
add
mov
test
jbe
sbb
fisubr
addr16
mov
call
loope
sub
cmp
sub
mov
in
sbb
and
stos
lock
rcl
aam
mov
cmp
in
mov
mov
or
or
iret
jmp
xchg
dec
add
push
pop
xor
aad
fnstenv
mov
lods
sub
sbb
xchg
fst
mov
pop
xchg
sbb
sbb
in
sahf
add
adc
aas
lods
or
retf
and
push
aad
mov
pop
inc
das
dec
sar
loope
xchg
std
cmps
push
es
out
inc
popa
dec
or
inc
dec
movntq
out
cmps
loopne
outs
push
adc
xor
int3
xlat
xchg
add
and
loop
mov
aas
fnstsw
and
xchg
or
inc
(bad)
enter
(bad)
icebp
mov
sub
int
fiadd
leave
cld
fcom
mov
int3
mov
xchg
dec
dec
sbb
mov
cdq
call
add
test
mov
pop
ss
add
in
mov
mov
add
aam
fisttp
test
fld
dec
cs
xchg
push
cmp
leave
xchg
loopne
jnp
cdq
js
sub
cmovno
jmp
xchg
rcr
mov
ds
xchg
cmp
in
pop
out
mov
bound
pop
sbb
adc
sbb
mov
jns
ficomp
aad
and
mov
and
sub
sbb
imul
je
and
adc
mov
jge
retf
ret
dec
dec
dec
sbb
sbb
outs
(bad)
clc
mov
out
dec
fwait
call
xor
mov
inc
sub
test
nop
pop
and
leave
(bad)
add
xor
adc
or
jp
(bad)
hlt
movs
cld
pop
jns
cmp
mov
outs
push
adc
int3
ficomp
xor
push
jecxz
mov
dec
cdq
sbb
cmp
(bad)
retf
xchg
cmp
mov
sbb
movs
mov
xchg
cli
xor
pusha
and
sbb
jmp
xchg
repz
jg
xor
sub
test
sbb
dec
jae
inc
add
out
test
inc
sub
push
and
xchg
cld
mov
cmp
add
sbb
ds
add
icebp
xchg
fnsave
push
adc
or
sbb
jno
push
push
adc
mov
call
adc
push
pop
add
enter
aas
dec
add
xor
and
in
xor
das
push
or
pop
add
and
fdiv
mov
push
aam
fcmovu
mov
fwait
or
push
aaa
push
xor
out
cmps
int
mov
xchg
pshufw
jae
dec
push
movs
out
scas
hlt
ror
jno
cmp
add
push
scas
and
in
push
(bad)
aaa
enter
jo
sub
out
test
push
jp
ds
stos
std
inc
test
and
sbb
jmp
int
mov
popa
cli
and
out
pop
fs
cmp
(bad)
cli
dec
xor
xchg
inc
pop
push
cmps
ins
and
repz
mov
jmp
cmps
sbb
pop
push
jl
pop
adc
sub
outs
sub
pop
push
js
inc
xor
je
dec
add
push
add
pusha
sub
xor
jg
sbb
add
enter
lock
clc
mov
icebp
pushf
out
stos
hlt
xchg
mov
mov
jecxz
out
rol
jmp
scas
fistp
call
jmp
movs
retf
mov
xchg
iret
mov
lahf
(bad)
mov
xchg
ror
sti
mov
into
mov
mov
clc
popf
aam
cmc
test
mov
xchg
hlt
mov
mov
test
lahf
stc
(bad)
shl
nop
clc
mov
mov
aam
aad
hlt
xchg
popf
loope
leave
nop
rol
jmp
xchg
repz
xlat
xchg
fdiv
call
scas
iret
sub
sbb
jae
push
xor
ins
add
outs
push
pop
and
imul
add
pop
push
dec
and
jno
push
push
or
inc
stos
call
data16
inc
sbb
mov
dec
cdq
shl
cmp
stos
push
je
cmp
xchg
int
mov
cmp
rol
mov
lods
rcl
nop
adc
aaa
into
scas
jmp
xchg
jno
repnz
xchg
jecxz
cdq
ret
and
cwde
lds
call
imul
lods
test
pusha
and
fisttp
inc
bound
pop
pop
ror
mov
xor
pop
adc
fcomp
sub
aam
push
push
sbb
xchg
lock
int3
jmp
test
inc
and
int3
out
in
mov
(bad)
test
mov
xor
dec
add
test
push
mov
mov
(bad)
adc
mov
add
ja
shr
cmp
clc
mov
mov
call
jbe
add
mov
cmp
or
pop
push
xor
xor
repnz
cmp
(bad)
jmp
cmp
adc
fsub
les
fdivr
mov
das
lahf
fistp
push
adc
leave
fcomp
add
xor
jmp
inc
pop
std
aam
xchg
jge
and
pop
dec
or
in
into
lahf
inc
cwde
neg
sbb
mov
dec
jnp
or
cli
std
mov
add
pop
inc
ror
lds
and
adc
sub
stc
lods
neg
pop
cmp
scas
add
sbb
pusha
jle
or
aad
mov
and
jp
ret
mov
mov
jne
inc
jb
inc
sub
mov
pop
or
ret
mov
fs
btr
mov
inc
pop
push
jl
imul
(bad)
mov
test
push
imul
xor
adc
and
(bad)
loop
xchg
sbb
pop
inc
sub
xchg
retf
fdivr
lods
(bad)
mov
inc
and
or
out
cld
clc
cmps
xlat
xchg
and
jl
pop
push
adc
and
mov
xchg
and
dec
dec
ds
(bad)
mov
mov
jg
outs
or
in
loope
mov
scas
adc
jp
outs
or
rcr
test
imul
test
or
test
mov
xor
out
mul
dec
mov
ins
mov
rol
and
pop
mov
mov
int
arpl
lock
pop
std
mov
sub
popf
icebp
pushf
imul
xlat
movs
test
pop
ja
xor
cmps
mov
rcl
int
aad
loop
lds
clc
popf
aam
lock
adc
not
iret
(bad)
leave
mov
into
mov
mov
repnz
xchg
fnsave
jecxz
int3
mov
sahf
push
jmp
mov
mov
rol
icebp
mov
xchg
leave
xchg
jmp
icebp
xchg
div
in
into
(bad)
(bad)
fstp
outs
cs
inc
push
cmp
jae
pusha
pop
add
inc
pop
pop
cmovle
bound
inc
push
push
xor
inc
and
ins
add
pusha
adc
jge
gs
cmp
sbb
sub
cmp
aas
js
ja
ins
sub
outs
sub
xor
jbe
jp
inc
adc
push
adc
sbb
jno
pop
sbb
jae
cmp
dec
add
gs
cmp
fwait
jmp
lods
(bad)
mov
imul
fistp
int
std
mov
xchg
aad
cld
xchg
sar
ror
loop
mov
cmps
inc
pushf
pop
sbb
push
adc
inc
add
retf
cmp
sbb
test
pop
iret
sub
jo
ror
dec
jmp
jne
xor
scas
hlt
mov
and
dec
cs
test
pop
data16
fcomp
sbb
bound
mov
xlat
mov
jnp
ins
mov
xchg
rcl
ds
fnstcw
pop
adc
lods
rol
aad
fwait
inc
cmp
mov
ret
sub
clc
fist
push
ins
cmp
retf
push
adc
mov
mov
cmp
push
es
lds
cmps
push
pop
or
icebp
adc
imul
sub
mov
out
dec
xor
leave
int
in
mov
mov
mov
mov
jb
aam
les
lods
in
outs
gs
sub
test
popf
pop
and
int
mov
dec
sub
or
pop
in
(bad)
movs
mov
push
jmp
cmp
push
xchg
fwait
or
jecxz
fwait
aas
jp
jecxz
mov
sbb
gs
cmp
mov
ja
daa
mov
cmp
pop
addr16
retf
inc
inc
or
int
mov
pop
dec
and
or
in
neg
pop
cmp
lods
cmp
out
mov
mov
cmp
hlt
test
rol
lds
in
adc
cdq
xchg
push
fwait
enter
jae
and
hlt
push
push
dec
sub
cmc
fnsave
mov
mov
mov
push
pop
dec
arpl
or
mov
mov
ficomp
xor
sub
test
mov
mov
leave
mov
or
jge
xchg
cmc
mov
jl
fs
aas
inc
add
repnz
fdiv
adc
nop
dec
sbb
jge
and
mov
add
add
jge
and
mov
out
mov
sub
adc
fnstcw
pop
push
mov
push
add
in
in
aad
xor
popa
popf
retf
(bad)
xor
stos
lds
mov
jmp
and
fdiv
xchg
nop
pop
push
pop
mov
popf
into
xor
mov
dec
mov
lods
xor
stc
cmp
adc
pushf
lds
in
mov
dec
or
or
pop
sbb
popa
and
pop
inc
fiadd
lock
aas
cwde
jmp
mov
stos
out
pause
les
sti
xchg
sbb
js
inc
sbb
inc
and
jbe
inc
push
cmp
bound
je
ins
adc
inc
or
bound
outs
das
dec
sub
sub
lods
rcl
push
jbe
push
sbb
cwde
retf
mov
mov
scas
ror
int
rcl
std
fnstcw
in
lods
sbb
jo
pop
sbb
pusha
add
jae
inc
add
inc
add
sub
inc
push
je
outs
ds
push
cmp
or
sbb
pop
pop
push
push
cmp
push
daa
addr16
dec
or
adc
push
sbb
pusha
xor
jae
jb
push
pop
adc
jnp
push
adc
pop
adc
dec
sbb
push
pop
jb
inc
push
ins
and
adc
jg
inc
add
pusha
and
fs
jnp
dec
xor
jae
push
adc
sub
pop
xchg
cmp
sbb
or
adc
mov
cmp
aaa
dec
lods
sub
fucom
xchg
mov
xor
test
nop
cmc
mov
push
sub
inc
dec
cmp
jge
cmp
div
push
mov
mov
pop
push
iret
mov
cs
mov
fstp
icebp
mov
xchg
movq
mov
dec
sbb
jle
addr16
jg
shr
add
das
iret
stos
retf
pop
adc
fwait
sti
cmps
xlat
in
out
scas
dec
ss
sbb
stos
jmp
and
stc
mov
jnp
data16
addr16
inc
and
mov
sbb
pop
cmps
idiv
push
arpl
xchg
ret
scas
jecxz
mov
mov
retf
lods
dec
cmp
jmp
mov
cdq
cli
daa
fld
inc
movs
add
or
(bad)
scas
push
ins
lods
and
sbb
mov
dec
mov
ds
mov
inc
test
neg
lahf
fs
es
test
xchg
(bad)
pop
push
push
adc
sbb
lds
mov
sub
pop
test
xor
jl
sar
movs
popf
adc
and
pop
cs
test
in
movs
jae
pop
pop
or
push
adc
aam
out
mov
push
ss
clc
aad
inc
lahf
out
scas
jb
and
(bad)
stc
shl
and
(bad)
cwde
inc
push
dec
adc
aam
mov
xor
sub
shl
es
hlt
mov
ds
mov
push
icebp
loopne
stos
xchg
pop
es
rcr
int3
mov
ins
stos
adc
cs
ret
(bad)
add
lahf
(bad)
test
ror
inc
xor
sbb
call
movs
clc
stos
sub
bound
jp
mov
fst
pusha
add
and
imul
xchg
adc
push
adc
mov
mov
pushf
xor
push
add
enter
mov
inc
ss
bound
jb
pushf
idiv
nop
xor
push
pop
sub
xor
rcr
rol
sbb
iret
scas
jmp
lods
lds
sbb
and
jecxz
or
jns
jp
mov
push
add
dec
push
outs
and
mov
and
xor
cmp
clc
mov
int
je
dec
iret
add
or
data16
inc
lods
inc
or
stos
dec
sbb
les
imul
arpl
inc
mov
mov
xchg
cmp
popf
cli
mov
mov
ror
jge
push
xor
ins
add
outs
adc
inc
adc
jo
push
adc
and
push
sub
adc
addr16
push
dec
pop
pop
xor
push
push
dec
cs
push
sub
adc
inc
adc
sub
aaa
fs
cmp
push
sub
sub
or
cdq
in
mov
fdivr
int3
mov
sbb
jae
inc
sbb
and
adc
inc
and
or
fs
pop
push
pop
adc
jge
inc
sbb
cmovl
pusha
or
pop
aas
outs
cs
das
push
cmp
jle
popa
and
data16
push
add
inc
add
or
inc
sbb
pop
add
push
xor
adc
and
xor
ss
jno
outs
sub
jge
pop
sbb
movs
in
mov
shl
sbb
add
call
xor
(bad)
xchg
fdiv
movs
aam
gs
sar
out
add
gs
aad
jg
cs
cmps
mov
popf
loope
js
(bad)
outs
mov
je
adc
jecxz
xchg
loope
mov
inc
mov
mov
xchg
and
daa
xchg
push
adc
mov
mov
aaa
jnp
loop
repz
test
cmp
je
loopne
mov
add
xor
lds
imul
call
pop
ds
rcr
mov
mov
test
or
xor
lods
or
sub
xlat
xchg
test
push
push
hlt
xchg
scas
inc
pop
push
ins
sub
cmc
out
mov
jns
adc
mov
inc
add
sub
push
jno
add
not
mov
test
mov
inc
retf
repz
mov
xchg
mov
mov
mov
ret
add
mov
(bad)
in
out
push
fwait
dec
adc
fwait
retf
mov
inc
mov
retf
fistp
sbb
cmp
fdiv
scas
loope
popa
sahf
neg
in
xlat
scas
in
daa
fcmovnu
xchg
outs
dec
push
sbb
pop
fldln2
retf
xchg
mov
sbb
repnz
and
xor
xchg
in
cmps
adc
das
data16
add
or
mov
fdiv
xchg
inc
jo
and
xchg
or
lds
aaa
inc
stos
adc
in
xchg
ficomp
and
mov
fdivr
inc
jp
jne
stc
fdivr
mov
addr16
cmp
std
mov
dec
inc
sub
pop
dec
add
loope
div
fs
adc
mov
popf
sbb
xor
or
mov
nop
fidiv
push
and
stos
jmp
loopne
jmp
pusha
dec
cmp
cmps
inc
mov
scas
sub
dec
pop
cmp
pop
sbb
mov
push
inc
fs
mov
loopne
sbb
outs
add
sub
adc
popf
lock
mov
push
loope
retf
shl
inc
sub
mov
xchg
jmp
pop
sub
mov
pop
inc
sub
daa
lods
rcl
add
icebp
test
fucomip
loope
mov
cwde
and
icebp
lock
ins
fbstp
jb
div
gs
sub
in
xor
sbb
sbb
adc
xor
xor
aaa
lds
lahf
fwait
dec
sub
pop
pop
test
jae
push
and
ins
pop
sbb
inc
add
jno
fs
cmp
push
pop
add
push
xor
cmp
dec
sub
push
jno
jae
inc
xor
jb
push
push
jbe
jp
inc
adc
dec
pop
push
pop
push
je
inc
pop
pop
cmovg
pusha
or
push
xor
inc
and
jg
or
push
adc
xor
dec
sbb
cmp
push
push
sbb
gs
sub
inc
or
xor
inc
and
inc
add
pop
add
inc
sbb
outs
cmp
jbe
inc
pop
addr16
add
dec
cmp
push
adc
cdq
leave
mov
fst
fdiv
in
sahf
stc
mov
in
movs
out
fimul
int3
mov
enter
jmp
clc
popf
xlat
mov
mov
test
(bad)
out
cmp
cli
mov
mov
xchg
aam
mov
dec
and
sbb
mov
push
mov
xlat
mov
xchg
loopne
push
leave
jl
xor
clc
inc
lahf
add
sub
cwde
shr
fiadd
scas
inc
ins
add
int
mov
cmp
imul
lods
jb
add
aam
arpl
push
xchg
pop
ja
cmc
shl
jns
div
inc
mov
mov
pushf
pop
xor
out
iret
mov
add
aad
and
fist
mov
inc
and
fst
add
fisubr
dec
mov
inc
add
lods
in
stos
jb
dec
or
rcl
ins
push
sub
or
std
shl
inc
add
aam
mov
cwde
std
cmp
mov
xchg
jle
jl
cmps
(bad)
fstp
std
into
mov
popa
mov
xor
add
loopne
cmps
mov
jae
in
xchg
xchg
and
jl
jmp
mov
pop
push
stc
pop
jge
cdq
jnp
dec
or
sbb
mov
dec
stos
pop
pusha
or
adc
lock
mov
pop
dec
sub
shl
in
gs
loopne
ret
bound
clc
ret
fld
push
(bad)
out
mov
push
adc
int3
mov
(bad)
pop
jbe
push
in
aam
(bad)
scas
pop
pop
movs
and
or
(bad)
clc
mov
xor
es
or
aam
(bad)
mov
pop
or
out
pushf
jnp
jl
or
loopne
js
repnz
pushf
or
repnz
cmp
loope
ret
sub
adc
mov
push
and
mov
pop
mov
mov
pop
sbb
(bad)
(bad)
sub
std
mov
jne
cmp
(bad)
sar
sar
xlat
add
outs
pop
scas
not
mov
je
inc
arpl
arpl
cdq
int3
and
push
arpl
mov
mov
mov
push
xor
(bad)
loopne
sahf
push
jbe
jno
cmp
pushf
rol
mov
push
sub
adc
mov
xchg
loop
mov
fisttp
inc
cmp
loope
out
cmps
out
test
jb
push
push
pop
add
pop
jbe
xchg
fcom
pushf
xor
xor
push
and
cmp
(bad)
mov
in
out
(bad)
cmp
lock
out
xchg
rcl
push
pop
sbb
arpl
jbe
add
in
dec
sub
push
ins
sub
aam
xlat
pop
sahf
push
adc
iret
aas
movs
int3
jno
push
outs
loope
mov
jns
daa
leave
mov
pusha
lds
ins
add
cs
in
inc
and
cld
test
mov
(bad)
add
adc
add
pop
clc
aas
jnp
xor
test
imul
inc
and
jo
jae
jns
push
pop
inc
cmp
jno
jne
inc
or
inc
add
pop
pop
add
dec
sbb
je
push
adc
je
dec
and
les
mov
div
xchg
rcl
fstp
call
mov
in
add
loope
retf
mov
mov
fidiv
(bad)
xchg
not
lds
mov
(bad)
lahf
jmp
in
cmps
int
cli
mov
sti
add
xchg
push
add
adc
push
lds
ret
dec
xchg
das
icebp
and
retf
aaa
out
out
mov
xlat
push
mov
js
add
cmp
adc
daa
out
popa
int
movs
add
xchg
dec
mov
sub
xor
cmp
push
test
lock
call
fdivr
and
cmovns
inc
rol
clc
mov
aam
lock
mov
fld
adc
xchg
inc
fidiv
out
outs
call
rol
xor
or
or
and
push
repnz
stos
inc
mov
mov
jmp
cmp
or
push
sti
ss
daa
cmp
add
aaa
(bad)
sub
sub
or
cmp
fcomp
fwait
outs
mov
pop
mov
mov
add
fstp
xchg
inc
lods
bound
in
rcr
jge
cdq
jnp
adc
cli
mov
fwait
addr16
rol
cmc
cmp
cli
dec
mov
into
cmp
les
hlt
push
into
push
repz
repnz
movs
inc
(bad)
(bad)
push
mov
pop
cmc
sub
and
pop
mul
in
mul
push
xor
and
bound
jmp
fisub
stc
pop
lds
bound
daa
std
pop
mov
pop
sbb
das
in
aam
and
mul
add
push
fisubr
push
jecxz
cld
das
pop
repz
xor
fwait
cdq
jnp
and
dec
int
into
inc
mov
mov
mov
and
pop
mul
in
mov
or
ret
add
jmp
pop
mov
stc
sub
jbe
popa
rcr
xlat
pop
mov
sub
loop
mov
test
aaa
adc
pop
movs
jg
jge
xchg
imul
cmp
lea
mov
test
ss
retf
add
xor
adc
or
push
aas
or
inc
adc
aas
aas
(bad)
pop
mov
or
push
adc
enter
out
idiv
je
shl
or
scas
ror
dec
mov
mov
pop
fdiv
push
loope
push
(bad)
cmp
lea
mov
pop
mov
stos
enter
ja
sub
sub
dec
stos
popa
ret
push
loopne
or
std
sub
mov
lar
jmp
jge
imul
in
and
stos
cwde
outs
mov
cli
inc
scas
xchg
mov
dec
xor
adc
add
inc
test
aaa
loopne
mov
cmp
and
jp
unpcklps
sub
clc
mov
jmp
xchg
push
inc
and
(bad)
cdq
jns
xchg
inc
movs
xlat
cmp
lea
jne
sahf
ja
xchg
jns
add
cmp
ror
loop
lods
loop
xchg
arpl
call
enter
dec
aad
out
push
mov
test
ret
push
mov
aad
mov
pop
mov
jne
rcl
pop
cmps
mov
popa
aam
cmp
adc
ds
fisubr
adc
and
(bad)
dec
mov
mov
scas
xchg
pop
xchg
inc
ror
pop
stos
je
jg
call
mov
in
mov
push
lea
push
xor
cwde
pusha
mov
aad
test
xor
call
lods
popf
ins
lods
push
jecxz
mov
(bad)
iret
jns
dec
test
mov
and
add
aam
les
(bad)
pop
mov
xchg
shl
(bad)
fild
dec
test
mov
sbb
add
xchg
nop
jg
adc
lahf
(bad)
and
aaa
sbb
cmc
dec
mov
xchg
je
add
push
push
enter
pop
aad
pop
int
sar
aaa
loop
sahf
xchg
jo
mov
lods
cwde
ins
lea
add
mov
mov
pusha
or
adc
add
aas
pop
xlat
and
or
es
daa
sbb
push
shl
xor
push
aam
(bad)
push
shl
out
scas
mov
inc
shr
cmps
lahf
fs
bnd
arpl
ss
loope
adc
sub
xor
sub
push
pop
repz
mov
imul
xchg
fldenv
pop
stc
cmp
sub
mov
and
sbb
jne
pop
movs
mov
fistp
push
push
ds
inc
cmps
mov
cwde
xchg
xchg
xchg
and
jmp
shl
sbb
adc
push
mov
push
pop
mov
push
and
pop
mov
mov
inc
sbb
pop
mov
rcl
or
pop
add
push
or
daa
sbb
xor
sub
pop
sar
loopne
xchg
inc
shl
or
dec
mov
(bad)
jbe
and
scas
popf
outs
xchg
out
and
jge
gs
xor
xor
test
add
mov
inc
lods
fwait
fwait
jno
xchg
inc
enter
inc
pop
sub
ja
cmp
cwde
jle
ins
retf
jo
js
xchg
inc
fimul
into
aaa
xlat
dec
mov
push
lds
in
push
int3
pop
clc
es
test
cli
pop
loope
iret
sub
sub
cld
sub
(bad)
sub
and
inc
mov
sbb
pop
ret
cmp
push
mov
repnz
mov
pop
xor
xlat
add
sbb
sub
xor
xchg
jnp
mov
pop
sbb
test
popf
popa
fadd
in
jnp
add
inc
repz
retf
and
adc
cmp
add
xor
pop
add
test
xchg
pusha
lods
jl
cwde
jno
gs
jmp
mov
lea
pop
fild
pop
push
or
je
ds
jb
xchg
jge
pop
retf
aaa
int3
aas
push
lds
xchg
test
jne
xchg
js
daa
push
or
mov
xchg
cs
and
sub
aas
xor
and
cmp
add
sahf
imul
mov
xchg
inc
fbld
jmp
add
retf
scas
xchg
jno
jp
mov
(bad)
pop
fist
sbb
pop
(bad)
sub
sub
push
neg
dec
fldcw
leave
xor
inc
scas
cld
pop
cmps
lods
mov
jp
nop
inc
int3
dec
test
lods
inc
lods
popa
mov
js
cmp
(bad)
push
sbb
jmp
or
and
out
push
pop
mov
jb
mov
or
push
stos
jbe
aas
clc
call
xor
jns
jns
push
sti
jle
push
shl
inc
mov
ins
jmp
lds
imul
and
or
stc
push
int
lds
sub
sub
pop
stos
(bad)
(bad)
pushf
mov
sbb
in
pop
(bad)
pop
test
xchg
mov
mov
(bad)
jo
inc
mov
nop
add
ss
popf
fwait
cmp
push
xchg
bound
nop
mov
jbe
and
fidiv
scas
adc
adc
inc
mov
in
dec
leave
inc
mov
sub
pop
adc
cmc
push
fst
jno
inc
(bad)
test
outs
mov
cld
pop
mov
pop
pop
and
and
js
ins
iret
inc
and
sbb
xor
callw
daa
sub
outs
(bad)
sub
pop
xor
sbb
sub
jl
and
adc
adc
inc
rol
xor
loopne
fimul
jns
dec
cld
mov
jg
jp
push
int
cld
mov
out
je
push
mov
cwde
xchg
xchg
mov
test
daa
jecxz
retf
and
hlt
push
enter
ret
xchg
(bad)
addr16
inc
xor
adc
pusha
fild
in
retf
inc
movs
mov
cmp
ss
jl
jg
dec
fnstenv
sbb
mul
cmp
sub
test
dec
fnstcw
in
imul
mov
ja
pop
lods
mov
dec
scas
mov
mov
sub
test
retf
sbb
mov
mov
mov
ds
sub
adc
loope
hlt
inc
sub
je
inc
retf
pop
fisub
add
jns
movs
xchg
fwait
mul
repz
scas
popf
bound
xchg
je
mov
mov
call
popa
jmp
scas
mov
repz
cmc
dec
test
adc
leave
dec
ret
and
or
and
push
xor
xor
inc
mov
and
les
call
pop
sbb
inc
aam
pslld
shl
stc
xor
dec
mov
cdq
pusha
out
pop
(bad)
lea
push
hlt
push
cmps
xchg
addr16
enter
in
(bad)
push
cmc
lods
test
aad
test
stos
xchg
fs
or
push
mov
test
mov
inc
mov
cmp
and
les
xchg
test
dec
enter
adc
push
cmps
xchg
and
das
dec
mov
cwde
inc
aam
mov
or
(bad)
and
jl
xchg
jg
push
sar
iret
push
adc
and
loope
mov
push
push
(bad)
and
push
mov
scas
int3
xor
aas
pop
loop
jge
cmp
sbb
and
sub
in
stos
mov
adc
jg
test
retf
or
inc
mov
mov
jmp
rol
adc
xor
inc
loopne
mov
cmp
dec
les
pop
fist
lods
jo
xchg
dec
leave
sub
adc
je
test
stc
and
adc
std
and
add
cmp
enter
pop
and
movs
xchg
or
cmp
push
cmps
test
push
fnstcw
and
push
mov
mov
in
outs
push
loop
jmp
aas
add
xor
sbb
xor
push
xor
ds
jmp
cdq
ins
sar
and
jge
xor
lahf
cwde
arpl
fwait
inc
or
mov
push
popa
int
mov
mov
mov
push
test
call
inc
mov
cmp
push
mov
pop
fadd
out
and
(bad)
dec
mov
inc
pop
adc
add
rol
cli
xor
cwde
mov
push
mov
shr
nop
and
sub
imul
out
adc
aam
retf
cmp
and
dec
mov
mov
mov
js
dec
rol
dec
mov
or
inc
mov
sar
jae
call
js
or
mov
ret
sub
leave
xor
pop
mov
test
call
mov
push
ror
jg
ins
int
stos
jmp
nop
lahf
(bad)
fist
es
xor
and
ret
sub
jno
aas
enter
adc
adc
dec
cmp
sbb
dec
xor
cld
sub
push
fsubr
or
sub
inc
lods
addr16
mov
inc
mov
cmc
and
add
or
inc
add
ss
push
jmp
mov
cdq
ins
fstp
jle
xchg
imul
or
push
ins
jmp
test
jecxz
loopne
push
sbb
adc
cmp
cmps
push
or
inc
lock
mov
cmps
jle
ss
retf
push
sbb
rcl
dec
add
jmp
jmp
push
xor
int
jecxz
sbb
xchg
popa
fsubr
jmp
retf
jae
pop
mov
add
clc
and
dec
fnstcw
pushf
push
mov
fnstsw
pop
rol
(bad)
pop
stos
js
lahf
mov
addr16
xor
adc
pop
scas
xchg
dec
mov
ficom
inc
test
addr16
es
xor
xor
sbb
pop
movs
jmp
ss
daa
push
int3
xor
sub
cmp
sbb
cmc
es
xor
adc
lods
call
retf
cmp
ss
pop
add
mov
sbb
stc
pop
mov
push
into
push
mov
movs
cmp
cs
sbb
inc
mov
mov
mov
mov
cmp
cld
sub
ret
and
push
int3
pop
cmp
push
movs
call
cwde
jg
jo
je
xchg
inc
mov
inc
shl
and
xor
aaa
je
invd
add
stc
pop
mov
rol
adc
in
daa
push
jmp
cdq
xchg
ja
xor
leave
js
cmp
cmp
cwde
fstp
stos
and
test
inc
fldcw
add
add
cmp
add
cmp
adc
adc
mov
fisubr
ins
retf
pop
xor
and
adc
and
and
pop
cld
dec
sbb
cmp
xor
pop
rcl
mov
aad
xor
cs
int3
dec
mov
sub
push
cmp
add
(bad)
sbb
and
sbb
xor
dec
xchg
sahf
(bad)
loop
sti
xchg
(bad)
or
push
mov
jge
cmps
in
enter
xlat
pop
sbb
in
in
pop
mov
jae
je
mov
ds
(bad)
sub
jbe
mov
push
repz
xchg
xor
push
stos
je
or
and
sub
sub
out
in
mov
push
stos
inc
mov
xor
and
sub
cmp
aam
iret
cmp
mov
or
add
lds
add
pop
sbb
pop
cmps
popf
outs
retf
inc
mov
mov
inc
mov
xlat
adc
js
nop
js
jne
sub
data16
int
adc
les
cmp
sbb
pop
movs
arpl
in
push
fmul
adc
scas
mov
es
cmp
sbb
xor
cmp
add
cmc
cmp
push
test
push
mov
xchg
sub
cmp
add
ja
in
movs
nop
dec
cmps
xchg
cmp
add
and
sub
and
loope
rcr
add
and
pmaddwd
cmps
mov
sbb
mov
and
push
mov
pop
movs
or
sub
xlat
xor
and
hlt
daa
or
dec
cmps
xchg
jno
inc
aam
pop
or
cwde
inc
test
mov
add
adc
daa
sbb
pop
(bad)
xchg
mov
or
or
ds
adc
inc
cli
jg
pop
into
push
mov
cmps
jns
add
rol
call
nop
xchg
mov
dec
sti
inc
movs
xchg
test
jbe
ja
jnp
dec
or
retf
into
xchg
mov
xchg
push
fsubr
div
ds
and
sub
repz
and
out
in
pop
fmul
out
xor
cmp
add
data16
dec
movs
js
ins
xor
cmps
xchg
jo
popa
movs
call
loop
mov
xchg
stos
xchg
outs
leave
pop
pop
cmp
xlat
pop
mov
jns
mov
pop
mov
or
xor
rcl
cmp
adc
dec
fiadd
cmp
pop
sub
out
cs
cli
pop
movs
mov
shl
nop
mov
jge
ss
pop
add
hlt
pop
lea
mov
xchg
jbe
inc
mov
push
out
and
adc
pop
mov
push
mov
xor
lds
jbe
xchg
clc
pop
in
and
dec
mov
jns
adc
jns
and
xor
(bad)
movs
jne
pop
cld
and
pop
test
mov
add
pop
mov
scas
mov
fsub
fisubr
push
neg
in
mov
add
int3
das
imul
or
mov
rcr
dec
fisttp
jle
xchg
and
xor
minps
inc
stos
jno
xchg
inc
hlt
inc
mov
(bad)
(bad)
sub
sbb
inc
cmc
push
ret
push
repnz
mov
clc
mov
cs
fsub
jns
inc
cmps
xchg
imul
adc
push
(bad)
xor
jmp
push
leave
inc
mov
scas
mov
call
jne
arpl
push
push
pop
sti
cmp
jl
xor
pop
add
icebp
pop
mov
or
dec
scas
push
call
push
scas
fwait
jne
icebp
and
cmp
jns
lahf
dec
sub
push
sub
sbb
xor
and
int3
or
push
sbb
jns
push
mov
ds
sbb
xor
inc
mov
sub
pop
out
movs
arpl
iret
daa
xor
dec
int
repnz
repnz
and
repz
xor
mov
push
int3
cmp
or
sub
and
dec
mov
stc
pop
lods
jp
or
push
loop
test
cwde
dec
xlat
cwde
mov
pop
mov
xlat
xor
das
pop
stos
push
mov
fiadd
retf
add
in
pop
xchg
sahf
gs
pop
fstp
push
cdq
mov
popa
retf
cmp
js
jge
je
shl
xchg
sahf
imul
pop
mov
sub
sub
cwde
pusha
test
movs
xchg
mov
xchg
inc
add
ss
and
pop
xchg
movs
fidivr
ss
out
mov
mov
gs
aas
adc
push
lods
dec
test
or
and
inc
aam
psubb
jmp
pop
mov
push
fld
add
cmp
dec
rol
out
mov
mov
push
adc
push
lods
test
pop
xchg
xchg
xchg
xchg
bound
dec
cmp
adc
cmp
icebp
pop
cmp
ret
sub
pop
sti
xor
sbb
push
mov
cmps
jae
xor
adc
loopne
stc
daa
loopne
fild
push
loop
test
sub
das
clc
pop
iret
ss
pop
repz
cmp
fwait
test
imul
add
sub
aaa
loope
mov
push
(bad)
mov
mov
mov
imul
out
mov
sub
es
mov
mov
into
and
pop
jmp
cmp
push
rcr
mov
inc
out
pop
cmp
mov
fmul
jnp
push
adc
aas
in
pop
mov
cwde
dec
cld
inc
ror
jnp
fldcw
xchg
imul
adc
mov
mov
jmp
test
jge
sub
pop
scas
mov
pushf
xchg
jbe
push
fst
xchg
(bad)
xchg
mov
sahf
fcomp
inc
mov
jns
cdq
push
fnstsw
sub
adc
mov
or
ss
shr
sbb
sub
rcr
push
mov
(bad)
dec
mov
lahf
fs
pop
mov
(bad)
xor
add
ret
clc
cmp
xlat
adc
push
enter
in
call
push
mov
movs
jbe
test
inc
add
push
sti
inc
lods
mov
mov
xlat
add
movs
mov
je
push
adc
rol
(bad)
int
mov
push
pop
mov
dec
scas
fist
bound
sub
cmps
adc
mov
xor
mov
jbe
test
je
(bad)
clc
cmp
ret
clc
sub
dec
cli
dec
shr
int
aas
cld
push
mov
sar
sub
jmp
out
pop
xchg
cs
mov
jae
or
inc
out
fidivr
test
cmp
mov
adc
dec
mov
je
lahf
push
cmp
cmp
loope
inc
fdiv
and
add
repz
pop
pop
xlat
push
into
sub
pop
(bad)
nop
sar
or
dec
mov
xor
xor
and
sbb
out
jecxz
or
add
pop
mov
test
out
add
pop
cmps
outs
test
in
pop
add
outs
aad
daa
add
cmp
push
test
fld
adc
xchg
outs
shr
les
jmp
(bad)
pop
jmp
jb
imul
popa
fisttp
jmp
dec
scas
fstp
xchg
jg
dec
mov
hlt
js
xchg
nop
js
sub
or
and
sub
in
and
sbb
loop
fsub
add
sub
xor
cmp
push
sbb
dec
mov
gs
sti
dec
leave
push
(bad)
and
and
ret
call
fstp
fisubr
add
pop
mov
arpl
adc
cmp
or
or
pop
or
fs
inc
mov
test
xchg
out
movs
xchg
jb
mov
sahf
lea
(bad)
retf
lock
stos
jl
sub
add
aaa
outs
(bad)
in
cs
pop
mov
or
daa
adc
out
mov
fistp
xlat
or
aam
js
inc
mov
adc
add
stos
mov
jp
jl
dec
sbb
retf
mov
dec
add
pop
xor
daa
dec
idiv
and
out
std
es
es
push
xchg
mov
xor
lods
ror
adc
push
loopne
movs
enter
ficom
popa
cmp
xchg
test
mov
xchg
cli
pop
xor
jnp
fild
mov
mov
or
pop
mov
test
xor
js
cld
aad
shr
push
inc
add
jno
jns
arpl
retf
mov
jno
das
outs
out
mov
in
xor
jbe
pop
loop
out
mov
xchg
js
into
xor
imul
sub
dec
or
mov
retf
mov
out
xchg
popa
add
add
stos
jns
and
lods
in
sahf
int3
nop
retf
pop
and
cmp
outs
push
out
xor
jle
retf
jecxz
jae
or
neg
call
pop
push
les
adc
add
jmp
int
or
mov
repnz
lods
sti
sbb
or
repz
popa
xor
or
add
and
xor
fs
call
test
inc
xor
adc
inc
pop
dec
sub
or
mov
in
sbb
out
dec
xchg
push
cs
pop
cmc
aaa
div
mov
hlt
mov
loope
std
mov
pop
pop
dec
or
push
push
arpl
shl
adc
cmp
xor
rol
jbe
push
ins
ficomp
mov
cwde
jl
pop
lock
movs
rcl
pop
mov
xlat
outs
ss
fmul
push
push
lea
gs
mov
clc
xor
loopne
fidivr
mov
mov
push
dec
stos
ds
add
adc
jnp
sub
bound
pop
push
jg
inc
sbb
push
pop
popf
and
adc
xor
xor
cli
mov
mov
(bad)
xchg
push
sbb
sub
loop
pop
sbb
aas
int
(bad)
xlat
mov
mov
jp
jnp
inc
mov
pop
sub
add
inc
adc
pop
jmp
arpl
jne
push
in
test
frstor
js
mov
xchg
ficom
lock
fcmovne
xchg
mov
and
fs
push
push
jae
sub
ja
jp
push
jmp
cmps
lds
xchg
xlat
jnp
mov
cmp
xchg
mov
mov
inc
xor
mov
xchg
xchg
mov
out
fwait
stc
mov
jb
sti
mov
jmp
mov
and
out
mov
in
lods
neg
mov
push
or
loopne
mov
lods
xlat
cmps
neg
aad
adc
push
iret
mov
xchg
repz
mov
es
(bad)
into
jbe
les
outs
xor
icebp
fwait
div
push
and
sub
jns
xchg
cli
mov
test
mov
fdivr
xchg
rcl
shr
jmp
ins
push
pop
in
mov
push
sbb
push
idiv
sti
mov
stos
call
mov
xchg
rcr
fistp
push
or
stos
shl
pop
ret
idiv
inc
xor
mov
and
mov
jnp
inc
loopne
inc
in
(bad)
in
stos
sti
popa
or
loopne
rcr
inc
out
pop
xor
test
xor
data16
mov
rcl
aam
stos
mov
gs
daa
sbb
dec
or
mov
jle
jbe
pop
arpl
dec
(bad)
(bad)
lahf
icebp
sub
jle
mov
lock
ret
rcl
or
enter
(bad)
cmp
ins
sub
cmp
push
(bad)
mov
xchg
ficom
int
fisubr
and
push
mov
xchg
int
pop
sub
popf
fadd
sub
jo
or
aaa
push
jl
arpl
push
cmp
and
xchg
out
jp
adc
push
in
pop
cmp
ret
int3
mov
mov
shl
jmp
in
mov
test
sbb
mov
outs
mov
or
adc
or
movs
xlat
cmps
test
cdq
outs
or
xchg
imul
int3
sbb
js
repnz
pop
out
xchg
(bad)
movs
(bad)
scas
cwde
iret
sub
push
aas
fcomp
je
and
daa
inc
sbb
arpl
inc
push
iret
fisubr
xor
jb
dec
loopne
ficom
inc
imul
aas
dec
push
inc
ret
cwde
aam
imul
dec
adc
lea
imul
adc
sbb
dec
adc
jl
inc
test
or
xchg
rcl
cmps
shr
sbb
inc
mov
xchg
aaa
and
sar
out
sahf
clc
mov
or
pop
scas
enter
cmp
pop
inc
add
xchg
ret
sub
push
sbb
imul
iret
mov
test
loope
(bad)
fwait
jmp
js
dec
sbb
lock
dec
lock
mov
lds
mov
pop
sbb
mov
xchg
mov
adc
ret
ins
or
jnp
stc
pop
push
pop
jp
mov
into
xchg
jmp
cmc
sbb
inc
shl
pushf
(bad)
adc
jge
aas
push
sbb
mov
cld
mov
xor
inc
pushf
xlat
dec
movs
shr
sbb
fs
inc
in
mov
xchg
loop
iret
or
int3
xor
es
dec
leave
stos
enter
mov
repnz
loop
leave
mov
call
fimul
dec
add
mov
jmp
sub
inc
adc
out
outs
popa
push
and
dec
cmp
mov
mov
ja
je
xlat
call
push
sti
xchg
fimul
into
test
xchg
mov
in
pop
push
push
and
jmp
sbb
or
ins
or
add
out
jmp
sti
and
(bad)
mov
xchg
shl
gs
xchg
rcl
nop
retf
mov
jno
daa
dec
pop
push
pause
into
(bad)
hlt
pusha
leave
cs
sbb
jle
ins
sub
cmp
add
repz
outs
and
dec
sbb
(bad)
mov
test
mov
push
sbb
cmp
scas
jmp
xlat
movs
shl
sub
or
xchg
mov
lahf
std
inc
add
call
retf
lods
mov
fcomp
(bad)
bound
sar
cli
ins
in
imul
inc
sub
pop
add
out
cmovns
push
inc
add
je
gs
push
pop
or
dec
ja
jp
jbe
hlt
xchg
mov
push
sbb
fwait
iret
xchg
xchg
into
mov
or
les
aad
xor
hlt
mov
mov
jnp
mov
(bad)
xchg
fsubr
adc
inc
daa
outs
and
js
pop
add
test
cdq
shl
bound
xor
cmp
sub
mov
jmp
dec
das
dec
or
sbb
cs
push
push
cmp
sub
loop
mov
pop
sbb
sahf
movs
cld
xchg
fadd
push
pop
sbb
push
push
adc
push
or
push
push
jb
push
or
push
or
inc
adc
inc
cmp
jp
stos
in
cmps
retf
mov
fld
push
push
push
add
push
pop
inc
daa
inc
add
xor
outs
sub
sbb
pop
sbb
push
cmp
in
(bad)
lods
in
ja
push
adc
pop
sub
jo
je
jp
bound
xchg
sar
call
int3
or
or
jecxz
jmp
jmp
mov
push
sbb
dec
or
dec
or
fisttp
ficomp
pop
loopne
cld
mov
icebp
mov
mov
jmp
fiadd
adc
jbe
push
sbb
jbe
jge
jl
pop
add
ins
push
aas
dec
adc
stos
call
and
inc
adc
cmps
loope
ret
mov
mov
mov
test
adc
popa
jmp
vpcomud
jae
bound
pop
(bad)
lods
jecxz
fistp
js
pop
pop
ins
sub
fild
lods
int3
mov
mov
mov
call
mov
into
xchg
aad
lds
mov
ins
sbb
adc
jge
int
mul
pop
outs
or
or
test
lods
iret
lahf
scas
out
jbe
xchg
jp
pop
sub
idiv
dec
mov
mov
xor
imul
add
pop
loope
in
dec
adc
ins
cmp
loopne
loop
inc
test
pop
pop
dec
or
icebp
ret
(bad)
fiadd
lods
jmp
cmps
mov
xchg
imul
push
adc
sbb
mov
loope
loopne
out
dec
adc
int
leave
fwait
scas
mov
pushf
rcr
push
out
sahf
es
pop
cmp
lods
loop
les
and
out
mov
jae
push
adc
pop
or
xor
pop
lea
ss
out
es
push
sbb
cmp
xchg
xlat
xchg
fisttp
fcom
jmp
movs
mov
cdq
fcomp
out
(bad)
adc
and
dec
sbb
sbb
jb
dec
xor
xor
ficomp
mov
cld
lea
fadd
daa
inc
sbb
adc
jp
das
test
int
sti
mov
arpl
mov
cwde
hlt
test
jl
mov
mov
dec
loopne
(bad)
adc
jae
jg
out
xchg
les
push
and
cmp
dec
push
je
jb
fs
add
sbb
sbb
addr16
fmul
dec
mov
xor
pop
mov
daa
inc
or
jnp
fwait
enter
or
or
mov
repnz
aad
mov
imul
xchg
bound
pusha
add
push
sbb
push
adc
push
add
mov
mov
mov
mov
push
imul
adc
ja
cdq
retf
mov
rol
xchg
(bad)
mov
xchg
scas
in
cli
mov
icebp
xchg
les
(bad)
scas
neg
jle
pop
sbb
test
addr16
sbb
out
retf
test
cmp
pop
sbb
ror
push
pop
outs
and
inc
adc
int3
xchg
fwait
stos
push
jl
jae
push
xor
scas
loopne
iret
mov
xchg
push
lock
test
adc
inc
out
mov
push
jno
adc
push
cmp
loopne
cs
mov
mov
js
mov
add
cmp
ins
xor
sub
and
mov
shl
lock
mov
sbb
push
pop
inc
xor
or
adc
(bad)
pop
sbb
test
ficomp
xor
xlat
mov
lods
jmp
sub
jle
pop
adc
les
jle
mov
arpl
pop
sub
(bad)
push
xor
aaa
jmp
stos
fbstp
and
enter
test
mov
call
rcpps
scas
mul
mov
inc
aaa
and
je
aas
ja
mov
lods
cmc
arpl
and
inc
or
push
in
ret
add
pop
loopne
cmps
int
in
mov
shl
mov
mov
mov
movs
shl
pop
add
push
dec
mov
mov
dec
adc
add
xchg
mov
adc
dec
cmp
add
pop
in
mov
sbb
mov
mov
adc
inc
and
pop
dec
and
sar
aam
inc
sub
(bad)
mov
mov
sbb
push
and
inc
push
jp
std
mov
sub
imul
cmps
retf
mov
ins
cmovnp
push
fisubr
jp
mov
rol
xor
into
dec
or
xor
pop
add
enter
rcpps
imul
aas
ins
cmp
push
cmp
imul
stos
lods
int3
jb
dec
and
in
dec
in
retf
sahf
mov
bound
jge
lods
leave
sbb
popa
mov
loop
popa
or
pop
les
xor
test
xchg
int3
test
or
das
push
les
jl
and
pop
sbb
pop
xor
sub
cld
cwde
fistp
mov
repnz
sub
jno
imul
fcomp
xchg
xor
jl
adc
push
mul
push
xor
add
out
sbb
rol
xchg
inc
cmc
xchg
ror
stos
fcomp
and
mov
or
dec
sbb
pop
pop
pop
in
ret
mov
xor
add
cmps
rcr
xchg
ror
jb
inc
loopne
dec
push
cmc
sahf
mov
jl
and
mov
aam
addr16
stos
repnz
mov
cmp
adc
std
mov
jmp
stc
fwait
cld
(bad)
retf
lahf
int3
jle
sbb
pop
pop
inc
out
ret
in
in
std
mov
test
fwait
leave
cdq
aam
add
pop
adc
adc
jle
js
pop
adc
sub
push
sub
out
ins
in
ret
(bad)
push
sub
dec
push
pop
cmc
jns
xchg
retf
sub
bound
xchg
mov
adc
mov
icebp
xchg
mov
jecxz
rcr
pop
in
mov
rcr
xor
pop
pop
cmp
mov
call
retf
mov
mov
pop
sbb
sbb
dec
jmp
cmp
sahf
fstp
int
outs
sbb
push
sbb
mov
sbb
in
mov
xchg
mov
cwde
lock
in
hlt
popf
imul
add
sbb
sub
pop
jge
cli
scas
in
mov
cwde
fdivr
dec
or
ret
push
push
je
inc
xor
add
pusha
add
xchg
dec
cld
mov
fistp
js
xchg
std
cmps
cmps
repnz
jns
pop
loopne
mov
icebp
xor
inc
or
xchg
sti
mov
lahf
std
scas
in
pop
mov
addr16
js
jg
add
(bad)
pushf
iret
fwait
test
mov
addr16
leave
dec
or
(bad)
sar
in
nop
enter
test
mov
sahf
inc
lock
in
mov
mov
into
xchg
cmps
rcl
mov
aam
std
gs
jne
lods
lds
shr
mov
dec
call
mov
sbb
in
mov
dec
or
jmp
adc
push
pop
adc
dec
stc
cwde
sti
bound
imul
sbb
(bad)
(bad)
lods
in
mov
mov
xchg
xchg
push
jecxz
int3
xchg
cmp
add
aam
lds
and
mov
sub
hlt
imul
lods
(bad)
mov
movs
call
mov
iret
jle
leave
mov
or
push
push
add
cmc
xchg
rcr
in
xchg
pop
xor
aam
(bad)
mov
dec
call
mov
dec
cmp
out
(bad)
mov
mov
popa
add
shl
inc
push
retf
dec
adc
aad
hlt
adc
mov
rcl
dec
out
mov
cmps
fild
adc
push
jg
pop
out
mov
bound
cmp
sub
inc
add
ja
bound
nop
enter
cmc
push
dec
xchg
mov
mov
mov
and
icebp
popa
add
xchg
rol
int3
xchg
std
mov
and
into
mov
push
push
arpl
ret
jbe
cmp
xor
aaa
ins
pop
sub
push
ss
sub
pop
push
push
adc
dec
aas
dec
sub
dec
data16
popa
sub
or
inc
adc
pop
sbb
dec
stc
mov
mov
pop
xchg
mov
xchg
sbb
add
mov
xchg
in
daa
loopne
rol
push
sbb
inc
mov
fwait
mov
pop
push
inc
xor
loope
(bad)
jp
pop
adc
mov
fs
dec
ss
push
das
outs
push
popa
and
mov
repnz
cs
pop
dec
or
add
test
fwait
mov
xchg
rol
movs
out
movs
rol
sbb
jge
push
stc
stos
les
pop
cmp
mov
adc
dec
lds
pop
push
dec
sbb
dec
jmp
std
mov
mov
aad
movs
ror
xchg
mov
add
and
cmp
call
loope
cld
mov
mov
mov
xchg
mov
sbb
adc
and
xchg
aam
lds
popa
add
push
les
orps
inc
add
push
pop
les
or
push
dec
loop
jns
pop
sub
outs
cmp
sub
dec
or
in
add
bound
inc
adc
jns
test
fisttp
imul
adc
push
cmp
jp
push
mov
nop
mov
gs
push
or
outs
push
dec
push
dec
xchg
cwde
jmp
mov
mov
mov
(bad)
mov
repnz
mov
add
loopne
jns
arpl
sub
sub
es
cmp
lds
or
xchg
adc
imul
mov
and
adc
sub
sbb
std
mov
mov
or
fld
push
ins
and
push
add
and
retf
mov
mov
jecxz
enter
loopne
ret
xchg
div
xor
stos
test
cwde
into
(bad)
fistp
std
cmps
lds
or
aam
mov
xor
push
out
adc
ins
push
jb
xchg
fdiv
(bad)
(bad)
add
and
sub
jmp
sbb
jmp
pop
push
mov
(bad)
popf
sti
mov
mov
iret
das
ins
pop
pop
in
mov
xchg
sahf
movs
xchg
shl
bound
push
stc
mov
(bad)
movs
(bad)
ins
cmp
pop
add
jge
pop
adc
fistp
mov
mov
int
sar
and
scas
rol
or
cdq
retf
pop
pop
out
mov
stos
(bad)
xchg
rcr
push
out
pop
mov
and
int
(bad)
data16
pop
cs
push
sbb
(bad)
int3
imul
stos
leave
je
jns
cmc
mov
imul
sbb
je
dec
(bad)
cld
lods
out
xchg
ins
xchg
mov
cwde
fnstsw
adc
and
leave
xchg
xchg
fimul
and
inc
sbb
pop
das
ins
pop
xlat
xchg
(bad)
xchg
hlt
adc
dec
xor
daa
inc
out
pop
pop
ss
xchg
pop
sbb
jg
lods
retf
test
scas
hlt
xchg
nop
ret
adc
(bad)
mov
pop
sub
pop
sbb
jne
pop
clc
mov
mov
adc
push
add
dec
call
rcr
test
xchg
cli
arpl
inc
in
adc
and
dec
shl
dec
push
inc
in
fdivr
movs
jmp
or
xchg
rcr
std
mov
out
pop
sbb
pop
inc
and
jp
lods
fstp
dec
or
sbb
cmovle
push
or
jge
icebp
mov
mov
sub
adc
outs
clc
test
sub
ja
dec
sbb
ja
xchg
fisub
sbb
les
dec
sbb
inc
pop
push
xor
jbe
inc
loop
lds
in
xchg
mov
add
sbb
ins
and
push
imul
mov
lods
fistp
leave
xor
cmp
iret
mov
or
dec
and
pop
std
(bad)
aam
lds
daa
cs
ins
push
or
imul
pop
sub
sbb
ins
and
mov
fisttp
mov
cmc
lods
jmp
and
aam
push
je
inc
out
fsubr
jbe
push
xor
nop
mov
xor
inc
enter
jp
imul
jmp
pop
cmp
adc
jno
dec
std
daa
jne
pop
sbb
xchg
push
add
leave
push
iret
xor
adc
cmp
xlat
sub
adc
in
inc
mov
rcl
jb
jg
std
inc
into
sub
pop
lods
mov
pop
repnz
inc
xlat
push
mov
fwait
xchg
mov
dec
ror
ins
fistp
fcom
xchg
inc
rcr
aad
sahf
arpl
push
and
icebp
daa
in
dec
enter
sbb
pop
scas
push
jecxz
rcl
ret
sub
int3
ds
mov
push
(bad)
pop
int
in
push
sti
add
arpl
and
pop
les
sub
outs
mov
inc
mov
enter
dec
mov
dec
pop
cli
add
daa
jmp
ret
dec
mov
jb
or
xor
clc
and
mov
pop
loope
loop
test
jge
fs
pop
or
pop
mov
imul
loope
adc
in
fidiv
cmps
xchg
dec
mov
jbe
pop
xor
out
mov
cmp
es
in
lahf
fs
cmp
hlt
pop
mov
push
sti
and
xor
pop
xlat
cmp
aaa
jmp
sub
pop
scas
inc
stos
mov
xchg
jge
add
sub
imul
mov
dec
mul
test
dec
push
out
and
stc
dec
int
dec
push
fiadd
sbb
lds
std
aaa
inc
mov
mov
mov
imul
mov
xor
jno
ins
enter
and
mov
pop
sbb
adc
inc
mov
fistp
sbb
ds
xor
inc
test
pop
mov
push
lods
js
pop
adc
push
test
div
add
sub
pop
(bad)
jne
outs
mov
pop
sbb
add
out
(bad)
xlat
and
dec
ret
sub
sti
xor
jmp
push
adc
push
fmul
cli
pop
sti
mov
xchg
pop
sub
dec
mov
call
mov
or
dec
mov
pop
scas
jnp
aaa
mul
push
mov
push
test
push
retf
es
cs
iret
pop
mov
mov
jmp
push
ficom
lods
xchg
(bad)
fisub
adc
cmp
icebp
ds
jg
pop
push
add
pop
rol
loop
scas
outs
enter
mov
js
inc
mov
test
xchg
stc
push
mov
xchg
xchg
jnp
push
mov
and
inc
lods
lahf
jb
jo
mov
fisttp
pop
mov
dec
mov
shl
jbe
dec
test
outs
mov
(bad)
jge
or
jno
and
and
call
add
dec
mov
call
mov
xor
call
loop
mov
jnp
nop
sub
jmp
cmps
bound
add
lock
mov
or
push
xchg
ds
jecxz
mov
fistp
jns
xor
jl
push
mov
movs
pushf
into
dec
fiadd
sbb
es
or
cmps
loope
fst
xor
(bad)
cmp
not
fisubr
iretw
sub
sub
xor
cs
push
mov
and
push
test
sub
repz
stos
xchg
mov
adc
sub
rep
cs
popf
push
mov
out
pop
out
add
pop
idiv
adc
pop
(bad)
jnp
jb
fs
sbb
repnz
jns
pusha
retf
inc
mov
mov
aas
sar
cwde
popf
popa
out
xor
neg
addr16
int
xchg
inc
cmc
and
or
lods
pushf
call
pop
add
sbb
adc
xor
nop
call
in
repz
xchg
push
add
mov
xchg
out
pop
fdiv
sbb
jb
(bad)
(bad)
sub
cs
cmps
jo
push
xor
ss
out
fst
aad
mov
jl
jb
pusha
aad
dec
test
jno
ss
lock
mov
mov
add
icebp
cmp
sbb
cmp
dec
ficom
cdq
inc
fisttp
sub
aam
adc
pop
mov
mov
data16
inc
mov
mov
mov
jnp
sbb
and
(bad)
sub
int3
inc
mov
adc
inc
mov
mov
mov
xor
xlat
push
mov
inc
mul
ret
and
loop
xchg
jae
pop
mov
cdq
xchg
dec
enter
retf
addr16
dec
or
cmp
pop
cmps
shl
fidivr
(bad)
cmp
sub
(bad)
movs
test
cmp
nop
xchg
jnp
mov
xchg
loope
mov
dec
leave
xor
xlat
aaa
pop
cmp
xor
lock
sbb
aaa
inc
aad
mov
mov
xchg
pushf
mov
xchg
jb
mov
and
div
loope
stos
xlat
add
jecxz
test
ja
rcl
data16
fiadd
jle
mov
(bad)
push
lods
mov
xchg
ins
xchg
xchg
jnp
arpl
push
cmp
jle
dec
xlat
cmp
pop
rcl
xchg
mov
xchg
inc
mov
and
retf
pop
stos
mov
and
in
jp
xchg
inc
mov
gs
ds
cmp
jl
mov
jns
ins
shl
push
and
sub
sti
or
xor
or
and
loop
(bad)
pop
mov
xchg
inc
rol
or
pop
mov
pop
jecxz
icebp
push
mov
shl
dec
xchg
cmp
jb
bound
and
push
stc
dec
ds
push
mov
and
sbb
das
adc
adc
xor
icebp
sub
cmp
pop
scas
jl
pop
rol
int
mov
xor
out
inc
stos
dec
mov
cs
mov
adc
xlat
add
xchg
test
pop
xchg
xor
mov
aam
or
stc
push
(bad)
add
lds
out
repz
(bad)
push
fistp
repz
sbb
and
repnz
cmps
jmp
(bad)
pop
test
or
push
mov
inc
test
in
and
in
repz
movhps
aam
pop
pop
push
aam
adc
pop
lods
pushf
cdq
inc
aad
push
enter
push
inc
adc
cmc
and
and
std
xor
mov
adc
loopne
lock
ret
pop
retf
jb
pop
stos
test
arpl
push
sbb
cmp
or
pop
mov
fistp
sbb
pop
sub
shl
sub
push
mov
pop
xchg
js
lea
outs
mov
add
stos
popa
aad
sbb
dec
mov
jecxz
mov
cmps
inc
mov
pop
leave
and
and
in
sub
daa
adc
pop
int
out
repz
enter
test
sbb
xor
dec
or
sub
ss
sub
pop
stos
inc
mov
xchg
addr16
in
popf
inc
mov
scas
popf
jge
jbe
test
inc
mov
mov
les
add
xor
sti
dec
stos
jne
ins
and
loop
lods
js
and
cmp
or
lds
adc
hlt
and
xor
xor
retf
iret
pop
mov
ds
sub
or
jb
inc
fadd
sbb
jl
xor
js
popf
pusha
mov
and
add
pop
mov
push
mov
dec
cmps
bound
outs
fisubr
sbb
cmp
movs
jle
mov
or
dec
cmps
mov
or
jmp
sti
inc
fnstenv
xor
and
mov
scas
pusha
das
sub
ss
ss
sub
pop
movs
jp
jl
and
mov
imul
adc
push
cld
movs
arpl
push
mov
test
pushf
inc
in
push
mov
jge
shl
sbb
aam
jmp
rcl
jnp
jbe
outs
and
adc
xor
sahf
inc
fldenv
popa
scas
shl
sub
std
daa
or
add
mov
aam
ret
and
retf
pop
test
cmp
xor
je
jno
push
fidiv
ins
movs
inc
mov
mov
push
push
jmp
daa
cmp
sub
sbb
int
shl
xor
mov
outs
fadd
cmp
jp
je
test
ja
in
out
push
(bad)
adc
push
xor
clc
pop
mov
clc
sub
lock
mov
add
cmc
cmp
push
xchg
arpl
dec
xchg
push
push
loope
adc
shr
mul
add
and
aas
pop
sbb
dec
mov
xchg
inc
mov
cmp
mov
pop
mov
loop
xchg
inc
cli
pop
movs
xchg
inc
mov
lea
pop
retf
cmp
or
retf
xor
div
sub
test
pop
mov
push
mov
fadd
pop
enter
lea
(bad)
aaa
sbb
popf
dec
mov
imul
mov
push
icebp
dec
cmps
scas
inc
sub
not
jl
cmp
lods
call
jle
push
or
and
les
loop
ins
sti
push
sbb
mov
xchg
sahf
dec
stos
repnz
aad
aad
mov
pop
(bad)
dec
or
sub
ss
dec
(bad)
loop
out
mov
xor
imul
shl
leavew
pop
repz
neg
loop
hlt
dec
(bad)
and
or
loope
out
fild
jno
and
in
sub
pop
lods
jg
stos
mov
add
cld
add
xor
push
add
outs
fist
push
jecxz
or
sub
in
cmp
or
jne
arpl
(bad)
pop
mov
es
push
les
imul
repnz
test
pusha
fidivr
and
jnp
cmp
cmp
lock
retf
add
imul
out
mov
loop
in
and
sub
sub
push
mov
leave
movaps
pop
stos
jle
xchg
ficom
cmp
jmp
clc
pop
mov
popf
inc
lods
xchg
popa
movs
xchg
bound
repz
stos
xchg
cdq
jge
cmp
xor
and
jecxz
stc
pop
lea
arpl
les
and
jno
and
sbb
cmp
pop
pop
repz
std
dec
mov
lods
sahf
cdq
jns
ror
in
xor
sub
test
js
pop
mov
xor
push
mov
(bad)
inc
add
push
mov
dec
mov
int3
cmp
stos
inc
mov
cmp
add
sti
add
add
and
add
por
ins
fisubr
stc
mov
inc
mov
in
jns
inc
mov
xchg
in
mov
or
out
out
jge
aaa
mov
or
adc
jno
mov
mov
std
pop
mov
iret
mov
fisubr
daa
sbb
mov
fnstcw
jno
dec
mov
fwait
inc
mov
jmp
sub
in
mov
and
icebp
pop
mov
retf
xor
dec
fimul
(bad)
xor
and
not
data16
inc
fiadd
cmc
pop
stos
popa
fisub
repnz
test
fisub
popa
add
inc
cmps
or
and
or
dec
sub
jecxz
retf
xor
xor
dec
clc
aaa
out
push
cmps
jnp
jae
call
not
aam
je
pushf
jle
xlat
cmp
into
inc
int3
xor
fild
push
cmp
inc
ror
inc
fimul
xchg
xchg
ja
xchg
bound
xor
xchg
ins
lods
retfw
jg
outs
xchg
lahf
fsubr
adc
dec
loopne
pop
add
loopne
(bad)
push
add
sti
push
xor
push
mov
pop
sbb
sub
in
push
lods
inc
mov
cli
push
ret
inc
mov
cs
mov
pop
mov
fnstsw
cli
push
adc
lds
imul
aad
mov
or
scas
fadd
push
repnz
shl
mov
ret
imul
(bad)
sub
stos
jne
jle
pop
test
cmps
mov
pop
add
inc
rcr
addr16
das
adc
or
xor
mov
mov
inc
mov
(bad)
or
test
mov
or
not
test
dec
in
inc
call
lea
fnstsw
sub
push
retf
push
test
cdq
mov
outs
ror
adc
cmps
hlt
push
jge
fwait
mov
rol
out
(bad)
fs
xlat
or
xor
sub
pusha
sar
cdq
mov
sub
push
fcomp
jne
dec
mov
iret
mov
jo
push
mov
push
lds
push
mov
mov
add
dec
fcomp
aaa
pop
xor
loop
lock
mov
mov
dec
mov
mov
scas
mov
lahf
test
jb
mov
or
es
cmp
jb
aaa
loope
pop
loopne
mov
lea
xor
in
adc
sbb
cmp
loop
test
mov
pop
lds
ja
cmp
sbb
dec
xlat
add
mov
cld
pop
mov
daa
adc
sub
push
stos
pushf
mov
xchg
outs
fmul
ret
push
jecxz
test
push
mov
xchg
inc
into
or
push
ficom
adc
pop
cmp
or
mov
loope
test
repz
sbb
and
inc
mov
retf
and
les
jle
ins
xlat
(bad)
cmp
sbb
inc
fldenv
adc
dec
fmul
xchg
je
xchg
out
xchg
inc
mov
arpl
cmp
jbe
xor
movs
fs
pushf
popa
(bad)
xor
or
out
pop
lods
lea
jae
outs
fst
cld
sub
lahf
inc
mov
cld
cs
push
call
je
popa
stc
imul
inc
or
dec
cmps
xchg
lods
jg
in
xchg
mov
mov
sar
scas
mov
adc
sub
cmp
sbb
jge
add
sub
and
sub
dec
lea
and
clc
aas
loopne
adc
xor
cli
dec
(bad)
sbb
xchg
dec
add
xor
pop
mov
mov
pop
xchg
xchg
mov
shl
std
aas
loop
cli
mov
push
cmps
addr16
cmp
sub
xchg
gs
jns
nop
mov
mov
push
stos
mov
jp
shr
sbb
push
lds
cmp
xor
sub
and
imul
(bad)
dec
lods
mov
mov
imul
mov
jp
shl
or
rcr
nop
jg
retf
push
cmps
data16
test
and
aaa
sbb
jge
je
loopne
ror
lds
cmc
push
or
or
xor
imul
into
push
cmps
xchg
dec
mov
and
dec
lds
pop
and
push
sbb
cmp
daa
xor
or
psubsw
leave
push
rol
(bad)
aas
aaa
les
or
leave
inc
shl
xchg
cmp
mov
cmp
and
jae
xchg
jle
js
dec
and
mov
and
loop
mov
js
data16
fistp
lods
arpl
test
jno
dec
mov
ror
lahf
dec
cmps
push
loopne
fiadd
test
jp
imul
rol
out
inc
leave
mov
adc
inc
xor
sti
pop
add
out
push
mov
pop
scas
inc
mov
dec
xlat
add
retf
daa
jmp
cmc
pop
xor
mov
cs
and
dec
aad
repnz
jle
ja
xchg
jb
dec
mov
inc
fimul
adc
push
mov
add
pop
mov
dec
stc
cmp
pop
mov
mov
enter
pop
mov
fnsave
in
test
mov
js
call
mov
jle
jae
jl
add
add
and
sub
clc
pop
mov
or
ror
xor
scas
lahf
mov
mov
cmp
test
jbe
pop
mov
and
add
push
mov
retf
xor
stc
pop
pop
push
inc
and
or
xchg
sub
aas
sbb
pop
sbb
(bad)
push
mov
xor
ins
cli
ss
clc
cmp
retf
rcl
add
ds
jecxz
daa
or
sbb
shr
push
pop
ror
inc
fstp
cmp
es
cmp
sub
out
addr16
pop
mov
arpl
push
mov
jbe
pop
mov
ja
outs
shr
xor
and
pop
xchg
lods
inc
lods
arpl
cli
xor
inc
xlat
xor
sub
sbb
push
mov
pushf
nop
jo
push
mov
jns
ja
aas
call
hlt
xor
jns
inc
scas
lahf
mov
and
push
mov
jbe
sub
daa
adc
pusha
sar
loop
cli
ja
pushf
mov
pop
mov
(bad)
popa
sar
jmp
or
push
int
adc
aaa
adc
pop
stos
inc
sub
(bad)
cmp
sub
pop
aas
jmp
mov
fld
dec
mov
adc
pop
xchg
imul
mov
mov
fistp
sbb
push
int3
sub
jmp
mov
push
xchg
mov
mov
pop
fld
adc
aas
sar
xor
or
mov
xor
mov
fistp
mov
mov
mov
sahf
ja
sub
adc
xor
add
ja
jl
xchg
js
xchg
jmp
clc
and
sub
bound
(bad)
push
adc
ds
sub
clc
xor
jg
inc
mov
inc
mov
mov
(bad)
push
leave
or
push
mov
stc
dec
lods
popa
iret
ds
mul
sbb
loopne
scas
gs
in
cmc
jle
pop
loopne
cmps
mov
mov
push
ficomp
jb
xchg
retf
xor
les
pop
sub
add
pop
fbld
test
add
pop
retf
or
out
out
or
push
stc
mov
pop
mov
add
adc
mov
xchg
(bad)
int
shr
and
outs
lods
jge
mov
lods
jl
push
adc
dec
mov
inc
fistp
xor
cdq
jg
jnp
sub
add
and
ds
and
inc
ret
dec
retf
aas
jecxz
std
cmp
loope
repnz
in
or
pop
ret
jne
cmp
cli
sub
and
paddb
xor
xor
add
pop
ror
imul
xor
cld
add
pop
fbld
hlt
pop
shr
or
es
xor
dec
mov
lea
pop
scas
cdq
inc
mov
mov
push
xchg
mov
call
mov
outs
mov
repz
enter
and
cmc
dec
mov
clc
xchg
lods
nop
jne
stos
dec
mov
and
daa
adc
call
loope
adc
lds
clc
dec
enter
jl
xchg
jno
jb
cmp
sar
jg
ja
adc
dec
mov
mov
pmuludq
xchg
je
or
ss
mov
mov
inc
repz
ins
mov
inc
fdivr
call
xchg
jbe
das
repnz
mov
lahf
inc
mov
lods
mov
out
daa
push
sbb
dec
test
test
stos
xchg
nop
repnz
test
xchg
jl
inc
mov
sub
daa
sbb
or
(bad)
and
add
repnz
inc
mov
in
imul
add
cmp
fimul
pop
cmps
lods
outs
mov
ja
addr16
aas
sbb
enter
(bad)
sub
add
icebp
ss
jo
cmp
xor
xor
inc
stos
call
fisubr
out
or
inc
mov
mov
add
mov
mov
and
adc
sub
jle
pusha
mov
mov
in
dec
iret
adc
push
jmp
or
xor
push
cmps
call
rcr
xchg
jge
pop
fdivr
or
and
ret
dec
xchg
xchg
fs
jbe
sub
or
maskmovq
mul
cmc
aaa
sbb
inc
cmps
fdivr
in
pop
aas
out
imul
jb
fwait
jle
pop
push
jmp
mov
test
sbb
jmp
jbe
pop
shr
es
push
mov
aad
stos
jne
sahf
pushf
xchg
xchg
jo
dec
xchg
js
xchg
dec
leave
sub
cli
and
add
add
add
xchg
push
add
fiadd
cli
push
cmps
arpl
push
lods
fwait
jns
push
icebp
and
add
sub
push
xor
aaa
loopne
fmul
ret
inc
add
pop
retf
xor
or
xor
mov
(bad)
pusha
aam
in
sub
inc
shl
in
pop
movs
jne
dec
mov
push
mov
lock
shl
fwait
push
fisttp
sbb
addr16
pop
(bad)
push
(bad)
loop
pusha
fisttp
or
sahf
popf
ins
rcr
sub
lahf
gs
ds
inc
rcr
mov
push
mov
jbe
popa
mov
shr
xor
call
ret
pushf
imul
mov
cdq
sahf
push
mov
jl
xchg
jb
sahf
fs
cmp
lds
mov
daa
cli
cmp
lods
dec
stos
push
scas
mov
inc
mov
ret
pop
cmp
dec
mov
fisttp
inc
mov
sbb
xlat
cmp
cmp
or
inc
retf
cmp
push
xchg
inc
lods
popa
rcl
pop
stos
nop
inc
mov
in
cmp
movs
ja
cmp
pop
iret
inc
leave
pop
mov
xchg
cwde
ja
xor
or
lock
xor
dec
test
jbe
xor
int
shl
idiv
pop
mov
(bad)
cmp
xor
sub
(bad)
das
(bad)
mov
test
push
sbb
jmp
cdq
je
repz
retf
xor
dec
mov
xchg
lock
call
imul
mov
xchg
jl
mov
lock
fild
(bad)
jle
xchg
xchg
mov
sub
xchg
add
mov
popf
jg
xchg
arpl
push
cmps
lea
push
cli
or
shl
jmp
sbb
or
ds
repnz
aam
mov
mov
outs
mov
shl
sbb
jmp
pop
nop
inc
mov
mov
in
xor
xor
ret
push
mov
xchg
add
test
dec
mov
xor
div
cmp
and
jmp
rol
push
sbb
xor
jns
xchg
ins
leave
sub
or
into
(bad)
xlat
xor
jmp
add
xchg
cmps
pushf
jle
inc
stc
pmaddwd
dec
xchg
ficomp
jne
push
stc
push
cld
sub
dec
mov
paddsw
not
pushf
jge
dec
ret
jmp
loope
stos
outs
cmp
sbb
adc
ret
cmp
dec
test
fnstenv
retf
or
push
inc
sti
jp
dec
mov
std
push
(bad)
cmp
cs
fisttp
push
mov
push
movs
jae
add
out
ret
jmp
test
sbb
push
fdiv
in
(bad)
lea
(bad)
push
mov
iret
ds
loopne
loop
cmc
pop
(bad)
es
iret
pop
lods
mov
jge
mov
xchg
xchg
sub
fadd
or
xor
ja
dec
mov
fnstsw
sbb
push
(bad)
fdiv
adc
(bad)
cmp
inc
xchg
lea
cmp
sub
mov
call
and
sbb
pop
fisttp
dec
test
imul
(bad)
sub
cmc
sub
not
inc
mov
fwait
jne
nop
(bad)
add
push
repz
or
xor
mov
shl
pop
sub
fild
or
ret
push
mov
mov
test
mov
jns
arpl
push
dec
std
jnp
ins
clc
addr16
loopne
mov
xchg
mov
sub
or
push
mov
xchg
js
push
mov
movs
jb
or
getsec
je
(bad)
shl
add
std
xor
xchg
cdq
cwde
pusha
ret
and
mov
cdq
jo
test
push
arpl
pop
sbb
sub
imul
aaa
or
jne
data16
inc
mov
int3
push
call
aas
sbb
(bad)
(bad)
pop
stos
push
aam
xchg
es
push
test
push
adc
not
movs
mov
jno
mov
inc
scas
pusha
stos
imul
xchg
jnp
pop
cmps
fwait
fs
push
rcr
dec
rol
jecxz
cld
pop
(bad)
scas
push
sub
add
icebp
pop
xchg
lea
bound
loopne
call
pusha
lods
cdq
imul
cli
pop
mov
sub
add
pop
sar
and
pop
into
inc
add
sbb
or
cld
pop
mov
inc
mov
in
lahf
dec
lods
fs
add
add
icebp
pop
fdiv
push
out
sub
ret
dec
test
call
lea
cmp
mov
retf
cs
aaa
jecxz
adc
and
fbld
xor
and
cmp
mov
push
mov
sar
cli
es
fmul
clc
aaa
or
or
or
inc
xlat
mov
and
cmp
pop
rcr
xchg
mov
sbb
ret
push
(bad)
jle
and
repnz
sub
das
push
push
ss
cmc
and
or
ss
mov
mov
mov
push
sub
adc
push
cld
pop
and
mov
ja
and
pop
mov
push
dec
lods
jge
cs
sti
dec
icebp
push
mov
aad
loopne
repz
jo
test
dec
mov
jbe
aas
stc
and
jmp
push
jl
stos
xchg
les
popa
in
push
scas
test
jl
xchg
push
movs
popf
dec
mov
ins
cmps
xchg
cdq
mov
mov
xchg
nop
inc
int
(bad)
push
mov
cdq
mov
js
or
es
dec
mov
jmp
gs
mov
loope
mov
inc
test
imul
jb
push
and
hlt
and
dec
xlat
add
cmp
push
mov
jecxz
mov
ins
cs
cmp
adc
or
test
jb
ror
movs
fsubr
repnz
mov
adc
daa
sbb
adc
or
inc
aam
sbb
ror
cld
mov
imul
xchg
xchg
push
aas
ret
dec
enter
xchg
(bad)
cs
cmp
push
mov
aad
cld
push
div
add
sbb
pop
(bad)
ds
pop
cmp
dec
or
cld
and
cmp
cld
pop
lock
leave
imul
push
mov
mov
push
int3
cmp
scas
loopne
les
pop
mov
pusha
scas
ficomp
pop
out
push
out
lods
sbb
les
daa
adc
sub
push
mov
fwait
mov
and
xor
xor
inc
mov
sar
psllw
or
dec
mov
cmp
imul
lock
jbe
je
fwait
je
mov
sahf
jg
int3
push
test
xchg
jge
dec
mov
mov
inc
mov
mov
dec
xchg
mov
sub
out
shl
daa
sbb
push
aam
sbb
inc
test
mov
jno
lahf
push
adc
add
jmp
cld
popa
sar
jmp
fadd
add
push
add
out
test
xchg
aam
sar
ret
arpl
and
retf
cs
cmp
(bad)
dec
fisttp
dec
fstp
cmp
push
in
aam
adc
push
fld
div
loop
or
fmul
cmc
dec
mov
stos
inc
test
jmp
les
jno
fs
popa
out
xor
ror
adc
xchg
cmp
add
pop
movs
jbe
push
jmp
cmp
dec
test
sbb
mov
push
xchg
lahf
dec
test
psubw
hlt
push
mov
rcr
nop
xchg
(bad)
jp
mov
nop
ins
aad
sar
(bad)
push
lea
and
and
pop
push
loop
leave
or
dec
repz
retf
cmp
add
in
cmp
push
push
aas
icebp
and
cmp
cmp
jbe
sub
or
pop
add
loop
fldenv
sbb
das
cld
ds
mov
mov
paddb
les
sbb
inc
fisubr
aaa
sbb
(bad)
pop
xchg
push
hlt
dec
mov
movs
jns
sbb
cmp
ret
div
adc
sub
push
add
ss
xchg
cmc
gs
push
cmps
sahf
inc
cli
push
aam
add
retf
push
push
cmc
mov
popa
mov
lds
push
clc
dec
scas
lahf
pushf
mov
inc
sbb
and
sbb
xor
fs
fisttp
test
and
xchg
jle
(bad)
dec
lods
mov
outs
fsubr
std
and
inc
lock
adc
out
sbb
(bad)
dec
xchg
inc
add
out
sbb
pop
mov
clc
daa
cli
inc
lods
fs
popf
inc
(bad)
sub
cld
mov
sahf
push
mov
jns
jge
and
jns
xchg
jb
cmp
pop
mov
mov
push
test
dec
iret
xor
pop
fadd
in
xor
xor
mov
cwde
shl
push
enter
fidivr
mov
xor
mov
ror
cld
jp
inc
xlat
pop
loope
out
mov
fst
inc
mov
cmp
out
adc
or
sbb
inc
loopne
sbb
sub
or
(bad)
push
mov
inc
rol
(bad)
and
sbb
aas
in
push
sbb
sar
sar
sbb
pop
sub
mov
test
je
inc
mov
ins
lods
dec
mov
test
mov
lea
cdq
js
je
pusha
shl
cli
aas
in
push
enter
pop
scas
fst
mov
scas
xchg
sub
lock
cmp
adc
or
cmp
pop
xchg
cmps
xor
sahf
inc
mov
pop
out
aas
in
cli
and
adc
es
lods
xchg
add
mov
jmp
(bad)
xor
xor
jo
push
xchg
mov
jg
inc
mov
and
pop
sbb
sub
xor
pop
pop
(bad)
and
daa
sbb
xor
ss
sub
(bad)
pop
stos
lahf
fsub
jecxz
mov
jl
xor
out
mov
neg
int3
cmp
adc
push
aam
(bad)
xor
xor
add
retf
pop
shl
imul
pop
int
xchg
fwait
dec
retf
je
cmp
xor
pop
pop
xor
add
scas
popf
hlt
inc
ror
pop
loope
mov
or
and
dec
stos
popf
inc
mov
jecxz
shr
loope
iret
lods
retfw
push
mov
sub
fdiv
in
xor
add
and
sub
shl
push
mov
call
lahf
xlat
add
sub
push
stos
jge
mov
fld
jne
pop
mov
cdq
ja
shl
hlt
or
jnp
mov
mov
adc
sub
pop
stc
cmp
push
test
lods
mov
dec
fdiv
push
out
mov
pop
mov
mov
pushf
ja
jo
pop
test
jecxz
mov
cmps
jae
pushf
mov
lds
jmp
fdiv
out
dec
push
repz
cli
or
clc
inc
mov
mov
xor
push
shr
push
add
jns
push
lods
add
les
retf
pushf
xchg
inc
sar
fadd
adc
push
test
jg
ds
adc
xor
sub
cmp
in
pop
xchg
jbe
inc
lods
fidivr
push
jl
imul
add
repz
cmp
lods
mov
(bad)
xlat
imul
jno
jg
sub
push
call
cdq
popf
mov
ins
loope
mov
imul
inc
mov
aad
stc
sub
mov
nop
mov
sub
cmps
xchg
dec
jecxz
cmc
push
lds
sbb
scas
mov
sub
mov
pushf
dec
mov
inc
mov
and
out
test
leave
cs
aad
into
xchg
(bad)
test
nop
jle
dec
test
xchg
xchg
and
mov
add
jecxz
or
jne
push
test
xor
pop
jmp
nop
inc
ret
cmp
xor
sub
das
sbb
jp
mov
xor
mov
loopne
pop
in
mov
xchg
mov
mov
sbb
imul
int3
inc
daa
sub
jmp
(bad)
xor
retf
add
cmp
cmp
pop
mov
and
xor
cld
sub
adc
addr16
inc
enter
sbb
cmp
xlat
push
stos
lea
jnp
inc
mov
fcomp
ins
movs
test
scas
cmp
mov
xchg
call
rol
iret
imul
fsub
retf
sti
pop
xchg
not
cmps
test
js
jl
lea
sbb
adc
inc
push
adc
push
mov
daa
out
movs
inc
mov
fstp
mov
into
dec
cmps
rcl
gs
sbb
push
shl
add
es
enter
and
or
sub
(bad)
dec
mov
pop
or
cmp
popf
test
imul
fild
and
repnz
ret
sbb
into
xor
pop
mov
outs
mov
dec
adc
pop
movs
je
das
ds
cmp
adc
std
push
adc
out
mov
ja
jle
mov
mov
aas
loope
in
lods
call
inc
mov
push
aas
loop
fsub
std
and
pop
sub
icebp
jne
call
out
stc
jp
mov
fcomp
mov
stc
push
adc
test
sbb
iret
ss
pop
lea
scas
popf
pusha
fbstp
jmp
movs
arpl
pop
mov
pop
test
dec
stos
fs
add
xor
cmp
movs
adc
jno
jge
xor
push
mov
jb
mov
jno
popf
imul
pop
lock
add
sub
sbb
push
repnz
add
sbb
add
ins
and
sbb
in
iret
pop
fimul
pop
mov
mov
mov
sbb
jl
pop
mov
xchg
mov
dec
int
repnz
mov
leave
dec
retf
push
lods
pushf
test
aam
xchg
popa
fisttp
jnp
and
cmp
sub
retf
sub
sub
adc
sti
pop
mov
xor
pushf
fs
adc
sub
mov
mov
cmp
jnp
xchg
inc
mov
mov
fistp
mov
aad
adc
in
ret
bound
mul
psubd
cdq
jne
je
inc
xlat
and
and
int
stc
cmp
dec
fadd
sbb
mov
jnp
mov
shr
out
adc
mov
inc
fsub
lahf
div
mov
call
sbb
or
mov
inc
and
(bad)
cmp
dec
stc
pop
mov
inc
hlt
and
or
sub
jmp
mov
outs
fnstcw
in
gs
js
fwait
dec
xchg
xchg
xchg
jl
mov
mov
lods
xchg
mov
dec
mov
aaa
icebp
push
iret
xor
push
mov
sbb
mov
jne
and
push
shl
adc
pop
jmp
fidivr
(bad)
push
add
js
cmp
sti
adc
outs
fild
push
aas
out
pop
mov
imul
mov
hlt
push
cli
sub
and
into
push
mov
sub
sub
out
add
mov
pop
mov
cmc
cs
pop
movs
dec
xchg
lds
inc
cli
pop
movs
xchg
inc
mov
and
add
sbb
mul
loopne
int3
xor
cs
inc
int3
pop
mov
cdq
ins
scas
mov
xchg
jg
jae
and
push
(bad)
and
pop
fldcw
sbb
push
mov
pop
retf
dec
xchg
pop
cmp
out
jecxz
fstp
cmp
not
push
cmp
mov
adc
fisubr
pop
test
mov
xchg
rol
jl
call
data16
add
cld
dec
movs
cmp
out
adc
push
adc
jmp
outs
cmps
(bad)
sub
hlt
dec
mov
daa
sbb
sub
push
adc
cld
or
clc
pop
mov
jne
shl
sbb
or
pop
mov
push
or
enter
(bad)
adc
add
fwait
jb
cs
bound
std
sub
pop
test
xchg
jbe
pop
mov
fnstenv
pop
sbb
call
imul
imul
jb
nop
jg
ins
mov
mov
scas
jg
adc
sbb
neg
mov
xchg
jbe
ds
call
leave
add
(bad)
push
pop
ret
adc
retf
sbb
push
mov
add
dec
retf
add
sub
repnz
xchg
mov
ins
xlat
push
mov
out
pop
retf
dec
rol
adc
or
js
cwde
call
arpl
dec
xchg
push
lock
rcr
inc
aam
cmp
repnz
mov
(bad)
inc
retf
dec
(bad)
sub
adc
icebp
xor
add
sub
pop
xchg
xor
sti
sub
verw
dec
mov
data16
enter
aaa
sub
push
test
push
sar
push
out
mov
add
add
sub
xchg
shl
and
dec
mov
xchg
cdq
jne
call
pinsrw
pop
ds
push
mov
rol
shr
inc
fnstsw
cmp
push
sbb
div
rcr
jp
pop
mov
jg
xchg
push
xchg
(bad)
pusha
xlat
push
mov
lods
aad
mov
movs
(bad)
push
pushf
dec
mov
dec
stos
inc
mov
sub
repnz
inc
mov
push
mov
aas
add
pop
fisttp
mov
out
sub
icebp
pop
cmps
mov
mov
fsubr
rcl
lahf
imul
stos
jnp
and
jecxz
cmp
cmp
cmp
xor
mov
cs
repnz
aad
or
push
leave
pop
mov
out
inc
sub
sbb
out
pop
call
popf
inc
fidivr
push
shl
or
mov
or
inc
fmul
xor
sub
push
mov
test
jl
and
and
xchg
pusha
ret
xchg
dec
call
je
cwde
dec
(bad)
ins
cmc
and
xor
fld
(bad)
and
ins
fst
xchg
popa
mov
push
mov
dec
int
loop
push
push
in
xor
and
mov
mov
dec
mov
jbe
pushf
push
cld
das
push
sub
push
leave
or
xor
jl
dec
mov
jg
xchg
inc
(bad)
push
mov
inc
test
mov
lds
add
(bad)
push
fmul
repnz
ficom
xchg
mov
xor
in
dec
xlat
add
xchg
mov
push
mov
inc
add
std
cmp
mov
aas
jecxz
mov
test
pop
stc
jns
xchg
jge
pop
cmps
cwde
outs
int3
sub
xor
test
push
mov
aam
sbb
push
mov
mov
mov
cmp
daa
ret
add
adc
xor
iret
dec
push
push
mul
sbb
and
in
aas
cmc
das
adc
push
xlat
sub
or
pop
shl
push
dec
rol
test
mov
fist
push
(bad)
cmp
sub
lock
imul
and
sahf
inc
cmps
imul
hlt
ds
in
pop
retf
ret
loope
movs
js
mov
add
dec
ficom
mov
sbb
jl
mov
enter
(bad)
pop
xchg
mov
neg
iret
dec
test
xchg
(bad)
js
mov
xchg
mov
loopne
in
out
aas
repnz
sbb
test
bound
xchg
js
cmc
push
mov
and
add
pop
mov
ror
jae
add
in
and
adc
dec
sar
sbb
push
adc
fistp
fwait
push
das
out
movs
fwait
jns
dec
mov
push
stos
push
add
out
pop
xchg
jae
pop
pop
pop
out
xchg
fld
jmp
jb
inc
lea
xor
das
inc
movs
mov
fidivr
lods
push
mov
xchg
jb
fwait
inc
ror
jmp
jmp
push
fisttp
mov
jle
shufps
xchg
inc
scas
mov
sbb
js
add
push
lods
inc
pop
pop
sub
test
dec
int3
and
add
iret
sub
cmc
cs
push
stos
inc
cmps
jb
push
adc
retf
cmp
test
cli
mov
test
xchg
xchg
jns
cdq
inc
imul
push
add
xchg
push
add
adc
ins
mov
add
push
dec
loopne
mov
call
cmp
jnp
adc
(bad)
or
mov
iret
or
push
cli
xor
stos
ror
shl
mov
push
adc
fistp
stc
dec
xchg
enter
sbb
pop
push
cmp
sub
push
mov
dec
jle
or
cmps
jmp
retf
test
fst
sbb
jne
jl
push
sbb
es
dec
and
movd
arpl
push
and
inc
add
pop
inc
and
sub
ins
sub
jo
jae
inc
xor
js
push
adc
ja
inc
adc
dec
add
push
push
jg
dec
push
push
cmp
dec
and
ja
inc
add
std
mov
jmp
(bad)
into
scas
loop
lds
repz
aam
sar
loopne
int
rcl
std
cmps
(bad)
xchg
xlat
mov
xchg
aad
cmc
test
call
aad
sbb
jg
jns
popa
add
inc
xor
sbb
sub
jg
push
cmp
inc
add
inc
add
push
pop
inc
xor
ins
cs
add
cmp
dec
sub
js
pop
sub
ja
ins
xor
pop
ss
arpl
push
adc
push
adc
pop
push
inc
xor
sbb
add
or
dec
add
jg
addr16
and
inc
ss
pop
sbb
imul
jno
outs
maxps
jg
pop
sbb
push
and
dec
or
jno
pop
pop
push
or
xor
outs
and
cmp
adc
xor
addr16
dec
and
dec
or
inc
cmp
pusha
es
dec
cmp
daa
je
dec
add
pop
add
cmp
jo
outs
sub
inc
xor
jb
push
pop
imul
push
xor
xor
jp
dec
cmp
jo
dec
cmp
pop
add
int
in
(bad)
mov
jmp
lods
icebp
mov
mov
in
in
and
test
sti
movs
sbb
imul
add
and
and
xor
inc
add
popa
xor
pop
sub
lock
jmp
call
mov
mov
iret
mov
fistp
call
mov
lahf
fild
xor
push
pop
dec
sub
ds
cmp
aas
je
ins
das
push
xor
fnsave
fisttp
xchg
fcom
stos
cmp
jo
ss
lea
inc
shl
cmps
into
pop
fs
stos
dec
or
aaa
jae
loope
dec
loop
pusha
and
and
icebp
movs
sti
sbb
lahf
mov
jmp
cwde
int
vpcomub
mov
xlat
adc
pop
stc
or
ja
xor
test
push
mov
push
inc
mov
add
add
mov
xor
cmc
clc
(bad)
nop
jae
inc
add
add
adc
pop
sub
in
push
jns
push
mov
hlt
mov
mov
mov
pushf
call
inc
fsub
adc
cmp
sbb
cld
mov
ds
sub
sbb
cmc
ret
mov
es
mov
lock
pop
mov
mov
inc
popf
cmovae
in
int3
xchg
(bad)
aaa
cdq
hlt
mov
test
(bad)
cmp
test
pop
push
adc
or
mov
or
inc
lods
push
dec
cmp
and
jg
popa
stos
add
or
pop
add
cld
cmps
fsub
in
mov
in
jecxz
mov
lods
add
enter
push
push
popf
pop
adc
idiv
stos
aam
xchg
arpl
loopne
mov
test
pop
repz
mov
or
mov
sbb
sbb
(bad)
cmp
call
fiadd
cmc
push
xchg
fdivr
jbe
xlat
xchg
scas
iret
or
dec
adc
cmp
icebp
in
mov
and
ret
call
rcr
int
mul
fdiv
sahf
call
xchg
int3
mov
enter
int3
test
lahf
(bad)
scas
out
(bad)
in
lods
in
cmps
int3
mov
std
movs
out
hlt
xchg
fdiv
sub
ins
sub
js
cdq
in
mov
fdiv
into
scas
cld
mov
test
fst
rcl
loop
into
cmps
call
and
les
fld
aad
hlt
mov
in
hlt
xchg
div
in
iret
(bad)
jmp
(bad)
scas
loopne
sti
cwde
retf
mov
mov
scas
ror
retf
sahf
cld
mov
xchg
(bad)
(bad)
in
mov
(bad)
mov
lods
in
mov
test
mov
mov
mov
mov
mov
cld
test
rcl
adc
push
sbb
data16
adc
and
fisubr
leave
mov
mov
sti
lods
loope
out
in
iret
mov
mov
xor
call
mov
ficomp
leave
cmps
(bad)
xchg
int3
mov
mov
rcr
xchg
(bad)
mov
xchg
aad
cld
mov
xchg
out
(bad)
add
shl
(bad)
shl
mov
out
cmc
cmps
out
retf
movs
in
mov
jmp
sar
mov
mov
int
out
mov
(bad)
(bad)
mov
lock
in
mov
jmp
div
(bad)
xchg
in
cli
mov
mov
leave
mov
sbb
gs
inc
pop
dec
and
aas
jg
push
pop
inc
pop
sub
dec
push
jbe
addr16
fs
imul
imul
adc
je
outs
or
push
jle
push
adc
inc
pop
push
and
cmps
out
call
mov
in
lods
sbb
sbb
push
add
ja
jb
inc
add
mov
mov
repnz
loopne
not
mov
mov
test
mov
xchg
in
jecxz
ret
mov
aaa
mov
pop
lds
movs
in
cbw
jmp
xchg
jge
push
xchg
daa
repnz
clc
cmp
pop
xchg
repz
add
in
adc
ret
ins
sub
sti
loopne
rol
in
xchg
jae
sub
dec
out
pop
mov
mov
and
int3
repnz
xor
mov
test
leave
mov
jp
sub
add
mov
dec
je
xor
cli
stos
lods
and
or
sbb
cmp
in
fisubr
test
jns
cmp
sub
mul
pop
(bad)
mov
lods
nop
adc
fcomp
int3
clc
mov
pop
dec
xor
sbb
test
fstp
sub
fcomp
sbb
fisub
je
fadd
ss
pushf
(bad)
mov
adc
pop
nop
add
mov
add
jns
sbb
scas
or
sbb
sbb
(bad)
repz
or
xor
mov
in
scas
ins
fs
sbb
loope
rcr
repnz
jp
or
out
hlt
xchg
out
mov
cmps
bound
cmp
or
int
adc
mov
gs
ss
(bad)
cmovae
jecxz
mov
xor
cld
adc
dec
push
sub
jmp
sti
dec
xchg
jmp
mov
xchg
pop
sbb
and
sbb
scas
std
push
test
push
call
pop
or
sub
cmp
dec
sbb
jb
dec
or
sub
jae
or
push
pop
sub
es
or
outs
aaa
push
cmp
jl
jp
pop
and
inc
cmp
push
push
inc
and
add
addr16
inc
bound
push
jo
popa
adc
cmp
push
sbb
and
push
xor
push
adc
dec
adc
push
or
jg
jns
popw
push
pop
ja
push
adc
pop
and
adc
cdq
leave
mov
mov
movs
xlat
xchg
retf
mov
xchg
rol
je
pop
adc
push
dec
and
adc
jnp
push
or
cmp
pop
add
jp
ja
ins
sub
outs
sub
xor
jbe
jp
inc
adc
push
adc
sbb
jno
pop
sbb
pusha
add
jae
inc
add
inc
add
sub
inc
push
je
outs
cmp
adc
pusha
add
inc
add
dec
add
push
inc
cmp
dec
pop
pusha
outs
sub
ds
push
push
sbb
pop
push
je
inc
pop
pop
or
and
push
xor
xchg
rcr
jmp
mov
mov
iret
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fistp
retf
xchg
pushf
icebp
movs
sbb
pop
pop
push
cmp
push
es
inc
add
push
sbb
jnp
js
imul
pop
push
ins
aaa
ja
cdq
std
mov
xchg
ror
jmp
mov
icebp
mov
mov
xchg
mul
in
les
sbb
push
adc
pop
pop
push
movq
jl
jne
jne
pop
and
fst
icebp
mov
mov
xlat
nop
leave
test
call
out
mov
cmc
test
fnstsw
out
stos
hlt
xchg
mov
movs
jmp
fcomp
(bad)
mov
mov
lahf
out
stos
cmc
mov
retf
mov
ret
mov
cmp
test
repz
jecxz
std
nop
ret
jle
jbe
push
and
xor
ja
ins
xor
sub
sbb
inc
add
add
sbb
mov
(bad)
(bad)
cmps
shl
enter
sub
into
sub
mov
(bad)
xchg
ja
fstp
gs
int
mov
cdq
scas
ins
addr16
jmp
movs
lds
hlt
xchg
ja
cmp
pop
sub
pop
sub
sbb
sbb
fucomip
mov
xor
add
or
jmp
jae
daa
jl
sub
ins
pop
sbb
jecxz
mov
bound
mov
outs
inc
pop
and
ss
adc
xor
test
mov
push
dec
dec
sbb
rcr
call
inc
cmp
std
movs
jmp
test
xchg
repnz
push
pop
cmp
call
and
or
or
jmp
ins
add
mov
data16
loop
mov
pop
js
add
adc
xor
in
xchg
ins
xchg
out
pop
je
sub
repz
fnstcw
mov
push
iret
loopne
mov
mov
test
cmp
or
inc
cld
cmp
retf
jne
sub
aaa
ficom
push
movs
dec
(bad)
cmps
ror
add
rcl
inc
leave
push
fs
in
jae
cmc
sbb
imul
inc
out
test
inc
push
(bad)
stc
mov
add
fs
pop
adc
lods
ret
scas
out
mov
mov
repz
lods
loopne
iret
mov
nop
repnz
ret
mov
xchg
rcr
int3
xor
lahf
sar
xlat
xchg
not
sbb
loop
retf
mov
popf
icebp
mov
xchg
xlat
mov
mov
(bad)
out
stos
out
movs
retf
mov
out
cmc
cmps
out
retf
movs
in
mov
in
add
xchg
shl
xchg
idiv
fimul
int3
mov
rol
or
jmp
mov
jmp
jmp
mov
call
add
lds
fild
retf
mov
int
cld
mov
std
nop
jecxz
icebp
test
(bad)
aam
mov
cwde
std
mov
rep
rcl
adc
push
sbb
data16
or
pop
adc
pop
adc
jnp
push
push
inc
push
data16
dec
or
jp
jnp
jp
push
and
dec
add
xor
adc
inc
daa
jbe
push
aaa
jae
jg
and
dec
cmp
jb
push
push
jbe
jp
inc
adc
push
push
push
sbb
add
sbb
push
add
ins
pop
dec
or
pusha
and
dec
es
add
imul
cmp
dec
pop
popa
and
pop
cmovg
dec
or
pop
add
inc
sbb
dec
and
inc
pop
pop
xor
cmp
jnp
dec
adc
and
add
push
aaa
jnp
pop
adc
je
push
sub
or
or
fld
jmp
lahf
(bad)
sahf
fistp
aam
in
rcl
(bad)
mov
xchg
repz
xchg
fisubr
shl
nop
sti
mov
lods
ret
xchg
retf
stos
retf
mov
mov
jmp
fidiv
xchg
repnz
xlat
xchg
fnsave
sbb
ja
cmp
dec
add
imul
add
xor
adc
jle
gs
aas
je
push
or
arpl
inc
and
pop
adc
jns
push
or
popa
xor
or
sub
jg
dec
movq
cwde
enter
pop
pop
add
or
push
fs
pop
ficomp
pop
push
sbb
pusha
es
push
adc
jl
daa
adc
xchg
les
stos
in
addr16
ret
or
arpl
push
stc
cmp
stos
cmps
outs
or
in
punpckldq
aaa
(bad)
movs
les
aam
movs
ins
and
out
dec
or
ret
mov
(bad)
jl
cmp
repnz
jne
cmp
jecxz
pop
pop
cld
loop
into
and
sti
test
loop
push
push
sub
jmp
arpl
out
test
or
mov
adc
mov
add
pushw
and
in
mov
dec
je
push
pushf
sub
adc
aad
mov
jl
sbb
in
in
push
or
or
xor
mov
data16
mov
pop
sub
bound
test
jne
arpl
rcl
(bad)
pop
push
pmaxub
pushf
mov
pusha
outs
(bad)
les
push
mov
lods
pop
adc
jmp
imul
out
adc
xor
xchg
fsubr
aad
lods
jae
clc
mov
cmps
out
bound
ss
jae
and
sub
or
fisttp
mov
ja
inc
mov
cmp
xor
loope
ja
stc
shl
jecxz
test
lods
ror
repnz
aad
leave
scas
lock
mov
mov
xchg
sbb
push
cmovno
sub
ret
mov
xchg
aad
icebp
add
out
scas
fistp
not
repnz
lods
in
scas
out
(bad)
mov
icebp
mov
fnstcw
int
(bad)
mov
jmp
sahf
fild
fist
lds
les
loop
ror
dec
and
and
xor
push
or
data16
pop
xor
cmp
push
adc
push
adc
push
and
dec
push
pop
pop
jle
pop
adc
arpl
arpl
bound
jns
dec
or
inc
pop
pop
cmovg
pusha
or
pop
xor
cmp
pop
adc
jns
push
adc
jnp
imul
and
jle
dec
movd
dec
or
push
cwde
fidivr
out
mov
repnz
mov
call
(bad)
xchg
int3
mov
mov
rcr
xchg
(bad)
mov
xchg
aad
cmc
xchg
popf
loope
leave
xchg
rol
into
mov
mov
cmps
(bad)
fcom
(bad)
mov
mov
cld
sahf
sar
pushf
lock
rcl
lods
out
pushf
mov
sahf
fild
out
stos
loope
lds
mov
fstp
iret
xchg
neg
lahf
icebp
xchg
(bad)
xchg
(bad)
fisubr
fist
iret
lahf
fistp
std
mov
xchg
loopne
ror
icebp
fwait
xlat
xchg
int3
mov
jmp
in
cli
mov
icebp
mov
cmps
(bad)
mov
lods
loopne
rol
lds
call
lods
loope
int
jmp
mov
jmp
mov
call
rol
pop
and
les
jmp
scas
int3
(bad)
int
xlat
fst
rcl
les
loop
loopne
nop
fdiv
out
xchg
retf
fwait
cli
mov
nop
ror
div
in
lds
std
nop
fisubr
xor
jo
outs
daa
dec
ds
dec
or
jo
pop
sub
lock
jmp
inc
pop
dec
cmp
add
call
aaa
dec
fild
inc
push
(bad)
ds
add
add
cmp
scas
dec
popa
xchg
repz
mov
scas
fdiv
dec
or
hlt
repnz
in
aam
mov
popf
(bad)
popf
outs
nop
enter
enter
inc
out
push
mov
mov
es
sub
pop
in
jae
xor
(bad)
mov
or
test
xor
out
sub
xor
and
lds
cmp
cmp
test
pushf
outs
pushf
fisubr
xor
cmp
sub
(bad)
in
cmps
test
sbb
mov
ss
mov
popa
mov
xchg
mov
jg
cmp
push
popa
and
das
jg
or
js
ss
jmp
and
test
pushf
sub
or
mov
push
xchg
cmp
test
clc
xchg
push
sub
dec
pop
shr
retf
icebp
js
cmp
xor
or
xor
iret
mov
aas
dec
in
jb
and
retf
xchg
cmp
sub
sub
jecxz
pop
sub
dec
mov
stos
mov
fidivr
pop
jecxz
mov
mov
fdivr
mov
fist
cmp
dec
sub
arpl
jb
outs
adc
cdq
fisttp
jmp
xchg
call
stos
fstp
ficomp
retf
xchg
lahf
jmp
loopne
(bad)
mov
lods
rcl
das
inc
add
cwde
(bad)
movs
call
cmps
out
test
mov
xchg
aam
add
aad
out
rol
ror
sub
cmp
sbb
jns
imul
cmp
jo
outs
and
cmp
adc
xor
sbb
pop
adc
sub
bound
bound
js
inc
sbb
inc
adc
cdq
repz
scas
iret
xchg
xlat
test
out
xchg
leave
xchg
jecxz
ror
loop
les
iret
scas
in
scas
in
(bad)
mov
std
mov
movs
stc
stos
(bad)
(bad)
rcr
sbb
pop
sub
inc
cmp
or
push
add
inc
pop
inc
add
dec
adc
push
add
dec
sub
push
xor
mov
mov
xchg
aam
(bad)
mov
aad
out
rol
stos
in
stos
jecxz
repz
lahf
fisubr
cmp
push
adc
jnp
pop
cmp
je
ins
sub
jge
pop
sbb
push
inc
push
dec
pop
ja
cdq
call
iret
mov
fstp
in
add
xchg
ret
and
sti
mov
xchg
in
dec
call
cmps
sbb
imul
or
cmp
dec
xor
js
push
adc
ja
inc
adc
dec
add
sbb
xor
adc
inc
daa
imul
sub
popa
pop
adc
inc
push
ins
cs
pop
inc
adc
sub
pop
cmp
dec
sub
bound
jb
pusha
adc
jge
bound
inc
sets
mov
stos
clc
mov
jmp
xchg
aad
add
shl
(bad)
fmul
(bad)
(bad)
in
ror
aam
clc
popf
aam
repz
(bad)
rcl
xchg
out
std
add
mov
jmp
rol
ret
imul
sbb
pusha
and
sub
and
fild
out
xlat
pushf
lahf
sub
pop
cmp
icebp
mov
sbb
dec
jl
jne
adc
push
mov
icebp
sahf
rol
imul
mov
pop
sbb
shl
mov
pop
push
xor
sbb
fiadd
cmp
(bad)
cmp
mov
lods
jmp
fisubr
cmp
loope
into
add
add
add
ds
je
cmc
xchg
sbb
adc
adc
hlt
(bad)
push
dec
sub
je
retf
mov
(bad)
ret
cs
gs
daa
inc
mov
movs
retf
add
adc
fldcw
imul
mov
(bad)
mul
or
add
sub
mov
mov
sbb
push
popf
sti
xchg
fcmovne
mov
adc
daa
dec
aas
scas
sbb
and
lahf
aad
es
mov
xor
fadd
inc
imul
jg
xor
repnz
rcl
xor
jnp
pop
imul
mov
bound
adc
xchg
mov
add
test
das
loope
push
loope
or
gs
sub
stc
fsubr
pop
jo
sbb
cmp
imul
(bad)
mov
es
sbb
push
outs
das
jmp
mov
mov
mov
sahf
xlat
sub
(bad)
sahf
xchg
adc
cmp
into
cmp
sbb
cmp
mov
adc
cwde
(bad)
and
jmp
xchg
push
xchg
leave
imul
je
xlat
out
mov
jmp
out
jecxz
es
jecxz
das
mov
mov
ins
push
sar
lea
lock
push
sub
lods
in
cmps
out
mov
movs
sub
sub
stos
into
mov
or
bound
dec
add
aad
mov
shr
mov
(bad)
jmp
lock
cmp
xor
pop
xor
daa
outs
add
dec
daa
jne
scas
push
jl
sar
sahf
xlat
das
not
arpl
movs
cld
ins
mov
sbb
hlt
sbb
icebp
cmc
mov
ss
daa
mov
jae
sbb
(bad)
hlt
or
popa
in
add
retf
push
imul
sbb
loopne
mov
(bad)
lock
aam
stos
push
outs
sub
movs
pop
pop
clc
adc
ins
add
int
xchg
test
jno
mov
clc
sub
pop
push
test
movs
in
cwde
in
lods
push
jne
out
scas
out
push
bound
mov
test
mov
das
pop
xchg
sbb
(bad)
fst
inc
mov
(bad)
cmps
les
test
scas
dec
pop
add
shl
and
jo
add
or
nop
fstp
pop
pop
pop
cdq
pop
add
repnz
mov
jns
inc
fprem1
test
addr16
adc
fstp
jmp
pop
mov
inc
fcomp
jge
and
dec
push
aas
jae
push
or
adc
out
pushf
scas
dec
jae
inc
test
dec
sub
(bad)
sub
es
dec
ins
xor
mov
push
mov
pushf
into
mov
ins
sub
inc
push
push
fs
int
mov
pop
or
int3
mov
stos
push
loopne
div
jo
pop
sahf
cli
mov
jg
in
lds
ds
mov
inc
add
mov
ins
fild
or
loopne
or
or
mov
sub
xchg
popf
cmp
sub
jno
xor
or
cmp
shr
lods
popf
sbb
stc
cmc
mov
mov
(bad)
jecxz
mov
sub
xor
xchg
sar
mov
mov
(bad)
sahf
cld
or
popa
cmp
fbld
xchg
push
push
sbb
sub
repz
dec
mov
scas
out
add
inc
xchg
xchg
les
jae
push
xchg
lock
loopne
xchg
out
push
and
retf
shr
or
out
jns
or
test
push
or
mov
shl
mov
bound
mov
stos
or
cli
shl
adc
xchg
and
ja
shr
inc
aaa
pop
and
mov
and
nop
sbb
aad
out
cmp
sub
scas
push
js
mov
iret
mov
mov
arpl
inc
xchg
push
push
or
retf
adc
cs
lahf
in
call
and
jl
loope
lods
pop
push
pop
sbb
(bad)
xchg
mov
jp
jnp
pop
pop
xor
pop
data16
or
cmp
dec
add
or
xchg
out
ins
dec
push
(bad)
cld
mov
cmp
(bad)
and
fiadd
mov
fnstsw
adc
enter
jae
cdq
jbe
pop
and
loopne
mov
fcomp
(bad)
ja
inc
add
pop
xchg
sbb
adc
cmp
cli
rcl
and
sub
sbb
xor
pop
repnz
mov
aaa
sbb
xchg
imul
arpl
jne
xor
ds
rol
das
imul
push
mov
cmp
test
or
dec
jne
pop
sbb
scas
loope
es
dec
ja
cmp
pop
xor
daa
outs
add
push
dec
push
push
outs
push
sub
and
cdq
and
add
fcmovne
add
sahf
and
rcl
call
xor
mov
mov
pop
fcom
add
add
or
fsub
push
mov
xchg
std
push
jb
or
inc
arpl
or
cmp
mov
mov
push
jne
push
sub
mov
sub
in
rol
jno
push
adc
frstor
mov
push
pop
nop
or
loope
test
adc
dec
mov
or
sbb
dec
xchg
loopne
out
ss
push
je
pop
mov
push
adc
int3
mov
xchg
ins
dec
add
pop
push
adc
test
mov
scas
or
pop
pop
mov
loop
call
or
jmp
xor
sti
mov
add
xchg
stos
inc
add
inc
mov
es
lods
ins
xor
jg
inc
fld
fs
sbb
or
fwait
hlt
inc
xchg
in
data16
in
lods
or
js
inc
add
or
fs
inc
nop
xor
sub
mov
call
rcl
add
jno
jo
add
lock
xchg
push
cmp
pushf
loop
shl
addr16
push
inc
xchg
hlt
mov
sub
outs
test
addr16
dec
lods
add
int3
and
(bad)
sbb
pop
icebp
shl
test
and
and
rcl
sti
mov
jmp
inc
int3
rcr
jg
sub
add
ret
mov
add
stc
call
cmp
or
call
or
fisubr
push
xchg
jmp
xor
loop
test
add
push
pop
add
cld
mov
adc
push
adc
fstp
adc
inc
xchg
in
mov
push
popf
jmp
ins
movs
adc
not
mov
push
(bad)
popf
into
add
imul
outs
inc
punpckldq
outs
sub
adc
push
or
rcl
jne
ss
fnstcw
shl
popa
and
(bad)
dec
or
sti
mov
adc
outs
xchg
rol
push
dec
lods
cmp
xor
movs
sbb
push
lods
(bad)
adc
cmp
and
movs
cmp
jne
push
mov
icebp
mov
test
loop
sub
stc
(bad)
(bad)
sti
ficom
mov
pop
or
adc
lds
mov
jle
inc
push
ds
xchg
pop
jle
movs
pop
jg
mov
adc
aad
mov
ja
or
jmp
ss
or
cmp
test
cmp
leave
(bad)
cld
sahf
mov
xchg
inc
pusha
jae
std
jmp
jmp
js
aas
in
mov
adc
inc
cmp
stos
adc
sub
repz
xlat
fwait
dec
pop
and
cmps
add
ret
jmp
inc
pop
dec
pmulhuw
rol
scas
daa
xchg
lock
inc
jp
sti
call
mov
mov
jns
or
cmp
xor
cmp
je
cld
pop
ja
out
inc
idiv
mov
ja
imul
mov
je
xchg
mov
cld
(bad)
xchg
cmp
arpl
shl
ffreep
leave
mov
xchg
sub
call
dec
and
rcl
push
sub
sar
ror
push
sub
stos
call
and
xchg
out
int
mov
call
mov
xchg
jo
retf
ins
mov
pop
outs
sbb
adc
into
jmp
push
clc
popf
test
shl
mov
inc
fld
repnz
js
loop
test
fidiv
xchg
fs
in
popf
push
cs
std
sti
clc
mov
sub
das
pop
retf
mov
xor
push
mov
mov
dec
jle
add
cs
mov
add
es
mov
cmp
and
pmaddwd
xchg
in
jns
arpl
fstp
dec
and
cs
fcomp
xchg
inc
das
outs
or
movs
in
scas
arpl
inc
aad
xchg
cmp
inc
xchg
xor
leave
fisttp
or
cmc
mov
push
and
xchg
call
dec
push
pop
xor
add
push
jle
aad
mov
scas
lds
cmps
jg
push
sbb
les
int3
cmp
sbb
fnstcw
int
cld
mov
jecxz
rcl
iret
or
inc
and
dec
repnz
int3
jne
sub
sbb
jle
sbb
mov
pop
jns
pop
mov
jns
iret
fiadd
movs
dec
and
fldcw
sbb
adc
in
retf
sub
inc
xchg
sbb
fisub
sbb
popf
push
bound
aad
clc
sub
in
jo
das
jg
add
fsubr
shl
pusha
pop
adc
sbb
icebp
fnstsw
out
hlt
lods
ret
pop
pop
ds
mov
inc
add
retf
mov
inc
aad
and
mov
cmp
sbb
cmp
es
leave
lea
pop
sbb
movs
sbb
cmp
enter
daa
mov
movs
jno
pop
push
int3
movs
sti
stos
arpl
jbe
xor
pop
xchg
loop
dec
das
popa
xor
scas
jecxz
inc
pop
push
addr16
fwait
clc
xor
hlt
scas
fist
mov
and
pop
idiv
mov
xor
je
fdiv
enter
popa
and
inc
jnp
jp
cmc
xchg
in
in
xchg
push
xor
int
int
dec
xor
sbb
or
jbe
cmp
iret
mov
int
popf
pop
popw
bnd
(bad)
pop
inc
push
cmp
mov
push
sar
leave
lea
sub
cmp
sub
sub
mov
pusha
cmp
hlt
mov
mov
xor
jae
or
mov
pop
popa
push
xor
and
shl
push
and
jnp
or
jns
inc
sub
mov
test
cmp
das
cdq
hlt
in
ror
lahf
push
and
cs
fild
inc
mov
lea
jecxz
mov
stos
enter
gs
aam
lea
dec
movs
cmp
jno
enter
pop
mov
int
xchg
inc
dec
inc
xor
lea
pop
rcl
mov
push
jl
aaa
in
out
shl
push
dec
and
aam
sar
cmp
lea
jae
hlt
test
loope
aad
in
es
mov
cli
jp
fisttp
and
xchg
mov
xor
inc
sub
jae
sub
jge
inc
int3
sub
cwde
jmp
jl
dec
addr16
int
mov
cmp
imul
jb
or
and
mov
mov
or
or
ds
stos
loope
(bad)
or
jg
ds
xchg
xchg
retf
xchg
jmp
add
rcl
xlat
mov
sub
outs
push
cmp
ss
sbb
(bad)
fmul
mov
in
into
loope
jmp
outs
jns
cs
inc
and
inc
and
sub
inc
mov
cmp
jmp
pop
cmp
add
and
mov
call
cmp
aas
jg
cs
pop
xchg
aas
jnp
loopne
and
mov
inc
jp
jp
or
and
(bad)
mov
sub
sub
rcr
mov
jb
jmp
mov
mov
push
sbb
rcl
mov
sub
(bad)
int3
mov
pop
sub
sti
rol
mov
xchg
rcl
ret
repnz
mov
mov
(bad)
test
sahf
dec
js
pop
mov
ja
cld
repz
cmp
jnp
enter
clc
enter
pushf
enter
mov
jne
into
adc
clc
in
mov
and
dec
gs
movs
imul
add
movs
div
std
mov
das
repz
inc
mov
mov
mov
loope
pusha
xchg
shr
loopne
leave
adc
sbb
rol
inc
push
into
mul
(bad)
push
mov
outs
mov
pop
lds
mov
xchg
pop
push
cmps
gs
dec
scas
or
pop
cmc
(bad)
mov
call
ror
(bad)
xchg
aad
xchg
mov
fstp
mov
jg
inc
cmp
cmc
mov
push
xor
repnz
adc
add
fdivr
xchg
(bad)
test
popa
fadd
xchg
aam
fldcw
test
sti
stc
lods
sbb
jno
cdq
inc
pop
adc
cmc
push
inc
cmovg
sar
mov
dec
cmp
bound
xchg
imul
and
nop
jmp
int3
add
or
test
push
nop
into
scas
ja
and
mov
jnp
push
jne
push
mov
push
or
mov
cwde
je
or
aas
jle
repnz
mov
and
jbe
adc
(bad)
mov
jge
rcl
xchg
aad
mov
mov
ret
cmps
div
aad
ret
xchg
pop
push
xor
add
ja
push
pop
gs
and
jle
loopne
rol
pop
adc
loope
pushf
pushf
cmp
fwait
mov
inc
fs
ss
data16
rol
pop
adc
add
ror
mov
or
dec
and
sahf
in
adc
int
sbb
adc
hlt
test
in
in
ss
test
push
ds
inc
xor
ror
push
add
inc
and
cli
mov
iret
mov
popf
and
add
scas
jg
xor
add
in
jmp
add
fdivp
test
add
xchg
pop
jnp
dec
mov
cmc
iret
pushf
inc
cdq
jmp
and
out
shr
add
add
cmc
les
adc
fwait
add
add
std
cmps
jne
and
(bad)
shl
xor
call
aaa
mov
and
in
mov
pop
xchg
and
or
xchg
or
pushf
jl
pop
or
in
xor
add
cmc
in
dec
daa
xchg
icebp
repnz
pop
jle
jnp
xchg
mov
test
dec
add
retf
or
push
js
adc
xor
mov
adc
nop
in
and
je
(bad)
mov
pop
jns
pop
inc
pop
data16
cmps
mov
inc
sub
pop
jns
fbld
shl
into
mov
pop
inc
and
adc
xchg
retf
mov
push
dec
test
ins
hlt
add
hlt
jne
cmp
sbb
aam
mov
jno
das
or
ror
loope
ret
mov
pop
pop
sbb
lods
adc
xchg
rcl
inc
(bad)
sti
movs
xlat
daa
(bad)
mov
pop
cdq
out
xchg
xor
dec
faddp
fbstp
inc
nop
sbb
stc
stos
in
jnp
adc
xlat
cmps
(bad)
imul
mov
(bad)
pop
cmp
mov
mov
mov
ret
mov
cs
inc
sahf
repnz
sbb
(bad)
mov
xor
and
ds
int
imul
int
test
cmp
daa
inc
mov
retf
xchg
out
jno
imul
xor
movs
sbb
out
stos
loopne
lahf
(bad)
cmps
mov
imul
sti
adc
jbe
cmp
xchg
mov
adc
mov
scas
sub
shl
and
jb
(bad)
mov
dec
pop
push
lahf
(bad)
mov
dec
je
xor
scas
jne
dec
mov
dec
jmp
retf
mov
sub
in
adc
add
cmp
loopne
cmp
push
or
rol
fs
loope
xlat
or
fisubr
lods
add
in
mov
das
imul
cmp
call
mov
mov
pusha
shufps
push
sub
jl
int
jmp
es
push
pop
fld
daa
inc
mov
inc
pop
stc
movs
sbb
or
pop
mov
xor
adc
ret
(bad)
sub
rol
jmp
nop
jecxz
pop
das
outs
mov
movs
jmp
popa
jae
dec
mov
jle
shl
and
mov
push
adc
into
mov
xchg
xchg
fsubr
ja
push
jmp
ret
and
std
mov
inc
cmp
jmp
ins
inc
or
aas
dec
pop
(bad)
mov
mov
fsubr
aaa
ja
lock
and
inc
mov
mov
sbb
jl
loop
(bad)
ds
ret
mov
sub
in
iret
scas
loopne
jle
cdq
inc
ds
(bad)
mov
inc
sbb
(bad)
mov
pop
test
push
pop
(bad)
sbb
mov
movs
leave
dec
xchg
pop
sbb
pop
dec
das
jg
sub
mov
(bad)
cld
loope
xlat
xchg
dec
cmp
fbld
push
xor
push
aas
jbe
sar
dec
or
or
pop
push
jl
sub
lods
lds
pop
inc
cmp
mov
bound
jo
add
(bad)
scas
jmp
xchg
mov
inc
cmp
pop
mov
int3
data16
pop
sbb
sbb
rcl
jbe
cdq
repz
pushf
cmp
mov
cmp
add
cmp
addr16
pop
cmp
sub
(bad)
fst
jns
or
jmp
add
enter
test
dec
movs
cmp
pusha
sar
std
mov
loop
leave
popf
outs
imul
add
cmps
xchg
daa
fisttp
iret
clc
popf
mov
test
dec
sbb
sbb
loop
dec
cmc
pop
or
mov
test
in
or
mov
cwde
pop
add
jmp
sbb
in
mov
mov
jle
inc
inc
pop
adc
dec
pop
pop
gs
aas
jae
and
clc
mov
aas
push
daa
(bad)
mov
mov
cmp
ret
adc
jl
dec
cmp
push
or
add
push
jbe
push
or
pop
adc
ds
mov
mov
fstp
inc
(bad)
mov
sub
enter
push
push
sbb
ret
push
inc
add
or
pop
loope
dec
push
add
xchg
push
add
cmp
ds
mov
sbb
aaa
in
lods
popa
lea
aad
stc
push
mov
inc
xchg
push
xchg
bound
or
pop
fcom
add
sub
aaa
mul
jmp
xchg
jg
jno
inc
sbb
dec
fiadd
or
push
mov
hlt
and
stc
cmp
dec
and
dec
ret
and
xor
stc
sub
xor
ret
dec
mov
stos
xchg
repz
jl
ror
ror
xchg
jl
jne
arpl
push
adc
pop
neg
inc
mov
jg
jl
push
(bad)
daa
lds
or
pop
test
rcl
xchg
push
outs
lods
xchg
dec
xchg
call
cld
and
xor
or
cs
(bad)
adc
cli
aaa
push
idiv
cmp
and
cdq
mov
clc
pop
mov
loopne
mov
fs
mov
int3
jno
outs
mov
mov
add
ins
mov
scas
popa
inc
adc
pop
fimul
mov
fs
inc
fstp
gs
xor
pop
mov
shl
mov
cmp
cmp
das
push
out
adc
out
call
or
push
adc
inc
stos
jo
xor
cmp
and
mul
push
pop
rol
in
sub
pusha
ror
xor
aas
or
dec
stos
jl
inc
mov
jmp
sbb
sub
sub
sub
push
dec
stos
popa
mov
lods
xchg
mov
add
les
adc
xor
cmp
clc
dec
std
daa
xor
lods
lahf
jp
mov
sbb
dec
mov
or
pop
cmps
pusha
adc
adc
cmp
das
in
pop
shl
loope
xchg
add
pop
scas
jo
sbb
xor
sub
xor
sub
sub
cld
das
add
adc
out
jae
xchg
inc
and
out
(bad)
jbe
imul
mov
dec
adc
aaa
adc
pop
mov
js
jl
and
pop
stos
stos
xchg
ins
fidiv
dec
lods
xchg
inc
lds
xchg
ins
fimul
lock
stc
dec
cmps
je
or
xor
push
and
jmp
(bad)
je
pop
mov
jle
xchg
inc
les
and
(bad)
pop
(bad)
daa
add
in
inc
mov
test
cmc
push
add
pop
pop
loope
int3
push
lock
mov
cmp
cmp
int
fnstcw
cmps
data16
mov
arpl
enter
xchg
xchg
arpl
mov
mov
es
dec
ret
stc
ss
stc
push
sbb
mov
pusha
(bad)
fwait
xchg
jns
lea
popa
or
ret
add
jmp
and
in
daa
stc
das
std
push
mov
test
add
int3
(bad)
(bad)
sahf
inc
sar
cmp
ss
(bad)
pop
cmps
ja
je
jmp
xor
pop
(bad)
clc
push
pop
test
xchg
xchg
imul
icebp
mov
pusha
enter
es
adc
sub
pop
cmc
cmps
mov
xchg
pop
scas
dec
retf
add
xchg
jg
and
cmp
and
jl
mov
xchg
xchg
dec
adc
sbb
popa
lods
call
ss
das
stc
sub
je
lahf
(bad)
pushf
dec
cmps
mov
mov
mov
jne
xchg
int3
pop
mov
bound
bound
loope
mov
pusha
iret
inc
cmp
xor
or
inc
mov
inc
aad
repnz
test
ins
enter
sbb
bound
inc
mov
mov
ja
mov
sbb
das
adc
ret
xor
pop
xor
fist
cmp
pop
pop
push
stc
or
cmp
arpl
jge
inc
cmps
mov
add
cmp
mov
xchg
pop
into
aas
or
adc
push
mov
and
jl
ja
jno
xor
pop
stos
outs
mov
xchg
aam
mov
mov
sar
jle
es
dec
lods
popf
xchg
dec
mov
cmp
in
mov
lods
addr16
push
fldenv
inc
mov
or
les
lahf
popa
mov
cmc
and
add
push
mov
push
std
and
rcl
popf
je
mov
aas
in
repz
pushf
popf
ins
fstp
call
and
dec
mov
adc
out
cmp
adc
add
pop
push
jmp
data16
pop
iret
ds
dec
mov
inc
shr
jle
xchg
xchg
ret
sub
mov
cmp
mov
mov
shr
jg
rcr
mov
mov
adc
push
std
inc
mov
pop
xlat
cmp
(bad)
cmp
adc
nop
xchg
(bad)
push
fadd
test
mov
inc
cmc
aas
in
leave
dec
mov
jns
add
ds
adc
or
jae
imul
dec
in
push
test
push
test
inc
test
cdq
jns
push
or
cmovo
call
hlt
cmp
jmp
xchg
inc
cmps
mov
mov
inc
(bad)
enter
(bad)
xor
mov
fisubr
pop
cmp
(bad)
das
loop
mov
xchg
adc
adc
pop
jecxz
cld
cmps
outs
fst
adc
in
dec
mov
cmp
cmp
xor
daa
adc
jge
jae
popa
aam
or
daa
out
xor
out
cld
xor
pop
ret
imul
sbb
push
in
mov
into
sub
test
jle
push
pop
(bad)
jnp
jns
mov
enter
int3
push
lea
push
and
sbb
xchg
ja
aas
cmc
add
adc
scas
lahf
imul
push
jg
and
and
pop
pop
mov
fistp
jmp
sbb
push
test
push
aam
mov
jp
jg
jl
cs
das
in
push
sbb
test
mov
xchg
inc
add
adc
mov
lods
fwait
leave
xor
and
outs
fdiv
outs
fbld
cmc
and
dec
mov
dec
test
lahf
jne
xor
fld
outs
test
add
push
mov
dec
clc
push
mov
xchg
ror
inc
aam
out
push
stos
fisubr
aas
jmp
xor
sub
daa
adc
cmc
inc
mov
not
xchg
data16
cmp
jbe
pop
mov
iret
pop
sbb
not
lea
call
out
sbb
lahf
cdq
dec
mov
push
lds
push
mov
sbb
je
and
cmp
dec
or
(bad)
es
test
mov
sbb
push
add
sub
fist
psubq
sbb
call
xchg
sub
in
(bad)
push
mov
lods
jnp
inc
lods
pushf
jno
es
adc
push
fld
or
cmc
pop
mov
ins
cmc
push
ret
xor
mov
hlt
push
sti
and
sbb
es
cmp
dec
mov
pop
mov
jns
test
xchg
bound
push
or
push
movs
(bad)
xchg
sub
inc
xor
in
push
ret
dec
fidiv
lock
or
jmp
shl
out
lahf
xchg
nop
jle
xchg
xchg
inc
movs
xchg
addr16
sub
add
mul
in
ja
jae
ret
dec
test
dec
sar
loopne
pop
clc
dec
scas
xchg
or
neg
popa
mov
js
mov
leave
cs
or
dec
mov
xor
xor
(bad)
jg
pushf
mov
mov
mov
ret
mov
and
out
sub
stos
inc
ret
xor
adc
add
pop
ror
repnz
(bad)
fisttp
cld
cmp
push
rcl
fistp
cwde
mov
and
mov
imul
pop
sbb
out
mov
mov
retf
pop
xchg
mov
std
mov
inc
shl
ins
mov
push
adc
jb
dec
mov
rcr
pusha
mov
out
test
ins
lods
mov
jg
inc
into
sub
add
stos
inc
lods
dec
mov
inc
test
addr16
push
cli
xor
mov
ja
cmp
dec
fld
jmp
jmp
sar
and
pop
sbb
pop
mov
xor
ss
pop
test
mov
lock
mov
scas
div
sbb
loop
rol
or
xor
js
and
retf
rol
jmp
fild
inc
fisubr
sbb
dec
leave
sub
sbb
cli
mov
sbb
cwde
xchg
jl
data16
xchg
fimul
dec
std
jp
lahf
inc
mov
mov
ret
call
push
xor
loopne
in
pop
mov
cdq
pushf
jge
xor
sub
shr
sbb
sub
add
pop
scas
outs
lea
sub
js
dec
mov
or
push
mov
sbb
lock
inc
mov
add
scas
js
add
sub
stc
pop
retf
repnz
popa
shr
sbb
into
aas
and
add
cmp
mov
xchg
push
mov
cmps
cwde
dec
test
push
js
addr16
fs
jne
mov
add
push
add
(bad)
and
out
or
cmp
repnz
rcr
inc
mov
retf
and
ret
pop
mov
mov
in
cmp
loop
popf
pusha
mov
test
stos
outs
sbb
popf
jl
outs
test
pusha
test
int
(bad)
push
push
loop
scas
imul
fld
in
push
fadd
adc
in
push
fsub
popa
aad
rcl
ret
sub
fs
mov
inc
mov
cmps
ja
inc
mov
push
ret
push
mov
arpl
and
push
pop
jmp
sar
(bad)
push
mov
mov
add
adc
dec
mov
mov
out
sub
or
popf
cdq
cdq
jp
xchg
outs
jmp
iret
and
jmp
nop
xchg
pusha
test
int
(bad)
push
aad
lock
retf
pminsw
add
outs
sar
ret
ss
xor
leave
movs
mov
sar
ret
stos
mov
jge
sti
dec
sub
aaa
jmp
in
test
cmp
ret
and
in
test
ret
push
xlat
xor
out
xor
pop
mov
push
(bad)
popa
(bad)
xor
das
pop
sbb
push
xor
jle
xor
ds
pop
fldcw
xchg
mov
arpl
cmp
dec
ficom
outs
fstp
loopne
mov
mov
jp
cs
das
pop
(bad)
pop
movs
scas
data16
ins
retf
pop
xchg
scas
imul
in
in
lea
nop
sahf
mov
mov
lods
lea
inc
rcl
in
fldcw
xor
pushf
out
imul
rcl
inc
(bad)
mov
into
cdq
jle
mov
inc
stos
push
mov
shr
push
repnz
cmp
sbb
add
pop
(bad)
cmp
les
out
in
scas
mov
ss
dec
loop
aad
and
and
mul
repz
or
rcl
mov
push
mov
jle
push
pop
cmp
and
(bad)
xor
jp
lods
out
push
ret
jecxz
in
push
mov
adc
inc
adc
cdq
jns
inc
fadd
loopne
stos
cdq
mov
rol
cdq
lea
test
iret
cmp
ss
scas
jg
(bad)
add
das
adc
or
out
dec
rcr
add
test
ja
xor
cs
cmp
sbb
pop
mov
scas
in
inc
shr
test
loop
loopne
mov
push
mov
clc
aaa
sbb
pop
sbb
jmp
rcr
pusha
movs
movs
leavew
pop
lea
cmps
xchg
data16
shr
cmp
cmp
std
cmp
(bad)
cmp
dec
fidivr
retf
cmp
ret
popf
jo
outs
mov
xlat
or
clc
push
adc
mov
jmp
jbe
xchg
dec
mov
push
hlt
pop
fistp
sahf
outs
movs
test
bound
jns
pop
test
shr
or
in
cmp
test
dec
mov
pushf
dec
psubb
pop
test
xor
mov
cmps
fcom
pusha
scas
jbe
add
lock
(bad)
jo
aas
out
repz
fmul
xchg
pusha
mov
mov
fnsave
push
retf
je
sahf
inc
int
pop
jmp
push
shl
loopne
movs
arpl
cs
add
adc
add
cmc
sub
out
dec
mov
cmp
inc
aad
std
inc
mov
fwait
jne
(bad)
push
mov
int
xchg
jl
push
scas
push
mov
add
shl
cs
jnp
xchg
inc
mov
mov
and
cdq
ror
ds
dec
mov
lds
cwde
jg
ins
sub
cli
xor
pop
xchg
(bad)
mov
call
push
and
adc
and
mov
dec
mov
and
lock
leave
cs
lea
dec
test
out
(bad)
xlat
and
jns
pop
fdivr
popa
sub
mov
(bad)
push
add
sbb
push
lea
push
pop
xchg
(bad)
xlat
sub
cmc
mov
fnstsw
out
int
mov
ja
push
adc
cs
xchg
jge
aaa
icebp
push
les
imul
sbb
xor
pop
mov
pop
stos
nop
push
ret
push
mov
add
out
push
aad
mov
inc
cmp
xor
and
arpl
aas
into
cmp
mov
mov
scas
mov
xor
scas
lea
cmps
inc
mov
adc
(bad)
pop
or
xchg
sahf
inc
fstp
dec
fisttp
jl
outs
(bad)
jle
adc
or
(bad)
and
or
(bad)
sub
add
pop
fcomp
push
mov
xor
inc
mov
lea
sbb
pop
mov
nop
mov
aas
out
call
pop
mov
mov
scas
fadd
push
repnz
shl
ds
sub
push
xor
mov
pop
fild
inc
ror
adc
jo
jl
or
loop
loopne
cld
mov
push
ret
cmp
sub
movs
jae
xchg
push
push
push
sti
mov
arpl
jae
outs
aad
adc
repnz
dec
leave
sub
lock
aad
(bad)
and
adc
aaa
pop
adc
xor
sbb
cs
pop
mov
dec
lea
mov
iret
xor
cmp
outs
mov
inc
movs
xchg
ja
sahf
sahf
(bad)
jle
pop
fs
pmuludq
dec
ficom
in
imul
sbb
mov
xchg
dec
xchg
jns
jb
rcr
jae
xchg
inc
test
ss
sub
add
dec
xchg
add
les
sbb
and
or
pop
cld
dec
stos
call
aaa
clc
push
aam
into
add
ror
pop
iret
test
sbb
daa
adc
add
sub
cmc
xor
movs
stos
outs
lea
sub
sbb
dec
mov
and
ret
popf
push
or
mov
lahf
cdq
inc
mov
or
cmps
sub
pmaxsw
ret
jno
push
mov
jle
pop
mov
ret
jb
pop
cmps
popa
shl
or
or
aas
addr16
lods
imul
sbb
cmp
cmp
inc
stos
pushf
inc
movs
jae
je
xor
push
mov
jo
xchg
inc
aam
cmp
es
add
lods
mov
pop
xchg
js
outs
fcom
ins
(bad)
and
pop
mov
jg
jge
bswap
push
xor
idiv
adc
in
test
bnd
cwde
imul
mov
sar
cmp
out
cmp
xor
pop
xchg
nop
pusha
fcom
adc
hlt
daa
push
jp
aas
adc
(bad)
jbe
lea
dec
retf
es
mov
xchg
xor
repz
xchg
out
out
pop
mov
aad
jmp
jmp
repz
mov
lock
fbstp
loopne
rol
push
out
dec
test
imul
pop
adc
pop
movs
lahf
dec
movs
je
stos
nop
popa
and
cmp
ret
add
dec
fild
out
mov
xchg
imul
xchg
jnp
and
pop
mov
jns
call
je
push
pop
lods
push
mov
sub
leave
cmp
retf
push
xchg
mov
fisttp
out
cmp
dec
into
sub
sbb
cld
cmp
xor
sub
push
lods
xchg
bound
fwait
outs
fimul
out
push
test
adc
push
test
ins
clc
cmp
add
js
jo
dec
mov
sbb
inc
enter
push
lods
inc
add
hlt
adc
push
out
add
cmp
retf
xor
cs
push
clc
mov
cmc
das
out
in
in
fcom
sbb
xor
and
in
adc
jecxz
movs
lahf
inc
nop
clc
inc
ret
and
ds
add
cmc
push
movs
(bad)
fbstp
xchg
fwait
dec
adc
pop
dec
imul
mov
aam
sar
sbb
sub
jmp
call
gs
dec
movs
xchg
dec
test
pushf
fwait
inc
movs
outs
sub
in
push
sbb
xor
xor
ret
add
pop
mov
lods
fwait
jb
pop
test
or
inc
jmp
xchg
fmul
pop
(bad)
and
ins
int3
outs
(bad)
icebp
add
out
sub
push
imul
in
leave
add
push
fld
pop
in
xlat
and
retf
bound
mov
mov
arpl
pop
mov
neg
jp
pusha
fcomp
xor
dec
fnstcw
loopne
or
add
movs
popf
xchg
dec
mov
movs
lea
pop
ret
stc
and
xor
fidiv
loope
and
hlt
inc
test
test
je
cs
pop
test
inc
mov
shr
mov
or
cld
ss
imul
cdq
inc
and
dec
fild
sbb
loop
mov
cmp
pop
mov
dec
scas
mov
sbb
and
cmp
xor
inc
repnz
jecxz
sahf
fwait
ins
int3
or
and
repz
pop
and
push
stos
jne
xchg
bound
sub
inc
mov
jne
xchg
inc
mov
not
jns
jne
xchg
ja
aaa
adc
ret
pusha
movs
xor
out
and
in
scas
fwait
inc
xlat
inc
add
add
push
sbb
xor
ds
(bad)
jnp
pop
mov
mov
mov
sar
(bad)
push
adc
mov
mov
or
xor
push
int
sbb
sub
and
push
fcom
fwait
mov
inc
aam
loope
lock
mov
fnstcw
push
mov
cmps
xchg
movs
xchg
jle
mov
jle
pop
mov
ins
push
call
mov
test
rcr
outs
movs
out
movs
jb
outs
enter
pop
cmps
jno
inc
mov
mov
push
in
push
add
test
pop
mov
ins
shl
aad
loopne
call
mov
xchg
jo
(bad)
push
mov
mov
popa
aam
push
scas
ins
mov
cmp
cmc
not
nop
jns
(bad)
enter
sbb
adc
(bad)
lahf
xchg
jne
arpl
push
in
cmp
or
pop
scas
jg
or
out
mov
and
and
xor
pop
mul
sbb
or
adc
and
and
sbb
ret
cmp
mov
fisttp
leave
pop
movs
cwde
fwait
inc
mov
pushf
jno
pop
clc
and
retf
push
int3
cmp
outs
mov
gs
jge
or
fwait
jns
jne
sbb
je
dec
mov
mov
jb
rol
cld
or
int3
push
sar
pop
mov
out
push
mov
jl
fs
pop
movs
jle
in
and
pop
loopne
ficom
pop
lds
out
mov
fisttp
jmp
lock
or
sub
out
jno
xor
pop
xchg
movs
xchg
jno
enter
and
sti
push
mov
jae
shl
cmp
dec
mov
pop
out
loopne
sti
ss
dec
mov
dec
leave
xor
imul
inc
xchg
add
test
dec
mov
test
cmp
push
int3
cmp
out
adc
and
jl
cmp
adc
xchg
dec
sar
cdq
xchg
pusha
mov
outs
cmp
cmp
pop
ficomp
xchg
arpl
or
jecxz
jmp
in
outs
fnstcw
retf
xor
cmp
or
mov
jbe
mov
pop
mov
les
dec
int
loope
jae
and
push
add
pop
add
xchg
push
add
mov
xchg
cmc
jbe
inc
sub
inc
in
or
sub
dec
scas
std
mov
fdiv
xor
ret
xchg
rol
mov
ss
jp
adc
adc
cmc
xchg
arpl
pushf
cli
mov
rcr
leave
es
dec
sub
dec
pop
fs
jae
pusha
and
outs
out
sub
jbe
push
xor
sbb
jbe
inc
add
movs
inc
or
jg
(bad)
pop
sbb
mov
and
cmp
nop
fistp
jg
mov
push
aas
push
adc
inc
add
out
enter
inc
leave
pushf
(bad)
test
xchg
lea
push
or
pop
cmp
push
xchg
sahf
stc
stos
cmc
cmp
mov
lds
lods
in
add
inc
or
popa
cmp
push
ss
xlat
mov
test
mov
push
not
cdq
sti
mov
or
adc
pop
sbb
inc
adc
sbb
push
adc
mov
mov
mov
aas
arpl
js
test
dec
repnz
jmp
sbb
stc
mov
imul
push
dec
sub
outs
stc
mov
test
mov
mov
lods
in
add
add
(bad)
mov
arpl
mov
in
cmp
inc
sbb
add
push
out
imul
dec
pop
fs
ins
sub
arpl
sub
dec
sbb
push
push
and
mov
rcl
cmp
push
sbb
sbb
sahf
movs
out
mov
cdq
mov
stos
ret
outs
ror
and
push
adc
push
das
pop
aad
shr
mov
cs
adc
cmc
call
jns
test
mov
jg
jne
ins
sbb
add
xor
in
stos
push
mov
cwde
jno
mov
ds
and
xchg
shl
pop
adc
inc
jecxz
repz
stos
int3
xchg
xor
jl
pop
lds
out
lds
rcl
loope
xor
popa
repz
push
inc
add
lds
mov
xor
jp
push
std
mov
mov
test
test
stos
test
mov
test
fnsave
pop
cmp
mov
xchg
lock
movs
jecxz
aam
cmc
mov
popa
lock
loop
jns
js
cmp
mov
out
lods
mov
fwait
leave
mov
pop
push
test
retf
mov
mov
add
sti
out
lods
fiadd
pushf
push
stc
xchg
sbb
(bad)
into
stos
mov
mov
addr16
pop
jg
in
mov
(bad)
leave
stos
in
cmp
ins
or
xchg
repnz
pop
arpl
jo
stos
movs
cld
test
add
popa
pop
push
movs
shl
adc
mov
aad
ds
bound
mov
jae
jb
test
sahf
sbb
ins
xor
ss
pop
xor
push
sar
pop
out
jae
inc
movs
(bad)
xchg
out
std
scas
in
mov
or
pop
(bad)
stos
fild
cmp
jae
inc
sbb
jecxz
lods
shl
stc
xchg
test
xchg
sbb
pop
in
mov
mov
hlt
mov
push
cmp
repz
aad
aam
and
adc
inc
and
jns
mov
xchg
in
mov
ins
arpl
retf
stos
gs
int3
lahf
mov
les
push
push
cmp
in
sahf
(bad)
push
jl
pop
add
aas
pop
cmp
sub
ret
call
mov
pushf
clc
mov
inc
sub
xor
sub
mov
dec
add
jo
jl
cmps
loope
sti
inc
xor
and
rol
loope
les
push
out
shl
outs
sub
jb
push
cmp
add
dec
adc
iret
ret
xchg
test
hlt
mov
and
inc
sub
inc
ds
lds
daa
inc
mov
shl
jmp
ror
inc
sbb
inc
xor
jne
push
add
and
mov
and
(bad)
mov
add
jns
pop
sbb
sub
cmp
and
cmp
push
adc
mov
scas
ret
sub
mov
jg
push
call
xchg
lods
(bad)
xor
dec
es
cmp
jecxz
call
adc
jbe
sub
lahf
repz
test
pop
aas
dec
push
pop
das
ins
sbb
mov
dec
or
cmp
dec
or
in
test
sub
ins
cmp
add
daa
inc
and
sub
jns
mov
jg
push
mov
fwait
xchg
shl
mov
into
nop
jecxz
xchg
lock
mov
outs
or
or
xchg
xlat
movs
pop
lds
fistp
jle
jae
fisub
aam
push
adc
xchg
retf
fisttp
xor
adc
ja
push
push
sbb
pop
mul
jecxz
fiadd
aaa
pop
sbb
jl
pop
push
pop
xor
out
cmp
cli
mov
and
out
(bad)
(bad)
inc
cmp
sub
jae
movs
cld
xchg
sub
jae
jno
loope
or
or
mov
ret
mov
xchg
sar
js
cmp
cmp
test
gs
clc
cwde
cmps
scas
dec
push
nop
(bad)
push
(bad)
iret
lods
iret
sub
inc
arpl
dec
or
xor
sub
mov
test
mov
iret
mov
leave
xchg
fdiv
jbe
jge
push
outs
mov
rol
inc
das
pop
out
sbb
push
pop
mov
mov
dec
xor
nop
xlat
popf
(bad)
popf
cmps
iret
mov
dec
push
jne
pop
sub
xchg
rol
push
or
mov
fild
popa
add
imul
dec
cmp
jl
ins
cmp
inc
sub
andnps
(bad)
mov
scas
ret
ss
push
jb
dec
loop
(bad)
xchg
lds
repz
and
adc
inc
outs
test
xlat
inc
ss
sti
mov
loop
jecxz
sub
pop
arpl
push
sub
cmp
dec
xchg
into
jae
jb
sub
xchg
lds
inc
fs
mov
mov
or
xor
fdiv
(bad)
es
add
ja
ss
cmp
idiv
dec
push
jns
xor
int
add
add
push
(bad)
fld
outs
add
and
clc
mov
sahf
push
aam
daa
jns
push
xchg
(bad)
div
or
imul
int3
push
cmp
jne
add
aad
fistp
repnz
call
jge
dec
sbb
mov
cmp
or
mov
add
jo
push
in
scas
jecxz
dec
mov
inc
xor
cmp
sbb
xor
lods
jmp
scas
push
or
scas
cld
mov
push
or
imul
or
(bad)
push
sbb
xor
push
push
js
ins
sub
xor
push
dec
ficomp
ins
xlat
test
mov
outs
out
mov
jno
push
adc
dec
repnz
arpl
inc
sbb
dec
cmp
test
(bad)
jg
mov
fs
movs
out
mov
in
leave
inc
ins
or
xor
je
xor
fldcw
pushf
fadd
pop
or
ins
and
dec
scas
rcr
jp
push
jp
push
xor
sub
dec
or
mov
cmp
js
inc
pop
xor
sub
mov
mov
in
mov
mov
lods
fcomp
mov
xchg
pop
cli
gs
add
or
sbb
inc
in
jbe
imul
loopne
movs
out
lods
cld
mov
mov
dec
or
sbb
mov
adc
call
test
stos
mov
imul
pop
push
(bad)
fwait
mov
aad
leave
stos
repnz
les
enter
aas
pop
push
pop
adc
mov
adc
or
pop
adc
dec
adc
xor
dec
push
es
lds
add
push
add
das
sub
mov
shl
xor
repz
gs
scas
in
lds
cmp
cmp
sbb
jge
popa
add
dec
sub
cmp
or
sahf
int3
mov
or
cld
lahf
std
mov
fld
dec
push
mov
pushf
cmc
jb
shl
leave
mov
test
lock
lods
dec
or
outs
sub
pop
in
arpl
es
mov
mov
cli
cmp
ds
push
in
aad
sub
jno
jp
cmp
mov
adc
data16
xchg
mov
sub
cmp
loop
shr
cmp
sbb
dec
es
in
retf
sub
ds
adc
std
lahf
fstp
fmul
iret
xchg
sar
xchg
fcomp
popf
ins
fsubrp
mov
sahf
(bad)
pop
sbb
movs
div
mov
mov
jae
loop
rol
xchg
cli
mov
leave
mov
or
dec
add
in
call
adc
push
jo
push
loop
sar
pop
int3
jns
out
pop
add
aaa
cmovnp
and
jle
inc
adc
push
sbb
pop
pop
adc
movs
idiv
std
mov
mov
or
pop
inc
ss
push
out
aam
jmp
out
scas
lea
pop
or
or
call
and
push
out
scas
shl
push
jmp
lock
jae
inc
rcr
or
push
dec
or
fstp
outs
in
lods
xchg
(bad)
mov
mov
add
mov
lock
or
jne
pop
xor
dec
cmp
lds
test
dec
mov
and
and
sub
inc
sbb
dec
or
or
cmp
xor
ja
test
mov
cld
xchg
mov
rol
test
add
inc
ror
imul
adc
jle
mov
cmovnp
pop
or
push
stc
sub
aaa
or
daa
js
jne
or
hlt
mov
movs
test
mov
test
xchg
xor
(bad)
pushf
fnsave
sahf
ror
pop
and
outs
sbb
and
jl
push
fidivr
dec
cmp
aas
pop
push
int3
mov
and
or
repnz
jp
jbe
dec
les
push
jp
dec
jecxz
or
push
jp
xor
mov
ja
fs
gs
adc
jns
lods
lock
int3
stos
loop
les
mov
pusha
cmps
ret
test
(bad)
call
mov
inc
cmp
pop
lds
push
call
xchg
mov
imul
mov
lods
leave
cmp
imul
pop
or
mov
pushf
sbb
ss
int3
retf
xchg
hlt
pushf
mov
xchg
xlat
xchg
and
sbb
cdq
(bad)
xchg
cmps
ror
repz
fnstsw
inc
xor
aaa
inc
jmp
pusha
and
sbb
cmp
inc
cmp
repnz
mov
mov
cwde
ret
xor
je
push
loope
js
dec
ret
jbe
xchg
fidiv
jns
push
(bad)
mov
fdivr
adc
(bad)
movs
ds
je
and
adc
jmp
xchg
xchg
pop
jge
ins
or
adc
dec
or
dec
adc
in
mov
jge
mov
ja
push
mov
ret
sahf
lock
cmp
pop
jp
jnp
jl
dec
adc
repnz
call
adc
inc
adc
mov
mov
stos
mov
and
push
sbb
test
test
outs
sub
xor
scas
iret
sub
cmps
fwait
(bad)
xchg
(bad)
xchg
mov
arpl
js
bound
cmp
mov
cmps
mov
shl
dec
jmp
push
cmp
fimul
jmp
xchg
mov
jnp
push
outs
and
and
adc
ja
cwde
fcom
or
cmp
adc
imul
xor
adc
cmp
outs
sub
jae
inc
sbb
ins
cs
add
fild
in
inc
or
iret
lahf
cmps
push
pop
je
jne
imul
cs
inc
mov
sahf
std
pop
and
adc
cmp
(bad)
in
mov
xchg
pop
sbb
aam
leave
mov
pop
add
lahf
test
mov
push
sbb
fistp
pop
add
push
adc
lds
or
jl
aam
mov
ins
xor
push
or
sub
stc
cli
mov
sbb
pop
stc
xor
es
sbb
sbb
dec
or
pop
in
aam
fstp
arpl
pop
out
xchg
adc
adc
add
pop
sbb
sub
(bad)
and
add
cli
jnp
mov
nop
aad
fist
push
adc
adc
xor
add
push
outs
or
dec
or
das
outs
sbb
repnz
sbb
push
mov
mov
mov
jne
repnz
jle
(bad)
retf
xlat
cwde
mov
in
scas
mov
stos
mov
cmp
and
cmps
mov
pushf
scas
out
(bad)
in
stos
(bad)
gs
dec
or
pop
sub
xchg
inc
fistp
sbb
dec
sub
mov
mov
sbb
fbstp
bswap
lock
pop
or
test
inc
pop
jnp
or
(bad)
mov
mov
mov
ins
das
dec
xor
adc
jmp
fld
jbe
shl
test
ins
pusha
and
cmp
lahf
outs
sub
inc
or
jge
ss
jnp
or
sub
dec
dec
pop
inc
cmp
mov
addr16
mov
hlt
xchg
(bad)
jmp
sub
add
inc
or
je
push
xchg
cdq
les
std
movs
sar
(bad)
mov
into
mov
sbb
jno
mov
frstor
pop
pop
jbe
jno
mov
cmps
retf
xchg
mov
inc
les
in
mov
pop
adc
lods
inc
mov
mov
stos
test
es
outs
sub
ds
jmp
cmp
jge
pop
xor
push
fs
shr
sub
push
in
pop
cwde
dec
or
mov
cmp
and
sbb
push
scas
in
ds
adc
dec
push
jl
push
scas
icebp
push
inc
mov
nop
shl
sbb
xchg
xlat
mov
das
hlt
xchg
aad
mov
cmp
mov
xlat
mov
js
fist
and
jle
pop
sub
daa
push
adc
mov
fwait
outs
xor
(bad)
sar
xchg
hlt
mov
cmp
xchg
xchg
shl
pop
cmp
es
scas
in
in
mov
xor
push
pop
dec
repnz
jg
or
arpl
sbb
mov
js
push
and
out
fist
fbstp
jg
inc
or
jp
sbb
retf
mov
scas
jmp
clc
mov
mov
jmp
adc
add
push
adc
fild
sub
mov
push
cmp
cs
or
mov
jge
jnp
pop
adc
and
loope
clc
mov
push
xor
test
sub
(bad)
mov
jmp
adc
cdq
lods
mov
mov
out
(bad)
retf
mov
nop
xchg
ror
xor
xor
adc
jp
jne
push
adc
xor
pop
sub
pop
sbb
jne
ins
cmps
in
fisttp
mov
sub
dec
mov
ins
xor
sbb
stos
(bad)
pushf
aad
out
mov
and
xor
push
adc
cmps
jecxz
mov
scas
(bad)
call
sub
mov
mov
ja
adc
push
mov
test
xchg
loope
fidivr
cdq
aam
icebp
mov
and
mov
or
push
or
push
push
xor
fwait
cmps
std
cdq
movs
int3
scas
iret
xchg
mov
dec
mov
ins
xor
mov
icebp
stos
icebp
xchg
(bad)
jns
mov
scas
rcl
arpl
pop
out
xchg
fstp
sub
test
dec
and
mov
(bad)
pushf
mov
xchg
mov
and
push
xor
fidiv
test
test
daa
test
pop
add
xor
pop
lods
cmps
ror
jmp
cmps
inc
and
fstp
bound
xchg
loopne
pop
dec
or
je
adc
ins
or
push
xor
sti
mov
xchg
mov
pop
cmps
jecxz
leave
mov
shl
mov
imul
pop
push
push
xor
mov
fs
inc
sub
or
or
add
aas
cs
push
pop
adc
jns
ret
ins
lods
into
mov
mov
cmp
fild
pusha
es
mov
js
pop
pushf
(bad)
adc
push
pop
xor
cmp
sub
adc
movs
mov
test
lea
enter
(bad)
adc
dec
sub
jmp
sbb
push
push
add
out
stos
jmp
test
(bad)
retf
xchg
shl
xchg
(bad)
movs
pop
sbb
sbb
xlat
xchg
xrelease
ja
and
push
push
cli
mov
and
adc
jmp
hlt
outs
sbb
cmps
rcl
add
pop
cwde
ret
mov
inc
or
aad
in
fimul
add
js
das
pop
inc
pop
push
adc
arpl
jo
jmp
and
pop
adc
jae
scas
sti
mov
lock
(bad)
cmp
jg
outs
repz
mov
into
into
xchg
fidivr
dec
sbb
ss
daa
push
inc
cwde
fild
mov
jae
push
and
pop
dec
in
scas
rcl
push
cmps
retf
mov
push
ficomp
jecxz
enter
es
sub
push
jmp
xlat
add
(bad)
xlat
mov
loope
loop
outs
pop
imul
add
jo
jae
jnp
pop
or
clc
call
js
pop
scas
cmp
jle
in
ret
fldcw
sbb
cmp
inc
xor
push
cmps
aad
enter
icebp
pusha
mov
loop
mov
xchg
push
leave
mov
scas
out
xchg
inc
out
mov
shl
jo
push
pop
sub
xor
pop
or
inc
and
xor
in
into
jle
inc
or
push
cmp
add
push
in
sub
ins
pop
dec
or
icebp
mov
lods
aad
leave
xchg
repz
test
xchg
inc
stos
movs
out
fnsave
jo
adc
mov
add
fidivr
stos
fmul
fidiv
add
in
cmp
mov
xchg
mov
jg
add
imul
mov
mov
popf
shl
push
dec
jmp
stos
scas
in
test
outs
aas
sub
mov
mov
xor
fdiv
adc
jnp
dec
out
test
dec
loop
cmp
adc
jno
dec
sbb
inc
mov
sub
push
imul
mov
push
sub
sub
sbb
and
push
lahf
cli
test
xor
or
adc
div
lods
ror
adc
push
cmp
jnp
push
jg
push
dec
or
cdq
sar
inc
adc
ins
push
push
adc
adc
js
ja
mov
dec
sub
cmp
cmp
mov
push
and
dec
push
inc
cmc
xchg
in
xchg
xchg
retf
test
rol
mov
(bad)
cmps
jecxz
(bad)
call
mov
shr
(bad)
shl
jge
pop
out
movs
xchg
call
int
pushf
in
stos
std
jae
pop
adc
adc
jecxz
and
stc
gs
sti
and
jg
jae
aas
ins
adc
xor
add
dec
add
jbe
adc
dec
add
fs
out
(bad)
out
test
pop
xchg
loope
fisttp
push
aas
jl
dec
fist
add
das
ror
mov
pop
jmp
add
jg
push
xchg
mov
sbb
lods
mov
fwait
push
ds
mov
inc
hlt
mov
test
push
pop
ins
cmp
out
mov
sub
(bad)
test
test
mov
retf
mov
sbb
bswap
cmp
in
xchg
ficomp
push
inc
add
(bad)
data16
push
loop
mov
nop
fisttp
jp
enter
rcr
xchg
push
pop
add
test
and
pop
jmp
pushf
shr
and
fadd
xchg
jle
mov
mov
sti
jmp
test
pop
push
or
pop
adc
pop
in
sbb
jno
loop
and
push
in
dec
sbb
push
or
xchg
rcr
pop
nop
adc
cmp
int
test
arpl
push
add
inc
add
and
mov
pushf
pop
or
repz
out
cmp
es
lods
pop
and
pop
rcl
and
shl
arpl
inc
mov
les
adc
and
xor
adc
sub
adc
aad
mov
out
jl
das
sti
jge
dec
mov
arpl
mov
xchg
aad
repz
add
add
cmps
fdiv
mov
mov
imul
fist
sbb
iret
mov
popf
fsub
sub
dec
jmp
fisub
push
dec
or
out
imul
push
sbb
les
sbb
jmp
sahf
jmp
rol
sti
imul
jmp
mov
xor
sub
jmp
mov
ds
loopne
fisubr
lahf
rol
addr16
hlt
mov
adc
pop
cwde
test
xchg
xlat
adc
cmp
pop
repz
(bad)
mov
xchg
ja
jmp
je
push
xchg
iret
call
add
cmp
push
loope
stos
mov
sbb
pop
pop
jmp
pushf
int3
pusha
or
test
test
cwde
pop
jge
lods
lods
je
fsub
aad
adc
hlt
jg
pop
mov
ret
mov
test
mov
cmc
mov
dec
or
sahf
sub
out
ja
sub
add
xchg
mov
test
out
add
(bad)
xchg
retf
inc
cmp
stos
into
sub
nop
fstp
or
or
cmp
out
xchg
ret
ins
aaa
inc
cmp
xchg
aam
lds
bound
dec
adc
ins
xor
inc
adc
mov
and
sub
rcr
ss
inc
adc
imul
out
test
data16
repnz
pop
loop
in
sbb
adc
inc
out
mov
imul
adc
fdivr
xor
les
lds
mov
adc
(bad)
loopne
call
nop
test
xchg
mov
pusha
add
call
in
adc
jns
and
call
sbb
ror
test
cmp
cmp
enter
mov
mov
or
inc
add
test
fisub
push
push
xchg
stc
mov
xchg
fild
mov
sub
in
mov
shl
ret
lock
jp
popa
mov
stc
lods
ficomp
sub
xor
popa
mov
xor
test
mov
cwde
cmps
repnz
fisub
in
popf
dec
cmp
add
popf
(bad)
arpl
ja
push
sbb
shr
sbb
stc
xchg
sbb
fldenv
pop
sbb
out
imul
addr16
xor
inc
adc
jle
daa
push
adc
ror
cmps
mov
(bad)
mov
mov
out
call
lahf
(bad)
fdivr
mov
call
popf
lods
fiadd
mov
mov
mov
ds
dec
or
push
cs
sub
add
push
or
inc
sbb
jge
ins
add
xchg
div
gs
sub
sub
hlt
add
sbb
push
adc
jb
pop
push
pop
sbb
push
push
cmp
mov
mov
jns
fwait
repnz
mov
xchg
xchg
cmps
cmc
sub
mov
jbe
ins
ss
cmp
xor
mov
out
add
push
sar
mov
shr
mov
stos
leave
xchg
addr16
aas
jl
or
pop
ss
nop
call
movs
pusha
or
dec
mov
mov
push
in
(bad)
les
push
adc
jnp
imul
dec
sub
cmc
cwde
mov
imul
pop
mov
retf
jno
mov
xchg
fcom
sbb
arpl
mov
jns
cs
xchg
mov
daa
and
in
adc
dec
stc
ss
popf
dec
sbb
dec
mov
push
sub
pop
sub
mov
movs
out
mov
xchg
rol
dec
cmp
ins
cmp
jb
jle
inc
pop
jg
and
mov
xchg
pop
dec
cmp
add
ret
wrmsr
dec
mov
imul
mov
push
imul
jecxz
mov
jns
cmp
jp
fstp
fdivr
inc
cmps
repnz
aam
mov
ss
cmp
cmp
jb
sti
add
mov
or
sub
pop
jg
out
rcl
shl
in
add
push
push
push
add
jle
xor
mov
loope
enter
jge
hlt
sbb
cmc
clc
mov
fs
xor
addr16
movs
int
(bad)
retf
xchg
shl
or
aaa
jne
jae
mov
push
sbb
dec
cmp
outs
in
sub
adc
fs
xchg
popa
add
jecxz
cdq
mov
mov
dec
adc
stc
call
popa
cmps
shr
in
cmp
shl
inc
push
daa
loope
mov
sbb
sti
stc
mov
pushw
cs
shl
sub
outs
jmp
arpl
es
sub
push
or
in
mov
mov
push
ds
xorps
ror
jno
(bad)
sub
jns
sar
mov
(bad)
int
fmul
ret
mov
lock
sub
sbb
push
push
out
or
dec
mov
inc
cdq
sbb
pop
add
push
or
mov
cli
sbb
mov
je
and
or
pop
loopne
shr
outs
xor
jge
pop
xor
add
cld
and
into
jge
inc
mov
cli
iret
mov
aam
mov
stos
leave
xchg
jne
ss
mov
adc
dec
mov
pop
out
sub
jg
push
cmp
xor
sub
push
xchg
scas
les
and
rcl
jmp
mov
xchg
int3
outs
stos
and
sbb
xchg
jb
xchg
cwde
fsub
pop
cwde
jno
mov
mov
push
jno
dec
in
popf
dec
mov
add
lods
pop
test
stos
lock
cli
xchg
popf
mov
(bad)
sbb
jge
pop
add
movs
mov
mov
outs
stos
cdq
fcom
dec
clc
xchg
lock
adc
in
xchg
pop
sub
cmc
add
mov
xor
jg
in
div
sbb
ins
xor
mov
das
add
ins
xor
in
mov
fwait
(bad)
xor
pop
dec
or
les
pop
out
retf
mov
dec
sub
and
sbb
divps
mov
in
movs
push
push
mov
inc
aaa
inc
add
and
and
push
push
xor
aaa
inc
bound
mov
movs
cmc
push
movs
les
xchg
scas
arpl
js
rcl
retf
push
jmp
movs
rcl
pusha
bound
jns
fldcw
xchg
scas
dec
clc
sahf
scas
imul
or
imul
scas
and
das
inc
adc
inc
and
or
jae
inc
sub
sbb
inc
sub
mov
push
and
cmp
pop
loopne
imul
aad
dec
pop
pop
addr16
add
ins
out
hlt
lods
ret
sbb
dec
adc
dec
in
mov
ds
mov
or
jge
(bad)
std
mov
xor
ins
add
das
es
sub
test
jns
jbe
jns
(bad)
ss
mov
mov
xchg
ins
xor
dec
fwait
jne
inc
and
movs
mov
xor
adc
rcl
out
addr16
loope
(bad)
popa
or
dec
add
outs
or
push
bound
fwait
mov
das
jle
stc
xchg
push
add
push
out
aaa
mov
mov
out
xchg
jmp
dec
mov
(bad)
cmp
jno
gs
sub
idiv
test
scas
cli
jecxz
cmp
pop
adc
dec
adc
je
aam
push
pop
es
adc
arpl
inc
add
cs
inc
das
inc
add
into
stos
sub
jno
cmc
jmp
(bad)
pop
in
sub
and
xchg
rcl
ja
inc
pop
dec
sbb
push
sbb
std
cmp
mov
popf
repnz
sub
ds
inc
and
dec
xor
pusha
cmp
xor
xor
jo
ja
daa
jnp
(bad)
int3
sub
aam
(bad)
xchg
(bad)
into
and
outs
add
pop
inc
and
aas
pop
cmp
retf
js
xor
push
ja
jnp
xchg
fisubr
jmp
pushf
call
inc
pop
pop
cmp
mov
out
fist
xchg
hlt
xchg
mov
sub
jp
aas
pushf
(bad)
pushf
int3
push
mov
ins
mov
out
scas
dec
in
inc
add
retf
nop
fild
pop
outs
xor
sub
push
cmp
jmp
fisttp
js
test
add
(bad)
bound
and
sbb
inc
mov
enter
xchg
mov
dec
cmp
mov
mov
or
mov
test
mov
xchg
rol
(bad)
mov
pushf
les
inc
or
pop
test
(bad)
fisub
adc
cwde
test
xchg
lods
mov
dec
jecxz
fdivr
jp
push
dec
or
dec
cwde
and
sbb
loop
ret
push
xor
inc
add
add
pop
out
or
jmp
adc
daa
jmp
or
daa
inc
or
imul
push
in
fstp
adc
xor
inc
add
mov
leave
add
xor
repnz
mov
xor
inc
test
inc
adc
ficomp
pop
add
xchg
xlat
add
mov
clc
mov
xchg
test
sti
imul
mov
test
jno
inc
add
fcomp
push
adc
xor
dec
or
and
dec
add
pop
loop
pop
pop
adc
sti
fsub
pushaw
daa
imul
out
and
or
arpl
dec
sub
sub
push
pusha
xor
push
sub
cld
pushf
stos
into
mov
sub
mov
in
mov
mov
or
(bad)
std
test
(bad)
popf
leave
xchg
mov
mov
lods
sti
jbe
xchg
fidiv
cmps
cmc
mov
mov
mov
mov
out
mov
sub
int
and
repnz
ret
sbb
retf
cwde
into
fwait
push
movs
enter
shl
rol
xlat
sbb
into
adc
das
dec
xchg
test
mov
dec
fimul
jp
xor
jge
dec
pushf
aaa
jb
jne
xchg
pop
dec
push
pop
lods
daa
sub
xchg
mov
mov
add
aam
cmps
ins
sub
pop
popf
lds
aad
test
mov
pusha
mov
mov
mov
outs
hlt
xchg
in
mov
cmp
call
or
test
jge
fisubr
cs
fst
repz
fisttp
in
push
pop
loop
pop
(bad)
xchg
stos
je
pop
(bad)
in
xchg
std
mov
cwde
ror
int
aad
jo
loop
xchg
scas
leave
fwait
mov
add
retf
xchg
dec
and
push
sbb
mov
xchg
mov
push
adc
adc
out
outs
xor
imul
pop
cmp
and
inc
or
pop
sbb
mov
stos
in
retf
xor
fidivr
ds
xorps
cld
mov
aam
(bad)
cld
mov
outs
or
push
adc
ins
repz
enter
pushf
jle
and
shl
pop
dec
adc
pop
jmp
fs
movs
ficomp
pop
push
and
and
cmp
pop
cmp
or
je
add
movs
les
mov
xchg
in
mov
or
(bad)
and
gs
jmp
sbb
or
dec
mov
mov
lea
out
test
outs
mov
out
iret
xchg
test
fsubr
pop
in
mov
mov
fs
push
loop
jnp
cmps
mul
and
loopne
les
sbb
mov
jg
jne
add
jne
sti
xchg
hlt
sub
xchg
mov
push
adc
jl
arpl
xor
mov
xor
xor
push
xor
jae
pop
adc
loop
mov
fiadd
jo
and
jl
pop
addr16
fisttp
mov
xchg
fisttp
cmp
cdq
aam
(bad)
xchg
fstp
or
iret
and
push
add
(bad)
mov
mov
cdq
int
dec
jnp
dec
out
mov
mov
mov
adc
jecxz
movs
mov
movs
movs
gs
movs
loopne
dec
jne
dec
add
xchg
aad
mov
repnz
cs
mov
iret
call
pusha
or
stos
cld
adc
out
xor
mov
xchg
icebp
xchg
mov
clc
sbb
xor
dec
add
push
sub
es
push
cmp
push
adc
sbb
leave
cld
add
lods
pop
dec
or
cli
mov
(bad)
pop
scas
int
xor
(bad)
lds
sar
test
les
loope
shl
out
icebp
(bad)
sub
in
movs
jmp
out
xchg
les
sub
mov
jp
dec
out
mov
and
not
push
jecxz
je
sub
das
fneni(8087
mov
(bad)
cld
cmp
mov
cwde
clc
pusha
ds
or
and
cmps
adc
enter
ret
das
xchg
xlat
sub
dec
xor
mov
dec
and
add
cli
cdq
rcr
mov
add
fist
sbb
inc
xchg
mov
xchg
dec
inc
adc
sar
test
loop
cmps
mov
clc
call
mov
sub
leave
pushf
push
jge
cmp
aas
loope
push
cli
xor
push
pop
push
cmp
bound
mov
fstp
and
dec
imul
push
adc
pop
add
add
icebp
or
add
fisub
pop
cmp
test
adc
pop
mov
nop
imul
and
or
aas
dec
xchg
fistp
pop
sbb
dec
stos
div
(bad)
fadd
inc
sbb
das
retf
ds
sbb
arpl
cmc
mov
ja
inc
xchg
hlt
test
xchg
les
dec
xor
inc
or
out
xor
cmp
xor
xchg
xchg
dec
stos
test
call
shl
jecxz
sbb
lock
lds
pushf
scas
icebp
imul
mov
rcr
or
dec
aas
pop
jmp
pop
in
push
mov
dec
add
sbb
movs
lds
inc
and
dec
sbb
dec
idiv
ret
adc
inc
out
popf
dec
rep
xchg
adc
jge
mov
cmp
sub
adc
cmps
outs
push
outs
xor
call
(bad)
inc
test
mov
adc
jg
dec
test
cmps
movs
ins
cmc
mov
scas
les
adc
int
aaa
dec
or
xlat
inc
or
inc
lods
adc
div
sub
scas
cs
push
ins
add
xor
fsub
pusha
xor
ret
inc
pop
jp
xchg
les
ret
outs
xchg
mov
mov
cwde
dec
fst
pop
loope
(bad)
xchg
cmps
dec
ret
loopne
retf
gs
jb
ret
or
adc
cmp
in
movs
mov
js
imul
jmp
adc
cmps
mov
mov
fdivr
jg
cs
or
repz
shl
mov
imul
jae
fwait
ror
repnz
or
outs
or
mov
adc
mov
fnsave
fsubr
xchg
shl
jl
push
adc
inc
push
pop
or
xchg
pop
push
sbb
icebp
sub
add
pop
je
xor
push
sbb
mov
pusha
mov
cmp
std
mov
and
add
sub
push
jae
dec
adc
cmp
addr16
and
jo
sub
bound
pop
sbb
stos
loope
hlt
fs
movs
cmps
loope
xlat
cmp
jge
imul
es
mov
mov
lods
jmp
mov
in
pop
inc
or
push
out
leave
xchg
xlat
mov
adc
(bad)
mov
ins
or
inc
out
pop
fiadd
daa
in
ins
daa
pop
mov
fistp
adc
dec
or
fisttp
jp
dec
fwait
popf
out
test
jmp
fld
xor
jmp
movs
movs
gs
and
pop
or
movq
(bad)
popf
into
cmp
stos
mov
mov
movs
aad
not
or
and
fsubr
cmps
lock
cmp
mov
jb
ins
sbb
push
or
dec
mov
dec
sub
push
std
add
in
scas
addr16
xchg
enter
xchg
and
mov
mov
mov
iret
call
add
fistp
and
cs
sbb
or
repnz
cdq
fld
cmps
std
mov
(bad)
mov
call
xchg
les
cdq
ret
add
aaa
dec
out
sbb
mov
mov
xchg
ins
xor
in
mov
je
pop
add
xchg
push
sub
add
mov
and
jb
inc
movs
and
aaa
and
out
cmp
out
dec
pop
inc
lea
cs
retf
cdq
cmps
rol
mov
lods
pop
lods
lods
jo
je
fisubr
fdiv
stos
repnz
sbb
out
std
lea
aam
stos
xor
jne
sub
cmc
cmp
test
fwait
cmps
ins
xchg
mov
mov
xor
cmp
fisttp
pop
adc
push
and
xchg
sar
jns
cmp
jb
mov
idiv
sub
daa
jae
pop
sbb
pop
push
dec
cdq
pop
jge
xor
mov
ss
mov
pusha
inc
sub
out
mov
shl
sbb
cmc
sub
mov
test
popf
int3
das
push
dec
or
out
ds
sub
(bad)
in
inc
popa
in
inc
cmc
gs
jmp
xchg
inc
jecxz
xchg
test
sbb
sar
test
add
push
inc
test
cwde
leave
cwde
inc
sub
push
cmp
call
movs
pop
or
sub
pop
mov
movs
(bad)
mov
lahf
and
xchg
mov
js
not
pop
in
movs
popa
xchg
clc
sahf
cmps
cli
adc
fwait
scas
fnstcw
das
test
fdivp
mov
dec
push
sbb
not
jo
and
jg
fcom
and
fidivr
pop
data16
nop
outs
mov
push
adc
rep
mov
inc
adc
sbb
dec
or
pop
dec
sbb
cwde
aam
inc
xor
dec
in
jo
int
inc
daa
ja
add
xchg
push
add
fmul
xchg
xlat
xchg
int3
mov
mov
sub
jp
fstp
std
mov
add
lods
les
adc
push
jl
cdq
fadd
add
sbb
mov
(bad)
fstp
dec
shr
lods
cmc
addr16
sub
or
dec
ficom
jmp
(bad)
mov
cmp
and
out
and
daa
push
or
inc
mov
jne
fsubr
push
pusha
xor
pop
mov
xor
mov
mov
mov
into
arpl
jns
gs
aam
sub
pop
xor
mov
sbb
or
inc
add
sbb
dec
or
dec
sbb
into
sub
mov
mov
jo
outs
jecxz
retf
sahf
dec
out
int3
mov
mov
xchg
test
mov
cmps
clc
jnp
outs
sti
xchg
stos
ror
sub
cmps
fisub
sub
and
div
js
sub
or
sub
ret
mov
add
xchg
cmps
add
sti
mov
xchg
aad
les
sub
sbb
jl
sub
jg
cmp
mov
mov
sbb
inc
ss
or
xchg
mov
add
xor
pop
push
out
push
mov
(bad)
out
repnz
mov
xchg
jns
inc
and
inc
and
ret
xor
pop
loope
popf
mov
mov
addr16
aas
cld
mov
test
xlat
scas
in
gs
ret
sub
out
popf
leave
mov
inc
or
or
jae
sbb
fild
mov
fs
cdq
ret
mov
test
cmc
cs
xchg
mov
mov
and
in
stos
stc
bswap
xchg
cdq
aad
imul
push
push
pop
jp
pop
in
into
mov
cmc
mov
mov
push
push
inc
sub
mov
aas
jns
jp
jno
imul
inc
mov
jmp
sar
pushf
div
addr16
adc
mov
and
lods
leave
(bad)
ficom
dec
or
pop
loopne
jg
jns
jno
cmp
mov
mov
dec
adc
push
mov
xchg
ret
popf
cmps
retf
mov
mov
pop
sub
and
bound
inc
xor
adc
jge
inc
mov
mov
cmp
push
repz
lahf
movs
out
fs
clc
mov
mov
or
add
dec
loopne
fnstenv
int3
ins
not
pop
cmp
addr16
xor
xchg
in
scas
mov
cdq
shl
aad
shr
lock
mov
mov
push
in
xchg
ret
xchg
ret
mov
mov
les
push
push
and
sub
push
aad
adc
out
mov
and
call
sbb
xchg
retf
adc
loope
or
movs
enter
dec
ror
in
hlt
xchg
fdivr
out
lods
shl
les
and
ds
pop
cmp
add
jno
sbb
or
shl
outs
sbb
fbld
mov
jbe
mov
fbld
dec
sbb
test
add
dec
adc
push
or
js
mov
int
fst
jmp
push
adc
into
(bad)
out
xchg
mov
lahf
jnp
push
sbb
je
pop
adc
xor
dec
mov
test
xchg
rcr
(bad)
retf
cs
add
test
stc
mov
push
pop
xlat
cmovbe
push
cmp
sbb
or
xor
jnp
xchg
call
dec
sbb
nop
fidivr
(bad)
mov
push
add
jno
push
in
pop
loopne
scas
cmps
loopne
cmp
mov
popf
out
cwde
push
cli
test
mov
nop
fld
scas
call
jno
dec
in
mov
movs
jmp
(bad)
mov
jb
inc
leave
push
jle
jle
dec
stos
loope
les
dec
inc
and
or
sahf
iret
lods
les
pop
push
push
sbb
shl
inc
and
(bad)
into
push
push
jb
jae
icebp
add
jl
aam
aad
jb
nop
stc
mov
retf
sahf
cld
mov
out
iret
mov
mov
pop
pop
push
fadd
repz
sar
stos
fdivr
jg
pop
stc
cdq
rcl
push
pusha
push
stos
in
add
fst
push
inc
or
pop
add
jl
push
out
pop
mul
pop
sbb
add
push
mov
mov
pushf
scas
cmc
mov
mov
mov
in
outs
xor
cmc
test
lods
call
sbb
pop
pop
inc
or
clc
cdq
movs
mov
push
jp
les
xor
sbb
add
push
sub
and
es
pop
dec
xchg
bound
dec
dec
push
ss
adc
jbe
repz
push
loop
imul
dec
mov
shr
fistp
std
pop
jns
push
add
mov
jb
aad
stc
xchg
mov
sbb
push
adc
outs
adc
adc
xchg
(bad)
aad
cld
xchg
fsubr
add
dec
add
jns
ja
jno
xor
mov
cmps
aad
mov
stos
pop
dec
out
sub
sub
or
inc
repz
xchg
lock
mov
xlat
xchg
std
inc
repz
stos
lods
call
sub
xchg
outs
push
dec
loop
scas
jg
inc
or
inc
hlt
sub
xchg
pop
mov
fild
pop
jge
jo
nop
aad
std
mov
or
sub
fwait
inc
and
dec
out
mov
xor
call
sbb
jbe
add
cmp
dec
jge
pop
add
push
adc
ds
pop
in
call
xor
cmp
pop
mov
repnz
sub
jmp
add
push
in
jecxz
loop
jecxz
pop
sbb
fld
retf
or
outs
adc
pusha
das
jb
push
and
scas
stc
cmp
daa
inc
dec
xchg
inc
sbb
bound
cmps
hlt
dec
sub
adc
(bad)
std
mov
ins
push
mov
sub
dec
adc
sbb
and
jle
bound
jp
dec
pop
je
push
sbb
cmp
fdiv
inc
pusha
and
pop
adc
xor
repz
pop
add
dec
daa
movs
lds
adc
dec
or
addr16
pop
add
mov
sub
jnp
je
test
test
dec
int3
mov
lods
hlt
mov
pushf
fstp
jle
and
adc
fbstp
inc
pop
outs
fdivr
jb
push
out
adc
push
pop
pop
or
mov
pushf
movs
or
push
aas
inc
add
push
sbb
gs
jl
jns
push
mov
sar
ficomp
out
sahf
ficomp
mov
mov
jb
jle
add
jbe
and
jo
dec
out
fimul
pop
pop
jbe
call
les
mov
mov
mov
cmp
pop
ror
pop
pop
sbb
sbb
jge
mov
sahf
mov
ret
jb
dec
sbb
push
add
pusha
mov
pop
bound
inc
or
pusha
loop
arpl
push
clc
call
out
mov
(bad)
fiadd
outs
add
xchg
mov
xchg
mov
mov
out
sbb
xor
nop
fst
retf
rcr
jbe
fwait
rcr
jmp
cmp
pop
push
xor
inc
add
push
dec
push
cs
sbb
push
adc
or
pop
jne
bound
arpl
(bad)
and
outs
ss
arpl
pop
xor
or
outs
sub
xchg
cmps
loope
retf
xchg
out
mov
sahf
push
xchg
mov
cmps
out
mov
mov
cwde
(bad)
mov
pop
clc
mov
mov
or
out
int3
stos
jmp
sbb
mov
lds
imul
sbb
dec
das
pop
in
(bad)
or
lahf
fmul
push
xchg
pop
add
mov
test
add
or
pusha
and
add
mov
fisub
adc
inc
jecxz
shr
je
pop
mov
bound
cmp
jns
js
outs
xor
fisubr
popa
add
cmp
(bad)
scas
jmp
add
sub
adc
ja
sbb
js
push
mov
fnstsw
rcl
icebp
cmp
push
dec
adc
push
xor
or
xor
push
and
and
pop
les
stos
mov
dec
or
out
sar
jmp
ret
and
xchg
mov
ret
es
out
stc
xchg
(bad)
call
adc
imul
jge
inc
or
data16
add
xor
sbb
dec
scas
push
sbb
sbb
cmp
mov
popa
xchg
fcomp
or
(bad)
call
dec
sbb
dec
cmp
xor
inc
sbb
mov
xor
dec
cmp
mov
mov
outs
movs
jno
push
add
aas
inc
add
push
inc
add
sub
or
sub
popf
fild
jbe
jb
push
das
push
fsub
jno
pop
aaa
inc
push
es
in
and
mov
in
mov
inc
int
jecxz
sbb
loope
(bad)
mov
mov
out
adc
sbb
push
xor
pop
sbb
add
sbb
mov
cmp
dec
jmp
jge
dec
mov
dec
and
and
int3
loope
(bad)
mov
push
test
xchg
gs
clc
mov
in
scas
stc
outs
adc
push
sbb
in
stos
enter
sar
mov
arpl
js
arpl
push
shl
nop
leave
sub
int
push
(bad)
out
bound
mov
xchg
push
xchg
loopne
fsubr
push
inc
and
sub
pop
or
fsubrp
mov
xchg
sar
mov
jmp
in
sbb
xlat
and
and
push
adc
sub
mov
and
jle
es
pop
sub
push
mov
pop
or
xor
pop
jecxz
cwde
pop
in
loopne
ins
and
cs
addr16
js
jnp
lods
ror
shl
rol
xor
inc
or
repz
enter
loopne
repz
xor
push
push
dec
pop
and
test
lahf
shl
push
stos
idiv
cli
stos
(bad)
addr16
adc
lock
shl
cmp
imul
hlt
std
xlat
xchg
out
mov
xchg
push
pop
push
pop
cmp
jmp
ins
xor
adc
js
popa
or
mov
mov
jbe
dec
(bad)
mov
aam
cmp
cs
sbb
iret
xchg
shr
jg
mov
sub
pusha
cmp
imul
in
mov
mov
popa
and
and
arpl
jecxz
xor
in
ds
xchg
loope
cmps
or
jmp
jle
(bad)
fwait
enter
(bad)
(bad)
aad
into
nop
mov
js
jnp
xchg
aad
sub
adc
pop
add
jecxz
sti
mov
retf
mov
mov
fld
cwde
call
cdq
iret
fwait
shl
sub
cdq
ficom
xor
pop
sbb
sbb
jb
ja
push
sbb
xor
aad
mov
lea
imul
sar
(bad)
std
and
pop
repnz
movq
rcl
popa
pop
push
or
push
or
int
fisttp
or
adc
gs
dec
or
fnstcw
pop
sti
mov
call
rcl
jnp
add
inc
mov
dec
aaa
cmp
movs
in
cmps
out
popf
shr
into
add
mov
lahf
push
adc
jl
push
cmc
push
cmps
fiadd
inc
sbb
lods
not
cs
data16
or
push
jmp
mov
jno
push
jmp
dec
xor
add
pop
cmp
ss
sbb
aam
stos
pusha
push
nop
jecxz
jno
jge
push
push
xor
jns
pop
mov
imul
pusha
add
cmp
or
jb
sub
xor
hlt
movs
out
icebp
mov
push
or
mov
xchg
aam
lds
pusha
and
rol
mov
sub
fwait
stc
test
scas
frstor
aam
hlt
mov
sbb
fiadd
dec
es
fnstsw
(bad)
aam
cmc
mov
das
ins
aas
jns
sar
xor
imul
push
dec
shr
cmp
add
jbe
imul
ins
aaa
and
dec
pop
add
add
and
pop
ds
sub
stos
jmp
in
ss
add
jbe
dec
jecxz
leave
xchg
enter
out
mov
repnz
fsub
arpl
jecxz
mov
pushf
shl
xsha256
cmps
aam
out
test
xchg
cmps
out
sub
pop
pop
inc
hlt
aaa
int3
test
test
push
pop
pop
cmp
imul
rol
xor
loopne
loope
stos
out
push
out
mov
pop
cmp
inc
mov
fnstenv
mov
mov
and
jg
xor
inc
sbb
aas
jle
mov
adc
(bad)
sahf
mov
sbb
js
jl
ins
por
out
lods
iret
mov
mov
add
ret
sub
dec
out
xlat
xchg
not
das
pop
push
jne
es
xor
and
cs
adc
jle
xor
cmp
sbb
mov
fs
ror
xchg
ret
lahf
imul
bound
push
mov
(bad)
cld
lahf
fldcw
push
(bad)
popf
fcomp
push
adc
sahf
fstp
retf
jne
pop
lds
xor
test
mov
xor
jg
mov
mov
shl
pop
inc
pop
fs
js
adc
jge
or
in
popa
cmp
inc
and
inc
cs
cmc
mov
pop
push
ja
cs
add
and
std
add
mov
mov
inc
cmps
icebp
mov
add
jp
imul
push
popa
mov
xchg
das
test
mov
pop
or
aaa
pop
sbb
hlt
test
addr16
push
sub
sbb
xchg
fnstsw
add
adc
adc
pop
inc
xchg
imul
(bad)
jecxz
out
mov
div
push
shl
pop
add
adc
adc
xchg
fisubr
cmp
push
or
out
push
out
les
inc
pop
dec
aaa
mov
cmp
add
and
dec
(bad)
lds
ror
mov
nop
fild
sbb
or
fs
dec
jecxz
cmps
mul
push
out
dec
fstp
inc
and
sbb
(bad)
cmps
mov
sahf
mov
call
shl
xchg
sar
push
adc
sbb
or
and
pop
mov
xchg
fnstenv
fnstenv
in
scas
retf
test
pop
sbb
pop
sbb
(bad)
jle
cld
nop
(bad)
mov
pushf
lods
mov
popa
add
mov
imul
xor
inc
xor
xor
push
pop
jbe
push
or
das
sub
imul
xchg
xchg
pop
adc
cmp
pop
push
adc
popa
sbb
rol
call
push
and
stos
dec
mov
popf
cmc
xchg
inc
not
sub
mov
outs
mov
ror
mov
je
push
sbb
je
dec
adc
jg
add
mov
and
xchg
jns
test
add
outs
push
in
xchg
idiv
pop
test
imul
clc
outs
out
jmp
pop
adc
clc
mov
lds
out
mov
outs
repz
xlat
ja
(bad)
std
push
or
pop
add
jb
repz
add
std
test
int
fstp
push
int3
test
frstor
mov
xchg
fisttp
sub
cmp
jno
pop
sbb
jne
call
mov
xor
adc
adc
fs
sub
loopne
shl
rcr
leave
cwde
(bad)
aaa
add
pop
sbb
ss
pop
push
std
add
push
cmp
pop
or
jns
rol
inc
sbb
pop
add
cmps
retf
test
cdq
xlat
cmp
and
jecxz
mov
cmp
mov
mov
sbb
adc
add
cmc
mov
adc
outs
sub
mov
jge
inc
xchg
xor
inc
or
mov
movs
jge
ins
cmp
jno
sub
sahf
int
in
mov
mov
xor
out
push
adc
xchg
test
daa
fs
pop
push
push
retf
nop
xor
rcl
pop
stc
add
inc
and
loope
jmp
mov
push
in
jmp
sti
and
jo
imul
jl
add
sbb
js
fild
add
fistp
jns
pusha
mov
lods
enter
in
xlat
jmp
push
and
mov
cmp
pop
push
add
stos
aam
xchg
retf
mov
jp
js
and
jge
jne
push
push
dec
xor
push
push
neg
xchg
rol
leave
xchg
test
or
dec
pop
repnz
mov
pushf
into
xchg
pusha
mov
pop
push
ficom
xorps
sbb
sbb
fisubr
push
and
sahf
mov
fdiv
imul
or
jp
dec
push
sub
sub
sbb
push
and
and
pop
sub
xchg
cmc
mov
ret
aas
js
dec
jl
push
sti
xchg
xor
jp
dec
adc
mov
xor
sahf
aam
fmul
pop
sub
pop
cmps
repnz
ins
sub
in
jo
sbb
push
cmp
pop
inc
push
je
pop
sbb
lock
inc
sbb
imul
pushf
sar
stos
cmp
inc
mov
or
push
cmp
push
pop
enter
ins
cmp
lock
xor
in
ins
(bad)
stos
rcr
stos
inc
xor
dec
cs
or
pop
(bad)
fadd
sti
add
mov
mov
(bad)
mov
out
nop
(bad)
xchg
(bad)
or
mov
popf
(bad)
push
push
icebp
lahf
fldenv
sub
(bad)
mov
jno
xchg
mov
sub
stc
mov
rol
bnd
inc
cli
pop
sub
mov
(bad)
sub
pop
aas
not
ins
sbb
dec
(bad)
and
sub
add
out
fidiv
lods
icebp
and
leave
div
cmps
(bad)
mov
pop
ss
push
das
ins
in
or
popa
or
aas
jnp
push
add
sub
loop
clc
cdq
dec
or
and
sub
retf
fwait
test
cwde
int
mov
dec
sub
pop
add
daa
inc
test
xlat
sub
gs
popa
mov
inc
mov
add
mov
clc
test
outs
sbb
sahf
xlat
xchg
cld
fwait
sbb
push
mov
rcl
inc
xor
add
das
dec
lods
jecxz
shl
in
(bad)
loope
lods
movs
aad
lods
cmc
mov
ins
cmovo
push
mov
mov
adc
inc
or
ficomp
popfw
fadd
out
jecxz
shr
fmul
gs
or
adc
imul
lock
push
clc
cwde
cmps
into
add
mov
mov
mov
loopne
mov
out
mov
and
and
or
(bad)
pop
cmp
cld
popf
push
pusha
sub
es
cmc
xchg
sar
pop
xor
cwde
rcl
and
push
ja
into
movs
retf
pop
push
sub
ret
ds
mov
or
jmp
mov
and
(bad)
rcl
push
cli
call
shr
das
arpl
arpl
jns
push
ds
outs
pop
cs
inc
add
sub
sbb
jle
stc
lahf
cld
jecxz
mov
push
jp
call
test
mov
xchg
shl
loopne
ror
aas
out
pop
cld
psubusb
and
adc
ret
enter
push
call
ror
xor
(bad)
lods
push
pop
xor
out
js
dec
bound
bound
cmps
in
cmps
shl
mov
faddp
scas
sbb
add
ds
fdivp
fstp
lods
imul
pop
xchg
sub
fiadd
pop
xchg
pop
addr16
or
add
out
sbb
dec
mov
aad
mov
stos
sbb
sub
fidivr
fmul
mov
add
sbb
pushf
or
add
loope
mov
and
mov
inc
mov
lahf
rcr
pop
cmp
adc
add
xchg
int
ja
adc
sbb
sbb
fcomp
add
int3
mov
shl
sbb
xchg
sbb
(bad)
inc
popa
add
std
mov
aaa
jbe
push
ins
inc
sbb
mov
ins
push
fidivr
js
or
retf
mov
cmp
jmp
lock
popf
call
and
cmp
out
(bad)
cwde
push
dec
cmp
mov
popf
ret
and
pop
cwde
adc
lock
ret
daa
inc
xor
int3
mov
push
push
jb
out
fdiv
mov
fwait
clc
xor
ja
test
sti
outs
mov
sti
mov
push
xchg
aas
je
xor
ror
or
xlat
xchg
leave
dec
pusha
and
add
cmc
mov
aas
std
and
xor
adc
cmps
loope
mov
sbb
int3
sub
popf
clc
popf
rol
sub
dec
or
pusha
xor
or
jle
dec
push
ins
add
jp
jp
cdq
out
mov
fidivr
scas
(bad)
mov
neg
mov
mov
hlt
mov
aad
retf
and
xlat
xor
xchg
enter
lds
lds
cmc
mov
lahf
fisubr
fist
aad
std
xchg
hlt
mov
mov
mov
into
and
stos
retf
mov
sbb
sbb
sub
out
sti
mov
popa
stos
das
jg
in
pop
lock
mov
and
adc
les
push
sub
loop
mov
sub
shl
mov
sub
in
fstp
and
or
lds
cwde
inc
js
arpl
and
out
je
push
xchg
jl
rcr
out
pop
push
and
adc
and
mov
js
les
or
test
or
test
push
cmp
cmp
lock
in
mov
jnp
push
push
xor
movs
sbb
fcmovnb
mov
push
popf
div
mov
pop
jg
fs
in
std
inc
push
call
jb
stc
mov
cmp
cdq
call
push
mov
test
cmp
out
in
fdiv
jecxz
jle
push
mov
outs
sub
lea
dec
mov
sti
cmp
mov
xor
fiadd
add
add
dec
pop
adc
(bad)
les
jmp
jge
hlt
retf
dec
fs
cmp
retf
jg
sub
push
cmp
lock
lods
and
and
dec
pop
addr16
mov
pop
cdq
(bad)
mov
(bad)
aad
call
jecxz
lock
imul
jg
sbb
mov
mov
adc
pop
scas
fsub
sbb
ficom
mov
adc
aad
jg
es
(bad)
jmp
imul
std
sub
pop
ds
sub
mov
pop
pop
or
movs
out
xor
cwde
shl
int
add
mov
imul
cmps
inc
xor
jecxz
pop
call
mov
push
xlat
add
or
icebp
ret
cmp
call
adc
sub
stos
cmp
(bad)
idiv
mov
sub
jmp
enter
shr
or
stos
pop
js
add
jecxz
mov
adc
scas
jmp
jl
push
sbb
frstor
push
jl
push
jecxz
retf
fwait
jbe
es
sbb
mov
or
add
add
cmp
jg
repz
test
mov
das
popa
add
out
jmp
mov
mov
dec
xchg
add
mov
data16
movs
sbb
or
cld
int3
cmps
call
jne
inc
add
sbb
das
bound
repz
out
inc
push
add
add
cld
aas
xchg
xlat
mov
mov
inc
add
movs
icebp
mov
and
(bad)
cmps
inc
push
or
in
xchg
ss
into
sar
push
sbb
jmp
cmc
mov
loop
inc
imul
xor
repnz
leave
es
mov
xor
lods
cdq
inc
sub
test
and
inc
mov
ins
sub
add
or
push
jbe
ja
push
and
aas
dec
movq
addr16
ja
pop
xor
cmp
and
into
mov
mov
lahf
fimul
ret
test
mov
cmps
(bad)
movs
in
loopne
icebp
test
in
mov
rcr
in
and
in
iret
mov
loop
(bad)
mov
rcl
fdiv
retf
mov
iret
mov
mov
sti
lods
loope
out
in
shl
mov
cmps
out
call
mov
cmps
clc
sahf
fistp
mov
fstp
mov
gs
sub
pop
mov
add
fsubp
mov
ins
mov
xor
fld
mov
aaa
scas
jmp
outs
dec
push
ins
ror
mov
inc
aad
mov
pop
mov
dec
xor
hlt
rcl
xchg
sbb
repnz
jb
jl
cmp
mov
cmps
addr16
sbb
pop
mov
inc
cs
fdivr
mov
pop
and
sahf
imul
pop
adc
dec
test
shl
cmp
adc
pop
sub
adc
test
and
int
xchg
loope
ret
es
stos
jp
push
add
lds
jl
leave
fidivr
jmp
mov
dec
cmp
ror
cmp
loop
mov
inc
and
and
not
jmp
cmp
fninit
ret
mov
add
mov
pop
jno
jno
sbb
int3
mov
sbb
(bad)
xchg
arpl
lock
mov
and
scas
pop
popa
and
aad
cmp
push
adc
jl
fwait
shl
mov
adc
bound
mov
pop
outs
xor
mov
sub
pop
cmp
mov
call
sbb
mov
adc
fidiv
dec
sub
cmp
xor
idiv
dec
in
push
movs
sbb
in
rcr
add
lods
adc
ror
sbb
jl
pop
inc
aas
jo
adc
adc
es
xchg
out
into
(bad)
mov
mov
out
sar
add
(bad)
in
lods
rcl
fisub
movs
jl
enter
xor
cld
or
add
mov
sub
daa
mov
jp
dec
push
or
mov
pusha
ffree
rcr
adc
mov
cmps
nop
pop
and
sti
push
pusha
das
imul
stc
lea
out
sahf
cmp
jecxz
(bad)
dec
jae
add
(bad)
xchg
mov
push
add
shl
pop
sbb
sbb
jmp
popf
mov
fcmove
mov
aaa
jnp
dec
push
push
xor
retf
aas
or
cmp
call
loop
repz
xchg
(bad)
nop
pop
dec
xor
call
mov
or
in
repz
loop
mov
mov
std
stos
sbb
cmovs
jg
adc
adc
in
lods
jmp
jl
and
test
push
or
(bad)
(bad)
loope
sahf
rcr
cmps
xor
sbb
inc
add
iret
xchg
leave
das
pushf
rcl
out
mov
retf
hlt
mov
outs
mov
push
(bad)
sbb
jnp
ret
sbb
mov
xchg
jge
xlat
mov
jmp
push
mov
sbb
push
push
add
cmp
pop
cmp
or
in
pop
jnp
add
out
pop
dec
sub
(bad)
rcr
lahf
fist
loopne
leave
xchg
retf
fdiv
in
call
movs
loopne
lock
add
loope
hlt
stos
int
loope
in
aad
std
xchg
repnz
mov
mov
fcom
fiadd
repz
mov
mov
fcom
std
fnstcw
loop
loope
(bad)
mov
call
xchg
push
fidivr
jmp
fistp
pushf
rol
pop
sub
dec
add
sub
into
and
xchg
rol
std
mov
xchg
sub
mov
jae
ficom
dec
xor
sub
pop
mov
jne
das
outs
neg
mov
pop
outs
xor
loope
lods
arpl
sbb
jmp
out
gs
and
mov
dec
push
call
dec
cmp
enter
mov
aas
push
shl
pop
push
mov
xchg
shl
mov
mov
fsubr
push
dec
test
lods
sbb
or
cld
ficomp
add
cs
mov
cld
or
outs
cmp
in
xchg
or
ja
add
(bad)
fadd
(bad)
enter
mov
dec
and
not
cmps
xor
shr
stos
sti
mov
jo
jle
push
dec
and
mul
or
repnz
jmp
xchg
int
inc
outs
and
cmp
sbb
or
loop
ins
cs
sbb
fld
fcmove
(bad)
mov
outs
das
call
jne
pop
aad
fsubr
fcmovnu
mov
adc
and
ror
inc
or
mov
fnstcw
push
lods
push
or
jmp
(bad)
mov
mov
dec
push
lods
jmp
(bad)
mov
ds
and
fidiv
scas
pop
cmp
daa
(bad)
mov
mov
add
cmp
pop
stos
cmp
pop
lahf
repnz
aam
push
repnz
sahf
xlat
or
test
pop
aam
mov
mov
jbe
jge
sub
call
or
sahf
ret
or
push
inc
push
pop
push
lods
(bad)
mov
test
push
adc
fdivr
jnp
mov
dec
sbb
daa
inc
call
inc
ins
add
cs
shl
(bad)
fsubr
pop
add
xchg
pop
lds
mov
push
mov
(bad)
sahf
bound
mov
cmp
hlt
ret
push
jle
push
fsubr
push
adc
dec
or
dec
jle
sbb
sbb
fistp
call
mov
hlt
fwait
mov
fmulp
(bad)
outs
(bad)
xor
or
retf
cdq
xor
pop
std
adc
adc
out
jmp
xchg
push
add
int
lea
cmp
mov
jmp
push
xchg
pop
jb
jecxz
mov
xchg
dec
sub
in
into
mov
push
mov
xchg
pop
sub
clc
xlat
test
pcmpgtb
inc
mov
dec
cmp
fild
mov
cs
cmp
cmp
cwde
shr
rcr
rol
scas
sbb
test
mov
add
push
lock
push
and
xchg
sbb
movs
or
stos
lds
jo
and
jmp
out
sbb
dec
icebp
sub
retf
push
xor
inc
add
jp
pop
mov
sbb
inc
mov
nop
or
fmul
dec
or
aam
retf
dec
mov
pop
xchg
push
adc
mov
mov
and
sub
dec
or
das
outs
aas
jbe
pop
xor
xor
add
je
inc
cmp
outs
sub
jle
arpl
inc
or
sub
push
add
inc
pop
inc
or
inc
sbb
pop
add
inc
sub
jno
inc
add
inc
add
sub
sbb
ins
adc
pop
sbb
pop
adc
outs
cmp
sbb
ss
push
and
inc
cmp
push
pop
inc
es
sub
pop
cmp
or
addr16
dec
cmp
fld
scas
loop
fimul
cmp
or
loopne
mov
add
fistp
xchg
jbe
fbstp
push
adc
ret
jmp
fisub
ss
ret
scas
xor
adc
fisub
add
lods
sbb
sub
pop
sub
cld
cmp
and
repz
es
ss
movs
xor
cmc
aad
(bad)
mov
lods
popf
sbb
cs
xchg
xchg
es
fcomp
(bad)
mov
or
pusha
mov
int3
fmul
icebp
leave
shl
daa
(bad)
jmp
mov
sbb
pop
stc
leave
mov
je
test
ja
xor
pop
(bad)
or
je
jle
sub
icebp
out
fidivr
retf
push
jle
popa
rol
mov
mov
retf
xchg
inc
and
in
lods
add
repz
dec
push
adc
out
mov
inc
jnp
and
mov
(bad)
sti
shl
push
test
push
cmps
push
dec
add
mov
dec
ret
mov
(bad)
sbb
repnz
test
cmc
ds
pop
cmp
retf
sub
adc
jmp
push
ficomp
mov
cmps
hlt
pop
cmp
cli
mov
loop
aam
dec
cmp
rcl
jo
repz
jmp
xchg
cld
cmps
aam
mov
mov
test
(bad)
not
dec
cwde
rcl
(bad)
out
sbb
lea
std
mov
inc
jne
sub
out
mov
push
jl
and
test
sbb
out
mov
mov
popf
sti
cwde
xor
pop
xor
adc
movs
(bad)
fst
ret
mov
movs
sahf
xor
pop
cmps
(bad)
jo
cmp
jge
pop
add
mov
push
push
sbb
push
push
es
iret
mov
mov
dec
ficomp
mov
es
test
or
mov
sub
movs
(bad)
das
xlat
ret
mov
aam
lock
(bad)
cwde
test
in
push
arpl
cmp
mov
mov
pop
outs
ja
out
sbb
cmps
mov
adc
in
call
fistp
and
(bad)
xchg
lahf
push
jp
add
retf
mov
popa
ins
pop
jecxz
popw
int
stos
retf
pcmpgtw
dec
mov
push
and
inc
push
ss
imul
dec
mov
retf
sbb
mov
pushf
push
push
or
ret
add
mov
xchg
ins
pop
adc
or
xor
scas
jecxz
inc
push
cmp
jmp
in
mov
pop
xor
cmp
(bad)
hlt
mov
jb
sbb
loope
scas
iret
adc
out
retf
xor
ins
cs
(bad)
fst
pop
fs
sbb
xchg
int3
imul
mov
jo
clc
mov
jo
ret
ss
repnz
jmp
adc
ds
add
or
jecxz
adc
in
sbb
jae
dec
adc
dec
add
add
push
add
inc
pop
pop
push
dec
cs
or
push
dec
sub
sub
pusha
adc
jl
outs
sub
add
(bad)
into
scas
iret
mov
test
call
aam
clc
popf
aam
repz
mov
popf
lock
aad
fidiv
jmp
(bad)
out
jmp
aad
std
xchg
repnz
mov
retf
movs
sbb
imul
add
pop
sbb
pop
ss
imul
and
addr16
cmp
push
adc
movs
jg
dec
sar
jnp
test
cmp
xor
xor
enter
arpl
xlat
loopne
mov
ins
and
jecxz
inc
out
mov
dec
popa
js
icebp
(bad)
shl
movs
xor
mov
leave
or
adc
fisttp
mov
stos
repnz
(bad)
sti
fwait
inc
jnp
bound
imul
cmc
mov
pop
jle
pop
mov
inc
add
outs
xor
xchg
lds
xor
scas
xor
adc
shl
aad
ins
jg
ss
aas
pop
xchg
loopne
mov
push
aas
dec
test
dec
or
mov
adc
jl
sub
adc
adc
mov
push
sbb
inc
add
leave
mov
push
fstp
cmps
call
movs
push
call
retf
ss
mov
push
pop
jno
sub
ror
mov
cmp
rcl
inc
js
push
add
loope
test
sahf
xlat
pop
fs
adc
mov
mov
jl
inc
cmp
push
pop
sbb
inc
mov
addr16
adc
jns
and
pop
inc
repz
xchg
out
inc
mov
fs
cli
xchg
push
jg
jns
clc
sahf
(bad)
out
rcr
sbb
add
mov
ret
cmps
xor
jge
pop
and
pop
push
jl
xor
cs
mov
outs
mov
nop
arpl
push
leave
push
ins
or
xor
dec
mov
xchg
jg
xor
jecxz
xor
and
imul
mov
test
leave
mov
mov
jl
xor
cmc
std
xlat
mov
icebp
fistp
scas
add
adc
push
adc
in
test
push
mov
xchg
bound
xor
cld
mov
push
sub
ret
adc
out
imul
call
shr
(bad)
clc
popf
imul
pop
mov
xchg
aam
jae
popa
cmps
push
and
scas
pop
sub
sbb
sbb
cmps
icebp
push
ja
pop
sbb
stos
call
sbb
movs
loop
jo
or
stos
dec
pop
sbb
movs
pop
pop
mov
sar
mov
jbe
cmp
out
jmp
aas
cmp
pop
jnp
sbb
mov
pop
aad
retf
jle
and
stos
add
mov
ja
aam
test
push
nop
out
jae
xor
or
sbb
adc
pop
call
inc
push
push
lods
xor
enter
push
xor
stos
aas
dec
cmp
std
test
sub
push
adc
std
and
int3
mov
jge
pop
addr16
fst
sbb
mov
mov
xchg
jecxz
ror
push
inc
xchg
or
push
(bad)
cmc
mov
xor
cli
mov
inc
mov
es
mov
add
mov
push
xchg
mov
mov
sub
mov
jb
inc
fild
dec
or
sub
nop
fidivr
mov
lock
lds
xlat
xor
mov
scas
loop
lds
add
mov
lock
iret
mov
mov
repnz
fld
and
rsqrtps
bound
imul
sub
add
es
mov
ja
ins
setg
dec
sub
scas
rol
sub
js
ja
out
stos
lock
fst
fcomp
aad
mov
lods
out
cld
popf
popf
fistp
cmp
pushf
jmp
jg
imul
push
push
test
nop
mov
repnz
xor
or
jnp
push
mov
xchg
test
push
and
push
popf
(bad)
ins
cmovo
in
mov
test
jno
idiv
jp
push
jle
add
cmp
pop
sbb
js
and
mov
jg
ins
cs
sub
std
lods
xchg
cmc
xchg
shr
inc
push
adc
dec
or
pop
mov
lds
jns
jp
sbb
test
cmp
push
sub
mov
xchg
fadd
or
cmp
ret
mov
ror
movs
imul
add
inc
daa
outs
mov
cdq
inc
add
jae
icebp
test
fwait
sar
push
sub
leave
popf
push
add
dec
and
lods
not
and
in
pusha
and
or
ins
mov
sbb
mov
stos
xor
aad
repz
jmp
fild
ret
retf
test
mov
out
cdq
sub
push
les
bound
jnp
rsqrtps
inc
xor
mov
sub
stc
mov
pop
pop
cwde
sti
mov
adc
fcom
jmp
(bad)
dec
or
scas
jmp
orps
push
adc
rcr
imul
and
lods
dec
or
retf
inc
push
dec
ins
or
scas
pop
sbb
mov
adc
ins
cmp
test
jg
bound
xchg
int
fidiv
test
inc
es
fcmove
mov
add
sub
imul
cmp
lds
adc
inc
or
sub
and
jae
pop
xor
mov
jno
and
push
sbb
jl
mov
nop
fistp
retf
jp
aam
rcr
add
test
lock
sub
dec
or
test
push
or
dec
out
pushf
(bad)
or
push
fstp
pop
dec
cmp
mov
movs
cli
xchg
repnz
cmc
popf
rcl
mov
cmp
jne
push
outs
and
retf
cli
xchg
mov
or
cmp
repz
jmp
loope
call
test
xor
and
fidivr
sar
mov
sti
mov
lods
into
cdq
movs
lds
int
fild
mov
(bad)
aad
int
hlt
xchg
rol
dec
cmp
push
dec
add
arpl
xor
mov
and
inc
ja
pop
ss
das
or
cmp
movs
stc
je
addr16
jge
pop
xor
xchg
stos
test
ja
pop
xor
pop
pop
jnp
push
enter
push
pop
pop
sbb
pop
fsub
push
xor
test
out
inc
sub
scas
cmps
into
xchg
in
jbe
dec
sbb
pop
jns
push
(bad)
fsub
xchg
ficomp
push
and
sbb
movs
cmc
inc
push
push
or
dec
(bad)
fwait
mov
mov
mov
dec
xor
inc
or
call
ja
and
jl
pop
(bad)
mov
mov
test
add
xor
shl
jmp
pop
pop
xor
inc
fistp
inc
add
adc
mov
xchg
push
inc
das
pusha
fstp
or
mov
dec
movs
les
cmp
jp
xchg
mov
ins
sub
inc
stc
mov
ss
ins
mov
jle
jp
imul
imul
loope
jns
push
push
jnp
addr16
mov
cmp
(bad)
ss
and
jns
cs
out
pop
stos
in
cmps
mov
cdq
mov
loop
mov
neg
retf
jbe
pop
add
inc
push
cmp
jnp
fwait
dec
fst
add
outs
sub
pop
ins
cmp
(bad)
outs
imul
inc
or
inc
xor
or
jmp
or
push
add
sbb
ins
aaa
push
jo
jp
movs
adc
cmp
ins
xlat
xchg
movs
neg
(bad)
dec
xor
cmp
push
(bad)
mov
xchg
fisub
sub
dec
cs
push
jp
pusha
sbb
int
dec
sbb
aaa
push
inc
xchg
int3
fild
mov
push
jp
pop
jae
xchg
inc
ss
mov
test
cs
cmp
iret
jnp
jne
movs
in
inc
ins
bswap
test
movs
mov
jmp
(bad)
fmul
fstp
call
outs
inc
and
out
pop
and
lods
inc
adc
xor
ins
sub
sbb
inc
(bad)
mov
jbe
fwait
mov
sar
xor
je
not
push
and
push
adc
xchg
pushf
rol
xchg
xchg
loop
or
xchg
ds
sub
jnp
cmc
mov
xor
outs
cmp
dec
push
pop
inc
or
inc
aaa
jg
sub
popa
sbb
and
mov
cs
push
jg
loope
adc
aad
xor
mov
fs
cli
mov
fld
dec
pop
fwait
int
mov
jbe
in
imul
outs
sub
lods
divps
dec
add
shr
mov
or
sar
dec
or
in
lods
cmp
cmp
je
push
popf
fild
adc
push
jmp
mov
daa
test
cmp
pop
sbb
jb
push
xor
sub
add
jne
out
mov
std
jb
dec
sub
aad
xchg
sbb
pop
dec
cmc
movs
out
mov
mov
xor
push
leave
mov
mov
add
in
mov
lahf
xor
push
adc
cmps
in
(bad)
in
cmp
pop
xor
jne
adc
inc
sbb
push
push
sar
sub
jnp
outs
sti
mov
call
das
jmp
mov
sub
cmp
dec
add
cmp
adc
inc
rcl
scas
lock
jno
sub
sub
nop
dec
or
mov
inc
xor
dec
add
bound
daa
push
adc
jle
loope
xchg
fiadd
cmp
lods
(bad)
dec
pusha
sbb
jns
sbb
jl
jmp
jmp
(bad)
sahf
dec
in
ss
test
add
data16
jno
sbb
sub
dec
dec
jmp
mov
mov
mov
sar
imul
inc
and
test
jnp
dec
push
ror
pop
adc
out
jb
daa
into
js
xchg
mov
in
pusha
mov
ins
inc
std
lods
stos
sbb
add
mov
xor
leave
outs
mov
add
inc
clc
pop
in
mov
inc
adc
add
loop
or
repnz
ficomp
mov
mov
mov
jg
sub
cld
pop
xor
jns
xchg
rol
or
pop
jo
je
jb
push
int3
and
or
cmp
cwde
mov
out
stos
mov
xchg
or
mov
and
cmp
or
aas
or
inc
pushf
xchg
sub
cdq
xchg
push
in
xor
and
stc
sub
(bad)
dec
adc
mov
push
(bad)
std
daa
and
xor
xchg
imul
in
ror
or
and
es
adc
dec
mov
retf
adc
sbb
mov
pusha
xchg
jl
xchg
dec
lock
push
iret
test
sbb
or
sub
add
pop
gs
push
mov
lods
push
cmps
popa
mov
xor
ss
xchg
rol
xlat
push
cmps
inc
adc
adc
imul
mov
ins
fnstsw
enter
data16
inc
ret
adc
jne
lea
out
ror
push
push
ror
(bad)
lods
gs
je
stc
pop
int3
movs
sahf
or
stos
popf
cmps
jb
and
or
and
jmp
xor
add
cmp
xchg
jmp
mov
sub
and
xor
jno
mov
sub
arpl
mov
pop
in
xchg
mov
sbb
call
inc
push
bound
push
or
iret
popf
fistp
mov
xor
jle
cmp
cmc
cli
jae
inc
xor
addr16
add
popa
and
xchg
cmps
mov
xchg
in
lds
fstcw
pop
lahf
popf
fidivr
ds
dec
scas
fstp
pop
cmp
out
mov
popf
imul
cmp
sbb
ja
icebp
sub
in
mov
lods
loopne
add
jnp
leave
xchg
mov
xchg
popf
int3
add
xchg
fistp
push
ds
gs
inc
ds
nop
push
and
sub
and
adc
fistp
ins
ret
mov
(bad)
aad
lds
imul
sbb
and
jns
mov
jp
pusha
daa
ds
pushf
in
pusha
(bad)
lods
out
xchg
fnstenv
rcr
push
movs
pop
sub
sbb
and
cmp
cmps
jno
clc
mov
nop
lock
push
ds
(bad)
sbb
out
lods
leave
xchg
mov
icebp
xchg
cli
mov
test
pop
xor
das
jp
cli
adc
inc
add
lods
int3
(bad)
pop
push
jp
push
retf
push
dec
movs
div
lsl
arpl
outs
sub
mov
dec
mov
mov
punpckhdq
dec
add
sbb
daa
inc
sub
jno
je
sub
retf
mov
fwait
ret
mov
cs
push
ja
xor
push
enter
jae
sub
or
mov
mov
inc
add
fbstp
push
das
in
and
inc
sub
pushf
les
lock
mov
outs
xor
jo
dec
adc
dec
inc
and
add
add
test
and
test
cmp
inc
add
dec
add
ret
test
int3
mov
dec
push
push
add
in
js
je
push
push
inc
push
das
add
pop
sbb
repz
jae
push
sbb
push
loop
ret
mov
fdiv
rep
repnz
das
ins
aas
pop
into
mov
pop
nop
ins
es
add
jge
fnstenv
popa
and
das
popa
jno
imul
cwde
ror
xchg
dec
cmp
cwde
cmc
xchg
out
imul
sbb
push
dec
ss
mov
cdq
fiadd
(bad)
cld
cmps
mov
clc
mov
push
or
mov
(bad)
mov
pushf
fisttp
dec
or
cmp
cmc
dec
add
mov
dec
mov
mov
fistp
inc
xor
pop
cs
out
cld
scas
adc
stos
in
lds
out
dec
add
xor
les
dec
aaa
js
pop
or
aam
stc
mov
jbe
inc
cmp
inc
xor
pop
adc
jae
pusha
cmp
xor
inc
cs
cmp
inc
mov
pushf
cmc
mov
dec
sub
pop
push
xor
iret
mov
fstp
jne
push
lds
add
test
mov
lahf
jo
pusha
or
inc
add
mov
mov
pop
xchg
bound
push
outs
sub
imul
ja
inc
pusha
sti
mov
mov
lods
fsub
mov
ficomp
les
mov
jno
and
sub
clc
data16
test
xchg
ja
and
mov
les
ins
adc
xor
inc
out
adc
push
push
ins
cmc
inc
xor
push
adc
mov
mov
movs
fld
and
dec
jmp
mov
bound
jp
mov
xchg
aam
out
add
cld
mov
pop
pop
push
pop
jne
mov
daa
dec
add
stos
fsubr
xor
rcr
sub
mov
adc
sub
jb
inc
or
jp
stos
xchg
inc
fcom
sti
jne
enter
and
out
pop
out
lods
into
mov
mov
dec
pop
fst
ret
sahf
xchg
jmp
das
pusha
and
jg
adc
cwde
hlt
(bad)
retf
gs
or
mov
fcomp
and
push
test
inc
add
inc
(bad)
xchg
mov
(bad)
pop
pushf
jle
outs
adc
js
xchg
cs
cmp
popa
es
shl
xchg
pop
nop
push
push
adc
and
mov
mov
lods
mov
je
and
xor
adc
or
add
popf
mov
add
mov
(bad)
xlat
xchg
(bad)
pop
add
sub
popa
cld
mov
pop
xor
out
sahf
jp
push
push
aas
jle
test
jp
je
adc
add
pop
sbb
jb
cdq
(bad)
xchg
shl
pop
sub
inc
add
push
jo
xchg
adc
clc
mov
aam
mov
cli
mov
or
add
xchg
movs
out
sub
sahf
rcl
(bad)
mov
and
or
fadd
mov
jo
push
cmp
dec
mov
and
add
push
push
cmp
mov
lahf
xor
js
xchg
and
mov
pop
test
mov
fimul
fcomp
mov
cli
mov
dec
push
dec
loop
fstp
ret
jmp
int3
out
or
sbb
inc
loopne
mov
icebp
mov
rcl
xor
and
sbb
xor
test
mov
test
fnstcw
in
stos
loope
loopne
dec
div
cmps
lds
daa
ins
add
outs
sbb
sub
xor
dec
add
fs
cmovge
and
add
pop
outs
sub
js
je
dec
sbb
out
ret
mov
sti
mov
xchg
rol
nop
repz
cmps
in
xor
out
call
lods
loop
les
jo
push
adc
inc
add
jno
pop
sbb
sbb
pop
adc
jl
repnz
mov
mov
xchg
out
clc
nop
shl
enter
hlt
inc
and
push
xor
jnp
and
dec
cmp
jno
push
pop
inc
or
popf
jmp
movs
aam
jecxz
leave
mov
mov
fbstp
outs
sub
or
addr16
and
aas
ins
das
pop
adc
cdq
fiadd
repz
mov
aam
in
jmp
je
ins
subps
jl
daa
pusha
aaa
pop
sub
add
jle
ins
add
or
arpl
inc
das
imul
adc
jge
pop
or
dec
add
js
push
and
and
popa
push
inc
adc
jl
pop
sbb
jb
pop
aas
jns
pop
xor
add
push
inc
adc
outs
and
inc
pop
jge
ins
(bad)
sub
dec
cmp
push
lock
lods
loop
sti
xor
jb
xor
jp
dec
adc
or
inc
add
inc
or
jae
ins
or
push
adc
data16
ins
push
inc
sub
js
dec
adc
pop
xor
cmps
jne
inc
sbb
or
inc
add
push
sub
cmp
xchg
int3
(bad)
fstp
aam
mov
fcom
add
push
adc
xor
dec
sbb
pop
push
pop
mov
push
adc
aas
jl
ins
or
ss
bound
mov
stos
fistp
popf
iret
mov
cmps
iret
add
sti
test
mov
lods
jmp
ins
sbb
inc
sbb
push
aaa
js
pop
sbb
push
xor
bound
inc
xor
push
add
sub
inc
add
mov
call
stos
call
mov
ficomp
call
cdq
fcmove
pushf
fmul
fstp
(bad)
mov
mov
xchg
loop
cld
(bad)
int3
mov
mov
stos
in
std
add
pop
cmp
jb
outs
sub
inc
xor
jns
pop
pop
jle
jb
dec
out
shl
mov
test
mov
stos
stc
mov
mov
pushf
int
in
(bad)
test
popf
les
into
mov
mov
or
jnp
pop
sbb
dec
or
popa
adc
imul
cs
stos
test
mov
xchg
cmc
mov
out
xor
in
xchg
jno
pop
out
not
inc
and
xchg
rcr
ins
das
pop
mov
adc
jl
pop
js
inc
adc
cmp
ret
mov
pushf
fild
clc
mov
mov
cmps
loope
icebp
xchg
fld
mov
cld
pop
in
call
call
xor
adc
les
out
test
out
ror
imul
icebp
test
mov
jbe
inc
push
pop
pop
push
and
cmc
lods
lds
nop
shr
cmp
cwde
mov
lahf
repz
dec
ds
add
jl
mov
xchg
aas
add
mov
inc
out
scas
cld
push
xor
loop
sub
fs
int3
inc
xor
pop
icebp
mov
in
cmp
mov
dec
add
mov
call
std
movs
cmps
cmc
imul
mov
pusha
in
stos
mov
jb
cmp
shl
fcom
mov
push
mov
sti
mov
adc
jb
sub
push
jp
xchg
or
and
push
dec
cmp
fwait
or
and
ret
cmp
or
nop
push
inc
jp
xchg
int
adc
cmps
lds
mov
(bad)
fstp
ret
movs
sbb
push
or
sub
dec
movq
cdq
retf
sahf
cli
mov
and
jo
and
cmp
ds
out
popf
lods
fcom
mov
xchg
int
shr
dec
or
mov
jg
and
sub
hlt
mov
fadd
aas
push
adc
mov
cmps
test
pop
repnz
xor
mov
loopne
mov
push
fdivr
arpl
out
stos
popf
cld
dec
or
jl
cwde
xchg
loope
add
test
test
mov
mov
dec
lods
call
push
je
popf
add
jne
idiv
retf
sbb
mov
(bad)
es
retf
add
out
and
lahf
pop
pop
icebp
mov
sbb
(bad)
cmp
imul
and
fs
fmul
js
cld
sub
ror
or
mov
or
fnstenv
dec
adc
sbb
fstp
js
frndint
xchg
dec
or
inc
jnp
(bad)
data16
mov
jno
adc
ss
imul
xchg
stc
repz
push
dec
or
xchg
xor
jl
sahf
jmp
push
sbb
ins
aas
xchg
repnz
ror
popa
sub
dec
out
call
push
adc
xchg
inc
cmp
pop
sub
mov
pop
add
ins
push
sbb
pop
push
or
xchg
(bad)
fnstenv
lds
jge
lahf
fldcw
mov
xchg
push
pop
and
or
mov
lods
out
cld
mov
lahf
frstor
mov
mov
hlt
nop
lock
test
test
pusha
adc
inc
add
dec
add
sbb
dec
cmp
cmp
dec
cmp
jmp
adc
pop
mov
sbb
add
ins
mov
sub
call
cmp
or
das
dec
or
dec
movs
pop
sub
sbb
pop
push
push
outs
(bad)
push
dec
or
dec
ss
mov
xchg
in
cli
mov
mov
and
push
pop
jbe
pop
push
int3
(bad)
mov
test
inc
xchg
stc
dec
test
mov
xchg
push
add
cld
mov
pushf
fimul
(bad)
mov
ret
mov
retf
(bad)
test
lahf
int3
and
nop
cmc
fstp
fdiv
call
stos
retf
xchg
mov
iret
scas
int3
(bad)
int
in
pushf
fiadd
fisttp
mov
pop
push
sbb
inc
sbb
pop
add
inc
and
jle
dec
movq
sbb
jb
pop
sbb
popa
and
inc
sbb
and
lahf
aam
retf
cmps
in
rol
popf
ror
clc
mov
mov
fcomp
sbb
pop
adc
ins
xor
push
imul
ds
push
adc
jno
data16
and
adc
pop
xor
jnp
js
push
pop
sub
cmp
ins
sub
push
xor
dec
push
ins
push
pop
add
aaa
jns
arpl
jae
pop
sub
jg
inc
cmp
jl
ja
pusha
pop
add
pop
adc
mov
imul
and
inc
xor
mov
dec
add
sti
ret
dec
xchg
xlat
jae
cmp
jmp
dec
aaa
hlt
call
cmps
and
cmc
xchg
lds
push
pop
cmp
in
(bad)
lahf
popf
xor
lock
pop
mov
movs
loop
outs
push
add
or
jecxz
imul
mov
sbb
push
les
pop
push
mov
push
push
stc
aas
mov
mov
pop
push
inc
fild
cwde
cli
or
je
retf
lea
add
enter
push
cmp
or
(bad)
hlt
and
pop
inc
add
ins
cmp
pop
jbe
adc
sub
xchg
sbb
retf
lods
loopne
bound
jle
cmp
ret
rol
nop
fidiv
stos
cmc
mov
xchg
imul
mov
cmc
test
cmp
add
out
mov
sbb
fimul
inc
mov
xchg
or
je
in
stc
xchg
shl
xor
xor
loop
stos
jmp
imul
pop
xchg
clc
popf
ja
push
xor
ins
push
aas
hlt
lds
imul
mov
xor
sbb
imul
aam
test
(bad)
fadd
push
fcmovne
xchg
cmp
or
sbb
out
lods
out
pop
inc
dec
push
cmp
loope
sar
xchg
aad
mov
scas
out
jp
dec
sbb
fsubrp
mov
push
inc
sub
into
cld
mov
mov
sub
mov
loope
inc
pushf
leave
test
xchg
into
test
mov
fstp
sub
mov
pop
test
sub
cmp
cmp
push
push
inc
daa
ja
dec
and
stc
mov
jmp
sbb
jmp
clc
(bad)
int3
xchg
in
test
test
idiv
shl
cld
(bad)
retf
xchg
sbb
js
popa
and
dec
pop
ja
cmp
pop
or
inc
sbb
pop
add
push
sub
les
(bad)
lahf
repnz
lahf
out
scas
fild
loope
mov
xchg
sti
mov
xchg
out
(bad)
add
xchg
fst
fstp
lock
pushf
fisubr
cmc
lahf
rcl
leave
stos
out
stos
loopne
(bad)
mov
std
mov
mov
or
inc
and
and
outs
pop
pop
das
jbe
cdq
fnsave
(bad)
mov
pop
xor
push
sbb
jno
pop
sbb
pusha
add
jo
jns
push
xor
js
data16
dec
cmp
or
add
pop
aas
outs
das
dec
sub
sub
bound
push
and
push
daa
addr16
add
jg
pop
sub
add
and
ja
pop
xor
pop
sbb
push
or
push
push
dec
cmp
or
pop
inc
cmp
jg
jae
dec
adc
dec
cmovnp
outs
push
pop
add
inc
sbb
outs
cmp
jbe
inc
pop
addr16
add
dec
cmp
push
adc
cdq
leave
mov
fst
fdiv
in
xchg
retf
mov
cwde
cli
mov
xchg
enter
icebp
xchg
hlt
mov
mov
mov
cmp
or
jbe
ins
cmp
pop
sbb
jge
dec
pop
addr16
add
arpl
inc
add
outs
sub
and
and
jne
or
data16
jbe
dec
add
cmps
pop
fs
adc
pop
mov
fiadd
fsubr
and
cmps
les
cld
movq
sub
and
sub
data16
and
cli
mov
dec
pushf
pop
nop/reserved
arpl
outs
adc
cli
mov
loope
fstp
test
xchg
cmp
cmp
xor
sbb
cmp
into
repz
test
pop
aas
in
fbstp
or
push
push
push
addr16
or
xchg
into
lods
jbe
cmp
cmp
retf
mov
pop
pop
adc
sbb
cld
mov
ror
mov
pop
jp
dec
mov
dec
add
imul
jmp
fcom
mov
cmps
call
inc
mov
(bad)
mov
daa
mov
cmp
in
iret
sub
fisubr
aam
out
mov
xchg
bound
popa
mov
test
imul
or
sahf
fadd
mov
pop
ja
stos
std
mov
cmps
or
mov
daa
mov
outs
das
iret
movs
sbb
call
and
push
outs
or
retf
mov
dec
mov
inc
add
leave
movs
in
sub
push
movs
xor
icebp
ror
jp
add
lock
dec
rol
mov
dec
jbe
jbe
call
out
push
adc
mov
jb
or
(bad)
inc
pop
sbb
or
lock
test
test
jmp
pop
popa
add
push
jne
and
jnp
shl
test
pusha
mov
xchg
inc
ins
add
sub
adc
jno
iret
in
(bad)
push
imul
iret
out
lods
(bad)
push
call
mov
push
dec
sub
rcr
mov
jg
dec
inc
xor
pop
adc
jno
cmp
dec
push
dec
sub
push
xor
ss
fs
push
dec
ds
fimul
(bad)
mov
out
add
into
fldcw
cmc
lods
loope
jmp
mov
in
cmp
movs
dec
add
or
popa
cmp
jo
arpl
jnp
dec
or
inc
push
pop
or
and
push
xor
inc
and
push
imul
bound
jne
push
sbb
jle
inc
push
push
ss
adc
jb
inc
pop
outs
das
pop
push
inc
or
pushw
inc
add
push
dec
sub
push
jno
jae
inc
xor
je
dec
add
push
cmp
xor
das
imul
or
fs
add
ins
cs
and
ins
add
pusha
adc
jge
gs
cmp
sbb
or
jl
push
xor
js
cwde
ror
rol
int3
mov
mov
movs
(bad)
cmps
loopne
out
xor
out
lahf
fild
cmp
push
adc
jp
pop
cmp
push
popa
pop
add
inc
sbb
dec
sub
or
cmp
sub
das
push
cmp
jle
popa
and
data16
push
add
inc
add
or
inc
sbb
pop
add
push
xor
adc
and
xor
aaa
jo
jg
gs
data16
sub
outs
and
pop
or
dec
or
add
dec
adc
push
or
pop
cmp
sbb
sub
cmp
aas
js
ja
ins
sub
popa
and
je
jo
inc
adc
sub
dec
cmp
adc
jae
pop
adc
pop
adc
xor
dec
push
pop
xor
push
sbb
add
sbb
dec
sbb
ja
pop
push
inc
es
dec
and
les
call
(bad)
movs
jecxz
cli
fwait
sets
test
mov
(bad)
mov
sub
xchg
into
push
mov
cmp
xchg
cwde
aas
cdq
into
push
fild
xchg
jge
shr
add
in
dec
jecxz
movs
loop
ins
xchg
out
pop
je
sub
(bad)
mov
or
test
fstp
push
xlat
or
xchg
lea
add
fnstcw
inc
dec
or
in
test
pusha
cmp
dec
push
add
ret
mov
add
jmp
fwait
pop
push
xor
aad
xlat
aaa
fwait
lds
rol
scas
jmp
jge
pop
lods
xor
xor
mov
pop
sbb
aam
into
cmp
sub
sbb
mov
mov
jne
add
sbb
sub
mov
xlat
xchg
hlt
add
enter
cwde
shr
call
outs
fcmove
xchg
or
addr16
mov
or
fidiv
es
push
xchg
jmp
gs
data16
mov
fs
test
pop
sub
icebp
shl
dec
es
lock
dec
push
pop
dec
rcl
mov
cmp
xor
test
hlt
pop
pop
adc
stos
adc
cld
mov
gs
pushf
ds
int3
sar
mov
fcmovne
mov
(bad)
xor
jo
jl
rep
int3
dec
jle
adc
outs
mov
ja
push
and
push
or
stc
ror
mov
(bad)
pop
xor
mov
add
bound
ins
out
fstp
adc
mov
fld
je
ret
mov
cmp
or
adc
add
xchg
lea
dec
imul
xor
cdq
hlt
mov
xchg
into
mov
xchg
call
sahf
icebp
movs
sbb
dec
add
push
pop
inc
xor
sbb
push
push
pop
ja
push
sbb
jbe
ja
ja
push
and
jl
addr16
je
pop
xor
addr16
push
push
ja
push
or
pop
sbb
ss
arpl
jae
push
push
jbe
jp
inc
push
push
ss
adc
jl
jnp
push
push
xor
addr16
dec
and
and
dec
push
ins
add
dec
and
inc
xor
push
adc
cmp
pop
cmp
dec
sub
dec
cmp
cmp
jb
pusha
add
sub
inc
push
cmp
jae
pusha
es
dec
aas
cdq
fadd
mov
shl
mov
call
aad
sbb
jg
jns
popa
add
inc
xor
das
pop
pop
outs
ss
addr16
dec
pop
or
jae
pusha
add
ficomp
loop
shl
retf
mov
into
lods
rol
xor
xchg
aam
clc
nop
ficomp
(bad)
retf
xchg
out
std
add
mov
call
movs
stc
mov
out
test
(bad)
scas
in
mov
test
movs
icebp
xchg
rol
lods
fistp
enter
cli
mov
xchg
ror
icebp
mov
mov
lds
les
leave
stos
clc
mov
jmp
xchg
aam
add
shl
shl
in
cld
mov
(bad)
mov
jmp
scas
iret
mov
xchg
lahf
fild
scas
out
mov
lods
loop
std
nop
ret
add
shr
nop
retf
popf
icebp
mov
mov
mov
mov
xchg
repz
mov
scas
call
lods
out
mov
mov
mov
mov
(bad)
cmps
loopne
out
test
add
sti
adc
nop
rcl
je
inc
add
sti
sbb
or
jmp
scas
(bad)
push
fld
outs
cmps
xor
ss
call
(bad)
push
sub
js
in
xchg
push
popf
(bad)
cdq
pop
jnp
jns
pop
das
dec
mov
(bad)
mov
imul
out
dec
ins
inc
sbb
mov
dec
sub
push
pop
mov
jmp
fcomi
mov
fldenv
mov
fwait
inc
cs
adc
push
or
inc
fmulp
adc
ins
pop
xor
cmc
cmps
les
mov
sub
pop
shl
push
in
call
rcl
mov
mov
mov
inc
ss
aad
(bad)
loope
push
sbb
mov
mov
cmp
mov
mov
push
mov
push
dec
mov
mov
daa
push
xchg
in
retf
cli
stos
outs
and
std
aad
in
and
js
adc
push
inc
xor
mov
scas
jbe
cs
sbb
cmp
rcl
pushf
cmp
enter
inc
and
clc
scas
in
outs
pop
cmovg
int3
add
arpl
dec
mov
ins
xor
mov
xchg
in
mov
fsub
cwde
ficomp
or
cmp
into
(bad)
out
daa
lods
std
sahf
jno
inc
das
out
fwait
jmp
popa
jns
dec
xchg
cs
jmp
fcomp
mov
mov
mov
sub
test
call
add
ficom
push
jmp
mov
add
inc
mov
in
mov
push
add
inc
mov
lea
int
test
push
leave
add
and
fidivr
pushf
inc
mov
pop
bound
mov
gs
xor
dec
daa
imul
or
adc
jp
jno
jb
inc
xor
jne
dec
add
pop
push
dec
and
inc
or
inc
sbb
pop
add
push
aaa
jnp
pop
adc
jl
push
sub
adc
jns
push
adc
jno
arpl
dec
pop
or
push
jp
js
imul
divps
ja
push
sbb
jle
jo
popa
sub
dec
or
pop
pop
or
and
push
xor
xchg
rcr
jmp
mov
mov
iret
(bad)
out
mov
(bad)
(bad)
lods
fcomp
fistp
retf
xchg
pushf
icebp
movs
sbb
pop
pop
push
cmp
push
daa
popw
inc
add
dec
pop
jns
inc
adc
push
or
cwde
jmp
mov
call
add
lds
(bad)
mov
mov
(bad)
fmul
rol
repz
fistp
sti
fwait
xlat
mov
mov
(bad)
fistp
(bad)
mov
loop
retf
mov
popf
icebp
mov
xchg
xlat
mov
mov
(bad)
out
stos
out
movs
retf
mov
out
cmc
cmps
out
retf
movs
in
mov
jmp
sar
mov
mov
int
out
mov
(bad)
(bad)
mov
lock
in
mov
jmp
div
(bad)
xchg
in
cli
mov
mov
leave
mov
sbb
gs
inc
pop
dec
and
dec
ds
dec
or
pop
adc
arpl
pusha
pop
adc
pop
push
inc
xor
add
pop
dec
add
inc
or
jne
sbb
pop
aaa
inc
add
or
inc
add
jns
ins
sub
push
sub
dec
add
dec
adc
dec
adc
inc
and
sub
or
adc
pop
push
push
pop
xor
ins
adc
push
adc
fild
add
data16
dec
cmp
push
dec
add
rcl
inc
pop
in
dec
adc
xor
mov
imul
std
mov
neg
mov
mov
icebp
sbb
xlat
cli
cwde
ficomp
or
sub
adc
jb
sub
add
add
test
and
adc
push
mov
cli
add
push
add
loop
shl
sbb
into
xor
test
pop
mov
push
sbb
pop
add
popa
pop
xor
ret
mov
movs
jge
sub
cmp
ret
std
stos
jmp
mov
xchg
fs
push
inc
mov
xchg
mov
adc
cmps
les
mov
mov
push
add
(bad)
pushf
hlt
xor
and
adc
(bad)
mov
cmovg
mov
call
mov
jle
pop
popa
cmp
(bad)
mov
mov
pop
add
retf
(bad)
retf
cmp
sbb
mov
es
mov
pop
dec
cs
int3
mov
mov
jb
adc
mov
xor
dec
push
ins
or
cmp
sar
mov
jmp
mov
aas
and
(bad)
fnstcw
push
ss
mov
sub
sub
jmp
aam
retf
or
mov
popa
mov
aad
mov
inc
xor
jnp
jmp
mov
adc
push
aaa
js
loop
les
cli
xchg
push
sbb
inc
sbb
vpsraw
ret
mov
imul
or
cmp
pop
or
and
inc
add
cdq
fnsave
out
xchg
xlat
xor
fiadd
scas
loopne
lock
(bad)
mov
std
nop
jecxz
icebp
test
mov
xchg
mov
xchg
mov
cmc
scas
fcom
loop
into
(bad)
out
sbb
inc
and
dec
aas
jle
push
push
jns
pop
adc
xor
inc
and
inc
or
jne
pop
add
pop
push
ss
pop
sbb
sbb
push
adc
and
inc
sub
arpl
inc
or
sub
push
add
and
ds
pop
sub
pop
adc
jle
ins
push
inc
sub
jno
inc
add
inc
add
dec
cmp
push
adc
pop
push
jo
jb
dec
sbb
pop
sbb
adc
inc
sbb
sub
cmp
outs
cmovae
xor
jo
pusha
sub
xor
outs
sub
jno
pop
aaa
jp
arpl
push
or
xor
addr16
push
adc
cmp
jle
jb
dec
sbb
pop
sbb
adc
jns
push
adc
js
outs
or
sub
sbb
or
cmovs
inc
sub
inc
aaa
ja
pop
sbb
add
inc
or
jo
pusha
add
bound
inc
sub
dec
or
pusha
xor
jl
addr16
adc
pop
push
push
pop
xor
pop
das
outs
pop
inc
add
or
dec
add
js
push
and
imul
push
cmp
or
sbb
adc
inc
add
or
inc
add
js
ja
dec
pop
pop
aas
pop
sbb
jae
inc
sbb
sub
or
pop
cmp
push
adc
push
xor
popa
pop
add
inc
sbb
push
cmp
sub
pop
adc
inc
cmp
ins
sub
cmp
sbb
push
cdq
std
mov
in
iret
mov
mov
xor
jmp
stos
repnz
stc
mov
out
icebp
lods
jmp
mov
movs
(bad)
mov
int
in
inc
inc
ja
sbb
call
lds
fstp
jl
(bad)
mov
clc
adc
not
inc
sbb
jmp
cmps
inc
push
or
cmp
push
dec
dec
push
or
push
sbb
cmps
inc
(bad)
retf
xor
xor
adc
rol
stos
into
or
repnz
stos
adc
sbb
jbe
js
out
mov
shl
stos
repnz
mov
adc
loope
xchg
icebp
mov
es
fnstsw
cdq
loop
fs
adc
aaa
sahf
fbld
mov
or
xor
lock
fisubr
div
stos
sti
sub
jae
dec
(bad)
sbb
loopne
push
adc
clc
mov
dec
fsubr
js
div
lahf
popa
inc
xor
mov
mov
mov
cs
retf
stc
aaa
jl
jns
call
lds
add
inc
mov
(bad)
loop
dec
and
adc
cli
mov
xchg
push
and
(bad)
shl
dec
stos
cmp
rol
shl
mov
dec
adc
test
mov
pop
adc
and
shl
cmp
div
cwde
xchg
pop
sub
jp
sub
icebp
mov
aas
mov
add
enter
data16
add
xor
mov
popa
add
or
fs
push
pop
add
push
sub
sti
lods
loopne
out
in
ret
mov
lods
rcl
jo
pop
push
push
add
jo
imul
and
cmp
and
push
jnp
push
xor
cdq
cli
test
and
in
into
mov
mov
xor
out
mov
jmp
xchg
jmp
sar
call
(bad)
mov
lods
loopne
fimul
mov
lods
loope
iret
mov
sahf
cld
mov
xchg
ror
icebp
test
cmc
mov
out
not
jecxz
rcl
sar
popf
loopne
sti
test
add
out
not
fsubr
jg
bound
jb
movs
iret
add
adc
jns
pop
sbb
jb
inc
xor
mov
mov
movs
lock
stc
add
inc
(bad)
(bad)
lods
fsub
mov
sbb
shl
cmps
cld
xchg
dec
or
aad
sar
cli
mov
xchg
dec
or
xlat
fild
ret
mov
dec
adc
stos
fadd
sti
xchg
fst
retf
test
fstp
imul
into
push
pop
add
sbb
lds
loopne
out
les
(bad)
xchg
aam
inc
and
xchg
into
mov
cld
mov
push
pop
or
mov
mov
jno
cld
mov
jnp
fistp
arpl
aad
icebp
mov
xor
cmps
or
sub
mov
lock
movs
dec
in
iret
adc
fcom
fadd
jb
push
adc
fdiv
jo
sbb
enter
sub
rcr
push
aam
in
xor
test
cmc
mov
adc
pusha
mov
call
xor
enter
jae
fs
mov
mov
sbb
iret
fsubr
push
cli
lods
loopne
jl
pop
pusha
xor
movs
stc
mov
aaa
pop
sub
outs
sub
cli
call
lock
lods
jb
jg
in
lods
test
test
repz
cmp
jne
adc
sti
mov
sub
loop
out
cmp
add
add
mov
pop
sub
mov
jp
std
fdivr
ins
mov
mov
add
gs
clc
mov
arpl
and
loop
pop
cmp
out
hlt
cs
pop
dec
lods
in
xchg
jne
repnz
imul
jo
cwde
std
cmp
pop
pop
fs
ja
jbe
push
and
jl
addr16
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
jne
push
sbb
add
jbe
ja
push
and
dec
(bad)
and
xor
jge
fs
push
push
jne
push
push
pop
xor
pop
sub
push
push
pop
adc
aaa
ins
subps
(bad)
call
scas
in
mov
div
(bad)
pushf
ficomp
aam
dec
cmp
mov
jecxz
stc
mov
dec
aas
jnp
std
mov
ret
adc
pop
adc
xchg
clc
loope
sbb
ss
sub
mov
mov
aaa
push
sbb
jle
mov
xchg
repnz
jnp
sub
enter
mov
cs
sub
ficomp
pop
inc
data16
cwde
add
or
ror
aas
int3
and
push
fstp
adc
hlt
cmp
jle
push
xchg
stos
sbb
add
js
ror
scas
pop
adc
lods
loope
shr
mov
sub
(bad)
loope
scas
call
arpl
jbe
leave
popf
shl
and
xchg
push
or
lahf
fisubr
add
xor
not
mov
adc
maxps
xor
push
movq
jle
jg
jno
push
and
or
sub
jnp
push
xor
outs
divps
jle
pop
push
push
cmp
sbb
push
inc
and
jno
js
push
xor
js
cwde
ror
fimul
ret
sbb
loope
out
mov
or
inc
xor
sar
clc
cmp
cmp
aas
jg
in
sub
pop
aad
cli
pop
mov
mov
mov
add
or
mov
mov
mov
ret
shr
in
int
call
mov
sbb
cmovnp
inc
sub
inc
ss
push
adc
cmp
imul
jae
inc
adc
sub
aaa
fs
cmp
push
sub
sub
adc
or
push
add
dec
and
push
sbb
pop
push
dec
es
add
or
pop
sbb
adc
sub
outs
sub
inc
xor
and
jg
sbb
push
sub
dec
pop
ja
sbb
pop
sub
dec
xor
pop
push
dec
das
arpl
js
outs
add
lea
inc
add
add
sbb
mov
sahf
jns
aam
inc
pushf
repz
popf
clc
ins
movs
xor
add
call
pop
mov
add
std
mov
imul
push
pop
jmp
lods
jmp
sub
xor
out
cmovo
(bad)
aas
popa
retf
shl
lods
ret
mov
ins
sub
cmp
push
adc
cmp
adc
imul
cmp
cmp
dec
cmp
push
adc
cmp
jg
jne
inc
or
dec
or
cdq
call
stos
hlt
test
call
jmp
xor
loope
leave
mov
int
in
mov
into
scas
int3
mov
mov
into
(bad)
(bad)
fcomp
rol
icebp
xchg
aad
shl
out
rol
lods
out
add
xlat
xchg
(bad)
into
mov
dec
mov
cli
mov
push
sub
push
add
cmp
mov
dec
inc
jp
loop
ret
nop
jb
xor
xor
pop
cmp
in
scas
jnp
dec
cmp
(bad)
xchg
xchg
aas
sub
movs
pop
add
repnz
xchg
fld
leave
xchg
clc
aaa
fld
push
lahf
fild
(bad)
xor
adc
dec
cmp
inc
and
dec
sub
push
xor
aaa
jle
and
sub
pusha
and
sub
dec
or
jp
js
imul
or
sub
inc
and
jle
dec
push
ins
add
dec
and
dec
xor
and
push
pop
push
ja
push
xor
xor
add
inc
sbb
dec
sub
pop
cmp
inc
and
daa
outs
add
aaa
bound
ja
dec
pop
popa
xchg
bound
aas
jmp
test
and
xlat
cmps
int3
cmp
mov
mov
mov
mov
dec
ds
sub
in
out
add
pop
movs
dec
cwde
and
fcomp
clc
enter
xchg
repz
sub
lds
mov
and
aam
fcom
stos
(bad)
ds
movs
fstp
call
lahf
int
mov
or
fcomp
loopne
enter
div
(bad)
cmps
(bad)
xchg
xlat
mov
xchg
aam
inc
lods
div
adc
inc
daa
ja
push
aaa
jo
or
cwde
in
mov
shl
ret
mov
jmp
in
std
mov
icebp
mov
pop
xor
js
pushw
push
push
je
inc
cmp
addr16
jae
pusha
and
rol
push
or
inc
add
std
in
stos
cmps
push
js
adc
daa
out
rcl
push
push
xor
popf
in
add
xor
lock
xor
bound
jbe
adc
scas
adc
fiadd
je
(bad)
cmps
(bad)
mov
je
cmps
sbb
xor
retf
sbb
bound
mov
mov
mov
rcl
xlat
ret
push
mov
pop
in
adc
test
ret
sbb
cmp
cmp
push
xor
or
or
je
ins
sub
pop
jns
dec
or
jnp
push
adc
sub
pop
adc
inc
add
and
adc
jnp
je
inc
adc
push
pop
push
sbb
pop
cmp
jne
outs
ds
push
cmp
pop
sbb
pop
sbb
dec
or
es
inc
add
push
(bad)
lahf
xlat
mov
adc
das
pop
movs
sub
push
dec
xchg
retf
sbb
inc
sub
cmps
cmc
mov
out
retf
xor
vpmulhw
dec
add
mov
dec
(bad)
lds
ret
pop
jno
push
push
adc
(bad)
mov
aas
dec
or
test
or
std
fdivr
ficom
sub
xor
mov
xchg
scas
pop
xor
jmp
add
adc
mov
outs
fidivr
retf
mov
jmp
stc
mov
mov
scas
(bad)
mov
rep
retf
fidivr
out
ror
mov
mov
nop
rcl
movs
loop
loope
(bad)
mov
lock
mov
jmp
aam
les
jecxz
aam
repnz
mov
sti
xchg
test
(bad)
stos
(bad)
cmp
out
sub
xor
mov
repz
in
mov
push
push
sbb
xchg
rep
enter
fcomi
fisttp
call
cmp
and
lds
jnp
push
nop
cli
mov
stc
neg
lods
not
ja
push
inc
pop
adc
add
cmps
div
xchg
outs
and
sub
mov
pushf
ror
mov
mov
dec
and
not
pop
mov
outs
add
inc
outs
subps
call
push
push
fs
jg
cmp
push
pop
dec
and
dec
sub
arpl
jae
outs
pop
pop
das
jbe
cdq
fidivr
xlat
mov
movs
stc
popf
fstp
fisubr
rcl
fiadd
cmc
mov
mov
enter
pushf
rol
add
leave
add
imul
mov
dec
lahf
cmp
cs
mov
neg
pushf
(bad)
(bad)
xchg
xlat
pushf
and
pop
xchg
sti
mov
call
add
mov
scas
out
in
sbb
sub
sbb
jbe
addr16
sub
cdq
in
add
jmp
rcl
(bad)
xor
sub
mov
scas
add
push
inc
and
ficom
cmp
add
xchg
(bad)
lahf
sub
xor
lods
rcr
fistp
scas
imul
sbb
mov
gs
jbe
dec
push
push
aaa
dec
push
dec
add
dec
add
cmp
adc
ins
add
add
jl
gs
cmovle
cdq
fld
mov
scas
into
lahf
fidivr
push
imul
adc
test
dec
or
int
scas
fcom
jle
lods
add
mov
outs
mov
xchg
loopne
dec
cmp
ins
pop
pop
dec
and
fistp
(bad)
out
or
mov
fldcw
imul
sbb
fnsave
mov
push
sti
ret
fadd
mul
jg
stos
out
fistp
dec
sub
or
mov
xchg
or
jp
adc
stos
out
(bad)
cli
fsubr
stos
das
inc
setns
inc
adc
fidivr
xchg
xchg
aad
jp
es
fistp
inc
and
retf
sub
fadd
int
aad
sbb
jl
cmp
and
push
xor
pop
outs
pop
jns
pusha
and
inc
sbb
sahf
fistp
(bad)
cmps
out
rol
add
mov
xlat
in
adc
test
push
out
loop
mov
fs
stos
jmp
out
std
adc
pop
ins
pop
sbb
or
cld
mov
xor
jecxz
rcl
mov
aaa
je
aaa
jle
push
mov
push
or
out
fiadd
mov
leave
enter
mov
lods
sar
out
mov
out
sbb
hlt
push
dec
dec
push
jmp
or
mov
mov
add
ja
pop
push
test
dec
push
stos
retf
stc
xchg
sbb
inc
xor
add
mov
cmc
mov
aam
pminsw
mov
loope
sbb
inc
daa
inc
add
add
add
aaa
inc
adc
inc
and
or
cdq
fnsave
inc
std
movs
out
hlt
xchg
(bad)
sub
push
aas
jnp
adc
(bad)
movs
movs
pusha
data16
sbb
lahf
iret
add
jp
retf
test
push
inc
lea
inc
sub
xor
sar
push
bound
or
and
std
mov
xchg
out
leave
xchg
rol
jmp
xchg
test
test
movs
aam
retf
mov
xchg
rol
je
pop
adc
push
pop
pop
xor
pop
cs
push
jns
outs
das
dec
add
cdq
(bad)
into
lods
sar
mov
mov
(bad)
leave
mov
sub
jle
dec
mov
inc
or
or
iret
loopne
shl
and
xor
shl
cs
push
movs
and
or
hlt
cmp
dec
sub
or
pop
add
cmp
sbb
jg
addr16
(bad)
mov
in
stos
jmp
cdq
in
mov
loope
scas
call
std
div
mov
sub
hlt
mov
xor
stos
jecxz
dec
dec
add
adc
cs
int3
mov
retf
and
push
movs
pop
ins
xor
xlat
xchg
div
ins
push
adc
aaa
mov
mov
aaa
ins
sub
jb
dec
or
adc
mov
(bad)
jbe
cmp
sub
stc
lods
icebp
pop
inc
cmp
or
pop
xor
pop
jns
or
cmp
movs
cmc
mov
mov
cdq
(bad)
mov
mov
outs
or
les
adc
cmp
cmc
fst
mov
cmp
mov
jo
xor
icebp
or
cmp
sbb
mov
xor
jecxz
jp
sub
movs
int3
sub
mov
dec
push
rol
shl
imul
and
int3
and
bound
ins
pushf
out
in
idiv
cmp
out
lods
pop
add
fadd
(bad)
xchg
xchg
jl
pop
mov
inc
add
or
repz
out
cmp
push
mov
(bad)
test
es
retf
mul
mov
jg
xor
mov
arpl
scas
loop
stc
pop
sahf
aad
cmp
push
popf
out
in
popa
adc
jae
popa
adc
sub
in
mov
xchg
mov
inc
xchg
xor
mov
mov
fbstp
xor
clc
mov
or
movs
(bad)
and
fdivr
into
sbb
xor
mov
stc
popf
pusha
ja
or
out
int
mov
(bad)
int
mov
xor
mov
cmps
lea
xor
sti
mov
arpl
cmp
in
jne
cmp
out
hlt
fldenv
pop
dec
das
push
fcmovb
mov
sub
fsubr
sbb
mov
jb
pop
addr16
sbb
sub
leave
retf
inc
jae
aaa
cld
std
xchg
lahf
inc
dec
or
iret
fst
int3
in
mov
or
mov
or
adc
push
xchg
dec
in
adc
xchg
cmps
pusha
jno
dec
xchg
in
ficom
and
cmp
jmp
push
sbb
add
inc
fld
adc
(bad)
sub
sar
cdq
or
loopne
mov
bound
dec
add
or
fild
push
(bad)
lods
les
mov
in
les
fwait
js
neg
out
jg
hlt
add
jmp
push
pop
add
and
addr16
mov
fcom
pusha
lock
add
sbb
pop
inc
pop
inc
cs
adc
aas
jno
pop
adc
gs
or
jno
call
(bad)
xchg
int3
mov
mov
rcr
cmps
div
call
shl
out
jmp
test
mov
mov
fwait
jmp
fild
cli
xchg
fcomp
(bad)
mov
mov
xchg
in
dec
hlt
test
loop
fimul
ret
imul
add
push
jge
xor
cmps
les
adc
jmp
or
call
mov
je
and
adc
push
inc
mov
mov
jp
repz
dec
jo
jbe
iret
xchg
aam
xchg
retf
sub
stc
ficom
rcl
xor
retf
movs
jmp
iret
aam
(bad)
ds
mov
imul
movs
sub
into
fsubr
xchg
xchg
in
ficom
mov
push
mov
xchg
shl
xchg
rcr
add
into
iret
mov
jns
xor
(bad)
loopne
gs
pop
daa
arpl
ret
jge
cs
(bad)
rcr
sbb
cli
mov
pop
inc
das
jl
cld
fnstenv
mov
mov
out
mov
mov
sahf
jmp
sub
mov
inc
xor
or
loop
test
adc
mov
or
mov
sbb
leave
stc
into
(bad)
(bad)
cmp
pop
mov
std
mov
push
push
pop
and
outs
inc
adc
call
adc
adc
cmps
lahf
xor
jne
lods
cmp
dec
sbb
lock
cmps
fs
ja
int3
shl
push
jmp
dec
xchg
pop
pop
sbb
cli
mov
xor
pop
xor
sub
mov
sbb
icebp
xchg
sbb
and
iret
dec
cwde
sub
push
mov
imul
jmp
sti
mov
nop
inc
(bad)
(bad)
mov
imul
out
fmul
ror
dec
adc
pusha
and
pushw
push
hlt
adc
data16
lods
or
fisubr
and
loopne
jle
inc
fs
outs
cmp
aad
test
lahf
dec
mov
adc
xor
adc
test
jg
cmp
mov
ror
ja
and
(bad)
aad
mov
imul
mov
inc
ficom
test
cmp
(bad)
xchg
test
xchg
fild
aad
lods
mov
and
sti
fisub
push
scas
ss
in
pushf
popf
aaa
mov
inc
fwait
add
ds
imul
cmp
std
mov
sub
cmc
push
cdq
out
mov
test
ror
xor
repz
dec
push
adc
in
xchg
(bad)
push
push
and
ror
(bad)
lods
jl
pop
sbb
pop
jp
or
rcl
lock
adc
(bad)
popf
retf
cmps
inc
push
add
out
stos
jmp
and
pop
mov
jno
loope
test
(bad)
jbe
aaa
outs
movs
add
add
in
popa
pop
pop
into
lock
pop
mov
xchg
push
dec
fldenv
inc
adc
xor
ja
icebp
stc
mov
push
inc
add
lods
out
(bad)
dec
pop
sub
loope
popf
retf
cmpxchg
imul
hlt
aaa
mov
outs
loope
retf
stos
movs
xchg
adc
ror
mov
jnp
push
fst
or
out
jmp
dec
mov
loopne
xchg
fs
rol
mov
mov
out
sahf
fistp
jmp
scas
not
mov
nop
loop
lock
in
mov
jmp
scas
int3
(bad)
int
in
sahf
fild
retf
fstp
retf
test
mov
repnz
loop
dec
jmp
mov
retf
stos
retf
sub
enter
lods
div
push
pop
dec
sub
xor
cwde
idiv
ret
mov
push
xchg
dec
add
movs
jae
daa
out
pop
adc
sbb
add
adc
es
pop
cmp
les
fidivr
mov
cmp
mov
dec
adc
ds
aad
cli
sub
test
xor
sbb
leave
test
add
mov
xchg
not
adc
pop
xchg
stc
lea
jae
lods
std
mov
push
add
mov
std
test
and
mov
push
dec
xor
adc
enter
pop
inc
and
stos
outs
jp
sbb
retf
push
pop
sub
call
addr16
ficomp
push
fdiv
jnp
(bad)
iret
lods
(bad)
or
add
push
xor
(bad)
xchg
sti
stos
enter
inc
aam
(bad)
mov
add
pop
dec
sub
lods
adc
out
sbb
int3
mov
jbe
jmp
mov
test
inc
fsin
mov
out
dec
pop
aaa
sbb
push
inc
fmul
fnsave
sbb
rcl
push
stos
cmp
lea
xchg
dec
pusha
bound
push
(bad)
ror
das
into
std
xchg
mov
ror
sbb
cld
or
call
xor
mov
mov
sbb
cmc
mov
aad
test
movs
push
cmp
mov
fbstp
pop
push
add
ss
sbb
imul
sub
mov
xchg
aas
push
test
pop
push
jecxz
into
mov
dec
call
int
mov
aad
loop
push
aaa
dec
sbb
inc
ss
and
mov
cs
sub
hlt
or
or
cli
mov
adc
sub
fild
scas
sar
lds
stos
pushf
xor
clc
pop
fadd
adc
sub
jmp
add
xor
xchg
add
jo
jmp
lahf
iret
push
mov
imul
jle
sbb
enter
push
and
call
jnp
sbb
test
loop
sbb
or
enter
mov
or
not
ror
mov
push
or
cli
lds
cmp
jecxz
scas
dec
imul
pop
sahf
sub
pop
call
push
call
in
cmp
retf
and
mov
and
push
dec
shl
stos
cmc
xor
jmp
pusha
fcmovb
add
test
mov
or
cmp
rol
neg
addr16
retf
movs
jmp
and
imul
in
or
je
pop
pop
xor
les
jge
cmp
repnz
inc
adc
daa
cld
les
cmp
shr
adc
or
(bad)
sub
mov
and
repz
inc
call
mov
sbb
or
lods
(bad)
mov
addr16
mov
mov
xor
rol
mov
out
sbb
inc
add
bound
dec
add
ins
and
jle
pusha
add
arpl
inc
ss
pop
adc
jno
cdq
std
mov
xchg
ror
stos
out
cmps
int
sti
cmps
leave
(bad)
(bad)
fstp
outs
das
je
pop
adc
push
pop
pop
xor
pop
cs
push
jns
outs
das
dec
add
cdq
ret
mov
mov
mov
loopne
shl
into
sub
out
rol
std
mov
mov
pop
push
push
stos
jl
neg
adc
add
(bad)
hlt
mov
dec
data16
jle
(bad)
nop
pop
popf
aad
mov
imul
repz
jp
xor
xchg
or
push
inc
push
(bad)
div
cmps
gs
(bad)
xlat
mov
push
and
mov
pop
mov
mov
mov
pop
pusha
push
sbb
movs
push
inc
mov
xchg
ret
mov
iret
cld
fst
mov
mov
adc
pushf
dec
das
jp
in
cmps
loopne
ss
cmp
cli
xchg
and
and
and
aam
jbe
je
xor
add
cdq
and
pop
mov
pop
(bad)
fld
dec
int
mov
aaa
xchg
scas
jge
xor
ret
add
or
sbb
xor
and
movq
enter
pop
and
(bad)
leave
iret
aam
xchg
or
stc
jmp
leave
leave
xchg
pop
pop
sub
xor
mov
popf
imul
jmp
mov
xchg
loopne
mov
adc
aad
ror
and
out
lods
xchg
dec
dec
or
xchg
jbe
sbb
(bad)
clc
mov
je
and
icebp
hlt
mov
add
mov
xor
lea
inc
pop
xchg
pop
xor
scas
adc
push
cmp
repnz
in
out
stos
in
movs
sbb
rol
out
std
cmps
cmp
cmp
pop
stc
sbb
xchg
retf
sub
jns
inc
xor
mov
sub
push
lds
jno
sub
mov
aaa
ja
pop
sbb
push
jne
mov
shl
mov
mov
cmps
dec
and
sar
into
xchg
pop
xor
fild
aam
and
lods
into
pushf
xchg
pop
sbb
or
adc
sbb
retf
adc
shl
std
xor
jecxz
fistp
mov
jp
loope
test
dec
popa
inc
pop
aam
shl
or
lahf
fist
and
in
mov
pop
and
xor
fwait
xor
test
lods
cmp
adc
inc
fiadd
mov
fs
mov
jg
not
xchg
xchg
xor
(bad)
movs
fst
add
ffreep
mov
or
sub
cmp
push
inc
call
adc
aaa
jl
xor
call
xchg
or
call
dec
add
stos
(bad)
mov
mov
cmps
clc
mov
jg
data16
movs
sbb
int3
adc
mov
(bad)
stos
push
popw
std
leave
test
pop
outs
sub
xor
xchg
fbld
and
adc
pop
push
not
mov
pop
das
push
psubd
mov
or
push
adc
ror
popa
in
mov
adc
popf
pop
adc
xor
cmp
add
or
test
inc
mov
mov
pop
xor
daa
inc
add
out
lahf
fnstcw
xchg
into
pop
lods
loop
popa
int
je
push
ins
push
inc
pop
dec
and
pop
and
mov
nop
sar
mov
cmp
mov
cmovle
pop
ds
push
adc
jnp
pop
cmp
or
fwait
in
mov
shl
int3
mov
jmp
xchg
(bad)
movs
(bad)
mov
jmp
fnstcw
loope
test
lods
ror
not
div
xor
push
push
scas
fistp
sbb
cwde
test
pusha
xor
xor
jecxz
mov
inc
add
or
xlat
repnz
lods
push
adc
adc
adc
inc
mov
dec
or
shr
test
jno
inc
xlat
mov
fadd
ror
jne
iret
mov
pop
dec
cmp
rol
test
mov
cmp
or
or
(bad)
cmps
leave
cmp
(bad)
mov
test
inc
das
sbb
and
sbb
push
ret
out
xchg
sti
mov
or
ret
xor
jl
hlt
movs
stc
ds
rcr
xchg
(bad)
pushf
je
push
inc
mov
outs
das
in
shr
mov
clc
fistp
xchg
sbb
adc
jmp
inc
pop
push
adc
ret
out
sar
jmp
xchg
mov
jnp
repnz
test
das
mul
into
lods
push
push
sbb
shr
or
mov
pusha
cli
std
mov
add
pop
mov
jno
imul
movs
push
je
and
cmc
mov
dec
pushf
out
outs
mov
aam
stos
dec
gs
sbb
arpl
repnz
pop
mov
ds
scas
cs
cld
mov
ja
jo
push
pop
ja
and
and
fld
push
cwde
fucompp
mov
cmps
sub
outs
mov
aaa
xlat
int3
test
in
popf
fidivr
push
dec
sbb
cmp
(bad)
test
ins
fbstp
sbb
les
jge
repz
pop
out
mov
pusha
(bad)
or
into
lods
hlt
mov
xor
add
ss
test
sahf
fst
inc
sub
or
mov
ds
dec
add
pop
gs
inc
popa
jbe
and
lock
ins
xlat
adc
or
or
xor
mov
cmp
or
sub
outs
aam
test
mov
push
add
aad
mov
xor
popa
(bad)
fidivr
pop
or
daa
add
push
arpl
aas
cmps
and
jecxz
mov
aaa
popf
aad
inc
adc
int
scas
stos
jnp
and
enter
js
adc
(bad)
mov
(bad)
jecxz
mov
mov
nop
rol
cmp
mov
xor
(bad)
imul
push
push
add
mov
push
sbb
repz
jmp
fild
mov
addr16
pusha
adc
pop
lahf
rol
imul
(bad)
ds
adc
fld
dec
stos
add
les
(bad)
loopne
jo
add
sbb
in
(bad)
mov
pop
and
aam
mov
pop
lahf
ficom
(bad)
shl
mov
fstp
push
jg
cmp
stos
rcl
test
fs
stos
sub
in
fisttp
test
test
push
outs
das
cmp
add
in
jnp
fcomi
xchg
mov
push
test
idiv
mov
push
mov
sub
jl
jl
sbb
add
test
mov
xor
xchg
repz
(bad)
or
cmp
outs
add
push
and
sub
pop
adc
jnp
push
imul
daa
or
inc
add
inc
or
cdq
std
sahf
ficomp
leave
mov
into
and
popf
(bad)
lods
out
mov
fcom
stc
(bad)
shl
sahf
jmp
div
icebp
pushf
loop
dec
jmp
mov
cli
popf
icebp
mov
aaa
mov
add
pop
lahf
imul
push
xchg
pop
ds
loope
jle
sub
jle
leave
adc
fcmovnb
fwait
mov
iret
xchg
push
jle
push
sbb
int3
mov
mov
mov
ins
sub
(bad)
in
lods
fs
sbb
ret
(bad)
int3
pop
and
sti
icebp
adc
mov
nop
jecxz
pop
es
fadd
xor
int3
mov
scas
push
jp
cmc
ret
mov
xor
sti
mov
fisub
dec
cs
rol
push
cli
sbb
fcomp
xchg
popa
inc
aas
jg
or
cmp
mov
inc
inc
aas
jl
xor
mov
inc
bound
jae
cmps
inc
stos
xor
adc
pop
aas
pop
xchg
loop
ins
jbe
inc
fbld
xor
int3
rcr
call
dec
add
aam
pushf
jg
inc
and
dec
popa
push
adc
loopne
hlt
inc
fwait
test
push
(bad)
fstp
test
cmc
inc
jno
and
fcmove
mov
cmp
sbb
cmp
push
and
movs
daa
addr16
sbb
in
(bad)
pushf
fistp
shl
mov
loop
stos
repnz
out
xor
inc
inc
dec
sbb
sub
enter
pop
(bad)
ret
cmp
mov
sbb
mov
adc
aas
inc
add
pusha
xchg
inc
inc
scas
iret
pusha
rcl
sbb
sbb
cmc
aaa
ja
sbb
mov
pop
cdq
ret
pop
cmp
adc
lahf
pushf
push
push
or
fnstenv
daa
bound
jg
or
pop
mov
test
mov
cmp
or
leave
repz
pop
ds
cmp
jns
and
jo
sub
(bad)
mov
fdiv
cdq
dec
ins
adc
cmp
cmc
dec
sub
ins
mov
imul
sbb
rcl
xchg
idiv
bound
cmp
add
mov
and
or
jecxz
jmp
pop
std
mov
sar
push
int
es
jmp
mov
in
ret
(bad)
mov
xchg
pop
push
xchg
fld
xchg
push
or
pusha
add
mov
movs
out
out
inc
shr
enter
cld
lahf
shl
dec
mov
or
into
mov
popf
jecxz
into
pushf
cs
xor
push
(bad)
ds
std
(bad)
mov
xchg
ins
sub
mov
push
adc
adc
fcomp
xchg
mov
mov
clc
scas
fadd
or
mov
sub
loopne
push
ja
stos
fld
ss
adc
adc
jg
inc
aaa
inc
add
out
inc
adc
das
popa
or
fcom
adc
pushw
jb
inc
xor
movs
out
push
xor
repnz
mov
mov
(bad)
retf
push
xor
ja
imul
sahf
fnstsw
push
sub
stos
leave
or
sub
inc
call
mov
mov
pop
in
clc
xchg
in
mov
mov
jo
lods
not
push
sbb
inc
and
shr
addr16
lock
mov
push
cwde
int
and
cmps
lds
arpl
leave
mov
sub
pop
cs
push
dec
inc
hlt
call
sbb
scas
ficomp
mov
bound
jp
rcl
mov
inc
aaa
push
jp
lock
stos
jbe
bound
push
cmc
mov
or
jbe
addr16
movs
std
fild
loope
and
jns
pop
cmp
mov
call
call
xchg
shl
retf
fisubr
and
push
fwait
clc
add
mov
(bad)
fcomp
push
bound
loop
repz
push
fisttp
clc
xor
push
cmp
cmps
xchg
fisubr
xor
mov
nop
repnz
clc
mov
cli
mov
jmp
rol
(bad)
andnps
xor
call
outs
mov
lds
fidivr
outs
xor
adc
mov
push
inc
fidivr
pop
cmp
mov
sub
push
pop
ds
shr
popf
into
lea
cmps
in
sub
pop
push
inc
xor
or
jl
dec
(bad)
(bad)
retf
sub
push
push
sbb
movs
int3
sti
mov
ret
mov
dec
cmp
dec
adc
jp
pop
pop
pop
gs
lods
gs
sub
jo
fcom
add
push
aam
pop
sub
xlat
jne
(bad)
cdq
stos
jmp
les
repz
popf
dec
sbb
clc
call
xor
jle
jmp
xchg
mov
mov
xchg
xlat
mov
cmc
inc
jp
and
jb
push
popa
cmp
sbb
sub
(bad)
retf
imul
xlat
lods
cmc
mov
subps
ret
lahf
int
in
(bad)
push
sbb
dec
cmp
sub
mov
xchg
js
aas
cdq
sti
test
dec
xchg
fistp
add
pop
add
inc
inc
out
jae
xor
inc
add
xchg
(bad)
int
jmp
aad
mov
sub
rcr
push
jns
pusha
sbb
fild
leave
pop
dec
sub
aas
std
mov
push
cmp
lahf
in
mov
loope
aad
rcr
sub
and
xchg
shr
cmc
mov
addr16
xchg
hlt
xlat
pop
inc
xor
arpl
shr
mov
mov
push
je
lock
jbe
mov
fist
in
dec
sub
add
cmp
imul
clc
jecxz
sbb
push
lods
lods
loopne
cld
add
adc
inc
and
sub
ja
xchg
mov
lods
fcomp
ss
jecxz
mov
jae
out
lea
cmp
xor
sbb
or
or
jmp
ficomp
jne
inc
xor
mov
sbb
xchg
ficomp
into
lods
jmp
and
or
retf
cdq
and
gs
sub
mov
jg
ret
scas
fisubr
aaa
jge
xchg
fdiv
inc
add
int
xchg
fldcw
je
inc
mov
std
scas
jmp
stc
stos
call
into
scas
fistp
dec
retf
data16
or
mov
lods
fdivp
mov
xchg
clc
mov
xchg
das
ins
cld
lds
call
adc
js
fs
push
xor
lods
cld
sbb
movs
cli
mov
pop
sbb
add
fs
jmp
lock
fwait
cmp
aad
xchg
mov
mov
cmp
xchg
pop
sbb
inc
add
imul
in
fiadd
arpl
pushf
in
iret
xchg
in
repnz
sahf
idiv
in
mov
retf
dec
dec
cs
out
xlat
movs
push
adc
sbb
call
push
mov
nop
or
xchg
mov
mov
or
imul
sbb
(bad)
ins
mov
jecxz
cdq
push
add
jae
int3
mov
pop
das
sahf
add
adc
push
inc
daa
ret
pop
inc
and
dec
add
xchg
loopne
xchg
enter
scas
in
or
es
add
dec
(bad)
jae
sbb
xchg
and
inc
test
pop
sbb
mov
xor
enter
sub
cmp
pop
inc
aas
pop
int
cld
(bad)
xlat
out
mov
mov
arpl
inc
add
std
dec
sub
or
jmp
mov
sbb
rep
fstp
mov
mov
mov
in
and
pusha
pop
jmp
mov
pop
pop
mov
enter
xchg
fsubr
sbb
es
retf
mov
mov
movs
add
(bad)
(bad)
stos
loope
sbb
cmc
cmps
in
daa
add
push
mov
push
adc
inc
dec
adc
and
jge
xchg
ficomp
(bad)
lods
jmp
cvttps2pi
mov
dec
lahf
fisttp
add
inc
add
scas
ficomp
or
adc
or
out
(bad)
movs
inc
sbb
dec
sub
xchg
fisttp
icebp
xchg
aad
xchg
fcmovne
(bad)
(bad)
loop
cmp
xchg
aam
clc
xchg
das
ins
fld
sti
mov
mov
(bad)
mov
fisttp
push
inc
mov
add
sub
cld
movs
mov
out
hlt
xchg
dec
or
cli
push
lods
in
clc
mov
xchg
adc
ins
add
mov
ja
pop
sbb
in
fmul
mov
sub
out
lods
jmp
popa
es
fsubr
mov
push
loop
int3
mov
pop
cwde
hlt
aaa
pop
jne
inc
sbb
push
cmp
iret
sub
pop
jne
push
push
cmps
mov
aas
dec
add
lahf
sar
fistp
out
pop
sbb
jo
enter
repnz
jmp
sub
push
cli
add
inc
cmps
lahf
enter
jecxz
ret
cmp
jb
inc
retf
jae
dec
dec
cmps
retf
mov
pop
cmovl
cmps
lds
and
xchg
iret
ret
or
inc
pop
dec
pop
nop
test
sahf
int3
mov
cmp
push
fistp
jp
pop
sub
scas
jno
je
dec
mov
scas
in
mov
add
mov
mov
jne
inc
push
push
inc
xor
mov
mov
pop
mov
sti
mov
xchg
cmp
retf
test
sub
jmp
mov
bound
xchg
cdq
fstp
jno
dec
adc
mov
push
xor
and
jns
scas
hlt
adc
popa
es
leave
xchg
mov
call
ins
subps
jl
fstp
outs
push
pop
dec
test
mov
add
jb
call
imul
xor
xchg
add
cdq
imul
in
sub
xchg
fcomp
cmp
jmp
pusha
mov
adc
jae
leave
mov
mov
fldenv
mov
pop
fdivr
scas
fist
ret
stos
adc
mov
push
ds
push
fidivr
and
dec
push
sbb
popf
sar
aas
jl
push
adc
sub
mov
ja
mov
xchg
ffree
dec
sbb
pop
cwde
fbstp
das
pop
sbb
jno
push
cmps
adc
repnz
mov
in
out
and
or
bound
and
mov
jl
jb
je
repnz
mov
or
lea
dec
push
pop
or
push
sbb
add
jo
xor
jne
push
retf
xchg
repz
inc
add
sub
sbb
mov
inc
das
pusha
fld
popa
daa
pusha
sub
mov
jle
push
retf
not
xor
mov
cmps
in
pop
sbb
(bad)
out
mov
fidiv
ror
inc
add
adc
pop
or
repnz
fcomp
mov
add
mov
mov
mov
(bad)
mov
and
pop
push
or
ja
addr16
inc
sbb
jmp
je
push
add
(bad)
int
sti
mov
mov
sbb
xchg
xlat
popf
jno
pop
or
mov
push
pop
sbb
clc
add
dec
and
cdq
push
sbb
cld
mov
mov
mov
push
xor
push
retf
cmp
ret
(bad)
out
inc
jmp
dec
mov
mov
mov
and
addr16
aaa
js
neg
dec
and
les
push
call
sahf
in
scas
out
(bad)
pop
cmc
push
push
adc
xchg
aad
sub
mov
outs
out
adc
repnz
push
add
test
out
push
mov
xchg
aam
dec
or
iret
mov
mov
fstp
movs
out
jl
ret
xchg
cli
mov
and
push
adc
mov
rcl
sahf
rol
inc
or
ficomp
in
retf
and
jbe
rcl
xchg
mov
xchg
mov
inc
sbb
cmp
repz
popf
jp
cmc
mov
mov
in
call
test
(bad)
ret
pop
into
xchg
cmc
xchg
pop
sbb
inc
ror
retf
test
je
pop
push
mov
xchg
cmc
mov
add
push
adc
and
xor
push
adc
push
gs
adc
fidivr
adc
jmp
aad
jle
cmp
xor
adc
mov
xor
cmps
leave
lahf
fst
cld
mov
jnp
push
(bad)
clc
mov
inc
sub
fisubr
xor
mov
test
out
mov
inc
or
popa
shl
pop
inc
add
or
inc
hlt
mov
mov
mov
stos
sub
mov
jg
out
test
mov
add
xor
or
imul
aad
lea
imul
test
add
jmp
out
mov
call
sub
jae
fwait
mov
jmp
cmps
iret
mov
pusha
pop
add
retf
inc
and
jmp
add
stos
pushf
xchg
or
sahf
fdivr
push
ins
aas
xor
cmp
sahf
ja
xor
arpl
je
dec
push
pop
pop
std
xchg
mov
push
rcl
inc
loopne
jmp
pop
push
xor
test
mov
xchg
pop
add
jmp
lock
out
xor
pop
sahf
(bad)
or
add
push
adc
jnp
xor
popf
hlt
mov
aad
dec
or
add
call
jmp
pop
mov
xchg
ficomp
or
dec
xchg
dec
adc
push
xchg
scas
mov
dec
cld
mov
mov
xor
repnz
call
adc
jb
sahf
frstor
aaa
xchg
stos
fisub
loop
aam
(bad)
stc
mov
frstor
xchg
repnz
push
dec
and
cs
movs
div
inc
sbb
out
hlt
mov
jns
into
xchg
aam
mov
dec
push
je
cmc
xchg
rcr
and
cmc
lods
out
mov
or
lock
fisttp
dec
xchg
rcl
or
test
adc
clc
stos
add
gs
jnp
aas
jecxz
shl
ds
pop
adc
popa
(bad)
push
push
dec
or
mov
cmps
arpl
mov
loop
jg
push
jecxz
ret
(bad)
xchg
xor
mov
mov
ficomp
mov
rol
inc
std
mov
in
lds
inc
adc
nop
sar
cmp
cmp
sub
xchg
xchg
(bad)
push
cdq
shl
add
fwait
pushf
mov
xor
and
fwait
daa
dec
or
outs
in
loope
loopne
lds
aas
addr16
std
fwait
aam
repnz
xchg
add
(bad)
pop
out
mov
cwde
fld
xor
inc
pcmpeqb
outs
sub
bound
dec
retf
xchg
mov
cmps
into
add
push
xor
stos
mov
sbb
sub
xchg
mov
inc
clc
scas
xor
stos
enter
jl
add
sub
jge
js
pop
pop
jle
(bad)
std
jge
ins
aad
(bad)
mov
mov
mov
jg
jmp
push
inc
es
test
(bad)
cmp
popf
add
shl
and
jno
mov
xchg
rcl
jbe
mov
imul
sbb
aaa
jno
movs
arpl
test
xor
pop
or
mov
fwait
aad
pop
retf
pop
(bad)
mov
sub
and
outs
mov
ins
sub
sub
cmc
jb
push
nop
(bad)
aas
call
cmp
xchg
pop
jle
lods
int3
scas
call
ja
pop
lahf
in
jno
xor
cmps
call
ins
sbb
fcomp
dec
push
gs
jo
jne
icebp
in
hlt
xchg
cmc
ds
pop
je
jmp
out
retf
and
xor
ret
mov
bound
push
or
mov
jns
adc
pusha
cmp
dec
test
add
xor
xlat
mov
popf
fild
and
dec
or
adc
shl
lods
hlt
aaa
(bad)
in
mov
sub
jle
retf
xor
stos
test
mov
test
mov
cmp
cdq
xchg
inc
and
push
aam
fs
jns
pop
sbb
cmps
sti
bound
ins
mov
jb
pop
stos
repz
ja
inc
jmp
push
xchg
shl
xor
push
rol
xor
adc
xlat
ds
cmps
jmp
(bad)
adc
int3
out
(bad)
xchg
not
push
js
jno
(bad)
pushf
stos
cmc
bound
imul
sbb
or
add
push
adc
movs
add
inc
xchg
sar
hlt
or
jno
in
(bad)
fwait
ja
rcpps
(bad)
out
adc
fadd
popa
inc
cmp
in
jmp
fiadd
dec
fsub
mov
lods
out
mov
add
and
ret
fisub
push
xchg
sar
aas
lock
shl
inc
(bad)
loope
xchg
int
jge
adc
mov
arpl
mov
xor
mov
cdq
(bad)
stos
leave
mov
push
dec
add
mov
movs
repz
(bad)
mov
ficom
pop
or
mov
cmps
loopne
imul
add
dec
sbb
stos
scas
rcl
loopne
sahf
mov
sub
jge
ret
adc
jle
(bad)
aas
gs
popa
cmovge
imul
mov
pop
std
jnp
lods
xlat
or
pop
cmp
mov
rol
jmp
mov
imul
out
pushf
fbstp
outs
rep
push
or
lock
out
test
addr16
and
mov
shr
xor
fnstcw
inc
xor
sub
or
daa
cwde
and
add
and
stos
jmp
fistp
adc
mov
push
int
fstp
or
pop
push
ret
xchg
mov
xchg
jno
rcl
push
or
shl
lods
out
sti
mov
sbb
dec
cli
mov
or
in
stc
mov
xor
push
or
movs
fist
dec
or
mov
stos
in
cmps
retf
arpl
test
push
neg
jle
cdq
sti
mov
add
les
out
in
test
push
in
js
repz
xlat
nop
pop
aaa
pop
retf
sbb
jmp
sbb
push
push
inc
shl
je
(bad)
sahf
(bad)
mov
rcr
mov
adc
push
lahf
mov
(bad)
rol
popa
xchg
fmul
xor
mov
dec
orps
mov
cmp
(bad)
out
popf
cmps
in
cmp
lods
out
mov
call
ret
lods
xchg
sub
sti
mov
lds
test
popf
dec
pop
push
dec
(bad)
loope
jp
add
jmp
bound
cmps
ret
mov
nop
cld
(bad)
int3
cmp
mov
in
mov
jle
mov
mov
repz
rcr
xor
fistp
push
clc
fwait
stc
mov
sbb
jno
mov
shl
cld
inc
adc
push
sbb
ja
daa
or
and
lds
cld
cmp
dec
sub
out
leave
movs
aad
mov
test
mov
int3
xchg
cmc
ss
pusha
jp
sar
aad
xchg
shl
imul
cmp
test
xlat
nop
fidiv
inc
fmul
outs
cmp
cmc
mov
sub
repnz
xchg
sub
mov
and
push
cmps
dec
and
push
add
jno
cmp
fistp
imul
add
jo
nop
fbstp
dec
ins
or
sub
shl
inc
mov
repnz
push
sbb
jecxz
fcom
ins
cs
repnz
xchg
cmps
enter
mov
sub
mov
aad
xlat
mov
inc
or
mov
pop
and
pop
fs
xchg
(bad)
pop
and
push
nop
repz
xor
in
mov
test
xor
fcomp
clc
xchg
sub
imul
adc
push
popf
cmp
pop
sub
mov
push
jp
cmp
jecxz
ficom
pop
sbb
icebp
mov
xchg
aam
inc
lds
retf
xlat
(bad)
int3
fcomp
mov
pusha
cmp
clc
fstp
call
out
in
jmp
int3
add
jns
sbb
push
mov
into
xchg
out
xlat
or
xor
dec
mov
leave
mov
cwde
xor
or
lds
jp
mov
adc
gs
or
fs
adc
test
xchg
jno
(bad)
mov
mov
rcl
cli
mov
(bad)
or
push
dec
sbb
and
or
(bad)
xchg
pushf
fcomp
adc
xchg
mov
mov
das
or
dec
sub
pusha
and
cmp
inc
sub
fs
leave
mov
push
mov
xchg
aad
push
cwde
arpl
push
sub
test
std
fwait
aam
jl
or
push
xor
test
pop
push
jne
sub
mov
out
je
es
pop
xchg
sub
mov
xchg
out
push
or
push
xor
push
retf
out
not
mov
test
xchg
cmp
dec
push
mov
xor
inc
and
inc
xor
cmps
in
pop
cli
xchg
cld
aaa
jmp
or
out
(bad)
ficomp
mov
mov
mov
sbb
loope
(bad)
movs
inc
adc
scas
and
fstp
inc
pop
retf
mov
jmp
xlat
cdq
fiadd
push
push
mov
and
out
sbb
xchg
retf
xchg
lods
std
sub
push
lds
std
xchg
rcr
ror
pop
push
es
mov
pop
inc
jbe
push
ret
mov
adc
call
cmp
add
lods
cmp
mov
push
js
outs
push
pop
xchg
dec
retf
imul
jns
dec
push
adc
dec
movs
sahf
sahf
repz
or
pop
(bad)
mov
mov
aas
sbb
shr
mov
push
lea
scas
inc
fisttp
ins
stc
outs
push
push
cdq
dec
add
push
add
popw
mov
rcl
jle
mov
xor
cmp
push
sbb
leave
mov
aam
mov
jbe
fisub
adc
mov
add
jns
adc
sub
pusha
pop
sbb
mov
jg
in
fist
cmp
cmp
mov
dec
mov
cwde
in
mov
out
bound
rcr
sbb
cld
into
xchg
jl
xchg
mov
inc
aam
clc
fxrstor
or
add
(bad)
cmp
scas
xor
into
sub
push
or
fiadd
pusha
add
xlat
aam
lds
ror
iret
fsubr
(bad)
repnz
sbb
jno
sbb
or
fidiv
dec
sbb
fild
cli
xor
or
adc
in
aad
xlat
cld
loop
push
cwde
adc
pop
dec
cmp
push
lock
jmp
add
xor
(bad)
pop
nop
repz
ins
xlat
mov
jmp
push
inc
dec
fdiv
push
stos
xor
cwde
outs
call
xsaveopt
movs
pop
dec
cs
push
cmp
and
jl
cmp
sub
sub
jp
std
xchg
lock
inc
scas
adc
arpl
and
and
pop
fdiv
call
pushf
(bad)
repz
pop
fstp
xor
pop
out
sbb
fidiv
xchg
inc
std
mov
mov
or
pop
dec
call
mov
in
mov
fcomp
in
je
aad
inc
jnp
sub
(bad)
pop
das
gs
cdq
push
fwait
pop
icebp
test
mov
adc
pop
ret
mov
sub
sub
inc
sbb
dec
inc
push
ja
mov
lds
das
(bad)
cmps
adc
retf
dec
bound
jge
push
out
mov
and
sub
test
in
cdq
popa
cmp
push
movs
ja
inc
into
scas
cld
add
xchg
cmp
fimul
ret
pop
movs
sbb
(bad)
jmp
cmp
nop
(bad)
xor
out
xchg
je
or
sbb
imul
ss
cmp
push
ror
inc
push
inc
jnp
movs
mov
mov
scas
push
and
outs
jb
or
test
scas
rol
lods
mov
pop
mov
or
inc
rcr
lock
lea
mov
cli
sub
nop
xor
pop
sahf
or
mov
dec
int
push
adc
cmps
shl
sbb
mov
sbb
mul
inc
push
adc
fisub
jl
mov
sub
inc
mov
outs
pop
dec
div
cmps
adc
hlt
mov
ins
jle
ja
pop
mov
in
mov
xchg
fistp
xchg
add
push
loop
retf
out
in
rcl
out
adc
rcr
scas
aam
inc
push
jecxz
jmp
loop
cmp
mov
pop
mov
int3
sahf
jbe
sar
cmp
out
and
ins
pop
inc
lock
adc
mov
xchg
loope
daa
movs
xchg
push
(bad)
test
lods
aas
aaa
stos
jg
fdivr
nop
mov
sbb
jns
mov
push
fisubr
ss
jmpw
jmp
adc
xchg
dec
pop
jbe
dec
outs
loope
dec
sbb
popa
mov
xchg
das
into
inc
sub
pop
sbb
les
clc
ja
xchg
push
and
cmp
das
loop
add
xrelease
xchg
cmc
rcr
in
add
rcl
or
scas
arpl
push
(bad)
mov
mov
stos
je
test
push
lods
cmps
jo
jns
int
(bad)
aad
jmp
push
jo
adc
ret
retf
retf
scas
xor
dec
dec
xchg
mov
aad
dec
outs
call
and
cmp
sub
arpl
test
scas
xlat
(bad)
and
aam
jno
pop
out
cwde
mov
in
ret
adc
stos
hlt
xor
cmc
test
sbb
ret
stc
pop
out
test
cmp
imul
sub
jmp
cmp
push
ins
mov
push
clc
and
(bad)
loopne
and
mov
out
mov
add
addr16
or
scas
and
stc
and
gs
hlt
pop
out
les
fwait
outs
rcl
pusha
cmp
xchg
pop
lods
pop
xchg
mov
jle
cwde
push
mov
adc
in
dec
xor
push
nop
mov
pusha
test
jl
pop
retf
gs
push
adc
jmp
inc
xchg
add
mov
cmp
mov
inc
ja
sbb
pop
idiv
jecxz
mov
repnz
(bad)
sub
mov
out
cmp
pop
inc
lods
add
loope
jno
push
xchg
lea
or
xor
or
aas
inc
mov
out
(bad)
jle
adc
popfw
adc
fild
mov
in
lods
pop
mov
mov
ds
ret
sbb
mov
dec
popf
retf
je
imul
mov
mov
jne
jae
mov
fst
add
in
mov
loop
jecxz
add
aaa
add
jmp
adc
jmp
mov
outs
jl
inc
cli
cdq
push
ins
test
mov
pop
stc
popa
lods
pop
cmc
sti
daa
lahf
in
xchg
fisttp
lea
jns
nop
mov
mov
jecxz
push
xor
xchg
push
adc
ja
fisttp
cld
popa
mov
cmp
jb
jg
mov
mov
repz
rcr
nop
call
add
inc
jne
test
xor
mov
mov
jbe
(bad)
aam
mov
out
rcr
mov
repz
test
ss
cmp
fiadd
inc
rol
ja
mov
jl
add
lods
pop
rol
bound
movs
cwde
adc
add
dec
jno
adc
jns
mov
pop
pop
mov
and
cs
inc
pop
int3
xchg
shr
or
lds
and
sbb
jo
pop
jle
and
xchg
addr16
cmc
mov
pop
inc
out
retf
jb
adc
scas
test
jne
pop
sbb
lahf
sub
push
or
nop
adc
push
mov
sbb
add
jecxz
ret
aam
pop
dec
(bad)
jo
bound
rcr
pushf
xchg
inc
and
inc
cli
jns
hlt
rcl
sub
pop
sub
push
mov
ss
add
ror
xor
xor
mov
ret
xor
mov
ret
cmp
xchg
pop
jnp
sub
sub
mov
xor
mov
les
sbb
mov
icebp
cmp
push
lock
or
into
and
stos
shr
scas
dec
rcl
movs
add
jae
retf
mov
arpl
push
jae
fidivr
call
cmp
jecxz
clc
sub
arpl
and
mov
and
adc
lea
popf
xchg
adc
fwait
dec
jmp
mov
aam
mov
out
dec
jb
call
mov
dec
stos
rcl
xor
cmps
adc
bound
popa
mov
rol
xor
leave
sub
rol
ror
pop
mov
inc
inc
(bad)
mov
mov
jne
push
mov
or
xor
jne
xchg
popf
xchg
push
add
mov
int3
clc
ret
cmp
cdq
cmp
pop
scas
scas
dec
or
lock
xlat
out
loope
pop
cmp
add
daa
xor
sub
inc
mov
mov
xchg
adc
xchg
and
or
jg
inc
out
inc
mov
das
cmps
jbe
(bad)
adc
adc
out
popa
into
cmp
mov
dec
xor
adc
std
xchg
add
add
cs
je
sbb
fdivr
adc
xchg
fidivr
ret
not
fistp
mov
(bad)
push
adc
mov
mov
sub
shr
stos
lods
jecxz
sub
fldcw
mov
xor
xchg
(bad)
out
mov
retf
xor
in
lahf
and
pop
shl
loope
mov
mov
xor
or
dec
ja
push
arpl
mov
xor
add
repnz
gs
xor
(bad)
push
sub
stos
push
mov
ins
test
outs
stos
fdiv
add
xchg
push
push
pop
ret
push
fsub
imul
lods
xlat
shl
loop
sbb
and
jbe
outs
ins
aad
dec
adc
sub
inc
movs
push
sbb
xchg
adc
ins
daa
pop
int
mov
mov
xchg
mov
dec
push
nop
xchg
pop
or
scas
int
mov
xor
push
daa
adc
retf
(bad)
out
xchg
shl
push
mov
std
xlat
shr
and
jg
cs
stos
shl
xor
pop
sbb
pusha
mov
xor
xor
xchg
mov
ins
xchg
repnz
mov
not
out
out
xlat
cmp
mov
cmps
icebp
adc
cdq
dec
enter
add
(bad)
not
sub
pop
in
pop
sub
scas
in
retf
add
gs
jae
inc
mov
cmps
cmp
pop
rcl
lock
adc
add
mov
rcl
cmc
ret
repnz
test
cwde
fbld
jnp
sahf
push
into
push
jmp
sbb
(bad)
test
ret
int
and
push
imul
lea
adc
push
jno
fisubr
scas
or
mov
dec
lahf
in
and
mov
pop
outs
and
sub
inc
int
mov
sbb
stos
xor
dec
je
into
sub
rol
jmp
out
call
inc
sbb
fisttp
aam
add
mov
inc
add
loopne
mov
in
xchg
in
mov
movs
icebp
imul
(bad)
scas
int
sbb
std
pop
mov
test
pushf
test
retf
or
xor
xchg
call
or
push
leave
pop
scas
outs
ficomp
xor
xlat
mov
int
loop
sub
add
jmp
sbb
(bad)
loope
inc
in
lahf
pop
mov
call
adc
mov
inc
xor
mov
imul
daa
shl
mul
pop
and
inc
repz
lock
aam
imul
test
ret
bound
pop
pop
mov
mov
repnz
test
mov
out
in
jns
fild
mov
add
pop
imul
pop
mov
shl
data16
push
mov
pop
sub
lock
mov
dec
out
push
or
jg
jmp
pop
jmp
sahf
pop
add
sbb
dec
cli
pop
push
dec
or
inc
mov
lahf
sbb
or
ret
loopne
out
sbb
or
test
mov
pop
jno
into
cmp
mov
push
xlat
mov
stos
(bad)
push
mov
cli
xor
int
loop
call
sub
jp
fild
outs
cmps
fucomp
into
mov
jmp
sbb
push
shl
xchg
frstor
add
cmp
mov
mov
inc
int3
sbb
xor
mov
pop
push
mov
test
out
push
cmps
mov
(bad)
repz
cmp
inc
ficomp
mov
mov
adc
add
hlt
sti
dec
sub
mov
aas
fcomp
in
mov
inc
das
dec
mov
cli
jg
scas
xchg
out
sti
mov
cmp
ror
or
out
in
add
shr
loop
cmps
test
int
mov
or
pusha
push
dec
lea
retf
inc
stos
dec
ins
imul
out
and
std
loop
cwde
cmp
xor
sar
sub
imul
mov
inc
xchg
jns
mov
das
cmp
adc
aaa
mov
rol
retf
shl
xor
add
inc
cmp
mov
loopne
inc
xor
fpatan
and
xchg
jns
and
ficomp
je
or
sub
push
les
pop
pushf
jmp
add
cmp
mov
push
jnp
movs
sti
ror
lds
xchg
and
dec
(bad)
lds
jmp
and
fdiv
sti
jae
jbe
jno
and
mov
xor
add
icebp
jne
push
iret
inc
jmp
test
rol
ret
rcl
(bad)
aas
cmps
push
fistp
hlt
cmp
sub
dec
mov
add
(bad)
les
hlt
jmp
inc
retf
jle
jp
nop
stc
rcl
sahf
mov
or
lds
aas
adc
sub
push
div
jecxz
sbb
or
xchg
xchg
jge
jne
or
test
jecxz
push
add
ds
retf
pusha
push
xor
pop
jmp
cmps
or
mov
cs
dec
(bad)
hlt
cli
mov
mov
cmp
stc
inc
pop
(bad)
popf
mov
mov
sub
jbe
bound
pop
mov
(bad)
xor
sbb
clc
pop
pop
push
test
mov
dec
mov
and
js
xchg
or
and
les
fild
sub
movs
enter
mov
clc
xchg
repnz
rol
xchg
inc
mov
into
ffreep
mov
pop
movs
jae
dec
test
ja
clc
mov
pop
rcr
aaa
jmp
leave
mov
popa
cdq
loope
pop
pop
jnp
(bad)
push
cmp
nop
jb
mov
pop
out
shl
je
cli
imul
lea
fstp
test
mov
pop
pop
push
mov
inc
add
jmp
inc
dec
pop
jl
fsub
and
mov
jmp
inc
add
fimul
mov
push
cmp
mov
movs
pop
add
push
adc
fs
or
cld
ror
int3
sub
xchg
pop
sub
xchg
or
xchg
xor
retf
jl
lea
int3
xchg
jge
jae
psubusb
iret
retf
in
das
push
mov
int3
aaa
xchg
ss
xor
jle
pop
stc
aaa
inc
dec
int3
cli
clc
das
sub
lods
xor
ret
mov
xchg
clc
(bad)
out
push
mov
adc
inc
rol
inc
mov
aas
sbb
xchg
jmp
ror
aam
outs
sbb
push
mov
jmp
popa
nop
xchg
ins
loope
sahf
mov
lahf
push
inc
js
mov
cmp
mov
(bad)
mov
xchg
mov
or
rol
mov
retf
ss
jge
(bad)
xchg
push
sbb
es
aas
xchg
cli
adc
and
xchg
repnz
push
lahf
cld
ja
add
and
loope
test
adc
jne
sub
std
outs
shl
add
loopne
inc
dec
out
push
jo
cli
and
jmp
cmp
and
mov
mov
hlt
dec
fdiv
jo
jle
cmp
adc
jae
push
mov
out
cmps
xchg
fsub
push
or
hlt
loopne
hlt
dec
jo
push
lea
pop
loopne
cmps
fstp
pushf
push
dec
push
mov
pop
push
lods
and
ss
lock
stos
fimul
push
das
jne
imul
adc
adc
mov
fbld
into
inc
les
stc
iret
dec
and
pusha
push
test
inc
xchg
aad
inc
xchg
cli
fs
pop
out
sub
lea
jo
neg
mov
and
bound
clc
add
loopne
outs
add
icebp
scas
push
out
push
inc
inc
mov
or
mov
inc
movs
fstp
mov
sub
mov
mov
sub
pop
or
sbb
test
add
loope
test
xchg
pop
adc
push
cwde
inc
scas
xchg
pop
mov
cdq
cwde
inc
dec
das
retf
push
shl
out
or
xchg
ins
repnz
push
ins
jo
das
cmp
das
(bad)
shl
jbe
xchg
enter
cs
pop
xor
xor
adc
mov
inc
aad
push
push
jb
adc
mov
repnz
int
mov
xchg
push
test
nop
mov
sbb
pop
ja
aaa
mov
aas
(bad)
cmp
mov
sub
(bad)
sahf
mov
mov
(bad)
out
(bad)
call
js
addr16
int3
jge
fwait
mov
outs
cmp
lods
(bad)
les
imul
rcl
lods
mov
je
adc
sahf
push
in
(bad)
loope
xor
out
xchg
enter
dec
ret
jmp
test
pop
xchg
sub
movs
xor
pushf
idiv
(bad)
inc
jnp
cmp
dec
pop
das
sbb
(bad)
dec
fs
into
call
mov
push
imul
pop
hlt
sbb
cmp
jo
cmp
rcl
sub
enter
xchg
add
stos
test
and
in
push
enter
lea
xchg
lods
sub
pop
and
mov
clc
mov
cmp
test
add
mov
cmp
xor
dec
addr16
dec
je
inc
sar
push
f2xm1
fnstcw
mov
inc
sub
xor
test
or
jmp
and
inc
sub
xchg
inc
hlt
xchg
imul
add
gs
pushf
fwait
out
dec
xor
imul
int3
shr
mov
fidiv
ret
adc
aad
clc
adc
outs
and
loopne
fs
sub
add
data16
mov
out
fs
jge
adc
in
and
dec
jmp
mov
jnp
outs
dec
or
cmp
loopne
addr16
pop
and
outs
push
stos
cld
mov
mov
call
mov
in
dec
push
ret
ins
mov
jb
mov
mov
cld
arpl
cld
or
dec
out
mov
cmp
icebp
push
jp
lahf
je
pop
(bad)
cmps
movs
jae
inc
movs
int3
cmp
mov
xchg
add
imul
int3
cmp
pop
cmp
mov
ret
adc
mov
mov
pop
enter
(bad)
cmps
jmp
das
retf
fisttp
xchg
mov
and
movs
bnd
(bad)
test
mov
mov
push
int
and
scas
xchg
aas
jmp
dec
fisub
lds
sbb
movs
cdq
jecxz
push
(bad)
xchg
push
cli
push
lds
mov
rcr
int
dec
xchg
pop
sub
ficom
jle
in
(bad)
fwait
ror
and
add
xchg
fild
xchg
dec
(bad)
and
or
movs
jl
and
sar
cmps
aas
retf
inc
out
fs
jecxz
mov
nop
pop
cs
push
xchg
je
sbb
dec
or
sub
xlat
sahf
loopne
mov
ror
hlt
repz
jg
pop
or
cmp
int
loope
mov
inc
cwde
fidivr
push
cs
fsubp
mov
push
das
jg
retf
adc
repz
push
xor
lock
sbb
pop
and
inc
dec
(bad)
xor
add
add
inc
daa
es
out
sbb
or
push
loope
iret
gs
push
icebp
adc
mov
push
add
sbb
jge
mov
scas
jg
mov
mov
jge
pop
jecxz
in
lods
inc
into
cmp
test
xchg
fnsave
mov
or
jne
push
cmp
dec
or
xor
sub
inc
or
sbb
xor
jg
xor
sbb
dec
adc
xor
jmp
dec
nop
lahf
fsubr
xchg
test
lea
and
mov
cmp
stc
adc
stos
in
lods
retf
jnp
mov
aad
leave
mov
daa
pop
call
mov
mov
jmp
jle
xchg
into
xchg
inc
mov
cmp
adc
mov
gs
jo
push
ds
dec
sbb
into
lods
iret
xchg
push
(bad)
loope
shl
movs
mov
add
mov
test
mov
stc
mov
cmc
test
aam
retf
or
lods
lds
mov
lahf
push
mov
push
ins
cs
psubq
pusha
xor
jl
push
xor
(bad)
std
mov
jge
sti
mov
(bad)
popf
mov
movs
(bad)
pushf
ficomp
dec
add
sbb
daa
imul
inc
or
sub
in
nop
cmp
or
adc
cmp
rcl
arpl
sti
xor
popf
adc
adc
dec
mov
or
sbb
or
mov
mov
movs
int3
mov
or
jnp
xor
inc
mov
sub
ds
test
shl
test
lods
retf
pop
push
sti
arpl
xchg
fdiv
mov
jle
outs
xchg
rcr
cli
mov
loop
sar
cmp
inc
cmovne
popa
and
xor
lock
push
inc
sub
xor
inc
leave
stos
scas
lahf
fcomp
ret
jo
push
(bad)
std
(bad)
rcr
loopne
rcr
push
jp
cmp
retf
loop
pop
jl
inc
(bad)
mov
jecxz
(bad)
test
movs
cli
mov
xchg
cmps
loop
out
(bad)
ret
aaa
add
inc
add
mov
scas
movs
add
rcr
popa
xor
xchg
xchg
(bad)
mov
xchg
or
mov
fld
xor
stos
repz
lods
div
dec
ds
xchg
retf
cdq
fstp
in
cmp
xchg
neg
dec
mov
push
xor
pop
push
add
jns
mov
jl
jbe
dec
inc
add
jnp
xor
in
and
pop
pop
pusha
leave
pop
adc
sub
xor
or
jge
dec
sub
pop
push
pop
pop
push
aas
xor
ds
push
adc
popa
cs
or
adc
dec
sub
loop
xor
loop
fild
scas
in
mov
mov
mov
mov
inc
and
pop
lea
pop
bound
xchg
xlat
dec
adc
out
mov
stc
mov
pop
call
fldenv
xor
dec
out
mov
push
sub
jg
cmc
sub
dec
ja
dec
mov
xor
cdq
shl
sbb
xlat
jno
sbb
inc
and
or
(bad)
outs
sub
lods
mov
sub
jmp
sar
pop
mov
add
stos
je
mov
fwait
xor
xchg
jb
mov
mov
and
dec
movs
xchg
std
mov
sti
inc
lock
and
add
call
lods
mov
xchg
sti
push
ds
in
aam
shl
sub
cwde
jmp
fnstcw
popf
jae
jg
inc
adc
add
inc
lds
icebp
sbb
test
pop
shl
not
mov
mov
movs
aad
aam
mov
dec
(bad)
movs
neg
std
adc
movs
cld
mov
push
push
dec
pop
daa
stc
sub
sbb
jle
cmc
cdq
cmc
mov
cmp
mov
xchg
iret
cmp
mov
mov
fdivr
ds
push
pop
sub
out
rol
into
(bad)
shl
ja
xchg
dec
mov
stos
cmps
xlat
mov
pusha
das
and
test
repz
mov
aaa
(bad)
mov
jb
or
ins
out
popf
rol
imul
mov
mov
popf
pusha
and
(bad)
fcomp
scas
cmc
xchg
rol
rcr
pop
jle
iret
or
and
add
int3
and
mov
outs
sbb
cld
arpl
inc
int
cmc
cmps
fnstcw
adc
jp
es
clc
lahf
add
push
mov
and
push
(bad)
fs
xchg
in
rcl
mov
xchg
pop
cmp
fldcw
fnstenv
sar
pop
push
or
pop
cmovns
inc
and
sbb
imul
dec
mov
mov
fwait
clc
call
cli
xchg
fbld
rol
mov
popf
ret
dec
sub
mov
adc
sub
inc
out
jne
dec
sub
and
jno
xchg
stos
lods
fld
xor
sti
inc
out
mov
sbb
xchg
inc
add
dec
add
addr16
ins
xor
imul
out
loopne
xrelease
push
aas
ja
fnstcw
sbb
ja
inc
ss
pop
imul
ins
aaa
sub
ja
cmps
loopne
in
inc
xor
stos
fld
xor
and
shl
mov
mov
fldenv
xchg
hlt
mov
sbb
mov
xchg
fisttp
sub
test
test
lods
not
sbb
sbb
pand
inc
cs
sub
adc
ss
aaa
jnp
xchg
std
(bad)
shl
mov
dec
repz
movntps
cmp
jo
rcr
push
cmp
dec
cmp
and
sub
push
add
out
mov
mov
xor
push
xchg
aam
rcl
aaa
jle
jbe
jecxz
imul
into
arpl
and
imul
and
fstp
test
jl
pusha
add
cmp
xchg
shl
and
pop
xor
jo
push
sbb
and
pop
hlt
mov
xchg
out
movs
leave
mov
inc
or
dec
das
in
jb
dec
push
jo
and
and
mov
test
cmp
leave
push
(bad)
pushf
ficomp
mov
pop
clc
scas
int3
xor
aam
outs
add
int
fmul
mov
xor
fnstsw
les
sti
mov
pop
sub
stos
jmp
retf
call
mov
xchg
in
les
mov
cld
mov
xchg
fistp
add
jnp
push
adc
pop
dec
or
jne
push
xor
push
sub
mov
inc
das
out
dec
sqrtps
mov
ds
fiadd
cli
test
or
mov
aad
cmc
xchg
inc
xchg
cmps
fdivr
(bad)
mov
mov
xchg
sub
das
stos
loopne
cli
and
fidiv
int
out
xchg
fcom
scas
ret
mov
sub
loopne
xlat
pop
pop
push
xor
es
push
xor
es
ins
add
mov
int3
sahf
cmps
jo
fist
les
mov
or
xor
fdivr
cdq
pop
mov
test
mov
fcomp
pop
push
std
(bad)
cdq
fimul
std
mov
jmp
call
(bad)
popf
inc
jnp
inc
sbb
or
ja
bound
cmps
lahf
int
repnz
mov
mov
cli
sub
mov
add
loopne
cmp
aaa
arpl
or
jmp
std
lahf
int3
(bad)
in
mov
mov
(bad)
ficomp
shr
mov
repz
pop
ss
inc
xor
into
cmp
push
adc
push
xchg
push
or
dec
xor
fcomp
push
and
dec
add
and
jge
inc
sbb
pop
cmp
loopne
sar
int3
call
nop
mov
ds
or
retf
popf
neg
or
or
pop
stos
aaa
je
jnp
and
je
les
pop
add
mov
push
cmp
imul
rcr
inc
add
xor
out
bound
jnp
sar
js
pop
push
jp
dec
jmp
mov
repnz
fiadd
test
xchg
push
push
es
test
pop
push
or
ins
cmp
xor
pushf
lds
mov
gs
push
jne
add
jnp
inc
jmp
jne
dec
sbb
xor
jmp
adc
and
mov
mov
mov
pushf
lods
jo
imul
shl
ss
or
ds
ja
jp
pop
sbb
ins
sub
sub
je
pop
ret
inc
scas
jnp
fst
mov
add
xlat
sub
cwde
sar
call
clc
mov
mov
push
in
mov
jo
push
jns
inc
stc
cmp
inc
push
push
(bad)
inc
adc
sbb
in
ret
enter
or
jnp
jno
sub
mov
data16
sub
xor
(bad)
int3
mov
(bad)
xor
pop
icebp
xchg
div
ds
dec
push
pop
push
dec
mov
mov
fstp
cmp
outs
ss
sbb
mov
sahf
mov
mov
imul
jp
and
jg
mov
mov
jg
jle
sub
jp
sbb
lods
fiadd
lds
or
jbe
ss
add
and
push
and
jne
and
adc
sbb
(bad)
in
mov
shl
pop
cmp
lods
mov
or
inc
add
inc
mov
sub
jle
jns
dec
mov
ds
and
loopne
sti
mov
(bad)
addr16
push
ss
mov
loop
(bad)
xchg
icebp
mov
jle
dec
sbb
out
lods
jno
rcr
ins
and
cwde
mov
or
daa
sbb
js
popa
or
dec
sub
jg
jae
inc
cmp
cmp
sub
jmp
add
and
xchg
shl
jmp
mov
push
retf
mov
mov
add
repnz
jg
jg
sub
inc
cs
jmp
aad
retf
fwait
outs
and
scas
int
jmp
or
add
push
pop
cs
popa
inc
es
jne
pusha
add
jg
push
jg
push
push
adc
pop
pop
(bad)
mov
scas
test
nop
rcr
daa
xor
or
mov
add
mov
scas
retf
test
ror
loopne
mov
movs
stc
mov
jl
and
mov
xchg
fld
es
or
push
in
push
popf
lds
movs
xchg
and
rcl
fwait
clc
mov
in
xchg
sbb
je
out
xor
pop
xor
dec
sbb
add
jne
fstp
cdq
push
outs
and
rol
jge
or
mov
out
scas
adc
xor
and
sub
adc
cmps
call
es
inc
and
das
dec
in
mov
xchg
leave
pop
sbb
adc
popa
push
pop
loopne
add
add
pop
out
int
xchg
cmc
mov
lods
mov
mov
aad
mov
cmp
imul
mov
rol
jne
mov
pushf
jmp
mov
mov
ds
mov
cwde
sahf
lock
ss
imul
sub
mov
push
sub
sahf
(bad)
mov
add
inc
or
jae
loopne
imul
push
imul
jo
ins
or
loop
std
ds
xchg
data16
dec
cmp
or
or
inc
mov
movs
enter
ds
pop
scas
jnp
push
push
imul
cmp
jno
retf
mov
xchg
div
mov
xor
or
mov
sub
fcomp
in
popf
ins
cs
or
inc
icebp
sahf
shl
jge
add
dec
sub
xor
adc
js
dec
pop
shl
mov
popf
sar
sbb
dec
pushf
call
lods
neg
dec
fisub
(bad)
adc
sub
push
sbb
mov
lea
test
xor
xchg
ror
outs
stos
(bad)
test
rol
push
or
scas
scas
mul
movs
adc
inc
jmp
mov
xchg
cmp
out
xlat
mov
sub
inc
pop
dec
push
pop
ds
sbb
jnp
cs
sub
nop
shr
xlat
cwde
(bad)
jle
cld
lahf
mov
shl
icebp
mov
mov
or
mov
sub
xchg
icebp
xchg
mov
pushf
jg
dec
out
iret
mov
addr16
test
pushf
mov
cmps
lds
lods
mov
xchg
not
call
adc
cld
add
mov
push
es
sub
in
pop
mov
add
dec
or
adc
std
and
and
stc
in
mov
into
lods
iret
xchg
inc
or
pop
pop
hlt
ja
imul
std
popf
mov
adc
js
jmp
cmp
cmp
leave
mov
sbb
push
and
pop
iret
popa
cld
xor
add
sar
pop
or
push
push
cmp
push
adc
add
dec
mov
push
or
add
pop
(bad)
pop
rol
gs
or
jne
pause
repnz
xchg
ficomp
adc
enter
lds
and
add
cmp
push
test
nop
shr
cmp
call
push
jbe
dec
hlt
pop
dec
push
and
and
push
xor
gs
push
dec
add
xchg
scas
call
fisub
jne
ins
adc
mov
inc
dec
loop
cld
mov
and
mov
mov
mov
mov
mov
jo
inc
ret
je
mov
xchg
fidiv
inc
adc
inc
pop
stos
loope
std
inc
sbb
and
and
mov
or
dec
outs
sub
jns
inc
xor
add
in
dec
sub
popa
and
sub
js
and
sbb
or
pop
ror
in
test
ins
add
int
stos
loope
push
cdq
pop
sbb
pop
adc
sbb
(bad)
pushf
std
mov
add
ds
adc
or
push
xor
dec
daa
push
test
ficom
ja
(bad)
mov
stos
dec
add
aam
ins
sub
push
fistp
pop
or
hlt
(bad)
mov
mov
sub
push
retf
fs
inc
adc
inc
pop
es
mov
xchg
lods
shl
pushf
mov
xor
fwait
(bad)
jno
sub
dec
push
pop
repz
test
xor
movs
dec
ja
data16
mov
pop
ins
cs
sub
aas
jne
jne
in
lock
fs
(bad)
xchg
test
xor
lahf
fcom
(bad)
xchg
dec
test
mov
sti
adc
repz
fisubr
inc
adc
test
scas
xlat
xchg
into
lods
rcl
cmp
in
sahf
mov
fst
outs
jmp
jmp
scas
fistp
or
jno
xor
dec
call
in
mov
iret
mov
xchg
int
mov
push
pop
cmp
loop
dec
es
sti
mov
push
outs
sub
scas
repz
aam
repnz
ficomp
jo
push
fcom
mov
movs
jnp
dec
adc
dec
fs
fstcw
cs
jmp
lods
push
dec
ins
sub
add
call
aad
push
xor
outs
xor
push
repz
sbb
push
xor
ret
mov
xchg
cmps
lds
sar
xor
aad
retf
outs
sbb
pop
or
push
rol
pop
push
ins
add
cmp
jns
jns
pop
or
mov
cwde
movs
fwait
enter
fcomp
retf
mov
xchg
nop
ror
shl
test
cli
inc
and
lahf
sub
and
jb
adc
or
mov
fimul
(bad)
cdq
fimul
dec
repnz
addr16
cdq
rcl
xor
imul
cmps
sti
fs
mov
out
cld
xchg
inc
jecxz
rol
mov
mov
jno
or
push
das
pop
jmp
jp
es
in
mov
(bad)
mov
push
je
inc
xor
pop
sbb
imul
das
jl
leave
or
dec
rol
inc
sbb
xor
or
and
andnps
int
fcomp
daa
pusha
xor
dec
pop
fs
stc
mov
movs
jmp
sbb
aaa
jnp
and
dec
imul
pop
inc
fisttp
js
(bad)
sbb
add
pop
out
rol
xchg
int3
add
popf
fiadd
es
lods
mov
stos
imul
push
jp
movs
push
push
jb
aas
jne
mov
inc
add
cmp
imul
pop
and
push
dec
std
mov
stc
mov
or
and
cmps
retf
mov
loopne
in
mov
iret
mov
pushf
push
js
pop
sub
dec
adc
mov
js
je
push
add
push
je
jno
jbe
popa
cmp
xchg
aam
mov
dec
out
or
sub
jge
jle
pop
cmp
or
push
(bad)
pop
adc
std
or
inc
and
xor
xchg
out
mov
sub
mov
sbb
jbe
jae
daa
push
jo
pop
aaa
je
(bad)
out
icebp
cwde
aad
mov
xor
fcomp
push
pop
push
int
in
lds
jnp
(bad)
hlt
mov
mov
mov
pop
xchg
fild
pop
xor
push
fistp
cmp
add
push
add
adc
das
ins
psllq
retf
pushf
out
mov
in
mov
add
or
dec
ror
push
cmovb
test
mov
lods
(bad)
mov
ret
and
add
sbb
xor
sub
cmps
out
mov
call
cli
daa
int
jecxz
pop
dec
adc
mov
xchg
add
mov
aad
cmp
leave
xchg
lods
aad
jecxz
cmps
lds
rcl
mov
jns
imul
outs
and
cmp
pop
sbb
jo
jle
xor
out
sbb
rcpps
iret
jb
add
outs
or
lods
fcom
push
and
push
test
sub
aad
call
pushf
jo
outs
sbb
jb
aaa
mov
loopne
les
pusha
add
dec
call
sbb
sub
push
add
mov
sub
bound
cmp
add
adc
popa
push
cli
mov
mov
fld
bound
inc
jmp
(bad)
mov
inc
arpl
pop
or
rcl
mov
xor
cmp
mov
popa
and
lock
cld
xchg
add
dec
repnz
mov
add
jle
xor
mov
xor
stos
cli
jle
cmp
mov
int
hlt
xchg
fstp
aaa
je
aad
adc
ror
shr
in
retf
push
mov
ds
jle
les
in
pushf
jnp
add
(bad)
mov
mov
ds
sbb
(bad)
out
sahf
movs
cli
xchg
dec
sub
ins
sub
iret
xchg
icebp
mov
adc
sub
ins
xor
dec
dec
or
pushf
or
js
sbb
pop
sub
ja
cmp
lahf
push
cmp
jne
pop
pop
daa
outs
(bad)
addr16
pop
sbb
pop
or
mov
(bad)
int
jae
jne
cmp
mov
movs
jno
push
xchg
rcr
ficomp
pop
pop
sbb
jnp
jmp
cmc
pushf
fild
jp
add
xchg
push
add
or
jbe
lods
jp
xchg
jo
cmp
pop
push
mov
stos
mov
mov
jle
pushf
inc
into
jbe
add
cdq
(bad)
leave
add
loope
adc
and
stos
pushf
arpl
iret
xor
jno
popf
je
xchg
inc
lea
jle
mov
ret
and
lock
(bad)
sub
xor
ss
jl
fwait
sub
xchg
mov
lds
retf
hlt
inc
hlt
inc
movs
mov
stc
dec
rcl
mov
pop
lods
xchg
jle
jne
or
add
and
call
inc
adc
in
push
in
popf
dec
xchg
stos
gs
mov
sub
dec
in
fld
push
or
push
retf
add
inc
fimul
call
loope
clc
pop
rcl
arpl
stos
jbe
daa
sbb
dec
fnstenv
into
or
pop
mov
dec
mov
rcl
mov
jmp
xor
mov
mov
arpl
inc
mov
adc
pop
xchg
fdiv
pop
jmp
aad
mov
mov
test
fnstenv
push
in
push
sar
push
inc
lods
push
xor
sbb
pop
out
pop
adc
adc
add
sbb
dec
cld
push
lds
or
push
cli
aaa
or
add
(bad)
cmp
cs
inc
retf
ja
and
sub
xor
add
enter
out
inc
ret
push
iret
js
push
cld
inc
push
sub
sbb
push
fst
push
mov
daa
sbb
sub
xor
jmp
int
mov
mov
jg
mov
fnstsw
lds
jecxz
push
sar
fcom
clc
xchg
loop
test
inc
stos
mov
mov
dec
mov
cdq
js
xor
pop
xchg
mov
cmp
les
div
mov
int
mov
xchg
jge
xchg
pop
mov
repnz
repnz
retf
xor
cmp
jbe
pop
stc
push
lods
mov
and
icebp
add
and
mov
fcomp
dec
xchg
js
dec
adc
pop
or
out
or
fs
pop
fisttp
(bad)
mov
mov
xchg
inc
movs
xlat
ds
mov
imul
dec
aam
in
mov
imul
clc
daa
fs
imul
sbb
xor
push
enter
jbe
xor
jg
retf
imul
(bad)
sub
in
inc
test
pop
mov
push
sub
push
mov
or
in
and
stc
cmp
or
xor
mov
dec
xchg
inc
ficomp
jb
and
sub
or
sub
mov
or
xor
mov
rol
xlat
sub
jmp
(bad)
xor
add
add
or
dec
enter
inc
lods
push
repnz
sbb
pop
(bad)
or
xlat
ins
rol
out
ss
adc
pop
fild
xor
xchg
lods
xchg
mov
out
(bad)
mov
sti
mov
inc
ret
push
sub
push
mov
xchg
inc
stc
dec
clc
stos
xchg
push
fiadd
cli
sub
cmc
or
push
test
jbe
sub
call
fwait
imul
int
mov
ins
cmp
repnz
mov
repz
lods
mov
mov
js
xor
lock
mov
(bad)
fiadd
sbb
push
or
sub
in
pop
mul
call
adc
repz
test
jns
je
xor
and
sbb
and
sub
repz
dec
fbstp
sbb
cs
mov
int3
cmp
loop
ror
out
inc
aam
or
or
cmc
inc
sbb
pop
retf
push
mov
imul
cdq
mov
stc
push
fsubr
ret
inc
scas
push
pop
mov
imul
sub
mov
inc
add
dec
rol
jg
and
pop
or
sub
push
test
xlat
add
jmp
mov
mov
xchg
jbe
add
aaa
cmc
xor
inc
mov
jmp
fs
dec
lds
or
and
or
pop
or
dec
mov
or
or
dec
test
inc
fdiv
jmp
mov
mov
stos
outs
ficomp
sbb
jae
mov
das
les
cld
imul
pop
cmc
push
or
adc
pop
retf
push
out
pop
cli
inc
scas
mov
ja
xor
in
dec
cmps
xchg
(bad)
pop
mov
ds
pop
enter
pop
sub
push
xor
shl
push
icebp
and
inc
fistp
repz
stos
arpl
and
adc
out
(bad)
pop
cmps
data16
dec
sbb
cmp
jge
xor
cmp
add
loope
nop
ins
fdivr
sbb
int
jmp
scas
jb
(bad)
aad
mov
dec
add
repz
mov
adc
push
ret
cmp
daa
or
sbb
and
sbb
or
loopne
neg
lahf
jae
fistp
sar
xchg
inc
in
or
push
retf
ss
push
mov
pop
mov
imul
and
ds
daa
fimul
cmp
jmp
jbe
or
fidivr
mov
sbb
push
stos
sahf
dec
adc
sbb
push
cld
sub
cmp
jno
pop
mov
xlat
add
ja
sahf
bound
mov
xor
mov
fstp
jne
jae
add
les
out
repnz
aas
call
sub
mov
enter
cmp
imul
or
enter
sti
dec
test
xlat
and
jb
adc
xlat
pop
test
inc
leave
and
les
adc
mov
pop
fdivr
or
mov
mov
pop
sti
xor
loope
sbb
jno
js
shl
dec
mov
lock
test
pop
mov
mov
pop
mov
or
ret
pop
int
sbb
call
jge
aas
adc
jecxz
stos
js
mov
rcl
icebp
inc
lds
add
cmp
jne
jbe
xchg
xlat
sub
sbb
sbb
add
push
add
jmp
fst
mov
imul
hlt
and
icebp
inc
cli
sub
or
je
jo
push
ficom
mov
sub
add
stos
adc
mov
(bad)
je
dec
fistp
into
push
shr
dec
lods
mov
mov
pop
retf
jle
push
icebp
and
data16
dec
aam
in
iret
cmp
cmp
jge
mov
mov
imul
adc
sbb
pop
adc
pop
mov
les
push
fimul
(bad)
shr
or
adc
in
rcl
and
hlt
dec
enter
cmp
xor
mov
xchg
mov
adc
pop
lock
std
jle
pop
mov
popa
fisub
and
xor
cmp
and
icebp
inc
cli
sub
or
jns
push
cli
inc
int
cmps
mov
mov
xchg
jp
arpl
inc
mov
dec
mov
xchg
inc
add
(bad)
xor
jmp
inc
loope
mov
mov
(bad)
int3
mov
sub
jg
sbb
dec
aam
mov
mov
mov
inc
shl
sub
and
sbb
dec
(bad)
pop
fadd
inc
fist
xchg
xor
mov
jo
xor
push
sbb
add
push
mov
shl
add
aas
jns
jp
(bad)
call
xchg
popa
sti
dec
stc
jae
lods
mov
jl
mov
repnz
addr16
push
cmps
mov
xchg
ret
pop
xchg
lahf
(bad)
lock
aas
add
push
loopne
adc
dec
mov
ja
sub
mov
lods
mov
mov
dec
cli
jle
push
mov
addr16
pop
ret
push
xor
aaa
add
or
sahf
ins
cmps
mov
outs
fst
fwait
stc
dec
(bad)
sub
pop
lods
mov
xchg
mov
dec
mov
pop
loopne
shr
mov
xlat
jae
inc
mov
mov
stos
mov
hlt
push
les
xchg
cdq
mov
rcr
std
jno
aaa
sbb
jmp
mov
stos
jmp
cmp
jp
mov
push
dec
fadd
inc
movs
stos
mov
add
sub
jnp
inc
ficom
cmp
dec
shl
cmps
(bad)
jp
or
xchg
jge
sbb
pop
fisttp
sbb
push
ret
xor
mov
repnz
xchg
nop
pusha
mov
sar
xor
adc
jecxz
stc
and
pmuludq
sub
push
mov
sub
and
out
lods
fwait
inc
aad
div
fwait
inc
aam
adc
sub
sub
call
mov
lods
xchg
gs
jbe
cmp
and
sub
aaa
adc
sahf
js
jo
das
or
sbb
shr
in
push
mov
mov
xor
sub
aas
add
aas
cmp
mov
out
fdivr
in
(bad)
pop
movs
data16
and
cmp
cmps
mov
imul
mov
inc
add
je
mov
(bad)
lock
sbb
jns
call
mov
call
popf
addr16
jnp
mov
bnd
xchg
pushf
lea
inc
shr
sbb
push
(bad)
mov
int3
and
test
xchg
or
pop
fisttp
or
aam
out
mov
mov
test
push
rol
test
(bad)
pop
retf
and
inc
movs
sub
cmc
inc
leave
ja
and
cmc
js
test
daa
adc
loop
rcl
pop
sar
in
xlat
(bad)
popf
cwde
shl
jmp
inc
inc
ss
aaa
outs
stos
add
push
cmp
dec
les
pop
cmps
lahf
mov
and
mov
xchg
mov
mov
and
cmp
out
cmps
xchg
push
ror
jp
dec
sar
inc
out
push
adc
loop
std
dec
shr
push
pop
or
push
fnstsw
out
mov
cli
outs
movs
cmps
data16
inc
adc
out
je
pop
xlat
push
xor
out
les
push
(bad)
xor
add
inc
call
mov
repz
(bad)
mov
inc
in
fcomp
lods
call
dec
cmc
pop
scas
mov
dec
clc
jl
pop
stos
popf
xchg
xchg
(bad)
jae
repz
loopne
fbstp
or
dec
ret
dec
iret
pop
cmps
or
scas
mov
sub
dec
cli
dec
movs
xlat
and
dec
fistp
dec
aad
les
lahf
int3
dec
(bad)
gs
inc
movs
xchg
mov
jge
dec
leave
sub
push
in
cmps
nop
fistp
jno
js
(bad)
gs
jbe
add
or
out
das
cmp
loop
push
in
(bad)
cmp
inc
sar
jno
inc
dec
ins
das
out
xlat
dec
fadd
mov
xchg
fwait
and
fidivr
and
or
sub
push
aam
or
ja
push
rol
mov
lea
mov
dec
hlt
push
ror
push
adc
dec
loopne
xor
adc
jns
cs
jg
pop
mov
test
sbb
push
loop
test
cmps
mov
movs
test
hlt
sub
mov
mov
pop
push
pop
les
add
add
out
xchg
mov
loop
int
clc
jo
and
sbb
push
repz
push
cmp
jecxz
shl
nop
push
sub
and
movhps
loope
hlt
dec
loopne
add
test
shl
or
adc
push
js
xchg
stos
mov
nop
sar
jl
jge
mov
jmp
clc
aaa
sbb
inc
(bad)
dec
retf
push
leave
push
adc
out
scas
mov
ror
inc
rcl
rcl
jle
loopne
ret
jp
push
fmul
inc
add
push
out
js
imul
mov
ins
call
retf
lahf
push
sbb
xor
pop
xor
sbb
inc
mov
addr16
in
jo
jnp
inc
(bad)
dec
into
das
xor
lds
xchg
and
add
cmp
lods
mov
test
xchg
mov
xchg
fwait
test
shr
add
or
xchg
arpl
dec
fisub
stos
mov
pop
retf
pop
std
sub
or
add
jmp
push
xchg
push
fld
or
push
sbb
daa
sbb
jg
pop
xlat
daa
pop
cmovns
pop
ret
jno
ss
pop
(bad)
jl
outs
call
jne
xchg
call
shr
fimul
or
or
cs
xor
js
and
push
aam
mov
mov
cmp
dec
scas
test
iret
and
pop
or
adc
mov
push
ret
nop
lds
pop
mov
scas
mov
call
jo
push
repz
push
sub
mov
jno
mov
cwde
jb
rol
(bad)
mov
mov
xchg
push
imul
sub
and
push
mov
fidiv
add
inc
ret
sbb
dec
fbstp
std
jg
jns
inc
fnstenv
fsubr
data16
fdivr
pop
add
or
or
sbb
jl
push
fnstcw
inc
fsubr
ret
cmp
inc
shl
scas
mov
iret
and
add
mov
push
shl
cmp
add
sbb
or
cmp
pop
mov
mov
call
stos
mov
mov
jmp
or
enter
add
ds
pop
fld
adc
add
jg
and
push
mov
pusha
lds
sbb
jno
dec
stc
inc
mov
cmps
mov
clc
inc
retf
pop
call
addr16
outs
idiv
push
aaa
cmp
jmp
or
pop
scas
not
jg
jg
inc
in
mov
jl
inc
not
pop
fimul
adc
push
sbb
pop
movs
pushf
arpl
ja
or
push
retf
push
and
in
retf
and
sbb
add
and
dec
int3
daa
test
inc
lods
test
outs
shl
iret
lods
lea
jge
fs
sub
jns
aaa
jne
ss
sti
jne
or
sbb
loop
cmp
out
js
pop
enter
fist
mov
lock
js
inc
mov
jmp
mov
outs
int3
push
ret
jg
pop
mov
scas
mov
mov
fdivr
dec
jmp
pop
iret
dec
movs
arpl
or
lahf
arpl
ins
pavgb
dec
fld
aaa
out
cmp
inc
xlat
(bad)
xlat
and
pop
push
sbb
dec
rcl
sub
xor
sbb
in
call
fst
(bad)
lahf
mov
push
lock
inc
jmp
adc
in
cmp
or
add
jmp
mov
mov
pop
adc
add
cmp
jmp
stos
fwait
call
lods
outs
clc
jp
mov
and
mov
stos
arpl
mov
mov
fiadd
in
push
ror
inc
fild
xor
pop
adc
pop
mov
mov
aam
retf
push
xlat
and
or
sbb
je
js
sub
cmp
push
dec
(bad)
push
mov
sahf
xchg
xchg
and
int
xor
sub
xor
loopne
or
retf
jle
dec
mov
js
push
mov
fsubr
jmp
inc
(bad)
js
mov
ins
leave
push
ret
cmp
push
xor
sbb
or
sbb
ja
jg
in
into
pop
cli
jb
daa
add
sbb
jae
pop
iret
jnp
outs
test
test
xchg
test
dec
rcr
push
or
ds
adc
add
pop
shr
jmp
div
mov
fs
mov
sub
and
idiv
(bad)
retf
push
cmps
nop
scas
test
mov
das
sub
in
xlat
es
ficomp
sbb
push
sbb
adc
sbb
xchg
and
int
mov
cmps
mov
pop
cmp
ss
leave
dec
add
test
minps
xor
mov
ret
dec
mov
mov
int3
pop
into
or
push
cmp
mov
nop
outs
retf
pop
iret
cmp
scas
popf
mov
jg
jnp
push
inc
lahf
gs
inc
(bad)
daa
or
adc
cmp
and
in
in
inc
iret
mov
scas
jl
jp
push
lock
push
repnz
rcl
test
retf
sub
loopne
xchg
mov
pop
(bad)
jae
pop
sbb
or
in
sar
or
lds
jns
retf
mov
stos
mov
fisub
je
jle
jo
push
fisttp
mov
rcr
adc
into
jp
js
jp
push
stc
inc
clc
inc
add
push
les
and
sbb
(bad)
std
inc
call
sub
sbb
inc
lock
pop
cmp
add
popa
ror
test
xchg
jp
jl
and
sub
hlt
jnp
ss
jp
mov
pushf
and
stc
jl
dec
and
imul
xchg
xchg
addr16
loopne
rcr
xor
add
sbb
or
or
cmp
pop
sbb
or
das
cmp
or
not
add
cmp
xor
adc
dec
ret
dec
fimul
mov
pop
lock
nop
dec
shl
popa
fimul
dec
repz
jnp
jl
jae
push
out
mov
pusha
out
pop
stos
xchg
push
dec
aad
cld
inc
add
aaa
or
in
sub
inc
call
mov
ins
hlt
jge
jbe
and
dec
test
mov
sub
pop
out
aad
clc
inc
cmps
lock
les
cmps
mov
cmp
prefetch
loopne
lock
or
cmp
cmp
(bad)
fst
sub
scas
mov
mov
xchg
fwait
popa
ret
jnp
cs
adc
test
mov
xchg
lahf
mov
mov
mov
(bad)
pop
rcl
dec
lock
dec
stc
push
lods
mov
mov
xchg
outs
div
or
inc
rcr
inc
cld
imul
push
fsubr
jl
mov
sahf
test
std
push
xor
sub
xor
sbb
in
push
cs
adc
ins
(bad)
inc
leave
push
cmps
mov
sub
mov
mov
call
sti
jle
and
pop
gs
dec
push
push
or
jne
mov
dec
(bad)
mov
xor
sub
sbb
push
movlps
adc
jno
jge
pop
int
in
jge
add
push
adc
add
sti
jle
and
adc
cmp
fs
aas
add
int
sti
and
adc
sbb
or
pop
aam
(bad)
ja
(bad)
lea
fcom
test
lds
push
cld
and
push
cvttps2pi
jo
pop
stos
(bad)
stc
push
add
cmp
adc
ja
jb
jg
sahf
cdq
cdq
pushf
lock
fimul
dec
int
add
pop
dec
shl
out
ficomp
mov
pop
and
or
popa
lock
and
add
in
loope
test
outs
(bad)
pop
stos
xchg
ins
fistp
iret
sub
lock
movs
loop
stos
arpl
dec
ret
and
js
pop
test
jmp
cmp
xchg
data16
movs
test
adc
out
cmps
hlt
push
shr
enter
cmp
jb
dec
int
push
cs
test
repnz
loopne
jmp
xchg
inc
test
out
xor
loope
fsub
sbb
movs
jl
popa
xchg
jns
xchg
(bad)
mov
dec
xchg
rol
sbb
psubsb
push
fmul
(bad)
daa
out
jb
jl
bound
push
cmp
pop
mov
iret
xor
out
push
mov
ret
adc
enter
out
dec
mov
popa
fiadd
jae
dec
mov
sbb
pop
mov
inc
add
clc
sub
add
aaa
sub
sub
out
mov
pop
int3
cmp
scas
in
dec
test
mov
aad
add
sbb
ss
and
stc
cmp
jmp
addr16
mov
fistp
iret
lods
test
mov
sub
or
loope
push
add
pop
add
xchg
push
add
ins
jne
pop
jbe
jne
jp
jo
ja
jle
ins
inc
push
jbe
ins
jne
push
dec
jl
jge
ja
pusha
pop
jbe
jne
jp
jo
ja
js
jl
pop
jl
pop
ja
je
imul
imul
jl
inc
pop
ins
imul
ins
sbb
ins
inc
push
jbe
ins
jne
push
js
jl
dec
jbe
jbe
jl
sbb
jo
sbb
jl
jl
ins
sbb
jo
imul
sbb
push
jbe
jl
pop
jl
dec
imul
push
jl
pop
pusha
push
js
jl
pop
jbe
je
ins
sbb
push
js
sbb
arpl
sbb
push
ins
jne
push
imul
pusha
sbb
ins
dec
ins
imul
jl
jbe
pop
jo
pop
jbe
outs
jl
ins
jl
sbb
push
ja
sub
sbb
ins
sub
sbb
ins
inc
dec
jo
jl
dec
jbe
ja
sub
sbb
ins
jl
pop
ins
jg
jl
sbb
jbe
jb
jbe
pusha
sbb
inc
pop
popa
imul
push
jl
push
jle
pop
jbe
sbb
js
jbe
dec
jl
ins
jne
sbb
jbe
sbb
push
jl
aaa
dec
jl
ins
imul
sbb
imul
ja
js
js
jl
pop
jbe
jl
jl
ins
imul
pop
ins
ins
imul
ins
jl
pop
jne
push
je
jbe
ins
pop
ins
ins
imul
ins
jl
jb
imul
sub
aaa
jge
jne
ja
jge
jne
jge
jne
dec
ins
imul
js
jbe
ins
pop
ins
ins
imul
ins
jl
push
js
jbe
ins
push
jo
jge
push
js
push
js
pop
push
ins
ins
imul
ins
jl
dec
ja
js
js
jl
dec
pusha
imul
push
dec
jne
push
push
jbe
dec
ja
pop
dec
dec
jle
imul
imul
sbb
je
jo
js
jo
ja
jl
js
js
jo
ja
pop
ins
ins
imul
ins
jl
dec
ins
ja
jo
jl
jbe
imul
jo
pusha
pop
ins
ins
imul
ins
jl
push
push
ins
push
dec
push
ins
dec
pop
pop
push
dec
push
push
arpl
jle
jle
push
push
ins
push
dec
push
ins
dec
pop
pop
push
dec
push
push
arpl
jle
jle
jl
jl
sbb
sbb
sbb
je
jne
cmp
outs
sbb
sbb
jo
jbe
ja
and
cmp
sub
aaa
sbb
sbb
sbb
sbb
sbb
jbe
jge
jo
ja
jle
and
cmp
dec
sbb
pop
sbb
sub
das
sbb
sbb
sbb
sbb
sbb
jb
cmp
outs
sbb
sbb
jo
jbe
ja
and
cmp
sub
aaa
sbb
sbb
sbb
sbb
je
jne
ja
push
and
cmp
jno
ins
sbb
imul
sbb
jp
jno
jl
je
js
push
aaa
sbb
sbb
imul
sbb
jbe
jg
ins
sbb
sbb
jbe
je
sbb
jo
ja
jge
jbe
outs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
js
push
jb
cmp
daa
sbb
sbb
sbb
sbb
jo
push
ins
sbb
js
ins
sbb
jbe
ja
push
sbb
jg
jbe
daa
sbb
sbb
sbb
sbb
sbb
sbb
jl
daa
sbb
sbb
sbb
sbb
sbb
sbb
sub
sub
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ins
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jno
jbe
imul
sbb
dec
sbb
pop
sbb
push
sbb
inc
sbb
sbb
sbb
jbe
imul
sbb
sbb
sbb
sbb
sbb
push
ins
sbb
js
ins
sbb
jbe
ja
push
sbb
jg
jbe
daa
sbb
sbb
sbb
sbb
jle
jle
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
ja
dec
sbb
jo
jle
jle
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jnp
jne
jl
jge
daa
sbb
imul
sbb
sbb
sbb
sbb
jnp
jne
jl
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jge
daa
sbb
dec
sbb
pop
sbb
push
sbb
inc
sbb
sbb
jl
imul
sbb
daa
sbb
sbb
sbb
sbb
sbb
sbb
jle
jbe
ja
dec
sbb
jo
jle
jle
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
jo
push
ins
sbb
js
ins
sbb
jbe
ja
dec
sbb
jo
jle
jle
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jnp
jne
jl
jge
daa
sbb
js
jne
push
jl
and
sbb
js
jnp
jne
jl
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
ins
sbb
js
ins
sbb
jbe
ja
dec
sbb
jo
jle
jle
jl
imul
sbb
sbb
sbb
sbb
jo
jle
jle
jl
imul
sbb
sbb
sbb
sbb
sbb
ja
jp
jo
imul
push
daa
sbb
sbb
sbb
sbb
sbb
sbb
ja
jp
jo
imul
cmp
jo
jge
and
cmp
pop
sbb
sbb
jbe
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jge
daa
sbb
dec
sbb
pop
sbb
push
sbb
inc
sbb
sbb
jl
imul
sbb
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
ja
dec
sbb
imul
push
sbb
ins
sbb
sbb
jp
ins
sbb
outs
sbb
sbb
jb
jl
ja
and
sbb
jle
jbe
ja
dec
sbb
imul
cmp
cmp
cmp
cmp
cmp
cmp
and
sbb
push
sbb
sbb
sbb
sbb
jl
js
push
ins
sbb
imul
sbb
jo
jne
jl
jle
jl
and
sbb
sbb
jl
outs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
ja
jp
jo
imul
daa
sbb
sbb
sbb
sbb
jo
ja
jp
jo
imul
push
daa
sbb
sbb
sbb
sbb
ins
sbb
ja
jle
push
daa
sbb
sbb
sbb
sbb
sbb
sbb
ins
sbb
imul
push
sbb
push
ins
sbb
ja
jp
jl
push
dec
sbb
jne
jo
jp
pusha
sbb
sbb
ins
sbb
imul
jo
push
ins
sbb
ja
jle
and
sbb
sbb
jo
imul
push
sbb
push
ins
sbb
ja
jp
jl
push
dec
sbb
jne
jo
jp
pusha
sbb
sbb
sbb
sbb
sbb
sbb
sbb
js
jne
jne
jbe
outs
sbb
ins
sbb
imul
sbb
jg
push
sbb
pop
sbb
ins
sbb
jl
imul
sbb
sbb
sbb
js
jne
push
jl
and
sbb
push
js
jne
jne
jbe
outs
sbb
ins
sbb
imul
sbb
jg
push
sbb
pop
sbb
ins
sbb
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
imul
pop
sbb
jo
ja
jle
push
sbb
pop
sbb
ins
sbb
jl
imul
sbb
sbb
sbb
imul
sbb
sbb
sbb
ins
sbb
imul
pop
sbb
jo
ja
jle
push
sbb
pop
sbb
ins
sbb
jl
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
outs
sbb
js
imul
sbb
jl
imul
sbb
ja
js
ins
sbb
sbb
js
jne
push
jl
and
sbb
jne
jbe
outs
sbb
js
imul
sbb
jl
imul
sbb
ja
js
ins
sbb
sbb
sbb
sbb
sbb
sbb
sbb
imul
sbb
jno
jl
ja
pop
sbb
js
jo
jne
js
jnp
jne
jl
daa
sbb
imul
sbb
sbb
sbb
ins
sbb
imul
sbb
jno
jl
ja
pop
sbb
js
jo
jne
js
jnp
jne
jl
daa
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jne
pusha
sbb
jg
push
sbb
sbb
jbe
imul
sbb
outs
sbb
jo
jne
js
jnp
jne
jl
daa
sbb
js
jne
push
jl
and
sbb
sbb
ja
jne
pusha
sbb
jg
push
sbb
sbb
jbe
imul
sbb
outs
sbb
jo
jne
js
jnp
jne
jl
daa
sbb
sbb
sbb
sbb
sbb
sbb
jl
dec
sbb
sbb
jo
ja
jle
push
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
imul
push
sbb
jne
jl
pop
sbb
jge
daa
sbb
imul
sbb
sbb
sbb
ins
sbb
imul
push
sbb
jne
jl
pop
sbb
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ins
sbb
imul
sbb
ja
push
sbb
jne
jl
daa
sbb
js
jne
push
jl
and
sbb
sbb
js
imul
sbb
ja
push
sbb
jne
jl
daa
sbb
sbb
sbb
sbb
sbb
sbb
jne
jl
dec
sbb
sbb
jo
ja
jle
push
daa
sbb
sbb
sbb
sbb
sbb
sbb
jbe
outs
sbb
ins
sbb
imul
sbb
ja
pop
sbb
sbb
ja
jge
daa
sbb
imul
sbb
sbb
sbb
jne
jne
jbe
outs
sbb
ins
sbb
imul
sbb
ja
pop
sbb
sbb
ja
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
jnp
jne
jl
jge
daa
sbb
imul
sbb
sbb
sbb
sbb
jnp
jne
jl
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
jge
jl
ja
daa
sbb
js
jne
push
jl
and
sbb
jge
jge
jl
ja
daa
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jne
pusha
sbb
jg
push
sbb
jne
jl
daa
sbb
js
jne
push
jl
and
sbb
sbb
ja
jne
pusha
sbb
jg
push
sbb
jne
jl
daa
sbb
sbb
sbb
sbb
sbb
sbb
jl
dec
sbb
dec
sbb
sbb
sbb
js
jne
push
jl
and
sbb
jb
jl
dec
sbb
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
ja
dec
sbb
je
jl
push
sbb
je
jo
ins
sbb
sbb
dec
sbb
sbb
and
sbb
jl
jp
ins
sbb
jo
jbe
ja
dec
sbb
je
jl
push
sbb
je
jo
ins
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
imul
sbb
pusha
sbb
sbb
sbb
sbb
jo
jbe
imul
sbb
pusha
sbb
sbb
sbb
sbb
sbb
sbb
jo
ja
jle
push
daa
sbb
sbb
sbb
sbb
jo
jbe
ja
push
cmp
pop
sbb
ja
ins
sbb
sbb
and
cmp
pop
sbb
sbb
jbe
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ja
jge
daa
sbb
push
sbb
pop
sbb
dec
sbb
push
sbb
inc
sbb
sbb
je
je
js
ja
jge
daa
sbb
sbb
sbb
sbb
sbb
sbb
jl
jp
daa
sbb
sbb
sbb
sbb
ins
sbb
jbe
ja
push
daa
sbb
sbb
push
jb
daa
sbb
or
sbb
jl
push
jbe
ins
sbb
jp
jl
push
sbb
sbb
jne
push
arpl
outs
sbb
push
sbb
sbb
ins
sbb
outs
sbb
pop
sbb
dec
sbb
pop
sbb
pop
sbb
ins
sbb
imul
sbb
sub
sbb
sbb
sub
sbb
sbb
sub
sbb
sbb
sub
sbb
sbb
sub
sub
sub
sub
sub
sbb
sbb
jno
jbe
push
ins
sbb
sbb
sbb
sbb
imul
js
ins
sbb
sbb
ins
sbb
jo
jbe
sbb
sbb
sub
sbb
sbb
sub
sbb
sbb
sub
sbb
sbb
dec
sbb
jg
pusha
sbb
ins
sbb
ins
sbb
pop
sbb
sbb
sbb
sub
sbb
sbb
sub
sbb
sbb
sub
sbb
push
sbb
push
imul
sbb
jno
pop
sbb
jnp
dec
sbb
jp
jnp
pop
sbb
push
sbb
imul
push
pop
sbb
inc
sbb
dec
sbb
jp
push
sbb
push
sbb
inc
sbb
das
sbb
sub
sbb
sbb
sbb
sub
sbb
jp
je
jge
aaa
sbb
sbb
pop
sbb
cmp
jl
jp
jno
jbe
cmp
inc
sbb
jbe
ja
jl
dec
sbb
js
ja
push
jg
jl
imul
sbb
jbe
ja
jl
push
sbb
cmp
and
cmp
sub
cmp
daa
sbb
sbb
and
inc
sbb
push
sbb
sbb
jge
jl
ja
ins
sbb
jg
jo
jl
imul
sbb
sbb
sbb
sbb
ins
sbb
adc
ins
sbb
js
push
sbb
pop
sbb
imul
ins
sbb
sbb
inc
sbb
adc
pop
sbb
sbb
sbb
sbb
inc
sbb
sbb
sbb
pop
sbb
or
sbb
push
sbb
pop
sbb
push
sbb
push
sbb
add
jp
jno
ins
sbb
push
jb
push
aaa
sbb
sbb
xor
sbb
imul
sbb
ins
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
js
ins
sbb
sbb
or
sbb
sbb
sbb
push
sbb
cmp
cmp
sbb
cmp
sbb
sbb
pop
sbb
dec
sbb
dec
sbb
sbb
sbb
imul
sbb
jbe
jg
ins
sbb
dec
sbb
ja
jge
jbe
outs
sbb
inc
sbb
ins
sbb
imul
sbb
ins
sbb
jl
imul
sbb
jbe
ja
inc
sbb
jbe
jne
jo
jp
jo
jl
push
inc
sbb
pusha
sbb
ins
sbb
sbb
or
sbb
jnp
jne
jl
push
sbb
sbb
sbb
sbb
pusha
push
sbb
pop
sbb
inc
sbb
dec
sbb
dec
sbb
sbb
inc
sbb
sbb
sbb
dec
sbb
jg
ins
sbb
js
imul
sbb
dec
sbb
jne
jo
jp
jo
jl
push
inc
sbb
sbb
imul
sbb
jbe
jg
ins
sbb
dec
sbb
ja
jge
jbe
outs
sbb
inc
sbb
pusha
sbb
ins
sbb
sbb
or
sbb
push
js
jnp
jne
jl
pop
sbb
sbb
cdq
mov
push
sbb
sbb
pop
sbb
sbb
pop
sbb
dec
sbb
dec
sbb
pop
sbb
inc
sbb
jbe
jg
ins
sbb
js
imul
sbb
push
sbb
jp
imul
sbb
jbe
jg
ins
sbb
dec
sbb
ja
jge
jbe
outs
sbb
inc
sbb
ins
sbb
imul
sbb
ins
sbb
jl
imul
sbb
jbe
ja
inc
sbb
jbe
jne
jo
jp
jo
jl
push
inc
sbb
pusha
sbb
ins
sbb
sbb
add
sbb
push
js
jnp
jne
jl
dec
sbb
push
jb
push
sbb
imul
sbb
sbb
sbb
sbb
sbb
sbb
jo
ja
jg
jo
jne
jl
sbb
outs
sbb
jp
aaa
sbb
sbb
or
sbb
sbb
push
je
aaa
sbb
sbb
add
imul
js
ins
sbb
jp
jno
aaa
sbb
sbb
push
push
outs
sbb
jno
jbe
push
ins
sbb
sbb
sbb
sbb
sbb
ja
jbe
ins
sbb
sbb
jge
aaa
sbb
sbb
sbb
sbb
sbb
sbb
push
push
jnp
jo
jl
jge
jne
jne
sbb
outs
sbb
imul
sbb
jno
js
imul
sbb
push
pop
sbb
jge
jge
jne
jl
imul
push
dec
sbb
pop
sbb
sbb
dec
sbb
sbb
sbb
sbb
cmp
pop
sbb
sbb
sbb
cmp
pop
sbb
sbb
sbb
cmp
pop
sbb
sbb
cmp
pop
sbb
sbb
sbb
cmp
pop
sbb
sbb
sbb
cmp
pop
sbb
sbb
cmp
pop
sbb
sbb
sbb
sbb
cmp
bound
sub
sbb
sbb
sbb
sbb
add
popa
pop
xchg
mov
ret
sbb
scas
arpl
add
es
data16
adc
sbb
sbb
sbb
sbb
sbb
push
pop
or
add
or
adc
pop
or
add
or
sbb
push
pop
or
add
or
sbb
push
pop
or
add
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
sub
sbb
or
sbb
or
sbb
sbb
or
sbb
sbb
add
sbb
pop
sbb
add
sbb
sbb
adc
sbb
or
pop
adc
sbb
sbb
sbb
or
adc
pop
pop
add
sbb
add
or
xor
sbb
sbb
add
adc
sbb
add
or
adc
adc
sbb
add
add
adc
adc
sbb
add
adc
sbb
add
adc
or
adc
sbb
add
adc
adc
sbb
adc
pop
sbb
sbb
adc
sbb
sbb
sbb
add
pop
adc
sbb
or
adc
sbb
sbb
sbb
sbb
sbb
pop
pop
push
sbb
adc
jl
imul
aaa
sub
sub
sub
sbb
pop
or
add
or
sbb
adc
or
add
or
pop
or
add
or
adc
adc
sbb
sbb
or
sbb
push
pusha
aaa
pop
imul
jo
ja
sbb
sbb
pop
push
pusha
aaa
dec
jl
dec
jl
outs
jo
jl
sbb
or
sbb
push
pusha
aaa
pop
jbe
imul
sbb
push
push
pusha
aaa
dec
push
imul
sbb
sbb
sbb
sbb
sbb
pop
sbb
or
and
push
sbb
or
push
sbb
sbb
sbb
pop
sbb
sbb
push
cmp
pop
js
sbb
jl
aaa
dec
jl
aaa
dec
jl
outs
jo
jl
aaa
dec
imul
jp
jne
aaa
dec
jbe
imul
jo
ja
dec
imul
jp
jne
pop
imul
inc
inc
push
ja
ins
js
jp
inc
inc
or
push
jbe
jl
inc
push
ja
ins
js
jp
inc
inc
sbb
sbb
or
add
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
cmp
sbb
or
sbb
adc
cdq
cwde
sbb
sbb
pop
sbb
adc
pop
sbb
pop
cmp
sbb
cdq
nop
pop
sbb
pop
pop
pop
pop
sbb
sbb
sbb
sbb
cdq
mov
cmp
sbb
cdq
mov
cmp
and
add
push
sbb
out
inc
mov
mov
mov
push
loopne
mov
popf
repnz
and
enter
xchg
aas
je
popa
adc
fld
jns
fwait
rcl
dec
xchg
pushf
mov
xchg
cmps
repz
inc
sbb
cmps
call
ins
lea
sub
sbb
and
or
inc
loop
clc
mov
scas
leave
pusha
and
sahf
mov
call
repnz
inc
jmp
sbb
inc
add
pop
out
scas
aad
aad
repz
repnz
jns
mov
out
mov
cmps
fcomp
repnz
iret
pop
jnp
inc
xor
adc
dec
cmp
xchg
movs
(bad)
fwait
(bad)
addr16
or
pop
mov
call
sbb
dec
sub
mov
adc
sbb
in
or
lds
push
sbb
into
mov
or
outs
or
and
mov
mulps
cmps
xchg
lea
or
xchg
mul
inc
in
xchg
xchg
iret
mov
jmp
mov
cmp
sahf
ret
mov
push
into
pushf
movs
xlat
xchg
repz
push
iret
data16
loopne
inc
out
rcr
test
mov
or
les
cmc
push
inc
jecxz
cmps
arpl
movs
lock
mov
mov
call
mov
rol
or
aaa
pop
out
int3
pushf
push
pop
inc
mov
mov
xchg
iret
popa
(bad)
xor
xor
jle
push
lock
hlt
push
jle
dec
lock
iret
or
call
inc
cdq
cs
adc
sub
push
sbb
idiv
leave
nop
inc
aas
push
xchg
out
mov
mov
in
ins
mov
int
repnz
jmp
ror
aaa
pop
sbb
dec
mov
loop
shl
call
std
cmp
xchg
aad
(bad)
xchg
movs
jnp
sub
sub
xchg
ret
sbb
aad
(bad)
mov
ins
sub
cmps
dec
adc
inc
mov
cmp
lock
adc
jne
loope
dec
sbb
mov
popa
out
ins
test
outs
stos
mov
push
push
jge
pop
add
jae
inc
or
loop
(bad)
sahf
inc
(bad)
(bad)
fadd
jmp
les
adc
jnp
pop
in
pop
jmp
jne
stos
in
xchg
cmps
icebp
mov
or
cli
mov
lods
cld
xor
xor
sub
xchg
inc
push
sbb
fwait
hlt
mov
out
std
mov
mov
push
pop
push
dec
xchg
cmp
sbb
cmps
pop
xor
jl
jae
push
(bad)
cwde
mov
mov
mov
mov
jnp
mov
addr16
inc
adc
cs
mov
mov
ds
sar
fistp
push
pushf
pop
add
adc
sub
pusha
push
dec
add
mov
push
pop
inc
sbb
(bad)
mov
or
adc
test
jne
and
xchg
pop
clc
mov
pop
cdq
cmovb
into
nop
ret
add
mov
daa
jns
cs
call
inc
mov
xor
push
add
(bad)
ja
push
in
fidiv
stos
aam
cmps
int
and
ja
(bad)
mov
mov
test
mov
pop
repz
into
popf
fild
lahf
fidiv
mov
dec
dec
sbb
loope
pop
pop
sub
stos
icebp
stos
(bad)
cs
lds
ds
dec
adc
jnp
mov
mov
cwde
sti
mov
xor
daa
outs
and
mov
sti
xchg
inc
ja
pop
push
pop
cdq
xor
cmps
add
dec
xchg
(bad)
mov
std
mov
js
and
in
mov
sti
(bad)
popa
xchg
fwait
test
ds
xchg
or
je
push
pop
sub
loopne
xchg
cmps
push
dec
or
xor
dec
(bad)
gs
inc
lahf
adc
lahf
sar
mov
aad
or
jno
cdq
iret
pushf
fisttp
cld
mov
cmps
fisttp
jl
sub
pop
inc
movs
test
sub
test
inc
add
dec
loope
(bad)
pusha
jmp
call
adc
cmp
pop
les
jmp
stos
dec
(bad)
jge
ret
inc
add
outs
cmp
jg
test
jae
call
mov
jo
inc
adc
push
lods
mov
push
fst
jnp
jmp
pushf
hlt
mov
repnz
adc
inc
ss
das
dec
cmp
inc
addr16
in
out
test
mov
add
cmp
or
inc
add
jns
mul
inc
mov
pop
adc
(bad)
popa
add
and
div
push
sub
cs
or
(bad)
out
mov
fnstenv
sti
mov
sub
xor
sahf
aam
mov
cmps
mov
lock
arpl
out
lds
fstp
leave
xchg
lds
cmps
les
ret
mov
shl
lock
test
cdq
test
test
les
dec
ds
inc
mov
or
pop
loopne
rcr
mov
das
push
jmp
enter
add
sahf
bound
cmp
jmp
inc
or
pop
fcmovb
mov
push
push
push
pop
je
sub
imul
pop
in
or
jae
sub
repnz
ror
fadd
fimul
fcomp
adc
sub
cmp
jae
jmp
sbb
sub
(bad)
fbstp
or
cmp
iret
test
lds
movs
hlt
test
mov
cmp
mov
push
mov
jge
jns
ss
test
fs
retf
mov
pusha
imul
fnstsw
jnp
imul
dec
sbb
push
inc
push
es
mov
mov
mov
ror
mov
ds
lods
imul
ret
xor
mov
call
pop
push
aam
add
ret
mov
inc
or
dec
cmp
xchg
daa
pop
adc
ficom
jmp
les
outs
addr16
dec
or
mov
fs
mov
jp
mov
and
inc
add
mov
jmp
loope
inc
popf
cli
add
cmps
lds
ret
test
sbb
imul
retf
pop
call
and
pop
sub
push
pop
daa
ins
cmp
sub
lds
and
in
pop
fsubrp
stos
mov
das
jns
je
in
cli
mov
sbb
call
cmpxchg
sahf
inc
add
jmp
dec
sahf
lock
fmul
push
adc
and
push
add
lods
retf
cdq
jns
cmp
and
out
or
ins
pop
and
dec
loope
stos
push
test
cwde
jno
inc
loop
and
mov
push
call
inc
or
int3
ins
xor
inc
push
fcomp
mov
cwde
std
mov
or
pop
and
inc
jmp
pushf
in
or
lahf
scas
inc
dec
mov
fisubr
jb
push
popf
ds
out
xchg
fistp
call
int
stos
rcl
jecxz
inc
inc
add
add
ja
inc
daa
jne
in
sbb
cdq
movs
ficom
not
popf
scas
jno
pop
pusha
lock
stc
jmp
adc
cs
fild
xchg
xchg
les
mov
fs
fld
ds
sbb
dec
adc
mov
xchg
cli
mov
popa
jecxz
loop
(bad)
aaa
mov
fs
dec
mov
inc
mov
pop
gs
ss
pop
ss
rcl
clc
mov
mov
sub
dec
es
repnz
aam
add
jg
fst
dec
sbb
sbb
rol
ror
sub
imul
fs
daa
dec
or
stc
test
fwait
lds
xor
push
in
test
retf
xor
xchg
pushf
imul
pop
out
into
xor
jno
bound
leave
xor
sub
jl
dec
in
mov
lods
enter
xor
push
mov
inc
cmp
sub
xor
outs
sub
mov
(bad)
pushf
movs
cld
sbb
fs
daa
gs
xchg
xlat
lods
retf
bound
fidivr
jns
push
aas
daa
jno
pop
loop
sub
je
pop
cmp
add
leave
sti
add
call
xchg
into
mov
lds
mov
push
add
loope
xchg
jecxz
fnstenv
rcl
ins
or
jnp
ins
or
test
pushf
lds
push
xchg
scas
jle
or
xor
aaa
(bad)
cld
mov
sub
movs
out
popa
sub
add
pop
out
mov
mov
xchg
cmps
mov
xchg
popf
int3
push
cwde
movs
bound
xor
mov
(bad)
cmps
ins
das
push
lods
repz
test
push
adc
call
or
fdivr
ins
xor
dec
cmp
mov
inc
das
xor
cmp
lock
call
ficomp
mov
movs
les
inc
loop
cld
mov
sub
cmc
imul
sbb
(bad)
int3
mov
rcr
jne
inc
mov
jno
ret
mov
test
clc
mov
cmc
je
push
sbb
or
pop
push
repnz
repnz
add
fcomp
dec
or
mov
mov
inc
popa
add
loope
and
loop
cld
add
jne
mov
sbb
sahf
ins
mov
in
or
and
fistp
and
fs
(bad)
jnp
das
cmc
test
stc
mov
call
xchg
je
lods
aad
ret
add
cmp
inc
adc
push
sbb
mov
jbe
je
das
mul
out
xor
xor
cmps
mov
push
push
mov
push
outs
cmp
test
push
dec
sahf
or
hlt
in
stos
rcr
xchg
lods
enter
or
mov
push
rcl
jp
daa
outs
sub
outs
xor
inc
mov
push
out
rcr
(bad)
idiv
xor
and
ss
or
jb
dec
add
xor
dec
or
push
mov
add
push
inc
mov
ins
mov
xor
jle
cmps
push
or
push
or
mov
fsub
pop
pusha
lock
mov
mov
mov
sub
int
push
sbb
inc
xchg
aaa
je
std
or
pop
jmp
jbe
sub
aas
push
xchg
call
inc
adc
jae
xor
mov
cmp
stc
xor
jle
and
dec
adc
mov
test
xor
jge
sub
and
stc
xchg
lods
jb
in
sahf
fisttp
sub
ins
add
pop
in
or
jmp
aad
xlat
adc
or
lds
rcl
mov
aaa
shr
out
aad
ret
jno
mov
mov
clc
hlt
add
movs
xor
mov
sub
cmp
out
scas
and
lahf
cmps
repnz
or
jns
push
loop
mov
out
idiv
fs
xor
xor
cmps
mov
dec
cmp
movs
out
jbe
std
les
sbb
xor
adc
jnp
dec
loop
jp
and
shr
jmp
mov
adc
(bad)
mov
out
cmc
mov
stos
(bad)
data16
inc
loopne
fild
cli
icebp
mov
sub
fist
in
xchg
and
mov
mov
push
retf
push
mov
cld
test
push
inc
sub
js
in
icebp
mov
imul
out
stos
(bad)
sbb
ins
pop
das
ins
xor
cmp
fist
push
cmps
rcr
adc
scas
fist
fiadd
rol
call
dec
push
inc
adc
jbe
inc
cs
adc
retf
dec
push
push
mov
out
or
jnp
cmps
adc
xchg
shl
mov
shr
jle
push
cvtpi2ps
dec
sub
cmp
cs
jmp
into
sub
std
bound
cwde
dec
popf
test
in
mov
pop
movs
(bad)
gs
or
jb
arpl
mov
and
jmp
jnp
and
sbb
sti
scas
fistp
xchg
les
cmp
sub
cmp
mov
mov
in
mov
nop
loopne
shl
push
push
xor
sub
in
mov
not
pop
pushw
dec
loopne
iret
sahf
jne
scas
jb
or
xor
mov
xor
push
mov
xchg
push
mov
push
jb
mov
pusha
xor
mov
pop
fcmove
xchg
cmps
lock
fcom
dec
adc
jp
cs
mov
jmp
and
add
sbb
dec
cmp
sub
(bad)
and
cmp
cmc
scas
(bad)
adc
or
lods
iret
mov
clc
cs
cmp
jns
popa
adc
cli
imul
imul
mov
pop
call
clc
test
add
xchg
rol
imul
sahf
fdiv
and
cmp
jl
dec
sub
jae
and
xchg
data16
loopne
mov
leave
mov
jbe
push
add
sbb
push
pop
inc
ss
sub
ja
push
sbb
jne
and
jo
dec
push
jp
inc
popf
mov
xchg
clc
mov
sub
dec
and
jle
mov
xchg
aam
aad
sbb
daa
and
mov
(bad)
icebp
mov
xchg
in
add
push
push
pop
pop
pop
cmp
loope
sar
test
repnz
and
bound
or
push
mov
and
mov
pushf
lods
pop
scas
sti
xor
dec
mov
outs
pop
por
arpl
ins
sbb
cmp
imul
or
out
mov
xor
push
cmp
dec
pop
dec
pop
sub
in
mov
es
mov
jecxz
call
xchg
add
lods
js
jge
sub
ficomp
fdivr
jae
xor
cmps
(bad)
mov
adc
cli
fisttp
test
mov
xchg
fnsave
retf
fwait
(bad)
xchg
xlat
jbe
call
test
xchg
sahf
iret
mov
ss
or
inc
mov
(bad)
add
jmp
sti
add
mov
jmp
mov
(bad)
lods
cld
loop
pop
out
fild
div
enter
stos
pop
adc
pusha
adc
jmp
cwde
test
cmp
cmp
xchg
mov
imul
adc
mov
mov
out
xor
push
adc
(bad)
scas
fdivr
and
fisttp
inc
xor
push
test
mov
mov
lods
call
jnp
sbb
jmp
jg
xchg
stos
repnz
sub
sbb
fistp
inc
adc
mov
cmp
add
popf
les
cmp
gs
cmp
sub
push
sbb
and
xchg
mov
mov
cwde
iret
mov
idiv
pop
jne
adc
fcomp
adc
push
push
dec
aaa
push
div
fcom
cli
test
push
neg
gs
je
pushf
jne
out
push
sub
pop
mov
aaa
js
call
cmovne
stos
mov
pop
sbb
pop
adc
fiadd
adc
mov
or
inc
xor
es
in
jge
mov
test
xor
fldcw
push
cmc
push
aaa
jecxz
outs
sub
xor
and
outs
pop
fadd
xor
(bad)
jns
and
ror
dec
and
and
cmp
inc
push
sub
daa
dec
adc
std
pushw
pop
mov
jae
dec
out
jb
dec
or
inc
dec
(bad)
es
fs
movs
jecxz
shl
fs
stos
leave
xchg
(bad)
mov
les
add
and
push
in
aam
in
mov
cdq
ret
lea
fsub
xor
into
data16
in
ficomp
jo
pop
sbb
xor
jl
mov
adc
pop
adc
cmp
xor
pop
out
or
(bad)
pop
xor
movs
daa
inc
out
test
popf
iret
mov
mov
jb
dec
call
lods
push
xchg
repz
cmc
mov
jecxz
fmul
dec
cmp
pop
icebp
aaa
outs
sub
add
pop
pop
sbb
pop
dec
or
adc
push
xor
mov
sahf
sbb
jl
stc
mov
mov
jecxz
fcomp
mov
pushf
arpl
rol
cmps
mov
jne
std
mov
sti
mov
mov
dec
add
xchg
push
jae
mov
gs
leave
xchg
into
call
gs
sub
stos
in
mov
bound
das
jp
inc
or
jne
addps
xchg
jg
add
inc
ds
call
sbb
sbb
int
cmps
lods
cmps
cmps
xchg
pushf
mov
lods
lods
mov
or
ins
jmp
lods
xchg
mov
fistp
push
or
popf
out
xlat
push
xchg
call
push
aaa
pop
sbb
lds
adc
push
sti
es
and
add
mov
cmp
(bad)
call
stc
jne
dec
loop
sub
pop
lock
mov
mov
lods
mov
lea
lods
lods
fidivr
dec
repz
shl
ficom
pop
(bad)
dec
add
aas
fs
xor
inc
add
dec
adc
addr16
popa
or
push
loopne
jp
ins
cmp
lahf
fdiv
xor
pop
and
cs
rcr
xchg
ror
cwde
xchg
add
xor
jl
rcr
inc
(bad)
inc
sbb
push
fsub
sbb
adc
mov
or
or
nop
ret
mov
iret
mov
cmps
loop
cli
xchg
add
dec
nop
scas
lods
call
jp
pop
out
daa
jp
iret
sub
stc
imul
(bad)
aam
not
add
inc
jmp
(bad)
mov
inc
sbb
mov
or
push
sbb
pushf
movs
lock
(bad)
dec
adc
push
retf
sub
arpl
mov
jo
pop
cmp
xchg
sub
mov
inc
test
xchg
inc
cmp
(bad)
mov
jge
inc
or
xchg
dec
push
inc
sub
jno
and
xlat
dec
ds
lahf
jne
add
movs
cwde
xlat
and
in
mov
or
push
jecxz
pop
jmp
fsub
inc
push
push
or
mov
lahf
iret
xchg
sar
fs
outs
ss
jne
dec
add
cdq
enter
sbb
adc
enter
jl
mov
mov
int
xlat
mov
push
in
jg
dec
inc
push
add
mov
shr
fcomp
rcr
cli
xchg
jl
inc
sbb
movs
cmp
pop
dec
cmp
or
fsubr
movs
retf
xchg
cmps
sti
outs
add
sub
mov
mov
xchg
xchg
int3
cwde
frstpm(287
and
and
xchg
out
or
mov
mov
mov
or
jp
jo
or
push
sbb
ja
fmul
sbb
adc
jb
dec
sbb
cmp
ficomp
pop
jmp
pop
sbb
cmp
hlt
xchg
push
add
jbe
jp
mov
ins
cmp
popa
xor
push
idiv
aaa
inc
adc
adc
rcl
pop
call
push
xchg
fld
dec
cmovnp
pop
push
(bad)
leave
adc
or
adc
int
hlt
adc
mov
mov
aas
(bad)
mov
mov
xchg
fsubr
shl
adc
int3
les
add
push
pop
mov
test
dec
pop
push
mov
mov
push
push
sbb
push
jmp
test
pop
in
(bad)
js
sub
xlat
movs
ret
mov
dec
add
neg
jno
es
pop
and
stos
hlt
xchg
jge
push
push
push
ds
das
dec
adc
loope
std
add
sbb
sub
sbb
movs
out
in
pop
mov
enter
and
jmp
lods
out
outs
test
cwde
sar
and
repz
in
imul
add
mov
add
push
xor
mov
and
popa
es
dec
fwait
ret
xchg
xor
stos
ret
xchg
lock
mov
retf
mov
xchg
stc
mov
xchg
in
xor
mov
popf
hlt
mov
imul
mov
mov
int3
jbe
sub
adc
inc
(bad)
push
adc
mov
ja
cld
mov
loope
cmps
int
and
mov
cmps
mov
inc
and
push
mov
enter
mov
mov
das
inc
xor
push
pop
loope
and
pop
or
pop
adc
stc
xchg
rcl
scas
cld
mov
cld
dec
xor
and
pop
inc
jne
std
push
push
add
jp
aas
inc
sbb
out
xchg
icebp
mov
xchg
push
jge
je
je
inc
adc
frstor
mov
cmc
xchg
test
icebp
cwde
aam
iret
xor
ds
add
inc
add
loopne
jo
sbb
jmp
or
adc
arpl
mov
dec
add
outs
sbb
shr
xchg
aad
loope
and
test
(bad)
out
jmp
xchg
sub
xor
and
daa
and
pushw
daa
dec
out
mov
bound
sbb
jae
push
das
inc
add
jnp
pop
jmp
pop
cmp
pop
pop
push
jl
out
and
push
mov
enter
cli
nop
mov
or
inc
cmp
or
mov
xchg
(bad)
xchg
ror
jo
outs
or
sbb
inc
mov
bound
pop
sub
scas
not
cmp
fadd
dec
adc
clc
scas
jmp
inc
and
push
or
psraw
mov
mov
test
dec
loope
leave
xchg
rol
mov
mov
lahf
mov
mov
jmp
inc
adc
pusha
or
and
mov
mov
jne
imul
clc
mov
pop
pop
in
add
in
mov
cmp
outs
and
and
fnstsw
fstp
mov
aam
rcl
push
ds
sub
dec
sbb
sbb
jle
(bad)
mov
jmp
ss
repnz
cmp
pusha
adc
ret
mov
xchg
mov
xchg
stc
daa
dec
das
dec
or
scas
into
mov
test
jo
pop
clc
mov
dec
xchg
sbb
cs
ficomp
push
adc
retf
mov
arpl
adc
fld
mov
mov
push
mov
mov
mov
jo
daa
adc
cli
cdq
inc
ficomp
inc
aaa
adc
pop
cmp
mov
and
enter
jmp
jno
pop
or
jae
scas
loop
adc
xchg
out
lods
fiadd
mov
test
xchg
cld
inc
or
repnz
fild
sub
ret
add
jbe
pusha
xchg
mov
jo
inc
bswap
aas
aas
out
les
pop
push
dec
add
dec
adc
xor
xlat
test
mov
stc
nop
fistp
shl
aaa
jno
pop
jecxz
enter
clc
mov
or
(bad)
mov
ins
sbb
cs
lahf
cld
scas
in
mov
inc
in
mov
xor
add
pop
out
mov
arpl
sub
leave
ins
cmp
arpl
lahf
std
mov
xor
and
xor
mov
mov
pop
mov
mov
xlat
jmp
mov
stc
popf
lods
rcr
ret
mov
arpl
mov
mov
stos
(bad)
sbb
xor
enter
xor
sar
in
cli
mov
cmps
test
icebp
popf
mov
test
jae
jle
pop
hlt
popf
in
scas
gs
inc
sub
mov
cmps
jmp
cmp
iret
mov
(bad)
cmc
ins
add
mov
add
cmp
(bad)
cmps
fiadd
add
cmova
loope
out
mov
lea
push
pop
pop
mov
fild
mov
xchg
fidiv
sub
jne
push
push
pop
xor
aas
xor
cmp
dec
rol
dec
or
stc
xchg
lods
retf
mov
push
fwait
leave
jae
movs
int
dec
loopne
fistp
punpckhwd
scas
imul
ret
pop
retf
mov
pushf
rcl
jp
fistp
adc
and
pop
lds
arpl
pop
mov
sahf
fsub
jns
and
sar
out
cmp
cmp
das
pop
adc
mov
lahf
push
ins
xor
int
idiv
fcomp
pop
sbb
(bad)
cmp
sub
(bad)
push
inc
das
push
and
imul
call
xor
mov
sub
sbb
push
and
dec
in
pop
sub
jb
arpl
and
cdq
movs
(bad)
cwde
rcr
sbb
pop
(bad)
lods
aad
(bad)
mov
fst
xor
jp
test
add
cs
daa
push
jo
ins
icebp
xchg
aad
sbb
push
xchg
ds
mov
jmp
sbb
ins
xor
mov
addr16
or
and
faddp
sbb
mov
mov
iret
pop
out
pop
out
shl
and
sti
test
xchg
ins
mov
and
mov
lods
xor
ds
cmovge
sub
inc
mov
test
mov
sbb
jge
push
aaa
push
stos
lds
shl
xor
pop
sti
xchg
int3
mov
(bad)
into
sahf
mov
mov
mov
push
sti
xchg
pushf
fisubr
outs
add
pop
push
cmp
sub
icebp
(bad)
dec
in
cwde
(bad)
sub
inc
jecxz
stos
rcl
les
pop
adc
pop
repnz
pop
pop
gs
push
fnstsw
push
sub
rcr
dec
jecxz
iret
xchg
test
je
mov
add
dec
push
pop
sbb
cmc
sub
sbb
jno
imul
push
push
aaa
outs
or
jp
jnp
sub
je
inc
ror
add
dec
sbb
mov
mov
sub
inc
out
inc
sbb
push
add
cmp
push
push
aaa
cs
ret
jno
add
push
jno
jmpw
or
inc
daa
jo
mov
xor
or
jecxz
(bad)
and
test
sbb
dec
sbb
xchg
mov
test
xchg
retf
mov
inc
add
(bad)
dec
or
or
mov
mov
and
pop
push
int
das
inc
aas
inc
(bad)
mov
dec
jecxz
lds
mov
call
cmp
fimul
pop
in
fldcw
xor
pop
sub
or
lock
out
and
cmp
retf
jnp
push
imul
mov
xor
push
dec
push
call
addr16
cld
lahf
fisttp
inc
sub
bound
dec
adc
jne
mov
cmps
cmc
xchg
hlt
mov
jo
hlt
sub
ja
cdq
test
jg
and
mov
xor
js
jo
dec
test
or
sbb
sub
pusha
or
mov
add
inc
pop
inc
pop
push
shl
pop
cli
mov
xor
sub
fdiv
push
sbb
shl
inc
adc
retf
xchg
ret
mov
or
jno
repnz
nop
movs
retf
(bad)
cmp
dec
std
xchg
stos
dec
rep
fldenv
stos
cmc
cmps
jmp
pop
push
and
inc
cmp
sbb
test
daa
outs
xor
mov
inc
sbb
add
in
aad
retf
xchg
ja
fs
sub
in
stos
(bad)
gs
mov
nop
enter
jne
inc
(bad)
(bad)
inc
shl
outs
or
mov
mov
imul
xchg
push
jmp
fst
add
iret
jge
push
sbb
add
adc
ja
out
push
jp
mov
pop
ss
repz
into
pusha
add
add
jo
pusha
jecxz
push
sbb
fisttp
fdiv
out
pop
loopne
into
test
mov
xchg
call
mov
cmps
call
sub
add
or
cmp
outs
xor
loope
and
cmp
inc
adc
jns
push
add
push
es
(bad)
xor
and
sysexit
xor
popa
adc
mov
mov
dec
push
jge
jbe
and
or
sub
xchg
cmc
mov
push
hlt
xchg
shl
arpl
adc
cmp
dec
loope
lods
pop
pop
inc
cmp
sub
ins
ds
je
push
sbb
div
sbb
aad
repz
pusha
xor
ja
imul
sbb
pop
sbb
inc
or
scas
lock
inc
add
js
mov
test
mov
xchg
mov
mov
sub
dec
in
mov
lea
pop
pop
and
std
mov
xchg
enter
(bad)
xor
pop
aas
jg
enter
test
jl
push
adc
xor
scas
stc
mov
sbb
mov
pop
sub
dec
sbb
nop
fisttp
iret
mov
test
xchg
dec
sbb
das
jo
push
and
lock
adc
inc
mov
test
mov
mov
xchg
lds
pop
xor
jns
inc
and
loope
in
(bad)
xchg
xchg
xchg
mov
adc
out
and
push
cmp
or
jae
sub
lds
stos
xchg
inc
rcr
test
sahf
mov
or
or
or
sbb
mov
lods
mov
mov
jl
mov
js
push
and
int
or
sbb
ins
addps
icebp
jno
jbe
pop
and
mov
or
repnz
int
jne
jno
push
adc
push
or
test
xor
outs
pop
pop
out
xor
sub
loopne
cld
mov
fsub
div
outs
sub
jecxz
shl
jb
call
js
mov
pop
or
push
push
sub
fst
lods
call
jb
mov
fimul
cdq
push
out
xlat
mov
aas
repz
push
dec
add
jnp
sbb
dec
neg
cmps
mov
out
(bad)
dec
cli
scas
inc
inc
pop
xor
stos
fstp
xor
sub
ds
pop
pop
push
push
adc
daa
push
xchg
test
mov
mov
xor
dec
repz
dec
leave
xlat
fistp
into
xchg
lock
push
out
adc
mov
inc
add
(bad)
pushf
push
mov
mov
pushf
mov
mov
dec
es
sbb
jae
push
xor
iret
lods
frstor
std
pushf
jmp
jmp
(bad)
xchg
aad
dec
sbb
jle
in
ret
mov
arpl
or
cmp
pop
jb
xchg
repnz
jecxz
shl
scas
leave
pusha
and
test
xchg
add
jb
jl
and
pop
sbb
mov
test
inc
fstp
outs
xor
not
push
pop
add
push
cwde
fld
imul
dec
xchg
sahf
fld
aad
iret
mov
or
xchg
fstp
loopne
mul
or
(bad)
pushw
pop
xor
adc
jb
fst
(bad)
data16
cmc
mov
in
scas
dec
adc
mov
mov
mov
lods
inc
jns
jge
cmp
outs
loop
out
and
stos
leave
xchg
sub
mov
icebp
call
xor
sti
xor
add
add
dec
push
and
aad
loop
fcmovu
mov
mov
pushf
(bad)
jo
loop
lds
rcr
fldcw
call
xor
and
pusha
sub
movs
xlat
xchg
imul
xor
dec
or
inc
adc
sub
lods
push
and
cmp
je
in
mov
dec
loopne
adc
jns
mov
(bad)
fisttp
mov
xchg
scas
int3
jbe
lods
jno
lock
(bad)
cmp
call
shl
xchg
sub
pop
loope
cmps
fnsave
out
pop
pop
dec
out
sbb
and
pop
jle
js
lods
std
mov
scas
xchg
loop
mov
aad
aaa
pop
sbb
and
push
adc
add
mov
cmp
repnz
inc
push
dec
ud0
bound
cmp
outs
ss
scas
popa
and
and
or
daa
fs
gs
sub
js
cwde
les
inc
sbb
jae
inc
or
fs
or
fsub
retf
stos
(bad)
shr
cmps
rcr
xor
jns
and
xor
test
xlat
mov
cmp
jnp
sbb
dec
loopne
sbb
mov
push
inc
in
mov
push
add
xchg
es
lahf
retf
sub
xlat
pushf
stc
test
in
fst
jb
inc
xor
cmp
xor
inc
or
mov
cmps
in
bnd
pop
pop
add
mov
and
jge
mov
xor
ficom
inc
pop
push
aaa
pop
sbb
inc
sub
jno
pop
pop
ins
ds
stc
fs
rcl
jmp
call
rcr
aaa
inc
mov
mov
retf
mov
dec
loop
lods
leave
mov
cli
mov
retf
cmps
sar
push
adc
dec
sbb
or
jns
pusha
add
es
jl
inc
sbb
push
adc
rdpmc
push
pop
dec
repnz
sbb
rol
xor
js
push
fidivr
sahf
retf
pop
cmp
xor
pop
aas
outs
(bad)
xor
adc
mov
jmp
push
adc
adc
popa
or
mov
jnp
xchg
aam
pusha
sbb
inc
sub
and
or
ins
sqrtps
mov
pusha
xchg
cmps
idiv
imul
imul
out
push
xor
mov
pushf
fild
test
mov
and
popf
xchg
adc
add
adc
cmp
mov
mov
popf
test
outs
sub
and
xchg
fs
sub
dec
xor
dec
lock
(bad)
xchg
lahf
add
or
test
jnp
and
inc
mov
mov
sahf
scas
jne
rep
scas
add
mov
cmps
in
movs
jg
add
jle
push
repnz
jle
jne
jle
je
jbe
dec
loope
mov
xor
inc
sbb
xor
ret
arpl
cmp
add
xor
push
inc
inc
push
jno
dec
outs
inc
and
add
inc
icebp
arpl
shl
cmc
lods
fbstp
mov
movs
int3
adc
outs
dec
pop
je
pop
and
add
jo
inc
(bad)
dec
in
iret
lahf
icebp
(bad)
(bad)
xchg
fcom
jno
retf
int
ja
pop
push
sub
retf
fbstp
fstp
add
inc
add
pop
push
push
cld
and
adc
push
ds
sub
add
rcr
jl
pop
sbb
jp
mov
imul
ror
test
xlat
movs
clc
adc
mov
dec
sbb
in
int
fstp
sahf
cmps
pusha
add
pop
clc
xor
ud0
mov
clc
mov
add
pop
out
cwde
movs
lock
scas
stc
mov
fcomp
or
inc
hlt
sahf
scas
aad
dec
adc
mov
jae
xchg
stos
mov
push
adc
jnp
popa
xor
ret
sbb
in
jmp
sbb
pop
repz
xor
and
push
mul
rcr
iret
popf
dec
(bad)
push
out
lds
ret
sbb
retf
popf
ror
retf
jp
lods
retf
ficom
sub
dec
push
push
loope
ret
xor
mov
mov
dec
mov
(bad)
mov
inc
call
inc
stos
cmc
xchg
mov
jno
int
int3
jno
and
push
cmp
dec
or
popf
lods
aad
sbb
jo
push
mov
mov
mov
cmp
bound
pop
cmc
adc
jg
push
jecxz
lds
inc
and
jne
dec
add
sbb
mov
mov
adc
mov
push
cmp
stos
fstp
outs
adc
(bad)
movs
loop
mov
add
jmp
add
sub
jmp
ins
popf
fistp
out
mov
movs
jmp
std
xchg
jl
lds
ss
sub
scas
(bad)
test
mov
jb
xlat
ins
out
lds
sbb
bound
pop
out
push
out
cld
fwait
mov
test
dec
pop
inc
add
inc
cmc
or
je
jne
mov
movs
enter
in
shr
rcr
mov
out
mov
mov
cmp
or
jp
loope
int
test
mov
data16
push
push
sub
cmp
mov
rcr
repz
fcom
push
adc
sti
jns
(bad)
out
jbe
push
mov
imul
popf
aad
mov
stos
fidiv
das
daa
aas
push
push
es
inc
and
push
lods
mov
test
(bad)
rcl
jge
dec
add
loopne
outs
or
inc
mov
sar
jge
sub
int
inc
mov
sub
and
xchg
mov
test
jmp
and
push
pop
adc
icebp
jnp
or
sub
cmp
dec
icebp
test
mov
out
adc
dec
call
imul
out
test
and
jb
push
jnp
je
add
and
or
cdq
fnstcw
sbb
sbb
inc
les
test
arpl
push
out
cli
jne
pop
loopne
loopne
std
test
lods
fnstsw
les
xor
xchg
(bad)
xchg
mov
fucomi
mov
outs
in
mov
mov
pusha
out
out
idiv
push
pop
sbb
enter
fadd
xchg
je
pop
adc
dec
sbb
das
and
jnp
xchg
cmps
lods
and
imul
or
cmp
mov
add
call
fstp
lea
jg
jns
or
dec
adc
mov
fwait
ins
jle
push
sbb
in
lods
ret
popf
mov
push
xor
lods
ds
sbb
sbb
(bad)
mov
stos
add
sti
test
fiadd
mov
xchg
loope
sub
mov
in
mov
jp
fcomp
mov
test
int3
scas
loopne
mov
call
lods
lods
in
loopne
pop
pop
pop
ds
push
adc
push
pop
add
pop
out
shl
cmps
cmps
fistp
out
mov
div
mov
les
cld
and
scas
fs
ja
out
sti
mov
jae
popa
cmp
push
cmp
or
pop
push
es
xor
and
xor
mov
cmps
outs
sub
push
fs
int
mov
adc
pop
add
sti
cwde
shl
aaa
jno
pop
jmp
imul
xchg
sar
inc
sbb
das
ja
cmp
xchg
inc
shl
push
cmp
add
je
adc
outs
cmp
loopne
aam
push
dec
out
icebp
stos
stc
bound
or
fwait
call
repz
pushf
clc
fs
xchg
repnz
jle
dec
loopne
mul
rcr
add
or
add
fisubr
xchg
push
add
add
xor
ja
push
adc
inc
pop
adc
dec
cmp
pop
sub
push
or
inc
add
je
and
test
jbe
jecxz
lahf
pop
adc
popa
and
or
loopne
out
mov
pop
sub
les
cmps
lods
jecxz
jae
sbb
ja
jg
pop
adc
sbb
cmp
int
jecxz
test
pop
cmps
inc
or
and
xchg
aam
enter
scas
icebp
mov
(bad)
dec
shl
inc
add
jmp
enter
xchg
mov
es
mov
out
pop
jno
or
xor
frstor
ret
and
(bad)
mov
(bad)
jecxz
call
cmps
int3
mov
mov
xchg
mov
shr
je
push
cdq
shl
sbb
imul
cmp
inc
pop
sbb
adc
inc
adc
jbe
addr16
or
outs
sub
push
sub
dec
add
dec
or
data16
pop
xor
pushw
push
or
dec
cmova
ja
pusha
and
push
push
imul
push
xor
push
dec
cmovs
inc
cmp
jle
jb
dec
adc
dec
add
push
and
imul
xor
push
add
ins
add
and
and
or
sub
jp
push
xor
pusha
add
or
add
pop
sbb
ins
adc
pop
sbb
push
adc
sub
fs
sub
popa
cmp
js
arpl
jo
pop
aaa
jp
arpl
push
adc
push
adc
pop
push
jns
dec
cmp
es
push
sbb
jno
dec
sbb
aas
pop
sbb
jl
dec
adc
fsub
retf
xchg
mov
ret
mov
in
into
mov
stos
jmp
mov
test
mov
test
mov
call
mov
jmp
xchg
into
scas
push
popf
adc
fnsave
push
les
pop
or
call
and
mov
test
and
pop
mov
adc
test
sbb
rcl
scas
ins
bound
inc
rcr
ins
cmp
add
out
dec
test
and
or
(bad)
fnsave
movs
(bad)
fdiv
jb
inc
push
sbb
fidiv
cld
pop
xchg
lods
mov
pop
mov
adc
add
push
fiadd
adc
add
xor
ss
out
push
xor
add
push
ds
jge
push
push
addr16
pusha
add
push
pop
adc
inc
cmp
push
je
jl
pop
sbb
imul
add
pop
sbb
push
aas
inc
cmp
push
and
push
es
pop
push
dec
cs
or
push
pop
push
ja
inc
adc
adc
ja
outs
or
pop
jg
pop
sbb
and
adc
jp
push
or
cmp
sbb
data16
ja
je
jne
pop
and
ficomp
(bad)
mov
xchg
repz
jecxz
(bad)
test
mov
sbb
sub
or
push
and
xlat
cmps
out
into
(bad)
fistp
leave
xchg
jmp
mov
jmp
stc
mov
fistp
int
cld
mov
test
fst
rcl
loop
into
cmps
jmp
repnz
ret
add
retf
out
test
(bad)
scas
in
mov
stos
out
cld
nop
lds
lock
out
test
test
(bad)
aam
fst
fadd
jo
jg
gs
data16
ja
dec
cmp
push
or
xor
jbe
imul
das
outs
push
js
outs
das
dec
add
pop
inc
and
sbb
stc
sbb
add
inc
adc
cmp
and
in
sub
adc
xchg
ret
pop
pusha
cmp
dec
or
dec
sub
xor
sbb
out
jne
sar
pop
pop
pop
scas
dec
xor
cmp
repnz
js
sub
or
repz
sbb
int
movs
pop
cmp
add
mov
ds
fisubr
mov
cmps
jne
push
lods
jne
jo
sbb
xchg
push
movs
cld
mov
stos
arpl
inc
stc
sub
or
mov
xlat
ins
shl
push
add
lods
inc
bound
arpl
inc
sub
dec
or
cdq
retf
mov
mov
sbb
jae
inc
sbb
das
pop
cmp
push
and
dec
or
dec
or
push
push
dec
aas
jle
push
pop
inc
pop
sub
dec
push
jbe
addr16
data16
xor
pop
push
ins
ss
cmp
dec
andps
jge
push
ss
jle
and
inc
xor
jne
dec
add
pop
or
inc
punpckldq
dec
push
push
cmp
cmp
ins
add
push
dec
or
pop
sbb
push
adc
cmp
pop
cmp
dec
sub
dec
cmp
cmp
add
and
push
inc
and
jo
inc
add
pop
inc
push
dec
and
dec
aas
jg
push
adc
cmp
ja
inc
adc
sub
cmp
push
and
jg
sbb
mov
mov
(bad)
fistp
xlat
mov
loop
int
rcl
mov
jmp
xchg
sbb
jae
jns
bound
jl
ins
add
imul
or
or
outs
push
pop
and
sub
pop
push
jle
jb
dec
add
ins
cmp
aam
mov
outs
das
jge
pop
or
add
cmp
mov
sbb
mov
imul
cli
cwde
mov
jp
dec
stos
and
adc
xor
test
and
hlt
or
cmps
xor
leave
popf
mov
and
sub
les
adc
cdq
aas
dec
out
ss
retf
mov
js
push
and
xchg
std
push
enter
or
xor
xor
repnz
fist
dec
call
pop
imul
fsub
cmps
xlat
pop
ins
sub
pop
sbb
int
(bad)
mov
int3
sub
call
outs
adc
dec
or
push
push
pop
(bad)
data16
adc
dec
dec
and
ror
mov
loop
clc
pushf
rol
in
dec
push
dec
das
add
pop
cmp
adc
ja
jle
sub
adc
push
ja
push
sbb
jp
jnp
jge
inc
ss
pop
sbb
imul
jb
ins
push
pop
push
jle
pop
push
dec
and
add
outs
pop
jns
outs
das
dec
add
(bad)
shl
mov
xchg
iret
mov
sahf
cld
mov
xchg
(bad)
mov
mov
cld
test
test
test
(bad)
scas
out
pop
lods
in
and
repnz
repz
mov
scas
jmp
stc
mov
int
loope
mov
scas
call
mov
out
call
cmps
out
fisttp
into
xchg
lahf
fiadd
fimul
rol
stos
out
test
mov
test
jmp
clc
mov
call
pushf
lock
rcr
cwde
fbstp
iret
lods
(bad)
mov
pop
sub
cld
sbb
out
cmp
cmp
sahf
not
into
mov
push
xor
or
int3
xchg
push
fiadd
cdq
jle
(bad)
dec
adc
aaa
test
nop
outs
xchg
loopne
mov
call
lea
gs
cmp
hlt
mov
jo
cmp
ror
scas
mov
test
dec
stc
adc
xor
(bad)
sbb
add
dec
in
mov
data16
add
sub
(bad)
mov
ja
push
dec
mul
sti
mov
inc
add
add
sub
push
push
mov
push
inc
xor
retf
cwde
cmps
cdq
push
cmp
fiadd
xor
call
out
lahf
cmps
xlat
sahf
mov
sbb
sbb
call
retf
sbb
loopne
into
adc
repz
mov
mov
mov
xchg
lock
cmc
mov
out
jmp
xchg
mov
hlt
xchg
test
ret
dec
or
inc
and
and
ja
jns
dec
or
je
push
sbb
or
popa
pop
adc
inc
add
and
adc
jnp
ja
dec
push
pop
xor
push
push
jne
inc
sbb
push
add
outs
cmp
outs
maxps
jg
pop
push
push
cmp
push
es
inc
add
jns
ins
sub
pop
cmp
dec
add
push
push
jl
dec
pop
push
add
sbb
push
or
inc
das
pop
sbb
push
and
sub
push
add
and
ds
pop
sub
xor
pop
or
add
push
ss
pop
push
pop
adc
jns
push
adc
jno
cmp
inc
add
xor
pop
sbb
jnp
cmp
adc
es
loop
call
daa
clc
mov
inc
xchg
xor
xor
cmovg
cli
loopne
aam
fstp
push
sahf
aaa
je
pop
fist
pop
cwde
cmp
aam
mov
sub
jecxz
ins
pop
add
movs
cmp
or
adc
fadd
bound
gs
add
adc
arpl
rcr
adc
ja
in
aam
jnp
data16
iret
lods
jmp
ret
js
and
rcr
sbb
retf
jae
push
and
xchg
dec
or
movs
inc
je
ss
or
icebp
jecxz
shl
repnz
(bad)
icebp
mov
mov
and
and
ret
dec
mov
nop
test
sub
jle
sub
idiv
loope
sbb
push
xor
pop
das
outs
pop
inc
add
or
inc
add
jno
cwde
std
xchg
(bad)
xchg
fnsave
in
sahf
stc
mov
jmp
scas
iret
mov
xchg
popf
fld
fadd
scas
out
mov
popf
shl
inc
std
movs
sbb
ins
and
jge
cmp
adc
jns
push
adc
js
outs
or
sub
sbb
or
cmovs
dec
and
inc
xor
push
or
dec
add
js
pusha
add
inc
xor
outs
ss
sbb
pop
adc
push
ds
pop
cs
adc
sbb
pop
sbb
inc
and
xor
push
es
cmp
jnp
cwde
int3
and
xchg
lock
out
iret
mov
lock
jmp
mov
mov
xchg
cmc
xchg
rcl
fisubr
frndint
int
icebp
pop
fwait
shl
dec
pop
jnp
dec
adc
imul
add
inc
cmp
add
lahf
lods
pop
inc
xor
data16
pop
mov
xchg
lds
xchg
adc
xchg
jmp
push
inc
mov
cmc
mov
in
imul
mov
dec
daa
fild
aaa
not
mov
loop
xchg
iret
cmp
int3
scas
pop
add
loope
es
icebp
test
xor
lds
pop
mov
push
adc
cdq
frstor
int3
test
push
push
arpl
inc
add
shr
pop
ror
(bad)
lea
push
cmp
iret
lods
movs
arpl
xor
sbb
idiv
aam
retf
add
ss
push
popa
cmp
psrld
ret
and
(bad)
xchg
fimul
sti
mov
retf
clc
or
lea
and
into
mov
xchg
repz
rcl
xchg
inc
in
mul
push
add
jb
jo
popa
sub
push
adc
jle
outs
cmovae
and
mov
mov
call
nop
cli
mov
mov
les
ja
inc
aaa
popa
and
sub
cdq
(bad)
shl
stos
out
test
in
mov
mov
xchg
ficomp
shl
mov
call
aam
cmc
mov
fstp
loope
(bad)
mov
mov
(bad)
movs
jmp
cmps
(bad)
cmps
loop
loopne
lock
xchg
leave
mov
(bad)
fwait
hlt
mov
aad
retf
and
xlat
xor
xchg
(bad)
mov
xchg
rcl
retf
test
cmps
out
test
mov
out
pop
dec
and
pop
add
adc
jmp
clc
sub
adc
sub
in
xchg
aad
lods
add
movs
(bad)
jnp
add
pop
mov
or
sti
mov
sbb
or
movs
loop
lock
iret
lods
inc
sub
repz
inc
mov
mov
sub
cmp
in
mov
addr16
int
aam
nop
in
dec
cmp
jecxz
out
add
adc
push
adc
aam
clc
repnz
ret
(bad)
and
jmp
mov
adc
cmp
mov
and
pop
add
sub
xchg
sbb
std
aad
mov
sar
xchg
movs
push
frstor
push
push
push
retf
sar
fistp
jg
jle
pop
(bad)
movs
jmp
xlat
mov
jmp
xchg
ret
pop
test
stc
mov
out
xlat
mov
xchg
jmp
mov
mov
adc
in
cmp
cmps
repz
hlt
mov
pop
xor
js
cdq
cld
mov
or
pop
sbb
dec
or
adc
pop
push
push
add
jo
jae
jb
dec
cmp
push
xor
cmp
dec
or
push
ss
fs
push
pop
add
inc
sub
(bad)
icebp
test
out
pushf
fisubr
mov
scas
in
test
int
int3
mov
rol
mov
aam
std
mov
mov
mov
xchg
loop
dec
jmp
mov
(bad)
cmps
mov
(bad)
lock
lahf
rol
enter
loop
lds
int3
mov
cmps
sbb
jno
bound
dec
pop
pop
push
or
mov
and
push
dec
add
jecxz
shl
(bad)
mov
xor
popf
stos
push
ins
cmp
out
scas
pop
inc
sub
in
in
inc
pusha
dec
add
jmp
repz
call
mov
es
and
icebp
lods
shl
mov
inc
mov
fild
mov
mov
xchg
inc
cmp
retf
mov
mov
inc
add
xor
mov
xchg
sub
push
pop
add
mov
jl
out
hlt
out
enter
inc
daa
ja
adc
enter
and
push
xchg
xchg
in
mov
nop
xor
pop
fld
les
js
inc
bswap
mov
scas
xor
sub
push
jl
std
hlt
leave
nop
lahf
and
mov
dec
mov
or
or
cli
mov
leave
xor
mov
xor
cmp
daa
pusha
and
out
fcom
xchg
loop
scas
dec
push
inc
and
jge
pop
pop
push
cmp
addr16
dec
cmp
fld
scas
loope
fld
mov
xor
fadd
shr
xchg
jl
jnp
push
and
cmp
add
and
ja
pop
xor
cmp
push
dec
sub
mov
sbb
push
pop
imul
pop
push
jg
pop
sbb
dec
ds
dec
or
jnp
push
adc
outs
aas
jle
jo
popa
sub
dec
push
addr16
push
dec
pop
pop
aas
jae
push
or
jl
pop
xor
jge
arpl
jno
jns
push
push
inc
add
sub
dec
or
jp
jge
jg
pop
sub
ss
pop
jbe
gs
pop
xor
popw
push
pop
jbe
push
push
pop
xor
or
inc
cmp
jno
jne
dec
pop
pop
aas
push
and
xchg
out
test
gs
sbb
or
mov
and
xor
int
test
and
fnstenv
dec
push
and
sti
mov
cmp
fldenv
popa
test
test
(bad)
push
cwde
enter
jno
fdivr
push
fnstcw
and
sub
mov
popa
add
or
jno
sti
(bad)
aam
rcl
or
push
enter
cmc
xor
inc
pop
adc
jmp
inc
call
popf
ds
repz
adc
test
xchg
aaa
jge
pop
je
cmp
push
sub
push
sbb
gs
adc
out
cmc
push
imul
hlt
enter
enter
addr16
adc
cmps
jmp
xor
(bad)
mov
jle
add
jmp
adc
jmp
aad
call
sbb
and
hlt
or
cmp
je
or
test
fist
aam
call
ret
mov
lods
rcl
popa
and
inc
adc
jo
push
adc
pop
sbb
ss
push
adc
cmp
imul
je
inc
sbb
inc
adc
inc
add
ins
and
dec
pop
push
pop
push
je
inc
pop
pop
or
and
push
xor
inc
and
imul
and
dec
cmp
jae
push
pop
imul
arpl
inc
add
push
adc
jnp
push
adc
sub
dec
pop
je
addr16
and
inc
xor
push
or
xor
or
jge
dec
push
outs
or
or
inc
sub
cmp
dec
pop
pusha
and
push
pop
jns
jle
jg
pop
and
fcmovu
cld
cmps
lock
lahf
push
inc
outs
sub
shl
sar
mov
outs
pusha
xchg
out
mov
in
movs
fist
cmps
neg
push
adc
add
dec
outs
pop
sbb
sbb
fnsave
jmp
fadd
es
push
add
and
mov
xchg
inc
and
ror
(bad)
cmp
or
cli
mov
dec
or
iret
mov
adc
inc
jne
outs
pop
sar
push
sbb
adc
clc
mov
das
inc
xor
mov
test
jp
retf
std
pop
jge
cmp
mov
test
int3
mov
stos
jmp
inc
and
arpl
dec
mov
and
leave
or
popa
pop
add
xor
or
adc
jbe
cmovp
lock
lds
aas
jl
cmp
test
mov
jg
shr
mov
rcl
mov
cs
jmp
cdq
es
push
jecxz
dec
pop
cmp
lods
cli
pop
mov
pop
cmp
jl
jecxz
leave
les
out
les
xor
inc
and
and
dec
cmovns
or
pop
inc
add
enter
hlt
mov
nop
cmc
mov
mov
mov
jecxz
retf
xchg
hlt
mov
in
in
and
in
iret
mov
mov
test
mov
fstp
cmps
(bad)
xchg
(bad)
mov
cmp
shl
int3
xchg
xlat
test
popf
aad
repz
(bad)
rcl
ret
scas
ror
retf
cwde
cli
mov
xchg
ror
clc
mov
mov
fcomp
repnz
fidiv
rcl
fisubr
jmp
(bad)
loope
int
clc
movs
cli
test
mov
fcom
shl
jmp
inc
std
and
adc
sahf
stos
jl
pop
jmp
test
and
adc
scas
sahf
rsm
ffree
test
movs
pop
dec
or
dec
das
bound
mov
mov
call
sahf
in
add
inc
pslld
pushf
stc
test
ss
cmp
xchg
pushf
(bad)
adc
inc
sub
enter
ds
add
xor
mov
scas
fcomp
inc
pop
push
mov
test
out
fidivr
mov
pop
ins
pop
mov
sbb
scas
repnz
jno
in
and
and
iret
mov
sbb
add
jmp
cmc
cmps
loop
and
pop
xchg
les
xchg
push
add
mov
pop
jne
outs
jge
mov
outs
mov
inc
or
xor
mov
and
ins
push
repnz
(bad)
ret
mov
dec
push
in
inc
mov
sub
sti
(bad)
jns
push
ss
xor
neg
mov
lea
xor
jne
mov
shl
mov
or
cmc
in
mov
cvtdq2ps
ins
jbe
jbe
(bad)
(bad)
inc
sbb
mov
or
lea
(bad)
xlat
and
loop
mov
inc
inc
mov
jo
test
sub
mov
es
(bad)
aad
adc
cmp
loop
pop
div
jbe
jnp
mov
mov
int3
adc
push
pop
push
add
mov
les
jmp
inc
repnz
fadd
cs
gs
jle
mov
pop
sub
imul
lds
in
retf
pusha
push
mov
mov
fidiv
lock
push
adc
push
out
xor
aad
lds
push
fmul
cwde
cmp
inc
adc
xchg
inc
inc
jp
es
or
push
fdiv
ret
add
repnz
ret
aad
test
xchg
push
adc
ins
(bad)
pop
leave
dec
ror
sbb
(bad)
jnp
add
test
mov
test
mov
mov
push
pop
daa
mov
sbb
or
mov
sub
out
xor
iret
shl
shr
mov
xor
dec
push
xchg
ds
mov
xchg
sub
mov
mov
std
jg
ret
inc
sbb
cmp
add
stos
mov
push
xchg
xor
mov
jecxz
push
outs
loope
or
jge
in
sub
push
jmp
mov
movs
inc
cli
hlt
cdq
and
and
xchg
inc
int3
add
sbb
popa
or
in
ss
sub
xor
inc
mov
arpl
lea
icebp
add
fisub
pop
mov
movd
ror
push
or
fs
add
xchg
jmp
sbb
(bad)
shl
mov
std
arpl
dec
or
pop
test
imul
punpckhwd
xor
or
inc
cmp
push
pushfw
arpl
dec
js
mov
test
out
add
and
mov
push
xchg
aas
leave
add
pop
lods
out
cwde
std
mov
push
xor
jecxz
xchg
enter
in
hlt
es
test
jno
dec
ins
pop
cli
cmps
leave
jne
test
dec
retf
mov
or
ins
ja
mov
pop
inc
dec
int
and
pop
(bad)
shl
mov
ror
mov
push
mov
out
cwde
fadd
jge
sbb
in
iret
sbb
jmp
stc
mov
push
arpl
cmp
push
outs
jbe
int3
stos
or
mov
fsub
jg
out
pop
pop
ins
push
and
ror
xor
cli
push
test
sub
mov
mov
cdq
sub
cmps
push
sbb
mov
pop
repnz
cmps
movlps
dec
ret
jae
arpl
jne
mov
adc
fs
jnp
icebp
dec
mov
aad
sub
popa
loope
sti
pop
pusha
or
cmp
dec
jno
stc
in
out
movs
jno
push
push
mov
pushf
dec
js
mov
into
mov
mov
or
rcr
add
inc
jle
clc
mov
into
mul
js
adc
sub
ret
aam
inc
(bad)
stos
xor
push
mov
push
xchg
pusha
retf
in
test
mov
test
dec
dec
sahf
sub
xchg
sbb
push
jmp
add
xor
lea
fwait
xchg
mov
ret
aam
out
mov
mov
hlt
jae
fisubr
mov
mov
scas
lds
mov
gs
xchg
out
mov
gs
mov
sbb
cmp
(bad)
int
mov
das
fs
lods
or
popa
(bad)
popa
out
jb
mov
pop
jne
push
gs
movs
dec
imul
stos
fwait
jns
add
aas
pop
into
dec
scas
pop
jae
push
dec
jp
lods
rcl
mov
in
push
mov
aaa
cli
jge
sub
add
ret
movs
cwde
pop
outs
push
repnz
or
or
ja
xchg
pop
push
mov
cmp
push
(bad)
mov
icebp
pop
xor
cdq
xchg
jle
inc
mov
jmp
xchg
and
mov
push
mov
nop
sub
sub
std
jnp
xchg
lahf
and
rol
xor
jecxz
cmps
stos
movs
imul
inc
inc
imul
mov
mov
in
or
and
enter
aam
push
mov
scas
inc
leave
mov
mov
test
rol
into
int3
ror
sub
sub
aas
int3
dec
sbb
pop
in
xor
call
loope
pop
and
mov
adc
jns
iret
mov
fcom
and
push
mov
mov
xchg
cmp
pmaddwd
mov
jl
mov
pop
jb
xchg
push
push
dec
xchg
mul
mov
adc
or
in
cld
push
jo
jne
mov
mov
into
cwde
mov
imul
and
push
jmp
add
xor
fcmovnu
hlt
push
and
leave
sbb
in
popf
ds
icebp
call
push
cmc
jle
fild
gs
int
inc
mov
sbb
(bad)
fmul
pop
retf
es
fsub
arpl
aad
mov
loopne
sar
jno
mov
jnp
lds
add
mov
scas
jno
lods
push
adc
pop
jmp
leave
dec
cmp
out
push
add
retf
sahf
push
push
scas
ds
fldenv
add
pop
jge
js
cmp
xchg
jmp
(bad)
mov
push
cdq
and
call
xor
movs
(bad)
push
(bad)
mov
shl
xchg
sti
lea
repz
push
xor
(bad)
adc
mov
pushf
sub
add
push
div
gs
data16
pop
xchg
pop
popa
pop
add
daa
sahf
adc
(bad)
in
bound
test
nop
pop
mov
push
add
mov
add
or
jno
daa
pop
adc
(bad)
mov
inc
aad
and
xlat
in
jge
dec
cmc
jmp
jl
into
into
mov
push
leave
stos
mov
mov
or
and
inc
push
jmp
add
inc
push
and
test
or
fsubr
and
push
add
call
and
(bad)
outs
cmc
or
test
loop
(bad)
jmp
in
shl
xchg
mov
sbb
pop
popf
xor
ret
and
cmp
jnp
ror
xchg
jp
mov
into
dec
out
mov
inc
mov
test
pop
test
loope
mov
sti
ss
or
scas
outs
jmp
push
aam
xchg
aad
xchg
xor
mov
jae
inc
dec
or
jge
fisub
iret
movs
xlat
cmp
mov
mov
push
cmp
cmp
cdq
mov
popa
sbb
mov
cmp
out
scas
push
mov
mov
inc
sub
mov
aas
stc
add
or
cli
pop
xchg
(bad)
adc
mov
or
pop
sar
cmp
and
pop
mov
cwde
jns
imul
imul
jmp
mov
pop
rcl
mov
dec
dec
leave
pop
cmp
outs
and
mov
shl
clc
or
scas
inc
or
div
std
mov
and
stos
pop
dec
mov
fiadd
jle
push
std
mov
repz
test
pop
sbb
mov
das
imul
std
dec
or
inc
in
sub
push
sti
mov
mov
mov
cwde
out
call
mov
shl
icebp
icebp
movs
aaa
adc
cs
and
popa
and
jge
aas
outs
mov
add
or
xor
adc
jbe
and
out
xor
pop
loop
push
jmp
add
sub
mov
xchg
(bad)
xchg
sahf
jae
pushf
mov
mov
or
fdivp
jmp
dec
jnp
dec
daa
scas
frstor
or
xor
(bad)
sahf
sti
mov
data16
cld
xchg
mov
dec
sub
in
popf
pop
adc
or
js
jno
mov
xor
daa
sub
xchg
xor
movs
lods
rcr
scas
pop
call
dec
popa
sbb
sub
imul
inc
popa
dec
ret
sub
sbb
jg
mov
adc
xchg
cmp
and
push
test
xor
mov
adc
test
mov
clc
mov
cmp
in
hlt
mov
loope
mov
push
adc
daa
mov
in
mov
jge
inc
sub
xchg
icebp
sti
loop
loopne
lock
into
inc
and
enter
push
mov
xchg
pushf
mov
fst
pop
pop
adc
ins
ss
pop
loopne
es
rcr
mov
ja
cwde
sbb
push
stc
push
mov
mov
out
sti
mov
loopne
(bad)
aam
enter
ins
inc
and
sbb
fcmovnb
pop
and
imul
jmp
scas
(bad)
mov
test
scas
mov
jecxz
in
pop
and
push
xchg
pop
fs
sbb
cmp
sbb
sub
dec
xchg
mov
push
mov
(bad)
mov
mov
xchg
sbb
aas
movs
pop
loop
push
jmp
mov
cmps
repz
jo
sbb
popf
cmp
jmp
leave
or
push
loope
(bad)
cmc
mov
pop
mov
sub
dec
sub
(bad)
stc
adc
arpl
loopne
pop
jp
or
cmp
inc
js
arpl
inc
xchg
mov
mov
mov
fdivr
imul
jmp
mov
std
push
lds
sub
cmp
mov
xor
hlt
pop
ud0
xor
jmp
pop
retf
and
(bad)
pusha
neg
dec
icebp
dec
jecxz
scas
add
int3
loopne
xchg
arpl
adc
mov
int
lods
sub
pop
mov
xchg
push
stos
(bad)
arpl
outs
pop
cmc
add
push
and
loope
pop
mov
mov
shr
mov
ret
add
and
inc
xor
movs
and
dec
out
push
push
mov
mov
sti
lea
fld
fs
jns
jae
call
not
xchg
lods
cmp
push
add
shl
jo
adc
ror
mov
lahf
lods
in
mov
(bad)
leave
mov
xlat
pop
inc
rcl
adc
sbb
aad
and
mov
xchg
cmp
cmp
iret
ds
mov
sub
pop
mov
imul
mov
sub
(bad)
fimul
stc
call
pop
arpl
sub
add
mov
clc
jns
cmps
cwde
jp
cmps
inc
cmp
movs
pop
dec
mov
in
mov
lahf
std
mov
sbb
xor
je
jg
arpl
sub
ins
jge
sub
mov
(bad)
gs
add
fst
jns
mov
push
lods
(bad)
jns
and
ret
iret
fdiv
sahf
hlt
mov
push
jns
test
xchg
je
mov
jl
sbb
stos
sub
jo
jp
aad
lea
add
pop
lahf
xor
cwde
les
inc
jecxz
aad
stos
inc
in
stos
icebp
std
pop
xor
test
xor
dec
xchg
cmc
popf
push
(bad)
xor
mov
icebp
nop
shl
sub
(bad)
inc
jnp
into
in
mov
std
xchg
jg
jecxz
jmp
int3
mov
mov
aam
test
call
pop
popa
pop
sbb
aad
sti
adc
add
dec
push
or
test
mov
loopne
push
call
mov
xor
pop
cmps
adc
mov
sub
stc
ficomp
mov
inc
daa
fnsave
pop
popa
dec
mov
mov
outs
call
cmc
aad
xchg
dec
dec
cmps
cmp
xor
pusha
mov
mov
or
lock
int
fmul
test
inc
ret
cmps
and
mov
sub
jns
pop
out
retf
bound
sub
push
xor
jae
std
or
mov
add
sti
shr
adc
cmp
enter
xchg
scas
push
fistp
js
cli
fisub
ret
sub
mov
ins
pop
shr
out
mov
add
es
lock
dec
push
mov
fwait
or
call
jl
mov
int3
gs
loop
push
out
and
shl
or
push
jae
inc
pop
(bad)
call
imul
cmps
sub
shl
(bad)
movs
xchg
push
add
push
sahf
dec
add
test
ins
fcomp
or
push
mov
dec
sub
ins
sbb
ss
fwait
jmp
aaa
jbe
lahf
pop
jbe
call
mov
cmp
xchg
inc
xor
dec
mov
inc
lods
cmps
push
sub
sub
and
add
ins
rcr
mov
mov
sbb
pop
(bad)
pop
sti
inc
xor
fld
or
movs
xchg
clc
inc
imul
mov
mov
cmp
fwait
xchg
and
mov
push
xchg
loopne
loope
cmp
mov
cmp
stc
into
lds
or
cmp
pushf
push
and
push
inc
xchg
push
into
pop
jb
pop
es
fidivr
mov
std
sti
lock
dec
jmp
(bad)
cs
mov
fisubr
test
mov
cmp
cs
sbb
repnz
ins
cmc
test
pop
jmp
mov
add
adc
and
ja
fisttp
pop
xor
addr16
outs
mov
jno
mov
dec
rcl
mov
iret
xor
mov
fstp
stos
xlat
dec
out
jo
mov
dec
sub
cmps
gs
enter
jo
push
sub
adc
vpunpcklbw
sub
aas
(bad)
dec
ret
dec
test
mov
std
push
jg
test
aaa
or
js
movs
shl
pop
xlat
mov
pmaxub
pop
lea
stc
adc
sbb
push
xchg
sbb
sahf
shl
shr
push
in
adc
inc
push
jae
pop
cdq
cli
mov
jge
push
test
loop
or
dec
lods
xchg
ffree
iret
jmp
xchg
leave
mov
cli
loop
cmp
add
add
stos
aas
and
popa
jmp
inc
mov
call
pop
sub
test
or
mov
outs
jg
test
cs
xchg
fbstp
fcmovbe
sbb
fs
fs
cmps
pop
aad
clc
icebp
nop
pusha
mov
push
xchg
popa
xchg
push
sub
into
push
rcl
push
int3
push
sbb
aad
and
cld
jne
sar
jecxz
ss
pusha
jbe
imul
jmp
add
add
xchg
dec
repz
adc
mov
sbb
and
jmp
xor
clc
lods
ins
sahf
dec
je
pop
repnz
jge
(bad)
enter
mov
jge
bound
mov
inc
pop
xchg
push
out
push
and
cmps
pop
sbb
push
mov
outs
sbb
push
cmp
pop
and
dec
pop
mov
pop
out
xor
ins
mov
aam
(bad)
mov
retf
cmps
mov
popf
pop
mov
out
shr
mov
push
out
mov
xchg
std
inc
jo
fnstenv
(bad)
or
bound
dec
mov
sbb
icebp
loope
sub
lahf
xor
mov
aaa
mov
add
fsub
fwait
into
xchg
sti
sub
adc
mov
cld
test
js
xchg
mov
loope
(bad)
fild
and
lods
push
mov
xor
xor
xchg
into
std
(bad)
imul
bound
mov
push
add
psubw
xor
mov
or
stos
in
lock
mov
aad
xchg
mov
adc
inc
data16
xchg
in
xor
(bad)
mov
jb
dec
mov
inc
mov
loop
mov
mov
pop
jmp
dec
mov
or
jns
loopne
nop
int3
mov
pop
stc
pop
cmp
shl
sar
mov
cld
or
jmp
jge
mov
aam
out
sub
scas
dec
clc
mov
in
push
xchg
(bad)
mov
loopne
jg
addr16
aaa
dec
mov
push
mov
out
inc
add
mov
cmp
sbb
retf
cmp
scas
mov
jle
mov
das
neg
lahf
add
inc
mov
push
std
mov
in
mov
test
jae
mov
out
icebp
jns
add
xor
push
xor
cdq
push
add
bound
stc
es
sbb
sub
dec
mov
xor
ins
lods
add
mov
loopne
or
push
add
jb
es
iret
arpl
xchg
pop
ret
jle
loopne
fiadd
and
mul
xchg
fimul
add
adc
ins
xchg
add
test
ins
js
out
loop
add
retf
jnp
mov
repz
jecxz
js
es
psrad
xchg
shl
repnz
xor
imul
dec
jbe
nop
mov
jp
mov
mov
sbb
popa
out
and
ficomp
pop
adc
loopne
(bad)
and
pop
sub
sar
hlt
movs
mov
lods
ss
push
sbb
sbb
mov
and
sbb
cmp
fsubr
dec
dec
imul
dec
mov
pop
inc
stos
rcl
or
cmps
jns
mov
or
or
in
es
or
and
js
xor
mov
into
test
pop
and
push
fwait
dec
mov
and
(bad)
and
fistp
jae
add
and
aam
or
pop
xor
pop
pop
pushf
repz
inc
cdq
mov
and
xchg
inc
xchg
stos
pushf
push
inc
popa
loope
xor
cmp
xchg
jne
jns
and
inc
push
inc
cmp
imul
dec
fistp
aas
sbb
dec
fldenv
jle
jns
sbb
pop
movs
jg
sbb
and
cmps
mov
pop
or
xchg
sub
aam
test
test
js
repnz
push
arpl
pusha
and
int
aam
outs
mov
movs
retf
int3
fwait
stos
jge
sti
push
(bad)
shl
sbb
or
push
sbb
jnp
pop
adc
enter
in
cmc
adc
mov
mov
outs
loop
add
test
add
aas
in
ror
and
push
mov
or
jns
push
call
arpl
rcr
hlt
mov
je
jns
adc
fdiv
pop
clc
mov
rol
loope
and
and
sahf
sub
(bad)
jp
cmp
ss
xor
cld
jnp
sub
dec
xchg
loop
fld
or
push
adc
add
and
out
test
or
push
repz
xor
xchg
or
imul
mov
mov
inc
ret
inc
sbb
sti
jnp
xchg
sbb
mov
dec
or
mov
ins
sbb
outs
push
in
mov
or
nop
daa
jb
lea
pop
add
xchg
push
add
and
mov
inc
add
ds
adc
inc
lods
loopne
push
scas
sti
jl
jl
xor
jb
mov
ds
clc
pushf
xchg
ror
push
pop
sbb
cdq
sub
fidiv
xchg
cmps
mov
fucomi
xchg
pop
out
adc
mov
push
retf
and
adc
stos
fdivr
imul
popf
jp
inc
sub
popa
(bad)
mov
or
xchg
ins
xor
push
pop
push
cmps
sar
repz
imul
and
push
pop
sbb
sub
and
dec
cwde
test
pop
push
sub
loopne
add
(bad)
pop
pushf
jmp
mov
mov
jg
or
pop
scas
retf
push
push
jmp
mov
push
and
jae
fnsave
stos
jmp
or
sbb
cmps
or
jp
cld
mov
and
(bad)
push
inc
jnp
repnz
aaa
jo
fisubr
repz
rol
out
pop
sub
das
and
sbb
cmps
shl
cld
pushf
add
mov
xor
mov
retf
pop
ss
div
mov
cmp
outs
mov
pushf
ret
pop
sar
hlt
addr16
xor
jmp
dec
xchg
loope
and
shl
sub
iret
cmp
inc
add
or
inc
int3
inc
rcr
pop
(bad)
jmp
xchg
xchg
mov
stos
movs
mov
es
adc
cmp
cld
mov
ins
out
scas
jecxz
push
sahf
ret
sub
and
dec
xor
data16
mov
push
neg
or
mov
adc
into
mov
(bad)
xchg
dec
in
call
(bad)
in
cwde
in
pop
or
(bad)
xor
(bad)
mov
int3
test
xchg
jmp
js
xlat
je
nop
popa
repz
enter
push
ins
xor
retf
cs
push
sti
ror
mov
imul
or
xchg
iret
mov
rcr
rcr
inc
stc
pop
mov
les
(bad)
call
xchg
stc
rcl
pop
lods
in
xchg
adc
js
in
add
pop
jb
repz
stos
iret
mov
push
pop
push
(bad)
das
repz
in
and
cdq
mov
imul
arpl
ror
(bad)
dec
test
xchg
popa
and
jmp
fisttp
movs
loope
push
cmp
sub
xor
fistp
dec
jmp
je
xor
pop
scas
jb
test
loope
jbe
psllq
jp
xor
inc
lock
ins
add
cmp
inc
mov
push
ret
das
sub
popf
outs
cmp
cmc
push
push
ds
adc
mov
mov
jnp
cs
ror
inc
mov
push
or
xor
lahf
sub
shr
sti
add
mov
pmaxsw
pop
adc
and
push
jnp
push
add
push
leave
xchg
dec
mov
inc
xor
ds
inc
fisttp
push
shr
arpl
out
lock
fidivr
push
jnp
sbb
mov
fwait
shl
pushf
pop
sbb
mov
mov
fbstp
dec
std
jns
int
movs
ret
mov
push
mov
je
mov
xchg
repz
mov
(bad)
in
(bad)
xor
pop
adc
sub
push
jp
xchg
cmc
sbb
and
outs
cmp
sbb
ins
test
dec
mov
or
pop
push
dec
ret
jns
dec
and
int
or
js
pop
or
je
es
fstp
sub
pop
pop
xor
push
sbb
push
cld
pop
sub
mul
adc
movs
cwde
push
shl
mov
mov
test
stos
outs
mov
cmp
mov
jbe
minps
popf
(bad)
je
xor
adc
out
mov
push
fisub
add
push
mov
test
test
or
dec
sti
push
add
ret
stc
pop
test
add
pop
scas
inc
mov
in
xchg
xchg
js
push
movs
cwde
push
mov
ret
push
fldenv
or
mov
push
xchg
sbb
add
call
mov
test
(bad)
sub
rep
std
fnstenv
jecxz
sbb
mov
jns
sbb
iret
jle
push
scas
mov
outs
(bad)
and
and
not
dec
int3
xor
pop
fdiv
in
inc
mov
outs
shl
fst
stc
push
pop
mov
xchg
inc
mov
icebp
and
ds
(bad)
or
mov
jge
cdq
outs
mov
push
fdiv
sbb
push
hlt
and
aaa
adc
push
mov
clc
das
adc
push
cmc
pop
xchg
mov
or
loop
les
out
fst
aad
out
or
sub
xchg
mov
xchg
inc
shr
nop
xchg
inc
rol
sbb
mov
jge
jnp
pop
mov
mov
mov
arpl
pop
cmp
sbb
pop
cmp
pop
int
ds
push
add
mov
jne
xchg
jp
or
jmp
(bad)
test
(bad)
pop
mov
aad
retf
xchg
ins
mov
jb
jb
push
or
adc
or
sbb
pusha
enter
aas
or
pop
mov
dec
repnz
adc
pop
add
jnp
mov
jmp
mov
xchg
xchg
jg
adc
pop
fist
xchg
hlt
push
(bad)
xor
dec
mov
cdq
arpl
mov
scas
mov
xchg
add
xchg
pusha
mov
(bad)
(bad)
aaa
sbb
cmp
sbb
sub
push
mov
push
mov
dec
ror
sbb
mov
add
and
sub
or
mov
(bad)
imul
or
or
call
jmp
test
jo
popa
mov
xor
out
out
stos
mov
fldcw
xor
mov
or
hlt
or
xchg
(bad)
and
dec
mov
(bad)
jge
push
(bad)
cmp
jnp
push
pop
lds
(bad)
add
or
mov
fidiv
repnz
push
out
(bad)
aaa
loop
cmp
clc
(bad)
(bad)
aas
adc
cmp
hlt
xor
std
dec
mov
mov
in
xor
ret
dec
mov
ret
inc
xchg
cmp
xor
hlt
das
adc
cmp
cmp
or
cs
dec
xchg
jge
popa
aam
adc
mov
jecxz
pop
enter
adc
aas
add
daa
push
repz
jmp
stos
arpl
enter
sub
xor
push
scas
mov
or
daa
das
sti
push
test
add
ret
xlat
push
std
inc
xchg
popa
mov
cld
and
out
pop
cmp
repz
pop
mov
es
mov
lods
mov
cmps
inc
test
or
push
fild
inc
lods
jge
cmp
addr16
and
in
push
call
ds
xchg
outs
cmps
xchg
arpl
cs
and
rol
hlt
add
into
ss
push
or
push
xchg
lahf
push
lds
dec
mov
or
pusha
test
push
movs
xchg
inc
loope
loop
into
push
int
adc
leave
les
sbb
xor
pop
mov
call
adc
jbe
xor
aaa
int
or
cmp
dec
shr
pop
mov
ficomp
adc
sub
and
pop
sbb
xor
das
pop
lods
jae
nop
inc
rcr
neg
sti
and
mov
and
sub
sbb
ss
pop
lds
pop
mov
fdiv
and
xor
xchg
jns
sahf
imul
sbb
in
pop
retf
sbb
cs
in
sbb
push
xchg
pop
mov
data16
std
sub
jo
or
in
stos
(bad)
xchg
xchg
inc
mov
push
mov
stos
call
pop
adc
inc
cmc
sub
and
(bad)
cmp
add
inc
mov
mov
fs
mov
pusha
mov
gs
xor
jmp
jmp
das
stc
dec
mov
push
stos
imul
repnz
push
or
daa
icebp
sub
dec
xlat
aaa
sbb
cmp
push
sbb
in
xlat
push
jg
add
mov
and
retf
xor
cli
dec
mov
retf
push
xor
inc
mov
(bad)
jo
test
mov
gs
push
lods
push
mov
jle
movs
loop
std
pop
enter
rcr
inc
mov
mov
(bad)
retf
ins
sar
cmp
sbb
sub
xor
daa
ins
retf
sub
retf
mov
adc
push
xchg
jne
push
lods
out
dec
rol
push
stos
fimul
adc
sub
xor
xchg
push
dec
mov
cli
ss
dec
test
ss
mov
or
add
and
and
cmp
sub
loope
or
xchg
cdq
fs
cmp
push
fstp
cmps
pusha
fcomp
call
stos
ins
bswap
xor
add
adc
or
mov
ds
pop
xchg
cwde
jbe
pop
cld
cmp
sub
lahf
cwde
arpl
dec
mov
test
mov
jp
ins
retf
xor
mov
std
dec
mov
call
mov
cld
sub
popf
mov
or
push
(bad)
push
mov
test
mov
fs
gs
hlt
aaa
xlat
or
jo
(bad)
jae
sub
enter
cmp
or
es
cld
adc
jae
fisub
test
lods
xchg
int
test
sar
push
sti
pop
cmc
push
mul
jnp
pusha
fistp
xor
iret
mov
dec
cmp
stc
cmp
push
xchg
dec
mov
inc
fimul
mov
xchg
mov
fcomp
dec
mov
loop
call
mov
xor
test
jno
dec
sub
and
dec
test
mov
mov
and
sub
or
ss
mov
xlat
xor
call
inc
icebp
inc
mov
cmps
ja
add
push
or
out
add
mov
gs
sahf
push
mov
mov
popa
movs
mov
pop
xchg
inc
les
xchg
inc
jmp
iret
add
push
es
dec
xchg
jbe
add
stc
sub
pop
mov
test
aaa
sbb
out
lock
enter
push
outs
fsubr
pop
neg
jbe
adc
pop
fcomp
iret
sub
push
icebp
and
cmp
int3
pop
stos
xchg
fs
sar
mov
outs
(bad)
inc
stos
call
mov
or
ret
repz
inc
mov
mov
and
(bad)
stos
gs
add
loope
or
cmp
cmp
rcr
call
adc
cmp
pop
les
jecxz
loope
mov
xor
in
add
dec
mov
test
xchg
jae
pushf
xchg
dec
test
fwait
inc
fisub
dec
mov
xchg
dec
scas
pushf
push
pop
mov
outs
mov
and
pop
stc
dec
xchg
jge
xchg
jp
xchg
outs
test
inc
mov
mov
daa
loopne
mov
mov
hlt
aas
push
out
ret
ss
push
leave
aaa
or
and
(bad)
bound
sbb
dec
shl
adc
ss
and
div
out
psubw
mov
cs
xchg
(bad)
pop
aam
mov
jmp
test
inc
mov
pop
test
jle
bound
dec
xchg
sahf
call
xchg
inc
fsubr
or
loope
sti
and
sub
push
test
fist
dec
movs
test
(bad)
leave
push
int3
aaa
push
(bad)
rcl
pop
mov
jae
(bad)
jge
in
adc
cmp
repz
mov
pop
adc
sub
cmp
test
jno
jne
xchg
inc
fld
sbb
aas
out
sub
sbb
leave
cmp
prefetch
retf
mov
ficom
(bad)
iret
xor
sbb
pop
test
cmp
cld
aaa
out
xor
and
sar
push
shl
out
sub
and
and
xchg
jns
aas
into
cmp
mov
mov
inc
ss
out
pop
mov
or
ins
mov
jg
dec
test
addr16
cmp
add
cmp
mov
outs
push
or
push
dec
mov
pop
mov
imul
test
and
add
push
into
cmp
sbb
call
call
mov
sahf
call
xchg
jae
sbb
dec
mov
std
sahf
addr16
push
loope
mov
das
sub
add
jmp
pop
jge
pop
mov
mov
cmp
jl
cmp
cmp
(bad)
lock
in
xchg
cwde
fs
and
jo
sub
add
push
xchg
sub
out
add
mov
push
mov
lahf
jg
jbe
mov
fadd
adc
imul
jbe
outs
sub
loope
add
xchg
call
cs
inc
sar
repnz
pop
movs
gs
das
or
hlt
pop
(bad)
ja
add
push
enter
or
dec
movs
mov
das
or
xor
ds
and
pusha
out
mov
ficomp
retf
je
pop
push
adc
and
push
mov
add
movups
dec
mov
jns
call
jmp
push
cmp
adc
adc
adc
push
(bad)
cmp
dec
mov
stos
sub
and
in
sub
sub
or
xor
call
xchg
dec
sbb
call
or
pop
fdiv
jno
pop
test
fcomp
jns
and
push
icebp
pop
test
sub
sub
ds
mov
mov
pop
test
nop
sahf
mov
movs
mov
bound
aas
add
ret
xor
and
jmp
psubsb
push
std
push
sub
in
sbb
sbb
lock
sub
sub
in
pop
shl
jg
xchg
inc
mov
test
push
dec
mov
hlt
mov
mov
out
mov
xchg
sub
mov
mov
mov
inc
sub
lods
jmp
test
xchg
bound
mov
mov
fisttp
jecxz
iret
cmp
mov
mov
cmp
pop
sbb
shl
hlt
push
mov
mov
dec
mov
out
cmp
out
sub
xchg
inc
ret
push
dec
dec
jmp
push
jmp
and
pop
cmp
fisubr
movs
mov
inc
mov
push
rol
icebp
pop
fnsave
int
ins
repz
ds
pop
sub
rcl
add
dec
mov
mov
xlat
push
stc
pop
mov
(bad)
jle
nop
inc
mov
in
sbb
dec
xor
jae
or
sahf
sahf
inc
mov
add
test
add
add
std
push
rcl
sub
mov
pop
dec
shr
pop
xchg
call
push
sub
repz
or
xor
iret
test
dec
fild
push
cmp
ss
stos
mov
lea
js
mov
inc
sar
xor
push
cld
add
cmp
mov
pusha
(bad)
or
or
pop
movs
xchg
ret
cmp
xchg
jp
addr16
pop
(bad)
cmc
pop
movs
jle
sub
or
std
or
xor
pusha
cmps
outs
fisttp
sbb
lods
xchg
call
pushf
push
push
in
cs
cmp
and
dec
fsub
cli
pop
mov
aad
xchg
jb
nop
jl
arpl
dec
sub
jno
and
popa
mov
push
stos
xchg
jge
daa
xor
xor
pop
(bad)
mov
imul
dec
mov
das
jmp
and
adc
push
into
xor
mov
test
jecxz
(bad)
xor
inc
into
xor
loopne
adc
pop
xchg
jb
inc
retf
pop
xchg
addr16
test
jmp
mov
enter
loop
enter
mov
shl
or
xor
dec
std
and
ret
repz
imul
pop
mov
shl
test
jle
push
xor
mov
shr
rol
shl
loopne
adc
ret
inc
and
or
pop
sbb
pop
fadd
sbb
dec
sbb
cmp
mov
mov
call
jmp
mov
push
jecxz
sbb
test
jno
xor
dec
int3
dec
mov
fidiv
in
dec
mov
fimul
stc
cmp
mov
mov
fisubr
lds
call
dec
cmp
cmp
sub
call
add
and
in
repnz
leave
push
pmuludq
sbb
nop
jo
nop
(bad)
sub
in
add
aam
sbb
daa
repz
call
les
(bad)
push
mov
or
xor
dec
aam
out
cmp
sbb
and
jno
cmp
psubsw
leave
pop
in
test
ja
adc
or
pop
out
sbb
ss
mov
add
jecxz
lods
xchg
outs
movs
jae
adc
and
cmp
fnsave
adc
pop
fld
adc
aas
xor
retf
jne
cdq
jnp
jae
dec
test
sahf
jb
call
jae
pusha
out
xor
aas
jmp
mov
fisubr
pop
loop
mov
fld
inc
mov
jl
sub
nop
dec
test
arpl
pop
mov
scas
imul
push
xchg
push
jp
ins
ror
xor
inc
jmp
test
pop
inc
into
dec
mov
imul
mov
push
ficom
mov
jnp
ja
add
ret
pop
scas
xchg
jb
mov
xchg
sar
pop
clc
daa
adc
push
ret
and
add
mov
cmp
sbb
xchg
imul
pop
mov
push
sbb
jmp
pop
test
add
adc
add
inc
mov
inc
rcl
dec
mov
sahf
data16
int
mov
cdq
mov
test
jg
or
mov
aam
mov
lods
mov
add
pop
xchg
and
out
test
repnz
movs
jb
add
out
mov
cmp
xchg
dec
sar
call
imul
(bad)
daa
sbb
psubb
cmp
or
cmp
and
dec
movs
xchg
inc
xor
push
cli
pop
fistp
into
xor
push
mov
sbb
popa
stos
inc
mov
enter
js
jns
add
ja
sub
xchg
dec
mov
fld
jbe
loopne
repz
adc
dec
fld
loope
sti
daa
shr
cli
sub
iret
xor
sub
push
lds
jne
mov
cwde
jbe
out
ins
mov
mov
(bad)
aad
mov
imul
xor
cli
cmp
pop
mov
mov
cmp
and
cs
push
pop
add
cs
leave
pop
mov
rcr
pusha
(bad)
cs
pop
cmps
xchg
(bad)
pop
mov
cs
ficomp
repz
pop
mov
xchg
js
jnp
ret
arpl
add
out
push
ret
daa
sar
daa
sbb
sub
add
and
mov
push
iret
xor
es
out
mov
gs
xor
lods
popa
(bad)
jae
stos
test
sti
push
fcom
movs
lahf
jp
ins
xlat
nop
ja
popa
leave
xor
lods
fwait
jnp
outs
stc
add
aas
adc
movs
or
sub
dec
mov
push
xor
push
test
sbb
push
add
adc
mov
xchg
popa
in
aaa
jmp
adc
mov
scas
xchg
lea
pop
scas
fidivr
mov
popf
mov
pop
fisubr
or
xor
push
movs
mov
rcr
imul
inc
mov
sbb
xor
sub
std
push
mov
adc
xchg
shl
(bad)
sub
sub
sti
mov
jno
sub
jns
add
inc
cmps
popf
jnp
pop
sbb
repnz
dec
fisub
adc
xchg
xchg
imul
ret
push
test
das
jmp
dec
enter
mov
shl
and
scas
adc
add
ja
pop
int
int
lods
dec
mov
sub
das
sub
xor
std
push
loopne
add
mov
js
cld
push
scas
xchg
outs
shl
pop
push
jmp
dec
add
xchg
push
add
test
mov
jno
(bad)
test
sahf
outs
sti
mov
cmp
push
adc
rcl
(bad)
mov
mov
mov
addr16
push
pop
imul
out
lods
lods
aas
jl
dec
jmp
clc
fcom
xor
push
cmp
sbb
jmp
fstp
fstp
popa
inc
add
push
push
cmp
add
out
std
out
cld
xchg
mov
(bad)
jmp
pop
sbb
sbb
mul
mov
cmovle
idiv
aad
scas
shr
iret
push
or
dec
pop
jno
dec
adc
mov
dec
or
icebp
(bad)
mov
loopne
ficom
clc
xchg
fisub
dec
test
cmps
into
imul
push
adc
push
enter
stos
fldenv
enter
adc
add
pushw
pop
adc
inc
add
mov
xchg
mov
mov
add
and
and
fidiv
mov
stos
(bad)
gs
sbb
inc
xor
rcl
cmp
and
xor
not
sub
jb
ins
adc
out
fnstenv
iret
xchg
fld
pop
xor
ds
xchg
fnstsw
xchg
rcr
sub
adc
jae
push
jmp
ss
push
pop
(bad)
in
jb
cmp
pop
not
jg
pop
sbb
mov
jmp
pop
add
arpl
push
or
cmp
push
adc
icebp
mov
jae
loop
fld
ja
pop
or
ins
xor
(bad)
xchg
lds
xor
pop
cmp
daa
jne
push
lds
dec
or
and
inc
lock
pop
sbb
frstor
sub
into
mov
mov
rcl
push
xor
mov
sbb
ds
imul
pop
xchg
fcom
pop
out
aas
pop
ins
and
aaa
bound
adc
jns
jne
and
mov
test
loop
mov
cmp
dec
cmc
pop
adc
inc
mov
mov
adc
mov
movs
loopne
repz
aad
outs
sbb
cmp
mov
arpl
jp
std
mov
add
pop
adc
mov
stc
and
inc
add
pop
push
inc
and
pop
xor
ds
or
adc
push
xchg
outs
sub
lods
retf
push
jle
pop
cmp
std
push
pop
sbb
dec
mov
inc
and
or
xor
inc
adc
ret
mov
cmps
jmp
push
sbb
mov
mov
cwde
repz
dec
or
inc
push
das
jg
mov
sahf
std
mov
aaa
push
add
jg
mov
stos
mov
mov
pusha
pandn
pop
cmp
add
dec
or
ret
push
or
repz
in
mov
xchg
dec
fld
xor
addr16
es
add
jnp
mov
push
adc
and
mov
jge
je
pop
call
sbb
add
dec
cs
and
push
adc
lahf
pop
pop
jle
repz
sub
adc
xchg
shl
cmp
mov
jmp
aas
push
mov
sbb
cmp
and
loope
mov
mov
inc
es
pop
out
push
push
add
and
movs
(bad)
xchg
aad
sar
jle
dec
adc
sbb
mov
cmps
inc
add
dec
dec
adc
test
xor
mov
mov
cmps
jmp
push
call
push
out
xchg
jmp
xchg
retf
jae
xchg
mov
shl
and
jo
and
pop
aas
jl
clc
mov
mov
sub
sbb
push
xor
sub
mov
aad
icebp
mov
ror
dec
adc
pop
out
leave
ins
pavgb
sbb
pop
or
and
push
lock
pop
sbb
mov
pushf
xchg
lahf
lods
movs
shl
xor
call
lahf
(bad)
outs
add
arpl
and
push
sbb
int
enter
sub
pop
xor
dec
adc
test
mov
xchg
lods
ror
cmp
loope
retf
push
fadd
xchg
aad
mov
inc
ins
or
and
fiadd
mov
mov
mov
dec
sbb
sub
and
push
pop
and
repnz
loopne
cld
test
test
ror
xchg
stos
fild
push
inc
add
add
adc
push
pop
push
xchg
fidivr
daa
jo
imul
dec
ficom
push
adc
push
adc
bound
dec
push
inc
pop
jge
ins
xchg
(bad)
cli
inc
adc
pop
push
or
jne
out
xchg
and
jnp
inc
adc
stos
mov
cmp
push
adc
mov
(bad)
cdq
fimul
repnz
mov
scas
jmp
imul
jno
jp
hlt
mov
pop
adc
adc
les
leave
push
imul
jmp
int
xchg
scas
mov
mov
add
or
in
in
cmc
mov
(bad)
mov
inc
add
loopne
into
mov
dec
or
adc
jns
push
sub
js
inc
in
push
in
retf
mov
ins
or
ja
add
fistp
cmps
data16
xor
or
test
cmc
pushf
mov
jle
and
data16
mov
xchg
stc
xchg
lahf
sti
test
stos
(bad)
ins
sub
je
push
outs
sbb
sahf
fdivr
jle
aas
jl
jmp
add
adc
pop
add
xor
and
push
pop
pop
imul
xchg
xchg
stc
mov
pop
push
push
lods
add
into
cdq
dec
scas
int
(bad)
ja
mov
xchg
add
cmp
mov
rcr
lods
jmp
int
fstp
cmp
sahf
cld
mov
jno
retf
jle
pop
sub
or
jp
jbe
pop
ret
mov
and
dec
push
jne
cs
or
aas
bound
repz
inc
add
ss
daa
retf
fstp
int3
stos
int3
pop
adc
mov
hlt
mov
dec
mov
xchg
(bad)
xor
rol
aad
dec
ja
xchg
fdivr
mov
push
adc
nop
retf
int
into
xchg
idiv
mov
mov
repz
shl
xor
xchg
aam
(bad)
pusha
and
sub
add
jmp
jp
aaa
les
jl
push
cmp
ret
mov
into
xor
arpl
adc
sbb
ret
jo
and
out
adc
cmps
xchg
data16
arpl
pop
test
dec
xor
dec
(bad)
mov
cmps
loopne
retf
sbb
and
inc
adc
dec
adc
jp
inc
add
bswap
(bad)
aam
retf
pusha
aam
lds
mov
data16
mov
mov
fistp
aam
loopne
push
call
int
dec
fisttp
les
int3
mov
sub
in
pop
adc
cmp
mov
popf
and
and
sbb
push
adc
cmp
(bad)
mov
sbb
mov
pop
xor
cmp
test
in
aad
mov
pop
jecxz
push
test
mov
(bad)
mov
cmps
pop
push
cmp
add
dec
xlat
mov
out
(bad)
xchg
(bad)
mov
add
pop
cmp
lods
fisttp
pop
push
adc
dec
les
je
sub
repnz
iret
je
rol
jge
xor
jp
and
stc
addr16
clc
cmc
mov
sub
repz
fdiv
add
jns
xchg
sub
inc
pop
rol
sar
repnz
in
sbb
inc
shl
cmc
jl
xor
repz
sub
popa
sbb
mov
sbb
sub
mov
mov
push
push
jl
mov
cdq
cs
add
mov
jb
and
push
add
sbb
mov
xor
push
pop
rcl
out
add
push
and
ins
sub
cmc
xchg
jo
jl
in
mov
push
sbb
or
ret
sti
xchg
nop
add
popa
cs
inc
pop
push
cmp
imul
in
push
adc
pop
sbb
call
xchg
(bad)
popf
jno
or
mov
bound
cmp
mov
push
out
cmp
outs
ss
icebp
fistp
in
jmp
idiv
popf
out
lods
test
fimul
dec
xor
push
js
mov
jnp
addr16
popf
fidivr
sbb
jmp
out
jmp
jl
ret
mov
or
iret
in
stos
lock
mov
icebp
xchg
mov
xchg
retf
adc
xchg
inc
jge
pop
sbb
das
and
outs
or
inc
pop
dec
xlat
cmps
loopne
addr16
jmp
cld
and
test
scas
leave
hlt
lods
iret
bound
sub
or
mov
icebp
or
inc
sub
push
add
dec
or
pop
jle
pop
mov
arpl
pop
loopne
shl
pop
imul
cmp
lahf
aad
lods
cld
(bad)
mov
or
loop
xacquire
into
mov
jns
dec
cmp
aas
mov
pushf
icebp
xor
jge
pop
loope
std
(bad)
retf
mov
and
mov
outs
aaa
cmc
stc
xchg
loope
mov
sub
mov
cs
dec
hlt
adc
inc
repz
rol
cmp
loopne
call
(bad)
pop
dec
cdq
ficomp
out
fsubr
fadd
mov
pop
dec
jae
ins
sub
jle
inc
add
(bad)
nop
sar
mov
arpl
pop
xor
ret
ret
mov
popa
pushf
fistp
outs
cmp
pop
sub
pop
sbb
daa
and
add
inc
add
pushf
fist
out
ret
mov
dec
add
mov
outs
sub
sbb
shl
loopne
mov
xor
inc
cmp
leave
test
cmp
out
lods
jno
or
inc
add
or
int
cld
xchg
jns
adc
lock
in
scas
lock
mov
cmp
jns
cmovs
arpl
inc
sbb
je
pop
fcom
and
dec
or
pusha
fidiv
push
sbb
jge
pop
cmp
inc
sbb
xchg
adc
jo
ins
in
push
xlat
fs
pop
push
in
mov
xchg
sbb
inc
les
xor
lods
ror
inc
and
mov
inc
inc
(bad)
and
ds
sub
outs
xor
icebp
(bad)
call
lods
fstp
pop
je
mov
icebp
xchg
les
xor
pop
push
push
dec
sbb
cwde
xlat
mov
addr16
xchg
fldenv
aas
cli
call
cwde
enter
idiv
xor
(bad)
xlat
mov
(bad)
aad
leave
cdq
sti
pushf
pop
adc
sub
pushf
jmp
mov
imul
mov
push
pop
pop
push
pop
adc
imul
test
inc
add
cmp
ds
mov
cmp
popf
shl
adc
lods
div
movs
int3
jle
data16
cld
mov
cs
push
bound
inc
adc
outs
or
test
fbstp
test
xchg
or
adc
dec
stos
lock
movs
in
jne
push
call
pop
xor
mov
(bad)
sbb
sub
je
daa
ins
add
loope
shl
or
rcr
(bad)
popa
sub
or
les
or
inc
std
sbb
pop
clc
cwde
hlt
test
push
and
movs
clc
mov
out
scas
in
mov
jmp
push
xlat
ins
xchg
repnz
inc
adc
dec
ficomp
aam
in
inc
push
pop
rcpps
mov
popa
xor
sub
repnz
lods
pop
cs
add
and
bound
js
aaa
xchg
add
cmp
enter
stos
movs
xchg
xor
es
mov
scas
shl
push
stos
jmp
push
push
sti
push
pop
xchg
(bad)
mov
lahf
xor
xor
dec
scas
and
dec
cmp
cli
mov
(bad)
rol
push
fstp
jae
call
clc
xor
ret
jo
pop
cmps
cmc
mov
and
push
or
xchg
imul
pop
or
jl
cmp
and
add
and
jnp
sub
sbb
and
push
pushf
adc
das
inc
and
pop
inc
push
bound
jae
(bad)
scas
idiv
fldenv
jg
dec
in
ret
jl
js
and
lahf
in
mov
fstcw
dec
mov
cmp
into
popf
in
and
mov
mov
inc
sbb
xchg
inc
inc
sbb
inc
sbb
push
out
(bad)
mov
mov
(bad)
jmp
sbb
jge
dec
test
cdq
jne
push
neg
in
aad
aam
shl
jno
inc
sbb
lahf
fisttp
out
xor
ds
add
or
imul
jns
ret
or
into
push
xor
cmc
mov
mov
test
cmp
or
call
or
dec
mov
call
out
lahf
fcomp
call
sub
js
(bad)
int3
sahf
cmps
jo
pop
push
sbb
mov
clc
jb
aaa
inc
add
imul
ja
jne
inc
pop
jb
push
adc
jge
cmp
call
pop
mov
jp
jb
inc
mov
(bad)
out
mov
adc
cld
mov
mov
daa
gs
pop
ror
jmp
idiv
dec
adc
rcr
add
mov
iret
xchg
test
inc
xor
or
fcom
push
mov
stc
dec
mov
mov
pop
lods
jle
les
jne
pop
mov
dec
adc
pop
dec
sub
push
or
int
stc
xchg
int3
xchg
jns
xor
pop
sbb
jmp
sti
outs
mov
xor
jg
push
lds
push
cmp
popa
repz
repz
out
test
sbb
pop
inc
test
fstp
and
jge
imul
add
mov
mov
xchg
lea
adc
ret
cdq
ficom
pop
sbb
push
add
cmp
in
cmps
ror
cmc
pop
and
pop
loopne
mov
jnp
imul
sub
imul
out
cld
mov
dec
mov
sub
jmp
inc
pop
push
jne
push
push
sub
movs
ret
daa
test
nop
leave
fwait
lds
sub
icebp
xchg
xlat
js
inc
and
jb
jle
ins
add
push
cmp
mov
xchg
jmp
cmp
jns
pop
loop
mov
cmp
mov
sub
mov
cmps
in
retf
add
fst
lahf
(bad)
cmps
jno
in
mov
call
sbb
js
outs
repnz
movs
shl
in
stos
repz
call
mov
lods
xlat
xchg
cmc
cmps
jmp
inc
add
fwait
ret
mov
pusha
and
sbb
or
push
ins
sub
pop
sbb
pop
inc
sub
pop
jge
outs
adc
aam
aad
icebp
cmp
xchg
aam
cli
cmp
enter
pop
xchg
int
ret
inc
or
das
and
gs
cld
mov
sbb
and
dec
push
sub
push
pop
or
ins
pop
inc
push
add
les
sbb
adc
jb
inc
sbb
xor
add
mov
mov
cmp
iret
ret
mov
jle
imul
mov
stos
jns
pusha
add
jno
push
and
jmp
fisubr
mov
fs
pop
test
mov
mov
add
push
or
imul
cmps
(bad)
movs
repz
cmps
enter
bound
push
cmp
ds
in
rcl
out
inc
or
or
cs
xchg
clc
mov
test
jb
popa
add
pop
test
addr16
sub
ja
pop
mov
dec
adc
mov
sti
xor
push
adc
mov
xchg
rol
stos
push
ins
aas
js
push
xchg
mov
scas
(bad)
stc
mov
mov
in
je
jne
loop
les
dec
adc
sub
aas
pop
or
movs
enter
call
lahf
aam
xchg
les
adc
jmp
clc
mov
imul
cmps
and
cmp
retf
nop
xor
inc
pop
outs
sub
inc
in
sbb
add
dec
cmp
and
jae
and
mov
push
pop
dec
pause
fbstp
xor
jno
jo
push
and
or
shl
xchg
mov
cdq
cli
cdq
scas
call
mov
mov
fwait
clc
sbb
rcr
push
dec
sub
popa
or
int
jnp
add
sbb
call
push
out
mov
test
mov
and
inc
or
int3
call
xchg
dec
adc
dec
cli
rcr
cdq
cli
mov
outs
cmp
sbb
push
push
add
out
stos
pop
adc
dec
adc
fdivr
sub
jns
or
sahf
ret
cmp
mov
mov
xchg
retf
lahf
fld1
mov
xchg
outs
mov
inc
ds
in
jmp
xchg
pop
aaa
dec
loope
aad
adc
enter
cmp
lds
fild
jmp
test
stc
and
cmp
dec
adc
inc
sbb
pushf
xlat
jns
push
sbb
popa
add
jp
mov
rol
int3
mov
sub
dec
or
xor
mov
lahf
inc
sbb
jge
nop
cli
mov
mov
mov
not
mov
mov
into
arpl
mov
jae
push
psllq
gs
jecxz
or
jne
jg
cmp
push
sub
cmc
xchg
fidivr
mov
xor
jmp
cmp
ficom
add
es
xor
les
jge
adc
call
repnz
mov
test
cmp
cmc
mov
test
call
shl
iret
mov
ja
pusha
cmp
pop
pop
in
xchg
into
lods
call
pop
in
test
mov
mov
push
ss
push
jne
sbb
mov
je
jbe
adc
xor
xchg
mov
das
daa
inc
adc
pop
jmp
ja
or
dec
repz
fnstenv
mov
mov
add
movs
(bad)
loopne
mov
mov
pop
mov
fs
pop
adc
add
adc
push
daa
inc
or
xlat
fisttp
das
push
iret
scas
fisubr
pushf
fisubr
call
pop
pop
add
xchg
mov
xor
xchg
aad
xlat
mov
or
inc
add
fldcw
inc
aas
cs
and
xchg
movs
loopne
cld
inc
or
inc
sbb
test
mov
aas
rcr
outs
cmp
pop
(bad)
icebp
mov
jmp
out
lahf
(bad)
mov
lods
lock
add
jnp
addr16
mov
jge
inc
jmp
fadd
push
cmp
imul
add
(bad)
sub
jb
jp
mov
jg
add
inc
rol
add
sbb
pop
sub
test
pop
adc
jns
push
adc
mov
les
inc
or
push
pop
pop
jbe
ss
add
cmp
mov
int3
sahf
(bad)
inc
aas
inc
jmp
cmp
stc
xchg
icebp
xchg
rcl
xor
xchg
les
push
push
out
mov
xchg
shl
das
jae
ins
in
aad
cmp
cmp
adc
jmp
inc
xor
and
int3
(bad)
mov
ja
popa
add
std
mov
inc
xor
aas
dec
add
xchg
push
add
stos
pop
adc
inc
pop
cmp
mov
cmps
jl
jnp
std
jb
cdq
hlt
popf
xor
push
add
movq
sub
xor
std
adc
scas
adc
mov
es
xor
mov
or
xor
sbb
pushf
in
cmps
imul
pusha
daa
mov
bound
cmps
xor
cs
jmp
jl
pushf
inc
push
cld
cmp
mov
movs
mov
inc
adc
mov
out
icebp
outs
mul
sbb
add
test
push
xchg
xor
adc
cs
test
cmc
ror
pop
pop
cmp
jg
leave
jle
xchg
adc
ret
(bad)
push
xchg
cmps
mul
cmp
hlt
popa
and
es
adc
mov
push
push
das
loop
pushf
xchg
jbe
pusha
retf
mov
xor
movs
in
mov
les
jae
add
daa
and
mov
fucomi
in
ss
xlat
jno
es
lock
sub
push
dec
stos
es
int3
add
lahf
jb
push
aam
mov
xor
into
sbb
mov
sbb
ret
mov
mov
or
push
mov
mov
add
(bad)
sbb
jl
(bad)
mov
clc
(bad)
jbe
xor
shl
ret
pop
or
push
jp
std
ins
xor
mov
mov
mov
out
ficomp
pop
aas
cmp
test
test
hlt
repz
add
in
aam
adc
ss
dec
or
es
pop
sbb
inc
das
aas
mov
mov
inc
xor
sar
(bad)
jmp
pushf
cld
test
jns
sub
sbb
mov
aad
sti
xchg
shr
cli
sti
push
or
mov
xrelease
mov
mov
sub
fnsave
in
dec
rol
push
repnz
push
xchg
cmp
out
(bad)
sbb
inc
or
fnsave
aaa
mov
jmp
outs
test
test
lds
loopne
int
xlat
cmps
fldcw
dec
add
jno
xlat
dec
or
jo
test
(bad)
fsub
jne
xchg
push
cmp
pop
and
shl
jmp
push
(bad)
fidivr
pusha
push
adc
push
sti
fs
adc
in
jo
aaa
cwde
mov
push
jecxz
out
mov
and
(bad)
mov
js
jg
clc
cdq
rcl
fmul
jb
cli
jp
test
or
fwait
fs
sbb
rcr
mov
fcom
and
popf
out
mov
and
lods
lock
rcr
dec
pushf
fist
aad
arpl
int3
inc
mov
push
and
cmp
dec
xor
jg
test
mov
adc
es
xor
daa
xchg
push
aad
pop
dec
mov
iret
imul
mov
xchg
pop
mov
jmp
and
xor
and
cmp
inc
mov
scas
adc
pop
push
inc
retf
push
mov
gs
push
inc
mov
cmp
arpl
movs
ins
ins
je
or
mov
inc
imul
or
jbe
cmp
cmc
clc
inc
lahf
cmp
adc
sub
pop
mov
aad
stc
mov
inc
mov
jb
add
in
sbb
inc
mov
stc
sbb
xor
scas
xchg
(bad)
jg
xor
lock
cmc
push
push
lea
add
xchg
imul
retf
ins
xor
add
mov
pop
pop
out
shl
and
mov
fprem
or
aaa
jmp
jl
aam
adc
jmp
push
sbb
bound
push
ret
and
cmps
sub
push
ror
popa
mov
lock
int
fadd
adc
push
xchg
pop
mov
cs
fidiv
das
retf
cli
outs
sub
lea
pop
in
adc
scas
mov
out
mov
push
cmps
xchg
xchg
fdiv
or
jbe
loop
inc
adc
mov
loopne
(bad)
lods
repz
outs
cmp
dec
gs
xor
jge
pop
xchg
stc
jo
sub
push
pop
fisttp
pusha
mov
xchg
jge
mov
scas
push
sub
xchg
sbb
stos
stos
shr
dec
and
loopne
int
sub
ret
xchg
adc
mov
pop
adc
sahf
jmp
dec
inc
popf
jns
push
ins
movs
adc
mov
add
sbb
fisttp
ret
into
ss
and
xchg
cmp
lods
js
call
cmp
mov
fld
mov
xchg
out
xchg
loop
repz
ja
ret
inc
and
enter
out
or
sti
shl
leave
cmc
aad
mov
sub
clc
mov
or
movs
aas
jns
push
cld
dec
and
cmps
in
xor
fisttp
jbe
sbb
in
loop
mov
add
out
imul
lea
add
ds
daa
fwait
xor
jg
movs
dec
sub
jmp
inc
jne
sbb
mov
mov
xchg
jge
xchg
je
mov
out
mov
sbb
fsub
add
cmp
inc
inc
add
pop
jns
pop
or
test
ror
jne
mov
push
sub
jo
dec
jmp
js
mov
push
clc
cs
jns
bsf
ss
out
movs
pop
sbb
mov
xor
repnz
in
mov
fldcw
mov
xor
shr
inc
sbb
jno
inc
stc
or
js
sbb
add
out
(bad)
in
out
sbb
mov
add
jle
cdq
ss
xor
add
(bad)
and
sbb
lds
imul
inc
mov
adc
xor
(bad)
push
sub
cmps
mov
in
sub
inc
xchg
iret
in
into
mov
push
and
xchg
xchg
or
xchg
cmp
pop
aad
pop
cmps
push
icebp
ins
push
sub
xlat
add
fwait
mov
rcl
mov
push
add
and
cmp
lahf
pusha
and
and
mov
inc
mov
push
mov
or
sbb
into
push
daa
jbe
lock
rol
lds
idiv
inc
iret
out
in
push
(bad)
jo
add
cmc
xchg
js
fs
jo
inc
adc
adc
stos
jnp
stos
add
sbb
pop
pop
xlat
sub
jmp
pop
push
fdiv
stc
adc
inc
inc
ds
mov
scas
mov
fnstsw
add
sbb
pop
jmp
jne
push
mov
ffreep
mov
and
sti
sbb
push
push
push
sbb
mov
or
test
pop
inc
mov
jmp
dec
xlat
jle
(bad)
jnp
aaa
nop
aas
inc
cmps
out
or
in
adc
sbb
out
scas
cmps
mov
aad
and
jbe
adc
or
jp
in
mov
int
xor
sub
cbw
push
mov
mov
aad
mov
out
jle
push
jmp
ja
and
les
mov
adc
mov
cli
pushf
cwde
push
lock
xchg
les
int3
sub
pop
hlt
adc
es
cld
mov
dec
add
mov
cmps
pop
sbb
daa
push
fdiv
nop
frstor
pop
sbb
ins
movs
imul
call
mov
ja
xor
fisub
das
mov
sbb
mov
or
dec
mov
jmp
stos
sbb
lods
push
je
lods
push
mov
in
xor
jne
ins
lahf
rcl
dec
lods
outs
aaa
cmp
daa
jmp
push
arpl
adc
mov
pop
inc
icebp
push
daa
lods
mov
cmc
leave
adc
jge
stos
inc
xor
inc
push
mov
daa
pop
xchg
out
bound
inc
shl
push
push
out
in
(bad)
lods
js
in
dec
mov
sub
adc
jmp
loope
(bad)
(bad)
inc
dec
int
and
push
xor
inc
fcomp
retf
push
in
repnz
jl
xor
mov
jmp
adc
test
les
dec
mov
ins
mov
add
pushf
dec
add
and
push
leave
mov
xchg
int3
das
jmp
adc
or
and
mov
fnstcw
inc
ffreep
inc
add
fsubr
xchg
fiadd
cmc
jg
mov
clc
icebp
iret
rcl
mov
pop
dec
mov
and
xor
mov
mov
xor
out
enter
xchg
mov
xchg
cli
pusha
dec
cmc
jmp
test
gs
push
jns
pop
movs
inc
in
out
mov
and
aad
xchg
push
inc
push
mov
push
add
cwde
retf
call
push
mov
sub
or
push
xor
int
pushf
mov
jae
dec
out
test
sub
daa
push
ss
adc
fstp
adc
pop
paddusw
and
push
or
adc
xchg
in
loope
cwde
popf
sub
pop
pop
jnp
cmp
cmp
nop
or
dec
or
repnz
int3
mov
leave
iret
cwde
scas
cmp
dec
fild
neg
cwde
in
shl
jns
call
adc
lahf
adc
outs
or
and
je
(bad)
dec
sub
imul
or
repnz
xor
push
mov
sbb
xchg
xor
or
jmp
push
out
pop
xor
push
inc
movs
and
in
int
cmp
aam
adc
push
pop
(bad)
jnp
gs
pop
fist
jb
neg
jbe
inc
pop
mov
inc
ss
cwde
mov
xchg
xchg
jo
fwait
add
cmp
(bad)
outs
or
fld
ds
sbb
nop
dec
pop
or
dec
inc
cmps
out
jmp
js
aas
inc
inc
out
enter
mov
add
rol
jnp
mov
inc
mul
fwait
ret
inc
push
cli
outs
ss
test
enter
pop
ficom
stos
lds
jg
jns
into
push
add
fwait
jg
mov
mov
bound
jno
or
jl
shl
daa
(bad)
cmps
lock
add
lods
ret
in
cmp
sahf
arpl
stos
add
inc
scas
dec
loop
jg
arpl
test
pop
push
sub
pop
adc
xlat
sbb
adc
cwde
movs
jecxz
ror
stos
mov
int3
aam
sub
mov
sub
mov
into
push
das
and
sahf
or
daa
pop
jbe
repz
data16
and
mov
fmul
adc
cmp
retf
nop
std
jp
lods
test
or
out
mov
cmc
mov
jp
dec
clc
xor
ret
jmp
cmp
jmp
xor
sbb
add
nop
mov
repz
sub
adc
mov
mov
aad
(bad)
shl
je
out
sbb
dec
ret
or
pop
add
push
xchg
cmp
inc
js
mov
imul
inc
movs
rol
repz
or
add
scas
jge
adc
ss
mov
mov
rcl
call
mov
xchg
pop
jl
xchg
sahf
jecxz
pop
lock
inc
xchg
pop
push
jge
mov
cmps
add
sub
mov
repz
pop
jl
dec
pop
and
mov
adc
repz
in
es
adc
mov
fwait
pop
dec
movs
jle
pop
ficom
push
jp
dec
std
retf
add
pop
mov
sub
mov
xchg
in
adc
sub
xor
std
pop
sub
and
jecxz
mov
push
or
retf
out
mov
(bad)
add
ret
xchg
int3
pop
ins
fisub
mov
les
push
into
mov
mov
jo
sub
loop
lds
call
scas
jno
es
in
call
push
test
loop
rcr
or
jg
mov
inc
and
mov
in
add
outs
cmp
add
jle
mov
sub
(bad)
ja
in
sbb
xor
push
fild
push
inc
aaa
iret
cdq
or
mov
cmp
retf
mov
inc
repz
pop
imul
push
mov
retf
jecxz
ss
les
or
sub
pop
cs
xchg
xchg
sub
pop
xor
and
test
lahf
sbb
mov
loope
jb
sbb
out
dec
les
add
cmp
retf
add
retf
addr16
push
jo
retf
outs
iret
stos
xchg
add
push
and
in
mov
or
sbb
(bad)
icebp
sbb
mov
cmp
inc
psrld
jne
jne
xchg
ss
add
jge
xchg
xchg
cld
idiv
mov
mov
ja
sub
lock
movs
out
pop
(bad)
sub
in
jmp
test
cli
jmp
xlat
cmp
xor
lods
bound
sbb
lock
dec
bound
jl
jne
cmp
or
test
cmp
or
loop
ret
and
jb
sti
or
push
movs
cmps
inc
jne
loopne
addr16
sub
retf
ja
cmp
adc
shr
add
mov
jecxz
ret
mov
xor
(bad)
loopne
jp
jb
dec
mov
jb
ret
sub
add
mov
jae
pushf
test
pop
dec
test
mov
adc
inc
jo
test
ret
cmps
mov
xchg
popa
push
js
mov
lods
cld
inc
stc
rol
dec
pop
popf
call
xchg
push
mov
frstor
aaa
invd
setg
repz
jge
imul
xlat
sub
movs
xor
dec
jmp
imul
xchg
shl
adc
jnp
sub
in
fstp
mov
fld
dec
push
(bad)
mov
and
data16
and
cmps
jmp
xchg
add
out
cmc
or
hlt
(bad)
jo
out
inc
popa
lea
mov
imul
test
cmps
adc
push
aad
push
iret
jg
mov
push
arpl
xchg
test
xchg
cmps
sar
jecxz
ins
aad
sub
iret
jp
les
push
add
(bad)
icebp
inc
enter
lock
ins
fs
cmp
in
mov
or
sub
lods
cdq
mov
outs
mov
jl
pop
xchg
fadd
fwait
pop
jmp
je
stos
je
mov
or
or
jmp
jle
mov
in
loop
xchg
sub
mov
dec
rcl
out
aam
ins
stos
adc
mov
test
and
scas
scas
pushf
and
lds
mov
jno
cdq
and
cmps
sbb
push
imul
adc
xor
lods
push
sub
popf
adc
arpl
cmp
in
push
call
hlt
xor
iret
ret
int3
xor
inc
pushf
lea
repz
adc
sub
xchg
jl
ret
gs
inc
dec
adc
in
pop
jb
pushf
fcom
(bad)
xlat
cmc
adc
popa
mov
cs
mov
dec
and
mov
pand
nop
add
pusha
lock
mov
adc
call
fisub
cmc
xor
gs
pusha
sub
cli
cmps
pop
lock
or
pop
push
inc
cwde
push
jns
cmps
adc
(bad)
jg
mov
enter
mov
mov
xor
fidivr
mov
pushf
push
push
je
in
call
fcmovbe
mov
shr
and
ja
les
mov
int
add
mov
fstp
(bad)
fbld
lea
and
and
ret
mov
add
stos
push
pop
cmps
xchg
cmps
ins
pop
xchg
jmp
pop
inc
clc
adc
inc
stc
loope
pusha
rcl
xchg
sti
xchg
xchg
adc
mov
lock
push
mov
xor
int
inc
ror
and
int3
xchg
stc
or
retf
retf
ret
sbb
dec
retf
rcl
repnz
popa
pop
cmp
mov
sub
repz
pop
js
jb
out
cwde
ins
push
lock
push
fistp
or
movs
in
push
mov
ds
lods
(bad)
ins
xchg
inc
cmc
xchg
clc
adc
xchg
repnz
cli
cdq
lea
mov
dec
repnz
inc
jbe
adc
xor
mov
ds
pop
sbb
xlat
adc
loopne
popa
sbb
xor
out
pop
cmps
mov
bound
scas
pop
outs
push
jmp
pop
jp
test
or
aas
les
(bad)
data16
cmc
imul
sahf
sbb
cmp
in
inc
xor
adc
out
add
mov
or
adc
pop
fild
mov
ins
fnstsw
imul
inc
or
aam
push
dec
test
stc
sub
cmp
mov
cmp
sub
aad
inc
xchg
xor
xchg
jp
lock
mov
dec
sbb
hlt
mov
mov
sub
jl
jp
push
sub
pop
push
inc
icebp
or
out
jmp
out
out
int3
stos
test
outs
mov
cmc
sar
mov
cmp
sbb
cmp
call
outs
out
scas
mov
push
popf
(bad)
loope
cwde
mov
js
in
cmps
call
hlt
(bad)
mov
inc
out
jmp
(bad)
ins
div
sub
pop
popa
ret
es
and
les
mov
xchg
dec
adc
fist
jb
cmp
dec
(bad)
mov
fwait
int3
sub
and
or
loope
add
mov
mov
lods
mov
jg
(bad)
std
pop
(bad)
imul
imul
test
sar
cmp
jnp
dec
rcr
jg
daa
mov
inc
retf
xchg
mov
sahf
test
rol
mov
out
sub
or
mov
sahf
pop
dec
jge
scas
(bad)
dec
jg
int
mov
push
(bad)
enter
inc
sub
scas
xor
mov
repz
pop
repz
xchg
daa
shl
cmp
pop
outs
call
fisttp
jns
in
mov
cs
or
push
and
jecxz
xchg
icebp
cli
xchg
pop
movs
sub
mov
mul
mov
dec
bound
int
call
jns
test
jmp
pop
and
cmp
mov
adc
or
sbb
pop
fidiv
lea
push
mov
ficom
pop
fs
(bad)
repz
jne
cmp
mov
jl
mov
fidivr
cmp
sbb
mov
or
cwde
call
repnz
test
ss
loop
jno
leave
lods
add
sub
mov
mov
sub
ss
sti
clc
jns
jl
imul
fidivr
and
or
repnz
or
iret
sbb
mov
xor
adc
out
outs
test
inc
dec
cmp
out
ins
xor
inc
stos
push
mov
sbb
adc
dec
outs
fadd
inc
repnz
mov
and
int
lods
hlt
pop
jo
sub
iret
imul
mov
add
push
dec
and
sbb
pop
fptan
mov
scas
xchg
push
mov
push
fwait
ror
mov
pop
cmc
mov
jle
xor
int3
mov
and
pop
jb
add
ss
je
pop
shr
xor
jbe
push
stos
lea
das
rol
jbe
xchg
xor
sbb
dec
scas
(bad)
sbb
pop
ja
xchg
ja
and
retf
add
ret
push
in
mov
fild
fidivr
inc
cmps
pop
lods
repnz
dec
adc
jmp
mov
jno
pop
imul
push
and
leave
mov
push
dec
out
push
fadd
mov
mov
ja
pop
pusha
cmp
in
stos
daa
fs
push
xchg
aam
jmp
sub
inc
std
mov
inc
or
jne
push
jmp
sbb
retf
mov
mov
and
push
xor
dec
sub
mov
mov
(bad)
xor
cmps
std
call
les
rol
(bad)
mov
pop
xor
call
test
pusha
or
sbb
push
or
and
jp
pop
adc
fstp
popf
(bad)
sub
dec
or
scas
rcl
or
mov
sbb
in
scas
ficomp
std
jo
out
lea
clc
mov
and
cwde
shl
sahf
repnz
push
adc
dec
gs
and
sbb
mov
mov
dec
or
in
sbb
pop
(bad)
stos
pop
sbb
jnp
sbb
inc
sbb
neg
or
stos
mov
xchg
sub
adc
mov
loope
push
or
mov
mov
fist
out
cmps
sar
mov
icebp
mov
jo
sub
dec
je
inc
or
clc
hlt
test
adc
mov
fs
cmp
add
jnp
xor
pop
inc
sub
and
fbld
icebp
sbb
scas
fimul
dec
or
inc
inc
or
mov
(bad)
retf
clc
mov
(bad)
jecxz
lods
retf
test
movs
jecxz
or
jne
into
ficomp
in
mov
inc
daa
inc
outs
ss
add
mov
inc
push
dec
sub
jae
cmp
cmp
push
jae
push
push
and
daa
(bad)
ret
pushf
scas
retf
into
xchg
fcom
sub
mov
add
push
lods
enter
imul
and
mov
mov
adc
cmp
xchg
inc
add
jg
arpl
aaa
je
out
lea
cmp
mov
out
test
jl
cwde
hlt
lods
out
loopne
outs
and
dec
or
inc
pop
sbb
mov
jne
pop
in
into
into
pushf
inc
and
inc
push
dec
inc
and
jge
jl
sbb
pop
xor
bound
and
sub
pop
add
inc
lds
ss
cmps
stc
mov
push
dec
adc
xor
push
and
cmps
lds
idiv
mov
repz
sbb
clc
mov
in
cmps
mov
mov
inc
and
pop
or
in
mov
inc
out
in
(bad)
mov
aam
sub
inc
or
push
pop
jne
mov
xchg
xlat
push
in
stc
cld
movs
xchg
inc
sbb
push
xor
jae
jle
xor
js
stos
(bad)
mov
idiv
pop
push
pop
jl
outs
sub
jmp
in
mov
push
push
or
and
or
js
push
adc
and
rcl
mov
stc
or
push
int3
xchg
pusha
sbb
jge
cmps
adc
and
mov
sub
fld
dec
pop
fs
popf
fisttp
jne
add
movs
mov
add
rcr
stos
call
sbb
imul
cli
xchg
xchg
out
fsub
jo
les
jne
dec
sub
cmp
int
(bad)
xor
pop
sbb
mov
jo
push
sbb
and
mov
loope
jno
push
lods
jmp
and
or
and
cmc
xchg
xlat
mov
push
inc
or
(bad)
and
pop
sub
push
pop
pop
sbb
jl
mov
sub
leave
mov
mov
std
mov
rol
add
push
pop
or
or
pop
adc
lods
out
mov
aad
sbb
sub
pop
scas
fiadd
pop
ret
mov
sub
and
add
test
test
pop
adc
sub
cmp
cmp
adc
and
sub
mov
jmp
push
es
jno
and
imul
popa
mov
xor
or
retw
push
inc
sub
pusha
cmp
int3
mov
jg
sbb
sbb
push
pop
sub
cmp
pop
add
ja
or
push
mov
pop
sbb
push
adc
enter
ret
stos
in
mov
push
push
and
sbb
push
es
adc
mov
cmp
stos
inc
adc
adc
aad
cmp
and
sub
(bad)
into
loop
popf
retf
mov
mov
pop
pop
call
inc
mov
xchg
sbb
mov
test
movs
js
es
sub
not
jno
pop
xchg
fisttp
inc
pop
pop
add
xchg
pop
jecxz
(bad)
cmp
push
aas
pusha
and
pop
sub
ins
cs
test
add
sub
fisttp
pop
std
sahf
sub
jge
add
js
sbb
aaa
cmps
repnz
adc
inc
pop
cmp
or
adc
push
pop
cs
arpl
inc
sbb
xor
add
add
cmp
gs
push
loop
or
jge
mov
cmp
outs
or
inc
out
out
daa
push
mov
sbb
mov
xchg
icebp
and
aas
adc
into
retf
push
pop
aas
cli
xchg
adc
rcr
loopne
xlat
and
jg
daa
jne
mov
je
cmp
dec
retf
sbb
test
xchg
inc
and
add
addr16
sti
jcxz
jmp
jno
pushf
in
mov
mov
mov
inc
or
bound
jnp
sub
out
xor
push
xor
gs
out
aad
pop
dec
or
push
adc
pop
sbb
in
aam
jecxz
fld
push
sbb
ja
push
sahf
aam
das
out
(bad)
mov
mov
pop
mov
add
pop
jecxz
xchg
std
pop
das
jbe
dec
cmp
pop
dec
sub
stos
xor
pop
or
leave
mov
sbb
mov
sub
movs
in
sbb
or
ret
popa
sbb
test
enter
xor
xchg
hlt
daa
ins
jne
push
cmp
scas
call
repnz
outs
add
inc
add
push
nop
mov
cmp
cmps
pop
sbb
es
jmp
repnz
ins
pop
inc
or
inc
sub
adc
fcmove
stos
lods
ficom
xchg
js
lods
jmp
cmp
loope
aaa
pop
adc
nop
imul
es
add
lahf
mov
inc
mov
(bad)
mov
adc
(bad)
sbb
dec
sub
pop
imul
sub
popf
inc
or
or
lods
out
or
ins
das
dec
test
ss
add
imul
nop
repz
outs
xchg
ror
jnp
movs
(bad)
idiv
or
int3
addr16
in
iret
lods
inc
fs
in
sar
out
push
dec
pop
jp
sar
retf
xchg
or
pop
xor
div
mov
xchg
mov
(bad)
fdivr
test
and
lods
pop
arpl
mov
test
xchg
and
pop
bound
xchg
fist
jge
dec
or
mov
mov
or
retf
test
inc
and
outs
ins
xor
popf
hlt
pop
push
daa
inc
push
sub
std
mov
xchg
loopne
pop
pop
inc
rcr
fistp
and
(bad)
test
mov
sbb
data16
inc
and
mov
(bad)
xchg
(bad)
lods
out
jge
sub
clc
mov
jp
mov
xor
push
cwde
aad
das
dec
push
cmps
les
ins
sub
call
xor
aad
in
push
mov
xchg
stos
test
mov
xchg
(bad)
push
dec
les
push
push
stos
aam
sahf
fst
hlt
mov
fwait
and
cmps
cmps
mov
in
mov
lea
daa
sti
xchg
lods
mov
cmp
xchg
lock
and
mov
retf
rcl
jb
ficomp
inc
es
sub
stc
mov
sbb
ja
imul
push
or
cdq
fidivr
fwait
hlt
mov
jecxz
pusha
add
std
mov
mov
mov
inc
add
ret
and
adc
and
lahf
test
mov
cmp
and
sbb
(bad)
dec
scas
int
jmp
fwait
imul
adc
pcmpgtw
in
scas
push
retf
cmp
xlat
jne
js
and
jne
mov
pop
gs
rcr
popa
jno
mov
(bad)
cwde
jmp
rcr
sub
hlt
daa
jo
or
sub
mov
xchg
(bad)
aad
bound
pop
adc
cld
aas
pop
xchg
stos
enter
lock
stos
imul
les
cmp
adc
sahf
inc
add
xlat
mov
lea
pop
adc
inc
ss
xchg
xor
inc
cmc
mov
fs
xchg
out
out
(bad)
test
mov
add
daa
dec
xchg
fisttp
mov
ins
aas
mov
cld
fdivr
xor
test
lock
scas
xchg
rol
mov
sub
sub
sub
mul
inc
or
xchg
mov
pushf
dec
sbb
lds
imul
sbb
and
rcr
cmp
gs
rcl
or
repz
std
xchg
mov
cmp
mov
(bad)
ret
int3
not
jp
mov
cmp
xchg
ficomp
rcr
into
ss
or
ror
inc
add
ja
cmp
outs
cmp
jno
(bad)
mov
mov
or
xchg
clc
mov
add
mov
add
ss
or
je
fistp
cmp
cmp
add
repnz
xchg
loopne
aam
push
icebp
mov
mov
scas
int
sub
movs
aam
shr
sti
mov
add
add
push
pop
sbb
aaa
jno
(bad)
stos
ret
sbb
mov
cld
scas
(bad)
gs
shl
inc
aaa
inc
xor
(bad)
ror
arpl
popa
hlt
mov
mov
ss
push
hlt
lods
fisub
cli
cdq
(bad)
xor
and
sbb
test
repz
rcl
inc
and
scas
in
adc
add
xchg
repnz
out
adc
sub
hlt
mov
test
mov
not
outs
add
fisttp
nop
ret
ins
add
xor
mov
mov
fisubr
outs
sub
jg
mov
punpckhwd
xchg
rcr
sahf
mov
outs
push
mov
mov
mov
push
inc
pop
xor
movs
stc
imul
xchg
pop
cld
xchg
fucompp
mov
retf
adc
mov
sbb
lods
fmul
daa
ins
out
repnz
call
out
hlt
xchg
and
jne
pop
loope
mov
dec
in
ficomp
sbb
cmp
fist
mov
inc
in
inc
add
cdq
pop
sub
jecxz
mov
call
ror
inc
jmp
adc
inc
(bad)
cdq
ret
mov
xor
ja
cdq
dec
aas
ds
push
dec
iret
mov
inc
shr
jb
sub
int3
mov
push
cs
xchg
mov
fwait
dec
in
xor
call
xchg
xchg
xor
sbb
div
jb
outs
and
mov
or
arpl
inc
test
inc
cmp
fmul
in
ss
cld
mov
aaa
jmp
jle
fimul
mov
sub
outs
sub
or
cld
movs
xor
inc
sbb
ins
cs
xchg
sti
and
push
adc
movs
aad
sbb
adc
push
sbb
jmp
cld
nop
loopne
push
into
enter
xor
xlat
(bad)
out
lahf
movs
pop
cmp
sahf
test
iret
mov
mov
mov
dec
jo
add
data16
imul
cmp
mov
pop
jge
xchg
ret
mov
mov
xchg
push
ret
fsubr
jnp
jp
loope
ror
adc
xchg
push
and
pop
data16
jns
jl
jge
aad
cmc
or
jo
shl
scas
loopne
xchg
xchg
enter
fyl2x
mov
loope
push
push
repnz
xchg
(bad)
mov
pop
xor
or
inc
in
mov
xchg
sub
push
adc
in
hlt
jecxz
add
push
xor
xor
mov
jae
jae
cld
mov
aad
ins
add
test
fs
inc
out
movs
leave
or
bnd
push
push
xor
in
lea
lahf
(bad)
sub
fsubr
in
mov
cmc
jl
stc
jns
jne
js
mov
cs
test
cmp
jo
stos
call
enter
cli
mov
out
ret
into
mov
lahf
(bad)
jne
mov
neg
mov
jmp
or
test
xchg
mov
scas
repz
repz
xor
mov
jmp
or
arpl
jl
dec
mov
cmc
cmps
in
pop
test
sbb
mov
cmps
(bad)
adc
adc
jb
in
(bad)
or
icebp
mov
in
sub
or
cmp
(bad)
mov
push
or
mov
mov
xor
outs
ss
inc
xor
loope
je
xchg
ficomp
sti
push
dec
adc
pop
sub
mov
lods
fnstcw
pop
mov
aam
loopne
push
push
or
sahf
cmps
mov
jmp
ins
xor
rol
cmp
lods
cmp
push
sub
add
and
and
adc
imul
std
jnp
out
and
add
shr
out
xor
(bad)
pushf
iret
and
jo
xor
jle
pushf
popa
jmp
cli
or
in
dec
icebp
stos
leave
call
rcr
cmps
xchg
out
mov
call
dec
xchg
aad
jge
xchg
aam
out
call
aad
mov
pop
sti
popa
jle
shr
sbb
inc
rcr
sahf
sar
ja
mov
cmp
fcom
xor
leave
scas
cld
jo
push
cmp
mov
shl
aaa
and
(bad)
ret
push
sbb
xor
inc
inc
sbb
adc
ins
movs
out
(bad)
scas
jmp
dec
mov
add
cwde
xlat
fs
je
js
ins
sbb
dec
shl
cld
push
in
out
leave
inc
es
ror
jmp
aaa
mov
mov
dec
dec
pop
inc
daa
cmps
jecxz
out
imul
comiss
and
sbb
cli
ret
jle
pushf
shl
xchg
loop
cwde
daa
jbe
pop
jne
imul
push
pop
lock
add
mov
push
xchg
imul
and
into
call
cmp
in
aad
pop
adc
lods
jecxz
inc
pop
loop
lds
mov
add
scas
retf
mov
jne
pop
and
jne
imul
mov
(bad)
sahf
dec
pop
jo
outs
cmovge
icebp
cwde
jl
xchg
movs
div
pop
sub
sbb
push
add
popa
das
cs
inc
repz
scas
div
outs
push
or
int
test
xchg
lds
sbb
jbe
sbb
and
xor
inc
ret
mov
imul
jno
mov
push
pop
push
dec
add
inc
inc
sbb
jp
out
in
lea
loope
cmp
push
jmp
cmp
fisttp
dec
pop
adc
pop
ds
in
inc
xor
add
test
xchg
repnz
call
out
xchg
shr
xor
push
push
jne
xchg
sahf
aad
cli
mov
fistp
push
xor
jmp
mov
push
and
in
fisttp
(bad)
mov
mov
push
shl
jns
ss
jecxz
repnz
cmp
fs
sti
cdq
ja
retf
clc
mov
fcomp
test
push
pop
ins
cs
cmc
scas
pop
sbb
scas
pop
cmp
xchg
xor
fcom
jbe
jmp
jmp
add
and
(bad)
movs
int
jmp
jl
sbb
sub
mov
mov
cmp
cwde
out
mov
sub
idiv
bound
jg
hlt
mov
xlat
imul
push
adc
dec
mov
xor
outs
div
out
mov
es
jmp
fcom
push
dec
push
jns
in
call
adc
dec
and
push
loopne
dec
retf
sbb
sahf
mov
adc
retf
cmps
inc
adc
add
jo
sbb
jo
and
jb
sar
mov
data16
mov
in
inc
xor
leave
mov
mov
cmps
frstor
or
aad
inc
cmp
emms
int
jmp
mov
mov
mov
inc
or
cmp
mov
jbe
push
add
xchg
loop
push
cmp
and
cmp
push
nop
(bad)
inc
adc
push
adc
(bad)
jmp
imul
popa
and
add
lods
fcomp
push
retf
cdq
fstp
scas
loope
retf
test
sbb
daa
jg
call
loopne
arpl
pop
into
xchg
not
cwde
test
add
jo
pop
jmp
fistp
adc
push
pop
mov
cld
jo
jge
nop
in
mov
cld
mov
push
adc
xchg
aam
mov
inc
or
cli
mov
scas
lds
xor
pop
inc
sbb
rcl
pop
cmp
or
movs
hlt
iret
test
test
pop
and
(bad)
xlat
ins
loop
into
push
sbb
mov
call
xor
push
adc
mov
fisub
fwait
enter
pop
sbb
jnp
dec
mov
mov
mov
jge
jo
data16
mov
xor
call
adc
outs
int
sbb
cmc
daa
dec
int
fnsave
push
outs
sub
xchg
sub
jg
cmps
mov
xor
cmp
cmp
jo
lods
jecxz
xchg
cmovge
(bad)
fdecstp
mov
iret
xchg
push
adc
inc
das
pusha
lods
imul
mov
dec
add
sbb
xor
enter
idiv
call
and
mov
mov
mov
dec
push
fld
ror
or
(bad)
shr
test
mov
test
add
je
vmread
and
mov
sbb
dec
pop
pop
mov
js
dec
xchg
not
pop
fst
les
cmp
push
sbb
inc
sub
jne
push
lods
jmp
mov
std
mov
es
or
arpl
mov
lock
shl
or
or
arpl
add
adc
mov
int
mov
repnz
mov
add
lds
(bad)
das
ja
sub
push
sbb
lods
add
mov
mov
loope
test
jnp
push
pop
cmp
faddp
data16
(bad)
inc
add
jmp
iret
xchg
aas
outs
adc
and
cmps
push
dec
inc
test
fcmovne
xchg
aaa
jns
outs
or
(bad)
mov
outs
jmp
pop
icebp
add
cmp
fwait
stc
xor
cmp
mov
xchg
(bad)
faddp
mov
pusha
cmp
outs
and
(bad)
mov
mov
lea
jnp
aad
sub
adc
test
mov
dec
cmp
mov
(bad)
mov
(bad)
mov
or
popf
pusha
ss
adc
push
pop
or
add
mov
jle
cmps
(bad)
iret
sub
push
and
push
cwde
hlt
dec
enter
movs
test
sub
dec
sbb
jb
movs
(bad)
jns
and
sub
mov
cmp
pushf
fistp
dec
sub
pop
pop
cmp
jne
mov
mov
or
add
dec
in
aad
cdq
xlat
lahf
fstp
dec
or
and
or
sub
pop
cmp
ja
ins
adc
add
push
xor
sbb
je
push
sub
or
cdq
in
mov
fdivr
shl
mov
pushf
out
stos
cmc
mov
retf
mov
cmps
rol
mov
stos
out
fnstenv
lahf
clc
mov
sbb
push
sub
pop
cmp
cmp
gs
add
push
dec
add
imul
pop
sbb
retf
adc
or
xchg
mov
jecxz
pop
sbb
adc
lea
cmp
xor
je
in
or
leave
lds
pop
cwde
into
movs
jnp
adc
rcl
nop
in
mov
stc
stos
loopne
mov
xchg
mov
xor
sahf
aam
ins
dec
aas
jg
cli
scas
out
xor
sbb
cmps
int
jns
pop
outs
fsubr
aaa
jnp
packsswb
jecxz
mov
push
ss
and
outs
adc
fstp
dec
mov
pop
ds
push
in
ins
inc
adc
cli
cmps
out
mov
ds
jg
not
xchg
fisubr
jl
bound
(bad)
shl
test
add
push
jae
sbb
sti
mov
cmovl
stos
(bad)
mov
sbb
cmc
xchg
rol
jmp
dec
and
pop
cwde
fisttp
test
mov
in
and
and
out
fld
xor
jbe
in
clc
test
dec
dec
xor
adc
mov
jo
repnz
fs
or
out
clc
mov
pop
mov
shl
push
adc
or
jo
sbb
push
dec
iret
or
ins
repz
mov
push
(bad)
test
sbb
or
sbb
retf
xor
xor
sbb
in
xlat
xchg
data16
or
cmps
or
pop
fbld
sbb
or
jecxz
call
int3
enter
adc
dec
mov
inc
push
ja
mov
gs
ret
xchg
sbb
retf
pop
arpl
imul
test
mov
jae
jne
or
arpl
adc
icebp
cmps
in
jo
outs
fmul
mov
ss
shl
lods
cmp
fistp
test
mov
dec
or
clc
mov
imul
push
sub
(bad)
adc
ss
mov
inc
pop
(bad)
leave
cmps
jmp
(bad)
cli
mov
(bad)
sbb
mov
push
pop
daa
jle
add
clc
movs
in
outs
push
cmp
fiadd
mov
cmp
in
aas
and
fwait
sbb
enter
(bad)
cld
mov
call
inc
jle
add
sti
cwde
mov
inc
and
test
pop
or
icebp
test
rcl
xchg
jns
fdivr
lods
push
push
sti
cmp
icebp
add
inc
mov
adc
rol
scas
in
lods
sbb
dec
push
es
add
push
ss
pop
adc
xor
je
jno
outs
sub
or
pop
push
jl
pop
pop
push
push
outs
aas
jg
jl
jge
inc
sub
dec
or
jle
push
cmp
outs
push
pop
push
jl
push
adc
pop
pop
jns
inc
aaa
outs
das
jg
pop
adc
jbe
dec
pop
pop
ds
sbb
pop
push
or
bound
jae
pop
sub
jno
inc
add
inc
add
sub
sbb
ins
adc
pop
sbb
push
adc
outs
ds
jg
jle
inc
ss
pop
push
outs
sub
jge
pop
sub
add
inc
add
dec
add
imul
cmp
or
sub
push
add
and
ds
pop
sub
pop
adc
jle
ins
add
addr16
dec
add
sub
jo
jb
inc
xor
xor
imul
imul
cmp
pusha
es
dec
cmp
daa
ja
push
sbb
jl
cmp
pop
sbb
pusha
adc
cmp
pop
or
jp
cwde
jmp
or
pop
sbb
ins
push
jg
addr16
aaa
push
adc
jbe
pop
mov
in
mov
inc
add
ja
mul
lea
cli
shl
dec
js
ss
mov
lea
ins
out
cmp
rcr
(bad)
xchg
mov
popf
les
test
xchg
inc
jb
je
std
fistp
fdivr
test
add
push
push
fcmovnu
test
xchg
jge
jp
out
hlt
xchg
loopne
and
or
or
lods
sbb
cmp
es
and
xor
xchg
shr
mov
cmps
cld
add
inc
aam
sbb
in
lods
hlt
sub
push
ins
rcl
xchg
aad
ja
sbb
mov
mov
aas
inc
cmp
mov
xchg
bound
ret
lea
pop
or
ret
pop
xor
in
scas
dec
sub
mov
push
das
ja
test
iret
mov
cmps
out
test
sub
sub
cs
sbb
push
or
cld
mov
pop
dec
push
pop
cmps
adc
add
pushf
xlat
cmps
call
mov
or
pop
mov
js
jecxz
mov
test
mov
popf
(bad)
jp
cmp
and
push
scas
adc
xor
inc
sbb
mov
ins
es
mov
das
mov
(bad)
loope
outs
push
pop
loope
test
inc
bound
jmp
movs
in
je
push
stos
xor
xlat
push
es
adc
push
xchg
aam
xchg
xchg
inc
and
out
cli
mov
push
js
dec
test
leave
cmps
(bad)
xor
inc
sub
mov
cmps
addr16
inc
fcomp
xchg
int3
pop
pop
or
or
adc
sub
or
sbb
or
pusha
sbb
adc
or
adc
lock
aad
pusha
push
push
mov
pop
pop
shl
and
in
mov
jns
aas
popw
int3
fnstcw
inc
lods
push
push
and
test
xchg
jge
das
arpl
icebp
stos
retf
es
movs
jp
adc
sub
xchg
int3
scas
xchg
add
or
mov
inc
pop
jg
cli
iret
mov
pop
pop
sub
cmps
(bad)
lods
nop
push
sahf
fild
lahf
in
lahf
dec
and
add
retf
add
push
xor
js
cmp
sbb
out
aaa
aam
sar
mov
data16
xchg
inc
pusha
add
pop
pop
push
shr
mov
xor
mov
pop
fs
push
rcr
pop
add
rcl
lock
mov
pop
xchg
in
lods
xor
pop
add
aaa
push
sub
sbb
cmp
outs
push
inc
sub
pop
pop
sub
daa
arpl
inc
sub
dec
or
jo
pop
ss
arpl
push
adc
dec
add
sub
inc
push
ja
outs
xor
xor
xor
pop
sbb
pop
sbb
dec
cmovs
inc
push
sub
inc
sbb
and
arpl
sub
popa
cmp
jnp
pusha
xor
jl
addr16
adc
pop
push
push
pop
xor
pop
das
outs
pop
inc
add
or
and
inc
sbb
and
pushf
leave
cmps
leave
sbb
loopne
int3
adc
add
lock
sbb
push
inc
sub
sbb
jb
pop
sbb
popa
and
inc
push
jle
outs
or
es
sub
push
push
fs
jg
popa
add
jp
dec
or
dec
or
push
or
or
pop
adc
dec
cmp
inc
pop
push
xor
push
dec
add
jbe
inc
adc
push
push
cmp
pusha
add
or
dec
pop
sub
pop
ja
sub
inc
and
adc
cdq
cli
mov
out
lds
leave
scas
in
ret
mov
mov
pause
jo
int3
test
jne
call
xchg
iret
mov
es
mul
mov
pop
(bad)
xor
adc
jne
btr
pusha
popf
and
shl
mov
cdq
leave
xor
cmp
xor
out
mov
mov
dec
aas
dec
lods
xor
clc
int3
cmps
(bad)
aaa
add
inc
push
push
je
sti
fistp
test
ins
ss
cli
mov
pop
das
pusha
sub
dec
pop
and
movs
push
jge
(bad)
icebp
mov
push
inc
or
retf
mov
sub
outs
pop
jmp
sub
or
mov
xchg
push
adc
fdiv
mov
jecxz
jecxz
inc
and
(bad)
movs
popf
push
adc
ss
out
mov
mov
ror
push
push
outs
das
dec
mov
mov
pop
test
dec
xor
cld
mov
pcmpgtd
push
sets
cmp
cmp
mov
into
mov
and
call
iret
cmps
les
stos
sbb
ss
in
dec
inc
pop
push
mov
sahf
(bad)
(bad)
mov
fnstcw
retf
fmul
push
or
lds
cmp
sub
rol
scas
xchg
sub
jp
adc
sbb
push
adc
shl
xchg
push
dec
sbb
in
fdiv
add
jne
ds
jecxz
dec
add
push
data16
int3
mov
xchg
mov
mov
(bad)
mov
dec
jne
ja
into
xchg
aam
dec
pop
inc
mov
movs
adc
xor
jbe
or
aas
push
adc
fld
movs
inc
sub
in
fst
mov
cmc
mov
pop
sub
jmp
pop
mov
into
mov
cs
scas
inc
pop
sbb
push
call
mov
mov
leave
sti
scas
in
aas
ins
and
les
sbb
seto
add
push
rcr
inc
push
sub
out
mov
and
std
scas
xchg
cmp
cmp
adc
dec
mov
push
pop
cmp
adc
in
test
lea
and
fmul
pusha
mov
ret
mov
jle
daa
addr16
aas
jnp
adc
mov
push
shl
mov
je
cs
cmp
xchg
mov
retf
rol
icebp
mov
mov
mov
mov
xchg
jmp
mov
stos
fcomp
sbb
pop
push
push
movq
jg
jg
jle
pop
das
push
inc
add
imul
sbb
jo
push
pop
sbb
dec
cmovbe
push
push
inc
xor
sbb
push
inc
push
dec
pop
ja
addr16
fs
imul
popa
xor
jns
pop
pop
inc
and
xor
aaa
jae
jle
and
dec
cmp
jo
dec
cmp
pop
add
int
in
ret
xchg
mov
cld
mov
mov
xchg
idiv
fadd
test
out
xlat
cmps
(bad)
mov
out
in
test
retf
and
leave
xchg
sbb
jb
gs
or
outs
ss
pop
inc
daa
inc
add
push
or
bound
jo
pop
ss
arpl
push
adc
dec
add
sub
pop
adc
and
sti
mov
nop
ror
cli
mov
out
test
(bad)
scas
in
mov
test
movs
icebp
xchg
rol
lods
fistp
retf
mov
pushf
icebp
mov
xchg
aam
in
in
and
test
sti
movs
sbb
imul
cmovno
jl
ins
push
test
ficom
popf
inc
mov
dec
pop
loopne
dec
repz
outs
add
das
shl
data16
jge
lds
pop
sti
out
lods
int3
cmp
jae
repnz
cwde
inc
outs
pop
aaa
loope
lods
sar
out
imul
jae
cmp
mov
or
rcl
and
jge
adc
xor
or
inc
mov
xchg
clc
mov
js
inc
pop
mov
iret
aas
mov
mov
push
aaa
addr16
xchg
(bad)
pop
fwait
call
cmp
cli
mov
jbe
orps
adc
ins
mov
mov
pushf
push
inc
sbb
out
add
jb
add
pop
pop
adc
mov
mov
dec
cmp
fistp
push
pop
xchg
rcl
or
pop
sbb
sar
mov
pop
cmp
pop
jge
clc
clc
(bad)
shl
enter
xor
cs
xchg
repnz
sub
in
scas
fild
test
xchg
push
pop
push
cmps
cmp
loope
mov
leave
inc
inc
cmp
add
adc
je
or
push
push
mov
xchg
int3
mov
adc
dec
mov
inc
adc
scas
stc
mov
movs
add
(bad)
in
fisttp
ret
fidiv
adc
in
lock
leave
sub
jbe
(bad)
mov
fldenv
mov
movs
out
das
gs
push
sbb
or
ss
add
mov
lods
out
xor
pop
clc
fsub
and
pusha
jo
pop
sub
rol
mov
xchg
pop
sub
fwait
in
inc
and
dec
mov
push
xor
pusha
cmp
sbb
test
pop
js
sbb
cmp
jp
pop
stos
cmp
ret
iret
mov
push
sub
or
mov
data16
fimul
mov
pop
sbb
fst
scas
jnp
and
(bad)
stos
sti
sub
or
cmp
out
mov
push
fdiv
test
out
retf
and
xor
fdiv
scas
jae
and
cmps
sbb
mul
pop
xchg
cmp
sbb
pop
sbb
out
retf
and
call
and
jmp
repnz
xchg
ret
xchg
cwde
dec
or
jbe
xor
(bad)
cmp
in
and
sbb
xchg
hlt
out
(bad)
mov
fcomp
sbb
adc
movq
jg
jl
jge
pop
sub
aaa
inc
add
and
add
addr16
jl
inc
cmp
jnp
ja
outs
sub
push
dec
or
dec
cmp
outs
cs
and
ins
add
arpl
add
in
aad
std
xchg
repnz
mov
mov
fist
fild
jno
or
or
sub
push
push
pop
cmp
pop
cmp
jo
outs
sub
inc
xor
jb
push
pop
imul
outs
push
dec
push
inc
sub
sbb
push
inc
cmp
inc
or
push
add
inc
pop
inc
or
fsubr
fist
ret
mov
xchg
aam
inc
loop
icebp
mov
out
call
enter
ficomp
fst
(bad)
mov
stos
enter
ficomp
(bad)
xchg
in
aam
iret
pushf
shl
ret
mov
jmp
xchg
leave
mov
retf
xchg
mov
cli
cwde
cld
mov
rep
rcl
adc
xor
outs
sub
and
out
pop
xchg
movq
test
mov
mov
jge
aad
xchg
mov
sti
loope
shl
movs
int3
arpl
mov
pop
push
fsubr
call
dec
add
xchg
mov
jl
dec
aam
mov
push
ja
je
xor
add
or
mov
call
cld
ror
jns
adc
in
fisttp
out
xchg
sbb
cmc
mov
and
fwait
cmc
and
push
sub
sub
ror
arpl
std
mov
push
push
inc
add
mov
lods
push
xor
mov
push
dec
(bad)
or
adc
popf
adc
sar
arpl
mov
fdiv
test
out
call
mov
stos
sti
xor
or
push
jne
ins
cmps
cmp
sbb
push
xchg
scas
loopne
add
push
(bad)
cmp
mov
data16
pop
jp
(bad)
jmp
xor
xchg
dec
pop
push
inc
rcl
call
and
rcr
jnp
pop
sub
leave
movs
adc
sbb
and
sub
adc
add
push
daa
imul
cli
fistp
shl
test
and
aas
call
pop
adc
movs
adc
jmp
push
(bad)
fldenv
mov
ret
shl
dec
mov
mov
pop
and
xor
inc
xor
mov
sub
cdq
into
movs
jns
adc
leave
int3
add
xchg
in
movs
jle
cmp
push
add
mov
jg
leave
leave
mov
inc
mov
jbe
leave
(bad)
mov
pop
push
cmp
add
loop
mov
push
mov
lock
ror
cmp
adc
jecxz
scas
rol
sbb
iret
cmp
aaa
jmp
xchg
jmp
or
in
mov
xor
aam
fisubr
cmp
gs
xchg
adc
xor
cmc
mov
js
lock
lods
jmp
pop
and
xor
aaa
test
jae
xor
jmp
(bad)
adc
test
adc
test
mov
dec
sub
inc
es
rcl
or
pop
ja
out
jg
push
out
test
cmp
nop
(bad)
lahf
idiv
xchg
into
(bad)
fistp
(bad)
mov
mov
push
clc
mov
ret
mov
ficomp
mov
xchg
movs
out
ret
test
mov
movs
iret
test
mov
into
(bad)
iret
xchg
sahf
fiadd
add
in
xchg
mov
mov
pop
xor
push
adc
adc
mov
in
loope
fisttp
enter
fistp
out
mov
div
mov
mov
xchg
sbb
jp
dec
pop
push
pop
inc
es
xor
mov
mov
xchg
aam
(bad)
mov
fistp
aad
in
(bad)
fcom
aam
(bad)
mov
fistp
iret
lods
(bad)
mov
neg
mov
mov
jmp
sbb
dec
sub
dec
cmp
arpl
add
cmp
dec
xorps
fdiv
sbb
imul
ins
and
mov
mov
mov
(bad)
cmps
out
into
(bad)
fistp
leave
xchg
jmp
mov
jmp
clc
mov
int
loopne
mov
mov
rcl
pop
cmps
jg
dec
mov
daa
inc
mov
push
jmp
jge
repnz
push
fsubr
xor
push
lods
jmp
add
idiv
sbb
mov
inc
inc
pop
call
aas
je
loope
ficomp
lods
jmp
jb
and
rcl
lods
(bad)
and
pop
jne
jmp
scas
out
pop
arpl
lock
loop
ins
jae
inc
mov
sahf
jmp
sbb
cmc
retf
(bad)
sar
push
cmps
cmp
div
scas
iret
push
and
imul
cmp
aad
sti
adc
pop
sub
mov
gs
aam
cli
xor
push
(bad)
sbb
out
iret
mov
xor
jl
(bad)
lods
jmp
and
ins
pop
sub
stos
test
daa
mov
xchg
bound
ins
mov
cmp
dec
and
repnz
dec
jle
jae
aad
cli
or
sbb
rcl
(bad)
pop
and
jmp
dec
and
int
mov
and
cmp
rol
stos
cmp
push
imul
(bad)
mov
test
pop
pop
fstp
xchg
int3
push
dec
add
scas
cmp
xor
cli
mov
add
repnz
mov
cmps
(bad)
xor
sbb
fidivr
gs
xor
push
or
outs
xor
add
mov
sbb
(bad)
jmp
ror
pop
inc
scas
adc
pop
fwait
cli
fwait
jo
pop
aas
loope
fisubr
movs
sbb
fwait
hlt
mov
mov
ins
add
xchg
ret
cmovne
adc
pop
(bad)
loopne
mov
test
je
(bad)
hlt
lods
jmp
mov
xchg
pusha
jg
inc
mov
pop
or
lods
mov
and
xor
adc
jmp
push
lock
pop
mov
or
ja
xchg
mov
imul
push
xchg
cmp
mov
movs
sub
sub
in
cmp
pop
stos
fdiv
mov
aas
inc
cli
sar
push
dec
cld
or
mov
fist
xchg
cdq
mov
icebp
jb
sub
jbe
cmp
stos
popa
stc
cmp
movs
cmc
das
push
or
sbb
cmp
xchg
sbb
jg
pop
movs
aam
lods
push
sub
aam
(bad)
cdq
jnp
xchg
out
pusha
add
out
inc
arpl
jle
sti
push
lods
or
sbb
push
mov
sbb
xchg
add
out
in
loope
ret
lds
loope
lahf
retf
jb
sbb
push
dec
pop
cs
push
je
cdq
cmc
or
cmc
or
les
movs
jecxz
outs
les
adc
aas
clc
mov
jb
lods
add
sub
mov
dec
mov
sti
cmps
jbe
push
jge
cmp
popf
push
dec
ds
repz
inc
dec
popa
cdq
inc
imul
add
jmp
sub
inc
xchg
les
inc
daa
xchg
mov
mov
sti
and
inc
dec
cld
pop
scas
das
cmc
idiv
inc
test
call
outs
inc
out
push
fstp
fstp
ins
mov
lods
movs
lods
dec
sbb
sub
daa
and
out
test
add
add
out
jbe
mov
xchg
or
in
xchg
sbb
adc
(bad)
fst
test
lahf
imul
xor
sti
sbb
sahf
inc
ret
mov
mov
shr
scas
adc
adc
mov
sub
in
int
mov
shl
cmps
add
sub
xor
jp
inc
enter
lock
mov
sti
in
stos
test
cmp
jl
retf
mov
ja
fdiv
xor
mov
xor
mov
mov
mov
push
in
aam
outs
cld
inc
cmp
mov
mov
inc
(bad)
push
icebp
mov
int
push
jae
clc
cmps
(bad)
and
and
push
cli
push
pop
movs
adc
dec
or
(bad)
popf
adc
xchg
cmps
push
(bad)
retf
fmul
xchg
or
imul
retf
icebp
inc
mov
lahf
out
mov
inc
out
mov
or
xchg
out
mov
xchg
pop
mov
fs
fst
pop
hlt
in
jbe
adc
pop
ins
jg
(bad)
or
jae
out
pop
cmps
jnp
xlat
mov
test
out
jmp
call
mov
sahf
mov
sub
xchg
xor
adc
or
jmp
mov
das
scas
xor
and
pop
push
push
cmp
jnp
mov
int3
xchg
leave
pop
cmc
mov
inc
inc
retf
leave
add
ins
add
test
faddp
mov
adc
cmps
jecxz
mov
mov
sub
repz
aam
ja
mov
out
xor
push
sbb
dec
mov
fimul
and
xlat
adc
push
ds
scas
scas
add
and
mov
cmp
fdivr
ror
xchg
test
sbb
loope
and
and
push
pop
arpl
mov
arpl
dec
pop
retf
dec
mov
lahf
sbb
push
dec
hlt
retf
jmp
sbb
cmps
mov
jno
fadd
adc
xor
xchg
dec
adc
sbb
outs
mov
pop
in
arpl
in
xchg
inc
xchg
xchg
loop
jno
int
pop
jns
test
dec
mov
mov
dec
pop
mov
and
jae
imul
mov
stc
pushf
push
outs
inc
je
not
add
add
imul
sahf
movs
inc
jnp
stc
mov
inc
daa
shl
pop
xchg
mov
xchg
ins
jne
in
jne
shr
ja
int3
out
inc
add
sbb
pop
mov
sub
inc
fsub
inc
or
adc
push
push
nop
xchg
add
sbb
outs
arpl
test
into
cmps
test
jo
outs
dec
sbb
into
adc
es
stos
push
movs
and
inc
push
cmc
push
ret
rol
ret
and
fldenv
out
inc
inc
mov
inc
inc
out
ja
mov
rcr
enter
pop
add
gs
outs
inc
sbb
loop
pop
ins
(bad)
jecxz
mov
push
pop
(bad)
mov
psadbw
mov
pop
(bad)
std
lods
cmp
les
cmp
push
mov
add
cmp
fucomp
fisub
mov
xor
idiv
je
adc
cwde
cmps
scas
inc
mov
adc
mov
or
sbb
xchg
fcom
mov
pusha
inc
fdivr
sar
clc
(bad)
stos
lahf
imul
xchg
pop
scas
jns
popa
les
pop
jmp
out
std
pop
cdq
enter
xchg
cmp
mov
adc
pop
punpckhdq
push
(bad)
jg
and
add
nop
mov
dec
mov
push
or
push
inc
inc
mov
mov
jnp
ss
jmp
cli
add
jns
ins
mov
xchg
cmp
jecxz
mov
lock
mov
adc
or
icebp
movs
ins
inc
jle
jl
int
retf
xchg
sub
jno
aas
push
push
mov
mov
sbb
mov
rcr
cmc
adc
cld
inc
add
push
push
aad
or
shl
out
imul
push
lds
jmp
addr16
xchg
sbb
loop
add
fcomp
aam
mov
cdq
mov
xchg
cli
push
cmp
sbb
jb
fwait
mov
pushf
jb
and
in
pushf
pop
bound
fbstp
fwait
xchg
inc
repnz
ds
out
jle
lock
into
adc
sub
arpl
xor
in
clc
inc
cmp
or
cmp
pusha
mov
(bad)
mov
mov
mov
add
sar
or
loope
pop
sbb
test
fadd
stc
pop
xor
sub
pop
pop
lods
aas
stc
xchg
push
call
fs
daa
test
out
fwait
in
cmc
call
jno
inc
(bad)
add
out
retf
mov
imul
jns
adc
ficomp
retf
ficomp
jnp
mov
int3
adc
(bad)
cld
sub
loop
outs
les
adc
lahf
xor
adc
jb
into
jg
jmp
cmp
shl
dec
jno
dec
or
pop
outs
inc
dec
jne
pop
call
ins
repnz
ret
or
dec
inc
mov
inc
lods
leave
xchg
push
xchg
add
aas
in
sbb
ins
mov
mov
call
cmp
movs
xchg
out
mov
xor
repnz
sub
adc
inc
and
sub
ret
lods
xchg
lahf
and
mov
sbb
inc
pushf
movs
lock
mov
mov
pop
sbb
mov
sub
int
(bad)
add
inc
jno
xchg
push
jne
inc
mov
or
xchg
inc
cdq
cmp
pop
adc
arpl
ds
mov
mov
stc
rol
ins
sub
cwde
and
aad
xchg
add
lods
sub
push
in
jmp
scas
sahf
nop
jmp
mov
push
in
or
aaa
sub
push
push
ins
xchg
jmp
loope
rcr
ins
pop
jne
in
ds
clc
aaa
retf
dec
jp
dec
and
jmp
inc
(bad)
sbb
or
sbb
mov
dec
stc
pushf
push
sub
and
fcomi
int
dec
sti
es
sbb
cmc
pop
movd
movs
daa
lahf
xchg
mov
out
push
das
inc
push
aaa
mov
(bad)
xor
jae
pop
in
mov
mov
aas
sbb
es
sti
mov
aam
inc
or
retf
out
jp
mov
xchg
mov
sahf
and
sub
inc
es
pop
enter
pop
add
pop
xchg
mov
add
push
mov
or
ret
leave
addr16
ret
test
mov
imul
mov
rcl
lock
xchg
dec
mov
xchg
xor
bound
mov
gs
cld
fdiv
jp
cli
push
int3
mov
test
fdivr
mov
mov
or
iret
movs
adc
cmp
out
mov
cdq
ret
aad
dec
sub
mov
xlat
(bad)
adc
loope
retf
inc
je
xlat
ficomp
shr
imul
push
lahf
cld
fdiv
loop
sbb
and
xchg
dec
sti
pop
mov
jo
add
loop
test
pop
xchg
jmp
inc
sub
jp
out
xchg
or
sbb
and
in
push
lea
adc
leave
and
or
jnp
stos
mov
adc
test
je
push
jmp
ins
xchg
mov
dec
das
adc
cmp
mov
test
cld
and
sbb
test
pop
pop
imul
or
mov
enter
(bad)
out
sub
and
dec
cmp
push
mov
xchg
cmp
jnp
pop
mov
mov
call
(bad)
cmp
mov
fs
mov
stos
push
bts
lods
test
mov
dec
and
div
cmp
mov
push
adc
xor
xor
mov
les
retf
or
cmc
loope
iret
bound
fwait
xchg
push
rcl
leave
jp
out
mov
mov
and
adc
pushf
add
je
push
mov
bound
ret
adc
inc
jge
stos
cdq
call
dec
stos
(bad)
cli
lock
(bad)
aad
jbe
cmp
leave
xor
mov
pop
in
pusha
and
adc
(bad)
(bad)
popf
iret
pop
fdivr
shr
rcr
idiv
xor
sbb
pushf
sub
lock
rcl
inc
mov
(bad)
dec
fmul
inc
mov
(bad)
loop
jae
mov
pop
xchg
push
dec
xchg
xchg
mov
jno
stos
pusha
add
mov
out
retf
sub
inc
imul
(bad)
je
fiadd
push
sub
push
test
in
iret
das
in
xchg
popa
and
adc
mov
movs
fnstenv
cmc
pop
mov
sbb
and
push
dec
inc
cld
frstor
fisub
mov
out
popf
add
xchg
jle
test
fiadd
sbb
sahf
pop
lds
mov
out
hlt
lods
sbb
sub
test
push
mov
ja
push
adc
sub
jne
test
mov
test
(bad)
out
movs
adc
retf
int
cwde
mov
jge
rcl
in
pop
inc
push
pusha
sahf
push
cmp
jecxz
call
rcl
movs
sub
into
ds
adc
ds
mov
push
fisubr
iret
xchg
pop
ffreep
stos
lods
cmp
repnz
into
cli
lods
xchg
sub
push
mov
jecxz
inc
pop
cmp
xchg
jb
scas
into
xchg
(bad)
adc
adc
or
push
sub
in
adc
pop
(bad)
test
or
mov
or
jmp
test
rol
nop
add
jle
retf
cmp
and
push
rcr
push
push
push
sbb
and
rol
(bad)
(bad)
fisttp
pop
shl
push
mov
ins
scas
add
xor
data16
ins
dec
gs
mov
cmp
or
in
imul
mov
pop
mov
femms
adc
scas
movs
ret
push
daa
sub
xchg
lea
out
iret
jb
(bad)
js
mov
dec
aam
fs
nop
push
cmc
adc
mov
ja
test
adc
mov
ins
or
(bad)
(bad)
jnp
ins
call
cmp
jl
mov
and
xchg
jl
pop
inc
or
add
cmc
ss
test
nop
jo
mov
mov
xchg
lds
or
mov
imul
call
fist
jg
mov
pop
jb
add
dec
jo
mov
and
mov
mov
sbb
push
cmc
mov
xchg
pop
js
mov
fidiv
popf
fdivr
jecxz
xchg
stos
mov
sbb
not
pop
sbb
popa
lds
mov
aam
fsubr
xor
in
jmp
popa
rcr
call
fild
mov
xchg
shl
sbb
mov
cmp
test
jg
ret
aad
push
jae
aaa
out
add
cmp
mov
out
mov
data16
pop
das
sub
push
cmp
or
dec
or
inc
adc
pop
sbb
pop
and
in
xchg
fld
(bad)
cli
mov
nop
sbb
push
ror
shr
inc
jmp
shl
lea
sbb
scas
inc
inc
hlt
loope
gs
test
mov
mov
shl
int3
lds
jmp
fsubr
stos
(bad)
call
jno
imul
lds
mov
(bad)
jg
retf
jmp
adc
out
(bad)
mov
and
in
outs
and
pop
add
lock
imul
fnstsw
cmps
or
ss
mov
mov
and
inc
mov
aas
mov
jmp
cmp
xchg
mov
addr16
lahf
rcl
lods
mov
pop
stos
idiv
leave
jnp
adc
dec
xchg
js
shl
inc
rol
mov
mov
jne
dec
adc
scas
pop
shr
and
mov
into
retf
pop
and
push
std
mov
mov
xor
mov
call
sub
sbb
pop
movd
cdq
std
xor
adc
and
add
jnp
xchg
jne
cdq
mov
neg
into
pop
or
pop
add
sbb
aam
adc
push
jecxz
in
push
(bad)
push
dec
fisttp
(bad)
iret
stos
syscall
sar
inc
xchg
shr
lahf
fcmovu
add
xor
das
jecxz
pusha
fimul
xchg
inc
add
std
cmc
xlat
push
pusha
sub
out
out
arpl
cmp
pop
cmp
xchg
mov
mov
xor
sbb
jb
fcmovb
jbe
mov
xlat
lock
clc
or
imul
mov
xor
xchg
outs
lock
nop
mov
or
or
pop
lds
lss
loope
sub
mov
and
mov
es
pop
push
jae
add
repnz
sub
out
sub
aas
fisubr
or
sbb
jmp
xchg
push
repz
jle
mov
rcl
push
dec
mov
cmps
mov
pop
jge
push
mov
lods
aas
fidivr
jle
inc
jmp
stos
pop
inc
ss
(bad)
pop
push
or
aas
out
mov
mov
frstor
push
push
mov
push
jnp
dec
and
bound
lahf
xchg
mov
leave
pop
or
(bad)
loopne
pusha
clc
adc
cmp
fistp
pop
imul
adc
sbb
mov
cmp
sub
add
cld
xchg
xchg
enter
aas
loop
loop
mov
push
(bad)
jne
(bad)
push
out
js
arpl
les
push
xcrypt-ecb
cmps
int
pop
xchg
inc
xor
std
data16
aas
aas
add
jnp
push
cmp
sbb
push
inc
mov
(bad)
mov
mov
pop
adc
add
jne
mov
mov
cmps
jg
or
int3
inc
retf
and
das
pop
mov
mov
xchg
dec
cli
shl
fisttp
lahf
cs
or
stos
and
adc
inc
adc
lods
add
imul
and
in
sbb
pop
mov
repnz
sbb
dec
xor
shl
pop
aaa
fiadd
ins
test
div
aas
inc
popa
pop
pop
xlat
ss
call
sbb
cmc
(bad)
in
pop
xchg
jnp
pushf
sbb
xchg
adc
imul
mov
inc
xor
inc
repz
(bad)
repz
adc
jno
add
call
fwait
call
in
movs
and
xlat
aaa
push
sub
icebp
pop
sbb
adc
or
call
inc
cld
repz
fild
out
and
xchg
ins
dec
cmp
cmp
mov
or
pop
or
ror
test
js
xor
mov
into
cmp
xchg
movs
call
mov
out
hlt
ror
cmp
xor
(bad)
pop
outs
add
and
pop
and
xchg
out
sbb
lods
inc
push
int
dec
jae
dec
ret
std
cmps
xor
clc
arpl
les
mov
mov
aaa
mov
push
fadd
clc
sbb
or
out
dec
jecxz
add
jb
hlt
in
mov
nop
mov
inc
call
jbe
and
cmps
mov
xchg
call
jb
xlat
aam
ja
or
add
aad
cli
stos
pusha
mov
fist
xchg
out
mov
(bad)
fist
sahf
ja
push
popf
fwait
psrld
scas
leave
outs
pop
(bad)
scas
out
call
add
xchg
movs
hlt
push
xor
pusha
aam
adc
sbb
stos
xor
scas
pop
mov
pop
ret
sub
leave
in
add
cmps
mov
stos
xchg
shl
jmp
adc
test
xchg
mov
sub
arpl
js
clc
mov
jecxz
or
call
push
outs
add
dec
sub
pop
mov
add
stc
out
jmp
test
push
add
mov
(bad)
add
jb
ja
cmp
gs
sub
jns
je
mov
dec
push
or
inc
fnstsw
shr
bound
bound
je
adc
ja
dec
clc
or
mov
call
(bad)
push
ds
(bad)
(bad)
xchg
jmp
aas
movs
mov
mul
mov
fsubrp
mov
mul
retf
pop
int3
mov
cmp
xor
dec
push
dec
pop
aas
adc
inc
clc
outs
iret
cli
(bad)
imul
cwde
sbb
or
sub
bound
(bad)
out
mov
stos
mov
out
iret
push
shr
sbb
mov
dec
ror
sbb
scas
imul
int3
gs
and
cmp
mov
fcmovbe
call
loop
inc
inc
xchg
(bad)
imul
jmp
loopne
xchg
mov
arpl
fs
sbb
jmp
int
xchg
outs
je
sub
sub
out
ins
add
mov
jb
adc
or
mov
rol
mov
nop
push
cdq
or
cli
dec
xor
std
int3
jecxz
jl
sub
jnp
shl
fbstp
push
pop
sub
scas
fwait
adc
cmps
or
idiv
shl
pusha
loop
lea
test
push
call
xor
std
(bad)
fnstsw
jecxz
xor
xor
repz
cli
and
mov
test
in
ja
std
pop
sbb
mov
imul
test
test
cmp
xor
(bad)
retf
add
xchg
cmp
int
push
jle
pop
inc
fild
(bad)
dec
pop
xchg
inc
lods
cmc
mov
test
ja
jp
adc
enter
xchg
cmc
add
sbb
pushf
sbb
and
xchg
fcmovnu
dec
out
ror
pop
jmp
aaa
sahf
(bad)
mov
lds
mov
mov
addr16
adc
(bad)
ja
mov
inc
jnp
pop
or
dec
push
add
loope
cli
sub
xor
jge
and
icebp
or
sbb
arpl
out
mov
or
mov
cmp
test
les
inc
aam
mov
into
push
xor
push
mov
gs
call
inc
scas
hlt
xor
or
mov
or
pop
sbb
dec
stos
stc
and
mov
mov
shl
inc
ret
test
adc
loope
cmps
lahf
shr
popa
into
xchg
xchg
shl
les
jb
in
jno
sbb
xlat
push
jg
call
or
fisubr
cmc
dec
or
xchg
mov
lods
jmp
adc
cwde
dec
pop
adc
das
adc
mov
or
popf
jb
cmp
stos
fistp
mov
push
sub
mov
mov
mov
jne
xor
push
or
mov
in
add
jp
(bad)
jbe
cld
nop
leave
mov
xchg
mov
push
sti
mov
pop
push
mov
xchg
loop
aam
retf
adc
cli
popf
fidiv
cli
mov
adc
and
xor
dec
sbb
mov
xchg
bound
adc
mov
jno
push
add
push
sbb
iret
mov
pop
leave
mov
or
jge
push
hlt
mov
les
ins
pop
jl
mov
ins
mov
(bad)
and
mov
pop
mov
out
sbb
movs
nop
xlat
sub
(bad)
push
adc
scas
jnp
pop
sti
ss
mov
push
xor
mov
adc
ret
sub
ds
test
in
jle
shl
iret
inc
aaa
je
jg
sub
xchg
test
push
push
cmp
imul
ficom
jnp
test
movs
addr16
test
or
pushf
inc
das
retf
pop
ret
(bad)
or
(bad)
out
ins
sub
add
fidiv
xor
lock
mov
pop
rcl
packsswb
mov
les
mov
inc
add
push
ficom
mov
and
in
daa
jle
jmp
dec
(bad)
push
jge
add
retf
test
pop
loope
or
mov
(bad)
mov
jmp
xor
scas
xchg
jecxz
cmp
daa
jg
cwde
outs
or
adc
movs
push
clc
mov
xchg
sti
cmp
pop
lds
leave
xchg
cdq
push
xor
xchg
mov
cmp
mov
xor
mov
add
mov
aad
push
aad
je
loopne
retf
fwait
xchg
shl
adc
mov
lock
push
retf
xor
dec
sbb
mov
shl
in
stos
popf
icebp
sub
mov
dec
push
adc
adc
add
ins
test
pop
adc
cdq
dec
adc
mov
jae
in
push
aaa
add
mov
outs
sub
imul
idiv
jecxz
bound
push
dec
test
cmp
inc
mov
sub
clc
jnp
leave
stos
pushf
fstp
int
dec
cmp
div
adc
pusha
pop
dec
icebp
xor
jb
int3
ds
mov
add
jge
mov
push
sbb
jns
mov
in
mov
lods
lods
not
mov
push
cmc
mov
fstp
dec
xor
adc
and
neg
inc
xor
call
pop
or
push
fnstsw
popa
adc
cmps
inc
add
dec
test
ss
cli
xchg
and
jge
into
lods
xchg
sar
and
mov
and
test
enter
nop
repz
adc
inc
sub
add
test
add
mov
leave
das
ins
(bad)
ret
test
shr
(bad)
cdq
test
mov
jmp
retf
retf
xor
pop
xchg
div
pop
(bad)
int3
add
push
into
lods
arpl
jl
in
pop
sbb
loopne
data16
cmovo
push
rol
out
sub
test
push
pop
mov
ror
and
xchg
jmp
push
and
xchg
fild
or
mov
shl
arpl
cmp
xchg
jbe
adc
mov
adc
mov
push
dec
mov
cmps
mov
push
(bad)
or
ss
cmp
jbe
loopne
ret
sub
jb
sub
hlt
push
xor
dec
shr
dec
or
cmps
nop
fbstp
pop
dec
hlt
cmps
mov
inc
pop
or
mov
push
mov
out
push
adc
test
cmp
xchg
jp
jmp
je
xor
sbb
pushf
fwait
enter
hlt
and
ret
and
push
xchg
(bad)
push
xor
ret
mov
sub
mov
sub
lock
adc
cmp
loop
sbb
gs
jmp
inc
mov
(bad)
das
ins
mov
cmp
int3
xor
lds
dec
mov
pop
adc
push
mov
inc
adc
pop
dec
and
aas
add
jp
imul
dec
mov
sahf
push
call
sbb
je
fwait
jb
les
adc
pop
cmp
sar
popa
mov
movs
xchg
es
mov
push
mov
xchg
xchg
aam
pop
xchg
in
jne
nop
repz
lds
push
adc
es
loop
and
pusha
sar
jae
(bad)
pushf
push
adc
mov
arpl
dec
push
adc
in
and
mov
cmp
mov
jge
sti
mov
out
xchg
(bad)
lods
out
pop
cmp
pop
mov
adc
nop
jnp
out
fs
mov
ret
mov
fisubr
sub
lea
iret
cmps
addr16
xchg
(bad)
xchg
and
cwde
fild
pop
mov
push
adc
sbb
push
or
inc
movs
(bad)
dec
bndldx
fld
pop
xlat
xchg
sbb
pop
sbb
shr
cmps
les
jae
rol
inc
mov
jbe
or
(bad)
cmp
dec
idiv
jp
pop
je
(bad)
xor
push
test
pop
cmp
mov
cmp
iret
xor
mov
or
leave
push
sbb
mov
fnstsw
xor
jmp
call
mov
inc
and
dec
add
mov
push
gs
sub
mov
fs
adc
retf
aas
data16
sub
mov
xchg
ret
pop
sbb
xor
jg
sbb
mov
add
or
loopne
ja
xchg
outs
push
retf
xchg
loope
mov
fwait
inc
sub
inc
(bad)
in
pusha
and
jns
jecxz
aaa
jecxz
ins
pop
xlat
movs
imul
outs
xlat
cwde
pusha
das
sbb
test
and
cli
and
sub
jmp
call
mov
push
gs
(bad)
test
fild
ficomp
std
movs
jnp
cmp
add
cwde
inc
pop
(bad)
ficomp
repz
stc
mov
in
pusha
and
jl
lahf
dec
adc
jbe
out
movs
jb
loopne
inc
add
mov
jle
pop
loopne
sub
xor
cs
mov
dec
call
mov
jl
sbb
test
xchg
xchg
ror
xchg
mov
push
ficomp
xor
fild
inc
mov
push
push
das
pop
pop
jge
xor
mov
mul
js
aam
pusha
loop
jecxz
js
(bad)
cmps
inc
add
mov
xor
push
cmp
push
xchg
cs
mov
add
and
cmp
adc
outs
mov
sti
or
out
(bad)
fmul
inc
leave
mov
imul
xor
jl
xchg
data16
test
shl
retf
mov
mov
(bad)
popf
and
inc
enter
push
and
fnsave
xor
popf
push
adc
xchg
mov
cmp
ror
inc
lock
(bad)
mov
inc
pop
aas
jl
adc
in
jae
xor
cmc
test
lahf
rep
sub
jl
scas
popa
and
pop
stos
in
js
inc
fimul
mov
(bad)
std
sub
in
or
fmul
ins
fidiv
jmp
outs
sar
shl
push
sub
fadd
sbb
leave
dec
cmp
mov
pop
or
cdq
jnp
int
inc
and
stos
leave
cmp
mov
xor
ins
sti
mov
enter
mov
lahf
lds
lds
popa
adc
dec
movs
out
pop
mov
or
mov
adc
ins
(bad)
mov
test
pop
pop
cld
mov
xchg
int3
dec
sbb
movs
cmps
loopne
sbb
or
mov
push
mov
pop
pop
not
repz
mov
sub
sbb
jno
dec
fmul
retf
sbb
call
add
inc
loop
(bad)
sbb
xlat
and
xor
into
push
pop
mov
jns
jmp
pop
add
movs
mov
inc
sub
retf
test
stos
in
push
cmp
mov
sbb
jae
enter
mov
mov
add
test
sahf
mov
lds
mov
rol
cs
mov
adc
lods
jb
pop
push
sbb
mov
leave
xchg
mov
dec
das
or
xchg
je
and
jp
mov
out
pop
mov
dec
or
test
bound
push
jge
mov
jae
leave
mov
in
aad
gs
scas
outs
or
inc
add
pop
sub
call
popa
add
lahf
mov
pop
cmp
pop
sbb
cwde
inc
sub
(bad)
jae
loopne
ja
pop
pop
push
push
mov
and
(bad)
jne
sbb
repz
addr16
nop
xchg
xlat
push
or
lods
iret
lods
xchg
cld
sub
cmps
les
dec
in
push
jae
mov
sbb
in
push
or
ss
xchg
ins
sbb
test
or
cmc
and
hlt
dec
sub
hlt
xchg
js
push
jb
movs
mov
into
add
xchg
imul
subps
mov
xchg
in
adc
inc
fiadd
lods
les
mov
add
dec
loop
ins
sub
pushf
inc
xor
mov
add
lock
adc
shl
mov
xchg
(bad)
lahf
jnp
pop
jl
retf
xor
mov
test
xchg
ret
test
xchg
lods
out
sub
(bad)
xor
inc
lds
cdq
shl
mov
jmp
inc
sub
cmp
scas
xchg
sar
adc
into
add
dec
mov
lea
icebp
mov
(bad)
pushf
xchg
loope
push
or
cli
and
fadd
inc
sti
cdq
imul
xchg
inc
add
xchg
mov
add
scas
(bad)
xchg
imul
repz
rcl
xor
inc
scas
int
inc
or
not
imul
xchg
adc
call
loop
dec
sbb
pop
out
call
xchg
in
ins
ds
(bad)
pop
sbb
xchg
mov
daa
dec
mov
mov
sub
stc
pop
sbb
ror
fistp
lods
hlt
and
mov
adc
into
xor
mov
xor
pop
scas
fild
pop
(bad)
xchg
sbb
sub
je
mov
and
inc
(bad)
into
(bad)
out
push
adc
stos
mov
xchg
js
push
push
aad
sub
dec
enter
popa
daa
adc
aam
pop
rcl
lods
iret
xor
inc
mov
cli
and
lods
jmp
pop
sti
mov
rol
push
and
xchg
bound
lock
adc
int
pop
mov
push
aaa
add
mov
and
clc
daa
gs
push
push
in
mov
leave
push
adc
or
and
dec
stos
call
cmp
push
jg
xor
xchg
aad
aaa
out
xor
add
scas
mov
cwde
jp
sbb
int
nop
(bad)
sub
mov
and
repnz
mov
aas
jl
mov
mov
or
mov
ins
das
in
scas
inc
or
imul
cmp
enter
stos
dec
push
rcl
add
stos
push
or
jbe
and
xchg
cwde
fild
data16
push
pop
stc
mov
stos
in
daa
ins
loope
mov
mov
imul
cdq
fisubr
dec
cli
mov
push
gs
outs
sub
imul
loope
mov
imul
imul
div
push
iret
lods
mov
inc
cs
leave
pop
cmp
xchg
retf
push
jne
jmp
push
lock
cmp
mov
sbb
ror
sbb
in
push
cmp
mov
retf
mov
data16
jl
xchg
and
pusha
cmp
push
out
mov
mov
rol
imul
dec
sub
stos
nop
repnz
mov
jp
jecxz
add
and
mov
retf
and
mov
int
cmp
mov
je
inc
daa
pop
aaa
pop
sbb
mov
sbb
out
loope
outs
fild
je
stc
and
test
pop
xchg
push
and
pop
xlat
xchg
mov
lods
popf
hlt
and
stos
leave
call
or
movs
outs
sbb
int
mov
cld
cmp
and
aas
dec
sbb
push
adc
xchg
lds
popa
mov
cmovs
mov
push
or
cli
adc
rcl
mov
sub
xchg
inc
sbb
jns
repz
inc
xlat
xchg
jl
repnz
cs
sbb
enter
or
dec
adc
push
mov
daa
popa
ret
mov
data16
movs
jg
imul
mov
xchg
stos
mov
loop
sbb
nop
sahf
fstp
pop
fs
jmp
or
stos
mov
and
mov
icebp
das
ja
jge
scas
mov
push
adc
cdq
inc
add
mov
add
lock
pop
mov
push
adc
out
inc
push
or
xchg
imul
test
xchg
mov
je
aas
pop
sar
ficomp
or
sahf
mov
mov
sbb
scas
imul
movs
not
jne
loope
jp
cld
movs
mov
add
movs
addr16
inc
adc
push
fs
mov
sbb
ret
sub
ds
adc
pop
push
push
mov
add
add
mov
out
xchg
push
ins
cmps
in
dec
mov
loopne
inc
mov
adc
mov
js
ret
jmp
jmp
jmp
jae
icebp
and
or
add
test
lds
sbb
push
mov
inc
add
(bad)
into
and
jp
jmp
in
jo
mov
sar
sub
or
push
adc
push
jmp
ds
push
sbb
jo
loop
sub
mov
sub
lahf
mov
jmp
jp
jnp
int
jbe
mov
test
dec
and
retf
mov
mov
add
clc
sub
lahf
inc
or
jle
div
jne
cmp
and
repz
ins
sub
xchg
jno
std
mov
jbe
imul
push
dec
lods
out
dec
mov
stc
sub
(bad)
sub
les
pop
mov
(bad)
aam
fld
int3
cmp
xchg
lahf
shl
cmp
jmp
push
jbe
std
sub
enter
add
xchg
inc
add
lds
int
jb
cld
(bad)
je
or
jmp
outs
or
movs
scas
xchg
int3
aaa
je
out
push
pop
pause
js
int
ja
repz
sub
xchg
add
mov
ficom
ret
nop
dec
sub
mov
jno
rcl
and
fisttp
mov
pop
sbb
mov
cmp
pushf
out
dec
cmp
pop
mov
nop
jge
icebp
mov
(bad)
lea
pop
movs
cld
sub
jns
xchg
push
pop
jne
cmps
jle
enter
or
retf
add
stc
mov
mov
and
(bad)
fadd
bound
daa
sub
mov
das
jbe
jmp
cs
sar
inc
add
jb
xchg
dec
es
pop
lods
ficomp
push
(bad)
mov
sub
lahf
cld
and
out
jns
loope
ins
xor
pop
ss
pop
cmc
xchg
mov
dec
sub
mov
outs
sbb
repz
lds
sahf
std
cmp
inc
push
leave
mov
das
jge
mov
les
jb
fsub
popa
enter
les
clc
mov
adc
add
jns
xchg
fs
mov
fs
mov
movs
xchg
shl
inc
scas
call
sbb
stos
fs
cmp
inc
lods
idiv
push
mov
fs
pushf
popf
in
and
cwde
mov
add
mov
popf
ja
xchg
jne
loope
mov
rcl
mov
rol
pop
(bad)
xlat
and
jo
ret
xor
mov
mov
sbb
fidivr
push
(bad)
mov
not
and
pop
ins
mov
cmc
jl
push
inc
ret
nop
mov
dec
or
mov
cmps
in
push
adc
adc
arpl
cmc
xchg
mov
je
ret
test
pop
ret
loopne
ja
mov
or
mov
ret
fcom
add
ins
das
pop
lods
into
pop
aaa
or
mov
mov
push
pop
mov
cli
and
in
mov
retf
mov
xchg
ficom
inc
sbb
inc
adc
pushf
jg
cmp
popf
lahf
fadd
or
mov
inc
repz
dec
add
mov
and
dec
pop
ja
mov
adc
xchg
cdq
lock
iret
cmovl
jb
jmp
sahf
in
pop
sub
cmps
aam
nop
fist
retf
xchg
nop
ret
cs
rcl
stos
repz
aad
lds
shl
pop
sbb
jb
dec
out
mov
dec
pop
retf
add
test
sbb
sub
(bad)
mov
mov
cdq
xchg
xor
jnp
mov
popa
xor
mov
add
retf
aas
hlt
cmps
mov
into
(bad)
lods
out
ss
add
dec
(bad)
xchg
inc
xor
arpl
or
dec
mov
mov
(bad)
cmp
neg
loope
inc
sbb
adc
in
dec
add
sub
dec
mov
lods
cld
jp
jmp
jb
cmovge
test
imul
xchg
shl
jp
ret
cmp
stos
jmp
dec
sub
push
lea
cmp
mov
push
push
xlat
mov
arpl
in
scas
xchg
aam
ins
mov
adc
jl
stc
sub
fnstsw
rcl
xor
mov
cdq
sti
dec
wrmsr
push
xchg
xor
add
push
aad
gs
lock
subps
jns
mov
xor
sub
xchg
fwait
repnz
fidivr
add
fs
call
ins
and
cs
es
mov
and
xchg
xchg
repnz
cs
sti
jl
sbb
(bad)
movs
mov
push
cmps
aam
and
pop
mov
pop
(bad)
xlat
and
lds
sub
scas
addr16
xor
mov
or
and
jl
test
cmp
stc
mov
xor
sbb
xchg
inc
sbb
adc
call
mov
xor
idiv
pop
sbb
cmp
sbb
mov
test
sub
clc
stos
mov
pop
inc
mov
or
cmc
xor
mov
cmp
adc
mov
cwde
popa
cmp
int
jp
xchg
hlt
xchg
sub
cmp
fist
data16
pushf
dec
das
pusha
adc
dec
shl
adc
call
stos
call
aaa
js
sahf
xchg
(bad)
gs
sub
mov
in
imul
pop
repnz
mov
or
xchg
inc
add
xor
pop
sbb
sbb
fwait
jnp
jmp
or
or
test
and
jge
add
xchg
push
add
sbb
push
mov
sbb
ds
test
data16
push
inc
xor
enter
push
sbb
loope
movs
cmp
int3
pop
ja
sbb
xchg
fcom
ret
dec
xchg
sbb
inc
pop
cs
fiadd
arpl
shl
push
push
jge
xor
jbe
pop
sbb
mov
movs
dec
push
pop
imul
inc
sub
adc
fs
push
dec
or
adc
shl
rcl
mov
push
out
mov
jne
xor
sub
dec
sti
ror
pushf
daa
and
fild
sbb
or
and
pop
sub
add
mov
dec
pop
je
mov
stos
outs
inc
or
fcomp
sbb
dec
daa
js
fisubr
pop
jg
hlt
mov
adc
jmp
js
pop
add
mov
cmovg
fmul
dec
mov
call
movs
ds
adc
jns
cmp
xor
(bad)
(bad)
fsubr
mov
cwde
xor
xor
cs
das
aam
aad
sub
inc
cdq
loopne
icebp
add
pop
push
nop
xlat
xchg
iret
add
outs
gs
pop
push
xchg
pop
pop
add
mov
shl
xor
fsubr
mov
mov
mov
inc
push
fiadd
in
mov
push
daa
ins
pop
fmul
dec
sub
sbb
mul
arpl
add
and
iret
cld
test
dec
adc
cmp
add
out
clc
mov
pop
leave
cmp
(bad)
aas
dec
pop
out
xor
or
xchg
(bad)
mov
mov
mov
std
test
mov
(bad)
ficom
ror
(bad)
mov
out
stos
fcom
out
enter
hlt
mov
nop
repnz
aam
fld
test
mov
stc
lods
out
mov
fcomp
shl
rcl
std
cmps
(bad)
xchg
xlat
mov
xchg
aad
cmc
test
call
aam
clc
nop
rcl
movs
in
loopne
(bad)
mov
cld
mov
jmp
out
rol
call
mov
test
mov
mov
xchg
inc
mov
jne
shl
fdiv
rcl
dec
mov
xlat
xchg
enter
mov
jns
push
mov
inc
jmp
mov
jbe
xor
fld
scas
push
ins
and
das
test
enter
mov
cli
scas
call
js
sbb
sbb
inc
fdiv
or
mov
xchg
dec
xor
int3
test
adc
sub
mov
xchg
loopne
mov
xchg
imul
xchg
loope
xlat
or
and
fbld
xchg
retf
cwde
push
dec
add
mov
(bad)
daa
adc
dec
scas
cmp
sti
fidivr
push
add
xchg
cmc
inc
xchg
pop
pop
jmp
ret
jnp
cmp
xor
sbb
scas
sub
out
xchg
or
adc
loope
xchg
mov
and
inc
xor
ret
mov
aad
mov
dec
push
sub
int3
out
pop
(bad)
lea
clc
mov
xor
pop
repz
mov
fwait
jns
das
or
loopne
test
jns
pop
div
mov
aas
rcl
mov
xor
inc
mov
es
xor
loopne
push
sahf
or
imul
(bad)
scas
push
pop
or
(bad)
fdivr
fld
ss
ins
push
push
adc
sbb
in
or
mov
lods
push
push
sbb
pop
cmp
out
sti
mov
xchg
fist
stos
dec
(bad)
fdivr
jbe
call
(bad)
mov
xchg
cmp
cdq
fimul
jae
push
addr16
sbb
and
mov
push
adc
not
fisub
popa
push
xlat
call
xlat
jl
cs
sti
loop
dec
jmp
les
push
mov
arpl
cli
fist
idiv
mov
sub
mov
push
ret
lock
je
sub
mov
fdivr
movs
aas
fwait
jmp
imul
fnstenv
aas
fs
xlat
xchg
shl
pushf
fiadd
cmps
add
rcl
mov
in
iret
mov
movq
mov
or
pop
jmp
mov
pop
mov
test
mov
in
jo
jecxz
test
aas
xor
jno
in
lods
out
sbb
jo
cmovno
cmps
div
dec
test
scas
mul
fisubr
pop
push
cmps
div
mov
push
pop
pushf
retf
or
push
popa
sub
clc
pushf
(bad)
stos
clc
mov
sbb
leave
mov
in
mov
xor
(bad)
mov
jmp
(bad)
pop
xchg
ret
sub
icebp
mov
mov
mov
adc
jmp
fmul
leave
nop
mov
jge
daa
and
iret
(bad)
retf
xor
xchg
mov
mov
pop
adc
push
inc
sub
(bad)
mov
dec
stos
sti
mov
imul
mov
dec
es
lock
loop
xchg
std
cmp
rcl
inc
or
test
out
stos
loopne
lock
in
mov
loopne
loop
fmul
retf
xchg
aam
(bad)
mov
shl
stc
popf
rol
inc
sub
dec
or
data16
ja
pop
xor
pop
push
jg
pop
sbb
push
and
dec
or
jno
pop
pop
push
or
xor
outs
and
cmp
adc
rol
pushf
fidivr
stc
mov
mov
mov
into
mov
xchg
ror
test
mov
ins
sub
inc
add
mov
cdq
add
aad
or
(bad)
mov
ins
add
xor
sbb
sub
or
sbb
(bad)
mov
mov
mov
add
dec
mov
outs
das
(bad)
std
mov
push
test
inc
xor
cmp
mov
adc
jecxz
cwde
call
add
stos
pop
dec
sbb
ficom
lods
jne
sub
mov
fadd
sbb
fdivr
(bad)
pop
sub
jmp
loop
jge
sub
push
jle
(bad)
rol
jns
adc
arpl
adc
dec
loope
xchg
fcom
push
sbb
imul
rcl
add
sub
stos
movs
jg
sbb
lock
xchg
jg
fld
xor
lahf
les
mov
xor
test
xchg
pop
and
cmp
inc
add
lock
sub
out
test
ret
adc
adc
std
call
push
push
mov
imul
jg
loope
push
iret
mov
cs
addr16
sub
ror
add
push
adc
bound
jno
mov
mov
pop
jl
push
inc
iret
mov
test
fcom
jp
cmp
leave
aas
js
in
adc
cmp
iret
vpcomq
mov
cmps
push
cmp
leave
test
adc
pop
cmp
jb
mov
out
stos
jecxz
lods
out
mov
xchg
out
and
ds
adc
(bad)
fcom
jns
sbb
or
or
sbb
scas
scas
jbe
cmp
lods
inc
push
jle
out
clc
popf
fwait
push
mov
int3
push
inc
aaa
inc
cmps
add
ja
ins
ss
jecxz
lods
ja
pop
pop
icebp
ficomp
mov
push
xor
pop
sbb
leave
mov
inc
nop
loopne
call
fwait
adc
repnz
or
pop
pusha
and
scas
sbb
sbb
or
cmp
cmp
in
sahf
jge
cmovg
cwde
rcr
add
scas
iret
mov
pop
jnp
push
jg
fs
test
xchg
stc
mov
popa
add
mov
call
xchg
shr
mov
adc
outs
push
xor
clc
mov
or
pop
imul
add
mov
mov
and
push
jb
fstp
mov
jns
push
adc
mov
sbb
ret
mov
mov
sbb
pop
bound
jne
(bad)
int
rol
inc
add
shl
test
push
popa
jp
pop
adc
jmp
mov
retf
sbb
retf
inc
and
pop
jecxz
mov
mov
xchg
js
fldcw
(bad)
lahf
(bad)
mov
or
push
adc
xor
pusha
and
outs
and
shl
lods
jmp
mov
lock
mov
fwait
cli
call
shl
mov
cmps
into
add
sti
stos
jmp
jmp
jmp
xor
call
mov
ficomp
mov
out
into
(bad)
fcom
fadd
jle
je
ins
sub
jge
pop
sbb
push
inc
push
dec
pop
imul
jl
push
adc
les
jmp
nop
jecxz
mov
mov
xchg
push
mov
or
adc
rcr
pop
inc
or
das
imul
xchg
push
jl
in
jecxz
push
js
loopne
enter
or
shr
sub
sar
fist
jae
arpl
fisubr
jl
loop
retf
cmp
ret
mov
mov
inc
sub
stos
test
adc
cmp
sub
test
lods
inc
push
adc
adc
hlt
cld
mov
adc
fcomp
int3
cli
mov
push
dec
xor
mov
push
pop
add
xchg
jo
add
mov
(bad)
shl
iret
int
xchg
dec
inc
das
and
jmp
in
outs
or
retf
in
mov
lods
or
fstp
add
or
xor
cmps
inc
inc
and
mov
psubd
nop
mov
push
shl
mov
aas
xchg
fist
inc
adc
fucomi
ret
inc
push
or
es
hlt
ds
mov
call
loopne
pusha
adc
(bad)
repz
xor
sbb
hlt
cmc
int
pop
pop
sbb
repz
push
dec
dec
add
push
retf
ror
mov
sbb
dec
xchg
ret
adc
or
dec
das
push
and
sbb
cmp
test
add
iret
lods
int
cmps
les
or
psubusb
sub
push
adc
push
mov
mov
cdq
cmp
ss
pop
inc
add
(bad)
shl
mov
sub
pop
xor
ins
pop
xor
sbb
or
push
dec
sbb
sbb
jmp
mov
retf
jbe
push
xor
retf
mov
loope
stos
out
jnp
or
sub
push
pusha
cmp
loop
out
dec
push
xor
and
enter
scas
jbe
sub
lds
lods
imul
scas
ds
add
pop
test
pop
push
pop
pop
out
test
add
adc
aaa
cdq
cli
es
(bad)
fld
mov
xchg
xchg
sbb
jmp
jl
cmp
shl
sbb
pop
jns
sub
(bad)
xlat
mov
movs
jp
call
aam
jecxz
popa
and
popa
pop
or
std
xchg
fdivr
cmps
stc
lods
inc
pop
ds
shl
dec
xchg
std
mov
cmp
pop
popa
mov
fdiv
cmc
adc
mov
xchg
call
sbb
mov
xchg
dec
cmp
mov
mov
call
dec
add
into
test
cmp
adc
pop
pop
sbb
sti
mov
loope
clc
mov
xchg
les
inc
(bad)
mul
dec
cmp
rol
mov
xchg
ds
call
sar
xchg
repz
xchg
sbb
lock
add
mov
stos
pushf
pop
xor
and
xor
cmp
loop
std
test
shl
repnz
lahf
loope
xlat
add
enter
rol
loop
out
test
mov
cwde
fisubr
aam
hlt
mov
(bad)
mov
cmp
mov
test
mov
into
(bad)
out
out
out
lds
jmp
repz
mov
xchg
repnz
xchg
fnsave
out
lahf
mov
ret
stos
call
mov
ret
lods
out
mov
div
in
mov
mov
xchg
out
dec
test
adc
xor
(bad)
pop
jnp
sub
sti
mov
xchg
jp
fld
sub
jmp
mov
cmp
sub
in
fstp
cmc
(bad)
cmps
mul
popf
repz
jl
fs
cmps
out
jae
data16
xchg
pop
sub
dec
scas
int3
cmp
ja
(bad)
movs
icebp
mov
jmp
jle
add
in
loope
xchg
aam
jae
and
push
dec
sub
jno
addr16
mov
lds
(bad)
lock
xor
fidiv
and
mov
mov
stos
call
mov
retf
sti
lods
(bad)
xor
push
out
in
ret
scas
cwde
cmp
xor
push
push
or
mov
scas
in
xchg
push
inc
jmp
and
dec
int
stos
jmp
mov
mov
push
(bad)
adc
enter
add
stos
pop
push
leave
out
movs
movs
push
push
jle
jmp
inc
and
mov
leave
aam
shl
mov
dec
or
cld
fldcw
sub
mov
and
retf
xchg
mov
xor
or
lahf
fisubr
retf
inc
pop
sbb
add
mov
sbb
push
sub
das
dec
or
mov
jae
retf
rcl
jl
call
ins
fsub
out
lahf
mov
jge
das
push
adc
fsubrp
cmp
dec
fwait
lds
test
dec
int3
or
mov
les
scas
pop
push
or
lock
out
retf
pop
push
push
jnp
addr16
lods
les
addr16
cdq
retf
into
cmps
pop
cmp
mov
jne
push
jnp
inc
xor
push
push
sub
in
movs
mov
push
inc
and
into
ror
clc
(bad)
adc
or
in
(bad)
rcl
(bad)
fsubr
jmp
inc
mov
movs
cmc
test
push
fcmovbe
mov
push
mov
xchg
push
es
cld
into
mov
xchg
xchg
sbb
(bad)
sahf
jp
pop
push
out
call
xlat
mov
inc
xor
(bad)
daa
repnz
mov
dec
pop
or
shr
lea
add
in
nop
jnp
and
push
pop
cmp
pushf
repnz
fcomi
fstp
jle
pop
ss
dec
push
jb
js
mov
mov
sbb
push
push
popa
or
mov
cmps
jno
ins
and
mov
jge
aam
jmp
sub
xor
dec
sahf
(bad)
mov
in
mov
mov
into
fistp
mov
dec
add
call
mov
jl
adc
lds
and
imul
mov
pop
xor
in
into
scas
rcl
test
dec
xchg
cmp
or
sub
jecxz
dec
or
in
mov
aaa
int3
mov
xchg
push
jl
cli
xor
in
xor
cmp
push
mov
scas
call
cmp
cmp
imul
push
pop
adc
add
cs
adc
push
pop
imul
push
or
xor
and
cmovle
cdq
fld
scas
out
mov
xchg
cmps
mov
retf
xchg
rol
call
and
mov
mov
lds
retf
xchg
repz
nop
fdiv
out
lahf
mov
ret
lods
loopne
out
out
ret
lods
rcl
adc
push
sbb
cwde
int3
and
clc
mov
sub
ror
out
ret
cmp
aad
mov
js
inc
fild
inc
cld
add
xor
cli
mov
adc
mov
mov
loop
mov
stos
push
or
xor
pop
push
cmp
retf
int3
pcmpgtd
dec
fisubr
pop
ja
adc
out
sbb
cmp
into
mov
lea
gs
mov
xchg
test
ds
lock
and
xor
arpl
repz
pop
sub
enter
test
lods
addr16
pop
jno
add
or
mov
xchg
xchg
jecxz
int3
xor
sub
inc
push
loopne
xchg
sub
inc
sub
ret
xchg
and
push
iret
add
xor
and
ror
xor
sbb
repnz
fcomip
cmp
iret
pushf
mov
add
ror
scas
mov
mov
gs
test
loopne
sbb
sti
push
xchg
fisub
push
cmp
sbb
in
xchg
inc
jns
dec
mov
pop
pop
xchg
jo
or
xchg
mov
popf
loope
fsubrp
scas
mov
mov
jo
or
mov
das
push
adc
mov
or
stc
cmps
(bad)
cld
cmps
clc
popf
add
aaa
lods
adc
fcmovnbe
(bad)
sar
les
lods
out
mov
cmps
ror
mov
pop
cmp
retf
in
xor
mov
jae
(bad)
pusha
mov
sbb
jmp
xlat
push
dec
mov
inc
adc
lods
(bad)
mov
or
daa
cwde
int
mov
cmp
pop
dec
xor
enter
cmp
sbb
popa
pop
add
test
mov
jae
push
or
in
lods
fimul
add
mov
iret
icebp
test
push
jb
xor
adc
and
in
cwde
jle
and
and
jecxz
rol
mov
pushf
icebp
dec
inc
dec
sub
xchg
call
shl
mov
call
shl
fdiv
mov
mov
jle
dec
stos
push
jo
adc
mov
jg
int3
mov
xor
mov
push
jecxz
iret
mov
push
imul
push
or
imul
add
xchg
jge
leave
xchg
cld
mov
lahf
xor
addr16
mov
pop
xchg
cld
mov
or
jp
add
scas
sbb
shl
jmp
cli
mov
stc
mov
lds
fidiv
js
(bad)
mov
sub
and
ret
sti
add
dec
outs
push
xor
sahf
int
aam
xchg
int3
mov
jmp
fisub
out
jno
repz
mov
xchg
neg
das
outs
adc
fcomp
cwde
(bad)
dec
xor
sbb
out
cmp
add
inc
in
sub
mov
or
or
pop
sbb
push
push
outs
ds
jg
jno
push
and
push
jg
sbb
dec
add
pusha
add
and
imul
dec
pop
pop
cmp
push
push
adc
jle
push
aaa
jb
jae
gs
push
push
inc
pop
sub
adc
jp
jp
push
and
inc
push
ja
sub
sub
(bad)
(bad)
mov
xor
ret
popf
rol
hlt
test
loopne
ret
movs
leave
sbb
in
rcl
in
out
mov
lahf
fistp
hlt
mov
cmc
mov
call
mov
sbb
and
mov
lahf
lods
fimul
jg
data16
outs
add
push
xor
iret
mov
mov
(bad)
pushf
lds
retf
pop
or
jb
push
add
lods
mov
pop
sub
mov
into
mov
lods
leave
mov
bound
inc
hlt
and
pop
sbb
ins
sbb
inc
mov
sub
repz
std
mov
sti
add
push
sub
pop
sbb
jmp
int
mov
ja
xchg
cmc
mov
xor
movs
jecxz
fstp
aaa
repz
mov
push
jnp
jno
jno
lods
out
jle
pusha
test
cwde
rcl
xchg
icebp
mov
cld
pop
cli
fs
push
cli
cwde
(bad)
movs
loop
cmp
pop
neg
pusha
sbb
pop
sbb
sti
mov
test
mov
out
int3
stos
rcr
fild
lds
out
scas
aam
adc
ret
imul
mov
test
gs
push
jns
outs
push
idiv
push
out
pop
in
mov
pusha
or
imul
jmp
mov
aaa
push
in
pushf
fimul
mov
xor
jl
jae
mov
scas
neg
jl
jge
rcr
jne
sbb
push
out
(bad)
add
popa
xor
push
rcr
shl
push
or
inc
sbb
inc
and
sbb
js
xchg
retf
or
push
or
mov
aam
sahf
int3
call
sbb
and
push
mov
add
iret
or
dec
lds
sahf
rcl
std
inc
rcl
ret
mov
cdq
cmps
ja
mov
xchg
jp
jbe
(bad)
push
rcl
cmc
mov
gs
sbb
imul
ror
or
iret
xchg
out
test
jb
(bad)
or
and
pop
push
retf
jge
pop
xor
xlat
movs
out
dec
fwait
aad
lock
inc
add
hlt
jg
push
ret
iret
ds
test
fwait
lods
xchg
mov
xchg
jae
stc
call
movs
outs
jmp
dec
add
or
mov
xchg
mov
sti
push
rcr
hlt
pop
scas
mov
in
pop
cmp
in
jbe
test
cwde
sar
sbb
mov
sahf
push
leave
stos
js
leave
mov
cwde
add
cs
mov
push
xor
js
pop
(bad)
fidivr
mov
fild
imul
gs
call
add
dec
push
inc
add
or
fimul
cmc
test
cmps
shl
call
cdq
sbb
or
pushf
lock
push
cmps
hlt
mov
add
ja
je
sub
jae
fist
in
fistp
(bad)
add
iret
mov
inc
sahf
dec
in
shl
dec
cmp
xor
pop
pop
in
std
inc
stc
dec
sub
jmp
pop
xor
aad
jae
and
arpl
dec
or
push
jmp
lods
xchg
dec
and
lds
(bad)
xchg
fsub
xchg
fld
and
pop
in
stos
retf
int3
xchg
loop
ficomp
dec
push
loopne
or
cmp
and
xchg
cli
jno
dec
add
xor
sub
shr
adc
lock
mov
sbb
loop
ret
jae
sub
dec
(bad)
imul
iret
mov
inc
out
les
xchg
enter
fnstsw
js
dec
mov
add
xchg
dec
sub
mov
xchg
dec
sbb
jg
imul
xor
sbb
cmp
idiv
sbb
add
mov
xchg
jbe
cli
mov
pop
(bad)
nop
rol
jmp
cld
ins
pusha
and
rcl
arpl
lahf
cmps
sar
sub
shr
and
or
jg
js
je
(bad)
fistp
pop
idiv
pop
in
mov
jnp
mov
push
ins
and
clc
mov
jb
and
mov
mov
adc
ins
xor
in
scas
cmc
imul
out
leave
mov
mov
ret
and
mov
cld
pop
pop
je
jmp
jo
inc
or
push
cmps
cmc
mov
(bad)
sar
dec
cmp
pusha
cmp
nop
cmp
push
sbb
push
add
xor
sub
pop
cmc
xchg
xchg
leave
nop
stos
mov
xchg
shl
ret
push
sbb
sbb
and
cld
scas
outs
sbb
jnp
mov
xchg
inc
aam
popa
es
cwde
and
clc
mov
add
pop
enter
add
or
pop
cmp
pop
inc
adc
mov
xchg
jl
dec
mov
and
inc
xor
xchg
fild
imul
cmp
dec
push
enter
cld
jae
xchg
pop
sbb
sbb
dec
sub
inc
mov
mov
in
enter
cs
add
out
inc
cmc
cmps
in
leave
mov
pop
or
pop
inc
daa
inc
in
stos
loope
sti
pop
push
sbb
jmp
lods
repz
pusha
xor
inc
add
pusha
adc
jne
push
cmc
mov
cmps
fild
sbb
test
movs
aad
xlat
push
xor
and
add
(bad)
xchg
sar
cmps
mov
cmps
(bad)
push
lahf
lods
out
and
cdq
fdivr
inc
pop
sub
add
and
xchg
aam
in
lds
iret
and
push
xor
jno
arpl
ret
scas
popf
shl
pop
inc
and
ret
jne
shl
imul
ror
mov
push
scas
shl
icebp
(bad)
fisttp
pop
aas
push
sbb
out
in
retf
test
mov
xor
or
push
les
or
jns
leave
add
dec
cmp
add
out
xchg
mov
mov
pop
ins
sbb
fmul
mov
stos
movs
cmc
ins
sub
push
inc
loop
jnp
(bad)
mov
add
cwde
rcr
inc
cs
rcr
xchg
scas
fisubr
cli
mov
cli
xchg
mov
test
pop
xor
and
mov
test
loop
out
icebp
xchg
shl
jnp
mov
cld
(bad)
rol
push
dec
or
dec
and
daa
pop
and
add
add
push
and
clc
mov
adc
pop
aaa
inc
leave
nop
xchg
push
or
arpl
inc
or
and
ins
ds
and
inc
or
cmp
push
adc
mov
sahf
jmp
mov
leave
jae
ins
lock
xchg
xlat
popa
or
neg
rcr
push
sbb
jo
xor
call
xchg
pusha
icebp
mov
cdq
lock
not
imul
retf
xchg
stc
mov
lods
aad
mov
int
int
cmp
(bad)
sar
push
jmp
pop
cdq
cmps
lds
lds
cmps
jecxz
mov
icebp
stos
leave
or
mov
mov
and
mov
xor
loope
into
jne
enter
lods
fstp
sub
daa
out
hlt
mov
into
mov
lahf
dec
mov
shl
in
aam
orps
mov
push
je
jnp
sbb
jns
cmp
and
or
cmp
and
in
xchg
cwde
jmp
fild
into
lods
iret
mov
and
push
dec
rcl
jl
push
rcr
cdq
retf
lahf
imul
out
pusha
scas
clc
mov
pop
xor
rol
mov
inc
fsub
out
loop
rcr
pop
push
in
(bad)
lods
out
(bad)
ret
mov
outs
xor
repz
pop
sbb
push
and
push
sbb
jno
pop
or
or
ds
mov
loop
scas
in
scas
lock
pop
ret
dec
cs
retf
xchg
loop
fld
cmps
ror
mov
add
or
push
jns
jne
out
push
pop
cmp
addr16
sub
inc
and
loope
aam
int
inc
add
loop
test
test
repz
stos
(bad)
js
cdq
cmc
(bad)
jnp
aaa
je
pop
cmp
dec
movq
pushf
(bad)
movs
std
sar
xchg
in
xchg
fld
stos
les
and
rol
or
test
sub
and
dec
and
mov
(bad)
cmps
int
sti
mov
xchg
xchg
fsubr
or
jae
and
test
ss
dec
jecxz
aam
pop
jge
and
(bad)
call
mov
cmc
mov
scas
fidivr
imul
mov
add
and
sar
adc
pop
lock
cwde
stc
mov
stc
test
sub
mov
mov
sahf
(bad)
xor
dec
adc
cmp
clc
sub
adc
sub
and
mov
dec
cmp
movaps
pop
add
sub
dec
inc
adc
inc
sbb
dec
or
sbb
jmp
js
pop
push
mov
psllw
(bad)
mov
mov
and
push
xor
xor
or
push
jno
imul
out
(bad)
xchg
(bad)
mov
xchg
mov
cdq
sti
mov
lds
push
and
push
ds
mov
test
sti
mov
mov
rcr
xchg
mov
test
jmp
rol
cdq
(bad)
mov
rol
mov
sbb
fsubr
(bad)
mov
scas
in
xchg
repnz
or
dec
ds
push
adc
mov
out
mov
mov
xchg
leave
mov
jge
pop
adc
out
cmc
xor
adc
add
stos
enter
sti
or
std
mov
mov
hlt
mov
rcr
jl
adc
push
arpl
sar
mov
in
jmp
cmp
es
adc
pushf
fist
movs
out
pushf
jb
pop
add
shr
pop
push
inc
popf
ds
sbb
sbb
imul
aam
mov
lods
cmc
jo
ret
or
inc
xchg
aas
pop
cmp
dec
or
mov
in
push
(bad)
push
cmp
sahf
ret
ror
out
cdq
fdivr
clc
xchg
out
sbb
cmp
sbb
adc
pushf
inc
xor
xchg
(bad)
xchg
rol
adc
dec
push
(bad)
jmp
mov
inc
xor
ss
stc
mov
xor
(bad)
into
lods
iret
mov
test
cmp
outs
sbb
pop
ret
mov
and
mov
xchg
jo
sti
cdq
movs
loopne
addr16
xor
xor
xor
in
(bad)
fwait
(bad)
pop
jp
jae
sbb
int3
xor
dec
test
rcr
mul
push
lds
sub
inc
and
mov
lea
pop
xor
push
bts
or
adc
add
push
pop
add
call
pop
and
dec
or
cwde
in
mov
fiadd
mov
ror
xchg
jae
retf
mov
cli
inc
jmp
mov
nop
and
ror
(bad)
ficom
and
inc
pop
pop
push
dec
mov
and
call
dec
sub
pop
popf
xor
imul
sub
movs
ins
mov
mov
fucomp
mov
mov
jle
aad
push
vmread
je
in
out
ret
je
mov
cmp
inc
pshufw
sti
xchg
xlat
mov
cmc
bound
data16
arpl
arpl
ins
ficomp
das
jb
push
push
push
dec
pop
add
push
retf
mov
(bad)
mov
popa
adc
imul
stos
mov
(bad)
popa
or
les
mov
xchg
fs
pushf
(bad)
mov
or
arpl
xchg
icebp
(bad)
in
rcl
rol
sbb
dec
mov
push
ds
mov
mov
add
stc
push
inc
cmovo
les
ficomp
shl
aad
leave
popa
fist
je
and
xor
pop
dec
jmp
call
aad
into
jno
imul
out
lea
inc
push
loop
loope
mov
xor
aam
pop
pop
adc
in
in
call
test
test
add
xor
pop
adc
in
mov
xchg
in
movs
repnz
or
pop
in
push
xor
xchg
ja
push
add
or
in
retf
xchg
into
xchg
fsubr
and
movs
jecxz
rcl
xchg
leave
sub
ss
movs
pop
sbb
inc
add
and
popa
or
(bad)
cdq
fisubr
fistp
add
enter
jb
inc
or
inc
adc
pop
pop
jle
xchg
enter
mov
cdq
cld
and
sbb
add
cdq
ret
mov
in
cdq
movs
test
gs
jne
cmp
push
adc
mov
mov
iret
push
imul
mov
or
mov
xchg
lods
jmp
sbb
push
in
cmp
mov
sbb
adc
ss
leave
xor
dec
in
cmp
es
add
jb
pop
das
ja
jb
fst
fidiv
jo
jnp
dec
in
out
lahf
fcom
inc
adc
sti
js
push
sbb
into
mov
xchg
fucomp
dec
shl
sbb
cmp
push
add
dec
or
cmp
mov
mov
sar
jp
cmp
push
push
push
and
and
push
adc
mov
sub
push
les
ins
ds
push
lds
push
sbb
inc
add
loope
iret
mov
dec
(bad)
push
add
movs
leave
and
das
js
pop
mov
scas
repz
in
cmc
add
adc
out
lahf
inc
push
pop
cmp
xchg
ror
jge
and
sahf
(bad)
(bad)
movs
out
cmp
sub
push
idiv
ins
subps
jl
arpl
push
fs
push
sbb
jb
mov
(bad)
add
(bad)
mov
test
pusha
adc
inc
or
push
sbb
adc
dec
cmp
inc
jmp
push
adc
mov
sub
push
js
and
int3
mov
sbb
pop
pop
push
push
inc
rol
xor
add
es
cmps
cld
mov
sbb
aas
push
mov
sbb
pop
sbb
inc
sbb
mov
lods
retf
pop
lods
cmc
xchg
retf
and
daa
ja
push
adc
dec
cmp
jmp
dec
dec
jecxz
mov
jnp
jl
sub
inc
add
dec
xor
dec
push
pop
cmp
xor
ror
int
pop
cmp
stos
mul
mov
cmc
sub
stos
fistp
les
push
and
out
icebp
pushf
popa
pop
sbb
imul
mov
(bad)
imul
cmp
je
or
or
mov
mov
fst
subps
inc
cmp
adc
cli
test
scas
mul
push
dec
lea
dec
xor
stc
mov
xchg
in
push
jnp
push
adc
enter
xchg
sar
xor
cmp
sar
dec
sbb
jecxz
ror
cmps
int
dec
jne
xchg
fisubr
test
adc
cmp
test
mov
rcr
leave
add
inc
repnz
dec
adc
jnp
cwde
jle
dec
and
cmp
adc
add
imul
cmp
add
pop
or
add
sbb
cdq
aad
stc
aas
xlat
mov
lods
int3
xchg
jns
jbe
pop
inc
sbb
push
adc
inc
add
ret
mov
jb
and
ins
xor
sbb
push
dec
dec
cld
cdq
enter
lahf
mov
ret
mov
pop
mov
mov
rol
dec
das
push
loop
xchg
cld
mov
call
mov
ins
push
pop
in
repnz
mov
mov
mov
test
xchg
retf
push
cmovl
sub
test
outs
cmps
xor
dec
sbb
dec
xor
xlat
mov
test
cdq
stos
int
push
out
fsubr
gs
movs
lds
scas
cli
sbb
and
dec
or
push
loop
shl
jno
xchg
int
(bad)
cwde
jle
inc
or
jmp
mov
pop
xor
xor
fisub
outs
hlt
and
dec
jecxz
fisubr
repnz
(bad)
loope
movs
sti
mov
mov
and
out
js
inc
sbb
sub
xor
and
push
or
repz
in
mov
xchg
(bad)
ja
push
sbb
cmp
pop
jmp
mov
and
mov
dec
aas
inc
not
push
pop
add
neg
jg
js
dec
mov
fwait
mov
sbb
inc
frstor
bound
and
out
mov
xchg
scas
leave
sub
pop
sub
ds
jle
xchg
cli
mov
movs
scas
arpl
dec
sub
shl
sbb
dec
add
jp
std
jo
push
push
bound
xor
test
push
cmp
push
or
rcr
add
fwait
or
gs
ss
add
jge
and
ficom
dec
or
and
aam
cmc
sbb
dec
sub
push
retf
stos
fwait
ins
xor
out
(bad)
mov
mov
(bad)
mov
iret
or
movs
in
dec
mov
add
push
cmp
add
mov
mov
fidivr
jle
dec
daa
push
out
outs
mov
cwde
mov
nop
fld
adc
inc
add
pop
cmp
cmps
fstp
mov
aam
mov
and
adc
add
and
and
xor
inc
cmp
push
and
add
and
sub
jb
pop
add
out
dec
and
and
dec
out
xchg
fnstenv
cmp
mov
mov
out
icebp
pushf
mov
mov
cs
add
cmp
ror
fild
mov
xor
(bad)
shl
das
push
clc
mov
mov
dec
pop
je
retf
cli
mov
jb
inc
ret
jnp
imul
cmps
div
xchg
fld
inc
(bad)
in
scas
fcomp
retf
cmp
xchg
xor
jp
inc
adc
(bad)
mov
mov
xor
in
mov
or
xchg
jecxz
bound
inc
mov
pushf
sti
sahf
jmp
(bad)
mov
clc
outs
pop
sbb
jl
ins
xor
pop
fadd
cmps
loope
in
clc
mov
sti
mov
xor
push
or
shl
dec
ror
push
ret
xchg
pop
or
or
or
jno
inc
xor
push
push
jne
jae
jg
nop
ret
sub
retf
(bad)
mov
movs
(bad)
xchg
out
fisttp
add
mov
fistp
int
out
push
pop
push
push
add
inc
push
adc
inc
add
inc
add
push
adc
jb
push
adc
fnstcw
stc
push
add
aaa
jno
jge
popa
es
dec
cmp
lock
in
(bad)
popf
lock
frstor
inc
pop
and
push
lahf
jmp
cmp
fist
push
or
push
cmp
and
inc
sbb
mov
xchg
jl
push
adc
mov
cwde
pushf
sti
mov
ins
xchg
in
aam
xchg
ret
add
jns
pop
sti
mov
xor
sbb
popa
add
gs
adc
mov
lods
jle
pop
sub
mov
mov
pop
adc
pop
push
das
xor
ret
(bad)
lds
mov
bound
sbb
mov
adc
add
jle
repz
rol
popf
movs
lds
jnp
daa
daa
dec
call
clc
mov
mov
idiv
xlat
data16
xchg
push
add
imul
mov
sbb
sar
mov
mov
mov
bound
xor
inc
mul
cmp
pop
cmp
loopne
daa
xchg
jmp
xor
mov
mov
jl
push
clc
(bad)
jnp
daa
push
and
dec
add
(bad)
sbb
mov
or
or
adc
jno
mov
pop
inc
fstp
xchg
mov
gs
mov
cld
movs
pop
das
sbb
es
xlat
rol
lods
xor
movs
cmps
pop
out
mov
shl
hlt
push
dec
jmp
pop
mov
sbb
cmps
jae
nop
and
ds
shr
rcr
sar
xchg
pop
xchg
scas
inc
test
push
addr16
pop
pop
mov
jmp
ror
and
push
hlt
pusha
std
pop
mov
int
call
arpl
movs
jnp
sti
cwde
dec
xchg
mov
add
sub
out
mov
std
mov
bound
stc
or
xchg
das
cmp
push
mov
dec
and
in
push
nop
sar
fimul
adc
inc
call
ds
dec
and
std
fistp
xchg
push
mov
out
lock
cmp
adc
rcr
push
push
inc
imul
imul
je
mov
leave
(bad)
push
push
jmp
or
xor
cdq
sbb
out
retf
sbb
loope
dec
imul
call
push
fsubr
sbb
ins
mov
out
sahf
xchg
fst
mov
jmp
mov
xchg
mov
daa
inc
pop
hlt
(bad)
cld
call
in
loop
out
jmp
xor
push
push
shl
ret
cmp
push
and
lods
in
mov
dec
fild
inc
into
pop
out
in
in
in
add
sbb
leave
adc
ins
rol
mov
imul
iret
jmp
add
inc
cmp
add
fisubr
mov
in
sub
dec
push
mov
and
das
cmp
popa
xlat
adc
in
(bad)
cmp
fistp
enter
push
sahf
std
(bad)
mov
or
bound
call
lock
push
stos
(bad)
sub
mov
call
sbb
arpl
retf
stos
xchg
jl
pop
sub
pop
inc
out
bound
cmp
mov
cmps
movs
push
cdq
cli
push
ds
ja
inc
cmp
xor
pop
sbb
retf
mov
inc
jecxz
xchg
add
dec
cld
jmp
imul
es
cmp
cwde
mov
push
shl
adc
xchg
ret
rcl
loop
mov
adc
inc
push
push
jmp
mov
jb
add
xchg
cli
fs
or
dec
and
mov
jg
mov
cmp
out
add
fsubr
retf
mov
pop
icebp
js
push
ret
dec
xchg
xor
mov
dec
pop
mov
jae
or
jg
xor
or
sbb
inc
sbb
add
mov
test
mov
mov
int
jge
daa
aam
dec
hlt
xchg
dec
jbe
lea
xor
(bad)
adc
test
cmp
mov
in
xor
adc
icebp
cdq
inc
and
dec
jl
sub
std
sahf
cld
into
scas
xchg
sbb
mov
mov
enter
repnz
xchg
dec
sub
das
xlat
push
xor
add
imul
dec
mov
cmp
int
ins
or
mov
jbe
mov
aas
(bad)
fcom
pop
cs
pushf
xor
mov
mov
aam
in
in
fild
pop
std
movs
dec
lds
cmps
add
aas
sbb
gs
cdq
pop
mov
sub
or
imul
into
(bad)
sbb
add
sub
mov
test
dec
or
xchg
or
mov
mov
dec
push
cmp
lock
or
imul
test
sbb
aas
mov
mov
movs
xlat
arpl
sub
jbe
mov
push
das
jl
sti
jno
push
hlt
outs
imul
xchg
in
mov
(bad)
shr
mov
or
bound
stc
bound
gs
fidiv
fs
dec
mov
pop
sub
xchg
mov
pop
repz
test
(bad)
in
adc
sahf
pop
jge
mov
popa
inc
popa
push
jecxz
mov
bound
jbe
(bad)
sub
adc
shr
movs
xchg
add
dec
shl
data16
xor
mov
cwde
jge
ficomp
movs
dec
cmp
fidivr
mov
addr16
arpl
mov
(bad)
sbb
test
imul
push
cmps
(bad)
push
push
std
in
lock
mov
xor
pop
dec
and
inc
mov
or
pop
imul
xor
add
jno
retf
mov
adc
adc
xchg
and
sar
or
jg
clc
sbb
mov
sub
jbe
addr16
xor
pusha
xor
mov
sbb
inc
test
mov
mov
xchg
addr16
add
nop
sar
push
jecxz
xchg
mov
mov
mov
lods
inc
mov
and
ss
sbb
push
movs
mov
adc
in
call
test
mov
and
ret
cmp
lods
xchg
dec
push
sub
mov
cwde
mov
adc
shl
mul
or
xlat
clc
(bad)
shr
jno
pusha
cmp
and
call
sub
or
fiadd
cs
inc
cmp
inc
mov
loopne
or
push
add
xchg
cmp
dec
adc
and
stc
xor
sti
add
jno
or
gs
in
xor
xchg
push
jg
stc
or
dec
loope
cli
int
test
ins
arpl
cmps
dec
cmp
jno
test
test
or
in
push
push
popa
fmul
repnz
mov
in
jnp
push
shr
pop
adc
cmp
sub
shr
lahf
arpl
out
or
test
aad
out
dec
pop
retf
inc
pusha
cmp
pop
in
xchg
call
push
ror
cwde
sub
push
mov
imul
xchg
outs
jne
fs
cmp
xchg
push
xchg
xchg
in
add
xor
js
repnz
inc
and
(bad)
lock
inc
sub
stos
push
fisub
sub
div
fwait
jbe
jle
mov
cli
in
sahf
retf
xchg
mov
dec
inc
into
pusha
mov
ins
pushf
xchg
pushf
push
and
push
cwde
mov
or
dec
int
mov
stos
push
xchg
cmc
xor
cmp
pop
lods
pop
clc
daa
out
das
jecxz
arpl
call
scas
push
pop
mov
push
(bad)
and
scas
scas
movs
xchg
dec
pop
fstp
jbe
test
sub
enter
cmc
xchg
inc
fs
pop
push
xchg
mov
mov
sub
retf
xchg
ret
mov
cld
dec
xchg
xor
aas
mov
fild
push
call
jns
stc
push
sbb
jmp
in
push
jecxz
aam
pop
mov
push
je
test
xor
or
sbb
xor
add
loope
aaa
sub
fild
cwde
shl
retf
dec
mov
and
mov
mov
(bad)
cmp
mov
aaa
loopne
jg
mov
push
jno
push
cmp
mov
push
sbb
aad
sahf
ins
popf
retf
ins
aad
dec
ror
test
adc
cmps
jns
mov
js
pop
jnp
adc
mov
mov
jnp
outs
mov
sub
rol
idiv
jb
xchg
push
ficom
and
sbb
push
xor
pop
inc
sub
ret
loope
addr16
mov
jns
push
and
(bad)
test
test
sbb
mov
mov
(bad)
pop
push
mov
push
(bad)
mov
dec
pusha
pop
xchg
dec
ja
or
lds
je
mov
mov
pop
rcr
addr16
dec
rcl
push
mov
gs
jno
adc
iret
xchg
push
xlat
add
jle
inc
pop
pop
cmp
xor
jg
dec
mov
in
push
les
cmp
scas
xor
call
mov
imul
jae
mov
cs
stos
inc
sets
inc
add
std
sub
ss
pop
ss
mov
adc
nop
push
jecxz
push
and
mov
jb
clc
xchg
out
push
in
xor
xchg
(bad)
or
xchg
stos
(bad)
int3
push
inc
adc
lds
sbb
dec
inc
lahf
xchg
xchg
hlt
call
dec
sbb
dec
sub
or
rcr
aad
rol
inc
mov
and
and
aad
pushf
jo
sub
in
imul
xchg
push
push
add
pop
inc
call
sbb
cli
in
pop
adc
mov
push
sub
adc
ja
(bad)
imul
inc
mov
pop
pop
mov
pusha
xlat
and
xchg
cld
sub
stc
lods
mov
xchg
push
dec
add
push
pop
pop
pop
dec
push
fmul
int3
(bad)
pop
push
dec
xchg
mov
loop
adc
iret
add
sub
or
jne
sub
cmp
jmp
vandps
xlat
cmp
mov
push
adc
(bad)
test
dec
push
mov
sbb
fisubr
mov
inc
pop
mov
jnp
out
xor
js
cmps
dec
xor
cmp
push
cmp
xor
xchg
xchg
loope
out
out
fidiv
inc
ret
sahf
pop
lock
(bad)
or
dec
or
retf
cmp
jmp
jg
pop
jg
mov
cmp
popa
(bad)
mov
das
fmul
leave
mov
mov
push
retf
mov
sbb
(bad)
mov
push
repz
pushf
pop
sub
xchg
cwde
cld
aad
push
and
mov
push
mov
loopne
fbstp
fiadd
out
mov
pop
lahf
inc
movs
mov
hlt
cmps
mov
movs
xor
jp
(bad)
adc
neg
sbb
inc
aam
cmp
sbb
dec
cs
inc
pop
movs
xchg
add
outs
bound
jg
int3
dec
mov
xor
dec
mov
pushf
mov
mov
aad
aam
gs
cmp
or
fistp
mov
and
xchg
sub
ss
jle
mov
int
outs
mov
sar
sbb
pop
imul
sbb
inc
neg
pop
data16
mov
test
(bad)
add
add
mov
push
mov
popa
gs
inc
xor
fstp
sub
adc
push
xchg
ret
add
int
scas
push
lahf
mov
out
stos
or
adc
lds
cmp
and
cli
push
mov
out
inc
(bad)
adc
aad
push
or
dec
sub
fsubrp
hlt
adc
jo
pop
jmp
inc
cwde
cmp
imul
mov
lods
dec
xchg
idiv
daa
pop
cmps
pop
inc
in
in
shl
enter
ss
add
dec
inc
mov
dec
or
out
adc
cmp
sub
sub
sar
pushf
xchg
lea
inc
push
xchg
cmp
das
cmp
push
cli
jg
pop
and
cmps
or
xchg
pop
cmp
add
add
adc
test
retf
cwde
outs
iret
and
pop
aas
jbe
adc
xchg
outs
in
jg
aad
outs
adc
cmp
mov
or
adc
lods
mov
pop
add
ret
or
xor
pop
in
xor
add
add
add
call
xor
and
jnp
daa
and
pop
scas
aam
(bad)
xlat
scas
push
addr16
out
test
icebp
or
jb
test
mov
push
mov
mov
pop
movs
mov
xchg
je
mov
test
inc
mov
mov
jl
xchg
jnp
inc
or
rcr
movs
mov
mov
pusha
int3
adc
sub
test
or
xchg
sub
mov
leave
rcl
and
push
and
inc
jnp
cs
imul
lods
call
cmp
sbb
shl
add
hlt
ins
stos
sbb
add
mov
xor
ffree
cli
rep
xchg
pop
cmp
out
gs
aam
out
push
xor
and
dec
xchg
mov
cmp
(bad)
jnp
jmp
push
pusha
mov
clc
aad
push
(bad)
std
pop
and
(bad)
adc
fs
ror
mov
cmp
cs
mov
(bad)
sti
xor
fbld
aas
adc
mov
mov
ss
jne
loopne
arpl
das
mov
clc
and
cli
add
pop
sbb
dec
shl
in
xor
mov
fldenv
(bad)
mov
ss
std
out
pop
push
dec
add
ds
xchg
imul
pcmpgtb
test
lods
adc
outs
neg
push
inc
push
mov
push
leave
cmp
xchg
loop
mov
mov
outs
sub
cmp
dec
test
mov
inc
iret
sbb
dec
or
cmp
imul
fbld
adc
pop
jge
and
sar
mov
or
mov
shl
movs
or
mov
cmps
mov
push
adc
fisttp
cs
ds
jmp
add
pop
ret
repz
and
in
ret
cmp
adc
xor
push
or
push
mov
mul
mov
stc
sbb
ins
mov
pop
xchg
sahf
mov
addr16
mov
xor
or
pop
mov
movs
lock
out
push
jle
int3
movs
mov
add
sub
shl
push
mov
clc
shl
(bad)
mov
cmc
jns
(bad)
mov
dec
ss
test
and
jno
pop
or
fnstsw
fwait
xchg
lds
add
pusha
mov
and
(bad)
sub
mov
mov
aam
or
shr
cdq
outs
popa
mov
test
setp
push
xlat
in
xor
sub
pop
outs
mov
in
sub
cmp
div
(bad)
loopne
bound
sub
stos
sub
nop
scas
mov
out
or
jg
push
xchg
mov
sbb
imul
mov
jb
dec
cwde
out
adc
mov
pop
rcl
les
xor
or
mov
popf
mov
adc
cmp
jno
ror
push
and
push
call
jns
fcom
pop
xchg
pop
stos
xor
adc
sbb
inc
fldcw
sbb
loope
lahf
lea
sub
adc
mov
into
fstp
and
not
pop
mov
push
aad
bound
xchg
add
xor
call
(bad)
fst
call
xchg
pop
cli
jl
pushf
mov
add
xchg
pop
setl
lods
cmps
xor
(bad)
add
push
iret
popf
daa
leave
add
add
push
mov
out
xchg
test
add
aaa
stos
sub
mov
aas
or
mov
xor
push
mov
lahf
ficomp
inc
xlat
shr
(bad)
scas
or
push
mov
and
mov
sbb
xor
mov
pop
inc
xor
jge
cmp
pusha
adc
dec
out
data16
std
aam
retf
mov
mov
mov
iret
pop
push
sub
mov
dec
cdq
push
sbb
xchg
popa
add
push
mov
add
pushf
and
adc
push
push
fcom
sbb
jmp
jmp
adc
stos
cmp
xor
hlt
scas
dec
inc
cmp
mov
xor
out
and
xor
int
call
clc
inc
pop
pusha
inc
aad
scas
and
lods
setae
mov
scas
pusha
stos
add
dec
and
xor
jb
mov
adc
jnp
stos
sub
xchg
mov
inc
rcl
ins
pop
mov
icebp
inc
inc
jbe
dec
adc
popa
das
loope
inc
mov
sbb
shr
call
dec
mov
pop
enter
sbb
xchg
inc
sub
test
cs
inc
inc
push
rcr
in
cmps
push
ror
out
pop
inc
mov
xchg
add
popf
add
loop
movs
xor
inc
pop
into
sbb
mov
pop
das
jp
or
jmp
xchg
call
sbb
aaa
retf
sub
imul
xchg
aam
jge
aaa
xchg
popa
(bad)
jns
push
shl
mov
es
or
hlt
and
(bad)
sub
add
repnz
ja
cmp
mov
xchg
leave
and
fsub
ss
mov
cmp
dec
inc
aaa
pushf
inc
sub
cwde
dec
dec
sar
sub
inc
pop
xchg
ins
mov
inc
adc
push
leave
mov
ror
(bad)
frstor
(bad)
std
shr
aad
dec
mov
jl
leave
je
clc
jbe
pop
push
scas
js
dec
and
pop
xor
gs
xchg
dec
nop
push
adc
mov
stos
sub
sub
push
xor
xor
loop
shl
mov
ja
(bad)
jl
rcl
in
xchg
xlat
dec
xchg
cdq
int3
pop
lds
xchg
jmp
mov
stos
mov
inc
sbb
cdq
inc
cs
lahf
in
loopne
out
test
cmp
push
mov
or
aaa
jae
in
adc
fist
scas
ror
cdq
pop
sti
lea
movs
dec
inc
push
rol
fmul
mov
jne
mov
test
xor
(bad)
mov
fcom
inc
mov
inc
ins
jne
lods
pop
jle
push
and
shl
test
pop
pop
pushf
push
mov
test
ins
cs
push
and
sub
push
fmul
(bad)
jno
jne
mov
lahf
inc
rol
xchg
int3
push
iret
and
push
pushf
sbb
adc
add
inc
cmc
push
loope
xor
mov
imul
outs
(bad)
aaa
push
and
push
sbb
mov
arpl
jl
stc
mov
sbb
(bad)
xchg
xor
xor
fimul
inc
sbb
out
loop
push
sub
jo
aas
mov
ds
adc
nop
push
sar
loop
mov
inc
or
(bad)
hlt
enter
ins
outs
adc
cmp
mov
(bad)
out
adc
cmp
pop
popf
das
inc
ror
(bad)
lock
xchg
adc
popa
icebp
mov
and
and
xchg
mov
adc
pop
or
jg
cmps
rcr
mov
repz
xchg
or
sbb
retf
inc
jp
xchg
jae
or
test
mov
push
je
(bad)
lahf
sub
clc
and
popa
sub
mov
daa
loope
jae
pop
cmp
(bad)
iret
pop
jmp
int3
mov
mov
(bad)
aaa
(bad)
mov
sbb
adc
addr16
mov
jmp
mov
int
popf
nop
xchg
cmc
sbb
ret
push
or
loop
or
aam
sti
xchg
mov
mov
xchg
dec
push
push
sub
jle
push
or
in
stos
mov
sahf
scas
mov
out
pop
ins
not
sbb
mov
pop
out
je
or
jge
ficom
mov
jae
push
mov
test
popf
enter
sub
neg
mov
push
add
xchg
jl
push
fcom
pop
sahf
aad
(bad)
imul
cmp
call
scas
jecxz
and
mov
jns
fmul
mov
inc
cmp
cmc
fistp
jno
mov
es
dec
mov
sub
inc
push
cmps
ins
xor
mov
ret
add
jb
lods
loop
xchg
add
ins
int
call
lock
sbb
test
test
add
inc
cmp
mov
sbb
ja
sbb
mov
mov
sbb
pushf
jnp
dec
shl
or
(bad)
sahf
and
loop
(bad)
pop
and
pop
jo
mov
cli
or
push
and
inc
das
fs
add
mov
or
xchg
enter
inc
inc
ror
(bad)
mov
sub
out
jmp
mov
out
sbb
and
add
xor
int
or
bound
push
test
(bad)
sub
push
push
inc
adc
int
aad
in
sbb
retf
shl
loope
sbb
repz
stos
cmc
mov
outs
enter
or
cmp
loop
std
push
mov
ss
sub
xor
jl
movs
(bad)
cmp
mov
inc
sbb
cmp
test
or
mov
inc
imul
add
sub
cmp
mov
adc
push
inc
or
lods
xchg
fldcw
inc
xor
xchg
sbb
ja
lahf
pop
pop
mov
out
aas
cmp
in
and
mov
dec
cwde
fiadd
mov
cmps
test
mov
pop
pop
or
cdq
ret
inc
push
das
jl
dec
movq
dec
fst
inc
xor
sub
sbb
sub
cmp
push
jne
jo
iret
fmul
sub
addr16
scas
(bad)
sar
stos
and
ss
rol
sahf
cmp
jl
dec
fucomp
jbe
inc
cmp
add
ficom
lods
cmp
popa
mov
clc
ins
pop
test
retf
cmc
sub
pop
lods
(bad)
in
jmp
test
gs
loop
bound
scas
add
enter
lods
cmp
dec
and
cmps
jne
pushf
leave
or
gs
adc
nop
clc
test
pop
lea
push
imul
inc
xor
pushf
pop
shr
push
pop
xor
data16
or
mov
fst
arpl
sbb
not
or
jb
lds
cmps
into
push
adc
push
int3
jnp
aas
add
shl
push
dec
push
shl
dec
push
fst
jle
dec
aad
in
outs
call
std
mov
ror
mov
push
push
dec
ficom
push
mov
mov
fdivr
in
jb
mov
hlt
cmps
xor
pop
cs
add
sub
ins
clc
and
jl
dec
nop
add
push
das
hlt
add
je
cmp
idiv
push
fdivr
add
out
and
cmp
sub
bound
in
dec
and
mov
inc
das
xchg
test
rcr
gs
pop
cdq
enter
retf
aas
ret
mov
stos
pop
imul
and
sahf
out
sub
lock
data16
mov
add
push
xchg
gs
xor
call
inc
ins
mov
push
dec
xchg
mov
imul
cdq
test
adc
(bad)
ss
js
sahf
stc
sbb
mov
cmc
aas
adc
xchg
pop
in
cmp
jge
fiadd
add
add
int
xchg
jl
rcr
pushf
(bad)
pop
sbb
ja
popf
aam
stos
retf
outs
sub
ja
mov
imul
leave
push
mov
push
jge
add
and
jno
push
adc
push
mov
or
imul
scas
and
pop
mov
icebp
dec
dec
pop
cmps
add
pop
pop
mov
push
movs
out
daa
and
xchg
xor
outs
xor
and
rdpmc
cmp
add
mov
adc
inc
scas
xchg
ret
cmp
or
gs
fstp
nop
movs
test
xchg
sahf
sub
ffree
in
add
pop
shr
and
push
retf
ret
jno
lahf
mov
xchg
lock
adc
sbb
rcl
mov
mov
imul
add
ins
xchg
je
test
xchg
sar
add
idiv
leave
sbb
push
mov
pop
sub
jg
sub
(bad)
mov
and
aaa
mov
pop
mov
rcr
sub
lea
imul
sbb
pop
dec
(bad)
and
xor
loop
(bad)
aad
cwde
jmp
sbb
cmps
add
jg
adc
std
inc
shr
je
push
xadd
rcl
xchg
mov
aam
adc
add
in
mov
jle
mov
ds
mov
outs
inc
jge
push
and
push
dec
fadd
bound
je
cmp
sbb
pop
pop
mov
add
mov
retf
or
inc
xor
add
popf
pop
jge
xlat
dec
in
mov
pop
mov
xchg
mov
je
ret
xchg
add
pop
dec
mov
cs
in
test
and
fwait
dec
push
jo
adc
jno
popa
aam
pop
call
sbb
pop
mov
scas
jne
aaa
lods
mov
jmp
cmc
or
arpl
mov
add
sub
jae
pop
jmp
out
repnz
adc
dec
cmp
out
sar
pop
mov
daa
movs
ins
dec
xchg
retf
mov
dec
stos
mov
adc
(bad)
mov
xchg
dec
imul
cmp
mov
mov
cmp
out
data16
(bad)
jmp
pop
mov
je
sahf
out
mov
jo
pusha
and
xchg
xor
add
in
cmps
or
or
sub
sti
push
add
div
mov
xlat
das
pop
pop
scas
inc
jnp
mov
dec
mov
js
or
out
iret
stos
rcr
push
jecxz
adc
mov
xchg
sahf
jmp
cwde
sbb
into
cmp
pop
xchg
xor
test
jbe
fs
je
sbb
outs
out
cmp
jo
or
lahf
in
hlt
daa
sub
pop
cmp
ins
rol
hlt
mov
stos
mov
imul
arpl
xor
ins
leave
dec
fldenv
arpl
pusha
push
outs
inc
xchg
sbb
frstor
cld
icebp
pop
push
jecxz
js
outs
das
in
repz
push
jle
jle
mov
or
pusha
imul
and
push
push
jae
outs
ins
ss
mov
addr16
(bad)
pop
mul
sub
push
mov
xchg
in
mov
das
cmps
xor
loope
xor
pop
lahf
fist
pop
mov
imul
adc
dec
sub
pop
xlat
cmp
dec
stc
int
pop
fstp
jae
sub
xor
test
neg
leave
xor
jo
jecxz
push
push
cmp
cdq
bound
push
lea
inc
push
push
imul
hlt
xor
in
out
jno
lahf
cmps
xchg
xchg
iret
imul
(bad)
std
push
and
sub
retf
popf
fdiv
shr
xor
inc
loopne
sub
sub
and
loope
mov
mov
sub
mov
iret
push
inc
xchg
leave
test
aam
(bad)
pop
clc
into
std
(bad)
test
repnz
rol
or
jl
(bad)
push
jne
or
mov
fisubr
lods
test
jmp
cld
xchg
test
jg
fs
add
push
adc
shr
aas
rol
outs
shl
push
dec
sar
cld
push
pop
cld
xchg
xor
pop
popf
or
adc
loope
gs
aam
cmp
sub
(bad)
fst
sub
arpl
imul
cmp
and
lahf
jecxz
xchg
aaa
xor
and
fs
jp
(bad)
movs
stc
fld
add
outs
ins
and
xor
loope
and
clc
pop
mov
pop
adc
popf
loope
test
mov
jns
cwde
dec
dec
jecxz
in
sub
dec
xchg
cld
or
adc
inc
sbb
in
push
inc
pop
inc
mov
or
inc
pop
sbb
mov
pop
sar
push
and
cs
jmp
jno
add
pop
lea
shl
retf
out
sub
fistp
repnz
dec
sub
mov
sub
outs
pop
pop
pop
repnz
pop
mov
sub
xor
sbb
sub
mov
xchg
jmp
ss
push
out
push
bound
inc
repz
jae
dec
hlt
push
push
popa
addr16
xchg
adc
and
pop
cmps
inc
or
push
cmp
test
dec
jmp
jmp
mov
ficom
adc
jae
mov
popf
jge
pop
inc
xchg
fnstcw
(bad)
out
dec
or
sbb
movs
frstpm(287
push
xor
jb
rcl
not
xor
ret
idiv
cdq
xchg
pop
inc
adc
movs
mov
mov
inc
mov
jle
inc
(bad)
ss
dec
jae
dec
scas
rol
sbb
loope
push
jmp
jne
sbb
mov
ins
int3
sbb
xor
(bad)
stc
(bad)
pop
pop
mov
jmp
pop
jb
arpl
dec
(bad)
xor
push
and
pop
dec
mov
test
in
mov
mov
stos
out
into
loope
and
xor
(bad)
int3
sahf
repnz
mov
sar
dec
xor
inc
and
fwait
pop
shl
das
mov
cmp
jle
jnp
shl
mov
push
push
ffree
in
mov
sub
jbe
repnz
xchg
xchg
mov
xchg
test
mov
fnstcw
cs
add
adc
movs
jo
add
inc
int
in
hlt
inc
imul
mov
gs
or
xchg
or
bound
cld
push
adc
mov
gs
ret
push
ror
xchg
add
lods
mov
(bad)
int
cmps
sbb
xchg
ins
fisttp
push
sahf
outs
or
(bad)
cmp
sar
xor
or
xor
jge
mul
enter
sbb
retf
push
stos
cmp
or
hlt
icebp
add
(bad)
mov
gs
pop
mov
aaa
push
cmp
les
iret
loop
add
cwde
xchg
sub
pop
int3
sbb
inc
cmps
pop
cmp
inc
enter
das
mov
push
out
pop
xchg
or
into
xor
or
hlt
pop
call
inc
call
lods
adc
xor
in
or
call
pop
shl
(bad)
aad
dec
cmp
repnz
sub
inc
jno
mov
sbb
pushf
mov
addr16
imul
jno
test
out
adc
dec
hlt
sub
pop
jecxz
call
div
inc
(bad)
jmp
call
mov
mov
aad
dec
xor
ss
push
stc
call
out
xchg
shl
cmp
stos
stos
das
dec
(bad)
sub
mov
in
pop
dec
and
pop
das
xor
jle
arpl
mov
jae
sub
leave
ret
lock
jmp
inc
jecxz
pop
ficom
pop
or
push
adc
outs
in
mov
ja
sbb
mov
aaa
fwait
mov
mov
sub
popa
call
movs
sbb
loop
xor
movs
cmp
or
imul
ins
cmp
inc
daa
(bad)
mov
call
cmp
mov
cmp
pop
mov
push
repnz
mov
scas
xor
aad
mov
add
(bad)
xchg
xor
popf
call
rol
dec
xor
nop
add
ins
outs
cmp
jmp
add
cmp
fs
call
loopne
addr16
daa
jne
out
adc
sbb
(bad)
xchg
inc
repnz
test
(bad)
movntps
fxrstor
in
jbe
cli
popa
mov
cmp
(bad)
shl
lods
dec
(bad)
std
inc
jae
icebp
push
fidiv
push
stos
dec
(bad)
inc
je
icebp
pop
xor
loope
lods
and
ins
fadd
mov
push
daa
sub
aam
(bad)
je
es
ss
(bad)
rol
cmp
pop
inc
inc
jmp
fwait
test
enter
xchg
imul
pop
mov
mov
outs
xchg
repnz
(bad)
xchg
pushf
aaa
push
lahf
pop
call
push
scas
pop
sahf
sub
fidivr
xchg
ins
shl
loopne
or
popa
jmp
mov
lock
orps
push
xchg
push
and
pop
mov
retf
test
shl
and
dec
xchg
out
out
shl
pop
bound
das
das
rol
iret
ret
xor
jmp
and
cmps
lock
retf
dec
push
jp
jg
cmp
sub
sti
xchg
mov
out
fwait
push
call
or
mov
jmp
cld
aam
and
pop
lds
jbe
in
cmp
test
mov
ror
push
mov
add
mov
mov
mov
ins
sbb
adc
rcl
lods
cld
pop
pop
lea
inc
pop
inc
(bad)
ds
and
retf
mov
call
(bad)
jmp
out
clc
cmc
(bad)
sbb
mov
mov
inc
dec
enter
adc
pop
sub
fnstsw
jge
stos
mov
mov
mov
popa
in
xchg
cdq
aad
or
repnz
mov
or
mov
adc
mov
mov
cmp
pcmpeqd
sahf
imul
scas
scas
pop
adc
clc
or
les
xor
or
aaa
xchg
xchg
lea
clc
cli
sub
je
repz
lahf
scas
fmul
and
xor
in
adc
aaa
sbb
mov
ds
scas
add
fstp
repnz
sub
add
pop
jp
push
scas
lock
outs
pop
sub
movs
mov
pop
jnp
xchg
sbb
and
(bad)
cwde
fst
add
into
ret
repnz
mov
cli
sub
adc
aad
scas
mov
mov
(bad)
loop
imul
sbb
mov
popa
mov
mov
push
lods
jle
hlt
lea
mov
jecxz
push
dec
lods
jp
dec
neg
and
jg
and
adc
dec
pop
add
mov
mov
push
xor
loopne
mov
ja
pushf
or
adc
mov
sahf
xlat
mov
movs
daa
mov
loop
cmp
adc
xor
out
mov
sub
out
pop
stos
sub
adc
je
add
test
jle
xor
push
pop
frstor
adc
movs
(bad)
adc
push
push
out
sbb
loop
push
or
shl
(bad)
sub
pusha
dec
lds
add
outs
iret
and
stos
push
movs
pop
ret
dec
xchg
in
inc
mov
mov
out
cwde
pusha
pop
push
adc
ins
test
test
dec
add
xor
mov
jle
dec
in
xchg
pop
mov
add
xchg
mov
jo
stos
or
imul
mov
mov
daa
mov
cdq
mov
loopne
inc
cld
call
sahf
lock
imul
cmp
sub
and
xor
inc
mov
xchg
mov
scas
dec
push
xchg
rol
mov
sub
pop
ins
cmp
mov
inc
ret
ret
pop
arpl
shl
js
in
pop
popa
jns
pusha
ins
mov
cmp
sti
or
out
dec
sub
int3
fsub
into
leave
jbe
stc
fnsave
je
cmp
imul
or
or
sahf
popa
mov
push
and
nop
jge
mov
sbb
and
xor
sbb
sub
je
sbb
aas
loopne
mov
sbb
outs
lahf
mov
in
pop
repz
jecxz
outs
(bad)
fldenv
lds
and
daa
leave
jmp
mov
cmps
mov
test
adc
or
mov
int
jp
fdiv
sahf
mov
xchg
addr16
popa
pop
sbb
out
jbe
sbb
jbe
push
pushf
movs
and
cld
je
sbb
mov
(bad)
inc
repz
mov
retf
pop
gs
ja
push
scas
push
add
pop
stc
push
cs
dec
xor
sub
pushf
adc
imul
jnp
in
sbb
daa
outs
sub
dec
dec
sbb
jns
pop
into
dec
and
retf
(bad)
inc
xchg
popf
adc
or
repz
fdiv
mov
outs
lahf
mov
and
repnz
into
inc
in
sub
sbb
add
outs
test
pop
inc
test
add
outs
fwait
pop
push
test
inc
js
mov
mov
jl
fwait
pop
mov
sub
cwde
fadd
push
jle
sbb
cwde
or
push
(bad)
pop
ds
fwait
es
xor
cmp
mov
add
mov
mov
dec
fnsave
pushf
cwde
jae
or
pop
push
push
xchg
or
les
shl
imul
in
xchg
mov
xor
(bad)
fld
lock
or
push
hlt
movs
xchg
sti
les
out
(bad)
int
aaa
and
adc
data16
fistp
out
into
adc
je
lods
clc
mov
xchg
gs
into
retf
ret
int3
dec
cmps
mov
or
mov
data16
and
push
xchg
and
rcr
pushf
xor
dec
sbb
push
mov
cdq
loopne
inc
adc
nop
out
xchg
(bad)
adc
jecxz
mov
(bad)
fcmovne
mov
cs
xchg
xor
in
in
pop
pop
lock
ret
jl
inc
push
imul
xchg
je
scas
iret
dec
push
call
movs
push
pop
push
pop
shr
mov
and
add
scas
fwait
pop
cli
push
test
xor
jb
nop
push
enter
mov
imul
das
call
mov
pusha
and
fld
ret
frstor
cmps
jle
and
cmp
pop
es
dec
push
cli
lea
sbb
clc
ins
xchg
shl
(bad)
xchg
inc
xchg
mov
lock
les
xor
stc
mov
cmp
jmp
push
ret
jo
xchg
scas
push
js
movs
xor
push
cmp
xor
or
push
out
push
pushf
xor
outs
stos
mov
adc
pop
sbb
ret
or
push
in
popa
shl
std
imul
xchg
mov
(bad)
int
push
mov
pop
(bad)
mov
arpl
stos
movs
ins
add
or
push
fisttp
push
xchg
push
add
push
mov
xor
les
cmp
add
lds
xchg
js
cmps
pop
sahf
xor
cmp
push
and
rol
sub
ror
(bad)
jns
sbb
jge
lods
sbb
loope
call
pop
dec
popf
cmp
inc
add
out
adc
js
in
repz
test
test
sub
mov
repz
mov
out
push
or
call
sub
pop
xor
and
mov
mov
xchg
test
mov
and
adc
retf
push
mov
loope
adc
out
addr16
in
push
inc
pop
cmp
or
stc
add
xchg
shl
jle
push
mov
mov
or
out
adc
test
pop
lds
jne
(bad)
pop
add
cmp
xor
bound
or
and
loope
mov
test
cwde
ret
adc
jmp
in
in
mov
in
xor
in
sahf
fild
(bad)
(bad)
sbb
dec
sub
pop
xor
movd
arpl
cmp
pop
or
outs
aaa
push
add
in
test
cmp
icebp
adc
ret
dec
mov
movs
jb
and
movs
pop
aas
pop
xchg
xor
std
add
movs
fcomp
scas
loopne
mov
and
mov
jae
or
pop
cmp
out
pop
repz
cmps
aas
cmp
inc
xor
add
fimul
test
cmp
xlat
mov
movs
add
dec
js
pop
ss
movs
clc
popf
push
jp
push
mov
lods
sar
mov
scas
pop
add
movs
adc
adc
pop
cmp
scas
cli
mov
xchg
sub
iret
lds
cmps
push
pop
sbb
sub
ror
mov
xor
sub
jno
push
or
mov
xor
loope
test
ret
lods
jl
add
repz
lock
inc
mov
scas
fcomip
scas
jmp
adc
xchg
pushf
dec
add
std
mov
push
imul
mov
cmp
push
sbb
lds
jg
jb
mov
leave
movs
in
add
jl
sbb
mov
jb
mov
pushf
aam
push
add
xor
mov
lods
dec
xor
(bad)
mov
lahf
cmp
ret
out
xchg
retf
sub
jmp
dec
cmp
sbb
ficom
sub
jl
loop
shl
stos
jmp
sub
inc
or
fnstcw
fcmovnb
xor
das
fisttp
jne
push
addr16
into
mov
out
stos
hlt
xchg
dec
adc
pop
fadd
and
ret
xchg
push
xchg
aad
and
das
dec
je
js
aam
jmp
cmp
push
inc
pop
sub
gs
fcomp
retf
mov
jl
dec
cmp
out
lahf
fistp
imul
pop
xor
fistp
xor
jp
xor
repz
mov
push
movs
stc
dec
xchg
push
dec
adc
adc
sub
sub
scas
dec
(bad)
(bad)
jmp
dec
add
mov
add
dec
fidiv
jno
cmp
mov
push
mov
mov
lods
dec
or
ds
push
cmp
xor
imul
and
fs
cmp
sbb
add
arpl
pop
pop
pop
or
shl
les
cmps
div
ja
jno
pop
sbb
imul
jae
imul
sbb
pop
sbb
pop
sub
inc
add
popa
xor
jns
pop
pop
inc
and
xor
aaa
jae
jle
and
inc
sub
addr16
or
outs
aaa
push
push
inc
and
xor
inc
xor
push
or
cdq
int
in
(bad)
mov
xchg
call
mov
lock
ficomp
out
retf
scas
not
xchg
movs
xlat
xchg
int
cmc
mov
leave
mov
in
in
and
test
mov
jecxz
cmc
mov
xchg
fistp
movs
mov
mov
mov
aam
clc
nop
ficomp
(bad)
int3
mov
mov
cld
mov
(bad)
rcl
fiadd
repz
mov
mov
lds
into
xchg
hlt
cmps
in
out
out
ret
scas
fistp
call
call
mov
sbb
jae
pop
sbb
ins
and
inc
pop
jl
ins
add
arpl
inc
sub
dec
or
data16
inc
cs
and
cdq
cld
mov
in
test
pushf
loope
lock
push
jl
pop
dec
ss
imul
push
xor
cmps
retf
mov
sbb
and
test
sahf
ror
stos
loopne
test
jb
cmp
adc
push
push
cli
in
loope
mov
aad
xchg
dec
popa
pop
mov
xor
and
js
adc
xchg
loop
test
and
je
jge
gs
add
sub
mov
xchg
or
sbb
loop
out
or
or
sub
mov
stc
mov
es
imul
mov
test
mov
fdivr
jecxz
inc
cmp
jecxz
stc
or
(bad)
repnz
jno
cdq
xor
ds
jb
add
jmp
call
and
dec
adc
je
and
mov
inc
pop
xchg
(bad)
mov
mov
add
(bad)
mov
or
aaa
cdq
fst
popf
fstp
lahf
adc
hlt
test
push
xor
sbb
jno
popa
mov
sbb
lods
cmc
mov
xchg
pop
add
(bad)
stc
xchg
inc
aaa
arpl
mov
mov
push
mov
and
adc
ds
push
mov
push
aaa
movs
icebp
mov
adc
retf
mov
pop
jle
push
std
add
fs
push
cmp
not
cwde
push
jle
fs
mov
out
fistp
fyl2x
cmps
call
lock
pop
inc
and
ficom
dec
or
mov
movs
out
jmp
into
xchg
dec
cmp
sbb
cmps
push
imul
mov
pop
imul
(bad)
in
mov
icebp
mov
data16
push
mov
jnp
mov
sahf
call
push
aaa
push
dec
pop
dec
and
les
sub
mov
lods
xor
outs
je
ja
mov
fs
call
inc
jnp
pop
cmp
pop
xor
cli
mov
adc
in
mov
and
mov
les
push
adc
fnstenv
mov
outs
or
mov
adc
pop
addr16
sub
or
stos
rcl
mov
icebp
outs
add
jecxz
xchg
pop
test
mov
or
push
xor
mov
mov
xchg
ror
aam
clc
xchg
sar
fist
fnsave
sbb
pop
sbb
inc
push
dec
pop
je
fs
and
dec
xor
inc
push
ja
sub
inc
sub
jg
dec
or
push
dec
cmove
pop
sbb
push
pop
inc
cmp
jae
jne
inc
or
inc
cmp
push
and
jg
sbb
add
scas
hlt
mov
xchg
cmc
xchg
rcl
fsubr
out
scas
iret
sub
sbb
jae
push
xor
ins
add
popa
adc
jbe
dec
add
lds
out
stos
jecxz
repz
pushf
fisubr
mov
lods
out
mov
xchg
cmps
mov
iret
xchg
aam
cli
cwde
(bad)
mov
leave
mov
test
xchg
movs
aam
retf
mov
mov
sahf
cld
mov
xchg
(bad)
(bad)
in
mov
(bad)
mov
lods
in
mov
xchg
scas
in
mov
nop
fidiv
rcl
(bad)
fld
les
aam
les
loop
aad
(bad)
mov
cli
cwde
(bad)
mov
ficomp
(bad)
mov
jecxz
iret
(bad)
fcom
mov
or
sbb
imul
push
inc
push
mov
jg
or
adc
add
(bad)
mov
and
leave
out
mov
sub
add
xor
or
loopne
mov
adc
ficom
mov
rcr
push
adc
pushf
hlt
lds
xor
sbb
and
jle
xchg
out
repz
mov
and
push
add
jp
jge
xchg
loop
inc
mov
pop
ja
cmp
shr
aad
push
sahf
loopne
pop
push
adc
popf
(bad)
xchg
xlat
adc
cs
test
call
sub
cs
in
add
outs
test
std
sahf
daa
and
push
xor
shl
cmp
in
or
fld
gs
cmove
or
(bad)
mov
cmovg
gs
xchg
sbb
fcomp
scas
call
jns
jb
test
fdivr
mov
sub
xor
mov
outs
cmp
(bad)
dec
jl
inc
and
mov
int
push
dec
pop
push
fs
and
std
mov
in
mov
jb
mov
mov
(bad)
sbb
jge
push
mov
popa
ds
push
mov
cmps
div
cs
adc
push
imul
call
pop
dec
and
mov
arpl
scas
sbb
test
fild
imul
dec
xchg
imul
inc
sahf
adc
xlat
xchg
mov
aam
in
and
sbb
or
das
popa
adc
iret
mov
cli
test
sub
mov
test
sahf
pop
xor
and
dec
sub
sbb
mov
mov
sbb
cdq
or
ins
pop
xor
push
push
add
mov
outs
jl
jno
xchg
ret
loop
out
mov
inc
cmovg
add
call
adc
add
jne
inc
mov
mov
inc
lock
cmps
fmul
lods
out
dec
cdq
or
les
aad
(bad)
in
(bad)
adc
mov
mov
lahf
dec
or
pmaddwd
ret
mov
inc
test
scas
jb
jmp
aam
(bad)
jg
out
mov
mov
inc
add
daa
push
lds
lds
xor
inc
pop
xor
jl
and
inc
sub
js
push
adc
ins
sub
push
sub
jns
pop
sub
push
ja
cdq
push
neg
lahf
call
into
mov
mov
fst
cli
movs
clc
lods
out
mov
fcomp
retf
mov
les
cmc
mov
lds
ror
rol
scas
out
mov
popf
shl
repz
out
lods
fidivr
ret
lods
in
and
repnz
cmc
mov
mov
mov
sbb
inc
or
sub
dec
sbb
push
adc
jns
push
adc
jo
cdq
cld
mov
nop
aad
in
in
and
mov
stos
fcomp
in
jmp
test
repz
xchg
loop
cld
mov
mov
sub
inc
add
dec
sub
sub
bound
push
and
push
daa
addr16
add
jg
pop
sub
add
and
ja
pop
xor
pop
sbb
push
or
pop
pop
js
inc
xor
das
jl
push
pop
imul
imul
cmp
arpl
jno
jns
push
pop
jns
push
sbb
fwait
rcr
stc
popf
(bad)
mov
retf
outs
and
outs
xor
cmp
icebp
ss
and
scas
icebp
push
retf
(bad)
scas
push
push
je
add
cwde
retf
aas
js
sub
cmp
mov
fild
mov
mov
push
dec
dec
and
test
mov
jmp
int3
xor
adc
fisub
pop
add
sbb
jg
pop
dec
or
into
movs
leave
adc
jecxz
cmc
mov
aas
mov
fnstenv
out
clc
leave
mov
repz
lds
ret
or
sbb
outs
or
sub
lock
pop
(bad)
sbb
int3
stos
fild
fcmovu
xchg
xlat
loop
std
mov
jb
popa
adc
shr
test
lea
xchg
ret
cmp
ja
sti
fwait
retf
out
mov
mov
mov
xchg
sub
rol
fs
or
cld
sahf
call
inc
or
mov
jo
pop
xchg
rol
xchg
lds
leave
mov
and
out
adc
ins
outs
xor
ret
shl
push
add
or
(bad)
out
push
xor
stos
cli
fadd
mov
mov
mov
push
add
lods
jmp
push
ret
(bad)
stos
hlt
xchg
pop
aas
jae
ds
lods
jecxz
(bad)
or
pusha
jae
ja
mov
fistp
mov
and
int3
(bad)
retf
hlt
mov
mov
xchg
lds
or
call
mov
jnp
push
dec
jl
inc
ror
pop
dec
cmp
mov
mov
cdq
xlat
test
add
mov
ficom
jl
pop
add
push
pop
cmp
repz
jbe
pop
push
pop
dec
pop
sub
push
push
and
mov
mul
neg
inc
bound
outs
cmp
cli
mov
cld
lods
jmp
daa
mov
xchg
arpl
mov
je
cmp
lods
xor
cmp
std
inc
xchg
cmp
sub
cwde
shl
rcr
ds
idiv
sti
mov
fcomp
shl
pop
sbb
adc
sbb
mov
pop
stos
out
xchg
fs
ja
jg
pop
sub
cmp
adc
mov
clc
not
scas
sbb
cs
adc
in
movs
rol
cwde
lock
stos
clc
(bad)
int
sbb
js
arpl
inc
add
xor
inc
and
push
daa
arpl
inc
pop
ja
sub
inc
sub
sub
fs
jb
push
adc
jo
data16
and
jbe
inc
pop
addr16
add
dec
xor
and
dec
cmp
pop
add
int
in
ret
xchg
mov
dec
push
jmp
mov
mov
enter
jecxz
lock
fdiv
and
pop
sbb
inc
sbb
pop
add
sub
inc
and
jle
dec
movq
sbb
jb
pop
sbb
popa
and
inc
sbb
and
fwait
sar
sbb
jbe
fs
dec
and
imul
pop
sbb
and
adc
jne
pusha
and
push
sbb
cmp
inc
adc
xor
push
dec
add
dec
add
outs
aas
jl
push
cmp
popa
add
jo
push
adc
cmp
or
arpl
dec
or
jne
push
sbb
data16
adc
and
shl
aam
out
fdiv
sub
jl
jne
sub
sub
fst
push
add
adc
mov
jne
jg
push
xchg
pop
cs
mov
fs
and
fwait
mov
or
xor
mov
pop
mov
mov
aam
arpl
adc
inc
pusha
adc
idiv
or
inc
add
xchg
jecxz
ds
or
cwde
fisttp
add
(bad)
fwait
call
sbb
test
cmps
pop
or
fnstsw
and
jmp
adc
retf
call
pushf
les
adc
sbb
or
popf
fstp
cwde
pop
push
daa
xlat
mov
mov
scas
sbb
and
test
pop
jo
dec
cmp
mov
adc
and
xchg
mov
mov
or
push
jno
push
imul
adc
and
pop
cmp
mov
jge
sub
cmps
or
clc
rcl
xchg
and
jle
add
fcmovu
scas
jmp
(bad)
shl
inc
and
ret
or
arpl
mov
arpl
mov
int
loope
jp
inc
jle
inc
and
pop
or
retf
stos
hlt
mov
aas
push
adc
mov
xchg
pop
or
xchg
into
loop
movs
cld
out
out
xor
inc
inc
dec
pop
pop
arpl
jbe
scas
cmc
xchg
iret
scas
out
pushf
sub
gs
xor
addr16
iret
movs
xlat
lds
fisttp
mov
cmps
(bad)
(bad)
mov
mov
xchg
fdiv
jp
pop
sbb
not
stc
enter
cmp
xor
mov
mov
out
loopne
cmp
inc
dec
and
(bad)
out
in
arpl
or
les
pop
or
repnz
jecxz
jle
dec
je
addr16
cld
mov
int3
mov
adc
daa
outs
add
stos
ror
xchg
and
jl
sar
jg
jmp
mov
pop
pop
cmc
sbb
push
pop
push
in
ret
xchg
mov
add
scas
push
sbb
adc
stos
cmc
sub
nop
sar
mov
lahf
cwde
pop
or
and
sbb
or
mov
jo
pop
das
push
lds
inc
cmps
mov
cmp
fnsave
int
call
lahf
fiadd
iret
(bad)
retf
test
mov
sti
mov
mov
or
adc
sub
push
inc
add
mov
xchg
(bad)
sahf
hlt
xchg
popf
loopne
ror
in
ret
mov
in
out
test
mov
sahf
fild
fist
lds
ret
mov
xchg
ror
leave
call
into
scas
(bad)
mov
neg
ret
stos
clc
mov
imul
mov
xchg
lahf
fild
retf
cwde
fbstp
aad
out
(bad)
cmps
jecxz
out
test
mov
cwde
frstor
lds
aad
std
xchg
cmc
mov
mov
mov
add
inc
add
jns
ins
ss
pop
inc
daa
inc
add
dec
adc
push
or
pop
cmp
adc
jl
pop
xor
jge
arpl
jno
jns
push
push
inc
add
sub
dec
or
jp
jge
jl
inc
aaa
jae
push
adc
nop
repnz
out
not
mov
scas
ficomp
cmc
mov
xchg
ficomp
jge
jge
inc
ss
pop
sbb
sbb
pop
adc
aaa
addr16
out
repnz
movs
aam
ins
addr16
es
jp
sbb
pop
xchg
push
xor
aas
push
or
test
cmp
retf
jmp
mov
jns
adc
or
stc
rep
xchg
xor
pop
aas
outs
das
xchg
push
push
nop
repz
fbld
adc
pop
xor
jl
cmp
add
push
sbb
add
cld
mov
inc
add
xchg
hlt
mov
jo
push
nop
retf
mov
fistp
call
mov
imul
into
mov
pcmpeqw
bound
mov
mov
dec
adc
or
movs
hlt
mov
pop
cdq
stc
stos
jmp
int3
cmps
jmp
inc
es
or
shl
sub
stos
repnz
fucom
iret
mov
ins
jne
add
jecxz
icebp
cmp
dec
mov
rcl
fimul
popa
pop
add
mov
retf
cmp
pushf
ficom
and
adc
ror
mov
cmp
jb
and
in
adc
xor
jbe
cld
add
jl
test
jns
mov
fidivr
pushf
dec
xor
test
inc
add
sub
pop
sbb
inc
xor
mov
mov
call
movs
out
test
ret
xchg
inc
xor
dec
cmp
test
lea
addr16
test
(bad)
mov
cmp
dec
or
inc
push
sbb
pop
cmp
sub
fmul
adc
adc
mov
(bad)
stos
imul
dec
sahf
sbb
bound
repnz
fst
push
and
or
sub
sub
xchg
fcmovnbe
mov
cmc
mov
sahf
hlt
xchg
jns
outs
xor
pop
xchg
lock
push
dec
pop
dec
and
mov
xchg
xor
gs
ret
cmp
sub
push
or
ficomp
add
sub
aad
loop
mov
xor
jns
loopne
mov
push
mov
and
bound
inc
mov
push
and
hlt
repnz
add
adc
movs
into
mov
add
mov
mov
jb
fdiv
lods
inc
dec
or
out
scas
out
and
aaa
ins
mov
popa
add
pop
mov
adc
cmp
ja
out
out
shl
(bad)
mov
mov
mov
clc
shr
sub
movs
out
mov
mov
call
sar
imul
cli
xchg
iret
sbb
in
mov
loopne
icebp
test
add
out
scas
(bad)
mov
popf
in
cmps
out
rol
push
sbb
jae
sub
call
shr
je
cmc
or
lock
sbb
mov
xchg
ss
pop
dec
add
(bad)
(bad)
(bad)
pop
adc
rcl
add
adc
fstp
inc
mov
dec
xor
fld
inc
lods
add
and
add
adc
push
outs
ss
aad
xchg
(bad)
or
add
xchg
sbb
jmp
mov
popf
jp
xor
ret
lock
pop
and
mov
icebp
movs
neg
cmp
push
inc
and
bound
mov
fidiv
outs
scas
ds
sbb
cmp
sub
adc
jmp
mov
cmp
ss
iret
xchg
leave
daa
xchg
retf
sub
xchg
in
adc
popa
jl
inc
mov
mov
mov
ds
mov
int3
adc
mov
add
cmp
jmp
data16
ficomp
fadd
or
ror
mov
mov
dec
lods
xor
push
dec
int3
push
mov
sbb
mov
aaa
ret
pop
(bad)
xor
in
mov
fadd
rol
fiadd
sar
pop
push
cmovg
dec
add
test
movs
sub
call
in
mov
xchg
sbb
and
mov
cdq
iret
(bad)
push
pop
adc
push
and
or
rep
ret
(bad)
xor
inc
add
shl
adc
retf
add
and
test
jecxz
mov
int
call
cld
mov
and
ja
aas
ror
test
movs
or
dec
dec
sub
cmps
sub
cmp
mov
test
sub
shl
mov
push
sbb
xor
sub
push
ds
popf
mov
push
and
jns
jmp
xchg
leave
jmp
xchg
aad
push
outs
or
mov
mov
imul
jae
xor
aas
retf
(bad)
or
adc
outs
sbb
adc
hlt
sahf
sar
enter
mov
mov
call
inc
add
mov
jnp
inc
inc
sub
sar
pop
das
rcl
add
stos
retf
add
inc
and
ror
fs
lds
or
out
inc
ds
cmp
push
div
rcl
out
test
or
out
test
jle
daa
and
jmp
addr16
sbb
out
xchg
adc
push
xchg
outs
mov
mov
adc
dec
test
lock
ja
push
and
(bad)
add
mov
div
jmp
mov
add
cmp
mov
aad
in
pop
pop
sub
sbb
les
dec
es
popa
xor
aas
push
sub
and
loope
ja
fsubr
xchg
in
cmps
cld
add
cmp
fcom
ins
test
jno
push
xchg
enter
jo
pop
mov
nop
bound
dec
test
xchg
ja
int3
mov
rol
push
lds
dec
adc
and
repnz
aad
icebp
jns
int3
mov
test
fnsave
cmp
cmp
sbb
pop
sbb
push
push
jae
push
jg
push
xor
popf
lock
sbb
leave
(bad)
mov
xchg
icebp
mov
push
inc
lea
and
push
inc
loope
ficomp
cmp
int3
mov
mov
mov
jl
(bad)
cmps
stc
call
mov
xor
mov
(bad)
into
xchg
je
cmp
mov
lods
in
mov
daa
dec
adc
mov
cmovg
mov
scas
sub
aad
cli
and
sub
adc
cmp
ret
sub
jnp
movs
jmp
clc
aaa
pusha
pop
aaa
sbb
add
lds
jl
neg
pushf
imul
jecxz
lods
sbb
cmovne
push
lods
in
jo
das
jbe
cmp
iret
call
add
lds
test
sub
or
fld
jbe
adc
mov
and
dec
daa
dec
or
sti
mov
push
nop
out
test
adc
add
pop
in
(bad)
nop
loop
arpl
mov
iret
sbb
mov
lea
xor
or
sbb
push
aad
xchg
(bad)
xor
retf
pop
inc
ss
add
nop
jno
jnp
(bad)
outs
popa
push
add
jmp
nop
jecxz
xchg
pop
adc
aad
mov
(bad)
sti
cwde
mov
popw
sub
mov
test
inc
das
inc
bswap
test
mov
xchg
retf
call
sahf
ret
adc
add
mov
push
adc
mov
xor
pop
xor
jnp
fisub
sbb
lock
sbb
loopne
retf
mov
cmps
jb
sub
xor
sbb
lds
cmp
test
xchg
dec
outs
daa
cmp
jmp
mul
adc
fistp
pop
fxtract
mov
push
pop
add
or
int
jno
dec
shr
fstp
pop
(bad)
cmps
rcl
add
mov
jbe
adc
sti
dec
call
dec
lahf
cs
cli
movs
icebp
inc
xchg
xor
and
adc
sbb
data16
loop
mov
pop
sbb
jl
dec
or
scas
(bad)
mov
inc
push
pusha
xor
shl
out
ret
mov
jp
pop
inc
sub
and
ja
push
mov
mov
movs
pop
add
(bad)
in
xchg
into
adc
push
pushf
ret
mov
stc
lock
dec
dec
add
inc
dec
pop
pop
gs
push
into
retf
mov
mov
pop
push
pop
fistp
and
add
cmps
(bad)
xor
inc
sbb
sbb
sbb
fs
aas
mov
ins
test
popa
fdivrp
in
nop
inc
daa
call
xchg
ins
adc
jmp
cmovns
jecxz
sti
inc
jle
sub
div
loop
mov
xor
enter
fs
adc
push
inc
rol
lock
cmp
out
test
add
or
stos
sbb
xor
rcl
into
cmp
ret
xor
leave
lea
sub
mov
jns
div
stos
enter
pop
cmps
sbb
in
lock
arpl
retf
mov
addr16
idiv
mov
dec
or
bound
dec
mov
icebp
mov
pop
call
imul
jb
xor
adc
div
mov
or
mov
rcl
test
je
dec
mov
adc
or
js
sbb
movs
pop
js
add
imul
and
enter
scas
in
movs
jmp
retf
mov
(bad)
and
xchg
mov
xchg
inc
add
outs
or
setns
and
retf
and
scas
movs
sub
push
push
mov
ret
test
pop
pusha
pop
adc
dec
sub
(bad)
mov
xchg
pop
push
push
pop
xchg
or
stos
out
test
cs
pop
rcl
sti
and
and
into
mov
popf
pop
pop
ds
adc
lds
add
pop
push
aas
sti
fild
fwait
and
call
or
push
invd
cwde
retf
ins
pop
or
mov
xor
aam
mov
add
adc
fadd
mov
and
movs
(bad)
xor
iret
cmp
ret
xchg
inc
jne
dec
mov
test
pushf
popf
adc
hlt
movs
jecxz
jo
adc
lods
ret
div
sbb
ds
movs
inc
es
ret
(bad)
cmps
js
push
inc
scas
jmp
idiv
xchg
sbb
loope
(bad)
or
repnz
es
enter
add
cwde
jmp
es
loope
cmps
jecxz
sub
add
sub
jae
std
repz
call
adc
mov
jmp
sub
jecxz
adc
lea
jne
xor
icebp
xchg
add
adc
push
test
bound
stc
mov
mov
call
dec
push
aaa
jo
cld
xchg
in
jns
dec
bound
gs
int3
mov
movs
or
mov
fsubr
inc
cs
add
mov
aam
pop
sub
push
or
mov
jno
cmp
cmp
sbb
push
lods
and
mov
xor
cmp
hlt
mov
sub
adc
ins
jo
es
cmp
fxch
call
xor
int3
pop
xchg
pop
pop
cmps
dec
jb
jecxz
pushf
stc
sub
xchg
fadd
dec
ret
div
and
xor
dec
sbb
in
fdiv
mov
cwde
mov
cmp
jne
dec
jno
inc
xor
dec
cmp
aad
xchg
cli
sbb
jno
lock
hlt
sbb
ins
inc
sub
jns
aad
rcr
mov
inc
and
add
push
cmp
mov
(bad)
mov
adc
push
push
inc
push
es
outs
add
mov
stc
fisubr
inc
imul
imul
int3
mov
pop
jno
add
pop
sub
shl
sahf
push
and
dec
push
add
push
inc
out
cmps
cld
push
xchg
add
pop
lahf
aam
popa
xor
cmps
adc
out
or
xor
pop
or
cmps
in
ins
push
sbb
sbb
push
adc
mov
xchg
xlat
arpl
mov
rcr
inc
int3
jmp
cwde
mov
pop
cs
mov
jge
int3
rcl
jae
adc
pop
in
out
jle
xor
jmp
mov
push
js
jb
adc
pop
test
xor
shr
add
add
ficom
mov
xor
jbe
add
out
aam
fst
xchg
inc
pusha
add
jns
and
sbb
mov
mov
ins
mov
add
lock
pop
sub
cwde
cmp
adc
jmp
push
add
push
add
dec
sub
jbe
pop
xchg
inc
es
dec
and
test
cmps
fistp
scas
loopne
mov
fnsave
aas
retf
cmc
scas
pop
pop
popf
loopne
(bad)
or
cmp
sbb
(bad)
cmps
jecxz
outs
cs
xchg
stos
call
test
xchg
mov
out
addr16
and
fsubr
xchg
enter
adc
adc
clc
fstp
inc
mov
inc
xor
scas
jmp
inc
and
cmps
push
push
add
fistp
js
or
mov
inc
push
cmp
pop
inc
add
fdivr
inc
mov
xchg
add
js
sbb
add
push
mov
mov
mov
pop
push
push
inc
mov
dec
pop
xchg
inc
and
cmc
mov
push
and
loope
mov
mov
jg
leave
xlat
(bad)
(bad)
and
cmp
xor
cs
int
dec
sub
(bad)
cli
mov
and
ret
push
or
cmp
or
(bad)
mov
push
std
icebp
xchg
mov
rcl
jmp
jne
in
enter
movs
ins
jp
jo
pop
jns
sbb
cs
xchg
aaa
sahf
fdivr
sar
ja
and
push
icebp
adc
push
push
call
rcl
in
(bad)
nop
cmp
dec
js
ja
mov
loop
leave
lock
sbb
sahf
in
nop
rcl
je
js
sub
test
push
sbb
imul
daa
fisttp
fild
adc
ror
sbb
jge
or
or
mov
xor
fsubr
outs
cmp
and
dec
addr16
sbb
sub
pop
(bad)
mov
cdq
jbe
inc
cs
stos
add
repnz
iret
sub
mov
sub
movs
sbb
loopne
xchg
cwde
add
inc
ret
test
movs
loopne
pushf
ds
jl
pop
sbb
scas
cmovg
or
sbb
or
dec
not
add
ds
push
imul
and
xchg
cmp
or
or
cmp
xlat
test
cmc
mov
xor
sar
lock
inc
pop
adc
cmp
mov
mov
jecxz
stc
mov
push
adc
push
add
jmp
imul
call
and
cmps
in
cmps
into
neg
mov
aad
movs
loop
es
ret
mov
jle
sbb
fmul
sub
add
mov
cmp
nop
into
add
xchg
xchg
aaa
fdivr
mov
imul
lods
mov
mov
sub
xchg
jle
std
scas
cld
inc
xor
jmp
jae
adc
shl
xor
fcom
mov
dec
js
out
xchg
std
dec
ins
inc
aaa
xor
mov
push
xor
shl
gs
push
cmp
xor
xor
sbb
xor
adc
test
pushf
jbe
or
movs
ror
pop
jae
in
nop
jecxz
and
or
or
mov
push
jg
lods
lds
and
cmp
shl
push
dec
(bad)
xchg
repz
cdq
rcr
aaa
(bad)
out
mov
add
dec
hlt
push
lods
out
gs
push
push
mov
shl
mov
mov
pop
sbb
push
fstp
(bad)
jecxz
data16
fwait
ret
mov
in
lods
sbb
jb
pop
push
outs
sub
xor
and
out
dec
pusha
sub
mov
mov
mov
xchg
jno
aam
jge
sub
add
push
data16
mov
movs
jns
and
and
fdivr
dec
aaa
inc
add
rcl
movs
outs
dec
push
ja
mov
sbb
adc
sti
stos
hlt
mov
inc
and
scas
hlt
adc
es
movs
add
sti
movs
push
aaa
jns
out
fcom
mov
fsub
dec
add
repz
mov
ror
fld
ret
stc
pop
dec
xor
stos
cmp
xor
lock
fdiv
(bad)
aam
std
cmp
int
bound
jo
adc
mov
inc
sbb
xor
add
stos
ror
sub
pop
sbb
scas
in
stos
fwait
add
in
xchg
dec
pop
or
sbb
shl
mov
jg
cmps
or
lds
sbb
lods
jmp
pop
xor
cmc
retf
sbb
push
nop
cmp
retf
or
or
sbb
fist
scas
arpl
push
mov
movs
sbb
lds
ja
repz
mov
fwait
and
add
xchg
and
out
mov
in
iret
adc
add
dec
aaa
popa
add
jb
push
xchg
(bad)
xchg
jecxz
mov
xchg
sub
das
je
push
or
and
stos
push
jb
pop
inc
aas
jle
mov
stos
cli
mov
xor
ins
fwait
adc
movs
sqrtps
fdivr
repz
dec
lods
dec
cmp
mov
add
mov
and
or
(bad)
loope
mov
ins
mov
test
jp
push
adc
jecxz
jnp
jno
adc
(bad)
mov
ss
enter
sub
or
adc
movs
cmp
fdivr
pop
pop
scas
pop
push
out
out
mov
mov
mov
xor
lods
out
sub
aad
mov
sub
(bad)
aad
movs
je
and
push
lahf
cs
shl
mov
out
aas
fs
ss
scas
inc
inc
and
add
ret
call
mov
mov
sub
push
je
bound
mov
mov
lock
xchg
(bad)
lods
(bad)
mov
pop
or
(bad)
stos
cmc
xchg
sub
and
dec
adc
jecxz
(bad)
adc
sti
mov
test
and
shl
jmp
mov
mov
inc
retf
sbb
mov
call
test
test
inc
ret
loopne
mov
inc
jl
push
sbb
je
adc
mov
xchg
lahf
or
adc
(bad)
sar
leave
xchg
mov
inc
dec
add
xchg
dec
(bad)
in
or
jbe
sub
lds
sub
sub
rcr
std
sub
xor
(bad)
(bad)
aas
mov
mov
mov
call
push
and
or
std
fisubr
ds
lods
jbe
or
pop
jnp
jmp
fwait
call
movs
popf
pop
dec
pinsrw
popf
popa
push
or
out
int
sahf
sbb
(bad)
in
mov
dec
xchg
pop
or
int3
xor
repz
icebp
outs
sub
sub
in
xor
sbb
adc
pushf
cmc
inc
mov
mov
adc
mov
mov
cmp
jg
jbe
arpl
ja
push
or
push
ss
in
mov
mov
les
and
hlt
xchg
push
jne
cmp
stc
test
mov
cdq
fimul
sub
lea
pushf
fisubr
nop
rol
test
push
ss
cmps
mov
sbb
mul
and
sub
std
push
ins
and
cmp
xlat
stc
mov
sbb
push
lahf
in
mov
mov
add
in
lods
jmp
pop
and
movs
call
push
shl
sbb
dec
mov
push
clc
loopne
call
sub
mov
mov
sahf
xchg
sbb
leave
mov
add
xor
mov
pusha
add
cwde
aam
ins
das
popa
cmp
int
out
pop
pop
pop
jg
or
adc
popa
push
or
xchg
xlat
cmp
aam
push
or
cmp
push
xchg
(bad)
aas
imul
(bad)
stos
fst
std
stos
out
inc
push
or
push
ja
leave
fist
mov
or
ret
lock
dec
xor
test
sub
jo
out
into
or
fwait
push
pop
sbb
les
jb
or
ss
shl
sbb
jecxz
ret
test
jl
call
fimul
pop
popa
pusha
add
pop
sub
loope
mov
xchg
cmp
and
mov
ja
jb
cmp
mov
movs
out
sub
fdivr
xchg
sbb
cmps
in
push
cs
pop
mov
mov
int3
adc
cmc
mov
iret
aad
loope
ins
add
fist
sub
and
sbb
or
inc
cwde
jmp
ret
(bad)
retf
cmp
sbb
mov
jo
sub
in
sub
add
xchg
push
add
jmp
sub
js
in
ror
push
loop
ret
pop
enter
adc
pop
lock
jae
mov
cmps
(bad)
mov
push
shr
jne
mov
popa
aad
fs
fist
mov
sub
xchg
sub
mov
div
outs
xor
inc
sub
add
xchg
ins
dec
or
mov
lds
mov
aam
inc
lahf
jmp
or
and
popf
xchg
mov
add
sti
rcr
cmps
in
enter
push
test
scas
leave
mov
fsubr
aad
add
or
mov
aam
fld
outs
(bad)
push
cmps
mov
inc
(bad)
xchg
repnz
stos
xor
xor
imul
xchg
sub
fs
aaa
mov
pop
sub
xchg
sar
rcr
enter
sti
xchg
mov
xchg
data16
daa
dec
cs
das
push
push
ret
mov
retf
inc
outs
lock
xchg
out
test
sti
mov
jb
pop
mov
call
xchg
shl
jmp
mov
not
push
cmp
mov
fwait
into
mov
cmp
ins
sti
aad
aaa
inc
mov
or
(bad)
and
jne
je
iret
sbb
pop
test
jb
fs
jns
mov
xchg
mov
loope
add
scas
outs
nop
in
mov
jne
ins
sub
retf
push
mov
cwde
push
sbb
rol
je
cmp
and
sub
dec
xor
cmp
or
(bad)
pop
in
cwde
aas
gs
xchg
bound
mov
fs
and
fsubr
in
pop
and
test
adc
cli
xor
pop
popf
sub
imul
dec
icebp
fidiv
xor
xchg
scas
and
jle
adc
cmps
adc
xor
out
push
hlt
lods
out
cmp
iret
sti
stc
aam
adc
sub
jp
out
jg
jle
fwait
push
xchg
xor
movs
xchg
icebp
pop
daa
adc
std
scas
inc
jecxz
in
daa
or
sub
daa
out
sti
daa
sti
inc
push
js
jae
push
or
push
ja
sbb
jnp
jnp
les
leave
push
stc
arpl
data16
ja
xor
stos
xchg
in
sub
repz
or
stc
mov
std
mov
inc
shl
cld
aaa
das
(bad)
fidivr
adc
icebp
(bad)
ss
cs
adc
ins
inc
arpl
daa
pop
ss
sbb
jle
add
mov
sbb
push
add
dec
lahf
fadd
and
sbb
cld
and
xchg
push
xchg
lods
or
dec
test
cwde
jnp
mov
xchg
add
pop
cmp
retf
fisttp
sbb
push
sbb
dec
mov
xlat
xlat
das
scas
lods
cmp
pop
sbb
call
jo
(bad)
xchg
push
sbb
or
jmp
ds
inc
fistp
fadd
shl
push
movs
mov
dec
and
xchg
mov
jmp
sar
imul
xchg
xchg
aam
loop
aas
imul
rcl
fwait
push
lock
fisub
pop
xchg
inc
shr
jecxz
loop
repz
(bad)
cli
cmp
mov
imul
jmp
mov
mov
(bad)
sbb
mov
mov
inc
pop
(bad)
xor
cmps
push
xor
sub
inc
int3
lods
mov
in
mov
jo
mov
inc
sub
sub
aas
dec
mov
xor
adc
xchg
pop
outs
jae
adc
std
cmp
pop
xlat
clc
cmps
sbb
jb
adc
pop
add
fnstenv
dec
test
jne
sub
call
add
nop
test
push
std
ret
es
jb
imul
leavew
mov
pop
lods
gs
pusha
dec
mov
lds
jp
cmp
jnp
mov
jns
dec
fwait
cmp
inc
sti
(bad)
jmp
pop
push
sub
lahf
das
cmp
pushf
and
mov
sar
xchg
push
call
mov
or
(bad)
cmp
inc
add
fistp
shl
mov
cli
pop
push
push
(bad)
mov
or
fadd
jne
bound
fcomp
(bad)
hlt
rcr
int3
mov
jo
clc
test
mov
inc
and
fimul
pop
fs
lock
jp
clc
inc
arpl
jp
(bad)
xchg
movs
or
add
push
(bad)
mov
xchg
aam
sbb
fimul
pop
lock
arpl
mulps
xchg
leave
ja
push
mov
mov
add
jne
in
in
xor
cld
mov
inc
mov
fs
mov
pop
xchg
mov
mov
fisttp
test
aas
sub
adc
iret
rcr
and
neg
and
mov
or
repnz
stos
and
xor
daa
or
push
push
jge
ss
and
ds
push
(bad)
ds
push
into
dec
push
lock
fs
(bad)
cld
lock
pop
iret
into
cdq
inc
jnp
cs
mov
adc
xchg
ficomp
add
out
mov
adc
mov
bound
dec
cmp
aad
inc
lea
or
and
ins
lahf
add
push
mov
cmp
xlat
jle
pusha
call
sbb
aam
movlps
les
mov
fsub
push
or
pushf
je
mov
les
fsubr
leave
mov
add
cdq
out
sub
push
hlt
(bad)
retf
or
jne
xchg
stos
iret
adc
test
add
adc
add
sub
or
nop
out
bound
data16
iret
lods
repnz
sub
xchg
inc
or
test
jge
push
fnsave
mov
into
jns
add
pushf
mov
loop
arpl
imul
pushf
ja
fsub
jo
(bad)
(bad)
imul
lods
icebp
pop
jno
popf
gs
xor
(bad)
dec
(bad)
or
(bad)
out
ss
js
jg
jp
xchg
and
jp
mov
aam
out
xor
and
ja
jae
dec
cmp
fisub
and
movs
cld
movs
add
pusha
push
push
push
mov
shl
sbb
test
out
sub
push
sub
cmp
mov
and
inc
and
scas
dec
ins
jge
lock
(bad)
sub
leave
jns
jl
xor
jae
ret
movs
loope
pop
(bad)
mov
jmp
xor
add
fidiv
pop
sti
cmp
ss
scas
jne
inc
xchg
sti
add
test
cmp
retf
jo
mov
dec
jge
pop
inc
daa
mov
pop
pop
fsub
add
data16
sub
call
loop
cs
jge
push
xchg
inc
dec
cmp
add
test
push
push
lahf
jne
dec
leave
or
mov
mov
loopne
rol
movs
imul
fdivr
call
mov
and
pop
repz
test
push
sub
xchg
dec
or
mov
mov
cdq
jne
es
clc
xor
jmp
leave
ja
ins
stos
dec
cmp
(bad)
popa
push
neg
(bad)
neg
arpl
mov
pop
jl
fild
add
pop
mov
pop
imul
mov
mov
xor
out
pop
adc
and
popa
jp
mov
jmp
(bad)
xor
out
scas
and
add
lods
dec
and
sub
jbe
or
call
mov
dec
mov
adc
xlat
aam
sahf
fdiv
adc
mov
cmp
sub
xchg
sbb
and
push
cmps
xor
in
jmp
add
outs
bound
arpl
lahf
sar
lahf
popa
test
cs
pop
jecxz
enter
dec
sbb
enter
pusha
push
rcr
stc
out
ret
lods
(bad)
stos
mov
loope
jnp
lds
mov
imul
loop
movs
xchg
jl
and
out
mov
adc
push
fild
add
inc
mov
scas
(bad)
jp
mov
ds
pop
mov
mov
enter
out
(bad)
pop
sub
bound
jae
dec
and
sbb
test
cmp
leave
jo
ja
shl
xor
xchg
mov
dec
xchg
test
pop
pop
jmp
sub
mov
or
xor
fldcw
ret
stos
dec
jl
xor
mov
ins
pop
call
inc
xchg
int
mov
add
in
or
leave
(bad)
xchg
test
lods
sar
adc
mov
and
in
cmps
in
push
add
sbb
pop
call
ret
jno
push
jno
cmps
add
push
stc
scas
pop
sbb
call
mov
cli
xor
jmp
int3
imul
cmps
ins
jmp
les
xchg
fnstcw
cdq
inc
lods
loop
dec
ss
in
xor
mov
loope
mov
xor
sbb
cld
hlt
repnz
(bad)
fdivp
jmp
daa
sub
sub
and
push
xor
mov
fs
push
es
movs
or
aas
pop
push
inc
in
pushf
(bad)
rsm
aas
add
popf
daa
sub
icebp
dec
mov
pop
cmps
in
mov
push
xchg
xchg
cdq
inc
lods
out
scas
not
mov
mov
or
adc
xchg
cmc
repz
inc
or
jnp
mov
jmp
fild
adc
dec
add
push
push
jecxz
fcom
lea
xor
xchg
mov
clc
sbb
and
pop
sub
fdiv
sbb
cmp
pusha
repnz
fnstsw
or
jno
mov
adc
outs
nop
repnz
stos
jmp
out
(bad)
cwde
sub
(bad)
(bad)
leave
cmp
or
lea
les
jns
cdq
daa
shl
lock
es
push
lahf
xchg
jmp
inc
sbb
cmps
lods
jmp
cwde
push
xchg
popa
cmp
or
loope
pushf
sbb
pop
scas
shl
inc
push
pop
jecxz
jno
clc
scas
icebp
data16
xor
fcomp
sbb
push
dec
pop
rcr
dec
test
mov
mov
sbb
retf
iret
aas
mov
inc
cmps
stos
test
jle
aaa
cld
sub
out
sbb
out
leave
xor
adc
lock
and
(bad)
mov
imul
mov
xchg
icebp
jbe
cmps
inc
je
(bad)
frstor
call
sub
xor
xor
sti
push
retf
mov
inc
adc
mov
cmc
aam
and
pop
mov
mov
dec
cmps
inc
mov
fistp
ds
or
lock
stos
(bad)
outs
scas
sub
add
jge
inc
dec
add
outs
sub
dec
out
sahf
in
pop
xchg
inc
adc
inc
(bad)
ffree
mov
add
add
sbb
idiv
fisub
push
fnstsw
mov
scas
fidiv
std
out
enter
push
sub
xor
fldenv
(bad)
div
mov
pop
pop
xor
hlt
test
pushf
aas
or
fimul
imul
stos
fnsave
lahf
mov
pop
push
in
inc
sub
mov
mov
xor
mov
daa
inc
or
cmp
out
bound
mov
stc
sbb
or
repnz
mov
or
addr16
sbb
jae
push
int
xor
div
mov
push
imul
pop
cmp
shr
ds
sahf
jae
ret
adc
shl
adc
pop
in
ins
and
inc
xchg
bound
adc
add
sbb
int
stc
mov
jns
aad
add
in
xor
jge
dec
push
stos
mov
jge
shr
loope
cmp
jg
sub
sbb
cmp
std
mov
cwde
add
(bad)
jns
jge
pop
inc
aaa
sahf
out
or
pop
mov
mov
xor
es
sub
pushf
sub
sbb
pop
pop
rol
jp
xchg
ds
jo
add
std
mov
int3
shr
pop
ret
push
sbb
aas
sub
and
sbb
icebp
dec
push
xchg
xor
(bad)
jbe
add
pop
mov
movs
adc
jnp
leave
iret
lea
call
push
fs
je
xor
cmps
fnsetpm(287
sub
mov
loope
ds
cdq
cmp
inc
cmps
sti
fist
inc
pop
and
jg
add
sbb
sbb
push
push
(bad)
jle
shr
inc
and
das
mov
xchg
pop
inc
shl
xor
repz
aaa
scas
sub
int3
jmp
jne
lods
iret
ins
inc
data16
lds
rol
pop
test
sbb
inc
mov
ins
adc
loope
cli
add
cmps
mov
mov
ret
cdq
(bad)
fmul
push
jp
repnz
fimul
and
pushf
inc
shl
mov
sahf
or
fwait
lds
jae
retf
inc
cmovae
sti
adc
in
(bad)
pop
loope
bound
pop
sub
cmp
imul
or
cli
int3
add
or
(bad)
(bad)
ficom
inc
mov
pop
push
mov
dec
mov
add
dec
adc
add
data16
mov
mov
ret
mov
xchg
xor
rcr
rol
pop
addr16
pop
mov
jl
jp
add
repz
ret
jle
aad
adc
call
or
ficomp
into
(bad)
lods
adc
pop
imul
ss
(bad)
mov
xchg
pop
adc
push
mov
scas
sub
jne
mov
xchg
mov
mov
ficomp
mov
lds
pop
loop
add
lds
dec
sbb
mov
mov
sbb
ins
xlat
test
imul
mov
pop
fs
bound
in
loope
xchg
dec
leave
out
imul
gs
stc
out
aas
xchg
add
je
call
scas
inc
xlat
pop
aas
fnstenv
mov
pop
call
aam
aad
div
or
push
cdq
add
sbb
(bad)
shl
sub
jg
jecxz
inc
jge
push
xchg
movs
jns
retf
adc
jne
dec
mov
push
movs
dec
xor
pop
xor
sbb
sbb
push
in
sub
cmc
sub
aaa
mov
or
outs
loope
and
cwde
push
mov
loop
pop
push
call
xor
fsubrp
sbb
jg
mov
mov
cmp
jbe
xchg
dec
dec
mov
sbb
mov
dec
test
imul
test
cmp
(bad)
pusha
sar
adc
jl
jns
mov
ret
out
or
mov
stos
adc
scas
gs
jno
jmp
aad
cmp
retf
jl
dec
sub
sub
mov
push
fsub
(bad)
or
sar
je
xchg
mov
out
and
inc
sbb
and
xor
jmp
pop
lods
pop
lock
(bad)
pop
xrelease
pop
daa
lods
mov
(bad)
jo
stc
ds
push
push
cdq
test
jae
nop
test
lods
lods
pop
inc
xchg
add
sub
test
mov
mov
stos
rcr
mov
(bad)
cli
cmp
adc
pusha
adc
data16
mov
fwait
dec
cli
test
out
pop
(bad)
loopne
mov
inc
fld
ds
outs
inc
popf
push
push
jg
retf
adc
xchg
loopne
lock
mov
ret
add
push
dec
imul
aas
lea
dec
mov
cvttps2pi
xchg
js
jmp
dec
js
add
xchg
jmp
sub
(bad)
arpl
add
mov
dec
shl
xor
inc
retf
cmp
push
dec
add
arpl
push
leave
and
add
(bad)
out
dec
in
jo
popf
data16
pop
out
and
inc
fmul
adc
mov
jle
cmp
lahf
adc
jo
mov
mov
inc
mov
or
jl
mov
mov
inc
xchg
xchg
cmp
cmp
outs
push
jnp
mov
push
test
mov
loopne
ds
mov
or
push
jnp
iret
dec
add
xor
out
clc
cmp
and
inc
ja
ss
(bad)
mov
push
hlt
pop
cs
jbe
jae
scas
jne
push
add
stc
bound
arpl
sub
call
cs
sub
sbb
mov
adc
nop
and
push
int3
jns
ror
sub
pop
or
lock
mov
add
enter
jne
push
xchg
or
inc
in
cmp
cdq
push
xchg
mov
scas
ficom
call
(bad)
xor
jmp
test
fild
aam
leave
test
out
inc
jns
cmp
into
aad
sbb
rcr
or
ret
gs
sub
inc
ror
retf
pop
mov
adc
push
dec
jo
cwde
jo
(bad)
bound
cmps
cmp
mov
mov
lock
nop
pop
cmps
adc
clc
imul
(bad)
fld
push
into
mov
das
leave
mov
pushf
mov
lods
rcl
jns
mov
cmp
je
jo
std
add
jae
xor
pusha
cli
mov
mov
jne
addr16
dec
xor
inc
push
adc
js
and
jbe
shr
mov
lahf
dec
or
fidiv
adc
mov
cs
cmp
aam
adc
stos
pop
in
stos
(bad)
out
push
js
lahf
xor
std
call
sbb
retf
loope
adc
pop
loopne
dec
leave
add
mov
(bad)
inc
outs
xlat
out
ds
and
and
sti
mov
xchg
or
enter
imul
enter
cmp
push
sbb
pop
leave
retf
jmp
sub
iret
add
and
jno
scas
inc
fsub
adc
add
cli
xor
(bad)
xchg
mov
cmp
mov
and
pop
je
jge
cmp
jb
lods
dec
sar
dec
xchg
cmp
add
leave
push
and
test
shl
out
sbb
mov
out
cmp
dec
inc
ror
mov
xchg
movups
sbb
pop
lods
xor
imul
or
sub
lahf
cmp
ds
or
sbb
pop
xchg
in
mov
xor
jp
or
adc
xchg
hlt
pop
cdq
mov
loopne
jp
aam
mov
pop
and
pop
popa
jnp
jo
mov
not
hlt
push
add
mov
mov
and
pop
(bad)
jo
imul
mov
inc
xchg
push
add
pop
pop
out
and
adc
jmp
or
std
mov
mov
jecxz
jno
int3
in
sub
or
lahf
ror
xlat
leave
xchg
out
rcl
mov
sbb
mov
pop
inc
ret
cmp
sub
and
pop
adc
shl
icebp
adc
inc
lahf
pushf
sbb
(bad)
leave
push
push
xor
push
inc
push
out
test
daa
cdq
or
sbb
push
lods
push
out
sub
pushf
xchg
loop
(bad)
fadd
ror
mov
xchg
adc
and
popf
aaa
or
inc
mov
aas
ins
scas
push
and
and
mov
xchg
and
xlat
leave
sub
cmp
or
arpl
fucomip
xchg
or
adc
movs
mov
add
repnz
and
jmp
ret
cmp
outs
clc
inc
mov
dec
mov
(bad)
into
das
mov
arpl
outs
push
into
(bad)
pop
push
mov
mov
jnp
int
inc
cdq
jl
cmp
xchg
mov
popf
push
pop
mov
push
pop
or
fdiv
fst
push
add
icebp
icebp
pop
dec
mov
(bad)
adc
adc
(bad)
(bad)
loop
push
test
ret
add
xlat
sbb
mov
cli
or
add
das
inc
mov
push
xor
outs
mov
mov
js
sbb
add
or
je
adc
scas
xlat
pop
dec
icebp
and
mov
(bad)
stos
mov
pushf
cmp
push
test
xor
stos
add
add
imul
js
pushf
out
lock
lds
addr16
jne
push
mov
sahf
outs
mov
sub
pop
push
xchg
sbb
es
and
repz
mov
ret
ss
hlt
imul
inc
shl
pop
jmp
inc
enter
sub
adc
loopne
mov
pop
xchg
iret
ds
mov
cmp
rcl
cmp
push
mov
jp
sub
ds
mov
or
push
cmc
gs
adc
inc
adc
mov
adc
scas
xchg
mov
inc
sbb
lea
or
mov
jne
clc
sbb
out
or
xor
(bad)
push
(bad)
not
lods
mov
push
out
mov
xchg
ss
test
push
mov
push
jno
pop
pop
or
sbb
cmp
sbb
loope
test
push
pop
js
ret
mov
and
and
xor
adc
test
repnz
xchg
adc
mov
fld
push
shl
movs
xlat
cmp
jg
mov
pop
test
pop
loop
leave
lds
xchg
outs
xchg
sahf
out
aad
dec
shr
std
sbb
mov
je
gs
ds
fiadd
iret
mov
or
sbb
in
enter
hlt
dec
xor
push
push
arpl
cwde
stos
add
stos
mov
and
mov
and
aas
cmps
mov
pushf
and
or
loopne
and
sbb
mov
pop
aaa
lds
out
out
dec
cmp
pop
adc
(bad)
sbb
stc
loop
nop
and
jne
ret
(bad)
imul
inc
aaa
outs
pop
sub
cmp
xor
mov
push
dec
dec
out
xchg
stos
cmc
jmp
inc
jnp
cmc
pusha
dec
jp
add
push
adc
stc
dec
mov
jmp
push
shr
mov
mov
hlt
dec
jae
or
sbb
(bad)
cmc
das
xor
jp
lahf
dec
add
es
ins
cmp
mov
and
imul
xchg
ror
mov
and
or
movs
dec
or
pusha
mov
or
lea
pop
pop
mov
(bad)
lods
sbb
ja
push
out
jo
into
mov
loop
mov
adc
test
or
mov
mov
add
pop
dec
jl
adc
push
dec
mov
sbb
repnz
into
pop
jle
mov
outs
pop
and
sar
jle
(bad)
mov
shl
or
cmp
or
cs
shl
js
fcmovne
cld
xor
jno
int3
cwde
mov
les
mov
jmp
mov
mov
call
lahf
xchg
ret
mov
jbe
rol
retf
scas
out
jo
ds
ret
push
pop
inc
dec
pusha
sbb
test
pop
dec
(bad)
mov
xchg
fs
leave
pop
pop
xor
jmp
stos
add
dec
mov
lds
fadd
stc
enter
and
sub
dec
rcl
xchg
or
iret
pushf
ret
jle
xor
int3
pop
test
leave
inc
dec
cmp
xchg
and
imul
stos
mov
dec
mov
in
test
out
and
bound
add
lods
dec
ins
cs
mov
jmp
mov
jmp
push
les
sbb
rol
cmp
in
push
call
sti
repnz
xchg
popf
xchg
in
das
(bad)
adc
pop
out
xor
xor
mov
loop
jmp
ret
fst
jecxz
inc
popf
xor
cmp
and
inc
add
xor
into
mov
xor
or
adc
push
and
sbb
std
lahf
(bad)
sbb
mov
dec
jns
mov
push
(bad)
mov
cli
pusha
or
jmp
test
mov
jge
pop
ret
test
popf
call
pop
or
shr
lds
ja
add
or
xchg
mov
je
and
ror
test
mov
or
sub
mov
push
pop
sbb
xchg
xor
ja
test
push
jge
shr
(bad)
jmp
mov
xor
sub
fild
jne
js
push
xchg
iret
sti
icebp
idiv
push
push
pushf
movs
sbb
add
ins
sbb
mov
test
push
js
cmps
adc
pop
sbb
xchg
test
jno
inc
sbb
(bad)
jmp
mov
sti
xchg
sar
je
cs
daa
push
fisubr
xlat
div
sbb
rcl
mov
outs
xor
cmp
pop
das
xchg
mov
inc
pop
mov
ins
pop
jmp
cwde
xchg
push
dec
jp
mov
pusha
or
adc
and
push
mov
adc
in
(bad)
pop
dec
adc
stc
add
and
aad
inc
dec
fild
jne
sti
or
xchg
cmp
shr
out
add
std
sbb
mov
xchg
outs
pop
dec
and
daa
inc
retf
gs
cmp
gs
je
dec
pop
mov
shl
mov
retf
into
lahf
idiv
fisttp
mov
jae
lds
dec
xor
cs
jp
icebp
jg
and
pop
mov
imul
xchg
pop
std
mov
daa
jp
out
rol
xchg
sub
outs
call
ss
(bad)
stc
and
ss
repz
scas
jp
jmp
iret
not
push
and
leave
je
xchg
(bad)
popa
inc
std
mov
mov
lods
rcl
je
movaps
lahf
in
pop
cs
std
push
jmp
add
mov
jge
retf
cld
dec
add
adc
loope
in
movs
inc
in
mov
and
push
int3
pop
push
repnz
xchg
stc
rcl
inc
xlat
cmp
lods
sar
dec
inc
movs
repz
shl
dec
outs
inc
jno
enter
int3
movs
call
mov
pop
mov
ret
push
fsub
push
push
sbb
cmp
repnz
inc
cmp
rol
cmp
ins
rcl
sbb
(bad)
test
push
push
xor
xor
jg
mov
mov
sub
push
test
in
push
(bad)
icebp
js
cdq
mov
enter
dec
es
inc
or
enter
mov
pop
cmps
dec
mov
lods
dec
clc
popa
push
push
leave
dec
dec
(bad)
pop
pop
adc
stos
int3
cs
dec
movs
and
ret
js
mov
ret
call
add
pop
mov
cmp
dec
in
inc
pop
adc
xchg
dec
jmp
push
fdiv
mov
xor
int
pop
daa
sahf
int
mov
dec
mov
jno
dec
mov
fnsave
rcl
adc
push
sub
mov
add
push
adc
call
and
dec
out
rcr
retf
les
lock
jb
jmp
outs
cmps
and
stos
xor
mov
and
or
sub
pop
cmp
xchg
and
scas
jae
jae
xor
out
fbstp
popf
clc
jl
loopne
xchg
inc
push
out
mov
or
pushf
xchg
(bad)
icebp
jns
scas
btc
popa
mov
dec
daa
call
mov
mov
arpl
and
lock
or
cmp
enter
lods
mov
mov
push
jge
pop
mov
lods
and
(bad)
jae
repnz
test
push
in
push
jle
inc
stos
iret
cmps
lds
push
stos
mov
fist
jp
cmp
xchg
cmp
jmp
mov
push
retf
shl
(bad)
xchg
jbe
adc
push
(bad)
retf
jl
lock
xchg
mov
ins
sub
dec
ja
inc
lock
movs
adc
pop
push
lea
test
sbb
repz
(bad)
lock
jae
pop
sbb
(bad)
lods
push
mov
(bad)
sbb
and
ror
aaa
int
sbb
mov
mov
mov
leave
outs
mov
add
enter
push
shl
aad
pop
rcl
pop
data16
imul
jp
scas
sub
stos
xor
cli
jmp
loopne
call
into
or
or
push
mov
and
icebp
mov
and
sar
and
cdq
(bad)
jns
(bad)
mov
inc
sub
retf
sub
mov
xchg
jg
and
pop
inc
lahf
mov
add
jecxz
popa
pop
test
stos
lods
daa
add
std
sub
inc
add
je
addr16
add
mov
loopne
lahf
mov
enter
fdivrp
fucomp
pop
popf
loop
in
leave
mov
push
push
jmp
ret
cmc
push
xor
mov
test
stos
test
push
stc
jg
inc
mov
adc
retf
xor
test
in
mov
retf
mov
dec
inc
gs
ret
cmp
xchg
pop
sub
mov
mov
std
push
repz
hlt
cmp
sub
ja
mov
jb
pop
(bad)
mov
pop
mov
lahf
cmp
dec
aaa
cs
call
shl
stos
repnz
push
pushf
inc
outs
or
sti
les
push
clc
ret
pop
fldenv
mov
jae
mov
jno
jnp
scas
dec
jne
cmp
rcl
int3
fcomp
loopne
pop
sar
inc
lods
inc
movs
push
xor
push
fs
shl
sub
retf
pop
sbb
fnstsw
mov
test
sahf
mov
pop
add
jae
rcr
test
call
shl
inc
lea
test
les
mov
int
push
xor
adc
or
pop
inc
mov
fild
lahf
fs
dec
cld
outs
call
xor
adc
mov
imul
inc
out
loopne
cld
mov
test
dec
icebp
xchg
and
xchg
add
adc
adc
push
mov
sahf
mov
xchg
dec
sub
imul
pop
scas
jb
stos
sub
int3
add
push
or
xor
jae
aaa
jmp
xchg
push
jmp
pop
icebp
xchg
test
cmp
push
ss
inc
push
les
sahf
sbb
inc
(bad)
cmp
push
pop
push
fwait
sbb
or
dec
push
jl
dec
aas
ins
fbstp
mov
mov
test
mov
lahf
outs
or
cwde
imul
jg
xchg
es
push
leave
cld
pop
rol
xchg
test
ret
and
jmp
pop
inc
xlat
fwait
add
xor
ret
mov
pop
and
rcr
jmp
neg
mov
add
and
sub
lock
out
mov
outs
ret
addr16
or
(bad)
aad
and
mov
test
and
pop
mov
mov
cs
fild
push
mov
cld
add
dec
pop
jle
pop
jnp
es
dec
xchg
pop
dec
test
mov
push
repnz
popa
sbb
or
mov
sbb
jne
sbb
hlt
jns
retf
rol
loop
test
sub
push
in
(bad)
mov
mov
call
mov
mov
cmp
(bad)
lahf
pop
leave
ja
push
inc
gs
int3
(bad)
fisttp
fs
inc
inc
jo
mov
cmps
idiv
sbb
mov
mov
fadd
nop
inc
imul
in
pop
test
jge
add
das
xor
test
js
adc
scas
push
clc
(bad)
mov
loope
outs
inc
push
mov
(bad)
jg
dec
(bad)
hlt
test
xor
dec
inc
hlt
jae
rol
and
(bad)
daa
aas
and
inc
jne
dec
jae
jno
out
js
pop
(bad)
clc
into
sbb
popa
repnz
xchg
push
cmc
sub
pop
mov
xor
ins
cmp
iret
cmc
push
into
gs
and
out
ret
gs
pop
popa
popa
push
fistp
mov
aas
(bad)
sar
inc
mov
inc
xchg
inc
pop
ds
leave
add
outs
fidivr
or
xchg
in
or
out
mov
cmps
test
mov
pop
xor
cmp
(bad)
pusha
ins
fadd
(bad)
cmp
pop
int3
xor
add
and
scas
xlat
push
mov
rcl
pop
pop
inc
mov
pop
inc
sub
lock
ficom
das
repnz
(bad)
int
test
xchg
dec
nop
sbb
int3
inc
mov
pop
mov
mov
cmp
retf
scas
jns
jno
add
and
popa
push
jae
int3
push
jl
dec
push
inc
mov
loop
jbe
ins
adc
inc
push
in
xor
xchg
sahf
add
jg
cld
(bad)
js
fld
out
jge
xchg
es
imul
add
dec
or
xor
and
and
sar
push
xor
das
enter
mov
int
out
(bad)
fwait
inc
and
dec
jmp
xor
(bad)
xchg
cmps
xor
mov
mov
int
fnstcw
jb
cmps
mov
fs
movs
jp
in
pop
add
bound
adc
xchg
adc
sub
xor
xchg
inc
ret
movs
hlt
xor
mov
movs
pop
(bad)
(bad)
enter
and
cs
push
dec
sub
xor
mov
(bad)
mov
add
ret
cmp
dec
sub
jmp
xchg
cmp
test
call
jnp
(bad)
out
mov
jmp
lods
outs
test
ins
jmp
mov
cmp
xchg
jge
aam
xchg
dec
add
sbb
mov
jmp
pop
xor
adc
mov
je
idiv
cmp
ret
adc
mov
repnz
fwait
mov
jmp
or
mov
adc
movs
xor
(bad)
or
call
fdiv
mov
mov
hlt
test
sub
pop
push
stos
movs
xchg
jne
dec
nop
jbe
(bad)
das
pop
cld
sub
cmp
adc
inc
rcr
xchg
jne
scas
add
loopne
and
call
lea
lods
xchg
dec
outs
enter
sbb
jecxz
fmulp
fs
call
call
retf
push
and
adc
mov
loop
cmp
dec
adc
popf
dec
mov
cmp
and
scas
mov
adc
mov
sub
sar
aaa
sti
test
add
fistp
ror
fistp
mov
push
std
and
mov
lds
push
into
fbstp
outs
out
mov
ja
pop
inc
lods
push
out
jb
nop
cmp
xor
leave
cmc
ror
add
sbb
(bad)
sbb
mov
push
and
shl
jne
adc
arpl
pop
mov
stc
loop
nop
shl
xchg
or
and
push
jl
mov
push
sbb
and
lock
mov
and
dec
pop
mov
push
(bad)
cmp
or
mov
or
mov
je
xchg
fisttp
xchg
inc
jp
xor
add
jmp
cmp
psrlw
cdq
xor
push
ja
sbb
repnz
mov
into
in
push
pop
in
shr
ret
jo
dec
popf
in
ret
stos
dec
fwait
ret
dec
es
adc
jns
cmp
movs
xor
aaa
mov
add
inc
arpl
leave
cmp
scas
loopne
inc
push
aaa
cwde
test
mov
shl
in
mov
out
out
jne
mov
jecxz
iret
jmp
mov
xor
bound
or
mov
add
add
mov
shl
inc
popa
push
jp
(bad)
hlt
repz
push
xor
xchg
jle
loope
pusha
je
pushf
cmp
jno
aam
icebp
adc
xchg
cmp
push
pop
loopne
sub
inc
jne
in
outs
pop
mov
jmp
mov
jbe
pusha
and
retf
cmp
pop
out
sub
adc
mov
movs
push
dec
movs
and
aaa
mov
movs
jg
push
int
adc
dec
jb
adc
mov
or
push
icebp
pop
out
mov
out
outs
mov
test
scas
xor
hlt
clc
sub
xor
inc
movs
aam
mov
jnp
inc
imul
pop
call
pop
test
retf
(bad)
sub
xor
sbb
icebp
inc
ja
sar
(bad)
cmps
and
cdq
dec
mov
pop
mov
jmp
add
push
push
retf
jns
test
mov
das
call
dec
sbb
inc
mov
stos
pushf
mov
pushf
scas
pop
das
loope
push
setb
jbe
mov
inc
(bad)
jmp
fist
shl
push
push
inc
push
out
cli
call
sub
mov
cmp
clc
inc
mov
mov
xchg
cld
nop
sbb
sbb
aad
fadd
pop
arpl
mov
test
pop
nop
lock
imul
jns
push
add
pop
jo
(bad)
cdq
mov
ss
loopne
xchg
(bad)
stos
add
mov
(bad)
xlat
ds
std
push
pop
adc
outs
pop
les
mov
or
jne
add
pop
or
out
ret
xchg
or
mov
xchg
mov
mov
xchg
xchg
icebp
push
mov
or
lods
jg
aas
ja
inc
xor
(bad)
cli
push
(bad)
arpl
stos
dec
in
je
cli
cmc
ja
sub
popa
push
aaa
xchg
popa
cwde
sahf
dec
xchg
pop
jmp
leave
xor
xlat
xchg
dec
push
(bad)
sub
mov
scas
popf
in
xor
and
adc
ds
in
adc
pop
enter
dec
dec
mov
mov
jb
in
je
retf
and
add
mov
xchg
nop
jg
dec
loope
loop
add
or
cmps
cmp
test
shl
retf
iret
bnd
add
ins
sbb
push
inc
jle
mov
repz
rcr
js
pop
mov
ins
fisttp
ss
cs
cmp
repnz
sub
std
popf
test
xchg
cwde
mov
add
push
sub
mov
add
sub
outs
inc
int3
or
stc
shl
push
mov
pop
bound
cmc
mov
pop
adc
sar
call
mov
in
movs
pop
adc
test
in
jno
xor
pop
or
pop
(bad)
sbb
test
out
mov
push
gs
gs
mov
pop
pop
outs
repz
cmp
inc
out
das
iret
pop
push
cdq
xchg
mov
xor
aam
mov
popa
mov
lahf
push
dec
push
jge
cmps
adc
ret
add
call
enter
push
add
mov
mov
mov
sub
xchg
call
mov
jg
cmp
push
sahf
and
cwde
mov
enter
xchg
cmp
inc
or
icebp
popa
dec
mov
or
lods
and
rol
imul
aad
push
push
es
sti
int
mov
fs
or
mov
test
in
jp
adc
fstp
mov
jecxz
div
jmp
and
mov
lock
mov
das
adc
cmp
scas
xchg
mov
jno
add
(bad)
bts
or
jecxz
xchg
dec
hlt
mov
or
jge
stos
lods
push
stos
(bad)
jno
cmp
(bad)
xlat
xor
movs
jp
cmp
pop
es
xor
rcr
mov
xor
jno
das
rcr
(bad)
icebp
push
sbb
lods
sbb
mov
xchg
dec
sbb
lock
std
and
(bad)
lea
add
sub
inc
cmp
shl
jb
(bad)
lea
xlat
xchg
mov
movs
arpl
xchg
jl
out
ss
out
ret
(bad)
(bad)
fld
pop
push
retf
add
sar
pop
div
sbb
adc
push
rol
mov
mov
dec
mov
and
mov
inc
push
sahf
xchg
cmp
fistp
push
pushf
out
out
jo
(bad)
mov
sub
sbb
pop
lods
(bad)
xchg
shl
push
sbb
mov
repnz
jbe
jb
mov
repz
adc
mov
mov
neg
pop
sub
lahf
xor
jmp
pop
jbe
mov
inc
lock
leave
into
mov
into
hlt
nop
out
imul
mov
in
dec
test
cld
test
fimul
cmp
mov
shl
sbb
cmp
retf
dec
add
push
test
inc
push
add
xchg
sub
fsubr
jo
cdq
ins
push
and
mov
hlt
xor
and
iret
iret
add
test
call
(bad)
lea
sbb
ss
cmp
bound
or
xlat
push
or
rol
movs
lods
clc
adc
mov
add
cmp
sahf
jne
pop
mov
cdq
or
sub
call
inc
mov
repz
je
pop
push
mov
sbb
jg
fdiv
aaa
std
loope
fld
add
jge
inc
lea
int
xchg
or
stos
jns
jp
int3
addr16
push
dec
or
xchg
enter
ss
push
sahf
or
add
test
jg
loope
xor
test
add
push
dec
push
mov
cmps
retf
push
inc
push
xor
pop
xor
xor
pusha
out
mov
sti
rcr
push
xchg
leave
cmp
mul
push
pop
scas
cmp
(bad)
cmp
xchg
imul
jle
cmp
sbb
into
loope
ffree
inc
push
cmps
in
mov
dec
xchg
std
imul
repz
pop
jge
lods
fsub
dec
dec
sub
pop
sbb
add
ret
jecxz
int
call
sbb
cld
not
xchg
test
push
not
push
out
cmps
add
sub
ins
cmps
mov
cmps
fldenv
sub
mov
add
hlt
lds
int
loope
sbb
loope
int3
xlat
fcom
(bad)
xrelease
xchg
lock
fisttp
out
mov
loopne
jbe
ds
inc
das
jmp
nop
mov
push
in
mov
(bad)
mov
and
or
sbb
sub
add
lahf
adc
(bad)
iret
fdivr
inc
mov
jo
ss
sbb
dec
cmps
mov
push
xchg
fcmovbe
ficomp
in
jae
xchg
or
(bad)
call
fld
(bad)
outs
dec
mov
mov
xchg
test
fld
dec
or
call
xor
mov
dec
inc
or
xchg
sub
cli
cmp
and
dec
push
mov
aaa
mov
cmp
cmp
and
adc
mov
pcmpeqb
(bad)
sub
pushf
rcl
cmps
loop
test
xchg
mov
call
out
mov
push
out
xor
adc
retf
stos
dec
div
pop
mov
sub
jl
add
and
sbb
bound
shr
in
pusha
cmp
mov
aam
or
aam
mov
inc
movs
je
cwde
dec
lock
or
adc
xchg
loop
pop
lods
jo
sbb
adc
add
dec
mov
lods
ret
sub
cs
mov
mov
popa
push
jmp
not
(bad)
mov
imul
bound
add
test
jmp
shl
xchg
xor
jb
rcr
shl
scas
movs
jge
sbb
xchg
cmovne
bound
pusha
out
cli
jge
cmc
push
add
mov
lods
nop
dec
xor
iret
sbb
adc
enter
mov
lock
cmovle
pop
adc
jae
sbb
mov
out
sbb
push
ins
shl
fdiv
in
jp
mov
dec
mov
adc
jnp
dec
es
and
mov
sub
call
movs
popa
int3
mov
repnz
xchg
mov
sbb
sar
jmp
call
mov
jge
jne
inc
dec
sbb
xchg
icebp
(bad)
sub
dec
push
mov
mov
push
std
iret
dec
or
in
dec
push
push
fcom
aas
outs
add
dec
ja
pop
push
xchg
inc
retf
xchg
arpl
stos
sbb
(bad)
mov
aad
imul
fdiv
movs
inc
retf
xor
push
jb
fisttp
adc
mov
pop
push
mov
das
lods
ror
and
or
daa
call
push
pop
aam
(bad)
faddp
ret
and
and
mov
and
test
mov
cmp
lods
xor
outs
jp
cdq
gs
(bad)
enter
dec
adc
xlat
pop
lods
inc
jb
pushf
xor
in
in
push
pusha
mov
add
(bad)
scas
and
int3
stos
pop
jo
inc
test
jp
xchg
loop
pop
int3
jno
mov
add
cli
jmp
push
call
cmps
jnp
fnstcw
nop
add
add
out
sub
mov
mov
cmps
sbb
into
dec
bound
mov
mov
pop
and
gs
cmp
push
test
shl
or
sbb
aad
sbb
or
cmp
mov
jbe
popw
hlt
sbb
leave
loop
and
sar
add
cmc
(bad)
push
out
sbb
jmp
adc
inc
jno
out
dec
out
ret
add
lods
xchg
mov
inc
jnp
scas
or
dec
mov
into
aad
mov
pusha
push
xor
(bad)
aas
retf
stc
add
outs
push
jp
jbe
push
(bad)
xchg
dec
pop
popa
out
cmps
movs
inc
fisub
xchg
jae
test
inc
pop
imul
ja
cmp
xor
add
xchg
cmps
push
pop
int3
dec
or
inc
push
icebp
mov
inc
les
shl
mov
movs
xor
or
test
add
mov
sbb
retf
push
retf
aaa
sbb
and
scas
jmp
inc
in
add
xor
in
mul
cmp
(bad)
push
mov
jecxz
mov
(bad)
dec
stos
jge
add
ds
dec
outs
mov
js
mov
mov
pop
fdiv
cli
hlt
aad
mov
fld
fsubr
mov
pop
pop
pop
sub
and
mov
dec
sub
int3
sub
sbb
cli
xchg
jns
mov
mov
int3
mov
xchg
adc
retf
sbb
repz
(bad)
cmp
jae
in
add
push
aad
loopne
daa
or
mov
adc
sbb
icebp
test
jg
sub
add
pusha
xlat
call
(bad)
ret
daa
int3
fwait
lods
stos
(bad)
gs
add
stos
data16
in
xor
neg
pop
xchg
add
inc
mov
cmp
add
cmc
mov
mov
or
into
or
and
dec
add
sbb
mov
cmp
loopne
adc
push
aaa
add
sahf
lods
jo
out
xchg
lock
clc
in
pop
movs
xchg
push
xlat
sub
mov
dec
push
jnp
or
pop
fs
pusha
jl
inc
pop
and
or
pop
cmps
loop
sub
jle
mov
cmp
jl
(bad)
out
jmp
xchg
add
xchg
sar
pop
xchg
stos
inc
jo
push
es
cmp
xrelease
mov
in
imul
inc
mov
and
mov
bound
bound
xor
pop
xchg
test
dec
pop
fsubr
imul
bound
sbb
ret
pop
shl
adc
fwait
jg
out
sub
mov
ja
in
or
scas
dec
push
add
setg
pusha
inc
out
cli
jne
repnz
pop
mov
add
cmp
or
fcom
stc
sar
jge
outs
and
jnp
outs
dec
les
inc
retf
push
ins
scas
je
cmp
mov
es
rol
test
movs
or
fmul
xor
sar
sbb
jmp
pop
xchg
call
inc
daa
iretw
pop
jecxz
lea
pop
aam
mov
xor
push
(bad)
fwait
stos
stos
js
or
jo
push
mov
gs
(bad)
adc
aaa
or
ins
cwde
or
push
mov
test
scas
mov
imul
stc
out
cmp
pop
hlt
(bad)
sbb
cs
aam
mov
mov
fidivr
sti
jmp
and
sbb
cmp
lods
dec
jns
iret
sbb
pop
fcom
cmp
adc
adc
out
inc
retf
sub
xchg
std
mov
add
dec
out
mov
cli
mov
jo
gs
ror
(bad)
loopne
add
xor
shl
hlt
outs
dec
add
inc
cdq
jp
jle
push
push
sbb
mov
mov
mov
lods
mov
push
into
pop
dec
test
push
sub
sahf
shr
daa
or
fcom
bound
outs
retf
mov
cdq
xchg
out
rcl
ret
adc
xchg
jno
out
mov
shl
(bad)
pusha
push
fild
and
lahf
popf
loopne
fbld
mov
pop
xchg
loope
mov
or
test
ds
(bad)
das
out
aad
outs
cs
imul
cdq
dec
mov
and
mov
and
rcr
(bad)
in
cmc
adc
nop
movs
into
jne
jp
out
adc
ror
(bad)
pop
pop
mov
cli
ficom
test
mov
gs
xchg
popf
add
test
nop
lds
aam
dec
pusha
jge
scas
or
push
push
std
cmc
inc
mov
mov
sub
mov
ins
pop
ja
leave
inc
lea
sub
xchg
xor
mov
rcr
scas
dec
sahf
sub
ror
mov
adc
retf
or
dec
inc
jno
push
mov
jb
mov
into
inc
dec
jmp
or
pusha
dec
daa
pop
idiv
mov
fsub
pop
xlat
aam
add
enter
pop
add
pop
cwde
xchg
ret
xchg
les
xchg
ffree
int
xor
xlat
dec
cmp
and
jmp
pop
inc
ret
sub
arpl
xchg
adc
in
aas
or
mov
scas
ds
shl
loope
mov
cmp
and
stc
push
sbb
push
shl
mov
stc
mov
mov
or
adc
push
push
mov
pop
mov
lock
and
push
mov
pop
out
fsubr
or
cmps
imul
retf
mov
cmc
dec
lods
(bad)
mov
scas
jo
jmp
arpl
sbb
inc
or
mov
dec
ja
xor
scas
nop
test
movups
fidiv
dec
out
mov
dec
scas
test
add
repnz
sub
into
scas
out
jl
daa
and
mov
dec
stc
jo
pop
xor
sbb
push
pop
ret
jmp
(bad)
lock
pop
and
arpl
cdq
add
mov
push
ins
test
dec
xor
movs
fidivr
sub
in
jl
mov
sbb
lods
add
inc
fist
xchg
out
fstp
nop
cmp
push
aas
pushf
dec
leave
movs
or
fs
das
adc
sbb
xor
mov
cs
cli
mov
in
push
mov
outs
imul
xor
inc
adc
inc
mov
jne
adc
pop
retf
mov
fidiv
mov
pop
cs
add
sbb
fmul
jno
shl
jnp
or
shl
pushf
xor
rcl
or
sub
cmp
outs
or
jmp
loopne
(bad)
jmp
xor
mov
fwait
pop
pop
cmp
fucomi
pop
arpl
ficom
rol
fcmovbe
or
repz
ror
inc
push
sbb
mov
adc
and
shl
es
pop
cli
ret
adc
(bad)
clc
push
(bad)
fst
or
pushf
aad
mov
rcl
or
(bad)
jp
fwait
or
cmp
stos
out
mov
mov
fdiv
movs
inc
outs
ficomp
rol
push
mov
dec
mov
push
and
div
ds
(bad)
sbb
add
cmps
test
lods
jl
adc
adc
xchg
rcr
clc
ins
iret
or
ret
lea
(bad)
out
fdivr
loop
leave
pop
push
iret
mov
xor
or
xor
or
std
shr
scas
cmp
das
xor
movs
aad
arpl
mov
dec
sub
aam
fwait
mov
xor
cs
mov
(bad)
cmc
xor
jnp
push
cld
add
push
mov
out
jb
mov
shl
cmp
mov
xchg
rol
pushf
dec
dec
and
mov
jno
inc
pop
test
mov
(bad)
or
fdivr
mov
push
xchg
test
mov
adc
repz
sub
xchg
loop
cmps
mov
mov
test
outs
cld
or
sub
push
sbb
popf
add
jge
dec
mov
clc
add
js
pop
(bad)
cli
stos
push
dec
mov
fs
xor
adc
or
fwait
ret
mov
lods
adc
(bad)
cmp
ins
arpl
icebp
jae
sar
push
inc
mov
int3
lds
xchg
mov
test
sub
mov
outs
mov
repnz
mov
sub
mov
popf
xchg
les
adc
clc
(bad)
pop
aaa
in
sbb
mov
xor
es
dec
std
inc
xchg
push
fstp
xchg
pop
cs
nop
retf
xchg
ret
call
ss
pop
push
sub
into
aam
mov
pop
inc
pop
xchg
xlat
leave
pop
dec
sub
daa
stc
scas
sbb
xchg
sub
aad
inc
cmp
xchg
adc
mov
inc
mov
or
mov
mov
mov
fldcw
sub
xchg
rcr
js
push
ret
xor
stos
jmp
adc
cdq
push
retf
push
sub
xor
xchg
aas
xchg
mov
push
addr16
int
data16
inc
je
aam
aaa
cmps
jbe
xor
xor
mov
ret
sbb
and
push
jg
ror
aam
fcomp
inc
add
in
sub
mov
sbb
jmp
loop
test
sub
mov
push
jae
out
jl
pop
jmp
sbb
int3
push
ss
cmps
and
xor
pop
mov
adc
sub
mov
fsub
and
sbb
inc
mov
(bad)
sub
jns
mov
hlt
scas
icebp
mov
xor
mov
scas
jb
jmp
das
sti
sub
fwait
sahf
push
cmp
imul
daa
or
les
movs
sbb
in
lods
adc
icebp
cmp
clc
pop
imul
mov
in
or
and
jge
or
imul
xchg
fs
(bad)
shl
(bad)
push
or
xor
mov
pop
test
out
sub
inc
inc
mov
jbe
adc
dec
int3
icebp
std
dec
adc
cmp
iret
rcl
jae
jp
loope
stos
cmp
cli
jg
cmp
xchg
cmps
and
xchg
mov
ret
or
jmp
and
cmps
mov
jne
cli
dec
nop
xchg
sti
pushf
stos
leave
daa
das
jmp
xchg
in
mov
adc
sbb
jecxz
mov
lods
cmp
cdq
cdq
sub
jbe
leave
ss
push
int
inc
test
add
push
add
mov
mov
lods
jb
xor
sub
and
mov
std
fmulp
mov
ret
xor
sbb
cmps
call
lods
sub
loope
mov
push
enter
mov
sub
xchg
xchg
retf
push
inc
daa
test
ret
test
dec
xchg
je
add
ror
mov
xor
cwde
mov
(bad)
ins
fcmovb
jae
pop
xor
addr16
add
clc
pop
sbb
jno
xchg
aad
je
mov
scas
xlat
call
jg
hlt
lods
pop
movs
jle
cmps
loop
xor
popa
inc
aaa
adc
and
(bad)
cmp
out
mov
push
fld
fsub
les
xor
in
cmp
push
sbb
shl
test
mov
rcl
or
mov
add
jno
adc
add
mov
sbb
fst
ins
lea
lods
dec
inc
mov
and
mov
js
aaa
xchg
(bad)
jmp
fist
or
pop
jecxz
int3
pop
xlat
out
sub
push
mov
jbe
adc
sub
push
push
aad
scas
movs
test
stos
dec
ja
or
and
inc
or
or
jl
popf
stc
xchg
pop
shl
out
sub
dec
xchg
adc
aas
sbb
mov
add
outs
mov
mov
mov
xchg
mov
push
xchg
loop
jmp
jmp
movs
mov
fcom
mov
ja
dec
push
int3
cld
cmps
arpl
adc
add
aas
loopne
inc
mov
arpl
or
mov
add
jmp
jno
jo
mov
add
xor
ret
mov
sbb
(bad)
int3
push
jmp
repz
clc
mov
mov
push
add
and
inc
xchg
ds
add
cmps
ret
push
adc
mov
cld
xor
inc
push
jl
and
sar
mov
ja
sbb
jge
icebp
cli
xor
and
mov
push
retf
nop
mov
retf
fisttp
cmp
lods
mov
and
test
stc
rol
mov
out
into
int3
or
js
inc
mov
or
in
and
inc
mov
cmp
mov
stc
push
pop
sahf
cmp
inc
iret
sar
xor
add
in
or
mov
adc
into
and
xlat
dec
xor
inc
xor
push
push
js
popa
pop
adc
mov
out
addr16
dec
pop
outs
cmp
and
add
xchg
pop
ins
sub
fist
cmp
(bad)
leave
shld
sub
(bad)
cmps
pop
fcomp
cmc
jo
jbe
cdq
ins
adc
ins
mov
inc
clc
lea
int3
and
cmps
mov
cdq
mov
adc
ss
jge
and
test
jmp
pushf
int3
push
pushf
fnstcw
cmc
push
push
pop
sub
clc
mov
cld
xchg
dec
sbb
fidivr
xor
popf
les
mov
jb
push
icebp
mov
xor
cmps
push
jp
retf
loope
int
cmp
call
mov
out
jg
jne
pop
les
outs
mov
ins
xor
or
push
pop
mov
int
jl
inc
or
ss
je
(bad)
fbld
xor
cli
mov
aas
mov
(bad)
fild
xchg
xchg
lock
jmp
out
mov
xor
hlt
aas
test
or
add
ins
neg
mov
cdq
or
je
dec
pop
hlt
jle
add
pop
mov
jge
daa
push
sahf
fld
jmp
dec
div
les
push
adc
mov
fwait
mov
stos
fimul
movs
cmps
(bad)
cmp
mov
and
dec
adc
jmp
push
test
stos
sahf
inc
add
jge
ds
pop
scas
push
adc
xchg
dec
adc
pop
scas
inc
scas
inc
mov
xor
iret
ret
test
sub
push
out
xchg
in
mov
fisubr
cdq
lods
hlt
push
dec
int3
popf
mov
mov
pop
outs
sub
enter
fldenv
pop
mov
mov
ss
adc
jno
push
jp
dec
adc
and
or
js
inc
fcomp
mov
movs
fs
and
sbb
xor
repz
nop
adc
inc
hlt
mov
or
adc
into
mov
mov
popf
std
jno
ins
xchg
inc
cmp
out
test
test
rol
and
sbb
pop
sbb
dec
or
inc
cmp
daa
jle
pop
in
test
xchg
das
dec
sub
je
ss
repz
dec
mov
jge
push
out
mov
mov
(bad)
xchg
sti
xchg
mov
mov
loop
leave
add
aam
jmp
clc
mov
mov
xchg
and
inc
sub
mov
fcomp
data16
push
test
pop
adc
and
pop
push
ins
cmp
sbb
dec
call
pop
jl
push
sbb
lds
imul
nop
inc
add
jl
inc
pop
adc
inc
in
cmc
mov
xchg
mov
push
in
jmp
imul
xor
and
jmp
jmp
xchg
jmp
hlt
test
cwde
scas
rcl
mov
ins
xor
add
xlat
xchg
into
mov
inc
aas
pop
jecxz
or
ret
int3
test
jne
aas
jl
dec
rol
ret
mov
lods
rol
fadd
bound
dec
das
jl
add
popa
sub
jb
xor
mov
test
sub
pop
dec
out
fisttp
xchg
fwait
jecxz
retf
jbe
fdivr
lods
out
mov
test
movs
(bad)
mov
sub
sbb
or
arpl
rcl
ficomp
xchg
(bad)
(bad)
cmc
mov
push
push
adc
jo
jmp
loop
adc
imul
(bad)
mov
mov
dec
xor
les
fld
cdq
movs
xlat
mov
mov
test
cmps
push
or
ss
sbb
xchg
(bad)
xchg
iret
pushw
inc
xor
push
es
sbb
(bad)
aas
mov
cld
and
idiv
jns
push
jg
push
sub
dec
or
push
add
call
sbb
lods
sub
push
js
jb
daa
push
push
sar
loope
pop
lods
jmp
fnstenv
jmp
ret
mov
lods
cmps
out
fistp
rcr
in
mov
or
jl
arpl
inc
(bad)
pop
add
ins
(bad)
adc
add
in
jecxz
mov
push
dec
test
jle
dec
adc
(bad)
fdiv
and
push
dec
or
arpl
int
jmp
ficom
lods
(bad)
mov
or
leave
cdq
fidivr
mov
jnp
daa
inc
sbb
dec
adc
sub
inc
out
xchg
jbe
clc
mov
icebp
or
rcr
jmp
gs
mov
mov
popa
sub
push
inc
or
mov
xor
out
in
lods
lods
pop
mov
test
popa
jmp
lock
xchg
rol
mov
popf
jmp
sub
jge
sub
adc
imul
jno
imul
sbb
ds
sbb
lods
jmp
jge
sbb
add
ror
lods
loop
fwait
ret
lock
fcom
or
icebp
pushf
movs
shl
jae
dec
adc
je
dec
or
iret
xor
xor
push
pop
pop
sti
cwde
retf
mov
nop
fistp
mov
call
jo
xor
pop
add
outs
sbb
out
addr16
in
fmul
cmp
push
cmovle
aaa
jp
jno
xor
pop
repz
pushf
or
aaa
pop
or
jg
js
pop
xor
sub
dec
xor
in
(bad)
push
xor
xor
push
push
jno
dec
add
sbb
dec
neg
fistp
add
or
push
sbb
dec
push
jle
neg
jp
push
mov
dec
cmp
xor
push
clc
call
adc
inc
cmps
and
push
push
dec
call
mov
fld
sub
outs
xor
xor
jmp
out
xchg
inc
inc
push
jp
pop
or
cmp
jp
jne
add
je
add
xchg
(bad)
cwde
ins
push
fmul
shl
and
add
dec
fcom
or
add
add
sub
mov
cmp
pop
imul
jl
inc
sbb
inc
mov
clc
xchg
movs
iret
and
add
clc
mov
add
mov
mov
or
jge
mov
xchg
cdq
movs
ins
aad
in
test
movs
(bad)
sahf
data16
imul
jnp
xor
and
imul
call
or
out
mov
jmp
sbb
jge
test
adc
mov
xlat
xchg
bound
xchg
ss
xlat
mov
push
imul
push
pop
add
or
xchg
shl
das
or
std
mov
and
outs
or
imul
adc
dec
mov
test
mov
pop
(bad)
mov
retf
xchg
not
mov
retf
int3
sahf
dec
fidivr
in
add
inc
aam
data16
leave
aam
in
lock
xchg
sti
daa
pusha
cmp
jbe
in
xchg
fld
lods
cmps
loope
cmps
(bad)
cmp
jmp
mov
pop
add
adc
ja
or
sub
dec
xlat
or
(bad)
call
sub
and
fmul
pushf
dec
(bad)
mov
ret
popa
(bad)
cmps
neg
mov
mov
sub
movs
call
out
jmp
sti
mov
ficomp
mov
rol
pushf
in
stos
repz
enter
iret
add
sti
test
repnz
(bad)
xchg
jno
push
je
inc
xor
cmovo
and
dec
out
loopne
push
inc
sub
pop
sub
test
mov
scas
loopne
stc
fwait
aam
not
sbb
xor
jmp
cmps
std
outs
cmp
sbb
xor
or
cs
pusha
sub
sbb
dec
add
jae
mov
xchg
lock
xor
iret
jge
dec
aas
jb
mov
je
push
sbb
cs
inc
jbe
jmp
jne
imul
jmp
enter
mov
xchg
mov
dec
adc
sti
mov
iret
or
push
cdq
lds
pop
out
popf
movs
std
xchg
dec
test
mov
jnp
cdq
int
clc
mov
int3
pop
jg
pop
ds
inc
adc
add
dec
stc
jmp
adc
jmp
xchg
out
xchg
fadd
cmps
pop
cmp
ds
fdiv
ret
outs
aaa
ret
add
pop
push
cmovl
jno
(bad)
mov
mov
ror
pop
lds
pop
in
test
mov
pop
pop
xor
xchg
dec
or
xor
xor
in
mov
push
rcl
inc
pop
in
mov
mov
xchg
xlat
mov
jl
ins
scas
neg
imul
jle
push
aaa
jp
es
and
lock
rol
and
xchg
mov
jl
xor
inc
test
imul
mov
xchg
mov
mov
jecxz
into
lods
xlat
enter
das
xor
test
call
and
push
push
dec
adc
push
push
inc
sub
jecxz
cmc
popa
cmp
jne
inc
sub
add
mov
lock
(bad)
jecxz
test
pop
shl
mov
das
dec
test
jnp
jno
je
inc
sbb
mov
inc
out
sbb
in
loop
in
adc
in
fs
push
or
sbb
sbb
dec
or
inc
push
push
sub
push
movs
rcl
test
xchg
lds
adc
push
cmp
aaa
mov
add
push
push
push
and
pop
jo
adc
push
icebp
mov
sahf
rcr
lods
test
add
test
xchg
mov
dec
pop
jge
imul
push
inc
adc
push
std
push
lds
and
pop
sub
xchg
cmc
mov
mov
xor
stc
fwait
std
and
and
mov
push
inc
inc
movlps
dec
cmp
(bad)
jecxz
stc
pusha
fmulp
mov
popf
adc
ins
enter
mov
je
outs
in
xchg
fstp
stos
jns
xchg
inc
mov
push
adc
jmp
fwait
push
push
mov
repz
xchg
inc
aaa
js
pop
pop
pop
sbb
push
sub
cmp
mov
mov
inc
pop
daa
fs
adc
stc
and
or
or
inc
std
test
jmp
out
mov
jmp
push
cmps
hlt
daa
div
ret
test
jl
pop
mov
sbb
scas
neg
test
or
es
jb
xchg
dec
inc
push
push
adc
hlt
mov
sbb
adc
fnstcw
adc
gs
dec
fst
add
in
mov
scas
in
mov
test
scas
hlt
adc
mov
js
jns
pop
sub
pop
push
push
inc
daa
push
cmp
add
and
call
dec
adc
push
mov
or
or
sbb
loopne
sti
test
enter
out
lods
(bad)
mov
mov
lods
fstp
test
mov
pop
xor
or
shl
loop
(bad)
movs
out
push
ret
inc
inc
and
pop
cmp
mov
sub
in
inc
mov
cmp
outs
xor
xchg
ss
xlat
lahf
(bad)
mov
dec
retf
mov
xchg
ficomp
fdivr
fild
or
jae
push
or
pop
jg
adc
arpl
pushf
in
mov
call
mov
shr
sahf
(bad)
es
and
dec
loope
(bad)
pushf
mov
push
push
or
mov
push
push
mov
(bad)
fistp
push
adc
jg
fs
push
add
ret
test
jae
pop
(bad)
test
lahf
(bad)
mov
push
shl
jne
das
inc
or
adc
retf
test
ficomp
popa
and
add
in
fisttp
inc
or
sbb
ss
xchg
rol
add
push
mov
push
shl
aad
xchg
int3
add
icebp
mov
cmc
or
jmp
cmps
nop
sbb
rcl
les
cmp
sbb
sar
bswap
loop
mov
pop
sbb
push
or
sar
popf
dec
cli
push
cwde
sbb
mov
jns
arpl
jmp
mov
scas
int3
popf
fidivr
add
pop
das
js
push
adc
jns
aas
jo
imul
mov
sbb
jmp
pop
inc
es
mov
mov
adc
mov
pop
mov
cmp
add
aad
movs
xchg
(bad)
je
cmp
call
div
push
dec
cs
xchg
gs
lds
pop
xchg
cmp
rol
adc
in
iret
mov
dec
in
test
sbb
jae
pusha
and
sub
sub
cwde
jg
dec
fwait
sti
xchg
inc
adc
and
movs
hlt
lahf
inc
das
ins
cs
call
lods
mov
pop
ss
sbb
int3
mov
stos
jmp
or
imul
into
mov
in
stc
call
xor
pop
or
add
push
sbb
xchg
fdivr
push
ins
add
and
aam
les
dec
adc
mov
or
and
push
sub
mov
adc
xchg
push
inc
adc
push
adc
ret
out
(bad)
mov
inc
mov
inc
mov
movs
loop
idiv
cmp
and
mov
movs
(bad)
mov
lods
jmp
or
xor
mov
xor
retf
xchg
ror
cwde
rol
push
je
pop
adc
mov
ret
arpl
xchg
fnstenv
jns
jmp
adc
das
pop
mov
aad
cli
and
cs
cmp
mov
xchg
dec
dec
cmp
cmp
out
cld
test
mov
dec
pop
cs
pusha
xor
dec
or
xlat
dec
sbb
repz
nop
rcr
aaa
inc
jmp
ins
xor
dec
or
loop
gs
pop
loopne
add
mov
mov
das
mov
lahf
scas
shr
dec
mov
mov
retf
(bad)
cwde
inc
push
hlt
mov
outs
fistp
arpl
sub
sub
sbb
push
test
xchg
dec
dec
add
cmp
leave
pop
add
dec
dec
add
mov
daa
inc
sub
loope
retf
mov
mov
popa
or
pop
out
xchg
mov
xchg
mov
push
inc
add
jb
repz
into
popf
movs
mov
inc
cmp
mov
(bad)
les
sbb
pop
adc
jmp
sti
dec
or
fild
rcr
bound
dec
mov
lahf
fdiv
das
out
jg
jns
dec
or
inc
inc
sbb
retf
inc
sbb
lds
pop
(bad)
mov
mov
mov
into
xchg
(bad)
test
dec
and
jg
mov
inc
pop
in
jmp
pop
out
retf
adc
jle
push
rcl
pop
or
outs
add
sub
or
and
leave
nop
int3
jb
pop
cmps
cmc
mov
xchg
sbb
sub
dec
adc
dec
adc
sbb
lods
lds
adc
push
jne
add
lock
jp
jmp
(bad)
xchg
xlat
xchg
(bad)
sahf
dec
in
int3
mov
xchg
in
shl
pop
add
mov
push
xor
dec
dec
adc
jno
popf
fiadd
fisttp
fist
(bad)
ficom
sub
xchg
fnstenv
inc
(bad)
sub
cld
push
sbb
lock
aam
out
leave
mov
test
xchg
fnstsw
add
sub
sbb
outs
sbb
and
enter
mov
or
mov
dec
or
and
pop
push
push
or
pop
es
or
(bad)
(bad)
mov
xchg
int
loopne
lds
mov
push
xor
inc
add
pop
stos
jmp
aam
loop
jae
or
das
dec
or
sbb
jl
cs
add
mov
pop
push
ss
je
ja
push
add
mov
in
aam
pushf
xchg
lods
in
fs
imul
push
repz
xchg
inc
mov
(bad)
cmps
neg
push
and
mov
fs
jns
rcl
mov
mov
xchg
call
mov
(bad)
adc
mov
ins
push
pop
adc
(bad)
mov
jmp
push
ds
(bad)
test
imul
test
xchg
stos
je
pop
pop
adc
jb
pop
push
(bad)
jge
repz
popf
in
scas
mov
outs
push
jg
xchg
dec
fst
xchg
push
(bad)
push
icebp
mov
mov
mov
and
in
cdq
fs
outs
fst
and
imul
(bad)
mov
leave
ss
cs
push
adc
push
mov
aas
gs
add
in
fnstcw
je
pop
(bad)
jno
push
jecxz
aad
inc
ficom
popa
sub
ss
add
mov
adc
push
or
jns
pop
sbb
shl
add
cs
stc
sub
xchg
clc
mov
pop
sahf
int
rcl
sub
push
pop
dec
ret
push
popf
shl
cmp
xchg
out
lods
fld
fcomp
mov
sub
or
jnp
data16
cmp
js
and
add
ja
and
inc
aas
adc
adc
jnp
pop
(bad)
js
mov
cmc
xor
sbb
dec
loopne
fsub
mov
sahf
ret
xchg
shr
(bad)
ja
arpl
cmps
mov
sub
xchg
shl
or
sbb
mov
mov
fwait
clc
es
add
sub
cmp
inc
add
das
push
dec
(bad)
fs
pop
paddb
dec
or
xchg
adc
rcr
fistp
lods
ins
ds
pop
mov
mov
jnp
js
pop
cmp
dec
or
daa
jle
pop
mov
jmp
sti
mov
push
ret
adc
jmp
arpl
in
cs
add
jmp
lods
mov
fld
and
push
or
hlt
and
ror
inc
xor
jbe
pop
in
(bad)
mov
mov
xchg
sub
imul
sbb
mov
pop
mov
mov
movs
mul
cmp
jnp
aas
inc
xchg
cdq
movs
xlat
mov
les
or
inc
or
add
push
ret
mov
js
pop
adc
jge
cs
and
inc
add
add
add
aam
or
inc
in
stos
pop
scas
ret
pop
xchg
dec
out
mov
mov
and
imul
or
jo
pop
xor
(bad)
push
ja
and
jp
(bad)
xor
xor
push
push
mov
xchg
fsubr
mov
retf
pop
(bad)
mov
xchg
inc
mov
pop
fisttp
call
mov
sub
ror
stos
aam
fstp
pop
adc
and
mov
push
pop
mov
xor
scas
jae
dec
sbb
cli
xchg
mov
adc
daa
ins
sub
mov
jp
dec
jmp
adc
dec
sbb
push
(bad)
inc
xor
imul
es
ja
push
sbb
pop
mov
jl
and
mov
jmp
cmp
out
retf
sahf
into
lods
sti
gs
add
sub
inc
push
ja
je
imul
xchg
mov
dec
test
mov
and
ja
mov
add
mov
stos
jmp
repz
mov
aas
ins
sub
dec
add
aas
ins
ss
cmp
cmp
fcomp
add
iret
pushf
(bad)
mov
add
jbe
sbb
and
sub
inc
ficomp
leave
stos
repz
xchg
xchg
mov
xchg
jmp
fld
je
imul
mov
sub
rol
repz
fisub
jns
mov
inc
in
xchg
(bad)
mov
les
les
iret
xchg
int3
mov
je
mov
nop
inc
dec
orps
dec
adc
(bad)
outs
fild
pusha
or
loopne
lock
adc
shl
dec
cmc
test
push
push
add
jae
fs
jb
ds
jnp
mov
xchg
push
add
movs
pop
cmp
loop
jl
ds
fdiv
fistp
es
mov
xor
idiv
int3
mov
das
cli
test
mov
jb
pusha
call
outs
mov
mov
ret
add
sub
ret
mov
fs
mov
mov
pop
dec
pop
je
cld
nop
cmc
adc
call
aam
and
cmc
mov
ins
sub
or
lock
inc
jnp
ins
ror
xlat
cmp
push
adc
mov
jge
movsx
xchg
jae
push
or
popf
sbb
ins
ds
leave
mov
jno
ret
cmp
xchg
cli
daa
mov
dec
sub
xchg
shr
or
rcl
bound
push
pop
xor
call
dec
stos
xor
xor
jmp
adc
movs
sbb
adc
in
int3
mov
pop
sub
sbb
(bad)
xor
jge
add
in
pushf
dec
dec
and
adc
adc
pop
cmp
xchg
sbb
fcmovbe
xchg
add
imul
jecxz
jecxz
mov
inc
into
aad
retf
push
sbb
test
pusha
stos
push
jne
cmp
leave
lods
stos
pop
dec
or
fiadd
test
xchg
jge
das
pop
fcomi
xchg
lahf
fsub
sar
pop
inc
dec
sub
sar
into
mov
out
fcom
cwde
cmp
xor
push
xor
sbb
mov
sub
dec
sub
cmp
ficomp
cmps
cmp
inc
imul
push
mov
lahf
rol
ss
icebp
xlat
mov
jb
push
dec
sub
aam
mov
test
(bad)
or
xchg
lods
sahf
je
pop
mov
sub
test
jp
adc
call
jg
add
and
mov
cmps
dec
sub
(bad)
call
es
ret
pop
inc
call
sub
cdq
fst
dec
add
mov
sti
mov
mov
shl
fs
or
gs
jns
std
fstp
fadd
ds
jne
jge
enter
pop
cmp
mov
inc
and
ror
pop
dec
add
fist
xor
je
xor
sbb
das
fadd
push
sbb
jns
pop
jl
push
and
clc
jmp
scas
mov
and
sub
dec
outs
or
call
mov
inc
mov
in
jmp
jg
call
push
push
(bad)
in
cmps
arpl
jne
aad
cwde
jle
dec
sub
xchg
rol
movd
push
mov
scas
mov
data16
out
lahf
nop
adc
or
pop
pushf
fnstsw
test
sahf
jp
cmp
scas
sub
fwait
ja
pop
cmp
mov
(bad)
push
push
xor
sbb
in
loope
fadd
dec
(bad)
loope
(bad)
mul
stc
in
fldenv
xchg
lods
test
shl
rol
mov
outs
mov
xchg
icebp
mov
dec
and
in
cmp
sahf
cmc
test
inc
add
aam
(bad)
cmp
pop
mov
mov
mov
js
sbb
xor
stos
div
daa
test
mov
mov
dec
cmp
int3
mov
push
and
stc
mov
mov
es
scas
jmp
pusha
and
sbb
sbb
hlt
ret
(bad)
lods
push
jl
inc
mov
push
adc
sbb
mov
dec
sub
mov
xchg
div
stos
push
arpl
xchg
aad
or
aas
lock
ret
sbb
xor
xchg
mov
xchg
push
push
xor
sbb
adc
push
and
lock
push
jns
ret
sahf
push
add
mov
adc
inc
cwde
jmp
sbb
inc
mov
test
in
mov
cmp
push
xor
pop
or
add
mov
mov
push
daa
cdq
ret
or
daa
bound
cmps
sar
sub
dec
data16
xlat
mov
aas
jnp
jmp
sub
ficomp
dec
add
inc
gs
push
mov
pusha
and
jecxz
xchg
sub
mov
lahf
cld
push
push
pop
cmp
jecxz
mov
outs
pop
adc
ins
and
lock
cld
add
pop
adc
fadd
add
loop
test
add
pop
or
mov
xchg
leave
add
fsubr
lock
aam
mov
daa
mov
sub
sbb
sub
jne
push
xor
mov
je
aad
(bad)
dec
inc
pop
ja
out
rcl
mov
inc
sub
ror
test
aas
test
mov
fcmovne
test
sub
movd
retf
inc
sahf
cmp
repnz
shr
cmps
dec
fwait
retf
inc
scas
xor
sub
jp
adc
shl
xor
dec
jne
adc
es
mov
mov
(bad)
adc
mov
lock
fstp
lahf
push
push
jbe
enter
push
and
(bad)
mov
aaa
inc
xor
and
push
push
adc
add
pop
or
mov
scas
jle
push
inc
pmaddwd
js
xor
adc
not
iret
xor
shl
push
(bad)
mov
inc
cwde
lds
hlt
sbb
push
xchg
iret
jg
pop
add
xchg
push
push
adc
loop
xchg
and
(bad)
mov
and
out
lods
mov
test
xor
movs
aam
fidivr
jnp
pop
cwde
int
sbb
mov
dec
push
pop
ds
sbb
js
mov
retf
repnz
sbb
ret
test
mov
int3
mov
or
cmp
rol
xor
cmp
leave
retf
or
push
jne
push
dec
xchg
ret
push
jne
pop
dec
push
xor
fmulp
mov
arpl
(bad)
into
scas
daa
mov
sub
fdiv
repz
div
int
dec
add
sbb
pop
mov
imul
into
mov
test
push
out
(bad)
mov
jnp
(bad)
mov
dec
push
ds
adc
loope
cmps
neg
pop
sbb
aad
les
push
or
xor
shl
pop
xchg
lea
xor
inc
ins
mov
lods
adc
jmp
cmps
mov
dec
and
jmp
push
push
cmc
ror
mov
xor
sub
cmp
leave
popf
push
push
inc
ror
ret
push
data16
scas
loop
jno
jl
fidivr
dec
das
jmp
(bad)
loopne
je
pop
xchg
add
pop
ret
cmps
(bad)
mov
add
stos
adc
mov
pop
pop
jecxz
sbb
nop
xlat
mov
sub
js
add
rcl
cmps
ds
and
retf
cmps
call
(bad)
scas
jmp
test
inc
in
mov
bound
mov
jne
pop
cmp
stos
daa
inc
or
or
mov
sti
pop
mov
fs
in
ss
cmps
xchg
fisub
je
push
push
push
je
aaa
mov
sbb
clc
sbb
sub
imul
sbb
scas
xor
(bad)
or
stos
and
mov
es
push
jb
jg
cmps
pop
imul
mov
mov
out
ficomp
cdq
fild
pop
sbb
mov
jno
pop
jg
sbb
icebp
or
retf
mov
pop
pop
jo
jp
les
sub
pop
xor
ror
pop
pop
mov
jle
sbb
pop
or
cli
fild
inc
inc
dec
sub
xchg
(bad)
lods
inc
inc
add
xor
mov
fcom
mov
popa
mov
popf
(bad)
and
outs
sub
mov
lahf
inc
ins
dec
or
add
popf
(bad)
fwait
shl
std
mov
xchg
jge
pop
pop
into
sti
mov
sub
outs
push
pop
jmp
stos
ret
sbb
leave
ror
nop
or
fisubr
mov
sbb
jecxz
shl
pop
movs
add
ror
xchg
jnp
dec
sub
fdiv
lods
pop
outs
sub
mov
stos
dec
aaa
inc
test
push
(bad)
stc
lods
mov
adc
loopne
stos
xchg
xchg
inc
jge
sub
rcl
sbb
int3
adc
and
mov
cmp
repz
cmovne
pop
pusha
dec
or
or
or
test
fwait
cmp
push
sub
dec
or
mov
mov
add
jmp
cli
popf
fcmovb
mov
jns
mov
dec
sbb
leave
mov
cmp
ret
sbb
push
and
jb
ins
clc
adc
(bad)
(bad)
sti
push
sahf
cld
jbe
in
mov
dec
mov
js
inc
pop
sti
adc
cmp
es
pop
mov
addr16
loop
mov
call
ja
pop
pop
test
add
mov
dec
xchg
lods
shr
sub
stc
add
adc
fistp
jg
in
(bad)
pop
jnp
stc
(bad)
mov
mov
xchg
sbb
and
(bad)
xchg
aam
mov
sub
or
retf
xchg
xor
sub
mov
jbe
int
mov
sbb
cdq
add
xor
es
retf
shr
in
and
jne
pop
xchg
clc
mov
scas
and
outs
jae
movq
sbb
mov
cmps
(bad)
sub
hlt
scas
clc
dec
mov
mov
xchg
shl
jl
cmp
push
rcl
and
loop
(bad)
and
inc
fucomp
mov
cmp
and
or
cmps
jecxz
imul
mov
push
xor
aam
jmp
ins
ss
fdivr
mov
stc
stos
jecxz
fs
or
cwde
sbb
cli
dec
fs
adc
(bad)
mov
mov
loope
mov
inc
jge
or
cli
mov
or
ja
cli
mov
pop
jle
push
daa
adc
mov
shl
loope
fst
cs
xchg
cmp
or
inc
sbb
rol
xor
jge
sbb
idiv
mov
mov
pop
add
retf
das
popf
out
test
sub
retf
fdiv
xchg
std
mov
push
xor
int3
mov
into
pop
imul
aaa
popa
and
or
adc
pop
(bad)
idiv
nop
rol
pushf
imul
pusha
mov
push
ss
mov
sub
loopne
dec
adc
ss
pop
mov
cs
sbb
jno
pop
cmp
outs
mov
ja
dec
mov
into
mov
pop
nop
rcl
pop
aaa
sub
or
aaa
mov
push
mov
nop
int
sub
xchg
enter
dec
das
movs
adc
retf
test
addr16
ficomp
ret
xchg
out
mov
test
jno
inc
jae
jl
mov
xchg
shl
fdivr
test
enter
pop
cmp
xchg
cli
adc
sbb
adc
int3
mov
lfs
dec
mov
jmp
push
ss
rcr
push
or
in
out
pop
push
ins
leave
jecxz
mov
pop
adc
mov
jbe
pop
scas
adc
push
adc
and
xor
mov
xchg
loopne
pop
dec
or
lahf
xor
mov
xchg
jg
es
movs
pop
cs
test
shl
lods
jmp
test
mov
in
stos
cmc
sub
cmp
icebp
and
jmp
addr16
pop
sbb
inc
add
call
push
adc
test
ret
jne
push
imul
add
out
sar
(bad)
jmp
lds
aad
stc
and
fld
jne
and
adc
fdiv
push
xor
(bad)
out
cmps
mov
xchg
into
push
mov
mov
jne
dec
ud1
xchg
xlat
sbb
pop
mov
fcom
rcr
jl
pop
inc
add
fisubr
add
jmp
ror
jns
ins
xchg
sbb
cmp
sbb
pop
add
stos
adc
inc
aaa
fst
add
mov
ins
ss
sbb
rol
sti
popa
shl
stos
bound
sbb
cmp
mov
pop
jno
add
hlt
test
cmp
lds
adc
mov
push
jg
sbb
lock
fldenv
mov
call
xor
imul
ret
mov
cmc
in
xchg
and
lahf
movs
pop
inc
sbb
dec
pop
ds
push
inc
cld
mov
stos
push
mov
(bad)
fistp
dec
xchg
(bad)
mov
inc
jbe
pop
sbb
xchg
stos
jmp
mov
push
mov
inc
and
xchg
jp
dec
add
jmp
add
(bad)
mov
call
loopne
rep
add
adc
push
or
or
pop
adc
add
ror
mov
pop
das
sub
add
jmp
stos
in
mov
dec
fst
inc
arpl
add
std
xchg
outs
xchg
adc
in
cmps
les
cmp
(bad)
jmp
fsub
cdq
ins
dec
add
add
retf
enter
das
push
or
cld
mov
(bad)
std
mov
or
out
fstp
inc
inc
add
pop
scas
xor
clc
jmp
cmp
cmps
ss
cmp
aam
out
inc
push
cmp
pop
mov
inc
jno
xor
cmp
fwait
and
fcomp
dec
add
(bad)
repnz
dec
ds
nop
retf
or
pop
xchg
adc
retf
retf
cmp
jge
sbb
mov
xchg
jae
enter
xor
cmp
mov
jg
les
or
add
in
scas
int3
or
pop
pop
jp
push
inc
xor
mov
mov
movs
add
mov
jge
or
pop
add
(bad)
in
leave
and
lea
imul
pusha
mov
cmp
push
push
xor
sbb
mov
adc
shl
or
out
bound
fsubp
test
cdq
xor
scas
mov
ffree
cwde
scas
inc
outs
(bad)
mov
push
or
mov
es
xor
rcl
std
test
dec
push
stos
cli
mov
popf
not
dec
ins
push
cmp
ins
and
(bad)
(bad)
rcl
std
cmps
(bad)
mul
jbe
int3
xchg
movs
inc
and
(bad)
and
and
arpl
inc
int3
retf
test
sub
jno
jbe
(bad)
fnstcw
and
jl
repnz
in
pop
arpl
or
push
sbb
rcr
mov
dec
pmaddwd
xchg
dec
dec
daa
addr16
adc
mov
(bad)
ins
addr16
cmp
or
leave
mov
push
mov
mov
inc
enter
mov
jno
adc
and
xor
retf
stos
lea
iret
in
xchg
call
mov
and
test
mov
cmp
cld
aam
xchg
jnp
cmp
and
int3
xchg
jnp
cmp
cmp
loopne
push
push
xor
jge
xor
mov
xchg
fcom
das
je
push
sub
call
pushf
lea
mov
cs
mov
pop
cmp
sbb
les
xchg
ret
mov
add
fstp
jmp
arpl
jns
and
enter
push
pop
adc
cdq
ret
call
push
adc
pop
pop
ja
push
jnp
fild
ret
cwde
and
das
fs
jne
test
xchg
enter
out
or
add
pop
call
outs
cmp
std
mov
push
mov
or
lds
scas
sar
inc
in
movs
imul
push
data16
xchg
jmp
leave
loopne
xchg
pushf
sbb
and
sub
xor
jae
or
or
stos
cmp
cmps
sub
data16
cld
repz
cs
inc
mov
rol
dec
mov
ss
sbb
mov
imul
push
ds
clc
adc
jno
into
mov
push
js
ins
movs
or
lods
or
stos
in
or
push
or
test
fwait
cmp
push
sub
dec
or
mov
mov
add
jecxz
push
aaa
dec
sbb
leave
stos
std
mov
std
mov
sahf
call
clc
sub
mov
or
cmp
mov
sub
loop
(bad)
cs
pop
jl
sub
push
jp
repz
call
dec
or
neg
call
inc
add
lds
xchg
enter
xchg
cmc
mov
jl
addr16
lods
out
or
pop
or
mov
xchg
dec
es
std
int3
mov
mov
mov
pop
aaa
jnp
cmp
jmp
pusha
movs
or
das
jmp
inc
and
loope
mov
inc
pop
xor
gs
mov
dec
paddsb
lods
loop
fwait
sti
stos
push
dec
bswap
fisubr
pop
movs
adc
(bad)
cli
mov
push
ins
sub
jmp
out
and
jle
sub
mov
pop
pop
and
int
in
mov
aad
ins
js
push
sub
into
cmp
and
je
in
out
leave
and
push
hlt
xor
lds
aad
mov
mov
jl
push
mov
push
inc
add
mov
pop
movs
stc
sub
clc
xchg
sbb
je
inc
pop
pop
cwde
adc
repz
fdivr
cwde
fstp
jb
or
adc
mov
mov
retf
ins
sub
and
xchg
fstp
lock
mov
ss
ror
jne
pop
push
cmp
mov
sahf
call
pop
push
ss
adc
pushf
icebp
mov
arpl
js
pop
adc
and
xchg
xor
mov
xchg
cmp
jbe
ins
and
fild
gs
shl
js
jle
icebp
mov
inc
lahf
sbb
outs
adc
out
repz
mov
arpl
xchg
jl
cmp
repz
ret
jbe
jge
sub
inc
retf
jmp
xor
(bad)
cld
fdivr
out
retf
sub
scas
lahf
daa
xor
dec
push
inc
int3
cli
mov
pop
js
push
jmp
adc
mov
xor
push
gs
std
div
je
and
mov
and
xchg
hlt
ds
push
movs
or
mov
push
jge
ds
add
pop
shl
icebp
test
push
or
jp
pop
adc
mov
in
lods
aad
inc
mov
in
fnstenv
dec
xor
fild
xor
add
test
pop
push
or
mov
nop
pop
pop
inc
push
enter
pushf
les
repnz
icebp
mov
pop
add
sbb
test
add
push
aas
outs
das
mov
pop
call
fwait
clc
mov
inc
push
pop
hlt
dec
mov
cmc
test
jno
and
iret
lods
xlat
or
and
lock
xchg
mov
retf
aam
fwait
cmp
sbb
adc
lods
aas
cdq
std
push
inc
xor
xchg
fst
stos
daa
(bad)
int3
jp
pop
adc
loop
popf
addr16
add
mov
lods
out
dec
cwde
push
pop
shl
shl
push
outs
add
ss
jmp
push
add
sub
rol
es
mov
lods
out
stos
loopne
xor
jbe
adc
adc
mov
mov
jne
inc
dec
and
adc
pop
sub
(bad)
(bad)
jns
and
and
adc
inc
add
rol
popf
sbb
(bad)
sti
scas
iret
sub
ds
xchg
enter
bound
(bad)
xlat
ds
add
xor
xchg
mov
inc
or
add
sbb
sbb
adc
mov
imul
or
call
ins
jbe
push
loop
je
inc
mov
scas
neg
jb
push
mov
lahf
fiadd
lods
adc
mov
jo
icebp
or
in
inc
adc
cld
mov
shr
repz
popf
jbe
bound
js
push
pop
sub
jns
dec
aas
cdq
fadd
retf
mov
mov
mov
push
jge
dec
pop
addr16
push
dec
adc
das
arpl
inc
cmp
ins
and
adc
jo
cmp
dec
sub
lods
dec
add
out
ficomp
adc
retf
ins
mov
fisubr
and
dec
es
ds
mov
xchg
cmp
adc
out
stc
cmps
les
inc
add
cmps
inc
sub
aam
and
outs
(bad)
pop
fwait
shr
jne
or
in
mov
inc
jp
pop
div
test
push
mov
adc
ret
xchg
jecxz
pop
sbb
add
ss
test
out
xchg
stos
pusha
imul
xchg
jge
xlat
xchg
jnp
or
stos
or
or
sub
or
lods
loop
push
inc
cmp
inc
cmp
dec
scas
pop
jg
gs
xor
cs
int3
inc
xchg
shl
jl
sub
mov
idiv
jb
pop
sbb
pop
inc
dec
or
cmp
sbb
(bad)
sbb
rcl
jb
xor
in
stos
jmp
scas
loope
inc
push
ds
lock
pop
orps
retf
or
cmp
ss
(bad)
shl
scas
jno
add
or
in
xlat
test
jle
xor
loop
mov
inc
scas
or
mov
scas
int3
jmp
xor
fidivr
push
xchg
enter
inc
add
and
(bad)
xchg
retf
sbb
cmp
ficom
gs
mov
xchg
aam
dec
pop
sbb
fst
push
test
fst
mov
inc
adc
add
cmp
aam
mov
int3
movs
in
mov
fidivr
jecxz
icebp
test
(bad)
aam
mov
popf
icebp
movs
sbb
pop
pop
push
cmp
cmp
push
and
xor
jmp
pop
xchg
jl
sub
cwde
mov
cmp
jmp
cmc
sbb
loopne
aam
lahf
(bad)
mov
mov
mov
jge
icebp
mov
or
push
mov
fcom
data16
push
bound
dec
ror
loop
je
pop
xor
jne
sub
scas
sbb
(bad)
cmp
imul
dec
inc
push
cmp
loope
jno
add
idiv
add
xlat
js
jbe
pop
sahf
daa
push
(bad)
pop
rcl
xchg
jb
or
loope
cmp
push
xor
mov
ds
mov
mov
sbb
das
test
mov
nop
cmp
aaa
jnp
sbb
or
xchg
stos
xchg
aad
(bad)
(bad)
or
sub
out
pop
ja
inc
ins
sub
mov
(bad)
(bad)
out
fsub
ror
fist
data16
or
sti
or
sti
aaa
ret
movs
out
test
or
and
movs
dec
push
cmovns
mov
adc
stos
jmp
bound
cmps
hlt
xchg
jmp
xor
mov
push
push
nop
sbb
mov
cmp
add
in
mov
sbb
in
scas
int3
or
aas
scas
jmp
cmp
or
xor
in
mov
je
ds
stos
out
rcl
xor
aas
jne
cli
mov
lahf
jge
inc
add
push
jle
pop
out
xor
xchg
shl
icebp
mov
add
xchg
(bad)
aam
loopne
fistp
sbb
pop
adc
push
xor
xor
xor
pop
or
add
push
xor
inc
and
and
ins
adc
add
push
xor
push
pop
inc
pop
push
dec
cs
or
and
cs
bound
sub
jmp
jae
push
mov
adc
fwait
out
int
mov
pusha
or
fadd
imul
ins
dec
or
sbb
into
movs
clc
mov
pop
adc
cmps
out
mov
repnz
jns
cmp
out
xchg
jmp
or
call
cmp
fsubr
lods
scas
sub
inc
adc
scas
jmp
xor
mov
ins
mov
movs
jmp
pmullw
popf
mov
push
ss
add
syscall
(bad)
or
inc
add
push
jl
inc
or
out
fild
dec
ins
sub
daa
mov
iret
(bad)
retf
std
(bad)
(bad)
mov
cwde
jne
pushf
into
das
ret
(bad)
frstor
int
fcom
out
ins
scas
das
pop
dec
add
mov
mov
aam
shl
dec
dec
sub
cmp
stos
cmps
xchg
dec
add
xchg
aas
push
mov
dec
cmc
loope
mov
cdq
or
adc
jecxz
in
or
cmp
or
loope
pop
cmp
sar
cmc
(bad)
lods
sar
lock
or
addr16
xchg
(bad)
das
mov
scas
iret
aaa
mov
pusha
adc
stc
rcl
cmp
and
call
inc
mov
mov
pop
dec
add
sbb
lods
cld
mov
ins
stos
jmp
fimul
outs
and
icebp
cmps
out
jae
push
fnstsw
rcl
lea
out
pop
xchg
mov
push
push
inc
(bad)
adc
xor
ret
pop
inc
and
ror
add
out
mov
ret
add
enter
fld
rcl
cli
mov
rcl
ret
cmps
aam
iret
pushf
ror
lods
idiv
js
pop
push
push
into
or
add
test
cmp
cmp
aad
out
xor
or
xchg
ss
ret
adc
add
ret
test
xor
lock
imul
fadd
test
pop
xor
fistp
out
(bad)
or
mov
cdq
xor
fwait
retf
inc
mov
sti
mov
push
push
cmp
das
jns
xor
push
rcl
(bad)
js
or
test
inc
call
cmp
or
pop
cmp
loop
scas
dec
repz
xchg
jge
out
idiv
xchg
cmp
push
dec
inc
pop
sbb
dec
data16
inc
add
loopne
mov
pusha
(bad)
add
dec
add
aas
ins
jecxz
mov
out
jns
jb
ret
stc
cmps
lock
adc
and
sbb
test
sub
sub
shl
out
sti
iret
(bad)
gs
or
jo
jmp
adc
js
xor
stc
popf
ror
out
test
pop
xor
mov
add
add
pusha
scas
or
cs
lods
into
push
lahf
into
movs
jnp
or
fcomi
rcl
xchg
repnz
(bad)
dec
cmovp
shl
arpl
bound
ins
(bad)
in
jmp
and
xchg
adc
cmp
es
jmp
out
xor
sbb
add
lds
push
or
int
mov
pushw
dec
test
push
ss
and
mov
test
mov
into
fisttp
icebp
xchg
div
loop
retf
mov
mov
fisubr
xor
imul
(bad)
(bad)
cmps
out
rol
(bad)
lahf
cld
scas
loopne
sbb
ds
xchg
add
jb
cmp
(bad)
xor
in
sub
and
or
ret
mov
bound
sbb
jg
pop
pop
pop
in
les
test
(bad)
in
cmp
mov
xchg
or
mov
pop
jbe
push
add
test
movs
push
pop
xor
int3
leave
stos
mov
outs
or
rcr
mov
dec
push
and
pop
sbb
test
add
xchg
adc
retf
cmps
or
push
cwde
and
iret
ins
mov
jmp
mov
jne
sbb
fadd
push
sbb
fwait
(bad)
mov
jae
pop
sbb
jmp
ret
lods
(bad)
daa
ret
pop
mov
icebp
repnz
icebp
test
inc
adc
push
ss
xor
loopne
les
sbb
xor
jmp
dec
scas
push
pop
or
out
lea
pop
out
rcl
ds
leave
sub
pop
dec
mov
outs
sub
stc
xchg
out
xchg
out
push
sub
sti
xchg
daa
mov
dec
sub
into
mov
adc
rcl
or
stc
adc
add
mov
scas
cmp
pop
jnp
pusha
add
xchg
clc
mov
call
mov
outs
das
cmps
out
into
out
rcl
sti
mov
add
add
cmp
push
mov
push
sbb
jmp
inc
add
mov
xchg
sti
mov
jmp
mov
movs
sbb
pop
sbb
xor
(bad)
ds
jne
jne
pop
and
ficomp
ror
xchg
repz
mov
mov
add
add
inc
add
inc
(bad)
icebp
xchg
mov
fsubr
fwait
test
fsubr
aaa
jnp
std
rcr
adc
adc
fst
mov
pop
adc
hlt
mov
dec
movs
pop
pop
pop
int
mov
or
retf
mov
repnz
push
js
out
xchg
out
pop
push
pop
pop
popaw
xor
cmps
sub
in
mov
imul
xchg
ins
out
sti
mov
sub
jge
adc
sti
(bad)
mov
jb
cs
cmc
repnz
xchg
dec
inc
pop
or
sbb
adc
or
push
jmp
or
shl
scas
push
add
mov
pop
dec
sbb
mov
pop
adc
add
push
fnsave
data16
cs
inc
call
lock
movs
out
sub
gs
and
or
call
push
ds
mov
and
push
or
fist
jmp
sar
adc
frstor
xchg
retf
push
push
jbe
adc
enter
fwait
sar
int
xchg
(bad)
ds
mov
mov
nop
repnz
xchg
mov
mov
test
cld
cmps
out
xor
or
in
stos
js
jae
clc
test
mov
retf
push
pusha
les
xor
call
pop
xchg
adc
lods
out
push
cmp
pop
mov
push
cmp
cli
push
fs
aas
jg
adc
mov
(bad)
pop
(bad)
out
adc
sbb
arpl
add
pop
xor
cmp
std
mov
loopne
ret
stos
fcomp
loopne
int3
cmps
jmp
lock
stc
mov
cli
mov
mov
push
dec
sbb
xor
dec
cs
push
ss
jge
arpl
jno
adc
and
das
enter
mov
or
mov
aad
hlt
aaa
jbe
jno
sbb
fstp
mov
dec
cmp
jle
gs
into
mov
inc
xchg
mov
das
mov
mov
jnp
outs
fcmovbe
pushf
hlt
sub
mov
popa
mov
xor
sbb
or
arpl
adc
fdivr
inc
add
sbb
in
loopne
xchg
movs
xor
or
push
cmp
pop
mov
add
in
loope
(bad)
dec
mov
js
pop
cmps
out
pushf
ficom
xor
mov
leave
cli
stos
loopne
push
dec
cmp
add
push
mov
dec
aas
or
stos
mov
xor
in
stos
bnd
pop
cmp
fisttp
mov
je
jne
sbb
inc
xor
and
cmp
js
cmp
mov
push
js
arpl
movs
int3
pop
nop
into
scas
jo
and
pop
dec
daa
retf
fstp
nop
jnp
sub
pop
jg
imul
cmps
les
pop
dec
int3
clc
mov
fwait
inc
dec
xor
pop
dec
or
jg
jg
icebp
add
mov
xor
pop
sub
sbb
mov
test
and
rcl
js
in
stc
add
dec
push
push
pop
jb
aam
xlat
jno
ds
fsub
mov
sar
mov
shl
test
adc
jl
push
aas
je
popa
add
or
dec
or
push
pop
inc
xor
ins
cs
add
data16
pop
push
dec
cs
or
ins
pop
pop
add
js
popa
add
daa
imul
adc
jne
jo
popa
pop
add
inc
sbb
add
je
jle
inc
push
push
ss
fist
and
ret
call
dec
or
mov
dec
or
jb
sbb
mov
into
fcom
(bad)
int
sbb
mov
mov
pop
and
scas
loop
jns
push
lods
add
clc
xchg
xchg
out
stos
fmul
int3
mov
push
push
xor
stos
lock
jne
adc
(bad)
iret
test
pop
pop
cmp
shl
lock
mov
ja
add
ret
leave
mov
xchg
or
std
arpl
sbb
inc
and
and
mov
jg
sub
test
jge
ja
rol
dec
pop
jnp
pop
ja
dec
pushf
leave
mov
fwait
jae
sub
cmc
mov
jb
jle
or
movs
out
lods
jmp
popf
loope
(bad)
cmps
(bad)
or
xchg
test
aam
std
mov
inc
dec
push
idiv
ret
lods
test
mov
pop
push
push
xor
mov
mov
pop
das
loopne
in
mov
scas
xor
retf
adc
in
imul
ret
sbb
les
pusha
mov
jne
fsubr
push
jl
repnz
out
dec
pop
push
lods
in
jmp
jnp
fidiv
inc
adc
inc
sbb
out
pop
jo
push
mov
inc
sub
mov
cmp
out
xchg
dec
or
cmc
mov
mov
rol
push
adc
cdq
fnsave
hlt
mov
xchg
iret
adc
add
cmc
fstp
sar
shl
into
sub
sbb
inc
daa
inc
add
add
add
dec
sbb
je
push
adc
jle
pop
xor
jnp
jle
bound
push
pop
pop
jge
bound
sbb
or
sub
out
test
and
mov
jb
and
(bad)
mov
ss
jp
call
pop
cs
mov
stos
sti
ds
push
popf
lock
int3
push
jnp
jnp
sbb
int
cmc
mov
sbb
pop
mov
retf
ds
mov
mov
loope
arpl
xor
cmc
mov
xor
inc
shr
std
mov
sub
(bad)
xchg
mov
das
cs
shl
dec
call
xchg
dec
jge
and
(bad)
fldenv
sti
jmp
mov
stos
adc
mov
mov
xchg
and
aad
pusha
push
sub
or
or
in
cs
popf
mov
lahf
fist
mov
mov
adc
gs
or
mov
xchg
push
and
iret
(bad)
stos
jge
ss
into
cmps
mov
dec
sub
fwait
setl
and
stos
fild
mov
dec
mov
int
test
inc
fild
or
(bad)
ja
dec
sub
push
push
mov
aad
cld
pop
jl
ja
std
mov
lock
(bad)
mov
ins
and
test
cmps
jecxz
arpl
jae
retf
sbb
js
adc
les
pop
cmp
mov
ja
aad
xchg
rcl
inc
pop
pop
iret
mov
test
cmp
and
loop
scas
pop
inc
sbb
dec
adc
in
cmp
sbb
lahf
rol
cdq
inc
add
push
test
lahf
out
scas
fistp
mov
sahf
fdivr
into
mov
mov
xchg
aam
(bad)
mov
retf
stos
out
ret
test
mov
pop
xor
inc
or
jae
jnp
data16
pop
xor
pop
sbb
pop
sbb
push
pop
sbb
addr16
dec
pop
or
ins
xor
jne
je
and
or
shl
mov
inc
xchg
mov
xchg
(bad)
push
jno
dec
mov
dec
add
xchg
iret
pushf
inc
imul
cwde
test
popa
jnp
push
mov
inc
push
leave
test
test
push
push
stos
sbb
loop
jae
sbb
movs
xor
iret
test
(bad)
jg
outs
sub
fimul
push
sbb
add
inc
popa
push
sbb
fdivrp
mov
aaa
(bad)
mov
fisubr
push
add
(bad)
movs
mov
popa
cdq
hlt
imul
in
gs
xchg
aad
shl
movs
sbb
add
rcl
xchg
int3
loope
fld
xor
shl
dec
add
std
mov
mov
xchg
inc
pushf
into
cmps
call
jae
arpl
(bad)
loopne
push
inc
xor
jg
adc
cmp
imul
into
in
mov
mov
stos
out
fiadd
ja
cmp
dec
adc
pop
dec
mov
iret
mov
push
push
outs
sub
std
mov
hlt
icebp
aam
jo
aas
jae
call
inc
popf
stc
xchg
out
xchg
sbb
int
shl
mov
xchg
sub
std
movq
pop
mov
inc
xor
mov
pushf
ror
outs
sahf
icebp
mov
cmp
adc
ror
fnstsw
pop
aas
pop
mov
jl
and
fcomp
inc
(bad)
sub
pop
jg
pop
adc
imul
sbb
push
or
gs
or
dec
adc
sbb
jno
dec
orps
data16
inc
daa
pusha
outs
add
sbb
and
xor
mov
mov
hlt
mov
mov
stos
fstp
(bad)
rcl
fiadd
in
lods
in
fnstenv
fsubr
leave
mov
pop
or
icebp
out
test
or
jg
sub
jecxz
xlat
movs
iret
inc
pusha
dec
das
loop
mov
push
and
imul
sbb
(bad)
ficomp
mov
fcom
arpl
(bad)
cmps
(bad)
aaa
mov
add
add
loop
sahf
fadd
test
mov
ss
aad
clc
mov
int3
(bad)
xchg
dec
jg
xor
std
mov
out
mov
(bad)
sbb
lods
cmp
ret
mov
push
daa
dec
lock
xchg
sbb
push
push
dec
mov
movs
jbe
call
push
inc
int
in
mov
cmp
lea
or
cmc
out
cwde
and
mov
ficomp
mov
jle
add
hlt
and
imul
and
(bad)
repnz
aam
fdiv
mov
cdq
in
mov
movs
dec
pop
cmp
mov
js
jmp
lahf
out
bound
xor
(bad)
out
xchg
cmp
sbb
add
call
dec
call
pop
jg
push
in
(bad)
jns
sub
pop
sub
ds
jmp
xlat
xchg
and
mov
jg
shl
imul
push
xor
sahf
int3
mov
mov
xor
sub
lods
ret
(bad)
outs
dec
push
push
mov
mov
mov
mov
ja
push
movs
ss
jnp
sahf
fsub
cmp
mov
dec
nop
loop
cdq
push
pop
je
pop
adc
cmp
xchg
aad
and
jae
fdiv
push
enter
gs
dec
push
jmp
sbb
xchg
xor
inc
pop
test
sub
xor
arpl
mov
mov
fsub
jmp
popa
mov
inc
(bad)
push
loopne
and
adc
mov
cld
jl
cwde
push
push
cdq
dec
fcomp
mov
movs
jnp
and
push
push
xchg
push
stc
sbb
add
imul
les
mov
fdivr
inc
mov
and
aad
shr
mov
retf
je
popa
call
out
xor
adc
sub
sahf
adc
enter
xchg
dec
sub
jnp
mov
mov
sub
fcom
shl
mov
ja
fsubr
mov
stos
fcomp
jne
pop
cmp
add
jle
xor
xor
push
es
out
cmp
mov
jmp
shl
xlat
cmp
mov
or
inc
add
icebp
out
sub
bound
ret
sub
cmc
ins
ds
(bad)
retf
pop
loope
or
lds
fisttp
shl
add
adc
sti
mov
cmp
icebp
pop
mov
(bad)
mov
xchg
push
lahf
and
xchg
cmps
cmp
jge
cmp
push
loope
mov
rol
das
into
adc
adc
inc
movs
(bad)
movs
adc
fisttp
cwde
jbe
add
cmps
fisttp
nop
bound
or
lods
cmc
dec
loop
test
lahf
outs
inc
and
inc
jno
fst
(bad)
jns
(bad)
fwait
mov
xor
inc
stos
sbb
jns
or
sbb
mov
mov
fist
mov
cmovp
cmp
inc
daa
inc
pop
repz
cmps
xchg
mov
xchg
sbb
sbb
adc
mov
adc
in
jnp
sbb
xor
xchg
pop
push
mov
mov
(bad)
sub
inc
xlat
adc
push
in
xor
(bad)
mov
xor
push
das
mov
adc
jb
sbb
mov
lfs
popf
xchg
cwde
ins
push
push
popa
out
ds
sub
jmp
das
frstor
scas
bound
jae
cli
mov
call
pop
or
cli
pop
bnd
mov
jno
jns
shl
fs
jmp
cmp
loop
cmp
repnz
and
mov
adc
cwde
xchg
enter
pop
inc
(bad)
scas
pusha
sub
mov
(bad)
ins
pop
or
xor
push
retf
shl
mov
xor
jbe
out
inc
cwde
aam
jge
test
enter
aam
dec
dec
mov
mov
pop
pop
jae
aas
sbb
and
int3
sbb
repz
(bad)
int3
test
inc
pop
or
loop
adc
into
aaa
in
inc
push
jp
cld
bswap
mov
rcl
ret
mov
mov
add
fcmove
(bad)
ins
jnp
sar
dec
inc
cli
cmp
js
lds
neg
out
test
enter
mov
lock
ss
loop
ds
sub
or
mov
into
sbb
xchg
xor
aad
in
jbe
imul
sbb
mov
punpckldq
std
stc
and
aam
cmp
das
push
int
bound
jmp
xor
inc
mov
aad
pop
jo
push
leave
ror
ret
adc
adc
inc
lahf
push
iret
inc
data16
repz
xor
div
retf
inc
cwde
hlt
data16
fdivr
jne
mov
sub
loope
daa
(bad)
mov
mov
arpl
icebp
push
or
pop
adc
add
int3
jno
arpl
add
or
ds
inc
cmps
xor
xlat
(bad)
jns
sar
ins
inc
shr
and
stos
push
jmp
jne
stos
gs
and
xlat
cmp
(bad)
(bad)
xlat
pop
sub
sub
test
and
jle
mov
mov
or
add
jecxz
test
mov
jo
hlt
jnp
xchg
pop
add
fist
mov
jae
jns
sub
add
add
pop
jg
jo
aas
pop
aaa
jp
movs
mov
mov
inc
rcr
lds
lock
fdivr
test
add
jmp
jb
movddup
inc
icebp
or
in
inc
cmps
outs
mov
cmp
jne
leave
push
ja
les
ror
xchg
push
(bad)
ss
mov
pop
cmp
sub
mov
jmp
je
pushf
inc
dec
mov
clc
aad
or
fistp
jecxz
xor
jmp
scas
sub
push
(bad)
sbb
xlat
das
inc
inc
inc
mov
mov
test
inc
xchg
movs
dec
jb
and
pop
dec
repnz
test
ss
cli
sbb
pop
xor
jmp
mov
xchg
mov
aam
(bad)
pop
mov
shl
enter
mov
in
dec
push
out
or
fadd
and
and
jno
mov
mov
lahf
adc
out
stos
imul
mov
test
inc
les
jmp
mov
dec
cmps
mov
loope
add
or
psadbw
(bad)
dec
out
(bad)
loopne
jno
jecxz
(bad)
push
or
mov
mov
add
(bad)
popf
fdivr
loope
xchg
cmp
int
les
add
pop
adc
inc
or
add
pop
out
lods
inc
in
(bad)
test
into
pop
lods
out
stc
es
xor
push
and
cmp
jnp
inc
and
cwde
enter
scas
or
mov
cdq
pushf
movs
jmp
es
movs
in
xchg
mov
mov
out
lods
loop
sar
and
fist
sub
sub
shr
cs
in
sub
fist
loop
fisttp
int3
lea
ret
fyl2x
jno
and
arpl
or
mov
inc
push
jle
imul
mov
mov
inc
addr16
mov
jne
(bad)
mov
sbb
aaa
hlt
mov
push
jno
aam
call
stc
iret
inc
cmp
xlat
aaa
retf
jb
pop
dec
mov
mov
stos
iret
xor
inc
xor
dec
data16
sbb
ret
jbe
mov
repnz
les
inc
cmp
test
cli
out
ds
xchg
inc
add
cmp
scas
rcr
fimul
or
loopne
sar
enter
int3
cmp
pop
fiadd
das
ins
sbb
cmp
sar
jne
mov
popa
cmps
shl
out
(bad)
mov
div
lods
aas
in
sub
jmp
addps
jl
stc
cmp
mov
enter
cmps
fisttp
(bad)
xchg
repnz
add
mov
daa
out
inc
bound
(bad)
aad
xchg
inc
movs
sar
jp
cmp
xor
cmp
sbb
sbb
mov
pop
in
jbe
cmp
fs
in
and
cmp
pop
xchg
retf
ins
jo
add
mov
mov
outs
jnp
inc
(bad)
cmp
retf
fistp
mov
in
xor
push
inc
mov
(bad)
mov
test
clc
inc
push
dec
fucomp
and
int3
daa
popa
mov
sub
outs
cwde
rcl
adc
sbb
fcomp
lods
xchg
shl
sub
cmps
jnp
or
out
cmp
ds
push
mov
push
test
cmp
inc
add
pop
cmp
mov
int3
ss
pop
inc
test
sub
jg
push
fnstsw
les
nop
test
adc
loop
jbe
mov
sub
cmp
(bad)
shl
cli
push
push
lea
mov
aas
iret
nop
mov
(bad)
mov
sbb
fsub
mov
out
xchg
cmp
imul
pusha
pop
or
ss
scas
enter
pop
adc
xor
shl
pop
jl
dec
clc
adc
dec
cmp
mov
sahf
mov
(bad)
and
mov
les
push
cwde
test
in
inc
or
fist
pushf
inc
push
in
jmp
ins
xor
xor
shr
retf
inc
mov
call
stos
idiv
and
xchg
jo
mov
outs
push
pop
dec
jecxz
sbb
es
mov
mov
shl
ret
daa
inc
shl
mov
pcmpeqb
or
in
pop
adc
adc
mov
fiadd
inc
sbb
in
pop
or
mov
and
add
scas
sub
xchg
jbe
cli
push
(bad)
mov
je
dec
dec
jae
cmp
cdq
push
cmp
(bad)
popf
ror
cmp
xor
lahf
mov
mov
push
jmp
(bad)
mov
xchg
lock
pop
popw
dec
ret
pop
jmp
and
mov
(bad)
inc
pop
dec
out
mov
xor
(bad)
fwait
mov
xor
cs
mov
(bad)
sub
xchg
xor
test
mov
arpl
jecxz
shl
lahf
pop
loopne
adc
mov
(bad)
repnz
push
adc
cs
adc
fidiv
add
icebp
pop
pop
and
sub
in
mov
push
adc
lock
or
(bad)
pushf
popf
loope
pushw
xor
mov
xor
iret
sub
(bad)
fnstsw
mov
push
sbb
or
pop
ja
stc
mov
fs
outs
push
mov
fwait
jo
mov
sub
mov
inc
in
sub
(bad)
push
out
cmp
sar
mov
adc
push
aad
rcr
mov
jnp
sahf
dec
ds
inc
popa
aam
xlat
fild
mov
jle
mov
movs
out
mov
aas
sub
sub
cmp
xchg
pushf
jle
xor
pop
repz
xor
add
push
scas
ins
mov
out
cld
js
pop
ins
jl
jmp
(bad)
rol
rcl
dec
xor
jno
leave
mov
push
dec
mov
push
das
sub
cld
jnp
cld
xor
stos
dec
jmp
mov
gs
push
iret
outs
pop
popa
jmp
push
aaa
mov
xchg
mov
mov
sbb
or
sahf
stc
xlat
xchg
into
test
rcl
stos
stos
not
pusha
xchg
ret
xor
aam
mov
test
out
repz
inc
nop
cmc
inc
cmps
mov
imul
adc
mov
loopne
mov
ret
mov
cmp
jbe
neg
push
out
imul
lock
xchg
loop
inc
imul
add
push
int3
retf
cli
cmp
dec
xchg
add
inc
shr
movs
dec
data16
or
add
jmp
cmps
ror
test
and
cmp
push
loop
fld
ror
fmul
fbld
or
inc
pop
push
jo
sub
xlat
push
mov
mov
sub
pop
or
retf
jmp
and
sub
cmc
fsubr
sar
aam
cmps
frstor
loope
xor
jno
lea
sbb
or
in
sbb
pop
fucomi
jmp
clc
pop
gs
xlat
xor
icebp
popa
ins
mov
jns
cmp
gs
or
addr16
aad
jne
adc
mov
xor
push
inc
into
inc
mov
xchg
shr
add
xchg
mov
lock
or
cmp
lock
repz
out
enter
dec
and
jp
sbb
jnp
dec
fst
cld
out
imul
pop
enter
inc
and
and
mov
pop
mov
jmp
mov
sub
add
rcl
xchg
dec
xchg
cdq
xchg
jo
and
cmps
cmps
xchg
adc
add
retf
ror
cdq
shl
mov
sub
pop
mov
js
jge
xchg
ins
adc
pop
lods
inc
sub
push
pop
and
kmovw
mov
mov
jb
sbb
outs
jle
dec
retf
pop
sbb
adc
out
scas
rol
mov
outs
jle
xlat
(bad)
xchg
jo
adc
mov
test
jne
or
mov
pop
pop
push
fld
lock
jmp
shr
sub
das
gs
popa
or
fld
dec
inc
or
add
push
pop
pop
pop
xor
enter
in
test
push
repz
ss
or
(bad)
inc
data16
fadd
cmps
mov
stos
inc
(bad)
fcom
mov
jmp
cmp
sahf
(bad)
(bad)
dec
ret
sub
push
enter
js
arpl
sbb
cmc
inc
xor
ret
ja
xchg
mov
add
les
or
dec
das
test
add
ss
lods
ret
out
mov
sub
data16
loopne
xchg
cld
mov
test
xor
lods
xchg
ins
in
fisttp
xchg
inc
lods
fist
mov
pop
mov
jp
fiadd
adc
call
movs
stc
(bad)
or
xor
jb
mov
bound
dec
xor
pop
xchg
xor
push
xchg
inc
arpl
mov
iret
je
sub
lock
scas
bound
mov
lss
xor
jmp
mov
jae
cmp
scas
push
aam
outs
(bad)
ja
jl
fxam
shl
dec
push
je
xchg
mov
test
leave
nop
in
fldcw
jp
push
inc
mov
dec
inc
mov
aas
cwde
mov
test
xor
loop
popf
out
cmp
test
adc
into
ins
push
cld
xor
pop
stc
mov
pop
hlt
in
fs
pop
popa
sbb
xor
mov
sbb
lea
jecxz
lods
(bad)
nop
iret
pop
and
shl
sub
xor
xchg
icebp
bound
pop
sub
nop
jns
push
iret
mov
push
ins
popa
ins
shl
packssdw
pushf
hlt
mov
mov
lahf
add
out
pop
scas
jmp
inc
jle
ror
scas
daa
shl
cmps
cmps
inc
inc
and
aad
ins
adc
jo
xchg
pushf
nop
jnp
mov
leave
aas
ret
push
cmps
inc
sub
cwde
call
sub
and
jnp
mov
ss
adc
data16
lds
jns
fstp
adc
lods
and
(bad)
rcr
push
aad
aam
dec
aas
sub
pop
jne
aas
xchg
add
push
sbb
(bad)
cdq
xor
add
int
dec
push
xchg
push
js
dec
pop
fdivr
loopne
inc
and
dec
sahf
call
sbb
mov
mov
push
loope
cmc
fist
cmc
stc
rcl
test
sub
inc
int3
std
adc
loopne
out
imul
test
cli
bound
mov
cdq
adc
cmps
xchg
jno
pop
sbb
xchg
popf
jae
pop
pop
cmp
jno
sub
popa
and
ds
jne
test
push
dec
clc
call
ror
std
or
dec
xchg
xor
push
xor
test
mov
sbb
inc
push
data16
jmp
mov
pop
mov
scas
cmps
add
dec
mov
mov
cdq
add
mov
fdiv
mov
or
div
fs
mov
sbb
cs
push
jmp
fsub
adc
imul
pop
ja
adc
mov
and
or
lods
daa
in
ret
pop
fadd
mov
sub
push
out
mov
aaa
test
les
dec
inc
dec
add
jns
mov
iret
addr16
inc
cmp
sub
imul
mov
adc
mov
lea
inc
out
clc
test
pop
cmc
stos
iret
or
or
mov
push
cmp
leave
test
daa
loope
xor
arpl
push
xor
jnp
repnz
adc
xchg
dec
repz
frstor
in
retf
or
mov
inc
push
jmp
sub
mov
(bad)
int
xor
or
rcr
mov
cmp
loop
pop
js
mov
out
or
adc
or
push
icebp
and
daa
cdq
ret
xor
ja
movs
out
add
imul
or
and
ss
cmp
loope
cld
cmp
das
xchg
xor
mov
xor
dec
scas
out
or
cmc
mov
rcr
xor
es
or
jne
dec
inc
push
xor
mov
test
ret
xor
pop
fs
sub
cs
call
mov
fldenv
dec
cmp
xchg
dec
inc
int3
pop
or
fld
sbb
push
mov
es
loopne
stos
inc
xchg
and
sar
jl
rol
fadd
and
cmps
clc
mov
push
js
xchg
fcomp
or
retf
sbb
mov
jg
pop
data16
test
dec
adc
cmp
and
dec
pop
in
pop
push
inc
test
dec
xor
cdq
test
dec
into
pop
fisubr
mov
out
aaa
and
imul
mov
sub
pop
mov
pop
loopne
xor
dec
jno
cmc
jno
mov
sti
pop
scas
push
mov
cwde
mov
sbb
fsubr
xchg
fsub
cmps
dec
or
ins
jg
mov
fst
lods
or
addr16
jne
push
(bad)
mov
mov
and
jmp
scas
xchg
scas
das
push
jge
jmp
repz
pusha
fwait
sbb
mov
(bad)
out
and
sub
mov
push
mov
mov
push
xor
(bad)
pop
cdq
fcmovbe
jmp
ins
jmp
or
jbe
mov
clc
cli
cmp
mov
inc
or
push
xor
cs
push
and
adc
lea
xchg
rol
or
mov
sbb
test
push
jbe
xchg
cs
push
iret
push
xchg
inc
fwait
jp
cmp
mov
neg
ss
push
pusha
jne
xor
dec
sub
stc
scas
es
jo
lds
popa
sahf
pop
push
sub
inc
int
cmp
inc
jmp
adc
and
aas
mov
(bad)
dec
jb
inc
xchg
into
xor
ja
mov
pop
push
stc
dec
jmp
arpl
push
js
pop
xchg
push
arpl
cli
ja
sub
hlt
dec
push
push
cdq
repnz
sbb
dec
or
data16
(bad)
cli
cmp
cmp
pop
ss
jb
mov
jmp
pop
movs
inc
mov
and
inc
int3
sub
cmp
das
add
cmp
mov
outs
shl
mov
ss
stc
mov
data16
adc
addr16
mov
mov
test
out
aad
call
xchg
out
add
pop
repnz
cmp
mov
lods
stos
loop
mov
cli
xlat
cmp
jns
(bad)
(bad)
loope
clc
pop
mov
cdq
repz
mov
cs
xor
call
ss
sbb
push
aad
leave
xor
std
and
xchg
xor
mov
fsub
mov
aaa
out
addr16
cmp
mov
lods
call
pop
in
icebp
adc
jb
mov
jmp
imul
not
pop
xchg
mov
mov
fild
xor
mov
stos
ficom
(bad)
clc
movs
cmp
imul
pop
jo
jo
daa
add
or
jmp
cdq
ss
dec
jle
movs
rol
mov
mov
cmp
sbb
aam
dec
leave
je
inc
push
sbb
inc
repz
nop
sahf
dec
adc
jle
or
dec
js
gs
sahf
ret
test
or
test
bound
xor
loopne
dec
(bad)
xchg
add
jmp
fucomip
pop
scas
pushf
in
lea
adc
clc
jnp
jb
and
ds
sbb
jg
add
imul
jmp
call
add
pusha
int3
mov
mov
dec
or
dec
add
push
cmp
outs
aaa
inc
add
lds
inc
imul
dec
(bad)
or
or
popa
and
or
retf
inc
pop
jge
ins
(bad)
imul
push
and
popf
push
sbb
jne
pop
sbb
push
add
push
jno
outs
or
out
mov
aam
xchg
rcl
adc
outs
aaa
je
gs
or
cmp
push
cmps
loope
in
mov
into
inc
xor
pop
sbb
mov
scas
loopne
(bad)
movs
xor
jge
pop
push
push
aas
in
sub
imul
jo
mov
xchg
fldenv
jbe
and
int3
pop
sbb
jae
push
add
repz
hlt
xchg
cmc
mov
clc
xor
jbe
repz
sbb
test
jne
jno
mov
jb
ins
sbb
mov
mov
adc
stos
enter
loope
fcom
jmp
sbb
or
addr16
ficomp
iret
lds
pop
sbb
push
cdq
sti
mov
inc
stc
mov
call
sub
jp
xor
push
or
ds
out
ret
scas
fbld
mov
mov
cmc
mov
(bad)
sbb
pop
xor
xchg
int3
(bad)
mov
ins
sub
shr
or
push
in
aam
std
push
xchg
lock
sbb
push
dec
or
retf
mov
(bad)
mov
xor
push
adc
mov
mov
test
mov
push
mov
repnz
ins
(bad)
mov
nop
xlat
mov
jg
repnz
mov
ror
add
jns
pop
das
imul
xor
dec
add
jnp
push
push
push
push
sbb
inc
ficomp
xor
and
ds
sbb
outs
cmp
retf
test
jecxz
shl
dec
add
and
pop
test
test
in
or
js
dec
adc
shl
pop
adc
push
sbb
push
dec
aas
shl
jno
pop
xor
cmp
in
mov
dec
adc
dec
cmp
sub
pop
adc
xor
jp
jns
ror
jge
sti
push
adc
bound
inc
arpl
mov
mov
mov
(bad)
movs
call
je
mov
shl
icebp
add
fmul
rcl
and
xchg
mov
xchg
ror
cmp
push
adc
stos
arpl
inc
push
pop
aas
ins
inc
movs
mov
pusha
cmp
jne
fidiv
mov
adc
jne
push
gs
mov
cli
jb
fist
jns
jb
jae
jae
rol
cmp
adc
jns
dec
adc
lock
rcl
ds
or
sub
ins
and
jmp
daa
dec
cmp
pop
pop
movs
out
not
push
fs
je
ja
add
push
adc
xor
xlat
mov
imul
xchg
mov
out
popf
lds
add
push
bound
adc
push
sbb
inc
stos
mov
rol
loopne
shl
and
inc
or
in
out
lods
fild
test
cmc
jbe
jbe
push
adc
outs
sbb
xor
jge
pop
sbb
add
rol
mov
xchg
stos
mov
int3
add
out
mov
shl
pop
add
dec
xchg
lods
(bad)
mov
pusha
add
jae
jae
loope
shl
jmp
dec
push
addr16
pop
jne
gs
mov
inc
mov
xchg
rol
(bad)
movs
div
fdiv
push
ins
xor
(bad)
mov
mov
popa
push
push
pop
pop
xor
iret
add
jmp
sti
mov
push
bound
inc
add
push
mov
test
ror
jo
push
sbb
arpl
push
ss
adc
jno
imul
icebp
adc
add
push
gs
and
out
stc
mov
mov
fcom
and
jno
jo
or
addr16
aaa
push
sbb
clc
add
jae
jno
shr
cmc
mov
fs
scas
push
push
inc
push
sub
andnps
fs
inc
and
inc
or
push
or
loopne
sti
test
bound
jnp
mov
xchg
sbb
mov
sbb
aaa
je
arpl
inc
mov
test
mov
mov
mov
cmp
push
adc
mov
stos
jmp
jbe
push
adc
int3
mov
lds
pop
inc
and
jmp
mov
enter
and
mov
cmc
sub
jle
push
pop
gs
push
cmp
cmp
ins
cs
das
jbe
or
jo
pop
out
add
cli
mov
jp
dec
or
push
pop
jnp
and
push
jne
rol
cld
jge
inc
push
push
aaa
push
add
pop
add
ds
push
sbb
cmc
mov
mov
call
or
or
test
and
pop
adc
jns
add
dec
es
adc
mov
rol
cdq
clc
stos
or
push
mov
test
scas
jmp
cmp
retf
popf
fistp
ds
push
adc
mov
lock
inc
sbb
pop
pop
pop
adc
enter
out
retf
or
mov
daa
je
push
ss
mov
jo
outs
sbb
sbb
jne
push
add
jnp
imul
sub
rcr
aam
cmc
mov
(bad)
fcomp
sbb
inc
sbb
add
dec
or
add
js
imul
std
(bad)
enter
test
mov
mov
imul
push
push
pop
pop
xor
loopne
xor
pop
or
lods
lds
mov
xchg
stc
mov
xchg
(bad)
movs
std
mov
adc
mov
dec
sub
sub
jmp
fld
ret
mov
stos
imul
xor
int3
add
out
lods
fild
push
cmp
in
hlt
xchg
cmc
mov
sti
inc
xor
sbb
mul
retf
clc
mov
aad
leave
mov
movs
out
and
jae
pop
xor
sbb
jno
pop
ds
(bad)
(bad)
loope
(bad)
mov
stc
inc
push
pop
cmovge
pusha
jmp
mov
inc
or
push
or
cmps
aad
into
pushf
fistp
(bad)
xchg
(bad)
cld
aam
aad
repz
dec
or
arpl
jl
mov
scas
in
mov
cmp
dec
cmp
or
adc
mov
imul
mov
scas
call
(bad)
mov
sub
ss
mov
mov
xchg
fcom
and
dec
cmp
xchg
aad
stc
nop
fcomp
cmps
lds
pop
push
jne
inc
cmp
idiv
addr16
and
aas
dec
or
pusha
aas
fstp
into
cmp
sbb
push
je
in
cmps
retf
mov
fadd
test
stos
leave
add
ror
dec
sbb
ds
mov
test
and
mov
mov
and
dec
or
rcr
mov
mov
push
xor
xor
push
gs
or
pop
xor
test
push
sbb
aam
in
int
xor
rcl
in
rol
scas
in
pushf
(bad)
retf
movs
out
retf
scas
arpl
add
add
jmp
cmc
xchg
mov
sub
pop
push
jl
sbb
mov
arpl
pop
popf
fistp
int3
cwde
loop
fimul
jle
pop
sub
inc
movs
push
add
sub
xor
in
stos
loopne
cld
mov
jnp
push
dec
and
cmc
mov
jmp
mov
dec
aas
ja
push
adc
retf
popa
add
sbb
pop
sub
and
popa
cmp
mov
cmp
pop
add
stos
leave
stos
in
stos
in
and
sbb
sub
dec
loop
and
dec
or
push
adc
pop
inc
loopne
dec
and
dec
and
sub
sbb
cmp
pop
or
dec
jp
pop
adc
out
(bad)
in
stos
jns
aad
loop
(bad)
xchg
ins
jge
ins
cs
add
inc
sbb
push
sar
mov
sbb
rcr
pause
popa
sub
dec
cmp
ret
mov
dec
cli
mov
lods
into
fadd
inc
add
or
push
movs
bound
push
or
movs
or
(bad)
ret
adc
outs
or
inc
and
imul
add
dec
int3
sub
out
fistp
mov
mov
mov
mov
imul
push
dec
add
fadd
dec
in
scas
int
jmp
out
pop
cmovl
dec
or
mov
cli
mov
add
inc
or
pusha
add
jno
push
mov
mov
(bad)
cmp
data16
or
ins
ss
pop
inc
and
xor
inc
cs
sbb
and
mov
mov
into
(bad)
xlat
mov
mov
movs
leave
mov
fwait
ret
adc
std
pop
xor
data16
pop
inc
ss
jge
outs
sub
inc
adc
push
ds
push
add
leave
mov
ds
adc
ret
stos
in
std
lahf
or
sar
xchg
loopne
cli
daa
push
cs
fstp
aad
dec
or
es
dec
mov
sti
mov
jb
jae
push
xor
or
test
jg
pop
mov
daa
inc
add
xchg
dec
popa
dec
or
jns
pop
mov
pop
cmp
aam
jmp
fwait
add
(bad)
out
mov
dec
sbb
leave
xchg
aad
repz
pop
sub
inc
adc
call
mov
enter
cmps
loope
dec
or
pusha
xor
mov
lods
out
mov
xchg
mov
stos
inc
mov
xor
mov
lods
jecxz
sti
cdq
jns
bound
inc
add
xor
shld
test
loopne
shl
cmc
lods
fistp
xchg
fidiv
mov
shr
scas
jmp
add
test
lods
(bad)
mov
pushf
lock
jmp
pop
adc
pop
pop
gs
jbe
retf
sub
mov
cmps
ret
sahf
fld
in
stc
mov
repnz
pop
add
pop
aas
ja
bound
jnp
push
pop
jno
imul
ss
shl
jmp
retf
mov
xchg
add
arpl
inc
xor
movs
xlat
xchg
out
cli
test
dec
push
outs
and
data16
sbb
jp
push
sbb
test
cld
loop
sbb
cmp
stos
jmp
mov
test
fwait
call
mov
xchg
ret
add
mov
add
sub
mov
movs
(bad)
mov
mov
pop
cmp
sbb
xchg
in
cli
xchg
xlat
push
pop
sbb
imul
jl
pop
cmp
mov
lods
fstp
cmc
mov
cmps
ror
ins
das
dec
daa
mov
imul
mul
jns
inc
adc
inc
add
or
push
stc
and
dec
or
mov
retf
pushf
cld
scas
or
loopne
loope
les
or
fidiv
out
cwde
sti
cdq
fistp
loope
shl
jl
pop
adc
(bad)
push
dec
or
popf
out
lods
fld
mov
stos
call
cmp
in
stos
gs
dec
stos
or
es
scas
retf
lea
addr16
lods
out
mov
test
sub
inc
add
mov
sub
jns
add
push
xor
push
adc
jnp
pop
fs
je
push
stc
mov
mov
inc
adc
adc
pop
xor
add
and
ins
inc
cs
and
dec
inc
push
ins
sub
dec
cmp
cmovl
addr16
repz
and
and
cmp
lds
pop
xor
je
jns
adc
popa
add
outs
and
movs
jecxz
leave
mov
sahf
mov
or
or
ficomp
lahf
in
lods
fidiv
add
dec
mov
ins
aas
jl
jnp
mov
enter
rcl
stc
call
pop
sbb
sbb
fst
in
ins
xor
js
imul
loopne
in
xor
sub
inc
add
fs
jge
dec
or
pop
pop
adc
dec
fmul
(bad)
(bad)
cmps
in
test
add
and
dec
ds
mov
xor
jmp
cmp
xor
leave
xchg
repnz
(bad)
xchg
fdiv
and
ret
mov
xchg
aam
hlt
xchg
rcl
dec
or
enter
pcmpgtd
jne
(bad)
fcomp
inc
xor
pop
das
ins
push
cmc
mov
jmp
loopne
shl
mov
pushf
fistp
push
pop
inc
es
iret
xchg
leave
stos
clc
mov
js
and
(bad)
mov
rcr
dec
sbb
aam
ficom
(bad)
sar
cmp
lock
dec
or
popa
xor
(bad)
mov
fist
jnp
pop
sbb
dec
xchg
cli
test
ror
cmp
or
xchg
movs
std
mov
mov
dec
push
outs
and
xlat
mov
stos
leave
(bad)
sub
inc
push
jb
push
fcomp
(bad)
jae
push
adc
adc
mov
xchg
in
xlat
jg
cmovge
popa
or
push
sbb
mov
rcl
out
mov
cmps
fnstcw
icebp
xchg
into
push
sbb
outs
sbb
test
stos
shl
jle
dec
or
mov
sahf
fisttp
lock
mov
call
pop
push
jo
xor
jmp
pushf
(bad)
movs
test
and
inc
xor
pop
sbb
aaa
jb
cdq
idiv
in
scas
int
jmp
push
dec
cmp
or
push
sbb
pop
adc
cmp
shl
mov
lahf
(bad)
mov
sbb
sub
or
jmp
iret
mov
(bad)
enter
xchg
aam
(bad)
mov
inc
and
dec
mov
mov
cdq
cli
cdq
fild
inc
sub
sbb
jl
or
sbb
and
inc
and
out
movs
enter
aam
dec
adc
ins
mov
rol
ret
stos
inc
add
imul
sbb
push
sbb
add
fstp
enter
aam
iret
fldenv
jb
push
pop
dec
sub
mov
mov
in
add
pop
sbb
jo
popf
mov
retf
or
dec
or
sub
pop
sbb
xor
mov
icebp
stos
call
mov
jae
inc
sbb
stos
jmp
mov
adc
aas
js
xchg
in
cli
mov
mov
nop
fbstp
sbb
pop
push
xchg
rol
and
add
xlat
mov
aam
fdiv
in
mov
sar
stos
jmp
lods
div
mov
jle
outs
or
call
xlat
jae
jb
push
and
mov
ret
cmc
pushf
rcl
cdq
sti
mov
add
push
inc
cs
and
aam
push
jl
jge
pop
test
sti
mov
cs
or
add
jo
jno
jno
mov
in
mov
test
lods
mov
retf
sub
jp
pop
cmp
add
jns
push
adc
imul
jb
jnp
dec
or
dec
fdiv
outs
sub
inc
sub
add
pop
cmp
add
adc
push
(bad)
enter
fmul
xchg
ret
and
hlt
xchg
lds
xchg
fld
inc
add
call
mov
push
mov
mov
lods
fistp
or
sbb
loope
cmps
hlt
adc
shl
push
cmovge
in
mov
stos
in
cli
cwde
and
sub
dec
fs
inc
aaa
ins
das
aam
idiv
dec
xor
jno
jg
mov
mov
test
push
imul
inc
add
ret
xor
xor
sub
pop
cmp
mov
lods
fcomp
dec
or
sbb
xor
std
cmps
lds
test
(bad)
(bad)
mov
sub
js
push
mov
xchg
mov
and
je
addr16
dec
pop
push
push
inc
shl
pop
pop
sbb
js
push
jle
dec
cmp
jae
lods
loope
mov
out
out
into
mov
push
or
pop
sub
leave
xchg
call
pop
adc
cs
inc
aaa
ins
cs
jmp
scas
hlt
loope
pause
repnz
mov
sbb
sub
rcl
fidivr
mov
(bad)
mov
mov
test
cdq
jmp
adc
cmp
or
cmp
sti
mov
xchg
out
das
inc
pop
push
pop
je
push
iret
lods
not
cld
jns
pop
das
push
cmc
mov
cmps
ret
sub
dec
sbb
mov
stos
ficomp
push
xchg
pop
adc
imul
cdq
pop
sbb
or
cmp
push
push
dec
dec
dec
and
dec
cdq
int3
scas
jmp
dec
test
and
sbb
ds
(bad)
mov
in
outs
dec
cs
or
pop
push
adc
icebp
test
cwde
call
inc
or
push
std
lahf
cmps
loope
repz
out
stos
fsub
jae
arpl
dec
daa
push
push
xor
adc
mov
xchg
ror
adc
icebp
mov
popf
into
(bad)
out
lea
loope
retf
out
div
adc
and
int
jmp
fld
cmc
mov
push
dec
add
sbb
push
xchg
rcl
dec
or
cmp
daa
jb
into
xchg
std
mov
stos
(bad)
test
jg
jle
pop
sub
repz
call
test
test
neg
nop
jecxz
sti
cmps
icebp
xchg
fdiv
push
adc
adc
sbb
ja
inc
sbb
adc
jno
dec
sbb
pop
pop
pop
or
inc
push
ins
das
pop
push
das
jp
pop
adc
xor
xor
xor
and
dec
cmp
rol
or
imul
adc
pop
sub
retf
nop
rol
lds
iret
cdq
je
jns
and
mov
mov
add
mov
or
pop
sbb
test
xchg
xchg
(bad)
scas
loopne
stc
cwde
retf
pop
sbb
js
pop
das
gs
mov
mov
and
dec
or
jg
data16
add
fisubr
int3
dec
das
pusha
or
pop
jmp
call
ja
imul
jecxz
int
jmp
out
inc
pop
push
aaa
push
adc
jmp
fadd
pop
or
data16
jle
mov
clc
in
inc
sub
inc
xor
fcomp
dec
adc
pusha
add
sbb
dec
or
jae
movs
out
not
jno
inc
add
nop
xlat
popf
icebp
add
cmc
mov
cmps
les
pop
pop
push
fs
or
leave
mov
mov
dec
imul
push
xor
add
xchg
push
add
jne
in
xchg
inc
popa
stc
add
cmp
cli
mov
and
push
and
xlat
or
jne
vpsubq
cwde
shr
call
pop
fwait
ror
adc
push
xchg
xchg
lahf
cmc
fwait
and
adc
fwait
scas
outs
xor
sub
repz
jp
mov
inc
js
popa
test
jg
inc
pop
xor
jae
lods
ret
loop
fstp
std
rcl
int3
sub
lds
push
lock
xlat
xchg
sbb
call
inc
or
xor
popa
fsub
xor
push
out
sub
mov
add
mov
enter
sub
sub
ss
mov
fistp
mov
dec
jns
pop
fistp
mov
xchg
xchg
mov
jle
imul
sub
add
jno
adc
arpl
or
mov
xchg
dec
cmp
mov
daa
cmp
iret
shl
mov
repz
xchg
test
daa
xor
sub
sti
gs
popf
inc
sbb
js
ja
lds
sar
adc
out
cs
xchg
push
inc
jge
and
ret
sbb
ret
pop
pop
inc
fdiv
mov
jae
fs
jmp
mov
not
inc
aas
pop
jae
int3
enter
xchg
enter
fcomp
push
mov
sub
xor
enter
push
ins
cmp
in
call
or
into
sahf
test
push
scas
leave
cmp
lods
dec
adc
sub
inc
nop
cld
adc
mov
ss
inc
push
and
dec
ror
xor
ficom
cmp
dec
dec
ret
(bad)
les
cwde
mov
sbb
sar
pcmpgtb
sub
jo
das
arpl
mov
fisub
dec
leave
jo
cmps
dec
(bad)
retf
adc
xchg
data16
pop
in
daa
mov
mov
repnz
cld
xor
xlat
shl
xchg
into
push
outs
inc
and
adc
mov
bound
fwait
or
(bad)
jmp
ret
xchg
push
xor
sbb
ins
mov
push
paddd
ret
jecxz
stos
les
je
xchg
add
inc
xchg
dec
cdq
(bad)
or
aad
sub
pushf
push
mov
mov
sbb
jp
sahf
icebp
xchg
lea
push
shrd
push
sti
pop
div
ins
bound
lods
adc
imul
cmp
jmp
in
or
push
pop
sbb
pusha
xchg
mov
(bad)
push
xchg
and
xchg
and
add
dec
adc
and
jmp
fs
sub
sbb
je
mov
push
xchg
or
arpl
shrd
pop
or
repz
cmp
jle
ffreep
mov
fs
or
and
out
lods
das
out
sahf
sbb
mov
push
loope
push
call
sbb
jp
inc
mov
fistp
ret
mov
loop
(bad)
mov
ret
sub
ds
std
push
xchg
ss
or
jns
int
pop
jo
sub
iret
clc
cli
imul
call
sub
ficom
sbb
xor
xchg
jl
aaa
mov
pop
pop
inc
int3
add
sbb
add
adc
popa
adc
inc
dec
xor
inc
rol
xchg
xor
(bad)
mov
js
shl
dec
cld
cmp
les
jg
ror
inc
sub
ret
mov
and
dec
cmp
inc
out
ss
call
out
ss
dec
mov
xchg
(bad)
int
aam
icebp
or
cmp
popa
cmp
out
ja
adc
jmp
push
cmp
jecxz
xlat
ficomp
xchg
mov
ins
push
add
push
mov
fistp
push
mov
mov
pop
fst
sbb
add
or
or
push
outs
jnp
in
adc
aam
sub
xor
fwait
test
xchg
aas
sbb
je
or
in
cmp
inc
enter
xor
mov
shl
mov
push
mov
data16
dec
out
pop
push
pop
mov
xor
xchg
or
mov
dec
cmp
jne
(bad)
jmp
and
div
test
fidiv
movs
sub
adc
retf
fld
mov
(bad)
cld
xor
shrd
pop
data16
adc
adc
pop
adc
rol
jmpw
fst
push
jno
cwde
inc
test
mov
sahf
js
nop
enter
sub
or
mov
add
movs
pop
xchg
pop
fsubr
retf
inc
retf
fwait
loop
mov
cli
xor
dec
and
pop
dec
call
data16
cmps
adc
xchg
pop
sub
ret
add
je
jmp
ds
dec
rcr
dec
(bad)
jmp
jg
jno
popf
mov
add
scas
jecxz
popf
cmp
add
mov
xor
fdecstp
push
adc
jmp
mov
repnz
mov
inc
rol
fnstcw
nop
cmp
dec
retf
lods
add
xchg
(bad)
pop
out
es
test
gs
xor
adc
jle
shl
bound
add
js
push
pop
sub
jo
pop
add
je
or
and
fwait
in
iret
xchg
test
out
pushf
inc
rol
push
sbb
or
adc
sbb
sbb
aad
icebp
ss
adc
dec
je
inc
inc
rcl
enter
sbb
retf
mov
cmp
int3
stc
xchg
ret
loope
mov
jmp
xchg
mov
das
rcl
int3
mov
and
mov
outs
daa
enter
mov
dec
and
or
adc
ss
jno
movs
jmp
loopne
jmp
inc
outs
cld
jbe
into
cmp
or
mov
xlat
mov
push
repnz
mov
pop
retf
mov
sub
pop
mov
cmp
mov
hlt
stc
(bad)
jle
mov
shl
dec
test
pop
ficom
jno
and
sub
jmp
adc
jo
addr16
ins
gs
(bad)
sub
stos
aas
in
nop
dec
fdiv
jne
xor
xchg
add
pushf
jns
lahf
call
or
xchg
sub
arpl
fwait
jle
call
xchg
pop
fimul
inc
mov
out
dec
stos
addr16
int
outs
xchg
pop
out
mov
mov
into
ins
sbb
daa
add
xor
inc
cdq
push
mov
add
lods
inc
cwde
jae
leave
add
in
aaa
aad
fcom
jno
and
push
push
mov
or
and
ins
sti
retf
jmp
pop
pusha
cmp
and
push
mov
pop
add
mov
adc
or
fld
or
or
sbb
mov
inc
pop
loop
enter
jae
and
dec
jmp
fld
movs
cmp
jbe
fst
mov
idiv
loopne
test
test
xchg
int3
mov
sub
dec
jg
popf
mov
(bad)
aam
add
fst
jg
pop
outs
ds
add
push
mov
pop
sbb
push
loope
mov
inc
repz
jae
xchg
(bad)
push
(bad)
pusha
xchg
mov
push
mov
jno
lods
stc
fcmovbe
mov
jle
jl
out
sbb
fld
sub
daa
test
fld
dec
xchg
sub
pop
outs
dec
mov
push
jmp
add
(bad)
or
fcomip
cmp
sub
dec
inc
and
adc
rol
xchg
pusha
jb
mov
lock
pusha
scas
sbb
call
mov
jno
push
ret
adc
sbb
dec
xchg
test
mov
call
call
jg
je
stos
xor
test
jle
ins
sahf
out
dec
jo
mov
cmovl
add
xchg
xor
and
xchg
aad
sbb
repz
xchg
popa
xor
mov
jp
mov
das
inc
sub
imul
sbb
(bad)
outs
(bad)
xor
pushf
in
stos
out
mov
data16
and
(bad)
cmps
aaa
dec
pop
das
pop
push
(bad)
stc
data16
sar
stos
lea
mov
mov
cli
pushf
aad
or
mov
add
(bad)
mov
leave
leave
mov
sbb
xor
xchg
xlat
call
enter
iret
sbb
lods
in
ins
push
nop
mov
cs
(bad)
add
gs
scas
xchg
lods
xchg
push
and
out
xor
adc
dec
and
jl
mov
lds
(bad)
rcr
in
stos
mov
jns
fdivr
sub
jmp
sub
adc
adc
xor
or
imul
mov
dec
loopne
lea
pop
push
jle
pop
pop
push
mov
cmps
adc
rcl
xor
mov
es
mov
sub
push
xor
mov
ret
(bad)
pushf
shl
push
ret
ret
jp
adc
aam
pop
pop
add
out
adc
sti
mov
loope
inc
add
mul
fwait
inc
into
loop
pop
rcr
(bad)
ins
jns
add
cmp
popf
or
fsubr
arpl
add
shl
out
pop
jmp
in
stc
scas
rol
sbb
dec
in
movs
xchg
push
fs
enter
shl
xchg
mov
gs
loop
loopne
sbb
xchg
retf
ror
jno
mov
scas
jmp
leave
dec
test
pop
inc
mov
and
sbb
(bad)
shl
leave
mov
rcr
sbb
sub
sub
sub
push
or
mov
mov
dec
mov
pop
ins
inc
rcr
jo
xchg
out
scas
push
test
xchg
xchg
jle
mov
mov
adc
mov
and
xchg
loopne
jmp
(bad)
outs
xchg
leave
jbe
mov
call
retf
addr16
fcomp
out
std
cmp
mov
push
ja
aas
jno
leave
bound
sbb
aad
into
arpl
inc
sub
int3
fdivr
mov
mov
mov
xchg
shl
arpl
inc
jo
mov
pop
(bad)
stos
inc
femms
and
cli
int
and
into
pop
sub
jae
xchg
dec
dec
out
or
mov
jb
cmps
scas
sub
adc
sti
or
mov
call
mov
jl
clc
cwde
xchg
das
push
fdiv
in
arpl
aam
cmps
mov
dec
jg
and
dec
sub
push
je
outs
imul
repnz
sub
ss
xor
(bad)
fwait
and
pop
jmp
add
call
mov
in
push
jno
(bad)
out
or
jle
ror
fnsave
push
sbb
pushf
repz
popf
cmp
push
daa
cmp
dec
jmp
in
fild
mov
mov
(bad)
inc
(bad)
aas
test
bnd
inc
popa
pop
sbb
cmp
fnstsw
xchg
out
mov
cmp
test
inc
xchg
and
sbb
ret
and
ja
push
ret
sub
stc
or
mov
fld1
mov
adc
mov
add
and
das
inc
xchg
dec
enter
pop
mov
jmp
cld
sub
jmp
movs
cmp
xor
cmps
xchg
js
adc
lahf
push
pop
mul
mov
or
jmp
data16
retf
aad
push
scas
(bad)
(bad)
(bad)
add
in
outs
jb
retf
retf
pop
sub
dec
or
mov
out
mov
sub
movs
mov
mov
imul
pusha
dec
pop
mov
fptan
mov
xchg
mov
repz
pop
ss
jge
clc
(bad)
fdiv
mov
scas
fwait
ja
loop
jns
fs
jnp
push
sbb
and
(bad)
sbb
stc
aad
and
push
inc
dec
or
scas
dec
fstp
xor
pop
add
dec
stos
loop
jns
js
cmc
mov
call
stos
dec
cmp
cmp
fnsave
sbb
(bad)
xchg
jge
js
sbb
arpl
adc
push
push
ja
rcl
in
dec
shl
cdq
adc
dec
in
fs
push
aaa
and
sti
(bad)
add
cwde
adc
test
test
push
xchg
cdq
jns
aad
cs
hlt
mov
and
iret
cmp
cli
pop
lahf
and
dec
dec
pop
pop
addr16
push
xor
jmp
mov
adc
add
(bad)
loope
les
jo
sub
scas
mov
add
mov
mov
sar
out
in
iret
sar
xchg
fcmovb
cmp
bound
int
stc
inc
arpl
ja
mov
xor
mov
call
mov
pop
dec
pushf
add
movs
test
or
and
pop
ret
test
mov
aas
ficomp
inc
sysenter
or
dec
fiadd
dec
outs
push
adc
dec
ficomp
shl
push
test
or
sbb
arpl
xor
and
xchg
lea
sub
and
les
xchg
xlat
sti
ret
mov
dec
not
shl
xlat
and
(bad)
adc
pop
imul
and
cmp
or
inc
nop
bound
cmps
dec
xor
or
in
pushf
mov
das
stos
clc
mov
xor
ins
popf
jp
imul
(bad)
fld
inc
loope
sbb
arpl
retf
cmp
stos
cmp
(bad)
cmp
pop
nop
or
mov
cmp
lea
pop
cmps
adc
or
inc
push
inc
aad
(bad)
sub
sti
das
xchg
jp
jmp
movs
movs
jl
fcmovne
mov
xor
icebp
out
jecxz
jno
jle
sbb
push
jl
mov
ret
gs
and
sbb
or
(bad)
push
aas
dec
fbstp
jmp
rcl
or
les
(bad)
xor
(bad)
loop
jmp
jnp
loope
into
loope
jns
aam
mov
cld
out
sub
stos
add
adc
test
pop
sub
sti
int3
cmc
int
cmp
mov
(bad)
shl
(bad)
cli
clc
test
(bad)
jo
push
jg
dec
clc
pop
stos
movs
ins
mov
add
push
lea
push
repz
or
out
cmp
test
pop
dec
sub
push
add
inc
popa
jle
and
sbb
mov
add
aad
lea
pop
push
xor
fiadd
add
jmp
mov
dec
jne
das
adc
ret
popf
sar
inc
arpl
xor
mov
cdq
pop
data16
lock
(bad)
and
or
call
add
and
out
in
fwait
aaa
pusha
mov
jb
pop
jmp
sub
sbb
stos
sbb
retf
stc
sub
mov
aas
jmp
jnp
pop
jne
mov
jmp
sub
or
addr16
mov
xchg
je
or
cdq
cs
push
add
bound
nop
and
xor
lahf
sbb
fcom
sub
mov
cmp
dec
mov
xchg
lods
xchg
loopne
popa
movs
cmp
or
mov
test
popf
test
retf
fs
pop
xchg
cmp
push
adc
mov
dec
xchg
pop
in
mov
jle
out
xor
xchg
xor
sub
mov
adc
mov
jge
aad
fstp
cmp
in
into
aam
or
in
sub
js
in
fisub
mov
and
xchg
test
cs
(bad)
dec
daa
int
aas
cmp
punpcklbw
inc
push
in
arpl
dec
es
xchg
mov
push
les
sub
and
(bad)
mov
es
pop
xchg
sti
cli
or
fsub
mov
nop
mov
ds
out
xchg
outs
dec
mov
js
inc
test
adc
add
or
adc
repz
fcmovne
fs
sub
std
jmp
jg
out
cmp
ins
jecxz
mov
popf
in
int
outs
mov
dec
mov
ret
jle
jne
adc
test
dec
mov
icebp
data16
lock
inc
mov
ja
mov
xchg
shl
add
mov
fwait
xchg
(bad)
push
cwde
or
or
sahf
cs
into
aad
adc
sbb
shl
imul
inc
sub
ins
outs
js
xor
shl
sahf
shl
xchg
mov
lods
lea
adc
sbb
cs
dec
lock
add
loope
sub
inc
es
repnz
shl
add
push
adc
data16
das
sub
ins
mov
sbb
or
ret
dec
push
jns
jl
adc
xor
mov
ss
jns
movs
(bad)
in
mov
mov
ss
inc
pop
pop
out
jns
jno
adc
xor
hlt
xchg
cmps
adc
jmp
stc
jne
mov
es
rcl
div
jg
xor
mov
test
out
das
mov
xor
stos
fwait
aaa
push
mov
dec
jbe
(bad)
fcomip
pusha
pop
push
pop
in
cmp
inc
xchg
pop
adc
sub
cs
sub
outs
mov
mov
mov
out
retf
sbb
shl
pusha
fadd
push
cmp
fwait
or
inc
lods
dec
adc
mov
js
mov
test
aad
inc
jbe
pop
jno
xchg
sbb
popf
fist
jl
lahf
fs
mov
outs
mov
sub
push
jmp
js
xor
add
lods
xlat
(bad)
jmp
push
pop
outs
leave
ret
sbb
xchg
dec
mov
lods
test
and
cmp
xchg
cmp
imul
cmps
xchg
sub
xor
pop
imul
or
cmp
inc
jb
(bad)
repz
fnstcw
xchg
mov
lds
das
xchg
js
jae
adc
or
pop
sbb
sbb
push
mov
mov
enter
jne
(bad)
fwait
dec
adc
fistp
cwde
jle
in
fs
imul
cdq
jnp
push
xchg
or
sbb
rol
dec
(bad)
retf
imul
into
add
outs
cmp
or
fadd
jmp
inc
pop
jle
jmp
jb
sub
add
cld
push
cmp
add
aas
stc
mov
jge
mov
inc
(bad)
test
jle
add
mov
jnp
pushf
sar
pop
push
loopne
push
jne
xchg
sbb
cmp
jl
std
mov
cmovne
(bad)
loope
mov
aas
mov
mov
aad
add
cwde
push
stc
stos
fcomp
pop
push
daa
or
add
aad
dec
push
cld
sbb
sub
ret
xor
adc
cmp
shr
xchg
jle
mov
cmp
xor
or
rol
ja
fcomp
mov
mov
jmp
imul
sub
add
mov
mov
addr16
lock
outs
ds
cmp
mov
and
jl
(bad)
test
movs
out
je
inc
adc
in
jae
lds
jae
jl
outs
iret
pop
cmp
retf
mov
push
pop
jg
sub
shr
sub
int3
push
ror
(bad)
out
nop
cmps
les
pop
and
push
xor
sub
cmc
hlt
push
ss
cmps
outs
lods
loop
loopne
stos
pop
popa
inc
dec
stos
fs
push
sub
lods
add
xchg
push
add
adc
xor
repz
or
add
push
lock
fidivr
xchg
out
je
out
mov
lods
imul
mov
ds
cmp
test
ficomp
hlt
test
push
pop
in
in
pop
pop
cmp
imul
cdq
iret
mov
mov
ret
test
in
lahf
fnstsw
in
mov
cld
mov
adc
xchg
sar
mov
and
add
add
fs
cmp
pop
or
inc
sbb
pop
add
inc
and
jnp
dec
or
jns
jge
gs
addr16
je
dec
add
pop
add
cmp
jb
arpl
jno
inc
xor
das
jl
push
sbb
cmp
dec
sub
cmp
push
and
movd
dec
add
or
sbb
push
ins
sub
es
cmp
and
arpl
jp
pusha
add
or
push
sub
dec
ds
push
adc
jno
data16
and
adc
pop
ds
je
push
push
sub
xor
jbe
jp
inc
adc
push
or
cdq
call
mov
scas
cld
mov
popf
idiv
int
ret
mov
xchg
ror
leave
call
into
scas
(bad)
mov
jmp
cmps
sbb
push
sub
and
dec
add
inc
cmp
ins
sub
adc
jge
bound
arpl
into
sub
or
jl
pop
fcomp
pop
pop
(bad)
or
iret
in
test
je
das
fs
out
and
out
add
enter
fidiv
xor
sub
mov
retf
stos
fsubr
fadd
jns
and
xchg
jle
lods
sbb
add
sbb
xchg
rol
cmp
inc
dec
add
repnz
xchg
or
ss
sbb
add
mov
mov
mov
inc
add
(bad)
iret
cld
adc
push
pop
adc
cmp
lods
shr
rol
push
imul
sti
fdiv
lock
mov
lock
shl
jb
sbb
fs
jo
pop
(bad)
in
mov
sbb
add
inc
push
or
out
xchg
enter
test
outs
and
sbb
cli
cmp
dec
push
pop
adc
rol
and
push
imul
mov
pop
outs
push
pop
mov
mov
add
cmp
pop
cmp
jb
adc
jbe
jg
test
mov
clc
scas
into
adc
adc
mov
mov
or
movs
in
sub
mov
jno
jb
out
mov
aam
fld
cmps
daa
xchg
mov
adc
(bad)
retf
int3
mov
pusha
sub
mov
mov
or
retf
ret
mov
xchg
cmp
cdq
cmp
inc
fwait
lds
jmp
sti
movs
push
jle
pop
dec
adc
sbb
or
scas
stc
mov
jmp
push
addr16
not
dec
inc
pop
cmp
je
pop
das
mov
lods
loopne
cs
setns
inc
sbb
pop
cmp
push
ficom
or
push
push
outs
and
sbb
nop
into
mov
out
xchg
ror
inc
or
(bad)
iret
int
hlt
mov
data16
ja
movs
rol
pop
aaa
jnp
pop
cmp
call
(bad)
(bad)
fisubr
add
lea
pop
sti
pmullw
and
in
mov
mov
push
sahf
cmp
ins
sbb
push
pop
cmp
sub
out
sbb
cmc
xor
and
fisub
arpl
out
and
or
aaa
into
or
stos
clc
xor
cmp
rol
enter
cld
mov
test
lock
in
scas
(bad)
mov
call
int
lds
(bad)
hlt
test
jecxz
into
(bad)
jecxz
loop
loopne
ret
lods
rcl
adc
push
sbb
sub
bound
and
imul
push
aaa
jp
arpl
push
adc
push
adc
pop
push
jns
inc
xor
pop
adc
xor
push
adc
jae
inc
sbb
and
adc
sbb
outs
das
je
pop
adc
push
dec
and
adc
js
push
or
cmp
jns
arpl
stos
fstp
rcl
lds
mov
cmps
loopne
shl
mov
iret
fmul
cli
cwde
std
mov
rep
rcl
adc
push
sbb
data16
adc
cs
pop
sub
pop
sbb
xor
dec
adc
and
int3
sbb
loop
rol
test
cmps
les
lds
icebp
jmp
xor
cdq
ret
sub
jecxz
jge
or
adc
leave
nop
mov
add
xor
push
mov
pop
cmp
adc
aas
mov
dec
sbb
sbb
loopne
mov
dec
ins
sub
aam
(bad)
shl
fdivr
mov
xchg
pop
jne
inc
js
dec
sub
or
push
inc
sub
xor
and
xor
xor
add
and
ins
and
mov
xchg
fcomp
popa
cmp
cmps
lds
cmps
pop
or
jmp
fidivr
jnp
loope
xlat
cmp
xor
dec
adc
out
in
fwait
shl
push
inc
sbb
dec
cs
pusha
dec
or
lds
jae
imul
fstp
jae
push
scas
div
push
outs
add
inc
add
mov
xchg
xor
add
clc
fisubr
sbb
add
push
jl
jb
movs
punpcklbw
mov
test
xchg
and
and
cmp
fisttp
outs
sub
inc
push
fs
out
movs
out
mov
pop
outs
ds
fsub
xor
xor
mov
test
call
test
out
mov
adc
iret
mov
neg
xchg
ret
hlt
xchg
fsincos
test
lea
jo
ja
push
adc
and
add
out
fstp
lods
aas
call
inc
and
mov
jg
pop
inc
and
and
mov
scas
push
sub
mov
mov
enter
pop
or
mov
(bad)
scas
iret
mov
ins
add
and
rol
leave
mov
cmp
jbe
and
test
mov
xchg
xor
inc
pusha
and
push
fs
jnp
xchg
sbb
add
out
sar
out
add
gs
pop
sbb
iret
mov
cli
mov
test
push
or
mov
lahf
ror
mov
mov
arpl
inc
xor
jle
ins
fwait
repnz
xchg
aas
imul
cld
std
mov
xchg
push
jne
outs
outs
es
or
(bad)
fadd
cmp
loope
mov
inc
sbb
inc
adc
movs
out
jle
into
sbb
(bad)
fmul
mov
sti
adc
in
push
adc
mov
pop
mov
xor
mov
ins
ds
mov
test
mov
ss
ret
or
rcl
stc
stos
in
test
int3
mov
xchg
nop
enter
stos
cmc
test
mov
lahf
call
xchg
cmps
mov
mov
mov
sahf
fadd
scas
out
mov
xchg
movs
stc
mov
out
test
jmp
mov
fnstsw
out
stos
cmc
mov
retf
cmps
rol
and
in
les
sbb
dec
or
inc
adc
jno
push
adc
inc
add
imul
cmp
inc
add
ds
or
and
xor
inc
xor
pop
push
outs
sub
jno
pop
aaa
jp
arpl
push
or
xor
and
push
dec
ds
fimul
ret
mov
fistp
fisubr
leave
mov
fnstenv
in
mov
in
xor
in
sahf
fsubr
fist
rol
icebp
mov
aam
out
cld
mov
rcl
aam
in
loopne
repnz
hlt
mov
fnstcw
mov
fstp
pop
jno
adc
push
xorps
inc
add
cmc
cmp
repz
mov
jmp
pop
loopne
mov
outs
mov
mov
jns
cmp
bnd
pop
or
scas
push
cmp
mov
and
mov
push
imul
cwde
adc
mov
jg
mov
test
call
popa
cmp
fst
mov
push
cmp
and
and
test
popf
sub
cdq
xor
das
jp
fidivr
arpl
inc
ss
sub
in
test
xchg
int3
mov
fild
retf
mov
jno
aas
jae
pop
sbb
repz
or
addr16
cmp
daa
lods
or
pop
jae
movq
mov
call
movs
loop
xchg
xlat
cmps
push
cmp
mov
and
push
pop
aas
js
ret
not
fcomp
ror
shl
fadd
jo
idiv
inc
bound
push
adc
or
shr
outs
daa
stos
int3
(bad)
xlat
add
sbb
gs
sbb
jecxz
in
or
inc
push
pop
sbb
lds
pop
pop
inc
add
mov
out
push
inc
xor
imul
xor
stos
out
sub
outs
btr
mov
(bad)
in
rcl
or
outs
jg
sbb
dec
pop
inc
push
rcr
call
lods
jecxz
cmp
inc
dec
daa
imul
adc
retf
sbb
arpl
ja
pop
gs
xor
outs
fs
aaa
inc
jp
cs
dec
or
push
aas
lods
sbb
lods
sbb
(bad)
test
(bad)
idiv
push
popa
sub
out
jmp
cmp
or
cdq
adc
push
push
xor
fdiv
btc
mov
mov
cmps
loopne
xabort
mov
pop
pop
punpckldq
cli
fst
mov
sub
cbw
xlat
lahf
repnz
mov
pushf
adc
stc
mov
push
jns
cdq
xor
add
sbb
mov
xchg
shl
popf
icebp
in
mov
adc
aam
xchg
leave
js
push
adc
loopne
xchg
sub
cld
(bad)
mov
mov
out
(bad)
test
popa
cmps
outs
aas
inc
(bad)
adc
ds
lods
std
push
mov
mov
les
mov
das
jp
cs
push
jmp
aaa
push
xor
fld
fnsave
in
repz
std
mov
lods
out
stos
loop
cmc
mov
nop
aam
hlt
test
aad
ror
cld
mov
loope
enter
sbb
fs
jo
cwde
std
sahf
ficomp
xlat
cmps
out
into
mov
xchg
jmp
in
in
mov
and
xlat
xor
lods
loope
int3
cmps
jmp
xchg
xchg
movs
xlat
xchg
int
cmc
mov
rcr
fisttp
int
in
pushf
fld
loop
repz
fild
ss
ja
jbe
push
and
cmp
jo
popa
xor
or
jle
inc
cmp
imul
popa
adc
cmp
daa
je
dec
add
and
pop
or
sub
push
inc
pcmpgtb
inc
sbb
pop
add
push
sub
les
(bad)
lahf
repnz
lahf
out
scas
fild
out
rol
stos
in
stos
jecxz
icebp
test
jmp
sti
mov
jmp
cmps
sti
mov
in
rol
mov
xchg
ficomp
daa
mov
sub
daa
add
into
arpl
adc
shl
sbb
mov
or
in
xchg
call
iret
dec
(bad)
rcr
mov
add
mov
fld
(bad)
mov
add
push
push
pop
retf
fistp
popf
es
dec
je
or
cmp
(bad)
jecxz
leave
popf
cmp
pause
jecxz
push
pop
sbb
xor
ins
mov
fdivr
rol
pop
js
fucomi
shl
xor
retf
add
push
mov
mov
sub
or
sbb
aad
aam
xchg
mov
xchg
repz
push
ins
push
xor
mov
mov
imul
sbb
sub
jae
jmp
das
inc
xchg
stc
movs
leave
out
test
pushf
and
retf
nop
push
das
outs
or
mov
sub
dec
ds
xor
jle
cmc
mov
pop
lea
jg
mov
xlat
cmps
jg
or
add
idiv
dec
mov
in
mov
push
sub
test
and
xor
lds
dec
mov
xchg
shl
mov
xor
cmp
rol
lock
inc
and
repnz
pop
cwde
out
xchg
add
in
and
jo
iret
lahf
fsubr
fnsave
loope
ins
add
and
mov
fist
mov
add
jno
push
pop
jb
aaa
pusha
adc
push
jg
xchg
aad
aad
mov
mov
pushf
fst
dec
pop
imul
fisubr
inc
cmp
nop
loop
xor
je
and
sub
mov
add
sti
mov
inc
push
outs
sub
rol
inc
push
jg
pop
cmp
pop
push
cmp
xchg
xchg
pop
jp
push
jo
imul
(bad)
mov
ror
push
cmp
adc
mov
sbb
sub
cmp
sahf
ret
or
cld
xchg
(bad)
sbb
enter
cmp
cmc
adc
loope
js
mov
cmps
les
dec
pop
or
repnz
fistp
mov
out
in
mov
adc
push
push
pop
jecxz
inc
or
jmp
(bad)
sub
mov
movs
test
popf
mov
in
jnp
inc
pop
mov
mov
stc
mov
(bad)
xchg
out
inc
cmc
stos
retf
mov
jmp
mov
add
ins
adc
pop
push
jl
pop
pop
push
or
xor
imul
xor
inc
add
popa
xor
pop
sub
lock
jmp
call
mov
sti
stos
call
mov
sbb
jg
pop
sub
xor
jae
pusha
xor
bound
jnp
dec
or
dec
or
push
or
or
pop
adc
sbb
or
ins
sub
pop
ss
imul
sub
jl
push
pop
push
inc
add
inc
add
push
adc
jnp
push
adc
sub
dec
pop
je
addr16
and
inc
aaa
jb
push
adc
jnp
ins
add
data16
adc
arpl
js
jge
bound
jo
inc
xor
ds
adc
imul
inc
cmp
dec
cmp
push
push
addr16
outs
cmovae
int3
mov
cmp
cmps
cmc
mov
ficomp
dec
push
inc
push
ds
imul
cmp
fnsave
jbe
xor
mov
jae
in
jnp
leave
dec
mov
sub
adc
rol
cmps
mov
arpl
or
fiadd
mov
inc
and
mov
mov
aam
xchg
aam
mov
or
mov
inc
add
sar
je
or
stos
(bad)
aam
call
fwait
cmc
push
inc
sbb
cld
sbb
cmp
rep
fdivrp
mov
stos
pop
or
pop
push
(bad)
mov
dec
push
iret
movs
out
es
rep
dec
push
jns
test
pop
or
(bad)
out
fcomp
test
mov
loop
mov
dec
pusha
and
fstp
ja
loopne
test
fdiv
mov
or
jmp
aas
ja
bound
ins
and
push
or
push
pop
pop
xchg
or
aad
and
add
push
sbb
(bad)
enter
outs
push
and
lock
adc
sub
ins
pop
clc
sbb
int3
pop
ja
pop
out
fidiv
in
xchg
hlt
push
dec
and
(bad)
mov
pop
popf
in
and
rcr
inc
es
cld
call
(bad)
xlat
js
cmp
out
fldcw
mov
jne
test
loopne
push
imul
or
and
xchg
sbb
cmp
xlat
fld
jae
icebp
movs
(bad)
icebp
fdivr
sahf
pop
adc
ds
fstp
outs
pop
sbb
in
mov
mov
inc
push
push
leave
dec
pop
sbb
mov
xchg
popf
shl
dec
cmp
clc
lahf
iret
shl
jb
and
repz
in
neg
imul
and
xchg
sar
stos
fidivr
sub
and
sub
pop
push
sbb
cmp
inc
or
(bad)
lahf
ficomp
js
dec
dec
or
mov
lock
into
pushf
push
push
gs
aam
call
mov
int3
test
mov
sbb
adc
mov
xchg
popa
ins
and
mov
outs
call
add
xchg
stos
push
add
movs
jae
push
xlat
sbb
push
push
in
sti
das
in
xchg
aam
stc
mov
xchg
fs
mov
sti
add
xor
jecxz
rcr
aam
mov
lods
into
lahf
fistp
loopne
(bad)
xor
(bad)
xchg
rol
jmp
popf
icebp
xchg
rcl
fsubr
mov
fnstenv
out
scas
into
scas
jmp
sub
adc
push
or
inc
add
es
and
inc
aaa
jb
push
adc
jno
cmp
inc
pop
pop
aas
popa
daa
jns
pop
sbb
inc
cmp
push
and
gs
cmp
sbb
arpl
inc
and
jno
jo
js
push
push
inc
push
fs
or
jbe
cmp
pop
or
(bad)
mov
scas
cld
mov
popf
idiv
shl
idiv
jmp
lock
out
retf
scas
not
xchg
mov
dec
fcom
enter
fistp
mov
clc
lods
out
mov
scas
loopne
cli
fwait
retf
mov
mov
mov
scas
ror
retf
mov
fwait
cli
mov
xchg
ror
scas
out
fldcw
lds
mov
jle
(bad)
in
mov
test
pop
mov
in
dec
(bad)
lds
jecxz
push
cmp
shr
push
les
test
popf
jg
and
retf
iret
(bad)
mov
nop
sbb
jns
fnstcw
sbb
call
xor
sub
loope
popf
into
pop
lahf
sar
aad
leave
stos
jl
outs
add
mov
sub
call
bound
jo
bound
jg
xor
fdivp
aam
jmp
jns
imul
int3
sbb
in
lods
dec
pop
sbb
mov
cmps
in
jge
pop
jae
sub
push
jno
retf
lods
ret
xor
enter
repz
int3
mov
(bad)
mov
popa
adc
or
pop
mov
mov
out
loopne
mov
lods
xor
inc
and
ficom
pop
mov
arpl
clc
add
xchg
push
add
arpl
adc
pushf
imul
ficom
pop
test
xchg
push
jmp
call
in
ja
pop
mov
imul
jns
pop
mov
xor
in
add
add
push
add
pop
jmp
daa
add
xchg
(bad)
fcomp
mov
pop
xchg
jno
inc
imul
adc
repz
dec
mov
imul
fiadd
lods
xchg
addr16
mov
and
xor
and
mov
mov
iret
pop
aam
int
mov
rcr
inc
mov
leave
push
xor
fmul
cmc
pop
sbb
push
fbld
(bad)
cmp
es
test
dec
mov
imul
push
adc
push
lods
mov
aaa
adc
xor
ret
imul
mov
xchg
jns
mov
cs
aas
cmc
xchg
xor
inc
fidiv
add
xor
xor
clc
add
ror
mov
ror
cld
jg
pusha
mov
fisub
adc
pop
movs
(bad)
sub
(bad)
xor
push
out
sbb
inc
test
popa
xor
sbb
bound
call
mov
push
test
push
lea
and
and
sbb
push
shl
push
out
push
ret
pop
mov
mov
js
mov
in
cs
call
add
lahf
cdq
data16
dec
jnp
push
into
sub
and
mov
test
arpl
imul
scas
mov
xor
es
sub
add
out
jl
adc
xor
hlt
push
(bad)
in
dec
mov
and
xor
call
movs
xchg
inc
rcr
cwde
addr16
cmp
nop
inc
mov
pop
repz
ret
sub
inc
mov
mov
pop
(bad)
es
mov
shl
sti
daa
push
or
add
ror
or
call
sub
jge
pop
fidivr
shl
push
in
in
leave
push
sar
or
pop
sub
jmp
(bad)
cmp
es
test
pushf
lea
jbe
pop
sti
and
repnz
sub
enter
or
lods
je
xchg
inc
lock
inc
les
sbb
push
mov
sbb
xor
iret
aaa
loope
or
dec
sar
push
rcr
dec
mov
inc
(bad)
ds
cmp
dec
cld
pop
sar
jns
sub
(bad)
fimul
in
jmp
fidiv
push
ret
ds
cmp
and
add
ds
sbb
sbb
or
cmp
das
aaa
repnz
xlat
xor
pop
rcl
jnp
mov
ja
xchg
inc
retf
push
shr
out
inc
sub
int3
outs
fst
cli
cmp
(bad)
bound
sub
adc
in
sbb
push
int3
pop
or
or
jmp
rol
or
in
and
int3
das
clc
pop
movs
popf
cwde
imul
test
sub
dec
icebp
je
inc
movs
call
push
cmp
sub
pop
mov
es
and
retf
cmp
cmps
(bad)
test
jo
xor
imul
test
enter
ja
cmp
in
pop
fild
cli
dec
std
pop
mov
out
mov
sbb
push
mov
jmp
fiadd
adc
mov
mov
inc
mov
mov
xchg
dec
or
pop
stos
mov
inc
sub
repnz
push
cli
pop
push
(bad)
cmp
jecxz
adc
psubsw
and
jecxz
xchg
nop
popa
lods
mov
jo
movs
jg
outs
call
out
enter
enter
inc
scas
lea
call
xor
and
jmp
or
in
int3
imul
xor
pop
cmps
jae
pop
mov
das
out
inc
add
aas
rcr
mov
stc
pop
or
loope
aam
fstp
ja
adc
adc
iret
pop
ret
cs
cld
dec
repz
xor
in
cmc
outs
mov
loop
ret
push
mov
xor
sbb
push
mov
jne
or
or
cmp
push
(bad)
and
sub
push
repnz
(bad)
std
lea
outs
leave
pop
mov
pusha
mov
fcom
push
lds
cmp
into
dec
fdiv
aam
add
dec
sbb
and
push
lea
daa
adc
add
pslld
hlt
add
add
daa
jmp
mov
(bad)
adc
mov
loopne
les
or
outs
mov
lds
adc
sti
pop
or
cmc
push
scas
imul
and
and
sub
jae
mov
jp
icebp
sub
cmp
and
adc
sub
inc
movs
sahf
jno
pop
mov
sar
or
jle
sbb
cmc
dec
iret
pop
sbb
test
inc
scas
(bad)
or
fisubr
push
(bad)
cmp
jbe
aaa
cmp
cmp
pop
leave
add
or
ss
shl
cmp
cmp
cs
inc
aad
retf
cmp
pop
stos
mov
in
loopne
in
cmp
(bad)
xor
loopne
jmp
sub
in
es
cmps
lahf
inc
sbb
cmp
push
sahf
push
mov
mov
sub
sub
(bad)
push
mul
pop
add
xor
push
mov
fdivr
loope
lock
jge
inc
sub
sub
cdq
jns
ins
retf
pop
mov
div
or
movs
xchg
ins
mov
and
pop
test
pushf
js
call
jns
add
xor
pop
test
mov
pushf
xlat
mov
jp
jb
xchg
lea
inc
scas
push
mov
jle
daa
sbb
lds
cmc
daa
sbb
xchg
dec
retf
pop
mov
jle
out
je
cmp
push
mov
into
push
xchg
jbe
clc
cmp
adc
cmp
push
mov
stc
imul
popf
pusha
mov
push
mov
fisubr
add
or
dec
enter
arpl
xor
dec
cmps
nop
xchg
ins
fimul
sbb
sbb
mov
outs
mov
pop
enter
inc
mov
js
push
sbb
loopne
test
js
push
int
rcl
je
cmp
out
cld
and
or
pop
movs
je
add
adc
adc
mov
ss
cdq
arpl
sbb
dec
lods
fwait
data16
push
mov
mov
cld
scas
mov
and
pop
xchg
and
xor
add
dec
mov
dec
scas
or
and
outs
and
sbb
movhps
lds
add
pop
movs
sahf
dec
mov
rcr
xor
mov
xor
cmc
and
and
(bad)
cmp
mov
mov
xchg
test
cli
and
push
fidiv
in
jns
cs
pop
add
in
out
stos
cdq
ja
inc
xchg
out
out
and
ss
pop
leave
cmp
add
and
cli
push
cld
push
mov
icebp
pmaxsw
jmp
adc
jmp
mov
pop
(bad)
push
movs
outs
fild
add
ror
sbb
fild
(bad)
pop
retf
adc
dec
sub
adc
daa
repnz
push
retf
jno
dec
fimul
or
or
cli
and
adc
lds
sub
jo
gs
xor
sbb
leave
dec
aam
js
add
enter
cmp
jmp
out
cmc
sub
ds
mov
imul
jg
xor
out
dec
sub
std
push
rcr
xchg
outs
stos
mov
ficomp
cmp
imul
push
outs
mov
dec
mov
(bad)
and
or
pop
or
xchg
xchg
xchg
inc
mov
jo
xchg
jnp
nop
mov
mov
xchg
jns
(bad)
mov
jle
mov
xlat
and
xor
adc
jmp
out
pop
mov
fist
push
add
pop
and
fnsave
cmp
mov
sbb
or
loope
sbb
xor
add
ds
das
push
out
aas
sub
sub
or
fimul
push
mov
push
pslld
or
retf
jbe
dec
test
pop
xchg
fs
inc
retf
push
or
cli
xor
push
xor
loop
in
dec
mov
mov
xor
pop
mov
fstp
cmp
push
mov
sbb
aas
cmp
sub
xchg
imul
pop
je
push
xchg
sahf
ins
mov
mov
and
repnz
push
retf
das
jecxz
mov
mov
int
mov
jge
xchg
lea
sbb
and
pop
fild
repnz
jl
es
xchg
jne
dec
or
pop
mov
inc
lods
outs
aad
sbb
inc
mov
lods
cwde
mov
in
inc
lods
imul
lock
cli
and
and
sub
cli
mov
pusha
int3
cmp
or
push
scas
jne
sbb
leave
dec
mov
fnstcw
adc
push
adc
mov
cmp
cmp
pop
xchg
shr
(bad)
cs
and
(bad)
push
mov
aas
pop
pop
sub
jbe
aas
push
cli
cmp
sti
pop
mov
add
inc
(bad)
jg
xchg
jo
stos
fs
mov
jg
add
adc
push
adc
ds
popa
cmps
jp
je
aaa
loopne
into
adc
push
lock
or
icebp
jge
push
fimul
test
sbb
stc
daa
adc
pop
and
pusha
mov
fiadd
scas
xchg
popf
mov
or
or
add
es
push
div
into
cmp
pop
(bad)
xor
sub
sub
push
mov
addr16
pop
loop
mov
pop
lods
call
fistp
jmp
adc
push
lea
and
pop
pop
sbb
out
nop
cld
inc
into
xor
jnp
xchg
inc
mov
jns
cmp
pop
fnstsw
call
js
fwait
jns
outs
retf
pop
mov
sub
loope
ror
mov
mov
dec
int
cmps
xchg
dec
aam
ret
cmp
and
xor
out
aas
push
xor
dec
lods
jno
cs
sbb
in
dec
rcr
inc
movs
fmul
xchg
mov
pop
mov
dec
xor
jge
and
xor
sti
xor
cmps
call
jae
dec
mov
dec
xchg
jno
imul
mov
lods
jo
jo
or
stc
or
stos
dec
xchg
mov
stos
xchg
outs
shl
or
sub
pop
mov
loop
and
in
iret
cmp
jo
jae
push
dec
mov
inc
mov
retf
inc
scas
cmps
inc
lods
cwde
jb
ins
aam
mov
movs
and
sbb
xor
jbe
dec
mov
inc
cmps
cwde
inc
mov
mov
ins
shr
sbb
jno
cmp
sub
and
pop
test
mov
inc
movs
inc
lods
mov
rol
retf
and
pop
fnsave
in
sti
push
test
and
jecxz
hlt
xor
pop
aam
in
pop
cmp
inc
je
pop
mov
das
sbb
cmp
or
sar
sbb
push
adc
imul
adc
movs
jns
inc
sub
fdiv
mov
add
loopne
inc
icebp
and
test
std
dec
enter
fcomp
sub
add
cmp
icebp
add
pop
test
into
push
std
sub
shl
rol
mov
xchg
dec
lods
jg
sub
dec
or
pop
mov
push
aad
loopne
arpl
push
aaa
mul
or
jg
inc
movs
mov
xchg
pusha
ficomp
mov
jg
ja
call
adc
dec
xchg
push
and
xor
out
mov
cmp
add
and
adc
pop
test
pop
mov
data16
or
pop
mov
inc
out
xchg
jbe
sub
mov
or
push
sbb
ror
jl
or
and
int
mov
dec
mov
mov
popa
mov
mov
jmp
or
adc
push
and
sbb
and
pop
test
pop
rol
or
retf
xor
loopne
loope
pop
cmps
inc
xchg
inc
mov
cdq
dec
mov
dec
lods
xchg
cwde
mov
movs
mov
lahf
cld
ja
sub
cs
imul
leave
jl
pop
loope
or
test
push
(bad)
cmp
cmp
xor
shl
nop
inc
mov
cmp
in
loop
mov
stos
popf
xor
sub
daa
adc
pop
loope
sbb
cs
ret
jle
imul
fsubr
(bad)
(bad)
(bad)
mov
outs
mov
(bad)
into
cmp
xor
sbb
jne
jbe
xchg
push
jg
mov
sub
pop
std
cs
icebp
and
jg
jo
ins
leave
aas
clc
cmp
mov
jb
xchg
inc
xchg
mov
jne
add
jo
jne
push
int3
xor
outs
retf
cmp
idiv
fs
mov
pop
mov
fisub
sbb
xor
sub
and
(bad)
movs
mov
xchg
and
cs
and
cwde
inc
or
cmp
and
iret
ss
dec
mov
outs
mov
jmp
cmc
pop
shl
mov
dec
sti
dec
fidivr
jmp
xor
push
cmp
and
push
std
sub
daa
push
div
adc
adc
or
add
sbb
lock
add
xor
retf
push
stos
jno
add
out
push
stos
push
les
push
pop
inc
mov
add
pop
mov
js
sub
out
adc
jne
pop
scas
mov
add
and
dec
mov
or
dec
mov
or
inc
stc
pop
stos
jno
adc
sub
(bad)
xor
xchg
loope
lock
mov
ror
xlat
push
movs
fcom
iret
inc
pop
and
or
pop
rcl
jbe
arpl
pop
push
call
or
in
sub
dec
fnstcw
imul
data16
inc
lods
pushf
jno
aaa
sbb
and
dec
xchg
inc
rcl
jnp
popf
bound
imul
cmp
cmp
retf
pop
mov
fadd
(bad)
push
mov
mov
sbb
add
adc
pop
mov
lods
jle
fstp
ja
gs
jae
mov
dec
mov
mov
fimul
cli
cmp
pop
fldenv
or
dec
xlat
jo
bound
mov
es
cmp
mov
jb
inc
stos
inc
xchg
xchg
jne
and
cs
mov
rcr
jo
int
or
inc
xor
pop
test
mov
ret
lock
into
lea
or
push
mov
in
pop
lea
jg
jo
outs
enter
add
jno
push
xor
adc
pop
stos
xchg
mov
add
(bad)
sub
jecxz
mov
fs
sub
enter
adc
push
fidiv
loope
sbb
push
mov
stos
(bad)
xor
inc
mov
ins
cld
and
sti
pop
mov
mov
dec
rol
icebp
push
retf
xchg
(bad)
sbb
int
(bad)
cmp
imul
sbb
pop
lea
pushf
inc
fstp
lea
fild
ins
mov
xchg
ficomp
jb
add
xor
fisub
stc
and
cmp
and
jnp
push
xor
sti
jne
es
dec
lods
stos
fnstcw
xor
loope
shl
icebp
and
and
clc
add
dec
mov
arpl
xor
es
dec
cmp
jp
cmp
cmps
cmps
sbb
cmps
fbstp
add
xor
jmp
dec
div
out
hlt
inc
mov
ins
test
scas
mov
fistp
mov
in
cmp
(bad)
cmp
cs
push
int
(bad)
push
adc
out
lods
pushf
cwde
inc
cmps
mov
bound
push
mov
retf
scas
nop
dec
mov
xor
stc
push
adc
and
ss
sbb
push
aam
mov
sbb
xor
dec
aam
std
add
dec
sbb
cmp
dec
not
pop
out
dec
(bad)
dec
mov
clc
and
pop
mov
mov
jae
in
adc
dec
mov
jge
imul
mov
adc
int3
dec
test
aas
sub
in
push
stos
inc
mov
rcr
jmp
ja
jae
or
cmp
mov
mov
push
xchg
nop
mov
repz
sbb
into
lea
fmul
and
adc
je
dec
loope
mov
clc
dec
into
jb
and
push
aad
ds
(bad)
pusha
movs
fstp
rcl
arpl
jns
inc
std
ins
(bad)
ins
aas
xor
mov
out
add
add
add
dec
xchg
jo
lahf
repz
ret
and
pop
not
inc
cmps
lahf
stos
mov
mov
push
ret
daa
das
or
dec
enter
stos
xchg
stos
call
and
xor
push
enter
push
fadd
movs
mov
rol
mov
dec
fsub
push
std
pop
in
mov
inc
xor
xchg
inc
mov
mov
pop
add
dec
mov
and
add
les
push
mov
dec
mov
xchg
jo
inc
mov
bound
add
add
js
jp
mov
cmp
aas
sbb
xor
aaa
repz
in
adc
adc
movs
jmp
sti
daa
jmp
pusha
stc
outs
adc
pop
sbb
cmc
and
or
in
loopne
aad
fmul
pop
mov
pop
push
lock
push
aam
leave
es
(bad)
iret
xor
imul
cmp
icebp
ins
lods
dec
mov
push
les
mov
loop
push
pop
sbb
cld
push
(bad)
dec
mov
movs
or
shl
pop
pop
ror
dec
mov
fs
jne
call
mov
imul
sub
adc
inc
mov
sti
daa
lock
pop
stos
inc
mov
inc
shr
adc
ds
and
(bad)
xchg
jl
cmp
jmp
xchg
test
popf
inc
mov
pop
mov
cmp
jne
cmp
pop
mov
jo
mov
xchg
mov
mov
imul
sub
out
aas
pop
pop
lock
icebp
arpl
or
repnz
scas
jns
or
push
mov
imul
adc
pop
sbb
dec
sar
cmp
out
mov
fist
leave
pop
test
test
dec
mov
shr
pop
lods
cwde
lea
lahf
std
jne
sub
aaa
cmp
xor
push
mov
jle
or
scas
jb
xchg
push
ror
sbb
out
sbb
or
loope
pop
inc
shl
or
not
fwait
jnp
imul
push
pop
adc
and
push
mov
scas
pushf
mov
movs
sbb
sub
psubq
jmp
mov
lock
ficom
out
jmp
pop
mov
jne
inc
xchg
pop
mov
stos
gs
(bad)
into
add
adc
repnz
loop
cmps
gs
or
into
sub
stos
call
inc
aad
sar
pop
xor
jmp
popf
gs
xor
sahf
inc
mov
add
xor
mov
and
hlt
pop
mov
mov
mov
mov
jne
ror
ins
retf
add
jo
ins
mov
push
mov
sub
retf
sbb
fst
pop
mov
jg
arpl
pop
mov
cmp
push
adc
icebp
push
loop
lods
dec
test
(bad)
dec
lods
pushf
addr16
xchg
fwait
bound
icebp
or
jmp
cmp
arpl
pop
lds
loopne
push
(bad)
add
xor
and
cmp
cdq
mov
jbe
mov
sahf
jp
xchg
shl
adc
cmp
dec
test
cmp
sub
enter
or
int
loopne
fimul
mov
jnp
ins
mov
leave
pop
mov
call
mov
cdq
ins
enter
retf
dec
xlat
xor
xor
pop
scas
jp
pusha
(bad)
mov
daa
loope
in
cmp
mul
jmp
std
movs
jle
inc
mov
inc
fiadd
sti
je
cdq
fisub
out
and
(bad)
cmp
inc
fiadd
jl
jns
xchg
ins
les
inc
int
out
inc
clc
push
lock
xlat
add
sub
or
xchg
imul
fsubr
mov
jno
jbe
cmp
xchg
push
add
cwde
leave
fdiv
jbe
jecxz
and
mov
(bad)
fwait
mov
fs
add
add
inc
jae
arpl
xor
push
push
mov
jne
ins
pop
or
es
retf
int
jno
dec
scas
cmpps
test
mov
jecxz
fdivr
and
scas
out
sbb
sbb
inc
iret
jle
xor
push
aaa
cmp
or
out
in
cmp
movs
ja
jle
jecxz
loopne
cmp
bound
stos
aam
pop
lods
div
adc
aad
xor
mov
dec
fiadd
cwde
and
pop
retf
push
cmc
cmc
mov
loope
test
sbb
call
iret
inc
dec
dec
adc
xlat
out
push
xlat
cmp
imul
mov
scas
xchg
div
sbb
push
mov
(bad)
or
inc
hlt
test
add
shl
addr16
inc
pop
xchg
js
xor
adc
shl
(bad)
xor
jmp
jno
js
push
jns
leave
arpl
out
lds
lock
push
adc
lds
ja
pop
jle
cmp
push
push
and
mov
and
add
and
dec
mov
pop
xchg
mov
inc
sahf
sbb
add
cmp
out
retf
fistp
daa
or
out
movs
rcl
sbb
inc
xchg
jmp
mov
jmp
jns
das
pop
sub
jns
mov
loopne
mov
xor
pop
sbb
into
jnp
and
arpl
loopne
xchg
cdq
xlat
test
push
ffreep
outs
mov
add
sbb
(bad)
fwait
and
adc
mov
in
mov
hlt
jmp
adc
or
and
xchg
fist
sbb
jo
scas
into
mov
pop
fcom
mov
pop
dec
in
cmp
or
ficom
test
jns
fadd
inc
pop
jbe
push
mov
cmps
mov
pop
adc
sbb
xchg
shl
xchg
aaa
sbb
das
cmp
xchg
ds
imul
mov
int
jno
cld
fwait
sub
sub
mov
mov
mov
retf
inc
mov
adc
daa
pop
mov
add
rcl
or
dec
addr16
fwait
push
retf
pop
iret
xchg
mov
sbb
push
pushw
dec
sbb
repnz
sbb
pop
cmc
fs
sub
jne
pop
mov
mov
mov
lods
xchg
(bad)
(bad)
and
loopne
cmp
jecxz
in
fisttp
xlat
sub
cld
dec
mov
cmc
pop
pop
dec
lods
push
add
mov
mov
outs
retf
jg
and
repz
sbb
lahf
mov
(bad)
into
cmp
xchg
jp
push
dec
retf
mov
ins
xchg
adc
in
inc
das
inc
xchg
sbb
fisttp
arpl
out
icebp
and
retf
or
jge
inc
add
cmp
loope
fistp
shr
and
push
adc
or
adc
cmc
xor
adc
lods
push
fidiv
push
mov
jns
aad
les
aaa
enter
push
dec
int3
cmp
lods
repz
push
(bad)
push
mov
repnz
lahf
xchg
jmp
fidiv
shl
sub
scas
fldcw
mov
stos
cmps
lds
data16
pop
mov
ja
outs
repnz
mov
sbb
in
or
mov
push
dec
aas
mov
mov
jbe
mov
shl
mov
sub
xchg
xor
dec
data16
rol
cmps
in
in
and
adc
and
mov
lea
pop
cmps
and
icebp
pop
idiv
ja
rol
imul
call
mov
hlt
pop
sub
jns
inc
iret
or
cli
in
pop
mov
jecxz
arpl
xchg
fcmove
aaa
stc
push
push
call
mov
add
dec
lahf
mov
add
in
retf
in
dec
imul
mov
out
jnp
mov
xor
pusha
pop
test
out
std
sbb
or
jns
lock
jp
movs
lock
sub
cwde
(bad)
repz
sahf
jp
ret
scas
pop
bound
dec
imul
dec
cdq
loope
sbb
dec
jnp
lds
mov
pop
and
(bad)
addr16
aaa
sar
arpl
mov
xchg
movs
or
neg
pop
xchg
(bad)
nop
dec
sbb
ret
rcl
pop
xor
scas
ret
jnp
int
in
jmp
out
mov
push
inc
adc
jae
and
mov
mov
ja
pop
lock
mov
in
shl
jbe
cwde
dec
iret
imul
push
stos
shl
scas
sub
mov
fidivr
or
mov
test
and
sar
les
daa
outs
dec
loopne
and
ss
in
sbb
jae
ins
push
lds
xchg
clc
js
or
inc
mov
inc
push
inc
das
cli
aas
movs
dec
loope
mov
(bad)
stc
inc
jmp
das
pop
cmp
jns
sub
stc
adc
inc
mov
mov
jns
jge
mov
sub
mov
push
xchg
nop
jmp
sub
gs
or
xor
imul
(bad)
bnd
pop
add
jno
cdq
push
in
mov
jns
(bad)
sub
sar
popa
cmc
push
mov
adc
jmp
test
pop
sub
fst
in
jmp
and
mov
push
jbe
call
das
push
sbb
mov
icebp
aas
lea
mov
cmp
and
pop
dec
mov
jmp
call
add
lods
mov
data16
cwde
mov
dec
dec
inc
add
gs
pop
jbe
call
mov
sbb
jno
movs
xor
sub
mov
add
test
add
sahf
pop
mov
xchg
jmp
jmp
repnz
or
pop
(bad)
movs
dec
sahf
(bad)
adc
xchg
fucom
test
jg
pop
daa
cmc
in
xor
ja
xor
mov
adc
iret
cmps
jmp
sbb
xchg
test
inc
(bad)
fstp
cwde
dec
scas
jno
inc
scas
fcom
pop
add
adc
push
aaa
jg
jecxz
sbb
jne
ins
(bad)
sbb
sbb
(bad)
xor
leave
mov
aas
scas
mov
dec
jo
or
jbe
inc
mov
sub
aam
retf
mov
xchg
scas
push
out
dec
(bad)
std
mov
and
xchg
sub
xlat
and
les
retf
shl
jne
outs
test
hlt
mov
xchg
nop
dec
pop
popf
xchg
ja
xor
xchg
inc
scas
je
inc
stos
xchg
jmp
cmp
pop
jecxz
ja
scas
rcpps
sub
inc
mov
stos
jmp
mov
and
cmp
(bad)
sub
popf
add
xor
xor
cwde
movs
jg
and
push
adc
je
xchg
(bad)
hlt
add
out
inc
inc
adc
lds
mov
sbb
ja
lods
inc
adc
sbb
sub
jae
mov
sub
push
iret
and
pop
fldenv
pusha
test
and
xor
push
sub
nop
inc
jne
aam
sbb
popa
jp
mov
and
dec
lock
scas
pop
mov
stos
jle
aas
cmp
mov
cli
icebp
outs
int
xor
sub
mov
sub
cmp
movs
mov
hlt
xor
jns
frstor
cmp
mov
pop
aam
push
push
retf
repz
dec
sub
add
outs
pop
mov
sbb
xor
xor
push
push
sub
xor
int
xchg
jle
(bad)
fucomp
push
dec
imul
aaa
iret
add
push
and
div
mov
or
push
ins
movs
push
pusha
ret
cmc
jbe
pop
dec
push
cwde
cmp
(bad)
call
pop
inc
imul
jno
push
jle
call
movs
into
(bad)
xchg
lods
xchg
jbe
adc
and
in
popa
push
and
aas
call
test
sub
adc
xchg
call
dec
jp
mov
icebp
sbb
mov
sbb
stos
(bad)
call
pop
ds
mov
and
add
pop
js
mov
jbe
xor
mov
mov
les
sbb
inc
clc
repz
mov
rcr
repnz
int3
sbb
ror
or
aad
xor
jle
dec
cmp
add
xchg
dec
rcr
mov
mov
cwde
int
push
sbb
icebp
push
es
fistp
gs
push
ss
in
xchg
ror
daa
out
in
(bad)
adc
xor
jno
(bad)
daa
or
lock
push
inc
pop
dec
dec
push
sbb
inc
jno
push
push
ins
lahf
pop
retf
cmp
inc
jle
lea
test
jge
push
mov
clc
jg
cmp
xor
retf
movs
cmp
xchg
iret
shl
mov
sub
xor
leave
out
mov
cmp
aad
clc
ss
add
xlat
movs
out
cdq
adc
fwait
xor
xchg
retf
jp
lods
repnz
lds
(bad)
cmps
adc
mov
push
and
arpl
or
pop
add
cmp
add
mov
idiv
dec
jb
push
call
dec
dec
or
pop
mov
fwait
jno
xor
fidiv
sub
push
mov
loope
pushf
dec
sub
es
sbb
or
fisubr
xchg
xchg
mov
jg
and
add
add
pop
out
dec
test
or
or
dec
jmp
sti
sbb
inc
(bad)
aam
pop
mov
clc
jbe
mov
fld
into
xchg
call
test
cmp
(bad)
repz
stos
xor
(bad)
(bad)
cmc
not
inc
push
add
xchg
pop
repz
call
xchg
(bad)
loope
lock
gs
pop
pop
lahf
inc
sub
xor
and
push
ror
mov
cdq
xor
xor
inc
(bad)
out
je
fsub
xchg
mov
int3
into
jge
int3
xor
inc
xchg
fnsave
xchg
ret
inc
dec
jecxz
jle
neg
clc
mov
test
push
sub
mov
addr16
leave
mov
shr
daa
inc
push
cmp
sub
and
push
cmps
mov
inc
mov
stc
adc
inc
mov
xor
rcr
cmc
jbe
cmps
add
xor
popf
jae
cwde
les
xlat
xchg
stc
outs
fs
jno
add
lods
mov
out
jns
out
cmp
pop
xor
arpl
add
retf
fadd
jmp
mov
mov
adc
sub
mov
repnz
(bad)
pop
mov
in
into
dec
outs
push
add
push
test
inc
das
retf
loop
out
lds
adc
or
pop
add
cmp
(bad)
xchg
pusha
xchg
test
scas
sub
pop
jne
ret
sti
xchg
xlat
sahf
and
add
and
mov
sbb
sti
loopne
add
call
inc
shr
ficomp
cdq
retf
loop
mov
movs
fbld
adc
and
repnz
mov
test
xor
xor
clc
sbb
xchg
sbb
neg
test
in
test
cmp
fadd
out
cmc
(bad)
loop
pop
cmps
call
(bad)
push
xor
jmp
sbb
out
aas
push
fs
mov
mov
not
or
loope
les
call
hlt
inc
cmp
outs
cli
fidiv
and
call
mov
inc
aas
pop
or
xchg
into
cmp
xor
mov
mov
adc
retf
ins
stos
mov
mov
xor
aad
push
out
jg
adc
jb
push
sbb
(bad)
cmp
ror
and
or
push
imul
mov
or
(bad)
pop
sub
add
iret
outs
cs
arpl
retf
jl
push
dec
sub
into
ins
lods
scas
inc
stos
ins
push
xor
xchg
lea
mov
aas
and
push
aas
cmp
sar
jnp
(bad)
jo
in
scas
xchg
sbb
mov
call
fxch
inc
loop
xchg
dec
push
mov
pop
adc
jno
pop
out
jmp
(bad)
enter
imul
hlt
xor
pop
fdiv
push
push
out
jl
pop
ret
mov
push
(bad)
lock
mov
xchg
out
jbe
inc
and
in
lock
jnp
ror
push
add
inc
into
push
out
mov
push
inc
fnsave
je
mov
mov
sbb
es
(bad)
and
xor
jbe
sbb
push
loop
push
jne
loopne
pop
pusha
loope
iret
and
test
out
add
mov
sbb
pop
ror
pop
push
push
movs
cmps
rol
rcr
cmc
data16
push
ins
xor
test
jnp
xchg
es
std
jle
adc
sub
cwde
sbb
cli
pop
mov
sub
mov
pop
pop
fwait
jge
stos
imul
xor
mov
xor
cmc
test
lock
fst
pop
stos
(bad)
inc
fld1
sbb
pusha
lods
pop
sti
jbe
popa
and
scas
rcl
and
lods
jmp
ss
mov
mov
mov
jp
adc
in
push
pop
push
fimul
dec
data16
hlt
loope
push
push
mov
out
jmp
into
jge
mov
push
xchg
fxch
fmul
cdq
jo
test
daa
fwait
lods
arpl
inc
xor
and
pushf
pop
out
lods
dec
xor
jmp
pop
(bad)
cld
sub
cwde
mov
add
adc
inc
dec
popa
jbe
cmp
jg
loope
jno
das
loop
jmp
jne
cdq
mov
xchg
jo
inc
or
in
lahf
enter
lods
stc
cmc
mov
hlt
xchg
sahf
push
jp
pop
ret
mov
jnp
daa
daa
into
in
fwait
in
add
sbb
dec
inc
ins
movs
out
cmp
stos
mov
mov
call
push
cmp
lea
iret
dec
add
scas
retf
push
test
outs
jb
mov
mov
pop
scas
and
xchg
loopne
lock
mov
push
in
jle
in
nop
jb
xchg
xlat
jno
mov
jle
xlat
dec
fwait
xchg
vmovmskpd
jg
xchg
nop
mov
jg
in
adc
das
out
xor
out
pop
test
xchg
jmp
push
mov
test
gs
mov
push
cli
fidivr
daa
sbb
into
addr16
and
daa
lods
js
xor
jle
(bad)
and
inc
mov
or
scas
call
daa
jns
inc
loope
fld
rcr
lods
stos
push
shl
repnz
mov
jb
icebp
cli
pop
js
loop
xchg
repnz
cmp
push
mov
das
cmc
je
jp
and
(bad)
push
sub
es
push
hlt
aas
out
clc
stos
mov
call
rcr
dec
xchg
cdq
fsubr
mov
call
pop
lock
int
ja
movs
and
sbb
gs
pop
xchg
mov
xor
or
in
into
popa
sub
dec
xsavec
out
sub
inc
pop
popf
sub
ja
pop
fwait
loope
push
mov
je
or
fsub
xchg
mov
jnp
or
cmp
ror
xor
sub
mov
rcr
mov
mov
xchg
cmp
inc
cdq
pop
lock
add
js
lods
cld
enter
je
push
cmp
pop
mov
(bad)
xchg
sub
int
cmp
inc
aaa
cmps
adc
jle
pop
inc
not
outs
inc
push
lahf
adc
sub
movs
sbb
ins
dec
xor
xchg
data16
mov
lea
rcl
xlat
lods
cmp
dec
xor
leave
ins
mov
or
popa
mov
dec
push
shl
lods
inc
xor
cmp
push
ret
popf
jne
jno
xchg
and
cmc
dec
inc
pop
scas
adc
out
movs
je
mov
adc
fst
xor
mov
cmp
or
popf
inc
xchg
scas
and
cmp
or
cmp
ret
mov
jg
jns
sub
std
out
push
jbe
femms
mov
call
mov
push
cmps
leave
fadd
push
(bad)
shl
pop
jae
cmps
int3
fiadd
xchg
ret
pop
aam
pop
jp
lds
std
les
sbb
mov
xchg
pop
imul
lock
jp
mov
add
mov
sub
push
les
add
neg
and
mov
test
into
xor
sub
es
ja
fisubr
pop
add
call
add
inc
cmp
dec
push
mov
inc
add
push
pop
and
out
mov
cwde
inc
cs
cli
hlt
jl
es
aas
and
jmp
and
push
or
add
mov
repnz
push
mov
mov
int3
les
test
scas
ret
(bad)
sbb
ss
dec
ret
xchg
mov
sbb
adc
jb
pop
test
or
outs
jg
mov
sahf
sbb
jbe
cli
mov
push
imul
fs
push
cmps
leave
mov
jns
neg
mov
mov
popa
inc
lods
(bad)
push
cmps
xchg
scas
sbb
scas
lods
fidivr
hlt
clc
movs
dec
dec
mov
fmulp
push
je
in
cmps
jmp
popa
popa
fist
pop
mov
dec
jmp
add
xchg
xor
pop
repz
sbb
adc
clc
fistp
sbb
ins
stc
cmp
xchg
icebp
(bad)
adc
std
popa
fild
call
or
stos
add
mov
mov
or
jbe
mov
aad
mov
popf
dec
stc
cmp
addr16
add
icebp
jmp
push
dec
sub
lea
push
out
iret
in
pop
call
mov
and
jae
js
jmp
push
pop
mov
cmp
sub
pop
xor
lods
lea
jb
and
xor
xchg
fsubr
jge
rcl
cmc
pop
xor
dec
fdivr
or
add
enter
cmps
cmp
adc
fs
(bad)
sub
out
mov
setae
pop
push
das
cmps
ins
mov
cmps
mov
jmp
jecxz
pop
adc
mov
repz
rcl
jbe
out
sub
clc
push
mov
fisub
(bad)
adc
push
movs
js
outs
test
arpl
iret
sbb
jp
pop
mov
stos
inc
cbw
inc
xchg
and
int3
jbe
xor
dec
daa
ror
or
sbb
mov
into
lds
enter
jmp
push
adc
mov
jns
and
sub
mov
in
jo
adc
ret
mov
mov
aas
sub
(bad)
ret
dec
pop
ror
pop
aaa
fimul
cmps
outs
or
sub
pop
pop
es
aad
(bad)
ins
jo
jbe
lods
cs
lea
call
mov
xchg
call
add
and
mov
test
cld
scas
adc
xor
cmp
adc
inc
bound
lods
sti
adc
fwait
cmps
or
inc
push
pop
cmp
int3
mov
sub
fwait
fwait
or
icebp
in
xor
mov
test
inc
jnp
pop
dec
cdq
add
sbb
int
ds
clc
cwde
adc
sbb
ins
lahf
das
and
inc
in
out
loope
mov
aas
sbb
xchg
sar
xchg
pop
ret
sub
mov
xor
stc
pop
aaa
pop
xor
shl
test
and
aas
or
in
fistp
xchg
adc
jne
cmp
and
mov
stc
int
xor
mov
call
mov
add
(bad)
fnstcw
fldcw
push
push
mov
popf
aad
mov
lods
jno
sub
shl
push
pop
shl
push
(bad)
sub
and
mov
in
test
sub
jns
dec
mov
jle
aam
xchg
mov
imul
ffreep
mov
jmp
jno
sub
or
mov
fild
cmc
mov
shl
nop
cld
push
nop
fnstsw
push
jmp
(bad)
cmc
mov
mov
retf
xchg
enter
std
xchg
fistp
enter
out
cld
mov
std
mov
fnstcw
lods
icebp
mov
stos
out
stos
jecxz
lock
repnz
fdivr
retf
stos
cli
mov
repz
jecxz
dec
div
(bad)
cmps
(bad)
xchg
xlat
mov
xchg
aam
cld
(bad)
retf
xchg
sbb
sub
ja
jnp
inc
or
add
gs
push
jg
dec
or
pop
aas
jb
push
push
dec
sub
xor
sub
pusha
movd
pusha
adc
jl
outs
sub
add
addr16
add
imul
ds
push
or
data16
je
pop
xor
xor
or
ds
outs
sub
inc
xor
jge
pop
adc
jbe
dec
push
pop
ds
sbb
jp
dec
pop
addr16
push
add
push
aaa
jp
pop
push
inc
daa
jbe
push
aaa
jb
jno
outs
sub
ss
and
je
jo
inc
adc
sub
push
and
jle
sbb
dec
add
push
xor
push
sbb
gs
sub
ds
adc
imul
popa
adc
jl
dec
pop
push
pop
inc
imul
cmp
jl
push
push
push
and
lock
xchg
imul
shl
test
jae
xor
aaa
push
ret
(bad)
mov
imul
iret
icebp
test
mov
push
das
out
in
movs
ins
outs
and
and
mov
xor
add
adc
push
dec
daa
adc
push
lods
xor
pop
fs
aaa
out
cli
fisubr
sbb
dec
int
mov
push
push
push
ins
lods
aas
jne
icebp
aad
leave
es
cmps
and
or
loop
in
ss
adc
cli
cmp
shr
dec
add
(bad)
cmps
mul
cmp
adc
icebp
retf
add
gs
xchg
cli
das
mov
stos
jne
sub
xor
int
cli
sub
outs
stos
add
repz
xchg
int3
pop
es
adc
cdq
popa
aaa
jne
leave
mov
add
loop
in
and
imul
stos
in
and
pop
mov
inc
add
jae
push
(bad)
in
adc
inc
and
out
mov
xchg
inc
jae
pop
mov
imul
lahf
xchg
loope
int3
ss
ret
dec
and
xor
icebp
lods
into
push
and
pop
adc
pop
and
mov
push
or
in
test
xor
pop
std
movs
iret
mov
or
aad
cmc
xor
dec
adc
movs
repz
sbb
icebp
inc
inc
scas
adc
or
je
jmp
das
arpl
sti
fbstp
jnp
cmp
call
stos
out
ins
bound
repz
ins
int
rcl
int3
lock
jb
hlt
mov
adc
sbb
mov
mov
mov
mov
fmul
adc
rcr
ins
js
inc
movs
xor
(bad)
test
pop
sub
sbb
adc
or
(bad)
mov
jns
or
adc
dec
push
push
(bad)
into
mov
push
pop
repnz
jns
adc
stc
xchg
stc
and
mov
or
add
mov
ret
pusha
movs
push
cmp
dec
sbb
sbb
sub
clc
outs
mov
cs
cmp
add
pop
and
test
sub
xchg
fisttp
ret
fcom
xor
and
sbb
aaa
mov
fcom
cld
mov
scas
rcl
mov
lods
in
mov
test
mov
mov
in
mov
fistp
mov
in
mov
jmp
scas
into
(bad)
iret
test
pushf
fld
fisttp
les
into
scas
jmp
sub
adc
jle
pop
adc
pusha
xor
jb
jae
push
arpl
add
cmp
inc
add
xor
xchg
aam
inc
jecxz
icebp
movs
sbb
push
adc
outs
aas
jle
jo
popa
sub
dec
or
pop
pop
push
dec
sub
push
inc
add
push
dec
sub
push
jno
jb
inc
xor
js
push
adc
imul
sbb
adc
js
push
adc
jno
arpl
dec
pop
or
ja
addr16
fs
and
and
adc
xor
sbb
pop
add
jae
jb
arpl
inc
sub
dec
or
cwde
int3
and
clc
test
shl
jmp
xor
sahf
sar
rcl
(bad)
lods
fcomp
rcl
lds
(bad)
in
lods
in
fnstenv
mov
nop
les
imul
xchg
mov
ins
sub
cmp
inc
add
test
jo
test
sbb
retf
rol
pop
pusha
xor
inc
sbb
sbb
aam
inc
adc
repnz
retf
frstor
sub
jmp
push
leave
lea
outs
scas
aaa
pusha
cmp
aas
mov
adc
mov
cmovg
xchg
iret
mov
push
push
jmp
mov
inc
and
icebp
movs
xor
mov
and
xchg
stc
sub
enter
stos
enter
data16
pop
outs
fmul
xchg
aam
xchg
call
push
movs
or
repz
inc
add
cmp
iret
mov
xchg
dec
jnp
je
xlat
xchg
push
dec
cmovnp
je
pop
mov
mov
inc
pop
into
into
scas
jmp
sub
inc
cmp
add
cmp
jmp
jg
sbb
cmp
rcr
jle
or
jp
out
out
ss
xlat
sbb
xor
xor
mov
xchg
pushf
add
or
add
(bad)
cmps
out
lods
ja
pop
adc
hlt
adc
outs
pop
inc
lods
sub
loope
test
mov
add
(bad)
retf
mov
and
inc
das
(bad)
xlat
mov
test
push
push
adc
or
ror
int3
dec
dec
add
cmps
into
mov
sub
or
cmpxchg
movs
or
cmc
stos
xlat
xchg
jne
add
leave
fdivr
scas
xchg
adc
sbb
xchg
loop
pop
es
cmp
pop
mov
push
ss
mov
pop
sub
pop
rol
(bad)
sub
sub
mov
div
mov
lods
cmovno
dec
jnp
popa
mov
fcomp
test
jns
ret
rol
sub
xchg
hlt
cmps
xchg
push
call
inc
sub
out
movs
jmp
retf
fistp
jl
fadd
pop
stc
pop
mov
(bad)
mov
sub
cld
in
ret
loopne
popf
add
int
inc
sbb
in
adc
sub
xchg
lds
fcomp
cmps
outs
pop
inc
fst
mov
jne
imul
ja
inc
sbb
sub
or
push
aaa
jge
push
pop
dec
and
push
xor
xor
jo
inc
xor
jb
push
pop
push
inc
add
test
int
cmc
lods
loope
jmp
mov
sbb
imul
je
sbb
dec
adc
imul
imul
popa
xor
pop
ss
gs
push
push
ja
push
adc
pop
and
adc
cdq
leave
mov
mov
movs
xlat
xchg
retf
mov
xchg
ret
and
int
(bad)
xchg
neg
call
iret
mov
fstp
lock
fdiv
and
sbb
pop
push
or
pop
or
popa
or
popw
push
pop
jbe
push
push
pop
xor
sub
sbb
pop
push
or
dec
add
jge
cmp
pop
adc
dec
adc
push
or
fs
add
pop
aas
pop
sbb
inc
sbb
pop
add
inc
and
jl
inc
add
mov
mov
int3
xchg
xlat
test
popf
aad
repz
(bad)
rcl
stc
xchg
out
cld
mov
mov
sub
add
popa
and
bound
ins
add
push
pop
imul
pop
pop
push
cdq
int3
mov
mov
cmc
mov
xchg
int
in
mov
loope
xor
xchg
shr
sub
pop
mov
sbb
sar
nop
mov
movs
and
and
mov
xchg
arpl
pop
call
enter
movs
dec
add
and
sbb
pop
mov
xchg
(bad)
mov
or
pop
ja
sar
test
add
shr
and
or
fcom
adc
fs
scas
xor
dec
cmps
les
jmp
and
xor
out
sbb
xchg
aad
jnp
adc
stos
lock
movs
xchg
out
mov
inc
adc
fdivr
ins
pop
pop
mov
pop
and
iret
lahf
fsubr
and
call
adc
and
mov
push
cmp
rcr
jle
adc
adc
neg
test
and
pop
adc
or
and
outs
sub
or
sub
popa
and
mov
popf
ret
adc
fistp
movs
aaa
cwde
frstor
inc
pop
or
lods
mov
pcmpeqd
stc
mov
dec
jae
pop
mov
outs
pop
fs
rcl
xchg
jl
pop
inc
mov
mov
pop
cmp
retf
dec
inc
xor
adc
enter
sub
dec
mov
popf
aam
inc
jno
jg
into
test
push
pop
add
sbb
mov
dec
push
icebp
int3
(bad)
pop
adc
pop
dec
daa
adc
adc
in
cld
mov
cmp
mov
outs
and
ret
mov
shl
mov
cmps
jle
push
push
retf
fstp
xor
dec
mov
fcomp
std
scas
out
stos
xchg
pcmpeqw
dec
pop
cmovl
mov
push
dec
mov
pushf
cmc
test
push
dec
lods
add
shl
fild
shl
sub
loope
test
push
mov
push
pop
sbb
cmp
push
jl
das
mov
into
xor
test
push
retf
xchg
mov
jne
and
(bad)
mov
mov
adc
int
mov
nop
dec
cmp
pop
or
cmp
loopne
cdq
fstp
hlt
xor
pop
fcmovu
adc
sub
dec
xor
pop
pop
cdq
mov
std
cmps
(bad)
xchg
xlat
mov
cmp
inc
xor
pop
sbb
outs
and
and
sub
and
imul
add
pop
aas
outs
and
arpl
outs
add
xor
push
pop
add
push
sub
rcl
shl
int
xlat
xchg
cmps
call
mov
cmps
(bad)
movs
in
out
test
mov
nop
aad
add
aad
sbb
jl
cmp
dec
and
outs
add
and
inc
sub
bound
inc
setnp
xchg
into
scas
cld
mov
test
fcom
movs
leave
xchg
rol
jmp
call
(bad)
retf
xchg
out
cld
mov
mov
das
arpl
inc
cmp
dec
or
cmovs
inc
sub
jb
pop
sbb
popa
and
inc
pop
jg
ins
add
and
imul
pusha
xor
or
jp
dec
or
pop
inc
cmp
push
push
aas
ins
and
fs
jns
jno
jo
push
and
inc
add
popa
xor
pop
sub
not
mov
icebp
test
mov
icebp
mov
xchg
(bad)
jecxz
stc
mov
xchg
in
dec
cmovl
popa
or
cmp
inc
daa
pusha
pop
adc
jo
inc
adc
jg
push
cmp
push
dec
or
paddusb
ret
pusha
test
mov
je
cmp
sahf
inc
outs
or
mov
sti
or
push
(bad)
movs
dec
push
or
push
adc
aam
dec
repz
pop
sbb
mov
mov
sub
sbb
jmp
popf
into
sub
leave
mov
stos
cmp
sub
ja
or
sbb
or
nop
int
sub
retf
ss
sti
leave
mov
push
pop
adc
in
out
pop
push
cmp
cmp
out
(bad)
pop
mov
push
adc
ret
push
and
call
jae
or
repz
xchg
dec
es
cli
shl
js
add
(bad)
fstp
(bad)
out
cld
or
push
test
jns
(bad)
sti
mov
adc
fsubr
add
divps
mov
pusha
es
hlt
xchg
sub
es
mul
adc
outs
fcmovnu
scas
in
add
jp
sbb
xor
(bad)
fidivr
dec
pop
punpckldq
fdivr
xor
push
dec
add
xor
repz
mov
dec
pop
es
fist
mov
jbe
icebp
fmul
mov
add
ret
cmc
xor
imul
dec
pop
and
xor
stc
xchg
inc
dec
or
and
jbe
pop
addr16
xchg
(bad)
sub
out
fld
inc
push
add
lds
mov
adc
or
fs
mov
sub
arpl
lock
aaa
sbb
outs
(bad)
xor
mov
jl
adc
mov
xor
cmp
sbb
pop
xchg
xor
in
(bad)
nop
fisub
mov
push
ins
mov
jns
ret
ret
mov
mov
pop
push
inc
cld
sbb
bnd
aaa
jae
repnz
rol
les
cmp
push
loope
test
pop
retf
mov
enter
enter
dec
lods
jb
dec
scas
dec
sub
add
icebp
cs
jmp
div
or
popw
dec
movq
jnp
js
jo
jne
jb
pop
adc
addr16
push
add
inc
add
or
jno
jns
bound
jae
pop
sub
jno
inc
push
cmp
jne
ins
das
imul
and
sub
push
cmp
jo
popa
sub
push
or
addr16
ja
pop
xor
cmp
inc
and
fiadd
fisttp
ret
sbb
jmp
xor
out
sahf
fild
cmp
push
pop
dec
and
dec
and
fidivr
popf
into
and
call
out
lds
out
stos
jmp
std
xchg
fild
int
jecxz
stc
mov
mov
mov
or
adc
inc
add
pop
cmp
jge
dec
adc
mov
loope
in
fisttp
(bad)
mov
xchg
ror
jecxz
cmc
mov
xchg
ficomp
shl
test
add
in
mov
in
movs
sbb
jae
push
xor
xor
jp
dec
cmp
jne
push
sbb
jle
inc
pop
push
aaa
push
adc
jns
push
adc
jnp
ins
add
fs
add
mov
loopne
xor
ret
add
mov
mov
shl
scas
in
mov
mov
call
cmc
mov
lahf
call
mov
ror
stos
jl
xlat
addr16
dec
or
into
sbb
adc
ret
push
adc
pop
int3
adc
(bad)
mov
out
les
mov
(bad)
shl
pop
and
sbb
stc
fst
stc
std
stos
lock
add
xchg
iret
pop
das
dec
adc
repnz
shr
aad
jge
ins
mul
xchg
shl
nop
leave
mov
xor
push
add
sub
shl
push
and
loop
mov
push
sub
or
add
or
sti
pop
aaa
push
sbb
cli
mov
movs
jne
push
inc
cmps
out
test
aas
xchg
sbb
add
or
add
rol
pop
mov
dec
or
(bad)
cmps
div
mov
gs
mov
cmp
(bad)
das
mov
xchg
dec
dec
add
test
cmp
sbb
(bad)
retf
xor
lods
ret
jmp
pop
ds
lds
xor
adc
cmps
nop
or
sbb
movs
or
repnz
or
mov
fcmovbe
mov
push
mov
les
mov
fisubr
daa
inc
stos
xor
fwait
dec
test
bound
jmp
aam
jge
add
ror
pop
add
call
pop
sbb
shl
sbb
fldenv
sub
pusha
outs
mov
xchg
fld
popa
aas
outs
aam
xchg
sar
push
popf
ror
sahf
iret
xor
dec
mov
popf
(bad)
push
and
sbb
fist
mov
out
cld
xchg
fsub
mov
cmp
cmp
enter
pop
sub
or
movs
sbb
adc
ret
icebp
fstp
xchg
dec
cli
add
ret
pusha
mov
movs
in
dec
mov
fs
(bad)
xchg
jno
pop
mov
fsubp
pop
sub
(bad)
leave
pop
(bad)
iret
data16
in
shl
mov
pop
cdq
std
call
and
mov
cwde
cli
test
repz
out
fcomp
xchg
sbb
jb
arpl
inc
or
ins
sub
pop
cmp
or
cdq
call
mov
stos
out
ret
sbb
jmp
xor
mov
(bad)
cwde
repz
loopne
in
in
into
mov
mov
xor
loopne
call
movs
icebp
xchg
clc
mov
repnz
in
std
add
repz
mov
push
dec
cs
pop
xor
jnp
js
data16
and
aas
ins
and
fs
jns
jno
jo
push
and
inc
add
outs
ds
push
aas
jne
jo
jns
pop
ds
je
ins
sub
popa
and
sub
add
xor
sbb
jl
inc
aaa
jae
push
adc
xchg
repnz
jmp
in
cmps
int
cli
mov
lock
out
retf
scas
not
mov
lahf
out
test
add
in
scas
(bad)
mov
imul
mov
sub
leave
xchg
loop
ror
out
rol
pop
pop
pop
adc
dec
adc
push
or
pop
cmp
sbb
sub
cmp
aas
js
jge
bound
jo
jns
push
push
inc
pop
sub
inc
sbb
ins
sub
pop
xor
add
push
js
push
dec
pop
pusha
and
cmp
jne
je
pop
cs
adc
push
inc
daa
push
dec
push
dec
and
dec
and
clc
mov
xchg
imul
mov
jb
push
adc
cmps
jo
and
out
pop
ret
push
aas
and
inc
jle
inc
mov
dec
out
sbb
and
loop
push
adc
in
mov
cmc
icebp
mov
inc
push
push
or
xor
adc
fild
adc
fisub
push
mov
cwde
fstp
sub
enter
(bad)
jmp
les
and
movs
mov
dec
movs
hlt
cmps
or
fcmovb
hlt
mov
popa
outs
pop
cmp
push
test
jl
push
push
push
adc
in
shl
inc
push
sbb
cmp
ffree
sahf
(bad)
hlt
mov
add
xor
push
imul
es
outs
push
or
pop
cmps
mov
add
xchg
mov
out
jp
xchg
iret
pop
cmps
cmp
push
(bad)
scas
dec
enter
sbb
(bad)
push
inc
cmps
jecxz
adc
jno
dec
pop
(bad)
cmc
rol
mov
fnsave
(bad)
scas
ins
movs
outs
fs
ror
fld
or
and
xchg
sahf
cmp
pop
pop
div
xchg
add
stos
es
xchg
fdiv
aam
pusha
cmc
dec
dec
xchg
pop
xchg
lods
cmp
aaa
xchg
sar
mov
shr
ins
xchg
pop
mov
sub
adc
aad
jbe
sbb
mov
sbb
gs
ret
xor
lock
ins
int3
(bad)
(bad)
ins
xchg
cmp
clc
shl
mov
movnti
mov
xor
icebp
push
mov
(bad)
cli
cdq
pop
stos
jnp
xor
stos
jecxz
or
call
mov
pop
adc
fwait
and
test
mov
cmps
sub
cmp
out
jecxz
adc
loope
mov
mov
je
jecxz
mov
jmp
rcl
dec
push
sub
test
sti
stos
cmps
add
xchg
sahf
or
mov
push
into
inc
aas
(bad)
sub
xchg
fidiv
mov
or
dec
sub
popa
lea
cmp
pop
sbb
movs
popa
xchg
inc
ja
mov
das
das
mov
sub
clc
jg
pop
test
jle
stos
retf
pop
xchg
in
mov
xchg
test
stos
sbb
sub
ret
xchg
int3
add
stc
push
jno
(bad)
outs
ins
lods
rol
inc
push
add
retf
sbb
popf
repnz
cli
in
(bad)
sub
adc
push
cld
and
ss
mov
push
and
push
add
cwde
aaa
adc
pusha
adc
mov
int3
les
or
mov
inc
push
sub
dec
fcomi
test
shl
adc
dec
shr
pop
out
add
inc
test
cmp
xchg
fdivr
out
stc
sub
in
out
push
aam
mov
call
xchg
fcmovbe
mov
aaa
loop
(bad)
cld
ds
pop
popa
cwde
xchg
mov
mov
cmc
inc
leave
push
jecxz
(bad)
pusha
push
xchg
mov
cmp
out
mov
(bad)
mov
dec
rcr
pop
cli
ins
jbe
push
gs
pop
in
lds
enter
push
ins
add
sti
push
stc
dec
mov
repnz
cmp
data16
sub
nop
adc
mov
int
call
xchg
jno
add
into
loop
pushf
jp
jmp
adc
mov
inc
inc
cmp
sbb
leave
sub
stos
dec
test
loopne
sbb
outs
push
mov
xor
push
mov
scas
push
out
or
push
mov
jbe
test
sub
pop
or
xchg
and
push
jecxz
cmp
sbb
or
popf
mov
add
ds
movs
push
cmps
adc
cmp
sar
aad
push
xor
aad
ret
push
xor
cmp
push
mov
xchg
aaa
call
cmc
push
jns
mov
movs
push
test
sbb
(bad)
ret
(bad)
pop
or
xlat
test
inc
das
movs
pop
dec
sub
mov
mov
cmp
pop
mov
rol
lock
sbb
mov
xchg
mov
loope
in
lahf
sub
lea
fcmove
(bad)
jge
jnp
hlt
ror
cld
push
jo
add
xchg
dec
dec
fmul
pop
setl
push
push
sbb
scas
mov
jne
xor
push
sar
mov
mov
imul
dec
sbb
dec
(bad)
repnz
js
mov
rcr
jnp
pop
xchg
or
inc
fld
sub
inc
js
(bad)
jo
xor
in
xor
ror
mov
ror
mov
outs
leave
out
push
popa
sti
jp
sub
jns
pusha
jge
cmp
mov
(bad)
test
push
mov
sahf
out
stos
or
push
sbb
jnp
sahf
push
and
sti
sub
imul
or
push
cmp
add
cli
add
mov
adc
pop
cmp
sbb
xchg
das
cld
dec
xor
push
sbb
inc
in
leave
fs
xchg
in
or
jae
not
xor
test
pop
add
xor
mov
test
cmps
xchg
mov
jb
fidiv
or
aaa
dec
or
mov
fcmovne
pop
test
jo
mov
push
sbb
sbb
dec
outs
fmul
ins
add
jecxz
xchg
inc
xchg
push
push
imul
sti
pop
imul
sub
pop
sbb
lds
pop
pop
fisub
mov
pop
ror
fst
and
jo
sub
jmp
sub
js
push
cdq
scas
jae
pop
(bad)
mov
iret
lahf
mov
outs
call
add
dec
push
sbb
cmp
loope
mov
ror
test
cdq
push
push
clc
sub
pop
pop
pushf
test
mov
sub
jp
cmp
lods
fidiv
icebp
arpl
in
mov
sub
cdq
sub
and
lods
xor
fsub
daa
ins
xchg
stos
call
push
xchg
jmp
and
(bad)
push
mov
jge
std
mov
cwde
inc
sub
out
xor
(bad)
movs
rcl
jno
push
iret
mov
out
retf
push
pop
dec
clc
mov
jmp
and
pushf
not
fiadd
fadd
jo
int
shl
xlat
sbb
fnstenv
call
xor
xlat
imul
add
mov
fist
or
or
jae
rcl
neg
pop
jns
ror
pop
sbb
lahf
test
ret
jmp
adc
fst
enter
xor
aaa
retf
clc
mov
movs
pop
add
cmps
xchg
loop
pushf
mov
inc
adc
mov
and
cmp
lahf
adc
gs
adc
and
leave
push
jbe
ror
inc
xchg
fist
repz
cmp
in
add
test
data16
sub
outs
dec
shr
pop
xchg
push
in
enter
imul
test
fwait
sub
jae
add
iret
daa
push
jbe
fsub
sbb
add
mov
outs
aaa
jmp
clc
mov
sbb
dec
je
mov
push
retf
(bad)
shl
push
aam
dec
aas
push
jno
movs
shr
hlt
ja
sti
push
cmc
jae
dec
or
or
jnp
in
aad
lea
ficomp
fdiv
cdq
or
xchg
and
mov
mov
xchg
push
ret
xor
jmp
mov
in
push
mov
push
add
mov
sub
sub
push
daa
push
aaa
mov
and
in
adc
out
pop
loop
pop
fwait
xor
mov
ins
pop
xchg
and
in
shr
mov
mov
outs
push
xchg
sub
ds
pop
into
jmp
pop
sbb
stos
dec
sbb
shr
jns
out
rcl
out
std
test
pop
rcl
xchg
test
adc
xchg
aas
mov
mov
std
mov
les
add
pop
scas
push
ficomp
and
push
loope
dec
icebp
push
sbb
jne
sbb
or
outs
fchs
mov
data16
and
ds
xchg
mov
dec
mov
clc
retf
push
imul
scas
cmps
push
mov
outs
mov
fild
sbb
sbb
js
xor
adc
inc
dec
repnz
fst
mov
fiadd
movs
loope
fmul
inc
cdq
mov
add
stos
jle
push
out
xor
test
jp
push
dec
mov
pop
push
iret
adc
popa
sub
retf
mov
movs
mov
jae
ficomp
in
aas
add
jnp
sbb
pop
je
je
icebp
outs
imul
jle
jbe
dec
pushf
idiv
push
inc
push
sbb
les
js
loop
xchg
xchg
scas
pop
mov
mov
add
hlt
or
add
cmps
jp
xchg
lods
out
mov
(bad)
aaa
jp
clc
and
loopne
dec
mov
cmp
into
in
rcr
jg
in
cmp
aad
dec
in
xor
std
add
add
mov
inc
add
(bad)
mov
clc
or
mov
mov
hlt
mov
or
xchg
sbb
xlat
aad
jns
popf
and
sbb
fbstp
(bad)
jge
les
jnp
jb
pop
rcr
(bad)
movs
pop
cld
test
(bad)
mov
out
inc
test
ficom
sahf
xlat
shl
sub
mov
pop
cld
ja
retf
adc
inc
push
and
dec
rol
mov
jge
jb
or
mov
out
mov
in
jo
fwait
jp
sub
xlat
mov
jno
retf
scas
lahf
cmp
mov
or
sbb
imul
mov
lods
mov
test
aaa
loopne
and
fcmovnu
cmp
sbb
aam
xchg
lock
test
shl
nop
int3
dec
hlt
xchg
es
test
mov
mov
adc
rcl
mov
adc
pop
adc
jge
push
fiadd
cmp
sub
cmps
shr
mov
pop
jnp
push
mov
fs
dec
jmp
mov
jno
mov
jmp
mov
xor
aas
xchg
and
or
sub
sbb
mov
stc
sbb
aas
cmp
mov
pop
xor
xchg
pusha
loopne
mov
in
push
cli
test
or
push
mov
mov
icebp
xchg
mov
scas
or
jecxz
xchg
or
adc
mov
sub
jb
cmps
add
lods
repz
pop
jmp
(bad)
imul
mov
mov
mov
(bad)
mov
mov
inc
leave
test
ret
cmp
xchg
fsubr
or
cmps
jo
mov
add
test
fisub
shl
movs
mov
sbb
or
push
jnp
adc
pop
mov
out
aad
clc
popf
in
xchg
fnstsw
outs
hlt
aaa
arpl
pop
sbb
test
add
addr16
inc
sbb
cs
inc
aad
fs
fcom
sub
and
push
mov
mov
or
addr16
stc
xor
int
fmul
sbb
pop
and
cmp
xor
xchg
xor
call
das
mov
jne
xor
stc
es
dec
aas
fcmovb
scas
aad
mov
sub
sahf
push
mov
call
dec
push
cld
es
cmps
mov
pop
fisubr
fisttp
loopne
movs
enter
loope
stos
mov
xlat
repz
push
add
into
mov
cmp
xor
fisub
aas
mov
and
pop
add
repz
js
clc
mov
mov
mov
stc
test
xor
xor
inc
adc
push
jge
gs
jg
fs
or
adc
into
sti
xchg
ins
dec
retf
lods
jp
and
(bad)
xor
pop
scas
adc
aaa
xchg
mov
add
js
leave
cmp
sub
or
xchg
rol
shl
add
pop
push
mov
inc
cmp
iret
mov
and
sti
clc
ins
xchg
pop
sub
cwde
add
cmc
popa
and
pop
js
mov
retf
jnp
loopne
sbb
lea
or
xor
or
cmp
mov
inc
xor
cmp
dec
and
je
ins
sub
into
ror
inc
push
scas
lods
sbb
jb
(bad)
(bad)
ret
repnz
cmp
mov
dec
push
test
cmp
jne
fisubr
push
xchg
sub
call
es
ja
enter
cmps
pop
lea
test
pop
push
ja
push
jbe
adc
ins
test
cdq
or
push
cld
(bad)
cmp
mov
sar
test
call
push
mov
dec
dec
xchg
mov
aad
mov
vmread
mov
sub
push
adc
mov
or
sub
jo
cmp
imul
shr
cld
bound
das
xor
xor
dec
dec
jae
imul
dec
iret
in
jge
sete
icebp
and
jge
jmp
pop
cld
dec
push
aad
jnp
outs
ficomp
(bad)
in
shr
dec
xchg
lods
sub
(bad)
or
loopne
pusha
or
repz
pop
push
mov
sbb
ror
cmp
xchg
xor
mov
mov
sar
in
push
xor
outs
sti
and
pushf
dec
adc
pop
fdiv
loop
(bad)
mov
test
inc
pop
call
or
ss
call
bswap
retf
mov
adc
aas
imul
icebp
sti
(bad)
jbe
shr
mov
stos
cmps
pop
adc
(bad)
loopne
out
mov
test
sbb
hlt
or
cmc
cmc
(bad)
out
cmps
stos
push
push
shr
jle
sub
aam
xor
(bad)
rol
aaa
retf
(bad)
sbb
add
ins
out
gs
loop
call
gs
mov
jns
push
(bad)
stc
loop
inc
or
mov
outs
pushf
ins
and
jmp
push
jmp
push
cmps
in
add
std
pusha
or
cmp
rcr
adc
std
cld
aam
fcom
lods
cmp
inc
pop
jmp
or
mov
jp
and
je
arpl
aad
mov
addr16
jge
inc
lds
arpl
add
push
je
data16
xchg
sbb
push
add
outs
sbb
into
or
mov
inc
sahf
in
inc
je
out
mov
(bad)
fwait
call
adc
jl
sti
mov
jb
xchg
out
inc
inc
iret
ror
dec
test
or
cwde
test
jbe
inc
rol
cs
mov
mov
adc
popa
shl
dec
fist
add
inc
sbb
and
mov
mov
icebp
in
data16
mov
pop
(bad)
push
cmp
or
pushf
aas
retf
in
cmp
push
cmp
inc
adc
sbb
or
das
add
jge
stos
daa
adc
cmp
inc
and
or
dec
fist
into
mov
jecxz
rcr
ins
xor
add
out
sti
(bad)
push
mul
out
pop
mov
xchg
shl
mov
nop
pop
lods
add
fwait
aad
mov
push
xchg
lahf
and
lahf
into
add
arpl
inc
add
out
xor
into
xchg
add
addr16
adc
add
cld
cmps
into
sar
mov
adc
mov
ja
mov
pop
aam
cld
inc
fstp
push
retf
outs
call
mov
push
cmps
xchg
in
aad
cmc
dec
fld
cmp
jmp
fsincos
pop
inc
fdiv
add
mov
push
sbb
mov
call
pop
cmp
xchg
out
outs
repz
adc
mov
mov
cdq
and
out
neg
dec
pop
test
mov
(bad)
cmps
adc
add
nop
mov
jno
fcomp
retf
mul
mov
mov
pop
xchg
xchg
pop
push
mov
mov
in
es
jmp
mov
cmp
jmp
inc
loope
mov
sub
sbb
daa
push
aam
jbe
jmp
push
push
in
cmc
fisttp
and
ror
lock
sbb
and
int
pop
or
add
fisub
inc
(bad)
mov
mov
into
cmp
pop
and
mov
inc
sub
xchg
jno
pop
push
loopne
dec
in
mov
lea
jo
xchg
fdivr
nop
sub
loopne
shl
std
call
cs
inc
retf
add
cmps
mov
xchg
scas
mov
xchg
int3
sbb
sbb
pop
mov
mov
lock
xor
xchg
push
(bad)
(bad)
sbb
xchg
into
js
pop
dec
iret
xchg
cmps
inc
xchg
das
sub
mov
ret
mov
out
xor
push
push
fistp
add
xor
cmp
and
or
cmps
or
mov
sbb
(bad)
and
loope
or
add
mov
or
repnz
push
push
cmps
jbe
pop
xchg
cwde
add
mov
rcl
sub
cdq
mov
ret
popa
cmps
cmp
lock
dec
and
cmp
(bad)
jmp
mov
and
dec
jnp
add
push
dec
sbb
adc
cmps
jns
xor
cmps
sub
pop
or
aaa
call
test
and
dec
xlat
(bad)
xchg
adc
sub
daa
test
mov
cld
push
rcl
repnz
push
and
in
ins
fcomi
sti
push
sub
mov
stos
cmp
test
mov
out
clc
sbb
rol
jo
in
sbb
in
lock
aam
test
dec
iret
movs
cs
inc
sbb
xchg
inc
mov
xor
(bad)
fmul
stc
and
inc
ret
in
mov
(bad)
dec
call
cld
lods
not
lds
cs
call
ror
js
sub
sti
mov
adc
sub
lods
lea
arpl
xchg
in
lods
dec
sbb
jb
ja
fst
int3
add
stc
pop
sbb
add
enter
cmp
lock
mov
xchg
cmp
mov
xor
xchg
dec
push
jne
test
ret
jge
cs
in
test
mov
mov
pop
adc
(bad)
pushf
mov
pop
aas
fwait
imul
sbb
dec
ins
retf
xor
sahf
icebp
jne
xor
aas
mov
cld
adc
scas
sub
push
xor
jns
ins
outs
outs
adc
dec
add
inc
xchg
inc
push
sub
adc
inc
ins
adc
or
shr
js
rcr
sbb
dec
xor
xor
xor
enter
add
int3
dec
int3
stc
je
mov
loop
in
sub
or
mov
lock
mov
dec
das
dec
inc
int3
and
push
mov
cmps
icebp
sbb
inc
pop
je
popf
jl
push
enter
popa
mov
outs
scas
aad
inc
rcl
(bad)
ret
sbb
shl
add
add
sub
les
cmp
fbstp
call
jmp
fisubr
push
pop
adc
(bad)
shl
test
push
or
xor
fs
retf
ds
std
push
out
inc
inc
dec
pushf
fimul
mov
pop
xchg
push
jo
and
push
cmp
fsubr
or
outs
inc
jmp
jo
xchg
stos
inc
push
and
dec
sub
mov
jl
int
sub
test
mov
pop
test
ret
inc
les
test
xchg
xchg
push
shr
in
scas
jns
mov
icebp
pusha
xchg
xor
retf
push
pop
mov
fldcw
scas
(bad)
daa
sub
dec
(bad)
cmps
ror
and
push
xor
add
xchg
push
add
jnp
fs
cmp
push
adc
sbb
imul
jbe
ja
jbe
push
icebp
xchg
iret
mov
xchg
mov
call
and
and
movs
jecxz
leave
mov
sahf
ins
pop
pop
ds
push
pop
pop
add
jo
push
adc
(bad)
cmp
cmps
les
sar
xchg
mul
fdiv
jmp
fidivr
mov
aam
icebp
mov
retf
pop
adc
pop
sbb
cmp
jle
outs
or
xchg
ficom
aad
(bad)
mov
pop
push
adc
jns
or
rcl
(bad)
mov
(bad)
ficomp
jns
pusha
add
shl
addr16
popf
fisubr
push
sbb
jge
inc
ja
fnstcw
mov
rcr
mov
xchg
xlat
mov
nop
aad
mov
fisubr
inc
or
ins
call
mov
mov
pop
push
adc
push
sbb
lods
into
stos
in
fwait
(bad)
xchg
loop
cld
mov
dec
hlt
mov
cmps
les
jmp
push
aas
dec
or
fwait
push
push
dec
pop
pop
aas
jo
inc
add
imul
sbb
dec
pop
imul
add
mov
lahf
fmul
mov
scas
int3
pushf
fisttp
fnstenv
pushf
les
retf
test
popf
std
scas
mov
xchg
(bad)
mov
xchg
loopne
ror
nop
stc
mov
lods
iret
dec
clc
cwde
cli
mov
mov
cmps
in
retf
mov
add
ja
push
and
xchg
(bad)
(bad)
cld
mov
pop
cmp
adc
outs
cmp
inc
out
jecxz
std
mov
mov
add
push
push
xor
adc
cmp
inc
add
and
jae
pop
xor
jle
inc
adc
push
sbb
sbb
fadd
inc
push
adc
js
pop
mov
mov
cmc
xor
inc
add
mov
fstp
pop
ss
add
push
dec
cmp
jno
xor
pop
adc
or
xchg
aad
fdiv
xlat
movs
cld
mov
dec
add
sbb
and
ins
add
xchg
lods
out
popf
ret
cmc
xchg
fnstenv
out
lods
into
lods
jmp
popf
fisubr
jp
pop
adc
(bad)
fcomp
out
aas
js
push
push
ins
lds
jbe
pop
xor
jbe
inc
add
add
adc
jl
dec
mov
ja
push
cmps
fiadd
repz
dec
cmp
and
outs
aaa
je
fs
dec
cs
pop
cmps
mov
jmp
scas
cld
mov
sub
inc
add
scas
call
sub
retf
mov
sub
jae
dec
or
je
push
iret
mov
lds
lods
lds
cld
pushf
(bad)
mov
aam
stc
mov
std
sahf
sar
add
inc
push
dec
add
movs
jecxz
leave
mov
lahf
mov
xchg
fstp
and
inc
stc
mov
test
scas
in
sahf
mov
loop
ret
mov
lods
lock
subps
jl
pop
fist
dec
or
ins
into
mov
cmps
in
aad
mov
scas
(bad)
mov
test
mov
mov
ficom
pop
cmovp
retf
out
test
mov
test
cmp
imul
and
mov
adc
pop
xor
jo
jnp
gs
je
inc
sbb
or
push
sub
dec
pop
add
inc
pop
inc
or
fild
jo
pop
out
dec
jmp
int3
add
stc
add
push
dec
cmovb
int
enter
rcl
cmp
sub
imul
test
add
out
jmp
mov
jo
jo
cs
sbb
jg
pop
fist
rol
jbe
push
or
jle
inc
movs
out
not
inc
adc
push
rcl
mov
mov
sbb
rcr
inc
and
pop
aad
sbb
dec
adc
dec
in
fst
(bad)
fstp
into
mov
adc
js
imul
xchg
rcl
repz
cs
push
inc
add
sbb
jae
push
test
test
cmp
js
bound
xor
dec
fisub
and
push
mov
lahf
daa
xor
pop
ss
pop
dec
mul
(bad)
mov
nop
xlat
(bad)
cld
mov
stos
enter
push
in
aam
hlt
xchg
sar
xchg
mov
inc
add
imul
xchg
mov
nop
fnstsw
xor
pop
pop
push
fs
jge
dec
ficomp
aam
xchg
out
std
scas
jmp
stos
nop
fistp
mov
div
clc
mov
push
push
adc
js
or
sub
push
es
lahf
fsubr
jg
pop
pop
push
(bad)
add
outs
or
or
jb
inc
xor
mov
iret
xchg
jle
test
test
mov
loop
jno
mov
call
lock
icebp
mov
arpl
clc
mov
jns
imul
(bad)
out
mov
ret
dec
and
adc
inc
cmp
pop
xor
dec
sub
sahf
aad
leave
mov
mov
gs
inc
or
push
ins
push
pop
sbb
rol
dec
and
dec
imul
aam
lds
add
xor
sub
pusha
or
cmp
sub
cmp
lds
xor
not
loop
sub
inc
minps
jnp
pop
push
inc
daa
add
inc
es
daa
push
push
and
dec
cmp
add
inc
pcmpgtd
imul
cs
push
ins
sub
movs
cmp
push
push
bound
hlt
lods
out
mov
stos
loop
xor
bound
inc
and
jno
inc
pop
ins
sub
cmp
dec
pop
outs
and
mov
fcomp
push
or
(bad)
lahf
int
in
mov
int3
lahf
fdivr
and
dec
cmp
les
jmp
sti
das
sub
dec
cmp
jmp
push
adc
add
aaa
gs
jo
inc
scas
mov
ret
fdiv
(bad)
sub
imul
(bad)
cmps
jecxz
mov
ror
mov
mov
xchg
inc
push
or
dec
adc
and
sub
(bad)
cwde
sti
cdq
fbld
adc
pop
sub
mov
icebp
mov
jp
push
imul
pop
sub
inc
add
cmc
push
cmp
push
xor
inc
cs
inc
sbb
aaa
gs
inc
or
sub
inc
add
stc
test
mov
jp
xor
pusha
add
lahf
fadd
mov
dec
or
in
lahf
mov
push
push
sar
mov
rcl
cmc
out
sub
and
dec
inc
sti
cdq
fistp
dec
ds
push
adc
sbb
jae
push
push
imul
ret
dec
or
and
das
pop
sub
dec
push
movs
add
mov
xchg
lods
out
popf
lds
nop
repz
jmp
icebp
mov
push
push
or
jne
jg
outs
or
sub
test
call
mov
xchg
aad
cld
mov
pop
cmp
jmp
arpl
ins
out
arpl
pop
sub
inc
int3
adc
minps
jge
outs
mov
sbb
xchg
je
pop
sbb
or
sub
push
adc
std
xchg
out
test
fs
jb
sub
sbb
or
push
imul
cmp
div
xlat
cwde
fisttp
fstp
mov
xor
cmc
xchg
repnz
fidiv
imul
sub
jge
xchg
xlat
mov
mov
call
rol
(bad)
push
xchg
jecxz
std
mov
mov
jle
pop
push
stos
daa
inc
push
push
ss
adc
add
pop
and
jnp
imul
sub
xor
pop
sbb
(bad)
xor
adc
jp
push
sti
mov
ror
mov
xchg
xchg
imul
gs
mov
xchg
ret
mov
ds
out
fimul
add
push
adc
mov
stos
in
cld
pushf
iret
leave
dec
sub
or
mov
mov
out
fcom
iret
mov
cmovae
xlat
xor
sub
jle
mov
in
(bad)
(bad)
mov
lock
scas
call
stos
or
dec
push
outs
cs
xchg
adc
add
add
and
or
mov
mov
into
aaa
push
add
inc
push
xor
or
addr16
cmps
in
xlat
mov
cmp
test
mov
stos
ficomp
mov
sti
inc
lods
in
mov
xchg
cmps
outs
dec
or
sub
inc
push
arpl
js
imul
icebp
xchg
into
lea
cmps
loope
(bad)
mov
or
in
adc
xchg
fcomp
pop
cmp
push
jb
jbe
(bad)
mov
test
les
inc
daa
popa
es
add
test
mov
test
cmp
jg
jo
das
sbb
pop
pop
pop
(bad)
sahf
(bad)
mov
test
xchg
push
sbb
jl
mov
jmp
jae
inc
je
xchg
cmps
jmp
mov
movs
(bad)
mov
push
push
dec
cmp
lods
in
mov
bound
or
sbb
push
stos
mov
mov
fimul
push
add
popa
clc
push
push
inc
es
push
out
push
adc
inc
orps
(bad)
mov
scas
cld
mov
pop
add
xor
fbld
imul
xor
or
bound
jae
mov
jecxz
push
jg
pop
sbb
cmp
ret
mov
sbb
(bad)
scas
loopne
(bad)
movs
jno
mov
sti
xlat
ret
stos
fadd
imul
andnps
in
scas
int3
scas
call
jo
pop
sbb
int
jge
push
cmp
sbb
aas
pop
sbb
stos
fistp
out
not
xchg
lds
cld
xchg
loope
dec
out
(bad)
mov
cmp
xchg
mov
xchg
div
(bad)
jecxz
aam
stc
nop
mov
xchg
rol
jnp
dec
push
jne
sub
dec
cmp
and
xchg
int3
(bad)
fstp
int3
scas
cli
mov
pop
xor
cmp
fisttp
and
mov
and
inc
or
or
je
ins
ds
xchg
push
jns
jns
js
pop
loope
das
pop
pop
ins
xor
mov
nop
ror
ret
test
inc
xor
jge
pop
adc
ja
pop
cmovl
sub
dec
or
arpl
or
and
clc
dec
sub
pop
push
inc
nop
inc
das
pop
sbb
jb
pop
sbb
or
das
inc
mov
push
pop
and
and
jb
ins
push
mov
xor
popa
add
pushf
fadd
mov
(bad)
mov
nop
aam
dec
mov
cwde
fisttp
rcl
push
fcomp
retf
push
hlt
mov
pushf
fisttp
stos
jmp
mov
jecxz
(bad)
mov
les
ret
lods
iret
xchg
mul
stos
mov
mov
xor
hlt
cmp
or
jmp
loopne
in
cmps
add
xor
sbb
add
jbe
mov
pop
sbb
jno
outs
sbb
cs
sbb
cld
mov
xchg
jnp
mov
movs
(bad)
mov
cwde
fild
ds
cs
add
ss
subps
jnp
int
ja
imul
add
pop
sbb
jbe
imul
imul
add
inc
sbb
(bad)
popf
adc
aad
(bad)
clc
or
or
sub
jge
lock
(bad)
xchg
jmp
dec
add
sbb
(bad)
retf
(bad)
(bad)
test
add
mov
sbb
retf
add
inc
cs
and
data16
lahf
std
mov
and
dec
cmp
addr16
lahf
sar
test
movs
mov
jae
cmp
imul
(bad)
movs
(bad)
mov
dec
fisubr
std
mov
lods
out
(bad)
ret
fdiv
push
add
inc
push
cld
mov
int
movs
push
fs
or
daa
jp
dec
or
int3
in
cmps
retf
mov
adc
pop
sbb
jg
or
inc
inc
push
adc
inc
add
and
dec
sbb
xchg
or
pop
ds
imul
es
add
mov
jne
cmp
mov
fcom
js
pop
sbb
dec
xchg
jns
dec
cmp
jl
lahf
sar
cdq
xor
je
inc
sub
ja
outs
int
or
sub
jge
fcomp
(bad)
inc
mov
cli
mov
mov
and
push
xor
imul
pop
add
inc
mov
add
in
test
retf
or
add
lods
xchg
cli
mov
xchg
loop
jmp
cmp
mov
mov
pushf
cld
sahf
push
out
shl
inc
add
adc
cmp
inc
add
mov
imul
cmps
hlt
mov
ret
and
dec
or
popa
or
xchg
loope
cli
test
jns
pusha
add
lock
aam
fnstenv
dec
aas
addr16
sbb
dec
cs
mov
lods
jmp
rol
xchg
shl
xchg
fidiv
cmp
js
inc
or
(bad)
mov
movs
out
retf
mov
pushf
cmc
mov
movs
(bad)
movs
out
test
xor
out
popf
fld
cld
mov
xchg
scas
ja
inc
add
inc
mov
jno
lock
ds
pop
xor
push
adc
enter
enter
jbe
addr16
mov
jmp
lds
push
adc
ror
fs
mov
inc
add
jg
es
add
js
das
lds
push
fcomp
repnz
add
pop
push
shl
je
mov
test
scas
in
add
movs
jmp
int
(bad)
push
fistp
rcl
ja
imul
adc
jge
pop
sbb
loopne
pop
or
fs
push
lods
les
rol
jno
inc
add
inc
adc
dec
cmp
and
or
data16
adc
fwait
stc
stos
jmp
jns
and
xchg
xchg
rol
xchg
(bad)
mov
mov
push
dec
and
dec
or
ins
sub
fadd
add
enter
push
dec
or
pusha
xor
in
ret
xchg
xchg
inc
add
xor
ret
fwait
cmps
hlt
push
add
jb
pop
loop
jecxz
loop
fimul
inc
aaa
je
pop
pop
sbb
xor
outs
or
sub
lods
jmp
rol
std
mov
xchg
shl
cmp
sub
sub
xlat
nop
leave
mov
cmp
push
aas
jo
jnp
mov
xchg
cmc
mov
mov
rcl
mov
sti
mov
fnsave
and
jbe
je
inc
ret
cwde
fisttp
(bad)
mov
lock
(bad)
(bad)
stos
fistp
mov
dec
mov
les
push
cmp
jle
push
push
inc
pop
push
sbb
jge
inc
adc
xor
push
sbb
xor
push
retf
xor
inc
daa
in
dec
sub
sub
jbe
inc
xor
dec
add
jmp
sahf
cmps
in
push
add
ins
cs
add
and
dec
and
sub
xchg
mov
in
ror
xor
outs
and
push
xor
inc
and
bound
jle
pusha
adc
ret
adc
repz
adc
add
push
jg
retf
cmps
xlat
nop
(bad)
movs
adc
in
retf
shl
mov
call
daa
push
adc
std
(bad)
xlat
xchg
mov
add
jae
cmc
mov
mov
and
pop
dec
or
sbb
int3
xchg
cmc
cmps
fdiv
push
adc
adc
pop
sbb
jo
xor
jl
pop
sbb
add
inc
and
imul
add
inc
push
sub
test
and
addr16
push
jp
jl
jne
pop
xor
add
and
pop
sub
jb
cdq
retf
mov
movs
int
pop
sub
(bad)
popf
cld
mov
(bad)
sahf
jmp
sub
mov
icebp
xchg
ror
cs
sbb
ins
addr16
sub
icebp
mov
mov
cwde
sti
xchg
pop
sbb
dec
or
call
lds
cmp
push
adc
xchg
fdiv
inc
xor
inc
add
and
inc
adc
int3
xchg
fwait
retf
sbb
inc
push
pop
or
sub
dec
adc
gs
and
ret
fs
fs
sub
inc
push
push
test
fs
sti
mov
in
test
mov
push
add
inc
add
out
ror
adc
repz
add
adc
adc
lds
test
mul
pop
ret
cdq
sti
test
xchg
hlt
lea
ins
add
push
out
mov
movs
out
int
pop
sbb
jno
push
and
gs
inc
xor
fs
mov
stc
xor
pop
push
push
lds
aam
mov
sbb
enter
ficom
clc
cmc
xchg
rcl
hlt
xchg
mov
lods
(bad)
fcomi
mov
in
fistp
lods
and
dec
cmp
icebp
adc
pop
add
bound
arpl
add
imul
shl
inc
push
sub
or
pop
pop
add
mov
mov
sbb
cmp
mov
icebp
pop
or
push
or
mov
clc
mov
jmp
test
push
push
cmp
push
daa
sub
pop
push
pop
jne
mov
push
nop
fidiv
pop
fs
sub
iret
mov
mov
cmps
pop
test
test
icebp
mov
mov
jge
push
sbb
arpl
aad
pop
sbb
inc
aaa
ins
repnz
imul
pop
cmp
inc
and
inc
push
jp
jge
push
adc
cmp
stos
shl
shl
and
inc
or
es
cmp
js
push
push
adc
push
sbb
rol
ret
iret
or
adc
cli
nop
ret
lods
ror
push
xor
mov
repz
sub
ins
xor
call
xor
into
xchg
aad
lds
aam
lds
xor
pop
scas
dec
cmp
push
js
add
sti
mov
push
(bad)
nop
xlat
ins
adc
test
fwait
ret
adc
push
retf
scas
cmc
xchg
(bad)
dec
and
loope
ret
inc
xor
pop
sbb
clc
mov
xchg
rcl
dec
push
dec
add
ret
and
adc
es
daa
popa
daa
ins
fstp
pop
add
xor
sbb
sub
out
mov
movs
(bad)
movs
jecxz
popf
les
gs
xchg
hlt
mov
retf
mov
popa
adc
jge
int
mov
movs
(bad)
xchg
push
or
bound
inc
and
outs
aaa
inc
sahf
sub
bound
inc
push
fucomp
stos
icebp
xchg
ror
xor
jmp
outs
sbb
pop
push
adc
pusha
cmp
push
jb
ds
pop
sub
stc
mov
xchg
rol
inc
and
sar
mov
call
jno
lods
lds
les
loopne
inc
push
ins
cs
add
shl
rcr
xor
push
sbb
cwde
fild
push
or
inc
add
xchg
outs
bound
push
or
push
pop
inc
imul
dec
or
push
mov
xor
pop
sub
test
movs
jmp
sub
xchg
repz
je
push
and
dec
push
ror
mul
and
nop
aam
repnz
adc
xchg
shl
jl
dec
or
sbb
cmp
repnz
xchg
push
add
arpl
mov
scas
mov
(bad)
outs
or
or
xlat
mov
mov
data16
cmc
mov
cmp
xor
test
data16
jecxz
loop
add
pop
xchg
shl
jno
add
mov
xor
xchg
fidivr
adc
add
aaa
pop
mul
test
mov
cli
xchg
leave
mov
movs
in
xor
(bad)
retf
dec
cvtdq2ps
push
dec
ss
xchg
fisubr
push
sbb
sub
sbb
adc
(bad)
mov
inc
inc
out
popf
movs
mov
push
sti
arpl
xlat
mov
cmc
or
and
aaa
pop
adc
cmp
inc
adc
je
or
and
add
jle
imul
mov
mov
mov
adc
pop
in
lods
scas
call
cmp
push
adc
leave
xchg
shr
adc
add
and
adc
or
inc
jbe
pop
mov
cmps
xchg
pop
cmp
jno
inc
adc
inc
int
xchg
inc
pop
ja
push
(bad)
xchg
mov
pop
or
fwait
lds
adc
(bad)
cmp
(bad)
mov
mov
aad
cld
es
jl
pop
xor
(bad)
xor
call
cmp
popf
movs
loop
push
inc
or
sbb
mov
mov
pop
pop
popf
fld
(bad)
mov
mov
(bad)
jp
pop
adc
div
add
fcomp
push
xor
push
int3
mov
mov
ss
cs
mov
call
pop
and
push
cmp
push
xor
mov
mov
xchg
xlat
xor
pushf
dec
fmul
jmp
add
ret
xor
xor
data16
xchg
xchg
js
shl
mov
mov
add
iret
sub
pmaddwd
cmps
cmps
mov
fidiv
mov
push
lds
sub
xor
pop
mov
mov
push
je
cmp
push
adc
inc
sub
pop
retf
xchg
mov
xor
inc
(bad)
adc
or
in
or
add
xor
cld
inc
fsubr
adc
aas
into
push
adc
int3
pop
lods
xchg
sahf
fld
iret
xor
cli
mov
neg
mov
test
outs
ficom
mov
mov
scas
js
cmp
jmp
cmc
nop
ret
pop
sar
test
lds
jecxz
cmps
movs
scas
(bad)
fsubr
cmp
ds
cmp
aad
adc
cmp
push
(bad)
cmp
add
push
ror
sbb
push
into
cmp
repnz
rol
or
or
das
sub
sub
or
mov
xlat
xchg
out
mov
push
xor
lea
loope
add
or
lods
xchg
cli
cmp
and
popa
stc
mov
loope
in
fisttp
int
dec
fidivr
jmp
adc
popf
mov
iret
or
neg
icebp
push
xchg
jbe
fwait
je
imul
sub
or
add
sub
push
sub
xlat
xor
lock
test
push
or
or
push
mov
dec
clc
push
xchg
lea
mov
pop
push
push
vmread
cmp
and
jmp
mov
pop
sar
cmp
cmp
push
cli
push
xchg
(bad)
outs
xlat
xor
inc
cmps
je
(bad)
retf
mov
dec
mov
sar
push
xchg
ins
test
sbb
dec
sub
inc
or
cs
sub
adc
add
aaa
adc
xor
sbb
adc
mov
jmp
jecxz
pop
les
loop
inc
test
mov
cmps
lds
aad
repz
sbb
jb
and
add
jo
dec
pop
dec
cs
inc
sbb
cmc
lods
out
mov
in
scas
aam
pop
sbb
xchg
rcr
cdq
fld
jae
iret
xchg
aam
int3
jg
pop
cmp
gs
sti
mov
popf
(bad)
mov
xchg
mov
dec
or
push
aaa
js
mov
aad
rcl
test
sti
test
loope
clc
call
shr
inc
hlt
(bad)
hlt
jge
add
or
dec
dec
jl
scas
loop
imul
sbb
mov
lds
clc
call
shr
fstp
int3
mov
loopne
xchg
repnz
xchg
xlat
mov
sub
aam
int3
jne
test
add
aam
sbb
and
es
xchg
ret
and
xchg
lock
fstp
mov
stc
popf
repnz
ss
or
cmc
jne
mov
xor
imul
shl
push
adc
ja
inc
xor
das
jge
ins
or
aam
inc
pop
sub
push
xor
mov
mov
xchg
ja
inc
and
xchg
adc
fst
mov
in
sbb
add
call
push
ds
call
outs
jecxz
jecxz
pop
adc
call
ret
xchg
enter
and
arpl
jge
inc
add
cmp
xor
ins
push
imul
das
clc
mov
push
or
(bad)
mov
mov
pop
add
and
mov
mov
fistp
jmp
mov
(bad)
leave
mov
fmulp
xchg
in
je
xchg
mov
(bad)
xlat
std
(bad)
imul
adc
and
std
jbe
dec
cmp
push
jne
arpl
jmp
in
icebp
adc
dec
adc
pop
jno
sub
cmp
lds
mov
sbb
adc
inc
or
popa
sbb
bound
pop
retf
mov
sbb
jns
dec
daa
pusha
pop
add
cmc
mov
sub
repnz
shl
shl
push
sahf
push
aaa
jp
fwait
test
pushf
mov
cdq
mov
sti
mov
std
cmps
retf
lods
in
loop
lds
mov
push
adc
mov
pop
sbb
fwait
mov
dec
stos
mov
rcr
mov
(bad)
dec
jmp
int
xchg
popa
in
xchg
arpl
data16
mov
scas
adc
inc
xor
jno
imul
popf
adc
dec
cs
(bad)
lock
cli
push
int
xlat
push
lock
jmp
repz
out
jl
xchg
out
les
out
call
pop
inc
daa
ficomp
jo
adc
add
movs
push
and
gs
rol
jne
into
or
inc
mov
jne
lods
jg
imul
cmp
jmp
inc
shl
fcom
inc
and
add
jae
jo
jmp
add
loopne
stos
repnz
mov
dec
inc
pop
inc
and
mov
loop
int
es
(bad)
fdivr
cmps
mov
dec
sub
js
xchg
pop
sub
sub
mov
cmp
dec
or
xchg
push
ret
cmps
mov
push
aas
xchg
outs
sub
adc
push
sti
mov
loope
fcmovu
(bad)
xchg
fidivr
mov
in
mov
add
pusha
and
push
pop
jbe
jp
inc
cmp
jae
and
jae
pusha
inc
into
mov
in
je
jae
adc
inc
inc
call
out
or
fdivr
cs
andnps
fs
inc
es
daa
ins
add
outs
sbb
sub
aaa
gs
inc
or
mov
dec
leave
lods
ds
inc
dec
loop
hlt
sbb
fcmove
cmps
push
lock
out
cli
mov
(bad)
mov
sbb
inc
bound
sbb
mov
outs
aaa
inc
pop
je
outs
cmp
jne
ins
push
pop
push
jge
pop
push
push
cmp
push
and
pop
push
std
mov
xchg
push
or
mov
jmp
cwde
rol
jle
inc
and
xor
pop
add
(bad)
or
add
dec
push
push
ss
daa
popa
es
add
outs
sbb
fs
and
xor
xchg
and
sti
fsub
fdiv
outs
sahf
fnsave
scas
cmp
sbb
loope
fild
fimul
xchg
mov
call
mov
cld
mov
or
loop
out
out
(bad)
adc
aaa
movs
mov
or
pop
and
inc
cmp
mov
xchg
bound
dec
daa
push
add
inc
add
push
adc
jnp
push
adc
xlat
cwde
cld
rol
inc
mov
shl
or
mov
gs
jns
pusha
pusha
or
cmps
xlat
pushf
adc
jl
ja
cld
cmps
add
stos
retf
movs
cmp
pusha
jae
mov
pop
xor
pop
das
ins
pop
inc
add
adc
cmp
jge
frstpm(287
(bad)
adc
arpl
mov
out
cmp
or
mov
(bad)
(bad)
jmp
jecxz
xor
or
mov
mov
xor
jnp
or
dec
adc
inc
and
dec
or
stc
push
push
or
mov
in
aad
cmp
mov
int
out
jne
cmp
into
mov
mov
je
pop
fcomp
fs
xchg
hlt
ret
les
je
ret
scas
cld
repz
jnp
pop
push
and
inc
add
pop
dec
out
xchg
or
push
or
push
je
jle
imul
sub
pop
push
jae
jle
daa
popf
loope
cmc
fcom
fnstsw
mov
cmps
ret
mov
stos
rcl
dec
ins
(bad)
xchg
stc
jmp
sbb
fiadd
nop
add
jae
nop
mov
or
mov
call
dec
xor
jne
dec
pop
and
dec
adc
sub
jns
jp
inc
adc
aam
hlt
lods
div
icebp
push
push
aaa
test
mov
or
mov
adc
fidivr
fsubr
sar
xor
mov
or
pop
push
inc
cmp
fs
inc
pop
outs
push
popa
add
call
mov
and
xor
outs
push
mov
cmp
and
arpl
ret
scas
in
adc
arpl
enter
fistp
inc
fidiv
retf
daa
inc
add
pop
cmp
jmp
pop
add
ins
push
ficomp
fcmovbe
outs
cmp
das
xor
iret
xchg
cmc
adc
jle
ins
or
mov
adc
dec
pop
inc
mov
mov
mov
sbb
sub
push
sub
and
ja
fs
xor
or
and
push
cmp
push
int3
sbb
pop
scas
call
sbb
push
push
imul
mov
push
shr
cld
js
data16
and
mov
enter
daa
jne
jb
push
push
ins
and
dec
sbb
jge
jns
inc
adc
test
mov
adc
pushf
not
(bad)
jne
xchg
add
jl
adc
dec
xor
inc
jmp
dec
adc
arpl
popf
icebp
pop
in
inc
cmp
or
mov
fiadd
inc
xor
cmp
xchg
retf
pop
pop
fcom
dec
jmp
adc
fmulp
fdiv
pushf
shl
xor
fcomp
push
dec
ss
cmps
mov
icebp
test
xchg
mov
pop
retf
nop
repnz
fbld
mov
adc
jae
and
pop
push
dec
test
pop
popa
mov
mov
mov
out
into
mov
jnp
gs
add
adc
push
add
sub
aas
cmp
pmulhw
outs
icebp
jbe
imul
rcl
and
inc
sbb
jns
mov
jle
iret
xchg
cmc
adc
lock
cwde
mov
jmp
test
mov
push
retf
add
push
or
inc
cmp
inc
cmp
jge
call
aas
ins
jge
adc
inc
(bad)
fldcw
cmps
shl
and
inc
bound
pop
cmp
sub
dec
jnp
inc
dec
push
dec
pop
dec
out
mov
mov
mov
hlt
(bad)
jp
jnp
mov
push
std
cmp
xchg
scas
loopne
(bad)
call
fcomp
(bad)
(bad)
push
cdq
sub
mov
add
and
imul
xor
jns
or
cmpxchg
test
test
addr16
jmp
adc
and
pop
push
dec
test
pop
popa
mov
test
adc
push
xor
push
sbb
sbb
pop
add
push
pushf
sar
dec
jnp
scas
or
sub
mov
out
jb
jne
push
inc
inc
inc
jmp
push
aas
cdq
or
mov
lds
mov
and
(bad)
std
mov
clc
mov
out
mov
retf
(bad)
in
adc
not
clc
jno
dec
inc
in
mov
or
int3
mov
push
mov
sahf
std
dec
jg
aam
inc
inc
inc
jmp
inc
push
inc
or
push
or
dec
adc
inc
and
dec
or
arpl
inc
and
push
jbe
push
adc
jne
jge
clc
fucomi
jae
ss
stos
fidivr
js
fistp
sbb
jmp
mov
out
mov
xchg
lods
out
mov
hlt
mov
xchg
xchg
mov
cmps
in
shl
cmc
ss
sbb
jg
inc
adc
xor
adc
jno
inc
pop
ins
das
pop
add
adc
pop
push
inc
es
push
aaa
jno
jl
pusha
cmps
(bad)
popf
fsubrp
mov
hlt
not
cmc
xchg
cld
mov
fidiv
movs
xlat
(bad)
int3
lahf
fstp
out
mov
mov
mov
xchg
in
aam
iret
popf
fistp
scas
std
mov
hlt
cwde
call
mov
scas
cld
mov
push
mov
lods
bound
jmp
pop
jb
inc
and
cmps
loopne
ror
lods
daa
daa
aaa
je
pop
sbb
or
and
inc
pop
jge
ins
push
ins
sub
dec
cmp
adc
ins
push
inc
sub
jle
dec
or
or
pop
sbb
inc
jno
mov
in
imul
or
push
gs
mov
sbb
mov
movs
sub
dec
and
cmp
cdq
or
fwait
or
lds
je
adc
pusha
and
sub
push
add
inc
add
or
push
or
dec
adc
inc
and
dec
or
popa
and
sbb
(bad)
jle
mov
xor
imul
shl
nop
mov
push
inc
dec
repnz
test
push
xor
lods
int
repz
add
ret
pop
or
fs
push
dec
sub
arpl
jg
popa
adc
jp
imul
and
jge
push
push
or
mov
xchg
jecxz
leave
inc
add
js
xchg
icebp
ret
xchg
shl
ficom
and
pop
mov
mov
mov
fstp
call
rcl
fadd
icebp
mov
mov
jmp
push
scas
or
mov
mov
cwde
mov
mov
sub
xchg
retf
neg
cmp
push
mov
mov
mov
fisubr
push
xchg
loop
dec
cmc
rol
jne
mov
cmp
push
xor
pop
sbb
jno
push
push
inc
jmp
(bad)
rol
(bad)
fs
imul
loopne
ds
in
retf
mov
cmc
mov
test
out
adc
cmp
mov
ror
aad
je
jae
cmps
adc
jae
shl
cdq
sbb
adc
and
or
ins
aaa
je
mov
or
xor
outs
dec
dec
hlt
xchg
stc
shl
repnz
into
jle
outs
sub
ja
ja
push
rsqrtps
jbe
dec
add
imul
in
(bad)
mov
fidiv
shl
jge
pop
jp
(bad)
cmp
push
and
popf
mov
loop
iret
int
jb
xchg
add
xchg
ret
sub
test
jl
popa
dec
(bad)
or
xor
pop
add
popa
add
fwait
(bad)
lods
in
rcl
cld
fisubr
xlat
mov
cmps
sar
das
dec
sub
js
fwait
or
push
ss
push
fs
ficom
das
push
xor
or
push
pop
inc
jbe
mov
mov
les
dec
add
jge
jbe
push
dec
cmovno
xor
sbb
fs
pop
adc
mov
xchg
jmp
retf
xchg
mov
mov
or
dec
push
and
aad
push
gs
fidivr
inc
jae
cmps
add
mov
mov
gs
dec
sub
test
xchg
rcr
add
outs
add
adc
jmp
push
push
xchg
adc
inc
cmp
(bad)
xchg
sti
shr
adc
push
jb
push
je
icebp
fwait
hlt
in
cmp
mov
in
mov
mov
nop
jge
xchg
fidivr
mov
cmp
sub
outs
xor
mov
xchg
mov
push
mov
cmp
xor
xor
add
adc
xchg
int
cld
mov
sbb
sub
pop
jge
neg
call
pop
dec
jl
jnp
push
inc
fstp
dec
call
inc
or
push
sbb
jle
pop
pop
or
imul
or
cmp
(bad)
into
mov
(bad)
repnz
mov
mov
fisttp
into
sbb
sbb
inc
add
pop
jp
push
stc
mov
mov
inc
(bad)
pop
out
mov
sbb
ins
test
iret
(bad)
(bad)
loopne
(bad)
ja
sbb
rcr
cmp
pop
add
and
fcom
cli
cmps
std
cmps
out
ror
(bad)
imul
rcr
sbb
daa
ja
imul
jbe
mov
mov
dec
adc
out
sbb
mov
cmp
and
jecxz
cdq
stos
cli
mov
or
mov
mov
in
stc
in
mov
test
or
dec
bound
push
or
dec
aas
xchg
test
pop
xor
mov
mov
mov
sar
jle
dec
inc
in
repz
xchg
cli
aad
inc
and
repz
or
dec
xor
or
adc
js
in
xor
inc
or
aad
sbb
jmp
mov
scas
hlt
xchg
jb
repnz
fnstenv
jno
in
stos
add
xchg
xlat
scas
or
dec
aaa
movs
fstp
std
adc
push
ins
jg
test
sbb
inc
dec
loop
ja
test
mov
xor
xchg
fidivr
add
iret
(bad)
(bad)
loopne
(bad)
ja
sbb
rcr
cmp
sub
loop
sbb
dec
adc
pusha
adc
ret
rcl
jg
jbe
stos
adc
js
jb
loop
loopne
pop
pop
je
mov
cmps
push
mov
fdivr
jno
dec
mov
or
jbe
dec
mov
mov
mov
inc
cmc
mov
inc
ret
cmp
jge
or
cmps
jmp
mov
test
pop
jge
lds
lahf
and
inc
cmp
in
mov
push
call
lahf
sti
out
push
lods
test
aad
mov
test
int
jp
cmps
lahf
aam
jge
(bad)
mov
loop
sub
dec
add
mov
add
push
out
mov
int
sub
fistp
add
fcomp
xlat
loop
int3
cmps
cmp
imul
pop
inc
and
dec
or
arpl
mov
arpl
scas
cld
adc
test
ret
icebp
xchg
repnz
daa
xor
add
mov
ja
jmp
pop
lahf
ins
sbb
xchg
inc
popf
lods
mov
ret
or
mov
cmp
dec
(bad)
sbb
cmp
mov
inc
xchg
aas
add
sub
aas
test
js
ret
xchg
mov
pusha
cdq
aaa
movs
loop
mov
pop
jmp
stos
jmp
loop
xchg
sub
fwait
popa
adc
ins
fcomi
test
mov
or
in
adc
ror
daa
test
xor
mov
inc
sbb
xchg
cmps
mov
xchg
inc
xor
(bad)
in
mov
clc
out
jno
jmp
cdq
xor
pop
(bad)
fs
dec
xor
iret
add
stc
push
jg
push
jnp
lds
xchg
adc
scas
movs
ficom
mov
shr
in
cmps
sti
and
repnz
mov
bound
cdq
push
inc
test
repz
(bad)
jecxz
dec
pop
mov
adc
fnstcw
cld
cmp
in
loope
pop
xor
jle
dec
dec
mov
add
(bad)
mov
lods
call
and
sub
inc
stos
xchg
(bad)
(bad)
xacquire
imul
pop
pop
ds
sub
inc
arpl
push
or
dec
dec
cmp
nop
sbb
push
imul
in
jmp
test
fdivr
and
sbb
nop
repnz
mov
mov
xor
cmp
ror
mov
jmp
out
mov
cmps
ss
in
outs
xchg
test
fld
mov
xor
into
sbb
xchg
push
dec
bound
outs
pop
outs
xor
out
push
jne
jmp
imul
(bad)
ds
jl
daa
xchg
popf
mov
sbb
mov
or
shl
es
lahf
int3
dec
adc
pop
ror
out
dec
call
jl
rcr
push
adc
add
retf
pop
loope
dec
jno
fwait
jnp
out
fmul
cmp
ror
push
ins
sbb
repz
xor
add
fistp
pop
imul
call
jg
jle
sbb
daa
fmul
mov
data16
mov
test
retf
ss
int
pop
mov
mov
push
(bad)
out
cmp
ins
or
loop
adc
inc
dec
dec
or
jns
mov
repz
adc
pop
test
das
mov
push
and
jl
dec
cmp
push
mov
js
dec
repz
xchg
push
inc
ret
in
jo
inc
ret
sub
mov
(bad)
hlt
arpl
stc
or
mov
(bad)
lods
pop
(bad)
jle
jecxz
repnz
outs
xor
and
push
mov
in
adc
xor
dec
cmp
cmp
xor
sbb
fstp
scas
xor
xor
cmps
not
xchg
ins
or
add
xchg
sub
outs
ret
jmp
ds
dec
hlt
pop
or
ins
in
push
push
std
mov
addr16
loop
xor
add
xchg
jle
and
push
stos
xor
sbb
mov
out
stos
dec
xchg
mov
fs
cld
lahf
mov
dec
inc
(bad)
mov
imul
and
sub
int3
jge
pusha
mov
push
outs
mov
and
(bad)
sub
dec
pop
inc
push
in
das
sti
jae
lds
test
adc
xlat
mov
pop
int3
into
xor
mov
add
jmp
add
retf
sbb
fisubr
aas
push
pslld
std
ret
jmp
or
xor
inc
iret
iret
mov
cmps
xchg
mov
or
mov
sub
pop
cwde
adc
inc
repz
dec
push
int3
fsub
xor
push
movs
mov
ss
test
das
ficomp
mov
call
shr
stos
xchg
out
xchg
sbb
mov
sub
idiv
arpl
cmp
adc
retf
push
ins
mul
inc
dec
mov
imul
dec
imul
outs
test
xor
jno
lods
stc
in
out
pop
test
and
test
int3
mov
add
outs
out
pop
push
test
pop
addr16
int
fwait
xor
gs
xchg
inc
inc
scas
xchg
or
dec
jle
jne
add
jp
scas
enter
fcom
inc
xchg
cmp
adc
popf
popa
loop
mov
iret
cdq
sub
mov
mov
mov
cmp
mov
into
or
mov
cwde
adc
push
js
retf
int3
push
add
xor
cmp
adc
jnp
fisttp
loopne
scas
and
sub
push
dec
leave
cmp
inc
outs
aaa
out
mov
les
jg
xchg
adc
(bad)
and
sub
inc
and
loope
jns
imul
and
adc
sti
retf
fimul
and
test
cdq
pop
in
into
add
jle
sub
in
pushf
inc
pusha
pop
dec
fidiv
(bad)
iret
loopne
test
aad
pop
stos
outs
(bad)
rol
fmul
pop
or
popa
mov
retf
add
mul
fdiv
mov
out
mov
cmp
push
out
outs
dec
or
or
movs
outs
push
pop
mov
jbe
push
push
fsub
mov
push
mov
dec
and
mov
jae
push
adc
and
cdq
das
push
or
repz
addr16
ret
ret
lods
or
jae
(bad)
in
dec
(bad)
sbb
pop
rcl
cmps
int
icebp
xor
cli
clc
push
mov
mov
xlat
mov
inc
sbb
xchg
adc
push
arpl
jl
pop
xchg
dec
pushf
pop
sub
and
or
cmp
dec
adc
xchg
mov
outs
push
ins
and
jecxz
lods
mov
rcr
call
cs
xor
test
and
scas
push
mov
add
call
jmp
int
shl
push
das
(bad)
aad
cmp
ins
retf
fst
ficom
pop
sbb
sti
aas
iret
push
and
fstp
xchg
adc
sub
push
mov
test
adc
fldcw
repnz
loope
dec
push
mov
mov
in
add
cmps
cld
mov
or
dec
(bad)
xchg
mov
dec
xor
add
fwait
out
xchg
outs
imul
stos
jp
clc
cmp
adc
ret
mov
mov
adc
lods
and
inc
mov
push
shl
pop
xchg
stc
pop
jne
jl
dec
ret
or
stos
popf
add
cmp
ret
jge
in
shl
and
push
(bad)
in
lods
test
xor
aas
cmp
or
(bad)
pop
sbb
push
lahf
sub
sub
out
jp
int3
lds
cmp
sti
fwait
inc
int
fcom
jge
inc
das
js
les
rcl
mov
movs
sti
pop
shl
push
imul
jecxz
cmp
xchg
inc
data16
mov
sub
jno
cld
nop
stos
xor
or
push
daa
jnp
orps
adc
xchg
add
add
int
pop
and
leave
xor
jno
or
addr16
sbb
aaa
in
or
and
pop
pop
mov
jle
add
jl
xor
push
dec
mov
mov
mov
loop
pop
push
sti
mov
xchg
iret
dec
jg
mov
mov
cmps
in
pop
pushf
cmp
in
aas
sub
int
sbb
adc
adc
jl
cmp
push
jecxz
vphsubbw
adc
aaa
ins
aad
je
loopne
imul
mov
ret
mov
mov
aam
push
call
repz
add
push
adc
mov
hlt
inc
ss
cmp
dec
push
mov
sar
or
mov
sti
sbb
inc
adc
scas
je
and
jg
pop
ds
shl
gs
mov
(bad)
dec
in
pop
pop
retf
mov
jmp
xor
sub
push
push
aas
pop
ret
fwait
or
and
in
sti
fdivp
mov
mov
neg
aad
fst
mov
jmp
pop
rcr
repz
pop
mov
sti
jmp
pop
outs
cmps
(bad)
sar
inc
push
mov
scas
(bad)
mov
sub
cmp
mov
pushw
adc
repz
push
sub
jmp
pop
daa
or
sti
push
mov
pop
mov
mov
xchg
push
push
cmp
dec
test
pop
in
mov
movs
clc
push
imul
sub
adc
lock
ins
dec
scas
xor
jp
jecxz
xor
stc
and
aam
mov
mov
mov
retf
ror
in
stc
out
(bad)
mov
leave
xor
dec
adc
imul
and
ins
dec
je
inc
in
and
icebp
cmps
ins
xor
or
and
and
mov
lock
dec
arpl
dec
mov
jae
dec
xor
(bad)
imul
sti
pop
or
pop
(bad)
mov
loope
mov
mov
ret
imul
loope
or
pusha
loop
dec
sbb
mov
push
mov
and
jg
mov
fst
loopne
icebp
out
sar
push
cmp
cmp
pop
mov
xchg
xor
stc
lahf
cmc
in
arpl
dec
jae
cld
hlt
pop
jo
clc
neg
inc
mov
adc
nop
dec
ja
or
or
mov
add
loopne
fdiv
sbb
cmc
mov
out
add
mov
in
ret
mov
clc
ret
jne
mov
test
(bad)
cmc
jg
adc
jnp
scas
lods
jne
or
push
xchg
stc
mov
jp
daa
pusha
dec
je
jge
and
stos
sub
call
loopne
jno
data16
bsr
pop
daa
aaa
dec
jl
sbb
dec
xchg
es
pop
outs
into
out
jno
inc
sahf
push
repz
mov
mov
pop
push
retf
(bad)
movs
sub
jno
sbb
pushf
dec
mov
or
in
jb
fisttp
test
movs
sbb
mov
fadd
ds
jnp
mov
mov
jg
out
pop
pop
pop
(bad)
fild
pop
out
pop
repnz
gs
pushf
mov
sbb
mov
(bad)
lock
and
dec
or
ins
shr
jecxz
mov
xchg
or
push
mov
adc
add
or
cmc
jl
arpl
sub
pop
shl
enter
jmp
popf
cmp
retf
leave
xchg
mov
loope
movs
jo
shr
adc
inc
add
imul
and
lahf
mov
cmps
jl
es
dec
sbb
out
add
add
add
cmc
xchg
xor
adc
push
pop
ror
js
and
clc
mov
sub
cmp
sub
gs
mov
dec
jg
arpl
cs
cmp
sub
(bad)
mov
xchg
js
xchg
or
popa
sub
sar
dec
loope
add
int3
aaa
jmp
mov
xor
push
clc
xchg
in
sbb
sub
sahf
sbb
sbb
sub
arpl
test
leave
enter
sub
and
ja
jle
push
es
movs
and
or
sbb
(bad)
icebp
or
inc
(bad)
movs
or
dec
clc
fidiv
and
repnz
ins
out
ror
mov
ret
in
and
rol
ror
arpl
ror
arpl
ss
pop
add
ficom
nop
in
sub
clc
jae
js
mov
lods
pop
push
fwait
outs
clc
mov
movs
jl
xor
out
push
sbb
cld
mov
cmp
and
js
das
push
cld
adc
jb
fs
push
movs
inc
push
adc
jns
sub
cli
pop
jle
aaa
jle
pop
icebp
pop
xor
adc
jmp
pop
(bad)
(bad)
add
jbe
inc
outs
icebp
mov
loopne
inc
sub
popf
mov
nop
popa
mov
call
adc
outs
pusha
dec
out
fs
xor
shl
jp
lods
out
ret
(bad)
jmp
repnz
enter
lods
sbb
cmp
adc
pushf
xor
out
mov
mov
stos
mov
movs
loopne
mov
mov
mov
mov
cmp
repnz
(bad)
jmp
cmp
ret
xchg
cmc
push
test
mov
sbb
into
cmp
inc
aaa
or
jecxz
or
pop
and
add
mov
int3
jae
clc
(bad)
cmp
mov
ficom
jge
test
add
xchg
sub
dec
push
add
fsub
jbe
fld
adc
lock
cdq
pop
push
pop
pop
sar
fwait
sbb
fdiv
fiadd
cmp
mov
inc
fidiv
add
jns
ins
enter
push
xchg
adc
add
test
xchg
inc
call
and
sbb
jb
add
mov
pop
mov
es
mov
ret
(bad)
enter
dec
bound
sbb
or
push
xchg
jae
push
jns
repz
fimul
dec
loopne
xchg
cdq
and
fisttp
adc
mov
movs
popf
sar
cmps
sbb
(bad)
imul
popa
or
(bad)
xlat
cmp
div
icebp
jecxz
jb
das
sbb
pop
or
popf
(bad)
pop
sub
mov
out
aad
cmp
jb
and
push
sbb
cmp
aad
stos
pop
lea
in
mov
xor
imul
loop
int
push
or
xchg
and
sub
mov
cmp
pop
sub
sub
cmp
mov
xor
adc
inc
dec
das
test
jbe
in
jne
es
xchg
sub
daa
in
cs
mov
imul
imul
fist
adc
adc
xchg
fdivrp
test
cmp
je
xchg
xor
aam
in
mov
mov
dec
pop
push
pop
or
cmps
mov
loopne
add
cmp
popa
sub
sub
in
cwde
xor
xchg
mov
shl
imul
sahf
arpl
ror
mov
sti
aad
sub
add
mov
sub
or
out
and
pop
or
cmc
mov
add
sub
mov
push
jns
pop
outs
cld
mov
stc
lar
and
adc
arpl
cmp
mov
jb
add
ins
or
or
dec
mov
jl
xchg
(bad)
hlt
mov
mov
push
adc
push
xor
mov
mov
cdq
ds
xchg
add
inc
rol
sub
sahf
les
in
stos
sub
rcl
sub
call
pop
xlat
fmul
and
pop
pop
pop
daa
lods
out
mov
les
ret
loop
dec
cmps
adc
inc
xlat
inc
mov
cmp
ss
push
fwait
rol
(bad)
xor
lods
js
repz
push
jb
cmps
mov
add
inc
sti
adc
pusha
das
shl
fwait
cmps
jbe
cwde
jp
add
mov
mov
jmp
and
jecxz
inc
cmp
inc
ja
and
popa
pop
outs
inc
and
loopne
std
mov
dec
jecxz
mov
test
or
popf
ret
test
mov
jp
add
dec
mov
leave
add
cmp
jle
(bad)
scas
jmp
shl
and
or
js
cmp
sub
cmp
ret
cmp
stc
dec
push
icebp
push
iret
xchg
jb
(bad)
es
bound
fistp
dec
cmp
mov
pop
push
mov
outs
shl
out
xlat
cmp
cmp
jp
sub
and
cmps
sub
push
dec
cmp
ret
(bad)
sahf
sub
es
outs
mov
in
pop
mov
jg
mov
popa
iret
or
jmp
fbstp
add
push
dec
mov
pop
outs
gs
push
jo
retf
lahf
pop
or
das
jnp
ret
imul
imul
loope
add
sbb
mov
sbb
add
cli
ds
jmp
xchg
scas
sti
xchg
adc
add
sbb
mov
fwait
push
inc
pushf
and
xchg
or
(bad)
mov
(bad)
xor
movs
adc
jecxz
jp
xor
(bad)
not
out
hlt
mov
sub
in
dec
repz
jbe
xor
aad
enter
fstp
es
xor
sbb
pop
and
fs
sbb
sbb
mov
iret
sbb
xchg
jmp
or
ins
mov
int
mov
lea
or
mov
data16
jno
add
mov
jmp
push
fdiv
push
adc
shl
jo
adc
pop
mov
sbb
cmp
addr16
jnp
dec
aaa
out
stos
push
in
fdiv
jno
mov
xchg
push
mov
je
mov
sbb
inc
or
inc
xor
ficomp
xor
ins
xlat
test
add
sbb
mov
mov
dec
and
test
xchg
xor
mov
mov
inc
jae
in
sbb
enter
enter
xchg
pop
cmp
adc
and
mov
push
outs
or
xchg
push
lea
mov
and
or
xor
sbb
aad
cmp
test
lods
jb
add
in
ror
loope
stos
les
loopne
or
dec
cld
or
ins
sub
hlt
out
stc
jecxz
xchg
push
or
sbb
inc
or
push
adc
jae
or
(bad)
mov
sbb
jmp
popa
and
sbb
gs
dec
mov
dec
push
sub
jmp
daa
mov
(bad)
fild
aas
shr
in
cwde
adc
fld
outs
push
iret
cmp
or
dec
mov
xlat
jno
and
mov
pop
fcmovnu
rcl
int
sub
loopne
dec
sbb
xchg
mov
dec
xchg
jmp
sub
or
mov
and
adc
add
push
retf
sbb
push
(bad)
in
leave
jecxz
fs
xor
add
jo
gs
aad
pusha
data16
lds
sbb
call
les
sbb
mov
inc
ja
push
into
add
popa
mov
push
movs
cmp
popa
add
and
cmp
js
adc
enter
add
ds
es
popa
pop
fcomp
movs
and
pop
mov
adc
sbb
push
(bad)
in
mov
xor
dec
cmp
inc
or
cmc
xor
add
jne
mov
aaa
jle
and
inc
adc
push
inc
outs
dec
xchg
xor
outs
and
inc
jmp
out
shl
adc
mov
mov
sqrtps
mov
lea
mov
sbb
push
mul
jno
and
mov
call
retf
aam
jl
imul
sub
ss
sbb
jle
clc
mov
jbe
jg
cs
scas
int3
sub
std
ss
xchg
jecxz
outs
mov
sti
push
add
ins
add
std
jp
mov
(bad)
in
push
out
mov
mov
out
mov
bound
mov
jmp
sbb
(bad)
pop
pop
adc
(bad)
cld
mov
add
call
mov
in
imul
and
push
adc
and
inc
sbb
(bad)
outs
pop
pop
cmp
loope
shr
jmp
rcl
cmp
jg
cmpxchg8b
fs
test
bound
push
adc
call
xchg
inc
leave
bound
dec
scas
frstor
dec
cmp
jno
ficom
sbb
mov
inc
add
retf
mov
push
jl
es
call
push
js
pop
scas
fsub
jle
movs
mov
cmp
outs
or
jge
test
aaa
and
pop
out
movs
fsubr
(bad)
shr
xchg
fdiv
rol
cmps
fcomp
mov
lods
xchg
idiv
xor
aam
frstor
xor
xchg
outs
pop
sub
inc
scas
fistp
test
inc
adc
push
pop
mov
outs
ds
sbb
push
adc
sbb
inc
adc
xor
rcl
and
pop
or
jecxz
mov
loop
fcomp
mov
xor
stc
xor
push
aas
push
aam
int3
mov
pushf
ficomp
std
lahf
mov
stos
repz
rcl
or
pop
or
push
aaa
call
out
(bad)
push
lea
std
mov
retf
xchg
mov
cmps
in
xchg
push
push
push
push
in
sub
pop
push
icebp
ds
pop
sbb
jo
adc
and
mov
xchg
mov
mov
out
inc
or
inc
adc
pop
sub
cmp
in
cdq
movs
div
stc
mov
xor
push
sub
fcomp
das
cs
pop
and
push
dec
ss
loope
mov
rol
jb
push
in
fdivr
stc
jle
mov
mov
iret
xchg
mov
pop
popf
cmp
sub
fs
out
or
add
xchg
cld
mov
push
ss
push
and
out
xchg
loope
leave
dec
adc
dec
imul
test
repnz
mov
sub
in
addr16
jge
(bad)
sub
ja
pop
cmp
jg
ret
xor
pop
pop
mov
ins
sub
pop
pop
inc
shl
test
arpl
or
in
push
sbb
rol
in
push
adc
sbb
int3
sub
push
outs
cmp
jecxz
pop
cmp
jmp
repnz
inc
sbb
add
(bad)
sub
pop
jnp
in
shl
ja
cwde
fimul
inc
fmul
sbb
jmp
retf
add
sbb
imul
mov
test
fist
loop
rcl
ret
mov
loopne
push
fld
xchg
shl
iret
cmp
xchg
ror
lods
les
imul
mov
cmps
iret
lahf
mov
mov
in
mov
jo
jle
push
adc
dec
sbb
popa
or
rcl
nop
xor
push
out
xor
pop
sbb
rep
or
or
and
int
loope
xor
sbb
or
(bad)
test
push
and
popa
and
fwait
std
mov
mov
adc
jp
ret
inc
xor
cmp
jae
xchg
mov
xor
retf
mov
aam
add
inc
pop
jl
movs
(bad)
movs
repz
jle
inc
cmc
cdq
jmp
push
cmp
pop
cmp
(bad)
call
push
popa
adc
clc
xor
jns
xchg
fadd
cmp
mov
bound
push
pop
daa
fs
stos
movs
into
lods
mul
fs
data16
push
lods
in
adc
inc
adc
xor
pop
imul
jne
mov
repz
or
rcr
test
or
ds
sub
xchg
mov
hlt
cmps
jmp
enter
mov
inc
adc
(bad)
xchg
std
aaa
and
jg
sub
mov
loop
sub
(bad)
mov
stos
fild
inc
add
(bad)
popa
sbb
inc
sbb
call
dec
sbb
ja
pop
sbb
push
and
aaa
pop
sbb
mov
xchg
ins
sub
in
mov
rcr
popa
mov
mov
nop
movs
retf
or
or
sar
jns
push
or
and
pop
pop
in
xchg
mov
in
mov
mov
mov
cmc
mov
and
pushf
movs
lods
loop
les
pop
jmp
int3
test
call
jmp
adc
jnp
cmp
push
xor
adc
retf
mov
and
push
gs
dec
and
pop
add
sti
mov
dec
iret
(bad)
(bad)
mov
aam
repz
test
adc
imul
aas
inc
test
call
pop
sbb
cmc
mov
mov
mov
ds
push
push
sub
pop
push
dec
sbb
jmp
stc
mov
xlat
mov
pop
imul
xor
xchg
out
sub
inc
add
dec
repnz
cmp
cdq
mov
mov
mov
cdq
pop
enter
test
adc
push
push
jle
into
dec
cmp
push
mov
dec
or
mov
shr
retf
jnp
push
test
jge
pop
shl
inc
or
jo
in
in
(bad)
and
loop
lds
or
cmp
int
ret
add
dec
add
ror
inc
cmp
movs
mov
pushf
fistp
cmps
std
gs
push
jp
cs
pop
sub
scas
hlt
cmps
loopne
or
push
or
cdq
fidiv
movs
xlat
xchg
mov
popf
mov
retf
nop
xlat
popf
into
mov
stos
cmp
mov
into
xchg
cld
pop
inc
and
repnz
in
dec
sbb
jne
and
sub
and
adc
mov
pop
sub
xchg
movs
jnp
call
push
and
and
stos
mov
lods
push
cmp
xor
xchg
dec
inc
xor
mov
(bad)
and
data16
jno
push
xchg
cs
dec
push
mov
xchg
xor
pop
repz
in
(bad)
sbb
dec
sub
sahf
into
lods
stc
sbb
in
mov
pop
std
xchg
js
cmp
xchg
and
sbb
cmc
mov
fild
inc
adc
hlt
out
fsub
jbe
inc
sub
push
sbb
enter
jle
dec
adc
adc
dec
sub
test
stos
jmp
ss
sbb
popa
loope
inc
mov
test
pop
mov
movs
rcl
mov
shl
das
pop
push
pop
jp
jae
dec
test
pop
add
push
out
out
out
or
int
fcomp
je
gs
adc
mov
sbb
sbb
lods
out
xchg
xor
jno
mul
push
push
add
iret
mov
adc
sub
adc
das
inc
or
pop
out
or
call
and
and
adc
popf
inc
sub
adc
mov
and
rcr
jo
and
je
dec
daa
push
push
imul
fild
push
stc
jnp
dec
push
and
push
add
and
out
mov
icebp
test
paddq
clc
sub
outs
fsubr
xchg
les
ror
addr16
shl
inc
sbb
pusha
push
les
cmps
mov
mov
and
xchg
call
ror
hlt
xchg
popf
iret
leave
stos
movs
enter
icebp
mov
iret
xchg
mov
mov
scas
in
call
ret
mov
ins
adc
test
mov
xchg
inc
adc
cs
aaa
push
or
pop
in
shl
mov
jae
push
or
je
pop
ror
imul
aad
rcl
(bad)
add
scas
(bad)
xchg
cmps
pop
inc
lock
add
jecxz
inc
jnp
sti
push
popa
cmp
mov
aam
fild
pop
cmp
cmps
aad
movs
repnz
(bad)
fld
scas
xlat
test
mov
xor
in
jmp
xor
popa
sub
xlat
test
jns
js
xor
cmp
scas
movs
int
xor
fst
lds
aad
or
out
les
out
mov
push
scas
in
enter
fidiv
call
ror
mov
data16
xor
add
sbb
into
pushf
icebp
(bad)
addr16
inc
and
adc
xor
pop
sub
xor
jns
imul
fisub
addr16
test
shl
mov
push
pop
aas
jge
and
inc
push
dec
cli
in
aam
sbb
jmp
scas
icebp
mov
inc
(bad)
cmp
mov
cmp
imul
stos
js
pop
sbb
push
add
jle
jne
push
das
jge
pop
in
in
lods
(bad)
mov
inc
(bad)
jmp
outs
sub
ss
stc
and
scas
jmp
dec
cmps
mov
mov
mov
push
retf
mov
mov
out
cmps
dec
or
jle
pop
push
jbe
jno
cmp
enter
es
inc
sub
jle
mov
xchg
mov
xlat
mov
push
pop
dec
push
pop
add
mov
and
xor
int
shl
je
ins
jae
iret
dec
mov
mov
push
es
or
sub
adc
dec
mov
xchg
fild
imul
xor
pop
jns
inc
ret
mov
add
dec
sbb
pushf
fild
aas
movs
out
mov
(bad)
rcr
xor
dec
adc
je
mov
add
test
pop
inc
xor
pop
cmp
adc
iret
popf
movs
mov
das
dec
in
out
aas
mov
scas
dec
mov
mov
adc
cmp
sub
inc
out
hlt
ins
cs
add
outs
push
dec
or
dec
push
pop
pop
and
push
pop
or
dec
stc
mov
out
mov
mov
mov
daa
push
jbe
gs
push
or
and
xor
dec
rcl
xor
sbb
cmp
dec
pop
or
jge
lahf
fiadd
adc
pop
scas
hlt
xchg
or
gs
inc
cmovl
mov
addps
xchg
aad
cmp
loopne
repnz
mov
pop
mov
xchg
fidiv
xor
imul
push
dec
out
xchg
add
push
inc
cmp
in
shr
lods
in
test
call
scas
cmc
mov
push
inc
outs
sub
imul
and
jbe
fsubr
mov
fwait
lods
push
imul
push
test
cwde
jmp
cmps
inc
xchg
rol
fld
imul
adc
imul
jge
push
mov
fild
inc
mov
push
fmul
inc
cmp
cmp
or
adc
jmp
ins
and
add
jle
leave
mov
mov
pushw
push
out
xor
es
cld
xchg
test
push
push
add
push
push
xor
es
inc
stc
test
xchg
fistp
add
inc
xor
pop
daa
ret
jecxz
inc
iret
mov
add
sbb
pop
inc
out
bound
aas
and
cmp
je
and
aas
stos
int3
or
aam
jb
std
shl
mov
push
push
pop
sub
and
sub
add
lds
push
hlt
xchg
lahf
int
push
out
rcr
cmp
cmp
sbb
push
jmp
scas
lods
(bad)
pushf
cmps
mov
aaa
inc
clc
xchg
mov
nop
mov
retf
mov
ss
jb
push
dec
or
sahf
mov
pop
push
dec
adc
add
call
adc
mov
test
mov
(bad)
pop
sbb
cwde
std
mov
gs
in
(bad)
mov
cmp
or
jb
mov
sbb
adc
clc
mov
pop
rcl
xchg
loop
retf
pop
mov
cmc
ins
sub
jno
ins
adc
add
sbb
(bad)
movs
std
test
retf
xchg
repz
pop
bswap
dec
or
or
inc
or
lahf
cli
mov
scas
fild
pop
cmps
jmp
leave
test
or
idiv
inc
adc
mov
cdq
scas
in
mov
add
or
add
clc
lds
in
sti
lds
add
call
push
cli
mov
lods
imul
cmp
retf
xchg
xor
and
sbb
je
xor
xchg
int3
pushf
jmp
lods
retf
popa
xchg
mov
hlt
div
push
xor
push
cmp
std
fsubp
movs
div
fs
retf
cli
cwde
movs
sti
add
pusha
push
pop
test
mov
int3
ficomp
clc
mov
xchg
stos
pause
fistp
xchg
not
ret
inc
setl
push
add
push
sbb
add
cmp
jno
mov
ja
add
xor
dec
jmp
sar
and
and
cmc
test
mov
cmps
in
mov
les
fwait
call
jge
push
movs
std
sbb
adc
ret
inc
jecxz
shl
mov
sar
push
adc
dec
repz
sub
and
pop
fwait
mov
ficomp
sbb
xchg
stos
leave
mov
xchg
fdiv
dec
inc
call
iret
or
fild
pop
imul
xchg
dec
pause
fbstp
pop
stc
jne
cmp
nop
cld
lea
loopne
in
sahf
int3
call
and
pushf
fistp
add
push
xor
fistp
call
dec
adc
mov
inc
sbb
push
fidivr
inc
sub
sub
inc
push
push
aaa
cmp
enter
or
out
shl
pop
jmp
xor
retf
test
inc
or
sbb
ret
and
(bad)
in
mov
or
inc
outs
sub
add
pop
out
popf
ret
mov
ss
push
shl
cmovl
pop
mov
outs
mov
mov
and
je
fistp
or
pop
and
daa
out
cwde
cli
sub
adc
daa
jg
popf
in
xchg
fld
sub
jle
jg
mov
call
das
fdiv
and
ret
add
bound
mov
mov
stos
mov
mov
test
movs
inc
mov
clc
cld
xchg
aam
fidivr
push
sbb
in
sahf
cld
xor
pop
out
aaa
add
ins
fstp
popa
add
and
or
and
push
imul
mov
retf
xchg
(bad)
and
and
bound
push
or
pop
jecxz
icebp
mov
add
pusha
and
adc
fldcw
movs
aam
cld
ror
movs
jecxz
out
xor
cld
lahf
fsubr
iret
jo
stos
(bad)
pushf
(bad)
lods
push
xor
mov
jmp
pop
hlt
xor
mov
imul
add
push
adc
push
or
test
lahf
mov
daa
fs
sahf
retf
xchg
dec
in
aad
not
scas
shr
arpl
dec
push
pop
sbb
pusha
and
and
(bad)
pop
das
sub
into
and
pop
ret
mov
mov
jnp
push
out
push
or
dec
adc
mov
cdq
aam
add
pop
push
sbb
pop
mov
(bad)
add
jle
cmp
pop
jecxz
cmp
cdq
cmc
test
imul
cmp
repnz
inc
or
je
shr
push
jo
pop
mov
pop
pop
sub
or
push
cli
xor
dec
or
xchg
stc
data16
in
xor
or
(bad)
mov
repnz
das
push
mov
cmps
shr
int
ficomp
std
scas
int3
lahf
fdivr
test
mov
sub
push
adc
push
cmp
inc
xor
sub
and
dec
cmp
pop
jmp
and
fnstcw
or
jae
jnp
pop
mov
loope
adc
push
adc
sub
enter
stc
mov
pop
outs
cmp
int3
cs
dec
mov
test
mov
pop
xchg
ror
pushw
cmp
push
pop
repz
js
sbb
mov
(bad)
(bad)
mov
sub
aad
add
jne
push
push
je
sub
mov
lods
enter
jmp
adc
push
or
jmp
data16
lahf
int
shl
adc
or
mov
jp
pusha
push
push
movs
mov
sti
data16
gs
(bad)
out
xchg
fstp
or
mov
or
cmp
push
push
jmp
bound
js
imul
push
pop
cmp
adc
ins
cmp
fs
pop
neg
jmp
imul
mov
scas
ror
ret
adc
mov
scas
(bad)
ret
test
xchg
clc
mov
xchg
in
aad
cmp
sub
jle
pop
loop
fimul
jl
xor
push
and
push
or
fisub
dec
push
pop
lods
retf
(bad)
retf
mov
and
mov
call
out
add
retf
outs
xor
daa
pop
dec
pop
pop
sbb
or
dec
add
inc
add
sub
cmp
push
push
jbe
dec
into
(bad)
(bad)
lods
sahf
arpl
sub
fdivr
test
add
stos
jmp
pop
fstp
mov
cmp
lock
sahf
shl
stos
call
idiv
xchg
test
js
pop
sub
ins
or
cmps
rcr
sar
xchg
jae
lods
dec
or
enter
xor
cmp
jns
push
mov
ins
cmovs
cdq
sti
mov
ror
adc
sbb
aaa
js
jb
xchg
ror
ficomp
dec
mov
ds
push
loope
in
jmp
fdiv
test
test
jae
std
cwde
xlat
mov
mov
or
pop
add
jnp
pop
jne
jle
outs
or
pop
cmp
jo
sub
jl
mov
inc
adc
adc
call
cdq
movs
(bad)
scas
inc
mov
fwait
jb
push
jecxz
xor
push
adc
inc
dec
idiv
adc
(bad)
xchg
cld
mov
movs
enter
xlat
and
jbe
push
outs
cmp
dec
add
sub
cmp
pop
push
sbb
adc
shl
popa
or
push
jge
jae
xchg
fcomp
es
sbb
sbb
adc
je
push
or
mov
loop
xor
(bad)
mov
xchg
dec
mov
mov
mov
or
stos
(bad)
mov
xchg
xchg
jno
pop
loopne
lock
data16
xor
je
xchg
rcl
inc
sbb
sti
push
pop
dec
pop
daa
and
mov
and
jmp
stos
sti
mov
adc
call
aam
dec
mov
dec
stc
sbb
jnp
and
lahf
std
mov
or
or
sub
xchg
ins
sub
sub
and
pmuludq
xchg
fidivr
ret
imul
dec
sbb
xchg
fdivr
xchg
mov
rol
outs
mov
in
test
leave
mov
rcl
add
push
or
imul
mov
outs
xor
pop
sub
mov
push
repz
and
mov
in
mov
cmp
dec
push
sbb
jle
mov
xlat
mov
pop
iret
test
fs
push
mov
movs
xlat
fs
adc
mov
add
or
xchg
push
add
push
jns
rcr
xchg
aam
adc
outs
and
in
fldcw
jns
mov
pop
mov
jne
in
ret
cmps
mul
in
mov
mov
call
mov
in
shl
jmp
xchg
(bad)
mov
push
push
or
cwde
sbb
loope
scas
mov
aam
inc
std
cmp
ror
xor
adc
cmp
stos
cmps
xlat
jno
pop
push
and
repz
imul
jg
aas
mov
fs
add
clc
adc
enter
fwait
pop
cmp
sub
adc
jmp
mov
pop
add
pop
xchg
sub
add
test
cmp
in
mov
(bad)
cmps
fsub
lock
sub
sub
lds
pop
push
ret
xor
les
jne
sti
in
jmp
popa
xchg
shl
cli
ret
add
xor
mov
test
sar
dec
jae
rcl
inc
xchg
clc
mov
(bad)
fistp
fwait
icebp
test
mov
xchg
xchg
push
and
lods
xchg
jo
xor
hlt
maxps
pop
mov
mov
scas
dec
add
mov
bound
inc
adc
repz
mul
(bad)
nop
push
fild
mov
in
xchg
ror
add
push
pop
pop
data16
mov
mov
fisttp
mov
sub
or
lods
enter
mov
sub
jg
push
mov
outs
out
mov
push
and
leave
call
jecxz
ja
push
sub
cs
cs
mov
fs
stos
adc
push
inc
or
mov
pop
pop
ret
js
cld
scas
in
xor
adc
mov
xor
in
scas
jp
imul
mov
fwait
retf
sbb
std
mov
in
fild
mov
add
out
aam
in
popf
pause
push
xor
xlat
xor
imul
fidiv
adc
in
xchg
ins
sub
cmps
mov
shl
mov
jbe
hlt
(bad)
xchg
sub
cmp
adc
rol
jbe
shl
stos
idiv
mov
ficom
call
pop
add
in
test
push
xchg
leave
mov
cmp
mov
popa
cmp
xor
jne
or
clc
cs
sbb
into
mov
add
sub
sbb
push
imul
xchg
in
stos
scas
inc
outs
push
pop
fcom
push
or
int3
xchg
mov
mov
retf
add
fldcw
mov
and
mov
sub
mov
xchg
jl
in
imul
es
es
pop
dec
pop
push
add
sbb
or
jno
imul
inc
xor
ins
ss
cmp
dec
push
push
ss
pop
push
pop
adc
jl
dec
or
sub
stc
lods
loope
out
out
ret
mov
lods
ficomp
cli
fwait
xlat
mov
mov
mov
fwait
sti
pushf
fstp
jecxz
shl
lds
call
cmps
inc
mov
xrelease
cmp
or
test
call
mov
adc
sti
loop
inc
pop
xor
icebp
cmp
pop
sub
scas
call
push
call
bound
dec
stos
std
mov
dec
xchg
sbb
mov
mov
int
mov
inc
popf
add
icebp
xlat
xchg
es
stos
ins
dec
and
in
cmp
xchg
cli
lea
inc
add
rcl
dec
mov
lock
push
and
or
cld
fsubr
inc
cdq
add
imul
jo
aas
or
into
xchg
fucomp
fidivr
push
retf
xchg
inc
dec
or
xlat
push
fcomp
sub
out
lods
mov
xchg
sub
hlt
outs
test
dec
(bad)
loop
mov
mov
fidivr
jo
and
das
fisubr
xor
clc
mov
dec
jo
sub
sbb
push
lods
out
mov
dec
or
(bad)
sbb
inc
std
adc
sbb
push
adc
loop
mov
ss
ror
mov
jae
and
pop
sti
adc
push
daa
inc
mov
jl
loopne
into
push
outs
push
and
cmps
les
sub
repnz
inc
popf
loope
gs
pop
push
inc
or
(bad)
rcr
ins
das
fs
jb
(bad)
cmc
mov
inc
ja
dec
add
call
or
ja
test
mov
les
adc
(bad)
cwde
rcr
test
das
or
push
ds
fiadd
shl
xlat
mov
and
mov
pop
xchg
or
add
pop
add
and
and
fs
movs
pop
push
xor
adc
ins
je
push
not
shl
movs
add
push
into
das
(bad)
fnstenv
xor
sub
xchg
mov
call
lahf
pop
cmp
std
push
xchg
jle
jne
adc
data16
out
cmc
int
imul
cwde
fs
cmp
fisttp
imul
ds
jmp
sub
inc
mov
xchg
rcl
jmp
inc
xchg
call
les
mov
jns
fnstsw
jl
jmp
inc
sbb
xchg
(bad)
lahf
rol
jmp
ret
mov
jle
sar
jl
rcr
mov
or
push
dec
mov
xchg
sar
nop
shl
aam
out
dec
push
pop
or
jo
cmp
sub
cli
sar
dec
add
retf
(bad)
jecxz
and
cs
xchg
xlat
xor
call
(bad)
cli
mov
add
aaa
mov
mov
mov
seta
xchg
es
fs
out
in
dec
xor
test
pusha
mov
test
adc
sub
cmp
fnsave
imul
or
sub
or
iret
mov
pop
mov
sbb
hlt
cli
mov
je
enter
jmp
sbb
or
xchg
in
inc
mov
mov
js
pop
retf
out
mov
xor
loopne
mov
pop
jns
ins
cmp
ja
jb
jns
push
xor
ins
add
outs
push
pop
and
imul
pop
popa
and
push
add
inc
cmp
dec
cmp
sub
push
adc
push
sbb
data16
adc
cs
pop
sub
push
adc
dec
cmp
cmp
and
push
aas
inc
push
pop
and
dec
or
jl
push
push
pop
cmp
jae
jo
push
mov
pop
pop
push
retf
shl
mov
dec
xchg
pop
cmp
in
or
neg
mov
jmp
mov
cmp
fmul
sbb
dec
aas
jno
scas
out
loope
(bad)
rcl
(bad)
mov
and
sub
out
mov
sbb
push
push
sahf
sbb
loopne
clc
mov
pop
xor
cmp
lds
xchg
enter
sbb
or
sbb
or
cmp
sbb
push
or
int
mov
(bad)
lahf
sbb
clc
iret
mov
pop
jl
mov
add
mov
arpl
lahf
fisttp
add
ret
jbe
pandn
mov
and
std
mov
or
mov
lahf
dec
inc
cs
jbe
add
mov
rol
mov
pop
jp
pop
outs
inc
or
sahf
(bad)
xchg
dec
inc
es
jmp
and
lds
inc
mul
aam
lods
inc
jle
dec
scas
and
adc
push
pop
sub
(bad)
mov
pop
stos
jmp
mov
push
pop
stc
sbb
jecxz
jns
sysexit
jecxz
mov
jne
sub
imul
fidivr
iret
add
and
or
in
sbb
jmp
or
xor
movs
cmps
xchg
sbb
xlat
fadd
bextr
sbb
aam
in
movs
dec
ds
add
fbstp
out
retf
mov
iret
rcl
and
cs
sbb
cmp
add
mov
arpl
das
arpl
cmc
xor
pop
sbb
mov
pop
(bad)
cmp
and
sahf
cld
sbb
rcl
rcl
jecxz
mov
sub
es
push
mov
ja
retf
lock
jge
and
leave
add
imul
fisub
push
in
push
ins
add
sub
mov
fcom
mov
xor
rol
mov
jl
xor
shl
add
(bad)
sub
mov
xchg
in
mov
mov
pop
dec
xchg
jecxz
loope
imul
mov
mov
push
mov
inc
adc
jo
inc
gs
daa
inc
xchg
cli
mov
cmp
pop
inc
add
xor
in
adc
dec
mov
dec
add
push
cmp
fisubr
pop
inc
addr16
jle
fldenv
push
adc
mov
jge
shl
js
sbb
mov
mov
jg
jb
rep
iret
and
add
jle
jmp
shl
mov
inc
or
add
pop
add
cwde
aad
rcr
es
and
repz
lock
rcl
xor
cld
(bad)
(bad)
mov
mov
test
sbb
outs
mov
test
pop
ins
dec
pop
sub
frstor
jge
or
jmp
xchg
push
cmp
in
ror
pusha
mov
xchg
pop
xor
cmp
jnp
sub
mov
dec
adc
in
pop
ja
repz
jecxz
dec
xor
repnz
or
xchg
sar
nop
data16
fbstp
jo
push
and
inc
xor
imul
pop
popa
and
pop
push
dec
das
dec
or
pop
add
aaa
inc
adc
inc
daa
imul
sub
push
cdq
idiv
in
icebp
movs
sbb
pop
adc
imul
sbb
jp
push
and
movq
inc
add
mov
fidivr
in
dec
or
and
pop
aas
outs
das
dec
sub
push
jp
sub
sbb
cwde
scas
outs
outs
and
(bad)
out
mov
je
std
inc
mov
jo
cmp
cdq
sbb
push
mov
ffreep
mov
fstp
mov
mov
fistp
push
aam
les
mov
ja
int
fistp
cwde
push
push
cmp
xor
adc
ficomp
(bad)
xlat
xchg
js
xor
mov
or
cmp
cmp
das
xchg
leave
lods
xchg
or
sbb
pop
adc
cmp
xchg
push
pop
cmp
push
push
sbb
stc
lods
movs
push
jno
ss
das
lahf
fbld
pop
aad
mov
fs
dec
aad
(bad)
cmps
fucomi
jecxz
test
or
(bad)
mov
sub
(bad)
lahf
mov
push
daa
lock
repz
xchg
and
cmp
cmovg
ret
aam
lods
in
fwait
jo
sbb
cmc
adc
stc
outs
mov
mov
addr16
add
push
mov
jns
fucomp
lea
push
dec
and
dec
scas
cmps
addr16
xor
push
jl
pop
nop
xor
cmp
adc
fld
sub
mov
xchg
call
addr16
add
iret
test
sub
jmp
arpl
inc
ja
pop
sbb
and
and
imul
(bad)
jmp
sub
adc
pop
cmp
sbb
mov
jb
pusha
cmp
inc
sbb
sbb
sbb
add
idiv
jl
jmp
push
lods
pop
xor
dec
pop
pop
push
xor
and
into
mov
out
push
ins
adc
imul
xchg
push
jne
inc
jns
inc
es
cmc
cwde
pop
add
enter
mov
or
xchg
int
leave
lods
mov
fldpi
mov
call
push
repz
mov
jg
push
int
test
into
enter
pop
adc
mov
dec
mov
xlat
cmps
jecxz
daa
jns
into
mov
xor
enter
dec
outs
dec
es
xchg
lock
xor
cmp
in
cmc
loope
mov
push
jle
push
and
xchg
inc
pop
push
inc
xchg
pushf
(bad)
or
fwait
pop
push
or
cdq
rcl
popa
aas
jno
movs
add
movs
iret
or
push
ror
jmp
mov
mov
dec
psllq
test
push
xchg
stos
xchg
out
mov
js
outs
add
gs
mov
xchg
in
pusha
push
or
mov
xchg
jb
cmp
xor
mov
mov
add
adc
fstp
mov
cdq
ficomp
int3
mov
jl
xlat
mov
mov
cli
xchg
fnsave
cli
stos
int
jns
outs
add
mov
xchg
pop
push
cmovg
and
imul
dec
test
push
adc
mov
mov
sub
(bad)
mov
dec
or
fdiv
mov
and
(bad)
scas
dec
ins
sub
push
es
mov
inc
cmp
in
cld
inc
mov
lods
outs
xchg
rcl
jno
inc
mov
and
fmul
je
rcr
xor
push
pop
adc
push
dec
or
jg
pop
adc
je
jbe
ja
push
and
aas
dec
movq
addr16
ja
pop
xor
push
push
je
dec
or
sbb
ins
adc
pop
sbb
push
adc
outs
aas
jg
jl
jl
inc
sub
dec
or
data16
ja
pop
xor
pop
push
jg
pop
sbb
daa
dec
add
imul
push
push
or
inc
add
jne
adc
push
adc
mov
leave
orps
xor
mov
xor
popf
scas
dec
dec
add
sub
lds
sub
or
ret
adc
loope
addr16
hlt
cmp
and
int
or
ja
adc
mov
mov
or
out
repnz
sbb
into
mov
(bad)
sub
push
(bad)
shl
cwde
dec
jp
je
rol
xchg
adc
jmp
cmc
mov
jbe
aas
jae
adc
stc
mov
rcr
scas
in
add
jb
(bad)
mov
mov
add
fnstenv
mov
fwait
xlat
jbe
or
adc
cmove
out
jmp
mov
ja
es
cmp
sbb
gs
push
add
(bad)
mov
jmp
mov
sub
sbb
loope
mov
push
xchg
push
adc
subps
sub
mov
or
loopne
mov
arpl
and
loop
test
leave
dec
mov
push
fs
into
nop
dec
jl
and
adc
mov
pop
mov
pop
stc
sbb
xchg
(bad)
pushf
jno
fstp
dec
or
(bad)
in
mov
lds
dec
out
pop
mov
jo
sub
cld
(bad)
frstor
rcl
hlt
mov
sti
cwde
xor
sub
and
test
pushf
fdivp
fbstp
mov
xchg
aad
xor
add
xchg
inc
cwde
xchg
inc
je
imul
popf
(bad)
inc
test
and
push
add
mov
mov
loope
xchg
push
cmp
aad
xchg
cli
sbb
jl
cld
xchg
lock
or
retf
mov
pop
adc
mov
xchg
pop
add
(bad)
out
icebp
hlt
fldcw
pop
and
push
inc
hlt
cmp
mov
jno
push
or
shl
add
or
or
xor
(bad)
in
cmp
jecxz
sahf
xor
shl
clc
lods
mov
inc
mov
and
adc
fimul
out
jbe
addr16
mov
scas
push
and
neg
popf
(bad)
or
ror
lock
(bad)
out
xor
dec
and
fisub
inc
cmp
movs
sbb
loopne
jmp
fs
cmp
call
stos
je
es
cmc
test
cmp
bound
fstp
std
rol
popa
mov
gs
adc
addr16
adc
mov
mov
test
jecxz
ja
pop
rcl
iret
loop
repnz
xor
mov
mov
data16
lods
rol
xlat
fstp
fdiv
(bad)
(bad)
fidivr
or
or
dec
sub
fs
sbb
push
push
xor
iret
mov
popf
les
cmp
loopne
jecxz
(bad)
rcl
in
mov
push
imul
mov
sub
in
into
push
(bad)
fnstenv
add
int3
jecxz
iret
push
outs
cmp
or
sbb
fstp
(bad)
push
daa
ins
test
aaa
jnp
xor
movs
adc
and
dec
add
pusha
adc
jb
dec
cmp
jns
ins
add
and
jbe
pop
push
ins
ss
fs
dec
and
ja
inc
pop
addr16
add
cs
or
sbb
ins
add
addr16
jl
inc
cmp
jp
ja
ins
sub
push
adc
cmp
adc
jbe
dec
push
pop
aas
pop
sbb
dec
adc
mov
sbb
push
sub
outs
sub
pop
sub
js
xor
cld
mov
push
aam
stos
push
fadd
sub
loop
mov
je
pop
popa
adc
sahf
adc
cmp
dec
pop
cmp
or
fistp
mov
mov
push
or
fsub
fst
xchg
ficomp
cmovnp
mov
hlt
and
pop
mov
outs
cmp
or
lds
mov
jne
leave
stos
jmp
ret
pop
xor
sub
cmp
(bad)
les
push
fst
test
inc
js
sub
inc
add
xor
jge
push
nop
rol
sub
(bad)
xor
ss
mov
test
push
imul
mov
xchg
ds
repz
adc
ret
lods
fsubrp
jmp
sahf
or
push
into
into
mov
ror
xchg
lods
inc
js
aaa
(bad)
lea
es
pop
inc
repz
lds
bound
sub
(bad)
mov
push
xchg
fs
out
(bad)
jmp
cmps
out
and
sbb
sbb
sbb
xchg
inc
xchg
rol
lea
pop
(bad)
and
pop
mov
mov
xchg
push
es
es
or
scas
jecxz
add
pop
bound
inc
sahf
pop
push
cpuid
push
cdq
shr
loop
xor
add
frstor
push
adc
(bad)
scas
cld
mov
and
fld
dec
add
dec
cmp
add
inc
or
je
and
daa
iret
lods
icebp
dec
mov
adc
jl
pop
call
in
hlt
ficomp
call
pop
cmps
idiv
mov
adc
aas
jnp
or
add
scas
jecxz
dec
mov
push
xor
cmc
test
jmp
inc
(bad)
loopne
jbe
or
dec
aam
std
nop
mov
pop
sub
mov
jnp
(bad)
mov
push
xchg
std
cmps
jp
aas
pop
mov
mov
mov
and
in
jl
jle
in
lods
lock
fs
arpl
test
lea
adc
jns
cmp
xor
push
out
sahf
fdiv
mov
pushf
and
and
call
(bad)
mov
dec
and
xchg
mov
repz
fs
fst
add
clc
test
push
outs
pop
cmp
out
fwait
add
add
xlat
sub
lds
jb
cs
mov
mov
xchg
xor
adc
shl
mov
xor
pop
mov
mov
mov
add
mov
sbb
jno
repz
fisttp
and
and
in
das
stc
shl
adc
mov
xchg
push
retf
es
in
mov
stos
add
out
lods
pop
push
movs
test
imul
inc
sbb
jno
retf
aas
mov
pop
sbb
dec
(bad)
xor
dec
mov
js
mov
bound
shr
push
and
jecxz
push
sub
pop
test
jmp
movs
and
add
inc
pop
pop
push
fs
and
add
lds
adc
rcl
cmp
push
jbe
dec
mov
outs
xchg
dec
lahf
cmp
push
push
sbb
in
sbb
repz
mov
pcmpgtd
mov
mov
or
cld
mov
ficom
out
ret
aas
dec
fld
cdq
jecxz
ret
cmp
add
bound
rcr
loope
es
lds
adc
mov
mov
and
cmp
xor
xadd
mov
jmp
ret
cmp
fcomp
ret
mov
mov
sti
fiadd
push
sub
test
xlat
cwde
and
jno
call
and
jmp
xchg
inc
pop
pop
cmp
xor
jnp
mov
jns
adc
and
fsubr
and
cmp
aas
mov
lods
fisttp
jb
inc
jne
stos
clc
retf
inc
lock
jmp
mov
cwde
hlt
adc
inc
sbb
push
adc
or
sbb
mov
nop
jbe
popa
sub
(bad)
mov
add
retf
push
pop
or
mov
mov
jl
push
dec
push
push
sbb
jns
dec
call
ds
std
mov
test
popf
cmp
jl
jl
data16
jb
jnp
fild
lea
scas
in
mov
sbb
pop
inc
sbb
stos
fld
rcr
xlat
xchg
mov
movs
sub
jl
mov
aad
rol
pcmpgtd
jns
xchg
call
idiv
es
jbe
jae
dec
daa
movs
fstp
xchg
mov
jne
xor
cmp
cld
mov
sbb
stos
mov
loop
add
push
mov
lods
bound
or
inc
push
add
fcomp
xor
mov
test
ds
sbb
mov
sub
or
jns
pop
xor
test
xchg
mov
outs
xor
mov
lods
out
imul
pop
inc
test
je
pop
adc
int3
mov
mov
test
xchg
iret
sbb
ja
ja
jnp
ja
inc
hlt
add
popa
sub
xchg
aam
inc
sub
pop
punpckhdq
fdiv
and
ins
inc
out
mul
mov
sbb
dec
sub
shl
push
xor
xlat
mov
ficom
dec
and
dec
lods
jmp
adc
hlt
cvtpi2ps
xchg
les
out
inc
in
mov
bound
jb
inc
aaa
js
fidivr
mov
mov
test
dec
pop
mov
sub
cld
mov
lea
imul
cmps
and
ds
sub
sbb
inc
sbb
pop
sbb
add
mov
mov
bound
mov
popa
mov
xchg
mov
bound
dec
retf
mov
xlat
mov
xchg
fist
push
retf
mov
rcl
jae
push
xchg
test
sahf
sub
pop
aaa
jns
jl
push
inc
aaa
sub
cwde
(bad)
in
(bad)
aad
mov
stos
mov
sbb
pop
sbb
jmp
jae
sub
loopne
imul
push
jmp
sbb
add
jg
dec
pop
add
ss
jnp
dec
(bad)
mov
inc
pop
push
cmp
mov
mov
jno
jle
int3
xchg
das
sub
inc
or
push
in
into
movs
lds
jle
cmp
xor
xchg
ror
(bad)
in
lods
iret
into
mov
test
dec
sbb
cmp
rcl
push
push
sub
pop
mov
cmps
aam
hlt
test
inc
xor
add
cmps
neg
jp
jb
fs
fist
adc
iret
and
in
mov
push
inc
loop
int
jg
add
inc
(bad)
pop
inc
loopne
rcr
into
or
retf
mov
xchg
pop
imul
jbe
xchg
fidivr
jbe
or
cmp
ficomp
mov
div
sar
mov
stos
cdq
push
and
pop
mov
sub
lods
stc
mov
pushf
test
pop
inc
imul
rcr
rcl
sub
inc
jbe
push
sbb
inc
or
xchg
ret
inc
pop
mov
in
lahf
fsub
adc
mov
sbb
cmp
sub
out
(bad)
pop
pop
add
nop
add
push
inc
cmps
mov
fnstsw
sub
jne
push
dec
adc
cmc
mov
and
loop
loope
sub
bound
out
xchg
push
jl
ins
xor
mov
fist
dec
test
add
mov
mov
outs
or
test
aam
xor
adc
and
lods
fcom
adc
daa
inc
adc
inc
or
adc
add
cmp
jge
and
xor
(bad)
sub
adc
pop
ins
fsub
test
xchg
mov
mov
lea
push
add
das
dec
cmp
xchg
and
jne
push
adc
mov
lock
retf
(bad)
xlat
movs
loopne
jle
lds
pop
add
add
std
jo
ins
clc
push
adc
adc
mov
adc
jne
xlat
xchg
mov
jnp
mov
movs
pusha
out
mov
not
fld
cld
outs
sub
and
pop
xor
jg
pop
cmp
fbstp
push
mov
dec
sbb
add
ja
mov
xchg
in
sti
mov
adc
jecxz
stc
jae
add
mov
(bad)
(bad)
mov
dec
and
or
xchg
lds
inc
es
mov
mov
jge
dec
or
fldcw
call
pusha
add
loop
fisub
dec
adc
or
sub
jmp
cmp
sub
xor
popf
mov
jmp
adc
pop
loopne
cmc
mov
(bad)
mov
retf
data16
push
sub
mov
adc
imul
fcomp
sub
push
pop
aad
or
xchg
fbstp
jno
dec
or
dec
sub
or
rcr
jb
movs
out
hlt
add
jl
cdq
shl
dec
sub
dec
add
mov
add
je
mov
jnp
push
adc
shl
mov
pop
lods
push
or
(bad)
mov
mov
mov
dec
add
mov
push
pop
arpl
jns
sub
es
rcr
jae
jecxz
cld
sbb
jo
xlat
xchg
icebp
dec
xor
popa
cld
lods
out
cmp
imul
sbb
sbb
sub
jae
scas
loope
(bad)
or
inc
cs
sub
inc
push
ins
cs
push
cs
jbe
mov
push
pop
out
add
jl
fs
xchg
xlat
rcr
cmc
scas
es
pop
cmp
cmp
sahf
(bad)
mov
adc
inc
or
push
out
inc
add
adc
ret
inc
mov
pop
jbe
lods
cmc
xchg
ret
add
push
pop
outs
out
imul
ret
pop
jns
call
sub
fisub
gs
iret
add
mov
movs
es
dec
jne
es
jne
js
jnp
mov
icebp
mov
(bad)
out
cmp
outs
push
repnz
in
sbb
cmps
adc
inc
push
mov
fmul
es
dec
push
push
or
outs
pop
(bad)
aad
in
cmp
ficom
retf
dec
sub
(bad)
loope
sbb
shl
jns
push
bound
popa
leave
mov
aaa
xor
ret
aas
aas
dec
adc
push
outs
sub
sbb
stos
mov
pop
pop
lock
call
push
push
mov
push
push
repnz
out
cmp
push
cmp
rcl
push
scas
(bad)
shr
icebp
mov
and
mov
pop
dec
int
in
cmp
nop
aam
mov
stc
call
inc
add
xor
cld
pop
das
push
aas
cmp
int3
and
add
xchg
hlt
xchg
shl
js
gs
push
pop
inc
nop
lock
cmc
mov
jbe
nop
ret
addr16
jmp
into
and
dec
rol
mov
push
hlt
lods
jp
mov
mov
xchg
jbe
je
js
ficom
ficomp
cmps
loop
mov
add
outs
ds
push
cli
and
mov
lock
jae
fadd
push
cmp
cdq
shl
jo
push
push
fild
cmp
lahf
ror
and
sbb
cmps
out
movs
sbb
ins
xor
nop
loopne
out
inc
pop
fs
dec
xor
dec
or
adc
in
jb
add
inc
pop
push
clc
sahf
rcr
scas
cld
sub
mov
xor
push
adc
adc
idiv
inc
jnp
xchg
ja
sar
push
cmc
stos
jmp
jg
xchg
int
fnstcw
push
push
dec
adc
sbb
dec
adc
out
jmp
and
mov
daa
push
jns
mov
jge
stos
in
or
les
dec
mov
aam
xchg
call
nop
test
mov
lds
mov
icebp
lds
lods
cld
lahf
rcr
retf
xchg
pop
rcl
data16
fwait
ret
pop
add
pushf
dec
pop
push
push
ret
mov
cmp
push
jge
sbb
or
das
pusha
pop
sbb
rol
pusha
sbb
mov
sub
aam
(bad)
popf
(bad)
jmp
clc
(bad)
aas
xor
jo
mov
cmps
sub
push
xchg
mov
and
jae
ins
ret
lahf
sub
pop
rcr
rcr
cmps
loopne
inc
sub
movs
in
mov
lods
out
mov
shl
jo
test
jnp
cdq
retf
xor
nop
stos
leave
jmp
push
mov
and
push
sbb
mov
imul
xor
or
retf
xchg
cmc
jg
fstp
lods
mov
xchg
(bad)
push
mov
(bad)
ffreep
ds
push
mov
push
arpl
sbb
jecxz
repz
cmps
(bad)
mov
xchg
and
in
mov
pushf
fistp
pushf
shr
jnp
mov
cwde
sti
int3
and
mov
sbb
bound
push
xor
add
int
fild
cli
mov
xor
mov
ins
push
mov
xchg
sub
inc
adc
pop
pop
mov
(bad)
mov
cmp
nop
jb
mov
shr
ins
test
and
movs
xchg
lods
imul
sub
daa
xchg
aad
pop
sbb
sbb
dec
xchg
fisubr
ins
push
retf
dec
fcomp
dec
rcl
mov
lock
pop
dec
or
and
cmp
jle
jo
dec
and
push
retf
mov
loop
xor
jb
xchg
hlt
and
mov
pop
inc
mov
clc
sub
sbb
inc
stos
jmp
xor
ds
sbb
scas
fld
cmp
cs
lea
arpl
inc
add
jmp
es
mov
add
push
and
mov
shr
jne
jne
mov
xchg
nop
cli
mov
dec
xchg
jne
pop
retf
jmp
mov
push
in
stos
repz
mov
sub
fcomp
push
jg
mov
jmp
push
adc
sbb
mov
ret
and
dec
aaa
jno
int3
mov
das
dec
mov
mov
not
outs
dec
adc
call
pop
add
cwde
cmps
into
or
dec
adc
pop
sbb
dec
add
or
test
mov
inc
pop
adc
cmp
inc
add
les
je
mov
xchg
adc
dec
cmp
dec
shl
lods
lds
je
icebp
fnstcw
or
mov
sahf
ss
aam
add
jl
loop
loope
push
inc
outs
rcl
and
inc
pop
inc
mov
test
adc
loope
addr16
mov
ja
xor
fnstsw
int
dec
or
add
dec
rcr
mov
mov
cmps
retf
mov
mov
out
mov
or
add
mov
mov
jge
push
loop
jae
cwde
fstp
ret
test
into
lahf
fadd
cdq
jmp
inc
or
adc
inc
add
jecxz
fisubr
pop
sbb
call
sti
sub
in
pop
cmp
ss
pop
adc
push
ins
sbb
push
push
jae
pop
arpl
xchg
int
sub
or
mov
mov
dec
mov
not
push
add
inc
pop
das
push
mov
push
add
cmp
ret
mov
push
push
jbe
jno
pop
jne
xchg
ret
in
outs
pop
mov
jmp
xchg
cli
jle
and
dec
xchg
mov
cmp
push
or
cmp
lods
out
mov
cmps
sti
pop
sub
adc
das
push
subps
in
stos
ds
sub
xchg
mov
js
jbe
sub
lea
mov
or
push
stc
lahf
out
ins
les
adc
popf
hlt
xor
dec
test
stos
mov
adc
pop
or
adc
and
mov
shl
pop
inc
sbb
pop
ret
sbb
add
rcl
push
rcl
test
pop
loop
mov
popf
(bad)
mov
add
xor
cli
bound
mov
inc
and
jne
pushf
inc
sbb
clc
xor
xor
xchg
gs
jb
jmp
jb
add
push
add
icebp
out
adc
mov
push
test
inc
mov
repz
aaa
xchg
bound
cmps
psraw
pusha
pop
mov
and
fsubr
or
movs
push
push
clc
mov
xor
or
jmp
std
xchg
ja
stc
dec
mov
scas
mov
inc
into
ds
adc
add
cmps
lds
inc
mov
lds
or
push
mov
xor
aad
and
pop
fidiv
shl
(bad)
sbb
in
mov
pop
std
sahf
out
mov
inc
add
xor
push
or
and
in
add
push
dec
or
inc
sub
outs
xor
rcl
rcr
test
ret
jl
cwde
retf
(bad)
retf
aad
jb
sub
cs
add
push
arpl
gs
jae
push
dec
lods
shl
repnz
loopne
mov
pop
ds
push
mov
aam
stc
mov
pop
push
pop
add
adc
hlt
mov
repnz
jecxz
sbb
cmps
hlt
mov
imul
inc
ds
hlt
push
add
jae
push
push
outs
mov
xchg
fadd
push
fiadd
xchg
les
dec
and
push
pop
aas
cmp
push
dec
mov
in
sahf
sbb
pusha
int3
xor
xor
cmp
cs
in
icebp
sbb
and
or
and
addr16
or
ficomp
shr
add
and
sub
mov
test
mov
inc
mov
test
add
stos
inc
or
out
in
out
mov
add
scas
test
pop
loop
out
sub
ret
xchg
in
cli
cmps
loope
les
jg
jns
fimul
ins
dec
fsubr
mov
xchg
rol
in
aam
ret
stos
in
test
popa
sbb
aas
adc
in
je
ss
fisubr
mov
clc
test
dec
xor
xor
cdq
xlat
xchg
not
mov
add
ss
sbb
push
mov
add
bound
cmp
xor
push
push
ins
inc
or
hlt
mov
cmps
jae
pop
sub
std
mov
or
jg
and
inc
mov
jmp
adc
sub
pop
fwait
jp
xlat
cwde
mov
xchg
aad
xchg
or
in
cli
jnp
fild
jno
mov
shl
mov
stc
test
add
repnz
jge
outs
ret
mov
xchg
iret
sub
pop
call
sub
jnp
push
mov
dec
adc
out
in
mov
sahf
aam
mov
imul
jg
into
(bad)
shr
pop
sbb
jecxz
test
packsswb
and
sub
out
and
enter
xor
enter
and
or
jno
fdiv
push
shl
jno
pop
sub
and
push
push
or
mov
inc
test
jbe
mov
fwait
dec
popf
fdivr
jg
into
(bad)
in
cmp
or
mov
cmp
pop
inc
or
in
mov
jbe
shl
lea
inc
aaa
ret
xchg
push
hlt
xchg
shl
ds
xor
mov
add
cmps
dec
adc
adc
dec
adc
movs
loopne
push
pop
in
push
xchg
out
mov
out
mov
hlt
sbb
adc
in
stos
in
cmp
push
pop
stos
pop
sbb
in
mov
aas
adc
lahf
int3
int
dec
or
fld
call
or
and
aas
push
(bad)
sahf
in
mov
xchg
repz
rol
inc
and
std
test
loopne
push
or
dec
and
xor
icebp
adc
ja
rol
jns
ja
rcl
mov
adc
add
adc
adc
lods
jb
ins
pop
loopne
xchg
iret
or
dec
sub
pop
sbb
sub
push
adc
fnstenv
add
add
test
pop
inc
outs
push
mov
or
loop
enter
mov
adc
cmp
sub
push
mov
dec
sub
push
test
xor
jae
icebp
mov
clc
popf
pop
cmp
jge
mov
push
push
adc
cs
add
push
push
pop
cmp
leave
and
xor
and
and
xchg
dec
sbb
or
adc
pop
dec
jmp
outs
sub
sbb
mov
adc
sub
mov
xchg
arpl
pop
fsub
mov
cmc
and
mov
mov
add
mov
and
inc
mov
xchg
repz
fstp
or
cwde
aad
lea
ret
add
mov
or
cmp
mov
fwait
stc
mov
addr16
xchg
jg
pop
loopne
or
leave
mov
sub
and
or
cli
mov
ds
test
cmp
or
mov
push
inc
inc
or
push
sbb
dec
fstp
int3
pop
in
adc
mov
adc
dec
or
(bad)
jo
into
popf
(bad)
push
les
jg
data16
in
cmp
mov
cdq
ret
mov
cmps
cs
movs
std
mov
test
pushf
fnstcw
loope
pop
add
jbe
inc
mov
mov
adc
ins
cmp
inc
and
and
outs
mov
push
push
xchg
pop
xor
jge
(bad)
jg
sub
mov
loopne
push
add
xchg
push
add
sbb
daa
inc
movnti
push
sbb
mov
cwde
jle
(bad)
daa
int3
cld
sahf
seta
fwait
sub
ins
aaa
jb
movs
lock
rcr
loope
aad
std
les
out
mov
imul
call
sub
loop
pop
sbb
cs
out
pop
or
sub
sub
mov
inc
arpl
add
call
jmp
cwde
sub
int3
orps
push
cdq
std
xchg
bound
dec
nop
sbb
test
fcom
shl
sar
push
js
gs
mov
scas
pop
das
push
adc
dec
push
adc
rcr
fs
sbb
sub
test
push
sbb
rcl
mov
jmp
dec
mov
jae
loopne
and
fwait
leave
lea
and
jmp
out
inc
sub
cld
mov
push
(bad)
int
mov
mul
je
lods
sbb
call
sbb
js
inc
and
int3
mov
push
(bad)
rcr
movs
or
sbb
and
mov
ins
std
cmp
out
mov
adc
sahf
sar
mov
xlat
xchg
int
cmc
mov
movs
out
mov
rcr
rcr
popf
mov
popf
in
nop
push
(bad)
shl
data16
sbb
(bad)
fidivr
retf
xchg
inc
xor
test
mov
sbb
sti
mov
jp
add
(bad)
xchg
sub
inc
ins
sub
mov
imul
mov
xchg
inc
jne
cmp
out
fist
fsubr
cmps
loopne
arpl
mov
inc
add
sbb
mov
inc
aaa
push
fadd
cli
fwait
ja
js
ss
mov
pop
test
mov
pop
jecxz
jl
and
sbb
repz
jmp
in
pop
mov
mov
dec
ds
in
scas
pop
add
or
xchg
lods
push
ss
sbb
leave
test
mov
mov
dec
jbe
add
out
retf
fdiv
add
xchg
shl
or
and
std
movs
repnz
mov
xchg
mov
jl
pop
data16
test
adc
add
frstor
push
pop
inc
pop
imul
push
aas
popw
mov
scas
sbb
movq
(bad)
lods
rol
mov
and
retf
cld
test
and
pop
push
ins
rcl
xchg
rol
loope
jo
outs
sub
mov
mov
ret
fadd
aaa
sbb
pop
sbb
test
retf
adc
sub
shr
nop
repnz
ficomp
mov
nop
inc
and
sbb
jo
loop
ret
and
imul
popf
sbb
fldenv
dec
or
jb
dec
or
sub
jmp
out
mov
popf
aad
int
into
mov
mov
mov
fpatan
popf
test
outs
jg
or
shr
retf
ins
add
out
add
push
sar
das
imul
movs
(bad)
out
lods
loop
pop
and
test
jns
dec
pushf
add
mul
retf
xor
cmp
xchg
and
pop
outs
int3
(bad)
int3
mov
popa
inc
cs
or
iret
(bad)
fnstenv
movs
pop
push
pop
pop
sub
addr16
cmp
scas
inc
dec
adc
mov
cmp
in
push
inc
loope
mov
icebp
popa
mov
jmp
push
adc
jmp
cmp
scas
repz
jg
inc
outs
pop
xor
adc
mov
pop
push
mov
mov
inc
jb
add
xor
pop
sub
scas
in
push
outs
jle
sbb
stc
mov
push
xlat
std
mov
cwde
add
hlt
add
add
aad
nop
imul
mov
xor
mov
mov
clc
fidiv
cmp
pop
push
mov
xor
push
pop
xchg
icebp
mov
setne
test
xor
mul
leave
test
shr
mov
mov
sbb
mov
jp
cmp
adc
and
imul
rcl
xchg
popa
pop
(bad)
cmp
leave
rcl
inc
sub
clc
stos
bound
jp
xor
or
cmp
jmp
movs
mov
inc
and
(bad)
shl
cli
movs
dec
xchg
icebp
xchg
fisubr
add
jle
or
div
jp
test
add
ret
cwde
scas
push
inc
add
movs
cmp
gs
in
jne
(bad)
adc
sbb
xor
std
mov
cmp
cmp
inc
cmp
and
out
xchg
cld
popf
dec
imul
xor
jmp
pop
sbb
adc
add
mov
sub
sbb
mov
lods
out
loop
repnz
cs
push
mov
ja
fs
loopne
jbe
imul
fcmovnb
adc
in
xchg
in
push
adc
lock
popa
mov
popf
ja
inc
pop
jmp
add
jmp
in
iret
xchg
jo
sbb
in
in
or
or
cmp
mov
rol
xlat
mov
or
dec
cmp
ficom
xor
outs
movsx
lods
ret
sbb
bound
push
jbe
xchg
test
hlt
clc
scas
call
mov
call
jl
dec
or
pop
pop
push
test
push
neg
push
pop
ins
push
aas
jae
and
clc
nop
leave
mul
push
adc
dec
push
adc
(bad)
xchg
repnz
jp
jle
dec
cmp
scas
fadd
fidivr
pop
cmps
adc
shr
jg
sbb
or
or
xor
jl
ret
ret
ss
push
push
retf
call
hlt
mov
cmp
sbb
bound
pusha
(bad)
jecxz
mul
xchg
fild
jmp
mov
fwait
jmp
ins
sub
lock
fnsave
cdq
fild
(bad)
mov
xchg
fs
xor
sbb
call
cmp
(bad)
les
push
movs
or
in
pop
sbb
out
mov
fnstcw
jle
in
push
jno
aaa
out
scas
sub
pop
imul
inc
and
and
ja
outs
sbb
sub
aaa
mov
jmp
cli
cwde
stos
jno
aad
data16
inc
jb
push
stos
div
sub
jmp
out
dec
inc
aas
dec
push
fldcw
and
mov
loope
leave
add
adc
loop
arpl
neg
xchg
repz
jo
cmp
sbb
sbb
push
dec
push
push
mov
shl
bound
add
mov
scas
and
cmp
lea
sar
ret
sbb
pop
dec
cmp
test
fld
mov
popf
aad
sub
pop
jns
jl
stos
adc
mov
retf
or
imul
jl
pop
adc
jmp
ds
pop
adc
dec
xor
in
cmps
(bad)
(bad)
mov
cmovg
nop
(bad)
imul
int3
or
lds
jl
sub
add
sub
add
push
xor
jmp
fisubr
push
xor
jns
push
inc
mov
and
pop
xchg
aad
and
and
lods
push
add
cmp
daa
mov
dec
mov
(bad)
xchg
ror
sub
sbb
add
mov
cwde
dec
and
fidivr
out
cmc
frstor
or
ja
fidivr
push
leave
scas
jmp
rcl
dec
mov
inc
pop
sbb
mov
je
pop
xchg
mov
adc
and
adc
mov
push
fsubr
mov
cmps
outs
push
daa
cmp
jbe
sub
adc
inc
add
jns
arpl
inc
or
sub
push
add
sbb
outs
daa
pop
in
adc
pop
iret
out
adc
or
cmp
sub
retf
xchg
das
dec
add
hlt
fcomp
jmp
jb
jmp
add
repnz
cmp
mov
lods
shr
mov
mov
push
(bad)
(bad)
mov
gs
loope
call
push
mov
mov
and
mov
jle
jp
in
data16
rcr
shl
mov
movs
jmp
dec
push
mov
xor
imul
repnz
or
mov
test
xor
popa
mov
mov
pop
fwait
std
mov
lock
fstp
pushf
push
ds
or
retf
(bad)
into
xchg
aad
gs
arpl
mov
cwde
sub
inc
or
shl
cdq
pop
inc
sub
add
mov
jp
inc
jge
jns
sub
retf
loopne
xchg
in
xor
std
xchg
fcomp
jp
arpl
add
pop
adc
adc
jle
inc
cmp
stc
lods
loope
lods
cmc
test
xchg
or
fild
sub
xor
pop
or
pop
xchg
aad
xchg
loopne
dec
and
cmc
sar
mov
(bad)
ja
push
jne
adc
scas
out
lods
outs
cmp
xor
icebp
sbb
jmp
jns
int
jmp
xchg
enter
addr16
sti
adc
cmp
test
mov
cmp
xlat
mov
fnstenv
call
mov
fbld
xor
and
mov
test
xchg
icebp
pop
gs
in
lods
hlt
mov
pop
xor
jns
cdq
cld
mov
out
lds
in
(bad)
scas
in
mov
inc
add
std
push
inc
push
sti
out
stos
fidivr
mov
sbb
lock
mov
mov
mov
icebp
sbb
add
mov
cmp
pop
add
jmp
xchg
stc
mov
mov
test
push
fcmovb
fdivr
xchg
stc
sub
adc
(bad)
mov
jge
or
fcomp
inc
add
ss
rcl
movq
stos
cmp
int
rcr
xor
cmp
jae
pop
push
shl
mov
mov
imul
xlat
or
sub
pop
pop
inc
jp
inc
or
mov
xchg
pop
xor
fild
fwait
lds
inc
sub
pop
sbb
cmp
xlat
mov
rol
shl
mov
ins
xor
pop
xor
sub
movs
clc
mov
ds
es
mov
mov
add
xor
test
and
xchg
clc
movs
leave
lock
mov
aaa
dec
cmp
mov
jp
test
pop
push
fiadd
jp
mov
pusha
ss
add
movs
inc
mov
add
aas
mov
outs
stc
sbb
pop
rcl
mov
pop
mov
mov
cmp
ins
add
aad
cld
xor
and
ss
aad
pop
or
cmp
and
fimul
jb
imul
movs
in
scas
inc
push
cmp
xor
mov
dec
xchg
cld
mov
fst
je
pop
lahf
sbb
repnz
and
mov
ret
shl
jns
out
call
and
add
out
sti
mov
clc
mov
mov
mov
test
xchg
lds
rep
int
shl
ret
cwde
popa
mov
jnp
loopne
mov
push
fmul
ret
mov
inc
add
mov
movs
jl
inc
sub
mov
jmp
stos
xor
es
mov
add
xor
pop
adc
push
pop
pop
lods
in
mov
mov
gs
adc
in
mov
repnz
movs
in
cwde
test
dec
add
mov
inc
cld
loopne
mov
pop
mov
sbb
mov
push
xor
adc
retf
test
cmp
sar
or
inc
cmp
and
sub
mov
or
cmp
jmp
cmp
push
pushf
out
in
pusha
adc
add
neg
popf
daa
nop
cli
mov
sub
adc
outs
add
data16
or
hlt
mov
jecxz
retf
icebp
fisttp
mov
sub
dec
sub
jno
cdq
ret
add
adc
arpl
data16
xchg
adc
pusha
bound
jg
test
jp
fstp
lods
jmp
and
out
test
std
cwde
jno
sub
mov
mov
stc
xchg
inc
dec
xor
push
popw
(bad)
out
pusha
cmp
(bad)
pop
jnp
jmp
jnp
jecxz
rcr
and
xor
push
xor
mov
jo
scas
(bad)
mov
test
and
xchg
xchg
jge
xor
or
xchg
mov
xor
pop
or
ret
retf
mov
inc
and
or
shl
retf
xchg
ret
mov
push
and
cmps
push
cmp
ja
arpl
jae
pop
sub
push
outs
cmovnp
inc
sub
inc
ss
push
adc
cmp
jl
in
mov
mov
adc
nop
push
push
push
xchg
xor
retf
mov
in
or
jb
push
push
pusha
push
push
adc
mov
mov
dec
add
push
dec
cmp
or
jmp
loope
lahf
ss
jne
push
adc
out
stos
in
inc
lahf
jmp
retf
xchg
fwait
retf
push
lea
popa
sbb
(bad)
pusha
mov
push
clc
out
jb
into
in
mov
das
dec
jnp
or
(bad)
iret
les
rcr
data16
jne
outs
lods
or
shr
add
dec
adc
push
test
data16
stos
cli
mov
jle
and
sub
add
or
jnp
push
push
inc
ins
sub
hlt
push
je
imul
(bad)
jmp
mov
jnp
xchg
mov
call
outs
sub
pop
push
or
repnz
(bad)
mov
rcl
push
retf
mov
mov
mov
mov
adc
jnp
sub
pop
xchg
ds
sbb
sbb
adc
popa
ins
inc
sub
mov
pop
adc
mov
data16
(bad)
mov
xchg
fwait
inc
test
or
cmps
jecxz
js
je
loop
stos
dec
add
xlat
fwait
xor
mov
xchg
daa
xchg
icebp
add
aaa
lds
fs
scas
call
xor
retf
sbb
gs
(bad)
lock
add
xchg
add
in
lods
out
mov
push
add
sti
stc
popf
aad
repz
test
mov
cmp
neg
(bad)
xlat
xchg
mov
pushf
lock
fmul
xor
icebp
or
sub
out
mov
sahf
push
jge
push
movq
sbb
mov
mov
imul
lock
push
pusha
pop
pop
jg
add
test
mov
xchg
and
into
cmc
repnz
xchg
push
inc
leave
(bad)
lods
inc
test
jg
sub
shl
mov
fst
mov
push
shr
mov
repnz
stos
push
xchg
sar
mov
mov
jae
adc
sub
mov
mov
xor
(bad)
mov
jo
jl
in
hlt
(bad)
leave
mov
repz
test
inc
xor
mov
xchg
std
enter
test
or
outs
pop
and
push
or
dec
cmp
das
push
in
sbb
imul
sbb
inc
daa
imul
aaa
mov
in
in
imul
sbb
and
mov
add
rol
cmps
pop
es
push
mov
movs
jmp
das
and
jo
cmp
jmp
call
mov
push
sbb
stos
xchg
pop
mov
iret
and
xlat
xchg
js
es
bound
jae
stc
mov
adc
inc
sbb
lods
loope
dec
js
ins
scas
in
out
cmp
and
rol
cmps
loopne
push
sub
inc
pop
adc
jmp
(bad)
mov
stos
inc
cmp
and
aam
popf
jle
or
adc
retf
test
dec
push
ins
nop
lock
fcomp
xchg
ret
adc
sbb
lds
inc
push
aam
pop
sub
xchg
in
dec
mov
xchg
data16
ss
(bad)
pop
inc
dec
pop
pop
push
sbb
inc
sbb
push
or
adc
pop
adc
jl
pop
xor
jnp
cdq
ror
fadd
lods
out
mov
pop
jae
and
dec
and
int
lea
iret
adc
lods
xor
retf
push
dec
add
clc
mov
loopne
lock
sahf
out
mov
aas
jg
scas
loopne
in
mov
cwde
dec
dec
add
adc
into
ficomp
je
repnz
aad
ins
add
adc
add
xor
int3
ret
lods
fsubr
pause
mov
rcr
test
jb
add
jno
push
test
mov
mov
cs
in
shl
test
data16
out
retf
ja
adc
(bad)
cmps
xlat
or
cli
mov
rcl
int
push
jl
jo
arpl
cmps
push
addr16
mov
hlt
mov
jecxz
inc
and
fs
add
push
mov
scas
in
xor
inc
pop
add
(bad)
aad
inc
jns
add
retf
test
neg
stos
cmc
pop
jne
dec
ins
sub
daa
mov
ins
cs
sbb
jle
hlt
sbb
sbb
stc
clc
mov
ins
bound
cld
daa
les
jno
or
icebp
shl
sub
outs
das
jmp
popa
dec
adc
clc
test
mov
sub
mov
or
adc
cmp
fistp
mov
cmp
add
or
or
(bad)
retf
jo
inc
popf
shl
jge
push
dec
bound
and
test
fwait
test
pop
sub
lods
div
jmp
repz
pusha
daa
inc
movs
or
xor
ficom
dec
jmp
gs
lods
pusha
mov
pop
adc
out
inc
addr16
loope
cli
stos
call
movs
lock
stc
mov
icebp
pushf
out
stos
cmc
mov
rol
adc
cmp
aas
jg
ins
add
ins
push
sahf
pop
jg
inc
mov
popa
repz
cld
inc
mov
jnp
add
in
add
jp
cli
stos
jmp
and
cli
(bad)
retf
out
jmp
push
xor
pop
dec
xchg
call
lock
mov
je
(bad)
cmc
lods
dec
jmp
sub
mov
lods
shr
push
retf
iret
push
fs
or
cwde
lds
shl
mov
xchg
dec
adc
mov
pop
pop
test
adc
div
mov
iret
pusha
retf
jmp
cmps
xchg
dec
add
pop
or
dec
or
pop
sub
pop
inc
cmp
xchg
(bad)
inc
xchg
popa
stos
pop
cmp
mov
mov
sahf
retf
cmps
aas
pusha
cmp
sbb
aam
iret
pop
jns
and
xor
cmp
stos
mov
(bad)
sub
or
xchg
cmp
sbb
test
gs
pop
jle
pusha
jno
jns
loop
mov
pop
retf
pop
sbb
add
xchg
movs
pushf
imul
push
scas
cld
addr16
aam
mov
and
in
jmp
xchg
mov
std
push
in
fstp
test
popa
sbb
sahf
xor
add
cmp
inc
xchg
clc
dec
fild
repz
shl
mov
stc
mov
mov
push
ds
rol
fcomip
mov
jg
jo
cdq
jl
lods
jmp
sub
dec
and
ds
or
inc
xchg
inc
sbb
mov
mov
inc
push
xchg
movs
dec
push
scas
jp
pop
lahf
push
out
xchg
sub
sub
mov
aad
push
jmp
inc
popf
pop
jne
push
dec
aam
adc
sub
cdq
adc
mov
add
cli
mov
xchg
xor
idiv
lahf
sbb
pop
and
shl
add
push
and
mov
add
fimul
(bad)
fdiv
ret
es
jecxz
daa
bound
jmp
es
out
out
or
js
push
stos
outs
out
sbb
test
inc
pop
pop
mov
rol
push
xchg
push
or
shl
lods
pop
call
retf
xor
cmp
or
fdiv
sub
cmp
sbb
sbb
inc
mov
add
push
imul
pop
arpl
movs
in
jne
xchg
inc
mov
xchg
sbb
xor
and
pop
and
mov
dec
inc
mov
call
mov
jg
mov
mov
dec
popw
mov
fxch
(bad)
sub
mov
push
inc
lahf
xor
dec
jno
lock
test
xor
or
das
or
mov
jecxz
pop
jecxz
add
popa
cs
stc
mov
sub
bound
or
push
fldcw
jmp
jbe
stc
ret
hlt
icebp
cmp
cs
adc
sahf
js
jne
aam
or
cmp
pop
int
mov
and
and
add
test
mov
or
mov
js
pop
ss
rcl
jae
mov
xor
mov
pushf
das
pop
mov
sahf
pop
mov
jl
sub
pop
push
sub
inc
stos
cmp
dec
cs
fimul
cmps
adc
test
mov
ds
cmp
lock
add
dec
(bad)
loopne
popa
pop
movs
in
pop
fmulp
pop
push
leave
mov
mov
push
(bad)
dec
lock
loop
aad
inc
retf
lea
out
pop
cmp
sub
xchg
jge
cmps
sahf
adc
or
sbb
pop
imul
mov
mov
inc
es
pusha
mov
ror
fistp
lds
xor
lahf
mov
cmp
sbb
xor
mov
adc
fs
cmp
ss
loop
xor
sub
fisub
in
cmps
jg
mov
(bad)
xchg
scas
pop
aam
or
xchg
scas
cdq
push
mov
es
inc
shr
in
ret
add
mov
retf
mov
pop
and
je
jmp
ror
sub
test
arpl
shl
cmp
jnp
int
enter
sub
mov
(bad)
hlt
and
mov
addr16
jbe
shl
xor
add
fdiv
and
or
lods
jmp
jnp
or
test
div
mov
mov
jg
icebp
test
inc
les
sub
fistp
rcr
fimul
mov
outs
and
and
out
mov
and
jp
sub
loopne
and
mov
inc
and
test
jmp
push
mov
sbb
sub
(bad)
out
add
shl
dec
push
push
cli
ror
push
ret
xchg
bound
mov
out
push
push
pop
jae
dec
int3
xchg
ret
enter
sub
pusha
das
dec
movs
pop
or
mov
or
dec
in
fs
cwde
es
inc
fs
outs
inc
pushf
or
xchg
jmp
cmps
mov
sub
outs
adc
xchg
leave
dec
je
jecxz
or
adc
rcr
pop
or
in
pop
add
shl
sub
shl
jmp
xor
jnp
add
out
es
(bad)
(bad)
jne
loop
push
ds
push
push
mov
xchg
retf
ja
pop
xor
test
xor
pmaddwd
inc
es
mov
cmp
(bad)
jle
(bad)
cmc
jns
xor
aam
inc
jp
push
push
es
ror
pop
xlat
movs
sbb
cmp
sub
daa
lds
add
test
les
stos
fst
pop
xlat
mov
or
dec
mov
leave
test
mov
jl
sbb
sub
mov
fst
mov
out
sbb
rol
stc
sub
iret
mov
cmp
or
rcl
or
cmps
add
frstor
push
add
out
ret
cmp
push
inc
sar
push
cmp
rol
and
xchg
ja
hlt
data16
rcl
ja
xchg
jmp
cmp
xlat
cmp
add
popa
div
adc
sub
xor
add
stos
cdq
dec
loopne
js
mul
mov
add
retf
adc
xchg
loopne
pop
jmp
jno
xor
mov
rcr
cli
loope
sub
or
int3
jb
mov
xchg
dec
cmc
test
pop
xor
ins
push
repz
push
hlt
and
lods
pmaxsw
sti
mov
icebp
cmps
adc
jg
push
icebp
std
out
pop
xchg
push
mov
jo
mov
mov
xor
ret
jns
cmp
push
loop
and
or
jmp
test
sub
ds
push
cmps
scas
xchg
cwde
add
retf
sbb
mov
stos
std
iret
xor
clc
pop
scas
inc
push
rol
push
iret
push
xchg
outs
mov
jns
lea
xchg
push
mov
or
push
and
adc
dec
jg
fldcw
mov
rcr
mov
scas
sbb
add
mov
jns
add
js
inc
mov
ret
push
loope
mov
or
ins
sub
(bad)
add
or
push
clc
jnp
pop
pusha
das
pop
(bad)
xchg
cmp
push
cmp
sub
sub
test
sbb
aaa
xchg
jbe
arpl
pusha
dec
add
xchg
ror
push
(bad)
lock
sar
pop
inc
or
cmp
sbb
pop
xor
cmp
cli
lock
jecxz
stos
jne
movs
aam
inc
out
das
(bad)
inc
imul
mov
rcr
ficomp
loop
mov
lods
sbb
pop
jae
cdq
mul
or
sti
add
cmp
push
push
jns
push
xlat
adc
jmp
cmc
mov
test
inc
mov
stos
mov
mov
mov
(bad)
mov
inc
clc
pop
leave
mov
jne
jo
clc
(bad)
cmp
xchg
pop
addr16
jl
mov
mov
js
hlt
outs
add
inc
repnz
adc
fdivr
mov
xchg
jmp
inc
pop
retf
aam
(bad)
dec
cld
ss
push
cmp
aam
xor
fnstenv
cmc
loope
(bad)
fisubr
jnp
call
jno
xor
cld
xchg
jmp
inc
adc
and
das
fild
in
aaa
fsubr
nop
imul
mov
push
xchg
push
int
mov
or
mov
(bad)
inc
sbb
js
jp
lock
push
int
hlt
pop
sub
inc
add
retf
adc
aas
sbb
mov
pop
or
sub
test
jp
dec
dec
jo
jne
dec
xchg
adc
cmp
inc
outs
mov
sub
pop
xor
dec
xor
mov
(bad)
fdivr
xchg
pop
fcomp
aam
jge
fs
mov
xchg
adc
and
xor
mov
inc
ja
xchg
xchg
jge
nop
and
std
or
in
bound
sub
in
mov
ret
push
jmp
aas
in
shl
push
fild
sub
and
lahf
cmp
popa
jb
or
inc
fcom
retf
or
mov
(bad)
adc
pop
fiadd
jl
add
out
in
pop
jp
dec
pop
cmp
jbe
cmp
mov
aad
pop
fsin
mov
inc
fimul
pop
arpl
js
retf
push
imul
and
dec
xlat
push
gs
or
sub
sub
adc
fs
std
out
pop
shr
pop
xlat
shl
push
(bad)
mul
idiv
pushf
push
adc
adc
and
adc
es
inc
mov
adc
inc
sbb
dec
pcmpgtw
cld
mov
test
pop
enter
push
sub
xchg
add
cs
retf
and
sbb
fmul
aad
ins
inc
popf
(bad)
loope
cmp
inc
scas
stos
pop
xchg
jne
cmp
and
jmp
cmp
mov
jb
(bad)
mov
sub
xchg
sbb
(bad)
mov
pop
push
ins
fmul
dec
inc
pop
movs
gs
jge
loopne
fist
add
pop
in
sar
test
outs
das
cmp
dec
mov
inc
adc
pushf
xor
and
in
ret
aam
add
push
(bad)
pusha
adc
in
inc
jl
das
mov
cld
xchg
int
sti
xchg
sub
mov
lea
out
pusha
test
and
fsubr
dec
neg
adc
pop
rcl
cmps
leave
fs
aas
sub
and
jl
lahf
int
jmp
xchg
jmp
mov
std
sbb
daa
shr
mov
cmp
mov
cwde
jmp
fisub
jg
adc
std
push
data16
mov
iret
dec
ror
aam
mov
lods
sar
leave
es
adc
mov
xor
sub
arpl
loopne
pop
sub
and
mov
jnp
cdq
adc
add
das
lods
xchg
shl
pop
cld
add
aad
repz
shr
pop
jge
mov
and
pusha
or
mov
sub
int3
les
outs
or
sbb
add
xchg
mov
add
fldenv
mov
cld
mov
pop
icebp
(bad)
xchg
mov
jnp
mov
shl
test
out
jl
les
cwde
inc
and
out
or
mov
mov
xchg
cld
jp
mov
test
rcr
jge
fwait
test
adc
pop
cmp
aad
clc
adc
out
imul
sub
div
in
push
sti
jbe
xchg
mov
(bad)
sbb
(bad)
mov
clc
jge
jns
push
dec
(bad)
cld
pop
pop
out
jg
fstp
xchg
cmp
sahf
cmp
loop
lds
xchg
cmp
sti
popf
cmp
loope
(bad)
sub
pop
pushf
cld
and
shr
nop
movs
add
adc
ffree
dec
xor
and
movs
test
movs
mov
movs
jo
push
mov
cli
retf
mov
xchg
adc
lock
dec
lods
push
mov
push
inc
fwait
sub
jae
and
pop
mov
cmp
pop
jns
pop
mov
clc
jno
retf
lods
retf
dec
push
fdiv
add
pusha
xchg
cld
out
pusha
mov
inc
dec
iret
push
push
out
leave
cli
adc
push
cmp
mov
jmp
lods
sub
jmp
(bad)
cs
hlt
or
mov
and
cmp
xchg
enter
mov
lahf
arpl
mov
push
adc
sbb
test
test
into
fldcw
popf
and
fdivr
movs
imul
pop
out
scas
and
aam
xchg
mov
inc
rcl
and
rcl
push
int
(bad)
xchg
fwait
sub
xor
ss
xchg
jae
pop
sbb
jno
sub
jge
mov
add
enter
cdq
xchg
mov
(bad)
mov
dec
in
and
cli
daa
pop
xor
jb
mov
leave
xchg
push
sbb
ror
fwait
int
dec
adc
pop
xchg
(bad)
syscall
mov
jmp
dec
adc
enter
mov
out
call
ss
js
js
push
popf
fistp
(bad)
jbe
xor
sbb
and
mov
adc
cmp
jne
mov
xor
push
loope
sub
imul
pop
cmp
jne
enter
data16
js
pop
(bad)
(bad)
cwde
test
mov
or
loopne
xor
fbstp
mov
or
xchg
or
sti
setg
pop
dec
aam
scas
(bad)
dec
inc
sbb
mov
dec
leave
aaa
mul
xchg
dec
inc
fidiv
bound
fadd
mov
(bad)
sub
cmp
or
sub
mov
mov
mov
and
cmc
add
enter
pop
cdq
mov
test
xchg
jbe
cmp
movs
iret
nop
jbe
clc
iret
mov
push
cld
stc
sub
inc
test
adc
mov
or
or
mov
fmul
jb
sub
inc
div
xor
xchg
jbe
(bad)
or
out
fsubr
dec
mov
add
add
mov
das
outs
and
pushf
dec
retf
dec
xchg
sbb
cs
push
and
sub
mov
das
out
shl
pushf
xchg
inc
std
js
stos
retf
inc
popa
pusha
imul
mov
sete
mov
das
mov
aam
xchg
das
cmps
mov
mov
sub
sbb
fdiv
clc
jg
adc
pusha
xor
add
inc
inc
popa
adc
xchg
imul
sti
sar
or
fcmovne
xchg
data16
pop
or
cmp
cld
ret
jno
in
movs
pop
out
pop
stc
test
popa
mov
push
sub
xchg
add
test
add
cmp
push
popa
cwde
push
pop
test
pop
inc
bound
lods
imul
ret
neg
push
pop
add
loope
daa
fcmovnb
pop
popf
call
xchg
std
and
loop
xchg
dec
push
inc
adc
pop
cmc
enter
daa
and
icebp
fsub
jbe
jecxz
pop
push
mov
dec
test
sbb
jmp
push
sbb
cmp
cmp
mov
and
mov
je
(bad)
fstp
test
mov
or
imul
pop
push
mov
push
sub
dec
enter
sub
retf
pop
xor
inc
in
std
addr16
pop
adc
pop
dec
stos
pop
adc
loopne
jecxz
sub
jno
adc
xor
mov
sbb
gs
jmp
pop
pop
lds
ret
add
loop
and
out
sbb
ss
push
xchg
(bad)
in
das
idiv
mov
pop
retf
stos
add
mov
addr16
add
or
jle
add
lahf
or
lods
push
(bad)
cdq
sbb
sub
(bad)
aad
xchg
arpl
stos
or
aad
push
fsub
ins
mov
bound
mov
ret
shr
pop
pusha
inc
call
jle
xchg
rol
in
sub
push
mov
mov
pop
add
push
xchg
ror
hlt
mov
lea
mov
dec
test
push
clc
mov
pop
call
or
shl
inc
pop
dec
adc
sub
inc
or
inc
into
mov
sub
mov
cmp
shl
jmp
adc
fisub
or
aam
pop
inc
mov
fwait
push
cmps
pop
dec
mov
sub
(bad)
pop
mov
scas
aam
add
in
jle
mov
jmp
mov
cs
sahf
pop
dec
inc
mov
jl
in
out
push
lahf
push
shl
push
lods
sub
mov
fisubr
test
and
mov
out
es
and
xor
inc
call
sub
cmp
idiv
aam
push
stos
sbb
mov
ffreep
jb
lahf
aam
inc
xor
jmp
and
add
xchg
js
je
in
scas
ret
and
outs
sub
(bad)
add
sbb
mov
xor
sub
xor
adc
or
fcomp
sub
push
pop
lahf
(bad)
mov
iret
dec
mov
mov
pusha
sti
sbb
jmp
ret
xchg
xchg
jmp
cmp
jns
mov
imul
mov
push
sub
lods
retf
in
ds
jg
jmp
xchg
or
xchg
push
push
xchg
lods
and
push
pop
xchg
or
push
lea
aas
xchg
pop
inc
fimul
or
mov
int
repz
adc
xor
outs
fst
add
xchg
dec
and
in
outs
or
lods
mov
inc
pop
sbb
imul
xlat
adc
jecxz
push
add
call
addr16
and
in
in
push
xor
pop
ds
test
mov
icebp
push
mov
loope
mov
out
jo
sar
sbb
fldenv
nop
jmp
nop
stos
pop
adc
js
pop
push
fnsave
je
mov
adc
sbb
imul
push
out
in
daa
cli
jl
fwait
pop
(bad)
das
or
test
add
or
enter
xor
mov
inc
push
enter
sbb
out
xchg
mov
lea
xchg
out
inc
in
mov
mov
or
pop
ror
scas
dec
stc
or
mov
sub
mov
stos
pop
sahf
dec
fidivr
cmps
adc
cld
mov
dec
pop
cmc
xchg
call
je
pop
(bad)
mov
jmp
or
test
iret
ds
xchg
test
addr16
(bad)
sbb
inc
mov
adc
push
push
shl
add
int
push
loopne
and
arpl
ins
imul
gs
mov
dec
adc
mov
pop
(bad)
cmp
jno
dec
loop
js
dec
mov
lods
xchg
adc
outs
mov
xchg
xor
jp
sub
and
inc
call
addr16
sbb
int
dec
xor
or
cmp
or
mov
in
cdq
xchg
jge
pop
jnp
int
test
add
xor
movs
or
(bad)
pop
fs
sub
int
rcl
into
push
lds
stos
movs
dec
daa
popa
shl
loope
mov
mov
outs
inc
test
call
das
push
(bad)
inc
xor
push
je
and
scas
add
leave
sar
loope
add
xor
jmp
xchg
cld
jb
in
ins
inc
cli
jns
(bad)
cmp
ds
inc
xlat
add
aaa
jge
fsubr
test
popa
fstp
(bad)
in
jg
xchg
ror
jle
fwait
push
clc
outs
ja
or
jmp
repnz
jmp
inc
mov
jecxz
retf
mov
sbb
add
xor
inc
js
pop
cmp
in
sbb
not
dec
(bad)
fcom
in
(bad)
cmc
push
sbb
into
in
imul
rcr
dec
rcr
mov
in
arpl
jge
(bad)
aad
cdq
xor
cmp
xor
rcr
test
pop
adc
scas
inc
in
inc
mov
push
mov
iret
sbb
and
cmp
push
push
stc
test
sub
int3
lahf
sahf
pop
pushf
dec
out
add
fadd
and
adc
add
outs
ror
clc
xor
scas
in
enter
mov
arpl
scas
stos
cmp
mov
cmps
aas
fcomip
adc
pop
mov
ror
test
sub
div
dec
leave
sub
pusha
jne
fbstp
cwde
and
scas
xchg
rol
mov
mov
mov
aaa
or
xor
aad
imul
or
fstp
xchg
adc
xor
jnp
sbb
jne
fidiv
test
psubusb
imul
and
test
loopne
pop
loope
and
out
mov
jns
lock
or
jb
ret
aam
sbb
xlat
lods
sahf
test
push
xor
dec
lock
lahf
das
mov
xor
xor
test
call
sbb
pop
xchg
mov
add
mov
cwde
xchg
sub
add
int3
rcl
or
mov
rol
dec
and
pop
jmp
shl
push
inc
out
js
mov
mov
mov
push
adc
push
test
xor
xchg
cmp
jle
movs
push
dec
jns
cmps
ficomp
ret
bound
pop
(bad)
cmc
scas
sub
bound
ins
xchg
ss
and
add
pop
cli
test
push
add
imul
pop
call
mov
jbe
xlat
out
rol
arpl
or
xor
movs
jl
movs
test
cmp
clc
ret
xlat
xor
mov
push
fisub
push
and
inc
sub
pop
xchg
ss
xor
sar
push
daa
mov
data16
jmp
pop
mov
push
pop
inc
adc
call
out
xor
fnstcw
mov
rcr
test
adc
outs
xchg
ret
push
int3
imul
icebp
pop
retf
adc
fild
xchg
fmul
push
call
arpl
mov
inc
test
shl
dec
sbb
hlt
sub
(bad)
xor
sbb
push
push
cmp
mov
lahf
aad
fdivr
movs
push
mov
stos
sahf
adc
mov
test
pop
jno
jne
cdq
mov
enter
out
mov
fwait
mov
push
mov
or
xor
es
fild
adc
lods
push
sbb
inc
in
xor
ret
sub
xor
inc
and
jmp
adc
pop
fwait
lock
inc
les
sti
mov
loopne
repnz
sbb
xor
lods
cmp
idiv
mov
jae
std
inc
in
xchg
jo
rcr
and
dec
pop
push
pop
mov
shr
jecxz
loopne
daa
push
pop
xor
cld
pop
ror
std
sub
jp
pop
inc
jge
mov
sbb
xchg
(bad)
mov
sahf
pop
add
sti
xchg
or
jns
adc
xchg
mov
mov
adc
fidivr
push
faddp
pop
or
les
pop
xchg
cmp
mov
cmps
sub
popf
mov
in
lds
fimul
jge
inc
ret
fwait
and
std
push
shl
repz
retf
mov
inc
fs
cs
fbld
jle
adc
fistp
ins
push
fldenv
cmp
push
mov
inc
inc
sahf
cmp
mov
or
or
sub
fucomp
push
xchg
lahf
icebp
push
pop
aam
pop
iret
and
and
jmp
test
cmp
ja
xlat
adc
aam
jmp
jmp
(bad)
fld
sahf
aam
inc
shl
xchg
fnstsw
dec
pop
xor
mov
fiadd
ins
fldenv
pop
stos
xor
aad
adc
jmp
(bad)
cmc
shl
sub
mov
loop
out
arpl
gs
inc
pop
in
pop
cmp
ss
fild
add
ds
pop
pop
xchg
add
jmp
bound
test
jns
outs
cmp
cld
push
sbb
xchg
and
jnp
in
jmp
ret
ss
lods
and
sub
adc
xor
int3
push
pushf
dec
mov
ficom
pop
dec
and
add
fnstcw
(bad)
jge
(bad)
dec
mov
mov
jb
add
test
jg
(bad)
fisttp
add
jb
inc
pop
add
leave
iret
js
jne
or
mov
mov
scas
inc
push
ret
dec
mov
daa
jmp
dec
push
mov
jae
push
nop
jne
mov
xlat
dec
jno
jmp
in
mov
dec
js
mov
sub
xchg
xrelease
mov
dec
rcl
out
mov
sub
(bad)
jae
sbb
and
and
mov
cmp
imul
jmp
jp
js
and
scas
inc
popf
popa
fadd
shl
stos
xlat
sub
jnp
push
lock
outs
in
cmps
mov
sahf
fldenv
inc
pop
dec
xor
push
(bad)
rol
inc
inc
mov
push
lea
jl
mov
cs
pop
and
aaa
xchg
sub
into
and
adc
mov
mov
push
cmps
test
loope
add
cmp
jno
jp
loope
push
daa
mov
xor
inc
sub
loop
pop
fnsave
aaa
dec
mov
int
mov
pop
sub
mov
mov
mov
adc
add
test
nop
jne
mov
outs
test
and
adc
xchg
bound
cmp
jp
retf
loopne
inc
add
mov
mov
xor
mov
inc
sar
push
pop
fdiv
dec
lds
cmps
lahf
pushf
sbb
loop
bnd
mov
lock
push
dec
(bad)
sub
xchg
sbb
cwde
das
out
fld
test
test
ins
bound
and
mov
ret
pop
push
add
fdivr
shl
inc
add
push
int3
shl
add
add
or
cmp
cmp
or
xor
jo
ror
mov
aas
add
push
xor
mov
cs
sub
sahf
mov
jle
fld
push
sbb
cmps
sahf
(bad)
xlat
sub
mov
dec
sub
outs
movs
cmc
lods
and
retf
test
jns
inc
push
xor
leave
fiadd
rcr
cmp
cli
imul
sbb
(bad)
adc
push
sub
sub
mov
sbb
push
fwait
out
movs
pop
lds
mov
add
fmul
add
or
pop
sbb
je
fsub
scas
jge
jbe
fild
mov
xchg
test
ror
inc
punpcklbw
aad
mov
jp
cmp
sbb
xchg
mov
jg
aam
lods
fstp
jmp
loop
xor
jnp
sub
js
pop
pop
push
xchg
xor
jecxz
sti
fistp
push
ret
mov
std
dec
cmc
cmp
iret
popa
jle
(bad)
pop
sbb
std
mov
or
loopne
sub
jmp
jbe
xchg
jae
cmp
adc
and
bound
mov
fadd
rol
loopne
dec
int3
pop
cs
loopne
pop
add
ins
les
pushf
es
pop
jns
sbb
enter
mov
mov
and
lods
sbb
imul
fdivr
cmc
sub
jne
and
lods
test
mov
cmp
sbb
mov
jmp
stc
jno
div
add
shr
mov
cld
pop
mov
mov
gs
push
cmp
rcl
gs
popa
cmp
iret
cmp
lock
xchg
imul
and
pop
fdiv
sbb
jge
xor
popf
adc
mov
fidivr
pop
sbb
xchg
test
popf
mov
inc
push
fdivr
pusha
and
mov
test
outs
jp
fst
adc
jp
loope
pushf
mov
jae
jbe
out
or
in
fimul
das
out
dec
in
stos
inc
dec
cmp
add
fcom
das
clc
not
mov
lock
inc
test
in
enter
aad
dec
jmp
or
mov
xor
pop
inc
pop
ret
test
stos
sub
div
adc
leave
lea
das
push
aam
lods
push
lahf
cmps
repnz
push
call
and
sar
cli
es
dec
xor
fldenv
aas
push
mov
jmp
sar
adc
sub
bound
push
pushf
pop
or
les
mov
leave
imul
dec
stc
mov
sbb
sbb
xchg
sub
rol
xchg
mov
test
scas
cmp
shr
dec
aam
sahf
(bad)
in
xchg
fisubr
xor
jmp
popa
repnz
push
mov
sti
push
mov
outs
xchg
arpl
cmovne
out
xlat
mov
popa
ss
mul
cmp
(bad)
loope
dec
xor
ja
jmp
jmp
xchg
mov
ja
or
aaa
or
sbb
aas
mov
ror
loopne
stos
inc
push
adc
dec
xor
adc
lock
ja
rcr
push
pop
sti
xchg
push
jb
mov
jae
scas
aaa
aaa
fcmovu
iret
(bad)
jg
xor
mov
outs
test
daa
mov
mov
cmps
daa
xor
xor
icebp
test
dec
xor
mov
lahf
and
lock
(bad)
loope
mov
pop
inc
push
xchg
(bad)
dec
xchg
fcomip
mov
aas
bound
sbb
fadd
shl
cmc
cmp
rcl
pop
frstor
test
sub
hlt
call
out
into
out
cmc
lea
call
xchg
jmp
adc
pop
stos
xchg
test
xchg
ds
inc
add
push
adc
cs
movs
movs
mov
out
xchg
out
xor
ins
dec
lahf
in
mov
dec
and
mov
clc
push
mov
daa
sub
fistp
sub
mov
fistp
jne
aad
dec
cwde
cld
mov
int
mov
pop
push
ret
gs
fidiv
push
xchg
loop
sbb
mov
bound
in
mov
and
push
add
mov
cmp
in
and
inc
and
inc
jbe
add
(bad)
out
sub
or
lock
or
push
jno
je
mov
jmp
js
mov
aaa
xchg
jno
pop
mov
jecxz
push
stos
xor
(bad)
scas
mov
inc
xor
push
scas
ret
clc
fsub
(bad)
push
lock
repz
aam
or
(bad)
(bad)
xchg
arpl
and
je
push
icebp
lahf
mov
push
cmp
push
xchg
inc
dec
jne
fbld
arpl
inc
cmp
repnz
push
hlt
and
fs
icebp
(bad)
xor
pop
ins
mov
mov
ret
test
xor
cmp
rcl
hlt
add
loop
cmp
sub
icebp
and
fdivrp
ror
mov
add
lahf
inc
call
sub
sbb
xor
cmc
out
xchg
and
into
cmp
in
imul
adc
mov
shr
sar
xor
mov
sub
inc
arpl
adc
(bad)
inc
jns
cmps
cmc
stos
mov
xchg
sub
xor
sbb
xchg
scas
cmp
xchg
out
dec
pop
(bad)
ret
xchg
arpl
mov
dec
clc
lods
fbld
mov
mov
out
call
mov
and
in
mov
xchg
add
or
sar
jb
sbb
lea
(bad)
loope
(bad)
movs
ret
int3
mov
mov
scas
lea
mov
sbb
mov
imul
fdivr
sub
jle
cmp
mov
bound
shr
bnd
mov
mov
ret
push
pop
into
xchg
ins
shl
xchg
mov
outs
cmps
std
mov
hlt
xchg
mov
(bad)
scas
aam
sub
or
(bad)
je
test
loope
(bad)
add
rol
movs
or
xor
push
in
mov
xchg
inc
cmp
stc
xlat
cmp
cwde
jecxz
cli
cmp
pop
(bad)
fild
scas
xchg
add
jno
call
aam
imul
pop
sbb
pop
rol
test
pop
xor
or
repnz
mov
repz
jmp
(bad)
dec
xchg
mov
inc
sbb
sahf
xor
into
pusha
imul
out
push
or
mov
mov
repnz
pop
lods
imul
hlt
mov
jb
(bad)
fld
pop
adc
pusha
pop
pop
xchg
clc
mov
fcomp
stc
push
fwait
stos
daa
lea
add
mov
pop
mov
mov
push
out
call
stos
out
or
mov
sbb
dec
cmps
dec
out
js
pop
jg
adc
adc
aad
mov
xor
lods
mov
retf
(bad)
mov
test
in
fs
dec
adc
das
std
xor
daa
sub
mov
lock
or
dec
into
adc
or
and
into
jno
(bad)
push
jmp
jns
(bad)
shr
mov
shl
lods
xchg
mov
repnz
arpl
sub
les
pop
int3
dec
into
or
pop
mov
stos
xlat
xchg
xor
adc
push
sbb
jg
jl
pop
mov
mov
scas
ins
dec
xchg
loope
mov
fstp
outs
iret
neg
or
xchg
mov
inc
(bad)
mov
out
arpl
stos
jg
je
jge
ret
cmp
and
les
popf
out
in
jne
mov
call
mov
or
in
pop
out
xor
push
push
cmp
jge
sti
fstp
mov
std
xchg
dec
cli
fwait
int3
pop
push
sub
outs
push
mov
std
fisub
and
icebp
or
inc
pushf
sbb
sub
call
popa
pusha
xor
lds
and
jo
push
pop
in
retf
mov
or
stos
dec
mov
int3
fcom
push
dec
xchg
and
push
fidivr
jnp
rol
(bad)
jg
mov
lahf
loop
add
sbb
imul
test
mov
(bad)
not
push
inc
dec
in
cmp
fist
push
add
and
nop
repz
mov
clc
jecxz
xchg
xor
fisttp
out
sub
or
fmul
stc
jne
lahf
into
xchg
mov
or
cmp
mov
add
pushf
out
push
push
jnp
repnz
lock
push
not
mov
icebp
mov
mov
call
out
add
mov
mov
or
fmul
(bad)
fcomp
pop
xor
jl
rcr
sbb
out
xchg
mov
jno
mov
test
sbb
cli
(bad)
(bad)
inc
jns
fcmovnu
les
movntq
jne
xor
jp
mov
sub
mov
out
fnstenv
test
das
sub
mov
(bad)
stos
imul
mov
fs
mov
(bad)
sbb
xchg
into
test
xor
in
cmp
jmp
fs
pop
aaa
xor
inc
add
adc
sbb
in
inc
movs
sub
jge
lea
xor
mov
xor
push
add
mov
dec
rcl
mov
mov
fmul
in
mov
into
and
ret
and
js
mov
mov
push
or
lods
cmps
lds
lock
inc
push
mov
test
xor
adc
xor
fst
or
cwde
xchg
sbb
jp
xchg
hlt
out
bound
mov
aaa
xchg
push
add
jl
adc
mov
imul
jecxz
jbe
jb
fs
push
nop
xchg
repnz
jb
out
mov
pop
int
xchg
mov
repnz
mov
pop
push
ins
movs
push
scas
loope
mov
ss
cwde
mov
dec
dec
mov
int3
xor
xor
cmp
out
jae
loopne
jg
out
mov
lods
xchg
jle
sub
cmp
js
ss
inc
std
ret
in
adc
pop
mov
cmp
dec
setne
pop
mov
push
xchg
and
and
jmp
das
cmp
cmps
mov
push
iret
and
pop
mov
enter
out
xor
inc
shl
dec
clc
js
aam
test
fisub
add
cs
in
or
std
pop
enter
std
and
popa
in
das
(bad)
xor
dec
jb
cli
cmp
movs
cmp
mov
aam
aad
pop
out
loope
jmp
aas
xchg
shr
shl
into
cmp
es
pop
inc
mov
mov
js
add
out
cli
in
dec
(bad)
push
pop
les
inc
jp
fsub
xchg
sbb
std
data16
dec
pop
xchg
and
test
call
or
outs
clc
push
cmps
pop
int
jno
ret
es
pushf
add
daa
ds
mov
xlat
push
mov
sub
sub
mov
popf
cmc
mov
sbb
pop
mov
push
mov
xchg
jge
xchg
and
jo
pop
outs
outs
ror
sub
stos
inc
xor
sbb
(bad)
push
cs
pop
sbb
sbb
push
fdivr
test
mov
cmp
inc
(bad)
mov
inc
push
jge
mov
xor
stos
les
adc
sub
cmps
xor
fsub
fisttp
jle
adc
sbb
cmp
and
ds
xor
jnp
pusha
dec
inc
mov
sbb
sub
in
and
jp
mov
ret
or
jmp
jnp
mov
mov
icebp
inc
inc
test
out
fwait
push
fwait
retf
dec
(bad)
clc
pushf
shr
mov
cmp
xchg
xchg
cmp
imul
mov
ja
sub
iret
dec
test
and
outs
aas
shl
cmp
mov
test
jmp
call
jb
pop
inc
out
push
sbb
leave
test
retf
push
push
sub
push
scas
add
sbb
gs
adc
mov
push
dec
push
push
sub
add
jo
in
ret
inc
push
lods
cdq
ret
and
jecxz
push
icebp
sbb
cmp
inc
cmc
push
ins
push
xor
pop
or
cwde
pop
dec
pop
jbe
adc
mov
int
mov
idiv
aas
adc
sbb
fadd
mov
popa
sbb
mov
ret
and
inc
push
cmp
push
mov
shl
pop
call
jnp
dec
pop
sub
xchg
jmp
cld
(bad)
ret
mov
xchg
mov
ja
push
lock
push
and
xor
jae
shl
jecxz
jae
bound
and
cwde
pop
lea
fsubp
or
mov
mov
or
adc
inc
aas
sahf
dec
adc
retf
popw
add
inc
fadd
mov
(bad)
jmp
movzx
and
fimul
fst
sub
or
in
dec
jne
int
into
inc
(bad)
clc
or
aas
dec
test
out
(bad)
or
mov
bound
mov
jnp
inc
fdiv
in
jns
inc
xchg
scas
pop
retf
pop
dec
push
or
pop
push
arpl
aam
dec
test
jae
ss
or
out
pop
xchg
cmp
push
adc
mov
out
mov
retf
inc
nop
cmp
adc
mov
fild
in
dec
xor
add
fdivrp
int
iret
pop
int3
aaa
test
fcmovb
call
mov
or
enter
outs
mov
data16
gs
aaa
pop
in
jle
cmc
cmc
rcl
mov
or
and
lock
mov
into
add
xchg
push
add
and
mov
inc
cdq
xchg
in
and
clc
xor
aam
xor
xlat
mov
out
push
movs
push
push
xchg
jl
test
das
ja
enter
mov
cwde
ins
pop
dec
push
mov
fbstp
test
push
cli
dec
push
jmp
mov
pop
mov
xchg
pop
loope
imul
fadd
xor
pop
lds
mov
cwde
pop
jb
add
pop
sub
lods
sub
pop
add
lods
in
repnz
add
inc
test
into
push
inc
test
sub
jno
int
mov
mov
and
xor
sbb
fs
and
and
mov
xor
dec
cmp
in
aas
dec
aam
imul
inc
enter
mov
xchg
sub
pop
ret
inc
inc
xor
es
ret
and
(bad)
cld
stos
(bad)
or
mov
lea
jne
push
jmp
cmps
sub
cmp
int
enter
lods
cmc
jo
mov
rcr
push
out
adc
sub
int3
outs
jmp
dec
sbb
das
inc
loop
fnstsw
sbb
int
(bad)
shr
out
movs
hlt
repnz
cmp
call
inc
aas
or
mov
int
mov
mov
inc
dec
mul
dec
mov
jo
mov
mov
jl
sub
adc
jg
(bad)
aaa
xchg
xchg
cli
shr
enter
iret
sub
dec
jb
fadd
popf
in
cdq
scas
mov
scas
inc
sub
xchg
add
cmp
cs
xor
jmp
cli
imul
out
push
xchg
add
or
sub
add
mov
ins
xchg
xor
fld
add
popa
iret
mov
and
(bad)
push
push
or
fcmovnbe
outs
push
test
jg
loope
mov
mov
push
neg
push
shr
lahf
mov
js
add
leave
mov
push
enter
xor
push
jecxz
sbb
push
dec
popa
cmp
sbb
(bad)
push
mov
cmp
cmp
sub
fadd
dec
add
sbb
jbe
mov
inc
jnp
test
fsubr
mov
out
cmp
mov
xchg
enter
fiadd
add
or
icebp
rol
dec
out
and
mov
outs
dec
ror
lods
retf
inc
mov
inc
dec
jecxz
aas
mov
stc
mov
mov
xchg
sbb
into
enter
es
mov
mov
jns
int
fsubr
(bad)
fcmovne
out
xor
cmp
stc
(bad)
movs
mov
jo
inc
scas
cwde
sbb
in
test
cld
das
mov
sbb
mov
icebp
pop
inc
scas
cmp
div
add
inc
mov
xchg
scas
mov
mov
lods
outs
fnstsw
push
mov
cmp
ins
hlt
int
lods
out
jecxz
lahf
add
mov
xchg
psrad
mov
(bad)
mov
mov
sbb
arpl
sbb
cmps
aam
pop
in
ret
cmps
cmp
and
pop
xor
sbb
iret
cdq
push
mov
pop
jl
dec
jns
jbe
mov
or
or
cmps
add
and
sub
cmp
push
(bad)
fcmovnu
ffreep
fadd
fmul
iret
or
mov
lods
out
jns
in
dec
ds
rcr
mul
dec
ret
sub
cmps
cmp
mov
inc
inc
xor
jl
push
mov
lods
add
jecxz
and
es
dec
aam
xchg
clc
loop
push
inc
stos
cmp
not
xchg
mov
(bad)
fsubr
adc
lods
imul
mov
into
es
js
jne
pop
pop
loopne
sub
js
mov
cmp
dec
jle
(bad)
cmp
nop
lds
mov
lahf
out
dec
dec
cmp
or
fcom
nop
in
nop
fisub
add
dec
adc
add
cld
or
fisubr
ss
cwde
jp
cmp
arpl
mov
inc
aaa
test
jno
jb
int3
in
clc
mov
mov
dec
gs
dec
cmp
iret
repnz
daa
add
mov
daa
cld
fbld
jbe
cmp
ret
mov
add
fs
mov
leave
mov
jge
std
aas
push
add
or
push
dec
icebp
repnz
dec
jae
mov
xor
in
xor
nop
push
popf
xchg
jge
mov
and
lahf
not
out
fcomp
sbb
(bad)
mov
ror
out
imul
in
jmp
mov
adc
gs
dec
dec
jge
or
test
jl
pop
add
into
sbb
jbe
cmp
cmp
dec
fdiv
out
adc
pop
cmp
fiadd
and
test
jno
push
movs
pop
mov
dec
dec
sbb
jl
or
cmps
xchg
jo
and
shr
mov
jl
adc
lds
lock
push
dec
jns
or
fild
out
in
xor
lods
jp
test
add
cmps
inc
loopne
nop
mov
mov
push
je
adc
adc
push
fist
retf
ss
cmp
pop
rep
xchg
mov
mov
lds
inc
xchg
or
es
push
cdq
inc
xchg
push
xor
mov
mov
aad
ret
into
adc
inc
sbb
push
mul
adc
xchg
mov
push
pop
ds
xor
or
inc
pop
enter
stos
into
loope
or
adc
ret
les
test
xchg
retf
pop
repz
leave
add
loope
mov
xchg
xchg
mov
sbb
xchg
movs
sahf
popa
ins
aaa
pushf
sbb
dec
clc
cmp
sbb
cmps
mov
push
cmps
outs
jl
adc
mov
or
in
adc
cmps
addr16
or
dec
js
mov
pop
mov
jb
int3
pop
mov
scas
repz
pop
pop
stos
jmp
ss
shl
ds
push
inc
cmp
xor
mov
hlt
pop
icebp
mov
jns
icebp
fild
or
mov
xchg
xlat
ret
mov
push
cld
call
imul
shl
call
in
xchg
fistp
push
jno
add
mov
jl
idiv
sub
cmp
mov
aad
(bad)
xchg
sub
cmp
mov
cld
sbb
mov
addr16
push
test
inc
call
out
enter
cmc
ss
pusha
sbb
xlat
xchg
loope
test
aaa
(bad)
mov
lods
sbb
inc
sbb
mov
fldenv
mov
movs
pcmpgtb
popf
xlat
ret
in
sbb
mov
mov
ficom
out
cwde
sbb
cmp
shl
mov
scas
(bad)
jmp
rcr
ins
mov
jle
daa
aaa
call
jp
or
mov
arpl
scas
clc
ins
sbb
cmc
shl
fisub
and
mov
xor
push
outs
push
cmp
mov
loopne
(bad)
movs
dec
fld
jecxz
mov
dec
push
fs
nop
addr16
pushf
cld
sbb
add
jo
jmp
jl
push
xrelease
or
lods
int
les
ins
in
pushf
int3
addr16
loope
mov
popf
xchg
add
and
jnp
rcl
xchg
outs
push
scas
cmps
sti
pop
mov
movs
rcl
pop
and
pop
clc
into
lods
mov
pop
cmp
ja
sub
mov
repz
sbb
std
push
mov
aaa
xchg
fs
imul
ja
mov
repnz
arpl
xchg
mov
sbb
and
jmp
xor
sub
dec
jmp
jns
push
test
test
or
and
xchg
mov
test
repnz
(bad)
rcr
push
jmp
je
fwait
mov
arpl
fsub
push
dec
aam
dec
loope
popa
in
add
(bad)
pop
call
pop
shr
xor
lock
jecxz
inc
adc
in
das
push
adc
ret
mov
das
out
aas
and
push
cmp
clc
jge
xor
fsub
inc
or
in
jmp
jnp
in
xchg
mov
mov
fwait
(bad)
popa
cmp
pop
fisttp
inc
pop
mov
mov
xchg
sub
mov
jecxz
sub
mov
stos
push
and
cli
leave
stos
loope
bndstx
retf
movs
jp
pop
in
adc
pop
cmps
shl
adc
stc
(bad)
bound
imul
and
push
pusha
paddusw
dec
loope
or
and
fwait
mov
jne
dec
(bad)
sar
mov
jp
pop
inc
push
adc
(bad)
sub
jp
mov
sub
mov
(bad)
test
popa
mov
or
mov
iret
int
xchg
lahf
rol
cmp
mov
add
xchg
mov
movs
or
ds
and
es
and
lds
cld
bound
xchg
(bad)
cmp
inc
shl
cmp
xchg
mov
imul
repz
sahf
or
dec
icebp
cmps
ret
jnp
(bad)
push
mov
cmp
(bad)
retf
xor
in
lods
jno
rcr
adc
in
jnp
or
xchg
push
sub
aam
sahf
lea
fwait
xor
inc
out
push
sbb
add
pop
inc
pop
jmp
adc
or
(bad)
mov
cmps
cmc
jge
int
inc
int
inc
and
sbb
mov
xor
aaa
ret
mov
adc
scas
push
call
sub
or
xchg
cmp
add
out
cmp
loop
ret
or
jl
xor
ja
jmp
sbb
aas
mov
out
xor
pushf
(bad)
mov
aam
dec
and
sbb
popa
adc
push
xchg
in
mov
jg
inc
outs
push
les
jle
ret
xor
sahf
dec
pop
cmps
xchg
mov
push
or
fs
ins
pop
cmps
mov
pop
addr16
mov
or
sub
pop
dec
aam
jb
pop
hlt
push
neg
xchg
mov
xchg
inc
hlt
xchg
and
inc
mov
out
retf
inc
mov
enter
repz
ja
(bad)
ror
icebp
mov
push
pop
pop
xlat
adc
sbb
fwait
ins
or
imul
cmps
lahf
sub
xor
fistp
in
out
inc
or
mov
push
shr
xchg
call
mov
enter
in
inc
outs
adc
mov
and
or
rcl
clc
dec
rcl
hlt
(bad)
fiadd
cmp
es
arpl
xor
hlt
jb
or
push
mov
repz
cwde
(bad)
xchg
scas
add
mov
sbb
lods
and
mov
ja
lods
mov
or
retf
mov
jae
stc
out
sub
mov
imul
das
daa
cs
jmp
xchg
and
div
test
mov
sub
icebp
cdq
push
lds
push
mov
mov
jns
jle
call
outs
movs
into
mov
adc
scas
or
sbb
add
in
enter
mov
out
jp
mov
pop
(bad)
jecxz
push
cld
pop
xchg
jbe
rcr
lock
or
jle
aam
shr
loop
inc
js
nop
dec
daa
int3
imul
push
inc
and
iret
(bad)
(bad)
cmps
and
xor
cwde
cmc
dec
mov
jl
aas
ror
or
mov
(bad)
and
es
mov
add
jb
sbb
retf
push
push
popa
js
cmp
sub
loop
enter
dec
or
test
fidiv
add
pop
es
push
jo
hlt
push
aam
and
mov
mov
and
lahf
push
mov
add
stos
ins
push
mov
xor
fld
inc
ficomp
sub
lods
mov
mov
pop
cmp
mov
cmps
into
fs
les
loope
lods
dec
mov
mul
popf
out
inc
das
jp
xor
add
xchg
movs
pop
lea
inc
outs
and
xchg
loopne
or
fs
cld
es
popa
sbb
in
mov
lods
cmp
stos
push
ins
cmp
sbb
shl
popa
sbb
cli
pop
mov
push
adc
jae
mov
add
clc
imul
inc
push
test
mov
dec
int3
push
or
sbb
enter
push
mov
push
fmul
repz
xchg
fs
popf
lds
lds
adc
shl
out
jmp
mov
mov
fist
lods
push
cwde
xchg
inc
fs
fcomp
push
lds
sub
nop
sub
repz
jo
das
sub
mov
jmp
xchg
sbb
xchg
xor
cwde
test
push
adc
mov
ret
sti
out
xchg
add
pop
(bad)
div
int
or
mov
pop
fwait
xor
jae
test
test
cdq
inc
sar
rcl
pop
hlt
out
mov
sbb
outs
ds
into
dec
jge
test
jmp
dec
adc
fimul
fstp
push
adc
(bad)
cdq
jle
ror
pop
out
mov
loop
cmps
call
inc
jbe
jmp
in
outs
aaa
leave
cdq
push
sub
lahf
test
pop
mov
mov
xchg
lds
and
xor
bound
stos
into
jg
icebp
int
test
rol
mov
jb
cmp
dec
pop
outs
sbb
cmp
ror
jge
lahf
aad
fwait
sub
xor
scas
or
cmps
lea
inc
scas
lods
mov
pop
jo
mov
dec
sahf
test
and
jmp
inc
popf
push
mov
imul
push
mov
xchg
lea
fwait
and
int3
push
les
aaa
jmp
add
addr16
pusha
jmp
in
in
sbb
cmps
dec
imul
mov
mov
adc
cld
adc
mov
xchg
fs
daa
jecxz
test
in
mov
cmp
in
and
add
pop
lahf
repz
jecxz
arpl
rcl
dec
sub
fucom
popf
mov
test
or
data16
mov
push
enter
mov
mov
xor
jmp
mov
mov
scas
sbb
push
fwait
and
jnp
jb
mov
int3
stc
inc
imul
push
fwait
(bad)
xchg
jae
cld
pop
stos
cmp
outs
xor
bswap
addr16
call
mov
(bad)
int
fbstp
lock
xlat
mov
cmp
push
outs
push
(bad)
loop
movs
adc
and
ins
mov
mov
addr16
mov
mov
scas
or
xchg
dec
sub
inc
inc
fisttp
leave
ds
pushf
and
repnz
push
mov
cmp
out
xchg
mov
iret
je
sub
retf
xchg
(bad)
mul
paddd
fmulp
rol
scas
push
jle
loope
sbb
jge
cmp
sub
add
in
int
out
loopne
push
shr
pusha
cmp
cmp
icebp
test
cli
call
stos
ror
daa
add
outs
in
xor
mov
mul
loope
jns
in
push
inc
or
xor
or
inc
imul
pop
mov
fwait
div
gs
mov
pop
retf
ins
stos
pop
xchg
dec
icebp
test
inc
xor
jp
inc
or
ret
dec
sub
jnp
jge
ret
adc
es
ins
pop
aas
dec
cld
dec
inc
or
(bad)
mov
jb
retf
aad
in
call
iret
jg
add
or
fs
mov
cld
pop
mov
jne
je
push
nop
cmp
sbb
addr16
cdq
xchg
mov
pop
add
xor
mov
ret
sahf
sub
aas
mov
stos
int
cs
retf
or
push
mov
push
ins
add
xchg
pushf
mov
mov
enter
mov
mov
push
aam
scas
sbb
xchg
les
or
and
adc
cs
jb
ficomp
mov
int3
or
les
and
idiv
pop
cmp
jb
xchg
pop
xchg
dec
ror
or
jnp
sub
adc
jnp
(bad)
jne
out
pop
daa
mov
outs
mov
xchg
or
adc
sbb
push
xchg
aad
mov
dec
add
fsubr
aad
cmp
test
mov
adc
hlt
jl
iret
xor
push
loop
clc
jmp
lods
push
mov
xchg
mov
mov
mov
dec
loope
popa
out
cmp
(bad)
cmp
fdiv
popa
dec
sub
sahf
mov
and
xor
and
jae
int
push
jne
sub
or
stos
mov
push
int
outs
cmp
test
loope
add
or
or
pop
shr
cs
(bad)
scas
or
push
lea
and
dec
ror
out
add
lods
cmp
cmp
add
jg
test
aam
lahf
popf
sbb
sub
push
xchg
es
inc
repnz
jo
pop
xor
scas
ss
mov
mov
shl
mov
adc
call
aas
aam
sbb
jl
mov
jne
or
pusha
cmp
(bad)
pop
std
js
pop
not
mov
cdq
sub
fcomp
int
mov
in
jno
icebp
iret
xchg
cmc
mov
add
push
mov
bound
fsub
lods
mov
(bad)
adc
adc
xchg
pop
je
push
rcl
sahf
stos
jmp
repz
fmul
push
jp
mov
scas
fadd
push
push
jl
(bad)
fbstp
add
mov
shr
addr16
jnp
cli
mov
mov
(bad)
and
enter
outs
or
cmp
sbb
ds
dec
lahf
out
or
push
xor
mov
scas
and
or
sub
(bad)
cmp
jmp
pop
mov
jnp
and
sbb
leave
mov
sbb
jg
retf
out
xlat
jge
movs
(bad)
call
out
jle
repz
mov
and
retf
jl
aam
and
dec
js
and
jae
add
les
and
in
xor
fcmovne
lods
addr16
pop
pop
mov
push
mov
out
outs
pop
xor
popf
dec
add
aas
aas
fdiv
dec
mov
add
jmp
mov
clc
call
ret
and
pop
fwait
pop
adc
and
inc
lea
and
arpl
sbb
(bad)
fidivr
repnz
mul
and
mov
iret
or
push
jbe
clc
push
jne
jmp
scas
sbb
jge
loopne
out
retf
push
mov
sar
dec
and
icebp
in
or
or
stos
shl
mov
daa
bound
ins
inc
shl
xchg
xor
dec
(bad)
push
sub
xor
adc
sub
inc
das
xor
pop
sti
icebp
enter
pop
push
pop
xchg
test
sub
les
mov
xchg
push
scas
inc
push
xor
xchg
mov
aad
fs
(bad)
inc
add
sbb
mov
push
scas
mov
gs
sar
pushf
ret
sub
or
pop
in
sub
jo
sti
sahf
pop
in
scas
cmp
adc
xor
jbe
push
jae
jno
pushw
nop
dec
inc
jbe
ins
in
or
out
cmp
int3
cmp
jmp
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
xchg
push
add
and
ja
pusha
mov
mov
sbb
ins
aad
mov
dec
rcl
push
call
sub
das
sub
ins
and
mov
xchg
cld
pop
ret
cmps
test
jl
fisub
and
imul
(bad)
das
inc
sbb
loopne
xchg
lea
xor
call
add
jl
and
lods
add
mov
sbb
repnz
fdiv
dec
in
and
cdq
sar
xchg
mov
cmp
and
fdivrp
loopne
popf
stos
xchg
xchg
sbb
adc
inc
jmp
imul
mov
out
fstp
cwde
adc
loop
pop
add
loopne
das
xchg
mov
inc
cmps
mov
dec
mov
or
sbb
adc
mov
dec
iret
inc
repz
loopne
int3
shl
push
rcr
mov
test
jg
(bad)
mov
pop
out
dec
push
and
out
pop
popf
xchg
jecxz
mov
xlat
cmp
xchg
and
fistp
jge
mov
ds
dec
push
das
shr
shl
imul
loope
stc
or
or
adc
adc
adc
jl
mov
fucomip
outs
(bad)
(bad)
mov
jno
daa
mov
push
mov
daa
ret
arpl
inc
sbb
or
or
fisubr
pusha
jb
movs
inc
add
xchg
jbe
dec
and
push
aad
sbb
pusha
cmp
cld
mov
call
jecxz
cwde
dec
mov
bound
int
lods
mov
add
aam
imul
add
cmc
stc
or
xor
sbb
push
stc
push
lock
lahf
test
lods
aaa
shl
adc
add
sti
xchg
jle
and
cmp
inc
dec
pop
fcomip
xchg
scas
adc
mov
and
rcr
mov
addr16
out
ds
fadd
dec
push
xchg
xor
leave
xchg
xchg
sub
popa
retf
data16
jb
xor
addr16
jbe
(bad)
rcl
aas
cmp
lods
mov
push
enter
cmp
(bad)
pop
adc
and
pop
ror
mov
sti
push
(bad)
sti
lock
adc
(bad)
in
ja
add
jge
aam
call
jg
leave
cmps
jne
es
or
push
cmp
outs
es
and
scas
mov
mov
inc
shl
(bad)
or
rcl
mov
or
add
sbb
mov
in
mov
bound
add
mov
inc
add
call
cli
pop
sub
mov
fsub
dec
cld
jmp
sub
movs
xor
or
leave
mov
int
addr16
xor
enter
adc
lea
or
mov
adc
dec
(bad)
nop
mov
xchg
jecxz
jno
mov
out
push
push
dec
mov
das
jb
(bad)
mov
mov
or
and
push
pop
add
in
sub
xchg
ins
jb
pop
out
(bad)
mov
push
icebp
or
jns
arpl
sub
and
sahf
adc
out
fucomip
pop
shl
inc
cmc
imul
iret
out
xchg
imul
dec
mov
test
adc
enter
dec
mov
loop
inc
jbe
mov
sar
jb
pop
sahf
test
sub
repnz
and
and
xor
fstp
push
adc
ret
iret
add
shl
inc
dec
inc
lds
loopne
outs
mov
xor
cmp
idiv
xchg
sbb
add
test
jo
ret
xchg
icebp
cli
stos
pop
test
xlat
dec
and
lock
pop
xor
int3
fsubr
mov
(bad)
mov
imul
cmc
inc
jae
fadd
xor
jl
leave
sti
cmps
jne
mov
es
push
mov
jge
add
mov
dec
xor
(bad)
cs
in
mov
fidivr
(bad)
mov
dec
push
mov
jg
fild
push
scas
dec
mov
sub
cmps
or
lea
adc
dec
sub
ret
or
fidivr
adc
inc
mov
ret
inc
out
pop
test
xor
push
xor
retf
pop
and
xor
pop
or
ja
lock
sbb
cmps
ja
cmc
pop
in
jb
pop
xchg
fs
push
nop
adc
inc
(bad)
ja
mov
adc
retf
rcl
bound
jmp
js
in
push
adc
push
in
sti
hlt
sbb
add
rcl
inc
xchg
push
sub
mov
mov
out
loope
popa
scas
push
scas
std
inc
xchg
fbstp
pop
fwait
mov
aaa
icebp
adc
xchg
repz
cmps
dec
cmp
inc
int3
and
adc
push
into
in
jae
and
or
ret
into
scas
jle
pop
loopne
xlat
mov
cdq
in
mul
aad
mov
jns
jl
mov
cmp
cmp
mov
mov
aad
pop
and
int
cs
mov
shl
pushw
mov
mov
shl
push
stos
jmp
sbb
call
fidiv
jne
add
sbb
xchg
ficomp
xor
pop
enter
arpl
fisttp
lock
push
jg
mov
push
cwde
cmc
sbb
jecxz
add
jmp
jae
int3
push
xor
push
mov
adc
imul
jmp
(bad)
aaa
fmulp
xor
jl
sbb
or
retf
stos
sub
(bad)
das
test
mov
inc
ins
cmp
xchg
out
pop
jae
mov
jmp
(bad)
das
add
xchg
aas
fist
iret
xor
xchg
imul
sub
xchg
xlat
cmc
adc
ins
xor
cmp
(bad)
push
cld
pop
xor
call
mov
addr16
test
ret
and
add
push
jnp
mov
or
xchg
mov
xchg
xor
jg
das
push
arpl
adc
(bad)
aaa
mov
cwde
fwait
xchg
call
stos
test
ret
rol
aad
loop
or
adc
mov
inc
jge
das
daa
cli
and
mov
inc
in
mov
inc
(bad)
sbb
out
enter
mov
add
xchg
aad
stos
cmp
fidivr
pusha
mov
push
xchg
add
into
popa
or
lock
pop
nop
jl
out
stc
mov
push
outs
inc
and
in
retf
push
(bad)
aam
fs
and
mov
aas
adc
je
call
test
jge
mov
clc
and
(bad)
ss
sar
aaa
xor
stos
hlt
popf
ret
inc
dec
adc
iret
shl
cmp
dec
and
mov
repz
inc
sahf
repnz
arpl
xchg
das
or
cmps
dec
push
mov
xlat
dec
xor
dec
test
loopne
lods
cmp
and
or
mov
mov
inc
test
adc
out
dec
push
call
(bad)
cmp
mov
push
adc
imul
(bad)
jmp
pusha
jae
call
adc
js
cmp
push
repz
inc
cmp
shl
outs
mov
movsx
jne
or
add
fsub
je
ror
lea
mov
inc
aam
push
xor
mov
aas
popa
push
jb
xor
pop
(bad)
xchg
add
pop
jbe
nop
xchg
je
(bad)
stos
mov
(bad)
mov
fwait
push
arpl
or
dec
adc
dec
stos
pop
jne
int
shl
int
(bad)
inc
jmp
sub
fild
jecxz
enter
pop
cmp
scas
xchg
sbb
push
stc
xor
dec
mov
je
mov
retf
loopne
addr16
ret
test
sti
sbb
jae
dec
push
stos
pop
mov
sbb
fs
fcmovnbe
sub
sub
and
sub
outs
nop
into
cmc
inc
(bad)
fstp
mov
pushf
in
inc
sbb
push
dec
outs
scas
and
inc
jnp
jno
test
cmps
xor
and
loop
or
jb
out
daa
push
xor
inc
xchg
scas
addr16
sbb
gs
xchg
cmp
popf
inc
and
adc
addr16
and
shl
mov
mov
push
outs
pop
jmp
dec
loop
xor
mov
xor
fs
jae
sub
push
movs
mov
jecxz
pop
sbb
mov
iret
jne
inc
fnsave
xchg
dec
add
nop
mov
js
xchg
pop
aaa
jb
pop
jno
mov
cdq
sar
repz
mov
inc
pop
popf
sar
mov
out
xchg
inc
fwait
test
mov
pop
jb
sbb
ss
or
jb
aaa
sub
pop
lods
xor
add
lea
pop
pop
pop
adc
xchg
mov
dec
aam
inc
add
test
mov
fistp
jbe
jns
shl
inc
rcr
adc
add
adc
neg
retf
les
pop
ss
cmc
imul
xor
or
jp
jmp
clc
mov
inc
dec
push
or
fldz
ror
call
or
jbe
(bad)
fcomp
mov
mov
adc
jp
dec
xor
push
(bad)
xchg
jp
ins
mov
int
cmp
mov
out
jmp
sbb
mov
fcomp
fistp
sub
push
inc
adc
adc
sbb
push
outs
fld
mov
fwait
or
mov
(bad)
dec
and
fwait
(bad)
mov
shl
jmp
std
nop
shr
adc
ret
adc
adc
rol
sub
xlat
shr
jo
dec
pop
in
jge
push
xor
stc
ror
or
ficomp
into
movs
popf
dec
in
mov
dec
push
ret
xor
inc
mov
rcl
pop
cmp
mov
xchg
call
jbe
pop
dec
mov
dec
cmp
push
fistp
mov
mov
pop
scas
or
cdq
cmp
std
dec
icebp
call
ins
repnz
std
push
lock
mov
popf
ret
dec
mov
push
test
push
sub
inc
push
clc
lahf
xchg
inc
and
lods
adc
arpl
xchg
mov
lahf
or
sub
out
(bad)
fwait
inc
mov
aaa
jbe
cmp
jbe
sub
cwde
dec
xchg
out
shr
fst
dec
inc
ds
sbb
mov
cmp
sar
or
dec
push
push
cmps
and
inc
cli
and
mov
cs
in
aaa
ficom
jecxz
dec
fist
cmp
out
pop
arpl
ins
sbb
outs
mov
fs
test
inc
fild
add
add
cmc
imul
sbb
shl
jns
pop
xchg
mov
ficomp
push
and
xchg
xchg
jle
pop
das
(bad)
pop
dec
fcomp
xchg
sbb
cmp
mov
cmps
pop
sbb
imul
repnz
dec
inc
enter
sbb
movs
mov
sub
pop
or
dec
dec
sbb
int
add
dec
pop
cs
retf
mov
inc
xchg
mov
jg
jne
jo
(bad)
loope
mov
xor
retf
jbe
push
adc
adc
inc
xor
mov
jmp
leave
(bad)
cmc
add
adc
into
js
jo
test
mov
or
pop
movs
sub
and
or
retf
rcr
cmp
inc
jl
xchg
push
stc
cli
repz
sahf
mov
add
and
jbe
sbb
adc
les
dec
repz
ds
push
xchg
js
add
call
out
jmp
sub
cmp
das
add
out
fst
pop
push
mov
xlat
sbb
pop
cmps
stos
push
cmp
fsubr
sub
sbb
std
jne
push
pusha
call
lods
imul
test
inc
fstp
aam
(bad)
push
outs
pop
scas
bound
jmp
movd
xchg
inc
xchg
sub
aad
enter
pop
shl
dec
cli
pop
cld
adc
adc
stc
scas
push
sub
gs
jg
mov
sbb
mov
fist
arpl
(bad)
pop
mov
outs
popa
popa
mov
jle
mov
inc
rcl
or
popa
or
dec
push
add
jle
push
das
adc
and
cmp
xor
ins
out
cmps
sbb
es
mov
out
repnz
daa
cmps
cmps
sub
scas
icebp
mov
adc
test
inc
push
jae
in
mov
(bad)
jle
push
das
xchg
(bad)
repnz
stos
mov
movs
cmp
jmp
cmp
pop
repz
test
out
arpl
sahf
dec
scas
rcr
sahf
out
xor
inc
loop
lods
inc
es
out
repz
adc
fwait
dec
test
mov
push
lahf
fwait
test
in
clc
pop
or
xor
cmps
sbb
cmps
push
test
mov
mul
out
and
dec
ficom
jge
dec
and
push
jmp
out
pop
outs
mov
movs
pop
lock
and
sbb
enter
mov
idiv
xchg
or
repz
cmp
inc
dec
sbb
push
add
mov
cmp
retf
xchg
xor
scas
push
xchg
dec
out
out
stc
xchg
pop
mov
(bad)
js
ret
retf
cmps
iret
jns
jbe
(bad)
sub
lock
jb
rcr
rol
mov
into
inc
pop
scas
neg
pushf
sbb
push
mov
fcmovnb
int3
jmp
cmp
xlat
jl
xchg
in
jno
xlat
shl
jbe
ficom
rcr
sub
xchg
push
imul
inc
das
stos
stos
cmp
and
push
sub
nop
jl
push
test
lods
xchg
dec
addr16
sbb
and
and
(bad)
lods
jge
xchg
or
adc
out
lock
push
sbb
icebp
sub
inc
int
xchg
iret
loope
je
jae
(bad)
hlt
or
jmp
sub
push
jmp
sbb
cdq
cmp
add
sti
mov
pop
fwait
adc
jle
mov
jns
(bad)
out
mov
and
sbb
jnp
mov
pxor
sbb
hlt
jecxz
fs
out
push
aam
dec
loope
pop
bound
mov
add
repnz
fucomip
popa
daa
daa
fstp
cmp
loop
pop
stos
or
add
push
(bad)
popa
adc
pop
xor
dec
not
fstp
mov
sub
pop
dec
mov
das
xchg
cwde
jg
mov
sub
imul
sub
mov
and
cmp
cmps
push
imul
sbb
mov
call
or
pop
not
cmovne
fwait
ins
into
je
xchg
setne
je
jg
fwait
addr16
and
popa
pop
jnp
inc
inc
aas
push
push
pop
dec
nop
cld
xchg
xchg
loopne
sahf
jp
imul
int3
(bad)
cmp
ror
loopne
xchg
push
mov
imul
pop
scas
cmp
xchg
jno
pusha
setg
fwait
adc
test
mov
loop
and
stos
loope
inc
stos
shr
sbb
push
mov
jmp
jns
xchg
addr16
cmp
mov
add
push
mov
aam
popf
out
dec
cli
fcom
sahf
inc
push
pop
or
push
imul
sbb
xchg
ret
or
push
nop
push
and
pushf
subps
ds
stos
pop
sbb
mov
mov
push
pop
fsub
stos
pop
int3
ret
inc
aad
mov
outs
fnsave
cli
and
enter
loop
mov
inc
call
mov
call
cmc
mov
shl
jbe
push
cmp
or
fisttp
test
jle
cwde
pop
inc
inc
pop
jo
(bad)
bound
sbb
repnz
aas
stos
sub
dec
inc
iret
pop
ins
int3
pop
xchg
jle
retf
imul
pop
sbb
jg
push
fldcw
jp
scas
and
pop
cmps
dec
push
repnz
mov
ret
call
lahf
add
popf
gs
pop
mov
les
push
sub
icebp
shl
mov
div
out
les
fisub
cmp
mov
stc
lds
dec
movs
pop
or
out
gs
sub
xor
cmp
xchg
jb
test
movs
fstp
(bad)
jle
imul
jp
retf
sahf
hlt
sub
scas
add
sbb
inc
lds
nop
hlt
cmp
sub
jl
lods
(bad)
cli
mov
dec
jno
mov
cmp
pop
(bad)
pop
leave
cmps
call
in
sbb
cmps
scas
dec
xchg
mov
pusha
sti
retf
in
fucomi
mov
int
in
clc
daa
popa
retf
or
aaa
push
jmp
(bad)
mov
push
pop
xor
adc
lock
int
mov
in
jmp
fadd
and
(bad)
fucompp
lock
lahf
iret
xor
imul
daa
loopne
cmp
sar
mov
xchg
ds
add
out
icebp
pop
or
xor
in
imul
add
pop
xchg
outs
ins
xor
push
js
xchg
sub
sar
push
fdivp
mov
mov
mov
ficom
jmp
cmp
adc
lds
idiv
inc
sbb
push
sahf
push
push
or
sti
call
test
ret
aam
mov
add
repz
cmp
rep
dec
jge
js
and
arpl
leave
lds
push
xchg
inc
js
xlat
jmp
test
inc
jle
pop
(bad)
jae
or
pop
stc
pop
dec
clc
xchg
add
in
aam
rcr
daa
outs
fisubr
fadd
movs
push
xor
dec
dec
dec
xlat
jns
sbb
imul
movs
in
or
push
rcr
sbb
dec
mov
sbb
fidivr
pop
std
lds
inc
nop
mov
sub
mov
clc
stc
jae
dec
test
test
add
fsub
sbb
xchg
push
(bad)
mov
push
pop
shl
xchg
mov
jno
pop
sbb
or
push
jnp
call
mov
fisub
daa
mov
mov
icebp
sub
cwde
retf
stos
pop
popf
cmp
inc
popf
dec
rol
dec
pop
xor
add
and
sbb
icebp
and
jmp
mov
jp
mov
jno
pop
mov
mov
or
mov
mov
push
test
and
sub
fcomi
ret
push
adc
adc
mov
jne
jle
mov
test
and
sbb
mov
pop
jg
push
test
xor
xchg
(bad)
ja
or
dec
aad
xchg
mov
inc
push
push
sar
ins
mov
or
mov
push
pop
ret
imul
or
xchg
pop
dec
out
or
sub
ja
lahf
into
enter
push
mov
cmps
mov
ins
xlat
adc
sbb
adc
cmp
jl
aaa
inc
(bad)
cmp
push
dec
pop
cmp
dec
inc
sbb
push
sub
repz
pop
mov
xor
popa
and
dec
sahf
pop
gs
fnsave
dec
cmp
xchg
movs
and
pop
sbb
sub
scas
adc
mov
pop
or
jae
push
imul
jbe
cli
push
sbb
pop
(bad)
mov
pushf
dec
adc
jne
inc
rcl
dec
push
push
mov
pop
jo
int
mov
dec
add
xchg
push
add
sbb
jl
xor
xchg
test
xchg
out
mov
div
add
call
push
mov
fmul
mov
xchg
jo
pop
pop
jecxz
xchg
cwde
(bad)
mov
jge
sbb
xlat
in
lock
aam
mul
jp
movs
stos
scas
dec
daa
xchg
and
ins
(bad)
cmc
xchg
out
out
std
cld
sti
cmc
jle
mov
cld
fsubr
movs
(bad)
cld
mov
jnp
mov
mov
sbb
mov
push
sub
jae
call
out
mov
adc
cmp
ds
mov
mov
js
retf
cs
aas
add
out
outs
aas
push
push
or
mov
ss
cmp
shl
cld
mov
arpl
repz
repnz
dec
jb
shr
push
xlat
xor
mov
out
mov
cmp
sbb
sbb
adc
dec
movs
pop
shr
aaa
fmul
shl
test
cs
xlat
nop
push
dec
fcomp
inc
push
(bad)
in
mov
push
scas
lds
lods
daa
lea
lock
dec
jmp
ins
dec
add
sbb
shr
pushf
inc
aas
sub
pop
cmp
pushf
or
stos
inc
xor
out
fwait
lods
je
and
popf
pop
movs
or
fistp
and
in
push
add
call
dec
hlt
cmp
cmps
out
or
adc
sub
dec
sub
dec
in
in
xor
pop
mov
popf
lock
dec
movs
mov
mov
xstore-rng
cmps
sub
or
and
push
cs
push
fldenv
in
inc
in
arpl
nop
sub
les
mov
xchg
fwait
stc
and
push
fwait
gs
pusha
into
mov
jmp
adc
xchg
enter
mov
push
aas
mov
xor
push
dec
sub
sbb
fs
test
pop
fisubr
xor
inc
loopne
jl
push
sbb
jmp
es
std
clc
inc
pop
ins
int3
les
add
sbb
push
and
into
and
fstp
call
mov
das
mov
sub
fld
ja
push
add
(bad)
or
jp
jmp
push
enter
les
adc
xchg
pop
dec
loopne
sar
mov
xor
bnd
sbb
push
mov
xchg
xchg
push
xchg
test
cmp
add
arpl
in
hlt
adc
cmp
xchg
inc
push
mov
sub
test
fdivp
and
retf
not
inc
dec
(bad)
sub
pop
daa
dec
fwait
out
adc
sub
add
sahf
iret
inc
jmp
ds
lock
das
jg
or
data16
ins
dec
push
xor
push
cld
inc
inc
jp
aam
sbb
xor
in
es
cmc
pop
scas
sbb
fst
mov
stc
std
in
pop
ror
add
inc
inc
xchg
scas
and
scas
jl
mov
xchg
fild
cmp
(bad)
push
lods
lods
push
(bad)
mov
lods
inc
(bad)
out
pop
cwde
pop
xchg
cmps
neg
in
lods
das
mov
lahf
das
retf
jne
and
repnz
fimul
cmc
fst
nop
test
dec
push
sub
inc
cmps
pop
call
ss
(bad)
mov
and
ficom
cwde
push
jbe
xor
test
xor
imul
pushf
xchg
or
ss
dec
push
jp
pop
push
jmp
mov
imul
xchg
adc
cmp
shr
mov
(bad)
cmp
pop
(bad)
adc
jg
cdq
cmps
pop
repnz
not
arpl
jno
cmps
test
add
cli
jnp
cmp
jle
jae
or
xor
clc
pop
mov
ds
mov
sbb
test
sbb
xchg
mov
mov
scas
(bad)
in
mov
push
jg
popf
jnp
addr16
xchg
xchg
or
sbb
sahf
add
out
adc
dec
mov
mov
or
repz
lods
mov
cld
pushf
cmp
cwde
inc
mov
sub
hlt
mov
lods
stc
ins
jno
cld
sub
pop
pop
jne
add
pop
out
cmps
push
movs
std
in
loop
jge
fsubr
sbb
sub
rol
inc
icebp
mov
mov
or
(bad)
xor
fcom
xchg
leave
in
stc
stc
sbb
clc
inc
cwde
movs
inc
and
jg
sahf
xor
mov
xchg
ins
push
loopne
pusha
mov
or
sub
out
dec
add
in
ja
mov
test
jecxz
repnz
mov
pushf
aaa
mov
js
icebp
xor
into
mov
in
sbb
cld
cli
jle
mov
mov
pop
jns
es
mov
test
rol
dec
inc
push
in
ret
xchg
retf
add
scas
adc
add
test
jbe
inc
sbb
cmps
mov
(bad)
fistp
xchg
gs
ror
mov
or
mov
dec
mul
sti
lods
loopne
mov
ret
pop
dec
(bad)
out
sub
jns
pusha
sbb
pop
cmp
jae
xchg
cs
inc
mov
mov
test
in
jle
mov
test
and
pop
es
sub
or
pop
ret
jmp
push
jmp
(bad)
js
scas
inc
sbb
xor
pop
dec
outs
test
mov
mov
data16
pop
fdivr
xor
xchg
jb
call
mov
aas
test
int3
jbe
ins
fdivr
cmp
sbb
xchg
leave
xor
jb
sbb
mov
ficomp
dec
sbb
sahf
sub
xchg
adc
int3
fucomip
rcr
mov
retf
push
mov
gs
mov
loopne
fcmovnb
dec
and
xchg
mov
cli
jl
arpl
inc
loope
ret
ins
popa
fwait
lock
push
std
sbb
dec
xchg
lods
cmp
test
ins
jg
inc
mov
mov
imul
xor
mov
out
aaa
in
les
add
daa
cmp
xor
xor
mov
mov
push
aad
inc
jmp
mov
sub
out
inc
inc
xchg
inc
test
ss
and
push
cwde
xchg
sti
stos
cmp
xor
adc
pusha
xchg
mov
adc
mov
sub
mov
add
repnz
or
xor
inc
(bad)
leave
clc
mov
stc
adc
outs
jl
mov
cli
ins
dec
(bad)
sub
xor
xchg
das
xchg
fidiv
rol
adc
test
ins
pop
mov
nop
clc
mov
int3
mov
js
dec
mov
ja
and
gs
repz
dec
adc
sub
sbb
cmps
aaa
lock
dec
loop
fistp
ja
std
or
cmp
mov
xor
pop
dec
hlt
in
sbb
int3
lock
fistp
pusha
out
imul
add
xlat
pop
mov
rcl
ror
xor
or
arpl
cwde
push
pop
(bad)
cli
adc
and
xlat
nop
fist
call
xlat
adc
mov
in
add
enter
mov
add
jp
push
adc
outs
xchg
repnz
ret
mov
out
(bad)
xchg
jo
ja
mov
test
outs
inc
sub
fdiv
mov
ror
xchg
cmps
aaa
imul
push
stos
movs
repz
bound
ins
int3
out
push
movs
loop
xchg
or
loope
icebp
cwde
adc
test
pop
adc
pop
add
in
scas
mov
lgs
lods
mov
add
imul
push
rol
xchg
(bad)
fisub
mov
inc
rcl
iret
(bad)
sar
clc
pop
xchg
mov
xor
jbe
mov
cmps
push
xor
out
ins
add
loop
aad
rol
adc
push
dec
jae
data16
loope
xor
mov
or
out
retf
sahf
(bad)
cmp
mov
jbe
push
call
jns
test
cld
pop
iret
adc
mov
push
gs
adc
mov
pushf
pop
mov
mov
out
outs
call
das
test
addr16
mov
xor
adc
mov
or
movlps
(bad)
test
into
div
out
sbb
pop
dec
and
adc
mov
loope
mov
pop
adc
mov
mov
mov
fnstcw
or
jg
retf
(bad)
mov
inc
pop
and
jmp
rcr
out
cmps
neg
rsqrtps
mov
dec
arpl
and
dec
add
fldenv
pop
mov
xchg
jbe
sbb
movs
call
out
xchg
or
mov
shl
sbb
pop
outs
push
ins
xchg
arpl
fs
scas
cmp
cmp
stc
imul
jecxz
push
fcmovbe
jb
inc
call
xor
mov
sbb
jne
push
es
loope
add
jae
int
push
shl
out
sbb
push
mov
xchg
aad
mov
(bad)
sar
test
out
xor
les
jg
mov
pop
in
cmp
cmovne
jmp
mov
jg
inc
test
push
daa
repz
mov
xchg
or
(bad)
ja
je
repz
xchg
adc
dec
stos
loop
jge
in
push
mov
fdivr
mov
test
xchg
jmp
mov
pop
fldcw
inc
adc
inc
xlat
adc
xchg
and
pop
sbb
or
ins
sub
enter
or
mov
pop
movs
push
jae
inc
or
movs
add
lock
repnz
jae
movs
retf
mov
enter
or
lock
out
das
sbb
inc
rol
jbe
sahf
mov
retf
add
imul
sbb
mov
fbld
leave
pop
pop
out
xchg
xchg
(bad)
not
(bad)
pop
pop
lock
sub
popa
iret
jbe
retf
ja
out
xor
adc
jge
xor
dec
sub
jle
dec
inc
cmp
push
or
xor
and
cmps
sub
sbb
and
add
jg
out
in
dec
outs
push
pop
push
(bad)
outs
test
or
mov
xchg
cmp
(bad)
mov
outs
dec
push
jmp
mov
inc
retf
cmps
cld
cmps
jg
test
popa
xchg
xor
in
jae
or
jmp
or
pop
mov
adc
mov
xchg
pop
cmp
adc
sub
mov
or
imul
pop
loop
add
gs
shr
pop
push
std
loope
pop
cmp
fs
pop
pop
adc
or
xchg
jne
jb
in
sbb
outs
xor
mov
push
movs
mov
out
nop
cmps
adc
ss
aaa
mov
dec
mov
mov
and
mov
xor
add
jg
push
push
arpl
xchg
push
mov
add
cmp
pop
pop
push
xor
sub
sbb
sub
sti
add
lahf
dec
(bad)
lds
cmp
jbe
fld
in
push
cwde
sub
aad
mov
xor
stc
cdq
pop
aas
rcr
adc
dec
jle
sub
cmp
pop
push
rcr
or
sbb
or
xor
sub
jae
lods
jne
pop
pop
xchg
lea
push
jg
mov
mov
test
push
jl
xchg
addr16
add
(bad)
aaa
cmps
int
scas
jbe
jno
fldenv
pusha
call
jns
adc
or
test
out
add
cmps
cmp
pop
in
outs
and
jg
jbe
mov
shl
into
in
adc
push
mov
mov
mov
inc
mov
pop
popf
clc
push
lds
test
sahf
shl
xor
jecxz
mov
pop
adc
pop
ret
push
loop
and
out
aam
cmp
mov
cs
inc
mov
test
push
xchg
jl
push
inc
cmp
dec
ss
loopne
push
scas
or
lahf
xchg
mov
inc
ror
int
push
add
test
les
sub
adc
mov
xchg
adc
call
repz
sti
xchg
and
inc
test
aaa
fs
rcl
add
dec
mov
sar
das
sar
push
sub
inc
dec
enter
xor
push
adc
ret
in
popa
clc
aam
mov
hlt
je
mov
and
loopne
stos
out
dec
or
jecxz
sub
iret
jns
mov
push
pusha
mov
inc
das
les
and
or
sub
nop
xor
jno
test
addr16
cmp
out
inc
cmp
outs
pop
cmp
cwde
add
or
mov
xlat
movs
xchg
seto
push
in
and
(bad)
lods
sub
xchg
pop
xchg
mov
arpl
cmp
les
mov
jle
or
jp
ret
cli
sub
xor
iret
fisttp
xor
inc
and
push
jnp
mov
pop
mov
xchg
and
dec
popf
xchg
out
mov
sbb
repnz
(bad)
sbb
mov
sub
sub
scas
pop
scas
mov
xor
call
sbb
adc
push
in
jle
stos
mov
or
scas
shr
adc
jl
inc
fisubr
daa
adc
fwait
lods
jmp
loopne
popa
out
iret
dec
adc
pop
ret
add
xor
scas
in
push
jecxz
sub
in
fld
lods
dec
(bad)
push
aas
xchg
xchg
fst
or
or
cld
retf
sub
sbb
mov
rcr
ret
sub
retf
cmp
pop
push
cwde
and
into
mov
mov
pop
adc
call
in
retf
scas
sbb
and
push
in
stos
shr
pop
pop
rcr
cld
aam
call
test
hlt
(bad)
dec
jp
inc
aam
in
leave
or
dec
jge
addr16
inc
pop
mov
and
test
test
fcmovu
mov
pop
push
push
fsubr
and
jmp
push
lahf
dec
or
aad
retf
add
call
xor
jnp
dec
cmp
jo
pop
sbb
jle
add
shl
push
jbe
mov
sub
stos
mov
and
mov
cld
ss
stos
in
jl
pop
sbb
dec
sti
mov
fs
cli
mov
sbb
sbb
aaa
mov
in
sbb
xor
jb
push
cmp
mov
ss
and
and
imul
sub
bound
push
sbb
neg
stc
jbe
pushf
lock
div
mov
pop
pop
or
inc
and
push
mov
jg
outs
or
dec
jae
cmp
popa
sub
dec
data16
std
mov
sub
into
and
cwde
fld
ror
add
cmp
or
cmp
cmps
mov
repnz
mov
push
pop
sbb
ins
xor
fdiv
repnz
mov
dec
or
push
push
dec
lock
cwde
fmul
lds
mov
hlt
test
jle
dec
cmp
jecxz
les
(bad)
movs
mov
imul
aam
repz
mov
lds
mov
lock
sahf
repz
aam
aad
aad
repz
lock
inc
add
sahf
sar
xor
arpl
push
sub
inc
jmp
rol
cmc
nop
retf
and
sbb
ds
or
jbe
add
mov
repnz
cmp
and
push
mov
rcr
dec
add
cmp
ss
arpl
imul
loope
cli
scas
in
mov
mov
sub
sub
outs
loopne
clc
mov
ins
cs
or
sbb
cmp
jns
dec
jmp
shr
pop
aad
aam
jb
pop
aaa
es
xchg
push
aaa
jno
pop
ss
int
imul
add
popa
jnp
push
sbb
push
in
popf
fiadd
gs
pop
cmp
sbb
fs
ins
aas
jl
fstp
dec
cmp
push
adc
std
mov
mov
push
pop
pop
fwait
repnz
jge
mov
sahf
int3
cmp
adc
jnp
push
pop
inc
add
bound
push
mov
iret
mov
call
or
xchg
pop
in
jmp
scas
in
popf
retf
mov
mov
pop
or
je
push
jecxz
hlt
xchg
fstp
jo
loopne
loope
iret
lods
jns
inc
or
fadd
push
add
rcl
test
add
push
sub
aaa
outs
sub
add
push
test
sub
sbb
ins
das
jge
xchg
fidiv
inc
add
imul
jnp
push
jge
data16
adc
mov
fs
inc
or
push
xor
sub
jo
div
loopne
push
cmp
lods
aad
aam
mov
ds
adc
cmp
out
mov
test
mov
pusha
out
stc
xchg
xlat
shr
add
and
sahf
ret
nop
rcl
mov
fisubr
pop
push
pop
pop
xor
mov
sub
mov
scas
mov
add
inc
or
je
mov
cmovs
popf
scas
test
movs
(bad)
movs
idiv
mov
jecxz
std
mov
sti
mov
cmps
int3
mov
xchg
lods
out
ret
movs
mov
imul
push
push
inc
out
mov
xchg
xchg
int
cld
mov
out
jns
dec
pop
jb
fmul
mov
stc
stos
jmp
ins
add
aas
push
sub
jnp
sbb
dec
add
jbe
jo
or
adc
or
fimul
mov
push
xchg
ret
inc
and
das
pop
loope
retf
enter
in
scas
nop
scas
(bad)
mov
xchg
repz
nop
fcmove
add
div
jmp
in
lds
je
fild
inc
pop
xor
inc
add
arpl
inc
pop
or
inc
and
add
div
ror
rcl
or
pop
add
or
push
adc
push
cmp
and
and
repnz
sbb
dec
or
(bad)
mov
lds
sub
push
and
pop
pop
aaa
outs
sub
cmp
jb
push
jmp
jb
inc
or
jns
pop
push
pop
pop
pop
dec
ret
xchg
xchg
pop
push
inc
push
pop
cmp
pop
(bad)
xchg
enter
aad
into
mov
push
cmp
rol
mov
xchg
jmp
cmc
xchg
xlat
ret
imul
ins
cmp
or
or
imul
cld
xchg
iret
mov
mov
cmp
out
mov
test
mov
cmovs
scas
cmps
loope
aad
jo
inc
push
or
dec
or
push
push
push
mov
mov
test
mov
and
jae
jno
sub
into
stos
clc
mov
retf
sub
lahf
sar
adc
loope
loopne
call
aam
jmp
les
div
push
jmp
xchg
(bad)
add
push
mov
jmp
out
and
outs
lahf
mov
cwde
sub
das
push
adc
jo
inc
sbb
push
xor
sub
pop
sbb
dec
or
in
ret
bound
adc
pop
retf
test
add
push
fbstp
jmp
cld
mov
clc
popa
and
mov
lahf
ins
cmovo
jo
loop
retf
mov
scas
jmp
xor
and
jl
mov
repz
cmp
bound
and
sub
fdiv
mov
push
dec
mov
jbe
imul
add
adc
clc
add
rol
ror
stc
fdiv
in
mov
ret
into
push
ins
popw
dec
mov
icebp
iret
shl
push
sub
xor
ins
cdq
sub
std
adc
mov
sahf
addr16
push
jae
test
or
xor
cmc
fs
stos
push
sbb
pop
pushf
jne
lds
fs
pop
out
out
popf
cmp
or
sbb
cmp
sbb
in
sub
test
test
pop
lock
repnz
xchg
fcmovbe
scas
pushf
enter
ds
(bad)
mov
adc
ins
aas
sub
out
xchg
test
aad
int
scas
daa
(bad)
(bad)
in
retf
dec
sbb
test
xor
jo
shl
mov
push
push
in
outs
mov
neg
jo
ror
(bad)
push
push
sub
lds
ret
add
cmp
loope
mov
jbe
cwde
inc
mov
pop
push
emms
cmp
add
idiv
adc
xchg
cli
mov
loopne
cwde
rcr
and
xor
jb
mov
push
xor
mov
pusha
adc
loope
es
dec
(bad)
bnd
data16
cmp
daa
faddp
push
push
test
adc
cmp
cs
enter
loopne
hlt
mov
sbb
jb
test
mov
imul
cmp
jp
stos
push
cmp
aam
aaa
push
pop
icebp
pop
push
cmps
in
pusha
arpl
scas
test
shl
inc
push
movs
repz
ret
and
ja
inc
stos
iret
(bad)
pop
push
jecxz
scas
sbb
sub
add
adc
pop
aam
mov
push
fistp
cmp
mov
inc
(bad)
mov
out
push
int
in
lods
add
ds
or
fnstsw
or
test
bound
adc
lods
ficomp
test
out
ins
pop
mov
mov
pop
dec
rol
adc
mov
sbb
stos
loop
stc
aam
mov
dec
dec
and
cli
dec
dec
cmps
cld
pop
stos
xchg
imul
outs
stos
cmp
fistp
pop
call
dec
xchg
gs
movs
and
clc
xor
inc
or
dec
push
test
pop
test
and
dec
inc
nop
fisttp
sub
and
pop
mov
and
iret
mov
jg
imul
jl
inc
xor
call
in
fiadd
fcmovbe
iret
cmc
jecxz
loop
adc
call
jo
movs
and
int3
xchg
stos
pusha
sub
lds
mov
sbb
scas
call
fs
cmp
out
and
jbe
mov
mov
jl
in
inc
movs
fimul
sbb
push
lea
push
test
test
sahf
jl
scas
dec
or
daa
sti
sbb
fild
sbb
mov
imul
bound
jno
add
in
(bad)
ror
jne
sbb
cmp
jno
test
pop
push
mov
push
mov
movs
or
fs
movs
psrlw
in
ret
mov
xchg
cmp
cmp
jmp
lods
or
lods
out
inc
add
pop
jne
adc
movs
mov
shl
xchg
cmp
sti
scas
ss
xchg
int
mov
fs
sahf
jmp
ror
pop
push
(bad)
cmp
lock
push
out
addr16
mov
cmp
push
jp
pop
add
inc
lods
xor
xchg
pop
xlat
pop
aam
dec
add
in
loopne
lahf
pop
ret
adc
(bad)
jnp
mov
mov
cmp
or
(bad)
aam
sti
aaa
push
pusha
pop
adc
pop
(bad)
fwait
push
inc
aas
cmps
inc
cld
mov
add
retf
es
mov
pop
cmp
icebp
(bad)
cwde
(bad)
fcomi
jno
(bad)
ss
cmp
test
test
ret
cmp
pop
in
cmp
int
stos
dec
int3
push
push
jp
mov
(bad)
dec
jne
stos
jb
fwait
add
adc
mov
and
nop
push
or
repnz
mov
in
xor
jecxz
pushf
xor
fucomp
enter
sbb
fwait
inc
pop
xchg
pusha
es
popa
stos
inc
aaa
dec
js
lea
imul
cmp
add
jle
popf
add
in
jbe
sbb
xor
mov
jmp
movs
jg
mov
stos
push
jge
sahf
into
dec
adc
sbb
jecxz
lods
data16
xchg
xchg
pop
lahf
fidiv
(bad)
rol
not
cmps
psrlw
iret
push
mov
lea
mov
test
adc
add
pop
outs
inc
loopne
mov
mov
ins
sub
jnp
fisttp
fmul
xor
pop
sbb
ret
fs
adc
add
pop
jbe
fsub
jmp
fs
stos
nop
jmp
cmp
fisubr
xlat
pop
push
ficom
dec
sbb
sbb
ds
jmp
xchg
push
iret
bndldx
mov
call
dec
or
retf
imul
xchg
or
lahf
aaa
mov
add
popa
test
out
mov
inc
or
and
lods
lds
je
repnz
stc
lds
xchg
add
push
cdq
pop
lods
stos
ins
imul
mul
push
pop
mov
mov
(bad)
cwde
and
adc
xlat
push
add
pop
mov
lea
pop
(bad)
pop
out
inc
xor
mov
pop
add
mov
mov
rcl
inc
addr16
mov
test
xor
cdq
iret
movs
mul
mov
std
mov
sub
cli
jmp
adc
jae
retf
jmp
loop
lods
xchg
cmps
cmc
in
xor
mov
adc
dec
enter
mov
pop
xchg
imul
and
jne
or
xor
je
mov
mov
shl
retf
and
dec
push
push
add
shl
xor
(bad)
int3
jl
shl
shl
cmp
jl
push
loope
push
mov
xchg
push
inc
and
ds
es
pop
(bad)
movs
out
sbb
pushw
push
adc
test
pop
adc
and
lahf
nop
inc
enter
inc
out
shl
cmp
nop
mov
ret
add
cmps
out
jg
sbb
or
les
pop
xor
ja
inc
mov
dec
mov
das
mov
out
xlat
cdq
push
xlat
pop
or
dec
rol
xchg
lds
inc
imul
fst
sahf
sub
push
xchg
adc
sbb
jbe
and
jle
dec
mov
push
adc
pop
and
mov
shl
jmp
or
std
dec
xor
cmps
cmp
push
mov
mov
xor
and
or
push
pusha
dec
(bad)
(bad)
and
inc
test
push
cmp
rcl
mov
ins
cwde
popa
ret
push
pop
dec
xor
lods
mov
rol
and
jnp
ins
sbb
(bad)
inc
xlat
ins
pop
lods
push
inc
lds
addr16
jle
daa
and
mov
jmp
xlat
mov
sbb
mov
mov
fadd
jnp
stos
cmp
inc
inc
xor
inc
ds
shl
dec
cmp
mov
test
or
or
(bad)
sar
imul
cmc
fwait
leave
jmp
fist
pop
call
cmp
dec
dec
shl
adc
pop
adc
jge
stos
je
push
jge
fwait
int3
call
or
or
jmp
inc
mov
xchg
loop
lock
jmp
mov
pop
mov
inc
xchg
mov
arpl
mov
mov
xchg
sub
sbb
enter
ss
nop
push
inc
add
gs
bound
dec
mov
fdivr
push
mov
dec
movups
jp
jge
sbb
out
lods
test
xor
aam
add
stos
inc
scas
retf
iret
jnp
test
mov
xchg
pop
aaa
jnp
in
shr
xchg
mov
(bad)
popa
cmps
das
movs
push
cmp
adc
dec
jnp
or
jne
mov
fld
mov
retf
push
shl
jmp
push
jle
fwait
jge
jg
push
adc
in
push
push
lock
cmps
test
dec
inc
adc
xchg
jmp
rcl
mov
stc
dec
pusha
sub
popf
jge
xchg
stos
mov
mov
mov
nop
or
jmp
push
cmp
add
lock
cmp
sbb
mov
outs
mov
add
movs
call
out
(bad)
adc
xchg
inc
pop
jns
mov
adc
and
test
mov
loopne
pop
sbb
mov
or
fisttp
sti
and
cmp
sub
pop
dec
inc
mov
xchg
cmps
cmp
push
push
or
call
out
pop
xlat
xchg
lds
sbb
mov
xor
das
push
mov
push
pop
mov
mov
push
jne
and
cdq
or
xchg
scas
push
ret
popf
(bad)
pop
mov
mov
push
fs
js
mov
imul
mov
push
lods
imul
fs
cmp
add
dec
test
sub
fmul
clc
data16
push
jae
dec
add
xor
sub
xchg
adc
pop
cs
xchg
push
mov
mov
cli
cmp
cld
pop
jno
aam
ds
(bad)
sub
jae
jmp
outs
data16
cmp
jno
jle
dec
repz
sub
cld
jnp
movs
jge
aaa
jb
jl
xchg
iret
cmp
fs
add
loopne
shl
fcom
mov
inc
lea
sbb
cli
dec
neg
pop
sti
cdq
(bad)
jmp
xchg
rol
cmp
pop
fbld
pop
movs
jne
sti
cwde
or
push
movs
pop
xchg
inc
test
pop
cmp
mov
push
scas
je
test
inc
int3
lods
test
bound
cmp
nop
dec
ja
jecxz
jp
jp
xor
push
sbb
mov
ret
mov
arpl
hlt
imul
std
sbb
sar
xchg
pushf
jp
es
xchg
fisttp
jns
call
mov
sub
imul
mov
stos
shr
jp
jnp
mov
sbb
retf
data16
xor
pushf
sbb
repnz
mov
sbb
push
mov
arpl
clc
imul
in
add
loopne
sub
scas
fmul
jo
adc
fist
mov
shl
shr
hlt
xchg
add
lods
fisttp
jno
loope
je
or
push
mov
pop
cdq
mov
pop
lahf
repnz
repnz
jo
aaa
nop
movs
cmp
popa
fisubr
mov
shl
push
ins
sub
js
mov
mov
jge
jno
cmp
test
xchg
add
lods
sbb
xor
mov
out
sar
push
sahf
daa
cmp
ds
add
adc
stos
sti
mov
mov
jnp
and
fidivr
ss
add
cmp
jmp
push
es
aad
mov
retfw
dec
(bad)
xor
int
imul
inc
(bad)
test
lahf
aam
xor
sub
and
mov
mov
int
cmps
lds
jo
adc
(bad)
sti
or
mov
js
jp
add
mov
fadd
stos
adc
aas
inc
xchg
cld
(bad)
(bad)
rcl
sub
data16
iret
sbb
int
push
addr16
xchg
inc
jne
dec
push
mov
jle
(bad)
int
inc
pop
mov
ss
xor
out
in
in
dec
pop
bswap
jo
mov
cmp
mov
push
jp
mov
out
out
outs
mov
aaa
pop
aam
cmp
cwde
fld
xchg
jmp
loope
sbb
loope
mov
stc
rol
sub
jmp
mov
mov
pop
or
sbb
mov
mov
fimul
retf
loop
pushf
rol
mov
outs
pushf
int
addr16
sbb
dec
loopne
pop
and
sub
out
icebp
fadd
rcr
add
lock
mov
fsub
(bad)
in
mov
rcl
shr
jle
sti
lds
dec
fist
pop
sbb
pop
xchg
mov
sub
mov
push
je
lahf
jo
and
retf
cdq
aaa
int
out
sub
lea
push
push
sbb
fadd
shl
aas
xchg
lea
or
fst
or
pop
and
jecxz
and
movs
fdivr
loop
mov
(bad)
sbb
in
xchg
mov
mov
daa
mov
adc
xchg
mov
and
mov
push
lahf
test
or
mov
dec
pop
movs
pop
cli
sbb
pop
cmps
or
mov
adc
mov
loopne
lea
sbb
cmp
ss
arpl
sbb
xor
ds
aas
outs
jo
retf
rcl
and
push
outs
jmp
cmc
clc
sub
fs
pop
pop
lea
inc
sub
retf
mov
stos
hlt
xchg
jb
adc
ret
les
cmp
cmp
test
mov
loop
add
arpl
and
ins
cli
inc
xor
push
pop
mov
mov
push
mov
inc
adc
sbb
inc
rol
in
pop
pop
mov
nop
mov
push
sbb
xor
mov
jb
cmps
aad
jnp
inc
cmp
in
pushf
mul
xchg
inc
ret
cmc
push
add
cmp
jge
xor
lods
cmps
les
cmp
sbb
div
aaa
and
mov
xchg
aas
sti
adc
adc
pop
xchg
dec
push
jmp
mov
arpl
or
addr16
jo
in
pop
sahf
push
test
(bad)
jl
test
test
dec
and
sar
std
leave
out
inc
popa
push
mov
pushf
mov
pop
cmps
jne
add
mov
xor
mov
xchg
mov
repz
dec
sbb
mov
adc
pop
fld
in
sub
dec
loope
sbb
mov
xchg
mov
in
or
pushf
xchg
and
adc
out
pop
lods
inc
icebp
pop
pop
scas
into
push
push
mov
xor
jne
xchg
lock
cmps
xchg
xchg
cmps
xchg
push
cmps
shl
in
shr
out
cmp
loop
add
xchg
push
aas
pop
mov
cmp
data16
inc
or
pop
loope
mov
cmp
loop
add
mov
cmps
fwait
mov
mov
out
cli
aaa
pop
in
mov
mov
and
push
scas
push
xchg
cmp
xchg
(bad)
out
cli
jno
xor
jle
sti
adc
scas
xchg
mov
xchg
arpl
jne
(bad)
push
leave
aaa
dec
pop
retf
hlt
cmps
adc
aaa
cmp
mov
shr
cmp
and
pop
ror
in
je
into
out
xchg
or
scas
retf
mov
mov
push
lods
dec
(bad)
jge
fistp
ins
inc
add
int
xchg
xor
cmps
push
push
xor
jmp
fmul
daa
pop
cdq
iret
push
xchg
nop
arpl
mov
test
(bad)
pop
les
mov
test
jbe
mov
cmp
imul
xor
rcl
retf
mov
pop
push
pop
pop
jnp
and
push
std
jb
ud1
sbb
ror
push
loopne
fisttp
sub
adc
lahf
in
add
dec
sub
and
xchg
and
jns
mov
loop
mov
test
mov
add
mov
test
outs
ins
stos
add
add
add
pop
adc
jbe
xor
push
sub
inc
sbb
and
and
push
jmp
xor
add
loopne
leave
push
jbe
iret
icebp
inc
lock
or
xlat
inc
push
mov
call
xchg
xchg
mov
adc
shl
or
repnz
dec
jp
lods
xlat
dec
jle
jmp
adc
(bad)
cmp
and
pop
add
add
cmp
fadd
dec
int
pop
retf
mov
or
(bad)
(bad)
in
mul
inc
or
mov
cmp
pushf
mov
ss
imul
arpl
dec
mov
jp
mov
sahf
(bad)
out
cwde
(bad)
sub
outs
and
repnz
std
loop
dec
retf
mov
cmps
jnp
sbb
xchg
xchg
(bad)
cmp
pop
jle
pop
dec
mov
push
mov
push
mov
mov
js
fistp
push
fcmovnbe
cmp
mov
pop
jns
daa
call
nop
cdq
cmp
test
jbe
ja
mov
es
std
xchg
mov
stos
ror
push
cmp
cmps
pop
js
adc
mov
test
sbb
and
dec
gs
jb
sti
stos
mov
jmp
mul
dec
dec
push
pop
jne
fstp
fisttp
pop
push
jbe
psubd
jns
ror
cmps
mov
and
xor
shl
pop
rcr
call
mov
jmp
push
jmp
ins
mov
loopne
rcr
push
retf
jmp
adc
sahf
push
mov
xor
pop
sub
sahf
fwait
shr
fistp
imul
jmp
sub
mov
imul
push
in
add
and
and
push
test
push
aam
(bad)
push
mov
int3
xchg
xchg
ss
nop
adc
mov
aam
test
cs
or
or
sbb
loop
mov
push
sbb
xor
sub
scas
shl
inc
in
call
out
and
data16
sbb
icebp
and
mov
sub
mov
or
gs
cmp
cmp
jecxz
xchg
cdq
jno
cwde
inc
ror
retf
loop
mov
mov
dec
stos
imul
sahf
sahf
lds
(bad)
bound
jge
pop
jmp
mov
pop
retf
xor
movs
movs
mov
aaa
mov
pop
cli
jl
inc
adc
dec
jg
adc
in
mov
aad
adc
jp
pop
inc
dec
xor
jl
imul
retf
test
ins
loop
add
stos
pop
jge
not
mov
jp
ret
cld
call
cmps
jae
not
adc
mov
js
xchg
pop
jo
jge
popf
scas
mov
jmp
ins
nop
xor
push
dec
lahf
mov
in
cmp
sub
in
les
mov
push
std
fwait
enter
sbb
pop
std
in
ja
inc
icebp
inc
dec
xor
jne
or
cmc
sbb
imul
ror
outs
ret
sbb
ss
cli
cmc
sbb
jl
xchg
mov
lock
je
pop
jb
dec
into
and
xchg
dec
test
pop
leave
nop
jmp
outs
loopne
mov
es
loop
mov
mov
jmp
pop
xor
sub
cmp
sub
loopne
mov
sbb
repz
mov
data16
and
call
jb
push
call
arpl
test
add
push
mov
mov
out
xlat
inc
shl
xchg
pop
std
jne
adc
dec
jne
and
pop
pop
loope
mov
ror
sbb
dec
dec
sti
and
scas
hlt
test
inc
xchg
push
push
cld
es
aam
fild
out
sub
dec
cmp
repz
pop
inc
inc
dec
rcl
push
test
and
shr
xchg
ret
out
js
fist
(bad)
sub
xor
aaa
jbe
jae
pop
bound
and
aad
add
pusha
inc
shl
dec
ret
mov
pop
mov
sub
scas
pushf
ret
ja
sub
clc
aas
xchg
cmp
pop
ins
and
loope
mov
jecxz
sbb
pop
push
push
movs
rol
pop
and
dec
mov
mov
dec
sub
sar
or
popf
jno
adc
out
(bad)
adc
xchg
shr
mov
adc
shl
or
lahf
(bad)
cmc
not
clc
loop
cs
pop
sub
add
push
es
inc
je
ss
or
pop
call
lahf
jmp
pop
xchg
scas
out
mov
in
fwait
lahf
(bad)
retf
loope
les
fmul
mov
cwde
jp
push
lock
or
sub
(bad)
mov
scas
sar
push
sub
sbb
jecxz
xchg
(bad)
jmp
fwait
mov
xor
mov
push
and
or
sub
add
fwait
push
push
lods
loop
push
mov
ja
fdiv
jmp
ja
nop
fcmovnbe
ja
cmps
into
push
inc
sub
neg
jge
mov
cwde
test
mov
cmps
cmp
pop
dec
mov
add
outs
adc
pusha
fistp
scas
loop
mov
sub
dec
add
(bad)
stc
mov
(bad)
in
pop
fs
sti
bound
cli
xchg
aaa
or
sub
jmp
jno
sar
aas
dec
and
xlat
inc
ret
sti
out
cmp
enter
es
dec
call
dec
push
cmp
xchg
ror
ja
ss
pop
pushf
xlat
pop
add
xor
es
lods
hlt
xchg
cmp
shl
pusha
loope
mov
sbb
test
jno
addr16
add
jno
test
and
out
mov
stos
or
mov
mov
clc
addr16
mov
sub
dec
jae
fs
test
push
(bad)
mov
xchg
mov
(bad)
xchg
test
mov
test
ficomp
(bad)
cs
and
or
ja
push
add
jo
dec
pusha
(bad)
adc
jne
rcl
call
shr
sub
ror
pop
fucomip
jmp
pop
std
sbb
(bad)
aaa
in
stc
inc
add
and
lods
adc
xor
push
enter
pop
or
out
jnp
mov
jnp
push
xchg
sub
sahf
jmp
add
test
jo
inc
into
shr
les
add
(bad)
push
xchg
call
pop
je
stos
pop
(bad)
and
bound
add
gs
sbb
fist
push
mov
je
cmp
push
sbb
xchg
sub
adc
xchg
rcr
inc
mov
sbb
mov
jmp
(bad)
pop
xchg
push
pop
cmc
ins
ror
jg
in
int
cmps
arpl
xor
out
stc
in
sub
scas
call
dec
dec
das
movs
pop
(bad)
fadd
jb
push
movs
cmps
loope
(bad)
lock
ins
imul
iret
mov
gs
pop
enter
mov
les
fwait
repz
inc
and
(bad)
pop
and
addr16
pop
sbb
and
int3
call
xor
and
mov
ss
pop
push
into
es
(bad)
ins
xchg
sub
xlat
jo
je
inc
push
in
lock
shr
int3
inc
push
add
cwde
add
sbb
sahf
fcmovbe
or
out
call
cmp
sbb
leave
pop
mov
sbb
adc
sar
iret
cdq
in
pop
std
sti
inc
pop
mov
dec
into
loope
popa
retf
sbb
aad
or
loop
add
push
sbb
es
inc
xchg
push
ds
cld
jae
aas
js
mov
(bad)
xchg
push
xlat
mov
aaa
pusha
dec
and
sub
cmp
inc
lahf
dec
and
xchg
jo
sub
mov
mov
mov
push
sahf
repnz
inc
xor
fcomp
scas
fs
and
inc
dec
push
dec
aaa
inc
js
inc
cli
test
rol
ss
imul
jl
in
test
pop
cld
mov
adc
pop
daa
adc
mov
fsub
int3
dec
add
pop
push
sahf
test
das
pop
stos
pop
lods
or
cli
fld
and
jecxz
xor
mov
sbb
add
xchg
das
lahf
dec
cmp
push
lds
retf
cmp
pop
cmp
mov
pop
shr
push
sub
inc
rcl
add
and
shr
scas
sub
aam
jb
push
ret
xlat
push
ret
mov
cwde
add
imul
push
mov
push
inc
jecxz
and
push
push
mov
jmp
dec
aaa
mov
addr16
data16
mov
jns
mov
mov
cmp
sti
mov
in
movs
pop
jb
sub
push
cmc
rcr
add
mov
hlt
mov
add
cwde
inc
bound
push
push
jle
cmps
mov
imul
cmp
dec
mov
jl
cmps
fdivr
fbstp
jo
inc
outs
mov
int3
mov
(bad)
sbb
loop
shl
stos
add
pop
div
ins
int
and
cmp
sbb
inc
jg
ins
xor
hlt
jl
ret
mov
rol
mov
sub
cmp
rep
es
rcl
cld
mov
jmp
dec
pop
cmp
dec
cld
cdq
js
jle
mov
shl
mul
jmp
outs
retf
pop
fwait
les
sbb
dec
ficomp
hlt
mov
pusha
push
jbe
out
lods
mov
cwde
dec
dec
cmps
shr
loop
shr
cmp
mov
pushf
dec
mov
in
(bad)
push
adc
and
ret
loope
loop
jne
xchg
nop
mov
daa
xor
test
ds
scas
xor
lods
fsub
repnz
mov
in
dec
xor
stos
sbb
xchg
adc
jb
adc
cmp
add
cwde
cmp
fptan
sub
es
hlt
and
data16
and
mov
push
jnp
sub
dec
inc
adc
int3
pop
loope
sub
mov
add
xchg
clc
inc
sub
icebp
aaa
xor
add
int3
jb
and
sub
sub
shl
or
add
xor
lods
sub
fiadd
mov
daa
pop
and
and
mov
xchg
pop
movs
call
imul
inc
inc
adc
push
fdivr
les
dec
cs
xlat
dec
mov
cli
lock
xchg
dec
push
in
iret
fcmove
daa
mov
(bad)
jle
add
rol
sbb
shr
mov
jo
mov
mov
inc
jmp
nop
shl
sbb
pop
fstp
rcl
inc
dec
ins
(bad)
aas
popa
lock
out
lahf
lods
inc
cmps
aaa
inc
mov
loopne
cld
dec
enter
test
mov
inc
nop
jmp
aad
lods
mov
jle
gs
xchg
call
test
bound
rol
adc
ret
push
stc
bound
push
inc
out
stos
out
xchg
push
push
push
popa
addr16
es
dec
mov
jno
sbb
add
sahf
ins
pop
sub
jo
cmp
mov
std
pop
inc
out
outs
(bad)
cli
out
out
xchg
or
lods
mov
cmp
out
cmp
mul
fst
sbb
mov
sti
sub
fild
sbb
adc
enter
xchg
cmp
test
fdivr
stos
pop
popa
fxch
imul
pop
shr
test
sahf
outs
mov
shr
outs
rcl
stos
cs
push
lods
inc
dec
sbb
ror
dec
xchg
jg
in
imul
clc
ss
out
loop
sub
jbe
jno
sub
inc
adc
mov
fwait
or
call
push
xchg
push
push
loop
inc
xchg
cmp
mov
pop
out
mov
test
gs
dec
sti
in
mov
cmps
mov
(bad)
icebp
or
adc
ficomp
sbb
outs
(bad)
pop
sub
inc
imul
inc
sti
mov
jecxz
imul
pop
aam
lods
jl
in
jge
cdq
dec
into
aas
data16
out
dec
mov
stos
mov
and
sub
arpl
jge
pop
or
or
or
adc
(bad)
repnz
shr
push
les
xchg
mov
cmp
or
pop
cdq
pop
mov
cmc
int3
je
les
mov
jmp
jecxz
shl
data16
inc
jge
sbb
aas
test
lds
pop
xchg
ins
fwait
xor
test
retf
pushf
inc
mov
sbb
int
or
push
int3
or
mov
ins
pushfw
test
or
push
lock
cmp
push
(bad)
retf
mov
mov
outs
ja
jae
iret
dec
fistp
mov
retf
stc
in
mov
push
mov
in
add
mov
xchg
sete
xchg
pop
jne
xchg
xor
xor
sub
cmp
add
adc
(bad)
(bad)
cmp
sub
retf
aam
pop
sub
push
outs
mov
xchg
ds
sbb
test
or
or
add
popa
sahf
sub
add
in
cld
dec
pop
jb
mov
in
call
out
in
sub
jbe
mov
(bad)
retf
dec
test
aaa
test
push
fwait
xor
movs
lea
out
mov
imul
cmp
dec
inc
test
sbb
jmp
or
xchg
sar
inc
cli
push
ja
sub
fcmovnbe
mov
dec
xor
jp
mov
loop
ins
push
jo
sub
in
sub
test
popf
popa
rcl
dec
mov
sbb
int
retf
cmp
inc
xchg
out
iret
ds
hlt
scas
mov
lock
popf
lock
stos
mov
pop
add
xor
push
pop
xor
add
in
mov
dec
xor
add
es
hlt
test
cmp
and
fidivr
add
rcl
sub
xlat
pop
push
adc
call
xchg
(bad)
vmptrst
jmp
pusha
lea
sar
adc
neg
xor
retf
or
push
sub
inc
lods
movs
or
pushf
aam
popa
sahf
fdivr
leave
push
ja
and
fadd
loopne
cmc
fldcw
add
mov
ss
cld
jp
and
or
jecxz
push
out
pop
xor
stos
sar
shr
ja
fiadd
popf
ret
or
xchg
xchg
ss
cdq
outs
mov
xchg
mov
xchg
aaa
adc
shr
(bad)
aad
sbb
sahf
xor
mov
jae
xchg
dec
or
not
or
push
mov
ins
mov
test
mov
int
es
ficomp
fsubr
mov
ret
loope
fs
cmp
push
retf
add
xchg
test
cmps
ror
dec
(bad)
retf
and
not
scas
(bad)
out
cmps
or
lea
jecxz
mov
enter
jnp
and
aaa
rcr
xchg
repz
(bad)
lock
mov
xchg
out
scas
fidiv
xchg
(bad)
mov
jmp
into
push
mov
pop
sbb
push
inc
push
and
inc
add
stos
inc
test
jbe
mov
dec
stc
scas
push
ins
lods
daa
adc
mov
push
sti
int
or
or
rcr
lea
ins
popf
not
fimul
sub
out
in
(bad)
cmp
das
cmp
inc
jmp
xchg
cmp
xor
lahf
and
push
leave
ret
jle
xchg
sub
stc
in
sub
rcr
lahf
sbb
add
adc
(bad)
int
popa
xor
movs
dec
push
fadd
pop
ret
mov
data16
stos
jge
inc
push
jp
(bad)
fsubrp
adc
inc
xor
dec
repnz
enter
fldenv
(bad)
fnstenv
aam
mov
fwait
xchg
mov
pushf
imul
pop
push
dec
sahf
add
or
clc
sbb
xor
and
and
mov
dec
in
arpl
lods
mov
xor
push
sbb
xor
cwde
leave
fs
cmps
jb
inc
sbb
add
rol
shr
setns
mov
ret
sti
xor
pop
xchg
stos
hlt
int3
cmps
mov
pushf
push
xchg
jg
sub
jecxz
ds
popf
(bad)
push
icebp
test
xchg
clc
icebp
pop
xchg
xor
call
push
xor
mov
dec
std
adc
mov
and
rcl
enter
retf
fs
push
call
pop
stos
cli
adc
xchg
dec
jo
ja
aam
pop
pop
movs
mov
call
dec
adc
push
ss
ds
or
mov
cmp
pop
mov
pop
or
adc
push
sahf
psubb
lahf
xchg
in
xchg
sub
xchg
(bad)
and
repnz
push
fimul
inc
jnp
in
repz
push
out
adc
lea
call
push
mov
add
push
pop
std
in
not
out
inc
jmp
push
pop
jb
cmp
dec
lods
mov
nop
inc
test
sti
sub
xchg
cld
sbb
popa
addr16
add
pop
es
popf
sti
rcr
jbe
addr16
in
or
out
pushf
xor
sbb
pop
pop
inc
icebp
adc
cmc
lods
xchg
dec
not
test
ror
fisub
(bad)
jecxz
loope
test
lea
fsubr
or
and
push
lock
push
jg
jg
sti
mov
jle
ja
or
sub
mov
clc
test
push
adc
int
sbb
xchg
mov
(bad)
(bad)
outs
or
mov
sub
aas
nop
and
dec
clc
fild
mov
xchg
push
hlt
and
mov
fld
inc
mov
hlt
(bad)
scas
mov
test
cmp
fld
loopne
or
xor
mov
xchg
sub
mov
pop
shl
out
out
hlt
inc
arpl
js
sar
push
push
push
out
in
mov
int
retf
das
xlat
and
and
pop
fstp
inc
adc
sub
(bad)
fcmovnu
mov
outs
leave
pop
xchg
mov
mov
cmp
dec
xchg
add
cwde
mov
sbb
xor
dec
push
scas
arpl
xbegin
sbb
add
ds
pop
mov
movs
fistp
outs
popf
cmps
cmps
hlt
outs
mov
sahf
mov
lds
push
out
dec
mov
out
pusha
xchg
adc
sbb
imul
sub
dec
sub
pushf
sub
and
retf
cdq
aad
bound
pop
out
mov
push
jno
mov
add
jb
mov
sub
das
mov
nop
xor
call
inc
mov
cmp
loop
mov
cmps
xchg
int
cmp
enter
cmps
and
jecxz
mov
sub
adc
mov
dec
pop
inc
repz
call
pusha
dec
xchg
xor
ins
push
add
mov
adc
inc
adc
fsub
ins
and
mov
outs
cmps
leave
inc
or
dec
adc
(bad)
leave
dec
es
jns
add
xchg
mov
cmc
xchg
cmp
pop
icebp
scas
push
pop
retf
mov
add
inc
inc
pusha
std
shl
loopne
repnz
int3
pop
popf
push
dec
jmp
jno
and
or
add
ss
inc
aaa
push
xchg
xchg
xchg
mov
or
xor
clc
xchg
cmp
xor
lods
add
mov
push
sub
pop
mov
mov
stc
or
mov
push
sbb
jp
jnp
jg
sahf
push
cs
mov
cs
sub
lahf
jg
gs
ret
jb
mov
jecxz
xor
dec
mov
fcmove
mov
mov
inc
and
mov
add
pop
inc
sbb
pop
rcl
lods
stos
or
or
inc
mov
ret
jge
mov
jge
aas
lds
mov
aam
aas
xor
mov
retf
xor
sbb
jmp
push
xchg
mov
or
sbb
aaa
ins
clc
test
xchg
(bad)
loope
clc
jg
and
xor
mov
and
mov
sub
pop
jae
rol
loope
fcmovbe
js
add
mov
adc
mov
and
dec
fbld
fwait
or
fstp
fidivr
movhlps
or
jg
mov
dec
pop
repz
or
inc
cdq
mov
sbb
jmp
pop
adc
cmp
inc
xchg
dec
gs
int
pop
not
cmp
inc
push
icebp
outs
lods
dec
add
dec
jb
cwde
(bad)
cmp
add
add
shr
sbb
mov
sub
hlt
jle
dec
outs
int
and
lods
movs
call
mov
or
pop
xchg
mov
inc
mov
push
imul
rcr
and
rol
loopne
add
and
and
aad
inc
pop
das
ret
mov
or
push
ins
adc
setp
test
jmp
cmp
cmp
push
lods
inc
mov
sub
mov
push
jg
(bad)
out
aas
mov
jle
outs
std
jecxz
int
dec
push
push
mov
test
push
movs
mov
psrlw
mov
jmp
push
adc
jns
sub
out
inc
xor
push
dec
push
jle
popa
nop
ins
jb
cdq
or
stc
sub
cmp
mov
inc
mov
repnz
sub
icebp
int
cld
loope
jmp
daa
mov
inc
pop
jns
iret
mov
(bad)
sar
pusha
or
hlt
sbb
and
cli
popf
cmp
sbb
pop
xchg
popa
mov
(bad)
mov
loopne
dec
mov
in
mov
push
mov
and
sub
xor
push
sub
push
shl
pop
adc
dec
mov
push
sbb
mov
jns
mov
pop
push
into
adc
or
cmp
xor
dec
sbb
cmp
jmp
dec
dec
xor
fwait
mov
repz
ficomp
adc
dec
iret
gs
clc
adc
js
je
out
js
sar
movs
xchg
je
adc
repz
push
mov
cmps
(bad)
xor
cmp
adc
adc
out
(bad)
out
mov
stc
shr
pop
push
adc
shl
loopne
repnz
pop
cld
or
or
in
xor
das
nop
sar
ins
add
and
shl
fstp
xchg
mov
dec
and
shl
xchg
imul
test
and
cmp
repz
add
jecxz
popa
xchg
cdq
push
stos
sahf
(bad)
mov
inc
idiv
hlt
int3
fucomp
stc
mov
sbb
mov
popf
xchg
sub
push
loopne
mov
sti
mov
inc
push
test
loopne
test
or
xor
pop
xor
jge
jmp
push
mov
push
jns
cld
addr16
push
xor
pop
push
mov
and
out
adc
sub
fwait
mov
mov
sub
and
call
dec
mov
sub
or
(bad)
sub
scas
push
fisubr
stos
clc
xchg
fsubrp
cmps
inc
sub
fstp
mov
push
sbb
pop
jg
xchg
shr
jo
inc
cmp
lds
inc
jns
push
test
fldenv
add
ret
sbb
jmp
in
xor
or
cmps
push
data16
ja
jle
shl
mov
add
push
loope
jne
cmp
repz
inc
mov
mov
mov
xchg
pop
mov
xchg
add
push
jp
inc
jo
dec
or
bound
lds
fadd
add
xchg
push
add
fcom
or
out
test
sub
or
dec
xchg
fbld
test
mov
inc
dec
pop
jnp
shl
xchg
xchg
push
xor
and
jge
popf
outs
xor
dec
or
inc
xchg
repnz
jmp
inc
out
dec
cwde
mov
mov
jnp
fs
out
pushf
(bad)
icebp
scas
not
jg
push
pop
outs
out
out
jp
push
or
bound
test
mov
dec
add
mov
add
daa
jne
and
and
inc
sbb
push
sbb
pop
or
jns
dec
cmp
ucomiss
mov
lock
in
(bad)
lea
mov
inc
call
movs
out
pop
or
pop
sbb
jbe
(bad)
dec
cmp
lock
and
jns
outs
push
dec
or
xchg
in
icebp
pushf
fild
pushf
lods
les
push
xor
dec
icebp
xchg
fdiv
pop
or
sub
push
pop
pop
xlat
and
icebp
mov
inc
dec
in
rcl
ins
cmp
mov
cmovs
inc
add
sbb
adc
or
inc
(bad)
(bad)
mov
arpl
sub
ins
pop
ins
das
or
mov
gs
or
push
pop
xor
or
not
fdiv
push
addr16
outs
dec
or
adc
or
les
outs
or
push
mov
lods
out
loop
stos
in
hlt
imul
out
stc
stos
jmp
xor
aaa
fs
clc
jnp
xchg
sbb
and
(bad)
mov
sub
lahf
lahf
mov
stos
repz
cli
mov
rol
pop
das
inc
or
push
adc
shl
or
mov
rcl
cdq
stos
in
stos
jno
cdq
ficom
pop
cs
ficomp
xchg
ficom
and
ja
ins
das
mov
mov
loope
cmp
jno
sub
in
in
pop
loope
pop
(bad)
(bad)
cld
in
popa
adc
sbb
xor
js
mov
push
pop
dec
sub
inc
and
xor
mov
frstor
mov
lahf
call
jl
pop
mov
jns
dec
jmp
pop
xor
gs
push
data16
ror
sbb
xchg
(bad)
pushf
cld
jae
push
jae
dec
cmp
mov
into
mov
mov
add
ins
push
jge
mov
in
dec
(bad)
mov
and
cdq
movs
(bad)
bound
lahf
mov
mov
cmp
outs
push
sbb
pop
jmp
mov
mov
lods
pop
adc
pop
les
scas
ficomp
repnz
std
jae
jb
push
and
sub
cmp
aaa
push
iret
xchg
xor
push
outs
push
pop
adc
inc
add
sub
mov
lods
sub
mov
cli
test
(bad)
std
push
and
push
and
movs
div
jp
adc
fs
xor
adc
pop
les
jne
jae
dec
xchg
mov
cdq
cmc
call
sbb
sub
mov
hlt
xchg
test
imul
(bad)
or
xor
or
and
xchg
aam
loop
lds
pop
idiv
movs
xor
and
sub
mov
mov
pop
sti
mov
out
lods
icebp
xchg
mov
pusha
xor
fst
jg
jns
push
aaa
push
sbb
cmp
pop
jmp
cld
jle
mov
cwde
mov
cwde
rcr
jg
adc
pop
(bad)
mov
ficomp
sub
jl
cmp
mov
out
leave
xor
xor
in
hlt
add
inc
loopne
aaa
push
push
adc
or
pop
xor
mov
test
ds
xor
in
scas
hlt
pop
sbb
aas
(bad)
pusha
sub
nop
sbb
push
pop
not
mov
fstp
aam
rol
scas
cli
xchg
fmul
and
dec
lock
aam
add
sub
dec
or
jmp
call
jge
inc
das
xchg
fwait
ret
cmp
dec
add
push
(bad)
xchg
mul
movs
loopne
add
stc
mov
stos
add
adc
pop
or
pop
cld
mov
or
arpl
or
dec
dec
push
mov
imul
scas
rcl
xchg
int
jmp
sahf
cld
fwait
arpl
inc
jl
pop
sub
lods
out
ret
cwde
enter
mov
jge
xor
lods
fnsave
add
add
fidivr
ja
cmp
fadd
inc
das
pop
lds
and
cmps
aad
clc
inc
xchg
gs
es
rcl
adc
mov
inc
mov
push
and
dec
movs
ja
dec
push
outs
inc
sbb
xchg
not
imul
sub
mov
mov
mov
mov
cdq
add
sbb
ja
adc
js
lfs
pop
pop
add
call
dec
sbb
aas
ins
inc
div
mov
xchg
push
dec
fstp
(bad)
mov
jecxz
inc
leave
sub
retf
jb
mov
mov
inc
mov
push
adc
hlt
inc
mov
add
jle
cs
add
mov
lahf
movs
js
jmp
inc
add
sbb
and
xor
add
inc
ret
xor
dec
cdq
cld
and
outs
add
les
pop
adc
nop
sti
jge
iret
pop
aas
jo
dec
movs
jg
and
mov
les
jns
and
fs
xchg
stc
mov
xchg
mov
ds
pop
scas
std
mov
or
adc
pusha
fcomp
mov
inc
into
or
sub
(bad)
fisubr
jb
(bad)
dec
pop
stos
loope
push
jmp
iret
mov
aas
jl
(bad)
scas
loopne
pop
sbb
idiv
mov
pop
xchg
lods
ror
in
scas
fadd
div
sub
mov
sbb
cmp
cmp
xchg
lock
mov
fistp
mov
cmp
cs
into
push
xor
mov
push
and
shl
loopne
daa
inc
or
movs
out
push
sub
rcr
out
lods
into
(bad)
clc
mov
fistp
dec
xor
jo
jle
rol
push
dec
push
jno
inc
or
rcl
jb
outs
sbb
cmc
data16
pop
(bad)
pop
add
int3
stos
enter
repnz
mov
fwait
lea
jns
es
adc
jle
loopne
retf
dec
fiadd
retf
jb
jle
aas
imul
std
mov
pop
or
push
and
scas
mul
in
pop
mov
jno
inc
movs
fwait
call
mov
cld
xchg
mov
sub
add
and
enter
test
scas
gs
nop
inc
scas
int3
cmp
popa
mov
sub
add
pop
imul
test
mov
mov
sub
clc
sub
out
cmp
cmp
or
sub
aaa
xchg
imul
xor
xchg
mov
add
cmc
mov
jp
call
scas
test
xor
mov
pop
sbb
inc
stos
push
cmp
rcl
lea
mov
mov
xchg
mov
dec
fldcw
fistp
sbb
cmp
xchg
pusha
call
mov
orps
les
adc
mov
and
jne
or
fcom
push
scas
cmps
mov
mov
inc
mov
out
mov
gs
mov
dec
mov
and
and
das
adc
pop
pop
stos
inc
loope
adc
imul
push
push
dec
stos
retf
mov
mov
(bad)
mov
gs
dec
fsubr
ret
push
sbb
nop
popf
pop
mov
(bad)
mov
xor
mov
mov
xchg
aam
inc
les
ja
inc
ret
jge
sbb
fwait
repnz
in
inc
mov
cmp
mov
shr
aas
xor
mov
int3
lock
mov
test
int3
dec
xchg
jo
mov
jno
dec
mov
pushf
fisttp
out
test
cmp
retf
pop
pop
int
cmps
push
ficomp
(bad)
mov
mov
pop
push
pop
mov
cmp
pop
leave
sub
test
aaa
push
movs
push
in
and
sbb
ins
retf
dec
icebp
dec
scas
sahf
inc
add
icebp
arpl
daa
cmc
push
and
cwde
movs
(bad)
call
jge
push
push
pop
(bad)
je
dec
call
or
aaa
jbe
push
and
je
into
test
pop
cmc
(bad)
data16
in
mov
test
in
cdq
jne
add
xor
aad
cdq
cli
mov
or
adc
mov
add
pop
js
hlt
lods
jl
ins
xor
inc
add
call
rcl
(bad)
inc
scas
std
mov
jbe
mov
pop
adc
ss
lods
shl
sbb
sub
sbb
xchg
and
ficom
xchg
or
fmul
pop
mov
cmps
mov
test
xchg
cwde
inc
xor
xlat
lahf
(bad)
mov
cmp
shr
mov
cmp
adc
adc
dec
cmp
(bad)
ja
sub
addr16
mov
cmps
outs
pop
add
xchg
stos
adc
cmps
into
or
adc
sub
and
mov
stc
call
jmp
retf
xor
lods
sbb
(bad)
lahf
xchg
dec
or
stos
mov
add
gs
cmp
(bad)
mov
xor
mov
scas
xchg
rol
jecxz
rcr
cmp
lds
inc
into
or
add
dec
mov
lds
je
xchg
(bad)
sbb
ds
or
pop
shl
gs
xchg
retf
pop
ss
pop
sbb
fbstp
jmp
xor
mov
pop
mov
or
rcl
popa
push
int
std
xor
sbb
adc
fld
out
pop
lods
pop
out
pushf
fistp
inc
rol
jnp
into
cmps
inc
out
mov
dec
cs
cwde
mov
jns
ret
cmp
int
fdivr
inc
cmpps
imul
or
lods
add
retf
or
sbb
sub
nop
ins
sahf
outs
rol
xor
mov
mov
sbb
jmp
lods
call
cmp
mov
or
lods
fnstenv
sbb
hlt
and
mov
pop
sbb
lds
in
sahf
(bad)
sbb
out
lods
inc
and
leave
aad
sbb
daa
loopne
push
loopne
push
mov
test
hlt
and
mov
pop
scas
aad
inc
add
imul
push
adc
cmps
(bad)
aaa
aad
movs
(bad)
movs
inc
out
stos
popa
int
out
dec
stos
imul
ja
adc
call
add
dec
mov
ror
(bad)
cmp
mov
mov
gs
test
sub
adc
loop
push
inc
test
imul
int
out
call
aaa
dec
or
push
and
xchg
mov
repz
adc
mov
xchg
xor
lock
call
xor
jo
pop
or
mov
or
inc
adc
mov
std
or
fs
mov
or
add
loop
hlt
mov
lods
lds
xor
cdq
fist
xor
in
dec
out
mov
das
lock
mov
sbb
test
mov
mov
push
pop
sbb
inc
andnps
les
pop
mov
push
inc
daa
loopne
sub
rol
sbb
mov
int3
xor
mov
mov
push
jnp
bound
(bad)
mov
or
lahf
fidiv
and
inc
(bad)
sub
mov
mov
scas
and
gs
dec
adc
xchg
shl
push
xor
fild
jb
fld
push
addr16
mov
std
add
mov
jmp
fcomi
mov
stos
enter
in
shr
repz
(bad)
(bad)
mov
mov
mov
loope
loopne
and
xchg
inc
push
ins
mov
mov
push
or
sbb
cdq
mov
mov
fidiv
mov
fimul
mov
sbb
mov
pop
push
push
and
cmp
or
das
dec
push
(bad)
into
mov
sbb
xchg
out
sbb
mov
(bad)
cdq
dec
adc
mov
push
cmp
test
mov
repz
mov
stos
mov
jge
rcl
out
fistp
mov
dec
popf
dec
add
or
dec
push
fiadd
sbb
sub
icebp
jbe
ja
shl
add
jg
inc
pop
mov
(bad)
mov
xchg
retf
cmps
std
mov
outs
sub
push
out
pop
pop
inc
sbb
pop
push
push
test
push
adc
pop
and
gs
movs
loope
mov
xor
sysexit
push
jl
stc
fwait
ret
test
aam
loop
dec
or
retf
mov
mov
inc
and
cmc
mov
add
test
mov
repz
or
jecxz
out
hlt
sub
and
movsx
xchg
cmc
jbe
rol
xchg
rcl
jge
icebp
adc
sar
cs
ficomp
dec
push
daa
dec
cli
or
(bad)
aas
pop
in
mov
test
sub
loope
xor
xchg
push
test
scas
cli
push
or
push
stos
jno
add
shr
xor
imul
or
xchg
call
and
sti
movs
jns
dec
in
les
arpl
add
rcl
lods
fs
push
in
ficomp
aas
loop
(bad)
xchg
mov
push
pop
in
outs
sub
xlat
(bad)
out
pusha
sub
sub
cmp
sub
sbb
lock
out
(bad)
mov
cmps
loope
adc
cmps
aam
pop
or
add
nop
fistp
dec
or
push
jae
dec
(bad)
push
and
ret
or
sbb
ins
sub
and
lock
push
inc
(bad)
push
test
pop
xor
jns
push
repnz
repz
mov
jg
mov
cwde
mov
mov
retf
inc
add
test
sahf
mov
lods
into
arpl
lods
out
mov
push
push
sub
cmc
mov
adc
and
lods
sbb
aas
jo
iret
lods
dec
mov
xchg
mov
add
mov
stos
call
sub
imul
scas
(bad)
mov
xchg
fnstenv
inc
mov
ins
and
mov
minps
jnp
popa
es
popf
jmp
pop
or
test
test
pop
sbb
add
jnp
pop
ret
push
outs
mov
mov
loop
pop
sbb
dec
sbb
(bad)
lds
call
push
jne
pop
push
adc
retf
out
movs
movs
inc
pop
pop
xchg
mov
ins
mov
rol
pop
movs
inc
xor
ds
imul
push
add
pop
cmp
dec
movs
(bad)
xchg
and
cmp
cs
xor
xor
cmp
adc
add
fidivr
pop
popa
cld
call
jne
xadd
sbb
xor
cmp
pop
mov
mov
or
push
adc
inc
add
fld
xor
loopne
mov
xlat
cwde
cmp
(bad)
popa
or
shl
sub
js
pop
mov
mov
out
stos
iret
pop
mov
into
xchg
in
fist
out
xor
pusha
mov
sub
imul
add
xchg
jo
push
(bad)
mov
or
ins
mov
xor
mov
not
pop
(bad)
adc
out
xor
cmps
ficomp
or
push
jb
dec
jb
daa
inc
lds
jne
pop
out
retf
push
fiadd
in
pop
sbb
test
rcl
ficomp
in
jl
sbb
icebp
sub
adc
aas
(bad)
nop
xlat
sbb
aaa
inc
inc
ss
mov
aaa
cmc
pushf
rcr
daa
pop
int3
std
or
neg
scas
in
sbb
ds
icebp
cmovo
in
cmps
into
mov
fidivr
xor
mov
dec
xchg
ror
leave
outs
ret
or
jmp
inc
add
mov
dec
shr
cmp
cmps
mov
adc
mov
pop
sbb
outs
rcr
(bad)
pop
jne
in
outs
cmps
pusha
(bad)
mov
xchg
inc
add
ret
js
shl
jns
scas
in
dec
jmp
das
push
ins
push
xchg
aam
jge
sbb
mov
test
xor
jae
hlt
mov
(bad)
retf
cmps
dec
(bad)
mov
or
stc
cmp
mov
inc
mov
add
(bad)
sub
in
pop
(bad)
jle
mov
scas
mov
jecxz
sub
leave
daa
sbb
xor
mov
xchg
dec
jmp
and
jno
rcr
xchg
xchg
dec
or
and
add
(bad)
xchg
outs
popf
jp
loop
pop
cmc
ss
cmp
test
pop
push
xor
xlat
fisttp
push
xor
sahf
xchg
jne
push
sbb
call
cwde
and
mov
push
mov
nop
dec
(bad)
push
mov
leave
mov
add
jne
mov
mov
jno
fcomp
mov
or
jns
loop
dec
cmp
fwait
arpl
sar
push
cmc
xchg
shl
lea
sbb
jg
add
ret
mov
add
push
hlt
fwait
push
xor
cmp
xor
fwait
popf
pop
fcom
jno
mov
dec
or
add
aad
aad
retf
adc
sbb
(bad)
jecxz
cld
aas
out
add
popf
pop
ins
mov
or
add
mov
arpl
pop
popf
push
aam
enter
sub
mov
out
mov
dec
clc
sbb
out
or
mov
mov
xor
ret
and
cmps
and
adc
shl
sbb
loopne
push
adc
outs
mov
or
movs
mov
sbb
fld
cmps
loopne
pop
shl
(bad)
movs
out
xchg
outs
mov
popa
add
addr16
ror
into
or
lods
ret
jnp
loop
jge
idiv
mov
nop
shl
call
inc
add
js
je
int
stos
pop
std
scas
in
sbb
jmp
lods
js
xor
fisttp
adc
ds
mov
jo
fst
pop
shl
or
retf
xchg
rcr
in
and
in
cld
call
push
pop
adc
cwde
imul
pop
hlt
mov
call
repz
pop
add
and
xchg
out
sub
ror
rcr
(bad)
adc
retf
sub
shl
and
mov
out
mov
pop
xchg
repnz
and
dec
xchg
dec
adc
stos
lea
mov
popf
dec
loopne
cmps
xor
movs
(bad)
aas
pop
test
lods
sub
adc
hlt
xchg
xor
bswap
lods
inc
push
push
add
call
cwde
imul
mov
in
add
pop
push
iret
or
clc
mov
sub
into
xor
and
pop
lahf
lds
stos
arpl
inc
(bad)
stos
mov
inc
sbb
add
cmc
push
nop
ror
test
je
in
movs
sahf
push
and
mov
add
repz
jle
aad
xor
sbb
and
mov
cmp
popa
mov
sbb
adc
ror
out
mov
out
mov
jnp
sbb
bound
fidivr
test
(bad)
ss
pop
add
fistp
or
mov
xlat
les
dec
sub
xchg
push
add
jge
jp
cmp
jecxz
xchg
pop
test
nop
cmc
dec
pop
sub
or
jmp
(bad)
into
mov
xor
add
pushf
aam
inc
push
or
clc
mov
or
cs
mov
fcomp
sub
fstp
cmp
loop
inc
sub
sti
cmps
call
mov
jp
js
and
fisttp
jo
pop
fs
(bad)
fstp
add
pop
cmp
cld
xchg
fcomp
jge
outs
je
add
push
pop
pop
data16
mov
rcl
and
add
(bad)
retf
clc
mov
xchg
ds
xor
xchg
fmul
mov
adc
ficomp
ins
and
out
(bad)
(bad)
mov
call
adc
mov
inc
pop
or
mov
call
and
and
rol
addr16
xor
call
ds
or
movs
loope
ret
jmp
add
lods
loop
pop
and
jnp
mov
jge
sub
iret
mov
mov
jle
mov
scas
idiv
rcl
scas
sub
bound
or
leave
mov
adc
pop
jge
dec
or
icebp
mov
lds
idiv
push
pop
xor
mov
loop
aam
dec
cmp
aad
xchg
cli
sbb
jl
cld
nop
cmc
sbb
gs
jno
lods
les
out
mov
push
fs
push
or
or
jg
retf
movs
push
and
scas
hlt
fcomp
mov
jae
aam
xor
js
ins
je
dec
add
in
test
jmp
mov
in
xchg
push
push
in
mov
xchg
fbld
cmp
daa
stc
xchg
ret
cmp
jle
push
call
jbe
cs
in
mov
pop
jmp
mov
jl
(bad)
clc
mov
pop
call
cmp
icebp
mov
xor
daa
ffree
xchg
sahf
pop
dec
or
mov
mov
inc
jl
adc
aad
retf
inc
cdq
push
ja
cmp
lgs
cdq
mov
jns
hlt
leave
xchg
leave
add
pop
pop
cmps
cmp
in
movs
loope
mov
pushf
xchg
sbb
std
xchg
inc
je
jbe
std
ficomp
mov
cmp
mov
bound
adc
mov
push
cdq
jns
adc
int3
fst
mov
xchg
popa
add
cmc
stos
(bad)
popa
mov
inc
in
mov
test
les
sbb
int
arpl
mov
fistp
add
adc
mov
jno
clc
lods
popa
shl
lock
mov
(bad)
mov
call
int3
mov
stos
sti
mov
loope
rol
mov
stos
in
mov
leave
movs
out
lods
scas
popa
sub
pop
cmp
pop
mov
sahf
pop
jns
cmp
(bad)
xchg
into
or
cmp
in
test
xchg
jnp
das
or
pop
outs
scas
add
or
(bad)
mov
mov
shl
jnp
push
js
add
adc
add
lods
push
dec
cmp
movs
(bad)
mov
test
movs
icebp
adc
fnsave
(bad)
(bad)
xchg
retf
or
in
mov
(bad)
iret
cmp
dec
mov
jne
or
pop
sbb
xchg
out
mov
sbb
add
out
add
push
add
fld
cdq
jno
adc
rcr
mov
sbb
inc
mov
inc
push
(bad)
retf
mov
fldcw
mov
mov
mov
dec
adc
adc
adc
icebp
mov
pop
dec
adc
adc
movs
retf
dec
add
fld
sub
shl
push
xchg
sti
pop
jns
imul
cli
xchg
push
or
xor
mov
inc
sbb
popf
adc
or
not
pusha
imul
int3
mov
es
and
add
add
add
adc
push
pop
adc
aam
inc
mov
lahf
add
je
out
icebp
pop
jge
gs
mov
jecxz
out
pop
and
add
sbb
fild
sar
pop
push
or
inc
sub
rol
cmp
imul
inc
jbe
add
in
out
sbb
add
fcomp
mov
aad
mov
adc
cmp
fild
mov
push
add
mov
lea
jne
push
sti
mov
adc
push
inc
pop
add
in
jmp
mov
pop
jo
push
cdq
ret
push
(bad)
int3
xchg
dec
aas
inc
sbb
mov
xor
dec
add
xor
xchg
in
retf
pushf
rcr
jg
inc
ins
pop
xor
sbb
adc
jo
mov
dec
sbb
leave
mov
cmp
repnz
jns
cmp
fiadd
rcr
imul
and
cmps
out
xor
inc
dec
push
add
adc
stos
in
xchg
leave
(bad)
ficomp
fsubp
aad
icebp
sbb
pop
inc
dec
sub
ret
mov
lock
mov
cmp
pop
cmp
add
jp
push
scas
xlat
cmp
mov
fimul
movs
loope
xchg
outs
lds
jne
xor
pop
pop
cmp
sub
sar
cli
jb
pop
adc
rcl
movs
mov
(bad)
mov
inc
imul
aam
mov
das
sub
(bad)
movs
mov
js
sbb
sti
js
inc
add
mov
push
call
xor
mov
addr16
fdivr
cmps
mov
stos
enter
mov
hlt
fcom
add
inc
or
push
sbb
jmp
leave
movs
in
dec
pop
sub
xchg
sbb
aad
mov
push
mov
xor
xor
xchg
out
mov
sub
(bad)
aas
jg
fnsave
or
loop
(bad)
(bad)
ds
(bad)
adc
ss
xor
mov
dec
add
mov
add
push
aad
lock
mov
cmp
dec
or
jae
inc
test
push
add
in
or
cwde
lds
xchg
enter
fnstsw
out
mov
mov
xchg
ficomp
xlat
test
fcom
push
pop
jns
jl
in
sbb
dec
jle
cmp
rol
ffree
mov
sbb
pusha
push
rcr
dec
enter
sub
xor
mov
cmps
jmp
fbstp
inc
lods
add
out
mov
scas
jne
and
dec
push
jmp
jnp
sbb
mov
or
rol
gs
adc
adc
aam
std
and
and
adc
lock
in
lods
data16
jo
ror
mov
and
lock
test
or
loope
mov
movs
out
daa
jae
std
clc
mov
aaa
stos
loop
xchg
out
xchg
imul
cmp
daa
xchg
sahf
inc
jnp
outs
movs
push
jl
int
mov
push
dec
xor
lds
call
ds
lahf
push
inc
es
cmps
shl
in
cmp
adc
mov
add
xor
or
in
cmps
call
sbb
xor
and
mov
mov
dec
push
inc
scas
pop
inc
pop
xlat
int3
fcomp
xchg
sbb
shl
inc
adc
sub
cmp
(bad)
mov
cmp
outs
xchg
cli
cmps
(bad)
sti
mov
jno
aad
out
cmp
dec
and
dec
push
push
fwait
icebp
mov
sbb
dec
mov
stos
repnz
mov
mov
je
popa
and
in
ret
cwde
fsubr
rol
push
add
hlt
mov
cld
fidiv
push
test
fdiv
xchg
inc
and
je
or
sub
sbb
mov
mov
sub
fwait
shl
mov
mov
in
(bad)
movs
(bad)
adc
dec
or
(bad)
lods
jmp
push
and
mov
sbb
add
(bad)
sub
dec
popa
das
popa
xor
mov
lds
cmps
or
sub
sar
mov
scas
and
pop
add
and
add
dec
jmp
cmp
dec
or
pop
sbb
rol
jb
dec
add
dec
das
push
rol
mov
inc
or
stc
movs
stc
adc
jno
ret
(bad)
loopne
mov
xchg
pop
popf
stc
mov
fistp
pop
cmp
scas
out
test
pushf
add
in
test
jno
inc
fadd
inc
lds
(bad)
mov
pop
mov
jae
cmp
gs
xchg
sbb
fsubr
mov
jge
inc
and
fidivr
pop
mov
jmp
fs
pop
mov
das
or
idiv
(bad)
mov
mov
les
inc
xchg
cmp
iret
stc
test
mov
mov
sub
mov
jae
jmp
mov
dec
je
pop
mov
popa
aas
pop
test
jl
or
gs
mov
nop
ficomp
xchg
retf
push
fs
cmp
cmp
rol
or
hlt
mov
sbb
fiadd
test
jle
push
scas
pop
sub
jmp
inc
mov
jbe
jns
dec
mov
das
outs
sbb
cs
(bad)
xor
repnz
cmc
add
xor
mov
mov
pop
ror
aas
jle
jae
bound
jns
dec
or
pop
pop
add
push
dec
or
data16
sbb
sbb
dec
or
fadd
mov
(bad)
popa
or
clc
sti
mov
xor
jl
fcomi
xchg
xchg
or
in
jno
push
fs
sahf
fadd
ds
cld
ret
cmp
sbb
stos
or
sub
rcl
jne
out
in
add
sub
in
lods
jbe
sbb
mov
push
loope
bound
enter
jp
in
mov
pop
outs
pop
pop
fs
inc
cmp
ret
les
addr16
movs
in
and
(bad)
loope
mov
movs
jo
cmp
add
cmp
bound
scas
adc
retf
imul
inc
xor
ins
xor
mov
xchg
jmp
imul
mov
inc
sub
pop
push
push
lock
or
add
sti
xor
and
mov
loope
inc
pop
or
add
in
rep
loope
(bad)
(bad)
cmps
jp
xor
(bad)
fidivr
jns
sub
mov
mov
dec
lods
cmp
enter
jbe
pop
stos
cmp
adc
xchg
loop
dec
lahf
fistp
pop
and
leave
stos
mov
bound
call
jno
push
jg
outs
das
mov
sbb
fbstp
jns
test
cmp
stos
in
xor
add
fisub
inc
push
test
push
and
fdivr
ja
out
add
pop
sub
retf
mov
adc
(bad)
nop
cmc
add
outs
pushf
iret
test
jmp
leave
push
cmps
cwde
lds
or
add
data16
adc
mov
xor
xchg
mov
mov
les
aaa
sub
out
test
pop
jno
pop
aad
cmps
mov
jecxz
mov
and
stc
mov
mov
mov
push
dec
es
test
jb
int3
retf
fnstenv
aas
xchg
shr
shl
cmp
shl
jg
je
test
nop
retf
icebp
retf
pop
addr16
outs
cdq
jecxz
idiv
cmp
pop
pop
and
aas
jo
sub
cld
lds
in
mov
and
lods
or
adc
or
mov
push
push
stos
(bad)
mov
sti
mov
hlt
mov
cdq
lds
inc
sub
xchg
mov
xor
xor
sub
or
int
mov
lods
out
stos
push
and
mov
aam
std
sub
loop
inc
(bad)
xchg
js
dec
mov
pop
clc
pop
(bad)
iret
data16
add
rol
scas
fsub
out
(bad)
xchg
daa
mov
jno
pop
xchg
jne
cmovg
sti
mov
or
hlt
mov
dec
push
or
(bad)
movs
movs
push
pop
cmp
mov
retf
mov
jle
pop
or
mov
or
ret
push
sub
(bad)
movs
xlat
sub
cmp
rol
mov
pushf
icebp
pop
cs
lock
inc
mov
daa
sahf
(bad)
dec
and
cli
mov
jge
outs
test
xor
xchg
int3
scas
xchg
add
(bad)
call
and
loope
pop
cs
popa
sub
add
adc
call
js
cmp
cmp
(bad)
mov
cwde
cmp
cmp
lods
aam
(bad)
fldenv
adc
adc
aaa
inc
add
mov
mov
lock
mov
push
or
and
add
inc
pop
adc
ins
push
pop
add
inc
sbb
ins
pop
dec
add
and
cdq
cld
fsub
adc
mov
pop
push
jg
leave
adc
ror
mov
pop
mov
pop
ss
test
hlt
jmp
ffreep
xchg
and
scas
iret
pop
or
dec
dec
pop
pop
mov
mov
xor
inc
nop
add
or
dec
pop
xor
pusha
xor
mov
nop
dec
pop
ss
or
(bad)
scas
ins
and
(bad)
sbb
lods
shl
inc
sbb
in
repnz
icebp
mov
imul
mov
pop
pop
add
sub
ss
rcr
xor
mov
mov
mov
adc
ds
add
lock
or
ss
cmp
loopne
(bad)
fmul
mov
or
cmp
loopne
mov
and
push
add
adc
jbe
les
pop
pop
lock
dec
das
arpl
(bad)
std
stos
call
inc
ja
push
lds
mov
pop
jne
icebp
hlt
mov
ins
lds
(bad)
jnp
sbb
out
mov
jno
add
scas
cmp
sbb
push
ss
icebp
mov
add
mov
jecxz
iret
or
or
cld
out
xchg
repz
(bad)
mov
inc
dec
push
dec
push
in
mov
into
adc
arpl
aad
loope
outs
add
data16
or
idiv
mov
imul
(bad)
sbb
sbb
or
stos
push
jle
xor
xchg
hlt
std
scas
jmp
push
ja
add
pop
add
test
and
sbb
das
push
aad
mov
push
nop
fimul
push
pop
xor
sbb
repnz
movs
dec
sbb
cmc
loope
mov
jmp
sahf
cmc
jo
dec
cmp
(bad)
mov
sub
mov
sub
call
pop
in
pop
mov
adc
adc
ds
shr
into
out
mov
mov
test
inc
add
sub
push
aaa
dec
sbb
scas
(bad)
test
mov
or
(bad)
mov
popf
(bad)
out
fimul
mov
imul
fstp
jp
arpl
add
bound
lods
ret
adc
push
jnp
adc
ds
rcr
(bad)
ror
(bad)
nop
add
cmp
and
mov
mov
push
pop
inc
aaa
pop
fsubr
adc
aad
out
pop
popf
(bad)
mov
sbb
add
int
mov
bswap
mov
xor
jecxz
mov
(bad)
ror
ds
aam
test
adc
xlat
xchg
mov
mov
sbb
shl
sub
loop
stos
pop
dec
sbb
fadd
test
fwait
cmp
xchg
nop
push
and
out
mov
es
nop
cmp
mov
cmp
adc
stc
mov
es
mov
fisub
sub
or
or
push
dec
paddsw
fistp
cmc
cli
mov
push
mov
cmc
mov
xor
movs
out
mov
mov
vmread
(bad)
test
push
xor
mov
mov
shl
or
pop
repnz
sti
add
adc
mov
inc
xchg
mov
mov
mov
mov
ds
dec
andnps
and
jecxz
sbb
lock
hlt
mov
stos
out
fnstenv
fsubr
(bad)
mov
movs
sbb
je
push
sub
sub
out
or
mov
mov
xor
cmc
sbb
icebp
inc
mov
sbb
nop
cmp
push
lahf
fistp
mov
mov
enter
ds
iret
mov
sub
movs
stc
lods
arpl
mov
cmp
jl
in
mov
cs
jns
or
shr
or
stc
push
jo
popa
mov
mov
xchg
inc
push
pop
inc
mov
mov
cmp
cli
fcomp
cmp
adc
out
movs
cwde
out
in
stos
repnz
jmp
ss
lods
out
add
ja
or
(bad)
xlat
and
mov
scas
cdq
loopne
into
cs
ficomp
mov
inc
sbb
test
pop
add
pop
pop
adc
pop
push
pop
(bad)
sbb
mov
inc
add
(bad)
mov
adc
jb
not
mov
push
cwde
loopne
inc
and
add
mov
scas
xchg
ds
lock
pop
and
sub
ins
add
(bad)
loopne
imul
int
fcom
pop
outs
outs
(bad)
(bad)
lahf
jg
xor
into
loop
scas
jns
add
shl
test
enter
jns
dec
push
movs
out
fild
fidivr
pop
or
mov
movs
dec
cmp
jecxz
neg
pop
add
dec
sub
pop
or
and
mov
mov
in
movs
sbb
rol
mov
sbb
add
rol
or
popf
pop
push
loopne
std
and
or
mov
xlat
or
and
sub
push
cmp
hlt
adc
icebp
pop
xlat
mov
inc
inc
sub
(bad)
xor
cmp
icebp
stos
mov
movs
(bad)
addr16
outs
lds
dec
adc
sti
fwait
mov
sub
shl
mov
imul
dec
sti
xor
mov
call
repz
inc
imul
add
ror
in
(bad)
jmp
not
xchg
(bad)
xchg
loopne
bound
jl
call
shl
ficomp
cmps
xor
jge
pop
and
and
leave
lea
loop
xchg
add
cmp
jl
imul
out
iret
repnz
pop
cmp
mov
js
popa
mov
push
cmp
xchg
mov
xor
sub
pop
add
and
int
int
mov
xchg
xchg
popa
scas
int3
mov
mov
push
inc
mov
fistp
or
sbb
mov
xor
les
inc
jnp
jno
repnz
loop
mov
pop
fnclex
mov
cmp
fild
aam
fdivr
imul
mov
ins
adc
adc
and
(bad)
lahf
mov
test
ds
xchg
jb
push
or
aas
sbb
and
dec
pop
out
neg
cmp
bound
xor
jmp
movs
loop
shl
std
aam
out
(bad)
or
das
pop
push
inc
shl
adc
or
cmps
cld
vpcomq
out
xor
add
shl
(bad)
popf
icebp
mov
sub
dec
adc
dec
cmp
mov
inc
inc
xor
inc
(bad)
fimul
dec
push
dec
sub
test
test
je
les
mov
sub
push
or
add
ss
fidiv
add
js
jb
retf
test
cmps
fdiv
fcomp
mov
pop
dec
and
(bad)
rcl
mov
jns
add
xor
das
sub
push
loop
xchg
enter
aam
ficomp
jge
dec
cmp
mov
adc
call
cs
enter
mov
jae
inc
or
sub
pop
pop
sbb
(bad)
sahf
(bad)
mov
xchg
(bad)
aaa
js
outs
icebp
mov
pushf
pop
xchg
rcr
jg
pop
push
(bad)
loop
ret
(bad)
enter
dec
imul
cmp
inc
add
daa
gs
and
jae
inc
and
das
dec
or
idiv
jns
push
cli
mov
lods
clc
xor
leave
nop
and
dec
mov
(bad)
xchg
loop
fnstenv
pop
ds
aas
mov
lock
aas
movs
mov
out
jb
adc
movs
rcl
cdq
stc
xor
aas
int3
jl
dec
cmp
push
push
mov
or
cmp
pushf
xchg
xchg
jo
ja
pop
outs
les
ficom
cld
popf
cli
xor
mov
(bad)
int3
popf
ret
(bad)
pop
xchg
cld
mov
fistp
cmp
cmp
in
xor
call
enter
dec
iret
jbe
cdq
fistp
adc
sub
pop
adc
xor
push
mov
popf
push
cmps
push
ins
out
cmp
dec
sub
sub
or
pop
sbb
popa
and
jp
sub
cmp
adc
dec
xor
mov
or
rcl
stc
test
cmps
ror
sbb
xlat
lods
outs
(bad)
(bad)
movs
(bad)
lahf
fistp
lock
and
xchg
loope
mov
or
adc
xchg
shl
cs
hlt
popf
in
scas
mov
test
sbb
mov
jo
cmp
add
push
sub
and
pop
adc
popa
and
lods
gs
xchg
fnstsw
outs
test
scas
imul
push
sysexit
inc
or
xor
test
cmp
out
pop
shl
aad
cli
mov
push
adc
push
idiv
xchg
aad
adc
cmp
push
and
jmp
lods
mov
mov
fs
dec
push
and
dec
or
jne
out
jle
je
dec
and
pop
jmp
imul
push
and
add
push
ins
xor
das
inc
mul
dec
mov
mov
xchg
mov
cmp
in
inc
push
jne
dec
lahf
dec
xor
push
pop
and
cmc
and
and
inc
sub
(bad)
xchg
jecxz
test
lahf
int
xor
test
jmp
lahf
lahf
out
test
mov
out
rcl
retf
xchg
fsubr
aas
jp
pop
into
pushf
fidivr
cmp
pop
add
dec
add
sbb
pop
sbb
fs
jmp
dec
sbb
fcom
icebp
mov
test
mov
push
and
adc
pop
and
dec
push
inc
xor
stos
(bad)
movs
call
not
cmc
xor
mov
lahf
and
cdq
cmps
fldcw
fidiv
cmp
outs
add
sub
xor
cmp
fld
popa
mul
stos
out
cmp
xchg
add
sbb
and
mov
(bad)
cmps
idiv
xchg
ror
dec
sbb
xor
and
dec
adc
push
pop
cmp
lds
xchg
aam
les
xchg
add
and
sar
mov
(bad)
aad
or
aaa
inc
in
loope
cld
mov
inc
cli
cmp
mov
ret
mov
sub
hlt
xor
xor
jmp
sub
inc
call
pop
inc
adc
dec
and
test
stos
mov
mov
xchg
loopne
mov
mov
pop
loop
icebp
mov
fbstp
enter
enter
jg
push
sub
mov
xchg
fstp
repz
scas
push
push
adc
jbe
test
xor
dec
add
cli
push
add
cmp
gs
mov
pop
pop
in
adc
jnp
jge
cwde
sti
mov
add
shl
stc
mov
pop
loope
cmc
mov
jl
outs
xor
pop
push
inc
mov
or
dec
fsubr
pop
or
lods
xchg
loop
les
xchg
mov
rep
scas
rol
outs
sub
(bad)
mov
shr
sbb
add
sub
sub
pop
ds
pop
xchg
mov
lods
popf
shl
mov
rol
data16
xor
pop
sub
push
(bad)
movs
jmp
jecxz
loop
enter
inc
sbb
dec
adc
push
dec
andnps
jl
push
adc
sbb
fsubr
adc
adc
and
fbstp
retf
mov
push
js
ror
mov
pop
ds
and
jnp
cdq
iret
mov
popa
jmp
popa
and
inc
mov
cmc
test
inc
or
xlat
xor
jbe
lds
inc
loope
and
inc
add
inc
xor
inc
in
jne
sbb
sbb
and
xchg
cdq
movs
jle
aam
sti
sbb
sub
shr
mov
or
push
add
ss
pop
sbb
dec
adc
jne
je
sub
retf
xchg
mov
adc
mov
cmp
test
ins
jmp
cmps
inc
and
inc
xlat
ins
add
(bad)
ret
loopne
clc
pop
(bad)
enter
mov
not
in
mov
mov
addr16
add
dec
mov
adc
je
push
add
cmp
and
sub
dec
(bad)
call
mov
std
and
std
mov
nop
rol
test
mov
xchg
inc
xchg
scas
ret
mov
ja
push
xor
push
loope
or
pop
out
leave
mov
jb
push
add
(bad)
mov
sub
ret
sub
xor
pop
jmp
mov
xchg
fistp
push
mov
jecxz
inc
out
nop
mov
int
rol
sbb
js
add
je
ret
mov
scas
loope
scas
shr
mov
push
jp
inc
fmul
ss
add
test
mul
pop
and
loop
push
mov
lods
jmp
sub
cmp
mov
mov
push
cmp
cli
xchg
mov
push
jo
xchg
fstp
adc
repnz
enter
addr16
push
and
add
mov
mov
(bad)
arpl
pop
jecxz
mov
test
cli
xchg
enter
mov
call
int
add
test
dec
or
pop
and
or
out
fist
rol
xor
inc
add
int
mov
mov
repnz
mov
xchg
xchg
or
jne
sub
(bad)
in
mov
dec
or
push
out
dec
pop
add
sbb
loope
lods
not
mov
sub
jo
xor
push
xchg
mov
fistp
mov
inc
test
ret
bound
inc
add
pop
cmp
add
dec
jmp
in
retf
ja
dec
loop
movs
stos
adc
mov
pusha
pop
cmp
jle
aaa
in
mov
test
and
xor
(bad)
mov
sbb
sub
sbb
or
aas
js
pop
in
fs
aad
sub
sub
push
cdq
jno
jns
xor
outs
jmp
int
(bad)
nop
loope
(bad)
push
dec
push
jae
push
jmp
mov
jb
adc
sub
test
and
dec
xor
sbb
test
or
ins
inc
or
push
hlt
mov
add
clc
test
es
pop
mov
std
mov
ss
loope
and
inc
fmul
mov
mov
add
push
mov
rcr
fsubr
(bad)
or
push
jecxz
cli
cwde
push
pop
je
pop
sbb
xor
imul
rol
stc
out
mov
int
jmp
fadd
and
push
ret
movs
sub
pop
(bad)
sub
cmp
xchg
ror
lock
push
pop
sbb
cs
mov
adc
scas
and
jo
dec
shl
push
sbb
movs
mov
fldcw
stc
mov
nop
rcl
fwait
add
les
not
(bad)
in
fisub
add
mov
inc
(bad)
mov
(bad)
fstp
jl
dec
(bad)
aad
(bad)
call
add
mov
mov
loope
ficomp
sar
cmovbe
push
adc
sbb
jg
push
adc
xchg
sti
mov
ds
fisubr
xor
xchg
sti
pop
sub
jae
mov
push
push
sbb
rol
int
pop
test
xchg
sti
or
mov
call
lock
and
adc
adc
push
imul
call
mov
adc
icebp
in
cwde
cmps
enter
jb
dec
sbb
dec
sbb
jg
push
push
cmp
ins
or
and
in
lods
test
and
pop
pop
cmp
imul
jmp
call
imul
push
pop
push
aas
jl
inc
sbb
cwde
lods
ret
test
pop
jae
ins
cmp
or
jmp
imul
jecxz
fldcw
or
dec
and
outs
xor
jg
xor
jo
popf
scas
fdiv
mov
xor
jp
test
mov
add
test
lds
addr16
out
in
or
push
adc
sub
shl
push
int3
add
adc
push
out
sub
ficomp
movs
mov
les
out
leave
xchg
dec
pop
add
cmp
sub
sbb
aaa
push
pop
or
std
mov
popf
jge
sub
mov
mov
and
int3
movs
jecxz
fild
imul
mov
imul
adc
es
fiadd
loopne
cmps
lods
loopne
shr
cmp
ret
push
out
ins
les
xor
push
sbb
jge
inc
push
cmp
inc
sub
xor
sub
jnp
push
ds
pop
cmp
jno
sub
cwde
shl
jns
push
cmp
xor
cmp
sub
mov
xchg
leave
scas
test
mov
dec
lahf
mov
mov
ins
sub
js
jnp
pop
xor
mov
(bad)
mov
ss
push
cmp
push
and
xchg
shl
es
sti
mov
loope
std
jb
xor
jo
pop
or
jge
mov
push
sbb
cmp
xchg
rcl
fild
mov
lahf
xchg
fwait
mov
jo
mov
cmp
push
sub
imul
push
adc
inc
div
out
shr
gs
lods
out
mov
push
es
dec
sub
out
(bad)
scas
int
xor
das
icebp
jecxz
div
bound
dec
or
push
cwde
cli
test
loop
retf
adc
pushf
into
arpl
mov
dec
test
mov
cmps
in
cmp
test
dec
sbb
pop
jecxz
adc
lods
inc
sub
and
mov
dec
or
push
(bad)
int3
scas
xlat
add
dec
punpckhdq
aaa
xchg
in
enter
nop
iret
jne
xor
xor
jge
aaa
jl
push
sbb
es
add
scas
sar
loop
out
cmp
into
mov
sub
inc
cmp
in
in
in
rcr
mov
and
gs
push
adc
fsubp
mov
mov
test
arpl
inc
ds
imul
or
and
push
popf
jnp
push
adc
xor
cs
or
pop
push
sbb
mov
inc
retf
call
clc
das
dec
sbb
adc
add
dec
adc
outs
sub
enter
out
add
fs
popa
sub
xor
mov
dec
or
inc
or
sub
and
push
loop
(bad)
push
add
(bad)
jle
addr16
imul
mov
jmp
mov
lods
iret
pusha
and
das
jne
inc
xor
gs
push
or
imul
dec
or
pop
or
sbb
cmp
or
loope
into
test
mov
dec
int3
stos
dec
mov
push
jmp
sbb
out
inc
push
ss
gs
adc
jecxz
dec
cmovno
and
dec
or
push
mov
(bad)
jbe
push
rdmsr
pop
daa
outs
scas
outs
movq
aaa
dec
lods
or
mov
icebp
mov
sub
in
loopne
cld
xchg
jns
aas
jl
pop
adc
xor
inc
and
mov
shl
jg
pop
sbb
jo
int3
jecxz
iret
test
cmps
out
sub
jbe
dec
sub
ret
pushf
movs
div
mov
mov
scas
(bad)
imul
sahf
test
mov
stos
aad
add
pop
in
dec
or
dec
iret
mov
inc
adc
mov
imul
mov
lods
mov
cdq
stos
cmps
jne
div
xor
retf
mov
sahf
push
hlt
mov
inc
xchg
loop
lds
(bad)
pusha
add
jb
add
cld
jl
pop
adc
xchg
(bad)
or
cwde
cmps
std
fisub
jo
pop
jle
arpl
out
jno
inc
out
stc
aas
scas
in
test
pushf
ror
mov
cwde
or
imul
pop
cmovnp
add
inc
rcl
(bad)
mov
rol
cmp
cmp
inc
xchg
inc
sbb
adc
jge
xor
pop
sbb
inc
pop
fs
pop
pop
pop
out
(bad)
ficomp
xchg
and
pop
sub
rol
and
out
retf
adc
aam
int
sbb
pop
push
add
test
es
out
fcom
movs
in
enter
out
mov
mov
cmp
sbb
or
ins
adc
aas
pop
push
cs
not
dec
stc
xchg
jecxz
xchg
in
mov
mov
inc
push
and
and
cmp
xchg
mov
jmp
jae
pop
add
cmp
test
cmp
pop
dec
or
je
jns
fwait
mov
pop
push
cmp
adc
sbb
push
icebp
sbb
add
jno
ja
dec
mov
cld
add
jge
ins
push
push
adc
add
dec
imul
rol
add
(bad)
pop
sbb
jns
jle
xor
pop
add
xchg
ret
mov
gs
retf
cmp
aam
pop
das
jo
mov
and
sub
cmp
(bad)
aam
xchg
lahf
mov
bound
jae
cmp
pop
xchg
adc
lods
jo
stos
cmc
xchg
mov
jmp
cli
jp
sub
pop
aaa
call
out
mov
pusha
add
and
ds
sbb
or
add
inc
add
ds
scas
in
sub
shr
adc
and
jge
es
sub
adc
inc
std
jge
jle
ss
adc
loope
shr
inc
push
ins
xor
mov
lods
iret
xchg
mov
add
movs
xlat
xchg
jns
pushf
inc
or
adc
in
aaa
inc
or
dec
adc
into
xchg
rcl
cs
sub
mov
add
int
ror
inc
repnz
(bad)
bound
add
pop
cmp
push
xor
sbb
push
arpl
inc
push
add
sbb
add
adc
lods
into
mov
sbb
xchg
in
fild
fist
sub
sub
ss
pop
add
push
shl
push
push
out
jns
jno
cmp
xor
icebp
mov
or
(bad)
jge
and
je
into
lods
jmp
leave
scas
or
push
add
pop
sub
inc
and
pop
mov
sub
nop
jecxz
outs
cmp
inc
push
out
(bad)
bound
and
pop
sbb
inc
clc
mov
call
in
hlt
data16
add
in
sahf
(bad)
jmp
(bad)
dec
sub
cli
mov
lods
std
movs
xlat
xchg
out
cld
scas
in
pop
test
pop
pop
ds
cmp
pop
ss
pop
iret
mov
adc
mov
aad
ror
shl
hlt
outs
sbb
bound
jg
jbe
push
iret
xchg
xlat
aaa
jmp
aad
push
shr
or
adc
cmp
es
cmp
jp
out
(bad)
mov
sub
inc
or
ins
and
test
inc
or
out
fisub
inc
or
sbb
aas
js
arpl
dec
xor
out
hlt
xor
or
aas
pop
or
pop
cmp
clc
mov
pop
push
adc
ror
sbb
adc
inc
add
jl
(bad)
mov
jne
jnp
in
loopne
not
xchg
push
sbb
inc
sbb
or
je
push
fiadd
sbb
push
adc
inc
xchg
aad
(bad)
push
push
inc
xor
in
jo
jo
int3
xchg
fiadd
inc
cld
fs
xchg
out
lods
movs
mov
mov
push
outs
adc
and
inc
adc
outs
out
xlat
call
mov
test
fcomp
mov
mov
je
push
out
xchg
movs
retf
call
fwait
test
push
dec
adc
push
adc
sub
loopne
movs
xchg
(bad)
frstor
push
ds
pop
xor
ret
fwait
movs
imul
aam
retf
test
cmp
sbb
pushf
arpl
fwait
ret
xchg
int3
cdq
xchg
test
xchg
ficomp
jne
jmp
rol
mov
leave
add
dec
sbb
xchg
ror
test
sub
jne
push
repnz
int
leave
xor
add
movs
icebp
mov
jae
xchg
nop
stc
push
mov
pop
add
punpcklwd
lods
int
jmp
jbe
imul
sbb
in
push
or
or
xchg
shr
out
mov
test
mov
cmp
int
popa
add
jecxz
shl
xor
mov
xchg
cld
pop
jmp
mov
sbb
(bad)
fcomp
retf
pop
push
push
adc
fcomp
sub
cmp
xor
out
enter
bound
xchg
scas
shl
push
adc
add
movs
div
dec
adc
xor
sbb
and
adc
pop
(bad)
push
adc
jnp
imul
loopne
sbb
cmp
dec
and
movs
xlat
xchg
out
std
scas
cmc
xchg
fnstenv
movs
in
in
jmp
jl
dec
cmp
daa
dec
or
add
popf
fidivr
movs
aad
enter
rol
push
adc
sub
fisttp
fild
popa
or
sub
loop
xchg
mov
stos
in
add
xchg
push
add
or
sbb
jecxz
movs
ins
popf
sbb
mov
loope
imul
jecxz
fwait
xchg
cmp
mov
cmp
enter
or
cli
icebp
mov
and
jle
or
je
pop
inc
pop
retf
(bad)
xor
jmp
dec
jno
dec
lods
sbb
iret
adc
test
fcos
movs
icebp
xchg
ss
arpl
outs
add
jbe
xchg
test
call
(bad)
loope
aam
fistp
sahf
fadd
mov
xchg
jle
add
inc
jne
jb
ror
mov
or
dec
daa
imul
mov
out
push
ins
adc
hlt
test
in
in
ss
test
push
ds
inc
aaa
fcmovu
mov
push
arpl
fwait
icebp
test
adc
jge
xor
scas
adc
(bad)
out
movs
sbb
aas
leave
rol
mov
outs
adc
outs
sbb
push
jnp
xor
ffree
xchg
dec
jno
push
pop
mov
lds
(bad)
std
mov
(bad)
movs
pop
push
cwde
std
out
rcr
lock
sbb
and
xor
hlt
stos
repz
(bad)
iret
(bad)
mov
pop
jnp
imul
data16
(bad)
in
stos
pop
add
fstp
add
add
(bad)
test
popf
add
jl
push
adc
cmp
stos
enter
scas
pop
push
jns
retf
sahf
add
add
clc
ret
mov
into
xchg
add
cld
sbb
mov
sub
sub
dec
or
ins
imul
gs
push
push
aam
std
mov
mov
inc
fucomip
repnz
and
push
jo
sbb
das
pop
mov
pop
int
cli
mov
xor
into
mov
pop
addr16
sub
outs
movs
cmovle
mov
mov
ror
mov
aas
ins
adc
or
pop
sub
pop
data16
nop
out
mov
(bad)
retf
(bad)
fnstenv
lods
rol
scas
or
rol
aad
(bad)
xchg
jbe
jg
rcl
add
int
out
add
ins
mov
test
stc
cmps
loop
inc
pop
sbb
ss
loope
jecxz
jp
imul
jecxz
outs
das
pop
mov
ins
add
mov
sahf
int3
add
das
pop
cwde
in
xchg
aad
popf
rol
int3
stos
lock
je
pop
cmp
retf
rol
cmc
sahf
jne
fsubr
cmp
mov
add
dec
push
jbe
sbb
adc
test
xchg
xchg
push
adc
jns
xchg
aam
mov
adc
jl
pusha
pop
dec
and
and
dec
or
dec
or
push
or
arpl
dec
or
adc
ds
or
add
imul
and
inc
xor
out
pop
mov
rol
add
shr
test
jno
pop
pushf
add
and
fcomip
mov
dec
jp
cli
mov
mov
es
mov
mov
maxps
cdq
fdivrp
cmps
int3
mov
aad
jmp
jecxz
fsub
(bad)
mov
hlt
movs
jecxz
push
pop
push
and
fadd
inc
xor
pushf
(bad)
repz
mov
imul
pop
pop
or
outs
das
movs
in
scas
jmp
jle
inc
mov
arpl
out
push
data16
sbb
sub
push
cmps
push
pop
mov
or
loope
loope
mov
je
mul
aam
nop
add
fistp
stos
cmp
in
int3
mov
arpl
ror
mov
mov
jp
xor
ret
fnstcw
sbb
call
add
push
sti
or
out
outs
and
out
adc
lock
sub
pop
inc
dec
add
mov
scas
adc
test
inc
xor
gs
sub
or
and
retf
adc
cmp
or
jo
fs
push
retf
not
xchg
retf
mov
mov
mov
jmp
mov
das
lahf
loopne
pop
inc
cmp
sbb
aad
out
cmp
outs
lahf
ror
push
ja
(bad)
sahf
shr
leave
(bad)
aam
je
dec
sahf
sar
sbb
push
in
lods
out
es
xor
add
frstor
sub
pop
or
mov
mov
pop
inc
dec
imul
rol
cld
mov
clc
mov
(bad)
lahf
push
jle
inc
pushf
rcr
mov
xchg
fcomp
jge
push
jae
push
push
popa
cmp
(bad)
hlt
mov
inc
jb
inc
add
div
popf
sub
je
(bad)
mov
in
adc
push
inc
ins
aaa
push
adc
loop
ror
inc
push
push
jnp
inc
sub
add
repnz
dec
jo
ja
retf
mov
cwde
daa
nop
xlat
mov
add
ds
outs
inc
cs
or
movs
out
scas
pop
and
mov
cdq
in
lods
pop
push
or
icebp
cmps
in
retf
cmps
call
push
pop
sbb
inc
xchg
jb
and
cmp
cmc
push
jbe
shl
xchg
adc
cmc
mov
loopne
nop
ficom
aas
lods
cmp
gs
push
loope
out
jge
pop
add
les
stos
jbe
jge
enter
xor
inc
nop
cmp
mov
ss
add
out
movs
clc
mov
inc
sub
xchg
sbb
(bad)
fiadd
mov
popf
jp
or
sub
fdiv
loope
mov
pop
pop
and
cmp
fisttp
xchg
or
ret
call
lods
loope
mov
lahf
jnp
jns
clc
mov
jp
aam
out
jl
ss
add
mov
xchg
dec
sub
xor
pop
push
js
stc
test
add
push
mov
(bad)
stc
xchg
cdq
cli
movs
(bad)
pop
sbb
inc
and
loop
xchg
rol
push
adc
push
push
test
add
bound
out
dec
xor
cmp
icebp
cmovnp
add
mov
dec
call
cdq
imul
cli
add
push
and
dec
push
jle
sbb
jns
outs
xor
sbb
xor
jne
inc
sbb
cs
cmp
pusha
add
push
jbe
addr16
cdq
ror
fild
stc
fidivr
pop
imul
xlat
cli
mov
xchg
ins
xchg
jecxz
mov
into
xor
sub
(bad)
cmps
inc
or
fnstenv
sbb
call
imul
sub
xor
xchg
stos
pop
cmp
cmps
sbb
out
jmp
xchg
enter
pop
cmp
mov
mov
push
(bad)
fisttp
xchg
cmp
sbb
fld
inc
or
add
in
lods
inc
xor
bnd
pop
mov
mov
inc
je
sbb
jns
dec
and
hlt
jmp
and
cmps
pop
xor
pop
xor
(bad)
rcr
mov
push
cs
(bad)
ret
js
add
(bad)
loop
mov
jge
cmp
sbb
jnp
sbb
sub
or
xchg
(bad)
jbe
pop
aas
pop
addr16
add
adc
push
mov
scas
and
ror
aad
lock
ja
and
pop
pop
jg
out
out
sbb
ins
ja
jg
movs
lock
iret
movs
sbb
dec
adc
push
cmp
gs
and
shl
jnp
and
or
sub
daa
jno
mov
jno
mov
leave
xchg
out
pusha
cmp
fstp
jp
arpl
add
bound
lods
ret
adc
push
jnp
adc
ds
rcr
(bad)
ror
(bad)
nop
add
ins
adc
cmps
ret
(bad)
xor
push
sub
out
xchg
pop
je
js
push
or
dec
cmp
sub
jmp
out
adc
inc
popf
ret
adc
idiv
pop
xor
clc
mov
addr16
imul
ds
and
or
cdq
in
sbb
or
(bad)
mov
pop
dec
push
sub
sar
int
lock
mov
cmp
pop
dec
xor
mov
xchg
push
call
lahf
stc
mov
jp
xor
mov
scas
ror
dec
dec
push
inc
inc
dec
sbb
sub
shl
sub
push
add
inc
aaa
push
pop
add
neg
popa
pop
inc
ins
dec
and
jns
aas
jg
push
or
dec
cmp
aaa
ins
add
xor
sti
aaa
inc
out
adc
jp
or
or
hlt
cmc
mov
pop
mov
dec
test
mov
mov
mov
ins
sub
xchg
lods
loope
mov
stos
outs
dec
sub
enter
jge
add
clc
mov
mov
fsubr
cmps
retf
sbb
jmp
mov
pop
jmp
jge
cmp
out
loope
jecxz
push
xor
aaa
ins
cs
mov
(bad)
mov
cmp
inc
test
shl
mov
mov
dec
mov
push
add
into
test
pop
push
pop
aas
jecxz
scas
iret
or
xor
add
out
mov
xor
mov
push
mov
pop
push
(bad)
lods
out
mov
es
adc
lods
loopne
dec
inc
or
mov
and
mov
and
sub
retf
popf
ins
lahf
iret
xchg
xchg
jle
jnp
push
imul
cs
mov
cmp
into
scas
lods
xchg
jae
jbe
nop
dec
rol
out
mov
rcl
fdiv
out
nop
retf
(bad)
rcl
and
jmp
sti
mov
aaa
arpl
ja
out
cmps
repz
xchg
ret
ins
mov
and
ret
inc
cwde
ficomp
xor
in
stos
xor
dec
jns
jmp
and
stc
lahf
rcr
add
xchg
imul
jp
push
dec
adc
test
xchg
jo
mov
xchg
repz
mov
or
sbb
scas
out
pushf
pop
or
adc
and
pop
jno
pop
pop
mov
mov
adc
stc
or
dec
xor
jb
lods
adc
mov
pushf
dec
jp
or
in
cmps
call
and
test
fadd
xchg
imul
lahf
call
mov
push
int
xor
leave
mov
or
bsr
and
cwde
cmc
cmps
mov
jle
adc
call
popf
call
mov
sub
call
xchg
mov
fisub
xor
add
push
cmp
dec
or
inc
add
mov
or
push
adc
fnstsw
dec
push
mov
scas
in
ss
sti
cwde
xor
sub
and
stos
rcr
int3
stos
in
test
xor
data16
outs
sub
mov
lea
jbe
js
adc
or
or
lods
jecxz
xor
pusha
sar
or
inc
xor
stos
fst
aam
xchg
cld
sbb
jle
stc
lahf
cld
jecxz
mov
jmp
mov
xor
aaa
jbe
mov
dec
sub
sbb
fcmovbe
mov
pcmpeqw
rol
xlat
lahf
fucomip
mov
pop
sub
shl
push
jle
ja
mov
loope
aam
xchg
pop
dec
sub
xor
test
sahf
push
xor
iret
aam
hlt
loop
xchg
jmp
lock
neg
xchg
int
cmp
dec
mov
mov
fwait
das
sahf
ficom
jnp
push
push
mov
dec
sub
call
jo
outs
mov
jae
aam
xor
jne
dec
add
jmp
iret
icebp
mov
pop
pop
aad
jmp
xor
test
test
movs
enter
clc
loopne
out
pop
push
outs
and
in
(bad)
ds
aam
je
add
push
jns
fdivr
jne
cdq
fld
or
out
scas
jmp
addr16
rol
cmc
cmp
or
dec
jbe
add
sub
ficomp
stos
cwde
cld
fdivr
mov
inc
and
mov
xchg
push
jp
lods
add
(bad)
aaa
xchg
xlat
mov
popf
rcr
pop
cs
push
cmc
out
fidivr
add
pop
sbb
clc
mov
and
loope
out
outs
xor
ret
mov
lods
jnp
dec
cmp
mov
jo
out
mov
mov
jbe
ret
test
scas
imul
in
and
fs
push
imul
int3
mov
add
sbb
jmp
cmps
icebp
sub
inc
lea
dec
or
(bad)
xchg
pop
daa
bound
stos
fcomp
inc
das
jl
clc
clc
xchg
jp
add
loopne
scas
fistp
inc
adc
jmp
lods
call
sub
mov
adc
adc
and
xor
and
iret
sub
xlat
mov
xchg
rcr
aam
icebp
test
mov
div
xchg
(bad)
nop
fnsave
sbb
jbe
cmp
dec
xorps
daa
inc
pop
push
pop
or
inc
pop
popa
and
enter
test
pop
cmp
or
lahf
cmp
ds
mov
mov
mov
mov
js
cmp
cmp
popa
cmp
mov
cmp
adc
mov
pop
fwait
sbb
retf
mov
pop
adc
lods
jmp
addr16
stos
sbb
mov
fadd
mov
scas
lds
jne
pop
jb
popa
and
pop
cmp
jmp
aaa
jl
push
dec
adc
cmp
jbe
pop
(bad)
ficomp
cli
sti
movs
loop
xchg
out
lahf
popf
add
loop
xchg
fdiv
ror
xchg
imul
int
fild
jle
out
(bad)
push
xor
lods
push
es
mov
lods
xor
aam
mov
imul
rol
ror
scas
dec
push
push
cmps
das
imul
and
mov
pop
mov
push
adc
cmova
sar
sbb
dec
das
jg
sub
mov
(bad)
(bad)
loope
xlat
xchg
dec
cmp
nop
clc
sbb
push
jg
(bad)
sahf
(bad)
out
fimul
sub
push
xor
js
adc
jmp
inc
pop
sbb
pushf
les
lock
(bad)
mov
mov
dec
add
add
pop
add
fstp
add
add
(bad)
test
popf
add
jl
push
adc
cmp
stos
enter
scas
pop
push
jns
retf
sahf
add
cmp
xor
mov
dec
das
mov
pop
pop
mov
lods
ror
dec
dec
pop
inc
inc
dec
pop
pop
gs
ins
sub
or
adc
pop
cmp
jg
rcr
mov
into
dec
mov
in
fcom
cwde
cmp
push
sub
pop
push
jge
pop
cmp
sub
sub
in
or
and
push
pop
push
mov
stos
fadd
fcmovu
mov
(bad)
int
shl
lods
in
stos
push
and
jmp
sar
movs
call
inc
jbe
sub
sub
mov
xor
xchg
repz
sete
mov
xchg
shl
int
(bad)
or
aaa
pusha
and
and
cwde
and
das
fs
arpl
(bad)
cmps
adc
ds
in
xchg
bound
cmp
mov
cdq
mov
leave
(bad)
xchg
mov
mov
rcl
test
xor
into
mov
or
sub
out
test
adc
inc
mov
xchg
cmc
mov
fld
dec
fxch
mov
pop
xor
and
jecxz
bound
loope
inc
sub
fisubr
mov
push
(bad)
stos
in
push
es
out
mov
push
pop
and
add
ds
setns
xchg
retf
cmp
retf
xchg
je
jno
int3
movs
(bad)
mov
xchg
mov
xor
(bad)
xchg
int
call
dec
inc
add
sbb
or
lods
in
lods
popf
sbb
in
inc
and
xlat
test
mov
adc
hlt
mov
pop
ss
or
rol
cmp
shl
mov
inc
pop
fldl2t
popf
mov
xchg
cwde
dec
mov
inc
and
push
repz
push
icebp
xchg
mov
stos
call
aas
pop
sbb
dec
or
dec
adc
sbb
ins
and
pop
xor
ins
add
outs
pop
pop
das
jbe
cdq
fnsave
shl
mov
lahf
loopne
xor
ret
call
adc
lahf
fcomp
or
xor
(bad)
(bad)
xchg
imul
cmovg
sub
jns
hlt
leave
xor
and
imul
shl
mov
pushf
out
or
xor
fwait
imul
dec
push
or
xchg
(bad)
cmps
(bad)
out
nop
jmp
(bad)
xor
xchg
mov
add
push
mov
xchg
popf
inc
sub
or
mov
xchg
inc
push
push
(bad)
adc
frstor
inc
xchg
sbb
call
inc
adc
mul
cmps
leave
and
sahf
mul
js
adc
lea
pop
mov
sub
int3
(bad)
dec
icebp
stos
in
fbstp
ss
bound
adc
cmps
icebp
push
jp
jp
in
clc
call
xlat
xchg
mov
imul
lods
jne
shr
sub
rcr
repz
mov
dec
pusha
pop
and
push
push
inc
ins
xor
sbb
fdiv
mov
mov
cmps
dec
and
leave
mov
call
dec
sub
std
mov
xchg
cmp
leave
lods
dec
dec
cmp
sbb
mov
lock
scas
pop
push
or
icebp
cmps
in
enter
jne
pop
dec
push
xor
cwde
sti
mov
in
retf
mov
lahf
rol
inc
sub
and
ja
push
mov
mov
movs
pop
add
(bad)
in
xchg
into
adc
push
pushf
ret
mov
(bad)
sbb
outs
xchg
imul
pop
ins
xor
fucomi
mov
mov
push
pop
imul
xor
xchg
lea
and
sub
push
push
jp
sub
add
sub
popf
xlat
mov
(bad)
(bad)
mov
xor
fadd
ds
je
push
and
into
test
fwait
cs
retf
dec
push
push
mov
test
ret
pushf
cmp
push
lock
ds
or
(bad)
mov
out
push
xor
stos
(bad)
xchg
(bad)
(bad)
mov
mov
fsubr
and
outs
arpl
inc
ins
push
sbb
jl
cmp
fiadd
or
repz
sbb
daa
fs
pop
pusha
cmp
idiv
dec
push
or
sub
lods
rcl
pusha
and
ret
sbb
test
sahf
pop
sub
addr16
adc
sbb
or
icebp
mov
ficom
xor
xchg
jg
pop
push
not
mov
and
or
div
xchg
jecxz
rol
ret
push
cmp
or
mov
mul
push
pop
mov
mov
xchg
inc
aaa
dec
sbb
sti
nop
leave
xor
xchg
lea
inc
push
repnz
sub
fcmovbe
mov
cmp
mov
xor
jbe
sub
lods
jecxz
stc
jmp
call
lock
in
xchg
cmc
add
fistp
mov
mov
mov
enter
jnp
cmp
push
jno
sbb
inc
mov
add
mov
out
adc
jae
xchg
inc
shl
mov
idiv
(bad)
mov
(bad)
jg
jb
fs
pop
cli
fisttp
gs
mov
adc
xor
xchg
add
sbb
std
mov
cs
aaa
(bad)
sub
aaa
out
mov
fs
mov
fcomp
jb
lods
push
mov
ins
ret
push
mov
movs
in
repnz
in
sahf
mov
mul
xchg
jae
mov
sti
ror
mov
dec
gs
int3
sahf
lods
mov
sbb
aas
mov
xor
retf
rcl
imul
neg
dec
push
fwait
js
jne
inc
push
nop
(bad)
in
jbe
push
movs
mov
jecxz
in
sbb
pop
sbb
dec
test
pop
fs
push
inc
jecxz
mov
mov
cmp
or
popa
xchg
adc
stc
jb
aad
jp
fdiv
cmp
push
cmp
nop
push
sbb
das
addr16
addr16
pop
mov
fist
sbb
data16
stos
push
das
sub
scas
sar
aaa
call
lea
lods
mov
mov
inc
ret
jns
mov
inc
mov
cld
jo
test
movs
or
mov
adc
fisttp
or
mov
scas
hlt
sbb
push
fisubr
jbe
cmps
pop
fist
mov
push
inc
mov
out
lea
jb
mov
and
add
aam
fcmovb
mov
xchg
repnz
adc
adc
jae
pop
sbb
mov
cmps
push
mov
mov
xor
adc
popa
jb
aad
loop
pop
mov
mov
xchg
cmp
cmp
adc
(bad)
in
pop
mov
out
inc
pop
rcr
jae
mov
xchg
mov
out
jle
lea
stos
call
outs
inc
pop
sbb
jb
imul
test
ds
jae
icebp
stos
repnz
xchg
stos
btr
pop
ds
ror
adc
cmc
(bad)
mov
jecxz
clc
imul
sub
iret
addr16
sbb
cs
in
retf
ins
dec
jecxz
cmp
dec
outs
retf
push
xor
frstor
outs
jae
dec
test
push
icebp
add
mov
dec
js
fstp
or
retf
aaa
stc
ins
mov
pusha
aam
inc
pop
lods
movs
imul
leave
cmps
mov
sbb
aad
fist
sub
inc
cwde
xor
cli
add
daa
sub
leave
lock
icebp
in
jl
dec
popa
or
ficomp
sub
in
mov
pop
fadd
aas
dec
gs
cmps
xchg
mov
sar
(bad)
push
dec
jg
sbb
mov
fnsave
add
or
sahf
daa
inc
dec
pusha
js
imul
hlt
dec
mov
mov
and
inc
xchg
lds
popf
inc
mov
cmp
add
rcl
cmp
je
jmp
push
xchg
mov
and
add
sbb
sub
(bad)
into
iret
int
and
or
pusha
popf
push
iret
retf
imul
test
mov
sub
and
into
nop
sbb
cmc
dec
jmp
fnstsw
stos
test
xchg
or
out
ds
out
adc
arpl
mov
aam
aam
cmp
leave
add
enter
pop
nop
xchg
push
(bad)
stc
push
nop
xor
hlt
pop
mov
in
push
push
mov
dec
push
add
in
aad
movs
addr16
pushf
push
nop
xchg
mov
inc
mov
add
cmc
and
ins
nop
xor
cmc
jecxz
mov
inc
fcom
fstp
push
bound
mov
mov
pusha
je
mov
pop
movs
je
add
add
mov
push
pop
adc
inc
push
ins
jmp
nop
push
adc
repz
xchg
dec
mov
sub
jge
cmp
fiadd
outs
mov
mov
aad
movs
adc
or
or
js
xchg
push
mov
inc
jae
ins
inc
xchg
aas
scas
ret
push
xchg
sbb
leave
mov
pop
xchg
sub
stos
in
push
stos
push
retf
jl
dec
popa
mov
inc
cmp
inc
lods
xor
and
sbb
ret
ss
hlt
jnp
jg
and
(bad)
xor
fist
xor
adc
popf
call
pop
mov
inc
dec
outs
xchg
rcr
es
dec
xchg
cli
jmp
fwait
ja
test
popf
sbb
push
mov
xchg
test
cmp
mov
push
mov
(bad)
addr16
xchg
(bad)
in
push
or
ins
stos
and
fwait
lds
daa
imul
pop
fbld
and
sbb
cdq
mov
xchg
aas
ja
fsub
mov
mov
movs
or
cmc
lods
ror
lods
sahf
lea
xchg
dec
stc
(bad)
les
or
jge
pop
mov
out
sbb
loopne
cmp
lds
pop
data16
pop
stc
imul
adc
test
fisub
sbb
dec
pop
sub
enter
fst
xchg
jnp
(bad)
pop
mov
retf
pop
cs
jg
jb
mov
int3
and
mov
pop
push
or
cmp
outs
lock
xchg
fdivrp
ins
pop
or
and
pop
fiadd
xor
xor
jmp
mov
sub
push
js
adc
rcr
jg
adc
loop
ficomp
adc
or
pop
xor
(bad)
pusha
inc
call
outs
xlat
mov
loope
adc
loopne
out
imul
adc
xchg
int3
iret
mov
sbb
js
or
sti
cwde
dec
inc
xchg
and
inc
sar
add
adc
and
inc
scas
inc
sbb
lods
mov
gs
sar
sbb
test
pusha
lahf
xchg
inc
mov
test
mov
movs
dec
cmp
cmps
dec
push
ret
mov
orps
add
xor
dec
scas
and
jg
jle
mov
mov
mov
push
fldln2
mov
or
mov
mov
or
jp
scas
adc
or
and
sub
cwde
stos
sbb
jmp
sbb
mov
dec
mov
push
pop
repz
xchg
dec
lea
call
retf
fwait
das
jnp
in
out
jae
das
ja
enter
xor
je
stos
in
push
push
xchg
jp
mov
xor
push
xlat
xchg
stc
fs
pop
movs
cmp
clc
pop
ret
jb
shr
ret
or
cmp
rol
mov
arpl
xchg
retf
xor
aas
jmp
cwde
jmp
test
fwait
icebp
repz
mov
popf
push
js
stos
dec
or
pusha
or
cmps
adc
out
bound
sar
or
and
ficom
cld
jg
jg
out
mov
retf
jne
in
xor
inc
(bad)
xchg
out
in
pop
cmps
dec
loope
pop
lds
cdq
jle
xchg
adc
mov
js
dec
mov
xor
xchg
test
jle
mov
mov
mov
push
aad
mov
rcl
jg
iret
fisttp
loopne
loop
fwait
and
jmp
imul
dec
push
in
outs
xchg
xor
ret
pop
outs
shl
jge
jno
ret
jae
mov
lods
lds
push
in
mov
or
dec
mov
cdq
mov
xchg
cld
push
mov
mov
jae
mov
pop
pop
in
xchg
je
call
mov
(bad)
jns
or
(bad)
cmp
and
and
dec
fsubrp
or
pop
mov
jge
data16
in
stc
imul
out
stos
add
ins
sub
mov
mov
(bad)
jp
push
ds
jmp
stos
data16
push
jg
iret
test
pop
test
inc
adc
gs
icebp
dec
and
xchg
sar
xlat
fcomi
call
aam
xor
mov
les
fimul
push
ret
ffree
mov
arpl
jl
mov
mov
jmp
imul
aad
sbb
out
jnp
retf
sub
sbb
dec
fidivr
dec
mov
cld
pop
jg
fst
mov
push
jo
jns
inc
add
jp
bound
xor
push
jmp
in
sar
in
dec
pop
dec
xor
arpl
jb
push
fwait
cmc
js
hlt
add
mov
jb
(bad)
not
rol
inc
repz
push
gs
(bad)
jmp
sbb
lea
inc
cmp
outs
jns
stos
jmp
and
test
mov
aam
ret
sbb
push
je
add
rol
imul
dec
call
cmp
(bad)
sbb
stos
jns
lock
dec
ror
jne
adc
repz
jbe
push
pop
jno
xlat
mov
movs
push
push
ins
mov
pop
stos
cs
push
dec
loope
inc
lock
sar
or
fwait
loopne
or
mov
mov
inc
jae
xchg
repz
dec
inc
pop
push
and
mov
adc
ins
icebp
(bad)
jmp
out
mov
jno
cmp
addr16
cld
ret
shl
sub
cdq
lock
ret
stos
pop
inc
call
lock
cmp
cdq
repnz
cmp
push
cmp
cmp
mov
mov
outs
add
(bad)
enter
and
mov
js
xor
rcr
je
mov
push
(bad)
iret
add
cs
mov
and
dec
pop
dec
pop
(bad)
es
jmp
inc
and
cmp
into
pop
sbb
sub
loope
or
sbb
sti
sbb
retf
repnz
adc
mov
sub
mov
js
scas
add
sub
mov
jl
pop
imul
sbb
pop
jae
out
jg
(bad)
lods
dec
or
jo
jle
imul
inc
ret
dec
xor
mov
dec
sti
cdq
jbe
xlat
popa
xchg
mov
lds
push
cli
fidiv
xchg
sbb
mov
movs
gs
outs
jle
dec
push
mov
cmp
fdiv
mov
pop
push
outs
inc
in
pop
repz
out
fcomp
test
jno
lahf
xchg
xchg
(bad)
jmp
adc
inc
jnp
lock
out
pop
dec
pusha
cmc
das
adc
inc
jmp
inc
adc
gs
jns
pusha
loopne
jo
test
ret
out
call
hlt
inc
xor
scas
cmps
jle
rep
cmp
push
sbb
mov
(bad)
hlt
or
jb
div
and
test
out
xchg
inc
and
das
test
imul
and
fidivr
out
jnp
sbb
imul
dec
push
adc
mov
fsubr
sbb
inc
push
dec
std
lea
aad
jb
sbb
and
imul
mov
and
cli
cmp
pop
jp
jecxz
inc
ja
loope
dec
xchg
sbb
call
in
mov
(bad)
add
nop
adc
xlat
scas
es
stos
call
push
sahf
xor
or
bound
push
adc
(bad)
pop
arpl
ins
mov
xlat
fmulp
clc
jle
fs
sub
repz
out
into
push
sbb
daa
inc
and
xchg
adc
setp
lods
arpl
imul
dec
inc
iret
push
test
in
sar
das
neg
shl
loopne
push
(bad)
mov
les
popa
pop
bound
in
and
jecxz
repz
push
cmps
ret
xor
das
add
loopne
das
push
mov
pop
(bad)
pop
push
outs
lds
into
sub
dec
popf
inc
mov
sub
outs
sbb
ins
or
pop
scas
daa
push
outs
fsub
out
and
cs
push
(bad)
mov
stos
aaa
mov
retf
data16
in
mov
xlat
ins
(bad)
push
xor
jl
lock
(bad)
jae
mov
ds
mov
(bad)
fmul
dec
xor
pop
xor
imul
stos
dec
push
or
mov
jo
stc
and
xchg
sti
and
int
js
fwait
pop
jp
dec
(bad)
mov
and
lahf
bnd
push
sbb
adc
in
dec
xchg
loop
sbb
nop
or
shl
arpl
or
in
inc
pop
xor
sahf
ror
(bad)
in
xor
icebp
pop
jl
push
mov
sahf
xor
outs
(bad)
fadd
mov
pop
das
mov
test
xchg
xchg
neg
pop
add
adc
mov
movs
aas
pop
sub
jmp
aad
jmp
sub
hlt
pop
fmul
mov
mov
mov
add
fimul
pop
lds
xchg
dec
aas
sbb
sbb
jne
mov
push
dec
push
icebp
jle
popf
push
ins
lock
pop
cs
mov
addr16
fcom
or
cmc
sub
rcl
rcl
jmp
inc
aaa
arpl
icebp
rol
or
cmc
pop
mov
xor
pusha
mov
aad
in
std
int3
cs
sbb
pop
push
shl
inc
popf
pop
adc
imul
ret
test
test
push
and
xor
mov
dec
xor
and
or
test
je
(bad)
in
mov
sar
inc
cmp
stos
and
out
fwait
jb
mov
jecxz
leave
(bad)
into
cli
sub
call
out
inc
jmp
test
add
ret
xor
and
dec
mov
sub
adc
mov
inc
mov
xchg
add
sub
enter
ins
mov
xor
ins
push
push
outs
enter
push
into
mov
add
or
movs
ds
stc
mov
and
aad
scas
push
pop
ins
pop
aam
push
aad
test
mov
xor
test
dec
daa
fwait
lods
clc
lock
jne
adc
mov
adc
adc
mov
retf
pop
xchg
and
xchg
sub
cmp
lods
xchg
out
outs
and
xor
and
(bad)
pop
and
push
lods
lock
in
popa
les
push
cli
sub
(bad)
mov
stos
dec
push
cli
mov
repz
inc
call
cli
dec
sub
and
adc
xchg
lods
mov
or
mov
mov
shl
ins
mov
push
inc
lahf
in
aad
mov
mov
sub
xor
mov
mov
mov
dec
hlt
mov
adc
sub
sar
in
xor
add
sbb
out
in
lods
mov
fcomp
shl
xchg
je
js
push
cmp
push
push
sar
mov
leavew
stc
int
les
push
das
xchg
pop
out
sbb
mov
mov
cdq
mov
mov
(bad)
into
stc
cmps
mov
(bad)
aad
sbb
dec
jb
outs
ret
lods
neg
jl
or
in
std
arpl
outs
movs
sbb
inc
dec
push
xchg
loopne
adc
push
jge
fist
inc
mov
fbstp
and
cmp
jb
ins
mov
stos
(bad)
mov
aam
in
inc
inc
(bad)
fild
sbb
push
(bad)
call
ret
jns
push
mov
xchg
mov
jl
xchg
adc
cwde
jle
jns
cwde
not
dec
pop
pop
push
hlt
mov
and
mov
xor
stos
pop
add
arpl
sahf
popf
fnstsw
cmp
ss
sbb
rol
mov
or
and
call
rol
jno
pop
call
bound
movs
lods
inc
call
jbe
pop
ficom
or
cmps
fs
sub
dec
push
add
(bad)
int
fdiv
js
add
das
xor
dec
xchg
and
push
pop
fnsetpm(287
fwait
jmp
cmps
xchg
push
jb
out
add
popa
xchg
xor
mov
adc
push
int
shl
lods
fisttp
mov
iret
sar
push
jo
push
xchg
xor
aaa
cmp
or
and
or
push
add
outs
push
push
cmp
fisub
sub
jne
cwde
cmp
in
mov
inc
mov
out
mov
les
imul
jnp
dec
in
push
inc
sahf
div
lds
add
test
es
jno
in
jne
jge
xchg
popf
sub
arpl
fisttp
xor
dec
lods
inc
movs
jb
and
or
cmps
call
loopne
ins
dec
retf
call
test
and
pusha
pop
mov
jmp
inc
push
inc
inc
mov
or
lea
ins
fcom
cmp
and
mov
es
ftst
loopne
aam
add
sbb
xor
int3
mov
jns
add
scas
adc
mov
push
test
pop
cmp
inc
dec
cmc
movs
jb
popa
mov
mov
aam
pop
sbb
push
fdiv
pushf
jmp
stos
jecxz
mov
popa
mov
fimul
inc
(bad)
loope
adc
mov
fucom
push
lods
push
retf
std
hlt
es
sub
sub
and
leave
jp
inc
mov
add
push
rcr
pop
add
bound
leave
leave
pop
hlt
repnz
sub
jmp
mov
push
rol
(bad)
sub
pop
ds
sub
cmp
jb
xor
mov
mov
repz
lods
mov
arpl
inc
push
push
popf
scas
cld
ja
dec
push
call
int
adc
fstp
mov
jo
mov
in
pop
lea
inc
xchg
stos
add
mov
ret
sub
cmp
in
cmp
lods
sti
sbb
mov
or
test
push
mov
ret
and
pop
ja
in
xchg
jp
repz
les
sub
sti
rcl
pop
xlat
pop
aad
add
mov
loop
cdq
sub
test
aas
and
mov
inc
sbb
xchg
xchg
push
scas
and
mov
cmp
leave
(bad)
cwde
inc
iret
xchg
(bad)
loopne
pusha
jle
mov
inc
cmp
or
xchg
iret
mov
push
mov
adc
mov
jne
and
retf
mov
(bad)
mov
cmps
test
pop
jne
or
mov
push
mov
jg
mov
fldcw
xchg
(bad)
data16
mov
pop
mov
push
mov
push
shl
sub
lea
dec
jb
leave
add
aas
int3
dec
sbb
aaa
das
imul
adc
and
jo
mov
jg
xor
call
sahf
icebp
dec
popf
inc
inc
add
inc
mov
inc
xlat
in
mov
fst
xchg
inc
sbb
xchg
push
enter
sub
outs
cmps
sub
lahf
add
cmp
mov
cmp
fmulp
call
push
and
fwait
mov
pop
adc
in
scas
push
call
jno
das
push
jg
(bad)
stc
mov
mov
test
fwait
in
retf
shl
jbe
dec
pop
and
dec
sub
inc
sub
push
lea
push
pcmpgtd
out
in
sub
xchg
mov
repnz
sub
jmp
mov
push
dec
sar
cmp
and
dec
sbb
pop
(bad)
jnp
fwait
ja
and
sbb
mov
push
mov
enter
xchg
jbe
out
pop
fisub
loope
push
ja
push
in
add
xchg
push
add
fiadd
sub
cmc
add
pop
pop
lds
jne
jle
xchg
jo
fmul
pop
mov
ret
and
push
hlt
inc
retf
ss
daa
pop
lock
mov
fmul
cmps
popf
ja
mov
push
mov
push
fbld
sti
sub
adc
and
pop
retf
and
or
and
or
es
adc
push
lds
loope
mov
sub
std
cmp
cwde
push
pop
(bad)
and
or
push
stos
xchg
ins
das
hlt
and
sub
imul
mov
jno
cmp
aas
sbb
and
loop
adc
out
out
sbb
push
test
cmp
push
inc
test
and
jmp
add
mov
xchg
fcomp
imul
loop
sbb
cmp
push
mov
mov
mov
stos
cwde
je
rcl
imul
imul
retf
add
mov
(bad)
aad
test
sbb
xor
(bad)
xor
cmp
xor
push
mov
push
jmp
mov
icebp
mov
dec
mov
push
enter
cs
sbb
push
fimul
push
ret
clc
cmp
lods
mov
movs
mov
call
test
lea
cmp
push
pop
scas
lea
jnp
ds
push
pop
sti
pop
mov
or
(bad)
jmp
inc
mov
adc
and
jb
or
pop
fnstcw
repnz
movs
fsub
sbb
dec
stos
xchg
jbe
or
xchg
jl
jle
dec
mov
dec
mov
mov
shl
loop
xor
enter
paddsb
and
mov
lds
loopne
sti
and
or
xor
mov
out
adc
dec
fcom
(bad)
and
mov
arpl
add
xchg
push
and
inc
mov
inc
movs
xchg
inc
sub
dec
adc
inc
aam
sbb
jae
cmp
rol
in
xchg
lea
adc
adc
add
pmaddwd
rcr
movs
xchg
push
stos
push
xor
cmc
ins
rcr
fisubr
or
pop
mov
pop
aam
out
inc
fbld
sbb
adc
and
fadd
mov
jge
call
lds
mov
paddd
out
sub
inc
mov
push
or
inc
scas
cdq
arpl
xor
lds
loop
jmp
add
call
mov
unpckhps
xor
pop
mov
adc
xor
aaa
out
xchg
xchg
mov
dec
mov
mov
dec
sar
or
repnz
mov
sub
jecxz
stos
inc
xchg
jle
jae
ins
cmps
in
pop
retf
cmp
adc
and
lods
sahf
test
in
sbb
sub
xor
cli
or
push
adc
ds
pop
xchg
lahf
ins
fcomp
retf
xor
add
cmp
cmp
rol
mov
ja
xchg
rcl
xchg
js
pusha
fiadd
xor
sbb
push
adc
pop
fisttp
cld
sub
aas
push
(bad)
pop
mov
repnz
push
cmps
popa
aad
std
xchg
pushf
inc
mov
data16
adc
out
add
xor
and
dec
and
xchg
pop
mov
test
or
pop
xlat
pop
mov
jge
lods
movs
(bad)
es
push
mov
sar
js
sub
jns
xchg
jg
lea
xchg
xchg
ja
aaa
jne
fs
jp
jge
jo
and
or
push
retf
jo
gs
push
cmps
jo
or
add
jbe
ds
xor
stos
xor
pop
mov
xor
scas
mov
sbb
pop
(bad)
ret
out
lock
fild
jecxz
xchg
jae
jg
mov
or
pop
mov
push
sar
or
pop
adc
pop
sub
jnp
es
xchg
sub
fidiv
and
call
push
add
les
ret
push
mov
jnp
push
mov
add
xor
ss
xor
push
test
test
push
ror
lods
push
add
dec
xchg
outs
mov
mov
jo
inc
test
sbb
inc
jmp
pop
jecxz
mov
ret
mov
mov
sbb
add
mov
(bad)
xor
pop
xchg
mov
test
push
pop
test
js
push
leave
xor
cmp
stc
push
into
push
mov
cmp
loopne
and
retf
mov
or
pop
int3
sub
mov
add
test
dec
mov
add
repz
movs
mov
mov
in
dec
movs
jns
push
add
push
mov
mov
pop
mov
xor
add
xchg
jae
ss
xchg
imul
nop
jbe
sub
jmp
jns
add
neg
outs
fsubr
dec
xchg
push
neg
dec
test
mov
repz
(bad)
sub
ds
sub
(bad)
push
mov
sahf
stos
cwde
dec
scas
sahf
mov
aas
mov
out
ss
mov
cmps
call
ror
or
in
add
adc
and
xor
add
or
mov
lods
jle
cs
add
cs
xchg
dec
mov
fild
or
call
mov
push
mov
sahf
dec
movs
imul
test
lods
cmp
js
cmp
pop
(bad)
xor
sub
jmp
mov
push
cmps
mov
mov
sub
push
into
das
ins
fld
out
or
fimul
fldcw
lock
out
mov
ficom
repz
mov
fist
cmp
cmps
lahf
(bad)
(bad)
cmp
daa
stc
pop
movs
gs
or
or
es
mov
xlat
sub
and
push
cmc
xchg
cmp
cs
sbb
sub
out
adc
cmp
and
pop
mov
stc
or
adc
(bad)
or
(bad)
sub
popf
imul
pop
neg
push
sbb
jecxz
sahf
inc
rcr
jg
cdq
addr16
loop
mov
je
or
iret
push
test
xor
cmp
int
out
call
inc
(bad)
int3
pop
test
and
enter
dec
test
jg
fs
xor
(bad)
cs
push
adc
cmp
inc
out
cmp
jb
arpl
sbb
adc
ins
xlat
xor
imul
movs
lahf
inc
nop
clc
inc
(bad)
sub
add
sub
pop
sbb
jns
push
stos
mov
pop
call
pop
mov
jge
ja
push
fidiv
pop
or
push
lea
leave
add
retf
idiv
adc
or
ins
(bad)
sub
inc
rcl
outs
test
xor
in
inc
ret
or
jecxz
shl
push
mov
dec
stos
mov
push
or
cmp
je
sub
push
mov
dec
clc
and
or
sub
push
add
fmul
(bad)
push
fiadd
inc
fidiv
imul
arpl
ror
fadd
stc
cs
mov
movs
call
in
sahf
imul
sub
and
lds
adc
sub
or
or
int
pop
or
push
retf
xor
icebp
add
or
cli
dec
rcr
nop
call
rcr
add
dec
movs
jmp
add
add
inc
mov
test
push
iret
cmp
jle
mov
call
pop
mov
mov
fwait
data16
sub
pop
mov
sbb
and
sub
xor
dec
mov
jno
sahf
xchg
jl
hlt
and
or
out
cli
sub
sbb
(bad)
fcom
in
stos
xchg
ins
iret
xor
stc
push
mov
test
mov
movs
popa
repnz
stos
jle
jne
loopne
icebp
inc
lds
xor
jg
imul
fiadd
pop
inc
mov
inc
(bad)
push
mov
popa
int
repz
xor
mov
push
ret
sub
sub
push
xchg
dec
mov
enter
lods
inc
mov
push
shr
sbb
cmp
lds
pop
in
pop
scas
jg
in
inc
(bad)
push
mov
jne
jae
adc
outs
lods
xchg
cdq
inc
stos
popf
imul
mov
fld
loopne
mov
jle
inc
fdiv
xor
sbb
and
aaa
in
push
mov
mov
jmp
icebp
push
rol
repz
movs
(bad)
retf
jae
cmp
xor
adc
jecxz
or
dec
aam
adc
int
test
mov
mov
sbb
add
mov
outs
and
movs
and
clc
ss
jp
je
xor
cmp
pop
stos
lahf
inc
mov
mov
push
ret
cmp
jne
xchg
inc
retf
push
mov
call
inc
mov
sub
sub
in
test
xor
sub
fwait
inc
lods
xchg
xchg
mov
fist
call
jbe
hlt
pop
fadd
out
fidivr
loop
fldenv
sub
xlat
test
loopne
inc
aad
int3
dec
mov
leave
outs
test
inc
mov
mov
and
push
lods
cdq
inc
mov
cmp
pop
icebp
pop
mov
jge
jle
in
mov
sar
or
clc
jle
imul
dec
mov
outs
lock
cmp
iret
lods
mov
xor
pop
mov
xchg
addr16
fmul
cwde
inc
cmps
ja
cmp
push
mov
clc
add
clc
js
outs
test
pop
mov
inc
mov
push
push
adc
jecxz
mov
ja
call
inc
fidivr
jmp
sbb
push
scas
jne
(bad)
(bad)
jle
call
int
std
mov
fnstsw
push
sbb
sti
add
push
(bad)
xor
mov
jp
test
mov
jecxz
xchg
imul
mov
jg
or
xor
pop
mov
lock
or
sbb
loopne
or
xor
xor
push
mov
adc
push
mov
sbb
std
dec
cmp
rol
paddd
cmp
jl
xchg
dec
(bad)
pop
test
ins
fsub
jmp
and
sub
sbb
clc
xor
cld
scas
xchg
xchg
dec
ret
outs
mov
mov
retf
aaa
adc
add
xor
in
pop
mov
sar
xor
push
xor
sar
add
(bad)
push
xchg
fwait
ja
int3
sub
loopne
mov
test
stos
lahf
addr16
iret
pop
mov
js
jp
(bad)
xor
out
xor
cmp
aas
jmp
push
test
jg
pop
mov
adc
pop
mul
in
(bad)
sub
xchg
lods
out
cmp
cmp
jecxz
ret
das
not
inc
mov
rcr
fstp
aam
loop
les
push
mov
dec
lds
loope
pop
(bad)
push
(bad)
xor
push
fstp
jp
outs
(bad)
jns
sti
inc
sar
daa
push
or
repz
cmp
xor
cmp
es
mov
dec
lods
jl
or
ss
cmp
jmp
(bad)
sub
out
data16
mov
rcr
lahf
inc
mov
jg
fwait
jge
imul
lods
mov
push
inc
rcr
mov
mov
xchg
je
mov
inc
mov
jbe
jnp
inc
fisubr
in
push
shl
inc
mov
imul
jmp
std
pop
mov
fisub
and
pop
mov
jmp
(bad)
add
inc
lds
ins
sar
imul
add
sar
adc
or
cmp
sbb
inc
mov
popa
rcl
js
mov
or
jno
ins
rol
pop
or
xchg
dec
fiadd
rcr
inc
or
aas
retf
cwde
inc
fdiv
mov
sub
std
add
dec
mov
mov
movlhps
sub
retf
std
cmp
push
inc
out
dec
fild
adc
cmp
sar
jne
popf
bound
ret
xchg
dec
in
dec
enter
loopne
add
in
and
retf
dec
test
fcomp
int3
inc
(bad)
daa
jecxz
jmp
out
push
ret
daa
or
push
fstp
pop
cmc
add
scas
call
sub
ss
mov
loope
mov
enter
test
lds
popf
jno
je
xchg
inc
adc
pop
mov
cs
pop
mov
gs
mov
mov
lock
fadd
std
inc
xlat
jbe
and
xchg
xchg
push
clc
push
mov
mov
ins
enter
dec
fstp
jae
dec
lods
xchg
jb
jmp
repnz
mov
mov
cli
pop
mov
push
out
mov
inc
mov
pop
mov
xchg
popa
ret
or
xlat
push
mov
xchg
ja
inc
xchg
inc
mov
mov
(bad)
sub
inc
int3
cmp
std
xor
fld
add
dec
mov
out
pop
lods
inc
mov
int
adc
push
ficomp
ins
fsubr
stc
pop
add
push
aad
loope
pop
sbb
and
dec
mov
mov
daa
loop
stc
pop
mov
mov
fiadd
cld
pop
stos
mov
fimul
sbb
push
mov
sar
and
push
popf
inc
retf
je
cmp
dec
stos
cdq
js
cdq
dec
(bad)
jp
and
pop
mov
mov
mov
pop
mov
cs
mov
jnp
mov
cmps
adc
in
add
cmc
and
xor
in
inc
retf
inc
(bad)
jns
cmp
push
or
in
dec
mov
push
shl
adc
rol
or
ror
div
xchg
mov
xchg
lahf
inc
fdivr
sbb
add
fiadd
clc
push
rol
int
xchg
adc
push
xor
or
pop
test
stos
cwde
outs
mov
jb
inc
mov
retf
push
mov
aaa
pop
les
out
dec
fst
sub
and
sti
push
inc
lds
int3
or
cmp
or
pop
mov
into
cmp
push
mov
daa
sbb
dec
movs
scas
mov
xchg
outs
aad
test
cmps
(bad)
push
cli
das
xor
mov
imul
lahf
mov
movs
mov
or
dec
mov
nop
outs
fbstp
add
jmp
jecxz
push
stc
add
clc
jno
dec
test
lahf
(bad)
push
xchg
ins
mov
mov
bound
mov
mov
mov
aad
mul
cmc
sub
cmp
pop
lods
fwait
dec
movs
(bad)
pop
test
jnp
mov
aam
xchg
scas
jl
jle
psllw
ficomp
cwde
test
aaa
adc
cs
(bad)
cmp
dec
push
xchg
stos
js
fwait
fwait
dec
cmp
sbb
xor
cmp
sub
in
or
and
out
or
jge
or
lods
(bad)
jnp
dec
mov
add
loop
or
jmp
out
pop
cmp
out
dec
mov
sbb
sub
outs
mov
jecxz
mov
jp
jnp
ins
adc
sub
dec
stos
mov
cmp
inc
mov
jns
dec
fidivr
out
adc
sub
ficom
aaa
xor
pop
ror
shl
div
(bad)
mov
mov
xchg
dec
int
call
fadd
repz
jne
sub
adc
daa
sbb
cmp
loope
call
test
ja
daa
add
cld
jp
add
xlat
cmp
push
mov
xor
mov
in
push
cmp
fwait
jge
dec
mov
lahf
push
mov
test
jbe
jl
jne
cs
xor
jp
mov
mov
int3
scas
mov
adc
pop
loope
mov
(bad)
sub
add
lock
scas
mov
jo
and
ret
push
mov
arpl
repnz
(bad)
imul
imul
mov
mov
stos
gs
xchg
js
out
and
hlt
dec
ficom
mov
jecxz
fstp
add
es
push
int
sbb
cmp
stc
sub
aas
loope
fsubr
fisubr
or
xor
cli
add
dec
mov
jnp
out
jg
je
xor
out
or
lods
lahf
lahf
jge
idiv
mov
pop
mov
pusha
adc
cs
cmp
dec
(bad)
xor
xor
push
and
sbb
ins
mov
xor
sub
out
pop
mov
push
or
repnz
cmp
and
and
in
psubsw
jecxz
popa
stos
push
mov
mov
ds
jb
mov
fisttp
out
ds
mov
psrad
add
jmp
adc
mov
add
out
cs
sub
das
sbb
pop
stos
in
mov
je
xor
sbb
movs
mov
mov
pusha
mov
imul
mov
movs
scas
scas
outs
sub
xor
icebp
pop
sub
(bad)
cmp
pop
iret
jnp
push
mov
fwait
xchg
je
mov
dec
movs
inc
fimul
push
les
xchg
inc
sti
push
or
leave
aaa
loope
repnz
jmp
lock
or
js
jne
cmp
and
out
cmp
sbb
push
lds
jbe
xor
jns
ins
mov
ja
daa
adc
push
adc
push
mov
push
mov
jl
sub
out
cmps
jg
jb
test
lods
cdq
rcr
aam
mov
fs
xchg
inc
or
mov
dec
mov
mov
mov
cmp
push
pushf
dec
mov
ret
cmp
jns
push
push
xchg
imul
jmp
popf
inc
(bad)
sub
sub
add
pop
aaa
cmp
and
dec
sti
dec
retf
push
nop
inc
cmps
mov
mov
(bad)
(bad)
daa
out
in
cld
nop
lahf
inc
mov
mov
lahf
(bad)
fild
int
add
sub
pop
or
inc
rol
cmc
cmp
xor
dec
test
repnz
xchg
or
fdivr
cli
push
jmp
out
sbb
adc
push
(bad)
lahf
(bad)
call
pop
xchg
xchg
xor
cmps
je
jge
icebp
inc
rdpmc
jmp
mov
jmp
rcl
cwde
popa
aam
pusha
ror
add
aaa
pop
clc
pop
mov
std
es
or
adc
and
inc
ret
cmp
cmp
mov
test
gs
cmp
es
sub
(bad)
sub
push
stos
xchg
xlat
xor
jb
xchg
jae
dec
out
inc
xchg
shl
ds
sub
dec
xlat
and
pop
rcl
adc
stc
cmp
(bad)
adc
xchg
arpl
push
(bad)
and
add
stos
mov
xchg
cdq
jl
pop
mov
test
fcomp
pop
mov
cmp
ror
push
stos
fisubr
div
out
cmp
add
pop
cmps
xchg
rol
mov
xchg
push
cmp
sub
icebp
pop
or
add
pop
test
stos
cdq
jb
dec
mov
sub
push
mov
mov
aam
shl
imul
mov
mov
js
add
cmc
and
ins
test
rol
dec
cmp
dec
mov
xchg
jecxz
out
lods
fwait
jne
jns
call
icebp
jae
call
outs
mov
lds
call
and
lds
sub
pop
call
add
pop
hlt
xchg
nop
dec
cmps
jo
cmp
pop
sti
add
sub
pop
jmp
mov
(bad)
add
or
mov
nop
lahf
push
stos
dec
mov
fidiv
adc
cmp
js
xor
out
push
rcl
jl
pop
lds
sbb
xor
dec
in
mov
gs
outs
mov
call
js
mov
pop
sbb
and
pop
cmps
gs
xchg
jns
jo
add
mov
mov
imul
pop
into
xchg
xchg
outs
fcomp
pop
jmp
xchg
xchg
xlat
jle
xor
push
adc
sti
pop
mov
xor
repnz
mov
cmp
inc
mov
ins
sar
xor
cmp
dec
rcr
clc
mov
jge
stos
xor
adc
ret
das
out
jnp
inc
mov
cmps
xchg
inc
mov
nop
jno
in
ds
mov
or
xor
dec
mov
arpl
dec
(bad)
jno
inc
mov
pop
mov
ins
mov
adc
lds
cmp
or
sub
imul
dec
mov
rol
xchg
push
add
movs
(bad)
mov
push
adc
and
adc
xor
js
adc
xor
xor
push
push
sbb
ficomp
div
pop
ficomp
imul
xchg
enter
es
fisttp
sbb
stos
in
mov
sub
dec
minps
je
cld
mov
pop
les
pop
add
std
dec
or
add
out
shl
nop
aam
enter
mov
jb
jmp
stc
sub
push
adc
int
pop
add
jns
pop
out
(bad)
fidiv
jmp
cmp
jb
xchg
into
xchg
aam
push
pop
or
and
add
je
je
fs
cmp
dec
push
or
je
jmp
adc
sbb
push
adc
push
jbe
mov
imul
sbb
and
add
inc
sbb
mov
cmp
ds
dec
or
pop
sbb
inc
pcmpgtd
cmps
sbb
js
int3
dec
fld
mov
(bad)
mov
mov
repz
or
xor
sub
mov
push
enter
adc
sbb
and
sbb
mov
xchg
fistp
call
ja
xor
jg
pushf
lds
das
dec
add
pop
rol
dec
mov
mov
(bad)
sub
or
adc
xchg
ja
jnp
ja
imul
mov
out
mov
clc
test
push
aad
xlat
or
rep
fmul
fisubr
cmp
inc
not
adc
arpl
test
div
mov
xchg
aam
or
dec
and
das
ja
cmp
push
mov
fimul
dec
add
pop
pop
sub
inc
add
pop
retf
(bad)
add
iret
mov
jp
hlt
pop
add
dec
adc
sti
mov
inc
out
xlat
bound
sub
push
sbb
rcl
test
sbb
inc
mov
ss
imul
add
scas
loopne
std
lahf
int3
mov
hlt
pop
sbb
test
fwait
repnz
sbb
je
inc
or
imul
mov
scas
das
adc
or
inc
adc
inc
das
pusha
repz
in
mov
add
mov
xchg
(bad)
mov
mov
test
pop
sbb
out
mov
stos
test
sahf
(bad)
xchg
stos
mov
mov
shl
or
inc
cmp
add
mov
imul
call
ins
and
call
into
add
cmp
jno
inc
add
es
cmp
gs
movs
add
push
div
lahf
jne
ja
fcmovne
pop
pop
sub
cwde
rol
mov
retf
imul
loope
jge
ins
push
inc
sub
push
mov
sbb
dec
or
cmp
test
ss
pop
pop
mov
lods
sbb
cwde
retf
add
rcl
jge
sti
and
mov
aam
pusha
or
mov
sbb
(bad)
mov
cmp
leave
xchg
fs
mov
jbe
jo
movs
and
rcl
xchg
xchg
inc
fst
jnp
push
xlat
sahf
(bad)
fidiv
fcomp
daa
push
movs
(bad)
enter
mov
ins
mov
cwde
inc
pop
push
in
add
scas
inc
adc
jae
jne
vmovaps
jns
fstp
das
pusha
push
xchg
mov
(bad)
mov
test
add
xor
or
push
or
push
inc
scas
cli
mov
and
adc
adc
xor
xchg
cli
mov
clc
fwait
enter
mov
push
add
xor
lods
sub
or
test
inc
test
retf
out
mov
leave
mov
(bad)
lahf
cld
fsubp
mov
dec
or
cli
xchg
mov
mov
neg
stos
imul
in
sub
inc
and
push
es
add
outs
div
or
mov
cmps
les
ja
out
popf
ret
cmp
jns
cdq
jnp
mov
xchg
push
lahf
fst
jmp
push
into
mov
mov
inc
out
or
mov
loopne
call
int3
aaa
ins
das
push
adc
mov
mov
pop
mov
cmp
scas
std
and
outs
ds
scas
std
mov
sub
push
(bad)
mov
sub
std
xchg
fimul
in
and
rcl
jge
ins
sar
jl
xor
outs
sub
pop
test
inc
sbb
sahf
hlt
mov
aaa
push
adc
or
xor
mov
or
inc
mov
jle
popf
xchg
rcl
cwde
jmp
daa
jl
inc
add
mov
xor
jae
jle
out
mov
jbe
dec
outs
sub
lds
retf
cdq
fiadd
inc
in
imul
cld
movs
out
push
jnp
fisttp
adc
xor
pop
mov
ds
push
cmp
int
outs
sub
mov
mov
mov
int3
xchg
loope
pop
add
pop
dec
xchg
stc
mov
imul
out
mov
scas
idiv
hlt
pop
pushf
fmul
jl
sbb
mov
xchg
ss
push
cmp
loope
retf
push
push
adc
sub
aaa
mov
ret
sbb
lock
jl
outs
adc
mov
push
adc
jb
jle
rep
fmul
outs
cmovge
cwde
cli
test
or
lock
jno
gs
aam
pop
cmovo
jl
adc
fmul
outs
sub
adc
clc
mov
cwde
xlat
test
jl
ficom
adc
pop
pop
dec
push
cmp
pop
push
ficomp
dec
or
stos
in
add
xchg
enter
rcl
test
stos
repnz
pop
out
movs
stc
and
push
push
push
imul
icebp
mov
mov
enter
mov
test
lahf
fnstsw
clc
mov
(bad)
out
mov
jp
in
jb
ins
sbb
pop
pop
dec
aas
sub
psubusw
dec
or
loopne
pop
inc
xor
cs
addr16
and
outs
or
or
pop
sbb
inc
jb
jne
push
sub
adc
push
push
sbb
dec
out
xlat
movs
stc
mov
jge
inc
sbb
jp
dec
or
shl
fwait
mov
push
ja
jnp
inc
jge
ss
in
stos
loope
int
dec
or
jbe
addr16
sbb
mov
mov
les
fdiv
dec
mov
xchg
icebp
hlt
mov
mov
jmp
jb
hlt
mov
test
sub
out
stc
das
ins
pop
inc
pop
or
dec
jmp
(bad)
test
aas
sub
add
in
add
mov
mov
push
daa
jo
inc
out
int
jno
push
in
sub
dec
sub
sbb
ss
aaa
dec
or
push
xor
test
and
dec
or
ss
(bad)
sahf
call
push
adc
push
sbb
or
retf
mov
repz
cmp
shr
push
push
adc
imul
lds
enter
out
mov
test
mov
stc
mov
xchg
loope
int3
xchg
xlat
jns
test
or
clc
mov
pusha
es
jmp
adc
(bad)
xchg
imul
or
mov
scas
in
mov
stos
in
add
outs
sbb
sub
pop
pushw
ins
and
das
ins
ss
bound
push
dec
mov
mov
inc
jmp
lods
(bad)
int3
xchg
hlt
mov
jo
mov
in
push
ins
loopne
jb
loopne
rcr
push
loop
ret
iret
test
retf
std
scas
in
mov
test
add
test
addr16
sub
mov
mov
add
push
arpl
push
ss
out
sub
inc
xor
lds
xlat
loope
xchg
icebp
xor
push
aaa
jo
adc
jnp
push
mov
and
fsubr
das
es
sub
jo
xchg
inc
sbb
mov
xchg
stos
ret
lds
pop
sbb
cmp
adc
push
lahf
mov
call
fisttp
stos
loope
popa
es
int
out
pop
mov
in
test
xchg
enter
stos
enter
out
rol
dec
jmp
mov
ficom
popa
add
inc
fs
popf
cmp
scas
int3
in
test
aam
gs
push
ss
popf
icebp
rol
xchg
in
pop
stos
call
add
jno
iret
addr16
xchg
aas
data16
push
mov
jne
leave
stos
cdq
(bad)
add
fnstenv
push
inc
add
fcomp
mov
dec
loopne
(bad)
xchg
cmps
les
mov
retf
ficomp
push
ins
inc
add
dec
or
stos
in
push
mov
leave
stc
ja
imul
fisttp
loope
out
inc
adc
push
push
push
inc
sub
(bad)
adc
and
jns
test
cwde
xlat
mov
movs
xchg
icebp
fstp
dec
aam
in
fs
jne
repz
pop
dec
sub
cli
pop
sbb
cli
or
mov
scas
in
mov
lds
mov
das
ja
dec
bsf
mov
cmps
lds
std
int
call
or
gs
push
fistp
mov
push
dec
sub
arpl
movs
std
mov
sbb
cmp
nop
fbstp
cmp
add
arpl
or
push
pop
cs
addr16
xor
or
mov
es
sub
jo
xchg
push
pop
or
outs
int
adc
arpl
bound
js
pop
out
pushf
cs
or
enter
dec
sub
es
pop
hlt
mov
cdq
fisubr
stc
mov
(bad)
and
and
rcl
push
adc
fs
inc
and
mov
cmps
leave
xchg
cwde
or
xchg
nop
repnz
int3
mov
dec
cmp
jle
stos
call
push
pop
test
jmp
mov
arpl
mov
cmps
xchg
mov
xor
sub
cmp
cld
movs
out
pop
pushf
ror
fdiv
mov
push
mov
or
scas
int
loopne
in
xor
stos
dec
push
pop
xor
das
pop
and
mov
sbb
sbb
jbe
mov
add
xchg
ror
push
inc
adc
or
inc
adc
sub
sti
xchg
push
pop
xor
ins
jbe
fwait
aam
jnp
bound
stos
enter
aam
enter
sub
inc
and
mov
or
push
jmp
addr16
push
add
pop
cmp
ja
outs
or
sbb
dec
pop
jle
mov
mov
add
jp
add
loopne
lds
xchg
in
aad
mov
inc
or
aam
aad
aam
daa
push
xor
pop
imul
out
xchg
mov
mov
sbb
(bad)
stc
mov
rcl
cmp
push
xor
xchg
retf
movs
(bad)
xchg
jno
jl
pusha
daa
jle
cmp
mov
push
adc
movs
(bad)
shl
inc
mov
es
xor
xor
xor
adc
jae
jne
mov
js
fldcw
pop
and
adc
scas
int
xor
dec
and
call
and
lds
stos
xor
ins
cmp
dec
cmp
rol
xor
pop
enter
mov
inc
sbb
pop
jl
pop
push
sbb
xchg
rol
popa
xchg
mov
mov
(bad)
popf
adc
add
test
test
mov
mov
loopne
push
es
and
pop
cmp
mov
mov
push
adc
xchg
fstp
mov
les
jno
push
leave
stos
in
scas
(bad)
lea
pusha
sub
jl
data16
cmc
xchg
imul
fdiv
xlat
xchg
xor
mov
div
or
icebp
mov
adc
cmp
in
ss
std
popa
adc
lock
push
jnp
add
xchg
jmp
icebp
nop
ret
or
mov
adc
jle
fcomp
sub
leave
and
cmps
hlt
cmc
pop
adc
push
push
pop
je
push
push
out
sub
test
mov
mov
shl
daa
fs
mov
and
mov
push
es
outs
dec
rcr
or
es
sub
ds
push
cmps
cmc
mov
es
jmp
mov
outs
and
add
cmp
test
xchg
inc
push
jl
std
sahf
cld
sti
mov
pop
sub
or
xor
adc
outs
sub
mov
dec
shl
dec
push
cmp
adc
stc
mov
or
aas
mov
stos
jmp
fst
mov
out
loopne
out
inc
mov
cwde
out
cmp
cmp
and
add
push
inc
inc
aas
mov
repnz
xchg
int3
sub
xchg
adc
sub
outs
aaa
dec
cmovl
ss
rcr
mov
jo
dec
and
orps
adc
adc
adc
xor
pushf
call
mov
cdq
enter
jbe
jp
rol
mov
sbb
pusha
push
in
(bad)
call
xor
jbe
jno
inc
pop
ins
leave
movs
aad
pop
das
ins
pop
add
mov
cmps
iret
add
repz
jo
repz
xor
and
jb
xchg
pusha
and
pop
pop
cmp
inc
or
cld
push
and
enter
cmp
inc
loope
mov
dec
dec
hlt
test
(bad)
mov
jne
mov
dec
push
pop
adc
push
es
dec
stos
outs
sub
mov
pusha
icebp
xchg
jmp
retf
mov
mov
(bad)
std
mov
div
ss
pop
sub
mov
cmc
inc
add
adc
mov
lods
fild
xchg
sbb
mov
loop
fs
sub
sub
inc
xlat
test
add
popf
(bad)
xchg
cmps
lds
mov
call
leave
sub
push
push
aaa
js
lahf
push
or
js
lods
into
jmp
out
mov
xchg
mov
aas
jge
cmps
iret
and
fimul
(bad)
pushf
inc
mov
stos
in
sbb
push
lds
cs
inc
and
aam
dec
mov
xchg
xchg
xchg
pop
xor
mov
inc
push
jle
mov
push
and
mov
pusha
cs
dec
sub
repz
lea
js
cdq
cli
mov
xor
xchg
(bad)
jl
mov
or
dec
adc
or
rol
dec
or
inc
push
push
sbb
in
jne
mov
sub
add
pop
sub
jo
ins
push
dec
or
fs
sub
(bad)
lods
out
jmp
arpl
dec
jne
fstp
and
out
iret
mov
cmc
and
mov
into
xchg
sbb
sub
dec
dec
mov
cmps
jb
fistp
rol
sbb
outs
sub
jne
mov
test
mov
xlat
xchg
mov
sbb
arpl
ins
push
dec
ret
aaa
jmp
jo
scas
fcom
in
lahf
shl
sbb
les
xchg
call
mov
ret
adc
idiv
or
(bad)
popf
stos
in
fadd
ja
out
push
and
in
ret
sbb
mov
std
mov
push
sbb
jbe
dec
sbb
test
mov
jecxz
adc
pop
sbb
xor
imul
pusha
inc
or
sub
add
lods
out
aad
retf
stc
xchg
push
add
ja
in
jno
inc
gs
mov
push
or
mov
jmp
sbb
and
enter
not
icebp
xchg
or
mov
out
inc
rcl
push
mov
mov
or
pop
sbb
imul
retf
jle
nop
repz
adc
xor
xor
adc
push
xor
sbb
icebp
xchg
shl
mov
call
rcr
mov
enter
retf
(bad)
xlat
mov
sub
popf
test
scas
loope
(bad)
movs
test
packsswb
mov
imul
jp
fist
(bad)
fiadd
rcr
out
sub
xchg
fdivp
xchg
xchg
into
mov
xchg
shr
cld
nop
loopne
mov
mov
mov
stc
adc
out
test
ret
mov
mov
push
aaa
js
ja
outs
imul
(bad)
mov
fsubr
push
adc
push
cld
xchg
movs
in
fcomp
fwait
sar
mov
int
icebp
pushf
xchg
aad
in
mov
shl
cmp
add
push
inc
pop
push
ss
mov
outs
or
inc
lds
pop
add
inc
inc
push
rcr
xchg
pop
outs
sub
sub
pop
iret
xchg
rol
in
mov
dec
dec
mov
jb
(bad)
stos
stos
in
mov
fs
sbb
mov
ss
in
fmul
loopne
push
retf
mov
add
loopne
fstp
or
and
mov
repz
ins
ds
push
cmp
cmp
call
rcr
jg
jmp
hlt
adc
xchg
xor
adc
mov
pop
stos
cmps
cli
data16
cmp
pop
add
xor
lock
(bad)
xor
bound
stos
ret
sahf
cli
mov
data16
scas
in
cmp
mov
xchg
in
pop
stos
not
jne
inc
inc
mov
cmp
push
js
pop
add
cmp
jge
jno
not
push
mov
xchg
xlat
ins
add
jmp
fld
fcom
push
add
cmc
xchg
rcl
mov
stos
stc
mov
cmp
div
inc
mov
in
mov
rol
fwait
add
add
bound
cwde
push
cmp
sub
dec
push
push
popa
daa
pusha
xchg
sti
(bad)
popf
pop
ss
sub
fdivr
(bad)
test
outs
push
push
pop
sub
lods
sub
cmp
jns
pusha
add
mov
xor
cmp
mov
jno
jl
sub
inc
add
dec
push
in
xchg
fbld
cmps
adc
push
dec
push
ins
and
and
push
out
mov
ins
sub
aad
pop
sbb
pop
jmp
push
jge
pop
ss
in
cmps
aaa
inc
push
adc
pushf
outs
xor
adc
xor
pop
cmp
and
fisubr
cs
and
sbb
ror
mov
movs
or
adc
mov
push
push
push
int3
lods
repz
mov
adc
sub
and
repz
push
sbb
jns
pop
sbb
aaa
jg
add
jl
mov
shl
mov
mov
loopne
(bad)
pop
pop
and
push
or
dec
daa
push
cs
push
adc
ror
ret
movs
cs
pop
aam
aad
mov
mov
push
ds
xor
push
je
test
mov
lods
jecxz
(bad)
ds
sub
mov
fdiv
jne
mov
push
push
lods
retf
and
jmp
div
sub
xor
jae
pop
cmp
mov
lods
push
or
adc
adc
mov
(bad)
lods
out
not
xchg
fisubr
test
inc
or
add
xchg
push
add
xlat
inc
frstpm(287
test
add
add
mov
add
jae
xor
(bad)
sub
out
adc
inc
pop
pop
sbb
mov
dec
inc
in
fs
or
pop
dec
je
ja
jae
lods
xor
test
dec
gs
addr16
mov
adc
xor
test
jae
dec
and
inc
cmp
loop
lods
sub
lock
xor
es
push
cmp
aas
xchg
ds
cld
mov
cs
gs
adc
retf
jbe
mov
jle
inc
dec
dec
mov
or
dec
stc
and
and
fbld
test
retf
xchg
push
jl
sahf
and
xchg
cmp
call
lea
cmp
mov
xor
outs
mov
cdq
popf
pop
movs
mov
retf
sbb
stc
pop
jno
pop
bound
jle
ret
pop
ror
int
fistp
adc
div
outs
pop
ficom
je
loop
repz
and
mov
jl
retf
jle
ret
cs
dec
outs
aad
hlt
mov
inc
adc
sbb
push
xor
inc
dec
call
pusha
pop
xchg
iret
ret
sbb
test
xchg
(bad)
cmc
push
gs
(bad)
cmps
das
leave
push
mov
sbb
or
sbb
jmp
dec
or
xchg
nop
mov
mov
rol
cmp
(bad)
gs
inc
lock
dec
or
cmps
jp
out
adc
push
xchg
fistp
xor
mov
jmp
mov
cmp
out
in
mov
inc
je
mov
xor
fs
setbe
push
fst
cdq
adc
pushf
sbb
inc
clc
push
xor
shr
adc
dec
and
retf
sub
popa
pop
xchg
sub
fld
push
pushf
xchg
cwde
sahf
or
jge
retf
mov
mov
ss
sbb
xor
(bad)
pop
scas
cwde
sub
jo
xchg
sbb
push
jl
sti
fcmovu
cmps
iret
pop
dec
push
je
mov
add
adc
inc
mov
push
push
push
push
add
outs
pop
sahf
or
and
sbb
js
jl
pop
movs
xor
ins
cmp
inc
inc
cmp
inc
mov
push
mov
xor
sbb
push
or
xchg
mov
adc
icebp
mov
sub
js
pop
lods
cmps
lods
push
cmovns
lods
adc
xchg
int3
das
movs
sub
lock
pop
mov
xor
in
dec
mov
jne
pusha
xor
or
xchg
mov
enter
pop
lods
sub
add
clc
xor
adc
mov
nop
repz
sbb
ret
or
cmp
sub
sbb
(bad)
dec
out
add
retf
adc
retf
cmp
inc
aad
mov
iret
lds
loopne
mov
mov
sub
(bad)
aaa
lahf
call
mov
arpl
cld
das
push
push
inc
fst
mov
cdq
shl
out
int3
sahf
add
or
inc
int
ds
jne
daa
(bad)
or
out
inc
push
cmps
out
movs
addr16
jle
xchg
jnp
inc
std
jno
jmp
pop
sbb
jp
pop
adc
lock
mov
mov
pop
rcl
shr
js
push
sub
and
stc
cmc
add
push
or
mov
push
and
adc
cmp
pop
scas
je
jp
fwait
push
jno
nop
jge
test
popf
dec
in
call
icebp
gs
push
jae
outs
sub
dec
sti
stos
out
or
xchg
mov
repz
xor
jle
test
mov
jnp
pop
ins
daa
das
inc
add
push
xor
cmp
sti
or
push
test
mov
aam
push
ss
add
rol
es
xor
in
daa
sub
clc
fs
mov
iret
loope
push
cmps
aad
out
ret
jae
fst
daa
outs
adc
dec
movs
xchg
xchg
addr16
test
div
push
sar
sahf
jmp
add
(bad)
shl
push
inc
inc
test
push
mov
cmp
cmp
xchg
test
mov
out
call
push
mov
sub
(bad)
daa
stos
sbb
mov
xchg
fidivr
add
adc
pop
mov
xchg
outs
and
jge
stos
call
stc
bound
cld
dec
ja
ret
fsub
xchg
popa
nop
inc
push
pop
movs
push
loope
ja
jne
xchg
xor
fild
mov
push
stc
sbb
cmps
rcl
sbb
xor
out
jecxz
and
and
fcomp
adc
xor
popa
adc
add
push
(bad)
adc
inc
push
test
stos
sbb
mov
mov
call
stos
repz
inc
xor
and
mov
in
repnz
lods
push
push
jle
xchg
dec
dec
and
aas
mov
cdq
call
and
(bad)
enter
sub
int
mov
push
pop
es
out
add
lods
lods
gs
fidivr
scas
cs
and
cmp
add
push
lods
in
jg
add
fmul
cmp
ret
sbb
ja
pop
vaddps
push
cmp
ret
xor
sub
push
(bad)
aam
jb
sahf
jns
jp
fst
xor
sbb
mov
inc
mov
dec
out
mov
into
jbe
or
popf
arpl
add
pop
jno
add
test
jmp
adc
std
lock
jno
mov
push
popa
in
test
loope
jmp
arpl
adc
enter
jmp
inc
mov
sysexit
call
jmp
mov
sbb
and
fld
push
mov
add
int3
and
mov
ror
jmp
lods
popf
push
dec
stos
fidiv
movs
jbe
dec
xchg
shl
cmp
push
cmp
or
mov
dec
test
pop
rcr
in
pop
lods
cld
push
sub
cdq
mov
outs
jnp
js
iret
pushf
inc
rol
cmps
cmp
icebp
cli
(bad)
aad
pop
dec
xchg
push
mov
pusha
mov
pop
idiv
add
jle
fdiv
sbb
mov
int3
lock
test
ss
jne
mov
shl
fstp
jle
jo
jecxz
mov
outs
lea
dec
dec
dec
mov
pop
popf
sub
loope
enter
ss
scas
fidiv
call
dec
cmp
mov
push
enter
sbb
hlt
mov
pop
aam
div
cdq
enter
and
ins
retf
inc
and
or
mov
call
cli
sbb
sub
je
shl
adc
pushf
jecxz
sbb
or
add
cmp
and
sar
ret
pop
xchg
push
leave
push
push
nop
jge
scas
cmp
cmps
jg
adc
std
into
(bad)
jb
clc
sub
jecxz
ss
nop
in
jns
xchg
sbb
cmp
out
in
int3
cmp
repnz
(bad)
mov
jb
(bad)
jmp
pop
adc
cmp
cld
cmp
push
push
je
jmp
test
xchg
inc
push
jmp
cmp
in
cmc
sub
and
inc
mov
push
hlt
faddp
loop
retf
adc
repnz
or
xor
mov
mul
xor
push
and
mul
outs
fs
pop
(bad)
ds
mov
dec
cs
jl
shl
jmp
xchg
out
out
mov
push
jne
or
loop
fcom
test
cmp
cmp
push
arpl
mov
sub
push
mov
push
dec
loop
outs
and
cdq
push
fisub
scas
mov
shl
scas
enter
mov
imul
dec
fdiv
movs
jno
in
sbb
xor
jb
into
mul
loop
repz
cmp
xor
aas
in
repz
loopne
sub
das
or
cld
jae
aas
mov
mov
xchg
add
or
xchg
fdiv
test
pushf
add
rcl
out
pop
sub
or
nop
out
jmp
imul
inc
test
(bad)
outs
dec
fs
xor
(bad)
jmp
into
aas
hlt
push
xchg
xchg
(bad)
std
ins
and
cmps
(bad)
mov
pop
pop
sbb
lods
lahf
push
push
mov
pusha
pop
dec
dec
(bad)
data16
inc
nop
sub
jo
lock
icebp
mov
pop
out
and
xchg
lock
test
jae
addr16
addr16
add
mov
loopne
mov
inc
pop
rol
mov
in
out
dec
and
mov
leave
iret
call
inc
stc
lock
sub
fs
loop
jle
(bad)
addr16
sbb
or
cwde
inc
xor
mov
mov
xor
inc
rcr
fldcw
pop
pusha
xor
int
les
stc
push
out
jne
lock
sbb
gs
sbb
mov
clc
fld
sahf
mov
push
sub
and
lods
xchg
inc
hlt
inc
push
(bad)
call
mov
xor
fwait
loope
cld
sbb
inc
daa
jp
jecxz
fdivr
and
std
xchg
dec
test
xor
jmp
xlat
int
shl
(bad)
ins
inc
stos
dec
mov
sub
xchg
sbb
sub
lods
or
(bad)
sbb
and
jb
push
ret
(bad)
jmp
mov
aas
add
lahf
test
cmps
push
pop
les
xchg
int3
cmps
cli
aam
out
mov
ror
jns
rcr
in
je
leave
pop
(bad)
fcomp
sub
fidiv
stos
test
fs
jecxz
addr16
fxam
ror
lods
jge
outs
fidivr
and
pop
jle
dec
sub
leave
mov
xor
fdiv
push
xchg
adc
and
stos
mov
mov
pop
clc
fstp
inc
fincstp
inc
(bad)
rcl
lea
icebp
dec
mov
lods
and
jge
mov
jl
and
daa
mov
dec
test
mov
add
mov
ficomp
add
fidiv
push
cmp
out
ret
dec
icebp
mov
push
pop
sub
pop
imul
daa
pushf
outs
push
xor
movs
movs
mov
mov
(bad)
fisubr
mov
js
adc
in
mov
jb
hlt
call
adc
jne
idiv
pop
jmp
sbb
jmp
or
push
jae
aad
cmps
popf
inc
pop
jecxz
call
push
es
call
xchg
or
daa
xchg
sbb
jae
cmc
stos
adc
ja
(bad)
sar
outs
ror
sbb
jns
xchg
(bad)
adc
mov
sbb
rcl
bound
ret
cmp
inc
xchg
sub
xchg
inc
int3
add
mov
xchg
mov
mov
xor
fcmovu
fcmovne
inc
jno
sub
aad
cmps
mov
push
stos
pushf
xor
cmp
pop
mov
js
push
xchg
int3
or
jmp
pop
sub
dec
jb
call
sub
or
xchg
fwait
out
test
jns
pusha
xchg
jg
jle
or
ror
cmp
lods
cmc
pop
js
jcxz
inc
cmp
lahf
retf
rol
rol
pop
rol
pop
movs
sub
lods
lods
add
not
jo
mov
xchg
inc
(bad)
fld
adc
or
xor
cli
ret
mov
dec
add
sub
loope
jecxz
mov
mov
dec
leave
inc
xchg
das
std
sub
cli
pushf
in
adc
add
fdiv
je
push
add
mov
mov
and
inc
sub
cld
xor
push
(bad)
inc
or
cmp
and
mov
xchg
call
pop
(bad)
mov
sub
push
dec
xor
jne
xor
sbb
push
dec
mov
adc
das
fs
out
pop
adc
test
in
mov
in
sbb
sbb
jg
jmp
inc
jo
mov
test
enter
fucomp
sbb
xchg
vcvtsi2sd
xchg
int3
jo
out
lods
lds
addr16
nop
cmps
inc
aad
adc
dec
or
jae
sbb
xor
int
test
jno
cli
das
fcom
ret
xor
or
push
sti
clc
int
add
xchg
aaa
retf
lock
mov
les
mov
mov
adc
and
je
sahf
jle
dec
dec
inc
std
adc
movs
push
aad
xor
aas
add
add
ror
adc
sub
das
cmp
dec
or
lahf
iret
mov
mov
(bad)
xchg
mov
outs
inc
mov
mov
test
dec
lock
inc
mov
hlt
fwait
lods
in
pop
data16
mov
arpl
mov
mov
sbb
mov
in
inc
into
mov
(bad)
aad
mov
jecxz
xchg
(bad)
mov
and
mov
and
int
rcr
cmps
push
retf
mov
and
popf
xchg
dec
test
int3
mov
add
jmp
xor
dec
fs
ret
loope
mov
das
popa
sub
sahf
ins
scas
shl
scas
mov
aad
mov
dec
or
push
hlt
repz
cmps
test
outs
add
xchg
jmp
mov
and
pop
fwait
jno
xor
cmp
(bad)
xor
je
pop
inc
aaa
push
ja
sub
adc
pop
jecxz
mov
pop
rcr
pop
enter
test
mov
shr
jle
add
shr
(bad)
or
mov
(bad)
xchg
or
push
ret
xchg
gs
or
sub
mov
test
xchg
rol
dec
dec
mov
cwde
mov
stc
cmp
rcr
cs
in
xor
les
mov
cmps
or
mov
cmp
mov
test
test
mov
in
mov
aaa
das
clc
cld
std
cmp
int
ret
sub
mov
mov
inc
add
into
sub
nop
sub
test
fldenv
push
mov
aad
cld
adc
mov
xchg
push
push
inc
push
push
sahf
add
shr
xor
fisttp
sbb
pop
scas
sub
in
jmp
cmp
and
sub
xor
adc
push
ficom
cli
cmp
shr
addr16
cmp
sbb
jae
pop
pop
sub
lock
imul
clc
ror
pop
xchg
or
cmp
push
adc
in
pushf
push
jge
or
add
shl
fsubr
cdq
ins
and
ror
sti
fst
mov
xor
fstp
fisttp
mov
jne
aaa
ficomp
adc
dec
or
jecxz
(bad)
mov
movs
pop
icebp
push
fild
xchg
xor
sub
fdiv
jecxz
push
imul
ins
mov
inc
sbb
and
mov
push
sub
inc
push
adc
inc
pusha
xor
jg
jae
mov
cmp
mov
gs
mul
pusha
ror
xchg
and
dec
sub
ror
js
cli
sahf
mov
adc
mov
xor
pop
jecxz
cwde
aas
lds
inc
push
ret
adc
ins
xchg
xor
pop
mov
lods
cs
push
jp
cmp
push
xchg
fistp
(bad)
(bad)
sub
add
jecxz
push
and
shl
or
gs
rcr
stos
xor
or
mov
jb
sbb
mov
call
push
mov
out
in
outs
mov
push
sub
scas
xchg
push
mov
push
pop
outs
mov
sub
ins
push
mov
pop
pop
push
out
adc
in
push
xchg
or
(bad)
jns
in
sub
mov
bound
popf
xlat
arpl
jmp
ins
test
mov
and
js
or
rcl
sar
aad
sub
outs
mov
in
sbb
pop
(bad)
cmp
scas
(bad)
mov
cdq
enter
mov
adc
jae
push
mov
add
jne
sbb
popf
add
inc
pop
or
(bad)
lock
dec
pop
pop
popf
dec
mov
xor
enter
push
jb
mov
mov
fistp
jmp
test
pop
mov
cwde
cmps
shr
add
enter
out
jp
pop
sbb
jmp
fmul
ja
enter
push
adc
cs
data16
or
in
scas
int3
and
bound
add
mov
and
mov
pop
xor
(bad)
(bad)
iret
jns
sub
fs
fsub
loopne
data16
xchg
dec
dec
cmp
retf
aaa
ret
loopne
inc
gs
ss
xor
js
into
lds
mov
lahf
pop
ins
fist
add
adc
rol
push
sbb
dec
jbe
aad
shl
push
dec
shl
sti
sbb
jne
pushf
cmp
sbb
xchg
(bad)
clc
(bad)
ins
inc
(bad)
in
mov
(bad)
ins
mov
ret
add
mov
xor
loopne
ret
push
and
xchg
cmp
sbb
xchg
(bad)
std
or
int
sub
fcomip
pushf
mov
and
loope
cmp
ja
stos
xor
ja
ins
cs
fcomp
xchg
dec
pop
jbe
mov
add
dec
sbb
and
dec
sahf
das
adc
(bad)
mov
sti
sub
mov
mov
xor
lods
sahf
xlat
retf
pop
sbb
pop
clc
je
xchg
fimul
cmp
cmp
push
icebp
pop
mov
out
cmps
in
mov
lock
loope
test
ins
ja
and
ss
and
retf
mov
or
or
(bad)
aam
pmaxsw
retf
xor
(bad)
je
push
jo
(bad)
addr16
adc
pop
xlat
jno
ss
mov
cmps
or
xor
push
push
out
movs
or
neg
xor
pop
jmp
sub
dec
xor
add
je
outs
mov
push
repnz
inc
xchg
out
into
push
stos
inc
clc
inc
pop
inc
imul
mov
sahf
and
pop
pushf
scas
pop
(bad)
mov
(bad)
daa
or
(bad)
mov
test
push
or
mov
mov
cmp
sub
ins
sbb
loopne
test
mov
inc
mov
xchg
xchg
das
idiv
jnp
(bad)
and
or
ja
sbb
sub
xor
pop
aam
in
mov
cmp
mov
and
push
xchg
push
pop
push
out
fisttp
in
mov
leave
adc
mov
inc
jmp
ja
mov
push
repnz
push
mov
cli
int3
gs
imul
cli
gs
inc
es
adc
and
fsubr
lods
pushf
mov
jecxz
nop
repz
push
and
pop
lods
and
sub
jb
jp
stos
jne
test
cld
ja
dec
cmps
test
pop
fidivr
(bad)
mov
sbb
imul
mov
popa
in
mov
test
addr16
retf
push
or
or
jg
test
mov
mov
outs
cmp
cmp
add
stos
pop
in
mov
xor
push
xchg
push
dec
das
fisubr
sbb
mov
add
jmp
scas
retf
inc
pop
hlt
in
bound
stos
pop
jg
loop
enter
cmp
leave
cli
or
out
push
sbb
out
enter
iret
and
cdq
into
fwait
mov
dec
shr
dec
jne
and
retf
xor
pushf
ret
loope
addr16
mul
inc
cld
cmp
dec
lea
ja
out
sbb
ss
push
xlat
les
std
fist
call
sbb
out
mov
add
popf
fnsave
jae
mov
sub
aas
jae
push
xchg
repz
loopne
and
cld
lds
dec
sub
xlat
pop
cmp
sti
mov
and
das
repnz
mov
or
add
mov
dec
add
xchg
call
not
rol
mov
pop
push
pop
push
xchg
or
cmp
outs
push
or
cmps
adc
sbb
js
adc
ins
shl
in
mov
jnp
or
push
mov
dec
gs
add
clc
loope
mov
adc
(bad)
hlt
mov
inc
jne
pop
cmp
ins
jae
adc
sti
fwait
mov
adc
rcl
popf
dec
jle
pop
xchg
dec
ret
adc
adc
cmc
cli
mov
add
cmovg
cli
out
retf
and
stos
stc
sub
scas
jb
xor
and
fild
jno
int3
mov
mov
push
sub
enter
cmp
jne
push
pop
add
popf
enter
pop
push
popf
jecxz
loop
ins
dec
or
cld
push
je
div
jae
push
mov
pushf
jbe
aas
push
mov
sbb
retf
cmp
lods
icebp
lea
mov
mov
xor
aam
loop
cmp
outs
gs
and
dec
or
nop
call
xor
pop
sbb
repnz
pushf
(bad)
out
sbb
push
sbb
mov
pop
fs
fsubr
sub
es
lods
mov
jns
adc
mov
js
(bad)
call
retf
pop
push
sub
sub
cmc
mov
ret
(bad)
pop
push
aaa
jl
pcmpeqd
enter
dec
sub
cli
movs
in
push
cld
mov
sub
jmp
jp
int
ret
push
sbb
or
addr16
cmc
jecxz
sti
sub
add
jmp
shl
(bad)
ror
sub
fld
lock
mov
shl
add
ret
cwde
xor
pop
push
fisubr
add
out
shl
test
cld
retf
stos
clc
or
cmp
fistp
push
jne
movs
or
fidivr
repz
icebp
test
jbe
jmp
fistp
lods
push
cmp
in
mov
cmp
call
add
fisub
add
repz
popf
mov
xor
in
push
xchg
shl
push
pop
sbb
jmp
push
lods
pusha
xor
test
fs
sub
or
popa
adc
push
dec
add
and
cmp
jb
jne
push
daa
bound
dec
or
pusha
xor
jnp
bound
dec
or
push
or
sbb
push
and
inc
add
std
mov
jecxz
rol
xchg
fdiv
xchg
jmp
xchg
loop
lock
out
scas
(bad)
mov
fwait
hlt
mov
fidivr
push
xor
das
jl
push
sbb
inc
adc
dec
add
pop
sub
je
sub
dec
pop
push
push
add
ja
outs
sub
jns
inc
adc
add
push
sub
stc
mov
in
fwait
(bad)
cmp
cwde
mov
xchg
push
sub
and
call
adc
fmul
scas
push
xor
arpl
sbb
(bad)
mov
push
mov
sti
mov
sub
mov
aaa
jecxz
mov
mov
es
(bad)
fiadd
cmp
(bad)
in
test
cwde
dec
sub
out
into
(bad)
aam
cdq
fnsave
aam
xchg
pop
cmp
sbb
cmps
out
inc
inc
push
dec
cmp
stos
pushf
or
dec
mov
sahf
dec
and
sti
mov
xor
mov
sbb
cmp
cmp
pop
dec
cmp
scas
xor
push
scas
loopne
call
sbb
(bad)
push
xor
pop
xchg
repz
popa
and
into
add
inc
fimul
pushf
out
imul
pop
lsl
movs
loop
and
dec
jmp
xchg
inc
test
ss
push
jg
fucom
sub
jecxz
mov
xchg
inc
sbb
mov
adc
aaa
sbb
mov
mov
sub
in
call
pop
pop
and
add
fild
inc
ins
xor
or
loopne
mov
loope
popa
cmp
icebp
fwait
test
xchg
lock
cmc
adc
jmp
addr16
sub
in
popa
aad
dec
enter
xor
popf
rcr
jl
dec
adc
rcl
scas
xor
jbe
xor
test
push
and
adc
fnstenv
das
push
xchg
pop
das
pop
sbb
sbb
lock
mov
push
or
or
cli
jmp
gs
hlt
mov
add
cmps
cmp
pop
aas
je
sub
add
addr16
sub
ss
fnstsw
push
mov
push
into
daa
mov
maxps
out
mov
das
mov
mov
jl
jae
rep
int3
and
and
aad
mov
test
das
scas
adc
or
lods
out
cmps
es
jae
les
pop
ins
aaa
jp
std
mov
lahf
push
and
and
fsub
out
add
addr16
iret
ficom
aas
pop
sbb
rol
jmp
mov
mov
add
xchg
inc
add
test
mov
cmc
cmps
jecxz
push
dec
add
jmp
mov
add
mov
adc
jmp
push
fsubr
add
cld
das
mov
sub
dec
loopne
mov
sahf
jle
ret
and
jecxz
arpl
adc
pushf
fidiv
sti
xchg
in
popf
loope
jbe
call
cs
pop
push
jl
inc
cmp
outs
sub
cmp
pop
pop
dec
movq
add
jnp
push
and
ja
push
or
cdq
retf
cmps
ror
sahf
(bad)
mov
in
into
mov
fstp
retf
lahf
cld
mov
fist
leave
(bad)
icebp
stos
call
mov
ficomp
aam
into
mov
mov
rcl
mov
or
imul
xor
push
or
cdq
int
out
mov
clc
stos
jmp
jmp
movs
leave
(bad)
lock
jmp
cld
nop
sar
stc
mov
in
xor
out
pushf
shl
ds
push
or
dec
pop
pop
pop
adc
(bad)
sti
movs
mov
sahf
cmp
adc
(bad)
das
imul
int3
mov
call
push
push
fsub
test
pop
fimul
(bad)
aam
stc
and
sub
or
icebp
mov
sub
popa
adc
pop
sub
lds
fwait
jle
sbb
cld
add
dec
xor
xlat
sbb
fcomp
int3
into
mov
cmp
add
loope
lods
loope
mov
stos
bound
data16
test
push
sub
out
ret
mov
xor
xor
sbb
sbb
cmp
je
(bad)
cmps
(bad)
mov
push
and
retf
dec
push
xor
and
fbld
jno
pop
mov
pusha
outs
ins
and
and
xor
push
adc
stc
lea
imul
mov
je
pop
fxam
fcomp
push
stc
dec
xor
hlt
mov
ror
mov
pmaxub
mov
and
call
repnz
mov
add
dec
adc
out
bound
sbb
cmps
xor
inc
jno
je
(bad)
xchg
jecxz
rol
ins
nop
(bad)
lahf
iret
lock
movs
push
add
(bad)
clc
mov
out
fistp
test
xor
xchg
test
mov
nop
pushf
pop
adc
sbb
xchg
fisttp
cli
inc
(bad)
and
(bad)
scas
push
jae
aas
hlt
sbb
pop
imul
jp
dec
or
jmp
xor
enter
imul
xchg
mov
das
dec
or
mov
arpl
xchg
adc
retf
adc
jnp
(bad)
call
loope
mov
dec
lds
xchg
mov
cmp
(bad)
mov
movs
sub
cli
fadd
inc
sahf
div
cmp
pop
scas
adc
(bad)
call
xchg
lahf
adc
adc
add
mov
fist
cmp
sar
jle
or
fidivr
jo
out
out
dec
push
sbb
std
cmps
cwde
add
push
and
cdq
cs
int3
pop
pop
dec
adc
cmps
push
je
in
fcomp
mov
inc
cmp
enter
imul
jmp
pop
ja
xor
mov
fcom
push
cmp
ror
inc
fwait
retf
xchg
repz
imul
xchg
(bad)
xchg
jecxz
ins
aaa
ja
push
jg
mov
mov
outs
and
aad
sar
adc
xchg
jmp
sub
cmp
nop
loop
dec
and
sar
push
jmp
and
retf
jecxz
mov
jno
cmp
or
mov
sub
push
adc
mov
sub
addr16
arpl
cmp
add
aam
cli
dec
cmps
icebp
dec
outs
mov
leave
(bad)
cmc
and
mov
lods
rcl
or
add
jp
push
outs
sub
dec
aas
jp
dec
or
arpl
je
js
push
adc
and
and
lds
mov
fnstcw
retf
test
mov
pause
in
icebp
xchg
(bad)
(bad)
xchg
stc
mov
imul
ficomp
into
mov
mov
lahf
fimul
ret
mov
out
in
xor
cmc
mov
mov
sbb
adc
inc
pop
push
and
dec
push
pop
pop
jle
pop
pop
push
movd
adc
push
and
aas
dec
push
jl
sub
inc
sub
je
pop
sbb
pop
pop
sbb
or
aas
xlat
cmc
mov
mov
inc
or
repnz
mov
fwait
pop
cdq
call
(bad)
push
jl
inc
mov
sub
ficomp
jg
or
xor
sbb
sbb
retf
js
jl
push
inc
push
pop
ins
adc
adc
icebp
mov
and
adc
adc
shl
push
sbb
adc
in
(bad)
test
dec
sub
cmc
sub
ins
imul
push
ss
jne
ins
cmps
cmp
sbb
and
push
inc
add
fstp
mov
add
adc
loop
out
mov
push
pop
add
int3
and
bound
outs
mov
in
sbb
push
dec
or
fcomip
mov
inc
ins
ds
mov
dec
ret
mov
aas
cli
rcl
sbb
pusha
sbb
call
adc
movs
or
in
cmp
addr16
adc
outs
sub
out
jecxz
mov
cmc
adc
(bad)
repz
push
mov
inc
mov
sub
lock
fs
out
loope
stos
loopne
pop
dec
and
call
(bad)
loope
leave
stos
inc
push
push
xor
retf
cmp
cmp
ds
or
repnz
lock
mov
ins
lea
jle
and
adc
(bad)
mov
jg
daa
arpl
or
out
popf
cmp
test
stos
xor
stc
repnz
sti
push
mov
jo
iret
fisub
and
adc
loope
loop
mov
sub
sbb
xor
xlat
sub
jae
sub
(bad)
cmps
lods
push
push
push
or
rcl
pop
xchg
xor
clc
repz
dec
inc
or
jecxz
lock
jne
jo
(bad)
mov
and
in
nop
xor
shl
dec
inc
sub
retf
mov
and
xor
cmp
aaa
icebp
loop
mov
imul
lock
cmc
dec
push
cmp
add
retf
inc
cdq
sti
mov
leave
shl
dec
and
add
scas
into
pushf
and
inc
xchg
(bad)
scas
fsubrp
frstor
dec
fwait
jecxz
retf
pop
jp
inc
fs
sub
into
xchg
in
ror
jg
jecxz
int3
xor
pop
pop
jg
push
or
(bad)
mov
outs
mov
push
xor
rcl
mov
inc
add
push
dec
or
mov
mov
nop
pop
sub
mov
jnp
jnp
shr
jg
inc
sub
fild
inc
fwait
or
ds
fdiv
ficomp
dec
mov
fs
fdivr
mov
sbb
jle
push
ins
and
and
cmp
mov
push
nop
(bad)
pushf
xchg
cmp
or
and
daa
inc
or
popa
aas
push
add
jge
jns
inc
sbb
inc
adc
jl
pop
adc
jl
pop
cmp
cmp
add
xor
imul
push
pop
jns
jno
pusha
sub
push
adc
rol
call
push
inc
pop
dec
and
je
push
adc
jno
je
inc
push
push
ss
adc
jb
inc
pop
outs
das
pop
push
inc
or
popa
or
pop
cmp
and
sbb
push
ds
cmp
dec
xor
jl
push
sbb
es
push
sub
or
or
push
adc
imul
inc
pop
inc
or
fisubr
test
(bad)
iret
xchg
mul
or
pushf
pop
push
pop
sti
adc
loopne
push
lock
mov
rcl
test
inc
or
push
loop
mov
jne
and
sub
mov
imul
out
and
ins
faddp
(bad)
ror
jb
adc
fidiv
xchg
int
cwde
jmp
icebp
add
sbb
xchg
push
push
enter
cmp
inc
cmp
sbb
test
jmp
add
rcr
test
fs
enter
mov
mov
lods
div
mov
add
push
ret
stc
lods
out
push
mov
sub
icebp
mov
push
imul
mov
out
jmp
fucomi
std
scas
stos
sub
sbb
push
outs
popa
or
(bad)
mov
push
jbe
pop
xor
cmps
call
jbe
sub
int
lods
aas
mov
gs
xchg
jmp
cli
icebp
in
scas
cmp
ds
sbb
sbb
repnz
xchg
(bad)
pop
jne
int3
aaa
add
stos
ss
push
cmps
in
mov
push
jle
pop
outs
(bad)
mov
test
adc
add
test
xor
xor
mov
outs
(bad)
(bad)
xchg
popf
xor
add
and
jae
shl
daa
jcxz
mov
cmp
pop
sub
pushf
ss
xor
jge
sti
rol
repz
mov
dec
icebp
xor
mov
or
mov
sbb
das
push
mov
jmp
mov
lahf
les
add
stc
pop
jns
cmp
cmp
sar
jno
pop
test
fs
or
ds
push
jne
mov
jle
dec
fsubr
mov
pop
push
mov
into
cmp
push
aas
jmp
mov
inc
or
test
mov
imul
int3
mov
or
lahf
call
outs
shl
aam
xchg
sub
cmovnp
in
xchg
xchg
push
xchg
sar
fldenv
pop
nop
in
mov
inc
mov
lods
out
push
sub
add
clc
add
and
int3
adc
in
mov
enter
push
cmp
(bad)
call
pop
adc
or
cmp
mov
arpl
(bad)
mov
adc
xchg
mov
repz
and
or
pop
test
fist
xchg
std
xchg
lock
cs
mov
(bad)
leave
lea
xchg
jmp
xchg
test
jmp
stos
scas
and
mov
ffree
fnstenv
xor
out
push
add
data16
adc
sbb
mov
pop
mov
xchg
into
lea
dec
orps
xor
ja
jnp
inc
adc
dec
pop
push
pop
push
je
inc
push
pop
add
arpl
outs
xor
sbb
push
sbb
jno
pop
sbb
imul
jo
push
pop
sbb
pop
sbb
dec
cmovs
inc
add
jns
ins
ss
pop
inc
daa
inc
add
push
or
dec
adc
inc
pop
or
outs
xor
sbb
push
sbb
add
sub
cmp
outs
cmovae
jbe
imul
jge
dec
(bad)
sub
jne
jnp
pop
adc
je
push
sub
or
adc
jnp
push
dec
pop
pusha
outs
xor
sbb
pop
sbb
push
jge
dec
push
fs
push
dec
sbb
xor
dec
sub
sahf
fisttp
(bad)
out
mov
test
mov
sbb
inc
push
dec
mov
jmp
xchg
pop
xchg
cmp
sar
ficomp
mov
jae
(bad)
addr16
nop
fiadd
(bad)
ficomp
sub
aam
and
xor
(bad)
nop
cmc
push
sub
cmp
scas
jmp
data16
pop
data16
lods
loope
pop
and
shr
fs
fsubr
jae
jo
in
add
push
or
repnz
adc
movs
sbb
fild
pop
sar
fcom
jae
pusha
(bad)
stos
jmp
push
jge
call
adc
mov
or
adc
jl
out
data16
push
mov
xchg
arpl
push
mov
les
imul
das
lods
xor
loope
jecxz
push
sub
sbb
add
cli
mov
pop
shl
ficomp
(bad)
iret
fld
add
xor
int
scas
and
clc
adc
cmc
mov
leave
xchg
pop
inc
sbb
lock
add
xor
aas
mov
(bad)
push
jl
xor
cli
mov
das
ret
out
test
and
mov
add
hlt
stc
test
movs
jp
pop
sub
fsubr
jns
push
add
aam
movs
rcr
enter
xor
or
cmps
int3
cmp
xchg
lods
imul
int3
repnz
mov
nop
bnd
and
sbb
sar
xor
and
add
or
shl
stos
and
mov
in
pop
jmp
test
mov
das
not
mov
lods
inc
inc
or
ret
int
mov
push
ss
pause
cdq
cmp
int
rcl
dec
jno
push
or
repnz
xchg
or
jmp
add
repnz
cmp
xchg
aad
xchg
pop
inc
mov
sbb
call
scas
repnz
rol
cmps
(bad)
setns
dec
push
xor
jmp
mov
mov
mov
test
mov
arpl
into
cmps
sbb
sbb
xor
mov
mov
stos
or
pusha
push
adc
or
jmp
push
shl
and
(bad)
ins
push
jge
push
sub
inc
and
dec
adc
dec
stc
or
out
inc
sahf
push
adc
fistp
(bad)
stos
and
pop
loopne
mov
retf
or
pushf
loope
mov
retf
addr16
jne
lds
les
inc
ins
lods
lds
push
adc
xor
jl
popf
jbe
dec
mov
lds
xchg
pusha
push
test
lods
out
outs
push
jb
test
(bad)
push
lahf
xor
xchg
mov
jmp
xor
js
push
mov
fsubrp
mov
icebp
xchg
scas
sub
mov
lods
scas
call
push
loopne
pop
xor
jns
cdq
lea
jno
lds
hlt
mov
pop
mov
or
neg
sbb
jo
dec
sbb
lods
ins
cdq
ror
hlt
ins
dec
xchg
(bad)
stc
xchg
jge
rcl
into
int
test
sbb
xor
out
sbb
push
or
jl
sbb
ins
mov
fbld
mov
push
add
xor
jbe
cmps
clc
neg
mov
arpl
in
or
je
sbb
cmp
out
push
sbb
mov
mov
add
push
pop
retf
mov
pop
sub
sbb
inc
pop
inc
repz
cmp
mov
(bad)
adc
sar
push
in
mov
aam
mov
inc
call
jmp
adc
cmp
retf
adc
inc
push
dec
sbb
jg
push
call
add
sbb
retf
rol
inc
and
sbb
sub
loope
jns
in
push
sahf
test
push
xchg
loopne
stos
xlat
dec
and
das
mov
or
bound
nop
cmp
int3
dec
ror
and
cmp
imul
pop
enter
rcl
mov
stc
mov
(bad)
jo
(bad)
dec
mov
popa
jbe
fstp
dec
xlat
jo
cmps
std
adc
out
sbb
pop
pop
push
jne
fimul
sbb
stc
cmps
in
and
inc
mov
(bad)
aad
xor
(bad)
(bad)
cmp
mov
push
(bad)
iret
out
push
outs
xor
mov
push
push
cmps
jge
push
jnp
adc
sbb
fwait
jb
arpl
jge
fs
inc
pop
test
test
addr16
je
in
aaa
lock
stc
les
ror
ss
jb
or
inc
out
out
sub
add
mov
(bad)
in
cld
repz
mov
inc
mov
and
in
xchg
loop
movs
movs
xor
or
jns
mov
mov
inc
xchg
push
call
fchs
pop
out
xchg
loope
dec
dec
pop
arpl
push
mov
fdivrp
es
push
jo
sub
sbb
push
fidiv
adc
in
jecxz
daa
push
adc
mov
dec
fs
jmp
mov
out
mov
aam
push
mov
js
fsub
cmp
cwde
sbb
cmp
xchg
jg
push
mov
iret
sub
jns
cmp
add
pop
mov
dec
or
fisubr
iret
popf
adc
aaa
sub
iret
ret
repnz
inc
or
xor
scas
xor
mov
test
into
ins
and
jnp
sbb
in
adc
mov
jbe
cwde
(bad)
cmps
das
repnz
jmp
cmp
add
adc
sub
ss
jle
lock
test
xor
cmp
xchg
shl
imul
ret
cmp
dec
push
add
sub
inc
int3
push
dec
jmp
push
pop
fidiv
aas
cmp
rcr
mov
in
rcr
cmp
mov
ins
in
adc
icebp
scas
bound
stos
inc
push
mov
sub
cli
adc
xchg
test
call
xchg
lock
push
into
sub
push
std
dec
rcr
call
mov
je
(bad)
adc
fwait
sbb
inc
cmps
adc
retf
xchg
cmp
test
jns
test
or
jmp
add
fldcw
xchg
xchg
xor
pusha
out
jb
out
push
add
and
xchg
or
sbb
rcr
cmp
mov
dec
pop
(bad)
stos
repnz
jae
push
jmp
mov
leave
push
rol
push
sub
stos
cmp
add
xor
mov
popa
mov
or
lahf
iret
stos
jmp
mov
sub
or
fs
test
xor
pop
or
fdiv
outs
ret
cdq
repz
enter
neg
xor
dec
and
fcmovnb
pushf
sbb
push
cmp
pop
pop
cli
mov
xchg
es
(bad)
ja
jg
jmp
sar
scas
and
retf
lds
sub
cld
cmp
mov
fisubr
aam
push
repnz
imul
mul
in
cmp
icebp
inc
inc
js
fcmovne
mov
xchg
shr
xor
xor
add
int3
or
mov
ds
xchg
and
nop
jo
dec
dec
cmp
stos
jbe
lods
pop
add
inc
sub
adc
cmp
mov
xchg
ja
data16
pushf
jae
mov
int
(bad)
sub
repz
push
add
into
ins
or
add
out
cmc
mov
fld
cwde
(bad)
int3
dec
add
mov
mov
(bad)
jp
jmp
push
add
jns
ins
cmps
cmp
dec
(bad)
loope
lods
add
mov
dec
dec
mov
pop
call
sub
or
shl
mov
retf
sbb
loope
dec
or
jmp
retf
cmp
add
adc
aas
push
outs
mov
scas
sbb
add
ins
dec
sub
ret
movs
test
cmp
imul
mov
lock
mov
sahf
test
jmp
cmc
mov
xchg
cmp
jl
jle
fs
xchg
sti
pop
test
loop
popa
ret
jle
into
scas
add
or
xchg
pop
rcl
and
mov
jmp
fcmovnbe
sti
cmps
bound
call
mov
sahf
xchg
or
mov
xchg
mov
mov
into
xor
cmc
out
inc
mov
pop
movs
xchg
push
lds
loopne
lods
ret
rcl
out
mov
add
movs
xor
add
scas
outs
iret
fcomp
xchg
inc
mov
test
fiadd
popf
push
int
mov
shl
fs
xchg
mov
dec
popf
inc
test
out
ret
xor
or
test
sbb
int
xchg
cdq
sar
fimul
fs
push
or
int3
pop
test
cmps
test
shl
mov
std
xor
pop
jno
aad
cmc
out
out
dec
lock
fstp
pushf
xchg
repnz
call
sub
push
and
clc
sub
push
test
pop
mov
pushf
loop
pusha
cmp
xor
jmp
mov
fs
stc
ins
test
in
add
push
mov
push
push
mov
in
pop
(bad)
push
jno
(bad)
pop
inc
(bad)
adc
pop
mov
mov
test
or
mov
mov
movaps
mov
ret
ins
push
and
or
iret
popa
in
cli
adc
je
sub
cli
repz
inc
xchg
mov
ret
mul
out
add
nop
retf
xchg
adc
fstp
es
stos
jnp
sbb
jle
pushf
adc
sbb
mov
mov
fstp
fidiv
ins
mov
into
les
hlt
lock
add
or
les
(bad)
in
pop
jns
xchg
pop
xor
enter
into
or
in
pushf
cmp
mov
jo
inc
mov
(bad)
ss
xchg
nop
(bad)
aaa
and
stc
jle
jo
or
call
adc
dec
xchg
jecxz
or
je
cmp
ins
jmp
scas
repnz
ins
adc
ins
cmps
push
or
std
test
stc
mov
dec
mov
outs
xchg
jb
(bad)
xor
xchg
pop
jmp
arpl
in
xor
rcl
jge
pop
das
aam
popf
into
lods
int3
xchg
je
repz
aas
xchg
mov
cmps
packssdw
dec
xor
or
push
shl
ror
mov
scas
or
or
or
mov
(bad)
stc
rol
dec
popa
out
push
add
adc
dec
retf
scas
rol
mov
or
sub
mov
cmp
movs
inc
mov
pop
jecxz
pusha
and
and
lock
dec
pop
inc
push
lds
xor
mov
jg
xchg
pushf
and
jne
cmp
mov
push
arpl
xor
push
call
ds
adc
dec
test
repnz
ja
push
cmp
(bad)
(bad)
(bad)
add
and
retf
nop
int3
xchg
pop
jae
push
ficom
cmp
pop
test
adc
not
sbb
jae
mov
call
mov
repz
sti
cld
sbb
mov
ret
jo
cmp
gs
dec
mov
mov
mov
shl
adc
fild
push
adc
push
les
pop
cmc
push
mov
sbb
push
mov
xchg
ss
cli
push
mov
movs
jo
adc
rcr
push
push
and
pop
cmp
adc
(bad)
outs
or
mov
dec
or
sbb
popf
or
aam
mov
adc
jge
or
and
mov
mov
lods
inc
adc
lods
shl
stos
fsub
fimul
das
sbb
mov
fs
adc
push
inc
dec
dec
out
nop
push
popf
jae
mov
push
arpl
shl
lods
jg
pushf
push
mov
jbe
jo
xor
and
cld
movs
(bad)
or
jns
inc
pop
xor
adc
sub
or
call
pop
pop
adc
xchg
cmp
dec
les
dec
jns
ins
push
mov
(bad)
sbb
scas
ja
shl
(bad)
fild
xchg
mov
xchg
add
loope
xchg
pushf
std
movs
(bad)
ja
hlt
sti
pop
pop
(bad)
lds
pushf
sar
(bad)
cdq
vmovhps
lock
pop
pushaw
push
dec
pusha
gs
inc
mov
adc
test
in
enter
and
sub
das
push
push
pushf
ds
xor
dec
aam
scas
into
js
jno
mov
add
cmp
inc
std
cmps
imul
rcl
rol
leave
neg
scas
push
int3
repz
sub
loope
sbb
inc
dec
xor
sub
(bad)
xlat
repnz
push
addr16
stos
imul
inc
rcl
xor
ds
movs
adc
or
mov
inc
(bad)
fwait
sub
dec
mov
push
jb
icebp
pop
js
iret
mov
and
sub
jg
sub
sbb
jg
inc
imul
mov
jae
ja
in
(bad)
push
stos
push
movs
mov
pop
pop
sub
mov
jo
pop
dec
and
js
inc
xlat
stos
and
pop
and
inc
mov
mov
(bad)
inc
cmp
push
int
pop
push
or
mov
out
pop
fistp
(bad)
test
icebp
pop
or
popf
pop
sub
or
ds
cmp
pop
fcomp
rcl
cmp
mov
les
pushf
push
jo
js
cwde
fnstcw
out
fistp
ins
adc
pop
mov
inc
push
xor
mov
mov
sbb
inc
(bad)
push
scas
and
sahf
outs
xor
ja
pop
dec
mov
cmp
mov
mov
sub
mov
jmp
xor
cdq
jmp
xor
mov
mov
(bad)
push
mov
sub
imul
lea
and
push
loope
inc
mov
push
call
add
and
mov
imul
cwde
ss
jne
pop
pop
mov
jl
aas
inc
bound
sub
jb
pop
sub
test
jmp
push
jle
rcl
push
ss
mov
and
inc
mov
or
xor
in
ins
jge
jb
xchg
and
mov
xchg
cmps
mov
dec
sbb
sub
out
leave
in
not
pop
or
xchg
and
out
out
cmp
imul
sbb
out
inc
test
jns
call
out
dec
xchg
cs
cmps
or
scas
in
(bad)
aaa
cmp
jnp
xchg
fidiv
jle
clc
(bad)
bnd
sub
ins
jae
push
and
clc
xchg
das
push
mov
ret
pop
popa
sub
movs
lds
(bad)
call
sar
addr16
(bad)
(bad)
popa
push
stos
and
mov
aam
xor
jle
or
inc
inc
aad
jmp
in
add
dec
test
lods
icebp
fnstsw
imul
and
js
stc
mov
xchg
imul
sbb
mov
jp
or
lock
sub
ret
movs
and
lds
dec
dec
addr16
push
sbb
retf
movs
in
mov
dec
fcomp
dec
pop
adc
cmp
movs
dec
loope
rep
jb
dec
sbb
jmp
dec
add
mov
adc
mov
mov
jmp
pop
sahf
inc
cmp
mov
sbb
jl
pop
mov
jae
mov
mov
test
adc
inc
add
in
popa
je
das
scas
inc
icebp
std
movs
mov
dec
push
icebp
adc
movs
and
popa
sub
cmp
call
inc
push
mov
into
sbb
mov
imul
jl
and
lds
inc
dec
mov
ins
call
jg
out
and
adc
jns
jno
enter
outs
or
imul
(bad)
jmp
and
lock
jne
sbb
dec
mov
push
cmp
hlt
out
jne
mov
jnp
add
mov
and
xchg
jno
or
rep
das
dec
mov
or
lods
mov
sub
aas
pop
dec
xchg
fs
and
cs
mov
pop
jmp
push
std
jmp
mov
jnp
mov
add
adc
ret
stos
push
lods
mov
or
add
jmp
push
sbb
pop
mov
mov
lahf
ret
inc
push
call
pop
inc
push
jle
(bad)
les
repz
sbb
lods
dec
push
adc
mov
or
dec
dec
test
out
cmps
or
jg
shl
call
rol
jb
adc
cld
(bad)
mov
push
test
adc
lods
pop
bound
aas
test
mov
or
fwait
int3
jae
xchg
add
inc
sbb
loope
push
cwde
lods
std
mov
cmps
mov
sub
jg
and
out
cld
scas
dec
sbb
call
mov
les
mov
jmp
jle
(bad)
cmp
loop
dec
ret
jmp
add
mov
in
push
mov
cmovp
rol
sbb
push
or
mov
dec
mov
inc
(bad)
aad
jp
fiadd
add
shl
outs
push
sub
xchg
ss
mov
push
sub
xor
shr
or
rcl
mov
inc
cmps
neg
in
and
sub
pop
hlt
fxtract
icebp
inc
cmps
mov
jmp
repnz
pusha
pop
dec
out
sub
mov
pop
cmc
cmp
inc
fcomp
inc
mov
push
mov
xlat
pop
sub
jbe
mov
cs
cmp
test
ficom
push
mov
inc
cmp
sti
cmc
cmp
xchg
inc
sbb
xchg
add
and
pusha
cmps
xchg
adc
xchg
das
loope
call
pushf
aaa
add
sub
or
xor
adc
sub
rcr
pop
addr16
sub
lods
xor
adc
into
mov
ins
mov
jb
mov
or
xchg
in
or
call
das
pop
xchg
(bad)
sub
fadd
aaa
leave
sbb
mov
scas
addr16
add
mov
sbb
mov
jle
es
cdq
movs
mov
das
ins
bound
adc
cmp
leave
mov
out
scas
aas
inc
push
out
cmp
cli
push
lods
inc
pop
ret
loope
movs
cmp
ins
xor
outs
cwde
test
popa
shl
adc
jg
cli
fsubr
gs
mov
nop
jp
mov
ins
xor
rol
das
fimul
push
xchg
sahf
loopne
lods
out
repnz
jge
xor
popa
ds
fisub
movs
mov
or
xchg
mov
inc
movs
call
sub
sar
xor
sbb
and
es
call
sbb
mov
iret
pop
repnz
aas
xor
and
add
lock
or
in
movs
add
cmp
call
mov
pop
mov
xchg
cmps
pop
clc
lock
inc
mov
cmps
nop
xchg
loope
pusha
add
je
push
pop
sbb
mov
adc
das
inc
out
push
push
or
stc
mov
add
or
ret
jge
aaa
loopne
mov
mov
stos
dec
jmp
push
repnz
pop
adc
xchg
mov
shl
push
loope
or
outs
pop
cs
mov
or
int3
std
cdq
sbb
clc
mov
mov
inc
dec
xor
adc
inc
inc
inc
inc
std
out
push
jl
lods
mov
outs
pop
and
shl
mov
(bad)
outs
mov
rcl
(bad)
clc
push
xchg
inc
mov
mov
jg
mov
sahf
pop
jle
jo
lods
mov
idiv
push
and
mov
push
inc
imul
(bad)
dec
imul
outs
test
ins
clc
mov
mov
dec
jecxz
stos
fidivr
xchg
xchg
and
mov
push
retf
scas
xchg
fcom
pop
jge
repnz
xchg
pop
outs
inc
xchg
fsubr
mov
in
xor
arpl
pop
jne
xor
repnz
cld
sub
outs
jmp
dec
jg
mov
mov
or
mov
sub
aad
dec
cmp
(bad)
test
(bad)
mov
scas
retf
inc
loope
cmp
(bad)
fs
jmp
lahf
out
sub
jmp
cmp
mov
push
mov
lock
pop
xor
mov
stc
iret
cmps
pop
shr
push
retf
repz
xchg
mov
cmp
aad
add
inc
xor
mov
fisub
push
jl
jecxz
cmps
data16
je
dec
movs
sub
jo
pusha
mov
lea
xchg
cld
mov
sub
mov
xor
inc
out
lods
and
sbb
dec
push
push
test
into
stc
les
imul
lea
sub
xor
neg
hlt
or
lahf
push
daa
test
jo
and
cmp
ror
xchg
jmp
mov
dec
mov
call
xor
adc
jbe
dec
aas
mov
sbb
push
pop
addr16
jl
cmp
mov
ret
push
xchg
or
adc
cmp
push
dec
xlat
or
jnp
ins
outs
movs
popf
xor
mov
jo
aas
and
repnz
iret
mov
in
inc
fwait
adc
push
dec
(bad)
cli
aas
in
inc
daa
mov
push
and
gs
adc
(bad)
cwde
push
cli
mov
scas
sub
add
pop
mov
lods
test
xor
sub
and
int
dec
xchg
jle
mov
adc
push
inc
pushf
shr
div
pop
dec
or
mov
imul
dec
sbb
and
jge
mov
movs
out
int
mov
xchg
cmc
fld
leave
lods
in
adc
push
jnp
cmp
jb
adc
adc
test
lods
push
cmp
cmp
jmp
test
jae
push
popf
ret
mov
mov
jbe
or
pop
pop
sbb
movs
sbb
data16
vpsubusw
arpl
cmp
(bad)
mov
add
aas
mov
xor
stos
pop
push
or
stc
xchg
bound
shl
iret
shr
fcmovnbe
xchg
pusha
cdq
push
pop
cmps
sub
test
icebp
fadd
scas
sbb
repnz
imul
fs
sub
fimul
mov
mov
jnp
js
or
int
mul
jmp
xor
ins
mov
jg
repz
mov
bound
in
test
ins
pop
pop
sbb
sti
mov
xchg
push
adc
icebp
test
shl
mov
jns
xor
(bad)
sub
ds
movnti
outs
cmp
fadd
mov
test
lods
pusha
cmp
mov
or
jl
jecxz
stc
push
inc
add
int
xchg
sbb
repnz
adc
push
adc
es
adc
aaa
fldcw
mov
retf
bound
sti
mov
mov
outs
cmp
add
dec
ins
push
sub
pop
adc
and
xchg
ror
jmp
mov
mov
into
lods
in
ret
sbb
loope
stc
call
shl
aad
hlt
mov
loope
call
stos
stc
mov
popf
jecxz
enter
fdivr
pop
cmp
dec
sub
es
icebp
adc
or
rol
pop
inc
sbb
shl
movs
jbe
sub
mov
out
dec
cmp
mov
add
mov
ins
sub
inc
pop
sbb
hlt
fstp
clc
retf
adc
sub
xor
dec
ds
cli
or
jecxz
xchg
repz
std
sahf
xor
aam
es
xlat
cmps
jb
jbe
not
mov
loopne
mov
add
push
xchg
fist
mov
retf
mov
and
addr16
inc
add
mov
test
add
ret
or
adc
inc
retf
lock
sub
jmp
mov
mov
and
pusha
test
lds
adc
pop
aam
mov
and
cli
cwde
test
push
aas
leave
cld
movs
mov
mov
mov
movs
in
loopne
or
aaa
push
test
js
test
sahf
rol
test
jo
pop
sbb
jle
inc
es
int
mov
sub
sub
mov
xchg
dec
aaa
or
ja
inc
xchg
ret
out
xchg
jmp
pusha
cmp
sub
enter
out
push
and
and
mov
pushw
dec
inc
pop
adc
dec
adc
(bad)
call
cwde
lock
mov
adc
jmp
mov
xchg
shl
retf
test
shr
xchg
pusha
pop
dec
mov
mov
xchg
pop
add
bswap
mov
mov
adc
dec
jbe
dec
or
ror
xchg
out
int
mov
fwait
sub
push
dec
jl
and
sub
fwait
jmp
stos
sti
out
mov
mov
ret
add
stos
adc
inc
sub
retf
xchg
xlat
call
fist
dec
xchg
sti
mov
retf
out
shl
jge
in
loope
mov
mov
xchg
sbb
aam
mov
jecxz
enter
pop
adc
sbb
scas
mov
fimul
dec
in
aaa
retf
jb
bnd
add
lods
test
fcos
(bad)
xchg
inc
push
adc
mov
into
xchg
mov
scas
in
mov
ror
sbb
xor
mov
cmp
jmp
bound
adc
or
jmp
movs
xlat
sbb
pop
push
mov
push
adc
pop
dec
das
cld
fdiv
dec
mov
mov
daa
imul
xchg
xor
inc
aas
cdq
xchg
sbb
mov
je
in
call
mov
push
mov
test
popf
ret
add
and
mov
mov
fmul
in
mov
mov
dec
and
stos
pause
push
add
daa
dec
(bad)
cld
cmps
aam
lahf
clc
mov
bound
dec
mov
dec
sub
mov
mov
push
pop
inc
mov
outs
ss
dec
add
test
dec
xor
repnz
sbb
sub
lds
pop
ret
sub
jmp
pop
xchg
leave
pushf
js
xor
shl
pushf
movs
sub
sar
add
adc
out
or
stos
push
aaa
inc
cmp
xor
inc
sbb
imul
or
data16
bound
(bad)
sub
inc
xor
jnp
pop
adc
xor
dec
sbb
cmp
push
push
sbb
gs
sub
inc
or
outs
xor
sbb
cmp
push
push
sbb
jae
pop
adc
(bad)
loop
hlt
mov
xor
push
(bad)
pop
pop
adc
mov
ja
aas
mov
jge
cli
sbb
adc
push
push
cmp
sbb
ja
aam
retf
fwait
aaa
jnp
pop
push
leave
mov
fs
test
in
or
jo
out
cmps
retf
and
pusha
cmp
daa
shr
xor
or
stc
mov
scas
sub
push
or
cli
mov
xor
ins
xchg
adc
retf
(bad)
test
cmp
out
mov
dec
mov
mov
add
jne
or
arpl
cmp
add
cmp
xor
clc
lock
mov
cmps
aas
jg
aas
pushf
shl
andps
or
push
icebp
push
cwde
shr
push
shl
add
ficomp
jmp
jl
cmp
leave
add
loop
mov
xchg
xchg
loopne
jnp
dec
pusha
sub
aas
mov
mov
lea
je
ja
push
sbb
imul
pop
mov
xchg
push
dec
push
push
fwait
(bad)
mov
(bad)
adc
(bad)
fld
mov
sub
out
mov
xlat
rcl
out
test
lea
outs
ds
xor
mov
std
xchg
aam
mov
mov
fisubr
or
or
lods
adc
mov
mov
imul
loopne
sub
sub
mov
and
imul
(bad)
rcl
int3
xlat
cmps
loopne
add
pop
add
test
mov
mov
fadd
mov
dec
push
mov
popa
and
push
add
(bad)
fdivr
add
pop
inc
pop
push
inc
jl
jns
mov
mov
cwde
and
sub
pop
and
es
jns
gs
adc
retf
icebp
cmp
cmp
test
(bad)
sub
xchg
aam
(bad)
sbb
cmp
scas
shr
dec
fcom
jo
and
cmps
mov
add
ror
cdq
ss
mov
sbb
lods
dec
inc
or
(bad)
test
(bad)
loope
addr16
pop
lods
or
aad
stc
mov
dec
push
or
les
mov
shl
cmp
retf
popa
pop
and
loop
idiv
js
inc
xchg
lock
iret
sbb
cmp
fst
sub
dec
sub
movntq
out
xchg
iret
sub
xor
retf
fcom
mov
mov
outs
das
loop
mov
scas
mov
dec
or
dec
push
sub
daa
jne
adc
sar
test
arpl
retf
mov
clc
xchg
sar
iret
xchg
xchg
popf
enter
xor
sbb
stos
sbb
call
loop
jne
gs
sbb
or
lock
jecxz
lock
cmp
xchg
shl
mov
test
pop
addr16
dec
or
int
jmp
sahf
icebp
movs
call
outs
scas
adc
mov
es
pusha
sbb
mov
mov
or
shr
test
aas
test
xchg
jnp
xlat
mov
mov
aaa
daa
jmp
imul
push
jmp
repnz
fstp
fbstp
push
or
adc
pop
adc
jne
dec
imul
or
fs
push
es
data16
inc
or
popa
cmp
dec
sub
jns
push
and
dec
push
jl
addr16
or
jnp
dec
or
dec
or
push
adc
pop
pop
dec
add
dec
add
and
clc
or
sbb
div
fsub
pop
pop
out
ss
stos
cmp
iret
pop
pop
into
or
mov
jle
cmp
clc
lods
(bad)
in
xchg
repz
bound
mov
cmp
and
not
jge
pop
sbb
dec
add
jmp
sti
sbb
outs
mov
xchg
sub
sub
sub
mov
aaa
inc
popa
inc
adc
aas
ret
mov
xor
adc
iret
test
xchg
outs
dec
or
pop
pop
jno
adc
repz
mov
fbstp
pop
jcxz
icebp
mov
jnp
outs
sti
add
fs
or
xor
shl
mov
or
push
inc
add
add
adc
cdq
mov
not
sahf
xchg
push
jbe
push
test
or
int
lods
and
call
and
stc
sbb
sub
hlt
icebp
test
ja
add
sub
mov
pop
cmp
loope
movs
imul
gs
cld
clc
call
out
scas
outs
jne
cmp
movs
ds
dec
ja
das
out
or
cmp
mov
outs
adc
sbb
daa
cmp
xchg
and
sti
xchg
mov
mov
outs
sar
ficom
jbe
or
pop
cdq
adc
(bad)
mov
(bad)
mov
jno
jo
out
hlt
std
test
xor
sub
pop
dec
cmp
mov
add
pusha
shr
fstp
mov
fisttp
ins
ds
cmp
sbb
jg
sbb
iret
(bad)
pop
and
stos
or
fdiv
jl
stos
sar
xor
ins
frstor
cmp
sub
rcl
shl
fidiv
push
ret
pop
xchg
sar
pop
das
push
xchg
ss
and
adc
fnstenv
sbb
and
mov
dec
mov
sub
cmp
leave
adc
xor
sbb
jmp
dec
lar
ficomp
out
std
add
sub
pop
push
test
ins
sub
repnz
dec
mov
imul
mov
xchg
or
mov
adc
in
stos
fsub
mov
popf
aad
jne
jae
repnz
aaa
popf
ficom
mov
rol
xchg
push
adc
mov
dec
bswap
rcl
xchg
gs
pop
pop
(bad)
lods
cli
test
add
and
sub
test
gs
pop
and
enter
addr16
add
xchg
sbb
add
jmp
xchg
lock
or
jnp
or
ret
mov
and
aas
jb
(bad)
xlat
mov
scas
jbe
jae
repnz
fwait
dec
ds
and
lods
stc
test
mov
sahf
fistp
js
cdq
push
xor
test
sar
mov
jo
leave
stos
in
jl
jg
jmp
sbb
repnz
gs
sbb
loopne
lahf
pop
push
cmp
icebp
test
push
addr16
push
fcomp
pop
pop
cmp
stos
xlat
dec
(bad)
retf
xchg
nop
popa
pop
or
jae
mov
retf
stos
sti
mov
std
xchg
in
cld
mov
mov
stos
sti
mov
cmc
scas
iret
lahf
fidivr
icebp
add
in
scas
fild
loope
mov
xchg
sti
mov
xchg
out
(bad)
add
xchg
fst
fnsave
sbb
dec
add
jbe
pop
ss
jbe
pop
mov
ror
jp
std
jmp
test
adc
movs
push
cmp
sbb
add
pop
xor
sbb
fild
jae
push
push
push
push
bswap
test
outs
or
movs
in
mov
mov
mov
inc
ins
cmp
mov
lods
(bad)
mov
js
cli
mov
in
pushf
cs
sbb
or
adc
cmp
cmp
bound
test
pushf
dec
and
shl
ins
add
int
mov
sahf
xor
jecxz
xchg
idiv
cs
retf
pop
pop
sbb
mov
cmp
js
pop
test
retf
inc
popa
es
cli
leave
mov
ss
jmp
sub
aas
ss
stc
xchg
aam
mov
inc
cld
cmp
imul
movs
popf
aas
je
and
movs
mov
push
dec
mov
dec
xlat
jmp
(bad)
mov
sbb
fldcw
movs
xchg
inc
or
imul
jmp
out
ja
jmp
dec
sub
jne
repz
cmp
mov
arpl
add
imul
dec
aas
adc
test
pop
xchg
retf
addr16
cmps
xchg
lock
mov
inc
inc
push
cmp
add
fcmovnu
mov
test
imul
pusha
and
mov
sahf
fcmovnb
mov
scas
pop
cs
adc
push
pop
or
ret
cwde
std
data16
out
cmp
mov
fist
nop
dec
pop
jle
sub
cmp
cmps
aam
mov
retf
pop
cmp
fwait
into
mov
push
pop
jnp
inc
push
test
push
and
adc
fldcw
daa
pusha
mov
xchg
out
retf
mov
pusha
pop
or
js
push
addr16
dec
mov
lds
mov
add
jmp
pop
push
in
scas
div
jnp
sub
mov
test
sar
jle
add
cli
mov
pop
inc
pop
push
push
mov
fs
retf
sti
stos
xchg
das
fadd
lea
dec
mov
jno
imul
retf
cwde
push
jp
cmp
fwait
call
dec
and
lods
in
dec
push
pop
inc
sahf
icebp
pop
xor
dec
add
jmp
xchg
lock
out
nop
repnz
dec
sbb
xchg
js
(bad)
mov
or
push
pop
pop
std
sar
mov
sub
iret
movs
iret
mov
mov
icebp
stos
ret
ret
loop
fild
cmp
sti
pop
pusha
sub
fstp
mov
dec
stos
adc
fisttp
pusha
cmp
test
cmovg
push
adc
scas
in
lods
jge
jge
std
mov
sub
pop
xor
test
repz
xor
jmp
leave
lea
inc
push
frstor
add
mov
gs
cmps
icebp
test
ins
and
fidivr
mov
xchg
cmp
jle
adc
test
jbe
cmc
or
or
or
call
les
mov
inc
or
inc
cli
sbb
xchg
out
(bad)
ins
and
or
xchg
push
mov
xor
jb
jbe
jbe
pop
imul
ja
sub
dec
pop
or
jbe
data16
ficomp
leave
mov
into
mov
movs
into
add
std
mov
fist
loop
ror
dec
aam
in
add
mov
fstp
pushf
repnz
loopne
push
sub
jecxz
outs
or
add
pop
int3
sbb
mov
mov
sbb
movs
push
push
cs
loope
xchg
mov
xchg
pop
and
jmp
xor
das
pop
xchg
icebp
mov
pop
pusha
es
repz
jecxz
es
jecxz
and
rol
stos
or
mov
cmp
or
in
mov
test
pop
cmp
fs
add
or
and
xor
pop
add
lods
in
outs
push
adc
cmp
push
adc
jmp
sbb
add
cmp
shrd
push
iret
jecxz
lea
add
ret
xor
addr16
cmp
push
gs
sbb
sub
movs
pop
push
push
xchg
or
cli
add
pop
adc
sbb
retf
xor
hlt
or
push
ret
and
in
push
gs
movs
clc
pop
xchg
lds
mov
inc
sbb
out
stos
bound
push
cmc
es
mov
sub
cld
xlat
sbb
in
dec
repnz
add
mov
sahf
sub
adc
or
enter
and
sub
xchg
jae
addr16
push
test
xor
(bad)
push
inc
dec
and
mov
out
enter
add
dec
ss
add
(bad)
test
mov
(bad)
inc
adc
pop
xor
aas
adc
loope
out
cmps
in
mov
outs
aaa
cmp
mov
inc
add
fadd
inc
sub
pop
sbb
inc
into
cmp
pop
dec
or
test
mov
mov
fstp
data16
or
idiv
cmp
add
add
and
push
add
adc
xor
fadd
fwait
shr
cmp
cmc
ds
test
imul
test
sbb
leave
sbb
add
jne
not
pushf
arpl
fstp
pop
mov
dec
(bad)
aam
bound
inc
mov
test
and
inc
sub
test
and
cdq
dec
pop
cs
mov
inc
adc
sti
stos
retf
xor
std
mov
imul
push
and
shl
dec
or
push
push
adc
ss
into
(bad)
jne
dec
add
mov
sub
cld
add
or
pushf
hlt
cmp
sub
in
retf
int3
mov
cmp
ds
cli
repnz
jge
add
in
mov
pusha
cmps
sbb
int
inc
pop
push
pop
jb
data16
lods
loop
sub
pop
xor
cmps
test
retf
inc
push
addr16
scas
loop
repz
inc
push
add
call
pop
mov
inc
aaa
clc
mov
mov
imul
cmp
fiadd
cwde
cli
xor
or
call
push
mov
addr16
jmp
inc
adc
rcr
pop
jmp
mov
lea
test
test
mov
lea
xor
and
call
call
test
loope
xlat
xor
xchg
(bad)
mov
xchg
fistp
shl
cli
mov
icebp
mov
cmps
(bad)
mov
lods
loope
fisttp
stc
mov
mov
cld
cmps
out
call
movs
icebp
xchg
ret
and
mov
mov
mov
add
jns
pop
push
in
ins
cld
xor
cmp
mov
lock
imul
fidiv
push
push
adc
inc
push
cmps
loopne
ret
pop
inc
das
pop
imul
popa
and
sar
mov
les
out
xor
imul
fiadd
fwait
(bad)
mov
nop
outs
dec
xor
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
pop
add
mov
push
je
imul
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
xor
add
and
outs
bound
add
add
add
add
add
push
push
mov
add
cli
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
pop
add
add
add
add
fadd
rol
add
add
push
add
add
add
or
cmc
add
or
adc
add
add
mov
add
add
add
add
test
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cs
xchg
add
scas
add
mov
pop
add
add
add
loop
rol
rol
add
add
push
rol
rol
pop
add
add
add
push
rol
add
push
add
pop
add
add
pop
add
add
add
add
add
pop
add
add
or
or
cmp
add
add
add
or
or
or
add
or
pop
add
add
cwde
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
sbb
inc
add
add
add
adc
sbb
outs
add
add
add
xchg
add
add
add
add
xchg
xchg
push
add
add
add
add
add
add
jg
add
add
add
add
test
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
or
retf
sub
add
add
add
fsubr
add
add
les
les
xor
push
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
adc
adc
xchg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
sub
les
les
xor
sbb
js
add
add
add
sbb
and
add
add
sbb
add
add
add
xor
add
add
add
add
add
add
xchg
or
ja
sbb
push
add
add
add
add
add
add
add
jp
add
add
jae
add
add
jp
add
add
jl
add
add
jae
add
add
jp
add
add
jae
add
add
jp
add
add
jae
add
add
jp
add
add
jae
add
add
jp
add
add
mov
add
add
add
jp
add
add
ins
pop
add
add
outs
pop
add
add
jae
add
add
jp
add
add
cmps
pop
add
add
jae
add
add
jp
add
add
outs
pop
add
add
mov
add
jno
xchg
mov
jns
xchg
mov
add
mov
xchg
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
dec
add
outs
add
xchg
push
add
add
add
mov
lahf
add
movs
add
les
push
add
add
add
cmp
xchg
push
add
xchg
push
add
xchg
push
add
add
add
adc
test
icebp
add
add
test
inc
sbb
inc
push
add
sbb
dec
push
mov
push
add
or
cmp
jne
test
adc
sbb
xchg
push
sbb
cmp
xchg
adc
cmp
ret
add
add
push
xor
sbb
fild
mov
inc
add
add
push
add
add
push
xchg
add
add
pop
sbb
adc
adc
add
add
sub
add
inc
pop
sbb
sbb
dec
pop
xor
sbb
push
pop
push
add
xchg
push
add
add
cmp
push
add
add
add
add
add
add
add
pop
push
add
add
pop
pop
add
add
pop
xor
adc
repz
icebp
add
add
test
arpl
or
cs
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
pushf
add
add
add
rol
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
data16
jnp
rol
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
lahf
or
add
add
add
cmp
outs
fs
gs
fs
dec
addr16
cs
add
outs
addr16
ins
add
ins
imul
jb
xor
inc
outs
jb
xor
push
gs
jne
arpl
add
ins
imul
outs
jo
jb
imul
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
imul
jb
dec
imul
ins
dec
imul
imul
jbe
outs
je
jb
jae
ins
imul
ins
xor
imul
imul
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
fs
je
fs
push
gs
dec
js
xor
fs
je
fs
push
gs
dec
js
xor
outs
je
jb
jae
bound
je
outs
xor
inc
ins
imul
xor
cmp
push
pop
inc
dec
push
add
je
outs
outs
xor
push
gs
inc
push
add
ins
bound
outs
js
pop
push
gs
arpl
push
popa
ins
jne
inc
push
add
dec
imul
xor
popa
dec
add
imul
ins
xor
ins
imul
bound
dec
inc
dec
add
jb
xor
outs
popa
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
dec
imul
ins
add
imul
ins
xor
inc
outs
ins
bound
outs
js
arpl
bound
outs
js
add
ins
bound
outs
js
add
je
outs
outs
add
je
outs
outs
xor
jns
dec
je
fs
push
gs
dec
js
xor
dec
je
fs
push
gs
dec
js
xor
inc
outs
jb
xor
outs
popa
add
inc
dec
inc
xor
addr16
je
inc
dec
dec
push
gs
xor
xor
inc
add
inc
push
jns
push
jo
xor
add
gs
xor
ins
imul
inc
jbe
cmp
inc
jb
imul
jns
inc
dec
xor
je
xor
push
dec
xor
dec
popa
bound
add
gs
xor
push
gs
inc
outs
js
je
js
inc
outs
js
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
fs
dec
addr16
add
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
outs
fs
add
xor
inc
gs
bound
arpl
fs
jb
popa
jns
inc
jae
gs
bound
dec
outs
popa
add
je
inc
outs
jne
je
inc
outs
outs
ins
gs
outs
add
jb
outs
add
jae
outs
jae
outs
add
imul
ins
add
jae
gs
cs
jb
ja
outs
add
jae
gs
inc
outs
ins
outs
jb
add
ins
outs
jb
addr16
inc
jne
je
outs
dec
imul
je
inc
outs
outs
je
outs
ins
add
je
inc
outs
jb
inc
outs
ins
outs
jb
addr16
inc
popa
jb
inc
jb
jns
jae
je
dec
imul
jb
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
gs
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
push
imul
imul
jb
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
imul
imul
jae
je
inc
jne
outs
push
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
popa
fs
push
gs
inc
push
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
arpl
outs
jb
jae
add
push
jns
add
je
jns
gs
dec
gs
outs
fs
outs
outs
add
je
gs
outs
fs
dec
gs
outs
fs
popa
jae
add
jbe
imul
add
imul
jb
add
jb
outs
jb
addr16
inc
gs
jne
je
jae
je
inc
jne
jae
jb
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
popa
bound
add
je
dec
gs
imul
popa
arpl
outs
ins
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
dec
outs
je
jb
arpl
push
gs
inc
outs
js
popa
jae
add
je
dec
popa
js
outs
addr16
add
je
push
gs
fs
outs
ins
jns
jae
je
push
outs
jb
push
jb
jo
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
jbe
ins
jne
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
jns
outs
inc
outs
outs
inc
push
outs
je
jb
jae
jne
arpl
add
add
add
add
aam
shl
pop
jle
cmp
cmp
add
jle
ds
scas
gs
jle
jle
jle
add
jmp
cmp
pop
jle
jle
add
rcl
imul
or
cmp
inc
pop
ins
call
jle
jg
sbb
lea
dec
ds
jg
ins
call
add
out
sbb
jle
jle
dec
push
sbb
adc
add
arpl
imul
jle
push
jle
add
jle
jle
aas
push
ds
or
pop
pop
adc
cmp
jle
test
imul
aam
jle
cmp
or
(bad)
pop
pop
out
add
inc
mov
adc
jle
jle
aas
push
jg
dec
push
test
pop
ds
jle
jle
aas
push
jle
jle
sbb
and
inc
mov
jle
jle
ds
jle
inc
pop
or
aam
hlt
jle
push
jle
or
add
jle
jle
hlt
jle
cmp
push
rcl
cmp
jle
adc
add
jle
mov
pop
pop
or
cmp
sbb
cmp
sbb
xor
push
or
ds
sbb
or
and
add
adc
jle
scas
gs
jle
mov
or
add
hlt
jle
push
mov
aas
push
or
or
dec
hlt
jle
sub
sbb
jg
jle
add
jle
jle
adc
jle
sbb
cmp
cmp
push
inc
mov
pop
jle
ds
jle
shl
push
dec
push
add
dec
push
add
dec
ds
ds
dec
push
hlt
jle
push
test
adc
jle
add
push
or
jle
jle
or
pop
scas
gs
test
pop
jle
ds
mov
or
dec
hlt
jle
mov
movq
scas
gs
jg
dec
push
add
ds
aas
push
jle
ds
ins
call
sbb
xor
add
sbb
or
jle
or
hlt
jle
push
or
sub
or
add
add
mov
sbb
dec
inc
pop
inc
mov
cmp
scas
gs
jle
call
jle
sbb
jo
add
jle
or
cmp
push
sbb
sub
push
or
jo
test
pop
adc
dec
push
hlt
jle
jle
or
dec
inc
mov
push
jo
jle
add
or
adc
jle
jle
cmp
aam
add
mov
jle
hlt
jle
push
shl
gs
jle
out
add
pop
or
push
add
inc
pop
or
dec
ds
aam
jle
or
or
rcl
sbb
push
or
or
sbb
cmp
mov
jmp
lea
adc
aas
push
or
gs
jle
sbb
sbb
sbb
mov
ds
scas
gs
out
sbb
dec
jle
inc
mov
push
ds
add
add
add
rcl
add
add
sbb
imul
ds
rcl
cmp
cmp
imul
cmp
add
sbb
or
shl
gs
rcl
jle
addr16
jo
add
or
dec
jle
mov
ds
jo
inc
pop
jle
scas
add
or
cmp
aam
aam
jle
jle
ds
cmp
ds
scas
gs
pop
test
push
add
jle
jle
jmp
mov
mov
arpl
or
ds
add
rcl
jle
dec
aas
push
jle
aam
dec
push
hlt
jle
sub
cmp
ds
add
or
(bad)
pop
ds
scas
gs
add
dec
push
inc
mov
cmp
or
push
ds
adc
jle
ds
jle
or
test
gs
jle
add
aam
mov
jle
ins
call
scas
gs
sbb
hlt
jle
mov
pop
or
pop
mov
add
call
inc
mov
or
push
jmp
cmp
pop
jle
ins
call
or
lea
jle
pop
pop
inc
pop
jmp
dec
add
or
push
jle
jle
jle
adc
or
scas
add
jle
jle
or
jle
cmp
xor
or
xor
jle
mov
aas
push
inc
mov
mov
dec
pop
pop
dec
push
add
adc
test
push
hlt
jle
lea
aas
push
jle
jo
jle
jle
ds
scas
add
ds
ins
call
adc
sbb
shl
sbb
inc
mov
jle
ds
pop
pop
jle
dec
push
cmp
ins
call
add
inc
mov
test
push
shl
pop
jle
jle
ds
aam
jle
add
aam
jmp
push
rcl
dec
sbb
mov
or
ds
ds
add
jle
sbb
lea
push
jle
jle
jle
or
jg
inc
pop
adc
jle
scas
gs
pop
pop
jle
inc
pop
add
jmp
dec
or
jle
jle
pop
pop
add
cmp
ds
jg
adc
cmp
cmp
hlt
jle
push
shl
add
test
xor
jle
out
adc
shl
arpl
push
out
out
rcl
adc
jle
dec
push
inc
mov
jle
mov
pop
pop
add
or
or
jle
aam
or
push
aam
ds
hlt
jle
pop
sbb
add
ds
ds
or
jle
jle
jmp
jle
mov
inc
pop
jo
add
mov
jle
jle
pop
pop
jle
add
cmp
jle
cmp
inc
pop
test
dec
scas
gs
ds
aas
push
jle
add
jle
cmp
or
dec
jle
aam
cmp
add
cmp
jle
sbb
dec
mov
or
sbb
scas
gs
cmp
or
hlt
jle
push
add
sbb
adc
add
push
sbb
inc
mov
imul
inc
mov
jo
jg
or
ins
call
ds
jle
jle
adc
ds
hlt
jle
imul
pop
rcl
pop
jle
add
aam
jle
rcl
add
xor
jle
scas
gs
or
push
mov
jle
cmp
hlt
jle
add
jle
sbb
jle
jle
dec
push
sbb
push
out
jo
hlt
jle
mov
aam
jle
out
inc
pop
or
call
or
aas
push
or
ds
add
sbb
push
sbb
(bad)
hlt
jle
cmp
gs
add
hlt
jle
and
rcl
dec
dec
push
aam
ds
jg
add
(bad)
jle
pop
pop
out
inc
mov
ds
jmp
push
add
ds
jle
hlt
jle
dec
jo
jle
mov
inc
pop
test
lea
jle
or
pop
or
push
ds
jg
add
das
rcl
pop
ins
call
scas
gs
mov
inc
mov
push
scas
gs
or
aam
mov
out
ds
cmp
add
scas
gs
jle
add
mov
jle
sbb
jle
jle
mov
or
inc
mov
push
ds
jle
ds
inc
pop
add
jle
jle
test
mov
dec
adc
ds
mov
jle
add
cmp
jle
dec
push
or
pop
pop
shl
pop
sbb
ds
aas
push
pop
pop
or
jle
mov
jle
scas
gs
push
cmp
aas
push
jle
jle
jle
jle
jle
hlt
jle
dec
or
hlt
jle
(bad)
cmp
ds
hlt
jle
pop
jle
rcl
cmp
shl
cmp
lea
push
inc
mov
pop
jle
aam
adc
add
inc
mov
inc
mov
sbb
call
jle
or
adc
push
jmp
imul
call
aas
push
sbb
lea
jle
ds
inc
mov
push
pop
pop
jmp
pop
sbb
aam
add
mov
jo
jmp
xor
lea
pop
sbb
cmp
mov
sbb
pop
jle
out
mov
jle
sbb
cmp
jle
add
add
test
arpl
mov
hlt
jle
gs
jle
out
jo
out
add
ins
call
scas
gs
rcl
arpl
(bad)
ins
call
sbb
arpl
rcl
mov
jo
jle
or
movd
or
ds
jle
add
cmp
or
jle
or
add
cmp
dec
or
sbb
or
mov
hlt
jle
jle
mov
add
rcl
pop
or
inc
mov
ds
or
push
ds
inc
mov
push
or
sub
rcl
imul
add
sbb
imul
push
sbb
pop
jle
sbb
jg
out
inc
pop
sbb
add
cmp
aas
push
ds
ds
or
sbb
dec
push
jle
sbb
and
jle
jle
ds
inc
mov
pop
jo
scas
gs
jle
aam
aam
jle
out
ds
hlt
jle
imul
ds
jle
or
or
hlt
jle
sub
or
add
dec
push
sbb
jmp
cmp
lea
jle
inc
mov
jle
or
xor
cmp
ds
scas
gs
add
sbb
sbb
add
jle
xor
jle
scas
gs
scas
shl
adc
mov
scas
gs
jg
jle
jle
cmp
rcl
pop
or
ds
sbb
dec
jle
test
pop
add
jle
dec
push
or
adc
out
add
dec
or
push
jle
sbb
arpl
dec
hlt
jle
gs
hlt
jle
jle
cmp
ins
call
rcl
cmp
push
jle
dec
push
test
pop
rcl
pop
scas
gs
sbb
adc
push
hlt
jle
pop
add
mov
or
add
test
gs
ds
scas
gs
sbb
sbb
aam
jo
sbb
push
hlt
jle
sub
pop
cmp
pop
pop
or
mov
adc
ds
jle
aam
sbb
jmp
push
sbb
jle
pop
jle
add
jle
inc
pop
jo
ds
scas
gs
push
add
jle
scas
gs
aam
ins
call
rcl
(bad)
dec
push
scas
add
jo
ins
call
cmp
dec
push
test
push
sbb
lea
pop
dec
push
add
ds
sbb
pop
or
pop
rcl
mov
sbb
pop
jle
rcl
adc
sbb
lea
shl
xor
rcl
dec
jle
jle
hlt
jle
(bad)
ds
rcl
pop
jle
jle
aas
push
cmp
rcl
pop
add
hlt
jle
push
jle
jmp
add
adc
push
ds
rcl
sbb
push
aam
ds
add
ins
call
ins
call
aam
ds
jle
jle
jle
jo
aas
push
ds
jle
or
pop
jo
ds
inc
mov
add
sbb
push
adc
jle
adc
aas
push
jle
jle
or
aas
push
ds
jle
sbb
pop
jmp
push
shl
pop
mov
rcl
call
rcl
lea
add
jle
jle
ds
sbb
hlt
jle
mov
imul
add
sbb
jle
test
push
jle
dec
push
add
ds
jle
or
jmp
pop
pop
pop
aam
mov
sbb
ds
or
jle
add
ds
test
push
pop
pop
ds
or
sbb
push
ins
call
ds
jle
ins
call
add
cmp
adc
inc
mov
sbb
mov
imul
call
add
xor
inc
mov
adc
jle
or
dec
jle
out
cmp
jle
add
mov
jmp
sbb
pop
shl
pop
jle
cmp
aam
jo
dec
push
hlt
jle
cmp
add
or
pop
inc
mov
sbb
call
add
mov
push
cmp
scas
gs
push
sbb
arpl
out
hlt
jle
or
mov
cmp
(bad)
jle
jle
jo
jle
sbb
sbb
mov
cmp
mov
rcl
adc
jle
aas
push
jle
jle
cmp
inc
mov
(bad)
rcl
push
sbb
pop
jle
sbb
ds
hlt
jle
pop
jo
aas
push
jle
or
jle
ins
call
jle
jle
jle
hlt
jle
push
ds
or
ds
jle
inc
pop
jo
ds
sbb
jo
aam
add
jle
sbb
lea
push
ds
mov
jo
jo
inc
pop
scas
gs
jmp
sub
ds
shl
xor
cmp
or
cmp
(bad)
aam
adc
rcl
push
jle
cmp
pop
pop
or
sbb
or
dec
push
mov
jle
ds
sbb
imul
dec
jle
jle
jle
jmp
push
add
shl
dec
jle
cmp
scas
gs
jle
or
jle
or
rcl
mov
add
cmp
mov
jle
hlt
jle
pop
add
sbb
jle
jle
or
add
jle
jle
(bad)
out
inc
mov
pop
aas
push
add
sbb
pop
jo
jle
jle
jg
scas
add
jle
jle
hlt
jle
push
inc
pop
or
aas
push
jle
jo
or
xor
aas
push
mov
jle
inc
mov
sbb
mov
mov
cmp
test
dec
cmp
jle
jle
cmp
add
scas
gs
ds
out
or
(bad)
hlt
jle
or
addr16
add
mov
jle
jle
jle
jle
jle
test
sub
sbb
push
sbb
or
sbb
hlt
jle
push
add
hlt
jle
mov
dec
sbb
ds
ds
hlt
jle
pop
inc
mov
jle
or
jle
test
sub
jle
aas
push
jo
ds
out
rcl
imul
cmp
dec
push
jmp
mov
dec
jle
test
daa
jle
rcl
cmp
pop
shl
lea
pop
pop
jg
jle
aam
inc
pop
scas
gs
scas
gs
jle
test
push
jle
inc
pop
jle
ds
ins
call
test
cmp
pop
ds
ds
or
add
aam
or
jle
ds
inc
pop
out
or
pop
inc
mov
push
hlt
jle
push
add
(bad)
adc
or
sbb
inc
pop
ins
call
jle
or
hlt
jle
mov
add
ins
call
cmp
jle
ds
or
mov
test
jle
jle
push
aas
push
add
jle
scas
gs
gs
or
or
adc
hlt
jle
lea
sbb
pop
or
jle
hlt
jle
push
jle
sbb
push
rcl
pop
add
jle
shl
push
test
jle
sub
arpl
or
lea
shl
imul
or
test
push
jle
ds
out
jle
rcl
pop
jle
add
pop
pop
jle
jg
aas
push
cmp
mov
add
dec
scas
or
add
push
ins
call
sbb
movd
ds
hlt
jle
cmp
add
inc
mov
pop
shl
call
adc
add
imul
ins
call
add
sbb
pop
jle
jmp
push
jle
or
add
and
push
sbb
dec
or
jle
cmp
scas
gs
cmp
jle
ds
jle
scas
add
dec
push
sbb
push
jle
ds
jle
jmp
mov
or
pop
shl
gs
jle
lea
jle
add
jo
jle
jle
aas
push
scas
cmp
jle
add
push
jle
mov
add
jle
sbb
jle
dec
push
inc
pop
pop
pop
pop
pop
sbb
dec
push
jle
jle
jle
test
adc
dec
jle
adc
add
lea
or
jmp
dec
hlt
jle
adc
dec
jle
add
dec
sbb
sbb
jle
dec
add
aam
out
jmp
push
or
dec
out
sbb
push
add
add
push
or
push
aam
inc
pop
hlt
jle
cmp
cmp
aam
inc
pop
jle
jle
jle
or
cmp
mov
add
jle
test
imul
pop
ins
call
or
push
pop
pop
adc
jle
or
hlt
jle
push
jmp
jle
call
inc
mov
push
or
lea
push
add
jle
push
ins
call
add
ds
aas
push
jle
ins
call
sbb
push
inc
pop
rcl
(bad)
shl
cmp
inc
mov
out
sbb
adc
aas
push
or
push
out
ds
rcl
lea
push
jo
ins
call
jo
jmp
pop
hlt
jle
dec
rcl
cmp
hlt
jle
push
add
jle
jle
ds
mov
ds
jle
aam
rcl
cmp
hlt
jle
pop
test
dec
dec
push
ds
scas
add
rcl
push
add
push
dec
push
jg
dec
push
pop
pop
test
pop
sbb
xor
jmp
push
jle
add
sbb
or
pop
pop
aas
push
sbb
mov
pop
das
pop
pop
add
pop
cmp
jle
add
push
adc
inc
pop
dec
push
jle
ds
or
pop
jle
add
pop
ins
call
aam
add
cmp
pop
pop
or
shl
(bad)
ds
jle
shl
cmp
jle
add
out
hlt
jle
xor
adc
jle
rcl
add
adc
or
cmp
lea
push
inc
pop
add
jle
sbb
cmp
rcl
add
inc
mov
push
test
jle
pop
add
cmp
jmp
das
jle
pop
pop
jle
shl
push
ds
ins
call
shl
push
cmp
add
cmp
jle
sub
pop
pop
aas
push
jle
ds
add
dec
push
add
pop
ds
sbb
arpl
inc
mov
imul
adc
push
inc
pop
jo
jle
cmp
inc
pop
ins
call
aam
jle
ds
hlt
jle
mov
jle
inc
mov
sbb
jle
cmp
dec
push
out
ds
jle
or
cmp
or
dec
add
jle
or
ds
ds
jle
rcl
pop
aas
push
hlt
jle
pop
hlt
jle
adc
sbb
and
push
jle
ds
ds
adc
hlt
jle
or
ds
dec
push
ds
cmp
sbb
dec
add
or
vphaddubd
push
jo
aas
push
ds
add
cmp
inc
pop
hlt
jle
push
jle
out
inc
pop
sbb
imul
push
or
or
rcl
pop
add
jmp
cmp
pop
ds
out
hlt
jle
and
cmp
sbb
lea
inc
mov
dec
push
shl
adc
jle
ds
aas
push
mov
jo
add
mov
ins
call
or
ds
cmp
aam
sbb
cmp
jle
out
out
inc
pop
test
sub
pop
pop
ds
ds
cmp
jle
inc
mov
jle
jle
out
add
adc
jmp
push
cmp
jle
ins
call
or
jg
pop
pop
sbb
scas
gs
sbb
jle
push
jg
aas
push
jle
hlt
jle
jle
dec
jle
or
inc
mov
adc
pop
cmp
inc
pop
ds
jg
rcl
pop
hlt
jle
sbb
scas
or
dec
jle
jle
jle
aam
or
ds
jle
jg
add
jle
add
lea
hlt
jle
sub
inc
mov
jle
movq
dec
push
sbb
or
add
ds
ds
jg
aam
or
or
push
add
arpl
ds
sbb
inc
mov
pop
jle
add
pop
cmp
pop
pop
ins
call
aas
push
or
dec
push
sbb
out
shl
add
scas
gs
mov
or
dec
jle
ds
add
cmp
hlt
jle
call
rcl
or
cmp
jle
rcl
addr16
push
add
jle
jle
jle
jo
jle
inc
pop
jle
cmp
add
pop
inc
pop
jle
add
dec
push
ds
sbb
cmp
jle
jle
jle
jle
scas
gs
jle
out
jle
hlt
jle
arpl
and
mov
imul
hlt
jle
dec
ds
inc
mov
inc
mov
pop
pop
sbb
push
jo
add
inc
mov
add
dec
push
or
push
add
hlt
jle
add
inc
pop
jle
jmp
dec
scas
gs
jle
lea
push
jle
cmp
jg
add
jle
test
pop
or
or
pop
add
mov
jle
aas
push
ds
jle
mov
jle
jle
add
ins
call
sbb
sbb
jle
jo
jle
shl
gs
ds
jle
cmp
jmp
push
jle
sbb
ins
call
aas
push
cmp
jmp
add
jo
inc
pop
inc
pop
ds
ds
aas
push
ins
call
pop
pop
pop
pop
jle
add
jle
jle
test
call
test
xor
aam
add
or
pop
ds
aas
push
ds
adc
jle
inc
mov
push
aas
push
jle
ds
add
out
inc
pop
adc
sbb
jle
ins
call
adc
jle
sbb
add
jle
hlt
jle
push
jg
jo
sbb
or
or
arpl
push
add
jle
shl
mov
push
test
sbb
jle
jle
jle
jle
shl
call
ds
sbb
imul
xor
pop
hlt
jle
gs
call
jle
inc
mov
add
pop
jle
sbb
cmp
pop
sbb
mov
jle
inc
pop
jle
dec
push
jmp
cmp
jo
sbb
ds
jle
jle
sbb
push
jle
or
cmp
pop
add
ds
jmp
or
push
pop
pop
add
pop
pop
hlt
jle
push
aas
push
or
adc
jmp
dec
pop
pop
jle
hlt
jle
push
hlt
jle
sbb
push
sbb
pop
jle
shl
xor
hlt
jle
gs
gs
jle
adc
cmp
jle
jle
cmp
jmp
cmp
out
jle
ds
sbb
pop
or
jle
jle
jle
cmp
jle
jle
add
ds
out
or
(bad)
scas
gs
test
sbb
jle
rcl
rcl
imul
pop
add
add
pop
rcl
(bad)
rcl
dec
jle
jmp
cmp
add
sbb
cmp
jg
out
jle
scas
gs
test
pop
aas
push
inc
mov
dec
add
jg
jle
dec
push
hlt
jle
dec
or
ds
add
pop
add
pop
add
or
cmp
rcl
(bad)
aam
sbb
cmp
ds
jle
ds
dec
push
aam
jle
jle
ins
call
add
sbb
scas
or
cmp
jle
jle
ds
adc
cmp
ins
call
dec
push
mov
inc
pop
aam
jmp
lea
sub
hlt
jle
pop
ds
test
push
jle
or
push
ds
inc
mov
or
cmp
inc
pop
cmp
jle
add
aam
or
gs
jle
push
cmp
add
aas
push
test
mov
jle
dec
inc
pop
or
jle
arpl
push
sbb
mov
pop
jle
jle
jle
jle
jg
test
pop
inc
pop
sbb
or
scas
or
rcl
cmp
or
jo
inc
pop
sbb
dec
out
or
cmp
sub
jle
jle
shl
push
jg
add
jle
or
rcl
push
jle
sbb
push
or
sbb
jle
add
lea
push
pop
pop
pop
pop
add
or
inc
mov
add
dec
hlt
jle
pop
ins
call
jle
mov
scas
gs
jle
cmp
jo
add
or
push
or
hlt
jle
adc
aam
out
jmp
push
add
adc
add
jle
jle
aas
push
test
call
out
jle
add
push
jle
jg
jle
hlt
jle
cmp
push
add
inc
pop
hlt
jle
(bad)
test
arpl
jle
arpl
(bad)
cmp
jle
add
sbb
or
or
jle
rcl
pop
jle
jle
mov
inc
mov
dec
or
pop
pop
scas
or
add
inc
add
ins
add
add
bound
jne
je
je
outs
add
xor
add
arpl
add
je
add
inc
add
jb
ins
add
add
push
ins
add
ins
add
push
add
popa
add
dec
add
inc
add
add
add
outs
add
add
add
dec
add
pop
add
jo
jb
jno
inc
add
dec
add
push
add
inc
add
outs
add
add
adc
outs
add
dec
add
bound
add
add
adc
add
outs
add
add
add
or
bound
add
add
or
add
je
add
adc
add
je
inc
add
js
xor
add
inc
add
jb
ins
add
add
sbb
jae
jns
ins
add
inc
add
outs
add
push
add
je
add
add
outs
mov
inc
inc
cmps
pop
dec
jge
mov
and
pop
push
sbb
mov
add
add
and
add
and
add
or
adc
add
sbb
adc
push
add
add
add
adc
add
add
add
push
adc
add
adc
add
add
and
add
add
add
push
add
add
adc
or
push
adc
add
adc
add
adc
xor
add
xor
adc
xor
add
xor
push
add
popa
add
add
or
add
add
add
add
or
add
add
adc
add
adc
add
or
add
add
adc
add
add
add
or
sbb
aas
pop
jg
aad
cmp
mov
and
add
or
or
and
add
adc
adc
sbb
and
add
sbb
sbb
and
movs
push
and
add
or
sub
sub
sbb
adc
add
cmp
cmp
add
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
jne
and
add
adc
pop
add
xor
and
add
and
add
add
add
add
or
add
xor
xor
aaa
cs
sub
add
cmp
gs
bound
sub
sub
sub
fs
ss
ss
add
add
add
outs
jo
jb
addr16
xor
xor
add
or
add
jo
outs
inc
ja
ins
add
adc
add
jo
outs
inc
ja
ins
and
arpl
add
add
adc
inc
push
jae
ins
push
fs
bound
gs
jbe
fs
dec
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
adc
jle
adc
add
add
jo
adc
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
