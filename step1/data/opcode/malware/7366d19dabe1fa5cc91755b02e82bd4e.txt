pop
mov
add
add
fs
add
add
add
add
ins
mov
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
imul
jae
add
add
add
add
dec
mov
add
add
add
inc
push
xor
cs
dec
dec
add
or
jae
addr16
outs
js
add
add
jnp
add
add
add
jnp
add
add
add
add
add
add
add
add
add
or
add
push
add
adc
add
movs
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
add
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
ja
ja
ja
ja
ja
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
adc
add
mov
add
add
and
adc
add
add
call
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
cld
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
and
add
sub
or
add
push
add
outs
add
add
je
dec
add
ins
add
add
add
add
bound
add
xor
adc
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
ins
add
arpl
imul
add
adc
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
arpl
ins
add
arpl
imul
add
js
add
add
add
ins
push
jmp
sbb
sub
call
jmp
sub
add
mov
jmp
repnz
add
jmp
fcmove
sbb
jmp
jmp
bound
push
jmp
popa
sub
shr
ins
lods
out
mov
add
or
add
jmp
ret
jmp
js
jmp
cmp
add
add
(bad)
(bad)
jmp
sbb
add
add
inc
jecxz
jmp
pusha
sbb
pop
jmp
add
add
jmp
add
add
add
add
sbb
adc
std
and
sub
and
lgdtd
stc
sbb
rol
jnp
into
xchg
movs
cmp
add
mov
and
call
pop
shl
clc
fwait
or
sbb
aam
lock
sbb
aam
mov
imul
push
mov
sti
cmp
leave
sub
mov
sbb
rcr
retf
stc
add
test
sbb
inc
mov
jle
cwde
mov
cld
push
mov
xchg
and
and
inc
ja
stc
add
xor
stc
sbb
retf
stc
add
addr16
ror
cmp
and
cmp
sbb
sti
xlat
cmp
ror
cmp
ror
in
dec
sub
and
push
ret
sbb
jb
push
retf
retf
in
sbb
div
sbb
and
xor
loop
push
and
std
sbb
das
adc
inc
ror
scas
int
retf
shl
push
sbb
mov
cmp
ror
add
popa
or
and
out
cli
jmp
loopne
sti
xchg
mov
mov
out
or
mov
xchg
mov
std
add
xchg
mov
push
cmps
(bad)
fisubr
pop
shl
clc
push
xor
retf
stc
add
icebp
cdq
add
fistp
sub
mov
cmps
std
sbb
mov
in
movs
fiadd
(bad)
fisubr
pop
shl
sub
and
loop
(bad)
jmp
int3
ins
xchg
dec
(bad)
repnz
mov
sti
xor
sbb
inc
and
and
scas
sub
push
cli
sbb
mov
xchg
adc
add
ror
in
push
mov
add
ja
pop
addr16
stc
add
pop
or
and
dec
add
aaa
adc
sti
pop
add
add
cmp
cld
and
into
retf
stc
add
or
stc
mov
in
adc
bound
pop
add
add
sub
shl
push
fst
cld
mov
fldenv
cld
int
in
sub
gs
clc
jmp
aam
inc
cs
pusha
call
mov
in
rcl
add
fwait
cmp
add
sbb
and
sub
xor
cld
cmp
retf
and
pop
xlat
cmps
test
sbb
loop
in
add
xchg
in
mov
stc
add
cmp
xor
rcl
mov
in
push
pop
xor
push
cli
sbb
mov
(bad)
fcmovnu
push
push
add
retf
and
iret
stos
and
mov
(bad)
xor
add
xchg
data16
dec
cmp
sub
add
add
and
jecxz
or
retf
stc
add
scas
adc
movs
loope
add
and
sbb
ror
lods
sbb
retf
in
mov
pop
mov
dec
mov
sub
mov
inc
and
test
sbb
dec
in
aad
and
dec
inc
mov
shl
in
fcom
sbb
and
fs
ins
sbb
retf
jbe
in
int
mov
sbb
std
dec
cmp
std
shl
shl
sbb
jb
in
mov
mov
sti
shl
sar
and
xchg
je
mov
pop
test
mov
inc
aad
and
sbb
rol
sub
cmp
jno
or
loope
aam
stc
add
fldenv
aam
add
pop
or
push
sbb
retf
in
rol
test
and
pop
sub
mov
inc
aam
sbb
cld
sar
nop
fnstenv
outs
call
dec
in
scas
and
std
add
sbb
or
outs
std
cmp
cld
inc
mov
jns
ror
dec
imul
sbb
mov
and
repnz
and
test
mov
xchg
mov
xchg
and
and
dec
enter
and
dec
sbb
aad
add
ret
je
icebp
in
pop
jnp
stc
add
inc
mov
and
adc
outs
push
outs
adc
xlat
mov
cld
push
into
mov
loop
fcmove
stc
add
mov
mov
in
ins
mov
sbb
(bad)
mov
ret
imul
push
pop
cli
sbb
retf
stc
add
cmp
(bad)
clc
int
sar
jmp
jecxz
std
add
sbb
pop
int3
add
ror
in
out
fcomi
add
mov
add
into
lds
mov
xor
loopne
aad
sbb
mov
rcr
stc
sbb
mov
jne
aad
jg
push
(bad)
sbb
retf
in
pop
sar
sbb
lock
and
mov
adc
and
jg
mov
test
inc
jmp
cld
add
xchg
call
ja
sub
retf
stc
fwait
pop
fdivr
shl
and
mov
mov
add
cmp
loop
and
jp
mov
sub
pop
add
sbb
loope
sub
push
stc
dec
nop
(bad)
fldcw
(bad)
sub
shr
add
push
ficomp
adc
call
int3
movs
adc
sbb
cmp
int3
movs
imul
pushf
push
sar
cmp
xor
inc
push
retf
idiv
test
(bad)
mov
or
push
fucomi
retf
dec
movs
sub
jo
mov
dec
inc
push
test
dec
nop
or
jmp
ror
test
jmp
std
jmp
jns
(bad)
div
sub
(bad)
pop
sub
sti
mov
std
sub
push
jbe
fdivr
xchg
inc
dec
ror
pop
dec
popa
jno
mov
adc
idiv
lods
xchg
outs
mov
(bad)
fdivr
call
jmp
cmps
imul
not
sti
jmp
jp
cmps
data16
in
xor
in
add
in
gs
test
sar
out
sbb
fmul
shl
fsub
not
mov
adc
mov
(bad)
loope
adc
cmps
imul
jmp
push
clc
mov
jecxz
clc
cld
(bad)
pop
std
mov
shl
loop
data16
jmp
(bad)
jb
cmp
shl
in
mov
cmps
std
xor
adc
imul
movs
lods
jp
mov
data16
call
sti
jmp
pushf
xor
cld
out
adc
rcl
mov
jge
cld
aam
push
mov
push
int3
adc
shl
jecxz
lods
jp
mov
gs
call
sti
jmp
shl
into
fnstcw
adc
rcl
test
addr16
cmps
imul
adc
jle
rcl
push
not
into
mov
dec
mov
adc
into
mov
fwait
push
ficom
xchg
mov
addr16
rcl
pop
movs
data16
shl
clc
xlat
rcl
clc
ror
adc
shl
bound
std
cwde
loop
data16
jmp
adc
aam
fwait
(bad)
adc
rcl
jge
icebp
call
(bad)
fldenv
in
push
adc
hlt
push
adc
clc
in
jp
movs
mov
cli
xor
data16
call
sti
in
pushf
or
adc
mov
std
cwde
loop
data16
in
cmps
(bad)
in
shl
jbe
(bad)
(bad)
adc
rcl
ficom
dec
stc
stos
cmps
rcl
stc
jne
adc
jno
ins
mov
shl
(bad)
push
adc
push
call
mov
cmps
mov
data16
sar
xchg
bound
push
adc
cmps
imul
movs
data16
sti
stc
shl
add
in
gs
test
popa
mov
sar
cwde
loop
data16
out
sbb
jmp
cld
in
jmp
jmpw
jmp
daa
nop
out
cmps
push
xchg
rcl
adc
push
rcl
hlt
mov
sbb
(bad)
(bad)
push
adc
cld
out
adc
rcl
ret
sti
jmp
jp
cmps
data16
mov
add
in
gs
test
(bad)
pop
cwde
mov
adc
sar
adc
rcl
mov
imul
cld
shr
imul
ret
sar
lods
jno
mov
or
adc
int3
add
shl
test
nop
push
adc
int3
ror
sar
aad
stc
adc
push
aam
fdivr
pushf
(bad)
daa
(bad)
call
sar
cs
test
mov
popa
sub
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
popa
sub
pop
mov
test
add
test
pop
mov
test
add
cld
ins
outs
imul
mov
cs
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
pop
cli
mov
jns
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
movs
iret
mov
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
xchg
pop
sub
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
pop
mov
test
add
test
stc
sbb
retf
mov
aad
or
mov
xor
sub
add
pop
mov
movs
call
inc
gs
daa
icebp
cld
cmp
out
aam
aad
inc
mov
es
cli
hlt
dec
and
push
mov
loopne
in
popa
jns
(bad)
or
dec
(bad)
or
call
jae
mov
(bad)
bound
lahf
cmc
arpl
cmp
ja
aas
xor
xchg
data16
lahf
push
pop
outs
shl
xchg
test
add
mov
jae
repnz
ret
or
inc
cmp
pop
or
inc
leave
call
repnz
dec
mov
repz
cwde
scas
bound
int
mov
(bad)
movs
es
pop
jle
ins
adc
cwde
mov
xor
xor
imul
cmp
repnz
xor
mov
ret
test
mov
lock
mov
in
call
dec
or
sbb
into
jmp
arpl
shl
push
sbb
mov
mov
clc
loope
mov
or
mov
stc
cwde
nop
mov
(bad)
sahf
jl
xor
cmp
cld
sbb
loop
cmp
add
lods
jae
popf
test
fs
dec
mov
pop
push
add
push
outs
iret
and
mov
push
popf
fisubr
(bad)
sub
ret
mov
(bad)
xchg
cmp
or
mov
or
sbb
sbb
ins
inc
fmul
mov
mov
es
pop
push
jp
xchg
jnp
stc
int
mov
shl
inc
outs
test
dec
or
dec
call
mov
cmp
mov
add
sub
pop
lds
push
add
test
lods
or
or
aam
cmp
shl
jg
push
and
ror
pop
mov
in
lahf
sub
xchg
mov
shr
je
loope
in
aad
retf
xchg
js
mov
dec
sub
cmp
jecxz
in
bound
add
push
(bad)
repz
pop
ror
xchg
outs
mov
lock
inc
dec
and
sub
mov
or
dec
arpl
mov
test
mov
pop
dec
in
mov
iret
or
sbb
lmsw
xlat
inc
cli
push
xor
mov
jg
int3
inc
inc
ss
cmps
mov
neg
jg
rcl
fistp
xchg
mov
jbe
repz
nop
jae
loope
out
stc
sahf
jbe
(bad)
mov
outs
lods
cli
fldenv
cmp
add
mov
sub
cld
push
daa
dec
fwait
inc
push
frstor
cmp
pop
push
popa
mov
test
clc
xchg
hlt
adc
push
shl
cmps
jnp
loop
shl
pushf
mov
push
inc
ret
cld
scas
pop
nop
rcl
push
pop
adc
fcmovnbe
xchg
sub
mov
ins
lahf
jno
mov
push
pop
add
pop
mov
mov
push
test
add
jp
out
or
dec
call
or
adc
or
pop
add
loopne
rcl
std
rcl
aas
push
sub
movs
ror
cmp
dec
imul
and
xor
gs
xor
aam
pop
test
in
mov
adc
mov
dec
sbb
xchg
es
fcomi
imul
lea
jo
dec
and
nop
jae
mov
or
xchg
xor
mov
mov
retf
pop
mov
movs
push
push
cmp
lods
(bad)
dec
push
pop
push
ficomp
mov
mov
mov
sti
push
jl
ins
bnd
sti
sub
mov
inc
je
dec
pop
sbb
in
jge
push
cmp
addr16
lods
loop
mov
stos
mov
inc
pop
ret
and
dec
push
pop
mov
movs
es
and
and
imul
stc
mov
mov
scas
and
in
test
lds
out
push
pop
xor
mov
(bad)
iret
xor
popa
mov
sahf
cdq
test
inc
xchg
push
cmp
pop
test
movs
mov
(bad)
pop
loopne
push
push
fld
push
jg
adc
scas
sub
icebp
das
push
imul
fwait
cmps
call
adc
or
je
scas
mov
inc
ins
jp
push
adc
mov
pop
mov
das
repnz
push
inc
bound
add
(bad)
sar
jo
push
rcr
cmc
std
dec
sbb
push
imul
call
inc
and
dec
mov
push
mov
or
push
cmp
stc
inc
dec
movs
ror
inc
arpl
(bad)
scas
pop
or
push
mov
dec
sub
jb
mov
xor
pop
in
xchg
jg
push
cmp
pop
rol
sub
pop
jae
(bad)
mov
push
mov
out
arpl
push
xor
fcmovbe
mov
mov
repz
or
pop
adc
fldcw
sbb
push
outs
out
fwait
cmps
(bad)
shl
out
loope
jle
out
rcl
mov
mov
xor
imul
jle
cmp
loop
cwde
mov
and
dec
mov
js
dec
sub
xor
ja
jbe
mov
popf
out
dec
pop
fisttp
fcom
js
adc
js
lods
fs
jbe
mov
es
add
mov
xor
fist
pop
pop
idiv
stos
or
lods
mov
arpl
adc
ror
pop
cdq
arpl
das
mov
sub
mov
mov
pop
pop
cmp
mov
shr
mov
outs
cmp
minps
jl
pop
repz
adc
jne
or
dec
and
xchg
les
shl
test
push
mov
stos
mov
xor
pop
mov
xchg
daa
pop
pop
shrd
retf
retf
mov
lahf
xor
fisttp
mov
and
test
sub
aam
shr
cmp
pop
retf
hlt
cmp
mov
dec
xchg
les
xchg
movs
loop
ficomp
outs
adc
sub
(bad)
in
jl
lods
pusha
pop
adc
cmp
push
mul
stos
push
jnp
test
(bad)
in
adc
dec
sbb
pushf
imul
rcl
movs
bound
mov
les
sbb
cld
adc
sbb
outs
pop
or
scas
in
mov
imul
repz
repnz
mov
pop
and
mov
fistp
std
(bad)
stc
in
aas
push
mov
hlt
int
scas
pop
adc
dec
add
imul
push
ffreep
(bad)
outs
sub
cmp
in
adc
and
sub
cs
mov
fisub
imul
lock
push
push
into
xor
pop
test
xor
out
sti
xor
(bad)
sti
push
(bad)
cs
cwde
push
mov
mov
(bad)
das
(bad)
pusha
cmp
mov
or
(bad)
out
popf
mov
mov
mov
xchg
add
jge
shl
lahf
mov
mov
and
out
jnp
imul
push
mov
pop
sbb
inc
shr
lock
sbb
lock
jbe
lahf
call
sbb
je
stos
movs
xor
push
xor
dec
push
les
adc
mov
pop
lods
movs
add
fwait
mov
inc
xchg
pop
or
pusha
adc
dec
ss
and
mov
jno
call
in
das
adc
js
cli
push
iret
inc
mov
cmps
pop
repz
pop
mov
or
test
ins
and
mov
popf
mov
retf
cs
add
push
and
cmc
call
jmp
sbb
jae
rcr
stos
and
mov
outs
push
hlt
adc
sbb
add
mov
js
adc
ds
push
sbb
mov
and
or
cmp
js
and
pushf
lahf
add
xchg
inc
cmp
aaa
push
adc
nop
das
push
sbb
xor
xor
mov
dec
movs
xor
push
jnp
retf
cmp
sbb
and
dec
mov
rcl
int
add
sti
jmp
scas
(bad)
pop
dec
jg
pop
fistp
add
add
cmps
mov
sub
jge
ds
loop
sub
pop
dec
jmp
adc
ins
and
mov
popa
mov
lods
adc
stc
and
fstp
add
je
pop
or
adc
mov
js
std
inc
cmp
(bad)
fsub
cmps
bound
scas
out
addr16
xor
xor
xchg
pop
lods
retf
xchg
push
mov
pop
(bad)
sbb
pop
sahf
push
or
das
sbb
add
adc
cdq
mov
push
or
push
fisub
dec
push
inc
cmp
and
(bad)
adc
or
adc
xor
inc
jo
push
out
ss
cmp
dec
in
sub
inc
cmp
xchg
(bad)
cmp
push
dec
cmp
push
xchg
adc
and
rcl
sub
test
sbb
in
cmc
repnz
mov
clc
std
or
adc
mov
inc
and
sub
xlat
rcl
fisubr
and
enter
mov
or
in
pop
loopne
(bad)
(bad)
mov
mov
and
mov
sub
(bad)
in
dec
dec
push
jne
repnz
cmp
scas
pop
or
sub
arpl
out
sub
mov
retf
in
push
mov
test
sbb
jg
or
mov
ja
sar
call
inc
retf
cmps
adc
xchg
jg
es
fsubr
xchg
out
(bad)
or
pop
inc
idiv
jle
or
clc
jle
mov
push
xor
in
sbb
jge
mov
lods
out
(bad)
xor
add
adc
mov
inc
mov
add
sbb
repnz
icebp
mov
cmps
pushf
pop
hlt
pop
cmp
(bad)
push
jge
outs
aam
and
or
push
dec
xchg
add
sahf
sti
popf
lock
iret
pusha
xchg
dec
push
cs
aad
cmp
out
xchg
pop
jecxz
outs
mov
shr
mov
movs
xchg
loopne
fist
mov
stos
mov
aas
gs
sbb
repz
cmp
jne
dec
arpl
gs
icebp
cmp
cmp
iret
add
pushf
inc
mov
ror
daa
jmp
leave
mov
mov
stos
adc
(bad)
call
mov
and
stos
dec
xlat
sub
add
in
xlat
pop
xchg
jb
jae
or
jnp
sub
mov
add
in
mov
and
sbb
iret
push
push
inc
mov
push
test
aas
imul
ret
inc
push
and
jns
fmul
stos
adc
out
xchg
fsubr
mov
ds
xchg
pushf
pop
sbb
cs
test
mov
ret
out
shl
cmp
jmp
les
cdq
jp
jne
adc
dec
shl
ins
(bad)
push
fisub
jmp
inc
dec
mov
ss
test
int3
adc
cld
arpl
ror
fprem
add
(bad)
lea
lahf
movs
jge
xchg
xchg
popf
mov
inc
mov
dec
xor
call
add
mov
int3
into
jnp
sbb
je
push
cld
push
ret
out
in
or
mov
push
fimul
fnsave
mov
outs
pusha
mov
push
cli
call
mov
aas
stos
call
test
cmps
in
push
pop
out
xor
or
push
jmp
into
ins
mov
out
xchg
and
push
cmc
lods
in
enter
sbb
fnstenv
shr
pop
out
repnz
stos
lds
repz
adc
das
xor
enter
ror
lahf
retf
push
jo
push
fisubr
jne
(bad)
ror
pavgb
ret
lods
mov
mov
test
adc
pop
jmp
cmp
mov
xor
sub
aam
inc
adc
nop
repz
dec
(bad)
movaps
mov
or
sbb
ins
imul
pop
stc
dec
pop
jae
shr
mov
lds
lods
nop
mov
shl
pop
mov
rol
bound
sti
and
inc
xor
js
outs
mov
loopne
xchg
leave
mov
mov
fcmove
push
clc
imul
data16
add
jbe
not
in
pushf
test
add
ins
jg
addr16
jmp
push
in
cmp
ins
jb
in
push
mov
jmp
mov
dec
and
mov
and
(bad)
shl
add
pop
push
and
pop
ss
js
push
fisttp
inc
test
jle
dec
and
pop
sahf
sub
sbb
cwde
push
xlat
arpl
mov
xchg
ror
push
sbb
sub
sbb
(bad)
test
push
push
mov
cmp
repz
dec
out
movs
ret
xor
or
mov
dec
jp
rol
rcl
xchg
clc
inc
jmp
call
inc
movs
xor
jns
jns
sbb
sbb
(bad)
sub
pop
outs
leave
sub
mov
loop
(bad)
cmp
cmc
stos
scas
ja
pushf
dec
rcl
es
ds
lock
out
frstor
and
jb
pop
fld
xchg
fisubr
stos
xor
push
imul
movs
test
ja
lahf
in
sub
ret
push
or
ss
sar
jecxz
fwait
inc
jo
lods
fdivrp
fistp
test
and
iret
les
and
cli
das
in
mov
retf
add
test
ret
aad
pop
fldcw
jb
dec
mov
cmp
mov
loopne
or
jne
ja
test
inc
sub
bound
dec
out
fldcw
jbe
push
add
cmp
adc
dec
sbb
mov
test
sbb
aad
cld
push
cmp
fwait
out
push
cmps
fnstenv
xlat
fidivr
int3
xor
pop
mov
int3
and
inc
mov
pop
cld
ucomiss
popa
or
fwait
pop
push
jmp
(bad)
xchg
test
xchg
in
mov
dec
mov
jbe
mov
cli
add
mov
pop
gs
test
jne
or
xor
inc
retf
pop
stos
test
dec
sub
add
ins
xor
nop
adc
add
fist
add
in
sub
or
sysexit
lahf
mov
mov
cld
sub
(bad)
(bad)
adc
mov
xor
jmp
retf
repnz
mov
add
sub
cmps
clc
fidivr
mov
lea
gs
(bad)
fsub
in
aad
outs
fldcw
je
mov
inc
sbb
mov
mov
adc
jno
push
push
ins
pop
cmp
data16
call
into
retf
xor
mov
lea
xchg
cmc
and
mov
dec
mov
adc
mov
(bad)
das
ror
xchg
sub
lea
dec
push
sahf
arpl
out
mov
mov
xchg
adc
dec
xor
xchg
(bad)
das
mov
and
iret
push
mov
pop
or
prefetchwt1
(bad)
(bad)
out
hlt
aad
imul
sahf
cmp
popa
inc
xchg
cli
shl
pop
js
add
aam
lock
sub
(bad)
cmp
adc
repz
arpl
loope
rol
and
fisttp
jb
cdq
pop
hlt
fld
xchg
mov
xchg
mov
int
cdq
out
or
int3
lods
lock
dec
cwde
fbld
push
cmc
ret
sbb
push
fcmovnu
sbb
repz
test
imul
(bad)
sbb
jnp
xor
aaa
retf
fiadd
fidivr
jg
or
retf
lock
jns
sbb
xchg
ret
add
outs
xor
and
movs
ins
shl
jo
and
xlat
pusha
ret
or
pop
dec
push
int3
jmp
mov
or
xor
stos
repz
(bad)
mov
stc
(bad)
xor
mov
dec
popa
mov
mov
xor
dec
add
dec
das
push
(bad)
xacquire
fldenv
add
jecxz
popa
mov
or
push
lea
jge
scas
mov
int
mov
ror
xor
test
mov
jg
cmc
imul
out
sub
jecxz
sbb
imul
outs
xchg
js
mov
dec
jmp
je
lock
jne
sub
push
sub
enter
mov
mov
jnp
mov
push
sahf
cmp
mov
rcr
fimul
sbb
and
mov
stc
xchg
in
ret
(bad)
sub
in
into
pop
add
jl
sub
loopne
cmp
push
lock
mov
sub
mov
into
inc
ins
sub
xor
fcmovbe
and
sar
ins
pcmpeqd
cwde
ret
stos
xlat
inc
fisubr
push
mov
jp
aad
or
sahf
ror
retf
xor
jl
push
add
lahf
ja
clc
or
ja
retf
adc
mov
inc
fadd
aaa
fnsave
daa
add
daa
gs
icebp
dec
or
inc
in
aaa
xchg
pop
bound
sub
fldcw
push
popa
jl
adc
int3
add
or
add
jne
mov
cmps
cmp
xchg
out
push
dec
push
clc
mov
adc
pop
rcr
mov
add
mov
sub
xchg
mov
or
or
adc
jns
push
xchg
sub
aaa
adc
aaa
xchg
or
jmp
mov
sti
unpckhps
fst
or
das
ins
jns
add
leave
mov
adc
into
sub
push
shr
or
cmp
dec
push
clts
pop
mov
xchg
ret
cmp
mov
and
lods
xchg
repnz
pop
js
stos
fimul
adc
mov
test
adc
call
xchg
dec
xchg
adc
jmp
ja
pushf
dec
cmps
push
add
jmp
es
cmps
repz
and
lods
xor
outs
mov
out
(bad)
int3
push
hlt
jl
call
sbb
inc
(bad)
push
jne
call
jle
inc
pop
leave
push
(bad)
push
push
push
dec
add
ret
sbb
jp
xor
sub
dec
mov
(bad)
mov
repnz
push
cwde
shl
test
popa
(bad)
sub
add
rol
sub
pop
push
clc
cwde
cli
(bad)
jmp
int
mov
mov
(bad)
(bad)
scas
cmps
fadd
je
mov
int
sar
and
push
fs
add
mov
gs
xchg
pop
arpl
jecxz
hlt
push
loopne
push
or
cdq
xchg
sub
pop
fucomp
aaa
xor
aam
hlt
pop
in
stc
pop
mov
xchg
xor
out
ds
das
mov
jmp
inc
das
nop
dec
sbb
mov
sub
adc
push
sbb
mov
push
adc
js
sbb
lods
jne
sub
or
inc
push
adc
or
sti
add
in
jmp
pusha
sar
(bad)
cld
les
xchg
add
lds
fsub
push
enter
fcmovu
xchg
gs
ins
pop
addr16
add
push
clc
ror
sti
popa
push
and
fdivr
movs
mov
add
mul
data16
xor
mov
pushf
in
mov
mov
dec
or
aad
jg
push
call
sub
mov
xchg
mov
sbb
out
cwde
mov
icebp
movs
add
and
arpl
cld
add
push
jge
sti
repnz
cld
mov
inc
mov
push
and
(bad)
jns
sbb
fwait
out
sub
sub
sub
std
xchg
outs
add
sbb
fistp
inc
sbb
sbb
ret
std
mov
lods
fmul
idiv
iret
rol
ins
frstor
sub
in
mov
jne
sub
stos
or
loope
add
jp
jmp
inc
test
into
mov
aam
leave
and
push
int
mov
jmp
fild
pop
shl
dec
mov
stos
jmp
push
push
repz
dec
pop
jecxz
inc
xor
cmp
pop
push
div
fdivr
adc
ins
mov
xchg
push
cmp
mov
mov
call
lods
stos
loope
and
arpl
pop
adc
inc
push
idiv
mov
mov
inc
push
scas
sbb
sub
cwde
jmp
jp
stos
push
dec
or
mov
aaa
and
ds
imul
cwde
(bad)
shl
data16
or
xlat
jmp
adc
xchg
outs
stos
rol
aad
sar
cdq
les
outs
retf
and
out
mov
stos
stos
imul
adc
int
jg
in
push
les
jl
test
scas
jns
dec
adc
adc
in
idiv
push
ret
push
clc
gs
ret
xchg
inc
dec
out
movs
cmp
scas
pop
xor
fwait
pop
pop
dec
xor
pop
fldcw
pop
movs
or
(bad)
jp
dec
popf
add
lahf
add
sti
cmps
add
int3
dec
cwde
mov
aas
daa
es
adc
push
(bad)
jb
dec
dec
in
cmp
add
mov
enter
(bad)
and
(bad)
cld
pop
mov
ins
or
mov
mov
test
pop
in
test
aad
shr
sbb
push
xlat
mov
inc
(bad)
cli
retf
call
push
nop
mov
stos
retf
pop
enter
test
addr16
dec
out
jnp
add
aam
fsubr
rcr
loope
mov
ficomp
cli
push
ja
movs
fdivr
jmp
(bad)
sar
add
ss
sbb
or
mov
push
es
sub
mov
int3
and
inc
cmp
sbb
sbb
jp
jb
inc
or
or
xchg
shl
sbb
push
jne
ins
pushf
sub
mov
pushf
das
mov
enter
cmp
mov
mov
cmp
xchg
and
ins
dec
mov
sbb
aad
loope
aad
fcomi
in
fidivr
hlt
push
lea
in
add
mov
and
pusha
mov
xor
retf
cdq
push
cmp
test
test
jle
test
outs
cmps
in
outs
repnz
test
and
inc
pop
push
leave
sub
stos
fild
mov
sbb
inc
das
and
mov
cmp
test
push
add
xor
sub
or
lods
clc
(bad)
push
jns
ds
inc
lahf
adc
sbb
inc
jmp
adc
idiv
jns
sub
out
fld
movs
ja
jno
aad
retf
nop
jns
xchg
jmp
(bad)
sbb
cs
pop
mov
mov
sahf
sub
sub
movs
adc
mov
mov
adc
mov
xor
out
imul
cmp
pop
in
or
add
in
and
outs
jmp
adc
dec
test
mov
mov
push
dec
dec
add
push
js
add
test
sub
sbb
fmulp
bound
mov
dec
das
leave
in
outs
das
push
sbb
(bad)
bound
and
sbb
or
xor
mov
cmp
jo
in
call
popf
sbb
cld
jg
adc
or
iret
inc
mov
lock
sbb
pop
pop
push
stos
sub
jbe
sti
scas
cld
pop
dec
(bad)
int3
or
in
or
mov
add
data16
pop
das
mov
das
mov
or
fldpi
jecxz
add
xchg
xchg
pushf
test
adc
mov
and
repnz
cli
rcl
lods
add
xchg
add
jmp
mov
mov
popa
call
in
imul
pop
pop
cmp
xor
mov
mov
dec
repnz
ins
gs
mov
pop
jae
mov
icebp
jmp
(bad)
mov
xchg
out
inc
call
sbb
cmc
jo
ja
jp
ret
jo
inc
xor
push
dec
sub
addr16
push
mov
push
bnd
call
mov
test
dec
cmp
xchg
ror
out
xor
stc
sbb
retf
stc
sbb
retf
stc
ins
jmp
mov
addr16
stc
jb
popf
mov
jns
ins
and
add
stc
jb
and
add
stc
jb
xchg
mov
jmp
inc
jae
mov
jmp
pop
sbb
test
mov
rol
add
jmp
(bad)
or
xchg
xchg
sbb
xchg
mov
icebp
clc
jae
ins
xor
jae
ins
imul
ret
rcr
ret
(bad)
(bad)
jmp
add
lahf
pop
pop
ret
out
adc
mov
fdivr
push
push
ret
out
loop
mov
out
xor
mov
pop
jl
mov
push
mov
stos
cmc
(bad)
icebp
adc
jl
pop
push
(bad)
iret
push
pop
imul
push
ins
ins
adc
inc
aam
push
jmp
or
fst
dec
outs
shl
pop
mov
sub
and
lods
mov
add
jmp
movs
mov
fimul
test
inc
(bad)
jno
mov
call
test
repz
cmp
mov
out
sub
popf
dec
xchg
cmc
cmp
xor
or
outs
xor
das
and
aad
repz
mov
jecxz
stc
add
mov
or
out
pop
or
xor
jbe
dec
sub
add
fs
dec
popf
pop
cmp
fimul
mov
popf
dec
lds
xlat
pop
inc
jne
movs
cmc
inc
lea
dec
lods
mov
cmp
les
sbb
fisubr
pop
daa
test
xchg
mov
mov
stc
stos
jg
push
cs
mov
leave
and
add
mov
mov
dec
jb
stos
mov
inc
and
inc
fbld
les
xor
xchg
xchg
scas
pop
fdivr
inc
jmp
mov
outs
je
js
ins
int3
or
shr
out
(bad)
fiadd
mov
jmp
sbb
sbb
xchg
cmp
mov
retf
ficom
dec
popa
inc
(bad)
cwde
cmps
sub
pop
or
dec
neg
shl
movzx
dec
fidivr
push
call
loop
mov
in
xlat
sbb
mov
test
inc
outs
lds
into
mov
sbb
das
jo
(bad)
loop
sub
cdq
(bad)
retf
rcr
cld
xlat
inc
std
or
sub
retf
cmps
sahf
cwde
pushf
mov
xchg
push
addr16
inc
cld
sahf
in
in
inc
pop
adc
test
jnp
test
(bad)
or
and
xchg
call
mov
(bad)
jmp
pop
add
add
add
add
lea
ror
pop
mov
hlt
sti
pop
in
sbb
ins
mul
aaa
inc
arpl
inc
mov
cmp
mov
xchg
mov
mov
lea
jno
mov
scas
jmp
sbb
scas
mov
jb
stc
scas
lods
enter
ins
sub
repnz
jbe
add
or
mov
inc
fwait
mov
add
fisttp
xchg
inc
icebp
jb
pop
mov
fcmovnbe
cwde
mov
or
js
sbb
inc
dec
mov
pop
cmp
push
mov
(bad)
xchg
add
add
push
(bad)
jmp
cmp
add
add
add
(bad)
sbb
or
jge
sbb
adc
dec
mov
cmp
inc
je
sub
fsubr
clc
les
rcr
and
ja
xchg
lea
add
push
(bad)
cmp
and
pop
clc
adc
xor
mov
jo
jg
ficomp
out
repnz
test
rol
stos
scas
repz
sbb
pushf
add
ds
jae
push
jp
xlat
dec
pop
mov
cmps
xchg
std
pop
loop
cmp
xchg
push
out
pop
dec
pop
xchg
mov
or
inc
xchg
xor
mov
aad
or
jmp
push
int3
jno
mov
and
ret
(bad)
mov
into
mov
push
sbb
jae
leave
dec
xchg
xchg
or
out
or
cmps
fwait
mov
jno
push
fdivr
fs
cmp
les
xor
es
imul
test
mov
push
test
and
dec
jmp
fs
push
cmps
lock
jp
out
mov
or
sbb
push
xchg
outs
xor
shl
cwde
idiv
jge
js
ror
dec
rcr
in
jmp
mov
push
jl
adc
mov
jno
jne
outs
pop
xchg
adc
cmp
les
push
pop
imul
jae
and
and
ret
imul
in
outs
add
iret
das
cli
mov
arpl
jno
js
(bad)
into
movs
dec
sbb
das
cli
aad
cwde
inc
mov
jmp
(bad)
pusha
pop
add
jae
ins
add
mov
enter
and
dec
test
call
bound
test
in
rol
xor
mov
mov
nop
xchg
int3
xor
inc
(bad)
jmp
mov
in
sbb
mov
arpl
aaa
shl
mov
dec
sub
dec
enter
mov
out
jne
inc
inc
test
ins
gs
dec
xor
push
movs
cmps
mov
mov
sbb
sbb
lea
and
lods
and
pop
jl
jg
retf
fcomp
inc
test
sbb
fucomip
sub
push
jecxz
enter
(bad)
mov
adc
mov
push
idiv
inc
and
lds
(bad)
mov
out
sbb
inc
adc
loop
rcl
mov
and
out
or
aad
rcl
popa
std
ret
ins
into
adc
cmp
push
push
cwde
or
cld
mov
pop
test
cli
mov
xchg
push
push
inc
sub
and
aad
xchg
push
call
cmp
pop
or
lock
test
jl
(bad)
rcl
mov
cmp
adc
jnp
mov
jmp
xchg
mov
pushf
push
outs
and
gs
fimul
imul
mov
retf
push
outs
add
or
pop
ja
pop
mov
xchg
mov
es
add
stc
cmps
mov
(bad)
jg
out
jbe
xchg
ins
xor
and
push
repz
dec
pop
nop
xchg
cmc
out
pop
adc
dec
cmc
ret
and
and
in
mov
fist
mov
pop
mov
mov
addr16
iret
in
in
popa
scas
in
add
ror
xchg
mov
fidiv
arpl
repnz
xor
xor
or
arpl
adc
jo
pushf
cmc
stos
adc
cli
retf
nop
loopne
mov
aam
aas
mov
cmp
outs
clc
inc
inc
sub
adc
add
rcl
test
pop
(bad)
adc
mov
test
inc
ins
lods
pusha
cmp
xor
outs
test
inc
add
lock
std
enter
xchg
fmul
sub
push
and
cwde
dec
nop
cli
lds
xor
test
xchg
push
dec
popf
test
inc
loopne
cmps
xor
or
in
dec
aam
pop
push
popf
pop
sti
rcr
cld
arpl
add
out
loopne
cmove
xlat
pop
ret
movs
imul
sub
sub
adc
scas
call
pop
pop
jmp
mov
movs
shl
fisttp
jno
cmps
icebp
sbb
das
ins
jge
fisttp
ret
xlat
movs
fsubr
cmps
pop
xchg
dec
push
loop
repnz
jo
std
mov
loopne
lods
(bad)
push
pop
addr16
or
and
in
push
mov
dec
mov
(bad)
mov
cdq
jle
xchg
rol
outs
add
add
push
(bad)
jmp
dec
add
add
add
add
jns
outs
mov
inc
cmps
xor
je
out
enter
fwait
and
cmp
adc
push
lods
xor
dec
stc
xor
xchg
inc
movs
cmp
iret
sub
repnz
mov
jbe
xchg
bound
jge
sub
lea
push
inc
mov
fmulp
push
lock
dec
test
ja
and
mov
lahf
mov
leave
mov
rcl
push
push
stc
aas
ds
mov
aam
jb
xchg
arpl
imul
shl
lods
aam
in
repnz
pop
mov
mov
aas
sbb
mov
pop
call
fisubr
lea
pop
imul
sar
neg
cmp
mov
xchg
jmp
not
frstor
std
inc
jns
pop
pushf
pop
or
loope
loop
sbb
sti
dec
adc
aad
into
ins
pushf
xchg
jge
fcom
(bad)
(bad)
jg
rol
push
mov
mov
or
je
sub
jl
fsub
xor
test
fmul
add
xchg
pop
cmpxchg8b
dec
ins
push
mov
sub
push
jp
movs
adc
mov
test
add
retf
cdq
xor
retf
les
movs
ins
xor
test
ficom
mov
jne
pop
sbb
lods
movs
fisttp
mov
pop
sbb
clc
inc
pop
aad
movs
add
das
lock
repnz
mov
dec
jb
fptan
mov
and
pop
xor
push
xor
add
mov
cmp
or
mov
int3
dec
mov
out
cld
inc
push
add
into
pop
xchg
pop
gs
mov
dec
test
lods
pushf
es
adc
xchg
xchg
shr
in
inc
fisubr
ins
push
adc
ins
leave
std
jnp
cmp
dec
pop
and
add
test
je
sub
or
mov
into
or
ficom
lds
int3
push
fisub
inc
fbld
data16
iret
jbe
sbb
jbe
aaa
sbb
imul
inc
lds
pop
jmp
pop
push
jno
jecxz
ins
(bad)
outs
adc
call
sub
dec
mov
imul
push
pop
gs
mov
cmps
je
fidivr
popa
sbb
(bad)
jmp
aad
add
shl
fistp
movs
dec
mov
inc
test
ficom
push
(bad)
es
cmps
adc
mov
ins
(bad)
xor
xor
aad
call
jb
gs
aaa
jg
cmp
(bad)
data16
jo
inc
jmp
xchg
hlt
call
ror
test
dec
mov
mov
fmul
add
xor
xchg
fisub
nop
out
add
jl
pop
xchg
movs
shl
addr16
ror
dec
das
shr
daa
cli
add
rol
sub
inc
lods
push
shl
das
inc
inc
mov
dec
adc
adc
and
push
jbe
pop
jmp
outs
call
pusha
cmp
pop
push
repz
leave
sub
aad
dec
test
popf
pop
or
les
and
pop
xchg
xor
lds
and
ror
ins
pop
jl
push
jecxz
xchg
movs
mov
xchg
inc
cmp
jno
sbb
adc
adc
lahf
jns
stos
mov
dec
add
out
sbb
lds
test
idiv
(bad)
scas
and
mov
jmp
shl
pop
xchg
xor
popf
xchg
fist
cmp
movs
cdq
jge
arpl
es
lods
xchg
ret
mov
repnz
dec
ror
inc
jae
ss
icebp
ret
jmp
push
jp
and
inc
mov
pop
pop
add
cmp
mov
dec
sbb
ret
clc
and
pop
call
jmp
mov
dec
imul
adc
pop
fmul
pusha
inc
mov
leave
sub
xor
out
xchg
mov
aas
mov
jp
lods
add
rol
push
cmp
pop
mov
jbe
push
aam
dec
cmp
pop
pop
ret
sbb
sbb
aaa
out
xor
mov
bnd
jecxz
pop
sbb
jg
xor
xchg
pop
pop
dec
xchg
mov
cld
sbb
pop
mov
cmp
mov
adc
cmp
sbb
mov
popf
dec
lea
(bad)
out
add
push
(bad)
jmp
or
add
add
add
clc
cmps
movhps
dec
push
or
in
adc
ret
mov
cs
ret
lods
xchg
jmp
std
add
sbb
add
sar
dec
arpl
ins
mov
dec
push
fisttp
mov
out
jecxz
cmp
fnsetpm(287
jmp
adc
push
out
and
mov
adc
mov
mov
out
sbb
dec
addr16
int
cmps
sbb
rcr
daa
mov
adc
dec
jmp
cmp
push
and
xchg
fld
ss
sahf
cmps
xchg
(bad)
sbb
and
test
stos
xor
push
xchg
(bad)
and
scas
pushf
jnp
(bad)
pop
arpl
(bad)
mov
in
adc
lahf
loope
and
rol
lods
jmp
cmp
xchg
xchg
ins
dec
cmp
adc
mov
ins
sahf
ds
mov
lea
fnstenv
push
int
pusha
imul
mov
in
mov
push
cmp
outs
mov
cwde
pop
sbb
dec
fdiv
mov
mov
cmc
sub
pusha
sub
push
test
hlt
fs
or
pusha
pop
(bad)
pop
sub
(bad)
retf
in
jo
dec
ror
aad
mov
cli
and
stc
mov
xchg
mov
fstp
adc
(bad)
cmp
mov
fnsave
lods
xchg
test
push
jmp
xor
out
mov
xchg
cmps
jmp
jmp
data16
sbb
lea
cmp
fadd
xchg
dec
repz
pop
dec
fwait
les
outs
out
xchg
mov
cmp
lods
sub
xor
pop
out
test
repnz
adc
retf
pop
xchg
mov
retf
and
(bad)
out
in
and
(bad)
and
scas
pushf
jnp
(bad)
pop
arpl
(bad)
mov
dec
or
or
ja
fldenv
loop
push
inc
lods
jmp
cmp
xchg
xchg
ins
dec
cmp
adc
mov
enter
pop
and
aam
xchg
adc
fnstenv
push
int
pusha
imul
mov
in
mov
push
cmp
outs
scas
imul
adc
aad
aad
push
ins
sub
sbb
sahf
mov
cmc
sub
pusha
sub
push
test
hlt
fs
scas
push
mov
xor
retf
ja
pop
retf
mov
sub
or
cwde
mov
and
stc
mov
add
cmp
mov
fnsave
lods
xchg
test
push
jmp
xor
out
mov
fucomp
mov
arpl
data16
sbb
lea
cmp
fadd
xchg
dec
repz
pop
dec
fwait
les
outs
out
xchg
add
shl
jbe
cmp
js
pop
out
test
repnz
adc
retf
jge
in
pop
fnstcw
repnz
ja
retf
stos
repz
push
scas
cmp
pop
out
xchg
push
ja
push
mov
mov
jno
ins
ret
test
and
and
pop
ret
mov
ins
outs
fsubr
xchg
push
xor
xchg
xchg
aad
call
aas
popa
out
retf
imul
call
call
fnstenv
push
int
pusha
mov
scas
gs
mov
imul
lds
mov
adc
adc
js
pop
scas
xlat
loopne
dec
retf
jecxz
sub
mov
mov
mov
and
stc
cmp
mov
jp
push
mov
mov
adc
jp
mov
mov
(bad)
lock
xor
out
mov
iret
sub
mov
xchg
lods
xchg
jae
outs
push
hlt
dec
icebp
xor
cld
sahf
cmps
xchg
(bad)
sbb
les
outs
out
xchg
push
sbb
cli
jmp
loope
or
mov
pop
jmp
cwde
xor
cmp
adc
(bad)
cli
test
push
ja
xor
inc
popf
enter
mov
or
add
mov
inc
and
(bad)
mov
dec
or
or
icebp
adc
inc
push
mov
push
xor
mov
jle
rol
ins
dec
cmp
adc
mov
cmp
push
xor
das
push
jno
mov
retf
inc
data16
dec
pop
or
cmps
aam
jne
push
push
cld
cmp
push
mov
push
cmp
outs
dec
mov
sbb
dec
cli
mov
and
scas
xor
ins
mov
das
jmp
cmc
fidivr
sub
adc
sbb
fs
mov
add
out
push
or
js
pop
scas
xlat
loopne
dec
retf
jecxz
sub
mov
mov
mov
and
stc
sti
imul
ds
pop
scas
in
sbb
mov
mov
add
mov
mov
(bad)
lock
xor
out
mov
je
mov
xchg
pusha
mov
xchg
lods
xchg
jae
outs
push
hlt
dec
icebp
xor
cld
sahf
cmps
xchg
(bad)
sbb
les
outs
out
xchg
fwait
push
jp
rol
mov
sub
loope
or
mov
pop
jmp
cwde
xor
cmp
adc
call
(bad)
fiadd
test
call
call
call
push
push
sub
scas
stos
gs
dec
std
mov
or
add
push
ret
xlat
lods
inc
enter
sub
mov
inc
or
hlt
dec
icebp
xor
or
cwde
or
or
mov
dec
icebp
or
icebp
outs
sub
div
in
outs
std
xchg
sub
jne
xchg
mov
pop
lahf
loopne
and
aas
pop
mov
test
push
std
fist
add
shl
xchg
pop
push
mov
mov
ins
jae
mov
mov
mov
pop
lock
call
dec
pop
or
cmps
dec
sahf
adc
in
outs
xchg
clc
test
shl
mov
push
mov
shl
in
mov
jl
outs
cmps
lss
mov
jae
push
adc
push
repnz
adc
pop
shl
jmp
ins
push
push
sub
mov
jbe
clc
jo
or
add
push
ret
xlat
lods
inc
enter
dec
xor
mov
xchg
push
inc
fcmovnb
mov
shl
ret
adc
add
mov
push
xchg
add
or
sub
xchg
cdq
xlat
sub
cmp
fadd
adc
loopne
out
inc
xchg
xlat
rol
(bad)
adc
fcom
push
and
mov
stos
mov
and
clc
adc
rcr
cmp
jae
sub
push
movs
mov
sub
and
iret
adc
mov
mov
push
adc
push
(bad)
xor
pop
imul
push
cmp
mov
jb
mov
outs
xchg
in
pop
dec
sbb
adc
fnstenv
push
int
pusha
nop
push
neg
sub
jmp
imul
ds
push
inc
icebp
je
sar
mov
mov
loop
nop
lods
mov
mov
push
ja
add
jp
call
mov
cmps
jb
ret
sbb
and
ja
idiv
mov
mov
call
mov
and
sar
add
div
xor
les
xor
sbb
test
ret
jb
mov
(bad)
mov
push
test
in
xor
dec
cmp
dec
jle
jb
push
fld
out
sbb
stos
ret
sub
ret
je
mov
or
mov
(bad)
es
jae
mov
jecxz
and
fcomi
dec
pop
imul
cmp
aad
jo
push
dec
ror
mov
lahf
iret
mov
xchg
xor
iret
imul
aaa
or
imul
xor
jl
push
pop
pop
sub
cwde
outs
std
xchg
sub
mov
popf
loope
jle
rcl
and
adc
rol
cmp
sub
retf
cli
sbb
aas
mov
jns
cs
cmp
mov
jb
out
adc
push
mov
add
push
ret
sbb
and
mov
jo
xchg
mov
das
nop
mov
call
mov
and
sar
mov
add
scas
in
hlt
dec
outs
rol
vaesdeclast
mov
(bad)
mov
push
test
in
xor
xor
dec
pop
jg
jb
push
fld
out
sbb
stos
ret
sub
ret
je
xchg
or
fidivr
jmp
push
push
xchg
int3
out
es
jae
mov
jecxz
and
fcomi
dec
mov
mov
mov
jo
push
movs
dec
ror
mov
lahf
iret
mov
xchg
xor
iret
imul
adc
xor
pop
pop
sub
cwde
outs
std
xchg
sub
mov
popf
loope
jle
out
pop
cmp
mov
test
hlt
mov
retf
cli
mov
pop
push
bound
jo
inc
punpckhwd
cmp
mov
stos
iret
cdq
mov
clc
imul
sbb
cmp
sbb
stc
(bad)
cmp
dec
dec
(bad)
enter
bound
push
mov
loop
pop
int
jg
jno
mov
sti
popa
(bad)
sbb
stc
jo
xor
add
pop
ret
ins
pop
add
push
(bad)
jmp
inc
add
add
add
add
cmp
xchg
cmp
sbb
pop
xchg
mov
dec
movs
adc
call
xchg
add
(bad)
dec
hlt
pusha
inc
fs
inc
or
dec
sub
data16
popfw
(bad)
fs
int3
imul
jl
push
mov
and
idiv
push
int3
rcr
jbe
cmp
les
movs
push
cmc
pop
push
fstp
inc
cmp
and
aad
cmp
into
dec
loope
movs
repnz
ja
das
pop
and
test
cmp
(bad)
int3
dec
jmp
lahf
mov
mov
fmulp
movs
das
push
push
ss
inc
fdivp
(bad)
jmp
push
jo
test
or
out
adc
icebp
lahf
sbb
mul
lea
loop
retf
inc
jns
push
mul
pop
imul
dec
sub
cs
fucomp
mov
ror
or
and
pop
mov
jge
sbb
pop
test
cs
xchg
push
sub
mov
sbb
dec
fimul
mov
jae
lods
sbb
push
mov
test
inc
lds
aad
repz
sahf
xchg
jbe
int3
jmp
jmp
stc
mov
lds
out
scas
jl
sbb
mov
stos
sbb
sbb
inc
cmps
ins
(bad)
xchg
loop
push
pop
imul
or
sub
pop
cmp
or
mov
shr
enter
std
les
retf
xchg
pop
pusha
test
push
ja
mov
bound
cmc
inc
fstp
out
das
or
in
sbb
push
mov
push
call
push
and
or
dec
stc
shl
inc
and
in
mov
mov
and
xor
pop
js
adc
iret
adc
push
and
bound
pop
stos
fxch
and
lea
ins
dec
sar
lea
fnsave
mov
es
cmp
adc
(bad)
mov
dec
nop
retf
in
sbb
sbb
stos
scas
add
jb
cmp
mov
lods
cmp
adc
fstp
jo
scas
nop
gs
cmp
call
mov
pop
and
jns
test
not
cmc
add
jp
push
(bad)
sbb
push
dec
fimul
push
js
cmp
lds
xor
mov
out
mov
jbe
jno
push
inc
xchg
push
jbe
cmp
repz
mov
loope
aad
aas
xchg
adc
jmp
push
push
ja
call
inc
pop
jge
dec
dec
xchg
xchg
or
and
and
pop
div
loop
lea
fdivrp
add
hlt
aam
imul
dec
mov
dec
aad
jmp
cld
adc
(bad)
enter
xchg
dec
jno
loopne
(bad)
sti
es
dec
push
sbb
adc
cwde
imul
lock
cmc
fmul
xchg
sub
xor
mov
mov
ja
cmp
push
mov
sbb
push
adc
pop
iret
ins
cs
sbb
ja
push
fstp
ficomp
cmp
xchg
ss
ret
icebp
pop
pop
xor
sub
mov
inc
xor
bound
cmp
call
lock
push
dec
xchg
pop
mov
lea
jmp
test
lahf
imul
aad
aaa
int3
mov
and
fcom
xchg
das
jnp
mov
dec
sbb
gs
clc
call
dec
cmc
xchg
les
cli
sti
ret
push
or
push
cmp
mov
sbb
dec
xchg
and
inc
mov
cs
(bad)
std
add
jg
add
ins
mov
and
xor
arpl
xchg
jnp
fcmovb
sub
pop
or
clc
data16
adc
std
je
sub
sbb
push
andps
inc
stos
test
sbb
pop
and
bound
mov
inc
jge
inc
cmp
mov
repz
push
daa
sar
cli
cmps
and
cmps
test
fist
mov
pop
pop
jle
add
cmp
sbb
imul
inc
fwait
pop
push
push
sahf
stos
mov
outs
into
cmp
sbb
mov
lahf
pop
mov
and
mov
mov
mov
ins
add
mov
sbb
mov
hlt
or
mov
add
inc
mov
mov
mov
aam
xchg
push
ret
mov
inc
mov
std
sub
cs
not
mov
push
xor
pop
ds
sbb
shr
adc
add
sub
mov
pop
and
stos
xor
add
loopne
fimul
xchg
xor
cwde
lahf
not
lods
fwait
aaa
retf
mov
mov
cmp
and
dec
cs
jb
mov
cwde
adc
pop
dec
data16
add
jge
xor
int3
sbb
fmul
aad
mov
inc
or
add
fisubr
jnp
lea
mov
pop
inc
in
dec
jle
dec
leave
sub
(bad)
xlat
pop
cmp
enter
xchg
jne
push
out
outs
call
es
push
or
sub
icebp
or
ss
shr
pop
inc
push
xchg
fdivr
dec
or
popf
jecxz
jns
test
iret
ja
mov
cmp
pop
jg
repz
movs
sub
aad
out
sbb
and
repz
xor
sbb
xorps
push
adc
mov
inc
aas
dec
and
sahf
repz
cli
mov
push
mov
dec
imul
pop
arpl
mov
in
mov
sti
sbb
addr16
js
mov
lock
pop
mov
ficom
fst
int
inc
les
or
enter
leave
xchg
lods
and
push
pop
sub
xchg
pop
leave
adc
cdq
addr16
xlat
sub
fwait
test
inc
lods
cwde
cwde
lods
scas
test
or
(bad)
xchg
scas
xor
sbb
bound
xchg
push
jmp
les
stc
and
sub
fsub
aam
cwde
icebp
pop
push
add
clc
ror
cs
dec
push
imul
loopne
push
sahf
mov
loopne
xor
mov
adc
inc
(bad)
mov
mov
sbb
test
mov
jecxz
xor
sahf
mov
dec
cmp
xchg
xor
push
sub
ins
jnp
pop
adc
pop
sbb
xchg
repz
(bad)
call
lahf
dec
adc
mov
repz
inc
stc
test
push
adc
mov
std
out
ja
mov
ret
sahf
clc
adc
push
xchg
icebp
mov
and
cmp
add
mov
in
inc
loope
or
fnsave
lods
or
mov
mov
lea
sub
outs
fcom
cmp
in
fimul
xlat
(bad)
stc
cmp
out
mov
jge
les
and
and
sub
cs
xchg
jle
clc
or
sub
loop
mul
sub
pop
mov
nop
adc
and
imul
mov
mov
xor
nop
(bad)
inc
retf
pop
imul
popa
inc
shr
xchg
xchg
push
mov
xchg
jp
xor
(bad)
dec
mov
arpl
and
es
cmp
pop
xchg
mov
mov
jno
(bad)
sub
movs
xchg
xacquire
stos
jg
(bad)
cmp
sbb
retf
cmp
xor
xor
fucom
ret
push
mov
mov
fisub
call
cmps
mov
das
jbe
push
adc
dec
inc
movs
loop
sbb
jno
jbe
mov
bound
lock
neg
jge
dec
cmp
leave
imul
imul
push
imul
clc
mov
addr16
fsubr
add
cli
inc
sbb
or
icebp
mov
mov
push
add
mov
push
frstor
fcomi
jns
inc
jecxz
jbe
ss
mov
push
push
mov
nop
sub
inc
mov
test
adc
(bad)
aad
dec
(bad)
jns
or
pop
mov
xor
dec
cmp
dec
rol
retf
push
jle
out
push
not
into
push
arpl
cmp
popa
pop
cmp
sub
push
and
mov
sbb
jmp
lods
mov
push
jb
rol
dec
dec
pop
cld
push
cli
sar
xor
adc
(bad)
fld
pop
push
add
push
mov
jge
rcl
fdivrp
ds
or
rcr
popf
clc
(bad)
cmc
pop
pop
sbb
shl
int
cmps
and
test
je
add
test
mov
dec
jp
ins
mov
(bad)
cmps
inc
(bad)
out
arpl
ss
xor
adc
mul
adc
int3
add
out
cmps
fst
push
mov
ss
dec
jge
add
(bad)
push
mov
rcl
clc
mov
xor
(bad)
movs
lods
inc
popf
pop
mov
pop
int3
jnp
fwait
(bad)
mov
sbb
lods
mov
icebp
fist
clc
ds
jne
stc
ds
xchg
ror
cli
mov
mov
dec
movq
xlat
jns
(bad)
into
mov
(bad)
fcomp
or
stos
mov
jle
(bad)
sub
or
sub
sbb
and
lods
mov
es
cmp
cdq
popa
adc
pop
int3
push
or
dec
sub
mov
cmp
adc
jmp
xchg
imul
sbb
lods
stc
add
jle
inc
loop
loopne
sar
call
xor
or
jnp
lahf
retf
stos
push
add
jecxz
inc
push
adc
cmp
cdq
jo
in
gs
mov
inc
loop
add
xor
dec
daa
add
loope
and
addr16
nop
xor
xor
add
je
lock
or
xchg
adc
movs
and
pusha
in
push
fidivr
dec
sbb
dec
pop
vpmaddubsw
cmp
std
out
adc
xor
adc
cmc
pop
ins
aas
in
or
cmp
mov
lds
dec
movs
retf
mov
sbb
lahf
xlat
cwde
jno
pop
pop
and
sub
cmp
dec
jmp
repnz
cmp
cdq
hlt
sub
fs
int
and
add
sub
inc
pusha
aas
xlat
imul
int3
add
stos
mov
cmp
dec
add
movs
fimul
dec
je
jp
push
cmp
call
(bad)
push
dec
ret
stc
inc
shl
xor
lock
loope
dec
dec
out
cdq
jl
mov
push
and
int
jl
adc
aas
div
cmps
add
cmp
sub
or
enter
cmp
popa
adc
dec
push
fcomp
lahf
jle
pop
mov
imul
cmp
hlt
and
or
mov
mul
dec
cld
out
das
cmps
xor
popf
dec
clc
fcmovnu
jmp
jl
mov
call
movs
cmp
jmp
aam
movs
iret
sti
(bad)
out
jne
adc
sti
pop
adc
ret
mov
push
pop
pushf
rol
les
retf
(bad)
icebp
inc
ds
scas
pop
cmp
adc
sub
(bad)
sub
in
xor
aas
cmc
imul
out
mov
dec
ss
adc
fbstp
cli
or
cmp
pop
sbb
loope
push
fist
leave
in
lahf
or
sbb
call
jb
mov
aas
sbb
and
pop
adc
jnp
add
mov
mov
sub
imul
push
mov
mov
sti
cdq
cmp
or
add
iret
lahf
and
out
add
adc
xor
mov
xor
adc
shl
sub
mov
push
ds
idiv
fcmovb
push
adc
and
push
call
adc
rcr
fisttp
dec
rcl
jge
add
loopne
push
movs
ret
popf
(bad)
cmc
retf
ins
mov
sbb
jne
arpl
outs
and
add
pushf
sub
movs
test
mov
fmul
jo
(bad)
fcom
dec
cmp
xchg
pop
jo
mov
outs
xchg
mov
add
cmps
jo
popa
jecxz
jo
jbe
loope
add
adc
ins
xchg
pushf
imul
imul
dec
call
jge
dec
mov
cmp
jae
movs
hlt
push
xchg
ret
jge
js
add
ret
ret
retf
or
xor
pop
retf
mov
popf
pop
ja
ss
jg
popf
cmp
xchg
aas
loop
enter
jnp
mov
ss
out
retf
mov
hlt
inc
pop
push
pop
jb
lea
push
cmps
fst
movs
out
aas
jno
or
mov
push
xor
sahf
or
mov
call
xchg
iret
stos
pushf
mov
cld
enter
mov
sub
pop
push
xlat
dec
retf
add
data16
mov
popf
push
mov
into
fdiv
mov
sbb
out
pop
jecxz
cmp
popa
sti
inc
inc
mov
std
scas
dec
push
mov
add
add
push
stos
out
fisub
aam
(bad)
inc
cmp
inc
ret
dec
not
push
xor
cmp
into
outs
repnz
adc
sti
and
aaa
repnz
fs
cs
loopne
call
cmps
jmp
daa
mov
pop
mov
js
sbb
jg
dec
jno
adc
pop
mov
sbb
mov
xor
je
cmp
dec
push
fucomip
into
jl
mov
inc
inc
cmp
call
xor
xchg
fidiv
push
xor
setp
xchg
sbb
scas
jecxz
clc
(bad)
mov
ins
stos
inc
popf
or
mov
pop
inc
scas
xor
retf
mov
mov
pop
lods
ja
inc
jb
pop
xchg
pop
sbb
popf
aas
retf
jp
out
(bad)
nop
pop
adc
push
push
ins
es
jb
push
and
inc
cs
sub
push
outs
jp
pop
mov
cmp
xchg
lea
popa
pushf
mov
out
das
scas
out
push
cli
cmp
pop
test
(bad)
leave
sub
call
jp
cmp
ja
call
movs
shr
add
dec
ret
add
xchg
push
loopne
cmps
fisttp
mov
pop
in
pop
fsubr
pop
jo
cmp
and
jle
sub
jmp
pop
xchg
das
or
aam
gs
adc
scas
jl
cli
pop
test
mov
push
jnp
addr16
push
cmp
fadd
jno
inc
xchg
mov
(bad)
mov
stos
cmps
or
adc
inc
shr
fistp
mov
fmul
mov
cmp
jne
push
leave
xchg
push
mov
push
jp
sar
daa
and
inc
aad
xor
xchg
pop
jmp
fnstcw
aad
jecxz
mov
je
outs
xchg
xor
xchg
popa
movs
clc
daa
call
and
cmp
dec
xchg
mov
clc
jge
int
aaa
adc
lds
aad
popa
stos
ficom
pop
mov
das
pop
xor
adc
fild
ss
scas
call
sti
into
imul
stos
sub
call
xchg
jbe
rol
jle
(bad)
fs
sar
jle
or
cmp
cli
jo
pop
mov
nop
pop
int3
clc
xchg
mov
inc
aas
fbstp
cwde
inc
rol
push
xchg
popf
scas
cmp
pop
lea
mov
out
aad
pusha
and
xchg
ja
test
push
(bad)
xlat
cmps
or
test
sbb
mov
inc
shr
push
jnp
icebp
mov
sbb
mov
pop
add
jp
dec
cdq
aas
lods
aaa
addr16
jp
jp
test
pop
xor
cmp
push
iret
add
lds
xchg
into
aad
xchg
push
and
outs
or
cs
out
stc
popa
sahf
pusha
clc
(bad)
fs
or
call
mov
stos
cs
(bad)
sar
sbb
push
arpl
mul
dec
push
pop
cdq
jmp
shl
mov
sbb
outs
dec
and
aad
lods
xor
(bad)
or
loopne
sub
push
mov
popa
xchg
push
jle
fimul
cmp
ror
or
inc
xor
pushf
jg
rcl
icebp
adc
jp
sbb
sbb
dec
into
bound
cmp
push
mov
xchg
popa
lods
outs
popf
cmp
ds
dec
cwde
push
addr16
sub
je
adc
data16
push
jo
jb
sub
pushf
add
loop
fst
clc
leave
cmp
or
js
movs
inc
mov
(bad)
xchg
(bad)
(bad)
push
sub
dec
movs
push
mov
xor
jmp
pop
jne
mov
mov
adc
je
dec
test
sub
js
shr
ss
jnp
shr
cmp
aaa
or
mov
aaa
jp
shr
jg
inc
sub
xchg
repnz
add
pop
dec
bound
(bad)
es
mov
loopne
and
adc
fxch
pusha
sub
lock
pop
pop
cdq
mov
adc
jns
dec
mov
pop
imul
lods
and
add
xor
ins
sub
test
popf
mov
xchg
sub
jle
test
test
mov
nop
daa
adc
pop
jg
icebp
pop
aaa
rcr
dec
sub
jg
outs
ins
and
adc
cld
pop
jb
cwde
popf
cmp
cli
mov
jbe
(bad)
(bad)
jl
jle
pop
ins
xchg
or
nop
int3
cmp
pop
xchg
xchg
jo
test
gs
jns
jnp
jns
mov
int3
xchg
mov
int3
fst
gs
(bad)
nop
ret
fstp
ror
lods
cld
enter
fld
adc
retf
outs
sahf
push
sbb
in
mov
lods
ja
fistp
inc
sub
lods
icebp
xor
jge
lahf
test
outs
(bad)
pop
pushf
mov
iret
pop
js
test
cwde
outs
ss
in
xor
inc
fisttp
xor
fisub
mov
sub
lods
xor
sahf
ja
and
enter
mov
call
pop
xchg
dec
sub
sbb
cmp
das
dec
push
xor
sti
js
loop
mov
out
lods
dec
lods
jno
iret
sar
pop
adc
popa
and
lds
dec
jl
sub
cmp
jmp
add
xlat
and
sbb
pop
xchg
pop
ja
stc
push
cs
dec
dec
(bad)
stc
aaa
repnz
xchg
xchg
cmc
aas
aam
fld
push
and
daa
cmc
jnp
pop
imul
enter
fld
lds
lods
inc
iret
mov
imul
pop
lock
mov
sub
std
mov
pop
add
movs
pushw
iret
jg
lods
cmps
arpl
repz
ss
pmullw
pmulhw
cmps
imul
add
aaa
push
int
push
out
mov
push
stos
push
dec
icebp
push
adc
sahf
into
clc
test
sub
jne
sbb
xchg
aam
pop
(bad)
cmc
movs
fdiv
stos
xchg
xchg
enter
sbb
in
fisttp
hlt
in
js
adc
push
jne
adc
iret
(bad)
gs
lods
out
test
pushf
shr
mov
push
cmp
adc
xor
mov
aad
inc
adc
or
or
xlat
cmp
pop
add
cwd
dec
cmp
pop
sub
jnp
mov
lahf
dec
mov
push
xchg
retf
mov
aad
xchg
push
(bad)
pop
add
sbb
clc
dec
xlat
mov
fmul
mov
jmp
imul
aam
ss
addr16
mov
and
jne
xor
mov
(bad)
xchg
pop
(bad)
dec
inc
mov
jp
hlt
cmp
ja
xchg
mov
adc
xor
fisub
cld
and
mov
mov
(bad)
add
(bad)
imul
mov
push
mov
push
pop
jnp
shl
fcom
sub
jle
xor
test
in
mov
cs
in
sbb
adc
mov
hlt
int3
lods
ds
mov
add
or
mov
push
mov
inc
or
ret
(bad)
(bad)
(bad)
jmp
add
jmp
sbb
add
add
add
pushf
(bad)
ds
cmp
retf
or
stos
xchg
ffree
fisttp
xor
lahf
clc
mov
cs
ja
lock
adc
sbb
retf
rcr
xor
sti
retf
dec
(bad)
cdq
sti
push
mov
ss
mov
push
jmp
pop
call
fldcw
inc
retf
daa
jecxz
cmp
pop
stos
or
cwde
icebp
dec
fcmovb
mov
rol
cwde
call
jecxz
movs
pop
mov
(bad)
stc
lahf
jns
jp
lds
mov
mov
ins
pop
inc
leave
push
jl
shl
jne
mov
sub
jns
in
mov
push
jge
or
ror
shr
push
in
sbb
xchg
stc
movs
repnz
pop
adc
push
leave
sbb
hlt
movs
in
push
adc
fsubp
cmps
call
aad
pop
fisttp
out
mov
push
mov
in
retf
je
stos
stos
(bad)
icebp
outs
mov
jp
xor
jae
cmps
sbb
ret
mov
mov
ds
pop
jp
and
sbb
add
arpl
adc
loopne
add
shr
call
push
or
pop
(bad)
sub
sub
sub
enter
mov
movs
pusha
in
fistp
movs
inc
mov
add
cmps
push
add
sbb
add
push
imul
(bad)
mov
jo
enter
mov
out
mov
mov
ret
mov
in
xchg
add
xchg
test
daa
in
mov
add
pop
nop
xor
dec
mov
aaa
xchg
cmp
hlt
push
call
outs
enter
xchg
out
adc
out
fistp
mov
fsubr
or
mov
sbb
jns
rol
push
mov
mov
dec
movs
in
fbld
sbb
push
out
push
mov
dec
(bad)
call
mov
enter
loop
lahf
pop
mov
mov
fsub
xor
push
aad
nop
inc
push
lea
stc
cmc
ins
loopne
popf
js
outs
push
(bad)
sub
jecxz
aad
dec
add
mov
icebp
jno
retf
hlt
addr16
cli
(bad)
nop
jmp
inc
push
je
inc
pop
mov
mov
mov
addr16
(bad)
movs
or
sbb
jmp
ss
pop
pop
(bad)
jae
fisub
jnp
fld
fcomp
pop
clc
ds
movs
and
lods
pusha
mov
pop
xchg
xor
mov
stc
mov
jge
inc
nop
adc
aam
dec
and
and
mov
ins
bound
or
or
sbb
dec
jmp
fwait
push
in
push
jmp
push
and
and
and
xchg
sbb
push
mov
inc
sbb
dec
sbb
imul
fdiv
xchg
xor
cld
enter
sbb
out
pusha
iret
pop
and
adc
jle
push
fnstenv
inc
dec
dec
pop
scas
mov
stos
scas
movs
or
cmp
add
xchg
sbb
lock
mov
(bad)
cli
dec
push
or
lds
xchg
fbstp
cmc
xor
xchg
into
in
enter
jge
inc
data16
and
add
test
dec
and
dec
mov
mov
push
and
outs
outs
into
mov
ret
outs
mov
call
or
scas
jmp
dec
mov
mov
push
xlat
xor
pop
push
jb
imul
xchg
xor
cmp
dec
shl
into
out
movzx
fwait
rcr
xchg
and
adc
inc
or
(bad)
inc
pop
imul
int3
daa
mov
out
out
rol
push
mov
mov
out
sbb
adc
or
jmp
push
mov
test
jb
sbb
dec
cmp
mov
mov
sti
mov
sti
pop
or
and
std
nop
(bad)
int
dec
sub
sahf
out
adc
mov
jg
xor
lea
lahf
cdq
(bad)
(bad)
push
repz
push
sub
in
sub
inc
pusha
retf
or
(bad)
in
or
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
xor
out
xchg
sbb
movs
cli
sar
inc
mov
cmp
push
cmp
push
cld
jmp
not
dec
iret
pop
ja
push
dec
sbb
or
push
ins
or
add
jmp
mov
add
add
add
fiadd
(bad)
jae
(bad)
shr
mov
cmp
in
inc
outs
mov
push
pop
addr16
dec
iret
jl
das
retf
dec
jns
add
sub
dec
leave
mov
mov
push
dec
jl
(bad)
xchg
mov
hlt
dec
mov
jbe
jle
fdivr
into
cld
(bad)
sub
add
adc
sub
fisub
loope
outs
xchg
push
and
add
and
push
sbb
pop
rcr
mov
ins
adc
xor
cmp
movs
dec
jg
cmps
(bad)
sti
adc
cmps
or
and
sti
ss
aas
jg
push
pop
or
pop
int3
loopne
stos
test
js
push
push
cmps
sar
push
jo
fwait
pop
sub
jbe
xchg
stos
es
mov
fnstenv
mov
push
and
in
js
push
es
test
call
push
pop
cmps
sub
shr
inc
inc
mov
pop
shr
sub
cs
in
xor
mov
push
and
int3
repnz
mov
popa
sub
popa
les
jecxz
inc
add
mov
cmps
mov
in
test
fstp
out
cld
push
fild
fucomip
dec
mov
sbb
hlt
pop
and
and
pop
mov
push
jmp
push
enter
xchg
adc
xchg
aam
test
xchg
fwait
stos
in
sahf
aad
(bad)
aaa
xchg
bound
(bad)
lahf
retf
push
fisub
fst
mov
pop
mov
add
cs
xor
pop
sub
repnz
xchg
sbb
xlat
std
cmp
xchg
ja
xlat
mov
mov
stc
sub
movs
movs
pop
jmp
mov
stc
jns
dec
dec
mov
out
je
sahf
sbb
push
inc
rol
clc
mov
fs
mov
aad
xor
dec
mov
jge
adc
dec
xchg
xlat
test
xchg
xchg
and
test
inc
ds
push
mov
mov
retf
xchg
fwait
(bad)
mov
lahf
hlt
jmp
pop
sub
jne
cmp
lock
mov
fmul
mov
push
pop
fsubr
push
stos
push
push
cmc
push
adc
js
or
and
mov
mov
jnp
inc
in
inc
cmps
or
ins
int
jecxz
fcomp
dec
call
mov
fimul
cli
inc
daa
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
cwde
leave
movs
cli
sbb
call
cdq
dec
lahf
cld
mov
arpl
repnz
daa
push
pop
into
mov
or
jmp
mov
xor
gs
test
push
(bad)
fnstsw
push
push
fyl2x
inc
and
dec
xor
aaa
mov
out
or
mov
or
int3
sub
mov
jle
push
push
movs
rcr
enter
cmp
push
addr16
add
cli
dec
lahf
add
aam
sbb
push
and
add
xchg
dec
pop
imul
mov
mov
rol
sub
add
test
push
ret
outs
push
xlat
jge
xchg
or
push
(bad)
out
inc
ss
imul
retf
aam
cmp
cdq
dec
sub
push
pop
mov
sub
stos
ds
push
test
push
es
adc
div
gs
inc
pop
inc
and
inc
(bad)
jno
add
add
dec
add
add
jmp
(bad)
(bad)
(bad)
inc
add
add
jmp
cmps
lds
(bad)
movs
xor
inc
jmp
mov
and
pop
mov
add
mov
jecxz
test
stos
pop
jle
push
sti
xchg
or
mov
mov
shl
adc
hlt
cmp
(bad)
test
cmp
push
fld
ret
fimul
xor
in
int3
js
and
loop
test
dec
cs
dec
retf
retf
xchg
call
(bad)
retf
mov
cmp
pusha
jg
xchg
jbe
sar
sbb
push
lods
movs
jmp
in
xlat
movs
cdq
test
jp
inc
xchg
xlat
sahf
push
cmp
jne
push
push
dec
shl
aaa
sub
pop
inc
cmp
scas
int
das
sbb
mov
mov
sbb
aad
cmps
mov
inc
lea
mov
iret
jmp
push
dec
and
fadd
sahf
mov
pop
mov
adc
push
pop
aad
fucom
or
push
mov
jns
leave
(bad)
mov
btr
xchg
pop
loop
xchg
idiv
inc
xchg
fisub
xor
aam
ret
outs
xchg
std
add
add
jmp
push
add
add
add
add
fwait
mov
jge
test
out
repnz
outs
mov
rcr
cdq
inc
jnp
jg
and
cmps
cmp
xchg
or
cmps
mov
hlt
pushaw
outs
add
cmps
xchg
cwde
sbb
out
mov
pop
add
xor
dec
movs
fwait
(bad)
sub
mov
nop
mov
popf
adc
dec
pop
mov
xchg
sub
or
cmp
lods
push
clc
mov
or
sbb
(bad)
mov
(bad)
in
ds
imul
js
lahf
xchg
jo
dec
ins
std
and
or
(bad)
imul
(bad)
movs
add
pop
out
mul
add
rcr
imul
popf
(bad)
cmp
clc
or
ret
xchg
adc
bound
imul
mov
push
pop
or
push
xchg
(bad)
mov
xor
or
ss
test
inc
pop
sbb
jne
in
rcl
adc
jmp
call
fcom
xor
cmps
inc
mov
sar
frstor
jo
icebp
fbstp
push
pushf
jne
hlt
es
sbb
jnp
ret
js
mov
adc
into
sub
mov
pop
mov
loop
jne
ret
cmp
add
xor
push
dec
ds
cmp
iret
jecxz
ins
repz
outs
scas
std
xor
pushf
out
test
stc
lock
and
sbb
addr16
popf
and
in
pop
fcom
pushf
nop
lods
inc
adc
sbb
aaa
lods
push
sbb
(bad)
sbb
xlat
ins
mov
iret
int3
dec
xor
scas
jno
cmp
shl
and
mov
(bad)
scas
mov
cmp
(bad)
sbb
daa
push
jg
inc
pop
jle
popa
rcr
push
push
push
add
push
jecxz
push
sub
enter
xor
mov
in
mov
in
mov
add
fidivr
sar
or
mov
es
sub
jecxz
das
gs
(bad)
fmul
mov
xor
cmps
stos
pushf
xor
call
xchg
mov
scas
stos
loopne
cmp
mov
pop
jno
nop
inc
cmps
inc
addr16
cmpxchg
mov
push
mov
(bad)
jmp
(bad)
(bad)
(bad)
inc
add
add
dec
mov
scas
fisub
adc
in
fild
nop
dec
and
add
push
pop
dec
pop
dec
cwde
and
idiv
jbe
and
jb
mov
icebp
or
pusha
push
mov
xchg
fmulp
nop
(bad)
push
xor
inc
pop
adc
push
xor
repnz
cmp
sbb
pop
sbb
xchg
shl
int
ror
add
inc
push
hlt
enter
je
lds
mov
adc
xchg
add
mov
pop
cmp
xor
pop
ins
pushf
pop
inc
push
ss
pop
adc
repz
test
gs
dec
push
dec
jg
out
xor
sub
dec
rcl
mov
addr16
pop
dec
scas
repz
leave
call
jg
mov
cs
add
and
test
dec
imul
data16
jg
mov
scas
jecxz
sub
(bad)
pop
mov
push
pop
xchg
cld
sub
and
and
pop
neg
mov
or
daa
ja
jbe
bound
cmp
call
das
arpl
test
mov
stos
aad
jecxz
out
xchg
inc
(bad)
push
mov
imul
mov
inc
add
cdq
cmp
xchg
lods
sub
fnsetpm(287
popf
xor
stc
fistp
mov
rol
int3
fdiv
or
into
fwait
xor
add
std
xchg
mov
mov
mov
aas
ins
jo
stc
sbb
les
jo
jb
mov
and
pop
clc
aam
outs
xor
(bad)
pop
fidiv
jnp
inc
dec
shl
pop
sub
adc
xchg
(bad)
cli
inc
add
popf
dec
jb
movsx
add
lods
stos
arpl
xchg
lds
xchg
dec
jp
popa
cmps
and
jno
int3
xchg
sub
mov
loope
out
ret
cmp
ins
repnz
jg
rol
jae
push
push
rcr
(bad)
jmp
adc
shl
pushf
mov
outs
adc
ja
stos
(bad)
dec
mov
dec
test
sbb
sbb
popf
cmps
xor
(bad)
pop
iret
jnp
rol
out
mov
not
or
iret
stos
cmp
push
mov
xchg
push
adc
mov
mov
aaa
ja
addr16
aad
xlat
jle
push
bound
int3
out
adc
arpl
inc
mov
inc
adc
fdiv
mov
into
or
fiadd
pushf
rcl
stos
push
pushf
add
add
xchg
xor
dec
or
repz
pushf
call
inc
push
mov
dec
xchg
arpl
mov
add
mov
mov
sbb
inc
fld
iret
pop
rcr
fnstenv
out
or
dec
inc
out
popf
push
adc
in
dec
jecxz
mov
data16
xor
xor
or
mov
adc
mov
int
jg
cmp
mov
retf
sahf
inc
test
or
cmp
dec
in
xchg
mov
inc
sbb
adc
inc
sti
mov
pop
xor
xor
ret
or
aad
or
add
mov
mov
(bad)
and
push
push
inc
mov
dec
sub
mov
aas
pop
shl
sti
sub
call
test
lahf
and
and
add
sub
cld
mov
mov
add
pop
sub
sbb
leave
push
int3
paddq
push
add
adc
cmp
fsub
and
out
test
and
mov
sub
xchg
out
icebp
lock
pop
ja
pop
call
mov
or
pop
int3
cmps
inc
cmp
retf
push
add
dec
sbb
and
inc
je
call
test
bound
push
mov
add
sub
cld
mov
mov
mov
pop
xchg
pusha
aam
mov
mov
push
jp
dec
movzx
in
push
jno
inc
push
push
jge
(bad)
xor
cli
and
dec
xlat
inc
in
sub
shl
daa
call
popa
cs
in
sbb
stos
push
cmc
lahf
imul
fsubr
dec
mov
dec
dec
mov
mov
jp
xchg
nop
cmp
mov
jae
jl
out
sbb
adc
pushf
jbe
sbb
inc
ins
add
sub
or
aas
push
aaa
je
lds
sub
pop
sub
arpl
mul
pop
scas
(bad)
adc
popf
cwde
fnsave
cmp
fs
cmp
(bad)
cmp
daa
jns
jmp
iret
adc
pop
sbb
mov
cmp
fld
jbe
xchg
and
sub
int3
in
dec
test
or
(bad)
fidiv
pusha
stos
pop
(bad)
cwde
dec
nop
sbb
jno
fbstp
into
enter
mov
pop
repnz
xor
scas
cmps
and
dec
and
or
cmp
xor
mov
dec
aam
in
stos
add
ror
jo
loope
mov
arpl
jnp
ret
popa
imul
lea
jecxz
sbb
cmp
mov
inc
jg
sahf
push
imul
dec
(bad)
push
cmp
cmps
stc
push
daa
and
ja
imul
out
push
pop
mov
lds
loope
data16
jnp
sbb
cmp
xor
cli
mov
fbld
movs
not
int3
fnstcw
jno
mov
aas
out
int3
cmps
fs
fs
sub
jns
fld
mov
ror
jecxz
xor
iret
inc
dec
jnp
fs
aaa
ud1
pop
jmp
mov
xchg
retf
mov
inc
int3
jb
mov
loopne
je
mov
push
pop
mov
lds
loope
data16
jnp
sbb
cmp
xor
cli
mov
fbld
movs
not
int3
fnstcw
jno
mov
aas
out
int3
cmps
fs
fs
sub
jns
fld
mov
ror
jecxz
xor
iret
inc
dec
jnp
fs
aaa
ud1
pop
jmp
mov
xchg
imul
aam
mov
mov
out
push
pop
mov
lds
loope
data16
jnp
sbb
cmp
xor
cli
mov
fbld
movs
not
int3
fnstcw
jno
mov
aas
out
int3
cmps
fs
fs
sub
jns
fld
mov
ror
jecxz
xor
iret
inc
dec
jnp
fs
aaa
ud1
pop
jmp
mov
cmp
pop
ja
or
push
enter
stos
mov
movs
inc
imul
adc
jb
das
cmp
cmps
inc
or
movs
sbb
jg
xchg
sbb
stos
inc
jl
mov
push
jb
cmc
inc
jg
cwde
xchg
fs
out
out
or
ftst
mov
jns
add
repz
xlat
jns
daa
test
sub
pusha
xchg
sbb
iret
in
lahf
lahf
repnz
out
cmp
retf
pop
mov
lds
loope
data16
jnp
sbb
cmp
xor
popf
cs
and
xchg
pop
fld
pop
mov
xchg
pop
mov
ins
jmp
push
and
in
dec
sub
sub
aaa
sbb
and
retf
cmps
pop
std
pop
push
fldenv
mov
icebp
pop
scas
mov
rol
mov
push
mov
dec
sbb
dec
aaa
cld
cs
pop
push
dec
or
inc
jp
movs
sub
mov
lods
jns
xor
je
scas
pop
pusha
sbb
inc
add
shl
(bad)
out
or
xor
mov
int3
in
sti
fsincos
je
jns
mov
les
ins
adc
sbb
frstpm(287
cmps
add
add
mov
mov
nop
mov
mov
daa
lods
xor
mov
xchg
stos
fldcw
test
out
push
push
pop
jo
movs
ror
xchg
out
push
push
cmp
ficomp
rol
cmp
push
lds
sar
out
sub
out
scas
fild
xchg
fsubr
and
repnz
push
cmp
jns
sbb
sub
adc
cmps
imul
push
pop
repnz
xor
scas
cmps
and
dec
and
push
push
mov
cmc
sub
mov
push
loopne
and
pop
out
popa
mov
pushf
jno
jmp
pop
fs
sbb
in
out
and
push
fldenv
mov
icebp
pop
scas
mov
rol
mov
push
mov
dec
sbb
dec
aaa
cld
cs
pop
push
dec
or
inc
jp
movs
sub
mov
mov
xchg
ret
and
push
add
pop
les
out
or
xor
mov
int3
in
sti
fsincos
je
jns
mov
les
ins
adc
sbb
frstpm(287
cmps
add
add
mov
mov
outs
mov
xchg
pop
cld
adc
jp
pop
sbb
cmp
out
pop
lds
jno
out
push
push
pop
jo
movs
ror
xchg
out
push
push
cmp
ficomp
rol
cmp
push
lds
sar
out
sub
rcr
les
jne
lea
mov
push
cmp
jns
sbb
sub
adc
cmps
imul
push
pop
repnz
xor
scas
cmps
and
dec
and
xchg
in
rcl
(bad)
jae
js
inc
xchg
add
xchg
mov
ror
push
pop
stos
popa
movs
mov
jnp
pop
pop
mov
lea
int3
lock
cmp
sahf
adc
movs
pop
ss
mov
xchg
outs
mov
js
jae
test
mov
cmc
jns
fld
mov
ror
cmps
icebp
outs
addr16
test
pop
adc
or
enter
aad
icebp
(bad)
mul
into
retf
aad
je
xor
and
test
repz
jno
stos
push
fiadd
adc
jecxz
xor
repz
mov
add
cmp
xchg
stos
fldcw
test
out
push
push
pop
jo
movs
ror
(bad)
inc
mov
out
add
jp
out
(bad)
sub
lods
sbb
mov
(bad)
enter
lock
and
mov
fadd
mov
sub
dec
cmp
and
and
and
xchg
cmps
fwait
inc
sbb
mov
mov
test
int3
jae
test
mov
cmc
jns
fld
mov
ror
cmps
icebp
outs
addr16
test
pop
adc
or
enter
aad
icebp
(bad)
mul
into
retf
aad
je
xor
and
test
repz
jno
stos
push
fiadd
sub
sbb
adc
xchg
cmp
mov
xor
aam
inc
int
mov
push
ror
arpl
pop
ins
das
push
lods
jb
ds
push
test
call
mov
push
add
add
ja
pop
repnz
and
lock
arpl
jnp
push
and
mov
jmp
xor
out
pop
pop
pusha
sbb
inc
add
shl
(bad)
out
or
xor
mov
int3
in
sti
fsincos
je
cmp
sbb
push
inc
ins
mov
dec
out
(bad)
loopne
mov
fadd
mov
mov
pop
lds
dec
and
jg
fld
repnz
xchg
stos
fldcw
test
out
push
push
pop
jo
movs
ror
mov
into
cmps
push
mov
xchg
shr
adc
mov
(bad)
rcr
dec
xor
and
into
int3
push
mov
mov
mov
mov
jae
fst
pop
xor
pop
in
xchg
pushf
stc
jnp
ret
popa
imul
lea
xchg
(bad)
jns
push
adc
lods
loop
lea
sbb
sub
add
in
xchg
mov
cmps
sbb
test
ret
lods
das
jle
loop
inc
(bad)
shr
ret
ret
sbb
pop
repnz
xor
scas
cmps
and
dec
and
not
imul
mov
mov
dec
xchg
push
aaa
sti
stos
mov
xor
xchg
xchg
lds
icebp
pop
pop
aaa
stc
mov
mov
adc
cmp
xchg
stc
loopne
push
sub
js
jae
test
mov
cmc
jns
fld
mov
ror
jl
(bad)
push
enter
pop
push
mov
jnp
test
sahf
jo
mov
repz
push
movs
sub
fmul
cmp
out
pop
lds
jno
out
push
push
pop
jo
movs
ror
mov
into
cmps
push
mov
xchg
shr
adc
mov
(bad)
rcr
dec
xor
push
ds
hlt
shr
addr16
push
mov
or
xchg
cs
xor
pop
xor
pop
in
xchg
pushf
stc
jnp
ret
popa
imul
lea
xchg
(bad)
jns
push
adc
lods
loop
lea
sbb
sub
add
in
push
sti
lock
pop
lea
pop
mov
iret
and
ret
ret
sbb
pop
repnz
xor
scas
cmps
and
dec
and
not
imul
mov
mov
dec
xchg
push
aaa
sti
stos
mov
out
jne
(bad)
int3
pusha
adc
jnp
(bad)
sahf
test
mov
adc
aad
test
push
xchg
mov
mov
dec
dec
ins
push
das
push
mov
bound
mov
pop
mov
ins
xor
fwait
jbe
dec
shr
push
stos
pop
data16
aaa
in
pop
loopne
cdq
pop
ja
into
sti
test
jp
xor
outs
out
xor
jae
add
test
test
xchg
mov
push
sahf
mov
or
add
pop
mov
lds
loope
data16
jnp
sbb
cmp
xor
cli
mov
fbld
movs
not
int3
fnstcw
jno
jmp
adc
clc
pop
sbb
ror
pop
push
mov
bound
dec
imul
jae
scas
adc
inc
js
lahf
or
xchg
cs
xor
pop
xor
pop
in
xchg
pushf
stc
jnp
ret
popa
imul
lea
test
ficom
aam
push
dec
add
outs
ret
sbb
sbb
sar
and
stos
lods
xchg
out
jecxz
pop
js
jecxz
es
push
cmps
sbb
(bad)
arpl
fist
in
(bad)
xchg
add
or
jmp
mov
pop
lds
loope
data16
jnp
sbb
cmp
xor
cli
mov
fbld
movs
not
int3
fnstcw
jno
jmp
adc
clc
pop
sbb
ror
pop
push
mov
bound
dec
imul
sbb
sbb
mov
mov
std
add
mov
pushf
(bad)
iret
push
ret
ficomp
ret
adc
retf
shl
repz
jle
fmul
ins
add
mov
mov
cmc
cli
mov
cmp
es
and
or
mov
jae
pop
pusha
stos
sti
pop
aas
add
and
mov
mov
lods
imul
adc
xchg
cmc
fwait
inc
mov
ja
pop
xor
jnp
daa
xor
jbe
test
jbe
loope
xchg
mov
and
dec
and
and
adc
and
mov
les
imul
in
jle
test
mov
mov
cdq
out
mov
loop
ins
(bad)
cmp
xchg
adc
in
mov
leave
cli
cmps
xchg
pop
mov
popa
popf
sub
ds
retf
add
jb
push
fiadd
sbb
loop
test
cmp
and
call
xchg
xor
inc
cld
mov
sbb
les
pop
jle
fs
icebp
(bad)
rcl
int
out
out
pop
hlt
sbb
movs
mov
test
shl
cmp
pusha
fisttp
pop
xchg
enter
xchg
jg
mov
or
stos
loope
enter
stc
hlt
in
sub
push
sti
psubsb
dec
xchg
gs
out
or
retf
sub
xchg
xchg
cld
pop
mov
in
xor
cli
inc
ins
icebp
clc
push
xor
and
test
sbb
je
in
mov
jg
xlat
pop
push
sbb
cmp
das
xchg
shl
ja
push
adc
xchg
pusha
test
cmp
push
sbb
jmp
adc
stos
shl
cmc
xchg
aam
inc
pop
cwde
repnz
pop
hlt
sbb
add
mov
(bad)
idiv
cmp
jne
adc
imul
push
sahf
push
cld
fistp
popa
dec
clc
js
adc
push
adc
mov
and
pop
dec
loop
(bad)
xchg
fsub
int3
cmps
sub
xor
popf
xor
ss
icebp
sti
div
fisub
xchg
les
aaa
sbb
inc
mov
xchg
int
(bad)
cmp
push
cmp
mov
retf
cwde
pop
jmp
sbb
sti
push
inc
xchg
jmp
ja
dec
int
xchg
inc
inc
mov
repnz
sub
daa
sub
fst
inc
lahf
cmps
mov
sub
out
out
sbb
icebp
ret
mov
mov
call
mov
mov
jecxz
or
add
shr
(bad)
adc
imul
or
or
aad
xor
add
dec
dec
cmp
hlt
sbb
fimul
arpl
loop
cs
dec
xchg
xchg
cs
push
cmps
xchg
repz
movs
push
or
jecxz
push
stos
(bad)
fnclex
xor
(bad)
bnd
enter
gs
push
cmp
cmp
hlt
inc
(bad)
stos
sbb
aas
js
je
retf
lds
int3
sbb
pop
in
jnp
movs
cmp
or
xchg
les
sub
pop
popa
cli
mov
push
mov
ret
dec
inc
pop
adc
es
inc
aaa
ins
retf
pop
retf
fbstp
mov
mov
pop
push
push
in
int3
push
lahf
stos
stos
mov
mov
dec
out
out
mov
dec
adc
add
cs
lock
mov
inc
retf
sbb
sub
push
mov
jp
rol
mov
or
adc
or
push
stc
popf
retf
std
test
ud1
cmp
xor
repz
rcr
ficomp
pop
jbe
pop
push
jp
repnz
or
mov
addr16
out
sub
jl
or
mov
dec
aaa
or
jg
mov
xchg
mov
test
bound
xchg
pop
mov
ja
jae
ficomp
mov
and
add
out
fchs
push
mov
ins
mov
ss
inc
pushf
push
int
ficomp
cmp
jle
mov
sbb
and
sbb
pop
out
mov
vpacksswb
cmc
mov
mov
cwde
mov
cwde
cs
inc
das
shl
jle
cmps
sbb
test
outs
ins
or
ror
rcl
push
cmp
retf
cli
sti
ffreep
mov
ss
and
adc
push
and
(bad)
xor
pop
lock
xlat
scas
pop
pop
adc
pop
rol
push
pop
xchg
icebp
cwde
mov
mov
icebp
mov
inc
pop
xchg
xchg
fs
outs
or
dec
mov
jb
test
fs
jp
pop
cwde
sbb
psubusw
idiv
or
adc
dec
xchg
clc
or
je
lahf
add
add
je
pop
lods
fist
in
jnp
ja
sbb
outs
fidivr
movs
js
xchg
cmp
and
mov
outs
dec
mul
pop
mov
call
iret
sbb
or
mov
cmps
mov
movs
fst
stos
ss
mov
cli
enter
pop
out
fs
sahf
add
arpl
xchg
mov
pop
cld
repz
in
retf
dec
lods
test
inc
mov
or
mov
in
pop
mov
or
push
in
xor
jle
out
sbb
push
fld
leave
cmc
mov
jno
adc
cmps
jno
mov
mov
(bad)
out
stos
mov
and
push
pushf
aad
cmps
loopne
imul
ins
pop
int3
leave
popf
cmp
xchg
dec
fistp
pop
call
out
add
mov
mov
pushf
fidivr
push
int3
std
ins
inc
xchg
int
call
mov
push
dec
aam
jmp
sub
sub
push
pop
pop
mov
mov
out
mov
test
sar
and
out
push
out
repz
mov
jae
add
add
jno
jecxz
dec
mov
xor
(bad)
test
repnz
ins
or
push
push
int
in
out
mov
push
mov
ret
lahf
or
jp
or
adc
cmp
in
inc
and
pushf
jae
mov
fcom
icebp
test
stc
mov
dec
outs
sbb
mul
and
xchg
jns
dec
int
lds
push
cmps
bound
xchg
fwait
mov
push
lods
sbb
dec
xchg
scas
push
push
mov
push
adc
js
jle
aaa
xchg
sahf
call
push
and
inc
daa
jnp
ret
test
mov
sbb
xchg
mov
push
(bad)
xchg
push
mov
cmps
mov
adc
fld
fdivr
es
in
xor
adc
push
cmp
out
in
das
adc
lds
out
push
into
scas
xchg
dec
aas
test
mov
mov
push
imul
push
pop
loop
add
fisubr
dec
aam
nop
mov
(bad)
fwait
rcl
xchg
test
fstp
test
cwde
repz
xchg
dec
add
cmc
cs
pop
pop
rcl
outs
dec
cmp
(bad)
stos
jle
cmp
pop
cmp
inc
(bad)
enter
push
hlt
adc
aas
mov
and
pop
sub
xor
retf
mov
jecxz
sub
mov
retf
js
inc
cmp
mov
test
retf
sbb
xchg
shl
stos
lahf
in
cmp
stc
stos
adc
mov
in
adc
cli
retf
xchg
mov
push
gs
mov
addr16
mov
cmp
rcl
iret
dec
loope
div
jo
cmp
mov
push
xor
pop
icebp
int
fcomp
cmp
out
mov
sbb
(bad)
ret
cwde
xor
outs
sub
cld
push
icebp
cmps
inc
push
sub
(bad)
stos
rcr
add
mov
mov
ja
xchg
sbb
dec
jbe
sbb
jge
lock
inc
out
sbb
mov
les
and
xor
lods
gs
les
sahf
cmp
pop
adc
loop
cmp
or
jns
cli
mov
jns
mov
jecxz
ret
or
rcl
or
mov
add
in
out
or
test
in
sbb
mov
and
cmps
enter
rcl
pop
and
scas
std
xchg
(bad)
loopne
push
or
or
mov
call
add
adc
pop
push
jle
fwait
(bad)
outs
push
mov
dec
(bad)
and
mov
adc
pop
int
call
mov
or
rcr
(bad)
xor
les
mov
mov
pop
inc
push
xor
or
mov
sahf
xor
popa
push
jg
sar
push
in
int3
neg
dec
scas
push
cld
jae
mov
xor
add
jge
mov
fidiv
push
cdq
xchg
xchg
in
mov
push
mov
scas
jne
push
mov
ret
test
inc
jbe
test
pop
jnp
mov
dec
sbb
jecxz
cmp
xchg
data16
jmp
dec
lock
popf
data16
jmp
or
adc
movs
xor
inc
push
mov
fsub
mov
jmp
lds
and
push
(bad)
push
mov
cmp
cmp
inc
sahf
jne
(bad)
ins
and
scas
das
and
jl
das
xor
jmp
ja
add
mov
nop
test
dec
movs
std
sub
js
xor
xchg
test
sbb
stc
lods
aaa
mov
ret
push
pop
sbb
and
aas
(bad)
fdiv
scas
cmp
out
ret
dec
sub
loopne
push
jge
mov
ret
push
dec
dec
or
aad
ret
rcl
mov
call
mov
cld
or
iret
pop
cli
dec
mov
call
retf
sbb
pop
push
xchg
lea
inc
pop
(bad)
(bad)
jp
pop
into
fadd
inc
sti
aam
cld
pop
ins
cmc
lods
adc
cwde
xchg
mov
sub
out
pop
jecxz
cmp
dec
imul
ret
inc
jle
test
lods
out
cwde
hlt
rol
(bad)
push
ds
popa
gs
test
jmp
push
push
repnz
shl
out
push
loopne
aam
inc
inc
mov
xchg
pop
pop
pop
push
xchg
inc
je
jo
iret
adc
jl
enter
iret
inc
shl
xlat
and
jge
fiadd
cwde
xchg
jmp
ins
lahf
cmp
shl
push
adc
sti
pop
xor
imul
mov
adc
push
(bad)
loope
stos
out
je
cli
inc
cmp
cwde
xor
jecxz
inc
adc
ins
jmp
lahf
stos
div
xor
imul
pop
(bad)
pop
nop
adc
adc
(bad)
leave
and
or
dec
leave
shl
adc
rol
jns
mov
inc
pop
and
pop
cdq
lahf
gs
push
add
fwait
idiv
xor
cmp
lahf
outs
cdq
ret
mov
xchg
inc
inc
lea
out
push
push
mov
out
cld
jl
mov
mov
and
jb
inc
repnz
stc
hlt
inc
mov
(bad)
jnp
scas
xchg
fwait
xor
cdq
adc
add
ins
sar
call
imul
fild
stos
adc
sub
dec
cmp
mov
sbb
(bad)
add
fsubr
test
repnz
dec
das
mov
push
jnp
outs
int3
lock
cmp
test
inc
dec
push
mov
adc
mov
and
sbb
clc
dec
push
xchg
lods
pop
inc
pushf
out
movs
pop
xchg
or
mov
mov
int
and
dec
repz
fmul
push
sub
add
and
sar
or
outs
pusha
pop
cli
sbb
xchg
fist
les
sar
shl
push
mov
lds
out
sub
dec
leave
in
hlt
ds
outs
jno
dec
test
jbe
and
adc
pop
and
xchg
call
pop
sbb
arpl
mov
ror
in
jb
dec
and
nop
addr16
mov
adc
mov
test
cs
dec
(bad)
jmp
call
inc
ror
js
jmp
jmp
movs
lods
jae
cmp
cmp
adc
push
fwait
inc
push
xor
fadd
jne
inc
sbb
out
lahf
sbb
or
mov
addps
test
xor
repz
ss
loope
sti
mov
fstp
adc
mov
ins
rcl
(bad)
cmps
add
inc
push
or
stos
stos
sub
das
add
data16
push
(bad)
xor
push
icebp
cmp
fisttp
jle
cmc
movs
cmps
jecxz
dec
cmc
int3
in
outs
pushf
jnp
mov
daa
daa
xor
div
int
push
aas
add
push
inc
shr
nop
mov
dec
cli
sub
dec
stos
adc
or
retf
out
aaa
stc
pop
xor
popf
mov
pop
mov
(bad)
sub
cmc
xchg
jb
push
int3
mov
jo
or
aam
xor
inc
pop
pop
and
mov
add
mov
sbb
add
mov
and
add
call
mov
test
jae
daa
fdiv
and
cmp
test
daa
out
popf
mov
(bad)
cld
or
mov
mov
jl
adc
mov
movs
mov
ret
jp
pop
enter
inc
arpl
nop
adc
sub
call
aas
dec
out
xchg
mov
int3
int3
cmc
push
cdq
outs
sub
push
aam
shl
in
sub
add
dec
aad
push
sub
test
mov
sub
pop
sub
or
ds
mov
and
cs
mov
mov
popf
lock
push
daa
cmps
and
sar
out
scas
xchg
stc
sub
mov
jmp
arpl
pop
mov
leave
jp
int
rcr
mov
adc
mov
inc
and
or
mov
mov
inc
arpl
pop
das
(bad)
adc
(bad)
jno
mov
dec
inc
push
in
mov
in
js
fcomp
mov
inc
inc
in
push
aaa
mov
dec
fdiv
push
test
test
ret
sbb
outs
loop
xor
cmp
outs
push
retf
adc
push
and
xchg
ss
xor
and
lds
sbb
shl
xchg
jg
mov
jb
adc
jno
mov
push
sbb
mov
jge
adc
mov
das
ja
out
cmc
out
fs
add
outs
daa
mov
xchg
es
push
enter
bnd
xchg
outs
es
das
imul
add
js
aam
out
pop
pop
loope
out
enter
arpl
cmp
test
and
icebp
pop
dec
jecxz
bound
or
push
gs
into
fsqrt
movs
ins
push
push
out
mov
pop
mov
jbe
ja
pop
xchg
xor
mov
in
int3
pusha
mov
jo
iret
fidiv
jb
(bad)
push
cmps
push
inc
in
and
adc
cs
mov
dec
xor
dec
dec
and
push
sbb
dec
xchg
dec
mov
jle
adc
add
ret
stos
mov
push
stc
test
jl
mov
xlat
fdiv
ja
out
and
jb
cmp
xchg
or
cmp
sar
nop
fistp
dec
stc
xchg
out
pop
cmp
push
adc
or
in
inc
pop
in
mov
xlat
pop
cmp
xchg
or
lods
mov
in
push
or
ret
jmp
push
mov
das
add
jle
lods
mov
clc
dec
sbb
test
outs
icebp
or
add
adc
mov
jns
repz
rcl
inc
push
les
mov
mov
fistp
fcmove
cmp
test
pop
xchg
add
arpl
vmovd
sub
ins
ss
cmp
fsubr
in
dec
(bad)
fcom
jle
(bad)
push
mov
stos
std
xchg
mov
sub
inc
and
(bad)
push
dec
fs
push
cmp
mov
out
dec
rcr
sti
(bad)
sbb
xchg
adc
nop
outs
les
sub
fidiv
lock
aad
cmc
leave
sub
(bad)
cld
cli
icebp
loop
sub
rol
(bad)
push
push
sub
(bad)
lods
cmps
cmc
ins
test
xor
mov
ds
fwait
ins
iret
xchg
dec
pusha
loop
xor
sahf
popa
or
pop
repz
cmp
js
sbb
or
imul
rol
in
adc
in
repnz
xor
dec
stos
je
sub
adc
sbb
das
jae
das
aas
xor
sahf
fcomp
jmp
jns
scas
push
and
add
and
pusha
push
mov
sar
out
inc
mov
inc
jns
xchg
fild
push
cs
dec
or
jno
or
mov
ret
or
rol
and
or
xor
mov
sub
hlt
(bad)
jo
pop
dec
fst
cmp
call
fnstcw
mov
sahf
xor
push
and
push
pop
cld
shl
inc
jmp
fstp
xchg
push
pop
lods
imul
fldcw
mov
mov
push
pop
sub
rcl
sub
das
clc
movs
mov
mov
je
and
ss
ss
inc
xlat
mov
scas
xor
xchg
sti
mov
sbb
jmp
mov
or
addr16
enter
push
and
xchg
cmp
mov
shl
popf
jb
clc
or
sub
jno
mov
add
add
mov
int3
or
in
sub
push
cmp
inc
cmp
mov
add
mov
jo
mov
nop
fcmovu
hlt
retf
out
ins
jno
mov
mov
iret
aad
jae
mov
pop
xor
test
cmc
mov
dec
xor
push
ficomp
inc
pop
inc
sub
out
in
cmp
in
jbe
sbb
pushf
adc
mov
leave
add
std
test
dec
inc
cli
lds
xor
lods
cmp
popf
jnp
push
or
pop
cwde
pop
daa
cwde
xor
in
mov
ret
cmp
les
mov
fisttp
push
add
mov
inc
mov
push
adc
ret
pop
sbb
ror
sub
add
push
cli
dec
and
sbb
rcl
out
pop
out
adc
out
aaa
mov
mov
pop
jns
adc
scas
sbb
mov
add
or
pushaw
in
push
add
push
movs
sub
pusha
cmps
loope
mov
sti
add
fs
push
cs
and
test
mov
fadd
into
test
push
cmp
in
jecxz
movs
dec
mov
psubusw
mov
(bad)
popf
mov
sub
mov
sub
jge
adc
add
cmp
and
ss
leave
dec
mov
(bad)
mov
pop
(bad)
lods
or
das
(bad)
out
pop
jnp
test
mov
dec
cmp
sbb
pop
inc
out
mov
lds
cmp
std
test
sub
scas
adc
mov
inc
sti
xchg
fwait
mov
add
adc
sbb
mov
lock
inc
mov
inc
repz
shl
in
sub
or
mov
adc
and
int3
mov
call
cwde
inc
cwde
(bad)
clc
sbb
pop
cmc
mov
mov
jecxz
repnz
ds
nop
cmp
xor
jae
add
dec
jmp
push
stos
jmp
mov
push
jb
fisttp
stc
sti
mov
mov
fiadd
inc
stc
or
mov
and
popa
fxch
imul
push
mov
js
xchg
test
clc
pop
outs
movs
add
shl
sbb
mov
adc
inc
pcmpgtb
fsub
adc
out
pop
xor
lea
pop
into
mov
bound
nop
jbe
les
(bad)
and
test
int
into
ret
movs
push
pop
cmp
call
and
xor
sbb
hlt
scas
mov
fnstenv
lock
adc
popf
push
ficom
lock
xchg
lods
mov
pop
fwait
cwde
add
bound
mov
scas
lds
xchg
and
daa
stos
cmp
add
mov
dec
or
sbb
inc
jmp
jno
mov
aaa
cmp
ins
es
mov
push
imul
leave
or
std
cld
sub
sub
or
test
mov
aad
lods
daa
dec
mov
mov
retf
ret
mov
(bad)
dec
jmp
scas
addr16
in
hlt
or
sub
stos
sub
and
jmp
fsubr
push
pop
adc
dec
movs
stc
add
mov
sub
dec
push
push
je
mov
pop
mov
gs
push
dec
ror
xor
loop
mov
adc
lods
or
jb
add
addr16
add
not
adc
ins
stos
pop
cmc
mov
sub
jbe
sub
sahf
pop
or
pop
fsubr
lods
add
mov
aaa
and
mov
xor
adc
loopne
scas
hlt
sti
xor
inc
push
int3
popf
and
and
mov
stos
arpl
in
sti
add
push
and
mov
sub
test
push
cmp
lds
fimul
jns
adc
mov
dec
adc
sbb
movs
mov
int
scas
enter
dec
add
into
nop
cmc
pop
mov
aaa
call
add
out
xor
or
dec
jg
retf
dec
and
inc
mov
pop
sub
out
cmc
lods
ror
ins
mov
das
ja
loopne
cmp
out
mov
cmps
rol
fmul
cmp
push
add
sub
loop
shr
push
lods
and
ss
ins
pop
jmp
push
mov
stc
cmp
ffreep
lock
cmp
retf
data16
call
sbb
sbb
xor
mov
sahf
test
rcl
imul
xor
push
pop
pushf
inc
push
ret
pop
lods
dec
jbe
adc
repnz
jbe
dec
lea
pushf
in
or
adc
cmp
loope
inc
repz
and
mov
adc
xchg
adc
xor
outs
lods
add
iret
add
push
sbb
xor
inc
xchg
cwde
inc
xchg
push
pop
in
test
sbb
rcl
addr16
(bad)
rcl
sbb
mov
dec
jle
push
fdiv
into
jmp
into
in
fld
rol
cmp
push
inc
xor
push
sti
mov
mov
xor
inc
mov
mov
rol
pop
adc
xchg
adc
call
aam
jmp
(bad)
push
hlt
dec
xor
popa
inc
mov
dec
jecxz
daa
push
mov
mov
and
mov
imul
mov
mov
jb
xor
push
or
shl
pop
mov
ret
out
inc
shr
dec
xchg
sub
push
push
jg
jae
mov
imul
int
lds
shl
stos
cmp
jl
je
add
out
and
fcom
mov
or
dec
inc
loop
pop
pushf
ror
cld
or
shr
(bad)
inc
add
repnz
cli
nop
dec
ror
ins
add
mov
inc
inc
test
jb
push
jmp
cmp
leave
and
dec
pop
mov
mov
in
xor
repz
ss
imul
popa
cwde
enter
mov
cwde
cmp
mov
movnti
in
jo
pop
fistp
sbb
xchg
mov
cmp
test
hlt
ins
push
sub
in
inc
outs
jne
xchg
sbb
pop
jmp
jecxz
dec
lahf
jmp
outs
(bad)
(bad)
adc
adc
xor
out
xchg
sub
pop
push
syscall
inc
sahf
xchg
mov
jbe
fidiv
imul
add
sbb
jg
(bad)
pop
sbb
mov
mov
and
adc
or
call
pop
ss
(bad)
fistp
xor
sub
fild
and
int
jns
dec
cli
pop
jmp
enter
lea
inc
cld
jge
pop
push
movs
out
push
cmp
inc
and
inc
push
xchg
mov
ja
inc
pop
xor
jbe
mov
adc
mov
out
sbb
and
(bad)
sub
js
and
scas
add
and
sbb
pop
int
inc
xlat
arpl
fimul
sub
data16
out
ficom
mov
push
scas
fsubp
sbb
arpl
xchg
imul
test
das
push
jb
out
pushf
mov
sub
inc
clc
jle
retf
jg
enter
xchg
mov
jl
mov
pop
fadd
mov
add
sahf
xchg
lds
add
xor
inc
ins
pop
mov
lods
mov
inc
and
ja
push
inc
fbld
int3
pop
fxch
add
dec
les
sar
pop
(bad)
mov
nop
mov
nop
push
inc
push
jbe
aad
sub
enter
sbb
movs
cmps
xor
push
shr
shl
in
inc
add
jbe
or
dec
iret
or
ins
sub
cmp
call
ins
cmp
dec
sub
fadd
mov
aas
hlt
imul
inc
(bad)
xchg
jb
(bad)
out
out
fdiv
push
add
pop
inc
in
xor
or
fsubr
jb
push
ret
pusha
inc
pop
cmp
jae
cmp
out
adc
gs
sub
xchg
sub
(bad)
outs
inc
xor
pop
push
pop
push
pushf
loopne
xchg
(bad)
out
mov
inc
out
scas
adc
sbb
mov
test
retf
outs
scas
add
mov
ficomp
push
imul
inc
icebp
call
fwait
add
lahf
fistp
mov
scas
mov
dec
push
pop
push
cmps
je
or
and
jg
loope
pop
push
pop
sbb
aam
and
or
ret
and
stc
stc
arpl
popa
js
pushf
mov
(bad)
inc
out
and
repnz
scas
stc
cwde
xchg
pop
adc
inc
arpl
test
sahf
or
mov
mov
mov
xor
jb
js
push
mov
neg
loope
lahf
mov
adc
test
data16
push
arpl
dec
sub
cmps
sbb
inc
dec
sbb
dec
push
xor
test
add
mov
sahf
xchg
movs
inc
lds
sbb
jl
das
pop
das
pop
(bad)
into
or
aas
inc
xchg
cmps
xor
test
jge
mov
inc
movs
mov
aad
push
push
mov
xor
fdivr
mov
adc
in
pop
outs
ins
retf
cdq
jle
test
(bad)
in
jns
inc
jmp
xchg
leave
stc
mov
shl
jno
mov
cmc
xchg
outs
xor
and
test
jecxz
mov
je
push
aas
xor
jge
dec
push
mov
bound
(bad)
(bad)
std
push
fwait
imul
shl
lahf
mov
arpl
inc
sbb
lock
cmp
inc
sbb
dec
mov
lock
push
mov
pop
dec
out
fdiv
out
jmp
ds
enter
fdecstp
aaa
jecxz
sbb
xchg
rcl
ins
push
mov
iret
addr16
test
or
add
imul
cmp
jg
push
pop
aas
es
jmp
mov
ins
mov
mov
pop
mov
pop
jmp
scas
jno
pop
inc
cmps
ja
in
scas
out
shl
xor
adc
arpl
sbb
int3
mov
and
or
pop
mov
in
imul
gs
test
xlat
sti
adc
fld
inc
imul
daa
aas
sub
rcr
ss
adc
jmp
inc
stos
sub
add
mov
and
ins
(bad)
mov
sbb
xchg
push
fs
ins
repnz
inc
cmps
retf
mov
shl
ja
mov
pop
inc
pop
pop
or
jge
jnp
fstp
jne
out
jns
hlt
int3
test
mov
clc
stos
in
pop
jae
retf
mov
push
sub
adc
retf
push
mov
dec
xchg
or
cmps
inc
loopne
jae
lea
popf
jnp
ret
add
les
mov
cdq
pop
movs
popf
jl
push
loopne
or
sti
lods
leave
inc
jb
xchg
fnsave
pushf
loopne
xchg
lea
cld
push
pusha
and
pop
cdq
xlat
outs
loopne
fisubr
mov
dec
pop
add
sbb
pop
in
stc
mov
pop
dec
lods
pop
gs
cmp
xor
enter
stos
movs
js
pop
adc
xor
pop
xchg
test
and
mov
inc
jg
jg
leave
pop
push
sbb
jp
jl
adc
out
scas
scas
pop
jg
in
push
jns
xor
inc
stc
not
and
push
sbb
sbb
adc
jmp
push
adc
out
in
fbld
shl
inc
sub
outs
(bad)
fs
stos
ins
push
add
retf
jmp
xor
and
mov
pop
xchg
push
sub
adc
jbe
mov
cmp
add
lods
outs
pusha
stos
jo
rol
sub
mov
bnd
in
aas
stc
mov
mov
mov
and
pop
mov
jge
jle
adc
xchg
xlat
popa
push
cs
mov
out
or
ficomp
mov
les
or
aaa
test
inc
fwait
push
jg
push
and
mov
sub
xchg
add
pop
mov
stc
sub
les
sub
sbb
out
dec
jo
cmps
push
cmps
inc
fild
or
sbb
cld
pop
jg
iret
in
cdq
dec
in
inc
mov
push
xchg
xor
fidiv
xchg
xchg
div
adc
or
and
clc
arpl
pop
scas
retf
add
cmp
retf
nop
retf
jae
js
mov
aad
repnz
loop
sbb
shl
cs
(bad)
pop
add
test
std
lods
and
outs
pop
repz
adc
pop
pop
ins
and
cmp
push
lds
popf
pushf
jo
mov
dec
out
hlt
out
ja
ret
imul
ror
frstor
lods
es
jb
add
fsubr
and
popf
inc
call
sub
(bad)
ja
mov
test
les
loop
and
adc
xchg
es
enter
sbb
mov
xor
popf
dec
push
push
jp
dec
jg
or
test
(bad)
sub
(bad)
xchg
aad
push
addr16
shl
gs
dec
jns
ins
aaa
adc
sbb
add
mov
pop
jge
pop
dec
xor
ins
aaa
pop
add
mov
jbe
cmp
xchg
mov
xor
mov
pop
pop
mov
cdq
lods
jb
pop
movs
outs
sub
nop
jle
in
dec
cwde
ds
add
(bad)
jo
jle
push
dec
ins
test
xor
adc
into
sub
mov
fld
arpl
and
psadbw
psllq
ret
or
cmp
jmp
cmps
sbb
xchg
mov
push
gs
pop
jle
mov
adc
push
sbb
out
push
imul
movmskps
xchg
cmp
dec
xchg
push
pushf
cmp
test
xchg
inc
xchg
lea
mov
jne
push
sbb
ret
sahf
sub
test
(bad)
and
imul
dec
adc
push
repnz
jg
clc
sbb
out
inc
in
adc
jmp
out
retf
and
push
cmps
cmp
inc
push
and
pusha
lahf
cmps
or
jge
dec
popf
or
mov
mov
cmp
xchg
repz
add
inc
adc
push
ss
or
rol
fnsave
and
(bad)
fcom
dec
or
popf
test
into
jb
imul
(bad)
(bad)
in
hlt
push
adc
dec
shl
test
xchg
(bad)
push
mov
pop
inc
sub
in
sub
icebp
in
in
xchg
pop
xor
mov
push
aam
or
pushf
add
nop
mov
inc
mov
pop
aaa
outs
xlat
adc
stc
push
retf
and
cwde
mov
cmp
push
push
and
pop
fld
mov
mov
inc
jns
push
call
call
lock
cli
add
add
rcl
adc
(bad)
or
xor
dec
push
outs
and
cmp
or
push
cwde
ret
ret
xor
jmp
in
lahf
push
fistp
sub
xor
cli
and
jb
inc
push
movs
sbb
repnz
mov
add
jmp
mov
mov
mov
xor
das
fidivr
clc
loopne
mov
adc
lock
mov
cwde
test
or
les
retf
pop
dec
and
test
jbe
mov
loop
call
push
push
mov
adc
cmc
mov
cmp
imul
(bad)
add
jnp
int
(bad)
adc
mov
enter
mov
(bad)
repz
mov
outs
mov
addr16
dec
stc
rcr
in
xchg
sbb
sub
adc
in
dec
outs
iret
or
mov
or
cmc
movs
inc
(bad)
gs
fwait
ins
in
pop
test
mov
out
push
cmps
cwde
mov
xor
sbb
adc
sub
jg
bound
xchg
or
and
sbb
xchg
jnp
jge
dec
mov
xchg
ins
xchg
jne
sub
jecxz
cmp
mov
mov
sub
push
jae
in
add
push
repnz
aaa
call
movs
xchg
xor
push
stos
aad
push
pop
sub
cmp
mov
dec
scas
adc
and
stos
push
test
shl
lea
dec
imul
mov
sbb
xchg
int
sbb
cmp
gs
popa
js
aaa
pop
cli
lods
in
shl
sub
cmps
or
js
sub
add
leave
aad
leave
sahf
test
mov
sub
cmp
test
jp
xlat
lods
mov
(bad)
jg
in
pushf
mov
mov
pop
es
out
push
test
es
es
outs
jp
add
mov
or
ins
stos
inc
(bad)
xchg
xlat
imul
xchg
adc
push
inc
push
test
out
xchg
in
lock
cmp
sub
outs
repnz
(bad)
and
cmp
cmp
push
xchg
call
mov
ficom
sar
lea
(bad)
and
aaa
cmc
adc
jmp
add
test
push
adc
rol
fstp
aaa
rcr
push
fsubr
jmp
pop
mov
xchg
call
xor
sar
inc
shl
add
push
(bad)
jmp
push
add
add
mov
ins
ins
pop
mov
in
jmp
fucom
cmp
lds
inc
and
retf
mov
aas
test
cmp
xor
ja
xlat
into
add
aas
out
and
jno
mov
mov
xor
scas
dec
mov
and
push
inc
mov
popf
cs
or
js
cld
or
loope
popf
mov
add
sbb
sub
cwde
or
inc
leave
cld
mov
mov
stos
push
pop
(bad)
test
lods
pop
in
sbb
jbe
stc
jge
cwde
mov
cmps
inc
clc
sbb
pop
sbb
icebp
sbb
adc
bound
jae
add
sbb
call
scas
cmps
(bad)
xchg
xor
lea
or
inc
xor
imul
scas
mov
xchg
addr16
mov
sub
call
jl
pop
or
les
popf
out
call
or
xchg
(bad)
aaa
xor
stos
dec
arpl
(bad)
pop
nop
lods
outs
sbb
xor
pop
and
pop
call
xchg
andnps
ins
in
shl
inc
mov
shl
shl
test
xchg
addr16
int
rol
pop
pop
je
cmps
sbb
call
mov
pop
push
and
cmps
lahf
and
call
mov
lahf
and
mov
and
mov
imul
xchg
jb
and
hlt
outs
xchg
pop
or
sbb
inc
out
pop
clc
dec
cmp
or
mov
frstor
in
mov
shr
movs
and
mov
ins
jnp
xchg
lock
mov
fisubr
pop
or
push
dec
mov
pop
jbe
sbb
shr
(bad)
fidiv
sbb
fimul
imul
addr16
lea
repz
dec
and
fsubp
sub
sbb
mov
dec
jns
cs
jmp
push
sub
stos
inc
xchg
jp
mov
cmc
test
rcl
sahf
loopne
gs
pop
mov
in
inc
add
es
ret
pop
xlat
fsub
and
and
shl
mov
int3
and
mov
mov
retf
jnp
and
pop
cmp
sbb
ret
(bad)
(bad)
push
data16
icebp
hlt
sub
mov
pop
rep
imul
sahf
and
xchg
pop
fld
or
in
cmps
xchg
xlat
fcomp
loop
iret
in
stos
cmp
xchg
cld
jo
push
push
mov
jb
fcom
add
cmp
push
mov
lds
mov
rol
and
adc
(bad)
loop
rcr
mov
sbb
ficom
test
popa
ret
mov
add
push
pop
cwde
jle
pushf
stc
into
dec
imul
and
lods
mov
(bad)
push
ret
cli
fnsave
adc
and
cmp
xor
aam
jg
lods
mov
sub
mov
xchg
cmp
mov
lahf
and
push
xor
jl
sub
imul
sti
cmp
retf
out
sub
leave
(bad)
adc
add
mov
adc
sbb
xor
sbb
xor
sbb
xor
sbb
xor
aad
sub
lea
mov
shr
mov
ret
push
sbb
mov
das
loopne
sbb
or
in
out
or
cmp
push
xchg
jns
je
inc
push
bound
pop
jmp
js
cli
cs
dec
pop
adc
sbb
test
loope
jb
mov
mov
push
fst
jge
retf
test
(bad)
das
dec
pop
shr
fmul
out
xor
mov
sti
mov
xchg
arpl
or
hlt
das
lock
mov
aaa
pop
ret
mov
or
jmp
xor
xchg
test
test
mov
or
add
jmp
(bad)
(bad)
(bad)
inc
add
add
mov
frstor
pusha
mov
pop
mov
and
imul
clc
cmps
pop
adc
test
sub
sbb
cmp
stc
(bad)
call
clc
pushf
sbb
xor
jo
div
cmp
mov
lds
aas
cld
leave
mov
and
outs
(bad)
push
sbb
dec
cli
push
and
inc
ds
arpl
clc
jp
rcr
jl
cmp
and
in
push
std
addr16
call
mov
sbb
sbb
push
xor
lds
mov
xchg
xchg
retf
push
pop
jge
test
push
cmps
adc
popf
adc
add
add
jmp
(bad)
(bad)
(bad)
inc
add
add
addr16
mov
test
xor
das
aas
push
call
(bad)
jp
add
cmps
div
dec
inc
fwait
jb
ins
cmps
xlat
pushf
shl
into
jmp
mov
mov
and
jp
and
daa
mov
(bad)
jp
and
daa
mov
stc
clc
outs
lods
ins
sub
xchg
loope
enter
jne
pop
int3
cmp
dec
gs
pop
das
test
stos
(bad)
cld
scas
fistp
pop
push
sti
xor
or
movs
les
(bad)
xchg
xor
movs
add
out
dec
and
ins
popf
int
ret
cmp
push
mov
add
add
jmp
add
add
add
add
test
ret
mov
mov
test
shr
mov
jo
stos
pop
hlt
lock
fcom
jecxz
jl
scas
sub
sub
adc
push
jne
sub
jo
xchg
xlat
xor
cs
retf
jp
ins
xchg
cmp
fsave
sub
adc
(bad)
fstp
frstor
jae
mov
stc
push
popf
jge
clc
loope
lea
ja
jne
clc
mov
push
and
arpl
enter
setp
xchg
sahf
push
adc
pop
out
xor
pop
jp
cmp
jae
lods
xchg
ss
in
and
sub
inc
call
lock
mov
cmp
into
or
and
inc
mov
(bad)
ss
xor
jp
std
or
mov
(bad)
or
outs
jmp
leave
shl
pop
hlt
addr16
movs
mov
imul
add
inc
popa
push
fwait
popa
lock
enter
shl
adc
jl
add
push
(bad)
fst
jae
retf
stos
fisub
add
sbb
inc
aad
xchg
(bad)
js
sbb
loopne
std
outs
sbb
xchg
mov
push
sub
cmp
adc
pop
mov
jmp
aas
cmp
push
xor
cdq
lds
daa
in
dec
sahf
neg
push
rol
fnsave
sbb
test
lahf
dec
push
rcl
push
inc
dec
lea
retf
mov
cmp
add
test
in
sub
sub
sbb
cmp
push
push
lock
xor
ret
jecxz
fs
and
sub
cwde
outs
scas
js
push
sbb
or
movs
jne
es
out
gs
les
in
push
cs
fld
push
mov
push
add
and
in
jo
and
cs
push
adc
ss
bound
(bad)
or
outs
(bad)
hlt
cwde
jge
adc
cwde
pop
push
stos
fisub
ds
retf
popa
dec
mov
pop
cmp
cmc
cmps
mov
add
sbb
adc
sti
sub
movs
push
mov
rcr
cmp
rcl
add
dec
test
hlt
xor
ret
adc
in
ins
int3
mov
xor
aad
repz
sub
xor
outs
push
test
mov
imul
mov
(bad)
pop
jns
movs
retf
aas
or
mov
mov
call
daa
movs
mov
es
push
xor
mov
js
push
push
xchg
ss
data16
fidiv
retf
push
pop
dec
mov
xchg
or
rol
or
std
pop
xor
loope
(bad)
hlt
or
fwait
sar
xchg
enter
loopne
cmp
jl
mov
sahf
retf
test
xor
ret
cmp
xchg
sbb
test
cmp
push
shr
push
(bad)
cs
enter
adc
fstp
ret
pop
xchg
sbb
mov
(bad)
movs
mov
test
pop
pop
aas
sbb
add
daa
(bad)
cld
fcmovne
xor
lock
scas
jg
sbb
sahf
push
mov
xchg
scas
rol
sub
hlt
push
push
jp
push
inc
imul
popf
or
cld
ficom
in
push
arpl
push
jnp
xor
or
lods
xchg
cwde
push
test
rcl
std
shl
add
push
dec
push
jg
pushf
lea
xchg
pop
mov
ret
retf
fbstp
pop
cmp
push
inc
ret
mov
popa
pop
push
(bad)
mov
cmp
or
mov
jbe
and
adc
cmp
mul
and
add
test
add
push
(bad)
jmp
adc
add
add
add
(bad)
jmp
mov
mov
and
imul
imul
or
cmc
jnp
out
jae
xor
cmp
nop
inc
cs
inc
xchg
mov
stos
adc
aad
jl
sar
aam
(bad)
pusha
iret
add
(bad)
jno
lock
jmp
gs
es
adc
cwde
jae
std
retf
and
fwait
jae
(bad)
adc
push
push
xor
xor
xchg
cmp
xor
inc
movs
movd
cwde
push
mov
js
call
push
or
xlat
mov
ja
xchg
and
xchg
xchg
sub
add
stos
and
sahf
jmp
adc
xchg
inc
pop
outs
shl
xchg
movs
adc
mov
pop
(bad)
ins
popa
rol
shl
movs
sbb
mov
fwait
call
pop
mov
iret
jnp
mov
cmc
inc
pop
jecxz
sub
xchg
pop
adc
inc
xor
and
jns
push
xchg
sar
movs
cmp
aaa
fwait
dec
push
outs
push
sub
loop
call
mov
movs
jmp
jne
jmp
sub
ret
push
mov
dec
jbe
xchg
xchg
cs
or
cmp
mov
and
sbb
or
jo
add
retf
das
xchg
mov
mov
cwde
sbb
adc
dec
sub
shl
imul
cdq
std
test
das
xchg
xor
ror
sub
adc
mov
pop
ret
fadd
sub
dec
leave
dec
add
add
jmp
(bad)
(bad)
(bad)
inc
add
add
jmp
jmp
or
cmc
cs
fwait
scas
cs
dec
inc
pop
sar
pop
xor
mov
repz
and
cmps
ret
nop
mov
jl
jno
xor
mov
sub
and
sti
sub
(bad)
jmp
sahf
mov
pop
daa
ja
add
mov
pop
retf
gs
fldenv
dec
xor
mov
ss
shl
sbb
and
lahf
dec
pop
mov
fsubr
xlat
das
and
je
movq
sub
aas
dec
loopne
add
test
test
xchg
xor
arpl
jb
movs
inc
scas
les
lea
aam
repnz
pop
cmc
das
xchg
push
jp
mov
out
rcl
ds
pop
cmc
inc
dec
clc
outs
pushf
push
les
les
lock
shl
(bad)
cmp
call
cdq
loopne
mov
mov
hlt
push
leave
inc
sub
fimul
fild
clc
add
or
clc
add
or
clc
add
or
clc
add
or
clc
add
or
clc
add
add
push
(bad)
jmp
mov
add
add
add
add
lock
and
imul
or
int
mov
jbe
sbb
cmp
js
adc
js
pop
jns
out
push
mov
scas
adc
out
dec
push
mov
push
push
add
xchg
add
inc
mov
sub
test
ja
dec
push
and
pop
pop
clc
movs
mov
outs
adc
test
or
pop
dec
inc
ds
popa
div
or
out
mov
adc
xchg
add
ret
sub
sub
fadd
xor
ds
inc
(bad)
push
retf
and
mov
push
aas
and
add
test
mov
lods
mov
dec
retf
icebp
jp
(bad)
xchg
jmp
jbe
icebp
xor
jg
test
mov
out
lods
mov
hlt
cdq
loopne
or
cmp
mov
cmc
add
mov
fwait
pop
xor
cmp
adc
cmp
aad
pop
ins
out
pop
cli
push
out
inc
mov
mov
rcr
stc
out
sar
in
shl
push
fwait
stc
test
mov
and
lods
loop
out
imul
(bad)
mov
mov
mov
repz
xchg
jnp
push
push
inc
ret
(bad)
shr
cmp
mov
ins
dec
or
pop
loopne
pop
and
xor
pop
adc
movs
repz
pop
mov
or
sbb
mov
mov
mov
je
call
retf
frstor
mov
hlt
fs
push
mov
pop
je
hlt
push
clc
daa
xchg
shr
sahf
sub
imul
push
(bad)
aaa
jmp
cld
jmp
push
bound
ret
(bad)
ret
call
xor
mov
push
push
jle
ins
std
jge
sbb
in
into
jns
xchg
arpl
jge
scas
out
outs
in
lods
bound
lahf
add
dec
xchg
sar
cmps
mov
sub
xor
jl
in
in
div
pop
mov
xchg
mov
pop
call
push
jnp
sahf
mov
xchg
les
(bad)
aad
popf
xchg
fs
sub
les
mov
xchg
mov
arpl
shl
ret
sbb
ins
lahf
dec
int3
jo
mov
scas
jnp
pop
sub
adc
punpckhdq
stos
addr16
ds
cmp
mov
sbb
push
popf
and
mov
punpckldq
sbb
fst
sbb
cli
inc
mov
sub
jb
out
mov
pop
arpl
rol
push
cld
neg
bound
outs
sbb
jno
fsub
ret
dec
inc
jbe
jbe
fidivr
bound
push
(bad)
fnstcw
xchg
ins
shl
jl
fcmovnb
mov
repz
aas
or
repnz
pop
push
(bad)
jmp
(bad)
(bad)
(bad)
inc
add
add
push
call
xchg
scas
ret
mov
sub
pop
sbb
and
mov
dec
popf
add
daa
pushf
jne
(bad)
clc
push
inc
mov
xchg
scas
ret
jl
or
sbb
stc
retf
add
sbb
add
jno
mov
mov
xchg
inc
dec
jmp
pushf
dec
das
pop
imul
xchg
hlt
rcl
jmp
xor
add
push
(bad)
jmp
push
add
add
add
add
xchg
jp
loopne
iret
push
fcomp
cwde
scas
shl
push
hlt
mov
xlat
xchg
pusha
ins
pop
lahf
aas
mov
mov
(bad)
call
lock
leave
(bad)
sbb
dec
pop
push
push
in
jae
inc
mov
stos
(bad)
pop
sub
adc
and
inc
dec
mov
push
mov
mov
xchg
mov
es
cmp
inc
cmp
arpl
shl
dec
fild
add
test
idiv
cmc
mov
fidiv
jnp
popa
pop
inc
call
(bad)
pop
adc
sub
fwait
and
out
test
pop
or
std
mov
lahf
outs
xchg
fld
out
push
lods
jp
call
fidiv
call
fstp
sub
pop
lods
retf
mov
push
lock
mov
lods
sti
gs
xlat
mov
sti
jmp
outs
xchg
jmp
cmp
lahf
mov
mov
jecxz
std
and
sub
sbb
shr
cmp
icebp
push
arpl
sbb
and
into
xchg
and
ss
ja
dec
and
cdq
cwde
retf
stos
push
jge
dec
jg
in
inc
add
in
je
lea
jmp
cdq
in
repnz
imul
outs
mov
lock
add
outs
jg
and
stos
and
xor
sub
adc
lods
push
shr
sub
and
mov
test
xor
jo
jbe
jno
hlt
dec
shr
push
mov
cmp
imul
push
push
out
ret
mov
daa
test
(bad)
imul
jmp
xchg
int
mov
inc
call
cmp
inc
out
inc
fild
adc
sbb
dec
out
jbe
push
call
jl
mov
mov
xor
mov
xor
lds
loopne
(bad)
fadd
pop
cmp
imul
cmps
sbb
xchg
enter
xor
mov
lock
in
fnstcw
rcr
xor
push
or
call
pop
das
and
stos
sub
retf
fmul
mov
push
jne
push
xor
inc
bound
pop
push
push
add
loop
sub
clc
outs
cs
jl
mov
xor
sub
call
out
and
push
push
mov
test
into
adc
jb
jo
sub
xor
cli
push
fistp
mov
rol
dec
and
jp
scas
stos
cmc
imul
push
cmp
inc
or
and
dec
jb
xchg
push
inc
ins
bound
jmp
movs
lods
lods
fimul
mov
sbb
inc
lock
xchg
(bad)
out
xchg
in
repz
(bad)
arpl
mov
sub
adc
cmp
xchg
and
call
push
retf
mov
cmp
pop
gs
cmp
mov
sub
dec
pop
jno
neg
jo
push
test
ds
lea
push
mov
jmp
call
sbb
jmp
sub
gs
cs
pop
outs
pop
cmps
mov
inc
or
mov
(bad)
test
pop
dec
sub
adc
lock
push
jbe
stos
add
jmp
leave
lods
sub
jbe
jbe
ds
mov
test
pop
shl
mov
mov
inc
push
jmp
push
shl
xchg
mov
inc
adc
jl
xor
jle
pop
xchg
jb
jp
cmps
fsub
(bad)
xchg
movs
(bad)
aas
pop
sbb
sbb
sahf
fisub
xchg
mov
mov
repnz
xchg
int3
adc
push
(bad)
fiadd
inc
add
pop
xchg
cmp
and
xchg
aas
mov
mov
sub
adc
jbe
outs
test
push
sub
jnp
das
fs
call
inc
cli
int
in
daa
es
cmp
jns
mov
jmp
in
xor
not
xor
movs
or
pop
jmp
ret
retf
jge
or
out
push
mul
add
je
mov
mov
add
stc
gs
add
ffreep
mov
dec
aam
pmuludq
mov
pop
in
sbb
les
sbb
inc
inc
pushf
(bad)
sbb
aas
mov
pop
mov
sub
call
inc
mov
fisub
std
push
mov
mov
into
jg
(bad)
cmc
popa
stos
std
test
push
stc
int3
leave
loopne
je
mov
push
stc
push
loope
sbb
mov
xchg
movs
push
hlt
dec
es
lods
(bad)
cs
in
std
sbb
loopne
sbb
in
push
jb
xor
fistp
outs
cs
ror
sahf
mov
test
or
xchg
pusha
jmp
cdq
pushf
mov
push
lahf
(bad)
dec
sti
daa
xor
sbb
xlat
out
or
test
mov
ret
nop
std
ret
jo
jae
aaa
xlat
popa
jle
es
cmp
or
cmp
push
mov
ins
daa
inc
enter
inc
jbe
push
mov
dec
add
xchg
addps
adc
push
mov
cmp
jbe
arpl
dec
cmp
sbb
pop
ins
adc
sahf
retf
mov
sahf
fsubr
cmp
rcr
push
mov
hlt
push
test
mov
jno
lds
lahf
or
out
stc
sahf
dec
icebp
fnstcw
xchg
das
dec
(bad)
adc
(bad)
ins
addr16
in
xchg
stos
ret
call
ss
xor
push
push
adc
push
push
and
loopne
jns
imul
cmps
mov
xchg
gs
movs
and
lock
mov
ret
test
pushf
jnp
fwait
jno
mov
sub
push
xor
mov
push
and
loopne
ds
ror
xchg
pop
jb
inc
mov
jns
stc
adc
jp
mov
scas
loop
ins
sbb
mov
mov
pop
in
jge
rcl
sar
sbb
stos
sub
mov
retf
sbb
jl
xor
pop
mov
inc
jo
xchg
icebp
sbb
popa
jge
pop
cmp
(bad)
fsub
push
mov
sahf
in
out
dec
or
xchg
push
jmp
mov
add
data16
lock
mov
enter
jg
les
mov
add
pop
adc
jns
lahf
inc
fdivr
test
imul
jl
in
shr
push
rol
jns
outs
rcl
inc
outs
cmps
in
mov
dec
shl
test
call
mov
sti
cmps
inc
mov
ds
or
mov
jmp
ds
hlt
xchg
adc
out
stc
iret
(bad)
aad
adc
mov
push
push
aad
mov
cwde
rcl
mov
mov
push
sbb
mov
mov
jmp
aaa
mov
push
ret
in
dec
imul
sbb
fdiv
push
cmc
cmp
jp
out
adc
pusha
mov
add
(bad)
fst
call
(bad)
int
daa
pop
mov
pop
pop
xchg
lds
cmp
or
sbb
mov
xor
mov
cwde
xor
pop
nop
sub
popa
or
test
jecxz
jmp
cmps
loope
ffreep
fisubr
test
mov
sub
imul
movs
mov
cs
das
in
sub
jbe
mov
inc
iret
pop
ror
jnp
into
sbb
pop
sti
pop
cs
lods
ror
ins
mov
in
rcr
ret
loope
aaa
mov
push
inc
mov
aas
or
xor
and
mov
and
std
add
xchg
add
pushf
retf
xchg
xor
and
pop
popf
shr
mov
not
inc
cmp
xchg
shl
mov
sub
push
mov
dec
pop
xor
jecxz
inc
addr16
scas
jl
xor
sti
mov
dec
aas
leave
pop
fstp
mov
sub
fistp
pop
fcmovnbe
test
add
iret
mov
sub
aad
out
add
js
push
(bad)
cmp
jo
fst
dec
into
loop
std
mov
pop
mov
shl
loopne
pop
xlat
cmp
jbe
inc
ins
sbb
fiadd
cwde
pop
inc
xchg
in
cmp
sbb
lock
add
xor
call
mov
in
and
push
push
call
call
test
xor
and
jb
and
sbb
mov
or
mov
or
pop
out
nop
in
or
add
xchg
sub
imul
or
xor
pushf
cmp
ret
dec
and
inc
sbb
mov
fild
neg
mov
push
int
mov
and
jp
cmp
jle
dec
or
je
(bad)
fmul
add
fistp
push
xlat
sbb
fidivr
ins
pop
outs
scas
or
int
jge
std
pop
mov
daa
arpl
neg
mov
mov
xchg
and
mov
jl
jbe
push
sbb
inc
pop
lock
lea
inc
(bad)
call
jmp
pop
dec
aas
cmps
scas
xchg
pop
fiadd
scas
xor
adc
jmp
mov
push
push
xchg
add
push
and
cmp
pop
call
sub
imul
imul
xchg
out
lock
out
add
xor
and
mov
xchg
seta
mov
add
sub
fwait
aas
neg
mov
into
scas
add
jb
mov
xor
mov
or
hlt
int3
fcomp
ficom
mov
and
push
jnp
adc
movs
arpl
jge
push
add
push
(bad)
jmp
les
add
add
add
mov
cmps
push
mov
mov
lock
cwde
jle
addr16
fisub
dec
les
adc
lea
pushf
pop
and
retf
rcr
movs
or
push
mov
mov
push
out
(bad)
cmps
stos
sub
stos
inc
or
test
mov
test
add
push
(bad)
jmp
(bad)
(bad)
(bad)
inc
add
add
shr
adc
jge
(bad)
xchg
retf
cli
movs
mov
ret
gs
ret
mov
mov
popf
lock
sti
or
pop
adc
push
out
pop
fld
imul
rcl
fcom
adc
fisub
xor
out
or
add
imul
div
(bad)
push
into
push
in
jl
dec
lahf
loop
int
xchg
(bad)
mov
add
add
add
add
pop
cmp
pop
sahf
mov
sahf
mov
(bad)
cmp
fnstsw
aam
adc
mov
int
xchg
jl
pop
ins
cmp
iret
cmp
loopne
inc
inc
iret
addr16
xchg
sar
lea
mov
push
and
or
xor
retf
das
pop
pushf
(bad)
mov
sbb
push
enter
jecxz
and
sbb
fstp
int
test
test
out
shr
or
xor
rep
je
xor
pop
add
mov
not
and
dec
outs
xchg
add
jecxz
mov
mov
sub
fnop
bound
mov
cmps
add
outs
js
out
dec
call
mov
into
push
pop
mov
pop
dec
jae
pusha
aas
push
and
enter
adc
mov
imul
adc
jge
stc
js
loopne
xchg
lds
push
inc
mov
int
adc
mov
lock
jae
and
lods
and
pop
jae
pop
or
pop
out
fcomp
dec
std
enter
jle
pop
mov
movs
and
push
fcom
(bad)
ins
retf
pop
mov
lahf
and
inc
inc
retf
outs
add
lds
xchg
mov
pop
push
mov
(bad)
dec
pushf
dec
mov
sub
dec
pop
inc
hlt
dec
test
and
xchg
mov
fwait
test
push
push
clc
mov
dec
cmp
and
addr16
sbb
push
dec
cmp
add
hlt
das
push
xchg
(bad)
dec
(bad)
shl
or
test
je
(bad)
jmp
test
(bad)
mov
bound
mov
ret
gs
and
mov
pop
xor
inc
cmc
fcmovu
mov
inc
rcr
mov
cli
cmps
shr
out
(bad)
adc
sub
std
popa
(bad)
ds
stc
daa
iret
mov
add
ins
adc
js
mov
add
mov
or
sbb
adc
push
retf
add
mov
cmps
xor
dec
ins
xor
sub
and
call
lods
and
sub
arpl
xor
push
push
scas
xchg
repnz
sub
xlat
lahf
daa
pusha
mov
mov
imul
sub
lds
push
jo
dec
mov
add
sbb
xor
loop
and
push
int
lahf
cmps
pushf
hlt
cmp
arpl
inc
xor
xchg
(bad)
or
test
js
push
rcr
loope
push
jnp
push
pop
(bad)
cs
adc
gs
fwait
and
or
mov
imul
in
xchg
stc
stc
movs
fbstp
in
push
sub
xor
pop
mov
inc
xchg
sbb
iret
adc
xor
xor
stc
adc
adc
mov
pop
popf
movs
fs
adc
pop
sub
rcl
pop
sti
shr
xor
sbb
call
inc
dec
into
jno
fistp
add
xor
mov
scas
loope
sbb
stos
aas
shr
mov
repz
ss
pop
push
in
cmp
jle
in
pop
jle
in
pop
fld
mov
pop
clc
inc
cmp
mov
test
jo
fisttp
jecxz
xor
push
sbb
inc
lds
sub
pop
retf
jnp
lods
mov
out
fisubr
xchg
dec
pusha
aam
popf
pop
pop
and
mov
je
dec
loope
and
cmp
cmp
retf
pop
jo
iret
adc
cli
ret
out
repnz
test
dec
ins
or
enter
or
cli
hlt
jnp
nop
add
pusha
pop
lock
fsubr
mov
pop
and
fstp
int
clc
add
push
repz
sub
jae
pushf
retf
mov
stc
jl
pusha
add
adc
imul
mov
icebp
pop
stos
clc
movs
sahf
cld
sar
cmp
and
daa
es
popf
xor
push
(bad)
sbb
pop
or
(bad)
and
jns
mov
daa
lods
daa
xlat
adc
xchg
sub
pop
hlt
dec
mov
xor
ins
jmp
dec
push
xor
pushf
xchg
adc
dec
in
nop
loope
bound
pop
jmp
sub
mov
cmp
jecxz
inc
mov
ret
js
(bad)
ret
js
(bad)
ret
addr16
sbb
in
pop
bnd
cmovae
in
fcmovnbe
test
sti
rol
push
or
adc
mov
sub
xchg
dec
stos
push
ins
and
repz
stos
pop
das
jb
enter
clc
(bad)
push
push
adc
xchg
add
mov
popf
mov
push
fistp
pushf
jnp
mov
adc
call
jne
aas
inc
add
push
scas
(bad)
push
cmp
mov
push
call
stos
fwait
in
scas
xchg
add
ja
push
jecxz
(bad)
enter
out
jl
sub
push
push
fs
ja
stos
aaa
add
inc
ss
iret
movs
aaa
adc
in
pop
xchg
sti
cmp
sti
stc
mov
adc
jle
std
fs
dec
frstor
mov
aam
stc
inc
lea
mov
xchg
ins
adc
jl
popf
stos
jmp
es
js
cs
inc
dec
dec
push
jge
and
jp
cld
mov
arpl
mov
mov
dec
jg
sub
lds
jl
imul
mov
fdiv
(bad)
pop
inc
jmp
lahf
xchg
xor
mov
xor
pusha
xchg
add
xchg
mov
or
mov
iret
inc
sbb
pop
dec
and
pop
out
out
int
sub
mov
(bad)
add
loopne
cmp
pop
iret
jecxz
imul
std
and
inc
inc
jae
jns
(bad)
mov
adc
pop
outs
loop
(bad)
stc
fstp
out
mov
test
out
jno
out
mov
fistp
and
xchg
bound
push
sub
arpl
and
dec
mov
adc
movs
or
fwait
push
push
pop
repz
push
and
cmps
call
push
repz
mov
sub
adc
mov
ficomp
out
sbb
xor
inc
in
mov
jle
and
retf
dec
add
xchg
(bad)
aas
push
ja
cmp
cmp
xor
fld
test
and
xchg
dec
xor
cmp
xchg
mov
les
out
retf
shl
or
std
in
stos
jp
mov
jae
sub
adc
neg
pop
(bad)
je
mov
cmps
inc
(bad)
sub
pop
pop
cmc
jge
mov
lds
mov
xlat
and
jns
jle
pop
into
mov
faddp
outs
mov
mov
daa
shr
pusha
add
test
xchg
lods
movs
jp
adc
aas
ret
push
fcmove
jge
les
div
push
cmp
pop
cld
mov
jp
and
fdivr
sbb
or
xor
add
mov
(bad)
data16
mov
inc
gs
shl
or
cld
and
dec
push
aaa
mov
aad
xor
mov
ins
or
cmp
sahf
push
sub
data16
mov
jo
inc
stos
int
rcl
mov
push
cmp
push
xor
mov
int
cmp
rcr
loop
in
inc
inc
cmp
pop
xchg
or
test
jp
and
stos
mov
retf
sbb
and
jno
push
sbb
add
inc
push
test
inc
add
ret
or
mov
jmp
cli
cmc
sub
lds
lods
fnsave
adc
pusha
jg
in
inc
inc
out
fwait
mov
pop
and
cmovb
stos
mov
fcmovu
push
(bad)
xchg
add
pusha
ds
dec
mov
adc
cmp
sub
retf
sub
cli
pop
inc
jle
fs
pop
add
mov
xor
sbb
out
mov
inc
push
test
or
inc
cld
pop
in
test
int3
mov
test
mov
mov
push
sahf
and
inc
mov
arpl
xchg
or
rep
out
ror
mul
push
call
and
test
xor
mov
xlat
adc
jle
aas
push
in
dec
jmp
mov
sub
lea
cmps
leave
mov
cmp
jle
stos
(bad)
cdq
pop
nop
fld
mov
push
mov
in
push
out
aaa
cli
xor
fmul
fld
inc
push
stc
retf
outs
xchg
imul
adc
xchg
icebp
dec
call
cmps
jg
retf
stos
imul
xor
cmc
xchg
and
inc
out
mov
xor
mov
sahf
push
in
loopne
cld
xchg
sbb
(bad)
(bad)
dec
cmp
add
jnp
push
mov
xchg
xor
jmp
push
cmp
call
push
jnp
lahf
push
mov
lods
add
adc
nop
pop
jb
pop
cmps
out
inc
outs
pop
ror
jo
sbb
mov
mov
push
xor
nop
cmps
fild
aas
call
cld
daa
push
pop
test
adc
aam
bound
(bad)
call
sti
(bad)
call
sub
xchg
cmp
sbb
adc
in
mov
inc
cmp
fistp
pop
call
(bad)
mov
das
xchg
leave
aam
mov
ins
cli
sub
cmp
push
push
add
call
mov
push
mov
mov
pop
mov
js
ins
inc
mov
cld
adc
xchg
repnz
or
mov
out
mov
xchg
inc
cwde
xchg
jno
aaa
imul
clc
cmp
cs
fs
call
leave
push
add
lods
mov
inc
fistp
not
pop
mov
sti
add
adc
mov
mov
mov
add
and
bound
addr16
mov
inc
mov
mov
jg
ret
jns
aam
sub
lods
and
out
mov
pop
lods
data16
xor
xchg
movs
lock
push
and
jbe
stc
mov
sub
sub
mov
(bad)
pop
mov
jne
and
pop
into
test
cmps
fcomp
out
jp
mov
outs
pop
ds
inc
cmp
clc
rcr
mov
adc
test
and
movs
call
js
or
(bad)
inc
out
dec
add
vandps
scas
rol
pop
lods
mov
push
mov
pusha
(bad)
loopne
aad
or
mov
dec
pushf
aam
popf
mov
pusha
mov
jae
movs
fld
sub
(bad)
mov
fcmovu
out
outs
adc
pop
pop
or
inc
adc
dec
and
movs
or
and
mov
pop
push
repz
(bad)
jl
mov
xchg
mul
sub
jl
mov
xor
and
push
mov
inc
xor
cli
jnp
xor
ins
xchg
xor
in
xor
shl
mov
or
xor
ret
ret
pushf
push
cmp
(bad)
imul
jno
inc
mov
mov
cmp
dec
aad
xchg
dec
psadbw
mov
jle
inc
xchg
and
sub
mov
cwde
dec
repnz
jecxz
push
inc
or
(bad)
call
leave
retf
mov
ja
lahf
cs
xor
in
push
add
jae
adc
cmp
outs
call
xchg
cmc
push
mov
push
call
jnp
(bad)
fwait
loop
push
in
rol
dec
pop
inc
jle
pushf
and
mov
sbb
mov
iret
into
inc
xchg
fld
stos
int
xchg
sbb
into
shr
push
pop
inc
es
adc
lea
xlat
adc
loop
inc
jo
cs
jo
ror
jmp
dec
movs
das
retf
adc
fisubr
mov
fs
push
sar
sub
out
mov
xchg
aas
cmovnp
push
arpl
ja
dec
xchg
pushw
and
in
cmp
xor
mov
imul
jb
jb
cld
xchg
xor
movs
add
mov
shr
sub
or
scas
fcomp
retf
jge
(bad)
cmp
jo
or
shl
pop
push
arpl
dec
lock
aas
jo
out
sbb
or
jmp
into
cli
inc
fidiv
inc
mov
jmp
jle
inc
sub
dec
pusha
popf
inc
arpl
xlat
xor
add
or
xchg
mov
xor
sub
popf
xchg
add
(bad)
adc
in
jmp
in
jle
inc
jle
mov
dec
pop
inc
leave
push
leave
mov
push
jl
add
loop
leave
inc
add
xchg
cwd
lds
xchg
ja
jl
adc
sahf
jno
(bad)
in
jo
mov
adc
or
jns
out
adc
rol
mov
cmc
(bad)
push
push
retf
ins
movs
ror
xor
push
es
push
xor
jmp
or
out
repz
pop
out
nop
test
xchg
mov
loop
or
dec
clc
in
movs
cld
add
ret
in
lock
xor
fst
push
bound
push
mov
callw
xchg
jbe
xchg
mov
xor
pop
xchg
pop
imul
mov
fs
cmp
push
lods
adc
sub
inc
movs
fsub
data16
add
sub
mov
mov
xchg
movs
sbb
rcl
inc
int3
or
mov
dec
sub
push
ss
add
push
icebp
jecxz
js
cmp
mov
mov
add
repnz
aad
dec
call
leave
push
xchg
call
aaa
add
fist
popf
or
jbe
js
adc
adc
es
xchg
cmps
mov
imul
rol
ds
jecxz
lods
sub
add
or
idiv
xchg
mov
mov
sbb
cmps
xchg
mov
daa
ror
sbb
cld
dec
hlt
mov
test
mov
aad
loop
xchg
cmp
push
push
test
stos
pop
sahf
lahf
mov
stos
mov
(bad)
ins
dec
dec
cmp
mov
rcr
push
push
aas
xchg
lock
sbb
mov
mov
shl
pop
push
xor
cmp
test
add
sbb
mov
ss
xor
loop
stos
stos
xchg
jno
jp
cmps
int3
in
aas
sub
xchg
scas
sbb
ins
movs
cs
cmp
jmp
sub
stos
xor
dec
adc
pop
std
rcl
xchg
pop
xchg
push
sub
fistp
and
test
and
repz
arpl
dec
push
push
xlat
pop
ret
bound
loopne
scas
scas
fisub
push
jmp
rol
call
and
xchg
repz
daa
clc
fstp
jns
push
ret
mov
dec
lock
dec
mov
pop
and
popf
fst
push
add
not
adc
sahf
rcl
and
inc
push
imul
mov
jmp
mov
pop
ins
pop
jo
(bad)
int3
loope
repz
sti
push
mov
mov
add
arpl
stos
fisub
jl
sbb
dec
or
cmps
hlt
loop
shl
aaa
cwde
add
jmp
pop
push
pusha
cmp
fs
cdq
pop
mov
pusha
pop
jge
dec
retf
push
test
jle
outs
icebp
adc
movs
test
mov
daa
mov
sub
adc
push
and
pop
and
iret
pop
jecxz
xor
jno
mov
ror
outs
leave
aam
les
fistp
(bad)
mov
les
dec
pop
jae
ins
(bad)
repz
xor
ja
leave
mov
jno
jnp
jno
loop
test
mov
(bad)
push
mov
rcr
pop
dec
pop
mov
or
inc
aam
dec
idiv
and
ss
hlt
inc
xchg
movs
sbb
and
into
jne
or
daa
mov
push
fisttp
xchg
or
or
add
mov
sub
lds
(bad)
retf
jo
adc
cwde
adc
and
aad
arpl
and
mov
sbb
mov
jecxz
hlt
mov
cmp
sti
in
xchg
jle
stos
inc
addr16
xchg
sbb
jmp
jmp
jae
xchg
fld
jne
out
push
aaa
mov
in
(bad)
ficom
lea
mov
out
in
cmp
pop
cmp
adc
jg
inc
pop
aad
adc
cmp
lds
adc
cmps
adc
push
push
sub
jp
(bad)
mov
fsub
ret
xchg
mov
add
aas
and
enter
or
mov
mov
fwait
je
iret
ss
int
enter
jo
mov
mov
neg
xchg
or
sbb
mov
adc
in
or
mov
enter
test
sbb
jns
das
jecxz
int
addr16
mov
dec
movs
and
mov
jecxz
in
in
and
cmp
mov
test
mov
imul
(bad)
push
retf
in
lea
xor
(bad)
cmp
adc
test
push
xchg
sbb
imul
repz
fst
outs
cmps
xchg
xor
in
xchg
sub
xlat
hlt
into
sbb
mov
mov
dec
sbb
rol
or
pop
imul
jecxz
jmp
cmp
sbb
sti
or
les
jg
xor
or
fisubr
addr16
cmp
mov
mov
dec
sub
cmp
push
test
or
push
mov
cs
and
sbb
push
mov
call
pop
test
aas
imul
mov
sbb
into
mov
data16
hlt
xor
es
aam
popa
jmp
sub
add
aad
push
xchg
mov
mov
sar
mov
and
loope
gs
pusha
inc
mov
inc
sbb
xor
out
xchg
jle
retf
aas
mov
mov
adc
retf
aam
sbb
or
dec
sub
cmp
sub
cmps
repz
sbb
scas
shl
pop
pop
call
xchg
ret
repz
add
das
push
or
pop
(bad)
(bad)
rcl
movs
inc
cmp
cmp
cmc
fst
jno
or
and
mov
fistp
pop
push
inc
cmps
sbb
repnz
fwait
pop
dec
inc
fs
add
push
das
pop
shl
sbb
push
jle
jmp
sub
mov
add
jne
sbb
jge
cmps
xlat
pop
mov
loopne
jl
push
inc
ins
push
add
pop
push
jne
enter
cmps
stos
dec
inc
mov
lods
or
lea
fwait
inc
mov
dec
cld
xchg
icebp
cmp
outs
jl
sub
aad
mov
sbb
int
leave
inc
cmc
sbb
mov
out
ret
dec
dec
pusha
nop
stc
jmp
ins
inc
xor
rol
xchg
pop
arpl
inc
ja
mov
inc
aad
sbb
xchg
lods
jl
dec
pop
fisttp
jle
adc
inc
jno
push
or
or
mov
les
or
mov
xor
fwait
lods
stc
test
mov
adc
adc
push
and
sub
ds
and
pop
rcl
icebp
ss
pop
xchg
dec
cld
or
jmp
mov
test
dec
xchg
or
jo
push
jmp
dec
xor
lods
call
arpl
adc
mov
mov
sti
(bad)
fild
dec
jg
les
push
cs
test
test
ins
sub
mov
dec
int3
loope
cwde
sar
call
cli
retf
mov
cmp
xchg
or
jno
test
pop
sub
mov
or
cdq
ss
icebp
sub
mov
ins
push
mov
(bad)
push
stc
in
cmp
inc
jg
jb
(bad)
mov
fistp
int
sar
xchg
and
pop
outs
mov
dec
hlt
pushf
sub
retf
aad
pop
adc
movs
fimul
pop
inc
lea
or
sbb
cmp
das
jae
and
sbb
outs
and
jl
mov
jmp
pop
dec
xor
add
jl
aam
sbb
dec
pop
ss
sbb
and
aaa
call
push
xchg
inc
push
xchg
stos
dec
mov
xchg
test
cmp
retf
or
stc
(bad)
shl
jne
mov
cmp
xchg
(bad)
fld
dec
(bad)
xchg
xor
bnd
mov
cld
jmp
adc
mov
imul
ja
inc
dec
(bad)
xlat
jle
mov
add
mov
retf
scas
mov
adc
dec
xor
ds
jns
mov
in
rol
xchg
rcl
not
fiadd
add
fwait
or
js
ficom
cld
mul
push
out
sbb
inc
or
fstp
scas
mov
fs
fsubr
test
mov
rcr
sbb
or
jo
sbb
xchg
inc
ds
mov
out
test
loope
or
sbb
(bad)
cs
sub
pop
ret
movs
push
(bad)
jo
or
inc
xor
mov
mov
shl
test
repnz
pop
jb
dec
rcr
xchg
loopne
ret
xchg
ja
pop
and
jnp
push
adc
div
and
ja
ss
fcomp
(bad)
xor
xchg
loop
call
loopne
in
ja
inc
and
idiv
pop
sbb
mov
jne
push
and
and
adc
inc
dec
cmps
adc
sub
nop
pop
add
cli
(bad)
jb
sar
call
lods
outs
push
fs
inc
(bad)
mov
push
(bad)
xchg
inc
popf
int
cmp
rol
mov
sar
out
add
xchg
int3
test
adc
js
ret
inc
es
mov
repnz
scas
out
cmp
cmp
rcr
mov
ret
mov
push
add
lock
mov
or
ret
out
scas
mov
neg
nop
mov
out
xchg
test
ds
pop
adc
je
iret
cmp
loope
push
jge
bound
jge
lods
sub
sahf
or
and
stos
frndint
inc
(bad)
retf
lods
pop
jl
cmp
push
sub
adc
jg
out
clc
mov
push
stc
repz
jnp
push
lahf
pusha
fdivr
fidivr
adc
scas
leave
pop
ja
(bad)
xchg
shr
mov
mov
(bad)
(bad)
(bad)
and
mov
dec
add
movs
idiv
(bad)
fcom
sbb
mov
push
cs
jae
cli
pop
jge
jns
mov
pop
ret
cmps
xchg
pop
test
lock
in
mov
and
xchg
mov
jle
rol
jl
enter
mov
mov
repnz
nop
pop
jecxz
or
dec
mov
mov
aaa
out
loopne
rcl
dec
clc
push
fisttp
xor
fst
fidiv
mov
scas
stos
sbb
inc
sbb
mov
and
xor
popa
xchg
dec
in
and
out
and
lock
fiadd
ret
mov
out
dec
test
pop
or
or
rcl
pop
pop
pop
jbe
popf
dec
leave
adc
call
inc
jnp
ins
jnp
jo
or
lods
jns
dec
call
mov
and
andps
or
mov
mov
lahf
(bad)
nop
push
sub
xchg
jl
ins
xchg
into
xchg
(bad)
cmps
pop
out
adc
cmps
mov
jg
nop
std
xchg
or
cmp
outs
sbb
stos
out
(bad)
fldpi
int
pusha
(bad)
cmc
pop
fidiv
adc
xchg
popf
mov
inc
adc
and
mov
adc
mov
add
ja
jmp
outs
test
test
out
pop
fimul
or
jp
repz
popa
dec
push
mov
leave
cli
jg
adc
adc
test
mov
out
mov
sbb
dec
call
ja
fdivr
ror
xor
lahf
(bad)
cmc
int3
cmps
or
push
or
ins
pusha
cld
mov
xor
and
test
mov
lahf
aad
dec
mov
mov
sbb
xchg
mov
jmp
(bad)
xor
rcl
ds
popa
lock
xor
cmp
cmp
inc
mov
gs
shl
inc
sti
mov
jmp
gs
pop
cmp
mov
outs
adc
out
inc
pop
je
cmp
out
lahf
add
mov
adc
xor
bound
not
pop
cmp
or
pusha
mov
retf
inc
out
ja
addr16
(bad)
aas
(bad)
in
jle
test
cmp
and
fst
in
push
inc
shl
ins
push
jae
dec
aas
cmp
add
mov
addr16
push
aam
cmp
jl
add
cmp
mov
int3
cld
nop
or
les
mov
dec
add
loop
ret
sub
nop
mov
sbb
add
retf
adc
int3
es
pop
mov
pop
(bad)
call
dec
cdq
mov
pushf
stc
cmps
or
nop
cs
mov
fisttp
mov
gs
out
test
jg
fbstp
sbb
pop
neg
clc
fnstenv
in
or
mov
stc
call
arpl
jecxz
movs
mov
xor
les
aam
mov
mul
int3
scas
nop
mov
push
mov
jns
dec
xor
fidivr
outs
push
ds
cmps
(bad)
(bad)
lods
mov
outs
cwde
mov
jl
aad
(bad)
jnp
pop
in
push
mov
xor
loopne
adc
inc
(bad)
jae
pop
dec
push
test
xchg
or
rol
sbb
scas
pop
es
mov
mov
idiv
hlt
lahf
pop
xchg
sub
pop
cli
mov
jg
aaa
jne
pop
es
jnp
xchg
pop
sub
ins
andnps
inc
mov
fcom
aam
cmps
fstp
inc
mov
xchg
push
add
aaa
pushf
int3
add
push
mov
jae
bound
enter
arpl
mov
sahf
sub
and
out
mov
test
outs
or
xlat
and
fisttp
add
xor
pop
push
imul
sub
ja
xor
(bad)
rcr
scas
retf
fstp
out
stos
or
repz
sub
clc
rcl
adc
sub
sti
loop
(bad)
lods
das
jns
jg
xor
jmp
xchg
add
jg
xchg
popfw
mov
add
enter
push
ins
cwde
xor
inc
gs
xor
dec
push
cmps
daa
scas
iret
dec
rcl
in
stos
test
rol
out
jno
pop
add
popa
inc
mov
fs
pop
and
lds
inc
xor
inc
cmp
mov
xchg
mov
cld
cmps
enter
adc
scas
int
(bad)
mov
das
xor
movs
aam
mov
mov
or
ja
mov
int
inc
sbb
mov
lea
in
sahf
mov
leave
pop
cmp
pop
push
addr16
out
call
dec
dec
adc
and
xor
ins
mov
mov
push
icebp
add
cs
int
jl
ret
push
loop
icebp
hlt
shr
pop
cs
push
adc
shr
es
pusha
adc
cmps
icebp
fdivp
inc
leave
inc
fwait
lods
jbe
arpl
mov
sti
addr16
sub
sub
gs
lods
xchg
xor
enter
jp
lods
js
push
mov
add
adc
loopne
add
ret
xor
xlat
xor
or
shr
mov
in
fadd
adc
adc
ret
xchg
and
lock
dec
aas
inc
cld
test
push
popa
pop
fcomip
retf
enter
les
sub
jl
dec
int
push
or
ins
mov
sbb
push
mov
mov
fnsave
cmp
jg
dec
scas
pushf
cmp
sar
mul
loop
xor
test
fwait
mov
xor
push
xchg
dec
into
mov
push
les
xchg
mov
pop
cwde
dec
aas
bound
or
jmp
mov
mov
fidivr
inc
fdivr
inc
fdiv
jle
sbb
mov
das
mov
mov
jne
dec
rcr
jmp
(bad)
dec
pop
mov
fcmovnb
fnstsw
dec
jmp
aaa
loop
(bad)
inc
mov
push
jbe
mov
es
cli
mov
and
out
push
stos
cmps
xchg
aaa
or
adc
and
inc
xlat
aam
mov
pop
xor
fild
and
loop
std
or
ds
inc
or
daa
rol
adc
add
pop
ret
test
leave
(bad)
inc
xor
cmp
ss
adc
leave
(bad)
pushf
fsubr
sub
pop
mov
or
sbb
dec
test
jmp
pop
lods
adc
push
or
aad
pop
dec
ret
(bad)
loopne
inc
inc
pushf
pushf
or
lods
push
test
fmul
cmps
loope
in
test
inc
add
push
xchg
mov
jle
dec
sbb
clc
mov
pop
fimul
xor
mov
inc
ret
pop
fst
sub
repz
cmps
aaa
les
das
jmp
fst
int3
ret
mov
add
repnz
aas
out
aaa
mov
aas
fist
adc
ds
or
aad
movs
rcl
dec
lea
and
ret
mov
mov
es
mov
adc
mov
repz
outs
in
cld
add
inc
sub
pushf
mov
aad
push
xor
pusha
outs
das
push
enter
movs
and
bound
ds
shl
mov
mov
pop
jo
sub
xor
sbb
cmp
lea
and
gs
into
dec
mov
sub
ds
(bad)
jnp
pop
and
pop
es
stos
retf
and
mov
xor
jne
and
scas
mov
pop
add
int
jge
out
sub
push
mov
or
cwde
lods
ss
mov
inc
loop
or
xor
(bad)
dec
sub
out
sbb
pop
push
dec
xor
mov
push
rol
and
sbb
fadd
mov
ins
fcom
enter
fidivr
clc
in
jp
jle
jo
lods
mov
adc
mov
mov
xchg
xlat
out
cli
add
test
and
mov
not
(bad)
jne
adc
push
leave
enter
inc
cmc
mov
sub
daa
imul
fisubr
test
xchg
mov
and
sbb
jecxz
add
cmps
aas
fidiv
sub
(bad)
fldpi
test
loope
rcr
ret
popa
dec
leave
mov
and
sti
scas
fwait
ret
xor
jecxz
sahf
test
sbb
mov
jmp
cli
xor
add
icebp
aad
shl
int3
bound
test
sbb
dec
adc
xor
mov
sbb
jno
fwait
(bad)
mov
pop
ret
mov
pop
das
xor
jno
inc
aam
push
outs
imul
cmp
dec
data16
sub
(bad)
push
mov
push
fldcw
outs
shr
mov
int3
pop
mov
outs
addr16
movs
jns
scas
fs
stc
test
and
push
and
pop
sar
push
bound
and
push
adc
xor
enter
clc
int
cdq
ret
outs
xchg
lods
mov
neg
ds
inc
cld
ret
adc
mov
mov
add
push
in
and
sub
pop
(bad)
xor
sti
stos
cmp
cmp
scas
add
xor
(bad)
movs
pop
pop
(bad)
(bad)
dec
es
shl
test
pop
repnz
mov
pop
arpl
scas
pop
(bad)
or
add
mov
add
pmaxub
xor
mov
lea
inc
jno
push
leave
fisttp
iret
xchg
mov
pop
jg
dec
stc
dec
loop
pop
jo
test
pop
imul
ins
dec
ins
adc
adc
(bad)
cmc
movs
mov
pop
pop
mov
sub
mul
dec
out
rcr
dec
add
mov
push
push
mov
movs
outs
xchg
adc
xor
adc
test
enter
rcl
test
xchg
bound
xor
mov
jne
ja
mov
pop
lods
movs
les
gs
cmp
and
inc
es
pop
pop
and
(bad)
popf
sub
push
cdq
stos
add
mov
test
cmp
sub
ror
add
je
loopne
js
sub
jb
loopne
jb
loopne
push
mov
push
mov
jmp
daa
push
push
pop
outs
ror
dec
mov
mov
leave
add
dec
loope
xor
bound
mov
loopne
lea
push
push
sbb
push
aaa
pop
jno
inc
hlt
pop
lahf
ds
xor
jl
stos
nop
and
sbb
pop
je
fimul
popa
daa
into
xor
fmul
(bad)
test
in
and
ds
stos
stos
in
sbb
fs
out
mov
mov
rol
pop
std
inc
mov
dec
rcl
jb
rcl
bound
push
pop
in
daa
mov
and
imul
aam
dec
mov
imul
jo
xor
outs
fwait
or
stc
add
add
test
pusha
and
stos
les
xor
ja
ficom
retf
pop
inc
repnz
es
out
(bad)
in
dec
repz
sbb
jbe
xchg
sbb
inc
sub
(bad)
(bad)
mov
jbe
sbb
shr
ins
or
mov
sub
xchg
dec
and
(bad)
cmc
xchg
jnp
ins
(bad)
push
cwde
js
cmp
sub
aaa
or
mov
mov
sub
adc
sub
cmp
fsubr
icebp
lock
push
xchg
in
sbb
cwde
(bad)
(bad)
jmp
retf
and
popf
fist
cmp
add
out
pusha
mov
jns
or
nop
push
xchg
inc
shr
leave
fidivr
test
icebp
(bad)
jno
mov
fadd
mov
sub
fld
(bad)
cmc
push
(bad)
cmp
sub
sub
fisttp
push
mov
cli
xchg
mov
xor
xchg
bound
sub
daa
xor
jg
mov
test
pop
scas
inc
jmp
inc
(bad)
repz
mov
not
sub
out
ret
mov
mov
cs
cmp
stos
mov
adc
test
clc
ds
or
and
cmp
sbb
xchg
test
and
cs
or
add
repz
jae
dec
ins
aam
or
ss
xor
je
dec
dec
mov
xchg
dec
add
xchg
repz
das
sub
cs
cld
addr16
pop
retf
shl
enter
das
pop
or
and
mov
xrelease
jmp
xor
cmc
cmp
mov
lock
fisttp
outs
xchg
xchg
adc
or
push
mov
das
jmp
popf
hlt
and
pop
stos
pusha
gs
add
rcl
xchg
(bad)
push
jmp
mov
cmps
inc
sub
inc
jno
ss
push
xchg
retf
popfw
(bad)
push
jno
xor
inc
out
imul
push
add
mov
fisttp
call
inc
out
cmps
dec
inc
jecxz
and
dec
mov
adc
(bad)
in
mov
xchg
scas
mov
adc
sti
jb
fidivr
mov
pop
in
sbb
inc
adc
push
xor
scas
or
rcl
xor
cmp
mov
iret
test
leave
pop
and
push
dec
add
pop
and
sahf
mov
mov
sti
xchg
scas
nop
inc
out
cld
xor
mov
pop
push
xchg
loope
ss
std
pop
push
push
add
sbb
movs
ja
lea
mov
fild
lods
sbb
adc
jmp
daa
xchg
xchg
fnstcw
adc
inc
cmp
sub
stc
sar
test
popa
in
jae
frstor
jb
mov
sub
sub
arpl
add
push
cmp
ror
mov
cdq
jmp
jae
lods
pop
pop
jmp
sub
or
jb
push
add
dec
mov
pop
xor
sar
sub
sbb
dec
mov
inc
add
shl
(bad)
push
jp
xchg
xor
ror
adc
test
jge
and
lock
jg
sub
dec
push
ins
nop
cmp
add
retf
jns
lea
jg
js
and
or
xor
pop
lahf
lds
inc
sahf
or
inc
in
fmulp
mov
mov
mov
sub
inc
popa
stos
add
test
rol
scas
das
push
repz
jp
sub
xor
in
test
mov
xchg
mov
sub
shl
pop
pop
jns
jle
clc
stos
(bad)
test
bound
je
pop
lods
outs
adc
push
or
mov
lock
hlt
movs
jno
outs
push
mov
fist
test
test
pushf
inc
out
adc
xor
fcomp
or
repz
lahf
jmp
ds
fild
cs
and
jnp
cmp
jno
pusha
push
cmc
and
dec
cmp
push
call
push
mov
das
neg
in
pop
pop
add
mov
cli
in
lods
push
push
mov
mov
int
jno
lods
dec
out
mov
lea
or
xchg
scas
(bad)
loope
repnz
xor
je
adc
cmc
rcr
test
mov
repnz
iret
sbb
(bad)
ror
push
push
xlat
xchg
ja
pop
or
movs
or
sbb
sbb
hlt
pop
push
out
mov
mov
push
inc
xchg
push
mov
sti
mov
push
mov
cmc
cld
pop
push
loope
jmp
(bad)
or
jno
cld
shr
add
pop
inc
sub
pop
mov
fiadd
cmp
sub
push
sub
and
out
push
inc
sahf
cmp
xchg
pushf
or
gs
mov
mov
and
jne
jbe
mov
fisub
aad
and
(bad)
outs
push
jl
xchg
test
scas
push
scas
cdq
xchg
mov
loope
inc
daa
xlat
xchg
inc
test
inc
and
cdq
outs
sbb
mov
dec
outs
shl
faddp
or
push
mov
sub
or
popa
repnz
sbb
scas
or
popa
(bad)
mov
popf
sbb
repz
adc
mov
ds
in
std
out
jle
data16
hlt
ror
enter
adc
ins
ret
jo
push
jle
movs
xor
cmp
mov
sub
dec
inc
vmovaps
repz
fild
(bad)
mov
or
nop
sahf
cld
jl
leave
dec
inc
jnp
sub
pop
pop
add
cmp
mov
popa
retf
dec
in
adc
sti
push
dec
lods
push
fsub
mov
mov
sub
add
nop
(bad)
(bad)
jo
mov
xlat
xor
sbb
fisubr
dec
push
jbe
cmps
das
xor
mov
mov
mov
loopne
xchg
inc
fs
jae
imul
enter
pop
add
xor
or
aas
cmp
aaa
rcl
scas
adc
xor
sbb
pop
xor
pop
icebp
xor
jne
mul
mov
jmp
push
das
rcr
mov
lahf
cdq
and
or
sbb
adc
dec
pop
call
ins
sbb
and
aaa
test
scas
je
pop
xchg
cwde
stos
rol
jge
xor
push
call
dec
scas
les
adc
cmps
daa
scas
jle
dec
enter
aaa
(bad)
das
mov
imul
(bad)
ud2
ds
mov
gs
sub
inc
inc
int3
sbb
adc
call
(bad)
adc
scas
xor
hlt
stos
hlt
mov
lods
and
sbb
fistp
jo
call
jbe
in
leave
jns
push
adc
and
ja
add
ret
call
or
cmps
or
repz
out
lds
movs
leave
push
mov
lods
mov
sbb
or
mov
add
push
icebp
std
add
jbe
push
shl
int3
scas
scas
addr16
and
push
ins
leave
sub
imul
mov
test
cmp
and
icebp
ins
xchg
or
cs
fsub
jbe
mov
into
mov
xchg
mov
push
sbb
pop
leave
data16
pop
and
jno
push
mov
xor
scas
(bad)
push
gs
sub
ds
fwait
add
dec
call
or
add
pop
aaa
fbld
push
loopne
mov
mov
or
stos
push
les
dec
aas
rcl
repnz
add
enter
fdiv
sahf
inc
inc
pushf
jg
stos
pop
mov
fld
xor
dec
sub
mov
inc
mov
sbb
shl
inc
inc
outs
pop
mov
rcl
adc
cmc
xchg
cmp
push
and
xor
stc
(bad)
aad
sahf
jmp
xor
jmp
cwde
xor
push
mov
sub
mov
lea
cli
iret
test
mov
adc
shr
repz
out
js
xchg
shl
pusha
pop
cmp
dec
push
push
jg
or
sub
pop
retf
loope
fld
retf
inc
sub
xchg
outs
jno
in
dec
imul
xchg
outs
or
je
gs
mov
and
fldenv
rcr
xchg
(bad)
aad
out
cmovae
push
repnz
cmps
sbb
xor
nop
bound
das
and
inc
dec
repz
mov
pop
jmp
push
dec
mov
cs
int
jp
or
ins
sar
popf
push
fsubr
mov
and
xor
jle
add
add
lods
xor
pop
ret
sub
ror
pop
sbb
ret
test
add
sar
aas
add
outs
dec
inc
and
retf
cdq
cld
push
outs
(bad)
dec
fist
push
and
and
mov
mov
test
inc
xor
jae
outs
jno
lods
mov
sahf
test
dec
test
mov
lock
xor
fld
push
outs
pop
inc
into
adc
ror
enter
pop
std
in
and
cmp
call
enter
fcomp
mov
cmps
out
jne
stc
mov
or
mov
adc
push
jnp
jnp
dec
mov
adc
scas
scas
sub
cmp
mov
outs
int
xchg
cld
cmp
cld
movs
lock
test
jbe
call
int3
call
jno
out
cs
or
daa
push
mov
push
das
mov
aas
data16
stc
pusha
sub
push
lea
add
cwde
pushf
retf
mov
aaa
retf
and
jge
int3
jmp
movs
dec
and
cmp
sbb
jno
cmp
pop
lock
sub
jge
out
add
les
push
pop
mov
push
sbb
push
(bad)
in
xor
cmp
adc
out
adc
movs
pop
ficom
shl
js
or
das
std
mov
jp
enter
retf
xchg
inc
xor
fs
and
pop
push
and
push
mov
dec
rcl
cmp
fimul
std
cmps
cmp
fstp
push
sbb
fs
lahf
test
sbb
fst
push
arpl
add
hlt
ins
cmp
adc
dec
or
dec
mov
aaa
sub
aam
mov
xor
jmp
add
fisttp
mov
dec
push
or
imul
cmp
aas
xchg
into
ins
or
in
mov
and
add
mov
add
push
adc
cli
sub
test
mov
sub
ret
sbb
mov
jbe
inc
mov
push
dec
mov
push
pop
test
mov
and
jmp
dec
inc
sbb
imul
pop
xor
mov
adc
test
or
ins
or
mov
pop
out
in
jo
xor
dec
or
test
dec
pop
mov
push
jns
xchg
mov
int3
inc
and
jmp
aam
add
ret
sub
adc
sub
push
push
jae
pop
ja
mov
leave
push
cmovae
js
dec
mov
bound
mov
rol
call
push
(bad)
sub
push
push
lods
inc
ficom
sbb
test
sar
mov
cli
out
push
popa
(bad)
(bad)
xchg
cmp
das
jno
pop
loop
add
dec
mov
sahf
mov
jl
inc
(bad)
sbb
inc
xlat
lods
js
and
nop
and
add
fist
xchg
add
dec
out
push
cdq
pop
cmps
movs
mov
fimul
nop
adc
jecxz
das
mov
mov
cmc
or
jl
xchg
daa
jnp
out
xchg
dec
clc
xchg
lahf
in
adc
mov
inc
sbb
dec
xor
fmulp
mov
mov
mov
sub
test
jb
add
jb
cmp
jnp
cli
daa
add
mov
pop
jne
add
lods
(bad)
xchg
dec
dec
cmp
xor
push
jnp
imul
jmp
dec
mov
jae
ins
jmp
pushf
add
retf
inc
inc
sbb
jle
sti
xor
lea
sub
repz
setns
fsub
dec
add
xchg
inc
ds
or
mov
pop
adc
aam
cld
sub
push
sbb
pop
push
test
lods
sbb
es
fsubr
mov
push
cmps
fimul
push
stc
stc
sbb
jb
pop
pop
pop
jns
cdq
adc
cmp
pop
rcl
adc
loope
in
jae
push
mov
xchg
pop
ins
les
add
(bad)
repnz
sub
push
pop
xor
loopne
iret
imul
dec
jns
and
(bad)
sahf
int
xchg
push
leave
ret
ja
fisttp
outs
call
xchg
add
ret
push
jmp
push
adc
xchg
call
xchg
add
add
add
add
add
add
add
add
jne
add
add
inc
add
add
or
adc
pop
movs
aaa
push
mov
mov
sub
and
mov
adc
lock
hlt
mov
lock
or
adc
out
imul
ins
(bad)
fs
aaa
(bad)
mov
dec
cwde
and
retf
mov
push
enter
icebp
(bad)
xchg
fldcw
imul
cmp
cmps
enter
test
xchg
cmp
fisubr
mov
jb
pushf
pop
pop
fwait
lock
jbe
icebp
int3
les
enter
sti
xor
cmp
imul
sbb
hlt
rol
call
push
ins
push
inc
mov
xor
test
mov
push
ror
add
sar
aaa
add
outs
daa
inc
ja
cmp
jge
or
mov
out
outs
sti
lahf
aam
add
popa
stos
mov
dec
ins
mov
repnz
or
aas
xchg
pop
iret
mov
pop
shr
xchg
stos
ja
clc
ss
jne
inc
loope
fmul
repz
sbb
in
shr
gs
sub
(bad)
and
ficomp
rol
inc
xchg
ficomp
(bad)
push
sub
loope
aas
cmp
pop
aas
jg
imul
cmp
scas
fisttp
fcomp
add
jo
push
or
mov
outs
int
cwde
call
dec
pop
sbb
dec
shl
ret
int
arpl
pop
jp
cmc
movs
rol
ror
push
cwde
fist
stos
mov
jmp
pop
in
add
(bad)
jmp
loopne
push
aas
dec
xlat
xchg
or
pusha
or
pop
sub
test
scas
push
jb
and
push
nop
adc
lds
or
cwde
lahf
out
sub
cmc
xor
or
std
push
sub
test
ret
or
xchg
add
stc
(bad)
retf
inc
shr
jnp
push
add
push
jae
mov
sub
add
xor
push
jmp
sbb
mov
add
pop
or
mov
push
call
dec
scas
dec
aaa
inc
inc
mov
clc
into
in
(bad)
mov
mov
rol
aad
nop
inc
retf
test
cld
pop
adc
fs
push
push
aas
sbb
sbb
push
imul
out
push
and
jl
mov
and
call
jmp
mov
jno
fistp
pop
sub
out
jbe
arpl
fcomip
xchg
pop
mov
(bad)
fsubr
xchg
pop
mov
cdq
(bad)
ret
fsubr
scas
test
xlat
hlt
in
clc
data16
sbb
hlt
cmp
push
fst
(bad)
jge
aad
call
mov
sbb
sti
(bad)
fisubr
es
outs
inc
or
or
adc
push
std
add
xlat
inc
popf
mov
inc
and
mov
inc
fnstsw
push
mov
enter
stc
int
fild
int
shr
neg
sbb
sbb
mov
es
movs
icebp
mov
icebp
mov
sbb
cmp
pop
adc
mov
out
repz
jg
mov
call
or
mov
inc
and
inc
xor
clc
enter
xor
into
pop
add
mov
dec
into
or
inc
aaa
inc
dec
les
mov
(bad)
cmp
inc
fs
inc
shl
mov
stos
cs
stos
add
cmc
dec
pop
repnz
or
shl
mov
mov
je
(bad)
fisub
scas
or
mov
enter
aas
xchg
or
out
xor
pop
sub
repz
adc
iret
(bad)
mov
lods
sbb
rcr
das
(bad)
and
cwde
mov
push
hlt
nop
or
gs
pop
mov
adc
(bad)
cmp
rcl
(bad)
outs
ss
jb
adc
xchg
xor
pop
dec
aad
pop
inc
mov
mov
cmps
jle
mov
pop
aas
lods
push
dec
les
pushf
ins
into
fs
arpl
lods
je
pop
cmp
(bad)
adc
call
xchg
xor
fiadd
in
imul
nop
jne
gs
xor
nop
push
pop
test
div
and
arpl
mov
lds
dec
test
cmp
fcmove
or
mov
aaa
mov
jae
imul
jge
xchg
xchg
jbe
inc
shl
inc
fdivr
loop
sub
ss
and
jbe
dec
inc
pop
stc
add
jle
outs
dec
js
sub
retf
jnp
cld
add
xchg
shl
mov
das
adc
sub
xchg
and
aaa
cdq
or
aaa
push
and
mov
in
retf
adc
scas
imul
cmps
out
in
jbe
push
adc
ss
mov
push
cmp
mov
sub
dec
inc
pop
mov
inc
and
call
jae
xchg
sbb
and
es
jl
jg
or
jge
imul
mov
push
movs
xchg
inc
add
or
adc
test
sar
or
and
cmp
lock
inc
cld
jmp
and
loope
cmps
lds
scas
pop
jne
fcom
jl
jnp
mov
repnz
and
or
inc
push
or
xor
push
push
ret
adc
mov
retf
call
inc
add
push
and
call
pop
lock
pop
push
add
gs
in
push
stc
adc
xor
xor
xor
pop
fimul
call
sbb
pop
fsubr
(bad)
or
pop
sbb
ins
mov
mov
jae
fdivp
xlat
mov
dec
rcr
div
pop
cmp
scas
js
shr
or
(bad)
shl
inc
mov
test
and
fist
repnz
mov
movs
or
sub
rol
(bad)
jl
cdq
in
(bad)
or
push
add
mov
and
rcr
loopne
popa
je
push
sub
mov
push
or
out
add
lea
mov
stos
cdq
mov
adc
data16
mov
xchg
repz
sbb
sti
mov
push
loop
sbb
sbb
and
retf
aaa
mov
add
(bad)
ins
repz
inc
mov
sbb
les
sti
(bad)
not
pop
pop
cdq
arpl
mov
jne
fmul
pushf
cmp
mov
jae
inc
and
popf
push
cmp
push
add
add
mov
push
sub
inc
outs
xchg
jb
adc
dec
cmp
sahf
pop
std
jge
cs
repz
fimul
out
repz
js
cmp
sbb
inc
fstp
(bad)
or
add
mov
jl
mov
xor
pushf
(bad)
jp
stos
sub
arpl
add
daa
pop
push
and
test
mov
push
std
add
xchg
push
xchg
and
dec
jne
xchg
repnz
pop
jne
or
in
pop
addr16
out
inc
aas
leave
fs
push
loopne
daa
rol
icebp
scas
mov
sub
jle
out
data16
sub
add
int
ret
lods
sub
fcmovbe
inc
sbb
popf
movs
icebp
adc
or
mov
mov
push
pop
mov
outs
xchg
cmps
mov
cmps
adc
mov
sbb
or
xchg
push
sub
mov
enter
hlt
loop
mov
loop
arpl
in
cmp
mov
aaa
cmps
rcl
ds
jp
leave
(bad)
icebp
dec
stos
mov
pop
cld
movs
imul
movs
mov
out
dec
leave
jl
rol
outs
inc
retf
fimul
push
cmp
push
push
mov
stos
push
mov
aam
ins
iret
addr16
imul
push
jno
xchg
pop
movs
lods
adc
mov
out
cmc
shl
out
je
arpl
xchg
and
leave
pushf
outs
out
test
cmp
popf
cs
and
ror
push
ret
mov
inc
sbb
cli
rcl
imul
test
xlat
lea
call
inc
in
pop
call
push
jae
leave
and
iret
sub
(bad)
jmp
repz
pop
pop
or
jns
mov
and
cmp
mov
lods
mov
mov
imul
in
mov
cmc
rcl
push
mov
mov
int3
in
sahf
inc
push
dec
out
pusha
xor
lods
mov
mov
outs
addr16
mov
popa
int3
sti
mov
add
add
inc
es
cs
and
ja
inc
xchg
cld
push
push
fdivr
call
hlt
call
sti
and
adc
fucomp
cli
icebp
cmps
lods
mov
rcr
(bad)
or
outs
popa
cwde
test
push
mov
adc
mov
add
push
cwde
ds
push
hlt
inc
loopne
ss
cdq
sub
push
into
outs
loope
xchg
adc
sahf
(bad)
out
adc
imul
jge
mov
inc
jg
and
xor
into
jmp
inc
popa
mov
or
pop
movs
aam
(bad)
dec
in
push
add
mov
in
rol
sub
push
aad
nop
out
cs
add
mov
and
xor
mov
cmp
ficom
or
xchg
ins
xchg
push
push
in
adc
out
xchg
pop
push
and
mov
xor
cmps
stos
repz
bound
or
sahf
jg
loop
lock
aam
push
outs
mov
xor
jns
xchg
bswap
inc
xchg
popa
cmps
cmc
(bad)
idiv
dec
lea
sub
dec
pop
pop
cmps
cmp
inc
fwait
aad
and
aaa
leave
inc
retf
fimul
add
or
loope
outs
das
push
or
out
sub
test
popa
aaa
or
mov
xor
jge
sbb
out
sbb
push
sar
mov
pop
fcompp
mov
out
sub
mov
jecxz
xchg
sub
mov
mov
daa
leave
aaa
inc
into
stos
mov
dec
mov
add
scas
pop
mov
jg
int3
push
pop
addr16
dec
ins
jmp
push
add
mov
cmp
ds
lods
sub
inc
clc
out
sbb
sub
bound
jns
in
out
test
push
xchg
mov
jae
int
or
rcl
(bad)
ss
adc
xor
ret
cld
add
pusha
into
inc
fwait
in
sub
aam
xchg
ror
test
mov
ret
iret
xor
xchg
adc
mov
jp
and
or
jp
das
aad
cmps
cli
(bad)
ins
xchg
jecxz
mov
push
push
cmps
dec
sub
cmp
loop
cwde
loopne
cmp
(bad)
aaa
nop
rcl
push
dec
fwait
jge
test
movs
hlt
mov
es
mov
cmp
xchg
sub
push
out
inc
test
fist
pusha
or
jno
pop
sub
xchg
add
pop
fsubr
jae
test
pushf
cdq
mov
or
sub
(bad)
xor
cmp
or
aas
mov
push
push
cmp
lock
stos
mov
and
in
cmc
cdq
addr16
and
sbb
ret
xor
mov
pop
cmp
rol
fdivr
(bad)
sar
gs
ins
movs
aad
xor
mov
repz
jmp
mov
data16
push
fs
pop
dec
sti
dec
xchg
sub
in
xor
mov
xchg
jp
pop
in
sbb
shr
enter
pushf
and
call
stc
loopne
adc
ror
out
cdq
fwait
pusha
scas
arpl
or
pusha
out
xchg
mov
aam
adc
adc
push
cmc
mov
sub
xor
and
lods
cli
add
dec
in
xor
movs
lahf
push
out
(bad)
push
xlat
mov
cmp
aas
hlt
stos
movs
jl
in
mov
sub
enter
jbe
dec
stc
mov
cdq
pushf
push
inc
add
call
aad
dec
and
sub
xchg
fwait
lds
add
sub
movs
pushf
xchg
std
adc
popf
xor
mov
scas
xchg
retf
mov
mov
fs
sbb
in
lods
not
jb
mov
mov
push
sbb
sub
xchg
addr16
dec
xchg
mov
dec
and
cmp
or
aas
sti
repnz
mov
outs
push
and
repnz
cmovge
fsubrp
mov
mov
mov
xor
push
iret
ins
mov
push
push
loopne
shl
or
arpl
push
aam
dec
sub
fs
push
and
push
ror
shr
mov
out
rcl
fs
stos
inc
inc
fwait
xchg
mov
ins
mov
sbb
aas
adc
jno
sbb
sbb
push
and
repz
sbb
div
pop
and
lods
mov
inc
mov
iret
sbb
out
and
fcmovu
cmp
jbe
outs
aam
(bad)
cmp
pop
lods
xchg
push
inc
xor
inc
push
jp
sbb
fidivr
jecxz
or
js
mov
xor
xchg
and
fwait
(bad)
xchg
xchg
pushf
outs
and
ss
pop
pop
cmp
int3
dec
xlat
xor
repnz
cmp
test
or
inc
mov
outs
movs
outs
mov
test
cs
add
sti
mov
mov
inc
pop
push
pop
ret
arpl
mov
jae
inc
into
leave
ret
loop
loop
and
fnstenv
shl
stc
aaa
mov
and
mov
mov
pop
sbb
pop
mov
adc
push
adc
sbb
push
retf
popa
jle
cmps
(bad)
in
adc
neg
rcr
cmp
je
xor
dec
aad
dec
or
xchg
dec
ds
mov
dec
lea
or
mov
ja
adc
push
jnp
adc
sbb
cmp
xor
pop
test
mov
movs
or
enter
pop
ror
out
shl
adc
cmp
dec
xor
inc
js
push
pop
add
mov
push
or
aad
push
mov
mov
xchg
enter
in
sahf
ret
(bad)
add
pop
call
retf
add
in
cmp
pusha
jns
inc
adc
sub
bound
cld
ins
in
sti
sub
fadd
ins
ds
(bad)
daa
cld
or
dec
arpl
test
xor
push
pop
xchg
xor
out
add
ret
test
cmp
push
(bad)
xchg
ret
imul
xor
jmp
add
jge
es
push
into
out
cmps
int
out
ror
outs
imul
inc
mov
push
int3
call
cdq
fwait
outs
out
scas
fcmove
or
lods
jne
and
xchg
popa
jmp
(bad)
hlt
pusha
push
jge
inc
push
push
into
xor
pop
out
mov
daa
jmp
bound
mov
retf
push
out
push
loopne
mov
test
cwde
cmp
inc
neg
(bad)
call
and
mov
mov
dec
shr
fcmovnu
inc
mov
nop
and
and
xchg
mov
or
add
inc
and
test
test
adc
or
aaa
and
stos
mov
repnz
andps
pop
xchg
jecxz
jmp
jns
cmps
sbb
hlt
and
add
out
push
data16
xchg
loopne
sbb
xor
shl
dec
es
add
xchg
and
loopne
in
inc
mov
mov
sub
pop
ja
adc
test
(bad)
jns
loopne
into
mov
inc
and
xor
xchg
ins
jp
out
mov
adc
dec
cmp
push
pop
pop
inc
cdq
fidivr
sar
push
lods
ret
cld
xor
jl
jge
scas
in
mov
adc
mov
retf
test
mov
mov
aas
(bad)
cmc
mov
mov
push
call
push
aam
lods
mov
xchg
mov
not
cmc
and
mov
sbb
xchg
(bad)
jae
mov
adc
popa
and
cmp
repnz
test
cmps
call
stos
clc
mov
mov
ror
rcr
jl
jmp
loopne
cmp
jl
pop
add
push
jb
adc
xchg
pop
mov
or
pop
dec
add
xor
jmp
xchg
gs
imul
sbb
push
mov
outs
inc
popa
push
mov
gs
loope
xchg
inc
fmul
push
mov
or
sbb
and
ror
std
outs
xlat
jae
lahf
push
cld
gs
aad
out
fs
push
out
clc
or
and
pushf
jno
outs
mov
mov
dec
jb
(bad)
sub
pop
inc
gs
mov
mov
aaa
in
cmp
xor
jo
mov
dec
jo
pop
adc
push
rcr
aas
and
dec
loope
mov
test
push
sahf
stos
inc
pop
add
push
rcr
inc
or
xchg
jp
push
pop
mov
(bad)
clc
fisubr
cld
les
mov
mov
xchg
(bad)
sti
mov
jg
jmp
or
in
adc
mov
dec
ins
bound
xor
out
std
lds
lods
js
pop
inc
retf
fdiv
out
cmp
ret
inc
les
mov
mov
iret
and
pop
mov
mov
rol
jmp
mov
(bad)
lods
xchg
cli
neg
xor
mul
add
fstp
(bad)
in
pop
bnd
inc
lock
scas
(bad)
test
or
push
inc
xor
repnz
pop
mov
jnp
data16
and
cmp
loope
dec
std
sbb
dec
push
(bad)
pop
pusha
jmp
xor
sbb
lods
inc
or
mov
lods
inc
ret
jbe
sbb
mov
mov
loope
icebp
sub
sbb
test
mov
lods
(bad)
stc
shl
mov
lods
std
sub
mov
add
sbb
cmc
ficomp
shl
dec
dec
cld
add
mov
(bad)
push
cli
(bad)
cmp
push
inc
xchg
pop
nop
icebp
adc
cmp
push
call
stos
popa
fucom
push
jle
ss
test
rcr
add
jne
ins
sbb
inc
int3
add
mov
pop
push
out
sub
push
cmp
cld
nop
fnstcw
sub
sbb
mov
sub
arpl
push
shl
(bad)
mov
push
sub
push
add
xor
(bad)
mov
sbb
push
jmp
cdq
fisttp
mov
arpl
es
mov
mov
mov
(bad)
jmp
fmul
nop
push
stos
inc
add
cli
mov
mov
int3
xchg
inc
xlat
xor
ds
pop
jmp
out
cwde
test
lds
lods
fdivp
hlt
dec
lahf
xor
or
adc
maskmovq
div
es
les
sbb
cs
add
and
jle
pushf
ret
push
(bad)
loope
sub
and
mov
adc
ficom
cdq
pop
inc
imul
pop
jae
sbb
and
xchg
adc
js
mov
(bad)
adc
sbb
test
ds
pop
inc
mov
jl
pop
inc
and
dec
mov
cmp
push
mov
push
push
xchg
sub
lods
mov
xor
mov
sub
int3
sbb
jl
xchg
jmp
ja
pop
pop
aas
mov
mov
sub
sub
aas
daa
inc
inc
fs
pop
push
sub
daa
cmps
ss
push
cdq
(bad)
test
adc
mov
add
cmc
mov
out
aas
jecxz
jmp
xor
pop
ins
jecxz
pop
add
repz
mov
mov
(bad)
movs
adc
xchg
pop
pop
nop
mov
test
sbb
inc
fldenv
jne
inc
pop
cmps
dec
xor
jecxz
sbb
bound
xchg
jecxz
push
sub
les
xor
inc
pop
lahf
jne
add
inc
aas
sbb
mov
add
cmc
xor
sub
jo
or
xchg
imul
push
in
shl
and
mov
jmp
sub
adc
sub
sti
shl
mov
fstp
xor
sbb
dec
cmp
lds
fisubr
push
sub
or
fwait
shr
jecxz
xor
cwde
jo
(bad)
sar
ins
add
mov
pop
in
sub
out
pushf
jmp
ffreep
ja
mov
cmp
ins
fs
jle
popa
dec
ins
ror
mov
jl
std
mov
inc
cmps
das
les
adc
push
test
add
sti
loop
sahf
stc
xlat
jp
mov
outs
fwait
mov
retf
jecxz
dec
and
add
inc
and
js
inc
je
or
(bad)
push
shl
pop
mov
cmps
leave
cdq
mov
mov
in
or
adc
fucompp
(bad)
ins
pushf
cwde
pop
xchg
rcr
das
mov
pop
rcl
dec
clc
push
mov
out
inc
xchg
sub
inc
jmp
mov
or
addr16
in
pop
cmps
mov
iret
sub
mov
inc
movs
jbe
push
imul
fwait
push
(bad)
rcl
sahf
data16
adc
lods
mov
fistp
mov
dec
adc
in
movs
and
fsub
pop
pop
(bad)
push
push
(bad)
inc
sahf
hlt
imul
push
fs
push
add
clc
and
mov
add
outs
sti
and
out
ins
ins
scas
cmp
out
jne
push
inc
in
and
js
call
sbb
sar
out
and
bnd
or
mov
push
sbb
scas
sbb
daa
loopne
cmp
mov
cmps
ja
call
xchg
push
adc
leave
cmc
ins
int
xchg
not
enter
jno
scas
popf
push
sbb
jge
jo
sub
push
hlt
idiv
js
out
mov
aad
sub
in
cli
outs
jmp
mov
pop
push
inc
xchg
out
mov
jae
xlat
mov
mov
hlt
icebp
test
adc
jns
test
mov
jno
ins
in
cmp
xor
jle
ret
add
std
mov
iret
dec
xor
je
cmp
pop
pop
and
pusha
adc
cmp
xchg
loop
cdq
mov
and
dec
mov
and
xor
mov
pop
imul
(bad)
mov
pusha
add
and
rcr
push
inc
add
shl
leave
in
push
popa
inc
push
add
cmp
test
js
mov
ds
pop
scas
xor
push
sub
jge
ror
mul
in
(bad)
mov
jge
jmp
es
cmp
pop
je
inc
hlt
xor
outs
cmp
mov
nop
bound
inc
xlat
jecxz
pop
fwait
rol
je
fxtract
lea
lock
xor
dec
(bad)
mov
xlat
out
sbb
out
fst
addr16
add
sbb
fst
clc
and
jbe
adc
stos
jmp
xor
data16
rol
pop
xchg
sub
cmp
(bad)
cmp
aad
and
fmul
and
mov
inc
test
xchg
gs
push
push
ins
pusha
out
movs
(bad)
pop
cld
test
inc
mov
cwde
(bad)
ins
std
adc
mov
sub
xchg
fldcw
lea
es
pop
jecxz
pushf
ret
rcr
or
std
jle
sub
lods
xchg
cmp
pop
dec
inc
pop
pop
sbb
wrmsr
mov
sub
hlt
inc
push
mov
mov
sbb
stos
inc
mov
jmp
shl
and
scas
outs
loop
mov
pushf
xor
sbb
inc
iret
sbb
push
push
or
push
(bad)
lahf
sbb
mov
inc
cmps
cs
call
xchg
iret
inc
mov
out
mov
push
sti
add
inc
pop
gs
std
popa
push
ficom
out
xchg
mov
test
retf
icebp
xor
test
adc
mov
mov
xor
cmp
push
stc
jl
test
push
ja
fwait
test
out
movs
das
leave
in
jecxz
mov
or
pop
cdq
mov
add
imul
sbb
(bad)
push
call
add
mov
mov
jb
lods
xchg
cmp
jg
sub
pop
cmps
sub
ins
rol
mov
and
mov
dec
ins
test
mov
pushf
mov
out
or
outs
mov
adc
or
popa
pop
jbe
add
leave
lods
sbb
aad
in
pop
add
xchg
es
dec
scas
sub
(bad)
xchg
pop
int3
cmp
sbb
inc
push
out
cwde
(bad)
fadd
xchg
(bad)
je
daa
xchg
lea
call
inc
xchg
mov
fbstp
sahf
je
ins
daa
jne
(bad)
into
fcomip
push
sub
push
mov
mov
aam
sbb
sbb
add
(bad)
mov
ds
lahf
popf
fistp
inc
fwait
in
imul
or
ins
cmps
dec
popa
pop
out
fcom
mov
push
popf
es
push
xor
mov
push
int3
push
shl
(bad)
mov
and
daa
sub
push
or
test
lods
dec
dec
mov
inc
add
repz
mov
mov
ds
aam
dec
mov
add
mov
cmp
or
inc
or
sbb
pop
push
js
std
aam
add
into
pop
and
test
and
idiv
repnz
or
into
jmp
pop
sahf
call
mov
out
sub
ret
add
xchg
fidiv
dec
push
(bad)
push
dec
xchg
and
mov
daa
pop
popf
mov
mov
jo
imul
inc
mov
push
cdq
pop
fdiv
nop
xlat
inc
inc
and
lock
xor
dec
js
int
in
or
in
(bad)
inc
xor
inc
mov
std
mov
out
dec
fimul
or
fs
or
xchg
add
sub
ins
sub
lods
push
mov
add
scas
or
fisub
adc
jae
mov
sar
test
xchg
loope
(bad)
data16
call
or
xchg
dec
jl
pop
and
mov
inc
leave
jg
outs
add
jmp
ret
clc
(bad)
stos
mov
iret
cdq
lds
mov
shl
sub
xchg
jno
sbb
lock
pop
data16
(bad)
add
loope
or
push
mov
cs
lods
xchg
cmp
in
mov
dec
retf
sbb
adc
adc
cmps
sub
jp
sub
jno
mov
cmp
outs
mov
outs
aad
stc
(bad)
adc
sbb
cld
push
stos
push
xor
push
mov
cmp
(bad)
push
jl
fidivr
sub
or
dec
dec
push
push
aas
(bad)
cmp
icebp
cwde
sahf
inc
cmps
in
and
inc
adc
jne
pop
mov
cli
das
inc
adc
jecxz
xlat
pop
jp
inc
jne
xchg
fimul
pop
div
fidiv
test
xor
pop
gs
sar
pop
jl
sub
bnd
cmp
and
xlat
or
mov
inc
xchg
outs
(bad)
xchg
pop
cmp
cmp
or
clc
fistp
rcr
loope
or
leave
add
inc
inc
mov
iret
addr16
adc
mov
sub
ds
mov
(bad)
fucomi
and
push
mov
jmp
clc
call
adc
adc
call
dec
fsub
dec
sbb
push
xlat
xor
leave
int
mov
pop
inc
mov
loopne
sub
and
and
jbe
pusha
inc
std
inc
ror
xlat
ins
mov
xchg
inc
xor
mov
out
stos
xor
int3
jp
cmp
fwait
jns
mov
xchg
cmp
imul
js
pop
pop
les
pop
es
or
inc
push
(bad)
mov
adc
aas
and
cmp
aas
push
sbb
dec
out
add
mov
(bad)
(bad)
movs
out
stos
int
and
sbb
inc
arpl
inc
mov
push
jne
xchg
jne
mov
(bad)
jae
pop
dec
js
and
add
mov
mov
jbe
sub
ins
sub
jmp
jmp
call
xchg
or
jge
or
cs
xchg
pop
aam
xchg
lds
inc
xchg
lods
into
mov
cmp
mov
pop
mov
mov
movs
mov
sbb
xchg
mov
mov
jle
sbb
xor
into
repz
mov
in
hlt
lock
aam
add
call
jnp
fld
js
loop
retf
cmps
(bad)
cld
push
adc
adc
add
xchg
or
jns
or
int3
xchg
push
cwde
(bad)
mov
(bad)
mul
xchg
sub
add
scas
hlt
and
mov
gs
icebp
mov
xchg
mov
ffreep
repz
in
(bad)
or
dec
lds
push
sbb
cmp
js
sub
mov
packssdw
aas
cmp
inc
movs
aad
fadd
sbb
or
push
fwait
push
cmc
ret
das
ds
sbb
sub
mov
xor
in
adc
popf
cmp
mov
inc
push
in
inc
stos
push
fcom
sub
pop
arpl
ins
aam
mov
sub
push
push
xor
mov
outs
stos
scas
push
jp
inc
push
retf
jmp
cmps
cmp
jp
xchg
xor
add
nop
sbb
addr16
and
ss
std
cmp
mov
and
out
xor
adc
aas
mov
mov
into
pop
out
(bad)
or
ret
inc
push
and
(bad)
repz
popa
push
mov
push
mov
jnp
inc
add
xchg
adc
cmp
pop
dec
jmp
out
add
sbb
push
dec
aaa
dec
cmp
test
aas
fcom
fisub
mov
imul
jmp
fisub
les
jae
(bad)
test
dec
xor
sbb
int
push
dec
fdiv
push
jne
fcom
sahf
iret
pop
mov
cmp
fs
mov
lds
xor
mov
fdivr
lds
mov
adc
or
shr
dec
mov
rol
lods
push
movs
push
jnp
sub
jae
aam
in
lods
int
xchg
adc
cmps
pushf
fcom
movs
mov
enter
fs
imul
ins
stos
pop
fsub
sbb
outs
aaa
fnstsw
(bad)
rcr
out
sub
sahf
xchg
outs
retf
dec
xor
test
popa
pop
adc
jecxz
in
nop
mov
and
shl
es
and
int3
stc
mov
mov
shl
nop
ins
jne
mov
call
hlt
mov
pushf
inc
push
jnp
or
mov
xchg
in
mov
sub
hlt
jno
push
mov
push
call
adc
sbb
xchg
rcr
bnd
xlat
adc
and
inc
(bad)
enter
imul
cmp
repz
pop
adc
arpl
mov
mov
neg
push
pop
ins
cdq
jne
fdivr
into
fisubr
lock
xchg
mov
push
inc
jo
into
stos
call
test
cmp
pop
cmp
adc
fdivr
pop
pop
lock
aas
add
jbe
lahf
aas
or
arpl
call
je
adc
push
xchg
es
sahf
into
and
push
scas
xchg
imul
push
jo
loope
or
addr16
int3
aas
xchg
or
lahf
pop
into
and
clc
test
jmp
es
push
outs
xchg
push
shl
push
lock
in
push
pop
or
fisubr
mov
std
(bad)
dec
(bad)
dec
sbb
mov
mov
lods
sbb
sub
in
and
pop
fs
sbb
mov
call
and
out
lea
sub
and
cmp
push
ror
pop
rcr
pop
adc
popf
imul
call
std
adc
ins
std
(bad)
pop
or
add
mov
push
sar
lea
dec
jmp
js
daa
scas
jecxz
fwait
(bad)
aam
push
out
and
xchg
inc
sub
jbe
xchg
xor
dec
jecxz
in
mov
imul
xchg
cli
sbb
xchg
push
bound
shr
out
cmp
lock
fwait
repz
inc
popa
mov
rcl
xchg
sahf
(bad)
enter
ins
arpl
int3
inc
jmp
aas
cmp
jecxz
mov
or
xchg
std
ins
inc
adc
out
ja
mov
cli
xlat
pop
inc
dec
aad
fld
push
dec
(bad)
push
mov
sub
pop
jmp
jp
pop
stc
pop
imul
sub
pop
xchg
add
jmp
pop
xchg
xor
adc
xchg
nop
or
aas
(bad)
pop
xor
repz
sbb
movs
ficomp
push
fstp
pusha
das
push
iret
pop
out
lods
nop
or
sbb
inc
jae
jae
loopne
xor
fwait
inc
js
adc
xor
mov
add
shr
push
inc
xlat
(bad)
sub
xor
xor
retf
mov
sbb
sub
push
(bad)
push
sbb
mov
mov
bound
mov
out
sub
ins
jmp
arpl
test
pushf
(bad)
pop
mov
lahf
inc
push
jmp
stc
mov
cs
dec
cmp
jp
call
loop
xor
call
stos
cmp
cmp
icebp
nop
or
jmp
int
mov
cmp
mov
ret
mov
repz
(bad)
nop
js
mov
out
or
cdq
lods
or
imul
adc
clc
int
shl
jecxz
sbb
mov
push
fcmovnb
fs
lahf
not
inc
push
push
mov
jl
(bad)
fadd
aaa
ror
cdq
or
inc
mov
jge
xor
leave
pop
(bad)
fbld
jnp
loopne
xlat
pop
mov
test
xchg
icebp
mov
fisub
push
inc
sub
adc
mov
add
leave
push
js
aad
add
sub
mov
lods
xchg
enter
out
icebp
pop
sahf
(bad)
out
cmc
sbb
dec
or
push
xor
cld
sub
sbb
or
sbb
test
ins
aam
popa
dec
xchg
pop
cmps
and
int
(bad)
pop
mov
jmp
and
ins
jmp
(bad)
cmps
jmp
or
or
or
adc
xor
ja
popa
push
inc
mov
push
movs
fucomip
adc
in
mov
test
or
sub
dec
ins
in
sbb
mov
loopne
call
movs
xor
outs
ss
xchg
enter
test
cmc
loopne
xchg
xchg
sti
scas
push
addr16
xchg
leave
adc
inc
inc
jo
sbb
dec
mov
push
js
mov
sbb
ror
lods
mov
ins
cmp
gs
xchg
or
jle
xchg
addr16
dec
ret
or
stos
pop
dec
xchg
mov
fcmovnbe
jne
std
or
cld
out
and
xor
cmc
adc
ror
cmc
scas
in
and
or
(bad)
adc
inc
loop
test
sub
add
bound
lahf
inc
in
sahf
test
push
mov
icebp
xor
in
lgs
leave
cmp
jmp
cli
ret
bound
outs
and
or
lods
mov
aaa
clc
test
adc
push
xlat
inc
add
pop
mov
fidiv
fs
sub
(bad)
shr
call
cmps
cwde
scas
retf
mov
outs
inc
jecxz
pop
mov
shl
(bad)
shl
scas
in
pop
inc
pop
xchg
or
scas
mov
js
call
xchg
cs
cmps
jb
nop
dec
idiv
ins
xchg
in
in
(bad)
jmp
stos
add
xchg
and
bound
icebp
push
sar
(bad)
imul
neg
mov
clc
push
daa
arpl
hlt
jg
es
cmps
sub
pop
or
fcom
ja
hlt
xchg
fsubr
repz
pop
adc
mov
fdivr
push
push
ret
out
loop
mov
out
xor
mov
pop
jl
mov
push
mov
stos
cmc
(bad)
icebp
adc
jl
pop
push
(bad)
iret
push
pop
imul
push
ins
ins
adc
inc
aam
push
jmp
or
fst
dec
outs
shl
pop
mov
sub
and
lods
mov
add
jmp
movs
mov
fimul
test
inc
(bad)
jno
mov
call
test
repz
cmp
mov
out
sub
popf
dec
xchg
cmc
cmp
xor
or
outs
xor
das
and
aad
repz
mov
jecxz
stc
add
mov
or
out
pop
or
xor
jbe
dec
sub
add
fs
dec
popf
pop
cmp
fimul
mov
popf
dec
lds
xlat
pop
inc
jne
movs
cmc
inc
lea
dec
lods
mov
cmp
les
sbb
fisubr
pop
daa
test
xchg
mov
mov
stc
stos
jg
push
cs
mov
leave
and
add
mov
mov
dec
jb
stos
mov
inc
and
inc
fbld
les
xor
xchg
xchg
scas
pop
fdivr
inc
jmp
mov
outs
je
js
ins
int3
or
shr
out
(bad)
fiadd
mov
jmp
sbb
sbb
xchg
cmp
mov
retf
ficom
dec
popa
inc
(bad)
cwde
cmps
sub
pop
or
dec
neg
shl
movzx
dec
fidivr
push
call
loop
mov
in
xlat
sbb
mov
test
inc
outs
lds
into
mov
sbb
das
jo
(bad)
loop
sub
cdq
(bad)
retf
rcr
cld
xlat
inc
std
or
sub
retf
cmps
sahf
cwde
pushf
mov
xchg
push
addr16
inc
cld
sahf
in
in
inc
pop
adc
test
jnp
test
(bad)
or
and
xchg
call
pop
or
push
mov
pop
inc
cmp
and
mov
or
lahf
arpl
ins
arpl
mov
lods
cmp
ret
add
cmp
mov
in
dec
push
dec
push
mov
jbe
push
stos
jge
into
out
out
(bad)
stc
enter
pop
fst
sbb
xor
lock
mov
sar
xchg
mov
push
dec
add
bound
cmps
push
mov
iret
pop
xchg
out
pop
stos
mov
repnz
sbb
outs
loop
push
xor
pushf
movs
mov
mov
adc
pop
lods
into
dec
mov
(bad)
xor
jle
sbb
cmp
stos
xchg
mov
mov
aas
cmc
xor
mov
out
leave
push
loopne
adc
inc
fidiv
adc
mov
inc
popa
cmp
dec
stos
lahf
xchg
sub
pop
and
push
mov
jb
and
add
inc
dec
jno
data16
loopne
cdq
dec
xchg
xor
pop
fistp
pop
push
loopne
jge
call
add
sahf
enter
retf
add
mov
test
cmp
sbb
aad
push
loopne
inc
jmp
jp
mov
xor
xrelease
xchg
sti
jl
pop
add
inc
add
push
xchg
mov
pop
xor
enter
mov
jbe
call
inc
mov
xor
jmp
mov
fist
xor
fist
inc
mov
stc
cmc
cmc
jle
pusha
xchg
cmp
dec
sti
pop
popf
jo
or
std
jp
jge
dec
inc
stos
ret
inc
neg
sub
in
inc
inc
imul
pop
push
xor
add
jno
je
cld
add
push
or
sbb
push
dec
cli
push
cmp
in
cs
jmp
shr
neg
add
and
test
and
sub
jge
ret
outs
daa
int3
scas
data16
dec
cmp
jno
rcr
xchg
jg
in
push
jnp
addr16
jecxz
aaa
adc
repnz
dec
in
mov
add
mov
inc
inc
push
cmp
adc
loop
inc
push
mov
hlt
adc
add
enter
mov
sub
push
add
sbb
cmp
call
repz
aas
fwait
loop
mov
adc
xchg
add
sti
ret
sti
loop
or
lea
pop
(bad)
or
inc
clc
push
sbb
loope
(bad)
mov
xchg
inc
in
imul
in
mov
sbb
in
les
imul
cld
xchg
xor
fsubr
pop
ins
rcl
inc
repz
inc
or
mov
cmp
mov
add
fcmovb
push
ds
jl
adc
dec
addr16
or
retf
pusha
clc
enter
jae
xor
push
mov
hlt
or
scas
(bad)
loope
mov
fisttp
(bad)
xchg
test
test
mov
les
out
pusha
int
fwait
push
sti
mov
mov
inc
cwde
xchg
cs
xchg
vmovntps
stos
mov
xchg
cmp
push
into
jl
stc
shl
stos
call
fnstsw
stc
pop
dec
sti
fs
loope
inc
outs
stc
pop
and
and
(bad)
sbb
ja
push
sbb
xchg
lea
or
xchg
jp
mov
cmp
lods
xor
mov
jns
xchg
dec
adc
dec
jmp
frstor
pop
sbb
addr16
mov
pop
jnp
sub
jp
test
push
(bad)
push
ins
inc
dec
pop
mov
mov
pop
and
cwde
ins
icebp
push
repz
hlt
mov
mov
and
and
sbb
dec
rcr
mov
mov
fstp
cli
and
fs
xchg
xor
les
out
xor
ss
pop
and
xor
mov
lds
leave
add
sbb
pop
std
int
lea
mov
js
push
add
ja
out
add
adc
das
push
xor
xchg
frstor
popa
push
adc
mov
nop
cmps
stos
repz
mov
jmp
rcl
sub
mov
xlat
call
fdivrp
mov
or
shl
std
jle
adc
and
and
inc
cmp
sbb
ret
in
popf
clc
push
push
sub
sub
mov
xchg
call
leave
cmps
repz
aaa
and
dec
mov
xor
movs
push
sub
or
or
and
dec
ins
cmp
mov
jle
es
int3
fld
inc
loope
and
imul
int3
xchg
repnz
movs
push
loope
imul
ins
pusha
cmps
mov
inc
sahf
cld
cmc
cmp
clc
(bad)
imul
fs
pop
inc
sub
mov
sbb
loop
bound
jne
cmc
mov
push
call
adc
outs
add
adc
or
dec
bound
es
xchg
loopne
push
mov
jbe
push
mov
jl
sar
out
add
rol
push
jmp
inc
test
xchg
mul
mov
scas
cmp
stc
ret
cmc
(bad)
sbb
and
xchg
sub
clc
lahf
pop
push
(bad)
ss
mov
adc
in
dec
fstp
mov
arpl
and
sti
lds
scas
and
dec
clc
push
add
hlt
(bad)
mov
cmp
xchg
jmp
mov
cmps
sub
test
push
ins
sub
lahf
lods
not
ror
xor
movs
sbb
and
add
(bad)
sbb
mov
data16
jns
adc
push
cmp
xor
inc
in
xor
fsubr
xchg
mov
lods
jmp
fadd
cmps
fwait
pop
sbb
out
mov
out
scas
mov
fiadd
push
test
xchg
or
add
inc
or
out
(bad)
xchg
xchg
jge
outs
cmp
aas
pop
iret
pop
movs
sbb
adc
imul
inc
(bad)
cmp
jo
adc
inc
push
out
xchg
out
test
xlat
xor
imul
test
push
repz
test
into
bound
(bad)
repz
mov
std
or
loopne
call
sub
sar
leave
add
hlt
es
mov
jp
test
repz
scas
sub
inc
stc
mov
or
js
xor
cwde
retf
xor
pop
repz
inc
loopne
cmove
push
(bad)
mov
adc
pusha
ret
fcomi
pop
rcr
out
pop
push
cmp
cmp
(bad)
jmp
push
cmp
out
movs
in
div
loopne
and
mov
mov
adc
or
je
iret
push
fmul
out
icebp
out
lods
pushf
adc
repnz
inc
cmp
xchg
dec
sub
xor
loop
into
sbb
cmc
xchg
inc
sub
push
push
out
out
(bad)
jns
mov
mov
ret
and
mov
adc
adc
pop
hlt
xor
pop
retf
(bad)
call
cmps
dec
test
inc
mov
and
cmp
popa
lahf
xor
mov
aad
mov
xchg
nop
outs
push
cmp
stc
mov
lods
mov
stos
test
aaa
cmp
daa
arpl
popa
xchg
cmp
aam
gs
cmp
cmps
push
mov
or
lea
xor
xor
push
leave
data16
xchg
fs
not
stos
jmp
or
test
arpl
es
ins
push
aaa
jp
inc
out
(bad)
push
je
xchg
xor
popa
xor
out
retf
dec
iret
mov
cmp
xor
xchg
mov
mov
sub
lods
imul
xchg
(bad)
sub
es
call
mov
jns
or
inc
jne
out
sub
and
cmps
(bad)
mov
sbb
cmp
jmp
jns
sub
ja
cs
fst
push
sti
cdq
add
dec
out
std
aaa
gs
mov
lock
cdq
cs
in
(bad)
aam
(bad)
ds
dec
push
daa
icebp
outs
fcomp
movs
dec
outs
pop
cs
in
clc
(bad)
and
in
mov
imul
test
xlat
stc
mov
and
scas
jle
mov
sbb
push
jge
and
mov
pushf
xchg
push
rcr
mov
cs
cwde
test
inc
dec
mov
jmp
scas
lds
push
stc
add
add
js
xor
retf
lahf
pop
cmp
fcom
retf
cli
mov
pop
adc
jo
ins
adc
fs
inc
pop
out
push
push
adc
(bad)
aaa
jl
daa
nop
test
scas
or
push
jmp
adc
loope
shl
loop
lods
inc
pop
pop
cmovnp
mov
out
add
xchg
xchg
hlt
mov
xor
xor
dec
inc
sub
dec
nop
push
in
and
or
jg
dec
js
xchg
aam
fcmove
sbb
loopne
in
test
repz
mov
fidiv
(bad)
fmul
cmp
inc
adc
in
and
add
xor
mov
push
push
cmp
adc
add
in
mov
fld
jne
into
sbb
int3
add
mov
enter
dec
mov
gs
mov
ins
push
sub
lods
sbb
fwait
daa
cmp
mov
xor
or
mov
jp
xchg
cmp
lahf
pop
rcr
fptan
pop
out
adc
aas
std
sub
adc
ret
xor
scas
pushf
and
xchg
cmp
push
imul
add
pop
and
es
mov
call
dec
sub
mov
aaa
cwde
stc
cwde
or
mov
push
pop
je
rcr
pop
jle
(bad)
lds
jp
aam
jecxz
daa
push
cmp
mov
fwait
mov
and
cmp
xchg
stos
cmp
and
cwde
push
sar
test
mov
xchg
fnclex
in
and
jno
loope
inc
jmp
mov
mov
sbb
mov
in
sahf
bound
stos
pop
outs
movs
mov
mov
and
out
inc
xor
push
add
mov
rcr
push
shl
retf
xor
sbb
int3
cmp
outs
shl
xor
dec
sbb
mov
mov
xor
je
(bad)
and
adc
inc
or
jp
test
ins
test
scas
add
xchg
mov
mov
dec
sbb
mov
sbb
jae
push
and
fsubr
xor
loope
pop
popa
lds
and
cmp
push
xor
addr16
mov
jmp
cmp
daa
in
lods
or
js
shl
shl
inc
push
rcr
cmps
test
addr16
push
rcl
(bad)
fs
xchg
test
mov
repz
pop
loop
call
lds
sbb
pop
sahf
enter
enter
cmps
or
mov
jbe
popf
dec
xchg
add
pop
into
and
lods
inc
cdq
loopne
and
xor
ja
and
jbe
xor
out
and
call
fadd
xchg
std
or
ret
addr16
cmp
sbb
cwde
imul
mov
lea
sbb
ins
pusha
xchg
fadd
lods
or
call
jmp
ficomp
push
sar
jmp
adc
rcr
push
jle
cmp
push
adc
sbb
fs
xor
sbb
push
dec
adc
dec
fisub
movs
xchg
(bad)
fsubr
pusha
and
add
pusha
ins
push
(bad)
adc
jbe
(bad)
xchg
lds
or
xchg
dec
mov
pop
fwait
mov
push
out
add
mov
sub
std
mov
imul
dec
bound
mov
sbb
push
fwait
inc
inc
sbb
lods
pop
jl
stos
and
mov
test
push
jg
test
enter
jmp
lods
or
lock
push
fadd
jne
xor
push
not
push
(bad)
push
sbb
test
jno
inc
add
push
mov
cmp
sub
neg
jae
inc
int
push
imul
ins
or
sub
xchg
jnp
jmp
test
adc
mov
sub
and
adc
xchg
mov
dec
in
repnz
jno
sbb
push
or
and
test
fist
or
neg
mov
lahf
xchg
mov
or
xor
ret
cmp
mov
xchg
repnz
rol
adc
into
cdq
xor
scas
cld
inc
inc
xor
aaa
out
adc
sbb
scas
mov
enter
(bad)
test
inc
imul
mov
lods
mov
jle
loopne
dec
aaa
lea
or
cld
push
xchg
imul
mov
add
test
fwait
jmp
(bad)
jmp
imul
pop
enter
imul
xchg
push
icebp
mov
xchg
jb
movs
sar
in
jnp
pusha
jge
ins
popa
or
mov
mov
fcom
std
push
jnp
loopne
inc
lods
xor
pop
xchg
mov
sub
pop
mov
cmp
sti
cmp
jae
rol
jle
xchg
mov
retf
inc
xor
inc
adc
and
fnstcw
sbb
sbb
jo
imul
sub
jge
movs
pushf
inc
rcr
hlt
jmp
cmp
pop
repnz
add
inc
push
dec
rol
ret
shr
jmp
inc
push
xor
dec
cmp
ins
repz
scas
dec
push
add
pop
pop
sti
shl
sub
lock
pop
or
ins
pop
pop
inc
jo
or
ss
in
mov
hlt
cmps
jmp
mov
inc
add
cmc
mov
rcl
loop
dec
icebp
xor
pop
cmp
adc
fsub
shl
cmp
adc
jge
fild
inc
jmp
xchg
mov
ins
mov
arpl
jne
adc
sub
inc
mov
enter
mov
inc
dec
(bad)
dec
fisub
neg
mov
les
sbb
pop
dec
jle
xchg
push
test
adc
out
das
cmp
jb
mov
jb
xor
sub
mov
cmp
outs
or
ror
mov
lods
cmp
or
test
jg
xchg
(bad)
daa
aas
cmc
push
jmp
dec
in
pop
cmps
xchg
xchg
cmp
pop
adc
jl
mov
std
sahf
and
mov
arpl
daa
push
mov
mov
loop
inc
add
and
push
sbb
mov
add
int3
cmp
in
inc
test
jle
fs
dec
sub
outs
mov
xchg
fisub
rcl
jbe
mov
imul
mov
cmp
mov
pop
pop
gs
mov
lock
adc
gs
js
nop
jno
dec
scas
xchg
fsubr
loopne
movs
xchg
mov
cwde
jl
retf
dec
fcomp
xchg
and
or
cmps
push
mov
mov
cld
mov
(bad)
xor
ret
mov
pop
sub
sub
jne
add
jnp
repz
call
lock
imul
ret
push
imul
out
push
jg
daa
adc
and
xchg
xor
test
push
or
adc
movs
jbe
mov
jae
(bad)
(bad)
dec
mov
je
and
jl
xor
pop
cmp
cmp
(bad)
ss
into
(bad)
sub
add
arpl
cli
xchg
or
(bad)
ret
and
arpl
sub
retf
shr
jecxz
xchg
mov
movs
imul
mov
pop
retf
add
(bad)
popf
gs
in
xchg
fst
imul
mov
(bad)
and
adc
push
and
push
mov
mov
popf
and
iret
or
jo
sbb
adc
cmps
pop
xor
xchg
mov
hlt
mov
lea
pusha
(bad)
div
imul
data16
xchg
shl
imul
aad
loopne
iret
rep
daa
mov
lds
sbb
dec
retf
out
repnz
pop
retf
pop
shl
add
push
data16
jmp
xchg
stc
and
jb
mov
sub
test
mov
(bad)
mov
add
cli
cwde
pop
stos
out
jo
retf
out
xchg
sahf
dec
cmp
cmp
fcom
pusha
and
mov
mov
mov
les
cmp
out
pop
mov
mov
or
lds
jne
push
pop
jge
add
aad
sub
dec
pop
xor
sub
mov
aas
and
cwde
xor
dec
icebp
mov
(bad)
into
jno
test
cmp
mov
lea
test
xchg
lahf
dec
add
addr16
jg
int
dec
dec
pop
es
adc
adc
fisttp
xor
sub
pushf
pop
push
hlt
sbb
fucom
lods
(bad)
fnstenv
adc
dec
cwde
sub
(bad)
jmp
adc
jle
or
adc
mov
in
std
mov
mov
fs
mov
mov
loop
xchg
stos
fld
in
out
push
cmp
clc
jb
pop
mov
fcomp
mov
ja
shr
rcl
retf
mov
adc
inc
sub
and
fwait
ror
lea
mov
xor
pop
popa
bound
sub
es
jns
jmp
movs
out
pop
out
loope
mov
cmc
ja
cdq
lea
fidiv
cmp
cmp
sbb
ss
or
dec
sub
inc
push
(bad)
ss
mov
ret
jge
xchg
pop
xchg
push
pop
dec
popa
jns
add
jae
icebp
mov
or
adc
xchg
pop
iret
jecxz
jae
xchg
stc
popf
fadd
test
out
inc
stc
in
push
inc
jo
push
clc
mov
mov
cmp
push
mov
or
pusha
dec
test
inc
mov
ins
hlt
ret
(bad)
pop
pop
sbb
cdq
mov
sub
ret
out
jle
cmp
jmp
adc
mov
and
in
xor
out
xchg
test
dec
data16
ret
sbb
test
xchg
xor
gs
xor
nop
push
sti
xchg
mov
jno
sbb
iret
and
lock
jae
dec
loop
movs
lahf
xchg
pop
pop
out
test
sub
jnp
xchg
cmp
mov
jle
xchg
aaa
add
call
out
sbb
arpl
cdq
aad
ror
sti
jne
mov
pop
mov
aad
xor
mov
mov
outs
jmp
pop
int3
jae
mov
imul
and
cmp
sbb
and
rcr
cmps
(bad)
hlt
pop
sub
pop
pop
shl
adc
xor
bound
in
dec
inc
cmp
into
or
push
xor
mov
xchg
mov
inc
mov
add
sbb
test
jae
(bad)
xor
or
jp
outs
in
cs
sti
sub
shl
mov
lahf
retf
sub
stos
inc
mov
imul
pusha
sbb
mov
push
loop
stc
hlt
ficomp
jle
push
inc
cmps
adc
sub
sub
inc
mov
dec
lea
loop
xor
sbb
add
cmp
jp
retf
cmps
inc
scas
adc
mov
pop
call
outs
jmp
dec
ja
mov
arpl
mov
mov
sub
inc
mov
rcl
xchg
sbb
mov
and
jbe
pop
sub
fimul
call
xor
pop
movs
test
cli
mov
cmps
and
xchg
jle
adc
lods
ret
pop
xchg
sbb
hlt
(bad)
das
daa
scas
adc
pop
jae
inc
push
adc
pop
mov
jae
test
imul
inc
mov
xor
pop
test
ins
fadd
es
clc
daa
sbb
iretw
sti
cdq
out
lds
aam
cs
loop
(bad)
into
cmc
popa
add
mov
call
dec
rcl
aas
xchg
rcr
pop
pop
inc
pop
pop
add
popa
lea
mov
add
inc
add
xor
add
rcr
sbb
fcmovnu
sub
and
xchg
lock
leave
addr16
scas
jo
inc
sub
push
sub
xchg
call
outs
out
mov
aam
pop
add
leave
pop
xchg
xchg
clc
rcl
popa
fwait
bound
repz
stos
jmp
add
in
or
dec
add
lods
cli
inc
lahf
push
sahf
gs
dec
std
mov
dec
fsincos
cmp
pop
mov
stc
sub
(bad)
out
fst
pop
xchg
fucom
pop
(bad)
(bad)
mov
inc
data16
mov
or
xor
cmp
int
fisttp
dec
(bad)
sahf
repz
xchg
and
retf
inc
lods
push
pusha
sbb
xchg
and
and
pop
fnstcw
or
sbb
pop
xchg
cmps
jg
nop
in
dec
push
lahf
clc
mov
pop
pop
add
fcomi
mov
lock
xchg
lea
frstor
add
in
add
pop
adc
sbb
add
data16
inc
pop
loop
mov
fbld
push
pop
mov
pop
int
jmp
jne
rol
(bad)
das
mov
mov
cmp
xchg
int3
addr16
std
push
cmp
arpl
sbb
jmp
shl
or
adc
sub
lods
mov
push
jbe
xor
in
jns
mov
jmp
push
cli
inc
push
pushf
mov
fld
cmp
jb
sub
loope
aas
std
repnz
pop
clc
and
mov
ds
jmp
and
ds
out
xchg
dec
cmc
out
aad
xchg
ret
jl
dec
jge
push
mov
dec
sbb
call
call
jb
push
out
mov
ficomp
out
loop
mov
mov
dec
aad
push
mov
(bad)
and
cmc
or
mov
jae
inc
sbb
paddusw
ret
loope
arpl
iret
out
cwde
aam
jae
in
retf
lods
jno
arpl
ss
outs
mov
sbb
loope
mov
sub
jge
jno
je
sti
adc
sbb
mov
fs
cwde
or
mov
pop
loope
adc
and
sbb
loope
fnstenv
fisubr
pop
fsubr
outs
cmp
mov
data16
lods
sar
imul
mov
and
std
dec
cmp
addr16
movs
call
div
pop
push
dec
test
jle
rcr
pusha
dec
es
inc
leave
inc
jmp
sar
jge
icebp
retf
popa
mov
add
dec
add
cld
stc
pop
jb
jecxz
cmp
in
(bad)
mov
stos
lods
and
fcomp
push
or
xchg
dec
(bad)
jmp
fwait
jecxz
cmp
sbb
add
addr16
inc
inc
ds
hlt
push
adc
push
push
and
test
inc
ins
and
popf
inc
ror
or
repnz
aaa
or
push
in
pop
int
cli
mov
or
lods
sub
xchg
and
and
sti
stc
(bad)
mov
cmp
ret
and
pop
loopne
icebp
xor
jbe
ret
outs
jno
test
dec
adc
and
div
sbb
xor
mov
ret
jmp
push
addr16
outs
push
mov
push
or
inc
jge
xor
jne
jns
sbb
bound
xor
mov
out
cdq
test
and
xchg
lods
add
sub
push
pop
daa
cmp
test
cli
bswap
test
ds
pop
(bad)
mov
dec
cmp
fwait
into
call
mov
cmp
inc
inc
mov
mov
mov
cli
push
cmps
arpl
out
nop
jmp
push
inc
inc
mov
into
jmp
lahf
repnz
pop
inc
jb
sbb
pop
push
je
fwait
and
mov
push
push
push
pushf
ret
les
mov
mov
ret
pushf
or
adc
and
(bad)
mov
mov
test
jns
aaa
mov
dec
adc
stos
jno
add
jmp
mov
cmp
subps
xor
inc
sub
or
mov
push
popf
jp
not
(bad)
inc
push
xchg
lds
daa
sub
add
mov
jno
ror
cmps
cmp
icebp
lock
inc
test
pop
push
adc
xchg
mov
inc
std
mov
pop
dec
sub
test
cmp
push
dec
pop
test
gs
(bad)
fiadd
jbe
adc
adc
dec
aaa
push
cdq
xor
mov
xor
iret
bndstx
jo
mov
and
xchg
sub
ss
dec
cmp
ins
inc
or
adc
xchg
int
aas
or
add
or
push
adc
add
xor
jmp
jnp
add
cli
mov
mov
mov
add
jae
arpl
arpl
not
push
sbb
sub
loop
push
sub
dec
adc
cs
cmp
dec
push
scas
rol
jmp
jbe
xchg
push
scas
(bad)
cmp
or
xor
shl
push
(bad)
cmc
mov
mov
ins
sub
mov
movs
jno
xor
(bad)
cmp
cmp
imul
xchg
popa
outs
not
xor
pop
and
xor
cdq
lock
jmp
mov
mov
pop
test
push
inc
push
in
push
(bad)
ss
jge
nop
push
and
add
dec
outs
cmp
les
inc
cmps
jp
mov
xor
pop
in
mov
cmps
test
add
fs
push
test
push
lds
inc
xchg
mov
push
jae
xchg
xor
adc
fsub
jnp
movs
stos
neg
add
and
add
test
ins
outs
in
(bad)
(bad)
mov
jp
out
add
and
iret
loop
sahf
and
mov
jo
fst
aas
ds
je
xor
loopne
inc
jne
pusha
jge
stc
nop
loopne
popa
xchg
ror
out
cs
mov
jmp
dec
out
sbb
mov
test
xchg
push
mov
fimul
rcl
xor
add
dec
pop
fimul
adc
ins
fbstp
mov
dec
inc
cmp
lea
and
jbe
outs
mov
push
call
inc
sub
imul
mov
cmp
aad
not
xor
shr
in
ss
pop
add
neg
aas
lods
adc
inc
inc
ret
cmp
mov
in
adc
push
movs
push
arpl
gs
lea
xchg
cmp
out
call
and
xor
mov
fnstcw
leave
pop
mov
rcr
in
and
aad
and
fsubr
xor
ins
xchg
or
mov
cs
pop
xor
xchg
test
icebp
stos
outs
cwde
pop
sub
mov
retf
pop
mov
or
int3
xchg
pop
inc
pop
mov
loopne
(bad)
mov
je
jmp
out
inc
test
stos
addr16
out
cs
mov
cmps
rol
xor
iret
popa
sbb
mov
outs
in
xchg
jmp
dec
stc
jmp
in
popf
(bad)
add
stc
push
inc
push
loope
mov
sbb
jo
pushf
and
ins
(bad)
sar
push
xor
xor
xchg
out
or
mov
cvtps2pi
cmp
mov
into
cmc
push
push
cli
loop
push
arpl
out
sbb
or
xchg
ds
mov
pop
pop
inc
popf
pop
inc
test
push
mov
sub
push
push
sub
cmp
mov
call
mov
and
and
jae
pop
sub
cmp
aam
add
ss
xchg
in
outs
iret
loopne
loopne
dec
lds
ss
je
test
jp
xor
xchg
add
adc
xor
cmc
jge
mov
push
repz
adc
fucomp
fild
adc
mov
push
ss
lock
paddq
jmp
in
inc
ret
fcom
add
mov
adc
lea
mov
movs
mov
jns
sub
pusha
push
mov
mov
(bad)
clc
pcmpeqb
inc
stc
jmp
jecxz
fs
jge
inc
lock
cmp
adc
sahf
mov
xor
adc
imul
(bad)
xor
xor
das
in
push
mov
(bad)
xor
scas
jno
push
xchg
iret
inc
sub
sub
out
pusha
sbb
xor
retf
xlat
les
movs
adc
sub
jne
dec
xchg
push
fbld
call
sti
adc
xlat
cmp
addr16
and
ret
cmc
cmc
mov
pop
pop
xchg
xchg
mov
mov
out
inc
imul
out
gs
shl
cvtps2pi
popf
stos
jmp
cdq
xchg
in
outs
inc
inc
lahf
mov
(bad)
out
add
aaa
ret
int
and
repz
sbb
sub
add
das
sub
sub
js
xchg
in
mov
pop
pop
mov
lds
pop
ins
in
pop
adc
leave
rcr
cwde
(bad)
shl
retf
test
int
test
ins
jne
pop
or
and
icebp
add
pop
out
adc
inc
movs
clc
xchg
inc
push
jp
scas
mov
movs
shr
hlt
inc
add
test
xor
popa
dec
into
js
fdiv
adc
inc
pop
dec
jae
pop
xlat
pop
or
jmp
xor
(bad)
adc
jae
pop
jbe
movs
mov
(bad)
push
xchg
mov
jno
push
rdmsr
pop
cmp
push
xchg
outs
xor
pop
mov
push
nop
lahf
push
dec
es
inc
shl
movs
mov
shl
mov
mov
mov
mov
xor
jmp
stos
fdiv
dec
sub
or
add
js
sub
or
push
push
or
ja
cli
loopne
sar
into
shr
pop
fwait
sbb
scas
inc
cmp
sbb
fucom
add
mov
xchg
adc
mov
std
add
lods
in
rcl
jb
(bad)
pop
xor
dec
pop
inc
bound
add
mov
mov
loop
dec
sti
cs
jmp
ret
int
cmp
(bad)
(bad)
sti
es
gs
pushf
push
adc
sub
jecxz
movs
xchg
xchg
(bad)
std
(bad)
pop
or
into
cmp
mov
jmp
xor
bound
jp
pop
or
(bad)
movs
in
add
xchg
stc
xor
je
cmp
mov
(bad)
loopne
sahf
push
jno
cmps
pusha
leave
push
xchg
jnp
xchg
out
test
inc
loope
xchg
loope
ret
inc
(bad)
push
retf
adc
pandn
ror
xor
not
fs
aas
(bad)
push
pop
outs
lock
aam
mov
sub
les
and
and
mov
sbb
cwde
clc
sar
gs
pop
repz
hlt
cli
movs
dec
mov
gs
push
fnstenv
cmps
imul
repnz
out
inc
or
ja
xor
ins
push
xor
jo
cld
mov
(bad)
pop
push
mov
in
and
les
mov
mov
clc
loopne
loopne
jnp
mov
xchg
inc
mov
push
in
out
inc
adc
mov
repnz
jnp
cmp
outs
rol
pmaxsw
xor
out
pop
call
sbb
mov
xor
mov
mov
es
cli
lock
fisubr
xchg
cmc
mov
in
shl
pop
shl
fstp
cmp
into
(bad)
cmp
push
push
dec
dec
adc
or
adc
add
addr16
outs
cs
pop
scas
or
not
daa
aaa
mov
dec
lock
jg
les
call
fstp
dec
test
mov
fidiv
inc
shr
add
cmps
and
pusha
push
scas
xchg
push
in
sbb
repnz
fistp
idiv
sbb
dec
adc
js
data16
scas
ret
xor
or
clc
inc
ror
jns
imul
ins
mov
es
cmps
jno
add
push
pop
sub
cmp
inc
jmp
dec
or
push
dec
inc
fs
inc
push
dec
out
dec
pusha
mov
adc
mov
add
pop
ret
or
aad
sbb
mov
jns
gs
neg
jbe
dec
lds
test
and
shr
mov
jecxz
out
xchg
popf
je
push
out
test
push
cmp
jb
pushf
into
inc
sti
ror
jmp
int3
(bad)
mov
jmp
das
cmps
gs
jne
dec
jno
adc
lock
call
push
sbb
mov
adc
jae
or
mov
sub
jno
mov
inc
cmp
push
pushf
mov
add
adc
or
mov
mov
and
pop
add
shl
add
hlt
dec
jne
nop
pop
adc
iret
jns
or
push
sahf
jge
mov
or
or
rcl
fcomp
cmps
mov
mov
sahf
xchg
stc
movs
sbb
jg
mov
mov
push
push
adc
das
and
das
dec
xlat
xchg
pop
and
shr
test
fldcw
inc
xor
mov
and
cmp
or
int3
lock
xchg
mul
xor
loopne
sahf
shl
cmp
mov
imul
mov
ret
std
add
push
sub
mov
adc
imul
(bad)
push
cmp
and
jb
mov
stc
mov
cmp
or
xchg
outs
jae
repz
push
out
das
fcomip
aam
add
and
mov
arpl
sbb
ds
lock
sbb
jo
dec
loope
xlat
pop
xchg
jnp
popa
xor
lds
aam
pop
in
ja
push
or
lods
int3
pushf
stc
iret
jo
ins
and
sub
and
(bad)
mov
shl
fwait
sub
dec
cmp
ins
dec
pop
outs
in
adc
lods
fwait
or
add
mov
sub
mov
cwde
lahf
out
call
mov
add
and
mov
data16
test
mov
xor
dec
jb
mov
dec
repz
imul
cmp
push
scas
repnz
rol
inc
rdpmc
xor
out
jae
mov
ds
cwde
mov
jmp
push
out
mov
in
jge
sbb
or
xchg
loop
out
out
cmp
rcl
(bad)
in
dec
mov
fcomp
or
adc
in
pop
into
icebp
add
psubusw
and
push
add
jno
clc
add
inc
adc
fmul
jne
js
pop
jmp
in
int3
mov
fadd
ret
neg
fbstp
push
ret
bound
push
stos
adc
lods
movs
sbb
push
or
sahf
out
pop
adc
push
lods
sub
jecxz
and
cdq
addr16
hlt
int
add
jge
bound
mov
ss
xchg
push
mov
and
mov
adc
int
test
out
xor
add
pop
rol
fcomp
mov
std
test
adc
arpl
out
sub
jp
sbb
add
popf
je
repz
out
push
cld
lea
mov
mov
int3
dec
repz
out
mov
pop
or
sub
jecxz
aad
js
pop
pop
sar
sub
and
push
pusha
lahf
mov
gs
je
add
test
fistp
js
loopne
arpl
test
jmp
ins
fild
movs
iret
imul
das
sbb
(bad)
hlt
inc
js
mov
push
bound
jge
bound
icebp
loop
test
pop
ss
xor
lock
fwait
mov
stc
push
stc
das
cs
je
movs
in
iret
lea
fcom
test
mov
imul
pop
lahf
stc
adc
jmp
fdiv
cmp
data16
repnz
push
cs
jns
jl
(bad)
mov
mov
mov
mov
div
adc
dec
fcmovb
xor
jmp
jl
or
(bad)
or
repnz
pop
lds
out
pop
add
vpshuflw
mov
and
sbb
inc
push
jae
add
or
repnz
and
cmp
aad
pop
adc
ins
test
xchg
push
dec
je
jae
jo
push
aam
int3
jg
shr
xchg
mov
out
(bad)
int
nop
pusha
scas
ror
or
in
stos
xor
out
xchg
or
xchg
sbb
cmp
sub
das
stc
lock
push
dec
sub
inc
adc
loopne
stc
add
add
rcl
inc
sub
push
push
xchg
enter
retf
fisub
add
lock
fidivr
(bad)
test
adc
jecxz
idiv
imul
xor
cmp
into
mov
jb
jae
inc
inc
or
popa
cmps
retf
movs
(bad)
lds
adc
jle
inc
or
fnstenv
or
inc
lods
cmp
shl
out
sub
jne
data16
ret
adc
push
in
fdiv
and
(bad)
pop
ins
push
stc
xchg
jge
ret
stos
idiv
cli
in
aas
sbb
xchg
sahf
outs
dec
or
ror
xchg
jle
movs
mov
bound
dec
fs
mov
jp
add
mov
shl
nop
push
add
(bad)
xor
push
dec
xor
retf
stc
mov
les
xor
pop
fdiv
sti
add
pop
jbe
lock
ds
cmp
enter
hlt
cli
jle
mov
or
sbb
mov
add
mov
and
cmc
movs
and
inc
inc
stos
inc
jbe
xchg
inc
push
push
repz
daa
scas
mov
mov
sbb
sar
sbb
rcl
inc
jmp
or
inc
mov
shr
push
es
mov
mov
jge
or
es
xor
dec
sbb
jp
ja
es
push
or
jecxz
sti
cmp
loope
lock
jp
cmps
cli
mov
mov
push
and
fiadd
std
mov
pop
fucom
inc
(bad)
pop
add
movs
fld
and
bound
mov
pop
sar
cmp
or
int
(bad)
mov
ins
sbb
popa
popa
jle
sub
loopne
into
call
push
xor
retf
pop
fldz
or
and
sub
adc
aaa
xor
popf
leave
or
pop
or
outs
mov
imul
(bad)
outs
jmp
sahf
icebp
ss
or
mov
cmc
pop
mov
in
movs
xchg
sahf
sub
popa
or
sbb
(bad)
test
jecxz
adc
mov
add
lea
ss
mov
stc
rol
mov
out
jmp
jno
fistp
(bad)
retf
in
(bad)
enter
test
push
sbb
int3
movs
adc
ins
imul
call
addr16
mov
inc
pop
push
imul
sub
add
mov
xor
cld
addr16
leave
call
sbb
push
cwde
mov
jecxz
mov
cmp
jno
xchg
mov
stos
dec
xchg
xchg
xchg
and
shr
out
jp
imul
mov
pop
mov
xchg
sbb
xchg
push
je
xchg
jg
xchg
jno
cwde
dec
jnp
shrd
jb
mov
push
mov
sub
add
mov
in
adc
das
cmp
enter
mov
fdiv
(bad)
and
stc
call
mov
nop
sbb
pop
sbb
cmp
movs
out
int
cmps
sub
inc
push
outs
inc
xor
push
stos
retf
or
int3
cld
nop
inc
xchg
cmps
sbb
mov
jle
jae
into
push
and
inc
mov
mov
ins
cmp
and
mov
sahf
lds
cmp
mov
(bad)
mov
fidivr
es
test
(bad)
pop
pop
pushf
push
pop
cld
xchg
adc
push
pop
(bad)
cmc
jmp
dec
cmps
mov
bound
xor
adc
pushf
inc
retf
repz
xor
ss
inc
jmp
aaa
mov
dec
jae
push
idiv
cmp
fs
mov
inc
pop
repnz
ins
(bad)
imul
push
(bad)
test
scas
xor
mov
stos
inc
or
jmp
ins
test
and
mov
pusha
pop
out
test
iret
inc
repz
lahf
jb
jne
sub
push
fiadd
mov
add
scas
xchg
jl
lahf
nop
xlat
ins
jl
fld
ds
stos
adc
or
retf
stos
or
arpl
push
and
cmps
nop
pop
fsubrp
sbb
and
jmp
dec
push
das
imul
xor
repnz
pushf
cli
ja
or
xchg
jle
bnd
mov
mov
ins
mov
mov
test
pop
inc
and
imul
mov
out
outs
mov
push
pop
dec
stos
pop
rol
popfw
scas
mov
jg
(bad)
sbb
jnp
inc
in
test
mov
jne
test
xor
idiv
test
xchg
js
inc
sbb
xchg
xchg
stc
or
mov
pop
popf
fidiv
(bad)
mov
inc
nop
(bad)
cmps
jl
sbb
dec
jb
ret
mov
sub
mov
cmp
(bad)
and
clc
jge
outs
cdq
mov
mov
dec
push
dec
jle
mov
mov
and
push
or
test
pop
ja
push
(bad)
(bad)
bound
test
adc
push
xchg
pop
jmp
(bad)
in
int
mov
mov
and
repnz
mov
xchg
mov
fs
rol
mov
jmp
retf
jmp
std
shl
xchg
sbb
pushf
mov
jmp
dec
ffree
sbb
jp
adc
sub
fwait
ss
outs
add
mov
jbe
movs
mov
mov
xchg
and
iret
pop
retf
loopne
cmp
fdivr
cdq
ins
into
xchg
int
sahf
icebp
pop
shl
adc
dec
lock
add
dec
adc
inc
sub
(bad)
dec
dec
cli
daa
and
(bad)
and
add
push
rcl
xchg
call
sbb
loopne
inc
adc
in
rcr
adc
test
cmp
jmp
xchg
inc
cmp
je
out
cmps
mov
dec
fnstcw
jg
pushf
jl
xchg
pop
jo
outs
(bad)
out
cmp
and
and
mov
enter
pusha
pop
mov
add
xor
mov
sbb
add
inc
mov
push
mov
xchg
xchg
movs
push
mov
cmp
inc
sbb
cmp
pop
out
adc
add
xchg
outs
lahf
js
jl
pop
iret
xor
ret
mov
mov
pop
ins
(bad)
lods
and
pop
ror
call
(bad)
cli
dec
scas
cmovae
mov
push
mov
jmp
add
mov
gs
retf
outs
push
pusha
adc
fcomp
in
sub
mov
pusha
sbb
std
mov
jmp
dec
test
push
mov
and
pop
ins
fldenv
test
data16
push
adc
scas
loop
sbb
mov
shl
cvtps2pi
mov
dec
pop
mov
fdivrp
sar
cmp
add
dec
push
and
popf
push
sub
xor
dec
mov
push
fiadd
cmp
cwde
ins
imul
xor
call
fisttp
dec
cmp
pushf
and
jne
pop
loopne
inc
fwait
push
push
xchg
pop
ins
pop
imul
hlt
cdq
xchg
and
cmp
jo
cmp
push
jns
dec
dec
smsw
pop
(bad)
or
mov
jmp
stos
in
push
cwde
inc
mov
adc
hlt
test
int
call
in
sbb
into
ret
add
cmp
int
arpl
mov
cmp
fild
mov
scas
xchg
mov
aaa
jle
and
mov
and
out
sub
mov
int
pop
(bad)
xor
push
pop
in
outs
sbb
pop
rol
add
and
(bad)
call
or
out
jmp
ins
loope
iret
iret
cwde
cmc
push
pushf
or
sti
ret
adc
neg
jo
add
fsubr
pop
cdq
xchg
std
and
pop
and
add
imul
xor
dec
les
mov
outs
call
push
mov
fisub
jb
dec
fucomp
outs
repz
push
out
dec
add
cld
fisubr
cmp
leave
inc
xchg
mul
and
leave
mov
enter
adc
xor
das
sub
add
inc
shl
ret
inc
xchg
push
push
mov
dec
mov
pop
daa
xlat
cmp
outs
inc
xor
imul
ret
jmp
xor
sbb
fmulp
adc
stos
xchg
test
or
mov
sar
inc
xchg
mov
mov
rcr
aad
jae
mov
fucomp
stos
or
out
test
sub
dec
pop
mov
cli
lea
jge
out
cmps
retf
or
mov
jno
fdivr
call
movs
mov
out
lods
push
repz
stos
pusha
or
call
iret
icebp
clc
stos
movs
and
xor
cmc
scas
inc
pop
jmp
movs
push
mov
(bad)
mov
xor
xchg
and
mov
shld
add
adc
mov
jno
ret
rol
dec
jae
inc
inc
outs
add
xchg
cmp
shr
mov
dec
cmp
cmp
sbb
lahf
lods
out
and
std
jae
retf
mov
mov
mov
dec
dec
ret
mov
xlat
add
sti
xchg
or
mov
cmp
test
xchg
mov
mov
push
mov
popa
cmps
pop
mov
sar
nop
sbb
xchg
cdq
xchg
xor
test
pop
in
xchg
enter
mov
push
test
xchg
fdivr
std
xchg
mov
hlt
retf
mov
stos
xchg
in
fwait
rol
pusha
xlat
sbb
and
xrelease
sbb
retf
inc
pop
jo
popf
cmp
sub
scas
in
in
jb
jg
dec
out
imul
rol
and
mov
test
xchg
addr16
xchg
fwait
jbe
fistp
lea
and
lock
popf
hlt
loope
mov
mov
xchg
into
jmp
(bad)
clc
sbb
jae
(bad)
adc
add
dec
mov
fisubr
mov
push
or
sub
xchg
inc
iret
or
ins
mov
push
jo
push
loopne
fld
ins
jns
sbb
js
sub
mov
fimul
das
in
imul
retf
adc
sub
data16
xchg
stos
mov
sub
loope
mov
dec
mov
outs
or
and
mov
out
mov
fldcw
jmp
dec
aam
lds
xchg
bound
jne
out
sub
shr
pop
add
or
je
(bad)
push
into
jno
jns
jl
mov
or
pop
lds
mov
(bad)
and
fnstcw
jmp
jg
mov
pop
ror
xchg
(bad)
cmc
jbe
in
mov
inc
scas
retf
and
iret
inc
shl
xor
mov
mov
xchg
mov
out
add
cmp
add
xor
jns
test
ror
adc
ret
push
test
fld
addr16
adc
test
and
je
cmp
push
mov
(bad)
pop
lods
pop
enter
xor
pop
sbb
xchg
scas
jbe
mov
mov
xor
inc
xchg
aam
fsub
and
mov
(bad)
xor
xchg
ins
add
adc
test
xchg
setae
adc
fnstenv
mov
jnp
mov
shl
les
sub
push
or
mov
out
adc
loop
sar
adc
std
cmp
mov
daa
ret
mov
and
mov
inc
test
cmp
rcl
adc
or
shr
stos
fisttp
test
mov
xchg
(bad)
push
arpl
loope
popf
ins
push
dec
call
xlat
jecxz
sub
(bad)
bound
inc
cmc
dec
pop
lods
xor
cmps
js
cli
mov
cmps
ficom
aad
sbb
inc
ins
xchg
out
jmp
push
inc
lods
mov
retf
lock
inc
ja
sub
lods
xchg
ret
adc
leave
in
rcl
mov
fmul
lods
cmp
test
movs
xchg
and
in
xlat
ja
mov
lock
xor
imul
sbb
cmp
xacquire
push
jnp
aam
xor
sbb
ret
les
inc
or
mov
shr
mov
leave
fbld
sbb
js
sub
aad
jle
jb
ins
xchg
je
adc
xor
aad
push
bound
mov
leave
cmp
rcl
mov
sbb
fwait
dec
fcom
(bad)
out
stc
dec
popa
adc
adc
dec
loopne
in
jo
sbb
jecxz
mov
icebp
clc
js
jb
add
out
jno
push
loop
jecxz
movs
fsubr
scas
fwait
push
fistp
shl
pop
mov
outs
ins
mov
ja
push
inc
iret
sbb
stos
mov
scas
retf
mov
adc
jmp
jns
xchg
mov
add
mov
ins
repz
push
(bad)
je
push
sahf
mov
xchg
or
jns
leave
das
xchg
sbb
xchg
sub
retf
pop
fisubr
adc
retf
inc
dec
pusha
xchg
pop
out
lea
mov
inc
imul
mov
das
xchg
jmp
and
in
adc
jo
clc
ds
xchg
clc
lock
movs
sbb
pop
pop
addr16
fxch
push
dec
mov
mov
bswap
push
out
and
enter
(bad)
inc
mov
xchg
dec
mov
mov
mov
ret
(bad)
xchg
jns
sbb
lods
pop
(bad)
mov
inc
stos
jns
dec
je
(bad)
add
fscale
rcr
mov
mov
jmp
mov
lock
adc
mov
test
sub
test
sahf
pop
es
shr
cs
sub
imul
fisub
icebp
scas
mov
bound
test
and
inc
mov
in
jnp
mov
popf
call
ror
add
lea
pop
aaa
das
fild
cmp
xor
cmp
cwde
inc
adc
push
sar
inc
stos
dec
out
mov
pop
jmp
fisttp
cmps
and
pop
hlt
lea
mov
stc
fcomp
sbb
mov
in
mov
add
arpl
pop
into
add
inc
and
xchg
ss
jle
inc
and
out
loop
movs
mov
xchg
mov
jo
xchg
mov
push
xor
rol
cmp
or
push
ficom
(bad)
pop
push
fsubr
cwde
nop
jo
xor
aam
test
(bad)
aam
cs
push
or
scas
ret
inc
pop
stc
cmp
sahf
jp
jmp
cmp
dec
dec
ins
mov
fisttp
movs
ror
ret
fst
add
jns
lods
std
mov
rcr
mov
cmp
ds
mov
pop
scas
cmp
or
popa
inc
dec
outs
jmp
and
enter
fs
rcr
out
shl
enter
shr
mov
ins
adc
add
xchg
cmp
xchg
sti
ror
jnp
sahf
fcom
fucomp
fnstsw
lds
cmps
shl
stc
outs
jb
mov
retf
mov
xor
leave
retf
jo
icebp
mov
cmc
aam
(bad)
lea
pop
inc
out
ins
fsub
xchg
imul
ror
mov
jbe
out
cmc
sti
outs
div
xchg
lds
loop
pushf
push
dec
mov
mov
je
adc
inc
dec
ss
fdiv
shr
inc
mov
push
ret
call
out
and
pop
ret
pop
add
add
add
cmps
fisub
mov
or
xor
pop
pop
aad
sub
sub
pop
and
cmp
inc
mov
xchg
cmc
call
mov
adc
push
pop
ret
movs
pop
fstp
and
fmul
(bad)
stc
mov
mov
cld
in
nop
shl
add
fmulp
mov
push
ret
add
rcl
push
mov
ret
loop
xchg
push
test
test
ins
fnstenv
push
jmp
scas
sti
leave
fldenv
stc
mov
jecxz
cmp
pop
sub
mov
ret
sub
pop
cld
test
mov
xchg
mov
int3
(bad)
cmc
xlat
ins
cmps
fdivr
(bad)
in
shr
nop
test
cdq
mov
leave
enter
mov
jns
jp
pop
or
js
rcr
stc
mov
xor
aaa
xchg
imul
add
mov
fidivr
arpl
xchg
mov
ret
loopne
or
pop
movs
stos
scas
mov
test
sbb
pop
std
cwde
mov
cld
adc
in
call
inc
out
lock
or
and
popf
in
icebp
push
retf
add
xchg
mov
(bad)
inc
fwait
dec
arpl
cwde
js
push
addr16
push
stos
in
jp
push
leave
pushf
fdivr
(bad)
cli
mov
and
inc
call
sub
inc
jb
ds
test
xchg
or
cmp
sub
xchg
jecxz
repz
cmp
mov
sbb
pop
fisubr
mov
inc
push
(bad)
push
cmp
fist
stos
clc
mov
cld
mov
cli
xlat
or
cmp
adc
lds
mov
sbb
cmp
mov
dec
add
jl
mov
mov
inc
cmps
jge
inc
pop
xor
adc
push
jae
lahf
cmp
int
adc
cmp
cmp
ret
mov
cdq
xchg
lock
mov
cmp
sub
popf
dec
or
push
mov
inc
add
xchg
cmovle
cmp
jle
cmps
mov
shr
inc
shl
stos
shr
(bad)
cmp
nop
lock
mov
sahf
inc
aam
popa
sub
add
test
ins
rcr
cwde
mov
retf
inc
sub
dec
fs
test
dec
int3
mov
das
pushf
inc
jb
adc
sbb
loope
pop
call
repz
mov
fistp
inc
inc
sbb
cmps
xchg
sub
push
test
jp
rcr
inc
xor
mov
mov
stos
xor
xor
aam
mov
pop
add
mov
mov
sub
outs
mov
jae
loop
pop
out
lock
cmp
gs
mov
ins
mov
(bad)
test
add
adc
ins
loopne
sbb
test
inc
jno
aam
retf
pop
add
and
xor
inc
mov
jo
ins
les
sti
mov
jns
push
mov
dec
mov
add
dec
mov
xor
dec
(bad)
cmp
les
aam
push
shr
push
loopne
inc
jl
adc
sub
inc
push
mov
iret
call
test
in
mov
movs
imul
add
(bad)
arpl
dec
xor
pop
xchg
add
adc
fst
test
xor
jmp
jp
icebp
jo
retf
mov
cmps
mov
into
popf
xchg
(bad)
jo
aam
cmp
outs
movs
inc
xor
rcr
jne
add
test
add
cmp
jb
sbb
mov
xchg
cmp
mov
xor
rol
sub
ret
xchg
fdiv
mov
mov
(bad)
sbb
jae
js
ins
gs
mov
int3
lods
sub
or
jle
push
fwait
pop
call
jbe
push
pushf
pop
cmps
clc
mov
pop
cmc
fiadd
and
enter
sbb
lds
jmp
jmp
sub
and
in
mov
or
cmc
mov
pop
pop
cmp
mov
fisttp
xor
pop
pop
jo
pop
(bad)
jge
hlt
icebp
jl
repz
adc
mov
ss
or
into
test
cmp
cmps
mov
scas
and
retf
pusha
aad
cs
lds
add
dec
aad
das
fiadd
lea
mov
(bad)
push
call
mov
scas
scas
add
sub
mov
add
int
call
xor
popf
test
mov
sub
sar
push
ins
std
shr
scas
call
mov
out
fwait
int
cmp
mov
pop
retf
mov
sar
test
cmp
mov
inc
jmp
pop
iret
inc
lods
dec
mov
sub
and
jmp
cs
repz
jo
lahf
imul
mov
mov
jg
cmp
popa
sub
adc
scas
pop
mov
jbe
xor
mov
jo
push
dec
sub
stos
sub
inc
outs
jmp
xchg
ret
fld
pop
fldenv
loope
adc
sub
or
lds
mov
xchg
push
mov
lahf
sub
xchg
pop
aam
mov
or
mov
dec
mov
pop
outs
cli
dec
imul
mov
cmp
dec
rcl
add
adc
and
ja
lods
out
(bad)
(bad)
out
mov
lock
dec
ja
jnp
mov
cmp
push
ins
mov
sti
jb
shl
jg
cmp
je
jb
sub
ins
in
pop
and
adc
jecxz
outs
xchg
lds
mov
mov
sbb
test
aaa
push
popf
(bad)
and
fmul
jl
jg
adc
inc
mov
adc
and
aad
cs
call
ss
inc
aaa
idiv
fs
mov
in
xor
bound
add
int
xor
mov
cmc
fptan
ss
jo
jg
sub
sbb
mov
nop
cmps
mul
movs
pop
dec
push
lock
aam
std
ret
push
lea
dec
cli
mov
ret
sub
cmc
lahf
jne
pop
mov
icebp
jle
in
int3
loopne
push
inc
call
inc
sti
cmps
or
push
cmp
mov
xor
pushf
sti
lds
push
pusha
cdq
test
jp
fcomp
movs
call
mov
das
sub
(bad)
mov
cmp
adc
push
ds
or
add
jmp
retf
aaa
add
push
inc
pop
or
scas
pop
stc
ret
test
push
mov
fdivr
mov
dec
xor
(bad)
in
fist
test
xor
inc
mov
ror
xchg
rol
(bad)
test
stos
cdq
push
ret
adc
and
in
mov
push
jns
mov
cmc
jbe
mov
mov
sub
jae
xchg
adc
repnz
in
mov
mov
cwde
pop
sti
adc
cmp
sbb
dec
lods
outs
sahf
nop
test
mov
stos
mov
jno
sbb
mov
ins
and
jo
rcr
xor
or
add
sub
jge
xchg
pop
sar
xor
cmp
loopne
xor
push
fimul
gs
xor
mov
mov
enter
xchg
xlat
mov
dec
push
xchg
jns
in
mov
cmps
xor
cmp
outs
xchg
mov
pop
sahf
pushf
mov
cli
cli
push
lds
inc
addr16
shl
xchg
jp
mov
or
je
add
and
jbe
and
jge
fldcw
mov
idiv
push
stc
popf
scas
pop
lods
(bad)
xchg
nop
jns
jp
dec
ss
iret
mov
or
addr16
inc
dec
loope
mov
xor
xchg
pop
mov
sbb
add
add
mov
ja
scas
daa
jae
and
sbb
arpl
push
jmp
rol
mov
mov
xchg
jmp
movs
call
mov
jne
adc
pop
ret
fisttp
fcom
popf
retf
outs
jb
shl
jle
sub
inc
cld
mov
pusha
jno
movs
mov
pop
sub
jns
dec
mov
cmp
cmp
mov
ins
pop
sar
imul
addr16
xlat
ja
mov
sbb
jb
ins
sub
rcl
out
call
or
aam
dec
add
movs
loopne
sbb
cmp
loope
push
out
xchg
sahf
repz
out
cmps
shl
inc
sbb
jmp
mov
xchg
call
retf
sub
(bad)
sbb
xchg
jmp
mov
aaa
push
xchg
lea
lods
sbb
mov
inc
mov
push
push
xchg
xchg
xchg
inc
jp
sub
(bad)
jmp
(bad)
stos
mov
jcxz
cmp
(bad)
retf
mov
dec
clc
xchg
ja
cmps
push
push
in
xchg
cmp
(bad)
add
in
mov
adc
in
mov
sbb
ret
movs
dec
(bad)
mov
popf
dec
test
mov
jmp
adc
out
inc
xor
dec
out
mov
mov
push
jmp
loop
mov
pop
pop
and
or
repz
adc
push
mov
popf
push
fbld
inc
mov
sbb
stos
sbb
stc
mov
adc
or
dec
pop
loop
adc
mov
sbb
pop
idiv
pop
popf
mov
js
adc
sub
int3
or
cmp
mov
fsubr
fcomp
mov
repz
gs
(bad)
jnp
not
clc
icebp
add
mov
jl
pop
imul
in
add
and
shl
(bad)
(bad)
push
out
leave
(bad)
in
adc
iret
xchg
and
sub
scas
inc
mov
out
ret
mov
or
mov
lods
pop
sub
dec
sub
ss
xchg
add
cli
lea
adc
pop
shl
popf
mov
lahf
mov
jecxz
call
push
mov
pusha
popa
sub
out
rol
(bad)
aam
(bad)
out
jp
repz
lahf
cmps
fcomp
xchg
and
lock
nop
push
mov
(bad)
or
dec
int3
push
mov
mov
xchg
mov
nop
push
jns
hlt
retf
push
mov
(bad)
push
lds
xor
sbb
jmp
lock
push
push
pop
and
inc
(bad)
push
inc
(bad)
sbb
adc
sbb
adc
or
sahf
nop
jp
adc
sub
outs
inc
fst
cs
sub
lock
xor
mov
movs
adc
cli
mov
xor
or
shl
push
ins
cli
mov
sub
cmp
fist
aam
mov
pop
mov
and
xchg
jnp
sub
mov
int3
adc
leave
inc
pop
pop
in
aaa
in
in
inc
sbb
jae
fwait
push
into
outs
sbb
push
out
jmp
dec
push
jmp
out
jmp
add
(bad)
sti
push
dec
mov
ror
ins
mov
jl
jecxz
pop
xchg
arpl
aad
fdivrp
jne
pop
nop
leave
nop
fld
jb
ins
jae
jo
sub
out
push
retf
mov
cld
lahf
sbb
mov
xor
sub
mov
mov
jb
jns
xor
jl
(bad)
jl
jne
in
into
mov
arpl
jmp
xchg
mov
mov
das
sbb
adc
in
inc
sbb
ret
ret
int3
adc
cmps
push
shl
lods
cmp
retf
imul
inc
push
mov
mov
in
sub
mov
(bad)
call
mov
in
pop
jns
lahf
sub
xchg
cmp
sbb
sbb
inc
jmp
sahf
out
or
in
sahf
mov
adc
add
ret
push
adc
xchg
call
xchg
xor
push
and
cmc
pop
xchg
loope
push
xchg
adc
mov
jecxz
mov
pusha
and
jecxz
add
dec
in
dec
repnz
inc
xor
es
lock
jl
jae
gs
fidiv
jbe
sbb
dec
mov
inc
push
lds
ins
das
aad
shl
fidivr
dec
ja
das
pop
gs
cs
mov
and
xchg
nop
mov
and
adc
imul
test
cdq
test
push
jbe
push
leave
cmp
xchg
add
loope
or
test
and
dec
fisttp
mov
mov
fsub
pusha
sahf
jo
pop
add
adc
and
sub
daa
mov
and
cli
test
cli
add
cmp
rep
cmp
retf
push
lds
and
jo
pop
ins
imul
call
aad
mov
data16
pop
cmp
cld
and
dec
loope
(bad)
xchg
(bad)
mov
fdiv
inc
lea
lock
or
pop
mov
jecxz
jae
xchg
jecxz
mov
sbb
mov
xor
retf
loopne
bound
mov
fcmovbe
or
jns
sbb
or
(bad)
(bad)
fisubr
xor
mov
cmp
and
mov
out
nop
xlat
mov
jmp
mov
jp
mov
jns
xchg
lock
mov
out
ds
add
cmps
jns
cmps
fcomip
add
jae
cmp
std
movs
mov
repz
psrad
pop
push
pop
push
fidiv
frstor
outs
movs
rep
ds
mov
jmp
or
cmps
retf
cmp
data16
lahf
fnstsw
cs
add
ds
stos
and
cmps
jb
clc
jg
pop
movs
(bad)
nop
ins
push
test
mov
test
cmps
imul
xchg
leave
adc
jo
cmps
ret
fwait
mov
mov
jmp
mov
dec
adc
add
mov
pop
call
dec
xchg
movq
aam
cwde
pop
popf
mov
nop
frstor
pop
mov
popa
rcl
mov
jns
lds
jae
mov
mov
es
stc
mov
cmp
pop
dec
ret
rcl
jle
cmc
adc
stc
or
hlt
in
out
and
pop
fstp
and
mov
dec
sub
push
arpl
sub
adc
imul
rcl
pop
cmc
sbb
sar
popa
addr16
gs
push
iret
je
aad
aas
dec
in
leave
scas
das
sbb
leave
pop
jno
arpl
mov
add
retf
cmps
addr16
add
mov
push
mov
rol
cld
add
cmp
cdq
lds
(bad)
out
push
mov
add
loop
inc
dec
in
das
test
imul
rcl
jge
pop
popf
inc
add
inc
fmul
jge
adc
adc
mov
jb
lock
cmps
scas
xor
cld
das
addr16
jecxz
jp
add
push
cld
aas
mov
movs
(bad)
and
jp
std
loope
out
cdq
jnp
scas
jecxz
je
mov
lea
out
loopne
push
mov
push
aaa
sar
cwde
sub
inc
mov
std
push
add
mov
cmp
and
inc
push
mov
add
sub
pop
or
js
(bad)
fs
mov
scas
sbb
sar
cmp
scas
cld
leave
div
ret
push
in
jnp
mov
sbb
sub
fld
into
js
shr
cmp
push
pop
or
or
ins
sbb
push
stc
icebp
gs
sub
push
(bad)
sub
imul
and
sar
pop
mov
sar
jmp
loope
push
test
addr16
sbb
jmp
xor
mul
vmovupd
repnz
or
sbb
mov
mov
pop
fdivr
retf
jns
sbb
adc
fucomp
or
jmp
je
div
sbb
xor
inc
cdq
sub
(bad)
and
inc
int
leave
sub
adc
sub
cli
sbb
addr16
inc
mov
xlat
mov
dec
adc
add
test
call
pop
(bad)
js
pop
ret
inc
mov
repz
or
retf
retf
and
sbb
inc
xchg
test
xlat
fisub
and
xchg
jg
arpl
std
lods
stos
loopne
dec
rcl
add
push
movs
push
adc
sub
lahf
sub
into
and
fisubr
scas
leave
push
sbb
and
movs
add
pop
push
in
push
sbb
es
pop
push
cmp
push
int3
or
add
fsubr
sub
sahf
xor
lahf
dec
movs
mov
psraw
mov
rcr
mov
ds
inc
lea
cmp
sub
(bad)
in
test
(bad)
ins
jp
jle
pushf
loope
sti
lods
into
mov
fsub
ja
mov
jmp
pop
in
push
pop
pop
jbe
push
fadd
mov
dec
jb
jns
sub
test
ret
je
inc
push
into
xor
(bad)
mov
cmps
sbb
lock
pushf
adc
or
cdq
mov
adc
mov
cmc
mov
mov
add
loop
out
push
xchg
cmp
cmps
into
inc
push
and
test
pop
xchg
or
cmove
repnz
adc
add
mov
stos
mov
ss
loopne
ds
or
out
fldcw
mov
fldenv
inc
dec
pop
inc
xlat
jnp
cmp
hlt
add
inc
or
cmp
imul
fadd
adc
outs
aas
ins
sbb
iret
sub
jge
pop
gs
cmp
out
add
loope
cld
inc
popf
adc
mov
ins
jo
add
xor
mov
or
ret
mov
jne
and
sti
in
sub
int
pop
popa
aam
test
adc
adc
sbb
add
push
sahf
xchg
aaa
test
sar
cdq
inc
pop
or
and
adc
cmp
bound
push
adc
ret
jle
nop
adc
cmc
cs
and
and
push
adc
dec
xor
es
cwde
pop
jecxz
sub
cdq
or
jo
enter
xor
and
or
sbb
push
ret
or
add
cwde
(bad)
cmp
inc
pop
loop
addr16
add
xchg
xor
jne
repnz
sbb
jmp
jo
dec
add
and
call
xchg
pop
mov
xchg
cwde
mov
js
jo
out
jne
mov
cmps
dec
loop
jnp
sti
adc
or
sub
dec
mov
sahf
mov
sbb
adc
call
retf
das
mov
ret
lock
dec
mov
movs
rol
or
pop
fmul
mov
jecxz
fidiv
mov
sub
fmul
add
adc
xchg
mov
push
xor
xor
(bad)
ret
mov
xchg
jnp
hlt
loopne
mov
sbb
push
dec
(bad)
cmp
xchg
les
fwait
sbb
bswap
push
test
push
sahf
call
mov
enter
and
xor
outs
adc
jb
cmps
and
jb
and
xchg
inc
mov
xchg
sub
imul
in
dec
(bad)
std
movs
pop
int
sub
mov
sbb
xor
xor
dec
and
or
es
dec
sti
dec
mov
mov
mov
sub
daa
cwde
inc
aad
fiadd
sahf
sbb
nop
test
mul
out
jl
rcl
adc
fmul
jbe
xchg
push
mov
jg
std
add
push
mov
mov
enter
mov
dec
dec
inc
xchg
jle
sbb
and
or
pop
push
arpl
es
or
push
pop
sbb
gs
mov
sbb
in
sub
jge
enter
or
adc
pop
cmps
mov
out
jb
mov
inc
mov
sar
in
call
cli
xor
fidivr
push
ret
mov
cld
push
lock
lods
out
movs
sub
repnz
test
scas
jmp
mov
and
in
sub
adc
sub
(bad)
or
aam
aaa
outs
cmp
mov
retf
dec
dec
push
in
push
mov
arpl
ror
mov
out
aam
test
jne
sti
sub
push
out
or
stc
loopne
mov
retf
or
mov
push
push
test
ins
ret
loopne
xor
fimul
xchg
nop
xchg
xor
scas
cmp
(bad)
repz
or
jb
push
stos
mov
lds
xor
ret
stc
and
jbe
das
xchg
cmp
inc
xor
sahf
movs
ret
lds
mov
jg
sub
and
xor
js
jle
mov
ins
nop
fdivr
call
pop
movs
push
sti
push
loope
fmul
pop
lea
push
je
adc
sbb
daa
sbb
scas
jecxz
stos
add
inc
mov
ret
push
mov
push
cmp
sbb
xor
add
ins
bound
cmc
clc
jmp
jb
cdq
mov
sti
sar
aas
jl
ret
ins
movs
ss
or
fdiv
mov
iret
xchg
lock
mov
sub
fstp
cmps
inc
ja
cmp
call
xor
aaa
mov
jp
xchg
dec
pushf
mov
dec
pop
test
add
rcl
inc
xor
sbb
cmp
clc
xchg
(bad)
push
test
and
fistp
rcl
dec
sbb
mov
int3
int
sub
jbe
cwde
cwde
mov
lods
shl
imul
shl
imul
mov
arpl
out
pop
adc
das
lods
fsubr
clc
ss
adc
add
jecxz
pop
mov
rep
pop
fdiv
and
ja
test
xor
pop
pop
jg
dec
mov
enter
or
int
xchg
sbb
xlat
pushf
lods
inc
push
cmp
aaa
inc
pop
mov
dec
mov
inc
ins
sbb
push
or
enter
into
pop
jns
cmp
sbb
jmp
and
cmp
sbb
les
ret
inc
xchg
mov
sbb
xchg
jge
fld
push
xchg
mov
pushf
shl
xchg
or
jns
(bad)
lock
xchg
and
arpl
aas
in
xor
sub
jne
jno
adc
mov
push
cwde
arpl
pop
mov
jmp
pushf
and
mov
stos
outs
pop
adc
ret
push
push
das
and
imul
jns
lods
pop
sbb
sbb
inc
leave
loope
sub
jp
jl
popf
sar
rol
mov
inc
or
push
and
clc
loopne
in
leave
ror
xlat
test
rol
add
or
add
fdivr
xchg
pop
xor
and
jg
ror
out
js
aad
pop
xor
push
bound
mov
mov
sub
adc
dec
mov
popf
cwde
cmp
loopne
mov
and
or
xlat
mov
xchg
icebp
arpl
adc
inc
out
xchg
imul
jg
shl
into
clc
dec
adc
dec
sub
hlt
adc
jo
jae
cmp
cmps
ins
popa
pop
adc
(bad)
jmp
add
into
pushf
push
test
pop
fldenv
add
inc
movs
mov
retf
push
into
movs
fsubr
pop
mov
nop
leave
ror
ins
sar
xor
mov
fwait
xor
xor
cwde
dec
mov
xchg
xor
mov
xchg
sbb
push
addr16
inc
xlat
test
les
xchg
push
or
aas
daa
jbe
pop
inc
pop
dec
mov
xor
bound
inc
xchg
outs
mov
push
xchg
fidiv
mov
mov
push
fstp
icebp
xchg
fcom
shr
shl
push
adc
cmps
inc
in
inc
cwde
adc
mov
jne
repz
cmp
hlt
arpl
je
adc
mov
dec
stos
test
(bad)
(bad)
adc
cmp
icebp
cmp
cmp
xchg
sbb
in
icebp
(bad)
popa
cmp
ret
mov
inc
aam
dec
arpl
dec
movs
mov
aad
jecxz
loope
pop
das
fucomip
dec
ret
push
je
xchg
mov
cmp
sub
scas
popa
nop
movs
std
leave
jle
mov
adc
cmp
scas
mov
inc
cmp
push
or
sbb
test
js
aad
out
repnz
mov
(bad)
sti
inc
stos
pop
mov
push
fistp
mov
fisub
imul
pop
cdq
add
and
sbb
dec
hlt
in
sbb
daa
adc
sbb
mov
add
dec
push
inc
pop
cmp
cmp
jl
push
lock
or
adc
(bad)
test
aas
jno
xor
es
inc
sbb
add
mov
mov
das
lea
js
xor
push
push
call
aas
aas
xchg
mov
dec
pop
mov
ins
stc
xchg
enter
daa
outs
add
fadd
in
repz
shr
xchg
rol
es
cmp
jmp
sahf
dec
fcmovne
scas
jmp
adc
ret
or
retf
mov
xor
inc
jno
(bad)
jp
cmp
js
mov
sahf
xchg
loopne
mov
jo
cmp
pop
imul
test
enter
test
sbb
sub
jno
mov
gs
(bad)
(bad)
mov
jp
xor
out
cdq
cmp
inc
jle
leave
pusha
sub
mov
(bad)
pop
jp
test
inc
and
outs
hlt
popf
inc
inc
jo
jno
jl
mov
pop
repz
xchg
in
fdivr
cmp
inc
out
ins
mov
mov
aas
les
mov
fcmovnu
into
jge
xchg
fwait
les
mov
xchg
leave
jns
pushf
sbb
sbb
xor
daa
mov
ja
jmp
in
and
fild
adc
rcl
add
push
sub
cmc
pop
retf
cmp
mov
(bad)
pop
push
int3
or
mov
adc
fiadd
jb
inc
(bad)
scas
call
jmp
cmp
dec
sub
mov
jg
and
or
addr16
and
cmc
cmp
pop
pop
bound
(bad)
sub
enter
sbb
sub
outs
jg
jmp
or
pop
js
in
sti
pop
add
or
push
pusha
jp
mov
jmp
xchg
(bad)
cmp
push
or
sbb
ret
clc
pop
pusha
add
lahf
stos
lahf
mov
xchg
adc
out
cmp
dec
xor
push
pop
iret
or
xchg
dec
loopne
push
(bad)
test
test
add
adc
pop
out
adc
ss
mov
mov
push
pop
ret
aas
mov
imul
sbb
push
jb
xchg
add
cmps
or
inc
int
mov
hlt
hlt
mov
dec
inc
lock
dec
mov
ins
arpl
add
pop
jmp
fistp
(bad)
sti
xchg
inc
sbb
ins
add
pop
adc
rol
mov
lods
pop
ins
mov
or
fmul
sub
add
shr
out
add
dec
shr
jecxz
ins
mov
xchg
in
test
(bad)
aas
lea
inc
jns
jp
mov
cld
xor
mov
inc
stos
(bad)
aad
orps
mov
pop
push
ins
sub
or
mov
mov
stos
fisub
jg
icebp
movs
push
hlt
pop
std
xchg
push
add
xor
int3
mov
inc
cmc
mul
stos
jne
adc
xor
sbb
in
outs
jp
inc
fiadd
cmps
xlat
and
call
popf
cli
push
test
xor
jnp
pop
out
or
and
push
aad
xlat
aam
(bad)
leave
sub
xchg
sbb
adc
ror
jns
fcomp
and
sti
daa
dec
jl
cmp
push
in
add
mov
fiadd
int
pop
push
mov
lods
pop
cmp
adc
bound
mov
cmps
or
jl
rcr
add
xor
mov
mov
xchg
jne
xor
mov
push
mov
mov
out
in
(bad)
cdq
push
jmp
mov
or
xchg
ss
push
jle
xchg
jne
or
push
stos
outs
retf
mov
jnp
adc
in
out
pop
in
fisub
pop
lds
iret
dec
jle
push
(bad)
mov
(bad)
into
retf
and
add
sub
jnp
mov
loopne
jecxz
imul
mov
std
ins
mov
sub
popa
mov
jmp
fmul
(bad)
pop
and
add
jp
enter
stos
out
jecxz
leave
pushf
cmp
inc
das
mov
jl
sahf
mov
and
or
or
and
cmp
push
push
outs
and
pop
xor
xor
out
and
jge
mov
iret
clc
inc
mov
mov
div
movs
sbb
adc
adc
movs
mov
xchg
movs
xor
inc
xchg
fdivr
mov
push
icebp
mov
repz
sub
xor
xchg
out
aas
push
loope
pop
shr
mov
popf
mov
loop
pop
ja
mov
cli
int
mov
ja
rcr
mov
lds
sbb
int
xchg
cmps
xchg
nop
jbe
movs
mov
dec
adc
cmp
scas
test
pop
xor
push
add
mov
cli
jne
mov
ret
sub
pop
leave
dec
pop
mov
out
mov
adc
(bad)
jmp
test
dec
in
test
xchg
shl
jmp
lea
clc
and
and
in
out
mov
hlt
(bad)
sub
shr
and
xchg
inc
xchg
jp
lea
in
inc
jnp
xchg
and
mov
or
ja
and
mov
dec
jle
cmps
mov
xchg
outs
data16
aad
repnz
sbb
data16
add
push
inc
fsubp
or
xchg
mov
cwde
call
adc
fwait
sti
xor
xor
or
push
cld
lods
cld
fistp
adc
mov
push
and
clc
push
nop
in
aam
leave
sub
sbb
test
neg
jge
and
cmc
pusha
cmp
mov
cmp
add
shl
imul
mov
cmp
or
mov
xchg
aam
jle
dec
aaa
call
lods
sti
or
xor
adc
cmp
rcr
fimul
and
xor
das
adc
mov
aas
fstp
push
(bad)
daa
or
mov
fst
scas
mov
or
or
out
test
(bad)
mov
and
xor
ins
stos
cmp
jnp
cmc
cmp
or
mov
add
(bad)
jmp
(bad)
lock
shl
sub
shr
bound
call
iret
inc
push
stos
call
hlt
push
mov
pop
sbb
pop
add
pop
and
nop
mov
aad
pop
in
sbb
mov
movs
jns
sub
fistp
jns
cld
inc
jne
ja
div
mov
cmp
dec
test
mov
adc
cmp
jno
ss
jnp
xor
xor
push
leave
or
int
pusha
mov
mov
in
in
cmc
jl
aam
and
adc
fwait
loop
mov
xor
xor
loopne
inc
mov
call
add
sub
je
clc
mov
or
loop
(bad)
mov
daa
enter
jae
cmp
add
push
mov
and
sahf
adc
cmp
leave
rcl
pop
ds
adc
xchg
shl
hlt
aas
aaa
jle
test
mov
stos
ins
jns
jb
adc
int
ja
fldenv
jecxz
movs
(bad)
(bad)
aad
in
sbb
push
data16
mov
sub
cmp
outs
inc
push
inc
cmc
retf
jmp
xor
mov
outs
nop
(bad)
in
daa
or
and
lea
dec
into
push
jae
adc
xor
mov
pushf
pop
jge
(bad)
std
xorps
push
(bad)
std
jmp
out
dec
push
int
jmp
popa
dec
fcmovnb
add
out
imul
add
mov
pop
in
fild
scas
or
sbb
sub
in
imul
lahf
pop
das
es
repz
xchg
inc
hlt
int3
frstor
xor
cmp
inc
je
dec
imul
add
test
jns
je
inc
xor
inc
int3
aas
(bad)
clc
in
repnz
xor
jnp
out
xchg
imul
adc
pop
mov
inc
push
dec
daa
cmp
xchg
shl
mov
out
std
nop
test
addr16
pop
loopne
mov
or
mov
push
in
pop
sbb
test
lock
lock
div
jmp
adc
mov
dec
mov
and
std
jg
xchg
fwait
sub
mov
je
dec
adc
retf
xor
mov
sub
repnz
xchg
in
je
mov
pop
ret
dec
mov
inc
inc
pop
movs
sbb
aad
cli
outs
adc
push
cmps
jns
dec
push
dec
(bad)
mov
fild
das
xchg
xchg
call
imul
jl
sbb
mov
xchg
mov
std
(bad)
mov
sti
int
add
dec
adc
iret
pop
call
sahf
pop
mov
cmc
xor
sbb
push
sbb
add
cmp
retf
fist
movs
cwde
pop
daa
fcom
push
sbb
lds
xor
(bad)
shl
pop
push
sub
mov
add
neg
dec
inc
jo
ins
(bad)
enter
adc
add
mov
sub
lock
sub
dec
imul
mov
ret
popa
int3
(bad)
popf
xchg
add
and
dec
jo
stos
cwde
div
jecxz
sub
outs
rcl
mov
sub
fidivr
pop
push
test
xchg
lea
pop
lods
inc
ret
jmp
dec
add
mov
fwait
loop
imul
lock
sub
mov
ret
pop
addr16
or
pop
cmp
push
leave
daa
mov
mov
pop
ret
adc
xchg
xlat
sbb
int
mov
push
inc
icebp
dec
sub
pushf
sti
mov
repz
inc
push
dec
mov
jno
xor
cli
aaa
stc
and
jge
dec
rol
add
hlt
rol
outs
ins
and
pop
fldenv
in
sub
inc
bnd
add
movs
popa
lds
inc
jnp
les
sub
mov
loopne
je
sub
out
mov
or
xor
jnp
xor
das
movs
inc
xchg
xor
ds
cdq
inc
mov
(bad)
and
mov
cdq
xor
out
dec
out
shl
xor
(bad)
outs
js
ret
nop
jge
cld
jne
mov
iret
fidiv
ror
pop
jmp
dec
inc
dec
retf
sahf
sub
in
sbb
mov
cmps
push
push
mov
in
dec
inc
sar
fsubr
mov
frstor
lock
sbb
scas
mov
outs
ret
cdq
sub
jmp
js
and
pop
xchg
pop
dec
pop
cmovle
dec
pop
push
shl
xor
ss
ret
inc
ror
mov
and
into
mov
shl
jmp
je
xor
ins
mov
sbb
xchg
xlat
sbb
jge
test
xor
stos
ret
shl
mov
stos
cs
jmp
sub
loope
ds
and
push
shr
loop
add
xor
fisubr
mov
pop
jmp
push
xor
movs
dec
ret
test
sti
and
jns
scas
fst
loopne
sub
(bad)
repnz
aaa
ss
(bad)
ret
shl
fnstenv
pop
or
out
loopne
mov
jge
data16
jp
xchg
stc
mov
fnsave
pop
and
pop
out
inc
shl
mov
retw
inc
imul
rcl
cmp
mov
inc
xchg
movs
(bad)
pop
adc
inc
and
mov
pusha
test
cmp
(bad)
xor
sbb
aam
add
jbe
mov
jbe
jmp
les
enter
data16
paddsb
jp
dec
push
push
(bad)
rep
sahf
out
ds
dec
or
cmp
or
push
lahf
aas
pop
jae
push
daa
sub
xor
xchg
jecxz
mov
dec
mov
cmp
xchg
aam
mov
jp
pop
imul
and
dec
push
aaa
dec
adc
sub
call
jge
lods
mov
mov
push
stos
ins
movs
popa
mov
xor
pop
fs
or
jecxz
outs
xor
es
in
loop
add
adc
hlt
cmp
popf
lahf
xchg
lea
loop
int3
push
and
in
aam
out
ss
or
dec
push
stos
jns
dec
cli
outs
cs
push
fnstsw
jne
aad
jo
es
fcmovb
mov
xchg
aam
dec
mov
repnz
and
pop
test
pop
xor
jmp
xchg
outs
mov
imul
jno
pop
xlat
lods
std
retf
and
jp
dec
mov
stc
sub
jae
stos
mov
mov
ds
mov
fcmovb
sbb
dec
xor
pop
xchg
pop
(bad)
and
imul
retf
movs
dec
ds
push
sub
out
rcr
lods
imul
fist
out
sbb
imul
mov
cs
cdq
sar
fmul
pop
retf
mov
imul
pop
call
jne
in
jge
or
mov
inc
icebp
popf
sahf
iret
sahf
cli
sti
std
test
push
cld
popf
fmul
shl
popa
pop
pop
sbb
je
mov
sub
pop
lds
ins
and
fcomp
mov
lea
add
adc
jnp
xor
sbb
rol
(bad)
(bad)
iret
popa
stos
fdiv
xor
xor
pop
or
push
repz
pop
fisttp
xor
xor
jg
mov
fadd
or
out
cmp
jmp
dec
sbb
sbb
xor
or
mov
push
mov
stc
xchg
xchg
sub
mov
inc
and
int3
icebp
pop
ins
xor
add
sbb
std
fbld
sub
jo
cld
dec
cmps
xchg
cmps
push
lea
push
mov
aad
pop
jb
adc
pop
mov
in
movs
cmps
(bad)
push
mov
jmp
int
cmp
xchg
xchg
nop/reserved
or
sbb
ja
xchg
ds
cs
mov
(bad)
leave
dec
dec
mov
dec
aad
mov
mov
pop
(bad)
xchg
cmc
cmp
jecxz
call
mov
jo
setle
push
jge
dec
push
cdq
pop
mov
xchg
sbb
fidivr
stos
sahf
or
xor
dec
mov
push
adc
(bad)
jg
(bad)
adc
sbb
jmp
and
jnp
lea
mov
mov
xlat
mov
jnp
add
adc
pop
cmp
mov
sub
add
shr
xor
sub
popa
adc
dec
gs
(bad)
leave
adc
neg
addr16
test
inc
and
fs
(bad)
jo
jae
fcomp
(bad)
push
adc
mov
add
les
scas
int
fwait
xchg
cmp
ins
prefetchwt1
xchg
mul
cmp
mov
addr16
adc
or
(bad)
push
bndstx
fcmovnu
push
pop
aad
xor
inc
mov
loop
adc
out
mov
sub
mov
aam
jmp
cwde
scas
fwait
mov
(bad)
(bad)
jl
adc
mov
aas
out
(bad)
xor
and
in
cmps
pop
cmp
jmp
pushw
jns
adc
jno
imul
movs
mov
and
popa
sub
push
into
sbb
pop
push
gs
pop
xchg
ss
nop
loop
and
retf
retf
std
ss
adc
dec
(bad)
push
adc
jae
pop
les
mov
mov
mov
sbb
dec
aam
cdq
adc
ds
add
mov
add
dec
imul
popf
pmaxsw
mov
sbb
mov
adc
xchg
aaa
mov
or
imul
push
push
adc
std
rol
jno
bound
sub
push
into
sub
nop
sbb
or
(bad)
loopne
jnp
pop
rcl
iret
scas
lock
adc
mov
(bad)
nop
mov
sub
aaa
data16
pop
jb
sub
das
arpl
and
sbb
inc
es
push
inc
add
data16
dec
aaa
add
inc
dec
xor
mov
adc
sbb
mov
add
fist
jo
dec
ja
push
mov
xchg
xchg
out
xor
lods
je
nop
xor
mov
mov
or
jnp
int3
pop
cmps
cld
sub
lds
push
adc
int
outs
dec
jae
cmp
cmc
cld
xchg
mov
jecxz
jmp
adc
sub
out
shl
mov
dec
dec
fisttp
jns
xor
daa
rcl
retf
and
fidivr
mov
sti
sub
(bad)
mov
aam
mov
cmp
movs
mul
mov
xchg
pop
daa
mov
(bad)
cmc
loope
mov
mov
pop
(bad)
mov
adc
fwait
push
mov
pop
push
aas
mov
push
sar
cs
pop
sub
inc
fimul
out
dec
jnp
movs
out
dec
ins
dec
imul
xchg
nop
into
adc
jne
and
xor
inc
add
lock
lods
fneni(8087
ins
push
pop
dec
leave
sub
mov
sbb
inc
mov
popf
mov
dec
xchg
in
nop
cdq
popa
in
push
outs
sbb
scas
ret
or
cmps
repz
cmp
outs
psubq
fstp
retf
repz
pop
push
xlat
inc
mov
jge
(bad)
jmp
pop
je
add
cli
pop
cmc
inc
clc
data16
sub
xchg
lods
jo
test
cs
rol
call
inc
jnp
cld
cld
mov
repz
jl
sub
xchg
jmp
pop
fucom
in
mov
mov
pop
repz
cmc
int3
ret
dec
ja
repnz
jo
mov
cmps
mov
popa
adc
test
fimul
(bad)
jmp
ja
bound
jmp
jl
push
xchg
xchg
xor
jb
lods
fidivr
fcomp
bound
or
mov
repz
fs
xlat
fcomp
mov
inc
mov
hlt
or
fcom
pushf
aaa
out
mov
and
aaa
jecxz
popf
movs
push
push
cmp
leave
and
(bad)
cli
retf
fnstenv
stos
and
into
add
ins
dec
dec
aas
sub
jo
ficom
mov
sbb
push
jp
and
mov
add
out
fidivr
call
mov
dec
fisubr
pop
inc
or
popf
dec
(bad)
test
xchg
cmp
rcr
dec
inc
mov
xchg
mov
push
cli
stc
sub
xchg
cwde
add
sub
mov
add
cmp
lea
jmp
sti
(bad)
sub
enter
inc
cmc
mov
jmp
inc
cmp
adc
sub
cmp
sahf
add
loop
loopne
test
jp
mov
xlat
int
and
jbe
mov
sub
clc
in
sbb
pop
out
ins
push
push
nop
call
rcr
in
pop
xor
addr16
test
mov
xchg
xchg
test
cmp
push
(bad)
mov
or
mov
call
mov
add
aad
and
and
add
call
(bad)
daa
xchg
mov
add
xor
pop
push
repz
jns
sbb
dec
sbb
sbb
outs
lahf
add
stos
sbb
and
inc
sar
fild
call
jmp
(bad)
out
outs
push
es
mov
(bad)
out
popf
and
pop
mov
sub
sub
xchg
sbb
mov
mov
dec
js
sub
movs
stc
nop
ret
dec
retf
jmp
mov
clc
(bad)
daa
and
push
stos
push
push
scas
imul
sub
cmps
xor
sbb
jmp
aam
mov
aad
sub
lahf
lods
fcmovne
mov
cmc
out
push
fadd
mov
mov
inc
adc
mov
mov
add
mov
xchg
jp
fimul
xlat
cmp
cmp
mov
add
mov
cmp
test
(bad)
cdq
repnz
inc
or
push
cmp
push
dec
mov
icebp
dec
loop
xor
pop
adc
sbb
cmps
dec
inc
cdq
lahf
jb
fidivr
sub
mov
inc
test
push
(bad)
repz
(bad)
repz
lea
loop
icebp
dec
in
into
xchg
ret
test
or
das
(bad)
out
pop
add
lahf
loop
aam
xchg
add
cmp
leave
dec
das
data16
mov
pushf
jmp
cmc
push
inc
in
xchg
cmps
mov
jmp
cs
call
sahf
sar
or
add
xor
lea
xor
mov
mov
and
push
xor
inc
dec
mov
mov
dec
add
or
mov
std
sub
mov
jle
push
lods
lea
enter
ficomp
mov
cli
mov
adc
ins
test
jae
test
lods
cmc
inc
add
fs
mov
push
movs
xchg
fwait
push
jae
aad
aaa
mov
(bad)
(bad)
fdiv
repz
pushf
push
retf
aas
pop
sub
in
outs
int3
jmp
test
iret
iret
fnstenv
mov
leave
mov
dec
jmp
or
mov
or
and
and
mov
or
jo
pop
mov
stos
adc
stos
imul
cwde
pop
pushf
jbe
push
rcl
in
sub
push
popa
inc
retf
test
lahf
pop
mov
je
xor
adc
je
xchg
fisttp
rol
and
adc
test
inc
xchg
cli
data16
neg
call
xchg
pusha
inc
mov
mov
xchg
jne
mov
leave
dec
(bad)
push
mov
xchg
rol
mov
add
sbb
ret
inc
in
xor
(bad)
clc
fs
or
mov
retf
inc
xchg
cmc
xchg
xor
xchg
lea
gs
aas
outs
sahf
cdq
das
not
scas
lds
mov
xchg
pop
or
shr
jmp
adc
mov
retf
test
xor
adc
test
addr16
call
cwde
cmp
inc
stos
div
movs
(bad)
repnz
retf
sar
dec
push
xchg
shl
in
pop
ins
push
popa
ret
add
jmp
imul
dec
leave
jb
or
ss
iret
dec
leave
mov
dec
leave
sbb
cmp
(bad)
daa
push
adc
xchg
out
(bad)
fucomip
out
nop
lods
and
mov
push
xchg
mov
dec
and
mov
stos
jmp
mov
jns
mov
or
xchg
lahf
cli
xor
pop
lock
sub
cli
imul
dec
cdq
push
scas
ins
push
sub
repnz
mov
aaa
dec
out
mov
fcmovbe
dec
push
inc
inc
out
(bad)
cmp
enter
mov
xor
mov
mov
ficomp
or
mov
(bad)
and
and
cmp
jl
mov
(bad)
cld
xchg
dec
lea
lea
(bad)
test
push
dec
iret
sbb
js
mov
mov
or
movs
loopne
leave
fstp
ror
add
sub
rol
mov
mov
cmp
jne
repnz
or
inc
mov
shl
and
mov
xchg
mov
jmp
push
loopne
ja
in
xor
leave
mov
push
cmp
mov
rol
pop
out
inc
pop
dec
in
and
push
fwait
or
shr
mov
ret
cmp
lock
or
pop
sbb
add
or
mov
fisttp
xchg
add
cld
fs
mov
cmc
dec
xchg
push
adc
jb
inc
xor
sbb
inc
imul
int3
cmps
pop
add
enter
bound
sbb
sti
popa
xchg
loopne
mov
pop
mov
jno
inc
in
and
test
gs
mov
ret
cwde
in
cmps
out
jmp
xor
pop
