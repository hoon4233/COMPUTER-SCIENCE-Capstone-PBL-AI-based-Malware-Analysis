test
xchg
dec
rol
mov
inc
ret
not
mov
int3
mov
cld
and
jns
jge
sub
je
inc
jnp
or
cmps
mov
stos
scas
and
inc
xchg
push
pop
or
data16
imul
call
pop
sbb
lods
aas
or
xchg
lods
adc
sub
(bad)
xlat
xchg
into
icebp
add
cld
int
dec
pop
call
dec
jge
xchg
cmps
aas
mov
icebp
ins
mov
dec
mov
mov
dec
out
(bad)
mov
(bad)
rcr
jne
jl
(bad)
stos
jns
sti
xchg
jns
and
mov
xchg
rcl
mov
push
jne
aaa
pusha
pop
xchg
nop
ins
mov
je
test
mov
mov
push
movs
fwait
pushf
mov
mov
ret
in
cmp
(bad)
pushf
push
push
cdq
test
hlt
push
jne
cmps
stos
mov
mov
fstp
or
ficom
rcl
mov
inc
rol
fcomp
xchg
test
adc
imul
xchg
sahf
shl
outs
cmc
push
dec
push
xchg
push
cld
sub
push
les
fs
(bad)
xchg
scas
sbb
push
shl
ror
pop
test
push
rcr
lods
cld
xchg
adc
pushf
dec
shr
sbb
mov
dec
or
movs
mov
add
xchg
movs
cs
pop
popf
bound
sbb
adc
aas
mov
mov
jb
mov
cmps
mov
sbb
nop
pop
popf
jne
outs
pop
ja
leave
(bad)
iret
xchg
fisub
xchg
jecxz
or
imul
jge
call
aam
sub
xor
scas
mov
cmp
int3
jecxz
or
cli
cdq
xchg
mov
cmps
mov
movs
call
out
popf
mov
mov
mov
cwde
repnz
or
js
xchg
or
xor
stos
xor
addr16
clc
pop
(bad)
(bad)
push
xchg
(bad)
mov
pop
sbb
sar
sbb
sub
pop
test
mov
stc
and
lods
loope
neg
or
ja
cwde
adc
pushf
lds
sbb
xor
arpl
mov
in
movs
fidivr
mov
stos
cmps
dec
mov
inc
pop
xchg
movs
outs
icebp
and
adc
mov
mov
gs
dec
(bad)
aas
outs
das
fwait
sbb
xor
ja
sbb
mov
pop
adc
mul
push
dec
inc
adc
push
add
lods
outs
cmp
mov
mov
push
(bad)
aad
inc
mov
sbb
mov
test
out
sub
push
or
xchg
cmp
call
and
sub
mov
sub
loopne
stos
pop
mov
pop
xor
pop
lds
int3
lods
adc
pop
into
sbb
outs
fs
cmps
lahf
cmp
xchg
call
or
xchg
mov
addr16
lds
fnstsw
mov
sbb
xor
popa
mov
popf
mov
inc
rcr
scas
xchg
or
jnp
push
jns
jecxz
lds
mov
cmp
sahf
addr16
or
adc
mov
mov
xor
stos
je
dec
mov
daa
sahf
pop
dec
stos
pusha
shr
jnp
mov
adc
or
pop
adc
xchg
push
mov
or
add
hlt
and
and
inc
fs
xor
jns
movs
mov
push
pop
mov
inc
loop
xchg
xchg
jp
movs
pop
imul
mov
call
pop
dec
movs
inc
sbb
stos
and
int
(bad)
and
movs
dec
pop
mov
ins
mov
(bad)
xor
pop
dec
out
xchg
aas
pop
pop
inc
mov
retf
push
cmps
mov
pop
daa
out
and
add
dec
cwde
leave
(bad)
inc
fs
xchg
sub
adc
mov
repnz
daa
daa
out
sbb
sbb
xor
pop
(bad)
out
mov
(bad)
enter
adc
test
push
js
shr
dec
ror
or
fcmovbe
sbb
popa
outs
inc
adc
je
jne
sub
pop
lods
cwde
pop
addr16
or
sahf
and
fidiv
dec
mov
mov
mov
fs
jne
mov
jmp
test
mov
mov
movs
enter
push
xchg
pop
xchg
data16
nop
repz
mov
jne
push
pop
aaa
adc
jmp
sbb
push
aam
jmp
pop
sbb
movs
push
jne
cwde
movs
jl
nop
mov
jne
push
stc
pop
or
xor
das
push
jmp
fdiv
jl
fmul
xor
xchg
inc
enter
dec
inc
mov
test
and
mov
add
xchg
movs
inc
xchg
lds
jg
test
fcom
shl
fwait
mov
jbe
sbb
pop
ins
or
sbb
aad
sub
pushf
outs
and
scas
dec
ins
inc
sbb
in
loope
add
(bad)
ror
sub
jbe
jmp
push
and
(bad)
xlat
sbb
mov
aas
(bad)
call
(bad)
sub
adc
lods
jg
mov
xchg
and
loope
push
pop
bound
add
push
or
and
dec
ins
imul
xchg
imul
or
xor
jne
ficom
adc
xlat
adc
push
outs
push
repnz
out
or
jne
call
or
xchg
leave
gs
add
inc
out
inc
cmp
jnp
in
dec
daa
mov
push
jne
xchg
nop
aam
mov
out
ss
jl
jl
bound
mov
test
imul
push
inc
lea
xor
mov
sbb
jle
pop
jge
mov
pop
dec
cmps
in
mov
(bad)
lods
je
mov
cmp
cwde
mov
sbb
pop
stos
mov
sahf
adc
add
loopne
adc
movs
repz
or
xchg
lds
aas
xchg
cli
mov
sub
cmp
ds
stc
(bad)
mov
mov
psubq
pop
inc
dec
push
push
fwait
inc
lahf
mov
xchg
sbb
sbb
lea
pop
lds
pushf
sar
pop
xchg
or
fwait
jbe
sbb
imul
or
pusha
adc
xchg
jae
popf
cmp
push
xchg
dec
loope
sbb
inc
and
dec
outs
cld
xor
inc
xor
jno
aad
dec
xchg
mov
jmp
mov
sbb
push
sbb
mov
xor
lea
test
mov
pushf
int3
mov
jl
repnz
xchg
mov
push
cmp
call
lock
sbb
mov
mov
aam
sbb
movs
mov
out
arpl
inc
in
(bad)
fsubr
ds
and
add
mov
xor
pop
addr16
mov
and
or
mov
movs
push
addr16
test
mov
hlt
retf
call
pop
jl
inc
outs
push
dec
mov
out
icebp
cmp
cmps
add
inc
pop
mov
test
mov
rol
mov
inc
pop
data16
and
jne
mov
jmp
or
mov
and
pusha
dec
sahf
inc
stc
sbb
inc
or
pop
push
imul
and
mov
in
and
jbe
cwde
push
iret
adc
rcl
adc
dec
fild
pop
in
neg
das
test
imul
imul
xchg
or
stc
pop
bound
into
jle
out
lea
(bad)
mov
outs
fs
pop
sub
and
push
rcl
mov
push
xor
ja
pop
mov
and
sar
mov
cdq
aas
dec
xor
fimul
xchg
rcr
xor
mov
jae
scas
outs
jl
fisttp
adc
ins
xchg
pop
pop
(bad)
jle
daa
in
mov
sbb
popa
mov
mov
inc
jnp
aas
cmp
inc
dec
iret
xchg
cmp
push
sub
test
int
jmp
aas
cmps
xchg
inc
rcr
aas
mov
adc
sub
mov
mov
test
sub
sar
mov
ficomp
pop
mov
adc
adc
lahf
mov
stc
pop
(bad)
adc
fdiv
movs
inc
push
mov
shl
sbb
leave
sbb
xchg
inc
test
jmp
cmp
cmps
mov
push
mov
cli
lods
xchg
add
das
push
outs
cmp
pop
cld
outs
mov
ret
dec
pop
and
ss
xchg
call
jae
adc
mov
jns
cmp
call
test
inc
inc
aas
xor
int3
sub
test
sar
shl
test
repz
pop
jge
jecxz
add
xchg
pop
mov
mul
push
mov
mov
lahf
inc
sub
fmulp
mov
test
mov
test
inc
adc
call
jmp
std
mov
mov
inc
mov
push
in
retf
mov
adc
xchg
add
mov
jnp
push
retf
iret
cdq
es
sub
xlat
add
in
pusha
cmps
std
xchg
call
jae
cmp
jbe
cmp
push
mov
inc
addr16
mov
mov
mov
js
data16
inc
jp
or
dec
jbe
add
inc
nop
data16
(bad)
pop
ja
mov
daa
mov
xchg
pusha
jnp
retf
ja
(bad)
jnp
mov
xchg
aam
std
lds
stos
push
sub
pop
loop
mov
cmc
movs
dec
cmp
push
dec
sub
in
xor
ins
pop
mov
das
and
add
cmp
(bad)
jns
mov
enter
loopne
dec
cmp
nop
sahf
int3
rcl
sbb
push
lods
or
jo
mov
aam
xor
(bad)
mov
pop
sbb
imul
jge
cmp
cmps
push
xchg
mov
xor
add
pusha
jae
sbb
push
xchg
pop
xchg
jg
sub
dec
dec
sar
xchg
cwde
pop
push
xchg
std
or
mov
lahf
adc
lea
push
ror
jns
or
scas
retf
mov
ins
test
int3
mov
lds
sub
xchg
inc
jb
jns
sub
xlat
daa
and
(bad)
test
xchg
call
sbb
adc
or
int3
mov
(bad)
ds
and
shl
jle
jo
mov
mov
cld
sbb
stc
mov
xchg
cmp
xlat
xchg
inc
data16
and
into
fist
dec
and
repz
lea
idiv
mov
enter
mov
gs
je
xor
rcr
xchg
fwait
jge
mov
ins
and
and
mov
imul
repnz
xor
(bad)
ss
cld
jmp
add
(bad)
mov
or
int
in
xor
mov
sbb
loopne
retf
mov
aas
fadd
push
outs
mov
ror
pop
shl
addr16
inc
jno
or
sahf
stos
dec
sub
cmps
adc
mov
es
add
add
aas
xor
add
loope
loopne
mov
jge
or
sbb
ds
dec
fst
pop
popa
test
cmps
outs
cmp
mov
xlat
sub
mov
in
test
push
jne
mov
gs
retf
push
dec
lea
xchg
sar
lds
mov
call
jmp
das
data16
mov
mov
cwde
std
mov
(bad)
mov
scas
cli
inc
push
jns
das
sbb
outs
dec
pusha
fstp
xchg
gs
mov
sub
dec
mov
fisub
fsubr
and
pop
xchg
ins
jp
mov
xchg
int
mov
xchg
ror
loop
fcom
push
jbe
jnp
(bad)
push
in
rol
lea
adc
in
push
mov
inc
sbb
mov
cmp
xchg
mov
and
arpl
loop
or
push
sub
test
das
ins
jge
inc
ror
in
loopne
sub
dec
xor
ret
pushw
lds
out
je
(bad)
xchg
les
pushf
ins
rcr
imul
or
cmp
iret
mov
mov
ins
fcomp
xor
xchg
dec
in
mov
xchg
xchg
and
pop
inc
adc
jmp
ror
aas
shl
jmp
movs
mov
pop
jecxz
pop
ins
mov
out
mov
mov
xchg
neg
push
into
aam
in
sub
cmp
iret
push
iret
aas
push
test
pop
push
int
adc
es
mov
xor
(bad)
cmp
ins
and
xchg
mov
int3
mov
sbb
push
sub
add
dec
and
add
ins
inc
mov
imul
inc
xchg
mov
jecxz
cwde
arpl
sbb
clc
add
fcomp
jle
jbe
fld
in
lds
push
jnp
(bad)
mov
cli
jo
sub
or
retf
push
bound
loop
jge
or
jbe
jg
push
inc
lods
mov
cmp
mov
sub
mov
adc
pop
pop
cmp
push
leavew
icebp
push
sbb
mov
xchg
data16
ffree
imul
inc
push
and
inc
add
imul
sbb
pop
adc
jno
fsubr
das
pop
cmp
dec
xchg
xchg
js
daa
and
ds
adc
xchg
inc
sub
xor
int3
call
ja
add
mov
adc
mov
inc
rcl
ins
pop
dec
jnp
cmps
pop
repnz
inc
mov
push
xor
xchg
xchg
cmp
jbe
add
fidiv
mov
push
mov
mov
stos
cdq
and
daa
xchg
mov
push
imul
sbb
xor
in
xlat
jne
adc
pop
xchg
fisttp
out
(bad)
imul
sar
outs
ja
sub
das
(bad)
pop
adc
jg
mov
pop
xchg
pop
pop
out
scas
int3
mov
je
mov
mov
outs
stos
repnz
ror
push
jae
popf
js
loope
je
mov
popf
push
push
cli
hlt
int
mov
movs
ins
cs
sahf
inc
mov
(bad)
leave
or
push
pop
inc
movs
movs
test
add
jne
push
(bad)
iret
dec
ss
rcr
ss
js
mov
inc
in
out
test
mov
rol
xchg
in
mov
mov
sahf
test
xor
lods
dec
jp
lock
mov
call
push
sub
ja
pop
or
xlat
inc
pop
scas
call
pop
lahf
jle
imul
cld
mov
push
cwde
(bad)
dec
je
mov
and
out
push
adc
enter
or
lods
xchg
xchg
cli
arpl
std
iret
or
mov
dec
clc
not
or
xchg
xlat
test
aas
test
add
dec
jnp
push
lahf
fmul
push
js
push
jne
sbb
div
xor
outs
or
lea
mov
jns
popa
push
jge
cmp
add
sub
sbb
jecxz
pop
sub
lods
push
push
mov
mov
cmp
pushf
aas
mov
jns
pop
iret
xchg
dec
ficomp
mov
imul
sbb
jno
mov
xchg
fisttp
pusha
pop
lea
xor
inc
sahf
pop
dec
mov
sbb
bound
mov
(bad)
shr
xchg
or
pop
xor
push
mov
xchg
jno
mov
fnstenv
push
push
test
dec
pop
and
sub
xchg
xchg
push
push
pop
fwait
mov
aad
jge
jg
jne
jl
arpl
gs
gs
scas
jbe
xchg
movs
dec
and
test
mov
mov
sbb
mov
repnz
sbb
loopne
mov
ins
sbb
dec
xor
xchg
xchg
lods
push
jmp
enter
dec
inc
mov
jl
sahf
mov
jg
test
rcl
in
int3
enter
inc
dec
pop
mov
sub
push
in
mov
popf
pop
xchg
popf
ins
out
sbb
cli
(bad)
cwde
imul
add
jne
jp
arpl
dec
cmp
fwait
pop
test
push
xlat
and
xchg
shr
rcr
add
sub
(bad)
sbb
mov
push
ja
repz
xchg
and
pop
daa
sahf
movs
cmp
mov
int3
sbb
sbb
lea
inc
dec
test
lahf
sar
jns
(bad)
push
movs
xchg
xchg
push
addr16
(bad)
jae
call
js
mov
inc
add
mov
mov
xchg
jge
mov
mov
pushf
mov
jae
test
int3
mov
xor
pushf
and
shl
mov
adc
out
inc
push
cmps
or
dec
dec
nop
cmp
xchg
gs
adc
stos
sbb
mov
in
(bad)
enter
mov
enter
aam
test
add
jg
daa
mov
fdivr
iret
jmp
or
daa
mov
fcom
sbb
jae
add
addr16
xchg
test
ins
push
repz
imul
push
outs
lods
mov
(bad)
sub
sbb
xor
add
pop
ficomp
cwde
fsubr
aas
data16
sbb
push
mov
out
retf
xor
and
cmc
sub
(bad)
fstp
lock
or
pop
inc
arpl
and
iret
dec
adc
jae
adc
cwde
sub
and
mov
push
xchg
scas
test
mov
add
mov
sbb
loop
push
xchg
ins
in
add
lods
int
jmp
jmp
mov
hlt
es
(bad)
and
dec
push
xchg
out
jle
mov
hlt
mov
inc
and
outs
mov
les
ror
(bad)
sbb
(bad)
pop
movs
std
loop
mov
xlat
aam
cmp
pop
sbb
stos
and
adc
xor
lahf
jnp
imul
pop
pop
jmp
add
scas
pop
or
es
in
call
stc
cmp
(bad)
frstor
cmp
mov
clc
dec
cmp
jno
xchg
mov
or
scas
xchg
and
mov
ficom
aam
mov
fst
inc
xchg
xor
or
rcr
xchg
xor
jmp
std
rcr
push
jg
in
jl
or
dec
test
(bad)
add
cmp
js
xchg
jae
or
mov
cmps
test
push
hlt
add
addr16
pop
movs
pop
inc
(bad)
pop
xchg
and
jl
dec
or
push
fcom
pop
fwait
pinsrw
pop
add
mov
xchg
ror
push
in
inc
mov
mov
sub
sub
in
xchg
bound
mov
push
jne
fdivr
jne
inc
scas
(bad)
mov
cld
sbb
test
mov
pop
xor
push
das
test
sbb
sar
push
shr
int
jp
mov
mov
and
pop
mov
ficomp
jno
mov
inc
mov
mov
lods
call
ficomp
mov
pop
out
addr16
in
ss
and
dec
xchg
adc
hlt
adc
mov
xchg
push
dec
ja
sbb
jae
sbb
push
(bad)
and
out
jle
mov
pop
sub
jae
mov
enter
inc
xchg
rcr
(bad)
and
inc
xchg
mov
jp
jbe
(bad)
aam
sub
and
iret
lods
das
clc
pop
dec
pop
or
(bad)
outs
int3
add
lahf
cmp
mov
xchg
push
(bad)
cmp
jae
xchg
movs
add
(bad)
cmp
xor
enter
and
movups
daa
retf
in
push
das
xchg
pop
daa
es
cmc
jecxz
push
repnz
cmps
leave
dec
mov
iret
mov
ret
xchg
push
outs
push
mov
cmps
pop
mov
mov
mul
loope
lock
in
sbb
push
into
mov
sub
in
pop
stos
mov
neg
aas
inc
inc
jle
test
mov
aad
pop
cmp
xchg
out
dec
or
adc
lods
stos
jg
arpl
jp
add
jg
push
pop
mov
adc
inc
mov
inc
fs
daa
mov
inc
or
cmps
cmps
cwde
cmp
and
pusha
aam
cmps
inc
jo
mov
leave
mov
iret
sub
xor
dec
sub
call
xor
xchg
(bad)
rcl
sbb
pop
cli
mov
or
sub
hlt
scas
mov
mov
jle
mov
(bad)
in
jae
and
sbb
in
push
sub
mov
out
mov
mov
push
sbb
dec
pop
not
mov
mov
retf
fidiv
xchg
stos
or
dec
mov
mov
mov
popf
lahf
add
xchg
(bad)
and
xchg
in
ret
lods
mov
mov
jmp
sub
call
mov
fcmovb
call
jo
fdivr
test
xchg
pop
jns
mov
(bad)
inc
aad
nop
popf
sbb
sti
(bad)
shl
retf
xchg
inc
dec
xchg
push
loopne
dec
enter
push
dec
or
sub
add
mov
sbb
adc
pop
(bad)
lock
or
dec
pop
out
xchg
push
xchg
sub
mov
jno
dec
imul
fiadd
cmp
cwde
or
push
dec
xchg
push
test
in
xor
and
aas
cwde
jecxz
xchg
mov
jae
mov
xchg
test
cmp
dec
mov
xchg
mov
int
push
xchg
fsubr
xchg
and
in
pop
cdq
imul
fcomp
mov
out
lds
mov
outs
imul
repnz
movs
sub
jae
add
push
cdq
mov
mov
xchg
sbb
cmps
stos
push
movs
cmp
xor
lock
mov
add
xchg
pushf
stos
mov
xchg
pop
lea
imul
shr
retf
lods
jns
repnz
mov
jg
add
mov
test
mov
inc
dec
jl
fld
mov
mov
popf
sub
push
shl
int
imul
add
pop
popa
mov
push
loopne
xor
push
cmp
stc
outs
mov
xlat
jne
sahf
outs
mov
mov
xor
jmp
(bad)
enter
mov
sbb
vpsrlq
sbb
lea
in
push
adc
xchg
pop
(bad)
(bad)
xlat
or
adc
adc
inc
push
mov
jnp
loope
push
mov
sahf
test
imul
in
or
fwait
pop
push
sub
call
mov
(bad)
jo
iret
inc
xor
or
jge
xchg
sahf
sub
(bad)
xor
xchg
iret
or
cmp
aad
jle
test
mov
dec
imul
and
(bad)
mov
enter
stos
mov
inc
mov
adc
call
outs
mov
pushf
add
mov
jae
add
push
jae
and
pop
pop
loopne
out
nop
adc
mov
adc
jl
rcl
inc
idiv
outs
jae
jb
fdiv
mov
jge
loope
pop
mov
sub
cmps
sahf
sub
sub
pop
and
cmps
icebp
ror
jge
dec
test
or
or
out
sub
test
mov
clc
popf
imul
data16
bound
es
mov
inc
sub
dec
jge
xor
ja
dec
jle
inc
daa
push
mov
add
jns
cwde
inc
xchg
imul
loope
jae
xor
and
sbb
pop
packssdw
aam
icebp
out
div
iret
lea
jo
dec
xchg
imul
mov
pop
fwait
mul
jne
loop
mov
scas
pop
js
or
pop
outs
les
mov
push
mov
xor
bound
jmp
jmp
sar
xchg
pop
mov
test
push
or
scas
xchg
cdq
and
and
dec
mov
mov
pop
aad
xor
xor
lahf
jo
sub
dec
fld
dec
lahf
push
push
adc
sub
push
ds
scas
test
mov
jmp
lahf
sub
inc
pop
dec
loopne
(bad)
mov
xchg
adc
aam
cmp
xchg
or
imul
pop
addr16
(bad)
and
mov
inc
jo
cmp
ins
outs
pop
fisubr
inc
inc
int
adc
and
pop
mov
adc
mov
idiv
dec
aaa
mov
push
aaa
nop
(bad)
pop
rol
mov
sbb
push
xor
fcom
sub
pop
test
push
pop
sbb
or
adc
dec
mov
outs
pop
mov
pop
fcom
lods
lods
movs
js
ss
sbb
and
sub
push
sbb
je
mov
mov
xchg
cmp
mov
mov
jmp
fnstsw
add
sub
cmp
fcom
push
fmul
cs
push
enter
ret
xchg
pop
cs
cmps
lods
cmp
mov
(bad)
lea
or
mov
mov
inc
adc
sbb
and
pop
xchg
fiadd
jl
daa
icebp
and
ret
ret
jo
adc
test
xchg
mov
fisub
retf
shr
loop
adc
xchg
dec
ss
(bad)
arpl
imul
sub
arpl
jne
imul
int3
jbe
lods
jl
mov
iret
ins
mov
jae
gs
loope
lods
mov
adc
xor
adc
xchg
sbb
cmps
and
(bad)
mov
inc
cmp
mov
mov
cmps
jecxz
sub
popf
retf
mov
repz
fstp
dec
les
test
stos
loop
mov
inc
test
in
pop
inc
mov
jge
std
and
in
(bad)
int3
out
pop
(bad)
fnstsw
dec
int3
cmc
pop
int
stos
jg
push
xchg
out
sahf
test
cmps
adc
ror
mov
movs
add
inc
mov
inc
jnp
popf
mov
gs
jg
nop
inc
repnz
call
xchg
daa
jmp
fisub
leave
jbe
push
leave
cmc
jecxz
ja
sbb
jne
call
lds
dec
lahf
pushf
lock
pop
pop
jbe
mov
xchg
mov
or
cmp
xlat
fist
pop
push
inc
pop
lods
repz
je
arpl
cmp
mov
mov
push
nop
mov
inc
mov
xor
jmp
movs
pop
daa
xchg
sub
add
repnz
push
adc
nop
std
and
mov
push
push
clc
push
push
mov
inc
push
outs
ror
mov
push
iret
popa
mov
gs
add
xchg
mov
out
and
push
retf
pop
inc
jle
lahf
stos
mov
push
mov
mov
inc
cmp
push
mov
leave
mov
dec
rcr
mov
lock
addr16
xchg
add
loop
mov
test
dec
mov
mov
call
shr
push
or
add
test
xchg
and
push
inc
or
icebp
sub
pushf
imul
lock
xor
xor
xchg
xor
retf
mov
bound
mov
adc
jge
mov
xchg
or
ss
test
lods
xchg
in
in
xchg
stos
mov
mov
or
sbb
mov
int
neg
enter
sbb
in
inc
int
mov
shl
xchg
mov
pop
mov
or
adc
retf
cmp
jmp
ss
js
les
mov
add
ins
nop
nop
jg
cmp
inc
mov
sbb
cdq
mov
jl
mov
sbb
or
jne
lods
and
cmp
lods
jecxz
mov
mov
lahf
mov
mov
in
aad
in
push
xchg
arpl
cli
mov
sbb
mov
add
and
or
inc
add
or
in
sbb
mov
leave
push
hlt
in
pop
movs
(bad)
(bad)
fidiv
xchg
mov
repz
out
int3
mov
and
inc
loope
inc
sti
adc
mov
mov
mov
cdq
(bad)
or
mov
xchg
push
sbb
xor
retf
gs
ss
push
arpl
retf
push
dec
mov
test
adc
ret
push
inc
test
xchg
rcl
mov
jb
loopne
push
jl
(bad)
daa
shr
outs
ret
lahf
jns
pop
fwait
call
ror
mov
xchg
xor
add
aad
or
int
aas
mov
adc
dec
mov
stos
pop
sub
push
mov
imul
call
mov
stos
es
jae
or
xchg
mov
ror
repnz
push
pop
pop
mov
rcr
popf
fdiv
dec
xor
push
push
(bad)
mov
sbb
push
(bad)
in
inc
push
aad
push
xor
retf
push
sub
xchg
not
shl
imul
sbb
rol
or
dec
sbb
pop
(bad)
icebp
sub
leave
push
xchg
cli
xchg
movs
mov
pop
(bad)
adc
mov
les
lds
(bad)
loop
or
cmovs
xchg
mov
nop
jl
cmp
(bad)
cmp
add
inc
ret
lods
ins
js
mov
cmp
gs
cmp
dec
mov
loope
cdq
repz
pop
aad
push
fadd
cmp
xchg
pop
aas
inc
add
sahf
xchg
push
je
xor
sub
mov
sub
loope
inc
out
adc
cwde
xchg
adc
mov
jmp
dec
sbb
jge
lods
jl
jp
sahf
xchg
jne
lea
dec
int3
push
movs
out
arpl
pop
mov
ss
stc
gs
sbb
movs
rcl
add
push
pop
lods
mov
cmps
mov
sbb
and
mov
fadd
pop
lahf
mov
les
mov
push
jnp
cmp
sbb
stc
mov
clc
cmc
fistp
test
fnstsw
(bad)
iret
inc
fs
xchg
add
dec
dec
cmp
dec
xlat
push
ins
xor
sub
and
into
pop
sbb
aad
fldcw
jbe
iret
push
cmc
stos
test
inc
add
das
mov
lea
mov
cdq
lods
jno
lea
outs
inc
ja
pop
jl
xchg
test
bound
ror
pop
out
call
mov
mov
loopne
mov
mov
mov
and
dec
adc
rcl
mov
pop
jae
push
sbb
jecxz
mov
scas
pop
push
ret
xor
iret
into
pusha
mov
or
inc
push
cdq
pusha
sub
loopne
bound
and
rol
cld
jo
sub
stc
loop
dec
das
mov
(bad)
cmp
or
ja
movs
sbb
(bad)
rcr
push
or
mov
mov
dec
xor
int
stc
xor
xchg
xchg
sbb
sbb
xor
lods
or
test
rcr
inc
cmps
adc
clc
xchg
ins
or
pop
fld
or
mov
jge
mov
popf
arpl
cmp
in
sub
daa
inc
loope
jge
int3
mov
in
xor
pop
imul
(bad)
jbe
mov
inc
and
rol
into
mov
add
ins
in
mov
dec
in
push
ja
xchg
frstor
pop
push
xchg
movs
cwde
dec
jg
fstp
adc
movs
movs
sti
dec
sbb
xor
cmp
lods
push
data16
imul
sub
ins
pop
lea
call
sbb
call
xchg
xchg
and
pop
int
inc
push
outs
mov
lods
jmp
ror
fs
xchg
mov
jge
sub
repnz
ja
movs
jbe
sub
mov
ins
xchg
les
out
mov
dec
stos
or
mov
aas
mov
fcomi
jmp
arpl
es
into
inc
dec
test
call
shl
push
inc
clc
pop
push
repnz
sahf
push
lds
jbe
xor
xor
cmps
das
inc
jbe
pushf
pusha
ss
popa
mov
mov
(bad)
mov
mov
mov
retf
xchg
pusha
mov
xchg
jle
inc
push
loop
in
cmp
add
popa
das
inc
cwde
jl
pop
mov
push
jns
cmp
hlt
xchg
xchg
mov
xchg
stc
xchg
repz
sahf
bound
inc
dec
daa
lods
xchg
push
(bad)
int3
outs
outs
movs
in
mov
jecxz
or
sbb
shr
xchg
lods
fidiv
mov
(bad)
cli
hlt
fdiv
pop
rol
popa
inc
add
leave
jecxz
shl
mov
ror
pop
(bad)
xchg
add
loopne
inc
aaa
adc
gs
nop
cwde
cld
sar
xchg
or
test
ror
leave
nop
leave
es
into
retf
cmps
mov
xchg
and
nop
repz
cmps
popa
adc
nop
mov
add
sub
mov
xor
dec
dec
inc
scas
cmp
sub
xchg
sub
bound
push
and
pop
push
push
fwait
call
lock
xor
push
or
add
push
test
sub
or
movs
mov
mov
add
ins
mov
mov
dec
jnp
jecxz
shl
cmp
mov
pop
imul
pop
fwait
inc
and
push
mov
push
lds
mov
xor
mov
imul
xchg
add
js
cmp
lds
mov
cwde
adc
and
rcr
mov
out
push
jns
nop
sub
mov
int
test
mov
mov
mov
ins
xchg
fs
xor
retf
mov
sbb
mov
mov
jecxz
les
sub
mov
jbe
cmp
iret
fsubr
fldenv
int3
(bad)
and
xor
fs
xor
outs
fwait
lods
mov
xchg
sbb
addr16
sub
jl
adc
jg
jge
jns
sbb
mov
arpl
mov
popa
push
push
pop
adc
fisubr
cwde
add
cmps
and
jl
ror
(bad)
lea
push
push
xchg
pop
sub
adc
mov
jle
xchg
into
mov
sahf
(bad)
push
xchg
clc
dec
sbb
stos
int
(bad)
retf
cmps
dec
add
mov
or
pushf
aas
mov
mov
inc
test
lods
outs
adc
mov
aas
cmc
inc
and
pop
test
lds
outs
add
mov
pop
les
shr
mov
and
mov
push
leave
sub
mov
xchg
mov
pop
mov
dec
dec
shr
std
fwait
push
pusha
aam
aas
shl
scas
rcl
mov
rol
mov
shl
and
movs
and
mov
xchg
and
pop
fnstenv
push
mov
sar
ds
ret
iret
mov
ret
(bad)
mov
push
push
pop
js
mov
out
jbe
push
aam
pop
les
movs
aas
cs
ret
xchg
push
push
lods
inc
test
jnp
jo
pusha
xor
cs
mov
pop
mov
call
pop
pushf
fadd
mov
loopne
outs
jne
push
sbb
adc
xchg
test
or
xchg
lock
sub
in
movs
jmp
mov
fxam
mov
xchg
fwait
mov
sbb
loop
xchg
ins
xchg
fs
sahf
sbb
ffreep
jmp
xor
fxtract
retf
in
addr16
or
sub
popf
imul
in
lea
jno
push
jnp
ret
inc
push
jno
mov
or
enter
jecxz
xchg
imul
mov
ror
push
in
add
lahf
scas
pop
pop
push
or
dec
dec
mov
test
addr16
sahf
cmp
adc
xchg
adc
arpl
dec
cmp
xchg
aam
test
lock
lods
test
div
aad
add
clc
mov
mov
out
xchg
dec
ins
mov
dec
aad
cmp
ins
sbb
jmp
sub
xor
cdq
jno
mov
mov
aad
ds
push
data16
sbb
sub
mov
ja
and
repz
or
pop
adc
lock
cmp
jne
dec
push
scas
dec
fdiv
pop
fnstsw
pop
nop
aad
inc
stos
xchg
xor
ds
push
push
arpl
mov
scas
movs
jo
mov
mov
push
stc
adc
arpl
push
nop
test
sub
cmps
(bad)
pop
lahf
out
jb
cmp
and
xchg
movs
into
cmp
mov
jle
js
or
ins
sbb
cdq
dec
sub
xor
mov
call
(bad)
cs
aad
adc
addr16
jge
idiv
pushf
xchg
mov
mov
aas
inc
sbb
jno
push
xchg
mov
pop
xchg
cld
ins
or
stos
mov
jge
fidiv
sub
loope
jb
sub
addr16
bnd
dec
push
hlt
push
lahf
cld
popf
rcl
daa
inc
jmp
outs
sub
jmp
push
cmc
cmps
cmps
out
add
fidiv
stc
inc
jecxz
adc
dec
push
test
jo
sahf
fst
mov
cli
push
jmp
pop
mov
pop
popf
retf
mov
mov
ds
out
add
inc
pop
jl
enter
add
popf
ret
cmp
int
in
mov
xor
sub
int
xchg
dec
call
test
cmp
sub
cmp
sub
pop
mov
mov
fisttp
stos
mov
dec
sub
dec
loope
popa
inc
mov
dec
add
dec
fiadd
int
in
nop
push
xchg
mov
xchg
pop
or
inc
push
pop
stos
pop
xchg
dec
xlat
cwde
imul
inc
ffree
leave
and
frstor
lods
lahf
xor
lds
mov
inc
mov
lds
ret
and
scas
jmp
adc
and
xchg
jecxz
xchg
and
mov
rol
xor
inc
aaa
and
call
in
pop
and
retf
mov
and
iret
pop
test
and
xchg
xchg
dec
rol
inc
pushf
xchg
mov
aas
xchg
inc
xor
pop
cmps
(bad)
fsub
pop
cmp
pop
int3
lods
mov
inc
fsubr
push
outs
sbb
aad
call
xchg
in
out
inc
not
ret
gs
cdq
test
jno
cdq
sbb
cmc
(bad)
fld
or
push
int
mov
in
iret
push
dec
push
nop
mov
clc
jns
addr16
arpl
movs
leave
imul
int
lods
sahf
outs
(bad)
retf
je
jmp
mov
dec
imul
movs
in
and
dec
mov
jno
fisubr
cmps
mov
shr
mov
or
sbb
rcl
dec
test
test
mov
cmps
lock
pop
fdivr
adc
out
jnp
and
dec
ret
hlt
std
push
sbb
inc
jecxz
xchg
retf
les
fwait
jmp
and
xlat
push
sub
jmp
dec
hlt
(bad)
or
xor
adc
adc
test
jb
xchg
stc
sub
lea
push
pop
push
mov
lods
pop
mov
sub
pop
aas
add
sbb
enter
xor
mov
mov
add
jne
lahf
lods
mov
bound
scas
mov
addr16
push
push
push
add
stos
cwde
fisttp
pop
addr16
or
mov
mov
jne
shl
dec
popf
cmps
es
ins
sub
inc
sub
and
jl
adc
inc
xchg
retf
mov
sub
or
mov
or
jle
mov
jb
mov
outs
(bad)
lods
hlt
cs
mov
fadd
movs
inc
xchg
fucomip
xchg
enter
or
jns
faddp
pop
pop
add
cmc
pop
pop
in
pop
shr
cmp
xor
nop
add
adc
mov
dec
jge
arpl
aam
xchg
ss
inc
repnz
sahf
mov
nop
mov
sub
cmp
mov
xor
pop
inc
push
cmp
mov
sub
sub
lods
cmp
mov
mov
mov
sbb
ss
cmps
aad
push
push
xor
daa
inc
jl
scas
scas
fbstp
repnz
mov
and
pop
shl
xchg
shr
jne
cdq
push
mov
es
mov
fwait
in
test
out
xlat
nop
mov
push
shr
sbb
mov
test
out
stos
inc
adc
dec
mov
in
scas
or
or
jmp
dec
mov
push
mov
inc
out
popa
in
lds
xor
mov
popa
xchg
jo
mov
test
mov
(bad)
sub
and
test
mov
mov
xor
push
lds
aas
dec
xchg
pop
sbb
sub
imul
xor
jo
sahf
jg
in
push
xchg
inc
je
xor
mov
fild
mov
mov
nop
pop
pop
and
or
js
arpl
cmp
(bad)
leave
imul
push
xchg
adc
pop
stos
cmps
outs
push
mov
xchg
mov
jb
mov
dec
cld
data16
test
gs
mov
mov
inc
jge
dec
clc
mov
int
add
sub
push
pop
hlt
mov
add
out
in
in
mov
sub
xor
mul
add
popf
xchg
lods
sub
add
xchg
jo
jmp
cmp
mov
or
out
lock
or
or
mov
xchg
sub
dec
movs
mov
mov
adc
push
enter
mov
adc
cmp
(bad)
mov
dec
repz
test
push
test
pusha
pop
stos
clc
jle
mov
sbb
ja
mul
mov
outs
fwait
sbb
mov
and
inc
push
test
jl
enter
xor
out
jl
jge
xchg
call
mov
inc
fadd
xchg
sar
dec
xchg
test
add
addr16
pop
sub
in
xchg
xchg
aam
pop
pushf
std
in
or
lock
mov
fld
stos
add
push
stos
mov
cmp
inc
xrelease
lea
dec
mov
cmps
enter
mov
aas
add
hlt
adc
xor
fdivr
push
push
mov
or
fwait
and
xor
out
xor
loope
rcr
popa
call
imul
xchg
sub
mul
dec
jge
inc
adc
push
outs
pop
scas
shl
or
mul
sub
dec
ror
lea
push
pop
inc
test
cdq
xchg
retf
mov
(bad)
sbb
aas
lahf
adc
mov
shl
pop
fmul
cmp
ds
mov
push
and
cwde
jno
inc
mov
mov
xchg
inc
inc
and
push
jae
jp
scas
in
xor
outs
mov
sub
dec
xchg
sbb
xchg
dec
dec
push
popa
js
fmul
or
or
xchg
jge
les
mov
imul
test
xchg
push
and
cmovns
das
mov
out
das
lea
xor
lods
shl
or
out
iret
mov
sub
xchg
sub
push
pop
(bad)
enter
lds
nop
jbe
fs
add
es
dec
int3
dec
push
adc
out
dec
cmp
nop
pushf
dec
int
add
test
adc
mov
and
dec
stos
sar
add
push
mov
nop
xchg
pop
mov
shl
(bad)
mov
push
fcomp
mov
sub
arpl
jo
dec
outs
mov
pop
mov
inc
outs
cmp
mov
mov
push
out
add
sub
lods
mov
adc
leave
dec
test
or
test
fld
pop
xchg
gs
addr16
(bad)
push
movs
rcr
jne
movs
int
jne
and
push
hlt
fwait
push
mov
jns
sub
xor
ret
and
(bad)
out
nop
aas
push
popa
out
cmc
idiv
ret
jmp
sub
aad
adc
inc
das
outs
cmc
(bad)
outs
call
and
lea
sub
fwait
mov
pop
aaa
fisub
add
inc
shl
cmc
je
pop
out
mov
pop
jne
sub
cmp
sbb
into
movs
sbb
push
or
cmp
je
pop
cmps
dec
inc
cdq
xchg
mov
pop
sub
out
fs
cmc
mov
sahf
or
je
mov
mov
loopne
cmovl
jmp
enter
and
jmp
push
push
das
call
mov
dec
lods
jecxz
sub
pop
or
sub
mov
dec
push
aas
push
and
fadd
jne
imul
sbb
add
(bad)
test
pusha
push
jns
jg
mov
inc
iret
sar
jg
mov
clc
js
xor
shl
pop
dec
lea
xchg
xchg
add
cmp
cmp
xchg
xchg
mov
sub
iret
jmp
jns
and
xchg
repz
xor
inc
adc
sbb
in
bound
shr
jge
daa
and
test
mov
push
jge
stos
push
fwait
in
cmp
or
cmps
mov
idiv
ins
pop
mov
mov
pop
inc
int3
xor
jo
loopne
or
inc
ss
push
cmp
xchg
loope
mov
xchg
daa
mov
repnz
popf
mov
adc
mov
jle
jmp
lods
lods
not
mov
imul
scas
jecxz
scas
test
push
push
stc
sbb
mov
xor
or
dec
mov
rcl
pusha
xchg
test
mov
fld
add
push
nop
bound
jae
mov
or
push
in
mov
retf
inc
rol
inc
xchg
scas
lahf
ins
mov
add
adc
addr16
lea
or
dec
mov
call
retf
cwde
inc
lds
dec
mov
dec
data16
jl
sbb
aam
sub
pop
pmulhuw
nop
enter
ror
inc
xchg
jg
xchg
test
jae
push
test
xchg
test
popf
pop
pop
into
push
mov
xor
stc
movs
xlat
mov
test
cmp
mov
leave
lods
mov
push
fadd
mov
popa
shr
aas
mov
adc
fild
push
mov
sahf
fs
sbb
mov
xchg
fisubr
mov
(bad)
popa
popf
push
scas
mov
adc
mov
xor
inc
xor
arpl
ffreep
mov
loopne
inc
jecxz
add
retf
les
jmp
inc
out
push
test
jg
pop
sub
(bad)
outs
pop
das
sub
retf
pop
add
mov
ja
adc
(bad)
cmp
lea
pop
jns
mov
pextrw
cmp
test
cmp
movs
mov
add
xchg
imul
add
jb
aad
mov
imul
or
xor
pop
je
aad
inc
sbb
enter
jb
inc
cmp
std
mov
adc
lods
fsub
jl
ins
mov
mov
xor
aas
sub
jge
xor
pop
xchg
jnp
add
fld
hlt
mov
mov
jg
into
or
mov
xchg
sub
jb
sub
int
jge
cmp
xchg
shl
mov
sbb
(bad)
cld
cmp
xor
inc
adc
out
cmp
mov
dec
cmp
retf
pop
mov
push
fimul
mov
mov
test
xor
int
lock
lds
int
lfs
sub
jns
and
xchg
shl
mov
cmc
jbe
fs
dec
pop
loop
rol
nop
(bad)
enter
mov
mov
jmp
rcr
pusha
les
fimul
xor
daa
jecxz
movs
mov
sub
push
sub
and
jbe
add
int3
movs
inc
pop
rcl
sub
push
aaa
adc
leave
cmp
das
mov
fs
mov
cmp
movs
mov
and
inc
fisttp
inc
pop
lock
push
push
jg
mov
ror
in
jbe
add
lock
or
xchg
push
or
gs
ss
adc
pop
mov
mov
dec
pop
fisttp
dec
fistp
adc
and
loopne
jmp
jle
mov
ror
or
add
adc
xor
cmps
call
pop
push
std
(bad)
leave
cli
mov
mov
fs
fucomi
jb
or
dec
(bad)
cmp
mov
fidiv
pop
popf
popf
retf
sbb
cdq
dec
mov
scas
test
xor
sahf
pushf
ret
mov
cmp
cdq
std
dec
cdq
push
adc
mov
lods
jmp
jmp
push
cld
lods
sahf
cwde
pusha
in
adc
aad
and
iret
xchg
dec
ror
stos
movs
pop
rol
mov
push
jno
out
add
jp
push
ret
mov
lock
mov
stos
aam
mov
dec
(bad)
cmps
push
lods
pop
add
mov
and
dec
out
mov
test
mov
add
mov
xchg
mov
push
out
dec
test
es
lock
lahf
pop
rcr
add
push
and
imul
inc
pop
mov
mov
out
or
fnstsw
add
inc
fwait
jno
push
inc
inc
cmp
ror
mov
fcomp
jl
mov
rcl
dec
xchg
push
scas
lahf
arpl
fsub
add
lods
in
dec
or
nop
push
xchg
and
xchg
push
rcr
mov
jmp
dec
scas
movs
jb
add
sub
ja
xor
repz
aad
loope
stos
pop
xchg
ds
shl
(bad)
pop
xchg
mov
lods
ins
sbb
cmp
lea
arpl
fdiv
out
jns
lahf
dec
sar
push
out
in
mov
lock
add
xlat
cwde
cmps
or
imul
scas
movs
jae
icebp
fist
add
mov
mov
out
push
in
push
js
cmp
test
pop
mov
inc
aam
pop
ss
ins
add
ficomp
mov
add
mov
inc
ret
mov
mov
jno
movs
aad
inc
pushf
movs
pop
or
mov
jnp
mov
dec
retf
mov
frstor
push
rol
mov
dec
pusha
push
mov
inc
dec
mov
push
cmps
mov
mov
jmp
cmp
add
test
sub
aaa
pusha
mov
ret
shl
xlat
lods
fs
out
sub
hlt
cmp
in
push
xchg
jg
jl
test
mov
pop
icebp
mov
and
xor
cmp
mov
xchg
xchg
loope
mov
jmp
mov
mov
inc
mov
and
dec
and
sbb
nop
aam
xchg
popf
div
adc
aaa
mov
aad
daa
sub
into
dec
jbe
fistp
mov
aam
loope
push
movs
(bad)
aam
dec
and
movs
in
ss
mov
xchg
and
aam
(bad)
mov
mov
cmps
popf
cmp
jns
mov
jmp
add
mov
cmps
lock
ret
clc
cwde
cmps
iret
sbb
mov
add
inc
push
out
pop
scas
fsub
outs
dec
mov
jecxz
test
ds
pop
test
and
stc
mov
sahf
sbb
into
mov
mov
sub
cs
jecxz
repnz
xor
cs
std
inc
push
add
popf
xchg
hlt
cdq
test
in
lea
hlt
push
pop
mov
mov
lea
mov
mov
into
or
dec
lds
pop
(bad)
loopne
xchg
lds
or
repnz
pop
jnp
daa
repnz
dec
aad
ds
mov
xchg
xlat
adc
lock
idiv
mov
outs
sbb
sub
addr16
imul
or
test
mov
fldenv
xchg
loop
test
xlat
out
or
push
mov
(bad)
(bad)
std
test
cli
iret
shr
mov
add
and
lods
push
out
xchg
lods
dec
mov
xlat
mov
add
test
sbb
inc
test
imul
test
fld
das
mov
(bad)
clc
cmp
add
neg
xor
dec
in
rcl
sub
xor
out
pushf
pop
adc
push
mov
and
ins
adc
sbb
mov
cmp
leave
popa
popf
push
add
cli
icebp
pop
je
in
sub
mov
add
mov
add
jge
pop
movs
cmp
sub
retf
and
inc
inc
push
jo
mov
mov
push
xchg
and
(bad)
repnz
daa
lods
rcl
pop
ret
repz
cmp
push
adc
mov
cdq
mov
jmp
xchg
cs
or
inc
inc
jmp
xlat
jge
push
fwait
enter
push
cwde
inc
aaa
or
inc
cdq
xor
imul
or
or
pop
or
xor
ror
arpl
ja
retf
add
push
test
out
cmc
imul
fdivr
ja
sub
loope
fwait
rcr
repnz
push
add
fldl2t
dec
mov
sub
xchg
dec
pop
fwait
ror
add
inc
push
mov
and
test
pop
xchg
push
popa
pminsw
dec
inc
sbb
dec
adc
fdivp
pop
add
shl
mov
mov
les
mov
adc
imul
arpl
lea
int3
inc
ja
clc
mov
push
sbb
fcom
call
inc
xchg
ud2
cli
pop
add
sub
(bad)
icebp
xchg
pop
(bad)
mov
xchg
dec
push
add
push
dec
xchg
test
jae
push
sahf
xchg
push
xchg
mov
push
jno
pop
mov
outs
mov
stc
push
into
push
jns
and
pop
jns
loop
movs
stos
mov
pop
ror
cmps
inc
(bad)
cmp
mov
(bad)
fimul
xchg
in
push
push
in
aas
dec
push
dec
call
jp
xchg
icebp
dec
jl
retf
repz
and
push
cmps
xchg
mov
sar
retf
outs
into
outs
and
pop
inc
lahf
mov
pop
out
dec
sbb
movs
xchg
rcl
movs
lds
xchg
inc
fwait
sub
xor
mov
xor
outs
dec
stos
cmp
jecxz
push
xor
mov
push
push
daa
dec
gs
cmp
jp
pop
pushf
adc
retf
je
push
leave
push
popf
add
icebp
test
je
scas
es
dec
sbb
mov
imul
mov
stos
sub
stos
mov
imul
out
(bad)
sub
push
mov
pop
push
inc
out
push
aas
or
lea
xchg
push
bound
jg
adc
clc
push
cmp
xchg
repnz
imul
out
mov
ds
stos
rcl
or
xor
pop
sbb
mov
push
icebp
retf
push
and
icebp
fidivr
mov
sbb
mov
shl
sahf
jno
xchg
ss
xchg
movs
xor
pop
hlt
popa
pop
inc
fidivr
hlt
sbb
pop
or
(bad)
jmp
mov
cs
add
sti
xchg
or
sbb
fmul
(bad)
mov
arpl
test
push
scas
jg
nop
out
clc
push
xor
pusha
cbw
jle
lahf
frstor
dec
test
cmps
xor
fcmovnu
pop
xchg
std
jg
jno
and
sbb
loope
xor
and
aaa
sbb
push
dec
pushf
cdq
push
mov
out
adc
pushf
push
xchg
fcmovb
xrelease
xor
and
lahf
cmp
mov
add
and
call
rcr
push
les
cwde
sbb
pop
ins
aad
rcr
(bad)
mov
aad
mov
add
cmp
mov
in
jge
sbb
mov
inc
inc
add
int3
cmps
xchg
out
pop
jae
arpl
popa
stos
pop
inc
or
js
sub
out
imul
cdq
jb
xchg
pop
push
jecxz
(bad)
fwait
dec
xchg
je
push
jae
js
fs
mov
pop
(bad)
in
or
out
je
push
add
test
out
sub
jmp
jne
sbb
cmp
adc
dec
fsub
xor
cmp
xchg
pushf
xor
nop
sbb
cmp
xchg
mov
xchg
push
xchg
mov
pop
jo
loop
push
popa
and
xchg
sbb
cmp
movs
xor
test
xchg
int
fild
(bad)
jp
jg
cs
aas
sub
jbe
xlat
mov
sbb
push
ror
dec
imul
cmp
dec
inc
mov
sbb
push
aas
gs
pop
cli
leave
jne
test
adc
jmp
shl
popf
sbb
shl
jmp
lds
mov
pushf
pop
mov
jae
mov
js
sti
pop
je
mov
mov
xor
call
xchg
and
adc
stos
in
cmp
add
or
pushf
bound
push
dec
mov
push
(bad)
mov
psubsb
fs
sub
mov
in
dec
adc
cmps
gs
pop
cmp
popa
(bad)
pop
xchg
xor
and
scas
and
cmc
pop
sbb
xor
je
(bad)
(bad)
dec
adc
cmp
or
sub
movs
sub
adc
xchg
ret
or
mov
add
pop
ror
fcomp
in
outs
pop
dec
lods
push
mov
popa
mov
adc
fs
jnp
ja
ins
stos
mov
inc
inc
pop
fs
dec
mov
cmp
dec
sbb
leave
cmps
(bad)
addr16
mov
je
jle
int
mov
xchg
xchg
jo
shr
mov
enter
sti
sub
(bad)
and
inc
sbb
sub
ret
aam
mov
push
jecxz
movs
jae
adc
jecxz
(bad)
pusha
pop
jbe
push
mov
inc
popf
les
mov
pop
jecxz
fwait
jnp
inc
sub
data16
adc
movs
pop
pop
cmp
adc
daa
div
fmul
inc
inc
mov
ins
pop
jmp
xchg
div
mov
aad
xor
xchg
pusha
jae
mov
mov
jne
cdq
mov
in
pop
rcl
aad
push
test
(bad)
xor
xchg
push
jge
jle
xchg
add
(bad)
inc
mov
out
ret
dec
mov
mov
out
push
add
(bad)
pop
sbb
dec
jb
pop
mov
mov
cmc
popf
xor
mov
add
js
stc
xchg
out
mov
pop
aad
add
cmps
rol
inc
mov
xchg
cmp
push
inc
xor
xlat
lods
jb
scas
(bad)
push
and
mov
adc
push
inc
arpl
sbb
xchg
int
pusha
mov
pop
pop
lock
mov
out
in
loopne
ror
jo
lea
loopne
mov
inc
sbb
pop
in
cmp
gs
sbb
add
aad
adc
push
and
push
add
push
cmps
add
and
and
fmul
sbb
aas
push
sub
in
mov
push
mov
push
sbb
(bad)
pop
dec
add
ds
retf
adc
sub
call
outs
pusha
mov
push
cmp
in
ss
dec
outs
repz
pop
pop
je
pop
dec
in
jbe
arpl
or
or
rcl
mov
mov
pop
cmp
pop
arpl
lods
addr16
or
sbb
les
mov
xor
lds
cmp
cmp
fimul
popf
in
push
das
movs
add
gs
shl
inc
ss
ins
jle
pop
imul
jle
add
out
lahf
lods
jb
(bad)
and
mov
bound
outs
xor
aas
add
popf
test
pop
cdq
iret
and
mov
pop
(bad)
jmp
neg
cmp
jbe
sti
or
cmp
push
push
mov
inc
popf
sub
ret
out
cdq
cli
dec
lock
dec
jg
fs
je
fimul
inc
cs
sbb
mov
pop
pusha
fisttp
inc
std
or
sub
mov
mov
shl
fstp
icebp
outs
mov
jmp
xor
out
mov
xchg
es
cmp
std
cdq
add
pushf
pushf
add
les
mov
out
jns
movs
pop
dec
jnp
jg
pop
movs
xor
lahf
lods
jp
pop
ja
shl
out
add
call
add
add
je
or
cmp
fsub
xchg
lahf
push
ret
sbb
aad
xor
aas
movs
jge
popa
push
hlt
pop
dec
jge
xchg
fnstsw
shl
inc
gs
pop
jno
pusha
out
lods
iret
and
ja
(bad)
les
add
cwde
cld
dec
cmp
popf
js
fnstenv
jmp
mov
xchg
je
imul
lods
and
aad
movs
add
ins
mov
push
cmp
mov
sub
enter
clc
jne
std
lea
aad
xor
ds
add
fistp
xchg
fild
mov
fwait
jg
mov
sub
xchg
xchg
or
xor
sub
outs
sbb
fldcw
mov
mov
push
push
in
xchg
ds
mov
sbb
out
mov
xchg
movs
xchg
pop
movs
shl
push
dec
push
xor
dec
xor
or
into
mov
mov
addr16
dec
daa
push
stos
popa
fisttp
into
mov
data16
(bad)
push
add
push
sub
lock
shl
or
cs
outs
ja
enter
int3
add
aas
jmp
pusha
fst
fwait
xchg
pop
fisubr
jecxz
test
add
sub
scas
inc
arpl
cdq
ret
(bad)
pop
adc
pop
inc
mov
fwait
stos
adc
push
mov
stos
cdq
sub
je
push
cmps
and
js
dec
stos
aas
adc
(bad)
repnz
adc
push
inc
imul
rol
adc
into
mov
mov
mov
mov
in
lahf
int
mov
ins
(bad)
das
sbb
jl
xor
mov
mov
fcomp
mov
mov
rol
pop
cmp
movs
adc
dec
sbb
lods
adc
addr16
push
and
(bad)
or
cmc
xchg
or
jno
push
push
jge
stos
iret
mov
lods
fs
and
sahf
outs
mov
dec
cmp
rcl
sub
ret
mov
cmp
ss
or
adc
outs
jge
fst
gs
out
adc
xor
add
ins
ins
and
pusha
in
mov
(bad)
mov
repz
(bad)
js
xchg
mov
cmp
xor
xor
shl
sbb
pushf
xchg
mov
sub
xchg
push
push
xlat
imul
aad
mov
mov
das
jo
pop
enter
sbb
jle
addr16
sub
xchg
jne
shr
mov
js
idiv
push
pop
(bad)
(bad)
and
cmp
pop
sub
loope
jmp
int3
ds
mov
out
xchg
mov
sar
(bad)
out
sub
jmpw
(bad)
cli
enter
mov
mov
fdivrp
imul
adc
jl
mov
xlat
std
dec
(bad)
int
fdiv
jg
dec
out
mov
in
sub
and
lahf
sub
retf
xor
les
jbe
pop
out
bound
xlat
(bad)
fxch
ins
xor
sbb
dec
sbb
jmp
or
dec
inc
int3
sbb
rcr
push
shl
mov
mov
dec
xchg
jae
jo
sbb
dec
push
adc
sub
mov
outs
es
test
ja
inc
cwde
inc
mov
xchg
popa
pusha
push
mov
inc
mov
int3
std
adc
push
mov
push
sbb
sub
ret
je
mov
push
xchg
pop
lahf
dec
push
pop
mov
push
fisttp
cmc
mov
jns
add
inc
int3
hlt
loopne
sbb
das
and
cwde
xchg
loop
inc
xchg
dec
xlat
mov
xchg
iret
leave
fdiv
jmp
(bad)
leave
push
dec
pop
mov
sub
ss
call
adc
xor
jge
and
push
fidivr
mov
xchg
shl
aas
pop
jae
(bad)
rcl
mov
lahf
push
sbb
push
mov
fild
mov
lods
ja
or
into
mov
loopne
add
mov
push
or
test
(bad)
mov
stc
mov
push
fldcw
sbb
push
popf
(bad)
jno
jl
mov
mov
sub
jno
cmps
lods
dec
or
fild
push
(bad)
(bad)
xor
int
mov
fldenv
lea
in
xor
xchg
jle
cs
int
imul
jns
jmp
push
mov
aam
xor
and
push
pusha
enter
add
es
xchg
mov
mov
pop
xchg
outs
sar
sub
loope
cmp
mov
(bad)
les
rol
div
sub
sar
xchg
sub
ret
pop
jb
mov
popf
out
cmp
sub
and
mov
ins
iret
test
jnp
mov
outs
int
sub
jle
jb
and
loope
xchg
dec
mov
outs
ficomp
dec
addr16
fs
int3
cmp
cwde
lock
lds
ja
mov
int
(bad)
retf
fadd
jne
xchg
pop
jbe
push
addr16
es
or
xchg
or
adc
adc
clc
ja
lods
in
xchg
sti
cmp
sbb
or
outs
ins
sub
xlat
sub
iret
sar
mov
cmp
xlat
jecxz
sar
push
fild
mov
fild
mov
leave
enter
mov
mov
je
das
aas
pusha
arpl
std
int
movs
cmp
dec
fwait
xchg
mov
sub
les
test
mov
and
aaa
imul
push
mov
push
pop
mov
push
pop
pop
inc
dec
sub
imul
jl
sahf
js
(bad)
xor
popf
add
das
out
and
push
ins
dec
ret
in
retf
pop
mov
mov
imul
mul
xchg
jo
xor
sub
popf
mov
inc
or
jle
aam
mov
adc
dec
cmc
ffreep
movs
mov
pop
int3
dec
xchg
sbb
jno
push
or
and
dec
int
dec
cld
xchg
pop
call
cli
inc
push
pop
jnp
jbe
lds
xchg
adc
pop
pop
pop
sub
repz
ja
je
or
xchg
outs
dec
jge
dec
sub
jp
add
lock
sub
push
arpl
xchg
nop
imul
aas
add
out
mov
mov
rcr
push
mov
daa
mov
sbb
out
dec
mov
sbb
cdq
jle
cli
or
mov
mov
sub
xchg
fisttp
ficom
pop
cmps
push
ret
fst
mov
inc
loopne
push
jmp
cwde
ret
mov
js
xchg
scas
push
sub
or
out
cmc
shr
add
(bad)
ja
test
ss
push
dec
cmp
cmp
mov
int
xor
adc
mov
into
xchg
xor
ins
loopne
jae
mov
pop
cmp
cwde
add
mov
mov
js
popf
arpl
in
lea
lock
push
scas
sbb
xor
add
clc
pop
mov
aas
mov
in
stc
(bad)
gs
test
lea
shl
rcr
push
cld
test
js
pop
adc
mov
jnp
hlt
add
and
sbb
adc
inc
in
neg
jle
imul
stos
arpl
test
lods
dec
adc
xchg
sahf
cli
jmp
cld
test
ror
push
fwait
pop
neg
outs
adc
cmp
xchg
and
dec
mov
ds
pop
in
jb
out
fsub
and
cdq
dec
adc
and
data16
mov
fld
pop
lods
imul
xchg
data16
outs
call
mov
xchg
push
sbb
pusha
daa
xchg
sub
xchg
lods
push
mov
push
sub
dec
sbb
in
or
and
sti
inc
stos
sahf
push
rcl
lock
and
int
dec
jbe
test
and
or
mov
mov
out
shr
pop
fdivr
pop
mov
movs
pop
sbb
sub
aaa
bound
loop
push
mov
ja
xchg
adc
fs
push
mov
jp
xchg
cmps
mov
mov
push
push
cdq
pop
lds
xchg
or
out
les
mov
lods
and
lods
sbb
sbb
fs
cs
sbb
int3
and
mov
xchg
push
fcomp
jmp
pop
cmps
mov
mov
sahf
dec
enter
mov
cmp
(bad)
mov
rcr
pop
jno
inc
lahf
inc
or
int
xchg
xchg
aam
pop
data16
push
cmc
sub
pop
pop
pop
test
mov
sub
(bad)
dec
mov
(bad)
lods
jmp
adc
in
(bad)
int
xor
mov
push
push
rol
imul
(bad)
mov
mov
and
nop
cmc
sbb
xor
pop
cmp
or
xor
fadd
cmps
inc
retf
dec
push
jl
cmc
push
pop
mov
mov
imul
rol
push
rcl
clc
jge
pop
sbb
adc
call
les
xchg
cmp
xchg
mov
ret
sub
and
adc
lods
int
mov
lock
xchg
pop
jnp
jle
fnstcw
jne
imul
xlat
xchg
stos
movs
jo
ins
outs
inc
jmp
aaa
inc
fldcw
retf
in
sub
ror
dec
sbb
retf
jnp
push
cmc
lods
pushf
jmp
scas
adc
in
jne
dec
movs
and
jge
xchg
cmps
dec
xor
and
fstp
xor
fdivr
jg
sub
std
push
fistp
xchg
test
fisttp
cmps
add
xchg
popa
xor
dec
dec
cdq
mov
scas
shl
in
or
gs
fwait
dec
xchg
iret
ins
add
push
fs
mov
add
mov
into
adc
shl
sbb
aam
mov
xchg
push
jg
and
das
cmp
mov
pcmpgtw
add
gs
sub
mov
sub
sbb
cs
adc
inc
rcl
mov
shl
pusha
and
mov
push
out
je
adc
inc
sub
sub
mov
inc
jbe
push
loope
out
outs
add
or
push
adc
jne
xchg
xchg
(bad)
mov
cmp
sub
jne
push
jge
call
push
loop
jg
in
inc
bound
les
fsub
nop
inc
mov
popf
nop
or
pop
or
cmp
scas
xchg
(bad)
sahf
clc
sbb
mov
scas
mov
into
rcr
add
push
js
shr
lods
outs
xchg
mov
pop
push
movs
add
(bad)
nop
ror
mov
(bad)
xchg
and
sbb
(bad)
ret
or
jmp
sub
mov
aaa
fstp
inc
inc
adc
daa
jne
push
and
imul
icebp
test
arpl
jmp
mov
xchg
sub
iret
and
pop
fld
movs
jns
aad
jmp
and
push
xor
test
jmp
clts
repz
cmc
xchg
inc
lds
loope
out
pop
dec
xchg
add
stos
adc
int3
inc
cmp
call
mov
mov
jg
fdivr
test
cmp
repz
and
outs
sub
mov
sub
adc
add
cld
push
push
addr16
fild
test
loopne
lea
jnp
cmp
mov
test
sbb
hlt
add
out
adc
cmp
add
je
or
xchg
inc
int3
push
dec
aas
push
lea
stos
lock
bswap
aam
jns
fcomp
cmp
mov
bound
sbb
xchg
cld
pop
scas
and
jo
dec
mov
xchg
mov
es
test
stos
jae
inc
test
and
enter
add
jge
xchg
out
pop
xor
mov
stos
out
enter
and
icebp
adc
cmc
int3
push
adc
in
lock
imul
addr16
imul
lahf
inc
aas
nop
mov
cs
mov
hlt
jno
mov
loop
outs
and
lea
movs
dec
pop
mov
cmp
repz
clc
scas
xor
call
loope
pop
and
xchg
movs
movs
test
pop
fwait
daa
sbb
inc
in
loop
sar
int3
push
pop
mov
mov
into
add
push
mov
out
xchg
xchg
push
adc
cmp
sbb
pop
xchg
test
pop
lea
loope
push
fs
jae
je
lods
fistp
mov
adc
xchg
je
jmp
mul
sar
pop
sar
dec
rcr
cmps
ins
test
retf
pop
push
jmp
xchg
or
mov
and
das
fxch
dec
aam
sub
cmp
jecxz
mov
imul
or
xor
mov
xor
lds
scas
mov
and
mov
fdiv
pop
arpl
push
fstp
fcmovb
push
xchg
sub
dec
out
fwait
add
ja
stos
not
push
or
push
loope
pop
stos
push
test
in
js
test
stos
rcl
mov
das
pop
push
dec
test
mov
popa
pop
jbe
lds
add
push
mov
pop
ret
or
sbb
(bad)
cdq
mov
retf
and
mov
test
inc
rcl
jle
xor
arpl
add
or
xor
lods
inc
mov
stc
jp
xchg
(bad)
sub
gs
xchg
mov
mov
mov
popf
das
mov
mov
and
test
je
ret
push
sub
fcomp
in
mov
jle
sbb
lea
mov
jbe
iret
test
lods
pop
add
adc
in
iret
mov
push
int3
clc
int
imul
add
(bad)
shl
mov
pop
js
xchg
push
inc
fist
mov
add
cmp
outs
outs
jnp
addr16
lea
dec
retf
mov
js
push
jns
or
iret
xchg
stc
aad
jne
and
xchg
imul
in
test
int3
jno
xchg
xlat
xor
jne
out
lods
jnp
(bad)
mov
inc
scas
or
shl
arpl
test
mov
(bad)
jmp
xchg
cs
out
stc
mov
pop
adc
pop
dec
popf
test
dec
jae
adc
add
fs
gs
popf
inc
cmp
addr16
jp
in
ss
mov
das
xchg
sbb
mov
call
xchg
dec
add
scas
ss
ror
aad
jecxz
cmp
adc
cmp
mov
mov
sbb
mov
bnd
jge
sub
rcl
jbe
imul
pop
pop
jg
add
inc
xchg
pushf
loope
mov
bound
mov
jecxz
out
mov
cmps
out
call
cld
mov
movs
xchg
lods
mov
xor
dec
bound
aas
out
popa
lfs
inc
push
retf
jbe
or
ds
adc
fwait
sbb
stc
mov
sbb
sub
stos
add
adc
outs
retf
das
aad
cld
pop
or
loopne
pop
sub
and
aam
sub
cmp
or
in
lds
outs
aaa
loop
xchg
popf
mov
jecxz
fdivr
jmp
mov
imul
mov
aas
push
mov
test
mov
and
mov
mov
push
mov
iret
inc
or
js
pushw
xor
mov
cmp
xor
mov
icebp
test
rep
adc
and
sub
clc
mov
adc
std
addr16
(bad)
lods
cmp
mov
and
adc
mov
out
sub
jne
jecxz
test
mov
arpl
cmps
dec
mov
(bad)
mov
pop
lds
jge
arpl
and
ror
sbb
nop
lods
pop
adc
mov
pushf
mov
cld
jo
imul
sti
cdq
push
sub
pop
movs
aas
xor
pop
inc
sbb
inc
ret
push
mov
mov
push
outs
xor
into
fstp
test
fisttp
mov
cmps
cmc
add
mov
loope
xor
jb
and
aam
sbb
dec
pop
imul
or
mov
mov
fistp
mov
test
ins
dec
jno
lods
xor
push
std
enter
call
leave
and
ins
sbb
mov
sub
mov
mov
addr16
mov
mov
xchg
sub
int
ret
push
sbb
test
ins
fst
dec
mov
and
xchg
fs
cwde
(bad)
push
add
aam
nop
(bad)
enter
add
adc
pop
and
mov
and
jge
mov
fsub
mov
inc
and
pusha
mov
aas
popf
mov
xchg
popf
fst
mov
jmp
nop
jne
cmps
mov
mov
xchg
mov
and
adc
dec
fs
push
ins
add
ja
into
mov
jg
dec
test
gs
mov
jmp
and
addr16
retf
in
mov
test
outs
mov
inc
sti
cmp
pop
out
call
pop
sub
xchg
mov
aaa
push
cmps
iret
call
mov
int
jp
jp
jo
ins
aaa
inc
stos
adc
mov
ins
test
fcomp
xor
mov
pop
fwait
loop
dec
add
sbb
mov
dec
enter
xlat
outs
test
loope
pop
pop
aas
mov
push
xor
stos
stos
loop
jg
sahf
inc
into
mov
popw
xor
cs
gs
mov
bound
mov
push
outs
jecxz
fdivr
cmp
mov
sbb
ret
and
mov
test
rcr
xor
je
fs
sar
cmp
stos
sbb
cmp
push
cmp
sub
xchg
inc
shl
cmc
or
sub
stos
add
out
std
mov
and
dec
dec
ins
std
jae
mov
mov
cmp
cmp
or
ret
mov
daa
fild
xchg
enter
jns
push
mov
adc
push
jmp
push
mov
push
pop
add
iret
or
imul
xlat
push
jne
int3
cs
sar
and
jns
(bad)
cmp
mov
push
mov
and
or
fs
inc
xchg
jg
(bad)
in
mov
pop
cmp
push
jle
pusha
add
push
mov
sub
mov
jp
pop
lock
dec
mov
sub
lock
push
ret
arpl
pop
in
or
in
adc
push
mov
cmp
int3
mov
mov
or
fisub
pusha
push
ss
scas
jecxz
push
pop
add
mov
enter
push
fnstcw
outs
cmc
xchg
rcl
mov
mov
sahf
aad
mov
sahf
movs
cwde
xchg
fist
data16
push
aam
xchg
call
stc
jecxz
ins
sub
stos
jnp
sbb
xchg
jo
outs
mov
into
sub
jae
repnz
mov
mov
xchg
inc
gs
jecxz
cdq
pop
(bad)
pop
and
xor
inc
xor
pusha
xor
pop
push
aas
out
jnp
push
test
fwait
iret
xchg
ret
mov
fmul
sbb
dec
xchg
xor
int3
retf
jnp
mov
aad
or
and
jmp
mov
cmps
jae
(bad)
push
mov
add
xchg
call
call
bound
mov
outs
jle
xor
cdq
ret
outs
fcom
add
push
cmc
xchg
mov
test
stos
test
out
and
and
cld
mov
jle
movs
mov
dec
jbe
cmp
je
arpl
adc
and
out
icebp
repz
mov
sub
stos
xchg
fsub
dec
das
push
ins
es
stos
jmp
scas
clc
sub
cwde
lds
shr
mov
cdq
sub
mov
mov
retf
mov
pop
xlat
sub
out
mov
dec
mov
mov
loop
and
call
cmp
mov
jmp
sub
addr16
mov
add
addr16
sahf
out
push
jbe
xchg
mov
mov
or
fild
not
aas
loope
mov
jmp
imul
test
lock
cld
adc
jo
loop
les
pop
add
sub
jne
repnz
mov
int
mov
dec
push
sbb
fnstsw
shr
nop
and
jl
sar
cmc
int
and
gs
lea
and
xlat
das
xor
int3
movs
mov
ds
stos
mov
inc
idiv
sbb
sub
inc
movs
jb
pop
or
lahf
xchg
iret
shl
pushf
inc
fistp
ins
mov
pusha
sub
cmc
lahf
mov
inc
arpl
fs
jns
push
mov
rcl
jle
cmp
and
dec
xchg
test
mov
imul
dec
in
lahf
xor
xor
nop
xlat
xchg
push
(bad)
int3
push
in
call
pop
popa
test
rol
into
or
jp
mov
mov
adc
push
pushf
popa
shr
stc
pop
sub
push
push
imul
adc
out
inc
imul
rol
pushf
(bad)
call
dec
sar
adc
call
movs
xchg
mov
mov
shl
inc
push
test
lock
pop
mov
ja
dec
retf
pop
sub
xchg
jae
data16
test
sbb
pop
out
mov
push
jno
stos
xor
ficomp
int3
or
sbb
cmp
mov
push
js
ins
or
mov
stos
push
inc
xchg
fadd
test
daa
es
imul
sbb
dec
enter
jnp
js
cmp
or
or
jle
je
ret
pop
xchg
push
ins
test
mov
rcr
cmp
push
sbb
inc
mov
pop
or
cmp
cmp
outs
sub
cs
jno
xchg
jb
ja
or
(bad)
jno
pop
rol
jmp
(bad)
gs
cwde
fisubr
outs
test
mov
adc
xchg
sub
leave
mov
(bad)
adc
mov
dec
mov
jns
sub
jmp
xor
(bad)
test
mov
sbb
push
addr16
mov
mov
imul
jle
add
icebp
(bad)
aas
adc
push
xchg
call
pusha
xchg
push
or
leave
xlat
mov
mov
movs
and
pop
jmp
imul
lods
push
mov
dec
inc
jo
imul
jns
xor
xchg
fstp
(bad)
jmp
ins
int
sub
(bad)
rol
mov
push
add
xor
inc
sahf
out
cmp
xchg
sub
dec
sub
outs
jns
and
lods
cmc
push
or
ret
bound
shr
outs
int
fcom
push
jecxz
and
xlat
call
jmp
rol
xor
xchg
mov
sub
or
mov
push
xchg
ss
daa
fdivr
(bad)
adc
add
stos
std
loop
pop
movs
or
cmps
loopne
dec
dec
fs
fnstsw
psrlw
xor
dec
adc
loope
in
bound
add
js
inc
retf
nop
sub
pop
pop
fnstcw
add
ror
mov
jecxz
pop
mov
inc
and
daa
lahf
xchg
sub
xlat
xor
and
jmp
sahf
xchg
jmp
in
std
lods
xor
sub
mov
jae
sti
push
push
add
test
jo
inc
push
pop
cmp
dec
rep
loopne
jae
add
mov
xchg
jp
(bad)
mov
push
mov
fwait
xchg
dec
xchg
stos
add
inc
mov
jb
js
aaa
movs
cmp
aas
add
arpl
push
or
int
add
or
test
imul
pop
(bad)
sbb
fisubr
mov
lea
shl
or
sub
gs
pop
lea
(bad)
mov
xchg
retf
sar
jne
mov
cdq
xchg
loop
jecxz
adc
add
call
jo
dec
xor
aaa
test
fimul
xchg
aaa
mov
lahf
inc
imul
jns
mov
push
retf
jle
push
add
jecxz
mov
and
loope
cld
leave
out
jbe
mov
mov
jnp
and
mov
dec
ror
or
jecxz
push
mov
xor
inc
lods
mov
sub
push
cwde
cmp
popa
bnd
setnp
int
leave
jnp
rcr
retf
jl
mov
jl
mov
and
xor
add
mov
ins
pusha
cs
cmp
sbb
ret
push
cmp
sbb
test
adc
mov
aas
je
push
jnp
(bad)
mov
sti
and
int
ss
cs
sar
dec
add
push
dec
fsub
movs
mov
nop
rcr
aas
fdiv
jo
rcr
push
sub
mov
(bad)
inc
mov
xchg
mov
das
jge
mov
mov
jbe
sub
fchs
inc
cmp
sub
bound
imul
and
mov
xor
dec
push
pop
ficom
or
les
aaa
lds
movs
jl
adc
call
out
scas
int3
nop
dec
mov
xchg
push
or
cmp
pop
inc
cmp
int3
jmp
push
or
jo
and
fwait
jne
cmp
sbb
cwde
jns
rcr
aas
mov
jge
js
jns
xchg
in
dec
jne
popf
mov
sahf
pushf
dec
lea
loop
out
fs
mov
jmp
popa
add
inc
pop
pushf
jmp
cld
ins
cmp
sbb
pminsw
imul
pop
dec
dec
jle
mov
xor
call
fsub
jns
xchg
int
cld
out
out
sbb
cmps
pusha
stos
mov
cs
push
lahf
mov
(bad)
cwde
pop
sub
pop
mov
jmp
jae
jmp
sbb
and
out
push
fdivr
test
pusha
cld
push
mov
pop
add
in
jle
xor
imul
loop
loopne
fst
js
lods
jno
xchg
inc
or
xchg
ins
push
adc
pop
sub
sbb
xor
shr
(bad)
je
or
or
xor
jp
add
cmp
push
dec
mov
jge
daa
addr16
das
mov
pop
fimul
cli
test
mov
aas
stos
nop
sbb
not
adc
xor
popf
adc
mov
dec
test
or
shl
mov
sbb
cmp
push
test
fist
rcl
pop
pop
sbb
or
add
jmp
sbb
mov
aam
fdivrp
add
mov
mov
lea
mov
xrelease
out
pop
or
xrelease
jb
imul
or
mul
mov
jmp
jp
inc
mov
jb
cmp
(bad)
push
pop
fstp
jb
xchg
add
or
call
test
sar
jp
test
pop
mov
cdq
dec
dec
call
shl
inc
pop
icebp
mov
into
ret
jle
adc
mov
push
pop
icebp
push
shl
pop
rol
out
pop
int3
and
mov
sahf
test
sar
int3
add
imul
int3
pop
push
mov
xor
push
dec
mov
pop
push
lods
movs
inc
mov
mov
mov
inc
dec
sub
lock
push
xor
mov
outs
aad
jge
bound
mov
ror
pop
adc
jbe
jo
(bad)
std
mov
sbb
sbb
jl
mov
repnz
dec
xchg
mov
pop
(bad)
sbb
cmps
push
xor
neg
ins
mov
mov
push
lods
inc
fucomip
push
and
fnsave
gs
out
mov
mov
stos
fldenv
icebp
xor
mov
pop
ja
lods
or
cmps
jmp
push
pop
mov
pop
je
xlat
mov
mov
pop
rcr
stos
add
dec
(bad)
idiv
jnp
xchg
popa
stos
adc
inc
push
inc
mov
cmps
in
push
test
nop
or
add
sbb
aas
stos
xchg
mov
push
gs
mov
fbstp
xchg
movs
sbb
sbb
mov
xchg
or
ficom
xchg
mov
mov
jns
out
pushf
jecxz
push
int
int3
mov
xor
mov
stc
xor
xchg
push
hlt
lods
sub
dec
pop
aad
lods
mov
rcr
xor
inc
aad
mov
or
jle
iret
iret
or
push
jne
xor
ja
icebp
je
pop
dec
(bad)
and
iret
cmps
das
mov
and
ret
cmp
jb
sub
lds
iret
aad
add
mov
not
shl
jb
ret
out
push
xchg
daa
adc
sub
xor
shl
xchg
push
enter
pop
mov
dec
sub
push
rcl
(bad)
xchg
cwde
or
outs
jg
sub
jne
addr16
xor
jge
movs
arpl
ret
call
pop
xchg
in
jno
and
mov
adc
mov
xchg
inc
iret
push
outs
xchg
push
cwde
mov
shr
adc
push
out
imul
movs
mov
adc
js
data16
je
pop
loop
(bad)
pop
xchg
inc
dec
pop
push
out
ror
pop
(bad)
push
fcmovnbe
pop
gs
push
cmp
mov
test
and
mov
imul
dec
jl
or
xor
loope
rcl
xor
adc
push
sbb
fsubr
mov
dec
jno
mov
les
je
xchg
mov
sub
imul
pop
add
imul
jle
push
clc
sbb
repz
fwait
loop
inc
push
int
nop
fcom
add
ins
push
fwait
jmp
out
retf
es
adc
movs
sub
xor
into
fidiv
jmp
in
sub
test
inc
or
pop
sub
movs
sbb
xor
arpl
cmps
sub
test
cmp
leave
and
clc
ret
mov
xor
xor
add
out
mov
retf
mov
mov
mov
xchg
cmc
xchg
shr
cmp
cdq
mov
repz
sahf
shl
xlat
inc
fwait
popf
adc
imul
in
xor
push
icebp
adc
int3
sbb
mov
scas
mov
pop
mov
add
xor
imul
push
aaa
push
or
sahf
jg
mov
call
pop
retf
jl
in
mov
nop
std
hlt
aas
nop
js
and
xabort
push
sub
adc
aad
mov
ss
ins
push
mov
cli
in
in
jecxz
dec
in
fidiv
mov
fidivr
or
jo
sbb
sbb
aad
in
cmp
sbb
cmp
fidivr
adc
mov
xchg
cmp
pop
push
push
push
push
mov
and
add
aad
fninit
dec
cwde
popf
pop
or
leave
clc
mov
add
adc
js
cwde
dec
imul
pop
ror
popa
inc
dec
cld
mov
imul
mov
das
xchg
pop
pusha
jb
mov
adc
int
popa
sahf
test
jb
push
xchg
or
adc
shl
xchg
push
stos
dec
jo
or
jns
leave
sbb
inc
stos
enter
pop
pop
jp
outs
and
sahf
xchg
push
fisubr
xchg
push
push
call
arpl
imul
jmp
movs
xchg
pop
xchg
sti
fidivr
xchg
lods
mov
les
shl
das
fisttp
add
(bad)
xchg
addr16
jb
mov
push
imul
retf
add
jae
cmp
xchg
add
test
scas
cli
push
out
push
add
jnp
push
xchg
(bad)
xor
stos
adc
pop
push
sar
pop
pop
xchg
pop
push
pop
mov
sub
das
add
bound
mov
rcl
mov
imul
cmps
jns
jnp
jmp
xor
cmp
mov
outs
push
(bad)
movs
xor
(bad)
dec
pusha
mov
inc
push
cmp
xor
stos
or
pop
mov
fstp
lods
jbe
mov
jno
cld
xchg
add
jmp
cmps
push
and
(bad)
js
test
popf
imul
mov
out
xchg
lahf
nop
xchg
adc
lds
sub
mov
adc
in
mov
xchg
pop
or
ja
test
popa
and
sub
(bad)
enter
or
fcomp
(bad)
fsubr
push
cld
jb
mov
push
add
mov
pop
in
out
xchg
ja
jbe
imul
mov
cmc
pop
push
ins
lods
loope
mov
add
call
mov
es
fiadd
xor
call
jnp
dec
mov
popf
sub
jns
or
mov
call
(bad)
dec
adc
or
int
xorps
mov
add
nop
inc
loope
cmp
or
push
jmp
xor
dec
xchg
inc
jmp
push
xchg
hlt
pop
std
sahf
retfw
push
jge
fsub
les
adc
jecxz
test
mov
dec
fimul
sub
cmps
xlat
mov
dec
or
js
movs
js
imul
and
movs
cmc
jecxz
lods
mov
loope
jns
lahf
jne
adc
jl
xchg
push
jne
xchg
dec
lods
mov
mov
(bad)
je
inc
mov
push
int3
mov
icebp
(bad)
cmp
sahf
movs
inc
mov
ins
add
out
mov
rcr
scas
mov
je
jnp
dec
mov
sub
mov
jmp
inc
cmp
jae
imul
mov
shr
sbb
or
sub
sar
dec
dec
jns
lods
xchg
sbb
mov
adc
mov
add
data16
loop
xor
sub
dec
mov
or
jle
sbb
hlt
arpl
es
lea
mov
cmp
sub
dec
jle
mov
adc
pop
and
fistp
dec
inc
lock
jo
jg
sub
jge
call
xchg
push
jmp
xor
or
pop
xchg
mov
into
retf
cmp
popf
fdiv
daa
xor
mov
sub
std
loopne
nop
ins
jmp
mov
popf
inc
arpl
rcr
loope
out
sahf
xlat
fs
outs
jae
out
call
inc
sub
push
out
(bad)
xor
fidiv
mov
mov
in
sub
push
mov
or
into
push
mov
xchg
xchg
jnp
dec
call
xchg
fidiv
mov
push
mov
xor
dec
xchg
xchg
mov
mov
repnz
cmc
push
ins
sbb
mov
retf
jne
sub
stc
xchg
or
je
dec
sbb
xchg
enter
(bad)
adc
pop
inc
xchg
push
js
and
jnp
mov
loop
call
lds
push
ins
fcmove
cdq
jbe
dec
jl
das
popf
jge
add
movs
ds
ss
cmp
nop
sub
sbb
dec
sbb
movs
jnp
and
es
mov
or
out
test
push
fmul
rcr
mov
dec
aad
xchg
inc
adc
inc
cmps
mov
pop
nop
xchg
mov
mov
ins
mov
mov
xchg
sub
xchg
sahf
mov
repz
cmc
jge
test
pop
call
push
nop
mov
popf
into
mov
loopne
or
(bad)
mov
hlt
js
pop
ror
pop
dec
cmp
pusha
(bad)
out
dec
inc
sub
push
mov
push
cld
dec
sub
dec
dec
jg
cs
out
dec
mov
iret
adc
js
int3
jns
and
cmps
rcr
inc
lea
aad
sti
out
inc
mov
cmps
icebp
mov
sbb
xor
pop
daa
sub
pop
scas
and
pop
mov
retf
hlt
aad
ins
jb
cli
into
retf
test
pop
push
mov
aad
(bad)
in
push
jae
fld
arpl
pop
adc
mov
aas
mov
or
into
or
cmp
push
jecxz
mov
test
js
loopne
push
mov
xchg
mov
ret
(bad)
shl
pop
nop
pusha
lea
pop
mov
inc
and
dec
xchg
xchg
(bad)
mov
sub
test
fneni(8087
sahf
ss
ficom
sbb
xchg
aad
or
jbe
xor
add
cbw
adc
lods
ret
lods
jp
fdivrp
mov
mov
int3
jmp
jnp
ror
cmc
cli
popa
sub
pop
test
dec
sahf
xor
repz
inc
sar
lods
into
pop
ret
rol
scas
push
ja
or
enter
jl
idiv
pop
push
pusha
(bad)
sbb
mov
lds
sbb
xchg
fdiv
mov
into
push
mov
pop
daa
pop
(bad)
jmp
rcl
inc
add
lahf
mov
gs
call
ret
mov
cmp
sub
gs
cld
fucomip
mov
jae
(bad)
scas
pop
push
xchg
in
test
mov
dec
jmp
sbb
mov
mov
jge
lock
xor
pop
mov
xchg
adc
ret
mov
iret
add
out
mov
test
mov
cmp
fisub
iret
pop
cs
or
icebp
add
sbb
scas
xchg
or
inc
fistp
into
(bad)
cmps
test
lahf
cld
sbb
sahf
cmp
ins
sub
aad
leave
jne
mov
in
iret
in
leave
adc
xchg
sub
jmp
loope
pusha
xchg
lods
push
icebp
mov
adc
or
aad
and
leave
ss
arpl
imul
dec
enter
rcl
jl
or
test
je
test
jl
pop
loopne
imul
sbb
add
dec
fs
mov
xchg
pop
pop
or
pop
int3
pusha
mov
fcom
inc
mov
dec
jo
push
lea
test
sbb
inc
jge
adc
sar
mov
mov
call
pusha
xor
pop
je
xor
aam
dec
lds
hlt
push
jmp
mov
test
(bad)
fdiv
xchg
jbe
ret
pop
nop
dec
je
test
jmp
pop
xchg
xchg
inc
jbe
ret
popa
mov
pusha
jae
ja
dec
mov
outs
sub
hlt
jb
or
jb
or
ins
dec
loopne
cmc
jle
js
xor
fcomp
mov
add
test
fstp
fsubr
sub
push
adc
clc
pushf
push
adc
xchg
inc
add
pusha
mov
ss
cwde
add
mov
int
jns
inc
cdq
mov
js
mov
dec
or
inc
(bad)
and
xchg
test
mov
clc
loop
daa
daa
shl
cdq
xchg
push
shl
xor
mov
mov
movs
sub
xchg
mov
add
push
sbb
pop
pop
icebp
fwait
jns
test
jbe
test
mov
push
sbb
jns
test
sbb
pop
cmp
cmps
adc
pop
mov
xchg
inc
inc
mov
lods
add
je
inc
xchg
or
jne
inc
add
and
shl
mov
mov
jmp
pop
add
imul
(bad)
fidiv
daa
aaa
cmps
sar
xchg
cmp
xchg
mov
and
loope
pop
cdq
dec
pop
mov
repz
or
mov
lock
or
mov
outs
push
loopne
mov
test
xor
pushw
mov
inc
or
aam
jg
push
mov
stos
(bad)
not
mov
retf
test
adc
ins
jmp
cwde
inc
mov
xor
adc
inc
and
fisubr
arpl
or
or
loopne
sub
jnp
xor
lahf
test
xchg
dec
cmp
lock
arpl
or
rep
or
mov
stos
or
xchg
mov
sbb
clc
retf
stc
xor
xchg
inc
xchg
ror
push
int3
push
shl
mov
xchg
fimul
iret
xchg
push
mov
sub
mov
lds
mov
jno
jae
or
mov
xlat
test
(bad)
cdq
inc
jmp
pop
out
lods
push
pushw
sub
mov
sub
inc
es
rcr
dec
add
rcl
rcr
mov
mov
mov
or
pusha
outs
mov
mov
mov
ror
retf
(bad)
add
or
mov
push
aad
pop
push
hlt
ins
cld
dec
dec
mov
sbb
enter
pop
mov
inc
daa
dec
inc
pop
pusha
push
in
gs
mov
pop
inc
lahf
xchg
mov
retf
das
jp
fild
jae
mov
inc
xchg
outs
imul
add
je
mov
data16
scas
add
pop
mov
dec
add
mov
iret
lods
loope
mov
leave
test
jo
adc
push
jmp
pop
push
je
mov
or
mov
or
icebp
mov
(bad)
cld
sbb
cmc
xchg
das
into
adc
nop
or
lds
imul
dec
sub
pop
mov
push
sub
(bad)
int3
movs
imul
cmp
arpl
cmp
dec
inc
ins
jne
cmp
pop
fwait
add
aas
iret
mov
dec
scas
dec
int3
mov
or
mov
xchg
mov
fst
(bad)
enter
mov
mov
jle
mov
scas
jecxz
shr
xlat
mov
xchg
loope
iret
int
inc
ret
dec
lods
repnz
pop
or
test
mov
jne
(bad)
pop
cmp
push
xchg
jne
loop
and
test
jo
push
or
aaa
push
sar
pushf
and
jne
mov
and
sar
cmps
push
nop
mov
hlt
cdq
mov
in
push
retf
lods
mov
mov
jbe
dec
mov
lahf
push
xor
fs
in
aaa
jp
adc
sbb
dec
cld
mov
movs
in
arpl
inc
nop
ins
ss
pop
int
addr16
pop
push
sbb
push
dec
sahf
xchg
mov
ins
add
movs
fdiv
cmp
lds
push
push
sahf
lea
sub
adc
jge
push
mov
jnp
mov
or
mov
aad
lods
pop
or
sbb
and
mov
ret
pop
out
jbe
test
daa
jge
mov
int3
test
mov
ret
ret
mov
fsubr
fisttp
popf
xor
and
fld
imul
jnp
mov
ins
std
cmp
xlat
sbb
out
test
sub
add
mov
mov
cli
clc
and
jns
mov
enter
(bad)
mov
outs
sub
js
push
cwde
push
dec
dec
icebp
mov
ficom
jecxz
jo
and
test
xchg
mov
cmp
cmp
int3
imul
pusha
vdivsd
jne
and
pop
xchg
sbb
pop
jmp
and
lea
xor
scas
adc
and
xchg
push
inc
or
mov
lods
xor
sub
and
lods
scas
adc
ins
sub
imul
pop
cmp
fcomp
xor
(bad)
jle
pop
cs
aam
add
repnz
pop
cs
cmp
les
sbb
js
retf
popf
ins
mov
and
jo
imul
shl
sbb
jl
int3
ds
jg
cmp
imul
fsubr
pushf
loop
call
push
(bad)
and
test
xor
adc
sbb
and
adc
imul
cmp
pop
retf
aaa
ret
arpl
(bad)
(bad)
sti
cmps
sub
dec
aad
je
mov
mov
popf
push
js
lods
cdq
push
int
inc
xlat
in
popf
pop
mov
out
jae
pop
xchg
mov
inc
cmp
data16
sub
ja
jae
mov
mov
pusha
sbb
pop
das
pop
repz
icebp
inc
retf
sub
data16
aad
push
mov
nop
mov
mov
mov
xor
push
sbb
mov
xlat
scas
arpl
jno
sahf
js
xchg
cmp
pop
pop
ins
fstp
xor
arpl
fidivr
pop
in
pop
sub
(bad)
lahf
xor
xor
addr16
les
mov
cmp
sbb
or
fisub
or
test
cmp
jl
mov
sub
fistp
push
sbb
jbe
dec
imul
ret
mov
and
mov
xchg
push
add
hlt
pop
in
sbb
cs
stc
mov
ror
mov
in
mov
and
sub
test
pop
sub
imul
movs
pop
xor
popa
(bad)
cmp
fbld
(bad)
inc
in
shl
mov
cmp
jns
fsub
inc
mov
mov
mov
xor
lods
inc
push
ret
push
dec
jae
adc
or
dec
mov
or
pop
push
mov
int
out
aad
push
xor
or
movs
jo
js
add
and
push
mov
jno
sbb
cdq
(bad)
dec
je
xchg
push
inc
jns
sbb
jge
aad
adc
xchg
pop
addr16
dec
(bad)
sub
sub
jb
xor
mov
retf
push
mov
push
sti
fdivr
mov
es
repnz
xchg
pop
dec
add
dec
pop
cmp
mov
pop
int3
xchg
sub
or
lods
xchg
cmp
dec
pusha
(bad)
repnz
add
adc
int3
adc
jge
daa
pop
push
adc
inc
sub
(bad)
push
and
mov
pop
inc
repnz
into
mov
shl
jne
mov
imul
xlat
inc
jne
mov
bound
xor
inc
xor
mov
lahf
test
dec
(bad)
cmp
js
lods
xchg
or
loopne
push
push
mov
cmps
and
fisub
int
xor
dec
cmp
addr16
je
or
xor
jl
imul
xor
into
cmps
inc
aad
repnz
cmp
lahf
add
(bad)
and
test
sub
mov
mov
xchg
arpl
pop
ror
fistp
and
(bad)
loop
daa
mov
imul
mov
fwait
pop
push
test
int3
push
(bad)
xchg
dec
sub
xchg
into
xor
pop
div
pop
mov
popa
push
int3
out
jo
aas
frstor
pop
in
dec
cli
jae
das
jb
(bad)
out
out
cmp
jne
popa
mov
or
add
aas
popf
cwde
pushf
pop
movs
jmp
dec
adc
pusha
jae
lods
sahf
add
mov
(bad)
jl
pop
sub
addr16
inc
(bad)
dec
dec
sub
mov
mov
add
in
popa
mov
xchg
sub
rcr
(bad)
dec
pop
ja
push
xor
xchg
and
test
sbb
(bad)
bound
lods
arpl
cs
push
xchg
fs
xchg
push
mov
cmps
int
inc
adc
push
(bad)
xor
adc
sub
cmp
sbb
and
int3
xchg
pop
cmps
fdivr
lahf
lods
pusha
adc
sahf
dec
ds
jae
sbb
xor
mov
loope
shl
stos
adc
rcr
(bad)
pop
sub
mov
mov
jle
(bad)
jmp
and
ret
mov
(bad)
sbb
sub
iret
test
int
je
and
js
inc
mov
jmp
(bad)
inc
push
add
and
lea
jo
outs
xchg
call
sti
mov
jns
jnp
(bad)
nop
jle
in
or
loope
inc
retf
aas
inc
sbb
stc
arpl
dec
outs
push
or
mov
and
scas
push
mov
mov
pmulhuw
popf
add
lea
sbb
movs
popf
sbb
addr16
cli
adc
push
call
and
cmp
fsub
mov
sbb
pop
sub
adc
cmp
xor
test
into
add
mov
movs
mov
es
xor
test
push
sub
mov
test
inc
xor
repz
call
mov
iret
pop
add
cdq
pop
push
xchg
pop
jns
fst
test
jmp
mov
push
div
pop
jae
outs
das
pop
adc
mov
stos
sub
sbb
aas
push
dec
fcom
pushf
and
jge
aam
jp
out
push
je
sti
leave
sub
loopne
lods
xchg
or
loope
iret
push
fxch
cmp
shr
add
mov
push
rol
cmp
ins
fdivr
add
or
xchg
lods
push
jmp
repz
ficomp
inc
lahf
(bad)
movs
pop
push
push
sbb
cld
adc
out
pushf
shl
jnp
retf
mov
imul
jecxz
shr
pushf
jne
scas
add
pop
xor
daa
pop
sbb
xchg
dec
or
jl
int
or
stos
movs
mov
inc
jle
rol
cmp
aas
(bad)
adc
cwde
data16
push
ja
jne
xor
cmp
xor
push
jo
ja
sbb
adc
jae
out
dec
cmc
jbe
inc
fild
arpl
jmp
add
jnp
inc
push
lods
scas
fdiv
fwait
mov
sbb
(bad)
(bad)
inc
jb
sub
push
fbld
mov
sub
adc
pop
retf
ss
stos
lahf
popf
xchg
fmul
or
xor
adc
jmp
js
xchg
push
xchg
xchg
sbb
mov
das
add
scas
inc
rcr
xchg
imul
lods
adc
pop
arpl
jp
cwde
or
outs
mov
xor
leave
aas
pop
xchg
xor
mov
into
nop
in
bound
shl
call
push
mov
popa
sbb
cmp
push
mov
jmp
jae
out
outs
scas
into
and
or
mov
pop
mov
leave
jmp
adc
div
fs
outs
gs
popf
outs
test
in
push
shr
cmp
sbb
push
int
or
mov
ins
scas
aaa
lea
push
mov
mov
mov
inc
stos
push
pushf
retf
pop
retf
shl
adc
push
sub
mov
sub
xchg
mov
jmp
test
fnsave
in
ds
dec
adc
pop
cmp
jmp
xchg
or
ja
fwait
sub
mov
pop
xchg
cmps
outs
sub
xor
shl
xor
sahf
outs
push
mov
retf
lock
inc
jne
pop
mov
pop
or
mov
int
cs
jge
xlat
push
js
mov
xlat
lods
xor
test
jne
mov
mov
dec
jae
fsub
push
(bad)
push
sar
pop
xlat
xchg
pop
adc
pop
mov
repz
test
mov
ret
xor
int3
inc
movs
xchg
aam
call
xchg
idiv
mov
das
les
push
cmp
pop
test
xor
sbb
popf
cmp
ficom
push
nop
pop
test
push
rcl
hlt
or
cmps
ss
xchg
sbb
mov
or
mov
ret
arpl
outs
shl
aad
hlt
xor
clc
pop
or
(bad)
sub
imul
pusha
test
cmp
ret
mov
push
nop
and
cmc
mov
xchg
adc
or
or
pop
popf
mov
push
push
jnp
(bad)
pop
scas
fs
shl
dec
inc
sub
xor
cdq
mov
cmp
(bad)
fwait
repz
cmp
ss
mov
nop
and
sub
lods
kmovw
cmp
mov
iret
setnp
iret
stc
in
ja
and
push
mov
mov
repnz
stos
push
lock
add
mov
xor
add
mov
ficomp
sub
cmc
pop
pushf
sub
cmp
and
enter
ror
loopne
nop
or
ret
das
daa
inc
fcomi
(bad)
cmp
xlat
adc
aad
jmp
mov
cs
int3
add
xchg
and
mov
loopne
cmps
inc
push
arpl
jns
dec
imul
sbb
mov
sub
adc
ss
(bad)
shl
lods
mov
leave
popa
sti
div
out
inc
sub
pop
or
mov
rcl
xchg
cmp
pusha
lahf
fmul
repnz
dec
scas
adc
xor
movs
add
arpl
xlat
aaa
jp
les
lock
adc
dec
jne
jg
adc
mov
mov
inc
push
inc
sub
jne
inc
mov
push
mov
jo
js
sub
push
(bad)
pop
jb
or
lock
fmul
rcl
xor
pusha
shl
js
sub
add
clc
push
mov
mov
pop
pop
nop
mov
jmp
mov
in
or
jne
push
pusha
and
sbb
inc
aam
ja
mov
jl
pop
or
jnp
pop
stos
dec
pop
rcr
cmp
push
cmps
mov
cmp
push
int
xchg
pop
push
int
lahf
or
into
mov
xor
aam
scas
pushf
mov
ss
data16
pop
jno
pusha
pop
ins
mov
mov
cmp
fwait
mov
jge
daa
into
and
xchg
xchg
ret
adc
test
(bad)
mov
ja
jb
and
mov
push
in
xchg
fstp
pushf
cmp
xchg
dec
cmps
mov
xor
xor
mov
in
rcl
push
test
pusha
leave
movs
pop
mov
fidivr
mov
dec
icebp
dec
sub
jae
jp
pop
cmps
cmp
inc
aas
imul
and
cld
xchg
sub
cmp
inc
inc
ins
mov
xor
mov
adc
rcl
in
xchg
xor
fidiv
jp
fsub
cmps
pop
xor
xor
dec
and
shr
jge
(bad)
add
sbb
push
lods
stc
loope
jno
fldcw
out
mov
dec
movs
and
dec
nop
push
lahf
test
pop
push
or
pop
sub
add
in
mov
imul
out
aam
pop
clc
shl
and
retf
pop
push
pop
idiv
retf
movs
dec
jmp
jecxz
out
sbb
cdq
xor
das
lea
out
sbb
push
push
mov
push
fldenv
xchg
mov
js
jl
call
cmp
jg
outs
das
add
mov
and
mov
movs
push
mov
push
shl
cli
ret
ja
push
push
mov
out
sbb
push
sub
ss
addr16
(bad)
aas
xchg
jp
xchg
test
jo
into
adc
pop
test
push
js
mov
pop
xchg
stos
ret
mov
movs
mov
jge
xchg
xchg
inc
push
or
mul
xor
mov
or
mov
and
fistp
es
pusha
jne
stc
pop
movs
mov
sbb
xchg
cmp
mov
mov
and
shl
lds
mov
into
push
dec
jge
mov
cmp
or
push
(bad)
jne
ror
arpl
retf
xor
lahf
les
test
push
pop
fs
imul
inc
sbb
aaa
jle
jecxz
test
adc
xor
jle
test
pop
xor
cmp
push
in
daa
lods
pop
daa
mov
cs
sbb
xchg
jae
mov
pop
xchg
inc
cmp
jae
nop
(bad)
adc
sbb
or
sub
dec
lods
xor
cmps
sub
in
arpl
pop
add
add
iretw
adc
lea
cld
sahf
adc
int3
push
addr16
fisttp
popa
fisttp
push
fnstcw
xchg
fsub
je
(bad)
cmps
stos
mov
jo
lods
pop
dec
jp
push
or
out
or
pop
jnp
push
adc
inc
jo
repnz
inc
outs
stc
hlt
mov
xor
(bad)
or
xchg
xchg
jge
es
and
repz
call
pop
or
rcr
mov
push
cmp
in
jno
jecxz
adc
add
sub
xor
enter
and
or
mov
push
jae
jmp
pop
cmps
push
mov
cli
mov
and
mov
sub
scas
stos
test
or
test
mov
or
push
jl
cdq
jmp
lds
in
push
outs
mov
mov
enter
je
jmp
push
jnp
push
mov
jg
les
push
and
ret
inc
xchg
int
dec
cmc
fcmovne
mov
add
sub
xchg
xchg
aaa
out
cmp
rcl
out
inc
mov
pop
dec
inc
mov
popf
dec
fist
pop
and
lea
mov
fsubr
data16
add
ja
inc
clc
sbb
pop
sub
sbb
xchg
xchg
inc
sbb
cwde
or
fldcw
and
mov
and
jl
or
xor
test
dec
popf
addr16
imul
retf
mov
dec
cmps
push
pop
push
dec
mov
data16
push
or
push
dec
and
cli
xor
imul
lahf
retf
lods
ja
jo
sbb
jmp
call
pushf
aas
shl
push
in
mov
test
xchg
dec
aas
aad
xor
sar
retf
mov
or
add
jo
add
xchg
rol
push
popf
xor
xchg
xor
add
imul
adc
neg
mov
or
out
cmp
nop
and
fwait
ins
push
mov
xchg
dec
mov
or
pushf
mov
and
imul
inc
mov
test
aas
gs
xchg
push
inc
sbb
add
mov
sbb
daa
fild
lea
or
and
mov
xor
(bad)
pop
push
push
jle
data16
add
repnz
jbe
sub
xor
jp
jae
pop
mov
imul
in
pusha
sbb
aam
adc
div
add
fsubr
and
ja
sbb
xchg
fcomp
or
pushf
mov
pop
test
inc
or
ret
pop
test
scas
push
xor
loop
arpl
and
mov
aam
lea
arpl
mov
and
or
ss
rol
mov
ret
push
addr16
sbb
adc
jl
cmps
and
mov
scas
fild
sbb
sbb
scas
push
dec
inc
mov
dec
div
and
test
into
add
jecxz
and
pusha
clc
mov
in
(bad)
iret
mov
js
ja
xchg
sub
lea
cdq
jae
fmul
stc
push
out
mov
push
imul
dec
loop
outs
cmp
xchg
outs
and
pop
inc
sub
push
or
xchg
mov
mov
out
inc
outs
and
adc
push
sbb
mov
dec
lods
popa
adc
and
shl
lods
inc
jno
imul
jmp
cmps
cmp
adc
push
test
sbb
nop
ror
push
dec
sahf
ficomp
sub
jge
pop
cmp
xchg
push
lea
sbb
sbb
push
push
sub
daa
jl
push
jl
mov
pop
mov
dec
mov
fisttp
adc
not
lods
jns
inc
dec
adc
push
add
sbb
cmp
sbb
push
dec
mov
inc
fcomp
outs
outs
dec
scas
mov
push
add
fisttp
mov
pop
addr16
cmp
pop
sbb
adc
mov
repnz
sub
sahf
mov
mov
shl
pushf
retf
and
cmp
mov
aad
lea
or
pop
iret
aas
mov
ins
and
lea
(bad)
or
xchg
or
xchg
jno
(bad)
bnd
jnp
push
fs
pop
jb
xchg
fdivr
xor
(bad)
fnstsw
lock
loopne
out
xor
leave
pop
pop
or
imul
jl
push
test
nop
jae
and
dec
cmp
lahf
popf
or
mov
test
out
js
test
mov
stos
in
call
pop
jnp
es
repnz
mov
jmp
mov
cwde
stos
add
fimul
call
mov
mov
mov
sahf
lods
jo
fisubr
adc
xlat
out
sub
inc
mov
add
xchg
push
xchg
push
arpl
mov
adc
sbb
iret
out
outs
cmp
pusha
mov
pushf
jno
ss
cmp
and
(bad)
xchg
retf
jl
mov
pop
popf
pushf
jle
pop
add
jmp
cli
pop
arpl
add
jg
cmp
les
fstp
sbb
jge
(bad)
call
std
jae
mov
in
retf
push
adc
jge
xchg
jl
int
or
sbb
pop
mov
loopne
add
jbe
shl
ret
movs
cdq
stos
xchg
fstp
sub
(bad)
iret
stos
(bad)
ror
xchg
and
adc
dec
pop
nop
mov
ins
sub
pop
add
pusha
cli
inc
mov
and
dec
mov
cmp
inc
push
pop
add
repnz
xor
jae
cmp
int
(bad)
fdiv
or
test
lds
mov
cli
leave
aaa
(bad)
push
mov
fs
mov
xchg
jns
adc
shufps
mov
stc
mov
sub
inc
xchg
xchg
into
(bad)
jle
jnp
(bad)
and
mov
mov
test
pop
jns
inc
dec
fwait
push
fdivp
sub
popf
cmp
das
and
jl
hlt
bnd
xlat
push
jp
jns
int
add
in
stos
(bad)
stc
mov
retf
mov
jns
pop
arpl
int3
ins
jno
outs
xchg
out
and
pop
cmc
shr
add
scas
push
add
inc
int
(bad)
or
outs
adc
outs
adc
lahf
dec
into
mov
adc
jmp
push
aam
cmp
mov
outs
xchg
scas
cmp
mov
xlat
pop
dec
push
aam
xor
xchg
push
fs
setle
in
pop
outs
mov
pop
adc
jns
dec
outs
fdivr
fs
paddd
add
pop
jl
cmp
leave
shr
addr16
lea
stos
dec
mov
pop
cmp
sbb
sahf
gs
mov
out
mov
dec
repz
sbb
js
dec
add
pushf
mov
scas
mov
sbb
int3
enter
pushf
sub
or
xchg
sbb
jmp
pop
cmps
pop
mov
xchg
jmp
jbe
mov
mov
fcom
int3
fidiv
retf
cmp
into
push
retf
test
mov
xor
xchg
mov
jmp
es
pop
ins
(bad)
retf
add
jmp
lea
xlat
xchg
(bad)
mov
mov
mov
cmp
ja
cmp
rcr
inc
enter
shr
cmp
int3
fidivr
and
jecxz
jb
xchg
leave
or
cmc
xchg
mov
jns
test
xor
iret
cmps
xor
or
enter
push
mov
test
xlat
out
pop
mov
fdivr
push
cmp
jl
ficomp
test
or
(bad)
fnsave
mov
sub
mov
in
lea
xchg
stos
mov
jb
dec
lods
push
add
pop
pop
iret
fistp
cmp
jae
pop
pop
div
sbb
mov
xor
or
jp
mov
dec
sbb
adc
adc
neg
or
push
add
frstor
nop
test
inc
shl
lock
sar
adc
mov
in
lea
mov
jae
and
mov
mov
daa
dec
scas
mov
outs
mov
mov
fs
bound
js
adc
mov
cmps
xor
shl
call
mov
repnz
int
xor
jmp
push
mov
test
lock
push
test
pop
mov
jl
pop
addr16
pop
sub
adc
inc
outs
ror
xchg
push
stc
pop
push
pop
pop
cmp
sub
ins
shl
dec
(bad)
adc
jl
fwait
cmp
inc
add
fdiv
dec
sub
int3
sbb
clc
jae
movs
xor
pusha
lods
dec
pop
shl
fs
sbb
inc
or
jg
sar
jb
outs
ret
div
pop
mov
xchg
jns
scas
sub
mov
jne
ror
inc
fisub
mov
int
sbb
out
inc
and
call
inc
scas
loope
retf
mov
dec
mov
xchg
mov
xchg
mov
adc
lea
call
clc
(bad)
int3
fisub
repnz
fistp
pop
into
dec
mov
mov
sub
sti
call
jo
ja
xchg
lea
add
repnz
cli
mov
movs
adc
imul
adc
push
or
adc
mov
mov
mov
pop
es
call
call
push
or
sub
adc
sti
int3
iret
stos
div
movs
and
and
leave
sbb
gs
mov
mov
dec
nop
mov
pop
cmp
xchg
xlat
mov
out
inc
and
sub
in
push
repz
xor
jo
xor
push
ins
outs
jmp
xchg
ja
add
jp
popf
jge
enter
or
xchg
(bad)
fild
enter
lea
pop
ret
cmps
pushf
(bad)
jl
mov
xlat
fdivr
mov
(bad)
test
or
aam
push
push
rcr
mov
int3
clc
ins
cmp
cmp
das
retf
fisttp
lea
mov
adc
es
xchg
sar
mov
xlat
pop
xchg
ficomp
mov
clc
cmp
out
popf
dec
and
cs
lds
adc
mov
push
ret
jb
jbe
imul
sahf
lods
jne
fsubp
push
in
jg
scas
xor
push
push
stos
icebp
call
xor
in
pop
xchg
sub
leave
fcmovnu
mov
lods
inc
ret
enter
xchg
ret
or
mov
sbb
call
cmps
test
outs
pop
push
xchg
inc
xchg
hlt
add
imul
imul
cwde
dec
mov
jnp
jae
pop
jge
test
and
xchg
sbb
mov
jg
inc
jmp
jbe
jo
push
mov
inc
clc
add
or
test
pushf
adc
xor
(bad)
jle
xchg
add
sub
jno
imul
jb
and
scas
adc
mov
push
ins
pop
xchg
fdivr
mov
das
test
popf
push
jmp
mov
adc
pop
sub
mov
mov
dec
ins
ds
test
mov
and
adc
test
test
jge
icebp
mov
jmp
(bad)
mov
mov
aas
(bad)
aaa
adc
imul
popf
not
or
stos
jecxz
dec
jb
dec
ins
pop
cmp
aas
jp
jae
ds
mov
mov
sbb
js
fsubr
imul
lods
pop
xor
jbe
arpl
mov
sub
or
rcr
es
lahf
inc
sub
inc
hlt
jns
and
mov
xchg
shr
jbe
(bad)
pusha
aam
mov
jl
mov
mov
and
or
ss
mov
pop
jle
sbb
inc
jp
stos
mov
shl
out
mov
xchg
jnp
dec
mov
jmp
cdq
(bad)
fimul
jg
dec
xor
and
add
xor
pushf
retf
pop
es
mov
test
inc
mov
push
sub
arpl
adc
inc
mov
sbb
outs
test
lahf
sub
shl
imul
ret
imul
outs
ins
fcomp
xchg
push
mov
push
push
xchg
jno
ins
fldcw
les
push
mov
adc
imul
test
add
add
in
shl
jbe
jnp
jnp
dec
push
icebp
push
push
jge
jecxz
mov
jnp
mov
mov
xlat
jae
fist
sbb
mov
mov
(bad)
ss
fwait
jne
xchg
data16
fdivr
inc
sbb
(bad)
scas
sbb
xchg
jle
push
push
lods
clc
dec
adc
push
shr
test
jp
xchg
mov
arpl
xchg
xor
pushf
je
mov
or
jle
xor
add
outs
inc
(bad)
sub
(bad)
enter
pop
and
ins
retf
js
cld
inc
add
dec
pop
mov
stc
sub
mov
repnz
push
fld
aam
loope
and
mov
push
stc
mov
and
loop
movs
lea
sbb
in
pop
ret
fst
aaa
sbb
shl
mov
push
test
xchg
adc
retf
pop
push
mov
cli
xor
sbb
push
push
xlat
push
sub
jae
ret
pop
pushf
aam
scas
cmp
ss
scas
push
pusha
jno
pusha
pop
sar
mov
dec
je
inc
dec
push
sti
jmp
in
lods
loop
ins
mov
rcr
pop
adc
es
fs
or
jb
cmp
inc
aad
push
jae
fcomp
inc
xchg
and
outs
sub
add
stos
sahf
cmps
fs
jg
lahf
in
mov
xchg
and
or
(bad)
stc
mov
js
push
xchg
mov
push
xor
push
mov
xchg
sar
ret
aaa
mov
mov
loopne
add
jg
fisttp
div
fist
pop
mov
dec
ja
fld
push
sbb
data16
mul
ss
shl
xchg
mov
mov
int3
test
or
pop
xchg
push
retf
mov
js
sub
push
pop
xor
test
test
retf
xor
xor
rol
push
ret
jmp
das
xchg
sub
retf
lods
int3
xor
push
mov
xchg
test
adc
dec
popf
push
xor
dec
xor
rol
xchg
ret
mov
cmps
push
lock
adc
mov
xchg
and
leave
arpl
mov
dec
jno
xchg
xchg
je
adc
mov
jl
push
cmp
mov
imul
inc
mov
mov
loopne
shl
sbb
sbb
ficom
mov
fstp
push
outs
adc
jp
dec
jae
sbb
data16
test
(bad)
jae
test
(bad)
ins
test
mov
(bad)
mov
lock
test
es
xchg
mov
add
mov
inc
sub
leave
or
adc
adc
cmps
push
sbb
or
aas
dec
inc
call
stos
push
mov
cmp
push
imul
data16
lea
popf
add
test
jne
mov
or
mov
pop
jno
mov
dec
mov
(bad)
test
add
aad
xchg
test
and
dec
jne
and
add
test
dec
imul
adc
test
sub
je
cmps
enter
mov
rcr
xchg
bound
and
mov
js
stos
sub
repnz
push
cli
fdivr
push
ret
addr16
and
and
sbb
rcr
dec
loop
sbb
jne
sbb
dec
in
hlt
je
out
aaa
test
in
rcr
shr
sbb
sbb
pop
mov
xor
push
aaa
test
mov
push
pop
inc
inc
or
mov
sbb
and
adc
fcmovb
or
cmp
shl
test
int
or
adc
test
ja
xchg
jmp
and
movs
out
shl
mov
ror
cmp
daa
movs
pop
mov
pop
mov
xchg
rol
movs
pop
out
jno
adc
jae
add
cmp
xor
cli
sti
dec
fstp
aaa
pop
test
adc
ds
sbb
icebp
sbb
push
jmp
(bad)
rol
xchg
repz
sub
nop
sbb
test
lods
movs
les
ror
jo
jno
std
push
lahf
xchg
or
ins
jge
jbe
jl
jmp
or
push
jne
xchg
push
lahf
or
or
push
ja
cmp
push
push
push
add
and
movs
int3
mov
pop
retf
jle
stos
xchg
mov
push
daa
mov
or
pop
out
ins
push
stc
sbb
arpl
push
inc
ins
fs
sub
sub
mov
sbb
iret
cmps
ret
sub
fmulp
stc
jge
push
pop
iret
test
mov
jbe
and
sbb
dec
xchg
sub
cli
adc
jmp
call
push
pushf
jmp
test
add
sub
rol
in
loopne
sbb
xchg
gs
xor
repz
ret
(bad)
mov
push
loope
jecxz
leave
aad
add
push
sub
imul
xchg
fldenv
jne
jmp
arpl
mov
xchg
xchg
test
(bad)
fisubr
(bad)
ret
inc
and
fidiv
add
push
mov
adc
retf
lods
bound
aaa
adc
ja
cmps
scas
call
ficomp
and
cs
out
push
mov
xor
popf
fmul
arpl
cmp
push
push
xor
push
adc
pushf
test
sbb
jo
(bad)
clc
xchg
popf
iret
je
add
mov
jp
inc
pop
leave
cmps
enter
or
(bad)
pop
lods
lods
movs
leave
xor
jno
in
movs
int
inc
adc
sub
adc
add
or
popa
mov
test
cmp
stos
xor
popf
dec
mov
add
cmc
jnp
shl
cmps
fimul
jecxz
shl
loope
adc
(bad)
std
jg
(bad)
xor
bound
in
and
(bad)
sbb
mov
inc
add
push
(bad)
adc
aaa
ins
(bad)
and
cmp
cmp
sub
or
hlt
add
mov
std
retf
xchg
cmps
mov
xor
outs
push
jmp
xchg
xor
sbb
fadd
or
jge
push
pop
adc
lods
jae
outs
fld
and
ret
jno
sbb
into
aam
aaa
pushf
xchg
movs
ss
cwde
lds
cmps
cmps
dec
mov
mov
outs
sub
and
mov
int3
into
popa
jns
test
cmp
imul
loope
mov
mov
cs
dec
neg
mov
sub
sub
cmc
out
xlat
dec
add
je
stos
cmps
cmc
lds
mov
cmp
adc
dec
jns
sbb
jo
inc
push
mov
loopne
add
jne
shl
push
iret
das
mov
ins
pop
pop
xor
rcl
mov
sub
jg
aam
sar
cdq
add
int
push
pop
inc
movs
fwait
xchg
or
dec
or
sbb
imul
pusha
push
mov
movs
fs
out
and
test
mov
scas
xchg
mov
out
sub
rcl
clc
movlps
retf
enter
shl
push
retf
xchg
xchg
fnstenv
movs
cmps
(bad)
es
stos
add
fcom
adc
ss
cmp
popa
jge
(bad)
jb
dec
mov
mov
and
inc
mov
pop
cdq
mov
xchg
pop
jg
mov
rcr
cmp
pop
add
xor
dec
mov
in
fs
pusha
mov
cmc
xchg
pop
or
pushf
inc
repz
jp
push
mov
das
or
push
jo
mov
test
push
outs
rcr
mov
je
add
lds
test
pop
bound
fiadd
fistp
jns
arpl
sub
mov
add
loope
cwde
test
push
jns
push
mov
adc
mov
inc
push
stc
cmp
jnp
fcmovu
sub
pushf
inc
les
dec
fyl2x
xchg
adc
loop
lods
mov
push
loop
test
jo
xchg
addr16
retf
mov
mov
push
push
push
fst
mov
xchg
jecxz
pop
jbe
outs
or
hlt
pop
hlt
push
xchg
inc
movs
inc
mov
add
push
popa
fiadd
ret
movs
push
popa
cmp
fld
cmp
inc
mov
mov
dec
mov
cmp
or
outs
jns
es
out
xor
pusha
jmp
mov
icebp
mov
adc
fcomp
or
lahf
bound
jne
das
jns
fcomp
fwait
and
push
mul
push
lea
jmp
out
out
push
dec
in
ins
mov
mov
js
out
cdq
xlat
or
loop
sub
mov
add
dec
popf
push
mov
leave
or
xchg
dec
mov
popf
(bad)
xor
xchg
xchg
pop
mov
dec
inc
popa
jmp
shr
or
les
retf
ror
fstp
jecxz
xor
mov
mov
ds
pushf
(bad)
stos
imul
push
dec
sub
and
movs
test
jecxz
ins
xchg
dec
popa
fst
jbe
cmc
imul
ds
retf
pop
sub
iret
js
stos
vpmaddwd
mov
and
adc
or
or
push
inc
mov
int
imul
ror
push
fld
les
cwde
add
sbb
sub
jg
test
clc
xchg
mov
xchg
pop
push
jne
retf
bound
imul
arpl
lahf
jns
test
lahf
xchg
cli
xchg
test
test
and
lock
ins
pop
lahf
jecxz
stc
mov
inc
jno
es
adc
ror
mov
and
push
imul
jge
push
adc
clc
scas
lea
stc
pxor
add
adc
(bad)
jae
add
adc
stc
jb
jb
xor
ja
sbb
xchg
popa
xor
das
imul
xchg
imul
pop
jns
adc
mov
call
iret
int
jb
aad
push
jg
arpl
xchg
add
push
mov
sub
add
popf
sbb
pop
loop
fldenv
mov
mov
pop
xor
mov
add
imul
test
jmp
or
add
jne
test
movs
mov
sahf
jne
aad
lods
imul
sub
dec
sbb
mov
cmp
mov
add
je
and
push
inc
xor
imul
arpl
cs
mov
rol
sbb
cwde
jle
and
push
mov
mov
push
xchg
mov
adc
sbb
jecxz
mov
lahf
mov
test
pop
loop
push
push
sahf
aam
sbb
fld
pop
fldcw
sub
call
ficom
or
sbb
inc
sbb
sbb
mov
leave
lods
jb
jns
sbb
jl
xchg
bound
jl
mov
jl
or
stc
adc
(bad)
in
jo
mov
aas
(bad)
stos
iret
pop
cmc
ror
pop
icebp
imul
ror
add
repnz
pop
sbb
lods
mov
rol
and
pop
push
fimul
xchg
mov
push
test
or
retf
(bad)
popf
push
pop
mov
mov
mov
ds
loopne
jmp
mov
loop
mov
mov
add
or
lea
imul
xor
mov
enter
sub
lahf
rol
pop
pusha
shr
push
es
aas
nop
stos
lods
mov
push
xor
lods
daa
dec
sahf
stc
(bad)
out
repz
(bad)
fsub
xchg
rcr
inc
lea
mov
outs
fdiv
cmp
imul
xchg
push
je
sahf
push
clc
mov
mov
int3
mov
add
pop
imul
dec
(bad)
aad
out
ss
push
sub
jmp
and
and
mov
pop
xchg
sbb
in
loope
xchg
ins
arpl
or
aaa
clc
rcr
jbe
mov
mov
das
outs
mov
popf
(bad)
call
cmp
cmps
sbb
loopne
dec
pop
cmp
jecxz
push
shl
into
mov
adc
retf
mov
pop
inc
daa
(bad)
xchg
cmc
lahf
call
call
push
lods
mov
fist
sub
dec
inc
push
lahf
add
sub
sbb
call
out
mov
call
icebp
mov
gs
xor
adc
std
jge
je
sub
inc
mov
outs
ja
bound
fwait
add
mov
leave
ins
inc
pop
(bad)
aam
sbb
hlt
push
push
pop
movs
out
pop
test
fild
mov
pop
into
push
xchg
shl
lock
lahf
and
push
retf
sbb
pop
xchg
xor
pusha
dec
xor
fs
push
pop
mov
out
in
xchg
jns
aam
xchg
adc
xor
jecxz
outs
cmp
push
adc
or
fsub
mov
inc
push
lea
xlat
mov
push
(bad)
xor
add
xchg
mov
jp
jae
sub
mov
cmp
inc
jns
imul
pop
lea
mov
popa
out
rcr
shr
lock
inc
sub
pop
mov
cmp
jae
push
out
in
jmp
loope
test
sti
jmp
jmp
(bad)
or
fmul
retf
std
stos
loopne
dec
fcmovnu
call
fs
rep
lock
aaa
sbb
shl
push
sbb
test
fwait
push
sub
in
jae
mov
mov
jle
ins
xchg
mov
pop
push
sbb
mov
popa
arpl
retf
mov
(bad)
outs
xor
cmps
pop
cwde
outs
cmc
push
mov
and
cs
add
(bad)
clc
ror
inc
rol
mov
loopne
or
mov
push
shl
mov
pop
dec
ret
mov
adc
sub
ret
mov
ror
movs
shl
aas
mov
mov
sbb
cmps
out
inc
jl
andnps
hlt
pop
add
or
xchg
or
mov
mov
pop
fistp
jp
lods
js
stos
cmps
mov
mov
cdq
ret
ins
gs
scas
imul
cmp
fnstsw
in
shl
fs
retf
(bad)
iret
dec
shl
inc
mov
imul
mov
mov
(bad)
aas
inc
sahf
push
or
mov
mov
fdivr
ds
dec
loop
jmp
dec
sub
fucom
push
xchg
scas
push
jl
out
xor
xchg
sbb
xchg
mov
sbb
sub
jbe
imul
sar
lods
inc
cs
xchg
inc
cmc
push
xchg
mov
jmp
ins
add
cmp
shl
push
mov
ja
aas
and
test
test
es
pop
push
jae
mov
rcl
lods
mov
cmp
adc
inc
adc
xchg
arpl
in
jp
mov
or
loope
je
jae
dec
out
outs
test
adc
(bad)
stos
scas
sbb
sub
mov
xor
(bad)
(bad)
stc
xchg
xchg
cdq
push
add
dec
mov
clc
popa
inc
(bad)
mov
into
inc
stos
push
sbb
das
clc
cmps
xchg
outs
mov
cmp
popa
mov
and
lock
or
stc
sub
dec
fsub
or
mov
mov
clc
(bad)
inc
mov
sahf
loope
int3
call
jne
or
mov
lahf
lods
inc
or
pushf
mov
pop
xchg
pop
fs
pop
jb
cmps
inc
aad
mov
push
retf
and
inc
cdq
lods
cmc
popa
xchg
test
(bad)
push
hlt
adc
jae
movs
pop
mov
sbb
inc
sbb
inc
call
fwait
sbb
mov
jle
addr16
mov
mov
in
xchg
xchg
jb
cmp
clc
mov
(bad)
jno
add
mov
mov
mov
pop
dec
test
(bad)
jno
inc
push
inc
je
and
xchg
push
pop
xor
xor
lds
or
sbb
ficomp
xchg
xor
dec
push
jecxz
and
pop
iret
dec
outs
mov
ror
push
push
ss
or
sbb
lods
or
inc
fdivr
and
lea
sahf
adc
test
aad
mov
pop
mov
and
mov
repnz
scas
jge
push
shr
push
add
xchg
ss
pop
mov
cld
jecxz
xor
stc
lahf
test
ret
fild
sub
mov
shl
je
mov
nop
dec
jne
loope
popf
sbb
pop
jbe
sahf
xor
rcl
mov
mov
adc
inc
mov
jecxz
xchg
test
pop
pop
jl
mov
pop
shl
fwait
push
push
sti
test
mov
lock
xchg
xlat
jns
popf
jo
xchg
xor
arpl
retf
retf
int3
sbb
push
loope
jge
jecxz
loope
jnp
sbb
add
repz
mov
es
inc
outs
mov
test
je
xchg
push
xchg
stc
les
jmp
arpl
add
adc
rol
sbb
mov
cld
jecxz
scas
enter
test
int
push
sub
add
add
sub
and
push
in
fst
sar
aas
adc
(bad)
pop
out
dec
rcr
cmps
(bad)
jle
mov
popa
mov
cmc
fistp
add
mov
mov
adc
into
fnstcw
lods
jl
int
jnp
sub
mov
jae
jmp
xbegin
fadd
cmp
xchg
xchg
out
std
lds
sbb
push
lea
xor
rcr
jne
stc
retf
dec
cmp
ror
repz
mov
cmp
inc
mov
data16
rcr
repnz
cmp
dec
sub
arpl
neg
test
mul
stos
enter
xchg
rol
imul
mov
add
jns
pusha
lea
push
sbb
jbe
and
and
mov
cwde
aad
mov
xor
add
pusha
fdiv
cmp
loopne
push
movups
leave
adc
test
or
dec
sub
mov
sbb
push
xlat
or
and
push
and
mov
ror
push
ja
add
pusha
mov
xor
mov
mov
mov
sbb
sub
mov
enter
adc
clc
dec
cmps
mov
sahf
imul
rcr
popa
sub
inc
inc
jbe
test
and
(bad)
xchg
pop
mov
mov
jns
pop
movs
test
gs
push
les
nop
popf
(bad)
push
gs
mov
inc
cwde
jb
xor
mov
sbb
je
or
pop
js
cwde
sub
pop
inc
cdq
cdq
inc
stos
mov
lods
xor
jge
outs
inc
sbb
jecxz
mov
push
add
(bad)
lock
fwait
mov
dec
mov
adc
adc
daa
pop
lock
sbb
stc
iret
inc
mov
fwait
mov
dec
mov
lea
and
xchg
pop
adc
rcr
(bad)
pusha
jl
jge
lods
xor
addr16
fmul
test
fst
enter
mov
sbb
test
das
pop
cmp
clc
and
jno
dec
sbb
sbb
leave
lahf
sahf
xor
aas
out
imul
and
jge
jecxz
and
(bad)
fcom
push
jp
dec
das
or
dec
setge
xor
push
push
jns
cdq
test
call
push
jnp
test
mov
jbe
mov
aaa
xchg
test
mov
jo
outs
sub
jl
inc
outs
mov
mov
mov
(bad)
mov
cs
popf
inc
push
pop
xchg
sub
mov
out
jp
fcmovu
sbb
mov
jns
xor
data16
test
or
fild
(bad)
lds
push
mov
mov
jbe
rol
lahf
cmp
popf
pop
iret
or
xor
sti
mov
adc
jo
jg
(bad)
push
repz
sahf
mov
cmp
sbb
mov
jmp
sbb
sar
mov
repz
hlt
cmp
jae
ds
dec
retf
sub
xor
adc
mul
jo
adc
jle
inc
stos
xchg
and
nop
sub
neg
mov
inc
stos
vpmovzxbw
xchg
shl
test
cmps
mov
js
jmp
sahf
fadd
cld
push
or
sbb
nop
mov
cs
popa
mov
dec
mov
push
(bad)
mov
or
test
pop
or
dec
out
es
add
xchg
pop
adc
clc
mov
sar
mov
(bad)
sar
aaa
inc
aam
push
and
jle
cmp
(bad)
das
inc
leave
mov
arpl
outs
push
jns
sub
or
ror
cmps
inc
shr
pop
inc
push
add
mov
movs
mov
xor
inc
push
push
fadd
mov
dec
shr
popf
mov
adc
lahf
hlt
imul
scas
mov
test
mov
ja
cs
xlat
fild
movs
dec
mov
out
lea
jle
test
ins
xlat
xchg
aad
into
cwde
push
shr
sbb
lea
ins
inc
shl
mov
popf
mov
fcom
fwait
adc
ret
adc
dec
xchg
or
xor
fbstp
mov
(bad)
fdiv
pop
mov
sub
inc
rol
clc
jmp
mov
fnstsw
adc
adc
pop
adc
or
dec
pop
data16
dec
dec
je
dec
addr16
fcomp
mov
les
into
adc
(bad)
fdivr
dec
and
in
mov
scas
pop
add
xlat
ja
adc
xchg
lods
imul
inc
push
add
nop
inc
daa
mov
lahf
xchg
cmp
les
ficom
cmp
test
mov
and
push
pushf
pop
into
dec
jmp
mov
add
adc
push
pop
sub
outs
pop
and
push
dec
mov
movs
ins
sub
lahf
rcr
push
and
or
push
mov
mov
mov
or
cmp
(bad)
mov
xor
jmp
pop
dec
ret
or
xchg
or
lds
push
jno
pushf
lods
cmps
scas
cmps
in
leave
jns
mov
stc
add
sub
dec
int
mov
lods
call
push
push
enter
cld
xor
sub
fidiv
das
mov
ds
popa
test
xor
popa
sub
mov
in
cmps
ds
jbe
fs
jae
inc
(bad)
gs
loope
jp
jecxz
dec
adc
icebp
add
js
shr
test
jne
xchg
jg
jecxz
fild
inc
lahf
int
retf
mov
cwde
adc
push
sbb
inc
int
scas
jmp
xchg
int3
aad
enter
inc
add
fiadd
dec
inc
xchg
or
mov
or
rcr
mov
xchg
jl
add
inc
mov
imul
dec
ja
jmp
fcom
xchg
ficom
xor
fstp
stc
popf
jo
fwait
mov
call
inc
mov
inc
test
mov
mov
sub
pushf
jbe
ds
inc
ror
ins
shl
aaa
cdq
mul
or
out
push
cdq
xchg
mov
out
repz
ror
and
fwait
xchg
jp
add
call
or
hlt
xchg
mov
add
push
mov
pop
(bad)
fsub
hlt
mov
les
ret
pushf
xor
scas
ins
pop
fdiv
and
sbb
(bad)
push
std
rcl
mov
nop
ret
test
mov
inc
sbb
dec
fld
div
fstp
and
mov
in
ret
sbb
fs
int
fsub
es
mov
mov
nop
movs
inc
mov
xchg
fwait
int3
sbb
ds
cmps
cmp
mov
ror
movs
mov
mov
dec
mov
call
mov
js
cmp
jns
mov
ins
xor
pop
outs
mov
addr16
jmp
jns
xchg
mov
mov
cmc
gs
mov
arpl
arpl
mov
in
or
ds
mov
push
js
(bad)
leave
cmps
inc
imul
shl
jo
lods
call
out
xlat
arpl
pop
push
adc
jg
popf
arpl
lahf
mov
and
cmp
sbb
jp
test
fstp
jne
ja
mov
test
int
scas
sub
mov
fsubr
jb
xchg
jbe
mov
lea
ror
sar
mov
xchg
push
das
movs
or
add
popf
leave
and
push
and
xchg
add
out
mov
xchg
scas
pop
mov
rcl
sbb
mov
mov
leave
lods
xchg
mov
mov
sub
scas
mov
and
push
fmul
sbb
loope
in
mov
mov
jmp
dec
mov
imul
pop
push
out
fwait
adc
inc
das
jns
cdq
mov
retf
fadd
push
shl
add
ds
in
outs
rcl
out
pop
pop
push
shr
mov
ins
xchg
dec
aam
into
gs
lds
mov
jge
cmp
ror
dec
shl
xlat
fild
add
mov
shl
sbb
dec
xchg
icebp
mov
test
push
mov
lock
sar
lea
int
in
or
call
mov
mov
lahf
mov
in
repz
pop
push
pop
sti
cld
ds
and
mov
adc
sbb
sti
iret
lea
loopne
adc
xchg
pusha
xor
add
add
dec
push
lahf
inc
dec
cmc
pop
sti
shl
scas
mov
mov
add
aam
add
loopne
fistp
mov
sahf
pushf
mov
sbb
sbb
inc
dec
loope
arpl
lahf
or
pop
push
test
mov
retf
(bad)
sub
les
aas
adc
mov
mov
or
dec
mov
lea
dec
pop
mov
add
pop
mov
mov
push
fidiv
jno
adc
or
cmc
pop
add
jb
test
xor
ss
jmp
int3
(bad)
loope
or
es
dec
(bad)
lods
and
sti
in
cli
mov
ss
movs
jl
fdivrp
and
cld
dec
fst
(bad)
lods
jecxz
jo
gs
sbb
or
cs
xchg
loope
cmc
inc
fadd
and
test
stc
pop
fistp
xchg
and
pop
adc
sub
add
test
(bad)
popa
sbb
add
imul
lods
in
xor
cmp
sar
xor
dec
jne
data16
jne
aam
or
stc
mov
adc
xchg
stos
sbb
std
push
sbb
cmp
icebp
xchg
pop
push
repz
and
cli
jge
js
aad
movs
sbb
jae
push
pushf
lods
mov
dec
(bad)
and
jl
xor
loop
pop
and
push
pusha
push
xchg
lahf
pop
mov
sbb
or
dec
arpl
pop
rcr
scas
lock
js
fisttp
adc
fidiv
clc
iret
mov
push
push
sbb
xchg
sbb
adc
test
adc
in
rcl
out
mov
pop
nop
jns
pop
push
jge
lahf
mov
in
push
hlt
in
sbb
mov
mov
fdivr
xlat
fild
call
test
lahf
jne
mul
into
add
mov
adc
jecxz
push
mov
pop
push
sub
(bad)
addr16
mov
(bad)
(bad)
aad
push
mov
pop
loope
adc
fadd
imul
sar
aad
push
push
fisttp
mov
das
sbb
pop
push
les
dec
stc
mov
inc
mov
test
jl
or
icebp
or
sbb
cmc
xchg
fs
mov
pcmpeqb
retf
xchg
jle
lods
push
sub
fcom
dec
sbb
cmp
mov
fdiv
sbb
jge
int
retf
iret
popf
push
test
jge
fcmovnbe
xor
cmp
jno
add
clc
push
mov
push
inc
sbb
xchg
bound
mov
into
sbb
push
pop
push
jae
xor
retf
mov
push
push
retf
sti
sub
test
push
test
std
or
sub
jle
push
sbb
xchg
cld
xor
ficomp
call
test
or
fisttp
dec
aam
and
jmp
sbb
sub
iret
mov
pop
cmp
(bad)
gs
js
daa
xchg
fidiv
jle
out
mov
cmp
xchg
stc
mov
mov
xlat
mov
jne
rcl
imul
mov
sbb
adc
xor
sti
cmps
add
adc
and
adc
dec
js
loopne
stc
xchg
stos
sar
xchg
push
rcr
into
or
sbb
(bad)
mov
push
ins
mov
add
xor
mov
inc
xor
or
push
dec
xchg
and
or
sub
jl
push
rcr
lods
mov
sbb
ds
adc
ins
push
xchg
dec
dec
pop
jns
mov
or
les
or
sub
shl
stos
push
sar
fld
mov
gs
imul
int3
not
je
int
mov
inc
xchg
fmul
dec
dec
sahf
push
cmp
mov
scas
ins
(bad)
dec
gs
loop
gs
add
mov
aaa
pop
add
call
mov
sub
xchg
sub
mov
jne
mov
dec
fwait
je
dec
ins
stc
jne
push
mov
xchg
adc
xchg
retf
mov
test
fstp
jge
ss
ror
adc
jbe
inc
imul
push
and
imul
or
scas
call
cwde
test
mov
mov
out
pop
pop
adc
xor
pop
push
sub
fs
sbb
xchg
xchg
fs
pop
imul
sub
xor
and
sub
and
es
sbb
es
dec
icebp
mov
imul
mov
sahf
in
xchg
arpl
sahf
or
cmp
jns
pop
lock
in
sub
push
inc
mov
mov
int3
sub
jmp
xchg
mov
test
mov
dec
inc
rol
sbb
and
or
inc
dec
jne
xchg
mov
ins
and
cmp
outs
pop
imul
stc
lods
inc
rol
popa
cmp
dec
jbe
mov
bound
xchg
or
push
cmp
push
fsub
out
cmps
xor
or
pop
jo
mov
sbb
rol
fild
adc
(bad)
mov
jl
xchg
adc
sbb
pop
mov
cmps
movs
push
mov
dec
das
ret
jno
xor
sbb
imul
leave
stos
xlat
scas
cdq
push
sar
shl
mov
sub
aam
xor
inc
jge
or
pop
adc
call
aam
xchg
add
or
cwde
retf
sahf
cwde
mov
mov
dec
shl
arpl
adc
and
movs
xor
mov
sar
(bad)
sbb
xchg
loope
pusha
aas
jae
cmps
popf
push
retf
push
adc
mov
push
stc
xor
dec
call
cmp
js
sbb
adc
adc
inc
mov
pop
or
fisttp
sar
sbb
and
jmp
jg
mov
push
adc
je
ins
xchg
jns
repnz
mov
jl
mov
mov
pushf
jbe
lock
xor
mov
add
adc
sahf
retf
(bad)
cld
xchg
sbb
or
pushf
popa
cmc
push
es
shl
sbb
lods
dec
sub
sti
rcr
(bad)
cmp
jle
mov
cs
jl
push
das
cmp
mov
pop
std
addr16
adc
mov
out
mov
div
retf
adc
rcl
sbb
je
dec
inc
xchg
aas
stos
retf
adc
sar
fld
push
pop
jge
aam
ss
test
xchg
push
jbe
jge
pop
lds
mov
rcr
sbb
add
ds
and
inc
push
push
(bad)
mov
xlat
push
adc
mov
push
push
xlat
test
addr16
xor
mov
adc
pop
cmp
out
jmp
and
(bad)
fisubr
dec
xor
stos
and
sub
pop
mov
push
cmp
int
ror
mov
sub
sbb
fldcw
xchg
ds
lods
or
in
(bad)
mov
or
(bad)
or
loope
xor
cmp
mov
push
clc
mov
jne
ret
and
out
sahf
cmp
mov
xchg
and
jge
enter
and
jno
mov
cmps
(bad)
sbb
rcl
imul
imul
test
pop
push
in
or
popf
jmp
pop
cld
jp
pop
mov
into
test
cli
pop
shl
xchg
and
ss
movs
jge
push
mov
aas
js
lods
jmp
sbb
ins
imul
mov
dec
cmc
sub
stos
jle
cmps
icebp
xor
outs
dec
sub
adc
adc
addr16
jl
or
test
fcom
test
pop
xchg
pop
cmp
test
(bad)
sub
xchg
and
movs
outs
dec
mov
mov
mov
jne
lahf
mov
test
inc
inc
imul
and
imul
jne
pop
dec
xchg
pop
pop
aaa
adc
xor
or
xchg
pop
addr16
mov
cs
loop
(bad)
sub
enter
call
sbb
sub
aaa
mov
lods
xchg
mov
test
or
leave
test
push
add
je
add
adc
push
xor
(bad)
rcl
add
cmps
dec
or
rol
imul
rcr
lods
repz
inc
jno
sbb
movs
cmp
inc
and
sub
cmp
inc
sahf
pop
fwait
xchg
imul
daa
inc
into
shl
fdivr
pop
aaa
mov
mov
shr
ror
arpl
iret
(bad)
(bad)
mov
sub
push
add
ins
pop
and
div
outs
mov
pushf
in
popa
cmp
adc
dec
push
test
xor
scas
(bad)
push
inc
inc
imul
fcomp
xor
inc
or
sbb
outs
pop
sub
test
sbb
mov
int
fs
sub
popf
into
fcomp
data16
cmps
fucom
gs
or
dec
dec
cli
jnp
mov
and
ror
adc
mov
xor
pop
mov
xchg
and
fisubr
or
pcmpgtb
pusha
pop
pop
or
imul
add
push
add
outs
retfw
fst
mov
push
xchg
mov
out
stos
xor
push
mov
fstp
out
push
mov
sbb
mov
push
push
(bad)
mov
jl
(bad)
gs
fldenv
mov
loope
sti
retf
lock
cli
outs
xchg
mov
mov
mov
cmps
test
fwait
cdq
push
inc
retf
(bad)
sub
in
add
inc
fld
pop
fcmovnb
call
pop
scas
sbb
pop
mov
pop
adc
outs
mov
pop
test
repnz
scas
fwait
aas
out
jmp
push
inc
jmp
aad
test
adc
(bad)
sub
ficomp
dec
stc
jb
add
mov
stc
mov
jne
jp
loopne
add
int3
jae
(bad)
repnz
aaa
aam
aam
retf
jo
dec
adc
pop
ret
cs
lods
or
icebp
sub
test
mov
sbb
mov
jle
test
popa
and
fwait
in
inc
jbe
push
cmp
adc
cdq
and
inc
inc
add
jg
mov
push
mov
add
ins
lods
inc
(bad)
int3
outs
inc
imul
scas
repz
and
sub
cmp
lea
xchg
cmps
movs
ror
mov
sbb
loope
les
mov
dec
mov
test
test
xor
inc
popa
ss
pop
push
sahf
or
int3
jae
adc
rol
xor
leave
arpl
sub
push
in
xchg
movs
mov
icebp
push
(bad)
test
cs
ja
xor
pop
sub
mov
mov
cdq
pop
fucomp
scas
call
jne
ret
jno
push
mov
xor
push
cli
sti
in
aad
inc
stos
adc
cwde
mov
jno
cld
adc
add
shl
adc
sti
mov
les
xchg
cmp
sub
push
lahf
imul
and
xor
mov
inc
lea
sub
ss
jmp
hlt
jbe
pop
mov
push
(bad)
jmp
mov
jns
rcr
add
mov
adc
push
push
sahf
sub
(bad)
pop
cmp
push
xor
movs
icebp
sbb
sbb
or
sbb
adc
adc
add
and
add
or
dec
in
sbb
mov
add
adc
sahf
pushf
xor
out
imul
sub
xchg
loopne
ins
jno
pop
outs
je
cmp
stos
fcomip
mov
ins
sar
test
iret
xchg
rcl
ror
mov
leave
aam
dec
xchg
mov
jnp
dec
fcom
pushf
sub
icebp
fcom
add
outs
enter
xchg
mov
inc
mov
mov
pop
inc
pop
sbb
cmp
rcr
sbb
inc
jmp
lods
imul
shl
nop
(bad)
fucom
pusha
aad
mov
retf
fsubr
jge
(bad)
jmp
xchg
cmp
std
add
xlat
mov
ins
push
jge
mov
xchg
(bad)
ins
xor
dec
(bad)
bnd
ja
ret
push
ins
jg
push
xor
inc
dec
imul
data16
mov
mov
adc
and
cmp
outs
push
movs
je
add
inc
movs
dec
and
xchg
aas
pop
push
pop
adc
pop
mov
mov
mov
(bad)
fs
sar
pop
rcr
jno
mov
aam
push
xor
lods
xor
aad
ret
add
in
imul
dec
jge
ret
mov
push
xor
enter
js
jmp
jecxz
pop
test
clc
scas
test
mov
mov
pop
xor
sahf
lods
dec
pop
cmps
jmp
cmp
cmp
out
push
pop
or
leave
xchg
ret
xchg
jb
cld
repz
std
mov
scas
mov
mov
jle
pop
lds
jge
cmc
enter
pop
ret
pop
js
xor
pop
mov
call
stc
push
dec
(bad)
mov
loopne
or
nop
mov
push
mov
push
scas
lods
jb
fsubr
repz
outs
repnz
outs
lea
out
shl
ds
push
leave
rcl
xor
data16
mov
mov
das
pushf
call
mov
in
scas
inc
in
(bad)
cmp
xchg
inc
mov
pop
loop
or
sti
nop
mov
ficom
fnstsw
cmp
mov
cmp
dec
lahf
imul
enter
retf
call
ret
jns
stos
sar
mov
outs
adc
inc
cmps
mov
fadd
push
jb
xor
pop
lahf
pop
shl
dec
pop
loope
std
push
loope
jmp
retf
fs
dec
sbb
jp
cmp
rcr
push
dec
pop
outs
mov
mov
push
sub
or
stc
das
sbb
xchg
push
mov
mov
fstp
sub
in
push
or
fadd
xchg
push
or
xchg
mov
cmp
aad
outs
nop
lea
mov
pop
es
jp
mov
in
pop
out
rcr
jns
add
stc
xor
sahf
(bad)
inc
pop
out
rcr
inc
imul
inc
jnp
mov
das
xor
pop
hlt
sbb
mov
mov
mov
jne
sar
fisttp
or
lea
jle
jge
and
je
into
adc
jae
xchg
shl
out
push
xchg
xchg
daa
jne
sti
fdivr
ja
sbb
inc
or
dec
mov
out
jae
push
inc
jns
pop
jl
or
cdq
add
xchg
neg
xchg
and
xchg
pop
mov
ss
sbb
movs
push
imul
jo
sahf
cmp
lods
push
nop
push
pop
add
jecxz
xchg
stc
sub
mov
iret
xchg
xchg
sbb
jecxz
jb
or
push
xchg
mov
mov
or
xchg
sub
rol
sbb
popf
push
push
mov
pop
lea
cdq
sub
fdivr
loope
(bad)
fst
pop
cmp
pop
hlt
mov
leave
inc
push
cmp
iret
iret
in
fnsave
add
es
ret
jns
pop
out
inc
mov
pop
sub
ret
(bad)
arpl
adc
std
imul
lods
jmp
sub
adc
in
mov
add
push
mov
imul
lahf
mov
push
mov
xchg
pmaxub
jp
add
cmp
ds
mov
lods
pop
and
add
mov
mov
out
push
inc
push
call
fisttp
add
ror
test
xor
sbb
jmp
test
popf
ret
shl
push
jge
pop
retf
ins
in
push
jo
repz
out
std
jg
repnz
cmp
daa
mov
shl
and
ret
sahf
pop
xchg
jmp
and
inc
pop
das
xchg
hlt
gs
xchg
push
retf
cmps
dec
ret
or
js
jne
lahf
adc
sbb
int
int
cli
cmp
pushf
mov
outs
xor
dec
xor
call
fld
(bad)
jmp
or
or
in
outs
fnstsw
in
pop
dec
sbb
jno
xchg
sub
(bad)
jno
mov
pop
lea
mov
in
cmc
lea
and
call
mov
outs
into
mov
add
in
mov
enter
(bad)
(bad)
adc
rcr
hlt
sub
push
imul
cwde
enter
dec
adc
mov
xchg
mov
sbb
xchg
inc
xchg
adc
scas
mov
les
gs
mov
mov
fstp
stc
imul
bound
test
push
sub
pop
xor
sbb
lock
mov
inc
sti
sub
pop
push
dec
std
pop
xchg
jmp
ror
cmp
xor
and
inc
mov
or
aad
jnp
mov
loop
push
outs
xchg
imul
fnsave
push
pop
pop
sub
mov
pop
mov
ja
jnp
jmp
sub
outs
pop
jp
add
loopne
mov
inc
push
daa
cmp
bound
js
sbb
loope
stc
sbb
les
icebp
jmp
fmul
scas
movhps
scas
sbb
rcl
fistp
lods
hlt
dec
enter
mov
fld
inc
pop
add
fincstp
or
add
popf
sub
into
aas
icebp
call
mov
fld
fcomp
push
imul
sub
lds
mov
adc
add
fsubr
mov
sbb
mov
lahf
inc
(bad)
mov
xchg
add
fnstenv
sbb
femms
sbb
pop
or
fmul
stos
add
std
cmp
dec
pop
mov
xor
sub
xlat
xchg
test
adc
(bad)
out
pop
mov
aas
imul
or
mov
dec
adc
push
retf
cmp
jle
mov
lods
clc
pop
mov
pop
test
bound
cdq
push
xlat
out
push
inc
mov
gs
push
icebp
test
inc
sbb
neg
cmps
dec
add
push
add
fimul
add
sbb
cmps
add
push
cwde
mov
(bad)
mov
adc
jb
stos
inc
rcl
push
add
jns
cwde
lods
sbb
push
dec
xlat
jge
cmc
inc
jge
cli
fisubr
xor
sub
aad
mov
adc
bound
xor
retf
adc
pop
js
sti
sbb
out
imul
test
dec
cmp
(bad)
push
or
inc
in
aam
mov
add
mov
loope
pushf
jno
ja
jns
in
mov
jle
mov
cmps
popf
mov
aad
sub
or
sub
ja
adc
xchg
jl
(bad)
out
clc
xor
sar
mov
clc
clc
fstp
imul
inc
mov
lods
push
sbb
push
int3
xchg
sub
js
pop
pushf
loop
ret
mov
test
dec
out
jno
out
shr
es
push
mov
cdq
arpl
shl
jp
cdq
mov
out
adc
mov
mov
idiv
push
jp
(bad)
in
xor
repz
push
call
push
popa
ss
fnstenv
cmp
sub
popa
shr
jecxz
addr16
jp
loop
jg
mov
mov
add
imul
lods
clc
rcl
xor
shl
hlt
ss
jno
icebp
(bad)
or
mov
rcr
fs
aaa
repnz
pop
retf
nop
xlat
hlt
cli
scas
(bad)
cdq
push
neg
(bad)
shl
arpl
int3
sub
int3
dec
and
scas
enter
pop
xchg
ja
iret
adc
sbb
cmp
nop
mov
nop
repnz
ja
xchg
sub
(bad)
push
or
xor
or
mov
out
cmc
cs
dec
lods
iret
push
sahf
push
add
jmp
ror
and
nop
retf
pop
or
push
xchg
push
sub
shr
cmps
lahf
cmp
jo
pop
(bad)
shr
adc
adc
mov
in
add
ss
imul
and
pop
xor
sbb
mov
xor
nop
ret
pop
sub
stos
out
and
mov
lds
aas
mov
inc
test
adc
push
popa
lods
jno
test
cmps
xchg
shl
or
(bad)
add
xor
ds
leave
xchg
fbstp
cmp
aam
std
mov
mov
mov
into
cmp
and
imul
jae
dec
adc
popf
mov
mov
je
cmc
jle
mov
sar
mov
fs
mov
mov
sets
(bad)
(bad)
sub
imul
jl
int
imul
add
lea
dec
inc
mov
xchg
jl
sub
jno
shl
out
and
in
nop
ins
pop
and
and
mov
add
rcl
inc
mov
outs
out
add
cs
nop
adc
pop
add
adc
adc
push
repz
nop
popa
mov
or
pushf
test
inc
inc
xchg
push
call
or
into
add
xor
aas
enter
idiv
dec
movs
retf
xor
pop
xor
cs
std
lods
push
dec
sub
push
dec
push
push
test
test
int3
pop
dec
aad
sbb
jnp
mov
call
xor
inc
ja
sub
dec
add
leave
pop
xlat
fcmovnu
xor
add
and
mov
inc
popf
sbb
ds
test
rol
xchg
sub
fstp
sahf
hlt
scas
je
push
ror
mov
(bad)
into
aam
lods
and
ret
inc
or
pop
xchg
outs
sub
lea
shr
je
mov
xchg
jmp
aam
cmps
xchg
pop
hlt
iret
rol
pop
push
mov
test
adc
mov
int
jmp
mov
addr16
call
ret
mov
cld
in
dec
leave
int3
lock
mov
xchg
stc
add
int3
jne
movs
retf
imul
push
push
repz
in
mov
jo
int
enter
(bad)
and
push
mov
xchg
adc
loope
and
ud1
mov
cmp
pop
pop
ror
mov
hlt
xchg
and
test
pop
pop
call
pop
rcr
mov
mov
inc
std
test
fcomp
pop
jmp
mov
lods
jg
inc
mov
mov
mov
lds
int
mov
pop
mov
(bad)
xchg
dec
out
enter
gs
leave
lea
mov
in
in
(bad)
xchg
pushf
and
xchg
inc
cwde
imul
add
mov
jmp
xchg
xor
jecxz
jne
adc
pop
jns
add
push
pop
inc
addr16
or
mov
xchg
test
mov
loope
retf
sbb
xlat
movs
hlt
jp
pop
mov
mov
movs
push
jno
pop
push
adc
sbb
js
sub
rcl
hlt
xor
mov
xchg
les
mov
xor
(bad)
clc
aas
mov
inc
ficom
dec
arpl
leave
pushf
aaa
adc
dec
mov
aas
dec
js
out
test
stos
daa
adc
dec
das
mov
push
adc
jns
xchg
fimul
popf
add
(bad)
in
(bad)
jo
jae
pop
inc
cld
shl
pop
int3
fidiv
mov
xchg
sub
pop
sub
out
sub
popa
aad
add
imul
add
inc
and
pop
mov
retf
ja
inc
lods
inc
jle
loopne
add
lfs
sbb
cmp
imul
fsubr
(bad)
jns
imul
mov
lods
pop
fiadd
jp
mov
aas
shl
leave
xchg
and
or
cmp
cmp
cli
mov
addr16
xchg
adc
mov
test
sbb
inc
pop
push
jb
cmps
mov
sbb
leave
test
daa
sub
ja
scas
sbb
dec
movs
mov
mov
test
cmp
jb
fild
mov
(bad)
jb
dec
mov
jo
cli
sbb
add
sbb
jecxz
(bad)
(bad)
out
dec
sahf
xor
lea
aad
mov
pop
repz
outs
pop
push
cmp
pop
mov
jns
fs
and
add
aam
aaa
shl
ds
in
or
inc
pop
mov
push
cdq
dec
jmp
ins
inc
sub
pop
adc
(bad)
jbe
jo
add
test
xlat
inc
add
cmp
ret
mov
(bad)
in
xchg
mov
push
inc
pop
lds
mov
sbb
popw
xchg
bound
mov
popf
fwait
outs
pusha
out
fisttp
outs
mov
(bad)
retf
dec
xor
inc
sbb
mov
pop
jge
sbb
ficom
sub
mov
aam
mov
jne
rcl
repnz
aad
sub
jmp
mov
movs
mov
movs
mov
ret
cmp
rcr
mov
push
int3
mov
pop
scas
jp
int3
ret
inc
pop
or
push
cmc
test
dec
mov
mov
mov
ja
pop
sahf
inc
pop
pusha
xor
push
loope
sbb
mov
lods
(bad)
cli
fcmovnb
shl
outs
push
dec
aam
pop
inc
inc
rcl
retfw
cmp
fcomi
lahf
in
arpl
jp
cmp
lahf
fcomp
pop
aam
jl
jl
cmc
or
push
mov
or
push
or
retf
test
repnz
xlat
rcr
mov
pushf
sbb
clc
xor
mov
scas
dec
or
sub
xchg
aaa
jp
push
movs
mov
dec
xchg
jno
pushf
xor
dec
mov
sbb
repnz
push
(bad)
push
or
or
aas
push
xchg
in
jne
mov
jg
push
xchg
in
pop
mov
mov
xor
push
lea
sbb
jne
mov
loop
inc
scas
iretw
xor
and
push
sbb
mov
dec
dec
gs
sub
pop
imul
mov
jmp
jl
add
jae
push
xor
aam
sub
xchg
jmp
or
dec
mov
cdq
cdq
imul
repz
dec
xchg
xor
call
repz
call
mov
idiv
mov
(bad)
fisub
jno
(bad)
xchg
push
call
adc
call
fwait
pop
repnz
mov
jns
adc
int3
adc
fs
jmp
out
jmp
(bad)
mov
cdq
test
mov
inc
and
popf
dec
mov
fdivr
ficomp
(bad)
sub
sti
cdq
adc
mov
push
repnz
jo
mov
mov
dec
sar
jle
aad
imul
or
sti
stc
pop
jns
dec
pop
and
sahf
jge
mov
push
pop
pushf
and
hlt
and
inc
(bad)
or
les
adc
or
(bad)
stos
out
jge
test
push
jmp
call
test
out
cmp
cli
(bad)
lahf
jmp
mov
shl
and
(bad)
sar
outs
xor
rol
loop
movs
mov
push
mov
cwde
xor
push
jl
fadd
mov
jnp
aas
sub
sub
pop
mov
aas
inc
gs
xchg
popf
push
ret
pop
ins
push
iret
(bad)
(bad)
in
(bad)
aad
jmp
or
inc
cmp
cdq
pop
pop
in
lods
pop
shl
cli
es
sub
xchg
push
(bad)
in
enter
cwde
mov
cmp
cs
xor
scas
into
dec
cmp
test
cld
imul
mov
pop
jle
xlat
js
mov
and
fs
add
pusha
mov
int3
xchg
cmp
in
mov
and
je
sub
dec
xchg
aad
fwait
sub
mov
mov
test
sar
add
mov
mov
push
dec
out
in
jge
outs
popf
mov
mov
(bad)
lock
dec
dec
mov
in
inc
sbb
rcl
iret
(bad)
mov
test
pop
cs
ret
jle
dec
inc
dec
arpl
or
mov
rcr
pusha
push
test
fwait
in
mov
push
xchg
mov
cmp
sub
sbb
test
jns
arpl
test
xchg
enter
jns
and
sub
add
or
pop
jns
xchg
arpl
cmps
push
gs
inc
sub
push
mov
mov
repz
scas
packssdw
push
retf
int3
dec
and
mov
inc
dec
hlt
xor
inc
jge
jae
push
fcmovb
mov
inc
mov
outs
mov
mov
mov
mov
sbb
outs
inc
mov
cmp
or
int3
mov
shl
mov
adc
aaa
xchg
rcl
and
or
xor
movs
sbb
sub
fisubr
dec
jmp
add
sub
fs
pop
adc
sbb
pop
stos
xchg
fwait
in
in
xchg
mov
repnz
scas
ins
xor
mov
mov
std
fst
push
cmps
loopne
and
xor
movs
enter
xlat
sub
outs
movs
mov
jno
push
xchg
out
dec
sub
je
jo
jno
cmp
shl
mov
mov
and
fld
push
lods
arpl
out
xor
xchg
shl
gs
push
pop
fs
dec
jne
push
pusha
inc
jne
je
and
mov
cmp
lahf
pop
ret
aas
clc
outs
jg
(bad)
sub
aas
pushf
stos
push
pop
enter
xor
ror
pop
lea
fdiv
stc
mul
mov
dec
jle
addr16
nop
xchg
add
int3
jne
jl
dec
(bad)
in
xor
imul
jecxz
cmp
pop
adc
nop
jbe
mov
stc
pop
and
cmp
xor
mov
lea
pushf
out
loopne
jle
rol
dec
stc
ficomp
call
add
sbb
dec
rcl
xchg
lea
xlat
add
sahf
sub
pop
cmc
sbb
call
push
mov
int3
jmp
mov
sub
jmp
je
jecxz
mov
and
fsub
and
je
lea
sub
jmp
test
inc
lea
mov
or
sbb
xchg
test
popf
adc
add
push
ins
mov
mov
or
retf
push
call
lods
xchg
test
pop
mov
push
mov
ret
stos
xor
cdq
rcl
mov
retf
sub
push
ret
xchg
rcl
inc
cmps
mov
shl
push
dec
mov
mov
fwait
shl
mov
or
sti
sbb
stos
pop
mov
sti
jb
inc
push
xchg
inc
popa
mov
dec
cmps
adc
add
or
movs
es
add
xor
xor
(bad)
mov
xchg
dec
cmc
pop
cs
mov
popf
sbb
cmp
sbb
fmul
daa
iret
or
cmps
jb
not
cmc
mov
retf
gs
shl
or
or
(bad)
aad
and
cwde
push
in
pop
adc
fcom
std
or
pusha
push
sbb
int3
mov
fdiv
inc
mov
stos
mov
bound
inc
or
push
pushf
mov
mov
lods
cmp
add
inc
push
xchg
sbb
out
ins
xchg
jns
stos
push
adc
inc
fild
add
adc
fadd
stos
cmp
mov
shl
stos
mov
hlt
aad
data16
fcomp
sti
inc
xor
lahf
lds
push
cmp
adc
(bad)
sub
mov
and
adc
add
test
mov
jbe
enter
jmp
push
jg
mov
cmp
add
and
cmp
scas
jg
inc
jae
dec
loopne
outs
popf
cld
jo
mov
in
xchg
outs
add
jns
mov
jae
fwait
jo
xchg
out
jle
mov
xlat
popf
mov
xchg
popf
jns
jne
mov
pop
mov
pop
dec
add
mov
mov
int
mov
jno
mov
cmps
mov
mov
movs
scas
(bad)
jge
xchg
test
jmp
dec
jp
in
inc
test
xchg
cmp
mov
mov
push
inc
data16
or
xchg
pushf
jecxz
jl
xchg
add
jl
and
fbld
leave
and
adc
xor
fisubr
jmp
popf
in
sub
mov
loope
jl
and
jno
push
repz
test
mov
ins
sub
jge
or
and
sub
xor
mov
mov
jecxz
iret
sahf
test
mov
rol
adc
inc
aaa
push
mov
pop
stc
ss
mov
outs
popa
bound
int3
cmp
ins
and
data16
cmp
add
pop
dec
iret
mov
or
add
nop
ret
mov
dec
mov
loop
arpl
pop
cmp
adc
sbb
mov
inc
into
leave
(bad)
xor
out
and
cmps
mov
ret
out
mov
je
dec
mov
ds
aam
clc
outs
lods
fidiv
pushf
cmp
lods
xchg
mov
rcl
xchg
hlt
inc
ret
aas
pop
test
pushf
pusha
xchg
das
data16
ret
call
jnp
data16
pushf
xor
add
mov
xchg
cmp
pop
hlt
movs
call
scas
xor
adc
pop
shl
sar
push
fsub
mov
pop
jne
jb
jg
mov
sbb
mov
xchg
mov
arpl
stos
addr16
add
sbb
cmps
loope
hlt
mov
es
je
test
out
jae
(bad)
mov
adc
iret
(bad)
mov
jle
movs
lds
jmp
in
pop
and
xchg
fsubrp
xor
cdq
fiadd
push
xchg
push
movs
inc
or
pop
in
xchg
(bad)
mov
wbinvd
fwait
aas
pop
neg
call
mov
xor
jmp
jl
cmp
mov
or
out
hlt
cli
repz
das
xor
sbb
and
outs
mov
jp
popf
dec
xor
mov
retf
jg
jnp
mov
test
mov
cmp
or
outs
out
mov
arpl
(bad)
fimul
pushf
retf
cmp
adc
daa
and
lahf
shr
shl
lea
out
pop
push
jae
xchg
cdq
idiv
mov
adc
fdiv
sti
dec
(bad)
dec
(bad)
and
pop
mov
or
inc
(bad)
imul
cmp
inc
inc
sbb
mov
pop
aad
jl
int3
stos
call
in
mov
pop
jae
add
test
arpl
dec
mov
push
sub
mov
pop
mov
lods
adc
(bad)
(bad)
shr
add
sub
mov
jl
pop
pop
rcr
test
jo
imul
sbb
inc
jp
ret
cwde
xchg
bound
test
(bad)
outs
or
in
aad
pop
mov
pop
sub
adc
pop
inc
adc
mov
(bad)
jbe
jle
icebp
mov
sbb
cmp
and
cdq
out
cmp
(bad)
push
xchg
jecxz
sbb
sub
retf
pop
adc
sbb
xchg
sub
mov
inc
adc
enter
and
out
push
fwait
pop
(bad)
push
or
retf
imul
or
retf
push
out
push
adc
pushf
enter
jmp
mov
lods
jb
pop
mov
rcl
push
loop
pop
mov
cli
mov
mov
sbb
cmp
ret
mov
or
inc
jmp
xchg
js
ror
js
test
pop
iret
ins
or
cwde
imul
stc
mov
adc
es
pop
sub
push
push
pop
ror
enter
mov
jle
and
pop
je
pop
loopne
push
sti
xor
shr
call
mov
les
and
ror
pop
test
arpl
or
jb
jo
push
ror
mov
cmc
sub
pop
mov
dec
inc
jno
icebp
fwait
or
xlat
leave
and
mov
pop
pushf
mov
adc
repnz
pusha
add
cmps
xchg
imul
and
sbb
mov
and
ror
cmp
adc
xchg
pop
cmp
rol
mov
mov
icebp
leave
inc
sbb
shl
addr16
mov
cmc
inc
jnp
ret
popf
ins
data16
add
shl
cmp
arpl
in
mov
jg
dec
mov
mov
mov
stos
cmps
mov
and
sbb
imul
dec
inc
jbe
les
loop
aad
mov
out
jo
xor
adc
enter
jnp
sub
mov
push
or
in
inc
xchg
stos
jb
and
scas
xchg
xor
jo
jne
mov
pushf
imul
push
stos
mov
mov
aad
test
out
add
out
sbb
mov
mov
pop
imul
adc
mov
and
xchg
mov
(bad)
pop
mov
adc
ficom
(bad)
outs
dec
or
and
adc
push
pop
or
adc
test
fdiv
mov
mov
outs
mov
cs
pop
or
pop
cld
fadd
jne
cmp
inc
mov
adc
hlt
add
mov
(bad)
(bad)
push
outs
lods
in
ja
inc
mov
jae
sbb
jecxz
shr
mov
push
mov
out
(bad)
xor
mov
cmc
aam
ja
ret
sbb
mov
shr
xor
mov
sar
pop
sbb
mov
lock
aas
lods
test
hlt
imul
push
in
sub
shl
jnp
mov
aam
adc
xor
dec
mov
and
aad
pushf
mov
in
push
push
enter
mov
mov
mov
lahf
xchg
dec
push
fild
(bad)
retf
scas
dec
movs
aam
jmp
sbb
call
mov
dec
xchg
sar
test
mov
cmps
mul
xchg
fnsave
sar
mov
imul
mov
dec
retf
int
dec
ss
push
mov
daa
dec
push
jge
mov
mov
jo
bound
lds
jecxz
jge
cmp
mov
xchg
nop
imul
loopne
adc
cwde
pop
fistp
daa
int3
sti
rol
or
dec
jle
sub
adc
jl
fistp
and
into
sbb
mov
dec
sub
xor
dec
push
hlt
cdq
xchg
sub
add
and
sbb
sbb
jns
inc
div
add
stos
and
push
jmp
icebp
ret
into
arpl
(bad)
(bad)
push
stos
jge
mov
xor
leave
iret
jl
pop
retf
mov
lock
popf
push
cmp
mov
dec
scas
cmc
out
fisubr
push
(bad)
mov
adc
mov
inc
popa
push
xor
mov
xlat
lock
push
nop
test
adc
test
sub
into
rcr
inc
hlt
stos
dec
mov
in
fs
mov
and
xchg
push
mov
xchg
inc
outs
pop
mov
pop
xchg
pop
mov
xlat
rcl
into
imul
fwait
mov
mov
pushf
ja
jmp
shr
sub
je
js
addr16
ja
ins
loope
shl
and
jbe
repnz
out
js
fild
xchg
sub
iret
fdivrp
fnstenv
mov
mov
out
push
out
pushf
push
cld
int
mov
test
add
jnp
loop
pop
xor
xor
out
hlt
ds
xor
loop
fdivr
and
popa
jl
in
scas
jle
mov
xchg
dec
call
fs
out
lea
les
add
xor
push
(bad)
jbe
lea
cmp
or
leave
rol
es
popa
jns
retf
xor
rcl
mov
push
pop
mov
xchg
scas
push
test
jns
xor
or
das
clc
lea
jns
jecxz
sub
ins
ins
loope
fist
aaa
cmp
push
xchg
or
xchg
pop
jg
bound
pop
inc
test
xor
sub
popf
out
stos
add
mov
fadd
pop
jmp
push
xchg
add
mov
mov
mov
jbe
pusha
dec
mov
imul
mov
mov
iret
sub
test
sub
retf
cmc
in
sub
dec
mov
mov
push
nop
pop
sub
mov
sar
test
inc
iret
mov
mov
in
outs
mov
ins
sbb
pop
ins
ss
outs
adc
in
cmp
xchg
hlt
addr16
xor
mov
in
sub
and
adc
mov
aas
and
and
rcr
adc
push
(bad)
scas
mov
jns
sub
add
inc
or
jmp
cmps
dec
xchg
mov
sub
mov
out
pop
outs
jae
push
cmp
mov
pop
std
in
mov
push
push
pop
jmp
pusha
mov
int3
stc
sti
std
inc
dec
add
adc
ins
sbb
adc
mov
stos
xchg
xor
(bad)
ins
jecxz
jl
push
jmp
lods
pop
fadd
sub
pop
fistp
mov
jno
cwde
(bad)
cmp
sar
lea
sbb
mov
pop
pop
sub
mov
lods
or
adc
xor
xor
jge
mov
not
out
shl
jnp
ret
pop
mov
dec
nop
(bad)
(bad)
repz
mov
rcl
(bad)
sub
push
and
mov
cli
push
sbb
push
xor
rcr
push
shl
test
and
pop
ret
sbb
fwait
mov
js
add
mov
in
inc
test
repz
sahf
clc
adc
pop
fimul
jbe
or
ret
icebp
jno
movs
stos
mov
fimul
std
fwait
xchg
setl
cmps
push
cmp
es
and
jne
sar
pop
arpl
xlat
and
fbstp
xchg
popa
dec
mov
mov
mov
test
bound
inc
adc
clc
mov
sti
aam
sbb
outs
neg
fidivr
cmp
mov
pop
fisub
lds
sbb
ror
jns
mov
ret
inc
je
xor
cs
jae
xchg
xchg
(bad)
test
call
outs
sub
cmp
jno
int
iret
sbb
aad
sbb
sbb
jae
fwait
inc
outs
mov
lahf
lahf
imul
mov
movs
imul
jle
mov
push
add
ror
test
adc
lock
daa
(bad)
jl
adc
inc
and
jge
cmp
(bad)
popa
sub
loopne
cwde
out
stos
std
or
aad
nop
inc
clc
(bad)
out
fs
in
pusha
stos
dec
popf
ret
shl
lods
call
out
cmp
cld
sub
adc
aas
pop
iret
xlat
mov
mov
or
inc
pop
pop
vphaddbw
jp
mov
mov
ins
push
dec
inc
(bad)
jns
cmp
add
nop
jns
dec
adc
sahf
inc
adc
mov
(bad)
fbstp
test
loopne
xor
pop
popf
mov
xor
std
arpl
movs
adc
aad
movs
xor
arpl
cmp
xor
in
icebp
cld
int3
shl
js
rdtsc
into
scas
xchg
fist
popa
into
stos
pop
sbb
xchg
aas
cmp
adc
aas
(bad)
lock
dec
pop
mov
sbb
or
pushf
mov
lds
and
arpl
adc
mov
xlat
ss
imul
iret
mov
mov
ror
lods
(bad)
pop
adc
mov
push
pop
mov
in
dec
push
popf
imul
call
sub
jmp
jmp
dec
sbb
les
adc
out
shr
aaa
bound
xor
scas
lods
dec
pop
in
jne
outs
mov
sbb
jg
in
sub
iret
fst
gs
adc
push
into
sar
adc
mov
dec
leave
ss
cmps
arpl
leave
push
int
cs
mov
sbb
je
mov
mov
std
arpl
or
mov
pop
stos
xor
pop
sbb
inc
nop
stos
xchg
pushw
test
cdq
sbb
sub
sbb
mov
cs
gs
stc
adc
dec
xchg
retfw
(bad)
jae
mov
sbb
loopne
aam
mov
lods
(bad)
pushf
rcl
daa
ss
push
ds
and
add
cmc
add
cmp
lahf
int3
fsubr
ds
xor
ja
and
out
data16
mov
dec
jb
and
fdivr
cmp
clc
push
xor
dec
nop
inc
ret
xor
xchg
push
out
movs
jne
aam
sti
xor
lock
lock
mov
sub
les
pop
push
sub
movs
mov
mov
cmp
cmp
sbb
stc
or
ins
xchg
call
jge
dec
out
jge
mov
sbb
daa
mov
dec
mov
cmp
pop
mov
ins
clc
xchg
(bad)
ins
mov
rcr
push
pop
stos
call
dec
pop
xchg
mov
pop
lods
cmp
pop
mov
int
pushf
jmp
xchg
sbb
loop
dec
movs
stos
xor
daa
enter
sbb
jge
pushf
ins
lea
pop
jp
mov
mov
lods
retf
jns
test
mov
and
xor
pop
adc
fsubr
mov
cmp
sub
sti
jmp
mov
push
xchg
sti
jmp
mov
sbb
scas
(bad)
hlt
fwait
adc
lods
push
nop
xchg
popa
sbb
(bad)
dec
scas
int
ror
test
outs
and
std
mov
xor
jb
lea
adc
push
aam
xor
iretw
xchg
addr16
and
lods
imul
xchg
test
and
stos
lods
adc
inc
sahf
mov
pop
xor
and
or
mov
and
int
sahf
add
xchg
js
pop
mov
pushf
jo
push
fdivr
xor
add
jmp
xchg
mov
rcl
mov
iret
xor
mov
jmp
push
add
push
test
mov
xor
sbb
fsubr
fbld
aas
aas
scas
mov
or
fld
call
or
xchg
xchg
ins
and
lods
movs
add
mov
xlat
in
out
mov
aas
push
lods
cmp
icebp
mov
add
xchg
sub
pop
xchg
jne
(bad)
iret
es
out
inc
mov
push
pop
idiv
pop
(bad)
bound
add
jg
sbb
hlt
(bad)
(bad)
retf
xchg
addr16
jl
cmp
pop
inc
pushf
adc
in
mov
push
cs
pop
mov
(bad)
rol
cmp
add
inc
repz
test
call
sub
mov
sub
and
mov
pop
mov
int
fs
js
in
inc
push
mov
repz
es
fcomp
dec
or
pop
mov
int
test
sub
lea
cmp
mov
cmp
adc
adc
ret
push
popa
aad
cwde
fisubr
fwait
jns
jae
mov
(bad)
sbb
xchg
test
repz
xor
adc
ror
push
mov
lahf
pop
push
shr
pop
cmp
dec
popa
sbb
dec
fsub
and
or
adc
sar
pushf
ja
out
jecxz
inc
add
retf
lods
inc
or
xchg
ror
pop
xchg
sar
pop
xchg
push
jb
fbld
js
xor
xchg
cmps
push
adc
pop
pop
je
jp
jmp
adc
sub
inc
cli
xor
fxch
push
cs
enter
aam
aas
test
xlat
dec
lods
push
mov
int3
scas
push
and
fdivr
fdivr
jmp
fidiv
add
add
or
cld
push
sub
inc
mov
sbb
lods
pop
and
les
test
xor
jnp
aas
inc
and
gs
push
or
rol
xlat
fmulp
mov
cmp
add
pop
dec
mov
xchg
cmp
stc
scas
aam
stc
and
and
sub
(bad)
xor
dec
xor
imul
cmp
pop
jnp
jl
mov
movs
mov
cmps
sahf
jmp
call
mov
cmp
jno
inc
mov
and
jecxz
pop
ds
ss
pop
add
and
call
cmp
pop
ficomp
jae
adc
xor
ret
scas
(bad)
in
sub
pop
aam
xchg
mov
ror
aam
stos
frstor
jb
push
mov
push
jge
push
(bad)
xor
and
pop
mov
push
fsubr
dec
lock
es
pop
sbb
outs
mov
test
(bad)
jno
mov
jo
ins
pop
lea
loope
cmp
xchg
adc
sti
in
movs
cmp
inc
loope
mov
jmp
ins
fmul
loop
jns
sbb
sbb
test
mov
push
jo
and
mov
jl
xchg
sar
or
push
push
int
push
popa
xchg
aas
rcr
retf
js
fld1
mov
or
mov
adc
addr16
sub
sub
jns
jae
or
adc
nop
je
popf
shr
fwait
mov
xlat
stos
xchg
mov
out
pop
(bad)
xor
add
imul
fadd
inc
jmp
mov
sti
call
xchg
ret
ror
jns
and
sub
mov
frstor
adc
mov
repnz
jno
pusha
push
test
in
scas
fsubr
int
xchg
lds
mov
sbb
dec
xor
push
icebp
mov
pop
xchg
lea
aad
int3
dec
sbb
js
sub
cmp
mov
je
push
pop
cwde
jo
shl
or
je
clc
dec
and
fwait
out
ror
xor
jge
mov
mov
popf
sub
pop
cmp
mov
nop
push
sbb
jp
fucompp
or
mov
adc
ins
cmp
jns
pusha
add
cmp
mov
rol
add
arpl
mov
sub
mov
pop
add
rcl
push
lahf
cmp
cdq
aas
ja
adc
xlat
lea
xchg
cdq
fs
cmp
std
mov
js
pop
or
test
adc
(bad)
jmp
xchg
call
cmp
adc
lea
or
or
push
sub
jne
outs
push
loop
and
(bad)
ins
jae
mov
adc
push
cmp
and
jae
push
mov
mov
mov
inc
into
sub
sub
test
outs
push
sub
(bad)
rol
inc
out
push
(bad)
dec
jl
lds
fneni(8087
push
stos
int3
jle
xchg
(bad)
jge
movs
jg
jo
sub
(bad)
ret
aam
push
xor
mov
push
cmp
outs
dec
jle
cmc
pop
xor
xor
push
fdivrp
mov
ds
data16
pop
cmp
mov
in
pusha
mov
inc
lea
adc
out
je
sub
xchg
push
sbb
(bad)
stos
shl
sti
jno
popf
cmp
xchg
push
fdiv
ss
jnp
retf
xchg
pushf
je
cmp
pop
push
jbe
inc
mov
jne
in
(bad)
jne
sub
xchg
dec
dec
mov
retf
(bad)
ins
lds
sbb
pop
xchg
js
adc
inc
lock
and
leave
ret
fs
xchg
mov
sub
xchg
or
vpmaddwd
sbb
fdivr
mov
mov
adc
into
add
dec
dec
fisubr
adc
mov
push
jl
sub
arpl
push
imul
dec
add
addr16
xchg
fiadd
xor
pop
pop
mov
fdiv
cmp
dec
sbb
movs
inc
sub
sub
cmp
or
or
(bad)
jae
xor
pop
mov
fs
sub
dec
jb
mov
das
push
call
sar
stc
push
scas
test
add
(bad)
pop
aaa
fcom
mov
aam
dec
mul
lea
pxor
outs
or
cmp
mov
cld
mov
aam
js
sbb
addr16
call
jle
add
and
das
shr
dec
push
hlt
xchg
outs
neg
dec
cwde
es
inc
mov
and
jb
sbb
and
xor
mov
imul
adc
icebp
out
xor
ret
dec
or
sar
lea
popa
mov
mov
and
ja
(bad)
add
jae
cmp
adc
xchg
ror
repz
inc
jle
jg
or
fs
xchg
jp
aad
push
ret
imul
in
fidivr
std
(bad)
bound
lahf
(bad)
stc
pop
pusha
pop
and
sbb
retf
lods
cmp
xchg
mov
dec
repz
pop
mov
es
int
or
pop
mov
jmp
xchg
mov
loope
push
pusha
shl
ins
mov
jns
test
and
jbe
test
or
push
fistp
cmp
lods
cs
xchg
pusha
mov
mov
add
movs
dec
push
xor
push
je
mov
ficomp
(bad)
arpl
fst
sub
sbb
popf
enter
or
ja
sar
jae
pop
push
in
pop
call
cmp
(bad)
fld
rcr
imul
and
dec
jmp
movs
jl
cmp
mov
outs
xchg
mov
and
outs
lds
cwde
xor
dec
(bad)
fstp
sub
and
sbb
inc
jl
fs
mov
test
cmp
or
test
mov
gs
imul
fs
rol
dec
fdivr
lea
jbe
call
jns
and
mov
dec
adc
retf
or
sbb
push
push
pop
fsub
pop
scas
jl
nop
add
pop
mov
jp
jmp
cmp
or
hlt
aas
jmp
shl
sahf
or
pop
pop
fild
int3
add
adc
repz
(bad)
pop
bound
mov
cmc
inc
xchg
mov
and
xchg
sub
xchg
lods
adc
fnstcw
mov
jl
push
push
test
xchg
or
xor
js
(bad)
ror
das
cdq
out
or
aaa
das
sub
mov
(bad)
sub
std
add
pop
xchg
stc
push
rol
inc
fimul
lahf
sub
popf
(bad)
jb
cmp
dec
mov
push
fldenv
mov
into
xchg
add
out
(bad)
add
enter
aaa
lock
ds
cmp
loopne
mov
(bad)
cmp
inc
div
inc
jl
inc
adc
aaa
test
mov
jne
(bad)
int
and
jbe
push
outs
mov
sub
retf
push
frstor
(bad)
xor
(bad)
bound
sub
retf
jg
ror
push
or
loop
mov
add
imul
movs
inc
adc
add
cmp
shl
xchg
push
ret
jg
(bad)
imul
nop
dec
gs
jo
jecxz
jecxz
and
ror
(bad)
and
jge
arpl
or
mov
aad
xchg
jnp
std
xchg
nop
xchg
shl
not
mov
or
push
arpl
cmp
mov
(bad)
or
cmp
cmps
sbb
mov
mov
adc
pop
fcom
sub
xchg
mov
out
es
cmc
inc
js
sbb
sub
popa
mov
inc
data16
sub
inc
jbe
mov
imul
pop
add
push
mov
ja
mov
pusha
test
push
pop
das
xchg
pop
or
or
in
add
popa
and
jo
mov
aam
xor
call
xor
loopne
add
imul
sahf
xor
sti
mov
mov
sub
pop
mov
mov
sbb
fsubr
(bad)
sbb
sbb
push
outs
push
and
push
mov
xchg
stos
int
add
call
dec
test
mov
dec
sahf
nop
fisub
inc
jo
cmp
out
(bad)
mov
pusha
movs
ins
movs
sbb
movs
ins
jno
sbb
mov
test
inc
movs
xor
fldcw
mov
jl
rol
jecxz
lods
jno
das
jne
les
mov
sub
mov
mov
pop
push
xchg
cmp
push
rol
icebp
call
push
ret
ret
dec
scas
out
xchg
xchg
and
imul
mov
push
scas
mov
iret
stc
pop
popa
sub
xor
mov
(bad)
jmp
mov
jno
mov
inc
pop
or
scas
mov
inc
iret
push
cli
leave
xchg
cmps
push
scas
aas
xchg
cwde
jge
jno
xor
pop
dec
cmps
adc
push
aad
pop
cs
adc
push
ja
test
cs
out
push
jle
xor
mov
mov
and
push
les
sub
and
mov
and
popf
imul
mov
scas
inc
(bad)
cli
pop
mov
xor
ins
lds
call
mov
ins
stos
je
stc
pop
lds
push
shr
mov
sub
outs
fwait
and
ror
mov
mov
cmps
add
fs
out
pop
in
ins
jge
pop
mov
stos
and
std
inc
test
xchg
xchg
rol
xor
mov
aad
mov
data16
xor
fsubrp
sub
pop
sbb
add
push
dec
ret
rcr
inc
mov
xchg
ret
mov
sar
ja
test
nop
arpl
add
pop
or
mov
ja
les
cwde
jl
xor
stos
add
mov
xchg
mov
ror
jg
cmp
imul
pop
mov
mov
jecxz
lahf
fs
dec
and
fnstsw
movs
adc
retf
adc
in
mov
pop
xchg
test
xor
(bad)
call
jmp
xchg
adc
test
xor
ror
pop
fwait
test
aad
xchg
out
int3
push
in
mov
sbb
sahf
lds
fisttp
lock
call
stc
inc
mov
jo
out
dec
push
loope
stc
push
aas
mov
or
or
outs
mov
scas
xchg
sbb
(bad)
imul
adc
gs
ret
cmp
mov
into
das
sub
gs
test
and
mov
mov
push
ins
mov
iret
xchg
shl
jo
(bad)
fld
popf
imul
xchg
nop
test
jle
ficomp
pop
xchg
stos
movs
scas
bnd
fistp
(bad)
push
enter
daa
stos
sar
dec
jl
iret
and
(bad)
cwde
mov
int3
fisttp
sub
sbb
sub
or
pop
aas
shl
mov
rcr
test
ja
jae
xor
outs
inc
cmp
mov
adc
mov
push
cmp
stc
retf
sub
jg
add
adc
rol
ret
ins
cmps
cs
pushf
and
leave
fs
lods
mov
or
test
inc
jns
dec
jne
push
cwde
add
sbb
sbb
arpl
cld
fstp
daa
and
ins
inc
sub
jmp
pop
mov
scas
dec
dec
mov
clc
pop
outs
retf
cmc
sub
jne
mov
div
jns
fiadd
cmp
cli
add
pushf
cmp
mov
inc
xchg
enter
into
push
add
mov
nop
mov
mov
hlt
mov
cmp
xlat
pop
mov
sub
ja
es
pop
inc
mov
xchg
addr16
neg
adc
mov
(bad)
mov
retf
inc
cmp
push
fstp
add
arpl
mov
push
xchg
and
mov
lea
add
retf
push
mov
inc
(bad)
pop
pushf
or
lahf
aad
push
arpl
(bad)
scas
inc
push
inc
test
stc
fmul
dec
cmp
jecxz
popa
mov
test
icebp
mov
pop
push
popf
cmp
in
pop
(bad)
xchg
sti
loope
add
mov
jge
daa
sar
cmp
sbb
push
mov
fmul
outs
rcr
mov
cmps
mov
jge
mov
add
cwde
les
clc
and
mov
add
dec
shl
and
ins
jo
aam
lds
jae
out
sub
aad
xchg
(bad)
sahf
or
ins
push
movs
jl
lea
aad
xor
adc
retf
mov
cdq
adc
fs
xor
xor
std
jbe
mov
test
mov
inc
cld
xchg
icebp
jp
mov
push
pop
and
pop
test
mov
mov
(bad)
push
mov
xchg
lods
js
or
cmps
(bad)
push
(bad)
out
aad
or
push
xchg
fmul
sbb
xchg
iret
inc
repnz
shl
adc
jbe
mov
xchg
fsub
mov
mov
stos
xlat
push
enter
xchg
(bad)
pop
mov
sub
pop
(bad)
rol
rcl
jle
fcom
idiv
lods
xchg
xor
cmp
mov
push
sub
jnp
mov
js
mov
mov
pop
cmp
data16
je
xchg
jge
stos
jge
jbe
mov
std
lahf
lock
xchg
aam
popf
jno
div
fs
inc
lahf
pop
ror
neg
lods
(bad)
jae
je
aad
mov
xlat
adc
jp
jns
xchg
pop
scas
push
push
gs
mov
cmps
sbb
lahf
ffreep
add
sub
pop
lea
pop
add
pushf
sub
and
jb
mov
shl
push
lahf
(bad)
push
cmp
xchg
add
xor
dec
jo
loope
mov
(bad)
jmp
pop
push
loop
sbb
pop
fsubr
mov
jo
cmc
pushf
push
adc
adc
push
test
xor
sahf
cmp
or
jo
mov
cmc
mov
xchg
hlt
pusha
sub
cld
sbb
adc
jne
call
or
movs
sub
mov
mov
and
(bad)
(bad)
adc
test
jns
push
push
ins
adc
add
pop
dec
add
lods
push
jns
mov
mov
scas
out
bound
jno
mov
or
iret
fst
out
cli
cmp
jmp
and
pusha
mov
repnz
iret
mov
inc
pusha
mov
jnp
xor
ret
jp
mov
(bad)
xor
ror
or
cmp
(bad)
int3
jno
lods
cmp
and
clc
push
mov
inc
jae
inc
test
lods
and
mov
push
arpl
inc
adc
sub
fsub
sti
call
sub
and
push
mov
stos
mov
lock
enter
outs
pop
adc
add
sub
out
(bad)
adc
retf
dec
shl
mov
cmp
sbb
inc
lods
xor
std
jno
jbe
push
jae
ins
xor
rcl
jmp
(bad)
cld
dec
ja
rol
mov
ins
or
mov
jge
lock
pop
aam
push
js
mov
sahf
mov
mov
xor
aaa
push
call
pop
fidiv
in
or
dec
cdq
(bad)
push
pop
push
mov
(bad)
mov
pop
pop
test
push
mov
ja
popa
cmp
jno
mov
cmp
outs
sbb
or
jle
jg
cdq
adc
in
pop
out
ins
and
lods
test
xchg
adc
stos
mov
aaa
test
lea
xchg
jge
adc
test
out
push
into
bound
sub
call
push
pop
ret
in
or
or
sub
jle
inc
jae
push
js
pop
xor
fwait
iret
pop
mov
sub
jp
or
out
inc
or
sub
mov
das
push
or
je
pop
dec
adc
add
jge
xor
lods
aas
lods
dec
push
stc
ins
fmul
ret
xchg
xchg
mov
sub
inc
mov
pop
test
cs
frstpm(287
jmp
inc
cs
mov
pop
dec
xchg
pop
(bad)
jne
mov
push
pop
mov
scas
add
pop
mov
mov
mov
sub
jmp
cmp
pop
xchg
lock
call
mov
mov
sbb
mov
loop
les
fwait
or
push
cdq
mov
push
rcl
push
dec
push
in
and
je
cdq
fiadd
sub
and
jae
add
fs
(bad)
in
xor
loop
pop
pop
or
enter
scas
pop
adc
fsubr
add
dec
lds
add
jmp
sub
ret
and
ror
ss
gs
mov
cld
les
call
xchg
xchg
lahf
sahf
jge
xchg
add
leave
push
ror
stos
xchg
pop
push
sbb
or
or
dec
jecxz
push
inc
mov
or
or
test
jle
jne
adc
push
jno
les
imul
imul
int
lods
lods
mov
das
scas
xor
mov
fsubr
jle
rol
dec
jle
data16
pushf
jo
fidiv
mov
inc
fsubr
add
jge
mov
pop
add
or
lods
push
nop
test
repnz
mov
mov
lahf
(bad)
fwait
ins
js
dec
push
out
jl
inc
fisttp
xchg
mov
lea
push
push
call
test
outs
mov
jl
stc
adc
mov
ss
jg
mov
sub
push
pop
jg
outs
pop
jmp
(bad)
cmp
movs
ja
xchg
std
mov
xchg
and
xor
scas
xchg
push
sub
or
and
test
mov
repz
adc
in
dec
in
scas
imul
cmp
loop
out
xchg
mov
test
mov
push
popf
add
xchg
imul
push
stc
sti
(bad)
out
and
mov
sahf
pop
in
cs
mov
call
xchg
mov
sar
call
ret
or
enter
leave
sahf
inc
mov
jg
xchg
stc
lods
inc
sub
fimul
pop
cmp
push
lods
mov
jns
cmp
ret
rcl
call
ror
inc
aad
adc
xor
ja
sahf
jae
test
jbe
pop
or
cli
pop
fild
pop
repz
push
in
idiv
(bad)
aam
aam
call
shr
adc
aad
ss
pushf
sbb
lods
xchg
pop
lods
inc
xchg
cmp
stos
dec
xlat
pop
sti
pop
cdq
add
mov
xlat
(bad)
repz
arpl
pop
sar
out
mov
mov
fstp
jnp
ret
(bad)
mov
ins
push
repz
mov
loop
mov
lahf
cwde
cmp
popf
jne
das
add
pop
ror
jl
adc
cmp
out
push
js
jmp
push
shl
dec
arpl
sbb
popf
xor
cld
stos
pop
jns
xor
sub
addr16
mov
(bad)
daa
push
mov
daa
sub
pop
es
push
jae
enter
je
movs
aas
or
(bad)
xrelease
push
cwde
test
xchg
fistp
mov
or
dec
(bad)
xlat
dec
push
rol
test
cs
inc
stc
adc
xchg
stos
nop
data16
js
jno
mov
(bad)
dec
cmps
mov
(bad)
ds
inc
mov
cld
push
cmp
sbb
jecxz
sub
mov
bnd
push
or
fs
jo
int
mov
pop
xor
std
add
nop
add
pop
cs
scas
imul
xchg
dec
cwde
mov
mov
pop
cmps
and
or
aas
test
imul
popf
ins
inc
push
cmps
loopne
adc
test
inc
mov
xlat
nop
push
pop
test
enter
sar
pop
dec
loopne
mov
out
inc
add
mov
mov
pop
inc
daa
jbe
mov
and
call
in
(bad)
ins
jl
sbb
push
mov
or
emms
test
pop
mov
fisttp
sahf
iret
add
mov
xchg
nop
add
push
xchg
retf
xchg
pop
shl
xchg
in
sbb
rcr
adc
ret
in
aaa
fscale
sbb
loope
mov
fs
xchg
and
mov
push
int3
test
or
cmp
les
pop
mov
xchg
add
data16
add
sbb
xor
cwde
icebp
adc
mov
sar
add
xchg
xchg
and
dec
fldenv
ins
add
in
inc
out
mov
mov
pop
mov
sbb
or
daa
shr
test
jle
dec
mov
push
pop
test
mov
mov
mov
mov
fnstsw
cmp
les
shr
out
jge
jns
mov
mov
sti
jae
jl
outs
pop
and
jecxz
or
arpl
adc
dec
fisttp
out
outs
jg
int
std
test
add
mov
xor
or
iret
adc
mov
or
stc
test
or
fmul
popf
int
aad
inc
and
clc
push
push
pop
xchg
add
xchg
jb
fmul
dec
imul
into
lods
fidivr
adc
or
push
mov
popf
leave
lods
mov
mov
jb
or
mov
dec
and
iret
test
xlat
stos
fnstsw
jg
mov
ror
jne
xchg
add
pusha
xchg
xor
fwait
pop
ja
cdq
pop
push
into
push
dec
ins
cmp
mov
jo
mov
test
xlat
rcr
(bad)
sub
push
fnstsw
mov
ror
pop
ja
add
pusha
lea
popa
cmps
xchg
pop
stc
movs
xchg
pop
xchg
xchg
ja
push
ins
adc
imul
jb
or
nop
jno
jns
and
jno
jl
jo
jnp
ins
mov
ror
jnp
ins
add
pusha
jae
jg
jno
mov
hlt
rol
fdiv
test
xchg
test
cdq
jge
adc
cmp
mov
or
ret
clc
test
outs
mov
inc
dec
movs
pop
fs
add
and
ret
jl
es
dec
shl
mov
cmp
inc
jne
inc
xchg
mov
mov
mov
push
xor
lahf
jle
push
(bad)
and
fsub
lea
sbb
jns
mov
xlat
mov
push
stos
stos
in
ja
pop
add
push
(bad)
imul
cmps
sbb
dec
mov
xchg
in
inc
lahf
popa
cmp
jmp
scas
mov
adc
xchg
mov
or
dec
pop
pushf
enter
test
mov
mov
ror
mov
mov
push
add
push
cld
mov
rol
mov
das
ss
inc
lea
mov
mov
inc
mov
cdq
mov
and
mov
jo
cwde
(bad)
xchg
xlat
pusha
pushf
sahf
int3
push
lea
jo
sub
outs
stos
mov
ja
jp
movs
xchg
mov
dec
int3
test
xchg
mov
stc
xchg
xchg
std
mov
mov
jbe
push
mov
test
xchg
stos
mov
scas
scas
in
xor
xor
xchg
fcom
adc
iret
mov
mov
daa
adc
imul
sub
sbb
nop
or
mov
add
pop
das
mov
pop
xor
int3
imul
inc
retf
dec
sbb
inc
cld
jmp
lds
xor
stc
ins
repz
adc
fbstp
pop
mov
inc
mov
sub
pop
loope
mov
ins
popa
dec
inc
mov
shr
mov
sub
mov
adc
idiv
sbb
inc
mov
fdivr
mov
inc
inc
push
clc
push
imul
inc
jg
dec
pop
ds
test
popf
retf
mov
mov
jnp
push
mov
movs
adc
pop
mov
ja
adc
or
push
pop
pop
lea
aad
je
mov
add
mov
dec
fiadd
in
inc
inc
sahf
jne
repz
movs
ins
jns
retf
rcr
pop
scas
je
test
enter
dec
lahf
mov
xchg
sbb
adc
popf
movs
pop
lods
(bad)
push
xchg
aam
test
mov
fs
sub
mov
sub
(bad)
dec
push
lock
inc
lea
mov
fs
cwde
mov
pusha
jae
cmc
push
enter
jl
inc
popa
lds
dec
and
cmp
xchg
sar
imul
imul
lods
adc
mov
mov
and
ins
cmp
ror
jmp
mov
pushf
rol
push
ins
push
aam
mov
popf
hlt
adc
mov
sbb
jnp
or
jne
fst
jge
rcl
test
adc
sahf
in
leave
dec
mov
mov
mov
ret
jns
sbb
and
imul
fs
fidivr
fcmovb
not
or
mov
jg
jns
lods
inc
mov
mov
or
and
rcr
shl
test
adc
and
jmp
push
ds
cmp
or
mov
test
mov
ret
push
mov
xchg
push
xchg
inc
enter
cmps
or
fcomp
out
jns
add
data16
cmps
mov
dec
and
and
cmp
hlt
rcr
or
call
call
mov
adc
xchg
cli
stos
or
pop
nop
mov
ret
movs
not
or
mov
cmp
push
loop
xchg
jl
sub
out
bound
in
jge
int3
or
adc
scas
je
neg
mov
imul
cdq
dec
jns
lods
xor
call
mov
lods
and
cmps
es
pop
add
mov
addr16
adc
fs
test
inc
mov
cld
dec
test
xor
(bad)
mov
in
inc
ins
int
mov
mov
stc
add
push
jo
aaa
xor
pop
sahf
xchg
cld
loope
adc
cs
dec
xor
int3
xor
jp
rcr
pop
adc
xchg
fidivr
dec
imul
lea
mov
shl
pop
xchg
jmp
les
mov
pusha
(bad)
shr
lods
mov
mov
dec
push
retf
or
shl
dec
jb
movs
frstor
mov
cmc
mov
mov
pop
dec
pop
pop
jmp
pop
enter
xchg
xchg
push
xchg
dec
inc
shl
push
shl
(bad)
loopne
mov
and
jno
mov
mov
jne
mov
sbb
inc
jg
xchg
nop
and
dec
movs
jle
add
test
and
sub
test
movs
push
mov
ja
mov
iret
xchg
icebp
and
pusha
mov
loope
dec
jno
popf
pop
adc
ins
adc
xchg
and
add
xor
mov
cdq
popf
add
lock
or
popf
mov
xor
ret
jg
xchg
sar
mov
pop
mov
test
js
pop
hlt
push
enter
test
out
loope
jmp
aad
add
push
add
add
and
movs
adc
mov
(bad)
jmp
xchg
push
push
pop
gs
call
cld
xlat
and
sub
lea
fs
loope
mov
add
inc
add
pop
aaa
hlt
jno
nop
nop
mov
mov
inc
mov
movs
cmps
aas
push
test
mov
xchg
adc
shl
icebp
sub
aam
ja
out
pop
ins
mov
(bad)
push
fsubr
push
dec
adc
dec
adc
mov
movs
xchg
push
and
outs
xchg
cmp
nop
scas
das
imul
pop
pop
xor
aad
pop
jo
mov
add
aas
dec
movs
enter
das
cmp
push
push
fs
pop
mov
inc
rcr
mov
inc
shl
scas
mov
xchg
jne
or
clc
sub
call
mov
adc
test
xor
mov
test
mov
xor
lds
sar
add
sbb
shl
je
dec
mov
jl
mov
jmp
mov
mov
es
arpl
lea
in
mov
mov
jne
xchg
cli
sub
hlt
jnp
mov
xchg
dec
call
or
daa
imul
pop
sub
test
mov
mov
addr16
call
fucomi
xor
and
ror
jg
sbb
dec
xor
nop
push
mov
cmp
cmp
and
and
xor
outs
or
push
adc
ins
push
cs
pop
mov
aad
ficom
mov
add
jmp
xchg
xchg
ds
inc
jnp
cmp
pop
adc
fsubr
in
dec
out
adc
retf
mov
push
and
pop
sbb
xchg
lods
shl
pop
hlt
jo
(bad)
test
mov
mov
mov
ja
ret
pop
mov
int
push
add
mov
loop
out
and
int
mov
mov
add
shl
int
adc
movs
and
and
xchg
mov
test
mov
aam
push
dec
and
lds
test
lahf
outs
popf
dec
scas
dec
(bad)
cmps
addr16
ja
lock
jno
push
mov
push
adc
shl
mov
scas
shl
push
pop
rol
mov
fnstcw
push
out
dec
and
pop
aad
data16
sar
cmp
iret
cwde
xor
stc
popf
jno
enter
nop
pop
mov
jg
add
scas
lahf
std
jge
int3
pop
jb
add
push
test
jge
inc
pop
repz
xchg
inc
les
vmovaps
cmp
inc
aad
ret
es
dec
das
retf
jno
pusha
fs
ret
pusha
or
movs
shl
inc
test
lock
stc
jmp
call
cmps
inc
xor
mov
in
push
jnp
fst
test
fdivr
retf
xchg
mov
and
sahf
cmp
jl
mov
scas
mov
push
xchg
push
and
dec
pushf
cs
add
dec
leave
push
(bad)
lods
ret
dec
rol
lods
or
ins
les
pop
cmp
test
xchg
arpl
mov
add
pusha
je
cmp
dec
xchg
aaa
mov
stos
clc
mov
xchg
cld
fild
mov
sub
mov
pop
stc
sbb
dec
mov
ficom
js
mov
gs
pop
dec
inc
mov
fxtract
lods
shl
xor
fisubr
ins
scas
js
int
mov
sbb
cmp
ja
cmc
sbb
retf
pop
mov
cmp
test
and
xor
push
stos
fwait
pop
push
mov
movs
cmps
pop
jp
cmp
or
push
push
dec
aam
xchg
xor
nop
in
jmp
js
cs
movs
sbb
or
ins
xor
repz
push
outs
adc
jo
or
cdq
xor
sbb
cdq
pushf
ret
out
cmc
sahf
enter
inc
scas
bound
jge
mov
test
or
les
cmp
cwde
retf
inc
call
xlat
test
sub
inc
mov
(bad)
je
(bad)
mov
loopne
(bad)
enter
scas
je
shr
int3
mov
nop
outs
in
(bad)
popa
xor
test
int3
outs
mov
pop
ins
mov
jecxz
jl
sbb
(bad)
ja
xchg
mov
shl
pop
push
mov
push
xchg
dec
fstp
cdq
aad
xchg
lds
lock
ret
jl
cdq
mov
nop
jl
stos
pop
(bad)
sar
push
shl
addr16
xchg
test
jp
fwait
jne
sbb
jbe
add
or
fcom
ret
pusha
enter
mov
shl
scas
test
jo
add
jbe
mov
ins
popa
inc
jmp
cmp
cmp
xlat
xor
cld
sub
nop
adc
pushf
test
cmp
dec
scas
xor
inc
xchg
jp
and
lea
enter
and
iret
jnp
mov
xor
rcr
retf
xor
push
jmp
cmps
mov
mov
div
cld
mov
mov
pop
xor
push
enter
test
mov
(bad)
loope
std
mov
iret
jg
adc
sub
inc
adc
push
(bad)
nop
test
inc
and
dec
test
or
out
adc
push
fcmovbe
leave
or
mov
mov
std
jecxz
adc
mov
mov
dec
loope
push
fcomp
xchg
aad
pop
arpl
xor
xchg
fsubp
in
and
fistp
push
inc
enter
(bad)
push
pop
inc
xchg
xchg
and
pop
mov
pop
popf
data16
and
sub
(bad)
stos
xchg
mov
jns
sub
(bad)
fimul
in
sbb
xor
call
out
js
movs
scas
mov
adc
ins
push
and
or
or
retf
mov
jecxz
cmp
jecxz
or
(bad)
mov
sbb
add
sti
out
ja
cwde
jge
lods
push
or
dec
sahf
lea
inc
data16
enter
in
mov
(bad)
ror
pop
add
adc
aaa
(bad)
pushf
xor
push
jge
es
pop
cld
jp
clc
dec
dec
popf
fs
xlat
xlat
pop
xchg
out
or
mov
adc
mov
xor
mov
js
add
jno
in
xchg
or
repz
sahf
xchg
ds
cmp
jb
fisttp
cmps
xlat
push
ret
pop
in
bound
inc
push
pop
xchg
aas
pop
sbb
(bad)
xor
push
je
pop
jmp
push
cmp
rcr
out
jl
dec
mov
dec
inc
loop
jb
xchg
sbb
push
jbe
cmp
inc
adc
mov
ror
int3
rcl
jae
(bad)
scas
jo
pop
xchg
push
pop
add
push
mov
xchg
jo
sbb
cmp
dec
dec
out
sub
mov
call
loop
pop
mov
add
add
(bad)
in
mov
(bad)
cli
ja
neg
lods
test
pop
out
es
push
(bad)
fsubr
pop
js
xchg
push
aam
scas
leave
mov
out
xchg
inc
add
and
(bad)
das
in
xchg
arpl
inc
inc
les
nop
imul
push
pop
cmp
lods
cmps
imul
ret
push
lds
(bad)
pop
jno
push
mov
mov
shl
sbb
inc
mov
push
mov
mov
in
(bad)
fcom
mov
ss
loop
pop
mov
xor
push
xor
in
movsx
inc
xchg
jo
pop
imul
rol
xor
mov
nop
pop
add
mov
pop
loope
and
push
and
cmp
test
xchg
sub
push
cwde
xor
sub
pushf
mov
test
jecxz
aam
inc
jp
cmp
pop
arpl
xor
jmp
jmp
aaa
xlat
sahf
aas
retf
retf
fnstcw
xor
adc
int3
je
inc
(bad)
loope
(bad)
cmp
xor
mov
mov
stc
pop
cmp
ss
lods
sbb
jmp
or
jmp
pop
mov
sbb
ret
pushf
jl
cdq
sbb
call
pop
rol
xor
mov
mov
mov
xor
mov
stos
jns
push
data16
sub
inc
mov
push
jmp
mov
xor
popf
xchg
mov
xor
mov
addr16
movs
imul
(bad)
das
add
fnsave
sub
push
mov
inc
(bad)
enter
or
push
adc
lahf
loope
add
cmp
icebp
dec
(bad)
fabs
push
sub
loope
or
arpl
popa
inc
jmp
aam
add
sahf
popa
imul
pop
loop
jl
fld
aaa
jns
sub
repz
popf
mov
popf
ja
mov
inc
pop
inc
aad
and
adc
aad
aaa
jbe
ficom
mov
inc
nop
out
add
rcl
jnp
mov
and
aas
mov
ja
sub
call
dec
jno
std
cwde
add
les
mov
jb
es
inc
sbb
test
xchg
fld
ja
xchg
mov
fs
sub
arpl
push
shr
out
std
mov
aas
mov
jne
ins
outs
mov
fcomp
call
xchg
out
jp
data16
shr
in
mov
inc
sbb
pusha
ror
lea
(bad)
(bad)
scas
mov
call
fnstenv
pop
xchg
mov
inc
pop
mov
pop
inc
jmp
xor
mov
sbb
push
pop
pop
arpl
jo
cmps
sar
xchg
jno
es
cmp
inc
adc
inc
pop
pop
retf
pop
mov
xor
pop
into
pop
push
rol
ja
pop
jo
or
pop
scas
dec
sahf
dec
mov
mov
retf
int
int3
push
mov
jmp
nop
mov
popf
imul
xor
loope
outs
xchg
or
aam
mov
sub
movs
mov
pushf
adc
cmp
repnz
mov
or
je
dec
je
and
ret
dec
push
(bad)
mov
(bad)
pop
cld
xchg
or
mov
pop
shl
js
ins
push
push
xor
sub
out
lods
jmp
dec
vpunpckhqdq
jne
mov
test
stos
mov
fwait
es
(bad)
mov
mov
xchg
mov
sub
sub
hlt
push
push
or
xchg
mov
loop
mov
add
(bad)
outs
inc
sbb
fnstcw
call
fld
mov
inc
inc
xchg
idiv
mov
or
int
push
popa
rcl
mov
aad
sub
lahf
scas
in
pop
xchg
cmps
cld
adc
push
aaa
scas
jbe
push
push
mov
jp
ror
(bad)
test
inc
xlat
popaw
add
push
jns
(bad)
ja
rol
test
adc
xchg
push
shl
push
xor
add
adc
or
mov
in
sub
xchg
icebp
fwait
mov
dec
cli
ins
or
jae
fwait
dec
fcom
pop
mov
or
push
mov
addr16
adc
cmps
or
cmc
pop
xor
(bad)
push
cdq
push
ror
pop
mov
popf
xchg
loop
xchg
in
aam
dec
dec
cmc
mov
shr
jmp
mov
aas
mov
aas
into
mov
call
push
cmp
data16
inc
pop
adc
mov
pop
xor
mov
mov
pop
mov
lods
jl
add
inc
mov
cmps
xor
mov
xchg
inc
adc
sbb
je
call
or
mov
rcr
mov
dec
pop
ins
mov
ds
dec
stos
repz
or
or
test
ficomp
popf
sub
sbb
mov
fcom
or
retf
jmp
xchg
mov
loope
ins
lea
leave
int
int3
xchg
rcl
cmp
xchg
dec
clc
mov
rcl
(bad)
imul
mov
call
rcr
jo
cld
arpl
adc
test
in
mov
ret
test
fsubr
xchg
(bad)
mov
cwde
jge
sbb
test
loopne
scas
and
push
mov
mov
mov
arpl
inc
jo
jnp
std
js
outs
jbe
in
adc
xchg
pop
rol
jp
test
out
mov
iret
jns
mov
imul
mov
shr
inc
jecxz
cdq
scas
mov
fiadd
jb
or
xlat
mov
lahf
add
push
jge
add
or
dec
gs
inc
lods
daa
in
popf
retf
cwde
test
fimul
push
sbb
dec
mov
sbb
scas
adc
lds
ret
and
pop
push
push
call
outs
push
sub
inc
ret
ror
in
movs
xor
and
fiadd
mov
and
mov
leave
je
mov
test
lds
cwde
push
sub
ds
adc
or
sti
fisttp
push
mov
out
scas
xchg
retf
lahf
test
sub
stos
xchg
dec
fmul
mov
in
push
fisub
hlt
mov
xchg
pop
ds
call
std
in
fsub
push
std
fdivr
hlt
adc
mov
retf
xchg
mov
das
xlat
into
ja
in
fcomp
push
mov
gs
ja
cmps
movs
daa
pop
mov
lahf
clc
adc
pop
add
outs
mov
jle
(bad)
fidiv
push
xchg
aad
cmp
rcl
minps
daa
aad
sub
je
mov
sub
pusha
std
push
cmp
icebp
loopne
or
push
in
pushf
jbe
adc
ret
mov
imul
xchg
(bad)
and
das
pop
in
mov
add
jle
mov
push
fadd
push
ror
push
and
gs
ret
jbe
pop
mov
movs
cmps
mov
cmp
xchg
cmp
xchg
add
sbb
sub
adc
inc
xlat
dec
jne
push
cmp
jns
cmp
bound
(bad)
cld
stc
data16
or
leave
fwait
hlt
iret
dec
cmps
into
mov
sbb
arpl
gs
mov
bound
into
and
sbb
xlat
xchg
jp
dec
push
jno
mov
out
jbe
outs
scas
(bad)
ins
xchg
mov
adc
in
xor
hlt
test
pop
imul
mov
push
pushf
std
je
ror
pop
jnp
inc
mov
xchg
xchg
mov
push
dec
mov
mov
xchg
xor
cmp
mov
pop
iret
mov
push
pushf
push
sbb
clc
pop
iret
sbb
fdiv
add
js
aas
pop
fxch
imul
lods
mov
jp
out
idiv
mov
rcr
stc
popa
inc
xor
jo
mov
pop
addr16
or
xor
popf
inc
or
mov
(bad)
push
sub
sti
lods
pop
loopne
push
(bad)
fild
hlt
imul
adc
in
cmps
or
dec
mov
shr
mov
jns
fidivr
dec
sub
jnp
rcl
xor
push
pop
push
fidiv
gs
dec
stc
mov
stos
jae
or
test
ins
stc
xor
mov
and
ret
mov
sbb
push
sahf
in
imul
and
sub
or
mov
nop
sub
jns
push
sahf
fisttp
fadd
cwde
xchg
loope
cwde
stos
fstp
xor
inc
call
arpl
int3
(bad)
dec
pop
aad
sub
mov
mov
dec
in
adc
pop
and
jnp
sbb
clc
je
pop
ret
inc
sub
jl
dec
jl
out
repz
xchg
ror
sub
jg
sub
ja
sub
xlat
mov
(bad)
retf
xor
outs
inc
es
dec
popa
int
shr
mov
jbe
dec
ret
pop
push
ret
mov
inc
rcr
pusha
or
cwde
(bad)
cli
mov
popf
cmp
push
retf
movs
fild
add
inc
scas
cmps
movs
jb
pop
mov
sti
ja
inc
lds
clc
loope
cmp
pop
mov
imul
cmp
xchg
mov
inc
ins
stc
xchg
pop
adc
xchg
push
adc
sbb
jb
push
in
popf
lods
mov
push
not
mov
pop
fwait
outs
inc
fisttp
and
or
jns
adc
jne
mov
xchg
xchg
adc
jge
je
hlt
pop
ret
lahf
xlat
add
movs
into
add
pop
aas
pushf
dec
sbb
sahf
sub
pop
fcomp
aaa
cmp
aaa
hlt
cvtpi2ps
rcr
out
mov
mov
je
fisttp
stos
retf
fdivr
push
bound
fdiv
cmp
in
mov
add
mov
cmp
pop
mov
stos
xchg
pop
idiv
outs
or
mov
imul
or
xchg
arpl
mov
mov
inc
sar
(bad)
adc
pop
jg
cmp
ja
popf
test
popa
or
mov
cmp
retf
jns
cmp
fsubr
mov
cmp
xchg
js
adc
cs
mov
in
push
xchg
mov
pop
dec
and
add
outs
pop
add
ss
xor
fadd
fs
ret
in
push
or
shl
mov
(bad)
movs
mov
and
push
xchg
fmul
or
rcl
mov
retf
push
mov
movs
cmp
loope
jg
push
(bad)
imul
add
jecxz
(bad)
lock
inc
adc
cld
inc
cwde
dec
sbb
sahf
ins
test
xchg
jp
and
cmps
call
rol
dec
cmp
rcl
sar
(bad)
fmul
jbe
cs
pop
cld
bound
xchg
jnp
mov
jo
cld
lahf
jne
push
adc
out
js
mov
mov
ret
imul
loope
popf
stc
add
mov
jnp
jmp
adc
mov
and
movs
xchg
or
ror
push
fdivr
xchg
pushf
pop
push
mov
pop
je
mov
jg
push
fwait
mov
or
pop
test
lea
mov
(bad)
fsubr
leave
in
or
arpl
dec
mov
mov
xchg
add
or
inc
sub
gs
lds
std
push
gs
mov
ins
xchg
cmp
lods
outs
jg
leave
in
loop
and
dec
jmp
push
sbb
ins
mov
sub
and
sar
repz
mov
mov
sahf
push
lahf
dec
mov
inc
(bad)
xlat
xchg
int
icebp
mov
push
adc
aam
aas
add
imul
xchg
cwde
in
mov
cmp
dec
mov
pop
push
jae
out
mov
rcr
cli
mov
or
jbe
mov
sbb
adc
xchg
mov
je
outs
rcr
lods
paddw
jo
scas
dec
stos
or
xchg
xlat
aam
mov
sub
or
xor
push
out
gs
inc
pop
les
inc
ins
icebp
popf
mov
daa
imul
stos
lahf
and
(bad)
mov
out
or
xchg
push
jo
pop
adc
stc
fdivr
outs
leave
lods
fisubr
sbb
jns
shr
xlat
add
jle
push
cmps
outs
jle
movs
or
add
add
vcvtsd2si
inc
mov
inc
ins
in
mov
imul
(bad)
mov
jb
fdivr
pop
out
std
push
fwait
mov
or
mov
cmp
gs
push
or
in
jo
addr16
push
ja
xor
fmulp
or
sbb
push
xor
mov
ins
cmp
(bad)
mov
bound
retf
leave
call
int
xor
(bad)
cmps
out
ja
out
jg
xor
call
lahf
or
test
ins
repz
or
test
jmp
je
(bad)
mov
jmp
sub
mov
cmp
inc
popf
scas
xchg
sub
inc
rcr
pop
scas
das
push
and
sahf
(bad)
ins
inc
mov
inc
push
popa
xchg
fnsave
rcr
dec
hlt
iret
popaw
into
mov
arpl
enter
iret
mov
add
fild
xchg
mov
cmp
xchg
and
push
daa
cmp
xchg
dec
(bad)
mov
push
adc
mov
xchg
(bad)
mov
xor
fs
dec
in
js
mov
test
cmp
mov
fdivr
pop
lock
sub
aaa
dec
pop
cld
push
xor
mov
jno
mov
dec
add
cmps
jo
jbe
xchg
pushf
pop
aaa
mov
mov
mov
es
sub
cs
ins
sbb
vmovdqa
push
stos
int
cmp
mov
cmp
push
mov
fisttp
(bad)
fneni(8087
mov
stos
xchg
or
in
inc
mov
xchg
leave
jne
jg
mov
sbb
push
or
(bad)
inc
add
mov
shl
and
popa
repnz
pop
mov
dec
arpl
call
xchg
inc
jg
xor
scas
xchg
rol
mov
inc
imul
push
jno
cmp
(bad)
mov
or
(bad)
jbe
mov
aad
dec
dec
push
push
or
mov
(bad)
out
mov
jp
pop
arpl
cwde
sbb
inc
inc
jne
jg
mov
jecxz
fild
pop
adc
dec
aas
inc
adc
push
daa
and
popf
dec
mov
fstp
popf
neg
adc
std
nop
adc
mov
inc
leave
jge
sbb
mov
stos
outs
(bad)
cmp
lods
xchg
in
cli
dec
loopne
add
add
sbb
(bad)
ficom
push
dec
or
xchg
xchg
xor
adc
cdq
call
enter
out
pop
mov
into
pop
or
loope
or
(bad)
dec
sub
mov
enter
fiadd
add
jnp
inc
arpl
adc
dec
js
test
mov
xchg
in
cld
test
mov
and
add
add
outs
jmp
pop
sub
push
ds
mov
jno
dec
add
scas
push
repz
sbb
inc
inc
inc
dec
loope
(bad)
jmp
les
add
pop
jecxz
dec
sahf
scas
in
mov
push
or
or
pop
stos
call
(bad)
pop
mov
pop
inc
mov
mov
sub
js
pop
test
sub
retf
jno
mov
push
lea
dec
cmp
sub
jne
cmp
push
data16
fst
xchg
xchg
jge
push
inc
daa
push
scas
aam
test
sub
cmp
push
xor
aas
pop
cmc
bound
adc
(bad)
pop
scas
mov
mov
lea
mov
add
mov
ins
dec
lahf
iret
xchg
mov
movs
(bad)
jns
jmp
sti
cmp
fwait
les
rol
jae
push
mov
iret
push
ror
mov
cmp
mov
inc
xor
mov
pushf
lahf
gs
mov
mov
cmc
test
call
ins
dec
nop
push
xchg
pop
aas
pop
jle
shr
push
push
lock
and
jae
xchg
in
fidiv
or
inc
mov
retf
push
enter
mov
dec
and
(bad)
out
adc
ja
xchg
out
add
test
xor
nop
add
out
arpl
sar
fnstsw
(bad)
mov
xchg
scas
test
fs
xor
stos
cmp
xor
cld
mov
sbb
inc
pop
fsub
xor
or
sbb
rol
or
enter
movs
cmp
rol
ret
pusha
pusha
add
stc
sbb
jg
xchg
pushw
aad
push
xchg
stos
add
daa
outs
call
mov
mov
push
mov
sbb
dec
jl
int
mov
dec
mov
sar
in
jns
cld
cdq
or
add
iret
mov
adc
mov
retf
out
cwde
push
jp
ins
enter
xlat
icebp
xor
sub
mov
test
lds
mov
pop
icebp
inc
pushf
ret
pushf
xor
jns
dec
and
mov
xor
cmc
out
cmps
dec
mov
scas
gs
xchg
mov
mov
xchg
retf
jmp
dec
iret
call
std
add
je
ror
call
cdq
add
mov
ss
shl
mov
call
dec
lock
inc
mov
sar
mov
jge
call
and
sub
inc
std
cld
fwait
outs
xor
mov
sbb
sti
lahf
adc
arpl
push
mov
sbb
add
and
xchg
popf
jnp
push
and
loopne
jge
pop
rcr
mov
sbb
jg
cmps
mov
test
ss
mov
(bad)
or
pop
neg
mov
mov
pop
fprem
or
outs
test
jae
inc
nop
sahf
outs
sub
pop
rol
and
mov
mov
add
sub
mov
lock
cmp
out
adc
mov
jl
movs
int
mov
xor
push
fisttp
pusha
out
ja
inc
cmps
xchg
imul
retf
mov
(bad)
mov
add
sahf
lods
mov
call
push
dec
fdivr
and
mov
add
ss
hlt
pop
adc
rcr
xor
pop
cmp
pop
jo
push
pop
test
mov
mov
sbb
jb
sub
mov
sbb
sbb
test
es
dec
test
adc
(bad)
inc
sub
aad
jae
adc
fldcw
test
mov
std
xchg
mov
sub
leave
pushf
mov
out
into
sar
jns
jne
mov
or
xor
mov
lods
pop
int
jle
movs
sub
fcom
(bad)
cmp
mov
clc
push
ja
xor
jo
and
lods
aas
(bad)
sbb
sbb
(bad)
xor
sbb
out
clc
jecxz
aad
fcomp
mov
mov
mov
cmps
jecxz
mov
fcmove
call
jb
jno
and
xchg
neg
dec
mov
mov
iret
bound
nop
iretw
mov
mov
mov
cdq
ret
cmp
push
push
(bad)
push
(bad)
or
dec
xor
ins
iret
and
ficom
mov
dec
call
repz
jle
test
dec
push
fldcw
movs
or
xor
jo
aam
mov
pop
cs
push
fnsave
cs
dec
(bad)
mov
stc
in
mov
mov
jl
sbb
mov
xchg
jns
cmps
(bad)
shl
jl
or
mov
int3
mov
push
mov
mul
mov
outs
retf
cwde
xlat
sbb
mov
mov
xor
vaddsubpd
and
cwde
cwde
test
mov
push
mov
cmps
inc
cmps
lods
pop
jp
loop
test
outs
xlat
mov
push
xchg
push
mov
push
push
jle
stos
(bad)
push
xchg
xlat
sahf
test
rcl
mov
xlat
sti
and
jmp
jae
loop
add
mov
and
inc
iret
popa
add
mov
inc
pop
mov
test
mov
jo
pushf
pop
cmps
clc
in
div
int
ss
jne
retf
lods
mov
mov
mov
in
mov
in
call
jl
sub
jb
inc
outs
pop
sbb
add
push
ja
in
aas
dec
test
imul
add
dec
mov
jae
pop
(bad)
ins
loopne
mov
repnz
cwde
mov
sbb
rol
gs
pop
jae
stos
data16
iret
aad
mov
iret
hlt
mov
push
arpl
ja
jmp
adc
xlat
std
xor
push
mov
jmp
imul
test
(bad)
out
(bad)
or
sub
imul
and
jne
shl
test
pop
fadd
mov
ss
push
xor
pop
cmc
sbb
adc
mov
push
lods
mov
fs
fwait
dec
arpl
pop
jmp
ss
(bad)
add
out
jae
std
das
loopne
mov
lods
dec
adc
in
xor
mov
add
fisubr
jnp
cmps
inc
cmp
test
rcr
add
mov
lods
xchg
jns
mov
out
dec
out
dec
dec
in
movs
icebp
fsubrp
sti
xchg
retf
inc
mov
in
jbe
xor
js
xchg
jmp
jne
sbb
daa
add
int
jg
clc
adc
mov
pop
inc
mov
mov
pop
xor
xor
in
mov
sub
jecxz
inc
fistp
mov
cmp
int3
jae
xchg
mov
mov
les
out
movs
adc
pop
sbb
(bad)
sub
push
call
hlt
dec
leave
push
out
sub
mov
or
addr16
cs
aas
inc
sbb
scas
ins
vpsubsb
jecxz
push
jge
fldenv
or
dec
dec
xor
dec
fidiv
inc
pop
leave
push
dec
adc
mov
xor
fstp
jno
clc
arpl
xor
add
stos
jae
pop
sub
adc
jmp
shl
js
sub
int3
jnp
mov
jno
dec
push
mov
mov
mov
sbb
push
or
mov
mov
sbb
jge
in
add
js
push
sub
cmp
jmp
jle
movs
xchg
or
outs
fadd
mov
test
inc
out
lea
cmp
rcl
fmul
rcl
retf
outs
pop
iret
xor
outs
xchg
fild
dec
fbstp
bnd
nop
sub
or
shr
xchg
out
push
mov
jmp
outs
and
push
fnstsw
repz
(bad)
pop
and
xor
push
add
stos
adc
pop
popf
or
cld
inc
ja
push
push
push
jae
(bad)
lea
cli
xor
add
es
mov
fadd
mov
push
push
or
jmp
push
cmps
add
mov
out
les
into
fldcw
add
xor
pop
xchg
jmp
lods
sbb
mov
add
shl
imul
xchg
in
and
retf
sub
mov
mov
inc
pop
and
sbb
adc
jge
sbb
stc
jo
mov
push
and
dec
jmp
sbb
mov
in
xchg
sbb
leave
in
mov
push
jns
(bad)
bound
addr16
add
adc
sti
adc
mov
pop
mov
mov
daa
pop
rcl
pop
pop
lea
inc
mul
ret
test
cli
dec
xchg
fs
adc
aaa
fistp
or
rol
sub
mov
mov
jg
mov
cwde
loopne
and
dec
rcr
clc
pop
sahf
loope
mov
mov
(bad)
cmp
dec
adc
pop
mov
ja
mov
fld
cmps
mov
mov
pushf
aas
pop
pop
cmp
xchg
outs
aas
sbb
push
dec
dec
jo
rcr
scas
jg
outs
push
leave
xor
pop
push
cmps
mov
sbb
packuswb
dec
fwait
imul
iret
inc
outs
movs
test
jbe
and
push
lds
pusha
pop
push
dec
push
cmp
jbe
mov
push
cs
mov
add
retf
scas
mov
gs
ja
or
cli
scas
popa
add
cmps
add
add
lods
jo
mov
cmp
inc
mov
sub
push
ret
ss
dec
sub
mov
sub
mov
jns
jle
in
or
sbb
push
cmp
daa
sti
xchg
cld
sub
aam
dec
mov
hlt
or
and
or
or
mov
or
jg
out
cmp
xor
mov
jecxz
fild
out
imul
mov
das
cli
icebp
inc
inc
mov
neg
in
out
iret
push
xor
push
stos
mov
mov
hlt
dec
cdq
loop
jecxz
inc
add
push
inc
jb
push
push
movs
stos
xchg
xchg
sar
aad
dec
pop
aas
(bad)
adc
jo
je
into
xchg
rcl
dec
aas
push
in
dec
mov
shl
lea
or
cdq
mov
mov
imul
int
dec
outs
sub
imul
aad
shl
test
idiv
jmp
into
popf
sub
jl
cmc
lea
sar
aas
push
ss
pop
aas
out
mov
sub
movs
addr16
fwait
pushf
ins
cmp
dec
(bad)
jmp
lods
add
retf
dec
test
data16
adc
sbb
(bad)
call
sbb
fmulp
retf
sub
fiadd
mov
sar
pop
repnz
call
into
popa
mov
mov
movs
inc
pop
cld
das
pop
lea
sbb
lahf
and
mov
push
push
cmc
cmp
or
(bad)
imul
mov
fimul
dec
and
pushf
aam
pusha
xchg
imul
cmps
sub
jp
lahf
jg
and
and
and
sbb
cmp
es
ret
mov
rol
int3
inc
not
or
mov
jg
lea
or
cmp
dec
stos
sub
inc
int
mov
ins
ret
ss
sub
lods
movs
xchg
pop
mov
(bad)
dec
dec
fidivr
xor
jge
in
and
jg
and
ja
pusha
inc
movs
add
mov
ja
pusha
cmp
mov
adc
cmp
push
xor
int3
xor
sbb
repnz
mov
ja
test
sub
in
test
scas
push
sahf
jp
cmp
rep
or
lods
jns
jmp
mov
out
jmp
icebp
adc
ror
xor
in
fwait
mov
adc
iret
das
mov
fst
int3
fbld
loope
mov
repz
lds
(bad)
sbb
imul
mov
and
push
push
mov
lods
test
test
adc
dec
test
repz
int
xor
sbb
int3
mov
sub
mov
(bad)
cwde
scas
pop
push
nop
ret
sahf
sbb
adc
mov
out
mov
ins
and
test
cmps
adc
shr
jb
jecxz
fld
fistp
and
iret
call
sbb
mov
fadd
imul
cdq
nop
adc
add
test
push
aaa
das
test
int3
push
mov
xlat
mov
add
sbb
sub
loope
sub
pop
adc
sbb
fnstsw
movs
enter
adc
push
mov
fnstcw
mov
(bad)
pushf
lds
mov
jecxz
aas
xchg
cs
adc
clc
std
ins
mov
in
out
(bad)
ds
call
scas
jmp
lds
xor
add
adc
xchg
js
std
mov
adc
repz
dec
aas
popf
dec
out
fbstp
add
ds
imul
inc
or
mov
ds
adc
loope
mov
push
fisttp
xchg
or
mov
sbb
inc
mov
and
out
mov
(bad)
test
in
xchg
mov
mov
add
iret
sahf
xchg
push
pop
lock
mov
out
outs
mov
sub
mov
xor
xchg
mov
and
enter
or
rcl
mov
mov
dec
test
test
jmp
sbb
test
xor
dec
inc
lods
dec
dec
jnp
fs
mov
aam
int
out
inc
pop
shl
jb
ret
dec
sub
jecxz
mov
xchg
fcom
sub
add
test
mov
lea
pusha
fdivr
mov
inc
adc
in
fld
sub
sbb
dec
xor
mov
push
data16
ja
push
std
add
mov
ins
sbb
loopne
fiadd
cmp
cmp
mov
std
inc
jo
adc
xor
movs
ss
dec
jecxz
mov
ins
aaa
outs
mov
iret
enter
int3
addr16
mov
xor
and
sbb
stc
aaa
mov
mov
cmp
test
push
aad
out
mov
aad
cdq
mov
ins
mov
push
ja
cli
jl
adc
mov
rcr
xor
gs
lahf
std
ds
cmp
pusha
mov
mov
in
js
mov
into
popf
sub
xchg
dec
mov
jmp
dec
mov
xor
mov
or
int3
cmc
(bad)
inc
xchg
jo
mov
or
mov
mov
sahf
js
pop
sub
nop
sbb
cmp
lea
mov
mov
add
sbb
lahf
inc
pushf
jns
dec
test
mov
cmp
cmp
mov
push
adc
data16
movs
cmp
out
ins
pop
push
adc
fstp
adc
pusha
test
ret
cs
mov
mov
sahf
mov
test
fild
leave
mov
and
adc
xchg
jp
sahf
jmp
mov
repz
loop
push
test
mov
test
inc
js
das
jmp
ins
call
das
(bad)
jae
dec
(bad)
fisub
sub
mov
xchg
iret
xchg
cmp
mov
push
iret
dec
and
mov
mov
mov
lods
add
jae
je
cmp
mov
stos
mov
fdivr
or
xchg
push
cmc
scas
adc
add
mov
jmp
dec
out
(bad)
cmp
(bad)
xchg
xlat
aad
test
(bad)
stos
retf
pushf
jae
adc
jno
out
lea
dec
jbe
push
xlat
mov
int3
sub
mov
imul
outs
pop
push
(bad)
pop
outs
push
retf
lock
and
cmp
jp
test
scas
scas
adc
xchg
(bad)
dec
xchg
xchg
and
lds
ret
add
pop
xor
mov
dec
xor
out
in
sbb
xor
outs
sar
pop
mov
cmp
sbb
(bad)
sub
stos
lds
test
enter
es
xor
jne
jns
sub
jnp
pop
adc
dec
pop
jne
lock
mov
and
js
and
and
fisttp
mov
loope
or
nop
ins
push
popa
ds
cmp
mov
pop
sub
pop
jo
and
fs
dec
lea
iret
ror
mov
or
mov
pop
xor
clc
movs
cli
test
pushf
stos
mov
test
icebp
rcr
ror
add
xchg
inc
shl
add
mov
(bad)
std
pop
ret
sub
jmp
cmc
mov
and
in
shl
call
xchg
or
dec
je
test
sub
push
dec
imul
les
imul
mov
add
add
mov
sahf
test
xchg
popf
inc
jl
outs
xlat
test
lea
xchg
jae
imul
mov
xchg
mov
(bad)
movs
sub
fisubr
mov
pop
cs
mov
sar
xchg
jno
sbb
lods
sub
sub
sahf
sub
mov
loope
push
cmc
mov
pop
lods
pop
pop
pop
pop
out
xchg
add
sub
and
loope
adc
mov
clc
call
repnz
xchg
stos
mov
(bad)
(bad)
cmp
push
push
lods
or
fwait
xlat
push
shl
pop
cmc
call
dec
mov
mov
or
icebp
jg
in
jp
add
out
fdivrp
mov
mov
mov
sub
adc
pushf
xchg
pop
or
js
fmul
inc
es
lods
mov
hlt
loop
and
pop
inc
dec
mov
mov
test
out
sub
mov
je
cmps
js
dec
mov
jl
sbb
into
loop
pusha
xchg
mov
xchg
es
jne
icebp
mov
or
mov
mov
xchg
push
sbb
ja
add
lahf
push
rol
call
lods
outs
pop
jne
(bad)
in
rcl
jge
arpl
jecxz
or
sub
mov
mov
pop
mov
dec
add
mov
fwait
jbe
jno
pushf
jle
jns
mov
in
mov
stos
jns
push
sub
sbb
out
mov
sbb
shr
imul
outs
das
pusha
enter
mov
sbb
arpl
push
mov
jo
mov
das
inc
inc
xor
inc
mov
jae
enter
and
pop
inc
push
or
cmp
mov
fnsave
mov
lea
xchg
jns
dec
inc
gs
xor
mov
sbb
ins
jp
xchg
jp
shl
out
mov
or
add
ds
xchg
pusha
ja
jne
fbstp
loope
push
or
xor
cwde
mov
mov
push
push
ins
lods
xchg
ja
mov
test
xor
pusha
popa
call
sub
sbb
out
je
mov
xlat
idiv
ror
or
mov
jae
mov
outs
pop
push
jae
push
mov
cmp
clc
test
push
xchg
push
mul
xchg
sub
das
pop
mov
test
and
xchg
cli
cli
mov
inc
(bad)
push
vxorps
dec
sub
sub
lock
ja
cmps
jb
jb
jmp
fdivr
push
add
retf
aad
test
mov
jecxz
dec
adc
sahf
mov
xchg
pop
shl
pop
das
xor
repnz
mov
or
xchg
div
add
xlat
xchg
dec
fs
cmp
fldenv
fs
cmp
jmp
mov
jnp
jge
rol
inc
fucomp
lahf
xchg
rcr
popf
mov
pop
pop
or
sbb
rcl
mov
enter
aaa
(bad)
xlat
sub
iret
xor
jg
leave
fldenv
mov
dec
nop
ins
lods
or
out
out
(bad)
jno
fisttp
xor
fidiv
push
retf
(bad)
push
inc
in
adc
cmp
add
xchg
jns
xchg
mov
mov
ds
out
cmc
sti
mov
jmp
fist
shl
push
xor
xchg
popf
cmp
ss
cs
jnp
ins
pop
pop
test
mov
pop
out
xchg
out
jl
ins
int
js
out
in
lds
fimul
rol
ins
fcom
mov
push
stos
mov
pop
jns
call
pop
adc
(bad)
jecxz
cwde
jmp
add
bound
push
jmp
xchg
(bad)
dec
vhsubpd
dec
pop
test
gs
lods
lahf
das
add
pop
repz
or
movs
sub
and
or
xlat
fcmovne
cmc
sbb
ja
retf
mov
push
or
sub
mov
add
dec
xlat
pop
mov
jg
pop
sub
sbb
jmp
(bad)
inc
inc
mov
leave
jp
sbb
stos
cmp
je
repz
dec
add
fst
fistp
jno
jo
ret
loopne
das
in
push
out
fistp
sub
push
imul
cmp
rol
mov
in
rol
inc
nop
std
nop
pop
adc
push
lods
dec
test
jbe
ins
aad
std
pop
aad
jnp
imul
(bad)
mov
xor
aas
(bad)
xchg
mov
fs
arpl
jl
sbb
das
pop
stc
ret
or
xlat
outs
dec
xchg
add
lock
sub
cli
cli
test
pop
int
test
test
jns
sub
fcmovb
call
daa
(bad)
loop
mov
not
arpl
(bad)
push
push
sar
add
(bad)
cmps
out
mov
aad
iret
je
add
push
inc
push
(bad)
dec
loopne
mov
(bad)
out
pop
inc
push
loope
xchg
fwait
leave
sbb
jo
mov
xchg
out
ins
scas
mov
or
push
pop
pop
adc
nop
cmp
(bad)
adc
pop
cmp
sbb
dec
test
xchg
cmps
mov
cmps
sub
mov
push
pop
and
xor
stos
int3
pop
push
int
stos
addr16
mov
(bad)
jl
add
fldl2t
xor
and
int
aaa
inc
and
add
or
jle
push
inc
imul
push
fdiv
adc
popf
imul
inc
outs
int
popf
ret
fcomp
aaa
sahf
xlat
adc
or
push
or
cdq
xchg
xchg
lea
dec
sbb
fldcw
jns
(bad)
shl
jnp
xchg
dec
jo
mov
mov
xchg
pusha
mov
mov
sub
retf
xor
sti
mov
dec
scas
daa
adc
lods
add
or
dec
jbe
pop
pop
mov
xor
jmp
aad
shl
call
scas
int
or
push
cld
pop
add
jecxz
xchg
fisubr
mov
or
sub
data16
pop
cmp
push
in
dec
pop
cli
ds
outs
mov
mov
dec
mov
and
cld
fstp
js
or
cs
lahf
xor
inc
shl
sub
pop
jno
ficom
(bad)
lock
adc
(bad)
rcl
fcomp
or
in
sub
in
(bad)
dec
daa
test
test
aam
ss
ins
mov
add
jle
inc
(bad)
nop
es
sub
and
push
pop
jp
sbb
jno
int
into
mov
push
lods
cmps
sahf
adc
jmp
loopne
xchg
fstp
jle
int3
test
int
lock
pop
nop
pop
fcomp
push
and
je
ins
mov
mov
xchg
mov
test
mov
jle
(bad)
jge
icebp
inc
mov
push
call
shl
mov
or
xchg
pop
in
out
push
daa
lods
pop
stos
movs
loopne
cmp
(bad)
pop
jo
adc
cld
outs
pop
xchg
pop
jo
out
or
daa
stos
and
adc
iret
loop
dec
mov
sub
stc
xor
xor
xchg
or
and
popf
mov
pop
loope
push
jl
mov
fldl2t
dec
push
je
push
fisub
jle
gs
mov
inc
mov
ss
aas
repnz
outs
movs
int
mov
addr16
or
mov
push
or
and
in
lahf
sub
pop
mov
cs
xchg
outs
adc
es
call
cmp
stos
jmp
xchg
dec
jnp
jmp
nop
push
daa
and
mov
sbb
jge
out
setns
xchg
stos
fisub
ja
mov
js
cmp
cdq
push
mov
inc
push
mov
sub
sbb
dec
xor
pop
inc
test
push
pop
adc
or
or
adc
jg
xchg
es
dec
int3
mov
in
adc
(bad)
fild
inc
xor
push
pop
data16
jp
add
inc
jns
xchg
mov
inc
push
imul
(bad)
popf
push
pop
push
xchg
iret
adc
pop
outs
dec
pop
sbb
jnp
stos
pushf
xchg
inc
jecxz
mov
xchg
xchg
sbb
jge
mov
inc
jne
fs
pop
rol
xchg
ins
clc
(bad)
js
sub
cmp
popf
aad
ins
sub
inc
dec
sub
or
pop
rcl
fwait
int
cwde
aas
xchg
mov
pop
adc
dec
jp
aas
mov
push
mov
cmc
in
ins
ins
jno
dec
push
icebp
ss
add
xor
inc
jns
lods
dec
sub
lea
fstp
clc
adc
inc
and
data16
jecxz
dec
pop
pop
mov
dec
sbb
setge
push
sahf
out
cmp
sbb
xchg
inc
and
mov
mov
jo
stos
jg
into
pop
xor
(bad)
lahf
das
imul
fucomi
loope
cwde
cmp
movs
fstp
cmp
pop
dec
xchg
ins
adc
lods
je
and
out
xchg
and
sub
jne
jbe
sbb
mov
xchg
jecxz
jne
aas
sub
xor
xor
sbb
pop
mov
mov
xchg
mov
addr16
xor
push
sahf
add
ja
ja
movs
call
scas
lock
movs
push
jg
mov
fdivr
and
xchg
jo
add
retf
push
into
pop
outs
inc
sbb
loopne
xchg
xor
jno
and
xchg
push
outs
xchg
xor
pop
dec
in
xor
sbb
push
push
enter
mov
adc
add
out
pop
adc
dec
leave
or
and
sti
add
daa
inc
fwait
(bad)
repz
mov
or
je
pop
loope
dec
loopne
icebp
sti
hlt
lods
add
mov
out
xor
jg
pushf
mov
pop
add
mov
nop
mov
aas
or
inc
sti
jg
adc
push
mov
loopne
mov
jge
xchg
in
mov
mov
fsqrt
int
inc
or
or
or
sbb
int
sub
leave
cmp
gs
dec
mov
in
nop
iret
loope
sbb
mov
ret
mov
fmul
scas
shr
mov
add
rcl
jle
pusha
mov
sbb
mov
mov
jl
fisttp
or
mov
jmp
mov
add
sar
inc
xchg
call
(bad)
jecxz
stos
iret
xor
sti
test
sbb
dec
fisttp
jp
push
inc
imul
push
ins
int
push
mov
mov
xchg
sbb
fbld
scas
push
adc
test
adc
in
mov
mov
cdq
out
fld
jge
out
pop
inc
mov
scas
mov
jne
pop
test
push
xchg
inc
sub
(bad)
outs
int
xchg
mov
xchg
pop
in
fbld
pop
pop
mov
aas
mov
addr16
sub
inc
inc
fnstenv
xor
adc
xor
mov
jnp
sbb
test
or
fstp
fcomp
cmp
aam
xchg
fwait
and
sbb
xchg
sub
jle
test
in
in
rep
test
jp
pop
jecxz
inc
jns
sar
loope
arpl
sbb
lock
and
mov
sbb
mov
popf
call
gs
fwait
lods
in
fmul
push
sahf
ror
cdq
out
or
cmp
test
mov
(bad)
sbb
pop
test
and
popa
push
sub
add
mov
fiadd
sti
repnz
inc
mov
mov
pop
imul
adc
popf
mov
pop
jne
jbe
xor
mov
pop
jle
mov
inc
das
pop
and
and
fadd
push
jns
jns
sbb
hlt
xchg
dec
shr
adc
imul
sub
fs
loop
push
into
rol
mov
and
shl
pop
nop
adc
dec
xchg
in
and
push
or
mov
or
not
cmps
int3
and
hlt
(bad)
cmp
push
xlat
sahf
mov
jbe
mov
xchg
inc
xor
lds
or
jmp
bound
mov
xchg
inc
adc
cmp
mov
pop
jmp
jmp
mov
cs
shl
mov
scas
call
stc
sub
push
(bad)
or
push
mov
pop
add
pusha
pop
int
es
and
fiadd
addr16
xchg
cmp
cmp
loopne
retf
cmp
push
inc
leave
out
lock
repnz
sub
test
mov
sbb
std
xchg
xchg
mov
xor
movs
aad
cmps
inc
add
push
mov
addr16
ins
jne
mov
xor
retf
cli
shr
sbb
or
jl
jg
movs
mov
or
enter
push
fnop
scas
sbb
push
jle
stc
(bad)
pop
clc
mov
add
outs
push
xchg
and
and
ror
xor
adc
das
test
repz
xchg
add
lock
(bad)
neg
mov
jo
movs
adc
sbb
clc
pop
aad
sti
add
xchg
jg
push
mov
sub
popa
in
in
push
push
add
push
jae
fstcw
pop
add
addr16
mov
xchg
mov
outs
dec
ins
mov
mov
dec
imul
jbe
shl
fs
ret
or
addr16
je
fld
xor
mov
cmp
jp
and
loope
and
test
dec
retf
dec
in
mov
fimul
xor
jne
(bad)
adc
outs
or
jb
cmp
sub
repz
(bad)
mov
test
pop
cld
and
sbb
(bad)
aam
nop
das
sahf
jbe
cmp
xchg
add
adc
cmp
pusha
cmc
sub
das
(bad)
mov
xchg
and
jmp
push
push
jo
inc
movs
pushf
jne
int
es
jbe
loopne
or
gs
popa
jmp
(bad)
out
or
mov
in
ret
call
mov
mov
sbb
movs
xor
int3
std
pop
sub
loopne
cwde
iret
outs
ins
mov
loop
test
test
push
or
bound
xor
sub
shl
int3
push
xor
call
mov
xor
inc
scas
scas
je
adc
lds
or
pusha
sub
add
(bad)
outs
lea
mov
sahf
xchg
cs
xchg
test
push
mov
lock
dec
rcl
jge
mov
in
sbb
das
aad
add
mov
retf
xor
jmp
xor
sub
push
fwait
stc
pop
mov
ds
loope
iret
cld
int3
hlt
mov
and
inc
and
xchg
jne
jo
daa
dec
inc
xor
div
mov
retf
rcr
in
fwait
or
and
push
(bad)
pusha
push
xor
retf
inc
inc
call
inc
cld
std
sub
jmp
inc
cmp
fld
dec
jmp
sbb
and
pop
pop
popf
add
mov
(bad)
into
sbb
mov
ror
or
pusha
mov
push
jecxz
pop
outs
test
ret
lahf
dec
add
pop
mov
aam
pop
jecxz
xlat
wbinvd
pop
stos
(bad)
daa
popf
jno
pop
xchg
inc
pusha
adc
mov
jl
retf
pop
push
xor
(bad)
shl
sub
jb
pushf
push
sub
push
mov
loopne
mov
push
jne
jo
adc
push
and
bound
(bad)
dec
leave
test
jne
test
xor
mov
jmp
rcl
ins
icebp
sbb
inc
xchg
pop
adc
xchg
push
add
xchg
inc
xchg
popa
or
xchg
and
cmp
and
test
push
fadd
mov
xchg
adc
retf
jp
sti
and
xlat
pop
popf
mov
cmc
adc
add
call
inc
adc
jle
push
cmp
mov
ret
in
xor
xchg
out
adc
es
pop
or
sbb
into
mov
jbe
inc
out
mov
repnz
dec
lea
mov
test
sbb
out
pop
nop
loope
jmp
dec
mov
xchg
jnp
sahf
arpl
clc
call
dec
sub
sub
push
cmps
dec
xchg
test
push
sub
movs
mov
xchg
(bad)
sbb
test
cli
sar
xchg
xor
mov
(bad)
cdq
inc
xor
outs
sub
fimul
sahf
fimul
mov
shl
sbb
xor
fisubr
fdivr
xor
and
fcom
lea
mov
int3
pushfw
sbb
sbb
fcomp
add
mov
inc
jg
scas
out
jbe
mov
or
adc
push
xor
xor
(bad)
jns
xchg
jae
add
dec
bnd
(bad)
sbb
inc
scas
dec
xchg
fdivr
iret
jb
jbe
or
imul
test
ss
mov
lock
adc
sbb
xchg
ds
cdq
fstp
adc
fcmovu
sbb
pop
xchg
je
add
(bad)
jmp
in
cmp
sub
sub
sub
repz
das
js
(bad)
ins
nop
aam
ins
fbstp
test
inc
adc
rcl
mov
or
mov
movs
xor
push
data16
retf
mul
cmp
adc
pop
mov
pop
push
xor
jmp
adc
cmp
lea
push
imul
xor
push
cmp
xor
mov
lock
mov
outs
and
addr16
pop
out
pop
test
and
sahf
fwait
outs
jg
push
leave
lea
lods
ins
pop
and
test
push
sbb
cmp
in
jge
jmp
push
movs
or
ss
ins
adc
xchg
jno
inc
out
mov
inc
sbb
xor
in
jb
xchg
pusha
sub
push
lods
xchg
outs
ss
xchg
push
dec
iretw
(bad)
sub
pusha
push
shl
bound
test
push
data16
mov
ja
sbb
mov
es
fadd
les
jmp
jo
retf
sub
gs
jg
test
mov
movs
lods
push
dec
(bad)
rol
(bad)
push
inc
xchg
and
dec
or
inc
or
lds
mov
outs
scas
push
push
inc
jmp
cmp
movs
sub
pop
icebp
inc
dec
sbb
mov
jnp
lea
repnz
icebp
cdq
and
out
cmp
add
push
mov
adc
out
adc
push
cmp
mov
inc
xchg
mov
retf
mov
add
inc
iret
adc
dec
arpl
inc
jle
push
sti
sbb
mov
adc
(bad)
fldenv
test
sbb
(bad)
aad
lea
xor
in
or
push
lahf
add
loopne
lahf
xchg
lods
fdivr
mov
stos
aaa
(bad)
adc
add
xchg
into
mov
adc
enter
xchg
sbb
xor
adc
dec
dec
push
mov
xchg
sahf
into
mov
icebp
in
push
or
stc
add
dec
ror
stc
sub
sbb
add
sbb
pop
inc
repnz
mov
js
push
jl
int
xchg
rcl
jg
loope
xchg
adc
fiadd
mov
int3
fisttp
dec
loope
xchg
and
mov
mov
or
adc
push
call
lods
cs
jge
sbb
adc
mov
in
faddp
(bad)
xor
movsx
pushf
push
sub
xchg
lahf
xor
in
push
inc
fld
stos
out
loop
and
inc
pop
test
jecxz
jne
ins
jb
sub
and
xchg
sbb
sub
pop
cwde
arpl
jae
call
inc
into
push
ficom
loope
shl
xchg
(bad)
ins
je
fabs
ss
clc
cld
push
in
(bad)
(bad)
aad
mov
jp
inc
fst
push
retf
cmp
test
repz
dec
pop
fsubr
mov
pop
jns
adc
mov
inc
ret
push
rcl
stc
cmps
jnp
sbb
aas
push
mov
xor
cmc
loope
sbb
int3
cmc
pop
mov
lock
dec
jo
mov
xor
jo
inc
adc
mov
push
jp
ret
jno
push
mov
test
xchg
cwde
pop
fs
test
add
mov
int
gs
mov
pop
push
push
pop
outs
inc
and
pop
jbe
mov
out
jle
int3
shl
es
je
add
jmp
mov
scas
mov
push
jbe
call
sbb
adc
mov
jp
sbb
and
cmp
int
inc
(bad)
pushf
(bad)
nop
push
enter
std
pushf
sub
cmps
adc
add
and
mov
push
sbb
dec
inc
or
ss
and
sahf
out
sbb
add
int3
or
mov
in
lock
cmps
out
add
inc
and
imul
pop
mov
call
dec
ja
xchg
ds
in
mov
push
push
rcr
pop
push
test
ins
or
outs
call
stc
test
(bad)
das
add
popf
inc
cli
in
xchg
mov
jle
les
dec
fwait
sbb
cmp
or
aaa
push
lods
outs
or
push
nop
das
repz
cmp
mov
sar
movs
mov
loope
(bad)
test
inc
pop
xchg
sar
cmps
mov
push
cdq
adc
jne
js
inc
inc
cwde
pop
inc
lods
iret
mov
ret
in
or
dec
inc
sahf
mov
fmul
stos
mov
popf
fidivr
mov
gs
retf
or
(bad)
fcomi
repz
retf
cdq
aas
mov
inc
sti
xor
mov
sahf
sbb
(bad)
in
push
cmp
retf
mov
popf
jge
popf
lods
cs
popf
test
adc
xchg
pop
add
mov
imul
outs
and
(bad)
dec
cmc
loop
mov
xchg
gs
popf
int3
inc
mov
jl
in
and
cld
sub
add
into
addr16
or
or
or
pop
mov
mov
and
(bad)
dec
sbb
or
stos
ret
and
js
ret
xchg
mov
push
outs
loopne
push
xlat
xchg
adc
cmp
imul
inc
pushf
stos
loopne
dec
iret
xlat
into
(bad)
ss
into
pop
sub
and
int3
fstp
rol
mov
or
mov
jle
push
push
sahf
jecxz
leave
addr16
popa
and
and
push
pop
lahf
sbb
popf
or
aas
jnp
add
xchg
xchg
nop
inc
dec
sub
sub
std
mov
and
xchg
mov
fidivr
nop
cwde
push
fbld
mov
icebp
das
cmp
add
jmp
jge
out
jo
inc
push
sub
mov
xchg
push
sbb
pop
xchg
add
push
mov
aaa
dec
je
mov
xchg
call
dec
and
mov
mov
dec
shl
imul
and
cmp
pop
pop
sbb
xor
inc
and
sbb
pop
and
jmp
add
jg
mov
sub
mov
sub
inc
pushf
in
add
sub
or
adc
in
jae
mov
xchg
mov
mov
mov
add
push
jbe
repnz
scas
push
test
xchg
nop
mov
dec
jnp
lahf
xchg
popf
cmp
or
sbb
jbe
enter
stos
jne
sbb
enter
jae
mov
inc
out
cmps
adc
and
je
push
shr
imul
dec
nop
mov
jmp
sub
pop
fs
fscale
jg
fst
or
fldenv
pushf
arpl
sbb
lea
xor
hlt
out
lea
sub
sub
jno
xchg
fs
fmul
or
cmp
cmp
inc
ret
pop
mov
test
xchg
dec
push
push
jge
push
inc
cmp
pop
adc
(bad)
(bad)
mov
std
pop
addr16
movs
call
sahf
or
jae
mov
in
dec
dec
lods
movs
mov
cdq
jae
sub
mov
pusha
enter
adc
sbb
rol
jecxz
sbb
stos
xlat
imul
imul
push
push
add
(bad)
hlt
aad
push
mov
dec
sub
popf
repz
ins
sbb
scas
mov
push
mov
xchg
mov
cmp
xchg
jnp
test
adc
or
xchg
cmp
pop
rcl
ret
test
loopne
(bad)
lahf
mov
inc
and
(bad)
mov
popa
push
lods
xchg
mov
fxch
enter
lds
loopne
outs
iret
cdq
xor
mov
jns
jle
stos
cmc
imul
sub
int3
fmulp
inc
xchg
lods
jge
add
shl
pop
sar
into
mov
jo
mov
js
cs
sub
paddusb
mov
cmc
mov
ret
xchg
cdq
pop
mov
sbb
sbb
bound
mov
dec
je
add
push
outs
loopne
xchg
fidiv
hlt
fwait
adc
movs
pop
sar
sub
cmc
retf
cmp
pop
jb
or
das
sbb
arpl
sbb
jbe
mov
xchg
stos
rcl
sahf
test
mov
cmp
adc
pop
mov
mov
jmp
xor
mov
and
mov
icebp
fild
add
jnp
mov
out
jmp
pushf
inc
add
je
sub
test
daa
adc
les
(bad)
sub
pop
mov
sbb
es
xchg
mov
sub
je
xchg
test
outs
xor
push
pushf
shl
fcomp
jg
push
push
adc
test
mov
mov
imul
ins
mov
dec
inc
and
mov
clc
or
movs
mov
add
fdiv
cmps
out
jne
in
sbb
cli
pop
add
clc
sub
sub
pop
mov
pushf
jns
cmps
mov
and
and
and
mov
repz
(bad)
movs
or
stos
repz
cmc
mov
int
sahf
aam
int3
sbb
addr16
dec
jne
and
cmps
mov
cld
sub
mov
pushf
sub
bnd
cld
push
mov
cmps
mov
xchg
test
mov
rcr
sbb
call
(bad)
imul
mov
movlhps
xchg
(bad)
mov
inc
in
xor
in
movs
xchg
or
push
jb
xchg
sbb
popf
fprem
xchg
mov
retf
rol
mov
push
inc
push
inc
fldenv
adc
cmp
push
mov
push
out
scas
jb
nop
gs
jl
xor
frstor
push
lea
sbb
stc
pushf
inc
and
fcom
sbb
aas
rol
push
cmps
jne
pop
jg
ins
pop
or
inc
add
jnp
push
daa
add
xor
mov
sub
mov
inc
jmp
xor
add
int3
fmul
scas
cdq
sbb
add
mov
aad
or
(bad)
push
xchg
movs
inc
mov
jne
imul
mov
ins
jnp
push
or
jge
and
dec
mov
mov
movs
add
push
imul
mov
xor
adc
or
test
inc
loopne
inc
aaa
mov
xlat
adc
fcom
iret
scas
stos
mov
push
or
stos
mov
push
loope
sbb
and
cmp
cs
mov
adc
lahf
shl
and
ret
cld
cmp
mov
push
sti
adc
mov
(bad)
cwde
leave
ror
sub
das
cmp
mov
xor
lahf
adc
in
jo
inc
sub
pusha
outs
cmps
or
(bad)
neg
jg
add
iret
hlt
xchg
dec
cdq
push
stc
push
and
sbb
jge
or
movs
mov
imul
das
push
cmc
hlt
and
shl
icebp
sbb
pushf
scas
jecxz
aas
mov
loopne
ret
sbb
sub
mov
sbb
mov
or
shl
xor
pop
jb
jp
mov
aad
pop
cmp
fldcw
dec
push
push
nop
dec
inc
call
mov
jp
int
in
data16
dec
pop
cmp
mov
mov
xor
cmp
inc
sub
sub
fldcw
data16
aam
lea
dec
ror
mov
jns
inc
mov
pop
gs
pusha
or
popa
push
pop
push
movs
int
shl
jbe
imul
adc
sub
stos
pop
test
pop
imul
jle
and
pusha
repz
or
mov
je
adc
daa
push
mov
sbb
popf
cmp
cmps
mov
sub
out
jne
inc
xor
(bad)
xchg
in
mov
jae
scas
add
ins
neg
mov
fucomi
or
enter
xor
mov
dec
jnp
rcr
cmp
retf
call
aas
mov
mov
push
leave
fwait
mov
mov
stos
test
lea
mov
or
ss
repz
mov
jno
ins
xor
addr16
iret
cwde
ss
push
loopne
ds
jg
gs
and
sar
sub
dec
mov
movs
inc
sahf
and
fiadd
jb
hlt
add
mov
test
test
cmps
xor
pushf
shl
mov
imul
cmp
jge
div
mov
dec
adc
lahf
addr16
xchg
lods
pop
ret
lods
sbb
jnp
clc
jb
mov
arpl
test
mov
mov
lods
or
xchg
(bad)
cmp
pop
int
in
or
and
pop
mov
mov
stos
push
and
nop
jb
xchg
push
outs
gs
xor
int3
arpl
int3
add
pop
sub
mov
sbb
mov
mov
jbe
mov
push
xor
mov
dec
bound
xchg
loop
add
and
fimul
pop
or
stos
inc
js
scas
into
sahf
push
scas
mov
adc
mov
cmp
dec
pop
sub
mov
nop
cmp
or
dec
fist
adc
fcom
movs
cdq
or
lods
push
ret
ja
movs
(bad)
xor
jmp
jbe
pushf
sub
push
loop
enter
mov
ret
(bad)
cmp
push
or
and
mov
mov
loopne
or
add
sub
sar
xchg
loopne
gs
cmp
adc
test
pusha
enter
lock
movs
imul
ins
je
scas
lds
icebp
xchg
and
or
and
out
xor
fldenv
test
xor
fcmovu
dec
lods
pop
mov
out
add
push
iret
fs
clc
push
imul
gs
pop
inc
mov
pop
xor
jno
jb
stos
addr16
loop
jno
sbb
int3
ss
loope
cmp
add
(bad)
dec
xor
mov
sub
mov
sbb
lods
fiadd
cli
in
das
sti
cdq
ror
xchg
xlat
test
xchg
jge
lea
pop
sub
or
push
enter
mov
shr
xor
mov
lea
inc
(bad)
stc
sbb
sbb
mov
sub
mov
repnz
mov
out
gs
imul
mov
add
fwait
movs
mul
mov
pop
jle
shl
adc
in
and
scas
xchg
push
lods
or
dec
adc
mov
mov
lock
pop
mov
aas
push
mov
out
ret
in
leave
inc
push
xchg
retf
cmp
ins
mov
lods
pop
std
mov
test
das
pop
pop
fdiv
loopne
ret
push
lds
or
mov
aaa
xchg
popa
into
cmp
jnp
lea
dec
jg
cs
fist
xchg
lock
add
adc
jnp
idiv
sbb
push
loopne
push
ins
dec
bound
jne
retf
rol
scas
mov
adc
push
mov
jne
xchg
cmp
popf
aad
and
or
xchg
and
fs
mov
scas
ror
sub
aas
out
lea
mov
inc
jno
and
cld
push
ins
jge
repnz
imul
dec
mov
mov
mov
jg
dec
fdivr
data16
xor
mov
pop
adc
mov
outs
mov
xchg
inc
out
add
inc
and
(bad)
pop
push
and
pop
out
and
push
adc
cmp
dec
sub
mov
jl
loopne
int
sub
adc
lea
sar
out
sbb
lods
sub
jp
pop
das
daa
sbb
mov
scas
ja
cdq
pop
cmp
mov
cmc
xor
bound
sub
jg
xor
je
and
es
ds
dec
(bad)
push
xchg
mov
dec
and
xor
xlat
push
fild
(bad)
lds
jmp
push
mov
jp
sbb
(bad)
movs
sub
daa
jbe
aas
jl
inc
jecxz
xor
pop
into
sub
aam
mov
jecxz
fisttp
inc
addr16
ss
retf
adc
lahf
pusha
out
or
adc
push
jecxz
push
xor
stos
enter
scas
fs
mov
mov
dec
pop
cwde
or
into
(bad)
lock
aas
jp
int3
mov
daa
lahf
adc
mov
pop
pushf
xchg
xchg
jl
nop
push
add
adc
jns
imul
add
mov
jge
imul
cmp
sub
sbb
push
xchg
(bad)
aad
repnz
gs
inc
xchg
in
scas
jbe
xor
mov
mov
mov
out
jmp
outs
cdq
and
mov
js
mul
pushf
pusha
cmp
cdq
aas
dec
into
xor
sbb
or
dec
mov
mov
inc
and
out
adc
aaa
xor
shl
rcl
ror
aaa
pop
cmp
pushf
xlat
in
add
mov
pop
cmp
mov
iret
inc
mov
xor
inc
xchg
jmp
test
out
stos
sbb
mov
mov
int
xlat
loop
inc
jae
xchg
scas
pushf
mov
jo
xor
jbe
movs
std
leave
addr16
mov
jns
mov
cmp
lock
cld
inc
add
ins
sub
loope
pop
ins
mov
inc
cs
sub
mov
ins
pop
sahf
push
mov
push
fwait
and
pop
daa
(bad)
scas
jg
ja
shr
dec
jmp
ss
stc
xor
push
sub
dec
xchg
jmp
inc
dec
jge
sub
add
xchg
frstor
sub
mov
xchg
push
cmp
daa
and
lea
test
jno
ret
les
xchg
mov
outs
iret
add
jns
das
jmp
jg
or
gs
enter
mov
dec
inc
mov
ret
push
ror
mov
call
sbb
cmp
lods
test
mov
je
lock
mov
stc
lods
inc
shr
push
push
gs
sub
or
or
push
clc
jg
imul
int3
shr
inc
test
mov
movs
sbb
hlt
push
sbb
frstor
add
mov
mov
in
lods
push
sbb
(bad)
or
dec
jne
call
inc
scas
sbb
mov
test
xor
cmp
ins
sub
sbb
test
clc
xor
mov
lea
xor
inc
adc
mov
push
mov
test
cpuid
inc
push
(bad)
mov
ds
js
(bad)
shl
fwait
dec
fisubr
and
push
mov
dec
jg
sub
jne
fwait
test
mov
into
mov
mov
icebp
dec
add
js
cmp
lea
push
jl
sahf
or
lahf
fdivr
mov
mov
(bad)
sbb
and
jl
sub
push
les
mov
xlat
xchg
or
daa
adc
(bad)
xor
sbb
dec
mov
dec
pusha
ret
mov
shl
cmp
call
gs
lods
repnz
jns
sbb
mov
mov
mov
xchg
test
xlat
adc
movs
and
xchg
xchg
cs
lea
mov
arpl
cmp
stos
push
cdq
jno
gs
mov
ins
jmp
fist
bound
int3
ss
ins
xor
and
(bad)
in
adc
aas
sbb
mov
or
push
loopne
(bad)
loope
das
out
sbb
shr
mov
(bad)
into
movs
mov
jbe
cmpxchg
retf
mov
(bad)
out
scas
call
int3
repnz
gs
fs
or
mov
sar
jmp
add
and
clc
jb
mov
push
adc
or
loope
sbb
and
xor
inc
inc
ja
lods
sub
iret
int
inc
pop
ja
outs
xchg
test
push
or
mov
and
jne
jl
ins
sbb
ins
ja
mov
inc
mov
aad
fist
xor
xchg
mov
sub
jo
or
add
push
pusha
mov
dec
pop
test
loop
loope
pop
lods
push
popf
popa
les
mov
mov
stc
jae
mov
or
or
xchg
sbb
cmp
mov
sbb
test
popf
adc
into
gs
test
jbe
test
pop
adc
gs
mov
and
jns
test
pop
and
sbb
pop
loop
add
push
hlt
iret
and
add
mov
or
addr16
mov
adc
imul
dec
sub
js
inc
mov
push
imul
jns
sbb
cmp
xchg
fst
jg
popf
cmp
into
sub
sbb
in
aaa
pop
sub
sub
mov
retf
rcr
scas
rcl
add
pop
test
pop
cli
sbb
and
jmp
push
lea
mov
mov
popf
mov
into
dec
jns
test
jbe
test
xchg
gs
sbb
and
xor
jne
test
xchg
sbb
arpl
imul
jns
(bad)
loope
arpl
xor
cmp
jmp
sti
or
aad
add
arpl
push
or
pop
cwde
bound
push
(bad)
fs
inc
aas
int3
mov
mov
mov
dec
mov
mov
mov
pop
rol
xchg
ja
sub
cmps
clc
add
cmp
cmps
mov
mov
mul
xchg
add
ret
loopne
mov
push
int
jo
mov
xor
test
int3
inc
(bad)
jle
push
or
popf
imul
in
sub
ret
cmps
mov
icebp
sti
cmp
mov
or
or
mov
scas
sbb
clc
sub
cmp
pop
sub
shl
pop
ins
(bad)
std
stos
scas
mov
pop
shr
push
mov
les
push
sub
mov
scas
lds
cmps
and
add
in
sahf
xor
dec
repnz
pop
inc
fadd
loope
pop
jg
pop
add
hlt
ds
(bad)
hlt
xor
stos
fcmovnb
push
cmp
fdivr
cmps
dec
pusha
(bad)
mov
fld
pusha
and
retf
sti
jb
rcr
jb
xchg
clc
lods
out
rcr
push
shl
push
or
inc
mov
push
add
jmp
test
cwde
popa
pop
push
icebp
ror
cs
jo
inc
aad
fwait
mov
into
jmp
sbb
push
fstp
test
lods
addr16
pop
mov
repz
push
ja
mov
scas
push
test
adc
inc
push
call
mov
retf
es
sbb
icebp
(bad)
fild
jo
lds
fldenv
(bad)
cdq
xlat
mov
mov
sbb
rol
(bad)
iret
ins
and
mov
je
rdmsr
mov
leave
xor
pop
daa
sbb
fs
or
cmc
sbb
push
mov
loop
(bad)
dec
jmp
mov
(bad)
in
and
(bad)
jp
loope
fwait
jge
push
arpl
mov
adc
mov
dec
stc
inc
mov
(bad)
xlat
dec
xchg
stc
nop
mov
adc
aad
lahf
jns
xchg
push
test
jo
je
sub
cmp
ss
adc
mov
pop
call
mov
imul
js
(bad)
shr
dec
outs
test
pop
mov
jl
pop
dec
mov
popf
xchg
xor
adc
mov
push
cmp
stos
mov
fisub
rol
add
xor
test
dec
mov
call
xchg
add
call
retf
in
xchg
test
xchg
inc
popa
sahf
add
rcl
inc
mov
scas
test
pop
jno
jne
popf
mov
add
mov
popf
inc
lock
pop
jg
sub
in
imul
or
jb
dec
pop
(bad)
int3
outs
mov
sub
call
jle
out
cmps
sub
call
or
pop
jno
jnp
jl
mov
sub
cmp
cmp
cmp
mov
adc
cmp
dec
pop
jp
out
je
gs
cmp
repnz
mov
pop
mov
adc
out
xchg
pushf
adc
sub
xchg
add
ins
or
fdivr
sub
cmp
pushf
pop
sub
jae
hlt
push
lock
inc
pop
xchg
mov
sar
test
xchg
xchg
inc
scas
icebp
js
(bad)
loopne
ds
rol
aad
xchg
ds
lods
test
xchg
jg
iret
xchg
rol
int
hlt
xchg
hlt
inc
dec
test
jne
mov
or
ins
xchg
pop
push
push
pop
jmp
ror
add
xor
mov
jne
imul
pop
inc
out
xchg
lds
fs
dec
xor
les
jns
fs
add
add
jmp
(bad)
sahf
mov
(bad)
neg
xchg
fdivr
fxtract
cmc
jno
enter
cmp
hlt
sar
mov
mov
xchg
dec
dec
bound
push
stc
and
aam
cdq
dec
aad
pop
inc
jl
int
pop
scas
sub
inc
mov
cmp
pop
sbb
jb
adc
fdivr
out
jge
sbb
pop
mov
js
push
xor
inc
xchg
movs
jl
ror
push
les
mov
push
outs
push
loopne
mov
xchg
cld
and
lds
mov
mov
xor
cmp
fdivr
mov
dec
pusha
xchg
cwde
push
mov
push
inc
adc
mov
mov
popf
cmp
mov
xchg
mov
dec
push
scas
std
gs
movs
aad
mov
test
sub
test
and
mov
mov
addr16
mov
loopne
cwde
hlt
or
neg
dec
add
lods
pusha
mov
fdiv
jle
add
test
mov
stc
mov
stos
movs
push
or
jo
and
mov
mov
add
rol
rcl
mov
jle
mov
ss
jo
mov
shl
(bad)
push
sub
sub
lods
xor
and
jle
aas
push
mov
sar
fild
movs
rcr
push
int
jmp
ins
dec
repz
jle
mov
or
arpl
and
xor
fld
xor
inc
inc
inc
(bad)
mov
imul
lea
xor
and
push
fstp
out
(bad)
mov
mov
cld
(bad)
fsubr
femms
cmp
mov
xor
mov
fisub
cmp
mov
mov
mov
sub
mov
stos
sbb
rol
sahf
mov
fcomp
ins
cwde
mov
inc
cmps
icebp
pop
or
cs
cmps
(bad)
inc
sub
jae
xchg
lods
sub
push
adc
xchg
push
das
shl
mov
sbb
and
je
(bad)
rcr
retf
iret
loope
js
aad
pop
or
std
jae
inc
sbb
xchg
out
xchg
mov
mov
inc
dec
xor
sub
xchg
test
(bad)
jp
loope
in
inc
jns
or
push
data16
adc
xchg
inc
cmp
rol
mov
mov
sahf
xchg
xchg
addr16
int
jp
push
xchg
push
cdq
and
repnz
movs
mov
in
ffreep
xchg
mov
and
ficom
icebp
in
mov
push
movs
icebp
std
in
xchg
inc
mov
cmp
pop
sbb
add
into
or
cs
dec
add
ins
cdq
cdq
jns
dec
in
add
mov
fld
add
in
das
mov
or
xchg
es
jne
fimul
jbe
mov
adc
cmc
ja
inc
mov
sar
lods
cmp
add
into
dec
leave
mov
sub
or
fs
lds
cmps
aam
stos
xchg
fdivr
push
shl
mov
(bad)
jne
add
imul
clc
jb
and
add
fcomp
jle
mov
je
icebp
and
fbld
mov
scas
fld
mov
test
data16
or
jmp
mov
cmp
cmp
cmps
arpl
mov
int3
push
sar
retf
in
test
or
mov
cmp
mov
jp
scas
sub
fcmovnu
std
jle
(bad)
sbb
pop
push
sahf
mov
xchg
retf
push
fldenv
jl
add
add
cmp
sbb
inc
(bad)
ficomp
mov
enter
inc
xchg
push
pushf
jl
pop
and
xchg
imul
adc
aas
inc
inc
(bad)
push
inc
jb
xchg
inc
popf
add
cdq
and
jbe
ja
loop
leave
out
pop
fwait
xlat
jl
xchg
call
ins
jbe
je
inc
mov
icebp
ret
inc
es
test
sub
out
push
test
push
mov
repnz
mov
cmp
mov
add
lahf
outs
aam
mov
(bad)
clc
ins
lahf
stos
pop
data16
sbb
dec
(bad)
setg
sar
mov
push
inc
in
(bad)
or
pushf
stos
pop
sub
dec
pop
adc
mov
outs
xchg
movs
sbb
dec
repnz
enter
push
sbb
leave
call
mov
dec
xor
shl
int
out
push
inc
mov
mov
mov
test
int
xchg
adc
sub
xor
in
out
sbb
or
pop
movs
std
out
pop
sbb
rol
into
ror
push
test
sbb
push
mov
mov
adc
sub
cmps
(bad)
dec
inc
fist
sbb
pop
dec
cmps
xor
jne
jae
xlat
fwait
xchg
jnp
test
lods
das
fs
push
push
out
enter
fiadd
xor
fiadd
mov
jmp
xchg
and
fs
dec
stc
adc
cmp
pop
push
pop
das
test
je
cmp
int
inc
aad
(bad)
xlat
nop
mov
fndisi(8087
xchg
pusha
push
push
and
jns
loopne
adc
call
mov
lea
dec
leave
add
pop
mov
push
xor
xchg
xchg
popf
or
dec
sbb
cmps
lods
js
push
jno
mov
add
and
inc
sahf
push
mov
aam
test
dec
and
inc
(bad)
scas
jo
(bad)
cmp
in
scas
and
fidiv
pop
xor
(bad)
lods
dec
push
popf
cmp
pop
fwait
ja
psubusw
clc
pop
sbb
fisub
fwait
sbb
aam
xchg
adc
push
inc
or
test
ins
gs
mov
int
adc
xor
nop
pop
repz
lock
adc
aad
push
movs
or
cli
xlat
mov
or
in
jbe
mov
inc
jp
pop
dec
mov
lea
ret
mov
push
xor
mov
mov
jb
mov
or
mov
mov
call
and
mov
push
mov
fisttp
jle
int
gs
das
cmp
jno
call
adc
cmps
fstp
xor
cmps
outs
mov
adc
mov
mov
test
inc
sti
sub
cmp
jge
fisttp
jb
adc
leave
popf
dec
mov
imul
loopne
mov
imul
adc
mov
aad
rcr
xchg
arpl
jle
scas
jbe
popa
cmp
or
mov
andps
out
popf
mov
stos
sbb
or
call
std
mov
mov
lods
nop
inc
movs
mov
sbb
in
push
retf
aad
test
into
jnp
test
sbb
popf
xlat
arpl
xchg
xchg
rol
xchg
xchg
test
or
out
test
sbb
dec
je
lahf
mov
xchg
dec
mov
cdq
cdq
sub
or
xchg
mov
mov
jle
popa
cmp
or
and
cwde
pop
fidiv
mov
push
add
dec
xchg
les
sbb
mov
repnz
adc
cmc
mov
outs
cmc
fcomi
fsub
ds
xchg
mov
sbb
pushf
or
inc
xchg
arpl
push
(bad)
push
or
xlat
dec
or
mov
std
gs
les
dec
mov
adc
and
xchg
ss
movs
mov
retf
pop
pop
scas
mov
imul
pop
xchg
or
sub
cmp
fstp
xchg
xchg
sbb
mov
nop
adc
mov
mov
dec
jae
pop
jne
imul
call
ins
scas
or
add
mov
add
(bad)
lock
(bad)
stos
icebp
scas
(bad)
test
jb
outs
jge
sti
xchg
dec
mov
dec
rcl
test
mov
xchg
mov
out
test
hlt
sahf
enter
rol
fucomp
sbb
xchg
xor
retf
ss
dec
into
pop
jo
sbb
xchg
push
add
sti
ds
add
mov
and
cmp
xchg
pushf
stc
aas
pop
arpl
out
je
das
je
pushf
les
repnz
scas
pop
push
mov
int3
sbb
xor
ins
xchg
ins
mov
cwde
push
xor
lods
(bad)
mov
sbb
inc
dec
cdq
movs
push
lods
stos
fmul
push
push
lods
push
cmc
push
push
inc
cmc
push
lds
mov
call
pop
mov
jecxz
js
imul
or
ret
jne
lods
mov
mov
sbb
rcl
or
ins
cmps
mov
push
jae
push
fcomi
cmp
retf
jo
mov
(bad)
mov
loop
xchg
dec
movs
outs
add
xchg
cmps
pop
cmc
mov
push
cmp
repz
nop
dec
add
rcr
dec
pop
mov
push
mov
pop
jle
imul
xchg
dec
int3
fmul
dec
ret
xchg
push
jmp
push
out
ror
idiv
jae
mov
je
shr
mov
push
fnstenv
data16
clc
and
fstp
inc
dec
ins
ss
mov
fnstsw
inc
fiadd
mov
shl
jae
lea
into
test
test
push
pop
movs
adc
inc
mov
sub
jns
pop
dec
xor
pop
push
pop
enter
sbb
loopne
push
loopne
(bad)
mov
inc
shl
xchg
xchg
test
xchg
int3
adc
cmp
push
mov
popf
jb
xor
cdq
jne
into
outs
xchg
push
inc
or
movs
retf
cmp
adc
dec
hlt
lahf
cmp
(bad)
hlt
mov
xchg
test
enter
frstor
xchg
and
sub
mov
jl
and
arpl
push
arpl
lea
mov
xor
adc
out
and
push
bound
sahf
sub
sub
test
ins
xor
xor
and
mov
and
mov
je
rcl
outs
mov
ja
sahf
mov
in
mov
sahf
test
movs
gs
rcr
inc
push
(bad)
xchg
jne
ret
inc
nop
arpl
gs
push
push
pop
jae
push
adc
add
xchg
mov
shl
push
cld
in
adc
sahf
sbb
jmp
test
push
icebp
adc
inc
sbb
mov
pusha
add
push
imul
xchg
mov
push
gs
test
popa
imul
xor
sub
pop
lods
mov
ds
push
pushf
xor
je
jge
ss
je
test
enter
loop
mov
mov
bnd
shl
dec
mov
cmp
loope
jl
lods
lock
push
les
sar
sbb
ins
dec
mov
shl
xor
imul
les
sub
sahf
gs
push
fsubr
stc
xor
dec
test
scas
dec
mov
xchg
or
sahf
mov
stos
das
mov
sbb
jmp
push
sub
sahf
and
pushf
ins
rcl
aad
(bad)
sahf
xlat
iret
or
loope
xor
xor
aam
mov
cmp
je
mov
xchg
ror
jns
mov
xchg
jle
and
push
sub
fld
sbb
sub
scas
inc
dec
sar
sub
or
sar
cmps
bound
inc
cld
shl
imul
pop
mov
mov
jo
ins
mov
inc
shl
adc
dec
or
int3
movs
push
icebp
and
cmps
dec
lea
lahf
adc
sar
push
mov
or
fmul
pop
dec
jno
aas
dec
add
mov
cmp
inc
lods
shr
cmp
imul
mov
sbb
adc
jns
and
test
or
pushf
cmp
das
mov
jge
(bad)
cmp
xor
repz
dec
in
ins
xchg
jo
pop
jge
push
xchg
arpl
jae
adc
aam
xchg
imul
div
stos
test
test
pop
icebp
inc
adc
xor
push
fcom
lods
jecxz
mov
mov
movs
mov
cdq
push
repnz
mov
mov
mov
rcl
pushf
gs
imul
pushf
sbb
mov
aad
mov
and
mov
jo
xor
cmps
push
inc
popa
mov
xchg
xor
xchg
pop
cmp
cmps
sti
pop
pushf
arpl
(bad)
or
jo
stos
out
push
mov
cmp
pop
add
pop
mov
xchg
dec
pusha
jo
mov
xor
(bad)
setno
mov
fucom
add
mov
push
push
and
ret
iret
sbb
rcr
or
data16
movs
sbb
jle
retf
mov
inc
test
and
cmp
jae
test
push
pop
call
pushf
fwait
loope
mov
stos
xlat
mov
xchg
in
fadd
pop
popf
imul
adc
imul
xchg
or
out
mov
mov
popa
jns
lods
mov
inc
rcr
adc
dec
(bad)
int3
shl
gs
fdiv
shr
sbb
nop
stos
jns
lds
cmp
adc
mov
popf
jbe
cmp
add
jo
jecxz
stos
fisttp
xchg
retf
sahf
cmp
mov
sar
sbb
out
xchg
mov
lea
stc
push
in
adc
fscale
fild
arpl
das
aaa
pop
adc
int3
cld
jmp
adc
nop
jnp
(bad)
clc
push
xchg
out
cmp
hlt
mov
ror
push
mov
jg
xor
icebp
xchg
mov
or
je
and
xchg
and
loopne
mov
sbb
xchg
je
into
imul
into
add
mov
in
xchg
jae
xor
mov
es
shl
adc
clc
fbstp
imul
call
pop
popf
jmp
or
mov
add
xchg
mov
pop
xor
cmps
or
mov
inc
pop
int
ins
pop
mov
or
aaa
ins
jae
je
stos
xchg
je
hlt
push
pop
or
ins
push
xor
dec
adc
fnsave
add
out
lods
xchg
pop
int
fadd
not
scas
cmp
cmp
mov
inc
cld
fwait
sub
mov
lods
sbb
pop
ins
or
jl
add
cmp
jg
int
cmp
pushw
cwde
and
popa
jp
push
popa
scas
push
int
movs
mov
mov
push
pusha
sub
int3
jno
movs
jbe
scas
sub
adc
ins
pop
fisttp
ins
dec
les
test
or
mov
mov
mov
pop
retf
inc
push
outs
ror
cs
sub
push
cmp
cmp
adc
mov
jmp
cmp
cmc
fld
mov
or
cmp
xchg
mov
and
xchg
(bad)
adc
idiv
ret
imul
scas
push
mov
mov
mov
pusha
cmp
call
(bad)
jbe
ficomp
les
neg
inc
xor
and
push
dec
adc
and
data16
pop
(bad)
mov
imul
or
test
jl
pushf
das
hlt
xchg
jl
pop
inc
fwait
pop
jg
sbb
mov
xchg
fld
fst
imul
xchg
cmps
jecxz
pop
shl
mov
sbb
mov
mov
xchg
pop
cdq
div
(bad)
ds
xor
scas
dec
(bad)
test
ins
inc
jae
movs
cs
dec
mov
imul
lea
retf
leave
and
add
arpl
call
lahf
pop
ds
jae
xchg
sbb
mov
xchg
inc
mov
out
(bad)
push
cdq
dec
loopne
mov
out
sbb
sti
mov
or
mov
bound
dec
int
jmp
test
jmp
loopne
popa
push
fcomp
test
jl
push
inc
out
pushf
in
mov
scas
push
add
mov
cld
jo
jno
leave
dec
lea
and
test
and
cmp
pusha
(bad)
ds
jno
movs
mov
jns
dec
ret
ins
push
test
xor
fild
and
xchg
mov
(bad)
mov
outs
cmp
sahf
popf
cdq
(bad)
xor
or
xchg
fs
dec
stos
xor
mov
out
mov
push
adc
mov
xor
mov
iret
mov
imul
xchg
cmc
mov
int
xchg
xchg
xor
push
sar
xchg
xchg
and
(bad)
rol
jnp
or
out
stos
jne
mov
daa
sahf
std
pushf
sub
ins
dec
ret
mov
or
(bad)
out
pop
lods
sub
sysret
int3
pop
push
xchg
inc
cmps
mov
aam
xor
cs
mov
jnp
lock
in
fadd
dec
fs
into
adc
sub
rcl
imul
xchg
push
pop
test
loopne
mov
int
xor
sub
adc
xor
xor
mov
pop
or
aas
mov
jno
pushf
dec
cwde
js
inc
pushf
xlat
fsub
loopne
hlt
dec
movs
mov
dec
jbe
lods
adc
(bad)
rcr
adc
mov
add
lea
jmp
cmc
mov
jae
cwde
sbb
call
pop
(bad)
push
mov
jle
push
or
push
retf
std
xchg
sahf
jo
pop
rcr
cmp
mov
adc
mov
hlt
pop
jns
push
push
mov
add
(bad)
push
add
popf
in
mov
stos
and
fwait
mov
into
fistp
add
pop
jae
daa
movs
inc
pop
inc
call
add
popf
pop
dec
sub
fisttp
inc
add
mov
fbld
xchg
es
sahf
gs
adc
gs
sub
call
in
mov
mov
mov
jne
push
shl
xchg
(bad)
ror
sub
test
inc
mov
(bad)
out
add
je
jecxz
mul
(bad)
push
rcr
cmp
je
add
xchg
inc
jo
test
inc
xor
(bad)
jbe
fwait
push
pop
(bad)
xlat
nop
jecxz
xchg
or
in
lods
dec
jle
pop
sub
ds
jmp
in
out
les
sbb
jae
sub
daa
mov
xlat
pop
adc
sub
cwde
mov
fdecstp
mov
pop
retf
(bad)
cli
push
iret
and
iret
das
nop
test
cmps
push
arpl
popf
jnp
movs
cmps
push
arpl
mov
out
mov
ror
add
or
xchg
or
xchg
ja
adc
and
iret
iret
cdq
or
inc
mov
(bad)
out
inc
or
xor
fsubr
mov
sub
pop
mov
int
nop
or
jl
rep
je
sbb
sbb
stos
xchg
sbb
and
test
test
lock
mov
rcl
mov
cmc
mov
rol
add
cmp
xchg
leave
cmps
js
popf
in
out
sbb
mov
mov
mov
and
or
clc
push
jns
loope
mov
mov
cwde
sti
aad
cmc
test
pop
ins
shl
jns
sbb
dec
pop
jne
lds
sbb
push
dec
js
test
dec
in
xor
push
daa
adc
pop
js
xchg
setno
data16
dec
imul
bound
aaa
xor
addr16
dec
add
in
mov
loope
cmp
call
xchg
test
mov
popa
movs
xor
pop
movs
aaa
or
sbb
shl
xchg
jns
out
inc
jns
adc
shl
xor
xchg
cdq
iret
js
sbb
call
xor
mov
mov
sub
mov
adc
into
sbb
popf
in
xchg
pop
mov
jne
(bad)
sbb
xchg
mov
stos
xchg
lahf
xchg
rcr
pop
pop
jno
in
or
stos
mov
or
adc
fwait
mov
dec
cld
mov
test
push
mov
or
neg
push
pop
xchg
daa
daa
stos
add
cmp
rcl
les
and
div
cmc
push
fiadd
fisttp
adc
cmc
jge
fistp
xchg
ror
in
mov
dec
sub
cmp
aam
or
scas
lods
addr16
cmp
and
jmp
imul
add
aad
retf
pop
xchg
mov
aad
ds
sub
add
pop
cmc
(bad)
mov
cld
out
mov
inc
or
push
or
int
pusha
shl
fdivr
adc
inc
push
repnz
push
shl
inc
shl
jns
sub
jbe
sahf
add
lahf
or
retf
add
nop
xchg
adc
jae
pusha
fadd
(bad)
iret
pushf
fsubr
(bad)
imul
pop
add
xor
push
or
or
and
push
sub
imul
test
xchg
dec
mov
jecxz
fisub
fnstcw
and
push
mov
jne
inc
sahf
test
les
fcmovnb
mov
jecxz
ins
int
push
arpl
or
jp
rol
mov
aas
mov
xchg
int
nop
adc
iret
push
xchg
mov
dec
and
movs
aam
and
in
push
push
inc
stos
mov
aad
addr16
stc
shl
std
sti
arpl
and
mov
sbb
ja
xor
jecxz
lds
jno
or
push
fdivr
bound
popa
and
sub
enter
test
int3
xchg
jp
xchg
test
cmc
push
call
xchg
sahf
push
add
xor
fiadd
mov
xchg
jbe
dec
stos
adc
adc
movs
imul
sbb
mov
rcr
lahf
lds
sub
cmc
in
lods
push
data16
mov
lods
mov
xchg
or
jg
popa
enter
fcom
adc
adc
ds
int3
xchg
in
aad
ins
adc
jmp
jbe
test
int
enter
pusha
mov
mov
out
mov
mov
outs
les
push
sbb
inc
sahf
fidiv
gs
stc
cwde
es
clc
adc
sub
xchg
jmp
icebp
fst
push
hlt
cmc
loope
mov
sahf
cdq
xchg
movs
retf
xchg
sar
leave
test
int
mov
mov
(bad)
mov
mov
fs
or
mov
push
dec
cmps
cmp
mov
stos
and
(bad)
frstor
jg
mov
ror
lahf
ja
or
push
es
mov
ror
fidiv
add
into
movs
ds
int3
xchg
inc
or
rol
xor
cmp
xor
ss
data16
loopne
lods
fdivr
mov
or
jmp
in
imul
xlat
jns
cld
mov
cmp
and
inc
arpl
mov
or
inc
loopne
add
jno
iret
shl
(bad)
rol
and
jl
int
or
fsub
mov
mov
mov
inc
sub
mov
inc
ins
mov
adc
and
jmp
fdiv
jl
jmp
mov
imul
adc
xlat
cdq
add
and
stc
cli
sbb
popf
pushf
jp
std
lahf
pop
arpl
(bad)
test
jns
jge
sahf
jp
mov
dec
push
in
in
inc
jl
retf
xor
scas
mov
adc
add
jae
cwde
aaa
int3
xchg
mov
popa
hlt
shr
pushf
test
add
imul
lods
pop
jp
fs
cmp
jle
cmp
add
sar
push
je
mov
sbb
push
or
push
jne
lods
mov
mov
adc
fwait
pop
loope
xor
jbe
and
mov
pusha
je
fistp
scas
inc
inc
xor
sbb
les
fisubr
ror
imul
(bad)
cmp
ins
sub
stos
out
xor
push
inc
shr
int3
push
xor
push
jmp
rol
or
or
(bad)
outs
lods
aad
jp
mov
imul
inc
daa
adc
jno
ss
call
mov
out
mov
jne
les
repnz
push
push
aad
sbb
xchg
aad
jns
mov
xlat
sub
xor
jp
arpl
imul
push
push
loope
and
add
sbb
fnstsw
shr
inc
or
rcl
cmp
retf
or
jle
mov
and
mov
inc
rcl
sub
push
fsubp
push
cwde
test
add
lock
outs
and
out
mov
pushf
ror
lods
std
pop
mov
aaa
add
pusha
repz
aam
shl
jo
inc
outs
arpl
jmp
cmc
dec
push
xor
bound
xchg
fmul
cmp
inc
add
adc
out
mov
retf
add
pop
test
daa
xchg
pusha
dec
sub
ret
adc
movs
jle
stos
ins
lods
mov
sub
jb
(bad)
mov
shl
mov
mov
inc
mov
mov
into
xor
cwde
jl
cwde
cmp
std
push
xor
push
mul
sbb
pop
push
add
mov
cmps
inc
push
loopne
add
xlat
fwait
dec
xor
aaa
push
add
sub
xor
add
retf
dec
fsubrp
jl
xor
jg
push
cwde
ins
or
adc
mov
ret
jbe
test
jmp
(bad)
les
test
or
push
retf
xchg
test
std
sub
push
mov
push
sbb
pop
fs
std
sbb
push
stc
dec
push
cmp
test
adc
jg
push
shl
pop
or
faddp
jbe
cdq
pop
or
mov
sub
dec
jno
imul
mov
jae
call
cdq
pop
push
cld
pop
arpl
jle
push
jmp
cld
pop
je
icebp
cmp
je
push
ror
xchg
les
mov
cmp
mov
daa
scas
mov
pop
pop
xor
test
cmps
and
adc
mov
dec
(bad)
pop
ret
fld
or
div
sbb
mov
sbb
jl
jae
fsincos
leave
dec
mov
inc
mov
(bad)
test
push
push
clc
adc
push
fst
dec
fst
jno
or
stc
(bad)
shl
xchg
pushf
cmps
pop
rol
hlt
mov
call
test
ficomp
sahf
and
dec
push
fxch
pop
push
in
adc
jle
pop
int3
push
and
cmp
pop
sub
enter
push
cdq
out
sub
std
jnp
cmp
pop
call
push
into
or
fst
and
adc
shl
addr16
ffree
fild
ss
rcr
sbb
aad
and
lds
mov
daa
jl
jns
lahf
arpl
cld
ja
aad
in
xchg
or
and
xlat
or
test
jmp
ins
jae
dec
sar
pop
push
fst
push
loop
imul
out
shl
xchg
push
pusha
mov
xor
sub
jmp
data16
mov
gs
mov
les
pop
xchg
fnsave
push
fst
push
mov
retf
adc
pusha
dec
push
jmp
rol
jp
sbb
(bad)
sub
iret
mov
adc
adc
inc
inc
or
mov
jge
add
cmps
pushf
retf
mov
inc
mov
inc
xchg
into
js
aas
pop
sub
inc
add
push
mov
xlat
xor
adc
push
or
lods
jae
push
push
push
sub
xor
in
dec
outs
shl
lock
push
jnp
cld
ins
add
mov
or
mov
enter
or
or
mov
retf
cli
mov
sub
outs
cmp
fwait
pop
inc
shl
(bad)
pusha
push
xor
jno
inc
(bad)
cmp
jl
or
mov
sbb
stos
das
rcr
xchg
dec
push
xchg
mov
out
push
in
clc
repz
cmp
xlat
dec
retf
inc
jge
adc
xor
jmp
or
cdq
dec
ret
xor
jne
popf
out
push
out
aam
fs
call
push
xor
cli
cs
mov
mov
push
jle
ins
or
sub
fcomp
jb
rcl
stos
into
rcl
btr
push
jbe
cld
jle
mov
adc
push
xor
inc
xor
fstp
xchg
cmp
js
mov
inc
xchg
adc
rcl
and
dec
adc
mov
dec
push
pmulhw
ins
ret
retf
retf
pop
mov
pop
inc
mov
aas
jbe
push
shl
cmp
pop
sti
jno
icebp
pop
push
xchg
jp
xchg
out
jb
add
sbb
in
xor
retf
ror
ins
push
jle
xchg
push
sbb
sub
xor
sbb
and
pop
mov
xchg
cmp
inc
mov
dec
hlt
sbb
test
add
push
out
lods
or
jle
rcl
inc
enter
mov
cmp
xor
or
jnp
cmp
fiadd
dec
xchg
inc
push
test
adc
outs
add
cmc
into
addr16
rcr
inc
dec
fdiv
lods
adc
arpl
fst
mov
mov
aaa
mov
sub
xchg
sub
pusha
inc
sub
fidiv
jle
pop
add
push
or
push
daa
clc
sub
add
jne
dec
int
xchg
add
out
lock
js
jae
and
cwde
dec
dec
sbb
cmp
add
xchg
jecxz
push
nop
jae
sbb
fdiv
ja
adc
rcr
or
sbb
inc
adc
sub
mov
xchg
xchg
clc
jp
mov
push
sub
sar
and
lods
in
adc
(bad)
dec
xchg
cmps
hlt
push
push
rcl
movs
test
xchg
pop
sbb
je
pushf
pop
ror
lds
imul
nop
sbb
push
xchg
or
dec
adc
hlt
jae
rep
movs
jno
int
movs
sub
outs
into
sub
xor
pop
sbb
adc
mov
xor
hlt
xchg
ret
out
outs
and
mov
push
(bad)
adc
pusha
fstp
aad
(bad)
mov
jmp
add
(bad)
xchg
mov
mov
mov
pop
sbb
adc
jno
lods
iret
test
push
sar
jl
sub
cmp
call
mov
mov
pop
cwde
pop
movs
push
or
popf
xchg
mov
cmp
or
adc
imul
or
js
outs
into
ficom
inc
cld
inc
ret
mov
leave
lods
mov
fs
int3
sbb
loopne
out
or
jp
rcl
pop
out
loop
dec
xor
pop
ss
addr16
pop
stos
js
or
(bad)
push
ret
mov
fcomp
js
pop
jecxz
pop
xor
dec
sbb
xor
pop
add
and
push
mov
adc
xchg
dec
jnp
dec
dec
cmp
add
mov
pop
xchg
fnstsw
cmps
adc
retf
(bad)
stc
mov
mov
stc
jne
lods
xor
mov
fmul
imul
ds
adc
mov
mov
retf
jne
mov
gs
jl
bound
mov
iret
sbb
or
xchg
and
gs
aaa
inc
ins
ret
lods
stos
add
adc
add
ret
ins
ss
arpl
mov
jne
nop
lea
fsub
add
(bad)
mov
sbb
sub
cmp
or
cwde
mov
or
push
fsub
add
mov
ret
stc
xchg
dec
sub
dec
punpcklwd
adc
js
pop
jne
es
and
inc
imul
sbb
xor
(bad)
sbb
call
dec
in
and
sbb
mov
imul
out
idiv
imul
push
inc
data16
ja
mov
mov
cmp
mov
mov
mov
sbb
into
jle
add
call
cld
jne
lock
sub
inc
cmc
hlt
rcr
dec
mov
sub
bound
sbb
jmp
mov
mov
hlt
push
fwait
cmps
cmp
xor
icebp
in
arpl
mov
sbb
iret
cdq
mov
pop
xor
in
arpl
cmps
int
fwait
out
dec
js
sbb
or
sub
cmps
fiadd
pop
arpl
xor
inc
mov
or
retf
push
movs
or
test
arpl
fnstcw
xchg
dec
and
mov
out
and
add
lea
test
test
or
shl
pop
es
adc
popf
sub
out
jb
pop
(bad)
fs
mov
(bad)
push
xor
mov
mov
sub
lock
es
das
and
leave
cwde
cmp
popf
aaa
cli
add
jge
stc
test
cmp
sti
test
adc
push
inc
and
fild
inc
popf
push
mov
mov
jns
jne
dec
idiv
add
mov
sbb
and
mov
dec
imul
pusha
xor
pop
push
inc
test
jge
icebp
sub
push
fcmovnb
scas
xor
scas
mov
mov
pop
loop
clc
aas
and
sbb
xchg
inc
push
int3
loope
push
sbb
fistp
xchg
pop
xor
xchg
mov
xor
ja
jne
jge
dec
lds
mov
add
aam
mov
pusha
(bad)
add
outs
lods
popf
inc
int3
and
ins
or
push
arpl
mov
scas
aaa
mov
push
jg
adc
cwde
ins
out
js
movs
fs
int
xchg
addr16
enter
mov
lds
lahf
mov
mov
mov
test
imul
cmps
mov
rcr
sub
retf
mov
pop
das
outs
fld
scas
cmp
adc
or
and
in
jne
dec
push
(bad)
jle
ins
push
ret
cmp
in
out
daa
add
scas
es
add
mov
jo
mov
pop
loopne
int
sbb
jne
mov
shl
arpl
jge
inc
aad
mov
movs
mov
lea
(bad)
xchg
test
fcom
jbe
lods
cmp
(bad)
(bad)
pushf
std
jne
dec
dec
je
push
and
mov
scas
mov
cmps
xlat
mov
test
mov
sub
jbe
dec
cs
imul
push
mov
test
mov
push
mov
shr
push
mov
test
mov
mov
test
lds
push
xchg
mov
test
gs
mov
dec
cmps
scas
lahf
(bad)
xor
mov
cmp
mov
movs
mov
cmp
and
std
jge
mov
sbb
jg
leave
mov
popf
lods
faddp
stos
mov
fwait
stos
popa
add
push
mov
xor
mov
xor
mov
je
inc
fbstp
mov
sti
outs
scas
mov
cmps
aad
inc
movs
ss
push
ret
jl
and
adc
jne
in
mov
dec
outs
bound
push
jnp
bound
add
ja
popf
pop
fadd
call
mov
jnp
into
push
fsubr
sub
shl
inc
ror
xor
les
loop
imul
jmpw
xor
sbb
dec
pop
xchg
int
fidivr
rol
lea
test
push
cmc
icebp
pop
mov
fadd
mov
leave
jo
dec
sbb
jg
mov
dec
sbb
fiadd
mov
push
cmp
loopne
out
cwde
inc
xchg
mov
movs
jno
movs
jno
nop
mov
fisttp
xchg
and
xchg
sub
mov
sbb
sbb
adc
hlt
scas
retf
jmp
out
ret
dec
inc
test
mov
cli
cmc
push
push
adc
(bad)
push
imul
inc
repz
xchg
pop
in
ds
loop
arpl
(bad)
xlat
sahf
int
out
inc
pop
outs
pop
data16
test
mov
push
std
stc
add
xchg
fcom
dec
mov
jmp
mov
dec
jge
pop
aad
leave
pop
outs
push
push
fild
adc
dec
sub
pop
mov
bound
movs
ds
xchg
cmp
outs
sub
xchg
cmp
cmp
and
mov
mov
mov
sbb
mov
les
mov
fs
dec
xchg
jbe
pop
push
sub
inc
push
lods
mov
mov
sub
ins
sahf
sti
or
mov
push
mov
push
push
mov
ins
cdq
push
imul
es
inc
xchg
test
call
or
movs
out
imul
push
add
jbe
shl
xchg
ins
jnp
(bad)
xlat
jns
xchg
bound
jns
jb
jl
add
ins
mov
scas
fwait
push
pop
push
stc
mov
xor
inc
aad
xchg
jno
ins
ins
iret
pop
retf
xlat
lods
xor
adc
adc
lock
arpl
js
addr16
and
int
or
mov
mov
mov
push
test
rcr
or
rcr
add
lahf
inc
xchg
mov
sbb
xchg
xchg
fwait
push
sbb
pop
dec
shr
mov
data16
mov
pusha
mov
(bad)
push
or
mov
and
test
mov
popf
ins
int3
iret
cmp
lea
bound
jbe
test
fadd
test
sub
test
(bad)
pusha
adc
gs
mov
rol
pop
dec
sar
int3
data16
xchg
(bad)
push
mov
mov
movs
or
inc
ja
lahf
xchg
scas
add
ins
loopne
rol
jno
jbe
push
out
or
lea
pop
jno
mov
leave
dec
mov
das
imul
ds
mov
pop
jmp
in
mov
inc
adc
sbb
(bad)
seto
mov
mov
cmp
std
push
mov
js
stos
aad
jbe
mov
inc
inc
fs
mov
(bad)
xchg
clc
pop
pop
int3
int
mov
pop
test
push
push
push
xor
mov
add
imul
arpl
or
cmp
mov
mov
rol
and
in
and
or
dec
push
fld
and
pop
scas
sbb
call
mov
mov
or
push
fidivr
sub
pop
ror
out
mov
std
jb
sahf
rcl
cmps
mov
add
ins
push
sbb
mov
cmp
(bad)
mov
sub
addr16
pop
adc
aam
(bad)
in
mov
cs
out
mov
mov
sub
into
pop
mov
cli
mov
sbb
push
call
sub
test
xor
nop
xchg
clc
loopne
test
push
rcr
cli
sbb
cmps
test
(bad)
push
popf
mov
mov
or
mov
mov
mov
test
xchg
mov
popf
dec
aam
cwde
push
mov
pop
mov
mov
mov
mov
jnp
jns
xor
adc
movs
movzx
pushf
iret
xchg
mov
sbb
adc
mov
or
xlat
pop
aam
inc
in
pusha
xchg
jno
(bad)
bnd
mov
pop
jnp
out
jle
xchg
jle
scas
retf
fdiv
js
mov
xor
hlt
jno
leave
imul
scas
aas
outs
pushf
imul
cmp
ja
jle
out
mov
sbb
dec
(bad)
jno
xchg
sbb
pop
fst
es
sub
in
stos
xchg
xor
les
leave
jge
mov
mov
stos
jmp
shl
adc
sub
hlt
mov
shl
gs
mov
pusha
and
cdq
call
aam
push
mov
(bad)
lds
loopne
cmc
sub
or
cmp
sbb
call
add
cmc
and
or
add
mov
jmp
stc
jge
add
inc
retf
mov
loopne
jno
jbe
fdiv
sub
scas
add
inc
pusha
inc
mov
rol
cdq
xchg
rcl
fdivr
fldenv
les
ds
mov
dec
jnp
inc
lds
rcl
push
mov
dec
loop
push
mov
adc
(bad)
jmp
movs
dec
mov
aas
in
out
push
mul
movs
std
xor
pop
add
ret
retf
mov
xchg
cmp
mov
sbb
xor
das
push
pop
sbb
sar
jmp
pop
pop
outs
test
mov
cld
ss
and
dec
les
sti
pop
adc
jbe
cmps
sub
test
mov
jmp
xor
add
pop
fild
sbb
ins
pop
(bad)
outs
fnstcw
mov
jno
ins
sub
sub
and
sbb
mov
pop
inc
push
push
pop
js
imul
lea
mov
mov
lods
movs
push
shr
and
test
iret
lea
lea
ret
dec
inc
mov
mov
ja
pop
int
js
mov
jmp
and
mov
cmc
mov
test
mov
mov
out
js
jl
icebp
call
test
adc
hlt
out
iret
lahf
mov
cmp
or
in
cwde
mov
dec
pusha
push
lea
daa
push
add
push
shr
rol
lea
pop
bound
push
movs
mov
ins
jmp
mov
lea
clc
in
mov
ja
cmc
push
jns
pushf
cmc
push
icebp
or
add
push
std
or
popf
stc
pop
push
in
sbb
pop
pushf
push
scas
int3
adc
mov
stc
mov
retf
loop
imul
inc
lea
xchg
xor
pop
jle
shr
lds
mov
sbb
movs
mov
xor
pop
xchg
mov
addr16
sbb
movs
or
ret
dec
mov
add
cmp
int
aas
xchg
(bad)
sar
(bad)
xchg
lea
(bad)
jno
shl
data16
in
add
xchg
inc
cld
repnz
mov
stos
test
mov
push
les
mov
mov
jmp
cmp
ror
mov
hlt
push
or
push
or
(bad)
mov
mov
sbb
lahf
out
mov
xchg
pop
imul
add
fistp
cmc
pop
shr
outs
pop
mov
(bad)
not
sbb
in
loop
push
data16
(bad)
int
fstp
rcr
imul
in
cmps
jbe
mov
mov
sbb
xchg
cmc
aaa
lea
inc
popf
popa
mov
nop
add
add
cmp
lods
lea
gs
sbb
ins
jmp
and
sbb
jae
xchg
sahf
jae
imul
sbb
push
(bad)
mov
jb
mov
mov
mov
pop
jnp
adc
or
into
mov
dec
and
shl
jg
jl
jp
adc
popf
jb
aad
ret
imul
xchg
retf
std
gs
inc
xchg
lahf
out
mov
imul
jmp
repz
inc
addr16
dec
fild
cmp
inc
outs
leave
jnp
ins
mov
pop
inc
int
push
outs
sub
mov
fcomp
jns
lahf
pusha
jb
pop
leave
sub
add
mov
pushf
ins
sub
or
sbb
inc
mov
cmp
lea
add
ficomp
mov
test
arpl
lahf
push
movs
sub
jp
adc
test
pop
jle
pop
mov
pop
leave
ins
pop
jne
repnz
data16
cmc
aas
pop
test
and
in
push
push
lea
mov
dec
lahf
fistp
outs
sbb
sbb
add
mov
dec
xchg
ins
sbb
jge
adc
xor
scas
push
jl
scas
pusha
sbb
lods
push
xchg
in
xchg
dec
push
push
jns
xlat
and
adc
test
jge
dec
sbb
cmp
inc
scas
and
add
mov
cld
sbb
mov
jns
add
dec
rol
adc
xchg
pop
mov
push
out
sbb
lods
pop
add
test
mov
mov
jl
pop
xchg
in
in
out
loope
arpl
mov
sbb
push
addr16
popf
mov
pop
cmp
call
sub
fstp
dec
out
mov
xor
sbb
mov
jle
or
(bad)
jnp
sar
xchg
dec
lds
mov
push
leave
sbb
jl
ror
xchg
xchg
mov
sub
sub
test
push
rcr
jne
loope
push
add
daa
test
mov
rcr
inc
sbb
mov
jmp
rcr
sbb
and
mov
fist
ret
add
add
pop
mov
stc
popa
jmp
adc
data16
stos
fdivr
shl
jbe
jno
loope
retf
mov
rol
je
jl
mov
jl
popa
fld
or
sbb
popa
adc
fstp
nop
or
mov
ins
push
inc
sub
in
lods
mov
xor
sahf
mov
mov
mov
stc
adc
ret
adc
xchg
pop
in
pop
and
dec
shl
imul
mov
imul
push
inc
loopne
or
xor
xor
dec
ins
aaa
mov
pushf
repz
lods
adc
sub
in
scas
lahf
inc
inc
cmp
xchg
mov
dec
xchg
cmp
pop
cmp
and
jp
lock
fs
and
loop
int
nop
mov
aas
cmp
inc
lods
mov
inc
sub
out
push
push
pop
nop
adc
test
and
fadd
or
mov
push
loope
and
mov
xchg
add
dec
imul
fmul
xchg
sbb
sbb
loop
adc
sbb
(bad)
cs
ins
dec
or
outs
mov
push
outs
call
frstor
mov
fdivr
data16
scas
mov
sub
xchg
ja
ret
inc
push
adc
dec
xor
test
aam
mov
mov
pop
cmps
mov
repz
es
lods
xchg
imul
cmp
addr16
mov
repz
lock
push
xchg
ins
imul
pop
int
jbe
pusha
int3
mov
js
movs
xchg
repz
lahf
out
mov
jns
mov
imul
fwait
outs
jle
jg
dec
adc
jb
arpl
mov
cmc
fwait
jle
jns
mov
dec
xor
inc
add
mov
sar
popa
in
mov
dec
lea
xchg
clc
adc
add
daa
les
sbb
in
scas
bound
lea
dec
sar
test
rol
push
dec
outs
adc
lds
fdivr
jae
clc
mov
and
push
jae
mov
pop
nop
shr
out
mov
sbb
cmp
daa
adc
xlat
mov
pushf
pop
dec
aam
or
mov
add
push
sbb
mov
pop
sub
int
mov
xor
mov
pushf
test
lods
outs
mov
fadd
hlt
leave
xchg
fs
xchg
test
xor
(bad)
mov
and
jg
pop
mov
scas
retf
or
jp
frstor
out
data16
(bad)
bound
xor
popa
mov
cmp
jne
retf
lea
shl
or
loopne
xor
aam
outs
add
les
in
sbb
inc
pop
data16
adc
dec
repz
lea
xor
stos
popf
pusha
xor
push
dec
and
adc
lahf
addr16
pop
cld
xor
or
or
or
cld
cmp
movs
push
mov
jnp
(bad)
and
dec
not
pop
push
pop
lea
mov
imul
or
xor
xchg
ror
outs
xor
shl
and
adc
mov
shl
xor
hlt
js
pop
int3
fiadd
sbb
or
cwde
sub
push
mov
xchg
mov
neg
ins
jmp
jno
test
fs
jbe
xor
mov
test
jmp
mov
imul
adc
adc
xchg
test
xchg
xor
jns
or
mov
shr
scas
sub
jnp
and
push
dec
or
inc
xor
das
and
sub
xor
and
retf
mov
rol
or
mov
lock
adc
in
popa
sbb
test
arpl
mov
dec
icebp
mov
dec
push
scas
mov
pushf
mov
lods
and
push
add
lock
lods
or
dec
cmp
js
(bad)
push
icebp
cmc
xor
sbb
mov
repnz
and
cwde
pop
push
in
fild
fcomp
sbb
arpl
out
mov
cmc
sbb
pusha
pop
jo
add
fisttp
mov
push
mov
inc
push
inc
xor
jmp
push
cmp
pop
sbb
xor
mov
push
iret
mov
ja
jp
and
out
add
jae
pop
mov
cmp
enter
mov
sar
shl
sub
mov
gs
mov
xor
push
test
bswap
fdiv
sbb
mov
test
add
push
test
inc
or
cdq
arpl
loop
inc
adc
mov
ja
mov
add
cld
push
shr
sbb
dec
xchg
(bad)
xor
sub
xor
inc
lods
aas
call
hlt
xchg
test
std
bnd
dec
dec
mov
ret
stc
cmc
imul
fwait
in
add
jmp
mov
cli
jge
data16
jbe
add
addr16
xchg
sbb
not
jae
add
sar
or
sbb
aam
cmc
xor
pop
not
jnp
cmp
cmc
sub
add
pop
sub
mov
test
sub
out
fadd
pop
test
ins
pop
xlat
xlat
push
and
and
in
xor
fst
mov
inc
pop
addr16
xor
add
nop
lea
dec
sub
into
cld
xor
jnp
call
cli
pop
cmc
in
push
sbb
mov
shl
jno
daa
jnp
add
xchg
cmp
fs
push
or
je
mov
inc
test
xlat
ins
mov
clc
xor
lods
dec
mov
jl
sahf
test
das
cmc
dec
out
jecxz
(bad)
pop
push
stos
into
ds
pop
inc
aaa
mov
pop
jmp
mov
popa
push
mov
mov
cmp
mov
mov
(bad)
push
and
jb
loopne
push
cmp
jno
dec
shr
mov
fs
sti
sbb
pushf
xlat
or
test
adc
jns
out
or
fistp
popf
xor
lods
(bad)
inc
scas
sbb
test
test
xchg
jns
sub
mov
mov
or
sub
jo
addr16
mov
push
sbb
xchg
add
enter
cmp
and
mov
sbb
lock
push
mov
push
mov
mov
aam
out
mov
sub
shl
pusha
lods
pusha
mov
pop
xlat
jo
ret
(bad)
std
pop
ret
div
cld
imul
dec
not
push
inc
jge
iret
fwait
mov
mov
adc
pop
fistp
enter
loope
pop
cmps
js
sbb
sbb
mov
xchg
repz
or
popa
xchg
mov
pop
popa
add
mov
xchg
or
cmp
jecxz
or
mov
mov
rol
test
cmc
sub
(bad)
ins
mov
rcr
or
inc
outs
adc
pop
mov
sub
shl
loopne
adc
mov
cmp
sub
add
xchg
pop
std
jl
sbb
movs
inc
cmp
mov
pop
mov
test
movs
out
(bad)
int
mov
fstp
pop
ret
fisubr
mov
mov
inc
div
add
daa
test
and
sub
mov
xchg
ret
sub
inc
(bad)
mov
sbb
int
mov
int3
imul
pusha
xchg
sbb
mov
mov
not
mov
shr
out
in
pop
and
mov
xchg
push
mov
fbld
arpl
out
scas
xor
loope
sub
adc
push
pop
or
mov
sub
je
adc
cmp
cmc
int3
mov
std
mov
xchg
mov
xor
pop
add
dec
mov
mov
mov
pop
dec
cmp
mov
shl
scas
dec
std
enter
lods
je
rol
scas
xchg
test
bound
mov
cld
push
xchg
jl
cmps
sub
arpl
xchg
les
push
nop
dec
out
adc
xchg
push
sbb
inc
jne
(bad)
xchg
push
test
pushf
daa
adc
aaa
lods
push
pop
mov
imul
pop
fdiv
data16
jl
sub
loope
dec
test
in
leave
rcr
and
cld
or
das
ss
push
outs
fist
adc
mov
adc
test
cwde
(bad)
mov
push
xchg
repz
dec
pop
shr
jle
sbb
mov
push
stc
fs
xchg
inc
mov
mov
les
test
xchg
add
and
jmp
xor
pop
inc
fmul
xchg
inc
sub
lds
leave
dec
fadd
jns
in
mov
pop
aaa
and
ja
jle
in
jns
sbb
(bad)
mov
sub
dec
cdq
cdq
add
addr16
sbb
xor
inc
fdivr
mov
sbb
pop
outs
out
cmp
ins
and
push
xchg
jmp
jmp
rcl
xlat
jle
cmp
out
adc
mov
and
adc
ins
fldenv
std
lahf
ds
and
ins
mov
xor
xchg
or
(bad)
imul
pop
xchg
aad
cwde
(bad)
in
sbb
jmp
push
mov
imul
push
add
push
cmp
adc
fs
jns
sub
pop
xor
aaa
frstor
mov
sub
adc
gs
xor
xchg
(bad)
push
(bad)
fistp
pop
sbb
stc
xchg
xchg
pop
iret
hlt
jl
xchg
and
pop
xchg
mov
std
cmc
sbb
mov
les
jne
xlat
push
das
dec
mov
pop
fwait
xchg
popf
inc
nop
mov
fistp
mov
nop
mov
inc
xchg
popa
adc
mov
push
mov
(bad)
cmps
mov
jne
or
jno
rcl
push
leave
mov
cmp
or
out
mov
xor
xchg
inc
dec
outs
shl
sbb
lea
inc
xchg
add
ja
mov
test
ja
jge
arpl
mov
dec
jge
outs
jo
popf
mov
mov
adc
sub
mov
sbb
pop
adc
xor
sahf
aas
and
das
lea
pop
push
cld
out
cmp
mov
push
xchg
int3
sub
mov
rcr
aad
ins
sar
pop
int3
push
jne
out
ins
sbb
mov
cmps
or
popa
hlt
xchg
(bad)
fst
mov
lea
js
jns
add
stos
cmp
pop
(bad)
jmp
inc
cmp
add
js
not
test
loope
test
jnp
xchg
aad
adc
dec
jle
rcr
pop
ins
fbld
rol
or
jl
jbe
mov
xchg
pushf
xchg
push
or
mov
es
adc
jno
jns
dec
jbe
lea
pop
mov
jl
jbe
dec
loop
ins
sti
aas
cmp
pop
shl
xchg
and
mov
aad
popa
mov
into
nop
xchg
mov
ret
test
outs
cmp
gs
xchg
mov
call
and
pushf
mov
sti
(bad)
push
jp
mov
and
cmp
xchg
lods
rcl
cmc
or
jg
lods
xchg
jae
in
movs
mov
outs
xor
ret
aad
dec
adc
out
push
int3
(bad)
ins
xchg
cmp
xchg
and
out
dec
pop
cdq
pop
push
xor
xchg
xchg
jecxz
mov
bts
adc
movs
sahf
clc
(bad)
pop
push
xchg
mov
dec
imul
fmul
fst
mov
and
mov
pop
pop
sub
add
xlat
rol
ret
adc
adc
test
sub
adc
aas
test
in
adc
push
sub
mov
xor
imul
ja
shl
mov
sub
adc
push
mov
mov
ror
shl
sahf
sub
xor
inc
push
ins
out
outs
stc
cmp
cdq
ins
sbb
mov
mov
into
cmc
jbe
test
jl
mov
mov
fmul
adc
in
scas
xor
add
mov
pop
xlat
aad
(bad)
shr
shl
cmps
jb
daa
jmp
dec
mov
add
(bad)
push
outs
pop
pop
call
jecxz
inc
test
repnz
jge
mov
mov
ds
xchg
loope
or
mov
(bad)
jge
inc
mov
test
dec
pushf
shr
jl
push
push
repnz
pop
sub
lock
dec
stos
mov
cmps
enter
pop
test
jmp
xor
adc
ds
and
mov
clc
pop
hlt
stc
(bad)
(bad)
inc
imul
add
push
enter
fs
or
addr16
xchg
and
je
push
lods
mov
xchg
out
jb
jne
lea
inc
or
fisubr
xor
lea
aas
dec
loop
mov
push
inc
popa
sub
jns
push
add
or
xchg
outs
sub
sub
sub
mov
stos
xor
mov
(bad)
cmp
pop
push
sbb
fmulp
xchg
jmp
sub
ret
shr
or
std
popf
xchg
cmp
xchg
dec
test
aad
xor
push
jle
imul
std
fwait
mov
xchg
cmp
or
ins
sar
sbb
push
jecxz
xor
mov
cs
inc
pop
test
jge
mov
fwait
sub
jbe
pusha
and
fwait
inc
test
stos
cmps
xchg
adc
adc
scas
mov
pop
fcomp
mov
jecxz
xchg
lods
push
fidiv
outs
icebp
jns
mov
mov
icebp
add
je
gs
fcmovnbe
retf
mov
xchg
(bad)
(bad)
fdiv
jno
mov
(bad)
sbb
pop
mov
cmp
and
fnstenv
sbb
out
das
mul
add
inc
int3
mov
pop
fiadd
shl
les
dec
retf
xchg
lds
fsub
adc
cdq
jmp
mov
jle
add
mov
push
or
call
xlat
lea
xchg
lock
ds
std
into
add
jbe
or
mov
cli
push
mov
stc
int3
test
icebp
jo
or
sub
add
nop
fnsave
(bad)
nop
pop
daa
movs
inc
je
mov
add
outs
xchg
inc
adc
jne
cmps
cmp
jge
ror
test
mov
test
sbb
mov
pop
int3
sub
int
shr
mov
cmp
stos
jle
mov
icebp
fadd
jecxz
xor
pop
sub
fstp
loop
and
sbb
jmp
mov
mov
and
cdq
mov
nop
retf
xchg
in
popf
push
iret
mov
mov
xchg
mov
dec
sub
inc
jp
adc
xchg
and
sub
in
adc
fcom
out
xlat
je
fild
sub
fs
pop
mov
test
call
int3
test
out
and
jbe
lea
and
(bad)
out
in
(bad)
bound
(bad)
cld
adc
mov
cs
nop
in
mov
dec
call
sub
movs
rol
addr16
cmc
mov
out
fwait
clc
jmp
pop
adc
(bad)
jg
aaa
adc
gs
(bad)
arpl
es
pop
lods
and
sti
mov
test
leave
push
pop
xchg
xchg
and
adc
adc
pop
jno
rcr
cmc
mov
mov
xchg
sub
imul
into
inc
sahf
sub
xchg
jne
push
fcomp
sar
dec
daa
clc
lods
sub
popa
mov
dec
mov
jg
cdq
je
icebp
jno
cmc
push
and
gs
cmc
sbb
fwait
shl
cli
push
(bad)
and
icebp
dec
push
dec
xchg
icebp
push
int3
dec
ffreep
test
lock
cwde
lea
mov
cmp
sbb
mov
mov
add
aam
push
dec
retf
data16
xchg
rol
popa
div
dec
mov
sub
test
mov
add
pop
pop
inc
movs
cmp
xor
rcr
dec
mov
or
push
(bad)
fidivr
das
add
data16
js
cmp
push
inc
dec
fbld
adc
mov
and
xor
cmp
repz
ret
push
and
imul
mov
jo
add
lds
push
popa
in
mov
ss
ins
ror
psubusb
movs
das
mov
popf
std
push
inc
sti
and
mov
push
mov
fdivr
cld
push
add
dec
es
in
push
mov
mov
idiv
push
into
push
fsub
mov
mov
mov
cmps
jne
push
stos
outs
fiadd
mov
cmp
int
mov
das
pop
xor
mov
pop
fmul
popa
pop
xor
lods
mov
xchg
es
inc
mov
shl
imul
mov
shr
add
or
stos
aad
and
xchg
pushf
jno
mov
sbb
dec
adc
idiv
dec
sub
or
xor
mov
rcl
push
not
popf
sti
mov
cmp
mov
int
xchg
jge
push
push
jecxz
xchg
ds
sub
mov
scas
mov
imul
into
mov
jmp
mov
xchg
inc
push
mov
pop
arpl
pop
outs
xchg
(bad)
jne
nop
or
xchg
fcom
not
not
gs
mov
cs
add
dec
mov
mov
inc
mov
jae
or
enter
xchg
mov
outs
sub
imul
int3
push
push
push
mov
lods
pop
jae
ds
sub
mov
sbb
popa
je
das
dec
mov
mov
test
movs
and
mov
dec
dec
int3
xor
fprem1
xchg
aad
dec
into
pop
mov
mov
lea
dec
mov
or
shr
ja
sub
mov
movs
std
mov
cmp
mov
cdq
or
or
mov
lods
imul
push
mov
dec
popf
pop
mov
mov
arpl
into
daa
mov
mov
mov
push
dec
mov
mov
shl
dec
sub
jecxz
(bad)
pop
movs
loopne
mov
and
mov
mov
sbb
cwde
jl
inc
ins
cmp
fwait
xchg
mov
fs
in
add
movs
pop
mov
rcr
pop
mov
jb
or
mov
test
jae
out
adc
rcr
mov
pusha
(bad)
jge
xor
mov
lods
pop
push
aad
sbb
mov
mov
fwait
mov
je
push
daa
or
dec
mov
addr16
and
inc
bound
in
loopne
movs
adc
add
jnp
jo
stos
lods
push
jae
in
mov
jbe
sbb
xchg
jns
dec
rcr
push
pop
dec
xor
pushf
cmp
xor
jo
xor
adc
int
mov
pop
xchg
(bad)
adc
lahf
sbb
mov
jmp
mov
cmp
sti
pop
iret
and
xor
push
test
dec
data16
fwait
pop
leave
mov
popf
out
repnz
test
and
mov
adc
mov
popf
fcom
mov
sbb
ja
shl
clc
shl
inc
and
(bad)
imul
add
sar
jne
add
je
jg
mov
push
test
inc
es
aas
pop
jle
mov
mov
scas
cwde
xor
repz
fsub
bound
std
mov
cdq
sub
mov
jo
sub
iret
sbb
pop
jl
and
fdivp
retf
arpl
ins
jnp
test
xchg
(bad)
cmp
jne
or
cmp
xchg
sub
sahf
adc
jp
jmp
sub
ins
xor
jecxz
clc
repnz
test
adc
xchg
(bad)
jle
je
sub
fs
dec
add
retf
repnz
dec
mov
or
and
mov
xor
jns
dec
fisub
push
xlat
cmp
frstor
stos
sbb
mov
out
xchg
adc
into
or
mov
(bad)
std
lahf
jmp
push
data16
nop
ins
packssdw
xchg
and
jae
dec
fs
sbb
lock
add
pop
xor
in
pop
sbb
or
int3
inc
ror
jmp
add
adc
cwde
ret
pop
stos
out
lea
pop
enter
push
ss
xchg
fst
(bad)
mov
mov
(bad)
sbb
pop
out
(bad)
push
cdq
jp
mov
cmc
js
xchg
push
adc
mov
sub
and
adc
fild
or
jecxz
push
xchg
mov
stos
hlt
rcl
and
in
ret
pop
hlt
jmp
scas
or
ror
and
dec
fcomi
cld
mov
or
scas
fs
je
cdq
repz
mov
push
jno
or
retf
or
mov
pop
xchg
dec
push
jle
sbb
cmp
or
fst
(bad)
je
std
mov
xor
test
inc
jmp
xor
push
xor
adc
mov
or
imul
add
aad
mov
push
sbb
mov
mov
cmp
and
(bad)
(bad)
sbb
outs
aad
push
lods
je
sbb
cwde
mov
pop
xor
jne
test
adc
(bad)
fsubr
or
jecxz
icebp
sub
push
or
arpl
pop
push
mov
sbb
inc
mov
lods
jne
mov
lahf
jmp
mov
mov
cmp
in
imul
addr16
or
inc
sbb
pop
add
adc
lea
mov
sub
mov
int
push
data16
mov
cmps
or
pop
popf
push
push
(bad)
pop
add
or
sub
mov
scas
nop
frstor
mov
add
sbb
sbb
push
call
(bad)
ror
xor
nop
pusha
idiv
cwde
enter
cmps
jns
idiv
xor
ja
and
aad
jnp
leave
mov
lds
or
mov
jg
shl
popa
adc
xchg
out
mov
or
mov
ret
data16
mov
cmc
mov
out
jno
xor
(bad)
dec
dec
int3
dec
sub
clc
xor
fs
xchg
lea
mov
jmp
add
(bad)
xchg
xchg
xchg
movs
pop
adc
pop
int3
cmp
outs
mov
stc
sbb
mov
cmp
mov
repnz
cmps
outs
inc
xchg
pop
jle
push
mov
mov
mov
and
mov
xchg
and
xchg
sub
xor
mov
inc
push
jle
loopne
jg
jg
jecxz
stos
fsub
sub
sbb
(bad)
mov
adc
add
xchg
cdq
jns
add
shl
or
ret
add
cmp
jg
push
sub
add
dec
dec
sub
pop
arpl
inc
fcmovb
data16
scas
cmp
fcomp
and
cs
jge
fiadd
mov
ds
xor
ins
adc
(bad)
and
(bad)
fisttp
mov
pushf
jae
and
xchg
inc
dec
and
repnz
add
push
pusha
sub
sub
arpl
jno
mov
rol
and
rcl
adc
or
adc
jmp
cs
ins
int3
out
and
and
in
lods
inc
push
mov
pushf
mov
inc
(bad)
cmp
lods
mov
inc
pop
stos
idiv
sbb
dec
cmp
js
es
push
push
sub
cmp
jmp
mov
imul
ret
arpl
mov
jmp
push
or
and
jmp
and
fldenv
mov
or
cmp
adc
cmps
jbe
or
sub
add
ror
push
cmp
retf
imul
fmul
(bad)
xchg
mov
inc
jg
clc
imul
mov
jmp
cld
jecxz
sub
pusha
pop
stos
lock
out
push
pop
ror
push
les
mov
xchg
in
or
xchg
aam
mov
sub
or
lahf
ja
mov
fs
(bad)
sbb
xchg
mov
int
lea
pop
mov
jmp
(bad)
adc
sub
dec
inc
or
into
shr
bound
sbb
sbb
pop
hlt
mov
jno
ja
xchg
je
mov
sub
mov
test
jge
iret
test
cmps
and
add
ffree
push
push
push
xchg
mov
repz
js
lods
fdiv
popf
fmulp
in
xchg
das
(bad)
mov
dec
pushf
mov
addr16
push
push
or
add
add
inc
sbb
shl
js
mov
jge
scas
xchg
das
jbe
mov
out
mov
or
dec
mov
jl
fld
sbb
xchg
fiadd
lea
ret
dec
cdq
push
jmp
std
xchg
push
or
vpextrw
lds
jle
sub
mov
fidiv
in
ror
lahf
hlt
pop
xchg
mov
jg
inc
popf
add
cmp
hlt
jmp
pop
rcr
mov
push
or
mov
or
cli
cmp
cmps
data16
out
inc
pop
test
clc
pop
mov
imul
xchg
ins
sub
pop
xchg
xor
xchg
imul
fdiv
aas
xor
jge
leave
in
mov
push
cwde
and
add
int
mov
mov
lods
mov
pop
in
xor
mov
pop
arpl
mov
inc
(bad)
and
imul
xlat
pop
and
jbe
push
xor
mov
xchg
shl
dec
jbe
cmc
mov
out
push
and
lods
int3
inc
inc
xchg
mov
mov
lods
lea
jle
retf
sbb
add
mov
sub
into
shr
sbb
test
adc
xchg
aad
outs
iret
push
popf
jns
in
sub
sbb
jne
xchg
push
enter
fdivr
mov
add
addr16
dec
out
fwait
(bad)
rcl
cmps
mov
movs
pop
cmp
pop
sub
je
ins
inc
mov
outs
or
into
cmp
and
imul
movs
jns
pop
inc
mov
mov
xchg
inc
aad
out
bound
xchg
call
bound
mov
jns
xchg
jo
das
sbb
mov
ret
or
gs
pop
push
iret
push
in
jb
gs
dec
stos
or
push
push
sub
adc
mov
das
in
jmp
pop
mov
popa
xchg
adc
dec
(bad)
push
aam
es
sbb
fs
xchg
pop
ret
movs
adc
mov
mov
in
bound
jae
mov
pop
xchg
mov
mov
jmp
pop
cwde
daa
and
into
test
xor
movs
sar
nop
push
stos
inc
ins
jle
and
mov
shl
xchg
outs
jmp
stc
shr
inc
call
dec
mov
xor
jl
xor
push
or
jle
push
test
xor
inc
push
int
sub
pusha
or
loope
mov
xchg
mov
call
ins
loopne
mov
cmc
fst
pop
(bad)
sub
aad
aaa
inc
mov
neg
mov
pop
mov
xchg
xchg
test
mov
xchg
test
ins
ret
add
adc
(bad)
(bad)
dec
inc
cmp
mov
(bad)
pop
mov
mov
cmp
hlt
mov
ja
shr
sahf
mov
ret
stc
dec
scas
sahf
call
(bad)
test
ds
pop
mov
adc
hlt
lds
loope
mov
arpl
cwde
mov
inc
sub
mov
lahf
jo
and
pop
mov
mov
daa
sbb
sbb
rcr
mov
xchg
stos
sub
or
shr
mov
arpl
sub
repz
movs
ins
dec
out
in
addr16
shl
push
out
in
int
stos
cmps
fisubr
jbe
shr
mov
cmps
cli
leave
pop
call
or
es
retf
cmp
push
mov
mov
pusha
push
pop
gs
push
push
sahf
rcl
and
push
mov
fs
(bad)
stos
ret
pop
imul
repz
mov
sub
les
inc
xchg
cmp
fs
mov
jmp
cld
pop
mov
out
jo
mov
loop
mov
xchg
xchg
retf
lahf
scas
dec
sub
out
clc
imul
fwait
lods
retf
mov
sub
(bad)
stos
fistp
sbb
push
add
arpl
aas
icebp
or
fist
xor
pop
dec
inc
int3
dec
adc
sub
cmc
(bad)
daa
scas
mov
jb
add
data16
ror
loop
das
mov
stc
pop
mov
xchg
mov
sete
sbb
xor
ret
sub
retf
sbb
mov
xchg
test
xchg
push
call
dec
sbb
cmp
fsub
xchg
inc
and
mov
ficomp
aad
rcr
outs
rcr
or
int
mov
sbb
pop
add
mov
mov
jl
test
in
xchg
fisttp
ins
int
popf
inc
mov
imul
mov
into
inc
xchg
pop
pop
int
jg
aas
dec
out
cwde
ins
cmp
aaa
xchg
sbb
popf
in
iret
movs
xor
mov
adc
jnp
sub
sub
vpshld
mov
pop
aas
loop
sbb
push
xor
pop
lock
push
add
addr16
sub
mov
stos
dec
jnp
or
mov
cs
mov
ins
pop
sub
int3
sub
mov
sub
call
dec
shl
std
nop
in
hlt
(bad)
mov
test
cs
fild
jo
push
ret
or
popa
jmp
rcr
jb
xchg
ins
sub
rcr
inc
rcr
rol
mov
adc
and
pop
daa
dec
je
or
in
and
enter
mov
mov
ret
ins
(bad)
lock
push
sahf
out
sub
mov
xchg
(bad)
fnstsw
retf
xchg
and
mov
and
cmp
pop
int
xchg
nop
jmp
mov
push
loope
ja
sbb
stc
out
mov
shl
push
arpl
addr16
daa
(bad)
mov
stos
push
mov
mov
xor
popf
das
idiv
and
lahf
or
fmul
retf
pop
data16
dec
hlt
and
in
or
mov
stos
lahf
push
jle
xchg
inc
dec
hlt
sub
test
inc
iret
cld
data16
pushf
jb
sbb
mov
xlat
cmp
or
sbb
ds
in
adc
xor
mov
mov
loop
xor
aam
jno
pop
(bad)
fwait
es
inc
dec
sbb
dec
sbb
dec
and
mov
lea
fst
push
and
mov
cmps
movs
scas
stc
addr16
inc
sahf
push
jbe
push
enter
pushf
dec
mov
cs
mov
std
(bad)
dec
pop
mov
xchg
repz
sub
fldcw
mov
push
fdiv
sub
es
call
cmc
dec
ja
lock
push
in
jge
shr
pop
adc
jb
xchg
sbb
ret
xchg
push
clc
rcr
in
jb
xchg
pop
leave
pushf
fisttp
retf
test
test
jle
sbb
fabs
mov
mov
mov
stc
rcl
mov
sbb
loop
dec
jbe
mov
stos
ret
dec
or
or
fdiv
mov
lea
xor
dec
sub
mov
arpl
ret
add
iret
mov
test
pop
lahf
scas
xor
aad
pusha
cmp
cmp
leave
mov
pop
push
jns
fld
mov
arpl
push
mov
adc
cmp
sbb
push
(bad)
aam
xor
fwait
outs
mov
ja
cmp
sub
neg
not
call
jnp
xor
jle
dec
jbe
add
pop
ss
test
into
ret
test
dec
mov
cs
push
fyl2x
or
es
jge
imul
fdiv
ins
ins
sub
mov
mov
push
stc
lods
mov
fmul
cs
ret
js
outs
and
enter
(bad)
rcr
fimul
cmp
mov
xchg
push
and
rcr
stos
and
bound
shl
xchg
test
je
mov
test
xchg
pop
push
inc
xchg
stc
adc
call
xor
int3
push
out
xchg
in
pop
pop
addr16
add
bound
mov
inc
add
and
fs
fnsave
add
(bad)
(bad)
jecxz
mov
in
ret
cmp
clc
in
adc
dec
push
mov
not
mov
nop
add
fs
ror
push
aas
lahf
or
scas
xlat
fild
(bad)
cwd
mov
and
arpl
enter
push
jbe
jbe
in
lods
mov
pop
jecxz
and
nop
jmp
and
push
xchg
lods
adc
enter
arpl
(bad)
sbb
int3
popf
jg
push
sbb
mov
xchg
fcmovu
cmp
sbb
xchg
in
loope
jns
cmps
xchg
arpl
(bad)
in
sub
sub
or
clc
jg
in
ror
outs
shl
ja
mov
sub
ins
retf
call
hlt
push
xchg
lock
arpl
or
dec
xlat
popf
mov
imul
aaa
mov
bound
loope
repz
mov
push
or
dec
std
je
mov
test
sbb
repnz
dec
data16
lea
ja
int
outs
ds
(bad)
sar
jle
cmp
lds
mov
jmp
jecxz
(bad)
adc
jmp
push
or
rol
mov
and
mov
mov
outs
dec
aam
not
sub
stos
repnz
cli
xor
hlt
mov
shr
cmp
xchg
pop
int3
mov
or
mov
push
jge
dec
mov
sub
retf
xor
ja
push
lock
cmps
js
enter
into
mov
int3
stos
mov
rcr
or
cmp
fistp
xor
add
cs
sub
and
je
or
mov
ja
out
xchg
xchg
in
aaa
icebp
loop
cmc
and
pop
clc
cli
test
mov
cs
nop
in
push
mov
xor
pop
sqrtps
sar
rol
popf
mov
rcr
mov
ds
or
movs
scas
popf
push
xchg
xchg
jb
mov
leave
leave
mov
imul
out
inc
mov
add
push
mov
push
call
pop
ret
mov
xchg
cmp
movs
das
push
pop
dec
loope
into
inc
push
hlt
add
pusha
mov
in
loop
jae
retf
in
das
pop
sub
lahf
or
jbe
jle
or
mov
jo
pusha
mov
lea
cmps
xchg
mov
push
add
xor
jbe
mov
mov
add
pop
in
into
xchg
cwde
pusha
popf
or
adc
sub
and
sahf
sbb
(bad)
xchg
and
sub
add
popf
les
daa
mov
jp
rol
xchg
cmps
fisttp
call
or
push
push
outs
retf
aas
sahf
lods
mov
cdq
faddp
add
jbe
and
mov
ret
dec
retf
iretw
retf
ror
lods
popa
fwait
push
sub
iret
inc
xchg
ins
pop
add
jnp
daa
pop
ja
dec
push
stc
sbb
fnstenv
mov
lods
scas
jmp
jp
mov
mov
repz
ja
mov
push
push
adc
sub
jmp
aam
hlt
xchg
mov
cmps
mov
pop
ins
inc
fdivr
mov
lods
pushw
mov
inc
test
(bad)
ret
jmp
pop
jecxz
mov
add
cmp
test
or
mov
dec
fldcw
pop
movs
mov
adc
cdq
fnstcw
test
lds
sahf
aas
cs
mov
xor
sbb
sahf
jbe
jb
mov
aam
xlat
dec
es
xor
jp
cdq
setle
sbb
iret
add
jecxz
aas
pusha
frstor
mov
pop
daa
cmp
jmp
xor
int
data16
lea
fsubr
and
sbb
out
or
repnz
jmp
shr
push
neg
pop
jnp
pop
mov
test
pusha
shr
mov
jmp
retf
pop
sbb
push
div
jo
sbb
jecxz
popf
add
jb
push
ja
test
sub
and
jo
mov
adc
push
ins
mov
push
xchg
sub
std
movs
sub
cmps
and
xchg
int
sub
mov
xor
push
into
and
and
imul
inc
jo
adc
push
mov
dec
int3
mov
fnop
lea
icebp
push
cmps
adc
nop
retf
xor
sbb
mov
(bad)
mov
xor
dec
or
leave
daa
mov
and
fidivr
jo
push
ret
sbb
ins
jne
jne
pop
in
sbb
xor
xchg
jae
inc
cwde
adc
pop
jle
test
jns
dec
or
or
sub
mov
dec
xchg
ins
mov
jmp
dec
cmps
das
sbb
xchg
xchg
ror
(bad)
retf
inc
pop
nop
fimul
ror
pop
mov
cmp
ins
lds
jo
mov
ficom
mov
hlt
pushf
or
mov
xor
xchg
imul
xor
mov
fcomp
cld
push
push
ds
jae
and
mov
fldcw
aam
or
repnz
in
cmp
xchg
jmp
lods
push
shl
out
lea
ins
lock
add
shl
xchg
adc
loop
push
adc
xchg
outs
lock
es
jmp
cwde
jo
in
jae
fs
out
je
lahf
and
xchg
nop
mov
inc
sub
xchg
and
fcom
sbb
stc
and
fwait
sbb
icebp
push
jne
stc
push
xlat
sub
mov
mov
xchg
aaa
inc
sub
xor
mov
pop
es
imul
mov
lahf
mov
lds
mov
adc
pop
lock
in
popf
pop
retf
jno
adc
ins
std
push
mov
je
mov
dec
mov
fwait
test
iret
mov
mov
jle
outs
or
jmp
fadd
into
mov
pop
xchg
popa
loope
rcl
cmp
push
mov
(bad)
scas
xchg
jno
push
mov
cmp
leave
cdq
test
jne
(bad)
aad
mov
scas
sub
xor
(bad)
sbb
adc
ins
or
int
mov
add
sbb
ret
pop
xchg
nop
mov
sub
jns
es
js
(bad)
pusha
nop
cmp
inc
xchg
and
push
mov
adc
pushf
int
adc
out
xor
xor
aad
mov
imul
or
fcom
jle
add
in
retf
adc
movs
sti
or
add
ret
pop
out
jae
stos
pop
imul
mov
pop
jns
inc
ror
sub
ins
stos
hlt
ror
push
daa
and
sub
xchg
add
xchg
xchg
es
ds
inc
je
scas
mov
inc
push
mov
adc
mov
loop
jl
cmp
out
push
icebp
add
push
jmp
jbe
shl
mov
fidivr
ja
test
into
ds
inc
sub
rcr
lds
xchg
mov
ds
push
sbb
sub
int3
(bad)
outs
jo
movs
push
add
shl
sub
loop
jge
and
add
dec
mov
in
pop
sbb
jne
push
pop
add
je
pop
xchg
lods
xor
sbb
or
je
xor
call
adc
out
jno
mov
or
pop
scas
sub
cmp
pop
shl
dec
inc
call
lods
test
push
add
mov
or
mov
popa
jb
jo
pushf
sbb
push
xchg
outs
cld
clc
mov
sub
add
or
mov
or
xchg
or
and
retf
lea
xor
lea
mov
sbb
jmp
addr16
inc
mov
sahf
cld
jecxz
and
retf
js
je
jo
mov
pop
popf
test
sbb
dec
jmp
xor
loopne
pop
mov
inc
xchg
fst
jmp
retf
punpckhbw
aad
sar
sahf
pushf
sub
imul
repnz
xchg
xchg
test
push
mov
mov
add
mov
icebp
jne
mov
xchg
leave
add
xchg
xor
gs
mov
xchg
mov
or
in
arpl
daa
das
push
sub
add
dec
mov
mov
int
in
adc
les
xor
gs
mov
dec
adc
pop
mov
ds
mov
test
int
jge
cmp
inc
sub
cmp
xchg
mov
mov
sbb
lods
mov
push
mov
shr
imul
hlt
xchg
je
fidiv
jns
and
mov
mov
push
or
cmps
or
loopne
and
mov
pop
je
mov
jp
jne
leave
and
lods
mov
sbb
call
jecxz
jne
or
mov
jge
scas
pop
js
cld
dec
cdq
push
inc
test
mov
cmps
mov
add
arpl
push
scas
xchg
mov
inc
mov
scas
cmp
popf
sar
dec
mov
mov
push
(bad)
adc
(bad)
adc
pop
cmp
and
jb
sahf
and
sbb
mov
ret
pop
mov
popaw
outs
inc
fs
fcom
repnz
aas
and
dec
add
sbb
cmps
rcr
mul
xchg
push
xor
addr16
(bad)
out
sub
mov
dec
outs
lahf
sbb
pop
or
push
cmp
shl
or
adc
data16
sub
cmc
call
int3
mov
pop
inc
push
push
js
mov
nop
push
iret
stos
ja
test
in
rcl
movntps
mov
into
mul
shr
xor
cwde
cld
js
adc
mov
adc
push
loopne
sbb
mov
test
mov
mov
mov
mov
xor
pop
sbb
add
mov
aam
pop
add
xor
dec
sti
mov
dec
out
sbb
imul
jae
adc
sub
push
(bad)
jnp
fisttp
fstp
or
arpl
mov
into
inc
not
retf
data16
not
xchg
push
sti
cmc
repz
and
cmp
shl
dec
fs
lods
pop
mov
adc
icebp
fs
cmps
std
retf
iret
dec
sub
sahf
cmc
push
stc
mov
test
pop
loope
dec
push
aad
rcr
bound
cmp
sub
mov
jo
outs
sub
inc
jo
retf
popf
add
aam
jb
aas
or
pop
sub
les
shr
add
inc
test
pop
stos
fisttp
mov
push
push
xor
fs
ins
repnz
call
pop
imul
test
sbb
aaa
into
xchg
mov
popf
sub
arpl
dec
jp
mov
retf
cwde
std
cmp
loope
dec
sahf
rcl
lods
aam
mov
ret
ja
outs
sbb
sar
mov
add
movs
mov
ret
cmp
pushf
mov
mov
pop
xchg
add
pop
push
(bad)
nop
mov
ins
repnz
iret
inc
dec
icebp
das
sbb
push
xor
outs
lods
popf
xor
or
movs
lods
test
sub
popf
push
dec
gs
call
jmp
jno
jns
xchg
pusha
xchg
pop
fild
nop
enter
pusha
xchg
int3
dec
xchg
cmp
je
mov
adc
call
or
xchg
jno
loopne
add
jbe
rcr
iret
js
jge
push
ds
in
bound
inc
mov
stos
or
and
jns
inc
aas
jne
cdq
aaa
lock
popf
mov
js
xor
add
fild
cmp
sub
cmp
shr
mov
jns
imul
pop
adc
popf
jmp
pop
(bad)
imul
out
js
pop
mov
push
lahf
push
jne
(bad)
inc
dec
mov
cmp
rol
rcr
push
mov
jg
mov
xor
not
dec
mov
leave
mov
stc
imul
lea
mov
or
aam
inc
pop
popa
std
pop
xor
add
push
or
inc
or
pop
jecxz
popf
nop
das
inc
outs
dec
outs
loopne
jae
inc
or
mov
hlt
in
jbe
mov
and
or
add
call
aad
or
dec
add
xchg
jne
jge
dec
and
push
movs
rol
xlat
mov
lods
cmp
int
mov
pop
ret
les
add
mov
mov
outs
jmp
retf
sbb
mov
xor
sti
test
jne
and
daa
cmp
add
imul
xor
fsubr
out
sub
jo
fisub
xlat
and
mov
int3
je
jno
and
fld
push
leave
outs
cwde
cmp
mov
cld
test
out
xlat
xlat
fcom
push
cli
mov
jb
xchg
mov
mov
mov
jl
inc
inc
sub
adc
fld
sub
cwde
lock
clc
adc
mov
ret
iret
scas
int
mov
fcomi
jecxz
fst
mov
cmps
cdq
loopne
popa
mov
adc
fild
xlat
(bad)
mov
pop
xchg
jbe
shl
lods
pop
cmps
cmp
enter
test
ficom
fstp
mov
mov
fst
sub
stos
push
jne
lock
dec
retf
pop
mov
test
inc
mov
loope
add
sbb
fldcw
ja
jmp
jne
and
dec
fstp
iret
mov
xor
xor
cdq
jl
mov
test
pop
cmp
mov
out
add
mov
(bad)
xchg
loope
(bad)
fidiv
stos
std
jnp
adc
xor
adc
xchg
or
and
loopne
push
dec
sub
push
pop
cli
sub
cmps
sub
movs
fs
sbb
out
push
xor
fstp
test
sub
mov
mov
fadd
xor
cmps
js
sar
mov
xchg
xchg
and
xchg
jl
dec
push
ret
ins
xchg
je
push
into
(bad)
cmps
push
ins
ds
lahf
mov
(bad)
rcr
clc
dec
fmul
mov
xchg
imul
es
ss
sub
adc
jb
jecxz
xor
xlat
bswap
mov
add
icebp
and
adc
pop
add
and
pop
xchg
aam
cwde
adc
test
ja
mov
mov
packsswb
cmps
mov
jmp
pop
mov
cwde
ret
mov
adc
mov
adc
or
mov
popf
dec
jne
mov
cwde
scas
mov
cwde
fwait
mov
push
mov
pop
pop
mov
and
test
jge
mov
dec
test
and
sub
cmp
std
mov
imul
cdq
cli
xor
imul
mov
rcl
xor
jmp
xchg
mov
imul
sbb
adc
xor
mov
mov
es
aam
cmp
mov
mov
cmp
sbb
iret
mov
cs
dec
popf
ins
mov
xor
js
xchg
int
in
lds
aam
loope
jbe
xchg
mov
(bad)
or
in
xchg
in
push
fst
daa
bound
mov
mov
push
mov
push
fstp
mov
rcr
add
jo
(bad)
mov
rcl
mov
pop
cdq
leave
inc
mov
xor
mov
out
ins
push
mov
lods
ins
mov
cwde
mov
icebp
xchg
int
ja
jns
jmp
inc
mov
shr
shl
cmp
xchg
ja
sbb
lea
inc
mov
leave
int
push
sub
mov
sbb
cmp
xor
dec
cmp
dec
out
jns
cdq
mov
sbb
push
jo
ins
pusha
dec
sub
dec
push
mov
jmp
movs
jecxz
mov
cmp
pop
aas
push
or
dec
inc
dec
dec
sbb
scas
pop
mov
sub
xor
cli
bound
push
or
mov
(bad)
xlat
outs
mov
shl
mov
dec
inc
xchg
mov
cmp
daa
xchg
or
sbb
gs
cmp
lds
xchg
adc
mov
push
or
ins
adc
je
lahf
cmp
lahf
adc
es
ror
stos
fsub
hlt
and
popf
ins
adc
test
cmp
sub
mov
sub
fsubr
xlat
jae
push
jns
aas
jecxz
fmul
and
fild
shl
test
jle
(bad)
gs
repnz
mov
movs
xchg
push
pop
sbb
arpl
movs
je
call
mov
push
rol
xlat
test
push
push
or
aam
outs
xchg
mov
mov
pushf
inc
fild
into
push
dec
mov
pop
ror
stos
mov
adc
xchg
jno
and
jp
push
test
pop
jle
cmps
sahf
jmp
pop
xchg
pop
xor
push
rcl
test
test
aad
sti
and
lea
sbb
add
fs
fnsave
xchg
xchg
pushf
mov
jp
mov
movs
dec
sub
ins
push
(bad)
int
(bad)
adc
popf
adc
inc
mov
retf
hlt
icebp
ror
pop
push
cli
push
jae
push
lock
mov
arpl
pop
idiv
retf
jnp
pop
mov
hlt
popa
lea
push
imul
das
in
data16
mov
pop
mov
(bad)
jmp
mov
mov
xor
or
jg
mov
fwait
push
mov
adc
or
cmps
xlat
jns
sbb
shl
ror
cmp
bound
adc
std
xchg
mov
adc
(bad)
mov
push
aaa
pop
lea
mov
daa
ret
lds
pop
addr16
push
aam
mov
push
jbe
mov
ins
jge
mov
xchg
dec
sbb
lds
jae
jle
push
sbb
mov
pushf
xchg
popf
pop
add
jmp
shl
aaa
popa
dec
cdq
mov
mov
mov
adc
xor
shl
int3
imul
stc
push
xor
dec
les
int
in
test
inc
fld
mov
fdiv
repz
ins
aad
inc
jmp
inc
mov
jp
push
test
leave
hlt
pusha
lahf
gs
div
les
aad
rcr
push
(bad)
movs
adc
fstp
dec
mov
add
inc
outs
lock
daa
or
mul
cmps
int
fiadd
sahf
xor
sahf
push
test
mov
sar
in
jne
and
nop
call
dec
outs
jp
inc
movs
sub
xchg
inc
xor
sahf
jno
jns
jmp
mov
mov
mov
test
dec
retf
mov
inc
xchg
dec
jmp
mov
add
xor
jmp
inc
mov
les
push
js
xlat
sbb
sub
imul
test
in
(bad)
std
mov
into
aam
sbb
stc
js
cmp
xchg
ins
adc
mov
movs
inc
jno
xchg
das
jns
mov
shl
push
jb
hlt
movs
push
ds
mov
rcl
popf
in
inc
sub
mov
sbb
mov
dec
cmps
push
adc
fstp
inc
loop
lods
ds
hlt
pop
fwait
xlat
push
adc
push
shr
sti
dec
xchg
cs
jl
add
dec
std
mov
(bad)
stc
daa
mov
xchg
sbb
inc
inc
cmp
cmp
mov
or
mov
cmps
mov
fdivr
jg
xchg
into
xchg
dec
mov
push
les
mov
rol
or
addr16
add
xor
push
sub
cdq
call
dec
fwait
int3
aam
mov
and
add
mov
add
popf
push
les
xchg
mov
pop
inc
rcr
ret
ins
mov
dec
mov
jbe
inc
jg
xchg
out
or
int3
nop
pop
movs
pushf
push
jmp
sti
and
or
les
(bad)
fwait
mov
mov
push
dec
shr
movs
pop
int
rcr
(bad)
mov
pop
xor
ret
add
push
ja
mov
mov
xchg
loop
lahf
xor
arpl
mov
(bad)
mov
out
mov
xchg
push
out
cdq
cld
ins
fiadd
in
ret
retf
ret
movs
jo
popa
out
sbb
and
scas
pop
jp
pop
jae
jo
jns
jb
popf
stos
test
sar
sti
fist
nop
ins
inc
push
xchg
pop
pusha
int3
sub
push
push
mov
icebp
into
xchg
mov
sub
pop
xchg
inc
pop
sti
dec
in
and
movs
mov
sub
pop
cmp
inc
mov
ror
test
push
pop
cld
test
retf
mov
pop
les
mov
push
stos
scas
and
int
test
mov
and
mov
int3
mov
rcr
mov
jge
inc
push
sar
xor
lahf
add
mov
jl
dec
data16
je
jbe
xchg
cmps
pop
rcl
(bad)
icebp
adc
inc
fist
xor
push
adc
pushf
shl
push
push
popa
mov
daa
inc
mov
fwait
cmc
xchg
in
adc
xchg
stos
and
fwait
bound
push
pop
push
repnz
inc
dec
xor
push
retf
ret
je
pop
dec
xlat
lea
add
cmc
sub
cmp
loope
xor
loope
xor
xor
ss
xor
loope
xor
cmp
push
loope
xor
cmp
push
loope
xor
inc
xor
xor
inc
xor
inc
xor
loope
xor
dec
xor
dec
xor
loope
xor
dec
sbb
mov
xchg
fcom
lds
mov
frstor
js
sub
lds
rcl
and
adc
jmp
loope
rcr
dec
sbb
mov
(bad)
loope
mov
test
rol
push
cdq
jl
xor
mov
(bad)
mov
mov
aad
pusha
iret
sub
mov
ja
push
pushf
lods
xchg
and
test
sub
jns
ror
jne
out
cmc
data16
mov
or
loop
mov
mov
xchg
ficom
mov
arpl
sahf
les
ins
dec
or
in
fwait
push
inc
mov
add
int
dec
or
pop
dec
mov
jmp
jbe
jbe
rcl
mov
and
fstp
sar
stos
mov
in
ret
inc
xlat
fdiv
push
adc
xchg
dec
fwait
(bad)
arpl
das
lea
mov
popf
stos
mov
add
sbb
xor
fwait
cvtps2pd
fiadd
pop
sbb
xchg
dec
xor
into
and
fwait
aad
mov
fs
(bad)
xchg
fcom
int
mov
lahf
addr16
and
aaa
mov
or
jbe
lea
bound
mov
push
int3
inc
mov
loopne
and
mov
mov
push
pop
(bad)
cmps
shl
rol
and
aam
test
into
arpl
mov
mov
xchg
xlat
stos
lods
lds
adc
fdiv
adc
aam
aam
jmp
test
dec
fstp
inc
imul
xchg
dec
stos
in
setno
fs
mov
mov
mov
adc
push
sti
movs
sti
pop
fsubr
shr
js
es
mov
jp
xchg
add
test
hlt
lds
jg
lock
push
loopne
push
or
mov
jae
test
in
inc
gs
aam
xchg
nop
fld
pop
int
xor
lock
adc
scas
sbb
push
not
mov
inc
xchg
repnz
inc
inc
pushf
and
gs
ficomp
and
jbe
pushf
inc
outs
push
mov
or
icebp
or
cmp
jne
ja
clc
sti
mov
imul
xchg
xor
jae
jl
xor
xchg
jb
fnstcw
jmp
aas
cmp
sub
in
or
rcr
lock
mov
mov
mov
pop
jae
not
lahf
pop
mov
xor
rcl
inc
mov
(bad)
mov
xchg
loope
xor
ins
movs
push
mov
xchg
xchg
add
mov
xchg
xor
ret
jno
pop
shl
xchg
pop
xchg
push
and
push
loopne
adc
repnz
fsub
mov
add
or
(bad)
pop
dec
jae
outs
into
call
enter
mov
sti
inc
adc
(bad)
mov
int
pop
xchg
in
popf
movs
out
test
fcom
or
test
sbb
jmp
jo
push
gs
pop
fisubr
mov
mov
arpl
inc
sahf
cmp
icebp
cld
sbb
test
jnp
sar
dec
mov
sub
sub
sbb
loopne
add
xchg
or
jle
push
shl
mov
mov
adc
nop
jne
sbb
mov
sbb
push
xchg
fdivrp
mov
sub
lods
out
jl
scas
sbb
mov
add
sahf
mov
xchg
jne
inc
jns
and
mov
mov
push
add
popa
pop
push
cmp
adc
cld
sub
push
rcr
fucomip
mov
sub
jge
sbb
movs
ror
fld
fcomip
mov
pop
ret
jle
lahf
adc
mov
and
scas
movs
pop
add
mov
and
push
cld
push
iret
js
inc
shl
cmps
or
retf
loopne
jns
mov
fwait
test
lods
inc
xor
xor
mov
jne
adc
xor
ja
bound
repnz
mov
sub
cmp
xchg
jl
xchg
add
aaa
imul
or
ins
lea
test
shl
jo
stc
pop
jb
nop
lea
pop
cmp
push
inc
mov
repnz
push
gs
js
cmp
ja
call
mov
int
test
(bad)
fisubr
shr
cmp
adc
mov
out
pop
es
push
sub
in
adc
jmp
xchg
inc
test
mov
fisttp
mov
mov
popf
sbb
add
mov
mov
imul
ret
mov
adc
jbe
inc
mov
push
dec
les
lea
mov
dec
add
adc
or
xchg
jb
fistp
add
(bad)
sti
add
xchg
iret
mov
scas
int3
(bad)
cmps
jne
xor
dec
mov
popa
jecxz
cs
icebp
mov
lods
jno
sub
aad
jecxz
sbb
ret
sahf
fisttp
inc
fs
inc
cmp
rcl
outs
dec
dec
pop
ror
pusha
dec
pop
xchg
adc
std
ins
int3
pop
cmc
jge
out
mov
nop
data16
adc
add
mov
popf
xchg
jp
or
scas
add
ins
and
pop
and
enter
push
js
ret
xchg
mov
push
scas
pop
adc
xchg
fwait
hlt
fwait
and
dec
jo
sti
enter
loope
sbb
dec
jle
aas
dec
ja
aam
imul
xchg
out
push
loop
cmp
xchg
and
mov
pop
aas
mov
nop
xchg
sub
cdq
ficom
mov
sub
add
push
je
push
xchg
mov
(bad)
cmps
popf
xchg
cmp
xor
(bad)
fisub
mov
rol
test
push
jae
int
push
(bad)
js
aaa
add
jecxz
push
pop
shr
fadd
jno
xchg
jae
clc
mov
aas
add
pop
sahf
pop
pop
(bad)
scas
std
mov
sbb
or
mov
inc
xor
jnp
popa
lods
xor
push
mov
cmp
adc
mov
out
and
fsub
pop
arpl
mov
pop
imul
mov
jbe
fnstcw
xor
add
ja
lock
movs
mov
mov
mov
fistp
ret
fwait
(bad)
mov
ja
rcr
(bad)
stos
mov
lds
or
inc
pop
pop
(bad)
imul
mov
js
in
mov
int
mov
daa
rcl
mov
pop
test
popa
loop
cmps
not
mov
les
loope
mov
jg
gs
xchg
mov
add
aam
push
iret
and
adc
(bad)
push
xchg
js
in
int3
mov
addr16
inc
imul
stos
mov
inc
test
or
push
cmps
xchg
fisubr
inc
jae
fistp
xchg
jmp
aam
pop
jge
aas
pop
rcr
loopne
mov
jo
leave
mov
aas
jns
mov
sub
test
pop
(bad)
xchg
je
cld
mov
imul
fisttp
xchg
sbb
mov
sahf
outs
xchg
popf
xchg
hlt
fwait
outs
cld
mov
loop
in
jg
test
xor
mov
daa
sub
jb
sub
mov
iret
js
pop
popf
dec
add
(bad)
out
jo
lea
and
int
xchg
aad
out
dec
popf
hlt
jo
xchg
loopne
test
jl
sbb
dec
cld
pop
and
nop
aas
pop
imul
pop
dec
pushf
test
or
les
cmp
jo
je
cmps
aam
or
mov
push
and
sahf
loop
imul
enter
xor
ficom
pop
movs
fistp
xchg
jp
cmp
rol
inc
ret
int3
inc
shl
dec
sbb
cmp
mov
shl
data16
jo
sub
xor
test
mov
push
(bad)
cmc
test
jl
nop
and
in
mov
mov
outs
sub
mov
xchg
mov
sar
iret
mov
jge
mov
add
in
ins
dec
mov
movs
add
xchg
fiadd
aas
loopne
dec
popf
movs
adc
mov
dec
xor
fsubr
and
adc
in
(bad)
mov
lods
data16
jnp
fist
gs
int3
add
jge
or
cdq
inc
dec
mov
std
inc
jp
jmp
jmp
or
out
(bad)
mov
adc
fist
jne
push
and
pusha
jns
fidiv
mov
pop
jmp
bound
cmp
lds
dec
push
pop
mov
cli
imul
mov
or
in
xchg
mov
sub
jmp
dec
cdq
xchg
pop
inc
add
push
mov
push
test
jp
imul
and
xchg
sbb
push
dec
repz
jbe
test
jle
mul
push
dec
xor
fstp
ror
add
mov
push
pushf
xchg
mov
jns
inc
sub
or
inc
mov
fild
ins
lds
jmp
add
int3
popf
push
mov
dec
fcomp
shl
cld
xchg
sbb
pop
lods
nop
mov
inc
pop
mov
inc
out
mov
adc
adc
int3
mov
fmul
addr16
sbb
fs
sub
mov
mov
scas
andnps
fidivr
rol
mov
out
(bad)
cwde
popf
repz
ss
call
push
fwait
loopne
and
imul
dec
fadd
lea
mov
popa
out
mov
fs
push
lods
cmp
outs
mov
ins
jg
gs
lods
test
fisttp
aad
adc
adc
push
jecxz
or
cld
or
adc
xor
push
aad
mov
push
xor
repz
lock
loopne
adc
scas
push
mov
scas
repnz
cmp
mov
jns
sbb
pushf
pop
sbb
stos
iret
cs
retf
shr
pop
mov
xor
xor
ja
xor
enter
dec
js
cld
adc
xchg
out
jne
jl
outs
shl
mov
ins
sub
pop
pop
dec
repnz
or
push
pop
jecxz
dec
add
mov
sbb
popa
xchg
test
(bad)
je
pop
test
mov
mov
or
adc
fisttp
int
fwait
push
mov
call
and
fs
mov
in
lahf
lods
xchg
mov
push
mov
call
sbb
mov
sbb
mov
test
retf
or
inc
xchg
sbb
jbe
mov
push
push
mov
test
xchg
push
stos
cmps
inc
mov
sub
or
mov
jbe
fwait
pop
adc
pusha
pop
or
mov
mov
imul
retf
push
sub
pusha
(bad)
and
pop
inc
scas
cs
sti
pop
pop
das
fisttp
mov
cmp
pop
sub
cs
push
fcomp
mov
outs
add
imul
ss
sbb
repz
add
mov
ret
cmp
jle
ret
sub
shl
jbe
sbb
pop
adc
cs
mov
cdq
icebp
push
ret
loope
push
and
je
cmp
adc
les
push
test
dec
or
(bad)
lahf
cmp
jno
retf
mov
and
(bad)
pop
xchg
int3
jns
add
mov
xchg
push
ja
leave
ins
jle
je
test
mov
mov
arpl
out
add
xchg
sbb
cmp
inc
cli
pop
and
dec
add
mov
or
iret
mov
jge
adc
aam
aaa
enter
mov
movs
inc
ret
mov
push
push
dec
or
pusha
and
mov
dec
ja
xlat
jge
xchg
cmp
stos
movs
(bad)
fmulp
sbb
push
cld
adc
and
retf
or
out
lea
aam
adc
and
push
pop
mov
ret
cwde
sub
mov
nop
enter
inc
int3
jae
pop
retf
ret
xchg
xor
popa
dec
movs
rcr
mov
jne
jg
dec
aam
xor
cld
add
jnp
fdiv
add
adc
out
(bad)
jle
mov
inc
mov
pop
mov
inc
xor
pop
mov
xchg
push
mov
fimul
inc
mov
lds
adc
(bad)
and
push
aaa
ror
(bad)
jbe
and
mov
xor
cmp
cmp
xchg
js
aam
in
push
popa
jg
add
pushf
mov
xchg
mov
mov
test
cmp
push
mov
add
lock
push
je
jbe
nop
inc
mov
loope
xor
mov
xor
and
dec
xchg
push
add
pop
cmp
lds
shl
aam
pop
stos
dec
outs
inc
aad
(bad)
adc
stos
inc
mov
jecxz
xchg
in
lea
xchg
stos
adc
dec
push
adc
jns
imul
jae
in
push
into
sub
cmp
mul
cmp
test
sbb
add
sbb
jg
push
ret
jp
inc
test
fs
adc
jle
pop
ror
or
push
mov
pushf
not
in
ins
sub
xor
cmp
data16
popa
xor
lods
push
xchg
(bad)
in
mov
xor
enter
jl
sbb
fmulp
sbb
daa
and
loop
or
xlat
or
xor
sahf
(bad)
mov
sbb
js
mov
dec
fadd
mov
sbb
lea
sub
cdq
aas
sub
and
int
push
xor
pop
sub
cmp
outs
xor
mov
inc
(bad)
push
int
es
sub
ins
mov
(bad)
dec
cwde
scas
stc
mov
sub
or
sbb
test
jle
(bad)
mov
cmp
inc
cmps
pop
xor
ss
in
mov
push
xlat
sub
mov
mov
data16
jne
lods
hlt
add
not
rcr
push
dec
stos
jne
xchg
push
pop
xchg
mov
(bad)
shl
inc
pop
mov
sub
out
ss
push
cmps
es
xchg
iret
nop
inc
ret
pop
jno
(bad)
push
icebp
pushf
rcr
(bad)
cdq
xchg
mov
pop
or
mov
xchg
mov
sbb
les
mul
daa
push
ror
mov
xchg
clc
xchg
mov
ss
int3
add
shl
call
jl
sbb
mov
in
popf
mov
stos
jge
pop
rcr
(bad)
nop
jae
fcomp
xchg
inc
mov
add
popa
jae
pop
xchg
dec
jno
inc
push
sbb
sub
aam
ins
dec
add
out
call
mov
sub
in
mov
(bad)
adc
cmp
call
jb
or
push
les
sub
xchg
mov
and
push
cmc
add
xchg
fs
cld
lods
jb
test
sbb
arpl
je
movs
mov
lock
mov
mov
imul
(bad)
stos
(bad)
dec
jl
fwait
push
sar
dec
mov
into
sti
jle
cmp
lock
adc
mov
ja
xor
dec
test
mov
jg
dec
ins
loope
std
sub
inc
stc
arpl
sub
ins
sub
sbb
fnstenv
jecxz
add
or
xchg
jl
retf
push
dec
js
pushf
mov
xor
jo
jmp
cdq
aaa
mov
int
jne
aas
push
retf
dec
cmp
retf
dec
(bad)
mov
push
fist
jp
ss
and
jns
outs
sub
fidiv
add
test
xor
bound
jbe
retf
gs
test
and
xchg
je
pop
ret
xchg
push
push
repnz
js
test
add
in
or
lea
popf
mov
aam
or
xor
pop
das
and
(bad)
test
movs
jnp
outs
sub
and
cmp
xor
je
lahf
enter
lea
cdq
lods
in
push
enter
cmp
cmp
sti
mov
ds
and
xor
jl
shr
mov
inc
mov
adc
mov
xor
pop
jle
jge
jbe
mov
sub
sahf
sbb
and
mov
xchg
inc
sub
xchg
jae
cmps
(bad)
push
fsub
mov
gs
jle
pop
or
jg
xor
push
xchg
sbb
rcl
inc
lea
jo
push
pop
neg
and
fnsave
jmp
cmp
sub
lods
jecxz
ja
pop
mov
inc
mov
adc
inc
mov
and
test
inc
and
and
mov
sub
jmp
dec
sub
push
sbb
push
ds
lods
dec
fst
push
adc
jg
test
mov
addr16
pushf
xor
mov
es
adc
mov
pop
js
lds
push
add
push
js
ret
fwait
add
jge
and
je
push
mov
xor
mov
or
test
inc
cmc
and
js
nop
sti
push
je
mov
or
arpl
xor
nop
inc
dec
gs
fwait
push
sbb
shl
jge
fldcw
and
adc
mov
aaa
jg
sar
and
jg
xor
jp
loopne
mov
jge
gs
mov
arpl
push
jge
cs
punpckhdq
xor
ja
ret
pop
cmps
adc
test
jbe
je
fwait
cli
cmp
jae
dec
inc
outs
repnz
arpl
outs
out
lds
push
in
shl
cdq
mov
mov
adc
mov
sub
shl
mov
push
jbe
enter
nop
cwde
clc
jl
aaa
sahf
push
popf
dec
jle
xor
jbe
mov
mov
stc
into
and
and
push
mov
dec
test
mov
ds
retf
inc
ins
fld
push
mov
xchg
dec
nop
xor
pop
add
enter
sub
cwde
dec
shr
jo
jne
fdivr
int3
push
push
nop
push
cmp
xor
xchg
mov
inc
sti
repz
fsubr
mov
stos
lahf
(bad)
jge
repnz
or
sub
dec
cmp
inc
daa
jb
cmps
cld
leave
(bad)
push
cli
push
loop
pop
imul
inc
or
(bad)
imul
mov
xor
jbe
mov
int3
stos
call
mov
or
xor
xchg
mov
scas
adc
mov
jae
mov
ror
cmp
xor
sub
jns
into
jge
ja
or
push
mov
inc
cmps
xchg
xor
mov
sahf
paddsw
mov
jp
div
ss
ds
mov
and
popf
push
push
(bad)
xchg
mov
das
je
jge
xchg
rol
dec
aam
push
or
gs
dec
in
iret
xor
push
int
call
mov
xlat
inc
fnsave
push
arpl
div
xor
inc
pop
inc
(bad)
in
sub
retf
jl
rcl
ror
cmc
pusha
jns
push
pop
stc
dec
repz
ds
in
xchg
and
push
mov
call
cmp
mov
jl
xor
mov
and
inc
cdq
outs
popf
inc
movs
sbb
lods
sub
fistp
cdq
inc
scas
cwde
sbb
sbb
bound
push
xor
fwait
ins
and
fs
dec
cmp
outs
jns
sub
ret
push
mov
mov
ror
adc
cdq
mov
ins
movs
add
outs
pop
inc
mov
mov
mov
push
int
lods
inc
push
pop
pushf
les
jmp
mov
stos
xchg
shl
adc
cmp
repz
leave
inc
and
pop
enter
mov
and
in
sub
ins
out
push
movs
adc
jae
sysret
sbb
(bad)
mov
pop
test
(bad)
or
test
into
(bad)
scas
xor
in
cmps
mov
xor
and
or
mov
popf
mov
push
sub
fcom
dec
loope
dec
adc
mov
sub
dec
repz
xchg
or
fisttp
xor
and
xchg
pop
fadd
xchg
push
hlt
push
jae
inc
sub
jbe
mov
mov
bnd
and
inc
jns
sub
sar
pop
sub
add
dec
movs
into
fucom
and
cdq
popf
sub
xchg
cwde
popf
imul
test
fsub
adc
push
or
mov
arpl
pop
jg
mov
out
pusha
cmp
push
adc
(bad)
cmp
shr
pusha
mov
loope
xchg
nop
mov
add
lock
adc
ds
in
fimul
out
sub
jp
lahf
fsubr
outs
daa
add
lods
das
shl
push
mov
add
push
sub
retf
aaa
jae
retf
push
(bad)
adc
add
leave
jne
push
sub
dec
lea
sahf
sbb
call
push
(bad)
cli
or
pushf
sbb
cmc
jns
mov
push
xor
call
lock
(bad)
shr
xchg
std
xchg
dec
inc
jge
jne
bound
mov
shl
mov
lea
ja
mov
test
sub
xchg
(bad)
scas
sub
or
in
fidiv
outs
mov
aaa
cmp
jae
add
int
outs
inc
stc
mov
ss
mov
pop
stos
push
or
je
sbb
les
push
rol
mov
gs
mov
es
inc
or
sbb
and
sub
and
mov
mov
outs
shl
or
ret
test
dec
sbb
jg
sub
sbb
(bad)
out
ds
mov
pop
(bad)
xor
push
popf
push
xor
or
mov
imul
inc
shl
mov
popf
(bad)
into
mov
(bad)
popf
sbb
xchg
pop
in
mov
lods
movs
push
and
mov
scas
adc
xchg
or
jns
inc
jmp
scas
or
rol
dec
into
push
outs
retf
lods
mov
inc
cdq
ja
or
xor
add
clc
addr16
jne
and
mov
iret
or
sahf
sub
xchg
imul
adc
pop
repz
sub
xchg
push
rcl
cmps
sbb
xor
mov
xor
xchg
clc
mov
mov
pop
lea
sar
mov
pusha
sbb
and
push
or
xchg
pop
sub
outs
and
add
stos
xchg
pop
scas
cmp
push
pop
add
hlt
aas
pop
sub
(bad)
mov
push
cmc
fstp
push
pop
out
cmps
sbb
fnstsw
aaa
sub
sar
aas
mov
sbb
std
call
mov
jle
lock
add
xchg
lods
pop
dec
push
adc
push
call
add
mov
test
fstp
test
into
inc
inc
outs
sbb
mov
cmp
test
jne
push
mov
xchg
nop
fmul
dec
in
lds
push
daa
pop
pop
pop
add
inc
jo
gs
mov
daa
call
dec
rcr
jnp
aad
jge
lahf
mov
lods
sub
addr16
sbb
sbb
mov
mov
clc
rcr
inc
mov
push
out
and
std
cwde
push
sbb
int
ficom
int
mov
sbb
cmp
cld
sbb
xor
mov
movs
popa
loop
rcl
pusha
cmps
jmp
pop
lods
xchg
int
push
pand
js
or
stos
adc
mov
pop
lods
xchg
jg
enter
cmp
and
scas
test
ja
mov
or
les
mov
pop
je
cmp
mov
js
(bad)
call
mov
mov
lds
cmp
mov
lds
xlat
test
sbb
push
pop
or
sbb
cs
enter
jae
push
or
xchg
inc
xor
inc
iret
(bad)
xor
pop
in
sbb
xchg
popf
mov
lea
mov
add
push
cmp
rcr
iret
enter
retf
fsubr
gs
jne
mov
and
xchg
mov
lods
sbb
xchg
pusha
lods
das
mov
jne
sub
lods
ds
jle
inc
imul
jno
mov
in
pushf
mov
adc
mov
test
les
mov
cmp
aad
imul
push
xchg
fidivr
or
test
dec
movs
cmp
xchg
jl
mov
inc
into
mov
push
rcr
lods
jb
(bad)
xchg
imul
mov
fist
imul
stc
test
test
and
ss
lea
int
nop
mov
movzx
ja
stc
scas
mov
jmp
ret
mov
pop
test
lea
xchg
mov
int
xchg
loopne
std
cwde
fld
xchg
je
push
sbb
xchg
scas
(bad)
fild
outs
daa
sahf
out
adc
movs
lds
mov
add
ret
enter
neg
pop
cmp
or
and
mov
clc
mov
(bad)
in
ins
and
into
fcomp
mov
sahf
jge
sub
sbb
lods
int
and
aad
xchg
inc
xchg
xchg
jmp
mov
xchg
int3
aad
and
lods
imul
mov
push
inc
js
div
cs
jmp
adc
mov
add
add
jg
gs
enter
mov
nop
call
jge
movs
xchg
int3
stos
outs
cmc
stc
jno
sbb
inc
retf
das
int
sub
mul
cdq
adc
sub
push
xchg
std
or
outs
test
jl
mov
or
add
add
mov
std
add
fst
jg
mov
xor
mov
xor
sbb
dec
scas
jbe
fld
mov
lea
enter
sbb
(bad)
or
mov
cmp
push
adc
out
movs
js
or
jge
shr
retf
adc
mov
sbb
into
add
adc
test
mov
fisub
mov
xor
in
loopne
pop
shl
cmp
aas
in
adc
aaa
dec
mov
mov
fmul
or
rol
push
inc
stos
(bad)
enter
mov
jns
inc
scas
jns
push
lods
mov
test
bound
in
or
aaa
lds
ret
pop
out
inc
pop
sub
sub
pushf
pop
xchg
movs
xor
sbb
push
cld
mov
outs
mov
stos
dec
pushf
stos
push
mov
push
add
pop
(bad)
neg
loop
sti
fstp
mov
scas
sbb
xchg
dec
push
retf
push
iret
sbb
fldenv
and
clc
inc
dec
out
std
push
cmp
xchg
adc
jns
xor
out
mov
clc
shl
fldl2t
arpl
dec
add
adc
shl
or
mov
dec
adc
movs
(bad)
cmp
inc
inc
aas
jl
icebp
xchg
rcl
inc
das
es
cdq
dec
mov
mov
adc
add
sbb
xor
push
nop
aas
je
into
(bad)
movs
pushf
ins
or
das
ror
out
cmp
test
push
pop
mov
jne
leave
pop
jne
mov
or
push
mov
push
cs
sub
cmp
inc
jecxz
clc
test
gs
sahf
xchg
pop
imul
adc
int
sti
xchg
add
pop
jns
cwde
aad
ja
sti
mov
int3
pop
inc
and
loop
rcl
mov
xor
cdq
or
sub
jge
push
sub
push
adc
xchg
stos
xchg
inc
mov
cmp
pop
mov
into
sub
(bad)
(bad)
mov
mov
inc
ds
sbb
mov
push
add
ins
sub
leave
(bad)
outs
jmp
xchg
retf
jle
(bad)
sti
jnp
aad
inc
fwait
jecxz
sub
mov
popf
mov
dec
mov
iret
dec
jmp
push
add
push
xchg
pusha
and
in
es
push
rol
mov
iret
sub
lahf
pop
retf
jb
lods
pop
out
stos
push
xchg
popa
xlat
cmp
enter
dec
pop
daa
push
jbe
xchg
(bad)
outs
dec
jns
test
xchg
mov
pop
gs
mov
sbb
neg
xlat
leave
add
inc
mov
add
adc
inc
fistp
mov
dec
mov
cwde
mov
pop
or
ret
ins
pop
mov
stos
mov
jge
cwde
sub
cmp
jne
mov
pusha
out
fmul
(bad)
fild
push
mov
frstor
add
imul
mov
xchg
xlat
test
xor
inc
in
mov
call
mov
lds
cmp
jae
cmp
mov
mov
push
cmp
push
(bad)
mov
fmul
push
(bad)
repnz
pop
cmp
js
xchg
(bad)
and
or
arpl
jae
aaa
ins
mov
and
pop
sbb
jl
pushf
push
mov
xchg
in
nop
dec
movs
xchg
push
sbb
push
dec
ret
pushf
jl
xor
pop
xor
scas
mov
sbb
mov
jae
movs
pop
les
mov
mov
pop
ret
fisub
sbb
add
xor
jge
lea
add
pop
inc
jo
push
cmps
(bad)
in
push
xchg
outs
inc
adc
shl
pop
repz
sbb
add
mov
mov
cli
xchg
mov
scas
mov
and
std
icebp
add
inc
mov
ror
mov
cmc
mov
sub
sar
bound
mov
push
or
lahf
xchg
stos
cs
jmp
xor
addr16
cmp
fadd
jmp
push
sub
in
or
mov
sub
mov
push
sbb
xchg
pop
adc
les
and
and
xchg
or
jp
(bad)
mov
mov
jecxz
push
inc
fstp
jne
inc
test
ror
outs
js
js
jle
stc
mov
or
push
sbb
fimul
add
and
push
dec
and
or
dec
push
nop
sti
cmp
test
sub
adc
movs
jmp
iret
mov
movs
sahf
mov
mov
xchg
sbb
mov
jl
dec
(bad)
fbld
ins
in
jne
sar
gs
cmp
xchg
fcomip
inc
xchg
jnp
mov
mov
push
push
dec
arpl
mov
ss
ror
fistp
xchg
(bad)
int3
mov
maxps
ja
shl
enter
leave
fmul
scas
in
les
push
dec
es
leave
and
or
fmul
call
inc
mov
sbb
out
mov
sub
or
jg
fadd
fbstp
jmp
mov
stos
mov
mov
pop
shr
dec
cmp
fisub
mov
add
sbb
lea
inc
adc
inc
mov
and
xor
aad
dec
or
ss
loope
lods
adc
inc
cmp
mov
int
test
jge
pop
inc
adc
mov
in
jg
fdivp
jg
cmp
aam
cmp
out
nop
std
pop
push
imul
mov
or
dec
loop
mov
fdivr
call
cwde
aad
gs
in
aad
push
push
and
jne
lds
inc
jo
popf
sbb
adc
ficom
xor
call
and
cwde
jecxz
mov
mov
(bad)
jbe
js
ins
mov
mov
or
cdq
imul
dec
mov
test
or
(bad)
sti
loopne
mov
fisubr
stc
jae
sub
lea
mov
rcl
rol
(bad)
mov
xchg
jbe
jbe
push
cs
mov
pop
jmp
mov
mov
jno
movs
dec
push
and
les
dec
mov
fild
mov
mov
stos
dec
inc
sub
mov
sub
push
clc
out
fnstenv
add
fdiv
cmps
cmps
das
popf
std
push
ds
setne
mov
fs
scas
pop
push
push
jnp
or
xchg
pop
ds
or
repz
out
jnp
fild
mov
xchg
mov
jecxz
les
pushf
(bad)
sahf
push
push
push
xor
jle
push
mov
xchg
aaa
in
mov
add
dec
push
addr16
mov
cmps
stc
mov
push
pop
mov
repz
adc
mov
mov
jb
mov
hlt
std
cmp
rcr
inc
push
and
mov
in
sub
or
fmul
cmp
sti
mov
mov
repz
and
mov
mov
push
ss
sub
jecxz
pop
(bad)
adc
xchg
jne
fsubr
push
hlt
xchg
jmp
or
cmp
in
push
shr
add
xchg
jecxz
cmps
cmps
adc
popaw
jno
cdq
push
mov
ror
and
and
mov
icebp
mov
push
test
fistp
mov
push
sub
and
inc
cmp
push
adc
pop
loope
or
leave
stos
cs
xor
icebp
cmp
xchg
mov
enter
fbstp
pop
xchg
add
addr16
push
test
test
int
ins
or
mov
dec
and
push
fsubr
inc
mov
(bad)
pop
stos
mov
stos
mov
cwde
fisubr
and
ret
push
mov
aas
mov
jbe
ins
js
aam
add
aaa
sbb
mov
adc
je
xchg
cmp
int
mov
(bad)
retf
repz
out
int3
push
call
jns
imul
xchg
or
mov
dec
mov
mov
dec
int
das
inc
mov
xchg
mov
ins
and
jle
stos
into
call
inc
adc
pop
and
ret
lds
mov
adc
inc
sub
ja
and
push
ds
sub
dec
and
jbe
popa
out
(bad)
dec
push
jae
pop
ja
in
or
shl
mov
sub
fld
out
push
lds
sbb
jne
retf
pop
sub
loop
inc
push
sbb
dec
jae
(bad)
(bad)
scas
mov
pushf
dec
(bad)
dec
mov
std
nop
jle
shr
mov
sbb
mov
sbb
jo
sbb
and
pop
ror
xchg
pop
movs
(bad)
push
cmp
xchg
scas
shr
imul
mov
lea
xor
das
jo
mov
fbld
sub
xchg
cmp
lahf
or
push
div
ins
dec
leave
push
add
pop
int
push
jo
lods
int
mov
jb
mov
popa
jbe
adc
call
xchg
sti
xchg
xchg
js
data16
ss
xlat
fcom
das
mov
retf
movs
inc
cmp
adc
test
ins
shl
popa
bound
mov
not
jae
sbb
(bad)
mov
in
in
jge
jmp
loop
(bad)
push
cmp
lods
pop
jns
jl
rol
xchg
mov
(bad)
mov
imul
(bad)
lods
cmps
mov
dec
lds
or
sub
rcr
aad
push
cmps
jmp
call
popf
and
mov
rcr
add
add
fisubr
xchg
pop
mov
pop
inc
(bad)
jl
aad
test
dec
mov
pop
mov
std
pop
mov
adc
xchg
cmps
sahf
or
pop
cmp
shl
inc
pushf
mov
ret
xor
or
daa
test
sub
or
out
test
mov
or
inc
call
jmp
inc
loop
jmp
cmp
jns
jp
adc
stc
inc
sti
jp
ret
rol
fimul
pop
fs
(bad)
cdq
loope
aad
mov
das
push
aas
imul
mov
pop
jp
adc
jg
test
push
pop
pop
or
sahf
xor
add
mov
adc
push
mov
inc
mov
lods
out
adc
pop
push
sahf
inc
and
test
(bad)
(bad)
fnstenv
push
mov
xor
xor
mov
mov
rcr
xchg
ret
dec
mov
cdq
jnp
daa
ins
shr
out
scas
pop
in
mov
mov
cli
cmp
cmp
cmp
cmp
mov
sbb
xor
(bad)
dec
pop
fcomp
add
test
loopne
jmp
mov
out
aad
jne
dec
xchg
pop
dec
xchg
data16
idiv
and
pop
push
stos
pop
cs
aad
push
dec
mov
pop
mov
push
pop
cld
mov
cmp
mov
fsub
je
pop
jp
test
les
rol
xchg
push
jne
nop
xor
(bad)
lea
in
xor
into
mov
int3
mov
mov
(bad)
jno
mov
and
xchg
lea
iret
jmp
pop
mov
mov
scas
iret
jl
cmp
repnz
imul
sahf
mov
int
int
ja
mov
ret
add
mov
adc
mov
imul
pop
and
push
jmp
aad
push
jle
adc
xlat
sahf
dec
mov
add
nop
aad
xchg
repz
popf
mov
xchg
add
and
pop
lock
sub
retf
jns
adc
jbe
cwde
cmps
add
in
fsubr
mov
push
pop
popf
xchg
es
movs
push
pop
sub
xlat
cmps
cmp
pop
and
push
xor
out
cmp
mov
or
sbb
dec
int3
(bad)
ds
dec
pushf
daa
test
test
fnstenv
mov
pop
test
outs
add
fistp
and
xor
leave
je
aad
pushf
and
test
ins
xchg
sub
mov
mov
mov
(bad)
xchg
or
jae
retf
dec
mov
repnz
jle
test
ja
test
sbb
popf
retf
xchg
add
mov
lods
push
push
sahf
loop
in
scas
dec
sbb
mov
jns
mov
bound
mov
pop
sar
sub
pop
jmp
cmp
not
mov
imul
push
not
inc
inc
inc
xchg
(bad)
mov
push
fs
xchg
mov
sub
or
pop
and
push
sub
nop
into
adc
in
xchg
sahf
dec
mov
pop
cwde
add
test
test
mov
cmp
dec
xchg
lods
push
inc
xchg
dec
pop
and
aas
jo
test
xor
ret
fisub
or
lahf
daa
and
repnz
(bad)
shl
shl
mov
sbb
jnp
pop
aas
mov
outs
xchg
rcl
cmp
ins
ret
movs
pop
shl
push
fwait
mov
mov
je
(bad)
adc
mov
imul
pop
dec
jmp
adc
mul
popf
pop
sub
cmp
adc
jp
jecxz
das
push
push
mov
mov
cmp
jne
int
test
test
retf
ror
mov
mov
test
xchg
mov
enter
adc
mov
mov
jb
mov
std
addr16
push
out
iret
ins
lds
push
or
mov
and
dec
out
cmp
fild
mov
shr
mov
sub
stc
iret
bt
mov
fwait
push
ds
adc
das
jle
(bad)
push
push
jne
push
addr16
sub
mov
stos
call
jl
loop
mov
pop
mov
inc
jbe
ror
dec
jnp
(bad)
jle
aam
add
addr16
push
xchg
dec
repnz
ds
imul
es
mov
or
xchg
neg
dec
mov
or
bswap
cdq
jg
add
lea
push
pusha
sub
cmps
xchg
xchg
data16
dec
jle
into
and
jmp
fld
lea
daa
mov
into
xor
pop
aad
lahf
imul
fild
xlat
ficom
jo
loopne
push
shl
out
test
xchg
xor
fwait
pop
pushf
sub
mov
add
shl
dec
dec
ret
fwait
jnp
repnz
popa
pop
jmp
mov
aas
and
jmp
clc
loopne
daa
mov
ror
dec
xchg
xchg
lea
fucomip
cmps
mov
mov
xor
mov
repnz
cdq
in
dec
leave
ss
mov
js
sbb
ds
cmp
mov
pop
out
cmps
clc
mov
in
jnp
bound
add
cdq
aas
cmp
int3
and
popa
mov
loope
inc
mov
cmp
sbb
xchg
mov
ins
mov
xlat
inc
sbb
dec
and
push
inc
mov
popa
cmps
or
mov
lods
test
adc
test
call
in
cdq
pop
sbb
mov
sbb
(bad)
mov
icebp
jo
adc
mov
add
in
lods
out
(bad)
sahf
cmc
cmp
push
div
add
dec
jo
enter
push
cmc
test
out
sub
mov
or
je
sbb
stc
aad
push
mov
sub
push
jne
xchg
scas
inc
or
fmulp
sbb
jae
xchg
es
xchg
mov
retf
mov
mov
dec
mov
aad
mov
xchg
jo
stos
xlat
jg
mov
jge
das
pop
clc
in
dec
enter
in
pop
sbb
xor
sbb
or
jb
cmp
sub
xchg
pop
mov
dec
popf
lods
pusha
mov
xlat
sub
rcl
sbb
lods
inc
icebp
(bad)
les
icebp
jp
inc
xchg
sete
repz
adc
cmps
sahf
xchg
push
push
movs
dec
inc
mov
addr16
mov
lods
sub
stos
loopne
fisttp
outs
push
or
rcr
push
inc
stc
pop
popf
jl
jl
fmul
aas
(bad)
xor
cwde
and
test
pop
mov
or
and
mov
int3
aas
jle
lods
push
pop
sub
mov
dec
jl
xlat
pusha
xchg
adc
mov
into
pop
fild
outs
popf
fsub
neg
call
add
sbb
dec
mov
(bad)
mov
imul
dec
lods
jo
cwde
aad
ja
adc
lock
adc
retf
mov
int
push
xchg
mov
(bad)
or
sbb
movs
aad
(bad)
(bad)
cmp
je
push
das
cdq
add
pusha
and
stc
jo
jo
rcl
shl
dec
add
xchg
test
hlt
add
ds
mov
(bad)
pop
stc
mov
mul
fiadd
fldcw
gs
lahf
lods
sti
adc
std
cs
(bad)
mov
or
int3
or
and
mov
outs
xor
leave
xor
outs
fdivr
es
sar
pushf
ds
iret
add
shl
sbb
jns
or
cmp
sub
xchg
jge
mov
cli
jns
jecxz
fiadd
xchg
pop
xchg
ja
lods
mov
xchg
mov
das
iret
sub
lock
pop
mov
mov
test
xlat
adc
cmc
in
lea
cmp
mov
jne
add
popf
jg
xchg
push
mov
fild
add
add
cdq
and
mov
or
or
dec
mov
fmul
gs
xor
xor
retf
pop
das
test
popa
popa
xlat
out
inc
or
int3
mov
xchg
jne
mov
movs
loop
out
scas
or
ja
cmp
cmp
sbb
fild
aas
push
aam
pop
jns
sub
and
mov
test
cli
stc
hlt
dec
ror
lock
aad
jns
push
cmps
test
(bad)
and
ja
call
cmps
into
sub
retf
fucomip
jae
push
shr
cmp
push
sbb
arpl
adc
in
inc
fs
clc
outs
mov
jnp
(bad)
out
xor
clc
push
mov
dec
pop
mov
shr
mov
retf
lods
jae
sub
stos
pushf
call
inc
arpl
retf
scas
lahf
add
lods
bound
lock
push
and
pop
mov
push
bound
rcl
cmp
daa
mov
(bad)
fbstp
pop
nop
dec
scas
inc
jbe
adc
mov
push
mov
mov
(bad)
into
cmp
pop
ins
sub
retf
dec
pop
aad
push
icebp
cmp
mov
int3
(bad)
pop
loope
out
repz
fisub
xor
sbb
xchg
mov
jg
iret
lea
js
fadd
inc
inc
xchg
cmp
cmps
scas
out
mov
jg
dec
ins
in
xor
mov
cli
inc
sub
xlat
ret
(bad)
fsubr
sbb
jle
inc
mov
mov
nop
enter
sbb
xchg
ins
and
pop
(bad)
add
sti
fimul
jne
cmp
mov
or
fwait
mov
lea
std
xor
int3
clc
pop
cmp
cdq
add
lahf
push
popa
xchg
mov
sbb
ds
aas
sahf
jae
jo
ins
or
add
jecxz
and
push
and
das
cmps
aam
out
fldcw
mov
cld
std
cmp
pushf
and
mov
push
and
inc
sub
sbb
xchg
mov
pop
scas
cdq
push
test
cs
xchg
aad
bound
mov
pop
cmp
mov
(bad)
mov
push
mov
mov
xchg
ret
cdq
push
push
lock
pop
ret
aad
out
cmc
jle
pop
jmp
or
cmps
dec
inc
call
pop
pop
and
cmp
mov
cmp
pop
idiv
mov
sbb
loop
shl
outs
xchg
cmp
pop
(bad)
push
cmps
push
inc
sub
pop
sub
jg
xor
jae
mov
mov
popf
dec
xor
ds
mov
loope
xchg
jl
cs
pushf
ins
lahf
mov
int3
clc
jnp
aaa
inc
pop
inc
fwait
das
xchg
add
retf
inc
xor
mov
data16
test
adc
add
pop
mov
ror
fwait
and
inc
shl
outs
mov
add
fwait
test
mov
sub
fisttp
and
xchg
ret
push
not
aam
cmps
sub
dec
mov
push
xchg
cmp
pop
xchg
cmp
or
test
in
les
mov
nop
ins
(bad)
sahf
outs
fist
test
test
push
mov
stos
in
call
aam
shl
mov
test
test
out
test
cld
fs
xchg
lock
in
out
push
mov
ficomp
stos
mov
test
dec
pop
outs
or
arpl
dec
pushf
mov
sahf
fdivr
and
test
push
in
aas
ds
stos
mov
shr
(bad)
or
(bad)
push
test
push
fs
cmp
pop
call
pop
(bad)
adc
retf
push
push
(bad)
mov
xor
push
adc
push
mov
outs
xchg
xchg
lock
sub
push
jl
adc
js
dec
call
out
adc
add
or
imul
inc
jmp
dec
(bad)
xchg
lods
jmp
add
cmp
cmp
mov
xchg
push
mov
mov
mov
and
inc
cs
int3
je
icebp
jb
inc
(bad)
in
loopne
std
sub
pushf
inc
fsub
dec
aad
cmp
sbb
out
dec
stc
int
sub
cli
xchg
and
(bad)
int
mov
mov
push
mov
mov
jno
or
lahf
mov
mov
dec
mov
jmp
stc
jecxz
or
cmp
fcomp
pop
dec
push
cmps
popf
(bad)
mov
adc
rcl
xchg
mov
out
dec
outs
jb
xchg
loope
imul
xor
mov
(bad)
out
mov
push
(bad)
rcl
int3
push
pop
rcr
or
iret
iret
stos
inc
dec
jo
aad
sahf
fidivr
mov
sub
xor
movs
les
rcr
popa
jnp
dec
and
std
lea
out
dec
test
xchg
aas
loope
shl
push
popf
adc
cwde
rcr
push
or
push
(bad)
aas
(bad)
lea
sbb
aas
pop
enter
pop
fld
inc
iret
adc
dec
rcr
sbb
mov
stos
ret
das
mov
and
jecxz
shr
cld
shl
into
mov
cmps
stos
mov
mov
adc
call
mov
(bad)
mov
popa
pop
icebp
xchg
sbb
call
outs
push
xchg
pushw
xchg
fcom
sbb
pop
cmp
add
push
pop
add
add
or
retf
fimul
mov
and
clc
call
bndstx
mov
je
stos
pop
sub
push
sub
mov
xlat
mov
xchg
icebp
inc
push
(bad)
xor
pop
fdiv
xor
ds
loopne
sub
lea
dec
jg
or
xor
adc
lds
mov
fcom
fs
fs
mov
mov
mov
int3
add
pop
fmul
jg
adc
dec
iret
mov
ds
jns
mov
call
xchg
aaa
fild
imul
and
cmp
push
xchg
rcl
cmp
aam
leave
jne
pop
mov
and
cmp
or
les
or
mov
addr16
sbb
(bad)
sub
arpl
xchg
shl
pop
mov
inc
stos
ins
push
or
cld
and
push
push
mov
jae
imul
mov
stos
test
inc
inc
mov
sub
arpl
mov
movs
xchg
lahf
and
push
cmp
loop
cmp
mov
jns
adc
jne
ja
test
test
mov
xchg
mov
sub
ja
pop
xchg
cwde
pop
jmp
movs
xor
(bad)
mov
inc
jnp
push
(bad)
sub
dec
aad
(bad)
(bad)
cmc
sbb
into
f2xm1
stos
jecxz
test
pop
xor
adc
mov
xchg
mov
adc
push
push
(bad)
mov
dec
xchg
xchg
js
test
(bad)
repz
movs
mov
push
nop
jmp
call
and
mov
imul
js
ins
stos
sub
pop
int
int3
fistp
shl
and
and
jle
add
jne
add
mov
pop
inc
les
jg
mov
push
inc
sbb
sub
in
dec
enterw
jp
aas
mov
test
repz
inc
xor
add
jo
push
shl
and
stc
das
xchg
mov
(bad)
(bad)
mov
pop
(bad)
mov
outs
out
sbb
xchg
mov
sub
sbb
inc
test
sub
icebp
fmul
cmp
retf
div
inc
nop
cmc
pop
out
add
sbb
pop
out
add
cmp
shr
or
cmp
fiadd
cs
inc
jo
dec
sbb
jo
popa
mov
xor
sub
add
cmps
inc
call
dec
add
inc
mov
sbb
pop
test
inc
lods
push
ret
pop
ds
dec
iret
push
add
dec
or
pop
cmp
std
ss
hlt
stc
push
fucom
out
lock
stos
sub
mov
cdq
fadd
xchg
idiv
test
cmp
add
hlt
mov
or
jp
push
std
and
data16
adc
jmp
inc
add
mov
dec
or
xor
dec
and
and
(bad)
mov
add
mov
(bad)
inc
pop
out
push
xor
and
in
xchg
pop
cld
push
std
mov
out
in
test
mov
pop
in
xor
into
xor
loope
dec
mov
inc
in
iret
dec
mov
outs
call
das
fiadd
mov
gs
mov
fcomip
not
and
xor
arpl
(bad)
outs
mov
xchg
mov
or
cli
xchg
mov
jmp
sti
lahf
sbb
icebp
in
out
jbe
dec
xor
frstor
mov
ror
icebp
xchg
mov
cld
sub
or
ins
inc
lahf
jle
enter
retf
nop
(bad)
gs
pop
push
out
rcl
push
les
push
scas
jg
add
scas
je
jae
xor
add
popa
add
pop
mov
test
dec
mov
cwde
movs
add
xchg
cmp
mov
imul
enter
daa
sar
and
or
mov
mov
xor
pop
in
imul
dec
(bad)
std
adc
pop
hlt
ffree
imul
in
push
fnstenv
xchg
add
jecxz
mov
loope
jne
xchg
push
inc
xor
or
cmp
adc
or
or
sub
ins
lods
int
push
in
pop
sti
into
call
mov
mov
bound
shr
lods
jae
outs
adc
xchg
test
int
xor
jge
xchg
into
add
or
dec
dec
xchg
sub
(bad)
jmp
stc
outs
or
add
cmp
push
shr
lods
mov
and
inc
pop
and
mov
ss
out
pop
sti
mov
retf
dec
je
mov
or
scas
xchg
cmps
mov
sbb
jae
inc
push
inc
aaa
ror
or
movs
jno
(bad)
push
adc
jmp
popa
mov
cmp
imul
popa
arpl
cmp
lea
(bad)
adc
add
or
test
adc
leave
leave
add
jle
inc
jp
xchg
repz
repz
inc
std
imul
or
or
adc
test
fistp
lods
mov
mov
stos
ret
xchg
jbe
mov
xor
adc
fld
xlat
jmp
sbb
cmp
push
ret
xor
lods
xlat
sar
pop
mov
jno
xchg
mov
outs
cmp
and
out
lods
jl
lds
pop
add
add
jns
jp
lea
stc
mov
mov
and
ds
(bad)
mov
cmp
bound
mov
gs
inc
fwait
sahf
xchg
push
xchg
test
int3
sahf
mov
and
(bad)
cmps
mov
ins
inc
loop
cmp
pop
sub
loopne
cmp
movs
and
or
mov
sub
and
loop
pop
add
sub
jb
push
push
pop
inc
inc
add
mov
xchg
jbe
mov
fidiv
movs
jge
(bad)
mov
adc
scas
js
mov
dec
jecxz
and
js
nop
pop
ficom
gs
mov
sub
pop
out
mov
jbe
xchg
lds
es
mov
push
icebp
xor
and
inc
mov
and
aad
aam
rcl
(bad)
fimul
(bad)
fiadd
mov
mov
stos
cdq
mov
jle
mov
cdq
test
test
shl
cld
cmc
aas
arpl
add
jecxz
mov
mov
pop
ret
xor
inc
fs
enter
call
dec
cmc
es
pop
test
fsub
cmp
jl
cmp
jecxz
pop
mov
mov
mov
sbb
call
mov
enter
dec
pop
push
cmps
jae
push
mov
fsub
mov
popf
lock
or
push
xor
or
das
dec
jae
aas
imul
ins
ret
fst
lods
mov
sbb
aad
ror
shl
xor
arpl
push
test
pop
inc
jbe
scas
push
sub
jl
fdiv
mov
into
popf
lock
daa
addr16
or
push
icebp
movs
dec
mov
push
shl
and
pop
push
ins
cs
jge
lock
cmps
out
push
sbb
movs
(bad)
cdq
jnp
jmp
ficom
sbb
push
cwde
dec
sbb
push
dec
mov
push
stos
sti
jmp
fistp
stos
sub
stc
mov
cmc
push
dec
loope
sar
sub
loopne
mov
cwde
in
adc
mov
ins
push
mov
push
repnz
(bad)
mov
cmps
test
adc
pop
(bad)
gs
imul
jo
hlt
inc
mov
popf
push
xchg
gs
fiadd
and
pusha
imul
jmp
adc
push
int
or
repz
lea
mov
pushf
xor
xor
stos
jmp
(bad)
ins
inc
mov
adc
mov
ins
push
leave
mov
rcr
retf
mov
loope
pop
jmp
lock
(bad)
push
add
pop
mov
dec
mov
data16
mov
imul
and
jo
pushf
xchg
fcmovnbe
add
arpl
out
retf
sahf
call
lods
push
or
test
pop
inc
and
xor
fwait
clc
repz
out
mov
clc
sub
mov
jge
sbb
mov
mov
mov
and
jecxz
cmp
jmp
push
sbb
adc
imul
sbb
xchg
xchg
sub
rol
shl
xchg
push
sub
in
sar
or
sbb
adc
cs
inc
aam
stos
adc
push
xchg
fcmovb
pop
adc
(bad)
push
ror
jb
mov
pop
push
adc
mov
mov
test
popa
jne
mov
pop
adc
adc
cdq
test
mov
lds
stos
push
aas
mov
lods
push
push
sub
sbb
mov
stos
retf
or
iret
pop
sbb
mov
frstor
push
call
fsubr
mov
inc
out
cmp
retf
pop
jns
add
fisub
adc
cli
jl
call
sub
and
and
iret
outs
fsubr
jle
(bad)
icebp
dec
into
pop
jge
daa
xlat
or
push
inc
movs
jmp
or
mov
stos
lock
mov
xor
iret
mov
mov
das
jae
cs
out
out
or
frstor
add
test
cmp
lods
fxch
pop
adc
and
xor
xchg
lea
leave
mov
test
pop
cli
aaa
xor
xchg
pushf
pop
repz
sti
jns
dec
rol
movs
or
push
mov
xor
or
out
sub
mov
out
in
loopne
mov
sbb
jge
loope
xchg
xchg
mov
ins
popa
sahf
pop
loopne
mov
pop
push
mov
jae
and
mov
mov
ds
ins
ret
and
mov
jl
push
aas
fstp
mov
inc
sub
xchg
jecxz
fsubr
push
mov
dec
js
jle
dec
pusha
aaa
sahf
jge
cmc
je
lods
mov
arpl
mov
and
ja
out
clc
cwde
out
cmp
popf
les
cmp
add
frstor
push
loope
mov
push
jnp
std
outs
push
adc
jp
cmp
cli
add
xchg
sbb
inc
je
dec
push
jg
fs
scas
inc
push
sub
neg
stc
arpl
dec
fisub
das
mov
mov
cmps
(bad)
dec
push
fsubr
xor
out
arpl
and
clc
pop
ins
push
push
xor
nop
fild
(bad)
or
push
jl
jg
pop
push
lds
rcr
fsubr
adc
mov
(bad)
jae
add
jge
shl
in
test
and
sub
je
leave
add
push
sahf
clc
or
xchg
lock
mov
xor
or
fild
pop
ins
xor
daa
and
pop
retf
xchg
pop
add
push
imul
sbb
bound
push
xchg
mov
xchg
and
mov
dec
pop
repnz
pop
push
mov
std
imul
sub
fistp
mov
or
push
(bad)
out
xchg
adc
enter
adc
stc
dec
or
mov
sbb
adc
dec
vunpckhpd
dec
mov
mov
add
jp
rol
lea
imul
cmp
mov
mov
inc
cmps
and
stos
add
sbb
sub
sar
adc
sbb
retf
movs
pop
xchg
sub
lods
nop
xor
outs
sahf
mov
into
xchg
inc
dec
out
mov
movs
pop
xlat
test
inc
mov
outs
popa
repnz
xor
icebp
lahf
push
inc
add
jae
stos
retf
push
jge
mov
add
ret
popa
mov
stos
pusha
test
mov
jecxz
sbb
les
add
xchg
sahf
lods
cmps
gs
jge
xlat
iret
cmp
fidiv
pop
ret
test
jmp
push
or
xchg
lods
test
lea
pop
xchg
mov
xchg
xchg
lahf
adc
enter
dec
bound
mov
jo
je
push
in
into
lods
hlt
popf
add
push
dec
lods
ins
jmp
inc
and
sub
xchg
push
adc
ja
push
sti
jle
into
stos
(bad)
out
inc
sub
mov
sbb
jae
jp
(bad)
adc
push
add
jne
int3
mov
sub
call
sbb
test
sbb
dec
das
sbb
scas
rcl
xor
jae
imul
pop
jbe
push
aam
adc
pop
sub
lds
sub
into
pop
and
mov
int3
add
adc
jmp
dec
xchg
push
and
xor
push
mov
push
adc
cmc
jns
dec
push
rcr
jb
cld
mov
jnp
stc
pusha
ins
sub
jno
xchg
push
jo
fmul
(bad)
arpl
jle
rcl
sbb
adc
inc
sbb
jmp
adc
aad
or
xchg
inc
(bad)
repnz
(bad)
cmp
stos
jns
imul
jg
ss
imul
xchg
and
ret
push
cmp
mov
ja
or
fs
pusha
lods
pushf
out
movs
repz
mov
push
jp
or
cdq
imul
add
out
and
cmp
fbld
mov
call
pop
xchg
stos
cli
jecxz
(bad)
jmp
sub
iret
popa
fcom
pop
test
hlt
ins
daa
mov
push
push
lock
xor
cmc
imul
xchg
sub
fxch
or
jge
inc
dec
xor
movs
or
fcom
pop
cdq
xchg
and
xchg
fsub
mov
retf
mov
add
xor
xchg
push
mov
jecxz
xor
bound
pop
jecxz
test
dec
mov
test
retf
cmps
iret
sbb
test
adc
mov
pop
in
scas
lods
push
and
or
and
(bad)
adc
fucomip
mov
xor
jp
cmp
or
pop
dec
jo
or
adc
je
adc
jne
mov
stos
inc
addr16
dec
push
mov
mov
loopne
or
sub
mov
lahf
jge
jl
mov
aam
jno
lahf
lods
sub
ja
call
in
jge
pop
retf
mov
jo
aam
int
pop
(bad)
test
sti
mov
pop
test
adc
js
mov
dec
fldenv
(bad)
mov
dec
adc
pop
enter
adc
(bad)
mov
xchg
(bad)
aad
int
xor
or
dec
or
or
xlat
pop
sub
cwde
fwait
xchg
xchg
mov
mov
sub
inc
(bad)
xchg
daa
fld1
mov
loope
mov
inc
(bad)
imul
xchg
sub
popaw
ret
sub
add
inc
je
enter
and
outs
std
pop
push
mov
in
pop
jge
mov
repnz
push
jae
jmp
call
and
xchg
outs
cmps
stos
pusha
adc
mov
aad
adc
imul
(bad)
push
call
push
fadd
fimul
and
ficomp
push
adc
jnp
adc
push
test
loop
push
mov
inc
bound
mov
test
sub
fcomp
pop
ins
je
or
stc
or
dec
mov
jne
pop
int
mov
fsubr
push
sbb
lods
sbb
(bad)
jmp
loope
cmp
xchg
or
cmp
or
add
adc
inc
xchg
jns
or
mov
jne
jecxz
mov
call
test
movs
ins
(bad)
frstor
fwait
lahf
pop
sti
repnz
add
in
sub
mov
pop
push
sbb
mov
aas
pop
lock
fbld
scas
hlt
adc
shl
mov
push
rol
shl
cli
test
or
scas
sub
or
jbe
dec
or
sub
pop
sub
sbb
jae
imul
pusha
bound
das
mov
xor
or
inc
gs
xor
ins
pop
sub
cld
xor
or
popa
jns
outs
jae
adc
and
xchg
neg
sub
sub
ja
pop
enter
adc
and
aam
clc
shl
cs
outs
xor
lock
pop
sub
arpl
mov
mov
jle
add
lods
pop
inc
xor
push
push
inc
dec
jae
xchg
mov
mov
and
adc
mov
xchg
mov
scas
jle
mov
ss
mov
in
mov
outs
add
pop
pop
push
lods
fld
and
pop
arpl
push
cmp
mov
push
xchg
xchg
nop
pop
sahf
ds
sbb
add
jmp
xor
cmps
stc
mov
and
push
inc
in
jbe
mov
dec
push
cmp
mov
xor
jmp
add
repnz
das
add
cmp
test
pop
jmp
add
jmp
mov
or
mov
ins
push
xchg
icebp
scas
cmps
arpl
jl
dec
mov
mov
pop
inc
jmp
pop
push
xchg
mov
sahf
cs
push
mov
cmp
daa
das
gs
movs
xlat
push
data16
sub
mov
outs
cdq
xor
cmc
xor
test
xor
or
mov
popf
(bad)
and
xor
lds
jbe
ficom
pop
aaa
or
sub
sbb
fwait
sbb
jne
mov
xchg
push
or
fwait
lods
xchg
cmp
mov
jl
shl
imul
fld
ds
pop
cdq
mov
dec
dec
jl
sub
sbb
out
je
xlat
mov
cmp
mov
hlt
cmps
xchg
icebp
adc
push
adc
movs
clc
fcom
inc
mov
shl
xor
dec
retf
and
mov
test
cli
inc
out
icebp
mov
out
cli
lock
fnstenv
add
shl
mov
aad
mov
ret
(bad)
in
cmps
shl
xor
fs
addr16
pop
js
dec
add
push
and
mov
and
inc
call
pop
sub
popa
aam
mov
std
rcl
mov
mov
loop
in
outs
xor
adc
cmp
fbld
or
jecxz
jmp
fs
inc
mov
movs
sbb
sbb
mov
inc
jno
xchg
(bad)
rep
and
mov
retf
dec
out
add
jle
out
test
pop
cmp
sar
ja
mov
xchg
xor
push
mov
pop
sbb
in
clc
push
lods
shl
add
push
fwait
xchg
or
rcr
push
cmc
jp
sub
fmul
jae
cdq
call
mov
xchg
xor
call
and
xchg
test
js
push
scas
loop
and
sbb
(bad)
inc
inc
sbb
retf
test
add
or
fstp
pop
ss
xchg
push
stc
loop
es
cmp
push
or
not
add
gs
out
rcr
or
bound
cmp
or
aam
les
mov
xor
and
mov
lock
scas
out
lock
xchg
pop
scas
(bad)
pop
mov
movs
popf
sub
lds
test
or
pop
mov
xchg
sbb
fcomp
add
mov
and
mov
jae
push
int3
ins
xor
add
loop
push
pop
addr16
stos
or
div
lea
push
add
xor
xchg
sub
inc
dec
dec
dec
sub
jg
(bad)
rcr
loop
and
ret
mov
loopne
xor
sbb
js
cmp
cmps
dec
push
xchg
lds
call
sbb
shl
sub
xchg
mov
mov
mov
sub
cld
add
std
adc
jae
fbstp
push
repz
loopne
jbe
mov
popf
repz
lods
xor
mov
sub
jle
scas
clc
push
jle
push
mov
or
ins
xchg
dec
mov
sub
daa
adc
pop
sbb
add
jae
pop
adc
cld
aaa
in
and
out
or
retf
or
dec
inc
mov
adc
jbe
xor
les
or
push
mov
pop
add
push
xchg
cmps
xchg
mov
and
jp
mov
jne
sahf
in
xor
aam
outs
cmp
sbb
imul
shr
imul
sub
hlt
in
int
mov
add
pop
or
sbb
lods
daa
push
add
mov
aad
add
iret
mov
jle
das
rcl
mov
imul
aad
xor
nop
xor
sbb
mov
push
jle
dec
stc
out
jne
loopne
xor
jmp
sub
push
sahf
cmp
mov
ret
stc
repnz
addr16
cmp
dec
fnstenv
or
fist
push
leave
pop
or
push
idiv
mov
push
mov
add
data16
mov
pop
cmp
push
cmps
jecxz
lods
xchg
loopne
int3
test
or
retf
or
cmp
lods
jg
xor
cmps
add
xchg
mov
and
mov
jbe
repnz
ret
ror
out
fs
popf
mov
nop
dec
mov
dec
push
rcr
xchg
aam
cmc
jnp
dec
mov
ins
fsubr
in
es
retf
mov
(bad)
mov
idiv
jp
popf
fsubr
mov
loopne
fistp
mov
push
xchg
js
push
enter
pop
jl
cmps
movs
cmp
mov
mov
mov
or
iret
daa
jle
sbb
or
ud1
mov
lea
add
jae
lods
push
ins
mov
xchg
sahf
call
mov
sbb
loopne
dec
mov
fs
mov
int
xchg
adc
les
xchg
ins
mov
aam
scas
mov
xchg
push
sbb
out
fmul
fcom
cmps
retf
ins
and
pop
sub
retf
pop
dec
(bad)
xchg
js
ret
gs
ds
(bad)
test
js
pop
outs
out
mov
pop
dec
shr
inc
xor
mov
es
or
out
pushf
clc
mov
(bad)
ja
jle
mov
mov
popf
and
sub
push
xchg
xlat
pop
rcr
adc
push
push
pop
dec
mov
xor
jp
inc
xchg
cmp
pop
in
dec
xchg
cmp
cmp
cdq
rcr
adc
add
ret
gs
mov
cli
xchg
ins
add
and
shl
mov
fdivp
ror
ss
pop
int
mov
adc
mov
cmc
movs
mov
imul
mov
mov
mov
movs
jo
cmp
sti
and
pop
or
jbe
in
xchg
mov
movsx
movs
adc
int3
gs
mov
je
mov
outs
out
jg
dec
int3
add
lods
or
and
into
ins
mov
fs
das
sbb
test
rcl
sti
mov
sub
push
pop
or
add
in
lods
imul
shl
mov
cdq
sbb
push
cmp
addr16
outs
ret
push
cwde
and
jg
mov
adc
xlat
mov
mov
jge
imul
push
xlat
mov
cli
sbb
ror
aad
je
loope
fsub
data16
fld
mov
pop
cmp
mov
shl
or
inc
pusha
sar
or
fld
add
fnsave
(bad)
scas
dec
lea
xlat
dec
imul
ins
lds
je
push
adc
mov
sbb
xor
fld
lea
mov
outs
(bad)
hlt
add
inc
mov
pushf
cmp
and
xchg
pop
call
and
iret
mov
rcr
sar
mov
cwde
xor
inc
sub
pop
mov
lods
aas
jp
iret
lods
hlt
imul
add
xor
pop
shr
test
adc
loopne
jnp
mov
dec
fnsave
ret
adc
idiv
push
aaa
test
call
inc
pop
cmc
mov
inc
(bad)
repnz
test
xchg
xchg
in
or
mov
loopne
pushf
lds
pop
add
mov
mov
sub
cmps
add
mov
repz
or
add
adc
test
mov
cmps
les
lahf
leave
pop
jo
dec
cli
addr16
mov
in
dec
bound
imul
add
stc
repz
ss
test
xchg
push
jl
(bad)
pop
lea
fnstsw
add
or
int3
sub
je
xchg
pop
and
pop
cld
ins
add
lock
jb
cmps
mov
aas
scas
adc
les
xor
inc
sbb
or
jl
dec
pop
push
mov
sbb
xchg
in
mov
stos
push
cmp
outs
fimul
add
jl
pop
mov
push
lods
pop
ss
addr16
adc
xor
or
jge
movs
mov
mov
scas
cld
xchg
mov
not
gs
dec
push
je
icebp
push
adc
xor
xchg
and
or
pop
jle
outs
sub
ins
movs
lods
jmp
dec
(bad)
sub
das
ret
or
inc
jae
repz
mov
(bad)
sahf
jle
mov
and
outs
sti
aas
sahf
outs
aaa
add
sbb
out
sub
pop
gs
sbb
enter
adc
lods
scas
inc
xchg
mov
mov
int
stos
out
and
scas
call
cmc
gs
cld
repnz
xor
sti
inc
push
iret
outs
mov
std
int
and
pop
movs
pop
add
sbb
out
and
cdq
ret
mul
sahf
xchg
sub
lds
dec
movs
stos
fadd
outs
outs
xchg
sbb
lea
push
call
fdiv
cmp
push
fstp
mov
and
aas
out
dec
fadd
aas
mov
stos
mov
cmp
cmp
pop
(bad)
pushf
fadd
fbstp
rcr
stos
(bad)
loopne
cdq
add
push
mov
loope
xchg
add
aaa
ins
mov
add
je
(bad)
(bad)
popf
or
cmp
jo
adc
add
les
retf
mov
(bad)
std
mov
sahf
xor
lock
test
retf
xor
dec
stos
pop
fwait
add
call
lea
and
push
mov
jmp
adc
cmp
or
ja
outs
outs
cmp
rol
push
jge
push
jbe
mov
adc
sub
add
lea
jb
mov
cmc
arpl
sub
lahf
mov
xor
pop
jmp
sahf
sub
and
rol
ror
xor
jle
mov
xchg
int3
lods
fistp
jle
jl
and
dec
dec
sbb
test
pop
(bad)
movs
push
mov
into
cmp
jp
xlat
jle
imul
push
mov
cmp
mov
xor
hlt
xchg
sbb
jecxz
aas
jne
mov
add
xchg
(bad)
xchg
test
and
or
fwait
push
mov
fcom
jmp
arpl
(bad)
mov
mov
gs
outs
xchg
add
or
mov
cmp
lock
add
leave
push
jl
mov
mov
lahf
dec
or
mov
inc
jmp
cli
pop
test
sub
or
sub
xor
xchg
jbe
push
ret
into
nop
jns
or
(bad)
pusha
mov
jl
shl
ins
cdq
into
lea
cli
mov
rcr
mov
adc
jge
push
leave
or
sahf
out
(bad)
dec
fidiv
ret
jnp
int3
push
mov
push
jl
mov
stos
cld
push
fwait
mov
xchg
ins
repnz
mov
mov
dec
sar
cmps
je
arpl
jg
xchg
xchg
mov
mov
mov
ret
test
cdq
jle
repz
scas
in
or
sahf
loopne
or
int
mov
mov
iret
imul
fnstcw
pop
popa
cmp
data16
ficom
inc
sub
dec
cld
jb
lods
jle
jle
(bad)
movs
pop
clc
(bad)
je
xchg
xchg
mov
mov
cs
xor
pop
dec
sbb
out
sub
dec
movs
mov
cdq
sbb
outs
fild
shl
jo
fild
sbb
add
stos
jne
imul
(bad)
ror
sbb
jns
push
jnp
cli
inc
test
es
mov
aas
inc
cmp
rcr
fst
ins
pusha
inc
imul
pop
cmp
(bad)
jmp
scas
jns
jne
mov
jl
mov
cmp
xlat
sahf
mov
push
push
push
lock
addr16
cld
lock
(bad)
xchg
mov
dec
or
inc
iret
mov
and
fwait
lea
(bad)
dec
popa
int
lea
adc
shr
push
shl
dec
sbb
dec
sub
xchg
hlt
rcr
jp
iret
scas
int
pop
cmp
cmp
sahf
jle
or
scas
es
jns
adc
scas
retf
or
enter
add
mov
xlat
fst
pop
cmps
test
mov
retf
out
mov
mov
mov
out
repz
imul
sub
jge
cmp
or
xchg
mov
sub
adc
leave
xor
jecxz
scas
sbb
and
jmp
outs
into
mov
or
into
xchg
jne
sar
xlat
cmps
xchg
sar
inc
lea
retf
add
lods
aam
mov
add
retf
aad
sub
repnz
es
push
push
jge
cld
mov
test
mov
mov
jno
mov
sbb
sub
fst
(bad)
and
rcl
ret
test
mov
lods
sbb
push
inc
sahf
rol
inc
imul
push
adc
shl
fbstp
mov
pop
jge
xlat
jns
ins
fist
shl
mov
jne
or
loope
loope
fstp
call
push
stos
dec
mov
out
outs
mov
imul
cs
push
inc
pop
or
dec
xchg
imul
fst
xor
mov
enter
dec
jb
dec
push
call
inc
je
jmp
cli
jecxz
jp
mov
outs
and
in
cmp
mov
ret
std
or
sbb
scas
jg
repz
outs
aam
adc
addr16
pop
mov
push
mov
pushf
jge
pop
mov
xchg
push
inc
jmp
aas
fnstenv
sbb
test
ins
mov
mov
stos
fisub
cmp
ss
aas
fsubr
adc
outs
cmp
cmp
mov
lods
jecxz
(bad)
(bad)
mov
cwde
mov
pop
sub
or
inc
leave
mov
mov
mov
cmp
xor
xchg
int
dec
dec
in
jg
ins
mov
dec
xchg
jnp
add
pop
sbb
sbb
sub
or
mov
clc
lods
sub
cdq
es
xchg
jbe
pop
pop
iret
fsubr
mov
add
push
push
loope
sbb
jo
push
fxch
gs
int
jmp
clc
lods
nop
in
mov
adc
aam
mov
jo
xchg
jmp
and
in
sbb
aad
push
js
fwait
xor
or
or
int
aaa
sub
stos
dec
push
cmp
js
xchg
sbb
or
sahf
xchg
mov
fsubr
sbb
ret
pop
(bad)
jp
pop
hlt
mov
fldenv
inc
dec
fnstenv
rcr
in
sub
pop
shl
push
mov
std
scas
movs
sub
cmp
repz
cdq
inc
in
mov
popf
jl
(bad)
pop
pop
adc
xchg
mul
xchg
pop
xchg
sahf
ins
push
out
aad
mov
hlt
fs
xchg
sbb
xchg
jle
sub
or
xchg
cmp
push
or
push
sbb
cmps
fs
cmc
fisubr
push
loope
adc
dec
retf
popa
xchg
mov
mov
leave
mov
jle
jb
xchg
inc
pop
inc
imul
mov
or
xchg
mov
jb
fldenv
jl
sahf
xchg
ror
sahf
fild
mov
cmp
or
nop
and
mov
pusha
xor
fwait
xor
xchg
push
pop
cdq
cmc
inc
cmps
fs
imul
xor
jbe
sbb
mov
xchg
sti
mov
hlt
mov
fistp
pop
mov
retf
retf
dec
sbb
inc
push
inc
fs
ror
enter
cmp
inc
lods
mov
push
dec
nop
mov
fisttp
xchg
addr16
je
lea
les
fs
cs
movs
mov
mov
pusha
inc
sbb
scas
dec
nop
rcr
xor
mov
adc
xchg
push
cdq
rol
sub
in
inc
stos
data16
outs
outs
std
icebp
jle
repnz
xor
jne
mov
pop
adc
sbb
push
dec
jp
pushf
push
cmc
sub
push
inc
das
int3
sar
ror
jnp
sti
movs
lds
clc
mov
outs
xor
stos
mov
xor
dec
inc
or
std
ror
in
sti
(bad)
das
aad
add
idiv
mov
mov
mov
xor
add
lahf
cmps
jbe
inc
push
(bad)
jle
pusha
adc
adc
adc
push
jbe
fistp
or
movs
add
aam
data16
push
dec
add
shr
xchg
sbb
imul
inc
repnz
push
pushf
fisub
loope
iret
add
cdq
mov
ins
enter
aas
jg
gs
clc
cmp
scas
add
jb
and
jl
xchg
or
ss
(bad)
cwde
shl
in
cmp
(bad)
mov
dec
xchg
data16
scas
cmc
push
adc
xchg
shl
loop
imul
xchg
pop
xor
loope
xchg
arpl
sub
icebp
adc
lahf
inc
push
mov
adc
imul
adc
pop
cmps
xchg
xchg
mov
jg
sbb
imul
mov
or
jnp
ins
add
js
pop
test
and
mov
rcr
and
dec
loop
and
mov
sti
loop
cmp
cmp
jmp
mov
shl
adc
jae
in
jle
add
retf
das
das
fwait
inc
pop
push
mov
xchg
addr16
lds
mov
and
mov
out
and
cdq
ret
cmp
cmp
jge
ins
nop
xor
or
push
mov
out
cld
push
or
arpl
mov
loop
repnz
shl
mov
adc
jns
gs
adc
test
addr16
push
lods
stos
mov
mov
ss
cli
mov
cdq
fcom
mov
cs
out
or
std
sbb
mov
clc
ss
mov
sahf
imul
push
dec
or
arpl
push
mov
movs
adc
mov
rcr
sar
dec
adc
xlat
pop
fwait
aas
imul
(bad)
in
sbb
xchg
push
xor
fcomp
jne
test
rcr
inc
cmps
pop
movs
mov
int3
sar
jmp
dec
mov
cmp
icebp
jmp
fwait
inc
je
mov
xchg
sub
aam
test
dec
and
mov
sub
popa
arpl
pop
cli
or
lods
popf
push
in
sar
add
lock
pop
jl
mov
dec
lahf
je
inc
(bad)
xor
adc
fild
cs
sti
(bad)
sbb
and
dec
xchg
scas
nop
jo
push
mov
inc
and
ins
into
push
test
retf
out
call
xchg
clc
cmp
fsub
iret
in
mov
pop
es
cmps
jnp
pop
and
(bad)
mov
shr
call
stc
xor
int3
cmp
dec
arpl
outs
xor
aam
adc
jbe
stos
adc
scas
jo
out
push
xchg
push
je
lods
fs
push
xchg
mov
cmp
lds
mov
adc
push
xchg
lds
(bad)
fsub
dec
mov
or
jmp
icebp
test
outs
inc
mov
fcmovnb
inc
jmp
jae
lods
sbb
clc
loope
retf
test
fldcw
(bad)
dec
test
jbe
xor
aam
cwde
test
push
mov
lock
pop
mov
lahf
jge
icebp
push
repz
dec
out
sar
int
shr
int3
rol
mov
leave
(bad)
dec
mov
les
sbb
sar
mov
or
mov
shl
inc
out
fwait
xchg
push
jp
and
adc
dec
and
popa
cmc
sub
sub
sbb
sbb
xor
push
gs
mov
sub
mov
icebp
mov
sbb
sub
or
sbb
cmp
mov
repz
jmp
jl
sbb
dec
(bad)
ins
(bad)
xor
lock
stos
dec
dec
std
loopne
fist
ja
adc
(bad)
repz
loopne
or
dec
jb
out
clc
test
push
imul
push
push
push
ins
xlat
out
cmp
pushf
(bad)
ret
sbb
dec
xor
imul
sub
push
push
int3
lgs
xor
sub
das
clc
add
shl
iret
cmp
lods
cmp
dec
xchg
push
and
test
and
push
test
mov
xor
(bad)
mov
xchg
cmp
inc
in
adc
out
push
lds
jo
cdq
(bad)
cmp
rol
adc
mov
pushf
cmp
lahf
pop
jmp
stos
xor
pop
cmc
nop
mov
pop
aad
jo
mov
mov
sbb
ins
mov
inc
ror
xchg
push
mov
add
mov
add
add
aad
shl
inc
adc
pushf
leave
nop
mov
xor
cs
and
test
push
cmps
pop
jnp
dec
mov
arpl
pusha
sbb
test
into
sbb
scas
popf
movs
xchg
call
or
or
xchg
ret
sbb
sub
(bad)
in
out
sar
mov
movs
iret
loop
(bad)
fdiv
cdq
mov
movs
js
pop
scas
push
ret
test
pop
stos
(bad)
(bad)
fstp
sar
mov
push
in
stos
xchg
int
push
xlat
(bad)
xchg
outs
pop
xchg
fwait
or
arpl
adc
pop
scas
push
leave
stos
outs
leave
jne
xchg
int
int
ins
popf
or
and
mov
(bad)
push
mov
inc
xchg
cs
adc
outs
scas
xchg
xchg
pop
inc
mov
scas
lock
adc
jle
push
or
js
out
add
jge
mov
adc
lahf
dec
xor
xchg
pop
repz
pushf
out
sub
stos
xchg
stc
adc
int3
mov
loopne
(bad)
inc
mov
xchg
icebp
inc
stos
test
fild
icebp
cmp
push
sbb
push
enter
sar
mov
pop
push
scas
inc
xchg
mov
cmp
inc
aad
xor
pushf
jle
push
dec
in
sbb
sub
aad
stos
repz
xchg
leave
mov
mov
test
movs
push
ret
pop
sbb
das
(bad)
push
jmp
add
lock
mov
ds
lds
es
dec
pop
loopne
mov
das
push
cmp
cmp
retf
outs
sub
push
cli
jno
les
fsubr
jle
mov
mov
xchg
add
xlat
cmp
mov
push
jge
pop
adc
sub
popf
enter
push
dec
ret
fsub
repnz
pop
sbb
hlt
sbb
jg
or
call
outs
cmp
dec
ror
aaa
fild
push
jo
jae
push
add
test
sbb
fisttp
mov
outs
fstp
and
fprem
imul
lea
jno
push
sub
sub
xchg
jge
add
bound
mov
stc
icebp
xchg
shl
mov
ja
xchg
jb
xor
movs
inc
mov
xchg
popa
repz
push
cmps
shr
fidivr
mov
in
seta
fwait
adc
adc
sbb
sub
ins
cmp
adc
(bad)
fld
rcr
and
cmp
xchg
sbb
pop
aas
ja
jns
and
sahf
cmp
mov
jne
add
rol
lods
aad
test
and
mov
sbb
rol
jg
pop
les
nop
and
mov
and
pusha
iret
ficom
xchg
adc
cs
scas
cmp
and
int3
or
pop
sub
leave
push
std
fcom
cmp
sahf
lock
push
dec
imul
jb
lods
imul
ret
test
cs
in
push
(bad)
push
stos
mov
mov
sahf
stos
add
into
xchg
mov
sub
sub
pusha
scas
sub
into
les
jl
or
(bad)
cmp
adc
fnstcw
fistp
mov
pop
bnd
sbb
and
les
enter
jmp
mov
test
fisub
jmp
sar
movs
test
xchg
sbb
mov
cmp
mov
shl
gs
ret
lea
popf
pop
xchg
xchg
adc
lahf
sbb
or
or
push
push
pusha
mov
lahf
pop
je
imul
or
sub
lock
stos
test
ins
movs
add
es
in
stos
mov
das
lea
scas
pop
in
jb
jns
(bad)
lods
or
inc
loope
imul
fs
aas
jnp
add
xlat
lahf
data16
xchg
test
mov
fisttp
dec
rol
mov
xchg
movs
sub
sub
lds
jbe
mov
iret
aaa
sbb
cdq
lds
cmp
mov
std
mov
fstp
ficomp
and
jns
sub
test
test
pushf
aas
push
(bad)
fdivp
inc
push
out
sbb
sub
int
push
les
and
pop
or
or
dec
mov
or
pop
mov
outs
mov
test
push
lahf
jae
fbld
lods
iret
xchg
aad
or
(bad)
cmp
push
or
aam
dec
lea
in
ss
xchg
pop
mov
sub
ss
sub
lods
mov
push
xchg
push
mov
hlt
jnp
aad
and
pop
pushf
loopne
sbb
test
cmp
pusha
icebp
inc
pop
sub
shl
fmul
aas
aaa
aam
(bad)
dec
xor
inc
inc
xchg
pop
adc
add
add
lds
inc
adc
call
repz
and
mov
inc
in
push
add
es
and
xchg
sub
addr16
mov
mov
xchg
jns
mov
cmp
lods
or
fiadd
sub
pop
add
pop
jmp
aad
xchg
xchg
inc
shl
mov
mov
cmps
rol
and
cmp
pushf
sbb
mov
shr
sbb
sbb
daa
fcmovne
dec
imul
jecxz
(bad)
loop
adc
rcl
loope
jge
movs
ss
enter
mov
add
addr16
mov
mov
outs
cmp
into
pop
xchg
jp
mov
aaa
test
pop
and
lds
and
and
in
les
scas
push
push
mov
mov
mov
cmp
daa
retf
test
movs
xchg
push
mov
movs
out
dec
jae
mov
pop
pop
fnsave
fwait
inc
js
adc
rol
xor
mov
in
mov
leave
push
and
pop
pop
push
sar
push
adc
mov
test
pusha
adc
data16
je
dec
jp
in
and
mov
ds
mov
lahf
bnd
mov
xchg
outs
pop
mov
int
mov
lods
mov
inc
ret
push
push
out
mov
jmp
cmp
sub
int3
pop
or
adc
pop
arpl
inc
addr16
nop
inc
adc
jge
sbb
mov
icebp
push
sahf
mov
cmp
scas
or
sahf
in
lock
cmp
cs
xchg
add
dec
mov
push
cmps
xor
xchg
mul
call
dec
scas
xchg
sbb
ja
mov
rcl
cmp
enter
cmp
add
sahf
fwait
mov
jle
pop
jno
lea
scas
mov
jle
scas
call
xchg
mov
jmp
add
cmp
jnp
into
dec
rol
shl
push
dec
jg
or
jge
test
pusha
leave
xor
and
jb
out
data16
ffreep
cwde
and
xchg
xor
sahf
push
rcr
test
movs
arpl
fstp
push
daa
push
xchg
fwait
(bad)
enter
sbb
adc
imul
and
sub
shr
sub
xchg
gs
ds
dec
xchg
add
ds
cli
cmp
out
jl
lds
jnp
lods
mov
sbb
movs
jge
pop
sub
in
int3
es
mov
sub
inc
xor
jecxz
dec
(bad)
fwait
pop
inc
aam
ins
cmp
mov
neg
mov
retf
lea
nop
mov
xchg
scas
xchg
nop
dec
cmp
pop
push
shr
and
leave
xchg
xor
gs
sysexit
movs
in
cmps
(bad)
add
repnz
dec
sbb
pop
or
push
retf
sbb
pop
xor
cmp
adc
pusha
test
cs
(bad)
popf
inc
(bad)
inc
adc
shl
xor
addr16
cli
push
outs
test
xor
and
inc
xor
pop
and
push
push
scas
test
not
pop
mov
idiv
icebp
lea
mov
leave
ds
out
bound
mov
cwde
dec
pop
cmp
inc
sbb
and
and
pop
xchg
ror
cs
arpl
push
sub
fdivp
mov
jl
imul
mov
cs
jnp
rcr
(bad)
mov
aad
inc
push
mov
fld
mov
sar
adc
push
jp
outs
add
fist
sbb
sub
les
mov
jb
sahf
mov
fcmovb
fsubr
push
sti
je
mov
adc
lea
push
xchg
popf
das
inc
mov
sbb
bnd
mov
mov
das
xor
ret
test
std
pop
cwde
jmp
adc
mov
cmps
mov
mov
aad
jle
mov
cwde
outs
imul
or
retf
(bad)
add
xor
sub
in
shl
das
push
xchg
dec
push
loopne
outs
mov
ins
pop
fcomip
cmp
push
dec
lock
sub
cmps
into
mov
sbb
dec
and
les
pop
mov
xor
(bad)
das
mov
ds
inc
and
or
lods
scas
fmul
push
sbb
adc
inc
jmp
push
or
adc
mov
mov
shr
push
mov
mov
pop
jg
inc
stos
push
cmp
sahf
pop
mov
fisttp
outs
sub
mov
es
call
dec
jg
ds
jbe
mov
cmp
scas
push
sbb
(bad)
ds
xchg
ja
mov
dec
pushf
xor
mov
inc
jge
or
ret
dec
shl
xchg
add
and
ins
mov
mov
mov
nop
cmp
or
call
cmp
into
test
fimul
mov
and
push
shr
div
aas
mov
xor
inc
imul
nop
fmul
sub
adc
lods
popf
inc
ret
push
mov
jbe
repz
push
adc
loopne
xor
test
je
aaa
out
ins
bound
fsubr
icebp
rcr
push
pusha
fsub
iret
rcl
cs
and
jp
push
pop
stos
add
adc
and
ds
push
mov
idiv
xchg
xor
repnz
cmp
lahf
push
add
sbb
push
mov
mov
popf
popa
jp
pop
add
mov
push
cmp
(bad)
or
fcom
jbe
imul
jmp
pop
sub
mov
nop
addr16
mov
jp
test
inc
pop
mov
(bad)
xor
nop
cmp
je
scas
leave
xchg
(bad)
ret
jo
cwd
xchg
jns
mov
mov
ret
lea
sbb
scas
outs
sahf
sub
mov
mov
xchg
push
imul
pop
ror
bound
fs
aaa
es
retf
aad
arpl
xchg
out
jp
pop
xchg
les
lods
push
add
cdq
das
sahf
cmps
xchg
mov
mov
popa
out
jmp
jecxz
out
test
add
pushf
lds
mov
mov
fnstenv
retf
fidiv
enter
loope
cmps
jmp
daa
mov
push
(bad)
sahf
call
add
pop
cdq
xchg
cli
rcl
add
imul
test
inc
add
pop
imul
mov
stc
rol
sbb
jnp
sub
and
or
out
and
imul
mov
mov
jl
jb
cli
sahf
push
mov
call
hlt
out
mov
inc
pop
sub
cwde
sub
pushf
cs
and
retf
es
imul
fidiv
shr
movzx
aam
mov
adc
mov
mov
xchg
pop
rol
pop
adc
sub
aad
add
aaa
xchg
icebp
jmp
or
loop
adc
clc
or
ja
retf
loop
shl
imul
int3
mov
adc
nop
es
(bad)
pop
mov
test
inc
cmp
xlat
adc
adc
jg
mov
push
cmp
cmp
pop
test
adc
xchg
mov
mov
adc
jo
imul
imul
test
arpl
pushf
jno
hlt
enter
pop
in
jg
iret
pop
adc
or
adc
mov
jne
mov
in
xlat
retf
dec
jb
popa
cmp
sahf
popf
sub
jns
ins
xor
test
inc
add
jle
popf
(bad)
push
mov
xor
repnz
(bad)
test
mov
or
jnp
sub
sbb
call
adc
mov
cmps
pusha
dec
ror
cld
pop
jne
mov
js
push
adc
xor
(bad)
jg
pop
add
xchg
das
pop
adc
int3
shl
xchg
dec
and
js
pop
jge
xor
and
fidivr
jb
(bad)
xchg
add
out
xchg
adc
in
ins
dec
push
outs
sub
adc
loopne
lds
mov
sub
cwde
mov
push
and
or
mov
jmp
nop
mov
pop
cdq
rcr
lods
mov
pop
shl
mov
sar
retf
mov
cmp
shufps
push
in
dec
xchg
mov
sub
adc
int
lds
jge
imul
aam
test
daa
pop
arpl
mov
mov
pop
sub
(bad)
push
imul
lods
mov
xchg
push
pop
xchg
inc
pop
test
mov
push
sub
je
pop
or
mov
mov
mov
int
in
jo
sbb
pushf
sbb
jo
mov
jmp
or
mov
or
pop
pop
outs
div
xchg
int
or
jne
aam
test
mov
sbb
push
pop
jmp
stc
sub
lock
add
int
push
pop
mov
das
and
or
les
sub
inc
outs
jbe
ins
aad
loopne
adc
(bad)
out
(bad)
pop
cmc
xchg
test
movs
push
ins
mov
mov
in
add
jecxz
adc
sbb
xchg
mov
sbb
sbb
sub
mov
test
std
or
mov
xchg
imul
mov
into
sar
or
mov
jp
je
arpl
(bad)
dec
sbb
mov
rol
std
jno
aam
inc
xchg
mov
or
or
push
pop
pop
loop
outs
mov
inc
dec
bound
jno
fist
sti
mov
pop
inc
ins
rcl
daa
pop
mov
mov
dec
js
dec
sub
push
jmp
pop
inc
add
lea
std
mov
mov
cmp
xor
aas
mov
imul
push
mov
nop
out
pusha
cmp
and
mov
jns
pop
dec
mov
cmc
push
aas
pop
jmp
mov
popf
mov
cmc
jg
mov
lods
dec
xchg
push
rol
jp
std
mul
pop
gs
loopne
(bad)
mov
je
shl
pusha
int
xor
or
out
mov
sbb
push
jg
ja
sub
int
jp
aam
out
or
or
icebp
sub
pop
pop
jbe
call
lahf
mov
mov
int
jbe
or
push
outs
fmul
and
mov
rcr
and
add
cmp
mov
ret
push
push
rcr
mov
icebp
sbb
push
add
imul
out
jecxz
gs
frstor
mov
sbb
push
adc
sbb
push
and
sub
hlt
ins
pop
shl
dec
jecxz
je
or
jl
in
fcmovnb
adc
shl
out
pop
mov
and
dec
or
arpl
mov
outs
int
ss
pop
mov
rcl
mov
mov
or
jne
mov
jmp
ins
mov
pop
or
lods
sub
shr
sbb
dec
adc
pop
das
adc
stos
pop
xor
jmp
jne
xchg
ficom
adc
in
add
add
inc
xor
mov
add
lock
jae
stos
into
xchg
dec
jge
mov
popf
out
jmp
arpl
out
xchg
mov
add
push
sub
xor
mov
cmp
arpl
pop
add
shl
lods
inc
into
(bad)
stos
pop
outs
scas
sbb
iret
out
movs
ds
addr16
test
add
adc
adc
pusha
in
inc
outs
je
and
mov
fdiv
std
das
inc
sar
std
jo
jb
sub
fsub
inc
pop
dec
or
jge
add
in
jle
xchg
jbe
retf
push
inc
in
pop
std
xchg
fucomi
ds
or
pop
call
enter
cdq
js
pop
sti
mov
(bad)
clc
sar
adc
xchg
mov
inc
shr
fstp
lods
aas
js
dec
outs
cmps
sub
mov
mov
adc
mov
shl
jbe
mov
loope
(bad)
(bad)
push
dec
mov
es
adc
mov
xor
neg
cmp
xchg
imul
loopne
cmps
jge
scas
xchg
sar
aad
sbb
out
jl
jne
xor
cwde
jmp
aaa
adc
mov
das
int3
sti
and
cmps
fwait
jae
fpatan
ja
push
nop
sar
cdq
xchg
sub
pop
(bad)
adc
xor
sub
xor
fcomp
sub
sub
lods
mov
pop
sar
(bad)
pop
pop
mov
xchg
push
xchg
lahf
jg
outs
loop
cmps
pop
pop
inc
or
js
and
ja
lahf
jl
out
inc
les
movs
push
mov
mov
pop
fisttp
fldenv
jge
adc
shr
or
js
and
mov
jmp
(bad)
int3
mov
add
in
dec
lea
mov
jb
jmp
mov
push
add
dec
adc
or
adc
mov
lds
sbb
mov
adc
sar
fcmovnbe
aad
push
(bad)
sub
pop
mov
pop
call
(bad)
stc
mov
jle
leave
pop
add
das
fdiv
mov
out
mov
and
imul
mov
xor
fistp
mov
pop
out
push
sti
mov
mov
test
sub
mov
add
test
fst
jbe
push
mov
repz
xor
test
cmps
ins
or
push
adc
jecxz
aas
fisttp
in
pusha
repz
push
(bad)
aam
lods
movs
cdq
mov
add
lea
mov
jge
addr16
cmps
xchg
call
arpl
and
test
test
mov
loop
shl
ss
mov
pop
retf
xchg
lds
div
pushf
inc
sbb
push
int3
outs
mov
sub
jbe
mov
jno
loop
sar
pop
ret
popf
and
daa
pop
adc
(bad)
adc
sar
pop
std
dec
inc
sub
rcr
in
arpl
(bad)
xchg
add
fs
rol
jbe
dec
inc
icebp
jp
repz
or
ja
xchg
add
into
cld
retf
mov
aam
cmps
test
std
mov
inc
sub
mov
movs
sub
div
in
icebp
lahf
jl
adc
sbb
repnz
ffree
rcr
cdq
enter
or
and
js
xchg
cmp
je
or
jmp
test
or
data16
lods
mov
xor
jo
mov
dec
jbe
dec
shl
or
mov
dec
ds
loope
add
rcl
mov
xchg
mov
(bad)
jbe
es
aaa
movs
call
add
jp
loopne
into
lods
jnp
jp
inc
stos
pop
sti
add
cmc
out
inc
out
je
pop
mov
retf
rcl
xor
and
ret
lock
add
es
ds
pop
cmp
js
or
xor
ins
adc
das
mov
mov
sti
jp
fwait
push
pushf
or
xor
inc
out
add
jg
mov
sub
or
retf
mov
adc
xchg
call
pusha
xor
lea
sub
jge
mov
and
cmc
xor
out
push
jb
test
(bad)
push
pop
hlt
fiadd
retf
data16
(bad)
mov
cli
xor
aam
mov
cmp
sti
mov
or
mov
sar
pushf
inc
dec
les
cmp
nop
leave
cmp
mov
jecxz
mov
jnp
and
icebp
ins
bound
pop
lods
cdq
inc
shl
add
mov
mov
cmp
cwde
test
fnstsw
mov
test
xchg
lahf
jle
inc
fld
in
and
mov
push
push
punpckhwd
js
mov
pop
jge
mov
into
fld
mov
imul
dec
lds
xor
sub
jns
js
inc
outs
xor
dec
pop
popa
enter
imul
js
cli
(bad)
call
clc
sti
cmps
mov
mov
psrlq
fadd
mov
ror
mov
mov
loopne
iret
mov
je
mov
outs
xor
sbb
adc
mov
jb
inc
and
pop
add
cmp
mov
pushf
cdq
sbb
cmp
leave
cwde
mov
(bad)
int
push
jnp
inc
push
sub
mov
push
or
adc
add
pop
mov
or
das
in
xor
(bad)
jae
sbb
cwde
add
aam
cmp
mov
xlat
mov
push
mov
(bad)
outs
adc
adc
scas
pop
(bad)
pop
pushf
call
push
int
pushf
in
mov
lods
rol
ins
jge
mov
popf
dec
mov
dec
mov
adc
out
mov
cwde
xor
mov
fild
xlat
loopne
je
daa
cmp
adc
mov
in
sub
movzx
or
jbe
test
mov
ret
out
cmp
inc
mov
test
push
lods
and
mov
mov
push
mov
scas
jne
inc
lahf
js
mov
dec
movs
inc
push
nop
or
pop
cs
out
jo
or
in
mov
xor
push
dec
imul
ds
aam
retf
jl
and
outs
mov
sar
ss
ror
sub
cwde
pop
sar
fcomp
pop
pop
je
cdq
fild
mov
(bad)
cmp
sbb
iret
mov
test
test
jb
mov
cld
shr
pop
movs
mov
sub
out
inc
jmp
inc
xor
or
addr16
popf
pop
mov
xchg
sbb
je
jne
out
jne
xor
sbb
xor
fwait
ja
jno
pop
cmp
adc
aad
mov
or
js
push
add
(bad)
stc
sub
jmp
cdq
xchg
xchg
cmc
enter
sahf
dec
(bad)
jnp
(bad)
pop
and
inc
xchg
fs
(bad)
pop
mov
in
xor
jmp
clc
xchg
cwde
ins
adc
cs
rol
push
popf
js
jo
(bad)
mov
popf
es
jg
adc
push
fdiv
(bad)
lds
scas
fmul
xchg
sbb
cli
(bad)
or
sbb
mov
cmps
mov
mov
push
ins
push
gs
not
mov
push
adc
push
stos
xchg
sbb
jp
jl
mov
push
lahf
imul
cs
mov
cwde
cmp
pop
xchg
lods
ror
jbe
or
sahf
mov
fucom
fst
outs
push
mov
test
or
shr
adc
cmp
cmps
inc
fistp
jo
cmp
xor
scas
(bad)
dec
inc
jo
xor
cmp
xor
lea
sar
mov
mov
or
fld
mov
add
in
fs
jb
pop
mov
mov
je
nop
lds
mov
addr16
mov
stos
lea
in
dec
pop
dec
retf
or
(bad)
fidivr
mov
mov
mov
call
movs
sub
push
shr
aad
ins
repnz
fsub
mul
xchg
mov
mov
mov
cdq
(bad)
rol
cmp
ret
ins
stc
shr
mov
adc
mov
int
xor
lds
mov
lds
mul
pop
inc
ret
and
mov
dec
fs
mov
adc
fs
stc
push
mov
xor
lods
add
or
mov
in
sbb
add
shr
and
rcl
test
sar
mov
mov
and
xchg
mov
imul
dec
fisttp
jnp
clc
inc
js
jp
mov
js
xchg
imul
and
mov
jb
dec
add
into
dec
lods
inc
sar
sbb
jae
xchg
mov
cs
fwait
mov
mov
lods
lahf
xor
jge
lock
mov
sub
mov
lods
leave
mov
rcr
icebp
push
nop
fidiv
sub
fisub
pop
ret
pop
aad
mov
inc
pop
jno
pop
mov
inc
popf
ret
(bad)
int
test
xchg
sub
aaa
jnp
test
adc
cmp
cmp
cmp
or
enter
mov
cdq
arpl
or
dec
push
adc
je
mov
and
mov
in
pop
xchg
mov
jg
jmp
ins
lahf
js
push
je
push
jecxz
sub
and
into
inc
rcr
sub
in
sub
jecxz
ficom
data16
cmp
(bad)
(bad)
fiadd
(bad)
cmps
or
fistp
sub
jle
mov
in
outs
fcmovnb
in
sub
scas
jmp
pop
int3
inc
rol
or
jl
mov
dec
adc
xor
icebp
repz
int3
je
gs
cmp
xor
sub
push
int
adc
popa
add
sbb
mov
dec
add
movs
stos
push
gs
stos
ret
add
mov
mov
sub
leave
aad
stc
pop
push
dec
sub
xor
sbb
addr16
dec
aad
leave
jp
jae
pop
or
movs
mul
push
xchg
ficomp
ss
fwait
add
jo
fnstsw
jle
jno
dec
push
sub
push
in
and
loopne
mov
and
mov
or
mov
addr16
daa
push
sbb
fcomp
push
dec
shl
mov
cdq
jmp
retf
jnp
in
test
test
xor
xchg
lock
xor
add
or
es
ret
mov
addr16
rol
test
dec
scas
push
nop
addr16
je
aam
lock
jmp
jp
jnp
dec
dec
jle
xor
jnp
push
out
or
dec
mov
call
mov
rol
inc
lock
mov
aam
lods
pop
jns
lds
cmp
or
sub
add
inc
ins
fsubr
add
ja
retf
lea
xor
int
jo
in
inc
scas
and
dec
xchg
(bad)
sub
das
push
lock
addr16
dec
hlt
sbb
pop
mov
mov
movs
fisttp
popa
jne
idiv
xchg
inc
and
xchg
cmp
dec
cld
scas
js
mov
xchg
call
fst
adc
aam
inc
pusha
sbb
pop
in
popf
or
push
xchg
pop
das
retf
push
adc
ror
jnp
push
out
pop
mov
mov
fdiv
sar
jno
xchg
fistp
xchg
jno
xchg
in
push
ja
cmp
mov
xor
out
cmp
sbb
sbb
mov
dec
pop
sbb
push
mov
push
fnstenv
xchg
xchg
cmps
mov
sub
xor
popa
fadd
mov
ins
pop
scas
sahf
ds
sbb
into
sub
daa
fsub
cmp
lods
push
loope
imul
mov
adc
and
or
cmp
aas
jl
nop
push
cmc
test
pop
or
mov
xchg
lods
mov
iret
gs
leave
call
dec
cmp
ror
fmul
cmp
gs
stos
aad
push
rol
fistp
push
lods
dec
push
shl
pop
mov
loope
mov
test
mov
xchg
fcomp
fs
adc
pop
xchg
sbb
nop
pop
fistp
mov
add
popf
pop
test
mov
das
sbb
mov
xchg
lods
mov
inc
ret
cmp
sub
imul
aam
xchg
mov
cld
jae
and
fadd
pop
mov
cwde
test
push
test
mov
retf
sub
popa
and
popf
sbb
shr
pop
retf
or
xchg
icebp
mov
push
int
inc
adc
dec
dec
and
add
daa
shr
sar
inc
mov
nop
push
adc
jno
push
cmc
mov
mov
mov
sub
sti
dec
nop
and
movs
mov
movs
jb
xchg
jle
addr16
dec
pop
das
mov
mov
sbb
mov
test
mov
xor
sbb
mov
jecxz
dec
cwde
fdiv
enter
dec
jno
int3
ins
or
mov
sar
mov
sub
push
nop
(bad)
adc
call
push
inc
inc
mov
ja
je
inc
pushf
pusha
push
pop
pop
mov
inc
mov
fcom
loop
aaa
lods
scas
push
test
mov
jbe
pop
or
push
shl
dec
cmps
clc
adc
sbb
test
lods
int
pop
xchg
add
cmp
cdq
cs
xchg
pop
add
pusha
adc
adc
jmp
jne
and
in
clc
dec
adc
lea
jne
arpl
arpl
or
aas
rol
cmps
pop
mov
ins
push
xchg
adc
sub
nop
jbe
jle
dec
shl
in
inc
add
xor
fiadd
enter
fwait
pop
cmp
pop
mov
iret
pop
cmc
lea
pop
mov
push
add
sbb
ficom
aam
cwde
xchg
sahf
xchg
pop
ret
imul
pop
xor
mov
cmp
sub
scas
sbb
or
push
xchg
xchg
and
jb
inc
sub
xchg
in
jl
ss
pusha
retf
sbb
iret
sbb
nop
cmp
outs
push
xchg
mov
sub
cs
or
or
cmp
fmul
jge
test
push
jae
imul
xchg
outs
cwde
sbb
lods
add
sub
rol
scas
jle
pop
xchg
xor
push
cdq
aas
pop
add
test
xor
jge
ret
pushf
cld
iret
(bad)
add
mov
sub
sub
movs
and
pusha
cdq
outs
cmp
inc
(bad)
mov
stc
int
inc
inc
rol
cld
pop
int
mov
jge
outs
int
jl
jecxz
add
cmp
dec
ins
sbb
dec
adc
movs
jb
pop
cld
lock
test
or
sub
pusha
fwait
data16
cmp
pop
xor
adc
and
sbb
adc
out
stos
jae
enter
shr
jecxz
cli
mov
outs
pop
in
adc
repz
mov
gs
retf
leave
arpl
mov
into
daa
fmul
mov
(bad)
lods
rcr
push
(bad)
mov
lods
hlt
mov
jnp
sbb
xor
add
leave
add
sub
pushf
sar
test
xor
add
pop
mov
pop
jne
fcomip
xchg
sbb
mov
mov
mov
(bad)
cmp
sbb
push
ja
cmp
cmp
xchg
xor
in
inc
in
stos
fisub
mov
in
add
sub
pop
mov
jl
adc
ffree
psrlq
scas
push
and
add
test
mov
push
add
fadd
fst
into
jmp
movs
mov
xor
mov
jp
cmp
mov
jo
xor
into
jno
inc
out
pop
sbb
js
leave
in
cmp
stc
ins
cwde
mov
mov
mov
dec
lea
scas
dec
cmp
sti
in
cmp
dec
xchg
pop
sub
aad
js
jo
or
pop
icebp
adc
mov
in
test
sbb
xchg
xchg
repz
test
jle
inc
dec
in
push
(bad)
mov
jnp
cmp
xor
cmp
mov
push
leave
sbb
jo
or
xchg
lds
pop
sub
mov
cmp
cld
add
aad
mov
mov
mov
jb
repz
mov
xor
shl
inc
dec
dec
cld
push
xchg
test
repz
ret
lds
sub
cmp
inc
push
stos
pop
rcl
scas
xor
mov
stos
aas
nop
jnp
mov
loope
sub
push
mov
imul
mov
mov
test
or
pop
sub
inc
test
cld
jae
sbb
mov
sub
pop
cmp
xchg
repz
cli
pop
loopne
pop
lods
es
add
push
mov
test
test
sub
sub
dec
add
call
push
add
stos
adc
shl
(bad)
xchg
(bad)
mov
push
pop
mov
add
aaa
fs
mov
mov
outs
mov
xlat
movs
jnp
mov
push
(bad)
sub
and
leave
retf
sub
outs
mov
aad
cmp
clc
adc
sbb
shl
fs
or
repnz
outs
fimul
cld
lock
mov
or
mov
and
or
ins
cwde
pop
ror
cmc
mov
mov
(bad)
jecxz
pop
inc
mov
mov
(bad)
and
rol
rcl
fist
mov
mov
stos
in
and
mov
or
scas
xchg
mov
jbe
mov
loope
or
lods
sub
jb
pushf
(bad)
and
int3
jb
cld
sbb
loopne
xor
mov
cwde
mov
pop
(bad)
mov
inc
enter
add
ins
inc
out
int
pop
mov
xchg
xchg
pusha
or
int3
es
mov
or
imul
retf
dec
imul
(bad)
or
cmps
ins
jge
mov
mov
mov
dec
rol
jmp
cmps
adc
aam
mov
or
pop
int3
mov
js
jge
rcr
and
sbb
add
test
jns
and
and
loopne
test
push
push
mov
mov
mov
test
dec
es
data16
cwde
lds
or
lods
sbb
ins
dec
mov
pop
leave
rep
xor
and
push
and
pop
dec
cmp
mov
add
shl
in
adc
test
xor
or
cmp
jnp
retf
sub
in
test
sbb
sub
or
xchg
movs
inc
aaa
sbb
push
test
pop
(bad)
sub
push
and
pop
(bad)
lods
push
jb
scas
jo
or
jle
jne
mov
add
sub
jns
xor
push
push
dec
push
rcr
jae
adc
ds
jae
mov
pop
pop
xlat
push
mov
sub
adc
xchg
iret
mov
loop
pop
mov
lods
xchg
jbe
mov
imul
shl
mov
xor
mov
ins
sar
push
or
mov
inc
sbb
mov
and
sti
dec
mov
add
(bad)
rcl
push
push
fcom
xchg
sbb
aam
out
jecxz
and
mov
fdivr
lahf
loopne
push
inc
lods
adc
btc
add
xor
outs
fsubr
cmp
jge
xchg
or
arpl
mov
push
push
mov
inc
or
dec
xor
mov
rcl
cmp
push
jmp
aam
repnz
aad
jae
loopne
into
xchg
loope
and
jo
or
inc
dec
and
mov
jl
cmp
jnp
push
inc
mov
out
imul
cmp
adc
xor
or
lea
popf
jae
dec
mov
dec
xchg
lds
inc
loop
out
imul
or
mov
inc
pushf
inc
xor
jmp
xchg
mov
lods
pusha
xchg
aas
add
std
scas
sar
mov
mov
sub
add
(bad)
mov
push
pop
push
inc
push
mov
test
enter
mov
outs
xchg
inc
mov
mov
xchg
stc
sub
mov
ficom
sahf
sbb
jno
stos
sar
pop
jns
movs
hlt
jb
fidiv
add
mov
jmp
mov
sbb
xchg
int3
sbb
xchg
sub
lods
out
shr
imul
imul
das
xor
mov
push
imul
loopne
push
shr
jne
sub
imul
inc
mov
mov
ins
(bad)
ins
andnps
adc
iret
imul
add
nop
add
leave
aad
or
test
inc
mov
pop
mov
or
gs
sbb
loope
bound
dec
adc
(bad)
test
hlt
push
in
xor
aad
xchg
ret
inc
aas
or
retf
je
cmp
adc
cwde
je
repz
inc
outs
jb
pop
mov
adc
dec
pop
aad
xlat
stos
xor
es
ins
cmps
test
jbe
mov
push
mov
sbb
inc
push
adc
jno
push
mov
sub
push
xor
pop
icebp
mov
shl
bound
cmps
add
jg
push
push
adc
sub
sahf
sub
inc
mov
xchg
xlat
or
cmp
(bad)
scas
adc
and
inc
and
(bad)
mov
cmp
xor
in
inc
out
jo
pop
pop
xchg
sbb
adc
xchg
mov
jl
xor
xor
mov
inc
(bad)
fistp
int3
jge
mov
adc
jnp
sub
test
mov
xchg
sub
popa
neg
aad
push
pushf
sub
xchg
out
sub
mov
mov
mov
push
lds
call
xor
sub
rcr
jo
je
out
repnz
clc
call
sbb
fwait
shl
jge
popf
adc
and
vmwrite
sub
loope
retf
popf
jp
int3
inc
pop
jne
je
xchg
jle
es
cdq
mov
mov
and
(bad)
arpl
jg
adc
inc
sub
xchg
jmp
pushf
cs
ror
xlat
inc
mov
aas
mov
mov
cmp
inc
mov
sub
mov
or
push
pop
push
push
test
cmp
pop
fistp
js
lock
enter
mov
pop
loopne
adc
mov
cmps
mov
mov
ret
(bad)
test
cwde
push
(bad)
push
jne
inc
fs
jno
iret
xchg
pop
push
ja
iret
pop
and
and
dec
sbb
jle
neg
sbb
push
pop
sub
(bad)
sbb
sub
jecxz
lahf
popf
sub
rcr
ret
pusha
gs
jmp
lds
add
int3
jmp
mov
and
int3
lock
adc
mov
leave
jns
mov
mov
add
push
inc
inc
leave
into
mov
and
aad
pop
pop
mov
xor
int
inc
adc
pusha
adc
mov
aad
mov
ins
test
pop
mov
sbb
jp
xchg
ins
sbb
iret
dec
fnstenv
es
mov
div
test
(bad)
ffree
sbb
pop
leave
lahf
imul
add
adc
mov
pop
test
push
jle
adc
sub
dec
dec
xor
pop
cdq
pop
cmp
and
jmp
jo
sub
mov
dec
sub
push
pop
or
fdiv
fs
push
lahf
sub
jl
mov
jmp
faddp
mov
add
jg
gs
jge
in
mov
mov
and
jg
sti
add
inc
sbb
pusha
inc
jns
lea
dec
cmp
push
jle
test
mov
push
sbb
mov
gs
xor
call
(bad)
das
rol
push
push
(bad)
cli
and
pop
nop
mov
cmp
jns
ja
shl
das
fld
mov
mov
sbb
loopne
mov
xor
mov
fcom
sahf
aas
mov
mov
and
dec
(bad)
mov
sbb
enter
test
and
xchg
pop
push
out
mov
adc
sub
xlat
adc
lods
rcl
mov
adc
movs
iret
adc
push
cmp
and
arpl
mov
mov
or
add
cmps
jbe
add
or
or
test
cwde
lahf
ret
retf
and
jnp
mov
sbb
dec
cmp
imul
loopne
xor
sub
dec
add
xchg
stos
stos
jbe
arpl
inc
push
mov
movs
or
fisub
sbb
dec
pop
jmp
inc
add
into
jmp
not
cmp
iret
aad
cmps
loope
pop
adc
clc
jno
rcl
out
mov
jg
inc
mov
loop
fldenv
add
aas
fisubr
fadd
arpl
mov
pop
pusha
out
outs
cmp
pop
ja
push
icebp
dec
lahf
and
out
dec
push
xor
mov
push
je
rcr
lds
mov
lock
outs
jl
ret
add
fdivr
inc
inc
dec
rcl
ins
nop
inc
lea
nop
xchg
outs
fs
imul
adc
ins
cli
mov
xor
lods
sub
xor
inc
and
dec
xor
das
jmp
(bad)
mov
adc
imul
gs
sub
daa
mov
icebp
adc
outs
imul
test
jle
sti
adc
dec
xchg
dec
mov
arpl
jae
inc
xchg
cmp
sbb
repz
fldenv
shl
mov
lea
jb
rcr
cdq
test
mov
(bad)
mov
sub
pop
inc
xchg
pop
(bad)
retf
xlat
(bad)
into
cld
lahf
push
mov
and
cli
mov
retfw
mov
scas
jmp
dec
js
(bad)
jmp
xor
test
push
cmp
pop
cmp
rcl
cwde
add
loope
jo
jae
shl
pop
add
cmps
xor
mov
in
inc
sub
xchg
add
or
jae
rcl
js
pop
fwait
into
test
mov
sub
mov
mov
fbstp
jmp
cmp
(bad)
cwde
rcr
dec
daa
(bad)
dec
xchg
mov
popf
es
pop
stc
pusha
mov
mov
and
hlt
adc
ffreep
loop
in
or
mov
xor
jl
pop
mov
xlat
hlt
mov
je
cdq
int
push
out
ds
jmp
loopne
call
mov
pop
addr16
call
and
out
or
pop
shl
xchg
xor
xor
sti
aad
int
loop
stc
mov
dec
jb
pushf
add
pop
push
sbb
add
popf
and
retf
(bad)
call
and
xchg
jne
ss
or
xor
jl
jns
xlat
fdiv
clc
and
adc
sbb
jb
repz
in
mov
pusha
(bad)
lahf
call
lods
and
and
xchg
mov
or
dec
xchg
in
push
bound
sub
outs
push
mov
lods
(bad)
push
rcr
int3
jo
dec
pop
pop
sub
jbe
popa
ja
mov
pushf
ret
or
iret
xchg
sub
test
and
jnp
popf
loopne
dec
jmp
inc
pop
fidiv
retf
push
cwde
push
je
ret
mov
pop
(bad)
sti
mov
ja
sub
xchg
add
rcl
leave
mov
cmp
enter
and
mov
jns
push
and
and
xchg
int3
xchg
dec
mov
movs
sub
rcl
test
in
imul
mov
sub
sub
jae
das
int3
sbb
movs
xor
sahf
mov
dec
shl
cmps
sub
sahf
cwde
shl
fnstcw
push
push
mov
mov
inc
cld
popa
test
xchg
jns
mov
fs
jecxz
test
hlt
fs
xor
movs
sbb
ret
fwait
xchg
cs
imul
inc
and
mov
in
movs
mov
pop
repz
mov
popf
fstp
data16
std
int
imul
aas
xor
xchg
pushf
aam
scas
mov
add
xchg
lods
mov
mov
pop
aas
into
cmp
mov
mov
je
sub
popf
and
mov
fmul
shl
hlt
xor
in
aam
inc
push
jae
inc
cmp
test
inc
(bad)
mov
and
movs
inc
push
sbb
(bad)
lods
xor
sar
into
jmp
imul
sub
(bad)
cld
sbb
mov
mov
aaa
popf
xlat
jo
jmp
imul
rol
jge
popf
xchg
adc
and
cwde
arpl
test
add
pop
dec
aas
pop
fcomp
jbe
xchg
mov
call
sub
sahf
xchg
xlat
and
jle
mov
add
mov
jge
adc
add
mov
mul
aaa
stos
stc
imul
test
int
(bad)
(bad)
(bad)
xchg
or
movs
xor
xor
cmp
xchg
dec
lds
add
xor
shl
push
or
pop
and
inc
xchg
push
mov
xchg
mov
jge
add
push
pop
sbb
cmc
retf
int
xchg
adc
pushw
mov
fisub
add
cli
xchg
aam
pop
mov
sbb
fwait
ins
int
sbb
outs
xchg
jbe
or
int3
aad
adc
test
push
jae
je
fnstcw
(bad)
mov
gs
push
jns
retf
mov
inc
out
fmul
xchg
pop
fldcw
mov
test
js
retf
adc
inc
gs
test
jle
movs
rcl
add
push
sahf
dec
mov
jnp
(bad)
int
push
fidivr
cmp
lahf
fdivr
mov
adc
mov
pop
lods
shr
sub
xchg
mov
push
ret
mov
leave
dec
fpatan
rol
cmc
push
lahf
out
aas
xchg
(bad)
mov
sbb
jb
xchg
loopne
call
jno
inc
adc
dec
lods
(bad)
div
jg
xchg
and
mov
cmps
mov
jb
enter
jae
mov
rol
dec
sbb
into
dec
clc
nop
lds
pushf
sbb
pusha
int
add
adc
sub
add
xor
lods
xchg
adc
(bad)
shr
rcl
xchg
push
or
pop
in
pusha
jle
fild
adc
jge
dec
mov
cwde
or
dec
jge
pop
push
xchg
jmp
cld
adc
shl
xchg
add
adc
mov
or
pushf
jbe
cld
aad
inc
dec
cmps
pop
ffreep
cdq
xor
not
xor
aam
push
and
pop
cmps
(bad)
jne
pop
loope
xchg
and
cwde
cld
mov
in
push
mov
sbb
add
push
dec
out
bndldx
cmp
in
aaa
push
add
fwait
push
pop
mov
cmp
adc
int
inc
test
into
cmp
cmps
stos
test
or
xor
fwait
mov
ret
push
retf
jecxz
adc
test
cmps
xor
or
stc
xor
mov
test
or
or
add
pop
repz
mov
sbb
lds
in
and
push
push
into
movs
mov
jmp
out
and
xor
out
mov
and
test
or
sub
movs
pushf
xor
or
adc
loop
popf
sub
jle
mov
sbb
test
xchg
(bad)
push
jae
aaa
xor
add
fidivr
xchg
adc
pop
in
arpl
inc
xchg
push
movs
cmps
or
add
aad
mov
jae
not
fmul
sbb
inc
shl
sub
adc
jl
dec
adc
fs
aas
cmp
and
sub
dec
outs
and
hlt
ins
xor
in
push
jmp
mov
lods
in
jno
push
jo
dec
xchg
inc
into
push
mov
pop
pop
nop
inc
mov
mov
jge
push
sub
sub
ins
jmp
or
fs
sbb
repz
rcr
pushf
hlt
push
adc
sub
loop
loop
mov
mov
pop
retf
test
push
(bad)
adc
mov
mov
loope
test
jl
mov
dec
movs
xchg
sbb
aam
loope
cmp
sahf
dec
xlat
push
and
jne
or
xchg
addr16
xchg
imul
fmul
int3
pop
fist
jbe
xchg
sar
sub
pop
out
test
add
pop
add
lea
daa
pop
loop
or
ds
pop
fld
xor
test
js
jns
ffree
or
xor
loop
mov
push
fld
sar
or
sub
sbb
test
mov
nop
mov
mov
inc
dec
lds
retf
imul
add
add
je
xchg
ss
mov
cmp
mov
push
xchg
icebp
pop
nop
mov
pop
sub
enter
mov
(bad)
shl
pop
or
lock
and
arpl
jnp
pop
cmp
mov
push
rcr
scas
dec
xchg
cwde
mov
das
push
mov
out
push
cld
mov
fld
jp
inc
pop
imul
push
idiv
xrelease
add
dec
mov
push
add
adc
push
pop
add
retf
(bad)
xchg
inc
or
inc
mov
push
lods
pop
pop
lds
add
popa
imul
ret
test
jns
and
ror
cmp
std
push
pop
mov
mov
lahf
push
imul
mov
jns
add
enter
jge
xor
push
enter
int3
mov
movs
jl
mov
xor
std
fs
loope
sub
les
push
sbb
add
lods
(bad)
int3
iret
cmp
test
(bad)
fild
mov
cmp
sbb
aam
js
call
add
out
add
hlt
mov
jbe
adc
lods
mov
mov
pop
scas
(bad)
push
cmp
inc
aas
xor
out
pop
shl
(bad)
rcl
and
les
test
jmp
jmp
or
pushf
sub
mov
sbb
mov
out
aas
mov
sub
sub
pop
scas
mov
mov
test
sub
cwde
xor
inc
iret
sub
pop
call
inc
mov
and
ret
xchg
mov
jno
xor
cmp
in
pop
cmp
test
xchg
inc
outs
in
mov
push
push
jg
fstp
cmps
ins
imul
fsubr
rol
mov
imul
xchg
push
pop
arpl
mov
xchg
lods
div
jno
inc
sbb
and
bound
jge
push
push
scas
or
inc
loop
(bad)
call
rcr
push
pop
cvtps2pd
sbb
sahf
daa
jne
pop
and
jb
mov
mov
test
mov
int
stos
and
adc
push
xchg
jo
aaa
mov
sub
mov
sahf
pop
outs
jns
aas
mov
ins
sub
xchg
cmp
jns
sub
mov
mov
imul
das
push
xchg
xor
inc
xchg
pop
xchg
ins
xor
lods
push
push
jne
adc
xchg
xchg
fwait
repnz
mov
xor
add
cli
cdq
das
test
or
movs
pusha
pop
and
push
xchg
push
loop
scas
js
bound
sbb
stos
call
pop
pusha
mov
adc
cmp
and
test
inc
dec
and
ja
std
js
add
dec
mov
out
ins
cmps
(bad)
sub
les
and
ja
loopne
lds
adc
fwait
ins
xchg
jno
nop
enter
data16
mov
sbb
mov
jae
mov
mov
outs
push
cmps
retf
(bad)
in
fld
push
les
retf
or
in
push
mov
dec
or
in
inc
ds
sahf
inc
mov
in
mov
out
lods
push
push
fwait
and
(bad)
or
mov
shl
inc
repnz
xchg
mov
inc
jno
imul
imul
inc
mov
cdq
lahf
inc
out
jne
jns
gs
addr16
int3
outs
sbb
pop
add
inc
jo
arpl
and
je
ror
sub
dec
and
fistp
fs
and
into
pop
add
xchg
mov
ds
dec
out
sub
add
adc
mov
shl
jmp
jl
cmp
(bad)
out
and
mov
jne
sbb
rcr
fwait
nop
xor
pushf
inc
xor
push
in
or
int3
(bad)
repz
add
iret
repnz
daa
std
push
js
push
and
out
xchg
cmp
mov
xchg
xchg
enter
cdq
pusha
push
les
das
dec
outs
cmp
mov
adc
jne
js
add
sbb
mov
lea
adc
push
mov
popa
cmc
xchg
dec
fcom
nop
out
add
mov
(bad)
adc
(bad)
int3
ret
lock
ja
sub
inc
aaa
ret
cmps
cdq
ror
imul
and
or
mov
jle
out
push
jle
fcmovb
sub
int3
push
jae
stos
xlat
int
mov
std
test
jnp
sub
pop
mov
movs
xchg
and
sbb
aad
jno
shl
test
inc
adc
and
mov
cdq
lods
hlt
xor
dec
push
mov
adc
call
mov
push
cmp
arpl
jl
mov
mov
xchg
gs
mov
jnp
scas
cwde
jg
in
mov
xlat
scas
add
xchg
rcr
std
add
pushw
popa
xor
dec
ja
xchg
jmp
ffreep
mov
test
pop
fldenv
loopne
adc
adc
retf
jge
mov
pop
scas
fstp
xlat
(bad)
icebp
ret
outs
mov
mov
je
push
jae
int3
hlt
outs
hlt
pop
in
cmp
jne
aam
push
push
xor
pop
mov
jge
and
ret
mov
sub
fwait
cdq
sub
les
xchg
sbb
(bad)
fcom
sbb
iret
adc
or
mov
pusha
or
mov
xor
ds
sbb
mov
jbe
ins
mov
xchg
dec
push
idiv
pop
jbe
push
inc
mov
shl
push
xor
sub
push
dec
rcr
scas
mov
sbb
inc
sbb
cmp
popa
mov
outs
or
ror
mov
push
push
lea
shr
ja
mov
add
xor
lahf
inc
popf
xchg
inc
bound
or
cmp
out
xor
xchg
inc
pop
dec
mov
stos
jmp
fs
lods
mov
das
retf
outs
aas
aaa
arpl
iret
mov
cdq
pop
arpl
cmps
cmp
pop
call
int
pop
push
mov
lods
shl
mov
jmp
loop
jnp
std
jle
add
lods
pop
jae
test
jo
push
fcmovbe
movs
out
mov
fdiv
xchg
icebp
push
outs
mov
fadd
sti
mov
xor
and
(bad)
mov
(bad)
movs
cmp
imul
dec
add
jecxz
shr
nop
call
mov
out
mov
pop
rol
jb
jnp
and
mov
cmps
cmp
addr16
movs
cmp
outs
fisubr
and
inc
mov
(bad)
jae
jle
cdq
sbb
mov
xchg
(bad)
out
std
addr16
jmp
mov
fdiv
xchg
mov
loope
pop
ja
ins
jae
outs
cmp
mov
jl
in
jnp
or
mov
and
arpl
xchg
jge
and
retf
add
test
jge
inc
and
outs
sti
fwait
jbe
sbb
xor
jmp
inc
leave
mov
push
add
mov
mov
inc
fdivrp
dec
mov
push
lahf
xor
adc
bnd
push
clc
cmp
push
mov
lods
popf
or
lds
ins
cli
pop
mov
xchg
push
fbld
sub
mov
sub
mov
rcr
sbb
fisttp
mov
(bad)
mov
cmp
mov
xchg
cmp
lods
ins
and
mov
and
pop
push
popf
cmps
imul
loope
inc
fidivr
sub
cmc
mov
ins
push
movs
mov
fnsave
aad
fistp
and
xor
cmps
mov
xor
in
ror
cmp
or
inc
sub
dec
outs
mov
in
push
sahf
mov
dec
add
(bad)
std
dec
pop
xchg
int
imul
xchg
into
xchg
mov
xchg
repnz
mov
mov
or
and
cmp
or
jns
cs
mov
pusha
sbb
push
repnz
outs
shl
inc
test
test
jl
sahf
mov
xor
dec
mov
sub
in
sub
test
pop
sbb
sbb
jo
jecxz
push
ins
mov
fsubr
pop
push
xchg
pop
imul
push
(bad)
mov
inc
pop
cmp
sub
out
adc
pop
pop
xor
or
jae
popf
js
aaa
loope
call
outs
dec
(bad)
push
das
ror
jae
sub
shl
push
cs
fs
xchg
push
add
data16
mov
rol
(bad)
sub
mov
rol
mov
std
gs
dec
int3
push
retf
test
(bad)
into
dec
inc
test
sbb
xor
push
(bad)
cmp
mov
mov
add
sar
(bad)
enter
push
pop
or
call
(bad)
jle
in
mov
sbb
cmc
xor
xchg
enter
aad
mov
and
mov
ss
les
js
xor
test
pop
xor
ins
dec
das
sbb
pop
add
xchg
data16
mov
sub
jmp
cmp
add
sbb
xchg
arpl
jl
xor
ds
adc
mov
test
adc
xchg
outs
and
inc
push
jecxz
aad
mov
xor
sbb
inc
je
push
xor
cmp
or
rcl
test
popa
sub
pop
mov
lods
push
add
sub
daa
sub
int3
xchg
scas
push
mov
lock
retf
das
sbb
jl
and
scas
fist
push
test
pop
int3
cwde
cwde
imul
fwait
cld
test
int
sub
lock
js
dec
outs
inc
xchg
mov
xchg
push
std
xchg
xor
fwait
test
xchg
rcl
test
mov
push
call
ins
xor
pusha
jg
pop
add
xor
cmp
bound
out
push
(bad)
lock
imul
mov
je
pop
mov
sahf
pop
scas
div
or
(bad)
fsub
mov
iret
sub
or
test
push
dec
cld
jmp
clc
ins
(bad)
aad
pop
xor
inc
or
push
push
add
stos
pop
push
mov
mov
xor
punpckhbw
loopne
stc
xchg
adc
shl
retf
fucomi
(bad)
aad
stos
sbb
inc
ins
pop
xor
dec
aam
pop
add
jae
lods
sbb
nop
je
test
stos
imul
mov
and
call
adc
or
mov
enter
jmp
mov
pop
stos
mov
sub
leave
fstp
and
repnz
int3
enter
mov
mov
ja
repz
sbb
das
jae
ror
sub
pushf
sbb
push
cmp
lahf
inc
jae
add
retf
jge
jmp
popa
dec
or
lds
xor
js
mov
arpl
and
fstp
out
sbb
pop
cmp
xchg
jmp
inc
adc
inc
arpl
outs
mov
inc
xchg
ins
loopne
push
jns
push
jno
movs
pop
adc
jle
out
push
sub
dec
inc
and
sub
pop
fsub
test
gs
lds
mov
or
and
push
fimul
xor
inc
in
(bad)
nop
gs
mov
jl
push
hlt
jle
in
inc
loopne
sub
inc
inc
add
inc
jne
ds
mov
inc
rol
fstp
out
in
popa
mov
pop
aas
aam
scas
fsub
shr
mov
mov
lods
add
repz
add
in
in
add
loope
out
ret
aaa
outs
sub
pop
movs
int
and
xchg
scas
push
push
dec
cmp
into
or
push
adc
movs
lods
adc
cmp
test
cmp
movs
out
hlt
dec
pop
test
pop
icebp
jle
fild
xor
and
in
imul
push
aas
and
int
rcl
test
scas
jl
or
xor
jg
jmp
pop
fstp
icebp
int
outs
test
out
push
push
sub
ss
push
aaa
add
push
mov
sar
fisttp
mov
loopne
sbb
mov
sbb
or
pushf
xchg
scas
jns
iret
outs
ja
cmp
push
das
jno
outs
cmp
jnp
jg
push
or
pop
repnz
push
lods
push
clc
(bad)
retf
iret
or
in
ins
(bad)
das
out
add
imul
inc
jnp
push
stos
sub
xor
retf
clc
aaa
into
sbb
ss
jge
mov
iret
inc
sbb
(bad)
out
outs
test
push
ja
xchg
imul
sub
cwde
or
mov
xor
cmp
les
inc
addr16
retf
sub
ror
mov
push
and
pop
pop
mov
fwait
push
mov
and
add
cld
sub
mov
cli
sub
nop
pop
aam
xchg
push
sub
push
iret
shr
mov
add
dec
xchg
mov
push
mov
aas
ins
mov
repnz
xchg
ret
lds
or
frstor
sub
ss
stos
fnstenv
xchg
cmps
js
push
rcl
imul
lock
push
pop
cwde
cmps
retf
fadd
test
(bad)
ror
mov
sbb
xchg
mov
les
adc
sub
xor
jo
sub
cmp
sub
std
xchg
mov
sahf
aas
icebp
sub
adc
shl
sub
(bad)
ret
pop
movs
push
ins
loopne
push
iret
aaa
pop
adc
ret
xchg
cmps
int3
inc
xor
pop
and
xchg
fidivr
scas
dec
(bad)
and
pop
fidiv
sti
ins
into
fldenv
call
mov
mov
sar
cdq
inc
push
adc
idiv
and
pusha
mov
push
mov
ret
xchg
out
daa
push
outs
add
js
sub
dec
cmps
stos
jae
div
xchg
icebp
cmp
fsub
and
add
int
jecxz
hlt
in
mov
ds
jne
out
outs
clc
in
in
mov
in
ds
and
in
stos
xor
aam
jnp
adc
dec
jne
loope
dec
pop
inc
cmps
call
xlat
in
inc
(bad)
add
aad
adc
sahf
dec
or
sub
fmul
pop
or
loop
fmul
mov
ins
retf
nop
gs
ins
lods
mov
mov
mov
inc
fadd
sahf
pushf
sbb
sbb
sbb
ins
push
call
fcmovne
push
js
test
dec
cmps
xchg
cmps
(bad)
add
mov
in
mov
ins
adc
call
rcl
and
and
sub
(bad)
push
dec
scas
sbb
aam
outs
cwde
int
mov
out
fwait
out
inc
je
imul
popf
sbb
aad
pop
mov
adc
jmp
fidiv
jo
mov
mov
(bad)
js
sbb
mov
jge
fwait
jge
call
nop
outs
xchg
cs
in
xor
xchg
push
sahf
mov
test
xor
cld
call
jge
je
push
sti
sbb
jle
jo
cwde
iret
fwait
adc
(bad)
jno
lods
sub
adc
pop
mov
sbb
and
scas
lahf
jmp
and
loope
xor
shl
cmc
sbb
inc
je
mov
sbb
rcr
and
xchg
fisub
and
lods
ja
pop
mov
aaa
push
or
push
push
inc
xor
(bad)
xor
out
lea
mov
loopne
rcr
lods
xor
dec
ror
mov
xchg
mov
pop
cld
jne
call
push
sub
aas
xlat
movs
sub
cmc
adc
sar
loop
push
retf
out
mov
jecxz
popa
fimul
ins
and
push
or
movs
std
dec
push
mov
push
mov
imul
adc
mov
ins
add
leave
jb
adc
test
inc
pop
mov
fwait
cmp
ret
or
jae
dec
call
xor
adc
scas
cs
(bad)
mov
inc
mov
dec
jno
cli
mov
test
aad
jle
cmc
xchg
or
and
stc
mov
aad
mov
retf
in
in
pop
or
and
sub
aas
arpl
mov
pop
mov
sbb
fst
or
xor
dec
and
scas
xchg
fcom
push
rcr
pop
fiadd
or
xchg
cmps
sahf
cmc
or
sar
sub
add
sbb
popf
mov
sbb
sbb
in
or
mov
stos
pop
jae
pop
push
mov
fsubr
(bad)
mov
mov
and
jae
js
jg
ror
das
mov
out
out
fldcw
xor
mov
dec
xchg
shl
outs
rcr
aad
pop
sub
jle
jmp
jbe
pop
in
je
neg
hlt
sbb
inc
mov
mov
push
movs
int3
adc
into
shr
pop
es
dec
xor
sub
jne
imul
jbe
lea
retf
mov
lods
add
pcmpgtd
test
pop
push
dec
test
add
mov
fadd
repnz
arpl
ins
xchg
out
push
test
scas
xor
ss
jecxz
sbb
test
das
lahf
mov
cmp
mov
mov
cmp
add
add
or
popa
and
sub
mov
pop
(bad)
add
cmp
push
movs
test
pushf
daa
and
retf
aad
test
add
mov
push
jmp
xor
cmps
or
movs
mov
cs
fld
imul
rcr
lock
movs
xchg
hlt
sbb
(bad)
or
add
mov
mov
pop
leave
imul
(bad)
and
xchg
call
pop
cmp
push
push
mov
test
mov
outs
xor
inc
mov
adc
(bad)
sbb
sub
(bad)
sub
popa
sub
lahf
test
push
mov
pop
pop
mov
cmp
ins
fcomp
xchg
bswap
or
cmps
mov
jne
mov
pop
push
dec
push
mov
cld
inc
jp
repz
mov
push
call
add
jb
sbb
jl
es
arpl
imul
add
dec
nop
mov
jnp
movs
dec
and
movs
jne
jbe
in
jbe
jnp
lods
cmp
int
fsubr
cmp
js
cmps
lock
mov
cmp
test
add
nop
into
push
cmp
pop
(bad)
xor
outs
out
jp
or
mov
lods
(bad)
sbb
scas
int
sar
sub
scas
push
pop
pusha
rol
xchg
int
or
test
js
push
pushf
and
retf
sub
mov
push
jns
xchg
test
adc
aaa
xchg
ret
dec
sbb
and
scas
xchg
mov
jbe
inc
into
jne
push
jb
dec
jnp
cdq
sbb
mov
outs
or
clc
cmp
lock
loope
sbb
sub
js
push
shl
jbe
cmp
xchg
(bad)
or
cmps
cld
jmp
leave
jg
jb
xor
fnsave
iret
sub
sbb
jmp
in
mov
or
pop
pop
dec
shl
inc
ret
cmp
ins
rcr
icebp
mov
xchg
js
jns
dec
lods
inc
jb
mov
mov
xor
int
je
in
cld
icebp
sti
in
mov
add
ins
pop
and
adc
or
mov
shl
mov
lods
dec
or
dec
mov
push
mov
shl
fcmove
in
mov
push
fild
ret
adc
sub
and
(bad)
inc
ins
repz
jnp
jmp
adc
fbstp
and
cs
jg
mov
addr16
lods
imul
mov
mov
movs
sbb
push
outs
test
scas
leave
cmp
int
mov
ins
and
cdq
mov
pop
sahf
cs
mov
mov
stos
test
clc
cs
adc
inc
cmp
adc
(bad)
loop
int3
xor
int
rcr
mov
sahf
mov
xor
fcom
es
cmp
mov
and
aad
std
(bad)
cdq
xor
push
mov
dec
jl
(bad)
fist
jle
mov
sbb
mov
xor
int
cmp
or
(bad)
sub
xlat
lahf
jbe
hlt
fwait
mov
icebp
sub
xchg
inc
loope
adc
xor
mov
inc
xlat
test
fisttp
sbb
out
clc
mov
repnz
pushf
jb
sbb
pushf
int3
aam
mov
repnz
inc
aas
jns
xchg
jnp
dec
push
mov
or
inc
mov
inc
jecxz
aas
(bad)
test
jp
retf
repz
sub
jnp
mov
leave
test
xchg
test
test
push
stc
sbb
xchg
loope
inc
xchg
mov
cmp
sub
or
int
daa
adc
lods
and
dec
mov
mov
nop
dec
dec
subps
repz
dec
fidivr
vpmulhw
pushf
cmp
xchg
inc
jns
jbe
push
xor
mov
repnz
fst
pop
add
ja
dec
xor
lds
xor
(bad)
mov
rol
jmp
stos
rcl
mov
jae
adc
dec
pop
jne
scas
or
pop
add
jge
(bad)
rol
out
mov
mov
pop
sub
ss
mov
mov
bound
fwait
mov
mov
out
ja
xchg
cld
mov
(bad)
fdivr
mov
test
sbb
push
xlat
mov
addr16
dec
popw
inc
jo
aad
dec
push
(bad)
call
scas
mov
in
sar
lds
shl
lds
mov
iret
push
xchg
test
mov
scas
cmps
or
dec
sub
inc
test
cmc
sbb
jbe
cmp
rcl
enter
xor
into
sbb
(bad)
pop
mov
push
jb
stc
scas
xchg
(bad)
fisttp
xor
out
xchg
out
or
enter
and
imul
push
test
fild
popf
nop/reserved
mov
sar
fstp
pop
mov
mov
inc
adc
retf
mov
xchg
push
cdq
inc
mov
mov
cmp
lahf
xchg
movs
jns
push
inc
xchg
push
loop
test
pop
repnz
mov
xor
or
sahf
or
out
xlat
inc
ret
mov
test
mov
ja
repz
add
and
sub
sbb
sbb
sbb
in
ins
and
or
out
dec
int
jno
sbb
push
jns
jb
jmp
push
int3
jae
cmps
inc
scas
bound
sbb
add
xor
rcl
fnstcw
scas
and
stc
loop
push
jmp
mov
push
repz
hlt
add
aad
cmps
mov
call
sbb
inc
sbb
sub
outs
cmp
test
or
sbb
icebp
je
sub
aaa
xchg
sti
movs
xchg
out
mov
mov
dec
call
fs
es
stos
inc
or
stos
jg
call
xor
mov
xor
push
test
test
inc
jp
cdq
iret
push
sbb
test
push
loopne
sbb
test
cmc
shl
sbb
popf
pop
mov
loopne
push
adc
outs
sub
push
pusha
jmp
cmps
js
adc
and
je
ins
push
and
les
movs
mov
(bad)
int3
xchg
(bad)
or
push
into
pop
pop
into
test
mov
(bad)
adc
xor
pop
mov
call
pop
dec
add
test
sbb
loopne
ins
cmp
je
xchg
shr
sub
jl
test
xchg
sbb
and
aad
push
loope
mov
pop
xor
pop
lea
add
mov
idiv
pop
mov
jle
jmp
sbb
lahf
xor
jge
repnz
add
test
push
cmps
cwde
xchg
stos
add
xchg
jmp
dec
jecxz
pop
shl
shr
pop
jmp
and
imul
inc
pop
fidivr
retf
arpl
push
mov
loope
adc
or
mov
out
jb
xchg
pop
mov
jl
popa
(bad)
je
cwde
(bad)
retf
or
or
mov
jecxz
stc
ret
push
sar
pop
(bad)
dec
jle
add
sbb
add
pop
push
mov
jl
fst
(bad)
xor
jmp
xor
cmp
adc
sbb
xlat
sub
xor
not
adc
(bad)
jmp
test
pop
jo
xor
in
jp
cmp
(bad)
cld
sub
fdivr
repz
dec
cld
mov
inc
add
pop
mov
xchg
mov
aas
addr16
cmp
sbb
adc
cmps
mov
popf
jns
cmp
call
fdivr
and
or
add
aad
rcr
and
push
jl
add
mov
(bad)
mov
iret
mov
jl
icebp
dec
mov
push
stc
call
cmp
mov
ret
ficomp
nop
loopne
xor
cdq
fmul
inc
nop
push
xchg
jmp
push
enter
dec
cmc
cmp
push
push
jg
icebp
(bad)
jge
ins
pop
or
pushf
mov
nop
xor
sub
pop
xchg
ja
cmp
(bad)
std
pusha
push
add
rcl
fnstenv
loopne
xchg
mov
(bad)
pop
retf
sub
xchg
jmp
cmp
dec
ffree
lods
loope
test
mov
xor
cdq
popa
or
sub
push
jmp
lea
mov
cmp
dec
dec
push
ror
shl
sbb
cs
lea
mov
in
inc
and
push
pop
call
cmp
pop
in
in
ins
outs
dec
js
jne
iret
xchg
and
jge
jecxz
dec
sar
adc
fnstsw
pop
pop
mov
rcl
mov
push
outs
pop
in
push
dec
pop
pop
arpl
jge
or
scas
fcomp
sub
rol
jmp
xor
add
iret
in
inc
retf
and
dec
imul
ss
inc
pop
inc
sbb
sbb
xchg
cmp
sub
mov
dec
leave
fnsave
cmp
dec
ins
test
(bad)
rol
in
dec
sub
aaa
or
outs
daa
fcompp
sbb
mov
inc
jno
rcr
jmp
lock
in
cmps
pusha
lods
mov
test
push
xor
rcr
jle
xchg
cld
and
push
movs
inc
xor
push
lahf
div
inc
jnp
ja
dec
mov
sub
push
mov
cdq
sub
enter
in
xor
popf
sub
retf
not
imul
dec
lea
out
push
je
enter
add
pop
push
movs
imul
jo
xor
pop
arpl
mov
cmp
push
jecxz
rcl
xor
ds
push
jmp
inc
jns
or
mov
out
xchg
es
fdiv
or
push
add
pop
rol
imul
cmp
sub
and
jg
(bad)
adc
inc
sbb
xchg
nop
imul
push
nop
jnp
call
call
mov
shr
cmps
outs
dec
lahf
addr16
int3
mov
loopne
xchg
movs
mov
dec
push
fcomp
add
cmc
xor
add
add
lds
retf
fcomp
int3
jmp
dec
cmp
adc
jl
outs
pop
stos
xchg
jmp
sbb
adc
adc
pop
fnstenv
push
lea
add
xchg
int3
jbe
push
lods
movs
imul
jno
push
call
jmp
mov
cwde
mov
cdq
push
enter
jns
popf
xor
push
sub
sub
mov
sbb
push
pop
or
fsubr
xor
ins
in
and
(bad)
iret
mov
pop
mov
add
idiv
and
test
repnz
adc
pop
popa
xor
mov
sub
icebp
(bad)
cld
fs
call
inc
stc
or
out
pop
adc
sub
jge
ret
leave
or
jnp
add
xor
nop
pop
sahf
js
sbb
dec
loopne
sar
push
gs
jbe
test
hlt
mov
adc
adc
or
pop
lock
xchg
dec
mov
shl
cmp
xor
pop
push
push
fiadd
leave
loopne
xor
push
movs
xor
jmp
inc
and
gs
mov
xchg
je
jnp
int
add
xor
ficomp
jge
mov
pop
and
int
inc
repnz
and
sub
leave
enter
push
jmp
jnp
push
sti
daa
or
dec
push
dec
pop
les
jo
lahf
or
push
je
jnp
fidivr
push
sub
shl
repnz
add
pushf
or
cs
and
shl
fcmovnb
pop
test
adc
push
adc
and
or
lods
test
sub
out
cdq
sub
inc
inc
inc
cmp
pop
mov
dec
ss
mov
sub
popf
aas
mov
icebp
cmps
(bad)
xor
pop
sub
jne
mov
into
adc
int3
into
xor
out
mov
imul
sub
pop
inc
or
adc
call
adc
movs
mov
(bad)
jmp
mov
jg
or
jl
mov
xchg
(bad)
cmp
into
mov
or
movs
add
adc
jmp
mov
(bad)
outs
pushf
stos
push
sub
mov
lods
pop
push
fwait
ret
cmp
(bad)
fld
retf
sbb
arpl
rol
xchg
nop
(bad)
imul
fisubr
add
sbb
push
or
(bad)
call
and
test
xchg
jae
jp
xchg
mov
int3
lea
outs
fiadd
sub
push
outs
mov
mov
xlat
and
mov
or
and
shr
mov
add
add
push
mov
rcr
leave
mov
es
cvttps2pi
jl
ss
sub
cmp
mov
dec
adc
test
es
in
fs
jae
push
push
push
cld
mov
inc
int
add
lds
clc
mov
inc
imul
xchg
sub
aad
jmp
xor
push
mov
outs
ins
bts
fstp
test
lahf
jnp
cmp
cmps
mov
in
mov
jg
in
jne
out
xchg
sbb
pushf
fcomp
es
xchg
pop
sar
lods
xchg
mov
fs
pushf
mov
fs
inc
mov
cld
xchg
xor
clc
lods
push
xchg
mov
xchg
lds
mov
into
nop
outs
retf
or
xor
imul
add
cmps
pop
add
push
ret
sub
in
out
sbb
sub
sti
dec
leave
and
push
scas
test
mov
sar
add
mov
cmp
push
pop
and
enter
adc
mov
cmps
push
adc
jmp
push
xchg
hlt
sub
jae
aas
cmp
fidivr
call
xchg
add
test
add
jle
adc
sbb
popa
mov
and
int
push
xor
loop
lods
jp
mov
outs
adc
pop
mov
push
sub
or
imul
test
cdq
cld
cmp
sbb
das
sub
iret
(bad)
std
cmp
ss
inc
enter
mov
pop
mov
out
pushf
pushf
push
pusha
pop
cmp
mov
inc
jp
jmp
pop
pop
addr16
mov
les
cmps
lods
push
test
xchg
test
cli
enter
xchg
mov
adc
mov
and
sub
mov
xor
cmp
inc
mov
jmp
pop
scas
add
jnp
adc
sbb
ror
je
xor
push
mov
mov
(bad)
retf
popf
icebp
je
sub
jl
xchg
sbb
mov
aad
scas
mov
mov
or
popf
jl
mov
lods
add
mov
ret
les
fisttp
cmps
(bad)
fiadd
adc
lock
jo
mov
dec
or
sahf
dec
push
ret
pop
adc
repz
(bad)
mov
icebp
add
cmps
inc
cmp
sub
dec
icebp
mov
sti
inc
pop
and
sbb
fwait
mov
rol
jge
in
sbb
shr
push
lods
cmc
loope
jns
adc
xor
push
repnz
jmp
aas
ror
popf
cmc
xor
push
test
push
or
jno
and
in
neg
mov
repnz
jne
iret
xor
dec
xchg
das
jge
movs
sub
(bad)
popf
xchg
stos
rcl
pop
dec
sub
iret
xchg
xor
mov
and
(bad)
retf
retf
add
inc
add
mov
xchg
dec
aad
mov
pop
clc
lahf
imul
fucomi
pop
ret
fsub
push
cmc
(bad)
jae
cmp
adc
jmp
mov
cmps
push
das
frstor
mov
xchg
sub
adc
mov
jae
mov
mov
loope
cmp
inc
out
and
sbb
loopne
ss
bound
and
push
push
loop
dec
xchg
int3
jo
shl
cs
and
mov
(bad)
jmp
push
test
push
ficom
and
sub
xchg
xor
or
or
and
xor
sub
icebp
imul
int3
ror
loopne
out
mov
xor
mov
fwait
adc
xor
ins
out
sahf
fs
fstp
pop
push
mov
(bad)
jnp
xor
popa
pop
into
jmp
inc
retf
jg
in
pop
out
jns
sbb
dec
add
dec
ja
outs
loope
sbb
dec
fldcw
push
in
(bad)
jns
dec
addr16
rcr
push
test
enter
adc
(bad)
cwde
js
fs
dec
mov
mov
mov
cmp
cmp
ret
pop
mov
pop
das
popa
aad
and
push
and
push
sub
(bad)
dec
fcom
mov
pop
loopne
test
js
xor
mov
in
loope
bnd
sub
inc
mov
xor
pusha
sbb
rcr
jns
xchg
mov
(bad)
iret
pusha
and
fwait
fwait
mov
popa
call
sub
je
neg
sub
mov
rol
fwait
lahf
sub
lds
js
fwait
mov
cmp
aaa
mov
ds
(bad)
mov
inc
or
(bad)
cmp
adc
sub
lahf
mov
lods
shl
mov
mov
faddp
sub
add
dec
imul
arpl
fdivr
push
aad
sub
cmp
popf
cdq
mov
add
sbb
int3
jno
lods
mov
xchg
std
sub
gs
jne
inc
sbb
leave
push
mov
int
mov
jns
and
and
sahf
mov
stos
aaa
cmp
xchg
or
add
or
rcl
cmp
and
aam
mov
outs
pop
jecxz
imul
cwde
ret
test
xchg
mov
pop
in
mov
mov
jle
push
fstp
or
(bad)
xchg
push
call
xchg
ja
inc
lods
je
pop
(bad)
push
push
cdq
jge
dec
sbb
fwait
push
mov
jl
hlt
stc
fcom
(bad)
mov
les
ja
mov
sub
cmp
jp
sub
pop
or
xchg
or
dec
or
push
push
int
lea
stos
icebp
scas
xchg
and
jl
dec
ds
cmp
mov
in
and
dec
adc
inc
in
bound
inc
mov
lds
test
cmp
and
inc
jbe
dec
test
rcl
test
sbb
sbb
data16
pop
ja
push
inc
adc
xchg
mov
sbb
xchg
fs
xchg
xchg
rcl
and
inc
std
arpl
icebp
lods
xchg
pop
loope
jmp
in
call
lds
xchg
fdiv
fistp
rol
std
pop
ins
jge
xchg
mov
imul
lds
rol
dec
lock
sub
(bad)
and
fstp
popf
cmps
fs
sahf
inc
dec
xchg
and
mov
je
push
adc
inc
fsub
(bad)
repnz
clc
shl
in
fild
mov
sbb
rol
js
pop
jl
mov
xchg
mov
ret
mov
pop
pop
scas
int3
aas
inc
inc
mov
addr16
xchg
popf
js
pop
mov
dec
mov
or
mov
jne
mov
xchg
lods
mov
cmps
ins
pop
iret
lahf
pop
add
test
nop
addr16
test
pop
add
inc
mov
add
retf
scas
pusha
movs
pop
add
int3
xchg
fsubr
sub
jg
fiadd
fwait
aam
jl
sbb
stos
in
dec
ret
pop
pop
cmp
xor
sbb
mov
fiadd
mov
in
jge
test
(bad)
pop
je
nop
dec
push
inc
test
dec
add
rol
test
(bad)
jns
mov
ror
inc
stos
lods
loope
rol
dec
enter
lods
xor
test
les
mov
lahf
loope
loop
lods
adc
inc
into
nop
xchg
jb
and
inc
mov
jle
loope
mov
xor
adc
sbb
dec
xchg
je
mov
adc
mov
push
sbb
(bad)
hlt
mov
sub
pushf
imul
mov
(bad)
in
pop
call
jmp
pop
lds
js
ja
mov
or
mov
and
inc
xor
and
jb
int3
int
lock
adc
aad
mov
enter
inc
in
js
pop
cmps
xchg
add
xchg
pop
dec
movs
push
mov
popa
jbe
gs
push
mov
mov
xchg
fsubr
dec
ins
push
xor
imul
fmul
push
pop
pop
mov
sub
mov
mov
mov
push
push
outs
mov
fnsave
push
xchg
test
or
xchg
jno
mov
lea
adc
data16
lods
sub
mov
test
dec
dec
cld
sub
or
inc
cs
je
and
sub
pop
pop
rol
clc
aas
push
fadd
outs
loope
js
lds
dec
imul
xchg
mov
ficomp
js
cmp
mov
xlat
je
mov
xor
(bad)
cmp
mov
scas
mov
fs
pop
je
mov
fist
scas
jge
push
jb
cmp
mov
and
outs
sub
dec
mov
sbb
nop
call
jnp
xchg
clc
fld
mov
inc
pop
rcr
cmp
cmps
dec
movs
mov
sbb
(bad)
push
jmp
dec
arpl
in
rcl
mov
xchg
stc
pop
lods
xor
or
ins
cs
div
stos
fld
push
inc
ins
fs
(bad)
in
popf
ins
pop
std
cdq
pop
fnsave
cmp
jmp
sbb
das
test
xchg
add
and
pop
jne
inc
adc
mov
xchg
mov
fs
mov
mov
push
retf
pushf
pusha
ret
push
in
lahf
jns
pop
out
icebp
ss
mov
ret
lods
add
pushf
rcl
sti
inc
ja
popa
mov
iret
cmps
mov
mov
ins
lds
or
into
mov
sub
je
sbb
inc
sub
movs
inc
adc
dec
sub
fldcw
out
cld
out
mov
dec
(bad)
mov
mov
lods
shr
pop
stos
sub
jo
cs
enter
mov
sub
xor
adc
bnd
push
dec
mov
dec
ins
dec
lds
ror
sbb
pushf
fwait
neg
stos
movs
pop
cmp
aad
xchg
sub
lahf
lods
outs
dec
jmp
inc
and
or
xchg
push
inc
jp
int
movs
bound
not
add
dec
xlat
or
jmp
or
dec
int3
mov
and
lock
dec
lea
scas
add
cmps
jge
push
mov
pop
cmps
sbb
sub
int
mov
pushf
pop
xor
jne
into
outs
(bad)
pusha
fstp
fmul
imul
inc
enter
sar
sbb
add
(bad)
push
leave
lea
push
pop
mov
ins
cmps
pop
jo
nop
cmps
fwait
add
outs
test
scas
mov
(bad)
jmp
test
and
mov
mov
mov
icebp
dec
mov
pushf
test
xchg
inc
xchg
mov
mov
dec
lock
xor
shr
or
(bad)
aam
jns
test
pop
xor
mov
mov
xor
cmp
jp
jo
shl
je
int
fdiv
cld
or
mov
pushf
pop
lea
mov
inc
sub
add
sub
and
inc
call
jae
clc
xor
mov
enter
cmp
pop
sbb
jnp
pop
lea
je
fwait
sbb
mov
pop
mov
add
enter
and
stos
sbb
jns
call
pop
popf
xchg
scas
inc
cdq
stos
mov
xchg
mov
push
xchg
mov
mov
xchg
mov
outs
xchg
xchg
mov
xchg
imul
push
retf
mov
xchg
push
hlt
xchg
div
sub
loop
adc
cld
mov
fldenv
mov
mov
lds
mov
push
pop
push
test
loope
cwde
and
addr16
fisttp
sub
cmp
jne
push
jge
ror
in
dec
fst
pop
test
jno
pop
or
sahf
xor
leave
mov
cmp
adc
sahf
xor
adc
sahf
inc
std
mov
or
xor
jl
(bad)
loope
ror
aam
sar
cmp
es
cmp
xchg
inc
push
pop
mov
mov
sar
fld
out
mov
aaa
shr
jmp
xor
cmp
push
into
imul
mov
lods
out
test
push
dec
nop
jns
mov
adc
push
mov
ins
mov
sub
mov
jg
sbb
movs
cmp
inc
push
leave
cmps
fimul
push
in
pop
movs
jl
xlat
mov
mov
enter
adc
neg
stos
mov
test
xchg
mov
push
cmps
fdivr
mov
in
fwait
retf
mov
inc
pop
jge
mov
sbb
push
and
and
xor
adc
push
test
stc
adc
mov
sbb
jnp
andnps
add
mov
mov
cld
cmp
add
add
sbb
mov
sar
jge
sbb
mov
loope
std
xlat
adc
ins
bound
pop
ret
dec
(bad)
ins
pop
cwde
pop
scas
or
loopne
jge
add
push
mov
sbb
into
fisub
sar
les
out
jnp
dec
(bad)
das
je
lahf
adc
clc
mov
or
es
add
nop
cmps
or
(bad)
retf
xchg
mov
stc
add
xor
in
adc
xor
cmps
add
cld
mov
or
mov
fst
adc
cmps
push
lea
jns
mov
fs
xchg
mov
inc
data16
ja
out
(bad)
pop
rol
pop
call
cmps
stos
rol
lods
enter
or
mov
imul
scas
add
add
fwait
xchg
in
imul
pop
adc
(bad)
retf
cmp
pop
cmovno
cmc
(bad)
jle
ffreep
xor
mov
mov
shl
scas
lds
jae
mov
mov
cmp
xor
or
mov
mov
(bad)
in
jg
and
and
push
pop
call
inc
add
mov
test
leave
sub
mov
sbb
pushf
dec
cmp
test
aas
and
test
mov
das
ss
sbb
xchg
push
cmp
sbb
adc
out
in
mov
cmp
lds
mov
cmps
pop
data16
cs
sbb
jg
sub
rcr
movs
(bad)
popa
mov
into
and
xor
std
jmp
popf
push
adc
ret
pop
jnp
(bad)
push
test
pop
scas
ins
cmps
pushf
cwde
lods
dec
pop
ins
mov
mov
imul
aaa
iret
inc
sbb
dec
hlt
mov
out
into
(bad)
idiv
lods
lods
leave
ins
dec
pop
xor
mov
mov
add
and
shl
jge
pusha
cmc
(bad)
adc
mov
mov
push
jmp
fsub
cld
inc
in
scas
shr
push
(bad)
sar
pop
leave
and
pop
sbb
adc
cld
lea
fst
pop
test
pop
mov
loopne
shr
sub
and
imul
mov
icebp
mov
inc
daa
sub
jae
cs
mov
dec
outs
pop
pop
mov
add
(bad)
rcr
jecxz
push
jg
fstp
inc
popa
xbegin
je
xor
cmp
les
cmps
outs
mov
ins
fstp
and
popfw
shl
sub
dec
lods
ror
push
or
pop
sti
aam
test
pop
loopne
mov
jl
push
(bad)
test
xor
or
sub
loopne
test
rcr
and
jl
sub
push
push
xor
ins
loopne
sbb
clc
int3
icebp
push
je
aad
mov
push
jp
push
jmp
adc
out
movs
(bad)
jmp
lods
sbb
jb
fild
push
js
cmp
popf
outs
(bad)
push
shl
inc
stos
push
enter
pusha
lea
jae
mov
jbe
sub
or
sbb
int
jecxz
mov
(bad)
sahf
mov
pop
int
in
push
or
scas
add
imul
std
and
jnp
fld
data16
push
push
xchg
icebp
pop
lock
adc
stos
and
add
jne
dec
ds
mov
popa
pop
jbe
sub
test
fwait
movs
shl
dec
jae
push
enter
mov
ss
jo
out
(bad)
dec
stos
fisubr
push
push
pop
push
int3
mov
jo
pop
mov
aas
shl
xchg
jno
cmps
mov
inc
mov
xor
scas
pop
mov
jb
aam
mov
jne
ja
shr
pusha
enter
jo
aad
sbb
mov
dec
loope
fld
into
push
nop
pop
pusha
test
mov
imul
(bad)
(bad)
or
enter
and
aad
add
and
mov
pushf
add
mov
dec
jl
inc
pushf
cmc
repnz
les
and
jnp
mov
adc
leave
jo
mov
pop
jg
adc
xor
sahf
sbb
in
fcomi
addr16
pop
rcl
jl
fbld
push
addr16
imul
nop
popf
test
pop
ins
xor
int3
sub
stos
mov
icebp
mov
or
and
fs
mov
test
jl
jg
iret
and
cmc
int
repnz
mov
xchg
pop
dec
sbb
and
int3
xor
or
or
mov
jge
jnp
mov
cdq
ficomp
mov
in
pop
sbb
mov
cmp
arpl
test
xor
ret
push
or
test
(bad)
push
xor
in
fisttp
mov
push
xlat
fld
inc
aad
int3
pop
adc
pop
fsubr
pushf
sbb
or
(bad)
push
pop
call
push
call
inc
push
jle
mov
ficomp
sub
fucompp
add
mov
sbb
js
jle
imul
pop
fs
mov
test
jb
pop
xchg
sar
pop
call
mov
int3
aad
mov
cmp
das
sub
jmp
leave
cmps
int3
repnz
fsub
(bad)
scas
repz
mov
cli
push
ret
shl
or
push
cmps
jae
pop
xlat
loope
jecxz
aam
jne
cmc
push
mov
test
xchg
repnz
into
(bad)
gs
sub
mov
fist
xchg
mov
mov
test
xchg
pop
mov
retf
punpckldq
mov
xchg
sbb
sbb
xor
jbe
repnz
jne
xor
xchg
inc
in
jg
xchg
push
sub
xchg
jne
mov
adc
mov
les
inc
icebp
push
loope
je
xor
jae
int3
ret
mov
xchg
or
or
mov
jecxz
in
movs
pop
adc
shl
sti
dec
fst
adc
pop
cmps
sub
fnstsw
mov
jne
nop
std
mov
into
lahf
mov
fist
cs
je
xor
repnz
inc
sbb
xchg
popa
push
ins
pop
out
inc
sbb
pop
dec
bound
out
out
jecxz
je
mov
lock
in
cmps
lods
jbe
xor
into
aad
out
sbb
imul
xchg
dec
stos
sti
mov
jne
popf
sub
test
xlat
lods
sbb
inc
sub
pop
xor
jns
hlt
iret
js
fstp
pop
fcom
stos
jne
or
and
mov
pop
lods
mov
cwde
js
aas
lods
xchg
mov
xchg
jge
xor
jo
jno
mov
mov
(bad)
and
popf
enter
stc
test
inc
cmp
mov
icebp
xchg
cmc
ret
stos
ret
ins
dec
mov
mov
mov
movs
mov
jge
test
pushfw
inc
sbb
add
inc
add
jle
bound
push
jne
or
dec
pop
out
dec
and
or
rcr
sub
ins
mov
outs
dec
or
js
and
daa
es
lea
ja
mov
std
ret
jmp
pop
pop
aas
outs
shl
mov
mov
sbb
sub
xor
aad
bound
pop
mov
inc
sub
not
inc
jl
pop
inc
sbb
push
jno
pop
addr16
inc
xchg
dec
and
(bad)
sbb
out
popf
js
addr16
jo
jbe
and
mov
movs
xchg
test
xchg
pusha
mov
xlat
fstp
sub
xor
mov
inc
je
or
daa
fcomp
daa
retf
push
mov
ja
dec
jecxz
push
pop
or
ds
lds
(bad)
rcr
ficomp
sahf
xchg
mov
outs
aas
jbe
mov
lods
cmp
inc
cs
(bad)
and
add
movs
xor
out
sar
add
mov
fs
or
std
cmp
inc
add
adc
jg
icebp
mov
mov
cs
mov
test
dec
inc
sbb
lods
fld
jmp
test
imul
int3
mov
mov
cmps
fadd
jl
pop
iret
dec
cmc
in
pop
dec
into
lods
mov
int
fwait
fwait
push
push
(bad)
lods
repnz
imul
push
dec
sti
mov
push
fs
fmul
xlat
push
test
ja
test
popf
fdivr
js
mov
dec
or
popa
fbstp
xor
xchg
mov
pop
or
(bad)
ror
add
mov
sbb
js
jge
retf
out
daa
sbb
jecxz
sbb
pop
cwde
mov
stos
mov
pop
push
ror
sbb
jo
retf
adc
ficom
imul
mov
inc
sbb
test
rol
push
cmc
test
xlat
cmps
or
dec
mov
lds
cdq
nop
cmc
mov
in
mov
xchg
dec
jecxz
mov
pop
xchg
jne
cmp
jp
and
mov
stos
add
jns
rcl
push
push
jbe
arpl
cmp
in
mov
jo
mov
pop
xchg
sbb
loopne
add
mov
mov
mov
test
ds
mov
ins
and
int
jbe
lods
retf
ds
stc
lahf
fadd
lods
bound
sub
jg
jae
mov
mov
jno
cmps
dec
popa
jecxz
and
retf
cmp
setns
retf
ds
sub
aam
sub
dec
adc
xor
fistp
sub
idiv
inc
inc
mov
pop
jle
ja
mov
stos
test
jb
scas
and
ds
imul
sbb
mov
iret
bnd
push
mov
popf
std
dec
jne
cmp
inc
mov
cmp
in
sub
leave
test
mov
in
or
retfw
rcl
cmp
sub
jne
test
push
sahf
loopne
dec
xor
fwait
movs
dec
push
(bad)
clc
popf
xor
ins
hlt
fs
lods
rcl
mov
adc
loop
push
mov
jmp
mov
in
(bad)
push
fld
mov
fsubr
jns
fs
sub
aas
xor
adc
mov
mov
pop
mov
out
out
movsx
pop
mov
clc
int
inc
outs
movs
mov
jbe
mov
xchg
pop
lahf
jnp
sub
into
or
enter
ficomp
outs
data16
out
fmul
and
addr16
adc
je
mov
xchg
cld
adc
lea
scas
std
push
push
and
or
push
xchg
cld
jb
les
dec
jo
xchg
jne
pushf
jo
dec
dec
loopne
sbb
cs
or
jbe
xor
jle
xchg
dec
pop
mov
(bad)
shl
xor
jmp
xchg
pop
mov
inc
test
outs
dec
mov
xchg
fld
jmp
shl
es
in
outs
mov
lods
imul
jbe
ds
aam
arpl
ja
test
mov
enter
jmp
mov
or
rcl
push
sbb
xor
cld
(bad)
jae
mov
or
mov
ins
cli
pop
dec
xlat
xor
jp
inc
ret
daa
repz
xchg
mov
mov
fist
adc
imul
dec
push
nop
lods
xchg
mov
mov
rol
add
pop
inc
inc
outs
dec
int
ins
sar
popa
mov
lds
mov
mov
loope
arpl
cmp
into
mov
jg
add
cs
shl
xchg
cdq
pop
out
and
outs
and
jl
pop
add
dec
mov
cmc
dec
call
mov
push
addr16
test
cmps
cmps
test
call
pop
icebp
xlat
adc
push
daa
fwait
xchg
or
sub
ins
inc
cwde
jle
sub
stos
push
(bad)
fstp
xchg
sbb
icebp
xor
add
inc
add
dec
pushf
sub
cmps
sahf
retf
inc
push
xchg
pop
jno
test
aas
loopne
xchg
repnz
push
mov
aad
test
ret
fist
dec
inc
int3
cmp
imul
arpl
outs
mov
xor
(bad)
cld
mov
loope
loopne
and
mov
aad
adc
mov
lds
retf
mov
popa
jbe
jbe
scas
pop
mov
lock
xlat
dec
or
cdq
lods
push
js
jo
mov
lea
js
fwait
addr16
loope
pop
push
or
fidiv
jl
sbb
add
xchg
sub
enter
push
push
mov
jae
xor
add
out
popf
or
cmp
adc
(bad)
jnp
paddq
lahf
nop
shl
and
jb
es
pushf
iret
fs
cmc
jne
jp
jno
mov
mov
cs
iret
sbb
xchg
sbb
jmp
mov
jnp
sbb
rcr
lds
jo
aad
inc
xor
repnz
cmps
or
daa
jbe
je
mov
sbb
add
nop
pushf
sub
jge
inc
ins
or
mov
mov
xchg
inc
pop
adc
and
push
sub
mov
shl
or
fnstsw
dec
mov
mov
mov
dec
xchg
jae
mov
push
pop
push
das
xor
xchg
pop
lods
jg
xchg
push
stos
and
add
daa
push
jp
dec
dec
cmp
(bad)
rol
sbb
mov
enter
cdq
stos
push
push
rcl
cmp
xor
jl
popf
aas
not
aaa
push
enter
cmc
sub
cwde
mov
ror
push
pop
cld
fistp
and
xchg
mov
jno
mov
and
adc
out
mov
aas
lods
inc
ret
sub
sbb
fyl2xp1
push
mov
pop
mov
hlt
pop
push
and
xchg
hlt
addr16
xchg
pop
movs
jno
xor
mov
loope
sbb
sub
mov
js
mov
push
jge
test
out
sub
pop
rol
push
int3
xchg
mov
jle
sbb
inc
(bad)
pop
sahf
out
hlt
jno
push
sub
out
sub
fisttp
(bad)
hlt
add
jge
jo
(bad)
fcomp
rcr
clc
push
pusha
(bad)
jle
inc
data16
and
pop
cmp
pcmpgtb
mov
inc
xchg
bound
inc
adc
adc
cmp
iret
repnz
in
icebp
int
mov
sbb
data16
push
in
loop
icebp
loop
push
ficomp
loope
add
mov
fld
stc
push
push
outs
xor
push
(bad)
stc
fs
outs
aam
mov
xor
or
dec
mov
gs
mov
jmp
xor
add
pop
test
mov
cmp
sbb
sbb
mov
adc
push
xchg
mov
or
movs
leave
outs
jp
int3
ins
adc
pusha
xchg
mov
retf
cmp
or
jno
inc
(bad)
adc
enter
push
push
push
and
daa
iret
movs
je
out
xchg
rol
and
sub
jno
mov
pop
jo
mov
jo
sub
popf
je
fistp
cmp
mov
pop
pop
fs
inc
xchg
mov
and
pop
mov
stos
out
outs
jge
aas
jl
sbb
mov
or
sub
push
ins
test
mov
sar
push
xchg
das
lods
ins
lods
test
outs
mov
pop
ins
int3
pop
retf
test
cld
call
dec
pop
mov
outs
pop
mov
xchg
xchg
fistp
clc
leave
cwde
mov
mov
lea
iret
xor
lea
sbb
pop
mov
lahf
mov
mov
stc
rol
jle
lahf
jbe
add
pop
pushf
movs
or
imul
jp
jl
(bad)
push
mov
cmc
inc
ss
mov
data16
or
pop
xchg
mov
xchg
push
jge
pop
mov
movs
push
retf
pop
into
in
stos
sahf
mov
inc
cmp
sahf
sar
std
inc
fsub
or
sbb
fsubr
retf
mov
push
xchg
pop
sbb
xchg
mov
mov
cs
mov
push
movs
dec
test
aaa
sub
por
inc
sub
fld
mov
adc
adc
imul
mov
push
iret
ins
out
xor
xlat
push
or
mov
rcr
push
mov
pop
inc
fs
icebp
scas
xor
sub
xchg
jae
mov
jp
mov
mov
mov
sub
movs
ins
pop
vunpcklpd
jno
(bad)
push
pop
or
adc
mov
ins
or
fcom
or
mov
jp
adc
jae
inc
cmc
mov
jmp
lods
pop
sahf
push
ficom
inc
dec
and
mov
aas
lahf
loopne
test
iret
and
cld
inc
std
inc
mov
or
repnz
xchg
jge
test
adc
add
xor
movs
and
xchg
(bad)
call
xchg
ins
out
fs
(bad)
or
xor
xor
std
xchg
int
lds
ror
xor
push
loope
mov
or
mov
(bad)
call
mov
fistp
shl
out
add
int
(bad)
xor
xor
pushf
mov
xor
or
jmp
popf
sti
mov
sbb
jmp
movs
enter
jne
pop
push
dec
mov
mov
or
cmc
loope
or
jge
sbb
sti
outs
or
mov
add
sti
push
dec
call
jl
push
xchg
and
test
jbe
cs
cld
jae
shl
lock
loopne
pop
xor
sbb
push
or
xor
gs
push
cmp
xchg
cs
mov
je
sti
dec
imul
loopne
xchg
test
xor
cs
mov
dec
cmp
out
pop
and
loopne
test
loop
push
call
(bad)
and
sbb
push
xor
adc
mov
shl
into
dec
push
adc
imul
push
cmp
pop
pop
mov
arpl
or
pop
imul
aad
jmpw
pop
mov
(bad)
jl
sahf
and
jns
(bad)
and
(bad)
shl
(bad)
mov
push
test
or
out
outs
mov
fdiv
fmul
mov
fimul
mov
pop
call
outs
fst
xchg
loope
mov
lahf
xchg
mov
les
and
jecxz
pop
pop
lds
xchg
sub
mov
(bad)
mov
pop
leave
jnp
lods
xchg
jnp
push
mov
push
int3
scas
retf
test
or
mov
push
pop
xor
cmps
rcr
(bad)
push
adc
or
outs
dec
sbb
or
sbb
mov
and
icebp
fmulp
xchg
outs
and
cmp
adc
jns
fmul
push
sub
xchg
mov
mov
xchg
push
adc
adc
cmp
mov
sub
ret
dec
in
and
mov
dec
and
adc
mov
push
xchg
pop
mov
dec
xchg
fincstp
adc
outs
clc
mov
dec
idiv
in
popa
sub
(bad)
call
out
test
cmp
stc
lea
mov
pop
sahf
pop
cs
(bad)
dec
jns
xor
scas
mov
cmp
push
retf
sbb
(bad)
int3
pop
pop
adc
sbb
mov
add
std
popf
or
pop
sahf
pop
push
jae
fisttp
lahf
std
ror
loopne
shr
out
push
test
rdtsc
or
inc
das
gs
inc
pop
add
sahf
mov
xchg
outs
enter
adc
and
data16
mov
or
adc
jns
push
mov
adc
lock
test
inc
cmp
jbe
lods
cwde
xchg
inc
pop
sar
inc
adc
xchg
call
push
pop
cmp
in
(bad)
sub
loopne
cs
mov
ins
mov
shr
pop
xchg
popa
mov
sub
push
clc
icebp
sub
mov
sar
mov
adc
pop
pop
inc
jbe
push
cmp
ret
mov
mov
dec
mov
adc
push
or
mov
cmp
(bad)
sbb
popa
jge
xor
mov
fs
dec
test
ds
rol
add
lods
mov
mov
mov
aas
xor
sub
push
sahf
push
jecxz
outs
aas
ins
into
mov
push
movs
out
fcomp
mov
dec
outs
cmp
sbb
in
out
cmp
sahf
xor
movs
or
iret
addr16
mov
gs
pushf
ror
mov
repz
cmp
inc
movs
ret
adc
ficomp
retf
cwde
mov
jle
push
popf
test
retf
adc
sar
sahf
aam
clc
enter
sbb
sbb
rol
mov
int3
movs
pusha
ret
(bad)
cmp
mov
pop
cmp
das
mov
test
dec
jp
pop
cmp
jnp
jmp
cmp
fs
cld
cwde
fwait
scas
mov
push
aas
push
cmp
lea
or
jns
push
mov
jle
test
push
scas
inc
jle
sub
jo
jmp
enter
jge
sahf
pop
ror
mov
cmc
loopne
test
test
retf
inc
fs
pushf
mov
jecxz
dec
call
jmp
les
mov
popa
gs
and
push
in
xor
gs
sbb
ins
ja
adc
fs
mov
cmp
dec
test
lods
dec
xchg
add
lds
test
or
repz
mov
adc
xchg
mov
or
pop
mov
pop
dec
aas
adc
(bad)
retf
xchg
int
cld
mov
clc
aaa
fdivr
cmps
push
ins
(bad)
adc
xchg
hlt
mov
push
movs
mov
mov
sub
les
xor
out
nop
stos
movs
jle
mov
cmp
into
shr
push
pop
push
xchg
popf
mov
ficom
dec
scas
push
das
(bad)
out
add
in
mov
xchg
cs
cmp
sahf
xor
(bad)
cmps
aas
ins
mov
jo
and
cmp
shl
pop
or
push
add
xor
xchg
mov
inc
push
loopne
inc
je
xlat
not
adc
clc
dec
adc
test
ins
add
loope
adc
jmp
xor
retf
(bad)
sbb
push
movs
daa
pop
not
or
jno
mov
sub
fadd
sub
push
sub
jl
imul
loopne
(bad)
hlt
cdq
adc
outs
ins
sub
inc
test
ins
in
je
mov
inc
jne
pop
jb
aas
in
pop
cdq
pusha
push
inc
jl
fwait
xor
adc
mov
mov
dec
mov
sub
inc
and
xchg
sbb
test
aad
lods
pop
mov
iret
add
jmp
stc
cmp
cmp
fcmove
jae
sub
inc
mov
iret
test
jo
and
mov
and
dec
popf
mov
jo
cmp
cmp
mov
mov
push
push
stos
inc
repnz
jge
mov
add
mov
stos
cmp
mov
xor
xlat
loope
push
mov
imul
popa
cmps
sbb
push
aad
test
fcom
les
push
mov
push
call
mov
imul
mov
push
imul
mov
mov
push
pop
ins
pop
xchg
enter
leave
sub
clc
in
movs
jle
js
ss
xchg
push
mov
aas
and
cmp
je
inc
(bad)
adc
call
jae
cld
mov
push
mov
test
inc
xchg
jp
sbb
jl
outs
fchs
jb
popf
xchg
xchg
retf
xchg
rcl
int3
mul
cmp
jbe
icebp
sbb
xchg
adc
inc
lahf
mov
pop
sbb
(bad)
std
loopne
ja
ds
jnp
inc
mov
mov
aad
icebp
jmp
mov
fbld
lds
fcmovb
jb
mov
push
xor
pop
icebp
mov
or
adc
adc
sub
fcmovne
mov
cs
add
xchg
retf
pop
mov
mov
or
mov
outs
dec
imul
lock
dec
outs
mov
jp
inc
sbb
cmp
lea
lods
mov
movs
(bad)
or
addr16
push
and
add
jge
push
test
ret
fsubrp
scas
mov
push
mov
clc
retf
je
fmul
adc
fbld
xchg
cmp
ins
adc
sub
mov
stos
inc
pop
sti
(bad)
jb
dec
aaa
daa
daa
mov
in
call
xchg
ror
xchg
dec
push
and
push
cld
in
dec
jno
xlat
push
lea
pusha
add
inc
jne
repnz
push
imul
mov
sub
rol
adc
scas
mov
add
clc
pop
std
push
xor
xor
mov
ins
xchg
jge
inc
pop
or
test
scas
outs
mov
sbb
test
test
arpl
test
mov
jle
jns
mov
lods
fild
repz
inc
mov
push
push
aaa
xchg
stos
mov
popf
pop
aaa
retf
lahf
shl
cmps
xchg
or
popf
sbb
inc
cdq
scas
mov
pop
sbb
and
loop
or
mov
fs
shl
push
fmul
mov
stos
mov
iret
xor
movs
dec
inc
or
xchg
xchg
cmps
(bad)
mov
mov
jmp
int3
jl
or
fs
int3
mov
xchg
add
push
lods
inc
popf
mov
mov
outs
dec
and
imul
pop
call
gs
jbe
fs
mov
das
leave
push
jns
sbb
jmp
adc
stc
mov
mov
int
pop
rol
mov
in
sahf
jle
sar
push
mov
mov
fxch
xchg
add
mov
cmc
mov
mov
sub
cmps
jae
test
retf
outs
inc
je
and
fcmovu
(bad)
das
xor
sub
adc
push
scas
icebp
mov
push
pop
ror
ja
and
push
inc
push
or
loope
xor
inc
shl
jle
push
sub
inc
int
addr16
mov
es
fimul
push
pop
shl
jbe
push
lea
jp
fdivr
imul
les
inc
dec
fs
or
lods
mov
clc
rol
xchg
fadd
nop
sub
int3
(bad)
retf
mov
adc
jne
inc
adc
pop
imul
loope
jbe
fwait
std
ins
xchg
fld
imul
or
gs
pop
bound
ror
retf
sub
sub
bound
bound
cmp
push
loopne
mov
sbb
repz
aaa
mov
loop
fild
xchg
aas
mov
push
xor
push
xor
ficom
dec
sub
int3
fidivr
fld
xchg
test
xchg
ss
ja
cmps
push
cli
xchg
stos
out
jecxz
xchg
pushf
call
cdq
push
inc
mov
push
loop
inc
cmp
into
adc
cmp
push
sub
inc
adc
scas
inc
test
mov
inc
adc
lds
jmp
mov
cmps
jp
jnp
xchg
(bad)
and
xchg
jp
adc
lahf
je
(bad)
xchg
iret
out
push
sbb
mov
mov
(bad)
ja
ficomp
iret
dec
fisubr
out
dec
cmp
mov
jge
aas
dec
jnp
sahf
nop
pop
fs
ins
test
sub
repz
xchg
sub
jne
(bad)
leave
lea
mov
sar
fstp
icebp
mov
cs
sahf
jle
jle
bound
push
ror
xlat
loop
mov
pop
xor
gs
add
cmp
div
push
dec
clc
sbb
out
fst
add
rcr
ds
push
xchg
sbb
dec
or
mov
je
pop
jl
retf
leave
push
int3
push
mov
lds
mov
daa
fidivr
div
add
stc
or
mov
xchg
push
test
frstor
ret
pop
mov
outs
sbb
dec
test
or
jbe
mov
push
cmp
sbb
jge
ret
ins
test
das
xor
test
(bad)
pop
cs
push
mov
adc
push
jle
mov
imul
not
and
adc
aaa
mov
add
sbb
fnsave
out
jo
fldenv
retf
jne
xchg
test
adc
push
ret
push
push
or
ins
add
jp
xchg
and
test
add
cmp
add
pop
pop
int3
sub
test
push
adc
dec
popf
or
or
es
push
in
leave
out
sub
push
pop
push
je
sub
jg
mov
aas
or
cmp
adc
icebp
xor
or
sar
mov
xor
sti
jns
cwde
(bad)
retf
xlat
adc
adc
(bad)
repnz
push
test
sti
and
in
sbb
jb
push
push
sar
add
(bad)
shl
mov
pop
push
cmp
xchg
mov
mov
cmp
cmp
daa
imul
mov
lea
ffreep
popf
popa
shl
outs
ins
test
jb
in
stos
out
xor
dec
leave
icebp
addr16
push
adc
cdq
mov
jns
and
adc
add
test
(bad)
mov
dec
cmp
adc
scas
mov
es
jb
out
and
jge
mov
dec
aad
mov
jae
(bad)
adc
outs
int
jmp
cmp
aaa
xor
out
push
mov
sbb
ds
cmps
sub
and
jns
inc
jns
mov
xchg
es
aad
mov
mov
daa
out
in
jb
sahf
sub
pop
mov
leave
rcl
mov
ret
fwait
dec
adc
popf
jle
mov
inc
aad
and
movhlps
jg
ja
int
fsubrp
in
push
je
push
mov
inc
lods
outs
sub
xor
mov
stos
test
cmps
sub
fidiv
(bad)
push
xor
hlt
xlat
mov
retf
cwde
pop
mov
mov
adc
xor
or
in
jb
pop
out
imul
cmp
es
jnp
test
pop
xor
fadd
pushf
not
sub
fsub
shl
mov
iret
leave
dec
pop
retf
idiv
add
xchg
and
mov
push
xchg
push
jb
mov
and
aam
movs
cmps
sbb
pop
xor
lahf
push
call
mov
jno
data16
or
fadd
rcl
cmp
add
jo
daa
add
(bad)
test
cmp
or
mov
aam
nop
js
fild
loop
mov
push
adc
mov
jle
data16
bound
test
test
jge
cld
popa
(bad)
gs
test
xor
jg
daa
into
int3
mov
mov
test
aad
inc
mov
or
mov
push
adc
mov
lods
addr16
out
xor
mov
push
mov
sar
out
stc
mov
stos
sub
sbb
les
xchg
addr16
lds
jl
jmp
jl
(bad)
mov
popf
mov
and
xor
xchg
pop
jns
push
loop
mov
mov
out
push
mov
scas
xor
ds
rcl
bound
mov
(bad)
inc
mov
mov
sub
icebp
jge
mov
jmp
out
scas
or
icebp
add
jae
xlat
push
and
xchg
pushf
pop
jae
outs
pushf
push
jle
sub
dec
xchg
mov
into
outs
jl
lods
leave
jp
mov
mov
enter
sbb
jbe
fisttp
in
xchg
jbe
out
(bad)
cmps
ja
mov
addr16
sub
jae
ins
add
in
inc
push
cs
inc
jge
jno
sub
dec
out
push
dec
imul
fs
jno
mov
movs
arpl
lods
pop
dec
and
scas
xchg
dec
push
ja
outs
mov
lods
int
shr
nop
push
retf
jl
sub
xchg
jb
xor
test
(bad)
or
mov
mov
loopne
in
(bad)
push
dec
push
loopne
inc
xor
xlat
mov
or
push
mov
sbb
pop
into
inc
sub
add
jmp
xchg
xchg
fcomp
sub
push
ds
gs
xor
movs
lock
add
or
pusha
mov
mov
pop
jo
es
in
int
mov
imul
in
repnz
lea
push
outs
adc
xor
pop
or
mov
jg
push
mov
dec
vpslld
and
mov
adc
test
int
mul
mov
leave
cmps
cmp
lods
adc
xor
lea
outs
rcr
xchg
jmp
inc
jmp
popa
add
int3
jbe
adc
pushf
push
push
pop
pop
or
mov
or
xor
pop
call
daa
dec
arpl
jo
sub
lods
push
mov
jbe
or
dec
dec
outs
ins
or
das
and
mov
movs
outs
and
shr
cmps
xchg
icebp
or
scas
lods
xor
jns
adc
sub
dec
push
clc
addr16
js
cmp
push
bndldx
sbb
mov
call
into
shl
dec
pop
in
fnstcw
das
sbb
jmp
fdiv
jg
std
jl
es
test
pop
inc
mov
sub
dec
cld
ja
scas
pop
ret
xor
jmp
ins
or
push
(bad)
mov
or
cmc
outs
add
fld
mov
hlt
xor
aaa
cld
hlt
mov
jle
jne
mov
xchg
push
imul
hlt
sub
lods
and
mov
out
dec
xchg
inc
sbb
push
jno
dec
sbb
frstor
das
fstp
pushf
test
cmc
mov
test
inc
retf
jo
mov
inc
(bad)
test
xor
(bad)
and
fild
mov
inc
popa
add
inc
retf
cs
and
es
stos
mov
scas
loop
dec
loop
ins
jmp
jnp
ficomp
mov
mov
(bad)
retf
cdq
int
pop
xchg
push
jns
imul
push
ret
jg
push
fst
adc
out
rol
jo
pushf
in
jae
cmp
fdivr
stos
leave
sub
cwde
(bad)
in
int3
mov
sar
mov
push
scas
test
mov
ror
inc
or
and
lds
mov
sub
xor
mov
sub
xchg
test
xor
lods
je
mov
mov
pushf
cdq
test
and
sar
int
add
or
ja
cli
aam
(bad)
xor
jbe
fdiv
fisttp
popa
mov
data16
xor
inc
or
jl
push
mov
push
or
into
adc
and
mov
mov
inc
mov
fnsave
fadd
call
mov
repnz
fisub
stos
lods
arpl
mov
imul
cmp
aas
jb
retf
int
stos
gs
add
je
adc
mov
sbb
jge
mov
sbb
inc
mov
(bad)
pop
shr
js
in
jle
aaa
das
adc
fcom
int
aad
shl
inc
nop
or
or
jge
jp
inc
xchg
sub
into
psadbw
cs
addr16
pop
addr16
mov
jns
or
jnp
or
mov
jo
xor
(bad)
and
js
sub
pop
inc
adc
test
ins
in
icebp
aaa
cmp
(bad)
jb
mov
xchg
mov
add
jmp
jne
rcr
ficomp
push
pop
push
xor
enter
stos
mov
mov
jl
pop
stos
push
jne
mov
jecxz
sbb
call
mov
cdq
xor
xor
sti
fsubr
ds
adc
mov
iret
add
jo
fwait
mov
pop
test
pop
dec
cmps
sti
ret
xchg
mov
mov
jge
mov
sbb
shl
out
cmp
add
aad
xchg
popf
inc
out
imul
or
mov
adc
lods
jne
clc
xor
fisttp
(bad)
push
add
test
mov
and
test
mov
xlat
sar
cmc
dec
add
or
js
inc
pop
stc
jno
retf
lods
iret
mov
dec
sub
adc
xor
xchg
xor
inc
ror
mov
inc
mov
jmp
jne
std
bound
lods
(bad)
(bad)
ret
push
jbe
sbb
or
gs
pop
movs
sub
pop
inc
dec
mov
lahf
out
xchg
dec
or
cdq
loope
push
cmp
mov
outs
jg
mov
dec
add
sub
mov
shl
and
sti
outs
xchg
mov
pop
push
or
movs
sub
lods
dec
or
test
adc
in
lods
lods
outs
adc
outs
std
xchg
adc
sbb
inc
je
fwait
pop
retf
fdiv
in
ins
int
push
adc
adc
js
cmps
scas
xor
mov
cmp
out
int3
adc
dec
jl
jecxz
aaa
push
mov
adc
loopne
ins
ja
(bad)
xchg
adc
test
mov
and
fld
dec
mov
out
lds
or
popa
mov
mov
js
pop
lahf
stos
loope
adc
loopne
lods
xchg
data16
lods
into
repz
mov
or
push
jecxz
mov
rcr
ins
and
dec
and
retf
or
add
push
(bad)
mov
outs
ds
(bad)
sbb
mov
jp
mov
ror
push
sub
mov
outs
cmp
shl
fld
lock
jle
add
hlt
pop
push
add
or
or
iret
inc
jns
push
or
mov
sbb
jb
xchg
loop
or
iret
imul
xchg
je
jmp
loope
ins
fxch
jns
sahf
iret
arpl
xor
jecxz
jb
fbld
sbb
or
jge
push
je
repnz
ins
fistp
imul
push
mov
xchg
out
pop
xlat
jle
jg
movs
jo
and
push
jb
fld
sub
cmp
jl
cmp
(bad)
int3
mov
xor
pushf
adc
pop
jmp
cmp
out
cmp
ret
pop
popa
sub
mov
xor
xor
imul
xlat
xchg
mov
in
inc
(bad)
gs
mov
(bad)
xor
cwde
push
mov
jge
inc
or
jg
mov
cmc
and
stos
hlt
push
leave
push
cmp
sahf
test
dec
push
push
fadd
je
mov
scas
les
aas
push
ins
es
into
mov
xlat
mov
retf
add
inc
xchg
mov
sahf
ins
sub
mov
or
popf
data16
mov
sbb
mov
push
clc
outs
mov
ins
es
add
adc
push
or
imul
mov
xor
xor
and
icebp
retf
jle
cmp
fcomp
and
cmps
jp
dec
hlt
test
lods
out
mov
icebp
imul
cmps
mov
sub
(bad)
es
scas
mov
mov
cmp
movs
pop
jne
cdq
adc
test
xchg
sub
cmps
mov
lea
jns
xlat
dec
rol
data16
aad
inc
(bad)
jl
lea
mov
mov
das
bound
lods
dec
shl
push
(bad)
into
jg
adc
add
fisttp
cli
arpl
add
dec
je
mov
fwait
sar
outs
test
movs
mov
jnp
jbe
adc
mov
inc
pop
sbb
add
in
mov
and
xor
stc
dec
xchg
dec
scas
add
retf
loope
int3
lock
and
leave
xor
out
je
(bad)
int3
mov
out
and
fstp
ret
iret
lea
shl
mov
mov
xchg
mov
div
jbe
dec
adc
xor
jmp
repnz
jne
in
scas
dec
mov
push
push
jp
mov
icebp
mov
mov
or
push
iret
hlt
xor
push
pop
pop
jne
inc
sbb
pop
pop
das
(bad)
jns
int
fisttp
mov
adc
sbb
jl
mov
pop
(bad)
out
sub
call
dec
mov
inc
sub
(bad)
sahf
pop
adc
or
adc
shl
shr
cmp
pop
dec
mov
cmp
ss
lods
cmp
sbb
xchg
arpl
inc
js
sub
add
pop
xor
mov
sbb
out
addr16
and
dec
retf
push
or
or
mov
popa
push
vmread
pop
xchg
sbb
and
enter
pusha
outs
jo
inc
mov
imul
xor
adc
int
in
sub
jb
bound
sub
mov
inc
popa
mov
cmps
arpl
ins
inc
sub
(bad)
pop
sbb
cmp
mov
jg
pop
jecxz
out
jns
mov
mov
stc
jle
and
mov
mov
lahf
cs
cld
cli
pushf
mov
retf
ja
(bad)
out
mov
idiv
loopne
dec
mov
dec
xchg
sub
nop
div
stos
fbstp
in
dec
in
push
push
shl
pop
mov
jno
cli
push
inc
and
mov
push
int3
call
dec
je
cmp
lods
jnp
(bad)
mov
mov
inc
dec
iret
xchg
hlt
and
leave
loopne
sub
(bad)
rcr
push
popa
sub
pop
pop
dec
fcom
xor
aas
jns
dec
jne
fwait
test
test
xchg
(bad)
jg
cmc
aad
addr16
adc
addr16
not
(bad)
cmps
add
dec
popa
jne
imul
fdivr
mov
inc
push
mov
dec
(bad)
daa
and
mov
xchg
lea
sbb
scas
and
jns
or
xchg
jl
push
outs
iret
sti
push
mov
popa
mov
pusha
fwait
inc
sub
push
icebp
jmp
fisttp
push
xlat
sbb
call
rcl
inc
scas
sbb
jb
popf
pushf
js
imul
sub
jb
dec
enter
push
mov
mov
aas
retf
sbb
cmp
test
inc
pop
push
mov
(bad)
mov
mov
push
xor
or
dec
(bad)
repz
inc
loop
cmp
(bad)
xor
daa
cmp
xlat
xchg
lods
mov
and
shr
cmp
enter
out
dec
sbb
into
sub
(bad)
xchg
dec
xchg
push
xlat
imul
pop
shl
in
jge
sbb
cmp
xchg
popf
sbb
ret
jp
mov
movd
rcr
int
jle
and
fldenv
retf
lods
jb
dec
xchg
call
mov
ss
popf
movs
xchg
lea
mov
pop
mov
dec
jle
xchg
test
cli
fwait
pop
sahf
sub
ss
(bad)
jl
fbld
rcl
adc
inc
cwde
test
lods
fs
mov
mov
add
aad
fimul
dec
add
scas
or
and
test
leave
xchg
mov
das
push
push
or
addr16
push
push
ds
dec
f2xm1
mov
mov
js
mov
fnstcw
test
int
js
mov
clc
or
and
mov
ja
pop
jge
jbe
sub
jl
in
(bad)
sub
xor
retf
test
ins
es
xor
leave
mov
mov
sub
ins
xchg
jns
mov
sub
adc
popa
adc
adc
pop
mov
ds
mov
add
jp
mov
movs
jo
ins
lds
mov
push
xor
add
call
xor
fidivr
mov
bound
popa
mov
push
pushf
inc
in
or
dec
aad
and
mov
jne
push
sub
sbb
sbb
scas
cld
cmp
fsubr
mov
xor
loop
mov
jnp
pop
out
call
xchg
push
jecxz
popa
ja
stos
sub
mov
mov
movs
sub
xor
std
fisub
pop
mov
mov
ss
push
mov
in
adc
iret
jp
(bad)
sar
push
jnp
cmp
mov
sbb
stos
ins
mov
aam
push
ja
jg
jle
fs
mov
retf
push
push
cmp
dec
leave
mov
cdq
inc
rcl
rcl
fidiv
repnz
add
xor
inc
into
loop
aad
imul
mov
xchg
not
xlat
call
outs
lods
loope
(bad)
or
mov
dec
adc
iret
cld
mov
addr16
in
(bad)
dec
jns
jg
adc
jb
pop
daa
dec
pop
push
mov
jp
clc
jge
pop
xlat
pop
and
lea
out
into
(bad)
ins
or
repz
inc
jge
mov
clc
jno
ja
test
int3
pop
stos
movs
jl
(bad)
xchg
or
jl
stc
push
xchg
fld
nop
adc
nop
in
pop
test
pushf
out
push
int
sub
scas
outs
xor
repz
out
inc
or
push
sub
enter
jp
lds
adc
in
(bad)
icebp
adc
or
sar
and
and
mov
ins
jp
clc
test
in
sub
imul
xchg
mov
sbb
sub
leave
shr
pop
adc
mov
xchg
add
pop
cmp
test
out
jge
push
sar
push
in
cmp
mov
jg
je
and
ret
pusha
jl
aas
pop
icebp
lods
xlat
arpl
or
les
mov
arpl
mov
adc
mov
jno
jle
xchg
and
sub
xlat
loope
int3
js
push
mov
imul
iret
pop
lods
retf
lds
jg
in
sub
arpl
(bad)
mov
ret
in
pop
lods
add
push
sbb
outs
les
mov
sub
sub
sbb
jg
inc
dec
xchg
pusha
or
mov
rcl
pop
sub
inc
mov
jns
stc
fnstenv
adc
lahf
mov
or
sar
or
sahf
inc
fadd
fadd
push
cmp
(bad)
push
xchg
mov
data16
imul
outs
add
in
fucomp
push
movs
push
mov
cdq
aas
retf
clc
lea
std
and
cmp
das
push
movs
clc
idiv
enter
jg
call
repz
jge
xchg
mov
aad
icebp
rol
add
or
jmp
pusha
jecxz
dec
fst
clc
js
add
push
xchg
rcl
mov
inc
xchg
mov
std
ret
mov
aas
sub
pop
ret
or
push
cmp
xor
bound
pop
xchg
sbb
in
pop
mov
xchg
mov
xlat
dec
mov
ss
nop
cmps
push
mov
lea
fld1
(bad)
sub
in
push
ja
jne
jno
aas
jno
jno
pop
jae
scas
push
jno
jnp
fsubr
ds
fimul
iret
sub
push
mov
dec
sar
sahf
jns
movs
or
int
arpl
xor
xchg
cwde
jae
out
je
add
stos
(bad)
mov
cmp
mov
das
adc
pop
lods
fstp
pop
nop
retf
mov
add
dec
xor
pop
fst
out
scas
pop
dec
daa
popa
add
or
and
pop
pop
pop
fisubr
iret
xchg
jb
call
push
mov
out
jg
std
imul
loopne
popf
mov
(bad)
int3
sbb
das
shl
mov
(bad)
mov
xchg
ins
ins
loopne
xchg
shl
retf
outs
add
mov
sahf
xor
push
pop
push
test
sbb
icebp
test
jne
cmp
push
inc
imul
inc
imul
sti
add
xor
or
inc
fsubr
adc
pop
inc
call
stos
add
lea
pop
mov
jg
xor
fimul
cmps
sbb
fdiv
ds
ins
inc
in
xchg
mov
daa
xor
dec
fdiv
fucomp
cmps
repz
shr
or
data16
pop
mov
ins
or
mov
inc
ss
xor
push
inc
or
aas
cdq
leave
jno
dec
push
clc
add
bound
and
mov
shl
lods
fistp
ins
int
jbe
dec
imul
jo
cmp
std
mov
cmp
add
mov
into
je
pop
rcl
push
lods
test
xor
pop
clc
les
mov
mov
sbb
movs
mov
cmp
in
sub
sbb
xchg
push
int3
ret
cmp
inc
icebp
inc
rol
sub
aaa
(bad)
(bad)
mov
imul
push
cdq
xchg
int
and
mov
pop
xchg
fadd
mov
outs
xor
mov
sub
pop
mov
mov
(bad)
out
xchg
packuswb
add
cmp
sti
cmp
(bad)
out
jmp
and
sub
add
rcl
clc
pop
(bad)
mov
int
bound
test
pop
pop
dec
add
pop
mov
xchg
mov
cld
cmp
xor
xchg
sar
mov
dec
vprotb
gs
aam
add
mov
frstor
sub
jmp
dec
sub
mov
scas
data16
mov
in
xchg
pop
cmp
dec
jo
mov
adc
ja
add
mov
mov
inc
pusha
arpl
jmp
aad
cli
or
jo
or
fcom
cmp
fs
dec
and
cmp
(bad)
cli
mov
inc
in
add
and
sub
xor
push
leave
push
push
inc
stc
adc
push
retf
into
or
xor
and
rcl
rol
sub
push
mov
rcl
xor
mov
call
pop
inc
xchg
fidivr
push
add
and
gs
(bad)
push
test
loopne
cmps
fwait
mov
shl
push
jle
mov
dec
add
jmp
int
or
dec
dec
xchg
das
retf
sti
leave
inc
fisubr
inc
fidiv
push
and
sbb
(bad)
mov
cld
into
xor
fistp
push
pusha
outs
loope
mov
pop
sub
push
inc
cwde
add
or
lds
fbstp
fidivr
pop
leave
mov
add
sub
mov
ret
fistp
stc
call
(bad)
imul
xchg
and
aaa
mov
inc
outs
or
sbb
sbb
shl
mov
pop
or
or
sar
js
or
mov
mov
xor
mov
out
add
push
xchg
xchg
pop
mov
lods
cmp
ins
mov
retf
sub
fnstenv
push
jp
fisubr
es
ja
adc
icebp
ds
repz
aaa
adc
and
cwde
ins
mov
sbb
aaa
mov
loop
gs
das
leave
lahf
cmp
(bad)
ins
jns
(bad)
dec
adc
jnp
dec
mov
int3
pop
push
and
popf
dec
xchg
jne
ja
pop
or
jne
fimul
pusha
mov
push
pop
hlt
xchg
mov
out
or
push
xor
jmp
ss
je
jmp
xlat
xchg
ret
hlt
pop
in
and
xchg
adc
sub
xchg
ficomp
test
jno
ficom
mov
mov
int3
cmp
jmp
inc
lahf
adc
fs
retf
mov
pop
push
or
jmp
add
ficomp
mov
icebp
and
call
or
fstp
and
jmp
icebp
sbb
xchg
xchg
and
xor
push
xor
nop
lods
cmps
imul
push
mov
stos
(bad)
shl
and
iret
into
neg
rcl
in
cs
fcompp
xor
call
mov
pop
call
out
push
les
fbstp
rol
jl
push
loopne
add
mov
mov
fiadd
int3
hlt
mov
loope
push
(bad)
mov
lahf
sbb
sub
bsf
or
imul
mov
adc
cmp
jmp
(bad)
cmp
shl
test
xor
mov
jmp
mov
pop
scas
inc
xchg
(bad)
pop
jae
xchg
jle
push
inc
mov
ffree
jnp
add
inc
mov
jb
loop
jmp
aam
pop
mov
out
dec
jmp
xor
sbb
ror
fnstcw
jecxz
popf
mov
ja
popa
inc
cdq
push
mov
and
jp
out
push
xchg
mov
mov
imul
and
sbb
push
outs
or
xchg
mov
test
or
push
xor
jge
jns
nop
mov
aas
mov
fdiv
pop
jbe
out
in
cmps
mov
stos
xchg
and
fbstp
mov
mov
inc
push
jmp
mov
test
and
test
gs
rcr
sbb
cli
jecxz
or
inc
sbb
mov
push
(bad)
mov
mov
push
mov
aad
cmc
sub
scas
popa
or
pop
call
ror
adc
mov
cmc
lea
mov
pusha
outs
adc
mov
scas
and
scas
adc
cdq
inc
jne
adc
mov
sub
pop
sub
jne
or
mov
fwait
scas
push
jmp
xchg
in
stos
das
push
push
mov
pop
mov
sub
mov
or
imul
outs
or
add
out
cmp
mov
xor
push
ret
push
mov
push
sub
lods
cmps
jg
call
cmps
stos
mov
mov
je
push
adc
fldcw
add
sbb
mov
movs
scas
sar
push
xlat
(bad)
(bad)
nop
push
fsubr
shr
mov
mov
jne
xchg
xlat
mov
adc
sahf
mov
mov
(bad)
outs
dec
xor
outs
or
sub
popf
lods
sub
mov
or
xor
xchg
(bad)
mov
je
push
push
test
pop
fs
mov
leave
imul
jno
mov
xchg
push
fdivr
lock
adc
xchg
sbb
xchg
mov
pop
mov
jns
jge
mov
lods
mov
ja
mov
pop
rol
popf
sub
in
sbb
mov
mov
repz
into
or
cli
jne
(bad)
jne
adc
cmp
jmp
inc
push
test
out
dec
(bad)
shr
and
mov
jne
sti
push
sub
mov
mov
mov
mov
pop
xor
out
mov
into
cwde
inc
cwde
cdq
mov
push
mov
stos
ins
xor
inc
or
fwait
jp
jno
ror
jle
dec
cmp
call
mov
add
mov
popa
ror
mov
(bad)
pop
sbb
pop
xchg
xchg
or
es
pop
xor
aas
mov
outs
das
and
mov
sub
dec
add
popf
dec
popf
and
call
lods
scas
mov
push
mov
xchg
or
out
cmps
mov
out
addr16
lods
inc
dec
scas
or
lods
mov
popa
(bad)
bound
dec
push
dec
add
cmp
pop
jnp
mov
cdq
mov
sbb
cwde
retf
and
repnz
loopne
inc
inc
mov
xchg
and
aad
push
out
dec
clc
mov
jge
shr
inc
fbstp
repz
jnp
mov
jbe
or
test
push
loope
test
xchg
sub
mul
stos
inc
or
int3
fcom
cdq
cmps
xchg
and
push
shr
push
push
push
fs
cmp
add
es
mov
xor
btc
inc
movs
cli
pushf
pop
cmp
mov
mov
inc
mov
mov
push
add
aas
outs
ins
sahf
sub
je
push
jno
movs
sbb
adc
cmp
fldcw
shl
addr16
jmp
xchg
enter
push
addr16
addr16
and
xor
test
mov
dec
nop
mov
dec
mov
leave
jg
fistp
pop
test
fbstp
mov
(bad)
(bad)
lock
lea
pop
or
(bad)
sbb
arpl
test
out
int
pop
outs
aad
mov
addr16
and
sub
aad
fnstsw
mov
int3
(bad)
jp
mov
dec
sub
cmp
leave
(bad)
nop
xchg
outs
adc
mov
add
pop
test
fmul
pop
fisubr
sar
retf
inc
mov
dec
add
pop
xchg
xlat
popw
dec
mov
test
mov
mov
bound
sbb
inc
(bad)
dec
mov
adc
jo
out
jmp
lahf
and
or
mov
fldl2e
adc
adc
aaa
mov
jne
adc
sti
push
stos
mov
enter
push
mov
sub
or
lock
jbe
xchg
jmp
inc
int3
ret
ror
cs
push
enter
adc
rcl
mov
pop
mov
mov
inc
rol
mov
jb
inc
dec
push
dec
or
int
mov
jge
call
cmp
sbb
sbb
xchg
fs
xchg
fadd
stc
or
push
adc
retf
aaa
inc
(bad)
retf
int3
mov
movs
out
mov
push
mov
jno
push
and
aad
add
pop
das
ret
pop
repz
adc
sbb
jle
and
pop
push
inc
out
lods
int
dec
int
cmp
cmp
adc
mov
xor
mov
(bad)
cmp
or
nop
ins
arpl
iret
sub
cdq
cwde
xchg
cmp
inc
jle
push
cld
ins
mov
xchg
xchg
std
pop
je
cmp
shr
in
cs
xor
jge
dec
es
into
and
mov
push
(bad)
lds
pusha
mov
mov
pushf
mov
jno
ins
mov
mov
(bad)
iret
and
xchg
dec
push
mov
mov
(bad)
push
push
mov
clc
in
mov
lock
mov
push
int
xchg
pushf
sar
push
push
sub
jo
mov
sahf
into
loopne
pop
mov
mov
ja
mov
mov
or
mov
cmps
fwait
inc
xor
adc
cmp
push
int
jne
mov
jg
aad
(bad)
mov
mov
push
test
je
xlat
shl
mov
mov
cmp
xchg
repnz
add
cdq
mov
adc
jo
push
ret
enter
sbb
test
nop
imul
inc
cvtpi2ps
jnp
or
push
sub
add
outs
imul
pop
adc
cmc
xchg
(bad)
and
and
inc
add
cdq
dec
pop
test
enter
into
mov
mov
jne
jmp
iret
je
jl
jp
aam
popa
outs
sub
xchg
mov
sub
shr
sbb
ja
mov
outs
sbb
and
dec
jge
es
or
int3
mov
and
xor
push
xor
xchg
push
cmp
ds
and
jae
not
pop
jns
sub
xor
sub
repnz
shl
adc
xor
js
xor
cs
mov
mov
mov
cdq
cs
dec
es
js
cmc
cmp
xchg
jg
cmp
and
or
ins
cld
pop
dec
sub
pop
std
adc
add
dec
xor
dec
cmp
call
inc
pop
adc
fs
push
adc
push
aad
pop
(bad)
int
aad
mov
sbb
pop
xchg
push
fwait
aam
dec
bound
movs
inc
mov
in
imul
mov
sbb
test
clc
push
pop
fidiv
idiv
push
mov
sbb
sbb
mov
lock
shl
outs
aam
stos
hlt
mov
(bad)
lods
hlt
int
pop
aad
test
mov
xchg
or
fwait
aas
xor
xor
sbb
jle
xor
push
lea
int3
xor
add
mov
dec
imul
mov
das
(bad)
pop
sub
mov
push
push
addr16
and
in
adc
push
pop
push
aam
retf
jns
cmp
adc
pushf
(bad)
pushf
mov
js
push
mov
jo
jno
xchg
sahf
lea
icebp
lock
std
jmp
cwde
aam
gs
repnz
mov
nop
mov
xchg
sub
lahf
add
jge
inc
mov
fnsave
int3
dec
into
cmp
mov
lds
sbb
retf
popf
xchg
cmc
fwait
push
imul
pop
inc
mov
adc
mov
ss
(bad)
or
bound
retf
sub
sbb
ss
cmp
fidivr
jno
inc
dec
fdiv
or
aam
pushf
mov
push
mov
pop
sub
retf
inc
sub
pop
test
adc
aam
hlt
sbb
pop
out
xrelease
pop
xor
push
fwait
or
call
mov
cmp
dec
sbb
stos
stos
mov
push
pop
pop
dec
(bad)
mov
xchg
inc
adc
mov
hlt
call
xchg
pop
inc
iret
cmp
pop
gs
cmp
jl
mov
sahf
ret
ins
sbb
mov
add
sub
cld
call
pop
push
lea
jno
xchg
jecxz
inc
aam
addr16
dec
xchg
enter
sbb
jb
cmp
dec
add
cmps
aad
xchg
je
jb
shl
shr
push
aaa
inc
xchg
push
mov
jmp
sbb
and
imul
outs
pop
add
mov
outs
fldcw
lods
pop
movs
stc
sub
sbb
and
(bad)
push
xlat
xchg
jmp
mov
dec
add
mov
mul
outs
fld
(bad)
jno
mov
out
ss
rol
and
sbb
adc
add
and
sbb
fdivr
add
add
jae
xchg
arpl
js
imul
mov
adc
shl
movs
leave
xchg
mov
fidivr
mov
lods
(bad)
jmp
test
xlat
shl
ds
push
sub
jae
adc
add
mov
pop
dec
fxch
inc
mov
xchg
adc
mov
ss
pushf
(bad)
je
jl
pop
mov
push
sahf
lock
inc
out
in
dec
mov
dec
leave
mov
jg
sub
sbb
xchg
xchg
sub
cdq
add
push
mov
jbe
pop
xchg
dec
cli
jl
inc
push
jbe
adc
call
pop
and
xchg
jnp
lahf
sbb
stos
fild
mov
hlt
lds
fistp
loopne
mov
push
loop
sub
sbb
pop
mov
or
retf
mov
movs
adc
jl
mov
pushf
jg
or
add
or
and
in
ins
sub
pop
scas
add
cmp
push
add
out
ins
sar
aas
cwde
sbb
xor
dec
xlat
loopne
sub
lods
xor
pushf
cwde
rcr
xor
adc
push
jnp
mov
dec
mov
xor
lods
frstor
mov
mov
stos
test
repz
pushf
cdq
xor
shr
fdivr
adc
imul
xchg
adc
push
xor
or
xchg
cdq
out
jg
fsubr
push
rcr
push
adc
mov
or
xor
pop
lahf
or
mov
ja
test
iret
jge
cs
sbb
(bad)
aas
sbb
fmul
jbe
fcomp
call
xchg
outs
jbe
xchg
mov
packssdw
inc
xchg
jmp
xchg
shl
mov
cmp
lahf
daa
push
push
xchg
xchg
mov
mov
test
sub
mov
dec
inc
int3
jb
xchg
jmp
retf
xchg
adc
stos
mov
mov
mov
jl
push
sub
mov
sub
inc
push
sub
(bad)
xor
retf
das
or
nop
outs
add
sahf
(bad)
mov
ret
cli
or
sbb
rol
shl
push
push
jmp
mov
sahf
imul
jo
lahf
jecxz
mov
hlt
pusha
lods
or
leave
cld
mov
sub
mov
lods
mov
push
sub
push
xchg
shl
popa
mov
sub
inc
sahf
dec
adc
daa
push
mov
dec
mov
dec
xor
jecxz
test
inc
pop
je
lea
xchg
int
push
push
sbb
jbe
and
xor
rcr
xor
xor
mov
mov
or
add
dec
jecxz
mov
ins
mov
jmp
mov
int3
dec
dec
shl
pusha
(bad)
je
int
mov
sub
mov
jmp
lock
sub
fwait
mov
dec
xchg
mov
ret
pop
div
aam
pop
mov
push
xchg
inc
push
push
inc
xchg
push
fimul
out
shr
mov
cmps
std
adc
push
(bad)
xchg
stc
cld
(bad)
cmp
out
popa
fisubr
ja
sub
ret
xchg
shl
push
mov
and
adc
and
push
pop
mov
pop
adc
mov
cmp
xchg
dec
jecxz
lods
jo
mov
and
lods
mov
mov
mov
daa
mov
je
movs
xchg
inc
jge
sub
adc
mov
imul
aad
int
xchg
bound
inc
outs
test
imul
xchg
(bad)
cmc
repz
xchg
push
bound
push
mov
xor
outs
dec
mov
je
jnp
loope
add
call
fist
mov
sti
stc
pop
jbe
pop
mov
je
pop
mov
mov
gs
jbe
lods
xor
mov
xchg
aas
adc
add
shl
outs
fsubr
test
xor
addr16
lods
call
cmp
adc
into
ins
xor
pop
adc
adc
mov
imul
test
or
lods
bound
adc
lods
inc
lahf
push
pop
hlt
leave
cli
fucomp
hlt
xchg
jmp
mov
push
or
jmp
and
sub
fcmove
enter
in
add
je
pop
mov
cmp
imul
or
xlat
jns
xchg
mov
lahf
(bad)
pop
jns
mov
out
sub
enter
or
adc
dec
mov
pushf
push
out
loope
pop
pop
vcvtdq2pd
add
mov
sub
or
pop
cmc
dec
add
mov
cmp
and
jnp
mov
add
inc
das
mov
mov
add
pop
mov
xchg
cpuid
in
ins
pop
mov
inc
jnp
rep
xor
mov
cmp
cmp
and
push
sahf
gs
int3
into
outs
je
jmp
mov
(bad)
out
and
cs
inc
and
(bad)
jb
icebp
or
popf
add
and
jne
mov
iret
pop
mov
sub
jle
retf
xchg
or
inc
ret
xchg
add
inc
retf
push
sub
shl
scas
test
popf
cmps
pop
scas
xlat
push
je
mov
xchg
sti
fbstp
ins
out
jbe
int3
pop
call
fidiv
lds
jp
xchg
sbb
shl
dec
push
mov
ret
test
lahf
cmc
dec
push
je
mov
push
xor
data16
xchg
mov
jne
lods
jbe
(bad)
js
jg
cmps
lods
push
cld
sub
mov
aas
mov
push
mov
lahf
xor
sbb
jp
and
xlat
int
in
sbb
xor
test
push
(bad)
fisubr
mov
inc
inc
xor
xchg
mov
popf
enter
sub
jecxz
popa
push
mov
enter
mov
aad
mov
inc
ins
int
shl
adc
mov
cli
or
lods
stos
mov
jmp
shl
or
shl
neg
loopne
dec
jns
rol
push
cmp
xchg
fimul
fwait
inc
jo
jge
scas
mov
fsub
or
repz
lods
dec
cdq
jnp
push
dec
pop
and
mov
addr16
and
scas
aad
add
mov
jne
push
or
call
loope
icebp
scas
mov
int
inc
inc
push
mov
call
sar
retf
jnp
test
nop
xor
pusha
in
xlat
push
popa
push
jns
in
lea
pop
ins
cmp
jle
mov
aam
sahf
mov
daa
sahf
gs
xchg
xor
mov
xchg
cmp
jle
lds
mov
dec
or
(bad)
mov
les
push
xor
or
or
mov
ins
mov
aad
shl
js
stos
retf
cdq
cmp
mov
or
adc
pop
jg
or
adc
mov
push
aaa
add
loopne
je
scas
inc
xor
ds
cld
retf
push
pushf
dec
arpl
leave
add
fsub
push
jns
push
mov
mov
pop
inc
ins
retf
ja
inc
and
jecxz
jecxz
mov
mov
fist
(bad)
adc
cmp
stc
dec
add
mov
push
lds
into
mov
lahf
call
sub
sahf
sbb
jb
push
add
push
mov
pop
mov
inc
iret
outs
ja
dec
test
xor
sub
daa
cs
popf
(bad)
fldenv
in
fs
push
push
push
mov
nop
push
mov
cmps
xor
inc
sub
ss
pop
add
bound
icebp
test
aad
mov
test
sub
push
ret
sbb
popf
std
imul
je
adc
gs
xlat
mov
cld
jo
or
dec
pop
fwait
(bad)
arpl
inc
xchg
stos
mov
es
ins
add
mov
daa
push
or
mov
shl
mov
inc
lock
lods
call
xchg
enter
lahf
repnz
adc
fld
in
sub
mov
aad
add
rcr
sar
adc
inc
setb
mov
enter
inc
test
cld
jg
xchg
pop
or
xor
cmp
jno
xor
aam
int3
dec
mov
adc
ds
cmc
push
cld
sahf
jp
addr16
and
push
mov
xor
jae
leave
cmp
dec
(bad)
js
mov
cmp
mov
jne
xor
jne
rcl
pop
xchg
mov
mov
and
in
je
and
aad
pop
test
adc
mov
mov
lock
and
xchg
loop
pop
fldenv
(bad)
out
jno
and
xor
mov
pushf
aam
outs
(bad)
adc
sbb
and
imul
sahf
mov
out
push
jno
out
cdq
imul
mov
cs
cmp
jle
ror
in
xor
push
les
out
and
sub
push
aad
pop
nop
push
and
fist
js
add
or
mov
js
pop
pop
push
cwde
pushf
mov
fwait
xlat
push
test
add
mov
jmp
js
mov
mov
(bad)
cmp
or
cdq
mov
in
jecxz
xchg
scas
pop
mov
lods
lahf
(bad)
cmp
mov
rol
and
shl
fdiv
into
jle
sub
push
pop
sbb
dec
in
es
(bad)
cmp
mov
lods
or
aas
mov
shl
pop
mov
shl
adc
mov
and
bound
lahf
mov
sub
mov
xchg
pop
push
(bad)
iret
sbb
jg
test
mul
cs
inc
cmc
jl
and
sbb
jb
rcr
pop
std
xchg
leave
push
xchg
sbb
inc
aad
cmp
lods
push
scas
lods
test
loope
outs
and
gs
lds
jbe
cmp
pushf
mov
pop
xor
push
jl
iret
push
inc
(bad)
icebp
xchg
into
xchg
ja
pop
mov
inc
fmul
xchg
stos
cmp
inc
xchg
sub
add
movaps
pop
mov
xor
rcr
test
cwde
addr16
hlt
aam
dec
ss
idiv
inc
lea
rcr
mov
and
jg
nop
inc
jmp
pop
out
imul
lods
add
dec
adc
iret
jmp
pop
imul
rcr
sub
dec
push
les
sub
std
push
pop
sbb
sbb
lahf
retf
ret
fcomp
inc
push
lds
mov
cmps
push
clc
ja
xchg
not
pop
inc
aas
mul
cmp
mov
cmp
ja
mov
popa
adc
ja
inc
inc
cmc
cmp
icebp
inc
cmps
xchg
jg
mov
pop
mov
xor
jg
push
xchg
in
or
sub
xchg
retf
imul
out
stos
sub
sbb
add
popf
aas
push
jne
xor
adc
push
gs
sbb
pusha
test
add
popf
scas
push
cmp
shr
pop
(bad)
sbb
dec
out
ja
and
adc
add
iret
push
test
test
inc
je
xor
pop
inc
(bad)
dec
jnp
xchg
mov
ret
shl
out
enter
stos
push
mov
pop
push
in
add
ja
loop
push
cmp
sti
aas
push
dec
sub
jmp
loop
push
pop
xchg
mov
mov
popa
in
and
mov
out
push
ds
scas
push
push
sub
je
test
jle
pop
shl
and
mov
dec
mov
dec
mov
pushf
arpl
pop
and
or
leave
lods
ss
push
test
ss
pop
push
pop
and
jmp
cwde
pop
cmp
jmp
push
js
pop
mov
jae
push
dec
pop
loop
dec
js
loope
pushf
fisttp
popf
add
adc
push
fbstp
inc
pop
xor
push
sbb
sbb
aas
pop
cmc
std
dec
dec
js
std
cmp
ret
adc
and
mov
imul
mov
daa
fisubr
ret
cmp
push
movq
rol
mov
sahf
and
sub
push
ja
pop
dec
scas
add
bound
jb
adc
cmc
mov
nop
mov
hlt
fwait
and
sub
mov
outs
pop
mov
stos
imul
int
jnp
or
xchg
nop
or
sahf
fstp
lods
fimul
ins
cmp
mov
mov
and
mov
pop
mov
sar
jbe
mov
mov
adc
pop
and
stc
call
hlt
addr16
adc
jbe
ins
adc
retf
(bad)
sbb
pop
addr16
or
mov
xlat
pop
loop
scas
outs
xchg
fadd
(bad)
jnp
inc
inc
test
cmps
imul
cwde
mov
cs
shr
push
retf
test
sbb
pop
jg
pop
xor
mov
jmp
fcmovne
xor
sbb
hlt
mov
stos
js
mov
pushf
clc
sbb
outs
xabort
cwde
adc
cmp
mov
cmp
or
jae
cmp
gs
or
scas
jo
or
fdiv
pop
fcmovb
adc
lea
test
jg
adc
aam
xor
jae
push
mov
sub
mov
push
mov
sub
or
rcl
push
cdq
in
sbb
inc
xor
xchg
or
ror
sbb
stos
lea
mov
mov
push
or
dec
mov
in
test
jne
push
fwait
lea
and
ror
ss
mov
retf
dec
or
mov
aaa
add
mov
fmul
test
mov
in
data16
pop
lds
inc
jmp
xchg
call
in
cld
xchg
outs
iret
mov
adc
push
cmp
mov
icebp
push
cmp
dec
xor
jnp
shl
movs
call
mov
cdq
outs
leave
sub
or
sbb
push
jbe
scas
mov
jnp
nop
or
push
xor
pop
pop
fcomp
sub
mov
nop
ret
inc
mov
int3
jle
mov
add
fidiv
rol
mov
sbb
aas
add
lock
mov
xchg
mov
test
xchg
jmp
mov
shr
jne
xchg
mov
dec
test
dec
and
add
cdq
adc
dec
addr16
call
push
(bad)
loop
movs
rcl
rol
dec
aam
sbb
ds
pop
jecxz
movs
mov
xchg
and
paddsw
xor
xor
outs
dec
or
fild
fiadd
mov
pop
sub
das
mov
not
and
shl
xchg
loop
mov
bound
les
xchg
cmps
cld
jl
cmps
xchg
out
push
mov
addr16
jnp
stos
mov
ror
fiadd
xor
mov
ins
pop
xchg
mov
mov
icebp
jbe
pop
xor
aas
or
daa
repnz
inc
sbb
ret
push
or
lahf
inc
cmp
cmp
leave
xor
sar
jle
dec
mov
stos
cmc
and
cmp
in
jp
rcr
dec
cmp
popa
inc
sub
and
sub
and
cmp
pop
sub
inc
cdq
data16
push
aaa
mov
mov
cld
mov
xor
lods
dec
out
push
push
ja
sub
repz
pop
sbb
and
gs
mov
dec
shl
xchg
cli
sbb
mov
mov
inc
inc
mov
test
jo
dec
xchg
sbb
mov
adc
xor
fwait
rcl
or
mov
mov
or
or
sub
sub
test
jl
mov
mov
std
cwde
xchg
jb
ret
mov
dec
imul
push
test
pushf
int3
inc
mov
xor
jnp
fcom
test
jp
sub
and
das
scas
adc
std
pop
mov
mov
inc
mov
shr
mov
mov
test
mov
push
push
pop
sbb
dec
jl
jno
jmp
sbb
mov
xor
mov
pushf
sbb
loopne
mov
mov
jno
icebp
scas
rcl
mov
cmps
dec
(bad)
icebp
xor
idiv
arpl
sub
mov
dec
ret
and
pop
stos
test
clc
push
add
sub
mov
aam
test
out
inc
movs
adc
xor
loop
cmps
dec
nop
sbb
mov
and
and
les
cmp
outs
xchg
xchg
fldcw
sub
jmp
es
dec
jne
sbb
cmps
jle
in
aam
loope
push
enter
xor
hlt
pop
mov
pop
mov
ds
push
or
(bad)
sar
fstp
outs
mov
test
sbb
ja
xchg
xchg
scas
pop
add
mov
pop
or
mov
jge
int3
sub
jl
out
xchg
cmp
sub
je
fnstsw
dec
pop
retf
loopne
popa
dec
call
cmp
repnz
adc
cmp
mov
aas
sbb
aam
pop
test
sbb
pop
mov
test
xor
jo
or
cwde
into
das
pop
push
gs
les
cwde
fbld
jbe
lods
mov
pushf
aaa
je
xor
inc
bound
push
jbe
shl
leave
adc
sar
hlt
pusha
out
pop
out
pop
cmp
jnp
jno
out
jecxz
dec
sub
ret
ins
pop
icebp
mov
loopne
out
int3
clc
sbb
jmp
xor
sahf
(bad)
mov
dec
sahf
into
mov
or
and
dec
ins
adc
dec
std
push
push
(bad)
lea
mov
scas
enter
movs
mov
mov
or
pop
shr
movs
int
sub
sbb
data16
jne
(bad)
imul
ds
add
mov
cmps
scas
sbb
mov
into
jp
dec
popa
lea
out
dec
xor
rcl
adc
pop
jo
test
xor
adc
repz
push
call
pop
xor
mov
xchg
jecxz
xchg
dec
mov
sahf
popa
mov
dec
test
int
inc
push
inc
xor
jmp
ret
mov
jae
pop
cdq
inc
test
outs
inc
cmp
push
or
jne
ret
sar
pop
test
dec
into
and
jmp
mov
xchg
cmp
stos
dec
and
push
outs
mov
jno
add
push
add
or
(bad)
adc
mov
shl
mov
out
ins
mov
hlt
stos
lds
sbb
inc
lock
iret
mov
imul
xor
pop
sbb
mov
adc
and
test
xchg
call
sub
pop
ins
lods
movs
icebp
ja
fisubr
add
xchg
cld
push
out
pop
mov
jno
xchg
outs
daa
fxtract
jb
push
ret
jecxz
inc
dec
scas
cmp
jle
stos
inc
xor
mov
vpaddw
mov
mov
add
xchg
outs
push
ret
sahf
mov
dec
xchg
and
dec
retf
jo
test
cmp
lods
or
pop
repnz
push
int
lea
movs
int3
cmps
mov
push
test
jnp
ja
inc
lods
gs
aaa
dec
push
rcr
and
test
mov
(bad)
jmp
push
jnp
push
adc
sub
hlt
mov
test
inc
lock
aad
iret
push
mov
dec
inc
lods
sub
js
mov
push
mov
pop
push
shl
fstp
sar
push
add
push
repnz
xchg
int3
inc
mov
movs
je
push
mov
ds
mov
in
fcomp
ret
(bad)
ret
scas
jo
cmps
pop
in
popf
adc
clc
test
cmp
sbb
cmp
or
pop
or
les
lahf
loopne
xchg
add
iret
jl
popf
ret
lods
sub
dec
aad
add
xchg
xchg
pop
stos
arpl
pop
rcr
pop
push
bnd
(bad)
xchg
leave
cmp
adc
add
mov
sbb
inc
sub
rol
push
mov
test
cmp
in
frstor
or
int
cwde
push
fmul
sub
jno
push
movs
pop
hlt
xor
mov
movs
sbb
and
imul
or
xlat
(bad)
or
stos
and
jns
ret
xor
(bad)
je
mov
pop
ins
jp
mov
(bad)
stos
sbb
rol
fwait
mov
hlt
push
dec
ret
cmp
inc
mov
xor
dec
mov
dec
mov
icebp
dec
jp
mov
or
pop
sub
dec
mov
je
push
(bad)
aad
popf
jl
sbb
xchg
mov
jne
mov
adc
push
dec
les
out
fisub
pop
mov
ret
cmp
xor
pop
stos
push
jae
fbld
cld
push
xor
movs
add
ins
and
jb
leave
jae
add
mov
jo
leave
add
(bad)
retf
or
push
shl
ja
lahf
aam
mov
mov
mov
fst
rcl
mov
cmp
ds
mov
adc
mov
cdq
push
mov
imul
enter
ins
test
add
jmp
push
(bad)
in
xor
mov
jecxz
or
adc
jns
sbb
neg
out
xchg
and
pop
mov
jo
push
inc
shl
cwde
popf
addr16
scas
into
iret
dec
cmp
mov
mov
xor
into
enter
mov
movs
xor
ret
or
gs
ss
adc
mov
mov
daa
mov
cmp
jmp
sbb
movs
out
jo
jp
and
push
fstp
push
push
pop
jg
mov
ror
fidiv
add
loop
adc
xchg
clc
pop
push
out
loop
in
mov
mov
arpl
pop
(bad)
jb
or
dec
adc
movs
(bad)
add
and
repnz
sub
push
cli
jle
mov
ror
(bad)
jbe
add
pop
hlt
xor
cmps
repnz
add
add
pop
adc
leave
or
dec
fcmovnu
jb
or
dec
xor
mov
and
push
xlat
adc
sbb
push
sbb
mov
into
cmps
ins
jns
call
adc
into
and
pusha
push
jl
fs
das
fist
adc
mov
(bad)
jbe
pop
lods
cmps
mov
rol
call
mov
mov
push
mov
mov
mov
js
sbb
nop
mov
and
les
cs
mov
(bad)
outs
xchg
mov
scas
ret
sub
add
xchg
test
stc
jo
or
xchg
push
fst
mov
lods
test
std
dec
js
test
pop
mov
out
xchg
shr
into
xor
sti
pop
add
jge
add
sbb
mov
stos
adc
xchg
in
cdq
add
pop
dec
jae
xchg
xchg
or
push
sahf
jns
mov
dec
test
mov
ror
sub
jmp
sbb
nop
int3
rol
push
shl
pop
adc
sub
jg
xlat
push
mov
sbb
(bad)
sbb
mov
jnp
dec
shl
jbe
jns
xchg
addr16
jmp
(bad)
push
jae
xchg
xchg
mov
ror
jbe
jns
jp
push
mov
sar
adc
mov
xlat
popf
je
sub
sub
jl
sbb
sbb
dec
sbb
or
pop
and
aaa
jo
adc
imul
call
ins
mov
inc
push
outs
lahf
jns
test
mov
dec
mov
mov
sar
push
je
dec
sub
or
or
shl
mov
jns
xlat
addr16
mov
mov
mov
xchg
xchg
xchg
rcr
cmp
lahf
jns
test
xor
addr16
enter
je
mov
xor
retf
leave
pop
lahf
ret
lds
lahf
jns
test
pushf
test
shl
mov
push
je
mov
ins
mov
xchg
push
pop
test
sahf
(bad)
(bad)
sbb
sbb
pop
leave
test
cli
movs
outs
mov
sar
push
mov
cmps
or
inc
sbb
sbb
fcmove
test
jp
inc
mov
sar
rcl
mov
stos
sub
sub
cmp
sbb
sbb
dec
sbb
ret
pop
and
jg
fld
movs
or
imul
lea
paddusw
nop
mov
and
les
mov
mov
popf
add
push
push
cmc
jecxz
push
add
fnsave
mov
mov
mov
ins
jbe
push
les
out
and
lea
mov
mov
mov
pop
add
dec
or
lds
push
cmp
ret
add
into
cmp
mov
into
mov
cli
into
mov
or
push
scas
repz
fisub
pop
fwait
mov
xor
jb
push
loop
push
imul
dec
or
fcmovnbe
neg
xchg
stos
push
and
(bad)
adc
inc
das
push
aaa
mov
xchg
imul
adc
test
fbld
jne
pop
bound
imul
imul
hlt
dec
cmps
push
jge
jmp
cs
dec
gs
pop
sbb
jo
imul
jns
cmp
stos
or
mov
aad
mov
sub
fdivr
fisttp
xchg
push
call
mov
adc
and
loopne
pop
mov
cmp
push
cmp
aam
xchg
ret
push
xchg
nop
xchg
ror
stos
outs
je
loopne
inc
mov
and
clc
jecxz
ds
movs
pop
(bad)
jbe
pusha
add
out
popa
(bad)
jmp
jns
fidiv
mov
aas
cdq
push
scas
push
pop
lea
pop
rol
lods
xchg
in
retf
pop
(bad)
push
test
mov
or
mov
sbb
outs
retf
pushf
lds
push
mov
ins
sub
or
xchg
lahf
dec
(bad)
sbb
lods
inc
cdq
adc
inc
pop
popf
adc
pusha
repz
(bad)
rol
(bad)
aam
lods
stos
mov
aam
pop
cmc
lods
inc
cdq
add
mov
popf
pushf
pop
mov
mov
dec
jge
pop
adc
call
jge
cli
imul
outs
xor
mov
cdq
mov
lock
loop
sub
mov
popf
adc
popf
and
mov
je
aas
dec
repz
add
xchg
xchg
pop
adc
std
adc
pop
fnstenv
inc
popf
xchg
or
sub
mov
xor
adc
clc
rcr
inc
xchg
cli
add
cld
jne
fiadd
lods
push
retf
cmp
test
(bad)
enter
cmp
and
sub
shl
mov
daa
jecxz
and
adc
movs
cmp
add
xor
js
pushf
mov
mov
inc
into
shr
xchg
es
mov
fs
mov
rcl
lods
inc
dec
ss
out
sub
fnstenv
xchg
or
cwde
ins
mov
and
lds
inc
pop
mov
pop
mov
daa
mov
cmp
jnp
sbb
push
jecxz
cmc
mov
push
mov
sub
fimul
aam
pop
mov
pop
icebp
aaa
dec
mov
iret
pop
pop
imul
add
imul
das
adc
pop
inc
cmps
and
fs
dec
shr
push
push
aad
aad
mov
mov
rol
sbb
jo
daa
loopne
xchg
and
pop
push
or
and
arpl
adc
test
push
or
sbb
(bad)
popa
xchg
push
cs
mov
jne
addr16
inc
dec
aaa
fisub
fidiv
mov
add
aam
mov
cmp
mov
ss
fstp
ret
ret
and
mov
adc
push
and
pop
fs
repnz
dec
jmp
rol
sbb
movs
xchg
mov
and
dec
add
in
cmp
inc
test
mov
gs
inc
or
jno
or
jmp
mov
pop
jmp
mov
rol
inc
jle
push
call
fadd
cli
or
sbb
adc
jg
leave
push
push
cmps
repz
lods
jo
push
sbb
lahf
sbb
addr16
sbb
hlt
mov
test
add
adc
pop
xor
xlat
iret
loop
call
lods
cwde
(bad)
repz
ss
sahf
sub
xchg
rcr
rcr
add
pop
or
fbld
cmp
sbb
aam
enter
sbb
cmp
inc
vpmacsdql
inc
xor
or
add
mov
dec
sbb
sbb
lods
mov
jne
sub
ret
push
sbb
leave
pusha
xlat
xchg
pop
add
(bad)
xchg
data16
xchg
popf
aaa
imul
(bad)
pop
sbb
jns
mov
mov
pminub
pop
inc
pop
mov
(bad)
adc
loopne
inc
push
push
pop
cmp
mov
cld
outs
lods
test
inc
icebp
ins
cmp
mov
ja
arpl
xchg
add
jbe
shl
or
in
mov
imul
xlat
sub
xchg
dec
rcl
mov
mov
adc
jmp
idiv
into
sar
mov
push
pop
vminsd
sub
xchg
push
adc
cld
add
cwde
jbe
lea
outs
popf
addr16
shl
adc
push
cmp
js
test
daa
sbb
ret
sbb
cmps
or
sar
push
iret
out
jg
shl
push
dec
and
dec
arpl
fnstcw
mov
adc
nop
or
cmps
dec
jecxz
les
mov
or
imul
push
std
pop
ins
int3
or
popf
arpl
adc
mov
push
popa
and
or
sbb
jb
rcl
jne
mov
in
push
and
or
jns
mov
mov
cmp
clc
add
push
loope
push
imul
lea
adc
pop
mov
jge
stc
je
popf
push
aam
add
mov
movs
mov
data16
and
adc
rol
stc
ins
popa
popf
(bad)
mov
and
xchg
sbb
jns
mov
mov
and
mov
jns
xor
adc
out
and
and
adc
xchg
out
xor
or
add
enter
cmp
inc
lea
dec
pop
xchg
add
fadd
or
push
pop
mov
xlat
aad
sbb
aam
(bad)
iret
fwait
loope
repnz
mov
pop
popa
cmp
xor
sub
mov
or
cmc
(bad)
jns
mov
or
pop
rep
out
mov
fnstenv
cmp
imul
mov
dec
cmc
xor
mov
or
sbb
imul
dec
xor
inc
out
(bad)
dec
popa
iret
mov
jmp
cmp
add
dec
fmul
inc
addr16
(bad)
in
and
pop
(bad)
xchg
daa
mov
jae
mov
(bad)
add
into
movs
fistp
cmp
(bad)
arpl
push
popf
cmp
rcl
mov
es
add
jmp
sbb
pop
nop
aad
stc
push
ins
xchg
cmp
push
iret
loopne
test
add
pop
mov
or
mov
mov
fnsave
lods
push
jne
xchg
sbb
popf
clc
dec
ins
push
mov
pop
cld
mov
mov
je
lock
pop
das
mov
mov
mov
clc
icebp
dec
sti
(bad)
xor
xchg
add
jno
jne
sahf
(bad)
out
stc
test
mov
and
sti
and
push
push
mov
or
ja
loope
push
das
xor
push
pop
sbb
jns
and
cmps
call
sar
lock
cmp
xchg
inc
mov
ja
iret
sub
outs
div
stos
fmul
jge
ins
cmp
in
ret
xlat
and
pop
mov
dec
leave
test
das
cwde
aaa
das
sbb
mov
mov
sti
xor
xchg
sbb
cmps
add
cdq
push
jge
pop
outs
shl
retf
pop
or
add
rol
aas
jo
sbb
pop
push
and
push
mov
and
mov
std
xor
out
outs
adc
jnp
push
rol
push
adc
pop
(bad)
push
sti
inc
mov
sbb
push
test
push
outs
jecxz
ucomiss
rol
xchg
cdq
adc
dec
cmc
in
ror
jne
dec
sub
jg
(bad)
pusha
mov
cmc
adc
pop
xor
sbb
arpl
pop
cdq
into
lods
jnp
test
xor
push
call
mov
sti
mov
mov
mov
inc
(bad)
sbb
aad
push
pop
add
out
bound
inc
bswap
cdq
hlt
retf
push
sti
cmp
inc
mov
jae
pop
imul
ret
xor
push
dec
push
shr
adc
pop
and
sbb
lods
(bad)
jns
jecxz
dec
jg
and
adc
loop
nop
cmp
loopne
xor
rol
dec
int3
mov
lahf
xchg
pop
(bad)
jmp
or
loopne
pop
dec
into
jb
leave
push
xchg
scas
ret
adc
fmul
dec
or
test
cmc
stos
sbb
mov
inc
cs
sub
add
outs
jae
fldcw
or
sub
jg
fwait
pop
addr16
(bad)
ins
test
ja
add
scas
aam
jbe
adc
jmp
mov
fs
lods
sub
sar
mov
lods
rcl
mov
cli
mov
push
aaa
std
push
test
and
test
cmp
bnd
scas
jmp
xchg
xor
adc
fcmovbe
shr
fist
cld
jmp
and
rol
or
(bad)
mov
sbb
out
mov
gs
jae
clc
pop
inc
dec
mov
rcr
leave
jo
sbb
outs
sahf
rcr
loopne
aad
mov
xchg
je
pop
inc
iret
xchg
dec
addr16
mov
mov
stos
and
and
adc
inc
push
and
sub
add
mov
inc
jbe
inc
nop
mov
xor
xor
hlt
mov
and
iret
cmps
test
jnp
jbe
ins
into
xor
or
lds
adc
ss
popf
fstp
mov
pop
popa
fdivr
mov
mov
icebp
in
mov
int
push
ins
ds
dec
clc
sbb
mov
hlt
cs
pop
jae
or
aam
jecxz
add
inc
sub
sahf
adc
ret
test
in
outs
cmp
dec
fstp
jg
lahf
jae
adc
push
out
xor
and
and
enter
jns
add
or
rcr
repz
mov
push
jae
stc
fwait
xor
imul
fcomp
retf
arpl
push
push
int3
jmp
test
mov
cmp
test
lock
inc
scas
pop
mov
cld
xchg
mov
or
adc
(bad)
sub
je
sub
enter
push
rol
mov
adc
mov
mov
(bad)
cwde
(bad)
stc
lea
cmp
add
or
or
idiv
test
xchg
jb
sbb
cwde
jmp
(bad)
sub
icebp
push
js
std
outs
call
int
xchg
jmp
imul
push
(bad)
nop
popa
mov
loope
clc
imul
sub
dec
int
mov
in
fist
shr
ret
int
test
jl
sub
(bad)
rol
jbe
daa
add
(bad)
sub
push
shl
test
aam
xchg
fiadd
or
les
pop
adc
xor
sbb
aad
jmp
sahf
push
cmp
scas
into
mov
sub
add
mov
mov
dec
mov
cmp
mov
clc
fs
mov
out
mov
sub
xchg
push
cmp
iret
lea
pop
lds
push
pop
push
sub
lea
mov
mov
ret
lea
xchg
movs
sub
adc
and
lods
fadd
or
movs
js
cmp
in
inc
mov
pop
cmp
pop
mov
jnp
into
mov
mov
addr16
adc
rcl
dec
sbb
and
adc
sub
shr
push
frstpm(287
pop
mov
in
inc
add
iret
inc
lods
pop
rol
xor
sbb
fbld
dec
sub
ss
inc
push
rcl
xor
cmps
test
(bad)
push
je
adc
xor
inc
ins
adc
add
loopne
arpl
mov
(bad)
push
cli
adc
fnstsw
dec
pop
out
xor
into
sub
dec
lea
pop
mov
xor
ja
cmps
fild
inc
adc
sub
sbb
lods
sbb
push
mov
adc
daa
cwde
and
mov
xor
sahf
les
call
cmp
mov
jle
push
sub
adc
pusha
dec
(bad)
movs
dec
ss
mov
mov
mov
aas
gs
xchg
outs
fadd
aam
hlt
ds
push
add
mov
dec
jmp
loopne
or
and
or
loopne
dec
test
mov
out
int
ds
icebp
xchg
out
dec
or
outs
lea
int3
cmp
sbb
retf
dec
arpl
addr16
fcmovbe
fcom
lahf
jae
test
jle
pop
add
add
loope
fimul
call
and
mov
leave
xor
inc
loope
pop
aam
sbb
dec
xor
adc
clc
cmp
add
(bad)
jl
dec
psubq
fnstcw
dec
(bad)
into
pop
xchg
cli
xchg
pusha
test
fistp
sub
or
jne
add
imul
and
ins
or
push
sub
xor
xor
test
adc
loope
xor
adc
enter
nop
mov
add
div
or
ins
sbb
call
dec
cmp
pusha
push
and
pusha
pop
mov
push
ins
pop
call
test
clc
xchg
int3
sti
aad
jno
cmp
sub
xchg
xor
pop
nop
cmp
aas
sub
pop
shl
xchg
or
ror
repz
scas
dec
outs
mov
xlat
pop
(bad)
jmp
dec
mov
mov
arpl
adc
mov
lods
std
(bad)
sbb
test
xor
sahf
push
ret
das
movs
int3
out
cmc
push
sbb
jo
mov
aas
daa
mov
inc
xchg
pop
mov
adc
stos
inc
pop
cld
call
test
js
mov
pop
je
adc
arpl
jne
adc
push
mov
xchg
jecxz
or
push
sub
or
dec
sbb
mov
sar
adc
inc
cs
sbb
pop
xchg
lock
jmp
dec
xor
mov
sbb
sbb
in
xchg
mov
mov
xchg
dec
vpshuflw
pusha
out
arpl
jae
sub
push
stc
or
aaa
mov
cmp
rcl
ins
add
pop
bound
jl
add
dec
or
(bad)
cmc
jne
mov
mov
or
jl
and
cmp
dec
and
or
jl
arpl
cmps
cli
fsub
xor
or
push
mov
cld
xchg
shl
(bad)
loopne
cmps
or
cmp
mov
into
sub
sbb
jmp
sahf
arpl
pop
scas
jle
leave
or
mov
jmp
xor
push
xchg
pop
mov
mov
mov
fldcw
call
jmp
mov
push
inc
fxch
dec
adc
or
fidiv
or
xor
hlt
cwde
loope
jno
push
push
push
call
jmp
mov
into
loop
pop
fsubr
cmp
inc
fdivr
in
fiadd
push
adc
pop
push
or
aad
dec
ins
movs
lods
pop
xchg
jae
add
cmp
fcom
push
test
call
mov
out
dec
fadd
mov
mov
xchg
add
and
fcomip
fld
pop
cmp
into
test
movs
jbe
xlat
sub
push
inc
adc
stos
pop
pop
std
pop
adc
ja
add
(bad)
out
cmc
(bad)
add
and
cmps
jg
into
inc
pop
sub
inc
pop
cmp
xchg
iret
mov
or
out
cmc
jge
and
xchg
sub
sub
das
push
xor
cmp
mov
pop
nop
movs
push
fs
mov
add
xchg
push
sub
pop
and
retf
mov
pop
and
add
ins
xchg
test
add
fld
outs
in
retf
add
mov
sti
cs
(bad)
xor
cmp
add
std
adc
(bad)
cmp
mov
mov
imul
arpl
in
jnp
lock
(bad)
mov
sbb
sub
jbe
sbb
je
aad
out
in
adc
enter
mov
pop
jb
push
mov
add
xor
ja
scas
xchg
jl
jnp
push
(bad)
es
(bad)
ret
mov
mov
xchg
lahf
adc
sub
(bad)
push
mov
out
sub
ins
into
sti
inc
outs
xchg
jmp
popa
out
mov
loope
sub
pop
dec
cmp
adc
test
je
mov
pop
in
cmps
mov
mov
ret
pop
test
scas
in
mov
outs
int
fisubr
mov
rol
je
mov
pusha
test
mov
xchg
mov
call
int3
mov
movs
cmp
push
push
or
sub
mov
lds
jge
xor
out
lahf
cmps
into
lock
es
cmc
inc
push
push
adc
adc
or
push
fiadd
inc
pop
cmp
int
xor
pop
shl
pop
jns
lahf
push
sar
fadd
bound
adc
ja
nop
imul
les
mov
gs
int3
mov
cmc
repnz
lahf
push
shr
imul
(bad)
cs
xchg
pop
in
jmp
cld
and
movs
sub
jge
and
sar
stos
in
jno
add
and
mov
loope
std
sbb
or
xchg
fwait
mov
and
dec
int3
lgs
mov
sbb
test
or
repz
sti
push
add
sbb
inc
and
addr16
pop
je
or
(bad)
(bad)
fmul
and
xchg
pop
lods
aas
call
xchg
push
sbb
retf
icebp
aaa
ret
rol
fsubp
sub
in
mov
add
mov
and
jbe
iret
mov
inc
cmp
aad
mov
pop
gs
(bad)
mov
sbb
mov
je
xor
mov
stos
add
shl
adc
xor
jmp
mov
mov
mov
cmp
mov
xchg
mov
loop
mov
les
ret
cmc
adc
push
jno
jbe
pop
cmc
jle
hlt
mov
mov
test
mov
in
dec
enter
cmp
mov
(bad)
sbb
xchg
stos
adc
sbb
mov
sbb
jge
mov
xchg
inc
pop
cmp
ret
in
sbb
pushf
arpl
std
pushf
stc
mov
iret
movs
nop
sbb
repnz
sti
add
or
jno
out
cmp
cwde
mov
loope
jne
arpl
mov
mov
adc
xchg
mov
aas
sub
addr16
fld
fld
or
jge
dec
in
xchg
mov
push
inc
dec
test
xchg
and
xchg
sbb
clc
jne
hlt
push
xchg
adc
dec
xor
(bad)
stos
loope
ja
mov
add
or
repnz
pop
int3
test
push
jmp
(bad)
clc
out
push
ret
push
jo
adc
and
iret
xchg
cmps
mov
xchg
adc
mov
adc
dec
mov
or
and
enter
xchg
sbb
sbb
out
scas
loopne
xchg
sub
lock
frstor
dec
jae
xor
xor
sbb
dec
xor
add
sub
xor
out
or
or
sbb
dec
rol
(bad)
mov
push
fs
in
ficom
or
test
lock
or
fiadd
jne
lahf
test
mov
(bad)
adc
pop
cwde
push
popf
jmp
add
mov
xchg
pop
pushf
test
push
test
ret
ficomp
fsub
dec
shl
add
mov
shl
ror
ins
clc
push
jl
(bad)
dec
rcl
push
or
jae
and
adc
inc
push
rol
push
adc
clc
sub
or
sar
push
pop
dec
xor
sub
pusha
cld
test
ins
mov
rcl
into
push
pop
mov
cmp
jmp
cmps
mov
mov
mov
jne
jl
lods
cli
and
mov
sub
ds
push
es
dec
mov
sub
leave
sbb
mov
add
inc
or
retf
sub
add
shl
icebp
adc
inc
mov
push
cmps
fld
mov
push
xchg
mov
je
sahf
imul
mov
xor
mov
and
arpl
xchg
fnsave
int3
jne
pop
idiv
pop
push
add
pop
andnps
mov
in
sub
ins
mov
les
xchg
call
adc
mov
int3
adc
dec
mov
data16
or
cmp
daa
sub
sbb
and
jp
fcomp
out
clc
mov
xchg
repz
out
daa
into
lods
in
or
mov
sub
rcr
repnz
repz
adc
mov
mov
rcl
pop
add
or
test
inc
pop
push
cmc
test
jo
jae
nop
xchg
add
pop
rol
mov
adc
mov
adc
add
into
xchg
out
mov
xchg
jns
sahf
sbb
and
sahf
iret
xchg
(bad)
sahf
int
pop
add
push
arpl
test
dec
nop
test
movs
push
pop
in
push
mov
mov
push
stos
rcr
mov
cmp
xor
cdq
push
xchg
aas
pop
(bad)
xchg
push
mov
cdq
iret
in
inc
sti
sbb
push
jge
sbb
test
dec
icebp
inc
std
mov
imul
or
mov
xchg
bound
and
in
xchg
(bad)
fidiv
aas
add
js
jp
pop
movs
mov
lea
lods
pusha
jmp
or
mov
scas
jae
mov
das
push
sahf
daa
cs
xor
aad
xor
cmp
push
sbb
in
push
dec
cmp
mov
cwde
and
aad
xchg
xchg
inc
test
inc
pop
jns
daa
push
ins
dec
sub
popa
xchg
xor
(bad)
movs
scas
xchg
ror
xlat
in
push
adc
sub
addr16
jo
adc
fmul
adc
push
shl
call
int3
ret
loopne
loope
cmp
or
xchg
in
adc
lds
push
inc
imul
lea
test
jne
xchg
and
shl
jle
sub
(bad)
pop
and
and
jp
js
mov
repnz
push
popa
push
mov
retf
pop
mov
arpl
popf
cmp
je
outs
sbb
fdivr
out
xor
pop
ret
clc
(bad)
fs
retf
neg
call
cmp
adc
push
arpl
pop
add
cmp
inc
sub
push
or
sub
dec
push
(bad)
frstor
sub
das
dec
mov
xchg
sub
adc
ss
mov
inc
pop
pop
enter
adc
mov
dec
in
mov
lahf
enter
jb
dec
dec
pop
push
sahf
retf
dec
aad
inc
stc
pop
cmp
mul
and
mov
imul
aas
xchg
arpl
cmp
rol
cmp
or
sbb
data16
inc
mov
scas
add
in
dec
loopne
sub
adc
pop
push
jl
hlt
ja
cmp
cmps
push
pusha
or
ss
test
mov
sub
dec
and
push
sub
mov
push
push
lea
aad
dec
jo
cmps
arpl
xor
jae
and
and
out
sbb
cli
xchg
adc
jae
xchg
shr
xlat
sbb
xor
push
sahf
or
mov
in
or
mov
jne
(bad)
push
js
cmp
inc
lock
dec
mov
mov
mov
lods
scas
push
js
xor
int3
je
mov
scas
sbb
lock
jge
pop
dec
inc
sahf
or
je
aas
movs
jo
jo
mov
dec
pop
xor
and
jge
mov
jg
push
pusha
(bad)
push
dec
cdq
xchg
mov
bound
jne
shr
xchg
xchg
mov
xor
jl
sub
mov
xor
test
xor
xchg
sbb
cmp
xchg
int3
imul
ins
repnz
inc
rol
xchg
imul
push
mov
sbb
je
aaa
inc
push
push
pop
xchg
inc
fbstp
ja
(bad)
sbb
pop
cmp
sub
mov
mov
loope
ja
pop
lods
nop
push
jmpw
jg
pop
movs
arpl
inc
std
sbb
xchg
add
adc
mov
loope
mov
mov
mov
jecxz
jp
stc
inc
sti
rcr
mov
es
sbb
mov
call
ror
sbb
or
jp
jecxz
aad
ds
cwde
int
pop
add
ja
ficom
xchg
jbe
scas
sar
cmps
scas
repz
lea
mov
mov
jg
fidivr
mov
push
mov
stos
xchg
stos
xor
and
jne
mov
ror
pusha
addr16
add
jbe
mov
xchg
sub
mov
add
add
add
xor
inc
movs
stos
mov
pop
dec
repnz
cmovl
cmc
aad
pop
into
lds
fidiv
jb
push
sub
in
push
pop
sub
mov
mov
retf
xchg
sub
inc
xor
sbb
jb
das
pop
jmp
ja
out
sbb
xchg
punpckhwd
push
sbb
loopne
neg
and
pop
fcomp
jo
sti
fs
mov
das
push
js
jl
iret
ret
imul
adc
pop
xchg
stc
jge
frstor
imul
push
jnp
test
pop
push
iret
pop
mov
mov
gs
les
push
mov
dec
dec
xchg
rol
xchg
pop
pop
sahf
(bad)
std
sbb
dec
ja
inc
sbb
(bad)
lock
sahf
mov
ffreep
and
jb
jno
loope
cmps
mov
adc
mov
test
sub
xchg
dec
or
sub
pop
cmp
sbb
xchg
xchg
or
xchg
data16
enter
mov
jl
adc
mov
push
push
repnz
data16
add
mov
not
sub
jne
xor
pop
not
ror
scas
xchg
jae
cmps
mov
test
pop
loopne
push
lods
(bad)
out
call
push
or
js
xchg
dec
push
(bad)
jg
pop
dec
jae
xlat
cwde
pop
stos
aas
dec
fnsave
mov
cmps
repnz
jecxz
imul
fild
enter
aas
pop
sub
fs
and
adc
add
mov
mov
mov
icebp
push
or
(bad)
fld
rol
pop
leave
je
pop
dec
test
cmc
pop
je
pop
cli
sub
imul
test
ror
imul
stos
ss
inc
mov
and
test
sbb
xor
xor
stos
arpl
or
xor
sbb
test
pop
dec
shl
test
frstor
sbb
arpl
mov
sub
enter
or
ds
adc
adc
call
inc
lods
pop
adc
clc
mov
mov
xchg
ja
ss
inc
adc
loopne
pop
jne
pop
(bad)
retf
mov
pop
inc
ins
mov
cmp
shl
dec
(bad)
pop
lods
cdq
test
xchg
loop
int
clc
xchg
jmp
retf
or
pop
loopne
xor
in
fs
mov
xor
daa
jnp
ret
jecxz
fadd
cmp
mov
int
push
neg
test
addr16
movs
sbb
ins
in
arpl
test
dec
gs
mov
sbb
jecxz
push
mov
in
or
fdivp
out
mov
sbb
test
cmp
mov
mov
test
bound
iret
push
idiv
outs
ins
loope
and
sub
arpl
xor
imul
and
fidiv
inc
or
push
mov
push
lock
adc
or
adc
mov
cld
movs
mov
mov
outs
add
jbe
pushf
rol
and
jle
nop
loope
jno
pop
mov
nop
mov
xchg
into
lea
gs
scas
xlat
cmps
(bad)
je
sub
mov
mov
popf
shl
out
fistp
mov
and
jo
fldenv
jae
jns
dec
mov
cld
in
sub
dec
call
fsubr
fbld
mov
arpl
inc
cdq
jbe
retf
cmps
stos
mov
sub
add
aaa
sbb
push
in
(bad)
rcl
push
mov
adc
mov
adc
mov
xor
aad
data16
mov
out
loop
ror
rol
dec
add
cmc
ret
push
popf
add
pop
jge
rcl
ja
pop
mul
inc
push
cmp
push
jo
sbb
std
jno
dec
xchg
dec
popa
adc
daa
retf
push
test
ss
retf
mov
or
inc
dec
sti
and
popf
add
mov
mov
jp
sub
addr16
pushf
cdq
mov
adc
lea
jns
pop
pop
jne
lods
push
xchg
xchg
sub
pop
stos
pop
inc
cmp
aaa
pushf
inc
scas
into
mov
cmps
fisub
sub
cmp
into
cs
fcmovnb
in
addr16
sahf
mov
sub
retf
jle
or
sar
adc
pop
mov
dec
fsubr
cvtdq2ps
mov
xor
dec
nop
inc
pop
ret
bound
in
inc
mov
mov
aam
outs
jge
or
sti
out
mov
das
ins
inc
shl
outs
ds
inc
xchg
cmp
jg
jle
or
adc
push
hlt
ins
inc
mov
int3
or
shl
(bad)
rcr
loope
push
dec
cmp
xchg
popf
push
imul
push
xchg
add
jne
shr
shl
retf
fs
fmul
pop
cdq
sub
adc
cdq
xchg
fcomp
pop
pop
jns
je
pop
mov
jae
popf
repz
fsubr
xor
sub
push
out
sub
mov
ja
add
mov
jl
and
gs
fs
or
jbe
ss
push
pushf
pop
mov
push
mov
mov
iret
ins
and
aaa
cmps
pop
pop
cwde
mov
sub
dec
cmp
ror
pop
sbb
lahf
mov
movs
test
fnstenv
out
retf
and
xor
adc
push
in
(bad)
jo
push
mov
dec
sub
scas
loope
push
sahf
loopne
add
mov
push
loopne
imul
std
lea
mov
pop
in
test
pushf
mov
jo
inc
sbb
add
bound
xchg
pop
aam
jle
ja
and
mov
push
xor
mov
jne
mov
fninit
addr16
dec
push
mov
sbb
dec
cwde
addr16
icebp
jle
sar
mov
sbb
dec
stc
les
les
lea
lods
sub
mov
popa
inc
ja
int3
mov
mov
sbb
rol
stos
or
out
sub
test
jae
mov
ja
pop
cmp
cmp
xchg
xor
xor
outs
imul
in
test
popa
mov
ins
aam
pop
ret
mov
jne
js
iret
pusha
mov
jne
push
std
adc
push
inc
shl
stc
dec
dec
push
sbb
push
pop
sub
push
test
cmc
lea
mov
mov
push
mov
jno
jne
push
add
dec
sub
pop
in
mov
sar
div
add
sbb
add
jno
sbb
jb
ror
out
mov
mov
xor
or
rcr
scas
mov
retf
enter
mov
push
mov
out
dec
jne
loopne
push
rol
loop
lds
hlt
sub
pusha
xor
xchg
jno
push
or
ret
mov
pop
dec
sub
mov
sbb
out
call
mov
jne
sub
xchg
xchg
addr16
jb
push
pop
xor
jb
jns
mov
jmp
pop
out
rol
mov
fnstenv
or
aam
and
jne
push
pusha
mov
xchg
dec
mov
or
ss
mov
jecxz
or
jnp
stos
imul
not
mov
jp
retf
outs
sbb
jmp
or
mov
pop
or
adc
mov
add
movs
test
adc
fcomp
push
cmp
mov
jae
mov
dec
ins
dec
pop
adc
and
mov
xchg
mov
out
xchg
fld
idiv
cmp
mov
sub
jb
adc
aas
cmp
jmp
mov
lahf
or
jns
sub
sar
inc
add
pop
rcl
cmp
fiadd
addr16
inc
aad
outs
cmp
mov
daa
scas
push
jge
mov
cmps
outs
adc
jae
xchg
xchg
cmps
ins
mov
and
inc
ret
push
mov
pop
mov
pop
push
adc
fist
popf
mov
mov
sub
sbb
sub
int
stos
imul
or
fs
retf
cs
mov
push
xor
lods
dec
fistp
jae
push
jg
(bad)
jp
push
int
mov
mov
push
push
and
pop
ret
xor
adc
out
dec
out
nop
dec
pop
cmc
adc
cwde
fsub
dec
mov
(bad)
jle
(bad)
cmp
aad
mov
fstp
aas
sahf
mov
ins
popa
movs
push
mov
and
in
fist
mov
imul
mov
jl
dec
not
(bad)
xchg
fs
shl
cwde
jge
mov
xchg
mov
and
pop
mov
cs
xchg
pusha
fidivr
mov
imul
cmp
or
mov
int3
mov
mov
xor
movs
cdq
call
inc
sahf
pop
sbb
aaa
cmp
rcl
fldcw
pop
rol
clc
xchg
sbb
adc
push
xchg
push
lods
pop
xor
call
int3
or
xchg
arpl
dec
cmp
cmc
cmp
jae
fwait
jecxz
add
lahf
gs
fimul
sbb
mov
mov
inc
jno
adc
movs
stos
xor
retf
adc
pop
int
fwait
test
jae
xchg
fcom
xor
out
or
fsubr
mov
xchg
popa
sbb
or
jno
mov
dec
jae
jns
sbb
or
das
cmp
stos
and
mov
leave
into
js
mov
pop
loop
pop
loop
inc
sbb
mov
pop
imul
push
pop
loop
mov
(bad)
in
mov
out
dec
aad
out
dec
mov
lods
pop
int3
mov
pop
dec
ins
fist
mov
fdivr
jmp
inc
retf
mov
fistp
call
nop
popa
cmp
cld
iret
inc
lds
sub
pop
iret
add
sub
mov
cmp
xor
(bad)
adc
cmps
ss
scas
frstor
adc
outs
jo
xchg
ret
push
jp
cmp
push
retf
sub
(bad)
sub
cmp
sahf
aad
adc
sub
mov
aad
aad
stos
shl
into
ja
dec
pop
xchg
aam
rol
pop
pop
inc
cdq
ss
cwde
rcr
pop
sub
bound
xor
pusha
mov
leave
ins
movs
xor
call
cmp
add
cmp
mov
fdiv
shl
shr
xchg
in
add
sub
mov
xor
lods
mov
scas
mov
mov
mov
mov
fucom
in
sbb
int3
arpl
cmp
push
jbe
(bad)
inc
xor
jns
gs
into
sub
or
sbb
imul
pop
dec
or
arpl
mov
call
xor
sub
test
in
sti
icebp
ds
ins
pop
or
sar
inc
aam
cmps
jae
xor
or
pop
pcmpgtd
jne
mov
adc
xchg
shl
or
inc
and
or
mov
dec
shr
pop
ret
adc
xchg
xor
inc
inc
and
and
xchg
or
arpl
lods
mov
push
fisttp
sbb
mov
in
mov
fucomp
loop
xchg
mov
pop
inc
xchg
pop
mov
and
movs
std
dec
mov
xchg
and
idiv
cmp
inc
push
sub
fisubr
addr16
xor
fild
sbb
pop
loopne
fnstsw
fbld
pop
retf
je
arpl
sub
(bad)
jb
shl
ja
adc
inc
mov
xor
out
iret
push
dec
fistp
push
mov
push
pushf
stos
mov
mov
aas
push
ret
jno
push
and
(bad)
and
pop
push
mov
or
aam
cld
jo
lods
and
push
sti
std
dec
movs
int
sub
dec
das
lahf
mov
(bad)
mov
call
jne
pop
test
xchg
xchg
push
sub
fnsave
inc
jno
lea
cwde
push
mov
out
ja
neg
jl
dec
mov
fwait
(bad)
mov
or
icebp
jne
pop
push
fucomi
or
pop
pusha
cmc
push
add
mov
cmp
mov
(bad)
jo
push
fsubp
jle
mov
lahf
addr16
and
xchg
mul
outs
mov
or
test
div
popf
sbb
jmp
mov
loopne
mov
xchg
dec
cmp
pop
aad
ret
adc
mov
xor
dec
rcl
mov
sar
cs
outs
rcr
or
test
adc
(bad)
and
popf
rol
add
xchg
(bad)
idiv
mov
inc
or
mov
not
xor
sbb
scas
mov
je
xor
sub
cmp
jl
sbb
jae
mov
cs
pop
push
fstp
push
pop
push
retf
lea
(bad)
sbb
and
sbb
pop
dec
jb
jecxz
xchg
add
mov
mov
xor
mov
sub
rcl
mov
sub
lahf
fdiv
xchg
cmp
jl
push
sbb
ret
lods
pop
std
lods
out
scas
push
pop
inc
push
jmp
je
not
pusha
pop
clc
nop
xor
mov
inc
cs
or
imul
push
arpl
sbb
es
mov
push
cmp
js
(bad)
jno
mov
mov
movs
and
jge
or
mov
jle
cmps
jae
xlat
inc
push
mov
xor
push
xchg
mov
jl
push
(bad)
pop
dec
mov
push
xchg
aas
nop
or
push
pop
(bad)
pushf
sub
ret
stc
jmp
fst
pop
jo
pusha
hlt
movs
add
xchg
pop
jl
icebp
jbe
fistp
push
packuswb
test
pusha
test
test
sbb
imul
sub
ror
mov
inc
cmp
fisub
jle
dec
lds
(bad)
or
mov
cdq
adc
sti
xchg
sbb
xlat
mov
inc
and
outs
pop
mov
xor
test
lods
dec
int
xor
mov
out
sbb
jnp
mov
outs
mov
adc
xchg
xor
js
ret
add
adc
fwait
mul
pop
sub
stos
int3
jns
push
sub
sahf
ja
mov
ret
mov
mov
sbb
fsubr
addr16
cmp
jge
sbb
sbb
mov
or
xchg
xchg
inc
mov
inc
push
hlt
mov
push
cmps
sub
(bad)
sbb
sbb
sbb
push
ins
mov
jmp
mov
dec
imul
sub
mov
sub
sub
scas
ror
ficom
scas
ror
mov
shr
pop
xchg
aad
iret
xchg
jno
(bad)
mov
sbb
addr16
ret
in
stos
jne
jmp
push
mov
pop
lahf
push
add
test
adc
lds
push
or
popa
adc
jno
leave
ja
mov
setge
jecxz
cdq
(bad)
mov
pop
enter
sub
test
jecxz
and
ins
jno
mov
mov
push
or
jg
cmp
xchg
aam
sub
test
in
nop
push
xor
xchg
and
popf
imul
in
xchg
mov
mov
push
and
and
xchg
hlt
xor
add
inc
or
xor
push
jne
inc
mov
inc
and
sub
aaa
retf
test
inc
ret
dec
and
mov
dec
pop
mov
jle
fdiv
or
stc
mov
pop
cmp
push
add
sub
leave
xchg
xchg
and
jne
or
pop
imul
rcr
mov
adc
int
ins
rcl
jno
shl
jns
push
fstp
mov
mov
mov
sbb
sub
or
mov
cdq
int
pop
xchg
jl
into
jle
push
xchg
push
jl
je
mov
dec
push
adc
(bad)
mov
and
xchg
(bad)
test
inc
or
add
or
cli
adc
sbb
(bad)
std
mov
xchg
scas
popf
cmp
ins
dec
sub
dec
jmp
in
cmp
nop
adc
or
push
jbe
ja
push
sbb
xchg
fistp
retf
(bad)
sbb
pcmpeqd
and
scas
adc
adc
and
jae
mov
pop
pushf
push
mov
popf
push
shr
cmp
je
sub
movs
push
adc
mov
xlat
mov
test
add
outs
div
xlat
sbb
jae
ins
lods
stos
xlat
ss
jge
push
and
xlat
pop
dec
jge
lods
and
xchg
or
dec
js
sbb
add
int3
cmp
loope
xor
dec
mov
dec
push
push
fs
leave
int
push
mov
dec
or
test
pop
hlt
stc
xchg
hlt
arpl
hlt
jecxz
call
fisttp
rcl
cmp
inc
sti
dec
push
and
test
mov
out
test
out
fdiv
and
mov
shl
mov
stos
ja
mov
mov
sub
jb
mov
mov
push
stc
cwde
inc
mov
sub
sub
add
lock
aam
pop
(bad)
add
and
xchg
mov
ins
inc
ret
push
push
or
jp
mov
xor
and
nop
out
jmp
jmp
push
push
adc
sahf
xor
outs
inc
jmp
mov
jp
fsubr
out
dec
xchg
mov
and
and
push
adc
inc
in
mov
stos
fldenv
icebp
lods
xchg
sbb
enter
mov
into
rcr
rol
lahf
inc
or
aas
test
sbb
mov
jge
sub
jo
shr
pop
sub
jne
xor
dec
xchg
dec
jl
pop
mov
adc
into
add
push
sbb
and
in
inc
mov
in
aaa
xor
and
dec
aad
int
jo
ins
push
sub
pop
pushf
jge
mov
push
mov
loopne
adc
aad
lea
bound
adc
mov
xor
push
sbb
push
sahf
movs
cmp
inc
das
sub
jns
les
nop
je
sub
retf
xor
pop
movs
mov
pop
movs
ins
loop
movs
jo
pop
shl
dec
pop
ret
fdiv
inc
adc
je
nop
mov
cld
retf
ins
daa
add
dec
out
leave
sbb
leave
cld
adc
imul
std
leave
lea
or
jne
dec
jae
icebp
aad
pop
cs
jp
mov
retf
jnp
jae
test
pop
jle
jns
test
jg
pop
idiv
add
jp
cmp
jle
popf
xor
loope
test
or
dec
sub
inc
cmp
xchg
(bad)
jbe
enter
cmp
imul
adc
or
or
xchg
add
add
test
data16
sub
mov
ficomp
inc
jne
and
ret
popa
mov
pop
cmps
stos
mov
xchg
rcr
inc
and
pcmpeqd
leave
adc
ds
xchg
cmc
sbb
popf
je
(bad)
icebp
and
int
adc
dec
jnp
daa
or
xlat
lock
(bad)
jmp
inc
loop
inc
pop
imul
inc
xlat
aam
in
imul
(bad)
fbld
gs
sbb
mov
sub
jp
ret
mov
xchg
jb
mov
jnp
fisub
rcl
mov
sbb
and
jns
xor
mov
cmc
or
cmp
aas
push
xchg
jnp
pop
xchg
loopne
test
mov
lods
sar
xchg
jle
mov
mov
shr
sbb
sub
aad
scas
push
in
sub
mov
inc
sbb
jne
or
or
lahf
movs
scas
push
shr
add
push
mov
pop
imul
cld
aaa
pusha
scas
fldcw
lahf
xor
inc
jae
jae
or
mov
sbb
xlat
pop
shl
or
add
sar
rcr
pop
test
jle
mov
fldpi
loopne
xchg
xchg
xor
jne
fst
and
and
sbb
mov
shl
mov
and
mov
mov
mov
pop
loope
scas
mov
inc
loopne
cld
pop
xor
sub
and
sar
js
pop
xchg
(bad)
fbld
ins
inc
in
xor
push
not
pop
je
mov
(bad)
int3
sbb
xor
out
loopne
into
push
xchg
fistp
dec
xchg
mov
cmp
xchg
inc
test
push
popf
rol
lea
movs
test
add
mov
fldenv
imul
push
dec
jne
xchg
push
jge
lds
mov
xchg
mov
dec
jl
test
fsubr
mov
repz
test
out
inc
sahf
retf
push
mov
movs
xor
or
icebp
es
cwde
dec
mov
into
inc
scas
sti
push
aaa
sbb
fcom
jg
aas
and
xchg
adc
cmp
inc
lds
sbb
adc
in
cmc
xchg
call
mov
stos
push
sti
(bad)
jno
add
ja
sahf
cwde
ret
jmp
mov
sub
lods
or
inc
jae
inc
and
push
int3
mov
push
pop
mov
dec
scas
add
cmp
imul
push
mov
ins
xchg
jge
mov
loopne
mov
lahf
and
pop
retf
fnsave
sub
clc
add
adc
outs
or
aaa
or
out
pop
shr
adc
or
dec
mov
(bad)
or
outs
mov
push
dec
cmc
pop
rol
hlt
push
nop
push
aam
call
mov
adc
xor
cwde
lods
dec
jae
dec
add
repnz
adc
fld
shl
xor
jb
mov
shl
push
test
sbb
mov
mov
add
cmp
jmp
jo
xor
popf
cwde
jle
mov
jbe
leave
data16
pop
adc
or
int3
enter
cmp
pusha
in
jg
or
mov
mov
ss
jae
pop
inc
add
inc
lea
pop
(bad)
xchg
sbb
ficomp
xor
fnstenv
mov
je
into
sub
ficom
adc
inc
mov
sar
out
cs
and
inc
fisub
in
cmp
mov
mov
sbb
and
sbb
neg
xchg
adc
push
add
sub
jb
and
pop
push
and
rcr
dec
adc
ficom
sar
iret
and
mov
push
daa
iret
enter
jae
retf
push
cmp
mov
pop
jb
ja
pop
in
pop
popf
call
mov
jl
jb
lea
pop
(bad)
mov
jnp
int
cmp
jecxz
rol
(bad)
jl
push
sub
mov
arpl
mov
sahf
daa
adc
pop
leave
es
imul
sbb
movs
lds
les
out
fs
lods
mov
loop
dec
adc
shl
pop
xlat
loop
fsub
rol
mov
jnp
mov
xchg
test
scas
and
sub
adc
xor
add
js
mov
dec
adc
test
jns
das
add
cwde
mov
push
or
add
shr
test
xchg
out
shl
arpl
xor
outs
fisubr
popf
sub
push
jbe
out
pop
das
cwde
lods
inc
mul
mov
lods
inc
shl
loop
pop
pop
shl
mov
push
xchg
sbb
sub
and
push
or
add
jb
ins
not
inc
inc
stos
push
xor
test
adc
pop
jns
dec
mov
imul
inc
mov
pusha
sub
cmp
mov
inc
repnz
and
hlt
inc
dec
int
fmul
in
ret
sbb
ror
es
int
mov
cmp
mov
(bad)
mov
mov
xor
xor
dec
mov
sbb
pop
addr16
dec
loop
aam
pop
jae
cs
pop
mov
out
jne
(bad)
xlat
dec
and
fldcw
jns
push
sub
or
or
in
in
and
inc
fst
xor
jbe
mov
sar
inc
xor
push
inc
mov
outs
je
push
dec
adc
cmps
push
push
movs
add
fidiv
cdq
fsubr
rcr
mov
jbe
jne
sub
adc
and
je
mov
arpl
hlt
dec
sub
popa
jmp
dec
ret
push
mov
dec
jne
pop
mov
lods
cmp
aam
jecxz
mov
frstor
loopne
xchg
sbb
fnsave
rcl
xchg
mov
cmp
xor
pop
push
or
dec
xor
cdq
or
mov
out
pop
xchg
nop
or
sub
data16
vpunpcklbw
jae
push
cmp
xor
dec
jl
int
xor
popf
ret
fild
pop
mov
add
pusha
data16
fdiv
cmp
jbe
jmp
retf
mov
das
call
jg
pusha
les
and
lea
out
and
mov
mov
into
cmp
cwde
inc
xor
aad
push
pop
mov
sbb
(bad)
aad
dec
xchg
dec
cmp
inc
mov
retf
pop
jo
test
test
mov
les
sbb
cmps
adc
into
jecxz
into
mov
cmp
jp
jb
int3
cmp
arpl
(bad)
clc
xchg
adc
adc
inc
mov
movs
mov
adc
sbb
adc
jecxz
outs
dec
bound
cmc
rol
adc
xchg
sbb
jecxz
xor
or
movs
out
mov
dec
push
or
or
leave
fstp
xchg
jb
inc
ja
mov
mov
fs
add
ins
xchg
lods
or
ja
inc
push
je
add
int
nop
sbb
cmp
icebp
test
stc
and
sbb
adc
popa
jp
mov
pop
test
cmp
sti
jae
mov
sti
add
pop
movs
mov
cld
xlat
cmps
dec
push
dec
test
xchg
shl
push
fwait
and
push
jo
popa
sbb
push
adc
gs
cmp
mov
adc
jle
jne
aaa
xchg
neg
or
js
stos
mov
cmp
es
std
sbb
fnstcw
and
js
xchg
iret
xchg
xor
popa
outs
xchg
dec
stos
outs
ja
push
arpl
and
jno
and
fimul
adc
rcl
mov
inc
test
ss
shl
jp
push
rcr
cmp
and
jns
push
test
ins
add
nop
pop
imul
fbld
and
cmp
xor
(bad)
iret
mov
and
mov
scas
ins
jo
pop
add
clc
jb
in
gs
movs
lods
jmp
pop
movs
retf
mov
lds
inc
iret
movs
js
mov
test
bound
mov
test
mov
fwait
rcr
lock
int3
test
retf
in
push
pop
dec
or
sahf
push
(bad)
jb
stos
iret
cmp
xchg
ror
inc
loop
jle
mov
out
or
ror
pop
(bad)
cmp
push
jae
fwait
xor
xchg
push
xor
mov
je
mov
dec
mov
leave
das
fld
mov
cmp
xchg
ss
into
xlat
inc
ins
js
push
add
repnz
je
rcr
sbb
mov
and
and
mov
popf
and
ret
and
ss
push
pop
jb
out
adc
mov
test
add
(bad)
dec
push
cdq
jbe
leave
stc
inc
fist
pop
and
enter
sbb
(bad)
jmp
fsubr
adc
or
(bad)
dec
xchg
dec
test
push
jb
mov
hlt
ror
inc
inc
inc
xchg
xchg
shl
fidiv
cdq
dec
dec
ror
movs
lods
mov
cmc
fild
jae
xor
ins
pop
test
rcl
pop
or
adc
sbb
mov
jmp
ret
pushf
xchg
mov
out
jg
sbb
stos
inc
sbb
movs
fcom
and
(bad)
lods
es
mov
pop
(bad)
push
out
(bad)
repz
pop
aam
pop
sti
and
inc
cmp
aad
xor
sbb
lahf
fwait
mov
xor
dec
in
and
outs
or
add
or
out
dec
pop
adc
inc
pop
lds
sti
and
add
push
ds
test
jae
adc
inc
dec
rcr
add
call
push
jne
arpl
pop
rol
mov
test
cwde
jbe
addr16
mov
pop
and
and
dec
dec
dec
and
push
push
ins
mov
adc
jnp
xor
loop
test
mov
inc
cli
sbb
add
jmp
cmp
loopne
pop
sub
push
xchg
sub
sub
call
jge
xchg
mov
xlat
jns
mov
sbb
xor
ret
pop
js
in
lock
mov
adc
mov
mov
add
arpl
jbe
push
xchg
stos
mov
pop
lods
add
clc
mov
aas
cmp
mov
sbb
xchg
push
push
add
lods
iret
add
pusha
das
gs
xchg
add
popf
jg
std
push
xchg
cmp
cld
ins
xchg
mov
(bad)
int3
push
loop
mov
mov
inc
gs
mov
js
arpl
pop
push
fcom
inc
cmovno
mov
mov
pop
inc
cmp
jbe
add
xor
sbb
jle
in
mov
scas
sahf
jns
imul
sub
test
setnp
jecxz
jp
lods
lea
es
(bad)
cmp
adc
push
cmp
mov
mov
xor
in
sbb
test
adc
js
push
mov
sbb
shl
ret
mov
js
shl
sbb
loop
mov
xchg
fucom
pop
popf
xor
or
sub
and
fdiv
lahf
push
fcmovnu
jmp
sub
pop
or
retf
(bad)
mov
repnz
cmps
in
cmp
aam
jb
scas
iret
retf
pop
test
mov
push
lods
mov
(bad)
jno
sbb
fist
int3
aaa
dec
ds
retf
adc
xchg
cmc
lahf
fnstenv
xchg
pop
repz
bound
push
std
jle
push
cmp
clc
pusha
sub
retf
sar
imul
aam
add
jp
cmc
aad
push
jge
(bad)
add
xchg
ss
sbb
mov
and
ins
add
in
outs
loop
fidiv
fwait
pop
rol
outs
cs
xor
dec
cmps
cmp
rcr
or
dec
xlat
imul
jmp
cmps
jno
mov
add
sbb
xor
push
std
mov
xchg
jg
cmc
inc
mov
lea
push
or
xchg
cdq
out
mov
cli
or
cmps
lahf
jle
ret
xchg
mov
and
jmp
and
push
outs
xchg
sbb
iret
daa
fucomi
xchg
fisttp
jae
mov
sbb
call
xchg
lock
sbb
(bad)
scas
mov
inc
sub
test
sbb
aaa
scas
(bad)
mov
out
cld
outs
mov
daa
jne
jbe
push
or
inc
not
movs
pop
iret
push
sbb
push
push
pop
push
push
push
in
(bad)
lds
add
add
outs
jle
in
cmp
mov
ins
push
jl
or
jecxz
je
add
(bad)
bound
push
sub
sub
imul
jae
shl
inc
sar
fmul
ds
and
push
pop
dec
and
mov
xchg
aas
push
jne
mov
mov
pusha
xor
aam
jge
(bad)
ins
test
jnp
sbb
inc
xor
aaa
mov
test
mov
mov
arpl
mov
outs
js
test
lods
leave
cmp
stc
ss
xor
xchg
push
lods
or
adc
xchg
xchg
mov
pusha
into
mov
xchg
ss
sbb
arpl
pop
sbb
push
push
dec
es
js
mov
push
fdivr
mov
movs
mov
aas
lods
inc
popf
or
jo
push
adc
pop
std
ror
pop
out
movs
scas
jg
(bad)
xor
lods
push
int3
bound
lods
fisub
cld
sbb
fwait
push
lds
push
xor
addr16
ja
cmp
lds
lock
or
pop
into
test
pushf
push
leave
xchg
xchg
add
imul
call
cmp
(bad)
inc
inc
int
fsubr
icebp
les
push
scas
pop
mov
and
shl
mov
nop
push
and
ficomp
imul
pop
pop
dec
mov
inc
jle
mov
mov
mov
sub
inc
stos
mov
test
mov
cmc
in
ins
mov
sbb
push
mov
pop
inc
dec
mov
into
inc
imul
add
xor
gs
test
mov
jmp
xchg
sub
into
mov
mov
test
mov
(bad)
aam
push
fisttp
test
ja
mov
outs
pop
xchg
or
dec
pop
and
mov
aas
fsub
shl
jnp
iret
cld
lods
jno
pop
into
xchg
push
xchg
imul
lds
pusha
or
scas
dec
jns
xor
jmp
(bad)
aaa
clc
arpl
pusha
dec
add
stc
xchg
dec
cmp
mov
push
dec
mov
sar
jmp
or
test
enterw
pop
nop
pushf
test
add
mov
jl
sbb
fs
jno
leave
xchg
cld
sbb
adc
sbb
xor
inc
add
push
jbe
xchg
adc
pop
fstp
sbb
jmp
push
scas
and
ins
mov
and
push
ja
in
jb
push
enter
fisubr
stc
xchg
std
ja
ja
aas
jnp
(bad)
dec
mov
cmc
pop
(bad)
out
shl
push
or
adc
iret
int
movs
xchg
sahf
ins
dec
gs
dec
mov
(bad)
clc
cdq
sub
out
nop
xchg
cmp
cmp
(bad)
add
xchg
or
mov
or
lock
dec
jecxz
outs
fmul
or
push
jmp
pop
and
cmp
call
xchg
xor
pop
inc
add
idiv
adc
stos
or
xor
mov
cmp
je
test
push
(bad)
jbe
mov
not
fidivr
scas
xor
pop
add
add
mov
imul
mov
mov
ret
icebp
test
js
aad
and
(bad)
rcr
xlat
(bad)
fwait
dec
xor
jg
jno
popa
and
lock
inc
pop
aad
in
adc
and
mov
jb
call
xlat
outs
idiv
cwde
and
in
out
rcl
jl
jns
push
mov
xchg
add
test
lock
cmp
mov
sub
adc
gs
ja
push
inc
dec
push
shl
cdq
mov
inc
lods
dec
jne
js
dec
dec
enter
in
retf
add
pop
pop
or
lods
pop
push
test
gs
push
test
loope
cmp
shl
mov
sti
cmp
dec
push
add
push
mov
and
fwait
push
inc
xor
fst
jge
mov
or
outs
ret
cdq
add
and
xor
jne
ja
call
cmp
xor
(bad)
(bad)
sub
ret
popf
pop
dec
jb
sub
cmps
outs
mov
xchg
inc
mov
inc
sbb
fs
fisubr
fisubr
sahf
mov
ret
jmp
mov
sub
mov
aas
adc
jno
(bad)
shr
inc
fidiv
mov
imul
jge
(bad)
push
mov
fwait
(bad)
bound
mov
sbb
pop
jb
inc
nop
pop
add
ret
inc
lods
sbb
jp
push
mov
enter
push
and
mov
test
jmp
cdq
add
sub
aad
jmp
add
mov
mov
and
mov
mov
and
loopne
and
(bad)
and
xor
addr16
fdivr
cmp
pop
std
push
pusha
int3
dec
mov
daa
mov
packssdw
sub
into
push
fst
outs
dec
imul
sbb
adc
cmp
ja
sbb
cmp
outs
cdq
iret
and
jecxz
xor
or
lahf
daa
mov
push
jl
xchg
mov
mov
iret
xchg
out
pop
aas
retf
mov
(bad)
add
ins
inc
adc
dec
or
(bad)
loop
mov
or
mov
repz
dec
add
dec
jl
iret
cmp
add
gs
(bad)
jnp
pop
lds
ins
pop
dec
xchg
xor
mov
dec
cmp
mov
mov
mov
fidiv
or
sbb
inc
inc
mov
fwait
mov
dec
jo
test
movs
loop
cdq
lods
fldcw
cmp
jge
loopne
fisubr
mov
xor
test
jno
js
inc
aad
pop
dec
jle
jge
fldcw
push
arpl
xchg
pop
sahf
stc
mov
jbe
mov
out
adc
xchg
pop
jecxz
repnz
and
into
pop
pop
loope
popa
sub
int
pop
inc
sbb
push
mov
enter
popf
mov
xor
fnstcw
rcr
or
push
mov
push
pop
ja
in
mov
push
pop
adc
push
pop
mov
in
addr16
sar
scas
sbb
jl
add
aaa
mov
mov
int
(bad)
enter
icebp
pop
outs
or
and
push
(bad)
and
mov
and
jo
out
inc
or
jnp
enter
outs
adc
pop
or
rcr
sbb
xor
mov
sbb
lods
mov
(bad)
mov
inc
sar
pop
inc
dec
iret
mov
mov
bound
pop
outs
dec
inc
test
mov
test
(bad)
jo
pop
push
fld
in
add
call
xor
stos
shl
adc
ret
xor
js
dec
stos
adc
fsub
pop
iret
cmp
neg
repnz
and
adc
fwait
mov
mov
stc
mov
test
shr
jl
in
xor
lods
cmp
mov
lds
lahf
dec
les
(bad)
xor
xchg
sbb
shl
sub
lock
jmp
jo
xchg
ss
jmp
mov
test
ret
ins
sbb
inc
test
mov
push
int
mov
xor
pop
ds
xchg
sar
jecxz
icebp
mov
pop
push
arpl
mov
(bad)
stos
cwde
push
pop
sub
lea
test
xchg
adc
mov
punpckhwd
mov
out
call
xchg
pop
mov
cmc
in
mov
xchg
cmp
(bad)
mov
and
outs
into
mov
jbe
and
inc
sbb
mov
das
dec
test
push
pop
push
outs
push
retf
jbe
xchg
fld
adc
pop
dec
pushf
sub
xchg
imul
or
dec
pusha
adc
or
nop
mov
jle
call
icebp
mov
ror
sbb
(bad)
in
xor
mov
or
jle
mov
jg
test
js
int3
add
loopne
pop
ds
push
movs
mov
push
mov
sbb
cmp
stos
shl
clc
or
mov
dec
jns
into
mov
in
adc
xor
dec
dec
sub
push
add
(bad)
pushf
imul
xchg
add
dec
call
mov
stos
cdq
adc
shl
push
test
xchg
mov
rcr
mov
mov
(bad)
in
dec
into
inc
outs
(bad)
add
pop
outs
lea
mov
inc
out
js
into
dec
je
xor
addr16
xchg
jo
iret
mov
mov
cmp
test
dec
mov
pop
push
call
les
in
mov
jl
fwait
popf
jle
lock
test
mov
or
clc
dec
xchg
imul
fcomp
push
rcr
sar
int3
jb
(bad)
adc
in
loopne
jns
sbb
jae
std
popa
add
sbb
or
pop
(bad)
xchg
inc
mov
icebp
addr16
jns
or
and
jmp
xor
xor
jns
call
sti
adc
mov
pop
shl
push
fsub
sub
fsubr
xchg
pop
jb
nop
push
out
xchg
iret
mov
shl
dec
sar
lds
push
shr
mov
pop
push
mov
sti
(bad)
mov
pushf
xchg
cwde
pop
(bad)
sbb
add
test
jmp
and
sub
imul
imul
push
aam
lea
cld
adc
(bad)
dec
out
loopne
push
pop
sbb
dec
daa
add
or
sub
aas
mov
inc
jno
or
mov
ins
push
mov
std
sub
xchg
popf
mov
out
cwde
mov
arpl
in
jne
ins
xor
call
jl
xchg
int
ror
or
mov
(bad)
jmp
outs
push
nop
hlt
cmp
push
adc
adc
or
xchg
dec
xchg
fs
cdq
lock
(bad)
sahf
inc
test
dec
jae
or
std
mov
cli
shl
sbb
jl
nop
inc
xor
xor
lods
xor
shr
fdiv
sbb
sbb
mov
push
loope
mov
jge
add
in
dec
mov
inc
mov
mov
jp
data16
pusha
out
jmp
push
add
inc
stos
fdiv
popf
mov
frstor
scas
(bad)
int
out
xor
and
sbb
pushf
sar
or
xchg
dec
xchg
js
sbb
jnp
movs
addr16
loope
outs
sbb
cmp
xor
mov
neg
or
aam
ins
out
jp
test
jns
push
fs
push
mov
xchg
and
fidiv
test
mov
xchg
data16
sub
les
push
inc
lods
and
adc
retf
dec
or
aas
push
or
mov
sbb
rcl
cdq
ret
into
ret
cdq
xchg
ror
push
jge
dec
inc
lds
and
cld
arpl
jmp
repnz
dec
jg
mov
movs
repz
or
cmp
out
inc
adc
jb
cwde
dec
push
mov
popa
xchg
pushf
jg
lahf
daa
push
(bad)
and
test
xor
dec
xchg
enter
lock
loop
test
fnstcw
ja
push
xor
add
retf
jns
add
adc
hlt
and
ror
mov
mov
aam
mov
xchg
out
test
add
push
ins
mov
shr
add
jmp
in
add
pushf
mov
jbe
xlat
mov
fist
leave
(bad)
xchg
lds
xchg
jno
int
xchg
ins
rcr
mov
cmp
mov
push
cmps
dec
mov
dec
mov
xchg
xchg
imul
sahf
jo
push
inc
push
mov
xchg
bound
add
xchg
xor
movs
retf
(bad)
jl
jmp
fld
or
fiadd
push
popf
cmps
pop
or
push
test
dec
(bad)
movs
xor
push
fld
sar
add
pop
push
inc
test
into
cmp
outs
add
jecxz
push
daa
outs
jo
leave
ins
push
lea
pusha
sbb
push
jmp
jnp
xchg
popf
pop
(bad)
aam
mov
xchg
mov
push
scas
mov
test
in
daa
pop
sbb
pop
in
js
cmp
pop
sar
jg
mov
sub
sbb
outs
popa
shl
jg
stc
sub
popf
mov
jmp
cmp
xor
mov
lods
repz
jle
and
cs
jne
(bad)
cs
cmp
push
out
mov
(bad)
mov
or
inc
lock
mov
test
adc
jnp
mov
xor
jg
fdivp
hlt
popf
add
push
jns
or
cwde
fild
mov
pop
adc
mov
jne
and
rcl
mov
sub
neg
xchg
mov
jbe
push
sbb
mov
mov
mov
das
les
pop
xchg
je
movs
or
jmp
sbb
les
rol
add
xor
push
xchg
push
xor
je
dec
or
mov
aad
fdivrp
jns
push
out
mov
imul
jo
mov
pop
pusha
pop
scas
inc
aad
xor
mov
push
jne
jge
mov
sti
fwait
xor
cmp
mov
leave
push
sub
xor
int3
loop
mov
pusha
icebp
popf
jnp
lods
jbe
jmp
in
sub
pop
call
mov
mov
iret
and
(bad)
mov
scas
mov
pop
jge
cmp
std
test
add
rcr
outs
inc
inc
mov
xor
into
es
adc
xchg
mov
dec
enter
pop
mov
pop
popf
imul
test
push
pop
cmp
jp
in
rep
jne
pop
xchg
jle
inc
pop
mov
mov
imul
mov
imul
(bad)
sbb
daa
div
dec
jne
sahf
test
mov
pop
shl
clc
cmp
xor
pop
out
adc
adc
aaa
sbb
shr
mov
sub
pop
in
nop
xchg
dec
lods
sbb
sti
push
push
in
not
cmps
fwait
mov
out
stc
mov
and
out
push
lods
rcl
add
cmp
retf
pop
mov
ins
cwde
daa
stos
add
lods
cmp
pop
jno
shl
inc
ret
cmp
xchg
(bad)
es
mov
xchg
mov
xor
sub
ds
cmps
pop
ret
shl
mov
mov
lea
adc
test
add
pop
xor
fisttp
inc
(bad)
cdq
imul
out
popw
jns
mov
sahf
dec
mov
shl
add
inc
xchg
and
add
cmp
loop
iret
nop
inc
sub
dec
retf
in
xchg
mov
das
dec
fdiv
xchg
inc
(bad)
sbb
xor
ret
pushf
mov
jecxz
mov
cmc
arpl
push
jb
cmp
pop
es
(bad)
sbb
rcl
(bad)
std
(bad)
(bad)
movs
ficomp
or
adc
pop
xchg
mov
outs
inc
lea
loopne
mov
iret
push
int
mov
and
mov
and
xchg
ror
mov
icebp
fsubr
cdq
mov
sbb
sub
data16
and
xchg
push
sbb
jne
scas
xor
das
mov
es
in
pop
mov
repz
addr16
(bad)
neg
fwait
arpl
sub
adc
cli
mov
pop
scas
daa
mov
or
cli
pop
pop
rcl
pop
popf
pop
or
pop
int3
pop
lds
push
lock
js
mov
shr
mov
call
enter
xor
into
mov
int
push
xchg
rol
movs
jle
retf
mov
cmps
(bad)
cdq
iret
mov
imul
scas
push
ret
cmc
fadd
pushf
inc
jae
mov
jae
inc
popa
mov
fisubr
scas
(bad)
ret
sbb
dec
nop
pushf
push
xor
sbb
ret
mov
ret
test
jmp
mov
(bad)
mov
hlt
push
fwait
or
pop
imul
dec
stos
rcr
fldcw
outs
push
out
xchg
jno
mov
jmp
pop
inc
ror
data16
dec
sub
sti
pop
mov
out
mov
cmp
leave
xor
jno
mov
call
pushf
pcmpeqw
push
mov
jmp
sub
pushf
jb
mov
aas
call
outs
inc
retf
push
jmp
mov
movs
dec
cmc
jne
cmp
ins
adc
bnd
mov
imul
xchg
xchg
bound
push
gs
leave
fist
cli
dec
xchg
rcr
mov
jmp
jmp
lods
jns
push
sub
jb
or
mov
dec
and
mov
mov
sub
adc
les
xor
aaa
stos
pop
cs
add
nop
inc
mov
inc
or
mov
movs
addr16
retf
mov
call
adc
lahf
sbb
ror
adc
ss
imul
inc
dec
outs
mov
jmp
and
mov
inc
imul
mov
mov
es
mov
fcmovnbe
les
inc
out
dec
mov
fwait
pop
jge
test
mov
jo
imul
xchg
mov
int3
mov
ins
cmp
sti
lahf
das
sbb
inc
sahf
xchg
out
inc
push
sub
loop
mov
add
or
or
or
jbe
addr16
mov
leave
pop
ret
xor
pop
ret
iret
xchg
(bad)
retf
cmp
xchg
int
jle
imul
xor
cmp
stc
jg
mov
jb
cmp
cmp
push
sub
and
push
ror
mov
xor
movs
pop
cmp
retf
iret
lods
jbe
sahf
push
fidiv
iret
inc
shl
push
aam
std
jnp
mov
cmp
pop
push
bound
lds
mov
sub
fs
xchg
enter
mov
lock
or
popf
push
call
xchg
add
aad
or
not
in
pop
fcom
stc
retf
arpl
(bad)
pop
cmp
ins
test
js
push
js
mov
je
pop
mov
mov
imul
loopne
jb
das
mov
pop
fsub
lahf
inc
adc
or
dec
call
fisttp
jbe
mov
xlat
mov
mov
popf
xor
popa
(bad)
stc
fstp
(bad)
call
jle
(bad)
xlat
inc
lods
xchg
clc
test
jno
mov
fldln2
outs
rol
fld
fsubr
jne
sub
ret
xchg
mov
adc
jne
or
jbe
jb
xor
cmp
test
je
repz
enter
add
rcr
cmp
cld
movs
inc
mov
sti
test
mov
imul
pusha
cmps
mov
mov
pusha
adc
xchg
mov
in
mov
xchg
add
cwde
cmps
rol
push
fsub
mov
jp
sbb
fmul
(bad)
mov
rcl
mov
movs
xor
pop
adc
iret
sahf
cmps
idiv
test
jbe
lock
lds
lds
retf
outs
inc
adc
sti
sub
mov
xor
inc
mov
dec
cmp
(bad)
xor
fucom
or
in
cmps
jecxz
and
rcl
add
pop
pop
rcl
outs
int
mov
pop
inc
nop
hlt
pop
(bad)
and
xchg
ficomp
sbb
out
and
fwait
jmp
xchg
xchg
(bad)
clc
or
mov
push
inc
imul
daa
xchg
test
lods
mov
push
out
xor
aaa
push
add
push
jge
push
adc
imul
in
cmps
test
sub
movs
fisubr
lock
in
mov
frstor
jb
xchg
bnd
in
mov
mov
out
aaa
push
movs
ins
(bad)
ds
rcr
enter
cmp
(bad)
cmps
cmp
loopne
dec
sub
or
push
aas
sbb
call
xor
add
xchg
arpl
and
pop
push
(bad)
xchg
in
xchg
mov
xchg
clc
push
xchg
inc
mov
xor
sti
lods
inc
push
in
fistp
jae
scas
jo
jne
fadd
gs
in
push
outs
xchg
repnz
jnp
pop
retf
mov
and
xchg
jns
xchg
sar
outs
xchg
xor
sbb
jbe
cmps
fsubr
addr16
jle
sub
aad
mov
movs
pop
jmp
les
add
mov
jmp
cmp
xor
mov
lock
xor
mov
and
iret
xchg
xchg
popf
(bad)
xor
push
xchg
arpl
or
mov
mov
aam
jne
jge
aam
lds
shl
fcmovbe
mov
jl
and
pop
mov
out
and
xlat
pusha
or
xchg
std
or
imul
lea
pop
push
out
loopne
enter
loopne
daa
xor
xchg
aad
mov
cs
sub
push
adc
xchg
mov
aas
movs
adc
ja
movs
add
xor
or
mov
or
lods
pop
sahf
pop
adc
(bad)
(bad)
test
xchg
lahf
lds
sbb
ins
cmc
pop
push
inc
jecxz
jae
stos
sub
inc
mul
add
sub
push
add
xlat
test
or
out
inc
or
mov
popf
(bad)
out
cli
dec
mov
mov
jp
mov
cmps
ret
call
sbb
pop
mov
(bad)
popa
ficom
push
dec
jae
push
sbb
scas
pop
sub
mov
aad
pushf
hlt
or
mov
jp
xchg
das
mov
fstp
ret
cmp
stc
retf
fidiv
out
and
xchg
cmp
stc
lods
adc
in
xor
push
data16
cmp
sbb
inc
sbb
xchg
mov
xchg
pop
and
mov
xor
ret
or
adc
push
movs
push
pop
push
jge
sbb
lock
fisttp
pop
popf
lea
icebp
push
xor
movs
imul
jg
popf
sti
leave
shl
movs
retf
cmp
xlat
jae
mov
push
or
mov
retf
call
or
int3
int3
test
push
rcl
daa
nop
neg
cmp
add
ret
retf
sub
popf
pop
sub
xor
sub
(bad)
int
and
add
or
or
and
add
and
xchg
mov
aad
sbb
or
test
xchg
div
scas
xor
fstp
ins
xchg
inc
cmc
dec
or
dec
arpl
(bad)
scas
ror
fsubr
xor
sbb
push
sub
mov
(bad)
inc
push
jne
outs
shl
sub
mov
dec
movs
or
pop
test
push
sahf
mov
rcr
fist
fs
lods
mov
(bad)
cwde
cmps
xchg
cmp
and
inc
test
ss
lods
sbb
mov
dec
retf
pop
cmps
or
fisttp
sbb
fstp
cli
inc
std
rcl
adc
pop
mov
dec
fstp
dec
xchg
int3
add
pop
jmp
dec
sub
pop
add
pop
pop
fdiv
mov
fisubr
retf
jb
jp
in
(bad)
or
std
test
pop
sbb
mov
jecxz
popf
pop
jb
add
stc
add
sub
(bad)
out
or
inc
nop
sahf
mov
inc
aad
cld
push
mov
imul
sahf
(bad)
lods
pushf
sub
shl
pop
mov
lods
pop
movs
enter
popa
xor
mov
push
sbb
sub
jl
div
movs
clc
lahf
push
mov
mov
aas
in
ret
mov
jne
adc
xor
idiv
jge
int
or
call
mov
add
js
sub
stos
bound
outs
push
jmp
imul
iret
xchg
movs
(bad)
int
cmp
mov
imul
loopne
jmp
push
fistp
inc
test
fs
adc
aam
ja
inc
jmp
add
push
add
or
push
int3
jo
outs
xchg
retf
inc
or
ins
mov
jg
jne
push
ins
inc
lock
iret
repnz
mov
clc
xor
jmp
push
sub
sub
shl
or
retf
xchg
fidivr
lock
cmp
and
and
outs
jl
popf
sbb
inc
mov
push
mov
mov
inc
or
jo
push
push
test
add
mov
rcl
jle
cld
pop
shr
imul
std
(bad)
push
jp
lock
or
loop
push
retf
stc
xchg
sar
pop
and
mov
sub
add
jnp
popf
jmp
jle
fstp
mov
cmps
ror
bound
inc
mov
cmp
and
imul
lods
lock
in
int
mov
sub
(bad)
cmp
cli
xchg
mov
pop
mov
jne
cmp
push
stos
xor
push
cld
outs
ja
cmp
add
je
add
push
fs
arpl
push
inc
mov
lea
lea
jge
mov
xchg
imul
or
ins
jo
or
cmp
and
stos
adc
fnstsw
test
lock
sub
xchg
and
hlt
dec
sbb
push
int
sub
inc
inc
sub
addr16
popf
cs
movs
ins
xchg
outs
(bad)
jno
repz
jmp
fisub
push
aad
or
and
add
or
mov
enter
nop
iret
mov
or
mov
mov
je
int
xchg
fsubr
movs
xchg
mov
dec
jmp
jno
mul
add
push
inc
cmp
inc
aad
cmp
movs
mov
xchg
popa
add
mul
daa
(bad)
js
sub
mov
lea
xchg
xchg
mov
and
mov
mov
test
pop
outs
ror
inc
test
stos
shl
and
xchg
mov
popf
mov
rol
jns
adc
xchg
sub
int3
je
jne
jne
mov
(bad)
jae
mov
lea
stos
pop
add
adc
popf
and
rcr
call
test
adc
test
sar
jne
test
mov
addr16
mov
fsub
sbb
lock
cmp
fstp
js
xchg
push
shr
jne
test
adc
arpl
data16
mov
jecxz
mov
rol
test
mov
dec
in
ds
test
pop
push
test
lahf
adc
addr16
imul
stc
mov
push
sub
aaa
push
or
(bad)
cmp
xchg
or
mov
sbb
push
mov
inc
push
lds
(bad)
xchg
movs
imul
addr16
mov
rcl
mov
cmp
mov
(bad)
bound
push
mov
lods
shr
(bad)
pusha
je
mov
fcom
cmp
test
std
adc
addr16
imul
push
inc
sub
push
jne
mov
(bad)
xor
fnstenv
(bad)
repz
mov
dec
mov
lea
xchg
xchg
pop
int
cld
test
retf
jnp
jae
mov
lea
xchg
or
sbb
rcr
inc
and
rol
les
mov
fdiv
jae
mov
xchg
pop
mov
popf
sbb
test
jmp
(bad)
push
shl
mov
mov
arpl
bound
test
pop
xchg
ffree
push
pop
mov
sbb
adc
sbb
jmp
xor
and
mov
mov
jl
nop
mov
lods
ss
iret
mov
dec
add
aam
call
cld
je
or
push
stos
mov
or
nop
or
aam
inc
jb
xchg
dec
loope
pop
fs
push
test
test
jecxz
push
or
xchg
cmp
mov
ja
xchg
xor
push
data16
movs
cmp
fs
gs
loopne
and
sub
mov
mov
jl
nop
pop
packuswb
rcr
mov
pusha
push
shl
ret
mov
imul
add
xlat
out
xchg
mov
dec
bound
dec
imul
ins
mov
xchg
mov
mov
mov
in
enter
js
shr
adc
movs
jp
inc
movs
jae
dec
movs
ins
adc
movs
pop
adc
movs
push
inc
mov
repz
xchg
add
enter
stos
mov
repz
xchg
mov
ret
adc
inc
or
je
xchg
mov
int3
mov
xchg
lods
shl
dec
fldenv
push
xor
cmps
stos
cmp
fisttp
lods
popf
nop
scas
dec
jbe
jp
test
mov
xchg
fistp
addr16
mov
mov
and
mov
xor
mov
stos
inc
mov
cmp
or
call
mov
(bad)
cli
mov
lods
jle
cmc
adc
jmp
ds
test
mov
jle
pushf
gs
inc
retf
mov
dec
or
nop
in
mov
fsubr
int3
push
jp
mov
mov
imul
xor
sbb
jno
stos
jns
mov
jo
mov
jmp
ficom
(bad)
cmps
mov
or
jg
je
dec
(bad)
xlat
pop
cmp
mov
pop
cmps
scas
mov
and
or
mov
mov
shr
xchg
int
pusha
fs
inc
and
fs
xlat
lds
es
movs
push
fs
dec
jge
jno
les
in
lods
jp
inc
xchg
jns
xchg
lahf
xchg
mov
jge
add
test
add
and
cli
mov
(bad)
xor
leave
nop
js
xchg
js
mov
or
inc
fcomp
mov
xlat
pop
sub
pusha
xchg
in
or
scas
mov
stc
push
mov
popa
cmps
sub
mov
in
jne
sar
mov
xchg
shr
sbb
mov
jae
ins
pop
jle
pop
sar
mov
loope
mov
ja
fiadd
ins
icebp
fsub
sbb
sar
lea
movs
and
add
pop
fst
mov
inc
rcr
imul
push
mov
into
std
mul
dec
xor
gs
test
mov
lods
je
js
push
jmp
ror
enter
ins
xlat
mov
fsub
xor
mov
cmp
fsubr
test
mov
push
(bad)
jle
push
jno
cmps
pushf
mov
das
xchg
jo
mov
movs
pop
adc
les
mov
arpl
cmps
push
dec
sub
ins
pushf
and
inc
outs
fcmovnb
retf
test
test
or
dec
ins
add
pusha
xor
lahf
test
xor
cmp
test
sub
push
int
hlt
lods
add
mov
hlt
imul
rol
test
jae
out
imul
or
inc
fiadd
icebp
scas
fsubr
(bad)
dec
inc
movs
mov
dec
loopne
or
mov
test
pop
pusha
mov
jp
pop
jbe
xchg
inc
jbe
mov
xchg
lahf
push
mov
ja
out
xchg
or
xchg
shr
fimul
and
hlt
cmps
jmp
aas
mov
push
push
das
mov
mov
aaa
push
xor
sbb
xchg
mov
in
mov
fwait
adc
pop
in
and
jno
fadd
in
sbb
inc
inc
test
in
ret
pop
push
push
rcl
ins
add
iret
arpl
pop
je
xor
repz
xchg
sbb
and
jns
fucomip
popa
imul
into
mov
and
push
fdivr
or
push
jo
imul
sub
(bad)
xchg
mov
sbb
cmp
test
and
or
inc
out
push
mov
mov
cmps
mov
test
fistp
and
movs
aas
sub
mov
pop
iret
test
fwait
sahf
sub
lea
push
outs
mov
movs
mov
push
push
(bad)
aad
mov
int
fstp
jl
push
push
mov
inc
pop
add
mov
pushf
(bad)
mov
cmc
sbb
test
call
xlat
xchg
cdq
mov
vpunpckhqdq
xchg
movs
push
shl
(bad)
mov
pusha
mov
ja
imul
mov
fcomp
mov
icebp
adc
mov
(bad)
(bad)
cdq
jecxz
(bad)
bound
push
and
jge
adc
jmp
mov
fisttp
je
in
mov
jb
sbb
add
rol
xchg
add
pushf
cmp
test
mov
daa
jae
mov
mov
ins
pop
jmp
cmp
sub
popf
or
sub
lock
icebp
inc
mov
pusha
dec
xor
lea
add
dec
jno
dec
lods
ja
mov
inc
jne
aaa
mov
jo
xchg
out
dec
outs
lea
gs
test
push
test
inc
push
int
add
or
adc
xchg
retf
in
outs
(bad)
sahf
fbld
jae
push
popf
jo
ins
pushf
jge
shl
dec
cmp
xor
pop
mov
call
lods
lea
or
in
mov
nop
mov
jbe
lahf
jecxz
add
sbb
mov
sub
xchg
ror
push
jmp
xchg
fldenv
and
mov
int3
jp
xor
cmp
mov
aaa
inc
cmp
fwait
cmp
xchg
and
inc
sbb
xchg
js
push
inc
les
mov
mov
or
or
arpl
sub
adc
fwait
cmp
hlt
xchg
mov
and
jg
mov
add
sbb
inc
adc
cmp
push
clc
loope
pop
xor
loop
or
mov
mov
enter
or
aas
xor
push
mov
test
mov
add
push
inc
adc
popa
adc
ret
jmp
mov
int3
fldenv
ins
sub
sub
fmul
adc
(bad)
dec
js
jbe
inc
dec
pop
jmp
mov
xchg
int3
in
inc
pop
dec
dec
test
mov
cmp
sub
adc
test
and
inc
aaa
dec
daa
lea
in
push
cmp
push
test
pop
lods
mov
sbb
(bad)
jl
fld
jns
(bad)
mov
lods
call
xor
lock
add
mov
ins
sbb
shl
inc
xchg
data16
scas
or
or
inc
push
mov
andps
dec
adc
jle
mov
cmp
sub
out
shl
mov
mov
test
(bad)
mov
xchg
mov
retf
sbb
or
data16
jo
pusha
mov
adc
(bad)
loopne
adc
movs
mov
sbb
mov
imul
mov
or
add
loop
mov
or
out
das
fs
sub
xchg
(bad)
xchg
inc
nop
xchg
add
gs
int
stos
arpl
inc
push
mov
or
xchg
sub
mov
pushf
sub
cmps
sti
lea
pop
(bad)
xchg
enter
inc
(bad)
fnstcw
(bad)
push
cmp
cwde
jge
aad
add
bound
repnz
cmps
jb
jbe
cdq
mov
xor
jb
sub
gs
lahf
push
out
dec
pop
pop
xor
jmp
add
popa
shr
mov
pop
(bad)
dec
cmps
mov
or
cwde
popf
loop
in
inc
mov
mov
test
adc
add
sbb
sysenter
test
ret
into
out
fwait
repz
int
inc
fnstcw
daa
js
mov
cs
xchg
sbb
(bad)
xchg
lods
cwde
or
rol
xor
lds
xchg
ret
jb
je
mov
test
add
les
xor
inc
xor
mov
sbb
push
cld
sbb
ds
ret
xchg
jae
call
push
les
sti
loop
ds
jge
(bad)
push
pop
xor
push
das
lods
test
mov
into
inc
adc
xchg
add
xchg
and
das
fistp
jecxz
and
and
das
(bad)
fwait
xchg
mov
mov
sbb
fnstenv
xchg
and
add
das
mov
mov
das
or
(bad)
loopne
sar
lds
push
inc
pop
and
sub
mov
stos
push
mov
ins
push
out
push
dec
mov
add
lds
mov
fdivr
cmp
imul
mov
adc
popa
js
into
pop
jb
xchg
cmps
xor
cmp
lds
pop
mov
xchg
out
mov
bnd
sbb
mov
mov
in
jne
sub
xchg
or
cmp
pusha
xor
lds
xchg
pop
nop
shl
mov
dec
sub
inc
and
or
jp
call
test
jecxz
mov
outs
fisttp
ins
(bad)
(bad)
mov
mov
xor
mov
movs
add
test
repz
mov
shl
loopne
mov
push
push
in
sbb
mov
xchg
mov
fldenv
shr
test
add
cmp
inc
mov
cld
sbb
xchg
pop
out
and
mov
in
in
(bad)
sar
mov
push
loope
out
and
mov
imul
cmp
ret
stc
push
outs
rcl
cmc
mov
daa
xchg
xchg
cmps
or
(bad)
test
sbb
mov
bound
fisttp
xor
mov
arpl
cmps
fucom
(bad)
scas
and
int
inc
mov
cmps
add
jge
mov
fidivr
pop
adc
fisttp
mov
push
movs
rol
leave
(bad)
fld
lods
les
lock
lods
fstp
(bad)
jns
cwde
loop
or
and
mov
aad
dec
push
add
test
pop
or
mov
mov
pushf
lahf
and
and
movs
mov
jp
sbb
jne
rcl
es
pop
lea
add
pop
adc
ja
jg
js
rcl
mov
dec
sub
jge
pop
iret
hlt
in
(bad)
mov
stos
xchg
xor
(bad)
(bad)
div
mov
aam
sbb
or
not
int
outs
movs
mov
retf
shl
mov
lahf
les
add
sbb
sbb
aaa
leave
bound
es
mov
and
add
or
jecxz
or
push
sbb
retf
cmp
sbb
shl
xchg
xchg
pusha
sbb
xor
add
xor
adc
push
loopne
dec
push
xor
popf
push
mov
fcmovne
fst
inc
cmps
pop
arpl
mov
fisubr
jnp
xchg
pushf
mov
repz
pop
push
ds
popf
dec
sbb
mov
(bad)
fnstcw
movs
and
pop
push
adc
sbb
scas
aas
pop
sub
inc
outs
push
sahf
out
arpl
dec
jg
stos
inc
test
in
or
mov
sar
test
leave
jb
sbb
pop
shl
stc
push
dec
xor
ja
fistp
retf
push
push
popa
push
fild
out
jl
or
mov
pusha
cmp
fldenv
mov
xor
inc
fdiv
and
push
jo
xchg
in
cmp
arpl
inc
sbb
mov
cmc
mov
out
jecxz
cmps
es
inc
xchg
push
push
or
fadd
pop
dec
mov
pop
out
jne
jne
inc
lods
cmps
enter
push
cmps
sub
push
pushf
add
(bad)
pop
(bad)
fstp
or
cmp
outs
inc
lahf
push
mov
xor
xlat
adc
jne
inc
sub
in
cmc
popa
or
or
fucom
(bad)
shl
sti
dec
popa
out
popf
(bad)
jmp
cmp
push
fs
in
or
mov
arpl
repz
xor
or
mov
aaa
loop
mov
nop
iret
out
pop
nop
pop
imul
jne
add
pop
int
lds
push
cdq
jg
enter
arpl
push
push
push
or
(bad)
cld
push
ret
in
jmp
xchg
cmc
mov
push
ret
test
sbb
hlt
pop
les
lahf
cmp
xlat
and
adc
nop
sbb
(bad)
sar
rcl
fxam
pop
cwde
xchg
daa
lods
xchg
test
(bad)
xchg
and
aad
out
imul
push
and
push
jo
push
cdq
push
xor
adc
mov
cmp
nop
ins
xchg
aaa
xor
mov
cmp
sbb
ficomp
xchg
fmul
test
jg
sahf
(bad)
push
fprem
aas
push
sbb
test
adc
jg
jnp
lods
mov
mov
retf
cmp
add
mov
adc
pop
scas
bswap
mov
dec
mov
(bad)
in
jmp
mov
je
add
xchg
clc
inc
sub
les
add
mov
loope
cdq
arpl
adc
mov
or
sbb
test
test
outs
iret
push
mov
sub
dec
outs
or
movs
into
(bad)
jle
cdq
and
pop
cmc
adc
pushf
pop
pop
or
out
addr16
lods
arpl
fmulp
mov
es
mov
test
in
push
jmp
imul
jns
out
add
xor
nop
shl
jl
add
inc
cmp
gs
into
mov
xchg
ror
mov
stos
js
aaa
rcl
movaps
and
arpl
pop
jecxz
jmp
jb
mov
mov
sbb
out
outs
jl
(bad)
pop
icebp
add
out
aam
inc
data16
jmp
outs
mov
hlt
and
dec
inc
shl
stos
xchg
enter
imul
sbb
xchg
push
cwde
pop
mov
sub
out
loop
mov
fdiv
sbb
dec
mov
pop
mov
jae
jecxz
aam
out
mov
jge
lock
jae
rol
xchg
pop
leave
push
out
leave
daa
push
mov
jo
div
push
adc
sbb
push
shr
outs
(bad)
(bad)
test
jmp
dec
adc
push
sbb
push
stos
retf
mov
ds
test
push
jno
jb
add
clc
call
sbb
push
xchg
fcom
xor
adc
mov
sahf
add
or
fist
test
jl
xor
dec
outs
mov
cmps
retf
dec
mov
xor
mov
mov
pop
imul
add
mov
add
popa
pop
cmp
lahf
push
jge
cmp
gs
in
(bad)
lock
add
iret
sahf
mov
out
pop
cmps
jl
jmp
inc
mov
dec
mov
adc
xor
mov
adc
jmp
mov
(bad)
add
fsub
gs
cs
sahf
push
xlat
pop
jno
adc
add
dec
aas
ss
data16
imul
int3
in
sbb
cmps
or
cmps
ffreep
cmp
or
xchg
xchg
ins
xchg
mov
shr
ds
jge
xchg
pop
enter
dec
or
adc
mov
in
xchg
and
inc
cmp
push
jge
test
jle
ins
jnp
mov
sbb
test
push
push
mov
mov
jb
jbe
test
add
lods
push
(bad)
in
(bad)
je
imul
push
and
mov
data16
mul
cs
inc
xchg
pushf
loope
mov
iret
cwde
or
nop
xchg
icebp
ror
arpl
or
inc
aam
pop
lds
fisttp
adc
in
jmp
mov
je
(bad)
pop
inc
iret
mov
fs
or
xchg
push
stos
lock
push
pop
xchg
outs
sub
fidivr
test
mov
push
leave
pop
bound
jne
out
int
ret
jns
sbb
test
div
ja
cmp
in
adc
add
mov
mov
js
cmp
xchg
push
rol
jge
int3
lds
adc
or
ins
movs
cmp
push
cmps
in
jae
xchg
push
or
sbb
xor
and
pop
out
xchg
xlat
je
hlt
dec
scas
cmps
push
addr16
mov
pop
test
mov
int3
js
addr16
mov
repz
stc
mov
and
aam
push
mov
aas
or
nop
sbb
sbb
xor
jle
lods
dec
mov
pop
inc
out
rcl
adc
jle
lds
xlat
sbb
mov
jns
dec
dec
xchg
xor
test
or
dec
cmp
gs
mov
push
lea
popf
push
ins
xor
hlt
jg
sub
mov
sub
add
retf
mov
or
jno
fistp
std
mov
add
cmp
popf
mov
or
inc
(bad)
fcomip
cmp
or
inc
and
inc
arpl
cld
(bad)
sub
dec
xor
test
sti
pop
(bad)
std
rcr
add
jbe
dec
test
jmp
test
aam
ins
xor
ins
fidiv
movs
sub
pop
xchg
and
ja
sub
inc
sub
adc
or
les
mov
lods
lods
dec
int
push
pop
cmp
mov
lea
lea
mov
add
push
bound
adc
push
sahf
(bad)
jl
(bad)
push
das
fistp
add
nop
xchg
out
clc
push
aad
mov
fsub
or
data16
adc
das
mov
movs
mov
mov
push
push
in
dec
jle
sbb
imul
xor
punpcklbw
pop
xor
pop
ss
popa
add
xchg
jmp
imul
xchg
xlat
pop
fnsave
dec
adc
xchg
iret
lds
adc
pop
mov
push
push
xchg
lahf
test
fs
or
or
xor
dec
int
jne
leave
mov
ja
in
pop
lock
mov
in
call
dec
push
mov
xchg
xor
out
xchg
int3
mov
and
xor
sbb
es
jmp
popf
ins
stc
xchg
lea
or
mov
fwait
std
fmul
push
or
je
movs
retf
pop
es
inc
stc
mov
call
int3
push
pop
out
popf
sub
mov
dec
fidiv
neg
adc
fsub
jbe
out
jns
inc
xor
and
retf
mov
sub
and
shr
sbb
test
add
retf
xor
mov
pop
mov
dec
inc
xor
lea
dec
cli
and
pop
push
sub
out
mov
pop
cmps
fnsave
pop
ins
pusha
add
adc
(bad)
into
pop
push
fiadd
mov
add
div
mov
dec
xor
shr
jecxz
jp
loopne
lods
rol
in
cmps
cld
int
sub
mov
push
stos
cld
test
clc
cs
fidiv
sbb
lea
stos
xor
sbb
out
xor
mov
imul
idiv
inc
adc
add
retf
inc
cld
inc
addr16
adc
jl
pop
std
mov
std
add
mov
retf
cmps
jbe
fimul
fnstsw
adc
push
pushf
repnz
mov
mov
shr
int3
jmp
push
xchg
add
or
test
xor
mov
aad
int3
xor
stos
shl
xor
push
ror
arpl
or
or
fs
xor
add
retf
push
aas
je
dec
mov
(bad)
xor
add
mov
pop
jno
loop
sbb
rol
je
outs
std
imul
and
loopne
or
call
fsub
xchg
jno
cmp
fdivr
test
sub
adc
xor
lods
pop
sbb
jns
icebp
shr
or
inc
out
cmc
mov
add
xor
cs
loope
xor
aad
mov
pop
mov
daa
das
mov
mov
push
mov
popf
fstp
or
out
ja
in
mov
or
adc
cwde
mov
jbe
(bad)
mov
iret
cmc
fist
mov
mov
ret
jbe
mov
sub
je
mov
fist
scas
push
adc
mov
ss
dec
pop
sbb
call
repz
clc
aas
pop
(bad)
adc
cmps
stc
mov
pop
add
cdq
cmc
daa
lods
cmps
lahf
lds
push
push
mov
mov
test
in
(bad)
jmp
les
cs
adc
int
(bad)
cmc
fsubrp
nop
sbb
lea
or
rol
std
(bad)
outs
and
out
and
loopne
and
inc
pop
fistp
aas
(bad)
popf
mov
aad
mov
(bad)
jno
jne
rep
xor
idiv
jmp
push
fwait
int3
aad
or
mov
in
and
neg
sar
jns
in
sbb
xchg
pop
jae
je
imul
and
mov
jp
ror
(bad)
aas
adc
dec
dec
pop
or
adc
fbld
(bad)
jns
cmp
xor
movs
mov
adc
push
push
in
jl
xor
xor
pop
xchg
jge
adc
pop
test
jmp
jbe
pushf
icebp
adc
mov
inc
add
jg
cmp
stos
cmp
cmps
xchg
ss
push
mov
sub
repz
mov
push
push
push
and
mov
and
lods
xchg
retf
js
mov
add
push
out
pop
or
addr16
mov
das
data16
int3
mov
dec
int
fisubr
sbb
mov
(bad)
sub
inc
stc
aas
adc
lods
dec
jno
ins
loop
jle
pop
fwait
jle
aaa
xor
dec
pusha
mov
(bad)
lods
daa
scas
addr16
jns
jbe
cmps
push
mov
ds
pop
pop
clc
in
shr
pop
mov
add
mov
sahf
jmp
xchg
pop
into
(bad)
jns
xor
(bad)
mov
in
pusha
movs
icebp
test
mov
xchg
std
pushf
mov
or
bound
dec
addr16
ins
in
jg
xchg
int
xlat
loope
dec
cmp
sbb
out
xchg
inc
push
das
imul
jp
jl
fyl2x
xlat
das
cmp
pop
cmp
call
and
aam
mov
xor
imul
cmp
sub
add
and
or
mov
popa
or
or
fwait
imul
fcomi
packsswb
mov
mov
dec
call
push
outs
dec
sub
sub
stc
mov
ins
add
cli
cmp
xor
or
and
out
mov
pop
push
xor
jbe
ror
lock
outs
sbb
stc
sub
clc
aad
test
lds
ror
std
jns
ret
pop
mov
enter
enter
movs
cld
in
(bad)
cmp
outs
out
pop
pushf
fstp
ffree
test
mov
pop
retf
rol
lea
fcmovnu
ret
retf
mov
jns
pop
pop
add
movs
sti
sbb
inc
adc
jmp
or
gs
pop
pop
mov
xchg
(bad)
xchg
arpl
ss
lods
or
xchg
ins
shr
mov
(bad)
popa
imul
pop
inc
fwait
in
adc
add
repz
push
(bad)
out
jb
pop
sar
xchg
ins
icebp
in
jne
fldenv
shl
leave
scas
ret
js
js
enter
mov
push
lods
scas
inc
mov
inc
in
or
pop
jo
fadd
repz
jo
xor
loop
mov
in
add
outs
inc
adc
rcl
push
mov
or
(bad)
sahf
out
mov
shl
jl
rcr
jns
or
jl
inc
lahf
cmpxchg
sub
out
cmp
sub
xor
ds
push
xor
xlat
imul
imul
mov
jp
mov
mov
xchg
ds
fdiv
xchg
push
out
and
dec
sbb
nop
pop
xor
add
pop
(bad)
jle
rol
inc
std
outs
mov
sub
adc
fisttp
imul
mov
(bad)
int3
pop
xchg
mov
mov
imul
xchg
mov
push
and
dec
imul
and
xlat
xchg
add
sahf
outs
and
rcr
add
mov
ins
inc
mov
rcr
call
adc
or
lock
outs
dec
jge
dec
jnp
fiadd
bound
jmp
arpl
xchg
or
call
cwde
dec
ficom
jmp
bound
push
scas
or
ret
aas
vmovhps
sbb
icebp
cmp
out
mov
mov
adc
cmps
arpl
adc
cmps
ins
push
outs
jns
sub
or
into
iret
hlt
add
into
and
sbb
mov
call
out
pop
iret
xchg
(bad)
push
ficomp
sbb
popa
mov
pop
inc
rcl
xchg
pop
jne
psubq
mov
push
test
mov
out
shl
xchg
loop
jae
sub
sti
add
lods
in
cmc
pop
nop
mov
xchg
pusha
repnz
sbb
ja
inc
int
mov
mov
mov
dec
xchg
xchg
movs
in
sbb
(bad)
hlt
call
test
out
int
add
push
test
test
imul
(bad)
imul
sbb
add
sub
mov
adc
dec
xchg
pop
movs
sub
or
sahf
fisub
imul
aas
push
and
sbb
in
or
add
push
dec
mov
mov
adc
and
test
wrmsr
push
pop
enter
fstp
sbb
fs
mov
xor
mov
dec
addr16
or
inc
mov
ficomp
ror
mov
cmp
je
shl
jo
test
dec
in
lods
out
xchg
adc
sbb
mov
sbb
in
loopne
fadd
retf
xor
shr
mov
inc
fdivr
lea
push
cmp
xor
or
pop
inc
adc
cmp
mov
pop
ja
or
jnp
push
scas
dec
mov
imul
xor
dec
adc
mov
mov
dec
inc
cld
fistp
sbb
pop
js
test
xor
rep
fcmovne
pop
cwde
ins
rcl
push
int3
push
inc
cs
div
and
push
dec
push
mov
in
jmp
sahf
loope
je
aam
pop
inc
sar
fcomp
xchg
add
loope
and
xor
or
cmp
pop
mov
ror
gs
iret
cmps
(bad)
(bad)
(bad)
mov
cmps
cmp
je
mov
fmul
loopne
or
cmp
aaa
int3
shr
test
sub
xor
jp
pop
sub
adc
mov
mov
xchg
arpl
leave
call
adc
adc
pop
adc
xor
fdivr
cmps
repnz
or
sar
stos
leave
test
pop
shl
mov
aad
sbb
dec
push
pop
call
and
ins
ins
pop
mov
stos
and
adc
cdq
ss
imul
pop
jecxz
xchg
push
cmp
xchg
ret
mov
push
and
and
pop
js
shr
out
lahf
lock
(bad)
mov
pinsrw
push
or
cmp
and
mov
out
adc
pop
clc
jg
neg
cmps
jg
push
xchg
adc
sbb
or
in
sub
mov
xor
sub
fstp
and
imul
daa
or
mov
retf
cmp
cli
ret
xchg
add
sbb
inc
cmp
jle
test
fisttp
or
movs
test
rol
sbb
dec
mov
popf
les
dec
sub
mov
ins
std
push
in
adc
jp
sub
sub
mov
imul
xor
pop
sub
inc
mov
ret
int
retf
sub
cs
test
and
jmp
lods
ret
in
pop
dec
xchg
xchg
adc
aas
push
adc
movs
sbb
in
mov
movzx
out
or
sub
fstp
adc
gs
mov
lods
xlat
cli
push
sbb
mov
cwde
sub
int3
clc
push
(bad)
pop
dec
imul
loopne
adc
mov
push
xchg
lahf
add
into
xor
dec
and
lods
sbb
stc
inc
ja
clc
pop
xchg
aam
mov
adc
pop
mov
jecxz
es
test
or
fxch
pop
pop
test
(bad)
aad
(bad)
cmp
stos
clc
fild
enter
cdq
jnp
jno
mov
in
imul
push
rcr
and
push
sahf
adc
ins
xchg
ror
(bad)
cmc
(bad)
loop
adc
stc
pop
mov
sub
sub
sbb
loope
jge
faddp
sbb
sbb
fist
dec
cmps
enter
mov
mov
mov
or
xchg
xchg
add
out
fbstp
mov
fisub
into
mov
and
(bad)
loope
lds
inc
mov
xor
(bad)
sub
inc
or
sbb
xchg
push
inc
out
inc
fiadd
js
fisttp
xchg
(bad)
in
xor
stos
sub
mov
xchg
push
stos
add
push
(bad)
out
sub
jmp
add
aam
sbb
std
sbb
iret
loopne
mov
adc
push
gs
sub
jns
ret
inc
jge
call
xor
mul
ret
loop
jns
push
push
mov
inc
mov
mov
jnp
(bad)
(bad)
je
cmp
pop
dec
out
cld
cmp
scas
sti
or
push
(bad)
mov
cmp
cmp
push
push
pop
mov
jl
lahf
call
mov
repnz
cmp
movs
mov
sbb
pop
cmps
loope
add
scas
mov
mov
or
adc
mov
lock
mov
inc
movs
pusha
cmps
scas
scas
jo
test
mov
mov
mov
jmp
addr16
mov
sahf
lock
push
cdq
mov
xchg
dec
pop
adc
adc
sub
retf
and
popa
push
add
push
jecxz
push
cmp
in
ret
xchg
dec
stos
push
adc
mov
cmc
inc
dec
loopne
cmp
imul
xchg
fild
cmp
outs
add
or
dec
sub
pop
cwde
mov
fisttp
imul
cli
dec
movs
push
call
dec
xchg
mov
lea
xchg
jae
inc
cmp
fisubr
call
mov
mov
push
xchg
mov
popf
or
jnp
loope
inc
(bad)
cmps
pusha
fcomp
(bad)
push
outs
dec
xchg
int
push
add
inc
add
mov
mov
push
add
cmp
enter
xchg
mov
push
lahf
xchg
lods
xchg
in
arpl
jge
add
add
leave
aad
push
rcr
mov
lahf
sbb
cld
je
or
in
dec
fs
jnp
cmp
lods
prefetch
sbb
sub
pop
cli
mov
imul
test
xor
cmp
jge
test
sub
xchg
leave
icebp
lahf
jbe
out
ror
xchg
jne
dec
xchg
aam
fwait
ror
jmp
dec
or
pop
or
sbb
cwde
and
mov
js
(bad)
rol
pop
push
dec
mov
jbe
repz
pop
jle
pop
mov
push
pop
or
mov
mov
sub
in
jg
dec
ds
adc
cmps
pop
stos
and
push
jecxz
xchg
hlt
lahf
icebp
sti
data16
dec
xor
jae
xchg
pushf
xchg
lea
int3
push
inc
mov
sbb
cmps
mov
mov
(bad)
mov
test
(bad)
arpl
ja
jecxz
scas
call
xchg
jge
or
or
ss
push
mov
cli
mov
lea
push
jns
popf
fidiv
outs
hlt
(bad)
retf
sar
mov
pop
inc
push
or
xchg
inc
popa
scas
mov
mov
fldenv
jo
int
xchg
addr16
mov
rol
test
imul
mov
aas
push
xor
clc
aad
pop
or
pop
jp
mov
fnstcw
mov
aam
nop
int3
push
or
inc
jb
aam
xchg
icebp
inc
std
xor
std
jno
mov
mov
sti
loope
dec
adc
and
xchg
jo
gs
loope
push
ins
jl
xor
popf
jne
xor
adc
sub
enter
outs
adc
cmps
outs
retf
fcom
scas
pop
rcl
sub
cdq
in
and
mov
into
rcr
add
ficomp
jbe
aad
push
and
cmps
push
repz
mov
or
inc
clc
push
or
mov
test
mov
adc
xchg
add
mov
or
jecxz
aam
xor
repz
stc
jns
or
jl
push
bound
mov
movs
sub
adc
dec
or
in
out
out
rol
inc
loop
or
mov
js
push
lahf
fnsave
mov
xor
div
xchg
mov
arpl
(bad)
mov
mov
mov
jo
shl
sbb
adc
mov
shl
(bad)
mov
add
jb
outs
(bad)
aam
sbb
call
sbb
sbb
fwait
or
add
xchg
adc
popa
sbb
and
or
fisttp
or
jmp
xchg
mov
push
cmc
or
xor
xor
retf
cmp
push
cmp
mov
jl
test
in
out
leave
sub
mov
fisubr
scas
repz
xor
add
mov
pop
stos
cmp
xor
jmp
xlat
pop
pop
shr
inc
sub
adc
aaa
retf
je
pop
fisttp
out
sbb
mov
push
fisub
xchg
inc
in
lods
ds
mov
push
mov
or
out
lods
test
daa
or
jmp
data16
addr16
cmp
fdivr
add
xchg
iret
or
push
mov
(bad)
sub
dec
jae
push
lods
(bad)
jp
lock
jmp
fs
mov
adc
jne
in
and
pop
push
sbb
lock
gs
xchg
pusha
mov
fdiv
xor
int
dec
push
ret
inc
cmp
push
sub
gs
mov
xlat
arpl
mov
jnp
cmp
popf
mov
inc
(bad)
in
es
pop
out
inc
mov
or
mov
xor
out
mov
dec
xchg
jecxz
jb
xchg
fs
popa
hlt
xor
sbb
lea
ret
adc
pop
xchg
or
stos
pop
popa
dec
or
es
cwde
das
sub
je
cmps
test
gs
loopne
loopne
sar
add
jp
inc
push
ret
inc
sub
mov
xchg
mov
ror
xchg
pop
mov
pop
jecxz
push
sbb
xchg
pop
and
rcl
loopne
stos
fdiv
aaa
cmp
and
mov
clc
push
mov
xchg
dec
les
movs
cmp
aad
sub
jae
jg
fst
gs
cmp
xchg
inc
mov
xor
push
mov
mov
mov
frstor
xor
repnz
cmp
push
(bad)
repnz
arpl
fisubr
repnz
pop
fstp
push
out
sub
hlt
mov
or
ret
sbb
pop
pop
push
ja
sbb
sbb
mov
loopne
je
loop
mov
popa
mov
push
sub
mov
in
jne
aad
out
mov
lods
ja
ja
or
sbb
not
nop
in
mov
test
popa
fsubr
nop
das
xchg
gs
sbb
test
inc
xor
and
mov
je
mov
or
nop
fdiv
and
leave
cmp
(bad)
in
lods
and
mov
sub
(bad)
loop
cdq
sub
jo
xor
lods
int
mov
outs
mov
(bad)
std
test
addr16
mov
das
add
hlt
lea
cdq
sbb
retf
call
in
and
retf
cs
cmp
xor
lods
xor
mov
imul
xor
push
sbb
xchg
push
cmp
retf
(bad)
pop
xchg
fs
pushf
or
aas
(bad)
shl
imul
movs
dec
out
and
mov
push
inc
outs
test
jecxz
les
mov
xchg
jge
inc
ret
push
mov
xchg
push
sub
push
cmps
mov
icebp
scas
stos
push
dec
inc
mov
push
inc
clc
jo
pmullw
test
jl
fnstcw
sbb
rcl
repz
shr
or
or
movs
xchg
fwait
add
mov
xor
in
jge
les
cmp
shl
retf
fistp
cmc
js
xor
scas
enter
xchg
push
aas
pop
adc
xor
(bad)
sub
sbb
sub
pop
and
pop
cmp
in
lods
mov
fld
sub
mov
(bad)
cli
arpl
sbb
mov
push
fst
test
pop
fdivr
(bad)
nop
xchg
test
loop
iret
mov
call
mov
pop
adc
les
adc
dec
push
inc
cmp
idiv
sahf
sar
jae
fstp
movq
dec
push
add
mov
in
mov
pusha
and
mov
push
js
mov
dec
(bad)
fst
jnp
sbb
mov
(bad)
in
sub
mov
pcmpgtd
imul
fstp
jbe
lods
ins
sub
add
sar
push
fwait
jecxz
mov
sbb
sahf
addr16
pop
mov
dec
scas
jmp
in
addr16
sub
cmp
fnsave
out
cld
shl
jns
push
in
stos
add
mov
push
in
movs
mov
sbb
rcl
xlat
sub
xor
jbe
out
movntps
mov
xchg
mov
dec
sub
sbb
test
imul
inc
ds
lahf
cld
retf
mov
mov
or
or
mov
aas
jo
loope
dec
mul
jl
sbb
xchg
lods
ins
inc
mov
sbb
rcl
xchg
test
rcl
mov
mov
pop
jne
xor
adc
data16
fs
je
shl
mov
shl
push
popf
pop
mov
mov
shr
stos
pop
ret
cli
popf
xor
pop
test
stc
jnp
das
outs
dec
dec
or
jle
sub
cmp
jb
xchg
xchg
cmp
fcmovnu
in
(bad)
test
cmps
sar
shl
imul
ss
jae
jns
add
push
adc
sub
imul
mov
or
int3
pop
popa
xchg
sub
aaa
dec
retf
adc
xchg
or
loopne
jno
lahf
mov
mov
fimul
shl
mov
test
lods
jns
in
mov
inc
sbb
test
fisttp
das
mov
pop
jnp
mov
dec
aam
sub
mov
loope
and
push
push
mov
mov
adc
add
sbb
cmp
bound
test
fs
push
cwde
jl
out
add
mov
mov
xadd
test
mov
mov
xor
push
scas
clc
adc
mov
std
mov
mov
test
mov
inc
sbb
addr16
shr
push
adc
fistp
xchg
mov
(bad)
rol
xlat
test
aas
pop
hlt
shl
add
hlt
mov
cmp
leave
sub
gs
jp
ins
shl
mov
sub
mov
dec
mov
fild
nop
add
or
xchg
jbe
arpl
jge
std
pop
(bad)
push
jne
aas
adc
mov
xchg
xchg
pop
int
sbb
mov
dec
add
xor
add
push
out
sub
retf
push
xchg
sub
and
xchg
lods
xchg
mov
or
lock
ret
sbb
(bad)
mov
std
mov
jle
push
xor
(bad)
jl
or
std
js
mov
push
jno
add
pushf
stos
mov
lods
retf
cmp
(bad)
loop
out
push
ss
jnp
cmpxchg
je
cmp
(bad)
mov
in
mov
xor
(bad)
add
pop
pop
push
test
cmps
js
inc
mov
or
imul
sar
xor
adc
icebp
rcr
xor
pop
dec
mov
sub
cmp
(bad)
pop
pop
mov
(bad)
xor
neg
or
mov
jns
mov
add
sbb
or
cld
inc
xchg
and
mov
out
adc
adc
xchg
pop
mov
mov
jb
pop
mov
mov
into
int3
dec
enter
sub
and
lods
mov
add
and
mov
push
xor
lock
in
dec
sbb
jne
push
dec
mov
shr
push
push
pop
mov
icebp
imul
ret
dec
pop
push
outs
push
sbb
xchg
je
mov
das
mov
push
mov
dec
xchg
aaa
nop
inc
test
or
mov
mov
ins
push
jb
test
push
movs
sub
push
cmps
xchg
mov
pop
xchg
nop
mov
(bad)
push
inc
dec
inc
push
mov
outs
mov
and
loop
sub
or
or
jp
in
inc
rcl
mov
(bad)
jnp
sub
add
in
mov
jg
add
dec
ins
mov
dec
xchg
clc
mov
popa
pop
mov
mov
xor
jmp
(bad)
daa
xchg
mov
add
xlat
xchg
mov
mov
jo
ins
jmp
rcr
pop
je
xchg
les
out
lahf
int3
loop
fnstenv
loopne
and
int3
dec
jmp
push
mov
jne
xchg
dec
sbb
fild
pushf
cmp
leave
push
in
mov
pop
imul
ins
in
xchg
(bad)
test
push
(bad)
add
sbb
mov
dec
or
mov
imul
dec
jmp
cwde
retf
jne
iret
mov
aas
call
lea
inc
test
mov
or
es
xor
lea
shl
jns
adc
pminsw
imul
mov
adc
daa
aad
and
js
mov
xor
(bad)
pop
mov
js
mov
repnz
out
pop
push
xor
ins
cmp
sbb
cmp
push
pop
pushf
push
mov
sub
addr16
jge
ds
outs
ins
mov
jnp
or
cmp
imul
mov
xchg
iret
cwde
jecxz
ja
mov
enter
cld
jae
jge
loop
test
lods
sbb
pop
xchg
xchg
ins
mov
fbld
out
iret
out
xor
inc
push
pop
jl
jno
ins
test
hlt
xlat
test
pop
xlat
test
mov
inc
push
push
popf
int
not
mov
mov
xor
pop
ficomp
push
dec
fs
aad
push
jbe
cld
and
dec
pop
push
ds
stos
mov
sahf
cwde
mov
retf
add
mov
sbb
aaa
adc
cmp
xchg
adc
pushf
adc
jb
and
clc
mov
jl
cdq
xor
cli
xchg
ret
outs
daa
test
enter
mov
rcl
ret
push
jns
ret
pop
movs
adc
mov
imul
daa
xchg
push
shl
rcr
das
jbe
out
mov
xchg
sub
xor
ret
jp
xchg
xor
pop
mov
mov
js
lahf
mov
inc
fwait
and
ins
sub
rcl
pop
mov
pop
int3
pop
push
mov
test
push
pop
xchg
push
push
cmp
cwde
inc
mov
pop
repnz
scas
lahf
fild
fwait
cmp
rcl
or
adc
ja
loop
mov
in
mov
loopne
ins
mov
retf
out
in
cmp
jns
pop
inc
sbb
or
out
jo
sub
and
mov
jb
xor
xchg
push
cld
inc
pop
mov
arpl
sahf
pop
repz
or
ins
es
ss
inc
daa
add
stos
push
and
(bad)
dec
in
mov
xor
mov
je
shl
fbstp
es
mov
pop
push
pushf
mov
inc
imul
xchg
xor
out
jns
sahf
or
(bad)
fisubr
pop
pop
bound
adc
jne
mov
mov
xchg
std
sub
dec
xor
adc
fidiv
call
mov
add
popa
cmp
push
mov
es
test
fdivr
sti
mov
inc
mov
rol
daa
lods
pop
jae
icebp
out
push
sub
jns
xlat
int3
pop
leave
fidivr
xchg
push
dec
pop
and
out
add
dec
lahf
add
sub
sbb
sar
or
and
or
fs
dec
test
outs
mov
in
push
mov
mov
mov
jmp
sbb
dec
xchg
push
stos
pop
ret
popf
cli
fld
and
cdq
xor
dec
mov
mov
les
popa
addr16
popa
mov
retf
push
stos
mov
mov
mov
(bad)
sbb
dec
mov
test
jne
repz
jbe
mov
ror
repz
lock
fs
(bad)
push
pop
mov
pushf
sbb
sub
test
add
or
xchg
fstp
lds
sub
test
cmp
inc
ret
jmp
xchg
sub
push
inc
pop
popa
jp
and
fwait
adc
call
ins
xchg
mov
stos
sti
push
or
push
jns
mov
lock
nop
mov
mov
cmps
push
sub
inc
fisttp
mov
and
imul
pop
aas
inc
leave
popf
add
lea
mov
dec
fadd
adc
xor
xchg
cmps
xchg
mov
outs
ror
mov
push
mov
jle
mov
stos
sbb
or
and
mov
xor
add
sbb
ror
inc
loopne
cmp
push
ds
add
aam
jnp
push
addr16
pop
push
adc
jl
xchg
xchg
add
mov
or
jae
cmp
enter
push
dec
push
retf
xchg
aas
push
mov
jmp
add
retf
cmp
loope
shr
xor
sbb
ret
lds
add
(bad)
and
xlat
pop
cwde
sub
push
and
in
enter
js
push
imul
sub
jl
mov
and
pop
ror
ret
clc
cmc
mov
pushf
adc
pusha
xor
ret
pop
xchg
inc
mov
jno
push
jbe
test
xor
jno
push
jg
add
je
(bad)
xchg
ss
pop
jl
sbb
sub
les
xor
jns
mov
shl
pop
cdq
fmul
sahf
fld
mov
add
test
jg
std
cmp
lea
repz
dec
or
test
push
add
int
popa
cwde
xlat
cmps
jle
into
pop
retf
shr
sub
pop
mov
scas
jo
and
sub
jb
icebp
inc
sub
ins
cwde
mov
retf
jge
cwde
dec
rcr
rcr
pop
cmc
nop
xchg
vpsubb
mov
and
push
or
bnd
jg
(bad)
cs
lds
fadd
std
sub
jmp
xchg
sub
mov
and
test
and
inc
icebp
imul
and
mov
or
pop
xor
or
or
sahf
push
test
mov
jp
xor
mov
push
test
out
and
add
fldenv
pop
sub
fistp
or
bound
cmp
push
inc
push
jb
cmp
pop
mov
cld
or
push
daa
shl
popa
ret
mov
dec
aad
scas
repz
sub
adc
sub
push
ds
and
pop
jmp
xchg
xor
stc
push
xchg
stos
ret
lock
into
xor
mov
lea
sti
mov
lds
cmps
mov
mov
jmp
jns
stos
pushf
enter
pop
push
inc
bound
push
mov
mov
mov
pop
mov
ja
adc
icebp
inc
jmp
cmp
stc
xchg
fbld
fild
dec
mov
mov
dec
retf
loopne
adc
pop
mov
stos
in
mov
push
stos
ins
mov
lds
sub
(bad)
adc
inc
push
call
adc
sbb
rol
mov
mul
mov
sub
cwde
clc
mov
sub
and
cmp
ins
loopne
test
popf
test
int3
int
clc
fimul
adc
(bad)
ja
inc
sub
sbb
mov
jbe
das
push
inc
add
xor
scas
outs
scas
fwait
retf
dec
mov
xchg
mov
cmps
popf
jno
adc
push
scas
repnz
cmp
and
ins
pop
cdq
xor
int3
mov
dec
cmps
fs
lods
ins
sar
dec
clc
movs
je
inc
enter
or
pop
ja
push
pushf
in
pop
push
sbb
jmp
cdq
pop
add
jbe
push
in
pop
popf
jno
or
jne
sub
sbb
(bad)
pop
inc
jle
jae
mov
jns
loop
add
push
sbb
or
add
sub
movs
xor
call
outs
sbb
sub
aad
leave
push
pop
mov
rcl
jae
sub
inc
and
cmp
gs
imul
cmps
pop
(bad)
jp
xor
ins
sahf
imul
(bad)
jns
lahf
mov
test
mov
jg
jns
inc
loope
cwde
ret
mov
sbb
les
clc
pop
sub
pop
mov
je
cmps
xchg
xchg
fmul
and
adc
xchg
or
mov
mov
addr16
scas
mov
and
cmp
call
push
gs
fstp
gs
sub
push
xor
out
and
mov
pop
xor
jno
jbe
xchg
pushf
mov
int3
mov
adc
enter
jnp
and
lds
mov
inc
sbb
sbb
xlat
sbb
jns
lahf
outs
add
cmovg
push
sbb
mov
test
sub
and
add
xor
xchg
mov
(bad)
inc
ds
xchg
adc
jno
adc
sar
mov
xor
(bad)
mov
pop
test
(bad)
mov
jne
xor
add
hlt
dec
(bad)
js
mov
daa
push
pop
xchg
inc
mov
push
pop
adc
cmc
ret
pop
in
cld
xchg
daa
rol
inc
jnp
sub
sbb
fisubr
cmp
(bad)
mov
mov
mov
pop
jmp
imul
mov
jl
mov
mov
mov
jbe
mov
xchg
out
mov
repnz
(bad)
xacquire
mov
mov
arpl
xor
call
lods
xor
outs
pop
mov
out
nop
ins
push
cli
push
jno
movs
(bad)
pop
stc
jbe
dec
mov
add
shl
loopne
mov
cld
ret
call
mov
mov
mov
popf
nop
mov
test
push
mov
jns
cmp
lods
adc
push
aas
fmul
ins
and
in
or
mov
jl
pushf
or
leave
push
push
jno
fmul
or
dec
xchg
sar
retf
stos
(bad)
adc
(bad)
outs
xchg
pop
mov
cmp
sbb
mov
push
cmp
and
out
and
shl
(bad)
int3
mov
sbb
(bad)
ror
pop
or
mov
and
test
xchg
fmul
sbb
cwde
jns
xchg
cmp
mov
hlt
and
mov
mov
mov
popf
mov
cmp
mov
test
mov
or
cmp
jb
sub
loope
test
dec
and
fild
mov
ret
test
sbb
inc
pushf
pop
popf
mov
push
test
mov
cld
cmp
shr
shl
inc
int
pop
hlt
add
dec
mov
ins
je
outs
fwait
stos
xlat
shl
pop
out
or
rcr
jge
lds
cmp
enter
test
xor
nop
sub
or
fstp
mov
pop
or
clc
mov
cmp
outs
call
call
mov
add
jecxz
fs
fsubr
xchg
push
lods
imul
arpl
adc
pop
movs
cdq
or
icebp
gs
mov
push
sbb
js
stos
scas
fild
test
fwait
les
push
loopne
fsub
mov
(bad)
and
adc
cdq
xor
jno
(bad)
jne
mov
xor
(bad)
imul
and
xchg
push
pushf
repnz
jo
je
or
in
or
test
xchg
ins
add
jne
iret
jnp
push
rol
jbe
jb
xchg
pop
imul
jae
pop
imul
mov
imul
sub
std
and
cli
adc
push
test
into
clc
aam
pushf
and
ret
rol
into
sar
push
push
push
mov
frstor
jmp
mov
xlat
push
je
mov
lahf
and
xor
aas
lea
fs
mov
test
jbe
mov
jo
cmp
adc
jg
sub
popa
(bad)
jg
jo
call
jne
jge
loop
imul
gs
cmp
jl
fmul
or
mov
xchg
add
xor
sub
or
jns
push
out
xchg
mov
call
or
mov
sbb
sbb
cmps
jp
cli
sub
mov
jb
or
(bad)
sub
xor
arpl
out
mov
bound
popf
add
popf
ins
xor
xchg
mov
or
in
dec
add
hlt
aad
outs
push
add
call
dec
pusha
cwde
out
adc
sbb
test
sbb
jns
xchg
or
add
loop
add
ret
arpl
enter
imul
sahf
call
pushf
add
in
jae
dec
pop
mov
push
cmp
repnz
scas
xchg
repz
inc
lea
push
mov
xchg
aas
push
jecxz
cmp
pop
dec
jae
push
jle
movs
or
rcr
jo
(bad)
loope
inc
sbb
dec
mov
inc
jge
xor
dec
outs
pushf
nop
arpl
idiv
rol
(bad)
movs
jmp
shl
xor
aam
jns
out
add
mov
xchg
xchg
add
dec
fsubr
ret
mov
jmp
in
mov
test
cmp
jns
fld
jl
add
mov
arpl
pop
push
(bad)
xchg
cmps
pop
cmps
mov
out
fmul
add
cmps
ss
cwde
mov
pushf
fisttp
ins
jnp
shl
dec
test
mov
rol
pop
sbb
cmp
or
inc
repnz
jno
jb
sub
adc
retf
imul
test
and
jno
mov
fmul
xchg
cdq
ret
fisub
push
fs
les
cdq
test
xor
dec
idiv
mov
push
movs
jbe
pop
jecxz
xchg
jp
mov
ss
jp
fs
mov
xor
pop
jge
icebp
xor
mov
ja
and
and
add
jo
and
icebp
jbe
xchg
stos
sbb
stc
mov
dec
jnp
iret
lahf
pusha
lods
push
mov
mov
jae
pusha
lods
test
push
fs
jns
jne
ins
sub
out
xchg
mov
jnp
adc
pop
mov
jne
and
adc
das
cmp
pop
xchg
pop
adc
sar
add
mov
pop
jmp
jbe
jne
xchg
cwde
cmp
bnd
mov
test
and
cmps
jno
xchg
mov
addr16
mov
adc
lea
movs
or
jne
pop
enter
les
gs
xor
and
in
in
std
mov
dec
aaa
mov
or
(bad)
pushf
jb
or
movs
mov
xchg
push
mov
jb
es
cmp
out
jp
cld
fidiv
movs
aas
ins
mov
add
aad
xchg
gs
cmps
call
test
ret
cmc
mov
mov
jp
mov
pop
iret
mul
xchg
out
dec
xor
mov
ins
jge
loop
dec
cmp
inc
cwde
or
mov
jne
and
into
(bad)
jb
test
sub
(bad)
push
fnstcw
cmp
dec
xor
loop
mov
ins
shl
ds
mov
shr
rol
test
jns
(bad)
fild
out
xchg
and
bound
cmps
push
inc
jp
mov
push
(bad)
repnz
imul
pushf
ficom
movs
icebp
ret
mov
fistp
lods
jno
inc
cmp
enter
gs
out
push
jne
sub
mov
int3
sahf
push
(bad)
sbb
and
xchg
sbb
hlt
popf
push
mov
test
cwde
push
mov
cmps
push
inc
jg
xchg
xor
mov
xor
mov
add
xor
cmps
sahf
lods
sbb
(bad)
mov
mov
mov
call
stos
lods
mov
jmp
jns
(bad)
loopne
rcr
pop
mov
shl
inc
and
and
inc
dec
imul
adc
jo
xor
daa
mov
int
test
xchg
or
rcl
pop
stos
cdq
arpl
mov
push
push
bound
sub
or
jge
jo
sub
xchg
or
xchg
xchg
sti
pop
and
retf
cmp
sbb
sbb
aad
and
xor
test
pop
sbb
push
into
xchg
add
jle
xor
adc
pop
and
push
test
or
jne
lods
jge
stc
xchg
jns
sub
test
jnp
les
adc
dec
test
imul
js
outs
inc
outs
je
retf
les
movs
ins
pop
xor
mov
test
shl
cwde
push
int
pop
cmp
popf
int
cmp
stos
shr
sar
adc
shld
inc
cwde
pop
pusha
sar
ror
sub
sub
sub
xchg
mov
(bad)
cmp
inc
repnz
fstp
pop
inc
retf
jp
and
stc
or
inc
xchg
pop
test
xchg
fwait
inc
out
aaa
mov
jns
enter
add
xchg
ins
sbb
ja
sub
push
mov
adc
aad
add
jmp
push
lahf
push
sub
add
enter
rol
sub
or
jl
out
jl
data16
xchg
mov
fmulp
jb
mov
ja
sbb
sub
or
fcom
or
mov
das
std
inc
adc
sbb
adc
out
out
imul
adc
sub
sbb
dec
adc
leave
popa
mov
pop
lods
mov
lock
outs
inc
test
mov
(bad)
fmul
ja
mov
ret
out
pop
push
jbe
bound
adc
dec
push
xchg
cdq
or
call
daa
sbb
in
imul
cmp
or
push
gs
xchg
or
mov
mov
jmp
mov
fwait
enter
je
jmp
and
mov
inc
cs
test
push
enter
lods
dec
add
or
enter
mov
fabs
fistp
push
pop
jge
sahf
or
mov
pop
cmp
aad
pop
pop
and
mov
sbb
mov
mov
and
cli
cmp
call
arpl
pop
fstp
push
arpl
cs
xchg
and
loopne
cdq
ins
add
add
test
pop
dec
aaa
jg
(bad)
hlt
xchg
(bad)
mov
add
xor
jg
aas
sbb
xlat
(bad)
repz
jle
inc
fld
ror
out
lods
fwait
mov
repz
mov
jae
adc
jecxz
dec
int
jmp
retf
ins
adc
fwait
lods
xor
(bad)
js
les
cdq
test
std
jge
lock
adc
ja
sahf
and
cmp
(bad)
push
inc
adc
xor
xor
cwde
mov
and
cmps
mov
mov
mov
int3
jns
xor
ret
xchg
sub
in
es
cdq
cmp
ins
daa
jl
xchg
gs
mov
stos
jbe
push
push
les
mov
ret
shl
ds
es
int
add
aam
adc
in
mul
cdq
push
pop
sub
push
hlt
xor
(bad)
push
dec
fmul
test
popa
sbb
dec
xor
ins
jmp
mov
jbe
jle
pop
xchg
jle
test
jge
push
xor
(bad)
sar
dec
rcl
xor
pusha
aas
mov
jl
jo
jge
bound
mov
ins
nop
int
cmp
push
data16
cmc
lds
add
sbb
nop
loopne
lds
xchg
pop
in
jns
dec
in
sub
cmp
mov
cmps
mov
or
or
xchg
push
(bad)
mov
inc
cmp
push
fwait
mov
enter
call
mov
dec
pushf
mov
or
call
(bad)
js
xchg
test
jbe
cmp
mov
lea
lock
mov
mov
mov
jge
mov
outs
pushf
pop
inc
js
sbb
test
push
cmps
rcr
and
mov
lea
test
mov
fsub
sbb
xchg
je
mov
in
(bad)
jnp
iret
aad
mov
jbe
fsub
jmp
dec
ror
test
pop
mov
jnp
push
jmp
mov
mov
(bad)
mov
mov
nop
jecxz
push
mov
sub
popf
jecxz
push
push
cmp
shl
neg
xor
pop
loopne
in
retf
test
or
fs
aaa
shr
mov
pop
sub
hlt
push
fs
and
mov
mov
xor
cmp
cmps
mov
or
fcomp
(bad)
repz
jnp
dec
inc
mov
sub
push
lds
add
dec
movs
push
idiv
pop
lea
fstp
sub
(bad)
mov
mov
pop
xchg
arpl
pop
stos
and
out
leave
je
inc
push
popf
and
cmp
mov
push
jmp
jle
jg
sbb
mov
enter
dec
fadd
arpl
stos
push
dec
xchg
dec
fsub
ds
jae
arpl
test
mov
addr16
(bad)
jmp
add
movs
inc
aam
xor
cs
mov
mov
pop
xor
mov
push
pushf
and
repz
and
in
loope
imul
in
sub
jno
or
sbb
leave
xor
repnz
sub
shl
xor
mov
dec
mov
adc
mov
xchg
push
movs
jns
cmp
aas
daa
sbb
fwait
mov
jge
push
and
js
pop
or
push
clc
test
mov
or
push
js
xor
cmps
lea
jae
call
push
mov
sub
and
sub
retf
jbe
aam
stos
clc
(bad)
lds
jb
enter
jns
mov
mov
and
(bad)
adc
or
(bad)
pop
mov
ss
xchg
jb
inc
in
movs
outs
mov
push
dec
mov
pushf
jg
jne
xchg
data16
cwde
bnd
inc
retf
fnstcw
pop
punpckhdq
cmp
dec
in
in
xchg
inc
test
jle
cmp
fistp
sar
jo
ss
pop
ins
xchg
call
in
push
mov
xchg
inc
jns
add
pop
scas
sbb
mov
enter
mov
addr16
add
js
bound
pop
(bad)
cld
push
add
cmps
inc
xchg
les
pop
or
fstp
aam
cmps
jecxz
xchg
mov
sub
fs
xchg
fxch
mov
mov
inc
sub
ret
lock
ret
mov
and
xchg
addr16
fsubrp
in
aam
mov
mov
cmp
jae
fdivrp
xchg
jne
icebp
test
jl
xor
arpl
inc
inc
dec
fnstsw
mov
ins
jg
ja
mov
mov
sar
and
(bad)
xor
(bad)
jecxz
and
mov
push
dec
loope
gs
dec
xchg
ins
mov
mov
loop
mov
pop
scas
repz
push
jnp
popf
repnz
cmp
pop
mul
popa
pop
dec
fimul
jo
mov
mov
js
jge
idiv
scas
inc
add
mov
pop
mov
sbb
hlt
out
push
sub
sbb
imul
dec
shr
clc
arpl
movs
cmp
mov
cmps
jns
add
imul
imul
pusha
dec
mov
mov
or
mov
das
dec
dec
(bad)
fwait
dec
sub
sbb
push
out
jbe
mov
xor
js
push
push
imul
push
cmp
push
pop
sbb
(bad)
in
frstor
mov
mov
push
sub
inc
xchg
jb
and
push
outs
dec
push
jae
adc
add
mov
mov
ja
in
popf
loopne
ins
test
sahf
in
lds
push
xchg
jns
(bad)
(bad)
mov
xchg
cwde
ds
inc
jecxz
je
jbe
stos
aaa
sbb
push
pop
mov
fs
and
scas
sar
xor
es
xlat
jmp
pop
test
fist
push
sbb
xchg
movs
mov
lds
stos
hlt
add
mov
daa
fistp
lods
push
ins
movs
mov
sub
jle
pop
mov
fist
lods
mov
sub
sar
sbb
mov
xchg
fwait
xchg
dec
out
retf
mov
mov
ins
cmp
icebp
push
xor
ja
sub
or
xchg
(bad)
and
mov
pop
int
cmp
or
popf
adc
push
pop
shl
xchg
mov
jne
add
outs
mov
aad
mov
push
mov
aad
and
popf
je
dec
xchg
ins
test
ins
and
add
adc
push
push
inc
mov
add
sbb
mov
dec
add
add
in
mov
popf
and
jmp
sbb
and
push
retf
cmc
adc
push
mov
fs
cmp
cdq
push
adc
jg
sbb
fstp
jmp
sub
adc
ror
movs
pop
inc
pusha
xchg
test
icebp
mov
mov
push
daa
aas
je
pop
lds
or
xor
repnz
rep
and
gs
push
push
mov
(bad)
in
outs
daa
push
stc
and
mov
sti
push
or
xor
mov
scas
xor
rol
push
sbb
fs
out
test
call
mov
cwde
mov
adc
add
rol
out
repz
in
pop
(bad)
rol
jmp
cmps
cmps
mov
xor
scas
mov
mov
mov
add
mov
js
mov
mov
jo
(bad)
in
test
jo
or
cmp
int3
or
or
popa
gs
(bad)
(bad)
mov
sbb
hlt
jo
sbb
pop
fwait
mov
mov
cli
fisttp
and
cmp
stos
xchg
fnstsw
scas
ins
pop
mov
pop
adc
(bad)
xchg
xchg
cmc
add
mov
cmps
push
ss
lea
pushf
mov
mov
in
sub
je
enter
mov
push
mov
lods
jae
xchg
enter
test
mov
popa
xchg
pop
or
fidiv
jmp
jg
xchg
ja
shl
xchg
retf
das
stos
push
pop
push
loopne
inc
pop
add
xor
and
cmp
js
add
cwde
pop
mov
inc
sbb
test
(bad)
nop
adc
jns
(bad)
icebp
cmp
out
add
ins
ret
mov
in
sub
inc
pop
sbb
test
and
pop
mov
leave
mov
jg
ja
push
cmps
jecxz
ret
sbb
mov
dec
shl
mov
imul
ins
(bad)
jp
ins
outs
inc
or
cdq
aas
dec
out
sahf
pusha
mov
arpl
sub
imul
pop
mov
push
mov
lods
loop
push
test
mov
push
push
in
mov
add
mov
inc
out
pop
in
data16
cmps
and
or
pop
sub
outs
arpl
xor
in
sub
mov
jno
mov
pop
xchg
add
cdq
mov
xor
int
cmp
push
pop
sbb
xchg
sti
fmul
pop
adc
cmc
pop
les
xor
lea
les
cdq
jo
(bad)
mov
nop
inc
pop
cmp
xchg
jmp
pushf
mov
sub
lods
outs
scas
mov
pop
or
test
mov
retf
jnp
hlt
test
dec
mov
mov
xor
imul
loopne
sub
fist
jbe
push
sub
cmp
sbb
dec
and
mov
scas
in
test
mov
hlt
pusha
sub
not
add
xchg
into
test
popa
push
push
inc
fimul
sub
ficomp
mov
mov
inc
ja
shl
gs
adc
rcl
or
inc
jecxz
sbb
pusha
shl
mov
mov
mov
sub
retf
sahf
fwait
call
mov
inc
jne
xchg
imul
or
pop
scas
jne
fisttp
gs
loopne
jns
mov
xchg
outs
lea
adc
add
push
or
jg
aas
push
repz
dec
int3
stos
jne
and
faddp
pop
jge
pop
inc
pop
jle
loopne
leave
sahf
das
sub
xchg
aad
and
or
call
(bad)
push
pop
mov
pop
fwait
mov
cs
popa
mov
dec
mov
sbb
push
xchg
test
sbb
js
shr
movs
test
imul
adc
lds
xchg
popa
jae
add
ror
mov
cmc
push
jecxz
jne
je
call
xchg
inc
test
sbb
aad
sub
lea
neg
lods
or
cli
pop
and
cmp
sub
popf
add
jge
jns
pop
dec
push
test
dec
lea
iret
push
xchg
int
addr16
jge
push
popf
or
or
ret
mov
imul
ja
or
(bad)
je
lea
test
mov
test
mov
or
xchg
daa
(bad)
hlt
mov
or
test
and
cmc
mov
in
dec
sub
pop
xor
mov
and
ret
or
pop
shl
imul
sbb
jno
jle
pop
xchg
cmps
pop
repnz
data16
int
test
mov
icebp
lahf
(bad)
(bad)
xchg
iret
mov
adc
cdq
ret
sub
inc
outs
pop
or
nop
inc
mov
push
jl
ror
cli
mov
out
and
ja
and
sub
into
test
cmps
mov
mov
(bad)
enter
outs
jae
aaa
push
fadd
int3
xchg
ss
test
cmp
lods
dec
xchg
xchg
mov
and
test
push
push
imul
mov
sbb
cmp
das
mov
or
popa
pop
call
les
sbb
pop
out
aas
xchg
(bad)
xchg
adc
push
jecxz
sub
cwde
arpl
mov
movs
cmc
inc
inc
adc
mov
mov
icebp
out
cdq
ror
(bad)
fcomi
std
jecxz
call
pop
jg
mov
stos
xor
push
hlt
aas
pop
fstp
shl
xor
repnz
(bad)
mov
mov
mov
xor
pushf
and
mov
sbb
sbb
mov
call
sbb
popf
dec
mov
stc
adc
mov
enter
inc
mov
fcomp
or
push
mov
mov
dec
shl
push
push
loop
adc
sub
aas
movs
leave
jmp
pop
sub
mov
out
adc
add
xchg
jns
push
imul
outs
push
push
push
dec
stos
repz
push
xchg
mov
sbb
pop
dec
ins
jae
sbb
adc
outs
inc
mov
pop
push
push
(bad)
push
jno
mov
push
pop
movs
xchg
inc
xchg
xchg
fcomi
and
rcr
aas
jno
imul
mov
retf
jl
rcl
arpl
in
cmps
lea
jae
mov
(bad)
pop
ins
mov
push
or
jne
(bad)
push
imul
(bad)
test
xchg
and
neg
cwde
xlat
retf
and
xchg
xchg
aad
test
sbb
mov
int3
out
add
sub
or
icebp
or
arpl
ret
push
popa
push
and
xor
and
cli
pop
jl
inc
mov
sbb
inc
adc
mov
mov
sahf
push
sub
push
jle
xor
inc
dec
inc
xchg
pusha
ror
sub
adc
out
push
mov
pop
pop
jmp
and
inc
mov
cli
leave
push
push
shl
xchg
and
cmp
and
and
int
pop
inc
mov
mov
outs
jge
(bad)
into
addr16
xor
stos
(bad)
pop
inc
aas
inc
inc
mov
cs
sahf
pop
dec
dec
pop
ja
xchg
bnd
sub
call
stos
int
mov
jge
hlt
mov
int3
dec
jge
cwde
(bad)
mov
mov
js
jge
add
sahf
sub
xchg
inc
test
js
inc
sub
cmps
addr16
pushf
fisub
lods
or
jg
fild
aaa
sub
enter
scas
outs
movs
mov
push
pop
std
jmp
gs
jmp
bound
add
mov
xchg
sbb
movs
xor
cmps
dec
add
push
dec
sub
ss
jo
into
or
shl
shr
loop
jbe
dec
xchg
jl
and
addr16
inc
dec
mov
aas
ret
loopne
and
iret
mov
fbld
aad
add
and
adc
xchg
adc
test
in
and
xchg
dec
nop
pushf
es
call
call
mov
adc
mov
in
mov
(bad)
and
jmp
nop
retf
test
jmp
adc
jl
fs
pop
cs
rcl
addr16
jne
lods
enter
rcl
ret
je
mov
aam
xchg
(bad)
cmp
out
and
adc
lea
add
sbb
mov
xchg
call
cmp
and
(bad)
mov
sub
call
xchg
fs
inc
sub
xor
test
mov
jnp
xor
in
ins
jge
inc
stos
pop
movs
leave
retf
pop
xchg
mov
mov
(bad)
lahf
nop
jge
push
ins
dec
nop
or
outs
nop
shl
xchg
jb
mov
push
or
pop
addr16
adc
push
movs
push
in
and
pop
jno
mov
dec
mov
mov
int
jb
test
xor
push
or
add
dec
rol
mov
jl
adc
(bad)
js
nop
pop
push
xchg
inc
fsub
test
test
sbb
cmp
hlt
sub
sub
xlat
jne
jae
jb
cld
in
outs
cwde
push
aam
addr16
mov
stos
push
sbb
pop
out
mov
xchg
xchg
cmp
mov
xor
pop
call
outs
xchg
xlat
and
inc
xchg
sbb
dec
add
xchg
inc
aam
xchg
fidiv
dec
xor
sbb
jmp
sub
mov
push
add
and
imul
sti
mov
push
sti
jne
addr16
sub
shr
js
popf
movs
inc
imul
mov
jle
jl
push
push
fdivr
das
and
jl
mov
dec
xchg
mov
xor
and
mov
xchg
dec
mov
xchg
xchg
cmp
mov
scas
inc
jo
movs
xchg
retf
addr16
ins
xchg
stos
pop
pop
xchg
mov
pop
add
cmp
sub
pushf
lods
stos
jbe
scas
push
pushf
mov
scas
aas
dec
mov
jne
ins
shl
xchg
gs
stos
int3
stos
inc
jns
fcmovnb
push
ins
and
mov
rcr
cmp
rcr
inc
xchg
sbb
test
mov
jmp
dec
pop
test
out
fild
mov
mov
nop
inc
cmp
int
mov
or
jecxz
xor
jbe
dec
pop
cmp
or
dec
xchg
ret
mov
xlat
jmp
pop
add
jge
push
pop
or
pusha
and
das
loop
in
mov
hlt
imul
in
xchg
mov
dec
pop
or
leave
dec
sub
jo
sub
xchg
jns
shl
mov
push
int
cmp
push
in
adc
adc
xchg
adc
push
mov
cmp
mov
add
and
jb
cli
xchg
sti
(bad)
dec
sar
jbe
dec
je
fmul
mov
lods
pop
mov
mov
sbb
ret
mul
mov
ret
mov
retf
out
rol
xchg
sub
inc
enter
jnp
xchg
xlat
retf
stc
and
add
cmp
mov
aas
cdq
jmp
(bad)
mov
xchg
xor
ret
xchg
es
mov
inc
mov
adc
mov
mov
xchg
sub
lock
repz
dec
mov
mov
fld
sahf
sbb
sbb
and
addr16
xor
adc
arpl
dec
shl
cmp
xchg
int
adc
test
scas
or
leave
into
(bad)
bound
fsubr
test
mov
lods
sub
retf
push
(bad)
ja
push
cmc
ds
clc
sub
pop
xchg
pop
cmp
jne
lea
addr16
sub
cmps
mov
mov
mov
addr16
pop
cld
loop
mov
call
xchg
fdiv
lods
lea
hlt
sti
(bad)
ss
gs
mov
mov
pop
xchg
xchg
dec
(bad)
into
xor
imul
loopne
or
inc
pusha
sti
nop
ja
pop
cmp
pop
les
sbb
add
ss
adc
add
mov
fwait
and
mov
push
outs
inc
jnp
jo
mov
hlt
add
cmc
(bad)
mov
stos
cmp
movs
popa
mov
ss
test
adc
mov
mov
dec
(bad)
inc
mov
ret
in
imul
popf
jmp
push
push
out
imul
mov
mov
cmp
mov
pop
in
inc
cs
push
and
repnz
push
(bad)
jmp
adc
clc
sbb
call
jecxz
(bad)
push
shl
cmp
fwait
dec
mov
or
and
cmps
pop
xchg
jp
xor
shr
js
test
(bad)
cdq
aam
fsub
jle
(bad)
adc
xchg
adc
shl
xchg
jne
mov
dec
mov
clc
aas
jmp
push
sub
sbb
xchg
mov
jbe
xchg
xor
jl
adc
pushf
call
add
or
adc
sar
xor
mov
(bad)
dec
dec
push
in
inc
jecxz
xor
dec
daa
xchg
mov
or
jmp
inc
pop
jp
add
dec
imul
mov
lods
cmp
call
mul
sbb
cmps
adc
dec
push
push
int3
dec
pop
dec
jl
rcr
dec
ret
mov
mov
lds
dec
(bad)
ja
lea
jbe
mov
lahf
es
pop
into
aas
dec
mov
test
adc
cmp
pop
es
inc
imul
mov
dec
daa
cdq
cld
(bad)
test
xchg
xchg
lods
mov
test
sub
hlt
xchg
jne
mov
jge
pop
aaa
inc
cld
and
fwait
pusha
jbe
fxch
xchg
cmps
je
shl
cmp
cmc
cwde
mov
cwde
jle
ret
mov
cli
pop
jno
mov
cli
lea
mov
arpl
into
sbb
sub
or
xchg
das
mov
add
nop
or
or
xor
sub
loopne
push
jge
and
and
adc
jl
dec
or
inc
sub
outs
xchg
mul
(bad)
jge
xchg
test
addr16
test
arpl
mov
adc
adc
xchg
sar
bound
jle
enter
adc
fdivp
ins
imul
jnp
mov
or
xchg
sub
mov
mov
test
or
(bad)
repz
repz
adc
std
jle
popf
adc
sar
jbe
add
in
mov
loope
lods
pop
arpl
mov
leave
daa
pop
jl
cs
lahf
and
out
dec
test
shr
fidivr
pop
ins
dec
pusha
fdiv
movs
test
nop
pushf
ret
cwde
movs
adc
jo
je
cmp
pop
mov
fsub
imul
pusha
jp
and
mov
xlat
test
push
push
shl
fisttp
retf
das
adc
mul
push
test
pusha
int
and
retf
pop
pop
out
pop
shl
loopne
sti
dec
lods
push
xor
jmp
mov
lahf
mov
test
jmp
test
adc
push
ins
xor
cmp
jno
or
ins
lods
fidivr
mov
dec
adc
xchg
inc
mov
xor
jo
div
add
ins
(bad)
mov
push
add
enter
mov
sbb
mov
and
dec
xchg
in
pop
mov
xchg
test
jl
mov
cld
mov
ins
(bad)
pop
dec
or
dec
push
mov
cmp
ss
mov
push
mov
nop
cmp
push
lds
ret
and
es
sub
push
cmp
cdq
sub
ja
(bad)
iret
mov
aad
xchg
cdq
dec
inc
jnp
jp
inc
dec
xchg
xor
lods
test
push
nop
sbb
out
and
pop
test
mov
jecxz
xchg
mul
inc
loopne
jmp
inc
jns
add
fsubr
fcmove
fwait
into
in
jno
mov
ficom
hlt
or
ds
or
pop
push
scas
(bad)
dec
push
test
ror
mov
jmp
push
or
(bad)
dec
movs
data16
ss
(bad)
mov
xchg
retf
and
sub
mov
imul
lock
pop
not
xor
shl
mov
or
mov
imul
and
add
leave
lock
jno
mov
xchg
jne
mov
nop
pop
push
inc
dec
push
aaa
inc
mov
fidiv
or
mov
sbb
sub
jecxz
cmps
xchg
pop
nop
ins
and
cmp
loop
fwait
and
in
sbb
movs
mov
ret
mov
xchg
adc
sbb
push
fdivr
and
or
jmp
ficom
test
aam
inc
inc
jle
mov
dec
add
jnp
dec
and
add
add
in
jo
xchg
add
or
sbb
mov
pop
or
std
mov
push
inc
fidivr
and
stos
mov
xor
ror
xor
pop
into
popf
jp
cmp
mov
aam
jp
fnsetpm(287
xchg
ret
fist
push
mov
and
mov
inc
sbb
adc
cmps
(bad)
int
xchg
jmp
sbb
push
xchg
stc
push
nop
mov
adc
outs
icebp
aad
mov
adc
xchg
div
inc
cld
rcr
pop
fisubr
(bad)
adc
shr
ins
fucom
xchg
add
ss
pop
and
push
in
std
xchg
inc
mov
fwait
mov
xchg
retfw
mov
fild
loop
jno
imul
sub
jnp
mov
jb
or
jp
xchg
shl
sbb
in
jecxz
push
sub
outs
retf
sub
xchg
test
and
outs
sahf
clc
push
je
xor
mov
sub
push
xchg
cmp
repnz
int3
rol
js
push
sub
daa
xchg
pop
mov
retf
push
sub
jbe
cld
xchg
repnz
cmp
das
ins
xor
mov
cmp
adc
or
dec
mov
scas
pop
inc
scas
add
les
inc
xor
loopne
pop
pusha
push
pop
lds
mov
adc
mov
xor
aaa
inc
lods
xchg
mov
xor
pop
jl
loopne
push
rol
js
sti
mov
leave
push
mov
pop
addr16
vpackssdw
sub
(bad)
push
in
fs
add
mov
fmul
push
and
add
xchg
add
stos
(bad)
js
add
rcr
mov
test
mov
aas
arpl
jge
pop
sahf
inc
mov
pop
popa
(bad)
repz
mov
xor
push
arpl
dec
bound
repz
ret
sub
imul
repnz
lods
push
out
sub
lahf
pop
jecxz
icebp
and
xchg
jns
push
movs
jns
fisttp
lds
gs
mov
rol
push
fwait
bound
mov
sub
bound
ja
dec
jno
pop
rcl
jmp
cmp
bound
ret
mov
pop
test
ret
jno
fadd
mov
pusha
or
push
aad
mov
das
test
push
or
lods
nop
imul
xor
push
gs
pop
sar
iret
ret
mov
pushf
out
popf
fcom
dec
(bad)
xor
jle
jbe
and
imul
sub
jle
imul
das
loope
pop
add
jne
stos
adc
cmp
mov
scas
shl
push
mov
lods
or
dec
test
stc
int3
int
jge
xor
adc
(bad)
loop
int3
push
inc
fisubr
imul
jne
sti
jns
sub
rcl
mov
xchg
jne
sub
lds
int
mov
mov
pop
inc
sub
adc
popf
les
or
xchg
lods
cld
pusha
popa
in
jge
mov
out
mov
ss
jae
jmp
ss
int
mov
popa
mov
outs
jl
(bad)
es
and
push
sbb
mov
add
sbb
dec
jp
and
xchg
push
icebp
and
out
in
cmp
mov
in
ret
xchg
in
bound
xor
lods
out
xor
sahf
(bad)
push
or
das
js
aad
add
hlt
addr16
and
sbb
mov
and
in
inc
or
mov
pop
dec
xor
(bad)
into
xchg
sub
cwde
sub
xchg
xchg
movs
inc
mov
jg
ret
mov
out
rcr
rol
sti
xor
loopne
and
or
jmp
test
xlat
rcr
in
pushf
pop
sub
fwait
jb
or
pop
pop
jecxz
xor
mov
gs
les
pop
int3
mov
in
sti
ins
imul
aad
inc
jbe
stos
jbe
mov
xor
in
pop
pop
cmp
inc
push
mov
sub
fdivr
jg
add
push
sub
ror
xchg
popa
fwait
sbb
dec
imul
inc
aaa
push
iret
rcl
test
adc
jb
jge
xor
lahf
aas
sub
add
add
nop
jecxz
mov
mov
push
adc
popf
xchg
adc
mov
mov
sub
mov
gs
call
rol
or
adc
ror
xchg
mov
xchg
inc
mov
xchg
rcl
mov
inc
xchg
pushf
push
fwait
jecxz
sub
xchg
pop
xchg
xchg
xlat
inc
or
gs
out
sub
bnd
mov
addr16
xchg
lods
sbb
mov
scas
push
push
(bad)
mov
test
cdq
test
pushf
rcl
xor
(bad)
sub
jbe
jb
hlt
cmp
jnp
mov
sahf
sbb
xchg
mov
fld
push
ss
data16
push
test
dec
sub
xor
mov
push
inc
add
pop
test
arpl
gs
push
sahf
cs
jp
xor
sbb
(bad)
jne
jbe
cmp
inc
sub
jns
pop
mov
jmp
jle
lds
je
cmps
lods
jbe
out
(bad)
cwde
jo
mov
cmps
shr
mov
pop
jae
cwde
and
sbb
mov
shl
ins
xchg
xchg
inc
xchg
add
rol
cmps
inc
cmp
into
stos
sbb
jmp
daa
dec
nop
fcmove
test
fs
(bad)
icebp
xchg
xchg
inc
xchg
sahf
lods
dec
addr16
test
adc
jne
adc
cli
icebp
xchg
arpl
push
outs
pop
xchg
test
movs
lahf
xchg
push
xchg
mov
xor
or
rcl
inc
or
cs
stos
mov
xlat
dec
mov
neg
aam
popa
test
sbb
ds
fsub
lock
mov
imul
xchg
mov
push
div
xchg
popf
cmp
les
mov
fidiv
out
nop
xchg
and
mov
jmp
dec
and
(bad)
mov
mov
cmp
dec
push
pusha
mov
mov
adc
inc
jmp
out
sbb
push
xor
mov
sahf
mov
and
out
sbb
pop
push
adc
xlat
pushf
gs
int3
push
pop
xor
test
inc
add
inc
aas
mov
pop
xor
xor
retf
sbb
rol
cmps
push
enter
jb
scas
mov
push
jp
cmp
push
pop
mov
enter
add
aad
push
or
push
mov
lea
sub
fcomp
dec
xchg
push
fbstp
pop
fidivr
nop
cmc
inc
shr
mov
jl
mov
mov
or
ss
mov
out
in
xchg
jbe
cmp
add
(bad)
and
daa
es
aam
stc
int3
cmp
and
test
and
in
into
nop
adc
jmp
jnp
test
pop
lea
fcomp
inc
test
sbb
jnp
imul
sbb
ss
test
mov
xchg
mov
jbe
mov
push
add
push
aaa
daa
stos
mov
ret
push
punpckhwd
dec
data16
pop
mov
xchg
cmp
inc
mov
ror
push
jae
adc
sbb
pusha
or
adc
fmul
cmp
ss
imul
js
adc
sub
jb
fistp
add
mov
ja
xchg
(bad)
test
cmc
jno
or
lahf
dec
push
ins
adc
popf
adc
addr16
sbb
pop
xchg
jmp
add
(bad)
cmp
pop
xor
push
mov
xchg
cmp
ins
test
fwait
push
fistp
xor
popf
xchg
push
shl
mov
arpl
test
dec
(bad)
call
std
addr16
fwait
pop
mov
xor
push
mov
xor
jg
xchg
xchg
ja
jb
push
add
jns
mov
xchg
test
pop
test
test
test
in
xchg
sbb
outs
mov
mov
xor
push
xchg
sbb
mov
arpl
lods
inc
call
xchg
nop
inc
ja
mov
mov
jne
test
lods
mov
ja
stc
add
movs
inc
pop
mov
movs
imul
sbb
xchg
xchg
scas
lea
mov
lds
hlt
cld
data16
sbb
add
ins
pop
fld
pushf
int3
cwde
jno
(bad)
gs
mov
addr16
adc
fwait
xchg
inc
cmps
jae
push
(bad)
xor
fucomip
(bad)
outs
push
sbb
jge
retf
aaa
or
or
push
popf
int
rcl
(bad)
jbe
adc
xor
ja
mov
imul
dec
pop
rcl
lea
pop
popf
xchg
(bad)
and
sar
ja
lahf
jbe
or
clc
mov
cli
lahf
or
inc
fdivr
dec
and
add
mov
pushf
pop
mov
adc
stos
push
int3
fimul
outs
retf
jae
fadd
xchg
fcomi
enter
rcl
jne
repnz
cmp
push
mov
sbb
pop
cmps
pop
ror
mov
jle
scas
adc
ins
stos
lock
ret
dec
inc
jns
dec
adc
sub
test
cmp
rcr
lods
mov
(bad)
jbe
adc
and
or
aas
aas
das
into
pop
fstp
test
rol
push
test
sub
sub
pop
mov
push
stos
ins
retf
retf
rcl
xchg
test
jno
rol
mov
repz
jo
and
mov
pop
cmp
inc
ds
movs
pop
adc
push
sub
cmps
xchg
mov
xchg
xchg
pop
jle
fs
ror
into
in
push
mov
retf
(bad)
test
mov
call
inc
cmps
rcl
and
mov
mov
jbe
push
jb
add
outs
test
sub
inc
sub
inc
mov
mov
push
fild
or
pusha
jnp
mov
inc
test
les
cmp
movs
mov
stos
push
(bad)
std
push
or
jbe
mov
rcr
icebp
hlt
mov
shl
inc
aaa
and
and
sub
mov
aas
mov
out
or
frstor
pop
or
cmp
mov
movs
sbb
adc
fimul
leave
push
xchg
ret
mov
arpl
push
dec
adc
in
mov
and
iret
bnd
imul
sub
add
cbw
inc
lods
adc
dec
(bad)
arpl
fwait
xor
pusha
sub
and
pop
into
ja
sub
sbb
ins
jnp
mov
pop
loop
cmp
pop
cmc
enter
(bad)
mov
movs
test
out
and
inc
fst
icebp
mov
ror
push
sub
fldcw
cmps
cld
push
shl
retf
int
and
pusha
mov
inc
out
inc
ret
sbb
out
les
jp
mov
mov
rep
cli
add
inc
mov
sbb
adc
and
sbb
add
cmp
pop
in
mov
ss
mov
(bad)
jg
pop
sub
dec
repz
jno
lea
mov
pop
xor
retf
mov
pop
cmp
mov
mov
daa
mov
sbb
sbb
xor
cmp
in
add
test
pop
xor
bound
retf
mov
inc
fsubr
cdq
gs
sbb
test
stos
mov
push
lock
jne
imul
mov
push
and
mov
cmp
mov
out
and
mov
nop
jns
aas
pop
add
mov
cdq
out
inc
lea
inc
cmp
inc
inc
adc
sub
cmp
jecxz
push
imul
xor
sbb
mov
push
in
pop
add
leave
xor
cmps
xchg
sbb
xchg
aad
add
and
jne
mov
push
fcomp
test
mov
out
fisubr
inc
in
mov
ins
leave
inc
mov
test
movs
inc
not
xor
mov
aas
pop
xchg
cmps
dec
retf
push
mov
dec
(bad)
xor
ins
xchg
add
add
das
aaa
xchg
stc
xchg
jmp
ins
jp
retf
pop
loope
mov
push
inc
inc
loopne
nop
and
jo
xor
add
mov
jecxz
movs
sub
inc
inc
arpl
and
mov
out
dec
or
jl
mov
inc
movs
ja
sbb
nop
bound
sub
imul
xchg
pop
mov
je
push
rol
outs
add
les
cdq
jp
test
pop
mov
add
cwde
je
sbb
stos
mov
fcomp
push
in
sbb
mov
iret
xchg
mov
mov
lock
ror
dec
cwde
pushf
xchg
scas
cdq
fdivr
daa
sbb
dec
outs
add
div
push
cmc
dec
hlt
repnz
inc
xchg
and
ss
les
dec
jnp
add
(bad)
mov
lds
ret
pusha
mov
cdq
leave
mov
mov
neg
div
inc
je
dec
fadd
imul
aas
mov
ret
mov
sti
mov
mov
xor
shl
sub
or
call
(bad)
jns
mov
pop
adc
pop
and
xlat
fnstcw
test
adc
loope
xor
dec
pop
addr16
into
jp
fst
or
cmc
mov
in
fs
scas
ror
xor
xor
and
mov
jno
xchg
fs
mov
jg
xchg
scas
repz
fwait
cdq
sub
pop
jbe
cld
jmp
ins
(bad)
pop
mov
imul
stos
enter
leave
push
(bad)
adc
xchg
pop
sti
push
hlt
clc
sub
(bad)
lea
popf
push
imul
mov
iret
mov
push
push
aaa
push
mov
cdq
int3
in
xor
lock
and
pop
and
mov
or
popf
jle
sub
cwde
(bad)
mov
adc
add
cli
pop
push
cmp
mov
xor
cmps
push
jnp
mov
call
xchg
cmp
mov
int3
les
int3
cmps
outs
xchg
pop
arpl
or
(bad)
aas
inc
mov
out
and
or
xchg
stos
mov
jbe
outs
or
sahf
push
aad
xchg
and
imul
scas
movs
dec
(bad)
(bad)
xchg
les
mov
retf
ficomp
sub
aad
stc
fcom
push
xchg
out
repz
cmp
sub
fs
mov
and
inc
into
inc
pushf
dec
sub
fisttp
ds
adc
and
idiv
mov
push
push
push
xchg
jge
scas
shl
push
cmps
movs
mov
adc
retf
cmp
shl
dec
fcomp
gs
jg
icebp
rep
icebp
and
mov
stos
jbe
mov
aam
dec
mov
ds
aam
mov
cld
call
mov
xor
xor
inc
imul
mov
jne
jae
adc
in
fs
vpunpckhqdq
mov
adc
or
push
or
fild
dec
xor
sahf
cdq
mov
xchg
sub
out
je
ret
aas
cbw
xor
add
aam
mov
jne
jnp
cmps
fdiv
popa
or
fiadd
xor
sub
adc
jecxz
sbb
popf
add
std
sar
arpl
xchg
stc
inc
mov
sbb
sbb
cmc
mov
jbe
jp
add
icebp
mov
push
stos
fsubr
pop
push
movs
push
jmp
or
test
sub
mov
sbb
xchg
push
pop
cmps
add
and
dec
jp
xchg
ret
xlat
pop
movs
inc
mov
xor
mov
and
aad
sbb
jno
mov
sbb
inc
out
jecxz
push
aas
outs
and
xor
adc
scas
lock
inc
jo
(bad)
jecxz
mov
sbb
cmc
sbb
es
std
loopne
cmp
pop
push
xor
dec
adc
mov
mov
and
mov
fadd
cld
std
sbb
and
adc
pop
iret
rol
and
xor
mov
jnp
inc
mov
ret
fs
xchg
lea
mov
shl
inc
jns
inc
lahf
jns
call
mov
aas
retf
add
arpl
push
dec
or
pop
out
icebp
push
cwde
mov
nop
add
(bad)
xchg
imul
and
inc
cli
mov
mov
xchg
dec
iret
cmc
sub
lahf
rcr
push
dec
or
inc
rcr
sbb
(bad)
mov
data16
jns
pop
leave
lock
adc
add
jle
push
(bad)
mov
out
icebp
push
fild
pop
mov
mov
adc
popf
test
ins
pop
pop
stos
jns
sub
add
push
sar
xchg
rcl
jl
inc
and
inc
sub
jae
lods
shl
push
(bad)
jo
mov
or
scas
scas
sub
pop
aaa
mov
cld
jg
pop
movs
imul
je
addr16
div
xchg
fmul
dec
inc
scas
jp
push
xchg
popa
mov
xor
je
or
ficom
push
cmc
dec
adc
mov
imul
xor
mov
cmp
cmc
or
ja
js
mov
adc
icebp
sahf
jmp
data16
imul
adc
scas
retf
push
mov
mov
pop
sbb
jbe
mov
js
jge
mov
sub
push
or
jae
(bad)
icebp
push
jmp
sub
(bad)
jnp
int
or
imul
push
popf
mov
jmpw
mov
cmp
dec
jae
fsubr
frstor
push
rol
daa
iret
adc
call
fld
cdq
push
push
cmp
mov
(bad)
addr16
xchg
pop
cmps
jg
sbb
mov
jb
xor
push
jno
pop
scas
xchg
xchg
push
mov
fs
jo
xor
or
sbb
and
jl
mov
icebp
rcl
jb
arpl
jp
ins
daa
leave
sbb
jge
bound
loope
inc
dec
mov
ret
rcl
and
mov
mov
ds
pop
pusha
and
jmp
dec
xchg
mov
into
inc
add
mov
rcl
test
push
pusha
push
data16
lods
sub
mov
les
rcl
(bad)
sbb
lea
push
and
(bad)
mov
or
int3
out
adc
push
je
pop
xor
mov
push
or
in
sub
add
or
add
les
jo
lds
imul
test
ins
scas
adc
jno
fimul
lea
(bad)
mov
mov
pop
pop
xor
add
(bad)
loopne
cmp
or
mov
and
int
fwait
jmp
lea
shr
jmp
xchg
popf
xchg
jnp
xor
xchg
adc
sbb
mov
and
inc
xor
jnp
lock
dec
loopne
dec
into
mov
cs
add
cwde
fdivr
ror
adc
(bad)
sbb
inc
xor
jmp
xchg
sub
xor
or
lds
sub
mov
ja
test
xor
sub
xchg
aam
repnz
mov
addr16
inc
or
mov
call
xchg
or
ins
frstor
xchg
and
push
or
or
dec
lds
sub
jle
mov
(bad)
lods
cmp
or
daa
lock
(bad)
sbb
outs
mov
xor
and
and
mov
test
jl
nop
add
fs
(bad)
add
pop
aad
jp
(bad)
jg
fst
std
aam
call
mov
ret
pop
lea
xor
mov
fcom
popa
mov
xor
adc
les
cmp
jle
aaa
push
jae
out
ins
ret
pushf
adc
sbb
jne
or
pop
xor
outs
adc
mov
inc
sub
pusha
lods
daa
in
je
stos
mov
cmp
int
mov
cli
loope
xchg
shl
imul
mov
pop
bound
mov
adc
sbb
ds
cmps
inc
jecxz
xor
xchg
test
dec
retf
stos
push
push
add
jmp
(bad)
lds
dec
push
in
pushf
pop
jmp
mov
out
popf
sub
fsubp
jno
dec
mov
pop
xor
lods
arpl
sbb
mov
or
mov
mov
or
shr
jp
jge
mov
adc
xchg
sbb
mov
(bad)
cs
dec
sbb
mov
mov
sub
test
mov
or
or
cmc
mov
loope
rol
in
dec
pop
repnz
push
cli
mov
(bad)
lods
mov
or
push
pop
push
adc
imul
out
cmp
popf
repz
inc
mov
mov
cs
je
loop
test
add
push
ins
cmp
push
dec
rcr
mov
repnz
retf
push
and
leave
push
jl
xor
stos
daa
and
popf
data16
gs
sbb
mov
movs
shr
mov
and
aam
mov
fisttp
pushaw
xchg
sahf
loopne
fwait
lds
ds
aas
cmp
ja
pop
add
retf
shl
push
mov
fnstsw
xor
mov
int
xchg
mov
outs
sub
cs
int
xor
shr
push
inc
sub
push
or
add
inc
sub
imul
mov
pop
sbb
je
xchg
leave
jne
dec
sub
mov
dec
pusha
add
cmp
cwde
loope
lea
(bad)
lea
fwait
sbb
imul
out
cmp
cld
jno
stos
jl
je
pop
sbb
dec
and
xor
(bad)
movs
dec
loop
addr16
(bad)
es
fdivr
sub
ins
xchg
pop
dec
pop
push
sub
test
inc
inc
outs
mov
jne
mov
and
xchg
mov
dec
pop
pop
xor
inc
mov
cwde
ins
test
ror
push
sti
aad
fadd
cmp
test
movs
mov
rcr
outs
xor
test
inc
mov
cmp
(bad)
sub
or
sbb
jo
or
aad
adc
pushf
imul
(bad)
sbb
or
movs
xchg
and
mov
cs
ds
sbb
cmp
loopne
mov
stc
dec
inc
mov
mov
add
pusha
mov
sbb
mov
or
xchg
fnstcw
mov
test
mov
mov
dec
xchg
sbb
je
jb
loop
inc
gs
fisubr
add
xchg
fmul
(bad)
rcr
retf
(bad)
aad
fild
sub
jmp
adc
mov
mov
aas
adc
call
inc
xor
push
push
pop
stos
sbb
add
and
(bad)
loopne
mov
adc
stos
adc
dec
push
fwait
std
fisttp
or
hlt
(bad)
cmp
and
jg
jge
pop
mov
lds
loopne
mov
and
jns
popf
popf
and
push
call
jno
movs
adc
scas
and
ret
jmp
push
lods
inc
repz
out
ss
push
nop
sbb
mov
aas
push
jg
sbb
and
lds
es
cld
lock
outs
loopne
cmp
retf
or
mov
int
sbb
mov
je
jecxz
mov
push
ss
test
dec
sub
adc
popf
push
mov
daa
push
imul
sbb
int
pop
sar
cli
addr16
pop
out
jge
js
or
fdiv
addr16
xchg
ja
leave
xchg
xchg
or
fist
push
push
data16
sub
push
mov
dec
mov
mov
push
push
imul
lods
je
sbb
adc
or
cmps
repnz
sar
iret
pop
movs
xchg
jecxz
push
fist
inc
pushf
dec
sub
jmp
in
inc
cmps
ins
sub
push
fwait
sub
rcl
inc
jl
int3
out
push
mov
nop
cwde
push
inc
mov
fmul
sbb
mov
pop
retf
lock
movs
mov
sar
push
push
and
add
iret
adc
xor
jl
pop
jns
sti
adc
dec
mov
mov
mov
pop
sbb
fdiv
dec
sub
xor
fcmovnu
adc
xor
test
ins
xlat
shl
fmul
push
sbb
outs
add
adc
fs
and
sbb
stos
dec
clc
and
push
add
push
jnp
nop
cmp
pop
aam
adc
mov
ror
into
adc
mov
xor
pop
lea
sbb
test
aam
bound
bnd
push
lods
sbb
out
in
sub
jmp
ds
pushf
movs
add
sub
mulps
mov
sub
push
icebp
push
data16
aam
xchg
xor
adc
sahf
lds
sbb
cmps
push
arpl
mov
out
mov
enter
pop
shl
aas
rcl
xor
inc
jo
popa
sub
loop
xchg
jle
cmps
push
sbb
pop
inc
xchg
sub
adc
inc
and
mov
ins
jecxz
sar
or
jno
and
push
sub
fmul
mov
jnp
jb
test
inc
mov
xchg
je
sub
arpl
jb
les
add
xor
std
and
sub
sbb
or
xor
aaa
sub
xchg
rol
dec
sub
xor
mov
repz
jmp
and
add
ret
jno
out
dec
or
sub
test
ficomp
mov
cmp
mov
push
dec
into
iret
sbb
mov
loope
popa
movs
xor
mov
lahf
iret
fcomip
xchg
sahf
ss
int3
ret
mov
dec
sbb
iret
fiadd
or
adc
xor
mov
aas
mov
push
dec
leave
repz
cmp
jmp
or
sub
jne
or
fist
push
or
and
push
adc
sub
pop
xchg
mov
inc
jne
fcom
push
addr16
popa
push
test
inc
sbb
push
pop
mov
ror
hlt
icebp
pop
sahf
sub
fdiv
lds
adc
(bad)
mov
jp
sub
jbe
push
sbb
pop
or
movs
inc
or
cmp
xchg
xlat
loope
loope
push
test
lods
stos
lds
movs
mov
pushf
jae
sbb
mov
push
dec
rol
cmc
jecxz
mov
or
add
(bad)
fcomi
(bad)
fsubr
inc
rcl
aam
pusha
xor
inc
adc
jne
pop
adc
jns
or
int3
loopne
dec
xchg
in
push
or
in
mov
sbb
movs
jge
sahf
mov
inc
enter
mov
call
jo
lds
xlat
mov
fsub
sti
or
into
test
mov
mov
mov
mov
cmps
adc
rol
xchg
mov
mov
bound
jnp
xchg
and
sub
xor
dec
leave
ds
ss
call
dec
repnz
test
cmp
imul
jnp
jecxz
xor
iret
cwde
int
fldcw
shl
bnd
mov
dec
test
mov
pop
call
cmp
xor
mov
nop
add
mov
sbb
mov
das
call
mov
xor
sar
daa
js
jl
jl
add
je
cs
push
lea
mov
adc
mov
sub
out
dec
fs
or
inc
call
dec
pop
js
outs
mov
push
mov
jecxz
lods
ds
pop
push
pop
sahf
jbe
mov
cmp
leave
test
and
hlt
sbb
mov
push
inc
mov
sbb
sub
add
out
mov
fdiv
scas
in
mov
push
mov
or
loope
and
mov
cs
xchg
retf
sahf
sbb
(bad)
sbb
mov
into
jae
(bad)
mov
or
imul
pop
mov
push
or
push
jp
fadd
(bad)
xor
rcr
dec
jge
std
pop
arpl
test
mov
pushf
inc
rcr
bound
jb
mul
cmp
imul
push
sbb
jle
inc
xchg
ss
test
sub
lds
gs
data16
inc
and
mov
nop
repnz
pop
or
push
jnp
in
adc
mov
sub
inc
xchg
cs
mov
enter
in
jl
mov
inc
lds
(bad)
int
clc
dec
mov
out
test
sbb
sbb
fcom
aad
add
stos
or
dec
sub
fs
test
sbb
mov
mov
xchg
mov
push
call
mov
(bad)
mov
xor
adc
xor
aad
aas
scas
inc
cs
dec
jb
std
mov
mov
and
pop
dec
xor
outs
int
enter
lahf
or
(bad)
mov
push
rol
inc
jecxz
das
fdiv
addr16
mov
cs
mov
and
jae
sbb
sbb
dec
iret
xchg
inc
ins
sub
pop
int
inc
mov
cli
push
mov
icebp
repz
mov
pop
mov
(bad)
test
fwait
mov
push
inc
mov
nop
adc
dec
fisubr
cdq
pushf
add
dec
mov
lahf
xor
dec
xchg
sbb
mov
jnp
inc
pusha
pop
push
push
sub
inc
loopne
das
pop
push
outs
add
jns
pop
fisttp
retf
jmp
mov
lds
lods
fcos
popa
in
and
and
(bad)
or
cwde
adc
push
mov
jo
jecxz
cmp
ins
xlat
setle
and
cdq
sbb
push
adc
adc
in
pop
test
enter
xchg
stos
xlat
xchg
mov
cmc
cmp
cs
dec
push
repz
call
pop
mov
xrelease
mov
out
or
pop
push
and
pusha
shl
lods
sbb
dec
clc
call
retf
pop
das
and
repnz
adc
inc
jae
dec
and
in
xor
and
sbb
add
cmpxchg
(bad)
outs
mov
mov
shr
call
out
ins
imul
push
add
cmps
popf
mov
and
sbb
test
je
jo
or
add
push
dec
fstp
xchg
gs
push
cmp
sub
xor
pop
inc
inc
xor
nop
clc
aas
sub
mov
icebp
hlt
sbb
or
push
out
stc
test
xor
mov
mov
xor
cld
jne
jae
ds
aam
mov
repz
inc
icebp
push
mov
pop
adc
add
mov
nop
jo
das
stc
fnstenv
fmul
in
or
xchg
cld
popf
mov
jle
xadd
das
stos
cmps
cmp
jae
jbe
pushf
in
push
or
pop
cdq
xor
stos
dec
iret
and
add
inc
cdq
lock
ds
out
push
mov
and
pushf
and
repnz
hlt
dec
mov
aas
pusha
jnp
out
inc
into
jl
int3
push
(bad)
xor
aaa
das
push
sti
inc
movd
mov
and
(bad)
not
mov
and
test
fdiv
jmp
pop
add
lea
xor
rol
pop
jbe
stc
xor
sub
or
mov
xchg
push
push
cs
jp
mov
mov
xchg
loop
jns
mov
pop
or
xor
or
push
dec
cld
(bad)
sub
pop
repnz
jb
xor
mov
hlt
fwait
(bad)
ret
pop
xor
rcr
popa
sti
sbb
cmp
mov
mov
pop
inc
call
lds
push
adc
mov
ds
dec
push
push
loop
and
stos
scas
pop
mov
mov
pusha
push
jge
pop
out
gs
jecxz
or
pop
test
cmp
dec
int
ins
inc
ret
scas
sbb
jge
(bad)
aad
mov
(bad)
jnp
mov
stos
iret
mov
dec
lods
and
dec
rcl
lock
or
adc
mov
xchg
mov
outs
fdivr
and
loope
pop
push
xchg
(bad)
cmp
mov
loopne
frstor
push
test
imul
pop
stc
mov
out
pop
sar
mov
xchg
xor
push
add
sbb
pop
or
in
xchg
int
adc
daa
shr
call
mov
cmp
mov
mov
jmp
fild
sbb
retf
adc
adc
xor
lahf
push
mov
pop
adc
cwde
sub
cmp
inc
popf
mov
pushf
ktestw
mov
xchg
retf
pop
hlt
xor
ins
mov
lds
dec
leave
daa
sar
sub
mov
xchg
jbe
jno
mov
jp
test
loopne
mov
pop
imul
or
bound
sub
and
cmp
sahf
inc
adc
push
outs
cmp
dec
imul
and
mov
jno
mov
jne
lea
nop
ficomp
jmp
paddusb
sub
cmp
jmp
rol
outs
aad
and
mov
adc
es
(bad)
or
loop
dec
adc
sbb
pop
cmps
fimul
push
or
fchs
cmc
pop
cwde
(bad)
pop
(bad)
int
out
inc
fimul
int3
fsubr
shl
ins
push
mov
cmps
ret
out
aas
js
stos
fld
sbb
icebp
xlat
es
add
js
cs
push
in
jo
test
mov
rol
jnp
xchg
loope
call
out
test
psrlw
push
loope
mov
jmp
pop
mov
cmp
popf
call
xor
sar
cmp
xchg
movs
pusha
lds
popf
push
sub
aam
ror
cmp
fstp
jnp
rol
cmp
gs
test
ins
lahf
js
les
pusha
mov
xor
add
mov
mov
adc
mov
xlat
pop
lea
shr
addr16
push
fcom
inc
fstp
stc
rcr
jno
rcr
lock
(bad)
xor
dec
sub
ficom
add
gs
mov
inc
jb
hlt
pop
sub
imul
shr
mov
add
mov
cmp
pusha
inc
mov
imul
(bad)
sub
ret
sub
(bad)
xchg
jg
imul
cdq
jg
mov
mov
adc
repz
cwde
sub
jbe
push
jl
pop
cmp
addr16
cmc
xchg
sub
add
out
xchg
fucom
xchg
jbe
pop
(bad)
lea
cmp
add
aas
cs
lea
mov
fst
stc
or
xchg
push
and
cmc
fnstenv
add
cld
cld
mov
lahf
in
bound
call
(bad)
movs
xor
ret
out
cmp
mov
jae
scas
(bad)
sub
push
push
cli
jb
dec
(bad)
and
sub
xchg
adc
push
(bad)
adc
mov
in
inc
sub
or
popf
jmp
in
std
inc
pop
inc
mov
adc
(bad)
es
push
mov
jbe
mov
dec
mov
mov
mov
xchg
inc
icebp
cmps
xchg
mov
or
xor
cli
imul
loope
lods
xchg
dec
mov
jp
and
jl
mov
mov
fs
daa
iret
add
ins
mov
aad
jle
mov
shl
add
dec
sbb
fcmovne
repz
and
or
retf
lock
icebp
int3
mov
xchg
(bad)
sbb
dec
scas
cmp
lock
cmps
pushf
ins
mov
(bad)
push
jb
dec
adc
and
hlt
pop
ja
add
or
rcr
jp
xchg
mov
pop
ret
xor
or
jmp
sub
cwde
mov
sahf
rcr
jbe
aad
inc
jmp
sub
pop
(bad)
dec
fs
inc
mov
fst
fldenv
and
rcr
mov
sbb
or
mov
pushf
cmp
test
sub
pop
inc
test
xor
push
xchg
jns
push
sub
dec
fsin
je
mov
push
dec
stos
pop
out
test
loop
clc
adc
sahf
ss
push
pop
jmp
test
mov
nop
mov
cmp
inc
cs
jl
inc
pop
lock
loopne
xchg
daa
jp
ss
stc
mov
push
ret
xchg
dec
rcl
sub
int
cmp
dec
dec
bound
(bad)
push
je
addr16
lods
inc
pusha
add
or
dec
dec
or
mov
pop
data16
mov
inc
cli
pop
aad
sub
fs
loopne
(bad)
icebp
xchg
pop
pop
sahf
rol
packsswb
jae
(bad)
popa
imul
add
stos
fwait
jmp
cmc
inc
lods
push
mov
inc
jno
push
xchg
jge
push
sbb
(bad)
mov
pushf
sti
jge
out
and
or
push
pop
js
pop
sbb
push
dec
sbb
xor
or
cmp
gs
push
jmp
pop
mov
inc
add
das
je
aad
out
popf
or
jne
(bad)
fadd
stc
stos
fnstcw
jnp
mov
cmp
cdq
pop
inc
arpl
movs
les
aam
pusha
mov
mov
retf
out
and
xor
mov
std
dec
sbb
adc
aam
xor
or
sub
outs
or
or
cli
ds
mov
mov
(bad)
jg
adc
shl
push
divps
mov
add
dec
xchg
(bad)
push
mov
cmp
mov
fdiv
popf
cmp
(bad)
loop
movs
sbb
pop
adc
je
or
dec
cmps
jecxz
dec
mov
cli
sbb
mov
out
xor
jge
xor
fld
mov
shl
sub
mov
je
rol
xor
ret
pop
pop
push
xchg
dec
test
in
adc
inc
cdq
xchg
dec
jne
fwait
mov
mov
inc
fistp
sahf
mov
out
jno
inc
mov
jb
call
cmp
cmp
pop
pop
test
mov
popf
movs
push
(bad)
(bad)
xor
popf
xchg
jnp
in
fistp
mov
pop
dec
pop
push
sahf
add
inc
aas
push
and
in
lods
or
arpl
scas
pop
cs
xchg
int
xchg
xchg
shl
jb
pop
in
and
jae
pop
out
jns
bnd
clc
bt
je
test
pop
lods
ins
loope
shl
jmp
xchg
es
lea
aad
test
fdivr
xchg
xor
retf
ds
mov
nop
mov
adc
popf
mov
inc
jno
and
lock
xchg
jno
jns
loopne
pop
shl
int
(bad)
inc
push
mov
lahf
mov
ret
pop
movs
jb
movs
jecxz
(bad)
dec
stos
push
lods
scas
movs
inc
pop
push
mov
or
les
and
cs
xchg
mov
mov
loop
adc
fld
xchg
loope
mov
xor
jns
xchg
imul
adc
push
add
fidiv
mov
aad
push
sti
pop
daa
and
neg
sub
out
mov
mov
xchg
test
pop
rcl
cmp
std
dec
jg
xor
repnz
sub
test
sar
cwde
jmp
(bad)
out
into
popa
movs
fsubr
mov
mov
scas
or
push
(bad)
adc
repnz
lods
stos
gs
or
jo
xor
add
lock
popf
int
adc
imul
lea
xor
dec
xor
cdq
mov
and
mov
jmp
rep
xor
cmps
rcl
pusha
mov
fstp
mov
popf
fidiv
xchg
(bad)
lock
xchg
push
fisttp
fisub
out
imul
test
xor
stos
fist
or
and
adc
js
cdq
popf
push
adc
jne
out
jbe
or
call
rcl
cmp
or
push
mov
ds
mov
push
inc
adc
sti
pop
fs
and
cld
retf
loope
sub
loopne
cmp
sub
pop
imul
dec
cmp
aad
aad
popf
sbb
mov
pusha
or
cmp
sbb
shl
add
or
xor
outs
cwde
outs
shl
and
cmp
sub
pop
imul
test
add
cmp
pop
pop
push
ror
mov
cmp
inc
jno
xlat
and
mov
pop
ins
jae
jno
sub
adc
in
pop
cs
dec
jl
test
ss
sub
ss
lods
arpl
jmp
mov
out
jae
adc
mov
das
mov
or
ret
or
jno
xor
or
test
push
mov
ins
cwde
mov
xchg
adc
into
repnz
gs
or
adc
std
sar
xor
and
out
ins
mov
mov
in
js
or
push
clc
or
stc
pop
test
sub
data16
std
push
mov
or
stos
dec
adc
test
mov
mov
mov
ins
fwait
add
je
jnp
cld
sub
pop
test
(bad)
call
data16
cmp
aad
js
xchg
(bad)
in
add
xor
add
repnz
mov
pop
xor
pushf
cmc
push
loop
call
dec
fiadd
push
call
test
jo
sti
cmp
xchg
cdq
pushf
jle
adc
(bad)
push
jno
sub
pusha
shl
sub
jge
inc
fs
inc
sub
fist
adc
sub
test
sahf
(bad)
in
mov
in
or
imul
jle
sbb
ret
imul
jg
lea
jbe
push
rol
cmp
pop
dec
(bad)
jg
cmp
xchg
pushf
cdq
add
lea
mov
shr
ror
(bad)
xor
inc
dec
sub
jae
sahf
outs
aam
pop
gs
int
rol
inc
fdivr
or
xor
pop
dec
lock
jo
lds
test
(bad)
repz
es
pop
fldenv
arpl
lahf
(bad)
mov
push
ret
mov
imul
test
push
jmp
mov
or
movs
mov
js
pop
inc
adc
(bad)
fist
data16
dec
jecxz
inc
nop
lock
mov
mov
mov
xchg
movs
test
pushf
imul
adc
push
adc
jecxz
xor
adc
shl
pop
ror
cmp
xor
adc
pop
int
clc
ins
xchg
dec
cmc
mov
cdq
lods
ds
loopne
loopne
lods
xor
lea
mov
jle
xlat
mov
mov
test
std
scas
es
dec
mov
in
popf
dec
xchg
scas
or
mov
or
or
dec
loopne
mov
mov
xchg
dec
cmps
frstor
das
inc
(bad)
test
jo
call
shl
loop
xchg
out
pop
adc
xchg
or
fwait
mov
into
sbb
cmps
lahf
jnp
test
enter
mov
pop
sti
pop
xchg
mov
fwait
ret
popa
sahf
test
ins
mov
aas
cs
cmps
jmp
test
mov
sbb
jp
ret
mov
(bad)
cmps
sti
jmp
aas
call
mov
and
pop
dec
jns
shl
adc
jmp
jbe
in
dec
(bad)
push
add
inc
mov
fdiv
add
repz
shl
(bad)
jp
mov
in
jl
pop
pop
mov
movs
xchg
ins
pop
fcomp
popf
aam
aam
ret
dec
xchg
and
bound
arpl
xchg
sbb
not
xor
jle
repz
mov
dec
mov
sub
(bad)
push
lods
xchg
shl
pusha
int3
iret
mov
inc
dec
out
sbb
add
fidivr
mov
fisub
pop
stc
xlat
mov
fidivr
xchg
cmps
dec
or
sar
out
ja
test
in
and
popa
mov
pusha
xor
mov
fistp
and
mov
lea
dec
enter
ins
lds
das
retf
push
into
pushf
or
test
add
jae
test
movs
(bad)
jecxz
add
retf
aad
arpl
ins
cmp
mov
push
aam
sub
lods
mov
inc
push
or
xor
(bad)
lods
or
pop
loope
test
(bad)
mov
(bad)
push
retf
call
ins
aaa
iret
div
mov
sti
add
adc
pop
int
in
imul
mov
mov
mov
sbb
rcl
cld
dec
sahf
inc
or
mov
in
fs
push
xchg
fild
pop
iret
lock
retf
and
xor
push
xchg
call
(bad)
popf
aaa
shl
jecxz
or
inc
mov
bound
popa
scas
jno
mov
mov
nop
mov
call
movs
mov
pop
idiv
push
mov
stc
push
loope
xor
sbb
ret
xchg
mov
scas
fs
add
pop
jl
fnstsw
mov
int3
out
push
sbb
inc
adc
movs
and
push
mov
xor
xchg
dec
ins
add
pop
inc
xchg
repnz
adc
shl
adc
mov
xor
sub
push
into
inc
sar
lods
sbb
cmp
mov
in
add
inc
retf
mov
xchg
inc
and
int3
dec
mov
fcmovnu
or
xor
lahf
(bad)
jle
test
loope
push
mov
popf
fndisi(8087
rcl
xchg
dec
movs
data16
scas
xor
or
jnp
pop
test
dec
sbb
pushf
mov
cdq
xcrypt-cbc
cmps
push
mov
iret
stc
jbe
sbb
push
push
stos
fldenv
data16
pop
int3
(bad)
fwait
or
ret
fistp
push
mov
mov
sahf
inc
rcl
ja
test
push
ficom
xor
popf
sbb
mov
movs
fmul
xor
shl
add
enter
cld
add
mul
iret
mov
movs
jns
sub
xchg
mov
mov
mov
mov
jg
pop
pop
aas
inc
rol
enter
jb
scas
or
mov
xor
and
mov
mov
cmps
sti
cmps
add
xchg
push
or
data16
mov
sbb
or
dec
fisttp
scas
mov
jg
mov
aaa
push
cmp
sub
je
sbb
adc
mov
jp
fwait
jbe
mov
retf
or
cmp
fadd
cmp
push
int
cmp
lods
xor
jno
test
cmp
popf
jbe
fbld
mov
inc
or
jnp
scas
mov
scas
cmps
pop
dec
push
outs
cmp
add
jae
pop
gs
aam
icebp
in
add
outs
pop
test
mov
push
and
outs
dec
and
mov
out
mov
je
xchg
mov
lods
sub
mov
outs
mov
(bad)
neg
adc
jge
mov
imul
jle
add
push
cmp
cmp
add
(bad)
les
lds
xchg
sbb
xlat
push
(bad)
icebp
pop
enter
pop
int
add
test
jne
std
mov
cld
test
mov
clc
xor
mov
fcmovnu
loop
xor
sbb
ins
jge
in
or
push
ins
je
sub
jb
add
ja
xor
add
ins
adc
test
xchg
mov
jg
xor
jecxz
je
mov
inc
xchg
jl
popa
bound
movs
pop
push
jb
shr
das
mov
gs
pushf
dec
jmp
fs
xor
or
push
lds
pushf
(bad)
aad
gs
jae
xor
ja
jno
and
dec
xchg
ss
adc
ins
fidivr
inc
popf
lea
xchg
pop
mov
lahf
sub
xchg
jge
fist
pop
popf
mov
mov
(bad)
pop
push
xchg
mov
int
mov
jbe
je
nop
adc
xlat
pop
pop
in
shr
pop
ins
fdiv
fild
int
push
(bad)
fild
push
mov
addr16
imul
pop
jb
rcl
(bad)
in
call
cwde
cmp
outs
lods
les
jbe
inc
shl
aam
(bad)
jle
hlt
popa
das
loope
mov
data16
sar
xchg
add
push
add
pop
and
int
jg
jle
mov
in
cmp
fsub
mov
lea
ss
or
inc
std
jnp
fistp
add
repnz
add
fsubr
mov
or
pushf
inc
or
xchg
mov
pop
lock
xchg
(bad)
(bad)
call
cmp
add
cmp
rcr
(bad)
daa
ret
xor
cs
pop
imul
ficomp
ds
mov
push
and
mov
ja
push
in
jge
cmp
std
sti
push
xchg
or
jns
cld
sahf
or
cmp
pop
ret
add
stos
retf
xchg
mov
sbb
mov
mov
jbe
stos
dec
in
mov
mov
jne
xchg
mov
sub
push
je
je
pop
xchg
mov
pop
enter
jne
dec
icebp
in
call
(bad)
xchg
in
fist
hlt
adc
jp
movs
nop
jo
mov
outs
dec
fadd
into
cwde
js
xor
or
neg
xchg
cwde
es
jae
call
add
adc
test
xchg
ja
or
aam
mov
or
jge
push
pop
push
mov
adc
xchg
jl
push
cmps
out
jns
dec
jmp
pop
pop
aaa
pop
xor
sbb
sub
ss
pushf
pushf
mov
inc
(bad)
pop
stos
mov
dec
or
cmp
pop
js
dec
dec
adc
xchg
xchg
mov
inc
and
or
xor
imul
xor
mov
mov
sti
sahf
mov
pop
add
(bad)
retf
ja
sbb
mov
pushf
xchg
ret
popf
mul
or
je
xchg
cmps
movs
jl
push
xchg
xlat
jp
imul
retf
inc
cli
sti
shl
or
cmp
ret
lods
push
mov
fs
lahf
loope
xchg
fldcw
push
ret
cmps
mov
aam
aaa
aaa
ret
push
or
pushf
fldcw
push
mov
push
aam
jge
mul
mov
pop
popf
push
pop
xlat
sbb
inc
popa
inc
mov
ja
scas
dec
mov
push
iret
xchg
int3
and
retf
(bad)
sahf
sub
lods
(bad)
jnp
xor
sahf
xchg
xchg
fs
mov
popa
pop
ins
mov
cwde
mov
cmp
les
adc
in
into
out
arpl
ja
or
mov
jae
pop
add
icebp
xchg
sbb
xor
(bad)
outs
les
mov
pop
xchg
xlat
cmp
jb
repnz
add
cmp
popa
popf
jbe
inc
popf
mov
ins
outs
dec
leave
pop
jg
shl
cmp
mov
lock
fisubr
lods
dec
mov
add
dec
push
push
cdq
fs
add
fsub
jo
imul
mov
cmp
mov
push
(bad)
jo
and
mov
shl
jnp
nop
adc
rcl
lds
cmps
clc
sub
pop
cmps
pop
sbb
rol
loope
addr16
imul
push
jae
dec
add
pop
cwde
dec
dec
(bad)
leavew
imul
movs
mov
fdivrp
or
js
push
test
push
lods
pop
xchg
pop
jbe
loope
mul
addr16
rcl
sub
add
ds
fucomi
nop
inc
xchg
test
fdiv
int3
call
mov
fild
(bad)
push
mov
sbb
fmul
mov
imul
pusha
leave
daa
mov
mov
pop
(bad)
mov
pusha
cwde
inc
dec
ja
pop
jle
pushf
dec
call
popa
add
ins
xchg
rcr
lahf
jnp
adc
scas
addr16
imul
aas
bnd
rol
xor
cld
les
fisub
fdivr
jge
mov
stos
out
xchg
jl
jns
call
mov
int3
sbb
or
loopne
cmps
xchg
xor
cmp
dec
xchg
cli
or
ror
mov
and
jb
rol
fndisi(8087
pop
outs
sbb
pop
sub
pop
lahf
das
push
push
nop
fwait
add
aam
jb
inc
sbb
mov
pop
out
pop
shr
pop
mov
mov
sbb
and
pop
jmp
aas
xor
outs
jl
(bad)
int
push
pop
out
xor
(bad)
mov
pop
add
js
fs
clc
fiadd
push
xchg
dec
fistp
test
cmps
lea
mov
js
pop
xor
adc
(bad)
adc
pushf
imul
ins
xchg
gs
aad
dec
mov
out
inc
mov
sub
sahf
dec
in
dec
or
push
sub
lods
fisttp
cwde
test
dec
call
retf
sti
push
xchg
test
inc
add
cmps
lds
rol
popf
jmp
xchg
add
xor
(bad)
dec
cmp
cld
jge
ficomp
pop
dec
imul
mov
loopne
repz
rcl
pushf
into
mov
sbb
pop
in
fisttp
dec
rcr
xchg
in
pop
mov
or
push
stos
dec
fiadd
inc
fmul
xchg
jne
jmp
test
or
dec
sub
add
popf
push
xchg
aas
loope
cmp
int
mov
lods
scas
dec
fstp
mov
jno
sub
jmp
mov
adc
ret
sbb
push
push
dec
mov
xchg
adc
ror
xor
mov
mov
push
mov
cmc
es
xor
fisub
cmps
and
test
mov
jecxz
mov
ss
ror
mov
or
retf
dec
mov
inc
cdq
mov
shl
enter
std
dec
retf
jno
sbb
rol
adc
nop
jns
jmp
pop
jae
dec
scas
pop
aas
(bad)
int3
add
repnz
inc
lods
inc
inc
mov
mov
dec
repz
pop
neg
sbb
imul
mov
or
nop
dec
outs
movs
pushf
ins
sub
mov
sbb
popf
test
test
push
push
test
repz
jnp
fiadd
(bad)
xor
fadd
inc
jl
(bad)
pop
sbb
cdq
dec
fstp
(bad)
hlt
and
or
push
jo
mov
dec
xchg
xor
loope
repz
xlat
fcmovne
mov
call
les
pop
cld
cmp
mov
fimul
sbb
in
cmp
pop
test
cs
scas
sbb
xor
inc
mov
stc
pop
mov
test
cmc
xchg
in
nop
cli
je
enter
mov
sbb
or
xor
add
mov
ins
outs
mov
popf
xor
ja
adc
xchg
dec
inc
xchg
mov
add
nop
cmp
enter
lahf
cmp
sub
xchg
lahf
scas
adc
(bad)
pop
fld
sub
nop
mov
pop
push
movs
xor
fnstcw
inc
ins
lea
pop
in
jmp
adc
add
cmps
inc
push
jg
pop
adc
repnz
popa
mov
mov
(bad)
movs
inc
in
in
jno
sar
push
aas
ficom
int3
in
jg
add
out
rcr
or
jb
dec
pusha
xor
dec
cld
mov
mov
jo
aad
dec
movs
ss
test
test
adc
sbb
cmps
cmp
ret
pusha
lea
rcl
mov
call
dec
stos
hlt
bound
push
lahf
in
fld
into
adc
push
xchg
test
xchg
aaa
add
(bad)
cdq
or
imul
ret
jg
repz
add
fwait
pop
(bad)
jo
loopne
int3
clc
and
pop
(bad)
pop
or
mov
jns
gs
outs
dec
jp
cmc
adc
jg
lods
ins
fsubr
xor
mov
mov
es
mov
mov
pop
loopne
rcr
mov
inc
repnz
mov
push
xor
push
test
fmul
sbb
add
jns
cld
add
pop
(bad)
jecxz
inc
jns
into
rcr
scas
(bad)
fist
adc
data16
int
and
mov
fimul
or
push
jo
fld
dec
inc
xchg
mov
push
mov
mov
mov
push
xlat
test
fcom
add
or
add
in
push
sbb
and
xchg
mov
or
or
sbb
fimul
add
fmul
daa
pop
cmp
xchg
sub
pop
pop
shl
cli
jno
pop
jmp
pop
jnp
pop
cmps
je
leave
inc
fild
adc
cld
pop
retf
ficomp
xchg
fisubr
pop
or
and
pop
shl
jl
xchg
dec
add
mov
pushf
stos
ret
jb
jb
and
dec
(bad)
xchg
xor
ds
mov
lods
cmp
ds
or
arpl
rcr
pop
mov
cdq
dec
mov
das
cli
xor
ror
imul
hlt
dec
gs
test
cmps
test
lods
aaa
sbb
dec
pop
loope
and
pusha
lods
xchg
cmp
shr
test
(bad)
fs
shr
push
mov
movs
shl
in
aam
ja
sar
sar
mov
dec
add
adc
sub
sbb
(bad)
xchg
(bad)
(bad)
in
movs
adc
sbb
push
xchg
loope
xchg
jl
adc
inc
sbb
sbb
jecxz
mov
dec
pop
pop
dec
sbb
mov
xchg
fmul
mov
xchg
daa
mov
js
dec
std
push
cmp
mov
lahf
shl
lea
ins
xor
out
xchg
movs
cmp
mov
(bad)
stos
push
test
mov
js
je
sbb
stc
mov
ret
jle
mov
cmp
push
ss
mov
fadd
(bad)
sub
jo
daa
pop
mov
xchg
push
popf
ins
js
or
xchg
rcr
mov
or
ins
jmp
shr
jmp
inc
int3
jmp
ja
lock
stc
push
rol
jns
into
add
rcr
scas
cmps
(bad)
rcr
adc
and
mov
outs
sahf
push
and
jg
jae
xchg
push
cmp
scas
jbe
movs
adc
cmp
sub
fild
mov
mov
arpl
dec
pop
imul
rcl
das
dec
adc
pop
sub
fld
fild
je
jbe
ror
pusha
dec
retf
shl
mov
jecxz
push
jmp
push
mov
xor
inc
or
sahf
xchg
push
mov
and
iret
mov
cmc
(bad)
sub
adc
in
mov
(bad)
push
add
add
sbb
popa
or
add
nop
jb
xor
xchg
sbb
sbb
pop
test
and
retf
dec
adc
enter
mov
adc
retf
pop
pushf
mov
imul
mov
inc
xchg
jp
fisttp
test
retf
loopne
test
pop
add
sbb
mov
cmp
mov
mov
or
xor
les
lods
lea
and
xor
or
nop
add
outs
iret
pop
daa
ficomp
adc
jbe
iret
test
cmp
pop
or
lea
sbb
xchg
add
retf
ret
push
out
loope
jo
(bad)
jecxz
repz
das
push
adc
mov
and
vcvtdq2ps
xchg
pop
push
jmp
pop
xchg
inc
mov
pop
adc
or
(bad)
icebp
ja
scas
ret
test
jmp
and
(bad)
xchg
push
sbb
lods
xchg
cmps
sti
shr
xchg
in
call
int3
sub
(bad)
dec
jp
aas
int3
xchg
scas
data16
repnz
rcr
cmp
fisttp
dec
sub
dec
xor
ins
jb
in
mov
adc
nop
fwait
test
pop
sub
out
mov
add
aam
in
in
push
xchg
mov
push
mov
lea
dec
js
push
mov
mov
clc
iret
jp
(bad)
jmp
or
imul
jno
jne
xchg
enter
inc
pop
jle
les
jecxz
je
cmp
adc
retf
push
int
call
cmp
inc
je
push
lods
int3
inc
fistp
adc
into
retf
pop
test
mov
test
and
push
pop
or
leave
jno
push
xor
inc
mov
sar
addr16
add
mov
movs
test
loopne
loopne
(bad)
mov
arpl
es
fcmovne
test
mov
pop
adc
push
xor
pop
and
mov
ds
push
mov
movs
gs
pop
aam
inc
jno
mov
sbb
pop
xor
dec
adc
and
mov
stos
nop
lods
repz
pop
lods
dec
sbb
into
outs
jo
aad
ret
mov
mov
mov
test
mov
jmp
retf
and
loop
mov
cmp
imul
jge
nop
sbb
pop
push
jl
dec
mov
mov
mov
inc
pushf
icebp
or
mov
mov
cdq
jae
inc
popa
pop
inc
jge
sbb
call
cwde
addr16
test
mov
and
stos
out
or
mov
lods
mov
enter
cld
ret
stos
and
fist
shl
mov
movs
call
jl
test
inc
sar
inc
xchg
jmp
add
imul
jo
jne
dec
iret
jle
mov
test
mov
push
clc
inc
ins
push
(bad)
fistp
outs
pop
push
adc
cmp
or
xor
test
fistp
xor
les
sub
dec
(bad)
gs
jg
mov
test
int
lods
pop
mov
clc
fidivr
jnp
sar
inc
inc
(bad)
mov
jne
dec
xchg
dec
jnp
dec
mov
xor
mov
adc
pop
into
pusha
sbb
cdq
dec
mov
aas
cmp
xchg
shl
xchg
mov
neg
leave
sub
push
cmp
not
push
or
jne
out
push
lock
sub
repz
mov
fcomp
sub
mov
pop
jge
and
mov
shl
jmp
imul
aam
sahf
dec
ret
retf
push
push
lahf
cld
xchg
push
scas
das
cdq
mov
fwait
mov
pop
and
lock
movs
or
movs
push
jae
pushf
adc
mov
adc
push
sub
lea
scas
adc
iret
inc
pop
jno
mov
loope
fldcw
mov
pop
test
ret
xchg
pop
bound
lods
pop
stos
add
cli
sub
gs
mov
push
out
ds
out
xor
scas
jp
xor
adc
(bad)
das
jb
movs
sub
outs
pop
js
mov
ror
imul
mov
shl
mov
loope
mov
push
push
(bad)
loopne
pop
arpl
pusha
push
push
stos
push
or
jne
pop
sub
pop
fstp
popf
mov
into
sbb
sbb
and
arpl
lds
arpl
ret
fistp
cmp
pop
icebp
add
cmp
fs
pop
ret
enter
mov
out
or
mov
fnstcw
test
and
sahf
push
pop
pop
into
add
pop
xor
inc
pop
das
scas
mov
sub
sbb
mov
popf
fnstsw
daa
aam
sub
int
and
adc
pop
jae
dec
sbb
and
mov
sahf
movs
dec
pushf
inc
out
dec
xor
add
jns
pop
sar
lss
aad
mov
or
sub
dec
jo
xor
mov
loopne
cld
test
xchg
dec
mov
ins
loopne
cld
pop
or
pop
adc
xor
pop
cli
mov
adc
fidiv
mov
(bad)
mov
cmp
nop
and
inc
xor
ja
(bad)
pop
mov
mov
mov
jae
jae
xchg
pushf
js
sbb
neg
imul
ret
icebp
and
inc
cdq
cmp
ret
aaa
cmp
add
cli
out
mov
out
sbb
pop
imul
cmps
jg
aad
ss
xor
sbb
fptan
cmps
push
xchg
inc
retf
adc
es
int
inc
jle
jb
cmp
stos
stos
pop
xchg
sahf
out
jbe
scas
sub
in
mov
rcl
(bad)
xchg
dec
xchg
pop
stc
cmp
std
loope
pop
cmp
je
mov
sbb
mov
cmc
out
(bad)
pop
or
jmp
aaa
xor
adc
jecxz
pusha
jg
outs
retf
call
sub
fcom
je
sub
or
or
cwde
push
sahf
bt
outs
cmps
je
adc
std
and
stos
sahf
push
scas
cmp
addr16
aad
xchg
jp
sti
into
(bad)
or
xor
sbb
idiv
push
xchg
push
jge
push
dec
xchg
xchg
mov
jmp
or
jnp
mov
mov
js
xchg
jp
pusha
loope
add
clc
xor
stc
bound
sbb
adc
mov
movs
adc
pusha
push
add
loopne
xchg
test
xor
imul
lock
xor
sbb
clc
enter
dec
adc
mov
xor
jo
(bad)
xlat
call
adc
mov
pop
popa
out
mov
or
les
and
sub
xchg
clc
or
aas
push
fwait
hlt
pushf
fcom
or
cmps
lods
fwait
adc
push
enter
sbb
add
jmp
test
mov
pop
ficomp
out
dec
sub
add
and
push
sub
pop
xchg
sar
mov
cdq
pop
adc
movs
jge
movs
mov
inc
lods
inc
or
and
cmc
imul
mov
jb
mov
jge
outs
and
pushf
retf
fdivrp
gs
imul
ins
jge
push
mov
xchg
or
icebp
lahf
mov
popf
jno
nop
mov
mov
lahf
push
sub
aad
and
xlat
pop
je
dec
sbb
xchg
stc
addr16
test
test
jbe
jge
mov
mov
movs
stos
loope
icebp
jnp
sbb
pop
data16
ja
jmp
rol
jns
les
enter
pop
hlt
inc
pop
jnp
sub
pop
mov
xchg
xchg
pop
cmp
sahf
push
sub
aam
imul
cmp
fimul
sub
add
jb
into
xor
xchg
add
cs
add
in
mov
out
mov
xor
add
inc
cmp
jbe
mov
nop
xchg
inc
jmp
add
xor
cwde
xor
icebp
inc
bound
clc
sub
cwde
int
and
dec
fld
and
idiv
mov
mov
and
popa
or
dec
mov
mov
jmp
xor
std
jae
or
dec
ds
pop
popa
dec
daa
jp
and
inc
fisttp
inc
mov
inc
xor
xor
lods
jns
add
pmaxsw
dec
cmp
xor
and
jne
adc
fstp
xor
or
popf
sub
fwait
mov
dec
imul
sti
aad
dec
enter
mov
mov
pop
pop
mov
cmps
enter
pop
or
(bad)
shl
(bad)
aas
sbb
push
imul
js
pop
ret
push
sar
push
hlt
jb
fcomip
pop
fdivr
(bad)
repz
mov
pop
cld
mov
mov
and
inc
or
push
retf
scas
inc
jecxz
xor
mov
push
mov
fs
sbb
xor
loope
lea
cmp
fisttp
leave
into
and
jmp
mov
and
arpl
data16
inc
jb
ss
outs
adc
icebp
sub
call
cmc
mov
cmps
mov
pop
iret
aam
jge
mov
ret
sub
xchg
push
mov
or
ficomp
loopne
xchg
int
dec
push
test
lods
lea
data16
ins
sub
sub
hlt
icebp
out
and
sub
stc
leave
dec
mov
sbb
scas
xor
adc
aas
arpl
jmp
movs
push
mov
lds
in
lea
fcmovbe
std
retf
mov
cmp
mov
out
cwd
dec
mov
adc
fsub
pop
mov
mov
(bad)
jnp
cdq
mov
in
stc
clc
stc
ret
int3
add
mov
jg
ins
dec
cmps
icebp
lods
jnp
imul
adc
dec
add
cs
inc
scas
js
int
cli
fwait
mov
scas
into
stos
mov
mov
add
imul
lahf
jbe
aaa
cs
mov
fcmovne
sbb
ret
xchg
cmps
push
test
out
sbb
cdq
push
xchg
xchg
mov
pop
sti
mov
movs
shl
ficom
jmp
mov
push
into
jge
sbb
int
cmps
mov
xlat
lods
je
scas
ins
pop
imul
jae
fcmovnbe
je
or
popa
add
int
(bad)
sar
xor
jb
stos
nop
pop
das
fadd
repz
pop
xchg
sub
sahf
or
xchg
dec
pop
ds
aad
xchg
js
or
out
dec
xchg
adc
mov
ins
mov
pop
ds
(bad)
mov
add
jle
jp
xor
xor
xlat
fs
js
add
aas
cmp
add
not
pushf
pop
pop
ret
repnz
ret
cmp
ficomp
mov
shl
inc
or
or
popf
jnp
bound
pop
push
fxam
jbe
lods
mov
dec
and
mov
inc
or
test
push
jne
xor
mov
cdq
cmp
push
adc
out
out
jmp
arpl
inc
test
loopne
fisttp
mov
frstor
movs
mov
int3
xchg
fild
fistp
dec
push
push
das
sbb
ins
sbb
mov
imul
mov
stc
mov
int
jle
test
pushf
push
ins
ret
jge
sub
fild
scas
outs
movs
cwde
mov
inc
lea
mov
push
ret
ins
jge
popa
adc
pop
cwde
test
inc
cmp
mov
(bad)
jb
adc
dec
ja
retf
(bad)
mov
xor
aam
pop
sub
jne
push
xchg
(bad)
popf
loopne
push
dec
pop
mov
scas
pop
retf
add
pop
add
mov
popa
cwde
fs
add
les
outs
mov
lahf
and
jg
js
imul
cmc
(bad)
sub
mov
xchg
sub
inc
adc
pusha
lods
mov
jmp
mov
sbb
push
ins
stc
mov
(bad)
xor
sub
mov
mov
popa
sar
ret
sub
(bad)
jns
xchg
mov
(bad)
in
mov
push
test
popf
movs
int
mul
add
jae
scas
or
jns
add
iret
inc
mov
aas
or
repnz
pop
imul
add
fcom
sbb
rol
xchg
hlt
xor
and
cld
cmp
or
pop
and
xchg
(bad)
xchg
jbe
stos
sub
aad
cmp
mov
(bad)
fsubr
cmps
push
ds
stos
int3
fiadd
(bad)
mov
mov
cmp
sbb
jb
jge
jmp
mov
out
mov
sbb
imul
or
pop
push
sahf
icebp
lods
dec
fcom
mov
aad
jns
and
adc
out
sub
shr
jo
jge
cs
popf
xchg
outs
mov
mov
mov
mov
mov
leave
enter
push
aaa
xor
cli
jp
int3
xor
mov
xlat
add
test
ret
aad
mov
mov
in
arpl
or
xchg
inc
int
jae
imul
ins
or
aad
or
push
scas
inc
ins
jmp
or
jp
out
pop
in
inc
xor
cld
mov
adc
outs
fcomp
adc
scas
shl
dec
dec
push
add
jecxz
retf
adc
jp
dec
cmp
mov
shl
push
mov
retf
jne
fidiv
inc
pop
inc
and
call
sti
push
gs
inc
or
xchg
pop
xlat
lods
popf
sub
jge
frstor
mov
and
pop
dec
rol
mov
(bad)
int3
and
pop
and
sub
rol
(bad)
stc
mov
ja
test
lea
dec
sub
mov
retf
push
push
icebp
cmp
mov
sahf
shr
fistp
push
xlat
xor
outs
push
retf
cwde
sbb
or
xor
and
dec
mov
movs
adc
inc
mov
cmps
cmp
mov
pusha
sbb
jg
sub
lods
je
xchg
pusha
jge
in
test
clc
je
cmp
jle
mov
ins
jo
lods
call
in
loope
sub
in
jb
loope
loope
jecxz
retf
jmp
rcr
mov
and
jecxz
mov
xchg
sub
popa
cmp
das
add
rcr
lods
ret
mov
jmp
and
mov
jmp
imul
pushf
lods
jp
js
mov
cwde
mov
pop
enter
dec
ins
dec
ja
movs
push
cmp
and
xor
(bad)
test
loope
pop
test
icebp
lds
jbe
mov
push
leave
lods
call
dec
xchg
mov
out
push
mov
mov
jl
scas
add
pop
mov
mov
retf
fwait
hlt
lods
pop
fstp
fsubr
outs
push
mov
imul
sub
into
jnp
stos
mov
(bad)
fimul
cmp
jge
inc
das
in
lahf
push
jb
loopne
in
out
push
out
and
add
ins
fst
repz
mov
stc
sar
repnz
sti
mov
sbb
xchg
dec
ret
dec
add
xor
sub
jle
adc
sub
jmp
pop
or
cmc
xchg
sbb
sub
ficomp
or
popf
sahf
sahf
xchg
in
xlat
pop
out
and
mov
lea
cmp
cli
mov
cli
adc
mov
add
std
jo
mov
addr16
and
dec
pushf
in
sbb
(bad)
mov
jnp
ja
add
push
cmp
(bad)
icebp
adc
and
std
push
push
and
xchg
xor
into
pop
jmp
dec
xor
mov
call
cmps
movs
adc
mov
nop
(bad)
xlat
dec
adc
outs
hlt
cmps
jmp
or
sub
icebp
arpl
iret
pushf
int3
pmuludq
lds
pop
jge
pop
or
hlt
pushf
hlt
add
dec
jb
ins
shr
jmp
add
cmps
ins
je
mov
mov
sub
data16
mov
xchg
and
ret
mov
fld
mov
imul
retf
push
ror
sbb
mov
int
jmp
loopne
xchg
sbb
sub
dec
push
(bad)
repnz
add
inc
push
out
push
inc
nop
inc
stos
sbb
add
imul
(bad)
jo
push
mov
jl
(bad)
sbb
inc
jmp
mov
adc
dec
mov
xor
push
and
rol
push
inc
xchg
and
(bad)
mov
test
dec
xchg
pop
and
mov
cmc
ret
stos
inc
mov
daa
nop
popf
push
aas
stc
fwait
movs
xchg
add
xchg
loopne
mov
xor
jns
pop
dec
xchg
mov
stos
stos
fimul
xchg
sbb
out
push
mov
jecxz
push
call
pop
cs
stos
xlat
fldenv
cmp
arpl
mov
or
in
sub
jmp
adc
mov
sub
ja
mov
push
sub
xor
mov
mov
cld
rol
or
nop
popf
xchg
inc
push
(bad)
push
test
pop
rol
lahf
cmps
retf
call
fs
int3
test
iret
std
stos
outs
lods
adc
jae
xchg
jge
pop
sahf
push
xchg
inc
popf
xor
mov
xor
jns
pop
dec
dec
sbb
cmp
add
push
and
sub
push
lds
sub
xor
dec
pop
movs
lock
xchg
push
das
dec
cmp
(bad)
xchg
(bad)
mov
sbb
push
or
xor
xchg
das
(bad)
aaa
jae
push
mov
mov
ss
clc
jmp
sbb
dec
push
mov
push
enter
push
pop
sti
int
lock
dec
push
sbb
add
add
pop
loop
sub
sub
sub
sahf
mov
push
ds
ins
mov
pop
rcl
rol
mov
cmc
mov
icebp
ret
pop
push
retf
pop
cli
movs
cmc
sbb
movs
nop
jp
inc
sbb
js
int3
in
mov
arpl
xchg
or
mov
push
ins
sub
add
lea
test
mov
cs
popf
or
int3
pop
mov
xlat
out
pusha
mov
rcr
push
mov
mov
dec
test
fst
inc
mov
xchg
adc
sbb
ret
fdiv
jne
cmp
cmp
imul
jbe
mov
mov
cmp
movs
test
popf
dec
scas
pop
stos
imul
cdq
push
inc
inc
and
out
int3
mov
or
adc
gs
mov
sub
adc
jl
xchg
sahf
xchg
aad
add
mov
add
(bad)
loopne
xchg
mov
adc
or
jne
pushw
xchg
std
fcomp
push
cwde
pop
mov
call
push
dec
std
dec
cwde
and
push
shl
ins
imul
jl
jnp
fwait
or
xchg
add
imul
bound
dec
outs
or
jno
nop
or
in
inc
cs
and
jle
mov
cmp
lods
dec
sub
ret
nop
sbb
stos
sbb
jb
or
mov
xchg
(bad)
jo
cmp
fcomp
jl
test
js
jbe
popa
imul
popw
xchg
sbb
in
push
out
xor
push
xor
sub
repz
not
and
mov
fisubr
je
mov
xchg
rcl
outs
adc
cmps
mov
ins
test
sahf
mov
inc
scas
inc
and
dec
sbb
inc
push
test
mov
cmps
jg
and
or
data16
outs
sub
xchg
pop
in
xor
stos
fcom
stos
sbb
(bad)
push
scas
jge
iret
inc
jl
jg
retf
mov
shl
movs
mov
or
dec
shl
outs
and
jbe
push
dec
sub
(bad)
(bad)
add
dec
xchg
inc
sbb
rcr
test
mov
pop
push
imul
and
sbb
push
ja
xchg
push
xchg
cmps
push
dec
(bad)
pop
ss
push
fcom
add
adc
mov
mov
sbb
cwde
adc
fisubr
xor
jp
in
cmp
pop
mov
push
jae
loop
jo
xor
out
jb
xchg
xchg
scas
es
fidiv
push
or
fld
jo
xor
jecxz
sahf
push
push
nop
jle
fwait
jno
outs
mov
pusha
pop
xchg
arpl
inc
push
mov
pop
and
pop
or
popa
fwait
retf
xchg
outs
shl
sbb
call
leave
jbe
sub
cmp
sti
imul
add
cmp
jmp
jmp
cmp
ds
sti
(bad)
xchg
mov
xchg
in
fnsave
not
(bad)
aas
push
cld
mov
(bad)
adc
scas
test
loope
dec
fisttp
adc
jl
sbb
dec
jo
call
mov
lea
jmp
add
pop
mov
inc
in
dec
xchg
sub
jbe
or
jne
pop
loop
pop
or
jge
fisttp
gs
xor
pop
nop
sar
aaa
sub
out
call
into
pop
int
(bad)
test
or
(bad)
pop
add
(bad)
iret
mov
in
mov
dec
jne
in
xchg
add
push
test
jl
cwde
pop
mov
mov
mov
jbe
dec
mov
add
xchg
fdivr
ds
dec
sub
add
add
mov
xchg
jecxz
mov
dec
jno
xchg
push
aad
inc
push
sub
imul
fsubr
inc
les
sahf
pop
pop
xor
addps
ss
pop
inc
mov
mov
ins
cs
(bad)
popa
aas
pop
test
push
cdq
or
xor
cmps
mov
sbb
lea
dec
sub
test
fcomp
mov
sub
sbb
(bad)
(bad)
pusha
int3
or
test
jecxz
mov
mov
pop
dec
mov
imul
jnp
sub
ror
or
adc
fild
pop
sbb
jle
pop
cld
add
std
sbb
ficom
je
pop
lods
and
and
mov
push
pop
or
jno
test
es
jo
jl
ror
pop
popa
pushf
pop
pop
adc
add
loope
jle
fsub
mov
popf
mov
xor
fs
je
cmp
cmps
and
sahf
test
aam
scas
push
pop
int3
mov
fwait
jp
xchg
mov
les
adc
aas
dec
ror
cmp
sbb
sub
xor
push
cmps
(bad)
imul
adc
pop
jmp
dec
call
or
mov
jne
rcr
jmp
imul
and
push
adc
in
jbe
xor
imul
cmp
outs
push
xor
popa
fnstsw
cmps
lods
mov
outs
cdq
or
gs
js
les
lock
xor
ins
arpl
cdq
imul
mov
out
xor
or
loop
shl
push
sub
popf
shl
repz
lock
fild
mov
repz
xchg
sub
cmps
daa
push
adc
cmps
or
lahf
xor
sbb
dec
adc
push
sbb
xchg
int3
or
mov
xchg
cmp
or
test
jno
aaa
(bad)
addr16
jbe
ror
xor
fisub
fiadd
jg
inc
inc
add
mov
xor
cmp
push
jl
std
movs
xchg
sbb
clc
add
mov
add
jmp
imul
add
jns
sub
fcomp
mov
cmp
sar
pop
pop
jo
iret
fcmovnbe
and
dec
jno
sub
mov
push
fwait
(bad)
(bad)
pop
inc
in
aas
push
bound
aas
push
jns
out
lock
mov
pop
or
in
sbb
mov
shl
shl
jl
or
fcmovne
mov
jg
xor
sbb
out
mov
outs
in
pop
push
rcr
and
(bad)
mov
movs
sub
mov
cs
inc
aam
ins
push
sub
shl
lds
jecxz
ins
xlat
push
mov
sahf
xchg
xchg
pop
(bad)
rcl
(bad)
push
lods
ror
mov
mov
mov
test
mov
sub
or
hlt
pop
lahf
nop
mov
cdq
add
mov
pop
je
xchg
div
test
loop
pop
mov
aad
sbb
mov
out
fs
xchg
or
call
jmp
or
ss
ror
aad
popf
sbb
pop
mov
aam
bound
leave
pop
mov
ficomp
stos
inc
dec
ss
push
sti
and
mov
out
nop
inc
cs
stc
push
inc
mov
push
xchg
jl
mov
add
dec
mov
mov
out
lahf
test
adc
call
xchg
sbb
lea
push
cwde
add
xchg
inc
xchg
jo
xchg
pop
xlat
rol
jo
pop
xlat
pop
jge
dec
lods
pop
pop
push
mov
int3
cmp
mov
push
push
into
xchg
mov
(bad)
addr16
mov
adc
pop
pusha
pop
push
call
scas
or
test
inc
std
or
pop
(bad)
popa
arpl
jns
stos
sbb
addr16
push
outs
test
jg
call
loop
push
and
mov
ins
fstp
sbb
(bad)
test
sub
xchg
pop
xchg
jbe
ss
xchg
and
loope
ror
mov
imul
or
fs
fimul
cdq
or
mov
xchg
mov
xor
fcom
mov
sub
xchg
dec
fldenv
pop
xchg
or
adc
ffree
shl
or
add
stos
les
mov
adc
inc
retf
inc
push
mov
clc
mul
js
ins
and
push
sub
lods
loope
sahf
fmul
movs
fild
adc
(bad)
lahf
outs
cmp
adc
imul
jb
arpl
rcr
test
mov
sub
xlat
and
setns
push
jmp
pop
sbb
xchg
(bad)
mov
mov
xchg
mov
push
pushf
lahf
mov
test
dec
or
mov
(bad)
scas
push
inc
sub
mov
data16
fwait
lods
outs
adc
sub
push
fdivr
pop
inc
leave
xchg
dec
sar
mov
hlt
pop
cmp
pop
ja
mov
jp
push
leave
pusha
rcr
cli
xor
push
and
fidiv
or
xor
iret
jbe
cmp
sub
es
xor
jge
pusha
imul
jl
sbb
cmps
adc
push
mov
add
loop
aam
xchg
inc
push
add
mov
stos
ret
xchg
mov
lahf
fstp
mov
lahf
mov
add
or
outs
daa
push
dec
jl
sbb
push
(bad)
cmp
(bad)
in
test
test
in
adc
hlt
pop
js
inc
sub
sub
popa
add
and
mov
aas
adc
jno
cmps
lea
sub
mov
out
out
lea
bound
stc
pop
pop
mov
adc
inc
mov
mov
jle
push
outs
aam
pop
push
outs
idiv
mov
jp
fs
popa
ret
test
push
push
mov
fist
ror
aaa
push
popf
and
or
sub
xchg
or
xchg
movs
jecxz
xchg
fist
pop
mov
out
loopne
mov
jne
dec
inc
mov
rcl
mov
add
sub
jbe
jno
add
add
mov
and
dec
aad
lods
mov
fadd
pop
jb
ret
nop
pop
and
mov
mov
shr
lds
xchg
pop
xor
and
sbb
cli
jmp
lea
sub
mov
mov
sub
js
rcr
call
mov
pop
and
pushf
loopne
mov
sub
popf
in
inc
rcl
mov
cld
fdivp
pop
leave
outs
fadd
cmp
push
ds
cwde
cmp
into
jmp
es
mov
cs
jns
lds
ror
(bad)
sub
aas
out
test
aam
(bad)
outs
retf
inc
pop
inc
pushf
sahf
stos
dec
cmp
xchg
and
call
in
aad
in
xchg
(bad)
mov
xchg
int
nop
sub
mov
cmc
cmpxchg
jg
adc
sub
clc
dec
pop
repnz
push
dec
cmp
in
cld
xlat
sbb
inc
pushf
iret
and
pop
mov
and
add
jo
(bad)
pop
je
dec
ins
xchg
loopne
sbb
test
clc
es
and
adc
rcl
out
jp
pop
xor
into
mov
inc
imul
iret
repz
dec
sub
(bad)
cdq
retf
shl
adc
sbb
iret
xchg
stos
mov
lods
pop
jo
or
fiadd
mov
push
sub
stos
sar
dec
nop
mov
ret
xchg
mov
mov
imul
imul
push
pop
and
sbb
sbb
js
add
ss
dec
mov
xor
(bad)
fnstcw
call
cmp
out
jge
pusha
pushf
cdq
stc
lahf
push
xchg
xlat
ds
jp
mov
pop
add
jmp
test
push
inc
fs
mov
push
jnp
and
aam
aam
xor
mov
mov
in
lock
movs
bound
(bad)
pop
inc
dec
cdq
jo
cmps
xlat
lock
les
ins
inc
imul
push
mov
clc
cld
dec
adc
rol
addr16
jno
push
push
imul
popf
jge
test
scas
in
nop
(bad)
pop
stc
fs
jmp
stos
sbb
and
jo
jge
inc
mov
xchg
sar
jbe
data16
fadd
je
jns
sub
ins
and
jns
mov
cmp
xchg
jmp
mov
or
push
dec
fisub
xor
push
lods
inc
sub
es
add
or
xchg
jbe
jge
gs
jg
out
xor
xchg
adc
cmp
ins
mov
dec
sahf
mov
repnz
cmps
out
xchg
adc
xchg
fisttp
inc
hlt
mov
jp
fist
cdq
ror
fcomp
int3
js
cmps
xchg
out
imul
mov
mov
add
cmp
imul
cmp
enter
into
imul
imul
push
push
jae
mov
(bad)
(bad)
inc
dec
(bad)
jmp
call
fisttp
rcr
je
test
mov
jo
pop
cmps
mov
adc
mov
aad
jecxz
mov
jl
iret
in
fwait
sbb
int3
pop
dec
addr16
aaa
ins
mov
pop
sahf
bsr
adc
mov
out
es
enter
mov
fnstsw
pop
mov
xchg
push
ss
cld
mov
sub
enter
idiv
mov
ret
jno
xchg
push
pop
push
mov
(bad)
push
xchg
out
adc
mov
pusha
in
jnp
push
int3
retf
cmps
pusha
movs
pop
sbb
mov
xchg
and
pop
call
jae
mov
push
jno
lahf
pop
pop
mov
adc
adc
js
mov
ins
sar
sbb
cdq
dec
and
mov
je
int
cwde
or
sub
es
icebp
shr
ror
les
iret
xor
xor
inc
jl
pop
inc
pop
retf
mov
sti
popf
sbb
aad
push
inc
push
xchg
mov
and
xchg
mov
cmps
ins
xor
stos
jge
out
sbb
lods
pushf
jge
mov
push
push
mov
mov
int
mov
jnp
sahf
nop
jae
push
lds
and
or
aas
movs
sbb
(bad)
mov
mov
push
(bad)
adc
sub
jge
popf
mov
sbb
cld
jecxz
and
mov
js
jp
retf
enter
cli
and
ret
ins
arpl
inc
pop
mov
mov
inc
mov
mov
jmp
xor
or
daa
pop
push
dec
clc
jge
js
mov
sub
popf
push
sub
push
sahf
xor
push
movs
test
popf
add
jge
aam
test
in
fsubr
ins
and
in
and
popa
pop
dec
fisttp
mov
(bad)
lock
leave
idiv
dec
sub
lea
jbe
jg
mov
stos
adc
movs
aam
jns
mov
xor
push
fs
mov
add
out
cld
mov
fsubr
mov
int
ret
lds
cmp
pop
out
or
dec
mov
xor
pop
in
fwait
dec
mov
ret
repnz
xchg
(bad)
inc
dec
into
or
pop
and
adc
and
mov
fwait
imul
and
push
pushf
jbe
mov
xlat
ret
mov
scas
jo
clc
das
(bad)
into
cmp
dec
fadd
lods
pop
dec
push
fisttp
push
mov
sub
push
aas
test
scas
lock
in
inc
int
repnz
inc
xor
xchg
leave
fldenv
or
push
or
sub
xor
or
and
push
jo
rcl
imul
adc
and
test
out
jmp
mov
aaa
cmp
ins
jmp
xchg
mov
ror
jge
mov
fstp
jp
imul
popa
jge
jno
and
mov
repz
lods
mov
ins
pop
xor
add
xor
(bad)
hlt
or
fist
jo
jbe
push
xchg
and
mov
loopne
adc
out
sbb
(bad)
push
fwait
stos
mov
ja
inc
cli
pop
xor
or
xchg
sahf
call
push
and
das
dec
retf
sub
mov
add
push
xchg
mov
mov
jns
inc
pop
imul
pop
fcomp
outs
js
mov
add
cmp
xchg
pushf
xchg
cwde
push
cs
add
int3
push
jo
xchg
retf
mov
dec
mov
sbb
cmps
and
mov
mov
cmp
mov
test
outs
push
or
pusha
shl
cmps
mov
out
fsubr
mov
loopne
push
pop
imul
pop
mov
pop
imul
jl
jl
ins
jmp
data16
adc
mov
mov
sub
mov
imul
dec
retf
cmp
stos
pusha
xchg
mov
inc
or
inc
or
push
sub
jle
xchg
dec
mov
or
xchg
fnstsw
inc
mov
mov
lock
test
ja
inc
jae
fst
gs
in
hlt
inc
sub
js
call
mov
scas
ret
lods
cbw
mov
sbb
addr16
lds
outs
jmp
test
outs
pop
xchg
pop
add
dec
mov
les
pop
jle
jno
adc
into
sahf
nop
mov
rcl
add
loopne
cdq
adc
mov
loopne
(bad)
sub
xor
adc
xor
dec
out
push
dec
imul
mov
jb
pop
test
or
pop
data16
mov
dec
xor
push
lods
minps
cmp
rcl
jmp
stos
push
dec
pop
sbb
adc
inc
cli
leave
jge
mov
sub
mov
or
pop
stos
adc
pop
pop
outs
mov
xchg
test
into
std
add
mov
ss
pop
lahf
pop
pop
pop
cmp
pop
mov
dec
imul
push
mov
mov
sbb
adc
movs
pop
push
sub
push
jns
idiv
into
xchg
add
xor
dec
mov
dec
mov
bound
test
je
clc
pusha
push
or
mov
sub
or
jmp
jg
or
xchg
xor
(bad)
push
or
(bad)
ds
sar
shl
in
test
into
pop
cmp
test
test
daa
pop
lock
xchg
stc
jge
pop
mov
adc
(bad)
bnd
in
dec
cmps
fsub
into
imul
mov
lea
call
stc
leave
in
jl
test
aam
inc
scas
sbb
in
fs
sub
push
mov
mov
fistp
lea
jno
stos
test
mov
mov
ffree
sub
int
loope
xchg
push
adc
jg
lods
cmp
sbb
adc
push
dec
mov
cld
dec
hlt
outs
movs
mov
push
cmp
mov
xchg
pop
imul
or
dec
inc
test
jp
mov
xchg
mov
jg
xchg
iret
test
outs
repz
mov
xchg
jg
or
mov
lahf
xor
cmp
pop
or
jg
xchg
dec
xchg
jbe
push
jo
nop
dec
pop
iret
iret
mov
mov
adc
fstp
imul
mov
sbb
femms
push
lock
js
and
inc
jmp
xchg
lea
mov
mov
dec
cmp
jo
adc
push
adc
and
xchg
jmp
movs
add
and
(bad)
int
sti
jmp
call
popf
push
lea
and
stos
loop
call
int
es
outs
xchg
test
div
in
cmp
xchg
pop
dec
push
mov
dec
dec
rcl
out
ret
sbb
jmp
or
mov
scas
and
mov
test
enter
leave
xor
push
(bad)
mov
icebp
mov
xor
add
sbb
stos
loop
leave
fnstcw
mov
into
pop
enter
add
sub
shl
imul
mov
imul
arpl
imul
mov
adc
and
mov
mov
mov
scas
mov
jl
in
fiadd
fbstp
push
pop
adc
sbb
jo
inc
pop
iret
cld
cmp
(bad)
jge
(bad)
mov
jnp
ins
addr16
dec
cmp
mov
icebp
cmp
lea
mov
fs
xor
push
mov
scas
das
xor
pop
jbe
xchg
jl
lods
cmp
jb
jge
rcl
aam
pop
sbb
mov
popa
(bad)
lods
(bad)
xchg
jge
test
das
lahf
mov
shl
retf
dec
add
out
xor
push
iret
test
gs
jle
jbe
cmps
pop
movs
push
add
popf
adc
shl
aad
mov
pop
xor
and
into
mov
push
mov
push
add
call
inc
or
(bad)
(bad)
shr
iret
iret
dec
mov
push
sbb
xor
jge
aas
adc
adc
sbb
add
ins
fwait
mov
imul
mov
jmp
mov
jge
xchg
mov
push
out
adc
mov
jle
jbe
arpl
xchg
xchg
retf
mov
adc
or
pusha
pop
ja
pusha
xchg
and
jecxz
mov
popf
and
arpl
cli
arpl
(bad)
push
test
adc
push
imul
out
cwde
scas
je
test
aam
ins
movs
ror
popf
inc
push
iret
jg
stos
(bad)
outs
dec
pop
mov
inc
xchg
or
test
push
aad
push
cmp
mov
shl
sbb
and
jmp
inc
mov
cmp
sub
test
lds
pop
fcom
jl
les
int
jnp
add
push
retf
ja
jno
xchg
push
and
mov
ret
mov
jns
(bad)
adc
mov
imul
(bad)
lds
and
outs
test
pop
mov
cmc
cmc
add
push
push
sbb
and
jmp
ins
dec
add
and
xchg
cmp
cmps
outs
aas
int
mov
imul
test
inc
jmp
js
and
ins
dec
xchg
adc
lock
cli
adc
push
mov
mov
jnp
es
(bad)
adc
and
imul
or
test
mov
out
pusha
cdq
pop
lods
or
sub
push
inc
xchg
pop
pop
fwait
xchg
adc
imul
mov
lods
push
pop
cmp
je
out
mov
call
pop
cmc
xor
mov
lea
lahf
mov
movs
mov
jo
xor
lods
mov
lock
lahf
mov
adc
pop
push
sbb
ins
inc
mov
or
xchg
adc
inc
test
and
pusha
sub
push
jle
push
inc
mov
jmp
shr
out
out
cmp
stc
dec
pop
out
aad
in
loopne
xchg
sbb
(bad)
shl
mov
cmps
push
push
(bad)
mov
data16
cs
lods
out
mov
fcmovb
lds
xor
mov
sbb
(bad)
retf
push
sbb
cmp
inc
into
xchg
int
ins
push
popf
sub
xchg
test
cmp
xlat
xlat
das
jbe
daa
nop
lock
mov
or
aad
and
push
int3
cmps
pavgb
in
int
pop
jp
fs
adc
inc
xchg
ss
push
mov
push
jne
ins
mov
cwde
xchg
test
pop
scas
mov
add
shl
je
in
(bad)
js
fwait
mov
aad
mov
sbb
push
fisub
(bad)
popf
or
pop
jge
push
push
cmps
jl
pusha
sbb
ins
cmp
mov
sub
jl
xchg
mov
adc
cmp
xchg
cmp
mov
pop
ret
hlt
pop
dec
push
jp
sbb
les
loop
mov
lock
ins
and
out
cmp
push
jge
xor
(bad)
adc
mov
jno
xchg
dec
rcl
sti
in
inc
mov
and
mov
scas
hlt
fisttp
js
add
mov
push
pop
aam
shr
jbe
ins
push
mov
in
lods
bts
sahf
and
inc
call
mov
popa
aad
jge
arpl
mov
mov
mov
fsubr
std
sbb
idiv
pop
xchg
adc
xor
dec
mov
inc
sbb
(bad)
jo
gs
js
retf
dec
inc
mov
or
mov
lahf
dec
lahf
sahf
xor
add
cmp
data16
ror
cmps
loop
out
xor
mov
jl
cwde
dec
jl
pop
cmc
in
mov
popf
jle
mov
or
(bad)
jne
addr16
les
sub
push
stc
mov
mov
add
mov
mov
jg
xor
sti
popa
xor
push
inc
test
jae
push
jne
fisttp
pop
and
lea
mov
xchg
push
iret
mov
inc
mov
or
cmps
sar
fild
sub
mov
je
inc
iret
jge
cmps
dec
loopne
and
jle
sub
mov
add
cmp
xchg
jae
nop
test
xchg
(bad)
je
ja
pop
xchg
fnstsw
adc
xchg
cs
push
(bad)
or
aam
bound
test
sbb
sbb
pop
jle
mov
shl
xchg
fdivr
test
or
jl
stc
imul
fist
mov
in
xchg
xchg
adc
neg
int3
add
add
jne
or
hlt
test
cmp
jl
ins
rol
iret
xchg
(bad)
std
sbb
dec
fnstcw
push
(bad)
fs
xor
xor
mov
cld
test
sub
nop
aas
(bad)
out
lahf
dec
adc
xlat
xchg
xchg
je
xor
sahf
pop
dec
jno
loopne
cs
mov
or
mov
jno
repnz
mov
cld
push
mov
stos
pop
mov
jo
aad
lahf
xchg
fisubr
xchg
mov
mov
mov
cmp
shl
and
cmp
retf
stos
vaddsubpd
mov
add
ins
popf
jge
xchg
add
dec
not
add
push
pop
cdq
imul
lds
jae
xor
popf
test
or
adc
push
ins
test
inc
out
mov
cli
fsubr
or
stc
xchg
addr16
addr16
jo
aas
mov
pop
mov
pop
jae
mov
cmc
arpl
out
inc
jmp
or
ss
shl
in
push
xchg
lds
push
shr
pop
int3
cli
scas
(bad)
adc
mov
xor
pop
mov
adc
(bad)
pusha
xor
lock
xchg
mov
ret
and
push
mov
pop
mov
inc
cmps
dec
jbe
outs
sub
push
pop
call
out
aad
mov
inc
adc
fcmovnu
imul
sbb
pop
mov
push
pop
fwait
mov
cmps
rol
call
jbe
rcr
mov
adc
jmp
cdq
mov
mov
xchg
outs
mov
fs
xchg
xchg
popf
mov
mov
or
inc
sub
hlt
std
fsub
gs
jo
or
int
sbb
hlt
(bad)
mov
xchg
push
popa
addr16
wbinvd
dec
outs
retf
sub
shr
dec
popf
rol
mov
jno
xor
sbb
push
std
mov
jge
fld
ror
xchg
pop
sub
mov
stc
xor
cmp
ret
punpckldq
push
mov
or
push
shr
jecxz
xchg
sahf
int3
mov
xlat
push
cmp
adc
or
and
retf
pop
test
mov
cmp
(bad)
cdq
jl
mov
int
aad
sub
add
jno
mov
dec
(bad)
(bad)
fadd
bnd
pop
xor
imul
push
mov
imul
(bad)
sahf
gs
jmp
sbb
rol
and
mov
xchg
mov
sub
ret
push
pushf
fist
or
repnz
adc
jg
jbe
adc
add
xor
or
jp
sbb
das
xor
js
addr16
xchg
xchg
ss
or
mov
jo
push
es
push
sub
pushf
test
push
mov
cmp
jne
shr
int
fldenv
gs
push
in
push
adc
icebp
sti
jmp
iret
pshufw
mov
jbe
mov
retf
dec
retf
loopne
mov
rcr
test
inc
xchg
outs
xor
xchg
mov
xchg
sbb
pop
sbb
loope
jnp
dec
jp
data16
hlt
lods
or
inc
mov
lock
jge
inc
mov
xor
xchg
xor
mov
mov
mov
cmp
sbb
test
icebp
mov
addr16
inc
sub
inc
and
ds
or
push
dec
xchg
sub
cmp
pop
ins
pop
inc
fdiv
or
ret
push
fld
fs
pop
jne
add
sub
jo
inc
push
leave
mov
xor
int3
jae
data16
mov
imul
or
add
ret
lods
xlat
mov
mov
cmps
mov
push
push
xchg
repnz
and
in
(bad)
je
hlt
out
xchg
inc
add
call
cwde
leave
cmp
dec
mov
shr
and
jmp
push
push
xchg
xchg
push
retf
or
pop
xchg
scas
xchg
aad
imul
outs
mov
popa
gs
cmp
xchg
add
inc
les
pop
jmp
mov
(bad)
ficomp
push
outs
jne
ret
bound
or
pop
push
mov
rcr
aad
ror
cmp
or
retf
call
or
sub
loopne
jp
mov
pop
es
pop
jb
dec
cmp
and
mov
pop
pop
movs
push
ret
stc
addr16
xor
dec
mov
movs
addr16
adc
out
clc
test
push
retf
pop
xchg
xchg
stc
not
cld
mov
sub
push
repnz
icebp
mov
pop
mov
push
mov
fld
popa
sub
push
add
nop
pop
or
scas
mov
and
mov
stos
lods
rol
aad
pop
adc
jg
out
sbb
cmps
mov
cmps
lahf
sub
adc
jne
jp
fwait
inc
push
(bad)
lahf
dec
int3
jp
fmul
and
jb
fisttp
or
fmulp
jae
mov
push
mov
(bad)
in
rcr
adc
pop
jmp
lahf
ins
aad
inc
stos
pop
int
aam
xchg
fmul
jge
leave
movs
imul
cmc
inc
std
repz
(bad)
outs
mov
pop
mov
out
jecxz
cdq
popf
sub
mov
pop
not
cmp
add
push
(bad)
ins
movs
push
retf
mov
data16
movs
fadd
and
outs
movs
sub
mov
sar
mov
hlt
xor
xchg
sbb
jge
push
icebp
in
sahf
mov
push
mov
test
mov
pop
and
lods
mov
push
aaa
xor
xchg
fld
xchg
shl
ret
pop
mov
rdpmc
sub
add
(bad)
jecxz
push
out
int
into
scas
mov
sub
pop
xor
out
xchg
je
or
out
cmp
or
popf
and
lea
loopne
call
pop
rcl
jg
mov
int
ret
push
int
int3
mov
xchg
or
in
mov
mov
mov
mov
icebp
fstp
sbb
jo
shr
pop
test
dec
dec
loope
test
jle
mov
in
and
or
movs
fild
xchg
cli
cs
test
xchg
daa
imul
sub
pop
lea
mov
mov
mov
mov
inc
and
ins
mov
inc
movs
pop
inc
jmp
data16
ins
hlt
cmp
out
mov
test
jp
xchg
clc
scas
mov
xor
adc
cmp
jge
sbb
mov
dec
(bad)
jl
cmp
push
mov
inc
shr
ds
call
add
xor
and
(bad)
bound
aas
imul
ror
mov
fild
and
sbb
jg
jo
pop
outs
pop
pop
jg
jns
(bad)
mov
push
push
retf
mov
push
mov
ins
in
(bad)
xor
and
fiadd
inc
idiv
push
mov
jmp
xchg
push
stos
inc
push
inc
outs
mov
retf
sbb
stos
sub
rcr
lock
mov
inc
into
xor
xor
jne
or
mov
xchg
or
popf
loopne
retf
jg
ins
adc
mov
outs
in
and
cmp
xchg
ins
fcmovnb
adc
mov
add
movs
vminss
(bad)
ds
das
mov
jo
push
push
pop
jns
mov
aas
push
ins
movs
retf
test
mov
rcr
lods
movs
pop
das
or
fs
(bad)
imul
add
fstp
sbb
add
jmp
sub
mov
sub
mov
std
jg
adc
xor
hlt
jle
sahf
sbb
xchg
(bad)
cmp
adc
ror
push
jno
loope
(bad)
push
je
aad
shl
xor
xchg
jl
das
dec
push
adc
iret
add
mov
mov
imul
xor
je
cs
in
ss
ins
inc
and
sbb
cmps
mov
(bad)
jge
push
inc
fs
sbb
dec
inc
cmp
loop
pop
(bad)
scas
dec
xor
leave
cld
mov
push
ja
imul
mov
out
dec
xor
dec
cmc
lods
pop
sbb
cmp
sub
imul
mov
int
inc
mov
mov
std
sbb
xchg
imul
test
pop
jp
or
mov
mov
stc
cwde
sub
cld
clc
xchg
adc
stos
aad
adc
adc
pushf
sbb
xchg
mov
cmp
adc
mov
sbb
loop
push
xchg
xor
popf
push
js
sbb
xchg
push
jl
xchg
inc
pop
imul
scas
or
je
sar
and
jo
in
or
push
cdq
mov
or
push
test
out
lods
enter
push
dec
pop
push
enter
mov
addr16
enter
mov
push
test
cmp
retf
push
jge
pusha
js
mov
sahf
push
jns
adc
sbb
mov
mov
nop
mov
mov
adc
pop
cmp
and
loopne
(bad)
or
mov
mov
mov
test
sub
dec
mov
lea
lock
ins
push
push
dec
mov
sub
inc
pusha
das
ss
cmp
jmp
xlat
adc
xchg
pop
es
scas
xor
and
popa
or
dec
mov
mov
mov
mov
sub
mov
rcl
sub
rol
push
je
js
dec
scas
sar
arpl
loope
mov
and
sub
jnp
adc
mov
test
cmp
sub
lock
pop
xchg
inc
int
xlat
and
dec
mov
leave
lds
jecxz
into
mov
xchg
mov
jmp
shr
pusha
mov
mov
jb
xchg
jge
add
inc
mov
or
pop
lds
dec
shl
enter
(bad)
cmp
test
lds
lock
call
ins
outs
inc
pop
call
jl
rcr
xor
fst
dec
dec
mov
test
mov
mov
jge
mov
or
push
loopne
mov
call
adc
mov
test
inc
sti
mov
jo
jne
mov
sahf
mov
fst
pop
sub
ins
clc
push
xchg
out
and
jno
jp
out
jp
lock
pop
pushf
xor
loopne
ret
add
dec
(bad)
out
xchg
imul
mov
pop
mov
inc
dec
packssdw
pop
int3
xchg
xchg
test
shl
mov
add
xor
and
and
test
sar
ins
sbb
xor
push
fiadd
jle
mov
cwde
xchg
icebp
pop
mov
mov
inc
(bad)
jmp
clc
mov
mov
jmp
js
and
xlat
mov
bound
jecxz
popf
pop
jmp
xor
imul
test
test
mov
and
sub
pop
ja
sar
scas
cmp
push
jns
jecxz
aam
daa
js
mov
into
pop
jp
inc
ret
xor
xor
rcl
lahf
jne
sub
leave
xchg
test
jecxz
das
sub
mov
xchg
push
es
xor
jns
mov
fwait
call
mov
adc
lea
scas
(bad)
outs
sbb
pop
xchg
xor
mov
fsub
gs
jb
stc
xor
ds
in
xchg
add
ins
xchg
mov
pop
loop
(bad)
push
push
cwde
push
jl
enter
pop
sahf
xor
dec
xchg
ficomp
rcl
cmp
gs
outs
xor
test
jb
add
xchg
or
call
jo
pop
movs
sub
pop
mov
scas
popf
js
mov
lods
pushf
in
fisttp
xchg
aas
test
lods
cmp
inc
sar
test
jp
xor
mov
scas
mov
mov
xchg
add
imul
(bad)
pop
or
jp
mov
sbb
test
addr16
sub
or
pop
jl
mov
xchg
iret
mov
jo
sub
jp
push
inc
mov
cld
or
or
ins
sbb
fdiv
pushf
lods
retf
je
js
xchg
pop
movs
int
hlt
mov
repnz
inc
mov
mov
mov
mov
test
icebp
cmp
ret
test
int
sbb
pop
lods
jge
aaa
and
ja
mov
pop
mov
push
jae
jmp
shl
retf
add
std
out
sub
test
or
jbe
sub
into
lea
les
popw
dec
cdq
xlat
jmp
lea
int3
xchg
ret
jg
cli
out
or
or
add
cmp
lods
rcl
mov
aad
pop
xchg
xchg
jle
xchg
pop
xor
scas
or
mov
xchg
adc
cdq
mov
bound
cs
(bad)
cmp
mov
push
push
jne
mov
shl
dec
fdivrp
cmp
test
pop
and
aad
dec
inc
pusha
(bad)
jmp
xor
jl
pop
enter
inc
sub
push
fimul
por
loopne
xchg
in
sbb
jno
data16
sub
jle
dec
aam
push
push
popa
add
out
pop
outs
pop
mov
in
imul
cwde
cmp
cmp
popf
pop
jo
mov
shl
jg
ja
push
fst
or
jne
cmp
(bad)
imul
sti
and
ror
xor
ficom
pop
dec
mov
call
and
push
adc
xor
mov
jle
lock
pop
add
fisttp
mov
jle
mov
push
adc
fistp
inc
repnz
mov
sbb
add
cld
daa
movs
ret
outs
cmp
mov
stos
xchg
mov
mov
stos
mov
inc
or
xchg
push
les
dec
jo
jle
adc
repnz
imul
push
daa
pop
xchg
pop
mov
mov
sti
add
in
push
hlt
or
xor
add
jg
add
int
and
dec
ins
or
adc
pop
rcr
inc
aad
jge
arpl
xchg
mov
inc
out
mov
lods
and
xor
mov
xlat
jge
dec
inc
test
mov
out
mov
mov
mov
aam
add
fwait
sbb
and
cmps
ds
in
(bad)
and
data16
out
cwde
jb
mov
and
pop
in
ret
cdq
and
sbb
addr16
inc
jb
pop
push
stc
jns
cmps
mov
loope
adc
cmc
inc
ins
fld
jne
stos
cli
pop
cmps
hlt
shl
aam
xlat
mov
xor
fstp
fsub
pop
in
fcmovbe
or
mov
xchg
js
(bad)
das
pop
or
ror
push
cmp
daa
xchg
push
mov
(bad)
xchg
mov
pop
loope
movs
cmc
pop
pop
add
loop
push
cmp
aas
jle
adc
in
cmp
dec
add
sahf
dec
stos
dec
xchg
jl
aam
lods
je
mov
and
inc
popf
pop
or
sbb
imul
add
add
xor
fistp
int
jo
pop
jmp
jg
(bad)
dec
jnp
jae
push
sub
cwde
mov
sbb
test
in
mov
fwait
sahf
je
test
mov
xchg
scas
dec
dec
push
loop
shl
or
adc
sbb
stc
and
ss
loopne
dec
sub
mov
dec
stos
ja
fld
test
mov
dec
xor
jnp
push
sub
jg
push
sub
call
cmp
pop
add
mov
test
mov
sbb
in
pusha
pop
pop
mov
sbb
or
cmp
push
cmc
retf
push
cdq
xor
mov
imul
cmps
or
(bad)
and
hlt
add
mov
aad
test
ds
pop
jbe
jg
push
in
imul
repz
push
inc
adc
test
push
or
push
fild
lods
in
loope
hlt
sahf
jbe
(bad)
fidiv
xor
jle
mov
add
inc
cmp
jg
daa
and
xor
xlat
sbb
sub
add
add
pushf
sub
or
add
or
aam
out
(bad)
call
cdq
nop
xchg
inc
mov
adc
cs
xor
shr
test
lea
scas
mov
jb
movs
cmps
jb
cmp
cdq
cmps
and
jl
mov
lods
pushf
xor
and
loop
cmp
addr16
and
push
adc
xor
int3
jl
stos
and
in
mov
xchg
sbb
adc
es
xchg
add
dec
push
ins
mov
mov
arpl
retf
mov
sbb
mov
fst
sbb
icebp
adc
jbe
fisubr
mov
xchg
movs
sub
je
dec
loope
jl
out
pop
ins
mov
enter
sbb
fsub
dec
push
cmp
push
retf
in
mov
inc
lds
and
add
jge
sub
mov
aad
mov
daa
fistp
js
ret
lds
stos
and
sar
sahf
(bad)
ins
cmp
mov
and
push
outs
aam
nop
and
cmc
popf
cli
ins
pop
pusha
pop
fwait
pusha
clc
jno
sub
inc
jnp
stos
pop
jl
push
mov
pop
mov
sahf
cmps
sbb
sbb
adc
enter
in
movs
fsub
rol
pop
popa
call
sbb
icebp
xchg
push
jp
xchg
dec
xchg
mov
jp
mov
mov
jae
and
pop
pop
push
cdq
xchg
sbb
xchg
sub
sar
sbb
or
jnp
sbb
movs
fsubr
mov
mov
fwait
xor
or
cmp
xchg
into
inc
push
jl
adc
rcl
xchg
push
out
mov
shl
(bad)
or
jecxz
mov
lea
pushf
push
arpl
lods
pop
xchg
push
cmp
idiv
fcomp
lods
fnsave
xor
sub
int3
push
nop
inc
stos
aad
xor
ror
and
ds
lods
call
es
mov
sbb
mov
pop
add
and
inc
jbe
kunpckwd
js
test
jmp
(bad)
(bad)
not
pop
cmc
fsubr
stc
out
xchg
dec
mov
xor
in
pop
mov
pop
pop
les
pop
ja
sbb
mov
out
push
loop
sub
dec
(bad)
movs
ss
nop
xor
pop
sbb
push
sahf
fnstsw
jns
test
and
adc
push
inc
aaa
sub
jne
xor
(bad)
leave
xchg
test
jns
mov
jge
pushw
mov
fimul
jmp
xchg
aas
ins
mov
or
inc
ss
cdq
mov
mov
stc
call
fild
aaa
mov
dec
dec
push
and
pop
nop
sub
mov
scas
sbb
addr16
shl
sub
push
add
inc
cmp
or
aam
mov
pusha
(bad)
sub
mov
div
push
imul
out
mov
retf
cmps
cmp
push
mov
inc
clc
iret
xchg
iret
das
cmps
sub
test
pop
mov
mov
arpl
ins
xor
cwde
loope
xlat
outs
cli
cmps
out
out
push
ret
push
add
jno
int
call
push
cli
addr16
push
stos
fs
mov
popf
and
mov
push
hlt
push
inc
push
cmp
mov
xor
pop
pop
xchg
add
jecxz
(bad)
sbb
out
call
mov
sbb
or
repnz
xchg
enter
mov
add
xchg
retf
or
(bad)
jne
cmp
test
push
xchg
pop
imul
mov
dec
xor
and
mov
js
pusha
mov
adc
add
ins
xor
(bad)
daa
sahf
mov
xchg
scas
jno
push
xchg
add
loope
icebp
addr16
aad
mov
rol
(bad)
movd
push
inc
je
lods
cs
repnz
jne
cli
sbb
shl
cs
mov
mov
sbb
pushf
(bad)
shl
or
sbb
mov
pop
xchg
cmp
scas
mov
mov
js
test
mov
jle
cmp
xchg
mov
sub
loop
das
sub
mov
push
arpl
dec
xlat
pop
fwait
sub
jl
pop
sbb
xor
cmps
retf
shr
pop
mov
push
pop
inc
mov
test
dec
add
out
cs
dec
push
jge
mov
adc
pop
rcl
aam
push
push
cmps
out
push
ja
ret
cdq
pop
out
mov
pop
addr16
adc
xchg
cmp
inc
push
popf
or
imul
aad
and
add
jge
xchg
ins
inc
lods
push
daa
mov
popa
jecxz
pop
pop
push
pop
mov
ins
adc
dec
ficomp
mov
imul
or
dec
xchg
cmc
mov
mov
sti
xchg
push
pop
ins
aad
dec
mov
loop
or
push
lahf
or
popf
or
ret
sbb
and
sbb
mov
sub
dec
jbe
dec
loope
xor
inc
adc
jne
inc
jle
push
into
mov
inc
mov
je
and
or
lods
sbb
ins
xor
push
imul
loope
dec
pop
lods
movzx
pusha
sub
mov
das
ja
fcomp
mov
push
and
sbb
xchg
dec
mov
(bad)
pop
fist
pop
mov
adc
xor
inc
clc
mov
ds
call
push
push
jae
ja
xchg
inc
test
mov
mov
and
adc
push
movs
xor
sub
or
fisttp
mov
cwde
or
sub
pop
adc
rol
mov
lea
rcr
mov
ficomp
scas
dec
jo
sbb
mov
js
shl
dec
adc
xchg
push
fsubp
lods
pop
cmps
xchg
cdq
cmps
sub
mov
(bad)
shl
xchg
in
test
cs
scas
xchg
mov
shl
mov
ins
fs
pop
shl
div
and
or
cmp
test
xchg
popf
cmps
adc
data16
test
inc
mov
push
pop
sar
pop
jbe
pop
push
cmp
shr
ins
ret
add
ins
dec
pop
lds
aaa
xchg
push
call
fst
ja
mov
pusha
sbb
les
aas
leave
inc
outs
int
add
arpl
call
retf
js
adc
shl
fcomip
in
repz
inc
push
mov
xor
adc
into
sbb
jl
retf
pop
jle
sbb
imul
mov
and
adc
lahf
sub
cmp
cmp
xor
fcmovnb
call
adc
pop
in
sbb
sbb
aam
jbe
in
bound
inc
lahf
jg
jne
pusha
or
push
(bad)
popf
push
cwde
inc
test
mov
xchg
mov
inc
lods
xchg
push
pop
jb
cmp
in
ins
shr
sar
fwait
sbb
dec
push
mov
sub
hlt
jae
and
arpl
or
or
in
pop
adc
pop
cmp
sub
push
and
iret
xchg
out
xor
aas
mov
shl
jne
jne
xchg
stc
fcomp
mov
fisttp
or
sbb
push
xchg
fidiv
cwde
lods
hlt
mov
sub
pop
pop
out
mov
or
mov
(bad)
enter
or
xor
mov
js
fstp
cmp
mov
adc
jo
(bad)
aad
and
jg
jp
add
cmp
mov
add
sbb
ins
aam
mov
shl
ret
dec
push
mov
cmc
pop
fcomp
and
fs
test
inc
mov
or
iret
in
or
xor
xor
into
dec
inc
addr16
cmp
clc
fsub
mov
mov
jmp
jl
rcr
jl
adc
mov
push
or
call
cmp
in
pushf
pop
std
in
mov
pop
mov
ja
popf
fcomp
mov
fild
sahf
dec
inc
in
retf
inc
in
pop
pop
or
cmps
or
push
xor
pusha
fadd
shl
mov
repnz
sbb
pop
rol
pop
dec
push
outs
rcl
jl
push
icebp
frstor
jge
push
outs
dec
or
push
and
es
mov
xchg
sahf
(bad)
into
push
es
ss
dec
inc
dec
dec
sbb
pop
inc
xchg
pop
pop
ret
neg
(bad)
aad
sub
retf
inc
ret
lods
cwde
jae
jge
sbb
adc
iret
enter
iret
ins
sub
enter
pop
ret
sbb
lahf
push
xor
std
test
mov
icebp
out
enter
mov
or
movs
or
cmp
dec
lods
jae
fsubr
gs
mov
mov
inc
(bad)
xchg
lds
adc
fwait
pop
pop
push
dec
jmp
imul
call
adc
hlt
xor
push
loopne
imul
scas
and
xchg
bound
xor
pop
mov
outs
mov
int
add
js
outs
cmps
shr
mov
push
fimul
sub
jecxz
mov
(bad)
std
xchg
and
fistp
adc
ins
cmp
inc
jge
push
sbb
call
jmp
jmp
xchg
(bad)
clc
icebp
stos
(bad)
lea
jge
mov
jbe
lods
leave
shl
xor
sub
mov
into
(bad)
mov
sti
push
mov
add
(bad)
rcr
sar
mov
push
addr16
sub
push
(bad)
mov
dec
aam
jp
ror
mov
mov
sbb
or
mov
out
mov
mov
cmp
pop
or
pop
test
jbe
inc
xchg
dec
jmp
add
push
lds
call
mov
xchg
fild
cmps
xchg
xor
(bad)
mov
mov
jmp
add
cmps
enter
aad
call
arpl
push
mov
adc
jl
das
in
push
sahf
jae
jno
jmp
add
adc
outs
cs
xchg
aas
xchg
and
mov
scas
pop
lods
int3
aaa
xchg
popa
movs
ss
in
push
test
add
pop
sbb
pop
xor
mov
xchg
aad
xchg
jl
mov
fisub
ins
aad
inc
push
in
fcom
fisttp
xor
xor
mov
sbb
pop
ret
sbb
je
mov
out
sub
mov
test
call
mov
idiv
ret
cmp
lods
jb
cdq
movs
cmp
push
or
or
and
not
pop
xor
fmul
inc
test
mov
mov
jae
jge
xor
adc
xor
and
fstp
in
mov
les
mov
jmp
inc
aad
ins
stc
pop
and
test
dec
js
pusha
in
shl
in
mov
enter
dec
sbb
jmp
mul
sti
or
sahf
mov
dec
xchg
clc
ror
or
retf
mov
add
cmp
and
sub
jno
jg
int3
fmul
adc
das
push
rcr
lea
aam
popa
pop
div
pop
xor
mov
push
sbb
push
sub
push
sbb
xchg
gs
sbb
and
jo
adc
mov
lock
test
sub
ins
aaa
jle
ffreep
cmp
into
add
sub
pusha
xchg
mov
and
mov
adc
sub
fs
jb
iret
fiadd
ficom
test
pushf
push
adc
cs
xchg
or
mov
ror
std
or
(bad)
das
test
lods
cmp
popa
push
xchg
jae
and
bsf
aaa
cmps
stc
in
je
out
mov
es
cwde
sbb
aam
loopne
xchg
mov
xchg
and
fild
mov
push
dec
jge
pop
xchg
cmp
sbb
cmps
scas
xchg
mov
lahf
mov
popf
test
outs
in
sahf
mov
sbb
cli
test
jns
(bad)
movs
or
stc
inc
enter
dec
(bad)
mov
ss
or
mov
and
loopne
lahf
and
push
mov
jo
adc
xchg
stc
out
adc
stos
xor
ret
iret
lods
retf
and
mov
sbb
push
pop
xor
mov
mov
adc
ins
imul
pop
dec
aas
cmps
stc
dec
push
mov
push
sbb
aas
mov
xchg
mov
jl
retf
or
lods
movs
popa
bnd
ret
mov
mov
shl
mov
push
inc
test
cmp
mov
(bad)
out
push
test
inc
jle
pop
cmp
jo
call
xchg
pop
jo
adc
sub
je
xor
pop
and
cmp
clc
dec
push
cmp
mov
or
xchg
dec
xchg
leave
jp
cmp
dec
repnz
data16
jle
inc
adc
(bad)
stc
int
push
cmp
leave
bound
inc
in
repz
outs
mov
push
pop
loope
dec
popa
cwde
xchg
jo
in
std
sbb
xor
and
mov
outs
cmp
jg
push
lahf
hlt
xchg
test
sahf
push
outs
retf
cdq
fadd
mov
push
fiadd
repnz
aad
jns
pop
pop
fidiv
jns
add
mov
or
or
mov
rcl
and
mov
dec
xchg
mov
call
pop
jae
xchg
push
sbb
mov
mov
imul
retf
inc
fdivr
xchg
rcr
out
push
inc
dec
mov
xchg
and
nop
cmc
aad
mov
and
dec
in
dec
or
(bad)
fidiv
ss
scas
mov
pop
mov
mov
jne
ret
mov
out
outs
daa
fnstcw
mov
shl
mov
(bad)
clc
sbb
xchg
(bad)
mov
and
mov
fcomp
and
sub
jge
add
sbb
in
jno
xor
inc
ror
adc
ror
cmps
pop
jl
xor
loope
imul
inc
and
or
and
mov
(bad)
shl
dec
push
or
push
cmp
fs
or
sub
sar
aad
and
xor
movs
fld
(bad)
ins
sbb
xlat
fcom
sub
test
cdq
fsub
icebp
scas
mov
mov
mov
(bad)
jae
cwde
rcr
sbb
lahf
daa
(bad)
js
inc
ins
in
add
mov
bound
fiadd
dec
repz
dec
push
jge
pop
pop
sbb
xchg
test
daa
mov
fwait
dec
jae
ds
(bad)
xchg
sti
stc
push
or
shl
rcl
ins
jge
pop
cmps
dec
pop
sbb
inc
dec
cmc
adc
cmp
jp
mov
retf
sbb
cwde
mov
movs
(bad)
push
sbb
dec
fld
mov
pop
mov
test
adc
fadd
aad
leave
or
(bad)
(bad)
pop
and
cmc
xor
pop
cmp
push
cwde
xchg
iret
fnsave
movs
fcmovnbe
jb
inc
test
mov
or
pop
push
(bad)
hlt
add
lds
shl
sbb
pusha
xchg
je
or
ror
icebp
and
int3
les
jbe
mov
push
addr16
inc
popa
cdq
mov
cmp
clc
dec
scas
xchg
mov
xchg
cdq
adc
mov
sbb
std
jae
pop
scas
pop
push
push
sub
mov
mov
push
fadd
enter
(bad)
mov
dec
test
retf
ror
adc
mov
adc
pop
lods
mov
and
xor
aaa
std
stos
push
mov
repnz
test
rol
and
jle
int
jns
inc
push
xor
pop
lock
lods
xor
inc
lahf
inc
jb
and
test
mov
out
(bad)
mov
push
mov
or
stos
pop
mov
push
pop
aad
loope
fidivr
xchg
popa
lahf
lahf
pusha
enter
aaa
scas
push
(bad)
sub
aam
mov
or
mov
or
enter
outs
or
daa
mov
dec
in
jne
(bad)
or
rcr
mov
sbb
test
pop
adc
pop
or
cmc
mov
mov
inc
sbb
sbb
in
aaa
ss
mov
jle
jecxz
or
adc
jns
xchg
stos
mov
je
dec
cli
sbb
cmc
jecxz
mov
lds
addr16
xchg
pop
xchg
cmps
lods
arpl
add
mov
hlt
int
fs
cmp
cmp
lea
adc
xchg
ror
inc
or
adc
and
dec
inc
ins
adc
nop
not
xchg
cmp
cmp
lock
mov
rcr
cmp
fs
mov
les
jae
fcomp
mov
cmp
les
sub
les
sub
xchg
test
or
leave
ror
mov
inc
outs
xchg
jae
call
int
xor
jno
ins
push
push
ror
jne
mov
(bad)
fidiv
jmp
adc
mov
dec
cmps
loope
push
lock
fwait
push
nop
out
cmp
mov
xchg
mov
mov
mov
fwait
test
dec
push
xchg
outs
(bad)
or
loop
(bad)
sub
stos
retf
mov
mov
cdq
je
jl
and
int
adc
or
inc
xor
fsubr
outs
movs
push
or
aad
xchg
mov
scas
push
mov
pop
(bad)
jne
dec
rol
fiadd
push
nop
shl
iret
(bad)
das
pop
push
fst
stc
push
adc
mov
das
test
jnp
and
dec
gs
movs
shl
data16
rcl
inc
(bad)
leave
adc
push
lods
scas
mov
jge
push
push
lds
popf
inc
shl
dec
pop
rol
outs
cdq
jge
jne
mov
and
aad
test
shr
push
mov
push
leave
or
icebp
inc
outs
jge
cdq
mov
shr
nop
movs
in
add
add
mov
mov
cdq
pop
aad
and
pop
call
pop
pop
lea
or
ins
jno
cmp
add
push
(bad)
dec
out
jg
add
int
(bad)
add
push
pushf
sbb
in
mov
add
jb
push
aas
pop
pop
add
cmp
pop
jne
xor
movs
(bad)
out
mov
adc
lahf
call
dec
jne
or
or
in
and
sub
mov
int3
aaa
sbb
inc
not
cmp
cmp
mov
ret
call
xchg
fxch
adc
dec
mov
adc
push
pop
int3
xlat
jae
xlat
or
jne
stos
fld
imul
adc
add
nop
inc
adc
push
or
mov
pop
(bad)
shl
or
sub
retf
xchg
or
into
xor
(bad)
andps
popf
mov
push
in
fldcw
out
add
ret
cmp
dec
mov
inc
int
fbstp
dec
dec
pop
ret
dec
mov
test
mov
fisttp
push
mov
retf
and
mov
dec
jp
jmp
inc
xchg
test
jno
xchg
in
xor
(bad)
jo
and
push
cmps
clc
adc
add
cmps
jg
jns
xchg
sbb
and
adc
test
int
mov
test
push
and
push
xchg
pop
cmp
idiv
mov
dec
mov
jl
icebp
out
cdq
ja
xchg
sbb
iret
pop
data16
push
dec
jns
push
jle
pop
push
jle
popf
aas
xchg
dec
aaa
pop
leave
lods
xlat
jge
jmp
mov
adc
popf
es
imul
stos
jmp
adc
push
push
lods
jg
lea
lahf
(bad)
(bad)
fadd
and
jge
std
popf
leave
arpl
xchg
or
cmp
jp
fnsave
cmp
(bad)
inc
cdq
xchg
xor
scas
ins
mov
iret
movs
das
push
cmps
mov
push
je
jp
(bad)
adc
mov
cmps
arpl
mov
inc
retf
loop
movs
xor
add
mov
sub
jle
test
dec
retf
inc
xchg
ror
mov
mov
pop
or
cdq
fidivr
push
(bad)
fwait
mov
cdq
adc
daa
or
inc
xor
mov
call
mov
ins
pushf
xchg
xor
inc
loop
aas
arpl
nop
pop
mov
mov
sbb
dec
mov
jg
and
push
mov
adc
mov
out
retf
mov
mov
cmp
sbb
xchg
mov
mov
mov
xchg
test
cmp
daa
fs
sbb
popa
(bad)
int3
retf
fist
jle
gs
xchg
inc
and
xchg
cwde
xor
test
arpl
mov
loope
int
push
push
inc
mov
(bad)
je
push
push
mov
and
sub
aad
ss
scas
popf
ins
fwait
cmovns
xchg
sbb
repz
mov
push
ficomp
icebp
and
sbb
aam
test
pusha
xor
or
jns
pushf
pop
mov
mov
and
cmp
int3
push
stc
fstp
sbb
std
mov
xchg
jecxz
cdq
jl
arpl
bswap
lds
popf
sub
loopne
adc
mov
sbb
aaa
push
int
jl
das
push
(bad)
or
dec
xchg
fs
sbb
cdq
xchg
in
mov
call
shl
cmps
or
cmp
mov
mov
test
sti
(bad)
jmp
push
sti
adc
aam
sub
mov
xchg
mov
cmp
jecxz
sbb
arpl
icebp
mov
jbe
pop
or
fadd
xchg
dec
add
call
rcl
pop
sub
in
stc
xor
je
mov
dec
sti
pop
shl
xchg
popa
cmp
icebp
or
cmps
mov
xor
(bad)
sub
sti
int
in
movs
in
mov
stc
icebp
cdq
and
hlt
clc
jle
jmp
xlat
pop
test
fs
dec
arpl
stc
and
ret
push
fcomp
cmc
mov
scas
add
xchg
imul
push
(bad)
test
inc
fmulp
and
sub
(bad)
mov
sbb
lea
ins
popa
aad
mov
pop
rcl
and
ss
fs
movs
inc
fsubr
ds
jmp
gs
ja
or
pop
inc
outs
mul
sbb
cmp
stc
daa
inc
pop
(bad)
cmp
dec
pop
out
ret
imul
pop
movs
fsubr
repz
nop
shr
pushf
mov
adc
mov
push
loope
scas
(bad)
mov
neg
mov
pop
jecxz
sbb
inc
lock
sbb
lahf
mov
lahf
mov
xchg
cmp
pop
mov
mov
fdiv
push
add
jmp
xchg
(bad)
push
nop
or
or
test
loop
mov
aas
sbb
jo
into
sbb
adc
das
clc
pop
ds
out
jnp
push
inc
pop
pop
stos
lds
inc
adc
or
stos
lods
test
or
push
loop
sti
das
call
(bad)
(bad)
mov
mov
mov
in
or
mov
cmps
ss
or
xor
sub
retf
stos
ret
lea
scas
fisttp
int3
fst
mov
xlat
jge
xor
lods
call
(bad)
retf
sub
inc
data16
mov
or
mov
jle
cmp
loopne
nop
icebp
in
adc
les
pop
outs
jp
iret
mov
adc
dec
jmp
push
or
xor
inc
add
rcl
scas
nop
inc
jle
mov
or
jmp
mov
movs
fstp
and
into
clc
ss
push
add
inc
fsub
jns
pusha
pop
pop
stos
jo
jl
movs
enter
jnp
xor
sub
ja
fcmovnbe
aad
and
stos
push
and
mov
cmp
mov
call
xor
xlat
loop
adc
call
daa
fcom
add
js
and
cmc
push
push
or
pop
or
mov
out
es
adc
inc
mov
xchg
sub
call
cmc
cs
sbb
in
mov
inc
xchg
js
test
movs
fistp
xchg
jecxz
fwait
jp
std
inc
push
das
(bad)
psubusb
shr
ret
jns
pop
jp
pop
jecxz
jns
(bad)
xchg
jecxz
retf
mov
jnp
jg
mov
arpl
sub
sub
mov
inc
xor
shr
push
inc
fcom
mov
cmp
shl
sub
addr16
xchg
inc
mov
pusha
mov
movs
sti
test
xlat
mov
xor
je
pop
mov
aad
js
sbb
xchg
nop
int3
pop
popf
mov
ja
call
mov
xchg
pop
and
xchg
inc
and
xchg
bnd
fldpi
fstp
push
in
(bad)
sub
adc
pusha
pusha
mov
pop
mov
and
lods
pop
mov
dec
test
ins
fld
jle
popa
dec
shr
daa
mov
dec
pop
push
adc
ds
das
aam
jmp
push
retf
mov
and
nop
ffreep
fldenv
inc
xchg
fmul
sub
push
aaa
imul
mov
out
sbb
mov
in
inc
or
xlat
adc
xchg
xor
data16
call
test
(bad)
cmp
std
lods
and
fs
outs
and
outs
push
mov
push
add
push
mov
sbb
lds
lock
ja
inc
je
test
imul
shl
gs
jb
inc
xor
rcr
add
mov
mov
or
clc
mov
data16
or
jns
push
and
or
mov
dec
sub
call
(bad)
mov
retf
jno
es
mov
mov
fldcw
jno
retf
mov
or
pop
sub
std
xchg
dec
fidiv
cmp
mov
sub
rcl
mov
(bad)
mov
call
ds
or
xor
xchg
sub
fist
add
out
repz
enter
in
mov
es
cmps
pop
sbb
data16
mov
mov
xor
int3
inc
les
movs
int
xlat
or
cmps
mov
ffree
imul
iretw
retf
dec
repnz
inc
mov
jmp
fndisi(8087
pop
iret
xor
lock
pop
sub
xor
mov
push
imul
leave
lods
cmp
mov
mov
pop
sbb
ror
jo
iret
imul
pushf
fdiv
cli
lods
mov
(bad)
push
mov
xchg
inc
and
inc
ret
or
push
das
cdq
ret
aam
(bad)
jne
dec
cmc
pop
push
stos
retf
push
leave
sahf
imul
and
sub
mul
or
xor
data16
mov
or
add
lea
inc
mov
lds
aam
retf
outs
mov
arpl
dec
jnp
mov
or
(bad)
aad
dec
mov
dec
adc
sar
mov
in
dec
retf
sar
pop
xchg
mov
dec
adc
jg
inc
cmps
push
pop
lahf
mov
xchg
inc
pop
mov
stos
push
imul
inc
scas
xchg
pop
pop
xchg
xchg
push
sub
pusha
rcl
push
fnstenv
adc
test
shl
aad
mov
add
sub
xor
mov
mov
popa
mov
fwait
jge
xor
sub
jp
jnp
add
retf
int3
pop
xchg
jmp
pop
mov
data16
jns
sbb
jno
lods
(bad)
out
mov
daa
add
jge
sahf
psubb
je
mov
push
xchg
jmp
aad
adc
mov
mov
and
div
cli
jle
cmp
push
loop
cmps
ins
sbb
out
mov
sbb
fisttp
into
sub
inc
loop
lock
and
cdq
xchg
push
cld
mov
pop
xchg
xchg
adc
(bad)
scas
inc
test
dec
scas
int
cmps
xchg
mov
push
pushf
mov
mov
xchg
inc
clc
adc
and
sbb
dec
cmpxchg
shl
test
mov
inc
or
jae
test
test
sub
mov
or
mov
int
cmp
sbb
adc
add
push
xor
sbb
cmp
pop
inc
mov
imul
mov
adc
js
adc
jl
daa
adc
mov
sbb
popf
fist
(bad)
arpl
xor
push
push
mov
sub
xor
sbb
mov
test
out
add
push
cmps
out
jb
xor
mov
jmp
jle
adc
popf
xor
inc
mov
pushf
imul
and
lea
cmps
inc
movs
inc
ret
lods
ins
int3
cmp
xchg
xchg
inc
lahf
mov
into
rep
inc
(bad)
mov
xchg
sub
mov
xchg
jmp
bound
dec
lahf
push
push
and
pop
idiv
xor
les
cmp
pop
dec
pop
sbb
mov
jae
(bad)
stos
xchg
sahf
or
or
sub
outs
leave
add
dec
pop
leave
add
fiadd
cmp
sbb
pop
sub
rcl
shl
pop
retf
sbb
adc
js
xchg
lea
enter
or
idiv
fucom
mov
mov
mov
sbb
int
mov
aad
iret
fdivr
jb
fs
and
fild
xor
int3
stos
rcr
cmc
daa
ins
out
das
inc
add
loop
or
frstor
daa
int3
hlt
ja
sbb
popa
nop
cmp
inc
xchg
or
xor
and
mov
xchg
inc
jbe
sub
mov
xchg
jb
ins
cmp
push
sbb
cdq
sbb
mov
pop
xor
xchg
aaa
fs
jne
lods
test
xor
test
stos
or
xchg
xor
mov
cwde
push
sahf
mov
ins
frndint
test
or
mov
xchg
jo
loope
dec
imul
fmul
dec
js
mov
jmp
pop
pushf
dec
adc
mov
fisub
jmp
jl
jp
les
pop
stc
jmp
jmp
fwait
into
sub
add
gs
mov
sub
sbb
jg
outs
or
dec
pushf
popf
mov
and
push
(bad)
daa
add
mov
test
and
xchg
sub
fidiv
pop
inc
push
lea
adc
xlat
or
ror
jnp
jge
in
mov
jns
in
les
jbe
mov
mov
dec
test
jp
enter
jle
rcr
fcom
pop
dec
sbb
cmp
vmovupd
push
lahf
jp
lods
jne
mov
push
mov
cdq
cmps
or
push
xchg
jbe
call
mov
stc
jns
popa
sub
mov
pushf
and
mov
dec
mov
jnp
imul
ja
ja
call
arpl
in
xlat
jno
fwait
sti
cwde
nop
outs
lds
mov
lods
sub
mov
fsub
sub
out
mov
dec
and
imul
xor
mov
push
js
jne
repz
mov
(bad)
shl
mov
sub
pop
add
xchg
(bad)
fsubr
jecxz
cld
dec
push
xchg
cmp
xor
inc
xor
loopne
mov
pusha
test
and
mov
cld
jmp
aad
mov
cwde
jg
cmps
jle
and
jo
adc
ds
inc
out
push
xchg
ds
fs
ja
cmp
jb
mov
and
sub
fcomi
das
lds
repnz
enter
mov
cmc
inc
jl
movs
stos
adc
push
mov
aaa
xlat
retf
jp
push
in
mov
int3
int3
ds
inc
rcr
aaa
or
mov
popa
(bad)
cdq
movs
push
retf
adc
sbb
push
dec
shl
je
div
and
call
dec
inc
movs
push
jp
xor
pop
dec
pop
cmp
(bad)
mov
mov
mov
sub
sub
fadd
enter
jns
test
ins
adc
repnz
stos
push
scas
(bad)
aaa
cmps
ret
pop
adc
pop
lahf
or
iret
push
xor
mov
dec
inc
fisub
mov
mov
mov
cmp
popf
scas
(bad)
push
and
jne
cmp
add
adc
mov
pushf
(bad)
nop
mov
xchg
push
push
jo
lock
stos
cmp
sub
inc
call
pop
out
fidivr
addr16
pop
cmc
fcomp
jge
aad
out
push
aaa
lahf
mov
push
mov
(bad)
or
push
ss
xor
fimul
jnp
das
xor
cld
pop
into
jl
sahf
mov
adc
pop
xchg
test
(bad)
out
jle
pop
mov
mov
rcl
dec
inc
jb
lods
xchg
enter
jl
fild
leave
hlt
aam
shl
test
lods
jg
jmp
sbb
fisttp
jnp
cmp
arpl
loope
adc
adc
lods
loope
(bad)
xor
mov
les
mov
push
jb
in
cmp
jecxz
xchg
dec
mov
test
(bad)
fs
dec
imul
jb
test
jns
jle
imul
xchg
mov
fsubr
jo
mov
ds
aam
lahf
loop
aad
push
sbb
jmp
cmp
cmc
fstp
ror
shr
pop
fcom
bound
xor
cmp
das
aad
dec
push
push
jle
(bad)
dec
push
xor
mov
dec
adc
pop
call
fs
xlat
jns
jbe
test
pop
cmp
addr16
inc
cmps
or
stos
add
adc
lods
jb
jbe
cmps
jle
mov
je
out
mov
push
out
pop
call
fcom
pop
iret
sub
lods
pop
sub
sub
imul
sbb
pop
cs
scas
(bad)
adc
push
mov
stos
push
adc
aaa
and
mov
and
push
cmps
call
dec
es
aad
fisttp
and
hlt
add
xchg
ror
push
fdivr
popf
push
xor
imul
aam
and
(bad)
dec
jns
mov
xor
sbb
leave
js
fnstenvw
push
(bad)
in
dec
xor
int
hlt
sahf
cmp
neg
arpl
dec
retf
xor
mov
cwde
sbb
mul
mov
lods
stos
out
ret
pop
and
rcr
jp
and
and
or
or
and
mov
and
(bad)
mov
push
les
xor
xchg
jmp
ins
hlt
(bad)
(bad)
xchg
inc
xchg
lds
push
test
mov
dec
inc
(bad)
arpl
xchg
in
je
dec
dec
add
pop
loope
std
aaa
add
in
sub
add
retf
pop
jmp
cdq
fstp
mov
repnz
retf
dec
shl
cmp
and
jge
les
add
bound
cmp
in
or
addr16
push
jnp
idiv
scas
and
or
xchg
in
push
add
aam
sub
iret
clc
xor
ins
mov
push
add
or
mov
jg
imul
ror
xchg
imul
add
sar
adc
outs
dec
mov
inc
enter
cld
out
push
jae
push
out
fstp
test
jmp
push
pop
mov
aam
mov
mov
pop
push
pop
dec
pop
cmp
daa
jnp
add
push
cmp
out
push
cmp
and
lods
xchg
mov
inc
xchg
data16
lds
and
pop
(bad)
aam
es
dec
sbb
push
mov
scas
lock
popf
inc
out
jns
jle
cmps
in
ja
and
outs
data16
ds
jmp
xchg
cmp
cmp
and
cmp
dec
mov
mov
xchg
ja
and
daa
shr
test
mov
sub
pop
je
add
push
mov
push
fisubr
arpl
xchg
outs
mov
cmp
mov
retf
enter
cmp
or
mov
aam
lods
or
mov
sub
cmp
xlat
aad
xor
add
icebp
pop
in
xor
leave
xchg
aam
push
jae
ja
js
xchg
add
xchg
cli
addr16
push
iret
arpl
dec
cld
jnp
mov
xor
outs
mov
stc
sbb
out
cld
jge
cmps
iret
mov
mov
push
scas
mov
rol
ror
test
inc
js
pop
xor
ss
xor
mov
add
lahf
lea
cld
mov
lds
push
dec
lods
jl
mov
fadd
fs
mov
les
pop
dec
js
lahf
mov
cdq
push
jno
mov
fadd
ja
lock
loop
mov
xor
ja
pop
mov
out
out
xchg
or
sbb
adc
or
sbb
clc
in
aam
inc
sbb
dec
push
mov
pushf
jb
(bad)
(bad)
jmp
stos
inc
inc
cmp
cli
imul
jmp
cs
xchg
sbb
sub
ret
mov
test
jp
mov
mov
and
inc
fstp
pop
lods
popf
xchg
inc
jo
leave
pop
pop
out
fcmovu
setbe
adc
out
mov
rol
cmp
es
ret
or
inc
mov
mov
outs
xchg
in
jecxz
mov
pusha
cdq
les
sbb
adc
pop
pop
sub
mov
scas
cmp
fadd
ja
(bad)
sahf
outs
cmp
jb
inc
jno
or
aam
or
adc
push
mov
jge
mov
cmp
aam
jle
ins
pop
into
into
adc
push
or
dec
pop
mov
mov
in
or
cmp
cmp
add
int
push
sbb
(bad)
jl
and
xor
mov
fcompp
inc
and
shr
mov
loope
retf
cmp
mov
add
sbb
adc
add
cmps
and
in
push
xor
addr16
mov
retf
dec
fs
stc
dec
fiadd
sbb
xor
pushf
retf
test
icebp
idiv
cli
mov
cmp
(bad)
jg
push
push
mov
adc
xor
sbb
(bad)
xor
xor
jo
jmp
xlat
dec
cmps
mov
pop
dec
imul
and
jo
adc
xlat
mov
retf
push
xchg
sub
test
sbb
fld
inc
ss
jbe
outs
lods
mov
mov
jge
movs
add
mov
lahf
lea
mov
movs
fnsave
push
adc
(bad)
lock
sbb
inc
mov
(bad)
mov
ret
adc
push
out
add
pop
data16
adc
jecxz
mov
pop
mov
xchg
addr16
xchg
xor
js
jns
or
mov
movs
cmps
je
jbe
je
jecxz
repz
ins
stos
pop
(bad)
fwait
mov
or
retf
sbb
(bad)
sub
adc
jl
mov
add
dec
sub
xchg
cmp
test
shr
cdq
out
and
imul
dec
fisub
imul
retf
cld
in
outs
mov
push
ficom
out
out
push
adc
mov
(bad)
dec
stos
mov
add
ret
in
lds
popa
out
cmps
add
data16
(bad)
adc
stos
pop
add
dec
pop
sub
xchg
(bad)
mov
cmps
movs
xchg
imul
jns
test
rcl
(bad)
or
jge
mov
and
sbb
ret
call
xor
mov
xchg
std
dec
enter
add
enter
inc
in
or
jg
pusha
xlat
inc
enter
jne
adc
ja
or
mov
pop
mov
adc
push
jne
or
call
(bad)
inc
pusha
cmc
inc
lea
scas
xchg
mov
mov
repz
mov
xchg
mov
inc
xchg
in
fldcw
sub
mov
test
push
or
mov
fldcw
dec
test
mov
mov
int
mov
mov
dec
ins
mov
and
ja
pop
xchg
stos
or
xchg
leave
push
mov
pop
fld
and
jge
add
mov
in
inc
jmp
fwait
add
pop
jp
xchg
fimul
push
in
and
cmp
xchg
inc
cmp
mov
mov
xchg
cmp
fadd
pop
cmps
jmp
sbb
xor
sbb
lds
pop
paddw
jle
in
inc
into
outs
mov
inc
pop
fs
or
or
leave
or
lea
ficomp
je
jmp
ret
cmp
push
xchg
rcl
jne
dec
call
inc
int3
test
add
jge
inc
aaa
push
sbb
dec
or
das
arpl
mov
adc
bound
pushf
popa
xchg
ret
mov
push
pushfw
popw
xor
xor
and
addr16
dec
push
pop
das
je
or
mov
sub
or
aad
ins
out
ss
cmp
mov
pop
and
jne
jne
inc
(bad)
mov
ja
mov
push
push
jecxz
ins
sahf
mov
dec
dec
mov
jns
jg
add
mov
or
lods
fadd
inc
aad
outs
aas
xchg
daa
dec
(bad)
cmps
xor
ins
jns
popf
lods
in
sub
dec
shr
(bad)
in
mov
aad
hlt
mov
mov
fsubr
mov
xor
dec
pop
fstp
addr16
mov
pop
mov
les
sub
sbb
mov
shl
xor
fwait
sbb
ins
jle
inc
mov
pop
cmp
fidiv
into
mov
sub
arpl
xchg
add
sbb
mov
mov
(bad)
mov
mov
in
in
xchg
jg
inc
outs
push
fld
(bad)
dec
xchg
mov
pop
mov
ja
xchg
movs
cmps
dec
rcr
je
nop
cmp
retf
and
jns
gs
sar
xor
mov
cmp
mov
data16
add
addr16
mov
cdq
mov
ja
mov
pop
bound
adc
sti
xor
add
jle
aaa
je
fwait
es
mov
popa
pop
sbb
shr
mov
mov
or
jmp
sbb
retf
cmp
(bad)
mov
push
push
inc
push
add
mov
pop
cmp
xchg
jl
les
lods
push
lods
cmp
aad
push
repnz
lahf
pop
lds
dec
pop
out
push
cmp
imul
in
hlt
movs
int
stos
mov
inc
mov
stc
test
xor
add
mov
in
scas
jle
push
or
int
adc
jbe
arpl
ins
mov
ret
in
lods
dec
cmp
int
aam
scas
mov
test
sti
mov
je
outs
jle
retf
ins
mov
dec
call
cmp
and
adc
retf
mov
mov
adc
xor
dec
jnp
inc
sti
inc
outs
push
push
sti
sbb
mov
add
mov
in
and
aad
add
sbb
mov
pushf
xor
popf
movs
nop
ds
fwait
xchg
mov
push
add
mov
mov
clc
pop
push
sub
xor
ja
mov
jle
fild
cli
add
adc
pop
lods
mov
fwait
add
mov
jl
sti
push
(bad)
dec
jbe
int3
jmp
lods
jae
mov
dec
jo
jge
dec
pop
fucomi
(bad)
test
popf
dec
mov
pop
es
xchg
push
push
out
adc
mov
sub
mov
stos
xor
int
dec
mov
rcr
xor
adc
icebp
xor
sub
xor
je
mov
fisttp
dec
ja
loope
push
iret
repz
xchg
ret
mov
pop
sbb
inc
inc
leave
into
push
xor
cmp
push
jbe
pop
sub
les
xor
xor
gs
stos
dec
outs
movs
clc
mov
das
push
jp
gs
nop
out
inc
iret
add
fnstcw
xlat
test
mov
(bad)
push
neg
add
(bad)
sbb
fmul
sbb
das
fcmovne
xchg
pushf
dec
mov
adc
mov
dec
xchg
xor
cdq
push
fistp
adc
mov
je
jo
dec
iret
aad
movs
push
xchg
jmp
dec
add
imul
out
jl
jle
mov
nop
mov
xor
mov
popf
aaa
mov
sub
and
pusha
int3
aam
mov
ret
add
add
adc
pop
mov
call
addr16
fiadd
pop
aad
bound
dec
push
pop
pusha
in
jp
pop
push
xchg
rcl
mov
mov
(bad)
lds
ins
jbe
adc
jbe
lods
arpl
lahf
jecxz
jmp
inc
or
or
je
cmp
stc
push
pop
and
pop
adc
or
lods
daa
push
imul
push
push
xor
push
imul
je
pushf
push
mov
js
adc
fisttp
retf
xchg
and
xor
mov
push
pop
aad
fild
inc
sbb
jge
retf
call
mov
cmp
push
out
cmp
and
movs
inc
or
or
lods
dec
arpl
mov
out
je
or
or
rcr
push
pushf
dec
mov
ficomp
add
push
adc
jbe
xchg
adc
dec
jnp
stc
les
(bad)
push
pop
rol
(bad)
jl
push
retf
jmp
dec
scas
pusha
jne
push
dec
push
pop
imul
push
pmullw
pusha
and
les
inc
mov
sbb
(bad)
dec
std
sbb
and
xchg
sub
and
out
push
test
cmps
add
sbb
add
shl
iret
dec
push
cld
or
inc
aad
in
sbb
or
xchg
mov
adc
ins
test
pop
xchg
jmp
mov
jb
(bad)
lock
pop
loop
std
mov
test
(bad)
pop
out
push
push
fdivr
mov
in
test
and
fsubr
arpl
xchg
xchg
fcomp
jae
jp
push
iret
lds
mov
dec
ret
call
jae
aas
data16
loop
mov
mov
and
cmp
das
or
fwait
add
adc
xchg
xchg
or
lds
in
jb
test
test
ss
lods
push
jl
inc
and
stos
inc
movs
pop
fidivr
and
sar
fstp
xchg
xchg
mov
jg
test
leave
scas
cmc
adc
or
adc
pop
xor
cmp
inc
fs
fs
xor
retf
xchg
mov
in
adc
add
xor
(bad)
fadd
mov
pop
sub
jmp
ret
or
(bad)
push
dec
in
mov
and
jl
arpl
mov
dec
adc
fwait
pop
shl
shl
gs
push
push
jnp
iret
test
ins
sub
std
and
jnp
test
lds
mov
xchg
mov
popa
mov
dec
add
sub
pop
movs
(bad)
mov
in
stos
addr16
outs
movs
movs
mov
push
inc
push
jnp
repnz
stos
push
std
xchg
pop
pop
mov
mov
fadd
xchg
push
mov
pop
or
mov
arpl
jnp
mov
push
leave
pusha
mov
test
fs
test
(bad)
aam
push
mov
and
xchg
jecxz
inc
jecxz
jb
lock
frstor
retf
dec
push
push
adc
sar
je
ss
sar
inc
ret
jp
and
sub
and
mov
add
mov
add
(bad)
xor
addr16
inc
jecxz
xchg
les
xor
scas
cmc
add
cmp
add
test
lods
jne
xor
into
test
xchg
mov
retf
cmp
mov
ud1
push
mov
js
mov
inc
fbld
scas
scas
ror
xor
test
sub
xchg
rcr
push
mov
jne
mov
pusha
xchg
adc
inc
mov
adc
sbb
mov
push
push
scas
inc
cld
mov
daa
stc
outs
call
enter
scas
pop
mov
jmp
mov
pusha
mov
lahf
fmulp
cli
fdiv
mov
test
jmp
cmc
out
pop
sti
test
or
push
outs
out
sbb
dec
mul
outs
push
dec
and
dec
jno
jecxz
(bad)
int3
mov
pop
push
push
stc
ds
clc
dec
test
mov
xchg
mov
(bad)
rcl
cmps
int
stos
xchg
out
cdq
mov
dec
jecxz
sub
pop
or
mov
cmp
sahf
inc
data16
xchg
cmp
or
int
mov
xchg
repz
inc
cs
push
popf
xlat
jne
jne
cmp
mov
in
mov
loopne
xor
mov
pop
out
stos
mov
xchg
push
(bad)
mov
cs
mov
aaa
fcomp
ja
xor
lea
xchg
jb
sbb
shl
bound
int3
fwait
pop
jbe
ret
sbb
(bad)
fnstsw
dec
xchg
fiadd
or
adc
inc
xchg
push
mov
mov
loope
imul
inc
fcomip
mov
inc
adc
mov
mov
pop
or
and
or
lds
movs
push
(bad)
push
mov
sub
fiadd
stos
out
rcl
mov
inc
popf
xchg
addr16
aaa
xchg
xchg
add
imul
adc
repz
scas
ins
cmps
cmc
aaa
adc
ror
in
repnz
fnsave
in
mov
mov
add
mov
push
mov
mov
xor
in
xchg
mov
xchg
fldcw
mov
pop
push
or
cld
cmp
cmp
call
rcr
rcl
test
adc
xor
jne
aad
lods
jbe
cmp
pop
pop
out
cmps
aam
fstp
xchg
(bad)
imul
mov
pop
call
dec
out
inc
pop
sub
push
jb
ror
retf
mov
retf
push
stos
mov
es
xchg
pushf
mov
cmps
ficomp
xchg
mov
dec
ja
cmp
(bad)
aad
in
sahf
sub
or
mov
push
fnsave
dec
loop
cld
inc
test
add
mov
test
jno
pop
aad
mov
add
or
aam
icebp
lahf
add
mov
dec
adc
(bad)
aad
dec
into
xchg
les
pop
fs
jg
ja
pop
aad
test
pop
fabs
cmp
mov
or
jle
movs
aas
movs
pop
xchg
mov
lods
mov
movs
into
dec
fcom
cmp
xor
and
sub
retf
mov
adc
fnstenv
shr
inc
xchg
retf
and
sbb
sti
cmp
jae
fist
mov
shr
stos
xor
ret
sahf
pusha
push
adc
rcl
jle
or
cmp
sbb
push
xor
xor
sub
and
dec
adc
iret
rol
mov
jno
xlat
add
daa
mov
cdq
inc
lock
jmp
aaa
(bad)
(bad)
lock
je
ds
push
js
outs
mov
hlt
mov
hlt
mov
popa
dec
shr
mov
mov
xlat
dec
inc
dec
or
and
addr16
int3
mov
scas
xor
mov
or
and
dec
stos
scas
push
aam
mov
dec
sub
ret
(bad)
lahf
mov
xchg
sbb
xor
xchg
pushf
dec
les
add
stos
cmps
sahf
addr16
inc
xchg
mov
mov
es
sub
pop
push
inc
movs
popa
add
ret
pop
inc
adc
and
in
icebp
mov
fbstp
inc
or
ins
sub
out
fisub
mov
dec
retf
or
xchg
cs
push
mov
repz
outs
int
das
call
pop
fidivr
mov
movs
into
mov
push
(bad)
stos
jecxz
shl
push
xor
or
xchg
daa
adc
cdq
xlat
scas
inc
pusha
push
sub
(bad)
mov
inc
pop
add
adc
and
call
test
mov
mov
out
sub
push
mov
out
inc
jmp
mov
lock
in
imul
sub
pushf
imul
enter
cmp
xor
aam
in
call
nop
sbb
add
mov
std
add
cmp
push
test
push
or
dec
mov
and
loop
inc
stos
cmp
stos
pop
sub
push
add
cmp
add
sbb
popf
pushf
mov
js
adc
int3
mov
jg
(bad)
lea
mov
add
sbb
or
int3
pop
mov
inc
adc
leave
xchg
dec
ins
sub
mov
push
(bad)
xchg
jecxz
adc
dec
in
es
jg
push
sbb
sub
push
lods
dec
ss
test
push
test
push
adc
mov
mov
xchg
fdiv
clc
enter
int3
sti
inc
pop
aam
cmp
les
test
jb
mov
aam
adc
and
neg
and
(bad)
cmc
mov
xchg
xor
aas
outs
aaa
aas
pop
mov
in
ins
aad
push
mov
test
loop
shl
lock
dec
and
stos
jmp
loope
mov
push
into
lods
mov
dec
scas
pop
cmps
jecxz
sbb
movs
ja
mov
int
xor
adc
into
add
fiadd
cdq
jbe
nop
and
xor
(bad)
je
jge
cmc
fs
add
mov
int3
shr
push
add
xchg
sub
lock
out
and
lods
push
mov
stos
sahf
test
mov
and
mov
sbb
pop
mov
inc
aas
addr16
xchg
push
imul
aas
ror
add
outs
movs
pop
and
xchg
pop
loop
sbb
add
cmps
or
loopne
sub
mov
outs
mov
push
pop
push
xchg
repz
cmpps
clc
adc
push
push
mov
xchg
ja
ret
iret
xchg
push
mov
movs
sub
jns
mov
mov
test
xor
out
add
push
cmp
pop
pop
inc
jno
pop
pushf
xor
mov
lods
add
mov
(bad)
loope
and
mov
sbb
inc
out
push
adc
ss
sub
sbb
sub
imul
cmps
or
push
addr16
mov
pop
stos
arpl
jo
lahf
dec
and
sar
or
sbb
shl
mov
retf
xlat
mov
in
push
inc
push
sub
outs
sar
mov
push
ret
fwait
inc
(bad)
xor
add
cmps
cli
push
mov
jmp
shl
xchg
pop
mov
movs
sub
mov
gs
(bad)
jo
pop
das
movs
ja
inc
add
jb
in
or
adc
mov
mov
int3
dec
test
gs
push
add
popf
pop
aam
dec
sub
or
mov
aad
ds
ja
dec
or
test
dec
scas
imul
jle
iret
repnz
add
nop
push
xlat
sbb
mov
sbb
cmc
mov
test
cmp
sbb
jb
js
lods
inc
les
repnz
or
mov
pop
in
mov
mov
dec
fimul
(bad)
pop
fdivr
in
pop
shr
je
scas
push
sbb
mov
push
jns
push
call
nop
mov
mov
frstor
mov
dec
sub
xor
ja
pop
push
dec
sti
inc
(bad)
inc
jmp
push
cld
call
push
dec
ins
mov
repz
std
and
xchg
sub
repnz
out
fdivr
and
ja
push
xchg
mov
call
push
mov
mov
data16
inc
jl
xlat
outs
jge
fs
adc
(bad)
jae
test
mov
mov
lods
fimul
out
daa
lock
(bad)
addr16
imul
(bad)
fs
sbb
dec
sbb
cmp
rcr
neg
xchg
repnz
(bad)
fistp
(bad)
sbb
int
mov
inc
mov
cdq
jae
push
je
mov
mov
mov
mov
adc
inc
shl
(bad)
icebp
fiadd
int
inc
cmp
gs
repnz
mov
popa
jnp
dec
(bad)
xor
fiadd
push
stos
stc
cmps
add
lahf
or
pop
retf
je
xor
xor
rcl
test
sti
je
adc
fs
fs
cmc
dec
rcl
or
mov
pop
movs
xchg
and
sub
shl
leave
jne
or
mov
in
xor
adc
fadd
push
(bad)
and
or
sar
adc
aam
pusha
inc
out
lahf
nop
retf
sub
mov
(bad)
fiadd
mov
popa
jmp
xchg
popa
cmps
ins
scas
xor
sub
push
pusha
xchg
sub
bound
mov
jae
cs
pop
push
jae
into
sahf
sub
and
in
push
and
jnp
inc
test
(bad)
popf
pop
imul
mov
outs
cmp
ja
pop
stos
dec
imul
xchg
add
scas
jae
jmp
arpl
sbb
out
mov
sub
inc
or
das
mov
push
mov
dec
adc
gs
or
fs
(bad)
xchg
add
add
or
mov
adc
xor
mov
push
rol
std
jg
jo
int3
jo
or
imul
push
in
fisttp
outs
rol
lahf
movs
mov
aad
out
dec
js
test
shl
mov
call
cmc
push
cmp
nop
cmp
mov
jno
or
test
push
xchg
cmp
popa
js
loope
in
sbb
cmp
xor
inc
jbe
mov
(bad)
cmp
sub
xor
leave
adc
cwde
cli
sub
jae
or
pop
mov
sub
popf
(bad)
and
sub
push
mov
jo
cmps
gs
test
cmp
add
movs
sub
and
push
sub
test
jbe
jns
pop
imul
mov
(bad)
xor
mov
and
(bad)
push
or
cld
xchg
or
fisttp
mov
mov
(bad)
cmps
and
or
repz
mov
movs
nop
and
jno
nop
sahf
inc
mov
xchg
clc
xchg
or
popf
dec
aad
sub
iret
and
es
jp
leave
xchg
jle
arpl
movs
test
sbb
shr
sbb
pop
inc
adc
shl
dec
les
imul
leave
or
mov
mov
jmp
cmps
bound
in
mov
and
test
sub
or
cmp
push
jp
shr
push
jbe
jge
pop
pop
adc
xchg
pop
clc
ret
rcr
scas
jns
add
sub
mov
int3
inc
fistp
mov
fadd
ins
sti
cmp
inc
xchg
lds
xchg
inc
xor
pop
mov
adc
loopne
mov
jecxz
pop
ins
ins
inc
mov
cdq
mov
xor
pop
dec
jns
dec
dec
xchg
jle
loopne
shl
js
dec
inc
into
movs
push
lock
pop
(bad)
xor
mov
(bad)
ds
cli
push
mov
test
jns
mov
es
cli
int
jge
jl
bound
(bad)
out
jle
mul
(bad)
inc
mov
int3
enter
sti
sbb
xchg
mov
iret
sub
push
sbb
sub
aas
mov
call
mov
and
xor
jg
lea
xor
fnstcw
retf
std
loop
mov
adc
clc
mov
imul
retf
rcl
imul
(bad)
pop
sub
push
icebp
imul
mov
arpl
push
es
jp
push
dec
div
jno
sbb
shr
sub
pop
test
xchg
push
add
retf
and
lds
shl
das
rcl
xchg
out
inc
xchg
dec
fmul
push
aaa
mov
les
pop
xchg
mov
sbb
xchg
xor
je
aas
mov
xor
inc
test
jp
mov
fstp
add
gs
xchg
pop
lods
or
cwde
cmp
cld
mov
adc
mov
daa
cmp
inc
jbe
cwde
fidivr
and
sbb
cmps
xchg
pop
inc
aam
mov
pushf
jns
dec
aad
pop
sub
cmp
jg
cmp
shl
and
and
fdivr
jmp
lea
add
mov
push
lds
repz
test
(bad)
mov
sbb
adc
and
hlt
ret
(bad)
aam
ficomp
bound
idiv
ret
inc
xchg
pop
jg
adc
call
test
mov
repz
js
xor
mov
lods
jae
lds
ret
rcl
pop
mov
push
mov
add
push
les
shl
fisttp
arpl
and
out
inc
(bad)
push
jecxz
mov
ja
push
test
jmp
jge
xor
xchg
xlat
xlat
mov
mov
imul
dec
ins
pushf
mov
icebp
mov
addr16
pop
pop
and
pusha
sbb
jnp
cmp
xor
inc
outs
mov
mov
jecxz
pop
mov
cmp
dec
das
ja
fs
mov
jb
cdq
mov
test
daa
mov
repnz
xchg
lods
sar
mov
mov
inc
jne
jge
mov
inc
or
dec
cmp
movs
pop
movs
cmp
ficomp
xchg
and
dec
mov
jle
mov
shl
stos
pop
push
push
dec
xchg
adc
push
add
sbb
push
(bad)
fcomi
sahf
jo
mov
call
and
int
mov
movs
int
jns
inc
pop
mov
pop
xor
mov
xchg
jmp
mov
lods
jae
stos
into
lahf
lea
sbb
inc
mov
lods
xor
dec
stos
dec
icebp
addr16
shl
mov
fucomp
or
lock
mov
xor
call
dec
jo
lds
xchg
or
dec
sub
into
push
push
xchg
clc
sub
arpl
xchg
enter
in
adc
aaa
in
(bad)
jbe
scas
out
clc
and
je
mov
jo
das
push
jmp
es
leave
push
mov
jo
pusha
jmp
push
push
adc
test
psrlq
jecxz
imul
gs
and
mov
push
stos
enter
pop
ins
jg
sbb
jne
daa
lea
cmp
into
mov
jo
repnz
mov
pop
ss
push
pop
jl
mov
sar
fistp
js
movs
dec
bound
sub
pop
in
cmp
jge
adc
out
xchg
mov
dec
xchg
cwde
dec
sub
cmp
mov
jno
dec
and
xor
and
aad
or
inc
mov
pop
add
sbb
adc
or
cdq
in
ret
xchg
xchg
xor
sbb
adc
les
add
iret
aas
push
push
pusha
neg
cs
imul
jne
push
mov
xor
mov
mov
movs
test
jmp
dec
mov
retf
inc
jge
or
add
inc
mov
in
stos
aam
add
adc
outs
add
in
jmp
popf
add
sub
enter
sub
mov
dec
jmp
sub
mov
lahf
mov
adc
loop
sub
cmp
xor
les
sbb
mov
(bad)
dec
push
cmp
inc
cmps
scas
mov
mov
add
or
mov
inc
frstor
jg
dec
and
sub
pop
loopne
loope
ins
rcl
mov
dec
jne
jge
xchg
lods
xor
and
xchg
sub
mov
fisttp
pop
xor
sub
les
xchg
stos
mov
pushf
sbb
pop
imul
jge
jae
cmp
or
imul
and
pop
loopne
cmp
shl
(bad)
out
fdiv
inc
fst
mov
xchg
cmps
sub
nop
test
mov
adc
mov
pushf
mov
outs
jo
ss
jecxz
mov
sbb
add
cmp
pop
jne
into
(bad)
mov
jne
sbb
adc
out
(bad)
fcom
aam
imul
ss
cmp
xlat
inc
stc
inc
stos
sub
loopne
sahf
loopne
popa
mov
pop
ins
mov
repnz
rcl
loope
mov
push
push
cld
mul
test
iret
inc
mov
mov
xchg
mov
xlat
xor
mov
pop
jne
retf
xor
sti
addr16
es
jne
iret
inc
or
dec
jmp
adc
cmc
mov
or
repnz
pop
mov
daa
stos
aaa
jbe
push
jno
and
je
push
inc
push
xchg
jmp
hlt
adc
and
rol
cmps
mov
repnz
jne
and
push
pop
xor
xchg
dec
xor
sub
clc
sbb
or
mov
mov
test
inc
fxch
push
aas
xchg
je
add
fs
fdiv
fisub
jmp
or
pushf
push
scas
xor
adc
imul
pushf
sbb
test
mov
out
icebp
mov
push
push
cmp
xchg
test
outs
add
jae
cmp
cmp
mov
inc
xor
call
repnz
outs
push
out
dec
out
pop
mov
mov
(bad)
leave
inc
test
popf
leave
mov
and
not
push
sbb
stos
das
or
in
adc
inc
inc
retf
call
jp
mov
fbld
aam
mov
pop
dec
mov
xchg
addr16
xchg
inc
jo
sub
jb
add
mov
jecxz
lock
cmp
into
and
jge
dec
jns
loop
dec
pop
scas
sbb
xchg
(bad)
jns
mov
mov
test
iret
add
xchg
xchg
adc
nop
out
jae
or
stos
(bad)
dec
ds
out
mov
jge
inc
pushf
jge
(bad)
jge
ins
mov
repz
pop
sub
les
(bad)
(bad)
and
mov
les
mov
lahf
add
xchg
add
sub
xchg
xchg
pusha
mov
dec
and
mov
mov
into
pop
sub
and
cmp
fwait
push
or
jl
xchg
pop
mov
add
mov
inc
jg
retf
sub
mov
push
and
pushf
test
push
cmps
or
xor
or
test
push
mov
fldenv
pop
xchg
rcl
mov
jns
dec
popa
jo
cmp
lock
movs
or
loop
xchg
and
jbe
imul
pop
aam
jne
int3
push
cdq
inc
push
push
adc
lods
retf
repnz
xchg
jne
xchg
outs
inc
jmp
test
mov
xchg
sbb
je
lea
ins
add
(bad)
stos
pop
shr
pop
xchg
and
popa
shl
ror
ss
mov
mov
jle
dec
retf
sbb
sub
out
aam
sti
adc
pop
push
js
sbb
pop
outs
scas
jns
dec
fs
push
mov
sub
scas
dec
push
xchg
aad
adc
lea
(bad)
push
inc
mov
inc
test
dec
jnp
movs
jae
cmps
cmc
or
lea
xchg
call
retf
and
push
mov
gs
mov
add
cmp
rol
iret
xchg
or
sti
aad
aam
or
repz
in
shl
ret
aam
hlt
(bad)
cvtps2pi
and
and
fs
nop
push
mov
mov
repz
mov
push
ins
mov
not
cmp
xchg
lods
repz
mov
adc
ins
dec
rcr
adc
pop
push
gs
out
or
bnd
lea
adc
inc
dec
adc
std
and
xor
fnstcw
and
out
pop
mov
stos
repz
(bad)
fisub
mov
mov
(bad)
fs
test
xor
xchg
rol
mov
bound
loope
add
mov
int3
xchg
mov
push
adc
mov
scas
cli
lds
pop
adc
jmp
xor
in
pop
mov
in
push
out
ds
dec
rcpps
lods
jp
push
gs
fiadd
outs
in
out
push
jl
mov
scas
into
mov
cmp
cmc
in
sub
jmp
(bad)
imul
mov
lahf
mov
test
or
cdq
mov
sar
pushf
jae
mov
addr16
iret
aaa
and
push
aaa
pushaw
jne
xchg
jecxz
(bad)
in
lea
adc
in
pop
mov
in
jl
repnz
mov
cmp
shl
pop
inc
cmp
into
cmp
push
jne
in
xor
ss
mov
cmps
xchg
(bad)
rcr
sbb
js
sbb
repnz
fdivr
fcomp
arpl
mov
mov
nop
fs
xor
and
addr16
sub
push
enter
enter
sub
pop
xchg
nop
mov
and
stos
xchg
cmp
adc
icebp
aad
push
xlat
retf
sub
sbb
lea
rol
and
cmp
(bad)
das
inc
xor
pop
xor
cmp
sbb
sbb
cmps
mov
xchg
push
and
stos
cmps
(bad)
add
inc
push
adc
inc
mov
cmps
inc
xchg
ins
xchg
pushf
inc
outs
push
pop
xchg
mov
push
jge
push
and
mov
mov
fnsave
enter
pushw
(bad)
mov
xor
sahf
jl
push
pop
push
mov
pusha
shl
mov
inc
(bad)
mov
add
xor
add
in
out
repz
push
pop
ret
or
push
mov
imul
popf
dec
fdivr
mov
repnz
movs
dec
mov
ins
mov
inc
int
shl
icebp
mov
cmp
icebp
jns
enter
(bad)
test
sub
ss
int
mov
add
cmps
mov
dec
call
fwait
mov
mov
int
arpl
not
shr
fisub
ins
jo
sbb
mov
mov
push
iret
shr
jne
xor
pusha
sub
mov
sbb
push
xor
jmp
movs
xor
add
jnp
fcom
inc
dec
cmp
sahf
dec
xor
mov
add
rcr
dec
xor
xchg
mov
mov
fs
adc
fs
sbb
push
sar
push
dec
xchg
enter
push
stos
mov
mov
mov
dec
call
ss
dec
add
rol
jecxz
push
addr16
pop
mov
dec
pop
fwait
push
push
movs
jp
pop
sub
std
dec
mov
inc
pop
lea
pop
lea
ja
movs
test
push
addr16
dec
push
repnz
popf
fwait
add
jl
sbb
fcomp
stc
iret
jo
ret
es
mov
repz
xchg
jle
push
add
mov
pop
lods
les
cdq
retf
pop
sbb
inc
cmps
aad
push
bound
pop
xchg
retf
fdivr
xor
in
jg
in
imul
push
jmp
pop
push
mov
lods
and
jns
cmps
and
bound
inc
jno
cwde
pop
mov
add
cmp
xor
dec
or
jg
cmp
shl
sti
or
imul
pop
dec
scas
jne
outs
inc
mov
or
leave
jmp
inc
(bad)
pop
xchg
sbb
inc
ror
cmps
mov
jg
mov
icebp
(bad)
shl
ss
sbb
add
pushf
xor
push
iret
retf
push
dec
in
jo
push
push
push
dec
popf
fs
dec
xchg
mov
push
cmp
mov
inc
mov
popf
clc
aaa
mov
ds
adc
ds
and
mov
popa
mov
out
nop
jne
nop
sub
aaa
mov
push
pusha
cdq
icebp
retf
cwde
push
in
ds
scas
es
mov
jmp
sub
sub
int
fs
add
push
repz
nop
scas
xchg
mov
push
cmps
lahf
(bad)
scas
adc
ret
(bad)
retf
inc
dec
cli
je
xchg
gs
inc
(bad)
push
lock
mov
xor
retf
ds
lods
lods
or
push
pop
inc
push
inc
xchg
push
cwde
jle
into
pmulhw
cmc
pop
ret
jbe
(bad)
lods
xchg
(bad)
and
jge
mov
sub
fistp
xor
sahf
mov
jle
mov
and
(bad)
xor
mov
pop
pop
ror
call
mov
fwait
or
into
sub
fbstp
mov
test
hlt
pop
sub
pop
int
fild
out
bound
jae
icebp
add
sbb
mov
stos
outs
dec
jge
cdq
push
adc
popa
push
in
cdq
sub
jmp
repz
dec
fisttp
stc
(bad)
cmp
and
or
out
in
mov
loop
fwait
jno
cmc
push
lds
and
fadd
stc
js
mov
test
ret
sub
and
aas
pop
and
mov
ds
loope
cmp
les
js
cmps
call
jne
sbb
in
fcomp
jbe
xor
cmp
xor
sub
arpl
push
nop
mov
fwait
out
mov
imul
in
inc
cmp
xchg
hlt
iret
arpl
jno
pop
out
mov
sbb
popf
cmp
imul
sbb
movs
icebp
inc
jo
clc
ds
mov
mov
sbb
mov
arpl
inc
gs
in
push
dec
dec
hlt
and
xor
sbb
mov
sbb
int3
into
ins
lock
mov
xchg
shr
sub
or
shl
xor
cwde
(bad)
xchg
mov
fld
or
sub
or
sahf
sbb
dec
dec
sub
sub
sbb
and
mov
or
pushf
aam
jns
mov
sub
pop
pop
and
mov
push
pop
popf
xlat
(bad)
sbb
in
aas
sbb
cmps
cmc
inc
pop
shl
ret
js
cdq
(bad)
movs
sbb
stos
ss
mov
mov
ins
pop
(bad)
cld
xor
adc
jbe
jmp
bound
daa
ud1
movs
push
cmp
jle
sbb
dec
pop
leave
jnp
add
pushf
fistp
int
xor
xlat
pop
pop
jecxz
into
sbb
push
jmp
pop
imul
mov
pop
je
jno
cmp
sahf
sti
fimul
jl
or
mov
mov
pop
movs
icebp
or
sub
jecxz
repnz
mov
mov
xor
fisubr
shr
push
jl
adc
dec
sbb
fisttp
cs
(bad)
mov
xchg
nop
push
sub
neg
popf
loop
xor
mov
ins
fnsave
dec
mov
movs
and
bound
cmp
in
nop
add
lahf
aam
test
mov
push
(bad)
and
push
mov
sub
jg
push
xchg
in
movs
imul
lds
mov
jno
inc
mov
jae
xchg
push
pop
stos
sbb
jl
pop
inc
mov
repz
push
inc
dec
sbb
gs
and
jecxz
jo
mov
adc
outs
mov
mov
cmp
mov
push
sbb
mov
test
lods
movs
push
shr
cmp
or
push
das
xchg
xor
jnp
mov
sbb
mov
xlat
in
xlat
xlat
pop
in
cmps
mov
mov
nop
loopne
jb
in
jne
out
out
aam
and
fwait
(bad)
xchg
sub
push
push
sub
cmps
jb
dec
push
add
xlat
add
sbb
call
pop
inc
push
xchg
jno
and
(bad)
js
sbb
jns
cmps
dec
mov
movs
sbb
sub
test
and
ror
xlat
mov
and
cmp
push
arpl
out
jno
repz
mul
sbb
rcl
xor
lods
xchg
pop
sbb
sbb
mov
cmps
shl
jne
xor
call
inc
adc
adc
xchg
push
lds
cmp
outs
xchg
sti
sahf
inc
shl
xlat
pop
adc
mov
mov
cmps
(bad)
or
fstp
and
mov
and
pop
mov
or
es
xor
adc
in
xchg
call
outs
cmp
out
push
nop
ret
mov
mov
jl
movs
sub
sub
test
popa
mov
sub
cld
jmp
mov
and
pop
int
retf
hlt
jns
or
fs
dec
push
addr16
(bad)
cmp
jecxz
cmp
mov
jb
cwde
fdivr
jns
and
sub
and
pop
sbb
pushf
iret
loope
shr
or
adc
push
jmp
adc
outs
stc
mov
jae
(bad)
adc
mov
stc
pop
and
adc
pop
int
dec
fldcw
cwde
scas
fcomp
jae
loop
test
fsub
pop
ds
inc
popf
pop
push
sbb
cmps
sbb
or
or
add
or
retf
rcr
nop
cmps
xchg
cmp
mov
mov
mov
add
push
push
sub
rol
inc
into
loope
daa
or
mov
or
cmp
sti
cs
out
ss
call
add
sbb
add
aam
lock
xor
movs
pop
mov
daa
mov
xchg
mov
jl
(bad)
sbb
gs
push
push
and
xlat
mov
stos
cmp
push
mov
sbb
das
sar
ins
xor
out
and
stc
inc
or
movs
jae
fimul
push
call
dec
jge
cmps
pushf
popa
ins
loop
movs
mov
dec
fcmovnb
addr16
loop
or
idiv
test
jne
imul
and
adc
jge
sbb
jecxz
dec
int3
inc
retf
adc
es
test
pusha
in
xchg
(bad)
cmp
push
sub
mov
shr
(bad)
popa
jge
xchg
int
cmp
cmp
sub
loopne
sbb
cmp
ins
(bad)
outs
stos
test
arpl
xchg
outs
iret
retf
retf
fadd
jno
push
les
gs
fistp
(bad)
xchg
shl
xchg
test
ins
dec
aad
dec
mov
or
xchg
(bad)
lahf
outs
(bad)
cs
ins
or
sbb
ds
(bad)
ds
push
adc
ins
enter
cmps
inc
jmp
jne
cmp
cwde
sbb
out
cmp
aaa
stos
pop
adc
fsubr
cli
pop
fwait
pusha
pusha
jle
out
adc
mov
shl
int3
fdivr
(bad)
dec
inc
pop
fisttp
inc
hlt
out
or
cmp
pop
pop
dec
cmp
pop
xchg
adc
neg
mov
cmp
int
(bad)
pop
gs
rcl
sbb
addr16
pop
das
inc
sbb
push
jae
fadd
pop
enter
dec
adc
fst
cmps
pusha
mov
jl
retf
dec
repnz
fst
adc
jae
sahf
jmp
xchg
push
shr
rcr
not
rol
js
(bad)
or
inc
imul
js
fs
ret
rcl
test
cmp
out
cld
enter
push
jle
nop
lds
pop
ins
sub
mov
dec
or
xor
jmp
inc
fmul
fwait
pop
call
mov
sub
and
xchg
cld
add
cmp
push
ret
xor
or
cmp
mov
inc
loope
(bad)
pop
push
push
jl
fisubr
inc
ins
dec
jns
test
nop
fsubr
pop
jge
sbb
xchg
push
xlat
sbb
push
cmp
arpl
mov
mov
push
mov
sbb
aaa
mov
mov
and
stos
adc
sbb
mov
mov
ror
jg
xchg
jne
les
xor
enter
(bad)
call
pusha
icebp
aas
icebp
add
and
std
sar
pop
je
cvtdq2ps
dec
or
mov
ret
xchg
cs
mov
data16
fnstsw
rcr
ss
adc
je
(bad)
retf
imul
jle
(bad)
xor
mov
mov
xchg
mov
cmp
xchg
mov
inc
pop
mov
mov
dec
sub
mov
sub
lahf
popa
ficom
xor
mov
add
xor
daa
mov
jno
mov
movs
mov
inc
mov
rol
cmps
mov
pop
and
pop
dec
mov
xor
cmp
cmp
xor
mov
pop
xchg
imul
in
jg
adc
das
stos
sub
dec
jo
xchg
jmp
test
push
jmp
fistp
mov
mov
lea
repz
cld
fstp
jmp
and
fsub
cs
test
mov
test
xor
cmps
mov
lods
push
loope
jp
jno
jl
mov
movs
mov
push
stos
xor
mov
push
lds
call
(bad)
imul
retf
leave
(bad)
pop
shl
or
jmp
mov
les
jnp
push
and
mov
add
dec
scas
jp
ffree
push
lods
pusha
test
and
jno
adc
mov
xchg
pop
loope
mov
push
jb
sbb
or
inc
mov
addr16
add
(bad)
dec
shl
pop
outs
(bad)
jecxz
jne
push
and
adc
loopne
in
push
cdq
xchg
dec
or
imul
ja
jne
sbb
cs
arpl
pop
loopne
popa
sahf
mov
or
out
mov
es
inc
jnp
inc
cdq
cdq
dec
inc
movs
mov
out
jo
push
dec
imul
jo
pop
xor
mov
jbe
in
cmp
out
in
test
or
into
stos
jno
push
aas
fs
xchg
sub
test
add
xchg
push
je
push
lods
lods
dec
add
inc
xchg
loope
mov
into
popa
jecxz
(bad)
jl
mov
enter
add
sub
paddq
(bad)
mov
and
(bad)
mov
inc
or
(bad)
loopne
scas
test
int3
and
(bad)
je
mov
(bad)
push
inc
jne
or
mov
jne
mov
(bad)
stc
pushf
xor
push
jae
or
movs
lods
adc
sti
xor
and
sti
jno
xor
fist
int3
ret
stc
test
xchg
lds
ss
fsubr
retf
xchg
test
or
pop
jae
jle
fwait
je
retf
pop
mov
push
or
sahf
sbb
nop
sub
ret
call
ins
es
push
sahf
jg
xchg
fdiv
imul
jge
push
sbb
outs
lea
push
dec
mov
ficomp
out
adc
iret
rcl
scas
lahf
ret
mov
pop
jo
(bad)
adc
mov
mov
scas
jge
in
aas
arpl
or
(bad)
jmp
cmp
xor
xchg
int
aam
rcr
pop
pop
jge
add
imul
xchg
mov
dec
std
sbb
or
adc
and
inc
add
je
dec
push
xor
push
or
mov
mov
sbb
inc
jno
aad
jne
dec
sub
and
out
fisubr
popa
sti
lods
xor
pop
sbb
movs
jg
jne
pop
and
jg
aam
mov
fadd
push
sub
sub
out
in
adc
out
inc
nop
int3
inc
outs
sbb
push
jne
jns
sbb
mov
mov
inc
dec
cmp
push
xchg
in
test
push
fcomp
nop
pop
fld
mov
dec
mov
sbb
pop
fstp
call
jle
and
add
jl
xchg
xchg
sbb
mov
jo
jl
sub
pusha
push
sahf
(bad)
(bad)
sahf
lods
lea
mov
inc
sub
jl
mov
xchg
stc
popa
outs
mov
clc
pop
cmp
mov
jl
and
jo
xchg
lds
cwde
leave
outs
nop
jns
ret
pop
(bad)
lods
int
push
adc
arpl
pop
jnp
dec
ror
enter
retf
int
sbb
or
movs
fwait
add
dec
cwde
cmp
movs
mov
movs
fsub
add
not
adc
outs
fild
push
push
fwait
retf
inc
push
addr16
push
imul
or
outs
std
jmp
push
fidiv
cmp
jbe
in
xor
fwait
jnp
nop
lea
adc
lods
sub
xor
cmp
mov
cmp
inc
popf
test
bound
movs
pop
xchg
xchg
js
vpsadbw
retf
fmul
nop
mov
test
push
mov
mov
dec
mov
jno
in
out
call
fs
xor
dec
ins
pop
lods
jb
add
pop
jp
mov
jle
fcom
pop
lea
pusha
nop
pop
retf
les
fs
aaa
test
loopne
xor
rcr
or
ins
je
fistp
xor
mov
jge
mov
test
call
push
int3
ror
xor
push
js
dec
in
or
ins
pop
int3
push
scas
es
rcr
adc
jbe
cld
push
out
sahf
mov
xchg
int
jecxz
scas
add
push
retf
test
add
adc
adc
fwait
mov
cmp
xchg
cwde
jne
int3
(bad)
mov
dec
(bad)
test
rcl
arpl
sbb
aaa
iret
adc
or
jb
in
xchg
stos
(bad)
aaa
mov
loope
jge
fld1
arpl
(bad)
inc
ficom
les
repz
stos
addr16
(bad)
sub
dec
mov
lods
clc
addr16
push
(bad)
enter
addr16
and
jecxz
add
rcr
sub
cmp
and
pop
jmp
and
add
pushf
mov
cwde
rcl
iret
adc
sub
push
movs
and
jge
js
stc
and
add
mov
aad
mov
out
dec
jecxz
mov
pop
sbb
rcl
xchg
imul
and
add
mov
dec
jecxz
pop
sub
cli
ds
push
dec
jns
inc
pop
rcr
popf
jbe
(bad)
mov
mov
xchg
pop
fcom
sbb
and
pop
mov
jb
retf
push
mov
pop
mov
je
pop
jnp
ins
ror
aas
jae
outs
js
mov
test
xor
imul
out
daa
push
bound
clc
pop
mov
xor
and
js
jg
dec
xchg
and
clc
xor
je
dec
iret
push
sbb
pop
push
mov
xchg
loopne
sub
mov
leave
test
cmp
xor
xchg
or
xlat
das
hlt
mov
mov
mov
neg
cmp
fsub
mov
jl
sub
or
dec
repz
out
inc
lea
dec
xchg
call
gs
aas
hlt
fcom
mov
or
dec
adc
fadd
mov
icebp
xchg
mov
(bad)
jp
ror
adc
int3
movs
mov
repz
mov
out
inc
outs
sub
and
xchg
jl
cmps
xor
xor
dec
mov
test
addr16
xor
pop
pop
aad
ins
test
jb
jno
(bad)
mov
xchg
out
nop
or
add
es
imul
sahf
and
add
push
xchg
in
sar
dec
cmps
mov
add
(bad)
pop
or
mov
push
test
scas
jle
sub
cmp
push
cwde
xor
jbe
addr16
sub
stos
hlt
add
sub
inc
xchg
jecxz
sbb
add
pop
ds
sub
fld
add
jae
clc
xchg
mov
mov
fild
dec
jns
jno
fucomp
out
pop
mov
popa
fwait
fs
call
xlat
pusha
pop
xchg
mov
outs
xchg
push
test
mov
xor
cmc
movs
jecxz
enter
jmp
pop
mov
and
push
aam
icebp
jmp
cwde
popf
jmp
jns
sbb
push
in
xchg
pop
loope
mov
xor
sar
dec
xchg
add
test
movs
pop
inc
retf
push
pushf
dec
cdq
pushf
xchg
test
push
mov
sbb
imul
std
jl
cmps
pop
fwait
or
ins
aam
xchg
(bad)
call
push
dec
jb
pop
cmp
inc
stc
das
inc
mov
xchg
jne
dec
xchg
mov
ja
test
or
inc
dec
std
retf
sbb
test
ins
gs
mov
pop
leave
xchg
(bad)
dec
pop
jo
and
dec
jle
mov
imul
daa
dec
push
daa
add
pop
or
in
inc
and
loope
(bad)
pop
push
pop
in
pop
cmps
in
inc
scas
mov
add
pop
test
int
pop
test
(bad)
jo
sub
lahf
das
int3
sbb
dec
inc
fadd
aaa
les
pop
add
dec
call
and
jmp
lods
dec
sahf
sub
sbb
xchg
fsubr
jge
adc
ret
ins
popa
and
jo
xchg
pop
push
rol
inc
mov
call
cdq
jbe
cmps
mov
xchg
std
dec
pop
push
mov
cmc
fcomp
js
scas
mov
mov
aam
add
cdq
shl
mov
scas
dec
into
lea
pushf
ja
pop
das
mov
test
dec
ja
xor
mov
test
cwde
xchg
push
pop
imul
jne
cmps
dec
imul
inc
(bad)
mov
retf
and
mov
fld
imul
sahf
icebp
ficom
xchg
mul
adc
stos
das
retf
leave
adc
sub
retf
stc
dec
mov
hlt
into
popa
pop
jle
test
mov
cmps
fisttp
arpl
inc
retf
add
sahf
clc
cmp
jo
or
mov
lods
cli
loop
jg
out
dec
stc
retf
hlt
ja
shr
rcl
lods
pop
nop
adc
fist
xor
jl
and
dec
ins
sub
stos
xchg
leave
scas
mov
sub
dec
fidivr
add
mov
dec
cmp
rol
pop
scas
shl
dec
cdq
add
fs
aad
adc
push
je
fs
movs
sbb
das
xor
loop
loope
ror
jge
lea
pop
in
jmp
je
inc
jbe
push
out
pop
pop
fcomp
or
add
mov
xchg
mov
push
fild
sbb
cmc
imul
cmp
adc
js
dec
sub
xchg
cmp
stos
pop
inc
shl
test
push
jecxz
mov
fcom
mov
and
adc
mov
add
iret
mov
fistp
lds
out
jl
and
jle
push
mov
imul
std
and
jmp
cli
dec
pop
fiadd
outs
leave
adc
xor
retf
sub
pop
xor
pop
fs
and
lds
out
mov
pusha
sbb
(bad)
shr
fwait
adc
fidivr
jno
imul
jb
sub
inc
pushf
mov
xor
or
cmp
mov
mov
test
(bad)
push
xor
jo
imul
data16
mov
lea
mov
mov
je
fdiv
mov
daa
ret
aas
sbb
mov
mov
(bad)
lods
imul
stos
test
ret
mov
rol
or
jmp
mov
ficom
je
push
add
mov
mov
rcl
mov
mov
jne
jae
cld
mov
jp
int3
or
cmp
fs
push
and
xor
dec
jo
test
xchg
dec
push
pusha
push
inc
jl
pop
xchg
fdivr
dec
mov
pushf
xor
cmp
push
inc
jmp
movs
add
test
neg
ins
mov
cmp
pop
xchg
mov
mov
jnp
das
mov
pop
mov
shr
test
popf
in
mov
jb
(bad)
push
(bad)
out
xchg
inc
sbb
sub
bound
enter
dec
lea
lahf
aam
(bad)
cld
push
adc
jecxz
sub
rcr
stos
mov
mov
push
mov
inc
addr16
retf
dec
xor
mov
pop
test
int
in
mov
inc
mov
test
js
shl
mov
sbb
and
mov
pop
or
mov
mov
daa
xchg
push
and
cmps
push
ins
cmp
test
dec
push
add
push
loop
(bad)
or
mov
lods
mov
iret
call
into
mov
lea
xlat
mov
mov
aaa
sub
ret
shl
out
jp
push
lahf
fs
or
push
call
or
mov
xchg
cmps
sbb
sar
push
in
pop
xor
ds
das
es
rol
mul
cs
push
jnp
stos
nop
and
(bad)
sub
(bad)
jecxz
mov
ret
mov
add
loopne
dec
sub
or
dec
and
out
mov
std
or
xchg
mov
popf
inc
or
inc
pop
ja
fwait
cmp
jge
sbb
mov
mov
aad
xchg
mov
mov
and
iret
lds
jb
fdivr
cdq
sbb
sbb
adc
adc
sar
pop
and
mov
popa
xchg
lods
push
add
data16
sbb
xchg
xchg
ins
ins
inc
adc
adc
in
mov
inc
fistp
inc
fdivr
call
in
sahf
rol
pop
pop
cmp
addr16
data16
cmps
out
mov
js
xor
fs
lods
push
(bad)
fdivp
push
or
sub
mov
xor
sbb
lea
retf
add
div
inc
sbb
cmps
inc
xlat
lods
mov
jae
sub
jb
repz
leave
jp
movs
ret
dec
mov
ss
mov
aam
js
inc
add
pop
cmps
js
movs
retf
mov
aam
push
inc
(bad)
push
mov
jp
test
shl
lds
jne
inc
mov
mov
mov
sub
mov
xchg
cli
jb
shl
inc
push
sub
call
pop
pop
cdq
jbe
jmp
adc
out
popa
outs
jmp
out
mov
inc
cmp
or
cmp
fwait
sub
sub
mov
icebp
(bad)
dec
jo
jnp
xchg
fisttp
mov
lock
mov
jnp
push
jo
popa
adc
jmp
loopne
sbb
arpl
sbb
(bad)
rcr
call
inc
push
mov
ins
add
cwde
fs
xchg
mov
aas
shr
mov
mov
xlat
call
jmp
mov
les
sub
test
(bad)
pop
push
aam
lock
adc
pop
pop
adc
dec
test
(bad)
(bad)
je
mov
fdivr
fwait
iret
popf
mov
mov
aaa
add
pop
and
(bad)
lds
icebp
dec
or
jns
add
mov
jg
imul
lods
pop
call
enter
scas
ret
and
cld
cdq
cmp
push
mov
loopne
cmps
jle
stc
push
sbb
hlt
es
or
inc
mov
or
mov
lods
lock
gs
loop
mov
aad
push
lods
dec
mov
jle
push
dec
xchg
cmc
cmps
in
out
xor
jnp
movs
sbb
xchg
hlt
stos
rcr
dec
mov
xor
lea
jecxz
int3
stc
jbe
and
test
xlat
pushf
ret
popa
jg
aam
pop
inc
sahf
sbb
xchg
add
sbb
mov
test
dec
pop
(bad)
xchg
ins
(bad)
push
iret
mov
test
pop
push
mov
les
retf
inc
fdiv
popf
adc
mov
xchg
mov
cld
or
retf
push
fwait
pop
cmp
rcr
add
fcmovbe
loop
jmp
mov
inc
in
mov
mov
dec
(bad)
jl
pushf
and
jmp
in
add
xor
add
rcr
cmp
and
in
xchg
pop
pop
mov
lahf
jmp
inc
xchg
cmps
jg
sar
cld
loope
mov
mov
dec
test
(bad)
out
stos
adc
push
fwait
fwait
push
xchg
push
test
jle
mov
mov
popf
mov
mov
mov
cmp
(bad)
sbb
ret
lahf
fild
call
(bad)
mov
int3
pop
test
inc
pop
mov
jne
xchg
push
pop
or
lods
imul
aas
mov
xchg
jl
lahf
dec
push
or
sub
(bad)
int
stc
das
mov
mov
mov
shl
jnp
push
loop
out
mov
mov
xor
repz
fs
pushf
mov
lahf
(bad)
test
dec
add
test
fisttp
sub
mov
scas
mov
ins
clc
ret
and
ficomp
mov
lods
xchg
mov
in
mov
jle
jl
cdq
jbe
and
xchg
mov
(bad)
sahf
popa
arpl
mov
int3
stos
cli
(bad)
inc
mov
sbb
inc
dec
data16
dec
inc
enter
or
add
cmp
test
cmp
cmps
pushf
xchg
mov
mov
jge
(bad)
scas
imul
shr
xchg
pushf
cmps
push
stc
popa
jne
fistp
aaa
call
xor
bound
xor
fsub
xor
sub
retf
xor
ror
(bad)
pushf
mov
shr
imul
loopne
mov
inc
mov
daa
(bad)
pop
in
in
loop
inc
sahf
adc
jge
ja
sbb
(bad)
addr16
(bad)
dec
cmps
pop
pushf
add
fs
xchg
push
movs
in
sub
mov
jmp
xor
jmp
push
je
mov
leave
sti
sbb
mov
ja
ficomp
retf
jle
rcl
leave
(bad)
inc
clc
jnp
jbe
lock
or
push
sbb
lea
or
movs
in
mov
xchg
popf
push
inc
jo
dec
mov
daa
cmp
cmps
sub
stc
or
inc
fs
loopne
add
jbe
shl
push
iret
jo
data16
push
pop
in
add
jmp
mov
dec
cld
jle
dec
jne
test
fcmovnbe
rol
rol
fidivr
push
or
xor
dec
push
fsubr
leave
push
retf
adc
cmc
add
stc
adc
lock
sbb
jne
pusha
xchg
sub
mov
(bad)
push
mov
xchg
aad
(bad)
cmps
or
(bad)
int
test
or
adc
mov
or
lods
sub
ja
les
sub
ins
mov
mov
jg
inc
loopne
test
push
pop
ds
pop
push
(bad)
mov
add
into
inc
add
cmps
push
aam
and
mov
(bad)
in
jne
jmp
adc
bound
js
cld
popf
xor
xchg
int
inc
xchg
mov
add
mov
jns
push
popf
int3
out
adc
xchg
jo
xchg
mov
or
cld
in
mov
push
lea
mov
movs
and
dec
push
mov
xlat
fstp
jg
push
rcl
mov
or
pop
mov
push
adc
jp
test
dec
mov
sbb
xchg
mov
out
and
push
sbb
jae
mov
test
adc
cmps
pop
lods
jmp
mov
xor
fs
lods
cmc
xor
ins
jae
mov
pop
push
pop
popf
adc
cmp
jns
mov
sbb
test
pop
stos
cmps
lock
or
aam
cmp
jmp
das
icebp
xchg
lods
lds
mov
push
pop
lods
int
push
xchg
bound
lea
std
mov
push
or
hlt
cmps
pop
call
push
push
push
cdq
push
(bad)
aas
xlat
dec
mov
or
stc
into
pop
jnp
cwde
sahf
jle
xlat
jge
in
jp
fucomi
test
adc
xchg
iret
cmps
mov
stos
mov
inc
mov
xor
xor
jecxz
jl
lods
adc
pop
and
dec
sbb
aam
jl
adc
je
icebp
sub
sub
xor
sbb
pop
int3
mov
lds
cmp
sbb
sti
mov
leave
xor
adc
dec
in
into
cmp
addr16
jns
inc
loop
pop
pop
(bad)
jmp
push
pushf
arpl
aas
in
cmp
mov
push
sub
xchg
inc
mov
xchg
jecxz
xor
in
cmp
cwde
pop
sbb
mov
sub
sub
and
or
popf
add
pop
xlat
dec
jb
clc
lahf
xor
mov
(bad)
xchg
test
sahf
sbb
mov
lods
lock
shr
sbb
addr16
ins
movs
popa
push
add
lods
mov
iret
mov
faddp
cmp
imul
call
arpl
mov
mov
and
add
mov
ror
clc
or
outs
xor
or
sub
push
lock
fwait
repnz
and
fild
mov
loope
push
mov
xchg
aas
inc
push
call
outs
jo
lahf
fdiv
and
xchg
out
scas
test
xor
stos
das
in
mov
adc
push
aad
out
jle
pop
inc
mov
push
push
sbb
jno
out
xchg
into
fcom
leave
loope
into
cdq
(bad)
test
lea
or
mov
sbb
in
add
mov
pop
ftst
xchg
pop
pop
(bad)
pop
or
test
imul
mov
push
xchg
or
xor
adc
mov
pop
(bad)
sti
push
pop
xchg
and
in
cmp
iret
loop
push
add
imul
nop
adc
int3
adc
or
and
and
mov
in
mov
push
pop
sub
mov
mov
inc
fwait
test
iret
push
repz
push
rcl
hlt
ret
dec
mov
daa
dec
mov
mov
imul
push
sub
fidiv
test
shl
sahf
loop
jmp
and
cmp
cdq
xchg
mov
mov
push
jl
pushf
scas
bound
mov
fwait
adc
dec
test
fwait
inc
repnz
mov
jbe
dec
aas
push
add
loopne
lods
inc
in
push
repz
sbb
fcomp
mov
jne
rcr
call
mov
aam
dec
pop
mov
ds
or
aas
in
test
ja
or
inc
sub
fild
push
mov
add
mov
push
mov
sahf
push
or
sar
jns
gs
iret
or
and
and
mov
(bad)
jbe
xchg
std
push
ret
add
mov
push
cmp
or
outs
push
retf
pop
inc
movs
ror
leave
xor
ror
fwait
xchg
mov
std
dec
nop
or
lea
ins
push
test
xchg
sub
mov
jmp
inc
push
mov
mov
popa
inc
inc
test
ins
cs
in
dec
iret
mov
jbe
popf
outs
mov
cmp
pop
je
xchg
pushf
ficomp
test
mov
ret
adc
lods
push
scas
mov
jge
fidiv
dec
shr
cpuid
push
loopne
xchg
sbb
sub
icebp
or
cmp
fst
sub
ins
add
call
dec
mov
cmp
sbb
idiv
hlt
push
in
pop
xchg
jge
out
sbb
mov
pop
jl
rcr
ins
pop
jmp
fldenv
test
iret
ins
push
test
fsub
in
scas
push
cmp
pop
push
sub
xchg
and
lods
inc
fcmovnb
or
dec
(bad)
pop
loopne
jge
inc
or
jle
mov
add
adc
xor
adc
(bad)
xchg
fnstenv
mov
jle
mov
loope
pop
jns
lods
lea
xor
cs
push
loope
mov
xchg
outs
xlat
mov
out
(bad)
aad
xchg
adc
adc
(bad)
jecxz
in
dec
ins
data16
arpl
mov
sbb
cmp
add
jl
daa
or
sub
xchg
pop
pop
inc
lahf
push
sbb
mov
rcr
data16
adc
lods
push
pop
addr16
pop
push
inc
pop
xor
dec
leave
mov
pusha
and
xlat
test
les
mul
dec
cmp
div
icebp
mov
rcr
(bad)
or
mov
std
in
scas
pop
pop
rcl
dec
push
icebp
dec
ds
movs
or
loop
sbb
lea
addr16
mov
into
retf
push
gs
outs
adc
pusha
jl
ja
dec
or
das
mov
data16
movs
rol
mov
into
call
cmps
sbb
and
movs
retf
mov
test
xchg
popa
sub
lds
leave
cmp
in
sub
adc
mov
nop
mov
dec
pop
setnp
fadd
loope
fdivr
pop
pop
je
fidiv
in
cld
imul
mov
xor
movs
sbb
push
dec
nop
add
out
inc
cmps
and
retf
fs
mov
and
add
lods
inc
or
std
dec
ss
fistp
scas
cs
mov
daa
jle
pop
jl
lds
leave
and
cmp
rcl
adc
cmc
jge
dec
clc
out
jle
sti
mov
cs
(bad)
cwde
pop
mov
js
shl
pusha
and
sub
(bad)
lea
pop
pop
xchg
shr
jno
gs
nop
pusha
pop
push
ror
(bad)
jecxz
mov
shl
rcr
neg
test
and
bound
or
ret
jge
mov
aad
das
cwde
xchg
out
and
mov
pop
push
pushf
dec
gs
cmp
in
push
mov
mov
pop
ja
ins
mov
or
mov
mov
fst
(bad)
add
adc
test
push
fimul
mov
std
mov
jae
dec
aas
stos
enter
(bad)
dec
pop
jp
mov
(bad)
popf
test
into
jg
jecxz
loopne
sahf
mov
dec
mov
jae
repz
loope
cmp
loopne
inc
jo
jne
cmp
jge
and
lea
ins
or
cs
jne
lds
idiv
leave
jg
lds
retf
je
lahf
pusha
fadd
sbb
push
mov
sub
jp
lock
sub
test
jnp
sti
inc
mov
jae
mov
jge
call
bound
mov
cmp
aas
pop
xchg
push
adc
push
test
cmps
xchg
mov
adc
xchg
pushf
mov
daa
mov
adc
jnp
sar
out
or
fnsave
ror
add
add
push
ret
mov
loop
(bad)
int3
sub
lea
sub
mov
ins
mov
data16
or
add
scas
lea
add
bound
lods
std
mov
inc
and
into
ss
sub
and
xchg
(bad)
retf
and
scas
adc
dec
out
cmc
ss
scas
les
jge
pop
mov
push
xchg
pop
xchg
sub
clc
jl
into
inc
xchg
(bad)
es
loop
dec
push
int
sub
aam
ja
jl
mov
push
sbb
pop
cmps
(bad)
je
mov
icebp
jno
add
mov
xchg
std
add
push
xor
out
jo
imul
adc
xor
mov
data16
outs
xchg
(bad)
jae
jmp
and
pop
shl
jns
add
imul
lods
push
jo
ins
sbb
and
fisttp
mul
lods
fsub
pop
mov
add
or
xor
mov
out
(bad)
inc
xchg
not
add
jne
cmp
xchg
ror
mov
push
add
pop
inc
movs
xchg
dec
imul
mov
pop
cmp
lods
rol
adc
lds
xchg
nop
lahf
sub
ds
mov
test
push
and
push
cmp
mov
call
outs
dec
xor
jb
data16
xchg
imul
push
xchg
xor
jmp
cli
lods
stos
nop
lods
mov
add
rcl
jne
or
int3
jne
or
pusha
fld
sub
pop
scas
push
jle
fnstcw
jbe
inc
dec
cmp
or
mov
xchg
mov
idiv
(bad)
push
or
jp
pushf
int3
dec
ja
movs
mov
test
rep
jno
push
(bad)
jns
pop
adc
clc
mov
jl
cmp
sbb
mov
in
inc
lea
imul
dec
sub
rcr
inc
in
cdq
cdq
xor
mov
stc
fsubr
gs
xorps
pop
aam
ja
outs
xchg
pop
nop
mov
jne
xchg
dec
lods
push
addr16
sahf
jnp
std
sar
xor
cmps
stos
iret
inc
mov
jns
add
jmp
daa
pop
stos
and
cmps
mov
dec
shl
jo
les
mov
dec
sub
clc
jne
cwde
shl
enter
enter
icebp
cmp
ficomp
xchg
fimul
inc
hlt
push
iret
das
sbb
loop
add
mov
daa
jbe
and
mov
dec
mov
pop
icebp
retf
push
(bad)
test
int3
adc
mov
cdq
mov
inc
je
cmp
lahf
xchg
xchg
sub
jle
adc
and
mov
mov
add
inc
mov
adc
call
xchg
jnp
jl
cmps
cmp
inc
and
out
and
movs
aad
adc
mov
hlt
lods
fiadd
mov
dec
stos
jle
push
int
out
push
jmp
lods
inc
pusha
gs
popa
jle
(bad)
aaa
xchg
xor
aas
scas
pop
mov
sbb
and
clc
mov
mov
cmc
xor
lods
push
push
sub
bound
(bad)
sub
cmps
xor
mov
fnstcw
pop
gs
push
mov
add
mov
aad
sub
lds
fcomp
cmp
lock
aaa
and
popf
js
addr16
ins
das
icebp
movs
(bad)
sbb
mov
mov
addr16
fcom
add
(bad)
fstp
cmp
pop
pop
scas
fst
push
sbb
cs
cmp
pop
cmp
pop
(bad)
pop
retf
add
and
(bad)
ins
cdq
mov
inc
sub
push
leave
sub
cli
pop
mov
in
jne
scas
les
pop
int
fnstsw
std
or
or
mov
xchg
xchg
sbb
or
shl
cmp
pop
and
leave
fild
mov
inc
dec
hlt
xchg
inc
hlt
inc
pop
push
icebp
std
les
or
pop
cmp
lods
inc
adc
out
je
clc
xchg
or
pop
lock
mov
mov
and
mov
scas
ja
nop
test
mov
pop
sbb
lahf
push
sahf
shl
mov
or
fwait
lods
nop
mov
inc
mov
push
cs
sbb
cdq
jne
adc
cmp
pop
test
movs
add
dec
dec
in
dec
mov
mov
and
jae
jecxz
inc
das
(bad)
mov
pushf
jne
jl
jmp
les
and
and
add
pop
(bad)
jle
jnp
dec
push
(bad)
(bad)
aad
ins
mov
xchg
push
in
jge
mov
jnp
sbb
fld
shl
xchg
fmul
jnp
bound
daa
ins
imul
push
add
in
movs
mov
je
arpl
inc
lods
mov
adc
inc
mov
push
test
dec
rcr
aam
adc
or
(bad)
fisttp
push
call
mov
mov
xlat
push
in
jge
aas
jp
xor
xchg
repz
xchg
in
popa
sahf
fwait
pop
sub
call
jb
inc
sub
push
ss
adc
mov
add
rol
mov
pop
lods
mov
imul
or
mov
ret
aas
lea
popa
rcr
pop
js
or
std
imul
sub
mov
arpl
cmps
push
inc
add
sub
rcl
mov
lahf
push
jg
pop
in
pop
shl
pop
jle
sbb
imul
push
pushf
xor
cwde
fsub
mov
test
lock
outs
or
repnz
mov
loop
push
mov
sub
push
je
inc
lahf
and
sub
jb
pop
shl
push
and
call
add
push
aas
or
fcom
pop
jecxz
adc
sub
jb
shr
pop
xor
inc
pop
inc
loope
fnstenv
pop
or
dec
ja
aas
mov
jns
clc
mov
dec
retf
lods
int
aam
mov
dec
es
das
push
je
mov
push
or
and
aad
dec
clc
xchg
xor
cmc
test
fdivp
ds
xchg
and
pop
push
les
cs
imul
(bad)
ret
xchg
mov
jp
aam
or
shl
pop
jle
xchg
push
in
add
pop
dec
mov
in
adc
and
movs
stos
or
loope
jmp
outs
dec
mov
push
(bad)
pop
dec
pop
retf
jns
jno
lods
inc
push
xor
ficom
mov
test
inc
stos
arpl
pop
pop
shl
sub
data16
push
pop
fsubr
mov
js
mov
cwde
int3
pop
inc
pop
cmc
ins
imul
mov
mov
push
jns
dec
lahf
test
push
cmp
rol
cdq
mov
leave
outs
mov
daa
xlat
mov
push
fisub
iret
dec
mov
sub
loope
mov
push
mov
mov
pop
test
movs
inc
jecxz
mov
push
ror
jns
xchg
cmps
or
mov
jns
mov
lods
inc
(bad)
cmps
ds
pop
test
lock
and
fsubr
call
pop
mov
mov
movs
xchg
test
pushf
stos
int
or
lds
sub
data16
cmp
xchg
scas
push
cmp
out
shl
jle
sbb
xchg
sub
sub
int3
pop
sub
push
xchg
inc
mov
imul
arpl
adc
fsubr
fisttp
cmp
ret
xor
xor
ja
pop
mov
mov
jne
jns
jno
fnsave
mov
mov
xor
js
sub
leave
cmp
jle
aaa
adc
lds
imul
inc
fmul
cmp
sub
push
pop
mov
or
add
icebp
enter
rdtsc
push
pop
inc
push
js
fsincos
add
movs
inc
or
ret
dec
lea
inc
xor
sbb
popa
push
ss
mov
gs
fild
fst
shr
imul
jle
add
lods
mov
inc
xor
popf
mov
mov
cmp
test
jge
js
ins
int
nop
xchg
mov
mov
je
fild
fldcw
cli
xor
data16
push
int3
inc
clc
enter
jp
movs
mov
dec
jp
jb
and
cmp
mov
push
fst
sti
nop
(bad)
inc
dec
xchg
movs
sti
mov
xor
mov
mov
js
and
jge
mov
pop
xchg
xchg
push
in
js
(bad)
mov
es
icebp
mov
cwde
push
pop
cmp
outs
(bad)
mov
je
stos
movs
lahf
ins
mov
mov
jmp
sbb
mov
test
sub
and
pop
push
add
lods
xor
(bad)
pop
jg
dec
out
dec
cmp
mov
xchg
sub
test
xchg
call
or
jns
dec
push
mov
xchg
add
les
loope
popa
sbb
xor
rol
mov
or
test
dec
retf
push
std
pop
pusha
mov
or
jp
dec
(bad)
jo
mov
shl
add
mov
lock
inc
fistp
inc
int
loopne
cmp
lods
int3
sbb
clc
shl
fistp
mov
rcr
rcl
pop
jns
cdq
imul
lea
sub
mov
into
cwde
mov
mov
addr16
xchg
xor
dec
fidivr
mov
inc
mov
scas
mov
pop
addr16
and
mov
dec
add
and
jae
or
pushf
inc
xchg
rcr
jmp
cmp
jbe
fwait
jnp
jmp
mov
mov
xchg
mov
mov
mov
pop
sar
(bad)
mov
inc
js
ss
scas
movs
jae
add
add
xor
adc
je
out
jmp
fsubr
(bad)
inc
pop
jle
out
pop
sub
mov
or
das
imul
and
cmps
jmp
xchg
dec
inc
lea
(bad)
xlat
and
jnp
adc
mov
mov
(bad)
dec
out
adc
jg
fldcw
xchg
push
dec
xchg
jne
xor
push
sbb
imul
lock
push
push
popa
cmp
(bad)
push
sbb
sti
int
mov
inc
sbb
std
or
dec
inc
adc
lods
dec
xchg
fidiv
aam
push
and
(bad)
and
js
imul
fs
out
push
mov
push
in
ror
xchg
push
test
ins
lods
enter
loope
aam
fistp
test
iret
xor
lods
jp
test
push
fcmovnu
fadd
lea
push
lea
(bad)
sub
sub
popf
stos
mov
fiadd
stos
ins
js
sar
in
pop
xchg
xlat
call
adc
xchg
xchg
xchg
scas
and
in
test
xchg
pop
movs
xor
mov
push
inc
inc
or
bound
ret
jbe
inc
push
mov
stos
push
lods
aas
pop
push
jbe
repnz
mov
or
push
push
ins
jp
ret
hlt
cmp
ins
gs
xchg
xchg
rcr
xchg
xor
pushf
add
sbb
jg
sbb
mov
(bad)
aad
dec
cmp
movs
loopne
jno
add
fisub
gs
mov
and
adc
mov
lock
mov
xchg
aam
test
dec
sbb
hlt
rol
sub
and
add
cli
in
xor
ins
scas
stc
test
mov
mov
leave
sub
jbe
iret
xchg
push
push
rcr
jnp
dec
push
sbb
adc
xor
xor
test
xchg
int
mov
mov
ins
shl
jbe
add
jns
mov
fs
int3
or
and
ret
test
lods
cmp
call
imul
and
sti
lds
enter
or
in
xor
lods
pop
ret
lods
data16
int3
xor
lods
(bad)
pop
mov
fisub
lahf
js
out
dec
mov
xor
push
dec
jl
out
jg
shr
xchg
lods
xor
dec
cdq
jge
in
cmp
xor
adc
push
fist
mov
jnp
sar
sub
push
lock
jae
sub
mov
jg
lock
loopne
ret
rcr
pop
pushf
loopne
mov
mov
sbb
xor
hlt
mov
or
lea
aad
inc
mov
dec
div
jb
cdq
mov
int3
retf
mov
mov
xor
nop
adc
push
mov
ja
cmp
lock
xor
stos
mov
inc
jge
in
fsub
jae
jae
movs
mov
dec
xchg
les
in
outs
add
ror
sbb
out
stos
fdivr
add
aad
and
test
pop
jno
xchg
ins
je
mov
mov
sbb
xchg
jbe
rcr
mov
sub
dec
sahf
mov
xchg
nop
mov
mov
arpl
cli
jno
lds
test
stos
add
push
lods
ja
hlt
dec
std
fmul
xchg
iret
scas
mov
mov
mov
sbb
test
push
jl
mov
daa
ret
movs
push
popf
cmp
lods
sahf
push
dec
scas
fisttp
xor
push
push
(bad)
mov
mov
push
data16
pop
lea
retf
es
xor
pop
push
dec
int3
mov
enter
xchg
int3
fs
add
mov
sbb
popa
stos
fmul
(bad)
xchg
sub
adc
dec
mov
fwait
neg
sahf
popf
(bad)
push
rol
or
lods
(bad)
cmp
aad
out
pop
test
adc
popf
fs
shl
xchg
(bad)
push
lds
cmp
loope
enter
and
mov
addr16
jge
xor
sbb
sahf
dec
mov
add
mov
call
adc
or
ins
xchg
pushf
push
mov
mov
es
mov
addr16
mov
jbe
jns
xchg
rol
imul
adc
mov
adc
mov
add
icebp
xor
push
jno
sbb
push
dec
leave
in
pusha
sub
or
and
and
ss
or
sbb
imul
jo
cdq
pop
aaa
add
retf
inc
(bad)
iret
mov
xchg
xchg
call
push
inc
test
data16
shl
jle
cs
jge
int
xor
mov
out
dec
imul
xchg
xor
cmps
std
int
gs
add
push
xchg
add
jmp
inc
stos
in
leave
dec
adc
mov
push
(bad)
mov
dec
outs
outs
jae
add
adc
cmps
pop
sbb
dec
test
fsub
sahf
jne
adc
dec
sbb
dec
xchg
stos
fcmovnb
test
(bad)
in
adc
lods
add
test
xlat
add
mov
jnp
sub
cmp
shl
pop
clc
mov
mov
add
fld
jnp
(bad)
inc
mov
push
or
ins
repz
jbe
dec
in
cwde
retf
sub
push
les
pop
mov
test
dec
(bad)
or
cs
sub
push
leave
jmp
xchg
bound
les
push
sub
xor
ret
jae
push
push
mov
sbb
cdq
or
gs
mov
cmp
jmp
xor
cmp
pop
es
jo
rcr
out
into
dec
cwde
mov
test
test
mov
(bad)
or
or
dec
loopne
cs
inc
(bad)
mov
or
(bad)
or
int3
mov
ss
int3
mov
js
cwde
cwde
or
mov
cmps
popf
pop
outs
ja
mov
inc
out
or
nop
int3
fist
pop
push
outs
and
push
pusha
out
movs
ret
push
sub
cs
push
cmps
and
mov
adc
fs
(bad)
outs
repnz
dec
jge
push
adc
add
mov
xchg
retf
lds
gs
xor
(bad)
adc
mov
sbb
cli
out
xor
test
inc
data16
mov
lahf
loope
repz
inc
sub
inc
sub
jnp
xor
je
lock
push
push
xor
cwde
ror
mov
call
pop
dec
test
inc
aad
inc
mov
je
push
push
pop
jmp
adc
push
sbb
dec
or
mov
dec
popf
push
inc
pop
je
or
xor
sub
push
and
push
ins
jbe
pusha
jl
jns
pop
fldln2
out
xchg
pop
iret
nop
std
sbb
jmp
iret
ror
adc
mov
jmp
add
push
(bad)
fs
pop
div
cmovle
test
inc
sti
fidiv
test
inc
in
mov
push
mov
ds
adc
mov
scas
pop
rcr
fnstsw
cmp
push
int
outs
sub
test
test
jno
js
lea
mov
add
rcl
pop
mov
sbb
mov
xchg
test
cdq
movs
int3
adc
and
pop
pop
mov
mov
mov
mul
cmp
dec
xlat
lods
shl
bound
mov
cmp
mov
xchg
pop
mov
adc
test
dec
inc
mov
push
test
rol
lds
scas
xor
jae
xchg
inc
sub
popf
adc
jns
dec
and
lea
xor
push
xchg
jbe
pop
test
xchg
mov
pop
pop
sbb
cs
dec
in
(bad)
xor
mov
rcl
(bad)
mov
int
mov
adc
sbb
js
mov
jae
(bad)
(bad)
test
in
loope
lds
pop
adc
sub
mov
mov
ret
jl
mov
retf
rol
add
xor
or
addr16
clc
iret
xchg
add
sub
mov
dec
sbb
ret
out
and
std
mov
nop
ds
add
push
xor
popf
arpl
adc
std
scas
gs
push
dec
ss
ror
sub
stos
mov
ins
(bad)
sub
mov
(bad)
or
xor
in
and
loopne
and
ret
pop
in
popa
dec
mov
or
add
xor
adc
shl
pop
test
fwait
scas
lea
int
fisttp
sahf
aam
ja
jbe
add
dec
icebp
dec
loopne
or
pop
add
arpl
aaa
mov
sub
sub
shl
pusha
or
jmp
mov
ja
inc
(bad)
and
ins
adc
or
nop
addr16
lds
in
jecxz
arpl
push
jge
mov
mov
data16
push
jmp
pushf
sbb
outs
gs
scas
int
sub
retf
popf
mov
xor
jecxz
or
sahf
test
xchg
push
dec
adc
add
fcmovnbe
dec
adc
jmp
pop
test
add
sti
div
nop
movs
add
inc
jmp
out
sahf
shr
ins
(bad)
mov
pop
push
lock
sbb
mov
mul
mov
icebp
mov
jl
cdq
pop
xchg
sub
xchg
jmp
push
sub
lea
and
rol
fimul
dec
lea
in
clc
lods
pop
dec
cmps
mov
xlat
jg
inc
retf
xchg
push
in
inc
mov
jle
mov
fsubr
add
xchg
bnd
or
jg
in
jns
xchg
jmp
aad
cmp
(bad)
xacquire
fucomi
int3
int3
or
or
test
pushf
push
mov
jge
xor
test
xchg
(bad)
iret
xor
test
mov
loop
sbb
loopne
mov
out
sub
and
cmp
ja
rcl
data16
ja
sub
sub
fcomp
(bad)
frstor
mov
out
fstp
sub
outs
les
sbb
or
sti
sub
push
sub
aad
adc
nop
push
jnp
rcr
sbb
xchg
xor
jnp
cmp
(bad)
pusha
mov
jns
jo
sub
push
xor
pushf
adc
push
sbb
push
call
(bad)
inc
fisttp
pushf
jns
mov
xor
rcr
in
(bad)
inc
pusha
dec
pushf
ss
into
imul
out
xchg
mov
pop
ja
cwde
cmp
adc
div
jbe
sbb
js
mov
pop
pusha
or
loopne
mov
lock
dec
mov
or
xor
xor
mov
shl
xor
cli
test
and
rcl
cs
fwait
outs
int3
mov
popf
movs
rcr
mov
ror
lods
ja
add
pusha
ins
icebp
mov
leave
idiv
mov
jbe
push
stc
aad
mov
dec
adc
dec
and
ja
out
jle
aas
stos
mov
test
gs
call
clc
loopne
aaa
test
adc
push
fild
xor
aaa
xchg
dec
push
jae
jnp
(bad)
std
mov
mov
or
add
or
jbe
sbb
dec
mov
push
dec
jl
or
call
dec
ds
prefetchw
jnp
mov
push
mov
(bad)
xchg
cld
xchg
jnp
mov
aam
fs
movs
mov
mov
les
pop
mov
retf
xor
adc
pop
aad
movs
jo
lods
pop
add
push
gs
adc
fmul
lahf
pop
mov
push
inc
repnz
sub
jne
adc
test
sar
cmps
cli
push
mov
clc
pop
je
and
mov
mov
xchg
or
adc
adc
jno
loop
cmp
jo
mov
mov
cmps
cld
mov
inc
out
test
push
in
outs
adc
adc
pop
jno
dec
and
imul
push
cmp
xor
sar
xchg
cmps
push
mov
cwde
jmp
lods
push
mov
xlat
or
repz
fcmovnu
pusha
and
nop
sub
jne
xor
lock
es
inc
stc
cmps
and
mov
test
mov
xor
mov
add
(bad)
rcl
push
shl
mov
into
add
sbb
add
ror
rcr
loope
pop
sbb
test
sub
loop
mov
sub
jbe
loop
jmp
outs
cmp
retf
fistp
mov
ret
loopne
sar
fadd
mov
mov
jl
mov
mov
fld
jp
cmps
ja
rol
mov
dec
adc
data16
bound
add
and
cmp
iret
imul
mov
jmp
xor
daa
in
mov
mov
ret
push
inc
sbb
xor
test
call
sbb
inc
aam
iret
mov
into
sti
leave
cmp
cmp
jnp
rol
loope
jnp
mov
retf
xchg
mov
add
push
push
scas
out
cmp
xlat
pop
mov
pop
sbb
lds
inc
mov
fst
mov
call
pop
mov
stc
sbb
inc
cmp
rcr
sub
ja
ss
push
mov
jecxz
lahf
addr16
and
or
fsubr
or
retf
bound
cmp
and
sbb
fidivr
inc
les
jmp
push
dec
xor
and
(bad)
dec
mov
add
add
je
xchg
pop
xor
xchg
pop
add
dec
adc
mov
push
cdq
and
sar
ficomp
jmp
fistp
xchg
ins
aad
iret
pop
fnstcw
pop
ret
push
mov
push
push
ret
scas
xor
sbb
mov
inc
movs
lods
ret
and
sub
mov
fistp
xchg
aaa
push
je
stos
out
pop
mov
test
jns
inc
shl
mov
iret
mov
fs
int3
sbb
lods
pushf
sbb
add
mov
mov
inc
les
test
jb
cmp
jno
push
lods
cmps
mov
inc
popf
inc
js
add
(bad)
pushf
xchg
jae
xchg
into
(bad)
js
aam
rcl
aad
sti
jle
std
lods
rol
stos
leave
pop
sbb
pop
inc
mov
arpl
in
fdiv
aam
mov
mov
add
loopne
sahf
cmp
test
rcl
mov
pop
add
lahf
test
loopne
jmp
and
ja
pop
(bad)
call
addr16
jecxz
(bad)
and
add
xchg
movs
mov
retf
sbb
fsub
imul
stc
aas
xor
dec
fstp
mov
dec
xchg
cmp
pop
dec
jns
inc
jp
jno
in
sub
pop
lahf
fist
dec
cmp
test
ret
out
jnp
xchg
sub
jo
sar
popf
mov
or
and
mov
scas
lahf
sub
outs
imul
fistp
jecxz
add
xchg
fistp
ins
sti
push
ret
xchg
cmp
mov
test
scas
and
cdq
neg
dec
repz
mov
push
adc
les
das
mov
es
in
jmp
aad
lods
xchg
in
add
sbb
adc
fbstp
je
(bad)
lea
stc
inc
ds
sub
sub
ja
inc
mov
or
test
mov
ret
test
adc
int
neg
mov
adc
xchg
hlt
xchg
std
jmp
iret
out
sub
jne
outs
cwde
std
mov
lds
jbe
jno
push
mov
and
dec
rol
or
pop
mov
fld
dec
push
xchg
nop
(bad)
pusha
or
sbb
loopne
js
and
(bad)
cmp
push
sub
inc
jb
push
xor
xchg
or
jmp
stos
call
(bad)
cmp
add
adc
fild
xor
out
fnstsw
push
cmp
mov
or
or
mov
lods
test
lods
dec
and
cmc
push
fisttp
movs
dec
retf
inc
pop
xchg
lds
das
loopne
push
hlt
in
test
lea
jecxz
int
fsubr
iret
popa
stos
add
cmp
cli
pop
cdq
xor
loopne
sti
out
sbb
js
jbe
jge
lods
js
sub
push
out
aam
test
xor
adc
outs
fs
addr16
mov
jne
pusha
push
jge
mov
jle
sbb
or
adc
add
push
int
cmp
jne
jge
(bad)
lods
push
test
lahf
xchg
in
fist
pushf
enter
lock
push
cwde
jle
jl
xor
mov
arpl
daa
cmps
sub
mov
adc
xor
push
jns
into
cmps
sub
and
sti
add
sar
imul
cld
xor
test
ins
lods
sbb
adc
and
retf
xchg
xchg
adc
xchg
jbe
dec
mov
enter
or
mov
push
test
sbb
xchg
out
cmp
sbb
add
cmp
sub
je
arpl
push
xchg
mov
inc
iret
lea
and
scas
dec
dec
sub
mov
test
or
xchg
imul
mov
dec
ja
xchg
in
pop
repz
jecxz
mov
mov
sub
lds
mov
or
jnp
jo
cmp
int
out
jns
cli
dec
out
ins
mov
lods
je
test
push
ja
dec
adc
pop
daa
sub
mov
aad
mov
js
xchg
in
jno
cmps
sahf
push
gs
sbb
add
stos
mov
icebp
(bad)
fld
imul
pop
jns
(bad)
ror
aam
or
or
jmp
mov
push
dec
movs
pop
pop
ror
dec
fstp
push
adc
loop
or
fwait
inc
push
sbb
cmp
lea
js
and
or
in
push
mov
or
ror
adc
mov
xchg
xor
push
xchg
fisttp
(bad)
cdq
cld
mov
ror
push
int
jmpw
lock
cld
mov
inc
pop
int3
pop
adc
cmp
fsub
fdiv
xor
mov
pop
sbb
cmp
dec
js
fdivr
loopne
or
aaa
add
jbe
push
mov
and
lahf
cmps
(bad)
test
lock
jne
not
cwde
adc
sar
ins
jl
jno
(bad)
gs
add
xchg
ss
or
pop
inc
(bad)
pusha
outs
cdq
loopne
ror
cld
inc
popf
mov
movs
xor
(bad)
mov
call
pop
add
(bad)
mov
mov
lods
scas
mov
movs
je
mov
ins
es
mov
idiv
sahf
jne
pop
out
xor
mov
inc
xchg
and
mov
scas
fisttp
dec
xchg
or
pop
call
icebp
ins
or
pop
mov
add
jle
test
clc
sbb
in
xchg
mov
add
cmc
or
rol
adc
imul
mov
sar
mov
xchg
or
push
pop
stos
lea
dec
and
push
mov
aam
sbb
je
pusha
jge
int
retf
add
inc
cli
xor
xchg
pop
mov
cdq
rcr
cmp
hlt
xor
fnstenv
cli
test
shl
fstp
push
push
nop
(bad)
mov
dec
data16
or
xor
fs
inc
add
add
(bad)
jmp
cmp
(bad)
xlat
loope
inc
fwait
int
out
mov
fcmovnb
sbb
xor
cld
retf
jne
jbe
jge
in
retf
cdq
jmp
ficom
dec
jl
jmp
push
stc
daa
xlat
loopne
cmp
fmul
loop
repz
aad
and
mov
enterw
int3
iret
add
lods
scas
mov
xchg
xchg
mov
loopne
mov
inc
(bad)
jecxz
cld
pop
test
aam
jo
push
push
sbb
es
xchg
(bad)
jecxz
cs
or
(bad)
(bad)
retf
mov
cld
inc
cdq
test
sbb
stc
xchg
(bad)
fisub
jle
mov
mov
(bad)
loopne
and
and
push
and
imul
divps
fsubp
movs
int3
mov
mov
pusha
push
mov
adc
cmp
xchg
shl
out
clc
jmp
or
pushf
push
cli
sub
dec
dec
or
scas
xchg
shr
icebp
xchg
mov
fist
mov
int
imul
mov
loop
lock
push
mov
and
lds
push
cwde
lahf
or
in
(bad)
sahf
mov
and
sub
mov
pop
dec
mov
jg
jne
mov
mov
popf
jmp
sbb
mov
sbb
fmul
int3
add
ror
dec
dec
xchg
mov
add
jns
mov
leave
mov
xchg
jg
mov
mov
test
test
js
mov
add
sti
dec
ins
std
add
popf
mov
imul
lods
xor
adc
cdq
ja
into
xor
mov
xchg
ret
mov
icebp
es
sub
xchg
cmp
cmp
call
(bad)
outs
jo
data16
enter
lahf
pop
stos
loope
sahf
mov
icebp
xchg
sub
mov
xor
(bad)
call
stos
shr
mov
mov
aad
frstor
fs
fwait
xchg
cld
fwait
lds
nop
pushf
pop
cdq
mov
(bad)
shl
aam
lods
jmp
int
mov
std
scas
sbb
retf
mov
jae
cmps
mov
ja
inc
data16
retf
mov
iret
jge
xchg
or
xor
push
jp
pop
jo
dec
das
popf
lods
scas
mov
(bad)
aas
sub
push
cmp
ins
mov
push
sbb
mov
cmp
push
sub
shl
pop
loop
push
pop
in
mov
or
ja
ins
mov
and
push
cs
and
xchg
xor
in
aas
cwde
pusha
sbb
pop
push
xor
xor
bound
fcom
jp
sub
pop
pop
push
mov
pop
mov
xor
xchg
and
ret
sub
movs
push
mov
test
ja
and
jl
push
xchg
push
fimul
aam
mov
fmul
rcr
jnp
out
push
xor
mov
ss
ror
xchg
(bad)
shl
inc
xchg
adc
clc
cwde
daa
mov
adc
das
loopne
imul
and
jmp
add
stos
jne
dec
lds
stos
pop
jb
push
xor
pop
xor
scas
jp
add
sbb
in
fs
cdq
es
mul
das
xchg
jns
push
popf
xchg
mov
jnp
ins
cmp
not
sub
jecxz
mov
push
mov
leave
xor
lock
pop
fist
jbe
adc
pop
mov
mov
adc
test
pop
mov
mov
aam
rcr
sub
xchg
mov
cli
add
pop
(bad)
into
and
ja
das
and
jb
jnp
mov
sub
or
outs
mov
push
into
addr16
xchg
xor
leave
std
xchg
and
jno
pop
out
cmps
mov
shr
xchg
inc
data16
sub
pop
adc
fstp
and
mov
int3
jl
(bad)
outs
and
ja
adc
pop
cwde
enter
cmc
cdq
pusha
data16
cld
mov
jne
push
popa
fs
scas
xchg
sar
and
ficom
popf
and
cdq
pusha
pop
call
in
nop
lea
mov
cdq
data16
or
dec
mov
movs
mov
inc
arpl
fsubr
jle
jecxz
inc
sbb
lods
or
jb
sbb
mov
sub
sbb
lds
dec
pop
jnp
div
aam
sbb
cdq
lea
ins
sbb
ja
jns
(bad)
jecxz
aas
or
sti
cmps
jns
fild
mul
outs
shl
loope
push
cmp
adc
adc
push
aas
push
icebp
sub
ins
popf
sbb
les
aad
fcmovnb
jmp
adc
lods
fwait
pop
or
sub
rcl
inc
and
push
arpl
or
jbe
mov
fstp
scas
aad
push
cmc
xchg
retf
lahf
xor
(bad)
(bad)
pop
mov
gs
mov
lds
dec
adc
ret
cmp
adc
pop
inc
lea
ins
mov
ss
mov
mov
cwde
mov
sub
pusha
pusha
xchg
cmp
rcl
add
push
mov
aam
lods
gs
out
or
(bad)
fadd
dec
mov
add
fdivr
cmp
leave
pop
mov
cdq
es
(bad)
sbb
cmp
rcr
in
cmp
in
mov
enter
out
pop
nop
or
sbb
outs
adc
ins
cmp
repnz
push
pop
in
sub
and
or
dec
dec
mov
fst
int3
dec
out
push
fcomp
mov
adc
dec
scas
test
mov
xor
and
shl
jle
dec
xchg
loopne
add
mov
mov
outs
ror
mov
(bad)
(bad)
fnsave
or
outs
push
(bad)
fwait
daa
pop
and
daa
xchg
(bad)
lahf
rol
jecxz
mov
arpl
push
daa
jge
pop
pop
xchg
and
pop
mov
mov
sub
push
ret
inc
mov
sub
jmp
fisttp
call
into
or
jg
push
xchg
pop
lock
mov
mov
retf
pop
inc
(bad)
jmp
adc
mov
shr
test
sbb
(bad)
mov
cli
and
xchg
in
das
mov
and
inc
xchg
pusha
mov
fld
or
jle
jnp
fcomp
xchg
adc
lea
das
inc
aas
leave
pop
add
or
int3
stos
pcmpgtd
mov
arpl
mov
(bad)
pop
mov
push
jp
push
mov
push
pop
(bad)
xchg
das
ins
pop
add
shl
jl
lds
push
sub
push
outs
rcl
lahf
adc
das
push
sbb
inc
lock
push
popa
dec
call
test
add
rcr
mov
sub
fucomip
in
adc
mov
mov
mov
leave
sbb
mov
jmp
jb
pop
push
stos
call
sub
rol
xor
mov
outs
mov
or
xchg
ret
je
add
mov
in
or
(bad)
aaa
dec
cmp
xor
lock
scas
repz
icebp
je
das
pop
scas
sahf
shr
xor
test
iret
xor
xchg
(bad)
xlat
jb
das
lahf
add
push
jmp
mov
mov
mov
xor
cli
mov
dec
add
xor
pushf
lods
mov
or
and
mov
pop
push
jecxz
addr16
cld
pop
aaa
lods
inc
stos
lods
outs
cmp
(bad)
rcl
and
xchg
push
adc
shl
jno
cwde
cmp
sbb
mov
dec
ins
add
gs
js
xor
repz
in
mov
mov
mov
mov
(bad)
out
clc
aad
sbb
sub
push
imul
sahf
lea
je
movs
push
add
nop
or
xor
add
jb
cmps
addr16
scas
sahf
fdiv
fwait
mov
aad
aas
les
sub
xor
push
mov
mov
dec
scas
rol
mov
movs
dec
mov
fisubr
pop
dec
xlat
push
push
push
mov
loop
add
mov
mov
jle
pop
sbb
or
les
xchg
inc
dec
aaa
xlat
shl
clc
das
imul
int3
or
cmp
inc
push
inc
push
sbb
dec
ins
adc
push
je
jno
movsx
inc
shl
push
test
fs
sbb
pop
jo
popf
adc
inc
dec
cmp
xchg
mov
adc
les
enter
xchg
adc
fsubr
repnz
mov
pop
mov
pop
rol
jge
loope
mov
or
call
sub
adc
arpl
in
or
gs
add
sti
fistp
dec
imul
data16
mov
push
pop
xchg
test
gs
fldenv
cmps
mov
and
out
xchg
dec
lds
xchg
ds
xor
or
jns
mov
push
outs
mov
xchg
mov
push
addr16
movs
or
int3
or
hlt
push
or
fidivr
je
inc
add
push
mov
jbe
(bad)
aas
scas
and
ret
je
xor
mov
jnp
push
loope
sbb
retf
cmp
xlat
cli
test
loope
mov
lods
repnz
pop
jnp
fsub
inc
dec
cwde
stos
lock
out
dec
mul
pop
or
loopne
xchg
dec
into
push
stc
test
cmp
stos
mov
jge
sbb
rcr
test
jb
test
iret
add
test
in
test
sar
add
icebp
mov
fsubr
inc
data16
sbb
xchg
jp
into
repz
fcom
ror
lds
sbb
pop
sub
je
ja
lods
push
push
stos
popa
(bad)
mov
mov
mov
fidiv
and
jno
dec
outs
int
push
jnp
or
mov
inc
add
jp
jns
push
pop
outs
sar
loope
mov
sbb
pushf
(bad)
and
lock
sub
lock
nop
pop
inc
mov
loopne
xchg
dec
sbb
pop
dec
sbb
dec
(bad)
lods
jle
push
arpl
xor
mov
in
inc
movs
std
popf
jl
and
xor
shl
mov
xchg
fwait
push
popf
mov
stos
jb
enter
test
popa
mov
pusha
xor
mov
jp
or
in
mov
fisttp
jbe
mov
popf
pushf
imul
mov
int
mov
and
mov
inc
enter
push
xchg
push
scas
jge
mov
pushw
std
xchg
pop
and
add
mov
sbb
bnd
push
outs
push
lds
das
cmp
sti
mov
adc
inc
mov
loopne
sbb
push
jbe
mov
test
jg
sbb
jno
inc
lahf
lock
loope
adc
and
mov
mov
dec
mov
in
int
aam
jne
sub
push
inc
stos
dec
cmc
xchg
lea
sbb
fmul
lahf
inc
pop
mov
mov
hlt
cmp
adc
push
xor
sbb
std
mov
pusha
(bad)
leave
mov
xchg
movs
clc
retf
xchg
inc
lods
repz
aad
mov
push
mov
or
xchg
adc
jo
sbb
dec
mov
and
pusha
aaa
push
mov
fs
inc
mov
jns
call
mov
pushf
dec
gs
xor
xchg
mov
mov
scas
sub
xor
fisubr
mov
xchg
mov
or
test
outs
push
test
jns
jno
or
imul
loop
ins
pop
adc
(bad)
test
ds
fwait
pop
push
mov
mov
cmps
mov
xchg
cmp
mov
mov
gs
push
pop
iret
fucom
mov
cmps
xchg
jo
adc
or
push
cmp
mov
pop
mov
shl
mov
std
jle
arpl
je
imul
sub
test
iret
rcr
dec
mov
call
mov
test
scas
mov
add
pop
pop
xor
mov
jno
and
and
lahf
loop
(bad)
adc
cwde
jae
lahf
sbb
lahf
div
mov
mov
(bad)
jns
push
mov
ins
xchg
fucomp
inc
(bad)
(bad)
outs
fnstsw
lahf
push
div
imul
js
arpl
arpl
mov
mov
ins
pop
mov
adc
jb
jns
test
imul
stos
mov
rol
jb
mov
pushf
mov
cmps
xchg
pop
cmp
rcl
ficom
and
sub
mov
nop
jl
iret
dec
jns
mov
cmps
jge
jae
sbb
mov
mov
mov
mov
mov
push
sub
ins
ds
sub
jns
push
js
fs
popf
outs
hlt
xchg
fstp
shl
mov
fsubr
addr16
sub
loopne
mov
nop
aam
pop
adc
dec
test
(bad)
aam
adc
cmp
dec
push
cmc
repnz
mov
shl
mov
cmc
mov
adc
int3
into
sahf
pop
popf
sbb
les
ds
xor
lea
pop
lahf
lahf
out
mov
mov
xor
cmp
sub
(bad)
or
or
cmp
pop
lea
sub
test
sar
or
adc
mov
xchg
mov
jne
(bad)
fld
jb
aad
outs
xor
xlat
lea
sbb
scas
sar
imul
sbb
outs
js
xor
or
mov
or
jno
outs
int
pop
mov
mov
or
adc
inc
xchg
lahf
lea
ja
xor
ss
inc
lock
rcr
(bad)
fild
mov
retf
pop
iret
pop
call
call
ja
dec
imul
cmp
adc
sub
das
mov
push
xchg
(bad)
shl
les
push
push
mov
adc
sub
mov
mov
mov
iret
jle
add
stc
arpl
pop
retf
pusha
add
inc
cli
adc
scas
lea
push
(bad)
repnz
ficom
(bad)
fs
loopne
vmwrite
(bad)
fiadd
add
dec
jbe
xor
out
retf
repnz
or
mov
cld
sbb
(bad)
lods
pop
std
and
inc
int
cmp
ss
adc
cmovs
inc
cmp
ins
repz
icebp
mov
mov
(bad)
in
repnz
imul
dec
push
test
sub
mov
outs
js
dec
aam
jmp
jne
movs
xchg
jb
mov
jg
dec
push
xchg
mov
call
lahf
out
test
stos
js
fisub
sbb
dec
cmp
xchg
mov
or
out
mov
mov
mov
clc
fild
addr16
sbb
or
mov
lea
fsub
sub
shl
pop
ficom
inc
xor
lods
cmps
and
fdivr
shl
adc
jp
mov
pop
pop
jle
push
dec
xor
mov
fs
bnd
aas
mov
leave
je
(bad)
imul
mov
or
cmp
imul
test
dec
inc
jne
lods
inc
fldenv
jecxz
outs
inc
into
aaa
xchg
sbb
dec
mov
mov
outs
cmp
pop
les
or
in
and
(bad)
aaa
call
mov
mov
jno
jg
dec
or
add
int
or
pusha
push
xor
jl
cmc
and
cdq
sbb
dec
(bad)
mov
push
sub
mov
mul
push
(bad)
cmp
(bad)
xchg
xchg
cmp
cdq
test
es
test
out
push
jne
loop
xchg
fsubr
mov
sbb
fst
and
fst
lahf
hlt
cdq
cmp
mov
and
xchg
cdq
in
cdq
xor
cmp
sbb
sbb
cmp
lahf
sbb
cmp
mov
loopne
iret
arpl
enter
adc
sub
repnz
push
pushaw
or
mov
xchg
xchg
in
push
jns
ficomp
xor
scas
or
jo
out
rcl
xchg
enter
sbb
push
aam
push
jne
outs
movs
jb
sbb
je
ret
rcl
dec
sub
imul
and
add
inc
pop
lea
int3
jno
scas
mov
imul
pop
xor
xlat
shr
jecxz
sub
sbb
enter
shl
pop
xchg
scas
retf
retf
cmp
adc
cmp
pop
scas
and
sti
or
aaa
inc
nop
mov
int3
or
sti
jmp
fistp
rcr
pop
and
and
shl
add
ror
(bad)
push
push
xchg
push
iret
mov
retf
add
dec
mov
xchg
ret
fst
das
scas
mov
shl
ins
popf
push
sub
cmp
mov
xchg
cmp
retf
mov
push
gs
mov
add
mov
jnp
retf
jnp
xchg
mov
fcomip
sbb
sub
gs
jo
ss
push
mov
cld
sbb
push
jb
repnz
mov
add
adc
cmc
lods
lods
xchg
imul
mov
cmps
mov
pop
fst
or
fs
sub
xchg
jg
push
mov
xor
xor
inc
rcr
add
mov
in
cmp
push
(bad)
outs
mov
movs
mov
out
nop
jle
mov
nop
xlat
enter
test
dec
int
mov
jb
xchg
or
test
call
jle
cmp
inc
gs
nop
pop
pop
mov
int3
mov
mov
scas
icebp
add
xor
enter
call
leave
out
retf
not
lahf
aaa
int3
adc
outs
inc
(bad)
jo
dec
lds
and
push
mov
jmp
(bad)
std
dec
fisttp
int3
fcom
movs
test
jb
sbb
and
adc
ror
pop
pushf
adc
fcom
into
ret
les
xchg
pushf
sub
mov
je
mov
jno
pop
cmp
xor
fist
xchg
iret
cmps
and
aam
arpl
ret
push
popf
cmc
fmul
lahf
jge
sbb
nop
lahf
adc
push
mov
push
mov
jne
and
imul
test
fwait
sbb
mov
fst
xchg
rol
cs
fisub
mov
mov
in
mov
in
mov
adc
imul
dec
addr16
push
mov
das
pop
je
fsubr
pop
inc
aas
data16
sub
scas
inc
push
retf
idiv
add
hlt
sub
sub
sbb
inc
xchg
add
std
mov
pop
js
mov
ss
(bad)
fcomp
outs
dec
jecxz
test
mov
jecxz
xchg
push
add
add
es
pop
test
dec
loope
pop
pop
push
fld
sbb
xchg
cmp
cmp
push
xchg
sub
jo
cwde
popa
sahf
test
scas
nop
aam
and
in
inc
lock
sbb
mov
outs
(bad)
xacquire
fdiv
push
sar
das
imul
mov
adc
cmps
lods
dec
or
shl
(bad)
(bad)
in
cvttps2pi
push
adc
and
mov
cmp
test
loopne
cld
jns
mov
aaa
sbb
pop
call
popf
(bad)
xor
mov
dec
sbb
sbb
sbb
sbb
rol
xchg
jp
sub
and
pop
js
inc
xlat
lods
movd
mov
popf
into
adc
push
std
pop
gs
loopne
rcl
ror
xchg
dec
xchg
nop
inc
push
mov
adc
xor
iret
and
pop
xchg
or
rcr
push
xchg
jb
cmp
push
mov
ds
pop
fistp
cmp
popa
or
cmp
dec
dec
pop
loope
mov
fcomp
test
push
(bad)
out
pop
xchg
imul
sub
rcr
setle
pop
fs
fs
jg
and
fisub
cwde
test
into
test
pop
cmc
mov
jp
mov
push
jnp
stos
xchg
jne
mov
lahf
mov
cmp
int
pop
outs
jns
(bad)
int
aas
or
xchg
or
mov
iret
lahf
mov
or
inc
cmp
or
call
in
retf
lock
add
test
test
jp
(bad)
rol
pushf
fcmovu
sbb
or
shl
iret
inc
in
or
ret
inc
xor
cmp
jae
aam
frstor
sbb
push
sbb
mov
dec
xchg
arpl
xor
pop
xor
mov
sbb
(bad)
xlat
pop
adc
std
mov
iret
pop
repz
pop
(bad)
pop
push
ds
retf
lods
sub
out
mov
and
inc
ins
mov
inc
retf
cmp
leave
sub
data16
(bad)
lds
inc
push
xlat
mov
mov
jne
sbb
pop
clc
inc
mov
dec
add
lds
scas
mov
fs
outs
dec
xor
mov
inc
cmps
jne
xchg
rcl
dec
or
push
mov
dec
or
rol
jne
xchg
cli
dec
dec
xchg
jmp
(bad)
hlt
das
adc
mov
and
xchg
mov
int
cmps
cdq
inc
or
enter
push
xor
dec
xor
mov
pop
push
jae
repz
call
(bad)
xor
dec
retf
inc
add
fwait
ror
test
jle
mov
mov
sahf
je
out
out
(bad)
iret
pushf
std
mov
mov
cli
and
inc
pop
dec
leave
cwde
outs
ds
jae
push
cmp
cdq
loope
mov
movs
mov
mov
out
fcomp
iret
loop
ror
mul
or
xor
(bad)
rol
std
pop
or
shl
dec
and
xlat
hlt
or
test
mov
fwait
jns
xor
mov
xchg
sub
xchg
and
loopne
ret
imul
lea
out
cmp
clc
minps
sub
dec
jle
or
sub
aas
push
adc
jmp
iret
push
sub
and
test
mov
pop
movs
jbe
gs
int
pop
daa
cmp
dec
imul
sub
outs
mov
arpl
jle
into
aas
jmp
(bad)
sti
ins
xchg
aaa
adc
inc
pop
test
lods
adc
cmp
mov
rcl
rol
cmp
push
sub
cmp
push
jne
(bad)
jmp
push
int
mov
cmp
test
mov
sbb
das
enter
fnsave
jb
test
mov
imul
movs
or
loopne
push
mov
push
imul
test
jno
mov
mov
cli
xchg
mov
cmp
lock
int3
mov
arpl
adc
jne
pusha
pop
mov
enter
push
(bad)
aam
imul
mov
push
ja
in
mov
add
leave
push
movs
dec
test
pop
movs
inc
sti
clc
pop
push
pop
pop
mov
aas
fldenv
fstp
xor
call
fwait
pop
add
out
mov
inc
data16
je
jae
retf
mov
and
pop
enter
cwde
scas
sahf
xchg
repz
iret
xlat
pusha
xchg
stos
push
imul
mov
dec
mov
mov
pushf
(bad)
push
add
and
cs
or
mov
add
retf
xchg
out
daa
push
ror
or
jg
and
jb
mov
fdiv
jl
mov
pop
inc
inc
ds
adc
les
pop
adc
xchg
push
enter
mov
pop
fild
fld
add
jmp
out
pop
imul
call
dec
pop
fdivp
imul
(bad)
pop
cmc
movs
jb
sub
push
ror
js
(bad)
(bad)
(bad)
dec
dec
lahf
mov
mov
les
lods
pop
jnp
(bad)
(bad)
xchg
pop
cmp
or
(bad)
icebp
das
(bad)
and
call
pop
retf
in
push
cmp
loopne
jnp
and
(bad)
dec
xlat
xor
add
mov
in
adc
icebp
cld
push
or
xor
add
or
mov
js
stos
inc
sub
cld
inc
jp
adc
mov
aad
ror
lods
pop
cmp
xor
jae
sar
add
imul
bnd
push
adc
inc
jb
in
(bad)
inc
jnp
or
sub
sub
test
jp
retf
pop
pop
jecxz
(bad)
scas
not
int
scas
(bad)
mov
retf
cmp
cli
ins
loop
sbb
pop
sbb
rcr
mov
mov
ja
xor
pop
and
pop
push
xor
test
movs
cdq
mov
add
mov
sub
call
ret
and
cmp
repnz
jp
xchg
call
sahf
dec
cmp
cwde
int3
add
pusha
fdivr
mov
loope
mov
mov
inc
ret
jl
jns
scas
mov
xchg
sbb
les
sub
into
imul
or
retf
lods
xchg
cmp
xchg
add
movs
jg
fxam
clc
outs
ja
lock
fwait
dec
cmc
ins
xor
aam
jno
rol
and
or
xchg
mov
push
pop
sti
push
inc
ins
xchg
jp
add
mov
adc
sti
leave
not
jne
xchg
iret
stc
jecxz
sub
jno
push
arpl
shr
push
and
push
sar
mov
jns
pop
pushf
or
push
inc
outs
fisttp
sbb
pop
shl
mov
inc
outs
stc
adc
not
push
(bad)
xchg
push
xor
shl
pushf
pop
or
xor
fisubr
push
sbb
push
cs
pushf
push
sahf
add
int
jb
cwde
and
and
sahf
jno
xchg
pop
mov
mov
loop
daa
lods
pop
pop
daa
div
pusha
jae
shl
mov
das
sub
sub
sbb
mul
push
push
cmp
sub
rcr
je
or
(bad)
sbb
data16
sub
pop
xor
ins
pop
rol
arpl
xor
fst
push
cmp
rcl
mov
push
xchg
adc
stos
ss
push
sahf
mov
cmp
int3
dec
mov
rcl
cwde
daa
add
stos
sub
and
rcl
jbe
dec
jmp
pop
stos
lahf
pop
pusha
push
mov
leave
pop
imul
clc
dec
push
mov
fdiv
dec
or
xchg
xlat
jb
sub
xchg
xchg
xor
pop
jb
call
push
mov
mov
sub
imul
mov
push
xor
xor
pop
xlat
dec
sub
adc
je
sbb
pop
pop
(bad)
in
sub
sub
ret
dec
mov
test
dec
fcmovbe
movs
in
iret
cmps
outs
push
sub
cli
xlat
cdq
xchg
or
add
inc
shl
inc
dec
call
push
or
and
stos
fist
jb
sbb
jne
or
push
cmc
cmp
(bad)
xlat
mov
stos
scas
(bad)
mov
xchg
dec
scas
or
xor
ja
popf
sar
sub
fist
js
xor
cmps
add
repnz
push
imul
out
(bad)
das
ins
repnz
into
mov
inc
js
mov
dec
in
jecxz
dec
sub
add
xor
std
xor
adc
cmp
jp
or
addr16
and
lahf
lock
pop
inc
jno
es
mov
imul
std
mov
mov
aas
dec
cmc
mov
mov
jle
cmps
repz
call
scas
mov
cmp
int3
test
call
inc
retf
sub
push
push
dec
ja
mov
hlt
test
pop
cli
aas
lea
xor
test
jbe
leave
popa
mov
mov
mov
sbb
mov
lahf
ficomp
mov
jmp
hlt
loop
xlat
stos
xor
dec
loopne
xlat
popa
lds
mov
pusha
xchg
mov
bound
mov
imul
neg
xchg
mov
ins
les
sbb
cmp
mov
ss
mov
(bad)
mov
in
sbb
lods
cmp
jne
inc
jne
or
and
pop
test
pop
lock
frstor
lods
xor
inc
mov
cwde
xor
or
pop
push
loop
dec
je
mov
data16
or
cmp
mov
xchg
lahf
mov
lea
push
xchg
ret
xor
pop
sub
mov
or
xor
shl
pop
push
in
test
add
int3
sar
pop
add
xor
xchg
jle
daa
shr
test
popa
adc
inc
inc
int
retf
cdq
jmp
(bad)
rcl
adc
out
iret
add
push
shl
sub
loopne
adc
ins
xchg
mov
jg
fdiv
data16
aas
fcmovu
sbb
or
xor
xor
add
and
xchg
lds
push
mov
ret
mov
xchg
and
push
push
xchg
call
lods
inc
pop
jbe
add
arpl
fstp
gs
ja
movs
xchg
sub
pop
inc
add
adc
outs
cmp
into
stos
inc
inc
js
lar
sbb
xlat
jo
or
and
stc
xchg
jp
xor
sub
out
pop
sbb
jnp
lods
pop
pop
test
adc
xchg
mov
out
mov
mov
das
or
push
mov
aam
mov
mov
fidivr
cmps
movs
loopne
pop
cld
ret
int3
mov
jae
inc
in
sbb
pop
and
xor
sbb
rol
push
leave
mov
pop
sub
std
adc
call
mov
xchg
push
sbb
sub
mov
mov
xor
(bad)
int3
xlat
or
mov
gs
dec
jne
jg
ins
xchg
pusha
mov
xchg
fwait
dec
stos
xchg
jge
mov
aam
loope
inc
aaa
jmp
inc
pop
out
xor
int
call
or
adc
inc
xor
push
mov
sbb
je
call
(bad)
and
int3
or
aaa
add
scas
lods
not
jg
shr
es
scas
mov
inc
lods
clc
movs
ds
out
mov
mov
pop
and
cmp
sahf
sub
xor
cs
and
lea
pop
jp
sbb
sbb
sbb
mov
in
push
loop
out
adc
inc
jo
and
jae
iret
cmc
sahf
stc
pop
jnp
mov
jecxz
in
push
(bad)
jmp
xlat
hlt
jae
cld
mov
xchg
mov
daa
bound
inc
xchg
mov
ror
mov
pop
loopne
pop
fcom
jns
mov
pop
adc
icebp
jnp
push
xor
push
cmp
sbb
mov
and
push
ja
push
je
loope
add
stos
mov
and
mov
dec
cli
jmp
and
lea
iret
push
leave
int3
cli
in
ds
jmp
mov
mov
jne
stos
test
loopne
push
cdq
cmp
or
(bad)
add
push
stos
inc
jo
sub
sub
inc
adc
into
push
stos
cmc
shl
xchg
add
mov
cs
pop
in
dec
xor
push
call
sbb
int3
in
pushf
xor
fdiv
or
inc
mov
imul
leave
mov
leave
adc
fild
movs
call
adc
sub
jecxz
sub
xchg
mov
ja
jns
adc
mov
jl
dec
popa
aaa
leave
ins
or
leave
pop
outs
jl
add
mov
jl
sub
fwait
rol
sti
lahf
sbb
xchg
pop
cmps
sub
out
clc
mov
cmp
int
cmps
fs
lea
das
sahf
cdq
lock
xchg
les
jl
inc
retf
push
into
add
rol
and
xchg
sub
or
pusha
pop
add
push
jae
test
add
xchg
mov
les
push
lds
scas
dec
pop
pop
xchg
mov
mov
fwait
(bad)
xor
lds
cmp
push
cdq
add
or
cmp
add
mov
adc
sbb
pop
dec
les
fsubr
test
test
jmp
int3
fcomp
cwde
push
in
jp
or
test
jne
mov
cmc
shr
pusha
sbb
(bad)
jmp
or
out
aad
sub
sub
stos
push
stc
sbb
or
mov
(bad)
pop
sub
jno
cmps
in
fild
sbb
push
mov
pop
or
dec
lock
aad
push
jnp
and
int3
shl
mov
mov
(bad)
test
jbe
test
call
out
sar
repnz
shr
bound
push
adc
mov
mov
mov
cmp
fwait
dec
push
push
loope
xchg
cmp
xchg
data16
dec
cwde
xchg
cmc
mov
adc
jg
jno
loope
push
cmp
xchg
rcr
adc
xor
daa
adc
adc
iret
stos
ror
push
(bad)
popa
mov
cwde
mov
imul
mul
test
aad
xchg
push
gs
push
adc
in
sbb
in
cmps
add
xchg
outs
js
jae
shl
xchg
mov
fmul
out
clc
or
jmp
jno
adc
jb
inc
or
adc
xchg
push
inc
or
into
add
push
mov
retf
arpl
sbb
mov
jg
leave
ins
mov
xchg
mov
mov
je
ja
add
popf
mov
cmp
and
mov
add
int
sub
xchg
jae
into
jns
mov
or
leave
imul
sub
xor
jno
neg
lea
cwde
es
sti
or
ja
popf
mov
push
push
inc
mov
ficomp
imul
adc
jbe
not
iret
shl
je
popa
pushf
popa
push
mov
add
pop
add
fucom
call
push
inc
cmp
xchg
ret
in
jmp
fucomp
movs
imul
adc
popf
stc
shl
sbb
mov
inc
out
jecxz
(bad)
es
pop
ins
call
mov
ins
adc
addr16
jl
jmp
retf
push
mov
pop
inc
inc
std
gs
jge
or
push
cdq
dec
add
sub
ins
shl
jmp
sbb
fyl2x
mov
adc
aaa
jo
or
out
fs
or
xor
sub
mov
mov
jae
push
je
ret
xchg
and
cld
fild
pusha
adc
jecxz
adc
pop
cmp
push
and
aaa
mov
xor
sahf
popf
shl
xlat
outs
test
ja
icebp
ins
popf
xor
mov
push
cmp
adc
fstp
rcl
test
ja
(bad)
mov
or
cld
pop
mov
jns
sbb
mov
push
jo
test
jbe
movs
fild
mov
pushf
jbe
scas
addr16
jmp
ins
pop
jno
inc
into
lods
jle
push
push
xchg
nop
jl
xchg
xchg
or
cmp
test
(bad)
jbe
mov
or
dec
in
xchg
imul
inc
add
fs
mov
add
out
xor
loopne
pop
push
cmp
imul
dec
push
in
lods
fbld
jnp
push
bound
xchg
sbb
clc
out
push
or
stos
push
mov
adc
push
push
push
popf
pop
jle
mov
mov
(bad)
push
pop
inc
xor
mov
mov
sub
fs
inc
mov
iret
mov
push
adc
inc
add
mov
add
mov
or
cmp
ds
xchg
mov
sub
lahf
inc
rcl
cmc
dec
retf
pop
sbb
mov
into
outs
or
add
or
je
or
in
add
jle
xor
ror
pushf
push
nop
push
sub
lods
(bad)
into
mov
sbb
arpl
stos
aas
mov
xchg
cmps
(bad)
mov
popa
out
pushf
sub
clc
je
or
div
push
adc
leave
and
gs
cmp
cdq
stos
sbb
fwait
jno
stc
inc
ss
xchg
push
dec
jns
mov
cs
cmps
addr16
(bad)
cmp
div
adc
cld
je
cmps
sbb
int3
mov
cmc
sti
in
mov
dec
aam
cmps
mov
mov
adc
popa
cmp
mov
jmp
mov
jg
js
sbb
sbb
push
sbb
jmp
pop
push
shr
xchg
push
leave
scas
fistp
mov
push
ja
add
mov
nop
sub
xchg
mov
nop
jge
pusha
rcr
and
leave
imul
and
mov
mov
loope
retf
mov
mov
mov
xor
xor
dec
jg
mov
or
add
xchg
pop
lahf
ret
arpl
mov
cs
les
cmps
mov
aam
jp
mov
add
out
je
fwait
fwait
dec
int3
dec
loopne
test
js
stos
sbb
cmp
loope
mov
fs
mov
outs
ins
and
cmc
test
xor
ja
pop
popa
sbb
xor
test
adc
add
js
xchg
xchg
push
jne
jl
retf
je
xor
cs
jbe
adc
(bad)
pop
push
leave
loope
js
mov
lahf
xchg
stos
sahf
cmp
push
daa
xor
mov
or
adc
push
dec
sbb
cmp
retf
sub
push
sti
retf
outs
mov
mov
scas
into
and
fdiv
jle
lods
or
test
add
push
and
les
or
das
sub
or
cmp
jns
mov
jne
fimul
ret
xor
xchg
pop
lea
jns
mov
sbb
retf
cmps
jmp
mov
pusha
add
jb
and
add
or
jbe
dec
dec
pushf
int3
lods
sub
scas
ret
xor
ja
sbb
mov
cmc
and
movs
cmp
cwde
ds
mov
cmp
mov
sar
pop
mov
inc
std
mov
adc
xchg
mov
(bad)
xchg
retf
sbb
sbb
jle
sub
dec
mov
call
mov
xchg
or
jmp
push
jl
js
mov
cmp
(bad)
inc
rcl
lods
test
test
xor
pop
sbb
(bad)
js
mov
jns
mov
fbld
adc
je
jnp
pop
mov
adc
cmp
mov
ret
cmp
push
jp
adc
je
out
pop
sti
js
sbb
inc
xor
or
clc
enter
ror
ror
push
cmps
dec
and
aaa
popf
add
out
out
cmps
fmul
sub
pusha
shr
mov
fsub
xchg
popf
jne
push
adc
int3
pop
xor
mov
cmp
dec
fistp
test
inc
sahf
mov
xchg
mov
add
mov
repz
jnp
shl
retf
lds
ds
arpl
cld
popf
fld
into
mov
dec
and
mov
shl
dec
movs
lds
es
mov
cwde
cmps
sbb
push
dec
pop
adc
(bad)
ja
ss
inc
inc
and
mov
retf
adc
or
mov
aad
xchg
sahf
inc
or
in
sahf
scas
repnz
aad
sub
je
mov
outs
dec
pop
sti
loopne
(bad)
aam
es
jle
mov
lahf
pop
idiv
leave
push
sub
cmp
imul
lea
mov
lock
xchg
mov
push
adc
pop
cmp
fstp
push
mov
shr
xchg
xor
pop
ins
stc
imul
mov
mov
jo
jl
lods
xchg
jnp
cmp
mov
xchg
mov
repnz
in
fcom
xchg
inc
shr
test
jg
adc
out
dec
sbb
sub
repz
mov
cmp
es
xchg
into
ret
pop
mov
sub
int3
ins
pop
(bad)
sbb
popf
or
jno
adc
cmps
lea
mov
jl
cmps
test
cmc
mov
rcl
mov
hlt
cmps
jle
in
mov
int3
js
(bad)
inc
sub
int
(bad)
enter
push
cwde
stos
(bad)
je
dec
mov
mov
mov
icebp
xor
mov
mov
lods
test
movs
sub
jne
cmps
pop
inc
icebp
push
xchg
sti
and
test
test
push
push
pop
jge
jno
jle
nop
jne
jge
into
jmp
in
out
ds
sbb
sbb
xor
leave
addr16
lea
mov
cld
jmp
(bad)
fucomip
seto
test
jge
dec
cmc
add
mov
sar
push
mov
data16
dec
xchg
or
mov
lods
imul
(bad)
mov
hlt
lea
mov
(bad)
mov
dec
mov
inc
ins
xor
xchg
sub
mov
sub
jl
sahf
lods
stos
leave
call
popf
gs
mov
das
mov
jle
mov
lahf
addr16
ror
cmps
pop
xor
pop
leave
pusha
inc
int
outs
adc
mov
xchg
test
shr
into
shr
cmps
xlat
leave
dec
and
mov
test
jge
mov
fcom
push
lahf
(bad)
adc
cdq
push
jbe
aas
jmp
sbb
lock
mov
adc
mov
loopne
std
in
xchg
add
mov
and
arpl
cmp
cmc
test
stc
jge
leave
or
test
or
push
mov
imul
fisubr
jp
add
and
call
mov
jecxz
jmp
sub
sub
in
out
dec
inc
nop
mov
mov
icebp
and
loope
sub
sub
add
adc
outs
sub
jne
mov
call
sbb
lock
clc
call
mov
add
push
push
mov
cmp
sahf
pop
js
sub
mov
jmp
aas
loopne
leave
neg
or
xchg
test
xchg
sub
and
inc
and
sub
xchg
ror
pushf
popa
scas
jns
aad
mov
jmp
fwait
sbb
fdivrp
movs
data16
out
or
dec
add
inc
aaa
in
rcr
adc
addr16
adc
jle
gs
rcr
adc
sbb
dec
dec
inc
adc
(bad)
sahf
sahf
and
repnz
add
mov
test
adc
jl
retf
xchg
add
gs
pop
xchg
js
jns
adc
ror
test
add
pop
gs
dec
pop
dec
ret
sub
adc
shl
xor
mov
dec
adc
jge
fs
push
push
test
sub
jo
and
or
xchg
mov
fs
push
inc
(bad)
push
(bad)
cdq
mov
xor
out
scas
popf
xchg
mov
mov
add
xchg
adc
pop
fwait
or
in
mov
inc
addr16
jle
mul
jl
rcr
push
push
inc
aaa
ss
sub
or
icebp
(bad)
in
pop
mov
mov
push
sbb
mov
addr16
jge
test
xchg
popf
fs
push
xchg
jbe
inc
xchg
mov
sbb
aad
dec
dec
mov
rsqrtps
inc
xchg
imul
adc
mov
cmp
sbb
sar
lea
and
retf
xor
into
dec
arpl
mov
pushf
add
xchg
aas
ds
stos
mov
jmp
ret
or
xchg
sbb
jo
cmp
(bad)
mov
and
(bad)
lods
jae
jmp
cld
jge
and
cmp
outs
push
jg
scas
stc
nop
jo
push
addr16
mov
xchg
cmps
push
pop
leave
imul
mov
lds
xchg
dec
xchg
into
stos
fld
aas
or
call
retf
pop
test
dec
dec
inc
push
or
in
jl
sbb
sub
or
adc
lea
icebp
push
add
cmc
pop
ret
pop
push
int3
pop
jae
enter
push
mov
xor
test
fsub
mov
and
xlat
frstor
mov
push
add
fbstp
test
in
adc
adc
ins
mov
int3
ficom
or
push
mov
popf
js
or
push
jns
test
and
cs
cmp
pop
std
aad
test
add
dec
iret
test
jno
pop
add
push
pusha
dec
out
jbe
not
mov
pop
je
and
(bad)
mov
pop
pusha
test
ja
into
fcomi
pop
mov
jno
pop
adc
lahf
push
test
(bad)
out
jne
nop
(bad)
in
je
popa
mov
push
mov
add
jb
mov
inc
or
popf
push
(bad)
ror
push
push
fdivp
enter
(bad)
or
adc
mov
lock
dec
hlt
push
add
pop
mov
push
xchg
jle
push
cmps
test
mov
cwde
and
jne
jno
xchg
pusha
jne
fidiv
xchg
mov
add
imul
dec
add
mov
pop
jo
pop
(bad)
ins
xchg
out
push
cli
cmp
or
add
mov
int
shl
div
fs
xlat
jns
or
fs
or
or
mov
(bad)
cwde
jns
and
mov
out
add
cdq
inc
adc
xchg
sar
gs
repz
call
test
jnp
jl
retf
ins
sub
xor
dec
(bad)
or
mov
or
mov
jge
jp
mov
adc
in
inc
mov
jo
(bad)
scas
dec
fsubr
fistp
cli
xchg
mov
dec
adc
pop
ret
lods
mov
cmc
cmps
adc
fdiv
and
outs
mov
test
lods
inc
mov
cdq
scas
inc
fbstp
xchg
sub
cli
test
xchg
je
jg
outs
inc
mov
or
ins
add
mov
or
retf
pop
xor
movq
or
inc
push
xor
(bad)
jmp
shr
cmp
std
aaa
popf
push
(bad)
jge
test
xlat
xchg
jp
pop
cmp
mov
sub
fisttp
push
adc
mov
repz
test
cmp
or
xchg
jge
sub
aas
daa
xchg
ins
add
push
lock
xlat
add
jl
jmp
push
dec
fistp
fcmovnbe
int3
push
xor
dec
dec
pop
mov
arpl
lds
movs
loop
xchg
xchg
nop
shr
jmp
mov
mov
popf
fnstcw
mov
rcr
xchg
push
loopne
mov
dec
and
retf
cwde
loope
cdq
push
ror
imul
and
(bad)
leave
aas
cmps
lahf
mov
scas
lods
pushf
xchg
push
cmps
add
dec
xchg
xchg
fwait
pop
sbb
scas
cmps
inc
mov
hlt
sbb
loope
scas
aas
cwde
jns
pop
rcl
push
sub
mov
sbb
mov
inc
cld
lahf
shl
in
movs
add
lods
xchg
pop
mov
popf
and
mov
mov
sub
rol
(bad)
push
jno
jo
mov
test
addr16
adc
jp
adc
xor
test
movs
mov
lahf
mov
shl
dec
in
and
add
or
sub
lods
fsubr
pop
inc
or
or
xor
sahf
inc
mov
and
xchg
push
push
leave
pop
jecxz
(bad)
sub
sbb
jmp
in
cdq
in
test
jns
std
jg
inc
cmp
xchg
(bad)
fst
or
fidivr
fs
loope
mov
mov
jo
test
add
or
jne
aaa
test
rol
out
mov
into
pop
mov
ds
ins
stos
sub
mov
fwait
lock
or
inc
sub
aas
mov
shr
sbb
jnp
jb
jl
jg
adc
stos
call
xchg
jmp
jne
fst
aad
lea
mov
or
loop
enter
int3
mov
pop
(bad)
shl
and
je
xchg
sub
push
fwait
dec
xor
shl
dec
repnz
fwait
mov
or
add
test
push
fs
add
jecxz
movs
xchg
in
arpl
jl
loopne
rol
imul
bound
sub
pop
jo
adc
(bad)
in
mov
retf
sbb
mov
push
pop
stos
mov
int
sbb
mov
inc
ins
or
leave
(bad)
xor
lock
imul
fdiv
mov
and
aad
into
inc
dec
imul
cmp
cmp
sbb
stos
xlat
cmp
add
xchg
add
dec
or
in
push
popf
jmp
sahf
and
push
out
ds
outs
test
sub
fnstcw
fcom
sub
mov
push
pop
jbe
mov
out
outs
fwait
and
clc
retf
inc
outs
cmc
lods
pop
sub
sbb
push
mov
mov
arpl
inc
hlt
or
or
and
test
inc
dec
sbb
pop
inc
shl
xchg
hlt
jae
jg
pop
int
adc
cdq
xchg
dec
add
or
mov
and
lods
stc
mov
retf
jmp
dec
sbb
retf
fsubr
xor
cmc
add
and
fst
xchg
in
sbb
add
sbb
inc
clc
idiv
sbb
sub
push
or
retf
push
adc
xchg
pop
add
sub
in
pop
xchg
lods
ds
icebp
mov
add
push
jno
and
mov
inc
mov
sub
push
shr
imul
sub
push
nop
out
imul
xchg
addr16
push
shr
mov
(bad)
or
inc
addr16
inc
arpl
mov
mov
sub
sbb
jp
cmp
xor
imul
cmc
adc
jge
aaa
and
pop
mov
xor
xlat
cmps
inc
into
out
sbb
imul
mov
sub
cmp
xor
iret
jae
scas
sbb
loop
mov
push
dec
in
jg
loope
sub
adc
adc
cmp
dec
iret
pop
lods
sahf
add
push
loopne
mov
scas
xor
jl
adc
data16
xchg
mov
dec
mov
xor
push
shl
push
shl
cmp
js
inc
xchg
lock
and
dec
mov
stc
mov
xlat
xchg
jne
pop
jne
je
push
add
(bad)
pushf
mov
push
adc
xor
fld
mov
xor
jae
dec
adc
cmp
xchg
pop
cmp
fwait
jb
bnd
push
fidivr
lea
sbb
jnp
gs
jbe
sub
sbb
aad
test
ss
fadd
fldenv
xchg
mov
jns
jmp
inc
jg
in
test
and
mov
push
mov
inc
pop
call
pop
xchg
es
sub
push
leave
test
pop
and
pop
inc
mov
add
sbb
hlt
imul
test
pop
push
loopne
xor
ret
jmp
call
imul
imul
mov
xor
sbb
stos
call
jle
cs
cmp
xchg
outs
sub
mov
push
mov
stc
mov
fwait
sbb
outs
cmp
pusha
(bad)
pop
mov
into
cmp
cmp
mov
les
outs
arpl
pop
sub
jb
and
cmp
enter
jg
xor
add
xchg
test
jb
hlt
(bad)
cld
xor
push
jae
mov
outs
test
lahf
and
mov
inc
outs
jg
js
int3
mov
imul
mov
mov
sub
sub
aas
nop
(bad)
scas
cs
ret
daa
add
mov
sbb
fsubr
and
fs
movups
jne
inc
hlt
inc
sbb
imul
mov
hlt
mov
add
test
push
adc
test
mov
pop
or
and
jne
fbstp
int3
imul
cmps
mov
mov
xor
dec
mov
fbstp
xchg
dec
test
mov
out
test
pushf
cdq
or
or
sbb
movs
fwait
into
ror
jge
gs
fwait
jne
in
inc
pop
xchg
xchg
int3
mov
mov
repnz
xchg
lea
les
nop
movs
mov
fs
inc
inc
adc
shl
xchg
jnp
dec
sbb
adc
stos
or
adc
push
adc
xor
or
xor
xchg
cwde
adc
dec
sub
jbe
ins
and
pop
pop
stos
lahf
imul
lea
xchg
sbb
rcr
je
lahf
stos
aam
mov
inc
iret
sub
pop
popf
popf
xor
scas
mov
gs
mov
pop
pop
push
popf
sub
test
out
jl
pop
xor
jo
jmp
xor
mov
xchg
xchg
mov
xor
xchg
add
mov
ins
adc
rcl
das
sub
jge
outs
popa
jno
mov
xor
push
inc
aad
fwait
dec
iretw
jae
mov
mov
xchg
pop
(bad)
xchg
xor
inc
loopne
in
jmp
push
lock
inc
imul
out
(bad)
leave
dec
data16
push
xor
inc
mov
push
cmp
dec
ins
pushf
std
mov
mov
sub
sar
or
dec
jp
rcr
cs
leave
fsubr
jno
add
sub
xlat
pop
dec
xchg
mov
add
fbstp
mov
adc
in
seto
aas
stos
sbb
dec
mov
jo
in
adc
(bad)
rep
add
sub
pop
gs
sub
jl
mov
in
in
out
test
or
inc
adc
add
aam
into
sahf
bound
jp
sub
aas
outs
xchg
rol
lahf
outs
mov
mov
lock
xor
inc
mov
fstp
ret
xor
das
inc
or
cmpxchg
out
jle
not
or
jle
aad
sbb
and
jo
(bad)
pop
sub
ret
fmulp
sahf
push
jmp
push
sbb
icebp
lahf
mov
xor
jecxz
dec
or
xlat
cmc
push
mov
jns
jne
lods
adc
icebp
jge
or
jo
cmp
mov
pusha
adc
cmp
dec
ins
dec
pop
and
cmp
push
stos
ret
mov
jecxz
or
adc
adc
div
arpl
xor
jp
cwde
jno
clc
pop
in
fadd
outs
sub
xchg
sub
jo
aam
fs
mov
sbb
sahf
retf
sub
inc
or
mov
ret
test
call
stos
cwde
mov
jg
jle
hlt
mov
inc
push
mov
cdq
stos
enter
ss
push
nop
les
cmp
push
adc
dec
adc
mov
daa
add
mov
mov
movs
int
push
movs
das
xchg
fiadd
rol
aaa
pop
add
rcl
std
xchg
pop
ins
mov
and
adc
je
push
cwde
push
test
push
retf
xchg
je
pop
js
xchg
ror
dec
mov
jns
popa
adc
(bad)
rcl
into
xor
adc
lahf
xor
jl
push
rcr
movs
imul
neg
add
ret
ins
stos
adc
cmc
ret
movs
push
sbb
jmp
jo
jbe
xor
jl
leave
mov
pop
xlat
pop
in
dec
jno
ds
arpl
jb
jp
add
cmp
xor
xor
loope
cdq
(bad)
sub
pop
pop
cmp
mov
jecxz
push
cwde
mov
push
icebp
xor
mov
test
xchg
jbe
mov
jg
mov
stos
lods
pop
je
mov
adc
and
cld
nop
ret
stc
cmp
pop
pop
jp
pop
mov
inc
mov
mov
in
mov
jecxz
shl
push
das
inc
push
jnp
inc
add
popa
jg
mov
jl
int3
cli
xor
shl
mov
jp
stos
jbe
and
stos
icebp
cld
mov
rcl
push
mov
and
sar
sbb
call
test
xchg
jle
sub
int
neg
dec
js
fwait
outs
mov
dec
mov
addr16
push
inc
mov
(bad)
lods
adc
adc
ss
sahf
mov
pop
pop
cmp
popf
push
add
aad
add
lods
fist
or
jbe
push
in
inc
pop
(bad)
icebp
xchg
sub
(bad)
inc
les
(bad)
daa
mov
lods
sub
in
lea
mov
ror
pop
cld
sub
xchg
and
icebp
add
pop
sbb
fbstp
adc
jb
jnp
jbe
xlat
dec
pop
imul
xor
stos
xchg
iret
cwde
fnstcw
dec
into
(bad)
fs
(bad)
repnz
cwde
test
outs
mov
sub
hlt
ret
mov
mov
push
add
sbb
inc
repnz
mov
lods
scas
sar
xchg
jnp
and
push
jne
mov
clc
or
mov
mov
xchg
mov
jg
lods
js
in
data16
popf
test
mov
push
xor
mov
mov
sahf
sub
scas
jecxz
cmp
adc
out
fiadd
xchg
test
loopne
cmp
les
ss
popa
cmp
xchg
mov
pop
and
jo
data16
and
ss
cmps
sbb
mov
sub
aaa
inc
pop
dec
mov
xchg
inc
add
cmp
nop
cwde
mov
xchg
and
fcom
xlat
mov
push
in
mov
aam
and
lea
lea
mov
push
jmp
dec
adc
mov
rol
mov
pop
pushf
in
push
movs
sahf
call
out
dec
mov
(bad)
sahf
cmp
push
or
ror
adc
std
mov
sti
xchg
int
adc
adc
add
or
(bad)
sar
mov
dec
sbb
sub
mov
shl
xlat
mov
test
xchg
(bad)
push
ss
mov
(bad)
pop
mov
rol
clc
push
or
ins
rcr
or
jp
dec
pop
jmp
enter
ror
mov
movs
jl
mov
jnp
test
pop
mov
mov
push
js
xchg
je
mov
mov
int
inc
test
and
rcr
out
mov
mov
mov
test
gs
(bad)
jae
enter
scas
xor
lods
sar
jne
je
rol
(bad)
repz
test
jno
(bad)
xchg
imul
and
xchg
stos
mov
call
ror
(bad)
pop
jecxz
mov
shr
lods
stc
nop
lods
ror
pop
jae
and
and
pushf
shl
jmp
and
ja
icebp
cmps
adc
jo
int
(bad)
mov
in
je
mov
mov
mov
mov
mov
mov
sub
and
xor
lea
xor
xlat
jno
jns
lahf
arpl
outs
sub
jo
test
lds
mov
xor
cmps
lahf
or
in
(bad)
jge
fnstsw
pop
call
jae
jne
aam
imul
jbe
push
adc
sbb
std
nop
inc
push
ret
addr16
fmul
daa
aas
gs
div
imul
fld
jl
inc
add
shl
mov
mov
outs
mov
fnsave
add
test
add
fnsave
jmp
test
dec
cmp
xchg
fmul
aad
test
inc
stc
jae
loope
(bad)
mov
sbb
inc
jo
jl
and
dec
in
neg
push
nop
retf
gs
cmp
xor
fwait
and
sbb
mov
mov
xor
jbe
mov
sub
pop
sub
mov
mov
pop
mov
test
ds
xchg
push
xor
inc
push
inc
sahf
scas
mov
sbb
push
adc
sub
addr16
cmp
lods
popa
cmp
imul
or
and
pop
push
and
pop
or
aas
(bad)
pop
mov
xchg
dec
enter
cmp
push
xchg
xchg
shl
ja
dec
xchg
ficom
and
jl
sahf
xchg
jle
test
or
mov
(bad)
xor
in
sbb
mov
std
mov
outs
mov
jge
(bad)
and
jge
jbe
js
vpmacsdd
cmps
dec
int3
dec
cmp
lea
rol
ins
shl
cmps
ret
ja
and
xor
mov
imul
mov
test
push
cmp
push
push
retf
ins
test
rol
ror
clc
mov
add
jae
mov
rep
fstp
mov
mov
pop
into
pop
movs
inc
shr
repnz
xchg
mov
jne
xchg
xchg
ins
cwde
jmp
cmp
jbe
add
push
inc
push
xor
cmc
or
fisttp
pop
sbb
das
inc
sub
jl
or
pop
jo
mov
daa
sbb
jae
sub
mov
lods
xchg
pop
and
sub
jg
aad
daa
and
popa
xlat
imul
cpuid
xchg
inc
push
mov
sbb
fld
and
sahf
movs
pusha
push
jno
xchg
fild
inc
jae
imul
mov
pop
imul
mov
pop
push
dec
adc
dec
lea
rcr
adc
bnd
xchg
push
loopne
or
push
jmp
ins
sub
scas
xchg
jno
pop
rcl
mov
je
aad
jecxz
int
push
mov
jne
(bad)
inc
hlt
dec
aam
mov
ins
sub
sbb
adc
sar
pop
ror
rcl
rol
dec
lods
sub
sbb
lods
cmc
mov
xchg
ja
loope
sbb
mov
scas
pop
sbb
mov
cwde
int3
(bad)
aaa
cs
out
mov
cmp
bound
jmp
and
shr
es
es
inc
pop
mov
xlat
inc
fwait
int3
jecxz
dec
movs
cs
push
ja
call
rcl
inc
push
jl
sub
in
(bad)
bound
std
add
mov
aam
pop
mov
push
or
push
popa
outs
inc
ss
scas
pop
mov
or
cli
jo
push
push
sbb
dec
sti
push
retf
mov
(bad)
(bad)
xchg
add
adc
sub
mov
je
shr
mov
jmp
jae
cmp
push
xchg
popa
jb
stos
lods
enter
inc
aam
inc
cmp
mov
int
sbb
mov
es
sub
xchg
mov
retf
pop
push
lods
pop
int3
sub
adc
inc
jo
adc
popf
sbb
pcmpeqb
adc
fs
jbe
je
mov
sbb
rcr
outs
js
push
movs
mov
jns
jmp
imul
push
(bad)
mov
inc
sbb
and
jo
sub
cmps
and
stos
add
mov
add
int3
cwde
les
mul
sbb
sbb
fisubr
mov
add
gs
mov
or
cmps
popf
inc
dec
test
jg
adc
lds
mov
cwde
jle
xor
cmp
fsub
aam
pop
jo
push
mov
leave
jle
hlt
xchg
jae
popf
mov
(bad)
push
call
loop
and
(bad)
dec
gs
inc
(bad)
push
mov
pop
lods
aas
push
std
cmp
adc
mov
push
je
jmp
rcl
sbb
sbb
xchg
gs
scas
bound
rcr
leave
pop
std
mov
lods
sbb
fwait
cwde
push
cmps
pop
inc
mov
fbld
inc
in
stos
rcr
inc
daa
aam
lahf
fdivrp
cmp
mov
mov
jge
cmp
fucomip
iret
hlt
push
nop
xor
arpl
dec
shl
lods
inc
push
ins
push
(bad)
sti
adc
and
dec
pop
pop
fisttp
repnz
and
and
add
inc
jno
jl
ins
or
pop
mov
mov
jg
xor
jl
hlt
jp
popa
iret
call
icebp
adc
mov
push
mov
cmp
xchg
pusha
shl
gs
cmp
les
fld
xor
mov
xor
mov
pop
adc
jb
push
mov
add
mov
sub
pop
dec
mov
push
mov
mov
xchg
and
outs
push
adc
out
ins
pop
gs
jbe
add
test
xor
scas
js
push
jb
vmovdqa
mov
xchg
pop
mov
xchg
pusha
cmp
jp
int3
int3
jg
(bad)
iret
mov
jno
or
out
lods
das
adc
rol
xchg
dec
mov
add
pop
icebp
rcr
jl
inc
sbb
cmp
std
and
call
pop
call
les
sub
loope
cmp
sti
add
das
(bad)
pusha
dec
xchg
lds
icebp
xor
retf
js
lahf
loopne
cld
adc
int3
xchg
jno
xor
int
or
add
addr16
aas
fidivr
mov
pushf
hlt
jno
and
int
add
or
loopne
xor
nop
dec
adc
arpl
mov
mov
jmp
jl
add
push
or
inc
jl
push
es
dec
js
jns
ffreep
add
stos
xor
jne
mov
cmp
fcomip
cmp
or
pop
jge
(bad)
test
pop
int3
sub
nop
jns
or
or
adc
(bad)
dec
mov
ror
jno
mov
cli
add
sbb
es
or
cmps
sub
push
dec
xchg
mov
(bad)
fld
je
mov
sub
test
sub
scas
mov
loop
dec
dec
or
pushf
sub
jns
cmp
lds
and
sbb
jg
es
inc
mov
aaa
scas
sub
cwde
xchg
and
bound
mov
lods
enter
inc
ror
mov
fdiv
push
mov
dec
enter
(bad)
jg
add
sub
jle
mov
repz
lea
and
data16
lahf
push
mov
jp
les
jecxz
outs
pop
push
xchg
mov
mov
icebp
or
pop
lahf
iret
fnstcw
mov
out
inc
sub
fmulp
mov
jnp
mov
jns
and
loopne
adc
mov
xchg
cmps
mov
or
xchg
imul
fadd
sahf
push
gs
pop
push
test
aaa
sbb
arpl
nop
pop
mov
jge
sbb
xchg
mov
jbe
test
shl
xor
jo
jg
xchg
cmp
outs
fwait
les
jne
loop
xor
cs
and
les
rcr
jmp
push
sbb
push
ds
fadd
pop
mov
mov
jb
mov
and
popa
hlt
mov
es
inc
js
or
mov
nop
in
ins
test
jb
lods
shl
jle
xchg
ds
xchg
fs
retf
cli
sti
inc
icebp
mov
push
mov
pop
shr
jge
xchg
xlat
into
dec
xor
inc
cs
inc
int3
shl
fcmovnu
add
mov
gs
or
pop
out
and
dec
iret
imul
or
pop
jge
iret
pop
mov
and
mov
push
jbe
mov
sub
je
shl
dec
fidivr
push
dec
divps
(bad)
mov
and
jns
sbb
adc
leave
imul
int
fstp
and
cwde
call
dec
inc
push
fwait
daa
ins
fadd
adc
mov
jo
push
pop
xchg
and
push
add
jae
mov
pop
in
jge
push
sub
mov
repz
push
(bad)
jo
push
jecxz
add
stos
cmp
dec
sahf
mov
adc
test
icebp
idiv
push
call
xlat
stc
pushf
int3
(bad)
imul
std
or
rcr
adc
add
fadd
xchg
aas
popa
push
push
cmp
shl
out
mov
or
aaa
or
xchg
mov
cmps
fistp
repz
adc
adc
test
pop
push
pop
cmp
repnz
mov
(bad)
jl
sbb
(bad)
jb
jne
call
cmp
jecxz
loop
out
imul
dec
xor
sbb
shl
jle
popa
rcl
mov
or
or
aas
rcr
lds
add
loopne
dec
mov
mov
dec
fwait
rol
mov
inc
lds
ja
movs
ins
xor
pop
jl
mov
jecxz
jb
jae
fiadd
adc
xchg
dec
xor
(bad)
jbe
js
outs
xchg
inc
mov
sbb
test
pop
xor
retf
popa
sub
xor
push
int
dec
outs
ss
mov
sahf
xchg
inc
movs
xchg
(bad)
jmp
mov
repnz
fisub
and
mov
dec
cmp
dec
les
cli
adc
enter
push
and
arpl
adc
sahf
cmp
xchg
cmp
xchg
mov
dec
popa
imul
jnp
lods
push
push
js
fchs
addr16
mov
dec
ss
cmp
outs
mov
scas
dec
test
test
mov
xor
push
adc
adc
or
in
dec
lods
lds
call
pop
mov
fwait
lea
outs
aad
mov
add
neg
loopne
enter
in
rcr
cmp
jg
dec
retf
aaa
mov
sbb
test
xchg
lods
gs
cdq
sti
cmp
xchg
dec
imul
push
sahf
pop
lods
mov
cmp
ja
stc
das
adc
cmp
xchg
mov
mov
fstp
sub
mov
fs
mov
sbb
loopne
xchg
das
pop
mov
ja
xlat
cli
pop
mov
(bad)
imul
inc
push
jns
mov
and
das
mov
cmp
and
pusha
xor
inc
or
and
mov
retf
test
jmp
fcomi
lahf
pushw
cld
dec
push
and
push
retf
into
xchg
daa
mov
int3
(bad)
test
pushf
xchg
jne
jmp
mov
sti
dec
pushf
jl
aam
xor
lea
push
test
cs
add
clc
not
jne
nop
mov
in
dec
cdq
lock
xchg
ja
sbb
lods
outs
push
push
out
retf
cmp
test
(bad)
pop
jecxz
add
push
into
pusha
cmps
movs
mov
mov
pusha
push
mov
push
lock
sbb
adc
mov
pop
enter
sbb
mov
mov
out
mov
push
adc
lahf
mov
ficomp
sub
sub
bound
int3
mov
pop
pop
test
mov
sbb
inc
addr16
mov
ret
cs
cli
lea
out
adc
adc
stc
inc
add
imul
movs
dec
out
movs
shl
jmp
sbb
movs
xlat
xor
lods
pop
xor
inc
dec
mov
xchg
jnp
test
xchg
xor
push
adc
sbb
out
mov
mov
out
mov
cwde
cmps
jmp
imul
cli
fwait
addr16
push
leave
nop
cmp
fcomp
lds
loop
mov
push
inc
and
jge
add
xchg
adc
cmp
add
outs
mov
(bad)
pop
adc
popf
add
mov
movs
pop
(bad)
ins
xchg
jbe
adc
push
stos
push
fisub
sbb
outs
stos
or
xor
mov
idiv
cli
xchg
iret
jns
xor
xchg
mov
jecxz
js
lods
into
xchg
mov
push
pop
lods
rcl
pop
test
mov
imul
mov
push
fcmove
lock
hlt
dec
ror
mov
lods
push
jg
xchg
or
and
in
xchg
xor
xor
shr
add
and
xchg
pop
and
inc
push
imul
sub
jnp
sbb
mov
push
es
mov
cmp
les
je
(bad)
scas
bound
cmp
inc
adc
cmp
mul
mov
call
test
dec
dec
imul
lods
dec
push
fisub
nop
sbb
ds
js
cld
inc
mov
add
push
frstor
cmc
sub
ins
retf
xchg
int
and
mov
push
(bad)
jnp
mov
arpl
rol
cmp
jp
fs
ins
stc
jmp
xchg
cli
push
xchg
lods
loope
repz
mov
pop
sbb
and
pop
xor
push
xor
fimul
jmp
into
inc
iret
push
dec
jmp
or
mov
dec
mov
adc
dec
jecxz
inc
inc
sub
into
out
leave
cdq
adc
dec
or
lea
std
dec
(bad)
ret
cmc
and
and
ja
ror
gs
fs
add
xchg
mov
(bad)
cmp
inc
add
gs
fcom
xor
(bad)
xchg
push
shl
jl
mov
(bad)
adc
shl
pop
jo
inc
push
addr16
mov
and
mov
push
inc
pop
push
or
mov
xchg
(bad)
lock
add
lock
jecxz
jl
push
push
enter
mov
lahf
cmc
mov
xchg
fnsave
or
jno
xchg
ins
mov
mov
pop
mov
test
or
xor
inc
leave
mov
idiv
mov
pop
test
je
xchg
push
scas
or
sbb
cmp
xchg
cli
xchg
mov
aas
ja
or
add
dec
cli
push
inc
push
repnz
cmp
leave
xchg
cmp
xor
popf
lahf
lock
ins
imul
loope
push
mov
and
mov
popf
jge
fst
mov
push
push
pop
loopne
xchg
add
add
js
jae
pop
retf
jl
and
dec
ret
lahf
int3
pop
imul
cmc
fcmovbe
test
pop
lods
test
imul
mov
jle
cmps
adc
aaa
(bad)
mov
aaa
fist
stc
icebp
stc
push
ret
dec
jae
hlt
fmul
out
mov
lock
jle
or
stos
mov
mov
pop
mov
pop
sbb
int3
cmp
push
and
inc
in
(bad)
xchg
adc
dec
pop
cmc
mov
(bad)
jno
(bad)
dec
push
mov
dec
jg
stc
adc
xchg
inc
ins
mov
in
add
mov
aam
pushf
adc
jl
movs
popa
mov
adc
or
daa
mov
call
test
cmp
stos
adc
ss
test
in
dec
adc
js
popf
(bad)
adc
pop
push
push
push
push
or
cmp
test
jne
inc
and
or
xchg
and
mov
sub
pop
cdq
in
or
mov
xchg
adc
dec
pop
jg
pop
pusha
mov
and
aaa
xchg
or
data16
fnstcw
mov
retf
test
clc
add
or
sbb
mov
or
mov
jb
ins
mov
push
adc
xchg
adc
lods
or
pop
mov
mov
xchg
aas
mov
pop
in
lahf
rcr
test
arpl
adc
push
push
retf
and
jne
dec
mov
popa
es
mov
jnp
xor
inc
mov
jmp
repnz
adc
mov
or
lods
add
and
xchg
sbb
dec
mov
clc
stos
mov
pop
or
nop
xchg
test
inc
rcr
test
push
std
mov
mov
leave
jge
jne
test
dec
cmps
mov
test
shl
lds
aam
mov
retf
lods
call
mov
jne
push
mov
add
xchg
mov
jbe
loope
pusha
sub
test
call
and
push
dec
mov
movs
ins
pop
add
addr16
icebp
mov
scas
mov
fistp
pop
inc
sub
sub
es
inc
sub
mov
mov
push
and
xchg
fnsave
jg
mov
ror
dec
ja
add
push
gs
pusha
scas
xor
mov
inc
xchg
mov
push
leave
adc
leave
(bad)
mov
mov
fs
ins
or
mov
arpl
xchg
jns
xor
in
scas
pop
pop
cli
mov
shl
add
jnp
sti
popf
pop
out
mov
pop
dec
add
adc
pop
or
ins
lea
out
lahf
push
xchg
out
dec
mov
and
inc
inc
mov
and
jle
hlt
dec
arpl
sbb
cli
mov
mov
jge
(bad)
xor
push
pushf
jmp
add
rcl
enter
xor
cwde
xchg
scas
cmp
cmp
xor
int3
fidivr
add
aas
call
cmp
add
jmp
(bad)
mov
xchg
pop
imul
dec
movs
call
dec
add
inc
stc
fwait
push
pop
push
jle
cli
and
fldenv
jl
into
push
jmp
data16
int3
sbb
fwait
add
xchg
rcl
aas
dec
pop
sub
lds
add
inc
leave
pop
addr16
and
xor
mov
ror
xchg
push
pusha
out
je
movs
cmp
xchg
dec
mov
jo
xor
pop
sub
out
pop
jae
add
add
add
sbb
ins
jnp
or
push
movs
dec
aam
inc
push
cdq
cmp
int
gs
int3
data16
xor
cmps
or
xor
add
(bad)
mov
or
sar
leave
out
push
(bad)
pop
in
stos
pop
aaa
in
add
stc
in
inc
push
jecxz
fwait
cs
or
jge
jecxz
pop
test
and
call
sbb
sbb
sub
aaa
retf
adc
cmp
iret
pop
cmp
pop
stos
call
adc
dec
pushf
cmc
push
stc
xchg
jae
inc
mov
imul
pop
add
jno
pextrw
mov
into
dec
pop
test
or
push
adc
retf
test
cmp
push
ffree
retf
or
not
shr
shl
xor
loope
sub
call
jecxz
and
sub
icebp
ds
(bad)
pop
jmp
push
ret
imul
nop
mov
push
int3
sahf
cli
bound
jle
cmp
jp
pop
jbe
or
sbb
stos
not
sbb
add
lahf
mul
cmp
popa
dec
imul
pop
(bad)
jmp
mov
xchg
call
inc
sub
push
shl
dec
out
mov
imul
push
mov
out
push
es
imul
icebp
mov
ss
pop
mov
(bad)
xor
cmp
test
ret
mov
mov
sar
mov
repnz
nop
add
hlt
sub
hlt
lea
(bad)
mov
dec
add
cmp
sbb
clc
or
fstp
adc
jne
or
or
iret
test
inc
add
sar
ins
mov
mov
in
test
cmp
pavgw
stc
mov
comiss
pop
push
mov
shl
fldenv
jmp
mov
xchg
jmp
pop
in
push
mov
mov
cmp
bnd
fist
stos
mov
scas
sub
dec
mov
adc
int3
aaa
sub
mov
adc
sbb
push
fadd
jne
mov
(bad)
stc
(bad)
fnstsw
js
mov
fdiv
add
out
pushf
clc
inc
or
mov
xor
cmp
and
repz
push
addr16
add
xchg
cmc
inc
adc
jnp
dec
jo
pop
mov
fist
pop
or
jl
pop
mov
sbb
push
dec
sbb
fdiv
nop
mov
xchg
and
ins
(bad)
sbb
jle
xchg
out
addr16
shl
or
jne
jno
cmp
dec
popf
ins
dec
pop
mov
call
xchg
ds
fadd
shl
or
scas
call
js
add
popf
ficomp
dec
inc
fnstenv
(bad)
int3
dec
arpl
pop
push
jbe
call
adc
aas
shl
mov
ret
imul
loope
es
add
sub
mov
js
shl
mov
jmp
xchg
sbb
(bad)
fiadd
dec
mov
push
dec
mov
jecxz
xchg
mov
mov
ins
ss
mov
sar
sbb
ins
and
pushf
xchg
mov
sub
icebp
setne
out
mov
movs
push
adc
jle
outs
ins
xchg
retf
into
pop
cwde
sub
inc
xchg
aas
mov
(bad)
mov
xchg
mul
sbb
test
ja
(bad)
jmp
loopne
push
sub
std
adc
ret
xchg
push
leave
ins
pusha
nop
pusha
adc
dec
outs
mov
in
push
(bad)
ins
inc
xchg
movs
ucomiss
or
or
enter
mov
ins
lods
cmc
xlat
jne
jl
leave
vpmacssdql
cld
paddsw
mov
addr16
imul
std
test
xor
(bad)
aad
mov
in
mov
mov
stos
mov
loopne
aad
mov
shl
sti
xor
sub
clc
fsubr
mov
jo
pop
or
push
mov
sub
cld
jp
lods
icebp
neg
push
lahf
jnp
shr
dec
sub
mov
push
aam
fild
add
je
mov
imul
and
or
xchg
lahf
adc
adc
lods
or
mov
into
aam
and
add
xchg
(bad)
jae
jge
and
or
or
xor
das
dec
fcmovb
and
shl
mov
outs
in
mov
push
repnz
mov
push
ins
lahf
nop
vmovd
dec
sub
dec
fwait
mov
int3
aaa
xchg
cmp
(bad)
jecxz
in
in
mov
mov
mov
popf
mov
or
hlt
fnstenv
call
(bad)
imul
pop
pop
jmp
js
shl
stos
mov
icebp
mov
xor
jmp
ins
loope
pusha
stc
mov
jno
cmc
mov
xchg
mov
mov
cwde
sti
mov
sbb
mov
sbb
aad
ja
je
mov
jno
clc
push
leave
out
jl
popa
popa
rcl
mov
imul
push
cdq
shr
adc
xchg
sbb
bound
add
aam
mov
push
in
(bad)
movs
cmps
std
js
adc
in
in
rcr
push
lahf
retf
neg
(bad)
sbb
or
pop
dec
xor
ss
(bad)
fdivr
lds
loop
cmps
aas
dec
in
and
mov
add
fs
imul
fimul
cmp
pop
xchg
jmp
inc
jecxz
xor
dec
aad
mov
lds
adc
cmp
std
mov
push
inc
dec
and
jle
nop
loope
mov
xchg
push
inc
gs
(bad)
fnstcw
xlat
jo
adc
push
push
(bad)
fisttp
xor
enter
dec
movs
in
repnz
popf
fwait
in
xor
sbb
add
stos
ret
pop
cld
push
adc
popa
ficomp
mov
mov
pop
in
push
rcl
mov
xchg
aas
pop
mov
xchg
sbb
xor
adc
test
shl
xlat
retf
pop
cmp
bound
xor
or
out
fstp
xchg
inc
xchg
out
jecxz
fld
std
aad
or
rcr
fisttp
xchg
mov
iret
inc
sub
pusha
das
mov
jo
mov
pop
clc
enter
push
xchg
sub
xchg
sub
push
clc
rol
inc
pop
stos
push
adc
sub
jmp
jg
adc
adc
jbe
les
push
sbb
add
dec
dec
mov
scas
mov
push
test
std
outs
rcl
ss
ja
sub
mov
out
cmps
repnz
pop
in
xchg
mov
mov
mov
lods
stos
inc
inc
pop
and
pop
adc
sbb
push
pop
pushf
out
cmps
aam
cmp
mov
call
cmp
mov
sub
fsubr
lahf
imul
ds
inc
push
cmp
(bad)
or
pop
ds
pop
mov
les
mov
jmp
pop
mov
pop
add
mov
in
loopne
out
pop
adc
sbb
xchg
aad
mov
inc
inc
mov
addr16
aad
les
mov
fwait
cmp
inc
gs
mov
mov
add
jp
nop
pop
popa
and
nop
stos
pop
pop
sbb
popf
pop
fiadd
push
pop
cmp
pushf
push
cmp
push
push
in
fs
mov
aas
and
cmp
jne
cmp
and
dec
call
or
cmps
pop
pop
add
ror
ror
fcomp
xchg
fstp
add
push
sbb
es
cmc
jg
mov
mov
movs
dec
fst
xchg
mul
pusha
addr16
pusha
sbb
loopne
out
mov
stc
scas
sbb
test
xchg
mov
jge
mov
cmp
lock
repz
mov
cmp
int3
jl
pop
xor
out
jnp
mov
scas
or
jb
pop
sti
adc
loop
xchg
xchg
imul
mov
sbb
push
xor
test
push
sub
daa
or
mov
(bad)
js
xchg
mov
add
push
addr16
mov
movs
retf
pop
out
mov
sbb
fcmovnu
sti
add
mov
scas
cmps
xchg
fdivr
(bad)
bound
dec
js
pop
pop
mov
adc
cdq
mov
leave
lods
pushw
rcl
ins
arpl
pop
adc
ins
popa
cdq
xchg
daa
inc
cmc
ja
sub
fcom
scas
popa
je
ja
scas
test
pop
mov
lea
mov
add
jge
sti
pop
movs
leave
shl
and
push
xchg
xchg
xchg
mov
shl
fnstsw
push
je
or
pop
mov
lea
aad
jg
nop
lea
cld
test
(bad)
nop
mov
xor
xor
push
test
push
jecxz
aas
fsubr
int3
pop
mov
shr
je
mov
mov
jl
pusha
xchg
mov
inc
adc
mov
pop
je
jmp
(bad)
fsubp
in
aaa
mul
jmp
lods
xchg
xor
push
test
mov
leave
jo
lea
xchg
pop
test
mov
clc
scas
cli
inc
pop
fwait
add
jnp
sti
or
je
jns
fadd
scas
fadd
scas
loopne
ins
scas
in
and
push
pushf
push
mov
push
add
inc
cmp
in
pop
inc
add
mov
mov
inc
jl
mov
sbb
adc
push
push
aad
(bad)
loopne
mov
xchg
fsincos
rcr
pop
jge
push
mov
(bad)
retf
aas
inc
clc
loope
ds
or
fcomp
outs
adc
ss
xchg
sar
mov
mov
dec
lods
data16
ins
leave
xlat
inc
fdivr
inc
je
aam
cmp
mov
arpl
jae
mov
push
add
out
arpl
jbe
dec
mov
xor
cld
shl
xchg
shl
cmps
clc
retf
cwde
ret
jecxz
sbb
shl
(bad)
(bad)
cli
add
idiv
scas
in
aad
mov
jb
arpl
test
loopne
add
jbe
mov
imul
xor
aas
jg
icebp
xchg
jae
rol
retf
add
mov
out
mov
or
push
mov
retf
lods
movs
jl
cs
dec
adc
adc
push
(bad)
shr
mul
xor
adc
int
test
(bad)
xlat
rcl
push
pop
fs
xor
xchg
pop
stos
fldenv
mov
cmc
mov
arpl
rol
push
jecxz
jbe
cli
cmp
shl
repnz
scas
scas
test
jb
inc
sbb
in
cmps
movs
jge
xchg
test
dec
nop
test
inc
push
xchg
cld
xchg
cld
ins
pop
fs
outs
xchg
mov
stos
imul
gs
and
scas
jl
cmp
fiadd
cmp
fwait
jmp
push
enter
and
or
xor
sbb
cmp
addr16
ja
loop
ret
and
jmp
lods
push
add
and
mov
(bad)
pop
lds
push
jmp
push
inc
mov
cmps
jns
pushf
lahf
fcom
daa
xlat
pusha
or
push
sbb
jno
mov
sar
mov
xor
leave
dec
ins
sbb
or
sbb
test
addr16
xor
fistp
fsubr
repz
mov
sbb
pushf
rol
loopne
shr
adc
nop
sar
push
sub
mov
jnp
lods
inc
dec
lods
push
or
fcom
dec
jge
cs
fistp
imul
mov
mov
pop
add
xchg
push
sub
jo
sahf
rcr
xchg
std
dec
mov
test
xlat
xor
test
xor
inc
jg
xchg
imul
movs
iret
jns
and
bound
scas
lds
dec
ja
mov
mov
jns
not
mov
addr16
sub
mov
sub
mov
sbb
adc
cmps
(bad)
cmc
mov
xchg
jmp
sbb
adc
inc
push
sub
lods
mov
mov
mov
popf
xchg
repnz
mov
lods
sub
dec
gs
sbb
(bad)
sahf
mov
scas
dec
mov
out
dec
xchg
and
dec
stc
lds
sub
mov
pusha
and
push
inc
inc
retf
repz
(bad)
stos
iret
sbb
loopne
mov
dec
gs
jmp
inc
xchg
inc
fsub
mov
pop
cmps
(bad)
scas
pop
xor
sub
out
ds
movs
and
sbb
cwde
lods
dec
aaa
into
cmp
jno
lds
ins
sbb
pop
xor
jns
xor
sub
pop
imul
xchg
ins
dec
xchg
mov
sub
mov
mov
and
nop
fs
nop
cwde
or
gs
jmp
les
sar
in
add
mov
ds
mov
in
addr16
sbb
mov
inc
inc
das
shr
xchg
mov
dec
lea
scas
cld
lods
jns
push
pop
mov
call
(bad)
out
adc
les
mov
push
lock
or
mov
xchg
xchg
mov
dec
push
shl
mov
xor
test
ret
mov
mov
inc
daa
aaa
bound
rol
mov
test
not
inc
pop
ins
iret
xor
std
fistp
mov
ins
inc
and
jns
xchg
fist
sbb
push
rcr
fist
dec
jnp
scas
cmp
or
inc
enter
ror
sahf
cmps
ror
push
and
mov
movs
and
sub
push
les
adc
ret
sti
mov
mov
scas
mov
cmp
retf
test
jo
pop
jbe
jae
sub
(bad)
add
shl
sbb
mov
sahf
pop
movs
xchg
jmp
sub
push
jmp
jp
xlat
jmp
inc
adc
stos
jle
movs
mov
bound
out
(bad)
fcom
pop
mov
test
mov
scas
ins
(bad)
loopne
fwait
(bad)
hlt
(bad)
adc
push
in
jp
sbb
imul
arpl
in
pop
push
stos
hlt
in
les
xor
mov
ins
mov
sbb
jne
mov
arpl
hlt
pop
ds
mov
jl
sar
mov
jbe
inc
cs
test
mov
push
jb
pop
mov
inc
in
mov
and
test
sbb
aas
outs
shr
cs
dec
inc
adc
fnstcw
std
repz
push
sub
mov
xchg
outs
pop
and
jle
aam
jo
lods
fimul
inc
je
cmp
adc
push
sub
push
aad
scas
adc
addr16
jb
fadd
hlt
push
ins
push
mov
(bad)
jne
mov
xchg
daa
nop
inc
pushf
lahf
pushf
mov
add
pushf
xchg
mov
js
add
fmul
mov
lods
cmps
cmps
imul
xchg
ret
dec
(bad)
nop
mov
arpl
jns
pop
cmp
pop
bound
add
pop
jl
test
enter
jmp
lahf
mov
pop
cdq
js
mov
test
ret
mov
sub
adc
dec
pop
mov
add
adc
push
or
xor
cdq
mov
mov
add
popf
push
outs
add
mov
push
je
cmp
push
gs
mov
std
fistp
xor
mov
adc
mov
in
call
int
push
or
(bad)
jbe
adc
fld
mov
daa
jle
out
in
sbb
(bad)
aad
stos
pop
fiadd
xor
pop
mov
pop
mov
mov
xor
mov
jnp
jae
(bad)
shl
dec
or
inc
or
mov
and
mov
xchg
scas
and
aas
test
xchg
sbb
push
sub
mov
popa
outs
(bad)
xchg
push
cmp
dec
movs
loop
fstp
push
sbb
add
xor
add
je
adc
pop
pop
les
rcl
xor
mov
pop
cmp
lea
test
xchg
pop
hlt
jecxz
xchg
mov
mov
mov
jns
test
aas
mov
push
pop
adc
mov
in
jbe
ror
xchg
hlt
cmp
jmp
cmp
(bad)
(bad)
daa
add
shl
inc
xchg
xchg
pop
popf
nop
mov
enter
sbb
(bad)
jns
dec
or
fbstp
int
and
std
scas
xchg
push
xchg
jmp
xchg
inc
mov
int
cdq
cmp
dec
or
aam
fs
xor
enter
fld
cdq
movs
mov
adc
icebp
xchg
lds
cmp
sbb
mov
popf
pusha
pop
xchg
mov
and
mov
repz
push
adc
adc
mov
pop
pop
test
push
add
ins
scas
stc
and
fisttp
jp
retf
ja
mov
movs
and
or
mov
xor
dec
and
jnp
popf
mov
int
mov
mov
arpl
or
xor
pop
hlt
or
in
movs
dec
add
je
gs
outs
xchg
push
inc
xor
es
sbb
add
push
or
lods
and
or
test
lahf
(bad)
mov
cmp
outs
adc
loopne
xor
call
ret
add
or
cmp
add
mov
mov
lahf
pop
dec
in
pop
add
sbb
pop
sub
mov
sub
and
aad
icebp
sub
xchg
lea
sar
outs
inc
repnz
mov
mov
jb
sbb
neg
pop
ss
cwde
sahf
outs
push
xchg
pop
dec
not
imul
cmp
jle
xchg
sar
pop
test
xchg
xchg
sub
lea
adc
sbb
and
mov
cmc
jge
push
push
sar
pop
mov
jge
loop
jae
ficom
iret
sbb
sbb
mov
mov
gs
lock
das
jnp
sub
test
sbb
and
and
mov
pop
xchg
pop
loopne
out
and
add
adc
(bad)
cmp
xchg
and
inc
add
jns
add
xor
inc
addr16
sbb
stos
(bad)
jb
xor
or
pop
test
jb
mov
push
rcl
jo
cld
jmp
mov
or
xchg
loop
stos
jmp
dec
rol
jo
hlt
dec
xchg
enter
test
mov
in
test
cdq
push
cmp
in
jbe
xchg
xchg
mov
add
xor
xor
(bad)
mov
cmp
outs
test
xor
test
and
test
dec
cmc
in
inc
mov
pop
xor
dec
sbb
xor
mov
cli
push
jno
enter
dec
xchg
(bad)
jecxz
dec
mov
mov
and
push
mov
xor
mov
adc
fild
jl
movs
mov
stos
inc
pop
xor
mov
xor
cmp
pushf
xchg
mov
push
pop
sbb
pop
xlat
mov
leave
mov
sahf
mov
mov
sti
xlat
push
ins
(bad)
jmp
mov
mov
scas
cmp
xchg
js
xchg
cmps
sbb
dec
mul
mov
div
jge
addr16
pushf
xor
pop
jbe
add
and
inc
test
shr
mov
push
push
xchg
aam
bound
pop
sub
mov
jae
add
dec
xchg
sub
retf
cwde
inc
add
shr
retf
xchg
cs
mov
xor
imul
inc
das
scas
repz
rol
clc
inc
jge
shl
and
dec
lods
aas
cdq
cmps
mov
push
cmc
mov
mov
stos
fisubr
jne
shl
mov
cmp
mov
pushf
jmp
xchg
lods
inc
jo
mov
or
mov
adc
inc
enter
mov
cmp
mov
and
sub
mov
jmp
inc
scas
hlt
sbb
inc
or
mov
rol
lods
push
xchg
pop
inc
int
pushf
ins
(bad)
call
(bad)
fwait
mov
pop
and
mov
mov
xchg
add
sti
cdq
imul
mov
das
dec
push
jmp
int3
jl
and
cmp
mov
fs
xlat
sub
icebp
test
cmp
jno
movs
adc
adc
pop
mul
cmc
test
push
and
out
xchg
fstp
mov
xor
jo
(bad)
out
pop
and
adc
popa
mov
dec
jbe
pop
in
mov
retf
repnz
pop
lahf
mov
dec
sbb
test
enter
sbb
in
jb
jmp
jecxz
mov
push
test
mov
pop
sahf
pop
jno
xchg
shr
mov
int3
ds
mov
das
(bad)
fadd
adc
push
lahf
mov
loope
test
out
sub
sbb
dec
std
and
jae
mov
and
data16
sar
xchg
ret
jmp
dec
(bad)
dec
sub
loope
pop
mov
retf
sub
push
mov
call
mov
jne
pop
sub
test
mov
dec
pop
mov
je
xchg
jge
leave
and
enter
xor
lds
in
sub
jnp
pusha
(bad)
pushf
xchg
ins
push
push
icebp
xchg
mov
push
cdq
gs
dec
sbb
aad
outs
(bad)
jno
sub
adc
cmp
ret
sub
mov
push
shufps
mov
mov
and
and
outs
cmp
gs
xor
or
dec
xchg
adc
pop
mov
push
fsub
cdq
in
dec
or
mov
jmp
mov
out
(bad)
jmp
mov
pop
xchg
cmp
rol
dec
fwait
pop
adc
popa
pusha
xchg
(bad)
loopne
xor
push
pop
xchg
push
pop
dec
addr16
xor
adc
cpuid
pop
sar
fwait
mov
lods
mov
mov
sbb
int
retf
jnp
loop
aad
je
in
(bad)
pop
mov
(bad)
sub
or
mov
and
gs
sbb
dec
adc
pop
add
call
jno
mov
call
sbb
jmp
mov
rcr
push
and
pushf
pop
inc
shl
push
cwde
in
pusha
test
ins
push
mov
dec
sbb
pop
xchg
cwde
fisttp
xchg
leave
and
adc
dec
popa
mov
ss
shl
push
push
mov
xor
xchg
out
out
xchg
mov
arpl
lea
iret
adc
push
rcr
and
push
data16
js
push
xor
test
arpl
cmp
add
rol
stos
lea
push
mov
sbb
ret
inc
aad
loope
retf
inc
dec
rcl
mov
sar
(bad)
sub
inc
push
fidivr
lea
xor
xor
cwde
nop
pop
mov
add
or
iret
push
dec
or
ss
scas
(bad)
in
lahf
jmp
xchg
xchg
lea
pop
jns
stos
shl
mov
mov
push
(bad)
xor
ds
dec
cmp
cmps
rcr
or
shl
mov
pushf
jns
outs
(bad)
push
mov
mov
popf
ds
out
push
dec
lea
push
ret
pop
loop
je
pop
daa
xchg
loopne
cmp
sbb
(bad)
ja
repnz
jge
shr
and
enter
adc
jb
or
not
pop
enter
(bad)
dec
mov
xchg
sbb
jg
adc
xor
fiadd
pop
hlt
mov
pop
cmc
sbb
aaa
push
imul
mov
jmp
enter
dec
mov
rol
js
ss
test
and
mov
mov
retf
jge
iret
add
dec
pop
retf
push
mov
sti
(bad)
dec
lds
ins
popa
inc
hlt
les
out
xor
pop
(bad)
call
pop
cmp
popf
es
int3
cmps
and
pop
jle
sub
and
fsub
pop
mov
dec
rol
std
imul
mov
(bad)
jno
lahf
jb
out
fdivr
jns
jp
icebp
xor
jbe
push
ret
pop
call
rcl
fstp
mov
dec
and
test
fistp
pusha
xor
int
mov
cli
mov
push
sbb
outs
sahf
sbb
mov
push
adc
adc
enter
push
add
call
stos
cdq
iret
add
jne
repnz
add
sub
bound
inc
xor
fisub
popf
int
stos
loopne
pop
jne
fild
cmp
fmul
jno
mov
jns
es
lea
and
xchg
cdq
xchg
sbb
mov
mov
or
pop
xor
mov
mov
clc
pop
arpl
and
retf
rol
and
and
arpl
ror
push
cmp
and
jne
test
and
imul
xor
and
bound
adc
les
xor
mov
cmp
cmc
mov
rcl
(bad)
jecxz
stos
sub
test
(bad)
sbb
mov
sbb
popf
jecxz
inc
sbb
or
mov
loopne
adc
adc
xchg
stos
(bad)
int
cwde
or
or
pop
mov
and
xchg
lods
leave
xor
cli
mov
sbb
inc
add
sahf
cmp
popf
pop
add
push
pushf
gs
sub
cmc
mov
shl
sub
ins
ins
mov
sub
mov
mov
bound
mov
fcomp
xchg
fucomi
stos
stos
cdq
push
dec
lds
cmp
mov
jge
addr16
lahf
dec
xor
push
xlat
sbb
xchg
mov
pop
aas
mov
mov
jmp
dec
mov
stos
or
jg
mov
push
mov
sub
inc
adc
mov
inc
jbe
les
mov
jle
pop
mov
xor
rcl
push
push
and
test
test
pop
retf
shl
pop
push
xor
xchg
adc
fwait
xchg
mov
and
movs
popf
scas
mov
int
pushf
mov
pusha
fadd
push
mov
fnstenv
stos
mov
jne
gs
mov
inc
jbe
push
cmps
xchg
adc
out
mov
mov
add
jge
pop
sub
js
int3
push
add
loop
push
jmp
jbe
xchg
imul
add
jmp
fidiv
pop
shl
ja
and
test
mov
ds
lods
adc
ins
dec
jne
inc
or
cmp
(bad)
jns
mov
sbb
cmp
or
xchg
cwde
jge
or
xchg
pop
cwde
(bad)
scas
jns
push
arpl
outs
mov
repnz
mov
mov
icebp
adc
xor
jnp
adc
xchg
adc
shl
xor
hlt
add
xor
jl
mov
(bad)
(bad)
or
xchg
test
or
(bad)
int3
je
jle
mov
mov
dec
shl
jp
jo
inc
mov
(bad)
mov
test
pop
jmp
into
mov
imul
mov
sub
daa
aad
cmps
cmp
dec
push
je
neg
add
(bad)
or
sahf
sub
(bad)
out
imul
sahf
adc
pop
sbb
movs
lahf
icebp
and
mov
stos
cmps
xor
gs
lea
int3
cmp
and
inc
mov
popa
or
mov
jae
adc
aad
fst
es
sub
mov
shl
and
mov
movs
xchg
pushf
out
dec
jmp
retf
fisttp
sub
cmps
dec
cmp
pop
aas
dec
jg
and
pop
sub
rcl
lahf
cmp
pop
add
sub
pop
popf
cmp
leave
inc
hlt
mov
xlat
sbb
scas
mov
inc
add
add
jp
into
cld
fs
shl
int3
(bad)
pop
cs
adc
dec
fdivr
mov
and
dec
test
sbb
test
lahf
in
sti
or
mov
or
mov
stos
add
lods
fiadd
std
leave
iret
shl
xchg
sbb
stos
cs
mov
dec
add
xchg
sub
cmps
xchg
aaa
push
repnz
das
(bad)
xlat
and
inc
stc
movs
(bad)
mov
ret
inc
enter
fild
retf
rol
out
aaa
int
fmul
les
xlat
popf
in
shr
out
add
sub
jge
sbb
sahf
sub
dec
sbb
ret
adc
or
(bad)
iret
ficomp
mov
xchg
repz
adc
xchg
les
sub
push
enter
adc
(bad)
lahf
ins
retf
xchg
jmp
in
(bad)
fidivr
(bad)
retf
fisub
into
pop
push
cmp
lahf
sbb
adc
mov
mov
mov
xchg
mov
push
jge
jmp
call
or
mov
mov
push
ins
stos
cdq
inc
mov
lds
in
jne
dec
mov
cmp
jnp
(bad)
rcl
jmp
pop
or
fs
aad
fldenv
je
shl
imul
lahf
mov
popa
cmp
or
stos
shl
(bad)
into
push
aam
pop
and
jno
xor
xchg
cli
jmp
push
jne
cld
pop
(bad)
arpl
inc
fmul
sahf
xor
or
xchg
cmp
test
stos
aaa
mov
dec
sbb
ds
or
xor
js
mov
sub
fisttp
or
enter
pop
jns
rol
(bad)
data16
xchg
adc
(bad)
fistp
scas
push
pop
cli
dec
mov
add
int
shl
xor
mov
nop
loope
out
stc
xor
inc
jne
movs
inc
push
add
jae
adc
and
sbb
jbe
or
jno
js
jno
shl
push
xchg
adc
and
mov
pop
es
int3
xchg
rcr
dec
or
mov
inc
add
or
mov
sub
adc
mov
sbb
mov
scas
push
adc
cmp
das
lock
sbb
mov
mov
jl
mov
pop
push
jge
cmps
pop
mov
dec
inc
stos
fwait
sahf
mov
mov
fidiv
lock
push
bound
add
jl
pop
inc
lahf
cmps
jae
xchg
rol
sbb
push
and
cs
push
sub
add
pushf
fadd
mov
jl
adc
mov
pop
movs
(bad)
fsub
cmc
xor
test
bnd
cmp
xchg
lods
push
cmps
mov
pop
sub
xchg
mov
jbe
mov
jnp
inc
popa
ja
mov
sbb
jecxz
jae
mov
aam
(bad)
dec
jmp
out
pushf
in
sbb
adc
mov
dec
jecxz
xchg
sub
xchg
dec
stos
push
mov
mov
pop
loopne
mov
loop
cmc
retf
jns
xor
in
fcmovnb
sub
lods
in
adc
hlt
or
push
ret
or
sub
xor
ins
test
push
sub
jno
cmp
mov
sub
cdq
jmp
push
sub
xchg
jne
or
dec
and
mov
xlat
jl
push
mov
scas
push
pop
adc
mov
jp
dec
pmullw
in
add
pop
inc
sar
jae
push
adc
fs
and
inc
retf
dec
xor
mov
fcom
and
in
jne
cmp
mov
push
js
scas
std
inc
dec
or
cs
jno
mov
pop
inc
int3
adc
mov
and
or
rcr
cmp
call
inc
adc
bound
or
jbe
(bad)
and
test
int3
mov
add
mov
or
icebp
enter
pop
xchg
imul
xchg
arpl
sbb
lock
push
es
xchg
dec
sbb
xchg
xor
lock
mov
arpl
sti
dec
and
ins
push
push
lock
xor
lds
jge
jge
lahf
mov
and
pop
retf
xor
inc
mov
mov
xchg
dec
mov
xchg
or
adc
sbb
stos
push
lods
enter
mov
add
(bad)
push
test
lods
stos
pop
(bad)
xor
(bad)
sbb
clc
dec
push
dec
sub
jno
call
cmp
test
movs
add
cmp
addr16
adc
mov
(bad)
cmp
dec
cmp
retf
test
in
inc
fsub
loopne
jp
(bad)
sub
leave
ror
je
(bad)
cld
xchg
movs
lock
xchg
sbb
fdiv
(bad)
aad
or
dec
pop
test
cmps
and
enter
jae
mov
call
sbb
and
pop
or
movs
aaa
add
imul
jecxz
jle
fld
imul
(bad)
adc
lock
push
and
fs
push
int
jp
shl
pop
push
sahf
jno
jne
js
aad
rcl
sti
hlt
aad
mov
mov
inc
and
addr16
add
pop
mov
mov
pop
iret
mov
mov
retf
mov
or
cmc
adc
out
mov
mov
out
or
ja
pop
adc
(bad)
jmp
and
test
push
(bad)
shl
dec
mov
jns
addr16
aaa
jbe
loopne
mov
adc
and
mov
mov
and
aad
scas
std
jge
cmp
mov
nop
mov
shl
jecxz
fcomp
mov
pushf
jne
push
loope
cmp
mov
sbb
cmps
sbb
je
push
mov
jmp
push
ja
sub
fdiv
pop
fisttp
dec
test
sub
fadd
push
fs
cdq
jne
push
(bad)
jns
sbb
das
in
fwait
or
scas
adc
int
rcr
shl
test
mov
xchg
inc
push
mov
or
mov
push
mov
sbb
dec
push
fstp
inc
or
push
mov
or
xor
mov
mov
sub
mov
inc
(bad)
push
push
adc
(bad)
pop
inc
sahf
in
pop
jmp
or
arpl
pcmpgtd
or
or
dec
pop
cmp
sbb
push
mov
inc
test
or
cmp
arpl
adc
jb
(bad)
cmps
(bad)
pusha
mov
sub
pop
call
fadd
ins
pop
outs
and
jns
nop
mov
adc
addr16
push
movs
mov
aaa
scas
add
adc
sbb
movs
cmp
(bad)
ins
and
add
fwait
ja
push
imul
xor
pop
test
sbb
mov
or
aam
cdq
push
xor
cmp
cmp
xor
pop
push
jecxz
sub
movs
xor
leave
add
inc
bound
xor
push
pop
cwde
adc
push
pop
pop
push
enter
in
imul
mov
jg
mov
lahf
jne
sub
std
lods
in
je
sbb
dec
int
loopne
(bad)
ins
cmp
push
movs
mov
mov
jns
cmps
jne
inc
cmp
and
mov
aas
fild
das
ret
push
sbb
shl
call
arpl
loop
jl
cmp
imul
cmps
push
pop
(bad)
xlat
pop
and
lea
mov
or
push
fisubr
(bad)
sbb
mul
int
mov
dec
inc
data16
fdiv
sbb
push
(bad)
adc
call
popa
shl
inc
es
je
xchg
popa
ja
gs
jg
pop
mov
pop
xchg
loopne
cmp
push
imul
data16
dec
xchg
ret
xor
rol
scas
jp
jl
test
xchg
leave
das
push
dec
gs
mov
push
cld
cmp
es
push
and
pop
push
hlt
jnp
mov
sbb
mov
mov
ins
dec
in
mov
lahf
mov
jne
jb
jl
pop
bound
lods
mov
sub
mov
mov
out
das
popa
xor
jo
and
pop
mov
pop
lahf
shl
or
into
xchg
fs
sub
dec
push
test
movs
jo
movs
bound
fwait
sbb
mov
xchg
jmp
or
push
jle
push
nop
mov
cmp
sar
(bad)
iret
mov
sub
mov
xor
dec
and
punpcklwd
retf
mov
mov
xor
jnp
mov
mov
cwde
push
test
fdivr
ja
mov
push
xor
rcl
and
cwde
ja
retf
fldcw
jo
jnp
dec
jne
sbb
sahf
xchg
dec
jno
ds
lods
ficom
ja
pop
inc
xor
cmp
cwde
das
mov
inc
div
cmp
jb
pop
loope
nop
lahf
sub
sbb
add
cmps
lds
and
lea
into
test
xchg
adc
xchg
clc
ds
stos
test
push
xor
xlat
fnstcw
sub
stos
movs
(bad)
sbb
jb
mov
jmp
add
jg
mov
cmp
and
call
js
in
lds
mov
rcr
out
test
in
repz
pop
xchg
pushf
test
dec
inc
js
sub
pop
outs
xchg
xchg
mov
mov
leave
mov
popf
out
sub
lock
and
loope
inc
pop
and
inc
push
mov
mov
mov
dec
lock
jecxz
leave
push
ins
arpl
cmp
mov
dec
dec
sbb
aaa
je
ins
jge
(bad)
jl
or
mov
jl
or
xchg
xchg
je
add
cmp
jle
les
pop
and
lds
jb
cmps
dec
xchg
pop
lods
(bad)
mov
loop
enter
mov
mov
push
aas
test
xchg
xchg
not
cs
call
ins
rcl
xchg
sbb
xor
mov
scas
jg
ds
and
clc
pushf
test
in
inc
out
pop
iret
out
mov
dec
cwde
sar
pop
mov
mov
and
and
ins
mov
pushf
adc
sub
movs
jmp
scas
and
stc
stos
dec
clc
arpl
ins
popf
jno
cld
jg
sub
outs
cmc
pop
sub
fldcw
ret
arpl
push
add
mov
test
rol
addr16
test
jne
pop
pushf
not
mov
jecxz
push
lock
sar
lods
mov
sbb
cmp
mov
xor
jne
popa
scas
mov
sahf
sbb
lea
mov
sub
jns
retf
xchg
pop
ds
inc
inc
jns
ficomp
cli
push
fwait
cwde
push
mov
dec
ins
test
daa
es
fsubr
push
dec
mov
push
pop
fdiv
sub
mov
mov
jmp
mov
adc
cld
(bad)
sahf
mov
sahf
jl
pop
xor
(bad)
fmul
mov
lods
into
mov
ins
mov
inc
test
into
data16
adc
stc
push
fist
pop
jge
mov
shl
mov
icebp
xchg
jecxz
inc
sbb
add
add
ds
add
sbb
jecxz
jmp
jle
xor
data16
and
sahf
inc
xor
sub
mov
xor
les
outs
xor
lea
jns
mov
jb
inc
mov
sub
xchg
cmps
ja
ins
nop
call
popa
je
dec
cmp
xor
test
arpl
mov
cmps
mov
pop
rol
popf
jae
cmps
test
xor
fisttp
in
arpl
or
(bad)
mov
adc
push
sub
xchg
dec
pop
in
adc
test
(bad)
jp
mov
stos
in
mov
out
pop
das
iret
ins
mov
lds
and
retf
sbb
jl
dec
jecxz
mov
rcl
mov
and
lods
outs
stos
and
jg
pop
popa
test
dec
fstp
lea
loope
jno
icebp
pop
cmc
dec
lods
out
loope
loop
fadd
mov
or
in
loop
cmp
push
and
(bad)
sub
jne
mov
sub
push
adc
mov
ja
pushf
daa
ds
add
retf
push
clc
pop
or
call
lds
pop
into
mov
add
cdq
cld
mov
sub
neg
push
out
xor
fsubr
inc
enter
mov
dec
cmp
mov
pop
mov
pop
aad
shr
retf
sbb
rcl
mov
rol
xchg
not
and
mov
mov
jp
adc
xlat
mov
push
and
cmp
je
loopne
sub
jmp
pop
and
fiadd
retf
mov
add
mov
inc
test
xlat
movs
ja
mov
adc
pushf
sbb
push
xchg
add
loope
sub
jmp
inc
add
arpl
add
adc
stc
shl
outs
shl
(bad)
sbb
int3
and
loopne
mov
js
add
pop
movs
fcos
and
aad
pop
and
cmp
push
mov
fdiv
xlat
lods
(bad)
mov
pop
leave
inc
shl
and
ss
xchg
push
pusha
pop
aas
jl
movs
sub
mov
add
cld
jmp
cmp
fld
je
jmp
xchg
test
adc
aam
pop
xor
pop
xor
push
cmp
cmps
dec
dec
into
xchg
pop
adc
xor
jne
aaa
push
jne
mov
iret
mov
scas
adc
sub
test
xchg
pushf
popa
mov
fldenv
icebp
test
inc
retf
arpl
jns
out
mov
(bad)
lods
mov
adc
xor
(bad)
sbb
xor
jle
push
mov
fcmovbe
xchg
shr
mov
cmp
push
arpl
ret
ror
jmp
or
pop
test
shl
cwde
xchg
jle
jg
or
mov
dec
mov
and
push
push
mov
arpl
call
mov
mov
aam
mov
xor
jmp
push
sub
pop
aas
mov
jge
add
and
add
xchg
iret
mov
xchg
scas
push
xor
scas
jl
repz
xor
jmp
dec
imul
or
pop
pop
xchg
sub
lods
pop
pop
(bad)
and
inc
out
sbb
test
dec
gs
sti
leave
adc
pop
push
or
push
cmp
adc
sub
pop
sbb
cmp
mov
jmp
outs
push
push
mov
mov
jmp
into
xchg
or
mov
sub
scas
gs
push
jp
xor
xor
sub
push
lods
iret
das
mov
js
imul
and
shr
xchg
sub
push
jo
xor
imul
mov
and
pop
add
or
std
retf
aad
or
rcr
fcomp
push
xor
xchg
ins
sbb
pop
dec
popa
cmp
imul
sbb
push
jmp
arpl
or
dec
js
mov
xchg
push
sub
push
dec
outs
sub
outs
push
jl
hlt
sbb
push
into
mov
adc
xor
mov
cmp
jecxz
ucomiss
mov
ret
test
in
je
sbb
das
mov
jmp
bswap
sbb
in
jnp
sahf
jb
xchg
stc
cmp
mov
lock
sbb
setle
xor
pop
and
lods
pushf
aam
xor
(bad)
adc
fmul
popa
add
jbe
rcr
push
mov
lock
xor
cmp
sahf
iret
add
lock
inc
shl
and
jns
out
xchg
lods
js
addr16
push
or
std
shl
mov
push
mov
push
enter
movs
fwait
adc
dec
icebp
pop
jp
sahf
shl
test
leave
mov
or
and
xchg
jg
mov
dec
pop
mov
jecxz
rol
(bad)
in
add
fsubr
sbb
push
data16
inc
mov
jp
push
push
push
scas
bound
and
lds
mov
fdiv
or
mov
fsub
jb
inc
jmp
int
je
addr16
adc
and
xlat
iret
sbb
cmps
lds
aas
movs
or
arpl
mov
shr
mov
push
jl
outs
push
hlt
sbb
inc
(bad)
fsubr
in
(bad)
sbb
test
dec
add
add
cdq
mov
jmp
cwde
jbe
mov
aad
push
mov
push
out
xchg
cwde
mov
jle
jmp
mov
push
jno
dec
jmp
cmp
lods
lahf
mov
push
mov
and
ret
ror
add
cmp
pop
mov
scas
inc
dec
in
or
mov
lea
cpuid
xor
mov
div
inc
lods
popa
xor
mov
fild
dec
test
xor
jbe
xchg
retf
sub
movs
adc
push
call
hlt
fistp
xchg
pop
scas
mov
sbb
sub
bound
cmp
pop
leave
cmp
mov
int
mov
pop
xchg
xchg
jp
inc
or
inc
gs
cmps
lea
dec
mov
fdivr
pop
push
scas
int3
rol
mov
cdq
rol
xchg
adc
jl
jge
inc
jns
into
adc
test
pop
push
setbe
inc
dec
or
mov
inc
leave
je
out
jne
int
jmp
xor
rcr
fsub
cmps
addr16
fnstsw
xor
sub
int
push
fisub
popf
std
cmc
push
ss
fidivr
fiadd
lods
fldenv
outs
dec
call
pop
jl
pop
(bad)
inc
jbe
test
xor
add
pop
jecxz
(bad)
xor
push
dec
cmp
pop
push
xor
jle
add
mov
shl
daa
xlat
cmp
mov
int
repz
clc
hlt
mov
push
std
push
movs
jns
imul
ds
cmp
sbb
mov
pop
pusha
test
push
es
leave
xchg
adc
mov
xchg
cmp
into
xchg
loop
scas
stos
lods
xlat
xor
leave
xor
cmp
imul
test
xor
jg
cmc
popa
cwde
jge
mov
cs
fsubr
mov
xchg
pushf
out
xchg
nop
mov
jno
xlat
shl
lds
ror
or
int
fild
mov
je
inc
sahf
adc
idiv
pop
imul
adc
mov
xchg
push
lahf
test
and
lea
ja
or
aam
hlt
pop
sub
enter
scas
sub
jnp
aas
stos
jns
jmp
add
aam
cmp
int3
fwait
lock
in
imul
inc
xor
test
push
inc
cwde
inc
sub
scas
mov
xor
xchg
ret
mov
outs
int
adc
aam
imul
adc
es
imul
loop
pop
ins
xor
imul
add
mov
pop
mov
aad
cs
inc
pop
cmp
cmps
dec
idiv
ss
push
mov
lahf
fwait
sub
enter
ficom
mov
pop
mov
icebp
sbb
aas
push
test
jge
mov
mov
cmp
std
or
gs
cli
cmp
jne
sar
(bad)
push
ds
iret
into
mov
(bad)
ss
push
imul
inc
jl
push
data16
sub
cmp
jl
loop
push
push
je
jle
pushf
vxorps
mov
gs
pmaxub
mov
xor
leave
inc
mov
test
mov
(bad)
out
sub
test
(bad)
sbb
push
jbe
test
xchg
in
(bad)
push
cs
mov
push
and
add
mov
out
jecxz
out
sub
push
sahf
test
jbe
test
mov
and
or
aas
das
test
cmp
ins
sbb
fimul
std
je
dec
xchg
sar
enter
cwde
call
lds
mov
cwde
or
mov
and
and
cmps
pop
mov
mov
jae
pop
pop
sub
imul
sahf
cwde
lds
imul
loop
dec
lahf
inc
or
pusha
push
repnz
or
xchg
lods
dec
data16
push
xchg
mov
(bad)
push
jae
out
xchg
(bad)
aad
and
dec
sbb
rcl
cmp
jl
or
cmp
jle
push
push
mov
pop
xchg
popa
dec
test
mov
out
mov
sub
loope
inc
dec
stos
add
and
popa
sub
dec
jnp
aaa
inc
pop
dec
ret
push
gs
bound
cmp
or
out
or
pop
sub
in
mov
movs
mov
dec
leave
clc
push
mov
pop
das
mov
jle
outs
mov
imul
data16
imul
sahf
jo
popw
test
mov
ror
fild
movs
add
lahf
or
sti
sub
clc
dec
imul
jbe
mov
jne
sbb
jl
js
or
mov
nop
vpxor
test
mov
add
das
call
imul
(bad)
pop
push
inc
call
xchg
mov
leave
xor
test
fsubr
mov
cmp
push
xor
outs
jns
daa
add
in
arpl
gs
and
inc
(bad)
fldcw
fwait
xchg
cmp
push
lahf
mov
mov
into
xor
fld
sbb
test
pop
movs
jge
fmulp
dec
add
xchg
or
nop
cmp
mov
(bad)
cmp
cmp
test
inc
fcom
mov
mov
je
jl
and
in
sub
jnp
mov
out
dec
push
clc
gs
push
not
and
jb
add
mov
jnp
out
cdq
jge
je
fadd
or
dec
fmul
jp
push
adc
aaa
xor
(bad)
int3
jecxz
mov
cdq
ja
sbb
repnz
push
cmp
int3
movs
or
add
push
inc
js
sub
daa
fwait
jl
mov
xchg
mov
ins
arpl
adc
aas
xchg
cmp
popf
and
or
push
lods
push
cmp
lea
sub
push
add
ss
inc
adc
jg
nop
or
and
pop
dec
cwde
jo
sbb
dec
sbb
stos
or
mov
imul
out
xchg
pop
push
dec
icebp
shl
mov
add
(bad)
mov
sti
cmp
jmp
jmp
ror
push
lods
imul
xchg
xchg
mov
fistp
sub
xchg
mov
in
xlat
jne
pop
lock
lahf
fbld
sub
sub
cmp
popf
add
movs
and
(bad)
sub
jge
xchg
test
xlat
out
outs
xchg
(bad)
pop
fucomp
sbb
es
and
jl
jne
mov
movs
jns
(bad)
fucom
stc
mov
mov
imul
jp
test
call
loopne
pop
mov
mov
and
mov
mov
mov
mov
xor
clc
clc
ins
dec
mov
mov
lock
mov
movs
popa
xchg
mov
sbb
iret
sub
jp
leave
imul
mov
jns
push
mov
cmp
dec
xor
pop
stc
addr16
pop
cmp
dec
adc
mov
rcl
xchg
push
and
and
sub
push
aad
aas
out
sub
scas
es
jl
push
jbe
mov
push
ja
push
popf
imul
nop
and
sahf
xor
jmp
and
or
jns
jg
retf
fisttp
jno
jg
adc
fisubr
popa
ret
pop
push
mov
mov
xor
mov
rcr
popa
xchg
repz
xchg
xchg
clc
add
cmp
mov
lahf
mov
ins
retf
inc
jg
and
xor
movs
xchg
arpl
push
setge
mov
cmp
aad
mov
popf
xchg
inc
mov
lahf
cmp
sub
jne
shr
push
and
jge
es
pop
mov
out
ins
push
sub
out
nop
(bad)
sti
movs
ret
add
sub
arpl
call
jl
not
int3
dec
push
adc
push
mov
enter
vhaddps
test
cmp
add
cmp
(bad)
dec
jbe
repz
cmp
xchg
int3
inc
shl
and
shl
add
(bad)
pop
pop
in
(bad)
lds
pop
mov
sub
sti
inc
sub
jns
shl
lods
dec
scas
es
xor
pop
(bad)
pop
out
mov
jbe
xchg
mov
mov
jne
mov
test
cmc
sub
push
or
push
sub
ja
dec
xlat
stos
xchg
push
nop
iret
mov
mov
mov
fcom
mov
in
push
sub
data16
xchg
jecxz
mov
xchg
or
js
retf
mov
ficomp
popf
adc
ss
sti
mov
out
rcl
ds
cmp
jno
frstor
push
mov
jae
and
aam
mov
retf
xchg
fiadd
mov
xor
jae
outs
dec
mov
inc
mov
imul
enter
mov
ds
fwait
retf
shl
xchg
(bad)
adc
pop
sbb
sbb
adc
je
push
or
mov
xor
mov
pop
(bad)
std
int3
xor
adc
push
in
pop
test
rcl
test
cli
mov
xchg
cdq
not
ror
sahf
or
test
jl
jle
jbe
cmp
sbb
add
ror
add
shl
int3
(bad)
es
test
jecxz
rol
mov
fisub
mov
or
or
sbb
xchg
fiadd
add
(bad)
popf
test
jne
pop
mov
pop
mov
arpl
add
sub
pop
pop
(bad)
ror
dec
je
or
push
dec
sub
fisttp
mov
cmp
cmp
or
jno
outs
and
sub
sub
mov
fistp
jo
ret
loopne
cwde
push
adc
mov
and
cmp
xchg
imul
arpl
fisttp
pop
push
stos
(bad)
in
xor
leave
ins
sub
inc
jge
cdq
inc
test
fst
mov
inc
add
xchg
mov
inc
sahf
jnp
mov
cmp
scas
mov
les
pop
out
xlat
xchg
in
shl
push
lods
push
mov
pushf
mov
ficomp
fsubr
test
mov
and
mov
rcl
cmps
jp
mov
fwait
jne
dec
fwait
scas
sub
lds
xor
jo
mov
cli
xor
xchg
sub
mov
popf
mov
mov
mov
push
pusha
xor
scas
pop
ja
pop
xchg
mov
mov
imul
cmps
mov
mov
out
movs
xor
cmp
stc
imul
stc
mov
inc
pusha
jne
jbe
gs
fwait
inc
push
sti
cmp
repnz
cdq
mov
fucom
mov
arpl
dec
jg
and
sbb
jge
mov
mov
test
mov
sub
inc
mov
fcomp
xchg
push
mov
ror
push
ins
dec
sub
(bad)
mov
and
(bad)
hlt
cdq
fdivr
push
bnd
js
fiadd
mov
mov
jns
(bad)
xchg
ficomp
popa
sbb
mov
mov
outs
ret
nop
lea
pop
pushf
test
mov
daa
in
push
sahf
xchg
inc
jp
pop
mov
aas
ins
in
jae
adc
int3
movs
xlat
jne
add
mov
push
loope
call
movs
inc
lods
mov
js
jg
inc
mov
cmp
leave
sbb
sbb
xchg
cwde
xor
(bad)
leave
and
or
mov
jmp
mov
jne
rcl
push
or
xrelease
sbb
xchg
cld
sbb
shl
cdq
jmp
add
lods
push
repz
jns
add
and
mov
mov
inc
test
mov
mov
in
mov
mov
mov
xchg
(bad)
loope
lods
(bad)
sub
repnz
adc
sahf
mov
out
pusha
pusha
(bad)
aam
sahf
fwait
xlat
mov
lock
rcl
test
aas
jae
scas
cmp
pop
pop
nop
mov
push
mov
aas
dec
pop
jmp
mov
pop
fcmovnu
sbb
pop
inc
xchg
xlat
ins
push
imul
jno
push
push
mov
push
in
dec
jge
push
pop
lods
outs
mov
lods
add
aad
add
mov
inc
in
call
jno
cs
pop
inc
mov
mov
mov
or
and
repnz
push
ret
xchg
mov
mov
fdivr
dec
in
jns
sbb
lods
sbb
jb
adc
mov
fbld
lods
dec
dec
xchg
pop
mov
ja
push
hlt
(bad)
aam
sbb
in
mov
push
xchg
(bad)
cdq
lods
ins
arpl
clc
fldcw
les
out
xchg
cmp
sbb
push
stos
sbb
cmps
stos
mov
xchg
sub
push
inc
fcmovne
mov
addr16
push
mov
lea
and
xor
or
push
pop
ror
pop
mov
sbb
pop
add
fist
rcr
jmp
imul
xchg
xchg
jl
les
push
fdiv
int3
test
push
sub
push
int3
fsubr
mov
sbb
mov
(bad)
or
retf
out
fdiv
dec
jns
mov
imul
test
fnstcw
outs
xchg
test
jmp
div
ss
and
inc
lods
(bad)
ror
mov
data16
jns
dec
hlt
push
retf
sbb
ds
test
xchg
into
in
and
pop
jecxz
scas
mov
es
xchg
aas
mov
scas
je
push
fcom
xor
sbb
sbb
jo
mov
arpl
ficomp
icebp
ins
adc
jnp
lock
xor
std
add
ror
sar
lock
es
(bad)
jae
inc
lods
int3
sub
outs
sbb
enter
push
lods
push
cmp
adc
loopne
mov
inc
aas
mov
pushf
shl
xchg
jo
(bad)
out
addr16
mov
and
and
in
lea
(bad)
sub
jle
dec
adc
movs
mov
test
(bad)
ins
jecxz
aad
or
cmp
out
dec
addr16
jl
cmp
mov
push
jbe
dec
imul
xor
pushf
shr
div
leave
imul
retf
adc
sub
adc
cmps
pop
dec
mov
pusha
mov
xchg
ret
sub
cmp
jge
fsub
mov
jg
test
lds
arpl
push
fxch
mov
or
push
dec
bound
sub
xchg
ds
fidiv
xlat
mov
addr16
jge
sub
dec
cmc
mov
je
push
mov
push
cmp
mov
sbb
sbb
mov
xlat
push
adc
pop
fcmovb
(bad)
pop
dec
mov
fnsave
dec
(bad)
js
lea
jno
ror
add
ror
aas
push
test
je
sbb
and
and
mov
lea
std
inc
and
and
xchg
mov
mov
lods
and
dec
xor
jg
(bad)
dec
lock
lea
imul
mov
clc
cmp
popa
xchg
jbe
adc
out
in
jge
inc
dec
js
mov
xor
(bad)
aad
mov
ja
and
int
sahf
test
jg
int3
cmp
adc
and
dec
mov
test
cdq
data16
sahf
arpl
sahf
jo
xchg
and
aam
int
movs
out
jnp
jle
or
inc
pop
and
mov
imul
adc
in
stos
adc
retf
in
pop
dec
xor
mov
rcl
fwait
xor
or
xchg
repz
stc
mov
dec
sbb
ins
xchg
lahf
cmc
test
xchg
mov
dec
loope
xchg
or
mov
test
xor
xor
sbb
into
xchg
(bad)
xchg
inc
mov
les
jb
std
add
das
mov
cmp
dec
and
test
and
jl
xor
cmp
shr
loop
test
out
les
(bad)
fwait
pop
mov
push
mov
jmp
pop
and
sbb
outs
adc
push
push
and
jge
rcr
shr
out
imul
adc
fwait
pop
dec
shl
mov
jp
inc
dec
xor
push
adc
jb
mov
mov
xor
push
retf
xlat
jmp
popa
push
int
inc
stc
mov
test
(bad)
retf
test
pop
lods
iret
xor
fwait
dec
pop
dec
cmc
pop
jnp
mov
mov
inc
mov
adc
jo
push
adc
mov
mov
fwait
sub
imul
mov
ss
out
rcr
xor
lahf
sbb
scas
jp
lds
cmove
pop
jge
pop
push
push
pop
lds
dec
inc
test
push
push
inc
and
or
je
mov
cmc
and
movs
jp
xchg
enter
and
iret
pop
jae
loop
out
xchg
mov
(bad)
sbb
cmp
pop
shl
jns
cwde
data16
xlat
mov
js
cdq
in
push
push
cmp
mov
xchg
or
test
or
and
test
(bad)
rcl
ret
mov
imul
mov
xor
hlt
inc
retf
ins
mov
arpl
inc
jnp
out
add
add
xchg
lock
je
jg
ins
call
imul
lods
in
add
data16
cmps
push
fwait
into
xchg
mov
xor
push
stos
call
mov
(bad)
mov
mov
out
jg
sahf
jbe
dec
sbb
jns
xor
inc
jmp
add
mov
cwde
jmp
ror
jb
mov
loopne
pop
mov
popa
mov
jne
adc
push
popa
adc
push
adc
(bad)
push
test
inc
jl
sti
ror
ror
inc
test
std
and
popa
inc
icebp
mov
jge
fsubr
jecxz
neg
ret
mov
sub
mov
test
test
lock
or
jmp
sub
jge
xor
scas
arpl
add
add
mov
pop
mov
pop
in
adc
test
in
cmps
test
push
pop
and
aam
lds
add
loope
addr16
jnp
shl
add
push
sbb
(bad)
mov
enter
or
xchg
pop
leave
push
cmp
nop
pop
xor
loopne
add
add
ficom
pop
inc
cdq
add
jne
mov
popf
fldcw
push
sbb
sub
pop
lahf
push
sub
push
out
cld
mov
mov
add
mov
into
pop
popa
mov
aas
cwde
cdq
gs
lahf
jge
xor
push
add
mov
dec
adc
ins
mov
test
pop
and
ficomp
pop
xchg
mov
push
jp
jg
fnsave
repz
adc
mov
push
push
push
sar
pop
push
retf
(bad)
or
adc
jl
ins
mov
(bad)
div
(bad)
je
int3
inc
dec
aam
lods
xor
loop
(bad)
inc
mov
sbb
ror
test
fucomi
jo
stos
mov
xchg
push
aad
shr
popf
sar
xchg
pop
or
stc
xchg
mov
int3
in
mov
sbb
sahf
jmp
and
pop
xchg
push
mov
dec
mov
pop
test
xor
add
mov
daa
jne
lea
sub
iret
(bad)
test
mov
(bad)
mov
ins
loope
addr16
mov
test
and
lods
mov
rol
jmp
inc
pushf
inc
ficom
fs
sbb
cmp
stos
jnp
xchg
jge
imul
out
mov
sbb
test
arpl
scas
mov
test
xchg
push
add
push
xchg
test
jp
jb
sysret
sub
xchg
mov
mov
lds
adc
test
movs
or
into
sbb
and
inc
pop
stc
xlat
inc
mov
add
dec
adc
inc
retf
inc
lds
fcomp
push
imul
mov
mov
int
outs
push
outs
push
adc
lods
shr
outs
retf
push
jnp
mov
ins
ins
aad
stos
pop
test
xchg
cld
inc
lock
arpl
into
or
jbe
hlt
je
js
and
ins
pop
pop
or
sbb
call
dec
pusha
fistp
fs
add
mov
dec
pop
push
jg
lods
and
test
inc
cs
pop
inc
mov
arpl
push
push
in
inc
repnz
inc
cs
mov
sub
mov
and
inc
add
cmp
mov
cdq
pop
stos
pop
bound
mov
mov
mov
fs
mov
mov
lahf
mov
sub
pop
sub
mov
xor
cdq
cmp
jge
dec
test
movs
cs
mov
xchg
pop
mov
call
mov
aam
xchg
fstp
dec
repnz
pop
xor
mov
int3
dec
jns
fnstcw
lahf
iret
(bad)
fdiv
jmp
mov
xchg
adc
mov
call
call
rcl
pop
aad
in
xchg
dec
xor
dec
jp
mov
push
push
pop
or
sub
jnp
out
push
pop
fadd
test
mov
aam
loop
pushf
mov
push
or
stos
sti
or
aas
(bad)
inc
mov
scas
mov
dec
and
leave
or
and
mov
or
hlt
mov
arpl
jge
mov
cmp
sbb
addr16
dec
inc
movs
loopne
cmps
aas
in
ret
lods
push
lods
jecxz
pop
jge
shl
stc
test
mov
dec
aas
mov
aas
push
(bad)
cdq
call
(bad)
fwait
(bad)
dec
and
mov
push
jp
rcl
xchg
jnp
push
pop
lods
loopne
mov
dec
pusha
and
(bad)
cwde
mov
and
jmp
ins
mov
(bad)
mov
mov
int
mov
stos
or
in
fwait
jl
iret
lea
aad
xchg
(bad)
ja
not
lods
(bad)
pop
mov
test
pushf
movs
inc
or
movs
cmps
mov
int3
add
test
inc
cmp
jo
sbb
xor
xor
pop
out
push
push
mov
enter
test
push
xor
mov
stc
xchg
sbb
scas
sub
int3
push
or
mov
push
sbb
push
je
push
and
popf
sub
arpl
retf
pop
adc
shr
jecxz
jge
ret
adc
add
mov
xchg
push
daa
add
(bad)
sbb
push
pusha
cmps
jns
imul
xchg
xchg
or
lds
cmp
xchg
dec
dec
inc
shr
inc
retf
xchg
mov
pusha
call
push
pop
into
pusha
and
push
add
fwait
call
shl
lods
dec
into
retf
push
jmp
pop
mov
push
popf
push
xor
adc
mov
inc
push
xchg
sbb
or
test
pushf
lods
push
ja
jg
xor
clc
aas
push
mov
and
add
inc
imul
jbe
mov
sub
cmp
inc
adc
sub
cmp
not
lods
movs
jnp
retf
sbb
scas
shr
inc
test
mov
mov
rol
sbb
(bad)
jmp
fadd
mov
jp
mov
pop
(bad)
mov
push
jge
popa
xor
xor
add
pop
fisttp
lock
adc
fst
ret
cld
iret
inc
les
push
dec
pushf
ds
movs
mov
mov
cmps
sbb
or
test
push
xchg
sub
arpl
(bad)
or
jae
fldenv
cmp
mov
push
bound
push
fistp
and
or
mov
add
inc
sahf
pop
pop
mov
jne
push
xchg
sbb
cmc
xchg
pop
adc
enter
mov
mov
pop
jns
aam
fist
mov
xor
mov
mov
mov
sub
add
cmp
sub
popf
out
adc
imul
loopne
mov
call
inc
rol
push
rcr
test
out
pop
mov
fisubr
and
mov
and
dec
inc
jbe
loope
mov
mov
mov
pop
aam
(bad)
(bad)
mov
add
mov
xchg
int3
call
aad
pop
push
scas
lock
mov
cmp
addr16
(bad)
cld
leave
movs
jge
(bad)
and
fdivr
mov
cmp
mov
mov
xchg
push
jle
mov
adc
add
push
cmp
inc
cmp
hlt
jl
test
aas
mov
cs
adc
(bad)
fcom
(bad)
mov
push
in
dec
je
aam
xchg
rcl
cmc
and
stos
aam
pop
lea
push
inc
and
sahf
sub
fisub
sub
pushf
sub
mov
mov
aad
sahf
test
push
push
mov
xchg
sbb
push
mov
(bad)
(bad)
pushf
(bad)
adc
hlt
jl
js
stos
pop
pop
pop
imul
mov
outs
sub
and
sahf
push
out
and
inc
cmp
movs
jne
fld
pusha
adc
adc
dec
iret
mov
mov
pop
sub
inc
cmp
pushf
mov
cmp
add
and
mov
repz
arpl
mov
scas
ret
sub
enter
push
xchg
or
pusha
xlat
or
scas
mov
cmc
mov
adc
xchg
xor
mov
movs
dec
(bad)
mov
lods
outs
mov
imul
test
movs
jnp
leave
xchg
ror
mov
aad
dec
cmp
test
(bad)
cs
call
ins
enter
jbe
and
mov
mov
xchg
ret
scas
movs
adc
xchg
ud0
mov
xlat
out
lods
rcl
sub
mov
pop
adc
push
mov
push
push
sub
pop
fnstsw
aam
cmc
mov
push
test
pop
mov
push
pop
stos
mov
out
push
push
dec
add
cmp
add
jl
push
(bad)
aad
pop
push
lea
ins
iret
adc
je
sahf
cmp
aaa
mov
push
movs
add
mov
dec
rol
mov
inc
int3
ins
das
popa
adc
scas
cdq
mov
movs
dec
retf
adc
aaa
cdq
outs
mov
jo
std
scas
lods
and
out
sbb
mov
mov
fild
mov
inc
or
sbb
mov
fnstsw
lods
jg
mov
outs
sub
mov
push
test
jnp
mov
jbe
or
adc
adc
xlat
mov
inc
outs
or
ror
scas
or
outs
jae
iret
dec
add
dec
inc
cmovo
addr16
jnp
call
sbb
mov
inc
or
xchg
push
imul
sub
adc
and
test
inc
mov
outs
stc
aad
or
cmp
mov
dec
fsub
dec
test
cmp
xor
dec
mov
mov
ret
imul
outs
xor
outs
in
je
mov
xchg
dec
and
xchg
and
push
iret
repz
gs
mov
mov
inc
aas
cs
bnd
dec
jle
jl
shl
mov
mov
out
scas
xchg
fs
adc
lock
add
fild
and
sbb
(bad)
or
rol
fcomp
das
jecxz
sub
push
add
pop
test
aad
xchg
(bad)
test
jo
xchg
test
pop
and
mov
aad
sbb
mov
clc
enter
xchg
sbb
cmps
ror
jns
movs
and
mov
movs
mov
ret
rol
push
xor
mov
dec
aad
mov
sbb
xor
js
xor
push
jne
lock
arpl
daa
push
sbb
inc
rcr
call
sub
mov
in
pop
shl
shl
pushf
push
sbb
js
pop
mov
mov
adc
fisttp
cmp
rcr
fld
test
ficomp
cmps
fwait
mov
jl
test
mov
outs
arpl
retf
xor
rcr
jae
mov
enter
out
or
dec
mov
sub
push
mov
in
mov
cmp
and
aad
fsubr
fcom
jbe
and
shr
movs
adc
add
cmp
inc
icebp
sub
mov
into
enter
push
addr16
sbb
jne
dec
inc
mov
pop
arpl
mov
inc
cmp
out
shr
xchg
jle
mov
adc
dec
ret
jmp
and
lock
cmp
pop
into
push
and
das
cmp
sbb
pushf
cmp
fprem1
das
xchg
pusha
adc
ins
popa
out
test
and
xchg
jmp
in
pushf
rcl
sahf
xlat
lds
cmp
xchg
retf
arpl
mov
push
mov
pushf
lods
jae
fstp
xchg
sub
outs
sub
and
aam
inc
inc
retf
into
aam
inc
and
push
xor
ins
jb
or
adc
enter
(bad)
jecxz
pop
sub
popf
push
mov
sahf
inc
mov
jo
add
outs
pop
jecxz
jnp
imul
push
sbb
(bad)
xchg
and
shl
mov
dec
loopne
xlat
push
pop
xchg
mov
sti
cmps
popf
xchg
dec
fist
out
ins
mov
(bad)
mov
pop
sbb
mov
and
push
int3
xlat
jle
daa
lahf
(bad)
nop
xlat
mov
aas
loopne
fbstp
xchg
ins
popa
push
pop
(bad)
jo
lahf
lahf
xchg
mov
jo
daa
dec
sar
jle
lods
ja
imul
jae
sub
push
adc
cwde
in
push
loopne
lods
pop
in
es
adc
jne
pop
fistp
adc
in
pop
add
sahf
xchg
fs
push
lds
push
mov
cdq
test
cmp
(bad)
xor
popf
xlat
pusha
mov
add
pop
mov
aam
inc
or
loopne
int3
aad
jns
xchg
lahf
nop
dec
add
pushf
inc
sti
pop
xor
cmps
inc
push
push
fadd
and
pop
call
loopne
dec
jns
and
adc
mov
cld
cmp
mov
dec
fnsave
mov
jge
adc
gs
test
add
popf
imul
push
dec
mov
sbb
mov
inc
sub
stc
clc
add
js
movs
sbb
xlat
ret
sahf
rcr
cmps
jg
shl
nop
fwait
xlat
pushf
pop
jle
sub
sub
mov
pop
push
fmul
mov
jle
arpl
ficom
xchg
dec
outs
push
in
aas
pushf
outs
pop
sub
popa
repz
adc
sub
inc
fmul
retf
ins
jo
out
or
ja
les
mov
sub
popa
ror
test
sub
push
xlat
(bad)
mov
mov
sub
xchg
test
jg
inc
and
(bad)
sbb
sub
mov
enter
int
loop
fwait
in
fsubr
xchg
xor
jl
xor
jae
movs
pusha
push
mov
mov
mov
xchg
int3
loope
ffreep
and
cmps
or
scas
mov
inc
loopne
icebp
adc
mov
xchg
hlt
push
dec
mov
xor
xchg
xchg
int
inc
mov
mov
dec
add
sbb
stos
xchg
and
dec
icebp
cmc
mov
xor
sbb
push
pop
sbb
mov
stos
or
or
scas
in
rol
sub
add
repz
imul
int3
jmp
jle
push
or
leave
push
fmul
mul
ret
push
jae
and
fisubr
sub
push
aas
loope
sar
test
inc
(bad)
mov
(bad)
mov
and
shl
mov
mov
sbb
int
daa
fsub
cmp
mov
sbb
iret
xor
sub
mov
leave
icebp
je
rcl
push
or
dec
mov
inc
ret
lea
push
cmc
movs
cmp
dec
mov
pop
jo
enter
ror
jbe
mov
ds
cwde
xchg
sub
mov
test
jl
setae
call
aaa
cmp
xchg
outs
xchg
imul
mov
mov
test
dec
aaa
mov
int
in
ins
int
mov
rol
cmp
(bad)
lock
pop
add
or
arpl
jo
popf
ret
popf
push
sub
outs
mov
adc
inc
adc
pop
sub
imul
in
sbb
adc
enter
and
push
jmp
or
mov
mov
jecxz
sub
adc
sbb
xchg
or
scas
mov
outs
ret
test
out
imul
jge
push
out
sub
les
xchg
call
mov
test
scas
push
stos
xchg
loopne
mov
push
or
adc
ror
popf
imul
test
mov
xchg
movs
dec
enter
out
jo
xor
(bad)
int3
and
shl
jge
xor
cmc
aaa
int3
xor
hlt
jo
xchg
neg
gs
jmp
or
jg
rcl
test
push
add
pop
inc
and
sub
push
xchg
push
outs
aas
(bad)
div
loope
cmp
jae
ds
mov
call
into
xchg
and
es
cmp
mov
ret
mov
sub
adc
retf
mov
int3
out
mov
cld
ror
std
pop
cmc
shl
mov
cs
iret
psllq
sub
and
mov
xlat
pop
and
ja
mov
sbb
jae
in
lods
mov
mov
inc
clc
or
and
test
or
popa
xor
aad
jl
ins
data16
ins
mov
ins
outs
stos
cwde
mov
push
popf
arpl
or
in
jle
mov
jne
lds
jecxz
das
je
out
jnp
adc
mov
add
and
inc
rol
iret
icebp
xchg
dec
dec
es
lds
dec
pusha
pop
or
rol
xor
adc
xchg
std
xchg
hlt
or
mov
xchg
jns
xor
imul
pop
loop
es
cs
outs
ds
sbb
sub
lahf
xchg
in
inc
cmp
sahf
xor
or
mov
aas
es
add
mov
in
icebp
jno
adc
fsubr
push
pop
jmp
pop
sbb
and
jg
cmp
pop
jmp
jmp
sub
jo
adc
scas
(bad)
ret
pusha
fwait
dec
fs
cmp
pop
xchg
retf
hlt
clc
mov
addr16
mov
rol
push
cdq
mov
mov
mov
lods
sub
sub
call
gs
xchg
imul
pop
test
enter
add
mov
mov
sar
lods
xchg
add
and
pop
sbb
ror
or
mov
pop
pop
imul
int3
sbb
stc
mov
jne
sbb
and
sahf
or
(bad)
ss
cmp
test
mul
pop
pcmpeqb
inc
mov
mov
test
push
je
stc
arpl
pop
push
aad
int3
test
xor
bnd
nop
scas
test
push
jne
mov
jo
push
sbb
adc
jns
or
aas
pop
movs
add
shl
inc
loope
xchg
inc
mov
lahf
mov
outs
and
adc
loope
sbb
add
(bad)
push
dec
mov
sub
ret
cmp
xlat
sar
lods
cdq
inc
scas
jbe
add
pop
mov
push
into
mov
je
test
shr
mov
adc
cmp
ror
push
push
fstp
jns
pushf
mov
icebp
ja
cmps
jns
sar
cmp
mov
push
sub
or
xor
aaa
test
add
call
jmp
icebp
stos
mov
mov
mov
lock
inc
inc
arpl
mov
into
ins
mov
cmp
mov
pop
iret
or
div
test
mov
mov
mov
pop
xor
xlat
dec
jb
mov
es
leave
mov
push
cwd
sbb
jbe
or
mov
push
and
ins
dec
shl
je
loope
pop
push
arpl
js
ror
cmp
and
bound
outs
test
test
mov
not
dec
xchg
and
sub
or
mov
or
push
jmp
test
mov
loopne
jno
aam
rcl
ss
inc
xor
mov
aas
setge
jl
or
imul
or
pop
pop
jmp
imul
xor
add
div
jl
pop
xchg
outs
(bad)
daa
and
das
pop
xchg
jl
cmp
enter
add
aad
dec
pop
jle
inc
aam
mov
lea
stc
pop
test
jge
push
mov
add
popf
push
inc
retf
fist
rcl
xchg
rol
int
lahf
and
int3
mov
mov
push
mov
add
mov
sbb
call
js
xchg
jp
cli
or
mov
xor
mov
aad
inc
clc
jno
sar
dec
xor
xchg
add
mov
retf
xchg
sti
stos
adc
mov
cmps
xor
fcomp
in
mov
dec
pop
add
dec
out
mov
push
(bad)
dec
jle
into
pop
inc
mov
xchg
es
mov
jp
pop
sbb
aam
xchg
das
pop
xor
cs
inc
pop
fwait
cmp
dec
jb
lahf
adc
sub
sub
ja
cmc
pusha
sub
pop
pop
pushf
iret
cmp
cmps
push
lods
jmp
or
xor
push
and
and
sub
das
imul
mov
mov
jo
sub
cdq
push
dec
loopne
rcr
xchg
jg
bound
cmp
mov
mov
jle
cld
les
sub
xor
leave
sub
cmp
adc
leave
sbb
cmc
mov
dec
xor
pop
push
and
mov
jmp
aas
iret
push
cmc
xchg
lock
clc
push
pop
or
add
lock
push
int3
ror
ret
dec
shr
and
leave
pop
inc
jo
in
xchg
cld
call
inc
or
test
mov
nop
(bad)
out
int3
mov
inc
jmp
inc
lahf
mov
push
xchg
dec
mov
scas
repnz
out
mov
gs
mov
fcom
sub
inc
or
sub
xor
repnz
or
jl
mov
lea
pop
out
jbe
push
adc
sub
leave
lods
or
mov
jae
xchg
mov
dec
lds
sti
jecxz
mov
mov
push
retf
mov
leave
ins
int3
jne
(bad)
call
movs
retf
push
xor
jp
mov
addr16
add
jl
iret
jmp
enter
push
les
outs
int3
shl
xor
and
test
pop
cmp
scas
or
shl
xor
scas
fmul
rcr
jp
dec
fldcw
test
idiv
cld
popf
xor
je
into
lods
aas
call
retf
out
xor
push
(bad)
sub
in
data16
sub
pop
aad
mov
lods
inc
sub
ins
mov
pop
fdivr
cs
jle
fwait
sbb
push
adc
shl
(bad)
pop
sub
aam
mov
lahf
mov
add
add
gs
bound
mov
hlt
retf
xor
and
xchg
jns
sbb
ins
sub
mov
cmp
(bad)
jle
inc
loope
cmp
jmp
and
cmp
cld
mov
pop
arpl
mov
mov
sub
inc
and
je
fidivr
repz
dec
call
mov
lods
push
jno
(bad)
push
ret
pop
sub
mov
push
(bad)
jns
fist
and
push
sbb
aaa
movs
mov
movs
pop
fstp
xor
cmp
mov
mov
jnp
or
es
mov
fstp
cmps
pop
pop
enter
push
jb
leave
inc
fild
push
xchg
mov
mov
sti
daa
(bad)
cwde
jge
xchg
sbb
nop
jge
dec
addr16
sub
pushf
jbe
dec
lods
scas
in
ja
lds
inc
jp
stos
and
test
aad
adc
sbb
out
test
push
ret
rcl
mov
jns
fs
into
in
loope
ret
stos
fs
jno
rcr
arpl
data16
out
push
adc
test
xchg
dec
movs
inc
(bad)
mov
stc
ins
daa
xor
je
(bad)
mov
sub
push
mov
inc
aam
add
add
xchg
dec
lds
or
mov
inc
jmp
lea
fnsave
inc
test
outs
and
call
push
outs
dec
fistp
cmp
mov
xchg
or
je
jb
xor
sub
je
addr16
test
or
test
je
mov
shr
aam
dec
movs
mov
mov
je
in
adc
adc
pop
test
add
sti
mov
sub
mov
inc
jno
jbe
cmp
lahf
test
add
mov
xchg
shl
ja
cdq
enter
lods
in
jne
lods
in
imul
ror
das
cdq
imul
fcom
jg
int
mov
mov
pop
push
sbb
leave
adc
sar
stos
ja
push
jbe
cmps
(bad)
pushf
mov
rol
push
cmps
les
sbb
mov
aas
loope
mov
pop
inc
popf
xor
call
mov
and
mov
sbb
jge
mov
sub
add
add
inc
cmp
ss
sub
xor
scas
pop
sti
inc
pop
mov
mov
in
pusha
push
cmp
xlat
loopne
dec
aad
jns
clc
push
dec
push
or
inc
mov
mov
loope
and
es
fnstenv
jne
pop
ins
sbb
and
push
aaa
xor
xor
(bad)
retf
adc
out
cmps
std
fucomi
jg
icebp
cs
je
outs
pop
sti
xchg
pop
push
add
enter
fs
mov
(bad)
mov
jnp
adc
fnop
cli
jecxz
in
and
jno
mov
loop
call
int3
jmp
popf
enter
retf
inc
pusha
mul
push
add
inc
xchg
add
pop
js
(bad)
fnsave
rol
ja
mov
push
mov
mov
je
popf
rcr
mov
jb
add
mov
adc
inc
nop
mov
xchg
(bad)
int3
mov
mov
inc
aaa
cwde
mov
push
dec
or
es
add
in
push
clc
cld
das
dec
and
aad
pop
mov
fmul
clc
mov
ins
int
fmul
cs
fbld
mov
jo
mov
mov
movsx
or
sub
mov
ins
mov
add
sub
hlt
and
stc
pop
pop
pop
jne
and
lds
aam
iret
mov
rsqrtps
retf
sti
pop
test
xchg
imul
xor
ficom
add
out
int
dec
scas
jnp
pop
push
lods
inc
and
or
out
push
into
popa
in
mov
sbb
or
jge
ds
mov
and
pop
dec
mov
xchg
cmc
mov
push
adc
mov
rol
mov
push
mov
or
nop
push
xchg
dec
and
pop
sub
or
call
jmp
addr16
jmp
sub
rcl
dec
push
sub
aam
or
pushf
fmul
jle
retf
add
mov
sub
adc
ficom
push
(bad)
xchg
sub
lds
lock
js
cmps
fistp
stos
mov
not
aas
mov
int
js
xchg
mov
push
adc
inc
jmp
xchg
inc
mov
out
les
leave
inc
out
imul
push
lea
(bad)
hlt
mov
in
mov
and
mov
cmp
mov
mov
repz
mov
mov
add
lods
lds
loopne
mov
(bad)
mov
aam
jge
scas
and
addr16
(bad)
dec
lods
pop
jnp
call
hlt
rol
mov
jecxz
jg
data16
ror
pushf
xchg
sub
add
rcr
je
xchg
fwait
icebp
mov
ins
add
fwait
retf
add
ror
cvtpi2ps
pop
jge
rcr
cdq
mov
(bad)
ror
pop
pop
dec
test
aad
lock
bswap
fld
sbb
pop
push
lahf
cmp
mov
aas
and
cs
cmps
pop
jbe
aam
xchg
or
adc
sbb
xor
adc
lock
sub
pop
popf
mov
ret
shr
jns
loope
fstp
sub
mov
push
dec
pusha
dec
inc
aas
mov
cmp
sbb
nop
cmp
push
imul
aaa
jg
ins
xchg
not
arpl
push
bound
fsub
jg
inc
ret
and
push
add
adc
mov
mov
mov
les
sub
adc
ds
in
xchg
nop
mov
ds
es
adc
lds
out
fistp
jmp
or
div
mov
dec
test
xlat
fild
es
push
mov
add
add
adc
push
xchg
or
mov
loopne
sbb
and
fisub
cmp
sbb
xchg
jmp
pop
sub
mov
mov
ins
(bad)
sub
mov
sub
cmp
xchg
mov
xchg
xlat
ins
aad
test
mov
retf
repz
adc
jp
sbb
add
(bad)
repz
cli
sbb
adc
pop
and
jmp
push
jb
mov
pop
repz
cli
sub
minps
shl
cs
xor
mov
adc
xchg
ja
mov
int3
fcompp
dec
mov
pop
xor
mov
push
dec
scas
and
mov
sub
mul
push
icebp
mov
movs
push
dec
fcmovb
sbb
dec
(bad)
retf
mov
sub
cdq
push
cwde
mov
stos
fmulp
cmp
pusha
in
or
jbe
(bad)
enter
cmp
and
rol
cmp
jbe
jns
test
in
push
dec
jo
aad
mov
repnz
(bad)
iret
int3
imul
fild
stc
mov
jo
outs
push
jbe
mov
sbb
xchg
xor
int
push
and
stos
cmp
push
repnz
test
pop
sbb
pop
sbb
out
xchg
js
das
popf
inc
loop
stos
les
add
add
adc
pop
sub
mov
bound
add
iret
or
jbe
dec
sahf
stos
sub
push
xor
rcl
ins
pop
inc
mov
and
icebp
in
xchg
daa
push
and
pop
out
addr16
jle
add
clc
jg
sub
test
(bad)
mov
out
jae
add
pushf
mov
in
stos
mov
or
xlat
add
xchg
xlat
mov
jne
sar
and
mov
into
cwde
add
dec
dec
mov
lods
add
lea
push
and
pusha
fwait
pop
jns
mov
dec
push
popf
mov
mov
mov
mov
popa
jnp
test
and
stos
cmps
cmp
mov
mov
pop
test
cwde
scas
test
int3
movs
test
popf
jo
inc
xchg
mov
lea
push
gs
ja
and
jo
popf
ins
je
sti
mov
push
test
stos
push
push
fdiv
push
xor
bound
push
bound
ret
jne
mov
inc
mov
sub
test
ja
(bad)
leave
lods
test
jle
and
dec
enter
test
add
call
push
xchg
int
ja
adc
xlat
cwde
push
cwde
int3
test
shr
shl
add
test
jecxz
lods
popa
test
rcl
test
pop
pop
test
jl
cmps
pop
inc
loop
ret
dec
call
movs
add
mov
cmp
pop
mov
sbb
or
mov
xchg
xlat
or
mov
(bad)
imul
xchg
jno
aas
repz
adc
mov
int3
lahf
xor
jl
fs
scas
out
cmp
jbe
mov
neg
adc
scas
mov
in
sub
mov
mov
cld
or
(bad)
push
ret
out
mov
fstp
inc
ds
cdq
ja
push
arpl
bound
jl
xchg
dec
xchg
addr16
icebp
cmp
lds
jbe
cmp
ins
cmp
imul
out
ror
add
pusha
rcr
push
lods
inc
jge
xchg
nop
pop
xchg
addr16
int3
bound
mov
jle
mov
(bad)
ja
cdq
adc
lahf
jae
pop
arpl
test
rcr
in
pop
jne
pop
popa
xchg
int3
cmp
mov
fiadd
lahf
sbb
mov
ins
mov
cdq
les
xchg
(bad)
inc
pop
stc
jbe
stos
mov
shr
inc
mov
inc
adc
mov
aam
popf
ins
fadd
or
lea
and
jbe
fs
adc
jmp
retf
and
push
xchg
hlt
push
test
mov
ja
mov
mov
imul
imul
ins
sub
cwde
inc
aaa
pop
shl
stos
push
mov
(bad)
gs
jl
addr16
repz
push
dec
ja
ins
dec
rcl
sbb
lea
lock
adc
ja
jns
jno
fwait
data16
lahf
mov
or
pop
lahf
mov
and
lahf
pop
pop
cmps
lahf
cmp
xchg
push
push
arpl
inc
sahf
cmc
imul
xchg
rcl
outs
aas
jns
push
lea
das
adc
rol
lock
jmp
sub
mov
sub
lods
xchg
fcmove
div
sbb
popa
sbb
mov
ja
cmp
dec
sub
mov
in
or
add
call
addr16
or
mov
daa
pop
mov
lea
and
mov
jnp
cmp
addr16
xchg
fisubr
adc
data16
xchg
inc
jl
aad
push
pusha
fld
sbb
imul
push
lea
arpl
mov
scas
jg
les
pop
mov
test
sbb
xor
jle
mov
push
inc
call
push
add
popa
pop
(bad)
ds
mov
fsub
inc
imul
mov
pop
mov
jne
jne
(bad)
ja
mov
test
cs
rol
cmp
es
mov
rcl
ins
cmp
shr
retf
jmp
fcmovne
push
call
arpl
inc
push
dec
sti
sub
scas
enter
mov
bound
xor
and
int
clc
push
sbb
lock
inc
cmp
js
aad
jg
fstp
dec
push
imul
call
push
lds
ja
scas
mov
jbe
and
jne
int3
sbb
inc
das
xchg
pushf
dec
popf
cwde
fisttp
mov
push
lea
test
jg
lds
and
jns
int
ins
push
add
je
add
test
js
jmp
push
jbe
lds
shl
mov
gs
pusha
popa
xchg
mov
jne
jns
push
jo
mov
inc
xor
pop
cmp
pop
sbb
xchg
fcmovb
pop
adc
sti
outs
or
out
dec
scas
movs
and
mov
pop
mov
retf
jne
xchg
adc
arpl
xor
mov
(bad)
retf
loop
mov
push
test
adc
push
sbb
adc
dec
adc
ja
add
test
adc
fstp
gs
push
shl
mov
adc
mov
jl
add
pop
imul
or
jle
out
mov
aas
mov
(bad)
(bad)
fisub
cmp
popf
or
pop
retf
lea
lods
(bad)
fwait
lods
data16
xchg
es
dec
call
repz
sahf
sbb
sbb
int3
cmp
cdq
mov
push
mov
mov
call
and
mov
and
xchg
in
ret
cmp
mov
jne
add
popf
lock
or
ret
pop
aam
inc
inc
jg
jo
adc
mov
xchg
into
cwde
nop
mov
(bad)
fld
sub
enter
aad
loopne
and
(bad)
cli
mov
cmp
clc
cmp
mov
sub
pop
mov
jg
pop
test
xor
add
fiadd
int
movs
iret
js
into
add
push
outs
cld
sbb
inc
int3
scas
out
mov
imul
jns
adc
popa
xchg
add
jmp
jb
sub
jno
mov
ficomp
sub
cwde
add
mov
lahf
xor
xchg
push
pop
scas
mov
(bad)
or
push
ffree
pop
adc
sub
sub
sub
sbb
push
lds
test
test
lock
xchg
(bad)
jbe
test
inc
inc
add
xchg
or
sbb
fs
ret
sbb
lea
push
or
xor
outs
dec
add
jge
jb
or
rcl
fadd
ins
ret
mov
pop
sub
mov
pushf
and
inc
xchg
mov
js
push
add
jg
push
mov
push
aad
mov
sbb
push
or
loope
push
mov
xchg
inc
xchg
loop
out
jb
jno
dec
hlt
ins
imul
in
or
movs
imul
add
dec
mov
jb
xlat
pop
aaa
and
neg
bound
sub
or
xchg
retf
mov
mov
jbe
add
pop
dec
out
inc
cmc
xlat
outs
not
mov
inc
jns
ins
pop
xchg
mov
movs
jns
mov
xchg
push
pop
not
push
mov
fimul
bound
ror
mov
mov
mov
test
nop
jnp
loop
in
mov
mov
push
jae
out
mov
inc
ins
enter
shr
mov
cmp
or
int3
pusha
loop
jne
pop
pushf
cmp
in
mov
pop
ret
jle
xchg
mov
mov
leave
aad
mov
icebp
or
imul
jmp
mov
into
or
mov
mov
push
xor
or
or
xor
push
in
cmp
or
fmul
ds
mov
ins
(bad)
jmp
sbb
xchg
call
mov
sbb
mov
inc
sub
and
inc
je
popf
or
adc
cmp
or
xlat
jae
ins
ins
in
mov
inc
cmp
test
lahf
cmp
xchg
add
push
xchg
(bad)
mov
inc
call
push
ret
mov
jno
xchg
inc
in
xchg
pusha
jmp
inc
jns
icebp
pop
(bad)
or
fistp
aam
inc
add
imul
aad
inc
leave
adc
ss
push
xlat
call
xor
add
and
mov
or
cmc
xor
int
dec
xor
pushf
ror
mov
and
xchg
mov
xchg
mov
sbb
arpl
leave
lods
fwait
nop
push
dec
lds
inc
imul
cmp
movs
dec
int3
pop
(bad)
aam
xchg
enter
in
pop
ja
xor
fstp
jecxz
xchg
ret
das
mov
adc
int3
rcr
add
(bad)
jg
push
inc
lds
fdiv
es
inc
jecxz
xchg
and
mov
jno
jnp
test
inc
(bad)
out
test
jae
push
in
pushw
leave
imul
ins
and
push
loope
xlat
jns
lds
jmp
push
ins
imul
jg
test
inc
pop
ins
push
xchg
stc
push
mov
sbb
push
or
sar
adc
mov
push
ficomp
pop
loop
lds
(bad)
mov
mov
rol
sbb
(bad)
jp
sub
fadd
icebp
pop
xchg
cmps
push
mov
pop
pop
in
aad
or
(bad)
repz
sbb
dec
and
mov
xor
adc
test
shl
cld
jmp
and
test
mov
mov
fisttp
cmp
inc
mov
xchg
mov
adc
js
jecxz
stos
int3
test
pop
pop
fprem
addps
cmps
cli
loop
aad
xchg
hlt
mov
enter
push
or
xor
and
mov
ror
mov
jmp
push
mov
sbb
xchg
inc
addr16
fwait
repz
(bad)
icebp
fistp
sbb
inc
push
ja
or
cs
or
mov
jle
mov
pop
inc
sti
pop
inc
push
inc
xchg
out
dec
test
test
or
xchg
jns
inc
mov
das
and
cmps
lock
dec
jno
enter
imul
add
rcl
(bad)
mov
push
mov
shl
outs
pop
mov
mov
loop
in
outs
lahf
cmp
jp
inc
and
adc
or
shl
add
cli
jg
js
pusha
xchg
mov
adc
jmp
cmp
neg
mov
fistp
sahf
mov
pop
jbe
mov
mov
xchg
test
inc
inc
lss
mov
and
test
inc
mov
retf
inc
mov
int3
jb
test
out
xchg
pop
sbb
sahf
inc
ror
es
mov
pop
push
push
and
dec
add
test
in
daa
std
mov
jne
mov
out
and
adc
mov
sub
cmp
jle
push
mov
sbb
lahf
pushf
fdiv
push
and
mov
sbb
fwait
pushf
scas
jmp
aam
xchg
test
sbb
mov
xchg
pop
pop
pop
adc
rcr
xlat
imul
mov
sbb
or
xor
or
(bad)
fld
or
add
xchg
popf
sbb
mov
aam
rol
mov
loope
pop
sbb
jno
cmp
sub
fisub
and
bound
push
pushf
fmul
int
retf
xor
enter
cmp
(bad)
and
jb
mov
lahf
pop
lods
das
scas
or
sub
jne
or
cmps
mov
mov
pop
(bad)
sbb
(bad)
jae
cmp
call
jecxz
shl
and
shl
adc
mov
arpl
ret
ins
rol
mov
int3
rol
(bad)
in
mov
repnz
gs
mov
in
jne
sub
push
scas
test
pop
in
jecxz
jmp
adc
adc
inc
scas
popf
pop
(bad)
sbb
pushf
lock
mov
sub
xchg
pop
rol
xlat
and
mov
xor
dec
test
sbb
shl
pop
ret
xchg
push
jle
stc
push
ret
mov
std
jg
std
aad
aad
jg
in
or
mov
leave
sbb
call
(bad)
imul
inc
jge
xor
dec
cmps
xchg
shl
into
bound
setp
xchg
ds
mov
xchg
mov
pop
pop
jb
mov
lea
dec
mov
mov
sub
retf
enter
rcr
pop
in
arpl
dec
mov
ja
lods
jae
mov
mov
neg
loopne
mov
loopne
lea
shr
push
ffree
mov
fsubr
cmp
push
lods
es
xor
mov
enter
push
sub
push
movs
jecxz
(bad)
cmp
mov
push
or
mov
js
test
fidivr
imul
pop
pusha
fistp
mov
lods
xchg
add
outs
nop
cli
jmp
pop
mov
fisub
adc
adc
push
movs
addr16
cmp
stos
fcom
out
dec
mov
jo
loop
jae
popf
retf
imul
or
xchg
shl
sahf
loopne
outs
rcr
movs
xor
xchg
sbb
outs
push
or
in
xlat
push
add
mov
or
lods
mov
sbb
jg
fld
(bad)
lock
rol
jmp
xor
les
add
cmp
xchg
ss
jmp
and
cwde
cmp
mov
(bad)
fmul
sub
out
jmp
add
sbb
mov
pushf
mov
xchg
add
gs
mov
mov
lock
repnz
and
xor
mov
fist
(bad)
mov
and
outs
ja
(bad)
fild
dec
pop
pop
mov
add
rcl
cmp
jo
loopne
call
int3
mov
mov
inc
out
ins
data16
jge
adc
xor
pop
je
xchg
jecxz
gs
mov
inc
jl
xchg
pusha
xchg
pop
mov
add
mov
jge
xchg
sub
push
jl
ins
mov
outs
and
sahf
ficom
mov
cmps
dec
push
mov
xchg
pop
les
push
pop
shl
(bad)
push
dec
pop
or
cmp
iret
aam
push
push
les
mov
pusha
jne
(bad)
sbb
aam
and
or
add
push
dec
dec
sub
xor
mov
dec
or
repz
out
push
lahf
pop
sar
push
pop
in
data16
popf
adc
inc
xchg
xchg
aam
cwde
inc
sub
es
add
sahf
sbb
fs
push
sub
fs
xor
xor
mov
push
(bad)
std
xor
mov
mov
push
les
inc
jmp
fldcw
sahf
inc
jnp
xor
rol
pushf
lahf
ins
xor
inc
inc
scas
push
sahf
dec
mov
lods
aas
movs
inc
jge
ror
fstp
mov
fisttp
pop
or
cmps
cdq
loopne
pop
cdq
adc
xchg
sub
pop
das
jge
out
mov
test
push
push
mov
push
pop
stc
dec
adc
jne
mov
cmp
or
imul
jne
das
sub
sbb
dec
cmp
pop
push
xor
lds
xchg
or
pusha
sub
int3
aaa
test
dec
xchg
fwait
mov
add
adc
aas
jo
adc
lock
inc
xlat
outs
inc
pusha
test
cli
cs
mov
in
and
or
loopne
ret
sub
call
add
inc
test
xor
aad
or
and
in
jnp
jge
sbb
xchg
sub
xor
scas
call
adc
outs
fcom
jne
imul
loopne
mov
jp
mov
mov
imul
addr16
lock
ret
inc
mov
xchg
sub
add
push
mov
push
jge
pop
lock
and
push
in
sub
or
lahf
and
or
shl
push
aad
shr
push
mov
xchg
call
lods
js
lods
mov
sbb
mov
aaa
fdiv
ret
push
gs
push
jno
or
das
mov
mov
pop
sbb
(bad)
call
sar
je
aad
ss
add
aam
mov
loopne
sar
in
repnz
imul
pop
rcr
bndstx
out
and
adc
lock
push
(bad)
pusha
xor
mov
jge
pop
test
jmp
or
loop
pop
cdq
lods
xlat
pop
mov
mov
cmp
mov
xchg
add
xchg
jnp
jl
sahf
inc
sub
imul
jmp
in
push
iret
clc
daa
dec
mov
inc
xchg
cmc
dec
mov
int
or
jge
sbb
movs
push
ins
cmp
or
jae
icebp
jg
(bad)
js
inc
(bad)
leave
mov
xchg
lock
or
stos
sub
fimul
pop
mul
dec
imul
dec
jbe
dec
xor
mov
jmp
movs
push
je
jnp
xchg
or
or
sub
nop
out
out
addr16
sbb
call
pop
pop
sbb
jmp
add
(bad)
push
mov
add
xor
movs
pop
mov
xor
jo
ror
pop
sbb
jge
xchg
add
or
cmp
dec
lds
cld
repnz
and
out
mov
mov
or
(bad)
or
dec
xchg
mov
and
les
jns
repnz
cdq
test
pop
jmp
jp
mov
call
daa
inc
sub
icebp
and
sub
rol
mov
in
fild
xor
cmps
jp
jne
in
rcr
add
cdq
rcl
add
add
or
jge
or
lahf
inc
loopne
xchg
icebp
sub
cs
enter
push
shr
pop
scas
adc
mov
lock
rcl
(bad)
and
imul
add
bnd
push
jbe
shr
int
int
mov
popf
xchg
lods
pop
movs
mov
clc
sbb
and
mov
push
jne
mov
pop
sub
sbb
adc
mov
shl
mov
xchg
not
fnstsw
pop
leave
popf
int
inc
adc
shl
xor
mov
in
(bad)
add
cli
test
jmp
pop
sbb
fimul
dec
xchg
adc
jp
inc
mov
out
imul
dec
arpl
jl
mov
ja
mov
push
cmc
mov
(bad)
retf
popa
sub
adc
dec
ror
outs
pop
inc
leave
sbb
mov
jns
lea
fcmovnu
mov
(bad)
jmp
mov
or
adc
call
cmp
mov
int3
je
hlt
xlat
add
sbb
sbb
jnp
jl
movs
push
movd
jno
mov
add
out
lods
test
rol
mov
or
dec
aaa
pusha
dec
mov
lods
clc
rol
add
add
xor
or
adc
in
pop
or
shl
cmp
cmp
mov
mov
es
jns
mov
pop
add
mov
pop
repnz
push
inc
(bad)
retf
mov
sbb
dec
fstp
and
inc
inc
cmp
sbb
jns
hlt
mov
adc
dec
lock
scas
(bad)
test
in
or
fnstsw
xchg
push
sbb
idiv
mov
mov
xor
or
xchg
mov
inc
call
ret
(bad)
add
daa
xchg
or
data16
cmps
adc
mov
mov
and
xchg
out
fprem
leave
xor
push
or
test
xchg
add
jg
inc
cmp
mov
mov
sbb
mov
pop
push
movs
and
div
ror
mov
add
aad
fdiv
aam
sbb
je
xor
push
lods
xchg
addr16
xor
fsubr
in
outs
in
mov
lahf
(bad)
je
xor
test
xchg
and
popf
bound
mov
push
aam
mov
push
jle
rol
cmc
sbb
je
pop
xchg
sbb
movs
push
mov
jp
daa
xlat
js
add
jge
addr16
outs
xor
xchg
jbe
dec
sbb
mov
in
and
mov
fadd
pop
adc
or
test
mov
add
outs
addr16
jge
pop
push
sbb
mov
pushf
aad
cmp
sar
outs
jns
dec
sub
daa
movs
xchg
(bad)
div
jnp
(bad)
inc
adc
sbb
mov
loop
lds
lahf
cmp
and
outs
retf
fwait
mov
xchg
icebp
xchg
ret
cmc
add
add
push
jl
data16
and
stos
sbb
adc
cdq
(bad)
call
imul
adc
push
test
cwde
mov
jmp
inc
push
mov
xor
iret
pop
sbb
add
push
or
arpl
and
add
adc
(bad)
mov
(bad)
dec
jmp
or
push
add
and
test
out
call
inc
jno
dec
and
dec
test
fisttp
stos
(bad)
mov
jge
jne
push
sbb
jmp
pop
sub
mov
repnz
jno
test
call
stc
mov
fcom
push
retf
and
fstp
fadd
mov
pushf
les
jb
adc
fdiv
push
out
jns
adc
sub
pop
cdq
cdq
out
repz
sbb
sub
sbb
dec
jb
xor
sub
cmp
fnstsw
dec
push
mov
cld
adc
addr16
or
adc
dec
jns
fadd
test
mov
cs
fcom
jnp
mov
jns
(bad)
popf
in
adc
out
lds
mov
sti
imul
mov
mov
mov
lea
sbb
jae
xchg
sub
and
clc
mov
rcl
cwde
jno
adc
adc
inc
mov
jns
xrelease
mov
sbb
ins
std
out
xchg
sub
sub
inc
dec
cmp
je
sahf
or
hlt
ins
jbe
push
or
int3
lds
out
hlt
int
sbb
xor
movs
in
and
js
push
and
sbb
rcr
jmp
cmc
rcr
dec
mov
rcl
or
pop
inc
cmp
xor
das
inc
in
inc
ror
xchg
or
div
nop
push
pop
mov
out
mov
(bad)
aad
adc
lea
cwde
dec
fadd
call
inc
sbb
out
fisub
dec
cmp
dec
lods
popf
sub
inc
mov
xchg
pusha
mov
repz
rcr
sub
jmp
jg
inc
je
mov
ret
and
mov
loopne
inc
ins
or
pop
jns
fcmove
jg
add
ja
push
adc
clc
(bad)
fstp
dec
add
jns
and
xor
sbb
ins
adc
sbb
(bad)
push
out
mov
add
imul
(bad)
mov
pop
inc
scas
push
mov
pusha
jbe
mov
mov
push
push
mov
mov
ins
scas
adc
push
mov
jmp
imul
std
mov
xor
pop
mov
movs
adc
dec
or
retf
mov
mov
retf
test
pop
ja
mov
and
xchg
cmps
jp
sbb
jle
xchg
push
dec
out
jne
jecxz
enter
arpl
cli
scas
mov
test
mov
test
pop
iret
mov
inc
lds
pop
jb
xchg
test
lds
mov
aad
je
cli
mov
mov
retf
mov
lods
xchg
nop
dec
xchg
jbe
sub
pop
jmp
add
jae
fcomp
call
pop
sbb
sahf
mov
xchg
nop
dec
lds
dec
dec
mov
dec
cdq
jbe
xchg
sub
fs
adc
and
leave
cmp
test
pop
cmps
setge
xchg
mov
push
mov
(bad)
data16
add
fwait
mov
dec
push
mov
ds
es
add
push
mov
mov
push
data16
clc
(bad)
call
jl
or
mov
js
mov
mov
add
lods
jg
jnp
stc
add
lds
mov
xor
pop
shl
mov
in
popa
(bad)
(bad)
js
mov
adc
les
sub
pusha
inc
xchg
fcomp
mov
xchg
(bad)
mov
mov
sbb
ror
adc
ins
mov
or
xor
cld
push
adc
inc
jecxz
push
sahf
addr16
outs
jmp
lahf
aad
add
ds
mov
test
push
hlt
mov
sub
jne
stos
sbb
jne
sar
out
adc
into
call
and
stc
jnp
ret
rcr
add
xchg
adc
stc
ds
shl
cmp
or
add
int
inc
add
pop
fdiv
fcomp
inc
inc
add
pop
xor
leave
in
jmp
mov
inc
rep
mov
icebp
dec
xchg
shl
push
xchg
mov
and
dec
in
cli
sti
(bad)
pop
xor
popf
inc
fst
sub
mov
mov
int
and
xchg
not
push
lds
mov
push
mov
jae
jo
popa
xor
jnp
mov
add
or
xor
js
test
arpl
adc
cmp
mov
sbb
inc
and
call
or
or
fcom
mov
mov
push
cld
pop
outs
int
jbe
fstp
daa
loope
mov
in
xchg
dec
inc
in
mov
push
jne
movs
call
mov
and
(bad)
push
fisttp
jno
sub
push
aam
adc
or
lea
mov
in
mov
stos
push
sti
pop
sahf
push
fdivr
push
xchg
push
je
das
cld
push
sub
mov
hlt
pop
sub
adc
pop
xchg
stc
lds
add
xchg
mov
(bad)
test
mov
or
pop
call
xchg
fcomp
and
xchg
sbb
inc
cwde
and
adc
mov
sbb
jne
jp
repz
jecxz
popf
int3
add
add
or
nop
jnp
pop
shl
mov
shl
push
adc
pop
pop
int3
and
mov
into
lods
sub
pop
and
inc
push
test
call
pop
push
cmps
cmc
push
cmps
test
xchg
push
mov
push
fist
fnstcw
pop
add
lods
or
sub
add
cmps
loop
jle
jg
pop
mov
je
or
lods
and
mov
call
push
or
mov
mov
mov
cmp
sub
arpl
pop
inc
jp
sbb
fadd
gs
ret
shr
mul
sbb
xchg
cwde
sbb
push
outs
push
mov
lods
test
movs
test
push
sbb
sub
ret
imul
cmp
ins
jle
jg
aam
cmc
repnz
ins
push
into
sbb
push
ins
icebp
add
rcr
daa
dec
mov
inc
cwde
out
popf
adc
es
mov
int3
ret
or
or
imul
shl
pop
push
loope
out
leave
popf
adc
clc
ins
in
adc
fld
cmp
ja
or
cs
cmp
sub
mov
pop
push
mov
std
call
or
adc
mov
ret
(bad)
jne
fsub
call
lea
cmp
jl
jns
push
pop
add
xchg
test
pop
(bad)
mov
(bad)
into
add
retf
ins
add
cwde
sbb
jmp
jb
pop
or
jmp
sub
loopne
xchg
push
inc
mov
mov
mov
rcr
xlat
push
hlt
movs
enter
mov
loopne
add
push
dec
sbb
mov
mov
outs
pop
cmps
xchg
retf
push
rol
pop
cwde
jo
xchg
inc
(bad)
daa
mov
sub
push
dec
jge
int3
dec
sbb
mov
and
pusha
js
or
mov
or
xor
lds
jnp
mov
push
mov
(bad)
popf
pop
imul
pop
mov
add
inc
movs
icebp
outs
jp
outs
jge
mov
mov
cdq
fimul
xchg
mul
xchg
loop
sub
dec
or
fwait
adc
push
sahf
add
(bad)
xor
mov
outs
jmp
cmp
out
cmps
mov
into
(bad)
retf
jns
cmc
cmp
add
or
jmp
jmp
(bad)
js
fwait
mov
xchg
rcl
je
in
sbb
(bad)
sbb
fsubr
or
mov
cld
pop
fild
icebp
jmp
in
fs
add
imul
pop
shl
mov
pop
lds
rol
fsubr
mov
sbb
ja
(bad)
pop
out
inc
sbb
add
jle
jbe
xlat
neg
mov
je
retf
out
cmps
dec
shl
rcl
jnp
push
add
jg
(bad)
stos
pop
and
xor
sti
xchg
and
jmp
aas
push
cmp
jmp
test
jns
mov
xchg
and
lods
mov
int
movs
adc
popf
int
mov
pop
sahf
mov
movs
adc
(bad)
dec
xchg
pusha
jne
cmp
pusha
push
nop
jmp
cmps
fild
(bad)
in
arpl
mov
lds
dec
gs
add
loope
test
ds
ret
stos
gs
pop
pop
shl
add
js
adc
sub
add
push
test
js
movs
(bad)
in
adc
sbb
cwde
idiv
mov
aaa
jns
int
adc
push
push
mov
aad
pushf
repnz
cmp
sbb
and
inc
sub
mov
add
gs
jno
sub
(bad)
mov
pop
or
lahf
sar
imul
ret
leave
push
mov
jmp
cmp
jns
rol
or
pop
jecxz
inc
jge
pop
lds
cmp
les
push
inc
addr16
pop
adc
popf
fldenv
loop
push
dec
mov
mov
dec
sub
mov
mov
sub
adc
pop
cli
test
mov
sar
and
lods
ins
xchg
push
test
jmp
movs
xor
enter
mov
sbb
aad
leave
sbb
sub
mov
aaa
test
inc
mov
mov
mov
xor
cwde
outs
push
scas
push
mov
cs
popa
jge
in
stc
mov
loope
shl
mov
(bad)
push
mov
ds
mov
pop
xchg
mov
pop
adc
lea
xchg
hlt
lea
sar
gs
mov
cmp
in
cmp
xchg
pop
push
rcl
or
dec
jle
sub
push
push
pop
adc
(bad)
dec
frstor
sbb
jno
xchg
dec
mov
sbb
in
dec
pop
push
test
lea
test
in
lahf
xchg
inc
arpl
push
movs
test
stos
popf
cld
pop
and
scas
inc
mov
movs
xor
push
push
mov
fist
xchg
nop
adc
sbb
xchg
or
adc
test
cmp
inc
pop
jmp
int3
mov
jns
xchg
shl
dec
inc
push
or
or
add
dec
cmp
lods
fidiv
push
cmp
cmp
ret
(bad)
sub
sahf
pop
in
push
dec
jno
test
lods
jmp
dec
lahf
dec
add
pop
(bad)
std
imul
repnz
leave
test
sub
(bad)
test
jmp
(bad)
ins
dec
mov
xlat
jge
or
add
into
test
pop
pop
mov
stc
(bad)
push
int
mov
(bad)
inc
into
call
addr16
inc
in
pop
out
xor
lods
jl
xor
ficomp
cmp
adc
pop
mov
mov
jbe
pop
xor
fsubr
xor
out
outs
xor
in
push
xchg
in
sub
outs
lahf
or
pop
mov
and
jge
in
jmp
daa
push
push
popf
xor
xchg
test
mov
cmp
daa
fist
push
xchg
push
pop
rol
outs
mov
call
lahf
mov
lods
mov
ins
(bad)
pop
sbb
jns
lods
aas
gs
sbb
adc
adc
cmp
movs
iret
popa
ror
push
mov
pop
pop
cdq
xlat
pop
push
call
pop
test
mov
xchg
fwait
pusha
fs
(bad)
je
jmp
bound
inc
push
ja
imul
(bad)
mov
adc
leave
sub
lods
xchg
ficomp
pop
inc
out
dec
jno
mov
bound
jl
scas
jns
test
cwde
lods
leave
or
push
sbb
xor
fbld
xchg
mov
sub
arpl
sub
jl
jbe
push
test
out
scas
jns
inc
imul
pop
outs
mov
test
sbb
test
sub
aas
pushf
jns
xor
dec
pop
rcl
jmp
pop
(bad)
fistp
aas
rcl
mov
add
loope
cmp
retf
add
gs
sbb
push
push
sub
jns
dec
push
jo
pop
jns
cmp
jbe
and
mov
out
sbb
cmps
sub
push
in
pop
mov
retf
add
sbb
mov
xchg
aad
sub
(bad)
(bad)
ds
retf
mov
repz
mov
mov
iret
or
loopne
mov
mov
mov
inc
and
lds
repz
lock
xchg
jne
aam
cmp
sahf
xor
les
sbb
sub
das
dec
in
fwait
clc
imul
sub
and
imul
and
pop
mov
xor
push
jle
and
sub
(bad)
cmp
pop
sbb
jae
sbb
imul
popf
dec
hlt
or
out
fs
push
jl
out
cld
adc
cmp
int
imul
icebp
or
inc
push
mov
pushf
xor
pop
cmp
sahf
ffree
cdq
pushf
ffreep
sbb
ins
pop
jecxz
push
scas
call
jmp
cmp
loop
imul
mov
push
lea
fld
dec
mov
mov
jp
sbb
outs
xchg
fnstsw
mov
push
inc
and
(bad)
shl
xchg
sbb
pop
jg
popf
repnz
push
ja
add
dec
jbe
pop
push
mov
pusha
in
mov
inc
pop
inc
test
lods
out
mov
or
pop
cmp
jae
jno
lea
ja
jne
mov
and
je
rcl
mov
int3
into
ret
js
test
pop
lods
rcr
movs
mov
or
mov
push
stc
cpuid
imul
cdq
sub
mov
and
push
push
adc
daa
push
xchg
sbb
xor
bound
out
pop
xor
or
push
adc
adc
sbb
xchg
call
adc
adc
jle
xchg
call
cmp
loopne
clc
and
inc
test
mov
lock
push
xor
pop
das
push
push
es
and
aam
xor
mov
iret
and
mov
push
in
mov
push
push
(bad)
push
adc
xchg
repz
dec
das
push
push
or
(bad)
adc
mov
pop
push
das
push
push
dec
push
adc
nop
mov
aam
xor
mov
push
or
sub
mov
dec
clc
and
inc
test
int3
mov
out
aam
xor
sbb
push
adc
xchg
int3
cmp
inc
mov
inc
jne
sbb
adc
test
loopne
clc
and
inc
test
mov
jmp
aam
xor
xor
push
push
xor
adc
mov
add
rol
jae
sbb
mov
xchg
sbb
sub
jae
sbb
push
clc
and
inc
test
int3
mov
shl
aam
xor
pop
das
push
push
cmp
daa
xchg
sub
ins
add
jl
jb
shr
pop
cmp
xchg
cmp
inc
loop
xor
shl
mov
adc
and
inc
test
in
stos
in
iret
xor
pop
das
push
push
(bad)
push
adc
daa
ins
sub
sahf
add
xor
mov
push
out
hlt
xor
das
push
push
add
adc
adc
mov
xchg
call
nop
sbb
cmp
or
pop
ds
mov
adc
dec
xor
call
push
adc
adc
pop
cmp
inc
dec
call
mov
push
loopne
clc
and
mov
push
in
fwait
xor
ret
push
mov
lods
pusha
movs
adc
sbb
adc
fucomi
std
cwd
ja
xchg
ins
mov
retf
push
fsubp
(bad)
xchg
fistp
xchg
pop
mov
mov
mov
mov
adc
fldcw
shr
gs
pop
movs
cmp
in
and
dec
ds
jne
dec
fwait
cmp
lds
mov
inc
adc
les
push
retf
loope
sbb
jae
push
stos
adc
iret
int
dec
cmp
cmps
ins
scas
jae
sub
fs
ret
bound
xchg
std
jns
push
push
sbb
mov
fs
adc
hlt
mov
mov
scas
mov
lods
inc
or
mov
or
test
scas
test
add
sub
push
fimul
mov
rcr
sbb
and
jbe
rcl
mov
jbe
ds
dec
cmp
cmp
push
add
ror
stos
mov
mov
ins
mov
cmp
lahf
add
hlt
jp
arpl
fs
loopne
add
push
adc
or
aaa
ins
out
lea
lods
sbb
xchg
inc
fsub
test
pop
test
mov
gs
mov
cmp
fcmovnb
gs
inc
stos
cmp
adc
inc
mov
inc
mov
int
rcr
pop
mov
add
pop
enter
cmp
lock
mov
(bad)
movs
and
iret
pop
call
ret
or
mov
addr16
xor
push
or
sbb
ja
add
inc
adc
jge
iret
retf
xor
xchg
cmp
(bad)
rol
out
loop
sbb
push
sub
sub
icebp
pop
xchg
mov
mov
mov
mov
popf
into
inc
popf
ja
mov
data16
fs
and
cmp
mov
pushf
jns
adc
in
cmp
aas
push
mov
dec
test
lods
aad
mov
sbb
aas
repnz
inc
adc
sub
xor
jl
inc
mov
pop
fdiv
pop
mov
mov
imul
cmp
or
data16
addr16
inc
mov
pop
out
stc
bound
dec
popf
sub
lock
aam
out
lahf
xor
and
mov
(bad)
loope
dec
dec
dec
push
or
pop
pusha
int3
hlt
add
push
std
push
test
out
cli
retf
fisub
fisttp
cmp
adc
jecxz
mov
inc
test
sar
push
dec
mov
pop
(bad)
outs
jo
inc
std
push
inc
add
add
and
pusha
out
je
dec
dec
adc
lods
push
xchg
mov
add
push
inc
lea
jp
or
into
int
mov
inc
ss
loope
outs
xchg
imul
jl
cmp
push
dec
push
pusha
imul
cli
aaa
arpl
push
aas
jne
mov
xor
dec
adc
ss
idiv
mov
aad
pop
jb
mov
mov
ins
(bad)
jne
xor
inc
cmps
and
in
xchg
sub
lods
rcl
pop
retf
std
push
cdq
push
jl
movs
jo
arpl
xchg
pop
xor
inc
xchg
mov
movs
mov
or
jno
lea
loop
mov
sub
ror
sti
mov
ffreep
test
je
jl
je
sub
sbb
mov
loope
(bad)
xor
fwait
and
out
mov
(bad)
data16
enter
sbb
pop
adc
pop
mov
push
dec
add
push
push
dec
push
mov
(bad)
mov
ins
sub
push
ret
mov
int3
cdq
jle
int
xchg
fstp
sub
xchg
mov
dec
sub
je
cmp
mov
xor
out
jne
mov
push
ret
mov
or
js
test
and
adc
add
mov
jecxz
dec
xor
jle
mov
in
stc
mov
xchg
and
arpl
out
test
js
hlt
xchg
jl
adc
lods
xchg
popf
or
shl
pop
jge
fldenv
jae
pop
or
sub
and
repz
mov
cli
sub
sub
xchg
adc
jae
in
cld
std
lock
test
fisttp
scas
pop
mov
xor
or
je
fsub
pop
pop
aam
nop
jl
add
(bad)
xchg
fstp
add
add
pop
test
and
icebp
inc
outs
adc
cmp
xchg
dec
push
sbb
repz
lock
ret
pop
jmp
push
sbb
xchg
sbb
or
mov
mov
retf
leave
push
pop
and
sbb
push
vshufps
dec
aad
fnstsw
or
ins
adc
out
pop
add
push
fmul
(bad)
aaa
mov
test
jmp
mov
mov
mov
jb
push
pop
out
cmp
mov
int
mov
sahf
addr16
shl
xchg
lods
loopne
sbb
cmp
jne
jle
sub
das
outs
mov
push
sub
cmp
ret
js
adc
jnp
push
cmp
in
jge
xor
retfw
je
call
mov
daa
call
bound
xlat
js
repnz
lods
mov
ret
aaa
push
adc
jns
sub
(bad)
dec
xchg
jp
pop
add
aas
or
mov
mov
ror
add
ss
imul
ret
inc
retf
outs
add
cmps
sub
loopne
sub
add
sbb
pop
mov
leave
fist
call
or
pop
dec
mov
sbb
cmps
aam
loope
jp
push
js
xor
sbb
les
push
mov
add
ret
push
test
push
or
cmp
daa
lahf
es
pop
adc
sbb
cdq
in
jecxz
mov
es
inc
pop
mov
pusha
or
and
int3
test
inc
out
xor
pop
pop
mov
jne
pop
xchg
sbb
sub
sbb
pop
mov
stos
or
sub
adc
ret
mov
or
cmp
push
mov
int3
jb
pop
mov
xchg
jmp
retf
sbb
stc
out
mov
push
mov
cld
test
gs
nop
out
adc
sub
jecxz
in
pop
sub
es
into
and
cmps
pop
xor
mov
dec
push
popf
sti
ror
int
mov
push
das
push
std
add
or
js
sbb
imul
cmp
dec
jo
cs
pop
lahf
mov
inc
jne
jecxz
(bad)
mov
sub
inc
xor
dec
loop
outs
fmul
adc
xchg
shl
sub
aaa
add
mov
sbb
int
inc
sub
jns
dec
ins
retf
adc
dec
lock
fnstsw
lods
xchg
rcl
mov
shl
push
push
jecxz
(bad)
aad
into
sbb
into
pop
sub
imul
or
jo
pop
ins
cmc
jbe
pop
fisubr
inc
jne
(bad)
fs
pop
dec
and
mov
aad
nop
push
pop
xlat
xor
fadd
mov
fcomip
sbb
mov
xchg
mov
test
jmp
add
mov
jns
stc
pop
data16
mov
js
test
retf
cmp
ds
jb
jle
mov
sbb
mov
jp
and
mov
pusha
sbb
bound
xchg
cwde
fdivr
xchg
test
int
push
inc
push
test
test
int
int3
es
inc
and
je
mov
sub
xchg
(bad)
fistp
inc
fwait
(bad)
aad
or
xchg
sub
jmp
rcr
jmp
xchg
xchg
popa
aam
(bad)
lds
jl
jle
dec
xor
and
pushf
cmp
xchg
or
and
imul
mov
inc
(bad)
jae
mov
int
cmps
and
ja
call
gs
sti
push
fmul
retf
test
cmp
dec
imul
add
pop
add
int
ja
daa
mov
lods
pop
xchg
adc
adc
imul
cli
pop
pusha
lea
dec
mov
jmp
cmp
jbe
push
or
(bad)
repnz
ins
pushf
mov
ficomp
pop
adc
mov
mov
xchg
in
pusha
pop
sar
lahf
jmp
gs
mov
ror
int3
jp
sbb
aas
jge
into
dec
aas
mov
lahf
dec
outs
pop
cs
jae
adc
mov
sbb
dec
(bad)
retf
xchg
out
adc
jmp
inc
jp
lahf
or
push
sahf
and
imul
xchg
lds
pop
in
xor
or
mov
scas
ins
pop
jne
xchg
rol
sbb
mov
popf
mov
xor
test
shr
loop
jb
test
cli
jb
xchg
pop
mov
mov
sub
aad
and
sub
(bad)
addr16
outs
sub
clc
movs
sbb
mov
sbb
dec
hlt
ds
inc
mov
mov
mov
arpl
daa
sahf
xor
xchg
xlat
in
mov
ucomiss
pop
into
repz
xor
inc
in
cmp
xchg
jp
pushf
inc
cs
sbb
jge
aas
push
imul
dec
jmp
add
inc
mov
pushf
pop
aas
mov
sub
jmp
pop
mov
add
cmp
or
test
mov
sbb
loopne
pop
in
pop
mov
enter
mov
cmp
pop
xchg
mov
stc
push
cli
cmp
jb
jno
fst
mov
imul
cwde
rol
pop
push
mov
mov
rol
jmp
(bad)
xor
fst
mov
nop
clc
xor
cmp
fst
mov
std
push
scas
ror
aad
fld
mov
cmp
mov
repnz
test
adc
add
std
stos
add
imul
(bad)
std
fisttp
push
outs
push
xchg
mov
cld
fild
dec
jmp
sbb
xchg
add
test
int
dec
add
(bad)
jb
aad
mov
int
rol
addr16
mov
mov
stc
add
int3
ins
out
stos
cmc
inc
sti
mov
dec
imul
push
push
or
pop
mov
data16
xor
movs
outs
shl
(bad)
xchg
mov
jno
(bad)
cmp
pop
call
shl
dec
jne
and
cdq
scas
popa
outs
fwait
dec
pop
pop
cmp
movs
mov
mov
jmp
inc
mov
(bad)
mov
(bad)
jns
mov
sahf
mov
arpl
loop
mov
or
sbb
mov
add
(bad)
les
cmps
jae
adc
shr
enter
mov
xor
rol
test
adc
xchg
jb
mov
js
popf
xor
ins
push
das
pop
nop
out
push
lock
mov
lock
mov
add
stos
in
or
or
retf
pop
xchg
pop
movs
mov
push
mov
sub
(bad)
push
jle
push
pop
or
push
fwait
outs
mov
xor
rcl
xor
test
mov
sub
pusha
shl
aaa
ins
aam
(bad)
out
mov
pop
imul
in
bound
xchg
or
and
adc
fnstcw
(bad)
out
mov
mov
outs
mov
into
push
sbb
std
sbb
sar
mov
fidiv
popa
mov
fldcw
dec
push
ja
(bad)
xchg
aad
cmc
ret
ja
in
push
xchg
cmp
cmp
xchg
fisubr
outs
or
into
or
out
mov
or
push
out
adc
jnp
jle
sub
pop
fldenv
xchg
leave
xchg
imul
pop
xlat
inc
pop
call
addr16
pop
test
idiv
push
sub
in
xchg
je
ins
fs
lods
js
or
push
(bad)
add
addr16
loop
pop
jbe
jae
mov
mov
and
ins
xchg
shl
clc
xor
jne
ja
adc
mov
push
psrad
inc
adc
in
ins
xchg
stos
shl
and
rol
jbe
fsub
loopne
push
arpl
cmp
mov
sub
xchg
fbld
addr16
ins
les
jmp
mov
int3
sbb
ins
mov
sbb
popf
pushf
mov
push
call
adc
pop
adc
int3
icebp
mov
push
rcr
mov
cwde
fld
jne
adc
bound
cmp
mov
mov
cli
pop
je
fdivr
dec
jmp
cmp
int
and
sbb
mov
out
gs
jae
mov
scas
fcom
daa
sub
sub
clc
mov
lea
or
dec
xchg
ds
std
mov
aad
jns
shr
adc
xor
pop
loope
fsub
std
clc
mov
mov
mov
or
lahf
test
or
adc
daa
xchg
je
jp
adc
jne
sub
adc
xchg
stc
pushf
ret
push
jg
outs
lea
mov
nop
mov
dec
addr16
aam
cmps
jns
dec
call
mov
cdq
mov
dec
stos
sbb
cmps
shr
(bad)
mov
pop
xlat
xlat
pop
push
and
jne
xchg
scas
imul
jl
retf
pop
scas
cmp
jne
mov
(bad)
retf
aas
addr16
pop
sbb
arpl
adc
pop
mov
pop
or
jp
xchg
cdq
add
pop
ss
sbb
pop
jo
outs
data16
or
pcmpgtb
lods
in
inc
outs
pop
pushf
xchg
sub
fist
or
test
bound
cmc
mov
aad
lds
and
loope
xor
data16
into
pop
int3
mov
jge
mov
add
in
inc
push
imul
mov
push
dec
sub
stos
outs
xlat
ja
xlat
test
sbb
test
add
inc
repz
or
sub
(bad)
movs
mov
mov
in
inc
cmp
xlat
xchg
test
sbb
inc
in
arpl
inc
cmp
dec
(bad)
imul
mov
pop
popa
mov
jns
push
sbb
popf
dec
and
call
and
push
out
stc
das
lods
xchg
adc
rol
mov
stc
mov
xchg
xchg
sbb
mov
xchg
scas
test
shr
je
sahf
push
xchg
jns
xchg
mov
stos
or
mov
adc
fmul
pop
sbb
mov
xlat
jl
mov
sub
cli
xchg
sti
sbb
push
xchg
pop
xchg
lock
gs
pop
pop
repnz
adc
xchg
call
in
popf
fs
and
add
rcl
iret
sbb
ja
add
dec
cmps
fnstenv
fstp
popf
sbb
xor
push
dec
fdivr
and
mov
mov
jns
sbb
jbe
jae
es
test
mov
lods
je
mov
mov
hlt
sub
push
mov
popf
sub
or
xor
(bad)
inc
sbb
or
fbstp
das
movs
es
je
neg
in
jno
std
mov
sub
and
sbb
test
shr
push
sub
ins
or
iret
setno
xchg
pop
and
dec
and
rcl
jo
pop
mov
and
iret
fistp
jg
out
mov
icebp
dec
mov
daa
xlat
push
dec
mov
aad
mov
sbb
bswap
lock
mov
fnstsw
popf
sti
mov
mov
stos
xor
rcl
add
mov
sbb
js
cmps
mov
jg
das
ja
or
mov
fisub
mov
int
jae
(bad)
fidiv
das
(bad)
inc
fwait
mov
jns
adc
xor
call
in
xchg
fwait
push
jns
stos
(bad)
iret
jae
sub
in
xchg
jne
sbb
rcr
int
ins
sbb
mov
jne
ins
cmp
xor
lock
xor
jae
adc
daa
mov
xchg
dec
(bad)
les
fstp
jbe
mov
cdq
ins
or
lods
je
cli
sub
mov
stos
and
xchg
xchg
jo
call
into
sar
call
cmp
mov
dec
or
popf
mov
je
jmp
fwait
sahf
vhsubpd
cmps
mov
jne
xchg
or
xor
cld
push
imul
cmc
shr
cld
cmp
scas
adc
retf
retf
pop
loope
sbb
sub
(bad)
adc
scas
jge
ror
aaa
mov
sbb
fistp
adc
push
add
or
dec
add
data16
or
arpl
(bad)
jae
(bad)
in
in
(bad)
or
dec
jmp
loop
test
es
xchg
inc
sbb
lea
xor
(bad)
dec
je
enter
or
jg
mov
cwde
call
or
mov
cmps
jae
rcl
out
shr
enterw
dec
jecxz
ror
rcl
(bad)
lods
inc
test
je
shr
stc
xor
fdiv
ror
les
cmp
mov
add
xchg
shr
nop
cmp
mov
mov
je
int3
pop
outs
inc
es
jl
mov
out
jp
add
push
pusha
icebp
inc
int
push
or
or
pop
imul
jle
jno
inc
or
xor
ins
(bad)
aas
xor
ror
inc
jns
xchg
pop
int3
out
call
adc
inc
cmp
sbb
cmp
push
jmp
daa
mov
xchg
and
push
sbb
and
pop
inc
xchg
es
retf
inc
(bad)
jge
stos
cmp
ret
cmps
jae
ins
out
cli
inc
clc
lea
(bad)
jl
in
adc
icebp
add
imul
cmp
fst
add
shl
cmp
and
inc
stc
je
aas
loope
cmp
jecxz
cmp
fisubr
adc
jle
pop
mov
jne
sbb
mov
or
sbb
xchg
lods
int
cmps
pop
leave
mov
cmp
out
mov
(bad)
mov
or
xor
cmc
inc
test
pop
sbb
shl
xchg
test
rcr
push
push
lds
pop
pop
adc
sub
push
fwait
cmp
and
dec
sbb
cmps
push
das
aaa
jl
cs
xor
leave
inc
adc
sbb
or
dec
pop
mov
arpl
or
cmps
loop
test
and
inc
add
mov
dec
mov
jg
(bad)
mov
mov
popa
fucom
(bad)
lods
xchg
jge
nop
je
sahf
test
xchg
js
push
xchg
and
push
cmps
jne
ret
sub
(bad)
add
mov
sub
mov
sbb
cmps
mov
cmps
mul
jp
add
out
mov
and
shl
jo
pop
cmp
add
xor
out
xchg
add
jle
pop
or
(bad)
jmp
and
jl
popf
mov
test
mov
jge
pop
movs
shl
mov
std
fmul
mov
add
imul
xchg
aam
mov
mov
je
pop
movs
pop
popa
mov
jnp
mov
mov
int
lahf
jmp
inc
imul
js
bound
out
jge
int3
pusha
xor
mov
cmp
cmp
dec
push
sub
movs
xchg
(bad)
hlt
push
je
je
bound
mov
int3
outs
pusha
pop
mov
xor
jecxz
mov
add
inc
repnz
mov
mov
bound
dec
xchg
dec
mov
addr16
jno
xchg
pop
mov
pop
enter
or
jge
cmps
cs
mov
dec
sub
pop
adc
int3
arpl
inc
adc
mov
xor
pusha
rol
addr16
mov
xchg
jp
call
sbb
test
xchg
jg
retf
xchg
ror
mov
add
push
lea
outs
jns
hlt
jnp
je
sub
pop
sahf
cmp
scas
and
arpl
mov
scas
adc
pop
adc
mov
enter
jbe
xor
pop
lahf
fiadd
jecxz
cld
cmp
mov
mov
xchg
pop
jle
lds
mov
outs
jbe
aas
arpl
push
ret
out
jmp
sbb
inc
or
sbb
cmp
xchg
fstp
cmp
loop
jae
gs
mov
fimul
push
stos
push
ins
out
xchg
cmp
mov
and
fs
test
sbb
test
push
push
arpl
pop
sub
fnstcw
stc
add
dec
scas
scas
aas
lods
mov
(bad)
arpl
lock
jmp
ins
daa
fist
call
jns
or
lds
(bad)
and
sbb
div
js
dec
inc
sub
(bad)
movups
sahf
xchg
jb
pusha
int
jl
scas
add
mov
xchg
ret
inc
nop
js
shr
loop
loope
jmp
div
cmps
inc
aam
aad
mov
lahf
daa
mov
stos
imul
or
adc
div
jb
sub
push
outs
(bad)
fst
or
shr
adc
add
jb
punpckldq
ins
pop
add
add
nop
out
adc
mov
xor
rol
mov
push
inc
mov
inc
gs
bound
cli
mul
adc
cmp
and
pop
sub
jle
push
cmp
push
cmp
aas
(bad)
cmp
mov
jns
loope
nop
mov
mov
cmc
or
ja
outs
in
push
xchg
int3
and
xchg
imul
retf
push
mov
jecxz
fistp
cs
shl
adc
test
pop
pop
(bad)
imul
lods
ret
clc
mov
fisubr
fistp
mov
aad
test
iret
sub
mov
mov
jmp
rcl
pop
ins
gs
jo
jmp
mov
sahf
push
or
test
fwait
mov
enter
pop
rcr
movs
mov
inc
popf
ds
jecxz
test
rcl
aam
cld
nop
mov
test
addr16
xor
jge
xor
sbb
adc
mov
xor
lods
cmp
je
jp
nop
cmp
jnp
les
xchg
retf
push
dec
jb
enter
xor
ins
bound
mov
addr16
mov
jl
sbb
je
fadd
mov
imul
(bad)
sbb
popf
imul
pushf
daa
test
vandpd
out
in
pop
outs
mov
cdq
push
test
push
push
test
inc
sbb
fnstenv
test
dec
cmp
lahf
push
test
addr16
dec
mov
pop
fbld
jge
dec
xor
(bad)
pusha
and
test
rol
sbb
lea
xchg
xchg
mov
sbb
adc
cmp
mov
and
fisttp
enter
adc
fistp
fstp
push
pop
jno
(bad)
je
cmps
cmp
fbstp
jl
data16
cmps
sti
leave
add
clc
outs
dec
test
je
sbb
not
cld
je
in
shl
jnp
outs
sbb
leave
lea
xchg
sub
mov
inc
adc
pop
jp
int3
enter
jmp
iret
in
push
sahf
dec
out
mov
imul
shl
enter
pusha
data16
cmp
add
add
push
pusha
mov
jb
addr16
inc
rol
lea
std
adc
cmp
adc
(bad)
fisub
add
les
push
mov
inc
gs
into
cli
xchg
or
rol
cmc
mov
inc
jl
mov
out
xor
pop
nop
jg
js
add
je
bound
(bad)
mov
dec
imul
sbb
mov
mov
xchg
adc
cmc
mov
gs
mov
pop
sbb
cmp
fwait
xor
and
adc
mov
push
mov
inc
push
pop
(bad)
jo
and
arpl
fstp
mov
(bad)
enter
sub
mov
sub
mov
(bad)
sbb
add
daa
xchg
xor
dec
inc
nop
push
mov
mov
sbb
imul
aad
dec
cwde
jae
jl
jle
aad
cwde
add
ret
mov
and
dec
scas
pop
mov
mov
jo
add
repz
mov
popf
test
push
lea
fwait
dec
fiadd
jns
cmp
mov
aas
jae
inc
imul
imul
fs
pop
lea
mov
shr
repnz
dec
jb
ins
cmp
ins
les
pop
mov
fnstcw
fs
mov
mov
into
call
add
sub
inc
repz
xlat
ins
bound
stc
lds
mov
push
and
adc
test
enter
mov
dec
xchg
test
jg
stos
pop
mov
test
xchg
mov
adc
sahf
or
add
call
rol
jae
and
cmp
or
lock
mov
push
imul
mov
arpl
push
pop
popa
cli
jmp
mov
call
loope
retf
xchg
jns
add
pop
push
bound
cmp
jnp
push
add
(bad)
arpl
xchg
mov
jnp
xchg
push
call
in
mov
lahf
lds
sub
into
outs
mov
push
fld
cmps
pop
(bad)
cmp
cmps
push
xor
fistp
mov
fld
sahf
mov
pusha
pop
ins
jge
jg
out
out
lods
push
sbb
mov
jge
adc
and
out
jnp
adc
scas
jns
mov
es
jp
sub
rol
popa
pop
das
cmp
clc
bound
out
stc
repz
jge
mov
cmp
shl
cmp
mov
mov
dec
(bad)
xor
mov
mov
call
xor
inc
dec
ror
mov
ins
dec
data16
(bad)
mov
pop
xchg
inc
cmp
jns
and
in
mov
push
movs
sar
cmp
stos
jge
popa
into
xor
push
mov
int3
retf
hlt
ins
mov
jb
mov
addr16
sbb
cmps
dec
pop
jae
int3
into
xchg
mov
push
push
pusha
jge
(bad)
pop
je
mov
jo
arpl
jno
cmp
out
(bad)
pop
mov
sub
pop
mov
xchg
and
inc
sbb
aaa
jbe
shl
aam
popf
and
addr16
cmp
aam
int
push
xchg
jmp
setp
mov
mov
mov
into
push
mov
xchg
cmp
daa
sub
in
cld
cwde
jl
fwait
push
pop
jae
xor
xchg
add
fwait
xchg
push
jne
out
push
lods
or
pop
ror
adc
ins
inc
pop
adc
mov
arpl
xchg
dec
pusha
retf
test
les
data16
call
popa
xchg
(bad)
fist
mov
pop
adc
xchg
call
push
int3
cmp
fdiv
sub
test
and
cmp
or
aam
sahf
jmp
or
push
bound
ficom
add
jecxz
sub
push
sar
and
add
pop
movs
popf
repz
pop
jle
mov
lds
sbb
cmp
cmps
xor
sbb
scas
mov
sahf
or
arpl
xor
mov
mov
sbb
popf
xchg
mov
jl
push
jne
jle
jg
cmp
popa
popf
xchg
lods
dec
repnz
lods
mov
push
rcr
jne
mov
jg
mov
jno
push
dec
or
les
test
xlat
mov
fsubr
mov
enter
inc
mov
je
int3
sub
xchg
fcom
das
into
push
je
enter
jnp
enter
test
lods
jmp
addr16
mov
mov
cmc
push
add
jb
inc
fnstcw
fld
cdq
pop
mov
fmul
imul
int
jmp
pop
je
das
(bad)
je
cmp
xor
xor
int
adc
adc
push
sbb
imul
jo
fsub
push
std
or
push
hlt
das
retf
xor
or
mov
xor
(bad)
(bad)
popf
mov
xchg
fcomp
jb
push
(bad)
sub
lods
xor
stos
aam
xor
jae
pop
sbb
mov
dec
lea
jmp
or
jl
adc
retf
sar
jg
pop
popf
sbb
int
aaa
inc
or
cmp
xlat
xlat
popf
mov
jae
xchg
(bad)
jl
jo
xor
iret
jbe
jne
inc
test
mov
sbb
sbb
cdq
nop
push
pop
jne
adc
add
test
mov
and
retf
neg
adc
jl
cmps
mov
adc
inc
jge
imul
add
or
or
mov
out
dec
scas
das
stos
cli
sti
push
(bad)
push
push
mov
data16
fstp
ror
out
cmps
jnp
cdq
push
int
jns
sbb
lods
outs
test
inc
pop
mov
mov
mov
sub
add
cmc
inc
inc
pushf
jle
mov
adc
pop
jl
enter
add
cld
xchg
jae
shl
test
scas
mov
mov
dec
jne
outs
clc
call
les
cmp
outs
daa
mov
cwde
int
in
mov
leave
cmps
mov
loope
or
inc
outs
sub
in
js
test
and
inc
sbb
xchg
js
dec
push
sbb
inc
cmp
outs
xlat
xlat
sub
sub
mov
jbe
ror
pop
push
ins
cmp
and
xchg
push
pop
or
or
dec
popf
xor
test
xchg
test
xchg
mov
(bad)
int
dec
out
xrelease
rol
rcl
cmp
(bad)
fwait
mov
lods
cdq
or
ins
adc
and
fst
push
xor
xor
outs
sub
mov
sbb
jns
add
mov
ss
push
xchg
sub
inc
stos
jnp
aad
and
mov
test
xchg
mov
jle
dec
cmps
retf
mov
dec
jae
and
jl
or
push
aaa
push
add
fbld
in
cmp
cmp
hlt
je
mov
movs
jb
js
pop
mov
sti
dec
sub
leave
jmp
dec
mov
sar
xor
test
mov
pop
xchg
jmp
cmc
(bad)
repnz
dec
int
cdq
sahf
lock
add
int3
xchg
xchg
mov
cmps
push
push
(bad)
call
loopne
pushf
je
jp
test
jno
lea
imul
icebp
and
jbe
mov
xor
and
cmp
(bad)
pop
and
jp
mov
mov
push
xchg
xor
jecxz
mov
mov
mov
pushf
fidiv
aam
or
xchg
imul
mov
jecxz
in
jge
xchg
mov
jo
jg
ins
test
sub
je
jl
push
sbb
movs
xlat
sbb
mov
jle
retf
enter
in
or
ins
lods
test
ret
mov
aam
adc
push
imul
jno
sub
dec
rol
add
mov
and
inc
mov
xlat
gs
xor
cmps
into
add
sub
sub
icebp
int
add
fcomp
cli
int
xchg
jno
sbb
mov
push
sub
and
enter
xor
sub
mov
gs
movs
jno
inc
push
int3
push
mov
pop
sub
add
push
ins
movs
cmps
jg
enter
sub
jb
shl
(bad)
mov
std
arpl
movs
xor
jnp
mov
jbe
jp
mov
test
(bad)
into
mov
sahf
rcl
xor
inc
sbb
push
mov
sbb
push
xchg
push
xor
mov
jno
jo
mov
jle
mov
mov
fmul
or
mov
gs
xor
push
scas
daa
sub
sub
int
jecxz
leave
sbb
loopne
shl
dec
test
gs
sub
push
mov
data16
(bad)
dec
pop
push
adc
aas
repz
pop
fwait
jmp
ror
or
push
(bad)
cmps
jno
lea
xlat
push
xchg
mov
push
imul
or
pushf
jno
mov
fsub
mov
push
dec
test
retf
adc
lea
int3
pushf
xchg
mov
mov
sbb
mov
inc
xchg
add
push
mov
pop
pushf
(bad)
push
jp
jbe
dec
cwde
sub
push
jae
call
idiv
mov
maxps
push
jns
lea
mov
cmp
aas
push
clc
fidiv
jg
sbb
fisub
stc
loop
jnp
jbe
mov
push
mov
pop
paddusw
int3
sar
int3
out
cmps
jp
adc
repnz
adc
fidiv
or
inc
jno
adc
(bad)
js
cmp
lds
sub
jmp
jle
popf
push
mov
fs
sahf
jb
xchg
sahf
pop
inc
inc
in
jg
cmp
cdq
into
lods
mov
push
sub
dec
test
call
out
push
push
lock
cmps
sbb
adc
xchg
fcom
in
xor
push
je
lahf
mov
stos
mov
fisttp
mov
lods
retf
test
dec
add
ret
add
and
push
test
dec
mov
xchg
add
(bad)
sti
add
ret
pop
sbb
cli
dec
sub
enter
cmp
sahf
call
fldenv
sbb
daa
dec
xchg
jbe
cmps
lods
aas
fcmovbe
pop
mov
inc
jle
dec
dec
fs
ret
rcr
ins
mov
rol
mov
xchg
xchg
retf
int
js
movs
lods
popf
rcl
inc
cs
push
mov
(bad)
(bad)
mov
mov
pop
add
neg
jle
cmc
pusha
mov
mov
push
in
mov
inc
cli
jae
dec
fsubr
pop
pop
aam
les
jle
dec
sbb
enter
dec
mov
lods
pop
adc
rcr
mov
jnp
shl
shl
gs
in
test
adc
xchg
and
push
imul
test
mov
shl
movs
push
loopne
pop
pop
push
test
outs
jns
pop
mov
lahf
(bad)
sbb
leave
fstp
xchg
mov
sub
test
sub
in
retf
xor
pop
mov
fbld
mov
fwait
aaa
test
loop
pop
jp
pushf
imul
fist
adc
mov
stos
mov
movs
(bad)
xor
jnp
add
mov
push
scas
push
fisubr
or
xchg
fld
iret
out
leave
(bad)
loope
fwait
pop
js
popa
cmps
in
xchg
je
mov
popa
pop
stos
adc
stos
or
jmp
adc
pop
mov
std
cli
outs
test
pop
cmp
pop
sbb
dec
mov
or
xchg
cmc
jge
ins
inc
lds
scas
sub
mov
test
pop
lods
jns
add
pop
cmp
mov
push
loopne
mov
fwait
js
enter
ja
mov
push
jbe
push
scas
pop
sub
mov
or
repz
je
cdq
jo
mov
ret
mov
push
jp
dec
dec
cmps
jmp
ins
gs
out
imul
inc
test
ds
xor
test
pop
xchg
inc
and
cmps
fst
(bad)
mov
mov
and
jbe
pop
inc
mov
mov
js
retf
ja
(bad)
loopne
and
push
sub
sbb
das
sbb
push
mov
or
in
mov
js
lahf
cwde
mov
cwde
test
into
inc
jo
inc
sbb
fs
mov
jb
push
jb
enter
jmp
jno
adc
mov
mov
sbb
hlt
inc
push
aad
xchg
push
and
sbb
ffreep
sub
xchg
outs
leave
test
add
mov
out
cmp
sbb
mov
ror
cmp
add
pusha
call
pop
add
fst
push
adc
loopne
nop
jno
test
sar
ret
sbb
fdivr
mov
sub
push
sub
xchg
pushf
add
loopne
cwde
int3
imul
sub
ds
xor
xor
mov
adc
outs
push
movs
out
mov
mov
fcomp
xchg
lods
sub
add
jl
mov
mov
ins
arpl
(bad)
jo
jmp
sbb
mov
mov
jp
sbb
push
cmp
lods
call
cmc
push
pushf
push
sahf
mov
or
xchg
mov
and
and
sbb
cmps
mov
repnz
test
sbb
nop
xchg
jmp
fisttp
mov
adc
iret
or
adc
push
in
jns
push
iret
clc
(bad)
aas
xor
push
pusha
sub
jle
pop
inc
jns
and
pusha
lods
ja
mov
out
loope
pop
cmp
cs
and
sub
or
mov
add
mov
test
cs
not
and
adc
icebp
std
cmp
aad
mov
pusha
xor
sub
ins
push
mov
sub
sub
cmp
mov
cmp
sub
sub
jle
stos
dec
sub
and
or
(bad)
out
pop
int
cwde
and
or
xchg
sub
test
mov
addr16
dec
mov
jb
adc
xchg
cmp
mov
int
mov
fistp
fs
arpl
into
and
dec
mov
cmp
ret
or
pusha
jbe
gs
mov
je
inc
xchg
xor
retf
mov
outs
xchg
aam
mov
popa
into
inc
mov
push
ds
dec
mov
and
lds
pop
test
or
(bad)
xor
sbb
push
dec
push
loop
xchg
cwde
mov
dec
cmp
add
out
es
inc
xor
jl
mov
adc
js
aas
js
jmp
into
fadd
fcomp
mov
fcom
pop
xchg
sub
sub
xor
mov
pop
sub
sar
(bad)
(bad)
ss
pop
pop
add
enter
ret
sub
out
stos
mov
or
aaa
mov
add
adc
jo
(bad)
fld
nop
retf
jns
ret
pop
lods
xor
mov
and
add
mov
outs
and
xor
sub
out
mov
aas
aad
xchg
pop
inc
xchg
lods
pop
mov
pop
fild
popa
pop
xor
enter
cwde
stos
mov
ins
loope
rcr
pop
and
xchg
mov
mov
push
mov
xchg
pusha
sahf
pop
cmp
cmp
xchg
cdq
push
adc
cli
scas
jl
sub
shl
or
adc
mov
aas
(bad)
push
jecxz
(bad)
xchg
rcl
stos
mov
ins
into
lahf
xor
nop
add
lahf
dec
mov
mov
fwait
jns
(bad)
fld
dec
gs
add
jecxz
(bad)
cmc
imul
adc
sahf
push
push
pop
sbb
jae
dec
(bad)
popa
aas
dec
inc
add
sbb
xor
test
aaa
xchg
iret
test
xchg
mov
fld
pop
retf
ret
dec
mov
(bad)
jmp
rol
pusha
cwde
mov
js
xchg
shl
jge
fs
xchg
xor
sbb
inc
pushf
mov
jne
cmp
fadd
js
xchg
push
xor
adc
pop
mov
addr16
mov
pushf
pop
or
lea
movs
sub
jbe
sar
push
mov
xchg
ja
and
add
into
jp
fsubr
mov
sub
or
gs
ins
vpmacsww
push
or
test
mov
xor
sub
mov
outs
nop
mov
push
fdivrp
sbb
cmp
mov
and
imul
outs
push
mov
dec
mov
(bad)
aas
je
hlt
mov
test
xchg
scas
xchg
and
aas
(bad)
cmp
aas
lahf
jecxz
cmp
out
movs
lods
push
mov
adc
cmps
lea
repz
(bad)
fwait
leave
jno
mov
inc
(bad)
dec
jl
(bad)
or
jae
sbb
retf
adc
fwait
enter
xchg
pushf
ret
xchg
repnz
xor
das
in
loope
nop
and
in
ins
std
leave
pop
dec
dec
dec
and
das
int3
adc
aam
inc
inc
aaa
add
jl
xchg
mov
in
scas
cmc
add
mov
sbb
ins
test
and
inc
sbb
test
add
mov
rcr
mov
cs
sbb
mov
sbb
call
fwait
std
arpl
fwait
xor
ror
add
sub
jns
mov
or
pop
ins
xchg
xchg
fsub
movs
stc
mov
sbb
sbb
fs
pop
lods
jmp
adc
js
in
mov
or
pop
pop
add
add
int3
or
adc
jns
sub
push
sub
inc
cmp
rcl
and
ja
test
jbe
sbb
jmp
cwde
mov
pushf
pop
outs
sub
addps
mov
repz
outs
int
call
cmps
mov
std
push
cmp
xor
sub
ror
xlat
das
(bad)
ffreep
jmp
pushf
inc
or
adc
jb
sar
cmp
js
inc
xchg
push
arpl
push
data16
repz
xor
sub
nop
sar
mov
test
fdivr
mov
or
cwde
jae
cvtpi2ps
std
aad
mov
call
test
lods
mov
mov
shl
addr16
int
pop
push
neg
or
or
int
mov
pop
(bad)
xor
pop
mov
in
test
sub
or
mov
lods
pop
rcr
pop
test
dec
jbe
adc
and
rcl
mov
addr16
fwait
mov
pop
adc
mov
mov
push
inc
push
test
and
sub
lods
lods
shr
push
lock
and
jecxz
xchg
rcl
out
push
ror
mov
jle
leave
add
cmp
mov
lea
push
test
arpl
ins
or
ret
or
and
ror
frstor
test
add
cdq
xlat
shl
and
cs
mov
shl
push
addr16
sub
sar
push
add
jl
into
cwde
push
rol
aas
das
retf
out
cdq
imul
pop
jg
cmp
mov
cmp
mov
pop
mov
xchg
ja
xlat
jmp
cmp
dec
outs
sbb
gs
and
retf
js
(bad)
int3
inc
mov
fwait
ja
iret
mov
in
push
push
mov
jns
shl
mov
addr16
mov
adc
pop
dec
jg
sbb
stos
jns
add
jne
adc
and
inc
(bad)
loop
xor
lds
rcr
fincstp
jne
ret
mov
je
add
jge
popa
mov
(bad)
add
jo
sub
inc
daa
fistp
and
jns
test
repnz
pop
pusha
aaa
fnstsw
pusha
aam
add
ds
jg
out
dec
mov
xor
jmp
mov
mov
(bad)
fcomp
sbb
jae
(bad)
add
pand
sbb
and
pop
inc
nop
push
adc
mov
in
fistp
call
in
aad
(bad)
(bad)
lahf
jo
sub
jo
sti
jp
(bad)
das
xchg
ins
adc
dec
sub
xor
out
outs
in
mov
jno
fsub
inc
and
pop
push
cmp
add
sub
das
push
dec
mov
int3
fsub
mov
mov
sub
mov
inc
repz
xchg
mov
add
shl
push
push
adc
sbb
push
jg
add
call
data16
push
addr16
fcom
mov
xchg
pop
adc
mov
in
pop
ficomp
cmc
mul
pop
sbb
xchg
xor
xchg
jecxz
fmul
dec
popf
push
cmps
popf
and
(bad)
(bad)
addr16
mov
mov
push
mov
lock
pop
(bad)
loopne
jle
push
xchg
add
das
mov
cmps
and
cmp
push
dec
imul
cmp
je
jnp
iret
xchg
pop
dec
inc
jle
jle
or
xchg
inc
test
enter
inc
cmc
adc
fs
inc
sub
and
sub
aam
sti
fcmove
cdq
inc
jo
or
sbb
rcl
cmp
sub
mov
xchg
xchg
mov
je
(bad)
push
mov
xchg
jbe
ds
je
sahf
mov
hlt
inc
std
mov
movs
add
popf
sbb
fsub
sub
cmp
push
int3
mov
xchg
cmp
daa
mov
lock
cmp
jns
call
fadd
(bad)
jg
mov
jns
test
scas
outs
sub
sbb
mov
into
push
and
adc
fwait
out
jnp
sbb
sbb
leave
shl
shl
lods
test
cmps
mov
pushf
cld
pop
mov
(bad)
nop
rcr
pusha
ret
xchg
and
mov
or
jnp
aas
loopne
popa
addr16
push
jne
jle
fnsave
test
or
sub
mov
ret
cmp
rol
or
sub
cmp
pop
je
cmp
mov
mov
xchg
(bad)
push
ret
jbe
aas
sbb
je
fwait
mov
cwde
mov
pusha
jnp
fwait
addr16
mov
aam
ja
cmc
adc
xor
mov
fdivr
or
fdiv
fisttp
push
push
(bad)
add
lods
aam
ret
mov
ficom
mov
xor
and
cmc
adc
test
inc
jmp
pop
adc
lahf
cmc
mov
or
mov
sbb
adc
mov
jp
xchg
inc
inc
and
addr16
adc
and
lea
mov
arpl
leave
sbb
lahf
outs
cmps
sbb
je
sti
imul
test
repnz
jbe
jp
aad
cmp
mov
xor
stos
push
xchg
les
or
jb
pop
mov
fild
sub
not
mov
mov
test
pusha
test
mov
fwait
mov
jecxz
mov
es
test
rcr
js
jp
push
dec
cmp
test
loope
out
xlat
mov
cmp
cmps
dec
lea
fisttp
pop
test
stc
pop
inc
mov
push
fbstp
stos
add
ins
sar
sbb
test
les
and
jecxz
cmp
or
fnstsw
fwait
ins
jns
(bad)
popa
xchg
and
push
jg
jmp
mov
jg
add
cmp
shl
dec
mov
aam
mov
jbe
xor
sbb
pop
add
and
mov
dec
jno
jne
jns
shl
pop
scas
xchg
addr16
icebp
mov
cmp
jl
popf
leave
lahf
addr16
mov
xor
div
jne
xchg
mov
lahf
xchg
rcr
jb
fnsave
xchg
and
repnz
mov
rcr
(bad)
jns
pop
test
xchg
add
push
and
and
fstp
data16
aas
push
jg
jns
fadd
push
shl
mov
adc
or
aad
xor
xchg
cmp
or
lahf
mov
jp
jmp
mov
xor
jecxz
mov
imul
test
(bad)
pop
sub
rcr
jp
add
xchg
jbe
test
mov
ins
cmc
xchg
or
dec
loope
and
dec
icebp
pop
inc
in
in
in
(bad)
ror
sbb
cmp
xor
fwait
rol
addr16
sbb
in
add
in
mov
js
jecxz
push
sub
mov
js
xor
in
mov
xor
popf
jo
jns
sub
sahf
jmp
xor
xor
es
rcr
jle
cmp
(bad)
test
scas
mov
pusha
push
loopne
int3
cld
cwde
mov
dec
in
imul
mov
pop
xor
mov
cmps
mov
mov
imul
lahf
test
arpl
and
inc
mov
gs
mov
inc
fsubr
js
pop
or
gs
loope
pop
cwde
scas
les
mov
repnz
loop
pushf
mov
(bad)
fstp
jno
adc
sbb
call
mov
push
ja
mov
mov
mov
arpl
mov
int
xchg
mov
pop
cmp
jmp
stos
and
scas
mov
mov
shl
retf
fs
idiv
shl
push
je
add
lods
xchg
or
mov
fdivr
ins
jmp
mov
adc
pop
or
pop
jecxz
loope
pusha
xchg
fld
mov
jl
pop
repnz
jg
mov
lea
cmps
pop
loopne
and
and
sub
mov
into
int
out
push
pop
dec
fwait
sti
movs
inc
mov
jno
dec
xchg
psrld
mov
dec
lods
cmps
xor
xlat
cmp
inc
sbb
and
les
nop
daa
jp
mov
dec
scas
mov
mov
mov
stos
cmp
pop
sub
mov
adc
pop
cs
out
mov
lods
outs
jge
cmp
cdq
and
std
(bad)
retf
ins
enter
nop
mov
(bad)
dec
pop
sar
in
out
push
xchg
and
xchg
inc
enter
int3
loopne
jp
sbb
xchg
adc
or
mov
sbb
repnz
frstor
xlat
ficomp
xor
(bad)
arpl
mov
addr16
xor
add
or
mov
mov
js
sbb
(bad)
add
mov
add
mov
adc
dec
scas
lods
jns
aam
and
leave
dec
imul
xchg
inc
mov
dec
xchg
or
aad
inc
fstp
dec
xor
sub
or
leave
ins
outs
mov
adc
pop
jp
adc
xchg
fwait
mov
pop
jno
push
pop
jo
pop
add
xchg
and
mov
stc
xlat
mov
xchg
lods
jp
cmp
add
and
inc
mov
pop
je
cld
repnz
fs
fs
test
and
mov
les
push
xchg
cs
mov
cmp
movs
sub
ror
ins
add
rol
hlt
mov
jbe
sub
pop
mov
add
and
inc
add
gs
jbe
std
mov
arpl
sub
out
or
push
pop
sbb
jmp
jecxz
or
test
das
pmulhuw
pop
test
lahf
fmul
arpl
mov
aas
push
test
or
xor
fcom
hlt
pop
(bad)
xchg
mov
jbe
jnp
add
or
dec
mov
push
cmps
ds
and
pop
pop
jmp
aam
shl
pop
les
imul
push
daa
xchg
fdiv
or
popa
inc
mov
sbb
or
lahf
(bad)
mov
daa
pop
das
ins
jg
xchg
jnp
sub
adc
not
rcr
push
or
inc
je
sub
mov
push
imul
fs
fcmovnbe
inc
mov
add
sub
push
and
das
and
mov
pushf
call
lods
push
sub
jmp
jge
cmc
sub
dec
sar
clc
shr
xor
in
mov
or
pop
inc
or
adc
xor
ret
mov
mov
cmps
add
enter
shl
lods
icebp
repnz
jae
outs
push
sub
(bad)
fsubr
das
ret
xchg
je
jecxz
mov
push
scas
mov
leave
xchg
fistp
mov
lods
mov
xchg
movs
jo
test
test
ins
test
movs
aas
cmp
mov
lods
in
add
push
mov
inc
jbe
pop
dec
cli
pusha
add
cmp
mov
ret
(bad)
jbe
nop
in
mov
repnz
jnp
test
push
cmp
mov
test
rol
pusha
dec
xchg
jp
cmp
sub
shl
mov
add
int
ins
scas
xor
test
push
popf
xchg
retf
fs
les
mov
xchg
mov
push
and
jb
in
adc
push
jmp
jno
pop
jae
data16
mov
mov
cmps
cmps
xchg
je
ins
dec
jecxz
push
pop
pop
fild
xor
pop
inc
call
pop
inc
dec
sub
jp
sbb
pop
call
aam
pushf
and
mov
imul
popf
dec
(bad)
pop
dec
and
dec
pusha
in
jae
jmp
fbstp
pusha
dec
adc
sub
mov
imul
mov
imul
sub
mov
or
xchg
adc
in
lds
icebp
or
outs
sub
fild
sbb
lods
mov
aad
or
lods
in
push
cmc
sub
jmp
sub
and
ds
jp
cmps
adc
mov
jecxz
or
lea
jp
int
lods
ror
fst
xor
lds
xor
or
or
cmp
lea
cmp
push
es
dec
xchg
xchg
inc
push
lods
pop
mov
mov
fisub
push
mov
push
push
test
lods
movs
adc
aas
xchg
dec
and
or
dec
cmp
sti
pop
mov
sub
fsub
mov
mov
fdivr
data16
mov
and
or
dec
xor
arpl
nop
inc
imul
jg
sub
imul
pop
sbb
adc
mov
pushf
mov
fist
pop
dec
xchg
dec
jno
scas
movs
fld
sub
add
or
or
out
movs
dec
aam
mov
cmp
fisttp
and
adc
xchg
ret
iret
sbb
xchg
mov
mov
jmp
div
test
pusha
and
out
cmp
sbb
cmc
cmp
push
pushf
or
leave
xchg
je
jg
jno
jge
bound
xchg
icebp
pop
cmps
fld
xor
add
dec
sbb
xchg
jmp
scas
hlt
dec
ror
test
mov
fild
or
dec
mov
mov
or
ins
push
daa
add
xor
jnp
jo
sbb
ret
push
sbb
sti
mov
push
in
jge
fadd
xor
sbb
push
push
mov
inc
xchg
or
jmp
or
dec
ret
pop
jmp
sbb
or
scas
and
es
mov
xchg
repz
(bad)
mov
mov
fucomi
sbb
daa
(bad)
sti
adc
mov
add
out
pop
rol
(bad)
cmc
adc
in
arpl
mov
sub
shr
ja
push
ss
idiv
mov
xor
dec
daa
das
push
sbb
adc
add
inc
call
dec
std
adc
add
push
test
icebp
mov
jmp
ror
(bad)
add
scas
add
loop
mov
mov
xor
(bad)
cmp
cld
sar
int
xchg
and
mov
(bad)
xor
dec
push
sub
jne
inc
(bad)
adc
pop
outs
int
test
push
or
add
mov
aad
xor
sbb
xchg
jl
dec
push
or
or
mov
xor
std
ret
mov
adc
lock
xchg
mov
add
add
sbb
icebp
push
arpl
test
sub
mov
cmp
rcr
fs
cmp
fld
dec
ret
out
icebp
sub
push
sub
(bad)
(bad)
leave
or
xchg
test
ins
lahf
or
mov
test
sar
xlat
clc
push
sahf
sbb
push
xor
cmc
mov
(bad)
dec
or
jnp
cwde
stc
or
aam
fs
loop
and
outs
inc
inc
aas
mov
mov
cmps
cmp
sahf
jl
mov
dec
imul
jge
sub
ret
(bad)
pop
add
pop
in
cmp
mov
loop
mov
out
popf
or
xchg
jl
repnz
fs
and
pop
and
lods
jb
and
popf
popf
(bad)
das
add
loop
daa
ficomp
addr16
(bad)
cmp
imul
mov
sub
stos
pop
push
sbb
and
sahf
in
jne
xlat
cwde
mov
xchg
hlt
mov
sub
dec
int3
imul
popa
xchg
lock
rol
into
adc
jmp
clc
jae
mov
(bad)
popa
arpl
fcom
mov
jnp
nop
mov
sbb
int
stc
adc
mov
and
mov
push
fcmovne
push
(bad)
xor
fbstp
and
add
sub
mov
mov
cmp
lods
imul
stos
not
fisttp
adc
repnz
arpl
adc
xchg
jns
lock
sub
inc
fnstsw
aam
test
push
mov
and
(bad)
dec
xchg
nop
movs
jp
enter
aas
sti
arpl
out
xor
xchg
or
lods
jns
out
je
jmp
xor
loop
pop
shl
xlat
leave
adc
pop
mov
sbb
dec
jne
jbe
daa
iret
mov
pusha
test
jge
imul
div
jmp
or
pop
fdiv
ins
(bad)
adc
dec
or
mov
push
std
pop
ja
mov
adc
dec
inc
aam
mov
test
shl
pop
into
push
aas
push
(bad)
mov
jno
sub
dec
repz
pop
(bad)
mov
into
push
jmp
out
test
jns
in
out
pop
xchg
test
push
neg
jge
out
push
imul
pop
pop
sbb
add
sub
stc
inc
imul
(bad)
aam
iret
fcomi
lea
ja
cmp
(bad)
shl
je
push
in
add
movs
xor
dec
das
pusha
mov
mov
adc
rol
xchg
test
mov
and
test
and
pop
push
mov
inc
movs
je
scas
std
pop
mov
mov
aas
cs
aam
pop
icebp
inc
cmps
mov
dec
or
adc
test
outs
mov
push
cld
imul
fs
movs
dec
push
inc
dec
mov
lods
jae
dec
jmp
and
cli
and
mov
xchg
in
test
pop
push
lods
bound
mov
cmp
lods
ret
push
mov
int3
xchg
in
call
sub
or
call
out
jg
mov
push
mov
repnz
pop
push
arpl
(bad)
int3
inc
sbb
and
dec
cld
and
rcr
jmp
xchg
jmp
call
and
jecxz
add
gs
sbb
jmp
mov
and
mov
repnz
sbb
sbb
pop
push
mov
aaa
fst
rol
mov
stc
push
add
out
(bad)
in
in
push
sbb
enter
sbb
jb
add
or
adc
fdivr
xor
push
ret
neg
jae
in
shl
popa
jl
push
xlat
outs
adc
dec
hlt
test
stc
cmp
mov
rol
arpl
add
iret
into
cdq
leave
push
adc
add
jle
mov
inc
(bad)
mov
lock
xor
mov
add
daa
adc
and
cmp
fdivr
jl
mov
push
add
adc
mov
rol
mov
mov
retf
das
mov
(bad)
neg
rcr
outs
scas
sar
ja
mov
in
(bad)
std
sbb
or
jne
mov
mov
xchg
jecxz
mov
and
mov
icebp
fistp
sbb
out
sub
cmp
add
xor
cmp
or
(bad)
add
fnsave
daa
repz
sbb
add
stc
movs
sub
rol
(bad)
nop
mov
sbb
xor
std
mov
popa
pop
lods
xchg
xlat
(bad)
aam
or
js
repz
rol
cli
retf
into
xor
sbb
mov
enter
xchg
add
popa
jb
or
pop
(bad)
and
call
aad
fcom
lods
add
stos
repnz
sbb
sub
or
adc
dec
(bad)
mov
sbb
jge
ja
test
sbb
cmp
ffree
xchg
push
js
mov
mov
std
xchg
out
mov
mov
cld
add
sbb
and
and
or
pop
mov
ds
leave
mov
push
leave
(bad)
mov
jl
jle
and
adc
pop
xor
adc
mov
mov
ins
adc
xor
pop
jno
cs
and
cdq
jmp
sbb
(bad)
xchg
imul
mov
jb
mov
(bad)
xchg
fldcw
sbb
pop
(bad)
mov
sbb
sbb
add
sub
(bad)
in
arpl
daa
adc
push
cld
xor
enter
sbb
outs
xor
push
movs
(bad)
aaa
pusha
jle
sub
aad
clc
jns
retf
adc
out
jb
pop
sub
das
jns
call
mov
ror
mov
hlt
packsswb
ror
mov
sar
jmp
fsub
fmul
lea
shl
mov
cmp
xor
(bad)
call
nop
pop
jp
dec
(bad)
das
mov
adc
pop
sub
imul
push
add
div
sub
popf
or
inc
retf
int
cld
adc
cmp
loop
in
push
mov
shl
sub
repz
jnp
adc
sub
cld
(bad)
in
out
pop
push
lods
push
dec
das
or
jmp
out
mov
mov
les
test
cmps
stc
mov
jmp
lods
icebp
add
mov
xchg
and
add
mov
dec
retf
mov
jb
and
ror
inc
data16
mov
mov
xchg
xor
inc
jmp
(bad)
or
mov
inc
dec
add
jle
sbb
adc
jb
mov
mov
push
push
rol
jp
push
mov
mov
push
jmp
or
add
test
(bad)
adc
test
pushf
sbb
ror
mov
cld
xchg
test
loop
jne
je
daa
icebp
push
cmp
sub
add
and
lock
repz
jns
jbe
(bad)
inc
std
jg
and
ror
or
fsubr
pop
and
in
std
ret
shl
xchg
cli
sti
sbb
clc
inc
pop
out
jmp
(bad)
and
push
add
jmp
leave
into
add
fucomi
sbb
test
repz
sti
and
lea
pop
jnp
das
cld
xrelease
fsubr
cmp
in
ins
dec
pop
test
and
cmp
lock
pop
inc
push
jmp
ss
xlat
jmp
gs
imul
or
js
cld
dec
int3
push
imul
fidivr
pop
bound
push
pop
lds
mov
or
loop
rcr
or
sbb
jg
or
popf
scas
sub
bound
push
pusha
loop
arpl
sti
adc
dec
push
push
pop
fnclex
je
mov
dec
push
inc
push
in
xor
test
mov
(bad)
sub
hlt
imul
sbb
push
out
ja
hlt
and
jne
neg
push
jl
popa
(bad)
repz
ret
imul
sbb
cld
shl
push
mov
int
push
sub
and
or
dec
loope
sbb
adc
or
shl
aad
jmp
test
mov
lock
cmp
xchg
or
cmp
sub
mov
hlt
adc
push
leave
(bad)
int
push
and
xchg
rcl
cmp
fs
jecxz
fstp
push
xchg
cmp
test
inc
mov
rcr
rol
cmp
lods
rol
or
jp
movs
bnd
cmc
cli
in
or
mov
push
test
pop
or
adc
push
div
fadd
dec
imul
sub
ss
dec
ret
adc
and
or
or
xchg
add
test
mov
cld
sub
fs
inc
jge
jg
outs
sub
cs
xchg
mov
xor
mov
jmp
sub
pop
inc
mov
mov
xchg
ss
sbb
out
and
imul
mov
adc
cmp
mov
je
or
cmp
sbb
fmul
test
div
pushf
arpl
push
cmps
or
(bad)
adc
sbb
sbb
and
sbb
out
pop
xor
and
pop
mov
icebp
ds
in
cld
inc
xchg
mov
jge
pop
shl
mov
call
scas
or
outs
mov
push
mov
int
sub
rcr
imul
mov
or
xor
nop
adc
scas
add
xor
xlat
rcl
add
shl
(bad)
push
xlat
pop
sbb
jecxz
mov
add
test
jp
popa
fist
fdiv
pop
fs
push
ja
sbb
fcmovnbe
mov
inc
adc
aaa
xlat
ja
inc
int3
je
pop
mov
jns
mov
pop
push
xchg
jmp
mov
pop
push
das
sub
cmp
int3
loope
movs
push
jmp
(bad)
or
xor
es
retf
das
jo
jb
fdivr
ins
ss
repz
cmp
inc
fdivr
pop
(bad)
lea
rcr
and
adc
sbb
je
sti
push
push
out
ins
xor
daa
adc
mov
xor
jecxz
and
inc
or
(bad)
popa
or
sub
vpsubusb
ss
push
(bad)
pop
test
std
cdq
ins
mov
sub
push
jp
mov
push
push
bound
push
out
jne
ins
sub
rol
push
ds
xchg
sbb
xchg
add
test
xchg
push
dec
into
xchg
xchg
pop
cmp
xchg
stos
pop
test
dec
ffree
lea
scas
cli
in
jmp
lahf
inc
cmp
inc
push
sbb
xchg
add
mov
or
cdq
mov
addr16
cmp
adc
cmc
mov
fsubr
arpl
cwde
mov
mov
pop
fdiv
sub
inc
cmp
ja
and
jmp
sub
mov
jno
addr16
mov
sbb
(bad)
int3
aas
ret
adc
pusha
jmp
cmp
jle
or
push
pop
je
ror
jns
add
ror
xlat
call
push
push
sub
dec
lock
shr
gs
pusha
into
push
fucomip
sbb
xor
mov
xchg
and
cli
cmp
test
arpl
mov
test
dec
shl
jne
inc
xor
les
call
or
mov
lds
fisub
jp
test
xor
mov
xor
push
(bad)
sbb
cmp
xchg
jns
pop
or
icebp
push
adc
ret
lds
or
sub
sub
and
popf
jecxz
add
pusha
lds
sbb
cwde
jmp
enter
and
cwde
fld
retf
cmps
shl
cwde
inc
adc
xor
add
es
pushf
mov
repz
push
xchg
pop
jno
jns
out
int3
es
and
cwde
pop
xchg
retf
retf
shl
and
nop
rol
int3
and
fist
outs
jns
(bad)
aad
(bad)
or
mov
pushf
fnsave
fcmovnb
test
mov
sbb
mov
rcl
and
mov
pop
ror
mov
rcr
or
add
sbb
push
push
es
loope
retf
fdiv
fwait
je
stos
es
sub
enter
and
fidiv
aas
rcl
ins
jge
out
cs
mov
xor
(bad)
xor
xchg
mov
add
fld
jmp
ins
sbb
jb
push
es
mov
push
mov
adc
sub
pop
push
rcl
and
shr
(bad)
int3
push
dec
jno
imul
xchg
je
sub
and
test
outs
cmp
add
mov
jns
and
mov
sub
cmp
cmp
xchg
sub
xchg
mov
and
inc
push
jecxz
les
jecxz
add
aaa
fimul
mov
gs
rol
sbb
jnp
and
ins
or
or
dec
pop
push
push
adc
mov
test
fcomp
movs
xchg
lods
mov
test
pop
inc
das
pusha
pop
(bad)
lahf
not
dec
es
ret
mov
pop
sbb
in
scas
cmp
cmp
popf
icebp
pop
xor
mov
setg
dec
jns
pop
inc
push
mov
sbb
ds
test
int3
stc
fnsave
mov
imul
je
call
sub
mov
jne
scas
mov
ficomp
out
xchg
icebp
js
popf
dec
mov
dec
mov
bound
jge
pop
jo
mov
cmp
add
mov
add
mov
pop
call
mov
sbb
cmp
mov
mov
adc
sar
call
or
pop
xor
sbb
push
jmp
dec
(bad)
add
and
dec
test
rol
ror
popf
in
stos
sbb
dec
aad
mov
ja
jns
clc
push
ror
cmp
aas
pop
pop
pushf
mov
stos
mov
js
out
pop
add
or
jg
jmp
pop
xor
bound
push
xchg
out
xchg
push
rcl
mov
sub
js
or
xchg
icebp
jecxz
fsubp
add
or
cmp
sub
dec
sbb
arpl
cmp
pop
mov
shl
je
nop
jbe
div
jle
pop
mov
imul
sub
rep
shl
not
int3
inc
outs
bound
ds
sub
int
aad
jl
or
pop
add
neg
test
pusha
push
lock
cmps
push
mov
arpl
cmp
mov
sahf
sub
rcr
data16
xor
fild
mov
dec
sbb
mov
mov
cvtpi2ps
aam
out
mov
(bad)
pop
cmps
ja
and
clc
fs
lods
loop
inc
das
push
mov
sub
pusha
sub
jb
in
jae
bound
dec
es
inc
jle
jp
pop
push
repnz
pop
pop
arpl
mov
push
sub
push
aas
and
call
cdq
cmp
stos
mov
add
stc
call
jnp
push
jbe
fisubr
fadd
jns
mov
fs
rcl
xchg
stc
ins
xor
dec
mov
hlt
jecxz
enter
popa
rcl
rcl
cmp
jbe
rcl
inc
jo
jbe
arpl
jp
push
repnz
pusha
mov
sbb
add
pushf
cmp
popf
retf
dec
dec
inc
mov
loopne
xlat
cmp
test
cmp
adc
jp
mov
xchg
call
xchg
xlat
enter
in
stos
rol
test
out
lods
push
aas
mov
inc
dec
inc
or
rcr
js
jbe
ret
aam
pop
push
xor
lods
push
inc
scas
push
rcr
mov
push
ins
mov
arpl
int3
mov
scas
mov
pop
inc
adc
mov
pop
inc
test
fs
cmps
test
stos
or
mov
pop
js
pop
or
mov
mov
xor
(bad)
lods
out
dec
add
movs
jp
(bad)
push
lods
out
or
repz
outs
hlt
sbb
inc
mov
xchg
stos
data16
sbb
jno
dec
(bad)
mul
adc
push
lds
mov
push
jl
cld
mov
imul
mov
pop
mov
sbb
xchg
lea
cmp
sub
clc
push
and
sub
or
retf
mov
pop
in
retf
adc
mov
imul
scas
lock
pop
loop
mov
add
addr16
outs
adc
xchg
ret
mov
xor
lods
xlat
stos
mov
test
sub
sbb
mov
dec
pop
push
sbb
test
popf
out
(bad)
mov
mov
fcomp
xor
test
mov
ds
sub
outs
inc
lahf
mov
pop
mov
jmp
fld
pop
pop
xor
sub
mov
inc
dec
je
pop
cmp
cmp
inc
mov
mov
pop
out
mov
xor
sub
shl
push
cmp
in
dec
into
adc
lahf
mov
jmp
push
mov
jns
or
xchg
(bad)
(bad)
mov
ss
jmp
cli
ds
mov
mov
loope
neg
fwait
popf
test
or
fcomp
imul
das
mov
mov
pushf
pushf
out
sti
sbb
int
sbb
int
mov
ds
scas
push
mov
push
rcl
sar
or
add
call
inc
cmps
sbb
push
sbb
cmc
ins
rcr
in
pop
in
movs
and
retf
jns
xlat
(bad)
test
shr
pop
rol
cmp
stos
mov
and
rcr
jne
xchg
mov
jbe
int
push
cmp
pop
aam
int
push
iret
or
inc
and
jo
stos
and
mov
imul
push
mov
mov
fs
outs
push
pop
push
pop
ret
scas
jae
js
cmps
xlat
js
adc
add
sub
inc
xor
shl
lds
xchg
into
test
add
jge
sub
xchg
ret
pushf
and
and
aad
xchg
retf
retf
fistp
icebp
fstp
pop
xor
sbb
pop
sub
cdq
(bad)
mov
pop
sti
or
ret
push
dec
jo
ja
adc
fcmovne
stos
push
(bad)
push
adc
or
je
add
push
cmp
lods
mov
cmps
dec
push
sub
pop
in
lods
(bad)
jmp
and
imul
pop
shl
mov
cmp
(bad)
xacquire
stc
xchg
addr16
dec
mov
in
in
jae
imul
sub
jmp
loopne
push
(bad)
lods
dec
test
lock
or
dec
xor
out
or
fiadd
dec
or
dec
xor
out
sti
or
das
push
test
in
test
mov
add
addr16
orps
adc
sti
mov
and
push
jmp
adc
mov
and
popf
imul
in
sub
push
dec
ret
out
mov
mov
pop
inc
ss
cmp
scas
test
push
xlat
in
adc
mov
icebp
cmp
clc
push
xor
mov
scas
sbb
and
adc
in
push
scas
ins
cmp
sub
sbb
jg
out
(bad)
xor
push
scas
sbb
jmp
out
movs
ins
jmp
mov
test
cmp
popf
or
outs
aad
sub
sbb
fs
sbb
push
scas
cmps
sub
jb
pop
nop
mov
and
dec
and
sbb
ret
dec
jl
stc
pop
int3
mov
mov
in
push
mov
mov
int3
mov
mov
rcl
in
adc
mov
cmp
xor
mov
lods
sbb
mov
call
std
movs
push
cmp
je
add
cdq
xchg
mov
or
mov
xor
test
jmp
jmp
stos
adc
sub
push
retf
xor
cmp
(bad)
sbb
mov
icebp
mov
and
jge
scas
sub
lock
pop
fwait
mov
mov
retf
es
mov
dec
test
jmp
xchg
aas
inc
test
shl
xor
sbb
push
push
and
aad
(bad)
test
push
in
sub
mov
or
iret
fadd
or
dec
mov
test
mov
test
adc
pusha
sub
push
ins
lahf
push
test
mov
mov
dec
popf
mov
je
push
sar
cdq
test
div
test
test
test
and
cmc
add
lods
dec
pop
push
pop
ffree
lea
(bad)
mov
out
inc
cmp
inc
(bad)
pop
xor
push
lods
mov
mov
test
pop
xor
retf
rol
jne
mov
rcr
inc
mov
dec
(bad)
js
mov
js
sahf
inc
fdivp
fs
fmul
in
jecxz
test
cmp
mov
mov
aam
in
inc
leave
call
gs
cmc
cmp
cdq
sbb
xor
loope
mov
ins
push
(bad)
cs
(bad)
cdq
jg
sbb
jae
sar
std
or
out
adc
sbb
rol
shl
loope
jae
mov
sbb
call
shl
ret
mov
cs
das
push
iret
ja
mov
xor
add
push
sub
lods
(bad)
xchg
stos
not
mov
mov
add
in
adc
pop
(bad)
xor
sar
xchg
popa
sbb
lods
call
leave
mov
daa
int
inc
ror
push
leave
mov
(bad)
ins
das
mov
dec
ins
sbb
daa
push
rol
imul
fbld
ss
inc
sar
jmp
mov
rol
push
arpl
push
jp
mov
mov
sub
sbb
cmps
movs
add
(bad)
jp
iret
sub
repz
xor
js
mov
cli
jbe
push
pop
in
pop
mov
dec
push
pop
pop
leave
push
cmps
xchg
xchg
sub
pop
sahf
lock
addr16
push
std
shl
shr
in
es
mov
shl
mov
sub
cdq
sub
ror
cld
int
push
test
retf
addr16
sub
and
dec
(bad)
cmp
(bad)
int3
je
in
jns
or
dec
xchg
les
add
jbe
mov
(bad)
push
xor
push
clc
loop
and
and
pop
cmp
pop
int
adc
je
push
test
jl
jecxz
lods
loop
ins
mov
aas
xor
mov
leave
sub
imul
sbb
bound
add
mov
outs
push
retf
(bad)
clc
repz
sbb
mov
mov
push
pop
fs
mov
iret
sub
jg
fnstenv
(bad)
and
test
imul
sbb
retf
push
jg
mov
cdq
rol
pop
scas
or
sbb
cli
xor
leave
xor
lea
test
mov
sbb
or
movs
loop
call
call
and
addr16
push
pop
(bad)
inc
shl
and
je
mov
(bad)
or
xchg
(bad)
bound
pusha
sbb
pop
movs
int
stos
lods
mov
(bad)
retf
fild
sub
mov
jl
jle
xchg
sub
iret
xchg
fs
mov
int
aam
cmp
clc
sbb
cwde
dec
adc
pop
mov
jo
or
jecxz
and
leave
xor
fistp
sub
test
int
or
imul
hlt
dec
imul
mov
stos
cmp
mov
loopne
(bad)
inc
(bad)
adc
es
xchg
(bad)
sbb
int3
ins
int
dec
sbb
test
mov
jle
fdivr
lahf
fs
into
jns
mov
outs
sbb
mov
test
std
dec
inc
push
add
mov
push
mov
and
rcr
leave
loopne
fld
pop
leavew
je
mov
pop
int3
mov
fiadd
mov
int3
push
fs
mov
lods
pop
fmul
jge
mov
(bad)
rcl
clc
jecxz
push
or
jo
push
stc
loop
mov
scas
pop
jmp
cmp
dec
xchg
out
xchg
pop
repz
or
xor
mov
leave
fidivr
xlat
push
adc
shl
mov
or
mov
es
loope
std
ins
ja
fstp
mov
test
cmp
mov
(bad)
pop
lds
lods
(bad)
adc
push
popf
(bad)
cwde
stos
sbb
sub
and
or
jecxz
xchg
mov
xor
push
ss
pop
loopne
sbb
pop
inc
sbb
inc
push
jmp
popa
mov
adc
mov
femms
xchg
test
pop
sub
and
mov
push
adc
pusha
cmps
fs
mov
sub
jns
push
ret
pop
inc
arpl
jo
mov
lea
mov
loop
push
push
loop
inc
push
xchg
push
push
ror
xchg
or
push
xchg
iret
xor
sbb
add
mov
push
shl
int3
int
loop
imul
xchg
sbb
bound
dec
(bad)
sub
pop
mov
ror
mov
add
rcl
retf
sbb
mov
imul
push
fs
mov
jae
(bad)
adc
ss
pop
stos
sbb
pop
and
lea
les
je
int
pop
cmp
fisttp
nop
test
jp
mov
fmul
mov
and
std
or
pop
sub
cmp
or
xchg
mov
arpl
lds
xchg
jo
jns
xchg
xchg
adc
jno
hlt
inc
outs
pusha
fld
retf
xchg
jmp
mov
sbb
sti
xor
fsub
arpl
lahf
jg
rol
dec
sbb
xchg
sbb
(bad)
test
jb
adc
shr
retf
das
and
je
dec
or
jecxz
dec
(bad)
xchg
jns
enter
jg
jae
lea
pop
sbb
sub
jno
or
mov
mov
xor
(bad)
adc
pop
adc
aam
imul
idiv
jge
je
dec
aad
and
pop
mov
dec
mov
or
repz
rcl
cmp
stos
mov
push
sbb
scas
mov
xlat
mov
out
xchg
jmp
mov
mov
and
jle
xor
jmp
int3
push
mov
sbb
shl
in
aaa
sahf
gs
int3
jb
push
push
push
mov
dec
dec
xor
ins
aaa
fistp
xchg
popa
inc
int3
dec
jp
lahf
sub
dec
and
jae
push
inc
lahf
mov
xchg
jb
jp
test
push
add
mov
sub
pop
push
ds
push
sbb
sub
xchg
jmp
or
shl
xlat
hlt
popf
xchg
(bad)
jmp
push
or
in
mov
out
or
cdq
fnsave
imul
test
mov
retf
mov
jb
frstor
sahf
mov
and
das
mov
xor
mov
in
not
xchg
mov
int
inc
es
jo
das
into
stc
fmulp
stos
mov
pop
loopne
in
std
push
xlat
push
sbb
jne
mov
imul
bound
outs
add
leave
push
mov
sub
gs
lods
push
imul
mov
adc
test
mov
loop
add
or
imul
loopne
jecxz
sbb
push
mov
(bad)
xchg
push
rol
jb
and
pop
sbb
push
xor
xchg
icebp
mov
or
(bad)
pushf
cmp
cmp
adc
mov
push
retf
pusha
sub
stc
daa
jg
dec
add
inc
push
stos
cmp
scas
sbb
fs
out
clc
mov
pop
sbb
or
addr16
and
fcomi
jecxz
jno
out
ins
push
stos
add
inc
lods
add
mov
addr16
sbb
mov
test
fucomi
mov
and
jmp
fistp
xchg
repz
fisubr
daa
popa
mov
push
mov
sub
scas
dec
fstp
(bad)
push
adc
into
mov
test
cs
push
push
(bad)
adc
bound
call
sub
cdq
call
sub
and
add
mov
sub
xor
(bad)
sub
out
enter
ins
xchg
call
shl
push
adc
and
and
imul
scas
or
(bad)
and
or
pop
jmp
pop
jecxz
mov
xchg
fmul
inc
out
mov
inc
pop
loope
or
mov
ds
mov
mov
cmps
xchg
pop
dec
jne
ret
adc
leave
mov
gs
sbb
ins
jno
xchg
jmp
xlat
int3
fcomp
mov
mov
pop
in
or
cdq
add
dec
fchs
xor
gs
mov
jmp
inc
stos
addr16
jl
pusha
lea
mov
je
add
cmps
stos
jl
cwde
pop
adc
jae
pop
mov
mov
inc
clc
pop
adc
push
mov
movs
inc
in
pop
leave
add
push
mov
mov
test
(bad)
mov
rcr
push
out
dec
adc
rol
sar
or
push
cmp
ja
pop
jecxz
mov
dec
and
mov
mov
jp
jae
or
xchg
add
sbb
cmp
pop
jnp
in
call
sub
mov
inc
inc
into
gs
shr
sub
icebp
sub
mov
xchg
lock
inc
mov
xchg
or
or
std
adc
enter
lea
test
inc
addr16
xchg
and
jge
(bad)
stc
ss
inc
sub
mov
or
push
mov
(bad)
sbb
add
mov
mov
mov
jp
add
aad
stos
inc
and
in
ins
sbb
ficomp
std
or
adc
mov
gs
stos
and
popf
xor
xlat
mov
imul
lahf
xchg
push
cmp
cmp
jecxz
adc
mov
out
fist
fwait
xlat
jae
sar
outs
add
or
out
data16
xor
rcl
or
aad
push
mov
fcomp
cmp
pusha
jae
in
add
jne
sbb
mov
aam
sar
loopne
mov
pusha
inc
nop
dec
adc
mov
sbb
dec
addr16
jge
sbb
xchg
out
cmp
fld
fs
pop
lods
loop
inc
mov
cmp
leave
in
mov
cmp
xor
dec
mov
jmp
mov
adc
sahf
push
popa
enter
lahf
push
daa
jge
callw
enter
icebp
fwait
or
fiadd
cli
lds
xchg
inc
jb
add
aad
pop
ds
mov
xor
jl
dec
dec
cmps
cdq
iret
(bad)
jb
lahf
std
daa
aaa
or
jae
or
jne
lea
loopne
shr
scas
aad
xchg
push
add
iret
rcr
out
xchg
mov
mov
add
ret
cmp
repnz
in
fs
imul
add
mov
jnp
sbb
xor
cmp
xchg
mov
jb
js
in
fstp
or
pop
in
ret
scas
inc
hlt
out
pop
je
fadd
aam
mov
push
inc
movs
shr
test
xor
pop
adc
std
stos
arpl
mov
push
pop
int3
xor
jg
fiadd
dec
mov
mov
inc
jbe
mov
stos
jmp
push
push
sbb
js
and
and
je
movs
popa
or
fbstp
lds
jns
je
jbe
gs
test
lahf
or
pushf
xchg
jae
or
imul
lods
inc
fcomp
cld
lods
mov
arpl
aam
cmp
jno
imul
leave
out
jg
arpl
fstp
pushf
scas
(bad)
jl
inc
outs
ja
xchg
xchg
mov
xor
iret
jae
push
adc
xor
mov
fs
(bad)
jae
mov
mov
in
js
jg
in
aad
ja
mov
push
ja
cdq
daa
jnp
shl
js
jmp
fnstcw
out
sub
jne
mov
test
clc
retf
data16
jnp
jg
mov
pop
or
sbb
pause
imul
bound
out
push
adc
aas
jae
addr16
js
push
sbb
(bad)
(bad)
icebp
out
in
mov
stc
pop
clc
popf
mov
retf
(bad)
jle
cmp
popa
xchg
dec
test
jbe
adc
(bad)
scas
inc
rcl
jnp
adc
fidiv
push
xlat
mov
push
outs
push
mov
sbb
xor
scas
pusha
adc
push
inc
xchg
je
push
test
in
xchg
dec
ins
test
sub
test
test
inc
mov
push
es
sbb
jg
in
pop
jnp
sbb
sbb
cmp
lea
addr16
mov
lods
xchg
cmovl
mov
adc
xchg
xchg
cmp
pushf
mov
cwde
cmp
dec
push
(bad)
and
dec
or
stos
sbb
outs
mov
mov
imul
adc
lea
xchg
pushf
jg
cmp
mov
out
jmp
(bad)
lods
out
jmp
mov
jge
lds
push
adc
xchg
xor
and
out
gs
jp
mov
inc
hlt
add
loope
sub
data16
xor
or
retf
mov
jmp
data16
jbe
jg
fisubr
mov
imul
inc
stc
popf
je
jle
push
test
sub
in
and
or
shufps
adc
rcr
add
jmp
out
mov
pop
mov
jno
jbe
fild
cmc
xchg
repz
sub
mov
rcr
add
dec
mov
rcl
ror
fdivr
rol
loopne
scas
call
ins
cmps
xlat
adc
sbb
xor
jbe
push
bound
lods
and
mov
pop
xchg
outs
mov
ja
xchg
mov
je
ficomp
push
sub
xchg
jbe
loope
jle
jbe
(bad)
jecxz
je
xchg
mov
(bad)
data16
les
jb
mov
pop
sbb
and
jg
enter
sbb
sbb
dec
(bad)
jg
enter
shl
add
aam
pop
test
xlat
popf
sbb
lock
sbb
pop
jg
jo
scas
cmp
test
popf
data16
and
repz
or
test
jae
jecxz
push
push
lods
sub
outs
(bad)
mov
pop
(bad)
into
mov
pop
je
xor
inc
ds
mov
imul
scas
imul
sub
es
fdiv
mov
cwde
lds
outs
adc
cmps
pop
stos
sub
ja
sbb
fstp
movs
(bad)
aad
xchg
xchg
pop
push
xor
xchg
adc
push
aas
call
jmp
lods
jge
pop
mov
out
mov
aad
fmul
pop
push
shr
xor
cmp
lea
or
mov
arpl
mov
mov
sub
sar
jb
cmp
push
push
fild
out
mov
sub
fs
mov
test
sub
imul
pop
mov
mov
jl
mov
add
or
xchg
hlt
mov
ror
cdq
fpatan
lahf
hlt
lods
add
fldenv
jnp
fstp
xchg
movs
mov
mov
push
arpl
outs
and
pop
test
push
cmp
add
or
mov
sub
into
pop
fs
adc
xchg
hlt
aam
cmp
cmps
and
clc
xchg
add
xor
jecxz
and
test
xchg
imul
xor
mov
jg
lea
pop
and
mov
popf
lods
imul
mov
test
inc
mov
cmp
int3
cwde
push
add
test
jno
mov
mov
cmp
and
push
ins
mov
imul
mov
mov
test
test
jno
add
xchg
sbb
mov
mov
push
ja
mov
push
jbe
fnstenv
sbb
pop
ins
clc
outs
ror
movs
sbb
das
or
cmp
clc
pushf
mov
xchg
jno
xor
jge
js
test
scas
test
mov
push
or
fstp
stos
cld
jge
call
xchg
popf
push
sbb
mov
(bad)
mov
jo
xchg
repz
imul
cmp
mov
mov
sbb
mov
sub
imul
mov
lods
inc
xor
rol
cmp
sub
out
shr
or
xchg
mov
push
pop
mul
xlat
call
fadd
jne
jnp
(bad)
aam
fld
pop
pop
xor
rcr
and
xor
push
aas
mov
xchg
ret
jle
mov
dec
ja
dec
jp
inc
sbb
jmp
jae
icebp
outs
addr16
jmp
mov
and
xlat
js
pop
or
cdq
sbb
and
xchg
call
and
sub
imul
iret
jmp
(bad)
cmc
push
inc
sub
shr
fs
movs
or
push
lea
shl
jbe
push
dec
mov
(bad)
div
and
fisttp
mov
test
xchg
or
pop
ret
xchg
pop
(bad)
stc
and
call
xor
lock
adc
jae
(bad)
arpl
mov
sahf
les
mov
jne
push
call
jne
iret
pushf
cmp
xchg
pushf
and
int
xchg
push
xlat
dec
jecxz
sbb
jp
and
mov
test
mov
xor
cli
xchg
out
pushf
push
xor
fidiv
xor
jns
jmp
lods
cmp
int
push
pop
not
ds
ins
out
enter
and
pop
sbb
fs
and
jmp
cli
dec
je
mov
in
mov
inc
adc
mov
xlat
mov
or
sahf
jae
aad
mov
jne
xchg
call
icebp
aas
mov
test
sbb
inc
inc
xchg
lock
jbe
and
fidivr
shr
inc
fidiv
popf
or
dec
or
mov
arpl
add
fldenv
(bad)
retf
add
rcr
mov
cmp
fsub
cmps
jb
push
stc
test
les
push
xchg
push
movs
loope
push
or
sar
rcl
leave
jle
outs
push
popf
clc
iret
mov
mov
les
pop
ror
ins
stos
ins
cdq
test
in
jge
sbb
dec
in
mov
cmp
shl
cmp
jle
loop
push
xor
jge
scas
adc
mov
mov
jne
jno
and
ss
mov
in
into
scas
shl
and
lods
movs
lea
hlt
pop
into
into
jp
neg
jns
aad
sbb
cmc
inc
stos
push
jmp
leave
rol
mov
in
lods
sub
push
cmc
stos
mov
or
jae
in
int3
sahf
data16
ret
or
sub
retf
add
stc
push
add
pop
outs
ins
(bad)
mov
or
mov
inc
xor
dec
xor
aam
or
sbb
popa
jae
out
and
adc
sub
mov
add
mov
cmp
inc
push
inc
or
(bad)
jb
jns
ret
sbb
test
jge
(bad)
mov
add
pusha
jns
fidiv
in
int3
sahf
push
aad
mov
xchg
or
retf
je
jp
add
(bad)
cmp
ins
div
test
test
ret
sbb
or
test
sbb
sbb
jg
hlt
xchg
clc
push
mov
sti
popf
jp
sbb
mov
and
pop
fiadd
cs
test
sbb
fnstcw
lahf
pop
xchg
cmp
ror
xor
adc
popf
sbb
pop
lds
xor
jb
fnstcw
xor
andps
imul
test
in
mov
hlt
inc
(bad)
inc
mov
dec
addr16
pop
adc
adc
jns
pop
icebp
adc
ins
pushf
dec
aaa
mov
out
dec
ret
jp
push
(bad)
(bad)
jns
mov
inc
sbb
(bad)
lahf
sbb
xchg
lea
sub
shl
cmp
clc
xor
xlat
xor
out
sub
out
xlat
xor
lea
sub
lds
xor
movs
xchg
fldenv
inc
jle
stc
popa
stc
push
jo
aam
stc
mov
add
cli
jne
pop
arpl
lods
xor
mov
and
fisubr
xlat
mov
nop
scas
xchg
push
rcr
jmp
xor
mov
xlat
jmp
dec
and
fidiv
push
loope
fistp
mov
in
shl
aaa
xor
int3
sub
inc
aas
xchg
or
popf
fistp
ret
scas
mov
hlt
push
sbb
in
mov
retf
pop
sub
jl
jl
push
pop
or
retf
out
cmps
addr16
shr
dec
mov
sbb
mov
test
xchg
les
push
fst
or
arpl
adc
jp
imul
lahf
in
test
jl
je
(bad)
sbb
lds
xor
and
dec
xchg
mov
jp
shl
popf
pushf
xchg
inc
(bad)
xor
test
sbb
ds
movs
sbb
hlt
int3
sub
test
jmp
add
(bad)
xor
cmp
ficomp
or
aaa
xchg
sbb
arpl
jg
push
test
or
xor
shl
addr16
cmp
cmp
lds
test
jo
repz
sahf
int3
in
push
out
hlt
outs
xor
dec
arpl
jmp
lds
fdivr
adc
(bad)
je
jno
ja
lods
es
mov
jns
pop
addr16
ja
cmp
in
xor
xchg
dec
dec
pop
jge
out
or
call
xchg
or
xor
call
addr16
pusha
sub
sbb
ret
or
push
cmp
push
adc
pop
add
aaa
inc
fsub
fstp
(bad)
sub
outs
push
fdiv
add
xor
inc
jae
fwait
push
js
nop
inc
push
pop
push
in
mov
inc
mov
fs
sub
arpl
push
xor
jo
xchg
clc
mov
lds
sub
mov
loopne
jne
sar
imul
and
push
ficomp
push
jle
mov
mov
rcr
sbb
fisttp
fucomi
jae
xchg
and
mov
popf
imul
and
in
lea
xchg
inc
xchg
mov
pop
(bad)
hlt
jmp
adc
jae
sbb
dec
in
mov
xor
popa
dec
mov
sub
loopne
dec
cld
sahf
shr
fwait
cmp
nop
hlt
or
dec
mov
shl
cwde
mov
(bad)
enter
retf
dec
xor
push
pop
in
jns
pushf
adc
imul
mov
dec
mov
lock
dec
stos
cmps
aas
inc
in
pop
and
fs
jle
pop
xor
in
push
pop
loopne
mov
retf
pusha
add
in
ja
sub
fcom
xlat
mov
jge
stos
sub
rol
fcomi
jo
cmps
push
std
jae
out
lods
lds
pop
aam
jge
aaa
pop
retf
sub
jl
ret
mov
rcr
inc
pop
push
xchg
out
mov
inc
outs
clc
je
mov
mov
mov
xor
xor
test
cdq
out
jg
mov
mov
and
fstp
push
imul
jns
pop
cmp
cmps
int
xor
gs
mov
movs
lds
mov
in
inc
push
int3
cmp
dec
inc
and
and
lods
fwait
imul
outs
popf
in
push
sahf
push
mov
add
push
jecxz
dec
jg
inc
test
or
lds
mov
inc
or
ror
out
mov
pop
ins
sahf
xchg
sbb
shl
sub
test
xchg
jns
jbe
mov
xor
call
push
xlat
push
dec
mov
pusha
clc
cmp
dec
sub
hlt
push
lds
inc
xchg
xlat
aas
push
call
mov
lock
add
lods
ja
aaa
stos
mov
jmp
sub
call
outs
mov
imul
mov
jmp
cmps
jp
or
xor
pop
shl
call
mov
or
adc
push
pop
fst
fsubr
dec
and
or
sbb
mov
xlat
cmp
sub
push
(bad)
and
xchg
scas
push
les
addr16
jne
jne
and
jmp
jl
push
test
xchg
loopne
clc
adc
movs
jb
push
mov
add
mov
sub
mov
mov
das
and
mov
retf
mov
adc
add
cmp
mov
add
loop
int3
xchg
xchg
lock
cmp
jae
test
out
das
mov
cdq
jg
ja
lods
inc
push
push
and
pop
ja
es
scas
les
mov
pushf
lock
pop
in
xor
int3
pop
sbb
cdq
es
mov
and
cwde
push
daa
shr
mov
mov
scas
sbb
and
(bad)
dec
jecxz
stos
sub
shl
pusha
cmp
dec
sbb
mov
or
je
mov
push
add
pop
imul
sbb
lods
cld
iret
mov
cmp
sar
adc
ds
push
sahf
in
lods
lea
and
mov
xchg
sbb
lahf
adc
popf
adc
gs
mov
inc
cmp
sbb
fstp
ja
jnp
and
or
movs
jmp
xor
mov
push
mov
cmp
mov
jge
mov
xchg
lds
fisttp
enter
push
in
(bad)
mov
pop
das
fstp
push
rcl
mov
dec
and
fwait
loopne
test
ins
jne
cs
data16
jae
(bad)
sahf
cmp
in
or
xchg
mov
int
adc
adc
imul
push
push
lods
push
movs
xchg
pop
mov
test
xchg
xor
mov
jp
inc
stos
fdiv
mov
test
pop
int
dec
adc
aam
sahf
int3
mov
es
pop
push
xchg
push
jae
and
movs
ror
cmp
(bad)
add
xchg
sbb
inc
or
sahf
add
xchg
dec
jbe
inc
test
or
lea
sub
call
test
out
sub
fidivr
inc
jmp
std
mov
shr
test
push
mov
cmps
dec
popa
xchg
test
cdq
int3
imul
cld
rol
push
pop
or
imul
js
pop
inc
fs
stc
sahf
js
out
nop
adc
sbb
shl
imul
mov
(bad)
xlat
aam
jne
rcr
sbb
mov
or
mov
or
mov
dec
and
and
nop
nop
inc
sub
mov
mov
and
fs
xor
stos
test
mov
xchg
sahf
call
test
(bad)
fsub
stos
or
dec
imul
mov
and
inc
loope
mov
jnp
retf
test
xchg
mov
or
add
mov
xchg
push
test
and
lea
and
in
sbb
aad
adc
mov
sahf
sbb
adc
shr
adc
jae
cmovl
mov
enter
push
in
xchg
nop
lea
imul
push
int
sbb
popf
test
push
dec
mov
cdq
push
fs
pop
push
xchg
push
je
mov
cmp
cmp
dec
rcr
xlat
cdq
mov
add
push
cmc
pop
enter
cmp
and
mov
outs
mov
jne
test
(bad)
out
fxch
dec
adc
and
test
inc
push
(bad)
mov
aas
xchg
les
jbe
stc
(bad)
adc
cmp
jp
ret
loopne
inc
imul
sub
in
inc
loope
ins
dec
out
out
add
mov
xlat
call
cmps
xor
mov
cmps
xchg
jbe
sbb
inc
setge
mov
xchg
inc
sub
jge
sbb
lea
arpl
dec
clc
stos
adc
jmp
push
cmp
cmp
sub
add
or
cdq
mov
mov
pop
rol
pop
leave
js
push
ja
xchg
cwde
jl
xchg
imul
imul
mov
jbe
xchg
daa
add
ret
xchg
fnstcw
cdq
cmp
sti
inc
mov
mov
in
cdq
xlat
mov
stos
jp
or
add
push
outs
lods
mov
cli
cmp
push
mov
enter
cmps
ins
xchg
lods
mov
sahf
sbb
or
xlat
stc
cmp
jmp
jmp
or
leave
(bad)
push
xor
xchg
dec
xchg
push
jno
loopne
add
jbe
rcr
in
rcr
mov
les
and
xor
inc
les
and
mov
lea
push
adc
rcl
or
shl
pop
xor
jle
popf
pop
inc
movs
add
pop
push
lods
sub
pop
js
js
mov
mov
dec
xchg
cmps
out
aaa
push
repnz
xchg
movs
ss
xor
fwait
mov
mov
add
xchg
mov
and
(bad)
inc
mov
(bad)
stos
fwait
push
mov
inc
ins
mov
pop
xor
xchg
sbb
cmc
dec
pop
repnz
add
and
mov
pop
push
ret
sub
cmp
ins
ret
sti
jbe
mov
inc
mov
push
mov
fwait
and
ins
mov
dec
popf
and
add
add
cmc
jnp
into
aad
dec
mov
mov
imul
pop
loopne
add
jbe
adc
movs
inc
(bad)
mov
or
fld
jns
cwde
iret
xchg
jns
and
fsubrp
and
mov
adc
cmps
gs
and
movs
imul
push
push
dec
mov
shr
jge
xchg
and
push
mov
test
add
bound
fs
stc
push
loopne
pop
push
test
int
jbe
pushf
push
aad
pop
jns
dec
imul
(bad)
push
sub
xlat
adc
sahf
stos
or
movs
iret
fnstenv
mov
sub
mov
mov
data16
xchg
push
je
fisub
mov
adc
jne
shr
(bad)
iret
and
int
inc
jae
fcom
push
nop
push
mov
ss
adc
fmul
xchg
jno
loopne
hlt
aad
popa
inc
hlt
pop
mov
int
or
mov
xchg
imul
jne
iret
test
or
jns
cmps
xor
shl
(bad)
ror
pop
inc
into
and
movs
jae
fdivr
mov
nop
repz
data16
push
test
dec
dec
pop
js
aaa
xor
jne
inc
test
mov
pop
xchg
dec
push
cmp
pop
pop
mov
dec
cld
call
mov
ret
outs
dec
outs
fwait
and
push
mov
xchg
pop
shr
adc
dec
cmps
pop
movs
push
les
lahf
or
out
push
lods
sub
push
dec
cmps
ds
or
add
mov
sbb
push
in
cmps
jo
icebp
scas
dec
adc
pop
mov
push
and
cmp
mov
mov
gs
int
or
jae
clc
mov
or
jnp
into
in
or
je
or
jmp
dec
test
jle
jno
mov
inc
test
std
jecxz
in
or
dec
cmps
fimul
fsubr
sub
aad
pusha
push
lea
pusha
imul
mov
mov
fld
je
sbb
push
xchg
fist
lods
or
test
neg
jle
push
add
pusha
dec
xor
and
outs
jno
ja
popf
add
mov
test
mov
push
mov
dec
in
gs
or
cmps
enter
aas
mov
dec
loop
jno
mov
push
sahf
nop
xchg
lea
jl
pop
fcomp
mov
in
ss
gs
imul
sahf
nop
nop
imul
aam
or
xchg
ins
mov
ficom
pop
scas
pop
pmaxsw
mov
ins
aad
leave
fwait
adc
mov
push
pop
call
std
pusha
jmp
scas
mov
dec
mov
xor
mov
pop
test
bound
xchg
xchg
fwait
jmp
mov
push
push
and
mov
shl
jl
push
add
xor
jo
retf
test
add
jne
rcr
stos
iret
pop
mov
ins
and
xlat
and
and
test
jnp
into
mov
(bad)
xchg
xor
cdq
loopne
add
ins
ds
test
cmps
or
lahf
stos
daa
mov
adc
xchg
ds
je
mov
fisub
add
popa
and
lea
inc
ins
sub
ins
pop
pop
fst
fimul
jecxz
cmp
sub
jne
repnz
or
dec
push
stos
(bad)
retf
dec
outs
popa
loopne
mov
lods
lahf
inc
jae
pop
sub
cmps
rcr
shl
in
test
and
popf
iret
ds
fimul
gs
jmp
pushf
pusha
(bad)
movs
aas
lea
into
sbb
inc
je
fild
xor
push
adc
sbb
imul
jae
adc
fmul
enter
jne
data16
mov
dec
gs
fcomp
push
fcom
mov
ss
pop
imul
cwde
add
jbe
shl
iret
ins
mov
ins
cmc
pop
test
mov
and
jl
int
or
pop
push
adc
and
or
call
ins
fstp
xlat
leave
sbb
jne
adc
or
mov
aam
xor
test
mov
inc
enter
inc
jb
loopne
or
add
mov
jl
into
pop
or
fcmovnb
pop
push
cmp
mov
nop
and
add
jne
sub
rol
jbe
shl
inc
ins
gs
or
stc
sbb
add
and
into
inc
or
jae
fstp
adc
daa
and
jge
or
add
call
push
imul
add
loopne
add
aad
iret
jmp
jmp
xchg
push
loope
iret
gs
ins
xor
xlat
inc
sub
in
pop
push
push
es
nop
movs
ss
popa
fadd
fadd
sub
test
pop
sbb
push
xor
cmc
push
(bad)
cmp
pushf
jmpw
push
or
mov
movs
xlat
push
or
int
or
xchg
fsub
push
fcom
mov
nop
lds
js
xchg
sbb
mov
movs
mov
ins
jns
sbb
imul
or
fdivr
pop
push
int3
push
push
mov
nop
mov
dec
shr
sub
aad
cwde
add
in
int
aad
mov
mov
jne
mov
mov
rcr
mov
(bad)
pop
or
jbe
mov
dec
xchg
add
jbe
shr
test
add
cmp
or
jnp
int
or
je
fneni(8087
inc
push
dec
push
cmc
mov
nop
xor
sbb
rol
jo
push
push
mov
pop
add
jbe
rol
push
jbe
scas
je
pop
dec
enter
js
dec
scas
sar
push
push
pop
mov
mov
inc
std
xor
test
push
cs
lock
sbb
sub
pop
hlt
(bad)
movs
sub
push
and
pop
pop
shl
mov
dec
mov
imul
repz
mov
adc
in
std
test
jno
fist
aad
ror
test
xchg
mov
or
mov
pop
pop
(bad)
lds
and
and
loopne
or
clc
shl
aas
arpl
sub
cdq
jl
int
or
cdq
push
and
mov
mov
or
mov
pop
iret
inc
popa
adc
leave
fwait
loopne
and
mov
or
imul
iret
jl
enter
je
mov
mov
mov
leave
in
pop
mov
js
cmc
xchg
inc
and
mov
xchg
pop
or
test
ins
popf
pop
jo
inc
lahf
mov
add
ins
adc
pop
jne
pop
jns
je
pushf
mov
mov
and
pop
jl
int
or
dec
fsubr
pushf
js
popa
fsub
lock
jne
pop
push
mov
dec
sahf
je
cmp
inc
jl
leave
or
and
leave
xchg
xlat
adc
jbe
shl
mov
xchg
loopne
add
cmp
xchg
mov
ins
rcr
add
and
cmp
dec
or
stc
fist
push
jle
loope
sahf
nop
or
fisub
imul
enter
pop
imul
add
dec
add
jbe
rol
dec
ins
mov
xchg
xlat
stc
xor
test
add
lahf
(bad)
(bad)
push
xor
xchg
or
test
test
fs
adc
imul
pop
jno
cmps
mov
xor
loopne
add
lods
iret
or
loope
and
push
lods
stc
mov
mov
imul
mov
pop
mov
add
jbe
into
jmp
mov
sub
xchg
jne
nop
enter
xchg
sahf
ins
push
jno
push
and
push
and
out
movs
add
mov
jns
cmp
or
mov
ins
aas
push
mov
out
imul
dec
jae
xlat
pop
dec
pop
or
fisttp
test
xchg
push
sbb
inc
call
das
cmps
shl
and
inc
loopne
add
fcomp
pop
rcl
add
and
adc
into
sub
fidiv
out
jbe
inc
sub
push
push
rol
es
push
ss
ss
(bad)
fld
dec
cmp
sbb
in
sub
push
ja
xor
mov
pop
ss
add
xor
xor
mov
push
ss
inc
dec
and
in
and
aas
(bad)
xchg
gs
leave
cmp
(bad)
and
sbb
jb
push
shl
into
add
sbb
leave
bnd
push
ficom
dec
(bad)
cmc
mov
dec
pop
(bad)
mov
sub
sbb
jl
jb
sbb
js
fmul
xchg
xchg
pop
push
test
fsub
into
addr16
aad
out
js
mov
and
test
dec
test
test
test
and
mov
or
pop
push
jmp
adc
jo
mov
movs
push
fstp
idiv
xor
mov
cmps
sub
push
(bad)
rol
mov
ffree
mov
call
repnz
sub
mov
mov
sbb
xchg
shl
mov
dec
sbb
call
cmps
mov
inc
lea
lods
push
adc
mov
inc
ret
out
mov
mov
stos
bound
or
mov
outs
scas
dec
mov
adc
sar
movs
mov
mov
test
ret
mov
pop
fstp
out
gs
outs
mov
fcmovnbe
adc
cmp
jnp
loopne
repz
mov
mov
jbe
pop
div
mov
int3
dec
dec
mov
into
xor
scas
mov
cmp
push
sbb
(bad)
int3
and
and
xor
punpckhbw
jnp
rol
push
mov
mov
test
push
jns
and
sub
andnps
mov
xchg
or
mov
loopne
or
adc
mov
mov
inc
call
or
test
xchg
test
xor
scas
inc
inc
pop
nop
mov
or
lods
fsub
fcom
arpl
pop
adc
test
ds
addr16
and
add
xchg
adc
ja
dec
(bad)
fisubr
outs
(bad)
fstp
mov
fwait
dec
sahf
cmp
or
add
ins
dec
lock
inc
in
dec
adc
sbb
push
mov
xor
jl
cli
mov
cwde
(bad)
in
fwait
jae
enter
adc
lods
test
call
scas
int
icebp
xor
repnz
adc
push
jl
cmp
js
leave
sti
aad
pop
retf
inc
and
dec
std
inc
xchg
out
cmp
mov
sub
mov
inc
sub
je
xchg
retf
sub
lea
pusha
push
test
in
aad
xchg
sbb
xchg
test
movs
dec
dec
retf
push
inc
cmp
sti
mov
lock
(bad)
sbb
dec
mov
jb
xor
push
mov
movs
sbb
outs
jne
jmp
mov
inc
aaa
jbe
fdivr
fisttp
cli
and
jns
xchg
jmp
out
adc
das
fadd
popf
and
jo
push
mov
jnp
mov
adc
cwde
mov
pop
cmp
mov
cmps
hlt
addr16
sub
inc
iret
adc
pop
popa
loopne
call
stc
out
das
hlt
test
xor
pop
pop
add
aaa
nop
loopne
(bad)
out
push
stos
movs
mov
pop
inc
mov
xlat
xchg
jno
sub
jbe
and
cmp
pop
xchg
lds
ret
sub
lods
pop
cmp
and
or
movs
sub
cwde
sub
cwde
push
sub
icebp
inc
sbb
xchg
and
daa
enter
xchg
inc
int3
iret
dec
mov
in
xchg
sub
adc
and
aad
push
mov
xchg
or
in
xchg
int3
sub
inc
cmp
shl
fcmovbe
scas
add
mov
test
xchg
jne
popa
sahf
out
xchg
fidiv
dec
(bad)
fs
mov
push
loopne
retf
cmc
adc
dec
inc
movs
mov
adc
sub
dec
sbb
movs
in
out
ds
jne
mov
jmp
test
and
xor
adc
add
mov
inc
mul
mov
lea
test
cmps
push
mov
adc
push
pop
std
int
pushf
and
xor
cmp
mov
xor
popf
sbb
pop
jecxz
scas
mov
fdivr
mov
push
cmp
iret
aaa
ins
inc
push
cwde
sahf
fwait
jmp
adc
repnz
test
sub
out
mov
neg
jbe
pop
pop
cmc
jmp
(bad)
ss
pusha
sub
mov
sbb
xchg
xchg
out
cmp
retf
dec
out
fld
inc
scas
dec
js
push
xor
lock
mov
xchg
mov
xlat
ds
loop
pop
pop
xchg
and
add
repz
movs
ss
cmp
mov
add
pop
or
pop
adc
ins
xchg
cmp
inc
mov
xchg
arpl
xchg
sbb
loop
adc
push
inc
inc
in
add
mov
in
xchg
call
sub
cdq
xchg
mov
mov
or
scas
adc
inc
(bad)
mov
inc
and
xchg
daa
inc
daa
(bad)
es
das
dec
loop
mov
adc
xchg
cmp
out
stc
jge
int
xchg
push
cwde
scas
xchg
pop
jge
inc
aam
mov
and
inc
xor
cmps
xchg
jmp
cmc
mov
pop
dec
xchg
pop
push
cmc
xchg
mov
cmp
ds
(bad)
cmp
or
dec
dec
out
int
cmp
sub
cwde
(bad)
cmp
(bad)
pop
dec
test
das
xchg
shr
ja
shl
iret
or
in
mov
ret
sti
jno
jb
inc
int3
xchg
dec
ds
cdq
aaa
jns
inc
scas
out
jbe
fwait
inc
out
xchg
pop
mov
mov
imul
ror
imul
push
imul
mov
jbe
push
xchg
xor
fdivr
push
sbb
imul
add
push
xchg
sbb
int
push
pop
cmp
pop
cmp
mov
outs
ret
and
das
arpl
sbb
jb
xchg
xchg
inc
push
sub
add
dec
mov
dec
repnz
cmp
xchg
mov
int3
adc
nop
mov
sbb
call
mov
jp
fadd
nop
fstp
movs
mov
int3
add
xchg
pop
mul
js
jecxz
mov
jmp
pop
cmc
es
add
cmp
add
jge
lods
cmps
ds
dec
mov
imul
mov
mov
xor
in
aam
movs
jns
xor
and
lods
and
outs
ficom
js
hlt
movs
lods
xlat
jns
ins
call
fidiv
mov
or
mov
imul
sbb
xor
sbb
ins
popf
xchg
pushf
aad
mov
fst
jp
int3
dec
xchg
sbb
rcl
jecxz
adc
movs
or
gs
fild
sahf
adc
xchg
loope
nop
movs
dec
mov
inc
cs
je
sub
mov
jb
or
enter
push
push
in
loope
push
sbb
cmp
fcomp
and
js
xchg
mov
aad
sbb
(bad)
outs
rcl
mov
gs
mov
jl
aam
je
out
cmp
stos
pop
mov
les
pop
cdq
xchg
dec
jo
enter
mov
lods
jns
out
xchg
mov
icebp
xor
add
cld
cmps
movs
xchg
test
cld
xchg
nop
dec
mov
fimul
int3
mov
mov
int
push
jp
mov
dec
and
cwde
xchg
retf
nop
ret
push
push
dec
mov
imul
pop
cmp
push
shl
dec
pop
add
push
lds
fwait
enter
add
mov
loopne
mov
ds
sbb
xchg
mov
inc
sub
dec
nop
xchg
pop
test
xchg
aam
pop
mov
lahf
in
xchg
mov
xchg
or
and
push
sbb
jl
fnstenv
lods
sub
push
mov
push
mov
jnp
jp
jb
sbb
clc
xlat
mov
jae
inc
and
sub
mov
cmp
add
and
call
jns
js
fs
outs
es
sbb
hlt
int
xchg
adc
push
xchg
push
nop
scas
call
int3
xor
cmp
jecxz
cld
add
add
push
add
lds
pop
loope
jge
dec
cdq
xor
mov
test
mov
adc
out
jno
test
sub
imul
int
inc
lods
les
pushf
idiv
clc
mov
adc
xor
popa
outs
cmp
fwait
test
loop
out
pusha
adc
mov
jmp
sbb
loopne
movs
mov
or
cwde
fwait
adc
mov
jbe
outs
xor
xor
push
loop
mov
dec
ror
ja
mov
fbstp
dec
bound
(bad)
cwde
(bad)
mov
xor
mov
rol
out
fnstcw
or
(bad)
mov
pop
mul
shl
push
dec
(bad)
data16
sub
(bad)
call
popf
jg
push
mov
mov
int
and
xchg
add
inc
pop
ss
and
sub
dec
push
test
cmp
mov
jae
or
adc
jno
test
sbb
cmp
loopne
mov
ret
mov
or
call
loope
movs
stc
je
nop
push
mov
mov
aad
and
ret
sub
and
std
rol
jecxz
and
xchg
nop
or
mov
call
shl
aad
in
lahf
dec
push
lds
repnz
adc
pop
mul
jle
test
add
xor
and
lods
sub
adc
xchg
fadd
push
add
cmps
pop
xchg
mov
push
push
fnsave
cmp
push
and
add
outs
call
mov
sbb
mov
cwde
inc
pop
ins
mov
stc
cwde
sbb
jge
cwde
int3
(bad)
js
cmc
inc
cmp
sub
jbe
cmps
mov
xor
and
push
xor
into
inc
push
test
fist
mov
loope
mov
jbe
in
ins
iret
inc
fwait
inc
ins
push
sahf
and
xchg
clc
push
or
out
cwde
or
gs
das
ins
test
dec
cld
xchg
push
mov
mov
xchg
lahf
(bad)
pop
mov
pop
mov
or
pop
mov
lea
arpl
icebp
pop
sbb
popf
fcomi
dec
fwait
ror
fwait
stos
call
or
inc
push
mov
mov
shld
dec
xchg
jae
mov
lea
scas
mov
outs
mov
inc
inc
inc
leave
pop
sub
pop
mov
(bad)
xchg
cmp
jne
dec
nop
xchg
mov
xchg
pop
fimul
sti
retf
cmps
xor
aaa
pusha
pop
dec
jns
add
jmp
sub
(bad)
aad
mov
pop
fmul
rol
rol
xchg
xchg
aam
fs
cwde
lods
(bad)
retf
test
push
adc
cdq
xchg
and
ret
or
jge
movs
ss
cdq
jne
ret
jne
pop
movs
into
and
test
retf
mov
lahf
mov
aas
mov
mov
movs
lds
jo
pop
pusha
(bad)
xchg
stc
movs
fdiv
xor
ss
cmp
cmps
and
popf
cmp
inc
das
xchg
mov
dec
fwait
leave
outs
mov
mov
call
inc
cmp
lahf
xor
sbb
jmp
adc
scas
sub
out
push
sbb
adc
jp
je
stos
cs
fwait
movs
push
cmp
mov
pop
inc
dec
and
push
and
jp
adc
mov
aam
sub
push
sub
sbb
and
cmp
js
(bad)
cmp
jmp
and
and
int
adc
test
sbb
xor
mov
mov
clc
inc
es
push
cmc
data16
mov
xchg
ror
outs
cmp
push
push
pop
fmul
call
test
hlt
pop
clc
sub
add
or
jmp
jb
and
test
adc
inc
sbb
stos
inc
or
icebp
inc
imul
stos
inc
test
jl
pop
ins
mov
cli
fldl2e
jns
fldenv
movs
ds
pop
sub
int
or
xor
xchg
das
or
lea
pushf
retf
adc
ja
in
fist
stos
(bad)
or
dec
cli
push
dec
xor
xchg
and
daa
mov
and
and
aad
adc
iret
loopne
ja
push
gs
mov
ja
dec
push
cmp
int3
dec
dec
xor
movs
out
jbe
jle
lods
mov
mov
retf
dec
es
cmp
addr16
fist
mov
cld
mov
popf
mov
add
inc
xchg
repz
cs
jge
sub
mov
out
push
int
icebp
data16
xchg
or
add
stc
in
sbb
loop
sets
inc
push
pop
sti
cs
call
push
gs
fisub
outs
test
movs
call
mov
(bad)
xlat
mov
xor
dec
fcomp
push
and
and
fs
adc
mov
jno
inc
adc
sbb
adc
mov
inc
inc
jbe
out
xlat
mov
fsubr
lahf
jecxz
movs
(bad)
or
mov
add
or
push
and
aaa
call
xchg
cwde
sbb
sub
movs
int
dec
rcr
push
mov
xchg
dec
xlat
push
mov
mov
mov
jge
test
div
pop
leave
outs
mov
and
xchg
adc
jb
arpl
nop
sti
scas
mov
inc
movs
sbb
lods
(bad)
enter
shl
ret
daa
lahf
adc
out
pop
idiv
daa
pop
repnz
push
lods
arpl
xor
(bad)
push
cmp
mov
inc
cmc
and
or
iret
js
dec
xor
ret
xor
cmp
mov
xchg
cli
(bad)
loope
mul
or
aaa
pusha
call
jl
xor
dec
xchg
xor
cmp
fdivr
nop
mov
sub
adc
inc
dec
push
push
and
pop
fist
add
inc
push
dec
(bad)
repz
call
xchg
(bad)
rol
in
fnstenv
and
cwde
scas
xchg
stos
loopne
xchg
mov
mul
popa
cwde
call
cmps
imul
ret
inc
pop
xchg
cwde
dec
call
fmul
out
clc
icebp
add
ror
es
scas
movs
jno
popf
repz
ja
cdq
aad
fdivr
scas
xor
jae
add
iret
cmp
mov
dec
sbb
movs
xchg
inc
stc
xor
xor
xchg
or
setl
or
cmp
xchg
cwde
enter
sub
inc
adc
cmc
nop
mov
pop
lods
xchg
cwde
pop
movs
mov
aad
xor
(bad)
daa
mov
pop
jge
sub
iret
mov
cwde
sbb
and
xchg
mov
addr16
int
out
dec
sub
(bad)
mov
mov
jp
enter
pop
sub
mov
iret
sub
adc
pop
mov
outs
push
xor
xor
outs
ja
inc
pop
dec
push
or
dec
cmps
xchg
xchg
push
push
daa
movs
mov
pop
call
movs
xor
data16
pop
retf
pop
cwde
cmp
aam
data16
mov
sbb
pop
(bad)
cmp
dec
(bad)
jno
pop
pop
es
movs
xor
scas
jns
cdq
ficomp
dec
jno
(bad)
cmp
mov
movs
mov
ret
sub
inc
inc
cmp
ret
mov
mov
fld
imul
gs
cwde
aas
inc
sbb
movs
fwait
and
repz
sbb
pop
sti
pop
cmps
dec
js
adc
mov
mov
dec
mov
push
lock
add
test
std
(bad)
mov
mov
mov
xchg
push
(bad)
bt
jne
repnz
retf
mov
lods
inc
out
pop
add
mov
inc
and
dec
and
xchg
icebp
aas
xchg
mov
fstp
in
(bad)
js
sub
cmc
or
fisttp
movs
mov
xchg
inc
bswap
fst
sub
add
jne
fnstsw
inc
cmp
aad
sahf
mov
dec
popa
fild
into
push
adc
adc
les
inc
mov
movs
int
jne
push
mov
inc
es
sti
popa
int
loopne
jns
movs
jo
xchg
not
push
aas
mov
addr16
fistp
sbb
push
stc
xor
mov
retf
or
sahf
cld
shl
push
push
cwde
jg
dec
cdq
enter
inc
xor
lea
clc
addr16
jbe
fs
or
dec
cmp
loope
inc
cmp
fld
or
movs
in
jg
pop
int
inc
test
in
sbb
scas
jbe
out
in
xchg
mov
mov
mov
and
movs
stos
dec
xchg
xchg
or
mov
fisttp
pop
pop
movs
cmp
xchg
mov
mov
sbb
fimul
cdq
sub
xchg
fld
sub
movs
in
xchg
push
mov
das
or
repz
mov
jmp
push
pop
cmp
mov
test
cmp
mov
sbb
loopne
dec
mov
cmps
sbb
push
stos
dec
rcl
pop
arpl
mov
movs
cmp
cwde
push
mov
mov
aam
cmc
test
push
je
daa
not
push
mov
xor
lods
pusha
xchg
add
aam
cwde
loopne
in
out
push
inc
add
push
sbb
data16
pop
mov
xchg
mov
shr
mov
mov
enter
pop
xchg
xchg
cmp
ja
or
arpl
add
lock
mov
adc
mov
inc
ins
inc
cwde
les
ins
rcl
jmp
and
data16
push
call
cli
xchg
push
sbb
sti
jbe
repz
out
sbb
mov
dec
mov
push
movs
or
pop
cmp
sub
out
dec
test
jne
add
(bad)
fldcw
inc
xchg
movs
xchg
cmp
xchg
and
mov
add
sbb
ret
lock
cwde
(bad)
(bad)
fstp
xchg
retf
adc
inc
cwde
xchg
sbb
jmp
shl
iret
cdq
mov
ficomp
imul
cmp
jecxz
mov
in
lds
es
lock
xchg
xchg
fstp
or
test
int3
(bad)
scas
sub
ins
mov
out
xor
scas
sbb
lock
shr
cwde
arpl
sti
popf
xchg
mov
movs
dec
cdq
faddp
dec
movs
xchg
jnp
xchg
xchg
add
test
cdq
lods
sbb
cmps
mov
dec
inc
inc
cmp
xchg
outs
push
aas
mov
paddd
pop
sbb
sbb
cmc
js
mov
mov
outs
dec
push
or
repz
repz
fbld
adc
into
mov
sbb
cmp
xchg
dec
outs
int3
xchg
ret
fwait
loope
lock
leave
mov
inc
stc
push
sahf
dec
out
mov
not
sub
imul
dec
lods
cmps
push
inc
pop
inc
retf
mov
dec
scas
les
movs
ret
enter
push
cwde
iret
inc
jl
pop
cmp
dec
scas
repnz
pop
repnz
jmp
rol
push
inc
neg
sub
movs
mov
and
vpminub
cmp
js
and
adc
cmp
add
mov
pushfw
clc
dec
push
push
push
es
test
jp
mov
leave
fldcw
mov
cwde
add
and
imul
ss
mov
lahf
mov
push
int
outs
sbb
mov
cmc
fcomp
(bad)
mov
clc
xchg
inc
out
sbb
adc
call
jecxz
xor
movs
mul
xchg
inc
pop
dec
in
sahf
call
push
fwait
test
mov
and
add
jl
push
fbld
and
xor
fild
pushf
movs
push
xor
pushf
dec
and
sbb
xor
and
and
(bad)
xlat
movs
mov
and
jp
cmps
adc
jmp
mov
shl
dec
pop
fisttp
shl
inc
jge
cmp
adc
cmc
fwait
cwde
es
clc
movs
push
sub
dec
adc
inc
loop
cli
test
xchg
(bad)
lods
movs
fist
call
out
dec
sahf
cmp
dec
mov
and
add
inc
and
das
pop
mov
cmps
arpl
sbb
das
fldl2t
and
add
sbb
sbb
pusha
stos
sbb
js
gs
sbb
mov
or
fiadd
mov
jnp
ins
add
lahf
add
push
push
pop
push
into
dec
lods
lahf
jae
shl
scas
inc
ja
movs
data16
and
ret
sbb
(bad)
call
or
dec
out
xchg
into
(bad)
not
int3
retf
inc
mov
adc
add
(bad)
mov
cwde
loop
and
std
mov
dec
retf
jecxz
xchg
ret
pop
xchg
dec
sub
inc
inc
inc
xchg
movs
xor
jp
sti
das
mov
xchg
dec
adc
or
jp
rcr
push
dec
sbb
das
pop
test
enter
xor
das
or
loope
mov
js
in
movs
stos
cmps
and
cmp
std
aam
sub
jmp
div
imul
lods
dec
jge
mov
fs
imul
test
je
mov
mov
test
jp
out
sbb
ret
jg
sub
mov
out
ins
and
movs
jmp
add
hlt
cmp
sub
and
lea
xor
(bad)
jnp
mov
aaa
jnp
cmp
pusha
popf
das
mov
mov
test
cmp
dec
dec
cmp
std
xchg
gs
fs
push
push
push
cmc
jmp
dec
xchg
rol
loope
dec
sar
push
cmps
or
ss
aad
out
mov
test
movs
dec
xlat
call
cwde
cwde
dec
loope
push
sub
sub
or
mov
mov
pushf
loopne
ror
sub
pop
xchg
ja
jno
test
pop
mov
xor
inc
xchg
js
dec
jo
dec
dec
pop
dec
cdq
xlat
out
nop
into
xchg
xor
jne
loope
outs
fldenv
cmp
loope
mov
dec
movs
daa
mov
nop
jno
push
xchg
cmp
es
shl
mov
pusha
mov
stc
js
cwde
pop
mov
pop
(bad)
mov
or
stos
aaa
push
mov
sub
aam
rcr
jecxz
inc
inc
cmc
or
dec
fdiv
or
call
inc
ror
mov
outs
lds
fbld
(bad)
popf
dec
loopne
pusha
dec
test
pop
shl
addr16
xchg
or
daa
sahf
and
test
and
cmps
dec
mov
cmp
lock
or
(bad)
int3
aad
fxch
jnp
into
inc
fisubr
sub
jmp
xchg
push
pop
dec
shr
outs
adc
push
adc
cwde
push
cmc
and
xchg
or
mov
add
repnz
sub
xor
cmp
pop
add
add
movs
inc
stc
jns
add
fs
jl
adc
cwde
push
jbe
inc
dec
inc
push
loopne
sbb
(bad)
fxch
addr16
push
jp
push
pop
xchg
inc
mov
daa
stos
push
clc
in
xor
int3
add
or
(bad)
out
inc
popf
out
cwde
aas
inc
aam
jle
mov
add
inc
xchg
adc
cld
xchg
int3
pop
push
test
ins
inc
mov
data16
pop
cwde
mov
push
cmp
les
and
inc
aad
sahf
fcom
daa
xor
cmp
adc
pop
stos
cli
xchg
test
cmp
and
jnp
les
outs
lahf
mov
scas
pusha
adc
dec
int3
out
xchg
jp
ds
in
cmps
dec
mov
jb
shl
xchg
adc
and
jns
pop
sbb
fs
fbstp
daa
xchg
mov
scas
sbb
or
enter
jl
or
xchg
jbe
inc
xlat
pop
mov
sub
push
jmp
aas
lods
xchg
cmc
sub
movs
inc
mov
pushf
scas
test
mov
pop
movs
hlt
(bad)
lock
pop
scas
adc
or
or
pop
and
pop
sbb
or
jo
pop
adc
sbb
pop
pop
sbb
mov
inc
lahf
dec
push
ins
mov
add
imul
sahf
xchg
jns
pop
jo
fisttp
xchg
and
xor
ins
sbb
inc
xchg
jecxz
dec
pop
movs
sbb
test
fiadd
mov
icebp
cdq
or
or
dec
(bad)
mov
push
xchg
mov
add
dec
or
mov
mov
xchg
dec
mov
loop
enter
movs
jne
outs
add
arpl
fisub
bound
sbb
cli
lods
jmp
push
scas
cwde
scas
loopne
test
fld
push
in
cli
push
xchg
push
in
adc
inc
jb
lock
lea
xchg
lds
imul
and
int
adc
mov
mov
pop
mov
rcr
cwde
adc
cmps
call
in
cmps
imul
inc
cmp
arpl
cmp
adc
sub
test
jbe
jbe
adc
std
or
lea
sbb
popa
ins
shl
mov
leave
xchg
dec
and
sub
jns
add
dec
mov
outs
add
sahf
xor
fs
movs
leave
xchg
push
mov
push
pop
dec
fst
dec
mov
fbld
mov
inc
inc
cwde
addr16
and
xchg
inc
add
call
sbb
add
adc
ret
sbb
push
pop
xor
scas
sahf
rcl
lods
aam
inc
pusha
inc
add
lea
pop
inc
cwde
ins
jmp
push
out
clc
dec
lods
outs
adc
sbb
test
(bad)
int
pop
push
jle
lahf
popa
(bad)
pop
pop
cmc
xchg
pop
push
movs
sbb
xchg
dec
xchg
fsub
sahf
fidiv
in
cmp
pop
mov
gs
shl
jl
aad
gs
movs
mov
sub
int
mov
aaa
scas
jne
dec
bound
jb
xchg
sbb
ret
aam
movs
outs
out
fidiv
pop
xor
add
mov
push
lahf
scas
ret
icebp
sub
jl
jle
dec
xchg
outs
ret
mov
inc
cmp
and
jmp
in
inc
and
mov
mov
mov
movs
scas
push
nop
sar
mov
inc
out
ja
test
mov
bound
jbe
inc
sub
sub
aam
sbb
push
dec
iret
or
(bad)
sub
cmp
es
add
and
push
dec
xchg
aad
sub
cdq
xchg
mov
dec
aam
sub
cmp
cmp
cmp
rcl
test
or
mov
in
jno
xchg
mov
and
push
cmc
test
pop
pop
cmp
and
mov
cli
inc
movs
test
adc
mov
xchg
not
sub
stos
aad
mov
xor
dec
jmp
ret
nop
mov
jecxz
call
pop
adc
test
add
pop
jmp
push
pushf
mov
dec
imul
adc
fadd
or
movs
stos
(bad)
push
adc
jge
pop
xchg
pop
jb
dec
in
add
enter
or
das
mov
inc
movs
adc
xor
ds
push
mov
leave
jo
dec
frstor
dec
sti
aam
ret
or
ins
js
and
mov
mov
ds
enter
xchg
pop
push
ror
ja
adc
mov
add
scas
cwde
clc
das
es
push
inc
sub
dec
dec
jns
xchg
out
inc
sbb
lods
outs
retf
movs
out
xor
out
fsubr
inc
cwde
dec
inc
cld
sti
mov
(bad)
ds
popf
push
add
pop
add
sbb
mov
jmp
int
lock
xchg
add
outs
test
movs
test
push
mov
xchg
push
dec
cld
(bad)
scas
cmp
aad
sti
dec
fisub
gs
jecxz
dec
push
loop
jno
pop
mov
enter
stos
ror
jae
out
pop
int
lock
xchg
xlat
cdq
inc
imul
mov
(bad)
xchg
mov
sub
xchg
dec
fst
mov
int
mov
lock
and
and
xchg
jge
mov
pushf
jecxz
(bad)
icebp
or
nop
inc
ret
lea
lods
sbb
cdq
dec
retf
div
jmp
cmp
cmp
mov
mov
xor
gs
pop
and
movs
test
test
mov
ffreep
sub
shl
cld
clc
pop
int3
sbb
inc
das
mov
cs
inc
mov
test
xchg
dec
fisttp
not
and
mov
adc
cwde
pop
or
cmps
movs
retf
mov
mov
cwde
pop
cmp
jecxz
mov
leave
mov
mov
gs
and
cmp
loopne
xchg
xor
xchg
jle
clc
movs
retf
xchg
xchg
pop
ret
cmp
test
cli
mov
or
adc
pop
and
fnstcw
push
clc
std
sbb
inc
aam
js
test
and
in
pop
cdq
xor
sub
mov
inc
xchg
xchg
push
add
hlt
aaa
mov
xchg
std
mov
dec
push
movs
mov
push
xor
add
mov
xchg
dec
push
das
sub
ret
cwde
mov
lahf
pop
mov
adc
lahf
ror
test
clc
xchg
xchg
imul
inc
push
movs
inc
stos
lds
push
pop
lods
cwde
push
fmul
or
inc
or
and
pop
es
enter
sbb
ss
mov
fldcw
outs
fcom
call
add
mov
dec
fs
in
ss
sub
or
(bad)
xor
push
mov
push
and
popa
and
into
xchg
enter
sub
cmp
dec
cmc
xor
dec
lds
lods
mov
cmps
sub
cwde
pop
dec
mov
jns
mov
test
shl
nop
pushf
(bad)
out
jne
outs
xor
ja
pop
fwait
xchg
dec
fxch
xor
movs
call
jl
retf
les
cmp
rcl
test
lahf
push
sub
cmps
shl
xor
stc
mov
xor
jle
xchg
movs
mov
sub
sbb
jmp
popf
inc
jl
loope
jle
add
xchg
in
data16
aam
dec
div
mov
js
push
arpl
fldenv
push
pop
add
repz
xor
fcom
outs
pop
dec
aad
add
or
jae
and
dec
and
mov
cs
dec
inc
pop
jo
cli
sub
mov
sti
sub
rol
inc
mov
gs
jbe
xchg
into
mov
dec
movs
cdq
add
sbb
jp
popf
pop
xor
loop
sti
or
push
sbb
or
cmps
outs
jmp
rcr
enter
gs
movs
scas
inc
test
repnz
fist
in
and
inc
dec
jge
fild
mov
mov
bound
inc
movs
sub
mov
fld
dec
cdq
inc
aad
xor
jbe
aad
nop
ins
xchg
adc
dec
sub
sbb
xchg
das
mov
sar
mov
mov
cwde
imul
and
mov
js
sub
jb
push
popa
(bad)
mov
inc
mov
(bad)
sub
test
dec
xor
xlat
xchg
and
lahf
push
dec
je
aaa
cmps
shl
push
adc
loopne
rcl
jo
push
xchg
les
fild
mov
push
jmp
bound
pop
add
lods
clc
(bad)
mov
push
push
aam
xchg
out
jg
(bad)
xor
jno
adc
pop
mov
xchg
cmps
daa
mov
dec
movs
jecxz
mov
xchg
or
fstp
dec
xchg
es
ffree
or
repnz
and
jno
xchg
int3
rcr
movs
leave
test
in
mov
mov
fadd
push
aaa
stos
call
loope
adc
pop
movs
and
shl
or
idiv
dec
mov
repz
iret
mov
lea
cmp
inc
(bad)
push
or
(bad)
dec
fdiv
mov
jge
pop
xchg
xor
ds
xor
inc
loop
ds
mov
xchg
cdq
and
retf
push
ficom
rol
sub
sbb
inc
adc
cmp
fist
adc
retf
pop
pushf
dec
mov
inc
fs
stos
sahf
ror
mov
ins
movs
pop
test
sbb
fadd
fisttp
stc
pop
sahf
xchg
iret
xchg
mov
ins
(bad)
pop
mov
mov
mov
adc
xchg
ret
or
xchg
mov
movs
mov
dec
popa
cmc
sub
ret
cmp
inc
nop
add
pop
out
ficomp
jne
push
mov
jbe
mov
jge
xlat
lods
push
cdq
inc
jo
test
xchg
loope
add
jg
xchg
pop
sub
das
and
mov
mov
bound
xor
add
dec
xchg
sub
mov
iret
jge
ret
inc
xor
call
mov
add
add
mov
and
and
inc
into
aad
sub
enter
mov
dec
xchg
xor
push
movs
addr16
push
gs
movs
and
cmc
mov
push
js
xchg
xchg
je
mov
xor
and
inc
or
mov
movs
add
pop
int
dec
push
cdq
sub
dec
mov
dec
mov
push
push
pop
lock
mov
movs
sbb
jle
xchg
ins
xor
dec
dec
outs
enter
cmp
mov
fnstsw
js
push
rcl
inc
push
xchg
sub
loop
inc
adc
out
xchg
pop
loop
cwde
es
movs
movs
and
es
xchg
jb
scas
push
addr16
dec
dec
push
inc
push
xchg
xchg
inc
loop
push
mov
mov
jb
push
pop
retf
xchg
dec
dec
xchg
sub
mov
dec
nop
jmp
xchg
daa
(bad)
lahf
push
loope
pushf
movs
sbb
cs
xchg
push
mov
outs
sub
push
dec
jo
mov
in
cmp
sahf
xchg
pop
mov
fistp
cdq
ds
ins
fcomp
ret
pop
int3
xchg
movs
in
std
mov
scas
inc
mov
adc
dec
gs
nop
test
mov
mov
inc
bound
iret
cdq
jae
mov
mov
push
mov
jge
jge
cdq
and
adc
cmp
jge
mov
jns
lds
xchg
mov
lock
test
pop
fcom
cmp
mov
ja
and
xchg
repnz
cmps
inc
dec
es
jne
outs
add
in
ins
sub
out
addr16
scas
mov
jmp
setne
ja
mov
ror
lods
outs
adc
xchg
popa
push
dec
loope
movs
call
or
sub
sub
jno
xchg
xchg
dec
jns
iret
mov
jl
int
or
mov
arpl
mov
nop
jo
test
imul
jno
loopne
add
jbe
rcr
push
pop
imul
xchg
add
movs
pusha
outs
test
movs
dec
dec
lahf
xchg
jo
mov
pop
lods
or
ins
shl
mov
sub
pop
mov
cmp
or
mov
stos
jo
push
test
jae
mov
push
xor
mov
mov
int
or
data16
push
adc
leave
cmp
pushf
push
adc
jo
jg
ins
lods
xchg
fcomp
es
arpl
fs
test
popf
fstp
lahf
into
lea
jo
jbe
xchg
xor
rdmsr
das
pop
add
rol
push
ins
ret
fisttp
xchg
call
dec
jae
mov
ss
inc
lea
pop
xchg
aad
jne
push
push
dec
mov
stos
jge
mov
adc
pop
sub
movs
loopne
retf
je
fwait
mov
imul
lods
ds
mov
adc
sbb
iret
or
pop
fadd
aaa
cwde
fscale
cs
out
or
inc
out
or
out
jmp
out
xchg
sbb
clc
fisttp
out
add
push
call
xchg
adc
ds
dec
dec
xor
ss
(bad)
cmp
xchg
mov
sub
and
out
in
out
(bad)
sbb
test
xchg
jne
jbe
lea
mov
cmp
mov
(bad)
loopne
mov
lahf
cld
xor
jmp
lods
sbb
fs
clc
inc
push
lods
outs
mov
in
mov
and
xor
or
cmps
in
int
ds
jl
mov
pop
into
(bad)
or
inc
dec
jbe
cli
mov
popf
add
nop
mov
cmc
loope
mov
shl
mov
test
imul
mov
pop
loopne
add
jbe
ffreep
push
dec
mov
stos
pop
or
sahf
push
pop
mov
rcl
cwde
in
jae
pop
cwde
xchg
and
add
pushf
enter
push
mov
movs
not
cmp
jl
call
push
fild
pusha
addr16
push
jno
push
pop
sub
or
mov
push
xchg
shl
and
imul
and
jns
pop
or
icebp
mov
mov
mov
lock
dec
mov
jbe
jb
mov
div
es
or
adc
mov
pop
sub
icebp
and
rol
mov
nop
add
data16
adc
mov
xchg
pop
or
test
inc
call
inc
or
into
mov
popa
mov
daa
gs
pusha
fist
adc
ds
jns
idiv
faddp
cmps
imul
xor
dec
mov
rol
bound
mov
std
inc
loope
(bad)
jle
addr16
sub
imul
cmps
inc
data16
adc
xchg
xchg
jno
adc
scas
mov
push
cld
jbe
inc
ret
pop
ins
aad
shr
jne
nop
mov
cmp
fidivr
jo
fs
les
push
mov
xor
push
dec
bound
leave
pop
arpl
dec
xchg
mov
or
ds
cdq
loope
mov
mov
loopne
(bad)
push
outs
mov
sahf
mov
jge
sub
gs
or
leave
loope
shr
push
imul
sbb
and
inc
ja
xchg
jns
jl
stc
adc
(bad)
loopne
mov
dec
mov
movs
dec
out
jg
loope
enter
outs
icebp
xor
jne
and
mov
xchg
mov
push
ja
mov
(bad)
or
dec
dec
xchg
mov
loope
aaa
aad
and
std
push
nop
(bad)
mov
sahf
jl
ficom
adc
push
in
lds
fbstp
mov
movs
ret
jne
dec
jmp
or
sbb
(bad)
icebp
(bad)
fcom
adc
(bad)
xchg
je
fnsave
lahf
ficomp
sub
adc
push
xchg
pop
pop
popa
lods
aad
add
pop
sub
cmp
xor
or
(bad)
imul
popa
adc
jp
push
and
fs
cmc
adc
fdivr
clc
addr16
mov
jbe
shr
stos
xor
xchg
add
mov
push
fs
in
call
out
popa
movs
or
jno
cld
jno
jecxz
int
dec
push
aad
adc
cs
ret
dec
pop
or
pop
je
addr16
mov
loope
mov
std
(bad)
fucomip
ds
pushf
loope
pop
adc
loope
mov
lea
fwait
stc
jae
sub
hlt
pop
pop
imul
adc
add
mov
mov
xchg
movs
or
cpuid
inc
or
jp
mov
and
xchg
and
add
mov
enter
leave
push
inc
sub
push
les
push
sub
jae
js
ss
(bad)
loopne
xchg
xchg
aam
push
loope
bound
sbb
sbb
mov
or
outs
pushf
aam
xor
stos
mov
stc
js
lds
scas
xor
xchg
mov
pop
ss
popa
outs
fs
popf
leave
test
jmp
mov
add
pusha
mov
cmp
xchg
add
push
mov
xor
add
in
mov
cs
dec
cs
pop
mov
inc
jns
ret
jns
cmp
mov
dec
sbb
xchg
dec
dec
int3
adc
inc
push
inc
push
mov
jo
stc
cdq
jno
cld
jns
addr16
mov
mov
je
or
(bad)
mov
pop
scas
jmp
(bad)
retf
mov
mov
inc
imul
adc
jns
hlt
gs
jl
jmp
imul
ffree
push
xchg
xor
inc
lea
fld
add
mov
lds
scas
shl
and
cmp
stc
push
bound
and
sahf
xor
leave
push
les
add
dec
adc
push
jmp
mov
xchg
dec
retf
test
xchg
dec
lahf
adc
hlt
ins
jl
sbb
sub
lea
mov
adc
leave
dec
push
dec
(bad)
scas
mov
pop
fs
jno
movs
outs
mov
lods
cmp
xor
clc
ror
data16
adc
jge
js
sahf
les
sub
add
loope
lea
in
mov
push
nop
leave
js
lock
dec
gs
mov
mov
mov
push
and
test
add
test
pop
adc
jecxz
cmp
mov
jmp
jne
xchg
test
mov
clc
mov
dec
pop
(bad)
sbb
add
jo
cmc
movs
mov
jge
stc
and
push
lods
adc
sub
mov
xor
mov
sbb
aam
add
(bad)
adc
mov
push
(bad)
fwait
aaa
mov
mov
int3
add
sub
push
add
fsub
push
lea
test
jne
push
and
