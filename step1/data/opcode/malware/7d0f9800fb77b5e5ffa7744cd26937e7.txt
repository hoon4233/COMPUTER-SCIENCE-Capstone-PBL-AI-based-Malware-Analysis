dec
test
aas
xor
xor
ss
cmc
jb
cmp
(bad)
in
div
aaa
jle
shl
pusha
xchg
mov
adc
test
outs
jbe
push
add
movs
mov
jle
test
pop
mov
int3
mov
leave
mov
inc
inc
in
or
xchg
jp
cmp
jle
mov
test
xor
loope
pusha
int
sub
sbb
shl
cmc
xchg
mov
sub
jle
push
and
ss
inc
jbe
scas
dec
jle
popf
imul
dec
fsub
cmc
cmp
not
inc
fdiv
xchg
arpl
mov
enter
xor
push
test
aaa
je
xor
xor
cmp
jle
sar
mov
jo
jle
test
div
mov
jbe
ds
jno
push
cmp
mov
mov
sub
pop
outs
mov
dec
xor
push
jo
jle
xchg
fdiv
xor
add
je
mov
into
je
bound
addr16
jle
sar
mov
rol
mov
sar
outs
lahf
push
bound
and
imul
hlt
mov
push
leave
aas
retf
std
repnz
xchg
cmc
ds
xor
dec
ja
leave
xchg
mov
repz
push
or
mov
repz
rcr
sub
mov
xor
test
retf
xor
ss
aas
xchg
mov
xor
mov
cmp
div
xor
xor
shl
sub
shl
xor
jle
rcr
mov
retf
or
retf
dec
es
jle
mov
ss
lock
cmc
and
je
fcomp
shl
shl
sahf
outs
neg
popf
idiv
or
test
rol
shl
sub
fistp
jo
jle
retf
retf
sahf
outs
js
jle
rcr
push
popa
xor
shl
stos
retf
push
sub
jle
pop
and
ss
push
not
shl
inc
fsubr
xchg
arpl
push
sub
in
(bad)
cmp
xor
out
in
adc
repnz
pop
rcr
xor
adc
jle
loopne
cmp
sub
ss
push
jo
jle
cmc
adc
je
retf
dec
push
jo
jle
in
into
je
fmul
inc
shl
(bad)
enter
dec
jle
or
sbb
add
mov
shl
mov
jle
xchg
arpl
mov
ret
cdq
mov
aas
mov
jle
ret
pop
jle
rcr
mov
push
push
je
(bad)
dec
jle
dec
test
shl
sti
fidiv
cmp
sub
dec
mov
test
retf
cs
enter
dec
mov
test
retf
cs
or
shl
sub
or
rol
xchg
xor
cmc
int3
int
aas
fs
adc
xor
mov
cmp
aas
xor
inc
lds
std
lock
ror
xchg
test
retf
div
sti
or
push
dec
shr
xchg
arpl
(bad)
cmp
sbb
sar
retf
jle
push
ss
xor
ss
xor
inc
int3
retf
or
sub
mov
sar
(bad)
retf
or
aas
inc
push
mov
adc
aas
inc
outs
leave
mov
xchg
icebp
mov
retf
or
sub
mov
add
add
rol
ret
sub
jle
icebp
hlt
imul
bound
mov
push
ror
add
mov
dec
jno
data16
jle
rcr
mov
add
xor
lock
ret
icebp
hlt
xchg
add
inc
leavew
mov
add
and
inc
cmp
ds
shl
aas
inc
sbb
dec
jle
leave
ret
icebp
hlt
xchg
cmp
hlt
ds
mov
cmp
dec
repz
imul
mov
xchg
bound
mov
cmp
imul
dec
popa
xchg
lds
je
mov
ret
sbb
rcr
pop
sbb
jg
dec
popa
xchg
lds
je
add
cmp
ror
arpl
cmp
xor
cmp
and
or
test
inc
or
mov
inc
cmc
mov
xor
jno
inc
lds
(bad)
push
pushf
xor
shl
cmp
xchg
ds
xor
mov
retf
jbe
add
inc
aaa
rol
test
jno
mov
retf
xor
or
sub
shl
mov
jle
xchg
arpl
inc
int3
mov
or
retf
dec
pop
nop
dec
cmc
mov
retf
or
not
dec
mov
xor
dec
jno
mov
xor
push
inc
ja
inc
xor
xchg
jl
ret
xchg
and
int3
push
(bad)
dec
popa
jbe
aam
mul
aas
jae
jmp
cmp
or
mov
leave
ds
div
aaa
xchg
xchg
ds
div
dec
mov
leave
ds
imul
jmp
xor
repz
xor
leave
lahf
push
inc
popa
not
inc
fsubr
xchg
arpl
imul
cmp
gs
pop
ss
retf
xchg
sub
xchg
add
cmp
in
push
outs
addr16
cmc
mov
add
jns
cmp
push
cld
dec
in
mov
dec
and
stc
jmp
les
mov
xor
cmp
aaa
push
mov
cmp
and
imul
mov
xchg
arpl
imul
cmp
repnz
cmp
cmp
enter
adc
mov
lea
addr16
cmc
mov
add
jns
cmp
push
cld
dec
in
mov
dec
and
stc
jmp
rol
retf
xchg
mov
cmp
dec
jno
lock
imul
bound
mov
aam
cmp
inc
or
mov
xchg
enter
cmp
ret
xchg
sub
jbe
jle
inc
mov
lea
jno
aam
inc
out
xor
sbb
jno
jmp
(bad)
inc
pop
and
xor
pop
add
ins
or
sub
xchg
arpl
inc
enter
push
fs
aas
xor
add
and
xor
xchg
or
popf
cmp
je
bound
dec
imul
mov
adc
ror
xchg
or
sub
xchg
arpl
imul
imul
xchg
je
mov
daa
mov
add
xor
lock
xor
ss
popa
shl
mov
adc
stos
xor
aad
xor
mov
shl
jae
mov
jle
xor
ins
or
sub
xchg
mov
dec
pushf
cwde
mov
scas
call
je
xor
cmp
shl
addr16
xchg
add
cmp
xor
add
cs
addr16
cmp
cdq
mov
sub
push
shr
or
sub
xchg
bound
mov
std
xchg
cmp
pop
ss
push
jp
stos
xor
xchg
mov
jle
test
cs
rcl
cmp
sub
mov
mov
sbb
loop
dec
jno
aas
add
pusha
test
lahf
je
pop
jp
sar
inc
shl
icebp
hlt
ja
iret
test
mov
mov
test
test
lahf
je
mov
outs
leave
aam
jle
shl
inc
(bad)
jge
xor
test
jno
add
or
icebp
hlt
ds
mov
mov
leave
aas
ins
dec
neg
popa
not
js
jle
rcr
inc
shl
arpl
imul
jmp
or
add
or
inc
adc
add
cmp
stc
jno
cmp
sar
je
mov
mov
xor
mov
test
je
xor
cs
test
je
fs
push
aas
bound
sub
pop
stos
arpl
ss
xor
aas
retf
aas
inc
jb
pop
inc
jle
stos
xor
jle
inc
aad
enter
sbb
add
inc
leave
aas
xor
inc
int3
mov
stos
arpl
sub
shl
mov
and
ret
cmp
dec
je
dec
or
popa
fdivr
mov
iret
mov
aaa
shl
jmp
push
xchg
inc
or
add
or
dec
in
mov
dec
mov
leave
ds
div
aas
xor
add
jnp
je
jle
(bad)
mov
dec
je
jle
popa
dec
retf
mov
jnp
shl
sub
or
out
icebp
in
div
cmps
repz
ret
jae
mov
retf
mov
or
inc
fsubr
daa
lea
shl
mov
retf
sub
dec
jno
mov
inc
in
or
mov
pop
loop
xor
and
mov
clc
retf
push
shl
dec
jno
aas
add
mov
add
and
fs
push
aas
mov
div
cmp
jnp
je
jle
aas
xor
mov
sbb
or
or
lds
jle
inc
or
xchg
xor
retf
xchg
loop
xor
lock
sub
aas
jno
mov
cmp
cld
pop
aas
retf
xor
retf
xor
shl
sti
loop
retf
add
ins
or
sub
xchg
bound
mov
fisttp
ror
shl
jle
inc
push
xor
jno
mov
add
cmp
jle
sar
retf
jle
dec
(bad)
test
cmp
mov
sbb
rol
mov
ret
xor
inc
add
cmc
jae
mov
push
cmps
bound
(bad)
inc
jle
inc
lock
cmp
cdq
mov
push
xor
xchg
xor
scas
ret
or
inc
push
xor
dec
xor
arpl
bound
jle
movs
cmp
jg
into
ror
icebp
inc
push
xor
out
test
cmp
movs
inc
les
ins
mov
lock
les
dec
dec
les
xchg
cmp
jbe
cld
add
cmp
or
shl
leave
mov
push
push
pop
je
ficom
pop
jle
sub
icebp
push
and
stos
xor
ss
xor
stos
xor
shl
shr
sar
ss
xor
fdivp
pop
jle
dec
jno
mov
xor
add
mov
aas
inc
jbe
mov
xchg
dec
scas
xor
pop
sar
pop
xor
cmp
aas
inc
xchg
stos
pop
jle
dec
int3
mov
dec
jno
mov
aas
inc
xchg
cmp
ss
push
inc
popa
not
js
jle
rcr
pop
shl
fisubr
mov
mov
cmp
inc
leave
or
and
fisub
mov
leave
ds
repz
retf
or
fmul
int
retf
daa
aas
add
cli
jmp
sbb
jle
out
inc
jle
sub
sar
mov
add
retf
cli
aas
retf
inc
lock
cmp
xor
rol
pushf
xor
aaa
xlat
div
dec
div
mov
retf
or
xchg
loop
xor
clc
retf
sub
jno
aas
add
mov
inc
cwde
or
inc
call
push
push
and
mov
aas
fs
push
aas
and
shl
test
ja
iret
mov
shl
push
mov
leave
ds
cs
pop
xchg
cmp
nop
mov
div
cmp
jbe
rcr
xor
add
or
int
leave
aas
mov
ds
repz
aas
mov
adc
dec
div
mov
retf
or
xchg
loop
xor
clc
retf
sub
jno
aas
add
sti
mov
xor
push
inc
mov
leave
ds
jle
inc
mov
ret
retf
aas
retf
iret
mov
xor
xor
aaa
test
lahf
je
mov
and
mov
cmp
sbb
aas
mov
mov
xor
cmp
fmul
ds
inc
leave
aas
xor
cmp
sar
mov
retf
or
fs
retf
or
pop
cs
xor
mov
cmp
inc
xchg
or
nop
xchg
aas
shl
ss
or
add
jg
shl
pop
rcr
xor
pushaw
jne
fsubrp
ret
inc
lock
aas
retf
jle
mov
adc
test
sahf
je
mov
and
mov
cmp
retf
xor
inc
pushf
or
rcr
add
cmp
test
fidiv
fcom
repnz
or
adc
jbe
mov
aas
arpl
mov
cmp
aas
xor
inc
retf
sahf
aas
retf
shl
rcr
xor
pushaw
jne
fisub
or
aas
retf
jle
mov
adc
test
sahf
je
mov
and
mov
cmp
retf
xor
inc
pushf
or
rcr
arpl
cmp
test
fidiv
fcomp
ret
aas
retf
std
repnz
or
adc
jbe
mov
aas
arpl
mov
cmp
aas
xor
inc
retf
sahf
aas
retf
shl
sbb
popf
mov
aas
mov
jmp
jne
(bad)
rol
aas
retf
jle
mov
mov
leave
shl
stos
xor
jle
nop
xchg
aas
ss
mov
aas
mov
cmp
retf
xor
inc
pushf
or
rcr
mov
fidiv
fdiv
repnz
or
jb
xor
jle
jge
or
xor
xor
fstp
pop
mov
cmp
dec
mov
ficom
or
aas
retf
jle
mov
mov
leave
shl
inc
(bad)
xor
push
inc
push
je
xor
mov
retf
or
(bad)
int3
aas
retf
daa
fst
bnd
je
jle
popa
pusha
fidiv
sbb
icebp
in
div
push
mov
leave
ds
jle
(bad)
jle
inc
(bad)
cmp
shl
sbb
or
mov
and
mov
jno
aaa
xor
dec
mov
leave
ds
cs
aas
fs
push
aas
arpl
test
imul
shr
cmc
inc
dec
xor
mov
xor
xor
xchg
adc
or
mov
pushf
mov
mov
in
enter
mov
or
cmp
add
jle
add
add
rcl
pop
retf
or
xor
mov
retf
or
xor
ss
mov
leave
ds
cs
aas
fs
mov
retf
or
mov
imul
aaa
xlat
div
dec
div
mov
retf
or
pop
out
xlat
xor
nop
mov
jle
shl
cmp
mov
sar
dec
mov
leave
ds
cs
shl
test
imul
shr
cmc
inc
dec
xor
mov
xor
xor
mov
retf
or
mov
and
mov
jno
or
(bad)
xchg
add
dec
mov
leave
ds
cs
aas
fs
push
aas
arpl
test
(bad)
push
mov
mov
cmp
ret
xor
mov
aas
fs
mov
retf
or
mov
div
mov
mov
cmp
jge
shl
mov
les
cmp
or
fidiv
mov
and
mov
cmp
xchg
leave
ds
jle
shl
ss
xor
(bad)
cld
cmp
ror
fidivr
retf
inc
leave
or
and
mov
aas
fs
or
imul
jmp
repz
mov
sar
mov
aas
mov
and
retf
std
fcmovbe
mov
jle
xor
or
fsubr
daa
lea
shl
ds
sub
dec
jno
aas
add
sti
pop
ret
mov
nop
or
ds
ss
mov
leave
ds
cs
inc
aad
ss
mov
leave
ds
cs
shl
dec
jno
aas
add
sti
sbb
xor
mov
jp
sar
dec
mov
leave
ds
cs
dec
jno
aas
add
sti
leave
shl
gs
or
shl
rcr
pop
shl
sbb
mov
leave
ret
mov
retf
or
mov
leave
ds
repz
retf
or
mov
xor
rol
mov
aas
mov
es
rol
xor
xor
lds
ret
xchg
aas
retf
dec
or
retf
sub
rol
mov
aas
mov
jle
inc
push
jg
shl
ss
mov
leave
ds
cs
mov
cmp
dec
mov
leave
ds
cs
shl
dec
jno
aas
add
sti
and
xor
mov
mov
enter
mov
xor
push
leave
ds
cs
ror
ret
cmp
aas
arpl
test
imul
jmp
dec
xor
mov
shl
jge
or
or
mov
leave
ds
jle
inc
hlt
jle
sar
data16
adc
dec
xor
xor
aas
leave
xor
aas
leave
xor
shl
xor
or
xor
ss
xor
leave
dec
mov
leave
ds
cs
popf
aam
ss
mov
leave
ds
cs
pop
jle
inc
lock
dec
leave
or
xor
inc
int3
or
fnsave
leave
jne
or
aas
leave
and
retf
repz
leave
or
test
cmp
dec
mov
leave
ds
cs
cwde
aam
ss
mov
leave
ds
fimul
pop
jle
inc
lock
mov
dec
cmp
shl
ss
cmc
mov
retf
or
mov
imul
aaa
xlat
div
dec
test
leave
ds
inc
mov
retf
or
mov
enter
mov
retf
or
mov
cmc
mov
retf
or
mov
xor
ds
inc
mov
retf
or
mov
retf
std
mov
retf
or
inc
jns
inc
leave
or
shl
and
cmp
dec
add
pusha
enter
aas
retf
mov
cmc
mov
retf
or
mov
std
mov
or
inc
jb
inc
loopne
enter
push
aas
bound
inc
in
or
aas
bound
inc
call
cmc
push
aas
bound
sbb
sti
(bad)
aas
retf
dec
add
pusha
enter
aas
retf
and
std
mov
leave
test
retf
pop
in
xor
shl
nop
push
not
shl
inc
fsubr
xchg
arpl
push
sub
cmp
sti
add
sbb
mov
icebp
test
jle
shl
and
pop
rcr
xor
cmp
add
xchg
inc
ss
xor
sub
or
test
jg
shl
sub
cmp
ficom
dec
dec
mov
mov
pop
jno
leave
aas
retf
sub
les
xchg
shl
push
std
mov
rcl
push
sub
test
div
test
retf
pop
jle
rcr
xor
ss
xor
pop
movs
xor
mov
mov
imul
mov
xchg
(bad)
cmc
imul
add
jg
test
aas
xor
add
jp
xor
xor
pop
cs
jne
ss
adc
xor
jbe
xor
xor
aas
les
ss
xor
scas
xor
inc
lods
aas
ss
cmp
jne
aas
add
repnz
ret
or
xor
ss
mov
adc
shl
sub
ror
inc
je
jle
add
jle
aam
jbe
jno
aaa
lds
ja
fld
shl
fsubr
jg
iret
mov
xor
xor
xor
inc
jae
sub
aas
shl
test
aas
xor
xor
jae
mov
jle
aas
xor
xor
leave
lds
je
ret
pop
jne
es
dec
imul
sbb
shl
mov
sub
ja
and
jbe
jne
xchg
shl
leave
aas
ret
pop
jne
xor
jge
shl
mov
sub
ja
xor
rol
loope
sar
icebp
hlt
xchg
xlat
ret
mov
push
sbb
cs
jne
ds
je
ja
xchg
ds
xor
rol
loope
shl
add
jle
xor
jae
pop
jne
aaa
pop
xor
shl
ds
add
shl
xor
hlt
xchg
mov
cs
shl
pop
xor
scas
xor
mov
lds
je
retf
jnp
pop
jne
mov
push
mov
cs
jne
jbe
xor
rcl
xor
stos
aas
ss
adc
mov
inc
cmp
xor
ss
fsub
ja
mov
xor
xor
xor
xchg
test
jbe
xor
shl
sub
aas
shl
test
shl
lds
je
mov
push
pop
jne
xor
test
sar
mov
or
ja
aaa
xchg
mov
add
mov
shl
fsubr
mov
mov
bound
sar
xor
hlt
add
int3
jne
(bad)
retf
pop
mov
mov
std
mov
ror
sysenter
jle
mov
hlt
enter
jae
pop
jne
jbe
add
sub
(bad)
pop
jne
aaa
lds
ja
fistp
or
ja
mov
mov
ja
je
cmp
hlt
xchg
shl
mov
pushf
ss
inc
je
jle
lds
ja
je
mov
xor
ss
cld
aas
mov
xor
jmp
cmp
jbe
adc
xor
ss
jno
cmp
push
xchg
xor
iret
cmp
std
hlt
jle
sar
mov
mov
retf
jnp
push
je
mov
sub
sar
jae
or
shl
popa
jo
ja
xor
jle
std
jo
ja
or
inc
dec
test
mov
dec
xor
jp
xor
xor
xor
int
loope
shl
dec
cld
aas
mov
xor
ja
mov
xor
test
int
add
rol
lds
jbe
xor
(bad)
jmp
adc
xor
fdivr
jb
xor
dec
xor
pop
jne
leave
lds
out
jbe
xchg
jbe
xor
int3
movs
ds
(bad)
fcomp
adc
xor
fdivr
jb
xor
dec
xor
arpl
leave
lds
out
jbe
xchg
inc
test
int3
movs
ds
xor
dec
cld
push
out
arpl
out
jbe
add
mov
xchg
mov
sub
js
cmp
rol
mov
aas
xor
add
jle
mov
jle
dec
repz
and
sub
and
jp
jle
sub
rcl
jne
xor
shl
cmp
dec
repnz
or
jle
sub
rcl
jge
jbe
popa
sub
rcl
push
sub
and
rcl
push
and
bound
lea
add
dec
in
jg
dec
test
je
mov
imul
jle
test
data16
shr
cmc
inc
push
xchg
ss
jno
mov
xor
jle
shl
mov
int3
jle
movs
enter
inc
retf
mov
out
mov
mov
icebp
test
jg
shl
sbb
jle
ror
dec
jno
mov
jp
jle
test
xor
pop
jno
xor
xor
mov
xlat
div
mov
jg
shl
jl
or
jns
jle
rol
mov
shl
dec
jno
data16
and
out
icebp
in
div
dec
jno
data16
xor
jae
fs
stos
xor
xor
fsub
push
shl
pusha
add
pop
jg
bound
ss
xor
add
ficomp
jle
les
leave
mov
xchg
dec
mov
je
ss
xlat
div
mov
xchg
fstp
inc
retf
mov
or
aas
and
jae
fistp
sub
and
imul
mov
pop
jno
adc
jb
mov
and
cmp
aaa
push
call
mov
mov
cmp
lods
mov
sub
pop
rcr
test
cs
mov
adc
dec
jno
data16
retf
add
jne
mov
inc
pop
and
xor
inc
popa
not
xchg
arpl
xor
sbb
jnp
je
jle
mov
adc
aas
and
xor
shl
cmp
dec
repz
add
rol
jb
xchg
arpl
inc
enter
aas
xor
add
jp
std
retf
jle
rol
jbe
dec
aaa
std
retf
jle
rol
jbe
dec
xor
retf
jle
rol
jbe
dec
xor
rol
jbe
dec
xor
retf
jle
sar
cmp
xor
mov
ret
xor
and
mov
xor
iret
cmp
mov
iret
sub
div
push
xor
ss
into
xor
jbe
push
mov
cmp
push
stc
test
dec
into
std
fadd
cmp
and
or
xchg
les
inc
faddp
xor
inc
sahf
cmp
jae
pop
mov
pop
jl
jle
sub
sar
arpl
pop
lods
and
imul
jbe
fs
fsub
push
xor
jae
mov
leave
dec
popa
outs
mov
cmp
jge
cmp
mov
ret
xor
inc
fdivr
xchg
shl
lds
pop
cmp
sbb
out
je
xor
cmp
xor
aas
retf
jnp
je
jle
cld
or
xchg
mov
js
mov
test
cld
xor
cmp
or
xor
add
std
faddp
cmp
xor
or
inc
ror
shl
xor
cmp
lds
mov
dec
pusha
inc
xor
jp
add
div
aad
jle
shl
cmp
(bad)
or
int3
std
faddp
mov
xor
inc
das
mov
inc
or
mov
test
jbe
js
sub
ss
inc
ffreep
xor
inc
out
mov
leave
dec
popa
outs
mov
cmp
jg
inc
fdivr
test
cmc
jae
mov
xchg
cmp
jle
inc
or
mov
test
rol
cmp
js
mov
test
cld
xor
repz
jno
les
inc
or
jle
(bad)
or
sub
sub
dec
pusha
ins
xor
into
std
fadd
mov
jle
xchg
jle
inc
add
or
sub
xchg
bound
leave
lds
je
mov
dec
leave
sub
dec
(bad)
xor
aas
xchg
jle
xor
jle
shl
jae
sbb
lock
xchg
ffreep
xor
mov
xor
iret
sub
add
jl
cld
and
xor
dec
int3
jg
nop
fdivr
sar
daa
leave
lds
je
cmp
xor
or
adc
fnstsw
rol
movs
enter
mov
hlt
and
mov
adc
jno
inc
sub
pop
mov
fidivr
jle
test
test
dec
into
jg
shl
jae
mov
sub
dec
and
sub
movs
ds
iret
jnp
dec
mov
leave
dec
(bad)
jg
jmp
out
jg
inc
fdivr
test
mov
jb
xor
outs
leave
lds
je
mov
leave
jmp
xor
inc
fdivr
test
mov
or
xor
ss
bound
xchg
and
aam
retf
dec
and
inc
or
mov
cmp
popa
not
js
pop
ss
outs
shl
aas
retf
mov
leave
rcr
outs
shl
shl
(bad)
repnz
aad
retf
xor
aas
retf
jle
lds
je
xor
mov
jmp
leave
rol
jbe
(bad)
fnstcw
retf
dec
lds
shl
jmp
sar
enter
or
jl
jle
mov
xchg
push
das
retf
cmp
dec
cmp
jl
jle
sub
jmp
push
retf
cmp
push
(bad)
xchg
leave
aas
pop
mov
dec
cmp
jnp
jle
add
jl
push
nop
mov
and
shl
sar
mov
xor
xor
or
xor
or
cld
xor
cmp
or
das
retf
xor
das
retf
xor
aad
out
jbe
xor
mov
xor
iret
sub
das
retf
xor
aad
out
sar
leave
lds
je
mov
aad
retf
xor
shl
cmp
cmp
je
jle
push
loopne
leave
aas
mov
mov
xor
xor
ss
mov
fnstcw
retf
dec
leave
sub
jle
sub
mov
rol
mov
or
shl
or
aas
inc
test
leave
aas
fs
imul
mov
fisubr
retf
xor
rcr
xor
sub
leave
aas
and
mov
cmp
jae
cmp
(bad)
dec
test
xchg
je
retf
imul
add
jl
and
jge
cmp
dec
mov
jp
je
xchg
aas
retf
or
xchg
jle
sbb
xor
inc
iret
mov
jle
dec
mov
call
inc
idiv
shl
rol
ss
add
retf
daa
mov
fcom
aaa
sar
sbb
retf
jle
stc
mov
fnstcw
retf
jno
popf
retf
or
xor
sbb
or
rcr
xor
push
(bad)
xchg
leave
aas
cmc
pushf
xor
and
push
je
mov
aas
mov
ret
xor
aas
retf
mov
imul
ss
retf
outs
mov
aas
retf
cmc
mov
add
jl
sbb
xchg
xor
aad
xor
inc
ds
inc
rcl
das
retf
xor
ja
jnp
je
jle
jge
mov
ins
test
ret
je
(bad)
pusha
shl
pusha
jmp
lds
jle
sar
mov
dec
jge
dec
mov
call
pusha
jmp
aas
retf
std
hlt
fdiv
jl
inc
mov
sti
xchg
push
retf
cmp
inc
movs
mov
call
mov
jmp
sti
mov
retf
and
retf
xchg
push
xchg
xor
mov
aas
or
add
retf
cmp
pop
retf
xor
test
jle
loopne
jle
push
and
xchg
mov
xor
int
jg
aas
mov
xchg
lods
aas
xor
add
xchg
leave
aas
cmc
pushf
xor
mov
push
mov
dec
cmp
push
je
cmp
(bad)
fnstcw
retf
mov
and
movs
ds
mov
push
shl
sub
sub
sar
aas
add
sti
push
shl
mov
push
jg
sar
cmp
inc
ffreep
xor
inc
iret
mov
sar
or
xor
(bad)
xor
mov
aas
retf
cmc
and
xor
xchg
leave
dec
jo
xor
call
jmp
pop
retf
xor
aas
retf
test
mov
test
clc
xor
sub
std
faddp
mov
ss
test
clc
xor
cmp
(bad)
std
faddp
mov
ss
xor
or
jbe
cmp
fucomp
aas
retf
mov
and
leave
inc
mov
call
jbe
inc
ffreep
xor
inc
(bad)
mov
jle
inc
fadd
mov
aas
(bad)
mov
inc
rcl
xor
inc
mov
or
arpl
or
arpl
or
jl
(bad)
aas
retf
mov
or
xor
rol
cld
or
xor
inc
fidiv
rol
cld
or
shl
retf
or
xor
rol
sub
jno
inc
xchg
mov
dec
gs
rol
jbe
(bad)
fnstcw
retf
cs
jne
mov
loop
retf
sbb
inc
lock
jge
mov
je
xchg
mov
aas
retf
jle
push
rcl
dec
in
mov
xor
jns
mov
aas
retf
div
ror
sti
ret
xor
rol
lds
je
fst
aas
retf
(bad)
mov
fild
mov
fild
mov
xor
cmp
test
aas
imul
or
sub
xchg
bound
mov
cmp
dec
xlat
loope
adc
rcl
ss
jno
aaa
dec
dec
cdq
mov
ror
xchg
dec
jno
mov
or
sbb
dec
jno
mov
sbb
jle
iret
xor
xor
dec
mov
(bad)
xor
xor
inc
shl
test
jg
test
div
shl
arpl
repnz
rcr
mov
ds
cmp
daa
inc
js
test
jp
retf
enter
enter
lock
jle
pusha
xor
ss
aaa
jno
xchg
leave
inc
jb
in
jno
dec
xor
ss
jno
mov
xor
mov
retf
jg
jbe
jg
add
ss
xor
jle
cmp
inc
jno
aaa
iret
cmp
(bad)
mov
xor
ja
cmp
inc
jno
aaa
iret
cmp
mov
std
(bad)
(bad)
mov
xor
aaa
cmc
jae
mov
sub
iret
cmp
ror
shl
inc
jno
xor
cmp
xor
ss
mov
or
xor
xor
inc
dec
cmp
mov
leave
aas
retf
mov
and
jno
xchg
enter
in
xor
xor
cmp
dec
xor
inc
pop
xchg
aaa
inc
mov
xor
inc
les
jae
imul
or
sub
dec
inc
jbe
jo
mov
and
shl
stos
xor
xor
mov
leave
xor
pop
fbstp
cld
or
inc
(bad)
repnz
shl
mov
in
div
lahf
push
imul
not
js
pop
ss
shl
popa
jg
adc
jmp
mov
cmp
xchg
retf
or
dec
mov
(bad)
aas
retf
cs
bound
dec
mov
(bad)
aas
retf
cs
xor
ss
lock
mov
pop
add
mov
mov
xlat
sbb
in
shl
stos
xor
inc
enter
pop
addr16
lahf
imul
popa
jg
and
xlat
mov
jp
xor
pop
rcr
xor
xor
test
jle
inc
retf
or
sub
sub
sar
das
inc
dec
jb
mov
cmc
jae
mov
ss
int3
mov
dec
jno
mov
xchg
pop
jle
sub
das
sar
pop
sbb
shl
jae
mov
xchg
ret
xor
pop
shl
mov
xor
js
test
div
retf
or
xchg
retf
or
xchg
fdiv
fisubr
fs
dec
jno
ffree
mov
mov
cmc
xchg
mov
sub
dec
int3
jg
dec
repz
test
jle
rcr
rcr
shl
aas
inc
jbe
mov
repnz
mov
jle
inc
retf
les
jl
rcr
sub
cmp
dec
cmc
std
(bad)
aas
je
or
xor
iret
dec
not
dec
popa
and
cmp
xor
ss
jno
data16
ss
(bad)
and
pusha
sub
mov
call
gs
fwait
std
mov
fcmove
bound
mov
fisub
js
cmp
rol
mov
stos
xor
mov
xor
pop
les
pop
rcr
hlt
add
xor
lock
int3
mov
dec
jno
mov
mov
dec
imul
sbb
stos
xor
ss
fcomp
ss
jno
data16
inc
outs
leave
mov
sub
(bad)
gs
dec
int3
push
into
dec
repz
push
jnp
ss
hlt
imul
arpl
inc
enter
sub
ja
pop
cmp
mov
enter
mov
dec
xor
add
xor
dec
xchg
xor
mov
enter
xor
or
stos
addr16
inc
lock
pop
sbb
ins
cmp
pusha
data16
sahf
je
fsubr
shl
int3
dec
xchg
pop
aas
fbstp
cld
or
(bad)
bnd
out
jae
dec
int3
dec
mov
sbb
je
fcom
shl
dec
idiv
dec
popa
sub
mov
xchg
mov
sub
int3
repz
adc
mov
repnz
jle
sti
aam
ss
sub
shr
sub
jno
les
cs
cmc
aam
ss
sub
shl
inc
sub
xor
xchg
xor
outs
dec
jno
mov
xchg
enter
std
mov
(bad)
sub
mov
or
sbb
pushf
aaa
shl
faddp
mov
rol
mov
in
xor
shl
gs
push
shl
dec
jno
mov
rol
pop
jno
sar
xor
jno
fucomp
mov
aad
jno
mov
aas
cmp
jb
vpsadbw
xor
xor
add
inc
pop
xor
mov
cmc
jae
cmp
jbe
mov
(bad)
frstor
cmp
iret
cmp
iret
cmp
xor
xchg
mov
retf
les
adc
shl
sbb
popf
mov
dec
jno
cmp
cmc
arpl
cmp
and
in
imul
sub
iret
fwait
mov
out
shr
cmc
dec
jns
mov
iret
xor
aaa
aad
jae
xor
jb
ja
js
xchg
cmp
adc
fwait
mov
jae
cmp
jbe
mov
sub
jmp
mov
imul
shr
cmc
lahf
push
inc
push
out
cmps
push
movs
out
mov
and
ss
(bad)
cli
mov
mov
mov
cmps
push
movs
out
inc
out
movs
out
cmps
push
add
out
jbe
movs
out
cmps
push
je
cmps
push
movs
out
jbe
movs
out
cmps
push
je
cmps
push
movs
out
nop/reserved
cmps
push
movs
out
mov
test
push
(bad)
scas
xlat
xor
xchg
mov
cmps
push
movs
out
inc
fsub
cmps
push
movs
out
mov
xor
cmps
push
or
out
inc
sub
out
cmps
push
push
out
cmps
push
movs
out
push
sub
push
cmps
push
movs
out
cmps
cmps
fdivr
shl
push
movs
out
cmps
lds
jbe
movs
push
push
std
je
cmps
dec
sub
cmps
push
movs
cmc
jle
movs
out
cmps
dec
fs
push
movs
dec
and
inc
idiv
push
movs
inc
std
push
movs
out
cmps
mov
movs
std
test
out
cmps
inc
or
cmps
push
movs
or
push
movs
out
cmps
mov
movs
sbb
jae
or
and
ss
mov
imul
aad
xchg
mov
cmps
push
movs
out
mov
and
ss
pop
jp
push
movs
out
imul
xchg
push
movs
out
inc
xchg
movs
out
cmps
push
(bad)
cli
mov
sbb
cmps
push
movs
out
pop
adc
cmps
push
movs
out
mov
push
ret
mov
push
movs
out
cmps
push
ins
out
cmps
push
movs
out
mov
add
out
aaa
cmp
cmps
push
movs
out
mov
test
push
mov
ss
movs
out
inc
xchg
movs
out
cmps
push
(bad)
scas
xlat
xor
sbb
cmps
push
movs
out
pop
adc
cmps
push
movs
out
mov
push
ret
mov
push
movs
out
cmps
push
ins
out
cmps
push
movs
out
mov
add
out
aaa
cmp
cmps
push
movs
out
push
push
movs
out
cmps
push
push
xchg
or
add
rol
gs
arpl
imul
cmp
cmps
mov
sbb
or
mov
shl
arpl
mov
rcr
shl
rol
ficomp
or
xchg
iret
dec
xor
xor
jno
sub
xchg
gs
xor
mov
mov
xor
ss
sub
dec
int
out
ret
xchg
pop
ret
xchg
js
cmp
rol
retf
xchg
mov
fimul
push
inc
aam
add
mov
jno
sar
enter
mov
sar
enter
pushf
shl
dec
in
jg
cmp
es
xor
jmp
jno
xchg
pop
out
shl
xor
mov
cmp
test
in
jg
nop
mov
sub
shl
fimul
jle
stos
xor
jae
fs
rol
fidivr
lock
mov
xor
inc
cmp
inc
rcl
xor
leave
jae
jl
lock
mov
leave
aas
retf
and
std
mov
(bad)
sub
cmc
push
sub
jp
ss
jle
add
div
fidivr
add
jae
cmp
push
cld
dec
in
mov
inc
or
inc
mov
sahf
data16
inc
jbe
jnp
or
push
cmp
jl
sar
dec
das
cmc
cdq
xor
and
jge
jle
aam
(bad)
mov
mov
enter
cdq
xor
add
jge
jle
aaa
aaa
inc
bnd
jle
sub
xor
rcr
sar
je
aaa
cmp
nop
fadd
jnp
xor
repnz
div
fild
add
sar
and
mov
icebp
and
jae
xor
(bad)
jge
jle
(bad)
je
or
(bad)
jge
jle
test
xchg
sub
sub
mov
dec
les
cmp
jle
shl
stos
mov
mov
stc
jno
inc
adc
adc
xor
jae
fcomp
jnp
xor
dec
sbb
leave
leave
dec
div
adc
pushf
es
jecxz
or
mov
inc
fbld
shl
lea
mov
lea
mov
aas
mov
mov
mov
rcr
js
cmp
dec
les
add
sahf
jp
xor
repnz
xchg
mov
xor
xor
imul
test
cmc
and
mov
icebp
and
jae
xor
(bad)
jge
jle
(bad)
je
or
(bad)
jge
jle
test
xchg
daa
dec
les
xor
jle
shl
stos
mov
mov
stc
jno
inc
pop
mov
ret
je
cmp
arpl
in
mov
xor
dec
cmp
aaa
inc
bnd
jle
jbe
xchg
out
mov
cmp
dec
cmp
cmp
mov
adc
xor
mov
fstp
les
leave
jae
fs
xor
ins
enter
lock
rcr
ret
pop
rcr
je
inc
enter
shl
and
lea
xor
pop
sar
(bad)
xchg
retf
or
sub
ss
shr
sub
xchg
icebp
mov
pop
add
js
inc
ss
mov
lahf
push
inc
popa
not
inc
fsub
shl
push
(bad)
mov
mov
cmp
shl
(bad)
mov
pop
xor
jle
jp
xor
div
aaa
fidivr
sub
(bad)
mul
cdq
mov
test
aas
retf
mov
sbb
movs
xor
dec
aas
mov
mov
cmp
mov
mov
inc
neg
mov
aas
retf
(bad)
jae
xor
jbe
or
sti
xor
retf
xor
sar
cmp
mov
leave
aas
retf
dec
lock
xor
rcr
jle
dec
mov
enter
pop
push
xchg
cmp
test
mov
int
retf
and
pop
jle
rcr
rcr
shl
dec
mov
retf
aas
retf
ficom
jae
ss
mov
retf
aas
retf
add
xor
faddp
jg
ss
xor
mov
leave
or
shl
jge
jle
jne
or
fmul
shl
rol
lock
or
leave
lds
je
addr16
jmp
jbe
mov
aas
fs
mov
iret
or
fs
jmp
or
fs
shl
xchg
xor
ss
aaa
ss
mov
aas
mov
retf
pop
mov
sti
pop
jbe
mov
aas
fs
shl
jecxz
jle
xchg
pop
adc
xor
pop
jbe
pop
ret
mov
cmp
shl
dec
shl
fwait
std
mov
fcmove
sub
inc
push
lock
in
dec
int3
push
into
dec
repz
dec
int3
mov
dec
jno
mov
sar
retf
jle
push
ss
xor
ss
xor
inc
int3
retf
or
sub
(bad)
mov
retf
ds
xor
cmp
aas
inc
xchg
xor
outs
leave
mov
xchg
sbb
or
ror
retf
ss
or
sub
jmp
das
mov
and
or
sub
cmp
rcr
aas
inc
push
mov
add
add
shl
arpl
das
popa
jg
inc
add
daa
mov
adc
stos
xor
jae
add
inc
jbe
(bad)
xor
ss
lock
mov
jg
sub
mov
mov
mov
rcr
xor
ss
xor
ss
inc
jb
mov
xchg
ins
mov
aas
add
pop
add
dec
leave
mov
add
xor
inc
ror
or
sub
sar
retf
ss
pop
cmp
xchg
sbb
add
add
rol
outs
pusha
xchg
mov
push
dec
jno
mov
mov
inc
ret
and
xor
xor
mov
mov
pop
fnstenv
ss
xor
inc
int3
retf
or
sub
cmp
sar
(bad)
mov
adc
stos
xor
inc
ror
or
sub
cmp
sar
retf
cmp
rol
retf
cmp
sar
jae
fbstp
sub
jle
aaa
shl
jae
mov
mov
xchg
arpl
nop
cmps
push
data16
jb
shl
ss
xchg
xor
cmp
sar
into
dec
repz
adc
int3
or
icebp
hlt
fld
xor
ss
xor
ss
xor
push
pop
jbe
ficomp
enter
mov
and
jp
add
push
je
fdiv
jo
xor
jae
fistp
aaa
shl
imul
add
idiv
jmp
jo
xor
pop
jmp
enter
and
mov
jb
test
and
add
jae
mov
sub
dec
jmp
add
inc
cmp
in
cs
aas
inc
outs
ficomp
lock
cmp
mov
into
inc
hlt
jl
test
and
xchg
aas
sbb
mov
or
fstp
js
mov
cmc
jae
bnd
inc
jno
mov
xor
mov
dec
les
nop
(bad)
jb
xor
icebp
inc
jno
mov
xor
aas
aas
inc
arpl
aas
inc
outs
fidivr
jno
mov
xchg
enter
int3
xchg
xor
hlt
and
std
mov
fcmovbe
sub
imul
dec
xor
inc
xor
dec
shl
test
mov
adc
std
icebp
enter
sub
cmp
icebp
ret
iret
cmp
les
aas
add
cmp
dec
mov
inc
div
repz
inc
cmp
mov
les
shl
test
jle
sub
mov
maskmovq
jns
jle
shr
lock
cs
ror
aam
fidivr
xchg
fdiv
loope
repz
popa
dec
dec
mov
outs
mov
dec
xchg
mov
and
leave
test
jno
test
inc
jae
inc
sar
fwait
std
mov
jle
ss
mov
bound
mov
jp
rol
sub
or
mov
and
les
mov
xor
jns
add
push
cmp
cmp
or
inc
jae
sub
mov
ss
inc
push
mov
ss
mov
leave
cmp
xor
shl
enter
loop
leave
cmp
aas
leave
add
retf
repz
xor
shl
sub
sar
mov
mov
or
test
jg
rcr
ja
xor
(bad)
jmp
jno
mov
aas
mov
ds
xor
mov
out
leave
xor
or
cmp
arpl
jbe
leave
mov
xchg
mov
add
push
js
jbe
leave
jne
or
shl
shl
shl
aaa
int
int3
lds
pop
xor
cmp
aas
add
mov
cmp
(bad)
icebp
(bad)
div
sub
cmp
ror
sar
test
mov
xor
(bad)
mov
ret
xchg
or
retf
sub
jmp
ss
fadd
repnz
cmps
jb
xor
cmp
xor
scas
aaa
int
int3
lds
pop
xor
cmp
aas
add
mov
cmp
add
jbe
leave
jne
or
shl
shl
shl
aaa
int
int3
lds
pop
xor
cmp
aas
add
mov
cmp
dec
test
(bad)
ss
ret
xchg
sub
ror
sar
cmc
mov
or
pop
inc
jmp
cmps
jo
ss
lock
leave
mov
push
and
jbe
mov
aas
fs
pop
pop
jbe
data16
shl
outs
shl
test
(bad)
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
retf
ss
add
mov
cmp
fld
xor
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
ret
jmp
ss
add
mov
cmp
test
xor
ss
ret
xchg
sub
sbb
sar
cmc
mov
or
pop
inc
jmp
pop
ja
ss
lock
mov
shl
mov
retf
or
repnz
pop
xor
sub
jle
pop
ret
xchg
mov
call
sub
sar
data16
inc
outs
mov
aas
fs
out
jbe
data16
shl
ror
sar
test
mov
xor
(bad)
mov
ret
xchg
or
retf
sub
jmp
ss
fsub
shl
es
cmp
shl
aaa
int
int3
lds
pop
xor
cmp
aas
add
mov
cmp
std
xor
retf
ss
ret
xchg
test
mov
retf
sbb
inc
lock
data16
ss
jle
shr
dec
rcr
xor
cmp
or
icebp
cmp
shl
(bad)
dec
repnz
mov
mov
cmc
mov
retf
or
pop
in
xor
mov
lock
sahf
jbe
ss
jle
shr
dec
rcr
xor
cmp
or
dec
cmp
shl
ror
sar
test
mov
jbe
leave
jne
or
shl
shl
shl
aaa
int
int3
lds
faddp
jbe
ss
jle
shr
retf
and
arpl
mov
and
dec
loopne
jno
inc
xor
mov
fisttp
mov
ss
retf
jle
arpl
idiv
leave
xor
add
or
mov
leave
cmp
retf
or
dec
cmc
mov
or
mov
cmp
test
shr
fs
int3
(bad)
sub
xor
mov
(bad)
mov
mov
leave
cmp
ror
popa
test
mov
ss
popa
sub
shl
ss
mov
aas
mov
or
aas
leave
xor
aas
retf
retf
ret
or
shl
nop
mov
and
fs
sub
sub
leave
xor
retf
ss
ret
xchg
test
mov
retf
sbb
inc
lock
sbb
jns
jle
shr
dec
rcr
xor
cmp
or
int
shl
(bad)
dec
repnz
cdq
xor
retf
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
inc
lock
ror
ret
cmp
aas
leave
cmp
aas
mov
cmp
aas
mov
jle
dec
jno
mov
aas
fnsave
aaa
shl
shl
sar
or
xor
mov
push
mov
mov
ror
cmp
jg
sar
mov
aas
retf
or
test
mov
ret
and
mov
cmp
mov
cmp
je
or
xor
iret
dec
repz
aas
mov
mov
leave
aas
fs
inc
repnz
xor
or
fcomp
shl
xor
or
fmul
into
aas
retf
std
repnz
or
aas
retf
or
aas
or
leave
nop
pop
sbb
xor
or
inc
lock
jle
jns
jle
shr
dec
rcr
xor
cmp
or
xchg
inc
shl
(bad)
dec
repnz
ins
push
(bad)
ss
ret
xchg
test
mov
retf
sbb
inc
lock
test
ss
jle
shr
dec
rcr
xor
cmp
or
popa
inc
shl
leave
cmp
xor
mov
jne
ss
ret
cmp
cmp
or
fcom
aas
retf
std
repnz
mov
cmp
ds
sbb
add
mov
cmp
cmc
(bad)
xor
(bad)
ss
ret
xchg
test
mov
retf
sbb
inc
lock
pop
or
jns
jle
shr
dec
rcr
xor
cmp
or
mov
shl
ror
mov
lock
ror
sar
test
mov
jbe
leave
jne
or
shl
xor
cmp
or
dec
inc
shl
ror
sar
test
mov
xor
(bad)
mov
ret
xchg
or
retf
sub
jmp
ss
fcomp
shl
shl
shl
aaa
int
int3
lds
pop
popf
jmp
ds
xchg
sub
xor
mov
cmp
rcr
jle
sub
inc
ror
sar
test
mov
jbe
leave
jne
or
shl
shl
shl
aaa
int
int3
lds
pop
xor
cmp
aas
add
mov
cmp
mov
retf
ss
ret
xchg
sub
ror
sar
cmc
mov
or
pop
inc
jmp
mov
jle
inc
lock
pop
jmp
add
mov
cmp
(bad)
jmp
or
ror
sar
test
mov
jbe
leave
jne
or
shl
xor
cmp
or
jge
shl
ror
sar
test
mov
jbe
leave
jne
or
shl
xor
cmp
or
and
mov
and
xor
icebp
cld
xor
(bad)
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
inc
jmp
cmp
or
pop
jl
xor
data16
inc
lock
fiadd
jle
jns
jle
shr
dec
rcr
xor
cmp
or
xchg
inc
shl
je
retf
retf
retf
sbb
inc
lock
mov
jle
jns
jle
shr
dec
rcr
xor
cmp
or
pop
inc
shl
ss
mov
aas
mov
jle
jns
jge
shr
icebp
rcl
jle
xchg
mov
and
arpl
mov
and
fsincos
xor
(bad)
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
push
jmp
or
retf
xchg
int
xor
mov
cmp
cmp
xor
ss
ret
xchg
test
sahf
je
retf
retf
retf
sbb
inc
lock
ss
cmp
rcr
or
shl
aaa
int
int3
lds
fidivr
push
jle
shr
retf
and
arpl
mov
and
out
jbe
leave
jne
or
shl
rcr
rcr
shl
aas
inc
jbe
ret
ss
mov
leave
cmp
dec
jle
aas
add
pop
sar
popa
nop
retf
retf
retf
or
aas
fcomp
push
shl
sub
or
int
ss
retf
sbb
dec
les
dec
repnz
ss
mov
leave
cmp
std
mov
fcmove
xor
aaa
xor
aaa
shl
mov
retf
dec
repz
or
nop
pop
cmc
jmp
xor
mov
retf
nop
fmul
or
xor
into
icebp
int3
div
stos
xor
mov
jbe
mov
aas
fs
aaa
shl
aaa
les
mov
retf
jg
test
inc
xor
or
je
pop
xor
xor
shl
adc
or
rcr
xor
fstp
jle
ret
xor
mov
mov
mov
jle
xor
inc
popa
not
inc
fsubr
xor
xor
pusha
xchg
mov
cmp
test
inc
xchg
loop
aas
retf
jle
test
push
sar
test
mov
aas
mov
jnp
shl
inc
mov
xchg
cmp
cmp
dec
repnz
lock
jge
xor
mov
ret
mov
aas
bound
mov
aas
retf
retf
xchg
cmp
add
dec
popa
jbe
dec
dec
or
mov
sub
jbe
mov
dec
int3
jg
dec
repz
ret
ss
mov
retf
aas
retf
add
sar
leave
jne
or
fcomp
arpl
mov
cmp
aas
mov
sub
jbe
mov
inc
ret
sbb
xor
ss
jbe
fidivr
jle
dec
mov
retf
aas
retf
inc
sub
jle
stos
and
ss
mov
retf
aas
retf
cs
or
dec
shl
xor
pop
les
retf
retf
cs
outs
call
mov
shl
add
ja
mov
sub
add
icebp
hlt
xchg
push
iret
retf
test
jg
sar
dec
mov
retf
aas
retf
fisub
sub
adc
leave
aas
xor
or
leave
aas
and
and
leave
xchg
mov
and
mov
push
dec
mov
retf
aas
retf
ja
mov
sub
inc
jle
icebp
hlt
xchg
rol
jle
pusha
call
or
retf
fisubr
jle
dec
int3
push
into
dec
repz
leave
or
ds
and
fmul
mov
leave
or
dec
mov
enter
(bad)
or
ss
lock
pop
repz
mov
retf
xor
rol
rcl
sub
or
inc
leave
or
pop
mov
enter
ss
repz
ja
xor
mov
retf
nop
fsubr
aas
retf
daa
mov
aas
fs
retf
nop
pop
jle
rcr
rcr
sar
data16
xor
shl
jle
add
cli
out
shl
jne
or
fadd
add
jmp
sub
and
jbe
pop
mov
mov
enter
fisubr
jle
inc
lock
lock
inc
or
xor
sbb
jne
shl
cmp
or
xor
cmc
xor
mov
fistp
shl
hlt
xor
mov
inc
or
xor
or
leave
out
or
xor
ss
add
xor
mov
or
rol
sub
jp
shl
cmp
or
hlt
xor
pop
rcr
xor
mov
retf
nop
fdivr
mov
retf
std
repnz
or
adc
loop
aas
retf
jle
fdiv
xor
shl
aas
retf
jle
pop
lods
dec
sar
data16
ror
dec
mov
retf
aas
retf
div
xchg
fmul
add
aas
sbb
cmc
repz
leave
jne
or
(bad)
add
xor
mov
leave
or
retf
shl
sti
pop
cmp
imul
or
jp
xchg
mov
sub
and
jo
xchg
mov
stc
repz
mov
ds
mov
(bad)
repz
mov
cmp
or
sub
mov
sub
mov
cmp
cmp
popa
xor
cmp
arpl
xor
mov
stos
xor
(bad)
repnz
mov
mov
pop
add
jmp
pop
jp
test
mov
jp
jle
inc
lock
mov
test
sub
or
iret
cmp
dec
jo
xor
xor
mov
pop
retf
or
iret
cmp
dec
jo
xor
sub
dec
jo
xor
fdiv
shl
test
jnp
ja
xor
cmp
arpl
mov
xchg
(bad)
xor
mov
shl
xchg
je
pop
rcr
cmp
jle
dec
repnz
fnstcw
adc
stos
retf
sub
bound
jle
dec
jno
xchg
fmul
shl
call
imul
sub
sub
sub
imul
dec
int3
push
into
dec
repz
mov
daa
mov
cmp
fbstp
mov
aas
fs
aam
leave
nop
pop
sbb
xor
out
xor
mov
inc
movs
jle
shl
gs
cmp
mov
cmp
div
aam
leave
aas
inc
jb
out
add
ss
int3
mov
dec
mov
(bad)
aas
retf
div
icebp
hlt
fstp
retf
xor
mov
mov
aam
leave
nop
bound
aas
add
mov
pop
add
dec
shl
das
aas
xor
sbb
xor
test
aaa
ss
pop
add
ins
or
sub
shl
out
xor
gs
arpl
imul
aad
xor
add
dec
les
dec
repnz
sub
sar
mov
xor
mov
aaa
cmp
adc
add
push
arpl
jbe
sub
shl
pop
shl
jmp
jp
je
mov
and
mov
ds
dec
ror
sar
test
mov
jbe
mov
aas
fs
leave
repz
mov
cmp
(bad)
repz
(bad)
ss
ret
xchg
sub
sbb
sar
repz
aam
leave
xchg
pop
es
or
shl
shl
shl
aaa
int
int3
lds
pop
xor
cmp
dec
mov
(bad)
aas
retf
ficomp
jle
inc
lock
xor
dec
jmp
rcl
leave
nop
fdivr
add
enter
shl
shl
aaa
int
int3
lds
pop
xor
cmp
dec
mov
(bad)
aas
retf
ficomp
lock
fiadd
jle
jns
jle
shr
dec
jmp
xor
push
shl
aaa
int
mov
aas
arpl
outs
sbb
jle
jge
sahf
leave
aas
arpl
mov
and
inc
rcr
xor
rcl
leave
nop
pop
pop
jmp
rcl
leave
nop
fsub
repnz
mov
es
cmp
shl
aaa
int
int3
lds
pop
xor
cmp
dec
mov
(bad)
aas
retf
fimul
push
jle
inc
lock
retf
ss
mov
(bad)
aas
retf
fidivr
jle
inc
lock
mov
jle
jns
jle
shr
dec
aam
mov
xor
rcl
leave
nop
fsubr
add
xor
repnz
xor
rcl
leave
nop
fdivr
add
xor
repnz
es
cmp
shl
aaa
int
int3
lds
(bad)
push
jle
jns
jle
shr
ss
and
mov
and
mov
es
mov
ss
and
mov
ds
dec
ror
sar
test
mov
jbe
mov
aas
fs
leave
icebp
xor
mov
cmp
jge
jbe
mov
aas
fs
(bad)
xor
mov
cmp
(bad)
icebp
(bad)
div
sub
je
shl
cmp
push
(bad)
and
mov
aas
fs
mov
xor
mov
cmp
sub
jbe
mov
aas
fs
popf
icebp
xor
mov
cmp
push
icebp
xor
(bad)
ss
ret
xchg
test
sahf
je
mov
and
mov
ds
ret
shl
int3
mov
and
mov
and
mov
sub
dec
ror
sar
test
mov
jbe
mov
aas
fs
or
add
push
ss
jbe
mov
aas
fs
adc
xor
mov
cmp
aad
xor
(bad)
ss
ret
xchg
test
sahf
je
mov
and
mov
ds
adc
rol
mov
aas
mov
jle
jns
jge
shr
icebp
rcl
jle
xchg
mov
and
mov
and
mov
sub
ror
sar
test
mov
jbe
mov
aas
fs
lods
lock
mov
cmp
call
inc
xor
leave
aas
fs
mov
xor
mov
cmp
fdiv
jle
sub
dec
ror
sar
test
mov
jbe
mov
aas
fs
ins
lock
mov
cmp
and
xor
(bad)
ss
ret
xchg
sub
dec
ror
sar
repz
aam
leave
xchg
pop
es
or
shl
xor
rcl
leave
nop
fdiv
shl
rcr
rcr
shl
xchg
fdiv
sbb
xor
mov
jmp
leave
inc
repnz
shl
rcl
leave
nop
fdiv
shl
dec
mov
dec
mov
aas
retf
sub
jne
mov
sbb
xor
cmp
leave
sub
rol
(bad)
jmp
push
inc
popa
not
inc
fdivr
xor
xor
pusha
xchg
mov
into
aaa
shl
mov
iret
or
pop
leave
or
pop
inc
or
sar
sbb
xor
arpl
mov
jmp
cmp
ret
cdq
mov
aas
mov
jle
nop
fmul
shl
xor
xor
xor
jmp
jle
inc
xchg
or
pop
outs
pop
sar
data16
push
rcr
xor
mov
leave
or
xor
sbb
jle
ret
mov
aam
leave
aas
mov
adc
hlt
jno
ins
ss
test
jg
sar
dec
mov
retf
aas
retf
cs
push
jle
dec
int3
jg
dec
repz
cmp
sbb
mov
mov
ss
test
mov
retf
and
mov
and
retf
ficom
jle
sub
fwait
leave
aas
mov
cmp
sar
data16
push
shl
aaa
shl
js
or
pop
mov
enter
shl
rol
pop
mov
enter
ss
repz
repz
retf
nop
fsub
aas
retf
daa
mov
aas
fs
retf
nop
pop
jle
rcr
rcr
sar
data16
xor
leave
jmp
mov
xor
leave
jne
or
fdivr
into
ror
icebp
aas
sbb
and
jbe
pop
mov
mov
enter
fidiv
jle
inc
lock
lock
dec
test
aas
xor
sbb
push
push
shl
cmp
or
xor
jmp
jle
push
cmp
xchg
xor
jmp
leave
aas
xor
or
leave
ret
leave
xor
mov
rcr
sbb
xor
into
jmp
xor
sar
xchg
fdiv
aaa
test
mov
cmps
cmp
and
mov
cmp
retf
xor
shl
inc
mov
sub
leave
inc
lock
add
cli
cwde
shl
ror
mov
inc
mov
xchg
jns
xor
mov
dec
adc
stos
cmp
sub
jp
retf
cmp
mov
jle
test
mov
sbb
xor
pop
retf
call
xchg
shl
jmp
xor
leave
jmp
test
leave
aas
mov
or
mov
add
aas
mov
cmp
sub
mov
leave
or
xchg
retf
retf
mov
fucomi
or
das
rcl
xor
xor
icebp
inc
test
leave
aas
xor
sti
cmp
push
sar
pop
ror
xchg
cmp
sbb
fcmove
aas
retf
xchg
sub
xor
mov
aas
fistp
aaa
cmp
shr
or
jp
xchg
mov
sub
ds
sbb
mov
xor
sub
sar
fimul
popa
xchg
stos
je
dec
call
addr16
out
jle
js
xor
rol
mov
xchg
fcomp
shl
int3
mov
xchg
xor
xor
sub
sar
pusha
test
and
pop
jle
rcr
pop
shl
stos
retf
sub
jle
jle
dec
int3
mov
dec
jno
mov
nop
bound
pusha
sub
sar
inc
popa
not
js
outs
ss
adc
xor
popa
jg
cmp
mov
aas
div
pop
(bad)
ds
push
sar
mov
les
cmp
rol
leave
nop
bound
pop
ror
cmp
jg
aas
retf
fiadd
lock
aas
retf
jle
mov
test
ficom
ss
ss
outs
sbb
ss
repnz
cdq
lahf
push
cmc
xchg
mov
sub
inc
ret
aad
shl
test
jg
sub
add
jno
data16
push
shl
mov
rcr
xor
add
cmp
sub
leave
jae
mov
xor
xor
xor
xchg
test
add
repz
fs
test
jg
ror
sbb
jle
cmp
cmps
retf
cmp
iret
cmp
inc
int3
jae
push
imul
sub
sub
inc
inc
cs
xchg
shl
dec
jno
mov
ret
pop
rcr
rcr
rcr
push
xor
adc
stos
xor
sub
push
sar
ss
shl
jae
mov
adc
aas
add
xchg
xor
call
arpl
aas
add
dec
call
arpl
aas
add
xchg
xor
call
arpl
aas
add
xor
pop
shl
aas
add
xor
call
stos
sub
rcr
stos
add
add
stos
aas
sub
jg
stos
add
add
stos
aas
sub
jg
stos
add
add
cmp
sub
jg
stos
add
add
push
sar
pop
shl
aas
add
xor
pop
shl
aas
add
aad
xor
pop
shl
aas
add
xchg
xor
out
jle
shl
aas
add
xchg
xor
out
jle
je
jle
aaa
shl
jae
mov
mov
stos
mov
xor
pop
cmp
dec
ficomp
jle
xchg
jle
arpl
jbe
pop
outs
mov
xor
retf
xchg
stos
xor
pop
cmp
dec
mov
jbe
fsubp
adc
arpl
loope
rcr
xor
retf
(bad)
xchg
xor
out
jle
aaa
jbe
rcr
cmc
sbb
ja
fadd
adc
jle
shl
add
sub
pop
rcr
cmc
sub
jbe
fsubr
ss
je
pop
shl
add
sub
pop
rcr
cmc
sbb
ja
fmul
adc
xor
dec
popa
jbe
pop
shl
add
sub
or
adc
ja
fdiv
adc
xor
sbb
jle
shl
add
sub
xchg
cmp
dec
mov
jbe
fisub
sub
ja
pop
outs
mov
xor
retf
cli
xchg
xor
out
jle
add
rol
push
xchg
mov
fstp
shl
sub
pop
sub
cmp
xchg
fdivr
retf
std
repnz
adc
nop
fadd
adc
xor
rol
xchg
fcom
adc
xor
ss
add
xor
retf
mov
jno
sbb
rcr
shl
test
mov
in
xor
ret
fdivrp
adc
arpl
ja
pop
jle
cmc
add
ja
pop
jle
stos
or
jae
pop
cmp
inc
fcomp
data16
and
test
jle
nop
pop
mov
in
sbb
pop
rcr
adc
xor
xor
jle
cmp
jle
cmc
add
ja
pop
jle
cmc
jo
ja
pop
out
aaa
shl
inc
fcomp
data16
gs
test
jle
nop
pop
mov
in
sbb
pop
rcr
adc
xor
push
pusha
jbe
pop
rcr
rcr
lds
pop
rcr
rcr
xor
ss
xor
ds
and
mov
stos
add
add
stos
aas
sub
rcr
cmc
add
ja
pop
jle
cmc
jo
ja
pop
outs
pop
div
jle
stos
push
adc
test
jle
nop
pop
adc
xor
sbb
pop
rcr
adc
xor
dec
popa
jbe
mov
add
rcr
cmc
add
ja
pop
jle
cmc
jo
ja
pop
outs
pop
jecxz
jle
stos
dec
adc
test
jle
nop
pop
in
xor
sbb
pop
rcr
adc
xor
xchg
arpl
pop
ror
add
jle
ror
jb
jne
pop
rcr
shl
shl
call
fs
clc
sbb
pop
sbb
cmp
stos
xor
aad
xor
xchg
int3
stos
aas
ss
xor
add
stos
aas
ss
xor
add
push
dec
shl
jle
jle
stos
sbb
shl
dec
out
cmp
test
movs
je
pop
jle
push
jle
arpl
loope
rcr
cmc
add
ja
pop
jle
cmc
push
fidiv
sbb
aam
shl
test
jle
nop
pop
mov
mov
jbe
pop
rcr
adc
xor
ficomp
jle
pop
mov
add
xor
test
jg
shl
xor
pop
mov
cmp
stos
xor
jne
xor
leave
cmc
fsub
ja
fsub
shl
aas
add
xor
xchg
xor
shl
repnz
aam
shl
test
jle
nop
pop
mov
mov
jbe
pop
rcr
adc
xor
mov
jbe
mov
push
jle
cmc
add
ja
pop
jle
cmc
push
fidiv
push
aaa
shl
test
jle
rcr
xor
xor
sbb
cmp
test
movs
je
pop
jle
or
jle
arpl
loope
rcr
int3
aas
retf
adc
aas
add
xor
xchg
xor
rol
xor
pop
test
jle
test
jle
nop
pop
adc
in
sbb
pop
rcr
adc
arpl
mov
test
div
stos
xor
add
stos
aas
ss
xor
add
push
mov
xor
pop
aas
xor
ss
jg
rcr
fs
sbb
pop
sbb
cmp
stos
xor
jno
xor
xchg
mov
cmp
stos
xor
add
stos
aas
ss
xor
add
adc
test
jg
rcr
xor
shl
sub
ss
movs
je
pop
jle
into
pop
jle
arpl
ja
pop
jle
cmc
add
ja
pop
jle
cmc
jo
ja
pop
outs
pop
cmp
add
sbb
xor
data16
movs
je
pop
movs
in
xor
sub
pop
rcl
ss
add
xor
xchg
xor
jl
xor
pop
pusha
xor
ss
jle
nop
pop
js
xor
sbb
pop
rcr
adc
xor
mov
ror
add
jle
ror
push
pusha
jbe
pop
fcomp
shl
shl
aam
jle
inc
fs
jmp
cmp
test
jl
rcr
adc
xor
mov
jbe
pop
ror
add
jle
ror
push
pusha
jbe
pop
fcomp
shl
shl
aam
jle
inc
fs
cmps
bound
pop
shr
ss
jl
rcr
adc
xor
sub
jle
cmp
jle
cmc
add
ja
pop
jle
cmc
push
fidiv
pop
call
xor
and
pop
mov
aaa
sbb
pop
shl
ss
pop
rcl
ss
add
xor
xchg
xor
stos
push
push
ret
shl
aam
jle
inc
fs
jmp
cmp
test
jl
rcr
pop
shl
ror
add
jle
ror
jb
jne
pop
xlat
pop
in
shl
shl
ficomp
inc
fs
aad
jbe
pop
cmp
cmp
stos
xor
inc
loope
jle
pop
xchg
cmp
sub
leave
aas
mov
mov
leave
lahf
push
cmc
xchg
mov
sub
add
fdivr
mov
ss
inc
jbe
jmp
repnz
ficomp
jbe
pusha
sub
mov
aas
mov
arpl
ja
mov
mov
ds
jne
faddp
adc
mov
fdivr
shl
aas
add
xor
retf
mov
jno
sbb
rcr
shl
test
mov
in
xor
ret
ficom
adc
arpl
ja
pop
jle
cmc
add
ja
pop
jle
stos
or
jae
pop
cmp
inc
fcomp
data16
and
test
jle
nop
pop
mov
xor
sbb
pop
rcr
push
shl
das
pop
cmp
rcr
cmc
add
ja
pop
jle
cmc
jo
ja
pop
push
aaa
shl
inc
fcomp
data16
gs
test
jle
nop
pop
mov
in
sbb
pop
rcr
push
shl
rcr
rcr
lds
pop
rcr
rcr
xor
ss
xor
ds
and
mov
stos
add
add
stos
aas
ss
popa
rcr
cmc
add
ja
pop
jle
cmc
push
fidiv
sbb
push
aam
jge
inc
fs
jmp
cmp
stos
xor
(bad)
xor
xchg
sub
addr16
xor
dec
sbb
pop
rcr
xor
fisubr
jle
test
movs
je
pop
jle
xor
stos
xor
mov
movs
fdiv
or
stos
xor
aaa
test
jg
ror
ficomp
jle
mov
and
stos
xor
js
xor
leave
cmc
fsub
ja
fcomp
sub
xor
ss
add
xor
xchg
xor
shl
repnz
push
mov
fs
jmp
cmp
stos
xor
popa
fbstp
xchg
inc
xchg
cmp
dec
int3
jg
dec
repz
aas
add
xor
xchg
xor
shl
cld
pop
push
outs
xor
ss
jle
nop
pop
mov
mov
jbe
pop
rcr
sub
xor
sbb
jle
mov
xor
add
stos
aas
ss
xor
add
push
mov
xor
pop
scas
pop
push
shl
shl
xchg
out
cmp
test
movs
je
pop
jle
sbb
jle
arpl
je
pop
jle
cmc
add
ja
pop
jle
cmc
jo
ja
pop
outs
pop
cmps
pop
stc
shl
shl
shl
test
movs
je
pop
movs
in
xor
sub
dec
scas
xor
shl
cmp
dec
repz
aas
add
xor
xchg
xor
rcr
xor
push
test
jle
nop
pop
ins
in
xor
sbb
pop
rcr
sub
xor
(bad)
pop
jne
pop
ror
add
jle
ror
jb
jne
pop
rcr
pop
jns
jle
test
jle
rcr
fs
xor
jbe
pop
sbb
cmp
stos
xor
adc
push
xchg
cmp
stos
xor
add
stos
aas
ss
xor
add
push
rol
xor
pop
es
ss
sub
shl
mov
out
movs
je
pop
jle
sub
jle
arpl
je
pop
jle
cmc
add
ja
pop
jle
cmc
jo
ja
pop
outs
pop
cmp
retf
jle
rcr
shl
test
cmps
je
pop
movs
in
xor
sub
ficom
aas
add
xor
xchg
xor
test
jle
rcr
aam
jle
inc
fs
cmps
bound
pop
shr
ss
jl
rcr
sub
xor
sub
jle
aaa
mov
rcr
cmc
add
ja
pop
jle
cmc
push
fidiv
pop
call
pop
jle
inc
fs
jmp
cmp
test
jl
rcr
sub
xor
push
pop
jne
pop
ror
add
jle
ror
push
pusha
jbe
pop
fcomp
pop
lahf
pop
push
shl
test
mov
in
xor
ret
faddp
sub
arpl
ja
pop
jle
cmc
add
ja
pop
jle
cmc
jo
ja
pop
imul
je
rcr
shl
test
cmps
je
pop
test
xor
sub
bound
rcl
xor
or
sub
or
xchg
mov
sub
add
test
sub
mov
shl
stos
xor
xor
inc
retf
or
sub
mov
mov
xor
ss
xor
ficomp
jle
dec
imul
fidiv
jle
inc
push
xor
jno
xor
xor
mov
test
div
dec
jno
dec
jno
dec
jno
data16
inc
outs
pop
std
cmp
xor
aaa
xchg
aas
retf
std
repnz
adc
aas
inc
sbb
cmp
test
cmps
je
retf
or
aas
inc
jbe
sbb
or
test
ja
mov
adc
stos
xor
jae
add
xor
aaa
shl
mov
lock
xchg
or
sub
shl
xchg
mov
sbb
push
test
inc
fcmove
jo
xor
xchg
jo
jle
inc
xor
leave
aas
fs
imul
sub
jns
jle
shr
imul
add
rol
jge
cmp
dec
mov
leave
aas
retf
cs
sub
ss
les
dec
repnz
or
test
into
je
mov
and
mov
leave
ret
inc
outs
pop
xor
mov
leave
aas
retf
cs
sub
ss
dec
xor
jno
jle
inc
xor
leave
aas
fs
fst
xor
mov
push
mov
leave
lds
pop
lock
dec
mov
leave
aas
retf
fimul
and
inc
dec
xor
jno
jle
inc
xor
leave
aas
fs
adc
retf
jns
rcr
xor
ror
leave
nop
(bad)
and
xor
dec
aas
cmp
daa
test
iret
je
mov
and
mov
mov
inc
rcr
xor
ror
leave
nop
fcom
and
xor
dec
aas
or
test
iret
je
mov
and
mov
leave
retf
inc
outs
pop
rol
leave
aas
retf
cs
and
inc
dec
cmp
jb
jle
inc
xor
leave
aas
fs
adc
xor
mov
retf
jae
rcr
xor
ror
leave
nop
fsubr
shl
aaa
shl
mov
retf
dec
repnz
cmp
daa
test
int3
je
mov
and
pop
jle
rcr
xor
jge
jbe
mov
aas
fs
ss
jne
fisubr
or
rcr
xor
jbe
jne
ficomp
pop
aas
rcr
sub
xor
bnd
mov
cmp
or
jp
xchg
mov
cmc
inc
enter
push
test
div
dec
ret
sub
inc
sub
ss
push
xchg
aas
das
retf
xor
xchg
fsubr
shl
fwait
imul
shl
or
jle
inc
ficomp
shl
jb
jle
inc
(bad)
sbb
push
cs
jns
jle
shr
into
aas
retf
dec
rol
ins
xchg
dec
mov
sar
fidivr
and
inc
mov
inc
rcr
xor
sub
fcomp
mov
int3
or
daa
xchg
dec
mov
sar
fimul
and
js
outs
ss
mov
aas
mov
xchg
aas
xor
daa
test
int
sar
data16
ret
lds
retf
xor
jae
jle
inc
(bad)
mov
xor
mov
mov
je
mov
and
mov
lds
retf
xor
jae
jle
inc
(bad)
gs
jle
xor
ret
lds
retf
cmp
jae
jle
inc
(bad)
add
jge
xchg
aas
cmp
int
sar
data16
ret
lds
retf
cmp
(bad)
leave
aam
jle
jge
xchg
aas
aas
or
test
int
sar
data16
push
sar
(bad)
aaa
retf
cmp
mov
push
fidiv
jle
inc
(bad)
mov
xor
mov
mov
je
mov
and
mov
lds
retf
cmp
je
jle
inc
(bad)
mov
mov
cmp
dec
mov
sar
cs
fld
ror
mov
lock
fidiv
icebp
test
retf
xor
inc
mov
inc
int
ret
fidiv
retf
xor
shl
inc
aas
jle
dec
les
sar
div
jmp
out
adc
test
fidiv
aas
cmc
aas
retf
std
repnz
cmp
cmp
ret
ffreep
aaa
jle
inc
mov
cmp
shl
iret
mov
aaa
shl
aas
enter
cmp
sbb
xor
lock
retf
or
xor
jl
xor
shl
sti
loop
retf
cmp
test
cmps
je
mov
and
mov
cmp
xchg
aas
retf
jle
jmp
xor
cmc
push
das
sbb
dec
cmc
mov
add
jns
cmp
push
cld
dec
in
mov
cmp
or
shl
ret
pop
push
xchg
cmp
test
cmps
je
mov
and
mov
mov
ss
cmps
je
mov
and
mov
sub
les
mov
aas
fs
adc
jae
jle
aaa
shl
mov
ret
or
cmp
or
xor
cmp
or
shl
sbb
mov
aas
fs
stc
xlat
xor
mov
and
mov
retf
nop
fsubr
shl
cmp
or
dec
mov
into
aas
retf
cs
cmp
cmp
dec
mov
into
aas
retf
fidivr
lock
pop
sar
data16
jg
xor
cmp
dec
mov
retf
fidivr
lock
add
sti
push
shl
inc
enter
mov
xor
xor
mov
aas
mov
sti
out
retf
cmp
iret
mov
aaa
shl
cmp
or
rcr
xor
mov
int3
or
shl
xor
cmp
or
shl
cmp
or
shl
adc
or
adc
or
ds
sbb
adc
or
ds
xor
adc
or
aas
retf
jge
adc
sti
cli
aaa
retf
cmp
inc
enter
fs
loopne
jbe
mov
aas
fs
dec
(bad)
xor
mov
and
mov
int3
or
shl
or
or
aas
retf
sub
jb
jle
dec
mov
dec
(bad)
and
pop
sbb
and
xor
mov
int3
or
shl
cmp
or
cmp
sbb
dec
mov
into
aas
retf
fidiv
mov
mov
aas
mov
xchg
shl
mov
aas
fs
aas
or
pop
rcr
call
daa
shl
cmp
or
sub
or
aas
mov
cmp
ja
iret
mov
retf
aas
retf
add
shl
pop
add
sub
imul
ins
xchg
fwait
cmp
sub
xor
mov
shl
shl
gs
arpl
xchg
lock
pop
mov
add
xor
test
jle
rcr
and
xor
mov
fiadd
and
xor
aaa
sub
(bad)
fstp
jle
dec
jno
xchg
hlt
stos
aas
ss
xor
stos
xor
out
aaa
xlat
div
dec
not
pop
jne
fisub
retf
jle
rcr
xor
adc
mul
pop
and
xor
fld
adc
test
jg
sar
data16
inc
jbe
push
and
ss
xor
jle
inc
test
cmp
add
inc
leave
aas
xor
cmp
jg
shl
adc
or
mov
cmp
inc
neg
sub
xor
xchg
aam
jle
adc
es
mov
test
add
popa
pop
or
std
icebp
cmp
sti
test
add
cmp
int
aas
retf
(bad)
in
push
outs
addr16
cmc
mov
add
jns
cmp
push
cld
dec
in
mov
dec
(bad)
mul
aas
mov
test
mov
fstp
retf
inc
ds
push
mov
mov
fstp
retf
jle
out
jle
dec
test
inc
popf
xchg
leave
aas
pop
mov
leave
repnz
and
pop
mov
xor
pop
fadd
and
xor
lds
xor
mov
fadd
xchg
retf
and
mov
and
mov
and
mov
cs
xor
mov
fadd
daa
shl
sub
jno
shl
pop
jge
cmp
test
fbstp
mov
jbe
jne
fisub
jle
dec
mov
aas
retf
repz
loop
ss
jle
rol
xchg
test
cmps
je
pop
out
xchg
xor
sbb
pop
mov
cmp
sub
sar
mov
aas
mov
jle
fnsave
xor
pop
imul
ss
fbstp
mov
push
push
je
fiadd
mov
inc
loop
ss
jle
rol
xchg
test
cmps
je
pop
out
xchg
xor
sbb
pop
shr
shl
fstp
retf
repz
loop
ss
jle
rol
mov
add
pop
rcr
rcr
shl
test
loopne
rcr
cmp
xor
jae
pop
jl
rcr
sub
cmp
dec
jno
dec
mov
fnstcw
retf
ficom
mov
std
(bad)
aas
je
or
xor
iret
stos
xor
inc
js
cs
aas
arpl
cmp
xor
ss
jno
data16
ss
(bad)
and
leave
mov
xchg
icebp
iret
xor
mov
sub
ss
mov
cmp
dec
jno
dec
mov
fnstcw
retf
fidiv
mov
std
(bad)
aas
je
or
xor
iret
stos
xor
inc
js
cs
aas
arpl
cmp
xor
ss
jno
data16
ss
(bad)
and
leave
mov
xchg
pop
iret
xor
leave
mov
xchg
cmp
adc
jle
aaa
xlat
div
dec
mov
fstp
retf
div
dec
xor
jae
xchg
dec
test
or
jnp
mov
hlt
push
ss
fadd
cmp
xor
jae
pop
jge
shl
sub
cmp
inc
fild
jae
xor
rcr
push
and
ss
jno
icebp
test
imul
jmp
jno
shl
test
jle
shl
jl
xchg
movs
iret
xor
pop
ror
add
jle
rcr
rcr
rcr
shl
test
movs
je
pop
lahf
in
xor
sub
outs
rcl
mov
rcr
cmp
ss
xor
xchg
jae
xor
shl
mov
push
mov
fidivr
jle
test
cmps
je
fs
adc
xor
mov
aas
mov
xchg
xlat
xor
fiadd
cmp
stos
xor
xchg
leave
aas
repz
call
jle
sbb
sti
mov
mov
fdivr
retf
cs
lods
cmp
dec
cmps
je
pop
add
(bad)
fimul
or
add
mov
pop
retf
xor
xor
jle
sub
cmps
pop
sbb
nop
leave
aas
fs
stos
xor
fidiv
pop
jle
into
cmp
nop
fdiv
cmp
xor
mov
fiadd
pop
rcr
xor
ss
xor
fxch
xor
data16
rcr
xor
jle
stos
xor
aas
sub
ss
mov
jp
jle
inc
test
and
xchg
or
pop
jle
sar
cmp
xor
div
std
mov
rol
inc
xor
xor
pusha
xchg
mov
xchg
push
push
movs
aaa
jle
dec
jno
mov
and
mov
xor
std
into
ret
push
shl
or
ss
and
cli
inc
ret
or
xor
inc
daa
shl
dec
cdq
jbe
ror
aaa
shl
mov
test
inc
pop
je
jle
iret
mov
shl
sbb
leave
cmc
pop
retf
fadd
aas
retf
div
dec
int3
jg
dec
repz
ficomp
jbe
leave
jne
or
fcomp
aas
retf
std
repnz
cmp
sub
or
sar
sar
data16
add
xchg
xor
aas
add
mov
aas
pop
sti
out
cmp
xor
mov
jmp
mov
aas
retf
inc
out
sub
mov
leave
or
aas
retf
std
faddp
mov
sbb
icebp
pop
jg
inc
rol
jmp
sahf
retf
aas
retf
push
mov
leave
or
ror
jb
jne
fisubr
jle
inc
ret
push
cmp
xor
or
cli
test
jle
movs
cmp
pop
retf
mov
add
xor
mov
push
retf
xor
or
inc
jns
sub
xchg
leave
aas
ins
dec
mov
cmp
sar
mov
cmc
pop
retf
fadd
sar
retf
daa
fistp
int3
jg
dec
repz
pop
jne
jne
xor
stos
xor
xor
xor
fistp
xor
ja
or
add
xor
sub
xor
shl
sti
fidivr
fisttp
shl
ds
xor
arpl
inc
test
jnp
popa
jbe
inc
cld
(bad)
push
pop
jne
inc
hlt
(bad)
(bad)
pop
jne
inc
in
(bad)
mov
in
jnp
popa
jbe
inc
fmul
jnp
arpl
inc
aam
jnp
pop
jne
inc
int3
(bad)
and
jle
inc
out
js
rcr
mov
xchg
aad
xor
mov
aas
(bad)
dec
popa
jbe
inc
ror
jnp
arpl
inc
enter
pop
jne
inc
int
into
shl
inc
rcr
(bad)
cmp
xor
leave
aas
retf
jle
mov
xchg
test
in
sbb
aaa
shl
mov
leave
or
sbb
or
cmp
mov
retf
aas
retf
fimul
jle
dec
mov
retf
aas
retf
push
inc
cs
sub
sar
pop
aas
xor
ss
mov
leave
aas
retf
cs
cmc
fsub
ja
fcom
mov
retf
or
rcr
xchg
in
cmp
stos
xor
popa
retf
xor
leave
cmc
fsub
ja
fdivr
shl
lds
mov
pop
mov
cmp
cmp
or
add
jle
rcr
xor
mov
retf
or
popa
jbe
fiadd
jle
dec
mov
std
(bad)
aas
je
or
xor
iret
inc
int3
jnp
fstp
pop
sahf
aad
ss
test
sub
leave
inc
lock
aas
retf
jle
mov
adc
stos
xor
add
rcr
cmp
xor
add
sub
ss
xor
xor
mov
xor
shl
sti
fidivr
mov
and
retf
cs
in
in
cmp
dec
mov
retf
aas
retf
fiadd
jle
inc
lock
pop
aas
xor
ss
mov
leave
aas
retf
cs
cmc
sub
jbe
fcom
mov
retf
or
rcr
into
in
cmp
stos
xor
popa
retf
leave
cmc
sub
jbe
fdivr
shl
les
mov
aas
mov
leave
xor
cmp
push
stos
xor
ss
test
fsubp
ds
aas
add
xor
leave
xor
fild
xor
push
mov
leave
aas
retf
jle
std
cmp
mov
retf
or
aas
retf
or
stc
dec
pop
pop
rcr
daa
jecxz
ss
xor
aad
xor
leave
cmc
sub
jbe
fsubr
aas
shl
les
mov
xor
leave
aas
xor
or
dec
int3
push
into
dec
repz
retf
or
cmp
sbb
ret
cmp
mov
mov
sar
data16
add
xchg
xor
enter
jge
or
stos
xor
ss
test
fisubr
add
xchg
xor
leave
xor
(bad)
xor
inc
(bad)
shl
ror
leave
nop
mov
and
mov
and
mov
es
jle
sar
data16
add
xor
mov
xor
or
stos
xor
ss
test
faddp
cmp
push
test
enter
popa
aaa
jle
dec
int3
dec
into
dec
repz
retf
or
cmp
xchg
test
ret
cmp
icebp
je
shl
sar
data16
add
xor
mov
xor
or
stos
xor
ss
test
ficomp
jle
aas
add
xor
(bad)
aaa
jle
dec
mov
std
(bad)
aas
je
or
xor
iret
inc
int3
jge
loopne
jle
rcr
xor
sub
ss
push
pop
jne
(bad)
cmp
sub
jge
shl
leave
ds
xor
inc
retf
or
mov
or
cld
or
adc
test
test
fsubp
cmp
ss
add
xor
fild
mov
enter
mov
aas
or
jns
xchg
cmp
or
xor
pop
push
out
xor
xor
fsub
repnz
shl
ror
leave
nop
retf
dec
push
pop
jne
fiadd
mov
aas
retf
jle
loopne
jle
rcr
xor
sub
dec
push
pop
jne
ficomp
js
ss
enter
sub
jno
inc
retf
aas
mov
or
cld
or
adc
test
test
rcr
scas
xor
aas
add
xor
(bad)
ss
inc
mov
enter
mov
aas
mov
leave
xor
jbe
or
retf
inc
hlt
mov
test
dec
mov
leave
aas
retf
cs
aas
fs
sbb
jbe
mov
aas
fs
cmp
xor
mov
and
mov
sti
fidivr
fadd
pop
rcr
les
pop
rcr
je
jbe
jne
ficom
jle
dec
mov
enter
xor
xor
ss
or
mov
inc
retf
xor
jno
cmp
xor
shl
dec
not
dec
mov
sub
test
out
ror
ret
sbb
stos
xor
mov
leave
or
xor
cmp
aas
or
mov
aas
mov
leave
xor
sar
fs
mov
and
retf
xchg
movs
lds
pop
sar
data16
ss
(bad)
and
leave
jne
or
fadd
xor
xor
xor
leave
sub
dec
jb
jne
fidivr
jle
stos
xor
ss
xor
stos
xor
shl
loopne
ds
sti
ret
cmp
aas
mov
cmp
jne
or
fmul
xor
xor
cmp
cmp
inc
cld
xor
int
cmc
stos
xor
mov
xchg
addr16
cmps
bound
leave
jne
or
fmul
ss
mov
retf
aas
retf
cs
rcr
xor
xor
leave
sub
jp
ror
ret
sbb
pop
xor
add
test
stos
xor
test
retf
pop
pop
out
xor
je
jle
shl
sub
mov
add
stos
aas
ss
jnp
ror
dec
mov
retf
aas
retf
div
sub
or
aas
inc
jb
mov
xchg
aad
xor
imul
mov
es
bound
mov
retf
cwde
sbb
cmp
cmp
std
xor
sar
out
xor
mov
and
cmp
jle
ror
mov
jbe
inc
retf
retf
dec
ficomp
jle
pop
xor
dec
int3
mov
dec
jno
mov
pop
jne
inc
retf
retf
dec
mov
jbe
fiadd
jle
sti
add
xchg
xor
aas
add
xor
or
rol
cmc
sub
jbe
fsub
xor
xor
into
aaa
shl
jae
mov
jmp
rol
cmc
sbb
ja
fdivr
xor
xor
add
stos
aas
ss
add
sub
jp
ror
push
pop
jne
inc
aam
inc
inc
je
jle
mov
add
sub
dec
push
pop
jne
inc
fbstp
aaa
mov
add
sub
jge
rcr
mov
test
div
icebp
out
inc
add
test
cmc
sub
mov
(bad)
xchg
xor
dec
sub
xor
sub
stos
aas
ss
(bad)
add
mov
cmc
sub
movs
ds
add
xor
xchg
xor
mov
cmc
sub
lods
ds
add
xchg
xor
dec
sub
xor
inc
aam
or
aas
inc
jb
xchg
fmul
xor
xor
xor
js
shl
fwait
std
mov
adc
(bad)
cmp
push
movs
jle
shl
int3
(bad)
cmp
push
movs
jle
shl
rol
cmp
push
movs
jle
shl
aam
cmp
push
movs
jle
shl
loopne
cmp
push
movs
jle
shl
in
(bad)
cmp
push
movs
jle
shl
lock
cmp
push
movs
jle
shl
hlt
(bad)
cmp
push
movs
jle
shl
and
xor
ss
repz
loop
pop
pop
loop
xchg
fsubr
xor
xor
repnz
leave
hlt
or
dec
repz
shl
loopne
test
fdiv
mov
cmp
xchg
mov
xchg
aaa
xchg
shl
hlt
or
inc
int3
pop
inc
xor
fiadd
xor
ss
xor
xchg
or
or
daa
mov
xor
rcr
shl
in
jle
shl
in
lahf
shl
jns
or
outs
ret
cmps
mov
in
call
lds
loope
jo
xor
cmp
shl
add
ss
movs
jle
shl
test
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
nop
(bad)
cmp
push
movs
jle
shl
xchg
(bad)
cmp
push
movs
jle
shl
cwde
(bad)
cmp
push
movs
jle
shl
pushf
(bad)
cmp
push
movs
jle
shl
mov
movs
jle
shl
movs
(bad)
cmp
push
movs
jle
shl
test
cmp
push
movs
jle
shl
lods
(bad)
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
movs
jle
shl
mov
movs
jle
shl
inc
(bad)
cmp
push
movs
jle
shl
inc
(bad)
cmp
push
movs
jle
shl
dec
(bad)
cmp
push
movs
jle
shl
dec
(bad)
cmp
push
movs
jle
shl
push
(bad)
cmp
push
movs
jle
shl
push
(bad)
cmp
push
movs
jle
shl
pop
(bad)
cmp
push
movs
jle
shl
pop
(bad)
cmp
push
movs
jle
shl
pusha
(bad)
cmp
push
movs
jle
shl
fs
cmp
push
movs
jle
shl
push
movs
jle
shl
ins
(bad)
cmp
push
movs
jle
shl
jo
cmp
push
movs
jle
shl
je
cmp
push
movs
jle
shl
js
cmp
push
movs
jle
shl
jl
cmp
push
movs
jle
shl
add
cmp
push
movs
jle
shl
add
cmp
push
movs
jle
shl
or
cmp
push
movs
jle
shl
or
cmp
push
movs
jle
shl
adc
cmp
push
movs
jle
shl
adc
cmp
push
movs
jle
shl
sbb
cmp
push
movs
jle
shl
sbb
cmp
push
movs
jle
shl
and
cmp
push
movs
jle
shl
and
cmp
push
movs
jle
shl
sub
cmp
push
movs
jle
shl
sub
cmp
push
movs
jle
shl
cmp
cmp
push
movs
jle
shl
cmp
cmp
push
movs
jle
shl
rol
ss
movs
jle
shl
(bad)
sar
movs
jle
shl
enter
push
movs
jle
shl
int3
sar
movs
jle
shl
rol
cmp
push
movs
jle
shl
aam
cmp
push
movs
jle
shl
fadd
cmp
push
movs
jle
shl
fadd
cmp
push
movs
jle
shl
loopne
cmp
push
movs
jle
shl
in
cmp
push
movs
jle
shl
call
movs
jle
shl
in
sar
movs
jle
shl
lock
movs
jle
shl
hlt
sar
movs
jle
shl
clc
sar
movs
jle
shl
cld
sar
movs
jle
shl
add
ss
movs
jle
shl
test
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
nop
sar
movs
jle
shl
xchg
sar
movs
jle
shl
cwde
sar
movs
jle
shl
pushf
sar
movs
jle
shl
mov
movs
jle
shl
movs
sar
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
cmp
push
movs
jle
shl
mov
movs
jle
shl
mov
movs
jle
shl
inc
sar
movs
jle
shl
dec
sar
movs
jle
shl
push
sar
movs
jle
shl
push
sar
movs
jle
shl
pop
sar
movs
jle
shl
pop
sar
movs
jle
shl
pusha
sar
movs
jle
shl
sar
movs
jle
shl
push
movs
jle
shl
ins
sar
movs
jle
shl
js
cmp
push
movs
jle
shl
jl
cmp
push
movs
jle
shl
add
cmp
push
movs
jle
shl
add
cmp
push
movs
jle
shl
or
cmp
push
movs
jle
shl
or
cmp
push
movs
jle
shl
adc
cmp
push
movs
jle
shl
adc
cmp
push
movs
jle
shl
sbb
cmp
push
movs
jle
shl
sbb
cmp
push
movs
jle
shl
and
cmp
push
movs
jle
shl
and
cmp
push
movs
jle
shl
sub
cmp
push
movs
jle
shl
sub
cmp
push
movs
jle
shl
xor
cmp
push
movs
jle
shl
xor
cmp
push
movs
jle
shl
cmp
cmp
push
movs
jle
shl
cmp
cmp
push
movs
jle
.byte
.byte
