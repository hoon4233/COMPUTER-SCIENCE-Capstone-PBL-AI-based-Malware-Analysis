push
int
test
and
xor
popa
or
adc
jmp
and
ss
pop
popa
test
or
pop
and
ss
sahf
cmp
and
push
stos
inc
or
jb
inc
xchg
jmp
add
adc
adc
xchg
xchg
jmp
mov
adc
leave
jbe
add
xor
popa
or
imul
pusha
jne
addr16
popa
movs
xor
or
or
or
mov
ja
call
pusha
jne
xchg
jmp
and
adc
bound
and
mov
popa
or
mov
faddp
popf
xchg
xor
dec
retf
add
(bad)
sahf
and
mov
lods
gs
mov
into
jmp
pusha
popa
xchg
jmp
test
ror
je
pop
(bad)
ss
or
xchg
xchg
push
ror
rol
or
ror
stos
pop
cmp
jl
pop
mov
jg
add
push
dec
jne
test
dec
repnz
fucom
leave
xor
mov
enter
repnz
add
cmp
imul
fild
repnz
adc
es
sahf
pop
fidiv
movs
add
or
xchg
and
pop
sub
mov
sub
inc
add
or
je
imul
mov
adc
mov
popa
or
into
fst
sbb
sub
popa
or
add
ror
retf
ss
leave
xor
cmp
push
loope
xor
xchg
and
aaa
and
(bad)
shl
pusha
popa
addr16
and
ss
mov
xchg
and
ss
call
xchg
lods
xor
or
and
mov
jno
pusha
jne
push
adc
adc
(bad)
aam
push
loop
xor
addr16
dec
mov
xchg
gs
xchg
and
fst
pusha
popa
repnz
ror
fst
pusha
popa
test
ror
retf
ss
leave
adc
in
pop
popa
or
and
cmc
and
rcr
mov
and
pusha
jne
xchg
ds
xor
test
dec
popa
addr16
bound
dec
popa
gs
pop
add
dec
ss
ss
into
mov
sahf
js
adc
cli
shr
sahf
test
dec
popa
xor
or
mov
shl
leave
jb
in
push
popa
or
and
pop
and
popf
xchg
pusha
popa
xor
xor
sub
popa
or
leave
frstor
inc
daa
push
int
leave
jge
sbb
popa
or
ficom
loop
daa
sbb
stc
test
sahf
jg
adc
into
arpl
aaa
pop
mov
jno
inc
stos
cdq
or
stos
cmps
xor
xor
addr16
pop
or
pop
and
or
inc
sub
test
mov
popa
add
push
gs
leave
and
inc
cmp
adc
js
fst
fiadd
cmps
repnz
fimul
add
push
gs
leave
js
dec
fisub
xor
mov
mov
addr16
test
adc
into
arpl
fimul
stos
jb
fld
dec
retf
adc
and
fst
leave
push
imul
mov
es
int
adc
sbb
push
jge
fst
adc
or
retf
je
and
inc
es
int
sub
jbe
addr16
adc
(bad)
cmc
ja
call
pusha
jne
js
cdq
lock
pop
cli
call
mov
ret
push
mov
popf
or
mov
xchg
and
mov
test
gs
pushf
jne
pslld
leave
addr16
test
mov
pop
or
push
cwde
xor
ficom
jae
pop
dec
ret
xchg
mov
mov
addr16
test
gs
dec
mov
pusha
or
inc
mov
add
leave
(bad)
xor
and
packuswb
repnz
push
ins
jmp
pop
mov
and
add
popa
or
inc
cs
fcomp
xchg
stos
mov
icebp
leave
fcomp
dec
ss
loop
leave
(bad)
xor
and
pmulhuw
add
cmps
pusha
or
add
cdq
and
test
pop
test
frstor
xor
pop
mov
leave
stos
mov
icebp
leave
fcomp
retf
mov
pusha
or
mov
popa
repnz
jge
push
jmp
xor
shl
pop
popa
test
imul
xchg
cli
shr
push
sti
fld
inc
dec
and
dec
sub
fidivr
jno
mov
fsub
iret
cmp
cmp
ss
dec
paddb
retf
xor
popa
push
push
stos
test
aaa
pop
mov
fisubr
out
adc
or
push
fsubrp
dec
into
stos
and
pop
aam
sub
rcl
or
mov
sub
es
int3
ror
div
jecxz
adc
call
mov
sbb
fs
ror
sahf
or
and
xor
popa
xchg
call
pop
retf
push
jmp
xor
shl
pop
popa
test
jne
jae
push
ins
iret
jp
dec
retf
or
and
ror
xchg
outs
mov
sbb
neg
shr
inc
cmp
mov
xor
mov
xor
pop
add
retf
push
push
stos
test
jmp
je
cmc
aaa
(bad)
retf
adc
js
dec
aas
in
je
aaa
in
fistp
xchg
es
pop
jl
dec
ss
jg
fstp
dec
popa
je
sbb
fstp
push
jmp
xor
shl
pop
mov
add
dec
cmc
mov
retf
ss
retf
pop
and
or
ss
repnz
sub
or
inc
and
into
and
ds
xchg
push
push
stos
test
aaa
pop
mov
data16
mov
xchg
pop
std
scas
je
popa
jns
cmp
je
xor
mov
es
daa
popa
or
into
stos
cmps
xchg
fst
fnsave
add
ss
push
jmp
xor
shl
xchg
fiadd
sar
or
mov
gs
inc
and
jae
xor
ret
and
ss
mov
or
fisubr
mov
dec
fisubr
mov
mov
xor
xor
in
push
popa
or
aas
stc
outs
xchg
imul
adc
mov
jb
lods
xlat
pusha
popa
xchg
fst
fnsave
and
mov
sbb
push
test
push
int
leave
outs
pop
fcompp
lahf
repnz
jnp
cli
dec
cmp
pop
loop
push
ins
jmp
pop
mov
and
rcl
or
inc
sub
mov
loope
xor
and
inc
and
and
je
pop
dec
cmp
popa
xchg
ret
pusha
popa
test
aad
test
stos
mov
dec
and
dec
ss
cmp
out
or
xchg
xchg
pusha
popa
or
ss
in
leave
fcomp
in
push
popa
or
(bad)
pusha
popa
xor
mov
fstp
repnz
and
cmp
popa
or
ss
mov
mov
fmul
ss
and
test
mov
sbb
icebp
mov
xchg
or
ss
jo
and
pop
and
mov
cdq
or
je
sahf
repnz
add
and
or
xor
dec
ss
data16
pop
aad
ss
jno
pusha
popa
test
call
into
pop
and
push
mov
loope
retf
arpl
jae
ret
pusha
popa
xor
add
loope
stos
xchg
xchg
jo
test
pop
repnz
add
dec
retf
sahf
sbb
popa
add
push
xor
stos
and
dec
ss
pop
repnz
popa
or
retf
js
mov
popa
xor
rcl
sbb
or
not
retf
aad
fstp
add
cmps
mov
dec
mov
ja
ss
test
stos
mov
dec
and
dec
ss
cmp
jae
jmp
mov
loop
stos
and
cli
aad
in
leave
fcomp
push
jmp
xor
shl
ss
pop
hlt
sub
in
sti
mov
(bad)
retf
popf
or
or
add
sub
icebp
aaa
and
mov
(bad)
retf
call
mov
xor
mov
and
add
xor
push
mov
popa
xchg
in
dec
xor
and
fidiv
or
mov
outs
cmp
and
or
leave
(bad)
inc
sub
push
pop
(bad)
retf
popf
or
xchg
pusha
popa
scas
push
xchg
and
rol
dec
into
stos
cmps
mov
popa
cmp
leave
jge
in
push
gs
push
arpl
and
and
mov
pop
xor
pop
mov
popa
test
adc
dec
mov
in
leave
fstp
mov
popa
jns
fst
ss
and
cmc
mov
and
or
or
jbe
popa
xchg
ja
mov
and
jae
or
pop
and
or
ss
dec
ds
mov
lea
and
iret
stos
mov
stc
addr16
js
fst
ss
popa
xor
addr16
xchg
in
je
sahf
js
retf
ss
loop
or
leave
push
cdq
in
dec
popa
or
cmc
ja
call
ss
and
pop
popa
cdq
ds
push
into
jecxz
popa
or
mov
fstp
in
je
mov
mov
sahf
repz
scas
in
leave
fcomp
repnz
jnp
int
cmps
mov
ss
aad
cli
call
jp
and
or
mov
fucomp
aad
cli
call
repnz
repnz
icebp
leave
fucom
leave
cmp
popa
or
dec
ss
or
enter
stos
and
repnz
push
dec
retf
js
mov
popa
xor
or
pusha
popa
xchg
jb
xor
and
jae
push
add
aaa
cli
call
repnz
stos
and
repnz
pop
call
add
dec
xor
neg
lahf
repnz
fwait
repnz
mov
test
test
sahf
scas
bound
clc
jg
and
mov
cmp
je
xor
mov
sub
popa
imul
popa
add
mov
sahf
or
and
or
jl
dec
ss
in
leave
fcomp
repnz
mov
pop
test
call
mov
fucomp
into
cmp
sahf
xor
frstor
cmp
outs
mov
leave
bound
xor
or
arpl
jl
popa
or
and
ror
test
fstp
popa
and
cmp
call
into
pop
and
fcom
pusha
popa
data16
fidiv
movs
add
fstp
addr16
dec
scas
in
je
in
mov
fstp
sti
leave
fucom
leave
cmp
sahf
repnz
repnz
and
or
jecxz
dec
ss
xor
rcr
mov
cs
repnz
and
adc
gs
and
enter
pop
aam
repnz
ins
xor
frstor
inc
sub
repnz
and
pop
and
mov
data16
fisubr
xchg
repnz
mov
sahf
or
aaa
dec
fsubr
je
in
mov
fstp
clc
leave
fucom
leave
cmp
sahf
repnz
repnz
and
or
add
mov
cs
repnz
and
adc
gs
and
enter
fwait
xlat
sahf
repnz
ins
xor
frstor
inc
sub
repnz
and
pop
and
cdq
(bad)
pusha
popa
data16
fisubr
movs
add
fstp
retf
sahf
repz
and
ss
mov
fucomp
into
pop
and
mov
pusha
popa
data16
fidiv
repnz
mov
sahf
or
mov
sahf
repz
and
ss
pusha
gs
ret
pop
jb
dec
ss
leave
fucom
leave
cmp
sahf
repnz
mov
pusha
popa
or
mov
ret
fstp
repnz
and
sub
gs
ret
mov
fnsave
in
(bad)
sahf
repnz
ins
xor
frstor
inc
sub
repnz
and
mov
aad
enter
and
fs
pusha
popa
or
enter
lock
retf
xor
dec
ss
pop
xchg
pusha
popa
scas
push
xchg
and
and
repnz
jnp
ss
aad
shr
sbb
repnz
fstp
ror
fcomp
pop
push
and
aas
loop
mov
es
or
enter
mov
sahf
repz
jb
xor
jae
call
into
mov
popf
or
ss
test
fstp
or
stos
mov
repz
and
mov
fstp
stos
and
fisttp
ins
or
xchg
fstp
mov
and
mov
fnsave
xor
jmp
test
loopne
loop
popa
or
enter
cmps
ret
and
enter
push
fnsave
and
mov
sub
popa
xor
jmp
test
popa
or
mov
add
and
cmp
in
mov
fstp
(bad)
fcomp
pop
push
stos
and
aas
loop
fistp
in
fcomp
repnz
push
fnsave
xor
out
and
icebp
ss
popa
mov
shl
ss
in
leave
fcomp
repnz
push
fnsave
sub
sub
popa
mov
ins
or
leave
fcomp
repnz
xchg
arpl
mov
sahf
repz
jb
call
loop
fcmovu
lahf
repnz
jb
and
or
ss
mov
fucomp
into
leave
xchg
(bad)
repnz
retf
fstp
in
je
in
mov
fstp
popa
ss
leave
and
cmps
fstp
mov
fstp
repnz
xchg
fstp
popf
leave
fcomp
jmp
les
leave
mov
fmul
and
xchg
test
sahf
pop
mov
stos
and
mov
loope
jo
and
inc
and
mov
int
enter
mov
sahf
repz
jb
(bad)
xlat
pusha
popa
xchg
jb
xor
and
jae
loopne
or
popa
or
pop
and
mov
fnsave
xchg
jb
xor
jae
call
into
mov
popf
or
ss
test
fstp
or
and
or
ss
out
inc
popa
or
leave
fcomp
mov
mov
sahf
repz
scas
in
leave
fcomp
repnz
es
xchg
xchg
mov
mov
jno
rcr
xchg
test
lahf
int
enter
or
ss
addr16
test
adc
icebp
ss
popa
mov
and
mov
dec
adc
je
jmp
test
popa
or
retf
add
mov
sahf
or
ss
mov
lahf
repnz
popa
repnz
repz
test
sahf
pop
mov
stos
and
mov
loope
jo
and
xlat
and
push
mov
sahf
add
ss
mov
fstp
retf
and
mov
sahf
lock
jb
mov
fimul
movs
add
mov
lock
stos
mov
push
leave
fistp
ins
leave
fistp
or
(bad)
fstp
or
xchg
lahf
repnz
fnsave
gs
or
enter
mov
popa
or
out
and
lock
fcomp
lea
and
iret
stos
in
leave
fcomp
lock
scas
in
leave
fistp
repnz
xor
sahf
repz
jb
neg
popa
mov
or
mov
fnsave
outs
ret
mov
fnsave
in
dec
popa
or
out
adc
test
fcomp
sbb
aad
in
leave
fcomp
mov
fcomp
pop
ds
mov
mov
sahf
repz
sbb
mov
mov
lahf
repnz
test
sahf
pop
mov
test
sahf
pop
mov
mov
popa
repnz
sahf
repz
test
sahf
xor
into
sahf
repz
sub
sahf
mov
and
lock
pushf
repnz
mov
sahf
repz
jb
cmp
mov
sahf
repz
and
repnz
push
fnsave
add
ss
test
stos
mov
repz
and
repnz
push
fnsave
add
enter
push
fnsave
add
enter
push
fnsave
add
ss
mov
fstp
repnz
sub
push
push
stos
test
dec
in
je
or
xchg
and
ss
test
and
mov
test
cmps
dec
rcl
cmp
jmp
mov
fisub
and
push
xor
popa
in
dec
popa
or
jp
popa
or
jae
jmp
pop
xchg
repnz
mov
popa
or
icebp
addr16
repnz
fstp
in
aaa
and
mov
inc
mov
jae
xchg
addr16
loopne
jmp
retf
sahf
repnz
fnstsw
push
ins
mov
dec
mov
and
jmp
gs
pop
aaa
call
retf
aad
ss
popa
addr16
mov
or
push
and
icebp
jne
cmp
popa
push
cmc
ja
call
pusha
test
and
sbb
xchg
in
mov
frstor
pusha
popa
test
mov
popa
or
ss
sub
mov
inc
xor
mov
imul
ss
or
(bad)
stos
mov
dec
ss
or
mov
arpl
and
xchg
ja
push
(bad)
and
and
mov
fld
cmps
xchg
and
ja
and
push
and
leave
daa
adc
int
sbb
add
and
mov
arpl
test
and
add
aam
dec
scas
arpl
inc
das
shl
arpl
xor
dec
repnz
dec
test
in
and
leave
daa
pop
xchg
ja
mov
aaa
and
xor
dec
ss
adc
inc
and
bound
adc
popa
lea
cmp
dec
ss
dec
scas
arpl
es
or
leave
aam
adc
inc
and
bound
and
test
mov
popa
or
cs
repnz
aam
adc
inc
and
arpl
dec
and
cmp
dec
ror
popa
scas
jbe
and
leave
aam
adc
inc
and
arpl
(bad)
stos
mov
dec
and
or
fist
fs
inc
and
arpl
adc
popa
lea
cmp
dec
and
or
fild
fs
pusha
popa
repnz
dec
mov
outs
and
cmp
dec
mov
and
fidivr
pop
xchg
ja
call
int3
mov
jns
ja
and
shl
popa
or
mov
pop
xchg
ja
mov
and
jb
and
jbe
mov
and
fidivr
pop
xchg
ja
mov
push
aad
mov
popa
pandn
test
mov
sbb
dec
and
cmp
retf
mov
add
mov
nop
clc
adc
popa
test
fs
xchg
jb
dec
ss
and
mov
push
xor
inc
mov
mov
and
stc
and
dec
sbb
dec
mov
popa
dec
fstp
sahf
or
and
stos
arpl
xor
dec
inc
repnz
dec
mov
lea
cmp
dec
bound
push
aaa
and
(bad)
aad
test
call
mov
cs
in
and
(bad)
fs
xchg
push
ror
test
add
and
and
jae
outs
mov
mov
xchg
add
and
cmp
loope
shl
leave
daa
imul
(bad)
stos
mov
xor
sub
dec
scas
arpl
xor
icebp
dec
mov
popa
cmovae
loope
shl
inc
mov
xchg
or
loop
ds
or
dec
aam
js
mov
popa
lea
jecxz
std
jo
popa
scas
sar
fs
(bad)
and
sbb
xor
lea
popa
js
mov
popa
or
and
cs
xchg
dec
mov
and
or
scas
arpl
xor
icebp
dec
sub
and
cmp
loopne
out
popa
or
jbe
popa
out
stos
xchg
dec
mov
and
or
xchg
pusha
popa
repnz
icebp
dec
sbb
and
cmp
sahf
or
and
xchg
es
dec
adc
cmps
jo
popa
cli
xlat
stos
and
mov
loope
test
jae
pop
mov
scas
cmp
xchg
sbb
popa
repnz
dec
ss
push
mov
lock
jb
je
aaa
in
jge
or
ss
cdq
cli
shr
or
fimul
jno
ja
or
mov
pop
fidivr
xchg
nop
ja
or
pusha
popa
pop
fisubr
push
xchg
ja
or
pusha
popa
pop
ficomp
or
je
call
retf
test
arpl
xor
cdq
xchg
ds
es
es
or
je
or
jae
xor
and
dec
ss
in
and
mov
loope
push
sahf
stos
and
icebp
addr16
dec
and
push
fisub
fst
or
frstor
pusha
popa
mov
popa
mov
xor
mov
and
aaa
and
icebp
addr16
xor
fisttp
stos
and
leave
daa
adc
dec
xchg
popa
or
out
stos
mov
or
mov
in
jo
scas
adc
(bad)
daa
popa
or
jae
xor
and
mov
aaa
xchg
nop
ja
call
into
mov
and
dec
xchg
jb
or
pop
and
js
retf
ss
dec
xchg
jb
js
scas
and
dec
pusha
in
inc
popa
or
je
or
ss
popa
xor
repnz
(bad)
mov
push
and
fisttp
adc
fisub
or
and
jae
xor
inc
xchg
in
dec
shl
sbb
mov
test
cmp
xchg
out
mov
jge
push
jmp
xor
shl
popf
and
jbe
xchg
call
pop
retf
add
xor
inc
into
mov
mov
arpl
call
addr16
pusha
xor
xor
repnz
fimul
or
pop
fstp
cmp
jae
mov
mov
or
into
arpl
sub
cmp
cdq
cmp
stos
cmps
repnz
dec
fst
es
mov
loope
jno
pop
mov
cs
or
and
xor
repnz
add
pop
repnz
push
sub
pop
repnz
sub
pop
repnz
es
pop
repnz
mov
arpl
mov
ss
test
sbb
mov
xor
add
and
iret
cmp
call
sbb
sbb
or
fsub
outs
mov
inc
pop
call
add
push
je
cmp
or
and
imul
fisttp
jb
mov
and
xor
in
in
sbb
lock
jo
in
jle
or
(bad)
fucomp
pop
es
xor
mov
es
fnsave
es
sbb
aaa
(bad)
in
test
fs
and
push
sub
mov
fisttp
sub
mov
leave
fstp
dec
mov
xor
xor
es
mov
mov
and
push
or
call
add
push
jae
mov
popa
or
mov
lea
and
js
stos
mov
pop
push
daa
loop
xor
je
and
or
js
stos
cdq
inc
mov
cmovae
cmc
mov
arpl
stos
cdq
mov
and
xor
and
mov
sub
mov
or
popa
or
(bad)
fucomp
pop
es
xor
mov
es
fnsave
cli
loop
xor
jno
jb
fs
mov
cdq
test
daa
pusha
or
or
adc
mov
and
js
stos
cdq
mov
and
xor
and
mov
mov
push
test
mov
or
pop
adc
or
leave
and
inc
cmp
xchg
in
pop
and
enter
aaa
pusha
or
leave
and
ss
sahf
push
push
stos
test
popa
frstor
pusha
popa
xchg
mov
pop
fisttp
or
leave
retf
ss
nop
mov
retf
ss
jae
mov
and
pmulhuw
aad
retf
popa
or
leave
daa
adc
mov
xor
pop
sbb
mov
or
aaa
cli
xor
mov
frstor
pusha
popa
add
and
inc
add
popa
jns
mov
outs
test
and
mov
and
dec
retf
popf
jbe
pop
dec
retf
out
test
adc
cmp
and
mov
bnd
fnstsw
cmp
xchg
call
popf
jbe
loop
xor
mov
fucomp
push
clc
dec
fnstsw
repnz
xor
push
in
data16
mov
frstor
pusha
popa
mov
fisttp
mov
repnz
xor
mov
and
pop
cmp
repnz
cmp
retf
mov
cs
ins
jmp
pop
mov
and
sbb
or
xor
sahf
repnz
adc
frstor
sub
popa
or
mov
retfw
mov
mov
mov
int
repnz
popa
or
frstor
daa
sub
sahf
repnz
fs
mov
or
cmp
mov
std
sahf
repnz
jb
and
xor
inc
fisttp
and
fnstsw
mov
stos
hlt
movs
call
sub
fisttp
jae
push
ins
and
mov
stos
gs
mov
cmp
data16
cmp
add
cld
fimul
jae
out
xor
hlt
test
add
xor
and
mov
stos
sbb
mov
or
leave
frstor
and
int
mov
and
leave
fstp
repnz
and
mov
jecxz
lgs
je
cmps
bound
cmp
outs
mov
leave
jecxz
bsr
je
scas
arpl
mov
frstor
pusha
popa
lea
and
mov
inc
cwde
repnz
stos
in
jmp
push
aad
ss
sahf
test
jecxz
sbb
shl
daa
popa
or
ret
repnz
fisttp
or
outs
and
lock
arpl
frstor
mov
and
ss
stc
(bad)
sahf
jnp
scas
in
call
jecxz
or
and
xchg
into
mov
leave
and
gs
frstor
leave
xchg
(bad)
loop
fstp
repnz
fwait
repnz
mov
popf
add
push
add
leave
and
nop
mov
sahf
repnz
repnz
jecxz
sysexit
ja
xchg
cwde
loop
xor
aad
into
int
repnz
sub
mov
and
ss
mov
or
out
daa
popa
sbb
mov
sahf
repnz
xor
mov
popa
std
and
mov
fcomp
loope
fstp
xchg
setle
and
fcmove
sahf
repnz
or
and
leave
fisttp
in
and
cmp
int3
aam
jmp
stos
hlt
stc
(bad)
sahf
mov
and
cwde
ret
repnz
mov
test
jmp
std
sahf
repnz
frstor
int3
fbld
mov
icebp
aaa
call
in
(bad)
sahf
mov
and
ss
(bad)
repnz
dec
mov
sahf
or
mov
in
jne
or
leave
fucomp
iret
xor
and
mov
mov
call
repnz
fucomp
cwde
scas
cld
sahf
repnz
jge
xor
in
call
cmp
call
stos
in
call
mov
fldl2t
fstp
repnz
dec
jge
mov
mov
mov
fsubp
ss
jmp
sahf
mov
xchg
stos
in
jmp
(bad)
mov
out
jmp
loope
or
ss
sahf
int3
fsubr
xor
leave
jecxz
add
or
call
or
and
(bad)
sahf
int3
aam
jmp
scas
mov
leave
fucomp
add
adc
dec
ss
sahf
repnz
inc
pushf
jbe
call
repnz
and
ss
xchg
pusha
and
mov
mov
add
mov
in
aaa
and
mov
mov
leave
sub
popa
or
dec
sub
mov
pusha
or
ss
mov
int
repnz
and
(bad)
in
dec
xor
call
repnz
ret
frstor
fwait
(bad)
mov
mov
mov
and
xor
pop
or
mov
bound
mov
mov
call
lea
and
repnz
dec
ss
sahf
repnz
(bad)
fucom
mov
sub
popa
or
xor
pusha
or
leave
scas
and
jmp
mov
xchg
out
test
sahf
or
or
dec
or
fst
in
pop
ror
frstor
xor
out
xor
fstp
xchg
clc
sahf
repnz
pusha
or
push
mov
popa
or
or
bound
and
popa
or
or
fs
xor
xchg
in
call
pop
les
sub
sahf
repnz
shr
fstp
repnz
retf
leave
fucom
leave
cmp
sahf
or
ret
repnz
sahf
int3
aam
call
int3
xlat
and
retf
sbb
std
sahf
repnz
(bad)
mov
leave
mov
sahf
or
out
fs
pusha
popa
in
ficomp
loop
frstor
and
int
mov
and
int
sahf
push
push
stos
test
popa
test
cdq
retf
sub
inc
mov
push
dec
leave
and
jo
scas
push
jns
pusha
popa
mov
and
lds
dec
or
mov
and
add
and
xchg
scas
sbb
mov
and
or
and
xchg
mov
and
and
dec
leave
and
sbb
pop
dec
and
adc
mov
sahf
or
sub
dec
shl
jo
xor
jmp
ss
cmc
mov
fisub
scas
and
xor
sbb
xor
popa
lea
pusha
add
and
dec
dec
jmp
stos
xor
cmp
or
inc
es
leave
and
jne
call
mov
es
js
mov
loope
leave
and
jne
xchg
dec
aaa
loop
add
daa
adc
mov
sahf
push
cmp
or
and
mov
sahf
or
or
mov
and
shl
inc
es
leave
es
shl
jo
sub
sahf
repnz
or
cmp
ret
inc
and
dec
leave
and
or
pop
xchg
or
dec
into
stos
mov
cmc
cmp
or
leave
and
jae
ds
ins
jmp
pop
mov
je
xchg
fcmovbe
push
inc
popa
or
retf
gs
and
pusha
dec
popa
in
jo
or
leave
(bad)
xor
and
mov
push
pop
push
inc
and
popa
out
ins
loop
aaa
pop
mov
(bad)
into
imul
mov
inc
or
and
pop
mov
mov
mov
popa
mov
jg
or
retf
repnz
je
js
scas
in
(bad)
fstp
or
(bad)
fstp
or
pop
aam
cmc
pop
(bad)
retf
test
arpl
adc
mov
popa
addr16
popa
repnz
sub
or
ss
into
arpl
xor
popf
les
outs
push
loopne
push
imul
and
lea
and
xor
dec
popa
or
ds
ss
retf
mov
sahf
js
mov
xchg
loop
adc
cli
shr
or
ss
into
mov
jno
pop
bound
test
ftst
add
popa
cli
shr
or
inc
sub
dec
cmp
in
dec
into
stos
and
leave
push
xchg
pop
leave
push
popf
pop
fidiv
xor
and
jae
mov
mov
scas
fs
push
ins
jmp
pop
mov
jno
pop
mov
cdq
cmp
stos
cmps
addr16
loope
and
or
or
neg
adc
fsubp
xor
enter
pop
loop
outs
mov
or
jae
call
or
lock
or
mul
pop
or
push
cwde
test
dec
popa
and
pop
leave
push
ins
pop
fidiv
xor
jae
xor
dec
xchg
in
je
aaa
in
jae
or
ss
cmc
rol
dec
ret
stc
mov
and
push
stos
test
ss
ss
mov
in
or
ss
gs
popa
gs
leave
push
imul
mov
push
gs
leave
pop
test
aad
test
call
or
sbb
popa
or
retf
js
fst
pusha
retf
and
in
jb
or
xor
cmps
push
push
(bad)
xor
jne
js
in
icebp
mov
addr16
mov
and
in
stos
mov
or
and
jno
test
pusha
iret
mov
push
ins
gs
and
ss
pop
in
je
mov
repnz
fnsave
outs
mov
add
and
mov
cmp
dec
retf
(bad)
loope
or
adc
lock
and
sbb
dec
shr
dec
retf
or
stos
xor
pusha
dec
dec
in
je
mov
and
repnz
push
ins
jmp
pop
mov
jne
push
ds
popf
out
fwait
dec
mov
rol
or
(bad)
pusha
popa
in
jno
or
and
jb
cmp
pusha
popa
in
jno
or
pmullw
in
add
dec
ss
and
xchg
call
pop
retf
push
jmp
xor
shl
ss
pop
xchg
pop
mov
loope
retf
pusha
or
mov
mov
mov
mov
bound
mov
loope
jo
and
push
in
out
cs
dec
ds
and
fisttp
popa
cli
aad
and
mov
(bad)
jb
nop
mov
cmp
dec
fisub
mov
arpl
mov
sbb
ss
stos
xchg
outs
mov
enter
cmc
out
or
xlat
dec
enter
xor
loop
sub
and
mov
lahf
cmovae
loop
fisub
loope
enter
enter
mov
loope
dec
cmp
imul
pop
loop
or
and
arpl
outs
mov
mov
or
cmp
call
jmp
and
mov
cmp
mov
(bad)
mov
ins
add
sub
sub
aaa
test
ds
ins
jmp
ins
cmps
mov
popf
cmps
call
bound
jns
pop
icebp
mov
mov
popf
cmps
push
dec
popf
cmps
mov
cmp
mov
popf
cmps
(bad)
icebp
dec
cmps
mov
popf
cmps
(bad)
icebp
dec
cmps
mov
popf
cmps
sbb
js
mov
popf
cmps
call
out
and
adc
div
jge
cmps
mov
cmp
mov
popf
cmps
mov
icebp
xor
mov
popf
cmps
push
lea
cmps
mov
popf
cmps
inc
mov
mov
popf
cmps
mov
in
and
outs
mov
popf
cmps
mov
cmc
or
popf
sbb
adc
mov
mov
pop
ds
popf
pop
xor
popf
cmps
mov
into
xor
icebp
popf
cmps
mov
loope
mov
popf
mov
ins
popf
cmps
mov
xor
inc
jmp
cmps
mov
popf
push
retf
rcr
frstor
jbe
xor
jns
pop
popa
mov
je
mov
adc
cmps
mov
popf
cmps
call
xor
icebp
popf
cmps
mov
mov
and
popf
cmps
push
xor
bound
popf
cmps
mov
and
mov
popf
cmps
adc
pop
cmps
mov
popf
cmps
stos
test
cli
shl
popf
cmps
mov
push
cmps
mov
popf
cmps
pushf
imul
mov
popf
cmps
and
out
les
popa
mov
into
and
popf
cmps
push
xor
out
and
cmps
mov
and
mov
popf
cmps
adc
pop
cmps
mov
popf
cmps
stos
test
cli
shl
popf
cmps
mov
push
cmps
mov
popf
cmps
pushf
mov
adc
push
mov
popf
cmps
and
out
les
icebp
popf
cmps
mov
push
sbb
leave
loope
pop
mov
jno
pop
mov
cs
test
cmps
dec
retf
or
test
lea
stos
and
mov
stos
and
mov
ret
out
stos
and
push
in
std
and
mov
jne
or
jae
call
or
jb
fs
push
mov
mov
addr16
jae
popa
out
retf
ss
dec
out
sahf
jb
and
or
and
xor
iret
or
int3
mov
fucomi
iret
mov
cmp
jge
ss
jb
xor
aad
shl
add
fmul
mov
cmp
out
and
es
mov
mov
int3
or
icebp
mov
ja
addr16
icebp
or
les
jmp
call
scas
and
cmp
in
ins
popa
or
les
aad
shl
in
ins
popa
or
imul
test
call
or
and
cmp
cmps
add
aas
push
jmp
xor
shl
ss
inc
sub
rcl
mov
and
cmp
(bad)
int
stos
mov
int3
int3
das
mov
test
jnp
iret
mov
out
dec
and
pop
loop
cmp
popa
xor
repnz
sub
mov
sub
into
aas
loop
mov
and
cmp
xchg
pop
int
je
dec
sbb
mov
dec
ss
mov
mov
xchg
sbb
test
leave
mov
and
shl
and
in
outs
popa
or
mov
lahf
and
fmulp
sub
mov
fmul
stos
and
fnsave
popa
or
retf
fisttp
mov
test
or
lahf
and
out
xor
into
leave
jo
out
and
je
push
sbb
xchg
neg
dec
and
pusha
popa
xor
ficom
rcr
mov
fiadd
sbb
cmp
(bad)
fcomip
shl
stos
pop
fisttp
outs
popa
or
dec
outs
popa
or
sbb
mov
aam
push
mov
and
jecxz
sbb
pop
bound
mov
pusha
popa
test
and
pusha
popa
pop
fidivr
sub
mov
fmul
stos
and
fnsave
popa
or
ret
fisttp
mov
test
or
lahf
and
out
xor
(bad)
leave
jbe
(bad)
and
push
jae
jmp
xor
dec
(bad)
es
pusha
popa
push
xor
fmul
sbb
xor
and
arpl
mov
mov
pusha
popa
xchg
repnz
stos
ins
aaa
mov
lahf
and
out
jmp
test
popa
test
sbb
jo
and
mov
mov
mov
sub
call
mov
and
in
ficomp
addr16
popa
addr16
popa
addr16
popa
or
ds
ss
dec
ror
xor
repnz
ret
inc
(bad)
mov
(bad)
aad
test
call
in
push
or
and
jbe
aas
push
jmp
xor
shl
popa
pop
pusha
jne
jl
stos
es
aad
test
stos
cmps
mov
push
aad
mov
ss
jl
jmp
sbb
call
repnz
and
in
add
fsub
fwait
or
fstp
cld
stos
mov
mov
stos
fwait
test
mov
popa
retf
jae
pusha
out
retf
and
dec
fstp
fidivr
jno
mov
fsub
iret
cmp
cmp
mov
repnz
jae
pusha
xchg
pop
add
xor
sahf
repnz
ss
iret
shl
js
in
or
fstp
repnz
fst
mov
lahf
repnz
jb
popf
xchg
pusha
popa
gs
std
and
leave
fnsave
in
imul
mov
and
subps
or
jbe
in
retf
fstp
or
retf
fstp
test
fst
ss
ds
popa
ss
in
retf
fstp
or
je
sahf
mov
fidivr
or
retf
fstp
or
je
xor
std
and
leave
fnsave
in
push
mov
and
mov
fistp
shl
mov
fcomp
or
and
xor
dec
ss
mov
shr
popa
xor
or
sub
popa
or
je
or
pusha
popa
gs
popa
(bad)
fisubr
popa
or
imul
addr16
pop
popa
test
sub
into
stos
cmps
repnz
dec
mov
popa
mov
popa
xor
xor
addr16
pop
or
pop
and
or
inc
sub
test
mov
pop
or
push
cwde
test
call
retf
cdq
pop
pop
and
or
inc
fimul
repnz
fimul
push
push
stos
test
adc
cdq
or
stos
cmps
repnz
mov
and
aaa
jb
js
fst
inc
sub
mov
cmp
push
cmc
ja
call
xchg
push
call
retf
or
mov
push
jno
inc
cs
js
retf
ss
leave
cs
into
arpl
fsubrp
sbb
outs
or
scas
and
dec
popa
xor
arpl
pop
and
add
sub
out
fst
inc
or
inc
fimul
add
push
ins
repnz
fimul
cmp
leave
jo
fldenv
adc
ficom
or
imul
loop
and
inc
ss
popf
xchg
dec
dec
inc
loopne
ss
popa
or
ss
test
call
xor
gs
and
pop
and
add
sub
out
scas
and
data16
or
fst
fimul
sub
cmp
adc
fisub
sub
cs
mov
fst
fmulp
es
cs
(bad)
cmc
ja
call
mov
cdq
and
stos
cmps
mov
fidiv
fisubr
or
jo
popa
test
shl
pusha
popa
xor
ficom
mov
in
int
leave
pop
addr16
cmps
or
pop
and
or
ss
ss
icebp
jecxz
popa
add
push
gs
leave
jne
into
and
icebp
jecxz
popa
in
fs
or
push
popa
stos
push
mov
jecxz
dec
adc
in
sbb
and
arpl
aaa
pop
mov
cmps
dec
retf
jmp
test
dec
iret
mov
leave
push
lea
sbb
js
stos
cdq
and
jb
std
aaa
cli
xor
inc
xor
mov
cs
pop
es
(bad)
mov
popa
or
xor
adc
push
pop
or
inc
or
xor
and
mov
and
js
test
popa
mov
xor
or
jae
call
dec
fstp
xor
fsub
or
retf
or
sub
sahf
js
retf
ss
dec
retf
cmp
stos
xor
mov
sub
frstor
or
jmp
xor
shl
xchg
(bad)
pop
or
(bad)
adc
sahf
jb
popa
test
call
retf
or
jecxz
or
mov
adc
and
fnsave
mov
inc
sub
or
es
dec
or
inc
cmps
dec
enter
jle
(bad)
jo
sub
cdq
mov
and
scas
aad
test
mov
cdq
mov
and
mov
leave
js
or
and
pop
(bad)
stos
mov
icebp
inc
xchg
ss
std
and
ss
leave
and
enter
enter
inc
(bad)
jmp
loope
test
call
ja
popa
pop
pusha
jne
ja
xchg
inc
mov
xchg
push
or
leave
fcomp
repnz
frstor
(bad)
or
cmc
leave
fcomp
in
rcr
test
sub
in
sub
mov
cdq
repnz
cmp
jmp
inc
push
and
dec
ss
mov
fstp
ss
cmc
leave
fcomp
lock
test
sahf
mov
sahf
lock
adc
cwde
loop
pushf
repnz
and
pop
bound
test
call
mov
fucomp
retf
leave
push
imul
iret
and
(bad)
stos
cmps
xchg
call
repnz
(bad)
xor
and
mov
mov
repnz
frstor
fs
leave
fucom
leave
ds
xor
je
sahf
js
retf
ss
leave
ds
das
shl
mov
fisubr
movs
add
ss
imul
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
ds
ss
pop
and
rcr
div
pop
inc
in
addr16
or
ss
fdiv
leave
fcomp
dec
ss
ds
popa
mov
xor
adc
popa
cli
shr
sahf
test
retf
ss
pop
and
rcr
div
pop
jb
mov
or
enter
jae
popa
mov
sub
cmp
pusha
popa
repnz
repz
retf
ss
leave
ds
ss
pop
and
rcr
div
pop
jb
mov
or
enter
jb
popa
mov
sub
std
rol
mov
fstp
jb
popa
mov
and
scas
aad
mov
daa
sbb
fisubr
add
iret
jo
mov
fstp
shl
in
popaw
or
inc
push
or
jmp
ficomp
sub
pusha
popa
pop
fimul
or
fisubr
or
ss
cli
iret
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
ds
imul
and
repnz
or
mov
in
push
jb
popa
mov
and
scas
aad
mov
daa
sbb
pop
rol
icebp
leave
fcomp
or
xor
xchg
popf
repnz
jb
popa
mov
sub
mov
and
scas
aad
mov
daa
sbb
fsubp
and
ss
cli
iret
jo
mov
fstp
shl
in
popa
popa
or
sar
or
ss
in
and
rcr
gs
cld
and
retf
fnsave
in
popa
popa
or
retf
fnsave
repnz
xor
mov
fstp
shl
in
popa
popa
or
ins
popa
popa
or
ss
fs
retf
ss
outs
and
rcr
xchg
jne
xor
pusha
popa
pop
fisub
or
fiadd
and
ss
cli
iret
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
mov
popa
in
pusha
popa
or
ss
fs
dec
stos
shl
mov
fidivr
and
fdivp
and
ss
cli
iret
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
ds
not
je
sahf
js
test
sahf
pop
pop
mov
mov
repnz
cmp
popa
or
int3
daa
sbb
pop
jmp
aam
leave
fcomp
or
xchg
jle
or
neg
pushf
repnz
and
cmp
popa
or
int3
daa
sbb
pop
rol
icebp
leave
fcomp
or
or
popa
or
ss
fs
retf
ss
outs
and
rcr
xchg
jne
xor
pusha
popa
pop
fiadd
and
mov
inc
or
ss
test
fstp
and
repnz
popa
mov
and
repnz
frstor
mov
pushf
repnz
fst
jg
lahf
(bad)
retf
frstor
mov
pushf
repnz
pop
and
rcr
iret
push
jo
cmc
(bad)
cmp
ss
cs
ins
xchg
out
test
sahf
lock
stos
mov
icebp
inc
or
or
pusha
popa
or
mov
bnd
retf
leave
cmps
fptan
retf
fucom
mov
fstp
cmp
sahf
mov
leave
push
jns
mov
popa
repnz
jb
mov
fstp
shl
in
arpl
mov
jns
sbb
or
ss
fs
dec
cmp
je
sahf
mov
fisubr
or
mov
in
push
ja
popa
mov
and
scas
aad
mov
daa
sbb
pop
jmp
aam
leave
fcomp
or
call
sub
ss
fs
dec
xchg
in
je
sahf
mov
(bad)
and
mov
(bad)
retf
fucom
or
ret
repnz
fstp
mov
pushf
repnz
call
repnz
in
xchg
and
jae
call
repnz
or
fstp
or
and
std
pop
shr
retf
mov
jmp
enter
arpl
popa
or
enter
fcmovu
pushf
repnz
push
jne
outs
cld
and
retf
fnsave
in
bound
mov
ins
cmp
test
or
push
cwde
test
inc
call
repnz
outs
xor
and
mov
and
mov
cmps
fs
leave
fistp
or
leave
fistp
repnz
mov
xchg
repnz
fstp
repnz
push
jns
adc
lock
test
sahf
pop
pop
inc
mov
(bad)
or
popa
mov
cmp
jmp
shr
sahf
xchg
stos
cmps
in
sbb
popa
or
mov
fs
dec
cmp
je
sahf
mov
fsubp
pop
or
fisub
imul
mov
or
call
ficomp
xor
and
leave
ds
ss
pop
and
rcr
div
pop
jb
mov
or
enter
or
popa
mov
sub
repnz
pop
or
imul
sahf
repz
scas
in
fstp
repnz
ss
repnz
ins
test
sub
repnz
dec
pop
shl
mov
fimul
pop
or
fmulp
pop
or
ss
cli
iret
mov
or
pusha
popa
repnz
repz
retf
ss
leave
ds
ss
pop
and
rcr
div
pop
jb
std
cld
and
enter
or
popa
mov
sub
std
pop
shr
retf
fidivr
imul
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
ds
push
shl
mov
fiadd
movs
add
ss
imul
mov
mov
and
push
and
scas
aad
pop
mov
fnsave
gs
and
ss
leave
es
ss
pop
and
rcr
div
pop
jb
imul
or
enter
or
popa
mov
sub
jecxz
inc
popa
or
ss
imul
mov
or
call
ficomp
xor
and
leave
ds
ss
pop
and
rcr
div
pop
jb
mov
or
enter
or
popa
mov
sub
mov
and
scas
aad
mov
daa
sbb
fiadd
add
iret
jo
mov
fstp
shl
in
pop
popa
or
pop
cld
and
enter
or
popa
mov
sub
std
rol
mov
in
outs
or
popa
mov
and
scas
aad
mov
daa
sbb
pop
rol
icebp
leave
fcomp
or
sub
and
enter
or
popa
mov
sub
mov
and
scas
aad
mov
daa
sbb
pop
rol
icebp
leave
fcomp
or
sub
and
enter
or
popa
mov
sub
std
pop
shr
retf
fmulp
pop
or
ss
cli
iret
mov
or
(bad)
pusha
popa
repnz
repz
retf
ss
leave
ds
in
leave
fistp
repnz
xor
and
ss
leave
es
ss
pop
and
rcr
div
pop
jb
mov
or
enter
or
popa
mov
sub
std
pop
shr
retf
pop
and
icebp
leave
fcomp
or
pop
push
popa
or
ss
fs
dec
xchg
in
je
sahf
mov
fisubr
movs
add
ss
mov
ss
cli
iret
stos
mov
icebp
xor
ss
mov
fstp
shl
in
push
popa
or
sub
popa
or
ss
fs
dec
xchg
in
je
sahf
mov
ficomp
pop
or
pop
cld
mov
icebp
leave
fcomp
or
(bad)
or
ss
pop
and
rcr
div
pop
jb
mov
or
enter
or
sub
mov
and
scas
aad
mov
daa
sbb
fimul
add
iret
jo
mov
fstp
shl
in
sbb
mov
jno
out
and
enter
or
sub
or
pop
and
or
jbe
adc
ficom
pop
or
leave
fistp
or
leave
fcomp
or
ret
repnz
jb
mov
leave
xchg
mov
retf
fisttp
repnz
lock
retf
and
repnz
push
or
shr
sahf
test
jno
mov
and
mov
sahf
lock
jge
push
jmp
xor
shl
popa
pop
mov
jne
stos
cdq
cmp
stos
cmps
retf
jae
popa
out
mov
popa
add
test
in
enter
fdivrp
pop
or
mov
and
leave
fnsave
gs
and
faddp
xchg
repnz
mov
sahf
or
addr16
xor
push
fbld
dec
pop
shl
inc
jmp
popa
gs
and
ficomp
mov
je
or
jmp
or
mov
adc
leave
fucom
leave
push
stos
cdq
cmp
stos
cmps
push
jmp
xor
shl
popa
pop
pusha
jne
mov
or
cmp
popa
or
mov
sahf
repnz
fistp
add
mov
stos
in
retf
fstp
or
and
ss
in
retf
fstp
test
adc
retf
mov
fs
ficom
or
mov
stos
hlt
lods
retf
fstp
or
retf
fstp
repnz
retf
ss
pop
ds
sahf
and
and
dec
mov
fucomp
cmc
pop
(bad)
retf
dec
cmp
and
mov
sahf
repnz
xchg
shl
fisttp
test
fst
xchg
retf
fstp
or
mov
scas
xor
jge
fstp
and
dec
mov
fisttp
or
fcom
popa
or
leave
fisttp
sbb
xchg
fistp
xor
and
cmc
pop
(bad)
retf
push
or
mov
xor
popa
or
leave
fnsave
gs
(bad)
and
ss
arpl
(bad)
sahf
mov
push
push
in
pop
popa
or
xor
popa
in
fcomp
or
enter
mov
fnsave
in
push
popa
or
leave
fstp
repnz
xchg
in
lock
fstp
repnz
xchg
stc
lock
fstp
repnz
scas
in
retf
fstp
repnz
mov
std
lock
(bad)
inc
das
aaa
in
pop
popa
or
xor
popa
gs
(bad)
and
leave
fnsave
in
sbb
mov
in
mov
scas
in
enter
ficomp
mov
leave
fucomp
mov
in
push
and
dec
pop
and
mov
retf
ss
leave
sub
in
enter
and
pop
ja
or
pop
fistp
mov
fcomp
or
enter
mov
sahf
or
mov
lahf
repnz
and
fstp
or
enter
faddp
mov
leave
jnp
mov
scas
in
enter
pop
and
or
pop
and
or
leave
fnsave
addr16
and
cmp
sahf
mov
fdivp
push
or
and
xor
shl
jo
pusha
popa
xor
mov
add
popa
mov
xor
repnz
dec
test
or
icebp
enter
pop
push
mov
cmp
and
into
aas
loop
push
pop
retf
ss
ss
mov
sahf
repnz
test
retfw
fstp
add
push
or
pop
popa
or
mov
sahf
or
(bad)
and
pusha
push
popa
or
ss
test
stos
cmps
xor
popa
or
leave
fnsave
pop
fsubp
push
or
pop
(bad)
and
leave
fnsave
in
lahf
sahf
repnz
ins
xor
frstor
inc
pop
loop
stos
fistp
or
stos
cmps
out
mov
sahf
or
and
lock
frstor
mov
pushf
repnz
jb
data16
popa
mov
inc
aas
or
add
fst
test
in
adc
leave
xchg
(bad)
fisttp
xchg
leave
addr16
adc
push
jmp
gs
fidiv
xor
test
imul
cli
shr
push
cmc
mov
retf
ss
iret
push
stos
xor
leave
push
ins
in
adc
mov
ficomp
ds
iret
push
stos
xor
gs
ss
iret
push
stos
xor
mov
clc
ds
jae
outs
mov
cmp
outs
mov
or
addr16
ss
retf
pop
loop
jo
and
imul
call
retf
in
dec
cs
std
jbe
mov
add
popa
mov
cs
js
stos
xchg
mov
daa
xor
adc
leave
push
ins
add
and
dec
retfw
and
dec
enter
xor
and
sub
and
into
and
mov
xor
outs
mov
cmp
jno
retfw
ss
dec
into
jb
or
jbe
or
add
stos
cdq
cmp
stos
cmps
addr16
je
mov
and
jae
xor
imul
je
jle
and
jae
ds
ins
jmp
pop
mov
and
lods
adc
gs
xchg
fsubp
cmp
test
and
mov
fstp
mov
mov
or
(bad)
fstp
in
leave
fnsave
gs
(bad)
and
ss
cmps
add
sub
popa
test
adc
mov
ficom
movs
add
leave
xchg
test
js
retf
ss
mov
shr
sahf
test
adc
mov
cmp
fucomp
leave
fnsave
xor
aaa
in
or
adc
jnp
and
repnz
repnz
retf
ss
leave
sub
(bad)
sahf
repnz
cs
sbb
popa
test
aad
test
stos
cmps
cmp
bound
int
jl
(bad)
cmc
ja
call
ss
and
pop
popa
test
inc
dec
adc
xchg
jmp
cmps
xchg
ror
fucomp
retf
pop
shr
retf
gs
gs
and
test
mov
pop
or
push
cwde
test
dec
imul
mov
mov
pop
add
popa
mov
sub
dec
push
and
shr
sahf
xchg
stos
cmps
test
adc
shl
mov
ret
retfw
ss
leave
ds
ss
pop
and
rcr
div
pop
jne
mov
or
leave
fnsave
in
push
popa
or
lock
push
or
ss
pop
and
rcr
div
pop
dec
in
adc
pop
or
fs
fmul
pop
jp
dec
ss
fmul
fidivr
movs
sbb
ss
imul
mov
or
(bad)
pusha
popa
xor
mov
repnz
cmp
pusha
popa
xor
mov
repnz
std
rol
mov
std
sahf
repnz
and
cmp
popa
or
int3
daa
sbb
pop
rol
or
fidiv
or
fidiv
push
or
ss
cli
iret
mov
mov
add
popa
mov
and
scas
aad
pop
mov
fnsave
outs
(bad)
and
leave
fnsave
in
adc
mov
jno
inc
xor
pop
jmp
and
sub
pusha
popa
xor
mov
add
popa
mov
mov
cmp
popa
or
int3
daa
sbb
pop
rol
or
fdivp
push
or
pop
sub
or
ficomp
movs
add
and
mov
and
scas
aad
mov
daa
sbb
pop
rol
or
fidiv
movs
add
ss
in
(bad)
fstp
or
ficomp
push
or
ss
cli
iret
mov
mov
add
popa
mov
and
scas
aad
pop
mov
fnsave
outs
(bad)
and
leave
fnsave
in
adc
mov
jno
pop
cld
and
leave
fnsave
in
adc
mov
imul
(bad)
ss
fs
dec
xchg
in
je
in
mov
ret
retfw
ss
leave
ds
xchg
and
stos
cmps
gs
and
leave
fnsave
in
adc
mov
imul
(bad)
ss
fs
dec
xchg
in
je
in
mov
ret
retfw
ss
leave
ds
jnp
je
in
mov
ret
retfw
ss
leave
ds
ss
pop
and
rcr
div
pop
jne
mov
or
leave
fnsave
in
adc
mov
imul
cmps
popa
in
leave
fnsave
gs
and
leave
fnsave
in
adc
mov
jno
adc
popa
or
ss
fs
dec
xchg
in
je
in
mov
ret
retfw
ss
leave
ds
popa
shl
mov
ret
retfw
ss
leave
ds
mov
fucomp
retf
fdivrp
push
or
ss
cli
iret
mov
or
(bad)
pusha
popa
xor
mov
push
and
repnz
mov
and
scas
aad
test
mov
popa
pop
mov
fnsave
gs
and
leave
fnsave
in
adc
mov
jno
mov
popa
or
ss
fs
dec
xchg
in
je
in
mov
ret
retfw
ss
leave
ds
mov
mov
ret
retfw
ss
leave
mov
popa
in
adc
(bad)
ss
fs
dec
xchg
in
je
in
mov
ret
retfw
ss
leave
ds
ss
pop
and
rcr
div
pop
dec
in
adc
pop
or
fs
fmul
pop
jp
dec
ss
fmul
fisub
push
or
pop
repnz
or
fidiv
push
or
pop
and
or
pop
and
or
fidiv
in
jmp
sbb
(bad)
fstp
or
mov
mov
or
sahf
mov
fmulp
dec
or
jmp
or
pop
loop
out
stos
xchg
cli
shr
sahf
test
jge
push
jmp
xor
shl
popa
pop
pusha
jne
inc
popa
mov
cdq
test
mov
sahf
or
stos
add
mov
mov
ss
arpl
mov
lock
fstp
push
aaa
and
shr
sahf
test
retf
and
in
or
xchg
repnz
dec
popa
(bad)
mov
sbb
scas
in
retf
fstp
or
ss
mov
dec
into
shl
mov
xor
popa
(bad)
fiadd
movs
sub
loop
mov
es
or
enter
mov
fnsave
in
or
mov
xor
mov
call
sbb
fistp
test
sub
or
je
in
mov
fcomp
and
and
mov
scas
in
enter
fidivr
shr
leave
fucomp
mov
fimul
mov
and
mov
retf
ss
leave
sub
cmps
retf
lahf
repnz
popaw
or
enter
and
mov
adc
in
fstp
or
stos
cmps
xor
mov
rcr
sahf
push
mov
fnsave
xor
or
pop
and
or
retf
repnz
popa
in
or
aas
loop
mov
xchg
leave
lock
fisttp
mov
sbb
or
dec
fstp
mov
pop
xor
shl
mov
fcomp
and
and
leave
es
jb
fstp
retf
popa
or
leave
fnsave
gs
(bad)
and
ss
cmps
add
push
jp
fisub
popa
or
mov
sahf
or
cmps
push
test
pop
or
sti
cmp
or
jl
popa
or
ss
in
retf
pop
pusha
retf
ss
cmc
pop
(bad)
retf
or
pusha
popa
xor
mov
fstp
repnz
and
mov
popa
or
int
sahf
pop
gs
leave
fucom
leave
sub
or
xor
or
imul
scas
in
retf
fstp
lock
fisttp
test
mov
popa
repnz
daa
and
push
jmp
or
je
aaa
in
push
popa
or
not
gs
fisttp
ss
sahf
mov
sbb
test
and
lock
fisttp
mov
mov
mov
fucom
in
jb
repnz
fcmove
fucom
leave
cmp
in
int
sahf
test
je
neg
and
mov
pushf
repnz
and
ss
in
retf
fstp
or
add
and
and
cmc
pop
(bad)
retf
(bad)
fisttp
xchg
jge
push
jmp
gs
fidiv
xor
test
pop
aad
stos
cdq
cli
shr
xor
js
popa
or
inc
mov
and
arpl
in
pop
xor
xor
retf
ss
retf
gs
adc
and
mov
popa
or
(bad)
stos
cmps
pop
fidivr
dec
or
mov
retf
and
in
add
or
pop
and
gs
jl
or
fisubr
dec
or
into
adc
pop
ficom
and
data16
xor
and
fimul
or
frstor
cmc
pop
(bad)
retf
cmp
cmc
ja
call
ss
and
pop
mov
gs
fs
mov
fucomp
retf
sahf
js
retf
ss
retf
mov
in
sti
inc
es
int
popa
or
cmp
popa
xor
aaa
in
or
pop
and
or
fstp
repnz
mov
sahf
or
(bad)
leave
jae
icebp
push
aas
or
fidivr
cmps
out
jge
(bad)
cmc
ja
call
mov
dec
jnp
mov
popa
imul
lahf
or
leave
or
sub
or
jmp
in
or
mov
and
dec
aaa
and
add
jne
and
jae
loop
xor
pusha
popa
xor
in
or
mov
jns
jae
xor
dec
and
and
or
mov
popa
imul
lahf
add
das
sbb
pop
popa
popf
cmps
sbb
cmp
cmc
pop
(bad)
retf
or
pop
and
or
pop
and
or
aaa
and
ss
popa
xor
in
or
mov
dec
push
repnz
in
and
movs
dec
popa
or
push
fst
arpl
inc
or
pop
and
addr16
fst
pusha
popa
in
or
pop
and
addr16
fst
arpl
pusha
or
pop
and
addr16
fst
bound
jo
popa
or
mov
dec
push
repnz
dec
push
and
pusha
dec
push
repnz
dec
inc
and
pusha
dec
push
repnz
jno
and
or
dec
push
repnz
dec
ss
ss
cmc
pop
(bad)
retf
aaa
addr16
fst
arpl
fadd
aaa
addr16
fst
arpl
in
add
aaa
addr16
fst
pusha
popa
in
add
aaa
addr16
fst
pusha
popa
in
add
pusha
cmc
mov
ja
call
outs
lea
into
aad
test
call
cmp
mov
inc
or
jbe
or
mov
popa
addr16
in
arpl
add
popa
or
mov
and
sbb
mov
popa
addr16
lea
add
push
cmc
mov
pop
dec
xchg
ja
mov
adc
popa
scas
adc
out
ss
popf
repnz
dec
test
and
icebp
leave
pop
jge
jbe
mov
adc
popa
scas
ss
or
ss
popf
repnz
hlt
dec
ss
and
icebp
leave
pop
dec
xchg
ja
mov
dec
and
pop
cld
out
ss
popf
repnz
dec
std
sub
and
icebp
leave
pop
inc
xchg
ja
mov
sbb
out
ss
popf
repnz
dec
sbb
ss
cmc
aaa
(bad)
retf
sahf
cmp
jnp
or
ja
or
mov
popa
addr16
mov
add
or
mov
je
mov
jnp
ins
mov
mov
and
clc
in
pusha
popa
repnz
sub
test
dec
(bad)
(bad)
je
aaa
in
ficomp
scas
ds
and
or
ss
dec
(bad)
jb
in
pop
popa
or
mov
pop
push
xchg
ja
or
sbb
addr16
es
xor
dec
popa
gs
pop
pop
(bad)
mov
(bad)
je
or
sbb
or
ss
popa
repnz
dec
popa
pop
pop
push
jmp
retf
pop
or
pop
and
dec
movs
(bad)
je
or
in
pusha
popa
addr16
ss
or
fst
arpl
fst
arpl
cmps
and
mov
shl
in
jb
pop
pop
or
mov
and
ss
popa
in
pop
popa
or
ss
popa
addr16
popa
addr16
fs
dec
popa
addr16
popa
mov
popa
or
pop
sub
sbb
fild
stos
cmps
mov
call
pusha
pop
pop
adc
or
ss
popa
repnz
dec
popa
repnz
dec
ss
jno
add
popa
or
pop
and
dec
or
xlat
in
pusha
popa
addr16
ss
jno
pusha
popa
fst
test
fst
arpl
es
inc
(bad)
and
jne
or
or
cs
and
ss
popa
in
pop
popa
or
ss
popa
repnz
dec
popa
repnz
dec
ss
jno
out
popa
or
ss
dec
gs
pop
in
mov
(bad)
je
or
sub
push
or
pop
and
or
jb
and
aaa
and
mov
popa
or
and
gs
clc
mov
in
push
popa
or
ss
popa
repnz
dec
popa
repnz
dec
ss
add
or
pop
and
dec
mov
mov
pusha
popa
addr16
ss
in
arpl
dec
clc
and
aaa
and
fimul
inc
or
je
or
fst
arpl
and
popa
or
add
sahf
cmp
and
ss
push
gs
and
pop
pop
or
mov
and
ss
popa
in
push
popa
or
ss
cdq
or
stos
cmps
fst
test
fst
pusha
popa
sbb
popa
or
and
cwde
and
pop
and
dec
mov
mov
pusha
popa
addr16
ss
and
fcomp
cmp
mov
sahf
cmp
and
pop
les
ss
or
and
or
pop
clc
and
ss
popa
in
add
xchg
mov
dec
mov
popa
fst
test
fst
arpl
es
loopne
and
repnz
and
popa
or
dec
xor
je
or
in
pusha
popa
addr16
ss
jns
pusha
popa
fst
test
fst
arpl
es
push
gs
pop
loope
or
ss
dec
in
pusha
popa
gs
stc
and
adc
mov
sahf
cmp
mov
sahf
cmp
and
and
pop
and
pop
inc
or
and
clc
mov
in
add
xchg
sar
dec
ss
cdq
or
stos
cmps
fst
test
fst
arpl
es
aaa
gs
popa
or
ss
popa
or
in
pusha
popa
gs
stc
and
adc
popa
scas
mov
and
or
push
and
pop
cmp
and
and
cmps
and
pop
or
jmp
dec
ss
popa
(bad)
and
scas
mov
and
add
sahf
cmp
and
and
cmc
and
pop
or
cmps
and
pop
and
(bad)
and
scas
sub
dec
cmc
mov
pop
push
xchg
ja
or
je
or
and
and
or
jmp
clc
and
ss
ss
and
fst
arpl
fst
pusha
popa
addr16
add
or
mov
and
ss
popa
(bad)
and
scas
push
mov
sahf
cmp
mov
sahf
cmp
and
and
lahf
and
pop
cmp
or
aad
and
ss
popa
in
add
xchg
mov
or
leave
fstp
mov
and
shr
mov
fstp
pop
mov
je
mov
add
adc
in
pusha
popa
repnz
sub
test
dec
(bad)
(bad)
je
aaa
in
aad
repnz
jno
ds
dec
cmc
mov
pop
imul
jae
xor
iret
jle
mov
popa
fst
test
je
dec
retf
stc
test
sbb
and
or
dec
mov
in
in
pusha
popa
gs
ficomp
and
or
ja
or
jae
dec
dec
(bad)
mov
jne
and
or
out
pusha
popa
gs
stc
and
push
and
xor
and
and
or
ja
or
ja
or
aaa
and
jae
dec
dec
(bad)
mov
xor
dec
push
shr
pusha
popa
gs
stc
and
push
and
push
and
pop
and
subps
or
pop
and
or
xor
popa
addr16
popa
addr16
jne
mov
popa
or
pusha
dec
push
repnz
dec
adc
leave
pop
push
xchg
ja
or
je
or
inc
or
pop
or
mov
and
ss
popa
in
cmp
cld
dec
ss
cdq
cmp
stos
cmps
gs
clc
and
aaa
and
add
cld
dec
ss
and
js
pusha
popa
addr16
and
and
or
mov
popa
cmp
or
aaa
and
add
cld
dec
ss
and
or
fst
arpl
jo
popa
or
add
sahf
cmp
and
ss
push
and
gs
(bad)
mov
xlat
je
or
ss
retf
popa
or
add
sahf
cmp
and
ss
pop
and
or
mov
and
ss
popa
in
cmp
or
ss
leave
fisttp
or
ja
or
ja
or
ss
pcmpgtw
and
pop
and
dec
xor
je
or
in
pusha
popa
addr16
ss
jns
pusha
popa
test
adc
repnz
dec
popa
repnz
dec
ss
jno
push
dec
out
and
into
and
and
pop
pusha
mov
(bad)
je
or
adc
leave
pop
push
xchg
ja
or
ja
or
ss
ror
and
dec
jb
je
or
in
pusha
popa
addr16
ss
std
stos
arpl
fst
arpl
fst
arpl
es
aaa
gs
and
pop
and
dec
popa
or
in
pusha
popa
gs
stc
and
sub
popa
scas
mov
and
or
jb
and
aaa
and
shl
popa
or
and
gs
sti
and
ss
popa
in
aas
popa
or
ss
popa
repnz
dec
popa
repnz
dec
ss
jno
retf
and
pop
frstor
ss
jg
and
pop
jne
dec
ss
mov
or
ss
or
ja
or
je
or
ss
dec
and
or
xchg
pusha
popa
gs
clc
and
ss
ss
adc
fidiv
ss
popa
repnz
dec
popa
repnz
dec
ss
jns
push
dec
daa
and
or
jmp
clc
and
ss
ss
and
fst
arpl
fst
pusha
popa
addr16
add
gs
pop
pop
(bad)
mov
xlat
je
or
fdivr
popa
or
ss
popa
repnz
dec
popa
repnz
dec
ss
jbe
lods
and
pop
bound
ss
jg
ss
pop
pop
sar
je
or
ss
mov
fstp
test
retf
leave
fnstsw
push
jmp
xor
shl
ss
push
dec
ins
mov
push
push
and
or
ss
bound
dec
bound
and
leave
push
imul
mov
sub
popa
addr16
xchg
and
cmc
stos
cdq
or
stos
cmps
pop
fiadd
add
ss
stc
xor
popa
or
mov
addr16
pop
leave
push
jno
or
popa
or
leave
fucom
leave
sbb
inc
outs
or
fs
and
fst
leave
push
imul
mov
jns
jae
push
or
dec
into
jb
js
dec
pop
mov
ss
in
sbb
mov
popa
or
fisubr
test
arpl
pusha
or
cmp
leave
adc
and
scas
xchg
xor
mov
and
(bad)
and
adc
and
add
and
rcr
fidivr
frstor
daa
dec
fdivr
fstp
adc
leave
and
pop
cli
ror
scas
in
leave
fstp
or
xor
xchg
and
leave
fnsave
in
xor
sub
ss
jo
es
pop
ror
scas
in
leave
fstp
or
xor
gs
xchg
and
leave
fnsave
in
xor
sahf
or
or
pusha
popa
xor
mov
dec
frstor
daa
dec
add
mov
fstp
sbb
and
std
rol
mov
fcomp
jo
sub
pop
mov
in
leave
fstp
or
aas
push
jo
xchg
xchg
and
leave
fnsave
in
xor
sahf
pop
inc
xor
rol
and
dec
and
popa
lea
push
daa
dec
pusha
mov
fstp
sbb
and
std
pop
shr
retf
mov
sahf
add
or
pusha
popa
xor
mov
and
popa
lea
ins
js
dec
pop
mov
fstp
sbb
and
jo
sub
sbb
ja
dec
ss
in
leave
fstp
or
ss
and
je
or
pusha
popa
xor
or
test
repnz
sbb
mov
test
fistp
add
retf
ss
leave
push
stos
xchg
cli
shr
sahf
test
retf
dec
repz
fnstsw
push
jmp
gs
pusha
jne
js
popf
les
call
retf
aaa
in
cmp
mov
jno
or
fstp
int
sub
or
and
push
ins
jg
or
ja
call
and
pop
popa
pushf
jg
cs
call
retf
mov
test
stos
cmps
gs
nop
and
leave
fnsave
in
xor
or
ss
outs
or
iret
stos
hlt
dec
fstp
repnz
and
pop
mov
dec
ss
in
rcr
pop
fmulp
je
mov
sahf
cmovae
or
test
xor
mov
and
popa
test
or
dec
fstp
jmp
xchg
repnz
jb
mov
mov
cdq
repnz
es
pop
and
dec
ss
in
rcr
pop
fidiv
fdivr
into
fstp
adc
pusha
popa
xor
mov
and
fadd
or
into
fstp
cmp
iret
xchg
repnz
jb
push
and
popa
lea
and
ror
scas
in
rcr
pop
fisub
or
into
fstp
popa
test
xor
mov
and
popa
test
and
dec
fstp
xchg
iret
xchg
repnz
jb
or
and
mov
cdq
repnz
sub
pop
mov
dec
ss
in
rcr
pop
fmulp
jne
mov
sahf
push
inc
xor
les
iret
xchg
repnz
jb
fisub
and
(bad)
aad
test
stos
cmps
lea
cs
pop
retf
ss
in
rcr
pop
fimul
fdivr
into
fstp
push
and
mov
xchg
repnz
jb
sahf
and
popa
lea
sub
sbb
add
dec
ss
in
rcr
pop
ficomp
or
je
in
mov
aad
repnz
leave
fucomp
std
rol
mov
aad
repnz
pusha
popa
gs
leave
(bad)
repnz
mov
mov
leave
fucom
mov
ficomp
mov
and
add
popa
or
mov
cmp
or
ss
leave
fucom
leave
ds
in
into
fstp
shl
popa
in
and
mov
popf
icebp
leave
frstor
mov
arpl
retf
aaa
cmp
loope
leave
ficomp
es
and
mov
popf
repnz
and
mov
ficomp
aam
and
mov
ficomp
adc
cmp
xchg
jmp
cmps
mov
retf
mov
cdq
cmc
leave
frstor
pop
retf
ss
into
mov
jecxz
out
fsub
iret
cmp
cmp
ficomp
(bad)
and
xor
and
cmps
and
pop
or
icebp
enter
fisubr
jns
mov
popa
cmps
and
pop
cmp
in
into
fstp
or
(bad)
or
mov
cdq
repnz
jb
push
and
popa
test
aad
test
stos
cmps
xor
or
mov
lahf
repnz
jb
mov
xor
cmps
popf
cmc
leave
fnsave
in
xor
jne
mov
lahf
repnz
jb
add
and
mov
popf
repnz
mov
in
into
fstp
dec
ss
in
into
fstp
or
pop
and
mov
ficomp
sbb
and
or
(bad)
mov
icebp
retf
pop
fisubr
movs
add
loop
mov
popa
or
leave
fucom
int
jb
fisub
and
mov
fstp
xchg
stos
in
rcr
test
mov
sahf
pop
cmp
mov
pop
mov
dec
ss
test
je
in
mov
ficomp
sbb
and
leave
es
out
mov
retf
repnz
ss
mov
fcomp
sbb
and
mov
aad
repnz
mov
aad
repnz
fs
enter
inc
xor
mov
aad
repnz
fs
enter
(bad)
sahf
repnz
mov
jp
mov
popa
repnz
repnz
scas
in
enter
pop
hlt
mov
icebp
enter
ficomp
or
mov
fnsave
in
xor
mov
fucomp
mov
fcomp
push
ss
mov
aad
repnz
dec
and
call
cmps
xchg
cmc
leave
fstp
test
shr
sahf
test
scas
in
into
fstp
cmc
leave
fisttp
xor
mov
and
mov
lahf
repnz
jne
mov
ficomp
or
retf
ss
mov
ficomp
repnz
repnz
dec
fistp
and
or
and
jmp
or
retf
pop
gs
loope
fstp
repnz
ins
test
sub
repnz
fst
loope
fstp
or
and
dec
inc
cmp
sbb
popa
or
leave
fnstsw
push
ins
jmp
or
ja
call
ss
and
pop
popa
cdq
push
or
pavgb
xor
or
ss
popa
gs
and
fidiv
jae
ss
in
fcomp
sahf
add
push
jne
fisub
or
enter
outs
stos
mov
xchg
ret
arpl
xor
dec
ss
or
dec
and
mov
fidivr
or
and
popf
xchg
pusha
popa
in
xor
ficom
jo
ss
push
and
popa
test
adc
or
and
mov
fst
ss
pusha
cmps
and
mov
fnsave
in
mov
jno
leave
frstor
cmp
loop
inc
xchg
and
and
xor
dec
mov
popa
in
ss
or
es
int3
ror
div
jecxz
adc
call
cmps
mov
arpl
idiv
frstor
repnz
leave
push
in
ss
or
fcmovnu
sahf
mov
outs
add
fsub
fwait
or
fstp
cld
stos
mov
mov
stos
xchg
test
fucom
mov
test
mov
ds
mov
or
fcmovnu
sahf
or
ss
mov
add
cmps
int3
loopne
fst
mov
mov
leave
adc
mov
dec
icebp
lods
je
or
out
pusha
popa
xor
mov
and
popa
ss
in
fcmovu
sahf
pop
mov
fnsave
in
xor
mov
fnsave
in
out
repnz
clc
pop
ss
mov
retf
leave
fucom
leave
cs
popa
xor
mov
and
out
and
in
sub
mov
lods
je
or
out
pusha
popa
gs
and
ss
mov
or
push
or
pusha
popa
mov
and
lds
cmp
or
ss
cmps
aad
and
jge
pusha
popa
in
xor
mov
fucomp
cmp
and
rol
test
mov
lods
je
or
out
pusha
popa
gs
mov
or
ss
mov
or
push
(bad)
loopne
popa
mov
and
lds
xchg
cli
and
ss
cmps
aad
and
or
cmp
popa
or
mov
retf
loopne
popa
mov
and
lds
call
or
pop
and
or
ss
outs
or
pop
and
or
xchg
sub
fptan
cmp
popa
xor
xor
mov
and
mov
mov
pop
or
push
cwde
ss
adc
pusha
jb
mov
int
repnz
fst
fdivp
outs
or
jae
xor
dec
xchg
in
je
sahf
js
retf
and
or
scas
in
(bad)
sahf
pop
fimul
or
(bad)
sahf
mov
frstor
lea
and
iret
dec
popa
add
pop
mov
fnsave
repnz
xchg
mov
and
ss
and
dec
arpl
ret
leave
push
aad
pop
sub
push
or
mov
mov
leave
test
sahf
test
fst
(bad)
ins
or
in
pusha
popa
test
call
into
xchg
push
dec
and
mov
and
dec
test
and
or
ss
and
mov
loope
push
dec
and
ss
ss
dec
out
and
and
pop
and
test
fstp
aad
in
fcmovnu
sahf
xchg
stos
mov
or
repnz
ss
lds
and
mov
loope
dec
mov
jle
and
fst
arpl
ss
popa
addr16
popa
addr16
popa
gs
dec
ss
adc
and
or
and
mov
mov
dec
ss
popa
addr16
and
or
leave
mov
ins
or
mov
mov
add
and
jae
pusha
popa
pop
fisub
ins
or
fcmovnu
sahf
mov
push
adc
and
or
(bad)
mov
mov
(bad)
repnz
es
or
out
stos
mov
repnz
jb
mov
dec
or
je
pusha
popa
gs
and
mov
out
fwait
leave
fucom
leave
sub
popa
and
icebp
daa
or
or
sahf
fstp
or
fcomp
sahf
pop
pop
and
or
ss
popa
addr16
and
in
cs
or
leave
fnsave
addr16
popa
gs
and
fsubrp
ins
or
cmp
popa
addr16
xchg
or
and
or
pop
popa
xchg
ja
mov
cmp
popa
out
scas
and
retfw
ss
aad
cli
call
pop
fidiv
popa
addr16
popa
xor
in
sub
or
imul
mov
and
gs
mov
es
mov
or
jae
call
mov
xor
mov
sub
cmc
xor
in
aaa
and
stos
sub
or
pusha
or
xor
popa
xor
cmp
and
mov
pop
pop
or
and
mov
popa
or
mov
popa
or
and
clc
in
pusha
popa
repnz
dec
ss
leave
fucomp
mov
fistp
cmc
mov
pusha
popa
repnz
repnz
retf
leave
fucom
leave
es
in
retf
fstp
repnz
jb
mov
faddp
ins
or
mov
popa
or
retf
fstp
lods
ja
mov
cmp
popa
add
push
push
xchg
or
fxch
fstp
cwde
cli
fistp
lock
fstp
inc
cmp
sahf
repnz
fucom
in
test
sahf
mov
sbb
xchg
or
aad
fstp
lock
fisttp
loop
sahf
repnz
popa
fst
xchg
arpl
dec
das
popa
or
mov
xchg
and
xor
popa
lods
push
xchg
and
ss
cdq
cmp
stos
cmps
mov
inc
aad
ss
xor
and
add
dec
ss
leave
fnstsw
lea
push
aad
and
outs
and
or
rcr
sahf
push
fild
or
into
stos
cmps
lods
ss
imul
ss
popa
in
cs
or
and
and
ds
imul
cmp
popa
test
aad
test
stos
cmps
in
and
jne
mov
lahf
repnz
mov
popa
xor
and
dec
ss
pop
xor
clc
dec
ss
push
ss
cld
dec
ss
dec
xor
inc
xor
dec
ss
jge
xor
jne
xor
dec
ins
xor
dec
in
xor
popa
fst
sbb
ss
sahf
xor
dec
ss
jno
xor
imul
ss
ins
xchg
jno
leave
push
jno
mov
fstp
sbb
mov
popa
mov
and
test
fistp
aad
fstp
or
retf
fstp
or
mov
and
mov
lahf
repnz
jb
cmp
mov
imul
fstp
or
out
pusha
popa
addr16
and
or
ss
mov
mov
fcomp
lock
frstor
repnz
popa
or
cmps
sti
or
and
mov
lahf
repnz
jb
cmp
dec
imul
fstp
lea
and
iret
mov
or
jl
dec
ss
cld
lock
(bad)
repz
mov
sahf
or
ss
popa
gs
and
repnz
cmp
pop
xor
popa
mov
xor
rol
mov
fistp
mov
fcomp
cld
retf
fstp
dec
ss
in
retf
fstp
or
pop
frstor
ss
in
enter
leave
pop
jge
jbe
mov
aas
and
mov
lahf
repnz
and
pop
sub
dec
ss
popa
in
sub
leave
pop
jge
jbe
mov
aas
and
shl
popa
or
leave
fucom
vpunpckldq
xor
and
mov
jno
push
dec
popa
addr16
xchg
je
or
fst
bound
sub
or
ss
icebp
enter
fstp
outs
mov
leave
test
or
fcomp
or
sbb
sub
pop
lds
in
sub
leave
pop
jge
jbe
mov
and
inc
es
or
leave
frstor
mov
lahf
repnz
push
jno
(bad)
mov
popa
xor
in
mov
fistp
aad
and
mov
fistp
push
ss
leave
es
sahf
or
retf
fcomp
lea
sub
mov
pushf
repz
frstor
push
dec
popa
addr16
cmps
fidiv
or
fst
pusha
popa
in
sub
(bad)
bound
enter
mov
fnsave
gs
and
leave
fnsave
in
sub
mov
jno
leave
and
mov
fnsave
repnz
dec
in
ss
mov
fcomp
addr16
popa
gs
cmc
and
and
add
dec
std
add
xor
loopne
or
enter
mov
fnsave
gs
cmc
and
leave
fnsave
in
sub
mov
jno
leave
and
mov
fnsave
repnz
dec
jge
ss
mov
fcomp
addr16
popa
gs
cmc
and
and
add
dec
push
add
xor
fistp
bnd
pop
or
push
cwde
mov
and
or
ss
popa
in
sub
leave
pop
dec
xchg
ja
mov
xor
popa
in
and
lock
call
sub
sahf
repnz
fstp
xor
pop
inc
addr16
popa
gs
and
and
add
dec
mov
mov
and
mov
lahf
repnz
and
mov
fcomp
mov
in
and
and
mov
fcomp
cld
retf
fstp
dec
ss
in
retf
fstp
or
pop
frstor
ss
in
enter
leave
pop
inc
xchg
ja
mov
xor
popa
lea
and
pop
xor
in
and
inc
xchg
ja
mov
and
jbe
popa
or
leave
frstor
or
sahf
repnz
fstp
xor
pop
inc
addr16
popa
gs
and
xor
popa
repnz
dec
imul
xor
popa
lea
and
or
sahf
repnz
sahf
dec
mov
pusha
or
mov
sbb
jge
and
mov
lahf
repnz
jb
mov
fistp
aad
and
mov
fistp
add
es
mov
fucomp
mov
fistp
or
pop
and
or
jbe
and
xor
popa
test
dec
arpl
dec
popa
repnz
repnz
retf
ss
xor
and
cmp
clc
dec
mov
pop
or
push
cwde
test
dec
popa
and
xor
mov
xchg
repz
fisttp
ss
in
retf
fstp
std
(bad)
pusha
popa
repnz
repnz
retf
ss
add
sahf
repnz
sahf
dec
mov
pusha
or
mov
fnsave
pop
mov
fnsave
repnz
repnz
retf
and
or
leave
fnsave
addr16
xchg
in
je
sahf
mov
fiadd
or
enter
enter
leave
pop
and
cmps
xor
popa
addr16
popa
xor
addr16
popa
or
cmps
bound
nop
es
or
leave
fucomp
cmc
pop
(bad)
retf
or
(bad)
fcomp
or
xchg
pusha
popa
mov
frstor
lea
and
iret
stos
mov
loope
fstp
scas
je
sahf
mov
fmulp
gs
mov
pushf
repnz
jb
or
into
mov
ss
std
enter
in
popa
or
mov
fcomp
or
and
and
xor
gs
xchg
and
ss
xor
ss
in
scas
sahf
repnz
jns
xor
push
add
clc
daa
popa
or
mov
push
jne
inc
xor
add
ss
push
jmp
jno
arpl
xor
test
or
fs
cdq
or
stos
cmps
xchg
pop
or
mov
popa
or
aas
sub
popa
add
push
add
cld
dec
ss
ss
retf
popa
or
ja
adc
leave
pop
loope
je
mov
add
push
add
dec
adc
cmp
mov
sahf
cmp
mov
or
sbb
bound
cmp
arpl
js
popa
or
mov
sbb
arpl
cmp
arpl
add
popa
or
ja
adc
mov
adc
cmp
arpl
and
popa
or
ja
adc
mov
adc
das
fst
pusha
popa
in
and
(bad)
fnstcw
shr
push
(bad)
or
and
mov
and
mov
and
or
dec
cmc
mov
mov
jmp
pop
jge
jbe
adc
mov
and
push
mov
jmp
pop
inc
xchg
ja
adc
mov
and
mov
and
sub
adc
repnz
xor
in
es
or
pop
(bad)
retf
cmp
hlt
xor
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
shl
in
and
mov
push
inc
addr16
cdq
dec
retfw
ss
leave
ds
and
aas
loop
and
in
out
gs
push
push
fwait
out
outs
mov
sub
sub
jno
fisttp
aas
loop
or
dec
popa
in
and
pop
and
addr16
dec
(bad)
sahf
push
jmp
cmp
punpcklwd
adc
popa
sbb
pop
out
or
fld
pop
adc
push
int
fstp
call
fucomp
dec
adc
test
mov
sub
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
ss
.byte
