adc
add
dec
add
add
add
add
push
add
add
add
daa
add
push
call
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
sub
add
or
add
sbb
add
dec
add
add
add
adc
cmp
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
push
or
pop
pop
or
pop
sub
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
and
push
push
pusha
and
push
push
pusha
mov
add
add
add
add
add
push
mov
add
add
add
add
pop
sar
add
add
and
push
pop
push
sub
add
push
add
jnp
add
add
add
add
sar
add
add
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
adc
add
adc
add
cmp
add
add
add
push
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
xor
add
add
add
add
and
retf
and
retf
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
test
and
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
inc
add
add
add
and
mov
add
add
add
add
add
push
mov
add
add
push
inc
add
add
and
add
pop
inc
pop
add
add
add
add
add
add
add
and
add
fwait
add
add
add
add
or
pop
pop
or
add
add
mov
sub
push
and
and
add
mov
sub
jnp
add
add
dec
pop
pop
sub
jge
add
add
push
add
add
mov
add
mov
add
sub
add
add
mov
sub
add
and
das
and
add
add
(bad)
jmp
mov
add
add
jnp
add
add
rol
and
add
add
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
out
add
adc
add
sbb
add
ret
add
add
adc
inc
add
add
push
add
add
inc
add
add
cmp
add
push
add
add
add
add
or
jle
add
add
add
add
sar
add
add
and
push
pop
push
sub
add
push
and
add
add
sbb
and
add
add
mov
sub
add
add
add
push
add
mov
sub
(bad)
sub
adc
add
add
mov
add
add
pop
mov
add
mov
add
push
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
mov
add
adc
add
add
add
inc
add
add
add
add
mov
add
mov
add
and
fcmovnbe
or
push
fcmovnbe
or
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
ins
and
cmp
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
inc
in
lahf
and
lahf
ss
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
test
mov
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
xchg
add
add
add
push
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
inc
add
add
add
data16
add
or
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
mov
rol
jle
add
add
pop
rol
and
add
add
push
and
sbb
add
add
mov
or
xchg
sub
push
pop
pop
or
add
add
mov
or
sub
and
add
add
(bad)
(bad)
(bad)
ficom
fimul
sub
push
mov
sub
mov
stc
add
pop
mov
add
mov
add
add
add
or
sub
jae
add
or
jle
add
add
push
pop
rol
(bad)
add
frstor
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
push
push
jle
add
or
add
add
add
jae
rol
and
add
mov
or
mov
add
push
pop
and
add
add
sub
add
add
lea
add
adc
adc
push
jg
add
add
adc
add
mov
add
adc
sbb
add
add
adc
add
mov
add
adc
sub
add
or
add
add
add
mov
or
pop
(bad)
(bad)
jmp
inc
and
adc
cmp
(bad)
call
add
pop
add
jo
adc
add
sub
and
add
add
(bad)
(bad)
jmp
xchg
add
add
arpl
add
add
add
add
mov
or
adc
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fiadd
fiadd
or
adc
add
adc
fisttp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
pop
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fadd
push
jae
add
or
nop
(bad)
(bad)
jmp
add
add
mov
or
xor
push
mov
add
add
add
add
add
add
inc
add
add
push
mov
add
add
push
inc
add
add
adc
add
adc
inc
add
add
mov
add
add
add
add
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fsub
sub
push
inc
add
add
pop
add
add
or
add
add
add
dec
add
add
add
add
add
push
adc
add
add
push
popa
rcl
push
adc
add
rcl
push
and
add
add
adc
add
pop
and
add
add
sub
adc
add
add
sub
and
add
add
fiadd
fiadd
fiadd
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
dec
pop
rol
frstor
std
(bad)
jmp
fstp
std
(bad)
call
pop
sub
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
mov
add
push
add
add
add
add
xor
dec
add
add
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
cmp
add
dec
add
add
add
push
or
add
add
pop
rol
push
pop
pop
ror
jle
add
add
pop
rol
jle
add
add
add
add
rol
and
add
add
push
jle
add
add
sbb
add
sub
push
pop
pop
ror
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fnsave
add
fnsave
add
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
or
jle
add
add
pop
rol
jle
add
add
pop
rol
adc
dec
push
adc
add
push
adc
add
push
adc
add
add
mov
or
test
mov
ins
mov
inc
add
add
mov
add
add
push
mov
add
add
or
inc
add
xor
and
add
add
(bad)
(bad)
jmp
add
add
add
pop
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
inc
(bad)
(bad)
(bad)
fucom
add
add
fucom
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
cmp
add
pop
add
add
add
lahf
add
add
adc
push
adc
jle
add
add
pop
rol
adc
and
add
add
add
inc
adc
jle
add
add
mov
add
inc
adc
and
add
add
adc
sub
add
mov
or
xchg
sub
add
push
and
add
mov
or
sub
and
add
add
(bad)
(bad)
call
pop
pop
jp
das
and
adc
cmp
(bad)
jmp
retf
jle
add
add
mov
rol
and
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fisub
popa
and
add
add
push
inc
add
add
pop
add
add
or
add
add
add
dec
add
add
add
add
(bad)
(bad)
inc
pop
push
pop
mov
push
add
or
mov
add
add
cmp
(bad)
(bad)
dec
pop
push
adc
or
add
add
mov
or
mov
lahf
or
add
or
or
add
add
mov
or
mov
add
add
push
inc
add
add
adc
add
adc
inc
add
add
or
(bad)
(bad)
call
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fcom
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
or
add
or
fs
(bad)
call
or
inc
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
fld
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
lods
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
cmp
add
add
add
add
add
push
or
pop
pop
ror
and
add
add
pop
popa
xor
add
add
mov
sub
sub
add
jnp
add
add
jnp
add
add
sar
add
add
add
add
mov
sub
data16
inc
inc
add
add
ret
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
add
add
add
add
add
jle
add
or
jle
add
add
pop
pop
pop
sbb
add
add
and
add
and
add
add
or
je
and
push
je
mov
add
add
add
add
add
add
add
push
mov
add
add
push
jb
add
jo
sbb
add
sub
pop
mov
add
mov
add
and
add
add
(bad)
jmp
add
jnp
add
add
jnp
add
add
rol
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
rol
add
add
add
xor
add
add
add
add
and
stos
test
add
add
add
add
add
push
mov
add
add
push
or
add
or
push
pop
ss
add
add
jnp
add
add
pop
adc
jle
add
add
sar
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
push
push
add
adc
add
adc
add
cmp
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
sub
sub
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
add
sbb
add
mov
add
push
inc
add
add
push
add
add
inc
add
add
aas
add
add
add
add
add
mov
add
push
or
and
add
pop
push
add
and
add
pop
sar
add
add
pop
pop
ror
and
add
add
jle
add
add
dec
and
add
add
add
add
add
pop
rol
and
add
add
sar
bound
sar
bound
add
add
add
add
push
mov
add
add
sub
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
xchg
add
add
add
add
add
add
add
or
or
jnp
add
add
pop
add
add
add
push
add
add
push
add
add
push
push
add
mov
sub
xor
in
jle
mov
add
add
add
add
add
add
xor
add
add
mov
add
add
push
and
and
add
add
add
add
add
xchg
add
add
or
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
inc
add
add
push
add
add
inc
add
add
add
add
add
xor
add
test
add
pop
or
add
or
add
add
pop
push
add
add
add
add
push
popa
push
add
add
add
mov
sub
add
add
mov
sub
inc
add
jo
lea
add
or
push
jb
add
jo
pop
sub
add
or
add
add
add
add
mov
sub
jnp
add
add
pop
push
add
add
add
mov
cmp
(bad)
jmp
push
jl
add
push
jl
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
int3
add
adc
add
sbb
add
add
add
adc
mov
push
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
inc
add
add
add
add
add
push
push
add
add
add
push
add
add
push
add
add
add
add
inc
pop
pop
xor
push
pop
push
add
add
add
mov
push
sub
and
add
add
sub
add
add
pop
sar
add
add
add
add
mov
push
sub
add
add
(bad)
(bad)
(bad)
(bad)
add
add
fucomp
add
add
inc
add
add
pop
add
add
push
inc
add
add
cmp
add
mov
add
add
adc
push
push
or
jnp
add
add
pop
push
or
add
add
add
dec
popa
push
add
add
add
mov
push
sub
xor
add
add
mov
push
sub
dec
add
jo
lea
or
or
sbb
add
mov
jnp
add
add
adc
add
adc
add
add
sbb
add
mov
add
or
add
add
add
add
mov
push
cmp
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fstp
add
add
fst
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
pop
add
add
add
and
add
mov
add
add
adc
jle
add
or
or
and
add
pop
sar
add
add
add
add
mov
push
sub
xor
and
add
add
sub
and
add
pop
push
add
add
add
mov
push
sub
add
add
adc
add
add
add
adc
add
sub
and
add
add
(bad)
(bad)
jmp
mov
add
add
pop
sar
add
add
push
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fisub
ficomp
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
adc
adc
outs
push
add
or
or
add
add
mov
push
sub
cmp
add
add
sub
add
or
and
add
add
sub
adc
push
add
and
add
add
cmp
std
(bad)
call
lea
push
and
add
add
cmp
inc
add
add
pop
add
add
push
inc
add
add
arpl
add
xor
add
jb
add
inc
add
add
or
or
add
jl
add
add
and
add
adc
sub
add
or
and
add
jge
add
add
add
add
mov
push
sub
add
add
sub
add
add
mov
push
sub
jnp
add
add
jnp
add
add
push
add
add
add
mov
push
sub
add
add
(bad)
(bad)
(bad)
fisttp
add
add
fld
add
add
push
or
jb
add
jo
lods
add
jo
or
sbb
add
sub
add
or
add
add
clc
add
add
(bad)
add
add
inc
add
add
pop
add
add
push
inc
add
add
add
add
popf
add
add
add
pop
adc
add
add
add
dec
pop
rol
add
add
add
adc
push
pop
push
add
push
add
add
jnp
add
add
rol
and
push
fsub
and
push
fsub
mov
add
add
add
add
add
add
push
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
jmp
add
add
add
pop
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
dec
(bad)
(bad)
jmp
fisttp
(bad)
inc
outs
and
add
adc
add
add
mov
push
cmp
std
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
or
sub
add
dec
add
add
add
mov
add
add
add
push
adc
add
add
jbe
ror
add
add
add
add
add
add
add
add
and
add
add
add
adc
add
sbb
add
aad
add
or
add
push
inc
add
add
push
add
add
inc
add
add
pop
add
add
add
add
or
add
add
add
jl
add
add
adc
add
sub
add
jge
add
add
push
add
add
jnp
add
add
rol
and
mov
or
inc
inc
add
add
aas
add
add
add
add
add
add
push
mov
add
add
and
add
add
sub
add
mov
cmp
jmp
add
and
add
pop
sar
add
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
mov
add
add
xor
add
add
add
jae
add
or
add
add
jle
add
or
add
add
sub
add
add
xor
add
add
add
add
mov
sub
mov
stc
add
push
iret
mov
and
mov
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
sbb
add
add
add
push
mov
add
add
add
add
add
add
and
sti
jge
inc
mov
jge
inc
inc
add
add
sar
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
jle
add
add
adc
add
push
add
adc
add
pop
push
add
int
add
es
add
add
inc
add
add
cmp
add
adc
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fwait
add
add
add
or
pop
or
add
adc
mov
mov
add
mov
add
or
imul
add
mov
add
popf
cmp
add
add
or
or
pop
xchg
add
xchg
popa
add
pushf
add
pop
xchg
pushf
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
pop
or
add
(bad)
(bad)
(bad)
cmp
add
add
add
mov
sub
mov
stc
add
add
add
mov
add
cmp
(bad)
inc
mov
js
or
add
mov
add
sub
(bad)
jmp
mov
add
adc
add
push
add
adc
add
xor
adc
add
adc
add
clc
add
add
adc
add
adc
add
xor
adc
add
adc
add
pop
push
add
lahf
add
add
fstp
or
or
add
(bad)
(bad)
jmp
cmp
add
or
jle
add
add
adc
add
push
add
adc
add
sahf
add
add
adc
add
adc
add
pop
push
add
sub
fisubr
and
add
add
(bad)
(bad)
dec
push
mov
xlat
(bad)
(bad)
jmp
add
add
mov
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
pop
lea
and
add
add
(bad)
(bad)
jmp
and
add
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
or
add
mov
add
and
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
pop
add
add
add
add
add
inc
add
add
add
jb
add
push
add
add
or
add
add
inc
pop
jle
add
add
pop
pop
pop
or
add
add
sbb
jle
add
add
adc
add
jle
add
add
jle
add
add
push
add
add
add
mov
add
movs
pop
pop
adc
add
add
sub
pop
pop
pop
or
add
add
mov
add
xchg
add
add
add
mov
add
ja
(bad)
(bad)
fnsave
scas
(bad)
(bad)
call
or
pop
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
push
add
adc
add
adc
adc
add
adc
add
pop
push
add
xor
(bad)
std
(bad)
inc
sub
add
add
add
add
add
add
adc
add
add
inc
add
add
adc
add
add
test
add
add
add
add
cwde
loop
push
adc
add
add
cld
add
add
add
xor
xchg
add
add
mov
jo
mov
jo
inc
inc
add
add
and
add
add
add
and
add
add
mov
add
add
pop
mov
add
mov
add
push
mov
or
add
add
add
add
add
add
pop
push
add
adc
fimul
sub
push
mov
sub
mov
stc
add
push
inc
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
pop
add
aaa
add
add
add
add
add
add
add
or
or
or
daa
add
or
add
add
cmp
adc
add
pop
pop
push
add
loop
add
es
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
push
adc
adc
add
adc
adc
adc
add
pop
push
add
adc
add
add
adc
mov
rol
add
sub
add
adc
add
pop
push
add
adc
add
pop
push
add
add
add
mov
or
jb
add
jo
adc
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
jo
lea
add
adc
or
jb
add
jo
adc
jb
add
jo
adc
adc
add
adc
add
(bad)
(bad)
jmp
add
add
add
mov
or
(bad)
fnstsw
fnsave
mov
mov
adc
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
add
inc
add
add
or
add
add
adc
add
and
adc
add
add
add
mov
or
cdq
add
add
sbb
add
sub
pop
pop
pop
push
add
mov
or
and
add
add
fiadd
fiadd
push
lea
push
lea
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jle
add
add
adc
add
push
add
adc
add
adc
add
push
add
adc
add
pop
push
add
adc
add
pop
push
add
inc
fiadd
add
add
mov
or
call
pop
or
push
add
add
std
(bad)
(bad)
cmp
adc
add
push
xchg
pushf
adc
pop
pop
adc
and
add
mov
or
jmp
cmp
adc
push
adc
and
add
add
std
(bad)
jmp
test
adc
add
push
xchg
pushf
adc
pop
pop
adc
adc
pop
pop
adc
and
adc
jmp
test
add
add
adc
add
push
add
adc
add
pop
push
add
adc
add
pop
push
add
adc
add
sbb
add
add
adc
add
pop
push
add
xchg
ficom
add
adc
add
jle
add
add
jle
add
add
push
add
adc
add
mov
add
popa
push
add
adc
(bad)
jmp
fisttp
adc
or
sub
or
pop
add
add
cld
(bad)
(bad)
(bad)
add
add
sub
push
inc
add
add
pop
add
add
or
add
add
inc
add
add
add
add
add
adc
jle
add
add
pop
push
add
adc
add
pop
push
add
adc
add
pop
push
add
add
add
mov
or
sub
and
add
add
sub
jle
add
add
pop
push
add
add
add
mov
or
and
add
add
fiadd
fiadd
fiadd
jle
add
add
adc
add
push
add
adc
add
pop
push
add
adc
add
push
pop
push
add
(bad)
sti
(bad)
jmp
ffree
sti
(bad)
call
or
add
add
dec
add
add
add
add
add
adc
add
add
add
mov
add
adc
add
mov
add
adc
add
add
add
int
add
jecxz
add
mov
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
jo
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
or
push
sub
add
push
sub
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
(bad)
xor
(bad)
xor
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
cld
mov
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
adc
add
cmp
add
add
jecxz
sbb
sbb
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
xor
add
add
push
add
adc
mov
add
add
add
add
add
inc
add
add
aas
add
add
add
add
add
add
add
rol
add
jb
add
dec
add
add
add
mov
add
add
add
add
add
xchg
add
add
add
add
push
push
or
add
and
adc
add
inc
sub
add
push
add
sub
add
sbb
add
add
push
pop
pop
shr
sub
add
pop
pop
cmp
add
inc
adc
sub
add
and
push
and
add
add
(bad)
(bad)
inc
sub
adc
push
and
add
add
(bad)
(bad)
jmp
xor
sub
add
push
outs
push
popa
or
or
add
mov
add
(bad)
cmp
add
add
pop
pop
ror
and
add
add
(bad)
(bad)
jmp
ja
or
add
mov
add
inc
pop
inc
inc
push
inc
sub
and
add
add
(bad)
(bad)
call
sub
adc
add
add
(bad)
(bad)
inc
pop
cmp
or
add
mov
add
jmp
sub
mov
sub
mov
inc
inc
add
add
aas
add
add
add
add
add
add
push
mov
add
add
cmp
(bad)
jmp
or
adc
inc
add
sub
add
das
mov
add
add
(bad)
(bad)
jmp
sub
or
add
mov
add
(bad)
jle
add
add
sub
xor
add
add
mov
add
(bad)
cmp
(bad)
(bad)
inc
and
push
pop
pop
shr
sub
add
and
add
add
(bad)
(bad)
jmp
mov
pop
add
add
(bad)
(bad)
(bad)
fidiv
fisubr
inc
add
add
sbb
mov
add
mov
add
adc
add
add
add
add
add
add
sub
add
or
pop
adc
add
sub
add
pop
adc
sub
add
push
add
sub
add
push
pop
and
sub
add
push
add
sub
add
push
and
add
add
sub
add
push
adc
ficom
xor
add
add
aaa
add
push
or
add
add
mov
add
add
add
inc
add
add
pop
add
add
add
add
add
push
add
add
add
sbb
add
sub
add
and
shr
sub
add
and
add
add
add
and
adc
sub
add
add
mov
add
add
and
adc
add
and
add
add
sub
and
add
add
fiadd
fiadd
push
add
sub
add
outs
or
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
mov
add
dec
cmp
(bad)
jmp
add
add
mov
add
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
aas
add
push
sub
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
adc
add
add
add
xchg
add
add
add
add
add
adc
add
add
add
or
add
sldt
add
add
add
add
add
add
add
xor
les
add
sldt
adc
inc
add
add
add
add
inc
or
add
test
add
sbb
add
inc
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
or
add
sub
add
push
pop
push
inc
add
push
and
add
add
adc
sub
dec
and
add
mov
sub
add
add
sub
add
push
and
add
inc
sub
and
add
add
(bad)
(bad)
jle
add
add
sub
dec
and
add
add
(bad)
jmp
mov
add
(bad)
call
sub
add
pop
add
add
(bad)
(bad)
cmp
add
add
mov
cmp
(bad)
(bad)
inc
sub
add
push
pop
pop
inc
sub
and
add
add
(bad)
call
sub
adc
sub
add
push
pop
and
sub
add
push
jb
add
jo
lea
add
or
push
jb
add
jo
pop
pop
jb
add
jo
pop
sub
add
or
add
push
pop
pop
shr
sub
add
and
add
add
(bad)
jmp
xchg
ss
pop
and
inc
inc
add
add
dec
(bad)
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
push
jb
add
jo
sbb
add
sub
and
add
add
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
or
(bad)
(bad)
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
add
add
and
rol
and
rol
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
rol
cmp
rol
cmp
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
pop
add
add
add
adc
mov
or
or
add
add
add
add
add
add
adc
inc
fidivr
pop
mov
add
mov
add
and
mov
imul
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
sub
add
add
mov
or
or
inc
add
add
sub
add
adc
inc
or
add
push
add
add
add
add
add
xchg
add
add
(bad)
(bad)
jmp
add
inc
add
add
add
add
add
add
sbb
add
sub
and
add
add
jle
add
add
or
add
pop
sub
adc
add
add
jle
add
add
or
add
add
mov
or
test
adc
add
adc
cmp
(bad)
call
sub
and
add
add
(bad)
(bad)
(bad)
jle
add
add
inc
sub
adc
add
add
adc
add
add
mov
or
aas
(bad)
(bad)
(bad)
fiadd
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
adc
add
push
add
add
xor
add
or
add
add
mov
or
fnstsw
call
add
add
add
add
or
add
add
add
add
add
sub
add
push
add
add
or
or
or
push
pop
or
add
inc
adc
adc
add
add
mov
or
mov
sbb
add
add
mov
or
mov
add
pop
pop
or
add
sub
and
add
add
(bad)
frstor
jae
add
push
or
add
add
mov
or
inc
(bad)
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
push
add
add
add
add
add
push
or
pop
arpl
jle
add
add
adc
pop
xor
pop
or
and
or
add
add
mov
or
mov
and
add
sub
jle
add
add
inc
adc
add
add
sub
and
add
add
frstor
(bad)
jmp
fstp
(bad)
dec
push
outs
and
add
adc
and
add
add
(bad)
(bad)
(bad)
fnsave
sub
push
push
add
adc
add
inc
adc
and
popa
adc
add
adc
add
fiadd
fiadd
push
inc
add
add
pop
add
add
or
add
add
add
dec
add
add
add
add
add
add
add
or
push
jle
add
add
inc
adc
add
add
adc
jb
add
jo
adc
add
sub
and
add
add
sub
jle
add
or
push
and
add
add
sub
and
add
add
(bad)
cld
(bad)
jmp
ffree
cld
(bad)
call
pop
sub
add
add
sbb
add
sbb
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
jecxz
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
add
add
add
adc
add
add
add
pop
add
add
add
test
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
push
add
add
add
data16
add
add
jp
add
cmps
add
add
add
add
or
or
pop
pop
ror
add
push
pop
pop
shr
sub
add
pop
push
inc
adc
add
or
mov
add
and
add
add
and
add
add
mov
sub
add
add
sub
add
push
pop
cmp
add
mov
add
add
(bad)
call
sub
adc
add
add
(bad)
inc
pop
pop
sbb
or
add
pop
and
add
add
sub
sub
add
push
add
push
popa
shr
sub
add
and
add
mov
cmp
(bad)
(bad)
jmp
f2xm1
adc
adc
inc
add
add
mov
add
add
push
mov
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
div
add
adc
add
adc
add
sbb
add
add
add
add
push
add
or
add
add
add
pop
sub
add
push
add
sub
add
push
sub
xor
add
add
add
add
and
lods
cs
and
lods
cs
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jp
inc
ja
jp
inc
ja
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
push
push
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
pop
adc
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
push
inc
add
add
sub
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
inc
add
add
push
add
add
add
into
(bad)
(bad)
(bad)
jle
add
add
sub
add
or
and
add
add
test
cmp
add
add
add
add
add
add
add
add
add
push
mov
add
add
sub
jb
add
jo
pop
add
add
sub
add
outs
sub
add
or
push
sbb
add
add
add
mov
cmp
(bad)
jmp
add
add
add
add
add
xor
add
add
add
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
in
stc
add
in
stc
add
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
sub
adc
add
pop
add
add
add
adc
add
mov
sub
mov
stc
add
aas
sbb
and
sbb
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
push
jb
add
jo
sbb
add
das
add
or
push
je
add
sbb
sbb
add
mov
add
adc
inc
add
add
add
add
inc
or
add
and
add
repz
add
add
add
add
cmp
add
adc
add
mov
add
dec
add
add
add
add
add
xor
imul
add
or
cmp
add
add
push
pop
push
sub
add
push
jle
add
add
pop
sbb
add
sbb
add
jnp
add
add
sbb
add
add
add
mov
sub
add
cmp
add
add
retf
das
and
dec
adc
mov
add
add
add
add
add
push
mov
add
add
and
add
add
(bad)
jmp
dec
and
add
add
(bad)
inc
sub
jge
add
adc
add
cmp
pop
add
add
(bad)
jmp
cmp
and
add
pop
sar
add
add
or
add
mov
cmp
(bad)
(bad)
jmp
mov
add
cmp
add
pop
push
push
add
cmp
add
and
add
add
(bad)
jmp
and
add
add
add
mov
add
pop
sar
add
add
push
add
add
(bad)
jmp
sub
add
add
mov
cmp
sub
add
push
pop
jbe
ds
(bad)
(bad)
jmp
add
or
xchg
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
mov
cmp
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
and
arpl
and
arpl
mov
add
add
add
add
add
push
mov
add
add
jae
add
or
add
jnp
add
add
mov
sar
add
add
pop
sub
add
push
add
add
jo
lea
add
or
push
jb
add
jo
pop
pop
push
outs
sbb
add
mov
add
sub
add
push
add
add
add
push
pop
jle
add
add
pop
aaa
pop
push
cmp
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
mov
add
adc
add
and
add
add
add
add
push
add
or
pop
sub
add
push
add
push
cmp
add
add
add
or
add
push
sub
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
and
ins
or
and
ins
or
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
out
or
out
or
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
add
mov
adc
adc
add
add
add
add
add
add
push
pop
sbb
add
sbb
add
pop
sbb
add
sbb
add
pop
sbb
add
fld
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
add
add
add
add
adc
jae
add
or
and
add
mov
adc
sar
add
add
push
das
sbb
add
add
mov
adc
mov
add
add
adc
sub
add
pop
sub
adc
jle
add
add
sbb
sbb
add
or
and
add
add
fnstsw
fnsave
add
add
add
add
pop
pop
sbb
add
sbb
add
stos
add
add
sbb
add
sbb
add
dec
pop
sbb
add
(bad)
add
push
inc
add
add
xor
add
adc
inc
or
add
push
add
rol
add
lods
add
add
add
add
add
add
repz
add
add
in
add
ret
add
add
add
or
or
adc
add
jmp
add
inc
inc
adc
add
pop
sbb
add
or
lahf
add
jo
sbb
add
adc
add
pop
pop
sbb
add
add
add
mov
adc
adc
add
sbb
add
cmp
add
add
mov
adc
arpl
(bad)
jmp
sbb
add
adc
cmp
(bad)
jle
add
add
call
add
dec
and
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
add
add
and
add
(bad)
(bad)
jmp
mov
jo
or
or
add
mov
adc
or
(bad)
jmp
inc
and
add
add
(bad)
(bad)
call
sub
adc
add
(bad)
(bad)
jmp
add
push
add
add
(bad)
(bad)
call
or
add
add
(bad)
(bad)
jmp
test
add
(bad)
(bad)
(bad)
(bad)
frstor
or
add
mov
adc
or
inc
add
add
dec
add
add
adc
add
add
add
push
add
add
add
cmp
add
pop
add
add
add
add
leave
add
add
push
add
mov
add
stos
(bad)
(bad)
jmp
add
inc
add
dec
add
add
adc
pop
sbb
std
(bad)
jmp
add
add
mov
adc
mov
sub
mov
stc
add
in
std
(bad)
inc
push
xchg
adc
add
add
mov
adc
adc
mov
add
cmp
add
adc
sub
add
push
adc
and
adc
cmp
jmp
inc
push
or
or
or
add
pop
ror
add
or
sbb
add
or
inc
pop
ror
pop
pop
ror
or
sbb
add
or
sbb
add
mov
fimul
add
add
pop
add
add
adc
add
add
add
pop
add
add
add
outs
add
add
adc
jle
add
or
movups
adc
pop
jle
add
add
adc
adc
pop
adc
sbb
add
sbb
add
pop
sbb
add
push
sub
add
or
mov
add
add
adc
jb
add
jo
sbb
add
sub
and
add
add
sub
jle
add
or
mov
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
ins
(bad)
(bad)
(bad)
fst
add
add
fisttp
add
add
add
add
mov
adc
pusha
(bad)
(bad)
call
pop
cmp
add
add
or
adc
cmp
(bad)
cmp
pop
adc
push
adc
mov
xor
add
and
add
add
(bad)
(bad)
jmp
add
add
add
dec
pop
sbb
add
sbb
add
into
add
add
sbb
add
fnstsw
add
adc
sub
add
push
adc
and
add
add
std
(bad)
(bad)
cmp
mov
pop
lea
pop
and
add
add
std
(bad)
(bad)
cmp
add
add
inc
add
add
xor
add
adc
inc
or
add
inc
add
add
add
add
add
stos
add
add
add
add
add
add
add
mov
add
jl
add
pusha
add
add
or
or
add
add
mov
adc
mov
add
and
add
add
mov
adc
lods
sub
add
add
mov
adc
mov
add
ja
add
inc
and
add
add
pop
sub
add
mov
adc
jl
(bad)
jmp
cmp
or
add
mov
adc
ins
(bad)
(bad)
call
sub
jle
add
add
inc
push
inc
or
or
add
mov
adc
push
(bad)
(bad)
jmp
mov
add
mov
adc
inc
(bad)
(bad)
jmp
and
push
add
add
(bad)
(bad)
inc
sub
add
mov
adc
and
(bad)
(bad)
cmp
(bad)
jmp
add
adc
cmp
(bad)
(bad)
(bad)
fnsave
(bad)
add
add
cld
(bad)
call
add
pop
pop
inc
dec
add
add
or
add
mov
adc
mov
sub
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
add
add
push
or
or
push
adc
and
add
add
adc
pop
xor
and
add
sub
jle
add
add
pop
sbb
add
add
add
mov
adc
stos
sub
and
add
add
fucom
std
(bad)
jmp
fstp
std
(bad)
call
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
add
adc
add
or
add
adc
sub
add
add
adc
and
add
add
cmp
add
sub
jle
add
add
pop
sbb
add
add
add
mov
adc
ja
(bad)
jmp
(bad)
adc
pop
pop
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
push
(bad)
(bad)
(bad)
fld
fnstsw
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
xor
add
inc
add
add
adc
push
adc
adc
pop
pop
adc
jle
add
add
pop
sbb
add
sbb
add
pop
pop
pop
xor
sbb
add
add
add
mov
adc
mov
or
add
mov
adc
test
adc
pop
adc
and
add
add
and
mov
adc
inc
add
add
outs
(bad)
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fld
fnstsw
(bad)
jmp
add
add
mov
adc
mov
cmp
cld
(bad)
jmp
push
add
add
cli
(bad)
(bad)
cmp
add
add
add
add
mov
adc
jnp
(bad)
call
pop
cmp
(bad)
jmp
sldt
add
cli
(bad)
(bad)
cmp
(bad)
call
inc
add
add
daa
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
adc
push
adc
and
add
mov
adc
leave
adc
sub
add
mov
adc
mov
add
add
adc
push
inc
sub
add
push
sub
adc
adc
adc
pop
sbb
add
adc
and
add
add
(bad)
(bad)
call
adc
add
(bad)
(bad)
jmp
add
adc
pop
rcl
adc
add
add
mov
adc
push
(bad)
(bad)
jmp
add
add
add
mov
adc
inc
(bad)
(bad)
(bad)
fisubr
fisubr
and
add
add
stc
(bad)
inc
mov
cmp
cli
(bad)
jmp
or
add
mov
adc
jne
(bad)
(bad)
cmp
pop
sub
add
inc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
push
add
add
add
add
add
add
add
mov
pop
add
push
add
add
add
add
add
add
pop
add
scas
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
and
(bad)
iret
lods
jo
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
add
push
daa
fimul
and
daa
fimul
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
and
jl
and
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
xchg
and
xchg
ss
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
adc
add
cmp
add
add
ins
inc
dec
and
dec
es
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
sub
add
adc
add
daa
add
add
add
add
jle
add
or
add
add
sub
add
or
add
add
add
push
sub
add
add
sub
add
sub
or
add
popa
add
add
add
add
fs
inc
bound
fs
inc
bound
add
add
add
add
push
mov
add
add
add
add
add
and
add
sub
add
jle
add
add
aaa
pop
rol
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
adc
add
sbb
add
add
add
adc
mov
or
or
add
add
add
add
mov
add
mov
add
push
inc
add
add
adc
add
adc
inc
add
add
cmp
add
add
add
or
add
add
mov
or
loope
pop
add
add
add
xor
add
outs
xor
add
rol
add
sub
add
outs
xor
add
outs
xor
add
add
adc
sub
push
inc
add
add
aaa
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
popf
add
add
adc
jle
add
add
jle
add
add
add
inc
add
push
push
and
add
and
add
push
jge
add
add
or
add
mov
or
xchg
add
inc
add
push
adc
cmp
add
add
or
add
mov
or
jp
(bad)
jmp
add
add
adc
cmp
(bad)
jmp
retf
mov
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
add
inc
add
push
pop
jno
add
and
or
add
mov
or
sub
(bad)
call
or
and
add
add
(bad)
(bad)
jmp
dec
adc
jle
add
add
and
add
push
add
add
add
mov
or
stc
(bad)
(bad)
call
or
sub
add
xor
or
add
mov
or
loop
(bad)
jmp
cmps
and
add
add
(bad)
(bad)
call
sub
and
add
add
(bad)
(bad)
call
or
add
or
add
add
mov
or
mov
(bad)
jmp
adc
pop
add
add
(bad)
(bad)
call
sub
add
(bad)
(bad)
(bad)
fiadd
fiadd
adc
add
sbb
add
or
imul
add
add
add
or
push
inc
add
add
xor
add
adc
inc
or
add
cmp
add
mov
add
data16
add
add
add
add
cmps
add
add
add
lds
add
and
add
out
add
add
adc
add
jle
add
add
push
inc
push
inc
adc
and
add
add
adc
add
das
inc
and
add
add
sub
add
jnp
add
add
sub
jge
add
add
add
add
mov
or
jbe
(bad)
jmp
sbb
add
add
mov
or
addr16
(bad)
call
add
push
inc
sub
and
add
add
(bad)
(bad)
call
push
add
inc
add
push
cs
and
add
add
(bad)
(bad)
jmp
and
push
and
adc
cmp
(bad)
(bad)
jmp
cmp
add
add
mov
or
sbb
(bad)
call
sub
and
add
add
(bad)
(bad)
call
push
add
inc
add
push
fldenv
add
add
mov
or
icebp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
mov
or
(bad)
(bad)
(bad)
fst
std
(bad)
jmp
fisttp
add
or
or
or
cmp
add
outs
cmp
add
outs
cmp
add
adc
or
add
cld
(bad)
(bad)
cmp
add
add
jle
add
add
and
add
sub
add
add
add
add
popa
push
and
add
and
add
push
pop
rol
fnsave
(bad)
add
add
inc
add
add
pop
add
add
or
add
add
add
jb
add
aaa
add
add
add
push
or
push
pop
pop
xor
pop
inc
pop
push
add
and
add
add
or
pop
xor
add
add
pop
pop
push
add
mov
or
mov
add
add
add
and
add
sub
jle
add
add
and
add
push
add
mov
or
xchg
add
add
add
mov
or
ja
(bad)
(bad)
fld
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
push
add
jo
add
or
or
or
add
jo
cmp
add
sub
add
or
sub
add
adc
add
add
mov
or
mov
(bad)
(bad)
cmp
add
add
add
push
push
jge
add
add
jb
add
jo
inc
add
or
add
jnp
add
add
cmp
pop
add
add
and
add
and
add
push
add
and
add
pop
rol
fnsave
(bad)
jmp
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
sub
add
inc
xchg
add
add
add
jo
add
jnp
add
jmp
add
add
add
adc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
adc
ret
or
adc
ret
or
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
shl
and
jo
jo
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
mov
adc
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
sbb
add
mov
add
adc
inc
add
add
cmp
add
and
push
enter
push
enter
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
pop
inc
add
add
pop
add
add
add
add
add
add
add
push
push
jle
add
add
pop
rol
push
pop
push
or
add
add
mov
sub
add
add
sub
add
add
mov
sub
xor
pop
ss
jge
add
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
and
add
or
add
add
add
add
add
add
add
xchg
add
add
add
mov
add
add
or
or
jnp
add
add
sbb
add
adc
add
or
add
add
jnp
add
add
add
inc
or
add
add
mov
sub
add
push
and
add
add
mov
sub
jmp
add
inc
or
add
add
mov
sub
xchg
sbb
mov
add
add
add
add
add
add
push
add
add
pop
mov
add
mov
add
push
mov
add
add
and
add
add
(bad)
inc
jle
add
add
push
and
add
add
(bad)
jmp
xchg
push
or
add
or
and
(bad)
jmp
sahf
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
div
add
adc
add
sbb
add
add
add
adc
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
jo
lea
add
or
push
add
add
sbb
add
mov
inc
add
push
or
add
add
or
add
jge
add
add
and
add
inc
pop
rol
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
ins
ins
add
adc
add
sbb
add
add
add
adc
mov
add
mov
add
and
(bad)
std
xor
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
push
or
jb
add
jo
lea
add
or
push
jg
add
add
adc
add
mov
add
jo
pop
sbb
add
jo
pop
sub
add
or
add
add
jb
add
jo
lea
add
or
push
jb
add
jo
or
adc
add
jge
add
add
add
add
add
and
add
add
inc
sub
add
add
add
add
sub
add
pop
sub
add
add
add
add
fiadd
add
popa
push
and
add
push
pop
ror
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
enter
adc
add
adc
add
cmp
add
add
sub
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
add
jb
outs
addr16
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
enter
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
add
add
add
push
add
add
add
xor
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
push
add
add
push
add
add
add
rol
push
add
add
add
push
add
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
cdq
add
add
add
push
add
movs
add
push
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
push
add
add
add
add
ltr
add
add
and
add
adc
aas
add
sbb
sub
add
add
xor
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
dec
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
sub
add
add
add
add
mov
add
add
add
add
add
or
add
push
and
add
add
add
add
add
add
shl
add
add
add
mov
add
add
lock
add
add
add
inc
and
or
add
nop
and
or
add
loopne
add
add
xchg
add
add
inc
sub
add
add
add
add
sub
add
or
enter
add
add
or
mov
add
add
add
add
cmp
add
add
xchg
sbb
mov
or
mov
add
add
add
or
ins
xor
add
add
add
add
add
add
add
or
pop
xor
add
add
add
add
add
add
add
or
dec
cmp
add
add
add
add
add
add
xchg
sbb
mov
or
les
add
add
xchg
add
add
inc
cmp
xchg
add
add
fadd
add
add
add
add
inc
add
add
or
lldt
add
add
or
verr
add
add
add
inc
add
add
add
adc
les
add
add
add
add
add
add
add
dec
add
add
or
add
push
dec
add
add
xchg
add
add
push
add
add
add
add
add
add
dec
add
add
or
adc
adc
add
add
add
pusha
push
add
add
xchg
sbb
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
push
add
add
sbb
add
add
add
add
add
or
push
add
add
add
add
push
add
add
add
add
sbb
add
add
add
add
add
add
or
add
mov
add
add
add
popa
add
add
or
sbb
pop
popa
add
add
xchg
sbb
mov
sbb
movs
popa
add
add
sbb
add
add
add
popa
add
add
add
add
pop
bound
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
push
or
push
add
imul
add
add
hlt
imul
add
or
pop
add
imul
add
add
pop
add
add
pop
add
add
add
add
add
add
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
add
dec
add
pop
add
pop
add
pusha
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
add
dec
add
dec
add
add
adc
dec
add
add
add
push
add
add
or
sub
dec
add
add
add
push
add
add
push
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
enter
leave
add
add
jmp
add
add
add
add
add
mov
add
dec
add
add
add
add
stc
add
add
mov
add
add
test
or
dec
add
add
mov
mov
and
xlat
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
outs
add
add
add
or
inc
add
iret
add
mov
add
add
add
add
add
into
add
add
add
add
add
add
dec
add
add
add
push
add
add
or
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
or
inc
add
or
inc
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
adc
add
imul
add
add
push
add
add
push
add
add
add
add
push
add
add
push
add
imul
add
add
push
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
imul
add
add
push
imul
add
pop
imul
add
pop
imul
add
imul
add
imul
add
or
push
add
or
push
add
imul
add
imul
add
add
add
add
add
add
add
add
or
adc
daa
add
xor
add
add
ja
jnp
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
arpl
je
outs
outs
add
jae
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
outs
add
jo
jns
inc
jns
add
je
imul
outs
add
pop
dec
outs
gs
popa
ins
imul
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
popa
add
imul
jb
jns
outs
jo
inc
jno
popa
ins
imul
ins
bound
dec
gs
outs
fs
outs
outs
add
je
xor
inc
outs
jb
popa
je
dec
gs
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
add
outs
arpl
add
je
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
gs
outs
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
je
outs
gs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
push
imul
pop
xor
push
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
inc
add
imul
add
jb
jae
jne
arpl
add
add
add
jl
add
add
je
jb
jne
imul
add
jb
jne
je
jb
imul
data16
imul
outs
add
or
ins
add
add
add
sub
add
push
and
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
add
outs
add
jne
imul
jbe
push
or
jb
outs
add
ja
add
jo
ins
add
add
add
xor
jge
and
jnp
xor
jge
pop
add
movq
ins
add
jne
outs
add
jne
add
popa
add
push
add
add
and
add
imul
push
add
je
add
jne
ins
add
data16
push
outs
add
add
push
imul
js
add
outs
add
popa
add
push
add
add
add
or
push
imul
add
jbe
popa
add
add
adc
ins
add
popa
add
add
add
add
imul
outs
add
add
jb
jb
add
add
or
add
push
adc
jne
push
add
outs
add
bound
add
outs
add
jae
outs
add
add
pop
add
adc
add
popa
add
add
add
adc
push
add
ins
add
popa
add
add
ins
add
outs
add
add
outs
add
outs
add
add
jo
imul
ins
add
add
or
jnp
xor
jge
add
dec
add
sbb
xor
jge
sub
jnp
xor
jge
and
jnp
xor
jge
and
add
outs
add
data16
add
or
popa
add
ins
add
add
ins
add
add
jb
outs
add
add
sub
add
pop
add
punpcklwd
imul
ins
add
outs
add
punpcklwd
outs
add
add
data16
add
arpl
add
bound
add
loop
mov
bound
dec
cwde
adc
in
add
or
add
push
add
add
add
add
add
add
and
push
push
add
push
push
sbb
add
push
pop
and
add
pop
adc
and
or
and
add
and
sbb
push
push
sbb
sbb
sbb
adc
add
push
push
push
push
add
push
push
sbb
add
add
imul
adc
add
push
push
sbb
and
add
push
add
sbb
add
adc
add
add
gs
and
add
adc
and
sbb
adc
or
add
or
sbb
adc
and
sbb
push
push
add
add
and
mov
push
or
add
and
sbb
sbb
sbb
and
add
xor
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
or
or
and
or
push
add
push
or
and
or
add
or
and
sbb
and
add
add
sbb
add
sbb
add
add
push
push
pop
and
or
add
sbb
and
push
add
add
push
add
sbb
add
add
add
push
add
push
add
add
add
mov
adc
adc
adc
add
or
push
and
sbb
sub
push
add
add
or
add
add
add
add
data16
outs
gs
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
adc
jo
jb
addr16
and
xor
xor
add
xor
xor
xor
sub
sub
sub
sub
xor
gs
bound
add
add
xor
xor
xor
xor
add
add
dec
imul
imul
js
outs
jb
jno
jae
cmp
dec
dec
dec
dec
dec
push
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
add
add
add
add
or
add
or
pop
or
adc
dec
or
push
add
or
pop
or
push
or
add
sbb
add
push
or
or
pop
add
sbb
(bad)
adc
push
adc
sbb
or
sbb
add
or
pop
add
or
adc
sbb
push
or
or
sbb
push
or
pop
push
or
or
pop
add
sbb
or
or
push
push
or
add
or
pop
add
or
add
push
push
pop
adc
add
sbb
add
add
push
add
or
or
sbb
adc
add
sbb
add
or
or
add
pop
add
repz
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
es
add
int
add
or
add
add
push
add
add
and
add
add
sbb
push
std
loopne
shl
push
mov
mov
daa
bound
aaa
jae
(bad)
fimul
(bad)
xor
stc
mov
push
xor
in
(bad)
stc
xchg
add
ins
mov
imul
jp
sar
jne
and
mov
jmp
mov
and
mov
sbb
bound
jne
or
ja
pop
outs
test
jae
aam
xchg
push
sbb
jle
jge
stos
call
fimul
inc
xchg
adc
and
rcl
shl
mov
les
jmp
push
data16
mov
add
aas
movs
mov
fld
inc
outs
mov
div
and
mov
jl
shr
repz
push
sub
dec
add
sti
jo
sub
lea
adc
sbb
(bad)
les
test
shr
outs
mov
loope
push
adc
jg
mov
or
pop
xchg
xlat
xchg
std
push
shr
out
pop
cmp
cmps
push
(bad)
popf
jbe
add
stos
dec
daa
sub
fwait
inc
sub
retf
lea
jg
arpl
mov
popf
xchg
add
lds
jnp
lods
fiadd
mov
sbb
push
pop
mov
iret
mov
adc
fild
inc
sbb
inc
inc
dec
jbe
cmp
jmp
ret
js
dec
inc
test
or
outs
jne
out
test
sar
je
push
(bad)
ins
fcmovnb
les
jo
jb
pop
jbe
pop
stc
std
shl
cld
inc
das
and
sub
dec
shl
scas
cmps
and
call
outs
out
movs
lods
(bad)
icebp
in
or
sub
icebp
or
pusha
and
bound
popf
adc
adc
in
dec
inc
and
in
sub
pop
jo
repnz
adc
or
push
ficom
and
jo
push
and
mov
mov
jo
mov
je
pop
adc
and
dec
inc
pop
cli
sub
inc
sahf
dec
sub
adc
sub
fadd
add
nop
ss
pop
cmc
push
js
pop
addr16
xchg
or
mov
jp
mov
aaa
jbe
xor
inc
mov
rdmsr
je
je
pop
stc
push
ror
cs
mov
jmp
inc
nop
repnz
fxch
pop
jno
pop
ins
jno
and
loope
mov
jge
aas
sub
sbb
aaa
nop
ja
inc
fwait
adc
leave
jmp
adc
xor
(bad)
jg
add
add
add
(bad)
imul
mov
inc
xor
arpl
and
xor
imul
dec
xchg
stc
test
cmp
inc
add
adc
cmps
cdq
shr
mov
loope
mov
fnstcw
(bad)
xchg
mov
ins
jge
popa
adc
mov
dec
cld
push
or
sub
clc
push
sub
lods
sbb
jp
dec
push
(bad)
ffreep
int
sbb
inc
or
fs
(bad)
jbe
lea
xchg
sbb
data16
cdq
call
mov
sbb
in
cdq
xchg
adc
cmps
test
adc
adc
jno
sbb
pusha
or
cwde
jmp
in
sub
mov
addr16
dec
sbb
mov
movs
(bad)
pop
data16
cmp
cmp
jne
pushf
sbb
lahf
mov
sub
add
xchg
pop
mov
sub
xchg
sbb
int
loope
in
xchg
xor
ja
pop
mov
sub
movs
inc
loopne
call
or
or
retf
push
addr16
xchg
in
mov
cmp
outs
mov
jecxz
cmp
cmps
out
das
pop
scas
cwde
out
sub
add
in
aad
out
js
sbb
ins
adc
dec
mov
mov
cmc
jp
iret
(bad)
pusha
xor
jecxz
xor
fwait
data16
fucom
jae
inc
sbb
int
stos
mov
push
nop
sub
test
mov
add
push
push
mov
adc
ret
push
xor
fs
loopne
ficom
aad
aaa
cmp
or
test
mov
sub
mov
xchg
inc
lods
mov
cmovno
std
das
scas
xchg
fdiv
lods
jle
lock
retf
mov
dec
fwait
inc
das
dec
dec
xlat
jecxz
mov
mov
int3
imul
dec
adc
aaa
ds
mov
xchg
pop
call
sbb
inc
mov
push
inc
int
sahf
or
mov
cs
pop
data16
repnz
push
lea
retf
or
inc
in
call
ret
inc
xchg
push
test
sub
push
jle
pop
jns
out
inc
call
jl
jae
sbb
f2xm1
mov
aam
iret
xor
cld
push
xor
and
outs
sbb
int3
inc
push
mov
dec
adc
enter
fxch
jge
pop
pop
cmp
adc
mov
aaa
xchg
jmp
(bad)
xlat
jb
aad
in
xor
push
pop
pop
(bad)
sub
call
data16
xchg
loop
rcl
cmp
or
lods
push
and
gs
push
jmp
mov
sti
jb
out
movs
clc
and
je
ds
cmp
push
xor
mov
jecxz
and
neg
push
or
cs
mov
fcmovb
dec
inc
mov
mov
es
(bad)
icebp
sar
inc
sub
inc
jmp
mov
lods
arpl
out
ret
inc
mov
std
jmp
mov
cld
mov
inc
loop
lock
pop
cmp
sar
mov
mov
jno
cmps
icebp
adc
in
repz
mov
stc
adc
dec
call
sbb
fs
xchg
mov
pop
mov
jno
or
xor
int3
in
mov
pop
push
or
ficom
mov
out
retf
adc
test
jae
jne
test
inc
test
out
push
pop
or
add
cli
loop
jp
fistp
sahf
popf
lods
aas
out
lahf
push
jne
fcmovnu
pop
fs
mov
out
dec
mov
fmul
jle
mov
xor
pop
inc
pushf
aaa
prefetcht1
jecxz
mov
scas
scas
adc
sbb
mov
pusha
mov
imul
jmp
mov
mov
and
mov
cmp
jmp
fprem
lahf
xor
mov
lds
push
mov
mov
aam
ja
and
push
mov
push
loop
add
mov
inc
cmps
frstor
sbb
sahf
test
mov
or
push
lods
je
bound
sub
push
clc
popf
ss
xor
jl
ins
or
xor
dec
add
lahf
enter
mov
mov
pop
hlt
scas
cmp
(bad)
retf
mov
test
push
mov
retf
stos
xchg
in
lds
jg
dec
aaa
clc
mov
mov
(bad)
(bad)
outs
enter
je
cdq
mov
jmp
or
test
jno
mov
push
loop
adc
cmp
mov
mov
rcl
cmc
push
mov
mov
int3
sub
mov
mov
(bad)
pop
xchg
inc
jp
jbe
mul
das
icebp
into
push
jle
loop
je
push
push
repz
imul
xchg
out
dec
rcr
repz
call
xchg
aam
jmp
int3
mov
push
add
scas
cli
stos
push
xchg
test
xlat
inc
inc
ret
fs
sti
push
aaa
pop
xlat
jge
push
in
and
xchg
jle
mov
iret
push
xor
cmps
jo
push
sbb
and
and
mov
out
push
xchg
add
(bad)
xor
or
or
(bad)
sbb
sub
mov
shl
mov
loopne
mov
div
lods
sub
cmp
in
movs
inc
sti
pop
jmp
dec
sub
lods
and
add
repz
xchg
add
xor
push
popa
clc
cmp
cmp
cmps
div
and
stc
inc
in
fs
in
sub
and
mov
loopne
inc
fisub
(bad)
js
dec
mov
mov
call
(bad)
loopne
xor
ins
push
pop
inc
daa
xchg
pusha
dec
mov
ds
cli
ins
(bad)
gs
add
cmc
inc
mov
mov
sahf
add
mov
dec
add
retf
xchg
adc
inc
enter
outs
push
out
mov
xor
dec
add
outs
adc
in
test
rcl
pop
xor
pusha
mov
shl
push
pop
dec
loopne
jl
(bad)
dec
add
or
add
cmps
xor
add
mov
icebp
mov
cmp
int3
cmc
sub
push
test
std
retf
xor
inc
fidiv
ins
outs
adc
jns
xchg
jge
lods
mov
xor
cs
lds
pop
sbb
addr16
fisub
inc
push
mov
daa
data16
test
cli
int3
push
jle
fmul
xchg
pusha
into
and
addr16
in
fdivr
popa
fstp
cmp
cld
xchg
pop
test
out
mov
xchg
and
retf
arpl
int
ins
mov
sub
fdivr
xor
xor
and
daa
hlt
mov
xor
cmp
ss
jmp
and
or
nop
aas
es
into
pop
clc
dec
lods
inc
add
(bad)
sub
in
sahf
mov
fsubr
into
bound
in
xor
mov
ins
jge
sahf
pop
push
jne
and
lods
push
ins
xchg
pop
jb
(bad)
adc
das
cmp
aas
arpl
push
jo
cmp
test
push
je
jmp
mov
dec
xor
in
and
adc
pop
sbb
jmp
xchg
sub
or
xchg
pop
jge
call
push
sub
addr16
inc
ucomiss
arpl
mov
test
xchg
inc
jg
jb
inc
adc
ins
out
or
mov
cmp
jns
lea
sti
cdq
mov
fwait
jle
and
mov
ss
mov
jnp
add
(bad)
movs
mov
push
mov
push
mov
mov
and
xor
pop
mov
mov
ret
repz
pop
cs
ins
popa
test
mov
dec
shl
jge
repz
inc
add
popa
retf
pop
test
xchg
mov
and
(bad)
and
je
push
scas
cld
mov
lods
loop
cmp
pop
test
add
(bad)
pop
jne
mov
out
div
mov
or
ja
pop
add
or
loope
dec
call
aad
in
(bad)
iret
mov
mov
int
or
push
mov
gs
ror
jmp
pusha
test
mov
cmp
sub
in
(bad)
push
in
sbb
js
xchg
jecxz
stos
mov
pop
xchg
xor
rol
pop
or
jo
push
loope
cld
test
mov
into
and
movs
add
and
fsub
cmp
jmp
mov
pop
loop
outs
outs
shl
mov
repnz
stc
xchg
aam
popf
stos
and
ret
cli
cs
inc
adc
lods
imul
mov
sbb
sub
daa
sub
push
jo
xor
dec
add
cmc
mov
xchg
jb
sbb
arpl
mov
jns
lods
retf
out
mov
push
imul
pop
(bad)
pop
mov
jmp
in
mov
vsubss
jle
jge
xor
loope
xor
stc
std
(bad)
sub
rcr
mov
outs
sbb
leave
cdq
sub
inc
xor
mov
dec
retf
popa
mov
inc
dec
out
and
inc
gs
fs
push
mov
mov
jmp
imul
pop
popa
fistp
daa
sahf
xchg
loope
fbld
mov
inc
dec
loop
rol
sbb
nop
mov
in
ds
clc
push
xchg
ins
inc
jno
jmp
sub
adc
outs
leave
jae
mov
fld
sbb
imul
mov
mov
sbb
add
int3
xor
mov
inc
dec
adc
pop
xor
popf
ins
push
xor
adc
lea
daa
cmps
enter
sbb
mov
mov
das
add
add
bnd
mov
test
mov
in
fs
xor
into
sub
pusha
xor
enter
sbb
nop
jbe
out
mov
pop
(bad)
jmp
movs
shl
and
push
cmp
int
sbb
test
mov
arpl
retf
pop
fsub
pop
sbb
adc
scas
sub
sbb
mov
in
nop
test
(bad)
std
mov
popf
hlt
jnp
lds
aad
rcr
dec
pushf
jmp
dec
push
(bad)
in
or
mov
loope
jp
jle
imul
push
cwde
adc
popa
mov
sub
retf
dec
sub
ret
jle
pop
movs
je
xor
scas
mov
stc
and
enter
lahf
icebp
or
pop
jnp
push
lods
pop
pop
adc
les
lods
test
push
addr16
or
push
(bad)
xchg
retf
inc
and
or
ret
outs
dec
sub
inc
sbb
mov
int
sbb
push
call
and
lods
sti
(bad)
imul
mov
push
mov
inc
add
adc
sar
loop
test
mov
das
mov
pop
dec
cwde
pop
aam
mov
pop
stc
imul
or
mov
ja
cmp
movs
mov
outs
int3
jl
int3
jmp
lahf
loopne
(bad)
fucom
xchg
xchg
jp
call
adc
aas
hlt
add
pop
xor
icebp
and
push
push
stc
and
cmps
outs
push
adc
dec
dec
dec
test
(bad)
leave
aas
fs
sbb
adc
mov
mov
loop
or
dec
aam
sub
test
nop
mov
call
add
mov
cld
scas
pop
retf
fistp
pop
movs
cmps
xor
dec
retf
sbb
or
pop
out
fs
shl
popa
inc
or
push
inc
pop
push
add
(bad)
jmp
push
push
xchg
jns
movs
psubb
jg
adc
imul
ins
loopne
cmp
sahf
xchg
push
push
cli
cli
int
push
inc
pusha
js
out
push
(bad)
dec
iret
cmp
outs
mov
pop
mov
lock
inc
adc
repz
imul
sub
or
push
(bad)
pop
add
cli
repnz
mov
inc
loope
jo
movs
cli
xchg
test
jmp
mov
sub
cmp
inc
lods
pop
stc
retf
adc
mov
mov
xchg
and
and
and
inc
clc
test
sub
push
mov
xchg
lods
mov
sub
jmp
push
and
movs
jo
jecxz
jbe
push
jns
or
push
inc
sbb
sahf
mov
sub
jno
aaa
in
jo
lods
int3
rcl
xchg
enter
addr16
pop
leave
push
sbb
stc
cmp
dec
popf
xor
outs
or
ds
or
inc
movs
add
mov
cmp
inc
dec
into
xchg
jns
xor
push
fnstsw
js
xchg
into
adc
sbb
dec
daa
jnp
repnz
or
retf
pop
mov
jle
cmp
adc
pop
movs
test
ins
in
cmp
test
add
sub
pop
push
hlt
push
aam
and
rcr
cmp
pop
sub
fwait
jae
inc
sub
fwait
daa
pop
js
icebp
push
scas
sbb
outs
test
sbb
ret
add
mov
stos
out
mov
in
dec
jne
imul
cmp
jno
popw
adc
in
and
mov
fild
test
jp
arpl
ins
scas
(bad)
jp
int3
into
adc
mov
or
rcl
call
mov
mov
idiv
je
xchg
je
dec
and
mov
dec
cmp
add
jge
or
mov
xor
push
add
inc
in
add
lods
outs
sti
out
mov
push
mov
rcr
(bad)
in
test
mov
call
int3
inc
jg
add
scas
dec
in
hlt
loope
cmc
adc
or
mov
cmp
sub
inc
mov
in
mov
add
outs
xchg
pusha
aam
jecxz
cld
(bad)
lods
sbb
pusha
sub
cmp
cdq
or
pop
shr
outs
mov
mov
hlt
div
arpl
jnp
jns
xchg
xchg
fistp
pop
cwde
ja
pop
xchg
jge
push
mov
retf
push
jecxz
and
in
push
sub
retf
ffreep
jo
jnp
div
je
push
leave
in
imul
sbb
inc
push
frstor
xchg
loop
or
rcr
and
inc
stos
nop
dec
leave
pop
js
dec
jle
iret
sbb
push
(bad)
jecxz
fwait
mov
jbe
inc
sub
xchg
jmp
jnp
xchg
mov
arpl
je
test
gs
or
(bad)
or
jmp
pop
add
add
leave
cmps
(bad)
jg
sub
jmp
xchg
xlat
push
mov
pop
into
jns
add
xchg
sar
jge
jmp
fld
inc
(bad)
nop
cmp
hlt
xchg
push
ror
mov
test
dec
sub
mov
lods
mov
out
ins
fistp
mov
retf
cmp
cld
ficom
mov
and
pop
xor
push
xchg
fstp
lods
mov
cmp
cmp
push
loopne
push
out
push
iret
add
fst
mov
pop
icebp
shl
ret
xor
lahf
(bad)
data16
rcr
sti
js
loopne
xchg
daa
jmp
mov
pop
add
and
in
xor
lahf
pop
shl
pushf
cld
hlt
adc
adc
jp
xchg
scas
add
jae
add
inc
sub
and
adc
sbb
jo
dec
scas
adc
or
cmp
in
cmc
sub
mov
ins
cdq
lahf
arpl
sar
push
mov
clc
push
ins
cmp
adc
xchg
iret
fimul
inc
xchg
loopne
add
inc
dec
or
bound
sbb
stos
and
je
sbb
stc
jp
jmp
push
cmps
aas
out
gs
sbb
cs
xor
shr
imul
ret
xor
jge
push
and
(bad)
xor
pop
cmp
push
daa
cmp
push
fcomp
jae
ins
iret
or
fdivr
mov
dec
xchg
ss
out
imul
mov
aaa
add
jo
mov
popa
std
cmp
cmp
mov
mov
iret
xor
fwait
stos
ror
xchg
inc
jl
dec
inc
sbb
xchg
(bad)
sbb
mov
ret
or
adc
mov
repz
xor
fcomp
int
jg
mov
fmul
imul
sbb
dec
jmp
sar
imul
cwde
pop
(bad)
jbe
(bad)
mov
sub
jmp
cmc
aaa
lahf
push
in
jl
push
out
retf
hlt
add
retf
pop
inc
gs
stos
or
cmp
jo
dec
sub
(bad)
mov
adc
inc
ja
inc
and
mov
inc
fwait
xchg
dec
dec
jp
rcr
out
sbb
loopne
pushf
in
lea
popf
dec
jae
mov
out
sbb
dec
push
jp
mov
repz
add
in
pushf
push
mov
aas
jmp
bnd
sub
imul
test
imul
les
imul
add
xor
mov
mov
in
xchg
xor
gs
adc
or
mov
movs
test
bound
or
push
push
ret
rcr
retf
aaa
es
push
inc
and
test
dec
jbe
jmp
adc
stc
mov
fwait
movs
pop
stc
pop
adc
or
dec
scas
int3
(bad)
sbb
stos
sub
cmp
mov
in
inc
mov
add
test
daa
test
lds
push
bound
addr16
test
ds
fld
ins
sbb
jns
dec
(bad)
repnz
mov
inc
call
ficom
sub
out
push
lea
mov
push
stc
inc
push
sti
cmp
cmova
adc
jnp
mov
mov
jns
push
or
and
mov
test
jmp
xchg
aam
movs
aas
dec
cmp
push
xchg
xor
jb
clc
aam
test
inc
(bad)
retf
int3
fwait
stos
ror
bound
xor
icebp
xchg
add
mov
cwde
inc
push
dec
loope
paddusw
push
mov
adc
xchg
and
rcr
xchg
add
xor
outs
add
sub
mov
jl
jne
xor
jo
aam
int3
adc
(bad)
add
push
jbe
sti
dec
jno
sbb
ror
add
in
jns
pusha
cmp
inc
test
inc
stos
or
cdq
xchg
sub
xor
jp
jo
mov
dec
or
fld
sub
pop
push
popf
sti
sbb
pop
sub
cmp
inc
inc
mov
mov
fimul
and
mov
scas
fnstcw
ret
cld
add
sbb
pushf
xor
(bad)
aas
sbb
(bad)
jno
mov
retf
les
fwait
leave
or
cmc
lock
into
loope
and
dec
pop
ret
adc
cdq
mov
into
cmp
movs
dec
add
in
xchg
cmp
and
enter
repz
iret
and
cmp
pop
ds
pushf
test
pop
adc
sub
mov
call
xor
and
mov
sbb
and
push
outs
and
hlt
(bad)
iret
add
js
int
cmp
arpl
into
mov
sbb
jle
loop
icebp
or
adc
arpl
add
call
fsubp
out
bnd
pop
sub
xchg
mov
js
sbb
mov
xor
pop
rcl
inc
push
imul
xor
fs
cmp
push
lock
mov
dec
out
ror
jo
or
test
or
mov
mov
enter
mov
add
and
mov
push
mov
adc
daa
sub
mov
test
cmp
cld
xchg
push
and
xchg
ds
fs
cmp
popa
test
enter
pop
xor
aaa
(bad)
cmp
push
fiadd
xor
mov
nop
mov
add
aaa
call
sbb
cmp
jo
mov
aad
std
mov
and
sahf
jb
jl
int3
mov
push
aam
jno
into
xchg
mov
jge
and
cs
jg
leave
xlat
mov
add
ins
ret
xlat
push
or
out
or
sub
add
js
push
sahf
and
dec
scas
mov
outs
push
add
js
pop
mov
cmp
jbe
push
in
mov
mov
sbb
cld
inc
dec
jmp
xlat
sti
bnd
shl
dec
inc
add
stos
jp
stos
and
shl
in
call
dec
imul
or
adc
mov
lods
sub
push
push
cmps
mov
test
outs
push
movs
or
repnz
fmul
popf
aaa
add
jnp
mov
pop
cdq
fucomp
add
sub
xor
mov
movs
mov
adc
xor
outs
inc
mov
cld
mov
loop
imul
pop
rcr
leave
inc
fimul
hlt
test
dec
inc
cli
pop
adc
mov
jg
sub
mov
xchg
xchg
jl
gs
dec
inc
pop
inc
sbb
lock
mov
out
shl
shl
jns
sub
sbb
in
ins
inc
dec
inc
sbb
push
sbb
mov
xchg
jp
lea
fsubr
iret
and
call
pop
xchg
mov
jb
pop
pop
cmp
cmp
jo
mov
sub
push
xchg
pop
lea
xchg
xor
mov
cld
mov
inc
dec
test
mov
jmp
inc
adc
mov
iret
popa
jne
pop
cmp
(bad)
ficomp
call
inc
scas
jmp
loop
mov
add
jg
outs
das
into
mov
jge
sbb
fsubr
inc
xor
aad
(bad)
cmovbe
xchg
iret
push
mov
push
cmp
sahf
addr16
add
imul
xchg
sub
cmp
clc
xor
in
add
mov
inc
fisubr
push
xor
xchg
imul
cmps
and
mov
ins
pop
psubq
xchg
movs
pusha
dec
(bad)
imul
inc
leave
fbld
sti
popa
loope
(bad)
and
jb
pop
mov
imul
or
sub
pop
adc
mov
xlat
jnp
xchg
mov
xchg
cmp
sbb
dec
ret
xor
cmp
jbe
and
adc
daa
rcl
push
aam
enter
cdq
outs
repz
fisub
inc
loope
aaa
cs
adc
clc
xchg
je
arpl
add
cmp
sti
or
push
ffree
es
lods
jbe
lods
or
(bad)
lahf
idiv
in
shr
outs
or
test
jo
xor
cli
std
jno
mov
and
je
lods
test
lods
inc
or
int3
(bad)
mov
fcom
and
push
xchg
and
jp
dec
cmps
add
xor
out
imul
cmps
pop
aaa
rol
sub
das
jno
cmc
js
test
out
stos
add
test
in
stc
adc
shr
inc
adc
jecxz
icebp
(bad)
nop
pop
sti
enter
mov
es
mov
shl
pop
jb
mul
sbb
shr
sbb
or
sbb
sub
jmp
xor
(bad)
jmp
sub
test
pushf
dec
fnstenv
ficomp
sbb
(bad)
xor
cmps
rcl
push
popf
inc
jns
mov
or
pop
retf
aad
or
std
cmp
cmp
pop
lahf
sbb
and
int
fadd
or
loope
add
movs
add
push
and
mov
rol
mov
xchg
jmp
dec
xor
mov
mov
pmuludq
stos
repnz
pop
nop
inc
pop
popa
push
fimul
sub
hlt
mov
in
dec
jb
mov
inc
cmp
xchg
inc
mov
dec
(bad)
jno
aaa
jo
push
push
inc
or
and
mov
cmp
cmc
aad
movs
test
cmp
jle
mov
mov
pop
dec
add
lods
adc
dec
inc
cmp
jns
add
jo
mov
or
xchg
dec
ror
je
adc
cmp
sbb
in
mov
fndisi(8087
jbe
jmp
loope
xlat
repnz
sbb
adc
shr
xor
movs
push
lahf
shl
mov
xchg
push
sbb
inc
xlat
pop
cmp
cmp
mov
bound
int
sbb
gs
rcr
pop
addr16
adc
mov
jae
ret
js
jb
mov
cwde
pushf
add
retf
jmp
push
add
mov
pop
or
adc
jnp
and
repnz
or
xchg
adc
ret
cmps
pop
gs
inc
repnz
jae
cmps
das
and
rol
lock
cmp
mov
pop
push
lods
jp
mov
loopne
fndisi(8087
mov
inc
ss
inc
jl
inc
je
sbb
push
sub
dec
pop
push
das
popf
retf
mov
jle
or
mov
adc
and
rcl
out
dec
push
mov
sbb
scas
inc
or
sbb
out
jp
into
lock
sub
repnz
ret
enter
cdq
sbb
dec
shrd
xor
xor
lea
ins
(bad)
lock
ret
pop
std
jnp
outs
sub
arpl
or
daa
jnp
push
inc
jl
cmp
and
mov
loop
cdq
dec
int
mov
or
xchg
cwde
add
or
pop
mov
xchg
mov
fnclex
loopne
retf
rcr
test
pop
xchg
pop
paddusb
add
inc
pop
les
(bad)
nop
push
rcr
pop
jb
shl
std
pusha
adc
call
cmp
mov
adc
outs
outs
outs
(bad)
mov
mov
enter
int
or
retf
mov
mov
add
rcl
adc
cmc
push
mov
dec
aam
icebp
sbb
push
push
imul
rol
or
dec
or
inc
dec
je
xor
and
imul
inc
sub
and
sbb
push
cmp
push
jg
mov
lahf
mov
movlps
test
or
jae
adc
and
or
and
inc
sbb
push
inc
fs
inc
idiv
xchg
rcl
xchg
xchg
data16
mov
dec
test
mov
mov
dec
inc
dec
scas
jns
cmp
adc
or
dec
out
imul
inc
call
push
lds
add
mov
data16
retf
in
iret
add
push
pop
inc
imul
stos
cmp
jne
or
ss
adc
and
inc
jmp
xor
(bad)
ins
outs
retf
into
push
adc
mov
ds
(bad)
mov
loopne
push
mov
and
pushf
in
ficom
jg
(bad)
pop
pop
adc
fild
enter
jbe
jns
inc
addr16
and
ds
mov
push
and
and
inc
in
out
fcom
jle
enter
mov
xor
ds
repnz
repz
add
cwde
push
inc
cmp
test
cli
fs
sub
dec
sbb
sbb
sahf
jb
lods
cmp
cmps
pop
aam
in
jo
dec
adc
shl
lods
cmp
inc
ins
xchg
mov
xor
inc
stc
aaa
sub
out
mov
cdq
sub
stc
(bad)
sbb
sti
or
nop
ja
jmp
fcomp
xlat
loope
jnp
popa
pop
xchg
xchg
or
pop
cmp
stos
ja
ds
dec
pop
mov
mov
cmps
int3
fsubrp
xchg
pop
xchg
jl
cmp
jno
cmp
jmp
xor
leave
hlt
dec
jne
cmp
push
add
pop
xchg
inc
rcl
inc
push
xchg
pop
mov
(bad)
mov
dec
adc
les
dec
mov
cmp
pop
(bad)
jo
sbb
xor
movs
ins
push
inc
call
and
shr
(bad)
repnz
pop
scas
(bad)
idiv
shl
sub
loop
add
cmps
rol
xchg
movs
(bad)
push
rol
inc
cmp
retf
aam
stos
xchg
xor
in
cdq
mov
mov
adc
pop
popa
paddb
outs
cmp
adc
fmul
xor
loop
fstp
retf
fst
ds
mov
sbb
pusha
add
jae
cmps
xor
nop
int
jl
mov
cwde
dec
not
jae
das
pop
mov
add
movs
aaa
je
call
sar
inc
and
hlt
lock
cld
in
xor
scas
cwde
sbb
mov
ins
adc
(bad)
adc
adc
int
lds
and
jle
out
mov
rcr
dec
movs
xchg
fsub
mov
lods
das
shr
sub
loop
rol
mov
pushf
rol
sub
xlat
leave
pop
pop
test
xor
sbb
and
sub
inc
pop
sbb
aaa
push
call
fcomip
add
cmp
sahf
cmp
movs
lods
(bad)
js
out
xchg
adc
xchg
pop
lea
push
mov
daa
jge
xor
and
fnstenv
retf
sub
or
cli
lods
out
mov
cmp
outs
mov
adc
sbb
jecxz
int3
pop
out
mov
inc
mov
in
pop
imul
fist
int3
inc
xchg
jge
push
rol
(bad)
xchg
shr
add
pop
(bad)
adc
bound
shr
in
test
popf
dec
and
sbb
(bad)
pop
dec
pop
jge
addr16
bound
jb
jne
daa
dec
movs
mov
sub
dec
lods
aas
jl
xor
sbb
js
pop
dec
dec
mov
sbb
js
fcom
jb
sub
xchg
sbb
mov
in
sbb
sub
icebp
dec
cmp
js
xor
push
sbb
neg
fidivr
mov
jl
mov
cwde
into
xchg
xchg
mov
call
daa
mov
adc
js
sar
mov
ret
std
daa
(bad)
dec
pop
adc
ins
push
or
call
loope
int
push
sbb
cmp
in
inc
and
fsub
cmps
adc
sub
mov
stos
dec
push
sub
stos
cmp
inc
or
jb
ss
jmp
jae
aas
jns
xchg
and
dec
fdiv
out
ins
imul
fisttp
mov
loop
fld
adc
mov
adc
scas
int3
xor
sbb
push
push
dec
xchg
(bad)
(bad)
jo
enter
nop
retf
xchg
in
push
cmp
ds
sbb
fmul
movs
push
lahf
pushf
std
gs
dec
sti
outs
cmc
jmp
and
xcrypt-cfb
cmps
mov
lods
vaddps
outs
add
push
js
push
mov
xchg
ficomp
fsubr
push
push
sbb
loopne
stos
retf
pop
mov
xor
mov
xchg
or
inc
jge
xchg
stos
test
adc
jl
movs
fdiv
jl
mov
xor
cli
aam
loopne
into
xchg
imul
pushf
rol
sub
jnp
pop
mov
sub
xchg
xchg
sbb
in
inc
ds
or
xor
mov
movs
call
xchg
(bad)
and
(bad)
daa
pusha
fidiv
xor
sbb
pusha
add
mov
ror
mov
mov
push
pop
pop
das
int3
(bad)
imul
or
jl
xor
lea
xchg
mov
xchg
outs
or
add
jle
aaa
fxch
pop
daa
xchg
test
cmp
fist
arpl
jg
xor
je
outs
jno
xor
jmp
pop
mov
mov
hlt
jle
inc
mov
sbb
lods
mov
stos
test
dec
lods
cmp
mov
in
jecxz
int
xchg
push
out
push
inc
sub
sbb
ja
cvttps2pi
sub
loopne
out
neg
adc
and
inc
dec
mov
rcr
and
inc
sbb
push
jae
add
add
repz
jnp
sbb
clc
iret
push
ret
(bad)
mov
sub
int3
(bad)
mov
jle
sub
add
movs
jg
loope
xor
shr
sub
jbe
out
sahf
inc
mov
pop
shr
adc
push
std
movs
sar
push
retf
cwde
ins
data16
cmp
mov
pop
mov
jl
push
cdq
jp
aas
sbb
loope
cmp
js
sahf
inc
xor
dec
jbe
inc
sbb
mov
add
shl
or
imul
xchg
in
cmp
gs
push
int3
ss
xchg
push
jae
sbb
(bad)
jnp
xlat
and
mov
ror
xor
cmp
pop
je
push
and
enter
nop
push
adc
cmp
or
cli
xchg
sbb
mov
add
mov
xor
rcr
pop
jmp
push
outs
loop
cmp
mov
xor
cmp
jmp
fst
mov
mov
int3
(bad)
iret
out
js
cmp
add
call
pusha
and
push
call
mov
ss
pop
fs
pushf
aad
(bad)
ins
outs
enter
xor
sbb
mov
sar
cs
jno
pushf
sub
fldenv
pop
stc
lds
xchg
frstor
and
aad
mov
les
outs
lods
jecxz
pop
add
lods
add
xor
cld
pushf
rcr
xchg
mov
test
mov
jl
inc
js
xchg
mov
sub
add
sub
pop
movs
into
push
push
clc
cmp
outs
jb
mov
call
jle
sbb
push
addr16
es
dec
stc
cmc
adc
fcomip
aas
adc
xchg
xchg
mov
aam
test
or
push
jb
sbb
leave
jmp
push
test
es
addr16
cmp
scas
mov
adc
dec
int3
add
retf
leave
inc
test
jp
xchg
neg
scas
push
xchg
retf
(bad)
rcl
sub
loop
push
aas
gs
add
push
sti
(bad)
jle
ror
mov
inc
sbb
(bad)
pop
xor
and
xor
aam
movs
popf
jmp
push
and
inc
cmc
psllq
dec
leave
(bad)
fcomp
mov
or
inc
(bad)
push
sahf
stos
and
inc
sbb
fisub
ins
(bad)
jle
mov
push
and
jge
mov
lds
and
lock
mov
std
sub
cmp
dec
imul
stc
nop
bound
lds
jge
mov
rol
inc
repz
jns
arpl
dec
das
clc
cmps
in
xor
mov
cmps
popa
popf
jo
or
es
clc
ss
int3
jp
dec
mov
inc
jb
clc
push
outs
rcl
and
popa
aas
stos
ss
push
call
adc
mov
sbb
dec
pop
adc
jl
adc
into
mov
pop
sbb
inc
enter
scas
lods
pop
hlt
shl
stc
jmp
cmc
cli
nop
int3
mov
and
push
fcomp
fidiv
xchg
and
fwait
xchg
rol
inc
lods
push
(bad)
mov
sti
pusha
pusha
(bad)
push
pushf
in
mov
adc
jg
dec
add
dec
and
jge
stc
nop
ds
mov
fbld
cli
dec
mov
mov
pop
inc
add
jb
jo
out
inc
fmul
(bad)
call
retf
mov
leave
fs
lea
or
fisttp
inc
sub
jno
cmp
sti
jnp
mov
jmp
sbb
sub
pusha
test
fcomp
pop
ins
mov
dec
mov
adc
xor
add
(bad)
aas
dec
fstp
in
enter
outs
xlat
and
mov
push
sbb
ins
outs
(bad)
dec
cmps
and
je
ja
je
aaa
push
not
mov
sub
xor
call
pop
jnp
lods
mov
mov
sub
jmp
pop
sahf
sub
fild
popf
dec
retf
sahf
sbb
aas
pop
inc
imul
xor
inc
dec
jg
mov
out
mov
fsubr
cli
inc
pop
pop
add
movs
add
cwde
xor
js
and
xchg
push
push
mov
setae
arpl
imul
popa
shl
push
or
ja
jae
xor
arpl
loope
xchg
and
fwait
in
cmps
mov
xchg
(bad)
cmp
sub
cmp
ss
inc
mov
movs
sub
out
mov
push
stc
sub
pusha
mov
jnp
loope
jg
mov
std
mov
ins
jge
out
scas
lahf
je
scas
int3
mov
iret
jecxz
test
data16
add
sub
push
xchg
rcl
xchg
je
call
dec
or
jmp
aad
outs
sbb
repnz
xchg
mov
cwde
add
cs
fs
mov
xchg
cmp
push
pop
push
and
dec
adc
test
scas
nop
iret
jno
out
or
ret
popf
hlt
add
pop
(bad)
adc
and
adc
mov
mov
cmp
and
popa
cs
adc
xor
scas
mov
aam
fmul
sbb
add
or
and
aam
fcomp
int
call
inc
jge
popf
sub
aaa
push
movs
lds
mov
add
mov
or
iret
call
ret
and
inc
jb
mov
mov
enter
jne
inc
cmp
(bad)
jnp
xchg
pop
jo
test
cwde
sub
add
push
cdq
cld
das
(bad)
and
gs
lahf
ret
and
sbb
mov
outs
std
retf
inc
cld
fs
hlt
(bad)
movs
add
sub
int
push
adc
popa
(bad)
adc
nop
(bad)
xchg
mov
push
push
jmp
enter
push
or
stos
retf
jecxz
push
xor
mov
fidiv
jp
mov
adc
cld
in
push
cs
lds
push
lock
cmp
pop
movntps
mov
ins
jle
aam
pop
in
lds
and
push
push
(bad)
cmps
mov
ret
or
xchg
mov
test
push
sbb
dec
push
stc
test
or
sub
js
les
inc
mov
into
stos
out
inc
mov
mov
mov
pop
pop
and
aad
int3
jne
(bad)
adc
dec
adc
ja
into
dec
or
cdq
sub
jmp
icebp
pop
sbb
jne
rol
xor
adc
xlat
scas
sbb
(bad)
and
rcl
test
cmp
xor
xor
mov
jmp
(bad)
cmps
les
shl
sti
jp
jle
pop
cs
enter
jnp
loope
xor
mov
lock
out
xchg
test
inc
sub
cmp
lods
mov
sar
(bad)
add
cmps
cmps
cmp
mov
mov
sbb
aas
cmp
cmps
cmp
add
xchg
std
dec
loop
mov
ja
add
popa
bound
out
inc
shr
sysexit
push
mov
xchg
call
test
in
movs
and
xchg
or
(bad)
nop
sub
ret
test
sar
aaa
shl
xor
and
repz
out
imul
lea
pop
xchg
dec
or
sbb
shr
(bad)
nop
cmp
repnz
call
mov
retf
adc
(bad)
stos
(bad)
pop
leave
sahf
xchg
xchg
mov
je
push
inc
test
xor
imul
pushw
neg
lock
ss
popf
jl
(bad)
jp
fidivr
dec
shl
adc
lods
(bad)
jmp
fldenv
les
(bad)
aaa
loopne
sbb
push
add
in
push
cli
add
jmp
push
popf
jg
push
mov
push
popf
retf
sbb
das
ficom
xchg
cld
loopne
xchg
out
scas
sub
out
mov
iret
es
xor
pop
xchg
sbb
mov
push
sub
cli
(bad)
jle
cmp
pop
icebp
js
loop
popf
add
jp
cmc
mov
jecxz
cmp
out
es
fst
push
in
add
sub
pop
je
popf
sub
sub
dec
mov
fstp
inc
xchg
iret
and
cmovbe
pop
sbb
call
and
out
mov
arpl
and
enter
xchg
call
cld
fnsave
std
sub
cwde
sbb
out
nop
push
aad
cmp
xchg
fisubr
out
rol
jg
fisttp
xchg
shl
pop
pop
mov
add
dec
aad
js
pop
mov
pushf
mov
pop
pop
sub
sti
lock
mov
in
nop
rcr
cmps
fcom
sbb
popf
sti
ror
adc
inc
aad
jns
rcl
or
or
fs
cdq
sar
push
add
ins
jge
sahf
(bad)
cmps
mov
loop
(bad)
fidiv
cs
adc
push
fadd
jecxz
fwait
sbb
jg
adc
ins
add
mov
mov
fwait
scas
mov
(bad)
inc
lock
repz
dec
adc
nop
popa
sar
lock
fiadd
arpl
sub
int
xchg
mov
imul
pop
enter
ja
fwait
sar
outs
(bad)
cld
inc
hlt
dec
sbb
jge
test
inc
pop
sbb
(bad)
fld
dec
adc
push
cwde
mov
rcl
mov
mov
data16
sbb
popa
xchg
(bad)
or
cmp
pop
dec
mov
mov
and
into
nop
fwait
out
data16
jno
fsubr
cmps
cdq
xor
sbb
pop
or
pop
dec
rol
mov
cmp
repnz
outs
outs
sbb
cmp
jb
lods
cmps
test
mov
jg
lea
push
jbe
pop
xlat
and
sahf
jl
or
add
mov
fnstcw
xchg
jge
and
xchg
and
sub
dec
jns
loope
and
mov
adc
ret
fwait
outs
stos
lock
dec
mov
push
push
sbb
int
cdq
dec
call
ret
pop
call
loope
rol
ds
movs
xchg
cmp
jmp
ss
dec
push
inc
inc
add
mov
nop
push
hlt
and
mov
clc
fld
and
(bad)
dec
cmp
out
pop
sbb
mov
xchg
rol
ins
sub
(bad)
fcmovnu
in
lds
pop
jnp
push
scas
int3
xor
in
dec
into
cmp
inc
push
call
xchg
mov
cmp
cwde
neg
inc
mov
push
pop
jne
jo
push
call
or
scas
ins
(bad)
(bad)
mov
or
js
(bad)
popa
jle
mov
out
popf
pop
sbb
mov
sbb
mov
inc
(bad)
adc
cmp
push
jge
push
adc
fld
scas
jb
aas
mov
in
cmp
push
dec
dec
shr
adc
out
out
rcl
into
mov
das
ja
push
icebp
repnz
pop
xchg
cmc
call
mov
in
icebp
and
jnp
xchg
cld
and
test
repz
mov
mov
and
or
inc
push
(bad)
aad
mov
mov
cmps
out
pop
adc
mov
loope
mov
xor
movs
xor
dec
imul
mov
push
sahf
es
push
in
out
sub
mov
pop
not
and
xchg
mov
or
je
jns
cmp
shl
loopne
mov
adc
or
sub
movs
fcomp
test
rcr
lock
movs
jle
mov
aaa
or
fimul
stc
push
psllq
pushf
push
ret
jnp
lds
ins
and
mov
and
and
lds
pop
scas
jl
mov
mov
dec
fs
aas
les
jl
or
xor
cmp
ja
sbb
adc
cmp
or
cmp
lock
je
fucomi
in
mov
xchg
(bad)
std
sbb
out
xchg
dec
icebp
dec
(bad)
in
int3
ret
jno
pop
cmps
cmp
pop
inc
call
and
mov
xor
fdiv
loop
mov
mov
cmc
addr16
mov
std
dec
and
pop
in
mov
aad
push
arpl
test
shr
or
cwde
mov
push
push
test
aad
sbb
dec
test
lods
push
out
je
push
dec
and
mov
(bad)
cmp
mov
mov
mov
mov
sub
loopne
loopne
in
je
add
sbb
push
add
pop
fs
div
rcl
jle
push
test
xor
neg
sbb
pop
aad
in
test
(bad)
out
mov
push
pop
(bad)
jmp
lods
popf
sub
pop
sbb
inc
mov
call
cld
nop
call
jecxz
imul
xor
sub
mov
dec
aad
rol
jg
(bad)
pop
push
pusha
push
push
jg
leave
push
test
mov
sub
ds
bound
pop
mov
mov
inc
jge
movs
out
cmc
sub
xchg
mov
fs
push
lea
adc
inc
push
cmps
adc
mov
aad
data16
sbb
adc
ds
or
test
(bad)
and
dec
jbe
rol
jbe
mov
and
sbb
repz
push
dec
ds
or
or
retf
or
ret
push
iret
mov
aam
sbb
in
sar
pusha
mov
(bad)
dec
push
jbe
push
mov
in
or
mov
and
aad
sti
adc
movs
adc
in
and
loope
pop
dec
lods
lahf
xor
mov
lods
movs
mov
push
dec
push
pop
in
gs
ror
jmp
dec
inc
and
and
sub
mov
leave
pop
mov
popw
jno
pop
xlat
add
(bad)
mov
mov
add
ja
mov
sti
neg
mov
mov
into
out
xchg
jmp
push
dec
cmp
js
pop
lea
cli
out
sbb
cli
sub
pop
sub
popa
xchg
cmps
(bad)
jb
test
adc
aam
iretw
ds
or
mov
mov
in
mov
push
push
mov
fwait
mov
push
int3
(bad)
outs
repnz
mov
pop
pusha
xor
dec
rcr
daa
mov
jns
sub
push
sahf
mov
jle
push
xchg
inc
xlat
and
jno
enter
add
mov
mov
test
aad
xchg
adc
inc
sbb
mov
jecxz
adc
push
cmc
jmp
or
js
fs
pop
push
sbb
xor
mov
and
test
xlat
xchg
ror
xchg
test
add
sbb
and
mov
jmp
das
je
mov
nop
xor
call
mov
aam
outs
xlat
ja
ss
xlat
pop
and
and
and
adc
add
shl
movs
imul
push
jmp
push
or
pusha
xchg
sub
pop
xlat
dec
mov
into
retf
loope
jle
fcomip
pushf
stos
popa
and
fs
push
iret
idiv
push
lock
sahf
out
repz
xchg
test
fwait
pop
xor
cmp
cdq
fwait
call
add
xchg
clc
stos
xchg
sub
pop
in
sub
push
and
fisttp
(bad)
sar
dec
stos
aas
scas
xlat
pmuludq
sete
adc
dec
js
or
sbb
jecxz
inc
fcom
ror
out
out
gs
mov
sahf
push
push
jg
cld
jae
inc
loop
inc
pushf
inc
mov
xchg
dec
iret
inc
inc
(bad)
ja
push
call
and
sbb
mov
mov
mov
arpl
adc
add
cmps
repz
retf
pop
popa
fld
in
loop
mov
sub
dec
call
add
addr16
retf
or
xor
jecxz
in
stc
fst
scas
repz
jb
dec
mov
mov
pop
dec
xor
xor
int3
jae
cmp
jle
(bad)
jbe
jo
les
test
push
mov
repz
add
(bad)
push
icebp
push
dec
mov
test
adc
test
fnstenv
pop
retf
stc
add
sbb
mov
pop
pop
dec
jns
mov
or
and
es
cmps
icebp
sbb
pop
mov
lea
jne
mov
movs
call
sub
jb
loope
adc
push
mov
xchg
xor
pop
sti
and
test
sbb
xor
imul
das
sbb
jnp
inc
dec
shl
rol
(bad)
fsubr
dec
(bad)
cmp
dec
xchg
mov
dec
in
cmps
jle
rcr
or
xor
jmp
cs
jb
and
rcl
fcom
cdq
hlt
cmp
push
push
(bad)
and
mov
int
in
jp
pop
mov
leave
xor
enter
movs
push
add
lea
inc
addr16
bound
mov
push
shr
neg
jbe
cmp
movs
cmps
jp
add
test
sbb
clc
ds
std
jb
inc
movs
out
jg
xchg
sub
xor
sub
cld
xchg
pop
lock
push
xchg
pushf
sbb
movs
mov
(bad)
loop
out
sbb
push
push
sbb
sub
in
mov
cld
mov
pop
mov
inc
inc
push
mov
test
repz
dec
sbb
adc
jbe
outs
je
ins
inc
mov
mov
adc
mov
pop
out
mov
dec
or
push
stc
out
jae
bound
mov
xchg
ret
stos
fldcw
sbb
mov
jnp
adc
mov
ret
push
in
(bad)
(bad)
xor
cs
retf
adc
in
clc
ss
data16
and
adc
and
inc
(bad)
jae
ins
jno
sbb
ins
jge
je
movs
mov
sub
pop
xchg
xlat
cwde
js
pusha
and
cmp
sbb
pop
xor
xor
xchg
pop
rol
enter
xor
mov
popa
outs
test
scas
sub
stos
loopne
movs
in
or
loopne
pop
fclex
sti
lods
push
cmp
arpl
xor
mov
xor
xor
jge
data16
ror
and
pop
pop
test
cmp
shr
shl
xchg
nop
loopne
dec
add
mov
aad
test
mov
xlat
xchg
xor
push
xor
lds
pop
out
push
xchg
jmp
(bad)
xchg
loop
xlat
aas
dec
sbb
(bad)
jle
xchg
jbe
xchg
push
and
imul
stos
mov
pop
mov
(bad)
ficomp
fistp
out
adc
cmc
jl
adc
mov
imul
mov
ss
adc
outs
in
or
jne
loopne
pop
xchg
push
sub
xchg
maxps
push
neg
mov
int
into
nop
adc
or
mov
movs
out
test
adc
(bad)
xchg
inc
push
pop
inc
cdq
pop
repnz
(bad)
aad
and
push
pop
mov
(bad)
adc
jmp
and
pop
mov
aas
fwait
sub
xchg
ss
add
in
xor
nop
mov
xor
stos
mov
ss
iret
ret
mov
imul
in
push
cmp
push
repz
sub
push
xchg
call
ret
hlt
ins
inc
dec
sub
mov
push
sbb
ret
pop
mov
adc
(bad)
hlt
bound
test
pop
push
push
sar
stos
push
xor
sahf
mov
adc
jg
xchg
pop
rcr
mov
es
cmps
jbe
imul
cli
xchg
cmp
and
daa
mov
gs
mov
cmps
xchg
enter
push
ins
jge
lahf
arpl
test
or
outs
push
jae
rol
into
(bad)
mov
(bad)
dec
inc
add
sbb
push
and
out
mov
mov
in
mov
dec
jbe
push
pop
retf
lods
mov
push
lds
test
arpl
pop
or
mov
dec
outs
inc
aas
xor
jecxz
fsub
sub
dec
retf
dec
clc
mov
ja
inc
lods
retf
cmp
xor
push
push
jmp
cmp
mov
or
retf
rol
aas
push
pop
cs
fdiv
rcl
mov
in
mov
push
bound
mov
push
rcl
and
add
dec
repz
push
cs
bound
bound
call
jp
cmps
das
xor
xchg
movs
inc
jmp
leave
leave
je
dec
pop
movs
push
xchg
fwait
lahf
(bad)
fcmovb
add
movs
shl
jle
mov
push
pop
jmp
pop
pop
inc
inc
out
loop
mov
xchg
mov
out
outs
jnp
mov
jns
mov
push
cmp
fidivr
mov
cld
jno
pushw
mov
in
xchg
mov
scas
(bad)
mov
retf
mov
cwde
pop
mov
adc
xchg
fsub
sbb
and
neg
sub
inc
cmp
adc
jmp
sbb
retf
push
dec
sub
ja
xchg
fistp
fnstcw
or
fidiv
inc
cmp
sbb
mov
cli
nop
repnz
movs
mov
cmp
inc
(bad)
scas
mov
cmp
xlat
cmps
stos
inc
retf
pop
mov
mov
scas
mov
aaa
fild
and
mov
les
fadd
retf
les
(bad)
cmp
jp
dec
push
add
stos
mov
mov
add
test
addr16
test
xchg
pop
mov
in
inc
cs
fcom
mov
jbe
pop
sub
jge
test
mov
xchg
sti
hlt
outs
dec
mov
(bad)
jo
and
(bad)
call
hlt
imul
cdq
pop
or
sbb
cmps
push
es
xchg
jae
add
cmp
add
mov
test
sub
iret
das
ins
sti
xchg
adc
cmps
mov
jmp
adc
and
mov
js
xor
pop
and
cmp
ins
sbb
loopne
sar
repnz
popf
iret
adc
imul
dec
int3
shl
ror
test
lea
dec
ficom
or
pop
dec
push
inc
sbb
xchg
mov
adc
shl
rcl
xlat
arpl
fdivr
jae
mov
int
rcl
push
xor
shl
xchg
pusha
loopne
xor
or
dec
popf
sbb
scas
fs
jne
mov
inc
stos
cld
sub
mov
jns
mov
pushf
idiv
fnsave
push
mov
je
jle
shl
dec
fwait
pop
cmp
inc
fisttp
repz
repnz
cmp
jno
or
xchg
dec
hlt
mov
dec
cmp
xor
pop
push
sbb
in
sub
adc
lods
inc
xor
mov
es
mov
xchg
loop
call
jmp
cmc
cmps
jno
stos
inc
call
jp
enter
cmc
jbe
mov
pop
sub
sbb
cmps
sbb
ins
movs
leave
sti
(bad)
retf
pop
inc
mov
neg
xlat
inc
pop
fwait
repz
mov
repnz
cmp
in
imul
loop
mov
mov
xchg
and
dec
xor
jmp
add
test
xor
mov
and
hlt
int3
sbb
in
sub
xchg
rcr
sbb
not
pop
mov
ss
leave
les
in
or
leave
inc
or
mov
cmp
cmc
mov
mov
or
mov
mov
retf
mov
mov
push
call
push
pop
dec
cmp
add
les
push
gs
pop
or
adc
es
mov
loop
imul
jecxz
inc
jmp
push
loopne
ror
test
inc
loop
out
hlt
scas
int
adc
ror
xchg
in
sbb
pop
in
aam
xchg
cld
xchg
add
fstp
fiadd
mov
outs
xchg
(bad)
adc
sub
xchg
loop
(bad)
test
sbb
jmp
or
add
push
xor
xchg
add
inc
dec
sbb
addr16
sub
cmps
push
mov
(bad)
dec
or
mov
std
push
jg
ret
ds
or
call
xor
and
push
cmps
call
and
push
(bad)
lahf
or
jo
inc
out
and
clc
push
jo
je
dec
stc
pop
repz
or
int
in
dec
and
cwde
push
cmp
cld
sar
pop
add
cmp
fisub
push
rol
out
cmp
int3
xor
cdq
sbb
push
clc
das
push
jl
jge
jbe
sub
xchg
ss
fisub
inc
xchg
inc
out
cmps
mov
pop
xchg
xchg
sbb
stos
xchg
mov
jp
sbb
aas
jmp
pop
div
sub
push
mov
pop
mov
dec
in
pop
mov
pop
mov
push
inc
outs
pop
outs
adc
into
test
outs
mov
data16
add
dec
or
mov
out
(bad)
dec
and
mov
add
inc
dec
test
sbb
imul
sub
adc
or
and
dec
mov
fs
out
push
xor
test
inc
jb
dec
hlt
xlat
das
jnp
jno
daa
sbb
pop
mov
add
rcl
nop
lds
pop
sbb
jns
(bad)
shl
shl
loopne
dec
mov
xor
cwde
jo
adc
std
retf
cwde
fisub
lods
(bad)
push
hlt
imul
sbb
out
lods
cmp
std
mov
(bad)
clc
repnz
sbb
mov
push
mov
pop
or
mov
mov
adc
sbb
mov
jns
dec
outs
call
iret
repz
lock
mov
arpl
pop
call
pop
xchg
cmps
dec
adc
mov
and
and
sbb
pop
adc
data16
or
mov
ret
out
addr16
sbb
int
arpl
or
std
mov
out
dec
ins
lock
cld
cli
(bad)
pop
jae
inc
mov
or
mov
dec
inc
aas
shr
ss
scas
push
mov
pop
call
(bad)
ficom
xor
inc
jle
clc
sub
or
add
jae
jg
mov
xchg
(bad)
xor
or
bswap
cmp
test
add
pusha
jno
mov
mov
mov
xor
jecxz
and
cld
push
adc
mov
mov
(bad)
fdiv
push
shl
lock
add
popf
xor
sub
dec
add
stc
cdq
test
fcmove
in
addr16
dec
cmc
pop
(bad)
sbb
and
cmps
movs
hlt
inc
mov
push
add
test
pop
cmp
sub
cmp
pop
in
pop
mov
xlat
jno
or
push
xchg
aam
shl
sahf
stc
push
xchg
lahf
sub
add
and
mov
loop
jp
clc
add
(bad)
jge
leave
cmp
pop
adc
adc
or
in
clc
movs
call
test
mov
mov
adc
scas
shl
mov
rcr
sbb
sub
add
dec
pop
mov
push
fs
sub
mov
mov
adc
arpl
pop
mov
jmp
adc
mov
shl
loope
rcl
test
and
mov
test
fmul
and
pop
mov
or
test
popa
mov
aad
sbb
xlat
stos
xchg
dec
fdiv
aad
push
fsubrp
pop
pop
inc
dec
ss
sub
pop
sar
ins
leave
pop
xchg
inc
outs
iret
jb
stc
jge
sub
cmp
push
sbb
inc
outs
cli
sbb
scas
cld
sub
push
mov
xchg
jne
ja
xchg
sub
iret
push
fisttp
(bad)
loope
add
xchg
inc
pop
lds
je
out
shr
inc
adc
and
inc
xor
adc
ret
pop
fdiv
sub
and
lds
xchg
outs
add
fsub
outs
lea
xor
xor
xor
mov
xchg
add
mov
jbe
push
xor
dec
out
jo
outs
prefetchw
(bad)
aas
out
xchg
mov
add
inc
add
mov
stc
adc
sbb
cli
pop
xchg
add
jo
jp
fild
call
dec
rcr
jl
mov
add
popf
je
push
enter
dec
ror
xchg
or
int3
in
mov
cmps
jnp
push
or
cs
test
or
cmp
cmp
aas
adc
movs
xchg
outs
sbb
stos
(bad)
xchg
imul
and
scas
icebp
f2xm1
stos
hlt
and
xchg
push
sbb
lods
sub
jmp
and
retf
loope
ss
in
imul
retf
hlt
rol
les
sbb
fisttp
call
jmp
xor
xor
or
lods
pop
xchg
repz
popa
stos
inc
mov
mov
retf
dec
push
or
xchg
inc
sbb
jge
add
icebp
paddq
inc
(bad)
cmp
cmps
lods
bndldx
sahf
lock
jne
pop
fidiv
pop
xor
jg
pop
mov
scas
or
cmp
mov
stc
aaa
in
dec
popa
imul
shr
stos
lds
fild
hlt
nop
inc
mov
cmc
dec
sub
test
fsubr
andps
es
and
or
and
fwait
and
aam
inc
rcl
sbb
test
jmp
inc
adc
jmp
add
and
in
mov
je
sbb
aaa
push
inc
cmp
das
xor
pop
xchg
or
stc
stc
sahf
sub
movs
sti
mov
cmps
push
retf
lods
cld
add
shr
fcom
cmp
dec
xchg
aas
pop
mov
stc
div
mov
das
retf
test
ins
cmc
push
mov
cs
cmps
sbb
lods
xchg
aas
ret
or
clc
fwait
(bad)
sub
xchg
xchg
or
mov
sbb
xchg
pop
sub
lods
xchg
test
paddb
sub
outs
mov
xchg
add
test
mov
push
inc
call
das
(bad)
push
mov
into
sub
mov
pushf
push
push
xchg
mov
hlt
sti
loop
enter
lea
scas
mov
addr16
outs
mov
mov
test
dec
jle
call
inc
sbb
imul
into
lods
ss
push
(bad)
(bad)
push
or
cmps
and
frstor
cmp
icebp
(bad)
jle
xor
mul
mov
add
and
shl
(bad)
or
je
sub
sub
call
stos
sbb
push
(bad)
out
rol
cwde
ja
jecxz
pusha
mov
out
sahf
mov
sahf
inc
xor
jbe
fs
jmp
jl
cld
out
cmps
shl
scas
jmp
outs
pop
inc
push
push
add
loop
inc
sti
fcomp
mov
sub
std
or
jg
in
add
fwait
push
test
pop
rol
inc
pop
lods
fwait
gs
mov
add
int3
mov
or
adc
adc
mov
aam
adc
ja
(bad)
dec
push
cli
aas
xor
jl
push
call
cmp
xchg
adc
xor
add
jb
pop
lds
dec
push
mov
cmps
imul
or
jne
nop
adc
add
daa
or
stos
lock
pop
dec
jge
movs
xchg
retf
fisttp
sub
outs
dec
sar
or
(bad)
cs
out
inc
fwait
scas
mov
or
enter
movs
jmp
or
rcl
sbb
cmp
imul
dec
jl
mov
clc
add
mov
icebp
test
or
sbb
or
adc
shr
or
outs
push
mov
or
mov
call
xchg
gs
xchg
xlat
xor
movs
aad
mov
js
imul
loop
adc
cli
or
stc
aas
push
add
js
(bad)
or
cs
jl
mov
(bad)
sub
jle
test
sbb
pop
out
mov
dec
outs
lock
add
loopne
shr
push
inc
jno
pavgb
jns
nop
push
mov
inc
inc
jne
daa
push
fisubr
(bad)
cli
ins
mov
out
jge
int
rcl
mul
leave
cmp
in
cmp
(bad)
sbb
nop
mov
pop
sbb
jg
inc
mov
(bad)
pop
data16
pop
hlt
int
xchg
fcomp
xor
repnz
jle
cmp
add
mov
and
sbb
dec
jmp
fsubr
add
ss
out
das
sub
or
shl
xchg
les
xchg
dec
ins
push
int
setp
enter
mov
pop
mov
mov
mov
push
addr16
sub
jmp
jbe
or
popa
adc
cdq
dec
jb
sub
add
mov
or
inc
iret
mov
push
xor
push
or
inc
adc
shr
adc
mov
xor
iret
ror
add
fnstsw
jb
cmc
aas
or
dec
std
pop
push
hlt
sbb
pop
repnz
jb
popf
push
in
or
push
mov
jmp
push
dec
(bad)
retf
xchg
or
into
pop
das
mov
fsubr
dec
outs
push
fwait
xchg
mov
pop
mov
dec
inc
sub
shr
jecxz
pop
call
push
pop
(bad)
data16
mov
hlt
fs
jnp
shl
loope
push
inc
mov
(bad)
dec
dec
pop
loope
pop
call
ret
cmps
xchg
push
popa
xchg
jo
and
add
xchg
pop
mov
je
pop
sub
hlt
sub
(bad)
xchg
imul
pop
mov
mov
retf
cmc
xchg
push
mov
sub
sbb
(bad)
mov
mov
mov
pop
in
sahf
shr
fs
imul
clc
xchg
push
inc
cmps
xor
ja
cmp
or
push
dec
ret
ja
sbb
repnz
add
push
fxch
cld
mov
mov
cmp
stos
push
inc
sub
ins
pop
icebp
cmp
mov
push
in
aas
enter
push
fwait
mov
shl
cmc
mov
cmp
addr16
mov
inc
cmp
push
jecxz
adc
cmps
outs
in
fwait
mov
bound
shr
lds
mov
xor
mov
adc
cwde
data16
fsubr
mov
mov
lahf
movs
fld
gs
and
pop
ror
xchg
scas
lock
(bad)
push
rcr
push
mov
aam
(bad)
xchg
imul
hlt
mov
mov
push
shr
push
test
dec
jg
ret
pushf
(bad)
cmp
mov
rcl
add
les
fbstp
xchg
imul
jecxz
fwait
aam
jge
pop
jnp
mov
retf
cmp
int3
pop
cld
mov
push
ss
movs
mov
adc
jo
sahf
jmp
adc
or
mov
cmp
pusha
adc
dec
fbstp
push
cmc
fimul
jg
push
push
inc
push
pop
jbe
loop
cmp
sub
push
cmp
je
je
sub
sbb
mov
pop
mov
mov
cmp
vunpckhps
sub
jno
jmp
push
gs
adc
(bad)
jg
cs
inc
jbe
inc
ins
cs
sub
cs
imul
fiadd
push
in
mov
adc
loopne
pop
shl
push
push
jmp
jecxz
in
push
in
daa
push
adc
mov
adc
mov
lea
ins
loope
push
ja
mul
out
sbb
outs
inc
sub
jb
jl
rol
nop
movs
or
mov
pop
mov
cli
shl
inc
movs
out
cmp
cwde
shl
(bad)
dec
in
jb
xor
popf
cmp
in
xchg
mov
test
ret
sbb
mov
or
sar
jne
fs
push
xchg
xor
add
retf
rcr
inc
push
xor
mov
mov
into
xor
jmp
push
sub
dec
in
inc
inc
mov
shr
out
aad
mov
imul
ret
cmc
imul
stc
sub
cmps
xchg
fstp
mov
mov
push
mov
mov
std
movs
and
jb
cmp
cmp
xchg
push
pop
fsub
or
pop
hlt
ds
push
popf
dec
cmp
cmp
mov
add
cwde
inc
dec
mov
inc
in
rcr
pop
bound
inc
repnz
xchg
in
cmp
xchg
xchg
cmp
cmp
add
push
icebp
cmp
das
jg
xor
fidivr
stos
cmp
mov
cmp
pop
and
retf
data16
je
stc
mul
add
add
call
stos
(bad)
loope
neg
dec
aaa
mov
aad
adc
test
(bad)
pop
dec
sub
mov
iret
or
int
ret
stos
cmps
js
js
es
dec
loope
mov
or
addr16
es
popa
adc
jecxz
jecxz
xor
sbb
aaa
sbb
call
iret
jl
push
ret
in
pop
stos
xchg
loopne
sub
loop
mov
scas
xor
jns
push
adc
pop
dec
push
add
nop
and
xchg
and
adc
cmp
dec
scas
call
fist
hlt
mov
sub
outs
test
mov
retf
push
jno
ins
in
int
mov
sub
imul
out
sbb
js
add
sbb
inc
cmp
pop
push
jns
std
aam
xlat
out
add
and
pop
ror
fcom
imul
mov
push
push
ret
or
sub
cpuid
fstp
lahf
jmp
icebp
jl
mov
outs
out
pop
popf
test
movs
lea
mov
ja
aad
stos
gs
repz
and
in
stos
test
jae
jnp
out
sbb
in
xlat
sbb
aam
sub
and
mov
or
out
mov
or
or
jnp
adc
int3
(bad)
jge
xchg
sub
ds
mov
retf
adc
retf
jae
jo
lods
cli
faddp
sbb
lock
arpl
mov
inc
retf
pop
sbb
ja
sbb
imul
ds
pop
xor
mov
sbb
(bad)
mov
into
shl
div
add
pop
aaa
pop
sub
(bad)
xchg
imul
dec
fwait
mov
jo
iret
rcr
(bad)
aas
pop
jbe
sbb
(bad)
fsubr
pop
dec
mov
push
jns
int3
mov
cld
ins
scas
repz
mov
jmp
stc
aas
inc
retf
aad
or
gs
mov
je
das
ss
xlat
sar
es
shl
out
mov
enter
mov
push
jecxz
jmp
push
xor
dec
cmp
fsubr
push
ss
fidiv
or
mov
sar
and
mov
setae
(bad)
test
(bad)
aam
icebp
mov
int3
jmp
pop
mov
mov
mov
sub
add
dec
(bad)
dec
dec
mov
popf
scas
sub
icebp
retf
push
add
jp
int
jle
cmp
inc
rcl
dec
imul
shl
and
je
xor
xchg
sub
adc
ret
sbb
sbb
cmp
retf
test
or
lods
mov
arpl
and
popf
push
pop
pop
mov
mov
iret
js
pushf
inc
jl
xchg
xor
es
jb
or
in
add
scas
sbb
scas
xor
xchg
lea
js
enter
cmps
mov
adc
repnz
jnp
xor
sub
inc
sub
jb
ins
cs
pop
(bad)
out
adc
cmps
popf
inc
cmps
je
mul
daa
sbb
mov
in
iret
push
jg
dec
or
in
imul
adc
and
adc
je
and
mov
imul
movs
xor
mov
test
mov
sub
inc
jnp
repnz
bound
add
or
mov
adc
push
xchg
sub
and
jmp
jp
or
mul
retf
push
repz
xchg
add
add
mov
sbb
sbb
mov
push
or
push
sub
sbb
push
(bad)
(bad)
or
into
shr
xor
loope
sub
push
in
addr16
imul
popf
movs
not
jl
xor
mov
inc
aam
and
mov
cmp
jmp
or
sbb
sbb
mov
(bad)
xchg
mov
jae
neg
or
movs
daa
cmp
retf
or
jne
ja
or
icebp
lods
mov
jmp
pusha
mov
add
hlt
jo
sbb
fmul
mov
xchg
ss
pop
ror
pop
scas
push
and
sbb
mov
push
push
xor
retf
mov
js
mov
not
fwait
rcl
mov
push
stos
outs
pop
push
inc
push
xor
imul
ins
adc
fisttp
pop
and
mov
(bad)
or
push
outs
sbb
pusha
addr16
mov
xchg
push
fdivrp
fisttp
xchg
cmps
xor
int
lea
fcmove
pop
(bad)
jmp
mov
loopne
test
jmp
add
push
mov
jecxz
pop
or
dec
outs
inc
sbb
cmp
and
enter
movs
jnp
mov
sub
shr
ficomp
inc
sbb
xchg
mov
cdq
or
rcr
mov
sub
jl
cmp
ss
imul
sbb
pop
push
movs
pop
pusha
cmp
addr16
ds
loopne
pop
xlat
in
jb
gs
xchg
xchg
ins
into
call
mov
inc
push
pop
or
jno
shr
push
sahf
fadd
pop
dec
sub
add
jmp
jg
std
dec
xchg
cmc
scas
pminub
inc
jo
xor
sbb
popa
xchg
enter
inc
xor
dec
inc
push
xchg
pop
int
pop
test
lds
mov
mov
popa
jne
sbb
mov
mov
fsub
shr
ror
sub
push
fsub
mov
jl
retf
adc
sbb
inc
repz
pop
in
fist
dec
pop
out
mov
xchg
les
out
adc
test
xchg
in
adc
sahf
and
mov
sbb
in
imul
std
ror
and
hlt
add
sub
sub
mov
ret
inc
lods
and
sahf
xor
je
dec
ret
std
(bad)
mov
test
xor
repz
xchg
cmps
mov
lahf
jb
mov
movs
and
and
sbb
xrelease
mov
test
jnp
push
sbb
dec
rcr
adc
xlat
iret
pop
call
add
jmp
mov
movs
push
std
loope
iret
adc
cmps
cs
cmps
mov
or
(bad)
mov
inc
loope
inc
ror
(bad)
pusha
mov
inc
movs
jo
fs
sub
mov
stos
sub
hlt
adc
mov
sub
sbb
xlat
imul
pop
loop
sbb
add
and
mov
pop
pop
out
not
mov
mov
push
jo
pop
call
push
mov
cmp
cdq
adc
cld
imul
push
cld
jmp
pushf
fwait
mov
dec
enterw
jmp
lahf
js
pusha
mov
sbb
mov
sub
push
dec
arpl
xlat
or
jns
stos
bound
mov
je
sub
std
(bad)
movs
xor
xchg
fsubr
mov
enter
loope
jl
add
adc
sbb
outs
aaa
(bad)
mov
aaa
iret
out
ins
das
mov
or
(bad)
(bad)
js
inc
dec
inc
push
xor
fcom
jg
movs
ret
dec
sbb
iret
mov
ja
std
add
xor
xchg
cmp
mov
rol
jge
push
test
pushf
adc
jl
mov
jp
in
cs
cmp
or
int
inc
mov
and
pop
jmp
iret
movs
mov
ss
test
pop
ror
cmp
pop
push
mov
push
mov
ss
out
jno
cld
fisttp
ret
out
inc
sub
ds
dec
cli
fs
push
in
inc
adc
mov
push
or
shr
retf
jae
daa
add
inc
cmp
aas
pop
out
clc
cmc
xchg
int
jae
jle
jl
sub
push
aas
ret
call
fadd
iret
inc
add
scas
mov
mov
hlt
xchg
mov
(bad)
(bad)
jge
add
pop
add
jne
xchg
dec
daa
cli
pop
or
mov
mov
cmc
stc
sbb
cmps
or
xor
in
cdq
fnstcw
lods
add
sub
dec
mov
push
xor
retf
jl
int
add
push
arpl
sbb
sub
repnz
sbb
lods
inc
scas
mov
dec
dec
bound
movs
data16
fwait
cmp
jno
movs
jns
movs
sub
dec
mov
hlt
out
jl
and
clc
adc
adc
pop
loope
dec
mov
cmps
sti
cmp
lods
push
mov
push
clc
cmp
inc
jb
test
inc
mov
jno
mov
push
addr16
ror
nop
inc
xchg
(bad)
dec
xchg
sub
test
sbb
mov
fstp
mov
xchg
jmp
les
in
iret
mov
lds
sbb
scas
imul
xor
cmps
fs
mov
hlt
(bad)
pop
test
and
jnp
jmp
(bad)
fild
rcl
pusha
jl
dec
push
ja
xor
push
call
aad
sbb
popf
ffree
call
and
push
pop
jno
xchg
outs
adc
rcl
jge
add
sti
clc
jge
jno
pushf
retf
les
(bad)
and
test
and
pop
adc
xor
iret
inc
movs
movs
xchg
out
arpl
or
lahf
jecxz
mov
push
std
add
stos
shl
sub
push
(bad)
mov
pop
jmp
mov
paddsw
addr16
out
sbb
cwde
outs
jmp
push
push
iret
jmp
add
clc
cld
sahf
dec
cmp
pop
push
push
pop
xlat
lods
dec
sbb
out
scas
sub
push
jmp
dec
stos
mov
mov
dec
les
dec
push
scas
mov
sub
aam
jbe
sahf
sbb
add
mov
shl
push
stc
(bad)
sub
(bad)
stos
xchg
xchg
loop
test
mov
xchg
cld
cmp
inc
xor
fnstenv
aad
cmp
inc
gs
push
outs
jecxz
shl
pushf
pop
ret
cmps
push
jmp
je
sbb
and
adc
push
loopne
mov
js
(bad)
(bad)
cmp
shr
push
cmps
mov
(bad)
jp
mov
adc
retf
retf
adc
mov
dec
in
xchg
cdq
push
push
enter
dec
arpl
pop
test
out
repnz
lods
ja
mov
es
data16
and
ret
neg
xor
pop
mov
mov
arpl
push
icebp
ret
mov
jg
scas
xchg
xchg
adc
sub
lea
jmp
iret
dec
aas
lahf
cmp
cmp
inc
outs
iret
aas
cmps
mov
leave
les
jbe
retf
jns
jno
cmp
mov
into
scas
jne
mov
sub
popf
aam
cmps
ret
pop
jmp
mov
xchg
scas
ret
mov
and
loop
jle
jmp
ins
xor
movs
test
lock
imul
fwait
nop
outs
out
and
fisttp
mov
adc
div
dec
cmp
xlat
mov
popf
not
int
jns
(bad)
fstp
mov
or
mov
aam
cli
xchg
adc
xchg
inc
sub
add
or
sub
sbb
mov
test
xor
dec
jmp
jg
stos
push
aam
jl
popf
fmul
test
add
mov
jns
dec
xor
loopne
fcom
test
or
sub
mov
mov
fdivr
dec
pop
jecxz
xor
lea
xchg
xchg
loop
test
and
xor
in
es
out
jbe
adc
jle
stos
xchg
xchg
arpl
cld
dec
cmc
cwde
pop
sar
fwait
pusha
xor
cmp
test
or
fsubr
les
std
push
inc
dec
cmp
sar
dec
dec
dec
scas
sbb
inc
xchg
jmp
xchg
mov
icebp
and
fcom
mov
inc
pop
(bad)
push
sti
clc
in
push
jae
xlat
loopne
xchg
sub
adc
adc
xchg
sti
scas
movs
mulps
sub
fwait
pop
mov
xchg
sub
shl
in
ins
mov
xor
jg
xor
clc
aas
sbb
dec
je
cmp
int
jl
dec
pop
add
(bad)
and
adc
movs
test
cmp
cmovb
rcr
or
dec
push
cld
popf
stos
sti
inc
mov
in
sti
ss
aaa
or
pop
imul
mov
aam
aas
mov
lds
adc
ss
dec
daa
imul
xor
push
cli
retf
movq
jp
xor
rcr
cmp
mov
fsub
fwait
hlt
mov
mov
pop
cmps
jb
jne
xchg
mov
scas
push
cmps
jo
jmp
pop
mov
jmp
fs
sub
movs
jl
sub
fs
dec
push
or
cmp
mov
das
xchg
sbb
ret
cmp
icebp
push
fdivr
(bad)
dec
jb
xchg
pusha
repnz
sbb
sub
imul
out
cs
je
dec
xchg
adc
sub
jno
cli
fimul
and
xor
out
push
ret
das
mov
jne
outs
loope
pop
out
xchg
ins
xor
pop
cli
sub
dec
push
xchg
fidivr
dec
mov
inc
push
xor
not
stos
xchg
cwde
sbb
push
in
les
push
jns
in
and
xchg
sbb
push
(bad)
in
neg
popf
inc
inc
rcr
call
loope
pop
loopne
mov
lds
mov
sub
ret
dec
mov
push
test
or
adc
test
mov
mov
fwait
dec
leave
inc
jecxz
ud0
mov
add
add
jo
cmp
inc
sbb
pop
retf
(bad)
xchg
ficom
push
dec
mov
sbb
xlat
pop
movs
sbb
pushf
mov
sub
jecxz
fcomp
shl
(bad)
cli
sub
ret
in
xor
dec
sub
in
sub
add
shr
popf
(bad)
mov
out
xchg
(bad)
out
fs
scas
jge
xor
retf
cmp
push
mov
or
in
push
rcr
push
inc
imul
mov
xchg
das
adc
sub
loopne
fld
jnp
xchg
push
aaa
lock
imul
mov
fmul
add
pop
cmps
push
iret
pop
cmps
daa
add
add
add
pop
xlat
mov
out
xchg
xchg
pop
adc
or
out
mov
sbb
aam
dec
pop
retf
xchg
jle
or
ins
hlt
sbb
and
les
mov
popf
imul
adc
fistp
add
mov
jmp
bound
out
lahf
loop
add
je
mov
add
aas
sub
les
or
addr16
dec
xor
inc
and
xor
jb
xchg
icebp
popf
jmp
inc
jmp
and
int
or
push
mov
or
imul
repz
xlat
push
jg
xor
xchg
cld
aas
xchg
cmp
mov
out
mov
aam
ins
movs
dec
int3
sub
jmp
sub
dec
dec
adc
lods
rol
push
dec
ins
xchg
lock
scas
cmp
xor
cmp
push
stc
push
and
loop
mov
aad
js
call
iret
inc
jmp
sbb
sbb
cmp
xor
mov
jmp
push
add
int
popf
and
mov
ror
xor
fdivrp
pop
push
sar
out
retf
std
stc
outs
cli
jle
fs
gs
jnp
dec
mov
hlt
push
in
std
pop
sub
inc
int
add
jmp
push
inc
loop
jecxz
or
pop
or
out
ss
mov
pop
mov
dec
cmp
mov
in
stos
dec
hlt
pop
sbb
push
dec
jle
loope
out
mov
push
aad
push
jecxz
cmp
aad
cwde
mov
sub
cmp
push
hlt
jns
je
fstp
cli
fs
push
pop
leave
cs
dec
xor
fwait
pusha
dec
jmp
loope
push
aas
cmc
icebp
dec
es
push
cwde
or
pop
enter
add
xor
data16
mov
call
jge
shl
rcl
mov
ss
sbb
aaa
inc
aaa
or
je
add
sbb
div
arpl
cwde
mov
push
iret
mov
push
inc
jmp
dec
mov
aas
dec
adc
fmul
push
test
and
fst
cli
aaa
mov
mov
add
sti
pop
fs
outs
dec
jecxz
(bad)
or
and
adc
xchg
nop
aas
out
add
mov
xor
cdq
xor
or
add
ror
shl
call
add
scas
movs
add
add
inc
or
and
adc
mov
mov
adc
xor
in
jbe
xor
dec
test
and
jb
iret
std
in
jle
mov
xchg
shl
sub
ror
into
xor
cmc
sti
sti
mov
out
sbb
pop
aaa
cmp
jnp
stc
mov
sar
pop
jmp
and
xchg
cmp
pop
dec
add
sahf
iret
push
xor
dec
(bad)
xlat
call
ja
nop
dec
movs
pop
bound
xchg
ret
lods
mov
xchg
rcr
jmp
ins
mov
test
jo
sub
inc
sahf
push
inc
pop
call
xchg
mov
mov
sbb
or
pop
dec
out
pop
loop
test
push
and
into
mov
jns
mov
out
mov
add
add
sub
pop
jmp
into
retf
push
dec
outs
sbb
mov
loope
mov
ret
jmp
jp
(bad)
call
rcl
jge
ror
adc
pop
icebp
push
dec
mov
mov
adc
xor
jmp
fidiv
sahf
sub
cmp
push
mov
jns
shr
fcom
aas
mov
or
and
fiadd
xchg
stos
test
retf
sbb
mov
push
rcl
inc
int
(bad)
jb
outs
inc
mov
data16
fwait
sub
hlt
fld
adc
or
xor
mov
icebp
pop
cdq
dec
ds
aam
fidivr
push
out
(bad)
sbb
and
xchg
jns
ror
addr16
imul
stos
in
test
iret
out
add
ss
bound
ss
jo
mov
(bad)
sbb
(bad)
mov
mov
mov
mov
lea
cmp
mov
pop
inc
movs
ja
(bad)
jle
mov
cld
imul
jl
test
adc
mov
or
and
ss
jb
pushf
xor
push
pop
lods
js
outs
data16
sbb
add
sti
sbb
fist
jp
or
aad
das
gs
out
arpl
xor
pop
dec
out
lahf
xlat
sub
ret
test
and
call
adc
out
lods
sub
int
int
jp
int
dec
mov
xor
xor
ror
adc
adc
inc
(bad)
mov
adc
jp
push
idiv
sub
sbb
xor
sub
retf
add
ja
out
sbb
jg
cmp
addr16
es
aas
mov
loopne
and
adc
inc
pop
aad
fdiv
inc
jge
leave
shl
mov
or
das
rcr
(bad)
sub
arpl
mov
sbb
hlt
test
repz
and
mul
fadd
loope
dec
push
push
pop
or
movs
cmps
iret
jge
iret
retf
pop
or
jl
mov
dec
stos
jl
mov
mov
rcl
cmp
fidiv
dec
mov
inc
lea
inc
repz
sahf
out
push
test
cli
and
xchg
ins
sub
test
sub
mov
or
cs
repnz
xor
in
stos
mov
clc
adc
xchg
add
in
cmp
inc
sbb
fist
(bad)
scas
pop
dec
test
mov
jns
movs
add
jo
push
fwait
movs
and
adc
xor
cs
fs
test
lds
pop
pushf
ja
fild
loope
inc
outs
sub
rcr
je
out
sub
sub
or
loopne
sub
and
inc
fidivr
dec
mov
sar
sbb
dec
jp
adc
nop
mov
shl
bound
loop
inc
adc
idiv
or
enter
fdivr
push
sub
sbb
loopne
hlt
outs
xchg
pop
xchg
inc
mov
pop
sub
dec
and
xchg
cwde
shl
dec
mov
int
out
outs
pop
push
push
sub
mov
stc
dec
mov
or
cs
adc
lock
mov
ds
and
inc
js
mov
mov
xchg
in
jne
mov
sub
mov
push
sub
xchg
push
(bad)
mov
imul
mov
sbb
jge
add
sti
cmp
rcl
std
popa
adc
out
jae
mov
sar
test
popf
out
pusha
jl
loope
inc
fwait
int
mov
mov
daa
sbb
lahf
push
push
push
push
movs
jnp
mov
add
rcr
add
les
shr
pop
cmp
out
or
inc
mov
jmp
retf
imul
jb
addr16
adc
mov
adc
je
std
pop
lock
in
push
mov
cs
into
fs
bnd
dec
or
adc
pop
xor
adc
lods
or
cmc
push
je
pushf
mov
fild
shl
mov
mov
sub
out
out
(bad)
mov
fcomp
cmc
and
call
fild
stos
inc
lods
aam
leave
push
arpl
idiv
scas
pop
adc
and
mov
or
loope
adc
or
and
jae
pop
sub
mov
sbb
inc
movs
ds
inc
pop
push
addr16
mov
pop
popf
cmp
(bad)
stos
aaa
imul
mov
leave
xchg
sbb
push
dec
sbb
xchg
aam
and
outs
jp
je
addr16
int
lods
ja
and
or
push
js
adc
xor
nop
and
movs
mov
cmp
shr
mov
jno
mov
push
sub
jg
int
push
push
int3
push
arpl
into
pop
xor
or
adc
clc
fnop
inc
pop
pop
or
arpl
mov
fbstp
add
fnsave
test
dec
(bad)
mov
cmp
in
imul
out
cmp
jmp
call
scas
and
imul
mov
cmps
mul
and
pop
xchg
(bad)
(bad)
sub
outs
sbb
stc
ja
out
dec
adc
cmps
iret
or
push
cdq
test
dec
adc
mov
mov
shl
ins
in
scas
xor
out
add
inc
adc
and
cli
movs
mov
imul
cwde
cmp
mov
mov
adc
icebp
cmovbe
mov
dec
stos
xchg
add
cmp
and
leave
out
sbb
lods
outs
retf
pop
out
test
in
push
leave
(bad)
jns
adc
xlat
and
cmp
xchg
inc
pop
jl
mov
fcmove
outs
or
dec
ins
add
repz
sar
imul
jno
xchg
cmp
sub
sbb
add
neg
push
push
mov
sub
cdq
mov
sub
js
popf
add
xchg
cmp
scas
enter
daa
pop
out
jmp
push
mov
push
pop
out
mov
pop
mov
cli
and
daa
mov
aas
cmp
arpl
in
es
in
push
sbb
sbb
hlt
dec
sub
inc
stc
int3
out
cmp
xchg
mov
lds
adc
inc
rol
pop
and
mov
in
xchg
mov
mov
pop
sahf
and
into
or
sub
fimul
ret
or
xchg
adc
dec
pop
ins
ins
popf
loope
rcl
ret
mov
adc
call
jg
js
cli
loopne
fldcw
jno
xchg
push
aam
inc
call
sbb
and
movs
push
ret
xor
sub
add
cmp
ret
ret
in
movs
repz
sbb
addr16
jg
add
iret
fbstp
dec
push
das
test
mov
xchg
outs
mov
pop
dec
call
in
sahf
dec
dec
jl
sub
jle
mov
mov
enter
push
ja
out
jnp
pop
or
(bad)
cld
jl
push
mov
sbb
icebp
div
out
fisubr
xor
jnp
loopne
das
push
xchg
(bad)
or
loopne
mov
cs
dec
out
inc
out
pop
scas
add
pusha
push
or
stc
mov
cs
adc
sub
inc
mov
xchg
xor
sbb
push
std
fidiv
mov
imul
out
sub
pop
push
mov
je
lock
sbb
mov
jno
and
mov
scas
ds
gs
lods
aas
test
mov
and
sbb
aam
pop
push
loope
and
xor
sti
out
lods
scas
dec
xlat
hlt
out
xor
jmp
pop
sub
(bad)
lock
xchg
mov
popf
and
je
hlt
cmp
inc
xchg
(bad)
xor
dec
std
daa
popa
shl
adc
adc
data16
cmp
jb
inc
push
mov
aam
popf
pop
inc
(bad)
mov
cld
fdivr
cld
fst
test
sbb
cmc
mov
sub
aad
aam
or
(bad)
jecxz
rol
jmp
int3
cmp
mov
jae
push
ds
xchg
jmp
mov
daa
jecxz
push
jnp
test
mov
(bad)
sbb
mov
aas
sub
test
cs
mov
sbb
in
jno
dec
xchg
enter
les
out
or
jbe
push
mov
sub
dec
(bad)
es
xchg
sahf
or
mov
(bad)
jge
movs
xor
push
mov
test
movs
adc
jnp
and
push
out
cmps
add
xor
ja
out
fcompp
gs
addr16
outs
mov
mov
jmp
sub
push
jp
in
xchg
test
push
dec
mov
sbb
jge
addr16
and
test
fmul
and
mov
lock
fs
xor
int3
mov
into
push
ins
iret
adc
iret
xchg
inc
adc
cmp
out
outs
int3
in
ds
push
fistp
fnstsw
mov
sbb
cld
(bad)
aad
adc
jecxz
or
loop
xlat
ins
jp
sub
aas
(bad)
jl
sub
sbb
cmp
mov
mov
fistp
inc
mov
cmp
dec
pop
daa
xor
out
cdq
dec
cmc
cmp
loop
clc
xor
dec
xchg
cli
sbb
jmp
stos
sahf
dec
fidivr
stos
es
add
xor
push
mov
adc
int
mov
and
xchg
ins
out
push
dec
pushf
or
fiadd
or
mov
shl
adc
push
(bad)
jecxz
dec
xor
jmp
or
mov
dec
daa
xchg
mov
sbb
in
out
popa
(bad)
mov
cmc
repnz
out
xchg
out
fld
inc
fs
sbb
inc
dec
shl
test
pop
hlt
pop
and
in
mov
rcl
cdq
cmp
push
pop
adc
sub
push
inc
add
jmp
je
(bad)
adc
pop
call
xor
jl
lock
jmp
xchg
dec
inc
call
fnstcw
retf
cld
sbb
xchg
bnd
in
bnd
mov
cmp
ja
cmp
mov
movs
dec
sahf
mov
mov
pop
cli
xor
jbe
inc
push
add
ins
sbb
mov
ror
dec
adc
lds
cs
gs
int
inc
pop
pusha
jae
mov
arpl
nop
pop
pop
mov
rcl
inc
pop
and
and
nop
push
mov
cmp
sub
dec
push
dec
mov
lods
adc
fstp
push
sub
int3
pop
ret
jmp
dec
js
and
test
popa
(bad)
jmp
xchg
fs
daa
hlt
jg
daa
jge
inc
push
std
push
popf
dec
stos
shl
adc
and
popf
popa
les
popa
dec
mov
cdq
dec
mov
jp
fcmovnb
mov
inc
pop
(bad)
cmp
mov
gs
enter
scas
dec
adc
push
inc
int3
outs
ror
fcom
jp
xchg
pop
cmps
jnp
fild
mov
sub
mov
jecxz
mov
into
adc
lds
and
sub
push
or
ret
fdiv
push
jg
daa
ja
hlt
aaa
sbb
jmp
iret
iret
xor
sbb
loop
es
dec
(bad)
mov
jb
icebp
push
lods
in
into
mov
or
mov
jge
daa
(bad)
sub
test
inc
xor
sub
cmc
push
cmp
scas
jge
cmps
leave
(bad)
popa
jp
xor
mov
(bad)
ins
pop
repnz
rep
lods
call
loopne
mov
test
pop
mov
popf
(bad)
mov
cmp
xchg
jecxz
cmp
shr
xchg
nop
xor
mov
inc
stos
sub
mov
fs
mov
js
jne
mov
leave
sub
jae
push
fs
cmp
retf
jmp
adc
shr
add
jb
cdq
shr
js
sub
es
mov
cwde
or
(bad)
call
sbb
loopne
and
mov
jmp
cmp
pop
fsubr
sbb
jp
call
ficom
cmp
ret
xor
jmp
sbb
(bad)
scas
mov
std
sub
mov
bswap
cmp
cmp
or
ret
out
fsubr
daa
nop
mov
add
push
jnp
mov
lahf
add
mov
into
inc
shl
xchg
mov
pop
and
or
push
sti
(bad)
in
dec
pop
cmp
rcr
fild
sub
bnd
into
push
lahf
push
movs
mov
jbe
sbb
cli
ja
push
popf
xor
adc
push
and
mov
les
js
je
shr
fsubr
add
imul
jbe
imul
out
push
dec
movs
jle
inc
mov
mov
pushf
jg
inc
sar
fwait
inc
loop
add
call
inc
pop
repnz
dec
cmp
ror
(bad)
xchg
int
out
dec
popa
fdivr
sar
xor
jle
dec
sbb
test
add
push
inc
jl
dec
jae
enter
test
pop
add
inc
pop
(bad)
cmc
sub
call
sti
cmp
(bad)
pop
cld
dec
or
dec
lods
scas
inc
popf
push
aas
lods
lea
stc
scas
inc
mov
and
add
ror
(bad)
xchg
enter
shl
hlt
(bad)
mov
mov
mov
enter
mov
sbb
xchg
mov
jmp
sbb
mov
mov
or
mov
out
shl
jmp
mov
sub
xor
fidivr
leave
xlat
push
ror
jmp
into
pop
outs
in
mov
mov
ins
jp
test
inc
pop
aaa
jg
fild
inc
push
mov
aad
push
xchg
or
out
mov
push
cmp
ja
retf
adc
mov
xchg
mov
push
sbb
fist
cmp
scas
pop
test
pop
dec
mov
cmps
push
xlat
inc
pop
mov
dec
rol
lods
icebp
mov
leave
(bad)
mov
jns
push
add
jae
hlt
clc
dec
call
fs
fwait
mov
jl
add
jb
pop
leave
inc
icebp
mov
xchg
mov
xor
push
xlat
push
nop
or
fsubr
(bad)
fmul
cmps
arpl
add
(bad)
push
mov
(bad)
ja
jl
inc
mov
inc
add
jmp
in
sbb
shl
pop
mov
retf
popa
inc
inc
inc
mov
cmp
je
(bad)
retf
js
push
cdq
(bad)
(bad)
out
hlt
fsubr
sbb
cmp
add
dec
cdq
sub
push
mov
xor
lods
cli
ja
push
adc
mov
shl
(bad)
fwait
ss
cmp
arpl
or
push
ret
outs
fild
mov
mov
movs
sbb
inc
cmps
and
push
arpl
popa
iret
rol
dec
ret
xchg
or
ror
dec
fstp
xor
mov
dec
les
mov
mov
gs
inc
fild
mov
jecxz
xor
jbe
pop
inc
call
inc
cdq
cmps
pop
js
call
xchg
es
sbb
xchg
push
test
xor
add
jmp
and
push
(bad)
fnstcw
xchg
dec
mov
adc
std
hlt
cmp
aad
mov
movs
push
nop
mov
cli
out
aad
retf
int
rcr
cmp
enter
js
fsubp
sub
or
xor
mov
aas
ss
into
inc
cmp
sub
icebp
iret
cmp
jg
mov
mov
lea
fnstsw
fisubr
xor
bound
dec
je
dec
aas
scas
loope
out
vmaxsd
fwait
mov
sub
xor
clc
frstor
data16
sub
scas
xor
and
or
pop
lds
aad
xchg
dec
stos
adc
xchg
jnp
cmp
mov
xlat
xor
sub
stc
mov
inc
sti
lea
adc
out
xlat
loope
mov
push
pusha
xor
outs
sbb
aam
scas
xchg
ret
jo
inc
or
icebp
int
movs
push
xchg
xor
dec
icebp
and
jne
push
fadd
stos
int3
push
not
push
leave
pop
enter
imul
das
xchg
loope
fmul
push
adc
add
arpl
mov
in
add
xchg
or
xchg
mov
jmp
dec
cmp
dec
clc
cwde
cmp
hlt
mov
jmp
inc
pop
outs
inc
adc
les
repnz
movs
push
push
data16
mov
jo
lods
loop
cmp
dec
loop
dec
push
out
lock
or
sub
mov
add
or
ins
add
jae
mov
out
ret
jno
xchg
(bad)
stos
in
xchg
dec
or
(bad)
inc
sbb
ret
cmp
jnp
inc
stos
out
cmp
jmp
inc
in
mov
pop
xchg
test
in
stos
or
mov
call
fimul
enter
add
mov
jle
jb
cli
out
arpl
or
fmul
xor
jno
mov
jp
dec
push
out
imul
jae
push
push
aad
sbb
xor
xor
arpl
(bad)
push
ret
rcl
mov
mov
pop
dec
sbb
and
ins
push
pushf
inc
stos
aad
xor
jo
and
bound
sub
ret
jle
add
dec
inc
jg
mov
and
and
xor
pop
push
mov
lods
sub
cs
loope
push
mov
pop
dec
dec
(bad)
mov
out
xchg
and
inc
jmp
inc
push
jmp
imul
inc
push
or
mov
aaa
stc
ficomp
leave
stos
test
push
mov
iret
mov
retf
inc
xchg
ror
in
jb
fidivr
std
jecxz
arpl
mov
mov
outs
and
and
hlt
es
ror
xchg
mov
fld
inc
cld
pop
pop
scas
xor
mov
sub
out
movs
fnstsw
pop
inc
ret
cmp
loop
enter
stos
sbb
cmc
mov
push
out
jne
(bad)
imul
sti
(bad)
into
cli
cdq
enter
jl
inc
(bad)
cmp
mov
mov
adc
mov
pop
push
cmps
inc
ja
addr16
xlat
mov
fcomp
js
fmul
mov
fldenv
lods
scas
in
sbb
int
nop
fist
cmp
addr16
and
out
stos
inc
test
xlat
dec
fist
mov
(bad)
cld
pushf
int
hlt
push
pop
fsqrt
test
push
inc
test
jnp
pop
dec
and
popa
adc
fwait
sub
out
and
in
dec
js
or
pop
cmp
idiv
mov
add
pop
xchg
add
pop
and
mov
mov
xchg
arpl
in
pop
push
add
shr
adc
jge
aas
adc
adc
sub
ret
pop
gs
psrad
and
adc
sub
std
xchg
push
add
out
dec
xor
mov
cmc
mov
jmp
inc
test
sub
xor
rcr
push
xchg
sbb
out
int
cmp
lea
pop
cs
mov
mov
(bad)
cmp
jmp
cli
dec
pop
mov
enter
cmps
je
add
inc
or
sbb
data16
icebp
inc
pop
adc
cmc
inc
dec
dec
pop
retf
gs
push
push
push
cbw
mov
inc
jmp
repnz
push
inc
jmp
popf
adc
call
dec
addr16
add
outs
addr16
ja
xor
sbb
test
test
ss
aam
sub
and
or
popa
jg
test
xchg
dec
mov
test
icebp
int3
push
mov
xchg
fdiv
stc
pop
xor
cmp
test
dec
adc
les
mov
dec
(bad)
int
dec
ror
aad
loop
out
xchg
and
or
data16
pop
test
sbb
push
xlat
jbe
inc
mov
fld
jb
icebp
mov
(bad)
xchg
pop
or
xor
outs
dec
int3
mov
popa
push
inc
stos
mov
imul
push
jle
out
cmps
cmp
sar
xchg
mov
push
add
mov
out
sbb
push
shl
nop
push
mov
dec
sub
rcr
(bad)
nop
push
mov
pushfw
pop
adc
adc
ins
xor
xor
add
repz
scas
rcl
mov
add
(bad)
pop
test
sbb
fbld
aaa
aam
xchg
aas
fwait
mov
in
into
aas
fiadd
adc
out
push
push
inc
xchg
adc
fisttp
xor
pop
int3
cmp
lods
push
int3
cmps
arpl
js
sti
cmps
adc
push
cld
and
(bad)
outs
out
mov
mov
and
adc
mov
pushf
in
jns
mov
mov
test
or
or
sbb
(bad)
cmps
or
repnz
inc
idiv
retf
jo
shr
out
pop
or
and
jns
loope
mov
dec
and
adc
and
sbb
sahf
cmc
and
and
mov
mul
out
jmp
outs
sbb
push
inc
add
sbb
push
frstor
sub
stos
xor
sahf
mov
pop
mov
(bad)
retf
cmp
bound
arpl
data16
test
shr
or
hlt
fmul
mov
in
or
push
pop
mov
call
(bad)
hlt
inc
mov
popa
add
add
add
lahf
mov
jnp
sub
rcr
sbb
sbb
xor
adc
sbb
push
out
lods
loop
repnz
data16
push
or
hlt
push
mov
cmps
sub
test
rcr
popf
add
shl
daa
sub
mov
xor
sub
push
and
in
and
loop
fcomp
iret
xor
xor
enter
or
or
mov
inc
aas
fstp
(bad)
(bad)
out
push
mov
cdq
cmp
cs
pushf
and
aad
(bad)
js
jne
into
aaa
cld
repz
(bad)
jns
dec
or
mov
push
(bad)
movs
(bad)
cmc
mov
mov
inc
mov
and
inc
in
cs
xchg
fadd
neg
daa
stc
repz
pop
retf
fs
(bad)
xchg
out
pop
mov
(bad)
dec
cld
pop
sbb
clc
cmp
inc
pop
sbb
int
scas
fist
aaa
mov
je
ds
or
cli
lock
loope
in
inc
xchg
cmp
mov
push
cld
xchg
mov
pop
sbb
int
push
or
scas
push
jbe
and
jns
dec
sahf
inc
stos
dec
xlat
mov
xor
sbb
leave
sub
pusha
(bad)
in
xchg
inc
inc
dec
sub
stos
out
imul
xor
aaa
sub
dec
(bad)
movs
xor
pop
push
adc
mov
xchg
cmp
pushf
and
mov
fcomi
adc
fst
repnz
push
mov
push
push
je
xor
test
aas
in
dec
in
ss
push
imul
mov
xor
mov
mov
push
mov
scas
rcl
pop
mov
adc
mov
lock
bound
add
adc
loopne
cmp
shl
(bad)
push
and
mov
dec
scas
sbb
inc
inc
cli
pop
mov
pop
cmps
or
cmc
lods
lods
xor
or
and
call
cmp
mov
mov
jmp
stos
mov
mov
(bad)
jp
shr
push
mov
mov
adc
(bad)
or
pop
inc
mov
sbb
adc
cmc
pop
mov
out
push
xchg
out
test
aam
addr16
or
jno
xor
or
mov
dec
sbb
and
mov
pop
xchg
jge
shl
fistp
sbb
aam
mov
(bad)
pop
(bad)
in
scas
mov
fs
enter
cmc
push
(bad)
push
push
sub
ins
xchg
push
sub
dec
or
add
mov
mov
xchg
sub
pop
sub
cmp
jmp
cmps
sar
lahf
fiadd
pushf
popa
in
int
mov
jg
sbb
arpl
inc
pop
nop
pop
add
xchg
fs
adc
adc
adc
leave
push
and
jmp
adc
inc
out
dec
outs
push
es
inc
push
adc
and
pop
cmp
cmp
cmp
sub
in
sti
add
and
jecxz
inc
sub
int3
fsub
cmp
out
jns
outs
push
jo
mov
add
test
mov
xchg
lods
cld
int
es
sbb
add
add
out
mov
mov
or
inc
lea
jge
add
cmc
adc
jecxz
mov
or
data16
and
ja
pop
stc
jb
jnp
cmc
idiv
and
retf
mov
mov
cmp
test
call
bound
mov
cli
movs
movs
fcom
cmp
jge
mov
es
fild
icebp
and
stc
cld
inc
jns
and
jp
popa
jecxz
mov
shr
lea
out
or
cmps
icebp
inc
pop
and
jmp
cmp
mov
mov
sbb
and
push
jbe
loopne
leave
mov
int
mov
ds
into
jp
jne
adc
loopne
cmps
out
jno
sub
fnstcw
outs
cmc
dec
mov
jge
fbld
dec
and
cs
pop
add
pop
xchg
imul
cdq
inc
push
sub
cdq
and
out
fst
push
mov
jmp
scas
adc
xor
inc
mov
cmp
mov
test
mov
in
push
loope
rcr
jmp
dec
fdivr
dec
lock
push
les
(bad)
ins
push
aad
mov
inc
ins
and
pop
lock
mov
movs
lods
pushf
arpl
adc
mov
pop
fsub
jbe
ins
push
nop
icebp
sti
inc
stos
out
sahf
js
stc
popa
jle
hlt
mov
in
cdq
cmp
pop
neg
stc
push
lods
push
or
xor
sbb
into
cmp
push
pop
iret
imul
mov
hlt
jno
xchg
pop
gs
push
scas
add
popf
mov
jns
(bad)
cli
loope
pop
int
retf
push
pop
pop
add
ss
popa
mov
int3
add
xor
mov
call
outs
loopne
dec
bound
rcl
test
or
and
and
push
push
and
into
daa
out
pop
fld
pusha
adc
(bad)
ds
std
push
dec
in
fcom
cdq
add
push
or
dec
call
aaa
pop
mov
mov
mov
mov
pcmpeqw
test
shl
lahf
leave
jl
repz
pop
clc
sti
shr
dec
rcr
pop
shr
enter
addr16
ja
mov
jo
cmp
mov
dec
lds
je
mov
or
push
bound
fild
adc
or
inc
mul
or
adc
aam
and
ds
mov
sahf
add
push
out
jp
jne
dec
popa
push
mov
add
cmp
push
aam
adc
mov
add
inc
cs
fldenv
clc
push
and
xor
stos
hlt
jl
mov
mov
or
addr16
and
jmp
loope
jnp
stc
(bad)
xchg
in
mov
mov
or
mov
aam
das
adc
je
jb
shl
jecxz
aad
sub
into
cld
cwde
and
retf
sti
nop
sub
push
sbb
cld
fisubr
dec
mov
push
jno
mov
inc
cld
outs
push
mov
popa
in
push
arpl
inc
pop
fiadd
sub
xchg
aaa
repnz
fcom
or
mov
cmps
es
dec
and
shl
in
jp
or
fwait
xchg
push
xlat
(bad)
loopne
hlt
gs
jo
cmp
sahf
mov
pop
fdivr
repz
fisttp
sub
inc
(bad)
sbb
cmps
xchg
stos
inc
scas
jne
mov
in
mov
pop
cmps
sub
mov
outs
jg
and
mov
cmp
in
ja
dec
je
repnz
dec
test
cmp
retf
xchg
ss
jle
adc
daa
inc
movs
call
mov
xor
cld
jle
sub
fsubr
ds
push
stc
shl
or
inc
adc
jge
and
pop
lahf
aad
lock
fnstcw
lahf
jne
and
imul
xchg
mov
sub
pop
jnp
sub
ds
ds
sbb
pop
call
or
mov
pop
xor
xor
mov
shl
bound
(bad)
pop
jg
leave
cli
inc
pop
retf
(bad)
aam
mov
and
outs
or
call
mov
int
in
jecxz
mov
mov
repnz
mov
lods
bswap
jecxz
xlat
fidivr
cmp
cli
fidiv
rep
pop
ds
aam
sti
mov
js
shl
xchg
mov
cwde
xchg
rcl
sub
neg
test
sub
sub
or
push
cmp
dec
pushf
or
adc
fadd
and
jg
jne
repz
sub
xchg
mov
leave
adc
xor
pop
cmps
in
paddusw
mov
scas
aaa
mov
sbb
and
cmp
push
xchg
jmp
cmp
xchg
pop
int
int3
aaa
stos
adc
mov
adc
jge
clc
xchg
add
aam
pop
cdq
icebp
jmp
imul
daa
or
jmp
sbb
fstp
or
dec
adc
vcvttps2dq
push
outs
lea
test
lahf
inc
push
mov
ror
pop
push
std
jns
pop
aas
xchg
retf
outs
test
or
cmp
mul
xchg
adc
mov
cli
fcmovne
mov
xor
jmp
push
bound
and
cmc
cli
in
xchg
loop
(bad)
jmp
ret
leave
mov
ins
push
aaa
loopne
loope
inc
fdiv
cmp
mov
push
test
(bad)
call
sar
and
pusha
mov
pop
mov
dec
imul
arpl
add
adc
aas
xchg
dec
push
add
ror
repz
adc
stos
mov
mov
mov
pushf
pop
ret
test
jecxz
fcom
retf
clc
test
out
scas
cmp
jns
aam
mov
mov
ud0
ficom
inc
jg
inc
pop
xchg
mov
inc
fs
mov
mov
mov
and
mov
xchg
lods
mov
or
out
adc
leave
inc
fcomp
xor
test
pop
je
aas
mov
mov
ins
frstor
sar
aaa
adc
loopne
jl
fdivr
fwait
call
cmp
adc
std
mov
sbb
loopne
out
push
sub
mov
and
cmp
adc
mov
loope
add
mov
addr16
mov
icebp
sub
xor
scas
mov
ror
add
inc
jge
mov
or
jecxz
cld
and
push
or
ds
xchg
inc
in
push
mov
push
imul
and
das
xor
aas
mov
jno
test
mov
mov
outs
add
test
or
sbb
or
dec
aam
retf
cli
cmp
inc
fisubr
push
sbb
scas
lock
jns
daa
ret
outs
cld
mov
jp
rcr
push
cmp
mov
lahf
inc
sbb
iret
sbb
mov
loop
xor
jge
jg
xor
addr16
gs
mov
mov
mov
cli
fnstenv
push
(bad)
and
inc
rcl
out
cmps
push
or
fiadd
cmps
ror
cs
jmp
jl
xchg
int
pop
shl
jg
fstp
mov
(bad)
retf
jb
sub
mov
jae
cld
xchg
pop
popf
or
pusha
mov
adc
jp
push
fcomp
adc
adc
aas
mov
inc
loop
and
in
xlat
dec
adc
jmp
in
ins
push
not
in
fidivr
mov
hlt
sar
rol
cmc
jmp
cs
bound
movs
xor
loope
retf
ficom
shl
xchg
xor
add
push
push
inc
nop
lea
xchg
js
cmps
push
lods
sbb
popf
cs
lods
add
push
and
cmp
(bad)
popf
sbb
mov
jnp
out
test
mov
dec
sbb
sti
mov
xor
push
sbb
leave
sub
inc
aaa
daa
in
push
xlat
sbb
clc
inc
sub
and
out
mov
dec
sub
sub
push
jno
pop
sbb
(bad)
rcl
es
stos
aaa
mul
push
in
push
jae
push
mov
std
add
lock
(bad)
sbb
shl
mov
lods
or
(bad)
jb
or
adc
sbb
or
jo
xchg
fmul
fst
push
sub
cmp
addr16
lahf
push
enter
inc
jns
jmp
fwait
stos
push
cmp
cmp
loopne
in
add
sub
adc
xor
mov
add
mov
loope
mov
fdiv
jo
push
jae
out
jmp
or
or
repz
add
imul
mov
js
inc
lahf
inc
add
scas
jmp
rol
test
inc
leave
xor
out
jno
lods
fcomp
imul
adc
stc
push
scas
push
cwde
inc
mov
jmp
cmp
pop
and
mov
push
lds
je
adc
sub
repnz
js
mov
push
xchg
loop
push
sub
and
sti
and
das
loopne
mov
test
push
les
mov
pusha
addr16
sub
in
movlps
push
fnstsw
xor
xchg
jno
fdiv
adc
mov
pop
or
addr16
dec
iret
mov
pop
bound
mov
pop
mov
push
xchg
nop
jmp
cmp
jne
sub
std
jo
jmp
jnp
add
aad
fst
push
sub
pop
and
mov
push
pop
dec
iret
inc
push
repnz
adc
sbb
fldenv
pop
cdq
adc
mov
popa
ss
icebp
mov
jmp
(bad)
cld
add
mov
movs
sbb
pop
stos
xor
dec
inc
and
and
int3
loope
sub
cmp
daa
iret
inc
popf
dec
cmp
in
xchg
or
mov
push
xchg
xchg
jge
call
mov
pop
int3
pop
sbb
xchg
rcr
movs
sbb
out
cmp
and
je
pop
cld
fnstcw
cmps
push
std
loope
or
add
inc
imul
and
retf
push
jnp
lock
gs
ror
xor
fwait
sbb
jge
push
sbb
scas
inc
out
sbb
ins
jmp
dec
mov
and
sbb
sbb
mov
int3
push
pop
jo
or
call
cmc
add
shr
mov
icebp
cli
ror
cmps
sar
dec
mov
mov
es
push
xchg
jo
lahf
push
inc
mov
cmps
addr16
add
mov
addr16
in
out
enter
mov
das
mov
retf
sub
arpl
iret
cmp
es
xchg
(bad)
repz
nop
inc
cmp
mov
rol
or
imul
rcl
cmc
out
pop
jmp
rol
shl
aas
scas
and
je
lahf
clc
fadd
xor
pop
movs
mov
mov
movs
xchg
xlat
dec
pop
mov
jge
xchg
mov
mov
pop
das
sti
push
cmc
pop
cmpxchg
cli
test
ja
push
inc
ror
xor
hlt
popa
jae
mov
sbb
(bad)
stos
ss
jge
or
mov
(bad)
mov
dec
dec
aad
arpl
pop
adc
inc
sub
sub
int3
pop
in
inc
mov
dec
dec
push
or
(bad)
mov
sbb
sti
and
or
cmp
pop
lahf
and
push
mov
push
push
xchg
pushf
sub
sti
jecxz
cmps
scas
add
movs
pop
ret
not
jmp
mov
mov
push
mov
call
iret
push
sbb
out
daa
xchg
loope
inc
mov
lods
jo
sbb
dec
ret
and
mov
daa
pop
sar
retf
sub
xor
adc
push
adc
in
pop
(bad)
cmp
lods
fisttp
xchg
sahf
inc
popa
ret
sbb
enter
jae
fcomp
sahf
je
outs
sub
jns
nop
push
xor
jno
mov
fild
fistp
dec
xlat
and
scas
pop
inc
(bad)
repz
lds
ins
in
sbb
mov
pop
jp
es
sahf
ror
cli
dec
mov
mov
stos
enter
cmp
xchg
pop
cmps
mov
and
add
cwde
inc
add
and
jmp
pop
(bad)
jbe
aaa
push
push
jns
ins
push
fwait
add
in
hlt
cmp
pop
cmp
(bad)
cmp
add
adc
js
jmp
push
pop
call
mov
xchg
xor
call
add
and
jne
add
xor
pop
xor
jo
call
repz
mov
scas
inc
in
xor
jmp
lds
call
mov
inc
jbe
repnz
aam
xchg
jae
xor
je
repnz
push
iret
sbb
retf
test
lahf
and
ss
xchg
out
inc
repnz
test
daa
les
mov
jmp
out
mov
lods
retf
fwait
out
xchg
out
lea
icebp
inc
scas
popa
cwde
mov
loopne
mov
lahf
and
repz
dec
push
cmp
out
pop
mov
in
mov
test
ds
pop
pop
scas
enter
lahf
mov
gs
xchg
js
jbe
loop
popa
gs
xchg
sbb
out
nop
in
mov
stc
not
push
adc
movs
jo
inc
ds
popf
icebp
pop
xchg
push
ret
pop
pop
paddd
adc
sbb
das
aas
in
or
jae
inc
xor
and
rcr
jg
repz
mov
push
fdiv
push
pop
in
(bad)
pop
lea
sub
jmp
add
mov
dec
inc
stos
xchg
push
imul
xchg
xchg
sti
jae
in
push
push
std
and
or
adc
mov
(bad)
fimul
loopne
jne
lods
lahf
jle
mov
pop
lods
mov
sub
sbb
outs
jmp
lahf
ins
dec
sbb
jne
test
pop
push
mov
jo
mov
jnp
into
mov
mov
jge
fwait
mov
sahf
or
(bad)
jmp
daa
(bad)
xor
cmp
outs
in
loop
or
imul
sub
ins
fidivr
out
sbb
test
out
or
lds
inc
adc
cmp
fbstp
fnsave
mov
lods
in
sub
(bad)
clc
stos
pusha
aad
out
js
test
fsub
sar
stos
js
(bad)
icebp
pop
cvtdq2ps
mov
and
std
outs
mov
ss
cs
lods
cmp
int
cmp
push
test
cmp
xor
mov
outs
mov
or
aad
sub
in
xchg
xor
mov
jecxz
lods
retf
fisubr
cld
and
fidiv
dec
pushf
test
hlt
mov
jno
in
jecxz
mov
std
mov
mov
sti
adc
mov
mov
push
out
aaa
push
sbb
rol
push
dec
push
movs
fiadd
push
xchg
xor
mov
and
and
lods
shl
fdivr
push
js
in
mov
xor
xchg
and
mov
fnstcw
or
push
push
clc
call
pop
xor
in
dec
ret
inc
xchg
and
mov
dec
test
pop
push
dec
mov
shl
outs
jb
xchg
out
adc
and
lods
inc
add
in
std
retf
fidiv
push
repnz
pop
or
retf
pop
push
in
mov
push
rol
movs
(bad)
pop
mov
loope
xor
xor
sahf
xor
xchg
or
je
xchg
nop
jg
and
aam
pmaxub
xlat
mov
cmps
cmp
leave
fbstp
push
outs
xchg
xchg
xchg
pop
test
call
mov
push
fdivr
arpl
push
jge
out
and
enter
or
ins
into
mov
mov
push
rcl
xchg
or
loop
sar
sub
cmc
inc
cdq
imul
adc
add
mov
outs
xor
mov
jecxz
sbb
fcom
mov
shl
stos
push
dec
cmp
nop
mov
les
js
xor
es
jmp
ds
jb
and
mov
add
cdq
cmps
hlt
inc
adc
mov
dec
mov
cli
jmp
int3
dec
xchg
jae
jp
(bad)
mov
hlt
mov
add
xchg
ja
ret
in
jb
fcom
sbb
mov
cmp
jne
repnz
data16
push
mov
sar
imul
mov
pushf
mov
shr
inc
repnz
xor
sbb
call
inc
test
inc
jg
aad
sbb
adc
jmp
inc
ret
pop
fwait
mov
out
jne
and
dec
movs
mov
cdq
jge
inc
es
retf
adc
mov
add
cmps
mov
sti
pusha
jb
add
inc
sub
out
loopne
es
stos
std
(bad)
pushf
hlt
js
lds
sbb
je
pop
mov
jne
ret
icebp
cmp
xlat
mov
cmp
lods
jmp
jnp
jo
ds
jmp
gs
lods
pop
dec
sbb
inc
rcr
(bad)
in
out
and
cmp
xchg
rol
jne
popa
into
inc
sbb
pop
mov
jo
call
retf
ins
fbstp
rol
(bad)
nop
xor
repnz
pop
ja
test
ss
fwait
das
or
sub
in
daa
(bad)
push
push
ja
les
jns
mov
jns
cwde
sbb
out
mov
and
xchg
sahf
jmp
fs
jae
adc
pop
enter
ins
adc
cmp
ret
gs
mov
pusha
pop
pop
retf
movs
cmp
inc
mov
adc
sub
loopne
and
je
imul
mov
addr16
mov
cmc
add
gs
sbb
retf
outs
das
fldcw
xor
dec
sbb
xor
sti
xchg
push
(bad)
push
sub
test
or
rol
inc
aad
jno
add
xor
int
cli
push
test
pop
xor
out
sets
stos
adc
sub
mov
mov
lahf
or
iret
cmp
pusha
sbb
mov
loopne
cmps
inc
repnz
mov
call
clc
push
loope
sub
jns
leave
es
arpl
fstp
xor
jmp
xchg
inc
dec
aad
pop
lahf
in
dec
pop
gs
repz
xchg
in
test
ficomp
or
loop
xchg
mov
sub
jmp
stos
addr16
xchg
movs
fnstenv
jp
cli
push
scas
xor
xor
or
repnz
call
xchg
mov
outs
lods
cmp
retf
dec
sub
pop
xor
mov
cmc
jge
pop
mov
mov
sub
popf
imul
(bad)
inc
out
cmp
pop
cli
nop
mov
mov
clc
or
iret
mov
out
xor
test
inc
movs
cmp
xchg
in
xor
jmp
sub
jne
jno
push
jo
mov
cmp
ja
cmp
cmps
aad
icebp
mov
dec
dec
or
rcl
retf
aas
rcl
inc
cmp
inc
pop
cmp
lock
xor
and
mov
pop
imul
xchg
sub
xlat
outs
aam
jns
mov
movs
mov
add
cmp
inc
mov
push
pop
scas
lahf
mov
xor
pop
sti
xchg
adc
ret
dec
out
xchg
fistp
call
inc
xchg
data16
jl
adc
pop
mov
ds
xchg
add
aas
sti
div
jb
cli
pop
dec
fbld
popa
adc
out
pop
sbb
adc
xchg
dec
mov
inc
call
aad
cmp
(bad)
ins
cmp
adc
les
or
jnp
sub
mov
mov
and
and
push
iret
sub
xor
xor
add
stos
mov
adc
int
outs
xor
pop
push
aam
or
cmp
test
mov
and
nop
icebp
imul
stos
outs
nop
mov
loop
and
retf
cwde
enter
push
stos
push
rol
mov
jne
push
add
and
inc
or
dec
lea
aaa
pop
popa
outs
fld
pop
push
imul
push
cmp
pop
cmps
iret
adc
shl
shl
(bad)
int
fcmove
icebp
cmp
stos
mov
imul
pop
inc
dec
or
test
outs
nop
in
repz
push
pop
or
fidiv
lods
xchg
ds
leave
mov
punpckhbw
or
ror
fsub
dec
mov
push
rol
iret
jae
js
loopne
cmc
cmp
mov
mov
add
cdq
les
idiv
adc
xchg
sub
jb
fisubr
mov
cdq
cmp
mov
adc
mov
hlt
movs
dec
push
adc
xchg
lahf
mov
mov
sbb
daa
(bad)
pusha
inc
adc
mov
and
imul
loope
shl
ss
jl
mov
jmp
das
fld
dec
(bad)
ja
popa
or
push
jle
icebp
jo
inc
mov
fwait
(bad)
cmp
push
sub
les
nop
dec
mov
lahf
push
in
and
rcl
aad
icebp
jb
call
jnp
(bad)
sub
sbb
push
adc
and
scas
aam
pushf
lea
ret
cmp
movs
pop
sub
idiv
dec
dec
jnp
je
popa
jns
test
gs
inc
inc
inc
and
dec
(bad)
adc
sub
loop
jecxz
mov
(bad)
sbb
imul
sar
adc
inc
mul
fidiv
cmp
fld
fcomip
inc
push
mov
push
arpl
jp
iret
stos
xchg
dec
jns
xchg
int
adc
mov
les
sub
xlat
ja
cmp
adc
inc
pop
xor
adc
lds
push
js
sbb
jb
int3
mov
push
leave
fidiv
sub
retf
sbb
jl
call
dec
leave
adc
fisub
xlat
fild
daa
jnp
out
fsub
cmp
inc
imul
das
fbld
and
pop
cmp
mov
inc
jmp
shr
sub
xchg
add
push
cmp
xchg
xchg
and
pop
adc
sbb
fwait
sub
(bad)
aad
ins
test
adc
and
ficomp
pop
pop
lea
es
inc
not
lods
mov
push
loop
neg
loopne
ins
fnstenv
jnp
dec
cs
push
xor
gs
fs
lods
mov
aaa
add
arpl
push
int3
push
rcr
sub
dec
(bad)
sbb
sbb
repz
jno
call
and
fild
in
out
enter
pop
ror
retf
and
and
pinsrw
stc
and
pop
xor
xor
and
sbb
es
push
loop
cmc
mov
fiadd
dec
mov
cmp
sbb
(bad)
enter
sbb
mov
leave
repnz
pop
into
push
imul
fwait
mov
push
pushf
(bad)
es
lods
mov
outs
sbb
fdivrp
mov
aas
lahf
das
adc
gs
shl
push
cld
jecxz
outs
adc
cmp
in
call
in
pusha
inc
adc
repz
cmps
jne
mov
mov
mov
test
ret
cmps
mov
cmp
xlat
dec
push
sbb
push
xchg
dec
mov
lea
pop
cmp
push
pop
xchg
mov
inc
fst
cli
xor
cmp
ja
push
fs
(bad)
sahf
loope
push
mov
or
mov
out
js
add
in
popa
shl
push
iret
pop
fistp
adc
lahf
xor
addr16
cmp
inc
(bad)
xor
add
out
scas
shl
clc
scas
xchg
lds
pop
lock
shl
mov
cmp
jbe
test
das
xchg
xor
fld
shl
mov
cmps
lods
inc
retf
xchg
dec
cs
pop
cmp
push
or
loop
add
mov
or
and
add
int
int3
loope
inc
movs
cdq
cli
cmp
rol
fsub
aas
dec
scas
pop
cdq
retf
les
clc
mov
enter
pushf
(bad)
lahf
repz
neg
or
pop
mov
loop
xchg
rcr
int
loop
push
add
mov
mov
ds
repz
inc
xor
ret
popa
sub
cmovne
cmp
pop
cmp
sub
mov
cld
adc
pop
in
(bad)
jno
pop
add
jno
pop
xchg
aad
ins
mov
ror
jmp
ret
pop
ds
dec
mov
test
add
inc
shl
aam
jne
xchg
gs
js
aam
cmps
sbb
out
xchg
inc
das
rcl
push
mov
dec
test
mov
fs
mov
jb
sti
cmp
ins
xchg
movs
popf
cs
in
sahf
fist
fcmovne
pop
test
and
push
sti
mov
sub
mov
or
cmps
popa
leave
leave
jbe
in
movs
cwde
sbb
retf
dec
cmp
mov
push
hlt
ins
or
aam
or
fldenv
adc
aad
in
ret
scas
aad
sbb
xlat
adc
loopne
mov
mov
mov
ror
mov
lock
dec
jo
cwde
push
sbb
pushf
jae
jne
stos
pop
push
pop
call
fdivp
in
push
loopne
sub
(bad)
sbb
jnp
dec
xchg
rcr
mov
add
bound
push
rcr
mov
psubb
std
push
(bad)
mov
sub
ret
cmp
repnz
addr16
cmp
sub
mov
xchg
adc
fwait
fwait
push
mov
mov
jns
or
lods
inc
lods
bound
sti
stos
mov
inc
sbb
sub
jo
add
das
and
lds
adc
inc
outs
(bad)
jae
cmp
push
mov
retf
push
xor
mov
adc
push
xchg
mov
ins
das
jle
pmulhuw
and
addr16
xchg
ror
lahf
ds
scas
push
add
pop
jl
push
jle
and
(bad)
push
bswap
in
mov
cdq
xchg
fild
xchg
add
push
and
jmp
stos
test
cs
cwde
pop
ss
hlt
push
outs
sub
add
inc
loop
jo
iret
and
cli
jo
adc
sahf
shr
popf
inc
inc
push
cmp
mov
mov
mov
xchg
jbe
test
mov
jb
cmp
adc
inc
xchg
add
or
pushf
mov
movs
fld
jmp
mov
arpl
aaa
mov
scas
jle
std
dec
fdivp
je
les
dec
int
ss
jb
sub
sti
xchg
ja
mov
jne
jns
xchg
rcr
rol
push
push
jg
xor
mov
xor
sbb
out
mov
jle
jae
cmp
movzx
pop
sti
in
bound
mov
clc
repz
cdq
fld
scas
push
std
(bad)
and
aas
sbb
cmp
jl
test
jl
(bad)
cmp
imul
push
je
loop
dec
aam
int3
lahf
cwde
enter
retf
stc
sti
sbb
stos
push
pop
dec
les
adc
lock
dec
shl
push
mov
icebp
js
jmp
cdq
mov
adc
sbb
out
push
mov
xchg
push
hlt
mov
cmc
xchg
aas
xchg
adc
into
dec
jnp
data16
pop
and
xchg
add
in
test
jmp
jp
add
mov
mov
aam
cmc
mov
push
test
push
stos
loope
inc
or
mov
xlat
clc
mov
shr
in
jge
arpl
stos
inc
dec
test
pop
and
movs
sub
pop
or
arpl
ins
sub
push
aad
ja
retf
arpl
adc
outs
fs
pop
pop
and
ret
jle
dec
push
mov
fst
les
out
and
gs
mov
or
out
enter
enter
cmp
mov
adc
bound
sub
int
sub
mov
dec
sbb
ja
leave
xchg
cmp
lock
(bad)
jmp
into
loop
cld
fwait
mov
dec
inc
or
adc
add
add
jp
sti
mov
dec
push
mov
push
mov
in
mov
retf
lea
ret
rol
dec
xchg
js
pushf
rcl
or
pop
pop
call
or
inc
pop
mov
test
xchg
data16
inc
pop
fmul
inc
scas
pop
push
mov
lahf
cmp
mov
sub
shl
pop
inc
push
int
std
hlt
out
or
into
cld
test
jg
retf
or
or
push
pusha
mov
sar
adc
and
js
mov
pop
xchg
or
sbb
xchg
or
cmp
aas
jmp
dec
fist
cmps
cs
cmps
addr16
clc
aam
cmps
ds
lods
sub
and
xor
std
and
mov
add
sbb
pop
xor
dec
pop
call
mov
mov
retf
sub
xchg
nop
push
xchg
jl
sbb
in
push
repz
xchg
in
xchg
cdq
sub
jecxz
xor
mov
push
shl
test
xor
inc
out
or
sub
pop
(bad)
jle
mov
or
mov
jns
mov
mov
inc
pop
cmp
js
mov
jns
cmp
inc
pop
test
out
out
dec
lahf
dec
test
inc
not
jp
cmp
mov
test
je
sar
pop
stos
popf
retf
jle
adc
push
jne
adc
hlt
int3
dec
cmps
push
ds
push
daa
fcomp
cmc
fld
cmc
int
stos
jno
fdiv
jns
jle
dec
gs
ja
xor
dec
sbb
in
sahf
pop
and
and
jae
jl
in
mov
lahf
mov
call
or
mov
mov
rol
add
cmp
jne
and
mov
repnz
and
das
(bad)
fstp
gs
aam
jno
sti
mov
push
mov
jo
adc
push
mov
sbb
pop
cmc
popf
das
adc
pop
dec
into
ror
mov
mov
add
jno
sub
xchg
sub
ret
cmp
into
or
pop
jge
test
xchg
xor
xchg
mov
jmp
leave
xchg
mov
mov
or
(bad)
pop
push
outs
stc
in
mov
fstp
xchg
jmp
jp
ret
lods
push
out
inc
shl
enter
mov
jae
scas
rol
dec
mov
rol
or
lea
sub
(bad)
cli
inc
outs
stos
mov
jp
push
jns
dec
ss
in
xchg
out
adc
mov
in
push
ret
push
popf
jno
push
lock
or
std
fstp
cmps
mov
call
test
cdq
ins
inc
seto
stc
ret
cwde
xchg
mov
popa
loop
and
dec
clc
jae
pushf
in
(bad)
push
pop
dec
(bad)
pusha
int
or
stos
or
imul
rol
scas
xchg
dec
aad
or
and
xor
mov
mov
mov
xchg
rol
mov
xchg
pushf
adc
jge
sahf
xchg
mov
mov
pop
adc
scas
fadd
enter
add
pop
xchg
stos
ja
xor
pop
xor
and
lods
jmp
add
mov
(bad)
xchg
ficom
ds
or
js
xor
jmp
sbb
jge
adc
dec
jo
std
mul
xchg
cld
fnstsw
jb
test
and
pop
jne
or
popa
mov
and
outs
lahf
xchg
mov
retf
icebp
jmp
and
and
push
scas
imul
dec
inc
mov
out
xchg
mov
sub
mov
mov
adc
mov
(bad)
cli
xlat
ror
or
ins
push
inc
inc
lock
jno
mov
dec
xor
jns
stc
rcr
mov
bound
test
ret
jmp
pop
mov
shr
in
xor
add
xchg
shr
add
nop
and
lock
mov
or
out
push
adc
rcr
ss
jmp
or
sub
push
add
inc
add
into
fs
cli
fs
inc
(bad)
icebp
mov
dec
pop
lods
jmp
jp
push
sub
fsub
push
push
js
mov
popa
or
adc
jmp
lods
xchg
jo
xchg
stc
mov
and
inc
and
imul
pop
je
icebp
jge
mov
sbb
jno
jl
sar
retf
xor
xchg
jmp
or
jl
lock
int3
fwait
sub
or
fstp
and
shr
jne
jmp
dec
xchg
popf
and
inc
cmp
cmps
addr16
pop
imul
cmps
fidivr
fs
inc
rcr
out
xchg
in
xchg
add
mov
pop
bound
dec
pop
outs
ss
lds
xor
sub
cmps
mov
add
das
cmp
or
xor
mov
loopne
jg
scas
and
pop
psubb
scas
xchg
arpl
das
data16
push
imul
add
movs
jmp
xor
clc
push
aam
scas
mov
ss
aad
adc
ret
add
mov
or
in
pusha
push
cmps
ins
xchg
xchg
xchg
stos
mov
fmul
adc
arpl
emms
inc
xchg
xchg
adc
(bad)
xor
(bad)
js
xchg
mov
pop
pop
xor
retf
push
neg
dec
mov
fsub
es
daa
jae
xchg
aam
cmps
sub
int
ret
mov
sbb
push
dec
inc
repz
and
pop
mov
sub
adc
dec
xlat
jp
mov
and
rol
pusha
and
das
dec
dec
pushf
stos
sar
xchg
xchg
cs
sbb
shl
mov
push
and
ins
dec
push
aaa
cmp
shl
rol
jne
cmp
pop
add
in
cmc
mov
push
popa
in
in
fistp
cld
in
xor
pop
enter
dec
mov
or
xchg
jl
mov
pop
jge
mov
xchg
mov
lods
loop
and
pop
xor
aam
mov
addr16
int3
aam
jp
pusha
and
in
cwde
int
mov
mov
in
fld
dec
neg
retf
(bad)
scas
fs
fstp
xor
xchg
sahf
gs
dec
or
pop
and
outs
ins
mov
xor
xor
(bad)
lds
mov
cwde
add
loopne
aad
inc
js
jno
add
xchg
sub
lds
out
movs
pop
bound
hlt
xchg
hlt
adc
or
loop
sub
sub
pop
pop
mov
inc
jbe
xchg
stos
shl
scas
popf
fsubr
leave
shl
jae
call
(bad)
call
xlat
lea
(bad)
push
mov
pushf
test
inc
inc
not
add
test
push
inc
hlt
inc
fwait
jmp
out
pop
mov
adc
pop
sbb
mov
dec
push
popa
loop
mov
mov
les
cli
in
jmp
fldcw
repz
mov
lods
pop
xlat
out
mov
mov
jg
sbb
das
das
pop
std
sub
inc
xchg
lea
jmp
xor
mov
and
sbb
adc
inc
push
pusha
(bad)
jecxz
outs
push
out
xchg
cwde
mov
mov
pop
retf
xchg
mov
push
bound
pop
jnp
imul
mov
retf
pop
or
push
call
or
cmc
or
pop
cmp
cmps
push
(bad)
sub
call
int
push
test
out
fwait
popf
outs
fcom
dec
cmp
shr
mov
data16
adc
push
lods
mov
pop
(bad)
fimul
mov
fisubr
fsub
shr
shl
mov
mov
(bad)
inc
stos
loope
dec
xchg
mov
jmp
in
aam
add
scas
sbb
test
mov
in
lods
popa
add
ins
cdq
push
xchg
mov
xchg
pusha
or
movs
jae
xor
ret
mov
lea
xchg
shr
inc
loopne
sub
movs
pop
out
lods
xchg
inc
xchg
sub
add
clc
repz
jg
movq
mov
add
(bad)
fiadd
retf
mov
pusha
mov
mov
repnz
xchg
xchg
js
std
or
push
pop
adc
int
pop
mov
xor
outs
sub
pop
rcl
sbb
ss
pop
mov
ins
ss
in
xlat
or
sub
push
or
aas
inc
sbb
scas
pop
shl
test
mov
pushf
cmps
mov
and
call
imul
retf
mov
add
and
loope
test
xor
dec
and
in
rcl
mov
mov
xchg
mov
or
sub
push
pop
push
add
dec
movs
out
fist
inc
dec
sbb
enter
mov
or
mov
and
(bad)
mov
mov
jo
mov
ja
scas
push
or
jecxz
into
out
aas
retf
mov
clc
test
movs
pop
cwde
dec
das
pop
mov
jbe
inc
cmc
dec
jmp
ins
push
in
push
or
retf
pop
mov
das
lahf
sbb
sbb
add
sti
ficom
and
or
xor
push
jp
add
cmp
cmp
in
or
xchg
ins
and
loopne
nop
jecxz
into
inc
les
dec
fs
rcl
xor
int3
icebp
add
add
push
pop
in
pop
cli
call
outs
sbb
std
cwde
dec
je
lods
sti
push
mov
(bad)
rol
sub
pop
(bad)
jp
fs
xchg
xor
adc
add
daa
lahf
jg
mov
cmps
jns
dec
inc
pop
sahf
in
jne
aad
push
ror
cmp
dec
mov
test
push
movs
enter
jl
add
stc
aas
and
lods
stos
hlt
jecxz
cli
lahf
ins
rcr
inc
in
(bad)
iret
mov
imul
xchg
rcr
mov
daa
call
mov
shl
mov
or
in
push
dec
mov
pusha
push
push
and
mov
add
pop
and
scas
or
(bad)
gs
lahf
icebp
stos
loop
mov
test
out
cmp
dec
sbb
mov
jne
ret
push
dec
ins
call
push
sub
lock
or
fist
xchg
jp
xchg
pop
push
mov
xchg
cld
popa
mov
arpl
ss
cmps
or
mov
xchg
enter
movs
dec
push
icebp
fdivrp
push
mov
test
cmc
stc
push
jb
jmp
es
arpl
add
sub
test
xchg
cmp
pop
sub
popa
adc
pusha
fstp
jp
cdq
xor
fst
add
loopne
sahf
jge
jp
inc
jns
sti
lods
add
jns
xchg
push
adc
inc
mov
test
sub
iret
sbb
into
or
stos
sbb
scas
outs
or
mov
mov
scas
nop
in
dec
adc
mov
add
xor
cmp
jmp
jp
fmulp
fnstsw
sub
or
adc
push
or
mov
(bad)
mov
sbb
pop
xor
jbe
xlat
imul
ins
mov
test
mov
push
ficomp
lock
fdivr
adc
(bad)
inc
out
xchg
mov
jns
dec
add
sub
das
mov
ss
dec
or
test
shl
xor
pusha
push
adc
(bad)
std
stc
out
xchg
movs
(bad)
xchg
dec
loope
call
cmp
adc
jmp
xchg
xor
jle
repnz
out
stc
clc
inc
int3
xchg
call
dec
jge
ss
cmp
dec
adc
sti
xchg
pop
gs
ds
test
fnstsw
mov
sub
std
aaa
mov
outs
jp
loop
xor
jb
sbb
jl
fdiv
aad
repz
mov
int3
mov
movs
icebp
in
icebp
inc
imul
xchg
lock
popf
add
sub
lods
ins
push
adc
jmp
add
sub
cld
outs
add
ret
or
mov
ds
jecxz
das
jbe
movs
sbb
push
retf
fcmovnb
add
dec
lods
mov
pusha
repz
mov
cmp
xchg
xchg
out
xchg
ret
mov
jmp
pop
or
dec
xchg
sbb
jmp
jp
mov
pop
lahf
lods
cs
pusha
inc
(bad)
xor
jne
and
daa
arpl
ja
push
cwde
xor
call
loopne
int
aam
rcr
cmc
ficomp
mov
dec
adc
test
jecxz
cs
mov
xor
clc
add
cmps
jg
adc
(bad)
lock
mov
cmp
scas
cmp
push
outs
ret
pushf
aam
and
pop
and
mov
jnp
push
std
inc
lock
je
jmp
std
cmp
xchg
add
and
xor
rcr
ficom
jmp
sub
cmp
or
push
in
dec
es
les
pop
js
mov
sbb
in
push
dec
cmp
out
and
imul
add
adc
mov
xor
pop
push
sbb
aaa
mov
inc
dec
imul
repz
out
and
(bad)
xor
cmps
jo
adc
mov
push
cmc
and
jle
(bad)
imul
pop
ins
xchg
mov
scas
mov
jmp
inc
aam
mov
pop
mov
cmc
xchg
ret
inc
pop
jae
sub
(bad)
imul
xchg
mov
cmp
mov
xor
adc
xchg
test
shl
cld
sbb
add
or
inc
dec
dec
or
shl
xor
lea
mov
faddp
repz
mov
aad
js
inc
dec
call
sub
fnsave
(bad)
mov
and
or
(bad)
cmp
call
test
test
and
mov
push
pop
push
push
xchg
cmp
or
inc
and
dec
fimul
or
mov
arpl
mov
clc
icebp
out
mov
(bad)
repz
pop
jmp
xor
js
xchg
sub
and
out
out
ret
pop
jl
sub
into
add
cmps
cmp
fisttp
cmp
cmc
or
push
xchg
mov
pushf
push
add
sar
or
or
movs
ret
mov
xor
xchg
das
sbb
movs
fild
lds
ret
pop
shl
data16
add
aaa
arpl
dec
in
or
fiadd
pop
(bad)
cmp
add
sbb
fadd
hlt
jno
stc
fbstp
call
mov
mov
iret
stc
retf
repz
xchg
test
or
add
sahf
icebp
jo
pop
out
out
push
test
test
cmp
mov
mov
jle
pop
pop
fadd
adc
and
mov
pop
cwde
movs
ret
ror
jbe
imul
mov
and
and
mov
cmp
xor
sbb
inc
jmp
jae
dec
movs
push
cdq
out
push
add
punpckhdq
into
repz
inc
sbb
xchg
lahf
jb
das
dec
lds
dec
jecxz
push
retf
jl
cmp
fimul
adc
ss
push
cmp
gs
mov
jnp
call
ficom
adc
cmps
cmp
sbb
(bad)
int3
inc
jae
mov
cmp
pop
sbb
gs
pusha
or
mov
or
ja
jnp
inc
int3
out
pop
sub
(bad)
out
cmp
jecxz
mov
imul
lds
and
and
in
mov
and
mov
int3
cmp
jg
and
adc
mov
push
inc
(bad)
cmp
mov
scas
xor
sbb
mov
(bad)
xlat
outs
neg
lds
ret
xor
lods
push
(bad)
and
or
int
movs
imul
xchg
push
lds
lods
retf
retf
sbb
mov
in
pop
xchg
std
out
xchg
and
dec
pusha
dec
movs
dec
xchg
add
jo
xor
push
test
dec
lock
mov
ins
mov
jne
adc
ret
retf
sbb
sbb
(bad)
shl
pop
xchg
test
mov
or
push
cwde
xlat
mov
adc
out
fisubr
add
or
rcr
cmp
fist
inc
add
inc
(bad)
dec
jmp
outs
mov
xor
mov
jb
mov
cmp
outs
or
add
dec
pop
jg
or
push
(bad)
xlat
mov
cmps
ins
test
outs
adc
push
cmp
push
push
aaa
and
inc
and
test
cmp
loop
inc
movs
pusha
sbb
dec
mov
mov
mov
out
add
push
dec
addr16
mov
shr
xchg
push
mov
fcom
xlat
push
sar
lods
(bad)
mov
dec
mov
cmps
pop
sub
cmp
sub
dec
mov
push
out
mov
js
retf
push
add
stc
(bad)
jb
out
scas
loop
loope
mov
mov
mov
cmp
inc
into
int3
dec
or
or
sub
jbe
mov
xlat
push
call
ror
add
mov
mov
xchg
pop
gs
inc
stos
add
stos
xchg
xchg
out
xlat
adc
(bad)
arpl
aaa
movs
pop
mov
pop
push
inc
mov
mov
xchg
mov
pop
pop
jns
repnz
inc
cdq
push
js
xchg
sbb
add
not
dec
or
push
jns
hlt
mov
cmp
iret
adc
rcl
leave
rol
push
add
fcmovnu
repz
xor
jo
pop
mov
add
lahf
mov
dec
fs
xor
stc
adc
pop
mov
inc
inc
pushf
mov
mov
pop
mov
adc
in
nop
popa
cmp
cmp
loope
mov
cmps
jecxz
jmp
inc
push
arpl
or
xchg
(bad)
sub
sbb
ins
shr
int
sub
(bad)
sbb
mov
test
js
cli
fisub
jecxz
pop
lahf
call
aas
imul
or
mov
mov
fsubr
int
ins
xor
popf
(bad)
test
xor
rcl
retf
cwde
pop
jno
pop
sbb
sub
lods
ins
dec
(bad)
retf
mov
movs
fld
adc
scas
movs
or
and
loopne
into
push
test
(bad)
in
retf
sub
jae
pop
push
xchg
lods
sub
shl
or
dec
test
add
(bad)
out
mov
sahf
enter
cwde
adc
xchg
sub
mov
js
add
xchg
call
in
dec
and
in
cli
mov
je
push
sub
cmps
inc
push
xor
icebp
mov
jae
pop
outs
pop
pop
lahf
iret
xchg
sbb
mov
leave
xor
das
stos
sbb
mov
mov
dec
(bad)
popa
or
call
aad
enter
adc
jmp
fs
push
imul
mov
adc
mul
sub
cmp
je
adc
sar
fsub
(bad)
loop
ret
or
arpl
pop
jecxz
iret
jbe
mov
out
loop
sar
call
mov
enter
(bad)
loope
call
sti
repz
ins
and
mov
inc
sbb
ficom
scas
mov
push
mov
inc
icebp
test
in
xor
mov
or
(bad)
in
in
ror
dec
fnsave
mov
nop
popa
adc
push
push
dec
dec
inc
rcl
test
adc
mov
pop
aad
aam
push
popa
sub
call
adc
adc
lods
loopne
mov
or
(bad)
iret
pop
(bad)
push
pop
scas
xor
cmp
shl
xlat
hlt
xor
pop
in
or
xchg
mov
mov
cmp
sub
sbb
fst
xchg
nop
stos
test
xchg
mov
or
das
fsub
inc
sbb
mov
mov
xchg
jle
inc
lock
dec
mov
pushf
or
inc
in
mov
inc
push
add
mov
int
sar
pop
leave
pop
sub
fcomi
jmp
rcl
sbb
data16
inc
out
(bad)
push
jl
clc
add
inc
imul
scas
mov
ins
dec
cli
scas
mov
add
rol
push
xchg
jg
push
js
retf
cmc
mov
mov
pop
lods
mov
adc
inc
aaa
sbb
(bad)
cmp
or
add
lahf
cli
cmp
jae
pop
and
push
mov
fcomp
cmc
adc
rcl
add
icebp
cmp
mov
sbb
xchg
les
lea
add
mov
adc
mov
lock
fdivp
popa
pop
lock
mov
icebp
inc
add
int
popf
sub
and
es
add
push
cmp
xchg
fstp
xchg
dec
aaa
add
jne
or
(bad)
lods
mov
in
jo
cmp
je
xor
sbb
pop
and
outs
mov
jecxz
sub
loope
sub
ret
iret
lahf
lods
inc
push
test
mov
and
mov
xor
add
sub
jge
mov
retf
sbb
jge
cmp
pop
or
xchg
movs
inc
or
or
mov
add
clc
mov
push
lods
iret
xchg
jp
jne
mov
jno
jle
pop
mov
pop
icebp
(bad)
jne
jns
ss
aam
cmp
leave
scas
jns
and
mov
adc
leave
icebp
not
in
dec
dec
mov
addr16
fsin
pop
data16
mov
rcl
cmp
xchg
cdq
jno
dec
imul
in
dec
xor
fisub
jmp
int
push
jp
aas
and
or
int3
push
lahf
dec
sahf
sahf
and
ja
ret
mov
mov
cmp
cmp
aaa
cmp
sbb
imul
xchg
or
and
cmps
mov
test
add
mov
enter
jp
out
popf
xor
dec
xlat
and
(bad)
jle
js
dec
ret
push
lods
pop
dec
cdq
inc
mov
(bad)
js
mov
repnz
mov
xchg
pop
xchg
(bad)
call
jge
dec
cmp
dec
aad
mov
xchg
hlt
mov
sahf
jae
mov
dec
mov
daa
enter
jmp
push
icebp
mov
jae
and
call
adc
mov
add
mov
and
lock
daa
dec
mov
sahf
pop
out
dec
add
cwde
gs
outs
or
popf
mov
in
mov
les
cmps
xor
movs
add
repz
and
das
sbb
inc
sbb
ins
sahf
ret
ret
(bad)
arpl
adc
int3
enter
pop
fst
mov
jnp
or
xrelease
sbb
pop
aaa
ficomp
hlt
jbe
mov
jp
inc
aas
in
push
mov
jbe
inc
loop
mov
shr
pop
mov
and
add
jno
and
into
mov
or
pop
push
adc
dec
scas
rol
leave
std
mov
data16
inc
inc
out
outs
push
lock
pushf
stc
leave
xchg
mov
mov
div
dec
push
aad
sub
adc
inc
cli
(bad)
es
pop
mov
pop
outs
imul
ds
dec
dec
xchg
loope
and
ficom
lods
sub
fstp
sub
repz
add
int3
fs
xor
(bad)
pop
retf
fild
fsubr
lea
xchg
sahf
movs
and
lea
adc
adc
mov
mov
cmp
mov
xchg
data16
mov
pop
adc
push
cmp
mov
xor
cmp
scas
mov
cli
call
add
aad
xlat
pop
push
(bad)
mov
jnp
push
out
mov
test
or
fstp
mov
sahf
imul
cmp
jl
pushf
or
ss
lock
or
mov
sbb
cwde
ret
mov
xlat
sbb
push
jne
(bad)
and
add
shl
add
test
jbe
xor
xchg
push
mov
hlt
and
xchg
sub
test
mov
dec
cdq
add
inc
add
cmp
dec
mov
aaa
aam
push
retf
jg
fld
pop
sar
push
or
jl
mov
scas
xchg
xlat
ins
pop
dec
push
pop
or
dec
mov
cmp
inc
nop
bound
mov
pop
not
pop
sbb
lods
daa
mov
push
shr
outs
sbb
fdivr
hlt
iret
sbb
push
xor
aad
jno
or
(bad)
sbb
je
lock
ffree
mov
and
repnz
cmp
ins
test
add
sbb
jecxz
add
pop
fstp
mov
fcomp
into
fcmove
lea
or
in
cmp
aas
out
dec
fist
leave
aas
mov
aaa
jno
(bad)
das
add
cld
(bad)
jmp
inc
xchg
add
sahf
test
fstp
jecxz
mov
cmp
sub
int
stos
sub
xor
pop
fisubr
add
test
(bad)
jle
popf
jge
xor
test
jmp
dec
retf
jecxz
sbb
jne
lds
ret
les
(bad)
fsubrp
cwde
ret
sub
pop
mov
mov
sti
xor
cmps
dec
push
sar
aaa
repnz
cld
xor
aaa
sub
dec
mul
cmps
xor
loopne
ret
dec
fimul
rcr
jae
mov
pushf
pop
data16
cld
ins
jle
sti
lods
sar
sbb
out
mov
and
add
xor
jle
xchg
lea
sub
rcr
stos
adc
xor
mov
jae
out
sub
jg
mov
imul
in
jmp
fldenv
loop
gs
(bad)
in
movs
jbe
adc
xor
mov
arpl
add
mov
(bad)
in
push
adc
mov
xor
and
sti
aad
repz
sbb
inc
mov
cmp
or
sahf
mov
xor
out
cmps
cmp
and
inc
fwait
ret
aad
dec
das
push
lock
inc
dec
jecxz
fs
jge
mov
and
jns
int3
fldcw
lahf
cmps
int
add
inc
and
push
dec
scas
adc
mov
xchg
in
pop
loopne
or
sub
bound
sub
dec
and
dec
xchg
xor
out
scas
movs
sbb
push
rcl
inc
sahf
ss
mov
mov
and
cld
push
dec
push
sbb
push
xchg
stos
jl
push
jb
and
int
in
leave
and
lds
mov
mov
mov
sahf
ss
mov
mov
xchg
push
in
cmps
lods
icebp
imul
int3
inc
jecxz
mov
lea
cmp
mov
xchg
or
in
push
fimul
fstp
inc
mov
dec
leave
loope
mov
adc
lea
adc
fs
xchg
out
fld
montmul
cmps
lds
bswap
fcmovnbe
leave
lods
shl
loope
mov
mov
fisub
add
inc
repz
sbb
je
loope
clc
push
std
fbld
and
inc
out
clc
fldenv
(bad)
cmp
jmp
stos
in
lods
mov
xchg
mov
or
imul
shl
out
xchg
nop
(bad)
retf
jns
pop
cmp
sub
push
inc
popa
inc
call
iret
push
icebp
loop
aad
(bad)
fdivr
jnp
cmc
push
or
repz
ds
mov
push
sub
(bad)
pushf
xor
daa
mov
ja
mov
jnp
push
push
fsubr
adc
mov
cwde
pop
cwde
fiadd
cmp
xchg
stos
jne
cmp
or
jno
outs
cmp
loop
mov
fisttp
cmps
and
xchg
or
inc
retf
jns
push
mov
loope
fild
icebp
push
aas
ds
and
adc
and
xchg
and
call
es
cmps
mov
dec
(bad)
div
ds
dec
mov
stos
push
push
xchg
es
cmp
dec
sbb
xchg
xor
mov
jmp
mov
cmps
mov
xchg
mov
lds
imul
pop
and
xchg
enter
inc
(bad)
mov
sar
icebp
add
xor
or
enter
ja
pop
mov
iret
test
in
je
cmc
inc
sbb
add
(bad)
stos
inc
mov
scas
xor
fist
fild
jmp
out
cmp
ins
or
sbb
xchg
sub
sub
push
mov
push
jmp
(bad)
and
outs
(bad)
sub
or
cmp
pop
xor
movs
jp
fnstsw
fist
add
mov
bound
push
mov
cmps
imul
aaa
xlat
mov
push
dec
mov
pop
shld
mov
sbb
xor
retf
lock
cwde
gs
fidivr
sbb
test
and
add
inc
(bad)
fbld
cmp
mov
(bad)
push
ret
cmp
or
stc
sbb
lods
bound
mov
or
cmp
das
(bad)
call
test
add
cmp
clc
mov
inc
jecxz
fistp
aaa
aad
jae
push
cmp
shr
pop
sbb
imul
inc
scas
fnclex
jecxz
xlat
in
push
ja
int3
xacquire
add
leave
nop
cmc
arpl
iret
daa
jmp
pusha
test
and
dec
or
bound
mov
mov
ds
bound
sub
test
ror
lock
pop
outs
mov
out
mov
xchg
in
(bad)
or
or
add
dec
jbe
cmp
ret
cli
xchg
out
cmp
cmp
adc
jo
loopne
into
lods
jecxz
(bad)
jnp
xchg
mov
(bad)
shl
sub
or
loopne
imul
add
fwait
push
addr16
test
add
pop
jecxz
sbb
inc
inc
lahf
ds
jecxz
rcr
xor
and
pop
ja
cmp
daa
shl
cs
mov
jecxz
cmp
or
or
mov
aas
test
aam
movs
xchg
(bad)
and
stos
repz
mov
xchg
in
std
sub
cmp
jmp
mov
icebp
xchg
and
jmp
shr
popf
mov
mov
aas
fwait
cld
inc
pop
fmul
shr
mov
lahf
nop
jl
sbb
adc
inc
mov
push
imul
call
mov
ss
cmp
mov
jne
hlt
xlat
inc
xchg
pop
cmp
add
mov
jge
inc
repz
mov
mov
shr
jns
or
stc
and
jbe
popf
sbb
mov
test
std
adc
das
repnz
and
in
pop
lods
cmc
aaa
pop
pop
push
lods
lahf
sub
cdq
xchg
stos
and
jae
rcl
xor
je
bound
(bad)
aad
fs
mov
retf
fistp
stc
add
out
dec
je
mul
mov
out
ret
jmp
sbb
aad
aas
push
retf
mov
pop
fnstcw
dec
movs
or
xchg
or
adc
add
std
adc
sub
xchg
cmp
mov
leave
or
push
das
es
lds
ds
xchg
xor
or
sti
mov
outs
xchg
mov
(bad)
in
ss
cmps
fwait
dec
mov
jne
mov
aad
shl
div
(bad)
aam
and
dec
dec
(bad)
push
dec
xchg
scas
data16
rcl
nop
sub
cmp
push
fld
(bad)
fnstenv
push
jmp
imul
cmp
fimul
and
(bad)
je
arpl
fs
out
addr16
test
jmp
push
cwde
gs
push
cdq
pop
sahf
add
add
sub
or
ret
mov
stos
jb
cmp
enter
adc
xadd
adc
sub
dec
mov
inc
sub
jle
into
popfw
jbe
or
leave
dec
mov
jl
test
push
xor
retf
xchg
std
sahf
sub
std
xor
int3
in
ins
pop
jg
fild
les
sbb
retf
mov
retf
imul
mov
out
mov
test
push
jae
pop
jmp
mov
movs
push
pop
xchg
xor
dec
or
in
mov
call
test
scas
or
dec
mov
addr16
adc
mov
mov
fldcw
or
je
mov
cmp
jecxz
(bad)
and
mov
addr16
inc
push
mov
fiadd
pusha
jmp
retf
xor
out
in
xchg
sub
in
inc
mov
mov
sub
jp
xchg
push
dec
cdq
mov
cmps
fimul
outs
mov
pop
and
add
and
ds
sub
into
and
int3
cwde
popf
ins
push
xchg
jl
(bad)
cdq
xchg
push
cwde
mov
push
xchg
(bad)
out
add
adc
adc
out
data16
arpl
dec
fsubr
xchg
repnz
test
(bad)
pop
rcl
cwde
cld
das
repnz
cmc
or
inc
sub
shr
or
or
inc
mov
sbb
lea
add
sbb
(bad)
sub
add
mov
out
aam
and
sbb
out
out
bswap
(bad)
dec
push
push
pop
pop
mov
test
mov
js
enter
lock
push
sbb
cwde
push
lds
adc
test
jle
add
sbb
fsub
pusha
sti
(bad)
in
xchg
inc
jmp
imul
(bad)
iret
leave
dec
push
scas
cmp
ficomp
dec
or
cs
movs
mov
lock
test
in
rcl
in
clc
mov
daa
mov
rcl
mov
inc
jmp
outs
adc
add
jae
retf
mov
lods
test
mov
mov
mov
cli
leave
shr
movs
into
and
sub
push
dec
mov
xchg
push
jmp
xor
and
movs
adc
data16
test
cwde
and
shr
in
dec
push
jecxz
ins
add
cli
test
lods
adc
push
fild
retf
mov
repz
push
sbb
icebp
jae
scas
jb
imul
or
pop
jno
daa
mov
inc
xor
jae
pop
bound
xchg
ja
jae
xor
sar
out
mov
xor
push
xchg
cmps
fist
inc
jno
adc
aad
mov
out
mov
clc
xchg
dec
outs
dec
test
xchg
xchg
dec
cwde
mov
cmps
fs
sub
inc
iret
test
iret
add
jnp
imul
fcom
retf
mov
call
add
cmp
push
call
out
sbb
mov
push
icebp
mov
(bad)
adc
or
retf
out
lods
push
loop
arpl
sbb
frstor
imul
ret
push
xchg
lds
and
mov
add
std
fcmovu
inc
mov
arpl
sub
push
add
push
cmp
(bad)
xchg
shl
mov
xor
in
pop
aas
out
lods
out
cld
push
xor
pop
xor
push
not
shl
sub
pop
pop
outs
cmp
and
cwd
loopne
jbe
add
inc
inc
or
sbb
gs
xchg
add
hlt
mov
add
repnz
cdq
int3
xlat
dec
push
lods
enter
push
(bad)
rep
loopne
fsubr
xchg
scas
fldenv
sub
das
sbb
or
and
jmp
cwde
inc
call
inc
xor
and
int
nop
dec
xor
fwait
jbe
(bad)
sub
(bad)
icebp
xchg
mov
ret
(bad)
mov
pop
mov
mov
jae
ret
push
push
iret
bound
xlat
and
iret
cmps
jl
cmc
aam
mov
push
fs
out
ins
int3
cmp
fld
imul
sub
stos
dec
out
hlt
sbb
push
ins
pusha
test
and
clc
(bad)
imul
sub
cmp
imul
inc
retf
add
ins
int3
es
mov
cmp
pusha
jno
(bad)
and
jns
lods
cmp
dec
addr16
movs
repnz
sub
or
iret
call
and
je
xor
stos
jno
ds
out
(bad)
out
xor
mov
call
dec
mov
sbb
je
(bad)
push
lock
movs
pop
(bad)
pminub
cli
mov
push
lea
das
cmc
fnstsw
int
repnz
pop
icebp
test
mov
jmp
das
and
gs
sbb
dec
xor
mov
pushf
and
add
js
out
fwait
fwait
cdq
push
dec
es
call
mov
aad
mov
ret
push
in
jmp
mov
inc
mov
push
xchg
inc
retf
mov
mov
jmp
outs
dec
xchg
dec
cmp
rcr
je
mov
clc
adc
jp
jle
out
mov
pop
mov
mov
add
jns
jle
adc
repnz
add
imul
mov
inc
mov
inc
js
hlt
or
jecxz
or
int
ds
pop
neg
sbb
(bad)
jne
push
ins
xchg
dec
cmps
jle
outs
push
int
scas
pop
retf
dec
mov
xor
xchg
mov
mov
lods
daa
in
add
call
out
jo
dec
loopne
push
add
loop
outs
xchg
jo
mov
mov
hlt
fst
sar
add
fsubr
cmc
sbb
push
and
hlt
gs
mov
lea
inc
push
jle
ds
inc
push
adc
xchg
pusha
test
push
shl
popf
mov
or
dec
mov
xlat
test
push
xor
dec
mov
inc
repz
push
cs
jp
pop
sbb
push
inc
repnz
daa
and
test
aam
leave
lods
dec
rcr
xchg
mov
and
or
dec
stos
lahf
(bad)
stc
into
ret
cmps
jo
mov
fwait
aas
imul
sub
out
jmp
movs
fld
cmp
cmps
xor
ret
std
mov
sub
or
sub
mov
out
stc
jg
or
fisubr
sbb
push
out
fnstsw
stc
sbb
es
stc
cmc
ins
adc
xor
and
das
jge
jge
int3
jmp
daa
sar
mov
sbb
mov
mov
adc
mov
adc
out
pop
rcl
fstp
or
or
xor
adc
cmps
test
js
sbb
inc
mul
adc
add
push
push
bound
push
inc
sbb
push
retf
adc
(bad)
push
lds
fmul
add
sbb
inc
fsubp
retf
adc
push
lock
push
imul
int3
push
pop
enter
mov
lock
jmp
jle
das
mov
mov
and
sub
xchg
push
icebp
mov
pop
pop
add
daa
cmps
stos
enter
sbb
je
fisttp
pop
jb
mov
adc
xchg
or
mov
sbb
test
inc
imul
shl
xchg
repz
sub
idiv
pop
pop
pop
push
aam
inc
cmp
jne
xlat
lock
pop
xchg
add
das
adc
cmp
sub
int
shl
dec
pop
cs
mov
xlat
iret
jmp
fcom
push
mov
cmp
add
fld
dec
adc
mov
dec
dec
rcl
in
shr
mov
push
int
int3
inc
fisubr
push
push
push
shl
xchg
(bad)
adc
ds
ret
fnstenv
fsub
cmp
xor
test
inc
pop
fwait
repz
leave
mov
ror
loope
test
push
mov
mov
je
pop
test
cmp
ficomp
dec
and
ins
(bad)
dec
sbb
mov
pop
jbe
cmp
add
ss
dec
lods
ja
jns
js
cmps
outs
ret
inc
dec
ins
xchg
ror
js
in
mov
(bad)
mov
aam
mov
mov
or
test
repz
push
imul
cld
push
adc
enter
push
popf
or
xchg
clc
out
sub
jle
shr
lods
(bad)
enter
pop
or
or
aam
xchg
fild
xor
push
in
push
jbe
cmp
adc
sbb
mov
ja
inc
(bad)
retf
addr16
sahf
pop
dec
add
sub
cli
xor
xchg
dec
pusha
mov
mov
jb
(bad)
adc
clc
mov
repnz
push
mov
retf
dec
mov
stc
mov
(bad)
int
and
cmc
mov
icebp
stos
fstp
adc
cmp
adc
stos
stc
ins
jno
sbb
push
add
rcl
jg
dec
movs
dec
aam
loopne
push
int3
pop
stc
mov
(bad)
push
das
adc
add
mov
aad
arpl
dec
and
repz
add
cmps
xor
repz
imul
nop
test
std
dec
(bad)
stc
adc
jg
pop
stos
int3
ret
(bad)
call
and
(bad)
cli
aam
jbe
(bad)
les
popf
fcom
fstp
adc
stc
gs
daa
cld
mov
(bad)
int3
sbb
lock
adc
popa
test
pop
xchg
stos
test
ret
mov
jl
retf
xor
dec
jmp
std
cmp
cmps
sar
cmp
cmp
not
rcr
push
jp
and
cmp
xchg
jb
sbb
cdq
mov
iret
add
add
fidivr
mov
or
test
pop
imul
imul
inc
sub
mov
jno
retf
xchg
jns
sub
inc
jnp
sbb
scas
cmp
mov
pop
lods
clc
or
inc
mov
loop
jmp
xchg
aam
push
fld
cmp
mov
pushf
out
fild
dec
cli
mov
and
fbld
popf
pop
pop
xor
mov
cmps
push
enter
loop
mov
lods
clc
in
aas
xor
int
inc
shl
sub
ja
mov
cmp
jo
(bad)
pop
aad
stos
mov
test
jno
test
std
push
adc
ret
loope
pmaddwd
mov
mov
lds
adc
aaa
mov
ret
cmc
add
aad
push
adc
or
popf
icebp
xor
(bad)
(bad)
stos
adc
dec
add
xor
push
sbb
fld
fs
repz
mov
xchg
mov
movs
mov
aam
xor
enter
pop
mov
fstp
inc
mov
pop
mov
xor
add
sbb
ret
jmp
iret
nop
fdivr
jmp
sbb
scas
jmp
movs
push
lods
xor
imul
mov
mov
(bad)
mov
addr16
je
int3
in
push
out
push
stos
pop
jl
xchg
ficom
dec
adc
xchg
mov
stos
cwde
rcr
stos
mov
imul
inc
sbb
pop
adc
inc
inc
popf
and
sub
mov
ins
mov
fild
jbe
lods
test
pusha
ja
call
push
fsub
xor
xchg
jmp
mov
in
test
jo
shr
push
or
movs
inc
mov
add
xor
jmp
(bad)
mov
mov
mov
out
(bad)
push
xor
int3
inc
setb
movs
pusha
jb
push
aad
arpl
sub
retf
outs
fcomp
inc
mov
es
(bad)
cmp
lods
mov
mov
mul
fild
push
jg
pop
mov
in
clc
sub
ss
inc
call
test
jae
pop
int
lods
cwde
imul
xlat
push
cmp
mov
movs
xchg
add
std
(bad)
in
sbb
pop
out
lock
in
lahf
outs
pop
adc
lock
int3
adc
jle
test
in
loopne
push
lods
xor
or
lock
aaa
jl
mul
inc
clc
fsubr
ror
xor
adc
aad
xchg
mov
inc
out
adc
or
int3
jae
jne
lahf
and
push
nop
loope
stos
dec
cmps
(bad)
(bad)
pop
xor
bound
mov
adc
sbb
and
gs
jecxz
dec
scas
push
jp
push
into
lods
cdq
movs
test
push
sbb
shl
pop
mov
sbb
add
jp
pop
dec
imul
js
or
ja
xchg
mov
fimul
(bad)
xchg
sar
loop
push
jno
test
shl
or
jnp
xchg
add
or
inc
popf
or
xor
ror
mov
sub
xchg
inc
loop
adc
mov
cmc
ds
sti
idiv
xchg
pop
mov
dec
add
ss
ins
sahf
fst
jmp
rcl
sub
push
xlat
int
inc
in
test
dec
inc
(bad)
retf
xchg
cmp
pop
loop
aaa
es
call
add
and
and
mov
mov
rcl
mov
pop
in
std
out
(bad)
out
retf
mov
sub
rol
cmp
push
int
les
pop
mov
lods
imul
leave
sub
imul
cmc
pushf
mov
push
and
mov
aas
aam
sar
or
xchg
and
stos
inc
dec
out
mov
stc
sti
and
push
mov
inc
add
pop
jg
sbb
(bad)
jg
adc
ret
outs
sub
jae
into
out
out
xchg
inc
push
(bad)
rcl
ins
xchg
call
pop
push
out
push
inc
inc
mov
jae
jle
test
out
add
dec
push
(bad)
or
add
fdivr
hlt
push
sub
jne
pusha
mov
or
sti
aas
arpl
in
mov
scas
ds
xor
daa
dec
dec
mov
cwde
test
adc
nop
movs
add
gs
aam
sbb
outs
pop
xchg
in
rcl
rcr
scas
ficom
iret
scas
sbb
leave
pop
push
mov
pushfw
jb
rcl
mov
fs
pop
sbb
and
xlat
lahf
xor
mov
loop
bound
and
cmp
and
rol
mov
sub
repz
popa
push
stos
fsub
add
xlat
or
pop
das
mov
xor
xchg
into
out
pop
pop
ss
xchg
div
int3
cmps
sub
cld
std
or
arpl
cmp
mov
(bad)
and
dec
and
pop
sub
and
scas
je
sub
imul
jno
xor
jae
hlt
jmp
push
(bad)
ds
push
inc
call
adc
jae
je
fwait
loope
mov
rol
in
sub
popf
adc
loopne
push
fcomp
std
out
fistp
bnd
lock
pop
popa
ja
jmp
mov
jmp
jnp
sar
pushf
inc
ds
mov
gs
test
jns
mov
mov
mov
sub
xlat
cmps
dec
pushf
jmp
jne
xchg
mov
jb
jno
or
jmp
jbe
xor
idiv
and
mov
(bad)
jae
(bad)
je
mov
inc
popa
mov
aad
rdmsr
int3
rep
fcmove
cmc
addr16
and
repnz
shl
push
or
nop
or
pop
adc
xbegin
(bad)
jmp
xchg
sub
aam
jg
dec
outs
iret
jne
adc
dec
clc
sbb
mov
aad
and
sub
xor
retf
leave
lods
jg
mov
movs
xchg
mov
xchg
jbe
push
inc
push
and
xlat
sub
sub
ror
pop
scas
inc
jecxz
popa
inc
dec
arpl
shl
adc
mov
adc
sub
and
lock
jo
adc
inc
and
pop
or
push
xchg
push
dec
ss
and
sbb
je
mov
mov
mov
lahf
imul
pushf
push
pop
imul
retf
inc
pusha
jb
jbe
xor
adc
data16
pop
xor
push
push
push
mov
xor
jmp
xchg
push
xchg
dec
jmp
test
add
aas
jb
les
jle
shl
pop
test
xchg
jmp
push
sub
out
xchg
sub
mov
mov
xor
jmp
fsubr
push
add
sbb
retf
out
mov
adc
call
pop
nop
mov
lds
jle
xchg
pop
jmp
inc
sub
ror
retf
inc
dec
push
dec
ret
ror
aam
mov
jb
shr
fiadd
dec
mov
add
scas
adc
mov
leave
hlt
dec
hlt
inc
sbb
sub
adc
push
mov
adc
inc
add
fdiv
mov
pusha
push
jo
add
int3
mov
mov
sti
inc
enter
cs
and
loope
add
lock
outs
jmp
inc
dec
inc
test
ds
dec
mov
push
xor
xchg
nop
mov
xchg
mov
sar
add
xchg
push
mov
sub
pop
sbb
(bad)
retf
jle
dec
inc
cmp
inc
xor
pusha
sub
leave
rcr
loopne
adc
xchg
es
xor
in
or
test
xor
xchg
scas
sbb
jns
sbb
cdq
cmp
add
mov
add
and
inc
add
cmp
push
add
rol
icebp
(bad)
dec
push
nop
(bad)
fs
aaa
imul
jecxz
fsubr
rcr
mov
les
push
sahf
les
mov
jge
rol
sar
jmp
adc
sub
into
mov
xchg
in
adc
nop
cmp
fs
xchg
retf
mov
mov
es
mov
xor
cmp
ficomp
xchg
cli
stos
mov
div
leave
lds
adc
aaa
in
inc
enter
ins
push
pop
(bad)
push
cs
cmp
movs
inc
xor
ret
clc
pop
dec
jle
out
cli
pop
jg
pop
xor
and
xchg
inc
scas
enter
loop
ins
push
or
xor
mov
int3
push
add
stc
cli
jo
pop
and
add
addps
sbb
(bad)
xlat
jno
lahf
xor
dec
(bad)
aad
push
repnz
fild
test
dec
shr
aam
mov
into
sahf
cmp
data16
sub
mov
ret
mov
icebp
mov
cmp
xor
sbb
inc
dec
loope
fwait
aad
jne
or
and
lds
xlat
out
ficom
push
mov
push
gs
cmp
push
pop
jae
loope
adc
or
div
hlt
iret
out
mov
les
mov
mov
repnz
sub
cmps
jmp
xchg
ds
push
mov
shr
stos
mov
popa
xchg
push
cmp
std
mov
or
add
pop
shl
push
loop
iret
and
cmp
in
mov
call
jl
mov
pop
nop
imul
xchg
sub
push
mov
jmp
jns
xchg
jmp
adc
inc
cmps
pusha
stos
jmp
push
cmps
xchg
or
jbe
rol
mov
pop
dec
bound
sahf
mov
mov
pop
dec
sti
retf
jle
and
push
dec
xchg
stc
les
inc
fcomip
sub
and
push
movs
cdq
addr16
inc
pop
mov
pop
sub
clc
jg
call
jns
dec
imul
in
cmp
add
ror
jo
fidiv
mov
or
stos
in
shl
mov
or
(bad)
mov
xchg
xchg
loope
add
out
stc
aam
and
test
mov
adc
cmp
outs
push
xchg
(bad)
sbb
fwait
xor
ja
test
jno
push
dec
fwait
mov
jnp
clc
stc
cmps
cmp
push
adc
or
xor
ja
mov
pop
test
cwde
adc
mov
xor
push
ret
cld
mov
ins
push
cmp
sub
sbb
add
jmp
rol
sub
cdq
cwde
clc
gs
xchg
push
xor
imul
jae
loopne
fs
(bad)
adc
pop
cmps
les
out
mov
into
int
cmc
push
pop
sbb
neg
fistp
loopne
inc
out
cmps
xchg
leave
out
xor
nop
and
dec
jg
jmp
cwde
cmps
dec
call
mov
imul
call
(bad)
push
repz
cmp
inc
mov
pop
jbe
idiv
jge
pop
sub
mov
jmp
inc
cli
jecxz
push
fstp
fst
dec
fwait
test
dec
adc
sub
les
xchg
in
mov
dec
mov
aas
in
push
ins
cmps
add
dec
retf
sub
jecxz
inc
jbe
sbb
xchg
ins
mov
mov
jmp
test
(bad)
jb
movs
(bad)
xor
sar
xchg
adc
xlat
ret
lods
mov
inc
dec
sub
jecxz
fwait
xchg
cmc
std
(bad)
fadd
xchg
ins
in
clc
xor
xchg
pop
adc
mov
test
in
imul
add
push
or
inc
mov
mov
push
mov
mov
jne
dec
stc
cdq
addr16
jl
mov
pop
mov
je
xor
fisubr
inc
add
cdq
dec
(bad)
xchg
mov
jns
lea
sub
leave
fcmovu
(bad)
gs
xor
maxps
ja
das
std
icebp
js
shl
mov
js
push
dec
das
sub
jo
and
cmps
dec
pop
mov
outs
imul
inc
adc
or
sbb
(bad)
adc
mov
imul
xor
movs
inc
inc
push
jecxz
add
mov
mov
jae
(bad)
in
or
(bad)
(bad)
fdivr
out
mov
mov
in
cwde
test
pop
xlat
repnz
mov
sbb
mov
test
pop
xchg
adc
jle
adc
push
add
cmp
mov
mov
dec
sub
adc
fisttp
test
sbb
clc
in
mov
int
(bad)
leave
inc
push
jbe
popa
and
push
(bad)
sti
sub
cmps
test
and
sbb
add
iret
in
das
add
push
mov
sub
test
xchg
inc
pop
in
loope
xchg
sbb
cmp
cmc
outs
cmps
pop
fist
pop
add
out
(bad)
leave
xchg
cmps
cmps
push
add
in
dec
jle
mov
push
mov
fist
ret
lods
inc
popf
stos
lods
fdivp
or
jae
movs
jnp
pop
out
ins
sub
jbe
js
cdq
clc
out
test
mov
test
jp
outs
daa
and
cmp
pusha
add
das
les
xchg
jnp
mov
je
sub
inc
pop
dec
mov
push
shl
in
je
dec
in
iret
jae
fist
inc
pop
sbb
sub
test
ret
pop
fcomp
aad
mov
bound
data16
psraw
fstp
daa
frstor
cld
dec
popf
call
icebp
and
xor
stos
xchg
dec
dec
lahf
call
xlat
outs
cmp
inc
xor
rol
push
outs
sti
addr16
cmp
popf
sahf
xor
mov
pop
mov
sar
scas
and
fnstsw
lea
(bad)
pop
int
lods
push
xor
cmp
retf
test
xchg
out
mov
mov
loop
ds
in
dec
ret
mov
lahf
push
add
(bad)
std
pop
pop
pushf
imul
adc
sbb
(bad)
or
(bad)
sbb
int3
inc
sub
mov
adc
clc
and
xchg
mov
pop
aam
retf
xor
mov
xchg
inc
arpl
inc
(bad)
jmp
pop
and
test
repz
pop
ins
in
mov
fxch
outs
fld
out
cdq
retf
lahf
jle
loope
mov
jno
repz
pusha
(bad)
in
ret
in
push
mov
addr16
inc
push
fsub
mov
cdq
call
add
xchg
inc
cwde
jbe
sahf
addr16
mov
addr16
lock
pusha
pop
push
(bad)
and
jge
cmp
adc
popa
jb
dec
inc
out
cdq
or
lock
adc
jg
stos
ss
(bad)
aam
scas
in
xchg
addr16
xchg
gs
std
les
add
ret
xor
inc
fcmove
xchg
fs
sub
out
inc
nop
cwde
movs
inc
jmp
add
fisub
jno
imul
adc
mov
pushf
dec
jge
scas
aas
sbb
push
add
stos
jmp
jmp
mov
xor
cli
mov
ror
cmps
xor
or
sbb
or
imul
jbe
rol
imul
or
lea
add
mov
jp
mov
cmp
xor
aam
mov
dec
sbb
iret
sub
hlt
xchg
and
in
popf
ror
ror
mov
cwde
inc
pop
cwde
dec
xor
jp
sub
and
rol
pusha
fidivr
daa
fs
cmps
nop
push
fst
sub
(bad)
loop
movs
test
sbb
adc
pop
and
pop
jge
pop
ret
mov
pop
imul
add
jmp
(bad)
aad
test
jmp
pop
cmp
jmp
add
adc
ins
mov
fld
xchg
movs
enter
cmp
xor
repz
push
iret
dec
xor
push
jle
jl
jge
loope
lds
sbb
ret
out
retf
cmp
dec
je
sbb
inc
dec
ror
pop
sbb
dec
cmp
cdq
mov
pop
mov
aas
mov
xchg
in
sbb
int3
and
hlt
js
dec
shl
mov
xchg
jnp
loope
dec
pop
sub
into
mov
(bad)
or
jno
aas
mov
mov
(bad)
cmps
push
jno
in
sub
sahf
test
or
jbe
cmp
xchg
pusha
mov
jns
xor
ret
dec
or
cmp
cmp
sub
pop
and
repz
ds
ror
sbb
mov
jle
and
pop
icebp
add
adc
out
push
imul
push
or
test
stc
aas
icebp
pop
stos
xchg
sbb
or
xchg
push
sub
mov
pop
xchg
ja
stos
mov
jp
jns
mov
xor
ret
mov
jns
adc
cs
or
push
xchg
inc
ret
cmp
or
xchg
jnp
jnp
mov
jmp
sub
inc
xchg
hlt
xchg
enter
fwait
jmp
pop
aam
xchg
retf
add
mov
fild
rcl
pusha
imul
call
aaa
dec
movs
dec
ret
test
push
mov
jnp
div
mov
pop
cwde
shl
fstp
das
adc
jo
sbb
ret
jb
cmp
jecxz
jmp
fisubr
mov
push
lods
pop
xor
mov
stc
sti
stos
lahf
lock
call
jecxz
push
mov
push
(bad)
mov
(bad)
cmp
fidivr
not
stos
sbb
xor
xchg
jecxz
cwde
or
clc
mov
and
mov
and
xchg
imul
push
(bad)
nop
lods
(bad)
sub
xlat
dec
test
mov
mov
mov
cmps
fld
xor
fisttp
mov
dec
xor
test
cmp
and
shl
add
mov
jae
sahf
xchg
and
add
lock
add
icebp
cs
inc
out
outs
ins
pop
dec
jmp
mov
les
inc
adc
sub
icebp
out
fcmovb
jns
inc
push
jp
shr
data16
mov
imul
push
or
xor
pop
xor
popf
outs
push
or
dec
movs
dec
(bad)
pop
popa
scas
push
xor
inc
jle
push
cs
push
mov
mov
mov
cmp
xchg
push
std
mov
pop
inc
jb
mov
xor
repnz
dec
mov
pop
lock
pushf
add
mul
in
and
or
mov
xchg
fdiv
and
jmp
arpl
pop
inc
pushf
shl
(bad)
jmp
pusha
out
push
bound
pop
ja
dec
inc
inc
jmp
jnp
shl
mov
mov
je
push
dec
and
loopne
fstp
imul
outs
mov
inc
dec
xor
dec
mov
(bad)
clc
dec
push
and
aad
cli
popf
sar
aad
rcl
in
in
cmps
add
push
ret
(bad)
push
sub
out
adc
add
jle
dec
pusha
and
pusha
pop
adc
xchg
jo
pop
cmp
les
cmp
sete
cld
stc
out
(bad)
push
mov
dec
cmp
mov
in
jbe
sbb
xchg
retf
inc
dec
(bad)
xchg
daa
js
xor
fidivr
test
cmp
es
pop
jno
imul
arpl
imul
jne
fstp
xchg
repnz
sbb
sub
dec
inc
dec
retf
xchg
in
fdiv
xchg
icebp
push
lods
scas
dec
mov
mov
push
bswap
sbb
(bad)
dec
test
popf
rcr
inc
and
ds
test
push
movs
push
rcl
lahf
mov
addr16
shl
popf
das
jl
leave
in
inc
add
and
jmp
and
push
les
(bad)
jbe
ss
cwde
dec
push
pop
popa
(bad)
pop
js
cmp
mov
hlt
into
aas
retf
jb
push
ins
movs
inc
mov
out
test
out
jp
(bad)
test
loope
and
push
inc
stc
mov
sub
pop
stc
dec
xor
pop
retf
jb
xchg
loopne
jmp
loope
addr16
push
dec
ins
dec
push
stc
push
xchg
sub
xlat
aaa
push
sub
pop
dec
mov
mov
sub
or
(bad)
and
sbb
retf
aad
out
cld
das
cli
fsubp
in
(bad)
ror
fisub
rcr
cli
out
xor
mov
sti
ins
push
mov
cdq
call
rcr
and
addr16
jmp
icebp
and
in
pop
jp
dec
add
pop
pushf
dec
inc
push
in
cmp
gs
push
xchg
mov
cmp
mov
jno
jmp
cmc
scas
jno
cmp
dec
test
lock
or
(bad)
cld
test
mov
fisttp
pop
mov
push
add
cmp
popa
pop
mov
jnp
pushf
adc
fdivr
mov
sub
scas
push
mov
mov
gs
imul
ret
pop
bndstx
dec
in
movs
push
in
mov
or
lods
dec
ds
mov
repnz
mov
les
fild
das
cmp
cmp
jmp
ret
out
add
push
jecxz
rcl
jne
jecxz
push
adc
idiv
mov
or
imul
cmc
jmpw
dec
movs
clc
(bad)
and
and
mov
js
or
sub
jb
add
mov
push
pop
mov
retf
adc
lahf
test
inc
jo
cmp
pop
mov
int
mov
cmps
push
jecxz
adc
xor
push
imul
das
in
push
dec
(bad)
push
fcomp
or
sbb
fcom
xchg
inc
mov
iret
ret
popa
mov
mov
sti
jno
outs
push
push
imul
repz
cmc
sbb
xchg
js
xchg
or
fistp
xchg
xchg
sar
jb
fnstsw
daa
lahf
int
pop
ja
lock
or
sub
shl
mov
jb
push
and
or
std
sahf
sub
popa
or
mov
pop
jg
or
fld
sub
dec
lods
xchg
cdq
jmp
mov
mov
fwait
mov
push
ins
popa
push
xchg
lods
jecxz
sti
sub
in
jle
jmp
lods
popa
lock
cs
lock
fbstp
ds
call
or
pop
fisubr
mov
sti
mov
push
ins
and
pushf
adc
sahf
xor
mov
into
jg
xor
mov
jne
repz
popf
scas
push
pusha
nop
push
pusha
sub
ins
(bad)
mov
mov
pop
or
outs
adc
retf
xchg
loope
int
test
inc
ins
push
lea
adc
push
and
movs
push
pushf
(bad)
aas
fcomp
push
and
mov
mul
push
push
dec
scas
clc
jnp
mov
clc
sub
adc
pop
rol
ret
jnp
and
cmp
jno
not
call
push
add
add
ss
sbb
std
mov
stc
inc
ret
push
jns
imul
jbe
out
retf
xchg
xchg
fidivr
and
push
lock
cwde
fst
jmp
sub
pop
add
fwait
jae
push
push
(bad)
push
adc
push
iret
scas
test
xor
daa
ins
(bad)
arpl
les
adc
mov
loope
inc
fwait
retf
ins
es
mov
and
pop
jae
xchg
jp
jno
jno
xchg
ins
push
mov
and
mov
fwait
sbb
out
jmp
(bad)
ds
retf
aam
call
pop
cmp
add
test
xor
(bad)
pop
movs
scas
and
loop
retf
inc
push
clc
dec
ficomp
in
sbb
test
retf
cmp
adc
arpl
mov
pop
enter
pop
ins
mov
scas
ja
aas
jae
sbb
loope
call
es
jmp
scas
call
hlt
cmp
mov
add
cmps
jnp
or
out
pop
mov
or
xchg
inc
xchg
sub
inc
daa
mov
mov
xor
cmps
inc
div
mov
mov
aad
ror
movs
mov
aam
and
fwait
jb
mov
jl
div
stos
xor
(bad)
push
mov
adc
leave
sub
into
not
sbb
and
jmp
push
sub
pop
call
push
mov
or
mov
pop
not
pop
clc
mov
scas
aaa
jmp
idiv
xchg
jmp
enter
mov
test
jo
inc
(bad)
mov
and
lock
jecxz
fcmovb
jnp
arpl
out
pop
pop
cld
xchg
push
xchg
cmp
inc
shr
ret
mov
xchg
or
push
sbb
pop
push
sbb
rcl
stos
xchg
sahf
pop
mov
scas
or
and
gs
cdq
jp
js
pop
clc
push
mov
fwait
jne
dec
adc
movs
mov
fsubr
test
out
sbb
stos
jmp
or
rol
ds
std
sbb
sub
inc
inc
in
xor
in
ror
lahf
sub
xchg
imul
lds
loope
lods
fnsave
imul
or
jmp
sar
sti
std
rcr
das
out
imul
jmp
lahf
mov
and
in
int
aaa
dec
pop
clc
jns
jb
das
push
jecxz
in
xchg
mov
int
fstp
mov
js
mov
fs
in
cs
push
mov
push
neg
and
dec
out
cli
xchg
fdivr
enter
xchg
shr
or
enter
inc
add
push
sahf
call
(bad)
aam
cmps
push
in
push
leave
pop
bound
sbb
and
sub
out
dec
add
int
xchg
jmp
jmp
jmp
clc
daa
mov
cs
or
cmp
lea
mov
sar
(bad)
cmp
and
sub
outs
pop
adc
adc
xor
push
(bad)
ret
and
mov
xchg
bound
imul
dec
das
inc
mov
mov
mov
(bad)
hlt
movs
(bad)
cmps
leave
pop
cld
or
xchg
mov
test
pop
test
ja
nop
cmp
lahf
loopne
fidiv
push
xchg
inc
retf
xchg
cmp
push
mov
imul
push
int
mov
mov
pop
adc
loopne
idiv
pop
add
cmp
into
lea
cmps
out
xchg
test
rcl
push
adc
pushf
push
leave
adc
das
jmp
sti
push
xor
mov
rol
push
jmp
or
and
scas
(bad)
sub
(bad)
sub
stc
fdivrp
mov
(bad)
mov
ss
dec
push
dec
hlt
mov
dec
sub
xor
push
inc
aaa
xor
jecxz
push
cmc
inc
jge
jp
ret
inc
jns
add
push
js
dec
add
or
adc
xor
into
sbb
push
(bad)
lods
inc
repz
lahf
aaa
fst
cli
iret
dec
in
sub
sub
mov
inc
ficomp
inc
retf
jmp
lods
xor
pop
popf
jmp
repnz
data16
js
xchg
ficomp
cmps
pop
push
jle
in
repz
cli
xchg
push
fst
pop
push
sub
ds
adc
dec
add
jns
mov
aad
xchg
jmp
and
or
inc
mov
xchg
pop
jecxz
sub
dec
jle
cmps
test
nop
lods
dec
(bad)
call
sbb
mov
mov
repz
in
sbb
jae
jbe
(bad)
jae
or
outs
cmps
cmp
call
sub
les
push
popf
jo
cdq
dec
mov
mov
fucompp
pop
adc
rcl
aad
push
xor
outs
test
add
jl
dec
mov
std
inc
add
stos
loopne
mov
sub
or
cmc
gs
enter
mov
daa
cmp
rol
popa
dec
gs
shr
add
mov
into
jns
and
jge
and
adc
shl
and
out
jo
ret
in
push
cmp
movs
mov
rcr
in
push
cmps
adc
pop
retf
(bad)
stos
sbb
cmps
and
aaa
jmp
dec
sbb
xchg
jbe
cmc
bound
or
mov
outs
iret
add
hlt
fidiv
or
mov
shl
rol
sub
iret
aaa
mov
pop
push
(bad)
sahf
push
mov
out
pop
(bad)
jmp
pop
push
cmp
rcl
mov
xchg
xor
xchg
dec
(bad)
lahf
popf
div
sub
loopne
xchg
lods
iret
loope
mov
(bad)
shl
call
hlt
fdivr
inc
mov
and
dec
mov
in
loopne
sbb
dec
sbb
call
xcrypt-ecb
cmps
mov
mov
retf
and
xchg
cwde
cs
mov
jbe
ss
adc
imul
jmp
jg
repz
lods
jbe
xor
aad
pop
adc
std
leave
sbb
stos
lods
sub
clc
sti
je
sub
das
cmp
fist
(bad)
sbb
xchg
sub
cmp
(bad)
or
sbb
retf
and
pop
jns
cwde
bound
ins
ja
test
aad
dec
jle
(bad)
lahf
push
inc
sub
mov
mov
(bad)
mov
and
push
cmp
cmps
cmp
movs
arpl
imul
pusha
inc
push
pop
cdq
fsub
or
mov
and
mov
ror
daa
test
mov
std
push
cwde
repnz
xor
cmc
(bad)
ins
jmp
pop
rcl
jmp
out
cmp
(bad)
pop
push
ins
loope
lea
inc
cmp
shl
push
sub
push
lahf
(bad)
mov
push
and
sbb
jle
inc
bound
pop
sub
jmp
mov
pop
iret
sub
xchg
sbb
hlt
adc
sub
dec
sub
sbb
je
inc
push
xor
sbb
mov
xchg
aam
add
pop
xchg
jle
push
xchg
adc
sbb
mov
cli
mov
lock
and
shl
pop
movq
daa
mov
ret
mov
imul
scas
je
cmp
out
mov
sub
push
out
call
mov
lock
xor
lahf
xchg
inc
xchg
dec
outs
js
mov
sbb
inc
fild
jb
pop
cmp
pushf
adc
lods
loopne
xchg
in
(bad)
js
addr16
and
ss
mov
aam
loope
cmp
inc
jge
or
and
jmp
push
cli
push
imul
sbb
dec
push
pop
cmp
push
aas
in
or
and
stos
push
rcr
jmp
lods
sub
adc
cld
mov
lock
mov
xlat
jmp
xchg
push
std
xchg
in
(bad)
fdivrp
mov
push
fbld
xor
out
add
jmp
jb
enter
in
mov
ja
sub
and
arpl
push
mov
or
idiv
imul
cld
mov
loop
xchg
les
sbb
push
inc
out
mov
ret
jo
fnsave
mov
enter
mov
cld
xor
jns
lods
xor
out
pop
iret
mov
cmp
sbb
or
sbb
sbb
test
jbe
outs
mov
inc
inc
arpl
mov
and
and
outs
push
out
push
push
es
push
sar
hlt
xor
repz
push
add
fstp
sub
or
xchg
mov
loop
es
cmc
call
xlat
xchg
sbb
(bad)
out
mov
jne
mov
ss
xchg
fistp
push
or
das
xchg
repnz
ds
daa
div
cwde
(bad)
hlt
push
mov
imul
jl
adc
add
xchg
(bad)
pop
movs
cmc
sbb
mov
enter
mov
push
mov
adc
mov
dec
dec
ja
(bad)
fmul
icebp
outs
(bad)
pusha
adc
fmul
pop
push
push
xchg
in
mov
aas
pop
or
push
sahf
mov
jg
jl
mov
jecxz
sub
jae
cld
sub
dec
sbb
das
jp
outs
aaa
sub
pop
js
js
clc
mov
inc
lods
push
mov
gs
(bad)
aam
fcom
imul
ret
mov
hlt
addr16
in
inc
(bad)
sub
push
test
mov
xchg
maskmovq
shl
push
mov
sbb
push
push
imul
jo
sub
movs
sub
cdq
lds
aam
fwait
pop
fdiv
repnz
aam
xchg
cdq
leave
movs
or
cmps
int3
xor
je
xchg
cmps
add
sub
cwde
add
sub
dec
stos
scas
movs
aad
(bad)
loop
mov
mov
aaa
add
cmps
cmp
xchg
jae
mov
mov
sahf
xor
out
inc
xor
mov
gs
push
bnd
mov
fwait
test
cmp
mov
data16
fcomp
pop
inc
pop
add
adc
dec
mov
xchg
mov
xchg
nop
mov
iret
mov
fimul
jnp
sub
out
outs
loope
sbb
xchg
out
fwait
mov
scas
sub
outs
not
loope
push
idiv
test
adc
imul
adc
mov
fcmovnb
jnp
and
push
cmp
add
adc
jbe
inc
std
or
jb
jns
popa
push
sub
pop
cmp
mov
jmp
adc
mov
ins
adc
out
push
mov
out
pop
jle
adc
out
rcl
dec
add
sbb
inc
inc
pop
repnz
call
push
pop
push
jnp
nop
les
cmp
cmps
inc
inc
ds
inc
xchg
adc
mov
sub
shr
xchg
xchg
push
rcr
xor
nop
clc
and
jb
mov
cmc
sub
sbb
cli
mov
sub
add
inc
gs
sub
add
jbe
sbb
mov
add
and
pop
sbb
xor
mov
and
push
lods
in
(bad)
jle
mov
in
std
stc
out
ret
shl
ss
(bad)
mov
in
enter
loopne
xor
sub
jmp
mov
mov
mov
xor
ins
mov
cld
lods
inc
push
(bad)
jle
or
add
or
idiv
pop
xchg
mov
fild
add
sahf
imul
push
and
das
hlt
sub
jno
sub
mov
(bad)
scas
adc
push
std
iret
test
jno
in
hlt
imul
sbb
mov
pop
mov
mov
xor
test
call
jle
sahf
or
jb
adc
sbb
pop
xchg
imul
(bad)
adc
sar
pop
mov
sub
into
(bad)
or
iret
dec
jns
stos
and
retf
push
cmp
inc
call
add
sbb
(bad)
(bad)
shr
push
xor
sub
xlat
retf
push
repnz
or
cmp
sub
dec
inc
test
sti
aam
push
or
lds
gs
or
leave
popa
ret
cmp
call
rcl
adc
mov
jecxz
and
sbb
cmp
jp
aam
sub
cmp
push
pop
jecxz
mov
clc
mov
ffree
sbb
imul
loopne
pop
pop
in
push
xor
push
add
enter
rol
add
jmp
push
enter
pop
repnz
(bad)
cld
inc
out
lods
xor
sub
ret
xchg
ret
cmp
test
cmp
not
cmp
sub
aad
dec
lahf
imul
cmp
or
cwde
inc
push
dec
leave
xchg
mov
pop
in
mov
jae
mov
xchg
xchg
xor
xor
lods
jg
adc
cld
ins
jnp
mov
sub
mov
(bad)
ret
xor
sub
dec
add
sbb
mov
cmp
fwait
push
ss
add
and
mov
popa
cwde
ja
lea
mov
ins
aas
cmps
xlat
jl
cmp
add
dec
and
into
cmps
sub
(bad)
jo
dec
jno
sbb
sbb
dec
pop
popa
lods
xchg
stc
mov
fsub
(bad)
jp
cmp
inc
pop
enter
xor
retf
and
int3
mov
adc
cmp
in
std
mov
or
mov
stos
test
mov
ficomp
pop
daa
shl
sub
mov
daa
arpl
dec
dec
inc
add
stos
pop
jg
(bad)
jmp
mov
mov
mov
pusha
push
cli
mov
mov
jp
xchg
xchg
lods
lds
mov
jecxz
jbe
repz
xchg
ja
mov
dec
mov
inc
sti
mov
xchg
neg
mov
ret
pushf
push
fmulp
add
cmp
pop
add
in
xchg
shr
cdq
addr16
mov
pop
sbb
aaa
les
aas
loop
stos
fs
icebp
mov
(bad)
stos
mov
dec
shl
push
dec
fnstcw
mov
repz
inc
(bad)
mov
dec
cli
xchg
mov
xchg
retf
pop
(bad)
sub
(bad)
data16
jb
adc
mov
add
popa
mov
adc
(bad)
(bad)
fimul
jne
cmp
loope
cld
lds
js
xchg
push
mov
loope
mov
add
adc
adc
sbb
(bad)
inc
test
xchg
enter
imul
cmp
das
sub
and
xchg
mov
inc
pusha
cmp
popf
(bad)
icebp
je
fwait
pusha
dec
nop
movs
lock
mov
adc
mov
repnz
or
in
idiv
mov
inc
aas
sub
fadd
jnp
xchg
push
mov
and
xor
popa
enter
inc
stos
push
lods
mov
call
jae
test
and
xchg
xchg
jb
sub
mov
in
and
inc
or
inc
mov
jecxz
push
sub
popa
mov
push
xor
add
mov
movs
inc
sub
xor
fst
xchg
jg
ins
jns
push
iret
jle
or
mov
int
inc
sub
retf
leave
xor
xor
xchg
or
push
add
adc
sub
div
push
jbe
outs
shl
inc
inc
mov
int
rol
cwde
push
push
clc
jno
loopne
dec
bound
lods
int3
jo
mov
mov
iret
call
loop
add
mov
loope
inc
fmul
xor
outs
fldenv
out
and
popf
or
mov
popa
add
jae
add
retf
fiadd
adc
leave
xlat
repz
out
icebp
stos
loop
data16
jmp
push
sbb
mov
arpl
pop
inc
sahf
aas
mov
push
push
scas
icebp
inc
test
ficom
cmp
jne
dec
dec
cs
mov
addr16
iret
inc
and
dec
pop
adc
hlt
push
push
push
repnz
outs
add
and
jmp
fbstp
and
dec
mov
ins
enter
and
xchg
pop
push
js
icebp
cdq
es
stos
mov
retw
int3
mov
out
inc
mov
pushf
push
push
outs
in
xchg
shr
xor
pushf
xchg
mov
leave
mov
xor
nop
cmp
fdiv
jo
ret
mov
popf
pop
les
packsswb
pop
scas
jecxz
lods
fist
push
movs
jp
xor
ja
dec
adc
mov
pop
pop
test
ret
mov
xchg
mov
add
iret
vmread
cmp
iret
and
and
jp
imul
add
dec
add
dec
sub
mov
shl
test
jecxz
iret
push
pop
push
arpl
js
sub
dec
jecxz
or
jo
imul
and
push
inc
jno
cmp
sub
pop
xchg
out
sub
xor
ficomp
jmp
mov
movs
xchg
and
fiadd
adc
mov
inc
movs
ins
sub
add
out
jmp
push
imul
mov
lea
jo
inc
dec
pop
fsubr
int
in
(bad)
cmp
push
loop
push
sub
fsub
add
(bad)
ss
out
jae
mov
cs
bound
fnstsw
in
jp
xor
adc
xor
adc
test
shl
(bad)
mov
pop
push
jmp
pop
jae
cli
mov
dec
lock
push
shr
push
fucom
xor
sbb
lock
adc
jmp
shr
vorps
jns
or
cmp
sub
and
and
(bad)
mov
mov
loopne
ds
inc
adc
int
and
mov
nop
loope
inc
inc
fwait
mov
mov
cmp
repz
cmp
retf
mov
in
pop
popa
outs
add
repnz
mov
mov
adc
jmp
mov
push
pusha
fimul
movs
seta
inc
jno
fst
sbb
xor
or
cwde
mov
arpl
sub
mov
cwde
mov
ret
sar
mov
push
inc
mov
mov
and
adc
shl
push
dec
jge
mov
pop
loop
test
lea
test
pusha
pusha
fild
test
fs
jbe
fiadd
leave
jno
loope
rcr
sub
aas
jne
mov
cmp
loop
dec
jle
leave
loope
xchg
mov
jae
in
inc
pop
ins
fsubrp
or
pop
jge
mov
rcr
sub
push
mov
fild
sar
mov
loope
or
call
fst
arpl
mov
repz
add
dec
mov
sub
inc
push
bnd
sub
add
or
mov
jg
bound
inc
sbb
sbb
cmc
das
movs
test
xchg
jle
test
and
icebp
cmp
dec
sti
adc
rcr
stos
imul
mov
push
adc
movs
(bad)
cmp
sbb
or
or
and
mov
and
xchg
ds
(bad)
(bad)
enter
add
xchg
fisubr
out
mov
and
mov
fucomip
push
outs
inc
ret
popa
xor
test
aad
xchg
sbb
out
mov
call
push
dec
xchg
jge
std
dec
push
sub
stc
push
push
jae
sbb
jnp
(bad)
lea
dec
setle
sub
pop
(bad)
pop
fwait
sub
sub
or
lea
popf
lock
jnp
cmps
test
scas
mov
fidivr
push
out
dec
fidivr
mov
mov
cmp
mov
aaa
retf
push
sub
data16
les
mov
imul
mov
rol
dec
cdq
sub
arpl
sahf
xor
pusha
js
sbb
cmp
xor
call
pop
lods
xchg
push
stos
mov
pop
jmp
jecxz
or
popa
xchg
ficomp
and
cmp
(bad)
xchg
or
ins
sbb
jno
xchg
jl
enter
jbe
jnp
ds
movsx
sbb
mov
fistp
sbb
or
lahf
mov
pop
xchg
mov
jmp
popf
fld
and
jecxz
mov
or
out
cwde
fnsave
mov
sar
fldenv
das
jno
in
rcl
adc
test
inc
or
inc
pop
add
mov
cld
int
shr
data16
xchg
xchg
mov
out
mov
test
xor
test
xor
pop
jmp
mov
into
das
ins
xor
sti
add
ss
or
daa
mov
enter
shl
(bad)
movs
(bad)
call
addr16
es
loope
jmp
ja
sub
(bad)
ret
dec
mov
xchg
imul
lods
sub
xor
and
or
sbb
pop
push
mov
mov
and
or
add
push
push
(bad)
xchg
mov
lock
push
push
es
in
mov
mov
inc
pop
sub
jg
and
and
or
cmp
push
(bad)
push
jmp
das
inc
dec
adc
dec
inc
mov
cmps
test
bnd
loop
push
inc
mov
scas
sbb
js
pop
or
or
and
xlat
or
cmp
popf
pop
test
inc
sub
dec
inc
loop
xchg
cmps
cwde
dec
sub
sbb
aaa
pop
repz
push
dec
push
popa
jge
(bad)
xchg
cmp
mov
inc
(bad)
out
push
mov
push
inc
js
lock
mov
sub
icebp
cdq
sub
loop
xor
mov
cli
aas
pop
sahf
fmul
xchg
adc
add
sbb
arpl
cmp
pop
jb
fidivr
and
mov
repnz
xor
sub
outs
fsubrp
cmc
xor
xchg
cwde
mov
adc
(bad)
mov
test
outs
es
out
adc
push
test
jbe
jbe
sahf
scas
pop
(bad)
sar
stos
ror
cmp
aas
cmp
mov
mov
pop
shr
mov
aaa
loopne
sub
pop
and
adc
jno
xor
fist
lods
ins
data16
mov
cdq
sub
and
xlat
scas
xchg
dec
cmps
and
dec
sbb
cli
pop
mov
div
mov
in
leave
cmp
ret
imul
pop
jb
popf
xchg
dec
lods
add
xor
out
xchg
cmp
test
jmp
test
push
test
dec
aam
xchg
jo
pusha
and
jl
(bad)
cmp
not
pop
push
adc
mov
xchg
cmp
mov
xor
int3
fisub
push
cmp
loope
vmovd
inc
mov
stos
into
aam
jns
jge
out
enter
jl
lea
rcl
and
pop
xor
imul
arpl
adc
push
ret
add
cmc
inc
mov
hlt
dec
inc
push
repnz
xchg
fs
add
sub
adc
jmp
pop
push
(bad)
or
lock
push
pop
xchg
stos
movs
retf
call
xchg
jb
mov
mov
adc
loope
push
jns
out
pusha
sub
pause
adc
xchg
sahf
repz
sub
dec
lahf
daa
inc
bound
mov
lods
mov
or
jo
fisttp
and
mov
mov
add
jnp
scas
adc
enter
arpl
repz
add
push
test
push
jbe
push
cmp
retf
mov
dec
jae
popa
sbb
mov
ret
pop
test
in
inc
push
mov
mov
jo
imul
or
fcomp
test
test
xchg
in
jns
push
aad
and
push
inc
push
push
lds
add
push
mov
and
mov
stos
cmps
and
pop
xchg
push
lahf
mov
cli
test
loopne
jbe
je
inc
data16
out
mov
leave
push
mov
lods
adc
mov
pop
adc
icebp
test
fnstsw
cmps
imul
dec
adc
into
rcr
xor
cmp
mov
cli
cld
and
mov
fisub
xchg
movs
sub
xchg
(bad)
aaa
mov
sub
in
pushf
movs
mov
scas
retf
popf
inc
ins
addr16
cli
push
or
call
mov
fadd
les
mov
sbb
repz
sub
out
push
call
js
arpl
stos
jb
pusha
sub
xor
jle
pop
jne
xor
xor
cdq
mov
inc
sub
jb
inc
dec
retf
xchg
sub
mov
cmps
and
mov
cli
add
cs
mov
ins
shl
data16
ret
mov
pop
add
and
push
mov
int3
push
loop
mov
jle
and
fwait
stos
retf
mov
cmps
hlt
(bad)
jno
addr16
mov
xchg
adc
stc
mov
xchg
mov
xor
jp
pushf
popa
jo
sbb
call
repz
outs
lods
xchg
adc
xchg
inc
(bad)
into
imul
xor
fisttp
movs
xor
jne
mov
add
xor
and
and
cmp
int3
dec
mov
push
mov
loope
cmp
push
test
or
jne
xchg
shl
mov
imul
dec
data16
pop
jge
jecxz
add
call
stos
enter
add
outs
push
or
and
cwde
das
out
push
xor
push
and
dec
mov
adc
popa
ret
je
imul
jg
push
sbb
xchg
retf
push
jb
inc
fimul
call
dec
jbe
mul
and
mov
mov
pop
push
mov
or
pop
or
clc
sti
in
xor
push
mov
ins
fsubr
and
cli
sbb
cmc
inc
in
mov
push
mov
movs
inc
in
mov
ja
push
retf
xchg
pop
fwait
jl
fidiv
push
pop
lods
icebp
stos
(bad)
xchg
pop
sbb
jae
push
test
cmp
cs
call
ja
mov
(bad)
sahf
into
xchg
dec
mov
mov
clc
cmps
dec
mov
xor
cmps
out
cs
cwde
retf
add
sub
repnz
int3
out
and
gs
push
lds
loop
ins
iret
repz
hlt
out
adc
loopne
test
cld
push
cmp
inc
ret
sub
call
mov
or
pop
push
dec
cmp
xchg
adc
add
push
push
fisttp
enter
sub
push
or
mov
cmp
fiadd
loopne
inc
out
mov
outs
bound
or
dec
pop
xchg
jmp
add
clc
mov
sub
inc
adc
inc
adc
leave
pop
and
pop
sahf
add
(bad)
adc
push
pop
loope
int3
pop
jle
inc
and
ds
ss
bound
push
xor
jb
gs
jmp
(bad)
mov
xchg
dec
retf
mov
stos
loopne
xlat
enter
mov
repnz
cdq
mov
imul
add
mul
add
int3
sub
dec
sbb
mov
das
cmp
xlat
ret
(bad)
iret
ret
mov
inc
outs
(bad)
(bad)
add
and
out
add
cmp
xor
rcr
dec
push
push
in
or
dec
enter
fisttp
sub
or
jns
mov
scas
(bad)
mov
mov
xor
mov
iret
div
or
xchg
push
cmp
out
mov
ret
or
cld
(bad)
mov
cs
jmp
dec
dec
inc
iret
mov
sbb
into
cld
mov
mov
ja
adc
push
pop
retf
jmp
mov
ret
jo
jb
mov
fisubr
mov
in
mov
pop
push
outs
mov
jnp
cld
ss
aaa
mov
ret
push
jns
push
outs
in
dec
cmp
jmp
sub
iret
popa
call
and
retf
or
xor
ja
pop
add
popf
cmp
sbb
pop
cmp
add
inc
jmp
and
xlat
les
mov
add
add
pop
cmp
xchg
inc
adc
ss
inc
xor
pusha
(bad)
sbb
dec
enter
jmp
sub
and
(bad)
pusha
push
xchg
pop
pop
cld
mov
scas
xchg
into
imul
mov
mov
inc
stos
in
mov
sbb
push
xor
sbb
jl
call
and
xchg
xchg
ret
(bad)
sti
sbb
mov
out
mov
dec
(bad)
sbb
cs
dec
xlat
imul
clc
stc
mov
int3
sub
lock
pop
enter
cmp
scas
jg
jnp
jne
bound
imul
cmps
mov
xchg
and
movs
cmc
leave
retf
daa
int
mov
mov
ss
inc
cmp
popa
stos
fadd
clc
or
stc
sbb
out
jno
pusha
shl
dec
sbb
add
popa
dec
cmps
stos
sbb
pop
mov
in
xchg
xor
in
xor
pushf
inc
arpl
int3
add
aam
xchg
or
add
add
push
outs
pop
(bad)
clc
cmp
ret
cmp
xor
pop
mov
inc
dec
movs
je
fstp
jl
leave
or
call
pop
shl
cmp
pop
push
add
push
pusha
in
movs
idiv
push
inc
sti
mov
pushf
add
jle
fadd
push
out
lock
push
sbb
out
mov
sti
lock
jmp
push
call
or
outs
test
or
mov
push
pushw
(bad)
mov
stos
mov
mov
push
push
in
mov
add
inc
imul
fwait
pop
dec
bound
xchg
xor
sub
dec
test
movs
mov
xchg
mov
std
mul
in
clc
dec
and
sahf
shl
sub
add
stos
pop
in
xchg
mov
xchg
adc
adc
lods
jo
retf
add
arpl
dec
(bad)
lods
in
sahf
(bad)
call
cmp
cmc
das
xchg
loop
mov
stc
aas
push
mov
xchg
fstp
inc
out
and
lahf
bound
fbstp
dec
inc
push
dec
(bad)
jmp
xchg
jmp
pop
mov
(bad)
out
in
pop
out
hlt
iret
nop
mov
pop
jmp
aam
add
ins
scas
mov
mov
retf
icebp
outs
loope
lods
clc
and
and
mov
(bad)
mov
cmp
mov
pusha
cmp
shr
scas
les
or
test
mov
dec
std
mov
cmp
cmp
das
mov
addr16
pop
sub
xchg
xchg
leave
test
rol
push
sbb
jecxz
jno
movs
ret
sbb
jmp
jmp
imul
lock
jo
rcr
sbb
loope
sbb
cmp
jno
dec
std
(bad)
es
aaa
(bad)
lods
addr16
jmp
iret
(bad)
movs
stos
xor
and
lds
repz
outs
shl
sbb
ins
push
fnstcw
rcr
clc
(bad)
xor
jecxz
push
test
test
loopne
stos
sti
(bad)
mov
jae
ja
sub
outs
ret
xlat
cmp
jmp
and
outs
outs
daa
scas
inc
add
outs
scas
xchg
nop
cs
add
daa
stos
add
push
adc
lods
test
ss
call
nop
push
mov
add
sbb
icebp
cld
aas
ret
push
lock
pop
mov
sti
dec
int3
xchg
test
dec
retf
add
int
xor
mov
jno
xchg
dec
mov
call
pop
adc
mov
pop
xchg
mov
fs
fcomp
adc
(bad)
shr
inc
add
jmp
mov
test
dec
je
mov
js
xor
push
xchg
sbb
shl
inc
lods
pushf
hlt
test
fmul
xlat
ret
cmp
add
mov
xchg
xchg
stos
push
mov
jmp
outs
popf
in
or
ror
scas
addr16
jg
sbb
mov
push
sub
ror
(bad)
pop
in
push
inc
push
ja
push
and
cdq
(bad)
mov
or
gs
xchg
loope
pop
push
leave
stos
sub
cmp
pop
cmc
cmp
retf
enter
sbb
jo
adc
(bad)
iret
sub
jne
(bad)
pop
jp
dec
mov
fistp
repnz
das
mov
imul
cld
lds
or
imul
or
pop
sar
fisttp
cmp
jmp
lahf
push
or
xor
fstp
or
nop
(bad)
sub
fwait
inc
or
das
out
dec
mov
ins
push
mov
cli
xchg
jecxz
div
jns
scas
mov
push
aaa
lock
add
call
pop
outs
push
test
in
mov
pop
dec
mov
cmp
push
hlt
test
pop
dec
or
mov
adc
jmp
loop
dec
or
lock
push
xor
xchg
gs
scas
dec
and
fwait
jno
push
fwait
daa
inc
enter
jb
inc
xchg
fwait
sbb
xchg
adc
out
cmc
mov
ja
mov
cli
jnp
xchg
hlt
ds
(bad)
xor
xchg
test
jmp
dec
inc
mov
jge
xchg
pop
xlat
mov
jl
cmps
inc
push
jl
and
mov
push
push
adc
cmp
push
shl
in
mov
ds
xor
sbb
xor
pinsrw
(bad)
bound
dec
es
add
(bad)
(bad)
out
scas
adc
add
fdiv
shl
cmp
or
popa
out
pop
fwait
data16
out
xor
xor
mov
adc
inc
fdivr
jno
(bad)
mov
mov
add
test
mov
xchg
hlt
cdq
mov
into
aas
loope
out
cmp
ja
cmp
sub
inc
push
je
xlat
or
jns
nop
sbb
movs
out
sbb
outs
pop
(bad)
lods
cwde
cmps
movs
pop
mov
or
pop
add
mov
es
out
mov
mov
and
pushf
or
in
sahf
div
pop
and
mov
ds
es
or
lahf
adc
scas
ret
dec
push
sbb
sub
and
jge
shl
arpl
add
and
pop
inc
pop
mov
mov
sub
and
neg
add
mov
out
fs
push
add
cmps
in
outs
sbb
inc
(bad)
pop
cmp
dec
fs
lds
fsub
repz
inc
cli
xor
inc
and
dec
mov
ds
popf
dec
sub
mov
popf
(bad)
and
push
mov
cmps
jg
dec
sahf
push
jo
retf
cmps
mov
jb
xchg
gs
cmp
pop
xor
fistp
in
mov
test
fsubrp
xor
mov
movs
push
cld
dec
test
popa
jp
retf
inc
cli
xor
stos
dec
shl
mov
div
fldz
outs
rol
inc
xlat
or
fcomp
xor
test
xchg
daa
push
mov
cmp
push
and
inc
in
popa
adc
pop
push
mov
push
and
stc
(bad)
in
fdiv
in
inc
pop
xchg
ret
push
cwde
ds
sbb
jl
mov
xchg
or
dec
or
push
or
push
sub
movs
aad
aaa
js
pop
sub
mov
and
mov
adc
jecxz
xchg
test
lahf
cld
xchg
mov
in
jns
pop
daa
shl
inc
iret
cmp
sub
inc
mov
add
jmp
and
fist
mov
pop
push
push
mov
ror
pop
dec
mov
sub
sub
aad
jae
fild
test
mov
pop
pop
push
adc
cld
cmp
sbb
mov
mov
mov
sub
adc
or
(bad)
int
iret
dec
data16
sbb
jmp
in
sub
bound
mov
loope
mov
(bad)
loopne
mov
pop
test
sbb
(bad)
cmp
pop
jmp
movs
jns
mov
mov
add
mov
mov
cmp
mov
jo
adc
sti
enter
inc
pop
ds
cmp
cmp
mov
rol
pop
ja
pop
sbb
dec
in
sub
pusha
out
out
iret
jg
and
xor
pop
aam
aaa
adc
movs
xor
mov
int
outs
jp
push
push
adc
push
cmps
push
pusha
dec
sub
loopne
cmp
stos
sub
gs
push
mov
(bad)
xor
sbb
mov
(bad)
sti
cmp
cmp
pop
outs
sub
adc
push
adc
mov
add
sbb
jp
jmp
jne
push
lea
xchg
(bad)
arpl
add
call
fist
push
jmp
jns
scas
not
movhps
xchg
js
cmp
pop
ret
xor
ror
add
sub
mov
jl
stc
dec
mov
enter
pusha
or
jle
xchg
xchg
mov
fild
pop
sub
fchs
ret
or
(bad)
push
mov
xor
pop
test
jo
fimul
fst
rcl
xor
in
(bad)
in
sub
inc
sub
mov
shl
and
jo
pop
sbb
test
adc
outs
xlat
push
fdivr
dec
or
or
push
or
or
test
dec
idiv
das
dec
add
es
icebp
popf
and
sub
push
imul
out
mov
nop
sub
ror
push
jb
sub
ficomp
iret
inc
sahf
mov
sub
jne
xchg
and
inc
jno
add
xchg
ins
xor
mov
jnp
mov
jge
imul
cmp
sahf
add
jns
sub
mov
inc
imul
test
mov
cmp
imul
cs
std
mov
jne
inc
ror
ror
fisttp
idiv
and
fdivr
jbe
push
pop
adc
outs
add
push
mov
fcomp
(bad)
(bad)
fstp
xchg
(bad)
int3
sbb
shr
addr16
push
and
jle
aam
push
dec
pusha
mov
sbb
pop
mov
sbb
rol
pop
outs
bound
ffreep
cs
leave
call
pop
or
adc
test
inc
sub
push
fcomp
pop
jno
aad
xor
outs
cmp
mov
fmul
imul
cmp
retf
fmul
sub
std
shl
sbb
pop
xchg
in
xchg
das
dec
(bad)
(bad)
mov
call
test
push
lea
pop
repz
daa
clc
cmp
xchg
outs
daa
push
icebp
hlt
in
sub
xor
lds
movs
cmp
push
dec
mov
cmp
jmp
cmc
hlt
adc
jg
push
dec
int3
fwait
movs
push
les
cmp
pop
jnp
mov
popf
xchg
xor
xchg
fisttp
neg
cld
sub
sub
es
sub
inc
das
mov
push
movs
cld
movs
sbb
loop
inc
mov
jge
std
(bad)
popa
int
or
mov
xor
dec
aas
xor
pop
inc
bound
mov
pinsrw
cmp
lahf
rcr
sbb
mov
inc
push
and
in
scas
jmp
adc
jae
in
(bad)
(bad)
ins
(bad)
inc
sub
daa
dec
cmps
loopne
(bad)
addr16
push
cmps
push
out
xchg
mov
xchg
jg
mov
push
adc
pop
pop
pop
adc
mov
js
mov
dec
in
movs
movs
jge
jmp
mov
out
dec
pop
retf
mov
mov
xor
fiadd
xchg
cmp
bound
xor
mov
xor
push
xlat
inc
inc
(bad)
lahf
sar
es
xchg
push
retf
test
retf
ins
jnp
loopne
fs
clc
ds
hlt
cmps
into
out
sbb
pushf
daa
pop
push
or
pop
xchg
sar
imul
sub
fs
(bad)
aad
cmp
lds
fidiv
xor
xchg
pusha
repnz
test
sbb
pushf
mov
add
push
pop
repz
call
mov
mov
jbe
(bad)
int3
lds
push
xchg
lds
fcomp
cs
dec
jno
and
mov
ror
mov
sub
inc
add
sbb
xchg
adc
scas
mov
inc
hlt
dec
ret
fld
daa
ficom
int
ins
daa
push
sti
dec
jge
sbb
test
push
dec
out
adc
mov
lock
aas
cmc
int
push
ins
call
lahf
je
xor
(bad)
sti
mov
retf
jle
xchg
mov
gs
adc
imul
push
rol
jne
mov
add
push
mov
push
jne
mov
daa
sbb
mov
and
add
and
jae
xchg
mov
mov
movs
push
push
pop
fmulp
jg
push
adc
mov
hlt
cmp
div
add
mov
sbb
sub
(bad)
cmp
shr
pop
jl
daa
in
pop
add
pop
pusha
lods
(bad)
aas
loopne
aaa
push
int3
fcomp
jmp
jo
xchg
pop
sbb
or
sbb
push
jle
cwde
stc
test
push
xor
mov
inc
push
outs
sbb
mov
add
sbb
and
call
mov
rcl
lock
lods
push
test
scas
cmps
xor
pop
jmp
xor
adc
push
out
xor
sbb
call
fcmovnbe
xor
ja
add
xor
(bad)
shl
int
jno
into
cmc
xchg
adc
cmp
push
mov
mov
out
lods
jge
rcr
add
inc
adc
mov
push
into
cmps
fmul
nop
push
cs
and
fwait
mov
outs
dec
sbb
fistp
clc
call
mov
inc
push
mov
ret
jp
dec
mov
arpl
test
mov
shl
cdq
call
and
fisub
mov
ja
mov
jmp
cwde
xchg
xchg
repnz
jo
into
mov
xchg
les
inc
sub
ds
adc
popa
jbe
das
int3
xlat
xor
setno
add
out
arpl
jb
xor
xor
aad
inc
sahf
in
popf
dec
ds
stos
scas
in
mov
shr
dec
imul
out
dec
mov
inc
inc
repnz
add
cmp
cmps
cmp
gs
or
cli
cwde
(bad)
hlt
adc
lds
aas
sub
loop
in
inc
(bad)
or
cmp
pop
rcr
cmp
sbb
imul
push
mov
ds
or
outs
mov
pop
fnstcw
loopne
scas
mov
icebp
dec
inc
mov
(bad)
jl
pop
cmp
imul
xor
(bad)
rol
lea
mov
pop
leave
pop
add
sub
(bad)
xor
mov
pushf
imul
dec
ss
pop
push
aam
cwde
bound
loop
ficomp
test
sub
inc
jg
cmp
ins
fdiv
add
retf
jbe
icebp
fild
out
mov
pop
jmp
test
dec
stos
aam
push
iret
push
mov
fnsave
and
adc
sbb
or
adc
and
(bad)
cli
xor
ins
add
lds
adc
xchg
std
jne
in
cmc
stos
pusha
es
les
in
mov
mov
adc
enter
sar
clc
das
pop
add
das
vmovhpd
ins
fstp
ss
jno
ins
cmc
dec
and
int
test
and
mov
loope
xor
ins
push
imul
adc
je
push
lahf
jno
clc
mov
mov
loopne
inc
xor
push
or
push
scas
test
fimul
mov
adc
sbb
js
cdq
mov
adc
daa
lods
mov
jmp
and
cmps
sub
in
lods
test
xchg
sti
push
mov
jle
popf
loop
mov
mov
push
sub
(bad)
or
sub
shl
das
loop
pop
or
nop
xor
and
jle
fadd
push
inc
loope
adc
mov
push
pop
cmp
xchg
or
test
inc
in
xchg
mov
mov
and
pushf
sti
sar
mov
and
ret
movs
in
gs
adc
out
pop
dec
imul
stos
mov
xor
aaa
push
lds
bound
shl
dec
sub
add
jb
push
cmp
xchg
mov
div
mov
shl
aam
push
sahf
push
xchg
test
call
ret
jmp
icebp
mov
clc
shl
xchg
xlat
in
ficom
rcl
mov
mov
mov
mov
and
(bad)
mov
not
dec
icebp
xor
lods
mov
mov
shl
fld
loope
outs
inc
push
addr16
mov
dec
repnz
inc
and
in
jge
pop
mov
jno
je
dec
and
xchg
mov
add
xchg
out
cmp
out
or
ret
dec
mov
cdq
dec
cmp
mov
fwait
cli
stc
pop
and
mov
sbb
sub
mov
mov
cdq
fisub
ffreep
jg
ficom
pop
pop
adc
popf
pop
rcl
dec
xchg
inc
leave
mov
fld
loop
and
cwde
frstor
leave
pusha
xor
ss
mov
jmp
loope
push
adc
dec
loope
sub
cmp
push
pop
cld
out
inc
add
and
dec
mov
cmc
(bad)
sti
std
cli
not
js
outs
inc
dec
ins
inc
mov
sar
pop
mov
sub
(bad)
int3
or
mov
stos
test
stos
cmp
ffree
push
xchg
mov
call
or
xor
data16
das
mov
(bad)
leave
lar
push
int
icebp
xor
pop
adc
stc
hlt
xor
mov
mov
or
int
jmp
mov
add
imul
cwde
je
push
inc
sub
bound
cli
in
test
xchg
or
and
or
ins
dec
imul
dec
adc
sub
xor
or
mov
xor
push
mov
rol
fnsave
xor
pop
adc
aam
jge
scas
pop
cmp
pusha
pop
nop
(bad)
xor
in
xchg
mov
lea
adc
mov
lock
push
or
mov
pusha
and
mov
pop
add
call
and
fisub
mov
lods
mov
nop
shr
sub
pusha
xlat
inc
push
push
adc
inc
jle
inc
icebp
inc
push
and
aaa
fsub
xchg
movs
test
cwde
enter
mov
ror
dec
test
jge
out
jmp
fld
popf
jg
pop
addr16
mov
inc
mov
mov
aaa
push
ss
push
out
imul
ror
and
mov
jp
jns
in
js
(bad)
cmp
fimul
jb
dec
repnz
outs
jne
xor
pop
test
or
imul
call
paddsb
dec
push
in
inc
push
add
retf
out
jmp
or
jbe
adc
adc
ins
inc
dec
lock
loope
xchg
ret
push
xchg
pop
imul
push
aaa
outs
cmp
sbb
adc
(bad)
movs
fcom
push
repnz
adc
rcr
shl
aam
jl
dec
inc
(bad)
call
push
push
lock
popa
sbb
mov
mov
xchg
sbb
xor
mov
mov
(bad)
rcr
sub
aam
out
cmp
mov
push
retf
scas
js
dec
sahf
and
loop
or
jle
and
ret
cdq
adc
data16
lahf
sbb
xchg
shr
cmp
push
pop
fwait
push
out
sar
popa
or
imul
or
mov
dec
ss
jle
pop
sbb
aas
xor
(bad)
adc
push
or
je
pop
push
fld
push
nop
jl
dec
out
fs
adc
into
cmp
cli
addr16
loope
cmp
out
or
dec
sub
xlat
(bad)
inc
div
xlat
js
jp
mov
fild
and
xor
lods
pop
outs
push
dec
mov
scas
aam
test
je
movs
rcl
std
sbb
and
jp
sub
lock
shl
sbb
test
sahf
loope
jg
xchg
xchg
inc
mov
mov
call
inc
mov
push
jecxz
jmp
jb
jne
pop
push
dec
and
fisttp
shr
pop
sub
pop
and
scas
xchg
xchg
sbb
xor
dec
fmul
or
jl
xor
inc
jnp
xlat
mov
cli
fst
inc
repz
xor
(bad)
mov
jmp
sbb
and
lahf
imul
cld
outs
out
pop
out
add
jbe
in
test
pop
cmp
pushf
adc
pop
xor
jp
jmp
dec
mov
ffree
pop
jb
aad
(bad)
cmp
mov
inc
and
hlt
jg
shl
stc
and
rcr
ret
adc
and
jnp
adc
cmp
pop
xchg
sahf
adc
push
lods
dec
mov
repnz
out
xchg
and
cmp
(bad)
fucomp
sahf
mov
jmp
test
fwait
(bad)
jns
(bad)
outs
or
inc
jae
(bad)
jmp
mov
mov
jmp
add
test
sbb
push
lds
fcom
pop
cwde
(bad)
lods
lods
or
loope
mov
sbb
sbb
jmp
scas
mov
outs
nop
jge
movs
mov
stos
and
jnp
adc
ins
ja
ret
scas
dec
js
nop
jne
push
das
mov
arpl
jbe
pop
jmp
jmp
fs
mov
aaa
sbb
shl
ficom
mov
stc
fisttp
xchg
push
sub
push
xchg
mov
mov
pop
pcmpeqd
(bad)
outs
cmps
jo
dec
out
movs
add
test
outs
push
cmp
xor
and
cmc
shl
push
sbb
mov
test
in
cmp
xchg
jb
cs
idiv
loopne
mul
or
sub
ins
mov
mov
ins
jnp
push
cmps
es
adc
arpl
leave
pop
test
cmp
aaa
sub
dec
call
sbb
adc
loopne
jecxz
in
pop
enter
rcl
xchg
jne
mov
pusha
mov
inc
out
pop
xchg
stos
fnsave
outs
shl
mov
mov
sbb
pop
js
(bad)
hlt
jb
mov
push
jmp
iret
add
add
cwde
mov
daa
inc
push
sar
stos
cli
pop
xor
mov
lea
mov
pushf
add
jp
push
cmc
xor
js
lock
in
jo
loope
stc
mov
xchg
jae
inc
fstp
mov
rcl
cmc
xchg
sbb
xchg
jno
inc
add
pop
out
enter
add
bound
mov
imul
inc
adc
and
pop
xor
arpl
ficomp
pop
loope
lods
xchg
outs
shl
cwde
fcmove
sub
shr
fild
sub
or
inc
retf
cmp
mov
jmp
push
xlat
test
fmul
adc
push
idiv
dec
xor
cmp
xlat
adc
in
jmp
sbb
cs
push
or
ja
jno
pop
or
mov
in
jmp
sahf
fcomp
dec
jbe
or
sbb
and
mov
shl
inc
cmc
outs
inc
mov
sbb
push
int3
push
jns
xor
int3
mov
or
out
mov
add
movs
sub
mov
test
cli
data16
xchg
sti
mov
retf
mov
mov
daa
lea
(bad)
ror
sbb
fdiv
gs
cmp
mov
out
dec
mov
std
dec
jno
jbe
inc
inc
std
and
push
jne
and
mov
ja
cli
add
jge
add
ins
inc
cli
pop
adc
loope
inc
adc
push
aad
cmps
inc
retf
xchg
test
jp
cmp
cli
add
pop
gs
in
mov
inc
popf
and
push
(bad)
sub
not
pop
retf
icebp
jecxz
cmps
into
loopne
sbb
jmp
cmp
xchg
adc
mov
fwait
cmc
stos
test
push
ja
mov
add
sbb
test
(bad)
xchg
inc
add
lea
sar
jmp
neg
pushf
sbb
mov
inc
push
int3
daa
pop
sbb
sbb
mov
outs
push
(bad)
dec
xchg
pusha
dec
cmc
jle
(bad)
bnd
push
mov
sbb
sub
add
aas
push
xlat
mov
dec
fisub
aas
mov
addr16
dec
push
xchg
pop
fwait
ins
mov
inc
cmp
or
aas
retf
pop
shl
xor
xchg
sub
inc
mov
stc
cdq
xlat
dec
dec
data16
(bad)
inc
sub
scas
cmc
jmp
dec
dec
xor
bound
paddw
xor
dec
cmp
fist
sub
setb
xchg
fsubr
ss
add
pop
or
inc
adc
jl
xchg
push
push
retf
jne
push
cmps
jns
pop
mov
fwait
sahf
mov
xor
lea
dec
and
push
mov
sub
mov
sahf
scas
int
aaa
je
rcl
movlps
rcr
push
(bad)
xlat
cmps
cdq
mov
push
addr16
sub
loopne
fidiv
jb
cmp
mov
loopne
out
ins
adc
xlat
in
adc
dec
sub
inc
aaa
div
or
or
add
sub
and
mov
jp
push
int3
pmulhw
aad
mov
leave
cmp
cmp
sub
pusha
popa
je
bound
(bad)
call
sbb
push
mov
scas
mov
jmp
adc
test
adc
arpl
enter
xor
sub
test
fisubr
dec
shl
mov
pop
pop
push
push
arpl
sub
push
xchg
in
mov
jmp
and
jns
inc
jmp
mov
popa
imul
push
ds
or
movs
in
push
pop
xchg
cmps
cmp
test
adc
inc
mov
into
cmp
sbb
mov
pop
retf
int
outs
shr
xchg
in
test
inc
and
sub
pop
and
movs
jge
movs
cli
sahf
enter
les
mov
rol
ins
out
xbegin
out
dec
div
shl
sahf
or
adc
xchg
cs
out
dec
arpl
inc
mov
test
call
jmp
int3
clc
(bad)
out
sub
sub
retf
jbe
xlat
and
jecxz
pop
mov
dec
movlhps
addr16
jb
cli
add
movs
mov
mov
out
shl
push
lahf
jge
jmp
lods
mov
retf
push
imul
arpl
mov
sub
stos
or
cmps
nop
or
sbb
mov
retf
cwde
and
pop
sub
cdq
pop
cmps
xchg
cmps
pop
mov
imul
sub
mov
rcr
(bad)
adc
cmc
arpl
and
arpl
inc
mov
inc
xchg
push
lahf
sbb
xlat
push
cmp
inc
mov
dec
retf
jne
mov
xor
jmp
shl
stc
ins
popa
inc
repnz
inc
daa
call
retf
data16
jns
mov
dec
neg
or
sub
dec
retf
mov
push
inc
cwde
shl
neg
cmps
mov
dec
loopne
adc
pop
cmp
pop
hlt
scas
jmp
in
and
xchg
push
(bad)
loopne
xchg
jo
test
outs
mov
jp
imul
push
sti
adc
stc
push
cmp
mov
jle
inc
sub
jne
sti
mov
rcr
les
enter
lea
imul
or
jp
sti
mov
in
ss
loopne
cmp
cli
icebp
mov
repnz
jp
dec
xchg
inc
ror
jp
sbb
aas
jmp
mov
push
add
pusha
sub
cmps
sub
inc
adc
sub
popa
pop
stos
loop
retf
jae
push
inc
cmps
push
pop
js
fstp
out
nop
or
dec
data16
push
inc
test
push
sbb
dec
retf
dec
call
inc
sbb
loop
retf
xchg
cmc
aas
test
sub
clc
jae
nop
sbb
pop
adc
out
inc
fmul
adc
sub
retf
neg
loope
xchg
push
pop
(bad)
das
dec
js
sbb
xor
hlt
inc
adc
fwait
xchg
and
add
popa
mul
mov
mov
jnp
mov
mov
lea
in
pop
and
pop
and
add
xor
sahf
sbb
sti
and
loop
and
div
or
pop
sti
mov
add
lahf
ret
sub
retf
int
and
rcr
push
sbb
xor
add
retf
ss
mov
je
fwait
and
or
pop
fist
mov
mov
jne
or
pop
jbe
sub
movs
ja
outs
(bad)
pop
sub
push
sub
test
mov
je
push
outs
sub
lock
mov
psadbw
adc
push
inc
cmp
cmp
jg
lds
push
jbe
mov
lds
fistp
dec
cmp
fiadd
sbb
jle
and
mov
cmp
ror
scas
iret
fidiv
xor
jp
mov
icebp
retf
cmp
pop
add
std
mov
dec
mov
add
adc
ret
cmps
test
aam
adc
pop
sub
cmp
inc
hlt
push
loope
retf
or
inc
and
mov
fbld
js
ss
or
rol
adc
pop
ret
xor
xor
push
imul
clc
fsubr
loope
dec
retf
dec
int3
inc
popf
fsubr
pop
mov
ret
or
call
lock
pop
cs
shl
cdq
rcl
sbb
test
outs
push
mov
push
dec
imul
arpl
add
dec
cmp
sub
pop
in
jl
mov
rcl
loopne
lahf
jb
ins
les
push
xchg
clc
ret
inc
add
jg
addr16
dec
iret
retf
adc
(bad)
test
add
jl
lock
xor
pusha
stos
lods
sub
xor
aaa
aas
xchg
dec
gs
lea
cwde
cmps
xchg
jmp
fidivr
cmp
cli
mov
popf
cmc
ss
stc
fcomp
push
mov
mov
call
loopne
out
cld
xchg
cmp
repnz
into
xor
sbb
push
jp
fsubr
pushf
ss
ins
jno
sbb
cwde
jnp
mov
or
mov
imul
jmp
pop
xchg
loop
ja
lea
outs
and
jg
arpl
mov
outs
inc
(bad)
and
xchg
push
dec
pop
fldenv
out
dec
sbb
cmp
addr16
mov
inc
inc
sub
cmp
push
adc
popa
test
sub
mov
dec
xchg
jp
pusha
or
aam
cmp
mov
ret
inc
jp
add
pop
out
scas
icebp
out
and
push
repnz
repz
add
lea
push
mov
stc
mov
sbb
je
push
add
iret
clc
inc
imul
xor
sbb
or
or
hlt
dec
mov
jb
adc
dec
mov
daa
inc
xor
test
xchg
loope
retf
dec
jmp
push
xchg
call
sar
dec
push
imul
shl
and
cmp
sub
adc
mov
call
inc
lods
mov
mov
mov
(bad)
and
pusha
and
dec
jl
sub
pop
xchg
out
gs
int3
cwde
or
xlat
push
mov
outs
je
mov
and
and
jge
pop
inc
push
mov
repz
pop
pusha
pop
xor
scas
jp
cdq
(bad)
(bad)
mov
cmp
div
or
mov
movs
push
cmp
pusha
add
into
mov
push
push
dec
leave
inc
mov
cmp
in
jne
cmps
out
xchg
out
outs
popa
dec
mov
fld
dec
pop
pop
jb
iret
adc
in
shl
mov
and
jp
add
movs
adc
ror
cmp
idiv
sar
rcr
scas
aaa
or
test
nop
out
sbb
inc
push
sub
stos
mov
adc
cmp
adc
mov
mov
adc
ins
jnp
gs
sbb
jns
in
push
ret
fild
and
(bad)
fdivr
mov
data16
xlat
das
xor
mov
push
es
sar
pop
sbb
or
jne
sahf
call
xchg
cmp
call
movs
jmp
(bad)
(bad)
cmp
jns
nop
xchg
xor
mov
sti
push
stc
jmp
jmp
popf
sub
fs
xor
add
(bad)
dec
fiadd
movs
jp
cmps
and
jnp
in
aaa
aaa
adc
and
js
inc
fisubr
fsubrp
ret
ss
cdq
xor
xor
cld
mov
ss
out
mov
into
inc
xchg
rcr
jnp
mov
ins
aad
loope
cmp
jmp
push
xchg
test
gs
loop
ficomp
add
jbe
xchg
cmc
jge
mov
dec
icebp
repnz
scas
out
aad
loope
lods
cdq
pop
push
sub
loop
js
adc
pop
repnz
loope
and
cmp
mov
mov
pop
push
xchg
cmp
std
pop
faddp
retf
(bad)
lea
icebp
sub
add
jb
ror
cmp
sub
in
dec
aam
(bad)
fucomi
pusha
dec
enter
pop
sbb
test
lods
ss
out
loopne
cmp
pop
addr16
stos
pop
xacquire
adc
sbb
add
push
jno
ds
ins
test
and
movs
jmp
xchg
xchg
mov
mov
(bad)
outs
mov
push
jne
nop
xchg
aam
jle
sub
push
dec
fimul
inc
jnp
inc
xor
mov
(bad)
sbb
cmp
jge
aaa
sbb
(bad)
cmp
jle
xor
sbb
aas
pusha
popa
jb
ja
xor
pop
mov
adc
adc
mov
in
ja
bound
lock
inc
sahf
mov
retf
retf
mov
or
cwde
fisttp
dec
loope
neg
xchg
shr
xor
sbb
xchg
ins
and
sub
rol
nop
or
punpckldq
adc
cmp
sti
lods
loopne
mov
shl
or
sbb
ins
aad
ins
fdiv
dec
jmp
bound
sub
cli
sbb
inc
mov
cwde
sbb
fldcw
test
and
dec
sbb
stc
push
or
ja
aaa
ins
xlat
sbb
stc
retf
mov
or
neg
sub
mov
xor
adc
out
jbe
pushf
jbe
push
adc
shl
pinsrw
aam
addr16
sbb
or
inc
cld
aad
pop
test
je
adc
xor
in
daa
fsubr
fmul
and
pop
std
dec
xor
sub
or
push
enter
ficom
rep
loopne
je
push
mov
(bad)
packsswb
mov
sub
push
int3
sub
sub
frstor
repnz
mov
aaa
(bad)
mov
inc
(bad)
hlt
lock
mov
add
inc
outs
dec
pop
out
push
and
les
ficom
dec
xor
or
dec
outs
inc
mov
sbb
cmp
pop
daa
fidivr
xchg
scas
dec
aas
gs
icebp
(bad)
outs
cs
mov
lods
pop
xchg
stos
scas
aaa
loop
mov
stc
jp
add
(bad)
push
push
jae
push
cld
pop
mov
or
cmps
sbb
and
cmp
xchg
cmp
rcr
fs
mov
out
cs
xchg
cdq
out
bound
adc
add
je
test
mov
call
in
xor
mov
in
dec
fs
outs
xchg
sbb
push
mov
and
rep
inc
cmps
xchg
xchg
dec
xor
or
push
sub
movs
push
dec
cmp
mov
pop
pop
inc
sbb
rcr
inc
fimul
shr
fcom
fisubr
sbb
push
or
lods
ret
(bad)
pop
mov
mov
pop
lods
sbb
mov
in
cwde
dec
mov
jno
add
aad
fist
movs
push
sahf
in
cs
xchg
xor
fild
push
aaa
jmp
push
jmp
ret
pop
outs
pop
sub
sub
call
lods
daa
inc
sub
inc
xchg
push
push
push
loopne
cld
xchg
jle
mov
sbb
mov
mov
mov
sbb
repnz
aam
push
popf
and
or
cwde
inc
jb
add
mov
arpl
lods
or
mov
jle
inc
test
dec
(bad)
popf
sahf
adc
mov
xor
repnz
inc
sub
js
cli
xor
or
mov
push
out
mov
enter
aad
jnp
jbe
scas
jb
mov
inc
(bad)
in
mov
cli
mov
push
ret
mov
pop
xor
sub
les
mov
mov
aas
ja
shl
fist
xchg
inc
add
mov
adc
test
cmp
lahf
aad
and
in
fist
or
loop
add
adc
mov
xchg
(bad)
mul
and
sti
xor
xchg
jns
out
(bad)
dec
and
xchg
imul
xor
mov
jb
adc
sub
icebp
inc
xchg
pusha
out
mov
jecxz
std
sub
push
cmp
and
sbb
adc
mov
call
push
or
into
jecxz
mov
cmc
mov
ds
or
pop
scas
fsub
iret
jecxz
fwait
rcl
jne
(bad)
dec
mov
pop
cdq
lods
out
jnp
not
push
outs
xchg
xchg
adc
cdq
repnz
push
xor
lds
push
sub
push
jmp
out
or
fcomip
js
sub
cmp
push
adc
arpl
sbb
cs
call
clc
out
int3
js
cdq
mov
daa
cld
dec
and
dec
imul
sbb
or
push
and
adc
imul
jno
bound
in
movzx
inc
shl
fsub
outs
pushf
int
dec
dec
dec
pop
test
mov
(bad)
out
pop
les
ss
out
shl
mov
add
pop
sub
out
and
outs
les
mov
shl
inc
imul
repz
xor
clc
ja
sbb
mov
retf
mov
(bad)
das
push
daa
test
xchg
icebp
rcr
push
repnz
inc
mov
inc
bnd
push
sahf
(bad)
mov
(bad)
xchg
cld
js
cmps
mov
mov
pop
fwait
adc
push
test
rol
cdq
bound
out
sub
jb
daa
imul
sbb
add
xchg
push
outs
jle
in
xchg
pop
push
ret
jnp
jnp
jmp
dec
jmp
cmc
movs
adc
cmps
push
mov
mov
cmp
repnz
inc
mov
mov
mov
xor
pop
dec
cli
mov
sub
mov
loope
cli
call
cli
nop
mov
pop
test
xor
shl
inc
mov
add
in
sahf
lock
pop
push
pop
sbb
xchg
es
and
clc
xlat
xor
mov
ins
(bad)
test
out
jmp
pop
stc
and
mov
xchg
imul
leave
xor
cs
cwde
add
in
adc
sub
or
in
pop
cmp
push
rcl
xchg
xchg
push
lods
sub
jb
sub
pop
loopne
sar
mov
(bad)
int
pop
mov
fwait
mov
jecxz
sub
in
mov
loopne
ss
in
pusha
mov
push
lds
test
push
xchg
pop
push
arpl
(bad)
mov
leave
mov
out
inc
ins
mov
xchg
jbe
sar
xchg
je
cmps
add
jp
mov
addr16
or
nop
jl
lds
or
lods
dec
lds
ret
shl
popa
pushf
jne
and
push
mov
xor
xchg
loope
aaa
je
popfw
ins
sbb
call
ficom
adc
stc
loop
mov
xor
or
jae
loop
loop
inc
push
mov
mov
cdq
inc
outs
push
sbb
cmp
fidivr
push
cli
pushf
cmp
std
pop
or
ficom
in
stos
adc
lds
pop
pushf
jmp
ja
outs
xlat
xor
das
add
leave
pop
jle
ins
gs
add
es
(bad)
arpl
inc
das
cmp
or
adc
hlt
jecxz
or
mov
div
xlat
jg
sub
jg
inc
pop
int3
ret
cmp
imul
pop
dec
xchg
out
sbb
inc
cmp
or
mov
in
nop
sbb
daa
push
add
add
sbb
loopne
jmp
loope
cmp
fstp
fidivr
and
xchg
pop
(bad)
pop
xchg
stc
jg
pop
test
fstp
push
mov
in
inc
sub
adc
cdq
add
std
in
push
adc
and
jg
push
outs
out
shl
sbb
pop
fwait
mov
push
pop
lods
mov
xchg
outs
es
or
mov
repnz
mul
sub
gs
lock
adc
fcmove
cmps
inc
pop
jo
sbb
call
mov
sub
test
adc
jbe
or
add
mov
adc
sar
adc
in
aad
pop
xchg
ins
jle
cld
aad
pushf
in
(bad)
adc
les
sub
add
sub
cmp
xchg
mov
test
adc
stc
or
mov
pop
je
pushf
or
mov
test
push
mov
clc
jmp
jmp
inc
stos
mov
push
lds
(bad)
mov
pop
ret
loope
push
mov
push
jge
sbb
xchg
cwde
aas
mov
pop
push
cmp
adc
stos
ret
aam
dec
cmps
jle
sbb
sbb
movs
and
jns
test
outs
push
inc
xchg
retf
push
xchg
mov
out
mov
mov
push
popf
cmp
sub
out
inc
cmp
ret
inc
rcr
adc
movs
mov
inc
adc
xchg
test
xor
cmp
lds
stc
xchg
add
xor
mov
mov
mov
iret
pop
pop
mov
push
outs
cmp
cmp
jge
ss
mov
xor
add
add
stos
movs
jle
pop
ds
dec
ins
xchg
push
out
and
and
sbb
or
stos
jl
test
mov
lock
xor
adc
xchg
mov
add
ja
xchg
fwait
int
in
pop
(bad)
popa
sub
ins
stc
outs
in
xchg
and
popf
sbb
jl
aas
loop
mov
out
int3
push
adc
daa
mov
push
dec
mov
push
cs
and
xchg
xchg
push
dec
mov
jne
sub
scas
jnp
jmp
dec
ja
cdq
fld
sub
out
(bad)
mov
push
mov
add
xor
int3
cmp
popa
ins
pop
push
sbb
rol
mov
pop
mov
push
into
mov
cwde
std
mov
jmp
movs
jbe
jns
xchg
ins
mov
push
dec
loope
popf
out
data16
mov
cli
mov
and
mov
dec
xchg
mov
outs
enter
cmp
in
fbstp
xor
mov
mov
xlat
outs
adc
jbe
aad
sbb
outs
lods
or
xchg
dec
aad
and
sub
mov
push
add
lock
cli
cwde
xchg
dec
shr
mov
and
mov
fs
mov
test
push
fs
adc
or
add
push
pop
nop
dec
inc
out
fist
loopne
gs
cs
fst
xchg
rcr
aad
mov
and
pop
pop
fist
sbb
in
xor
popf
(bad)
popf
(bad)
cmp
clc
jne
mov
adc
or
ds
sub
and
sbb
mov
je
test
fdiv
test
out
and
and
lods
sti
push
mov
push
popf
stos
cmp
pop
inc
out
push
inc
shl
mov
es
mov
js
sub
arpl
ins
aad
test
div
xor
into
pop
xor
mov
lea
xor
test
movs
scas
stos
int3
enter
sbb
stos
ret
sbb
clc
push
ret
fisttp
iret
fmul
retf
adc
mov
sub
xor
xor
jl
out
dec
mov
ins
fs
inc
and
jmp
push
hlt
(bad)
fdivp
test
pop
mov
push
or
and
inc
les
pusha
mov
xchg
mov
jbe
(bad)
out
ja
test
and
pop
mov
push
mov
daa
int3
std
in
ins
mov
mov
in
inc
aam
mov
int
pushw
daa
pop
cdq
lahf
test
jmp
test
movs
sub
xchg
push
mov
mov
add
mov
lods
aam
mov
mov
ins
lods
inc
ss
jle
icebp
cmp
sahf
xor
cmc
lods
loope
sbb
loop
les
mov
mov
repz
and
outs
int
test
and
mov
push
jns
std
lahf
push
dec
pop
pusha
je
dec
lds
cmp
cmps
and
imul
xor
cmp
popf
jle
mov
cmp
sub
fisub
fucomi
retf
sar
add
xor
(bad)
mov
push
adc
call
mov
lods
push
sti
arpl
sbb
mov
adc
mov
call
das
jbe
iret
sub
sub
or
dec
adc
push
lods
aam
fisttp
hlt
xlat
sub
loope
mov
inc
scas
repz
(bad)
push
xor
dec
xchg
inc
aaa
test
pop
bound
mov
movs
xlat
pop
sub
cdq
pop
xchg
xor
test
jb
add
outs
int
mov
mov
je
push
dec
cmp
lods
xor
and
mov
cmp
test
jle
jmp
call
outs
ret
add
(bad)
cmc
out
adc
idiv
shl
mov
aam
jle
jmp
mov
xchg
sub
xchg
pop
dec
inc
es
push
call
scas
arpl
add
jmp
ror
stc
adc
xchg
ret
fimul
jge
sbb
mov
popa
sub
pop
scas
jg
sub
cmp
or
out
stos
cdq
sub
fwait
sub
mov
fnsave
aas
cmp
stos
xlat
(bad)
test
or
call
xor
fld
mov
repnz
and
enter
mov
arpl
mov
dec
test
mov
ins
dec
push
xor
outs
push
cli
push
xor
lods
loopne
pop
jge
push
mov
sub
or
mov
loope
sbb
mov
mov
cmp
xor
xchg
into
dec
mov
sbb
fcmovnbe
loop
xchg
fidivr
outs
pop
pop
cdq
outs
jnp
lds
test
lock
push
mov
mov
add
sar
adc
mov
dec
not
cmps
sbb
retf
dec
inc
add
(bad)
sbb
xchg
ins
retf
sbb
jnp
xchg
pop
out
inc
adc
or
pop
pop
or
xor
or
fisttp
enter
nop
add
pop
push
out
fdiv
xor
and
fiadd
popf
aas
xor
lods
or
mov
pop
xchg
mov
jmp
(bad)
ja
add
push
dec
lods
aaa
jg
fistp
sysret
out
mov
pusha
adc
aaa
sbb
and
pusha
shl
pop
jns
adc
sbb
dec
mov
(bad)
jl
repz
mov
pop
adc
daa
jmp
cmp
adc
nop
add
push
stc
loope
push
mov
xchg
jecxz
repz
(bad)
fwait
rcr
cmp
test
scas
ins
call
push
out
sub
arpl
sbb
pop
sahf
and
add
cmc
mov
xchg
std
jo
stos
mov
mov
fnstsw
and
ins
mov
hlt
pinsrw
pop
or
call
mov
loop
xor
sub
jno
into
test
mov
mov
jp
in
pop
movs
ins
or
dec
dec
jmp
dec
fdiv
xchg
xchg
pop
movs
rcr
jp
push
in
cdq
fdiv
jne
pushf
jmp
(bad)
imul
xlat
je
push
rcl
xchg
cdq
outs
mov
std
lea
xor
sbb
in
dec
sub
sahf
(bad)
stos
call
or
or
icebp
fwait
cmps
xor
fwait
aas
cmp
or
ret
add
ror
mov
cdq
xor
pop
call
stc
inc
and
mov
push
push
in
test
aam
test
aas
out
xchg
adc
movs
test
popf
je
loope
retf
cmp
and
push
int3
ret
mov
adc
inc
repnz
jnp
shl
push
iret
mov
mov
jge
es
dec
repnz
cld
lods
xor
mov
ret
mov
idiv
cld
sbb
js
mov
jbe
xchg
inc
push
push
push
(bad)
xlat
dec
in
inc
in
cs
fisub
scas
mov
cmp
in
fistp
daa
sti
jge
outs
jecxz
push
lea
mul
cmps
xor
add
xchg
loop
mov
cwde
je
push
pop
adc
sub
fmul
(bad)
jmp
xor
test
xor
popf
dec
lea
or
mov
mov
adc
pop
cmp
sub
add
push
ss
adc
add
xchg
test
adc
or
or
pop
sahf
push
in
idiv
cwde
inc
or
sar
mov
imul
sbb
dec
sbb
jnp
dec
adc
mov
xor
inc
sub
(bad)
fiadd
daa
(bad)
aad
adc
cmps
cmp
rcl
mov
push
fidivr
or
cmp
sub
or
shr
(bad)
sbb
out
push
shr
test
sbb
jb
inc
js
cs
(bad)
jmp
adc
jo
jmp
jmp
cmp
fxch
mov
push
jecxz
ins
jmp
jge
mov
mov
fimul
dec
jmp
dec
cdq
pop
jp
xlat
cmp
inc
enter
pop
clc
mov
in
fisubr
xor
adc
adc
outs
mov
xor
lods
shr
clc
cmp
ror
scas
xor
mov
sub
retf
push
sbb
xchg
xchg
dec
xchg
js
ins
popf
shr
fcom
in
push
xor
jmp
push
lea
pop
cli
test
dec
jb
out
jb
cmps
jmp
mov
xchg
mov
jo
cmp
cmp
clc
repz
pop
aaa
sub
lock
cmovae
ins
xchg
jmp
or
not
cmp
rol
pop
movs
dec
mov
push
movaps
fs
push
out
dec
stc
lods
fs
xor
call
ret
mov
pop
xchg
lds
dec
bound
xlat
cli
stos
out
int
hlt
(bad)
xor
stos
mov
inc
fwait
jmp
add
jae
cmp
mov
xchg
cmp
leave
out
cwde
ficomp
cdq
cld
dec
ss
test
inc
inc
in
mov
adc
pop
sub
sti
mov
repz
push
add
xor
icebp
ja
mov
fidiv
jae
mov
jmp
jecxz
mov
xchg
sbb
jle
ror
neg
xchg
and
dec
pop
mov
daa
mov
xlat
lods
gs
imul
xor
sub
mov
dec
jns
and
(bad)
cmp
sahf
jmp
xchg
mov
ds
cmp
xchg
or
ss
into
sbb
inc
cwde
sti
int
cmp
in
je
mov
cmp
jl
pop
iret
xchg
sbb
adc
fcomp
mov
sahf
ja
pop
inc
mov
dec
add
mov
repnz
bound
inc
adc
jne
add
xchg
sti
mov
iret
cmc
outs
jo
jmp
inc
lea
xchg
push
inc
jp
popa
retf
mov
es
rcl
fidivr
gs
push
cli
mov
sbb
mov
aam
mov
mov
and
or
mov
inc
xchg
das
pushf
popf
mov
cmp
(bad)
in
popa
dec
dec
test
and
add
hlt
movs
sub
(bad)
and
push
cmp
mov
(bad)
out
cmps
inc
xchg
neg
outs
and
lock
sbb
aaa
add
sbb
xchg
mov
mov
rcr
jo
cmp
mov
xchg
dec
out
or
js
aas
std
mov
pusha
push
leave
lods
pop
mov
sub
jg
fwait
adc
jb
arpl
movs
push
cli
cmp
rol
sbb
rcl
mov
jecxz
sub
das
dec
out
jae
cmp
(bad)
and
adc
fbld
xor
jnp
sbb
and
push
jno
push
aad
inc
cwde
jne
mov
xchg
(bad)
jmp
pop
mov
fwait
add
mov
jge
sub
lea
sbb
fist
retf
stos
add
jg
pop
int
adc
xchg
cmp
ins
loop
jnp
outs
sub
nop
mov
(bad)
push
xchg
and
fisubr
sbb
retf
sbb
add
pop
cmp
movs
es
xor
ja
je
pop
cmp
adc
xor
adc
mov
scas
enter
mov
pop
icebp
ja
adc
rol
into
mov
pop
sbb
jae
lock
imul
ret
pop
cwde
fldln2
imul
xchg
arpl
pop
jle
mov
mov
stc
pop
dec
rcr
inc
jge
push
sar
int
inc
xchg
and
mov
inc
test
add
or
pop
mov
ins
and
inc
ret
mov
dec
ret
ret
imul
xchg
sub
xchg
xchg
sub
jo
popa
push
push
aam
inc
sti
pop
xchg
dec
adc
and
rcr
(bad)
pop
mov
pop
sbb
int3
dec
cmp
lods
ror
fidivr
fstp
xchg
test
(bad)
or
in
xlat
(bad)
out
fsubp
das
ret
sub
and
pop
bound
push
imul
add
popf
pop
jmp
mov
pop
ret
dec
test
(bad)
push
in
ret
mov
dec
jmp
rol
mov
inc
adc
test
les
dec
xor
(bad)
adc
push
fisttp
ficomp
test
mov
xor
ds
fist
jg
(bad)
jo
xchg
in
cmc
clc
loop
aaa
std
mov
inc
shr
cs
dec
jmp
mov
xchg
mov
stos
stos
adc
stos
(bad)
sub
cmps
mov
nop
fsub
sub
cmps
dec
pusha
mov
adc
jb
lea
les
lds
inc
call
cmp
(bad)
loope
xor
aas
ins
cmp
sub
jmp
jo
cld
xchg
push
adc
sub
xchg
in
test
push
stc
add
mov
jecxz
jle
mov
int3
push
fisub
mov
pushf
sahf
in
cmp
call
cmp
ja
adc
loop
enter
sbb
sbb
ror
dec
xchg
sub
push
aas
(bad)
test
jp
call
sbb
mov
dec
out
jl
das
dec
jp
aas
pusha
adc
std
dec
int3
mov
test
inc
test
nop
dec
pushf
xor
pop
mov
mov
add
sub
cmovnp
mov
push
dec
xor
push
lds
add
aad
(bad)
sbb
pushf
sub
rcr
push
lods
xor
jl
cmps
dec
fild
inc
jb
cmp
pop
push
ds
sub
mov
je
and
clc
mov
jl
adc
inc
jo
ficom
rcl
dec
pop
xor
out
mov
mov
pop
(bad)
in
lods
mov
dec
xor
out
xchg
jecxz
sub
xchg
(bad)
pop
imul
popf
or
pushf
mov
mov
jmp
mov
repnz
mov
call
mov
pop
ds
stos
cs
inc
mov
cmp
pop
ins
jg
inc
and
push
sbb
jmp
cmp
dec
jno
or
xchg
push
mov
mov
mov
int
or
daa
lahf
int
mov
adc
sbb
inc
sahf
movs
not
mov
mov
hlt
jne
adc
fadd
xor
xchg
xchg
adc
das
pop
adc
popf
jne
adc
jle
sub
xchg
sbb
add
mov
mov
in
pop
mov
cli
mov
icebp
mov
mov
add
jne
icebp
add
cmp
cmp
inc
mov
mov
(bad)
loop
cmp
(bad)
je
jecxz
movs
push
(bad)
bound
sub
sti
rcl
jl
dec
mov
call
adc
mov
imul
bound
jp
stos
fst
jmp
icebp
popf
dec
jl
sub
fld
or
sub
cmps
cmc
mov
pop
das
rol
aad
fldenv
aam
cmp
pop
(bad)
or
inc
fs
add
mov
sbb
xor
push
push
loope
frstor
sub
pop
jecxz
adc
test
movs
cmp
xchg
sbb
inc
pop
fistp
call
push
aas
test
out
in
leave
add
mov
push
cdq
pusha
mov
mov
in
push
sub
jno
fcmovbe
add
es
cmp
fisubr
pop
adc
sahf
push
call
call
dec
test
bound
add
daa
int3
lock
mov
sub
jle
or
or
data16
movs
mov
or
out
jle
lea
pop
cmps
sbb
or
add
jl
lock
jmp
std
lds
mov
gs
mov
jbe
jae
mov
mov
bound
dec
movs
xor
dec
ss
arpl
bound
repnz
sub
inc
sub
jbe
arpl
idiv
dec
pusha
cmp
dec
fld
xchg
pop
push
add
xor
pusha
clc
adc
jbe
push
inc
adc
cli
xor
xor
lods
xchg
call
push
push
aad
add
cmp
les
and
and
mov
fwait
rcr
sbb
mov
mov
or
sbb
push
(bad)
arpl
xor
scas
or
gs
jecxz
fidiv
lods
mov
pop
aad
test
cmps
pop
push
mov
jns
mov
xchg
dec
ss
mov
jns
mov
hlt
outs
pop
adc
ror
ret
cwde
retf
mov
lods
xchg
leave
xor
lea
out
adc
test
mov
mov
loopne
add
inc
or
or
ret
xor
pop
gs
jnp
in
int
(bad)
jbe
adc
jne
jl
js
inc
jl
sub
sbb
dec
(bad)
popa
push
dec
mov
pop
sti
sbb
gs
aad
or
call
sbb
sbb
fstp
cmps
ja
pusha
(bad)
sbb
leave
pop
pop
or
and
das
xor
jbe
shl
sub
aad
add
adc
mov
mov
into
pop
test
push
shr
push
xor
fisub
sub
jp
jg
mov
xor
mov
cmp
mov
enter
jecxz
mov
fadd
xchg
int
jmp
cmps
cmp
inc
rol
sbb
stc
out
jecxz
inc
pop
mov
mov
or
mov
loopne
repnz
add
jne
fcomp
inc
inc
add
mov
aam
in
push
imul
mov
push
retf
inc
test
ret
adc
movaps
shr
mov
cmp
mov
cmp
dec
jns
sub
mov
dec
mov
or
push
loopne
push
or
inc
(bad)
sub
sub
dec
xchg
shl
adc
in
xchg
dec
lods
mov
sbb
inc
adc
das
add
rol
pop
jmp
xchg
or
push
push
sub
add
jbe
arpl
enter
jmp
sbb
pop
dec
ja
repnz
push
loop
test
in
addr16
js
dec
(bad)
mov
je
xor
(bad)
mov
movs
out
inc
mov
pop
ret
pop
mov
xlat
dec
ficomp
jnp
or
lahf
jmp
xchg
sbb
ret
mov
pop
add
not
push
retf
sti
hlt
sub
enter
and
xchg
xchg
jl
movs
cld
lds
sbb
ss
mov
cmp
sub
jns
inc
pusha
mov
add
call
and
dec
out
ins
jge
sti
lods
xchg
scas
or
mov
shr
shl
(bad)
ins
sub
inc
inc
cld
ja
in
ret
push
sub
test
cld
jmp
sbb
or
out
call
sub
out
push
or
dec
ret
push
or
test
sub
call
std
test
add
lea
stos
push
mov
fs
add
inc
xor
test
add
mov
fistp
fs
int
xchg
ins
ss
add
xlat
push
shr
fcom
test
mov
or
pop
(bad)
mov
ins
inc
in
aas
add
iret
cmp
pop
sahf
std
daa
push
sbb
mov
aas
rcl
jl
cmp
xchg
test
scas
nop
jbe
das
shr
shl
inc
mov
pop
stc
ja
push
and
mov
ret
inc
inc
cmc
push
pop
push
sbb
jmp
jmp
clc
rol
in
cmp
daa
push
mov
mov
out
fld
xchg
inc
(bad)
out
sti
outs
push
sti
call
loopne
pop
mov
pop
fcomp
popa
or
dec
lds
or
add
aas
(bad)
int3
sbb
pushf
lock
es
mov
jmp
adc
(bad)
sbb
and
xor
outs
or
in
mov
int
movs
dec
ja
jns
adc
sub
gs
and
call
xchg
add
sbb
xchg
enter
aaa
adc
push
arpl
loope
mov
js
rcr
dec
inc
rcl
jbe
lock
push
mov
push
jnp
fst
lock
xchg
mov
fistp
push
mov
mov
out
ss
repnz
mov
cmpps
ins
stc
imul
mov
and
jl
call
idiv
cs
(bad)
fdiv
inc
mov
mov
push
loopne
arpl
sbb
mov
idiv
stos
pop
adc
hlt
enter
fst
gs
imul
jae
dec
pop
xor
xchg
(bad)
mov
add
sub
lea
sbb
fnstsw
inc
pop
dec
jb
cli
nop
out
retf
and
rcl
xlat
outs
test
loopne
and
mov
jecxz
(bad)
or
in
out
sub
movs
(bad)
xlat
jnp
rcr
ins
adc
xchg
rol
cld
rcr
aam
and
test
mov
in
movs
fcomp
mov
jmp
sbb
shl
sti
mov
inc
(bad)
retf
loopne
and
sbb
dec
sahf
fwait
mov
retf
or
cmp
(bad)
xor
ficomp
test
or
cmp
xchg
or
add
xor
leave
fcomp
aaa
push
aas
cmp
neg
imul
add
mov
ja
xchg
dec
jne
pop
sub
fs
sahf
popf
push
aas
stc
adc
cmps
dec
xor
pop
add
adc
jge
repnz
pop
sar
scas
fs
xchg
inc
xchg
adc
pop
popf
movs
jecxz
push
push
call
cwd
cmp
add
shr
lahf
int
mov
int3
clc
inc
pop
test
jnp
cmp
dec
sbb
xor
cmp
pop
stc
adc
fcom
call
stos
push
push
xchg
sahf
icebp
mov
sbb
mov
mov
ds
and
ins
or
call
loope
xor
mov
push
aas
mov
scas
out
out
pop
push
mov
and
sar
test
jle
or
fsub
out
xchg
js
xchg
js
jae
cmc
xchg
push
xchg
fild
(bad)
idiv
aam
pop
xchg
cmp
shr
mov
loope
idiv
pop
or
jl
in
cmp
dec
inc
test
xlat
cli
jmp
mov
aam
std
jb
lods
jmp
call
add
xchg
jbe
push
std
lods
test
rcl
fdiv
lds
retf
bound
jmp
loopne
ins
div
xor
inc
popf
cli
iret
push
test
out
and
adc
loope
(bad)
push
cmp
ins
dec
repz
outs
cli
xor
sbb
scas
pop
jno
mov
(bad)
jo
pop
push
in
sbb
fcmovne
sbb
jmp
daa
aam
cmps
sbb
mov
sub
mov
sub
mov
fimul
retf
mov
xchg
icebp
mov
push
or
cmp
cld
sub
aam
push
jns
xchg
(bad)
popf
inc
out
pop
push
sbb
add
imul
inc
xor
scas
icebp
fcmovb
nop
mov
aam
xlat
into
dec
jle
cwde
sbb
dec
pop
jmp
ds
or
sbb
dec
(bad)
mov
stos
pop
cmp
mov
ins
fcomi
arpl
es
imul
sti
in
mov
shl
outs
dec
mov
loop
cmp
aam
dec
inc
pop
mov
mov
loopne
inc
int
jecxz
mov
xchg
imul
cmp
dec
test
dec
or
mov
xchg
test
sub
sahf
xchg
rol
mov
daa
add
adc
xchg
int3
je
xor
xor
mov
jo
inc
mov
pop
xchg
stos
sub
inc
shr
(bad)
retf
inc
and
das
aam
js
lods
push
cmps
sar
jbe
jg
jg
in
scas
mov
dec
mov
mov
push
mov
inc
out
pop
jns
lea
fs
scas
and
mov
pop
hlt
push
test
inc
mov
xor
mov
scas
add
test
ins
int
cmp
push
pushf
pop
jne
enter
sub
ret
and
inc
cmps
test
inc
pop
(bad)
mov
movs
imul
gs
xchg
imul
xor
retf
inc
(bad)
pushf
adc
gs
cmp
in
push
jl
hlt
mov
inc
cli
sub
pushf
add
pop
mov
push
in
lahf
adc
or
jnp
or
popa
push
push
out
jbe
push
(bad)
arpl
loop
shl
mov
stos
sbb
dec
repz
imul
cli
xor
aam
frstor
lahf
jle
call
dec
retf
xchg
or
out
jns
arpl
dec
lahf
sub
jmp
outs
dec
sahf
sub
sub
push
test
xor
mov
icebp
aam
push
shl
pusha
push
ret
test
xchg
jae
sub
cmp
mov
es
dec
mov
jmp
xchg
aad
fadd
scas
add
cdq
mov
rol
mov
mov
ror
dec
cld
cld
add
or
dec
lods
jl
push
js
and
retf
test
pop
dec
jl
int
push
aas
mov
mov
jne
pop
pop
push
ja
iret
adc
sti
jp
mov
xor
scas
js
int3
adc
loopne
add
xor
jmp
and
cmp
mov
jl
or
cmp
ror
lahf
fstp
aaa
sbb
ja
in
bound
ret
lahf
lods
sub
inc
add
mov
sar
pop
ss
jnp
xchg
lahf
adc
lods
inc
arpl
add
into
adc
clc
pop
add
adc
ss
repnz
push
mov
mov
stos
jae
mov
mov
pop
retf
jmp
repnz
out
dec
mov
xchg
cdq
or
pop
cld
pop
iret
pop
test
xchg
mov
xchg
je
xchg
xchg
fidivr
sub
and
jns
jbe
not
push
cmc
add
aas
das
fld
mov
jno
xor
fnstsw
je
ret
push
scas
stos
fnsave
(bad)
jp
retf
mov
mov
and
enter
loopne
and
lea
int3
aas
arpl
(bad)
repnz
add
pop
xchg
sar
pop
(bad)
xlat
sub
xor
xor
pop
test
cld
dec
cmps
push
shl
fistp
lahf
pop
jecxz
push
jns
sar
jne
hlt
jnp
xchg
cmp
ret
pop
inc
jb
sub
xor
sbb
das
dec
sahf
inc
jmp
dec
cmc
push
int
nop
out
cli
call
add
mov
fnstsw
out
test
fistp
dec
dec
rol
inc
popa
arpl
xor
jbe
cdq
jmp
jbe
sar
icebp
cmp
add
iret
adc
outs
push
ret
cwde
xor
outs
jmp
sti
push
add
push
or
or
int
lea
adc
xchg
jge
adc
adc
out
pop
aam
adc
test
je
ja
enter
sub
and
mov
out
cmps
loope
mov
adc
stos
clc
data16
mov
dec
popa
or
push
inc
jecxz
xchg
test
inc
adc
mov
mov
clc
xchg
ja
ds
xor
jecxz
or
aam
push
cmp
mov
cld
or
mov
imul
xchg
(bad)
stc
pop
je
sub
fadd
xchg
cmp
test
lahf
in
push
fdivr
add
sub
(bad)
adc
xor
in
imul
inc
mov
and
cmp
ds
mov
aas
(bad)
dec
adc
mov
xor
aaa
imul
fs
inc
or
sbb
lock
pop
sub
into
nop
inc
jmp
cmp
inc
mov
push
leave
jge
test
mov
sahf
or
sbb
xchg
push
sar
push
adc
dec
imul
stos
lock
es
push
(bad)
loopne
dec
not
ds
xchg
mov
stos
mov
movs
test
retf
push
ds
aad
mov
rcr
cmp
mov
aaa
mov
mov
sub
repnz
jmp
(bad)
retf
sub
mov
ror
call
lahf
mov
aad
les
dec
add
adc
fist
repz
sbb
lea
mov
pop
adc
cmp
fild
rol
pushf
cs
adc
std
inc
daa
imul
push
test
fld
aam
cmp
mov
add
inc
stc
int
sbb
lea
les
push
ret
inc
jbe
test
adc
and
cmp
jg
mov
daa
push
inc
ja
jg
mov
repnz
cmp
and
jge
xor
lea
int3
ds
mov
daa
mov
cmc
add
jne
call
scas
inc
sub
repnz
fisttp
out
jns
xchg
mov
mov
adc
jp
mov
mov
(bad)
push
aam
mov
jbe
mov
sbb
jb
mov
les
loopne
imul
or
rep
jp
popf
lds
fwait
dec
ss
jle
(bad)
xchg
mov
bound
outs
loop
push
fwait
mov
aaa
inc
test
daa
push
popa
xor
sub
addr16
mov
jbe
jl
out
(bad)
cld
in
push
std
imul
or
test
mov
sahf
(bad)
xchg
lahf
dec
push
mov
and
pop
das
push
xlat
or
or
ja
arpl
les
mov
xchg
dec
ss
ror
cs
add
jge
add
jno
std
mov
inc
fstp
xor
cmps
retf
popf
cs
dec
popa
pop
call
xchg
mov
xchg
cmp
cwde
jmp
or
xor
imul
aad
cmps
or
inc
test
int
dec
test
mov
ds
loope
(bad)
loopne
cmc
or
sbb
outs
bswap
mov
cli
adc
pop
fcom
and
push
and
test
ins
fadd
add
adc
sbb
inc
call
pop
daa
sti
cmp
sub
mov
retf
sti
and
call
adc
mov
sbb
in
or
push
(bad)
fild
(bad)
aaa
mov
dec
jl
(bad)
je
lods
call
or
(bad)
lods
add
fcmovb
jbe
xchg
sbb
cmc
movs
sub
retf
mov
fs
call
(bad)
and
jns
aad
rcr
jb
or
sub
idiv
or
or
inc
cdq
fild
test
enter
dec
dec
mul
push
mov
mov
mov
leave
dec
and
into
ss
lock
(bad)
cmp
aad
mov
add
xchg
sbb
push
xchg
jnp
test
sub
scas
push
ret
inc
int3
lods
pop
mov
je
out
arpl
mov
mov
inc
lods
sub
fbstp
fidiv
cdq
jl
lea
mov
and
sub
lods
and
mov
arpl
call
enter
add
mov
xchg
dec
mul
scas
adc
inc
idiv
add
cmps
ret
sub
scas
fs
mov
cmp
lahf
xlat
or
pop
mov
push
cmps
jmp
lahf
mov
out
out
cmp
jns
sbb
lods
mov
and
les
inc
add
mov
push
into
fidivr
cmps
mov
(bad)
aam
mov
xchg
mov
or
push
sti
cmp
inc
and
inc
push
mov
in
pop
xchg
mov
mul
ins
daa
and
dec
call
jne
inc
iret
fwait
adc
fadd
inc
jp
mov
cmps
fcom
mov
call
(bad)
imul
mul
xchg
add
lds
pusha
lea
aam
daa
inc
jge
stc
dec
in
pop
adc
stos
stos
stos
nop
add
add
pushf
rcl
dec
xchg
or
test
int
mov
(bad)
mov
(bad)
mov
xchg
test
adc
fidiv
into
sbb
es
jecxz
xchg
pop
xchg
data16
xor
pushf
jge
inc
hlt
mov
imul
fisub
dec
jecxz
pop
fs
imul
fdivr
cmp
dec
outs
fwait
sub
jbe
aas
sbb
imul
cmps
arpl
push
inc
rcr
xchg
in
daa
scas
bound
jo
push
fild
fistp
inc
hlt
push
jmp
inc
in
or
pop
ja
pop
adc
mov
mov
imul
jne
pushf
cwde
outs
popa
aad
sub
stc
leave
das
ror
sar
dec
arpl
jns
mulps
call
(bad)
cld
out
movs
xlat
call
sbb
mov
iret
cld
pop
fst
xchg
cld
lds
mov
mov
sbb
xor
outs
out
test
icebp
adc
pop
mov
sbb
arpl
js
push
hlt
shl
ins
movs
pop
cmp
cdq
out
ins
mov
adc
dec
inc
scas
xlat
add
ror
out
repnz
mov
mov
push
mov
mov
push
lea
xchg
popf
sbb
lods
mov
leave
and
mov
or
lods
push
push
or
xchg
push
nop
sub
xor
ja
jp
movs
stc
fdivr
rcl
dec
clc
add
push
mov
inc
scas
rcl
pop
lds
xor
cmp
fwait
adc
data16
out
dec
ror
mov
xchg
and
std
xor
pop
jmp
mov
addr16
mov
or
mov
retf
and
jnp
test
daa
neg
push
out
ja
pop
ds
cmc
fcom
hlt
fstp
cmp
(bad)
xchg
push
test
into
jecxz
mov
(bad)
xchg
out
mov
imul
nop
inc
fisttp
in
dec
jmp
push
inc
bound
push
jno
int3
jg
add
mov
ret
fnstsw
stos
call
xor
retf
(bad)
adc
push
(bad)
adc
pop
mov
pop
inc
mov
xor
out
popa
or
inc
pop
(bad)
mov
or
mov
push
and
aaa
aad
mov
pop
mov
xchg
pop
in
movs
or
test
mov
fidiv
pop
mov
hlt
push
or
inc
dec
(bad)
repz
inc
jb
push
cmp
mov
call
pusha
mov
stos
fcmovnu
in
pop
ret
pop
jmp
or
mov
fcom
add
cli
out
std
mov
(bad)
mov
nop
inc
inc
gs
dec
pop
inc
fwait
test
out
mov
jne
or
jns
iret
sbb
fucomp
adc
popf
xlat
aas
cmp
movs
jmp
mov
cmp
lods
out
xchg
sub
jmp
jmp
or
mov
int
retf
dec
mov
inc
sub
ret
cli
scas
xchg
cmp
jmp
ins
pop
jbe
dec
ins
movs
dec
pop
cld
sbb
lods
and
jle
shl
fcom
xchg
daa
or
inc
adc
aam
cmp
pop
push
iret
sub
xchg
inc
ret
mov
mov
push
sbb
ja
dec
sbb
int
mov
mov
xchg
adc
cwde
mov
shr
movs
jg
jae
push
movs
out
sbb
scas
cmp
retf
ins
jle
movs
aam
pusha
jne
mov
push
or
lahf
mov
push
fstp
aam
push
sbb
addr16
push
or
das
mov
inc
add
jbe
rcl
xchg
sbb
mov
xchg
call
pop
sub
iret
in
and
cmp
pop
add
aam
(bad)
(bad)
pop
mov
inc
jae
in
add
sub
xchg
dec
inc
cmp
mov
aaa
rol
add
ss
not
aam
inc
pop
xchg
enter
aam
sub
stos
pop
jae
mov
push
test
push
inc
pusha
jg
xor
jg
pop
repz
neg
dec
inc
test
xor
push
push
fiadd
add
movs
mov
jl
data16
fwait
ins
shl
(bad)
mov
ss
js
adc
(bad)
in
jne
addr16
in
xchg
cmp
inc
in
ins
aam
mov
jge
xchg
sub
mov
cli
push
lods
sbb
cwde
mov
pop
jecxz
pop
(bad)
jnp
cwde
cld
sbb
rol
xchg
dec
and
pusha
jo
into
cmps
inc
jbe
in
dec
or
inc
(bad)
popf
xchg
pop
mov
js
mov
adc
push
mov
cmp
dec
clc
aad
sub
aad
push
jmp
mov
inc
cwde
and
(bad)
iret
cmps
popf
adc
int3
les
mov
push
xor
jge
pop
out
cdq
sar
out
addr16
sub
xchg
push
shr
push
ret
push
mov
iret
jecxz
fiadd
ins
lods
mov
inc
mov
mov
in
fs
lds
jae
adc
inc
push
jb
mov
cmps
mov
fidivr
sar
mov
jecxz
adc
pop
cmps
shl
cmp
loopne
punpckhbw
movs
dec
retf
sahf
mov
imul
dec
mov
fyl2x
cmps
leave
test
xor
stos
add
cmps
je
repz
mov
inc
and
clc
jle
addr16
outs
gs
cmp
pop
xchg
shl
add
xor
cmp
test
push
js
mov
push
dec
sub
jge
add
aam
daa
fs
inc
add
iret
fs
mov
sub
rol
add
movs
aaa
push
sar
dec
xlat
movs
(bad)
lods
stos
mov
xor
push
mov
bound
fsub
push
ret
popa
inc
out
push
int3
js
adc
sbb
sbb
ins
cmp
jp
ins
call
rcr
xor
cmp
popf
inc
or
das
icebp
adc
idiv
popa
sub
lahf
lea
popf
test
push
cmc
jecxz
and
fbld
outs
pop
or
jo
stc
repnz
loopne
fild
mov
cdq
mov
pop
inc
sub
inc
call
mov
jnp
jl
out
push
add
ja
popa
jne
adc
sub
pop
xor
jno
imul
cmp
mov
jne
jp
lea
out
add
xor
fisub
xchg
lea
and
adc
jne
aam
je
aad
dec
dec
cdq
mov
and
dec
push
or
and
sub
shl
and
cmp
push
pop
sbb
test
retf
dec
add
out
mov
push
fdivr
stos
lds
mov
lds
stos
fxtract
push
shl
mov
xchg
vaddps
das
hlt
cmp
sbb
adc
in
cwde
out
and
adc
pop
push
das
popf
mov
jmp
adc
outs
lods
dec
(bad)
sub
cmp
push
lock
push
mov
add
pop
mov
push
sbb
xchg
lahf
push
test
push
cdq
in
ret
sbb
sbb
push
out
fst
xor
jle
ja
aad
and
sti
ss
dec
push
movs
or
das
cwde
mov
lods
in
sub
ins
push
jecxz
out
add
repz
jo
push
fstp
icebp
jecxz
jl
xchg
mov
dec
sbb
ja
sub
xor
mov
cdq
xor
push
dec
push
loopne
ja
sbb
xor
cmc
add
cmc
fild
jno
jmp
cmp
xor
sub
loopne
stos
inc
mov
dec
iret
dec
loopne
push
dec
into
ja
test
cmp
scas
aam
shl
mov
xchg
call
cmp
fisttp
scas
dec
or
nop
test
mov
sbb
inc
or
mov
mov
xor
jle
fs
(bad)
sbb
in
int
loop
dec
and
mul
cmps
pop
inc
fadd
ja
jecxz
leave
inc
dec
mov
sub
xor
mov
jle
add
sbb
into
fdivr
push
fwait
add
cmc
mov
sub
mov
push
cmps
cmp
test
and
loop
pop
and
movs
loopne
test
jbe
lock
mov
jle
test
(bad)
mov
(bad)
int
add
xor
test
xor
xchg
mov
dec
out
sbb
aaa
fdiv
dec
sub
and
mov
cmp
push
add
aad
retf
call
in
pop
pop
or
jle
sub
or
fistp
rol
mov
sahf
test
retf
shl
or
out
and
test
jle
shl
pop
xor
in
cmp
mov
nop
sub
xchg
mov
std
lock
cmps
xchg
pop
lea
ins
pop
ret
test
and
(bad)
mov
sbb
jg
mov
jns
in
add
adc
scas
cmps
iret
sub
inc
sbb
xor
inc
push
out
test
je
inc
mov
icebp
sub
ret
ja
or
and
pop
mov
dec
(bad)
pushf
sub
push
mov
and
pop
ret
mov
leave
hlt
push
mov
mov
ins
out
dec
xchg
jno
jge
fstp
cmp
(bad)
inc
or
daa
retf
dec
or
xchg
test
ds
xchg
push
xor
sub
or
push
xor
or
cmp
cs
lahf
repz
lahf
cld
push
jo
in
not
arpl
or
(bad)
jle
xchg
jg
test
fldcw
sub
aaa
cld
and
je
adc
addr16
aas
enter
pop
out
sbb
mov
call
or
and
jge
pop
aam
aaa
pusha
mov
ret
pop
ss
mov
clc
(bad)
jno
neg
mov
sahf
sbb
jp
mov
(bad)
int
idiv
sahf
int
adc
add
xlat
xchg
jle
je
jecxz
pusha
stc
xor
jbe
adc
sub
sti
jo
cld
stc
test
mov
clc
rcl
pop
mov
mov
inc
mov
xor
out
out
mov
es
test
jmp
mov
daa
test
xchg
or
cmp
push
xchg
mov
mov
cli
outs
xchg
ror
das
cmp
fwait
dec
(bad)
sub
xchg
ret
jmp
inc
shr
fdiv
dec
jno
repz
push
jbe
jecxz
iret
xchg
jecxz
enter
push
adc
in
mov
push
in
xchg
push
sar
aad
mov
mov
and
adc
sub
pushf
test
jns
movs
mov
iret
dec
cmp
(bad)
jmp
loope
clc
sahf
xor
jg
mov
je
mov
add
sub
fsubr
push
push
add
fdivr
enter
lods
xchg
int
rol
jp
scas
outs
leave
mov
out
icebp
cwde
cs
int3
push
xchg
test
inc
push
popa
mov
mov
lahf
ins
push
das
sub
mov
jbe
mov
jecxz
sbb
movs
mov
jne
call
repnz
mov
push
pop
(bad)
sbb
push
push
mov
aaa
xlat
mov
sub
call
ins
ror
into
ja
push
pop
push
mov
repnz
xor
aam
shl
cmp
mov
sbb
mov
scas
push
mov
and
in
cwde
and
aaa
(bad)
mov
loope
outs
xor
mov
xlat
pusha
sbb
xchg
leave
mov
cwde
xor
idiv
dec
neg
inc
popa
fs
in
mov
cmp
hlt
push
aas
xor
ins
mov
mov
fdivr
mov
jb
das
aam
pop
sub
mov
adc
push
sbb
inc
jno
pop
lock
cmp
mov
mov
xor
cs
pop
push
mov
pop
rol
add
xor
cwde
add
out
je
jmp
lahf
and
inc
ds
sbb
and
adc
cmp
mov
aad
sub
jmp
mov
mov
pop
push
popf
jne
mov
push
mov
cmp
gs
cdq
outs
push
shr
jmp
adc
dec
or
push
js
outs
mov
add
sbb
data16
fdiv
test
or
inc
in
xor
rcl
daa
nop
dec
ds
fmul
and
hlt
js
mov
dec
cmp
sub
or
dec
mov
and
pop
in
es
fs
push
pushf
ins
cmp
xor
aaa
iret
sub
mov
xchg
push
dec
push
adc
pop
aaa
std
fmul
into
hlt
xor
pop
xchg
sbb
gs
jecxz
inc
mov
xchg
adc
and
push
mov
xchg
sub
cmp
clc
mov
ja
and
mov
mov
adc
and
cli
mov
repnz
bound
adc
dec
xchg
push
cmps
test
mov
dec
dec
cdq
(bad)
stc
mov
aam
out
clc
sbb
enter
lahf
jnp
shl
inc
jle
outs
push
ror
push
push
dec
dec
xor
and
pop
inc
and
daa
pop
jbe
adc
in
or
push
and
je
add
jg
rol
adc
mov
test
push
xchg
(bad)
imul
loope
or
sbb
cmp
xor
inc
xor
jb
sbb
movs
(bad)
jne
arpl
push
dec
ret
or
mov
ficom
movs
ins
and
jmp
mov
int
xchg
hlt
sbb
call
dec
sub
push
jnp
mov
push
xchg
mul
dec
pop
test
jge
mov
or
mov
out
loop
mov
mov
xchg
ror
inc
cli
inc
ret
les
sbb
xchg
lea
mov
arpl
fsub
rcr
popf
stos
ror
mov
lds
jle
sbb
mov
in
xor
xchg
fst
cmp
mov
aas
xor
aam
mov
jmp
loope
das
sub
mov
mov
or
enter
sbb
xchg
mov
sub
inc
pop
aam
mov
ins
mov
aaa
dec
out
out
outs
push
retf
sub
call
fwait
cmps
or
push
shl
sbb
xchg
xchg
imul
scas
loop
inc
add
mov
dec
scas
dec
push
in
mov
jge
cdq
inc
out
mov
sub
div
scas
loopne
mov
pushf
dec
add
mov
in
popf
lds
inc
and
(bad)
jmp
in
add
mov
pusha
and
popa
add
clc
cmp
push
ss
dec
fld
mov
popa
xor
cwde
push
sbb
mov
das
cmp
adc
pop
bound
lea
and
sub
test
pop
mov
je
cmps
aam
js
push
pop
shl
adc
popa
mov
sbb
cmc
adc
jmp
push
cli
hlt
shl
inc
adc
pop
aad
cs
cmp
imul
dec
cli
mov
lock
inc
movs
dec
cli
leave
repz
cs
aad
dec
pop
push
fwait
cli
or
mov
out
dec
pop
mov
out
jne
hlt
lea
inc
inc
or
dec
push
std
(bad)
hlt
(bad)
loope
and
ss
inc
dec
cmp
inc
xlat
pop
aad
ret
and
scas
sub
std
inc
aaa
xchg
sub
or
call
dec
in
leave
add
(bad)
repnz
pop
lea
mov
sub
push
cli
iret
push
mov
cmp
in
dec
gs
mov
ret
nop
pushw
jb
inc
out
inc
fst
and
and
jecxz
adc
jmp
mov
retf
repz
xor
jne
and
push
mov
push
or
shl
mov
dec
fsub
pop
rol
scas
mov
and
sti
ds
dec
stc
ds
mov
jne
sbb
popa
dec
xor
push
ss
cmc
jns
sbb
(bad)
ret
xchg
adc
cmps
nop
inc
ror
push
pusha
arpl
(bad)
call
out
scas
jmp
cmp
xchg
imul
push
ret
push
mov
sub
or
mov
movs
stos
ins
push
jl
add
outs
push
add
mov
test
lock
mov
jb
pop
jno
ins
and
int3
addr16
shr
in
jo
std
dec
(bad)
int3
pop
adc
pop
mov
out
jnp
ja
test
cmp
dec
jns
sbb
xor
hlt
pslld
add
or
ret
push
shr
repz
and
jge
aad
push
lock
fcmovnu
xchg
xor
jmp
fstp
test
fs
xchg
jae
out
out
stos
mov
xor
mov
into
or
and
imul
nop
rcl
mov
aam
fcmovb
out
sub
mov
or
fisubr
cwde
mov
jp
cmps
sbb
les
test
(bad)
xor
ds
push
jmp
xor
and
std
repnz
jns
es
popa
cmp
dec
xchg
test
cli
ja
inc
cmp
fs
xor
call
dec
clc
jns
jns
sbb
mov
xor
mov
data16
ss
(bad)
jle
int3
ds
or
mov
in
rol
loope
mov
xchg
aam
inc
js
ins
std
sbb
jge
push
fs
fst
ficomp
pop
dec
jp
cld
mov
mov
lock
xchg
addr16
pop
sbb
mov
ret
out
fstp
(bad)
pushf
push
mov
xchg
repz
int3
xor
popa
ins
vpunpckhqdq
pushf
repnz
cmp
pop
test
sbb
outs
fs
(bad)
push
ja
ins
jb
popa
pop
push
xor
mov
ins
mov
push
mov
sbb
out
mov
mov
push
and
add
mov
imul
out
sub
hlt
pop
cpuid
jne
pop
xchg
lock
bound
fsubr
mov
(bad)
jmp
xchg
and
mov
xor
mov
js
adc
rcl
in
inc
or
test
arpl
mov
push
rcl
mov
and
(bad)
lahf
adc
fwait
mov
add
mov
xor
repnz
mov
sub
hlt
data16
mov
cmovb
ins
aaa
(bad)
cmp
lea
cmp
lds
daa
shl
sar
ss
int
cwde
dec
mov
imul
jge
push
ins
sub
mov
mov
rcl
pop
mov
or
mov
xor
mov
push
leave
fwait
(bad)
adc
repnz
xor
adc
mov
movs
or
mov
ficomp
cmp
inc
push
pop
add
int3
cdq
ja
pusha
test
dec
lds
jmp
pusha
mov
js
test
jmp
mov
rol
test
xchg
(bad)
loopne
sbb
mov
xchg
mov
inc
sti
out
(bad)
test
or
inc
mov
jle
pop
or
mov
cwde
test
add
push
imul
mov
shl
repz
inc
push
inc
ret
aam
add
mov
push
push
mov
sbb
imul
cwde
inc
inc
mov
push
cmp
cmps
xor
xchg
or
(bad)
call
iret
mov
nop
inc
loop
xchg
in
loopne
pop
stos
dec
fiadd
test
mov
stos
jns
mov
shl
dec
into
or
cmovl
jo
push
repnz
xor
mov
dec
sbb
or
test
push
cwde
mov
imul
arpl
fsub
sbb
bound
(bad)
clc
int3
cwde
fcomp
mov
mov
inc
dec
popf
cmp
push
in
and
and
cld
mov
cld
aas
in
sti
push
pusha
add
jbe
into
pop
(bad)
mov
xor
adc
or
bound
scas
out
push
push
into
xor
or
jp
and
rcr
lods
int3
dec
lods
dec
rcl
daa
(bad)
pop
or
mov
cwde
rol
dec
dec
push
xor
rol
jp
jmp
jbe
nop
and
mov
jecxz
fwait
fs
xor
or
sub
stos
jl
mov
retf
cmps
jnp
add
sbb
push
xchg
pop
jo
jnp
lods
mul
sub
inc
and
xor
ss
push
outs
movs
fstp
(bad)
test
(bad)
ins
push
mov
shl
shl
mov
push
push
dec
frstor
fmul
iret
jle
fisubr
xchg
inc
pop
or
(bad)
jns
sub
fs
push
or
clc
dec
(bad)
hlt
jg
test
mov
mov
pop
mov
mov
mov
xchg
sbb
outs
out
int
xor
push
cdq
imul
sti
test
hlt
and
fst
xchg
sar
push
mov
xchg
sub
rcl
fisub
jno
jle
push
push
aad
sbb
inc
dec
mov
enter
in
sub
(bad)
cs
fbld
xor
cwde
in
adc
pop
mov
jo
jnp
lock
jl
rol
mov
xchg
cmc
pop
jg
mov
push
jl
(bad)
test
mov
mov
mov
pop
add
push
push
add
add
sbb
popa
stos
xchg
push
mov
mov
push
iret
jne
scas
loopne
mov
lods
dec
jl
shr
shl
dec
push
cmps
shl
push
xchg
or
jnp
jge
mov
pop
(bad)
adc
dec
retf
fld
fist
in
add
dec
and
add
adc
push
jge
xchg
adc
aad
dec
cdq
xchg
pop
pop
mov
lds
fs
sbb
mov
push
mov
mov
and
lock
cmps
enter
int3
cmp
and
jno
sub
out
jae
outs
xchg
movs
retf
(bad)
xor
cs
and
(bad)
arpl
fisub
mov
int3
retf
loop
xor
adc
imul
neg
and
fmul
jmp
mov
aaa
adc
sub
xchg
xchg
push
repz
in
jp
inc
shl
sbb
hlt
xor
sbb
lock
cs
retf
push
lds
lahf
mov
adc
std
test
loope
addr16
xchg
int3
(bad)
fs
jmp
and
mov
mov
add
loop
ret
cmps
jb
mov
shr
push
ss
xor
out
or
not
and
repnz
imul
not
sub
pop
pop
push
push
cmp
cdq
cmps
pop
xor
jmp
aam
mov
xchg
into
repnz
jnp
push
je
jecxz
lds
mov
ja
xchg
call
jbe
bound
fs
loop
enter
(bad)
lahf
cdq
xchg
adc
mov
test
imul
ja
imul
adc
ins
push
out
jp
repnz
adc
aaa
test
rcl
mov
(bad)
fsubr
pop
daa
sub
fnstenv
(bad)
ret
jno
and
or
fisttp
mov
(bad)
mov
cmp
rcr
mov
push
ins
hlt
adc
and
gs
nop
xchg
xor
in
mov
dec
push
sub
leave
test
fsub
mov
fisttp
dec
leave
fild
cmp
mov
fmul
cmps
imul
jl
push
lods
push
gs
push
sbb
dec
sbb
mov
sbb
rol
dec
movs
imul
call
xor
jmp
adc
dec
(bad)
scas
in
sub
std
xlat
rcl
push
adc
inc
lods
mov
in
cmps
xchg
pop
fnsave
mov
loop
lock
psrlw
sbb
(bad)
mov
jp
dec
popf
ins
push
xchg
jne
push
mov
gs
cmps
and
push
popa
rol
imul
push
stos
sub
cmps
pop
sti
gs
sub
push
or
aam
pop
rcr
jae
cmp
mov
inc
js
push
jmp
push
loopne
addr16
aaa
jno
cmp
inc
mov
pop
aad
push
jne
xor
push
aaa
outs
push
push
sub
and
imul
shl
cdq
outs
jle
fimul
fdivr
xor
lods
mov
adc
sub
cli
sar
mov
mov
pop
sub
add
dec
dec
push
fwait
cmp
js
loop
jmp
inc
stc
iret
cld
not
and
stc
add
mov
mov
out
faddp
inc
xor
loope
popa
pop
sbb
arpl
xor
adc
cmp
lods
neg
pop
sbb
sub
lods
fsubrp
dec
js
mov
push
mov
adc
sbb
in
push
jbe
rol
hlt
or
xor
fimul
dec
std
push
out
fdiv
xlat
(bad)
pop
or
cmps
out
sbb
aaa
mov
mov
push
push
loop
inc
aaa
ja
add
and
ja
ja
dec
(bad)
movs
das
adc
jg
scas
sub
(bad)
inc
or
popa
dec
sub
ins
mov
add
retf
repz
add
pop
call
or
xchg
(bad)
inc
or
arpl
add
or
cmp
dec
push
push
and
movs
add
add
xchg
jne
xchg
jle
(bad)
ja
mov
xor
add
fwait
stos
sub
push
dec
loope
call
cmps
mov
cmp
pop
push
stos
mov
dec
ret
cli
ins
sbb
leave
push
adc
lahf
in
pop
sbb
xchg
ins
fwait
sbb
pusha
cli
std
int3
adc
fsub
addr16
lds
pop
lahf
sub
clc
icebp
sub
push
aad
mov
mov
or
mov
add
mov
into
xchg
xor
jmp
dec
xor
dec
pushf
pop
clc
fidivr
xor
dec
mov
retf
push
iret
inc
in
push
mov
das
inc
adc
xchg
es
iret
fnsave
aam
sub
cmp
mov
into
mov
test
sbb
ret
xor
push
jle
retf
fcmove
pop
in
dec
push
sub
push
aam
cli
inc
loop
jecxz
xor
pop
jae
stos
das
into
mov
mov
aad
outs
test
test
gs
cdq
std
add
pop
mov
jle
(bad)
aad
fistp
movd
and
inc
arpl
pop
dec
mov
pop
(bad)
test
jecxz
ins
aas
inc
dec
stos
mov
sub
pop
xchg
(bad)
jo
mov
cmp
and
lahf
scas
test
mov
in
mov
xchg
dec
pusha
retf
sbb
fbld
adc
movs
mov
xor
inc
jbe
and
rdmsr
inc
sbb
aaa
inc
mov
jmp
not
inc
or
out
mov
or
pop
dec
sub
push
xlat
jnp
mov
ficom
mov
clc
adc
cmps
gs
ret
and
mov
je
dec
push
jno
iret
push
cmp
adc
inc
cli
(bad)
xor
or
xchg
test
cwde
xchg
mov
xchg
out
cmp
or
mov
out
leave
ins
fcmovu
test
cs
xor
push
adc
pop
imul
mov
mov
icebp
cmp
inc
sbb
xor
rcl
xchg
jns
sub
xlat
mov
fdiv
xchg
and
js
push
enter
push
daa
stos
retf
daa
add
loope
xor
into
aad
mov
jmp
dec
add
add
stos
iret
retf
pop
ficom
out
xchg
cmp
cmp
push
(bad)
push
xchg
or
sbb
cld
clc
or
fistp
xor
xchg
or
inc
mov
rcl
call
push
xchg
mov
cmps
push
or
aaa
push
jge
mov
sub
dec
add
aas
mov
test
loop
fbld
or
xor
pop
or
je
rol
in
add
div
inc
fwait
dec
retf
or
shl
es
not
xor
and
mov
or
and
call
cmp
sub
sbb
mov
adc
jecxz
inc
iret
mov
fidiv
add
jns
or
mov
mov
movs
mul
jecxz
aam
dec
mov
mov
sbb
shr
rcl
fst
and
lods
push
ins
mov
mov
jmp
cdq
mov
lods
and
repnz
cwde
test
mov
test
dec
arpl
pop
lods
jp
ins
jae
cld
dec
loopne
fs
fild
fldenv
cmps
cmp
sbb
(bad)
movs
xchg
xor
retf
xchg
idiv
test
outs
inc
mov
push
add
cmp
mov
jne
xchg
or
adc
add
xchg
stos
leave
scas
lahf
xor
je
outs
mov
mov
push
add
js
xlat
cmps
mov
mov
pushf
adc
mov
adc
xchg
in
cmc
xor
jnp
out
lock
jecxz
ins
or
ret
in
pop
cmp
or
xchg
dec
call
adc
sbb
cmp
add
fnstenv
mov
and
jnp
cdq
pop
mov
ds
and
in
arpl
faddp
push
cmp
fs
dec
sub
mov
jmp
mov
pop
xor
adc
xchg
es
fsub
jbe
mov
push
jb
leave
dec
inc
std
mov
leave
repnz
icebp
push
xor
test
(bad)
mov
in
cmp
or
mov
xchg
aaa
loope
es
pop
repz
pushf
jnp
(bad)
xchg
ins
loop
and
sbb
jmp
test
dec
inc
loope
je
add
mov
ja
dec
sub
inc
mov
mov
and
jae
jns
call
test
in
in
push
dec
sub
das
jns
xchg
and
pop
xchg
pop
mov
div
test
jns
sbb
mov
retf
jmp
mul
add
dec
cmps
movs
or
pop
pop
popf
pop
in
aaa
das
jne
les
sbb
sti
bound
xor
(bad)
push
or
stc
push
test
sub
mov
rol
mov
jle
and
stos
imul
inc
push
jb
dec
xchg
icebp
push
and
jecxz
shl
mov
xor
jecxz
jmp
out
and
stc
iret
(bad)
push
or
ret
call
sub
fdivrp
mov
sbb
mov
lea
adc
and
pop
sbb
int3
push
pop
ds
sbb
or
bt
out
dec
sar
cdq
mov
mov
sbb
xor
xor
xchg
hlt
or
push
inc
pop
xor
xchg
or
repnz
mov
pop
mov
ret
xor
inc
gs
pop
sahf
xlat
push
dec
daa
sahf
ret
inc
shl
sbb
push
lds
aas
(bad)
(bad)
clc
pop
js
sub
xchg
push
lea
gs
jae
mov
sar
xchg
pop
adc
mov
rcr
add
xchg
mov
stos
movs
inc
pop
jmp
inc
ja
or
cli
add
mov
rol
pop
mov
push
in
sar
jns
inc
lods
push
test
dec
jns
pop
mov
xchg
sbb
in
and
mov
push
push
pop
(bad)
call
popa
sbb
inc
and
retf
test
mov
int3
adc
iret
imul
push
push
imul
inc
pop
or
in
stc
pop
jge
mov
scas
repnz
sub
xchg
or
push
pop
add
inc
movs
(bad)
scas
hlt
xchg
mov
mov
xor
dec
inc
movs
pop
mov
popa
rcr
inc
ror
xchg
xchg
jae
idiv
stos
mov
sub
push
xlat
or
sub
mov
sbb
std
sahf
shl
cdq
dec
jge
rol
test
out
jne
mov
mov
stos
mov
das
pop
inc
imul
retf
pop
stc
pop
push
xor
cli
mov
mov
imul
dec
or
test
sbb
movs
gs
inc
adc
cmps
outs
mov
mov
or
sbb
jnp
mov
xchg
mov
(bad)
inc
ja
test
add
rol
jns
inc
stos
je
shr
ror
xor
outs
add
or
popf
popf
fist
sbb
push
mov
push
in
pop
jne
fmul
test
jecxz
xor
dec
add
test
ss
inc
sub
(bad)
add
cmc
push
xchg
scas
xlat
mov
pop
xor
mov
mov
ss
adc
add
les
(bad)
mov
mov
aad
call
retf
into
sub
pop
inc
jo
mov
call
loop
movs
pop
xchg
inc
adc
inc
jno
push
adc
inc
iret
pop
into
fist
mov
call
mov
lahf
inc
jae
movs
push
aad
shl
test
mov
jle
ret
stc
push
daa
xchg
adc
xchg
shl
lahf
aad
or
jp
call
xor
adc
rcl
dec
add
mov
cmp
dec
or
xor
in
call
les
mov
sub
loop
push
mov
add
mov
cmp
data16
int
adc
retf
mov
xchg
icebp
fimul
nop
sub
retf
mov
and
add
pop
sbb
jbe
pop
push
scas
xchg
bound
(bad)
mov
in
adc
adc
jbe
les
sub
fnstenv
mov
call
sbb
mov
mov
push
cmps
add
xchg
pop
cs
outs
pop
mov
inc
xchg
jb
call
xor
mov
sbb
mov
pop
gs
das
dec
or
and
lea
int
in
test
inc
fadd
repnz
ins
jo
ins
test
(bad)
bound
xor
pop
adc
sti
inc
les
cmp
mov
test
pop
push
mov
push
cdq
mov
jl
and
fucomip
cmp
xor
mov
fbstp
aaa
and
daa
test
mov
data16
lds
(bad)
imul
dec
cmp
push
nop
and
xor
cmovae
std
mov
mov
mov
rcl
dec
pop
inc
mov
pop
dec
pop
mov
test
(bad)
jae
inc
les
xor
pop
mov
push
scas
jecxz
jne
mov
xor
or
and
push
fs
popa
rol
je
stos
cmp
pop
jecxz
in
shl
and
(bad)
mov
stos
ins
cmp
push
jbe
cmps
cmc
shr
pop
mov
jns
fild
arpl
jno
dec
popa
retf
inc
aas
(bad)
pop
xchg
cdq
push
xchg
xchg
adc
sbb
fwait
add
xchg
mov
and
mov
mov
stos
mov
push
xor
pop
adc
pop
adc
fdivr
out
mov
(bad)
scas
mov
sub
je
fdivr
test
adc
fs
xor
pushf
aam
sbb
xchg
xor
shl
cs
inc
test
cmp
add
inc
mov
add
mov
rcr
pop
cmc
popa
pop
in
loope
or
cmp
xor
hlt
xor
rcl
pop
jg
mov
jl
cwde
mov
pop
call
(bad)
inc
icebp
cmp
fs
xor
pop
jmp
sub
and
lahf
sbb
mov
and
add
inc
aaa
inc
jne
ret
push
fnstenv
int3
mov
(bad)
and
mov
ins
aam
mul
jb
nop
addr16
pop
(bad)
fsub
or
dec
fnstenv
xacquire
repz
outs
(bad)
pop
inc
stos
inc
dec
js
lods
xchg
repz
add
sahf
sub
mov
scas
sbb
pusha
inc
cmps
sar
fild
js
pop
and
es
mov
mov
cmp
daa
push
cmp
jns
mov
test
and
sbb
jecxz
add
mov
loopne
sbb
cmc
inc
in
test
mov
test
clc
push
xor
xor
rol
sbb
cmp
jo
push
fwait
cwde
jle
pushf
outs
(bad)
sbb
mov
call
clc
inc
cld
and
sub
dec
bound
enter
out
clc
mul
mov
bound
cmp
jbe
add
es
fisttp
inc
inc
pop
out
neg
daa
jo
jecxz
loop
jecxz
iret
imul
rcr
xor
(bad)
(bad)
jg
shr
add
test
movs
hlt
fstp
mov
add
mov
cmc
ds
add
jmp
int
cmp
loope
out
pusha
pop
(bad)
repnz
dec
mov
or
fsub
ret
jns
cmp
fiadd
mov
jmp
in
mov
jns
xchg
inc
sub
and
mov
xor
adc
aad
add
and
cli
xor
add
mov
fwait
and
mov
outs
pop
push
jmp
jne
jecxz
fs
sbb
inc
push
jmp
sbb
inc
lods
fdivp
mov
leave
cdq
or
sti
aaa
or
int
sub
ins
inc
popa
cdq
inc
sub
mov
xor
(bad)
jmp
mov
dec
lock
lods
cmps
jp
retf
lahf
pop
clc
frstor
mov
jo
loop
icebp
push
pop
xchg
(bad)
jnp
or
inc
stc
lods
xor
sub
retf
mov
repz
and
(bad)
cmp
adc
out
push
ret
mov
adc
adc
sbb
lea
arpl
dec
xor
std
imul
pop
mov
punpckhbw
mov
xchg
in
ins
jno
ret
add
ss
not
imul
jo
pop
adc
dec
pushf
jmp
pop
inc
data16
jp
mov
and
mov
pop
adc
jp
shr
xchg
nop
retf
cwde
sub
sbb
jmp
sub
ds
bound
pop
jg
ror
shl
push
nop
pop
in
ret
daa
cmp
pop
bound
(bad)
dec
inc
mov
mov
mov
xlat
retf
inc
out
xchg
jge
pop
shl
mov
mov
inc
loopne
mov
cmps
mov
pop
inc
push
lods
inc
imul
sub
xor
loopne
xchg
xchg
or
shl
(bad)
mov
arpl
popa
pop
xor
sub
jns
nop
jmp
mov
or
xchg
cld
dec
add
xor
xor
jge
clc
lahf
jo
cmp
mov
jge
aaa
jbe
cdq
jge
mov
and
and
shl
inc
hlt
fldpi
aas
xor
dec
loop
or
pop
adc
icebp
das
sub
xchg
inc
in
inc
jae
jmp
add
addr16
cmp
sbb
call
sub
fisubr
sub
push
push
xor
cmp
jo
lea
out
loope
mov
lea
fsub
cmp
dec
mov
mov
lock
push
cdq
stos
(bad)
adc
imul
xchg
cmps
ins
sub
push
pop
cld
xlat
mov
leave
mov
push
xchg
cmps
mov
xchg
ficomp
popa
retf
in
push
or
into
(bad)
dec
push
fidiv
int3
call
xchg
pop
sub
sub
popw
mov
jl
scas
fst
call
loop
push
lahf
mov
pop
fs
jle
inc
mov
xchg
adc
fcom
xchg
inc
sar
mov
cmp
adc
in
pop
jns
mov
out
daa
push
sbb
jl
or
mul
ret
pop
inc
sub
sahf
push
pop
mov
fdivr
ds
cmp
fwait
retf
cdq
and
pop
adc
lock
push
xchg
loop
call
shl
aad
mov
ret
and
mov
cmps
nop
(bad)
jl
inc
and
in
mov
data16
lods
out
es
mov
mov
loope
pop
call
add
mov
cmc
fidiv
pusha
(bad)
fisubr
fisttp
push
cmp
leave
push
inc
sbb
inc
lahf
mov
loope
jno
jmp
or
loop
ins
bnd
or
test
mul
mov
add
jb
cs
movs
inc
neg
jne
mov
mov
xchg
inc
neg
hlt
(bad)
aam
retf
or
loop
add
lods
sbb
cmc
out
xchg
fwait
or
hlt
cmp
(bad)
mov
dec
cmp
xchg
ret
xor
xchg
aam
loop
ins
dec
popa
push
or
adc
dec
(bad)
in
dec
sub
add
push
xor
or
fiadd
push
xchg
jns
sub
shl
sub
enter
pop
and
adc
dec
loop
cdq
sbb
in
imul
sub
pushf
mov
mov
lahf
popf
push
(bad)
nop
cmp
jb
add
cmc
es
jns
(bad)
add
xor
repnz
push
mov
xchg
outs
cmps
lea
out
ret
push
(bad)
(bad)
and
inc
mov
pop
outs
jne
ja
adc
mov
inc
add
stos
xchg
jl
and
(bad)
jae
xchg
xchg
int3
pop
sbb
pop
dec
and
cmps
(bad)
call
sbb
fstp
adc
jecxz
push
cli
lods
xchg
test
push
xor
jo
int
(bad)
sbb
pop
test
jmp
push
icebp
sub
loop
adc
pop
and
xchg
daa
imul
and
in
mov
xchg
movs
pop
mov
pop
sti
imul
jns
jl
cmc
hlt
repnz
sub
rcl
ret
pop
out
dec
pop
and
and
data16
fisttp
arpl
test
lock
retf
jb
dec
daa
pop
mov
pop
js
add
mov
into
addps
leave
xchg
push
mov
and
mov
cmc
mov
or
les
sub
fcom
and
push
test
or
imul
rcl
aad
addr16
rol
je
add
aas
pop
xchg
fild
sub
dec
dec
pusha
jnp
dec
xor
and
pop
div
in
call
pop
out
mov
pop
mov
add
or
xor
sub
mov
retf
and
jmp
and
outs
mov
xor
call
test
(bad)
ja
test
int3
addr16
out
pusha
in
mov
dec
clc
mov
pop
test
stc
cwde
jae
and
scas
imul
xchg
xchg
sbb
push
arpl
sbb
mov
icebp
mov
repz
pop
xor
and
sbb
xor
es
sub
jb
mov
stos
iret
inc
pusha
mov
iret
xor
push
ds
fwait
sub
sbb
xchg
or
retf
cld
aad
and
dec
xchg
(bad)
out
jl
jo
xor
(bad)
mov
sub
cmp
mov
push
int3
dec
pop
sub
xchg
adc
(bad)
outs
in
dec
mov
jnp
js
call
xlat
push
pop
sbb
addr16
in
pushf
mov
push
inc
dec
xchg
cmovns
ret
inc
lock
push
pushf
mov
jecxz
cmp
jbe
loopne
pop
or
fstp
addr16
div
xchg
jle
neg
mov
xor
push
fdivrp
mov
jb
jnp
pop
sbb
ficom
cli
cmp
adc
xchg
sub
add
ins
les
loop
jle
scas
sub
xor
sti
aas
pop
in
sar
pop
push
jns
mov
aad
push
loope
push
in
shl
pop
imul
jne
imul
xlat
rcl
fist
rcr
sbb
adc
pop
adc
pop
in
mov
into
enter
cmp
sbb
movs
and
adc
neg
jnp
stos
js
call
jno
cwde
cmps
or
cmc
pop
or
jne
dec
mov
xor
sub
jbe
enter
in
cdq
jle
adc
ret
adc
iret
int3
jbe
jecxz
not
xor
mov
mov
inc
add
xor
cmp
fdivrp
jne
adc
in
lock
dec
stc
bound
inc
cld
aaa
outs
push
xor
shl
imul
push
out
pop
arpl
push
xchg
gs
out
pop
(bad)
ins
mov
(bad)
push
pop
call
adc
sub
pop
jns
xchg
mov
frstor
inc
dec
pusha
pop
cmp
dec
mov
icebp
fld
stos
or
jne
bound
or
lds
pop
sub
mov
xchg
hlt
pop
in
call
push
les
add
popf
pop
ins
sbb
ins
into
cdq
inc
sbb
xlat
int3
sub
loopne
mov
pop
rcr
fadd
xchg
aas
pop
and
pop
add
repz
in
dec
sbb
gs
sahf
dec
test
add
stos
cmp
cwde
leave
mov
sub
mov
test
imul
das
sbb
pusha
les
inc
pop
rol
aaa
jae
mov
mov
mov
dec
test
mov
scas
sbb
mov
popa
fbstp
mov
adc
xchg
add
jmp
sbb
mov
jge
jae
push
repnz
mov
xchg
jns
pusha
sbb
xor
add
out
leave
sub
push
push
bound
icebp
jle
fistp
ins
inc
add
add
mov
sub
cdq
test
(bad)
mov
lods
leave
test
(bad)
dec
push
das
or
pop
cmp
sub
(bad)
aam
(bad)
int3
movs
fsub
(bad)
sub
repnz
popa
pop
neg
mov
push
push
mov
adc
sub
call
cs
test
pop
jl
mov
shl
add
sbb
pop
inc
scas
clc
inc
add
cmp
or
cmp
push
xor
in
sar
pop
mov
imul
aas
call
lods
fisttp
sub
sub
retf
popa
adc
cmp
mov
je
popa
lods
pushf
sub
in
jns
bound
lods
repnz
lods
cmp
and
(bad)
fsub
xchg
mov
push
aaa
mov
fldenv
dec
jo
jmp
inc
(bad)
retf
mov
shl
cli
popa
sbb
(bad)
cli
in
jmp
lahf
push
inc
xchg
cmp
inc
jp
add
adc
push
sub
push
(bad)
dec
add
fisttp
or
fld
(bad)
push
repnz
xchg
out
inc
cmp
push
in
xchg
test
add
xchg
out
lahf
cld
retf
popf
or
cmp
mov
cli
(bad)
out
and
icebp
idiv
clc
iret
adc
lds
and
pop
bound
sub
inc
imul
mov
and
xchg
adc
dec
fs
stos
ret
loope
or
sbb
jns
dec
or
gs
jl
cmp
mov
data16
test
mov
dec
repnz
xchg
cmp
or
add
je
cmp
and
add
shl
xor
mov
cmc
int
fs
hlt
lds
mov
jmp
stc
loope
mov
cmp
hlt
xor
jnp
xchg
push
lods
sub
cmp
xor
jnp
cli
(bad)
stos
enter
mov
xchg
repz
sub
cmp
mov
or
leave
aad
lock
push
(bad)
xor
ss
push
int
jae
sub
pop
popf
sub
or
cs
xlat
sub
cli
and
cld
or
xchg
add
mov
fsub
fld
sbb
xor
mov
mov
inc
inc
or
cld
pop
jmp
mov
mov
(bad)
cmp
inc
xchg
add
mov
mov
cmps
(bad)
mov
xor
adc
mov
adc
stos
adc
call
cmp
rep
aaa
mov
call
dec
xor
out
xchg
sub
mov
gs
add
pop
mov
not
cmp
push
and
stc
(bad)
push
xchg
and
xchg
iret
push
out
mov
ficomp
push
in
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
scas
pop
push
shl
stc
dec
movs
lock
pop
clc
idiv
das
retf
jb
jo
fist
add
test
add
test
add
and
add
test
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
