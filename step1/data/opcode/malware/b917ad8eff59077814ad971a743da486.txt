push
mov
lea
lea
mov
mov
mov
mov
shl
mov
lea
test
mov
mov
je
mov
xor
div
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
and
mov
test
mov
je
mov
xor
div
mov
mov
mov
add
mov
mov
test
je
mov
xor
div
mov
mov
lea
mov
mov
shl
mov
mov
mov
sub
mov
test
mov
je
xor
div
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fld
fadd
mov
mov
add
mov
mov
mov
fstp
fld
fsub
mov
mov
or
mov
fstp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
fld
fmul
mov
lea
test
fstp
je
mov
mov
push
push
call
mov
mov
test
je
mov
xor
div
mov
fld
fcomp
fnstsw
test
jne
fld
fdiv
fstp
mov
mov
fld
fsub
shl
mov
mov
pop
fstp
mov
mov
sub
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
mov
mov
not
mov
mov
sub
mov
mov
shl
mov
test
mov
je
xor
div
mov
mov
mov
mov
add
add
mov
mov
mov
mov
add
or
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
imul
mov
mov
mov
mov
mov
mov
shr
or
mov
mov
je
mov
xor
div
mov
and
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
not
mov
mov
add
mov
mov
mov
or
mov
ret
mov
push
mov
or
mov
mov
mov
mov
sub
or
mov
mov
not
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
lea
and
mov
mov
mov
mov
shl
mov
lea
imul
fld
fsub
fstp
mov
mov
mov
mov
shr
push
push
mov
lea
mov
mov
mov
call
mov
mov
mov
push
shr
mov
push
sub
mov
mov
mov
mov
mov
not
imul
mov
and
mov
push
or
push
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
add
inc
mov
mov
lea
dec
mov
jne
mov
mov
sub
mov
mov
mov
imul
mov
mov
sub
mov
mov
mov
mov
mov
add
sub
mov
mov
and
and
mov
mov
mov
mov
mov
or
mov
mov
not
add
mov
mov
or
xor
repnz
not
dec
jne
lea
call
pop
pop
pop
xor
pop
add
ret
lea
call
mov
mov
mov
mov
mov
sub
mov
mov
shr
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
not
imul
mov
and
mov
mov
or
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
lea
mov
shr
mov
mov
sub
mov
not
mov
mov
sub
inc
shr
mov
mov
shr
mov
add
mov
test
mov
je
xor
div
mov
mov
xor
div
mov
mov
mov
mov
or
test
mov
je
mov
xor
div
mov
mov
mov
mov
mov
add
and
mov
test
mov
je
xor
div
mov
not
lea
mov
shr
shl
or
inc
mov
shr
shl
or
lea
not
mov
call
lea
inc
call
mov
mov
lea
lea
mov
mov
and
mov
mov
mov
mov
mov
imul
fld
fsub
fstp
shl
mov
mov
mov
mov
mov
shr
lea
mov
call
mov
lea
not
mov
call
mov
add
dec
mov
mov
jne
mov
mov
mov
shr
mov
lea
test
mov
je
xor
div
mov
mov
xor
div
mov
mov
mov
or
mov
mov
not
test
mov
je
mov
xor
div
mov
jmp
mov
mov
add
and
mov
test
mov
je
mov
xor
div
mov
lea
call
lea
call
mov
mov
lea
lea
and
mov
mov
mov
mov
imul
fld
fsub
fstp
mov
mov
mov
mov
shl
mov
lea
push
mov
mov
shr
lea
mov
call
mov
push
push
lea
call
lea
call
mov
mov
mov
shr
mov
lea
test
mov
je
xor
div
mov
mov
xor
div
mov
mov
mov
or
mov
mov
not
test
mov
je
mov
xor
div
mov
jmp
mov
mov
add
and
mov
test
mov
je
mov
xor
div
mov
lea
call
mov
mov
sub
mov
mov
mov
imul
mov
mov
sub
lea
mov
call
mov
mov
mov
lea
mov
sub
mov
mov
mov
not
sub
mov
shr
mov
mov
shr
lea
mov
mov
call
mov
mov
sub
mov
mov
mov
imul
mov
mov
sub
lea
mov
call
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cs
dec
jmp
adc
add
mov
cmp
mov
or
out
pop
shl
jo
xor
pop
inc
jp
shl
cwde
ret
shl
jmp
xor
dec
pusha
js
mov
les
add
xor
add
xchg
xchg
je
mov
mov
adc
fs
pop
sub
add
retf
add
mov
add
add
xor
mov
sub
es
add
pop
sbb
rol
fs
adc
jle
cs
int3
repnz
add
mov
xor
retf
xor
fcom
int3
mov
and
cmp
pop
xor
mov
mov
mov
push
pop
aam
sbb
add
add
add
xor
add
jmp
dec
cs
mov
push
push
out
loop
add
xchg
lock
data16
add
fidivr
test
call
out
sbb
cmps
pusha
mov
jl
scas
add
xchg
mov
jl
xor
adc
repnz
add
or
cs
loop
add
(bad)
add
je
call
je
add
or
aam
call
add
bound
cs
push
xor
nop
lods
out
adc
stos
sub
xor
call
je
push
in
or
call
jo
push
add
pop
mov
sahf
xor
xchg
and
push
sar
adc
add
xor
push
mov
adc
sub
inc
add
ficomp
into
mov
add
add
xor
push
mov
add
mov
sbb
sahf
add
add
sub
call
in
sub
inc
loop
adc
loopne
add
and
dec
sub
sbb
test
je
or
add
ds
in
jb
sbb
add
add
add
add
add
add
xor
add
xchg
hlt
mov
mov
pop
push
pop
neg
data16
lods
es
out
call
enter
push
push
add
jle
pop
cmp
inc
add
out
pop
pusha
outs
pushf
dec
push
and
jle
add
nop
je
adc
test
stos
test
adc
add
cli
jle
dec
xchg
sbb
add
jo
add
add
add
mov
add
add
call
xchg
call
xchg
jbe
add
adc
ins
add
nop
adc
xor
xor
adc
call
js
add
inc
push
pop
scas
cwde
mov
sub
push
inc
and
mov
jb
inc
rol
call
xchg
rol
repnz
mov
mov
add
add
xor
jo
add
inc
add
sbb
sub
or
inc
es
add
pushf
(bad)
in
add
add
add
add
pop
outs
pusha
add
add
adc
in
mov
repnz
mov
inc
sub
add
repnz
add
mov
sub
cwde
xor
cmp
pushf
aam
push
jl
add
push
add
hlt
call
xor
xor
mov
call
inc
push
inc
call
adc
sbb
mov
sub
mov
xor
add
outs
cmp
pop
sbb
adc
jb
sbb
pusha
hlt
add
inc
cli
mov
adc
les
ins
mov
call
add
ficom
dec
mov
push
call
add
add
and
push
add
add
xor
ss
mov
mov
add
(bad)
mov
xor
jb
call
push
fidiv
ss
add
inc
fisubr
test
(bad)
add
add
aam
sahf
jo
xor
sub
or
nop
add
dec
add
adc
ror
push
add
push
push
sahf
in
cmp
add
ins
and
mov
jl
mov
mov
inc
add
je
pop
or
lods
mov
dec
inc
mov
outs
add
call
pushf
add
add
call
add
adc
adc
add
xor
clc
push
push
add
cwde
repnz
call
cmp
adc
inc
js
mov
add
rol
push
clc
add
add
add
add
loop
add
out
rol
call
add
les
ds
add
add
push
call
pop
shl
jbe
push
add
add
loop
repnz
mov
sahf
cwde
int3
outs
mov
add
bound
xor
fadd
ss
ss
or
adc
add
adc
add
fsub
mov
push
xor
repnz
mov
mov
add
cs
fadd
add
add
sub
adc
ins
in
add
add
mov
mov
js
push
bound
inc
add
sub
add
mov
and
jl
mov
or
mov
adc
loop
sbb
add
add
adc
sbb
add
add
cwde
or
push
aam
add
dec
test
call
add
ficom
cli
add
sub
pop
call
add
test
dec
mov
adc
add
add
add
sahf
test
out
add
mov
mov
call
inc
and
add
add
data16
hlt
cmp
repnz
add
test
add
xor
add
xchg
add
inc
sub
adc
jo
loop
data16
add
sbb
mov
mov
sbb
loopne
xor
call
add
test
push
mov
call
or
mov
xor
inc
cmp
dec
retf
jle
adc
add
inc
or
add
pop
xor
pusha
pop
mov
stos
push
call
xchg
add
or
push
loop
add
jb
pop
push
ret
scas
add
add
pop
sub
test
sub
add
call
mov
call
mov
shr
lock
stos
pushf
mov
sbb
mov
add
add
add
call
sbb
adc
add
(bad)
dec
ficom
xchg
add
ds
repnz
clc
mov
mov
add
cmp
retf
and
ins
call
pop
pusha
fiadd
mov
push
hlt
test
lods
out
outs
jle
push
fadd
push
mov
add
add
cmps
jb
add
stos
lock
add
xor
inc
dec
mov
or
push
retf
add
inc
add
clc
fsubr
dec
inc
inc
inc
test
fcomp
adc
call
dec
add
add
jo
jb
push
out
inc
add
cli
(bad)
lock
add
pop
es
push
call
mov
inc
sbb
push
xor
in
outs
mov
sub
add
mov
add
add
inc
out
nop
add
repnz
inc
add
add
js
js
mov
sub
push
add
pusha
out
nop
push
add
pop
ins
add
cwde
add
add
out
outs
pop
add
retf
adc
or
add
sahf
add
mov
sbb
test
int3
mov
rol
loopne
push
cs
scas
add
adc
add
pop
adc
and
adc
fsubp
xchg
xor
fimul
and
add
mov
es
sub
mov
call
cmp
cmps
mov
and
add
out
add
and
add
xchg
and
jb
push
dec
push
and
mov
mov
rol
(bad)
adc
xor
ret
adc
jo
shl
adc
mov
fsubr
or
add
sbb
add
sahf
ss
cli
add
push
or
add
stos
push
push
cmp
es
add
adc
data16
dec
(bad)
cld
sub
adc
(bad)
add
mov
test
cld
add
mov
movs
fiadd
add
mov
inc
add
add
hlt
jmp
sub
jle
mov
bound
sbb
call
add
inc
js
cs
xor
out
call
add
lock
xchg
cld
sbb
add
out
adc
cwde
jbe
xor
cld
into
dec
xchg
(bad)
jmp
mov
call
inc
add
sahf
add
push
push
add
and
outs
sbb
xor
(bad)
inc
mov
adc
add
adc
and
test
add
add
xor
int3
ins
and
data16
adc
xchg
add
(bad)
cs
push
test
int3
add
jb
add
add
or
jb
adc
(bad)
enter
add
jb
clc
add
pusha
pop
xor
cmps
test
add
jle
push
push
idiv
int3
add
add
and
inc
call
mov
mov
out
(bad)
mov
inc
jmp
add
mov
aam
cmp
push
add
add
or
(bad)
adc
adc
add
ins
movs
and
mul
add
test
add
mov
xor
mov
ds
sub
call
les
cld
(bad)
fsub
pushf
mov
inc
sbb
jl
out
aam
jmp
fdiv
inc
add
push
(bad)
inc
add
add
scas
test
lods
loopne
inc
clc
cmp
add
adc
lods
add
loopne
cmps
call
sbb
fs
bound
int3
push
xor
outs
or
nop
pop
jp
sub
add
add
add
mov
fdiv
adc
ss
add
movs
jle
lods
jo
or
sub
or
fsub
out
add
dec
pop
lods
sub
mov
add
ss
push
call
add
add
sbb
sbb
add
enter
jp
adc
sub
inc
fimul
add
in
inc
add
add
push
add
loopne
push
add
add
mov
call
push
hlt
add
(bad)
xchg
call
or
les
push
into
mov
pushf
add
push
add
dec
test
pop
rcr
inc
mov
add
or
(bad)
xor
or
into
lock
inc
call
and
and
add
push
movs
and
je
push
cs
mov
scas
inc
(bad)
fdivrp
add
sahf
push
pop
shr
cwde
fs
adc
ds
repnz
add
inc
mov
add
pushf
fs
cmp
adc
add
add
rol
inc
xchg
add
aam
add
inc
(bad)
cmp
test
test
xchg
bound
add
add
cwde
add
add
add
xor
add
adc
adc
add
adc
push
in
add
(bad)
rol
call
add
push
rol
sub
ins
ret
adc
xchg
cmps
fisub
call
int3
sahf
je
mov
add
add
add
push
call
cs
adc
mov
inc
xor
test
or
cmp
add
sub
je
mov
je
add
adc
xchg
add
js
and
nop
dec
add
add
add
loopne
jle
in
je
pop
or
lods
add
js
add
clc
xchg
call
call
or
pop
fadd
pop
add
cwde
xchg
mov
adc
add
repnz
push
add
add
inc
add
add
mov
push
mov
add
call
sbb
fadd
cmps
inc
add
pop
push
add
add
call
fmul
inc
pop
add
sbb
cld
sbb
cwde
adc
or
or
adc
add
cmps
xchg
push
or
add
and
add
aam
sbb
add
out
mov
call
pushf
push
add
fdivrp
dec
mov
xor
add
adc
repnz
test
add
add
repnz
sar
add
cld
add
add
call
js
add
fdivp
add
mov
add
add
add
into
rol
fs
inc
loop
fmul
mov
sar
cmp
push
rol
call
mul
adc
rol
bound
js
ins
fdivr
(bad)
cmp
adc
add
add
pop
(bad)
push
push
enter
fdiv
add
sub
not
mov
inc
les
scas
ret
adc
es
add
and
repnz
add
jmp
enter
add
xor
call
fdiv
inc
add
or
add
cli
add
call
jb
adc
stos
rol
sbb
js
cmp
add
adc
push
adc
sbb
jo
call
mov
test
nop
push
jbe
add
in
call
mov
add
xchg
dec
mov
inc
push
add
xor
fisubr
push
jmp
fiadd
mov
(bad)
sub
add
push
ins
bound
push
xor
cld
ret
and
xor
into
lock
xor
xchg
cwde
and
push
mov
mov
(bad)
jb
call
add
cmp
push
out
repnz
rol
add
push
push
adc
ins
push
xor
enter
cs
(bad)
call
sub
add
add
in
add
sub
ss
mov
push
mov
mov
call
rol
xor
push
add
pushf
push
fs
rcl
mov
jp
push
fadd
and
adc
inc
sahf
into
inc
add
or
int3
xor
mov
xchg
add
jb
add
call
adc
fs
jbe
int3
add
add
mov
pop
add
call
mov
outs
add
mov
push
push
js
pop
adc
xchg
inc
add
stos
add
out
inc
mov
out
dec
jbe
fadd
adc
mov
add
adc
adc
cmp
xor
add
add
dec
fmul
cwde
mov
call
inc
test
add
add
loopne
push
mov
push
add
(bad)
call
bound
sahf
add
pushf
cs
clc
pushf
mov
in
adc
je
call
add
or
sbb
cld
xchg
add
retf
int3
push
test
je
add
add
movs
xchg
mov
out
mov
pop
add
jle
lock
call
jbe
mov
add
(bad)
mov
adc
inc
add
lods
cld
xor
sbb
je
jle
pop
sbb
lods
xor
mov
push
call
xchg
je
rol
nop
cli
xchg
and
push
mov
add
sbb
push
call
call
hlt
pop
sbb
shl
sub
add
js
adc
add
mov
cld
stos
call
loopne
ss
lods
hlt
in
dec
call
es
shr
add
push
call
fadd
add
cmp
pop
loopne
call
jle
add
add
add
add
in
fiadd
adc
scas
xor
inc
je
add
aam
add
(bad)
enter
cmps
jb
add
rcl
fs
scas
fdiv
and
adc
add
add
test
not
pop
push
jo
sub
cmp
es
and
adc
js
enter
mov
xor
xor
xchg
adc
add
add
cmp
add
out
ins
dec
call
add
push
jle
xchg
add
add
mov
adc
ret
ss
or
jp
sbb
xchg
adc
cmp
cwde
ss
clc
xchg
mov
push
mov
mov
inc
add
push
repnz
dec
outs
add
out
inc
add
add
int3
or
out
call
cmp
dec
loopne
xacquire
push
aam
(bad)
es
or
add
xchg
scas
add
xor
add
mov
adc
add
add
cmps
add
lods
sbb
xchg
or
cmp
call
call
push
add
pusha
mov
add
push
call
jb
mov
adc
rol
out
add
add
mov
jle
add
pop
xor
and
mov
add
and
add
call
test
mov
xchg
cmps
add
sahf
sub
inc
add
adc
les
add
call
js
test
add
sub
dec
sub
mov
lods
xchg
test
ss
push
add
loopne
add
in
sub
(bad)
push
lods
inc
call
xor
xchg
add
add
cs
push
mov
add
push
movs
push
dec
enter
push
call
aam
mov
add
mov
call
out
imul
cmp
add
add
hlt
add
add
push
clc
add
add
cmp
cwde
shl
add
add
jbe
add
adc
push
jbe
xchg
jbe
ficomp
add
shl
adc
or
add
stos
es
sbb
cwde
int3
mov
xchg
mov
xor
add
add
repnz
jmp
inc
in
pop
mov
add
add
jl
rol
xor
mov
jo
inc
add
add
jle
sub
pop
push
call
call
add
mov
aam
inc
add
or
xchg
pop
add
add
dec
add
loopne
add
add
add
jl
mov
cwde
xor
adc
call
bound
call
push
push
je
add
(bad)
call
or
fdiv
jb
jbe
ficomp
cld
pushf
xor
and
inc
add
clc
shl
hlt
ds
add
test
loop
adc
lock
add
loopne
mov
add
dec
pop
sub
add
add
xor
xor
sar
add
add
push
push
inc
push
xor
movs
into
sub
mov
je
adc
mov
push
cs
mov
add
push
add
add
(bad)
push
push
and
sub
xor
push
add
xor
test
mov
add
add
jo
cmp
idiv
test
dec
pop
in
fisubr
adc
add
pop
add
push
test
inc
add
add
add
les
fimul
jmp
xchg
inc
add
dec
test
inc
mov
add
nop
add
rol
outs
scas
stos
add
cmp
inc
add
(bad)
push
add
mov
aam
shl
fcom
push
add
mov
loopne
adc
add
jl
adc
push
out
xor
sub
bound
mov
add
add
mov
xor
and
nop
je
push
push
out
and
add
push
pop
cmps
fidiv
hlt
add
call
mov
or
mov
add
bnd
or
dec
je
cmp
xor
add
lock
add
add
in
jle
loopne
(bad)
test
call
jb
in
test
add
out
jo
into
lods
call
or
add
add
add
add
loop
add
cmp
add
call
pop
add
adc
jb
test
in
outs
sahf
dec
add
mov
push
or
nop
nop
nop
nop
nop
nop
nop
scas
add
js
and
pop
mov
jb
pop
add
call
push
loopne
cmp
add
and
jmp
push
and
and
jl
hlt
push
adc
add
mov
fisubr
add
cld
js
call
or
loopne
add
mov
add
js
pop
cli
pop
nop
or
add
bound
ret
out
fadd
sbb
push
xchg
sar
into
add
data16
dec
mov
add
fsubr
add
adc
into
jb
sub
add
fmul
add
xchg
push
add
sub
push
js
add
in
add
ins
mov
mov
mov
inc
sub
(bad)
sub
sub
shr
add
js
fsubrp
movs
xor
xchg
add
sub
add
mov
add
sub
inc
in
push
outs
add
push
add
mov
loopne
push
jp
add
add
loopne
push
add
pusha
add
push
push
je
push
loop
jle
lods
mov
add
rol
nop
add
push
fdivr
inc
mov
mov
cmps
stos
and
stos
cmp
add
add
jb
cmps
mov
add
dec
enter
pusha
scas
sub
add
fidivr
fcom
xor
test
jb
add
add
rcr
push
add
outs
push
cmp
adc
fs
add
push
sub
cmps
dec
mov
inc
dec
test
add
dec
pop
pushf
jmp
mov
scas
inc
add
sub
cmps
inc
in
dec
or
add
loop
mov
add
cmp
hlt
out
push
add
add
mov
aam
jb
mov
mov
mul
xchg
push
add
inc
mov
add
hlt
add
movs
fcomp
add
add
xchg
add
add
in
pop
call
sbb
inc
call
mov
inc
push
xchg
or
adc
mov
mov
test
adc
add
in
into
fimul
outs
pusha
add
and
cwde
jo
add
inc
add
(bad)
lock
fcomp
out
nop
push
sbb
pop
mov
cmp
add
les
add
add
fimul
jbe
(bad)
pop
add
xor
stos
add
shl
jb
adc
pop
add
lock
add
cld
add
ins
xor
add
and
es
es
add
xor
inc
(bad)
cmp
xchg
add
xchg
in
ins
shr
add
xor
mov
cwde
add
add
add
add
pushf
ret
adc
add
sub
call
push
add
xor
push
inc
jo
add
add
jmp
aam
xchg
lods
and
rol
in
shl
xchg
int3
add
sbb
cmp
js
inc
mov
push
push
out
mov
adc
push
rol
jle
cmp
and
ds
pop
add
add
(bad)
retf
add
adc
add
xor
push
push
add
add
into
loopne
mov
add
add
sbb
hlt
outs
dec
mov
inc
add
cmp
pop
cmp
add
pop
scas
data16
add
(bad)
fiadd
js
add
dec
mov
add
xor
jbe
mov
add
fs
clc
pop
push
adc
bound
sbb
add
adc
xchg
into
enter
and
dec
sar
cwde
les
add
add
pop
in
stos
push
into
add
add
mov
sbb
mov
add
loopne
into
add
inc
jle
xor
mov
sbb
clc
sar
and
add
add
add
mov
add
faddp
mov
fidivr
add
add
add
inc
pop
lods
cwde
inc
mov
pop
call
loop
xor
or
retf
push
push
push
push
add
cld
sbb
in
sar
test
mov
mov
add
pop
mov
fcomp
adc
add
mov
into
es
add
add
fsubp
push
add
xchg
sbb
or
add
add
inc
fimul
push
cmp
rol
add
add
pusha
out
repnz
cwde
test
loopne
add
add
add
push
sub
pop
mov
inc
jbe
test
out
add
add
call
nop
xchg
or
cmp
add
lahf
into
fdiv
mov
movs
ret
mov
repnz
add
xchg
sub
aad
in
fcmovu
shr
xchg
jne
add
cmp
pop
cmp
ds
(bad)
mov
les
push
(bad)
mov
pop
adc
data16
out
pop
adc
loope
fild
sahf
pop
ds
js
sbb
inc
xor
and
repz
mov
frstor
jb
stos
test
xor
add
pusha
loope
mov
fwait
popf
xchg
sar
ja
pusha
mov
fldenv
frstor
xor
inc
jl
mov
cwde
mov
inc
jg
xchg
mov
cdq
jb
outs
adc
sbb
sub
adc
outs
mov
std
jno
(bad)
aad
stos
js
mov
out
xor
mov
sub
loope
pop
imul
xlat
inc
(bad)
pop
adc
lds
jnp
sahf
fidiv
add
adc
inc
jle
loope
xor
pop
(bad)
pop
push
push
pop
into
cmp
dec
cmps
sbb
dec
cmp
mov
cmps
pop
fmul
inc
push
mov
call
ret
add
xchg
mov
mov
mov
loop
fadd
mov
loope
icebp
jnp
pop
jg
inc
(bad)
cmp
jmp
sbb
shl
cmps
clc
xchg
out
xchg
ds
xchg
fist
mov
jl
inc
sar
inc
pop
mov
cwde
int3
ds
sar
imul
push
gs
and
pop
cdq
test
cmps
xor
or
push
pop
popa
inc
mov
daa
cmps
pop
mul
fistp
cld
add
adc
mov
je
in
icebp
xchg
in
inc
push
sbb
gs
icebp
lds
jns
or
clc
loopne
aas
adc
sbb
cwde
dec
add
xor
(bad)
add
push
push
in
jg
fxch
in
pop
in
movs
cld
sbb
out
mov
(bad)
sbb
add
jb
push
push
mov
inc
jo
(bad)
fcomi
mov
gs
cli
and
push
xor
jmp
xor
stc
fptan
arpl
fnstsw
jle
jnp
sbb
pop
mov
fcomp
cmp
pop
repnz
cmp
push
(bad)
fst
test
fcmovnu
ins
test
das
(bad)
xchg
shl
in
fadd
js
pop
add
cwde
outs
pop
aam
outs
(bad)
jl
enter
bound
lahf
lods
popa
cmp
out
fwait
into
daa
push
push
or
mov
in
cmp
sub
mov
inc
inc
mov
sbb
mov
xor
mov
sbb
inc
jge
fisub
lock
xchg
mov
mov
fistp
xchg
xchg
in
cmp
jne
stos
loope
cmp
add
xor
and
mov
(bad)
es
xchg
int3
data16
add
xor
mov
pop
push
mov
inc
inc
pop
push
lds
clc
push
cmp
call
xor
dec
mov
xor
shl
(bad)
bound
pop
inc
arpl
in
fnsave
movs
loop
aaa
inc
mov
pop
pushf
iret
movs
mov
and
mov
pop
jb
jecxz
std
(bad)
aas
ins
inc
fsin
outs
out
(bad)
inc
es
xchg
out
pushf
xchg
in
mov
push
out
pop
jns
(bad)
icebp
pop
add
mov
(bad)
sti
loopne
not
arpl
mov
add
pop
(bad)
std
sbb
loop
pop
add
loope
push
cwde
jmp
stc
call
scas
scas
add
cmps
stos
mov
div
aas
push
in
jmp
mov
popa
mov
add
nop
aas
fwait
mov
adc
pop
cld
mov
pop
or
stos
mov
repz
or
nop
call
add
adc
sar
pop
(bad)
or
pop
or
nop
mov
add
nop
adc
pusha
clc
pop
xchg
sub
add
test
(bad)
scas
nop
mov
imul
mov
cmp
cwde
mov
sbb
fwait
mov
jmp
cdq
mov
retf
fcomp
mov
fwait
int3
das
daa
mov
daa
aaa
imul
add
mul
add
pop
test
inc
add
(bad)
div
mov
cmp
push
cmp
xor
push
mov
aas
push
out
add
and
daa
xor
test
enter
cmps
sbb
loopne
pop
ss
scas
pusha
cmps
test
add
scas
inc
daa
test
sti
ins
mov
or
adc
cmps
ss
inc
add
pop
or
nop
mov
ja
push
scas
and
or
ja
xchg
lock
add
nop
aas
(bad)
(bad)
push
mov
lock
add
lahf
add
add
adc
add
pop
dec
daa
aaa
sub
add
adc
outs
mov
or
adc
cmps
idiv
inc
add
test
add
loopne
ja
xor
cmps
ja
ja
inc
test
cmps
idiv
inc
add
pop
push
iret
xlat
cmp
jg
dec
daa
in
add
mov
scas
inc
daa
test
add
adc
dec
xor
call
nop
and
cmps
inc
add
loopne
add
lock
(bad)
mov
loopne
add
loopne
daa
mov
push
add
pop
or
nop
cmp
idiv
inc
add
pop
dec
pusha
xor
add
adc
and
sti
push
xchg
add
lock
(bad)
mov
out
out
leave
daa
in
add
loopne
dec
dec
xlat
mov
add
inc
add
inc
dec
cmps
inc
add
pusha
adc
retf
sar
cmps
stos
mul
loopne
pop
add
out
adc
adc
fdivr
out
daa
cmp
sbb
out
aaa
or
scas
inc
daa
test
cmp
xchg
add
(bad)
dec
cmps
fild
add
(bad)
lldt
xchg
loopne
or
shl
pop
push
add
jl
fdivr
out
xor
or
call
pop
add
pusha
sbb
add
pop
aaa
adc
lock
inc
nop
mov
mov
pop
test
inc
nop
mov
outs
(bad)
mov
add
pop
mov
nop
jecxz
push
add
mul
lock
add
nop
mov
mov
lock
add
lahf
add
add
push
mov
mov
sub
add
pop
add
loopne
mov
xor
pop
xlat
or
repz
or
mov
mov
movs
add
sub
add
aaa
add
pusha
adc
add
cli
pop
cli
mul
mov
cmp
daa
push
sub
add
mov
add
adc
add
stc
pop
out
sub
add
cmps
add
mov
mov
mov
sub
add
out
add
mov
mov
pop
addr16
repz
or
mov
xor
add
inc
aaa
push
adc
loopne
test
or
loopne
mov
add
mov
out
mov
xlat
or
repz
or
mov
mov
mov
xchg
or
repz
or
mov
pusha
adc
add
sub
add
test
aaa
out
push
add
cli
pop
test
cmps
pusha
cmps
test
pop
push
sub
add
mov
add
adc
add
clc
pop
(bad)
or
repz
or
mov
nop
adc
add
pop
xchg
repz
or
mov
push
adc
add
sti
pop
inc
or
test
dec
cmps
not
add
and
mov
pusha
test
mov
mov
sub
add
add
lock
add
cli
pop
out
sub
add
pop
add
mov
mov
mov
sub
add
mov
aaa
out
aaa
add
cli
pop
ss
scas
ror
lock
lldt
add
push
add
xchg
add
adc
mov
sar
pop
pop
push
sub
add
cmps
add
rcl
add
stc
pop
(bad)
or
repz
or
mov
nop
adc
add
stc
pop
xchg
repz
or
cmps
div
add
and
daa
aaa
out
push
add
cli
pop
test
cmps
pusha
cmps
test
(bad)
or
repz
or
mov
nop
adc
add
sub
add
xlat
add
and
mov
pusha
test
add
and
mov
sar
pop
push
sub
add
xlat
add
loopne
mov
and
pop
xlat
or
repz
or
mov
mov
mov
aaa
push
adc
loopne
test
or
loopne
cmp
nop
iret
fwait
mov
mov
aaa
add
cli
pop
aaa
wrmsr
das
loopne
lock
lldt
test
repz
or
mov
rcl
loopne
pop
mov
sub
add
xlat
add
and
mov
pusha
test
mov
add
pop
daa
push
sub
add
cmps
add
lock
add
sub
add
aaa
add
mov
mov
and
pop
cmps
or
repz
or
mov
jo
mov
pusha
stc
pop
addr16
repz
or
mov
xor
add
inc
aaa
push
adc
loopne
test
or
loopne
ja
push
scas
nop
mov
and
mov
loopne
pop
pop
push
sub
add
xchg
add
loopne
mov
mov
sub
add
pop
add
mov
mov
xchg
or
repz
or
mov
pusha
adc
add
inc
aaa
push
adc
lldt
aas
or
loopne
mov
push
scas
nop
mov
and
mov
adc
pop
pop
push
sub
add
out
add
adc
add
sub
add
cmps
add
mov
mov
xchg
or
repz
or
mov
pusha
adc
add
stc
pop
push
or
repz
or
cmps
div
add
and
cmps
aaa
iret
push
add
cli
pop
test
cmps
pusha
cmps
test
aaa
push
sub
add
aaa
add
add
mov
sar
test
nop
out
fwait
mov
rcl
adc
pop
mov
sub
add
aaa
add
adc
lock
aaa
push
adc
loopne
test
or
loopne
sti
test
idiv
lahf
ret
nop
mov
mov
pop
ja
jo
lock
inc
mov
add
push
mov
sar
pop
push
sub
add
mov
out
mov
xlat
or
repz
or
mov
mov
mov
xchg
or
test
or
out
aaa
push
sub
add
cmps
add
add
mov
sar
test
nop
out
cwde
mov
rcl
loopne
pop
mov
(bad)
cmps
pusha
cmps
test
aaa
push
sub
add
cmps
add
add
mov
sar
test
nop
out
cwde
mov
rcl
lock
pop
mov
(bad)
cmps
pusha
cmps
test
adc
cmps
outs
jbe
lock
pusha
cmps
sti
pop
cmps
cmp
dec
aam
mul
lods
cwde
ins
fdivr
(bad)
aaa
das
outs
daa
fucomi
cmps
cmp
dec
aam
mul
mov
pop
aas
das
scas
xlat
add
dec
icebp
mov
scas
iret
add
dec
(bad)
mov
xlat
xchg
inc
cmps
cmp
ja
cmps
cmp
lock
aaa
push
jecxz
mov
inc
push
xchg
inc
cmp
aas
scas
scas
add
cmps
stos
mov
lock
aaa
push
jecxz
mov
inc
icebp
adc
icebp
jg
add
out
aam
nop
inc
adc
nop
cmps
jnp
inc
loope
mov
call
out
inc
lock
inc
mov
push
das
inc
push
inc
mov
jo
push
(bad)
inc
push
cmps
out
add
mov
scas
inc
cmps
sti
pop
or
loopne
mov
mov
mov
stos
lock
inc
push
daa
jmp
daa
mov
ja
add
add
mul
lock
add
nop
jg
(bad)
push
mov
lock
or
nop
jecxz
dec
add
mul
lock
or
push
out
pop
add
inc
add
or
out
pop
xor
mov
xor
add
mov
dec
xlat
mov
add
call
adc
add
or
(bad)
jecxz
mov
push
add
or
(bad)
jecxz
add
scas
push
push
sti
pop
jl
mov
scas
jo
sti
pop
cmps
mov
push
add
or
ja
xchg
inc
pop
or
nop
mov
aaa
aaa
pusha
scas
inc
daa
test
fidivr
out
adc
nop
cmps
mov
inc
add
or
rol
add
ds
xor
cmps
mov
ja
inc
inc
or
add
cmps
add
pop
pop
add
mov
add
loopne
mov
rol
dec
cmps
cmps
cmp
add
lock
push
add
dec
or
mov
imul
inc
or
add
out
loopne
pop
mov
xor
add
mov
add
mov
mov
xlat
add
out
push
out
pop
add
(bad)
pop
add
inc
add
pop
or
(bad)
fisttp
dec
cmps
out
add
mov
xor
lock
mov
lock
shl
push
add
pop
or
(bad)
fisttp
cmps
mov
push
add
dec
or
inc
inc
or
add
cmps
add
pop
pop
add
mov
add
pusha
pusha
mov
rol
dec
cmps
stos
cmp
mov
out
add
and
daa
inc
rol
and
mov
xor
rcr
or
mov
pop
cmps
aaa
and
add
pop
or
out
add
and
daa
inc
rol
and
not
xor
ror
or
mov
pop
cmps
aaa
and
add
pop
or
out
add
and
daa
inc
add
jbe
xor
ror
mov
lock
shl
push
add
pop
or
out
add
and
daa
inc
add
jbe
xor
sar
or
mov
pop
cmps
jnp
push
jle
lahf
cmps
jnp
ja
pop
aaa
das
lods
not
out
inc
pop
or
sahf
cmp
das
lods
mov
out
inc
daa
or
sahf
cmp
das
lods
not
out
inc
aaa
or
sahf
cmp
das
lods
jbe
out
inc
inc
or
sahf
cmp
das
fild
sub
jg
scas
dec
daa
jmp
out
outs
cmps
shl
outs
xchg
aaa
das
fild
dec
jnp
aaa
scas
dec
daa
jmp
out
outs
addr16
shl
outs
xchg
aaa
das
fild
sub
jg
scas
dec
daa
jmp
out
outs
addr16
shl
outs
xchg
aaa
das
fild
dec
jnp
aaa
scas
dec
daa
jmp
out
outs
addr16
pop
shl
outs
xchg
aaa
das
fild
sub
jg
scas
dec
daa
jmp
out
outs
xchg
inc
cmps
sti
pop
test
aaa
das
fild
dec
jnp
aaa
scas
dec
daa
jmp
out
outs
addr16
pop
shl
outs
xchg
aaa
das
cmps
not
jbe
inc
pop
or
add
add
pop
iret
out
and
scas
ja
adc
lock
inc
nop
mov
loopne
add
loopne
not
jo
jo
cmc
pop
nop
mov
mov
xor
jo
lock
inc
nop
mov
and
add
pop
ja
sub
add
test
inc
jmp
add
inc
or
pop
sub
add
pop
add
add
pop
sti
cdq
add
dec
or
cmps
inc
add
ja
xor
lock
or
mov
pop
mov
lock
add
nop
mov
mov
lock
or
pop
sub
add
test
mov
cmps
add
dec
or
lahf
repz
pop
add
test
das
mul
add
jmp
cmps
mul
add
loopne
mov
rol
(bad)
mov
pusha
sbb
add
pop
mov
stc
lahf
push
dec
loopne
or
nop
mov
add
stc
pop
daa
push
sub
add
xchg
add
adc
add
cli
pop
mov
(bad)
cmps
pusha
cmps
test
je
mov
lock
clc
pop
jmp
mov
mov
stos
rcr
das
cdq
mov
add
mov
xor
pop
test
nop
ds
cmps
sti
xlat
or
loopne
mov
push
scas
shl
pop
add
mov
mov
dec
pop
mov
lock
and
loopne
je
and
add
loopne
jno
mov
or
add
jae
mov
adc
adc
xor
repz
add
pusha
not
adc
add
pusha
push
cmc
adc
sub
aaa
icebp
pop
xor
lock
shl
push
add
inc
or
and
add
mov
in
mov
pop
cmps
aaa
ror
pusha
pop
or
aaa
mov
pop
add
loopne
bound
in
mov
pop
cmps
neg
dec
add
or
aaa
mov
pop
add
outs
add
mul
push
add
or
adc
loopne
ja
push
scas
and
sub
ja
jo
lock
inc
nop
mov
loopne
add
lock
mov
jo
lock
inc
nop
mov
mov
pop
ja
jo
lock
inc
shl
in
add
pusha
sub
lock
mov
cmps
inc
cmps
test
add
sub
add
test
ja
xor
add
loopne
inc
ret
push
daa
out
add
and
ja
push
das
inc
cmps
test
add
cmps
div
mov
hlt
adc
inc
push
repz
add
push
jno
cmps
out
add
pusha
sbb
pusha
es
adc
inc
cmps
test
add
push
daa
mov
imul
inc
or
mov
ja
xor
add
mov
aas
add
or
loopne
or
add
or
pusha
pop
or
aaa
mov
pop
add
pusha
sbb
div
mov
pop
add
daa
add
or
nop
mov
add
loopne
mov
rol
dec
daa
cmps
jnp
add
and
es
das
xor
jns
mov
adc
mov
jnp
add
outs
data16
add
pusha
fs
pop
jo
lock
inc
push
popa
jmp
scas
shl
pop
cmps
aaa
fdiv
inc
inc
or
jecxz
(bad)
aaa
and
test
add
jecxz
mov
aaa
add
inc
add
inc
or
out
add
loopne
mov
xor
shl
pop
daa
mov
ja
inc
pop
or
nop
mov
mov
push
scas
inc
cmps
test
jecxz
mov
adc
nop
jg
aaa
cld
inc
add
or
jg
daa
cli
pop
add
pop
and
div
inc
add
invd
jmp
mov
push
add
or
add
pop
add
pop
adc
adc
add
out
jo
pop
pop
add
call
repz
pop
add
mul
loopne
or
dec
or
or
mov
lock
add
pop
adc
nop
aas
or
lods
out
add
mov
pusha
add
mov
pop
div
xor
loopne
icebp
pop
(bad)
(bad)
push
ja
push
xor
pop
inc
ja
jo
lock
inc
push
cmps
out
add
pusha
sub
inc
cmps
sti
pop
scas
aaa
xlat
add
or
xchg
add
mov
add
push
jmp
scas
inc
cmps
test
add
jbe
mov
jo
inc
ja
xor
add
pusha
aas
mov
xor
push
idiv
pop
es
daa
or
ja
mov
ja
push
add
pop
or
add
jg
mov
inc
add
or
loopne
ja
xor
shr
pop
add
pusha
aas
dec
cmps
out
add
pusha
sub
inc
cmps
test
fistp
pop
pop
add
inc
add
pop
or
add
ja
add
aaa
and
test
outs
rcr
pop
pop
add
jmp
ja
add
or
add
inc
add
loopne
and
push
mov
inc
pop
or
inc
imul
daa
cld
adc
nop
jle
cmps
test
loopne
and
push
mov
inc
pop
or
add
pop
arpl
aaa
add
mov
das
lock
clc
pop
cmps
ja
push
add
or
mov
add
loopne
dec
cmps
imul
add
fisttp
test
cmps
not
add
or
add
jg
daa
test
pop
and
add
loopne
mov
xor
pop
add
test
dec
mov
adc
adc
and
aaa
add
pusha
cs
mov
or
add
mov
cmps
mov
inc
add
or
(bad)
daa
hlt
cld
mov
cmps
cmps
loopne
add
sub
pusha
cmps
test
aas
add
daa
ja
inc
add
sub
jbe
xor
dec
nop
adc
nop
mov
add
outs
add
mul
push
add
or
jbe
xor
xchg
pusha
sub
aaa
push
sub
add
xchg
add
add
mov
pusha
cld
pop
test
nop
out
pushf
mov
rcl
cmp
mov
sub
add
xlat
add
adc
lock
pop
ja
sub
add
mov
add
mov
mov
pop
aaa
or
test
dec
daa
sti
test
add
dec
cmps
ss
aaa
add
cli
pop
pusha
mov
lock
pusha
cmps
test
mov
mov
lock
clc
pop
pop
(bad)
aas
xchg
mov
mov
add
dec
add
or
pop
or
nop
mov
add
inc
or
adc
pop
xor
loopne
lock
jbe
lahf
add
pavgb
or
nop
mov
add
or
inc
inc
or
adc
dec
cmps
mul
add
and
fistp
scas
jbe
lock
shl
ja
inc
inc
or
adc
or
pusha
adc
or
pop
(bad)
daa
xchg
add
add
pop
pop
jmp
pop
add
pop
cmp
aas
xchg
mov
mov
add
pusha
jmp
data16
nop
(bad)
cmps
mov
add
or
nop
mov
add
lock
jnp
aaa
das
pop
add
jmp
ror
out
fwait
pop
cli
pop
xor
jg
(bad)
lock
cmps
inc
daa
test
jp
aas
scas
ins
cmps
(bad)
inc
add
and
pop
xor
sti
(bad)
out
mov
test
loopne
or
nop
mov
(bad)
(bad)
out
pop
aaa
pop
xor
inc
out
pop
dec
cmps
out
add
and
in
cmp
or
cmps
inc
cmps
test
add
fistp
nop
mov
fcomp
mov
(bad)
out
adc
pop
add
and
fidivr
out
adc
loopne
mov
xor
pusha
out
pop
cmps
mov
push
add
inc
or
scas
dec
sbb
(bad)
pop
add
mov
scas
inc
ja
pop
cmps
ss
push
add
dec
or
dec
inc
ret
pop
add
test
fistp
out
mov
lock
shl
push
add
or
adc
dec
cmps
push
inc
add
jg
add
fisttp
inc
add
mov
out
pop
add
inc
mov
xor
inc
out
pop
idiv
xor
cmps
mov
push
add
or
retf
and
scas
push
add
or
xlat
ret
mov
jg
out
fwait
aaa
fld
jbe
add
add
not
dec
out
pop
add
(bad)
mov
push
scas
inc
cmps
test
jae
mov
pop
add
inc
add
or
cld
rol
xlat
fwait
(bad)
push
mov
push
mov
or
pop
ja
xor
shl
mov
in
push
ss
xor
mov
pop
xor
cmps
jbe
push
add
dec
or
inc
inc
add
pusha
addr16
push
jg
mov
dec
add
or
xlat
add
pusha
cmp
pop
pop
add
jg
jp
addr16
xor
dec
daa
out
add
pusha
addr16
aas
scas
fimul
ret
nop
jg
jnp
inc
mov
rol
outs
xor
pop
pop
add
inc
add
or
dec
and
scas
je
rol
add
jl
mov
pop
hlt
mov
xor
push
scas
mov
cmps
out
add
and
pusha
xor
shl
adc
lahf
div
xlat
sti
pop
daa
aaa
pusha
push
add
pop
or
inc
push
or
nop
jle
cld
inc
pop
icebp
jmp
add
mov
jg
add
(bad)
pusha
add
mov
add
push
or
out
add
loopne
neg
stos
lock
inc
push
adc
pop
neg
das
shl
pop
daa
neg
ja
inc
inc
or
nop
(bad)
xlat
sar
(bad)
mul
scas
inc
cmps
test
mov
bound
neg
xor
or
pop
mul
scas
sar
pop
xlat
out
adc
cmp
add
mul
das
rcr
pop
out
xchg
dec
or
inc
push
or
nop
jg
div
addr16
push
or
adc
mov
daa
aaa
jns
add
aaa
pusha
daa
test
ss
xor
ja
mov
inc
daa
test
outs
and
add
pop
pusha
add
inc
add
pop
or
mov
lldt
mov
loopne
or
push
out
pop
add
mov
repz
fbstp
out
add
and
bound
scas
shl
adc
paddsw
out
pop
cmps
aaa
bound
rcr
jbe
jbe
inc
push
or
ja
push
add
push
or
xlat
mov
je
mov
lock
call
jbe
push
add
push
or
cmovg
jmp
push
add
or
add
pusha
push
out
mov
cmps
bound
nop
mov
add
pop
or
add
imul
call
cmps
ja
push
add
push
or
call
xor
inc
out
pop
cmps
ja
push
add
pop
or
inc
push
or
adc
ja
xor
cmps
ss
add
or
mov
push
add
or
xlat
add
pusha
push
outs
mov
bound
nop
(bad)
daa
mov
inc
add
or
xlat
add
pusha
push
outs
mov
arpl
nop
adc
inc
bound
adc
out
inc
mul
das
inc
cmps
test
add
imul
nop
cmps
div
inc
add
push
or
mov
dec
push
bound
das
inc
out
pop
icebp
(bad)
(bad)
test
loop
dec
cmps
cmps
mov
out
out
jg
(bad)
inc
cmps
mov
push
add
pop
or
(bad)
cmps
inc
daa
test
dec
xchg
pop
out
mov
xor
daa
mul
add
pop
or
inc
push
or
nop
jle
sar
(bad)
cmps
mov
push
add
pop
or
(bad)
cmps
inc
daa
test
dec
cmps
push
out
add
and
scas
mov
xchg
add
pop
or
push
loope
popa
or
pop
add
loopne
fmul
mov
sbb
pop
add
loopne
dec
jg
mov
(bad)
jg
mov
lock
inc
cmps
test
mov
mov
out
push
add
or
mov
jp
aas
out
ins
cmps
out
add
and
pop
mov
lock
clc
pop
jns
aas
xchg
mov
mov
add
ja
pop
or
and
pop
xor
(bad)
jmp
mul
pusha
inc
or
add
mov
loope
(bad)
nop
mov
mov
pop
aaa
push
sub
add
mov
add
push
mov
sar
pop
test
nop
out
fwait
mov
rcl
lock
aaa
or
das
pusha
daa
test
mul
stos
add
add
inc
cmps
test
add
ins
mov
cmps
out
add
pusha
ins
ja
xor
shl
mov
scas
pop
(bad)
out
outs
jno
mov
pop
add
pop
add
inc
ja
xor
shr
pop
aaa
fs
scas
inc
cmps
test
add
ins
js
mov
inc
add
and
mov
push
dec
loopne
or
nop
mov
add
or
xlat
add
and
mov
add
inc
add
or
xlat
add
and
mov
add
xchg
lock
or
push
loope
daa
aaa
adc
or
xlat
jmp
add
ins
mov
xor
cmps
mov
ja
inc
push
or
jg
sar
(bad)
ja
push
scas
inc
daa
test
ss
test
addr16
add
inc
mov
xor
cmps
aaa
fidiv
add
cli
pop
cmp
out
add
jg
xchg
stc
(bad)
outs
cmps
ss
add
loopne
dec
and
fxtract
arpl
pop
imul
(bad)
pop
add
mov
scas
inc
daa
test
mov
(bad)
aas
xchg
mov
mov
scas
inc
xlat
sti
pop
daa
aaa
fs
add
pop
or
(bad)
inc
add
loopne
jnp
aaa
pop
arpl
nop
(bad)
aas
push
(bad)
mov
push
das
shl
pop
add
mov
(bad)
or
nop
aas
dec
daa
sti
test
outs
fbstp
stc
inc
mov
lock
sar
pop
dec
dec
mul
fidiv
sub
aas
jmp
cmp
je
pop
mov
rol
mov
add
nop
fs
push
add
pusha
loop
mov
mov
add
push
jb
call
add
add
adc
cmps
cwde
add
sbb
fsubr
add
fiadd
ds
cli
repnz
scas
mov
data16
mov
sub
fs
inc
xor
mov
xchg
add
push
add
lods
test
pusha
lods
(bad)
fisub
out
ret
or
dec
adc
jbe
in
movs
loopne
cwde
sahf
lock
mov
add
data16
mov
cs
sahf
push
fidiv
dec
add
pop
add
push
adc
jp
les
add
in
mov
add
add
xchg
mov
pop
add
mov
inc
add
jb
(bad)
push
add
sbb
add
add
pusha
xor
mov
sahf
add
mov
push
ret
call
in
mov
(bad)
push
les
js
push
add
inc
test
and
add
add
mov
mov
push
xor
jl
sub
mov
sbb
add
mov
jbe
mov
inc
test
dec
rol
add
and
mov
add
add
retf
mov
sbb
or
add
add
cwde
sbb
cmp
neg
mov
jl
test
push
ds
movs
add
and
enter
cmp
add
and
add
aam
dec
adc
add
in
enter
sub
add
jl
add
pop
js
add
sbb
cwde
scas
dec
adc
mov
push
add
add
add
enter
outs
adc
cmp
sbb
fisubr
add
ins
scas
add
adc
fcmove
sub
cmps
(bad)
out
(bad)
sub
sbb
inc
cs
add
out
pushf
call
pop
pop
dec
out
ficomp
shl
call
rol
and
(bad)
add
dec
cmps
push
fmul
data16
ds
mov
add
hlt
add
jb
add
int3
add
push
xor
add
mov
pop
add
add
cmps
cwde
jp
mov
sahf
inc
fiadd
cmp
call
add
adc
add
push
add
add
add
out
add
add
add
xor
mov
xchg
sub
add
mov
add
retf
test
lock
ins
add
aam
retf
out
mov
xor
xchg
rcr
cs
pushf
mov
pop
mov
add
sub
and
dec
or
out
out
inc
push
jb
in
jle
jo
inc
or
cli
loop
xor
(bad)
jo
cmp
add
stos
inc
mov
jmp
adc
push
sbb
add
inc
fcomp
sbb
add
jbe
and
and
test
mov
add
jmp
les
mov
sub
sub
es
add
push
call
movs
xchg
and
or
data16
test
or
rcr
xchg
add
add
add
add
call
jp
pop
add
sbb
add
cmps
cmps
push
call
repnz
add
or
aam
jl
(bad)
out
add
int3
and
hlt
mov
mov
xchg
add
and
add
into
dec
add
add
(bad)
rol
mov
add
mov
nop
call
out
add
add
je
repnz
xor
add
inc
sahf
outs
add
fmul
js
dec
out
mov
add
lock
sahf
cmp
add
ret
mov
add
xchg
es
hlt
retf
push
push
pusha
xchg
test
stos
hlt
mov
hlt
movs
test
in
je
add
add
stos
xor
add
add
add
or
mov
cmp
push
cmp
pop
dec
add
out
inc
ror
mov
test
retf
loopne
les
fsubrp
push
cwde
xor
add
sub
mov
add
add
adc
jb
jp
add
mov
enter
add
add
add
cld
or
test
add
sbb
call
in
add
add
ror
mov
sahf
lods
rol
add
lock
repnz
loopne
add
add
add
mov
in
add
add
sub
call
push
and
mov
out
add
lea
xchg
pop
mov
mov
cmp
add
xor
mov
adc
rcl
add
jo
mov
add
add
mov
push
push
jbe
out
add
mov
xor
push
mov
cli
inc
addr16
add
pop
test
add
push
bound
mov
mov
xor
sbb
stc
push
inc
fucomip
jb
add
add
add
out
dec
imul
mov
adc
cmp
xor
mov
js
dec
in
xor
mov
jecxz
(bad)
faddp
sbb
jbe
push
pusha
test
je
fnsetpm(287
ret
in
push
add
es
mov
ror
jbe
cmp
rcr
into
add
lods
push
adc
add
ja
je
call
(bad)
movs
jp
or
ins
mov
add
xchg
xchg
sub
or
adc
dec
ins
std
add
mov
xchg
add
into
(bad)
jmp
(bad)
pop
inc
jbe
jg
add
add
sub
add
(bad)
pop
je
cmps
or
add
fdivr
mov
or
mov
push
shr
adc
mov
xor
pop
push
xlat
add
add
lods
test
inc
test
xchg
add
outs
mov
sub
add
mov
cmp
or
cmp
cmp
mov
sub
inc
xor
or
push
add
push
push
add
or
adc
sbb
add
add
hlt
add
call
ror
dec
pop
cmp
jbe
nop
sbb
outs
and
jb
push
out
inc
(bad)
call
add
add
add
mov
xor
mov
add
add
mov
and
fidivr
jle
idiv
ret
add
in
out
add
mov
jb
out
and
sbb
add
mov
push
sub
mov
cli
aam
add
add
lods
cmp
call
inc
push
xor
sub
xchg
push
outs
add
jl
data16
and
add
add
outs
in
(bad)
xor
adc
cmp
in
dec
mov
mul
ret
in
ficom
enter
test
mov
cmp
add
mov
mov
and
fs
test
shl
dec
aam
(bad)
xchg
adc
dec
jbe
out
add
mov
into
xor
mov
movs
cs
push
pop
xor
pusha
add
jl
fdiv
in
into
pushf
add
pusha
cmp
jp
push
mov
add
inc
(bad)
jb
or
add
outs
add
cs
jl
ret
sahf
mov
inc
add
fs
test
mov
mov
repnz
adc
pop
add
lock
add
loop
mov
add
ds
cwde
dec
or
mov
add
add
js
lods
push
stos
into
push
je
in
test
(bad)
sbb
and
outs
sbb
call
push
add
bound
sbb
jbe
ficom
push
fdiv
pusha
adc
(bad)
ficomp
(bad)
sbb
add
push
push
rcl
mov
cmp
nop
inc
cwde
cmp
add
mov
scas
bound
add
add
int3
add
or
add
add
xchg
test
add
push
add
je
add
add
xor
inc
dec
sbb
jb
add
cmp
xchg
add
add
int3
mov
xor
mov
rol
xor
sbb
les
es
push
lods
enter
(bad)
push
pop
add
add
push
mov
pop
retf
call
stos
repnz
add
(bad)
adc
jo
call
cld
pop
in
add
jmp
outs
stos
test
jl
mov
adc
dec
add
push
scas
xor
loopne
xchg
adc
add
xchg
add
add
ret
sbb
shl
jecxz
cmc
test
push
bnd
loope
add
add
mov
jb
in
adc
mov
mov
aad
mov
jl
ja
add
and
dec
daa
lods
xor
add
fiadd
(bad)
imul
das
add
add
inc
pop
div
mov
adc
add
xor
pop
mov
mov
push
add
add
in
out
repnz
adc
push
out
and
xchg
pop
call
sub
aas
jno
sti
loop
and
add
shl
stos
cdq
aad
add
retf
movs
jae
jb
test
xchg
jl
add
push
xor
inc
cmp
add
add
add
loop
xchg
lahf
ins
cmps
lods
into
test
dec
pop
sub
call
cmp
ret
mov
mov
dec
fucom
in
and
gs
jl
inc
push
test
cmp
retf
int3
imul
add
fisttp
add
cmp
iret
sbb
add
das
cdq
dec
add
mov
xchg
scas
int3
push
mov
sub
push
sbb
add
cmp
fwait
leave
imul
pop
pop
cmp
lods
add
dec
adc
push
cmp
add
dec
push
adc
int3
pop
xchg
adc
sbb
(bad)
sbb
daa
ficomp
xchg
pop
data16
mov
add
ffree
pop
jbe
mov
les
fs
add
add
je
sbb
loopne
mov
lods
outs
sub
add
addr16
inc
mov
das
(bad)
sti
add
or
xchg
out
jecxz
(bad)
xor
or
arpl
stos
(bad)
add
sbb
rcr
iret
sbb
add
jbe
out
mov
mov
sti
pop
mov
add
add
sbb
in
adc
outs
pop
repz
mov
add
pop
fwait
cli
or
add
add
bound
jbe
arpl
pop
dec
and
rcr
pop
add
add
xchg
loop
push
dec
add
mov
shl
or
mov
ret
pop
add
lds
push
imul
mov
jo
xchg
les
(bad)
xchg
loop
sbb
push
inc
push
xor
xor
add
call
xor
cdq
mov
mov
jns
mov
sbb
mov
lods
add
sbb
outs
fisttp
add
aad
adc
add
or
add
add
or
pop
ss
jb
add
add
and
add
test
add
push
repnz
(bad)
js
pop
shl
and
inc
fild
adc
add
mov
push
pop
dec
pop
sub
add
addr16
fwait
call
add
add
mov
jae
mov
jle
and
shl
sub
push
sub
repnz
mov
xor
pop
dec
dec
ins
adc
pop
loope
cmp
pop
add
enter
cmp
call
retf
retf
stc
jae
mov
sub
add
dec
out
push
fdiv
rcr
or
ret
dec
cwde
add
add
pop
test
shl
add
jmp
lds
fs
rep
inc
popa
mov
add
loop
xor
stos
sar
jae
aam
test
cs
add
mov
xor
dec
test
inc
mov
xor
sub
mov
jge
add
xor
and
test
mov
hlt
dec
and
mov
pop
mov
daa
jmp
(bad)
sar
pop
mov
aas
test
jns
in
sti
sti
mov
ins
pop
jno
inc
push
ja
add
std
pop
dec
sbb
mov
add
add
imul
push
add
add
or
dec
add
(bad)
shl
xchg
add
test
cs
pushf
add
ficomp
movs
add
add
test
mov
in
add
add
and
pop
(bad)
sub
pop
sub
inc
xor
loope
imul
pop
push
jge
dec
cmps
xor
jnp
call
mov
inc
jmp
dec
dec
mov
push
jp
adc
add
or
add
dec
cmp
arpl
pusha
loope
sbb
add
ret
adc
dec
mov
add
push
iret
fcmove
push
mov
add
scas
add
add
add
and
add
push
mov
add
add
add
push
xor
jnp
out
jo
xchg
and
test
(bad)
movs
ins
lds
inc
cmps
js
push
push
lea
mov
add
fild
pusha
cmp
ret
sbb
add
add
test
imul
cdq
sbb
dec
pop
sbb
not
ins
xor
add
pop
mov
sbb
add
add
je
repz
daa
mov
pop
je
ss
imul
xchg
lods
mov
xchg
les
add
push
int3
pusha
or
addr16
mov
dec
adc
rcl
xchg
inc
jge
div
sbb
jnp
add
add
add
mov
sti
or
mov
jp
dec
fs
pop
mov
test
push
inc
xchg
cli
cmp
cmp
nop
sub
into
push
mov
inc
les
add
mov
sub
pusha
add
cs
pop
pop
mov
add
mov
mov
rcl
mov
add
(bad)
pop
mov
ja
das
mov
add
push
add
cwde
lods
add
les
add
cmp
js
or
mov
shl
mov
sbb
inc
push
jbe
shr
jne
loopne
adc
cmp
add
inc
leave
xchg
inc
inc
int3
aad
loope
jb
jns
cmp
mov
js
lock
(bad)
and
arpl
repz
jno
or
jg
add
lods
inc
adc
faddp
xor
adc
data16
retf
stos
add
add
push
jmp
cld
sub
call
mov
add
js
(bad)
push
mov
or
adc
add
add
mov
inc
mov
add
adc
cmp
mov
sbb
cmp
xor
shr
shl
add
bound
adc
push
neg
rcl
or
add
pop
mov
gs
cmp
mov
jp
push
add
dec
push
fsub
icebp
fdiv
jne
xchg
aam
add
xchg
ficom
push
inc
ss
xchg
adc
mov
mov
add
add
xchg
xor
add
xchg
inc
and
sti
pop
sub
add
sub
cdq
fisub
xor
add
and
je
or
mov
cld
cdq
fiadd
mov
add
inc
adc
pop
mov
mov
add
push
paddusw
fild
ficomp
es
dec
outs
push
push
add
sahf
imul
bound
add
sahf
movs
inc
add
inc
mov
test
add
push
ficomp
add
add
dec
(bad)
pop
lds
add
ins
shl
jmp
adc
xchg
add
pop
push
xor
mov
inc
add
adc
mov
mov
cmp
dec
add
add
cmc
addr16
inc
cmp
popf
cmp
and
push
ret
repnz
add
jno
and
sbb
add
push
dec
scas
mov
stos
add
inc
imul
inc
add
sbb
push
in
add
dec
add
mov
in
(bad)
push
push
hlt
dec
sub
or
inc
add
lods
add
xchg
mov
leave
aam
cmp
ins
cmp
add
add
(bad)
push
and
add
add
mov
in
sbb
add
add
pop
sub
add
add
mov
int
dec
js
rcr
jno
aas
rol
sbb
outs
clc
push
mov
dec
frstor
push
popf
stos
pop
pop
add
add
add
mov
pop
pop
test
mov
mov
popf
mov
or
push
loope
cmc
and
and
in
mov
xchg
add
inc
mov
dec
js
scas
loop
xchg
mov
xchg
sub
cmps
fwait
out
mov
add
dec
(bad)
mov
loope
mov
add
(bad)
push
out
mov
inc
rcl
push
(bad)
(bad)
int3
test
jmp
add
(bad)
dec
nop
ja
xlat
(bad)
retf
mov
(bad)
mov
stos
jno
bound
inc
xchg
stc
add
add
add
cmps
daa
dec
add
cmp
or
pop
fst
cmps
add
add
xor
mov
adc
lods
push
add
push
push
pop
mov
add
add
jecxz
retf
or
sub
in
and
lods
jle
loop
or
sbb
pop
test
out
add
test
bound
call
add
jno
push
icebp
ror
std
les
sub
add
add
or
jge
shl
dec
adc
mov
(bad)
mov
cdq
bnd
(bad)
enter
shr
dec
add
add
sub
(bad)
(bad)
cmp
and
mov
outs
std
call
push
add
add
repnz
lds
call
xchg
xchg
ret
sub
movs
adc
inc
dec
fdiv
dec
test
and
mov
add
xor
fistp
mov
mov
add
xor
arpl
(bad)
retf
add
cmp
lea
or
mov
int3
(bad)
out
psubd
mov
mov
sar
fbld
mov
xchg
fsubr
add
gs
int3
push
je
movs
in
mov
add
test
std
jns
inc
les
call
add
das
xchg
fisttp
or
dec
add
xchg
imul
add
sub
add
jne
lock
shl
add
pop
aaa
jb
and
add
jg
call
xor
add
mov
inc
ds
mov
add
add
sbb
sbb
es
mov
lea
ins
call
mov
push
fdiv
popa
cwde
ja
pop
adc
loopne
rol
push
ret
mov
add
pusha
xchg
cmc
sbb
add
cmps
add
dec
in
sub
add
sbb
add
add
mov
cmp
(bad)
dec
js
ins
pop
sbb
and
int
mov
mov
add
out
fs
leave
lahf
test
outs
jecxz
stos
das
mov
sbb
in
add
and
add
dec
add
(bad)
or
fcom
add
add
cmp
das
add
and
push
add
add
and
pop
inc
pop
jl
xor
jmp
or
add
cli
xchg
add
add
pop
rcr
adc
mov
or
clc
je
(bad)
lahf
sub
push
add
mov
std
add
sub
lds
aam
xor
add
adc
cs
add
add
or
shr
jb
cmp
mov
dec
jg
lods
push
xchg
add
add
push
cli
out
mov
xchg
dec
jmp
add
and
mov
and
add
ins
ins
ror
xchg
or
test
add
rol
jmp
inc
std
mov
add
test
fs
mov
adc
aam
dec
mov
add
add
pop
xor
mov
out
jo
lahf
dec
and
clc
call
mov
and
(bad)
inc
addr16
add
xchg
popa
push
add
daa
jne
jne
pop
jns
movs
push
xor
clc
fadd
movs
jmp
int
dec
add
jl
add
add
add
add
pushf
pop
int3
aas
or
stos
repz
divps
addr16
fimul
cmp
inc
loopne
cmps
pop
add
mov
xor
into
xchg
add
in
enter
aad
ficom
mov
dec
in
add
es
mov
popa
mov
jae
jmp
in
jne
lahf
add
add
daa
popa
enter
fidiv
add
fnsave
add
add
repnz
jmp
dec
cmp
dec
or
imul
cs
pop
cmp
(bad)
add
and
add
loope
test
sbb
adc
mov
pop
add
das
sbb
jl
jp
add
jo
pop
lock
lea
add
mov
(bad)
sbb
sub
and
push
jo
inc
mov
sub
add
add
scas
repnz
enter
mov
sbb
sub
cli
adc
sub
add
mov
test
adc
lahf
stos
cmp
add
adc
arpl
loopne
daa
ds
sbb
(bad)
loope
add
add
mov
cmp
jmp
inc
mov
cs
lock
xchg
add
call
paddq
ins
sub
xchg
xor
test
mov
or
pop
nop
inc
add
cmp
shl
das
ins
mov
jle
loope
add
add
stc
fs
xchg
and
stc
out
dec
call
std
push
mov
xor
add
jae
hlt
outs
mov
mov
cmp
js
add
push
cmp
push
fwait
add
or
loopne
add
(bad)
jae
pop
mov
add
add
jge
push
pop
push
mov
dec
sbb
add
fadd
lods
add
fistp
or
add
and
adc
in
push
xchg
aas
add
add
push
pop
mov
cmp
imul
lds
pop
xor
pushf
sbb
add
hlt
mov
jmp
movs
sub
mov
add
add
js
jmp
push
sub
pop
push
dec
mov
call
mov
jle
or
shl
cmp
aas
ret
in
add
xchg
sbb
lds
xchg
or
fld
ret
mov
ds
cwde
add
add
xchg
ins
repnz
xor
sub
fadd
add
in
mov
add
pop
add
mov
or
and
jle
int3
or
xor
cmp
mov
add
add
jne
or
enter
std
test
and
xor
loop
rcr
or
pop
xlat
repz
loop
movs
jmp
movs
add
cmp
push
mov
out
add
mov
add
pop
fs
push
adc
and
inc
mov
xchg
retf
stc
jno
enter
add
add
and
inc
mov
and
pop
or
ss
movs
test
(bad)
(bad)
ror
aad
enter
add
inc
dec
or
dec
jae
fst
add
mov
sahf
fs
xchg
stc
jl
add
dec
add
add
add
add
inc
retf
add
hlt
cmps
or
push
inc
enter
xchg
imul
loope
pop
imul
scas
sbb
pop
dec
lods
jo
adc
jne
add
add
inc
stos
stos
(bad)
loope
cmp
stc
mov
or
shl
push
int3
and
mov
and
ret
cdq
dec
add
add
pop
add
(bad)
pop
bound
cmp
pusha
scas
loop
mov
push
add
add
retf
xchg
test
pop
(bad)
dec
xchg
outs
push
in
push
into
xchg
add
shl
or
scas
add
add
int
arpl
std
inc
push
mov
add
mov
adc
and
jb
retf
add
fsubr
bound
icebp
dec
pop
sbb
cmc
dec
add
pusha
push
mov
inc
mov
sub
xor
mov
dec
aad
dec
les
jg
inc
sar
add
retf
inc
(bad)
xor
cs
movs
cmp
add
gs
jb
mov
add
add
push
jno
aad
jmp
cmp
iret
xchg
or
jp
push
sub
add
mov
add
fild
jl
jne
mov
push
imul
xlat
inc
in
mov
push
je
inc
adc
push
jns
mov
add
add
add
add
and
cmps
xor
imul
les
loop
ret
mov
jno
add
pop
mov
adc
mov
cmp
aaa
in
push
add
jmp
mov
dec
add
out
xlat
(bad)
fadd
mov
add
test
add
xchg
cmp
add
aas
dec
out
cld
aam
and
cmp
out
mov
mov
push
pop
pop
push
add
in
push
cmp
dec
xchg
sbb
pop
add
adc
addr16
add
pop
popa
lahf
std
scas
fbstp
ss
rol
add
add
add
xchg
rcl
push
sub
int3
and
pop
call
xchg
test
iret
sbb
shr
pop
hlt
inc
xchg
cmp
(bad)
sbb
add
mov
call
mov
add
add
ret
mov
(bad)
out
add
or
xor
ja
ins
xchg
push
pop
lods
ror
add
ins
or
mov
jb
add
add
ins
mov
ret
mov
add
adc
add
mov
add
fs
sbb
fcom
dec
mov
push
cmps
fild
add
xor
out
mov
and
jae
jg
add
and
inc
add
dec
jle
mov
ins
jno
add
adc
sbb
lock
cmps
(bad)
ret
and
add
inc
ret
cmp
ins
and
dec
and
push
scas
aas
call
in
cmps
movs
sbb
sub
add
inc
sbb
fcom
sub
movs
pop
xchg
adc
add
les
add
add
add
adc
int
add
sbb
pop
repnz
test
clc
fcmovne
stos
add
mov
adc
cmps
outs
mov
dec
mov
mov
add
xlat
cli
sub
icebp
imul
mov
pop
add
pop
add
pop
push
loope
fs
sbb
mov
dec
push
add
jge
push
imul
pop
into
repz
retf
sbb
sub
xchg
inc
jl
ins
das
add
add
xchg
adc
cmp
nop
fild
icebp
mov
in
lock
add
and
call
repnz
sbb
(bad)
out
xchg
and
mov
mov
xor
push
jmp
sbb
ss
and
iret
fbld
mov
jle
jno
add
in
add
mov
add
push
xchg
inc
or
add
add
mov
lock
lods
das
add
mov
mov
sbb
pop
mov
jnp
and
xor
shr
add
leave
call
lock
push
add
mov
adc
test
add
sbb
loope
add
add
add
ins
sbb
xor
jne
shl
jge
xor
add
add
test
mov
jns
add
mov
inc
lods
xor
jo
fsqrt
xor
push
add
pusha
add
add
cmp
xor
add
add
push
jmp
xchg
ret
inc
or
inc
jp
add
test
imul
and
ss
pushf
xor
add
call
ins
lds
or
pop
bound
or
add
test
loop
add
nop
(bad)
jmp
jb
rcl
test
scas
add
int
(bad)
xor
js
addr16
dec
loop
add
add
xchg
add
pop
in
pop
int
add
or
bound
inc
or
jno
add
fndisi(8087
dec
add
jbe
mov
sbb
lods
sbb
add
jmp
fnsave
add
outs
sbb
push
repnz
jmp
add
mov
mov
xor
test
rol
add
dec
add
leave
dec
cmp
or
add
add
jle
jno
ja
and
out
mov
call
add
jg
add
push
(bad)
fist
add
jmp
add
std
neg
repnz
pop
or
dec
add
mov
adc
add
mov
int
adc
lods
add
and
test
sti
fldcw
into
add
push
loopne
add
add
lock
sub
cs
dec
mov
jo
fnstcw
add
imul
jne
and
jecxz
ret
enter
gs
lods
dec
xor
mov
add
shl
aam
and
out
add
add
add
add
sbb
lods
adc
jno
stos
inc
cmp
scas
test
dec
add
or
(bad)
xlat
xchg
adc
dec
cli
add
sbb
into
dec
xlat
ror
add
add
sahf
dec
xor
scas
add
mov
xor
clc
mov
outs
mov
pusha
or
mov
retf
fwait
add
sbb
add
add
jge
pushf
lods
mov
(bad)
add
and
sub
add
jo
sbb
out
push
sub
scas
dec
push
jmp
in
cmp
add
pushf
dec
ror
add
push
fdivrp
data16
add
cmps
adc
add
push
sub
aad
(bad)
sbb
xor
enter
add
add
mov
xchg
mov
clc
cmp
jae
mov
int3
dec
cli
add
add
aaa
mov
jp
iret
dec
iret
imul
dec
daa
xchg
ret
mov
xor
pop
sbb
call
stos
xchg
mov
cmp
cld
mov
sbb
add
or
repnz
mov
xor
loope
mov
popa
add
clc
mov
ret
iret
add
add
jle
add
add
jnp
jbe
add
add
push
or
fsubr
ins
sub
dec
cs
movs
in
mov
jbe
or
inc
icebp
or
add
add
jle
outs
enter
ret
push
das
xchg
mov
stos
arpl
or
cwde
sub
cs
xchg
or
inc
add
add
add
push
adc
fist
xlat
sahf
dec
fst
and
add
pop
cmp
rcl
lods
loop
ds
add
or
cli
scas
test
pop
outs
in
sub
add
add
repnz
loop
aas
mov
(bad)
arpl
mov
inc
fnstenv
sbb
mov
adc
add
icebp
enter
movs
movaps
stos
lock
xor
add
add
adc
out
(bad)
fucom
pop
es
inc
fs
jle
call
sti
mov
cmps
call
mov
push
je
mov
cmps
test
fs
ins
fwait
rep
scas
jge
add
pop
pop
cld
cmp
inc
xchg
add
cmp
pop
push
es
add
dec
ret
loop
pop
inc
or
sbb
pavgw
pop
ret
jmp
enter
mov
xchg
inc
pushf
fdiv
jmp
inc
js
add
fs
(bad)
mov
int
(bad)
inc
pop
adc
add
clc
aaa
hlt
and
repnz
dec
push
or
add
add
xchg
fwait
pop
shl
(bad)
add
ins
add
cmp
add
jle
jno
gs
bound
add
add
gs
add
unpcklps
enter
or
inc
jl
das
dec
add
sub
mov
and
pusha
add
arpl
add
push
mov
fistp
add
add
daa
sahf
je
lds
add
xor
cmp
inc
adc
mov
outs
(bad)
sar
xchg
add
cmp
add
lods
div
add
pusha
gs
add
mov
add
stos
or
sbb
pop
sbb
push
aad
add
mov
jnp
push
inc
lock
gs
xor
pop
add
mov
dec
lahf
and
lahf
shl
hlt
jg
add
add
cmp
stos
mov
mov
(bad)
test
inc
leave
mov
add
mov
fst
jbe
inc
cmp
add
loop
aaa
xchg
hlt
out
cwde
mov
shl
add
add
jp
push
data16
add
mov
jo
xor
ins
movs
rcr
cmp
pop
outs
hlt
mov
ds
add
xor
add
movs
pop
sub
or
stos
mov
lods
push
add
xchg
pusha
fwait
pop
mov
fisub
adc
jbe
add
sbb
cmp
jne
scas
add
or
add
add
inc
jmp
es
mov
add
xchg
add
push
repnz
adc
retf
adc
pop
add
pushf
retf
sub
cli
imul
add
aam
repnz
pop
retf
ret
movs
ins
cmps
sar
(bad)
xor
out
sub
lods
or
push
sbb
ror
or
push
shr
mov
xchg
es
mov
dec
retf
sti
add
shl
add
cwde
ficomp
dec
sub
add
mov
xor
repnz
sbb
rol
inc
xor
mov
mov
(bad)
cmp
mov
or
add
hlt
lds
xor
popa
mov
mov
xchg
or
add
and
add
mov
popf
push
or
mov
hlt
daa
mov
jp
mov
sar
das
add
fld
repnz
pop
lods
push
push
mov
sub
ds
xchg
add
inc
pusha
or
sbb
add
mov
cmp
das
push
mov
pop
sbb
sbb
mov
or
xchg
or
imul
add
(bad)
xchg
or
push
add
pop
fiadd
or
add
test
cmp
mov
popf
inc
xchg
hlt
out
mov
pop
out
cmp
dec
daa
hlt
movs
mov
pop
mov
or
cdq
add
add
(bad)
jp
lahf
adc
pop
ins
nop
int
jnp
jnp
popa
test
sub
or
call
cli
add
loopne
sub
add
sub
inc
xlat
sub
cmp
add
mov
stc
popa
retf
repz
inc
aam
or
sahf
adc
pop
add
loope
sbb
sti
rcl
out
imul
xchg
mov
popf
mov
cmp
(bad)
push
pop
cmp
push
inc
enter
xchg
add
push
rol
je
bndstx
int3
lods
push
mov
fucom
add
loope
out
shr
xor
pop
add
add
add
xrelease
movs
retf
mov
out
ss
pop
cmp
retf
ds
icebp
mov
mov
jno
push
add
xor
add
mov
enter
loopne
les
test
push
dec
into
hlt
add
scas
cmp
addr16
add
movs
fwait
ins
lods
sbb
xchg
add
aas
pushf
sbb
adc
fst
push
sbb
stos
nop
sub
push
dec
or
add
add
mov
pop
mov
mov
stc
stos
push
pop
ins
es
pop
push
adc
add
pop
add
lea
or
sti
cli
not
add
ins
out
stos
lods
push
jb
xlat
mov
dec
add
fwait
push
adc
test
push
add
sbb
cmp
fst
lock
add
inc
add
aad
add
pushf
pusha
sub
adc
mov
int
and
lahf
xchg
sub
cmp
mov
movs
add
dec
add
fs
add
retf
movs
add
add
loopne
scas
push
ss
push
cmp
xchg
aaa
cmps
rol
add
aas
push
cmp
xchg
add
add
mov
xchg
push
pop
xchg
cli
add
inc
pop
push
add
add
add
mov
fbld
or
int3
rol
add
clc
push
gs
jle
lds
js
(bad)
jecxz
lahf
mov
pop
imul
addr16
sub
cmp
xlat
jbe
fild
add
or
add
dec
ja
add
mov
cld
or
add
push
push
adc
cmp
(bad)
pop
sub
inc
inc
dec
cld
loope
retf
sbb
sahf
shr
or
sub
adc
shr
push
rcl
jg
ror
inc
(bad)
sbb
add
ins
out
aam
inc
jo
or
mov
je
jae
test
add
mov
sahf
or
popa
jp
or
xor
jae
fisubr
in
imul
aas
ja
mov
add
mov
push
fidivr
test
sub
jge
add
and
loopne
inc
clc
cli
(bad)
adc
cs
and
mov
add
das
int
test
in
push
movs
xchg
push
test
loop
mov
cli
cmps
mov
push
pop
mov
add
add
out
cmp
dec
movs
mov
add
jecxz
cmp
ins
ret
aam
cmp
add
test
cmp
xchg
shl
loope
add
sub
inc
mov
push
push
mov
add
cmc
xchg
dec
xor
push
sbb
mov
xor
lods
fyl2x
movs
imul
add
stos
xchg
push
popa
arpl
cmps
test
pop
test
add
or
add
idiv
popa
dec
aam
adc
popf
jl
(bad)
add
jno
jg
in
inc
out
add
call
jle
and
cmp
ds
add
add
jne
xor
add
arpl
sahf
jnp
add
dec
sbb
mov
add
add
movs
dec
scas
push
mov
add
xchg
and
push
xor
add
and
repnz
cmp
xor
add
add
jmp
push
xchg
push
inc
mov
jecxz
push
(bad)
daa
mov
add
add
hlt
mov
cld
out
ins
jl
pusha
jbe
push
fisub
dec
jae
xor
add
adc
js
icebp
jl
cdq
rcr
call
add
aaa
sti
in
add
push
and
push
in
int
pop
aam
mov
cmp
cmp
jle
ins
dec
add
add
pusha
jle
mov
cli
popa
mov
jmp
xchg
add
mov
add
add
inc
add
fwait
std
and
pop
in
mov
repnz
test
fisttp
mov
add
mov
fwait
add
push
mov
nop
aam
push
cmp
add
cs
mov
and
mov
addr16
cli
jnp
add
add
sub
sahf
pop
or
push
mov
rcl
lods
sbb
or
jb
icebp
hlt
add
or
add
or
add
rcl
inc
aaa
add
add
ror
not
pop
add
jmp
jl
nop
jecxz
in
iret
pop
cmps
jmp
movs
mov
or
add
out
arpl
imul
jo
jp
ins
push
int3
fadd
and
(bad)
lock
popf
bound
add
loope
add
ins
sahf
jnp
mov
mov
add
adc
add
xchg
lea
push
lahf
js
mov
pop
xchg
mov
loop
add
pop
or
dec
jl
in
push
pop
popa
lahf
js
xchg
mov
add
add
add
add
les
mov
inc
ins
push
or
xor
cmp
rcr
add
jae
or
pop
cld
fs
push
scas
dec
stos
pop
adc
loopne
xchg
add
cmc
add
int
add
lahf
aas
sub
aas
pop
dec
mov
mov
add
loope
aam
jle
add
jecxz
add
mov
fcmovb
add
loop
clc
fmul
push
mov
in
or
icebp
xor
cs
mov
dec
mov
data16
adc
and
fadd
jmp
dec
fimul
outs
(bad)
mov
stos
pop
add
int3
adc
(bad)
jmp
push
cmp
add
inc
scas
push
pop
gs
sbb
nop
add
add
xchg
xor
retf
mov
push
sub
pusha
hlt
inc
in
jo
sbb
mov
cmc
mov
dec
lds
sub
inc
or
into
dec
mov
fiadd
jg
mov
push
add
add
mov
sub
dec
mov
add
mov
imul
ja
shl
fiadd
or
add
in
push
jmp
ins
mov
push
or
mov
xor
movs
and
aam
out
inc
jae
push
push
js
and
add
cmp
add
adc
cmc
enter
repnz
mov
pop
inc
mov
stc
inc
int
mov
sub
add
jae
ins
fisubr
and
js
xor
mov
mov
add
loopne
xchg
or
add
test
mov
push
xor
pop
arpl
stc
loopne
sbb
cmp
add
aad
add
mov
inc
fsub
xchg
(bad)
mov
retf
scas
leave
data16
test
std
pop
test
shr
data16
add
mov
es
add
add
mov
pop
and
pop
push
pop
adc
add
add
sbb
push
jno
push
neg
ret
into
xor
sahf
lods
adc
add
add
mov
add
add
mov
(bad)
jg
ss
enter
bound
cmc
cs
out
add
add
mov
sbb
add
popa
pusha
pop
mov
mov
push
cld
jp
cld
imul
aaa
inc
add
mov
pusha
inc
add
add
add
push
rol
(bad)
lea
imul
fild
sahf
(bad)
mov
add
fs
xor
pop
icebp
leave
xchg
or
jne
scas
add
cld
sub
inc
add
(bad)
je
repnz
fistp
add
add
adc
push
rol
mov
add
add
call
xchg
inc
adc
fstp
hlt
jns
je
mov
pop
add
dec
mov
sbb
dec
push
add
in
ret
add
enter
push
pop
std
adc
sbb
push
mov
sti
add
lock
mov
add
scas
les
add
mov
and
add
pop
(bad)
push
(bad)
push
adc
sti
mov
add
xor
xlat
inc
lds
popf
mov
mov
pop
push
pop
pop
(bad)
ss
std
jmp
dec
add
jp
fldenv
sbb
in
test
add
or
into
add
add
and
pop
int
adc
mov
push
xor
(bad)
add
add
loop
pop
cmp
cdq
lods
(bad)
push
mov
nop
sub
or
sub
add
add
xlat
lds
pop
pop
or
mov
or
cmp
repnz
pop
in
imul
mov
jae
in
addr16
adc
clc
xor
add
add
sub
push
add
pop
out
pop
push
add
mov
xor
and
adc
adc
add
add
mov
pushw
int
or
add
popa
add
ja
cmp
lock
add
jl
xor
add
add
out
into
cmp
idiv
scas
mov
in
push
push
cmp
ror
jle
push
xor
leave
jmp
jmp
push
dec
add
mov
lock
mov
(bad)
dec
mov
xchg
and
push
pushf
dec
rcr
push
add
popa
push
pop
add
jl
cmp
add
add
shl
(bad)
add
add
(bad)
mov
sti
shr
inc
push
movs
(bad)
in
add
mov
xchg
hlt
add
inc
dec
outs
jp
cmps
xor
mov
add
int3
xlat
sti
xor
pop
and
bound
aam
jg
je
fadd
or
movs
bound
int
add
jae
rol
pop
lods
add
pop
cmps
xor
cmp
add
inc
adc
pop
sbb
dec
add
add
dec
aaa
out
sbb
aaa
daa
jmp
xor
lea
shl
popa
test
repnz
adc
mov
lods
jo
mov
add
ror
add
pop
movs
lahf
add
cmp
add
add
xchg
loopne
mov
sbb
retf
retf
xor
xor
test
jno
xchg
add
neg
add
enter
retf
add
inc
loopne
mov
inc
scas
xchg
fbld
xor
pop
sbb
popf
add
add
inc
outs
xchg
jmp
xchg
push
movs
movs
ret
ins
jnp
dec
fmul
out
inc
inc
inc
aam
in
sub
sbb
add
push
cwde
and
cmp
in
daa
test
mov
shr
jmp
adc
sub
movs
add
add
mov
cmc
add
shr
add
mov
push
inc
in
dec
cs
mov
add
es
dec
add
lock
addr16
add
pop
pusha
and
and
ret
xchg
fistp
scas
mov
xchg
push
popf
nop
jbe
push
push
bound
nop
loop
sbb
add
mov
pop
sub
test
adc
gs
dec
jae
add
xchg
push
ret
mov
les
mov
fiadd
xchg
call
out
xor
loop
add
fadd
add
cwde
(bad)
cmp
mov
lds
out
sbb
and
adc
add
nop
clc
pushf
fwait
sub
sbb
sub
jmp
dec
add
cdq
enter
pop
pop
sbb
mov
add
rol
add
jne
aam
add
xchg
adc
sar
dec
cmp
inc
mov
lods
add
inc
add
add
fild
lods
inc
mov
push
daa
mov
add
add
sar
add
(bad)
or
jmp
bound
loope
jl
fcomp
das
dec
add
cdq
ret
add
scas
dec
jle
lods
sbb
xchg
pop
jmp
mov
sub
cmps
adc
addr16
push
jecxz
cmps
pop
add
add
test
in
push
int3
cmp
lock
add
add
add
cdq
jge
jl
stos
add
pop
or
and
mov
mov
les
bound
rcr
pcmpgtd
in
push
xor
mov
adc
inc
add
test
gs
dec
add
mov
mov
pop
sub
mov
add
add
mov
sub
add
add
fdiv
test
mov
js
cli
cmc
pop
jg
sbb
xlat
lods
add
bound
lds
cmp
pop
pop
out
cwde
mov
add
jb
pandn
cli
add
pop
jl
adc
cs
xchg
pop
add
mov
add
mov
xor
or
add
int
cdq
add
sbb
and
jbe
push
add
add
ja
xor
fs
inc
clc
(bad)
pop
xlat
lea
and
loop
adc
xchg
mov
push
push
sbb
push
sbb
add
inc
ja
add
sub
hlt
jg
outs
cmp
ins
imul
fadd
dec
xor
sub
add
add
cli
jmp
cmps
movs
pop
call
ss
xor
jmp
fld
add
add
test
imul
fild
add
add
or
icebp
in
cmp
pushf
cld
hlt
push
add
add
jnp
(bad)
mov
hlt
imul
mov
ror
add
imul
and
jp
and
cld
push
jge
jbe
sbb
pop
dec
aad
ret
inc
pop
stc
pushf
(bad)
pop
data16
aam
ret
add
sub
mov
mov
add
pop
mov
add
lds
add
call
mov
adc
adc
arpl
add
or
sub
(bad)
in
int3
ins
jb
bound
aam
jae
retf
in
lds
xchg
xor
add
pop
xor
scas
jnp
not
jns
retf
adc
push
add
add
lds
and
inc
mov
mov
cwde
cdq
add
add
test
iret
adc
inc
loopne
loop
mov
add
add
ror
stos
cmp
ror
dec
mov
cmp
sahf
jl
or
jbe
in
cld
cld
pop
nop
mov
dec
cdq
cmc
nop
jg
data16
add
hlt
pop
in
cmp
movs
(bad)
ds
retf
popa
add
cmps
mov
add
popf
inc
jae
add
test
add
cmps
out
add
add
repz
add
in
mov
cmc
inc
cs
mov
cmps
mov
add
xor
int
add
add
idiv
repnz
jbe
add
add
pop
and
xor
int
and
fistp
add
xchg
or
fst
add
nop
xchg
adc
sbb
add
fldenv
add
xchg
sub
xchg
movs
sub
mov
pop
add
add
aam
inc
xchg
inc
jp
mov
or
jle
js
add
repz
xchg
imul
add
outs
inc
add
add
outs
lods
dec
push
call
int3
and
add
add
lea
mov
(bad)
sub
movs
scas
add
dec
retf
das
rol
stos
and
xchg
add
add
test
cmps
in
mov
leave
xchg
jl
pop
add
add
out
push
loop
cld
lock
adc
add
push
jnp
aas
xchg
add
xchg
or
push
leave
sbb
mov
add
sub
inc
jl
mov
sar
and
add
test
sbb
sub
mov
jle
dec
dec
loope
push
add
ret
add
mov
sbb
jb
bndldx
add
sbb
add
or
cmp
repnz
aam
rol
lods
add
(bad)
mov
add
add
call
add
add
push
push
mov
inc
cmp
cwde
neg
and
ret
adc
retf
mov
test
das
dec
xchg
push
pop
inc
or
mov
push
(bad)
or
add
dec
sahf
cmp
or
cmps
sub
add
add
push
sti
in
sbb
adc
cli
mov
push
xchg
inc
mov
mov
push
add
fnstsw
pop
inc
add
pop
mov
nop
dec
rol
add
loop
cmp
frstor
add
add
add
xor
ins
mov
clc
movs
rcr
pop
add
add
test
pop
pop
jp
add
pop
jns
mov
add
shl
add
retf
sbb
jmp
add
inc
jp
jnp
xor
xor
or
out
or
dec
jmp
fmul
add
dec
sub
add
add
pop
scas
jo
out
pushf
imul
add
sbb
retf
dec
inc
popf
mov
xor
int3
add
call
ss
add
call
fcmovnbe
add
or
jo
dec
aas
cmp
jb
iret
dec
add
loopne
out
scas
aas
push
mov
mov
mov
aam
xor
mov
add
inc
retf
add
adc
inc
cmps
adc
call
add
sbb
xchg
pop
call
cwde
int3
push
jp
dec
call
lods
and
xor
sub
mov
test
adc
pop
sub
jle
add
ss
dec
cld
out
les
loop
add
push
int
inc
mul
or
xor
mov
stos
mov
lods
retf
pop
inc
and
mov
add
pop
inc
call
cli
rol
add
pusha
call
lods
shr
add
aad
or
xchg
pop
cmc
scas
add
add
add
push
loope
in
rcl
out
and
scas
inc
shl
es
mov
mov
jecxz
adc
loop
add
out
mov
adc
repz
ret
xor
mov
add
jno
ds
inc
hlt
arpl
cmp
cmps
mov
pop
mov
mov
mul
xchg
in
ins
sbb
inc
inc
and
mov
inc
sub
mov
enter
push
in
add
push
cmp
add
cmp
mov
cmp
call
ficom
arpl
ret
mov
push
jbe
push
add
fbstp
or
ret
adc
call
add
adc
icebp
daa
dec
ss
xchg
sbb
or
sbb
add
sbb
call
sahf
mov
mov
loop
dec
push
dec
jns
add
xor
icebp
fdivp
or
add
add
aam
add
add
daa
sbb
jmp
push
cmp
inc
sbb
sub
bnd
or
cmp
pusha
test
mov
cdq
add
or
rcl
and
movs
add
adc
dec
xchg
outs
in
push
mov
das
add
xor
add
sahf
clc
add
in
jge
mov
das
pop
adc
cmps
mov
icebp
rcr
add
add
add
adc
dec
cld
xor
adc
inc
jl
cwde
xor
dec
ins
scas
sbb
sbb
cmc
mov
adc
adc
xchg
in
(bad)
pop
jge
fsub
inc
lods
and
(bad)
clc
cmp
add
sbb
cmp
push
std
cmp
add
add
xchg
inc
mov
sahf
imul
repnz
adc
add
and
add
jg
outs
les
sub
add
jmp
xchg
push
leave
fs
das
mov
push
addr16
jbe
add
add
fdivr
xor
cmps
push
js
dec
push
int
xchg
sub
dec
xor
mov
lods
xchg
xor
add
or
jmp
cmc
jmp
cmp
add
push
jecxz
xlat
xchg
call
mov
add
mov
sub
jg
push
dec
add
add
shr
cmc
aad
dec
push
imul
add
add
jno
xchg
sub
sub
add
movs
or
add
add
xchg
pop
outs
and
or
mov
test
scas
pushf
pop
daa
add
dec
in
xor
and
data16
inc
cmp
mov
mov
add
push
mov
pop
pop
add
add
pop
pop
mov
jle
mov
jbe
shr
test
daa
add
xchg
and
add
xor
cmp
mov
call
xor
mov
ins
add
les
mov
jmp
sub
mov
sbb
add
mov
add
add
add
push
push
aad
cmps
imul
add
mov
pop
xor
cmps
add
add
shl
jbe
imul
lods
sub
js
add
push
add
nop
add
test
ds
stos
lock
call
hlt
into
or
add
stos
cli
out
rol
cmp
add
vpunpckldq
(bad)
dec
cmp
pop
and
or
add
dec
(bad)
and
repnz
xor
ins
jl
fucom
jno
call
stc
ins
add
add
or
mov
jle
shr
add
fadd
jne
push
mov
(bad)
or
cdq
dec
gs
popf
dec
xor
push
add
ror
add
xchg
in
or
add
test
inc
add
add
jnp
cdq
xchg
mov
mov
lods
ret
xchg
pusha
or
add
add
cmp
add
add
or
xor
(bad)
retf
add
add
add
jmp
sahf
loopne
jmp
jge
add
fisub
sub
inc
outs
sti
push
inc
es
or
jmp
ja
or
mov
add
retf
inc
jge
inc
dec
mov
push
pushf
add
add
add
add
jnp
std
cmp
mov
in
mov
repz
nop
mov
mov
icebp
aad
add
es
(bad)
dec
rol
lock
add
dec
cmps
mov
add
cs
test
add
or
add
push
jmp
cmc
adc
inc
add
add
stc
ror
xchg
call
xor
jno
adc
add
loop
shr
xchg
cmp
cli
dec
in
add
sbb
add
push
lods
inc
or
xor
pop
add
add
sub
ficom
dec
push
cmp
sbb
rcr
cmp
jg
ror
sbb
xchg
push
add
sub
rcl
cmp
ror
and
fiadd
imul
rol
pop
xor
sbb
add
in
lds
add
xor
sbb
rol
fimul
fnsave
pop
add
add
add
xchg
cmp
sub
xchg
mov
lock
push
xor
push
sahf
bound
sahf
mul
or
add
or
adc
loopne
inc
test
and
dec
dec
retf
add
add
stos
mov
aaa
enter
rcr
adc
in
ja
add
add
mov
jbe
into
lahf
lods
mov
cli
in
inc
and
inc
in
hlt
pushf
mov
stc
stos
(bad)
pop
imul
sbb
add
jns
add
pop
mov
mul
pop
not
adc
fadd
mov
inc
add
dec
mov
add
add
mov
popf
dec
enter
pop
sar
in
pushf
jnp
aam
imul
int
add
add
add
add
pusha
je
fisttp
pop
test
cdq
sbb
pop
loopne
or
test
adc
adc
add
mov
div
es
mov
repz
sub
ror
ret
xchg
mov
repnz
mov
add
mov
hlt
xchg
push
xor
popf
cmp
add
add
push
jl
xchg
mov
and
ret
mov
lds
add
sahf
pop
jns
rcr
xor
add
pop
pushf
jg
in
movs
lahf
data16
jo
jns
dec
iret
pushf
in
add
(bad)
shl
add
add
and
mov
add
add
jmp
add
add
cmp
(bad)
add
out
and
jbe
(bad)
mov
adc
ret
mov
mov
stos
in
jp
push
jl
xor
mov
jb
sbb
add
sar
pop
jae
fisttp
pop
(bad)
push
pop
clc
add
leave
cmps
mov
add
js
fs
add
(bad)
xor
add
xchg
fisttp
xor
push
add
lods
jp
xchg
add
and
test
mov
movs
mov
inc
dec
sti
cmc
scas
pop
add
fcomp
add
sbb
in
push
add
adc
cmp
sub
ret
add
call
mov
mov
push
rcr
add
mov
inc
daa
fiadd
sub
mov
push
push
add
and
add
mov
jne
nop
retf
bound
inc
mov
jle
cmp
and
mov
mov
add
push
dec
in
add
clc
movs
pop
cmp
add
sbb
push
mov
sahf
imul
mov
jb
int
add
int
inc
mov
inc
or
add
cmps
xor
mov
xchg
add
sub
xchg
add
mov
dec
lds
push
in
add
ret
call
dec
cmc
push
(bad)
cdq
loopne
or
add
div
dec
xchg
add
or
inc
xchg
add
loop
dec
cmps
arpl
mov
add
inc
mov
je
aas
lahf
mov
je
jle
mov
out
fidiv
dec
dec
jg
xchg
lock
add
push
mov
or
les
cmc
dec
inc
mov
test
adc
lds
xchg
sbb
add
adc
test
dec
xchg
pop
aad
movs
xor
mov
sub
dec
data16
fadd
js
add
dec
cmps
(bad)
les
icebp
mov
add
add
nop
cmp
cld
inc
mov
cli
movs
pop
add
sahf
mov
data16
or
js
fadd
xchg
cdq
or
add
add
cdq
fimul
xchg
cmpxchg
rep
add
mov
call
addr16
pop
adc
add
clc
pop
pop
ins
out
add
pop
clc
fidiv
add
cs
jmp
fwait
mov
cmp
cmp
inc
or
push
stc
lock
adc
add
fdiv
mov
add
jno
mov
lds
add
je
push
(bad)
pop
xchg
and
rol
or
jnp
push
add
mov
pop
loopne
sbb
jno
or
pop
std
pop
jge
add
add
nop
or
in
add
push
jle
aam
add
sbb
sbb
lods
sub
add
in
hlt
in
add
mov
in
add
sahf
and
sbb
int3
adc
aaa
and
and
stos
fiadd
and
outs
xor
in
or
es
inc
adc
add
test
loop
fimul
pushf
pop
or
push
add
data16
mov
icebp
mov
loop
add
dec
pop
sbb
iret
cmp
push
retf
mov
aam
pop
sub
add
add
stos
adc
jl
hlt
int3
mov
mov
call
inc
aas
add
pop
inc
add
add
add
arpl
add
sti
js
pop
xchg
sahf
out
push
(bad)
imul
fnstenv
push
sahf
setbe
cmc
mov
stos
add
add
cmp
sub
xor
bound
mov
push
push
fisttp
add
inc
add
mov
add
add
and
pop
jnp
inc
sbb
es
sub
stos
sahf
mov
outs
add
loope
add
(bad)
stc
in
mov
jge
mov
push
mov
adc
ret
add
in
retf
push
push
fldcw
push
data16
jg
mov
popf
in
add
(bad)
pop
cli
int
xor
out
adc
pop
add
add
or
pop
xchg
lods
and
mov
sub
loope
xor
and
xor
mov
clc
jp
or
add
push
iret
clc
jmp
push
mov
fiadd
sub
and
cwde
mov
add
add
push
cli
xchg
dec
mov
mov
das
(bad)
fiadd
add
mov
dec
hlt
out
adc
retf
pop
jns
add
add
adc
(bad)
xor
or
cmp
push
repz
add
add
sbb
cmp
retf
jge
shl
stos
lock
outs
int3
xlat
fcomp
adc
test
add
push
es
add
cmps
cld
inc
(bad)
leave
jnp
mov
add
add
add
or
sbb
dec
mov
sub
popf
dec
je
les
add
inc
ret
mov
inc
pop
pop
xor
(bad)
sbb
add
add
xor
sbb
add
add
sub
mov
xchg
pop
out
ret
pop
add
repz
add
jnp
xchg
and
adc
lea
xchg
add
call
cmp
ret
mov
add
(bad)
cmp
leave
jp
mov
sbb
stos
add
fcmovb
inc
add
jb
mov
test
add
add
cld
out
mov
or
mov
add
out
ins
mov
and
pop
cmp
mov
add
add
sahf
retf
stos
push
aas
xor
(bad)
cmp
or
shl
push
mov
jno
les
loope
xchg
cli
push
pop
mov
into
cmp
or
mov
mov
cmp
gs
cmp
add
jb
outs
lahf
pop
cmps
je
das
mov
mov
mov
xchg
lods
imul
mov
fnstcw
mov
add
xor
outs
stos
and
sti
mov
cmp
add
imul
inc
fstp
push
out
inc
mov
mov
sub
stos
sbb
(bad)
daa
xor
and
sub
mov
add
mov
sbb
push
add
test
add
mov
mov
sti
push
mov
sub
(bad)
ret
push
or
jle
mov
fdiv
sbb
push
enter
push
dec
call
lods
out
(bad)
cmps
or
ja
pop
ins
jmp
add
add
or
jl
lods
ds
aas
push
pop
out
pop
add
inc
jle
nop
cmps
jp
mov
add
sbb
hlt
hlt
outs
ds
cmp
fs
inc
ins
mov
jmp
mov
add
rcl
adc
sub
push
sahf
and
rcr
mov
mov
fdiv
(bad)
cdq
jno
add
ja
add
leave
fiadd
test
enter
add
add
jae
sub
je
cmp
inc
nop
mov
mov
bound
add
jle
add
add
xor
push
fdiv
add
add
dec
fdivr
mov
jbe
push
or
adc
lods
mov
inc
add
lea
add
inc
int
add
in
test
pop
cld
add
sbb
add
jp
mov
test
popa
mov
sub
inc
and
mov
add
fmul
fmulp
int
push
bound
add
add
mov
test
add
jg
sbb
arpl
fld
add
and
not
cmc
add
dec
mov
lods
adc
call
xlat
fild
pop
psadbw
cmp
jp
ins
not
push
and
cmc
or
mov
je
xor
jg
push
mov
pop
sub
xor
push
push
cmp
pop
cmp
pop
xchg
sbb
jo
pop
sahf
pop
xor
add
cld
nop
adc
mov
inc
loop
mov
xor
std
or
js
add
pop
sbb
mov
jge
xchg
sti
add
and
xchg
add
add
add
xchg
push
in
add
add
daa
outs
and
add
inc
mov
push
jmp
add
add
sbb
add
sbb
jecxz
inc
jl
pop
add
call
sub
add
adc
jb
xor
test
bndstx
(bad)
outs
xor
xchg
xchg
je
add
into
xchg
int
dec
cdq
lods
add
add
retf
add
jl
and
aad
pop
aaa
xor
sub
mov
sbb
cmp
popf
and
rcl
popa
pop
add
add
xchg
add
dec
dec
cli
sahf
add
in
mul
cmp
daa
push
and
xor
sub
fldcw
mov
add
add
add
test
aam
or
and
add
mov
jbe
inc
add
les
pop
cmp
pop
inc
adc
add
add
add
add
and
leave
jno
and
sar
callw
cmp
fiadd
les
jo
cwde
fisubr
sbb
dec
mov
push
rol
iret
adc
add
add
push
cmps
cli
inc
in
jmp
and
call
push
inc
adc
dec
fcomp
add
add
add
jnp
or
stos
xchg
das
or
popa
xchg
cmps
fild
movs
push
add
std
jno
push
or
mov
sti
mov
lds
or
push
mov
cld
call
inc
shr
pop
dec
add
adc
mov
pop
push
mov
or
and
jg
add
xor
lahf
xchg
mov
jns
fcomi
jp
cmp
add
sub
push
or
push
aam
ja
aaa
mov
or
add
push
dec
pop
xchg
jl
add
add
jmp
push
xchg
jnp
jp
cmp
jmp
mov
fld
xchg
add
xchg
out
cmp
pop
aas
push
test
adc
lock
mov
inc
retf
dec
js
sbb
add
xchg
push
adc
aad
cmps
daa
into
add
add
push
ret
add
and
xchg
int3
sbb
outs
mov
add
pop
adc
add
in
int3
jmp
xchg
jo
mov
shl
dec
stos
movs
test
cmps
jmp
add
add
add
add
or
aam
inc
jns
(bad)
pop
sbb
xchg
pop
inc
fild
pop
fwait
retf
sbb
jbe
add
pop
add
push
out
mov
mov
ins
cmps
fiadd
(bad)
sbb
xchg
add
add
jmp
fld
xchg
(bad)
std
pause
ds
add
add
push
sub
hlt
jo
aaa
and
mov
dec
xchg
pop
in
add
mov
cld
adc
jnp
add
add
pusha
push
ret
adc
add
adc
sbb
xchg
jmp
sbb
ret
jp
xchg
mov
(bad)
sbb
dec
nop
fsubr
add
and
(bad)
or
xchg
inc
add
add
inc
xchg
pop
dec
mov
sub
outs
jo
fcom
push
dec
inc
pop
jae
fsubr
dec
pop
std
pop
add
add
add
mov
movs
popa
mov
clc
xor
fstp
xor
inc
std
pop
sbb
mov
dec
inc
bound
popf
pop
rcr
fwait
aas
retf
cmp
add
mov
mov
jle
add
(bad)
in
dec
lea
add
shl
add
icebp
test
mov
add
fucomp
inc
adc
or
add
sahf
add
fs
push
mov
and
add
mov
js
sub
test
or
mov
mov
add
fst
sar
push
add
push
cli
ret
in
hlt
call
add
add
in
outs
or
jmp
add
add
push
dec
xchg
or
jmp
cld
bound
mov
data16
hlt
sub
out
(bad)
adc
mov
xor
aad
lods
ja
adc
push
jp
rcr
out
and
repnz
xchg
xchg
push
add
lahf
cli
cmp
cmc
push
add
add
outs
ja
mov
test
mov
retf
fcomip
mov
cli
push
mov
retf
adc
add
pusha
(bad)
xchg
addr16
add
sbb
mov
xchg
push
cmp
add
cli
pop
pop
leave
add
add
jb
sahf
add
push
mov
xor
out
cmp
in
cwde
pop
into
mov
xor
out
out
jae
icebp
mov
ja
inc
add
cmp
sbb
mov
xchg
(bad)
add
add
shl
lds
add
push
add
movs
sti
add
jmp
jp
into
sahf
dec
test
loope
jo
je
leave
pusha
jge
jnp
push
xchg
sub
add
dec
push
loopne
cmps
test
in
(bad)
push
add
mov
xor
std
sbb
xchg
add
ins
icebp
add
add
cmp
cmp
sub
rol
movs
add
add
retf
mov
mov
pop
add
add
fnsave
and
xchg
iret
mov
mov
jns
jp
add
add
add
fs
add
cmp
xchg
ins
mov
sub
adc
sti
cld
push
(bad)
shl
in
pop
push
xor
add
outs
mov
bnd
push
sbb
add
xlat
loop
ins
inc
jae
pop
fsubr
retf
ja
xchg
add
dec
add
sbb
add
fidiv
pop
cli
xchg
ss
xchg
add
add
sbb
bnd
les
add
add
add
mov
das
je
add
dec
cmp
mov
das
in
xor
pop
add
add
fidiv
shl
inc
and
push
jmp
shl
imul
add
add
ret
sub
std
xchg
in
cld
sub
sbb
loope
daa
add
dec
add
push
push
adc
add
add
jns
sub
mov
hlt
and
cwde
stos
sbb
repz
aam
add
mov
sbb
adc
add
pop
add
gs
and
fs
add
pop
mov
test
xor
int3
mov
cwde
test
mov
push
add
popa
sbb
cli
push
inc
mov
add
std
or
cmps
int3
inc
cld
xor
or
inc
nop
dec
imul
xor
xor
adc
add
jg
and
add
nop
sub
gs
cld
hlt
sub
sbb
mov
adc
add
add
add
jp
mov
sbb
das
mov
add
or
add
rcr
stos
jmp
add
add
les
jo
icebp
add
push
push
add
call
jg
inc
out
or
add
(bad)
aam
call
add
adc
sbb
call
mov
mov
js
add
xchg
push
test
cmp
add
ret
xchg
mov
(bad)
jp
dec
add
mov
cwde
pop
add
cwde
sub
mov
and
or
mov
in
add
outs
jmp
xor
mov
out
cld
add
mov
pop
fwait
mov
xchg
sbb
mov
shr
add
add
push
lods
out
scas
mov
adc
dec
and
push
aam
scas
repnz
popa
popa
or
add
cmp
and
xchg
inc
test
add
mov
jno
push
and
jmp
retf
cmc
nop
ffree
pop
dec
xor
inc
xor
push
add
cwde
push
mov
clc
enter
call
add
cmps
ficomp
loopne
fldcw
add
(bad)
sbb
scas
rcr
mov
xor
test
cli
push
mov
(bad)
add
mov
pusha
mov
movs
sbb
movs
add
sub
mov
add
jecxz
adc
std
sub
add
push
jge
std
sti
push
sbb
pop
push
mov
cmp
bound
pop
add
sar
mov
aas
popf
inc
test
leave
add
add
add
nop
imul
lods
shr
cli
mov
add
loopne
add
and
push
xchg
mov
shl
shr
movs
jne
add
retf
cli
pop
mov
mov
gs
ss
outs
push
outs
pop
jb
out
mov
std
inc
dec
je
loop
add
test
inc
mov
cmps
inc
pop
cmp
add
inc
mov
adc
mov
int
add
mov
add
(bad)
push
cli
retf
lea
in
cmp
add
push
jg
(bad)
inc
push
cli
and
and
jae
and
xor
add
jg
out
pop
aas
add
clc
pop
loop
popa
pop
pusha
adc
jmp
add
fwait
inc
sub
push
xor
mov
xlat
dec
mov
add
sub
nop
add
xchg
and
or
add
jo
jmp
xor
and
test
xchg
dec
add
add
adc
les
pop
mov
jbe
add
xchg
bound
mov
(bad)
lds
pop
push
add
aam
cmp
sbb
cdq
mov
mov
std
inc
add
cli
mov
add
mov
fs
movs
xor
fist
mov
xchg
xor
and
in
mov
imul
add
fisttp
add
bound
sub
jbe
add
xchg
stc
or
inc
mov
mov
push
es
xor
mov
aam
or
sub
xor
ins
and
data16
add
mov
sti
lahf
cmp
mov
sub
enter
loop
add
add
icebp
mov
scas
xchg
adc
lods
cmp
sub
leave
push
xor
lds
add
mov
jb
(bad)
ss
popf
push
mov
or
aad
mov
add
(bad)
jmp
(bad)
(bad)
push
fisub
cmp
(bad)
test
sub
add
lahf
pop
xor
jge
push
outs
inc
repz
sar
outs
out
cwde
add
add
sbb
(bad)
movs
pushf
jl
fsubp
jp
dec
cmps
ja
cmc
xor
call
add
(bad)
fadd
mov
outs
mov
push
dec
jmp
sbb
jmp
add
xor
icebp
cwde
lahf
or
sahf
ss
add
test
fisub
test
jae
rol
mov
jbe
pushf
jle
add
mov
jo
(bad)
into
dec
add
add
(bad)
call
test
push
out
aam
mov
push
add
add
fnstcw
cmp
inc
cmp
adc
ret
lods
sub
adc
add
add
test
jb
jb
sbb
push
scas
pop
and
int3
pop
(bad)
data16
add
add
dec
mov
ret
jbe
pushf
mov
dec
and
cmp
es
add
(bad)
fadd
rcr
mov
jmp
sbb
add
(bad)
inc
pushf
push
add
mov
mov
movs
add
add
aad
mov
mov
add
add
mov
push
arpl
xor
ss
fdiv
outs
mov
(bad)
push
pusha
(bad)
adc
and
add
push
rol
mov
dec
dec
add
add
add
(bad)
icebp
dec
add
add
fwait
dec
stc
in
mov
xor
imul
int3
jno
(bad)
pop
or
and
loopne
outs
add
js
add
sbb
add
jae
or
les
push
mov
jmp
mov
add
dec
add
bound
push
sbb
mov
arpl
push
add
sbb
add
add
mov
pop
fbstp
adc
add
jbe
js
add
add
in
rcl
mov
mov
dec
add
xchg
pop
(bad)
dec
aam
fdivr
test
jne
jns
xor
rol
xor
sbb
pop
add
xchg
mov
pop
adc
cmp
movs
(bad)
jecxz
sub
add
mov
ja
add
add
outs
pushf
jns
aad
jge
imul
aad
ins
sbb
cmp
ror
cmp
js
push
add
add
xchg
arpl
lahf
addr16
loope
adc
mov
hlt
mov
add
ja
jl
retf
cwde
out
xchg
test
push
lahf
add
inc
stos
add
add
fwait
je
movs
int3
or
jle
add
pop
loope
imul
dec
or
push
and
int3
imul
push
push
add
stc
xchg
add
or
stos
out
add
push
ret
xchg
sbb
add
mov
adc
ret
cmp
push
outs
add
ja
add
mov
mov
add
add
pop
mov
sbb
jmp
mov
inc
push
jg
jmp
add
imul
add
add
nop
adc
pop
ss
and
push
jecxz
jmp
dec
push
push
out
add
jo
fldcw
pusha
in
(bad)
aam
add
add
mov
push
es
mov
mov
jmp
outs
pop
into
and
push
mov
add
int3
inc
pop
pop
and
fidivr
add
movs
cmc
xor
daa
add
sub
jae
ret
sti
mov
ja
dec
add
out
add
push
jp
add
retf
(bad)
out
imul
adc
add
out
sbb
fcomp
sub
pusha
rol
add
jmp
push
sbb
loop
test
push
or
adc
inc
add
fcmovne
in
inc
test
pop
call
daa
add
and
(bad)
sub
add
add
mov
enter
sub
js
or
jno
je
movs
mov
(bad)
mov
add
add
les
fwait
les
pop
icebp
jp
and
shl
imul
mov
add
lds
sub
jb
enter
add
add
scas
and
icebp
cmp
sti
jg
jl
cmp
add
jmp
mov
or
push
pop
movs
sub
mov
add
jle
shl
push
mov
add
mov
add
add
repnz
and
sub
mov
les
sbb
loopne
test
out
add
push
sbb
sub
or
add
add
rcr
arpl
shl
xchg
xchg
addr16
pop
inc
das
jns
jo
xor
jns
add
aaa
lds
push
adc
push
add
add
add
ss
movs
push
mov
xor
inc
out
pop
add
xor
imul
jge
sbb
add
add
fwait
cwde
add
scas
add
push
les
jmp
nop
dec
sbb
into
add
clc
add
jns
in
in
call
lea
add
in
(bad)
addr16
call
mov
cmp
shr
pusha
add
in
mov
sbb
fimul
ss
add
add
add
mov
in
xor
hlt
mov
or
add
in
popf
gs
cli
xlat
ja
push
add
add
aad
pop
cs
adc
or
scas
test
sub
sub
jg
dec
mov
inc
mov
in
push
add
pop
(bad)
movs
push
and
add
(bad)
add
add
sbb
repnz
sti
add
lock
or
push
fsub
or
jbe
add
imul
add
add
cdq
push
inc
fisub
rcr
int3
or
mov
or
xchg
enter
or
add
add
data16
mov
add
call
daa
mul
fidivr
dec
in
xor
add
out
push
mov
xchg
inc
jae
lds
(bad)
sbb
add
cs
retf
xchg
imul
aas
pop
add
outs
xchg
pop
shl
aam
add
loopne
mov
add
fisub
jle
loopne
jle
add
adc
outs
jb
sbb
mov
lahf
lds
ja
add
add
and
jecxz
and
repnz
ins
inc
stos
addr16
addr16
add
pop
cmp
pop
inc
add
cmc
pop
inc
jo
ss
test
add
test
das
mov
or
mov
add
mov
(bad)
loopne
jbe
add
adc
mov
jbe
add
add
fs
add
add
mov
fcomp
jo
jns
mov
fsubr
add
xor
mov
inc
pop
cli
call
stos
ja
mov
sbb
sar
mov
inc
mov
inc
aaa
add
data16
out
add
xchg
add
add
loope
adc
push
jmp
inc
dec
mov
pop
inc
(bad)
icebp
movs
add
add
add
xchg
push
mov
dec
inc
ds
jo
dec
sub
jecxz
(bad)
in
lods
ss
out
add
movs
outs
sar
ins
out
add
inc
pushf
add
nop
jl
outs
(bad)
xchg
inc
mov
scas
mov
enter
jp
mov
ss
add
js
in
dec
lahf
xor
jbe
xor
aam
std
nop
nop
add
std
aaa
jecxz
add
fsubr
push
cwde
jno
out
xchg
xor
add
sbb
push
scas
sti
xchg
push
jle
lods
lds
sti
sub
bound
stc
add
in
or
in
inc
add
add
out
jle
xor
(bad)
mov
adc
loop
sbb
mov
lea
mov
or
ins
add
hlt
dec
rol
jbe
frstor
in
test
add
mov
loopne
mov
int
faddp
(bad)
jp
scas
add
sahf
mov
std
jno
add
neg
jne
push
mov
xor
push
add
push
sbb
add
(bad)
(bad)
in
xor
mov
dec
adc
pop
add
loop
adc
add
mov
add
adc
ins
push
lods
outs
hlt
mov
xchg
loopne
jmp
nop
pop
xor
add
popa
add
xor
mov
adc
xchg
sti
mov
pop
ror
sub
push
mov
or
xor
cmp
xchg
mov
add
jmp
(bad)
adc
and
add
inc
add
xchg
cmps
es
or
add
add
lods
add
or
sub
jo
nop
mov
xchg
pushf
mov
add
xor
or
push
pop
shl
xchg
and
mov
stos
cld
mov
lahf
pop
and
add
add
ret
and
and
or
mov
cwde
les
in
jns
in
add
bound
add
add
test
loopne
mov
sub
and
mov
add
scas
mov
fnstenv
dec
sbb
jns
es
xor
adc
jge
dec
mov
add
push
adc
out
lock
dec
xor
add
sub
ficomp
xor
fadd
sub
mov
cld
repnz
add
mov
jp
cmp
cwde
mov
and
jbe
sub
xchg
add
cmps
inc
jl
and
and
loop
mov
dec
iret
pop
sbb
test
pop
ss
lahf
add
xor
add
jl
mov
iret
ds
test
add
fistp
daa
add
add
push
nop
jp
aad
and
out
fst
mov
pop
cmp
jne
xchg
xor
and
cmp
xchg
jb
or
xchg
cld
add
jbe
add
and
cmp
jp
add
add
(bad)
pop
inc
and
inc
pop
stos
out
inc
(bad)
push
in
stc
pop
add
stos
pop
mov
call
lods
adc
cwde
add
sbb
dec
and
pop
pusha
add
add
or
lods
into
(bad)
je
mov
jecxz
div
shr
mov
jp
mov
mov
adc
add
xchg
int
loope
aad
xchg
xchg
fidivr
push
cmp
test
inc
aas
mov
int
test
add
in
out
(bad)
push
xchg
or
cmp
add
mov
push
add
mov
in
xor
push
jl
rcl
jno
push
cwde
and
jb
add
add
add
into
cmps
dec
jp
leave
push
in
popf
sbb
in
adc
pop
dec
mov
jo
add
dec
jmp
cs
mov
cmps
mov
or
aam
add
cmp
scas
push
hlt
ret
add
loope
dec
pop
adc
loop
test
add
jmp
ds
add
add
cld
loop
or
xchg
mov
inc
in
pop
and
add
cmp
pop
stc
js
jle
push
repz
add
add
jmp
cmp
cmp
retf
aam
ret
imul
popa
push
mov
cmp
dec
(bad)
fdiv
bound
push
add
(bad)
data16
into
inc
test
adc
aaa
lods
out
cld
stos
add
ret
sbb
pop
cdq
(bad)
cs
xchg
mov
lahf
test
fist
mov
add
popf
(bad)
cmp
pop
data16
push
retf
inc
lahf
add
add
add
scas
dec
int3
or
(bad)
inc
loopne
add
popa
rcr
aaa
push
adc
push
cdq
call
cmps
das
fistp
ja
add
add
repz
mov
ja
sti
add
add
daa
adc
retf
cli
sub
mov
fcmovb
pop
sbb
add
push
rcr
loop
das
rcr
pop
pop
add
add
add
jmp
sub
push
scas
movs
nop
or
sbb
push
in
add
fild
adc
gs
push
mov
fidivr
dec
aam
scas
pop
jp
or
dec
fdiv
push
push
mov
ds
test
sbb
add
pop
jp
dec
adc
or
push
fld
add
xor
mov
cli
xor
push
int
and
adc
add
add
and
pop
jno
inc
ins
sub
inc
test
arpl
add
mov
and
xchg
and
inc
push
test
inc
icebp
inc
dec
mov
imul
ins
jle
add
mov
jbe
enter
clc
jns
jg
iret
in
movs
inc
sbb
or
or
out
push
xchg
add
add
mov
pusha
cmp
jae
mov
ins
arpl
sbb
movs
add
add
mov
rcr
test
add
retf
fst
add
add
pop
push
sbb
add
lock
adc
mov
add
out
bound
xor
sbb
popf
rcr
lods
ror
add
bound
rep
jecxz
add
mov
push
add
add
xchg
mov
popf
test
sahf
pusha
cmp
in
out
cmp
iret
jb
int3
mov
add
dec
sub
mov
add
test
ror
cmp
mov
out
iret
inc
xchg
xchg
xchg
push
jmp
cmp
loopne
pop
xor
pop
into
add
add
jae
out
movs
pop
hlt
inc
add
pop
mov
popa
lods
xlat
dec
xchg
fdiv
add
push
or
stos
and
adc
add
add
mov
pop
cld
add
out
lods
mov
add
fwait
cmp
xchg
rol
mov
in
out
js
add
add
add
in
(bad)
inc
sub
dec
dec
test
call
(bad)
out
addr16
iret
leave
or
mov
add
add
add
dec
clc
dec
mov
cmc
xor
mov
or
test
hlt
out
xor
sahf
movs
pop
lods
addr16
jg
add
enter
fiadd
add
pop
ret
outs
adc
cmp
xlat
retf
scas
add
in
jl
add
add
ret
add
add
into
xchg
add
cwde
add
add
stos
cmp
xchg
js
scas
enter
je
sbb
dec
adc
js
add
fsub
movs
loop
pop
paddusw
and
mov
push
scas
cmp
dec
add
sbb
xlat
(bad)
sub
fcomp
jle
ja
mov
jg
push
add
(bad)
xchg
in
(bad)
adc
nop
cmp
fadd
cli
mov
add
add
push
cwde
ror
(bad)
jge
jne
pop
and
shl
mov
cmp
mov
add
pop
inc
test
iret
dec
jmp
mov
add
popa
fwait
xchg
cmps
xchg
jnp
cli
pop
or
retf
add
out
push
or
inc
das
xchg
lods
repnz
(bad)
mov
aas
(bad)
xchg
add
mov
xchg
sbb
inc
ja
ret
add
hlt
add
lock
mov
mov
pusha
add
fcomip
xchg
test
mov
xchg
adc
lods
dec
add
push
add
add
add
ret
mov
add
add
sub
jle
mov
out
std
dec
fld
add
pop
mov
add
cmc
add
stc
aam
loopne
xor
ror
add
add
add
add
or
movs
add
jg
fwait
cs
jg
add
mov
xor
sub
das
xor
out
or
add
sti
add
dec
sbb
add
mov
(bad)
sti
push
and
add
sar
dec
pop
sbb
xor
cmp
jbe
and
sub
jns
test
push
pop
push
and
push
push
mov
rol
movs
sbb
jbe
loopne
les
test
mov
mov
aas
cmp
stc
arpl
mov
inc
push
les
add
movs
or
repz
add
add
leave
stc
mov
xchg
icebp
lods
cmps
fidivr
add
fst
jbe
fcmove
add
hlt
fcom
add
xor
cwde
ret
loopne
add
add
add
xlat
ins
test
jb
mov
js
jl
repz
mov
add
call
in
out
in
add
add
and
jl
movs
dec
jecxz
and
sub
adc
add
jno
cmp
add
add
sub
sbb
leave
cdq
scas
inc
cmc
push
jae
pop
jge
hlt
jecxz
push
cmps
sbb
mov
adc
add
sbb
cvtps2pi
push
mov
mov
and
and
add
ja
adc
sbb
aam
push
retf
shr
loop
mov
stos
add
add
fistp
mov
push
mov
into
sub
sbb
add
sub
add
add
push
add
out
xor
pop
xor
(bad)
in
pushf
retf
mov
jmp
push
ss
cmp
mov
or
add
mov
xor
xchg
mov
pop
fs
icebp
push
mov
sbb
stc
cwde
inc
jnp
add
sub
sub
add
les
rol
pop
dec
ds
sub
inc
add
add
jl
test
xchg
nop
xor
mov
ja
sahf
rol
cmp
pop
nop
push
into
adc
add
push
inc
aad
aas
ds
cmps
inc
lea
add
push
gs
and
pop
ins
add
mov
jge
sbb
loop
in
jae
and
mov
aaa
and
pop
mov
jae
add
sbb
dec
ja
cmp
mov
loop
jmp
in
cmp
add
sub
loop
lahf
jns
push
sbb
test
out
add
ds
add
add
jae
pop
sahf
sub
add
das
mov
sub
xor
test
pusha
ins
arpl
add
add
pop
add
shl
outs
add
add
add
add
scas
int3
ins
sahf
inc
adc
in
cmp
mov
push
or
lods
push
cld
and
daa
je
arpl
xchg
jle
jmp
mov
aam
cs
xchg
or
inc
scas
daa
shl
data16
dec
push
jecxz
fistp
add
add
sub
gs
mov
inc
jne
(bad)
mov
push
mov
inc
push
add
cmp
add
push
stos
mov
pop
lock
add
jl
push
mov
add
mov
mov
pop
scas
jne
adc
or
jne
add
sub
pop
sbb
dec
add
add
xchg
rcr
cdq
xor
mov
mov
mov
and
mov
and
jle
in
(bad)
pop
xchg
push
dec
mov
pop
push
fs
mov
pop
call
or
arpl
and
add
adc
lds
mov
push
add
sbb
enter
add
shl
or
add
pop
xchg
add
add
pop
rol
xchg
push
sbb
mov
jo
push
out
xchg
loope
aas
jp
imul
enter
xchg
add
movs
(bad)
or
pop
pop
cmp
add
fdecstp
xor
dec
mov
add
cmp
idiv
add
add
inc
mov
movs
test
cmps
repnz
mov
mov
out
and
js
into
xchg
lds
pop
test
inc
or
hlt
sbb
add
in
pop
push
stos
ins
ja
or
adc
mov
out
lods
jb
xlat
xor
mov
shr
inc
add
add
sub
jmp
push
scas
or
add
pushf
xor
add
cmp
stos
adc
test
push
ret
adc
mov
mov
add
cwde
into
sbb
dec
inc
jbe
mov
add
mov
adc
mov
xor
mov
packuswb
xor
jne
xchg
ja
inc
jnp
xchg
add
lea
push
hlt
add
add
ja
mov
sar
lods
or
or
rcl
sahf
xchg
nop
sub
cwde
mov
jl
mov
inc
ror
in
add
xor
dec
stos
rcl
or
ficom
add
jl
bound
retf
cld
popa
(bad)
fild
or
push
ja
add
pop
(bad)
test
sub
cmp
pushf
mov
add
jp
jmp
mov
push
into
add
popf
mov
int3
shr
push
sbb
sub
das
add
jne
out
inc
add
mov
push
pop
add
(bad)
add
loopne
js
clc
xchg
pop
inc
into
mov
fwait
push
loopne
add
fstp
mov
add
fwait
adc
add
xchg
pop
pop
jge
add
pop
movs
imul
xchg
je
cld
dec
cmp
add
adc
mov
add
add
add
out
in
(bad)
das
mov
sub
ss
ret
outs
loope
xor
push
out
adc
push
cs
mov
std
xchg
mov
jno
call
and
add
add
xchg
mov
cmps
push
sbb
pop
fwait
sub
add
add
jp
mov
pop
jo
mov
mov
mov
sahf
hlt
pop
in
xor
adc
scas
add
mov
sub
add
xor
mov
mov
ds
sub
mov
sub
jo
mov
outs
sar
je
add
dec
sbb
cmp
push
jmp
cmp
rcr
push
dec
mov
jns
test
mov
sub
add
cli
mov
leave
add
mov
add
add
or
loopne
inc
xor
loopne
sbb
cmc
add
push
or
mov
add
add
mov
sub
or
test
and
std
cmps
cmp
push
mov
add
or
inc
js
outs
add
mov
pop
cmp
cmp
data16
xchg
out
inc
xor
add
sbb
lods
adc
add
jmp
fnstcw
pop
add
mov
popf
add
add
add
add
into
(bad)
sbb
mov
xor
sub
mov
sbb
(bad)
xor
fiadd
mov
xor
cmp
add
jmp
push
mov
push
nop
ror
mov
jo
scas
daa
bound
test
pop
jg
add
adc
scas
jo
sar
mov
add
add
mov
mov
xchg
data16
adc
stc
or
bound
sbb
lahf
and
add
imul
outs
loopne
dec
xor
xchg
mov
cmp
call
fadd
shl
(bad)
cmps
dec
fs
imul
mov
bound
pop
xor
mov
fadd
out
jecxz
into
sahf
sub
(bad)
push
add
add
pop
(bad)
push
pop
push
xchg
or
dec
fmul
add
adc
cmp
jbe
push
adc
in
jp
les
sahf
call
jg
je
mov
add
dec
push
fild
sti
ret
sub
rol
inc
fnstcw
jno
sub
push
add
dec
outs
test
add
out
sbb
in
and
jmp
add
rol
add
xor
sahf
in
push
lods
dec
fadd
mov
stos
pop
mov
mov
add
push
fistp
jne
enter
push
mov
and
(bad)
add
inc
xor
fisubr
test
mov
add
scas
dec
dec
xchg
shr
add
push
mov
cmp
dec
loopne
add
daa
jle
dec
add
push
push
out
ret
and
and
daa
cld
test
inc
jmp
push
cmp
or
add
imul
mov
hlt
mov
or
mov
adc
or
fadd
add
xchg
mov
in
inc
int
inc
jl
xor
add
in
arpl
mov
add
std
and
add
pop
popf
daa
add
xor
ret
add
add
add
es
add
mov
add
xor
push
add
dec
add
or
jb
cli
fdivr
add
jp
adc
mov
sbb
add
test
(bad)
addr16
das
pop
sub
jmp
hlt
add
xchg
bound
stos
and
lahf
adc
jnp
in
mov
lods
icebp
ja
rol
push
scas
test
add
inc
mov
dec
mov
add
xchg
js
repz
push
and
rol
rol
or
(bad)
adc
add
add
add
fidiv
pop
call
mov
xchg
pop
sar
out
cmp
xlat
fcom
mov
cmp
push
jnp
add
push
add
xchg
stc
sub
into
dec
and
mov
add
inc
xor
add
sbb
daa
mov
mov
add
cld
mov
call
jmp
jb
xor
add
lods
mov
fwait
repz
add
lods
mov
int3
out
sub
inc
outs
mov
cmp
add
(bad)
and
leave
xor
test
mov
add
jno
(bad)
add
inc
cli
inc
mov
push
out
adc
xor
es
xor
je
add
or
(bad)
int3
repnz
push
xor
out
sub
push
ins
mov
and
call
bound
sbb
add
lock
or
push
pop
lock
mov
add
iret
add
inc
add
xchg
xchg
add
push
imul
stos
out
jne
or
sbb
mov
fistp
add
in
cmp
pop
add
add
ret
pusha
add
add
add
fdiv
pop
jnp
jnp
push
and
sub
enter
enter
push
add
cmp
test
fcomp
(bad)
int
or
add
add
adc
mov
or
and
loop
sub
push
sti
stos
mov
cld
adc
or
jg
dec
lds
add
mov
xlat
movs
aam
jecxz
push
add
add
movs
or
rcl
xchg
sar
xor
dec
repz
lea
add
push
pop
mov
sbb
test
cmp
add
ss
stos
out
mov
in
inc
sub
add
add
xor
cmp
or
or
in
add
test
jmp
sahf
lahf
ins
xchg
hlt
jns
pop
popa
mov
sbb
fadd
add
dec
jne
sub
add
loope
add
add
inc
retf
sbb
in
add
ret
sub
lods
mov
pop
and
ror
ins
add
add
push
add
aaa
add
mov
jmp
inc
and
iret
jge
les
scas
rol
add
xor
add
mov
enter
sbb
iret
add
sar
jmp
add
or
add
rcr
inc
test
or
sub
xchg
(bad)
jmp
add
add
jle
mov
inc
add
adc
add
add
(bad)
icebp
jb
dec
sahf
fcomi
pusha
sub
imul
jae
push
movs
add
and
fnstsw
add
add
or
out
mov
cmp
or
lds
movs
push
add
sbb
add
outs
add
and
or
arpl
add
add
jp
xor
dec
ds
(bad)
jbe
or
push
add
outs
call
mov
call
in
(bad)
pop
add
cli
dec
(bad)
jnp
xchg
push
imul
add
popa
pop
sub
adc
xchg
popa
pop
or
adc
(bad)
shl
rol
inc
mov
add
cmc
add
cmp
and
movs
inc
xchg
add
xor
cmps
cmps
fs
int3
add
mov
add
scas
mov
add
cmp
jbe
add
pop
mov
push
mov
retf
fucomp
push
add
lock
int3
shl
js
neg
push
scas
xchg
mov
add
mov
add
add
add
push
fstp
stos
and
and
(bad)
mov
mov
jmp
iret
add
dec
jle
ret
add
dec
add
in
add
(bad)
gs
movs
addr16
add
push
add
jecxz
xchg
fbstp
add
push
out
stc
lds
pop
in
mov
fcmovnb
enter
add
push
adc
clc
outs
mov
cld
xor
xchg
adc
or
mov
add
stos
jbe
mov
push
add
loop
sar
test
or
shl
lds
xor
and
sti
(bad)
(bad)
iret
add
xor
js
xchg
adc
adc
rol
retf
mov
add
or
and
add
add
add
mov
dec
add
jg
les
call
adc
add
mov
add
add
cmps
lods
cmp
push
scas
mov
call
pop
xor
push
rol
push
iret
mov
in
imul
dec
add
add
add
add
add
ss
outs
mov
jge
sti
loope
loope
jmp
sar
fdiv
shr
leave
mov
or
pusha
and
xchg
mov
fild
cmps
pushf
movs
in
dec
add
add
sub
sub
bound
stc
adc
xchg
movs
es
ins
mov
cdq
aam
fucom
mov
inc
inc
mov
fwait
clc
jl
or
add
jp
les
js
popa
js
sbb
add
inc
in
leave
retf
inc
mov
pop
add
add
fmulp
jo
push
in
(bad)
dec
sbb
sbb
inc
pop
inc
(bad)
xchg
adc
cwde
arpl
es
push
and
inc
sbb
rol
ret
add
cmp
sub
add
xor
icebp
add
cmps
add
xchg
loope
add
xchg
mov
add
add
cld
addr16
daa
and
loope
xor
movs
cs
(bad)
sbb
mov
add
fldenv
mov
arpl
cmp
loop
xchg
add
add
add
lock
jae
mov
stos
hlt
fs
xor
add
add
add
add
dec
lods
fdivrp
hlt
mov
ds
xchg
adc
outs
pushf
sbb
adc
cmp
add
cmp
xchg
adc
mov
test
xlat
aam
lea
lods
xchg
loope
shl
stos
add
sbb
mov
add
out
loop
push
stc
inc
(bad)
cwde
add
add
mov
xor
pop
into
mov
rcr
add
inc
inc
inc
adc
lea
out
out
add
add
retf
sbb
jmp
repnz
leave
push
scas
sbb
pop
iret
add
add
enter
clc
xchg
pop
rcl
sbb
test
inc
jne
add
shl
add
jmp
les
(bad)
sti
inc
leave
inc
xchg
(bad)
test
add
sub
pop
clc
xor
add
add
add
outs
(bad)
fld
mov
adc
cmp
push
mov
sbb
adc
jmp
lock
mov
icebp
add
rol
push
xor
les
push
loop
rep
js
add
adc
test
add
(bad)
adc
inc
sub
sub
add
aas
gs
out
out
mov
sub
xchg
frstor
jns
inc
aad
into
jbe
in
jle
es
add
and
add
add
sub
adc
adc
push
pop
sub
popf
cs
add
adc
adc
inc
pop
add
inc
outs
add
add
(bad)
cdq
hlt
push
test
or
leave
out
movs
adc
add
int3
outs
int3
cli
adc
and
add
lods
push
cmp
dec
add
sub
xor
dec
vmread
push
sub
add
pop
add
ss
add
cdq
fsubr
sbb
or
retf
leave
in
mov
add
adc
fbstp
sub
test
dec
add
add
(bad)
pusha
jnp
and
pop
sub
cmps
sti
jl
rol
std
add
xor
and
add
inc
js
fsub
loope
jmp
jns
xlat
rol
in
add
inc
add
add
push
in
cmp
aas
mov
mov
cdq
push
popf
fbstp
inc
std
cmp
mov
retf
or
or
add
push
and
out
call
les
test
in
pop
leave
fldlg2
add
out
retf
push
push
popa
test
fnstsw
xchg
test
shl
or
add
push
fld
mov
cs
and
shl
jg
add
sub
stos
rcl
ret
jbe
jmp
add
rol
daa
push
retf
sub
xor
xchg
add
shl
outs
stos
daa
int
jbe
push
add
inc
(bad)
mov
lahf
push
stos
xor
in
xchg
(bad)
in
adc
pop
jecxz
add
add
add
inc
jmp
cmp
scas
inc
add
xchg
jmp
pop
fnstsw
sub
mov
cmp
cli
mov
sbb
data16
push
add
xchg
in
movs
add
lods
mov
xor
add
and
sbb
hlt
je
add
jle
push
(bad)
jne
add
add
add
ret
ss
ror
retf
mov
xchg
and
jmp
cli
push
xor
push
nop
test
add
lock
or
sub
xchg
sbb
add
add
imul
push
shl
jne
cmp
sub
ret
das
xor
xchg
ja
add
mov
(bad)
adc
loopne
mov
sub
add
shr
xchg
jo
dec
loope
imul
sbb
xor
adc
add
clc
cmc
add
push
or
daa
js
cmp
lahf
cwde
nop
lahf
add
fwait
loop
arpl
add
int
cmp
add
sub
mov
cld
mov
mov
cmps
push
cmp
xchg
add
or
cmc
or
test
jae
in
out
add
adc
mov
sub
add
add
add
dec
js
mov
xchg
nop
repnz
int
fadd
pop
adc
jmp
mov
and
fimul
dec
out
add
in
or
mov
add
sub
sub
adc
or
push
rol
add
add
and
adc
add
jle
add
add
outs
ffree
adc
mov
cld
retf
sbb
pop
data16
lea
sbb
inc
cmp
add
inc
mov
loope
add
lods
pushf
jmp
arpl
mov
sub
adc
or
mov
add
and
cmp
xchg
test
jno
cdq
jmp
add
inc
dec
int
add
sbb
or
pop
mov
push
pop
push
sbb
mov
pushw
adc
add
data16
mov
bound
out
xor
in
pusha
inc
add
add
add
not
in
add
sub
mov
xchg
add
in
repnz
sbb
das
stc
neg
add
in
add
nop
sub
and
jnp
and
popf
add
sahf
mov
fistp
xchg
add
popa
xor
(bad)
das
jmp
aam
add
xchg
sti
jecxz
je
jbe
pushf
fiadd
outs
loop
out
loop
add
and
je
out
retf
lock
add
cmp
push
jl
and
adc
lahf
push
jne
dec
add
pop
push
add
mov
jbe
cld
test
popf
xchg
add
(bad)
int3
mov
add
add
mov
hlt
add
int3
cwde
iret
inc
fimul
lea
add
inc
cmps
sbb
xchg
rol
add
mov
dec
pusha
fimul
rol
inc
mov
add
dec
push
lock
or
int
inc
dec
add
test
dec
pop
push
add
add
add
lea
mov
int3
hlt
mov
mov
aas
add
cld
cmp
or
push
in
cmp
dec
in
sub
jl
add
das
daa
test
add
clc
mov
cmp
cdq
mov
fs
cli
mov
add
es
jb
add
sbb
mov
std
cmp
inc
out
hlt
mov
add
loope
cmc
adc
out
dec
aaa
sub
xchg
jecxz
xor
xchg
imul
or
int
jmp
xor
pop
ror
pop
mov
stos
and
xchg
jmp
push
test
add
add
push
adc
je
(bad)
push
sub
or
and
push
add
mov
add
mov
cmps
add
test
ds
ret
jge
sar
add
fwait
and
mov
mov
jge
add
fisub
fadd
add
jge
and
fimul
add
add
xchg
add
or
mov
fld
add
add
cdq
sbb
add
and
add
cmp
mov
cmp
ret
mov
add
jae
mov
jb
ins
mov
add
test
add
fild
int
das
ror
mov
movs
sub
dec
loope
shl
and
cli
sub
add
in
or
inc
fnstcw
inc
retf
jnp
push
or
inc
ficomp
inc
out
rcr
pop
not
add
pop
sbb
adc
and
pop
xchg
add
and
sbb
out
jge
mov
sub
jle
add
aad
stc
xchg
mov
add
push
mov
xor
add
lds
shr
add
and
test
mov
push
jne
cmps
sbb
daa
mov
leave
test
add
push
add
jae
adc
test
mov
add
add
pushf
jmp
(bad)
fiadd
add
(bad)
call
icebp
add
add
jp
jl
in
test
pop
pop
jl
sub
mov
cmc
add
sar
je
(bad)
xor
out
jbe
xor
int
add
sti
mov
data16
inc
clc
orps
lahf
iret
call
cld
adc
out
and
mov
add
add
ja
cwde
sti
retfw
call
shl
clc
dec
clc
pop
add
aas
fdivr
sub
cmps
scas
push
dec
add
test
inc
fimul
sub
dec
jl
mov
sbb
dec
cmp
jg
fwait
inc
or
loop
and
(bad)
scas
mov
fadd
add
add
inc
cmp
fisttp
popf
add
add
adc
xchg
cmp
add
mov
(bad)
not
cli
inc
sti
sub
add
mov
add
add
sub
addr16
push
and
sahf
dec
dec
pop
xor
pushf
push
cmc
std
mov
fs
pop
jbe
mov
add
pop
call
enter
test
inc
add
and
add
pop
or
and
fdivr
dec
sbb
and
ror
adc
add
call
data16
data16
mov
add
das
sar
xchg
add
cmp
add
mov
add
clc
add
xlat
and
add
push
push
push
xor
mov
jl
push
cdq
js
retf
add
lods
xor
inc
xchg
mov
add
leave
in
cmp
mov
mov
inc
movs
add
rcr
imul
pop
test
mov
cmp
imul
fdiv
jle
cld
call
inc
cld
rcr
push
in
mov
out
loopne
xchg
jg
inc
push
mov
jo
fucompp
hlt
jp
add
add
outs
pop
cdq
aaa
cld
sub
cmp
nop
in
dec
(bad)
fidiv
or
aas
sub
or
out
stos
or
add
pusha
inc
add
fadd
add
pop
mov
or
push
add
add
div
stos
fdivrp
push
mov
lods
lea
add
ret
dec
pop
jmp
repnz
(bad)
arpl
push
add
sar
inc
dec
hlt
sti
out
push
in
ret
add
inc
mov
ds
add
mov
in
(bad)
lock
mov
pop
fadd
dec
mov
stos
repz
add
sbb
add
adc
sbb
pop
xor
mov
ret
add
jae
sbb
xchg
push
shr
cmp
add
sbb
push
and
ins
fbstp
cmp
add
add
fadd
lds
dec
fwait
add
rol
call
inc
or
xlat
cmp
fdiv
add
pushf
fcomp
add
add
out
lods
jmp
test
xor
cmp
icebp
jne
add
add
add
mov
inc
lock
add
into
jg
adc
aad
nop
nop
pop
inc
sbb
xchg
bound
pop
add
mov
cmp
adc
jo
xchg
push
in
dec
ins
add
add
cmp
xor
add
inc
(bad)
out
lea
cld
inc
add
add
jg
xchg
add
jmp
jl
add
push
xchg
add
xchg
fiadd
call
retf
add
add
push
loopne
retf
push
fs
sahf
mov
enter
sar
outs
add
js
cwde
cs
add
or
or
add
jbe
add
arpl
mov
add
add
imul
inc
and
jbe
icebp
mov
dec
add
retf
pop
jmp
add
add
adc
jl
or
js
(bad)
pushf
neg
mov
pop
(bad)
shl
(bad)
cmp
add
add
in
add
pop
scas
in
jp
sbb
jg
push
loop
and
jp
mov
test
add
ja
mov
icebp
sbb
sti
adc
add
in
lock
sbb
in
mov
(bad)
mov
aad
sub
mov
dec
mov
(bad)
in
dec
add
nop
dec
mov
clc
inc
retf
mov
sti
test
outs
and
sbb
add
jnp
add
add
imul
and
jb
pop
rol
ja
inc
ret
and
jb
push
outs
outs
add
ss
adc
xor
push
retf
fisubr
ins
add
popf
mov
add
outs
int3
mov
leave
or
dec
sub
cmps
scas
lds
les
add
inc
add
dec
pop
add
jl
repnz
cmp
gs
jge
ficomp
push
xor
cmp
sahf
cmp
dec
add
nop
jnp
test
fst
mov
adc
add
push
xchg
int3
cld
fstp
test
xchg
sub
scas
mov
add
add
add
mov
aad
dec
inc
sbb
adc
push
push
and
rcr
sahf
sbb
pop
gs
add
add
mov
xchg
inc
cmp
add
or
std
add
ret
int3
aad
push
adc
in
loope
pop
push
test
cmp
xchg
cdq
es
mov
push
xchg
mov
out
fadd
add
aam
xor
sbb
or
mov
mov
add
adc
gs
add
gs
sub
std
mov
push
add
popa
les
pushf
sbb
pop
int
fild
add
cmp
and
add
pop
push
in
dec
gs
push
and
out
add
pop
repz
ins
or
clc
std
mov
mov
and
std
mov
lea
sbb
cwde
(bad)
and
and
cs
add
rcl
hlt
add
add
ja
jne
pop
jl
shl
int
cmps
push
add
dec
sti
xchg
pop
sbb
scas
daa
aad
add
add
jno
dec
mov
stc
lods
xor
adc
add
add
(bad)
movs
cmps
in
push
pop
mov
cdq
inc
add
add
fadd
sbb
clc
repz
add
int3
add
add
cmp
jne
push
fstp
out
mov
add
aas
add
mov
cmp
add
add
outs
xor
test
adc
dec
add
in
retf
dec
sar
cmps
sub
push
jnp
fmul
mov
pop
sub
shl
or
mov
add
(bad)
fadd
inc
add
enter
xchg
(bad)
ret
or
push
mov
add
pop
cmps
pop
sbb
sahf
dec
in
mov
adc
push
fdivrp
mov
out
repnz
xchg
in
xor
xchg
add
fs
xchg
xchg
jb
ret
cmp
inc
outs
add
into
pop
mov
iret
call
mov
pusha
(bad)
mov
xchg
and
lods
and
pusha
loope
(bad)
push
add
imul
(bad)
mov
aaa
out
add
or
sub
mov
clc
cmp
dec
jmp
enter
add
movs
lock
add
add
loop
arpl
ret
and
mov
repnz
add
mov
cmps
sbb
add
enter
shr
add
add
movs
add
add
aad
dec
int3
in
addr16
ins
push
dec
pushf
jnp
fs
ins
sbb
mov
cmp
xchg
movs
mov
test
pop
xchg
add
add
test
addr16
gs
jo
leave
jle
add
lahf
or
adc
jmp
call
and
enter
push
add
xrelease
mov
aam
movs
add
fwait
pushf
ins
add
add
add
adc
mov
mov
sub
jb
xchg
xor
fs
cmp
stos
xlat
outs
add
push
aam
pop
in
mov
add
add
add
add
inc
mov
in
add
imul
inc
and
call
add
add
sti
inc
dec
push
adc
sub
xor
xchg
pop
jns
add
out
sub
sbb
fidiv
add
xor
add
cmp
(bad)
jbe
xor
mov
dec
xchg
dec
xor
inc
scas
add
push
outs
or
outs
mov
push
pop
(bad)
sldt
inc
popf
test
adc
lds
js
add
sub
pushf
and
add
add
add
lds
bound
xor
pop
retf
dec
push
mov
xchg
adc
jbe
icebp
inc
std
retf
xchg
fwait
mov
ror
movs
or
ret
add
sar
rcr
lea
sbb
or
add
add
pop
add
xchg
inc
fadd
lds
add
(bad)
popf
sub
stos
shl
add
inc
cmp
push
repz
jne
inc
mov
out
mov
lea
mov
jp
sbb
(bad)
pop
jp
mov
add
mov
push
cld
sub
les
add
add
mov
test
lods
aaa
jl
add
pop
mov
outs
sub
add
add
dec
std
call
xor
add
sub
dec
sub
add
add
push
fnstsw
jmp
fsub
nop
xchg
sub
rol
les
(bad)
xor
dec
pop
aas
fidivr
mov
test
(bad)
mov
fwait
xor
xor
inc
imul
out
cmps
add
sbb
jo
inc
jecxz
jae
daa
mov
imul
ror
dec
adc
push
add
js
mov
dec
dec
movs
(bad)
enter
add
call
mov
nop
mov
pop
mov
add
loop
push
xchg
(bad)
enter
dec
add
fild
add
(bad)
adc
mov
aas
mov
loope
lahf
(bad)
push
add
and
pop
add
add
fucom
and
mov
xchg
outs
test
xchg
or
sbb
or
xchg
mov
add
popa
std
das
add
arpl
(bad)
ins
or
div
xor
and
arpl
cmp
add
xchg
mov
cli
xchg
aad
mov
add
add
outs
dec
dec
outs
adc
xor
add
mov
outs
mov
test
stos
pop
push
imul
mov
aad
xor
add
shr
sub
push
or
add
add
add
sbb
arpl
enter
mov
loopne
mov
int
cmp
xor
div
add
inc
sbb
adc
pop
in
add
add
add
das
in
push
mov
mov
jp
mov
push
cwde
ss
js
add
call
adc
pop
ror
aam
aam
add
or
mov
aam
mov
cwde
mov
nop
xchg
add
add
mov
pop
mov
jmp
popa
mov
call
xor
stos
add
add
in
shl
pop
dec
pop
cs
inc
mov
sbb
add
out
jl
add
mov
pop
and
mov
add
add
fxch
jb
jns
mov
call
fcomp
in
add
stos
and
mov
bnd
add
add
out
outs
add
xchg
pop
and
adc
jle
push
out
ficomp
inc
pop
rcr
push
mov
add
mov
ret
add
push
dec
jbe
pop
leave
mov
js
repnz
repz
sub
mov
sar
add
add
adc
add
movs
lods
sbb
jmp
aam
sbb
sbb
loopne
or
inc
inc
cld
fidiv
add
xchg
stos
scas
pop
push
(bad)
stos
scas
inc
adc
add
cmp
pop
call
push
add
pop
jns
adc
mov
jp
pop
test
in
pop
mov
add
add
mov
mov
jl
std
dec
mov
xchg
cld
add
add
(bad)
push
ins
std
aad
xlat
mov
scas
je
add
add
mov
rol
sbb
add
add
sbb
pushf
sub
mul
js
dec
push
add
scas
mov
add
call
dec
dec
aam
rcr
sbb
sti
icebp
pop
cwde
std
add
test
ds
or
and
rcl
dec
sbb
sub
bound
fsubr
lock
add
add
add
mov
repz
cmp
cli
inc
leave
xor
mov
jnp
xor
aas
ss
jmp
jmp
add
into
fxch
daa
pop
add
push
inc
add
add
mov
pop
and
mov
and
out
loop
xchg
mov
ins
add
es
lods
fmul
xchg
add
shl
add
xchg
cs
stc
lods
mov
popa
add
inc
and
ins
test
add
aas
jbe
add
mov
cld
xor
rcl
add
dec
adc
bound
add
add
mov
mov
addr16
adc
popa
loopne
cld
les
jle
add
fisub
xchg
sbb
(bad)
fld
jo
cwde
sub
or
mov
test
cmp
inc
add
adc
pop
mov
add
aam
or
mov
dec
push
mov
imul
not
pop
stc
dec
add
add
dec
fsubr
adc
fadd
mov
add
popf
push
adc
jbe
jle
add
add
push
repz
dec
repnz
mov
call
mov
mov
xchg
(bad)
inc
arpl
into
std
mov
push
add
xchg
xor
pop
jb
in
pushf
push
nop
or
add
or
stos
nop
add
sbb
or
repz
add
(bad)
mov
add
sub
jle
mov
push
or
add
ins
daa
fisubr
xor
add
dec
cmp
adc
xor
call
ss
out
add
sahf
in
rcr
cmp
fisub
add
loope
mov
outs
stos
cmps
loopne
xchg
add
add
add
sub
add
ss
jae
add
add
outs
call
mov
add
xchg
jne
cli
fsub
push
and
adc
cmp
add
sub
mov
push
add
push
add
clc
add
add
in
jl
add
inc
add
add
pop
mov
cwde
cmp
add
add
jmp
mov
je
xchg
xor
add
imul
cmp
fiadd
(bad)
xor
js
lds
add
and
inc
push
add
push
xabort
push
loop
aas
add
push
push
add
add
push
pop
int
push
scas
mov
retf
mov
add
(bad)
js
mov
je
ds
mov
es
dec
sbb
xchg
add
push
stc
sub
dec
push
and
lods
shr
fisttp
add
lahf
add
push
jg
int3
and
jns
into
loop
fcom
add
add
mov
push
mov
ins
ss
mov
add
lea
jne
(bad)
dec
pop
push
mov
sub
inc
dec
jae
add
mov
inc
push
and
cmp
jmp
mov
push
sbb
loopne
push
lds
add
dec
mov
cmp
loop
cdq
push
loopne
arpl
add
outs
sti
dec
repz
stos
jno
mov
mov
add
gs
pop
pop
les
and
jp
add
jo
adc
fdivr
push
inc
sbb
iret
into
adc
cmps
push
mov
add
fdivr
cmovl
push
mov
add
xor
add
fs
and
test
add
add
mov
sbb
push
cmp
add
add
loop
push
out
enter
push
pop
cwde
adc
and
movs
cmp
sub
mov
fdivp
fs
fcom
dec
xchg
add
sbb
xor
(bad)
data16
sbb
push
add
inc
add
inc
add
mov
outs
cmps
dec
aam
add
test
movs
pop
add
add
(bad)
jge
test
sub
mov
xchg
xchg
jmp
jmp
add
dec
push
add
ins
adc
xchg
add
add
aas
mov
add
fistp
dec
mov
add
add
add
add
out
iret
mov
jno
cli
add
and
jle
jns
daa
lahf
and
ds
xor
repnz
push
pop
test
push
pop
jmp
mov
into
add
mov
pop
sbb
out
jo
adc
add
pop
enter
gs
ret
nop
pop
add
push
inc
es
add
xor
add
pop
out
jmp
add
pop
out
adc
nop
jmp
test
sbb
sub
add
push
jl
test
jmp
add
loopne
jp
mov
loopne
mov
push
add
add
push
std
xchg
lds
ja
inc
dec
enter
rol
add
loopne
add
cwde
rol
mov
xchg
ins
jle
dec
pop
add
add
push
je
mov
ror
adc
nop
nop
mov
dec
fisub
xchg
pop
in
inc
call
add
or
mov
popf
or
cmp
jp
mov
or
test
loope
add
adc
ror
adc
add
push
inc
jle
hlt
movs
sbb
fnstenv
mov
push
jbe
ja
add
es
mov
adc
or
sbb
test
adc
add
cmps
ins
test
and
push
mov
aaa
jl
shl
mov
iret
pop
inc
add
sti
push
push
stc
xchg
add
push
add
and
push
outs
ds
add
(bad)
and
add
add
xchg
or
cmp
call
movs
retf
jp
and
pop
add
add
shl
fimul
adc
jnp
int
stos
jp
xchg
add
xchg
jmp
add
stc
arpl
mov
add
xchg
add
aad
cmps
add
daa
(bad)
lods
cmp
shl
repz
or
jmp
arpl
mov
add
adc
add
je
and
mov
cwde
xchg
add
dec
jle
pop
je
adc
(bad)
add
mov
pop
inc
mov
push
mov
add
jae
stos
in
inc
mov
xor
mov
pop
inc
loopne
push
add
test
add
in
xchg
scas
and
test
push
jg
jmp
sub
and
cld
repnz
sbb
outs
add
add
gs
add
ds
dec
repz
push
outs
pop
and
xchg
add
add
sub
aam
test
xor
retf
fcom
test
sbb
push
jp
lods
shl
cli
add
add
das
xor
sbb
outs
xchg
shl
cmp
push
adc
lods
add
inc
add
scas
jne
sbb
shl
xor
add
add
add
bound
inc
inc
out
enter
popf
cli
sbb
lock
add
push
jbe
add
mov
push
je
in
add
mov
icebp
jl
adc
mov
call
add
test
add
repnz
mov
test
mov
cmp
add
add
out
add
add
movs
rcr
xchg
dec
rcl
xor
lock
(bad)
aad
shl
ror
add
jl
mov
push
push
ins
pop
gs
imul
cld
add
mov
and
dec
add
loopne
icebp
movs
addr16
dec
repnz
ins
inc
adc
test
jbe
add
cmp
mov
gs
rol
add
add
inc
test
sbb
mov
push
or
shl
add
mov
or
rcl
sub
add
pop
mov
mov
in
jne
cmp
imul
lods
ja
jl
mov
mul
add
add
add
mov
inc
stc
pop
sub
es
xchg
mov
push
add
add
jnp
inc
dec
mov
inc
aaa
xor
jae
add
dec
cmps
push
mov
movs
mov
mov
cli
sbb
sbb
in
add
add
jbe
lea
retf
mov
popa
nop
add
add
hlt
mov
mov
mov
jp
js
pop
sar
add
sbb
jns
repnz
jecxz
outs
fs
adc
repz
jno
xchg
adc
add
loope
or
dec
mov
xor
xor
add
xchg
je
push
inc
dec
xchg
add
push
scas
fwait
mov
push
out
push
cmp
mov
add
add
jbe
mov
or
pop
jl
and
push
xor
dec
mov
in
pop
jle
pop
mov
int3
out
arpl
sub
jle
add
push
fistp
add
sbb
dec
jg
pop
lahf
outs
daa
cmp
jns
add
jb
or
add
mov
pop
sbb
push
mov
scas
jge
add
mov
add
adc
shr
in
jmp
mov
and
lahf
jb
icebp
mov
mov
sldt
pop
dec
(bad)
pop
lods
dec
aas
xchg
fwait
sub
stc
xlat
add
dec
cwde
push
sub
ss
pop
call
cmp
add
xchg
sub
sar
add
mov
add
add
xchg
shl
mov
or
sub
dec
ret
mov
sub
cmp
pusha
lock
xchg
ds
lods
and
cdq
scas
mov
(bad)
retf
nop
lods
push
loope
scas
add
xchg
add
aas
push
(bad)
iret
ret
(bad)
pop
adc
lods
fst
jb
sub
pop
ss
mov
je
int
mov
add
add
push
add
xchg
(bad)
loopne
test
les
rcr
inc
xchg
adc
add
(bad)
adc
push
scas
mov
add
adc
push
sub
xchg
(bad)
repnz
(bad)
pop
sahf
mov
add
or
out
adc
fcom
in
or
xchg
xor
jmp
lea
dec
ret
xor
popf
mov
add
jb
add
mov
loop
fwait
add
nop
add
jb
add
add
(bad)
loope
fimul
dec
fwait
sub
sub
sbb
adc
lods
add
add
dec
cmc
mov
lea
push
idiv
(bad)
mov
jbe
das
add
call
out
or
add
ins
(bad)
arpl
or
cli
mov
shl
add
bound
call
sar
add
fwait
xor
nop
jg
adc
test
jle
jle
add
dec
sti
xchg
xchg
popf
dec
movs
bound
repnz
call
mov
add
push
jge
(bad)
clc
pop
(bad)
movs
dec
add
and
fcom
xlat
sbb
daa
add
add
jg
out
in
add
xor
dec
int3
mul
lods
les
fs
mov
dec
jge
push
inc
xchg
stos
mov
add
shl
jae
rol
sar
aad
cmp
add
cmp
sbb
add
add
test
(bad)
mov
mov
jge
xchg
bound
jl
jne
popf
and
pop
hlt
adc
adc
imul
add
ficom
jle
sub
fild
jl
add
movs
add
or
mov
lods
add
mov
mov
jo
and
cmp
add
xchg
jns
sub
xchg
cmps
cld
dec
repnz
add
and
mov
sub
xchg
sub
inc
hlt
xor
movs
ins
add
and
add
or
ss
mov
ret
mov
add
add
popa
jg
mov
and
mov
stos
fsub
add
sub
add
add
add
add
add
push
clc
and
shr
pop
push
xor
retf
movlps
ins
jmp
iret
push
add
and
sbb
xchg
data16
call
add
pop
push
jns
add
add
add
jne
bnd
test
(bad)
int3
cdq
push
and
mov
arpl
add
mov
adc
add
add
add
in
rcr
dec
test
shl
stc
pop
shl
pop
iret
lea
sub
xor
test
pop
daa
jmp
rol
jae
add
div
or
cmc
(bad)
ret
mov
lock
cmps
add
add
xlat
js
add
out
ret
shr
sub
push
add
jle
aaa
pop
es
test
pop
nop
add
push
cmp
add
mov
les
iret
nop
std
sbb
call
add
lods
iret
fisttp
cmp
mov
jle
and
jle
out
add
test
xchg
push
xchg
mul
add
out
aaa
adc
dec
in
jecxz
lock
sub
popa
pop
ret
mov
push
xchg
loop
jmp
data16
(bad)
push
add
xchg
aam
push
inc
adc
dec
xchg
add
push
adc
and
call
add
jbe
adc
sar
dec
scas
stos
in
lods
in
cmp
sub
icebp
inc
xchg
add
xchg
xchg
fadd
sbb
add
add
add
ins
(bad)
nop
retf
repnz
test
cmp
mov
cmp
mov
adc
lds
in
adc
mov
add
inc
push
lock
mov
test
add
push
add
mov
(bad)
add
add
adc
and
cmps
rol
add
add
mov
outs
xor
fsubp
popa
push
mov
pop
xlat
xchg
gs
mov
(bad)
or
test
push
cmp
sti
cli
pop
push
add
and
ret
pusha
add
add
push
jbe
aam
mov
(bad)
and
sbb
cmp
rcr
jbe
add
pusha
or
jge
jmp
dec
cmp
mov
rcr
js
loopne
add
xlat
mov
push
mov
add
mov
and
cli
mov
and
imul
loop
xchg
add
div
or
je
add
xchg
xchg
xchg
sub
and
test
arpl
add
inc
dec
pusha
jmp
pop
fld1
xchg
add
add
sub
or
sbb
lods
test
push
pop
hlt
add
add
sar
xor
std
mov
pop
cmp
inc
and
xchg
pop
(bad)
cwde
mov
xor
iret
mov
add
or
arpl
add
ins
mov
add
in
repnz
out
fidivr
cmp
mov
add
add
dec
pop
add
xchg
inc
rol
mov
add
jl
mov
add
pop
test
pop
push
jle
or
add
pushf
add
test
adc
fidiv
mov
or
cmc
push
cs
sbb
mov
test
add
test
popa
add
add
mov
cs
sub
pop
xchg
pop
and
iret
and
mov
lock
jp
sub
sub
push
mov
jae
xchg
sub
xchg
(bad)
sub
dec
ss
(bad)
push
add
sbb
mov
sub
add
xchg
and
mov
(bad)
fs
fiadd
aas
mov
inc
into
add
add
push
nop
xchg
add
scas
neg
jmp
mov
(bad)
scas
sbb
add
xchg
or
mov
pusha
jp
add
mov
mov
add
fdiv
push
mov
push
mov
imul
sbb
pop
cmp
sub
add
aam
adc
movs
lea
add
ins
retf
add
(bad)
int3
add
sbb
add
ret
push
or
test
mov
cmps
mov
inc
out
mov
add
mov
or
dec
ja
xlat
push
push
mov
add
jle
js
sbb
sbb
add
add
push
pop
xor
push
add
ins
xchg
or
cmp
add
pop
add
and
add
pushf
je
ficomp
sbb
fldenv
add
xchg
jne
mov
stos
xchg
add
fldenv
idiv
cmp
jmp
retf
inc
add
sbb
mov
pop
das
add
xchg
add
add
rol
mov
jg
mov
mov
add
cmp
in
xchg
sub
pushf
add
out
arpl
pop
fisubr
sub
and
int
add
add
add
je
js
daa
push
ret
scas
shl
xchg
aam
cmp
jns
add
mov
push
mov
mov
pusha
cmps
lahf
push
push
xor
add
shr
mov
cmp
mov
mov
inc
daa
xchg
in
add
mov
xchg
retf
int
cmp
(bad)
leave
mov
stc
lods
cli
push
dec
jmp
out
test
add
add
xchg
jecxz
add
sub
pop
(bad)
adc
sub
cmp
add
adc
std
cmp
add
mov
mov
pushf
or
push
outs
fs
add
add
test
loope
push
loop
jne
cdq
add
add
add
fst
scas
jo
jle
cdq
lahf
(bad)
or
sub
sub
loop
loopne
pop
ja
fiadd
inc
retf
add
add
add
loope
inc
fld
inc
sub
imul
jno
mov
cld
sbb
and
jle
in
ret
hlt
mov
pop
daa
test
cdq
mov
add
add
(bad)
in
mov
mov
add
pop
out
add
add
bnd
jl
pop
popfw
push
cmp
adc
cmp
or
mov
cmp
scas
in
add
adc
(bad)
jne
dec
mov
test
aas
lea
movs
xchg
add
cmp
pop
mov
push
lahf
loope
inc
aam
push
scas
add
jle
add
cmp
or
jecxz
or
add
mov
xchg
jo
add
hlt
lods
ins
cmp
xor
add
add
sbb
cdq
mov
dec
aas
jns
(bad)
push
call
add
cmp
popa
in
add
xchg
pushf
int3
or
test
sub
add
or
add
add
jmp
add
adc
call
cli
into
mov
sahf
add
(bad)
(bad)
sub
cmps
mov
pop
xor
add
repz
cmps
push
add
lahf
fwait
stc
mov
ret
add
add
jb
out
movs
pusha
into
lea
push
mov
or
or
add
adc
inc
add
mov
in
xor
loopne
jmp
ja
into
add
aaa
sahf
ror
jmp
adc
add
mov
lods
add
push
pusha
pop
push
add
add
fmul
sub
jbe
cmp
push
push
mov
cld
add
inc
mov
test
mov
cmc
in
movs
fsubr
add
dec
dec
add
or
fsubr
cs
add
outs
retf
and
pop
add
aam
sbb
cld
add
adc
aas
into
push
add
add
sahf
dec
(bad)
pop
repnz
add
sbb
dec
les
(bad)
loopne
xchg
add
rcr
add
in
and
out
lea
imul
(bad)
outs
cmps
int3
js
test
add
pop
inc
adc
fcomp
push
lds
leave
add
mov
add
add
push
and
push
adc
(bad)
icebp
add
sahf
in
rcr
fdivr
jl
addr16
(bad)
add
add
add
stos
mov
sub
pop
nop
test
pop
cmp
fld
fs
in
dec
add
add
add
stc
mov
sub
in
pop
mov
fs
adc
inc
xchg
xlat
out
sahf
ins
pop
ret
movs
cmovae
jnp
mov
mov
fild
cs
pop
js
add
add
xor
add
push
xor
and
fs
xor
fnstcw
call
inc
add
fstp
enter
or
inc
call
shr
mov
sahf
add
popf
add
jbe
pop
push
jnp
add
sbb
inc
gs
jle
add
add
mov
add
add
mov
push
xchg
add
add
lock
mov
mov
out
ins
fstp
bound
test
fwait
ds
dec
push
jno
xchg
push
sub
sub
loop
add
cmp
sub
ret
and
cmc
ds
in
test
sub
(bad)
sbb
fst
inc
add
pop
stc
shl
leave
loope
(bad)
sbb
xchg
bound
dec
push
mov
push
mov
jle
mov
cmp
inc
pop
in
push
daa
add
pushf
ds
mov
enter
add
add
add
adc
mov
stos
mov
mov
add
dec
push
sub
or
jp
xor
fucom
xor
add
add
out
std
out
xor
add
lock
jp
pusha
fnstsw
loopne
jb
and
pmaxub
pop
call
or
in
add
add
imul
add
ss
mov
test
and
xchg
ds
jge
mov
add
add
bound
ds
loopne
lock
pop
cmp
or
(bad)
mov
push
pop
std
sub
popa
loop
int3
int
add
sub
jl
nop
add
add
xchg
xor
and
int3
xor
clc
cs
jnp
sub
add
add
add
cmc
add
add
pop
xchg
or
ficomp
repz
mov
lods
test
dec
add
add
jle
pushf
push
mov
ret
pop
jge
mov
inc
ins
push
test
jecxz
aas
mov
and
ret
add
enter
xor
jge
add
add
imul
gs
(bad)
push
pop
jb
vcvtpd2ps
add
jg
repnz
add
add
xor
div
pop
push
jmp
mov
and
add
jmp
aaa
test
mov
add
pushf
jecxz
push
inc
sahf
lods
pusha
int3
and
inc
add
icebp
xchg
cmps
test
dec
sahf
int
push
or
mov
add
dec
add
add
add
enter
ds
sub
xchg
pop
icebp
pop
or
add
test
es
ins
add
lods
retf
loop
pop
jb
xchg
push
(bad)
out
pop
sub
sbb
adc
xchg
add
mov
add
aas
cmp
fdiv
(bad)
shr
add
add
lods
or
ror
cmp
mov
add
out
loope
pop
les
or
add
outs
push
dec
inc
push
jbe
out
pop
or
jle
add
add
adc
repz
cwde
psubusw
jmp
sbb
sbb
sub
mov
call
loope
xchg
jb
add
jo
cmp
add
into
cmps
add
pop
jg
lea
call
fcmovnb
cmp
add
jmp
push
sti
rol
add
add
sbb
cmp
test
add
test
xchg
push
and
mov
dec
adc
add
xor
cmp
clc
add
add
cmps
add
add
lea
add
add
add
sbb
jecxz
inc
push
ret
dec
sub
add
sub
add
or
lods
lahf
mov
dec
ins
ror
adc
loopne
cmps
add
add
(bad)
fsub
adc
pop
push
fsub
mov
jo
and
call
add
cli
push
xchg
sti
rcr
pop
push
add
add
jmp
imul
test
pop
mov
add
into
dec
jbe
xor
loop
add
mov
clc
movs
in
aas
mov
das
cmp
add
xor
aad
add
add
out
scas
(bad)
and
fidivr
push
and
xor
jecxz
mov
out
jo
out
cld
add
add
cmp
add
jno
adc
or
aad
mov
add
fst
add
add
repnz
sbb
cmp
jle
ror
push
sbb
add
fs
mov
iret
bound
sbb
repnz
cmp
add
add
(bad)
call
ficomp
neg
outs
mov
or
add
daa
cmp
mov
dec
cmps
icebp
add
add
add
fstp
gs
pop
jb
bound
pushf
or
movs
cdq
add
add
add
xor
shl
in
sbb
pop
pop
rcr
mov
call
adc
imul
and
xor
xor
call
repnz
clc
mov
xchg
add
add
xchg
hlt
xchg
scas
stos
add
fcomip
add
cmp
ror
cwde
sbb
dec
xchg
retf
jmp
add
mov
add
add
arpl
ud2
dec
jle
and
mov
mov
adc
add
add
add
in
test
jbe
into
mov
jge
cs
jl
cmp
lock
or
(bad)
enter
test
enter
pop
shr
cmps
cmp
jns
add
mov
xlat
mov
loop
(bad)
retf
sbb
cmp
ins
sbb
fiadd
add
pop
movs
jnp
jmp
add
mov
sub
retf
and
sbb
stos
sahf
jg
push
mov
sbb
loopne
outs
add
add
js
push
popf
je
cmp
sbb
push
add
in
push
push
dec
pop
cmps
sub
adc
add
cmp
cld
in
cmp
add
jecxz
pop
(bad)
add
mov
add
xchg
or
dec
adc
mov
adc
retf
cmp
enter
pop
cmp
arpl
add
(bad)
jmp
add
add
in
rcr
nop
bound
aam
fwait
pop
jge
daa
jl
cs
icebp
pop
repnz
mov
add
stc
into
mov
xlat
out
jecxz
stos
mov
push
into
push
mov
inc
sub
add
sbb
add
mov
jb
sbb
aad
add
clc
out
add
add
xchg
add
mov
rol
pusha
xchg
push
mov
rol
add
push
cmp
add
mov
sub
shl
clc
pop
cmc
ficomp
aam
ret
stos
sbb
add
add
call
mov
xor
pop
bound
push
jmp
cmp
add
jl
cvttps2pi
std
bound
adc
sub
sbb
mov
add
add
inc
and
pop
fadd
add
add
add
sahf
adc
fnstsw
push
jl
shl
jle
stc
loop
lods
int3
cld
pop
retf
lahf
xchg
enter
mov
push
inc
push
call
cld
lds
add
xchg
push
mov
mov
lea
jne
pop
mov
cmp
pop
hlt
test
xchg
add
not
push
icebp
enter
cmp
mov
push
lea
ret
test
push
push
add
adc
retf
and
mov
mov
add
add
xchg
(bad)
dec
mov
pop
push
test
enter
mov
loopne
in
add
xlat
int3
mov
fbstp
enter
sbb
add
add
je
push
lds
fisttp
xchg
mov
mov
scas
pop
sbb
jmp
xchg
adc
add
mov
push
add
add
add
je
loope
xchg
imul
push
icebp
add
js
cli
add
stc
add
pop
mov
cs
dec
out
push
and
clc
test
loopne
push
or
cmps
push
icebp
add
retf
movs
xor
xchg
cld
sub
(bad)
add
ds
movs
add
jmp
loop
or
loop
push
mov
add
xor
mov
adc
je
add
loop
es
das
mov
xor
add
dec
dec
aaa
(bad)
xchg
xchg
sbb
add
movs
dec
scas
and
add
push
add
add
add
jl
mov
or
fiadd
sar
ja
loopne
sbb
mov
call
retf
lods
ret
adc
push
dec
sbb
cwde
dec
leave
and
inc
xchg
add
and
sbb
jbe
fst
add
fisubr
inc
sub
out
imul
fisub
mov
add
into
std
add
push
add
into
mov
lds
add
adc
cmp
ret
cwde
push
add
outs
adc
ss
push
mov
mov
outs
scas
dec
mov
sub
repz
push
push
mov
call
mov
or
sub
jns
add
sti
add
add
push
dec
jl
aad
mov
aam
add
xor
addr16
xchg
adc
cmps
repnz
mov
stos
mov
inc
cmp
nop
pop
sbb
in
xchg
rcr
fadd
add
xchg
xchg
jle
sub
add
xchg
mov
xchg
bound
fs
hlt
add
add
movs
jne
dec
push
jbe
leave
adc
js
imul
and
bsf
add
cmp
mov
icebp
and
aas
in
add
adc
jo
sub
add
add
div
add
jge
adc
pop
mov
sbb
rol
pop
or
adc
into
add
add
lods
fidivr
in
loopne
add
das
cmp
push
add
add
lods
sub
add
das
pushf
cmps
fs
xchg
pop
xor
jnp
add
dec
frstor
ins
cmps
xchg
xor
lds
jbe
outs
sub
jbe
add
fwait
mov
stc
call
pusha
hlt
fld
popf
movs
jmp
add
add
push
clc
add
and
cmp
add
mov
add
fucomp
int
mov
stos
jno
add
mov
jne
or
add
das
loopne
cmp
cld
add
les
ja
xlat
pop
das
hlt
out
add
pusha
add
add
aam
pop
loope
imul
pusha
pop
mov
test
retf
xor
mov
aad
sub
xor
and
jns
add
pop
clc
(bad)
dec
not
or
pop
mov
ins
outs
call
add
fdivr
jg
adc
cmp
(bad)
lahf
retf
jae
or
add
add
add
xchg
in
pop
test
loope
dec
out
push
int3
outs
add
add
rcr
adc
(bad)
jge
xor
sub
add
jns
xchg
push
push
add
push
sbb
add
js
push
ss
push
ins
aaa
in
xchg
jns
inc
push
add
dec
push
or
into
xchg
push
xor
div
add
xor
stos
cmps
in
out
add
add
ds
dec
pop
(bad)
popf
push
jno
sub
xchg
add
ins
add
pop
inc
iret
sti
clc
add
add
jecxz
pop
mov
cmp
xchg
push
sbb
lods
xor
gs
xchg
pusha
and
mov
add
je
rol
hlt
or
cmp
add
push
scas
ror
add
pop
clc
aad
cld
adc
aaa
and
sub
jns
add
xchg
add
or
add
inc
mov
add
pusha
or
sbb
aaa
in
add
sbb
add
ds
rcl
enter
inc
sub
sbb
call
dec
jp
mov
dec
and
add
sub
cmc
arpl
adc
retf
jmp
pop
push
add
scas
jge
out
mov
in
repnz
scas
xor
add
push
push
sub
mov
leave
or
es
or
add
sub
push
hlt
test
add
fsubrp
pop
lea
inc
xchg
sbb
add
out
ds
xchg
push
fmul
rol
cs
add
mov
fmul
scas
jmp
loope
cmp
mov
(bad)
cmc
adc
outs
add
mov
add
(bad)
adc
add
adc
movs
mov
lea
and
out
in
add
inc
data16
fidivr
add
mov
lods
cwde
mov
add
sub
fst
push
add
movs
mov
dec
icebp
into
mov
push
xor
cmp
fs
js
mov
push
dec
adc
add
bound
jno
(bad)
sub
add
add
(bad)
jns
int3
sub
sub
push
enter
and
inc
in
fdivr
add
adc
xor
push
jl
cmp
shl
xchg
xor
rol
add
push
into
mov
neg
mov
mov
add
mov
add
dec
stc
lods
add
pop
mov
dec
lahf
es
add
sbb
add
cli
sti
xor
jp
adc
xchg
push
add
mov
add
mov
in
cmp
xchg
out
sbb
pushw
xor
add
shl
push
inc
mov
and
nop
add
mov
rol
jp
add
add
es
test
mov
mov
lock
cs
jns
jno
inc
or
das
fcmovnbe
add
fldcw
add
sub
loop
add
int
push
sub
sub
cs
lock
daa
add
outs
jno
add
add
add
out
jle
xlat
sar
lods
inc
xor
idiv
adc
test
xchg
ret
mov
mov
push
cmps
inc
fisubr
xor
add
add
add
push
mov
adc
or
jno
cmp
ficomp
inc
cmps
dec
sahf
push
add
outs
adc
aaa
push
dec
add
pop
dec
jnp
pop
ds
inc
or
add
xor
mov
and
adc
popf
nop
add
sbb
add
aas
pop
jl
add
add
test
push
inc
inc
cmp
mov
cmp
retf
ds
sbb
js
push
ja
out
mov
jo
xchg
add
cmp
push
inc
sahf
mov
dec
lods
arpl
subps
lds
not
rcl
rcr
shr
in
or
sbb
add
add
aam
scas
xchg
mov
sub
cli
call
int3
(bad)
sub
mov
shl
jmp
jl
es
fild
add
xor
retf
imul
rcr
in
sbb
mov
les
and
mov
cmps
mov
xor
aas
jno
popa
add
icebp
(bad)
jecxz
add
repnz
jnp
cli
jmp
and
add
call
(bad)
clc
mov
pop
add
add
in
sbb
or
adc
outs
mov
jp
cmp
add
adc
xor
xchg
push
shl
pop
add
lods
add
test
fmul
jnp
mov
jne
fiadd
or
fiadd
aam
add
and
jb
add
jmp
into
mov
add
add
aad
mov
sbb
outs
xchg
mov
in
inc
xchg
fild
adc
inc
pop
add
aad
sub
(bad)
pop
lock
pop
add
mov
lea
cmp
and
cli
add
rol
and
pop
adc
es
popf
cmp
mov
and
inc
add
leave
xor
mov
mov
(bad)
cld
add
add
xchg
rcr
xor
out
lods
add
fcom
shl
sbb
mov
inc
and
xchg
add
add
repnz
ret
jae
mov
jmp
and
cmp
lods
out
call
shr
pop
(bad)
add
rol
cmc
cli
jmp
cmps
mov
add
es
int
push
xchg
fist
call
std
push
cld
loop
jmp
and
adc
add
ror
add
inc
dec
add
(bad)
(bad)
add
fimul
add
out
pop
adc
xchg
pusha
or
fadd
add
cmp
test
lods
in
cdq
sub
call
int3
dec
fcmovnbe
push
mov
add
clc
popa
add
fsub
clc
mov
and
mov
add
out
xor
pusha
sbb
add
hlt
pop
add
pop
aas
add
add
mov
(bad)
add
sbb
cwde
imul
add
mov
outs
mov
in
add
add
les
nop
in
jmp
add
add
jmp
add
mov
add
dec
pop
out
push
mov
sbb
movs
sbb
add
fs
xchg
(bad)
cwde
(bad)
enter
test
jmp
add
fcomp
dec
jo
add
push
add
push
xlat
mov
add
jl
enter
stc
mov
lock
or
cwde
jb
mov
add
mov
xor
aad
pop
dec
pop
xchg
jg
add
cmp
mov
leave
dec
xor
out
or
ficomp
push
cli
mov
add
enter
jmp
push
imul
fisub
shr
mov
mov
adc
int
pop
jmp
and
add
shr
fisttp
mov
ja
xor
dec
retf
mov
sub
ret
repnz
lea
add
push
inc
mov
fcmovnu
push
add
xchg
leave
cmp
pop
inc
hlt
out
adc
icebp
mov
mov
add
fidiv
rcr
add
mov
clc
add
add
mov
add
jl
dec
cmp
add
test
cmp
data16
cmp
scas
mov
scas
push
(bad)
add
test
jbe
push
rcl
push
jns
rol
mul
add
rcr
addr16
or
mov
mov
add
add
leave
mov
cld
out
sub
lea
daa
add
(bad)
idiv
pop
push
xchg
scas
mov
out
inc
add
add
adc
scas
and
push
add
xor
js
adc
and
xchg
jle
aad
pop
xlat
and
ins
imul
scas
and
(bad)
mov
sub
mov
mov
add
ret
or
inc
mov
sbb
cmp
add
mov
xchg
mov
mov
xor
adc
add
add
add
popa
mov
inc
pop
out
push
jbe
jmp
cmc
rcr
cmps
out
pop
dec
out
div
add
dec
test
ja
or
(bad)
sub
add
push
je
mov
xor
pop
add
aad
fs
add
dec
jae
xor
ret
ss
xor
mov
ret
ret
sti
pushf
fwait
cmp
add
test
dec
sbb
jge
sub
push
out
cmp
imul
nop
add
add
sub
mov
test
jnp
lods
jnp
mov
es
xlat
mov
push
mov
fiadd
repnz
cmp
ds
clc
nop
dec
pop
add
add
adc
and
add
add
jmp
sub
add
out
into
les
pop
(bad)
fwait
sub
dec
push
add
add
add
sbb
call
lahf
xor
test
ss
fstp
out
out
ss
lods
adc
dec
out
es
add
push
jge
add
inc
xchg
es
jo
ror
mov
cmp
mov
or
repz
add
add
add
add
xchg
push
sub
push
push
and
push
repz
add
or
or
xchg
rcl
aam
jl
pop
xchg
mov
xchg
mov
add
inc
ds
jmp
add
push
bound
lods
neg
push
stos
clc
nop
sub
popf
imul
ds
mov
stc
loop
mov
add
xchg
mov
ret
push
add
sub
add
sbb
inc
cmps
cmps
popf
push
test
js
mov
add
movhps
test
cwde
cmp
cmp
xor
outs
or
add
rep
jl
dec
cmp
mov
out
add
add
fwait
inc
imul
ja
add
add
jbe
dec
mov
retf
cld
adc
ins
push
pop
icebp
retf
add
int3
push
lea
outs
add
xor
add
adc
sahf
inc
add
add
jb
mov
(bad)
xchg
stc
mov
scas
js
xchg
jecxz
inc
mov
add
add
fcom
mov
cmp
fiadd
xchg
mov
in
mov
inc
enter
xor
lds
sahf
pusha
(bad)
aam
inc
(bad)
xor
arpl
add
loop
jbe
cmp
push
pop
jl
mov
pop
int3
fadd
imul
adc
test
add
cld
xchg
mov
add
add
add
dec
mov
stos
and
push
push
pushf
fidiv
adc
aaa
mov
add
add
sub
sub
mov
adc
clc
scas
sbb
ds
lods
xlat
int
push
mov
fwait
add
mov
(bad)
mov
mov
icebp
aam
add
retf
add
ror
pop
and
add
add
idiv
adc
push
gs
jne
ficom
xor
aad
push
xor
inc
mov
add
push
test
std
rol
or
add
sbb
xchg
fsubrp
add
into
xor
inc
outs
mov
add
retf
dec
test
mov
add
add
add
add
cmp
add
mov
xchg
imul
cs
jle
ret
inc
jmp
popa
mov
inc
fild
cmp
outs
pop
xchg
ins
ins
xor
cld
dec
cmp
popf
add
add
add
cmp
mov
sub
push
push
cmp
loop
bound
les
jmp
mov
(bad)
mov
add
add
xchg
jne
arpl
fucomp
and
pop
retf
add
add
ss
pop
fwait
nop
sub
sbb
(bad)
out
rcr
scas
(bad)
cdq
cli
inc
jmp
jae
mov
ds
leave
add
int
push
inc
xor
arpl
push
push
inc
push
inc
outs
retf
aad
cli
frstor
add
mov
jns
add
xchg
push
lods
jl
out
jb
sahf
xchg
cmp
shl
pop
cld
or
iret
add
add
and
lods
mov
push
mov
push
cmps
aad
add
add
jb
cmp
sub
sub
pushf
inc
push
rcl
jo
enter
cld
dec
out
pop
jp
add
les
sbb
cld
inc
push
mov
repz
sahf
add
int
das
cdq
sbb
in
in
pop
les
jecxz
add
xchg
add
xchg
pop
mov
add
push
mov
test
jb
aad
popf
cmp
add
outs
dec
adc
not
repnz
cmp
mov
add
push
cmps
mov
hlt
mov
stos
jae
in
or
add
add
add
and
xchg
movs
sbb
fcomip
daa
mov
add
jae
sbb
mov
inc
xchg
add
les
(bad)
pop
mov
mov
cmps
mov
add
enter
xchg
fsub
sbb
pop
push
add
(bad)
fdivr
(bad)
inc
add
enter
adc
mov
xchg
lea
in
or
pop
imul
cmp
mov
inc
add
dec
add
inc
add
clc
adc
pop
out
sub
mov
sbb
in
cld
add
leave
inc
inc
mov
mov
add
add
inc
sahf
mov
mov
jp
jg
mov
in
push
sar
cmp
test
and
add
cli
mov
mov
sub
(bad)
mov
loopne
repz
jae
lock
cmp
add
(bad)
out
push
adc
inc
pusha
cmp
add
add
dec
add
sub
add
xor
cmp
lods
clc
pop
jnp
add
mov
xor
jbe
mov
add
or
outs
retf
add
or
aam
add
adc
les
add
add
push
popa
xor
jle
xor
cs
mov
push
push
out
and
je
test
iret
jp
and
fstp
xor
cmp
dec
jno
xchg
imul
sbb
add
inc
bound
lea
add
cmp
dec
fdivrp
stc
pop
dec
pop
jae
(bad)
test
add
mov
scas
inc
add
inc
mov
test
pop
mov
js
add
add
cs
adc
aam
inc
sub
dec
push
pushf
pop
xor
mov
add
add
scas
ins
dec
outs
and
adc
outs
loop
mov
cmp
jle
and
jo
(bad)
dec
cwde
sub
addr16
and
add
je
je
jne
add
add
xchg
or
imul
jo
jb
sbb
mov
or
call
cmp
push
push
sub
out
add
or
movs
je
ins
rol
push
xor
add
icebp
addr16
push
dec
lahf
mov
mov
jne
dec
movs
cmp
add
inc
inc
lds
ins
sub
and
in
(bad)
add
or
add
add
adc
adc
push
push
mov
sbb
aam
cmc
cmp
lds
add
pop
test
or
jbe
jecxz
dec
in
add
or
jbe
add
jecxz
enter
sub
pop
jle
mov
cmc
add
add
rcl
es
out
xor
fwait
and
aaa
add
add
add
mov
popf
mov
repnz
outs
sub
mov
fisub
xor
mov
loopne
push
mov
data16
add
xchg
and
pop
je
jmp
add
inc
nop
xchg
mov
iret
cwde
fiadd
xchg
icebp
mov
int
icebp
xchg
icebp
ret
and
(bad)
repz
mov
or
sbb
push
push
add
push
out
iret
add
pop
jae
fcom
clc
and
xor
add
loope
inc
test
inc
sub
inc
add
dec
pusha
test
sahf
xchg
add
dec
cmps
and
inc
(bad)
std
das
sbb
in
aaa
mov
add
add
pushf
xlat
add
cmps
ins
fs
mov
popf
repz
add
xor
idiv
cs
dec
popa
mov
cmp
xor
jo
lahf
bound
add
jnp
and
fbld
add
sbb
sub
fiadd
add
mov
retf
jo
xlat
xchg
or
or
test
add
push
and
mov
inc
ret
xor
add
add
xchg
add
add
fcomp
clc
neg
enter
in
add
repz
push
adc
jl
jbe
and
mov
ret
push
test
fnstcw
add
lea
mov
test
lea
xchg
add
test
add
mov
and
add
pop
push
movs
fnstcw
mov
mov
and
in
mov
add
add
in
jnp
test
mov
js
bound
cmp
inc
fwait
pushf
iret
fdiv
add
dec
add
pop
add
ss
pop
add
add
movs
aam
jbe
loopne
push
or
pop
and
mov
std
pusha
mov
out
sbb
xor
cli
pop
mov
lods
fidiv
mov
fld
add
add
xor
pop
xchg
jnp
add
mul
add
add
out
ss
lods
jo
push
jp
mov
push
cmp
sub
cmp
xchg
inc
add
inc
dec
movs
add
(bad)
mov
ret
jg
fimul
add
stos
push
jo
cmps
into
pop
imul
loopne
loop
es
popa
outs
pop
push
xor
push
mov
ret
add
add
adc
lods
xorps
xor
xor
mov
dec
mov
dec
push
mov
or
daa
std
lds
sbb
loop
and
add
xchg
es
dec
fs
ds
add
add
add
fisubr
ins
mov
shr
add
dec
les
movs
mov
loope
test
and
and
push
jl
ret
xor
lock
(bad)
add
push
aad
sbb
je
jno
(bad)
stc
add
add
xchg
fdivr
or
push
dec
dec
mov
push
lods
daa
mov
lds
(bad)
cdq
mov
mov
clc
sub
aaa
sbb
add
cs
pop
or
sbb
add
add
xchg
jbe
ret
cmp
inc
jne
sub
neg
jmp
lods
pop
add
add
out
iret
(bad)
aam
dec
cld
fstp
jmp
aas
retf
xchg
ins
add
pop
sahf
test
add
pop
test
sbb
adc
push
add
add
add
xor
dec
pushf
aam
adc
xor
adc
add
mov
out
data16
or
nop
popf
add
in
inc
pop
lahf
add
icebp
push
add
sub
add
add
fimul
sbb
and
mov
test
mov
and
in
adc
xor
inc
push
cmp
pop
fsub
movs
imul
mov
loop
add
repz
and
mov
mov
cli
(bad)
stos
cmp
add
cmp
jo
cmps
adc
adc
hlt
jge
dec
mov
inc
icebp
ret
sahf
add
add
in
clc
ja
(bad)
xor
imul
in
and
(bad)
cmp
pop
add
popf
xor
add
cmc
add
mov
imul
lea
mov
add
inc
test
cmp
cmp
dec
pop
pushf
push
xchg
mov
stos
inc
call
xlat
jmp
(bad)
test
add
jae
repnz
add
add
imul
out
int
xor
add
add
dec
out
fiadd
mov
cwde
add
sub
pop
add
mov
add
popa
add
jle
imul
cmp
sbb
movs
jae
xlat
movs
test
add
rcr
out
adc
jmp
pop
add
add
test
iret
cmps
adc
sub
rcl
stos
xchg
pop
pop
pop
clc
fxtract
call
ret
movs
popa
add
ja
sbb
sub
add
test
call
shr
repz
lock
imul
in
out
retf
add
and
leave
mov
mov
enter
sbb
mov
loope
add
add
xor
mov
imul
xor
retf
push
xlat
sub
xor
fild
inc
sahf
cld
add
push
mov
sti
nop
rcr
mov
add
sbb
hlt
scas
lods
jmp
and
iret
sub
add
add
or
repz
xchg
mov
imul
sub
push
pushf
sar
inc
add
xor
xchg
lea
add
add
scas
mov
xchg
add
xor
cmps
fs
mov
dec
jnp
inc
dec
xor
xchg
cmp
pop
stos
std
add
scas
adc
add
ret
push
mov
xchg
fs
push
ins
push
sub
mov
lea
fiadd
jb
shl
add
fsub
out
push
dec
ins
dec
push
jo
and
and
push
push
xchg
adc
lock
mov
add
add
inc
sub
jb
push
int
sti
inc
loop
sbb
cmp
test
xchg
jge
out
fadd
add
mov
stos
adc
mov
gs
push
bound
(bad)
add
cli
sbb
add
adc
loope
xlat
sbb
mov
adc
add
out
sub
push
push
mov
add
add
jg
add
or
test
add
ror
ins
arpl
add
mov
sbb
add
push
not
scas
aas
add
add
add
out
pop
and
loop
or
push
mov
add
mov
loope
pop
addr16
add
add
xor
add
mov
mov
lods
ss
mov
pushf
out
push
xchg
xchg
call
mov
mov
xor
and
add
lods
lahf
add
add
sbb
stos
or
sahf
add
stos
cwde
outs
iret
in
lea
adc
add
push
add
add
xchg
mov
mov
pop
push
xchg
xchg
xchg
add
add
xor
out
fisub
popa
pop
pop
cmp
push
outs
push
xor
jo
adc
jne
add
add
out
xor
jmp
add
add
cmp
nop
into
mov
add
xor
dec
mov
gs
(bad)
ret
jb
in
sbb
add
jno
mov
addr16
adc
rcr
das
iret
and
pushf
fld
dec
hlt
sub
dec
jmp
and
idiv
or
xchg
pop
and
adc
push
fimul
pushf
add
add
fiadd
mov
je
jnp
add
lahf
sahf
mov
int3
and
add
ret
add
stc
pushf
hlt
push
and
ja
hlt
lods
loopne
mov
lds
jns
xor
and
add
add
ss
inc
aas
cmp
jmp
scas
add
add
pusha
fld
cmps
sub
popf
fcom
cmp
lds
add
sahf
test
rol
cmp
add
rcr
xor
daa
stos
mov
add
add
mov
sbb
or
fmul
clc
fild
in
push
inc
dec
clc
add
add
lahf
aam
add
rcl
sbb
retf
repnz
outs
js
add
add
gs
aam
out
add
and
add
adc
cmps
shl
pop
jns
mov
and
push
jo
add
aaa
push
push
xor
cs
push
(bad)
push
pop
(bad)
enter
outs
cmp
add
add
dec
jo
or
jl
push
(bad)
sub
loopne
cdq
mov
adc
jmp
add
or
sub
jne
push
std
popf
and
add
add
je
pop
das
sub
and
inc
lods
and
pushf
add
pop
add
add
cli
dec
pop
add
jp
jne
in
not
mov
xor
pop
xor
and
es
add
outs
frstor
dec
int3
lahf
lea
js
xchg
icebp
add
mov
ja
jnp
add
or
xchg
popf
push
stc
test
fld
dec
sar
cmp
add
mov
inc
mov
movs
add
mov
lea
call
sbb
add
movs
cdq
movs
cs
pop
xchg
test
jmp
(bad)
fidiv
sti
mov
inc
sub
dec
inc
add
mov
add
mov
add
sbb
lds
add
rcr
jmp
add
add
xchg
xchg
dec
pop
mov
loop
shl
movs
add
leave
retf
mov
xor
scas
sub
inc
lock
add
add
xor
dec
jp
push
mov
mov
push
xor
sub
not
push
rcl
dec
xor
sbb
add
cmps
and
add
cwde
int3
dec
pop
outs
pop
cmp
add
aad
xor
pop
pop
loopne
mov
cwde
leave
sub
cld
ss
repz
add
enter
cmp
mov
xchg
cld
(bad)
add
call
movs
and
fcom
and
cmp
int3
loop
xchg
jae
cmp
jae
mov
xor
in
lds
fwait
popa
add
daa
lods
fsub
add
outs
sbb
mov
stc
inc
cs
and
add
pop
inc
addr16
mov
(bad)
sbb
add
jns
aaa
xor
dec
out
add
out
inc
add
jo
push
scas
iret
stc
pop
test
ret
in
aas
stos
test
dec
hlt
dec
xor
push
jl
pop
cmp
cwde
lock
mov
add
add
add
ficom
cmp
lock
jecxz
dec
add
(bad)
cdq
push
push
push
mov
add
mov
das
fild
call
or
push
je
cwde
fiadd
xchg
mov
pop
add
mov
add
int3
push
rcr
adc
xchg
jbe
jnp
(bad)
fadd
add
nop
inc
push
repz
dec
sbb
sub
fs
pop
add
lahf
fs
aas
mov
add
push
pop
aaa
jae
outs
xchg
adc
test
add
jle
not
xlat
imul
pusha
and
and
out
push
ror
inc
add
out
test
mov
int
add
les
lods
cmp
sub
cli
outs
sub
arpl
dec
add
loop
add
add
(bad)
push
pusha
mov
sbb
dec
cmp
jno
adc
push
pushf
jge
popa
lea
sub
add
enter
jne
into
inc
data16
cmp
test
add
pop
test
add
add
or
cwde
inc
test
les
(bad)
mov
sbb
dec
xor
cmp
xlat
adc
sub
mov
add
mov
push
ror
in
sbb
shl
rcl
sbb
add
call
mov
in
add
jmp
xor
add
mov
xchg
add
mov
add
pop
jo
gs
xchg
mov
fdiv
ja
out
in
adc
xchg
pop
jbe
adc
mov
add
not
add
push
cmps
out
add
mov
xor
into
ret
cmps
and
add
mov
mov
add
add
push
inc
inc
dec
xor
cld
xchg
call
retf
mov
(bad)
xlat
push
pop
in
popf
add
or
cmp
fidiv
add
xchg
lahf
push
or
add
inc
scas
rcl
jmp
mov
push
rcl
das
subps
sbb
bound
bound
xchg
lods
add
scas
in
jnp
out
push
and
push
sbb
int3
add
add
pusha
(bad)
fnstsw
scas
fwait
pop
mov
inc
rol
scas
lea
sbb
mov
aad
stos
punpckhwd
push
add
or
shr
pop
or
add
add
add
jle
das
fadd
in
movs
test
push
add
add
out
fs
and
mov
push
mov
retf
add
add
and
sbb
adc
ins
or
jg
add
les
enter
push
les
out
dec
add
add
mov
add
(bad)
mov
mov
add
rol
cmps
mov
jmp
xor
in
add
test
shl
add
push
pop
push
add
cmp
sub
repnz
je
and
cmp
pop
add
pop
daa
out
add
shl
jnp
cmp
and
or
add
sub
cli
not
and
dec
add
add
add
out
push
xchg
sub
fidiv
add
push
sub
sub
sbb
add
adc
push
add
and
(bad)
int3
inc
(bad)
shl
inc
stc
xor
rol
fidiv
add
adc
inc
sub
test
jo
xor
xchg
(bad)
jp
fsubr
and
cdq
enter
push
fist
pop
inc
sbb
je
in
ins
fiadd
push
fsubrp
movs
add
jl
dec
jp
sub
add
sub
add
or
xchg
jmp
push
sub
add
cwde
pop
fadd
fadd
add
push
mov
lahf
pop
out
rcr
cmp
lods
out
pop
fisubr
shl
add
aam
jmp
pusha
es
add
movs
dec
jae
cmps
adc
mov
pop
mov
add
pusha
mov
inc
or
adc
adc
lahf
push
leave
add
mov
mov
add
add
aam
lods
leave
sub
push
out
pop
push
push
rol
add
aad
dec
(bad)
test
add
add
add
ins
add
ins
cmp
add
push
adc
fild
add
mov
add
test
pop
and
add
aas
mov
mov
or
add
mov
and
out
fwait
jg
in
jmp
dec
fwait
add
data16
add
out
leave
ret
add
mov
in
sbb
pop
out
cmp
add
cmp
lock
fs
add
mov
stos
cmp
add
push
aam
int
push
sbb
je
inc
adc
add
dec
test
and
mov
add
or
add
add
call
cmps
retf
int3
push
test
movs
loop
stc
sbb
mov
add
shr
inc
adc
inc
inc
add
add
gs
push
or
add
push
xor
repz
int3
inc
xchg
(bad)
or
(bad)
call
mov
pusha
test
mov
add
lock
add
jno
fadd
cmp
pop
inc
sub
add
add
jns
and
loop
cmc
push
or
push
rol
mov
cmp
or
add
inc
popa
cmc
aam
mov
call
test
and
mov
and
mov
in
fucompp
clc
cwd
pop
aad
xchg
dec
ins
push
add
cld
gs
jp
shl
add
add
jno
mov
dec
(bad)
into
data16
imul
loopne
or
add
fs
cwde
fcmovbe
inc
stc
clc
add
mov
add
fistp
xchg
lods
push
ja
pop
inc
add
popf
fimul
test
leave
or
cmp
sbb
add
add
addr16
adc
ins
mov
push
fbld
ins
cli
mov
pushf
add
add
lea
mov
gs
dec
aas
mov
test
mov
add
cli
int3
dec
ret
inc
ins
jmp
cmps
dec
test
cld
repnz
add
jne
inc
add
mov
jecxz
pop
add
add
les
xchg
fbld
imul
mov
ja
add
(bad)
mov
xchg
mov
cmps
ins
pop
mov
mov
je
add
or
xor
xlat
or
lds
mov
push
dec
add
add
add
(bad)
xchg
or
adc
jo
dec
out
add
add
aas
fcom
ret
ins
and
lods
xchg
jle
clc
add
fiadd
dec
fsubr
mov
pop
faddp
xchg
add
imul
add
neg
(bad)
xor
add
stc
in
add
push
xchg
movs
loope
repnz
pop
add
nop
aaa
mov
sbb
lea
push
(bad)
sahf
add
adc
les
push
add
repnz
jg
add
push
out
xor
test
add
(bad)
jmp
jmp
pop
jecxz
repnz
inc
push
inc
pop
add
fistp
lock
sti
out
je
mov
mov
scas
mov
add
add
lods
sbb
std
fist
adc
sub
jp
fdiv
add
data16
mov
cmp
cmp
cmp
enter
ret
add
add
scas
repnz
mov
jmp
jp
push
jnp
clc
ja
dec
push
sub
cdq
call
(bad)
mov
popa
cmps
scas
mov
aad
and
pop
xchg
mov
xchg
fs
nop
add
add
add
js
pop
aas
jnp
loope
js
out
sbb
in
add
cli
add
and
cmp
add
and
adc
push
sar
dec
add
add
mov
pop
add
cmp
push
cmp
add
xchg
xor
leave
lea
xor
push
push
mov
inc
sbb
enter
iret
daa
dec
cmps
mov
in
lock
movs
cmps
ins
add
jnp
add
imul
out
ret
scas
xor
out
add
add
imul
cld
cs
xor
push
ds
repnz
and
adc
call
add
call
xor
add
mov
mov
in
aam
mov
lods
jbe
add
test
jo
add
add
dec
movs
aad
iret
jmp
pusha
add
mov
ror
adc
pop
rol
ds
add
add
inc
sub
outs
aas
add
xlat
popf
int3
mov
add
dec
add
jl
retf
inc
add
xchg
inc
movs
mov
push
add
adc
xor
sub
pusha
(bad)
add
add
es
pop
mov
mov
scas
sbb
in
add
mov
adc
and
cs
dec
mov
pop
add
jb
fwait
add
movs
mov
jge
sbb
add
popf
fistp
ret
adc
leave
nop
or
add
ins
(bad)
std
jg
push
sti
push
jle
dec
inc
push
add
add
add
mov
xor
jmp
hlt
push
add
add
in
stc
jmp
clc
leave
fwait
loop
cmps
data16
jp
jne
and
std
mov
dec
cmp
add
mov
ja
cmp
and
movs
and
ds
div
add
sbb
sbb
push
fsubr
and
add
scas
jne
jae
mov
pop
xchg
mov
adc
sbb
test
cdq
fwait
inc
dec
add
ret
ret
add
lods
or
sub
aad
loopne
pusha
dec
jecxz
sbb
dec
data16
add
mov
jmp
jae
out
fsub
psubsb
repz
cmovge
mov
je
xchg
dec
hlt
stos
add
sub
cmp
jne
sub
bound
add
aad
out
fistp
jae
iret
stos
push
inc
mov
cli
or
mov
add
pop
das
(bad)
(bad)
fld
push
ja
mov
pusha
fld
push
clc
push
inc
or
pop
and
push
cdq
dec
push
add
fdiv
mov
cmp
add
or
jg
mov
and
test
pop
pop
mov
ds
add
pop
add
in
sbb
ficomp
sub
add
add
mov
add
and
loop
(bad)
retf
push
add
sub
enter
aaa
cmc
cmp
add
(bad)
and
add
out
add
xor
cwde
add
add
push
xchg
ror
mov
cli
dec
pushf
mov
jae
aam
and
xchg
add
add
jmp
jmp
jle
jge
adc
add
add
add
int3
mov
retf
stos
mov
sbb
sub
add
sbb
fsub
jge
outs
add
add
add
dec
int
push
dec
fld
add
dec
call
sbb
aad
loop
push
or
mov
add
add
add
and
loopne
xchg
shl
xor
pop
jmp
stos
pop
xchg
mov
adc
add
test
mov
mov
dec
aam
add
add
pop
shr
inc
pop
xchg
fisub
in
rol
add
add
add
or
aam
call
retf
sub
mov
jno
xchg
loop
je
clc
clc
mov
mov
pushf
pop
repnz
mov
add
sbb
pop
add
mov
cmp
ficom
imul
fisubr
repnz
in
cld
xor
jecxz
and
call
add
pop
(bad)
in
fiadd
add
aaa
gs
lahf
fist
or
adc
xchg
stc
in
cmps
add
add
add
sub
push
adc
xlat
rol
jge
adc
pop
cli
adc
(bad)
jbe
xchg
sub
enter
xor
pop
add
leave
test
pop
add
or
addr16
mov
add
add
loope
fdiv
test
int
lods
pop
xchg
movs
mov
inc
sub
add
jb
icebp
daa
mov
ins
aas
repnz
fnsave
repnz
push
add
inc
int3
cmp
shr
int3
add
pop
or
cli
push
lods
movs
lods
xlat
lods
popa
pusha
xchg
add
jmp
(bad)
frstor
or
arpl
sub
shr
or
cld
jg
pushf
retf
and
inc
and
sub
aam
pop
add
inc
sbb
or
add
add
adc
jo
dec
cmp
jns
add
je
xchg
ret
fwait
jg
mov
add
ss
mov
nop
(bad)
jne
into
jecxz
(bad)
popa
sti
mov
add
add
add
mov
push
push
inc
mov
fcos
arpl
inc
fdivr
rcl
(bad)
jno
sar
test
sbb
popf
inc
add
test
push
mov
add
mov
nop
addr16
out
or
inc
sub
mov
or
mov
sub
or
adc
pop
push
add
js
pop
add
rdmsr
dec
add
add
inc
jnp
push
add
sub
cld
push
dec
xor
in
aad
add
ds
fstp
mov
add
or
inc
xor
pop
add
mov
stos
das
test
fisub
loop
add
mov
pop
mov
add
add
repnz
call
pop
inc
push
jnp
(bad)
dec
mov
xchg
and
adc
cs
xchg
addr16
int
pop
adc
sub
xor
nop
imul
add
jo
jle
stos
iret
pop
hlt
lsl
loope
inc
xchg
shl
push
and
call
add
repnz
inc
push
into
imul
add
mov
add
pop
and
adc
mov
mov
jae
cmp
mov
repz
mov
sub
mov
adc
pop
sbb
mov
add
aas
adc
test
add
dec
mov
test
xor
add
into
sub
push
push
fadd
mov
cmp
fbstp
data16
add
(bad)
lock
xchg
test
into
add
cmps
mov
movs
imul
sbb
add
mov
push
mov
xchg
das
icebp
jp
and
dec
cmp
adc
add
add
xor
scas
ret
add
test
jo
mov
imul
xor
jge
add
add
cmp
xchg
add
jge
push
add
jg
mov
ins
mov
fld
mov
lock
xor
push
popf
add
mov
mov
in
xor
lods
add
or
add
jns
xchg
test
or
pop
nop
iret
mov
xchg
pop
push
adc
cdq
bound
(bad)
and
add
je
fs
add
or
shr
pop
xlat
add
jg
pop
or
fcmovb
std
add
jle
ror
pop
cmp
mov
sbb
add
das
mov
adc
daa
shr
ins
int
addr16
push
mov
aad
add
add
add
jne
fiadd
fiadd
cmp
add
cli
cmp
dec
out
dec
dec
stos
xlat
call
add
js
clc
pop
out
test
add
add
xchg
fsubr
addr16
pop
shl
out
stc
pushf
loopne
mov
jg
add
fisubr
xor
(bad)
and
sub
jge
jo
xor
mov
jo
jge
enter
mov
add
cwde
ret
xchg
jle
hlt
jge
push
push
mov
inc
add
add
add
adc
pop
div
sub
push
fsub
and
mov
jno
sub
clc
jg
add
xchg
aam
das
int3
stc
pop
jb
cmp
push
ficom
mov
jbe
aas
js
mov
add
add
cmp
mov
ins
mov
adc
add
add
mov
pop
hlt
mov
or
clc
mov
add
loopne
ret
retf
shl
(bad)
sbb
and
das
mov
popf
ret
dec
jmp
mov
xlat
retf
movs
add
sbb
mov
add
fdivr
add
xor
lds
mov
push
stos
push
inc
cmp
rol
and
hlt
in
div
ficomp
int3
mov
(bad)
add
push
jg
sbb
mov
les
enter
ret
add
push
add
jo
add
cmp
je
ins
xchg
push
xor
mov
retf
icebp
push
jg
jns
imul
leave
add
popa
mov
add
pop
add
pop
(bad)
dec
add
and
sbb
sub
add
sbb
fwait
jecxz
add
jnp
ds
stc
es
add
cs
and
mov
mov
add
add
add
scas
nop
shl
cmp
sub
push
sub
push
pop
enter
test
(bad)
inc
jmp
ss
shl
mov
aas
or
mov
dec
xor
xor
ins
sbb
fcomi
aaa
add
jl
inc
adc
mov
push
loope
add
mov
sbb
add
or
add
scas
jmp
xor
stos
add
mov
std
inc
out
xor
add
push
pshufw
add
ins
fcom
push
or
add
add
add
aam
add
jle
pop
push
mov
dec
push
jmp
add
mov
ss
mov
add
add
fld
sub
or
ins
or
shl
add
add
push
xor
in
movs
cmc
ja
sbb
sbb
test
mov
fisubr
jns
mov
add
inc
add
mov
cwde
lahf
inc
adc
cld
mov
xlat
sub
add
popa
jge
add
fadd
xlat
iret
jne
add
add
pop
popa
fs
add
nop
adc
int
adc
mov
loope
add
inc
lahf
push
arpl
mov
inc
add
stos
fs
rcl
lea
add
add
pop
inc
dec
mov
ja
dec
loop
iret
pushf
jl
adc
push
jmp
imul
repnz
movs
ret
inc
rol
ret
outs
scas
ret
add
add
add
mov
call
jge
mov
mov
jbe
mov
push
add
fcomp
cmp
bound
ss
mov
xor
cdq
out
mov
test
add
sub
mov
daa
pusha
add
cwde
push
lds
jb
add
adc
add
clc
add
out
inc
movs
jge
adc
add
pop
add
add
jbe
push
or
sar
fbld
hlt
add
icebp
jno
mov
jnp
add
jle
add
arpl
mov
mov
in
add
ins
add
sbb
add
sti
call
adc
pop
rcr
dec
add
rol
int
or
into
add
dec
movs
or
add
add
idiv
out
lods
imul
repnz
push
xchg
cmp
or
add
add
add
mov
dec
cmp
add
add
(bad)
pop
dec
sub
xchg
mov
add
ret
cmp
mov
and
xchg
add
lock
or
push
xor
jmp
sahf
add
adc
outs
add
xor
add
cmp
or
cmps
bound
fdiv
add
adc
add
mov
pop
rcr
scas
adc
mov
into
add
outs
fadd
mov
int
loop
cmp
add
add
add
dec
cmps
cmp
and
xor
cmc
or
inc
dec
outs
push
and
fwait
xor
test
inc
test
rcl
pop
sbb
clc
sub
dec
fild
xor
xor
hlt
inc
pop
add
pop
xchg
mov
adc
add
add
test
xor
mov
add
jp
xchg
add
cdq
loope
xchg
sub
add
sbb
add
add
xchg
lea
push
js
ds
xor
push
mov
cli
inc
mov
add
adc
add
add
xor
js
sahf
test
inc
mov
xchg
arpl
add
imul
enter
add
xor
mov
jg
dec
inc
add
popa
xchg
test
push
pop
je
ret
ins
or
adc
pop
iret
dec
xchg
add
mov
mov
push
je
mov
add
add
ja
pop
jno
popf
fucomip
jns
in
push
mov
adc
pop
push
imul
dec
call
stos
mov
add
xlat
mov
dec
add
stc
imul
pusha
push
cs
and
jl
jno
add
xchg
fdivrp
add
cmp
dec
cwde
in
sbb
adc
cmp
mov
cld
xchg
add
jne
inc
cmp
std
jno
movs
cmp
mov
rol
add
out
out
jp
das
lods
lock
xchg
add
add
or
push
add
xchg
or
jbe
call
mov
jmp
add
mov
stos
xor
adc
dec
cmp
sbb
enter
(bad)
imul
push
sub
add
cmc
dec
inc
test
out
faddp
sbb
gs
clc
js
dec
in
pop
mov
ret
or
sub
test
cwde
add
add
adc
add
loop
mov
xor
add
(bad)
pop
sub
and
add
add
popa
inc
add
mov
int3
and
test
add
ret
mov
aaa
push
add
add
sbb
loope
and
push
shl
cwde
xor
add
shr
adc
retf
cld
pop
pop
add
add
fild
jo
add
sbb
inc
iret
loope
add
lds
mov
mov
mov
add
icebp
call
jp
mov
or
xlat
mov
jp
mov
jle
pushf
(bad)
jmp
enter
mov
ja
mov
fist
add
fidivr
or
cmp
into
inc
push
call
iret
inc
or
pushf
pop
xchg
add
lea
jle
add
neg
loopne
sub
outs
dec
outs
mov
out
lods
add
ins
xor
adc
mov
sahf
mov
jmp
push
adc
es
sub
cmp
pop
add
mov
add
add
mov
mov
adc
push
xor
add
lahf
inc
add
push
(bad)
leave
and
add
push
scas
in
ret
loop
jb
push
fistp
sbb
mov
xor
cmp
imul
cld
add
mov
add
dec
in
push
(bad)
movs
inc
add
push
in
cwde
jo
lods
xor
(bad)
xor
add
scas
cmp
sub
push
cmp
add
or
mov
add
jp
(bad)
sbb
inc
sub
jmp
pop
mov
add
add
and
jmp
inc
ja
add
repnz
fsubr
mov
pop
addr16
or
lds
stc
push
add
cwde
jo
fild
add
pop
cs
popa
sbb
cmp
stos
add
add
pop
or
sbb
or
push
inc
push
inc
shr
dec
add
add
cmp
inc
pop
and
jbe
add
add
add
add
sar
hlt
lea
dec
ja
in
xchg
mov
sti
stc
pop
jo
in
add
retf
lahf
inc
sub
lods
aam
add
and
mov
loop
mov
jp
lahf
cs
mov
lahf
add
leave
fmul
inc
or
jge
retf
add
hlt
fwait
add
cmp
movs
aad
xor
or
add
push
fcomp
repnz
call
mov
sbb
add
inc
dec
loop
add
mov
xor
in
in
cmps
arpl
add
xlat
call
pop
pshufb
gs
mov
outs
or
clc
dec
mov
mov
mov
lds
sub
fmul
loop
scas
inc
add
add
lods
(bad)
in
add
sub
mov
js
mov
push
lahf
not
mov
add
sbb
ss
push
mov
jno
sub
xor
adc
pusha
xchg
dec
xor
mov
inc
hlt
push
fsubr
add
add
aaa
je
jae
xchg
push
xchg
ror
push
sub
bound
aam
push
sahf
cmp
data16
ins
ror
mov
loopne
dec
paddq
add
ffree
stos
ret
pop
push
add
adc
mov
fiadd
sti
add
or
(bad)
cmp
add
add
cs
mov
ins
add
add
mov
push
ins
shl
loopne
dec
rol
cmp
inc
pop
int3
sti
sbb
xchg
mov
jae
mov
iret
add
movs
mov
adc
add
xchg
add
add
or
dec
cmp
or
mov
add
xchg
mov
repz
jecxz
pop
add
push
aad
pop
jp
add
or
dec
add
inc
pop
aam
push
mov
xchg
inc
cld
add
mov
add
pop
imul
jmp
ja
add
dec
scas
xchg
push
cwde
dec
test
xlat
add
test
add
pop
jno
xchg
adc
popf
cmc
add
jle
add
xor
dec
ret
enter
ds
sbb
stc
scas
sbb
add
adc
test
loopne
stc
mov
test
cs
jmp
add
add
fstp
or
pop
ins
pop
xchg
mov
aam
retf
mov
test
mov
jb
add
add
push
cs
mov
mov
adc
xchg
inc
mov
jae
dec
in
xchg
add
das
mov
in
ficomp
ins
mov
sbb
xlat
xchg
mov
add
add
push
sub
xor
add
sbb
jo
mov
xchg
cmp
add
add
int
pop
mov
arpl
pop
stos
(bad)
cli
xchg
and
push
and
mov
call
add
sbb
add
add
in
sub
cli
xor
in
and
icebp
aas
outs
popa
bound
inc
and
(bad)
sbb
xor
push
sbb
xchg
add
(bad)
push
add
mov
dec
or
pop
sbb
popf
push
xchg
lock
and
addr16
mov
add
mov
mov
ins
add
scas
mov
dec
or
xchg
pop
add
lock
cld
mov
inc
fsubr
inc
jb
xchg
aam
rol
push
imul
adc
jle
add
add
mov
cmp
iret
vpshufb
aam
sub
mov
sub
jb
sub
aad
stos
out
jo
add
add
pushf
repz
js
or
stos
lds
jbe
jp
jno
push
adc
sbb
movs
sub
add
xchg
das
cmps
adc
sbb
add
jno
add
sbb
add
out
stc
inc
mov
pop
jecxz
push
add
repz
jecxz
xchg
mov
inc
lods
pop
mov
mov
add
add
xor
stos
push
or
dec
in
(bad)
out
add
stos
adc
dec
sar
ror
xchg
mov
sahf
test
add
or
(bad)
dec
dec
(bad)
arpl
push
add
retf
or
ins
add
add
test
sbb
adc
or
mov
jl
dec
pop
cmps
inc
js
repz
loope
or
add
add
jns
pop
push
mov
cmp
lods
fdivr
sub
call
mov
jmp
jnp
mov
sub
jnp
xchg
add
repnz
popa
add
add
ret
bound
(bad)
fwait
dec
push
pop
add
add
xchg
fld
ins
add
je
movs
add
mov
sbb
retf
add
out
inc
jb
dec
gs
mov
dec
dec
loop
inc
xor
fsubr
aad
retf
add
fisttp
pop
movs
inc
sub
sbb
xchg
jge
fld
sbb
mov
test
jle
add
add
add
cmc
add
or
mov
cdq
(bad)
dec
mov
js
jae
fdiv
xchg
adc
xchg
mov
and
add
mov
sbb
sbb
and
mov
sbb
push
mov
cmp
push
add
frstor
outs
xor
in
jmp
jne
adc
js
(bad)
pusha
add
add
sub
inc
inc
or
or
addr16
jl
or
xchg
push
add
add
and
mov
mov
rol
test
add
in
cwde
bound
cmps
test
pushf
sub
jbe
retf
jbe
lea
dec
mov
je
push
dec
inc
or
or
push
add
adc
pop
add
jl
adc
dec
inc
movs
add
add
jo
call
pop
cdq
sbb
push
pop
xchg
push
add
push
mov
inc
cli
cmps
add
add
in
(bad)
cld
rol
add
add
mov
inc
fistp
ja
js
daa
jb
add
xchg
add
dec
push
jmp
jmp
js
add
mov
and
mov
add
add
inc
test
daa
and
bound
pop
mov
loop
daa
adc
mov
ja
or
xchg
les
xchg
push
add
add
add
sti
mov
mov
gs
xchg
ins
sub
imul
out
push
ins
pop
add
movs
jmp
inc
dec
mov
add
int
fdiv
add
add
jmp
cmp
mov
xchg
cmp
loopne
cmp
add
rol
xchg
ds
hlt
pop
xor
jns
pop
jl
add
add
add
cdq
dec
daa
or
lahf
arpl
jbe
aam
add
clc
add
fsubr
aas
add
xchg
mov
push
(bad)
sbb
adc
jb
and
loop
xchg
add
add
add
fistp
pusha
pushf
retf
jo
mov
(bad)
fsubr
cwde
ins
pushf
out
(bad)
inc
test
pop
cmp
push
jb
in
(bad)
scas
sti
sub
jp
out
add
jg
mov
imul
add
les
and
(bad)
jle
xchg
test
or
call
lock
mov
add
add
hlt
outs
pop
mov
cmps
adc
cmp
add
ror
ret
mov
fwait
test
adc
mov
add
mov
mov
add
push
imul
add
cld
add
jl
lahf
lods
mov
scas
ret
dec
push
mov
add
test
lahf
mov
add
loopne
jbe
mov
and
mov
add
nop
cwde
movs
inc
inc
add
mov
or
jle
jns
dec
js
test
mov
add
int3
and
mov
out
inc
bswap
add
add
les
mov
inc
lds
jmp
bound
mov
fcomip
repz
add
aam
mov
add
add
call
xchg
ficomp
nop
sbb
jne
cwde
js
clc
mov
lock
mov
(bad)
and
into
sbb
out
pop
and
cmps
call
add
add
xchg
xor
sahf
out
fwait
(bad)
jmp
shr
xchg
jecxz
mov
out
pop
movs
fstp
xchg
jge
mov
stos
push
push
dec
dec
cli
or
inc
add
jle
add
add
add
or
sahf
pop
add
lods
xor
cmp
mov
cmp
psrld
scas
adc
add
add
mov
call
std
movs
imul
add
stos
xor
retf
inc
mov
add
jbe
out
add
cmp
fcomip
leave
add
jno
sub
push
mov
sahf
dec
mov
cmp
(bad)
ficomp
sbb
loope
rcl
add
sub
test
add
iret
push
sti
pusha
add
adc
int3
out
add
neg
jmp
add
xor
out
cdq
fidiv
jl
cmp
cmp
ins
arpl
pop
jne
xchg
or
jmp
es
add
jae
sti
xor
adc
rol
add
mov
xor
push
push
cli
shr
fild
add
ret
xchg
mov
rol
into
add
adc
add
xchg
add
ins
and
mov
(bad)
add
xor
jns
loop
mov
add
xor
test
jp
outs
pop
leave
add
add
arpl
add
inc
mov
add
mov
add
jecxz
out
or
ins
stos
fstp
pop
add
add
daa
das
add
and
pop
add
sub
cmp
movs
sbb
loopne
jge
add
add
test
mov
icebp
mov
cdq
mov
bnd
add
adc
add
add
add
mov
push
mov
cmp
fst
add
lods
and
mov
call
push
mov
mov
pop
jmp
or
jns
stos
add
fild
sbb
add
add
mov
add
fstp
add
add
int
or
or
mov
je
jp
add
xchg
movs
pop
add
xchg
add
in
adc
mov
neg
stos
lods
mov
movs
les
add
hlt
repnz
push
scas
add
les
(bad)
idiv
adc
add
inc
in
dec
jle
add
out
test
add
nop
in
sbb
mov
pop
add
cmp
jmp
mov
retf
push
add
xchg
ins
repz
jp
push
dec
das
or
data16
push
cmps
add
cmp
not
add
add
xor
mov
inc
jnp
or
in
imul
lods
js
leave
jbe
jmp
mov
fistp
mov
pop
std
xchg
pop
popf
shl
stos
sbb
add
lahf
add
mov
repnz
mov
int
jl
adc
cmp
pop
xor
add
gs
mov
dec
fstsw
add
xlat
add
add
and
jno
sbb
push
dec
mov
mov
mov
add
push
mov
jle
add
cmps
xor
mov
data16
call
jbe
add
test
popf
jnp
lock
call
cmps
(bad)
std
test
push
and
lock
cmc
loope
lods
add
xchg
lods
or
pop
ins
mov
and
int
mov
sar
mov
shr
cli
xor
std
cs
ins
cmp
xor
enter
inc
into
mov
movs
dec
add
push
jns
rol
add
fstp
iret
cli
add
add
jp
pusha
test
adc
jle
fisttp
aaa
sbb
add
mov
adc
add
stos
cld
in
mov
push
pop
cmp
cmp
add
add
add
sbb
mov
sbb
cwde
rol
add
and
out
jb
add
sub
cwde
dec
sbb
add
add
add
test
xchg
pusha
in
add
add
push
or
sbb
dec
popf
lods
adc
pop
add
ret
push
mov
out
dec
or
mov
call
mov
add
add
mov
push
mov
stc
and
ds
movs
pop
inc
aad
repnz
xchg
mov
xchg
aaa
dec
or
sbb
mov
or
jmp
add
dec
nop
das
jb
mov
cwde
movs
ss
fimul
std
add
dec
add
das
push
add
leave
mov
push
cwde
or
jbe
scas
mov
push
xor
xchg
cld
ficomp
ss
cdq
das
xchg
es
fiadd
cmc
std
test
xchg
sar
test
adc
data16
rol
add
push
jecxz
pop
daa
jmp
clc
add
add
mov
sar
sub
add
cmps
rcl
pop
(bad)
mov
ds
mov
mov
test
es
cmp
inc
int
adc
sub
add
bnd
and
add
stos
cmp
outs
add
push
imul
nop
aam
add
int3
rol
test
cmp
add
xchg
adc
xor
add
add
add
jbe
xlat
outs
xchg
fisub
test
sub
add
lods
xchg
popf
xor
inc
sbb
cwde
(bad)
imul
push
mov
in
in
mov
add
xchg
shl
nop
(bad)
cmp
xchg
outs
inc
inc
add
mov
scas
in
push
es
add
add
sti
test
mov
adc
push
jns
add
push
push
mov
in
in
pop
movs
xchg
ss
fldenv
jle
sub
adc
add
aad
add
loope
add
dec
mov
push
add
pop
out
push
add
clc
mov
adc
daa
mov
mov
fcmovnu
inc
add
mov
add
push
in
and
dec
sbb
add
add
mul
call
ret
push
mov
add
(bad)
add
mov
push
inc
sub
cmp
idiv
fnstcw
mov
(bad)
add
add
xor
or
imul
in
call
gs
rol
pop
mov
jle
pop
add
aaa
ret
mov
xchg
jge
mov
add
mov
xor
add
add
pop
jecxz
push
xor
lea
int
scas
mov
lods
mov
xchg
add
je
add
add
add
shr
sub
xor
out
and
push
cmps
test
inc
paddusw
mov
mov
retf
(bad)
fisttp
push
add
cmp
adc
add
add
outs
stos
xor
je
sti
pop
or
jmp
clc
je
xchg
xor
(bad)
xchg
sub
fiadd
add
push
pop
in
mov
add
add
cmps
push
sbb
inc
inc
jb
mov
pop
inc
mov
xor
test
add
adc
repz
mov
daa
add
mov
add
out
int
cmps
add
lea
cwde
and
out
add
sbb
(bad)
push
dec
add
add
clc
mov
in
cmp
stc
ss
jne
add
ja
add
add
xchg
push
dec
sub
jns
add
adc
leave
dec
mov
and
add
mov
jnp
jae
outs
add
sar
push
mov
scas
jbe
cmp
dec
xchg
add
je
dec
lods
into
cs
aam
pop
hlt
mov
or
add
popa
mov
dec
mov
call
jmp
add
add
mov
sti
inc
mov
bound
pop
mov
cwde
sub
mov
sbb
stos
pop
add
in
sbb
add
add
jmp
or
dec
pop
sub
std
xor
mov
sahf
or
pushf
add
add
push
iret
std
add
fwait
inc
daa
fdiv
adc
cmps
dec
add
inc
add
iret
pop
pop
hlt
sbb
push
dec
sub
data16
(bad)
mov
jae
jp
add
sub
pushf
repnz
inc
stos
add
add
lds
sub
sbb
scas
dec
mov
mov
les
xor
fist
add
mov
call
add
sbb
pop
or
mov
lock
fxch
mov
add
and
inc
pop
add
int3
(bad)
cmp
enter
add
add
sub
push
leave
clc
xor
hlt
or
popa
sbb
xlat
mov
sub
mov
ret
in
sub
cmp
ins
add
(bad)
jns
xor
add
and
iret
lds
adc
fsubr
stos
ud1
xchg
pop
push
sub
rep
sbb
add
xchg
xor
sbb
mov
add
add
test
in
fwait
pop
jmp
jo
mov
add
sub
pop
jg
rol
add
add
aam
lods
imul
fiadd
add
gs
mov
or
add
enter
inc
dec
repnz
cs
xor
jbe
xchg
ss
add
fimul
int
sub
xchg
imul
push
movs
jp
add
add
test
scas
cmp
mov
outs
pop
out
les
pop
and
add
mov
int3
call
je
mov
inc
popa
add
rcl
mov
dec
mov
je
cli
shr
add
push
sub
cmp
mov
fst
ror
xor
dec
enter
add
jmp
mov
pop
dec
dec
pop
fisub
mov
inc
or
data16
pop
add
or
mov
add
xchg
push
add
adc
clc
jp
add
retf
sub
popa
fiadd
adc
dec
add
rcr
add
add
or
jecxz
add
test
dec
aaa
mov
mov
mov
icebp
inc
and
mov
lock
sub
pusha
xlat
push
daa
mov
fbld
loopne
xlat
push
mov
pop
hlt
cmp
mov
add
test
dec
xor
xchg
fbstp
pop
add
add
dec
test
mov
mov
je
mov
test
add
into
loop
shl
pop
adc
movs
cwde
xchg
cmp
in
out
xchg
movs
std
les
ret
outs
add
and
xor
pop
repnz
add
add
ss
push
or
les
dec
add
mov
add
jns
(bad)
jle
sub
add
in
sbb
lods
adc
fadd
sbb
add
ret
pop
xor
pop
sub
mov
sub
fwait
jmp
movs
icebp
outs
xchg
bound
xchg
or
test
add
cmp
fidivr
cmp
add
scas
in
add
add
(bad)
xchg
inc
pop
pop
and
sub
or
int3
add
jge
in
aam
sub
mov
or
cmps
add
in
hlt
ss
xor
add
pop
add
arpl
js
add
loopne
and
push
inc
or
add
stc
dec
out
rcl
hlt
add
jo
mov
and
retf
pusha
bound
sbb
add
cld
shl
ret
das
in
xor
xchg
(bad)
stos
retf
add
xor
add
daa
cld
test
dec
mov
add
cmp
cs
and
push
sbb
mov
jmp
in
jno
push
pusha
pop
stc
sbb
pop
cmp
mov
lock
cmp
add
loopne
push
add
add
scas
cmp
xchg
adc
loope
shr
scas
mov
add
add
fs
fiadd
hlt
lock
popf
pushf
cmp
aad
mov
bound
mov
test
fmul
ss
mov
inc
test
retf
jp
fwait
add
add
adc
clc
sub
movs
jmp
mov
fs
arpl
imul
cmp
cmp
add
add
xchg
add
mov
dec
mov
xchg
jmp
sbb
add
add
push
dec
cmc
call
xchg
adc
add
add
popf
sbb
cmc
pop
xchg
sbb
xor
out
push
ret
adc
add
jge
sub
inc
mov
pop
push
not
add
sub
les
mov
ins
cwde
add
lds
ja
lock
add
add
pop
test
sub
jne
push
mov
jne
ss
in
add
popa
mov
out
add
lods
jmp
inc
adc
add
hlt
(bad)
mov
add
pop
in
nop
cmps
cwde
xchg
test
int
mov
add
add
xor
stos
pop
adc
fimul
(bad)
(bad)
xlat
or
and
clc
add
sub
icebp
call
add
add
xlat
jno
ins
(bad)
neg
jns
ret
(bad)
stos
iret
adc
cmp
inc
cmp
jg
and
retf
and
in
sbb
add
scas
ins
dec
jl
inc
jmp
add
add
cmp
adc
mov
pop
cmp
sub
das
retf
inc
mov
xchg
push
push
outs
rcr
call
add
xor
mov
lock
inc
add
push
ja
pop
mov
cdq
add
add
add
or
(bad)
add
shl
pop
loop
(bad)
xchg
dec
pop
push
sbb
xchg
push
aad
stc
pop
loopne
rcr
clc
sbb
in
add
add
stos
mov
aaa
sbb
add
in
add
cmps
loopne
add
pop
mov
lods
int3
push
mov
sbb
test
scas
sahf
pop
fwait
(bad)
push
add
jne
dec
fs
sub
adc
mov
xchg
scas
pop
retf
daa
cld
fninit
add
jno
add
add
sbb
add
xor
xchg
xor
out
jmp
retf
add
add
add
call
clc
sub
nop
mov
push
xlat
mov
std
jmp
(bad)
int
dec
scas
jle
scas
jmp
test
call
add
mov
xor
fwait
int
mov
shl
jmp
mov
or
aaa
ss
je
add
push
nop
mov
xor
pusha
adc
jbe
or
or
or
neg
add
jp
push
fcomp
dec
cld
jmp
mov
stc
fwait
and
add
mov
inc
fimul
in
adc
inc
mov
add
xor
cmp
adc
add
aam
sbb
inc
imul
push
mov
ret
clc
lahf
mov
outs
repnz
add
stc
pusha
sti
add
pusha
or
test
add
pop
stos
sub
push
adc
arpl
add
sbb
sahf
and
lahf
data16
cmps
xor
add
cmps
push
add
jbe
sahf
cdq
outs
xlat
add
(bad)
or
xor
xchg
mov
inc
push
xchg
rol
popa
fwait
xor
rcr
push
mov
add
in
xchg
ins
aam
add
movs
(bad)
cwde
dec
outs
ss
ins
inc
fild
add
mov
mov
mov
cmp
add
add
add
stos
add
xchg
dec
(bad)
in
test
fwait
sbb
mov
xor
jp
ins
sti
loopne
sub
add
lock
jl
test
add
ficomp
or
les
xchg
add
jo
adc
fld
add
repz
retf
mov
cmps
jg
add
push
scas
bound
clc
(bad)
movs
adc
loope
mov
fsubr
mov
int3
sbb
les
add
iret
fild
retf
(bad)
inc
adc
popf
jmp
mov
add
and
pusha
add
add
xchg
jp
and
cdq
pushf
xor
mov
sub
aad
leave
pop
(bad)
mov
in
add
push
mov
add
add
sub
xor
and
test
stos
mov
mov
adc
sbb
add
add
mov
ret
add
xchg
jmp
test
xor
xlat
add
add
das
retf
mov
dec
fdivr
cmps
jmp
bound
in
bound
lock
aam
jg
push
mul
pusha
jno
mov
xor
dec
mov
mov
out
lds
shr
dec
xor
jns
fwait
add
add
(bad)
shl
clc
jb
jae
inc
daa
jns
dec
xor
and
xchg
int3
push
ins
xchg
cmp
cmps
jb
adc
add
add
xor
(bad)
add
shl
or
adc
fadd
push
mov
pop
add
or
add
add
cli
cmp
(bad)
mov
sub
jg
cmp
jbe
stc
jg
neg
movs
pop
add
fwait
xor
(bad)
js
test
add
xchg
xchg
dec
pop
pop
jle
push
in
lock
test
add
loop
sub
into
jae
xor
sub
aam
mov
xor
and
int
add
add
add
mov
jne
pop
pop
cmp
cs
aad
pop
dec
popa
pop
sti
mov
fbstp
mov
es
int
out
test
add
sbb
inc
enter
aaa
or
xchg
sub
out
retf
jmp
mov
lds
bound
pushf
jne
jg
int3
add
cli
xchg
mov
add
xor
inc
add
mov
add
mov
sub
out
push
fsubr
rcl
es
mov
add
sbb
xchg
outs
adc
add
add
push
dec
test
and
test
mov
loope
push
je
mov
and
push
pop
adc
mov
mov
add
fld
pop
ss
xchg
in
jae
scas
add
sbb
add
ret
test
add
add
ss
sbb
scas
out
(bad)
shl
add
adc
lock
mov
mov
xchg
sub
cld
mov
add
xor
xchg
sub
xor
push
div
push
mov
enter
inc
jns
imul
xor
cld
xchg
ins
adc
add
add
inc
call
cld
mov
xor
add
xchg
xlat
lock
cmp
sar
stos
mov
nop
jmp
push
add
xchg
inc
xchg
jmp
ss
xchg
dec
in
inc
in
sbb
add
add
pusha
jmp
and
cmp
hlt
mov
aas
add
test
mov
jae
scas
xor
js
dec
or
std
test
cmp
sub
sub
es
mov
add
xchg
inc
add
lahf
mov
mul
pop
add
add
call
jb
mov
pop
mov
jb
or
shl
dec
mov
push
js
lds
add
stos
iret
sbb
jp
xor
loop
pusha
dec
sub
add
lds
add
inc
rcr
add
in
lea
into
jg
sbb
push
enter
lods
or
adc
add
or
pop
or
xchg
jb
mov
add
add
add
test
fdivr
mov
mov
shl
and
add
in
jbe
jo
xor
fisub
adc
rcl
add
xchg
jbe
dec
rol
inc
ficomp
les
add
add
sub
and
inc
add
shl
(bad)
pop
add
popf
push
sbb
pop
sub
xchg
sbb
rol
add
scas
(bad)
ja
or
ret
aas
xchg
xchg
mov
mov
xchg
sbb
ds
jno
(bad)
xor
pop
out
mov
mov
add
cmp
or
int3
dec
add
dec
push
push
add
pusha
xor
es
ds
mov
xlat
out
cmp
add
arpl
add
add
hlt
sbb
adc
lea
mov
add
leave
add
xchg
iret
jmp
pop
push
cmps
loopne
sub
out
cld
and
movs
add
cmps
inc
aas
add
stos
iret
test
or
xchg
mov
xlat
xchg
push
daa
add
xchg
faddp
mov
inc
in
xchg
xor
cmp
cld
(bad)
aas
in
add
mov
loop
add
xchg
mov
and
push
hlt
xlat
adc
imul
jmp
add
or
shl
aaa
push
jno
mov
fldenv
jp
or
shl
nop
test
mov
add
mov
add
add
add
add
hlt
test
jnp
add
fisttp
jle
dec
popf
mov
test
mov
xchg
add
out
mov
push
and
jae
in
loop
js
or
jmp
xchg
js
xchg
imul
ror
add
dec
es
or
jmp
push
add
inc
test
add
add
add
cmp
sub
sbb
repz
dec
ror
or
cwde
ins
leave
jg
mov
add
cmps
stos
jbe
retf
mov
cmps
daa
mov
or
pusha
cs
js
imul
mov
fadd
inc
add
daa
mov
test
pop
and
dec
add
in
add
add
ins
imul
xchg
inc
push
bound
add
and
xor
push
mov
cmp
jecxz
aaa
add
add
add
call
add
popa
push
ss
add
es
add
add
add
add
sar
leave
sti
arpl
add
std
mov
(bad)
jmp
pop
add
cmp
test
neg
pusha
inc
push
scas
int3
push
push
stc
sub
test
add
jp
iret
cld
out
mov
add
mov
add
mov
call
push
add
pop
sub
adc
and
(bad)
out
pop
push
dec
lds
add
add
pop
xor
and
or
inc
ret
shr
pop
push
add
add
jl
xor
xchg
xor
add
and
cs
sub
fs
(bad)
add
add
fmul
jmp
sti
push
jmp
or
leave
mov
xor
add
mov
stos
lods
in
push
add
mov
add
add
(bad)
mov
fiadd
sub
add
les
add
enter
sbb
sub
adc
add
add
add
in
imul
inc
lods
int3
dec
shl
out
arpl
xchg
and
pop
add
push
fsub
mov
xor
add
or
or
in
xchg
xchg
push
add
leave
add
push
outs
loopne
(bad)
retf
dec
add
sbb
cwde
inc
lds
add
sbb
ins
aam
data16
add
cmps
add
add
xlat
jg
lock
adc
xchg
fstp
mov
test
ins
or
add
or
aas
retf
inc
add
push
add
je
ins
mov
mov
mov
mov
add
and
dec
inc
pushf
add
stos
add
pop
cwde
xchg
add
add
jns
add
add
cwde
cld
push
push
ret
mov
dec
popa
mov
je
and
mov
bound
repnz
loop
ss
add
or
int3
add
add
fmul
add
in
or
add
loop
xor
popf
cmps
and
add
mov
mov
pop
cli
pop
add
jecxz
sub
call
test
(bad)
mov
cmps
test
add
cs
add
jg
shr
(bad)
retf
add
add
aad
ja
sub
movs
pop
jbe
xor
add
xor
addr16
(bad)
aad
inc
scas
push
jmp
push
add
adc
cmps
ds
sbb
scas
mov
aam
adc
add
mov
cmc
add
pop
push
jge
add
hlt
jbe
add
fdiv
xor
les
add
fnstcw
xchg
and
pop
sbb
movs
xor
add
mov
pop
xchg
fadd
sub
shl
add
les
js
pop
inc
addr16
sub
pop
xchg
add
add
cli
xor
mov
push
add
cmp
add
jae
xchg
mov
test
les
inc
add
mov
lahf
dec
shl
lea
lds
cmp
and
ret
leave
mov
add
and
mov
rcl
fs
adc
inc
sbb
je
inc
push
or
mov
(bad)
add
dec
or
sub
sbb
sub
in
pop
popw
sbb
sti
mov
loop
sub
retf
scas
cmp
mov
fs
jb
add
test
add
dec
sub
add
paddq
cld
call
dec
add
and
inc
add
jbe
iret
es
add
sbb
dec
xchg
adc
xchg
xor
add
pop
aam
or
add
xor
mov
out
pushf
dec
sahf
sti
add
pushf
mov
add
icebp
ss
ss
fsub
add
stos
imul
fld
add
das
popf
or
jnp
add
fs
out
xchg
mov
int3
pop
add
and
in
inc
xchg
inc
mov
add
pop
icebp
das
mov
mov
sub
and
push
mov
(bad)
sub
adc
jae
enter
add
push
sbb
pop
push
inc
mov
push
inc
add
mov
add
jne
jmp
aad
pop
xchg
pusha
pushf
xor
add
sub
mov
xchg
stos
jg
out
shl
adc
xchg
mov
cmc
repz
in
dec
sbb
jbe
dec
mov
cwde
fiadd
pop
(bad)
pop
idiv
inc
add
add
mov
xchg
mov
adc
inc
mov
pop
sub
push
ins
push
ror
add
cmp
adc
pop
sbb
add
fidiv
and
add
adc
retf
es
pop
mov
test
jecxz
js
xor
leave
mov
pushf
add
fs
lea
cmc
add
add
in
jne
das
xchg
mov
mov
add
ds
push
adc
pop
shl
popf
push
in
add
test
lea
sbb
mov
add
lods
cmps
cmps
sub
add
or
mov
daa
aas
xor
mov
add
pop
or
sti
or
daa
and
add
imul
sbb
ds
sbb
add
sar
out
add
jne
inc
lods
int
xchg
into
mov
sub
cwde
or
mov
repnz
push
je
and
retf
pop
and
enter
add
jecxz
loop
mov
test
ret
inc
sub
adc
stos
in
add
shl
add
clc
cs
xchg
add
push
add
mov
addr16
rcr
mov
ins
sbb
adc
iret
and
add
and
sub
or
outs
dec
or
push
sbb
add
fstp
pop
sub
cmp
(bad)
lea
push
cmp
in
add
in
or
imul
add
into
inc
cmp
inc
push
(bad)
xchg
xlat
hlt
xchg
xor
iret
xor
je
adc
dec
or
stos
nop
mov
cmp
in
add
in
mov
cmp
daa
pop
into
add
add
popa
jnp
fwait
shl
test
int3
add
and
shr
push
jmp
in
pop
pop
push
fild
add
xor
cmc
cli
lods
fdiv
jle
fsub
stc
pushf
sub
mov
jp
add
inc
daa
pshufw
mov
add
add
push
cdq
or
mov
mov
mov
add
jns
sbb
add
cmps
adc
add
jle
std
jle
add
add
jae
loop
test
outs
mov
xchg
sub
sbb
loop
dec
push
add
int3
mov
(bad)
add
pop
xchg
add
hlt
mov
mov
xor
imul
add
add
hlt
ss
mov
retf
xor
inc
mov
jns
dec
add
add
jl
call
bound
test
sub
and
sbb
add
aaa
mov
clc
retf
inc
dec
lds
mov
add
mov
test
add
jge
add
add
cmp
pop
xor
ss
xchg
pop
cmp
add
and
jne
int3
add
jle
test
daa
ret
dec
add
ss
mov
jb
test
lds
enter
add
add
sub
xlat
dec
dec
dec
add
cld
pop
ins
sbb
aam
add
add
inc
inc
mov
push
and
stos
fdivr
add
xlat
add
(bad)
cld
push
add
lock
js
adc
or
jnp
stos
nop
pop
add
add
popf
jbe
cld
arpl
inc
js
fld
dec
inc
inc
leave
enter
xor
adc
mov
aaa
jl
pop
int3
push
int3
inc
repnz
mov
cmp
aas
add
add
pop
add
rol
jecxz
sbb
xchg
repnz
pusha
mov
fs
popf
fidiv
sbb
in
leave
in
add
dec
ins
mov
add
mov
sub
fsubr
add
sbb
sbb
jmp
enter
add
retf
add
mov
out
loopne
scas
xor
outs
fild
sti
add
add
daa
(bad)
push
dec
(bad)
lahf
mov
(bad)
in
mov
add
pop
je
sub
ficomp
add
scas
cmp
add
pop
out
add
inc
mov
test
dec
dec
aas
inc
or
add
xbegin
nop
mov
pop
arpl
inc
call
inc
add
adc
xor
add
adc
cmps
test
(bad)
mov
jns
pop
call
mov
lahf
jp
add
bound
adc
lods
mov
add
add
push
sbb
jmp
sahf
cmp
cmp
and
or
sub
cmp
shl
add
add
add
and
fnstcw
mov
add
call
lds
sub
imul
sub
aas
mov
push
add
mov
add
adc
ss
sbb
mov
pop
int
xchg
add
pop
adc
or
jbe
loope
inc
es
sar
sahf
push
aaa
jbe
dec
pushf
bnd
cdq
mov
or
pop
sbb
inc
add
add
and
cmc
call
inc
inc
aas
in
push
daa
and
imul
mov
retf
leave
pop
jne
add
lea
out
jg
cmp
add
in
dec
fidivr
cli
jge
xor
in
jns
add
sub
cmp
mov
rol
add
add
mov
sti
ins
ror
cmp
add
xor
mov
add
add
mov
loopne
jae
test
aas
xor
jle
jae
add
jmp
add
add
add
cwde
fist
lock
xor
shl
lods
icebp
inc
sbb
lea
test
test
outs
outs
enter
leave
inc
push
xor
add
ja
add
add
or
fnsave
dec
gs
pop
out
jmp
or
push
loop
and
lods
jmp
xchg
mov
adc
mov
jmp
add
mov
lods
mov
mov
jg
push
jmp
add
xor
mov
movs
lods
inc
mov
cmp
add
cli
sbb
dec
mov
outs
inc
(bad)
retf
loopne
push
add
jmp
xchg
and
cmp
sub
push
and
add
cmp
add
cmc
push
add
xchg
add
mov
add
xor
add
sbb
add
cld
mov
add
push
add
add
aam
xchg
fisubr
jmp
aam
enter
aam
add
add
add
sar
ja
cmps
and
cdq
fisub
mov
dec
xor
push
xlat
popf
ret
add
in
iret
movs
aam
enter
add
add
pop
icebp
or
aaa
fadd
(bad)
out
add
out
leave
mov
sbb
dec
add
add
and
sbb
push
(bad)
outs
fld
add
lock
adc
xchg
ins
add
mov
sar
add
add
into
iret
jl
loopne
cmps
icebp
adc
push
repnz
das
or
neg
pop
les
movs
mov
add
fsub
adc
loopne
sub
mov
add
icebp
pop
gs
add
mov
lods
jnp
add
add
xor
xor
out
jp
push
jmp
(bad)
aam
pop
add
or
add
add
xlat
cmp
call
jmp
and
xchg
add
jg
fidiv
push
test
in
scas
fst
xor
add
sar
adc
push
xchg
adc
pop
xor
mov
mov
add
sar
fcomp
rol
mov
movsx
fistp
cmps
fs
add
add
lods
xor
lods
pop
add
sub
mov
xchg
jns
xchg
dec
add
sub
jmp
pusha
(bad)
mov
aaa
cmp
add
mov
scas
inc
mov
push
cli
movs
add
mov
mov
add
push
(bad)
bswap
jmp
lods
add
add
mov
xor
fild
fld
int
add
adc
ds
sbb
scas
outs
push
data16
add
xor
add
loop
add
pop
and
jp
add
hlt
mov
sbb
hlt
adc
fwait
mov
cmp
js
add
clc
push
ror
add
sbb
or
add
xor
test
pop
psrlq
(bad)
add
push
js
and
ror
mov
add
ja
pop
sahf
nop
inc
in
fwait
loopne
xor
cmp
add
add
xchg
mov
sbb
mov
add
lock
retf
mov
adc
test
scas
test
add
xor
xor
adc
push
mov
cwde
add
test
push
sub
cli
sub
data16
xchg
add
add
jnp
outs
mov
pop
call
sub
(bad)
cmp
add
clc
ss
adc
cmp
xchg
mov
scas
fbld
add
neg
pop
js
dec
inc
adc
add
cmc
aam
cmp
ret
xor
les
les
add
push
cmc
(bad)
sub
push
mov
ja
add
add
ret
loopne
pop
cld
(bad)
jmp
in
retf
ficomp
add
add
add
add
inc
push
mov
in
push
mov
icebp
test
mov
aas
fstp
lods
xchg
in
call
xchg
pop
test
add
add
jecxz
cmps
or
movs
sub
jmp
push
inc
mov
sub
ins
(bad)
clc
lods
add
lods
loopne
mov
ret
dec
and
nop
retf
jmp
cwde
test
add
push
fadd
jl
sub
pushfw
movs
add
mov
jg
push
add
push
inc
add
mov
popa
xor
mov
jmp
add
sbb
jl
add
pop
pop
sbb
sub
mov
nop
mov
call
add
dec
adc
mov
ret
scas
test
jbe
sub
scas
pop
add
add
xchg
into
(bad)
pop
(bad)
jg
sbb
pop
adc
add
imul
jge
in
pop
mov
add
add
add
out
test
test
and
outs
mov
rol
stc
xchg
push
add
rol
jae
adc
inc
jo
xor
mov
inc
add
mov
dec
mov
add
push
sar
sti
not
outs
add
sbb
dec
sub
jo
add
add
dec
scas
(bad)
sub
std
das
mov
xlat
add
xor
test
setns
adc
repnz
jno
add
add
add
dec
aam
adc
sti
in
push
dec
lods
out
mov
xchg
add
cmp
fisubr
and
jg
pop
inc
add
xor
aaa
mov
pushf
jle
push
xchg
cmp
add
movs
pop
push
das
and
xchg
pop
add
add
pop
stos
ud1
rcl
iret
pop
jl
dec
dec
ret
add
mov
stos
add
jle
add
jle
aas
dec
add
adc
in
lock
cmps
xchg
xor
sub
jne
in
fs
add
fdiv
mov
(bad)
sub
fidivr
cmp
ret
add
icebp
dec
mov
mov
movd
std
aad
add
mov
call
mov
or
add
mov
or
or
sbb
add
add
add
fs
mov
out
xchg
adc
sbb
inc
pusha
mov
add
add
aad
inc
cmps
push
js
je
jge
xchg
sub
mov
outs
psraw
lea
mov
dec
add
add
pop
push
xchg
mov
jp
pop
es
push
mov
pusha
mov
add
(bad)
fs
test
cmps
add
dec
push
mov
inc
add
add
cmp
jae
adc
adc
fld
mov
popa
fadd
add
fs
add
push
sbb
fild
add
and
ja
push
add
add
mov
fistp
sub
into
es
(bad)
pop
add
outs
mov
mov
or
rol
aas
xor
add
xchg
xchg
sbb
jnp
push
sbb
push
inc
mov
and
add
fucomp
ja
test
mov
and
neg
shl
add
jbe
repnz
in
mov
push
scas
push
add
lods
pop
pop
add
sub
add
jp
add
stos
cmp
inc
push
add
fwait
mov
add
push
daa
and
push
inc
add
jbe
add
add
cmp
add
add
jo
add
mov
mov
inc
add
add
and
pop
in
cmps
ss
scas
fiadd
adc
mov
and
mov
call
bound
sub
mov
or
adc
add
in
mov
add
into
out
push
sub
fisubr
inc
jmp
movs
inc
icebp
ret
xchg
stos
push
mov
add
add
add
xlat
sti
ins
je
jmp
stos
mov
push
mov
xchg
(bad)
jmp
add
add
adc
pop
add
dec
outs
or
add
or
add
jb
xchg
add
mov
mov
sbb
add
add
scas
(bad)
push
jns
add
xchg
and
add
mov
clc
dec
add
add
or
jecxz
data16
sub
call
add
add
mov
jae
add
daa
popa
sbb
pop
push
jno
add
adc
test
mov
dec
pop
scas
mov
cdq
je
ja
(bad)
pop
inc
add
add
add
pop
cs
int3
pop
dec
popa
imul
shl
push
iret
test
inc
jp
fistp
cdq
cmc
sub
mov
ins
jmp
jb
es
jg
out
or
xlat
pusha
jnp
mov
mov
add
add
adc
xor
jo
jl
mov
shr
add
int
loope
in
add
add
movs
scas
cwde
scas
or
int
dec
pop
mov
adc
fdiv
and
mov
add
mov
fwait
cwde
fdiv
popa
out
xchg
and
add
add
add
mov
mov
jo
dec
repz
push
mov
pop
js
enter
add
outs
mov
xor
add
add
add
(bad)
ins
(bad)
add
imul
int
ss
inc
sbb
or
inc
xor
push
int3
add
mov
add
add
adc
test
outs
or
mov
out
mov
cmp
es
inc
mov
fdivrp
ror
add
add
bound
movs
mov
inc
call
sbb
test
js
add
adc
hlt
xchg
int
sbb
scas
add
add
add
add
scas
mov
retf
pop
sbb
jmp
ins
stos
inc
mov
into
cmp
xchg
adc
iret
xor
xor
jl
in
retf
push
push
scas
je
leave
test
idiv
data16
outs
aaa
add
add
xchg
in
mov
cmp
cmp
int3
xchg
cs
adc
add
(bad)
(bad)
cmp
ficomp
and
and
sbb
mov
push
mov
ror
je
in
add
aad
xor
pop
and
fmul
push
add
mov
jle
jmp
add
int3
add
cwd
xchg
sub
jg
and
push
cwde
add
sub
mov
int
add
test
add
add
(bad)
push
xor
add
add
jo
inc
xchg
lods
pop
push
jp
inc
add
inc
mov
add
or
mov
and
je
add
add
inc
adc
mov
dec
mov
popf
inc
adc
push
add
add
and
inc
add
add
add
add
push
ror
mov
xchg
mov
stos
js
xor
or
add
pop
jecxz
xchg
inc
in
cmp
in
mov
or
add
js
add
scas
push
lea
xor
call
call
shl
add
mov
pop
push
pop
hlt
scas
xchg
cli
xor
xchg
mov
and
popa
sahf
mov
push
mov
sbb
add
mov
xchg
into
sub
into
mov
cmp
into
adc
in
push
mov
cli
add
or
jmp
pop
add
mov
out
mov
adc
pop
lea
add
sub
retf
sub
add
cdq
mov
mov
mov
sbb
jbe
jl
mov
add
outs
loope
add
(bad)
dec
icebp
out
cmc
push
mov
adc
cmp
cwde
mov
fst
or
cwde
ret
add
lahf
jnp
add
mov
add
in
xlat
cmps
in
push
jne
mov
mov
add
add
cmc
xor
inc
add
repnz
xchg
add
xchg
xchg
lds
add
and
add
cli
mov
add
stc
pusha
lock
loopne
ins
mov
mov
pop
jns
sbb
sub
add
movs
add
add
add
add
pop
lahf
xchg
dec
mov
push
xor
adc
test
lea
xchg
mov
sbb
sbb
add
cli
lea
pushf
add
add
loope
xchg
or
ror
mov
addr16
outs
outs
out
fwait
sub
in
xor
ds
mov
inc
or
add
(bad)
call
xchg
mov
add
pop
stos
or
xchg
cli
outs
push
pop
popf
loope
add
js
daa
cmp
xor
mov
inc
enter
add
mov
dec
lahf
arpl
icebp
mov
cmp
call
mov
test
fsubrp
(bad)
rol
les
jo
jb
add
int
add
loope
cwde
add
imul
dec
dec
aam
or
fldcw
sub
mov
adc
and
ja
mov
pop
leave
add
add
dec
sbb
loope
(bad)
jmp
add
xor
shr
sbb
mov
data16
cmp
jns
add
jecxz
pop
pop
jl
push
xor
out
cmp
retf
std
cmp
outs
add
add
jmp
xchg
lods
fiadd
xchg
jle
add
jno
out
or
into
mov
call
ins
mov
xor
add
wrmsr
and
add
xchg
hlt
add
pop
jmp
dec
je
test
jnp
and
hlt
cmp
add
add
push
retf
call
jno
add
add
call
lods
loopne
push
fld
add
add
add
cmps
sbb
scas
sahf
inc
cmp
int3
jmp
and
lods
mov
call
inc
xor
add
mov
jne
int
add
pop
clc
or
aad
mov
add
mov
jnp
add
or
daa
mov
xchg
js
fwait
inc
xchg
mov
fiadd
add
inc
loopne
sbb
sbb
std
mov
pop
jp
shr
xor
mov
push
jge
inc
mov
fild
jmp
daa
cwde
test
xor
add
jnp
xor
(bad)
cmps
test
cmp
iret
not
outs
xor
push
sub
add
loop
push
add
aad
pop
add
xor
aad
fmul
xchg
inc
dec
add
cmp
in
add
add
add
jmp
out
push
imul
scas
faddp
imul
add
enter
in
or
dec
mov
jge
push
bound
scas
ja
loope
add
add
mov
or
xor
dec
rol
test
les
sbb
add
xlat
(bad)
aam
inc
push
add
add
mov
or
xchg
call
add
setl
int3
sub
add
sbb
push
add
sbb
imul
add
cmp
add
add
mov
xor
add
daa
inc
cmp
sbb
pop
ret
mov
out
jp
dec
add
add
add
dec
mov
add
jo
test
xor
enter
push
movs
sub
xchg
cmp
rol
cmp
add
xchg
add
add
push
dec
push
inc
push
aaa
inc
pop
jns
sti
pop
xchg
xchg
cmp
retf
push
mov
sbb
add
mov
push
or
imul
cs
mov
adc
mov
add
cmps
mov
cmp
add
(bad)
cmp
test
add
repnz
mov
ror
ror
jge
adc
jb
xor
js
fst
add
ds
out
push
mov
or
imul
(bad)
xor
dec
add
sbb
cmps
(bad)
div
and
xor
jmp
or
jge
push
ficom
pop
jns
sbb
sbb
xchg
test
cmp
dec
les
sub
lea
and
fstp
daa
lea
scas
(bad)
call
loopne
xor
icebp
add
adc
and
add
mov
ins
jmp
pop
jecxz
nop
jl
fwait
add
jns
mov
jp
div
xlat
add
add
xor
jo
in
ja
dec
enter
pop
mov
mov
fmul
and
loopne
add
rol
add
dec
(bad)
jl
aaa
retf
bound
sbb
out
aas
mov
sbb
imul
add
pop
inc
jecxz
inc
movs
test
and
push
mov
ret
cmp
add
lods
sbb
fwait
inc
add
or
je
jno
ror
loope
add
sahf
add
add
mov
adc
daa
loopne
add
loopne
pusha
mov
or
sub
cmp
cmp
jg
or
ja
ficom
lea
add
pop
in
mov
xor
add
dec
xlat
sub
inc
test
pop
ret
xchg
add
lock
xlat
add
or
add
add
jp
js
or
sub
push
jnp
add
jecxz
pop
add
push
nop
mov
lds
add
ds
movs
repnz
sub
add
in
imul
mov
sub
add
push
cmp
cmp
rcl
mov
sub
inc
bound
fnsave
mov
xchg
loopne
dec
xor
out
adc
mov
add
add
es
cdq
repnz
jmp
cmp
sub
jle
lods
arpl
ret
mov
xchg
lods
lods
add
push
or
xlat
and
mov
dec
add
popf
mov
scas
jbe
add
pushf
inc
dec
sub
xlat
mov
inc
mov
xchg
push
add
inc
sbb
nop
xor
(bad)
mov
add
inc
mul
cdq
mov
clc
inc
int3
repz
fidivr
dec
loop
in
rol
div
sti
push
mov
xchg
dec
stos
test
adc
popf
sbb
add
std
xchg
div
add
add
cmps
xchg
sar
mov
xor
pushf
ficom
inc
dec
ins
dec
call
jnp
sub
mov
add
mov
call
aas
xchg
and
int3
and
add
sbb
rcl
xchg
adc
sti
sti
(bad)
jmp
or
fsubr
mov
ror
dec
add
xchg
add
pop
js
fsubr
fisubr
mov
mov
add
add
add
fwait
pusha
mov
xchg
je
cmp
inc
imul
push
(bad)
js
mov
mov
pop
je
sbb
add
aas
aam
pop
add
jb
push
inc
add
(bad)
ins
mov
add
loopne
mov
je
jmp
add
cwde
xor
adc
push
xchg
sbb
sub
ss
ret
add
or
xor
gs
(bad)
out
pop
ins
sub
inc
sub
lods
cmp
add
mov
pusha
mov
nop
repnz
loop
stos
push
inc
jmp
add
add
dec
jo
add
dec
data16
add
add
stos
fdiv
add
loop
call
sbb
adc
call
add
add
(bad)
test
and
lods
jmp
sub
out
jle
mov
retf
scas
jno
and
jns
push
adc
dec
mov
mov
pop
and
scas
test
add
push
icebp
add
add
jl
in
push
repnz
jp
cld
ficomp
pop
mov
sbb
inc
add
cmp
jmp
add
fnstsw
aas
mov
mov
add
add
call
xchg
nop
loope
outs
mov
ins
xor
xor
adc
ins
add
(bad)
aad
push
dec
and
cld
adc
pop
ffreep
add
add
loope
ins
pop
push
fs
ss
sub
lock
pop
mov
or
xor
cmp
add
out
or
xor
fld
add
jae
push
ja
add
sbb
inc
das
add
shl
pusha
cmp
fcomp
add
xchg
dec
mov
or
sbb
cmps
mov
adc
fild
imul
ins
sahf
jae
add
popf
pop
cmps
loopne
mov
mov
inc
dec
mov
inc
add
add
xchg
add
jge
mov
pop
and
add
and
cmp
mov
sar
stos
xchg
repnz
(bad)
in
outs
add
add
fxch
ficom
jle
xchg
mov
jle
mov
add
add
add
movs
hlt
and
push
imul
inc
push
data16
xchg
mov
inc
das
mov
dec
paddusb
add
ss
pop
lock
add
push
push
jno
cli
sbb
mov
call
cmp
rol
xor
leave
aam
iret
lods
aas
pop
clc
add
jmp
pop
in
add
add
call
mov
push
add
je
mov
sahf
adc
or
lods
add
add
xchg
mov
mov
sar
imul
and
add
fmul
imul
add
add
pop
shl
mov
sub
ja
inc
lahf
add
add
enter
pusha
iret
into
lods
push
push
cld
mov
mov
add
cld
xor
adc
ror
add
jge
jo
out
add
or
(bad)
(bad)
xor
sub
loop
cmp
add
add
xor
out
push
int3
jle
sti
mov
push
addr16
pushf
scas
pop
xor
out
mov
add
mov
fsub
dec
scas
or
add
push
mov
add
and
pop
add
jo
mov
push
dec
loopne
cmp
mov
adc
sti
pop
add
add
das
aam
(bad)
xchg
add
fisub
mov
aas
dec
fbld
xor
add
icebp
lock
es
push
aaa
sub
ficomp
xchg
jno
hlt
dec
xchg
popf
and
add
daa
cmp
add
add
add
mov
xchg
ja
sbb
cmp
cli
out
dec
push
add
lea
shl
pusha
add
xor
pop
jns
cmps
ss
imul
scas
pop
stos
fsubrp
xor
xchg
les
add
cmp
add
mov
jle
inc
fld
inc
sub
retf
lds
add
cmp
push
inc
ss
or
aas
ins
call
cmp
mov
or
add
sahf
sti
mov
icebp
cmp
test
mov
(bad)
hlt
arpl
xchg
add
add
and
mov
inc
xchg
mov
xor
cs
add
jbe
sahf
movs
out
add
mov
jno
mov
add
add
mov
loopne
loope
es
adc
int
inc
shl
add
add
adc
add
add
js
out
fadd
stos
dec
popf
(bad)
mov
mov
add
test
shl
std
loop
mov
or
je
fdiv
pushf
pop
lds
es
(bad)
ret
inc
cli
inc
retf
pop
push
add
sub
(bad)
sub
or
mov
add
fiadd
test
je
bound
cmp
dec
push
ds
jp
jbe
add
add
sar
or
mov
lds
lods
push
mov
push
mov
add
sbb
outs
push
movs
add
sti
bound
rcl
outs
daa
pop
cmps
and
imul
dec
enter
ja
(bad)
fs
(bad)
push
add
add
jp
cld
xor
enter
cmp
aam
xchg
loope
retf
and
mov
xor
add
mov
ins
bound
inc
inc
mov
outs
xchg
and
scas
xchg
inc
inc
pop
push
sbb
cmps
jno
add
add
outs
out
ret
jae
add
add
add
sbb
adc
xchg
retf
out
imul
adc
std
imul
retf
out
add
add
add
fisttp
dec
ds
xor
enter
or
gs
inc
jg
add
out
cmps
pop
jmp
jecxz
add
ss
jle
dec
inc
push
add
ins
and
inc
lock
add
(bad)
clc
pop
jle
lods
add
sbb
aas
aas
(bad)
add
add
ins
cmps
cmps
ret
mov
lahf
or
and
inc
add
fisubr
add
ins
mov
pop
dec
mov
cld
push
sahf
xor
push
pop
ss
add
inc
dec
loop
add
mov
adc
mov
mov
jbe
jb
sbb
loope
mov
mov
test
mov
fadd
add
add
add
arpl
scas
jmp
inc
push
mov
and
push
xor
xor
mov
or
dec
outs
mov
add
add
inc
xor
pushf
(bad)
fistp
fild
int
or
pop
add
or
push
mov
push
mov
xor
and
add
call
inc
push
fcomp
mov
add
clc
sbb
add
dec
es
add
into
mov
ret
add
cli
aad
sar
cmp
aas
pop
add
jno
lods
jmp
dec
jg
fadd
mov
add
add
movs
mov
xor
call
test
xchg
sub
ja
lods
xchg
cmp
sbb
mov
mov
sbb
rep
add
imul
sbb
xor
xchg
add
add
add
popf
ret
pop
scas
imul
test
sbb
push
add
xor
clc
add
add
shr
jne
enter
ds
leave
cmp
add
pop
fild
adc
add
jg
or
mov
cwde
dec
jb
jns
xchg
push
cmp
add
add
mov
cmc
sbb
pop
mov
xor
xor
imul
imul
in
jl
jne
mov
adc
in
xchg
in
push
out
inc
fcomp
ret
cmps
stos
and
mov
add
jg
cmp
jb
add
mov
add
add
imul
rcr
xchg
sbb
sbb
fst
hlt
mul
stos
int
es
push
popf
add
add
lea
add
jmp
add
inc
nop
fwait
sar
lods
add
mov
les
jnp
or
add
xchg
jb
lods
lock
js
mov
add
add
cli
out
dec
mov
(bad)
in
test
dec
cli
lods
sbb
jo
add
ror
mov
xchg
or
add
dec
call
mov
add
arpl
xchg
mov
call
mov
jb
add
pusha
cmp
add
out
(bad)
stos
ficom
add
xor
push
mov
in
test
outs
mov
add
pop
pop
cld
mov
push
mov
movs
add
mov
sbb
aas
bound
add
rol
add
test
fcomp
neg
jae
mov
add
cmp
adc
cmps
jo
mov
cs
test
jle
mov
scas
inc
xchg
sar
rol
push
add
div
add
pop
into
pop
pop
imul
cmps
add
jmp
inc
xchg
cwde
jmp
add
cmp
mov
and
add
in
outs
sub
mov
add
movs
rcr
outs
push
jle
sub
jge
mov
add
(bad)
mov
rcl
mov
fldcw
stos
sbb
add
js
add
add
add
jns
cmps
sahf
jmp
gs
and
arpl
jbe
or
inc
mov
inc
jmp
in
push
loop
add
stos
add
rol
jl
add
imul
stos
add
pop
test
xor
sbb
fs
imul
add
add
mov
and
mov
add
out
sbb
ficom
adc
pop
call
xor
sub
add
add
enter
js
ror
stos
in
cmp
stos
pop
add
aaa
test
fs
add
mov
aas
in
loop
push
aaa
sub
add
add
or
stos
and
sar
rol
fisub
pusha
add
fdivrp
push
frstor
stos
fdiv
xor
add
mov
mov
hlt
imul
popa
push
div
(bad)
add
cld
add
add
add
jae
push
ret
loopne
out
cmp
mul
fidivr
out
mov
dec
sub
add
dec
aad
data16
jbe
in
adc
add
xor
lea
les
bound
add
nop
shr
movs
adc
mov
or
add
or
xlat
call
xchg
push
adc
add
add
inc
popf
iret
lea
cmp
ins
push
jb
mov
and
push
add
imul
add
add
scas
lods
out
mov
out
cmp
(bad)
adc
pop
psubb
dec
fmul
int
or
xchg
add
pop
in
js
push
fsubr
add
and
mov
lds
nop
jmp
push
pop
or
jl
add
add
add
stc
les
js
loope
ja
(bad)
push
iret
or
cmps
enter
cmp
push
inc
retf
add
arpl
inc
add
xlat
push
add
add
add
out
add
dec
add
cld
nop
add
or
fld
add
or
(bad)
xlat
dec
and
loope
aaa
dec
out
retf
rcl
and
pop
test
jg
fsub
mov
mov
fwait
fwait
sub
xor
shl
xor
cmp
add
(bad)
int
jecxz
add
cmp
ins
jo
pop
mov
jg
test
mov
call
test
jbe
iret
sti
fist
mov
aaa
mov
data16
add
add
cmp
push
xor
ins
jns
lds
ror
loope
cmc
sub
sbb
dec
add
aaa
add
add
int3
xchg
adc
push
mov
cdq
stc
xchg
fst
pusha
in
xor
inc
shld
add
in
mov
xor
push
xchg
push
add
sbb
test
pop
mov
ret
pop
test
pop
push
jne
add
cmp
add
je
and
mov
daa
pop
add
sub
retf
adc
jb
push
imul
retf
dec
add
clc
inc
push
xchg
rol
add
add
out
jb
fmul
pop
imul
adc
add
add
pusha
adc
pop
lods
push
pop
pop
cmp
arpl
cs
jno
add
data16
add
xor
mov
add
sub
push
add
ds
add
push
jmp
xor
es
mov
dec
scas
dec
add
push
add
(bad)
jle
lahf
or
sbb
lds
add
lds
cwde
into
sbb
and
data16
pop
add
add
stc
mov
repnz
retf
scas
cmc
xchg
fucom
shr
into
sbb
jns
lock
push
mov
outs
fild
repz
add
xchg
push
das
shr
mov
add
movs
in
adc
xor
add
aam
jo
add
cmp
cmp
adc
push
inc
pop
fistp
push
add
out
fsubr
(bad)
add
add
stos
inc
fiadd
cmc
xchg
pop
dec
aas
adc
push
enter
loope
cmc
daa
add
push
rcr
lds
mov
add
add
xchg
fisubr
popf
pop
mov
or
add
cmp
jae
jp
loope
and
add
std
xchg
(bad)
xchg
pop
call
pusha
add
cmp
lds
add
add
sub
sub
cmovp
lahf
xchg
test
aaa
leave
or
fimul
icebp
cli
add
lock
ror
ror
call
adc
popf
add
add
or
mov
push
neg
cmp
add
gs
in
pop
push
lds
jae
mov
lods
add
mov
add
scas
rcr
adc
push
dec
sbb
sub
cmp
add
xchg
add
lock
push
adc
add
jmp
push
mov
repnz
jne
clc
cmp
(bad)
mov
add
inc
adc
icebp
out
add
add
or
(bad)
mov
xchg
dec
cli
add
cmc
(bad)
add
out
inc
mov
pop
add
xchg
cmp
add
das
rol
cs
add
jle
jnp
add
mov
loop
push
jg
ret
sub
add
pop
(bad)
or
xchg
mov
lds
add
lock
add
mov
fs
and
add
push
push
cs
pop
icebp
dec
out
fdivr
fsub
call
scas
add
add
rcr
sub
add
mov
pusha
pop
mov
inc
outs
cmps
sbb
mov
int3
push
arpl
xor
cmp
mov
push
movs
retf
les
add
and
or
mov
outs
ficomp
jg
into
add
add
sbb
rcr
scas
movs
out
cmps
popa
arpl
aas
sbb
sbb
sub
leave
shl
jb
pop
mov
pop
jg
hlt
outs
add
mov
dec
xchg
pop
dec
in
inc
mov
scas
pusha
add
xor
mov
and
pop
pop
repz
add
stc
ds
mov
outs
imul
sbb
push
jnp
add
mov
push
(bad)
pop
cmp
lea
adc
pop
sub
push
push
xchg
push
leave
jnp
je
call
loop
lods
add
add
leave
push
adc
inc
iret
push
je
inc
iret
add
mov
add
popf
xor
jecxz
and
add
push
lock
rol
mov
jb
jecxz
add
add
fst
add
rol
test
ret
add
add
add
add
add
(bad)
jb
mov
inc
mov
test
and
push
xor
adc
and
push
icebp
cli
pop
call
xchg
shl
je
dec
add
fiadd
jg
xchg
fwait
add
add
pop
ins
dec
ja
sbb
movs
cmp
pop
scas
(bad)
dec
mov
add
add
jbe
xchg
jno
dec
xor
pop
retf
xor
xor
daa
push
cmp
lods
push
mov
shl
std
push
add
add
ret
add
add
add
mov
call
ret
adc
mov
scas
retf
leave
cmp
add
or
xor
adc
add
pop
in
inc
jmp
add
push
add
pop
dec
adc
add
neg
arpl
push
int3
cwd
leave
stos
iretw
push
pop
add
jg
stc
pop
cdq
in
add
add
cmp
fmul
mov
xchg
movs
jae
or
add
dec
mov
jmp
mov
imul
add
mov
mov
in
add
mov
aaa
push
jnp
inc
push
add
add
sbb
mov
dec
jecxz
test
add
retf
or
add
enter
loope
cdq
inc
scas
push
push
(bad)
ins
int3
and
inc
mov
les
ja
add
pop
xchg
mov
add
jmp
inc
add
add
sbb
outs
sahf
test
mov
xchg
in
cmp
and
mov
and
and
sbb
pushf
stc
add
int
add
jge
fdivr
ja
xchg
add
add
sbb
dec
cmp
je
ins
add
jl
adc
add
stc
mov
add
push
mov
add
add
dec
xchg
mov
(bad)
jbe
add
add
add
xchg
mov
add
pop
test
sub
or
add
mov
(bad)
verw
add
jp
lods
add
add
mov
out
out
and
inc
fs
add
fadd
add
jg
xor
jle
cmps
lods
xchg
add
pop
aam
xor
inc
in
ret
int3
mul
xor
inc
xchg
out
movs
xchg
rcr
test
jg
(bad)
std
mov
add
mov
mov
imul
rol
and
test
cmp
imul
inc
xor
adc
in
sbb
add
retf
fidiv
cmp
js
(bad)
fdivr
add
add
sub
add
ss
mov
mov
add
cmp
sahf
popa
enter
cli
mov
mov
add
mov
test
pop
sbb
aaa
nop
test
sbb
std
repz
call
in
push
add
add
popa
data16
int3
xor
and
dec
sub
mov
add
stc
into
and
add
add
adc
add
in
pop
xchg
mov
imul
jbe
js
out
(bad)
sub
xchg
or
jmp
clc
icebp
xchg
enter
add
test
add
push
pop
push
or
adc
sub
jp
add
mov
(bad)
fstp
jbe
jle
add
adc
add
xchg
int3
or
push
into
xor
(bad)
out
add
and
mov
rcr
test
jmp
add
add
mov
ret
dec
add
push
add
stos
push
adc
xor
add
arpl
or
add
dec
js
jno
repnz
es
fcomp
jno
call
mov
js
mov
cmps
mov
jno
add
add
enter
je
pop
jae
test
add
mov
les
test
cs
add
add
enter
jmp
cmps
add
popa
stos
xor
xor
mov
cld
jne
(bad)
rol
add
mov
cmps
dec
add
nop
mov
test
add
call
xchg
pop
sbb
add
add
pusha
repz
les
dec
add
and
xchg
pop
mov
je
push
dec
add
ret
cmp
addr16
push
mov
jbe
pop
scas
adc
add
add
mov
push
cmp
jecxz
mov
in
xor
cmps
add
pusha
jl
pop
push
or
cmp
ds
imul
add
push
ret
add
adc
clc
(bad)
pop
add
xchg
(bad)
out
rcr
dec
add
dec
stos
add
add
clc
pop
add
fdiv
test
cs
cmp
adc
cmp
pop
add
push
add
mov
leave
mov
mov
add
add
into
push
data16
mov
test
sti
sbb
sub
inc
out
xchg
xlat
xchg
out
fdivr
add
popa
ins
mov
sub
mov
mov
cmp
and
add
push
jmp
dec
enter
add
add
inc
test
sti
out
dec
popf
das
or
push
int3
add
hlt
imul
stc
(bad)
cld
add
add
cmp
jg
add
loopne
push
mov
add
outs
xchg
mov
jg
outs
out
xchg
inc
sub
add
adc
mov
sbb
add
pop
inc
xor
in
sbb
add
mov
loope
xchg
adc
add
arpl
fsubr
call
jo
ret
add
add
jp
add
ss
std
xor
dec
aas
fidivr
fcmovnu
sbb
xchg
push
add
push
test
sbb
mov
sar
dec
add
jae
or
add
scas
jg
xor
sub
std
call
mov
aas
dec
add
adc
xchg
sbb
add
bound
cld
sbb
xchg
fiadd
cmp
mov
cdq
bound
mov
dec
pop
(bad)
in
rcr
mov
dec
sbb
or
sbb
add
std
mov
mov
mov
xchg
in
add
cmp
ds
shl
cmp
sbb
add
add
retf
mov
movs
xchg
pop
ins
add
pop
add
mov
xor
scas
leave
dec
int3
add
jp
jo
fadd
add
jb
inc
inc
mov
imul
add
shl
xor
cmp
inc
sub
or
inc
aas
add
out
push
jl
sahf
add
inc
mov
mov
(bad)
js
(bad)
cwde
stos
in
add
sbb
adc
xor
sub
add
outs
dec
cdq
push
jno
or
dec
add
scas
sbb
out
xor
push
mov
mov
add
and
pop
add
cmp
enter
in
mov
mov
ss
add
add
fwait
setae
or
mov
repz
add
add
xor
add
add
dec
fiadd
dec
imul
push
aad
mov
mov
mov
add
mov
not
inc
iret
jnp
movs
xor
imul
xor
add
imul
xchg
xchg
add
push
cmc
aas
add
sub
xor
add
pop
xor
or
xchg
mov
inc
or
shl
cld
sbb
mov
call
pop
mov
lods
cmp
xchg
add
inc
inc
add
iret
dec
sub
outs
out
les
out
int3
dec
add
add
add
fld
jns
xchg
(bad)
cmp
adc
cli
(bad)
cmp
inc
push
or
mov
mov
pop
ins
outs
sbb
out
mov
and
loope
add
adc
add
imul
retf
add
add
add
mov
sub
cmp
call
out
add
add
add
jo
outs
pop
movs
test
outs
jo
test
xchg
and
fild
inc
add
mov
neg
cmp
(bad)
add
stos
pop
arpl
pop
push
nop
and
add
int
sbb
lock
ins
(bad)
xor
cmp
ja
sub
ret
aad
push
outs
jne
cmps
fnstcw
dec
lods
or
mov
je
add
add
sbb
mov
arpl
push
sar
add
cmp
push
cmp
repnz
(bad)
push
jecxz
jmp
jno
add
stos
aaa
mul
add
test
inc
add
push
jmp
push
mov
mov
div
ja
and
dec
and
add
add
cmp
add
mov
test
add
test
jmp
popa
pop
call
add
pop
pop
pop
arpl
lods
fnstcw
or
mov
add
mov
add
pop
jae
stos
add
aas
stos
rol
ins
and
and
in
mov
cwde
jg
addr16
pop
jno
sbb
add
push
adc
xchg
add
add
hlt
push
xor
cli
cmp
daa
cmp
add
ins
adc
xor
jle
adc
add
popa
fmul
scas
add
add
mov
sbb
outs
pop
pop
in
xor
fidiv
out
arpl
adc
add
les
inc
mov
add
loope
je
push
adc
and
sbb
ficomp
mov
add
pop
neg
cmp
test
ins
or
jecxz
xor
popa
mov
mov
in
jge
fdivp
rcl
out
int3
xor
pushf
(bad)
add
add
fs
push
pop
(bad)
cli
jns
inc
nop
out
or
xchg
push
xchg
add
add
adc
push
mov
and
cmp
adc
jno
add
in
loopne
mov
mov
mov
xor
xchg
add
ror
lock
add
add
mov
std
ss
sti
ja
or
sti
hlt
push
ins
ins
sub
jo
sub
rol
xchg
daa
xor
add
and
push
call
adc
scas
push
outs
mov
mov
add
add
js
outs
add
adc
nop
jmp
or
pop
jo
add
add
xor
call
movs
xor
ss
popa
aad
xchg
sbb
push
bound
movs
in
add
dec
test
pop
mov
sbb
pop
sbb
add
ds
push
mov
adc
hlt
add
ds
rcl
in
sub
add
and
add
mov
jle
xchg
jge
pop
dec
sub
mov
dec
push
mov
add
cmp
jmp
pop
pop
repnz
popa
jo
ror
int3
push
pusha
cmp
minps
mov
dec
ret
push
pop
add
movs
mov
add
adc
add
sbb
add
add
lods
loope
dec
xor
or
sub
jb
ds
shl
push
test
bound
push
sbb
hlt
jb
pop
xchg
jbe
add
cmp
push
and
arpl
test
add
inc
add
dec
rol
add
push
inc
pop
inc
cmp
dec
xchg
stos
xor
ret
sbb
sub
lock
add
enter
out
jbe
jbe
add
add
add
xor
pop
and
and
pop
cld
vmaxss
inc
pop
clc
les
inc
push
mov
cmps
inc
xchg
into
xchg
and
dec
out
sub
push
sub
add
add
add
add
add
xchg
in
jb
jp
mov
ins
fbld
(bad)
cs
movs
movs
lahf
push
je
arpl
not
aaa
xor
sbb
inc
ss
pop
shl
dec
sub
adc
add
xchg
ins
pop
jbe
(bad)
or
add
fs
jae
cmp
fs
add
add
add
mov
stc
cli
sub
mov
adc
add
je
popf
mov
or
inc
dec
mov
mov
mov
sub
jns
pusha
xchg
jg
add
sbb
sub
lahf
repz
pop
pop
sbb
rol
add
lods
div
jl
cmp
mov
dec
aaa
lahf
xor
add
hlt
pushf
ret
movntq
jmp
mov
add
xchg
adc
push
jns
aas
add
add
out
(bad)
jne
or
xor
add
xchg
add
add
cmp
pop
xchg
bound
inc
lds
fdiv
sub
mov
mov
add
imul
inc
xor
call
add
stos
mov
adc
add
les
adc
fdivr
add
rol
ins
xchg
out
mov
add
mov
inc
stc
(bad)
aaa
scas
adc
retf
fild
add
mov
xlat
arpl
or
int
push
add
dec
push
cli
pop
movs
std
xchg
dec
or
mov
add
in
cwde
xor
mov
mov
dec
add
fadd
les
add
in
out
adc
or
clc
imul
mov
jo
cmp
mov
es
add
jl
dec
add
dec
dec
addr16
push
(bad)
int3
outs
adc
cli
cmp
jg
add
add
add
push
lds
mov
ret
push
pop
imul
into
add
add
inc
les
test
dec
mov
icebp
test
add
add
inc
mov
jl
add
mov
stos
nop
add
xchg
je
sbb
jg
dec
call
in
add
dec
sbb
mov
add
dec
shl
add
add
sti
gs
add
iret
out
popa
ret
xor
(bad)
add
add
add
fdiv
dec
jl
aaa
bound
mov
movs
jmp
repnz
xchg
adc
pop
cmp
adc
pop
rcr
inc
jp
addr16
pop
in
add
add
push
mov
std
cmp
(bad)
and
add
sbb
pop
add
add
mov
packssdw
scas
or
sbb
ftst
xchg
rcl
xchg
add
sub
inc
out
sub
add
mov
add
add
jb
pusha
jg
xlat
leave
jno
add
ds
cmp
ret
add
aaa
and
lea
adc
adc
int
and
xlat
push
outs
push
fidiv
cdq
mov
in
dec
or
add
loope
jnp
iret
push
mov
ret
data16
popf
pop
dec
out
add
lock
or
int
adc
out
add
ja
in
das
mov
push
and
jp
mov
jnp
ss
or
add
dec
imul
cli
lea
inc
pop
retf
add
xchg
ret
pop
xor
add
add
sbb
test
jp
xlat
inc
ret
int3
(bad)
cmps
in
add
mov
(bad)
(bad)
popa
repnz
in
add
call
mov
imul
add
add
fwait
inc
jp
add
js
or
mov
dec
xchg
mov
fcmovb
bound
sti
sbb
ss
loop
add
or
ficom
push
lea
add
add
dec
cwde
add
jl
jmp
cli
adc
or
xchg
add
jl
imul
(bad)
jo
loope
stos
ss
pop
enter
pop
or
mov
or
das
scas
nop
in
sub
scas
cli
adc
sub
cmps
scas
add
cld
fwait
add
mov
lds
add
mov
in
push
and
pusha
or
mov
daa
std
push
adc
add
adc
mov
and
int
xchg
add
add
jmp
mov
enter
(bad)
aas
add
mov
mov
add
ret
loop
push
ds
add
cmps
or
les
push
xchg
fldl2t
shl
les
push
add
jne
aam
mov
inc
add
add
jb
add
mov
ss
add
js
test
mov
push
mov
xchg
sub
xchg
and
dec
scas
pop
add
ja
imul
test
enter
iret
mov
add
add
sub
cmp
loopne
sub
aam
xchg
add
jg
xor
pusha
sbb
or
nop
add
jno
dec
mov
imul
add
add
mov
dec
add
cmp
ins
sahf
push
adc
add
int
leave
out
mov
enter
jg
cmp
jns
jno
pushf
pop
and
pop
rol
mov
add
add
test
pop
ja
shr
cmp
cmp
add
add
push
jp
xchg
pop
lock
cmp
sahf
pop
sahf
stos
push
xor
inc
adc
mov
xor
sbb
add
add
add
inc
push
cmc
cmp
loop
(bad)
loope
mov
sub
jmp
adc
dec
mov
inc
data16
fadd
inc
xchg
scas
popf
jbe
add
xchg
xchg
in
inc
add
xor
fst
add
mov
add
out
inc
pop
jle
std
aam
add
add
push
xor
hlt
aam
in
mov
fnsave
jp
das
add
dec
ret
inc
inc
add
lods
movs
add
add
add
rcl
xor
ret
cmp
add
dec
dec
jae
add
bound
push
jmp
(bad)
pop
shl
add
out
adc
add
add
test
pop
(bad)
scas
test
stos
mov
push
scas
das
xor
cmp
cmp
jno
(bad)
add
sub
xchg
je
add
dec
ret
repnz
lahf
push
add
int
add
add
imul
clc
add
mov
pop
adc
push
ret
cmp
les
jg
sub
mov
out
retf
data16
dec
movs
cli
add
clc
mov
(bad)
mov
loopne
add
push
jmp
add
add
add
daa
int3
jns
jmp
icebp
jne
inc
call
test
popa
push
outs
(bad)
or
outs
(bad)
add
pushf
fmul
jbe
add
adc
enter
dec
stc
repz
or
inc
jg
mov
aad
(bad)
xchg
and
dec
add
xlat
mov
dec
ror
je
add
lods
push
add
retf
clc
stos
mov
add
fmul
cld
xor
pop
sbb
add
xchg
inc
xchg
cmp
fild
es
add
(bad)
(bad)
jo
(bad)
cwde
add
add
add
inc
mov
xor
adc
or
(bad)
ds
cmp
add
xchg
lods
sub
xor
add
add
adc
jl
inc
pop
jae
shr
push
imul
lds
fwait
add
add
mov
pop
shr
and
mov
or
add
add
jnp
add
aad
or
push
(bad)
cmp
dec
pushf
idiv
js
add
scas
cmp
loop
dec
jl
aas
call
inc
xchg
push
add
mov
inc
es
(bad)
sbb
cmp
dec
cdq
inc
sbb
add
mov
jecxz
push
push
add
sbb
jp
fadd
fild
xchg
std
or
inc
add
ja
(bad)
add
shl
int3
loopne
add
loopne
fcmovu
(bad)
mov
add
cld
pop
mov
loope
add
add
sub
in
pop
or
out
xor
lahf
cwde
(bad)
fpatan
ror
imul
dec
jb
add
jo
cmps
xor
xchg
dec
push
(bad)
cmp
jmp
lock
add
in
add
loop
out
add
xor
mov
push
fld
cmps
or
sub
add
push
xchg
movs
pop
adc
test
or
add
sub
pushf
jmp
add
add
mov
push
mov
je
add
add
cmps
lds
sub
aas
sub
add
sbb
add
add
xor
jg
add
add
mov
push
mov
cli
lds
and
or
in
dec
push
imul
push
jbe
inc
mov
mov
add
std
add
ret
jo
add
add
adc
dec
xor
(bad)
sub
popa
test
sub
xor
rol
out
mov
add
jae
xchg
in
test
mov
push
push
sbb
fdiv
mov
or
xchg
jne
scas
cs
add
push
dec
dec
xchg
add
push
add
cwde
jb
mov
add
pop
loopne
cld
ja
add
lods
sbb
imul
mov
add
mov
add
cld
lock
data16
bound
mov
or
push
add
mov
loopne
retf
dec
adc
mov
add
add
mov
mov
mov
jnp
or
dec
aas
pop
inc
sar
ss
add
pop
sbb
xor
outs
cmp
lahf
add
ss
add
sbb
das
mov
sub
adc
push
xor
enter
add
push
in
popf
add
add
cmc
jae
adc
push
call
inc
lods
add
cmp
mov
fadd
repz
test
xor
pop
inc
fdivr
add
pop
jbe
xchg
dec
push
dec
pushf
adc
add
add
scas
push
fist
out
(bad)
cmp
xchg
pop
cmp
jbe
pop
xchg
pop
jb
icebp
loope
xchg
add
dec
mov
add
add
add
or
pop
loopne
lods
sbb
and
shr
daa
sub
add
xor
sbb
mov
retf
das
and
add
fwait
(bad)
(bad)
in
retf
dec
xor
pushf
fcomip
pop
gs
sub
add
aaa
fisub
xchg
add
mov
dec
ins
add
leave
ins
add
ja
add
sub
js
mov
xchg
adc
push
loop
add
add
push
push
ficomp
or
outs
into
std
shr
neg
cmp
fnop
add
xor
pop
mov
inc
mov
(bad)
int
aam
adc
add
cdq
jmp
xchg
out
aas
shl
add
cld
mov
add
add
push
in
inc
and
popf
sbb
mov
push
mov
xor
xor
repz
jecxz
fmul
mov
add
pop
xchg
or
(bad)
shl
or
mov
aaa
mov
jnp
add
retf
jo
mov
mul
lock
mov
or
mov
xor
add
cld
(bad)
in
add
inc
out
or
call
push
xor
in
sub
mov
cmp
add
add
cli
sub
add
push
cmp
jl
in
add
add
add
mov
in
stos
sub
sahf
popa
stc
fwait
mov
js
aas
add
and
dec
xchg
cmc
add
add
add
movs
mov
fcmove
lods
jle
sbb
mov
test
cld
jmp
xor
jae
sahf
rol
xchg
sub
add
adc
jle
mov
lods
les
add
icebp
push
mov
outs
lods
or
sbb
in
out
xor
es
add
stos
inc
into
jbe
in
push
loopne
add
test
add
ds
jg
call
push
add
add
xor
and
mov
lds
mov
push
jbe
jg
sub
ret
sbb
pushf
in
adc
inc
ss
icebp
and
add
ins
cs
(bad)
or
add
rcl
jns
adc
popa
inc
adc
inc
pushf
repnz
shl
rcr
add
add
xchg
(bad)
movs
cmp
gs
jns
sbb
add
sbb
fs
repz
inc
das
push
add
push
inc
imul
rcl
cmps
dec
pop
push
or
inc
xor
add
clc
mov
or
xchg
ins
jle
jae
(bad)
popa
sbb
and
mov
xor
add
sub
or
add
out
jl
scas
jmp
xchg
adc
loopne
lods
lea
add
dec
rol
fsubrp
sbb
add
aam
test
outs
xchg
fucomi
(bad)
sbb
mov
stos
pop
shr
rol
and
aad
call
popa
jo
add
add
cmp
call
es
fiadd
or
(bad)
dec
ja
dec
int3
pop
mov
pop
shl
or
rcl
jo
cdq
add
retf
mov
push
lock
mov
sub
(bad)
dec
add
ins
shl
add
add
in
sahf
inc
mov
push
or
sbb
xchg
xrelease
je
sub
cmc
add
cli
mov
cmps
add
jbe
mov
adc
sbb
ja
fnstenv
jo
xchg
jbe
(bad)
hlt
stos
arpl
loope
aam
add
pop
mov
dec
mov
add
add
inc
mov
cmp
add
cmc
and
inc
mov
adc
(bad)
cmp
add
push
mov
mov
sahf
add
outs
out
pop
or
pop
mov
add
mov
enter
lahf
gs
popa
and
dec
enter
add
add
mov
loope
xchg
test
es
inc
dec
add
aaa
(bad)
aad
mov
add
dec
lea
bound
jle
push
lods
mov
add
stos
ja
ins
repnz
inc
push
sahf
retf
mov
add
rol
push
and
jp
pushf
add
aas
loopne
pop
cmps
retf
add
add
(bad)
les
jmp
add
lods
add
iret
add
add
out
xchg
inc
sub
rol
lds
add
push
jl
add
call
mov
add
sbb
hlt
movs
pop
xchg
stc
and
lods
nop
clc
sub
jo
cmp
and
jno
add
add
jp
xor
push
(bad)
cmps
dec
add
dec
ss
test
sbb
aad
add
add
(bad)
loope
cwde
mov
cwde
pop
jb
push
fcom
and
mov
call
test
adc
pop
(bad)
jl
push
loop
dec
sub
mov
retf
cmp
loope
aas
push
push
mov
repz
out
add
ja
pop
push
outs
add
nop
adc
fdiv
sub
repz
shr
icebp
or
bound
adc
movs
add
add
add
or
and
mov
add
jne
not
jo
les
dec
cs
add
add
lock
xor
fcomi
stos
push
out
das
add
dec
xchg
cdq
mov
and
push
jbe
pop
xchg
add
jge
retf
aad
sub
sub
xor
lods
sub
and
add
add
je
xor
ja
push
pop
jg
xor
add
and
movs
add
add
push
outs
(bad)
repz
inc
loop
cmp
mov
pushf
mov
lahf
les
mov
xor
lds
pop
iret
add
add
jno
ror
loop
out
adc
xor
sub
mov
mov
fstp
mov
ss
call
pop
sahf
xchg
jp
lds
pop
jmp
in
and
inc
add
gs
fimul
scas
int3
push
xor
outs
cmp
outs
scas
add
aas
jnp
add
add
or
xor
in
jl
jo
cmp
int
pop
stos
or
push
rol
pushf
adc
add
add
jg
cld
mov
jmp
pop
test
mov
stc
push
jae
pop
add
push
jl
add
add
movs
pop
into
aaa
dec
sbb
dec
add
or
retf
add
jnp
stos
jge
stos
or
jnp
add
add
sub
inc
inc
push
(bad)
or
(bad)
dec
stos
sti
add
xchg
mov
add
or
and
mov
add
pusha
sub
idiv
jb
repnz
sub
mov
leave
add
ret
jle
fst
hlt
ds
dec
js
in
adc
retf
cmp
aad
call
add
hlt
pop
test
int3
rol
sbb
aam
mov
add
jmp
sti
gs
xchg
es
jp
add
mov
jo
mov
jg
int3
push
and
add
jbe
add
mov
(bad)
aam
icebp
sbb
jecxz
and
or
push
jle
mov
dec
add
sub
add
inc
test
add
add
and
add
cdq
xchg
dec
dec
rol
sub
add
jo
pop
sbb
or
cli
add
add
lds
les
adc
xchg
push
mov
add
add
xor
(bad)
fcomp
add
stos
add
or
push
lock
add
add
rol
arpl
add
xor
or
xor
loopne
add
add
add
inc
add
mov
mov
jae
in
and
or
add
imul
and
add
xor
xor
jl
sub
sbb
adc
xlat
into
push
add
push
mov
xor
add
cmp
add
ficomp
add
pop
(bad)
repnz
ds
ror
push
add
add
sub
pop
jl
or
sbb
sbb
ret
jnp
or
icebp
mov
pop
jl
mov
add
arpl
mov
sub
add
ficomp
fiadd
popf
in
and
daa
xor
out
pop
sub
add
add
into
pop
jo
stc
(bad)
push
std
sub
and
xor
out
inc
loope
cmps
push
sbb
fnsave
shl
sub
bnd
push
rcl
loop
sub
jp
add
ret
add
mov
add
scas
add
and
sahf
test
sub
add
xchg
std
cli
cmps
ficomp
js
lock
arpl
sub
not
xchg
movs
jp
add
sub
add
test
std
stos
jmp
dec
lock
inc
add
sub
shl
xor
dec
out
inc
in
fs
push
adc
add
sahf
aas
(bad)
pop
test
add
and
mov
jbe
add
cld
xchg
dec
pop
cmp
mov
ss
retf
pusha
add
add
les
retf
and
in
sbb
out
add
clc
test
aaa
movs
out
add
and
ret
xchg
lahf
ret
movs
add
mul
loop
add
add
fstp
daa
pop
cmp
jbe
xchg
sub
dec
add
add
adc
push
nop
pop
hlt
inc
loopne
add
aas
jmp
mul
retf
in
cmp
add
sahf
jge
mov
lahf
aad
test
arpl
cld
scas
data16
add
mov
popf
fcomp
xor
out
out
add
or
add
add
add
jne
sub
pop
adc
mov
pop
mov
not
cli
sub
sub
push
push
fnstsw
cld
add
add
sbb
sbb
(bad)
jecxz
ror
add
cmp
add
pop
add
sub
pushf
mov
ret
mov
outs
add
(bad)
jle
add
add
add
cmp
mov
add
add
or
adc
add
jmp
add
mov
out
mov
adc
call
mov
add
sbb
fcom
ds
xlat
xor
push
mov
ds
pop
fs
jbe
fsub
add
add
icebp
hlt
imul
xchg
imul
or
clc
add
jne
pushf
add
or
add
xor
add
mov
dec
adc
test
mov
add
add
stc
fidiv
xchg
ds
or
cmp
add
loope
add
mov
rcl
add
mov
or
dec
jne
ja
pop
sbb
mov
add
add
sub
jle
inc
xchg
pop
cld
sub
(bad)
aam
or
cli
mov
add
inc
fst
jo
imul
outs
repz
mov
mov
push
or
add
sbb
or
idiv
push
mov
add
add
jb
inc
add
mov
push
leave
push
int3
sub
sbb
cmps
add
sub
add
add
rol
ficomp
fsubr
adc
cmps
lea
xchg
xor
cdq
pop
mov
out
add
bound
add
stos
add
add
outs
jl
push
mov
mov
call
cmps
fcomp
add
bound
retf
add
add
push
mov
(bad)
lock
dec
push
jle
and
add
add
inc
pop
mov
mov
jns
mov
jle
cmp
mov
bound
hlt
cwde
jecxz
ins
sar
sub
add
test
sub
mov
add
rcr
cmp
add
push
mov
dec
jle
add
add
ins
add
add
xchg
add
add
imul
xchg
xor
lock
sub
xor
add
add
ret
je
clc
stos
out
xchg
out
lahf
ret
jb
(bad)
cld
inc
(bad)
iret
push
jecxz
xchg
pop
add
ret
add
movs
fild
ds
sbb
add
mov
div
jne
or
and
add
add
ret
mov
add
dec
jae
or
xor
cmp
cmp
add
je
lea
jp
add
xlat
ret
add
add
xor
cmp
mov
add
xor
or
sahf
mov
or
sti
fadd
sbb
ror
cmps
inc
and
pop
xor
add
mov
sbb
loopne
nop
popa
mov
cmps
icebp
add
add
(bad)
aam
push
xchg
inc
mov
fmul
div
add
add
add
imul
inc
retf
sub
xor
test
ss
ss
adc
jge
jbe
out
add
jnp
rol
or
dec
lds
or
mov
pusha
add
add
add
stos
mov
shr
popa
xor
jnp
mov
and
dec
jae
cmp
outs
stos
sub
int
or
push
add
or
loop
cmp
mov
aas
xor
jns
add
inc
lds
push
add
or
and
xchg
cmp
popf
add
push
add
in
push
outs
or
dec
icebp
add
cs
add
sub
fsubr
cmp
dec
mov
add
test
add
stos
inc
cwde
loope
add
in
push
sbb
imul
pop
inc
mov
add
retf
stos
jmp
add
dec
shr
mov
fs
add
fnstsw
xor
add
jb
outs
add
pushf
add
push
sbb
xchg
mov
pop
add
out
jmp
sub
push
xor
adc
pop
test
inc
inc
add
sbb
adc
mov
jno
std
arpl
loop
add
or
in
add
ins
(bad)
enter
call
xchg
in
nop
add
inc
jge
add
add
add
dec
int3
add
mov
loopne
retf
(bad)
xor
cli
sbb
jbe
mov
add
add
shl
shr
jl
pop
in
icebp
mov
xchg
inc
sbb
add
xchg
mov
add
cwde
mov
int
dec
outs
jecxz
add
add
inc
out
and
lods
jge
jnp
sub
add
mov
out
cmp
(bad)
cmp
and
fucomip
lds
add
add
mov
mov
cmps
add
add
xchg
aad
xchg
fdiv
inc
mov
add
add
fcmovnb
rol
jp
or
mov
and
mov
dec
std
add
add
sar
jmp
into
pop
sub
es
ins
jl
jle
inc
ss
rcl
fisub
rol
mov
add
add
not
fld
sub
push
es
ret
add
es
add
and
rol
add
mov
pop
into
push
adc
loopne
movs
push
mov
or
add
add
fdiv
inc
xor
sbb
push
sub
stc
xor
push
and
fdiv
mov
jle
xchg
aad
or
je
mov
outs
cmp
cmp
add
add
jge
push
push
adc
ins
movs
inc
lods
push
dec
xchg
fld
jge
in
imul
sub
add
sub
add
and
lods
adc
push
push
ins
outs
stos
pushf
mov
xor
iret
add
add
mov
pusha
shl
pop
dec
leave
cmps
jle
jp
cmp
ret
(bad)
pop
jnp
ret
or
call
add
dec
add
or
mov
add
mov
add
xchg
cdq
push
call
add
mov
fiadd
jl
inc
xor
je
add
pushf
mov
push
bound
mov
add
aas
fwait
xor
add
cmp
(bad)
das
enter
dec
cmp
dec
add
data16
bound
fadd
add
stc
pop
and
pop
adc
push
sub
xchg
das
repz
mov
pusha
in
mov
retf
loope
data16
add
outs
add
cmp
xor
mov
je
mov
cmp
fld
ret
sub
add
xchg
sub
add
add
add
(bad)
jmp
shl
pusha
push
or
mov
add
add
mov
add
add
add
jp
xor
movs
cli
jno
or
pop
sbb
inc
es
inc
imul
mov
mov
push
mov
pop
ins
ret
push
(bad)
repnz
out
jl
imul
(bad)
bound
js
addr16
pop
push
add
imul
neg
xor
pop
add
lock
ins
cmp
xchg
add
add
adc
sub
fild
jmp
add
add
cmp
add
or
loop
cmp
xor
add
push
xor
aam
ds
fs
mov
(bad)
mov
dec
ss
daa
jbe
sbb
mov
dec
mov
jl
out
jne
add
fs
sbb
push
adc
xchg
sbb
add
pop
(bad)
mov
test
enter
add
add
sub
sbb
sahf
sub
push
fadd
push
xlat
js
jge
add
jae
inc
jbe
aaa
and
xchg
pop
xchg
or
imul
add
add
and
imul
sub
sbb
ret
retf
inc
sub
jb
mov
dec
mov
(bad)
cmp
add
add
call
hlt
or
push
pop
mov
rcl
cmps
ins
mov
cdq
xor
iret
jge
add
add
jle
outs
push
lahf
in
cmp
out
jb
add
add
mov
dec
int3
jne
pop
push
test
or
mov
add
add
push
dec
sbb
and
cmp
mov
mov
std
inc
cwde
add
and
scas
adc
stos
add
add
fstp
sub
inc
add
inc
mov
add
pop
add
add
(bad)
mov
cld
mov
ja
ds
cwde
les
lahf
cmp
sbb
cs
jne
add
dec
scas
(bad)
jo
add
or
mov
xchg
outs
cmp
add
or
movs
inc
push
out
clc
add
push
sbb
retf
pushfw
add
add
add
add
add
mov
and
repnz
adc
aaa
mov
sub
cli
dec
xchg
adc
add
sub
add
add
jmp
dec
lahf
sbb
rol
add
aam
add
dec
frstor
add
jmp
jecxz
jns
lods
sbb
cwde
repz
add
mov
push
cs
add
add
add
inc
retf
loope
jae
je
pop
dec
add
inc
or
mov
ficomp
xor
enter
mov
aad
popf
inc
mov
sub
loope
push
push
mov
add
rol
add
mov
mov
add
add
add
ret
pushf
jo
push
xchg
(bad)
test
jecxz
xchg
pop
or
add
add
sahf
sbb
dec
in
into
cli
xchg
cmp
mov
mov
adc
fsubr
inc
or
jns
jle
jo
and
add
mov
add
add
cmp
or
mov
add
add
cmp
sub
fbstp
dec
(bad)
arpl
add
add
and
mov
cmp
add
mov
push
pop
xor
sub
dec
and
movs
sub
xor
jg
add
sbb
lds
jmp
add
not
sub
mov
or
sub
ds
call
lahf
cmc
mov
loop
les
add
rol
cmp
les
push
add
mov
push
adc
sahf
loop
dec
push
movs
push
cs
jbe
add
inc
nop
test
push
cmp
ds
sub
icebp
or
add
pop
lds
test
mov
add
jmp
sub
mov
mov
rcl
pop
push
cmp
repnz
add
add
cmp
(bad)
out
iret
iret
xor
add
stos
and
in
rcr
add
sahf
add
xchg
mov
push
add
add
add
sub
scas
sbb
push
pop
aad
scas
iret
sbb
sbb
add
aam
add
iret
mov
repz
add
add
int
cs
add
adc
jecxz
add
shl
daa
add
sub
sub
call
mov
vmwrite
mov
call
cli
call
xchg
add
push
add
add
add
add
jne
js
(bad)
sub
sbb
jecxz
add
lods
mov
jbe
sub
arpl
sub
arpl
mov
icebp
idiv
inc
adc
push
add
add
add
add
aad
rol
pop
stos
inc
xchg
and
cmp
add
cli
xor
sub
pop
push
and
dec
xchg
in
shl
sbb
add
add
je
outs
mov
xchg
addr16
dec
int
enter
cdq
and
popa
mov
scas
mov
pop
mov
inc
addr16
loope
stos
(bad)
pop
(bad)
push
movs
out
xor
dec
sub
and
cmps
mov
add
add
scas
mov
arpl
jb
add
add
add
add
xchg
xchg
push
cmps
pop
xor
jmp
xor
mov
lds
mov
mov
add
cmps
jb
push
add
jle
jnp
add
add
xchg
xor
fcompp
mov
adc
je
dec
sub
pop
add
shr
push
ds
test
inc
add
pop
push
scas
dec
jge
bound
add
loopne
aaa
cli
add
mov
push
or
mov
imul
sub
call
and
in
sub
and
add
adc
add
push
mul
(bad)
and
mov
std
mov
cdq
xor
nop
clc
jmp
std
shr
ja
enter
push
stc
call
add
ins
jge
add
push
fadd
add
imul
not
(bad)
push
ss
jl
add
add
loope
loop
sbb
ds
imul
pop
addr16
loop
arpl
xor
cmp
jp
mov
add
jmp
push
cli
add
add
ins
test
add
add
mov
sbb
dec
into
push
retf
add
add
rol
scas
push
adc
scas
or
out
jecxz
inc
icebp
(bad)
jbe
mov
push
add
add
in
mov
jne
cdq
getsec
call
stc
ds
sbb
add
mov
not
xchg
or
jb
add
sub
mov
xor
push
popa
fisttp
bound
add
ja
in
lock
add
int3
cld
mov
pop
arpl
add
std
call
aaa
cmp
in
mov
loopne
mov
inc
pushf
das
je
mov
add
out
xor
enter
aad
adc
jp
add
outs
sti
pop
pop
add
add
add
cmp
mov
and
fadd
adc
or
mov
adc
push
sbb
push
test
popa
repnz
fild
out
stos
icebp
add
retf
jp
adc
push
xchg
test
fcom
pop
int3
movs
add
call
add
add
fisubr
jb
pushf
sti
fs
add
pop
push
jns
sub
mov
push
fld
cmp
lahf
adc
mov
jbe
adc
xor
imul
add
add
movs
js
icebp
cmps
outs
popa
ins
mov
and
add
or
add
dec
in
or
iret
jge
call
daa
and
push
dec
inc
iret
add
add
cmp
stos
or
xor
add
or
add
inc
aad
add
(bad)
test
adc
(bad)
jl
or
mov
hlt
stc
mov
sbb
ins
test
fadd
add
add
pusha
and
ins
sub
jle
cmps
mov
xchg
(bad)
mov
cs
add
das
lahf
outs
mov
jmp
(bad)
sub
cmps
adc
in
mov
mov
push
fstp
rol
xor
xchg
xchg
mov
push
add
jne
mov
inc
add
and
test
mov
add
mov
jmp
out
(bad)
je
js
add
sbb
mov
dec
retf
add
pop
mov
add
icebp
mov
cmp
xor
test
and
adc
test
add
mov
call
mov
push
sldt
add
add
cmp
xchg
xchg
inc
paddq
test
dec
gs
outs
xor
or
inc
pop
mov
sub
sbb
add
ds
add
or
sbb
outs
add
aam
clc
gs
push
(bad)
mov
bound
add
js
(bad)
idiv
add
add
pop
shl
xor
sbb
mov
pushf
inc
add
and
vpmulhw
pop
push
xchg
es
in
data16
add
add
cmc
cs
pop
xor
xchg
xchg
push
dec
add
add
out
movs
add
pop
ds
xchg
pop
xchg
xchg
add
adc
mov
pop
add
mov
push
add
aam
sbb
add
add
add
fcomp
push
xchg
cdq
jmp
(bad)
push
in
push
xchg
or
sbb
add
das
jno
stc
lock
lods
lods
xchg
add
jg
xor
xlat
pushw
nop
cmp
loope
push
sbb
add
pop
outs
rcr
popa
popa
jno
das
sahf
data16
adc
pop
bound
and
add
jl
lock
(bad)
into
add
add
sahf
repz
push
xchg
clc
pop
inc
lahf
shl
add
add
(bad)
call
or
repz
lods
add
data16
add
push
sub
bndstx
out
rcr
int3
(bad)
out
inc
inc
add
lahf
outs
and
add
inc
jmp
add
aam
add
out
add
add
mov
inc
push
(bad)
xor
dec
fldcw
or
add
or
sbb
mov
frstor
add
push
aam
pop
xchg
stos
mov
xor
add
bound
je
cmp
add
mov
sub
add
mov
cwde
add
add
jg
ja
jmp
outs
add
mov
pusha
add
call
xchg
movs
pop
fcom
or
cmps
cmp
(bad)
out
cli
mov
(bad)
mov
aad
xchg
lock
leave
lods
add
add
add
sbb
xchg
fiadd
pop
cld
cwde
add
ret
dec
mov
js
lahf
inc
adc
outs
adc
add
add
mov
repz
mov
jae
cmp
cld
and
xor
add
dec
fimul
pop
loopne
add
pop
add
push
in
adc
and
sbb
(bad)
repz
clc
add
mov
add
add
rcr
and
int
push
mov
push
jae
add
lods
push
js
xor
clc
inc
ds
add
ret
xor
inc
sti
mov
in
leave
sar
inc
and
scas
inc
pop
pop
mov
jmp
add
into
jbe
addr16
add
ds
pop
and
je
mov
adc
push
sbb
jge
pop
les
call
cmp
and
ins
not
mov
fidiv
adc
cmp
push
lods
mov
retf
dec
mov
lods
ins
xor
test
or
xchg
daa
inc
pop
xor
add
imul
mov
pop
pushf
daa
int3
ins
pop
jno
mov
cld
and
dec
in
push
div
add
shl
xor
shr
pop
pop
adc
cld
rol
add
xchg
in
scas
lds
jg
adc
add
add
add
add
pushf
push
retf
mov
ds
out
mov
jnp
scas
scas
sub
push
mov
rol
push
pop
sbb
pop
shl
loopne
inc
add
retf
sbb
sbb
add
aas
loop
pop
lds
scas
mov
enter
in
xor
movs
add
mov
sbb
mov
mov
into
jmp
inc
xor
push
pop
add
mov
dec
scas
mov
add
sbb
test
push
(bad)
jmp
xchg
xchg
add
pop
ins
xchg
fsub
dec
xor
mov
pop
ret
add
dec
pop
push
int
sahf
push
addr16
inc
add
xchg
lahf
add
das
add
movs
cmp
xor
jno
add
out
out
aad
pop
inc
outs
outs
push
not
ror
fcomip
xchg
jl
dec
pop
jp
fs
add
repz
xor
int
mov
imul
cmp
add
mov
xchg
sbb
aaa
add
add
add
fisttp
fld
jmp
ror
in
pop
fsub
lods
dec
xor
in
pop
mov
and
enter
adc
mov
mov
adc
xor
call
add
xchg
jmp
mov
mov
(bad)
push
test
outs
lahf
jnp
outs
sbb
push
lock
aas
push
add
cmp
push
add
xchg
inc
icebp
(bad)
shl
enter
add
dec
add
add
mov
in
repz
xchg
jp
mov
(bad)
cdq
rcr
jbe
add
aad
jle
add
add
sub
sub
test
mov
sbb
add
in
push
cmps
mov
inc
xchg
push
cli
pop
sub
add
mov
xchg
jno
pop
push
add
add
in
xchg
popf
mov
ds
mov
stos
loope
or
icebp
sbb
push
or
adc
add
mov
cmp
add
add
test
sti
and
inc
pusha
js
push
out
iret
sbb
lods
xchg
inc
das
shl
fdivr
clc
mov
add
mov
movs
in
imul
mov
add
add
add
fadd
mov
or
mov
push
aad
and
push
jg
cmps
lods
mov
mov
sti
ss
stos
in
add
add
mov
adc
iret
mov
in
fidiv
mov
add
pushf
dec
adc
add
add
pop
sbb
pop
push
xor
cmp
lods
cld
ficomp
sti
jb
add
add
sbb
mov
add
sti
mov
movs
aaa
add
arpl
add
push
int
dec
daa
jne
fldl2e
push
jmp
jb
scas
adc
dec
add
pop
and
jae
inc
mov
mov
add
push
repz
stc
bound
mov
adc
rol
sbb
aaa
icebp
inc
mov
add
jne
lahf
int3
mov
sbb
dec
add
or
add
int3
dec
stos
xchg
and
jmp
or
repz
dec
bound
add
retf
out
mov
fcomp
pop
inc
loopne
(bad)
jae
pusha
addr16
add
es
or
ja
xchg
lock
hlt
test
add
inc
cmp
imul
ds
ss
and
leave
data16
es
xchg
xchg
shl
jne
push
lods
jmp
add
bound
push
cmp
jne
(bad)
ret
out
add
pop
add
or
pusha
(bad)
jp
push
add
in
shl
pop
int
sbb
lods
fadd
ins
lods
jbe
add
pop
xor
dec
dec
rcr
add
enter
jae
imul
push
movs
or
stc
add
add
cli
mov
not
dec
mov
test
retf
dec
cmp
mov
add
xor
cmp
push
add
mul
add
xchg
dec
rcl
adc
push
fild
lds
and
fst
push
add
add
lds
cmp
jg
ficom
pop
rol
add
push
xchg
pop
in
sub
pushf
in
mov
hlt
ins
pop
out
jl
cwde
sub
leave
sub
sbb
push
add
sub
and
mov
jbe
add
jmp
cs
(bad)
jns
xor
add
add
cmp
sub
mov
rol
scas
lods
pop
scas
or
push
repz
add
push
ins
pop
add
sbb
add
add
add
(bad)
(bad)
push
jg
data16
dec
cmp
sbb
add
retf
(bad)
fsubp
push
add
add
repnz
mov
xchg
sar
mov
pop
mov
mov
add
shl
add
add
sub
mov
jne
fisub
cld
add
retf
dec
add
add
jb
add
jmp
and
pusha
call
jmp
sar
cmps
mov
cld
mov
lods
xchg
inc
sbb
xadd
cmp
add
add
add
pop
xor
(bad)
dec
push
and
sub
add
and
int3
sbb
retf
sub
bound
push
pusha
add
mov
mov
rol
(bad)
cmp
xchg
test
push
cli
ins
das
fs
test
inc
xor
lds
mov
add
or
xor
mov
stos
(bad)
jmp
(bad)
xchg
in
xchg
test
add
dec
xchg
adc
inc
mov
add
add
out
xchg
fs
pop
mov
pusha
outs
dec
leave
out
add
mov
mov
int
dec
adc
clc
popa
sbb
push
add
inc
test
popa
div
(bad)
call
jb
xchg
bound
div
fs
cli
add
test
fwait
dec
fs
adc
add
das
retf
mov
sub
or
lods
cmp
add
add
out
cmp
std
adc
je
mov
ret
add
xchg
jns
scas
sub
mov
jns
pop
pop
ret
mov
add
inc
cs
int3
lds
pop
jbe
push
add
retf
lds
inc
sub
in
in
std
add
or
sbb
xchg
repz
aaa
add
fsub
sub
or
dec
add
add
jnp
je
lods
call
mov
add
add
mov
out
add
pop
push
pop
shl
mov
xchg
add
in
hlt
adc
movs
jns
(bad)
and
inc
out
add
dec
ja
add
add
xchg
loopne
adc
cmp
mov
push
mov
movs
iret
fadd
mov
sldt
outs
addr16
dec
mov
in
movs
movs
or
nop
add
add
cmp
movs
add
sub
and
je
add
jp
cmp
hlt
out
fwait
dec
fldcw
xor
add
call
outs
stos
int3
movs
cmp
add
adc
pusha
push
retf
sub
add
and
xor
fwait
mov
inc
popa
xchg
enter
add
xchg
ret
adc
sbb
mov
das
jae
mov
xlat
add
add
sbb
mov
fucom
push
mov
and
stc
pop
scas
adc
ret
add
and
fsub
mov
jge
cmp
pop
mov
add
lahf
rcl
loop
(bad)
nop
and
add
in
lods
mov
add
rol
sub
mov
cdq
mov
add
(bad)
cmp
dec
xor
enter
repz
movs
add
pusha
add
add
sbb
pop
outs
push
ins
in
add
add
add
push
arpl
add
cmc
in
out
ja
imul
es
mov
mov
and
push
stos
adc
add
add
mov
repnz
push
int3
jl
push
pop
add
push
adc
add
lahf
pop
inc
sahf
ret
in
cmp
mov
mov
sub
sbb
prefetcht0
add
xchg
lods
sahf
cmp
outs
in
gs
adc
adc
xor
shl
(bad)
out
inc
xchg
add
fdivr
add
push
push
ror
inc
out
inc
add
adc
test
fiadd
adc
mov
add
and
add
in
add
or
fldcw
jno
or
es
mov
add
jle
ror
call
loopne
add
adc
out
xchg
push
pop
sub
fistp
adc
rcl
fdiv
retf
add
xchg
ret
sbb
cmp
sub
and
mov
add
gs
lds
adc
or
or
add
movs
cwde
xchg
(bad)
push
jl
add
sub
inc
ins
or
mov
or
repz
cmp
inc
add
add
inc
pop
retf
xchg
and
mov
xor
out
add
push
dec
pop
mov
outs
mov
lods
data16
or
add
add
dec
jns
xlat
dec
jge
mov
xchg
dec
int
dec
pop
inc
push
mov
add
xor
mov
and
loope
out
add
and
push
fmul
cli
sub
lods
cdq
fiadd
or
inc
aas
add
out
retf
add
add
nop
xor
and
xor
retf
xchg
inc
sub
add
dec
bound
clc
retf
addr16
retf
rcl
out
xor
imul
adc
xor
movs
call
rol
add
add
adc
stos
hlt
push
jecxz
mov
call
iret
jmp
add
fucom
xchg
mov
jnp
in
xor
add
add
add
add
pop
cmp
jno
cmp
jg
adc
mulps
loop
cwde
push
pop
dec
xchg
mov
dec
xchg
jp
movs
mov
jne
dec
push
jmp
mov
fxch
xchg
adc
xor
add
inc
sti
mov
test
push
cmp
add
sub
adc
popf
sub
pop
jg
cmp
or
add
mov
mov
call
sub
ror
mov
mov
push
test
(bad)
lods
jl
add
mov
stos
dec
adc
dec
shr
add
and
push
mov
iret
xadd
xor
jg
bound
cmps
pop
sub
mov
or
add
leave
push
pop
cmp
(bad)
pop
jl
mov
jne
scas
add
add
adc
dec
xor
push
add
add
add
lock
adc
pop
mov
sub
nop
push
adc
(bad)
hlt
ins
out
push
push
add
sbb
(bad)
or
mov
add
xchg
mov
bound
xchg
add
lods
pop
cwde
std
repnz
sub
mov
fld
add
add
int
xchg
aad
cmp
ret
mov
lods
out
mov
movs
pslld
cwde
fwait
add
mov
sbb
fwait
cwde
mov
push
mov
push
gs
add
add
jmp
fsub
inc
xor
push
cmp
add
or
jle
mov
mov
mov
inc
pusha
add
mov
xchg
xchg
fcom
add
sub
add
cli
fild
aas
sub
bound
inc
pop
jnp
repnz
add
ret
add
lds
aam
sub
add
add
jbe
out
mov
push
add
movs
add
mov
sar
mov
pop
icebp
dec
mov
add
lods
stos
inc
fs
iret
mov
ret
les
movs
cld
cmp
retf
add
je
mov
add
sub
(bad)
push
pop
pop
cmp
stos
add
test
retf
dec
(bad)
lea
mov
bound
mov
add
add
mov
jecxz
aaa
retf
mov
mov
or
jecxz
add
pusha
or
(bad)
pop
xchg
stos
sub
jmp
dec
mov
add
add
(bad)
ja
and
mov
sbb
pop
into
mov
mov
mov
pop
add
jbe
cmps
out
xchg
add
je
dec
into
add
imul
scas
test
xchg
and
sbb
imul
mov
sub
and
add
and
popa
sub
xchg
push
lds
cmp
add
push
imul
adc
stos
test
call
inc
fsub
clc
push
sti
mov
mov
push
and
adc
add
pop
cmp
add
xchg
out
call
fwait
out
mov
and
add
in
add
adc
pop
cmp
dec
and
inc
ins
inc
pop
cmps
pop
jg
mov
out
mov
fadd
add
add
add
inc
add
push
dec
std
fdivp
mov
mov
sub
jp
add
xchg
pop
(bad)
jge
add
inc
call
leave
dec
add
jle
stc
sbb
mov
add
fs
cmp
add
push
cmc
xchg
adc
add
add
add
mov
sbb
lea
test
mov
scas
inc
dec
add
or
iret
jl
jg
xor
outs
add
add
add
sbb
shl
inc
cwde
outs
adc
pop
outs
mov
cmp
addr16
pop
icebp
repz
add
je
add
leave
scas
mov
dec
jle
inc
fnstsw
mov
test
in
fcomip
add
popa
outs
add
add
xor
sub
jns
or
sbb
inc
pop
cmp
add
cdq
jo
out
mov
or
add
hlt
add
add
add
or
mov
dec
mov
inc
jp
call
mov
push
cmp
in
push
in
leave
test
test
outs
jno
cmp
loope
in
retf
lahf
loop
add
add
dec
pop
cmc
out
cmp
jp
(bad)
fild
out
add
call
add
xor
adc
hlt
xchg
mov
add
push
push
add
leave
add
mov
fmulp
jae
sub
fld
into
cmps
jnp
imul
fidivr
jne
mov
cmps
pusha
add
test
cmp
add
jnp
push
inc
adc
dec
jle
jnp
pop
add
add
psrad
jns
pushf
test
pop
inc
loopne
cwde
inc
dec
or
pop
add
lods
add
aaa
xchg
push
dec
sbb
sbb
movs
mov
add
inc
fs
adc
jl
(bad)
adc
cmps
jle
inc
or
cdq
not
sar
inc
in
icebp
inc
or
add
jno
fcomi
movs
and
in
mov
xchg
cmc
lods
add
adc
add
jbe
pop
push
repnz
push
jbe
jg
jo
xor
test
nop
add
pop
aam
add
add
push
jmp
xchg
dec
int
dec
or
mov
test
pop
pop
mov
gs
ret
sub
add
leave
mov
stc
imul
imul
add
add
push
jp
mov
add
add
call
neg
nop
addr16
add
add
add
add
add
cmp
sub
cmp
sahf
and
les
mov
jmp
sub
add
retf
add
jne
xchg
mov
fcmovu
add
shr
and
add
add
ds
fidiv
test
gs
push
cmp
inc
mov
cli
jmp
or
jmp
out
test
and
pop
jl
gs
mov
loop
add
jp
pushf
(bad)
(bad)
xchg
push
mov
add
xchg
fwait
jne
les
add
inc
jmp
add
adc
jle
loop
add
or
mov
test
fbld
add
add
add
ins
arpl
push
fwait
aas
xor
add
fadd
and
dec
lods
fimul
pop
ss
sub
data16
pop
bswap
jns
add
inc
sub
push
mov
imul
mov
in
mov
add
add
add
sti
add
sbb
(bad)
jl
add
int
into
addr16
aad
data16
fstp
sahf
fwait
das
shr
(bad)
repz
sahf
clc
push
sub
xor
and
add
imul
fiadd
or
add
add
fwait
aaa
mov
lea
imul
mov
jae
js
add
add
in
cmp
cmc
loope
imul
inc
and
add
and
fimul
jmp
jbe
push
inc
inc
add
inc
int3
sbb
not
add
rcr
push
add
add
push
mov
push
mov
pop
xchg
pop
add
add
jle
dec
inc
mov
outs
push
ds
popf
pop
mov
outs
jle
ret
clc
pop
add
add
cli
jle
jo
push
into
cs
retf
add
push
sbb
inc
into
mov
cmc
and
push
add
iret
jmp
push
test
cmp
adc
fstp
xchg
sahf
jo
push
imul
mov
add
or
xor
push
pop
pop
add
add
add
ret
stos
stc
movs
or
test
test
popa
mov
inc
sbb
mov
retf
pusha
add
cdq
movs
add
add
js
mov
retf
push
cmp
add
out
mov
ins
xchg
pusha
daa
xchg
add
add
stc
mov
test
fnstenv
add
sub
add
icebp
sbb
xor
mov
add
pop
icebp
push
icebp
add
cmp
sti
xor
adc
pop
fadd
mov
neg
adc
aad
ror
add
pop
add
sar
dec
aad
push
lods
in
sub
popf
add
cmps
adc
add
push
mov
aaa
sbb
mov
push
or
add
in
cmp
push
xlat
add
add
cmps
imul
push
sbb
fnstenv
adc
jo
dec
add
cs
dec
push
js
add
add
int3
mov
mov
jae
or
aam
add
movs
inc
cs
ins
sub
push
or
inc
int
mov
dec
and
add
jo
or
xchg
aas
pop
add
ja
dec
out
loopne
xchg
add
stc
jae
xchg
mov
add
jge
xor
mov
lock
out
cs
sbb
push
add
mov
sub
mov
add
and
xor
jae
in
push
add
inc
lods
jp
shl
dec
rol
xor
add
scas
movs
or
arpl
jbe
add
stc
sbb
mov
mov
push
mov
push
ftst
add
cmovo
xlat
movs
pop
jle
fsubrp
push
mov
daa
dec
jne
jne
nop
add
add
lahf
pushf
add
in
jmp
ins
repnz
daa
push
imul
jle
lock
add
mov
sub
out
enter
push
fadd
fdivr
add
mov
imul
test
mov
xchg
pop
add
add
sub
loope
mov
adc
dec
add
movs
test
out
(bad)
fcmovne
lock
js
add
add
mov
imul
and
and
jb
add
jg
aaa
test
pop
inc
mov
add
nop
in
(bad)
stos
test
push
test
inc
out
xchg
(bad)
fld
sbb
enter
iret
lahf
dec
jmp
rcl
addr16
mov
add
mov
push
mov
(bad)
aam
adc
mov
add
mov
into
and
jns
in
stc
add
fdivr
in
or
repz
jle
push
xchg
cld
push
outs
add
sbb
push
leave
repz
jno
add
add
jns
out
push
popa
sti
add
mov
pop
sar
pushf
jmp
add
mov
lahf
je
mov
add
adc
pop
repz
ror
cld
dec
rcl
jnp
add
push
pop
nop
lods
inc
int
nop
xchg
push
add
xchg
jge
sbb
push
mov
add
fs
add
add
add
jb
jno
dec
xchg
jg
ds
nop
fiadd
mov
mov
ss
add
ds
pop
jns
mov
add
add
add
mov
mov
sub
je
sub
fucom
not
adc
xor
pop
inc
fistp
pop
mov
fimul
push
mov
add
pop
nop
mov
mov
mov
mov
stos
xchg
outs
or
mov
jne
or
add
out
cmp
pop
pop
call
mov
xchg
sub
ror
sbb
(bad)
js
sbb
add
cmp
add
cmp
call
mov
cmc
fwait
add
pop
add
ss
inc
xchg
lods
in
inc
hlt
add
mov
add
mov
add
add
xor
xor
aad
sub
loop
pop
int3
cmps
sub
div
ins
data16
adc
push
add
pop
add
push
inc
lods
js
cld
retf
lods
js
mov
loop
jge
mov
clc
pop
mov
cli
add
repz
add
sbb
xor
add
cmp
add
shr
js
sar
sbb
add
mov
cmp
cmps
lods
shr
dec
pop
hlt
loop
mov
jg
scas
cmp
pusha
mov
imul
mov
add
and
add
add
add
(bad)
jo
hlt
inc
popa
js
mov
stc
cli
call
xchg
dec
cmp
push
add
sub
iret
pusha
arpl
rol
add
repnz
fiadd
xchg
rol
pop
daa
jge
add
fs
xchg
hlt
adc
add
pusha
enter
mov
dec
add
push
dec
les
add
push
add
test
jns
mov
fwait
mov
sbb
adc
add
shr
aaa
ret
imul
ins
add
add
aam
mov
ficom
sbb
jmp
xchg
push
test
mov
ins
cmp
jge
repz
inc
add
dec
add
mov
rol
pushf
add
inc
add
add
sbb
dec
inc
lods
cmps
out
test
imul
icebp
xor
add
stos
test
add
mov
mov
add
rol
leave
add
xchg
add
push
dec
jne
fcomp
rol
mov
lods
xchg
lea
sbb
add
imul
push
and
add
xchg
dec
and
add
add
push
loopne
cmp
rcl
in
pop
cs
sti
enter
xchg
cmp
ss
jb
push
add
mov
mov
sub
adc
add
add
lock
cli
dec
jmp
add
loop
sahf
mov
dec
idiv
inc
add
sar
test
pop
add
(bad)
jg
inc
dec
add
retf
data16
imul
add
cs
fcmovnu
cmps
xor
pop
mov
fdiv
aam
jnp
leave
dec
in
sbb
add
mov
enter
shr
pop
jl
popf
add
push
cmp
add
add
div
add
add
mov
push
xchg
cmp
daa
pop
jmp
pop
movs
cwde
cmp
or
mov
imul
loope
sub
(bad)
fbld
pusha
mov
cmp
clc
mov
out
lea
frstor
sbb
dec
std
add
mov
adc
imul
add
add
add
pushf
push
xchg
pop
inc
(bad)
jnp
add
js
mov
jl
mov
pop
mov
xor
ss
push
add
add
fnstsw
dec
loop
ins
push
xchg
xchg
fwait
adc
jae
jecxz
repnz
jmp
sahf
add
add
mov
clc
shl
cmp
xor
aam
add
dec
add
sub
add
std
jne
add
loope
(bad)
sbb
mov
lea
dec
push
mov
sbb
add
push
add
and
adc
movs
pushf
out
add
add
add
hlt
adc
jge
sti
inc
dec
pop
div
xchg
sub
sahf
aad
jmp
or
add
sbb
outs
mov
add
add
ss
inc
test
addr16
ds
pop
fcomp
fild
jne
jle
jne
clc
sbb
add
dec
pusha
add
data16
add
mov
aad
or
mov
add
cmp
adc
imul
add
push
shr
in
scas
pusha
dec
mov
int3
js
adc
add
fwait
shl
bound
push
imul
sub
add
mov
repz
dec
inc
imul
and
jns
sub
ror
add
scas
add
xor
mov
add
jecxz
icebp
push
push
outs
adc
cwde
into
add
cmps
jle
mov
add
mov
out
inc
stos
pop
call
add
ret
js
test
movs
xor
xchg
lea
inc
pop
rcr
xchg
xchg
loopne
add
xchg
mov
add
add
test
lods
mov
jnp
gs
(bad)
or
ins
add
pop
inc
ins
mov
dec
add
add
mov
aam
push
xchg
fdivrp
(bad)
gs
jae
mov
add
in
lock
rol
les
add
(bad)
pop
aam
sub
jb
es
leave
fs
push
pop
sbb
add
ret
add
cmp
pop
jle
dec
inc
pop
jle
mov
add
xchg
jmp
jae
jno
aas
dec
sub
add
pop
add
add
lahf
mov
mov
add
jg
or
test
push
mov
into
mov
mov
lahf
add
imul
loopne
add
cmp
push
adc
jp
enter
add
xchg
add
mov
mov
cli
dec
mov
ins
lldt
lods
rcr
jle
xchg
push
bound
xor
add
jge
test
add
add
xchg
cmc
jle
in
xchg
sbb
or
add
add
sahf
add
cmp
mov
test
jp
add
pop
add
je
jo
aam
mov
and
sti
loopne
push
adc
add
cld
add
add
or
aaa
xor
bound
jbe
in
lock
add
adc
outs
add
add
mov
add
xchg
ror
cmp
mov
mov
add
jns
sbb
fwait
xchg
xchg
add
sub
sbb
sub
add
and
dec
stos
push
or
push
jb
mov
int3
mov
add
xchg
xor
outs
and
add
add
xor
ins
xor
aam
mov
les
jne
mov
fcmovb
mov
jo
add
ins
int3
mov
add
int3
int
sbb
stos
sub
cdq
mov
adc
inc
clc
add
pop
out
xchg
test
pushf
push
add
adc
scas
mov
add
into
lds
fadd
and
adc
add
jno
add
mov
gs
add
loop
sbb
fmul
cwde
data16
mov
arpl
and
enter
dec
ins
and
cmp
and
aad
adc
and
lods
and
mov
add
add
pop
outs
lods
bound
sbb
(bad)
mov
lock
cmps
jle
add
jecxz
in
jmp
mov
stc
sbb
add
(bad)
mov
mov
icebp
add
and
and
repz
mov
call
cwde
ret
pop
sub
pop
fisub
add
dec
iret
xchg
add
stc
iret
mov
stc
cmp
push
fcmovnbe
inc
std
dec
and
les
les
add
add
add
add
cmps
(bad)
in
pusha
imul
(bad)
bound
jle
xchg
mov
data16
fsubr
jle
inc
push
shr
pop
ins
and
jle
mov
jbe
add
add
mov
xchg
std
and
mov
push
jge
add
pop
imul
sbb
rcr
xor
repnz
add
push
mov
dec
je
mov
cli
add
cmp
out
out
movs
add
xchg
fs
inc
inc
add
gs
add
aad
cs
mov
pop
es
inc
add
push
fiadd
jo
sbb
addr16
add
cdq
bnd
xchg
fwait
sahf
adc
push
(bad)
fdivrp
pop
push
aam
fnsave
push
and
inc
mov
ror
sub
cdq
push
loope
jbe
add
adc
lds
mov
ds
cwde
mov
mov
add
or
pop
mov
in
add
add
or
enter
jnp
nop
shl
jo
dec
mov
add
add
add
mov
(bad)
mov
pop
dec
add
mov
xor
dec
add
add
fucomip
mov
fild
dec
stc
add
adc
stos
add
dec
dec
enter
(bad)
push
sti
call
xor
cwde
fimul
dec
popf
ss
sbb
mov
pushf
push
sbb
dec
dec
mov
arpl
in
rol
inc
inc
in
and
loop
popa
jp
mov
add
jl
adc
dec
push
shl
add
add
add
or
add
in
hlt
shr
das
pop
sub
pop
cld
inc
out
inc
jb
outs
xor
mov
and
sbb
adc
add
sub
fisub
add
pop
mov
fmul
daa
or
pushf
add
mov
push
sbb
cmps
push
add
imul
cwde
sub
lea
sub
cmp
int3
lock
add
fistp
ret
rol
add
sbb
jp
add
push
(bad)
jbe
sahf
add
aaa
xor
repnz
mov
inc
add
or
cmp
movs
push
add
mov
iret
fild
pop
add
add
adc
pop
sub
test
push
add
cmps
push
rol
add
inc
push
imul
stc
jmp
sahf
sub
dec
inc
sbb
inc
loope
jecxz
popf
dec
add
add
inc
add
stos
outs
push
cmps
add
add
jecxz
mov
jo
loop
std
mov
mov
add
add
add
call
lea
push
adc
jge
cmp
push
out
push
shl
aas
ja
and
repnz
(bad)
lock
cmp
movs
add
add
add
(bad)
scas
repnz
add
icebp
(bad)
int
outs
bound
mov
mov
add
add
adc
sub
cmp
lds
dec
aas
add
add
add
retf
shl
add
xchg
pop
test
mov
pop
lods
dec
push
pop
cmc
adc
add
xchg
imul
dec
fcom
retf
jle
mov
add
es
add
add
xchg
(bad)
repz
repz
mul
clc
add
push
dec
js
shl
xor
cld
cmp
inc
add
jg
mov
xchg
daa
ins
add
dec
pop
sbb
int3
mov
in
out
(bad)
bound
test
arpl
add
inc
in
movs
pop
mov
rol
add
pop
jg
add
cmp
sbb
dec
add
nop
cmp
push
jne
loope
inc
mov
push
nop
add
add
and
loopne
mov
xor
imul
iret
lods
jmp
add
add
add
sub
and
retf
or
mov
sub
inc
shl
cs
mov
mov
cmp
sbb
add
ins
add
inc
dec
fs
hlt
inc
add
sbb
add
add
int
add
mov
push
add
add
fstp
inc
dec
out
xchg
mov
xchg
into
test
mov
cwde
dec
cmp
mov
pusha
imul
adc
pop
ins
jne
rol
add
push
jp
add
mov
std
push
dec
into
add
ss
mov
jo
lock
pop
xor
cwde
mov
add
xchg
(bad)
push
xchg
add
pop
fmul
jnp
fdiv
add
add
inc
adc
mov
pop
ret
and
shl
std
cdq
pop
arpl
ficomp
add
add
scas
cmps
icebp
xchg
pop
jb
(bad)
(bad)
sbb
and
add
or
add
nop
add
out
imul
jne
shl
add
inc
or
adc
jo
nop
inc
cmp
mov
outs
loopne
add
add
sub
lods
jle
stos
push
add
stc
push
adc
test
add
push
scas
jge
hlt
adc
mov
and
xor
sbb
jb
mov
mov
add
add
adc
mov
adc
and
mov
mov
add
mov
add
sar
out
xlat
sub
cmp
adc
outs
(bad)
push
add
out
push
or
hlt
mov
add
ficomp
add
cmps
cwde
(bad)
mov
xor
adc
inc
add
je
pusha
retf
xchg
call
and
sub
sbb
cs
lods
sbb
mov
or
in
xchg
adc
mov
add
adc
repnz
dec
fucom
ins
lock
popf
rol
mov
fmul
add
fadd
xchg
rol
add
ds
ror
add
xor
sub
add
mov
add
add
rol
idiv
adc
sbb
outs
cmp
push
or
push
cs
add
inc
add
lds
push
mov
mov
mov
imul
add
add
push
dec
xor
push
cs
xchg
sub
mov
dec
or
and
and
jmp
ret
cli
add
add
dec
mov
cld
inc
mov
movlps
add
(bad)
mov
cmps
ins
jnp
shl
aam
or
xor
shl
mov
mov
add
imul
ret
cmc
rcl
aas
std
mov
(bad)
in
lods
add
add
rcl
push
ins
mov
lock
and
add
(bad)
in
clc
jmp
je
add
test
add
or
inc
mov
adc
add
sub
add
arpl
sub
push
push
add
add
mov
xchg
mov
pop
pop
(bad)
mov
add
js
shl
icebp
mov
popf
dec
dec
jp
js
mov
stos
add
es
push
add
add
das
vcvtsi2ss
push
loopne
not
dec
or
add
xlat
imul
int
add
loope
add
push
jo
jg
pop
xchg
lock
mov
sbb
add
mov
mov
cmp
jbe
and
dec
add
leave
or
daa
xchg
stos
add
movs
push
add
shr
add
add
jg
rdtsc
sub
sub
and
call
test
or
sbb
fiadd
xor
push
jns
fsubr
ja
add
ret
(bad)
fbld
and
loopne
sbb
lods
add
push
sbb
sub
dec
pop
push
add
sub
add
dec
mov
add
and
dec
mov
xchg
push
cmc
mov
push
rcl
jmp
adc
cmp
mov
fistp
inc
push
psrlw
mov
xchg
xor
add
inc
nop
inc
add
mov
test
add
add
and
fild
test
cli
push
mov
rol
add
add
iret
xor
addr16
fiadd
mov
and
xor
pop
je
data16
mov
mov
(bad)
je
test
sbb
fcmovbe
enter
(bad)
xlat
(bad)
enter
add
rcr
lods
mov
inc
in
push
test
lods
nop
sub
pop
mov
adc
jle
nop
add
add
lods
ficomp
dec
dec
fdiv
adc
inc
mov
movs
mov
dec
test
add
add
test
jo
iret
mov
loope
call
or
aaa
jne
mov
lea
cmps
movntq
out
les
add
call
or
ins
int
add
add
add
in
(bad)
xchg
pop
fld
js
jmp
lahf
test
xchg
add
push
cmp
inc
push
xchg
cmovae
add
mov
mov
cdq
or
push
loopne
in
sub
inc
push
xchg
xchg
or
out
int3
and
stos
add
add
aas
stos
xchg
inc
push
movs
retf
jle
fcmovne
aas
and
dec
enter
jle
mov
(bad)
mov
daa
ds
push
int3
lahf
dec
sub
enter
and
add
idiv
inc
nop
fimul
cmp
mov
pop
retf
std
jne
enter
add
fiadd
inc
add
test
ret
or
adc
bound
div
add
pop
mov
pop
mov
neg
out
mov
add
add
loop
bnd
jp
mov
sbb
fs
and
mov
fadd
add
add
out
mov
add
mov
add
in
mov
add
add
int
outs
xor
aad
shl
jmp
jecxz
shl
add
test
push
xor
jmp
loopne
add
add
mov
dec
mov
xchg
add
lahf
or
add
or
mov
pop
push
mov
ss
data16
int3
lock
add
xor
cmp
lods
mov
sar
and
add
dec
add
retf
sub
jo
add
add
pop
bnd
add
add
adc
add
add
add
dec
sbb
cdq
mov
and
retf
out
or
retf
cs
enter
je
add
xor
inc
ret
in
mov
add
in
push
lods
add
add
nop
icebp
into
sahf
pop
addr16
stc
add
sbb
add
add
add
jnp
nop
and
adc
and
push
pop
fdivr
inc
loop
rcr
xchg
and
jbe
inc
sub
jns
add
add
jge
xchg
or
sti
mov
(bad)
sahf
xchg
shr
jp
(bad)
add
push
cmp
push
or
adc
retf
xor
lds
dec
push
add
sub
mov
push
aaa
mov
sub
inc
add
int
add
add
ds
push
or
les
(bad)
ror
ret
sar
add
xor
and
jg
adc
jno
adc
or
xchg
mov
add
(bad)
mov
xlat
test
movs
or
mov
(bad)
lahf
out
aam
add
out
sbb
(bad)
push
add
cmp
add
pop
xor
sbb
pop
retf
sar
add
aaa
sar
imul
aam
xchg
retf
jp
jo
cmp
add
mov
fcom
cmc
lds
sbb
neg
cmp
push
add
call
ins
hlt
pop
inc
scas
add
jecxz
inc
sbb
dec
push
inc
(bad)
sahf
mov
mov
inc
adc
add
add
xchg
jmp
je
cdq
push
and
add
popa
pushf
add
adc
add
push
inc
out
repnz
in
test
pop
add
jmp
mov
jmp
xchg
rcr
(bad)
add
popf
sbb
les
pop
dec
in
add
fsub
dec
stos
mov
cmp
popa
add
add
add
imul
jbe
iret
mov
xchg
push
or
sbb
add
add
sbb
pop
add
aas
popa
add
add
lea
les
inc
xchg
outs
or
push
xchg
dec
add
add
mov
cmp
push
jns
sbb
int
inc
mov
inc
xor
mov
rol
add
lock
mov
call
test
add
add
dec
inc
add
inc
ds
test
sub
call
pop
pop
sti
pop
out
int3
add
movs
movs
jbe
add
dec
sub
mov
add
enter
icebp
xchg
sub
fmul
arpl
movs
leave
mov
adc
mov
fdiv
daa
mov
sar
and
push
in
pop
mov
and
sti
fidiv
or
cmp
dec
mov
add
mov
or
mov
scas
inc
add
arpl
jg
jo
lods
pop
add
mov
mov
mov
dec
and
fwait
scas
or
dec
add
jl
add
test
add
jmp
sbb
add
xor
push
repz
add
repnz
jno
jp
jno
out
or
adc
or
push
add
sub
adc
add
add
add
retf
fcomp
outs
test
in
xlat
into
imul
mov
and
xchg
sub
add
push
add
call
scas
pop
add
pop
imul
(bad)
fadd
add
and
mov
pop
(bad)
push
adc
pop
add
popa
into
outs
dec
icebp
or
add
add
test
mov
daa
cwde
stos
aad
lea
add
push
xlat
mov
test
pop
adc
loop
dec
adc
bound
and
inc
add
add
mov
add
out
adc
iret
pusha
jbe
test
test
or
(bad)
xor
add
and
test
loope
mov
add
jle
or
arpl
jo
mov
xchg
jge
add
mov
jmp
std
rol
xor
add
adc
sub
cmp
nop
xchg
test
cdq
lods
add
arpl
xchg
neg
loop
inc
inc
add
add
loop
xchg
les
push
sahf
cmp
add
add
or
jp
cmps
out
fdiv
pop
xor
push
pop
shl
xor
imul
inc
fadd
fdivrp
pop
cmp
or
add
sbb
cmp
out
test
jne
cld
cmps
add
dec
dec
adc
add
pop
sub
add
add
add
mov
jle
es
cli
jb
mov
cld
push
xchg
js
cmp
pushf
movs
add
add
sub
jmp
leave
inc
stc
push
or
dec
mov
mov
dec
cdq
inc
lea
add
add
add
ficom
fsubr
repnz
lock
sbb
test
add
pusha
lea
popa
push
add
add
mov
mov
fwait
add
add
xchg
mov
add
out
xor
add
ds
jle
ja
test
hlt
lods
push
aad
cmp
test
add
add
fld
out
call
push
test
test
add
add
mov
xchg
pop
or
add
push
sub
jnp
add
aaa
add
inc
push
stos
fwait
add
add
stos
add
bound
sub
add
jp
mov
cmp
js
jae
cdq
jo
aas
push
mov
imul
add
inc
outs
retf
or
fsincos
mov
mov
les
lds
add
add
lea
dec
xor
popa
add
test
cmc
cwde
xchg
add
out
xor
mov
fiadd
add
add
add
ds
or
mov
jo
mov
(bad)
out
inc
xor
rcl
iret
pop
xchg
push
std
rol
inc
push
(bad)
jmp
add
add
xor
ficom
inc
call
mov
push
add
jmp
jnp
out
pop
test
aaa
push
add
inc
cmp
add
in
popf
xchg
bound
adc
add
(bad)
mov
push
fsub
mov
jbe
mov
cmp
dec
pop
dec
fist
cmc
cs
mov
(bad)
cmp
add
xchg
(bad)
xor
lds
mov
aam
loopne
add
sbb
xor
add
ins
dec
iret
add
mov
xor
cmp
add
scas
int3
bound
pop
and
add
mov
add
add
xor
(bad)
jno
ror
jmp
dec
pop
add
pop
xchg
and
sbb
in
pop
test
push
in
test
int3
or
sti
push
add
add
test
out
add
(bad)
rol
in
sbb
pop
and
dec
pusha
dec
call
xor
or
add
sub
mov
add
pop
mov
ss
retf
popf
cmp
mov
enter
idiv
nop
or
ret
leave
add
xor
nop
jne
mov
cmp
imul
(bad)
cmp
cmp
add
adc
ja
jecxz
inc
add
movs
jno
add
repz
add
jb
cs
xchg
inc
mov
add
add
mov
fcomip
mov
and
arpl
retf
push
data16
fst
xchg
dec
nop
inc
add
inc
and
push
call
lahf
aas
add
cmp
fidiv
mov
dec
mov
push
or
hlt
xchg
ds
add
jmp
out
popa
add
add
pop
sbb
push
cmp
int3
ss
or
clc
adc
ins
jp
add
into
icebp
jmp
xor
jno
sub
sub
icebp
add
lods
add
and
imul
mov
jle
sub
add
add
xchg
jle
add
cmps
sti
push
add
jbe
inc
movs
mov
sar
add
add
ret
jg
jmp
(bad)
fdivr
daa
jle
sbb
popa
add
add
adc
push
push
or
add
mov
push
add
jg
add
mov
add
clc
fistp
xor
add
xchg
mov
mov
sub
push
rcr
dec
xchg
add
(bad)
xor
add
inc
xor
neg
cmp
or
(bad)
sbb
iret
adc
or
add
xchg
ret
add
add
cdq
movs
nop
add
fisttp
add
pop
jp
jbe
in
pop
(bad)
jae
xlat
add
xor
out
and
fcomip
scas
push
mov
adc
add
add
and
leave
xchg
pop
outs
pop
hlt
jb
mov
out
adc
call
push
lock
adc
in
add
add
add
(bad)
mov
enter
mov
push
test
pop
test
sbb
jge
test
jmp
sub
inc
lods
cwde
mov
enter
ds
cwde
out
bound
fisttp
pop
add
push
jl
popf
xlat
int3
mov
bsr
add
aam
into
verw
inc
(bad)
pop
lahf
xchg
pop
retf
mov
add
(bad)
outs
test
sbb
dec
mov
ret
(bad)
adc
or
pop
retf
mov
dec
add
add
push
jp
in
out
push
movs
dec
push
push
jl
iret
mov
(bad)
add
fdivr
leave
sahf
leave
sbb
loopne
sub
add
pushf
sbb
cmp
push
test
mov
mov
and
fmulp
shl
lods
add
retf
dec
or
push
add
jo
outs
cmc
mov
add
or
movs
and
add
add
dec
movs
jmp
loop
xor
mov
(bad)
dec
iret
mov
add
add
add
push
mov
or
cwde
hlt
scas
lahf
mov
push
cwde
lahf
xor
adc
aad
add
cli
mov
jp
imul
mov
add
hlt
es
dec
cmp
cmp
jl
int3
jno
fnstsw
add
add
sbb
dec
and
je
aad
js
or
jae
and
add
(bad)
int
aam
push
add
faddp
add
add
dec
adc
imul
cmps
push
pusha
jns
pop
adc
adc
add
adc
mov
mov
stc
lds
xor
inc
add
add
push
inc
gs
sub
out
mov
sub
fiadd
pop
call
aaa
rol
cmc
lods
mov
add
mov
sti
cli
sbb
add
ds
add
mov
loop
imul
push
aad
push
dec
add
leave
outs
rol
add
add
and
add
cmp
rcl
popa
push
mov
push
add
add
dec
test
add
cmps
inc
stos
push
daa
mov
jns
jo
out
and
add
rol
mov
into
xchg
xchg
pop
bound
scas
test
js
push
add
addr16
arpl
dec
add
mov
js
push
jle
xchg
std
imul
test
test
add
fcmovbe
jmp
and
cmc
cwde
add
pop
add
test
leave
or
add
cld
mov
push
mov
add
nop
ret
icebp
mov
sbb
test
add
add
inc
push
mov
xchg
dec
dec
add
shr
fwait
shl
push
xchg
sbb
add
cmp
ins
neg
imul
push
add
push
pusha
loop
dec
pop
sub
movs
test
cdq
add
fwait
push
cwde
fist
mov
lock
inc
psubd
mov
inc
nop
cmps
adc
dec
add
sub
add
mov
test
stc
mov
push
cmp
mov
add
add
jge
add
iret
mov
int
jbe
xor
add
add
dec
mov
out
add
out
and
or
and
mov
dec
jp
mov
jbe
xchg
add
movs
jg
adc
nop
es
add
add
cmp
loope
imul
mov
fwait
push
add
add
movs
int
xchg
mov
outs
push
jecxz
and
cmp
sti
add
add
or
pop
mov
or
xor
add
jns
or
pop
add
(bad)
nop
push
mov
add
stos
and
push
js
daa
imul
mov
adc
lods
mov
add
inc
jmp
arpl
mov
repnz
jecxz
sti
je
add
jb
js
add
xchg
add
sub
aad
jg
and
bound
lods
add
ins
(bad)
jp
es
cs
jo
add
bound
mov
jb
dec
adc
pop
dec
lds
jns
add
jno
cmp
lds
(bad)
iret
daa
add
dec
add
sahf
mov
inc
mov
jmp
sbb
mov
jne
paddd
add
retf
rol
leave
add
push
ret
add
add
add
imul
xor
xor
dec
fdivr
add
rcl
sbb
add
add
ds
xor
add
xchg
dec
dec
ins
xchg
(bad)
jge
iret
mov
add
std
repnz
int
or
das
popa
mov
sub
dec
cmp
xor
add
leave
add
add
jne
ror
test
jnp
pop
pop
pop
call
je
jg
sti
aas
imul
dec
xor
in
pop
add
add
gs
(bad)
out
pextrw
xchg
clc
aad
sbb
xor
jl
xor
fwait
js
pop
ds
cmp
fimul
(bad)
add
add
loope
add
add
xchg
or
loop
test
cmc
popf
out
sub
fs
add
add
xor
jl
fisttp
inc
(bad)
iret
add
dec
rcr
sub
mov
sbb
imul
mov
add
fwait
pop
jae
aaa
jbe
cmc
jmp
add
add
add
jmp
fld
mov
sbb
lods
jo
jge
jno
sbb
aas
mov
push
mov
(bad)
and
push
cli
aad
ins
test
xor
outs
add
mov
jmp
ins
mov
jmp
sbb
add
mov
scas
jle
add
add
aaa
jno
inc
cmps
jle
and
push
cmp
fbstp
int3
add
sub
add
add
imul
fld
adc
sub
add
pop
stos
or
add
cli
mov
add
mov
lods
dec
outs
xchg
adc
xor
jbe
pop
pusha
add
add
mov
cld
test
(bad)
scas
or
fisub
ds
sbb
dec
mov
scas
mov
fs
cmc
mov
hlt
add
rcl
test
daa
je
retf
cmc
add
aam
int
rcr
push
mov
xor
add
imul
add
stos
adc
sbb
mov
(bad)
adc
aas
inc
call
add
jns
scas
(bad)
daa
mov
cdq
in
pop
add
fidiv
add
aad
xor
in
scas
xchg
enter
adc
inc
or
int3
mov
out
jp
mov
mov
add
cld
fbld
movs
ins
in
adc
add
sub
(bad)
adc
mov
jecxz
jb
add
push
test
add
jno
popa
xchg
icebp
or
add
scas
das
mov
in
in
ror
xchg
jecxz
add
inc
in
add
xchg
add
lds
xchg
(bad)
ja
push
push
cmp
loop
add
(bad)
cmp
in
out
call
push
mov
test
add
cmp
(bad)
add
test
add
ja
add
pushf
fist
mov
inc
mov
dec
jl
ret
add
xchg
add
cmp
add
mov
std
jg
xor
sub
push
arpl
stos
adc
inc
mov
hlt
mov
add
stos
mov
and
add
add
sti
cmps
push
enter
jl
repnz
jle
push
pushf
cmp
push
jp
jns
in
int3
xor
jg
retf
cmc
dec
push
jo
inc
pop
cmp
xor
add
add
fistp
imul
mov
sbb
std
stos
dec
ins
in
data16
mov
pusha
mov
push
xchg
jb
add
adc
daa
test
push
add
xchg
add
add
add
xchg
enter
nop
and
dec
popf
shl
mov
fbld
les
add
fld
pop
fstp
in
add
neg
hlt
fs
add
jl
repnz
add
add
or
push
dec
pop
jecxz
stos
(bad)
pushf
rol
add
add
stos
add
add
add
shl
loope
mov
cdq
or
xchg
int3
pop
ss
or
push
ss
mov
stc
jmp
in
mov
(bad)
test
rcl
repnz
scas
cwde
add
cmp
out
pusha
add
scas
outs
and
imul
jp
pop
sub
add
dec
push
push
sub
xlat
cwde
mov
ret
add
nop
jle
mov
jmp
adc
add
jecxz
mov
pop
neg
loopne
push
pop
mov
sbb
push
push
add
add
adc
xchg
push
adc
shr
dec
call
pop
mov
cmps
js
fisubr
loopne
add
add
add
test
int3
pop
int3
dec
mov
cmp
call
repnz
inc
(bad)
dec
mov
mov
jo
lahf
stos
dec
jnp
push
push
out
pop
mov
mov
jno
pop
gs
cmp
gs
xchg
jmp
add
int3
cld
ss
aam
repnz
xor
cdq
loope
sbb
or
cmc
mov
add
add
xchg
or
movs
add
sahf
(bad)
ja
xor
(bad)
mul
pop
fs
xchg
sbb
add
bound
call
adc
add
xchg
push
jmp
mov
cmp
add
jno
int3
add
add
add
imul
aas
popf
or
sub
std
add
add
add
push
sub
inc
(bad)
xchg
inc
mov
scas
xor
pushf
outs
xchg
mov
adc
mov
cli
add
(bad)
mov
add
ins
sub
pop
sbb
add
inc
xor
sbb
mov
cs
lock
add
xor
add
retf
shr
jo
push
movs
mov
je
in
jp
int3
shr
sub
or
add
js
ret
call
inc
bound
inc
sar
jp
ins
test
sub
pop
jb
add
fiadd
data16
retf
(bad)
add
mov
and
xor
into
mov
call
sbb
add
adc
(bad)
mov
push
fadd
xchg
jbe
add
and
pop
or
cmp
mov
mov
push
out
and
add
mul
scas
xchg
push
mov
add
xchg
push
sub
push
ret
dec
jb
cmp
sub
daa
scas
jle
cmp
and
or
inc
inc
adc
push
mov
add
popf
aas
cmps
xchg
loope
add
or
mov
fwait
(bad)
or
add
pop
mov
loop
add
mov
movs
ins
inc
pushf
movs
mov
mov
add
das
add
je
aam
cmp
test
les
repz
add
add
add
mov
jg
mov
mov
pop
cdq
add
pop
js
lahf
ret
lock
out
inc
sbb
fld
jnp
imul
xor
and
adc
int3
call
add
or
adc
enter
add
leave
jbe
nop
push
rol
add
adc
retf
stos
enter
pop
jle
mov
adc
mov
jmp
dec
shr
dec
cmps
repnz
jne
imul
add
add
out
cmps
in
rol
gs
jnp
loope
and
and
adc
xor
fpatan
add
add
loopne
ss
jmp
sbb
mov
outs
mov
shl
outs
add
arpl
xchg
and
adc
in
add
(bad)
xchg
add
les
jbe
js
into
add
movs
or
sub
xor
and
lods
add
inc
add
add
add
inc
mov
gs
jmp
dec
fwait
add
into
xlat
ins
jb
mov
ins
(bad)
sbb
mov
add
loop
xchg
daa
pushf
mov
sub
clc
dec
sbb
retf
add
dec
add
cmc
addr16
pop
cmp
adc
ret
add
lods
add
mov
inc
ins
rcr
push
pop
fadd
add
sub
add
fiadd
add
push
fisttp
add
int3
mov
add
lds
xchg
xchg
loope
and
xchg
dec
pusha
push
add
cld
call
add
dec
iret
shr
xchg
mov
aad
sub
add
and
add
lahf
enter
jmp
jge
es
add
add
add
mov
add
sqrtps
add
aaa
add
out
mov
rcl
or
mov
push
repz
fld
push
mov
jmp
loope
arpl
cli
and
stc
das
jo
add
pop
imul
(bad)
add
mov
in
mov
xor
aas
and
add
or
cmc
inc
add
pop
lock
je
jecxz
push
retf
lods
add
xlat
jecxz
sub
shr
jb
or
repnz
xchg
cmp
push
ds
add
add
add
test
xor
adc
inc
clc
cmps
dec
sub
xor
dec
sbb
div
sbb
add
clc
mov
push
lahf
sbb
pop
or
aam
and
mov
inc
lahf
add
mov
cmp
movs
add
add
cs
cmp
mov
pop
dec
push
and
jle
cdq
movs
repnz
mov
pop
or
push
jne
add
mov
push
gs
fisub
inc
push
pop
lods
aas
add
je
movs
add
adc
add
pop
jl
sub
repnz
add
ret
mov
pop
xchg
inc
sub
xor
nop
add
inc
jg
ret
call
movs
push
cs
scas
cmp
inc
add
cmp
pop
sbb
scas
mov
add
test
lea
sub
mov
add
ins
cwde
sub
mov
mov
dec
add
push
mov
popa
mov
rcl
or
fimul
push
cwde
add
mov
add
add
fadd
pushf
adc
mov
in
adc
push
mov
test
retf
adc
loope
inc
pop
xchg
add
adc
mov
sbb
mov
adc
cld
enter
cmp
dec
pop
in
lea
add
xor
icebp
fs
lock
lea
pop
add
ficom
mov
cmp
push
cld
xor
loop
fistp
lea
imul
pop
xchg
pusha
lods
and
js
sbb
mov
dec
imul
add
cmp
loop
xchg
outs
sub
data16
mov
xor
repnz
add
fstp
repnz
cmp
mov
rol
fisubr
cli
add
and
je
add
jo
and
cmp
cwde
sub
pop
je
xchg
cmp
scas
add
add
not
dec
cdq
sbb
std
push
inc
in
xor
add
add
push
push
out
in
and
add
add
add
add
outs
and
sbb
retf
add
(bad)
sahf
sahf
std
inc
dec
mov
jp
pop
rcr
xchg
and
xchg
push
mov
retf
add
add
imul
lea
adc
ins
sub
push
push
mov
add
js
adc
jb
pop
repnz
mov
lods
test
xchg
add
cmp
cmps
stos
xor
mov
movs
add
sbb
pop
pop
add
mov
push
sub
inc
lahf
add
cmp
scas
add
add
adc
loopne
je
test
inc
mov
add
or
loope
in
jle
verw
mov
les
add
pop
daa
push
push
fs
add
jo
int3
stos
bound
mov
add
add
jne
xlat
fisubr
dec
cmp
add
push
jb
scas
nop
dec
and
jmp
pop
bound
out
add
dec
add
add
push
std
(bad)
fldenv
int
cmp
push
inc
mov
sar
push
dec
mov
mov
xchg
mov
out
push
push
fst
sub
and
sbb
add
add
idiv
fisub
mov
shr
jo
push
xchg
sbb
inc
call
arpl
scas
add
add
add
add
xor
fwait
jecxz
sbb
pop
push
jl
cmp
in
jns
ret
cmp
push
push
aas
push
jbe
xor
leave
lods
jo
sub
sbb
inc
(bad)
pop
add
(bad)
jecxz
js
or
push
add
xchg
mov
add
add
ror
xchg
xchg
(bad)
pusha
test
movs
mov
cmp
out
lods
push
xchg
test
mov
adc
out
xor
push
add
add
(bad)
xchg
fcomi
loop
xor
push
inc
js
ins
(bad)
shl
into
outs
call
rcl
popf
dec
enter
(bad)
aas
sub
dec
dec
adc
pop
or
mov
push
fstp
int3
xor
sbb
inc
cmp
(bad)
rol
add
pop
dec
je
cmp
inc
data16
int3
or
sahf
inc
add
dec
mov
add
in
mov
dec
dec
test
inc
mov
xor
push
or
lahf
lds
scas
xor
popa
add
fadd
add
add
sbb
popf
jo
test
inc
add
jmp
or
mov
add
fidiv
pop
mov
push
add
mov
in
or
inc
pusha
add
add
pop
cmp
dec
mov
jge
or
sbb
mov
cmps
dec
mov
add
xlat
popa
xor
add
dec
jns
aas
in
test
add
addr16
cdq
mov
xor
leave
fidivr
imul
or
xchg
xor
push
ret
add
je
add
add
xor
push
sbb
push
pop
jb
jg
ja
ret
add
mov
mov
adc
pop
cdq
inc
into
test
push
pop
add
clc
adc
push
pusha
add
cmps
int3
push
add
jnp
add
jmp
shl
add
add
mov
ins
test
cld
enter
repnz
imul
aas
mov
ins
adc
add
add
mov
mov
jmp
inc
out
lds
sub
sub
icebp
adc
movs
add
sbb
add
adc
lods
bnd
mov
add
cmp
cmp
outs
add
push
add
mov
add
cmp
outs
lahf
jle
or
out
sub
loopne
xor
and
jb
retf
cwde
lods
rol
sub
dec
jg
mov
jecxz
sub
sbb
push
ins
xor
mov
sub
xor
pop
stos
pop
cmp
add
in
add
add
mov
mov
push
sub
and
in
mov
mov
cmp
add
xchg
dec
adc
sahf
pop
jne
sar
inc
add
add
lds
pop
inc
pop
cmp
jl
fisub
mov
mov
std
(bad)
les
add
idiv
xchg
jecxz
repz
sahf
cmc
sub
std
push
add
add
in
push
mov
add
add
pop
iret
dec
xor
add
mov
out
mov
inc
adc
dec
stos
int
sbb
add
xchg
push
std
inc
mov
and
or
leave
stos
add
(bad)
std
add
sub
aaa
iret
or
push
sbb
add
test
add
jecxz
or
icebp
int3
xchg
and
push
add
jmp
add
cmp
xchg
push
mov
jmp
jge
mov
or
pop
jb
or
add
in
sub
iret
bound
iret
mov
sub
add
mov
cmps
mov
nop
add
add
lods
push
and
dec
inc
out
outs
jne
imul
std
mov
mov
dec
push
cmp
ret
movs
mov
add
add
(bad)
mov
inc
push
mov
jae
push
sbb
xchg
dec
add
ins
cmp
xchg
xchg
or
add
test
es
mov
movs
cmove
mov
fadd
pusha
loop
add
cmp
add
add
out
mov
xchg
mov
jp
in
mov
arpl
mov
push
dec
dec
add
add
inc
mov
lea
add
hlt
arpl
or
mov
adc
add
dec
xlat
xchg
stos
hlt
shr
sbb
adc
sahf
outs
jp
popf
sbb
add
add
add
mov
out
or
push
jle
sbb
jbe
frndint
xchg
sti
push
inc
jle
aad
fnstcw
add
add
xchg
out
push
test
(bad)
xor
loop
xchg
jl
outs
pusha
adc
push
and
push
adc
(bad)
xchg
(bad)
popa
lock
or
loop
nop
xor
cdq
jne
stc
mov
mov
pushf
ror
xchg
sbb
or
mov
xchg
push
push
jnp
(bad)
cmp
imul
inc
cmp
outs
inc
add
add
int3
(bad)
adc
mov
dec
jge
add
add
jmp
retf
jmp
or
out
retf
add
shl
push
jmp
nop
mov
fnsave
fistp
inc
sub
or
inc
icebp
add
add
shl
inc
shl
call
cmps
dec
mov
mov
add
fld
jmp
iret
jl
(bad)
add
add
popa
shl
sbb
ins
push
(bad)
shl
int3
adc
bound
imul
lea
movs
repnz
add
lea
add
cmp
js
test
add
mov
mov
add
jle
cmp
dec
pop
add
lods
js
xor
pop
cmc
inc
jne
add
xor
inc
arpl
add
mov
sub
out
xchg
xchg
pop
scas
and
push
fadd
add
add
push
imul
push
movs
xor
add
sbb
xchg
xor
jge
and
push
add
outs
mov
add
les
ror
sub
sub
add
es
add
or
jge
pop
sub
add
je
inc
inc
arpl
pop
mov
mov
jl
xor
push
(bad)
push
pushf
lahf
add
adc
pop
push
cmc
retf
outs
sbb
push
lock
add
(bad)
retf
fadd
adc
sbb
mov
les
add
add
add
sbb
xchg
stos
iret
sub
sbb
xor
xchg
add
loope
or
add
add
repz
imul
or
add
adc
aaa
outs
pusha
jmp
test
dec
hlt
out
add
dec
mov
ins
adc
aad
xchg
(bad)
fiadd
add
xchg
jl
arpl
or
and
(bad)
xor
add
add
fld
sub
add
add
push
dec
aaa
movs
and
loopne
jle
add
aas
addr16
fild
orps
out
sbb
pop
mov
or
add
add
call
outs
jnp
les
push
or
xchg
(bad)
sbb
add
jnp
add
hlt
xchg
call
push
or
mov
addr16
cmp
sahf
cmp
jae
mov
sub
and
outs
add
out
pop
add
add
adc
clc
xor
sub
jge
stc
add
into
(bad)
in
les
add
scas
int3
daa
jle
scas
sbb
in
add
push
sub
add
inc
push
cmp
(bad)
stos
add
add
in
out
jns
jmp
cmp
popa
scas
or
dec
pop
xor
call
fsubr
add
add
shr
je
into
mov
add
out
cli
fmul
jle
std
aas
outs
dec
add
push
cmps
sub
mov
add
pop
xor
ucomiss
js
arpl
add
push
or
ds
test
add
mov
jmp
inc
and
shl
xor
jns
add
int3
add
stos
pop
shr
je
inc
xchg
loop
jl
push
add
(bad)
add
fwait
pop
movs
int
lds
sub
mov
cmp
popa
in
sbb
mov
add
and
add
jmp
lea
pop
sub
cmp
add
xor
inc
mov
push
nop
pop
jg
stos
xchg
idiv
push
sub
stos
add
lods
pushf
sbb
add
(bad)
repnz
fld
push
data16
pop
add
and
jbe
rcl
fnstcw
fdiv
mov
add
add
add
add
imul
stos
sbb
xchg
inc
mov
mov
stos
push
or
bound
jp
push
push
adc
mov
inc
and
add
fisub
add
dec
pop
add
icebp
jne
std
push
cmp
shl
and
shl
xchg
inc
out
add
push
add
add
add
cmp
push
mov
and
jle
out
pop
mov
add
add
movs
retf
cld
xor
jae
ins
repz
jne
cmp
mov
ret
or
push
test
adc
mov
mov
inc
pusha
pop
fisttp
or
in
lods
push
(bad)
es
test
add
add
mov
pop
xchg
les
jl
adc
jl
loop
mov
mov
outs
mov
mov
repz
call
add
add
aam
retf
pop
jmp
bound
or
or
sub
add
add
(bad)
xor
jmp
ss
sbb
add
in
jo
aaa
sahf
sbb
xchg
icebp
ins
mov
test
add
add
mov
or
add
add
jmp
pop
mov
add
sub
mov
std
ret
cmp
out
xlat
int3
(bad)
imul
pop
inc
ins
nop
cmp
and
retf
push
rol
aas
popa
add
stc
push
add
add
pop
add
mov
fiadd
add
jne
mov
pushf
div
add
add
or
jg
jbe
pop
lods
arpl
or
loop
lock
pop
mov
xchg
cli
add
add
out
or
repnz
add
in
mov
dec
and
int3
adc
pop
test
cmp
or
mov
mov
inc
out
mov
add
das
adc
inc
movs
jnp
loop
icebp
adc
add
mov
mov
jns
int
mov
mov
adc
lea
aam
cld
jnp
ror
add
add
dec
sar
mov
push
mov
add
scas
loope
and
es
lods
daa
add
cmp
cmp
(bad)
mov
add
add
std
loope
dec
icebp
into
sub
das
stc
mov
add
add
xchg
xor
in
adc
inc
sbb
aad
es
jp
sahf
out
and
sbb
add
and
ficom
repz
jne
add
sahf
pop
(bad)
mov
cmp
lods
and
dec
ss
jnp
cdq
fadd
add
cld
ja
icebp
sahf
loop
loopne
test
add
cwde
js
add
rol
pop
or
jb
xchg
cmp
add
jle
add
ins
sub
gs
pop
movs
mov
dec
out
xchg
add
jle
mov
adc
adc
push
add
add
add
or
mov
and
nop
sbb
sar
jp
data16
shl
data16
sub
cmp
xor
add
(bad)
jnp
test
(bad)
jmp
out
add
in
pop
adc
mov
add
add
adc
dec
cmp
xchg
mov
movups
in
pop
mov
mov
loop
add
add
push
adc
addr16
test
lods
mov
shr
add
adc
inc
popf
jbe
(bad)
hlt
(bad)
mov
cmp
add
cli
hlt
sub
xor
repnz
std
and
popa
loop
mov
neg
out
scas
movs
sbb
or
aam
add
add
or
push
in
lds
icebp
jge
jmp
add
add
popf
je
out
mov
scas
cmps
imul
add
pushf
in
jp
sahf
pushf
icebp
retf
mov
add
fld
jl
es
add
jge
sbb
movs
(bad)
jle
rcl
inc
xor
and
add
fsubr
or
scas
pusha
and
mov
inc
add
add
inc
pusha
add
test
xchg
inc
mov
fistp
mov
add
add
cs
pop
dec
adc
out
in
jmp
fcom
test
cmc
push
add
fmul
inc
or
adc
pop
or
fist
imul
mov
mov
add
leave
mov
add
jp
nop
mov
(bad)
cld
push
popf
mov
jo
xor
add
push
mov
inc
repnz
add
inc
xor
shr
hlt
fdiv
cmp
add
xor
sar
retf
fadd
movs
bound
cmp
cmp
jecxz
add
add
movs
jnp
test
add
ficomp
add
fdiv
or
push
or
ret
pop
pop
pop
and
ins
cmp
mov
xchg
les
add
add
inc
out
push
xchg
xlat
mov
dec
xor
mov
or
into
out
mov
retf
shl
add
je
or
add
add
pop
mov
sub
shl
jmp
repnz
call
add
add
push
loope
adc
stos
sub
bound
lfs
jb
stos
add
ins
sub
into
jne
stos
cmps
add
icebp
out
popf
popf
add
test
into
add
mov
jp
mov
push
adc
dec
inc
cmp
ret
das
popf
add
add
dec
neg
mov
mov
mov
int
pop
out
add
add
xor
rcl
adc
loop
and
cld
xchg
sub
push
repnz
psrad
add
add
add
xor
test
test
outs
icebp
addr16
movs
cli
bnd
aaa
push
out
and
aam
movs
or
xchg
mov
fcomp
push
ret
dec
retf
jbe
mov
add
add
add
sub
cmp
cmp
cmp
push
repnz
or
in
jge
int3
pop
pop
or
xchg
in
add
inc
add
add
xor
jle
sub
xchg
push
sar
adc
mov
cmp
sub
dec
out
into
xchg
outs
inc
daa
(bad)
enter
aaa
push
scas
dec
fcomp
rol
add
add
lahf
jl
adc
add
add
dec
jmp
add
mov
outs
or
pop
les
add
push
sti
stos
enter
fs
test
adc
xchg
sahf
in
dec
je
neg
add
out
jmp
clc
fptan
mov
(bad)
add
mov
jmp
sbb
add
movs
xor
dec
adc
dec
out
add
mov
xor
add
mov
js
adc
leave
fdivr
cmp
hlt
add
sub
or
add
add
jb
cwde
pop
mov
pop
les
sbb
xchg
add
mov
add
jg
sbb
xor
mov
push
ss
outs
push
mov
adc
sahf
fwait
rol
or
add
add
cmp
sub
inc
test
mov
xchg
(bad)
aad
and
in
fldcw
hlt
push
or
out
(bad)
in
outs
add
popf
adc
add
xchg
cmps
sub
add
add
icebp
int3
pop
stc
out
mov
je
lock
xor
add
inc
iret
repz
add
cmp
sub
les
out
sbb
add
lods
xchg
xor
add
add
mov
add
pop
int3
pusha
test
lods
mov
idiv
std
adc
jg
add
or
in
add
add
aaa
js
aad
imul
sub
add
or
inc
xor
and
add
cmp
add
pusha
add
dec
fild
add
jns
sbb
cli
sub
inc
add
rcl
fnstcw
pop
pop
mov
not
mov
and
out
add
cmp
fadd
mov
cmp
add
ret
add
inc
out
add
aaa
(bad)
sub
cld
test
popf
sub
(bad)
xlat
test
mov
add
add
and
mov
outs
es
test
push
loopne
pusha
xor
data16
std
mov
add
loop
pop
add
mov
iret
add
add
pop
add
int3
loopne
xchg
int3
retf
aam
mov
out
inc
mov
add
add
jns
(bad)
aaa
ret
fisubr
jecxz
gs
les
sub
sahf
sbb
xor
cli
or
xchg
xchg
mov
out
cmp
test
or
dec
out
mov
jmp
test
add
pop
(bad)
in
iret
mov
push
enter
aam
add
push
cli
push
and
pop
sbb
fs
add
sub
push
test
das
mov
ss
add
adc
add
test
xor
das
ins
je
paddw
popw
cmps
xchg
add
in
pop
cmp
rcr
cli
daa
fldcw
and
lods
and
enter
add
add
add
repnz
pop
jmp
fldenv
jl
cmp
mov
xor
and
dec
xor
cli
mov
add
pop
adc
inc
(bad)
push
jns
inc
fimul
popf
mov
mov
mov
clc
lahf
xlat
ds
xor
sti
arpl
fadd
dec
jmp
aam
add
add
cmps
and
add
stos
call
add
add
gs
add
and
xor
dec
pop
arpl
add
add
enter
inc
icebp
mov
(bad)
out
mov
fadd
mov
mov
add
shl
mov
add
or
outs
xchg
lods
add
sahf
xor
and
jbe
add
and
sbb
xchg
rcr
jmp
iret
add
call
(bad)
adc
add
div
adc
cmc
add
retf
out
adc
add
push
sub
add
cld
push
ret
lods
mov
inc
into
cs
add
jecxz
dec
and
(bad)
xchg
imul
add
cmc
ins
push
inc
or
mov
jl
rol
or
pushf
add
add
add
cmps
or
inc
clc
rcr
push
xchg
mov
neg
ror
cdq
pop
fidivr
arpl
add
pop
sub
add
es
xchg
sub
mov
dec
loopne
mov
add
jns
jne
add
push
test
add
inc
sahf
aaa
sbb
aad
and
push
add
mov
cli
push
xchg
mov
add
clc
mov
ret
shr
lock
jle
jp
mov
das
add
(bad)
dec
add
sbb
iret
jge
xchg
sbb
inc
xchg
lds
push
add
add
mov
sahf
sbb
mov
ja
test
retf
into
in
inc
pop
movs
lahf
add
(bad)
xchg
imul
cmp
pusha
mov
inc
mov
mov
add
mov
jecxz
inc
dec
ins
mov
fstp
pop
mov
fs
dec
jl
pop
add
mov
adc
mov
or
or
add
pop
dec
mul
add
shl
or
jo
stos
data16
xchg
outs
cmp
pop
xor
movs
push
add
(bad)
sbb
sub
retf
cmp
inc
lods
cmp
add
cdq
jno
ds
sti
mov
xor
cs
mov
ror
mov
mov
sub
repnz
in
inc
add
mov
dec
inc
push
pop
and
push
test
add
imul
mov
aam
cwde
cdq
rcl
add
jb
shl
add
and
inc
mov
sub
mov
add
lock
add
data16
inc
add
data16
mov
xchg
add
movs
retf
add
add
add
adc
xchg
lods
test
sbb
(bad)
nop
test
repz
sub
add
add
int
jno
js
gs
arpl
(bad)
or
add
sbb
inc
sub
dec
add
int3
(bad)
xchg
add
mov
add
mov
shl
test
test
adc
pop
out
mov
movs
ret
add
inc
cdq
mov
add
loopne
mov
xor
xor
add
mov
in
mov
mov
lock
loope
dec
test
jge
push
push
sub
or
cdq
dec
data16
or
add
add
add
xchg
add
les
or
(bad)
imul
call
jp
les
adc
idiv
add
inc
jmp
mov
ret
add
push
sbb
add
add
xchg
sub
clc
mov
and
xchg
cmp
aad
add
repz
add
pusha
les
loope
cli
cdq
pop
repnz
pop
stc
pop
es
test
cdq
cld
sub
das
scas
sub
add
mov
dec
call
add
pop
test
push
ret
add
js
stc
popf
(bad)
inc
or
test
mov
add
add
add
dec
mov
test
xchg
mov
mov
nop
cmp
add
bnd
retf
movs
adc
add
data16
pop
add
inc
in
xor
add
add
hlt
(bad)
ror
not
stos
add
fimul
push
std
sub
into
in
dec
loope
add
or
and
or
sbb
add
xor
add
jp
call
stc
cld
add
add
ins
pop
adc
into
iret
repnz
(bad)
xchg
mov
inc
sub
sbb
pop
mov
and
add
lea
or
xor
xor
jmp
sbb
sti
xor
arpl
pop
xchg
int3
lea
fadd
ficom
jb
mov
stos
dec
test
add
add
add
mov
push
mov
mov
arpl
push
mov
mov
mul
inc
push
movs
push
stc
xor
pop
jecxz
add
pop
mov
adc
xchg
and
add
inc
repz
pop
daa
inc
mov
mov
sub
xchg
mov
test
bound
lahf
mov
scas
sbb
add
or
add
add
pop
iret
push
movlhps
imul
jmp
jl
push
jo
add
push
push
xchg
ins
int3
cdq
mov
mov
movs
movs
add
and
stos
cld
pop
push
adc
ds
pop
pop
add
add
add
iret
adc
call
add
push
cli
test
pop
add
sbb
mov
out
add
enter
add
jg
in
xchg
cli
stc
xchg
mov
dec
movs
add
xchg
test
repz
add
int3
bound
jmp
inc
cwde
ja
mov
mov
add
aaa
and
js
jne
dec
jge
add
outs
push
mov
pop
into
cmps
outs
add
lods
add
pop
test
sbb
mov
sti
xor
inc
cmp
scas
cmp
in
add
call
fild
xchg
cmp
inc
fwait
(bad)
ss
mov
push
push
and
(bad)
in
xor
inc
in
inc
add
xor
popf
mov
(bad)
mov
fdiv
add
add
lea
jne
std
movs
les
and
scas
sbb
fs
pop
dec
pusha
adc
push
mov
mov
mov
dec
stos
ror
jne
xor
sub
js
add
push
pop
sbb
pop
xlat
adc
add
xor
repz
int
inc
mov
adc
add
sbb
ja
xlat
out
movs
jg
fisubr
aaa
adc
ins
mov
add
add
xor
pop
push
lods
xor
push
je
add
outs
and
add
icebp
mov
int
movs
add
add
xchg
jle
or
movs
scas
jecxz
add
cmp
push
xor
and
or
add
pop
test
fist
dec
(bad)
(bad)
mov
dec
es
jle
mov
pusha
mov
pop
mov
or
xchg
clc
xor
add
sub
and
pop
xchg
inc
aaa
stc
pusha
add
test
xchg
add
xchg
push
mov
call
nop
out
inc
add
pop
adc
add
push
lahf
cmc
je
mov
call
outs
inc
push
inc
rol
add
les
and
add
mov
(bad)
and
add
shr
int
inc
imul
and
jecxz
xor
cmps
or
fadd
and
add
or
ficomp
int
loopne
sub
es
add
jno
enter
jne
ficom
daa
leave
mov
mov
std
cmovae
scas
and
icebp
and
sbb
adc
lahf
movs
dec
or
rcr
add
mov
xor
or
mov
scas
daa
add
sub
jl
sahf
mov
cmp
jle
cmp
mov
data16
add
mov
test
pop
retf
pop
or
xor
jecxz
enter
movs
cmps
jbe
jecxz
inc
hlt
dec
add
add
pop
pop
add
fsubr
pop
mov
mov
xchg
or
je
mov
push
lea
jns
sbb
add
aaa
mov
inc
push
push
push
dec
scas
mov
es
push
push
and
mov
ss
jne
inc
or
fmul
cmp
mov
pusha
test
retf
push
popa
mov
cmc
xor
aad
add
cwde
add
inc
add
adc
push
nop
pop
jle
je
mov
popf
dec
movs
add
pop
add
and
or
pop
lea
mov
ins
sub
add
add
adc
mov
sbb
mov
ficom
sub
dec
add
add
sti
(bad)
repz
cmp
fwait
(bad)
shr
outs
jle
imul
stos
add
add
je
ret
fwait
adc
and
mov
push
push
out
call
aam
inc
adc
dec
aaa
jge
data16
pop
cmps
iret
pop
or
cld
aas
and
in
pop
add
add
xor
cmp
cmps
add
inc
push
ds
cmp
add
fnstcw
dec
inc
into
add
add
pop
repnz
mov
cmp
mov
ins
push
cwde
mov
psrld
sub
enter
xchg
inc
push
sbb
mov
sbb
add
int3
clc
or
ds
cs
inc
icebp
in
jns
mov
xchg
int
mov
lahf
add
std
lock
(bad)
das
mov
mov
loop
add
cld
std
inc
daa
pop
int3
pop
pusha
jp
add
add
add
(bad)
mov
rcl
sbb
retf
ret
add
xor
xchg
pop
add
icebp
imul
cmp
add
in
jecxz
xor
jo
sub
jmp
or
adc
inc
add
pop
test
mov
in
add
(bad)
jle
daa
dec
ret
mov
or
ds
ss
jl
push
cmp
into
ins
cmps
arpl
or
sahf
inc
add
add
les
mov
popf
ins
outs
shr
push
or
iret
es
mov
ret
add
add
xor
arpl
outs
test
aaa
daa
mov
and
or
xor
mov
jmp
pusha
jl
(bad)
inc
sbb
add
mov
jg
mov
ror
add
mov
add
movs
cmps
lahf
pusha
xchg
pop
lea
sti
or
xor
xchg
jmp
add
bound
sub
add
sbb
shl
sub
lods
std
mov
xchg
or
xor
into
add
stos
fmulp
jle
rcl
add
inc
rol
add
add
xchg
inc
add
mov
push
add
(bad)
add
pusha
xchg
jecxz
inc
cmp
add
in
sub
loope
push
add
popf
retf
and
shl
push
test
in
push
mov
sbb
mov
in
mov
and
add
shl
cwde
add
mov
inc
sar
popa
ret
add
imul
mov
mov
or
ja
rep
adc
(bad)
adc
add
lea
mov
shl
nop
dec
retf
xor
add
jecxz
rcr
sbb
add
add
movs
add
sub
sahf
cwde
cmp
add
xchg
scas
cmp
mov
add
add
idiv
jno
jb
mov
sldt
add
lahf
div
fcom
adc
inc
jle
or
adc
mov
lea
add
outs
mov
dec
mov
and
push
inc
mov
in
add
(bad)
arpl
add
test
fs
push
cmps
inc
push
mov
add
lahf
nop
push
and
add
adc
fwait
push
cmp
daa
mov
adc
or
mov
add
or
daa
push
dec
add
scas
sti
cli
test
mov
adc
and
dec
add
enter
mov
mov
sub
out
xor
cwde
cmp
add
push
mov
sub
xchg
xabort
jl
add
sub
hlt
pop
jnp
inc
in
cwde
xchg
jns
repnz
add
cmp
enter
mov
int3
push
add
sbb
or
push
stos
add
xchg
cmp
pop
add
in
jmp
(bad)
out
pop
add
add
inc
ror
pop
mov
jl
hlt
cmp
ja
jo
loopne
add
add
out
popa
cmps
mov
ret
sar
dec
hlt
jne
or
add
add
fcomp
popf
data16
scas
add
ret
cs
std
add
push
daa
adc
add
or
popa
daa
je
(bad)
mov
pusha
jbe
in
jo
jl
pushf
add
add
xor
cdq
enter
adc
adc
inc
js
enter
add
push
inc
fwait
out
sahf
xchg
inc
addr16
mov
push
mov
ror
arpl
add
outs
push
std
pop
mov
ror
add
dec
pop
sti
mov
sbb
aas
dec
icebp
stos
mov
add
mov
add
call
jp
add
add
add
addr16
bound
adc
lods
xchg
lods
sub
std
inc
push
je
lods
stc
pusha
add
test
scas
test
test
add
fidivr
ret
mov
sub
add
sbb
or
add
add
mov
cmp
cmp
aam
xchg
mov
and
add
in
mov
pushf
pop
lods
push
in
and
and
add
pop
push
inc
or
ins
add
add
ins
(bad)
nop
xchg
pandn
bnd
jl
fstp
loopne
int
into
and
sub
mov
push
add
add
leave
cmp
pop
and
pop
jg
fcomp
js
push
popa
cwde
(bad)
jmp
or
mov
sbb
arpl
add
add
stos
xchg
lods
aam
stc
pop
leave
rcr
cs
inc
test
push
stc
jne
adc
or
lods
rcl
jns
fsubr
jae
std
loop
sbb
aam
test
jb
add
out
or
add
mov
in
repnz
add
mov
nop
ret
int3
pushf
inc
leave
add
adc
shl
test
lods
mov
add
cmp
add
mov
cmp
js
mov
add
and
pushf
adc
pop
cmp
xchg
lock
add
mov
add
ss
pusha
and
fs
imul
dec
mov
jb
repz
add
add
xor
or
popfw
add
pop
loope
mov
bound
xor
popa
add
pop
sub
mov
xor
add
repnz
mov
arpl
pop
out
push
(bad)
add
sti
int3
dec
add
out
movs
add
add
iret
jmp
push
push
and
add
xlat
add
add
mov
iret
bound
jg
and
mov
push
add
jmp
loope
cld
mov
or
add
cmp
cmp
or
xchg
xchg
add
sub
pop
aad
or
cmp
add
add
add
xchg
xchg
pusha
call
jae
loope
mov
adc
out
push
pop
mov
sub
xchg
inc
cmp
hlt
add
add
aaa
push
enter
fsubr
cmc
sub
and
add
aas
add
imul
outs
test
pop
enter
mov
mov
or
(bad)
mov
ret
retf
push
or
add
in
push
inc
cld
or
imul
cmps
add
add
movs
scas
add
dec
pop
xchg
call
inc
dec
mov
es
sbb
xchg
imul
sbb
retf
loope
cmp
pop
sub
push
add
popf
shl
scas
adc
add
xor
je
add
pushf
pop
mov
adc
inc
nop
adc
fist
or
arpl
add
cmps
sub
mov
pop
loopne
add
mov
ja
cmp
nop
adc
xchg
add
push
pop
cdq
adc
xchg
xchg
(bad)
cmps
add
add
ds
add
mov
pop
(bad)
leave
ret
pop
mov
sub
mov
mov
add
pop
outs
sub
add
sbb
aaa
out
xchg
or
add
pop
add
and
nop
add
ja
not
push
loop
psllq
add
clc
add
mov
add
mul
fistp
add
adc
and
pop
js
idiv
mov
test
enter
mov
add
xchg
dec
add
xchg
sub
stos
int3
and
adc
inc
fstp
imul
cmps
add
jb
popf
leave
xchg
adc
xchg
xor
add
test
add
mov
ret
dec
and
enter
mov
cwde
jbe
jae
imul
pop
sti
mov
add
mov
push
cmc
xchg
add
add
pop
add
cmps
mov
repnz
pop
pop
call
add
movs
push
xor
mov
add
add
add
mov
ja
dec
add
pusha
pushf
test
mov
add
test
xor
push
xlat
pushf
add
lock
sub
and
xor
add
add
or
jnp
add
xor
cli
scas
pop
popf
push
add
cmc
cmp
fcmove
in
pop
mov
adc
add
dec
imul
mov
(bad)
add
add
jbe
dec
mov
data16
xor
movs
jne
add
fbstp
rcl
daa
xor
repz
mov
xor
ja
enter
add
add
push
xchg
mov
jno
push
(bad)
(bad)
fmul
mov
test
xor
dec
arpl
dec
fidivr
jnp
(bad)
outs
inc
sbb
add
adc
mov
lahf
imul
cwde
add
dec
es
dec
add
nop
imul
dec
and
mov
jecxz
int3
outs
sub
cmp
imul
jbe
xchg
test
adc
add
sbb
dec
dec
cdq
retf
cmp
and
fsubr
jno
int3
shr
add
add
lods
test
popf
inc
sahf
ror
leave
sbb
rol
call
scas
add
add
hlt
dec
cld
adc
inc
fidiv
mov
add
add
daa
adc
popf
push
jg
cdq
sbb
pop
(bad)
loope
scas
(bad)
mov
mov
mov
cmova
add
xor
mov
push
add
outs
jp
pop
add
add
push
jo
mov
dec
bound
dec
add
add
mov
cmps
cmp
push
ret
daa
sub
xchg
cmps
add
inc
lods
pop
add
xor
arpl
loope
pop
addr16
aas
sub
dec
and
mov
jno
pop
add
addr16
push
jno
inc
icebp
gs
add
sbb
aam
add
pop
xchg
movs
add
xor
sub
add
repnz
or
fdivr
add
add
inc
adc
popf
aas
test
or
sub
inc
and
pop
xchg
cli
or
sti
(bad)
jae
lods
sbb
add
jg
iret
call
add
add
dec
jmp
push
pop
adc
xor
jnp
jmp
js
pop
xchg
push
mov
jecxz
lods
sub
push
mov
sbb
mov
add
mov
add
lock
dec
call
dec
add
bound
test
jp
and
or
add
aas
dec
pop
enter
push
into
data16
mov
int3
xlat
outs
movs
cmps
dec
test
lahf
sbb
push
outs
add
in
enter
xchg
in
inc
inc
(bad)
out
sldt
sbb
add
add
dec
xchg
mov
cmp
add
jae
inc
scas
jge
jl
pusha
stos
int3
in
std
into
inc
out
add
jl
xor
pop
hlt
stc
mov
fld
and
cmps
cli
rcl
js
test
and
fstp
inc
pop
(bad)
jp
outs
popf
xchg
dec
push
loope
add
jmp
test
add
clc
add
add
inc
int3
popa
movs
mov
xlat
cs
mov
cmp
lahf
mov
mov
jmp
add
mov
push
fsub
push
mov
and
idiv
es
and
pop
xor
out
pop
loop
add
fnsave
mov
fwait
push
imul
jmp
mov
or
ret
fs
add
add
add
mov
xchg
bound
call
mov
test
add
shl
inc
mov
add
xor
jle
xor
add
rcr
in
fld
add
sahf
(bad)
fs
les
pop
test
cmp
aad
adc
adc
jl
add
jmp
add
add
xor
stos
push
test
out
enter
cmps
clc
or
pop
mov
out
push
add
jl
push
adc
mov
mov
add
frstor
add
mov
mov
fs
add
fadd
clc
xor
mov
add
inc
pushf
sub
xor
inc
xchg
mov
clc
dec
add
add
add
add
pop
bound
int3
gs
stc
cmp
ror
lock
adc
sbb
xchg
sub
inc
dec
mov
push
jle
pop
repnz
dec
jne
mov
repnz
xlat
add
outs
sub
xor
cmp
out
fild
add
inc
cmps
sbb
add
add
inc
inc
mov
loope
adc
adc
sub
scas
mov
pusha
(bad)
pop
cmp
sbb
add
cmps
(bad)
shl
ret
pop
jl
int
fwait
leave
in
xor
aad
inc
mov
frstor
xchg
add
jle
call
mov
sahf
rol
jl
in
add
add
in
push
push
hlt
pop
cmps
pop
mov
pop
data16
jmp
mov
and
sub
mov
mov
jl
adc
add
call
xchg
mov
mov
add
fbld
bound
adc
dec
mov
add
add
add
es
push
mov
aam
aas
inc
enter
mov
jnp
sbb
call
ds
adc
leave
add
aam
int3
sub
test
add
mov
sahf
jmp
int3
lahf
inc
cwde
add
add
add
cmps
ucomiss
inc
sbb
ss
inc
jbe
je
fldcw
pop
inc
mov
ins
arpl
mov
push
adc
cmps
adc
add
not
fld
add
movs
add
add
repnz
xchg
pop
ins
push
bound
add
scas
sub
cmp
scas
rcl
ja
int
test
pusha
dec
push
add
or
sbb
dec
pop
push
inc
cs
add
add
add
ror
push
call
add
jne
das
repz
mov
inc
push
scas
pop
add
xchg
mov
aad
cwde
mov
xlat
mov
push
adc
add
add
ds
mov
jo
xor
ror
xor
push
pop
aam
loop
repz
dec
sahf
pop
and
xor
(bad)
call
stos
addr16
mov
add
adc
fistp
mov
dec
add
add
push
push
mov
pop
cmp
lahf
movs
inc
test
data16
push
dec
push
out
in
xchg
add
iret
mov
xchg
mov
add
add
add
je
cdq
cmc
dec
scas
jle
push
xor
ja
or
int
add
add
aam
stos
and
out
in
data16
jno
inc
add
add
int
pop
adc
sbb
test
push
or
push
push
ror
sbb
jo
xchg
int3
xchg
hlt
add
pmaxub
add
push
rol
push
inc
push
pop
std
add
push
add
fnsave
add
add
add
xor
ss
lock
int
es
into
inc
je
cmp
lds
mov
add
dec
sahf
mov
xor
dec
or
mov
add
add
outs
push
(bad)
ficomp
loope
cmps
xchg
xor
jle
add
dec
dec
ds
repnz
add
and
test
add
mov
dec
lods
fldcw
rol
mov
lds
fmul
xor
mov
dec
jne
add
add
mov
sub
mov
inc
mov
xchg
add
mov
and
lahf
pop
mov
jl
push
add
add
int
mov
adc
xchg
rol
mov
loop
sub
shl
push
std
mov
add
out
fld
and
pop
icebp
xchg
jle
push
cmp
xchg
inc
add
add
test
sbb
imul
scas
das
pop
(bad)
out
sti
xor
inc
or
adc
add
cmp
loope
xor
dec
fsubr
mov
shl
shl
lods
push
sub
gs
lahf
outs
xchg
test
call
xor
sahf
xchg
mov
fwait
mov
or
cmp
ins
fisubr
add
test
dec
mov
gs
ficomp
add
add
inc
scas
push
sub
retf
inc
call
sbb
cmp
pop
cmp
xor
add
or
add
dec
clc
add
sbb
add
sbb
out
pop
outs
gs
das
addr16
retf
and
add
add
mov
cmp
sbb
add
add
clc
push
aaa
cmp
xchg
add
stos
sub
je
inc
mov
and
jb
out
mov
add
out
sbb
cld
fbld
lea
adc
fs
adc
xor
shl
ficom
lock
pop
ret
jo
sbb
push
in
add
cmp
push
jmp
mov
add
test
mov
add
add
adc
sub
adc
sbb
add
add
enter
mov
leave
inc
popa
mov
push
sub
pusha
repnz
gs
xchg
imul
ret
pushf
xchg
mov
or
test
loopne
(bad)
ins
sub
retf
add
gs
add
add
pop
test
or
ins
push
adc
inc
xchg
dec
int3
test
rol
lahf
jmp
or
daa
cwde
stos
int3
inc
icebp
push
add
(bad)
and
dec
retf
sub
mov
add
add
outs
ror
sub
enter
cmp
add
outs
sbb
mov
sti
mov
adc
xor
jo
mov
add
rcr
rol
sub
jl
add
cli
shr
add
add
and
dec
out
int3
and
dec
mov
dec
sub
xchg
jbe
push
shr
mov
adc
cld
out
xor
lock
aam
mov
jo
mov
sbb
inc
mov
imul
mov
fnstsw
add
shl
(bad)
movs
scas
daa
push
xor
aam
xchg
add
add
and
add
sub
inc
add
js
scas
addr16
sar
cmp
in
adc
js
add
add
push
jg
cwde
dec
mov
iret
ret
in
push
imul
add
mov
sti
mul
add
add
sahf
xchg
pop
pop
(bad)
jbe
and
push
int
jmp
xor
add
movs
pop
popaw
cld
adc
(bad)
ret
add
add
aad
xchg
sub
das
pop
loop
div
mov
pushf
in
xchg
arpl
add
leave
add
push
push
jb
call
add
add
loope
pop
push
jae
add
xor
nop
ret
add
push
add
dec
aaa
fisubr
xchg
push
mov
add
push
add
je
ret
aad
mov
cs
add
repnz
cmp
repnz
mov
add
push
ret
es
and
test
xor
jmp
xchg
add
mov
mov
pop
jge
xchg
pop
add
sbb
or
dec
je
sahf
xchg
add
test
outs
push
ja
inc
and
or
pop
mov
ret
add
add
les
ds
stos
dec
in
add
mov
add
xchg
fnstenv
(bad)
jmp
adc
loopne
loop
fidiv
add
pop
sar
add
fld
inc
mov
std
shl
add
add
movs
push
jne
pop
leave
mov
inc
nop
ficom
add
add
mov
hlt
in
xor
stos
pop
nop
jge
mov
jg
in
cmp
mov
scas
xchg
ss
jbe
add
movs
cmp
loopne
mov
and
or
and
add
add
push
es
jle
js
xor
sbb
pop
mov
or
mov
inc
clc
rol
dec
pop
into
pusha
adc
add
loopne
cmp
sub
adc
add
mov
pop
stos
fcomp
stc
fwait
add
and
int
add
mov
(bad)
push
xchg
inc
(bad)
movs
scas
or
lahf
add
jl
sti
cmps
enter
add
add
sbb
mov
jecxz
repz
mov
leave
loopne
sbb
mov
lods
gs
dec
outs
adc
lock
and
fisub
xor
lock
out
add
ins
ss
fs
icebp
add
add
add
jb
jnp
in
(bad)
jmp
pusha
mov
repz
ds
adc
jl
out
test
stos
in
add
test
cs
outs
rol
add
add
dec
pop
push
xor
mov
int3
call
je
jmp
sub
repz
add
inc
pushf
add
push
movs
add
dec
add
mov
add
dec
xchg
add
add
into
sub
add
jno
lds
dec
repnz
xor
adc
inc
inc
push
leave
xchg
push
pop
icebp
jne
sub
test
add
add
pop
mov
js
pusha
cmps
repnz
adc
inc
add
jecxz
add
add
sub
xor
out
mov
mov
sbb
or
mov
add
daa
dec
add
push
clc
mov
in
shl
nop
call
mov
add
dec
add
add
add
mov
sbb
sbb
sbb
fadd
inc
aaa
loop
bound
cmp
jp
push
or
jns
mov
adc
cwde
inc
inc
cmp
shl
lea
add
add
mov
aaa
daa
fld
jns
es
xchg
cmps
movs
pop
scas
push
add
(bad)
(bad)
add
cmps
mov
int
push
add
add
add
jbe
adc
call
push
dec
les
sub
test
lahf
call
pop
add
or
xchg
push
pop
jbe
push
sub
cmc
cs
jl
ja
arpl
scas
add
jno
mov
jb
jle
add
dec
mov
stos
and
mov
add
inc
clc
mov
dec
ss
add
in
mov
aaa
cmp
dec
pop
sub
dec
adc
add
xor
out
jmp
(bad)
cmps
xchg
pop
inc
add
add
lahf
enter
and
xchg
push
jecxz
mov
xor
lods
repnz
int3
mov
xor
aaa
mov
adc
add
cmp
xchg
inc
mov
out
add
add
push
cmps
cmps
ins
stos
(bad)
mov
loope
cmps
cs
(bad)
clc
add
add
cld
clc
in
scas
fstp
ror
dec
out
call
es
inc
push
sbb
sub
rol
dec
sub
lahf
fwait
add
or
mov
es
repz
xor
add
shl
jb
inc
test
mov
adc
add
fild
mov
add
add
(bad)
shr
retf
aas
inc
mov
mov
gs
nop
pop
scas
xor
mov
lahf
fiadd
pop
pushf
xor
ja
mov
push
add
mov
ins
add
sub
cmp
leave
dec
pop
jnp
add
add
jmp
lods
cmps
stc
cmps
sub
or
bound
in
(bad)
adc
push
fstp
daa
je
add
xchg
es
mov
lahf
cmp
add
add
and
scas
fimul
std
mov
aam
add
data16
jne
xor
add
add
loop
add
cmp
stos
mov
or
jp
jp
add
out
mov
add
js
mov
xor
sub
fiadd
mov
retf
ffree
adc
add
push
call
mov
hlt
rcr
pop
ror
add
enter
mov
aad
repnz
add
add
or
leave
sub
adc
std
xchg
add
add
lds
gs
outs
sub
loope
or
pusha
pop
pop
outs
cmp
clc
add
fmul
add
cmc
xchg
repnz
loop
cdq
mov
jb
sldt
add
out
xor
xchg
lods
ror
adc
or
into
push
fisttp
inc
loope
push
loope
iret
adc
mov
push
pop
retf
mov
or
mov
lock
or
fstp
and
rol
in
jmp
shr
aad
into
mov
add
add
mov
aas
pop
bound
pop
and
add
add
jbe
nop
pop
jl
xor
and
and
shr
fidiv
sahf
test
xchg
and
adc
push
adc
add
ret
pop
cmps
aaa
loopne
cwde
sbb
jmp
push
xor
out
sti
dec
jne
add
push
mov
add
jo
adc
xchg
ds
loop
aaa
add
add
ror
aaa
inc
inc
ret
mov
adc
and
fmul
xchg
jne
push
jo
mul
xchg
pop
ficom
add
add
mov
add
jo
jne
push
push
add
in
mov
or
fwait
es
mov
repz
cld
mov
pop
mov
mov
rol
pop
pop
test
outs
mov
std
dec
mov
cdq
xor
int
push
hlt
add
add
ret
shl
out
push
add
push
mov
add
lods
aas
add
out
in
push
xchg
js
xor
stos
popf
sbb
imul
add
movs
sbb
xchg
cmp
mov
inc
xor
dec
enter
push
add
mov
mov
xchg
pop
add
add
daa
test
push
dec
or
rcl
and
adc
in
xor
loop
and
adc
das
fld
dec
adc
xor
inc
add
arpl
add
and
dec
stc
inc
inc
mov
repnz
add
loopne
mov
add
jmp
sbb
outs
ss
stos
outs
retf
pop
xor
jbe
cs
add
inc
test
xchg
push
add
mov
mov
mov
mov
sahf
mov
inc
add
dec
sti
cmp
xchg
add
pop
out
rcl
inc
inc
lods
lods
shl
mov
add
mov
add
not
cmp
add
add
add
dec
cld
movs
cmp
int3
mov
dec
jo
in
stos
jbe
into
fnstenv
and
call
sar
sub
les
add
pop
mov
sub
cdq
add
scas
movs
and
mov
mov
addr16
(bad)
jp
add
mov
mov
icebp
jp
stc
imul
dec
mov
in
ficom
fcmovne
inc
push
mov
add
div
add
mov
add
add
ficom
call
inc
lea
sbb
or
cmp
out
test
ret
push
loope
dec
inc
sahf
fcom
xchg
data16
scas
iret
dec
adc
mov
cld
inc
aas
sub
sbb
inc
pusha
cmp
mov
add
add
inc
outs
dec
cmps
out
gs
add
add
and
imul
or
and
push
xlat
retf
pop
dec
and
js
mov
mov
fiadd
push
push
aad
out
add
stos
fcom
lock
add
add
js
cmps
and
ret
mov
mov
mov
jae
fdiv
cs
sahf
gs
mov
xchg
int3
adc
add
xor
cs
out
ret
push
or
cmc
arpl
int3
in
inc
fidiv
mov
int3
cdq
(bad)
stos
data16
daa
pop
jo
adc
mov
add
push
adc
push
fld
add
aam
repnz
sti
add
loop
mov
add
test
push
pop
mov
or
add
xchg
xchg
add
xchg
add
xchg
stc
jmp
xchg
mov
push
add
add
add
xor
aas
cmp
add
rcl
sub
(bad)
call
mov
pop
sub
int3
in
add
xchg
mov
dec
rol
add
add
add
and
sub
in
mov
adc
inc
fisttp
mov
adc
stos
fimul
mov
(bad)
add
out
add
push
hlt
mov
add
cmps
and
dec
and
into
daa
lock
pop
movs
stos
retf
mov
out
add
popf
(bad)
je
add
xor
add
sti
pop
pop
jb
retf
mov
(bad)
jg
sbb
jle
add
jmp
mov
mov
sub
inc
in
add
add
aad
cmp
call
mul
loope
cs
or
jmp
arpl
icebp
sbb
mov
sub
push
sbb
jmp
mov
adc
nop
sub
dec
add
ds
adc
inc
xchg
xor
xchg
das
xor
loop
add
add
or
fucom
fs
jmp
pop
cmp
dec
(bad)
ret
add
lea
rol
jb
sub
cdq
add
shr
push
out
push
xchg
pop
loop
adc
mov
inc
dec
js
sbb
pusha
pop
add
mov
mov
sub
add
ins
cmps
pop
arpl
add
outs
daa
lds
add
jmp
das
daa
mov
jp
sbb
jp
rcl
add
add
jb
nop
fwait
out
pop
shl
and
add
add
lods
or
out
mov
es
or
dec
jns
adc
das
sti
fadd
mov
add
rcl
sti
cmc
add
test
out
add
add
rcr
leave
mov
push
retf
mov
or
add
push
imul
add
pop
fwait
sub
aaa
imul
mov
ins
out
sbb
or
dec
out
(bad)
data16
jl
lds
add
not
mov
inc
xor
jle
push
lock
cmps
cmp
loopne
add
add
sbb
cmp
mov
iret
lods
stos
jmp
add
add
cdq
or
add
int3
inc
lock
(bad)
fbstp
fisttp
in
cmps
adc
jl
pop
add
add
cmp
mov
aam
sub
xor
add
sbb
add
iret
or
adc
xor
add
sti
xor
loop
push
pushf
in
pavgw
xlat
jg
ds
jmp
and
add
adc
clc
sbb
jo
or
adc
stos
or
add
test
jns
inc
movs
pop
xlat
fisub
mov
add
cmp
les
ja
scas
loope
add
add
mov
inc
shl
lods
mov
add
add
add
or
and
sbb
stos
cmp
test
sbb
cdq
out
icebp
(bad)
(bad)
inc
add
mov
inc
cmp
add
add
push
dec
retf
adc
mov
mov
dec
push
add
int
xor
ret
xchg
fidivr
xor
das
lods
push
lea
dec
push
pop
(bad)
dec
sti
add
add
lods
mov
leave
movs
push
fst
add
popa
add
add
loopne
ins
and
call
pop
mov
or
je
push
and
mov
js
ja
and
mov
mov
add
and
jp
adc
fadd
add
lock
int3
add
mov
add
add
ins
stos
pop
or
push
pop
test
pop
ins
dec
xchg
mov
addr16
push
fbld
pop
aad
sub
leave
stos
sbb
inc
push
or
pushf
int
and
pop
fwait
shr
adc
dec
mov
into
fimul
xchg
mov
add
dec
scas
push
push
jb
xor
out
adc
dec
add
sti
in
dec
push
mov
add
xor
add
lock
pop
cld
push
mov
add
xchg
inc
call
and
rol
leave
dec
push
mov
ror
add
repz
add
dec
push
mov
jno
mov
push
mov
fidiv
jle
pop
in
(bad)
stc
test
pop
add
mov
es
mov
mov
push
pop
mov
mov
jecxz
add
add
add
add
es
sub
cmp
push
xchg
push
aaa
push
loopne
(bad)
idiv
call
xchg
mov
movs
aam
adc
cmp
xchg
jo
add
mov
dec
push
and
add
add
ss
popa
xchg
das
xchg
sub
cs
add
and
or
or
pusha
mov
jns
cdq
out
add
ret
loopne
and
add
pushf
imul
and
add
aam
mov
nop
add
add
adc
jmp
xchg
out
mov
imul
push
dec
ja
add
cwde
add
add
add
and
mov
inc
stos
push
add
lods
jg
pop
dec
mov
xchg
add
dec
repnz
add
add
or
call
gs
out
add
mov
add
inc
mov
dec
pop
cwde
imul
push
add
(bad)
jbe
jecxz
and
mov
inc
ins
jle
add
and
mov
pop
cmp
inc
xor
add
out
jno
add
add
mov
jae
jle
jl
add
and
cmp
add
xchg
add
add
sbb
and
push
jmp
js
or
lock
daa
out
ret
xchg
mov
add
enter
mov
(bad)
repz
es
push
add
push
add
or
in
scas
push
fs
scas
dec
add
cmp
ins
xchg
outs
add
pop
xor
js
push
test
lods
fdivr
xlat
sub
sub
dec
pop
call
mov
add
inc
jmp
inc
dec
int
int
inc
xchg
mov
aam
add
add
mov
les
out
stos
out
fist
mov
adc
pop
div
add
call
fdivr
arpl
and
pop
push
ins
add
add
push
or
cmp
add
test
repnz
int
add
sbb
in
pushf
mov
outs
enter
add
mov
and
mov
loop
les
mov
popa
or
push
add
ins
add
sub
adc
add
je
mov
mov
and
ds
cmc
lock
cmp
xchg
mov
cli
imul
adc
and
lahf
stc
jmp
dec
cdq
aad
xchg
add
mov
retf
clc
inc
push
pop
sbb
push
test
add
shl
in
mov
lods
fs
xchg
add
add
(bad)
and
add
add
mul
lods
xchg
xor
mov
cmp
mov
add
add
ret
ins
test
test
sbb
push
inc
sub
mov
cmp
push
in
sub
push
add
add
add
loope
adc
pop
test
mov
xor
in
outs
adc
lods
repnz
je
push
sbb
inc
add
pop
(bad)
push
fidivr
add
xor
movs
lahf
add
inc
fild
jp
in
pop
add
lds
xchg
push
jne
arpl
sub
mov
lock
push
cwde
aam
add
add
sbb
sub
std
adc
mov
push
add
push
(bad)
inc
add
pusha
or
or
outs
cwde
mov
mov
lahf
nop
push
sub
add
es
xchg
push
fwait
scas
pusha
pusha
push
out
cmp
cmp
sub
shl
js
mov
add
mov
add
and
imul
sbb
xor
cmp
(bad)
add
add
mov
sub
mov
dec
mov
cs
movs
xchg
add
jmp
in
dec
xchg
add
add
sbb
outs
mov
push
test
mov
add
pop
cmp
push
jecxz
add
sti
popa
movs
ror
and
cmp
mov
(bad)
imul
xchg
cmc
push
add
add
adc
jne
mov
popa
popa
lahf
fnstsw
pop
test
dec
repz
clc
lods
mov
cld
push
call
inc
outs
add
add
mov
les
jge
jge
sahf
nop
out
cmp
fbstp
pusha
out
add
add
add
mov
xor
fcom
lock
add
push
dec
cdq
je
scas
add
mov
fs
push
cmp
loop
push
cmps
lods
cwde
add
inc
mov
cmp
sbb
hlt
xor
add
add
xchg
out
or
xchg
cmc
xchg
fisub
jbe
pop
add
sti
fmul
repz
add
dec
push
add
add
dec
jmp
add
add
push
mul
xchg
ins
lods
out
out
ror
ret
dec
xchg
pop
bound
sbb
fimul
add
outs
add
lds
cmps
add
xchg
inc
add
cmp
dec
sbb
fld
push
add
icebp
fsubr
jae
adc
sub
and
add
add
add
xchg
mov
dec
and
add
mov
mov
or
add
or
sub
add
movs
pop
mov
add
fild
cld
xchg
add
add
adc
jae
jg
aad
call
xor
test
pop
je
add
add
add
jnp
jl
sahf
das
sti
jmp
sbb
(bad)
mov
pop
adc
dec
dec
enter
add
add
mov
xor
adc
push
icebp
inc
adc
sub
(bad)
icebp
mov
packuswb
xchg
xchg
xchg
add
mov
add
aam
in
fidivr
add
add
xchg
sub
fmul
ret
add
aam
and
xor
add
cmps
ss
test
xchg
daa
xor
iret
shr
mov
mov
add
je
stc
sbb
or
adc
pop
ds
mov
push
add
xor
xchg
add
jns
jl
dec
ss
scas
xor
repnz
jnp
out
sbb
(bad)
in
add
pusha
fimul
jno
adc
add
inc
sub
add
fst
mov
movs
adc
ins
mov
bound
scas
ds
sbb
and
jle
add
inc
lods
in
(bad)
and
cld
pop
add
push
aaa
mov
jmp
add
mov
jbe
cmps
sub
add
retf
sub
test
add
mov
mov
push
jmp
cmps
mov
movs
push
idiv
(bad)
ja
int
cwde
pop
push
ins
mov
clc
push
nop
or
mov
push
pop
xlat
rol
shr
out
es
in
icebp
rcl
add
push
sub
inc
aaa
movs
jmp
iret
(bad)
xor
jmp
dec
add
outs
into
jbe
mov
add
dec
jne
jo
aam
jmp
pop
rol
popf
in
mov
cmp
add
je
xlat
sbb
mov
addr16
arpl
jbe
add
add
test
std
mov
sbb
cmp
xchg
push
test
pop
cwde
sbb
add
bound
xchg
add
add
ja
stos
repz
test
add
dec
std
jmp
scas
push
cwde
pop
nop
fstp
(bad)
mov
push
jb
fiadd
add
jge
inc
sbb
sti
cmp
xchg
mov
pop
add
icebp
add
out
(bad)
inc
add
add
add
dec
ror
aam
ret
mov
in
pop
(bad)
xor
or
pcmpeqd
mov
scas
lds
cmp
xor
add
stos
out
or
add
test
(bad)
lds
add
add
sub
mov
and
test
cmp
push
es
arpl
xchg
shl
ret
dec
ficomp
stos
push
or
jo
sahf
cmp
push
lea
add
nop
mov
stos
out
push
mov
mov
add
(bad)
sar
inc
out
or
pop
add
add
add
or
out
inc
fwait
addr16
retf
inc
cmp
add
les
lds
js
add
bound
push
add
add
jmp
int3
add
fsub
mov
push
loopne
fmul
cwde
or
ds
inc
shl
add
adc
push
nop
outs
in
xchg
add
std
inc
cmp
dec
dec
popa
test
out
aad
add
add
or
or
pop
add
add
jbe
in
lock
enter
sub
cmp
jae
add
jmp
inc
push
add
xor
add
mov
adc
retf
stc
loope
bound
call
or
add
rol
push
add
mov
add
ins
xchg
retf
nop
push
call
mov
sub
std
xchg
out
mov
and
or
add
add
mov
add
mov
or
into
mov
dec
int3
fsubr
add
add
add
sbb
sbb
mov
and
pop
outs
or
push
sbb
scas
hlt
(bad)
call
fstp
mov
les
jb
inc
iret
shl
pop
test
push
adc
add
aaa
mov
rol
fucomp
not
test
rcl
pop
mov
movs
add
mov
fsubp
test
add
push
stc
cmc
(bad)
(bad)
js
idiv
adc
add
retf
or
push
adc
adc
fsubr
xchg
movs
arpl
nop
and
cmps
pop
mov
push
cmp
arpl
jmp
xchg
add
test
test
(bad)
repz
pushf
sbb
add
icebp
or
add
(bad)
loopne
xchg
jbe
fistp
add
xor
pop
adc
pop
add
and
push
add
shl
sub
push
add
jmp
or
ins
add
mov
mov
or
les
mov
inc
rol
and
mov
mov
mov
hlt
mov
shr
jne
pop
mov
clc
nop
jl
fcmovne
daa
add
(bad)
adc
clc
dec
hlt
add
add
outs
scas
popa
lds
enter
jb
out
movs
in
mov
call
xchg
fiadd
xor
cmp
mov
add
repnz
and
cld
nop
cmp
enter
pop
push
sahf
sub
add
add
cmp
pusha
add
bound
fimul
push
stos
out
fwait
mov
and
add
xchg
add
add
and
je
cmps
sub
or
cmp
rcl
and
inc
mov
add
or
sbb
jp
js
adc
jne
cmp
adc
sar
popf
xchg
sub
add
aaa
stos
cli
loopne
rol
(bad)
pop
hlt
adc
mov
or
xchg
sub
cs
mov
add
movs
test
add
and
(bad)
jp
sti
mov
add
mov
xchg
(bad)
and
cmps
and
add
cmp
xchg
mov
inc
ins
push
mov
pop
in
bound
add
sub
add
inc
or
jl
sbb
pop
fwait
je
mov
test
add
and
int
push
outs
rcl
loop
adc
loope
ret
push
jl
push
fcmovbe
cmps
sbb
repz
add
add
in
outs
or
push
aam
cmps
addr16
call
std
xchg
push
cmps
jnp
xor
add
pand
ja
inc
cmp
adc
add
data16
mov
mov
mov
or
add
pop
pushf
and
test
push
fstp
enter
loopne
add
add
cmp
nop
sbb
out
inc
les
aam
mov
(bad)
icebp
call
popa
out
pop
add
xchg
mov
or
pushf
jb
stos
cmps
pop
and
sub
(bad)
and
sbb
fsub
push
jmp
data16
lea
call
adc
add
add
call
pop
mov
pop
out
or
push
add
add
add
add
bound
adc
das
mov
pushf
fimul
(bad)
dec
jle
push
dec
pop
sar
inc
sub
test
fcomp
push
dec
leave
pop
(bad)
xlat
dec
jne
dec
mov
pop
jmp
mov
pop
and
jg
outs
add
cmps
ins
mov
add
dec
jnp
outs
adc
xchg
enter
ror
sub
jae
adc
add
cmp
iret
cmp
or
repnz
add
add
cli
cmp
dec
addr16
fstp
jo
fcom
add
lahf
add
add
add
add
outs
push
cmp
inc
jns
loopne
adc
(bad)
ret
add
aam
cmc
scas
and
pop
push
dec
mov
dec
dec
loopne
fwait
pand
lods
jbe
pop
sbb
add
clc
add
add
fld
out
adc
mov
ins
add
add
add
sbb
sbb
jbe
mov
cmps
adc
mov
adc
xor
sbb
add
xlat
mov
aam
je
pop
add
add
add
add
dec
sbb
jg
pop
jle
sbb
lea
mov
ret
lods
inc
test
loope
pop
mov
push
mov
xor
bound
sbb
add
mov
sbb
scas
push
bound
add
add
jns
fwait
sub
add
test
aas
push
nop
xchg
mov
dec
pop
out
xchg
jp
out
add
push
jno
sbb
dec
pop
mov
mov
mov
mov
inc
add
(bad)
mov
dec
mov
cmps
stc
fbld
in
test
sub
and
inc
test
dec
jno
xchg
aad
retf
verr
ja
add
mov
push
scas
mov
or
mov
add
cwde
cmp
sahf
das
cmp
pop
pop
add
lock
jne
add
add
add
int3
repnz
add
jmp
jecxz
pop
mov
(bad)
push
add
cmp
fwait
jbe
stos
pop
jne
inc
xchg
and
push
push
inc
lock
add
ret
int3
aam
mov
scas
stc
fst
lock
lahf
pusha
pop
adc
pop
or
sbb
add
add
jno
xor
test
popf
retf
push
add
add
data16
fadd
out
sub
jg
in
add
add
xchg
ins
daa
fwait
aas
xchg
inc
mov
aad
sub
imul
inc
and
loop
cs
add
fidiv
and
cmc
jl
xor
add
cmp
xor
mov
jnp
mov
je
iret
or
add
jbe
outs
sub
xchg
out
pop
call
in
mov
setb
push
push
inc
add
sbb
pop
cmp
(bad)
jmp
push
add
lea
add
add
cmp
and
or
js
jmp
imul
add
pop
lea
shl
lds
adc
(bad)
pop
xchg
sbb
imul
loopne
jae
std
jae
add
cmps
dec
scas
ret
adc
add
pop
iret
jg
sbb
sub
adc
ret
out
sub
add
ins
(bad)
loop
add
into
inc
pop
aaa
sbb
imul
sbb
rol
add
push
(bad)
or
pusha
in
lods
retf
add
and
mov
add
xlat
popa
(bad)
arpl
mov
fld
add
inc
xchg
dec
push
jmp
add
jmp
test
adc
add
aam
mov
out
xlat
rcr
mov
cmp
xor
add
or
jns
cmc
in
mov
add
pushf
add
inc
or
pop
or
jg
add
add
xor
xchg
call
loopne
cli
mov
inc
add
add
add
jno
xchg
inc
pusha
dec
xchg
fs
cwde
sub
xchg
sbb
xor
sub
sbb
ror
out
add
loope
inc
pop
xor
je
cmp
add
pusha
or
add
add
dec
lahf
dec
mov
imul
sbb
jp
add
lock
in
push
jmp
add
jne
jg
xor
call
add
dec
add
add
add
in
lahf
enter
pop
and
(bad)
out
add
xchg
(bad)
adc
lods
inc
pop
add
(bad)
mov
in
push
add
adc
hlt
mov
jne
nop
pop
inc
sub
mov
add
jnp
jno
sub
xchg
jg
pop
inc
add
aad
adc
push
pop
add
(bad)
xchg
inc
das
inc
outs
ins
dec
sahf
fist
test
shr
cmps
imul
lods
add
ror
(bad)
jecxz
pop
add
add
mov
dec
mov
lods
adc
xchg
out
enter
add
inc
mov
rol
movs
cli
sahf
imul
pushf
aad
add
mov
add
add
retf
xchg
mov
xchg
out
xchg
or
inc
movs
pop
mov
add
jp
sub
add
cmps
(bad)
mov
lock
imul
add
xchg
imul
js
add
fwait
xchg
mov
ficomp
aaa
mov
add
push
xlat
loop
rcr
outs
popa
mov
dec
aam
int3
pop
xor
xchg
cmp
add
add
sbb
in
or
pop
push
xor
aam
clc
fistp
ror
add
add
mov
out
pop
mov
fisttp
aad
ja
sub
test
popa
mov
xor
jp
add
out
aas
sbb
aaa
adc
add
cmp
test
(bad)
sbb
das
add
jns
fistp
vmwrite
dec
add
add
pop
enter
das
add
add
pop
xor
mov
rcr
sub
arpl
fwait
add
sbb
cmc
inc
ss
add
mov
out
mov
arpl
push
sbb
add
cmp
push
fisub
xchg
jne
sbb
(bad)
cwde
sub
cmp
cwde
add
mov
inc
call
ret
mov
gs
hlt
jmp
push
sahf
mov
add
add
(bad)
adc
stos
imul
lea
add
dec
ins
and
das
or
ja
icebp
push
outs
lea
add
add
gs
sahf
shl
lahf
push
imul
ins
test
repz
push
jmp
add
pop
popf
mov
mov
popa
sahf
xchg
add
add
sub
add
add
js
xchg
mov
pop
call
or
repz
inc
sbb
(bad)
lods
retf
test
jns
add
add
xchg
add
cmp
pop
scas
cmp
cmp
and
loopne
jns
inc
sub
nop
sub
and
popa
mov
mov
mov
add
add
sub
jmp
add
pop
add
xlat
xchg
add
stos
mov
add
add
in
add
add
into
pop
xor
add
arpl
mov
mov
add
add
adc
scas
inc
push
dec
hlt
xor
jmp
lds
add
add
mov
add
out
jmp
add
and
add
jbe
addr16
addr16
dec
push
pop
das
lock
add
mov
retf
and
retf
repz
int
push
or
pop
scas
in
jnp
scas
add
fadd
inc
sub
sub
add
add
add
sbb
in
pop
jecxz
add
daa
call
aad
xlat
bound
dec
and
push
push
rol
add
add
add
out
pop
imul
sbb
aad
aad
jno
jp
jmp
into
cs
dec
test
(bad)
outs
(bad)
clc
lods
in
fiadd
pop
dec
stc
pop
test
add
push
fstp
in
stos
mov
adc
retf
dec
mov
enter
xchg
add
cld
cli
cs
adc
add
push
stos
js
add
mov
add
mov
jne
and
call
cmp
mov
add
fldcw
out
jb
push
mov
imul
add
lods
aad
mov
into
mov
push
push
fcomp
pop
mov
push
add
fs
ficomp
(bad)
xor
or
xor
add
add
cs
cmp
iret
or
jnp
pop
or
popf
pop
lahf
ins
mov
dec
inc
dec
lds
xor
jb
loope
add
add
and
jnp
pop
xlat
add
sbb
add
sbb
ror
clc
push
add
inc
in
call
loop
add
jmp
or
add
jb
jmp
mov
dec
mov
aam
xlat
aad
add
mov
mov
pop
inc
cmp
mov
inc
aam
add
pop
add
add
mov
popf
sub
loopne
rol
fcomip
xor
in
add
add
add
scas
es
or
add
pusha
retf
dec
icebp
mov
out
mov
cdq
mov
push
or
jmp
inc
add
dec
xor
loopne
jnp
add
inc
jge
nop
ret
push
movs
add
add
test
lds
daa
cmc
jecxz
or
add
outs
imul
push
out
add
add
sbb
rol
or
lock
cmps
or
add
sub
jno
(bad)
(bad)
push
add
daa
in
adc
mov
mov
inc
jg
add
inc
adc
jno
scas
call
add
aaa
mov
das
pop
sub
sbb
dec
add
add
sub
xchg
mov
xchg
mov
mov
bound
mov
lods
and
adc
add
sti
(bad)
aaa
or
arpl
add
(bad)
in
imul
js
movs
or
pop
mov
mov
mov
jnp
add
cmps
sub
adc
dec
add
add
xor
xchg
lock
idiv
mov
shl
pusha
mov
loop
sub
push
gs
xor
add
xchg
sub
xor
mov
add
jb
push
ins
rol
pop
test
(bad)
xor
sbb
xchg
adc
retf
push
aad
jb
add
fcomp
mov
mov
add
mov
cmp
dec
add
call
bound
dec
sub
sub
fidiv
leave
add
in
add
cmp
and
push
add
in
adc
scas
scas
add
sahf
cmp
add
sbb
jmp
sbb
repnz
add
lods
mov
add
mov
mov
repnz
sub
mov
jno
das
or
jp
fwait
leave
fs
xchg
add
push
jecxz
lahf
dec
xchg
loop
mov
add
mov
or
clc
in
and
xchg
add
dec
or
xlat
push
popf
fisttp
add
ins
push
js
(bad)
test
cdq
add
or
push
add
jnp
or
and
sub
mov
popf
jge
pop
jbe
push
add
add
cld
mov
inc
xchg
bound
cmp
loopne
and
add
mov
add
add
rol
mov
add
and
cs
adc
(bad)
xor
cld
xchg
add
pusha
add
cmps
stos
lahf
imul
jmp
xchg
daa
adc
sub
ret
mov
add
adc
call
les
(bad)
in
addr16
adc
push
inc
add
pop
xchg
test
pop
add
mov
retf
fimul
leave
(bad)
ss
mov
mov
add
mov
xchg
sub
mov
dec
jne
inc
and
aad
add
add
stos
push
mov
add
add
mov
outs
sbb
cld
xchg
pop
repz
retf
inc
cmp
iret
stc
dec
mov
push
pop
cdq
cmc
sbb
jae
sub
add
add
add
mov
in
cmc
inc
ins
inc
stc
(bad)
cmc
mov
mov
fst
jmp
(bad)
or
add
add
in
push
mov
sub
jns
or
push
int3
or
cmp
dec
mov
add
add
mov
push
iret
lods
mov
imul
pop
push
adc
jb
(bad)
(bad)
or
add
fldenv
ret
jmp
dec
(bad)
mov
add
test
shl
shl
push
adc
fsub
add
add
add
fnstcw
cmc
jns
aam
add
in
cmps
mov
mov
add
cmp
sub
retf
mov
lds
mov
stos
test
and
repnz
imul
sbb
add
ja
and
add
cmc
jle
add
pop
add
imul
mov
add
add
add
add
cdq
mov
in
adc
mov
add
shr
paddd
or
aaa
add
add
ja
inc
dec
out
mov
sub
(bad)
iret
fdiv
pop
ins
lods
and
or
add
push
lods
dec
mov
jp
add
push
fimul
xchg
aas
aam
mov
jmp
pop
mov
sub
leave
ret
xchg
fild
xchg
or
xchg
jae
add
sub
inc
call
aad
adc
mov
jecxz
(bad)
lock
add
or
sqrtps
add
loopne
and
and
lahf
mov
mov
add
add
popa
cmp
sbb
out
repz
mov
sub
sbb
mov
push
add
cmp
(bad)
fwait
rol
add
imul
and
into
cmc
aaa
(bad)
xchg
add
stc
pushf
lds
pushf
xor
icebp
test
add
mov
add
push
cmp
scas
adc
stc
(bad)
dec
jge
fild
jecxz
enter
xchg
or
ffree
or
lods
add
xor
mov
(bad)
in
cdq
sti
jmp
jp
add
push
mov
pop
outs
iret
lea
pusha
add
add
shl
mov
retf
cld
dec
sbb
add
dec
pop
cmp
nop
push
add
out
scas
jle
rol
jecxz
sbb
add
cmps
mov
jnp
mov
cmc
pusha
mov
mov
sahf
jae
inc
(bad)
out
add
add
paddusw
pop
sbb
add
ret
adc
add
add
add
(bad)
movs
test
or
mov
adc
in
arpl
stc
shl
cmp
sub
std
xor
add
dec
int
(bad)
xlat
mov
mov
push
jp
sbb
jmp
mov
cwde
mov
add
add
aas
mov
inc
sti
into
mov
loopne
int
sahf
test
add
ja
mov
add
add
add
fsubr
pop
mov
loopne
adc
mov
into
add
jge
adc
lahf
jl
jecxz
xor
push
sbb
add
sar
add
add
mov
cmp
add
add
xor
(bad)
outs
sbb
push
mov
mov
stc
add
dec
add
shr
outs
sub
inc
add
and
jmp
inc
push
add
mov
add
add
add
add
xchg
lock
jge
xchg
jp
inc
dec
aaa
stc
or
leave
aas
frstor
ja
xor
js
lods
sub
lds
sbb
bound
int
add
add
aaa
xchg
jl
(bad)
xor
out
pop
pushf
pop
dec
adc
jo
retf
pop
add
and
xor
add
add
add
inc
and
fwait
or
lods
stc
std
xor
fimul
and
dec
mov
ins
mov
sbb
repnz
dec
retf
int
loope
cwde
cwde
cdq
push
inc
movs
(bad)
fild
clc
add
dec
jmp
pop
out
add
add
inc
in
pop
push
sbb
xlat
int
into
nop
fldl2t
movs
mov
sahf
std
lea
add
add
add
xor
in
adc
inc
in
jo
cmp
cwde
loopne
pop
test
loop
xor
outs
or
cmps
adc
jne
outs
adc
and
les
xchg
pushf
cdq
pop
add
out
add
jnp
add
ret
push
xchg
mov
add
pushf
cmp
dec
jne
dec
ins
add
or
add
push
add
mov
push
add
das
jge
cmp
add
add
sbb
or
lea
stc
jle
inc
add
aaa
push
das
cmp
add
cdq
pop
inc
stos
add
pop
cmp
push
xor
bound
iret
test
aam
add
or
add
dec
pop
or
std
test
jmp
imul
add
add
sub
sbb
mov
add
sar
add
add
hlt
adc
inc
sub
dec
in
jno
retf
add
mov
sub
ret
add
mov
retf
int
ds
add
popa
(bad)
and
lods
leave
les
imul
xchg
push
popf
enter
xchg
xchg
outs
lods
or
add
fistp
std
cmp
test
add
add
pop
nop
outs
push
and
add
mov
dec
stc
add
sub
sahf
jmp
mov
or
repnz
push
mov
imul
sbb
idiv
out
(bad)
retf
pop
cmp
add
mov
sbb
in
ins
inc
add
mov
jne
idiv
push
mov
add
or
mov
mov
xchg
cmps
add
add
test
iret
fiadd
pop
jmp
sbb
push
push
aaa
xchg
add
mov
ret
sti
ins
add
add
add
mov
push
add
cmp
shufps
(bad)
add
add
mov
jge
loopne
pop
(bad)
sbb
jl
mov
mov
cdq
and
sti
jno
mov
add
dec
jmp
scas
das
jmp
jg
or
add
add
mov
lahf
das
ret
inc
add
sbb
enter
loope
add
iret
pushf
xor
cmp
add
dec
lahf
xchg
and
aaa
ja
add
xchg
mul
nop
add
inc
add
dec
leave
mov
add
clc
push
sub
or
inc
cmp
mov
add
add
add
addr16
cmp
fs
movs
mov
jg
scas
les
cmps
mov
lods
mov
fwait
mov
or
pop
pop
repz
dec
sbb
add
cld
ror
cmp
cmp
ins
and
sub
in
stc
sbb
xchg
std
xchg
js
add
adc
add
stos
xchg
sbb
dec
mov
rol
pop
add
push
inc
idiv
add
add
bound
jg
inc
sub
leave
jp
sbb
sldt
daa
call
data16
mov
add
stc
add
add
dec
push
push
push
fcmovbe
or
sbb
out
ins
in
test
(bad)
arpl
inc
add
pop
add
add
push
and
mov
iret
add
rcr
pop
pop
(bad)
(bad)
or
(bad)
iret
xchg
dec
cmp
add
add
mov
mov
dec
sub
sub
hlt
daa
add
cmp
inc
add
add
mov
adc
mov
add
jnp
add
add
das
add
sti
pop
fwait
into
xor
movs
xor
inc
add
add
outs
pop
imul
inc
add
in
pop
xchg
and
cwde
pop
(bad)
dec
mov
sub
add
(bad)
shr
push
enter
out
repnz
inc
adc
add
dec
mov
arpl
mov
push
jae
inc
mov
mov
mov
fiadd
iret
fcom
add
mov
inc
clc
mov
repz
xchg
fst
add
fstp
mov
stos
repz
add
xchg
fimul
push
mov
test
push
mov
add
ja
push
mov
cmp
dec
sbb
add
sar
jb
cmp
jbe
mov
rol
add
add
add
jg
sbb
lods
mov
outs
or
test
xchg
inc
jmp
or
sub
lahf
mov
fbstp
test
clc
jnp
add
jl
xchg
cmps
mov
movs
stos
fwait
push
xor
lea
call
cld
ins
and
jg
dec
in
cmps
bound
mov
mov
daa
push
btc
xchg
or
test
test
jmp
fwait
xchg
stos
setp
ret
mov
add
bound
fisttp
mov
jmp
mov
add
repz
bnd
arpl
jno
adc
add
add
ror
xor
in
jp
jmp
pop
gs
sub
aaa
sub
add
add
retf
sbb
push
enter
pop
add
fmul
add
scas
add
add
int3
inc
cmp
mov
mov
retf
jmp
mov
ins
or
add
inc
sbb
add
add
inc
inc
icebp
add
std
sbb
mov
mov
and
dec
xor
scas
add
in
push
add
sbb
mov
ja
jl
das
aam
pop
xchg
pop
std
test
add
add
retf
sub
jg
sbb
push
stos
add
lods
jbe
cmp
cmps
xor
jbe
adc
add
add
mov
or
add
dec
cmp
out
cmp
add
dec
and
call
add
ss
add
(bad)
loopne
pop
push
jmp
mov
repnz
add
movs
test
test
add
sub
xchg
sub
mov
mov
in
movs
out
xchg
dec
add
(bad)
stc
enter
add
fcmovb
mov
add
add
add
iret
call
dec
pop
lock
dec
and
pop
cli
push
mov
jns
and
loop
std
and
cwde
test
retf
push
hlt
adc
inc
dec
iret
pop
out
and
(bad)
in
add
xchg
shl
pop
stos
add
xchg
das
add
jg
ja
dec
jbe
add
in
dec
jae
xor
inc
or
js
add
add
gs
aaa
mov
pusha
mov
pop
push
add
add
loope
js
sbb
push
das
outs
add
packsswb
add
lods
retf
dec
fsubr
das
cld
out
and
add
add
inc
les
jns
movs
inc
in
jecxz
pop
add
in
push
xor
jne
repnz
in
nop
inc
mov
scas
xchg
sub
aam
add
bndldx
movs
out
addr16
add
add
add
dec
jne
inc
inc
je
jno
popf
movs
xor
cmp
sbb
dec
sahf
test
shl
jecxz
add
add
jl
jle
(bad)
jmp
add
mov
aam
fisttp
mov
mov
out
add
push
add
add
inc
xchg
cmp
mov
add
rcl
fbstp
icebp
add
add
add
inc
stos
xor
sub
pop
sub
sbb
add
mov
mov
mov
cli
add
add
add
cmp
inc
mov
add
clc
lea
stos
clc
jmp
movs
stc
jl
cmp
cdq
adc
add
call
repz
inc
ss
mov
jmp
and
sbb
gs
xor
cmp
add
sub
add
(bad)
jge
jmp
in
scas
jp
add
add
outs
inc
pop
push
jecxz
mov
sahf
jg
add
push
loop
add
xchg
scas
inc
adc
jbe
or
mov
add
adc
dec
aad
add
dec
add
sbb
or
cdq
loope
add
icebp
mov
ret
mov
int3
sbb
ror
xchg
int3
icebp
mov
add
sbb
add
adc
mov
add
add
mov
scas
mov
fist
out
push
xchg
idiv
(bad)
mov
popf
or
not
ret
xor
dec
loop
add
adc
jnp
push
sar
sub
push
loopne
add
fadd
add
sub
jne
fmul
push
ret
jne
nop
mov
cdq
out
cmps
mov
fld
aad
add
leave
(bad)
xor
add
scas
sbb
jg
sahf
adc
jb
add
add
add
add
ss
dec
retf
or
gs
add
imul
jbe
jno
test
ins
add
add
stc
lds
fwait
inc
add
sub
arpl
add
push
test
sti
mov
mov
sub
inc
dec
add
and
add
add
test
std
into
add
or
hlt
icebp
or
pop
add
add
mov
test
lds
ja
movs
mov
jl
scas
add
add
lods
xor
(bad)
std
hlt
inc
mov
and
test
xor
imul
xor
mov
sahf
push
add
lock
loop
adc
lea
jg
add
mov
sahf
iret
dec
ja
add
inc
mov
inc
out
add
stos
es
ja
shl
mov
into
mov
sub
add
or
lahf
outs
imul
or
jmp
mov
mov
retf
mov
add
pushf
ja
ficomp
push
push
pop
add
add
outs
call
test
inc
lahf
cs
or
push
outs
sbb
mov
or
add
imul
sbb
cmp
rol
test
setg
call
add
add
cmc
or
push
aad
stc
fwait
ins
dec
xchg
mov
lods
out
jl
sub
add
pop
mov
mov
mov
mov
dec
fiadd
loop
add
sbb
rol
add
xchg
mov
enter
mov
mov
add
add
movs
dec
pop
cmps
add
retf
pop
outs
and
stos
cdq
pushf
and
cmp
aaa
ja
popa
add
add
push
xchg
add
mov
rol
jno
fwait
and
dec
je
aas
xchg
add
or
add
sbb
mov
add
pop
hlt
scas
imul
and
test
push
add
mov
push
arpl
dec
jmp
cmps
mov
sbb
add
pop
mov
std
icebp
jns
pushf
dec
dec
inc
sbb
add
pushf
and
stos
jo
pop
retf
out
int
out
and
enter
add
retf
push
out
adc
sbb
push
sti
add
add
push
cmp
pop
jp
mov
repz
pop
daa
int3
xor
leave
dec
cmc
xor
inc
in
add
test
pop
(bad)
mov
rcl
dec
add
int3
dec
pop
push
jne
adc
jmp
add
pop
addr16
pop
rcr
xchg
cmps
gs
push
std
dec
pop
ja
add
fwait
add
sub
adc
mov
push
add
add
jnp
(bad)
push
push
int3
adc
pop
or
std
adc
add
add
and
stos
repnz
ja
fst
cs
imul
sub
add
sbb
add
sbb
add
ret
dec
(bad)
sti
(bad)
clc
mov
xor
mov
or
pop
pop
pop
add
add
dec
add
push
add
pop
add
ins
xor
lds
or
ja
adc
outs
(bad)
pop
add
jge
xchg
xchg
sub
add
dec
jmp
mov
jbe
add
dec
sub
movs
cmp
xchg
rol
ror
or
aaa
pop
add
jl
dec
pop
xchg
rcl
inc
test
add
mov
fild
out
cmc
lods
ret
cmp
add
add
scas
es
(bad)
xor
in
loopne
sub
scas
cwde
icebp
lock
sbb
loop
jae
mov
xlat
xor
inc
iret
add
add
inc
xor
outs
mov
sbb
add
pop
add
cmc
jbe
add
jo
push
add
or
outs
rol
jb
push
iret
sbb
dec
outs
out
and
cmps
cmp
dec
addr16
add
(bad)
sar
add
push
xchg
or
lods
popf
data16
jmp
shl
or
sbb
push
push
cmp
inc
lods
add
add
mov
xlat
aad
add
out
sub
inc
push
dec
(bad)
mov
push
int
add
sub
shl
ja
int3
sub
xchg
(bad)
enter
data16
rcl
xorps
dec
mov
add
and
es
push
add
imul
test
lods
add
add
add
add
inc
clts
sbb
add
movs
pop
ja
add
jp
cmp
jno
mov
jp
jb
jns
lock
fadd
add
add
jmp
repz
aad
add
add
pushf
and
pusha
cmp
add
js
ret
icebp
jbe
xchg
add
mov
loop
xchg
pop
inc
pop
mov
mov
aaa
xchg
xor
dec
call
pop
jl
cld
or
les
and
add
add
add
mov
mov
scas
mov
out
scas
clc
mov
aas
add
add
jbe
pop
ja
dec
cmc
mov
xchg
or
add
mov
or
lahf
xor
cmps
pop
jl
(bad)
ja
or
clc
lahf
clc
add
add
fidiv
jecxz
das
movs
dec
shr
iret
enter
and
mov
jne
daa
test
add
add
lock
mov
movs
scas
les
push
add
js
cmp
add
retf
jbe
jns
dec
sbb
jno
fsubr
push
add
add
cmps
call
std
in
add
fcom
mov
pop
out
jmp
mov
jg
test
pop
call
xchg
je
add
sar
pop
mov
jge
mov
add
add
adc
cdq
ins
addr16
dec
jns
push
jnp
jle
sbb
cmps
mov
sbb
push
nop
clc
add
dec
adc
add
push
cwde
add
xchg
or
add
jmp
ins
and
dec
jmp
pusha
jae
pushf
jnp
fadd
aad
add
sbb
aaa
and
push
bound
xchg
or
aad
add
add
push
repz
aad
mov
mov
retf
out
jge
cmp
scas
add
xchg
inc
dec
data16
dec
pop
stos
xor
jnp
call
jle
int3
jecxz
dec
icebp
and
int3
test
add
add
push
push
lods
test
jnp
mov
cmc
out
ds
lods
sub
cmc
loope
mov
add
and
cmp
sbb
add
in
outs
popa
and
test
add
add
arpl
add
add
push
xchg
aad
imul
fidivr
or
push
and
loopne
into
mov
je
(bad)
jg
int
cmp
add
mov
sbb
shl
jmp
(bad)
dec
mov
mov
cmp
shr
xor
arpl
ds
pop
mov
loope
jae
scas
add
sti
fiadd
add
test
sub
sbb
dec
imul
(bad)
int
add
xchg
stos
add
je
aas
sbb
stos
add
sti
retf
and
add
cmp
mov
xchg
add
fwait
pop
add
inc
mov
xchg
add
add
stos
popa
add
add
jp
jo
cmp
inc
lds
cli
push
loopne
push
add
fs
xchg
add
(bad)
and
add
js
cdq
outs
pop
imul
add
int
les
add
add
in
(bad)
jmp
sbb
mov
dec
call
cmps
mov
ror
xchg
inc
sbb
add
xor
add
add
es
xor
jbe
cmp
ret
cmp
daa
jmp
xchg
daa
add
add
add
imul
dec
(bad)
cli
clc
movs
inc
jmp
add
mov
jno
add
xlat
test
das
inc
cmp
and
add
add
inc
dec
pop
add
daa
stos
fistp
das
inc
adc
gs
xor
xchg
aad
push
push
pop
jmp
xchg
das
popa
bnd
push
add
pop
sbb
add
add
add
xor
add
add
cmp
daa
mov
pop
cmp
data16
or
stc
popf
xor
add
and
pushf
jmp
adc
inc
add
ret
fild
cmovnp
adc
cmc
aad
add
call
fld
add
xchg
std
xchg
add
mov
jecxz
stc
sbb
add
add
sbb
aaa
inc
comiss
dec
lea
mov
or
ss
add
add
add
pop
repnz
or
pop
jnp
cmp
add
add
add
add
pusha
jmp
pop
iret
sub
icebp
mov
popf
test
lock
add
sbb
test
mov
inc
cmp
ret
cmp
add
mov
mov
retf
stc
add
add
ds
pop
mul
inc
inc
cmp
cmc
mov
inc
sub
out
add
jo
outs
mov
popa
and
inc
add
sub
add
mov
sub
pop
jns
add
retf
fmul
idiv
icebp
cwde
jbe
dec
add
fdivrp
(bad)
pop
in
dec
sbb
shl
xchg
jbe
jmp
and
add
adc
cmp
(bad)
iret
add
sbb
sbb
scas
add
and
cmp
dec
test
rol
inc
add
arpl
leave
test
adc
add
into
add
movs
dec
mov
xor
aas
movs
add
js
sbb
sar
scas
add
ror
rcr
add
add
add
test
jns
pop
mov
ds
or
mov
stos
mov
add
loopne
test
cmps
das
mov
imul
rcl
jns
ret
sar
outs
add
inc
add
mov
shr
sti
out
add
sub
ror
dec
xchg
retf
add
adc
sar
test
cmp
add
mov
cmp
add
mov
dec
add
push
test
mov
adc
xchg
outs
jmp
aas
xor
dec
add
mov
cmp
test
jle
add
js
add
add
add
jnp
pop
lfs
outs
push
and
add
mov
pop
xchg
int3
or
adc
add
ins
adc
ret
repnz
out
mul
xchg
ins
cmp
add
add
add
jle
inc
xor
dec
retf
loopne
es
aad
dec
mov
push
test
test
das
das
dec
add
jmp
test
repnz
push
add
idiv
dec
cmp
ret
cmp
in
imul
adc
mov
jge
xchg
ret
loope
out
add
push
addr16
jmp
cmps
jecxz
inc
push
daa
in
add
retf
ss
jns
outs
jle
bound
cmp
xor
rcl
outs
add
popa
or
leave
fadd
jge
sub
add
jle
(bad)
stc
inc
iret
xor
ins
dec
pop
aas
mov
add
fs
sahf
fisubr
jae
mov
test
add
add
inc
add
add
inc
adc
mov
je
cdq
adc
jno
push
xor
movs
sar
add
jae
cld
jge
outs
push
pop
mov
add
bound
add
lods
sub
adc
fld
add
mov
pop
add
add
cmp
xchg
mov
push
sbb
mov
push
mov
pop
repnz
and
add
add
jge
xlat
inc
pop
or
dec
in
push
mov
popa
pop
cmp
sub
sub
xor
gs
mov
push
iret
inc
add
add
inc
push
push
lods
pop
(bad)
cmps
add
jmp
push
add
add
pushf
jne
mov
mov
mov
int
jmp
test
xor
push
xlat
fild
(bad)
dec
mov
add
pop
test
cmp
icebp
imul
imul
or
add
add
int3
mov
pop
mov
pop
fucomp
pop
mov
rol
add
jmp
add
add
add
retf
lods
out
xor
xor
loope
pop
mov
xor
lock
out
dec
ret
xor
mov
fsubr
hlt
add
add
add
fcomp
mov
mov
pop
pop
rcr
cmp
les
jae
xchg
push
outs
dec
cmps
jmp
add
push
xlat
cmp
push
ins
add
mov
dec
add
scas
test
xchg
jle
adc
add
add
xchg
mov
cs
imul
add
ror
out
popa
add
aaa
push
or
xchg
dec
push
inc
sbb
(bad)
loope
push
call
add
add
dec
xor
or
lea
ja
and
add
je
ins
inc
ds
inc
jno
(bad)
adc
in
mov
mov
sbb
add
sbb
push
add
and
xlat
add
xor
push
jmp
mov
jmp
inc
repnz
or
push
(bad)
mov
fisttp
outs
mov
test
add
xchg
add
mov
in
xchg
xchg
jl
pushf
cmp
add
add
js
add
mov
xchg
ret
inc
or
add
xchg
rcl
std
mov
pop
lea
lods
jbe
(bad)
xor
add
xor
hlt
xor
pop
test
jo
mov
and
movs
inc
add
xor
pop
mov
aad
add
adc
sbb
je
sub
in
test
mov
dec
into
adc
mov
add
loope
and
in
test
xchg
mov
cmp
out
out
add
jmp
shr
jnp
add
stos
add
and
pop
jle
push
sar
dec
fadd
add
out
fs
fbld
jbe
sar
mov
scas
mov
add
add
out
jmp
dec
dec
fstp
push
jno
mov
inc
xchg
jbe
lods
leave
retf
xchg
test
sbb
cmp
lds
xor
push
add
add
pop
xor
sqrtps
xchg
dec
jae
and
test
adc
stos
push
add
jp
mov
ret
icebp
pop
mov
add
add
fld
(bad)
mov
(bad)
xor
dec
ins
pop
aad
xchg
daa
stos
(bad)
jg
inc
add
xchg
mov
jmp
shl
mov
add
add
xor
out
or
push
clc
dec
inc
add
mov
fabs
add
add
add
aad
add
push
add
add
add
cmp
sbb
call
icebp
call
sbb
jne
sbb
xchg
call
mov
mov
xchg
out
xchg
mov
mov
nop
add
adc
inc
repnz
(bad)
int
leave
cmp
sbb
add
add
inc
js
cli
inc
int3
int
cmc
adc
es
cs
nop
add
adc
lahf
ss
cs
add
div
enter
repz
(bad)
call
mov
sub
stc
add
jg
add
mov
add
cmp
daa
sbb
imul
fnstsw
adc
mov
sub
ret
xor
gs
add
add
ret
into
outs
jle
das
and
add
arpl
inc
add
call
inc
and
test
dec
hlt
cmp
jp
push
xchg
add
add
fwait
push
push
sub
fcmovne
retf
(bad)
stos
adc
push
orps
add
dec
inc
lea
fist
retf
pop
xchg
push
mov
xchg
dec
aad
mov
adc
add
add
and
mov
mov
fucomi
xor
dec
bound
sbb
arpl
mov
mov
mov
iret
add
jmp
dec
add
mov
add
jl
xchg
std
add
popa
or
pop
lock
aas
les
or
add
or
out
add
jne
outs
push
int3
add
adc
add
(bad)
stos
mov
lds
add
cs
add
movs
enter
add
add
cld
mov
jp
push
sahf
add
add
dec
mov
(bad)
pop
dec
inc
cmp
add
das
sub
add
test
cmp
add
xor
jmp
jne
ds
(bad)
sub
and
sbb
out
sbb
retf
test
bound
int3
jl
pop
clc
cdq
mov
add
jmp
shr
ffreep
jge
add
lds
push
in
add
sbb
shr
jns
sti
dec
add
add
cmp
std
stos
leave
cmp
mov
rcl
add
push
retf
mov
nop
retf
stos
loope
call
lods
stos
mov
xor
test
enter
pop
dec
(bad)
stos
add
pop
jns
imul
test
cmp
jmp
enter
add
cmps
out
sbb
xor
pop
std
cmps
arpl
push
jg
adc
jecxz
jmp
mov
add
add
je
imul
in
dec
(bad)
(bad)
pop
ins
es
in
pop
out
add
fst
cmp
retf
popf
add
out
add
in
sbb
or
imul
add
add
lods
rcl
scas
cmc
rcr
sub
lds
dec
fldcw
mov
cmp
fist
pop
add
sub
std
jmp
sbb
add
std
out
mov
ins
stos
mov
in
push
inc
inc
mov
add
add
cmp
add
sbb
jnp
cmc
lahf
dec
retf
add
mov
dec
add
or
add
dec
mov
scas
inc
lahf
icebp
add
cmp
push
jb
add
sub
inc
mov
and
dec
shr
dec
adc
add
in
cli
daa
dec
jns
sub
mov
push
out
in
add
add
fsubr
sbb
mov
adc
je
dec
inc
add
mov
sbb
loop
jnp
pop
add
cmp
aas
add
test
or
imul
cmps
in
add
jo
rcr
push
push
loope
xor
add
sub
les
add
adc
add
add
add
inc
ss
aaa
pop
test
fidiv
add
imul
push
sub
jb
(bad)
add
add
xchg
jmp
mov
cmp
inc
mov
dec
std
add
rcr
sub
mov
daa
out
add
pop
cdq
add
add
cwde
pop
add
or
jmp
cwde
mov
pop
pushf
test
cmp
call
add
adc
cmps
nop
add
cmp
push
add
loopne
mov
push
and
stc
add
pusha
adc
jbe
mov
pop
fiadd
add
add
ja
rcl
sub
xchg
dec
in
dec
cmps
inc
mov
in
jne
sub
jmp
jle
int
push
mov
add
jl
add
add
fiadd
cwde
sbb
aaa
scas
sbb
test
add
dec
repz
or
lods
cmps
daa
mov
add
js
xor
sbb
inc
pop
repz
xor
add
cmc
or
or
and
fcomip
pop
push
bound
push
addr16
push
jge
add
mov
add
(bad)
lock
sbb
add
add
add
and
popf
shl
lea
cmps
sub
jmp
das
adc
rcr
lods
dec
loop
enter
push
mov
sbb
or
push
test
add
mov
dec
(bad)
mov
jbe
inc
(bad)
and
dec
adc
add
adc
iret
or
mov
fisttp
add
jp
sub
sub
add
pusha
add
add
fldenv
stos
rol
mov
fbld
add
adc
push
pushf
cmp
add
and
xchg
out
add
push
add
and
popf
jno
idiv
or
dec
jle
xor
add
add
mov
in
mov
add
mov
icebp
xor
xchg
stc
add
add
jle
bound
je
jp
pop
cs
add
push
jge
add
add
add
hlt
imul
addr16
cmps
sbb
inc
push
mov
and
mov
jl
mov
push
in
xchg
repnz
mov
dec
and
or
add
add
pushf
sar
(bad)
cmps
lea
mov
mov
pushf
or
jb
cmp
mov
pop
cmp
arpl
push
dec
js
addr16
mov
add
dec
nop
aam
lds
add
int3
repz
pop
mov
mov
add
inc
mov
test
lea
adc
rol
push
mov
in
popf
dec
aaa
mov
add
xor
add
add
(bad)
loopne
ret
pop
add
inc
aaa
adc
dec
add
ss
icebp
add
add
nop
cmp
add
jne
popf
mov
cmp
mov
movs
out
add
xor
ret
mov
xchg
loopne
fisub
add
mov
aas
add
xor
rol
std
xor
xor
sub
mov
adc
mov
push
mov
fisttp
jo
push
xor
push
(bad)
jne
pushf
test
pcmpgtd
ror
in
btr
xlat
add
cmp
(bad)
in
loope
mov
dec
shl
ss
add
fcmovnbe
jp
nop
neg
pop
aaa
in
(bad)
in
jl
sbb
dec
add
add
add
loopne
mov
daa
lahf
push
rcl
adc
xor
jo
das
push
add
mov
shr
jb
and
ja
adc
(bad)
fld
fadd
dec
cmp
push
ins
pop
jecxz
add
movs
jae
sbb
jbe
sub
mov
mov
add
sbb
mov
add
movs
dec
mov
sub
dec
mov
std
in
add
(bad)
bound
push
ret
iret
push
fmulp
mov
scas
lahf
mov
lds
pop
stos
hlt
pop
rol
cmp
inc
push
popf
data16
xor
add
test
stos
test
ficom
mov
jmp
js
das
add
add
mov
idiv
add
add
add
lods
enter
dec
pop
or
jne
je
in
mov
add
add
cmp
jno
dec
sbb
mov
inc
jle
aam
ret
jns
iret
arpl
popa
push
cmp
add
xor
ds
(bad)
xlat
cmps
enter
out
mov
add
add
add
call
in
mov
mov
mov
push
fld
or
mov
loopne
xchg
xor
arpl
pop
mov
inc
push
cmp
inc
das
daa
jne
cmc
xor
add
add
out
bound
in
adc
mov
rep
pop
pop
mov
mov
dec
(bad)
fld
add
cwde
cld
aad
std
and
movs
call
hlt
test
jmp
jne
xlat
div
add
int3
add
pop
push
add
lea
or
add
mov
jecxz
add
test
call
mov
ins
mov
jmp
sub
add
adc
sub
fst
xor
repnz
fs
repz
or
ja
xor
mov
jo
in
ss
sbb
dec
or
inc
aam
das
dec
(bad)
add
add
add
jl
xor
in
stc
loop
pushf
or
es
add
add
xchg
xor
es
(bad)
out
jg
sbb
popa
jge
inc
adc
push
add
mov
adc
rcr
ss
fidiv
xchg
aam
mov
in
scas
mov
add
push
push
sub
cmp
add
mov
lahf
or
repnz
(bad)
fisub
mov
loop
add
imul
sahf
rcl
mov
das
stc
add
add
push
jbe
jg
gs
retf
in
pop
add
xchg
mov
inc
rol
fdivp
(bad)
test
add
add
dec
xchg
inc
pop
pop
(bad)
and
push
pop
add
ja
pushw
dec
and
call
and
add
xchg
mov
ds
imul
leave
das
add
mov
in
cmp
(bad)
mov
xor
repz
push
cmp
sbb
and
add
mov
movs
mov
inc
loopne
movs
xchg
loop
ins
jbe
pop
adc
imul
ds
dec
push
add
(bad)
fmul
add
mov
xlat
js
mov
xor
dec
test
sahf
mov
mov
and
xchg
jg
repz
lods
adc
xor
iret
aas
push
pop
adc
add
sbb
stc
mov
mov
nop
inc
cmp
push
fisttp
ffreep
sbb
mov
mov
das
sbb
cmp
rol
cmp
jmp
fs
add
jmp
add
add
inc
adc
mov
retf
shr
lahf
pusha
add
jp
repz
inc
xchg
dec
add
dec
or
cmp
dec
push
fisub
dec
xchg
add
add
adc
cmp
into
std
xchg
popf
and
mov
pop
mov
pop
retf
outs
sbb
add
add
ins
in
fld
cs
shl
test
pop
push
adc
add
push
sub
je
push
xacquire
pushf
pusha
pop
and
add
add
cs
out
retf
sub
fild
in
add
hlt
inc
add
adc
cwde
mov
inc
push
es
add
jo
xchg
inc
(bad)
adc
ret
dec
cmc
or
add
xor
xchg
das
mov
or
jl
out
test
push
pop
jbe
test
dec
adc
add
add
add
call
ds
xor
fs
data16
push
jl
lds
mov
inc
xor
inc
add
add
add
add
add
lods
popf
call
dec
xchg
pushf
in
lock
jl
cmp
sbb
add
imul
rcr
push
stc
sub
jp
mov
add
cmp
dec
outs
mov
inc
dec
sti
popw
mov
repnz
pop
adc
dec
arpl
es
and
inc
in
nop
xor
push
add
add
pop
icebp
ins
push
ins
xchg
add
les
mov
test
and
and
mov
add
add
into
mov
push
cmp
mov
cs
mov
call
add
sbb
sahf
jp
es
das
lods
sti
pop
add
and
add
and
mov
add
jle
mov
fistp
ror
xchg
push
push
dec
std
cmps
jle
inc
mov
add
inc
aam
fild
add
fldcw
bound
xor
push
add
arpl
push
rcl
xchg
push
arpl
add
add
retf
and
add
add
sbb
dec
inc
dec
inc
and
(bad)
shl
rcr
pop
mov
push
adc
xchg
mov
add
mov
enter
mov
add
out
or
xor
mov
or
add
dec
call
inc
add
sbb
add
add
out
add
daa
xor
icebp
inc
call
add
add
repz
push
push
in
mov
mov
push
es
sub
mov
shr
arpl
loope
add
lds
add
mov
cmp
cmp
pop
mov
add
xor
jmp
jnp
enter
add
adc
mov
sti
mov
adc
and
mov
mov
mov
inc
push
js
(bad)
mov
mov
cli
dec
pop
pop
push
dec
fadd
sbb
xor
pop
es
data16
std
add
add
add
add
or
adc
sar
mov
stos
push
out
lds
fsub
sbb
aaa
rol
stos
mov
and
outs
mov
pop
pop
cmp
add
or
inc
add
js
sti
(bad)
je
repnz
in
add
and
add
add
jb
out
pop
movs
paddb
(bad)
push
lea
movs
mov
add
sahf
mov
jb
ficom
ret
and
add
add
rcr
retf
test
mov
inc
int
shl
add
add
add
mov
cmps
(bad)
or
jb
adc
sub
aas
enter
ss
dec
add
push
je
cmp
mov
aas
mov
add
jae
scas
addr16
add
add
inc
add
or
add
outs
sub
test
and
add
add
mov
add
add
and
mov
ret
jae
test
lods
xchg
cmps
adc
(bad)
pusha
lea
jae
add
add
add
jo
inc
jge
add
dec
stc
jne
cmc
pop
add
ret
add
push
shl
pop
ret
sbb
add
xlat
dec
push
pop
lds
mov
lds
add
(bad)
lods
int
test
call
add
add
cmp
pop
in
add
add
popf
adc
push
cmps
jae
les
lock
add
add
sub
dec
adc
xor
dec
push
call
xchg
inc
add
add
les
stc
lea
dec
cmp
push
aas
adc
inc
add
and
pop
cld
sbb
mov
push
sbb
add
jle
add
ds
add
inc
pop
xchg
add
add
lods
push
inc
mov
fxch
js
jg
inc
mov
sbb
adc
dec
mov
add
mov
sub
cmps
cld
jno
fld
jns
fnsave
dec
das
add
xchg
outs
add
test
dec
test
sbb
and
sub
pop
pop
mov
ja
inc
mov
imul
fidivr
push
rcl
or
in
xor
add
push
ja
jnp
xlat
add
add
leave
popa
adc
ins
dec
bound
call
test
imul
fcmovb
(bad)
cmp
xchg
in
dec
cmp
(bad)
dec
jne
enter
xor
add
pop
mov
aad
lea
jbe
add
add
jbe
sti
xor
pushf
sbb
cmps
mov
ror
adc
and
inc
lea
add
(bad)
scas
push
dec
xchg
cmp
add
add
adc
push
adc
iret
aaa
loopne
or
pop
push
add
jmp
add
mov
mov
icebp
sub
adc
xor
mov
push
add
dec
fs
add
cmp
sahf
(bad)
add
xchg
sub
dec
int
mov
jmp
fadd
add
add
mov
jmp
fstp
stos
mov
rcr
ficomp
mov
xchg
cld
in
adc
dec
scas
adc
add
add
inc
dec
push
adc
add
loope
inc
add
mov
add
fld
add
sar
pop
fnstsw
je
add
and
pop
test
sti
push
add
push
push
jl
loopne
add
add
enter
jb
xor
loopne
inc
pop
xchg
pop
add
jecxz
add
jb
mov
add
inc
xor
inc
add
ins
loopne
cwde
sbb
push
sub
jo
add
or
mov
stos
leave
add
pop
test
pop
jg
mov
add
test
push
sub
into
sar
add
mov
and
pop
rol
cwde
mov
faddp
xor
dec
outs
fld
jp
mov
test
cli
shl
add
add
add
retf
pop
mov
movs
call
add
add
mov
pushaw
and
int3
daa
cmp
and
sub
jo
cmp
add
push
loop
adc
scas
sbb
loope
push
add
add
mov
add
fadd
mov
sahf
xchg
add
pop
xor
inc
add
hlt
xchg
mov
add
jle
add
add
xchg
call
call
pop
out
push
push
les
hlt
push
mov
and
pop
add
shl
rcr
stos
xor
loopne
add
test
mov
sbb
add
add
rol
(bad)
jbe
xchg
ins
into
mov
dec
int
adc
add
add
(bad)
out
inc
lds
xchg
mov
mov
call
pop
jns
call
sbb
add
sbb
sub
push
cmps
in
lds
mov
rol
mov
je
pop
add
push
test
mov
add
add
cmp
sub
and
fstp
mov
cmp
fisub
(bad)
mov
inc
mov
xor
mov
pop
cdq
inc
js
(bad)
aam
sahf
shl
aam
mov
iret
jl
sar
add
cmc
dec
add
inc
jp
dec
add
inc
je
dec
test
jo
jmp
dec
adc
add
add
sahf
push
fbstp
cmp
clc
mov
push
and
jg
mov
add
int3
add
push
data16
cld
into
mov
add
add
and
mov
pop
add
lahf
add
add
dec
hlt
push
or
pop
jmp
cmp
ret
mov
mov
sbb
sub
add
(bad)
repnz
clc
rol
pop
pushf
sahf
jnp
pop
mov
pop
jmp
clc
jle
add
fwait
(bad)
sbb
lock
pop
fnstsw
cmp
mov
jmp
xor
fst
jle
add
add
cmp
add
add
push
dec
clc
pop
or
adc
jp
popf
pop
ins
retf
mov
add
fwait
iret
test
pop
add
add
add
add
sub
or
mov
sub
out
clc
rol
push
aad
clc
sbb
shl
and
loope
data16
dec
pop
rol
mov
add
rol
mov
out
jmp
add
icebp
ror
sub
dec
les
add
add
pop
sub
adc
outs
sub
push
hlt
call
dec
add
xor
add
add
add
xor
es
xor
hlt
inc
mov
jno
cmp
push
add
sub
adc
cmp
loopne
popf
mov
cmps
jne
add
cmp
cld
sbb
add
or
clc
retf
push
xor
mov
jmp
mov
es
data16
add
add
stos
fldcw
mov
mov
xor
leave
call
add
push
cmp
pop
and
js
inc
or
add
jge
add
add
pop
cwde
xor
ds
xchg
add
mov
aam
ret
add
mov
movs
gs
jl
mov
pusha
add
add
(bad)
sub
data16
cmp
adc
ja
mov
add
mov
sub
into
inc
add
popa
aam
fistp
sbb
pop
add
sub
add
cmp
and
icebp
inc
add
enter
xchg
iret
out
fimul
add
cmp
add
rcr
loop
jl
mov
inc
add
xchg
and
outs
add
call
dec
sub
or
xchg
add
test
jo
fs
xchg
cmp
mov
lods
jo
imul
mov
push
and
repnz
add
add
lea
pusha
cmp
imul
call
xchg
push
xchg
cmp
out
in
test
cs
sub
loope
mov
enter
add
xchg
cdq
aam
add
add
add
nop
jmp
ret
cli
stos
es
pushf
add
add
adc
(bad)
mov
aas
push
add
sub
cmp
xor
cli
mov
ds
(bad)
inc
and
add
iret
add
or
add
add
add
sub
cmps
and
cmp
cmovnp
jo
mov
test
cmps
inc
push
cmp
dec
add
add
dec
jg
and
or
pop
mov
add
cmp
add
data16
add
add
add
pop
inc
(bad)
mov
clc
ja
and
mov
sub
sub
ror
cmp
mov
shr
inc
lds
add
sub
add
dec
jns
mov
add
add
test
inc
movs
les
aaa
ins
sub
sbb
cld
add
adc
cmps
add
add
(bad)
(bad)
ds
sub
add
or
push
sbb
fisub
(bad)
jmp
out
cmp
repz
sbb
sbb
fwait
xchg
and
dec
enter
mov
data16
sub
jae
sub
add
mov
mov
fst
jmp
jae
xlat
call
push
nop
jg
add
add
mov
add
add
jno
jnp
mov
jecxz
nop
lods
fsubr
cwde
push
sub
cdq
dec
push
pop
mov
sahf
add
add
test
xchg
js
inc
clc
int3
inc
adc
scas
and
ret
loopne
mov
pop
movs
mov
pop
add
cmp
adc
stos
add
add
and
das
ret
cmp
lahf
retf
add
out
pop
lds
bound
push
add
add
sahf
or
add
inc
fild
jns
add
add
jnp
je
mov
lds
lock
dec
xor
les
xchg
push
aaa
add
add
add
add
add
mov
into
popf
sbb
cs
aas
push
dec
mov
sbb
retf
es
inc
stc
scas
ja
stc
sbb
inc
stc
xchg
xor
dec
stc
dec
sar
cmp
push
in
ja
add
mov
add
jae
test
xchg
js
mov
sbb
lock
test
and
fs
pusha
jl
add
adc
cmps
pushf
pop
and
dec
les
add
add
add
pusha
cs
xchg
sar
sar
sbb
dec
jle
retf
add
add
add
add
sub
rcr
add
add
xor
pop
mov
or
int3
add
mov
cli
movs
inc
or
push
(bad)
sbb
add
add
add
scas
icebp
mov
jl
push
lds
pop
sldt
xor
out
loop
mov
ins
add
or
ins
add
rol
jbe
add
lods
mov
add
ret
jmp
call
dec
push
add
(bad)
out
add
xchg
or
dec
iret
cld
add
aaa
mov
add
add
dec
aad
(bad)
and
add
cmp
int3
and
sbb
std
or
ja
dec
ins
inc
add
add
int3
mul
cwde
add
repz
add
mov
jbe
popa
add
add
mov
add
lock
add
in
add
stos
std
xchg
push
in
je
arpl
inc
mov
(bad)
(bad)
mov
mov
js
add
cmps
hlt
stos
repnz
mov
dec
add
out
and
fmul
or
popf
lods
mov
ret
retf
add
mov
sbb
or
in
mov
cli
mov
add
add
loope
add
push
xor
(bad)
inc
add
aam
sub
shr
add
and
mov
test
movs
mov
in
cs
out
(bad)
rol
push
hlt
adc
call
cmp
add
dec
xchg
jl
rol
or
sub
loope
add
inc
div
cmps
jbe
add
mov
test
fisub
add
add
pop
adc
ror
add
retf
adc
push
inc
dec
add
push
sub
inc
sbb
call
dec
mov
cwde
jle
es
imul
dec
lss
jo
jns
je
add
idiv
ins
jbe
scas
and
leave
data16
add
and
loop
(bad)
pop
add
jmp
push
mov
add
add
mov
inc
daa
mov
in
push
scas
in
sbb
add
add
add
add
scas
push
sbb
ret
(bad)
pop
sbb
dec
push
in
add
add
add
ins
mov
mov
push
sub
lahf
pop
sbb
adc
gs
stos
add
fidiv
add
push
cwde
xchg
retf
lock
adc
add
pop
add
add
add
or
adc
add
mov
cmp
xor
into
adc
adc
pop
cmps
inc
or
popf
test
cmp
xor
dec
inc
add
adc
sti
xlat
push
in
push
ret
adc
add
add
mov
arpl
xchg
jmp
mov
icebp
outs
jmp
cmps
icebp
sbb
iret
and
jmp
push
test
xor
dec
mov
xchg
aas
dec
fwait
xlat
push
jmp
cld
jae
push
add
fadd
xchg
nop
jecxz
popf
in
scas
lahf
xor
push
out
in
pop
daa
xchg
aas
loop
hlt
inc
cdq
pop
adc
arpl
dec
ret
push
mov
push
outs
in
pusha
dec
scas
mov
pop
and
push
and
inc
xor
and
add
mov
std
imul
mov
add
(bad)
jmp
push
gs
imul
ins
lock
add
and
add
add
stos
and
aas
test
jno
into
nop
or
mov
and
add
popa
add
or
call
inc
xor
add
mov
xor
push
ins
in
add
add
mov
pop
push
jno
mov
xchg
in
sbb
mov
add
fwait
sbb
test
mov
arpl
add
sub
adc
icebp
(bad)
out
div
cmp
lahf
cld
not
add
add
sti
lods
mov
stos
(bad)
pop
imul
jb
add
add
add
add
hlt
sbb
bnd
cmp
jo
pop
shr
or
out
mov
mov
cmp
mov
(bad)
(bad)
sub
adc
sbb
loopne
add
mov
add
add
std
enterw
out
mov
(bad)
jnp
push
arpl
shl
inc
sub
(bad)
fucomp
aam
add
jo
cli
das
or
xchg
mov
xchg
pop
sbb
mov
and
xor
push
add
nop
push
repz
cmc
xor
je
add
pusha
xchg
add
cdq
movs
cli
inc
or
mov
jp
jne
inc
repnz
add
fidivr
xchg
dec
lea
stos
cmp
sbb
add
xor
cmp
nop
push
fistp
add
add
jae
pop
jp
mov
pop
ret
push
cmp
stos
ja
pop
rol
(bad)
hlt
add
add
add
push
pop
cmp
mov
popa
in
push
xchg
and
call
scas
imul
sub
test
jb
data16
cdq
sbb
add
and
retf
xlat
jo
loop
scas
push
add
jg
lea
add
add
mov
inc
xor
add
(bad)
inc
mov
mov
mov
and
cdq
sub
mov
add
cmc
loope
lock
add
mov
aaa
add
mov
add
push
mov
jo
fdivr
mov
and
add
push
cmp
(bad)
cli
ins
add
pop
popa
push
add
int3
xchg
and
cld
sub
(bad)
lods
add
xchg
ficomp
and
xlat
mov
add
test
popa
aam
pop
out
jge
add
mov
data16
outs
mov
hlt
rcl
call
add
add
iret
jp
int
xor
aad
cdq
add
fdivp
sbb
cli
pop
add
movs
add
add
jecxz
loop
pop
in
pop
aad
mov
fiadd
jne
add
add
(bad)
pop
in
hlt
jae
xchg
mov
out
add
add
ror
push
in
js
mov
hlt
sub
sub
gs
sar
nop
js
cld
add
call
xchg
mov
adc
aas
and
fdivp
cmps
add
add
arpl
sub
cmp
mov
sahf
call
add
and
out
shr
add
dec
jns
xchg
pop
mov
xlat
bnd
xchg
outs
js
add
pusha
add
inc
scas
retf
movs
clc
out
pusha
jmp
sbb
add
call
add
jae
add
xchg
mov
in
fadd
les
xor
add
sub
xchg
mov
fmul
(bad)
lahf
dec
mov
(bad)
out
add
and
pop
das
jmp
xchg
add
mov
xlat
add
and
(bad)
sub
mov
jbe
cmc
add
lock
dec
jge
pop
mov
addr16
fsubr
mov
jp
add
push
sbb
retf
mov
add
fwait
cmp
mov
add
les
or
mov
bound
jge
add
jb
add
loopne
push
and
mov
add
pop
lods
push
adc
push
add
add
add
inc
inc
xchg
mov
dec
inc
into
dec
cdq
movs
push
mov
out
xchg
add
(bad)
mov
inc
add
mov
fisttp
cmc
and
js
sbb
add
add
jmp
rcr
pop
add
inc
rcr
dec
data16
jnp
out
test
inc
inc
jmp
mov
repnz
add
call
das
js
lock
inc
mov
add
sub
cli
add
mov
add
add
lea
imul
jmp
dec
push
clc
cs
test
add
xchg
shr
add
cmp
add
add
add
int
lock
adc
inc
je
inc
push
aam
ds
add
jbe
lods
retf
mov
add
add
cld
cmps
inc
push
stc
pop
lock
test
jbe
mov
or
add
inc
lahf
mov
ficom
add
pop
add
test
push
xor
xor
inc
lock
mov
and
stos
cmps
ret
in
push
add
and
out
add
mov
ja
(bad)
into
mov
test
sub
dec
or
push
adc
repz
pop
adc
push
sub
mov
add
mov
fwait
jne
into
or
xchg
add
popa
push
xor
add
pop
lea
shl
out
jl
add
and
xor
mov
inc
out
call
stos
add
jnp
mov
fwait
push
and
and
add
in
add
cld
ins
sbb
sub
rcl
icebp
and
pop
inc
add
jnp
pusha
pop
inc
add
add
add
shl
shr
mov
push
pop
clc
test
jg
je
imul
call
sub
faddp
mov
xchg
mov
mov
cs
add
add
add
shl
cmp
sub
add
and
leave
dec
outs
aam
test
add
and
add
cmp
pop
dec
mov
or
jne
pop
ds
stos
jbe
add
les
ret
or
push
mov
test
mov
cmp
cld
(bad)
push
addr16
(bad)
cmp
add
adc
add
cmps
repnz
fwait
push
ins
je
adc
add
jo
call
sub
out
fwait
add
lods
outs
mov
mov
ret
iret
in
bound
adc
jecxz
fs
add
imul
add
add
dec
jl
jo
je
lods
ret
pop
ret
arpl
lea
add
push
xchg
xor
xchg
pop
cmp
pop
test
out
add
add
outs
push
xchg
imul
jbe
or
push
ror
add
lods
fdiv
push
and
repnz
ins
jo
lock
pop
lahf
mov
add
cmp
aam
sbb
jb
add
cmps
pop
loopne
loop
inc
je
add
push
test
xchg
sub
add
mov
mov
adc
movs
and
dec
retf
mov
xchg
xor
push
mov
call
hlt
inc
sti
jmp
sbb
mov
jle
dec
scas
jbe
aam
fdivr
cli
ret
inc
je
push
add
add
add
push
adc
test
push
aad
fwait
outs
dec
adc
cli
movs
lea
push
cmp
stos
add
js
movs
push
les
rol
aam
scas
retf
add
push
fcom
mov
arpl
mov
add
out
dec
fsubr
dec
adc
push
das
adc
cmp
add
add
add
mov
popf
clc
test
test
xor
inc
mul
add
mov
loop
jle
push
icebp
add
jl
into
dec
add
popa
loope
outs
add
push
ja
add
int3
xlat
mov
xor
aam
out
test
sub
jo
lods
mov
push
add
fnsave
add
push
push
mov
xchg
push
stos
cmp
add
test
pop
xchg
xor
aas
add
(bad)
idiv
inc
lahf
add
push
call
add
mov
ret
xor
aad
dec
das
adc
out
cmps
(bad)
clc
mov
xchg
fidivr
test
dec
add
add
push
loopne
mov
push
scas
cli
outs
add
inc
cmp
fld
xor
and
aaa
fst
jb
repnz
nop
pop
fs
add
xchg
pop
pop
icebp
add
imul
add
add
add
fimul
inc
call
test
dec
retf
lea
test
add
mov
push
push
mov
push
jb
sbb
xchg
pop
add
pusha
cs
add
jae
sahf
add
(bad)
gs
jg
add
pushf
sbb
push
add
xchg
int
mov
xchg
add
adc
adc
pop
ds
or
add
push
ss
pop
je
inc
lods
cld
jbe
add
jp
cmps
add
and
ret
shr
imul
add
js
popa
popf
add
sub
and
mov
jmp
mov
add
mov
cld
ins
aas
jae
dec
sbb
fidivr
lods
fadd
inc
adc
mov
add
push
popf
mov
push
pop
inc
xor
lds
sar
arpl
inc
pop
fs
add
dec
sar
mov
xor
push
test
add
add
mov
repnz
or
icebp
dec
cmp
add
add
add
or
out
pop
cwde
push
and
sar
xor
cld
add
es
sub
cmp
jl
add
or
pushf
(bad)
fld
pop
add
add
hlt
retf
outs
aad
jmp
jae
stos
jle
push
pusha
xchg
mov
add
dec
inc
push
push
adc
loop
add
mov
movs
add
push
add
sub
dec
add
and
add
cmps
add
cmp
add
mov
adc
lock
sbb
outs
xchg
xor
dec
sub
add
pop
repz
hlt
pop
inc
cmps
add
ins
pop
gs
add
cmp
jo
dec
or
add
xchg
push
leave
jb
ss
and
add
jl
and
add
add
out
mov
jge
add
call
pusha
xchg
loopne
jnp
loop
push
ss
test
pusha
imul
pop
cmp
pop
loopne
shl
dec
jo
jecxz
out
mov
add
mov
add
mov
inc
add
pop
aad
mov
cmp
loope
add
dec
outs
scas
mov
xchg
lds
inc
xchg
push
add
or
add
add
mov
cmc
popa
sub
cmp
cld
add
xlat
pop
sub
mov
cld
and
mov
sub
sub
enter
cwde
xchg
add
inc
push
int3
inc
outs
xchg
jnp
stos
addr16
sbb
jb
pop
dec
add
lds
add
mov
add
cmps
rcr
rdtsc
icebp
sbb
mov
out
test
adc
and
sahf
leave
out
mov
popa
cdq
and
sub
daa
dec
loop
or
push
ss
cli
add
add
out
pop
add
add
push
adc
push
adc
retf
sub
xor
cwde
(bad)
enter
mov
jmp
push
push
(bad)
loop
bound
pushf
dec
inc
pop
push
adc
add
add
cwde
jg
push
cli
push
mov
les
or
jmp
fnstenv
xlat
cmc
ins
mov
imul
pushf
sti
out
stc
aad
fiadd
jmp
add
mov
stos
(bad)
aas
in
test
mov
out
or
(bad)
lods
add
add
mov
icebp
pop
xlat
adc
add
dec
pavgw
adc
add
or
jo
pushf
fistp
or
mov
cmp
movs
mov
in
sti
add
push
rcl
pop
sub
add
xor
xchg
push
push
repz
sub
add
push
push
cld
push
adc
mov
test
(bad)
out
mov
imul
ja
add
add
dec
outs
jmp
inc
mov
xor
push
push
mov
jl
std
sub
add
xchg
pop
sahf
cs
cmp
clc
scas
rol
addr16
ja
jmp
pushf
into
add
mov
push
push
xor
les
loop
fisubr
add
inc
add
jo
(bad)
sbb
pusha
cli
jecxz
sbb
ins
add
sub
scas
imul
test
ss
aad
cmp
std
cmp
out
adc
in
and
int3
outs
ins
add
pop
aaa
jecxz
fs
repnz
mov
add
mov
add
imul
retf
push
ins
out
xchg
mov
sub
mov
add
add
shl
dec
pop
pop
mul
into
adc
test
adc
add
push
shr
mov
lods
or
jbe
cmp
or
add
jb
adc
mov
fcomp
add
pop
test
test
movs
mov
scas
call
mov
sbb
jnp
xlat
xor
push
ds
add
fisub
mov
(bad)
jnp
sbb
enter
add
push
test
push
push
movs
ins
add
shr
out
add
lahf
fsubr
add
push
data16
mov
push
in
out
cmp
iret
xor
bound
cmps
(bad)
and
add
add
fist
(bad)
push
sahf
push
lds
add
outs
ins
push
sub
jl
lock
popf
add
sbb
bound
and
es
sbb
test
movs
stc
and
cmps
add
add
sub
mov
push
xor
imul
(bad)
out
test
in
inc
inc
retf
cmp
add
push
jge
test
cld
mov
xchg
inc
sbb
sar
popf
scas
add
add
add
mov
movs
fadd
or
or
test
aas
add
retf
pop
push
pushf
add
mov
cli
mov
lods
cdq
dec
push
cmp
jle
test
or
sbb
push
repnz
scas
lods
add
fiadd
push
add
cdq
test
add
pop
test
int
dec
rol
dec
aas
sub
add
mov
jmp
add
or
dec
push
inc
les
jbe
sti
enter
add
add
add
add
push
pop
jb
or
inc
loope
lahf
adc
jns
xlat
adc
pop
sbb
lock
mov
adc
jbe
retf
ficomp
fwait
mov
lds
push
div
fsubr
adc
stc
jo
adc
fld
popa
in
lods
test
ins
lock
or
add
ret
xor
cmc
or
lock
pusha
or
add
fadd
sbb
popa
or
mov
loopne
cmp
add
mov
cwde
scas
xchg
aam
add
add
cdq
push
fdivr
jl
(bad)
sub
or
add
icebp
inc
sbb
bt
adc
add
mov
dec
enter
xor
add
inc
aas
cmp
stos
push
ss
into
push
sub
nop
nop
xor
add
or
outs
xchg
scas
sbb
sbb
sbb
das
add
imul
add
pushf
gs
push
test
add
fdivp
call
mov
pop
nop
pop
jb
add
mov
stc
stos
jae
mov
add
sbb
push
mov
fidivr
ins
add
add
add
add
push
and
(bad)
add
dec
loop
aam
les
add
sbb
jge
cmp
mov
add
sbb
push
call
cmp
push
and
jnp
repnz
outs
movs
mov
fisub
add
add
les
(bad)
mov
adc
inc
add
js
das
jp
ds
repz
add
cmp
add
int
add
add
adc
outs
enter
and
push
fadd
add
dec
add
push
imul
push
imul
cld
test
add
idiv
add
add
and
daa
ret
mov
mov
mov
shl
mov
add
add
add
push
cwde
fisttp
sbb
xor
cmp
xchg
loopne
cmp
lahf
lahf
mov
add
mov
das
xor
mov
add
add
add
stos
mov
xor
je
leave
js
aas
xor
cmc
add
sbb
add
stos
or
add
jle
add
js
push
xlat
add
add
pushf
pushf
repz
and
pop
xchg
or
add
mov
add
add
adc
add
jne
icebp
xchg
push
add
mov
push
cmps
fcomp
dec
inc
adc
enter
mov
retf
cmc
mov
xchg
addr16
push
push
dec
inc
add
sahf
std
rol
loope
out
xchg
in
cmps
sbb
xchg
sahf
xor
jge
dec
mov
xchg
mov
out
ss
cmp
pop
stc
add
dec
sub
dec
enter
inc
mov
fdiv
popf
fimul
mov
and
out
sbb
xchg
xchg
retf
pushf
sbb
jl
(bad)
loop
dec
dec
push
xor
inc
sub
adc
push
bound
mov
ja
iret
mov
add
pop
loope
ret
jp
jo
retf
add
add
loopne
lods
sbb
sub
mov
add
mov
cmp
push
das
repz
sar
add
rcl
adc
xchg
push
add
pop
idiv
(bad)
cld
out
pop
idiv
add
dec
xor
mov
pop
pop
add
or
addr16
lock
mov
push
shr
loopne
adc
mov
fstp
mov
sub
call
adc
pop
in
add
mov
icebp
push
cmp
shr
xchg
jl
add
push
aas
xlat
ret
push
hlt
mov
cmovge
aam
addr16
sub
add
push
cmp
sbb
add
data16
sub
inc
pop
cwde
call
mov
xor
mov
add
loopne
mov
iret
stc
scas
jbe
cmp
and
jbe
jae
std
push
sub
jg
push
fwait
inc
pusha
jne
jnp
push
push
jle
rcl
cmps
mov
add
js
mov
push
sbb
add
add
enter
xchg
push
add
fistp
mov
mov
add
ja
sbb
clc
outs
sbb
gs
sub
dec
mov
xchg
mov
cmp
adc
or
in
pop
sar
add
or
lds
cmps
rcl
aaa
into
inc
pop
call
mov
xchg
push
out
add
mov
mov
add
sbb
pusha
sub
add
leave
add
icebp
jge
add
jbe
shl
xchg
pop
lea
das
pop
and
into
hlt
or
mov
rol
xor
movs
test
inc
leave
out
mov
xor
jmp
inc
dec
sub
enter
jecxz
add
add
fbstp
jl
jge
icebp
inc
or
pop
(bad)
out
jmp
sbb
ja
mov
add
jnp
sub
push
repnz
cmp
push
add
add
cmp
adc
aaa
dec
out
add
mov
cmp
loop
sbb
ins
aad
add
(bad)
or
in
add
mov
pop
out
dec
sbb
add
jb
in
call
add
jns
clc
add
cmp
imul
add
cmps
enter
pop
lea
inc
add
es
pop
imul
and
add
out
push
data16
add
add
push
cs
movs
cli
mov
jecxz
jmp
and
imul
pop
inc
add
xchg
leave
cmc
add
add
sub
icebp
or
add
add
add
rcr
and
das
sti
(bad)
xlat
add
add
fist
sbb
push
xchg
cmp
in
inc
add
xor
adc
xchg
adc
add
jo
ins
add
aaa
mov
push
or
loop
jecxz
leave
add
push
add
aas
sbb
(bad)
outs
xor
in
retf
add
aaa
pop
push
ret
mov
stos
test
pop
pop
mov
clc
inc
dec
add
inc
data16
int3
dec
add
ja
add
add
loope
sbb
inc
mov
aad
push
jle
les
in
bound
add
add
fst
stc
or
xor
dec
add
(bad)
stos
js
ret
repnz
cmps
push
xor
aam
mov
push
repz
sti
out
dec
inc
pop
mov
adc
add
cmp
cs
or
mov
mov
add
adc
outs
inc
pop
ficom
pop
add
add
add
cmp
arpl
lds
sbb
fs
arpl
push
test
jnp
jp
ja
jmp
and
mov
ins
add
int3
xor
dec
cmps
in
fiadd
movs
add
or
loop
push
enter
pop
add
out
jnp
add
test
pop
pop
mov
inc
loopne
addr16
sub
out
mov
int3
dec
add
das
add
push
mov
arpl
adc
adc
add
arpl
inc
dec
add
pusha
dec
sub
dec
add
test
cmc
sbb
add
or
fiadd
cld
in
add
add
dec
jb
xor
mov
xchg
and
arpl
stos
(bad)
clc
cwde
addr16
test
xchg
clc
aad
movs
add
add
push
popf
add
dec
mov
pop
retf
push
mov
sar
aam
out
bound
jge
dec
pop
add
push
test
stc
mov
dec
sub
jo
push
shl
push
add
xlat
sti
add
dec
js
add
into
lds
xchg
mov
sar
mov
adc
pop
movntps
fdivr
mov
retf
mov
mov
push
pop
xor
add
scas
ss
push
mov
mov
jp
fwait
xor
cs
leave
movs
mov
xchg
add
add
out
add
xchg
in
or
xchg
mov
pushf
movs
mov
scas
push
popa
xor
nop
add
lock
push
mov
popf
add
mov
aad
shl
jbe
retf
arpl
add
lods
or
(bad)
test
out
test
imul
ret
out
adc
or
xor
cmps
retf
shl
adc
ja
push
sbb
jmp
add
int
iret
add
add
add
adc
stc
out
fnstsw
add
add
add
pop
push
call
adc
mov
xor
and
jne
pushf
mov
data16
fidivr
data16
fld
lods
add
add
or
mov
xor
jno
out
add
arpl
cmp
mov
nop
sti
in
fucomi
add
je
rol
add
fld
mov
add
xor
mov
mov
mov
repnz
in
dec
dec
jb
in
xor
add
add
shl
inc
clc
outs
pusha
stos
push
call
sti
pusha
xor
retf
push
push
add
push
add
xchg
add
add
mov
xor
rcl
dec
cmp
lods
mov
enter
sub
inc
arpl
cmp
inc
add
lods
or
push
add
mov
arpl
add
xor
icebp
fcom
fwait
add
add
add
sbb
lock
pop
sbb
cli
pusha
je
jns
fld
jb
inc
add
jmp
mov
ja
cmps
mov
add
xchg
pop
xchg
jae
in
add
test
add
loop
adc
arpl
add
mov
hlt
inc
inc
frstor
push
and
test
cmp
out
add
or
rcr
or
add
adc
xchg
ret
add
stos
dec
and
add
lea
sbb
mov
outs
add
add
xor
dec
sbb
jmp
fimul
push
add
push
mov
add
push
dec
add
adc
mov
push
das
pop
adc
dec
fmul
xchg
das
jecxz
popa
cmp
test
fadd
add
push
push
jnp
test
jbe
add
add
add
sub
adc
int3
sbb
add
daa
sbb
add
leave
std
(bad)
imul
push
xlat
mov
mov
cld
nop
dec
fadd
add
loop
jl
xchg
cs
add
adc
mov
scas
or
fld
dec
ins
add
add
jns
add
int3
mov
aaa
mov
sbb
js
or
retf
add
repnz
ret
mov
ror
inc
add
jl
sti
mov
lahf
ds
add
ret
jecxz
and
dec
jmp
shl
out
sbb
ins
inc
add
mov
rcl
aad
fld
xor
adc
jnp
jge
add
fnsave
jg
mov
fs
add
out
int3
adc
cmp
cmp
adc
adc
imul
bound
fwait
jae
or
or
jno
inc
(bad)
xchg
or
nop
stos
add
fisub
add
add
test
add
xchg
iret
les
sbb
add
out
dec
add
mul
add
jmp
loope
add
lahf
sub
mov
aam
outs
cmp
add
mov
int3
pusha
repz
xor
add
cmp
mov
add
in
push
mov
popf
dec
mov
ret
inc
pop
add
or
adc
mov
mov
and
add
add
mov
inc
aam
dec
mov
mov
ret
ds
mov
dec
dec
push
pusha
sub
(bad)
mov
lods
cwde
test
add
or
ror
cmps
jg
pop
add
es
jl
cmp
adc
add
add
rol
sub
loopne
aad
lock
add
dec
ss
je
xchg
or
mov
add
or
pop
test
in
mov
inc
xchg
loope
mov
add
inc
ret
stos
cmp
cmp
sbb
clc
add
add
inc
mov
cmp
sub
dec
xor
fcmovbe
push
test
dec
dec
bound
repz
mov
call
stos
mov
sbb
out
mov
call
cmp
mov
std
or
add
in
jbe
test
dec
fist
movs
lock
ins
sub
add
add
fild
test
std
sbb
add
mov
rcl
and
xchg
pop
aad
add
push
jns
sbb
dec
adc
test
add
add
sub
cmc
add
and
(bad)
imul
jmp
xchg
add
add
or
iret
adc
mov
ret
cmp
jle
add
or
pusha
leave
or
imul
add
add
out
out
inc
imul
mov
push
pop
or
xchg
int3
add
sti
add
add
inc
das
xor
les
ror
add
add
cmp
inc
rol
vmwrite
fisub
mov
push
adc
add
jg
jns
xchg
cwde
add
sbb
aaa
add
stos
sahf
lea
repnz
jns
jb
imul
mov
dec
mov
mov
dec
fs
mov
popf
mov
jnp
popf
add
add
add
jl
mov
in
jg
and
mov
push
push
mov
add
jp
dec
ins
iret
out
mov
shl
aad
sbb
sub
jmp
pop
jmp
cmp
and
xchg
shl
dec
push
sub
mov
inc
add
movs
shl
out
sub
test
xchg
jbe
mov
out
xchg
outs
mov
dec
add
add
lahf
mov
add
sbb
jmp
ret
xchg
mov
add
repz
int3
mov
cdq
mov
dec
cmps
rcr
push
fist
inc
xor
add
add
add
add
xchg
out
lds
fild
mov
inc
rcr
dec
popa
pop
shl
in
(bad)
fsubrp
pop
stos
test
sbb
pop
push
cmp
arpl
cmc
das
add
push
ins
or
cmp
sbb
ss
add
stos
cmps
add
ins
add
add
cmp
fcmove
les
sub
rcr
leave
sub
out
rol
fs
fcmovnb
aad
add
imul
jmp
mov
add
add
in
iret
out
mov
repz
loope
adc
xor
jnp
jo
mov
add
add
inc
push
iret
inc
popa
iret
ffree
call
add
lods
xchg
aas
add
or
in
movs
mov
add
mov
jmp
push
xor
add
jnp
jnp
sub
jecxz
add
add
lods
out
sar
mov
cmp
inc
out
add
bound
sub
push
idiv
and
add
add
jmp
movs
cmp
pusha
add
add
jbe
sbb
add
cmp
cmp
cwde
in
add
pop
shl
push
in
jl
jge
(bad)
ficom
fidivr
lock
inc
dec
pop
loopne
or
or
mov
mov
dec
mov
or
in
fsub
in
dec
js
pop
mov
add
add
addr16
test
and
imul
pusha
push
fiadd
fiadd
inc
adc
repnz
aad
test
add
fcomp
inc
jns
lock
ror
stc
jle
and
iret
call
or
outs
jecxz
div
add
outs
sbb
push
mov
loop
ins
add
out
add
in
mov
test
popa
scas
xchg
or
add
jo
cmps
add
mov
dec
and
xchg
add
pop
loope
dec
dec
test
add
xchg
in
(bad)
add
inc
add
(bad)
xor
not
add
add
add
inc
in
push
mov
popa
jne
or
mov
cs
jb
add
mov
dec
fild
pop
xchg
std
sbb
add
shl
dec
cpuid
push
xchg
mov
add
imul
mov
add
add
jns
xor
rol
leave
push
ficom
cmc
xchg
lahf
add
(bad)
adc
mov
(bad)
xchg
add
loop
add
popf
add
add
es
cmp
mov
fisttp
add
cmps
loopne
repz
dec
mov
ret
std
out
sub
mov
mov
pusha
std
retf
cmp
add
add
mov
imul
leave
pusha
and
xor
inc
add
mov
add
neg
test
daa
inc
loop
movs
cmp
adc
jae
add
imul
mov
pusha
mov
add
add
add
ins
fs
push
dec
scas
(bad)
xchg
(bad)
sbb
fst
aam
or
inc
pop
in
adc
aam
stc
mov
rcr
add
push
add
add
add
push
xor
loope
out
jg
cmps
xchg
xlat
out
fnstcw
scas
mov
aad
out
and
mov
sbb
sub
loopne
add
es
push
pop
test
fsubrp
in
sbb
sub
add
cmp
sbb
inc
jp
push
add
fidivr
add
cmc
sub
jbe
aas
pop
pop
test
into
inc
fs
imul
scas
adc
movs
outs
sbb
pop
add
jge
mov
pop
add
movs
add
rcr
add
push
add
loop
push
adc
and
sbb
push
pop
add
add
dec
push
mov
je
ins
jl
out
pushf
cmp
push
xlat
add
and
pop
call
into
stc
fwait
dec
add
xchg
mov
cmp
sbb
add
popf
add
stos
jne
stos
stos
call
or
popa
pop
push
jo
add
mov
sahf
add
fs
add
add
xor
mov
add
loope
jmp
gs
addr16
pop
in
stc
inc
mov
out
mov
sar
or
adc
fidiv
push
fwait
shr
stos
mov
add
xlat
frstor
add
setae
pop
xchg
xlat
pop
jecxz
add
je
add
pop
and
scas
shl
pop
lock
cmp
add
mov
sub
add
add
retf
(bad)
sub
xor
add
mov
(bad)
into
scas
sbb
push
cwde
add
dec
aad
lock
add
test
mov
or
test
and
xchg
ds
neg
mov
sub
add
addr16
int3
or
dec
test
jne
or
sbb
add
shr
imul
xchg
fisttp
add
sub
add
dec
sub
push
rcr
add
shl
mov
adc
icebp
test
add
jle
loopne
adc
dec
mul
retf
mov
or
add
add
ror
in
dec
cwde
popw
xchg
sbb
dec
ja
inc
push
pop
adc
lock
stos
bound
jne
jmp
movs
in
add
add
fidivr
xor
cmp
inc
imul
adc
pusha
out
or
sbb
leave
pop
or
add
add
xchg
fcmovb
movs
out
shl
add
ss
fstp
(bad)
or
outs
mov
pusha
adc
jb
add
add
add
pusha
cmps
sahf
jno
jae
sbb
xchg
mov
mov
pop
cli
call
mov
adc
les
sbb
mov
int
outs
or
sub
adc
call
add
mov
push
daa
push
push
lock
push
jge
jmp
mov
fild
add
adc
popf
cmp
add
push
imul
enter
movs
mov
cmps
(bad)
(bad)
fmul
lahf
iret
mov
add
xor
inc
sti
jmp
popf
leave
and
int3
or
add
cld
inc
fldl2e
(bad)
mov
mov
add
add
out
push
sub
das
sub
mov
or
mov
add
out
call
jnp
ret
adc
add
push
out
cmp
add
add
fdivr
mov
sub
call
pop
and
imul
push
shl
add
or
pop
sahf
ja
add
pusha
and
add
push
cli
jmp
pushf
mov
movs
xchg
add
popf
js
mov
or
ja
sub
movs
jmp
push
push
cs
repz
jnp
push
sub
add
add
pop
ins
or
out
adc
jno
sti
xchg
movs
nop
mov
ins
add
inc
cmp
add
add
test
mov
imul
int
std
and
sbb
aas
std
ins
pop
xchg
jge
call
pop
dec
sub
sbb
mov
cli
sub
sahf
xor
in
jae
shl
xor
ds
paddq
jmp
leave
ins
in
add
sti
add
fidivr
add
arpl
mov
mov
into
inc
adc
pop
sbb
xor
daa
add
sar
add
adc
stos
jecxz
leave
adc
aas
pop
lods
stc
xor
dec
xor
mov
pop
lock
jecxz
test
add
mov
stos
loopne
(bad)
repz
sub
mov
push
sar
pop
add
sub
in
add
add
lods
add
add
imul
sbb
fstp
cmp
inc
sub
or
add
add
int
dec
mov
jo
jb
movs
(bad)
jmp
(bad)
aaa
add
addr16
repnz
js
not
lock
inc
add
sahf
js
sbb
push
es
aam
call
push
mov
test
add
add
stc
sub
cli
outs
repz
frstor
sbb
add
add
ja
jecxz
and
pop
enter
arpl
and
ds
jecxz
std
cmps
xor
sbb
fsub
loop
dec
add
mov
mov
add
cmp
or
sar
bound
out
add
add
in
xchg
or
and
add
rol
test
xchg
packssdw
add
add
mov
imul
adc
fwait
repnz
sbb
imul
xor
jl
(bad)
sti
add
add
add
in
mov
les
stos
enter
add
into
icebp
dec
int3
mov
add
add
jge
in
xor
cmp
mov
inc
test
xor
jl
nop
leave
(bad)
cmp
sbb
sub
add
push
out
sbb
sahf
push
sub
in
(bad)
int
test
test
push
add
add
cmp
das
test
aam
into
xor
push
bound
mov
xlat
pop
imul
icebp
pop
xor
add
mov
mov
das
sbb
pop
add
call
popf
add
push
test
sbb
imul
xor
mov
iret
xchg
or
add
jne
add
adc
push
mov
add
add
into
sbb
repnz
inc
sar
out
dec
ja
ror
sbb
es
pop
add
pop
mov
push
add
bound
add
add
add
mov
push
and
add
loop
jae
adc
and
add
(bad)
mov
daa
or
mov
outs
out
retf
test
add
pop
lea
add
cmp
sub
xor
cmp
pop
std
arpl
add
xchg
clc
sbb
add
mov
xchg
inc
repz
add
inc
(bad)
push
jae
push
xor
and
popa
xor
mov
das
test
xchg
sbb
add
add
add
gs
and
cwde
add
mov
mov
add
dec
jp
jl
mov
shl
mov
jmp
out
push
cwde
fsubp
sbb
in
sbb
xor
xchg
add
add
jmp
scas
and
push
mov
mov
retf
or
lods
pop
mov
dec
mov
imul
cmp
mov
loopne
add
add
sub
shl
xchg
ficom
jne
lea
jnp
mov
in
pop
xor
and
out
(bad)
fsub
es
adc
mov
adc
add
add
add
pop
inc
fldenv
inc
pop
push
pop
push
clc
sbb
mov
xlat
les
push
cmp
pushf
pop
test
dec
jmp
sbb
inc
cmp
adc
inc
dec
lods
fwait
(bad)
fild
pushf
popa
into
sbb
ret
mov
add
add
pop
addr16
pusha
ret
inc
fs
mov
mov
push
sbb
add
xor
ds
jg
add
adc
or
sbb
fld
bound
add
ret
dec
sbb
push
rol
dec
add
leave
mov
das
xor
lods
call
add
add
bnd
out
and
les
xor
xchg
xor
nop
xlat
mov
add
mov
imul
je
enter
into
sbb
add
retf
inc
lea
add
test
add
add
and
test
leave
sbb
mov
popf
add
jmp
scas
add
inc
dec
add
aam
cmps
aad
inc
nop
cli
retf
mov
lahf
rcl
loop
add
ds
jmp
dec
adc
mov
add
shr
pop
out
jmp
test
adc
bound
out
call
js
mov
(bad)
adc
int
dec
pop
inc
inc
stos
add
lea
imul
out
xor
push
add
imul
jecxz
mov
jae
lea
sbb
ret
add
gs
mov
js
jle
daa
add
mov
pop
fwait
(bad)
xchg
xor
pop
add
pop
add
cld
or
add
add
add
jnp
lock
and
xor
and
ret
in
sbb
or
iret
(bad)
pop
cmp
inc
mov
outs
add
je
das
into
and
mov
test
add
or
add
and
add
inc
jge
stc
nop
clc
cmps
iret
xor
xchg
mov
add
daa
lods
jno
js
jp
cmp
inc
pop
adc
cmp
add
and
jmp
dec
pusha
add
mov
inc
xor
add
mov
icebp
lea
lea
mov
stos
add
add
hlt
sahf
add
pop
add
pop
add
add
pop
xchg
fwait
out
mov
jg
je
stc
cdq
leave
sti
cmp
loopne
popa
xchg
fst
cli
add
fdiv
(bad)
push
out
xchg
inc
mov
pusha
add
pusha
(bad)
ja
inc
mov
repz
(bad)
aad
xchg
pop
mov
xchg
fs
jb
sub
add
es
(bad)
pop
sbb
or
xor
add
add
aas
fidivr
push
add
test
pop
mov
gs
cmps
test
lods
dec
and
add
outs
jle
pop
lods
jl
jo
lds
mov
xchg
xchg
std
sbb
daa
inc
sub
push
imul
add
rcr
mov
inc
(bad)
jmp
pop
sbb
add
or
pop
mov
mov
pop
push
fidivr
sub
add
test
push
xor
xchg
mov
shl
xor
add
xchg
sub
mov
adc
call
outs
call
mov
sahf
pop
in
sub
(bad)
xchg
into
ret
dec
xchg
add
add
out
mov
pop
mov
xchg
es
fbstp
jbe
cmc
movs
inc
loope
aaa
push
xchg
cmps
and
pushf
cmc
nop
outs
push
loop
inc
add
or
sbb
xor
fstsw
sbb
xchg
and
jae
add
jnp
pop
sahf
mov
xchg
or
add
cmps
pusha
push
call
into
sbb
movs
int3
cmp
les
lahf
add
mov
in
xchg
iret
clc
retf
add
adc
pop
mov
add
(bad)
and
dec
scas
bound
or
or
add
adc
jno
mov
push
cmc
inc
int
mov
in
int
movs
in
pop
mov
aaa
sub
(bad)
push
xor
movs
lea
ret
test
hlt
mov
add
dec
enter
pop
or
and
in
scas
inc
js
mov
iret
add
fiadd
add
add
iret
retf
ret
out
and
push
sub
test
and
aam
xlat
ins
(bad)
jnp
sub
mov
add
add
add
mov
and
pop
push
dec
cmp
js
adc
mov
pop
mov
outs
and
add
add
out
(bad)
int3
verr
repnz
mov
add
sbb
add
and
add
sbb
mov
pop
inc
test
mov
fiadd
fadd
jmp
mov
jge
cmp
test
add
in
ror
stos
fs
xor
test
cdq
cmp
xchg
ret
inc
lds
iret
fadd
outs
shr
add
fdivr
icebp
mov
loope
pop
push
cmps
push
rol
add
add
iret
xlat
cmp
jne
int3
adc
addr16
add
(bad)
and
jbe
add
push
and
add
dec
pop
xor
ins
push
add
xchg
add
add
add
loop
add
gs
sub
int3
sbb
cmp
out
aas
add
push
icebp
add
movs
mov
fcom
movs
je
(bad)
aas
mov
dec
add
inc
add
pop
clc
inc
push
idiv
jmp
mov
adc
xchg
scas
fst
idiv
retf
daa
bnd
mov
lods
or
mov
cs
cmp
div
mov
or
(bad)
sbb
and
sbb
ja
dec
test
ins
push
test
push
adc
fldenv
add
add
add
add
outs
adc
call
lahf
jae
stc
aad
mul
rol
pop
pop
retf
mov
jmp
es
mov
jmp
lods
mov
add
les
scas
sub
ret
jne
pop
data16
add
mov
cmp
adc
dec
dec
in
fist
addr16
push
retf
mov
movs
pop
cmc
add
inc
add
add
add
mov
(bad)
int3
adc
out
test
add
add
repz
adc
aas
adc
leave
mov
jb
pop
add
int3
fwait
add
ja
retf
and
add
add
mov
nop
xchg
and
ja
int3
inc
fadd
add
cdq
mov
add
sahf
addr16
pusha
movs
lds
loopne
call
ins
je
adc
add
and
inc
cmp
call
test
int3
mov
add
add
pop
jae
fucompp
push
push
sub
xchg
test
pop
in
or
push
sub
and
add
lahf
aam
add
add
and
mov
das
(bad)
xor
xchg
sbb
add
xor
add
fwait
jmp
test
add
(bad)
add
fmul
mov
add
mov
pusha
outs
jb
imul
cmp
jg
daa
add
daa
or
fldcw
add
inc
frstor
add
add
cli
push
and
add
dec
ds
test
dec
repnz
sbb
xchg
fbstp
pop
xchg
sldt
add
adc
fist
jno
dec
test
sbb
out
loop
push
popf
add
fwait
add
add
xor
pusha
jl
leave
xchg
popf
push
push
mov
mov
scas
lods
pop
cmp
out
xchg
mov
add
jb
jnp
jbe
jb
push
push
out
(bad)
comiss
fwait
repz
sub
(bad)
add
xlat
xor
rcl
mov
cmp
fst
pop
add
test
add
jnp
mov
fsub
cmp
mov
jne
sbb
add
add
push
es
or
xlat
and
or
fdivr
fucomp
jae
sbb
stc
outs
mov
imul
scas
mov
adc
add
pushf
xchg
str
add
xchg
dec
cmp
lahf
setle
inc
rcl
or
push
dec
add
movs
add
add
add
in
(bad)
test
jg
loop
(bad)
fsubr
pop
aaa
xlat
add
int
jmp
out
add
lock
xor
pop
jmp
popf
inc
pop
mov
sbb
in
sub
push
fisubr
jno
cli
xor
add
sub
push
xchg
jmp
lods
add
ss
mov
add
mov
and
add
jne
sub
xor
add
add
add
xchg
cdq
and
jo
push
add
xchg
cmp
loop
arpl
dec
add
push
(bad)
fldlg2
mov
add
retf
inc
ror
aad
(bad)
rcl
push
pop
mov
sbb
add
outs
jb
js
mov
mov
cs
add
add
ret
fild
sbb
jno
std
push
dec
add
stos
add
add
loop
xor
or
mov
cmp
add
lods
movs
aad
test
push
inc
lods
or
jl
jns
rol
add
sar
in
inc
repz
mov
add
in
je
add
inc
xchg
add
add
not
lea
arpl
xor
inc
daa
je
pop
inc
dec
mov
jae
fcmovu
std
add
aad
outs
psubusw
add
mov
iret
popf
add
aaa
mov
test
mov
mov
add
icebp
jbe
cmps
pop
xchg
jmp
push
imul
or
mov
sar
xlat
xor
fsub
mov
shr
inc
ja
add
push
cmc
push
in
push
adc
jmp
aaa
fld
and
add
into
xor
and
add
jge
rcl
inc
cmp
add
push
add
adc
ins
xor
xor
push
push
sar
or
cmc
ss
shld
xor
xchg
daa
sahf
out
fist
cmp
xchg
and
sub
dec
outs
cmc
jmp
rcr
mov
and
xcrypt-ctr
cmps
pop
add
lods
sbb
inc
jp
ins
mov
test
add
fiadd
test
xlat
jl
das
ror
(bad)
push
and
lahf
xchg
ret
xor
xchg
inc
add
xor
or
lock
cmc
dec
aas
fsin
int3
inc
push
sar
sbb
sbb
add
add
ins
pop
add
cmp
popf
ins
xor
pop
sbb
or
pop
aaa
mov
pop
nop
pop
adc
add
hlt
aas
mov
inc
inc
std
fisttp
scas
bound
in
cmp
ret
xchg
xor
add
add
mov
pop
inc
jg
jne
or
pop
out
jmp
or
lahf
scas
adc
push
cmp
xor
add
mov
jbe
fcmovnbe
je
add
xor
add
icebp
in
dec
sbb
xchg
add
add
in
cmp
jp
ss
dec
add
xchg
dec
add
adc
movs
jl
stos
cmps
cwde
leave
cli
inc
scas
cs
test
jb
jae
push
add
add
outs
or
push
std
test
mov
add
add
pop
std
push
cdq
jns
xor
movs
cmps
jle
(bad)
ins
mov
jle
cdq
push
pop
jmp
pop
test
dec
popf
pop
imul
clc
pop
je
(bad)
xor
push
adc
nop
adc
mov
gs
ins
cdq
jns
mov
xchg
jmp
or
adc
xchg
dec
push
or
lahf
xchg
or
or
into
jns
jae
jne
pop
fstp
nop
push
mov
out
push
add
push
jg
cdq
mov
in
int
mov
add
add
dec
into
icebp
add
cli
pop
mov
je
sbb
cmps
(bad)
xor
hlt
and
icebp
xor
add
mov
sub
mov
mov
or
add
mov
or
loope
add
adc
xchg
test
add
pmovmskb
fiadd
sub
add
scas
push
fld
pop
je
jecxz
jmp
add
push
movs
xor
xchg
sub
sahf
xchg
in
add
sti
xchg
ja
inc
test
lds
pop
xchg
jmp
add
movs
fdivr
ins
sahf
mov
ins
daa
movs
js
test
jl
add
je
push
or
add
adc
call
push
and
cld
cwde
inc
add
loopne
fild
add
adc
or
retf
fsubr
div
test
add
mov
(bad)
jno
push
arpl
add
add
inc
jno
mov
push
test
push
mov
push
call
or
add
leave
imul
mov
xor
rcl
int3
push
cmp
add
push
sbb
add
ss
retf
aas
stos
bound
int
(bad)
push
mov
in
cwde
mov
add
add
add
jae
xor
xchg
add
jne
jmp
or
add
ret
fstp
retf
dec
add
add
push
push
(bad)
std
or
sub
mov
adc
xchg
pop
mov
sti
aaa
ret
aam
pop
add
xchg
cli
loop
add
add
ins
lods
mov
in
ins
add
in
mov
sub
xchg
dec
add
sub
adc
xor
jae
xchg
jne
xchg
mov
add
add
add
sbb
ins
xor
(bad)
(bad)
jle
cmps
jns
daa
push
push
add
out
fadd
jbe
imul
lods
add
adc
(bad)
pop
test
add
cs
push
inc
arpl
out
jb
ss
leave
ins
ds
fadd
mov
xchg
ins
test
add
add
mov
adc
in
outs
std
sbb
pop
jecxz
mov
mov
ficomp
adc
xchg
(bad)
mov
je
sub
cmp
ins
add
fsubr
mov
je
push
dec
ret
test
jo
mov
(bad)
jmp
add
fisttp
dec
push
sub
add
dec
cmps
add
inc
inc
fisttp
jns
out
add
mov
adc
push
inc
xor
ins
mov
mov
popf
sbb
cdq
mov
add
jle
(bad)
outs
pop
mov
inc
dec
and
ins
add
push
pop
or
bound
add
add
sbb
push
call
ffree
cwde
jge
movhlps
add
ja
inc
mov
mov
test
mov
add
add
scas
mov
xchg
js
add
iret
push
inc
and
inc
data16
add
add
out
nop
in
xor
or
adc
movs
push
add
add
dec
add
mov
xor
cmps
(bad)
fdivr
sbb
mov
jo
or
jmp
pop
adc
lsl
mov
fld
add
pop
push
sti
or
add
xchg
shr
or
xchg
push
popa
lods
add
or
sub
add
stc
lahf
imul
sti
in
jnp
cmp
mov
rdpmc
retf
add
push
mov
add
sub
add
mov
arpl
es
jae
mov
int3
inc
lods
mov
add
inc
cmp
jle
add
adc
jmp
dec
adc
add
loopne
lds
add
sar
(bad)
jl
scas
sbb
sub
pop
mov
mov
or
mov
add
mov
fdiv
add
add
in
or
out
arpl
mov
movs
jge
out
scas
add
loope
stos
out
fist
mov
mov
add
stos
jg
sbb
sub
push
int3
push
mov
adc
lahf
push
and
out
pop
add
jns
mov
or
out
xor
pusha
fild
add
push
sbb
nop
pop
aad
mov
add
pop
enter
sbb
dec
outs
shl
xor
and
mov
add
es
mov
or
aaa
add
in
imul
loop
add
sbb
fimul
jb
xchg
addr16
mov
cmc
test
pop
mov
add
add
cmps
and
loop
test
ficom
rol
sbb
loope
popf
adc
add
into
nop
cmp
dec
mov
pop
mov
add
add
jmp
aad
jl
(bad)
mov
imul
jmp
fist
dec
xor
add
add
adc
add
pop
(bad)
mov
das
mov
add
add
or
fcom
dec
cmps
call
xchg
iretw
lahf
mov
add
add
cmp
(bad)
call
popa
pop
pusha
repz
and
push
pop
push
dec
cmp
ss
(bad)
jmp
mov
add
cmp
mov
setne
stos
add
popf
fild
add
or
jg
add
jp
jmp
xchg
or
pop
inc
pop
mov
pop
add
mov
dec
add
add
sub
adc
pop
icebp
rcl
jl
in
or
push
rol
sub
out
add
add
push
mov
add
pusha
stos
aaa
mov
test
push
adc
add
bound
adc
dec
adc
mul
add
add
add
add
lea
and
cmp
adc
add
sbb
sti
pop
retf
fdivp
scas
jb
(bad)
pushf
mov
jp
add
outs
xchg
gs
inc
ins
add
xchg
add
inc
(bad)
add
int3
lods
pop
repnz
inc
add
add
movs
retf
call
fucomi
test
add
shr
fstp
ss
inc
xchg
jnp
into
add
pop
shr
ds
into
pop
sbb
add
adc
add
sti
mov
push
jo
inc
or
cmp
fld
add
push
xchg
mov
adc
movs
add
rol
mov
montmul
cmps
les
xor
bound
icebp
and
cwde
pushf
or
dec
and
les
mov
mov
jecxz
mov
dec
sub
pop
add
add
jmp
jb
fwait
jecxz
cmp
imul
push
xor
xor
add
add
jle
jle
add
sti
ss
aas
add
hlt
xor
add
mov
stos
push
xlat
aas
pop
add
add
add
ds
nop
movd
add
rcr
mov
fwait
push
shl
fwait
lea
aad
push
mov
out
fucomp
lock
add
loop
add
movs
mov
pop
mov
arpl
call
mov
cmps
pusha
leave
inc
daa
or
adc
js
(bad)
mov
add
dec
push
mov
mov
in
add
jecxz
inc
xchg
mov
test
movs
add
(bad)
mov
cmp
cmp
fiadd
fst
xchg
add
and
add
sub
sub
out
xor
jnp
xchg
dec
or
add
add
mov
jbe
push
inc
inc
adc
mov
mov
stc
sbb
add
lds
pop
repz
add
shl
pop
lds
mov
add
add
add
ds
push
mov
and
add
add
out
mov
push
icebp
inc
test
jge
in
jg
add
jp
bound
cld
pop
bnd
jl
add
add
test
add
test
addr16
pop
add
add
or
addr16
retf
mov
pop
fldcw
push
add
add
in
jb
add
data16
popf
cmp
stos
mov
add
ins
push
in
popa
jmp
pop
sub
fisttp
in
out
add
mov
add
ret
jecxz
sub
fwait
shl
mov
push
adc
add
cmps
rol
fidiv
xor
imul
movs
pop
cmps
dec
xchg
push
xor
sub
add
cmp
dec
pushf
adc
fs
out
add
add
add
xchg
xchg
test
dec
sub
arpl
mov
test
in
pushf
je
(bad)
js
fisttp
add
jl
je
enter
jmp
xor
add
push
cs
xlat
inc
mov
mov
shl
add
(bad)
mov
fisttp
add
xor
enter
pop
fdivr
sub
and
or
loop
mov
jno
cwde
popa
scas
jge
cld
loope
pop
push
and
pop
sub
ins
mov
imul
lock
call
test
push
popf
sbb
call
add
in
or
hlt
inc
xchg
mov
ja
inc
sbb
dec
cmp
dec
mov
shl
ror
js
inc
imul
addr16
inc
std
jecxz
adc
pop
add
add
xchg
push
push
sub
rol
add
mov
push
les
jp
xchg
add
add
sahf
mov
fnstsw
jmp
aaa
add
test
xchg
add
mov
out
pop
jnp
push
pop
sbb
xlat
sbb
jae
loope
add
ja
fsub
xor
add
jbe
adc
sub
dec
(bad)
push
clc
push
mov
inc
pop
loope
popf
add
test
mov
addr16
rcl
out
push
in
repnz
sbb
mov
loop
add
repz
int3
test
push
xchg
inc
popf
test
add
pushf
test
mov
add
add
(bad)
sub
add
mov
add
sbb
add
xchg
add
outs
cmc
loope
fistp
imul
test
add
pop
or
add
xchg
movs
jno
mov
sbb
repz
or
jl
add
inc
lahf
and
add
add
aam
dec
bound
fistp
stos
push
adc
xor
mov
push
test
mov
add
add
add
jo
ins
pop
ins
leave
pushf
jmp
pusha
test
pop
jl
aad
mov
xchg
or
or
jg
or
dec
dec
xor
adc
pop
cmp
dec
loopne
mov
lahf
das
sbb
div
add
push
mov
sahf
out
pop
in
jbe
rol
sbb
cmp
add
outs
pop
xchg
cld
add
dec
sub
iret
or
add
and
fisttp
fisttp
add
scas
adc
loopne
add
out
xlat
cs
jmp
sub
add
add
dec
dec
fcmovu
aas
mov
or
ror
fsubr
rcr
jb
inc
add
inc
in
or
les
add
add
dec
dec
ficom
sub
jno
add
jl
str
adc
add
sub
inc
add
cdq
xor
mov
mov
inc
mov
loopne
scas
xor
out
jb
xchg
adc
movs
sub
inc
and
nop
lahf
je
pop
pop
clc
xchg
sub
add
inc
retf
push
(bad)
push
popf
inc
mov
(bad)
outs
add
leave
adc
pop
xchg
add
add
mov
add
jns
adc
push
sar
iret
out
jae
add
push
ret
inc
cmp
cmp
add
add
add
cmp
add
das
in
add
add
add
add
(bad)
xor
and
add
dec
pop
fwait
ss
jge
inc
push
add
inc
or
mov
movs
add
add
add
xchg
addr16
in
pushf
sbb
clc
xchg
shl
mov
pop
mov
xor
add
gs
popa
or
das
jp
test
std
and
pusha
enter
xlat
mov
ffree
add
imul
loopne
ficom
lock
fadd
mov
add
add
add
push
or
jnp
mov
icebp
pop
daa
cwde
push
mov
outs
div
ja
push
jo
add
cmp
aam
fcomip
mov
and
data16
rep
mov
add
or
xchg
push
mov
aad
add
inc
jl
push
dec
mov
(bad)
and
xchg
loop
pop
int
add
mov
push
adc
and
jge
mov
push
mov
mov
sub
(bad)
data16
mov
psubusw
(bad)
lahf
dec
add
add
adc
ret
add
rol
add
pushf
jecxz
xchg
(bad)
addr16
push
add
bound
sub
push
adc
or
pop
push
cli
mov
push
add
add
cmp
es
xchg
xor
pop
inc
xor
int
push
ins
cmp
add
add
push
mov
sbb
mov
xor
sti
push
iret
mov
add
add
pop
ror
xor
fild
or
mov
arpl
inc
test
(bad)
add
add
pop
adc
fs
(bad)
call
pushf
xor
pop
clc
std
xchg
add
xchg
jecxz
sbb
add
adc
pop
add
add
add
retf
stos
xchg
test
sti
int3
loopne
ja
les
cmc
jns
sbb
pop
push
mov
add
idiv
xor
add
data16
pop
cmps
hlt
fistp
push
cmp
sub
pop
int3
push
not
imul
add
add
cmp
call
arpl
inc
es
add
jge
clc
mov
push
clc
sar
outs
mov
mov
push
data16
add
jl
lods
pop
ret
ds
jmp
add
add
rol
stos
loopne
call
mov
or
cmp
inc
push
ins
rcr
bnd
push
add
xor
jge
xrelease
ja
cmps
cmp
mov
cmp
sbb
in
mov
cwde
into
rcl
cmc
fldcw
pop
mov
jne
xor
add
das
in
shl
iret
add
mov
push
jg
add
add
add
cmps
je
push
mov
dec
cs
imul
xor
sbb
adc
push
jo
test
lea
add
jge
or
out
add
add
scas
data16
or
cmp
add
movs
(bad)
outs
fld
dec
push
js
or
push
fadd
aad
mov
add
(bad)
int3
(bad)
scas
add
pushf
out
xor
test
out
pop
add
xchg
lea
dec
dec
or
stc
jae
sti
cmc
add
mov
sbb
dec
ins
dec
dec
out
in
(bad)
out
add
add
add
inc
push
in
jnp
pop
cs
mov
or
fsub
loop
sub
int
js
push
rol
add
add
loopne
fst
in
pop
out
sub
inc
out
add
fiadd
xor
test
or
test
add
push
cmps
add
add
mov
(bad)
xchg
adc
inc
(bad)
adc
(bad)
lea
ja
test
add
add
add
xchg
ss
mov
in
jmp
dec
(bad)
fst
fisttp
in
into
push
shl
fnstcw
add
bswap
sbb
xor
inc
inc
cs
hlt
loope
mov
stc
add
enter
xchg
add
add
add
push
push
test
aad
shl
mov
pop
jbe
loope
mov
inc
xchg
xor
(bad)
pop
sub
adc
cld
ror
popa
add
mov
cld
add
jle
add
out
push
push
push
xlat
int3
add
pop
cmp
cwde
fucom
das
add
retf
xor
cmp
fdivr
outs
aas
sbb
ret
sbb
add
mov
in
cmp
xor
add
and
and
push
outs
pop
aaa
mov
sahf
mov
add
add
(bad)
fist
imul
xor
imul
jns
dec
add
ins
daa
cmp
and
shl
int3
and
mov
add
add
mov
adc
int
xor
push
xchg
mov
pop
xchg
mov
mov
sbb
sahf
adc
add
jmp
jne
ins
dec
std
jecxz
dec
pop
add
repnz
or
add
lds
mov
mov
add
and
imul
in
jecxz
call
mov
adc
and
out
adc
add
call
bound
cmp
inc
add
ret
cdq
dec
sbb
cmp
pop
pop
in
add
adc
add
add
pop
add
outs
out
pop
rcr
(bad)
fisttp
push
es
dec
add
and
xchg
add
push
or
add
dec
mov
repz
sti
adc
dec
mov
call
inc
fcomp
jo
iret
int
add
dec
push
inc
pop
cmp
add
add
add
retf
mov
es
xor
or
push
retf
movhlps
in
inc
and
and
adc
sbb
inc
add
pop
add
add
and
sbb
xchg
and
daa
sub
ffree
pop
mov
pop
in
aas
movs
cld
jle
mov
mov
iret
xchg
jle
loope
jge
xor
cli
(bad)
adc
adc
add
mov
(bad)
fild
fisub
cmp
mov
les
sub
mov
dec
push
or
div
add
add
add
popf
pusha
scas
cdq
loop
sub
fcomip
nop
xchg
iret
mov
sar
test
inc
cmp
loope
sbb
daa
aaa
xor
ins
fsubr
lods
add
inc
or
pusha
add
jnp
cmp
test
hlt
into
jae
mov
loop
jmp
add
push
out
icebp
pusha
clc
inc
add
jnp
push
retf
jl
jnp
lods
add
jl
inc
push
jle
and
push
jb
jl
movs
add
fmul
add
or
iret
mov
mov
xlat
cmps
test
js
cdq
lea
add
add
xor
pop
sub
sar
popf
adc
test
dec
loop
ss
mov
pop
in
add
add
jae
push
and
mov
ret
rol
or
jge
fwait
cld
jne
dec
lods
add
add
push
add
add
or
fwait
pop
out
jle
sbb
into
mov
sar
clc
pop
je
out
add
mov
movs
sub
add
add
mov
add
add
and
jns
inc
pop
mov
ret
(bad)
dec
add
add
imul
push
inc
adc
push
mov
in
add
add
add
jbe
in
and
jle
sub
fsubp
push
sbb
push
pop
loopne
mov
ret
shl
lods
or
das
movs
adc
repz
bound
add
loopne
std
or
add
add
mov
imul
ret
xchg
retf
shr
add
jno
aas
push
mov
add
fs
fnstsw
aas
sub
add
push
add
xor
jge
dec
sbb
test
add
dec
add
mov
add
pusha
pop
enter
inc
stc
add
add
add
xor
inc
(bad)
addr16
pop
ja
bound
ret
pop
push
mov
sub
cs
ret
adc
inc
add
inc
xor
jmp
add
enter
push
mov
add
add
popa
inc
mov
mov
hlt
or
sbb
lea
jnp
push
sub
pop
fld
add
xchg
jno
mov
test
sub
pop
cmps
dec
inc
push
add
add
cmc
xchg
jp
out
aad
imul
inc
loope
int
dec
mov
setge
shl
mov
or
cmp
add
add
pop
pusha
adc
jmp
(bad)
push
mov
push
mov
fs
ss
add
add
add
push
mov
cmc
push
fisubr
loopne
cmps
out
jbe
and
fidivr
int3
or
sar
add
cld
movzx
popf
outs
fs
xor
sahf
loop
add
ja
mul
and
pop
add
mov
mov
or
int3
imul
xchg
out
inc
aas
jnp
add
xchg
push
stos
in
out
imul
pop
add
mov
inc
(bad)
in
cmps
mov
les
js
cmc
aad
rol
push
fiadd
mov
sti
mov
add
ins
push
add
inc
loop
pop
add
rol
add
idiv
pop
js
hlt
xor
sub
add
fcomi
sub
and
xchg
mov
xor
xchg
mov
lods
add
push
fild
add
inc
pop
inc
daa
xlat
ret
inc
js
add
mov
add
add
test
bound
mov
in
mov
push
lock
popa
or
mov
dec
movs
pop
cdq
inc
jmp
add
push
loop
out
fidiv
movs
stos
add
fadd
mov
loop
fsubp
adc
mov
fidiv
jl
mov
add
iret
(bad)
aad
jl
int3
inc
div
out
cs
in
dec
nop
fsubr
pop
xlat
add
add
test
xlat
repz
pop
jne
pop
sahf
mov
dec
xchg
(bad)
(bad)
mov
and
inc
add
dec
cwde
mov
mov
add
and
iret
or
repnz
not
ficom
sbb
add
push
xor
adc
cmp
(bad)
jne
mov
add
jmp
cs
pop
sbb
(bad)
sbb
push
cwde
rol
popa
push
and
pusha
sub
daa
add
add
and
add
adc
div
xor
and
add
inc
pop
push
shl
mov
fadd
add
jmp
cmp
lds
mov
repz
xor
mov
add
fbstp
pop
push
arpl
hlt
or
inc
add
push
mov
add
push
mov
add
es
mov
popa
aad
test
pop
iret
outs
sub
mov
inc
add
mov
ins
cmp
aaa
mov
adc
fst
add
xchg
sar
xchg
leave
nop
jb
add
mov
pop
call
cmp
sbb
ss
inc
push
add
xchg
mov
shl
add
cmp
mov
push
imul
inc
dec
mov
add
mov
xchg
imul
enter
add
jb
mov
loop
retf
js
push
cmp
or
sbb
inc
sti
add
add
imul
aas
scas
out
push
and
or
dec
fiadd
xlat
std
add
iret
adc
out
iret
mov
and
and
rol
pop
mov
lea
xor
add
mov
test
xchg
cmps
inc
mov
cld
add
add
add
xor
pop
add
out
add
cdq
add
(bad)
add
(bad)
add
pusha
outs
jmp
mov
retf
fld
cmp
stos
xor
add
inc
retf
add
fs
(bad)
clc
cwde
int
sbb
mov
mov
pop
mov
sbb
or
jo
cmc
add
inc
rol
add
mov
add
mov
add
ss
(bad)
stos
mov
fdiv
cwde
pop
add
hlt
add
add
add
mov
movs
ins
mov
arpl
lods
rol
add
cmps
sbb
cwde
shl
scas
jno
(bad)
sahf
jp
enter
scas
fld
add
ss
dec
cmp
jl
sub
aad
retf
ret
dec
stc
mov
pop
ja
pop
push
adc
aad
add
fwait
repz
push
je
jecxz
xchg
add
mov
dec
fld
add
fwait
xor
lahf
push
xchg
add
popa
or
push
jg
pop
mov
ja
mov
mov
add
outs
jle
sahf
rcr
add
aad
arpl
loop
add
lods
add
xlat
test
ins
scas
stos
mov
inc
dec
fsub
add
dec
add
add
add
pushf
(bad)
stos
sub
arpl
mov
pusha
lahf
add
into
sti
sbb
or
bound
jns
add
add
xlat
jl
into
mov
das
ins
sbb
add
pop
in
add
mov
ins
and
aad
int3
cli
add
mov
xchg
mov
and
test
dec
dec
pusha
add
repz
add
or
add
add
jmp
push
inc
adc
cmp
cdq
in
jge
cwde
fsubrp
jl
add
lahf
inc
inc
stc
add
movs
adc
and
pop
pusha
add
nop
nop
add
add
or
popa
mov
sub
mov
cmc
add
out
mov
fwait
xchg
cmp
clc
pop
cmp
push
mov
add
scas
test
sbb
inc
loope
data16
and
xchg
cmp
hlt
add
fucomi
adc
add
cmp
push
stc
loopne
jle
xor
push
sub
adc
mov
repnz
sub
add
sahf
shr
jo
jae
cmp
inc
add
pop
dec
pop
add
add
jl
push
mov
jmp
nop
jae
lds
xchg
add
(bad)
repz
pop
push
icebp
push
fs
ds
pop
popa
aas
retf
outs
into
rol
jae
ss
sbb
add
mov
(bad)
push
or
add
add
add
icebp
mov
mov
jbe
or
sbb
cmp
push
inc
dec
lods
hlt
ja
dec
jno
mov
retf
leave
dec
fstp
adc
add
inc
in
cmp
mov
sbb
leave
ins
scas
rcl
xlat
and
mov
sar
popf
sbb
add
or
pop
cli
mov
jge
add
xlat
or
dec
mov
pop
les
movs
mov
std
add
lods
xchg
jnp
sub
outs
xchg
jb
mov
rcl
add
js
jae
xchg
add
nop
data16
fist
add
fidiv
adc
add
add
or
add
ja
pop
mov
sar
sti
ds
cmp
stos
push
cdq
jle
pop
inc
add
stos
add
jecxz
push
cmps
xchg
je
ins
and
or
add
cmp
gs
add
dec
int
sub
call
dec
sbb
into
stc
cld
mov
inc
xchg
dec
add
add
jno
mov
mov
push
sbb
or
dec
test
push
sbb
out
in
mov
push
repnz
add
sub
mov
mov
mov
sub
les
daa
or
add
fisub
mov
imul
add
inc
add
sub
popf
xchg
pop
add
les
push
int
(bad)
rol
mov
add
jns
cmp
xchg
push
pushf
jns
imul
mov
adc
in
shl
cmp
ins
add
add
add
xchg
and
imul
inc
cmp
aas
lock
(bad)
sbb
add
pop
int3
add
add
das
stos
daa
pushf
add
sbb
xor
jmp
add
dec
or
add
mov
xchg
rcl
xchg
add
pop
and
pop
or
rcl
(bad)
inc
mov
(bad)
aam
add
pushf
nop
movaps
add
add
rol
add
sub
ins
nop
pop
pop
pushf
ss
jne
push
adc
adc
cdq
xlat
inc
test
out
lock
xchg
out
add
into
add
mov
push
pop
xor
dec
pop
imul
mov
repz
ins
add
xchg
xor
or
and
cmp
inc
dec
add
add
xor
mov
(bad)
div
add
mov
xor
iret
jmp
add
add
sahf
jle
ficomp
daa
jge
in
out
mov
push
sbb
add
sahf
rcr
int3
(bad)
aad
add
xchg
scas
imul
outs
adc
sbb
pop
test
lods
jb
out
inc
cmp
sub
add
add
fsubr
ins
and
add
pop
popa
pop
inc
adc
adc
jl
(bad)
jmp
and
push
mov
pop
les
add
add
sub
js
fwait
adc
shr
pop
loopne
aas
dec
mov
verr
sbb
scas
jecxz
jnp
add
xchg
jp
add
idiv
jo
rcl
mov
pop
cmp
add
retf
add
sbb
out
cmp
mov
add
sti
and
cmc
adc
or
test
add
dec
add
aad
stos
jle
mov
std
iret
call
add
pusha
addr16
pop
hlt
adc
add
sahf
fistp
xor
add
or
adc
mov
call
add
add
pusha
fbstp
idiv
ins
or
sub
and
neg
or
adc
sbb
add
add
sti
and
ds
shl
js
or
xor
(bad)
mov
enter
add
mov
cmp
add
push
mov
call
jg
add
add
fcmovne
xchg
lea
imul
arpl
sub
xchg
pop
mov
add
popa
mov
xor
pop
add
pop
test
push
dec
add
call
mov
inc
mov
jns
add
in
retf
xchg
cdq
jbe
add
and
test
cmp
loope
ja
mov
inc
push
scas
mov
add
add
pop
cmp
js
cmp
adc
inc
je
add
in
add
mov
mov
scas
cmp
loope
add
leave
(bad)
jnp
push
sahf
stos
cmp
jecxz
jl
inc
xchg
dec
fldcw
add
add
pop
add
test
in
sbb
add
push
add
sub
int
test
add
add
mov
adc
add
scas
movs
sbb
dec
push
add
adc
pop
dec
retf
xor
jb
or
add
add
or
(bad)
lds
add
dec
pop
add
cwde
or
jmp
jnp
pop
mov
data16
xor
std
pop
add
xor
add
add
add
sti
cmp
je
ret
ins
retf
adc
jle
jns
aam
mov
and
ss
and
jne
fdivr
repz
rcr
adc
out
outs
add
mov
ror
ja
cmc
or
dec
add
pop
sub
push
rcr
pop
test
add
push
int
pusha
inc
aas
ins
dec
or
daa
adc
add
rol
inc
loope
int3
lods
fcmovnu
lahf
or
add
mov
pop
and
cmp
ror
xchg
pop
mov
xlat
pop
sub
add
adc
mov
sahf
cld
fiadd
adc
add
retf
mov
sub
add
fucomp
sbb
jne
aas
add
xchg
nop
xor
popa
push
dec
add
push
dec
pop
imul
out
inc
jle
push
in
add
add
add
mov
fadd
add
ret
icebp
int3
pop
xchg
push
clc
sub
cmps
in
inc
add
in
daa
imul
add
cs
adc
hlt
(bad)
out
or
add
in
lock
jecxz
mov
and
jge
add
adc
mov
movs
repz
xor
jae
out
fst
xchg
jmp
sub
xchg
cmps
add
lock
jmp
lods
add
arpl
add
mov
retf
cwde
cmps
xchg
push
ret
sti
adc
in
outs
ret
sub
add
add
add
cmps
sbb
daa
cmp
push
mov
outs
adc
data16
inc
popa
mov
aaa
add
jmp
add
add
mov
ret
es
pop
and
sti
mov
test
inc
mov
push
mov
addr16
test
sbb
ins
out
test
xor
js
loope
adc
iret
pop
mov
jle
in
mov
loop
dec
les
add
add
in
jecxz
cmp
pop
mov
ins
sbb
mov
dec
lahf
das
sti
add
push
sub
mov
inc
rcl
add
jg
inc
xchg
inc
jne
jmp
add
ins
pop
mov
dec
fst
inc
fbld
pop
pushf
dec
iret
test
fcom
add
cwde
cmps
mov
add
fld
loope
mov
out
jnp
add
sub
jp
mov
and
or
mov
add
shr
test
outs
enter
ret
add
scas
push
adc
add
mov
add
sub
ins
jg
cmps
(bad)
add
inc
je
fsub
sti
ins
add
pop
cmp
xor
fld
or
add
pop
rol
mov
mov
xor
daa
out
ret
add
into
out
cmp
add
jmp
or
or
add
xor
jmp
imul
aad
add
cmc
fild
pop
inc
add
mov
push
add
jl
adc
ror
add
test
iret
les
sbb
imul
out
in
loopne
add
add
add
pop
mov
fdivr
cmp
pop
sub
add
xchg
int
les
pushf
(bad)
std
dec
inc
pop
in
add
dec
sbb
nop
and
jbe
out
sahf
mov
or
sub
rol
add
add
(bad)
loopne
movs
add
inc
retf
push
jae
pop
hlt
jl
add
mov
outs
lds
pop
add
repz
sub
(bad)
adc
push
mov
mov
add
int3
movs
cmps
add
add
mov
ins
lods
retf
je
out
mov
in
jecxz
or
daa
add
fiadd
add
sub
(bad)
ins
sbb
lock
add
scas
add
add
ja
sbb
push
pop
xor
add
add
pop
xor
out
xchg
lock
add
in
inc
test
(bad)
cmps
add
sub
mov
ja
sbb
add
sub
add
sbb
add
sbb
add
das
loop
push
cmps
test
xlat
add
inc
pop
lock
pop
add
xor
push
inc
push
add
inc
xchg
dec
add
jl
repnz
add
lods
add
mov
in
adc
add
dec
fld
jl
shl
jne
add
scas
lahf
ja
or
mov
sbb
jno
ja
sbb
xchg
popa
fldcw
in
add
add
jbe
pop
mov
mov
sbb
(bad)
idiv
stc
add
add
add
pop
xchg
mov
ret
addr16
push
outs
jbe
jp
xor
popf
pushf
fisttp
retf
aas
jmp
mov
and
add
add
add
out
fld
mov
fwait
outs
retf
adc
add
add
mov
jns
sbb
call
test
add
lds
add
std
imul
cmp
xchg
xor
inc
add
add
test
jne
iret
adc
lods
sbb
stos
adc
dec
mov
add
mov
inc
popf
sbb
sub
pop
retf
call
cld
pop
shl
lock
pop
pop
int
add
call
add
js
dec
popf
add
dec
retf
lahf
out
adc
add
add
sbb
ss
pop
ret
imul
mov
add
fld
mov
mov
mov
ret
add
sbb
scas
push
arpl
add
retf
add
add
int3
repnz
in
add
add
pop
fidivr
aad
outs
jmp
mov
push
cmp
icebp
mov
add
add
stc
sbb
lds
rcr
add
daa
adc
data16
xchg
and
add
movs
jge
cwde
dec
iret
cld
stc
pop
cmp
aas
fstp
pop
test
xchg
out
fiadd
in
mov
add
test
mov
add
inc
cdq
dec
pop
and
(bad)
pushf
hlt
aas
or
or
mov
add
mov
sbb
call
add
lea
jl
add
add
sti
gs
addr16
stos
add
mov
fwait
ins
pop
shl
jno
add
dec
ret
push
add
or
add
mov
fadd
add
cmps
push
xchg
or
pop
add
shl
aad
sbb
ds
rcl
dec
push
mov
mov
add
adc
sub
mov
inc
stos
rcl
sub
or
sbb
ins
xchg
sub
ja
add
mov
lods
xchg
ficomp
shl
xor
cmc
mov
sbb
or
inc
cli
repnz
mov
add
xchg
add
adc
out
add
hlt
add
fadd
fwait
das
stos
(bad)
cld
add
inc
cmp
add
pop
(bad)
xchg
cmp
add
inc
mov
in
add
sbb
pop
popf
out
add
mov
add
out
mov
or
add
in
fdiv
shl
pop
fcom
xchg
add
add
(bad)
rol
add
push
movs
out
(bad)
leave
out
add
add
add
add
mov
aas
pop
(bad)
fucom
sbb
ins
inc
cmp
lock
jns
mov
add
mov
and
jle
sbb
add
add
es
pop
hlt
add
cmp
xor
mov
and
repz
xchg
int3
mov
aad
add
add
dec
pop
pusha
lds
sbb
mov
fstp
jb
fadd
inc
cmp
imul
jl
jl
(bad)
(bad)
in
rcl
add
add
pop
mov
push
add
in
and
aad
xchg
fs
push
fild
hlt
add
add
(bad)
xchg
sbb
mov
cmps
mov
test
(bad)
out
jg
add
push
frstor
mov
sub
mov
dec
add
add
sub
inc
and
retf
in
adc
movs
sub
xor
arpl
movs
call
mov
movs
mov
dec
add
and
lock
gs
add
pushw
or
lahf
ds
add
jnp
jecxz
xlat
cmp
add
add
mov
shl
mov
dec
inc
fisubr
sbb
dec
int3
jb
add
add
das
icebp
or
cmps
(bad)
retf
cwde
push
out
push
in
mov
xchg
jle
mov
mov
cdq
add
gs
fmul
cmc
ret
and
add
and
ja
ins
sub
loope
imul
mov
sub
add
mov
inc
lea
mov
sub
pop
cmp
mov
adc
add
out
adc
mov
out
add
add
pushf
adc
xchg
and
pop
add
outs
and
cwde
add
xchg
imul
loope
and
add
bound
rcr
pushf
fcomp
lods
(bad)
add
sbb
adc
mov
dec
add
mov
add
(bad)
je
hlt
add
aam
sub
dec
dec
mov
inc
out
aam
add
mov
jno
jp
add
push
add
inc
in
pop
add
call
jb
push
ret
cmp
mov
add
xor
add
cmp
dec
retf
adc
sub
leave
push
dec
fadd
and
add
mov
mov
pushf
xor
movs
xchg
mov
das
lods
cmp
js
add
push
add
jns
sub
lds
stos
xor
jb
sbb
add
add
inc
movs
xchg
movs
push
xchg
jns
adc
outs
sahf
test
enter
shr
add
add
mov
(bad)
repz
add
add
loop
sbb
adc
and
sti
lods
dec
add
add
push
adc
stc
into
imul
iret
lods
add
mov
data16
ret
mov
lods
das
mov
inc
add
dec
ret
mov
xlat
jle
add
mov
pop
imul
add
add
in
movq
test
xor
icebp
cmps
pop
add
adc
pop
mov
add
dec
push
jne
movs
jbe
add
in
retf
(bad)
sbb
mov
add
xor
add
inc
imul
icebp
add
mov
push
(bad)
adc
cdq
xor
fs
push
xchg
bound
dec
jns
add
lahf
scas
ret
fucomi
ret
not
imul
cli
test
dec
adc
fisub
mov
out
pop
push
popa
lea
ds
add
ret
add
xor
inc
add
(bad)
jno
pop
push
lods
add
inc
cmp
mov
xchg
jnp
test
add
add
add
jp
pop
lods
add
or
add
add
xchg
mov
sti
icebp
ret
push
inc
not
mov
fstp
lock
out
aas
cmp
sub
mov
add
cmp
adc
mov
(bad)
and
in
sbb
add
add
fs
sub
inc
sahf
movs
jmp
cmp
add
cmp
cmp
test
add
sub
mov
or
mov
add
stos
icebp
(bad)
adc
add
jo
fucomp
cdq
jecxz
jg
test
iret
add
sbb
add
add
mov
sbb
lea
cwde
xchg
dec
jg
lock
cmps
push
add
or
or
push
popa
fadd
add
push
jne
add
mov
arpl
or
add
rol
loope
cli
out
pop
add
xchg
mov
and
arpl
add
add
mov
mov
xchg
cld
mov
add
sti
pop
jecxz
clc
or
fyl2xp1
fdiv
retf
jnp
push
add
fisttp
cmp
push
fld
fdivr
ror
dec
push
cmc
add
jbe
out
dec
leave
adc
mov
xor
stos
add
add
sbb
sub
mov
iret
sbb
lods
sar
jmp
adc
or
or
cmc
lea
mov
jge
in
add
add
mov
xlat
aas
test
cmp
sbb
call
mov
add
lock
pop
cdq
add
in
dec
inc
add
dec
add
mov
and
push
(bad)
movs
push
sbb
push
or
sti
addr16
sbb
add
add
add
inc
jne
jle
push
jle
cmp
mov
loope
loopne
movs
sbb
cmp
shr
push
leave
retf
dec
in
dec
adc
or
retf
jae
add
pusha
nop
pushf
int
inc
fld
mov
add
add
ins
arpl
imul
xlat
sub
out
sahf
pop
dec
js
mov
xchg
jp
and
pop
add
fld
add
cmc
pop
retf
xor
enter
xchg
add
inc
mov
stc
ret
sbb
stc
outs
ret
add
add
sub
leave
jmp
ret
add
xor
xchg
add
dec
out
inc
jle
std
push
inc
add
jnp
inc
jg
nop
mov
lods
cmp
add
or
test
add
dec
cmp
into
push
add
push
fmul
out
pusha
dec
mov
add
sbb
fnstsw
pop
shl
pop
ins
add
inc
mov
add
int3
inc
xor
mov
add
ins
inc
add
sub
in
add
into
xor
inc
iret
sub
mov
fild
repz
xchg
push
int3
add
add
or
mov
scas
jb
add
cdq
fsub
sub
mov
movs
test
add
xor
dec
out
(bad)
les
popa
xchg
add
dec
aad
add
lahf
push
inc
cmp
sbb
(bad)
sub
inc
cmp
retf
add
add
jmp
jo
inc
adc
pop
push
es
lods
js
jno
xchg
add
sub
inc
in
cli
lea
add
mov
cmp
sbb
outs
add
add
std
xlat
sub
sub
jl
fldcw
xchg
jle
addr16
add
ds
ins
mov
mov
in
mov
pop
icebp
(bad)
jg
jp
mov
add
add
dec
push
inc
rcr
lods
add
outs
push
(bad)
mov
add
mov
xchg
fsubr
es
cld
int
test
xchg
popf
clc
outs
adc
cli
jns
or
dec
scas
sbb
add
add
ds
push
mov
nop
jnp
les
cmp
ret
clc
in
in
pop
push
cmps
add
mov
sub
inc
(bad)
cmp
in
imul
add
xchg
call
and
push
add
push
out
stc
xor
inc
add
outs
clc
sti
xchg
pop
mov
jp
rcl
sub
movs
cdq
sahf
and
lahf
pop
add
and
add
iret
(bad)
out
clc
into
in
pop
int3
out
retf
add
out
add
loop
push
mov
add
sub
(bad)
nop
and
pop
adc
sbb
add
add
lock
cs
and
inc
dec
fimul
cmp
or
outs
adc
adc
add
add
repz
xchg
aas
xchg
loope
jns
mov
add
cmp
shl
add
add
retf
pop
gs
out
push
fwait
gs
adc
dec
inc
lods
add
inc
cmps
fistp
add
add
add
add
adc
rol
in
fucom
xchg
out
dec
(bad)
inc
inc
sti
push
cmc
das
adc
(bad)
jbe
test
inc
aaa
sub
lods
or
into
jnp
pop
push
mov
lea
jecxz
mov
add
daa
and
or
fst
add
add
ja
adc
je
repz
(bad)
fcomp
xchg
add
jne
call
pop
mov
push
jns
push
add
imul
inc
add
(bad)
es
inc
or
stos
add
bound
cmps
iret
add
and
add
add
add
xchg
jne
adc
xchg
jp
leave
addr16
add
jle
xor
mov
add
push
adc
mov
push
push
mov
jmp
scas
push
ss
dec
add
repnz
push
ret
push
je
in
imul
add
mov
mov
sbb
xchg
shr
xor
add
jecxz
mov
push
add
test
icebp
popa
inc
(bad)
mov
repnz
push
stc
loop
sahf
sub
cld
add
out
sahf
jl
adc
add
sbb
add
or
in
in
int3
mov
hlt
call
inc
out
xchg
push
add
inc
loopne
iret
xchg
jecxz
pusha
add
call
or
cs
add
add
or
add
movs
sub
loope
icebp
pop
leave
lods
sub
add
or
sub
sbb
call
push
ret
sahf
nop
dec
add
add
add
cmp
(bad)
imul
lods
xor
add
cld
daa
cdq
leave
mov
jecxz
add
(bad)
inc
xor
mov
inc
add
js
or
(bad)
lods
sbb
mov
pop
sbb
and
imul
shl
jmp
xchg
shl
cmp
cmp
loope
and
lock
add
add
pop
sub
cmc
jge
jne
lahf
das
sub
jnp
imul
das
add
sub
mov
add
jae
mov
and
ror
pusha
sub
mov
pusha
adc
sub
mov
add
add
int
mov
das
xor
add
mov
pop
pop
stc
dec
daa
add
add
in
inc
push
shr
je
xchg
add
clc
push
lock
inc
iret
mov
pop
inc
adc
push
add
add
or
icebp
mov
mov
xor
add
ja
mov
cdq
sbb
out
add
fwait
(bad)
aas
and
iret
mov
int
sahf
add
xor
add
sub
cmp
push
add
add
mov
ins
repz
comiss
sar
hlt
or
add
inc
loope
pop
pop
fld
push
xchg
fmul
xchg
cmps
int
push
add
cmp
loope
sbb
mov
cmp
adc
add
mov
stos
mov
add
xor
add
enter
imul
add
pusha
scas
das
cmp
add
test
mov
add
scas
lods
xor
fidiv
inc
loope
mov
xor
test
or
xor
mov
xchg
leave
jae
jns
imul
ss
sahf
add
sti
sbb
xchg
mov
movs
dec
add
add
out
push
ret
gs
add
sub
retf
or
into
sub
xor
add
add
daa
cdq
std
pop
loope
push
or
(bad)
mov
(bad)
ds
add
or
pop
mov
mov
jne
pop
xchg
add
fsubr
pop
add
add
mov
dec
fnstenv
or
jle
jmp
add
mov
jge
iret
lahf
add
add
add
pop
jbe
int3
xor
mov
(bad)
adc
xor
addr16
(bad)
leave
and
xchg
outs
fild
xor
dec
outs
inc
add
adc
add
add
les
add
ja
cmp
pop
sbb
add
cld
jnp
scas
mov
cmova
lods
inc
add
add
add
add
popf
push
xchg
xchg
dec
pop
or
loop
scas
ret
pop
call
in
push
jmp
ins
inc
(bad)
cmp
mov
fnstenv
xor
sub
mov
ja
xchg
push
mov
mov
fisubr
add
xchg
mov
add
add
cmp
fbld
(bad)
shl
mov
arpl
inc
xchg
(bad)
into
addr16
mov
ret
add
sbb
loopne
into
sbb
dec
retf
lock
add
add
xchg
fist
cmp
push
add
inc
add
xor
fwait
daa
or
jg
cmp
push
sbb
sub
dec
in
and
or
call
(bad)
out
gs
lods
out
inc
and
stc
ror
push
push
dec
add
push
push
xchg
fwait
jmp
or
in
or
xor
add
jp
xchg
mov
or
sub
inc
sub
pop
add
add
cmp
sub
int
and
add
sub
push
or
pop
push
push
pop
das
pop
add
inc
scas
sbb
mov
retf
(bad)
and
xchg
inc
ret
and
cmc
add
sti
js
add
inc
dec
or
fild
push
icebp
leave
and
add
inc
mov
loope
add
add
xor
mov
xchg
popf
mov
or
xchg
jge
xchg
dec
addr16
adc
add
stos
jle
add
fwait
mov
mov
repz
retf
shl
ja
mov
jmp
add
add
mov
push
fistp
jmp
cmp
(bad)
push
dec
stos
daa
dec
ss
sahf
adc
or
retf
mov
add
add
add
push
xor
push
pop
push
sbb
push
add
movs
mov
and
movs
inc
xchg
stos
cmp
inc
jns
mov
movs
js
add
add
or
arpl
add
cdq
call
pop
add
add
cmps
(bad)
push
and
jo
js
and
and
iret
repz
fimul
gs
sbb
push
pusha
add
sbb
cmps
mov
fs
add
fldenv
xor
xor
add
dec
pushf
pop
adc
out
pop
xchg
add
retf
fild
xor
xor
ds
dec
add
push
inc
and
bound
std
inc
out
(bad)
out
jecxz
adc
xlat
add
add
or
dec
retf
ins
mov
xchg
push
add
scas
jg
pop
fwait
sub
std
or
retf
add
int
inc
cdq
add
adc
icebp
inc
jnp
lods
add
ficomp
pop
mov
pusha
or
mov
add
ja
cmp
test
add
cmps
gs
push
add
pop
mov
sbb
jecxz
shl
add
imul
aaa
cdq
lds
cmp
(bad)
adc
jecxz
add
test
scas
xchg
mov
push
imul
push
scas
pop
call
sbb
fwait
cmp
push
js
add
mov
in
add
imul
xchg
movs
xchg
add
mov
aaa
mov
push
pop
ss
gs
add
imul
test
jmp
add
sub
outs
add
add
add
xchg
mov
sbb
cmp
xchg
jne
add
dec
jle
nop
gs
fnstcw
xchg
imul
cmp
in
(bad)
lods
push
xor
push
inc
mov
loop
jb
and
(bad)
icebp
cdq
popa
add
xor
or
dec
lahf
add
stc
and
mov
adc
add
out
data16
push
rol
mov
adc
sub
dec
fwait
xlat
add
dec
and
(bad)
out
sub
cld
add
cmp
pop
lods
sub
(bad)
add
xchg
pop
mov
repnz
add
push
add
add
add
dec
out
data16
nop
fdivr
jmp
sub
aaa
jmp
cmp
fwait
dec
inc
push
xor
sbb
mov
repz
pop
push
adc
pop
mov
sub
push
jne
add
add
or
scas
fnstenv
sar
cli
icebp
push
push
sahf
cli
mov
adc
outs
imul
lea
(bad)
sub
rcr
nop
and
in
add
call
pusha
jne
cmp
add
iret
js
push
sbb
out
inc
cmp
dec
add
mov
sbb
jne
hlt
jle
icebp
call
jecxz
push
aam
jl
xor
clc
cdq
scas
add
cdq
cld
add
inc
xor
mov
push
fwait
inc
inc
mov
add
fisubr
xor
and
push
popf
push
bound
gs
add
adc
push
jno
inc
and
fwait
push
mov
(bad)
movs
jge
mov
sub
or
pop
lea
add
add
add
xor
ror
jbe
mov
add
mov
movs
pop
test
addr16
push
int
dec
stos
mov
add
sahf
xchg
or
inc
js
in
movs
jge
daa
add
add
add
add
lock
sti
lea
cli
cwde
stos
test
leave
and
sub
xchg
and
add
shl
or
call
jecxz
and
loopne
mov
add
lahf
inc
add
add
jecxz
popa
add
or
shl
adc
sub
add
add
inc
cmp
idiv
jae
popa
in
add
jae
or
(bad)
and
add
jecxz
lds
add
leave
jmp
sar
inc
add
add
push
icebp
or
add
dec
add
add
sbb
mov
add
imul
add
sub
test
xchg
dec
sbb
mov
push
fadd
leave
mov
sbb
add
movs
xchg
data16
fst
push
ins
int3
in
jne
mov
dec
add
inc
mov
in
inc
mov
(bad)
or
mov
jl
imul
add
add
dec
pop
cmp
jno
loopne
jnp
push
fcom
sahf
jle
fisubr
(bad)
pop
add
add
jmp
mov
dec
sti
movs
xchg
sar
cmp
add
add
add
xchg
adc
bndstx
xchg
jp
das
add
add
add
push
jo
or
inc
cwde
rcl
or
and
rol
out
daa
add
std
mov
inc
ja
or
add
add
stos
ret
and
iret
stc
rol
call
pand
cli
pop
fmul
push
fs
inc
jne
(bad)
lods
verr
rol
cmp
dec
xchg
int3
sub
cmp
add
sbb
imul
sbb
(bad)
pop
bound
pop
add
add
out
repnz
das
retf
lahf
mov
adc
int
add
add
push
test
add
cmc
sbb
add
add
xchg
jecxz
cmc
imul
add
mov
aas
adc
push
pop
outs
push
test
or
add
aas
pushf
push
test
jno
add
dec
loop
icebp
div
xchg
xlat
add
fst
cmp
push
dec
add
lods
mov
add
fcmovnb
mov
out
rcr
call
data16
push
fst
or
dec
mov
pop
loopne
xchg
sub
add
inc
inc
inc
pop
jbe
xor
xchg
repnz
popaw
xchg
fimul
add
fcom
mov
mov
movs
cmp
dec
mov
sbb
add
test
mov
inc
add
fmul
cld
add
(bad)
fistp
and
dec
xor
mov
mov
das
add
pusha
loopne
and
stc
mov
add
div
into
in
shl
add
fistp
dec
rol
add
mov
sahf
cmps
mov
add
pop
inc
movs
aaa
fdiv
iret
mov
test
adc
cdq
je
add
mov
aas
test
sub
pop
add
add
cmp
mov
mov
add
adc
scas
mov
mov
sub
add
icebp
popf
and
add
push
clc
ret
jno
test
into
imul
aam
pop
and
vpcomltw
icebp
jb
cmp
xor
push
sbb
sub
nop
jbe
xor
lock
and
ret
fdivr
repnz
pop
lea
bound
add
sbb
cmps
(bad)
push
aaa
out
ins
add
clc
cmp
push
cs
rcl
add
rcr
jmp
sub
cmp
add
xor
rcl
add
xchg
inc
cdq
cdq
add
dec
dec
cmp
xchg
mul
dec
cmp
push
add
xor
add
add
cmps
add
pop
sbb
repnz
push
or
retf
mov
xor
mov
rol
or
push
add
sub
adc
pop
add
lea
repnz
mov
sub
fwait
xlat
call
jbe
xchg
cmc
push
add
and
inc
sti
cmps
mov
push
xchg
push
js
or
add
outs
into
pop
rcl
add
lock
jmp
add
add
(bad)
pop
lds
mov
aam
lods
mov
dec
pop
mov
add
jbe
mov
add
add
aaa
fild
add
sbb
and
mov
jle
add
jbe
add
jl
add
add
outs
xchg
adc
mov
mov
mov
retf
test
mov
add
add
lock
pop
jne
out
ss
push
inc
add
and
push
push
retf
add
add
add
add
jae
cmp
inc
(bad)
cmp
sub
xchg
call
mov
inc
add
sub
fisttp
xor
call
xor
xchg
add
add
add
and
sub
mov
sbb
outs
jns
pop
jnp
(bad)
popf
xchg
mov
loop
in
loope
aam
push
sbb
sub
xlat
lea
pop
in
pop
adc
mov
(bad)
fwait
xor
inc
add
in
daa
add
or
mov
mov
add
lahf
fwait
add
data16
out
in
add
std
popf
test
ja
inc
into
ficomp
push
mov
or
add
jb
sbb
add
mov
pop
lahf
push
stc
adc
scas
dec
and
ficomp
mov
pusha
adc
mov
mov
xor
mov
rcl
add
imul
aad
fwait
jnp
and
mov
mov
scas
mov
sub
js
cmp
out
dec
add
add
shl
retf
xchg
(bad)
sub
lds
add
sbb
pop
mov
lds
fimul
fndisi(8087
neg
arpl
in
push
or
sbb
jae
rol
cmp
cmp
add
mov
mov
in
mov
add
inc
stc
push
mov
and
add
inc
aas
inc
add
or
sti
xor
div
lahf
jo
pop
pop
loope
xor
sahf
jae
inc
inc
dec
or
push
add
hlt
pop
inc
pop
push
dec
add
(bad)
mov
pop
xchg
mov
ret
and
pop
jp
dec
fbstp
cdq
mov
add
jo
fisttp
lahf
sbb
lods
icebp
cmp
aam
xchg
int3
xchg
xchg
retf
mov
jle
mov
xor
add
cld
dec
pop
aaa
test
pop
add
ins
sbb
mov
rcr
lahf
inc
mov
add
loop
ja
clc
xor
add
dec
popf
mov
aas
push
inc
loope
xchg
mov
cmp
sti
mov
cs
(bad)
addr16
sbb
aaa
cld
test
add
add
in
popf
arpl
mov
cli
and
pushf
add
pop
mov
xor
std
out
in
cmp
mov
xor
cwde
jmp
push
xlat
cmp
aaa
es
mov
pop
mov
mov
fcomi
aaa
push
es
adc
add
xchg
and
cmps
aad
ror
mov
iret
pop
imul
in
mov
(bad)
mov
ret
add
test
add
and
jecxz
and
outs
sub
or
push
add
dec
mov
es
js
xchg
add
add
add
loopne
into
fwait
sbb
sub
add
push
mov
sbb
sub
pop
lea
dec
sub
frstor
add
xchg
sbb
mov
test
add
pop
idiv
xchg
add
hlt
mov
lods
cmp
imul
imul
dec
fistp
stos
add
ss
stos
add
retf
shr
add
in
int3
push
mov
xchg
adc
inc
mov
push
stc
xchg
loope
sbb
add
repnz
xor
inc
pop
inc
in
aas
je
int3
add
add
fs
add
data16
add
mov
fucomi
rol
loope
leave
sub
cmp
add
fiadd
add
add
fstp
and
jmp
add
ins
pop
and
xchg
push
add
add
iret
mov
add
shl
push
add
rcr
leave
gs
lods
sahf
or
add
dec
into
ret
mov
mov
sahf
add
mov
daa
push
das
rol
jmp
cmp
and
sbb
sub
ret
scas
es
cmps
or
mov
sbb
and
jbe
jecxz
add
pop
call
fs
add
add
call
mov
or
jno
ds
cmp
shl
jmp
pop
nop
retf
mov
test
or
cmp
add
push
jmp
push
enter
fwait
add
js
and
xor
add
jo
push
test
add
pop
mul
ins
lods
cmps
jmp
jne
cmp
add
xchg
je
js
loop
add
inc
dec
sbb
add
and
add
mov
push
addr16
inc
std
pop
xor
pop
or
into
push
add
dec
jl
push
xchg
fxch
mov
mov
fld
add
ss
fimul
push
xchg
cmp
mov
test
leave
add
stos
movs
add
add
xor
leave
inc
and
xchg
mov
jg
add
in
ret
xor
adc
ret
xchg
pop
jbe
mov
mov
popa
rcr
(bad)
in
add
add
outs
cmp
mov
add
adc
jnp
pop
mov
cmp
cmp
add
inc
lock
adc
sub
push
pop
inc
ja
pop
add
mov
popa
popa
jbe
mov
lds
push
cmc
sbb
fcmovu
fsub
std
cmps
cmps
push
add
hlt
fs
jmp
adc
ss
adc
xor
xor
or
cdq
inc
or
add
clc
jmp
push
pop
fnstsw
in
add
add
cmps
or
cmp
and
xchg
in
ss
add
shr
add
add
cmp
(bad)
mov
add
and
test
push
inc
rol
add
pushf
push
adc
fidivr
fwait
xor
sub
fisttp
cmc
add
bound
mul
fidivr
cmp
mov
push
fadd
(bad)
xor
outs
out
and
rcr
push
push
test
movs
test
push
xchg
clc
push
add
add
sbb
pusha
jns
(bad)
add
aam
sti
inc
ret
pop
add
(bad)
(bad)
adc
mov
addr16
sbb
add
add
push
adc
aaa
test
fistp
jo
fdivr
dec
jns
add
or
popf
jge
inc
add
jne
jmp
mov
add
shr
in
mov
push
repnz
add
jmp
adc
iret
and
std
add
pusha
xor
inc
fld
retf
dec
fisub
mov
inc
xchg
ja
mov
add
add
adc
mov
pop
loope
out
out
or
sbb
into
xor
out
add
add
push
call
ret
in
push
in
jmp
add
mov
sar
add
fild
and
push
pop
hlt
shl
sub
add
add
in
sub
add
pop
jge
add
add
pop
lock
sbb
add
cmc
add
and
ror
jnp
add
mov
xchg
dec
loop
imul
mov
add
add
sub
and
sub
adc
popa
dec
movs
std
push
sbb
push
xor
fimul
test
fld
jb
pop
in
mov
(bad)
add
add
ret
in
mov
jge
aas
cmp
cmp
(bad)
mov
retf
mov
add
cmc
dec
add
lds
cmps
lods
ins
or
jp
mov
stos
call
add
mov
sub
out
jge
icebp
scas
add
imul
adc
add
inc
loop
movs
xchg
add
add
adc
push
lock
adc
mov
jmp
add
add
out
pusha
sub
mov
shl
sti
test
inc
cmp
and
add
nop
add
in
test
retf
clc
pop
push
add
mov
cli
imul
out
mov
in
add
fwait
pop
push
sub
ins
das
sbb
imul
add
(bad)
mov
aam
je
xchg
push
jae
pop
jl
loope
inc
mov
add
add
add
jbe
jne
js
or
sbb
or
and
jp
retf
add
dec
dec
cmc
rcr
pop
push
xchg
(bad)
and
add
add
ret
push
jne
sub
ds
in
push
stos
xchg
movs
(bad)
push
mov
scas
int
(bad)
loop
pop
add
dec
inc
inc
cmc
dec
test
sbb
add
es
div
rol
add
je
int
sbb
add
mov
sbb
cmp
add
add
js
pop
mov
adc
lods
sub
inc
inc
std
into
retf
sbb
call
out
fdiv
pusha
jle
cld
cmp
scas
test
fnsave
push
mov
add
pop
mov
mov
loopne
add
mov
nop
rol
sub
or
stos
mov
and
add
or
add
stos
inc
ret
dec
push
inc
in
sub
dec
dec
pusha
int
add
add
and
dec
mov
add
add
in
nop
pop
adc
fsub
(bad)
jbe
bound
outs
adc
sahf
in
in
in
sti
add
add
jmp
cmp
outs
xor
xor
cmp
pop
ror
push
add
push
div
jnp
cmp
fincstp
xor
pop
add
pop
int
add
sti
pop
mov
add
arpl
dec
gs
fcomp
ins
xor
arpl
cwde
pop
add
in
jnp
xor
add
mov
(bad)
cmp
add
inc
retf
cld
adc
add
sub
aad
out
imul
test
mov
mov
add
mov
or
jnp
call
ja
cs
xchg
jp
jno
enter
cdq
pop
add
add
xchg
pop
icebp
ret
mov
jle
ins
int3
xor
test
lock
push
sbb
fwait
test
jmp
push
es
sbb
in
add
imul
push
cmp
test
cs
out
pop
fcmovu
add
nop
pop
hlt
cmp
cmp
movs
cmc
fcmove
inc
jb
add
pop
xchg
int3
jl
inc
ror
add
iret
push
add
push
mov
js
cwde
jmp
stc
js
lds
xor
jbe
add
push
sbb
push
jp
sub
add
add
adc
cmp
jp
dec
scas
xchg
mov
jg
outs
mov
sbb
mov
xchg
mov
test
adc
inc
dec
pop
loopne
add
das
sub
mov
adc
jecxz
lods
mov
add
xchg
jbe
int3
sbb
add
jbe
js
add
je
jne
std
push
lock
nop
mov
movs
sub
int
add
hlt
add
loopne
mov
xlat
add
test
mov
pop
dec
pushf
fnstcw
test
stos
mov
add
add
rcr
leave
cdq
jbe
outs
movs
call
clc
adc
add
jg
sbb
lahf
es
dec
aas
pop
mov
and
jmp
(bad)
push
cmc
add
cmp
lds
out
icebp
jge
or
outs
rol
sar
add
add
or
xchg
mov
sub
rcl
daa
les
sbb
add
mov
leave
(bad)
clc
aam
push
add
sbb
jmp
enter
lea
lahf
pop
inc
call
add
jno
and
mov
add
xchg
add
add
add
or
or
pop
jb
push
jge
pushf
mov
loop
in
ja
jno
pop
adc
imul
mov
add
add
add
call
pop
mov
(bad)
lock
retf
rcr
fldcw
sbb
out
mov
mov
push
adc
add
jnp
add
sub
lahf
pop
lahf
and
sbb
adc
pop
jmp
xor
sub
ficomp
outs
stos
ins
pop
sahf
pop
fisub
dec
sti
add
(bad)
loopne
stos
mov
popf
pop
push
adc
mov
out
add
test
sbb
pop
ins
stos
nop
mov
add
xchg
imul
sahf
(bad)
mov
mov
sbb
aaa
adc
xchg
cli
nop
sbb
add
jmp
dec
or
imul
fist
add
lahf
add
retf
in
jo
retf
bound
add
retf
push
or
icebp
hlt
mov
sar
adc
or
xchg
add
add
add
jp
sbb
sub
pop
dec
sbb
cmp
jle
push
jle
(bad)
jmp
outs
or
sbb
dec
pop
jecxz
jns
jge
add
add
call
add
mov
mov
jp
fild
add
mov
addr16
sbb
dec
jae
or
add
mov
add
pushf
clc
mov
and
rcr
mov
add
add
retf
mov
or
sub
xchg
aaa
add
add
cli
test
xchg
popf
add
pushf
popf
test
movs
hlt
ret
cwde
mov
gs
add
cmp
outs
bound
sub
sub
push
fiadd
add
jge
or
add
jne
fisttp
and
pop
cwde
nop
stos
adc
int3
jmp
xor
repnz
pop
mov
push
pop
out
stc
add
sub
leave
cmp
cmp
out
add
inc
(bad)
add
mov
sbb
add
add
add
je
shl
jo
setbe
js
adc
mov
das
adc
add
xchg
not
stc
xor
in
mov
pop
lds
add
nop
in
jo
sub
push
imul
add
mov
xchg
push
add
add
add
fdivr
sub
je
push
aas
cmp
ror
ins
lods
(bad)
xor
inc
cmc
out
ret
jg
sbb
dec
sub
repnz
shr
cli
pop
add
add
test
add
inc
push
inc
add
add
or
pop
int
fstp
add
(bad)
pop
push
rol
mov
adc
add
shl
out
jne
enter
and
sbb
retf
push
jl
inc
add
out
sub
gs
xchg
add
std
repnz
xor
add
mov
add
pop
mov
(bad)
add
add
mov
movs
in
jo
enter
mov
jmp
add
xchg
inc
or
ja
enter
inc
aad
ja
popf
add
outs
scas
add
bound
(bad)
repz
dec
sbb
push
add
aas
cmp
pop
add
dec
add
jmp
add
add
mov
(bad)
jecxz
inc
mov
loope
imul
scas
ins
add
fstp
lea
add
dec
repz
(bad)
fistp
cmp
mov
lahf
nop
dec
shl
add
inc
mov
jae
sub
fmul
shl
inc
pop
sahf
push
fild
sbb
clc
xchg
add
call
add
xchg
push
stc
fist
pop
add
pop
add
or
mov
mov
jecxz
js
add
add
cmp
inc
cmp
inc
mov
push
add
ins
hlt
add
test
stc
xor
push
push
add
lods
add
cwde
add
add
stos
verr
cmp
ret
repnz
in
pop
sbb
loopne
mov
mov
add
push
fiadd
cwde
jle
cmps
pop
jmp
ss
mov
mov
push
add
and
aad
outs
retf
stos
repz
add
xchg
sahf
jns
xor
outs
aas
mov
push
add
sbb
ins
es
js
or
sti
sbb
out
add
push
icebp
sti
enter
sbb
jmp
xchg
add
jecxz
add
add
inc
pop
idiv
aam
sahf
add
add
in
and
xchg
xchg
aas
mov
mov
out
push
adc
das
call
gs
in
and
mov
mov
arpl
add
dec
or
dec
xor
add
jle
arpl
popf
fldenv
data16
mov
mov
repnz
rcl
pop
fstp
dec
add
push
pop
add
add
or
add
gs
mov
mov
imul
das
fcom
or
jle
add
pop
and
loopne
cmc
cmp
test
lods
scas
xor
mov
mov
test
adc
add
add
mov
clc
lock
push
jecxz
cmp
push
sbb
add
mov
jl
mov
lods
and
retf
cld
add
sub
push
xor
pop
mov
je
int3
jns
push
pop
ret
into
push
stc
and
cmp
test
add
add
adc
popa
scas
jnp
ja
(bad)
mov
bound
icebp
lds
xchg
sahf
sti
cmc
pop
out
gs
add
in
pusha
adc
add
sahf
add
mov
push
add
dec
repz
into
sbb
retf
mov
jl
adc
call
add
add
xchg
jle
pcmpgtw
aad
xchg
jge
sahf
cmps
xchg
inc
outs
add
out
cmc
pop
add
aaa
pop
add
add
je
and
push
pop
cmp
pop
mov
scas
mov
retf
test
aas
out
and
push
sbb
scas
popf
iret
test
add
in
movs
mov
leave
jae
xchg
addr16
mov
dec
cdq
mov
pop
int
jle
push
ins
loop
add
add
mov
add
jmp
shl
fidivr
div
mov
lea
fiadd
add
pop
pushf
mov
mov
pop
mov
sub
jo
inc
fcomp
outs
lods
pop
aaa
mov
shl
xor
test
int
mov
lock
das
fidiv
add
fsub
imul
sub
shl
fs
(bad)
out
fiadd
add
adc
inc
(bad)
adc
call
cli
and
add
call
xor
add
loope
sub
cmp
add
out
(bad)
mov
push
(bad)
push
xchg
outs
call
pop
xor
add
add
ds
repz
pop
mov
and
or
fsubr
add
popa
add
cdq
ret
add
push
or
add
add
popf
inc
jp
push
jno
inc
scas
mov
add
bnd
adc
je
push
je
add
test
add
add
pop
jmp
mov
push
xchg
ins
int
and
loopne
(bad)
inc
add
test
xchg
mov
repnz
std
add
add
clc
xchg
(bad)
add
cli
mov
sahf
pop
jae
mov
(bad)
jo
add
xor
jnp
mov
into
adc
add
ss
xor
loopne
add
shl
jl
add
add
push
lds
fwait
inc
mov
pop
fs
lods
mov
xchg
inc
mov
retf
jge
jmp
mov
fs
and
call
mov
arpl
xor
out
mov
aas
lds
jmp
xor
push
imul
add
lds
push
test
pop
push
ror
ins
xor
pop
cmpxchg
add
cmp
pushf
and
and
cmp
add
jns
xchg
sbb
add
mov
cmp
or
add
sub
jg
mov
add
mov
cdq
inc
mov
add
add
fist
adc
add
je
je
add
mov
call
jnp
mov
fcomp
popf
add
add
and
sahf
xor
adc
add
add
cs
mov
pushf
lahf
mov
cmp
xchg
add
retf
xchg
ret
mov
fild
les
add
jo
test
inc
(bad)
pop
and
adc
adc
jmp
sub
add
sti
mov
clc
add
add
mov
es
push
or
dec
add
in
mov
inc
xchg
mov
adc
add
cmp
data16
repnz
add
into
out
mov
dec
and
adc
add
sub
add
add
mov
push
cmp
add
(bad)
pop
jmp
sub
sub
jbe
inc
iret
mov
pop
xor
std
xlat
mov
add
outs
cmp
add
mov
or
mov
stc
retf
add
ds
inc
push
in
mov
add
add
push
add
jo
mov
lahf
popa
mov
cvtdq2ps
xchg
lods
shl
add
add
ror
mov
or
cwde
int
cmps
call
fcom
pop
je
add
xchg
push
outs
mov
mov
lea
loop
jne
cmp
adc
push
pop
add
add
std
jmp
xor
imul
cli
cmp
or
stos
jl
or
dec
call
sub
fsub
iret
dec
imul
dec
popf
or
add
jno
outs
add
into
fcom
out
xlat
push
sub
aaa
js
call
add
movs
std
scas
scas
popf
addr16
in
fdivrp
scas
mov
(bad)
sbb
scas
add
inc
fst
mov
in
or
xchg
arpl
mov
in
add
mov
loope
scas
popa
xchg
jmp
mov
or
or
add
imul
mov
adc
add
add
pushf
les
sahf
or
add
mov
arpl
jg
scas
adc
data16
lds
jno
pop
test
out
jg
arpl
add
and
mov
loopne
cs
mov
sbb
and
adc
mov
push
push
add
add
ds
(bad)
(bad)
jne
inc
fsub
in
test
idiv
add
fcmovnbe
dec
add
(bad)
lods
cmc
pop
jg
mov
repnz
add
add
cmp
stc
adc
xchg
hlt
imul
aam
sbb
iret
mov
jecxz
sub
add
inc
add
sbb
out
add
fs
xchg
cmp
add
add
adc
ds
cs
push
cwde
pop
cli
bound
enter
sbb
add
lock
inc
aas
repnz
push
mov
ret
jo
mov
lods
ss
jle
fcom
add
pop
(bad)
pop
cs
add
pop
pop
sbb
add
out
nop
add
add
out
add
push
push
in
imul
dec
mov
pop
mov
pop
add
add
push
jg
shr
cmps
iret
test
xor
or
bsf
pop
sub
xor
push
sahf
mov
fadd
scas
add
lds
ret
lock
xor
push
push
add
cmp
adc
jmp
xchg
sbb
mov
das
add
cs
mov
out
or
ret
shl
ja
add
add
into
mov
mov
in
out
das
cli
rol
fisttp
mov
gs
out
pop
in
add
add
sbb
fadd
add
mov
ficom
push
lods
adc
out
dec
xor
add
test
enter
fidivr
jbe
pop
ds
out
lock
rol
mov
fiadd
pusha
inc
in
pop
or
add
xchg
lock
and
(bad)
jbe
add
cmps
mov
cmps
adc
rol
dec
and
dec
jne
add
dec
and
(bad)
and
cmc
lahf
in
call
movs
add
adc
sar
stos
movs
xchg
sbb
test
mov
add
mov
inc
outs
push
and
dec
mov
mov
jbe
les
xor
pop
verw
add
add
mov
add
pop
add
add
ja
pop
add
ds
in
pop
mov
push
cmps
retf
sbb
ret
repz
mov
cmp
lahf
jl
xor
div
sub
add
fst
push
cmp
shl
(bad)
repz
call
loopne
cmps
xchg
add
(bad)
dec
loope
add
mov
cs
out
mov
lds
add
in
push
jp
enter
mov
das
add
popf
sbb
pop
std
out
pop
(bad)
push
(bad)
sbb
into
add
push
add
mov
and
not
(bad)
fdiv
imul
mov
dec
dec
and
int
and
mov
mov
fs
rcl
aas
inc
add
mov
(bad)
jp
jne
add
pop
inc
jmp
leave
inc
ret
add
add
add
add
add
fimul
dec
cdq
dec
es
mov
ret
pusha
dec
in
lods
and
fsub
daa
repnz
test
hlt
cmp
hlt
add
or
dec
jle
gs
les
leave
add
pop
inc
add
out
cmp
add
std
pop
xor
das
popf
ret
psllw
add
lods
add
add
push
sbb
push
xchg
xor
cmc
ja
sahf
or
jmp
addr16
repz
xor
lock
add
es
mov
fsubr
cmp
clc
aaa
add
xor
lea
or
dec
lods
add
sti
aad
add
ret
stos
fiadd
call
sti
je
adc
ja
add
jl
xor
jbe
add
fnstsw
movs
jbe
nop
sbb
and
add
push
inc
pop
jl
add
sub
jns
(bad)
lock
daa
xchg
cld
mov
xor
call
inc
add
into
call
cmp
iret
inc
or
int3
pop
adc
dec
dec
lods
mov
fmul
add
push
daa
out
mov
add
aaa
sub
pop
mov
jle
cmp
in
imul
add
push
dec
sub
dec
movs
xor
xor
and
jecxz
cmp
aam
add
inc
xchg
imul
mov
xchg
add
add
mov
xor
add
cld
xchg
sbb
sbb
ret
mov
add
add
jmp
retf
rcr
cmp
movs
push
fmul
mov
les
inc
add
add
xlat
ja
mov
jns
mov
in
test
cdq
in
add
in
call
dec
ins
push
xor
add
push
data16
into
pop
daa
cmp
add
add
fs
mov
aaa
rcl
sub
add
add
dec
cmp
sbb
sub
mov
dec
mov
lea
or
add
stc
enter
sahf
aam
add
add
inc
je
nop
(bad)
mov
xchg
icebp
ror
add
xor
outs
dec
sbb
or
fs
add
cmp
jb
mov
leave
stos
add
inc
adc
adc
add
add
add
repz
icebp
cli
bound
sbb
push
jnp
push
add
add
dec
pusha
xchg
jae
outs
jg
loope
imul
popa
pop
pop
in
daa
sbb
fcomp
fwait
add
add
sar
out
or
add
push
add
retf
dec
test
(bad)
lods
xchg
(bad)
fcmovne
aas
(bad)
enter
arpl
mov
push
mov
add
add
(bad)
jmp
mov
aas
stos
inc
dec
pop
dec
loopne
stc
jae
js
dec
xor
mov
popf
out
sti
(bad)
iret
mov
pop
aam
add
(bad)
pop
add
leave
add
add
xor
cmp
sub
add
daa
add
and
ins
retf
add
jb
inc
push
push
lods
pop
cld
mov
xor
and
add
lock
sar
sub
add
jbe
mov
add
pop
xor
add
push
(bad)
stos
sti
ja
or
pop
adc
dec
je
pop
or
add
ds
pop
aas
test
sub
sub
mov
and
push
add
add
cmp
dec
loop
fsubrp
sbb
pop
mov
pop
mov
(bad)
fld
push
not
test
xchg
paddw
add
(bad)
cld
sub
out
add
sub
add
add
ret
xchg
and
ret
mov
adc
ds
push
fbld
add
add
add
xor
jnp
jle
pop
or
mov
js
add
popf
fmul
out
rcr
mov
and
inc
shl
(bad)
(bad)
push
fadd
je
add
inc
jno
mov
add
sti
and
std
nop
shr
sbb
arpl
fiadd
mov
into
dec
add
add
add
inc
mov
mov
cli
pop
xor
pop
or
cmps
adc
fdiv
mov
cwde
add
jp
scas
add
add
rol
inc
ds
sub
into
xchg
das
mov
cmp
push
retf
mov
jl
add
add
push
dec
xchg
dec
into
cmp
xchg
push
in
jge
ss
push
popa
add
repz
add
add
xor
mov
es
aam
pushf
and
mov
dec
movs
pop
cdq
sbb
add
inc
sub
(bad)
test
add
add
stos
adc
hlt
add
data16
out
pop
add
cmc
xchg
and
xor
mov
scas
pushf
ins
add
int3
and
jne
and
jo
inc
enter
(bad)
adc
lds
adc
popf
mov
push
pop
call
jae
out
or
(bad)
repnz
bound
jle
add
loopne
clc
out
(bad)
movs
fcmovbe
cs
repnz
add
repnz
jmp
shl
mov
jle
add
push
adc
aaa
(bad)
sbb
ins
fistp
add
add
add
scas
das
pop
fsubr
shl
or
mov
fmul
stc
pop
sbb
push
lea
sub
icebp
xor
lock
add
movs
popa
push
add
jno
movs
mov
adc
iret
pop
mov
jg
loopne
and
cmp
loopne
iret
mov
jl
sub
cdq
inc
jp
retf
sub
cmp
ins
xchg
jbe
mov
out
add
add
add
sbb
mov
dec
push
loope
push
cmp
retf
enter
ret
add
ror
push
add
or
sahf
xor
add
dec
xor
push
mov
add
mov
fisttp
repnz
adc
int3
pop
mov
add
mov
test
add
add
xchg
stc
push
jg
enter
ja
icebp
sbb
imul
dec
mov
call
adc
dec
lahf
or
sbb
and
pop
ror
mov
sbb
neg
lock
xor
jno
add
ja
add
pop
add
or
(bad)
scas
fs
fild
pop
push
add
arpl
rcl
es
test
xor
mov
xor
fdiv
mov
add
xchg
rol
cmps
push
or
or
cli
add
inc
xor
add
inc
cmp
in
add
movs
jae
scas
sbb
or
jg
inc
sub
add
add
je
push
mov
ret
dec
add
repnz
xor
dec
adc
repnz
mov
clc
xchg
add
rol
cs
cmps
sub
mov
add
sar
add
arpl
retf
and
xchg
add
rol
dec
shr
call
add
inc
or
sar
or
or
push
in
xor
add
pop
mov
push
and
adc
add
iret
dec
push
mov
cmp
add
ds
sbb
mov
mov
mov
test
sbb
hlt
add
ds
mov
mov
pop
rol
sar
and
mov
in
test
or
add
pop
jecxz
adc
fidivr
and
imul
push
push
and
add
sahf
outs
rcl
jp
ss
inc
add
in
cdq
fsub
xchg
fnstsw
add
ss
jg
popf
pusha
js
outs
add
xchg
into
fsubr
outs
movs
outs
out
popa
inc
jbe
int
ins
push
aam
inc
pop
xchg
add
loope
add
jbe
add
add
jne
xlat
inc
outs
sbb
(bad)
cmp
push
adc
add
add
repz
mov
ss
aas
aaa
enter
addr16
add
add
out
sub
in
hlt
call
(bad)
add
mov
xchg
inc
outs
call
add
and
icebp
shl
add
(bad)
dec
dec
cwde
aaa
xor
dec
iret
adc
mov
cmp
and
dec
mov
int3
pushf
mov
mov
loope
push
ret
inc
add
outs
mov
push
pop
adc
test
add
jns
add
mov
into
in
jbe
dec
mov
adc
xchg
xchg
or
movs
mov
das
pop
push
xor
xchg
pop
add
stos
les
gs
pusha
pcmpeqd
int3
out
scas
xor
add
add
(bad)
mov
push
inc
xchg
xor
jl
imul
aas
cmps
add
call
dec
dec
add
cmp
add
jmp
add
loop
retf
ja
enter
or
add
cmp
and
or
add
(bad)
in
iret
sbb
mov
add
add
aaa
mov
dec
xor
jne
push
add
pop
mov
aas
cmp
sbb
add
out
std
fiadd
loopne
xchg
fsubr
call
adc
add
push
pop
add
add
sahf
cmp
sub
push
and
addr16
inc
into
arpl
cdq
or
inc
in
mov
aam
sub
add
pusha
pop
mov
ret
(bad)
xchg
inc
pop
and
xchg
fmul
idiv
xor
add
add
and
stc
aas
int3
xor
add
call
push
cmp
mov
mov
outs
pop
shl
add
fmul
sbb
sub
add
xor
es
mov
push
test
xchg
cmps
outs
not
lahf
test
leave
xlat
jno
dec
add
ret
aaa
pop
jne
ror
mov
mov
add
add
mov
add
sbb
push
ret
fcom
cmc
pop
add
(bad)
jbe
xchg
add
add
pop
xchg
jp
out
imul
add
sbb
out
jl
es
add
add
sub
mov
push
leave
mov
mov
mov
add
push
pop
or
add
je
add
cmps
outs
or
sub
pop
xor
sbb
cmc
jge
stos
add
cmc
jae
xchg
outs
add
xor
ja
add
add
es
mov
and
push
add
push
loope
add
addr16
repz
stos
add
add
or
add
add
sti
push
add
ror
add
mov
xchg
mov
(bad)
cmc
add
cmps
int
test
sbb
mov
xchg
ja
add
add
inc
mov
xchg
fcom
repnz
or
add
sbb
push
cmp
mov
dec
in
add
mov
inc
call
adc
add
aad
int3
add
es
(bad)
push
outs
mov
xchg
test
out
ds
push
sbb
outs
test
rcl
push
xchg
dec
scas
fstp
mov
mov
pusha
add
mov
push
in
pop
xlat
dec
mov
clc
add
jmp
add
ret
test
popa
sbb
aam
aad
stc
out
std
mov
mov
lea
push
cmp
add
jmp
mov
xchg
mov
js
dec
test
ins
jge
std
pop
cs
in
hlt
shl
ret
add
iret
sub
add
out
and
add
in
in
popa
add
add
add
(bad)
cli
mov
push
test
mov
xlat
or
jl
ret
test
test
fild
inc
stc
jb
stos
jno
mov
dec
outs
xchg
pop
in
cmp
cmp
stc
add
add
pusha
inc
mov
and
stc
xchg
mov
shl
out
or
xor
xchg
inc
call
add
xchg
ja
ss
cmp
mov
add
or
add
pop
sub
aad
add
stc
xchg
cmp
fild
inc
cli
call
and
sar
sbb
inc
inc
sahf
mov
daa
pop
mov
outs
xchg
inc
sub
sub
push
jmp
ficomp
sbb
dec
mov
sbb
mov
ret
sbb
add
jns
or
jne
xchg
mov
fdivr
(bad)
test
add
add
add
mov
cmp
(bad)
aaa
cmp
int3
scas
dec
push
jmp
out
jg
push
addr16
and
jns
fs
lds
xchg
jp
adc
push
dec
nop
js
rol
icebp
out
add
add
aas
faddp
sub
test
clc
fiadd
inc
rcr
(bad)
sub
jl
jmp
add
outs
push
mov
pop
aad
je
aaa
sbb
inc
ret
mov
shl
xchg
cwde
repz
iret
lods
push
aaa
adc
aaa
add
imul
in
add
push
js
loope
jnp
gs
test
add
xor
cmc
stos
sbb
sbb
pusha
(bad)
icebp
add
and
pop
iret
add
scas
cli
add
popa
adc
add
in
jmp
imul
mov
mov
sub
xor
add
fcmovne
add
hlt
shl
or
add
add
jo
add
sbb
bound
lods
add
(bad)
jl
sahf
add
gs
ds
and
xchg
mov
jecxz
jae
add
in
or
cld
aam
pop
inc
and
add
jg
add
add
test
into
fcom
or
mov
jns
jmp
mov
mov
fwait
add
add
fwait
cli
(bad)
fcmovb
mov
or
add
ficomp
add
ror
or
enter
in
cli
mov
jmp
add
add
add
adc
bound
gs
mov
aad
sbb
mov
push
in
ret
sti
fnstcw
add
retf
adc
leave
xchg
xlat
and
cwde
add
add
sub
jno
dec
and
and
sub
pop
mov
mov
add
addr16
(bad)
mov
add
add
mov
or
add
jmp
mov
aad
add
add
xchg
je
adc
jne
xchg
or
add
inc
xor
mov
pop
add
add
add
mov
pop
mov
aad
cmps
xchg
test
data16
xor
dec
xor
jnp
adc
jmp
rcr
adc
shr
lea
add
add
xor
mov
jle
push
jl
mov
call
cmp
std
mov
fstp
mov
ss
dec
ins
xor
xchg
xor
mov
(bad)
(bad)
and
and
sbb
sbb
mov
push
mov
add
add
sahf
push
xchg
cmp
enter
add
cmp
test
dec
cmp
ficomp
mov
add
xor
pop
sub
ins
cmp
outs
xchg
(bad)
fcom
std
cmp
loope
lods
test
add
les
mov
gs
mov
fmulp
scas
jmp
add
test
daa
sub
fwait
xor
add
(bad)
out
and
push
movs
add
add
add
lds
mov
fld
inc
pusha
xchg
or
push
in
xor
add
dec
mov
les
add
inc
out
push
outs
mov
call
jp
sub
out
and
mov
add
add
and
inc
imul
push
bound
(bad)
sahf
xor
mov
dec
sub
add
rcr
push
adc
xchg
xor
mov
mov
lahf
add
add
mov
pusha
dec
test
xor
rol
dec
cmc
or
out
add
rcr
jo
call
iret
sub
adc
jmp
inc
cld
mov
add
adc
push
stc
mov
adc
pop
add
test
push
inc
call
into
cmps
inc
fwait
mov
popa
cmp
mov
dec
xchg
sbb
add
pusha
xchg
inc
add
out
xchg
add
add
cmp
mov
sti
daa
lahf
xor
enter
jno
fild
add
sbb
mov
sbb
fild
inc
add
or
popa
push
shl
sahf
pop
push
std
cwde
add
add
dec
sbb
test
mov
jecxz
dec
ins
jge
test
repnz
neg
mov
push
arpl
call
mov
jmp
ficom
mov
dec
pop
mov
adc
dec
push
cdq
sahf
popa
sub
mov
test
inc
loop
fldcw
inc
fstp
mov
mov
or
outs
leave
ds
pop
jnp
fidivr
or
push
lea
add
lods
retf
test
mov
hlt
popf
shl
jg
xor
mov
sahf
mov
(bad)
pop
vpaddb
into
add
mov
into
xor
push
mov
jbe
fld
mov
pop
push
iret
xchg
jp
xchg
inc
mov
cld
jb
aaa
or
mov
push
stc
add
movs
add
add
clc
pop
pop
dec
pop
add
pop
shr
add
sub
add
cs
cmp
mov
push
cmp
add
adc
cmp
sub
stos
sahf
mov
add
js
adc
hlt
fnstsw
out
add
add
add
(bad)
xchg
push
inc
push
jne
jge
xor
(bad)
pop
push
add
add
mov
jecxz
les
mov
bound
inc
popa
mov
in
in
add
sub
add
add
in
fs
aam
push
outs
push
xchg
pop
pop
fisttp
es
shr
mov
add
inc
add
cld
pop
aam
ins
add
pop
scas
mov
repnz
(bad)
icebp
add
push
mov
dec
(bad)
pop
mov
xchg
xor
add
add
mov
inc
in
or
pop
int3
movs
xchg
stos
test
gs
pop
mov
add
jg
loop
xor
and
add
and
and
sub
pop
mov
cmc
sub
add
(bad)
pop
mov
add
mov
nop
bswap
mov
add
mov
and
test
dec
dec
shr
and
xchg
add
add
sub
jb
std
std
xchg
or
mov
cmp
loopne
dec
add
js
pop
mov
xor
inc
dec
int
cmp
jg
pop
and
xchg
sahf
or
cmp
and
sbb
cdq
test
call
jecxz
mov
inc
sbb
clc
mov
xchg
mov
sub
xchg
or
dec
add
add
and
push
jo
adc
sldt
pop
in
pop
int
gs
mov
ja
jmp
add
bound
push
ret
aam
test
xor
jecxz
push
cmp
ins
pop
sub
inc
aas
repnz
adc
js
loop
add
add
shl
push
mov
push
(bad)
std
xchg
push
add
aas
push
add
xor
add
leave
add
sub
or
add
inc
pop
test
push
add
popa
clc
add
mov
cmp
add
out
aad
and
in
xchg
mov
add
mov
test
mov
jmp
add
mov
add
add
stos
sar
jl
inc
adc
retf
add
xchg
inc
cmp
add
mov
ret
add
add
movs
mov
xor
xor
lods
mov
inc
jmp
add
sbb
loopne
imul
add
add
pushf
aad
mov
sub
iret
add
inc
xchg
sbb
pop
pop
aaa
popa
mov
jp
inc
add
adc
pop
adc
dec
add
add
add
aad
es
aaa
fstp
inc
adc
inc
jae
adc
jmp
lahf
popa
popa
clc
lahf
jge
xor
sbb
add
sti
mov
stc
push
add
adc
sbb
enter
add
sbb
push
pop
and
lahf
inc
mov
add
add
pop
aad
scas
out
push
mov
jge
push
pop
rol
sbb
in
ins
out
dec
or
add
add
add
mov
jmp
mov
inc
add
xor
adc
sbb
sbb
add
inc
mov
dec
jb
pop
fadd
add
add
adc
sbb
inc
nop
xor
cmp
add
femms
out
rcr
dec
add
test
mov
push
add
and
mov
pop
div
je
and
cmp
mov
fmul
add
fdivr
push
mov
or
movs
outs
js
jl
pop
dec
dec
mov
into
outs
out
push
sbb
or
into
lods
fistp
inc
add
fild
add
cmp
ret
xchg
pop
je
inc
push
retf
leave
xchg
add
sahf
ret
add
adc
xor
sbb
inc
add
add
jae
jns
(bad)
sbb
js
js
pop
mov
inc
dec
xchg
mov
fnstsw
sub
mov
mov
mov
fdivr
add
loope
mov
add
sar
cwde
data16
mov
sub
add
add
jb
movs
test
arpl
cmps
cdq
enter
mov
popf
or
inc
pop
fldl2t
jl
in
push
mov
sbb
and
cmp
push
mov
xchg
cmp
cmp
dec
add
test
mov
int
call
pop
(bad)
in
lods
lea
pop
retf
push
add
movs
inc
test
xor
pushf
push
outs
fwait
fwait
add
pop
dec
pop
aas
icebp
pusha
pop
and
jo
push
xchg
push
dec
add
add
sbb
add
(bad)
mov
add
clc
stos
(bad)
push
xchg
dec
xchg
add
add
xor
(bad)
pop
cmps
addr16
out
jle
ins
leave
xor
push
rol
add
mov
add
add
pop
lock
sub
cmc
mov
and
and
hlt
pop
mov
add
add
shr
in
das
cmps
sub
inc
inc
sub
add
popa
mov
loope
jne
data16
or
sub
add
dec
retf
adc
jg
add
add
ret
retf
stos
jo
mov
out
add
add
xor
gs
jmp
retf
cmp
cmp
mov
bound
in
add
(bad)
(bad)
mov
add
je
sub
inc
add
jb
cli
mul
mov
movs
add
inc
inc
mov
adc
add
xor
lock
data16
add
fbstp
xor
and
pop
add
fidivr
add
lds
jp
add
dec
clc
mov
pop
ins
imul
add
mov
sbb
out
jns
adc
movs
nop
add
ret
das
pop
mov
mov
add
add
pop
jnp
pop
aas
sub
int
imul
mov
add
add
out
add
add
pop
jbe
int3
aaa
mov
mov
popa
mov
mov
adc
lea
add
add
add
add
stos
push
and
shr
dec
repnz
add
repz
adc
hlt
push
inc
inc
jle
iret
jp
add
cmp
aas
(bad)
leave
(bad)
push
push
xchg
push
add
dec
shl
mov
add
mov
stos
into
arpl
add
add
fcmovne
rcl
inc
sbb
fdivr
sbb
mov
ins
adc
adc
loopne
add
xor
jp
add
out
vucomiss
fadd
jp
xor
mov
xchg
add
pop
add
push
or
add
inc
sbb
add
jl
cmp
outs
lea
add
jp
test
stc
add
add
sbb
pop
retf
sub
clc
add
add
add
imul
repz
or
push
dec
or
jnp
pop
jp
rcr
jg
mul
retf
lods
push
sbb
sbb
cld
add
add
add
add
cdq
cmp
call
xor
sbb
pushf
ins
stos
add
fwait
lahf
mov
mov
mul
in
add
add
mov
jp
pushf
inc
sbb
jg
test
add
jmp
pop
outs
dec
scas
lahf
pop
stos
jb
inc
add
sbb
mov
push
(bad)
jae
cmp
add
mov
hlt
test
add
in
sub
scas
aad
je
mov
or
(bad)
adc
cwde
jle
xor
pop
test
or
inc
xor
add
pusha
and
mov
(bad)
mov
sbb
add
add
pop
mov
daa
dec
ins
rcr
retf
inc
adc
sahf
lss
movs
mov
xchg
mov
add
adc
cmp
cmp
mov
aam
repz
cwde
inc
add
into
pop
pop
add
add
imul
or
push
sub
mov
jb
jo
bound
movs
push
mov
mov
xor
add
inc
in
add
add
cmp
in
add
imul
je
mov
xchg
add
jmp
jecxz
adc
add
jl
sbb
jb
mov
add
inc
add
test
adc
sti
int
dec
mov
add
or
mov
push
mov
or
add
add
cmp
sub
add
or
int
cmps
ins
push
or
lea
ins
add
mov
xchg
movs
push
ret
cli
rcr
in
aad
sbb
add
shr
jge
jmp
and
pop
jne
add
add
inc
or
pop
stos
mov
sub
add
or
xchg
mov
push
push
add
inc
sub
cmps
popf
jle
add
jno
inc
loopne
mov
pop
loop
sub
mov
in
ds
jl
ss
gs
add
push
inc
fs
push
xchg
out
jmp
xchg
sti
gs
mov
add
inc
aam
shl
int
in
mov
add
add
jbe
out
mov
ret
sbb
out
sub
xchg
adc
xor
fwait
outs
xchg
and
add
inc
jno
daa
stc
xchg
fs
out
outs
cmps
and
add
mov
or
pop
adc
rcl
pop
or
(bad)
adc
push
cmc
repnz
mov
popf
xor
lods
loope
mov
or
add
mov
das
es
sub
rol
mov
lahf
lods
rcr
add
imul
addr16
add
pop
movs
stos
lahf
rol
dec
mov
xor
add
add
pusha
cmp
scas
mov
and
frstor
or
std
xchg
mov
gs
loopne
add
add
sub
sub
(bad)
and
aas
retf
dec
and
icebp
xor
or
xchg
stc
imul
add
push
pop
xor
popa
les
and
mov
sbb
fmul
add
add
rol
test
les
mov
push
cli
cld
mov
sahf
bound
adc
xchg
loopne
add
add
movs
call
or
adc
cli
rcr
adc
dec
dec
add
add
in
imul
add
inc
inc
frstor
add
pop
sbb
add
inc
popf
bound
xlat
dec
add
pop
mov
mov
or
out
add
out
inc
or
jmp
loop
sbb
add
mov
fnclex
adc
add
add
xor
mov
mov
ret
push
cdq
clc
add
loop
(bad)
sub
add
fmul
retf
sti
xor
xchg
xchg
add
adc
ret
fcomp
iret
in
jmp
xchg
add
add
(bad)
cdq
xchg
out
push
mov
jmp
frstpm(287
fwait
push
rcr
repnz
imul
popa
mov
xchg
fnsave
add
xlat
fcomip
(bad)
jg
mov
add
add
std
mov
jg
movs
dec
(bad)
add
sub
dec
add
add
add
stos
int3
ss
jmp
popf
cmps
ins
in
arpl
dec
sub
int3
inc
sar
test
adc
inc
imul
fistp
mov
sub
and
add
les
adc
fild
mov
sbb
add
mov
jb
mov
add
add
ins
test
mov
sbb
rcr
inc
mov
add
es
imul
outs
mov
cmp
pop
inc
into
and
xchg
add
add
fisub
repz
add
out
add
sldt
add
rol
repnz
sub
add
jg
pop
pop
rol
add
add
popa
jnp
retf
movs
pop
pushf
xchg
hlt
ins
test
and
add
repnz
adc
call
int
xor
fldenv
sahf
xchg
mov
test
fidivr
xor
loopne
out
les
pop
cmp
cmp
test
and
add
adc
push
mov
test
cld
adc
add
add
retf
add
add
inc
mov
retf
inc
stos
pop
aad
push
loop
xchg
out
pop
dec
cmc
inc
retf
sbb
jno
fcmovb
jo
sub
add
add
pop
std
mov
call
addr16
fxsave
sbb
add
call
mov
dec
pusha
add
add
add
dec
mov
sub
adc
pop
pop
lock
inc
and
fsub
loopne
inc
sbb
xlat
test
or
adc
stos
xchg
mov
push
pop
pop
or
movs
popa
adc
cld
shr
retf
cs
add
cmps
cmp
stc
je
leave
add
jmp
ret
daa
add
inc
jne
mov
in
add
jae
inc
add
xlat
xchg
ds
sbb
pushf
sar
inc
add
sub
add
jnp
rol
add
loope
fsubr
add
add
mov
cmp
add
loope
data16
add
add
jno
cdq
(bad)
mov
push
pushf
cmp
mov
addr16
mov
push
add
add
inc
ror
sub
imul
sbb
pop
add
pop
cmp
add
xor
cmp
retf
mov
add
call
movs
icebp
jmp
cld
fmul
pop
sbb
daa
cmp
pop
add
int3
add
pop
push
add
std
add
aas
test
lods
and
mov
add
repz
add
add
add
add
and
add
pop
dec
(bad)
push
add
mov
dec
add
add
push
add
add
mov
(bad)
inc
fmul
rcr
movs
sub
jae
add
ins
jg
dec
(bad)
rol
add
xor
mov
stos
mov
es
lods
test
add
and
inc
add
(bad)
mov
sahf
ins
jle
into
sub
xor
xchg
test
sar
sbb
mov
jmp
pop
add
add
imul
addr16
fsub
add
jl
jne
push
push
test
push
dec
in
jp
adc
jg
call
mov
push
add
and
add
std
mov
inc
adc
int
and
add
inc
enter
add
xchg
leave
pop
jmp
sub
je
dec
xlat
je
into
call
sub
ror
pop
inc
add
add
add
inc
test
in
and
lods
mov
pop
add
xor
jno
clc
mov
outs
push
xchg
add
xchg
add
add
pop
push
xor
or
(bad)
in
xchg
mov
iret
bound
mov
jecxz
add
add
add
sub
mov
inc
test
adc
retf
dec
fsubr
pop
add
add
pusha
fnsave
imul
xchg
pusha
mov
add
inc
and
sbb
dec
adc
mov
pop
and
lods
cld
inc
or
lods
(bad)
add
add
xchg
push
dec
xor
xor
loopne
adc
pop
jns
dec
dec
jns
add
ins
fisubr
add
adc
add
add
mov
sub
mov
lahf
out
sbb
push
xchg
adc
add
adc
fild
pop
add
jmp
sar
ins
in
sbb
push
add
sub
xchg
add
lahf
gs
pop
jne
cmc
hlt
mov
stos
adc
add
(bad)
fldenv
dec
inc
add
int3
iret
push
js
pop
or
jge
add
inc
jmp
and
add
lds
inc
stos
ror
pop
cs
imul
add
sbb
rol
out
shl
sub
xor
ret
push
jnp
add
mov
loopne
inc
clc
cmp
mov
aam
add
add
add
mov
(bad)
mov
push
jmp
ficom
sub
rol
jmp
or
ins
cmp
ficom
pop
add
test
sub
fiadd
lahf
icebp
add
dec
sbb
enter
mov
add
add
or
xchg
stos
test
jno
repnz
repz
loopne
(bad)
push
pop
adc
in
cmp
mov
add
lock
imul
sub
aam
xchg
adc
inc
loop
xor
add
inc
xchg
out
inc
ss
loope
add
in
adc
xchg
inc
in
retf
add
mov
dec
pop
mov
scas
and
cmp
enter
cwde
mov
add
mov
and
pop
mov
pop
(bad)
mov
mov
aas
push
test
daa
xor
add
add
push
retf
xlat
(bad)
push
sbb
xchg
stos
push
out
retf
outs
sub
jns
cli
sbb
sbb
and
add
dec
int3
mov
push
push
js
jge
add
jmp
fadd
add
out
sub
and
dec
in
jns
add
xchg
mov
add
popa
out
icebp
sahf
aaa
lods
ss
fldenv
add
lods
arpl
cmp
nop
jmp
xchg
adc
pop
add
fistp
jmp
int
add
daa
aas
mov
push
(bad)
jle
adc
push
sub
add
xor
ins
mov
mov
push
xor
cwde
out
outs
popa
adc
xchg
xchg
mov
cs
jno
cmp
gs
retf
mov
aam
mov
fs
add
adc
xor
add
call
xchg
mov
add
jmp
ret
arpl
or
mov
mov
ins
sbb
popa
and
mov
add
mov
jge
iret
imul
jecxz
push
outs
jnp
jae
push
cmc
add
stc
fcom
fstp
popa
add
sbb
lock
push
movs
inc
pop
add
add
add
ss
out
jg
inc
scas
xor
mov
push
pop
cld
mov
add
iret
jge
jge
add
ret
cmps
test
pop
jo
pop
sbb
outs
adc
mov
ret
add
add
xchg
fmul
add
add
cli
cmp
xchg
mov
xchg
rol
into
add
(bad)
ins
add
pop
add
add
sub
or
test
and
mov
add
movs
push
pop
jp
movs
inc
in
jnp
push
test
loope
sbb
bound
shl
test
cmps
add
add
add
add
xchg
dec
inc
sbb
(bad)
loop
pop
xor
les
int
and
add
jno
add
inc
pop
(bad)
mov
cmp
jge
xor
jae
fucomip
test
loop
sub
add
push
add
add
adc
xor
mov
xchg
dec
jns
retf
stos
pop
scas
push
add
enter
xchg
dec
mov
mov
and
and
push
add
ss
xor
shl
add
arpl
scas
inc
adc
adc
outs
ds
adc
cmp
lahf
jl
stos
lods
add
mov
dec
xchg
cld
pop
into
lods
imul
add
xchg
das
cmc
out
inc
xchg
adc
jle
add
add
shr
ficomp
push
mov
sbb
xchg
loopne
inc
mov
add
loope
add
add
cmps
add
pop
add
cli
pop
xor
mov
cmp
mov
xchg
inc
lods
add
xlat
sbb
inc
mov
xchg
int3
add
rcr
mov
sub
inc
push
push
add
daa
mov
add
adc
aaa
loopne
cmps
add
xchg
and
add
push
add
add
fdiv
cmp
sbb
jmp
in
les
add
loope
loope
rol
stos
fwait
dec
aam
pop
xor
mov
arpl
push
add
fisub
fidivr
or
add
imul
add
mov
push
(bad)
int3
xor
xchg
adc
mov
sar
inc
or
add
out
mov
leave
push
and
jmp
inc
lods
sub
imul
pusha
push
call
dec
ins
les
out
neg
jne
add
jnp
aas
scas
jns
xor
add
add
in
out
add
rcr
mov
xchg
shr
mov
cmps
pop
lods
add
rcl
xchg
out
add
cld
xor
or
movs
add
add
popa
add
hlt
lds
popf
add
add
and
aad
add
inc
add
std
shl
add
adc
daa
dec
mov
leave
cmp
popf
fld
test
add
mov
mov
clc
mov
add
add
mov
mov
fldcw
add
xor
ficom
add
add
add
rol
xor
in
pop
dec
out
cmp
daa
dec
jle
cmc
lock
add
movs
lfs
repnz
add
xchg
add
push
mov
mov
test
cmps
jmp
fnstcw
sti
pop
jo
add
mov
cli
gs
fidiv
add
cmp
dec
fld
add
mov
aas
xchg
ins
rol
mov
pop
add
test
mov
add
not
add
mov
cmc
test
dec
sbb
dec
lods
sbb
pushf
call
jns
(bad)
stc
add
sbb
cmp
popfw
and
xor
les
test
add
add
mov
cld
jg
test
in
retf
out
mov
and
push
add
shl
cwde
jp
push
js
addr16
inc
add
add
add
pop
repz
das
rol
add
xchg
pop
ins
mov
inc
test
jns
inc
sbb
jbe
pop
retf
scas
arpl
add
add
add
in
xor
mov
sub
and
ss
add
movs
mov
retf
pop
sahf
xor
stos
add
bound
pop
xchg
imul
add
push
daa
sbb
cmp
jno
cmps
xchg
fcos
mov
inc
pop
push
add
xchg
sub
push
or
out
dec
add
out
sub
leave
xchg
add
adc
pop
shl
sub
add
add
mov
push
mov
mov
fistp
or
pop
into
mov
pop
add
fild
add
push
ins
ja
mov
je
jns
add
lds
pop
push
push
mov
popa
push
outs
add
push
cmp
int
jmp
fnstenv
pop
sbb
enter
add
dec
enter
daa
stos
je
add
popa
dec
retf
xchg
add
movs
(bad)
icebp
inc
mov
outs
mov
and
leave
mov
add
add
xchg
and
or
mov
adc
push
sub
or
mov
add
pop
icebp
add
add
add
bound
ds
ins
mov
std
add
ss
scas
mov
sbb
(bad)
test
ja
cmp
sar
xor
(bad)
cmp
in
or
add
stc
mov
xor
xor
rcl
add
movs
xor
int3
sbb
add
div
adc
inc
jp
add
inc
or
fnstcw
rol
add
call
out
sti
xlat
mov
mov
add
fcomp
jl
or
or
fcom
add
xchg
call
movs
shl
mov
imul
push
jo
push
jmp
adc
fldcw
scas
(bad)
pop
sbb
sub
add
lahf
lea
lock
mov
xchg
add
mov
dec
inc
push
mov
add
lods
jmp
sbb
xchg
xchg
dec
fild
xor
inc
ss
add
push
adc
loop
inc
push
add
add
jae
mov
std
xlat
out
jb
mov
add
xor
push
sbb
add
rol
aas
xchg
xor
pop
jl
sahf
cmp
jbe
das
add
fnstsw
rcl
sub
lea
in
adc
add
out
call
leave
mov
add
(bad)
scas
fsubr
in
add
add
dec
inc
jg
xchg
add
pusha
call
pop
fcom
dec
add
mov
mov
in
xchg
ficom
lods
mov
or
js
add
add
add
jl
add
mov
inc
add
sub
pop
xchg
sub
call
call
add
sub
jmp
add
add
add
or
aaa
sbb
mov
dec
push
add
sub
add
add
push
and
cld
das
sbb
movs
sahf
add
add
daa
pushf
outs
cmp
into
mov
add
pop
inc
sub
jg
es
pop
ja
add
sar
cdq
sub
add
push
push
jbe
movs
add
or
ins
xor
std
cmc
sbb
iret
loope
adc
jns
jo
fs
addr16
add
enter
rcr
push
pop
pop
xchg
iret
mov
(bad)
stos
mov
sbb
add
add
add
fwait
jbe
dec
add
add
mov
xor
jge
or
out
xchg
ja
ror
sbb
jne
shl
mov
add
call
add
add
lods
push
enter
cmp
call
add
mov
mov
sbb
add
add
mov
lea
pop
pop
inc
or
in
add
int
mov
adc
cmp
repnz
jg
pop
or
add
jne
adc
push
inc
dec
dec
add
sub
add
add
(bad)
xchg
cmc
cli
aad
jle
sub
dec
out
xor
aas
repnz
out
xor
add
add
rcl
retf
rcr
in
sbb
dec
push
push
mov
pop
repnz
shr
push
(bad)
mov
mov
data16
add
test
data16
leave
push
jle
test
stos
movs
dec
cmp
add
loopne
out
mov
jge
add
adc
add
add
inc
(bad)
pop
jbe
adc
xchg
or
pop
jne
cmp
sbb
fisttp
imul
or
loopne
jle
add
add
mov
mov
jmp
sbb
ja
fisubr
add
add
and
cmp
jmp
stc
stos
ret
ror
int3
jns
sub
aam
xor
cmp
add
add
add
aam
sbb
test
test
pop
or
or
je
jge
add
sub
sar
and
rcr
sbb
sbb
stc
iret
sbb
lahf
shl
sar
xchg
add
add
mov
aaa
push
cmp
aas
pop
frstor
add
mov
add
sub
mov
sub
add
mov
aaa
test
hlt
or
xchg
adc
xchg
add
ret
xchg
add
add
add
mov
add
add
sub
leave
out
adc
or
add
(bad)
jns
cmps
(bad)
xchg
cmc
stos
pushf
aam
add
mov
sti
add
cmp
mov
inc
push
push
add
pop
add
add
and
repnz
push
cmps
pop
fwait
addr16
sub
in
je
add
sub
jb
bound
mov
or
mov
jmp
mov
ss
push
rcl
add
outs
js
int
add
jnp
pop
pop
inc
add
ror
push
push
add
pop
ins
in
je
add
dec
mov
mov
add
add
call
and
int
xor
add
add
add
add
jmp
in
dec
add
jmp
ins
jmp
push
add
add
pop
add
ret
cmc
push
or
jmp
lahf
add
les
xor
pusha
movs
not
stc
inc
add
pop
sub
dec
add
push
enter
shl
or
fldl2t
xlat
neg
add
sub
pusha
mov
js
add
add
rcr
xchg
mov
aas
dec
cmp
clc
and
ja
dec
ss
push
jl
js
xor
movs
out
retf
popf
add
add
and
out
jne
leave
scas
sub
fidiv
dec
add
inc
inc
sbb
jmp
jne
fmul
add
in
add
repnz
fld
add
fistp
shl
cmp
inc
push
pop
mov
cdq
lock
mov
add
add
mov
mov
sub
xor
adc
push
mov
mov
imul
xor
mov
inc
xor
and
mov
call
or
(bad)
and
add
jg
test
inc
repnz
jne
push
sub
add
ret
jb
clc
call
push
inc
jmp
jb
add
les
mov
add
pop
or
mov
dec
ss
pop
jbe
in
add
push
add
dec
add
mov
xchg
test
jne
add
bound
test
add
add
pop
jmp
dec
xchg
pop
jecxz
add
je
xor
dec
jne
pushf
add
add
or
mov
repnz
adc
mov
push
lods
cmps
adc
add
add
add
adc
dec
test
(bad)
rcr
sub
pop
jp
arpl
add
popf
push
inc
jl
dec
mov
loop
add
add
add
xchg
add
jmp
push
add
add
add
sbb
test
and
pop
push
repnz
cs
add
pop
aas
and
push
fdiv
aaa
jmp
fdivr
cmp
add
lock
add
imul
xor
clc
pusha
jns
or
fs
mov
and
add
jnp
mov
cld
aas
xor
add
leave
(bad)
mov
aam
in
add
push
fdiv
cmp
bound
sahf
jb
add
jnp
inc
add
sub
add
bound
inc
dec
adc
push
inc
add
stc
add
add
xchg
bound
out
mov
add
ins
rcl
add
adc
adc
jns
jge
mov
add
mov
add
or
popf
pop
inc
jmp
push
dec
push
add
add
mov
mov
add
addr16
or
in
and
xchg
add
sub
add
mov
aas
out
das
js
cs
jmp
and
xor
jmp
ins
add
dec
inc
pop
and
add
shl
adc
add
jp
call
das
inc
and
mov
xor
add
pop
jne
jnp
out
mov
adc
jg
aam
add
add
add
jns
dec
sub
psubsb
ja
add
cmc
(bad)
cmp
cmp
jnp
ss
shl
aad
mov
dec
add
retf
push
add
sbb
adc
jmp
sbb
sti
mov
add
imul
add
add
clc
cmps
pop
push
sbb
xor
cmps
mov
imul
add
sbb
add
and
add
fstp
popa
pushf
sub
rep
add
add
add
mov
int3
jg
mov
lods
sbb
rcl
std
adc
pop
or
rol
mov
scas
add
fldenv
push
dec
cwde
cmp
push
mov
nop
clc
inc
fidivr
push
mov
jb
adc
int
add
pop
adc
icebp
mov
(bad)
aad
cli
mov
aam
test
call
pop
gs
push
mov
or
add
ins
js
xor
inc
popa
add
repnz
add
add
add
mov
mov
jp
lds
sbb
xor
retf
xor
sbb
lea
add
pop
ret
cmp
mov
push
in
mov
add
add
pop
push
cmp
xor
or
or
mov
addr16
mov
xchg
pop
xlat
jmp
out
sbb
and
add
and
mov
push
or
add
stc
sar
jnp
xchg
pop
mov
add
adc
ds
inc
lods
inc
cmp
outs
icebp
mov
and
ja
test
fucom
or
ss
mov
shr
movs
rcl
shl
inc
pop
fdivr
pop
add
add
stos
pop
pop
mov
test
push
imul
in
or
icebp
lock
jns
adc
add
sub
gs
push
add
aas
inc
mov
sub
xor
sahf
add
int3
push
add
add
and
or
adc
sahf
xchg
ret
add
add
enter
fstp
xchg
sub
sub
jns
sub
xor
(bad)
in
push
nop
push
dec
add
paddq
add
inc
mov
leave
sbb
mov
jg
adc
sbb
cwde
push
jnp
add
(bad)
imul
mov
aam
repnz
sbb
fild
xor
mov
add
add
sub
mov
cmp
cdq
aas
stos
add
push
imul
push
dec
dec
jle
cmp
add
mov
arpl
mov
add
add
mov
cdq
mov
mov
push
adc
outs
jb
pop
adc
xor
inc
movs
mov
int3
push
rol
imul
xor
add
pop
mov
lods
add
aaa
jg
sub
mov
ja
mov
mov
dec
icebp
dec
daa
pusha
xor
test
fadd
cli
iret
xchg
add
cmps
(bad)
mov
add
pop
fst
scas
pop
add
scas
mov
jmp
xor
dec
add
and
mov
aaa
icebp
xor
fiadd
dec
add
iret
add
cs
add
fdiv
add
cmp
add
add
pop
enter
add
fstp
jae
adc
out
add
daa
fwait
mov
aaa
(bad)
retf
aad
jbe
loop
ins
add
add
add
rcr
or
stos
cdq
js
je
ja
jecxz
call
js
test
cmp
pop
movs
scas
ds
div
(bad)
xchg
pop
add
rcr
xor
adc
xlat
lods
jns
inc
prefetchnta
and
and
push
sbb
ret
mov
test
push
fmul
add
xor
push
data16
add
or
add
add
aam
pop
cmc
div
cmp
mov
add
push
add
pusha
leave
and
dec
push
mov
jp
rol
loop
test
push
ss
repnz
icebp
add
adc
push
es
pop
cli
in
add
outs
outs
int3
adc
in
sub
add
add
jae
mov
icebp
push
add
dec
test
push
ja
xchg
cmp
pop
xor
add
xor
xor
inc
mov
fbld
scas
cdq
xchg
fiadd
sbb
add
and
ins
xor
fidiv
inc
cmp
add
add
out
jae
leave
ficom
pop
xor
push
and
fsubr
in
xchg
xchg
sub
sub
xchg
cmp
cmp
push
outs
ficomp
add
jnp
xor
icebp
daa
pop
jb
jmp
loopne
pop
das
add
add
hlt
retf
aad
scas
cld
dec
leave
and
or
jns
movs
outs
push
add
out
mov
out
push
cmp
lea
add
sbb
push
into
jmp
movs
in
add
(bad)
mov
ins
push
sub
push
mov
data16
jo
add
push
scas
rcl
ja
adc
add
sub
pop
or
xor
out
add
out
call
psllq
call
add
xchg
into
fnstcw
std
jl
jns
addr16
xchg
int3
add
ds
add
loopne
popa
mov
adc
sub
into
add
add
pop
js
sbb
imul
shr
cmp
add
push
add
imul
ds
xchg
retf
add
scas
pop
in
fwait
push
add
sub
adc
add
aas
xlat
loop
add
jmp
icebp
xchg
push
test
dec
add
mov
int3
bound
test
aas
add
add
aaa
repnz
dec
popa
gs
add
jecxz
scas
jg
add
cdq
ror
add
add
jae
das
xor
xlat
loop
retf
sbb
mov
sbb
sub
or
das
call
pop
or
xor
push
outs
mov
jnp
or
add
mov
je
inc
or
stc
add
adc
enter
push
into
jo
into
push
add
xor
inc
(bad)
cmp
popf
int
ret
popa
popf
mov
inc
push
add
add
add
jg
cmps
std
cmp
rcl
inc
sbb
out
bound
add
cmp
fiadd
xchg
mov
or
ret
sahf
mov
fnstcw
lods
mov
add
push
test
mov
adc
xchg
cmp
fsub
push
int
es
mov
aaa
das
add
pop
retf
add
and
jecxz
cmp
shl
push
pop
fild
dec
xchg
lea
push
cmp
or
popa
mov
sub
fidivr
add
push
pop
loope
or
adc
hlt
sub
add
add
add
jne
pop
push
out
call
and
sub
mov
sub
fiadd
stos
pop
add
sbb
add
push
mov
add
jno
pop
mov
add
aad
add
inc
ret
push
or
pop
add
sbb
sbb
and
jp
or
add
add
adc
(bad)
xor
inc
pop
mov
lahf
dec
dec
add
into
loope
add
pop
pop
adc
(bad)
push
add
lock
test
dec
add
xlat
add
mov
jg
fadd
add
add
xchg
or
repnz
cmp
and
sbb
outs
mov
add
dec
clc
sbb
call
stc
add
jge
xchg
jecxz
addr16
aad
pop
fsub
add
fcom
xor
sti
and
add
cmp
cmps
hlt
or
sbb
add
inc
sbb
add
(bad)
push
aad
movs
xor
push
pop
or
add
adc
add
jmp
nop
lods
cmp
into
add
add
xor
mov
adc
ja
sbb
add
fwait
pop
add
add
call
aaa
add
cmp
sbb
xor
leave
popf
or
sahf
iret
add
or
or
xor
mov
xchg
mov
add
out
(bad)
lock
pop
or
add
add
xor
outs
xor
clc
lods
fist
daa
repnz
cld
mov
ficomp
mov
mov
xlat
push
(bad)
sti
shl
fwait
loope
add
sbb
pop
add
sti
jo
ins
mov
dec
mov
retf
out
pop
daa
add
aad
add
xchg
xlat
cmps
add
mov
xchg
add
xor
mov
int3
test
add
add
fld
aaa
add
fcomi
cdq
int
dec
jmp
scas
retf
push
fistp
jecxz
push
and
xor
add
fnstsw
inc
adc
add
dec
dec
imul
cmp
mov
(bad)
js
and
fistp
(bad)
in
mov
add
jp
jb
xor
jnp
sar
rol
fwait
rcl
jbe
ret
add
push
add
xchg
xchg
retf
out
out
dec
push
aaa
add
arpl
xchg
aaa
inc
aas
mov
push
stc
add
adc
cwde
jnp
loope
dec
les
cmp
rol
prefetch
add
add
add
fbld
cmc
test
xor
pop
cmc
dec
cmp
shl
fs
mov
outs
push
scas
or
pop
add
(bad)
int3
add
icebp
mov
add
lock
mov
icebp
jecxz
stos
jb
push
sti
xchg
jnp
pop
mov
add
push
fxch
movs
push
sbb
(bad)
lock
inc
push
dec
jmp
imul
cmp
add
rol
sbb
aam
imul
push
mov
push
cli
mov
dec
cld
jbe
mov
add
cmp
shr
dec
pop
ins
ins
gs
mov
adc
push
push
jo
test
arpl
add
jge
js
movs
sbb
or
inc
and
add
pop
in
clc
and
dec
cdq
test
sbb
imul
push
mov
cmp
dec
or
ds
movs
jbe
stc
pushf
add
add
pop
mov
jmp
(bad)
std
xchg
jae
pop
mov
jmp
pop
(bad)
into
mov
mov
ret
mov
sub
aaa
rol
cmp
sbb
out
es
add
mov
add
cmp
add
nop
pushf
inc
pop
inc
add
pusha
ret
vmovntps
add
pop
sbb
add
loope
inc
in
repz
ficomp
add
aam
scas
arpl
jmp
cmp
dec
add
loopne
cmp
std
lods
and
add
scas
jg
repz
add
pop
dec
in
mov
out
pushf
test
add
add
sbb
inc
popf
or
aaa
lods
pushf
mov
(bad)
aaa
cmps
push
mov
push
lods
aad
loopne
add
out
mov
sub
out
daa
ja
add
retf
mov
mov
add
mov
add
add
jle
sub
cmc
jae
cmp
iret
xchg
call
mov
adc
add
or
mov
scas
pusha
jp
add
add
push
jnp
aaa
add
add
add
add
dec
retf
push
jae
adc
lahf
cmp
cmc
mov
mov
and
mov
lods
xchg
int3
in
xlat
push
stos
inc
imul
mov
xor
or
fs
add
inc
call
add
add
movs
push
jbe
loope
mov
sti
rcl
mov
call
(bad)
cmps
(bad)
jecxz
add
lahf
add
mov
dec
add
mov
dec
mov
add
stos
jg
sbb
inc
add
dec
cmps
leave
out
add
mov
out
sub
adc
out
add
xchg
pop
aam
aaa
add
push
sti
ins
push
xchg
pop
inc
and
jo
lock
mov
and
jmp
aas
and
jl
add
test
cmp
add
add
nop
sbb
in
mov
cmp
inc
add
repz
rcl
and
adc
mov
mov
popa
loop
add
add
dec
pushf
mov
stc
(bad)
sbb
movs
retf
es
inc
imul
inc
out
mov
jae
movs
into
jns
pop
lods
add
addr16
add
push
mov
call
xchg
scas
out
jmp
and
icebp
inc
add
fsubrp
cmp
add
das
pop
and
aas
mov
in
pop
push
enter
test
imul
add
inc
fistp
xor
add
pop
push
mov
inc
into
call
(bad)
sub
adc
sbb
dec
push
repnz
add
pop
(bad)
out
(bad)
leave
and
retf
add
add
mov
cmp
cmps
mov
outs
mov
sub
cs
pop
aam
dec
add
add
xchg
add
sbb
fld
jmp
xchg
add
jle
pop
xchg
out
jmp
cdq
jmp
add
or
add
cs
call
push
or
fucom
jge
jo
mov
jno
repz
or
add
adc
stos
adc
pop
mov
scas
scas
push
adc
dec
lods
cmp
add
add
mov
mov
xchg
sub
inc
scas
pushf
(bad)
fdivr
iret
jmp
aaa
movs
push
cmp
dec
cmc
inc
sbb
adc
or
xchg
mov
mov
mov
xchg
xor
add
or
stc
add
jecxz
mov
out
cmp
ficom
xchg
bound
pop
lods
add
fwait
enter
pusha
sbb
scas
pushf
push
mov
pop
test
xchg
push
(bad)
jb
jg
add
sub
add
add
lods
call
jno
pop
je
fcom
in
rcl
xchg
dec
add
xor
dec
fadd
mov
js
mov
aad
jbe
rol
mov
adc
jne
scas
fsub
mov
xchg
adc
and
out
aas
push
pop
add
add
add
addr16
cmp
out
jg
(bad)
fcomp
(bad)
loope
jecxz
pusha
inc
xchg
pop
add
jmp
stos
fistp
jmp
mov
jns
add
lds
nop
add
xor
aam
mov
pop
imul
cmp
add
scas
sbb
call
add
jg
lods
mov
xchg
movs
xor
mov
add
add
retf
add
ins
add
add
sbb
xor
mov
mov
imul
add
out
add
mov
sbb
movs
je
mov
sbb
jmp
add
add
or
or
ja
(bad)
ret
shl
fcmove
sbb
call
int
cmp
add
sti
enter
and
xchg
add
bound
mov
pop
addr16
inc
leave
push
mov
sub
add
add
add
add
inc
sar
adc
xor
or
and
add
aad
pop
in
leave
pusha
jmp
imul
add
inc
fild
add
outs
dec
movs
ret
test
mov
repz
add
stos
adc
cmp
push
adc
mov
sub
mov
les
add
adc
jo
add
mov
lods
inc
mov
(bad)
ret
scas
add
mov
add
mov
mov
pop
inc
xor
adc
cmps
arpl
push
inc
shr
push
add
ins
fisttp
add
dec
aas
jmp
add
test
or
test
mov
pop
sub
int
jae
inc
loop
xchg
add
lock
add
xchg
cmp
sbb
cmp
and
daa
ja
push
xor
(bad)
sbb
jecxz
dec
std
jb
jle
scas
add
mov
add
add
cdq
leave
dec
inc
or
imul
icebp
cmp
daa
add
push
or
add
add
push
js
push
xchg
(bad)
imul
mov
into
mov
and
fld
add
shr
daa
mov
sahf
adc
add
sahf
das
loope
jmp
or
pop
add
add
shl
pop
lahf
fdiv
mov
ret
loope
rol
dec
pushf
add
add
add
push
add
or
mov
nop
pusha
jp
lods
mov
fist
cld
mov
outs
cmp
pop
adc
add
xchg
or
adc
cmp
(bad)
pop
add
and
cmp
add
std
add
hlt
jns
sar
jo
mov
xor
ins
add
(bad)
xor
adc
adc
pop
mov
jo
pushf
enter
add
fistp
sbb
out
int
jnp
add
fld
pop
xchg
add
addr16
add
or
add
xchg
out
pop
push
dec
stos
scas
or
out
dec
cmps
cmc
loop
add
add
pop
(bad)
sub
icebp
mov
pop
jmp
lods
jbe
cdq
clc
add
cwde
mov
stc
in
push
cmp
ja
pop
xchg
inc
push
jmp
add
add
cwde
adc
mov
mov
mov
add
mov
xchg
dec
sbb
sub
scas
jne
pop
cmc
xor
inc
and
fimul
adc
dec
adc
add
test
add
(bad)
and
add
popa
das
add
add
push
mov
retf
add
add
fbstp
out
out
cmp
add
mov
add
js
out
add
daa
popa
jnp
cmp
add
add
sub
repz
jmp
mov
jb
mov
add
retf
inc
dec
sbb
xor
and
call
mov
add
add
nop
adc
and
xchg
inc
dec
aad
jg
stc
ds
aad
xchg
cmps
retf
cmp
cdq
xchg
xchg
add
add
add
inc
mov
xchg
cwde
and
add
or
jecxz
test
sti
add
add
icebp
dec
sti
popa
stos
(bad)
rol
lds
add
sbb
add
loop
mov
push
add
scas
jmp
add
test
xchg
xchg
xchg
adc
add
in
cmc
ror
cmp
inc
aam
jp
jne
jge
lock
call
push
daa
mov
xchg
test
push
or
imul
cmp
pop
inc
mov
mov
repz
mov
add
inc
add
inc
add
mov
mov
enter
add
sbb
sub
mov
add
ins
iret
clc
popf
sub
mov
retf
cmc
(bad)
xlat
mov
cmc
jae
mov
int
add
(bad)
and
sub
cmovns
mov
jne
add
jae
cli
stos
leave
pop
jno
jmp
add
add
arpl
jge
das
retf
jecxz
pop
xchg
sub
mov
pop
dec
ret
repnz
add
adc
mov
fisttp
add
jae
add
les
je
aad
sub
add
or
mov
std
and
add
jmp
push
push
lahf
jmp
out
fs
jecxz
add
mov
hlt
or
ss
(bad)
cmps
popa
pushf
add
jnp
xor
or
cld
fst
and
test
add
sbb
add
(bad)
sub
imul
mov
xlat
add
add
bound
mov
(bad)
add
mov
mov
das
add
add
(bad)
sub
adc
jb
cwde
fdiv
ror
add
mov
add
cmp
sti
and
jbe
inc
inc
loopne
add
add
lods
int
sbb
test
add
ret
cmp
pop
push
movs
add
push
addr16
out
mov
mov
xor
add
add
dec
lods
(bad)
fucomp
xor
gs
xor
stos
sti
push
adc
retf
dec
add
jb
dec
ins
nop
neg
add
add
dec
xchg
pop
jmp
pushf
rcr
jns
jmp
mov
sub
mov
sub
ror
sbb
js
add
add
xchg
stos
adc
pop
mov
cmp
out
lahf
jmp
paddb
in
nop
push
and
ins
xlat
push
add
add
out
jecxz
push
and
call
jnp
mov
and
call
add
ins
int3
or
movs
add
sub
leave
jl
mov
or
or
xchg
leave
jmp
ret
icebp
add
xor
add
add
dec
jbe
mov
data16
mov
add
sbb
retf
mov
add
or
pop
mov
scas
jb
add
aam
mov
add
mov
add
je
mov
sbb
jmp
test
add
and
dec
popf
add
add
adc
sbb
pop
call
inc
add
loope
lahf
das
les
adc
fiadd
xchg
stc
jp
pop
pop
int3
dec
add
sbb
test
js
inc
add
mov
sub
test
mov
pop
cwde
xchg
add
(bad)
dec
push
movs
add
enter
xchg
mov
repnz
add
in
cmps
out
ja
nop
jno
test
add
add
sbb
xchg
mov
sbb
mov
das
adc
dec
ss
add
add
add
retf
push
mov
fild
(bad)
jnp
lock
push
inc
lahf
hlt
jmp
push
out
add
add
xchg
daa
fwait
push
arpl
sub
ret
out
and
xlat
cmp
add
jb
call
add
add
mov
xchg
or
push
movs
pushf
or
je
add
stos
ins
mov
out
mov
jp
das
add
add
and
inc
addr16
mov
hlt
xlat
and
sub
(bad)
add
add
add
jmp
cmp
daa
sub
push
push
adc
pop
push
adc
stos
dec
add
fadd
or
fistp
add
mov
add
pusha
out
mov
out
call
lea
(bad)
pop
jns
sti
std
push
inc
cmp
add
out
jp
pop
xlat
mov
add
fst
shr
sub
out
jb
xchg
les
loop
mov
sub
(bad)
hlt
jmp
(bad)
psrlw
lods
mov
mov
mul
or
jle
(bad)
and
out
push
add
retf
jns
add
or
push
sub
sbb
dec
sub
ins
push
mov
(bad)
add
(bad)
ja
pushf
fiadd
sub
push
test
add
lods
in
ret
push
inc
cmp
aas
push
add
lock
into
inc
push
into
jmp
(bad)
add
cdq
lock
inc
dec
out
bound
aad
outs
dec
xor
into
add
sbb
outs
sub
fwait
cwde
imul
data16
or
cmps
sub
add
push
push
fidiv
pushf
imul
jg
inc
call
dec
jge
push
aad
call
ja
data16
or
pop
add
pop
in
xor
lahf
mov
cld
jnp
inc
sbb
add
xchg
cmp
fld
movs
lds
xchg
jg
dec
outs
mov
add
mov
(bad)
jnp
jno
add
dec
mov
add
sti
add
call
mov
ret
adc
int
and
sbb
add
mov
sub
lds
call
lahf
add
xor
cli
movs
or
aam
pop
hlt
add
daa
fisubr
pop
fdiv
add
cmp
shl
pop
mov
lds
sub
cmp
pop
ret
add
pop
adc
ficom
push
add
test
dec
imul
add
cmc
mov
inc
and
retf
jmp
and
add
outs
xor
std
mov
dec
(bad)
pop
add
xor
mov
fcom
das
mov
imul
push
add
mov
lds
fucomi
add
sbb
jp
shl
or
ds
mov
in
add
add
add
xchg
sbb
shl
mov
and
mov
add
add
add
cmps
add
cmps
pop
ins
and
inc
ins
mov
leave
outs
scas
sub
fcmovnb
stos
add
add
addr16
mov
sbb
mov
sbb
jnp
or
repnz
imul
and
scas
in
add
push
cdq
add
pop
mov
sub
aaa
xor
jle
fwait
btc
mov
xchg
arpl
fdiv
sub
add
mov
inc
xor
or
adc
pop
in
lds
jns
rol
push
das
(bad)
loop
mov
ins
add
sbb
add
in
dec
test
or
lock
outs
sar
ins
test
test
or
rcr
add
pop
loop
lahf
push
add
clc
push
arpl
pusha
outs
enter
adc
add
jecxz
pop
sbb
adc
adc
add
mov
cld
mov
sbb
xchg
adc
push
mov
pop
add
add
add
ficomp
fbld
test
add
push
xchg
push
aam
adc
movs
jno
mov
cmps
aas
addr16
lds
out
in
lds
add
scas
pop
and
mov
add
loope
addr16
add
jne
inc
mov
xchg
mov
xor
jmp
loop
pop
add
add
sub
jmp
leave
dec
lods
mov
int3
stos
ins
fwait
cmp
xlat
push
cmc
mov
out
add
add
rol
daa
xchg
add
mov
add
add
add
les
mov
pop
in
and
cli
test
mov
sar
(bad)
cmp
sub
and
xchg
shr
ror
or
add
add
pop
pushf
jge
xchg
loopne
sbb
mov
mov
in
add
mov
lea
rcl
aam
pop
add
add
sti
push
sbb
add
inc
loopne
pop
test
out
in
add
outs
sbb
jecxz
add
fisttp
jae
cmp
add
add
add
sbb
fnstenv
jecxz
sbb
pop
test
adc
xchg
icebp
and
ins
add
test
add
xchg
xor
xchg
mov
std
outs
jbe
imul
add
dec
ret
addr16
cmp
or
addr16
stos
xchg
add
cld
mov
(bad)
jmp
push
daa
or
aam
fadd
add
sub
call
add
xor
add
fs
imul
mov
mov
enter
add
add
aaa
in
das
std
test
unpcklps
and
adc
shl
aaa
mov
dec
mov
loope
test
cli
ret
test
inc
pop
fimul
lahf
add
mov
repz
ret
nop
aaa
repnz
add
lods
or
sub
add
push
and
mov
test
iret
ins
test
fst
scas
add
fld
add
xor
add
add
arpl
mov
retf
lahf
mov
dec
ds
xchg
add
add
out
push
xchg
outs
jb
test
bound
test
aad
pop
mov
cmps
mov
sahf
shl
ds
add
adc
add
jmp
mov
add
or
jmp
mov
jmp
sbb
clc
xor
or
cmps
addr16
add
push
sub
mov
stos
adc
add
xchg
push
enter
or
dec
mov
add
outs
call
aas
scas
mov
add
bound
add
lods
xor
sahf
lock
ss
stos
ss
add
(bad)
lods
icebp
pop
movs
or
scas
or
add
mov
fs
adc
sub
add
dec
mov
pop
mov
xchg
add
pop
mov
add
dec
loope
in
adc
sar
add
push
dec
pop
lea
cs
add
icebp
out
mov
add
add
add
cmps
pop
add
jmp
es
repnz
sub
or
fnstcw
xchg
sub
aad
mov
les
add
mov
repz
loopne
or
je
hlt
das
sub
scas
add
and
add
mov
push
cmc
lock
cmps
dec
ins
in
jmp
sbb
mov
mov
mov
sbb
mov
hlt
cli
and
adc
fiadd
add
and
add
add
add
shr
or
sbb
in
scas
call
(bad)
xchg
ins
mov
add
pop
ins
adc
sbb
add
fadd
pop
xor
pushf
pop
ins
icebp
add
das
add
add
add
jl
pop
mov
push
push
inc
enter
cmps
jno
ror
in
sub
aad
sbb
stos
sbb
add
cmps
jmp
mov
pop
dec
data16
js
dec
inc
arpl
add
or
aas
ret
add
jmp
add
add
add
mov
in
les
mov
mov
je
std
and
and
retf
push
xor
push
sbb
jno
rcr
or
mov
mov
xchg
inc
aas
retf
popf
loopne
adc
mov
mov
add
lock
shl
add
xchg
lock
test
je
int3
arpl
cmp
sbb
add
and
add
bound
mov
setne
add
add
and
sbb
ret
xlat
aaa
lods
test
add
mov
sub
les
inc
add
cmps
xchg
ins
add
add
test
cs
in
outs
test
mov
dec
mov
add
add
push
test
sub
xor
xor
pop
mov
pop
add
add
add
and
add
int
lahf
cmp
mov
xchg
enter
push
aam
add
pop
mov
mov
push
rol
add
retf
icebp
mov
clc
add
jo
add
mov
add
pop
cwde
add
adc
cli
sti
lock
add
add
jns
idiv
mov
jbe
adc
sub
sbb
fsub
movs
call
mov
sbb
add
push
jmp
inc
in
sbb
cmp
push
mov
push
ret
add
popa
cmp
mov
xor
pop
sar
cdq
aas
mov
add
add
out
fs
fist
mov
mov
xchg
adc
(bad)
ret
iret
in
add
cwde
add
add
loopne
daa
js
fistp
jb
cdq
cmp
aas
lods
arpl
sbb
add
lods
jmp
add
add
dec
out
daa
add
sub
xor
lods
in
xchg
and
add
mov
mov
xor
mov
sub
sbb
fnstcw
cld
mov
dec
iret
cmp
leave
lahf
cmc
ror
xlat
fldenv
jecxz
sbb
inc
sbb
aas
add
cmova
test
add
add
xchg
sub
add
mov
mov
pop
scas
pop
lahf
fbstp
lock
mov
retf
adc
add
lahf
out
dec
fs
dec
cli
shr
sbb
push
add
jl
hlt
push
ror
scas
fisub
adc
add
add
ja
fsubr
xor
loope
inc
xor
dec
mov
imul
mov
ins
xlat
add
gs
mov
pop
loope
add
aaa
push
rol
push
push
add
bound
enter
cmp
xchg
pop
inc
test
add
fistp
out
sub
mov
sbb
mov
(bad)
fcomp
push
gs
sbb
mov
nop
retw
cmp
add
add
jno
aam
rcr
adc
jbe
add
pop
inc
sub
xor
add
add
push
shl
or
scas
stos
jmp
ffreep
add
out
cmp
jne
sbb
movs
add
sbb
retf
mov
cmps
test
xor
add
rol
add
int3
sbb
inc
xchg
xchg
or
fwait
dec
(bad)
stos
test
sar
sbb
xchg
pop
dec
imul
jnp
pop
pop
mov
sbb
jno
xchg
adc
(bad)
imul
adc
jl
aad
mov
push
in
aas
and
lods
add
jns
mov
pop
sti
int
test
lods
pop
sbb
jge
add
add
adc
(bad)
addr16
shl
(bad)
js
(bad)
push
mov
sti
ins
pop
inc
pushf
fwait
lea
out
pop
add
add
fwait
jg
add
push
push
inc
or
ret
mov
add
movs
add
dec
cmp
cmp
ins
push
and
cdq
add
add
add
int
imul
stc
jmp
sar
cmp
(bad)
mov
cmp
pop
bound
add
out
mov
push
into
fs
fcomp
ds
sbb
jns
loop
stc
ins
and
mov
jg
test
stos
add
add
add
jae
and
pop
fisub
and
add
arpl
or
adc
adc
jmp
push
clc
shr
mov
add
add
mov
jnp
and
rcl
loop
xchg
xchg
pop
ins
mov
add
es
cmp
dec
jp
add
dec
add
sub
jle
test
test
punpckhbw
add
add
add
test
dec
dec
mov
jne
add
cdq
xlat
outs
add
add
popa
or
adc
dec
and
mov
mov
cmp
frstor
jo
ja
cld
inc
pop
mov
psubd
add
jge
push
fs
retf
mov
add
lahf
xlat
(bad)
in
fucomi
push
sub
add
sbb
xor
adc
shl
push
pop
mov
neg
add
frstor
cmp
xchg
cld
adc
add
add
or
xchg
jns
add
xchg
mov
xor
into
add
xchg
movs
cmp
jp
add
sbb
mov
add
sub
inc
sbb
div
jge
or
leave
pushf
add
icebp
mov
in
inc
inc
aas
sbb
add
sti
addr16
sub
aam
mov
fisttp
fwait
fwait
push
(bad)
or
add
and
aaa
dec
clc
xor
sbb
or
add
push
cmps
inc
aad
(bad)
(bad)
enter
jae
(bad)
dec
add
xor
mov
add
les
fldcw
lds
mov
xor
jne
add
fiadd
add
xor
lahf
iret
not
sbb
mov
mov
and
pushf
in
sub
fwait
mov
sahf
add
add
add
(bad)
int
sbb
pop
mov
pop
addr16
ins
mov
bound
popa
dec
cmps
add
add
adc
add
push
mov
jae
fimul
sbb
fwait
mov
adc
add
mov
add
xchg
aaa
jmp
sbb
add
add
lods
xchg
dec
mov
mov
xstore-rng
cmps
add
jg
mov
jb
gs
adc
xchg
popf
add
adc
push
add
mov
pop
add
add
and
mov
movs
mov
jle
popa
cmp
fsubrp
bound
sub
into
mov
add
jecxz
add
add
pop
pop
das
xlat
mov
add
mov
ret
inc
rcl
sbb
xchg
test
xchg
add
xchg
and
cmp
dec
ins
std
icebp
or
dec
mov
mov
mov
data16
lods
loope
shl
push
pop
call
add
mov
retf
sbb
loopne
movs
sub
lods
add
sub
sahf
pop
adc
in
dec
push
add
xor
inc
cs
add
sub
adc
add
shr
inc
mov
sbb
fs
mov
add
and
mov
add
cld
push
mov
mov
add
add
sbb
cmp
call
cmc
add
add
add
push
cmp
adc
push
mov
mov
dec
jecxz
movs
pop
call
jmp
xchg
sbb
mov
sbb
cmp
add
popa
push
stos
or
xor
sbb
addr16
xor
fst
pop
cs
xchg
jle
dec
mov
dec
test
jp
(bad)
int3
mov
in
add
cmc
inc
or
mov
mov
cdq
push
push
add
repnz
test
sbb
vmread
pop
pop
rcl
xchg
add
sub
push
and
add
add
pushf
popf
popf
out
out
ret
dec
ret
lea
push
jb
add
mov
addr16
add
imul
pop
add
add
add
jno
add
and
sar
add
arpl
sti
int3
add
add
add
nop
retf
inc
(bad)
lds
nop
push
pop
daa
sub
and
cmp
xor
cmps
cmp
push
dec
adc
add
add
adc
xchg
sbb
jmp
ficom
add
xor
call
add
imul
movs
je
(bad)
dec
push
movs
(bad)
add
shr
sbb
push
cli
or
adc
add
(bad)
jae
mov
add
mov
add
sub
jno
test
pop
int3
jb
sub
scas
(bad)
xlat
ins
push
sub
cdq
adc
movs
xor
dec
lock
dec
add
add
dec
pop
icebp
mov
jae
test
in
xor
add
js
not
int3
pop
cmp
add
cdq
add
mov
xchg
sar
inc
xor
add
xor
rcr
add
add
dec
cld
sbb
cmp
dec
sub
add
addr16
xchg
cdq
dec
adc
(bad)
mov
push
add
cmp
scas
bound
rol
adc
mov
push
or
jo
xadd
sbb
iret
inc
push
icebp
retf
xchg
inc
mov
mov
cmp
add
(bad)
mov
inc
pop
push
mov
adc
retf
xlat
cld
js
stos
sub
add
punpckhwd
add
out
pop
add
add
sbb
inc
add
stc
ins
sub
iret
je
sub
add
loopne
and
cmps
int
scas
add
pop
add
je
dec
add
sbb
xchg
ss
adc
mov
add
leave
pop
mov
add
pop
in
out
aaa
or
enter
jmp
sar
inc
and
add
das
fimul
repz
sub
mov
add
test
popa
(bad)
mov
xchg
(bad)
sub
call
add
mov
jp
xchg
push
arpl
lods
rol
or
jmp
mov
mov
jl
mov
or
int
add
mov
add
(bad)
sahf
push
cmp
(bad)
pusha
jge
sub
repz
adc
xor
loop
add
xor
adc
cld
sbb
jp
pop
(bad)
rol
add
add
push
movs
aam
sub
(bad)
jae
cmps
push
sbb
fsubp
inc
jbe
mov
sub
add
add
mov
in
xchg
fldcw
sub
pop
jo
pop
popf
test
push
cdq
test
out
xchg
add
fnstenv
loopne
retf
inc
loopne
inc
mov
leave
mov
data16
mov
dec
add
lds
pop
dec
pop
jg
add
jmp
jne
or
cmc
int
inc
add
add
daa
xor
lahf
jno
jge
call
and
out
sub
popf
mov
imul
out
repnz
adc
add
or
fild
add
add
and
test
add
add
jne
aaa
add
xor
fisubr
jb
fs
fild
pop
pop
add
sub
lahf
ja
in
add
arpl
jnp
iret
push
push
fistp
push
add
test
pop
add
and
add
sbb
movs
sbb
mov
add
retf
push
add
(bad)
add
and
dec
mov
add
add
or
xchg
js
jl
xlat
hlt
mov
mov
mov
mov
(bad)
rol
cmp
pop
jle
or
jnp
ds
rcl
ins
add
mov
jp
imul
add
cmp
xchg
and
dec
adc
ja
add
mov
mov
lahf
sub
sub
movs
sti
lds
xor
xlat
mov
add
add
add
add
sbb
pop
push
retf
add
je
pop
mov
inc
out
sub
sbb
mov
jb
pop
or
stc
sub
idiv
or
adc
or
iret
add
push
add
sub
inc
pop
dec
xor
xchg
je
push
push
jo
add
jle
xchg
test
jb
cdq
add
pop
fwait
sbb
mov
dec
lods
lods
jnp
add
or
inc
inc
cmps
rol
fiadd
sbb
add
dec
repnz
adc
ins
nop
aam
frstor
or
popa
imul
loop
pop
std
retf
dec
ror
mov
mov
scas
add
enter
add
push
js
dec
fwait
loope
adc
cmc
loopne
pop
(bad)
dec
push
add
lahf
mov
shl
add
and
movs
repz
ret
jp
pushf
mov
(bad)
fisubr
mov
inc
es
adc
add
jno
mov
in
hlt
add
das
mov
push
add
add
sub
movzx
pushf
mov
and
jmp
retf
add
das
in
loop
mov
push
adc
shr
test
outs
ror
jmp
jb
ret
push
nop
and
(bad)
cmc
lods
and
pop
add
add
xor
(bad)
(bad)
fadd
inc
hlt
mov
inc
adc
imul
xor
call
call
sub
das
(bad)
jb
add
loopne
data16
int
ror
add
add
add
sbb
mov
cmps
mov
add
mul
adc
mov
inc
add
xor
jmp
ror
add
jae
mov
add
xchg
inc
push
movs
sbb
hlt
pop
sub
add
imul
push
push
lods
add
sbb
add
jns
out
add
addr16
push
sub
sahf
add
jae
push
push
cli
fsubr
add
fsubr
add
add
popf
mov
jp
pushaw
(bad)
lock
cmp
add
jp
add
pop
push
jg
adc
mov
add
and
(bad)
stos
fld
add
and
leave
xor
add
bound
out
clc
hlt
jne
xor
fldcw
or
sub
sub
mov
mov
retf
cmps
mov
add
add
add
pop
rcl
bound
push
cmp
pop
xor
cmp
outs
enter
out
push
lods
daa
sub
ja
test
sub
fwait
mov
lds
jmp
add
lods
aas
jp
lahf
fldcw
jnp
mov
add
neg
cmp
scas
dec
add
mov
fld
loope
ja
mov
add
cmp
movs
clc
sahf
add
push
fdivr
mov
add
jns
jecxz
je
je
mov
push
and
pop
push
std
lock
ret
inc
dec
add
mov
out
icebp
(bad)
shr
add
sub
jo
xchg
add
int3
sbb
pushf
add
jns
add
jecxz
ins
in
adc
xlat
add
pushf
popf
loopne
hlt
lds
mov
mov
(bad)
cwde
mov
add
mov
out
pop
mov
or
add
inc
das
(bad)
imul
sbb
add
fidivr
ins
mov
jbe
jge
xchg
or
fnstenv
test
add
add
aas
cmp
push
arpl
jp
pop
in
sbb
adc
xor
add
add
add
cmps
loop
stc
sub
popf
sbb
aad
rol
ret
and
jge
int
sub
and
imul
add
inc
jg
rcr
mov
add
xchg
pusha
add
leave
dec
call
ins
je
addr16
imul
cmps
sub
or
jae
enter
add
jno
retf
mov
add
add
xadd
rcr
xchg
loopne
add
xor
sub
mov
add
add
jnp
lock
add
arpl
imul
nop
xchg
adc
jne
and
jg
gs
jae
ins
shl
loope
fld
leave
add
out
add
dec
xchg
sub
sti
cdq
add
bound
aaa
aaa
xor
or
add
mov
fstp
idiv
jns
fcmovb
add
dec
retf
cmc
fwait
js
cwde
retf
add
add
mov
sbb
popf
xlat
pop
pop
leave
test
sbb
out
add
call
ins
std
add
sbb
pop
ins
xchg
gs
jg
push
xor
jnp
test
out
add
fstp
xchg
add
add
test
add
inc
push
fs
ret
arpl
sahf
pusha
push
cwde
adc
fsub
add
cmp
or
call
adc
sub
add
inc
neg
add
push
xlat
scas
pop
xchg
cs
dec
xchg
mov
shl
jb
ds
(bad)
fiadd
add
movs
sbb
add
mov
mov
xchg
(bad)
jns
add
mov
cmps
mov
js
mov
jp
rcr
add
add
ss
outs
pop
aas
int3
lock
sbb
push
and
cmp
outs
int
mov
clc
jne
pop
mov
arpl
add
add
xor
imul
movs
jle
fisttp
pushf
sub
cli
mov
mov
outs
or
inc
mov
adc
dec
xchg
add
pushf
or
pop
sbb
mov
imul
mov
cs
aam
pop
inc
push
mov
rcr
mov
add
add
bound
in
clc
movs
jb
jp
mov
xchg
cmp
add
dec
int3
cwde
cmp
dec
add
call
xor
shr
add
clc
add
pop
repz
inc
mov
fnstenv
inc
or
add
ret
fwait
jae
cmp
outs
jmp
cmp
sub
cld
(bad)
inc
aaa
stos
push
scas
sar
dec
add
ds
test
mov
aas
jnp
arpl
in
xchg
movs
xor
gs
jbe
mov
ror
push
int
or
jo
mov
add
add
cmp
pop
shl
mov
and
fcom
jae
in
adc
cmps
mov
jge
ret
add
add
cmp
in
mov
xchg
mov
sti
ins
dec
sub
xor
mov
sub
sub
adc
dec
xchg
outs
add
pop
jnp
(bad)
int3
add
adc
(bad)
add
dec
add
xor
das
jnp
sub
cmps
fiadd
add
psubq
addr16
mov
mov
sub
js
loopne
mov
sti
adc
mov
fisttp
(bad)
xchg
jbe
shr
(bad)
dec
es
lods
inc
fwait
adc
adc
jbe
int3
push
std
sub
inc
imul
lods
xor
xlat
pushf
mov
jb
pop
js
add
(bad)
out
add
dec
out
test
xchg
add
enter
xchg
cmc
aaa
inc
push
ja
cs
add
cmp
pop
add
movs
and
add
add
inc
dec
lds
push
sub
xchg
add
in
retf
add
cmps
cmps
(bad)
jg
push
pushf
cmp
add
add
nop
and
gs
pop
xor
add
fild
test
mov
rcr
add
mov
cld
fidivr
scas
stc
imul
and
pusha
jo
mov
cmp
adc
jne
add
xor
shl
les
push
push
mov
jecxz
sub
rcl
mov
sub
ret
add
sbb
loopne
sub
add
(bad)
test
int3
sbb
pop
jp
test
add
add
in
sbb
jmp
(bad)
and
add
hlt
or
xor
xchg
add
into
cmps
hlt
pushf
jmp
call
add
mov
dec
mov
pop
fisub
xchg
(bad)
(bad)
nop
mov
push
(bad)
mov
shl
mov
and
nop
loop
dec
jb
loop
fcomp
add
pushf
mov
retf
pop
jle
ds
ins
cmps
add
cld
and
int3
xor
loop
sahf
add
mul
cmps
lock
fisubr
cmps
add
push
mov
add
dec
jl
out
push
outs
xor
mov
loopne
lods
add
ficomp
cli
add
data16
add
add
dec
add
clc
fcomp
cld
pop
outs
cmp
fsub
cli
add
add
shl
mov
loopne
mov
add
retf
shl
add
jb
xchg
ins
stos
stos
stos
inc
scas
loopne
into
inc
add
add
fiadd
not
stos
xchg
xchg
pop
fdiv
push
push
imul
add
mov
call
add
call
add
jmp
adc
add
add
add
adc
cmp
das
push
stos
fisttp
ins
add
ins
cs
test
mov
add
add
cli
push
loope
test
movs
and
mov
retf
cwde
jns
mov
xchg
test
mov
retf
add
nop
or
sub
dec
or
rol
add
xor
jo
and
fsub
es
into
sub
fcmovb
pop
not
push
or
test
xor
add
push
push
fisttp
inc
adc
scas
sub
xor
mov
add
xchg
clc
mov
add
add
mov
fsub
jle
xchg
ror
cmp
test
stos
or
rol
xor
jb
xor
sbb
cs
lock
in
and
jb
add
cmp
push
imul
into
add
mov
inc
jp
add
add
add
push
mov
adc
test
jo
mov
and
add
add
into
scas
(bad)
sbb
xchg
xchg
mov
push
add
add
add
clc
sbb
jl
jae
out
lds
xor
push
push
hlt
dec
push
jb
add
xchg
adc
cmp
mov
add
int3
enter
inc
sub
cs
xchg
fs
sub
leave
add
lock
add
add
cmps
mov
push
mov
mov
(bad)
(bad)
sbb
add
adc
xchg
dec
lods
xchg
add
test
add
add
in
push
or
jbe
pop
jns
je
mov
push
mov
ret
sub
repnz
dec
add
add
mov
ins
repnz
shl
ins
out
add
inc
dec
test
sub
and
jo
(bad)
cli
sub
clc
in
into
cmps
cwde
pop
cmp
pop
add
add
rcl
add
mov
mov
lahf
add
add
cwde
inc
leave
sub
sbb
push
repnz
div
mov
jno
loopne
add
cmp
mov
outs
mov
pop
in
sbb
add
jmp
add
mov
xor
les
add
add
jle
adc
add
loop
pusha
add
ret
mov
add
sbb
sub
cmps
or
xchg
xchg
call
xchg
cmps
sti
adc
out
bound
sahf
sub
out
dec
cmp
push
push
add
add
add
in
lock
data16
mov
jl
loop
xchg
sbb
ins
loopne
inc
adc
add
sub
jbe
sbb
xor
data16
ja
aaa
push
adc
add
add
sbb
jne
int3
cs
sbb
gs
cli
sbb
stos
aam
inc
add
mov
ret
add
add
leave
movs
into
cli
pop
pop
mov
xor
add
or
push
dec
ficomp
cmps
jl
add
add
add
add
sub
adc
xor
xchg
aas
xchg
mov
mov
call
mov
mov
jg
xor
hlt
rol
mov
or
leave
les
add
add
mov
jns
mov
mov
inc
push
clc
mov
iret
xor
mov
pop
mov
faddp
pop
push
fadd
loope
add
pop
or
xor
xchg
aaa
into
div
mov
xor
lods
rol
add
mov
fidivr
adc
rol
add
dec
jnp
fld
outs
lahf
lock
mov
das
add
(bad)
es
mov
data16
add
sahf
add
add
add
jnp
or
inc
add
lgs
fcmovne
xor
push
test
add
je
loopne
xchg
loopne
int3
add
adc
data16
inc
movs
cmp
add
fild
and
mov
xchg
imul
xchg
mov
add
push
rcr
xchg
xor
add
add
pop
mov
inc
inc
xor
(bad)
loopne
xor
mov
add
dec
out
push
sbb
jb
sub
pop
fimul
sbb
xchg
ds
add
cmp
add
cwde
pop
mov
mov
nop
call
neg
test
dec
stos
ins
ret
div
push
add
add
and
call
jbe
cmp
mov
adc
add
fidivr
pop
mov
push
adc
ror
loopne
add
push
xchg
mov
ds
push
xchg
cs
xor
add
add
push
into
dec
movs
or
idiv
outs
xor
sahf
int3
mov
sbb
jp
retf
clc
xchg
ss
(bad)
mov
mov
push
jl
adc
sbb
add
lock
mov
ins
add
clc
imul
and
add
xchg
mov
mov
mov
out
jmp
shl
sbb
push
inc
add
sbb
adc
int3
add
add
test
retf
(bad)
nop
imul
dec
dec
mov
adc
mov
hlt
inc
fisub
fiadd
push
mov
outs
push
test
add
ds
xchg
pusha
lods
push
ins
jb
cwde
or
add
dec
sbb
add
cli
(bad)
bound
cmp
add
add
and
dec
add
push
inc
xchg
xchg
test
ret
adc
ins
(bad)
in
loopne
add
sbb
ss
add
mov
inc
fcom
jb
xor
jp
aam
pop
sbb
cmps
sub
sub
retfw
add
push
adc
adc
adc
adc
ret
mov
cmp
add
scas
loop
cmp
ds
aam
mov
loop
dec
dec
ds
add
inc
xor
sub
add
sar
lock
push
add
stos
add
add
lock
inc
adc
movs
mov
mov
mov
pop
jp
test
pusha
or
mov
add
sub
pop
sbb
aam
ror
test
add
in
out
lock
sahf
test
sbb
je
mov
ins
les
mov
add
js
add
pop
dec
jb
push
jo
sub
(bad)
hlt
dec
add
inc
add
(bad)
cmp
adc
xchg
add
adc
aam
shl
add
add
mov
jp
out
cwde
mov
fsubr
add
add
mov
sub
add
stos
jmp
pop
(bad)
lods
test
retf
add
out
lods
xchg
mov
data16
mov
sahf
add
add
add
mov
and
add
movs
retf
add
out
mov
pusha
add
cwde
add
add
cs
push
add
mov
sub
adc
sub
(bad)
fcmovb
add
out
loop
add
(bad)
cld
rol
test
rol
sbb
inc
sub
mov
add
clc
add
add
les
add
fiadd
ret
or
fiadd
xchg
and
add
mov
push
mov
hlt
cmp
push
push
movs
int3
mov
add
ret
js
sub
repnz
adc
add
dec
add
add
(bad)
or
add
sub
pop
jbe
add
shr
add
out
dec
mov
push
bound
adc
loopne
cwde
pushf
stos
fmul
mov
add
int3
add
and
dec
pushf
add
add
add
rol
cwde
stos
rcr
add
add
and
add
and
add
and
mov
scas
and
les
(bad)
add
shl
js
fiadd
jbe
push
push
fadd
into
add
xchg
loopne
add
movs
add
sbb
enter
mov
and
push
dec
add
out
stos
call
xchg
je
add
xor
cmp
cli
jp
sahf
push
cld
clc
(bad)
mov
dec
push
hlt
rol
push
bound
add
pop
call
fdivr
mov
add
inc
and
add
mov
sbb
add
jbe
adc
pop
pop
jp
xchg
(bad)
ror
mov
jle
add
fsubr
sahf
lock
lock
sub
fcom
add
pushf
sahf
sub
jb
inc
add
outs
inc
scas
enter
push
mov
xchg
add
or
cli
adc
movs
xor
pushf
(bad)
push
jp
and
xchg
sbb
add
add
mov
ret
mov
loopne
add
outs
add
mov
mov
add
cwde
mov
pop
dec
xor
add
xchg
mov
add
add
outs
jb
add
mov
pushf
xor
adc
and
repnz
add
pop
in
sub
mov
add
sbb
push
scas
push
(bad)
repnz
test
in
mov
sbb
ss
pop
add
sub
cmp
push
inc
add
rol
add
add
add
shl
inc
outs
add
cmp
int3
jmp
jmp
jmp
call
call
mov
call
fnclex
ret
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
xor
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
push
call
pop
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld
fcomp
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsx
push
call
cmp
pop
je
inc
cmp
jle
movsx
push
push
call
pop
pop
jmp
movsx
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fld
fcomp
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmp
push
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fld
fstp
call
mov
lea
push
mov
lea
push
xor
cmp
sete
xor
test
setg
add
add
push
call
lea
push
push
push
push
push
call
mov
add
pop
leave
ret
push
mov
push
xor
cmp
push
mov
push
mov
je
xor
cmp
setg
push
xor
cmp
sete
add
push
call
pop
pop
cmp
mov
jne
mov
lea
cmp
jle
mov
lea
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmp
pop
pop
mov
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
add
mov
pop
pop
pop
pop
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fld
fstp
call
mov
lea
push
mov
add
push
xor
cmp
sete
add
push
call
lea
push
push
push
push
call
mov
add
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
dec
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
and
cmp
mov
jne
mov
lea
mov
test
jg
push
push
call
pop
mov
pop
inc
jmp
add
cmp
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmp
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
push
lea
push
mov
push
push
fld
fstp
call
mov
mov
lea
xor
cmp
sete
add
mov
lea
push
push
push
call
mov
add
dec
cmp
setl
cmp
jl
cmp
jge
test
je
mov
inc
test
jne
and
lea
push
push
push
push
call
add
jmp
lea
push
push
push
push
push
call
add
pop
pop
pop
leave
ret
push
mov
cmp
je
cmp
je
cmp
jne
push
push
push
call
add
pop
ret
push
push
push
push
call
jmp
push
push
push
push
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
push
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
call
mov
push
push
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
and
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
and
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
and
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
add
inc
inc
cmp
jl
xor
mov
lea
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
leave
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
push
call
test
je
push
call
pop
call
or
push
mov
pop
pop
ret
xor
pop
ret
mov
mov
mov
ret
push
push
call
push
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
push
call
test
je
push
call
pop
call
or
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
mov
push
push
fstcw
push
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
push
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
push
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
mov
push
push
cdq
pop
idiv
push
mov
mov
cdq
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmp
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cdq
pop
idiv
mov
mov
cdq
idiv
lea
push
push
pop
push
pop
sub
shl
push
push
call
add
dec
js
lea
test
je
push
push
push
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
and
lea
push
mov
pop
cdq
idiv
push
mov
mov
cdq
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
push
call
pop
test
pop
jne
push
push
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmp
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cdq
mov
mov
idiv
mov
mov
cdq
idiv
and
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
dec
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
and
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzx
mov
and
mov
mov
mov
mov
movzx
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
push
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
push
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
push
or
lea
push
call
mov
add
add
push
jmp
push
mov
and
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
mov
test
mov
jle
mov
xor
mov
test
je
movsx
inc
jmp
push
pop
mov
inc
dec
jne
mov
and
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
inc
cmp
jne
inc
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
lea
push
push
push
sub
mov
movs
movs
movs
call
mov
mov
mov
movsx
mov
movsx
mov
lea
push
push
call
add
mov
mov
pop
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzx
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
jmp
mov
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
jmp
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
jmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
in
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
call
pop
ret
push
mov
push
call
push
call
push
call
push
call
pop
ret
push
mov
mov
push
cmp
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmp
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
push
call
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
push
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
push
pop
cmp
jne
push
and
pop
xor
mov
cmp
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
and
push
pop
xor
mov
lea
rep
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
mov
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
and
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
or
call
cmp
jmp
push
call
pop
ret
cmp
jne
push
call
pop
mov
lea
push
lea
push
push
call
add
mov
test
je
push
push
push
call
add
or
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
or
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
mov
mov
shr
push
call
pop
mov
or
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
push
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
hlt
inc
add
cmc
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
(bad)
cmc
inc
add
add
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
cmc
inc
add
cmc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
test
test
test
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
test
test
test
test
adc
inc
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
test
pop
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
or
call
cmp
je
push
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
mov
mov
shr
push
call
pop
mov
or
call
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
mov
mov
mov
mov
jbe
push
mov
mov
lea
movs
movs
push
movs
call
push
call
lea
push
push
call
push
call
mov
and
and
movsx
mov
lea
push
push
call
add
inc
dec
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
add
mov
mov
jmp
mov
test
jne
push
call
add
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsx
sub
je
dec
dec
je
sub
jne
jmp
push
mov
pop
jmp
and
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
mov
jmp
inc
mov
inc
jmp
cmp
jne
mov
jmp
cmp
mov
mov
jne
cmp
jne
dec
mov
inc
jmp
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
dec
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsx
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmp
je
movsx
lea
sub
mov
je
dec
dec
jne
or
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
mov
xor
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
movsx
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmp
mov
je
push
pop
cmp
jbe
cmp
jl
inc
mov
mov
dec
inc
jmp
mov
cmp
jbe
dec
cmp
jne
dec
inc
jmp
lea
push
lea
push
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
xor
mov
jmp
cmp
jge
mov
jmp
push
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
mov
jmp
cmp
je
xor
xor
xor
xor
mov
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
inc
adc
adc
adc
adc
adc
adc
adc
add
inc
add
inc
add
adc
add
adc
add
in
sub
mov
push
mov
push
mov
mov
and
and
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
jmp
mov
mov
test
jne
test
jne
cmp
jne
and
mov
mov
mov
jmp
cmp
jne
mov
mov
cmp
jne
cmp
je
test
jne
push
jmp
test
je
cmp
jne
cmp
jne
push
jmp
cmp
jne
cmp
jne
push
lea
push
call
pop
mov
pop
and
jmp
push
lea
push
call
pop
mov
pop
jmp
movzx
mov
mov
shr
imul
shr
and
push
lea
mov
imul
mov
lea
mov
sar
mov
movsx
neg
push
lea
push
call
add
cmp
jb
lea
inc
push
lea
push
call
pop
pop
test
mov
je
mov
movsx
add
test
jg
jmp
mov
cmp
jle
push
pop
movzx
sub
and
mov
lea
push
call
dec
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movs
movs
lea
push
movs
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
and
add
add
inc
dec
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmp
jne
mov
dec
jmp
cmp
jae
inc
inc
inc
sub
sub
mov
movsx
and
mov
pop
pop
pop
leave
ret
cmp
jb
cmp
jne
dec
jmp
cmp
jae
and
mov
mov
mov
and
push
pop
jmp
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
call
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
push
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
inc
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
mov
mov
add
cmp
jle
add
lea
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
mov
add
push
push
push
call
add
test
je
mov
inc
add
sub
dec
jne
add
inc
dec
cmp
jg
add
cmp
jle
test
jne
lea
push
call
add
pop
cmp
jg
cmp
jg
add
cmp
jge
movsx
neg
add
mov
test
je
inc
lea
push
call
dec
pop
jne
cmp
je
or
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
cmp
jne
inc
mov
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
and
and
add
and
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sar
and
cmp
je
lea
cmp
lea
jb
lea
movs
movs
movs
dec
lea
push
push
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmp
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsx
jmp
lock
cmp
jg
push
jmp
lock
push
call
mov
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmp
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmp
jg
push
jmp
lock
mov
push
call
mov
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
