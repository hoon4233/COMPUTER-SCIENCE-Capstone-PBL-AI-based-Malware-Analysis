and
add
add
add
add
add
add
add
or
add
add
add
add
push
shl
add
add
push
sub
add
xor
pop
add
add
add
adc
sbb
add
or
add
outs
add
add
outs
add
add
or
outs
add
add
imul
push
mov
add
fimul
or
or
add
or
push
sub
add
or
add
or
jb
add
jo
sub
add
or
add
or
sub
add
add
add
add
adc
or
add
add
xor
add
add
adc
add
add
sub
add
or
add
or
add
jo
or
push
sbb
sub
add
or
pop
jb
add
jo
add
add
or
outs
sldt
or
lea
add
add
add
add
add
add
or
fimul
pop
sub
pop
outs
push
add
or
fimul
push
sub
push
outs
push
add
or
fimul
sbb
adc
outs
adc
add
outs
adc
add
mov
adc
add
mov
outs
adc
add
mov
adc
add
mov
outs
adc
adc
or
pop
add
or
fiadd
sub
add
add
add
and
sub
or
add
add
add
add
pop
add
gs
add
add
add
sbb
add
sub
aas
add
push
dec
add
add
add
add
and
inc
mov
cdq
xor
add
or
and
push
push
inc
xor
gs
or
and
add
add
add
sbb
or
imul
jmp
popf
jmp
popf
jmp
gs
shr
mov
mov
daa
sbb
(bad)
arpl
call
std
fdivrp
pushf
(bad)
fdivr
sbb
mov
(bad)
pop
push
dec
aad
push
cmc
push
int
(bad)
fimul
sub
add
add
sar
pop
pop
add
loopne
and
(bad)
jg
add
dec
add
xor
adc
cmp
test
jnp
inc
inc
pop
and
cmp
jnp
and
push
and
cmp
dec
cmp
xor
and
adc
js
sbb
push
add
add
sbb
or
and
cli
mov
mov
cwde
call
xchg
fnstsw
sbb
pop
fiadd
sar
ds
cmp
or
add
(bad)
pop
jmp
or
aaa
scas
adc
call
mov
(bad)
cmc
xchg
pop
aam
inc
std
mov
(bad)
aaa
fwait
rcr
(bad)
scas
es
scas
mov
call
leave
sar
das
dec
mov
jp
xchg
xor
sbb
jge
movntq
out
in
sti
aas
loop
dec
sahf
cmp
(bad)
dec
std
addr16
fild
loopne
mov
cmp
pop
mov
add
sbb
push
mov
sar
push
ret
jb
pop
add
inc
and
(bad)
out
and
push
xor
pusha
mov
sub
sub
mov
or
or
or
or
mov
fbstp
test
call
dec
sbb
daa
xor
aas
xor
(bad)
mov
add
(bad)
pusha
or
jns
iret
(bad)
xor
sub
mov
jg
fsub
cld
inc
xor
fcomp
xor
movs
cli
fwait
sbb
das
sub
mov
mov
and
in
add
icebp
pop
pop
push
push
aaa
out
or
push
jo
jo
push
adc
adc
push
inc
inc
sub
jnp
jg
idiv
je
inc
fist
jmp
mov
adc
cld
ins
add
jmp
jg
add
add
jmp
jmp
adc
xchg
add
dec
add
dec
test
push
dec
call
pop
not
inc
push
push
push
push
data16
test
iret
mov
out
sub
pop
test
inc
into
jmp
dec
cli
inc
(bad)
jmp
cmps
in
aam
push
fucomp
stos
sub
test
call
movs
push
mov
ss
inc
sbb
mov
ins
or
movs
jbe
dec
aaa
push
fwait
loop
add
sbb
inc
sahf
dec
(bad)
dec
and
pop
push
adc
test
xor
xchg
lahf
inc
popf
fisub
stos
xor
dec
pop
xchg
ficomp
das
mov
adc
jp
xchg
pop
cs
mov
int
out
mov
dec
int
push
out
ins
jmp
adc
dec
jp
jge
pop
push
ret
scas
push
dec
cli
pop
mov
shl
push
dec
pushf
pop
jp
iret
jge
aaa
mov
dec
sbb
in
clc
xor
or
clc
lds
xchg
push
jle
dec
stos
and
adc
cmps
mov
and
shl
dec
sbb
inc
in
or
or
mov
add
mov
les
sbb
stos
pop
ret
sub
test
adc
dec
mov
loop
retf
inc
outs
pop
sar
test
adc
jns
das
aam
loope
pop
lds
xchg
stc
pop
mov
mov
cmp
fcomi
repnz
in
fidiv
out
inc
inc
dec
push
mov
imul
leave
xchg
loope
in
pop
push
stc
mov
mov
jmp
out
inc
fdiv
mov
mov
pop
test
push
mov
cmp
loope
dec
lods
stc
mov
jp
xor
or
push
rcr
and
loope
fwait
rol
adc
push
jne
leave
(bad)
push
dec
sub
mov
(bad)
cmp
pop
xor
int3
inc
icebp
test
adc
fld
fisttp
(bad)
setle
stos
int3
lahf
fisubr
inc
sahf
das
jl
push
retf
das
or
jbe
pop
sar
sbb
fcmovnbe
cmp
ins
popa
or
std
fild
cmp
out
lock
nop
or
dec
sahf
pop
les
fs
inc
add
dec
sbb
out
aam
cmp
inc
std
mov
inc
mov
scas
scas
adc
ds
jbe
push
mov
mov
sub
pushf
lods
lock
pop
lods
push
fadd
mov
pop
mov
(bad)
cmps
stos
push
fmul
dec
xor
cmp
xchg
sar
test
(bad)
sbb
dec
mov
adc
out
pop
add
sahf
shl
xor
sbb
retf
sub
mov
add
push
dec
inc
addr16
adc
imul
add
jmp
push
inc
adc
push
icebp
daa
aaa
or
daa
out
inc
gs
stos
push
cmp
aas
xchg
fisubr
mov
cmp
mov
mov
jl
mov
jo
std
push
cmc
sbb
es
sub
daa
ror
mov
fst
das
pop
mov
imul
and
jbe
add
mov
jns
xor
inc
pop
or
mov
pop
dec
pop
push
inc
and
inc
mov
scas
scas
dec
in
add
push
cmp
sar
dec
mov
pushf
jb
jbe
ficom
xor
push
js
loopne
ins
jno
mov
aam
inc
jnp
retf
movs
xor
aad
or
mov
jmp
(bad)
stos
jp
std
mov
test
jo
outs
(bad)
rol
imul
pushf
jno
(bad)
pop
mov
sahf
and
inc
jp
out
loopne
jne
fadd
in
adc
xor
inc
mov
mov
push
inc
test
cld
push
mov
sbb
ins
ss
cmps
mov
push
rcl
adc
popa
aad
mov
jns
aaa
imul
add
out
cli
loope
add
add
xlat
pop
add
(bad)
movs
mov
dec
inc
jns
jg
mov
cmp
dec
aam
in
mov
xchg
xchg
jle
loope
(bad)
outs
sub
inc
add
dec
dec
fisttp
in
dec
sahf
xor
popf
push
xchg
mov
loop
xchg
out
rcl
rcl
and
and
xchg
mov
scas
scas
push
fdivr
iret
retf
mov
daa
cmp
sub
sbb
call
sbb
cmp
mov
imul
adc
and
stos
jle
data16
and
xchg
mov
ins
pop
mov
mov
lock
cli
shl
or
jmp
(bad)
dec
(bad)
adc
cmp
or
inc
inc
pusha
xor
add
xchg
fldl2t
add
and
cmp
ds
push
icebp
adc
mov
cmc
ins
pushf
dec
dec
fisubr
cmps
mov
lock
mov
xchg
mov
xchg
mov
push
gs
test
mov
sahf
jb
hlt
jl
xchg
pusha
jg
xor
scas
dec
retf
push
jg
cmp
scas
push
mov
xchg
imul
pop
mov
popa
pushf
lds
mov
leave
push
cdq
iret
adc
add
pop
jmp
out
push
lahf
les
jge
scas
rcl
test
fdivp
sbb
mov
dec
out
hlt
jns
and
aas
out
outs
lods
xor
mov
test
xor
or
mov
pop
push
imul
xor
test
mov
jb
mov
sub
dec
mov
mov
ret
mov
aaa
loope
sti
ret
cdq
nop
mov
adc
cmps
jmp
fs
or
add
push
pop
adc
mov
stos
fdiv
int
and
inc
jmp
or
or
in
pushf
mov
and
nop
call
test
test
add
sbb
cmp
aad
or
xor
jmp
dec
adc
xchg
loop
int
(bad)
lahf
movs
xor
jmp
mov
cmp
jp
dec
fisubr
pop
(bad)
xchg
xchg
imul
xchg
jbe
lds
pop
pop
repz
repnz
pop
push
scas
adc
sbb
dec
pop
out
jg
ds
mov
lahf
inc
sub
mov
sahf
mov
addr16
mov
inc
outs
in
pushf
sub
push
mov
mov
sbb
outs
fnstsw
lock
push
or
mov
and
je
ficom
xor
xchg
iret
fcmovnu
or
xchg
add
mov
pushf
mov
add
pop
mov
mov
test
cmps
in
retf
popa
push
aam
(bad)
mov
lods
cmp
stc
inc
in
adc
aad
sub
xor
into
div
cdq
iret
rcl
inc
mov
fadd
inc
sub
les
rcr
push
das
stos
jmp
mov
sti
jecxz
je
in
outs
bound
gs
or
sub
pop
push
lea
out
sub
das
xor
sub
and
xchg
dec
xchg
mov
or
dec
retf
push
xor
mul
test
aad
stc
xrelease
rcr
jmp
cli
sahf
pop
int
outs
nop
repnz
lods
jbe
jge
push
retf
lds
mov
and
adc
cld
mov
fnstcw
mov
js
cdq
mov
adc
ret
outs
add
call
sub
push
cmp
sti
sub
out
bound
stos
push
sub
arpl
jge
adc
loop
sub
popa
sahf
add
push
jb
mov
sti
sbb
ja
mov
pop
and
add
sahf
ret
inc
jmp
int
mov
push
sbb
(bad)
je
pop
or
jns
mov
ds
or
push
pop
and
call
push
mov
mov
mov
xor
test
mov
dec
mov
scas
xchg
sbb
inc
xor
retf
pop
sbb
cli
cmp
mov
or
ins
nop
imul
mov
stos
dec
pmulhuw
shl
out
(bad)
out
sahf
mov
ins
dec
mov
stos
pop
movs
movs
or
sbb
jmp
pop
add
mov
call
popa
jb
mov
retf
lock
dec
scas
xchg
aaa
pop
jae
inc
fidiv
or
test
sbb
mov
in
cli
imul
sub
out
jl
test
scas
pop
push
pop
mov
mov
mov
cli
data16
pop
stos
sub
int
dec
sub
outs
sbb
hlt
inc
xchg
or
push
js
xchg
fcom
add
cmps
sub
(bad)
push
mov
(bad)
gs
lock
fwait
in
push
aaa
call
cmps
xchg
add
jo
pop
adc
cmp
loope
fbstp
sti
jno
repnz
arpl
or
add
rol
das
popf
inc
xor
lds
mov
call
es
ss
in
div
test
mov
jl
les
jmp
and
sub
aad
ds
sub
mov
fdivr
cli
mov
movs
add
push
imul
cmps
adc
sub
ss
leave
shr
mov
pop
adc
mov
data16
mov
xchg
mov
stos
jae
daa
dec
test
mov
mov
or
and
rol
aaa
xchg
rol
popa
lea
jl
repnz
sbb
jmp
in
mov
push
add
std
inc
jmp
jne
and
lods
jo
imul
xchg
push
ret
xchg
jle
fidivr
dec
pop
mov
shl
ins
xchg
sub
sti
pop
push
imul
cmps
cld
imul
repz
aam
mov
or
je
in
mov
adc
xor
jle
jl
jbe
mov
mov
enter
ret
lds
pop
sub
adc
mov
frstor
std
sub
cmp
enter
(bad)
int
or
mov
xor
mov
int3
mov
adc
retf
pop
mov
jo
jecxz
mov
xor
out
shl
xchg
sar
cmp
mov
mov
mov
(bad)
sub
imul
mov
das
call
mov
popa
test
idiv
add
add
aas
jmp
outs
cmp
stos
mov
sahf
fwait
retf
jmp
pop
push
add
jns
pop
movs
stos
pusha
movs
not
inc
push
dec
xlat
adc
mov
cmp
sbb
mov
call
fs
div
sub
sub
push
cmp
xchg
pop
mov
test
stos
push
ins
sub
push
pusha
or
aad
movs
aad
lock
mov
stc
cwde
mov
in
push
ds
mov
jae
pop
cmp
popf
mov
xchg
fidiv
out
jnp
shr
inc
jne
inc
mov
mov
ficom
lock
aas
(bad)
and
cmp
push
push
das
lock
jnp
sub
repz
or
mov
add
xor
stos
xor
arpl
push
hlt
jno
add
adc
loop
xchg
xor
pop
ss
cmp
sbb
pusha
push
rol
push
dec
cmps
add
cmp
pushf
inc
mov
adc
aad
stos
jae
pop
dec
stos
vhsubps
rcr
mov
lock
and
inc
jl
adc
ret
es
test
dec
add
push
cmc
jl
(bad)
push
sub
jb
aad
push
dec
dec
fwait
mov
test
call
push
add
push
inc
mov
and
adc
mov
lods
add
xchg
mov
imul
jmp
movs
push
rcl
mov
cdq
dec
iret
repnz
in
int3
and
movs
retf
jo
ja
ds
popf
mov
mov
pop
sti
ret
test
out
and
(bad)
mov
and
loopne
sub
mov
jo
icebp
mov
push
adc
fsubrp
push
jb
sub
out
xchg
sbb
cmps
xchg
xor
shl
sahf
or
mov
mov
leave
not
sub
pop
pop
in
test
imul
dec
push
cs
add
lahf
test
jmp
in
pop
(bad)
cs
dec
push
mov
xor
inc
ret
or
(bad)
js
inc
mov
mov
lods
pop
and
mov
popa
cmp
lods
sub
jne
sar
cli
or
cmps
rep
es
popa
(bad)
rol
and
xor
xchg
sbb
(bad)
xor
inc
xchg
lds
adc
push
pop
idiv
leave
mov
aaa
pop
mov
mov
inc
push
add
les
pushf
mov
popa
cmp
(bad)
fadd
add
pop
in
mov
cmc
cdq
inc
outs
rcr
sbb
popa
sbb
mov
dec
sub
scas
loop
call
jne
je
sub
scas
stc
push
cli
jecxz
push
inc
mov
mov
add
shl
add
fidiv
es
or
sbb
(bad)
xor
or
mov
jl
inc
or
pop
push
cmp
add
sub
add
add
sbb
mov
push
sub
call
sbb
mov
adc
scas
lods
dec
push
ret
inc
add
xchg
aad
popf
cmp
repz
je
push
or
fist
mov
and
pop
dec
sbb
adc
loopne
xlat
out
iret
icebp
neg
(bad)
cmc
in
mov
shl
push
mov
mov
cmp
inc
loopne
in
fwait
(bad)
xor
xor
mov
mov
dec
mov
dec
clc
(bad)
mov
adc
je
xor
sub
adc
pop
sbb
test
jnp
dec
mov
data16
cs
shl
add
pop
xor
sub
stc
push
cmps
and
xor
cwde
arpl
push
jns
ss
cdq
pusha
jge
pushf
mov
fwait
mov
jb
cs
je
pop
rol
lock
xor
and
mov
mov
lods
lods
mov
lods
mov
and
and
sub
rcl
jmp
popf
sbb
add
arpl
int
push
inc
fldcw
pop
into
loope
fwait
lahf
mov
and
das
cmp
loopne
repnz
fimul
mov
push
movs
int
mov
rcr
adc
ja
jmp
in
ins
jmp
movs
and
call
or
sbb
jecxz
mov
ins
mov
lea
push
sub
mov
mov
(bad)
and
icebp
and
js
sub
out
mov
ficom
rcr
jae
mov
mov
mov
pop
add
sbb
mov
out
add
pop
push
out
sbb
xchg
xor
or
add
dec
inc
dec
add
cmp
fadd
xor
sbb
pop
aad
ret
rcl
and
ret
shl
mov
add
mov
jns
aam
stos
mov
push
ds
jnp
xor
sub
cmp
push
sbb
mov
ror
in
stos
int
shr
jmp
fwait
cmp
adc
add
sbb
mov
or
pop
aas
neg
aam
repz
sbb
ins
mov
xchg
not
mov
shl
or
ret
retf
(bad)
in
jae
inc
xchg
mov
call
(bad)
dec
pusha
js
nop
mov
jnp
daa
pop
dec
clc
pop
dec
aam
lods
or
sub
pop
add
xlat
loope
mov
push
inc
dec
ds
call
hlt
shr
cmps
lds
xchg
mov
push
or
rcr
mov
and
mov
test
pop
(bad)
jnp
pushf
push
xchg
jmp
xor
push
dec
lods
mov
fistp
mov
call
sub
ja
ret
ret
and
rcr
fisubr
out
jns
cmp
ds
push
icebp
jle
xchg
sbb
aam
push
add
and
jo
mov
loope
add
fisttp
lods
sub
xchg
arpl
sti
out
mov
jg
call
call
mov
fdiv
rcr
mov
jmp
push
push
dec
addr16
es
into
movs
(bad)
inc
pop
scas
adc
mov
mov
xchg
hlt
out
adc
rcl
jb
imul
jo
adc
cmc
lods
and
fwait
bound
lea
lods
pop
movs
sbb
not
ret
sub
pusha
or
jp
(bad)
mov
push
push
movs
popf
pushf
mov
xor
xchg
lods
xor
inc
dec
ss
pop
or
sbb
mov
pop
scas
adc
fmulp
loopne
xor
inc
stc
cmp
mov
sub
sub
adc
jbe
out
repnz
mov
xchg
dec
jl
push
stc
in
push
push
daa
repnz
loope
cmp
sbb
(bad)
jge
fwait
xor
adc
ins
cmps
nop
int
sbb
ret
(bad)
fnstsw
sub
push
in
and
push
cwde
mov
xchg
popa
cmps
xor
das
js
mov
inc
mov
add
fs
and
jnp
je
test
test
out
call
mov
sti
lods
imul
mov
mov
xor
clc
inc
pop
adc
retf
mov
pop
jnp
retf
rcr
cmp
mov
mov
mov
in
call
fst
push
and
and
sub
sub
lock
and
cs
frstor
scas
jbe
shl
fild
loopne
loop
bound
out
jmp
loop
sti
sbb
dec
int
retf
arpl
sub
add
popa
jb
in
sbb
lahf
ins
mov
push
inc
dec
aas
xchg
es
in
nop
loopne
repz
nop
push
xor
sbb
loope
xor
cld
xchg
setno
loope
sbb
inc
mov
sbb
pop
jmp
sar
push
mov
jmp
loope
push
les
dec
stc
in
ret
inc
dec
movs
loope
and
pop
push
les
mov
(bad)
sub
cld
iret
pop
fs
loop
outs
inc
jmp
mov
push
in
sub
ins
dec
mov
jecxz
iret
daa
icebp
mov
add
ret
pop
dec
push
jb
dec
mov
cmp
inc
loope
xchg
fdiv
arpl
adc
mov
loop
mov
mov
sbb
jl
clc
cdq
pop
cs
cli
add
inc
arpl
enter
es
sub
fimul
xchg
test
or
pop
add
ror
fwait
sub
mov
imul
call
retf
adc
cmps
es
adc
dec
inc
jecxz
in
mov
inc
jle
xor
lods
xchg
jle
(bad)
outs
mov
and
mov
stos
pop
dec
xchg
push
sub
dec
cmp
call
(bad)
jae
(bad)
stc
sub
movs
xor
mov
or
mov
jecxz
mov
jmp
cmp
int3
add
xor
inc
or
pushf
dec
out
and
mov
iret
jmp
mov
adc
icebp
pop
cmc
fdivr
cmp
mov
ret
and
mov
xchg
aam
pusha
repnz
fstp
std
mov
sbb
out
mov
mov
pusha
not
push
addr16
cmp
sub
jns
outs
lea
in
or
inc
retf
jle
xchg
cmp
ins
rcl
mul
and
loopne
jle
jle
rcr
mov
sbb
das
pop
js
mov
mov
sbb
push
nop
std
add
jo
inc
push
ds
neg
dec
in
mov
dec
pop
outs
cwde
retf
pop
and
gs
in
or
pop
call
mov
dec
retf
cmp
sub
in
jno
sub
push
fwait
or
mov
(bad)
out
daa
out
or
imul
outs
jge
cmp
sub
jbe
test
jns
fstp
mov
xor
jp
push
xchg
sbb
mov
retf
push
inc
jle
aad
dec
xchg
mov
mov
xor
jle
stos
mov
in
imul
push
scas
cmps
loopne
or
arpl
push
mov
xor
sbb
pop
xchg
mov
std
ds
mov
scas
add
enter
ja
loop
push
repz
popf
jp
add
dec
and
fnsave
(bad)
sub
outs
iret
cmp
rcr
sub
pop
mov
addr16
sar
jecxz
sahf
fadd
call
mov
(bad)
sub
pop
pop
dec
dec
dec
push
or
mov
pop
jle
ins
xor
pop
popa
loope
imul
test
mov
pop
cmp
daa
sub
mov
test
test
adc
shl
push
popa
loopne
pop
dec
mov
jmp
push
mov
std
aad
adc
mov
(bad)
pop
retf
cdq
fwait
fs
outs
mov
adc
je
es
xor
neg
int3
pop
fs
or
std
cmp
scas
mov
xlat
mov
xchg
iret
or
mov
mov
cmp
cmp
jle
mov
in
or
jno
jnp
arpl
enter
and
or
add
repz
sbb
int
arpl
out
rcl
inc
adc
sub
cmp
cmps
(bad)
push
stos
in
mov
add
or
mov
inc
ds
lds
or
dec
or
fdivp
mov
push
imul
dec
mov
pushf
pushf
and
push
jecxz
mov
ins
xor
mov
lahf
call
hlt
mov
cmp
ins
(bad)
mov
arpl
outs
(bad)
cld
xor
cmps
fcom
call
out
and
out
ins
pop
mov
sub
push
xchg
cmps
inc
xor
jb
xor
jnp
add
push
inc
aam
push
mov
lds
in
jmp
mov
and
cmps
jae
pop
cmp
fldenv
push
jl
mov
stc
push
sub
je
cwde
mov
xchg
sub
popa
mov
add
je
xchg
lods
call
call
cmp
nop
lods
push
mov
xchg
repnz
add
push
jle
data16
(bad)
cmp
(bad)
sbb
iret
into
psllw
jp
or
call
shr
mov
xchg
xchg
repnz
pop
jae
lods
xor
std
clc
jmp
cmps
mov
add
ret
cmp
or
out
pop
jmp
dec
push
pusha
sbb
neg
popa
popa
cmp
addr16
arpl
sub
sbb
call
jge
adc
lea
pop
and
leave
add
add
repz
adc
jbe
rcl
push
sub
in
lods
bound
call
lods
jecxz
cmp
cmp
fidivr
mov
mov
or
xchg
mov
int
xor
adc
bound
mov
test
cmp
cmc
sbb
pop
fwait
jg
jmp
mov
mov
mov
ss
imul
add
ins
jae
jmp
xchg
sbb
or
mov
jmp
push
jno
mov
add
mov
add
and
mov
jmp
idiv
jo
dec
fmul
cmp
cld
js
das
outs
std
add
xor
movs
mov
fadd
jno
cdq
xchg
mov
adc
jp
scas
or
sbb
jp
inc
sub
cdq
shr
pop
pop
mov
xchg
xchg
jg
pop
mov
arpl
out
jle
push
aam
push
lea
ror
cli
cmp
push
xchg
xlat
ss
ds
pusha
mov
(bad)
aaa
add
mov
push
stos
sub
loope
cmps
mov
ret
push
mov
sbb
mov
dec
add
mov
cs
cwde
mov
mov
fmul
xor
call
jns
retf
xor
scas
pop
jmp
push
pusha
ja
lea
jae
push
fiadd
ss
jne
inc
clc
dec
dec
jbe
vpaddd
not
pop
mov
stos
sub
arpl
lahf
push
xchg
adc
inc
fs
push
dec
ret
jle
jl
mov
popa
inc
mov
jge
adc
and
aam
outs
adc
xchg
jae
ja
retf
lods
dec
inc
push
sub
cdq
sub
sar
aaa
mov
cmp
xchg
push
adc
fucom
xor
mov
pusha
adc
aas
mov
cmps
xor
pop
lods
das
test
mov
jl
mov
pop
call
test
lods
cmp
dec
in
pop
aas
sub
aam
jnp
lods
mov
jo
leave
stos
fiadd
fst
sbb
sbb
and
mov
test
stos
loop
pop
adc
inc
scas
or
test
mov
ds
jbe
call
dec
push
xor
xchg
push
adc
mov
fwait
(bad)
fbld
aam
pusha
xchg
xor
test
dec
and
test
mov
xorpd
aam
scas
in
dec
xchg
rcl
mov
ins
mov
ins
fistp
inc
lahf
es
sti
aaa
mov
inc
push
cmp
sahf
cmp
xchg
sbb
add
jae
inc
mov
aas
int3
xor
ins
shr
hlt
test
add
inc
or
add
in
dec
dec
mov
(bad)
xchg
scas
push
lds
inc
cmp
hlt
repz
or
mov
and
sbb
pop
xor
lahf
arpl
shl
repnz
sub
xor
retf
cld
xchg
jl
mov
cmps
or
loope
cli
or
gs
test
(bad)
cdq
hlt
jno
sbb
daa
sbb
sbb
div
pop
ins
adc
xor
in
mov
sti
std
add
mov
adc
movs
jo
clc
cdq
mov
or
mov
pop
dec
out
or
scas
mov
add
ror
neg
lds
(bad)
in
inc
sti
jbe
rcl
frstor
popf
ja
lods
das
jmp
or
adc
retf
dec
xor
out
call
push
xchg
push
mov
jno
clc
or
(bad)
inc
mov
mov
inc
ror
sti
add
push
scas
lds
xor
fnstcw
and
das
imul
inc
addr16
les
xchg
mov
push
cmps
jp
pop
movs
btr
repz
out
pop
mov
leave
rcl
xchg
ja
and
ins
iret
cmps
sub
daa
push
dec
sbb
lea
or
cmp
jmp
add
or
mov
cmp
pop
pop
jno
(bad)
jb
gs
into
cld
and
add
mov
jle
jnp
fdiv
adc
jb
data16
cmc
push
mov
aam
add
mov
aaa
xchg
pusha
push
out
xchg
ret
int
sub
sbb
jnp
pop
adc
jne
cmps
lea
ins
mov
sbb
leave
cmp
dec
cmp
add
sbb
shr
(bad)
std
and
cmp
dec
and
fwait
daa
jno
out
and
mov
daa
ret
movs
(bad)
push
call
add
scas
enter
stos
lock
pop
cdq
sbb
pop
fmul
jo
xor
push
(bad)
into
and
sub
jg
jecxz
or
leave
pop
pop
mov
iret
pushf
push
or
cmp
mov
xchg
inc
cs
stc
jo
xchg
ds
mov
push
xchg
jne
into
xchg
(bad)
lock
or
xor
(bad)
shl
hlt
dec
and
xor
mov
sub
jmp
div
pop
push
cwde
les
pop
jb
push
xchg
sub
mov
inc
dec
fwait
pop
mov
push
outs
iret
or
push
imul
rcr
retf
mov
push
mov
xor
jl
jecxz
jge
sbb
jbe
sbb
retf
pop
mov
cld
sub
(bad)
push
leave
outs
ret
scas
xchg
repz
ds
(bad)
jnp
dec
outs
cli
leave
fs
bound
dec
and
fst
xlat
cs
adc
mov
lea
in
cmp
push
jnp
cmp
rcl
sub
mov
pop
inc
sbb
sub
mov
sub
dec
into
mov
adc
xor
sub
jle
ins
and
js
inc
sub
in
aad
and
fldcw
in
cmps
sbb
jp
js
fidivr
ret
movs
jbe
ret
sbb
fdivrp
and
fidivr
jb
mov
xchg
scas
mov
retf
pushf
int
adc
mov
and
sub
xor
icebp
gs
xchg
xor
mov
cmc
jp
pop
sub
jmp
jno
(bad)
mov
outs
mov
pop
mov
cdq
mov
sbb
shl
outs
mov
jbe
jp
cmps
rcr
sub
push
fbld
shl
ficom
iret
popa
cmp
ret
sti
in
and
cmps
push
sbb
test
mov
push
idiv
into
add
xor
jnp
sub
out
imul
out
inc
jle
mov
mov
leave
cdq
mov
test
stos
sub
xchg
scas
or
jne
cmp
sbb
out
cmp
sar
bound
xchg
mov
fdiv
cs
pop
(bad)
das
int
std
dec
sbb
xchg
jno
cld
fdiv
cmp
ins
pop
std
or
cmp
pop
or
add
push
out
jae
adc
ror
mov
jbe
push
mov
loop
push
(bad)
fst
iret
pop
(bad)
pop
les
dec
(bad)
retf
and
mov
bound
ins
ds
xor
std
lods
ja
mov
(bad)
imul
mov
push
iret
sub
mov
push
stc
fmul
mov
test
bound
pushf
mov
sub
dec
aam
mov
ins
sbb
sub
dec
mov
pop
out
and
movs
pop
xor
iret
jle
call
mov
adc
mov
cmps
(bad)
mov
cmc
mov
mov
jmp
clc
cmc
(bad)
xchg
lds
and
dec
and
js
call
cmovb
fmulp
dec
or
int3
pop
(bad)
in
sahf
add
fcom
(bad)
retf
imul
cmp
int3
mov
cmps
jge
dec
sub
scas
inc
push
dec
xor
(bad)
scas
pushf
fsubr
aaa
je
mov
int3
lahf
cld
stos
mov
push
inc
mov
repz
dec
jo
push
hlt
push
cmp
add
push
pop
xor
push
mov
retf
out
cmp
shl
cmps
xor
inc
add
into
and
mov
jns
inc
xchg
(bad)
fidiv
ins
imul
push
ins
xchg
cmp
sub
mov
loopne
sbb
xor
ins
adc
mov
or
dec
iret
xchg
shl
push
pop
lahf
pop
jge
xchg
cwde
xchg
sub
retf
fs
ins
push
(bad)
adc
data16
jae
loope
and
jp
push
stos
sub
jmp
inc
sar
xor
mov
dec
push
xor
daa
(bad)
xor
sbb
jmp
mov
pop
loopne
pop
mov
mov
shl
and
sub
dec
int3
mov
and
clc
out
cmps
aas
jne
scas
adc
add
fwait
cli
pop
(bad)
cmp
int
aaa
fdiv
ficomp
mov
sbb
dec
sar
dec
push
mov
pop
jp
imul
jmp
sbb
and
jnp
push
sub
pushf
or
repz
repnz
push
and
daa
xchg
mov
addr16
fimul
loope
cmp
fnstcw
aaa
xor
sahf
pop
(bad)
cmp
dec
dec
cmp
dec
mov
jae
xor
enter
inc
add
loop
pop
sbb
fdiv
jne
sbb
jl
dec
aad
mov
in
icebp
outs
mov
lahf
pop
fmul
push
jb
mov
inc
cmc
fisubr
sub
sbb
dec
(bad)
xor
inc
mov
sbb
push
in
std
cmp
push
add
pop
lock
cli
mov
les
xor
add
adc
sub
push
mov
fsubr
jo
fstp
jg
and
daa
mov
cmp
xor
pushf
mov
test
xor
ud1
cmp
xchg
mov
sub
mov
xor
pop
inc
fdivr
jo
jecxz
inc
rcr
inc
call
in
xor
inc
lea
sahf
ret
mov
fdivp
add
sub
mov
lods
mov
add
sub
out
inc
push
push
mov
push
mov
loopne
ror
in
mov
outs
pop
add
imul
rol
sbb
fsub
lahf
push
hlt
ret
into
loop
jne
rcr
out
ins
or
(bad)
adc
mov
push
clc
mov
movs
sti
add
xchg
iret
jl
push
pop
push
jle
xchg
inc
pop
jle
arpl
lods
xor
push
dec
xchg
mov
inc
and
mov
mov
and
ret
dec
xchg
loopne
call
pop
clc
or
sub
fidivr
add
cmp
adc
mov
or
repnz
call
repz
cmps
in
mov
(bad)
jmp
jge
mov
addr16
mov
cmp
push
mov
gs
test
inc
jne
ret
aaa
inc
sbb
sahf
mov
or
aam
pop
pop
adc
lods
jmp
int
xchg
inc
mov
ret
or
mov
retf
pop
(bad)
mov
test
stc
mov
sbb
loopne
pusha
lea
xchg
jmp
push
(bad)
sub
or
into
adc
and
add
mov
xor
sub
adc
ss
dec
pop
icebp
mov
xor
loop
ins
sub
and
adc
push
xchg
push
ror
aas
xchg
test
lods
std
xchg
movaps
in
sti
out
cld
or
or
daa
dec
ror
push
outs
fbld
ins
xor
shl
pop
or
es
rcr
and
repz
lea
xor
ja
pop
sbb
fsubrp
xchg
jmp
xchg
je
sar
xor
(bad)
jl
pop
add
lods
repz
popf
outs
mov
in
psrad
ja
jbe
sub
test
imul
stos
dec
adc
popa
jnp
mov
adc
push
pop
(bad)
test
or
cs
inc
int3
mov
mov
pop
or
mov
lds
dec
jno
(bad)
sbb
inc
nop
add
outs
leave
js
bound
pop
xchg
test
mov
inc
inc
int
cmp
mov
(bad)
pop
je
aad
ret
jne
aam
jno
scas
loope
jl
xchg
cli
add
loope
ret
sbb
fmul
shr
call
sub
cmp
fistp
jmp
and
xchg
loopne
sbb
pop
push
test
adc
add
dec
mov
fcmovu
fs
inc
adc
in
pop
addr16
cmp
stos
push
pop
out
push
out
shr
lahf
lds
pop
or
sbb
pushf
lea
repz
cmc
or
pusha
shl
sar
push
std
inc
fucomip
mov
lock
add
mov
stc
cmc
cmps
inc
inc
shl
xchg
je
(bad)
xlat
dec
repnz
pop
jnp
stos
or
(bad)
out
cdq
aaa
jg
sbb
xchg
out
scas
cmc
mov
and
test
ret
ss
mov
jbe
cmp
gs
stos
lahf
(bad)
pop
dec
cmps
int
xor
push
adc
and
mov
jg
jno
cmps
cmp
cmp
sbb
inc
or
je
sbb
(bad)
pop
fisttp
sub
pushf
jbe
dec
cmp
daa
js
cmps
xchg
mov
out
sbb
bnd
sub
sub
test
jge
add
scas
icebp
sub
aad
mov
jle
jle
sti
icebp
and
aaa
call
mov
mov
cwde
sbb
addr16
popf
repnz
retf
xchg
add
ud2
(bad)
fucomip
add
push
aas
(bad)
neg
inc
mov
aad
ja
xor
push
xchg
(bad)
outs
sar
fist
leave
pop
pop
mov
rcl
pop
inc
(bad)
adc
imul
xlat
enter
bound
add
lahf
jo
cli
push
test
mov
and
pop
or
mov
scas
daa
jne
inc
bound
add
test
xlat
loope
fdivr
jmp
push
xor
inc
adc
mov
or
push
addr16
push
scas
adc
gs
aad
in
push
mov
fsubr
cli
mov
dec
push
mov
jg
pop
scas
xor
inc
ins
pop
mov
dec
pusha
fdiv
xchg
(bad)
cmp
popa
jge
movs
jmp
pop
sahf
cmp
lods
aad
add
mov
dec
fsubr
add
repz
inc
cld
scas
lock
mov
sub
loop
mov
jae
(bad)
dec
scas
sbb
sub
pop
cdq
test
or
sbb
push
mov
or
push
out
fdivr
mov
int3
icebp
rol
and
mov
mov
(bad)
sub
mov
mov
sub
pop
daa
xchg
test
mov
mov
mov
out
cwde
cmps
mov
cmp
cld
or
jmp
sar
cdq
xchg
cmp
sti
imul
mov
jle
xchg
pushf
das
fs
adc
add
in
adc
lahf
clc
sub
js
mov
in
xor
imul
aas
data16
leave
xchg
cmp
xchg
js
or
scas
jl
dec
lea
cli
test
mov
mov
jne
mov
mov
neg
fisttp
jb
lahf
les
inc
add
dec
pop
mov
mov
dec
cmps
jbe
popf
(bad)
retf
xchg
xchg
nop
or
adc
xchg
sti
rcr
hlt
inc
pop
and
sub
add
(bad)
es
sbb
imul
xor
or
dec
jae
jmp
mov
ja
cmc
jne
out
xchg
int
je
(bad)
call
aam
cdq
fmul
sub
ror
jns
xchg
test
dec
sahf
jae
out
adc
sti
inc
mov
push
dec
sti
jbe
cmps
mov
(bad)
fsubp
lods
mov
in
sbb
add
mov
xchg
loope
adc
jns
stos
mov
stc
lds
imul
inc
mov
ficom
fcom
les
inc
fisub
xor
xchg
xor
inc
std
push
loopne
lds
dec
and
mov
out
pop
es
clc
dec
lock
sar
mov
test
call
sub
sahf
popf
jmp
inc
inc
mov
or
xchg
jbe
sbb
jno
scas
popf
xchg
js
aas
popa
sub
sar
bound
ror
pop
xchg
push
jo
or
sti
lods
pop
dec
xchg
ret
jae
jbe
cmp
imul
fnsave
mov
icebp
cdq
out
mov
mov
std
and
xchg
mov
xor
mov
push
iret
lods
in
imul
mov
popa
scas
cmps
xor
dec
mov
xor
leave
pop
popa
and
pushf
cmc
mov
mov
mov
cmp
adc
inc
dec
jg
dec
(bad)
dec
adc
inc
shl
rcl
fsubp
aaa
pop
retw
mov
jae
xchg
dec
xor
test
fist
fdiv
in
mov
cdq
mov
jg
cli
cmp
mov
out
pop
dec
lock
ins
shl
loop
xchg
lods
and
(bad)
out
inc
sub
sbb
sub
mov
xchg
fucomp
or
repz
mov
jno
sar
jmp
jnp
inc
and
pop
mov
shl
lods
leave
xor
imul
mov
pop
in
sub
sahf
daa
cmps
cwde
mov
sbb
or
dec
and
in
arpl
das
lods
bound
push
(bad)
cmp
push
jge
scas
call
aam
mov
and
into
shl
in
outs
fs
adc
cmp
cmps
aad
imul
or
push
(bad)
movs
daa
sub
inc
je
fcomp
es
loope
cs
rol
fs
retf
inc
hlt
pop
movs
and
in
lahf
adc
mov
pop
(bad)
or
fwait
ja
sbb
arpl
movs
mov
in
and
pop
push
sahf
mov
and
sbb
cmps
call
dec
imul
stos
mov
fmulp
push
mov
rcl
mov
push
mov
dec
hlt
leave
sbb
int3
in
leave
lods
dec
cwde
sbb
jmp
pop
idiv
xor
(bad)
mov
ins
add
sbb
arpl
in
mov
and
inc
jp
mov
xor
(bad)
or
inc
in
scas
or
test
cmc
stc
sahf
push
jbe
out
movs
pop
ins
mov
pop
jge
mov
js
mov
repz
sahf
cmps
imul
daa
fcomp
shr
imul
inc
daa
inc
lds
xchg
jns
ds
and
mov
jnp
mov
sbb
push
fild
dec
inc
adc
adc
and
ds
jae
jnp
jl
int
xchg
xor
aaa
mov
mov
inc
pop
xchg
mov
push
push
test
jle
dec
and
sub
frstor
mov
mov
div
jns
fcom
and
xor
xchg
pop
iret
icebp
in
aam
mov
imul
xchg
(bad)
hlt
and
xchg
stc
jns
aad
xchg
in
imul
cdq
retf
push
aad
or
pushf
in
dec
addr16
rcr
stos
fistp
das
dec
sbb
mov
jl
shl
xor
scas
fsub
sub
xlat
arpl
lock
xchg
jle
adc
loop
mov
sbb
fisub
mov
jp
add
sar
xchg
xchg
loope
repnz
or
test
imul
mov
les
je
js
aaa
cli
pop
mov
xor
mov
adc
inc
pushw
sbb
add
fs
xor
in
adc
pop
nop
or
mov
loop
jge
cmp
scas
xor
dec
sbb
adc
mov
repz
dec
sar
into
sar
in
ja
cmp
add
inc
push
pop
scas
mov
lahf
dec
and
jnp
movs
test
dec
fdivr
xchg
xchg
test
sbb
in
dec
cmp
jl
mov
sbb
adc
pushf
pop
dec
mov
push
lds
jmp
cwde
sbb
ss
inc
or
and
sbb
mov
aaa
fistp
jge
mov
push
adc
or
ror
xchg
mov
xchg
push
push
jmp
clc
xor
mov
dec
mov
sbb
iret
pop
or
mov
stos
ret
push
(bad)
div
cmp
call
ret
mov
pop
mov
jno
or
imul
push
push
(bad)
push
data16
inc
pop
dec
sub
aas
mov
cmp
mov
test
mov
fild
mov
sahf
xor
push
repz
into
ret
cmp
dec
aas
or
pop
addr16
adc
or
cmps
jne
add
inc
adc
pop
or
into
fwait
or
xchg
(bad)
std
inc
jo
cmps
in
push
std
push
xor
add
push
imul
nop
sbb
sbb
pushf
jno
test
cmc
je
cwde
mov
adc
sbb
xchg
ins
out
cmp
aaa
leave
mov
or
pusha
cmp
jo
jecxz
mov
das
push
fs
stc
or
daa
sbb
loopne
test
int
mov
xor
or
shl
or
sub
pop
ret
inc
pop
int
cld
stos
or
setg
inc
and
mov
stc
xor
popa
xor
imul
sbb
daa
(bad)
xchg
xlat
jecxz
fisubr
std
add
(bad)
or
nop
out
pop
xchg
mov
test
jecxz
loop
push
xor
xchg
jns
adc
xchg
lods
mov
cmp
mov
popa
jmp
or
push
inc
imul
sub
popa
call
mov
gs
pop
rcl
test
retf
inc
or
and
mov
adc
lock
cmp
and
shl
cmp
nop
push
mov
and
cwde
pusha
push
ror
cmp
jmp
bound
ror
test
add
scas
or
shl
cmp
jmp
call
test
div
push
pmulhuw
fstp
sbb
(bad)
mov
sbb
or
lock
sub
mov
jae
clc
jne
test
dec
cmp
mov
gs
push
les
outs
xchg
stc
movs
std
jmp
sahf
stos
sub
rcr
mov
xor
sahf
ror
dec
sub
and
test
inc
and
(bad)
pop
das
lods
in
pushf
popf
cmp
push
inc
and
mov
xor
jo
sub
mov
lea
or
xor
loope
adc
shl
xchg
xchg
sub
xchg
rol
pop
jae
shr
adc
fst
mov
pop
dec
mov
ja
pop
fistp
cmps
(bad)
mov
popa
in
xor
xchg
gs
xor
shl
mov
call
in
push
pop
mov
xor
xchg
cdq
mov
fcomp
dec
pusha
jmp
call
pop
cmp
in
movs
mov
mov
and
mov
in
or
push
mov
or
sub
sbb
or
retf
nop
adc
cmp
xor
and
pop
sub
jae
retf
mov
push
mov
dec
hlt
cdq
leave
sub
inc
lock
push
jne
sti
in
ja
out
mov
mov
lock
inc
dec
xchg
mov
fimul
int3
ss
(bad)
jnp
jno
std
cli
retf
dec
add
fnstsw
push
pmulhuw
cmps
pusha
aad
push
mov
mov
int
inc
push
xchg
fisttp
lods
lods
jmp
fisttp
jecxz
addr16
mov
les
xchg
xchg
mov
loopne
or
rol
adc
call
mov
aas
pop
dec
and
xchg
add
adc
int
mov
ds
push
fnstcw
add
icebp
sub
aad
fistp
in
stos
out
mov
mov
into
add
pop
retf
push
xor
jmp
les
out
out
repz
(bad)
jmp
out
idiv
or
dec
aas
(bad)
and
into
xchg
jno
retf
mov
std
mov
pop
or
test
mov
adc
out
add
scas
es
out
jmp
shl
ins
stc
or
cmps
mov
push
cmps
push
jae
shl
sub
lock
ja
jmp
cmps
jns
sub
and
pop
bound
bound
xlat
pop
mov
in
nop
cwde
ret
add
mov
or
add
mov
inc
hlt
jp
cli
loopne
dec
add
xor
rcr
push
dec
pop
cmp
jno
sahf
adc
in
in
(bad)
sti
icebp
jmp
pop
and
(bad)
ds
es
int
jne
int
fwait
js
bound
xchg
cmp
dec
pop
ficom
bound
nop
ret
mov
mov
pop
jmp
test
(bad)
mul
jno
inc
neg
test
mov
adc
neg
mov
cmp
mov
add
add
pushw
sbb
jae
outs
inc
aam
stos
int3
fcomp
popf
push
jg
hlt
mov
push
push
test
jo
jl
xchg
repz
in
ds
gs
repz
push
dec
mov
hlt
aas
test
mov
adc
das
jno
sbb
mov
ror
push
or
jle
loope
test
(bad)
dec
clc
xor
xchg
jae
je
daa
push
das
loop
pop
fbld
xor
sahf
adc
jmp
ror
arpl
popw
jp
inc
ds
mov
(bad)
out
test
sub
daa
mov
movaps
dec
je
dec
outs
ret
jge
(bad)
mov
mov
shl
and
test
or
icebp
clc
in
pushf
out
gs
mov
repnz
push
imul
pop
inc
xchg
addr16
not
jmp
cmp
mov
mov
pop
fs
jbe
aad
std
adc
mov
loope
adc
(bad)
xchg
mov
stos
dec
addr16
shl
fild
lods
loop
mov
call
adc
cmp
stos
scas
sub
and
push
pushf
mov
and
sub
hlt
xchg
jae
out
jae
inc
out
jbe
gs
jne
jmp
and
test
sub
ins
pop
rcl
addr16
(bad)
ds
fs
imul
adc
dec
clc
stos
jmp
mov
scas
mov
pop
test
loop
or
or
hlt
mov
mov
mov
push
lahf
pop
mov
pop
(bad)
std
lock
pop
bound
push
lods
sbb
adc
in
aam
xchg
and
jp
test
and
aaa
stos
or
mov
adc
in
jno
xchg
icebp
jbe
sbb
xchg
sub
mov
sbb
adc
stc
fs
xor
and
fs
pop
ret
out
cmp
mov
push
movs
mov
jae
mov
imul
mov
ds
sar
int3
icebp
cmps
xchg
je
sub
push
fwait
inc
adc
sbb
(bad)
jo
and
sbb
xor
cmp
mov
test
pop
hlt
inc
mov
xchg
adc
mov
lea
ret
push
sti
dec
out
ret
not
sbb
and
out
daa
loop
jae
aaa
mov
out
ss
add
mov
(bad)
lock
iret
sbb
out
enter
pushf
xor
(bad)
mov
jge
mov
jns
retf
neg
adc
setbe
cmp
icebp
mov
or
fstp
mov
cld
pop
add
jp
sahf
in
in
loop
sbb
repz
ret
test
jle
dec
mov
mov
fdivp
cld
dec
inc
hlt
das
mov
push
and
xchg
add
mov
cdq
les
or
add
iret
mov
outs
push
ret
cmps
ins
cmp
int3
sbb
xchg
fidivr
gs
inc
sub
and
lods
sub
push
fld
(bad)
or
xor
outs
stc
push
outs
mov
mov
test
ss
dec
sub
dec
(bad)
outs
test
sub
push
mov
or
pop
inc
pop
out
cld
push
add
aad
and
ror
pop
test
mov
add
and
or
jns
sti
cmp
cmc
or
leave
enter
and
inc
loop
mov
jns
xchg
ror
jmp
sbb
xchg
stc
in
fwait
inc
mov
fwait
dec
xchg
fisttp
sti
sub
jle
and
nop
cmp
fild
push
ret
lahf
and
sub
cli
jnp
lods
aam
not
js
jns
or
pop
(bad)
xchg
mov
jle
and
cdq
je
or
jmp
js
nop
out
es
cwde
and
jge
pop
(bad)
push
mov
push
ret
jb
subps
scas
mov
jl
xor
dec
in
aad
mov
push
xchg
xor
in
adc
fld
push
mov
cmp
in
lods
inc
inc
shr
xchg
imul
aam
out
iret
call
cmc
cwde
aaa
pop
icebp
inc
fmul
lds
(bad)
cwde
pop
pop
and
adc
(bad)
sub
je
dec
or
sbb
mov
jae
int
mov
push
and
cmp
inc
sub
std
nop
sub
push
mov
inc
repnz
aam
adc
fst
ins
inc
das
stos
sbb
call
call
unpckhps
test
out
xor
aam
mov
loop
xor
test
pop
and
lock
aam
jnp
mov
mov
mov
gs
outs
cld
jmp
sahf
and
mov
lods
xchg
pusha
push
sahf
fs
ret
movs
ds
je
lahf
mov
mov
imul
or
inc
adc
ret
(bad)
retf
xchg
sub
out
add
dec
cmp
movs
pushf
lea
lds
call
jne
dec
jp
les
mov
xlat
daa
pushf
add
cmp
inc
push
clc
es
xchg
dec
out
aad
xlat
call
xchg
scas
add
inc
int3
jmp
call
(bad)
enter
movs
mov
cmc
mov
pop
data16
cli
push
(bad)
mov
nop
arpl
push
cmc
mov
std
dec
xchg
ret
ret
(bad)
test
jecxz
mov
and
std
js
lods
push
jb
sahf
mov
test
dec
pop
pop
xor
inc
add
mov
adc
push
ret
jbe
clc
rol
js
add
jno
and
repnz
mov
xchg
mov
dec
mov
cwde
and
repnz
mov
dec
icebp
hlt
imul
test
sbb
ins
cli
movs
jne
mov
jge
xor
jecxz
aad
push
test
hlt
or
icebp
push
xor
loop
xor
mov
xchg
ror
sbb
mov
pop
inc
jl
sbb
mov
xchg
add
push
mov
test
imul
shl
sbb
or
not
arpl
push
xchg
xor
repnz
test
adc
fistp
(bad)
sub
out
popa
mov
cdq
cmp
inc
pop
push
les
jbe
sti
add
dec
call
in
iret
(bad)
xor
xor
xor
jb
cmp
cmp
cmc
cmp
icebp
int3
inc
and
inc
xchg
dec
pop
adc
push
pop
adc
sbb
push
mov
sub
cdq
retf
inc
jo
data16
rcl
add
pusha
sbb
mov
clc
clc
ret
mov
sar
jo
stos
sbb
nop
out
shr
xor
fisub
jno
scas
cmp
test
adc
sti
sbb
mov
popf
mov
jnp
outs
pop
inc
dec
and
sub
popa
rcr
stos
(bad)
test
mov
into
into
push
rcr
mov
into
aad
and
inc
shl
jmp
push
scas
mov
mov
cmp
ror
mov
xor
outs
mov
cli
mov
mov
adc
cmp
pop
idiv
sbb
outs
loopne
out
cmps
sbb
stc
inc
and
xchg
sub
addr16
dec
aam
xlat
sub
lods
adc
fucom
retf
aas
inc
movhps
push
xlat
(bad)
cmps
sbb
lds
es
pop
xor
dec
lea
pop
and
push
lods
jne
inc
outs
dec
dec
sbb
out
loopne
cld
sahf
(bad)
adc
jmp
pop
inc
push
push
cmp
das
inc
and
push
(bad)
sbb
fisubr
and
ss
dec
lahf
outs
inc
aam
imul
or
pusha
stos
jae
push
out
lea
movs
xchg
outs
sub
movs
popf
(bad)
xchg
in
inc
scas
ret
add
push
mov
data16
xor
cli
popa
stos
jae
xchg
xchg
test
sub
inc
jle
(bad)
(bad)
in
lods
cmps
fwait
inc
adc
mov
sti
pop
ins
inc
mov
pop
ja
inc
pusha
mov
xlat
dec
sbb
ret
jl
jge
pop
add
add
jns
push
ins
call
daa
pushf
xchg
jge
and
jns
stc
imul
adc
das
sar
fdivr
sar
in
sahf
inc
cld
sbb
mov
pop
fucomi
jns
mov
and
inc
popf
cmps
push
sahf
movs
div
aas
int3
inc
jmp
imul
jmp
loop
pop
jmp
arpl
in
imul
mov
cmps
not
je
aaa
mov
mov
inc
xchg
lods
sbb
or
mov
leave
pop
xor
dec
adc
or
xchg
pop
cmp
cwde
stos
sbb
mov
je
ins
imul
mov
inc
dec
inc
inc
inc
jmp
jb
jnp
mov
(bad)
jle
cmp
dec
imul
fstp
lock
(bad)
loop
daa
fcomp
xor
push
and
test
mov
iret
es
les
icebp
mov
mov
inc
aad
dec
int
or
lahf
loope
mov
mov
retf
adc
xor
bound
push
in
adc
pop
jns
jp
mov
mov
mov
(bad)
into
repz
inc
loope
xor
fwait
dec
mov
or
sub
pop
das
sti
jp
stos
rol
icebp
nop
ds
cmp
lock
pop
mov
(bad)
movs
and
les
test
jo
stos
and
(bad)
imul
xchg
mov
sbb
cmp
and
sbb
dec
mov
aaa
sub
and
and
(bad)
fcom
sub
dec
test
dec
cdq
ins
push
(bad)
shr
retf
jg
adc
push
mov
dec
bound
and
pop
fstp
sub
daa
inc
sub
and
fisubr
mov
ret
das
test
sti
push
stos
xor
dec
mov
out
xchg
stos
std
retf
and
jae
fcomip
loopne
fwait
add
shr
mov
inc
mov
sbb
sub
dec
mov
mov
cs
push
sub
out
movs
repz
mov
mov
inc
stos
xlat
adc
(bad)
bound
pusha
sbb
adc
hlt
lahf
fcmove
addr16
adc
cmps
add
rcr
loop
call
lods
and
mov
pop
xor
scas
icebp
push
out
jmp
out
cmp
xchg
push
xchg
dec
and
push
imul
or
sbb
adc
or
mov
test
pop
call
dec
shl
lea
jl
mov
mov
pop
mov
pop
out
inc
aas
xor
iret
mov
inc
sbb
jae
daa
stc
cmc
ret
jecxz
mov
sti
inc
out
imul
loop
pop
inc
mov
push
push
in
dec
cmp
push
cwde
push
out
pop
or
dec
add
loop
xchg
ja
inc
inc
sbb
arpl
and
push
xchg
jge
mov
and
adc
push
jmp
dec
cmp
aaa
push
aaa
add
cmp
xor
ror
ror
pop
jmp
test
idiv
mov
adc
enter
adc
pusha
cs
jne
ss
out
jge
push
xor
cli
dec
out
ds
daa
mov
push
out
push
mov
xchg
sti
jnp
push
sar
push
cmps
jp
out
arpl
mov
add
ja
leave
mov
popa
mov
mov
sbb
ss
pop
mov
inc
cmp
mov
xchg
fsubrp
(bad)
mov
sbb
dec
xchg
and
iret
sbb
push
push
mov
jno
aaa
xlat
call
xchg
jns
cdq
mov
mov
data16
pushf
sti
daa
test
push
mov
dec
mov
fsubr
repnz
das
inc
xor
push
push
out
dec
or
call
cld
inc
iret
push
nop
sti
out
lahf
movs
test
xchg
cld
xchg
loope
cmp
(bad)
lock
out
ins
or
sar
cdq
cs
fistp
shl
nop
push
punpcklwd
or
iret
or
mov
enter
hlt
stos
enter
add
rol
mov
jmp
test
inc
push
jb
leave
cmp
push
lods
(bad)
adc
xchg
cmp
ret
lods
pop
leave
jmp
fs
in
movs
daa
inc
push
sbb
ds
call
sbb
(bad)
cli
xchg
stos
aam
xchg
adc
cwde
pop
cmp
adc
lods
or
and
and
dec
inc
js
jecxz
aaa
sbb
push
movs
adc
add
sbb
or
jg
push
xor
push
in
mov
xchg
int
lods
push
adc
push
imul
int
or
sahf
jge
fucomi
jmp
das
leave
sti
jg
cmps
push
(bad)
repz
das
pop
jmp
das
jmp
adc
mov
out
lahf
push
xchg
cld
sbb
leave
idiv
jns
inc
test
xchg
push
sbb
xor
dec
daa
jl
xchg
leave
mov
je
push
jecxz
repz
aad
sbb
out
sar
mov
jmp
jmp
fimul
test
mov
ja
cmps
daa
push
call
jg
mov
adc
scas
dec
loopne
inc
inc
fild
gs
inc
add
fist
icebp
add
popf
and
xor
push
stos
shl
packuswb
sbb
sar
aad
sbb
push
retf
loopne
dec
int
mov
sbb
loopne
inc
lods
icebp
cmp
loopne
push
rcl
mov
hlt
mov
xor
sbb
pop
mov
add
mov
cli
and
sub
mul
inc
pop
jbe
lahf
pop
shl
pop
mov
xor
clc
sbb
fst
xchg
fsub
stc
call
jp
pop
shr
pop
push
ficom
in
mov
clc
push
out
push
and
xlat
pushf
sti
pop
iret
mov
cmp
sub
arpl
sbb
repnz
cmp
add
fwait
mov
fld
minps
xchg
ss
shl
xchg
jle
xor
fbld
dec
lods
push
mov
sub
fidivr
jae
add
(bad)
lahf
add
jbe
sub
pop
mov
repnz
sbb
xlat
les
mov
mov
pop
ins
push
fmul
mov
jmp
mov
xor
cmp
pop
icebp
outs
scas
jmp
cmp
jnp
jmp
inc
in
dec
jmp
ja
in
frstor
imul
mov
xchg
cmps
popf
mov
xor
int3
in
sbb
je
test
xchg
jge
cs
inc
int
and
mov
and
jnp
out
mov
dec
nop
leave
sti
or
ret
dec
and
mov
cmps
neg
push
mov
cmp
popf
loope
pop
mov
pop
add
popa
call
mov
inc
pop
mov
xchg
iret
outs
sbb
(bad)
xchg
rcr
inc
sbb
inc
push
out
xor
jne
js
int
adc
sub
rcl
in
cs
into
jmp
cmc
mov
push
add
rcl
test
jnp
sbb
add
gs
add
xchg
in
bound
jge
cdq
or
std
(bad)
fld
gs
(bad)
sub
hlt
adc
neg
and
mov
push
sti
push
push
ffree
movs
fidivr
adc
cdq
out
or
dec
clc
mov
mov
int3
(bad)
es
and
sub
xchg
repz
mov
(bad)
jae
xor
xchg
pop
outs
and
into
jb
es
sti
dec
and
and
jo
rol
(bad)
je
pop
add
push
imul
imul
cli
ret
push
jecxz
cmp
fwait
lea
inc
or
inc
mov
dec
push
in
(bad)
dec
jmp
mov
pop
cmp
clc
xor
mov
(bad)
pop
cwde
jl
mov
rcr
inc
mov
das
dec
rcr
and
pop
ret
out
jecxz
imul
inc
adc
or
dec
cmps
mov
fldcw
dec
ret
push
jae
xor
out
push
jmp
cwde
sbb
ret
dec
shl
mov
sbb
(bad)
neg
jg
add
mov
xchg
xchg
sahf
aaa
pop
call
(bad)
repz
(bad)
ins
push
mov
or
mov
stc
test
scas
push
lods
dec
jns
mov
xor
(bad)
in
pop
mov
jg
cmp
mov
test
sbb
movs
mov
cmp
dec
or
sub
pop
adc
jmp
push
push
into
jecxz
jae
mov
cdq
jo
dec
dec
xor
les
cdq
mov
ins
sub
xor
int
xor
jne
fdiv
mov
and
and
xor
push
es
push
mov
inc
std
jne
xchg
pop
xor
inc
inc
sar
fcomi
call
and
dec
jns
mov
rol
int3
inc
sbb
sar
dec
push
clc
fnsave
popf
add
mov
mov
or
in
fucomp
daa
jl
das
cli
ja
repnz
call
or
sbb
and
xchg
clc
dec
pop
sbb
pop
mov
adc
push
cmp
adc
fsub
jns
mov
jecxz
add
mov
mov
mov
push
call
cs
xchg
add
fist
not
add
nop
xor
fnstsw
rol
rcl
or
push
sub
test
std
or
dec
hlt
std
(bad)
or
std
outs
(bad)
stos
xor
stos
pop
rcl
dec
pop
lea
xor
aad
mov
mov
lahf
in
cmp
pop
push
mov
movs
pop
aad
jmp
lods
sub
ins
out
imul
jge
push
jmp
pop
aam
dec
mov
mov
mov
lea
sbb
leave
xor
sub
cmp
test
jb
mov
aas
stos
mov
dec
lods
xchg
cmp
movs
in
fsubr
ja
push
cmc
jl
popf
jmp
iret
jg
mov
ja
dec
push
retf
jp
retf
pop
stos
pop
das
lods
gs
cwde
sub
fsubr
xchg
enter
inc
mov
xchg
sbb
dec
in
and
xchg
lods
or
push
push
sub
fadd
or
test
add
mov
mov
test
mov
xchg
mov
out
xchg
aam
mov
inc
arpl
fsubr
cmp
push
outs
psrad
mov
stos
jp
shl
out
jge
mov
mov
dec
lds
jo
mov
mov
mov
call
jp
cwde
jmp
adc
call
inc
push
mov
ins
cld
cmp
jle
repz
cmps
or
sub
test
pop
push
adc
xor
inc
xchg
sub
inc
mov
fs
int3
pop
fs
and
jno
sub
push
dec
shl
aaa
pop
cdq
bound
xor
adc
mov
adc
adc
mov
and
push
hlt
(bad)
xchg
mov
mov
pusha
cmp
retf
pop
push
jmp
aaa
mov
daa
mov
dec
mov
jbe
pop
pop
loop
in
adc
mov
loope
cmp
mov
jns
scas
repz
iret
pop
inc
shl
jg
icebp
jle
scas
mov
jmp
sti
adc
adc
lods
ret
jg
sub
inc
inc
fistp
mov
mov
adc
clc
ds
out
jb
(bad)
into
xor
out
pushf
div
add
xor
in
cmp
iret
jno
mov
outs
jb
mov
sub
sbb
icebp
rcl
loop
fcom
(bad)
bound
mov
sub
push
pop
test
xchg
sbb
mov
inc
out
push
jb
xor
push
lods
fild
inc
(bad)
stos
(bad)
mov
test
in
dec
cmp
popa
mov
dec
jg
out
jmp
push
(bad)
xchg
pusha
repz
into
mov
stos
cmp
jle
jl
push
stos
addr16
paddw
mov
push
dec
sub
imul
sbb
iret
jle
sahf
repz
dec
cmp
loope
adc
add
mov
mov
dec
or
outs
mov
loop
pop
adc
xor
push
and
adc
jns
mov
(bad)
nop
xor
mov
push
lock
stos
sbb
stos
fwait
stos
stos
mov
xchg
dec
imul
into
sahf
and
mov
inc
mov
sahf
movs
aam
fdivr
lods
aam
out
jle
(bad)
jp
sbb
push
xor
loope
cmps
ss
mov
and
and
aam
(bad)
pop
jmp
cmp
xchg
or
adc
dec
hlt
lds
or
stos
mov
adc
mov
out
fistp
push
test
push
mov
test
rcr
jle
dec
ja
jp
lahf
out
dec
hlt
add
ficom
not
xor
sti
jmp
and
es
or
cmps
stc
mov
call
sbb
es
sub
leave
nop
add
cmp
sti
push
ja
sbb
xchg
cs
jns
mov
xor
mov
imul
jbe
inc
cld
adc
jmp
lock
xchg
push
(bad)
mov
dec
cmp
call
stos
repz
xor
jnp
pushf
cmc
add
mov
cmp
push
xchg
mov
mov
es
bound
sti
mov
loop
or
inc
xchg
push
movs
das
push
out
in
mov
out
cmp
jle
popf
inc
outs
scas
ss
jp
xor
pop
jmp
xor
push
ins
xchg
pop
imul
lea
sub
lods
popf
aaa
push
mov
xor
cmc
inc
mov
data16
out
push
dec
ror
fmul
in
(bad)
in
imul
pushf
mov
sti
adc
loop
mov
in
or
jmp
cmp
lahf
arpl
cmp
xchg
xchg
cdq
loope
gs
xor
jl
cdq
sbb
dec
(bad)
cld
push
fwait
cmp
xor
dec
jmp
das
jp
out
mov
out
sbb
lgs
lods
cmp
(bad)
call
ss
cmp
mov
ja
test
adc
(bad)
adc
inc
mov
mov
jno
xor
mov
ret
nop
leave
pop
jmp
inc
jmp
es
add
mov
push
and
stos
nop
out
outs
fwait
inc
mov
(bad)
int3
mov
cmp
jns
xchg
iret
and
pop
inc
or
xor
gs
mov
into
mov
call
mov
das
rcl
sbb
int3
outs
je
mov
push
jecxz
popf
xchg
mul
retf
push
inc
adc
int3
sub
adc
push
cmp
idiv
stc
xchg
ss
lock
xchg
jle
loope
push
and
mov
sub
sub
and
jp
jns
jmp
je
inc
mov
fldcw
cld
adc
ror
lds
retf
sbb
loop
jp
xchg
lea
arpl
cdq
and
fsub
mov
jmp
pop
sub
xchg
and
mov
or
inc
in
movs
iret
jmp
repz
or
out
jmp
pop
mov
je
dec
mov
and
jg
ins
cdq
jmp
cmc
mov
mov
rcl
nop
cmp
jmp
and
jns
stos
jae
dec
sbb
and
aad
call
jmp
(bad)
cld
jmp
fild
pop
outs
popf
xor
fsubr
sbb
pop
cmp
js
cli
arpl
test
(bad)
pushf
loope
fist
in
xor
into
jge
in
aam
imul
(bad)
push
ins
jle
jae
mov
das
mov
call
push
pop
aam
imul
loope
in
and
(bad)
pop
sub
jae
cli
push
ret
out
imul
fstp
mov
cdq
arpl
jl
mul
icebp
xor
and
push
inc
adc
pop
pop
jl
jae
add
mov
scas
mov
out
test
shl
call
xchg
pushf
or
sub
dec
loopne
pop
(bad)
jns
pop
or
shl
test
cli
int3
adc
test
stc
not
std
xor
jmp
das
jle
jbe
mov
retf
mov
call
pop
data16
jb
enter
xchg
xchg
(bad)
jno
sbb
pop
iret
in
push
jge
mov
add
fs
lock
lahf
pop
xchg
xchg
fbstp
aas
fbstp
call
cmc
dec
rcl
fdivr
repnz
es
sar
shl
ffreep
sbb
mov
jp
pop
shl
inc
icebp
cli
mov
shl
sbb
adc
popf
ins
(bad)
clc
scas
ret
dec
(bad)
mov
sub
push
mov
cmp
sar
je
stos
and
push
mov
jmp
ret
test
(bad)
mov
pop
pop
jo
in
lods
mov
dec
iret
mov
mov
aaa
mov
nop
fist
xchg
pop
imul
push
jmp
popf
fsub
ins
mov
mov
jl
loope
dec
mov
daa
push
cld
mov
in
cmps
repz
ror
cmp
scas
jle
call
adc
sub
nop
rol
mov
or
cmp
pop
out
mov
mov
lods
mov
add
inc
scas
sbb
enter
fstp
add
jnp
xchg
repnz
or
xchg
fnsave
inc
cmps
idiv
je
inc
fnstcw
imul
pop
cmps
out
std
fdivr
aad
push
std
das
das
ds
fstp
(bad)
mov
fs
mov
arpl
repz
cmp
xchg
ja
cmp
fs
push
rol
call
sar
das
std
mov
retf
jle
ds
jmp
lods
sbb
inc
aaa
das
cmp
lods
shl
cld
nop
cs
cmp
ds
inc
xchg
imul
or
mov
aad
jmp
or
out
fimul
lods
jg
shr
lods
fidiv
clc
int
pop
pop
pop
popf
mov
pop
(bad)
jmp
dec
xchg
stc
sub
stc
xor
ds
lock
into
scas
dec
pop
cmp
mov
xor
ds
in
mov
cmp
in
or
pop
mov
and
es
mov
shl
sbb
clc
test
fisub
fstp
stc
pop
outs
repz
xchg
inc
inc
out
jge
push
jp
dec
and
mov
jne
fidiv
ja
jne
pusha
loope
inc
or
push
ds
ret
fnsave
aam
jge
(bad)
xlat
dec
mov
xor
lock
(bad)
lahf
jp
lock
push
xlat
call
in
pop
ins
stos
jl
loopne
not
lods
dec
(bad)
(bad)
jne
xchg
xchg
jbe
repnz
cli
lods
mov
fistp
cs
lock
mov
adc
imul
push
cmp
add
je
inc
cli
into
dec
mul
xor
popf
jmp
xor
jle
pop
pop
stos
pop
mov
and
leave
sbb
and
movs
xchg
fisub
hlt
cmp
mov
pusha
je
fs
div
cmp
inc
sar
push
push
das
(bad)
out
into
ret
fild
pop
push
push
mov
jg
push
(bad)
push
dec
mov
pushf
into
pusha
cmp
stc
fwait
pop
clc
sub
mov
out
inc
addr16
lock
xor
fs
mov
jbe
clc
jno
cld
adc
ror
aas
dec
xchg
cs
xchg
repz
call
mov
dec
xchg
jb
retf
pop
cld
or
inc
outs
mov
cmps
xor
leave
pop
dec
(bad)
imul
xchg
in
paddw
mov
sub
push
call
shl
or
cmp
ss
or
ss
add
fldcw
out
cli
xor
mov
fst
imul
test
mov
fidiv
pop
pop
push
enter
mov
sub
aam
outs
lods
cmp
sar
lods
test
jmpw
cdq
push
jnp
mov
lods
and
sbb
fsubr
(bad)
or
mov
and
int3
add
or
xchg
test
mov
dec
in
add
cmps
mov
fmul
ins
sbb
dec
jmp
fmul
fwait
lds
xlat
fsubr
in
or
repz
sub
pop
or
and
pop
out
adc
rcr
gs
test
xchg
push
jmp
fsubr
push
not
out
mov
scas
jae
mov
xchg
mov
cmps
jbe
out
stc
mov
lea
or
push
push
out
pop
loope
out
ins
push
daa
add
xlat
loop
addr16
sar
ss
popf
loop
lods
jle
mov
fsubr
dec
push
cmps
pop
into
jbe
rol
ret
jo
gs
retf
fwait
in
adc
push
mov
pop
cmp
or
in
jno
jle
sub
ins
test
icebp
jp
das
and
clc
xor
addr16
and
pusha
cmp
dec
add
(bad)
adc
mov
popf
or
sub
push
jo
jo
jmp
cmp
jo
lock
shl
int3
push
ret
push
rcr
mov
div
in
xor
test
jno
psubb
sti
cmp
imul
fyl2x
enter
push
jecxz
sbb
movs
mov
test
mov
out
xchg
dec
call
jno
add
outs
test
xchg
jmp
ror
push
add
popf
mov
mov
getsec
cwde
pop
sbb
cmp
mov
jmp
jo
aam
jae
mov
dec
fcomp
xor
cmp
pusha
das
aaa
inc
int
or
adc
imul
rol
push
fimul
cli
xor
push
cwde
xchg
aaa
inc
fild
pop
mov
test
pop
loop
call
out
call
inc
dec
outs
sahf
or
mov
jns
mov
mov
sbb
jns
or
inc
jae
ins
sub
aaa
imul
mov
or
out
and
stc
push
mov
je
das
pop
pushf
ss
fbstp
mov
imul
mov
pop
bound
aam
fstp
inc
fld
test
or
in
and
fadd
dec
mov
mov
aam
ss
aam
in
(bad)
in
jae
jb
pop
dec
push
out
jecxz
call
aaa
in
fidivr
and
adc
fadd
cmp
aad
inc
sti
or
call
(bad)
mov
fstp
dec
adc
loope
test
int
pusha
xlat
or
inc
popf
(bad)
(bad)
enter
mov
outs
mov
inc
pop
stos
sbb
(bad)
cdq
jo
loope
jbe
and
push
ret
out
mov
dec
fisub
iret
xchg
sti
daa
ret
jg
repnz
xor
movs
cmp
lock
push
out
fs
aam
xchg
mov
add
rcr
adc
das
shl
xor
xor
mov
push
push
arpl
or
and
sub
lahf
or
test
adc
sub
ret
xchg
fidiv
sbb
mov
mov
mov
fld
test
adc
jb
mov
mov
sub
enter
popf
cmp
mov
pop
cmp
pop
ficomp
(bad)
in
out
sbb
pop
(bad)
retf
and
add
fdiv
inc
fmul
sub
ret
mov
in
fwait
and
fdiv
cld
sahf
mov
pop
les
(bad)
adc
and
fadd
(bad)
mov
and
adc
mov
mov
sbb
fnstcw
dec
adc
xor
loope
in
push
rol
jge
jne
push
add
mov
gs
test
xor
mov
mov
xchg
cs
pop
sbb
popa
dec
(bad)
xor
(bad)
loopne
sbb
(bad)
add
in
fs
adc
sub
mov
aad
cld
jl
jmp
int
(bad)
adc
and
jbe
mov
jne
cmps
or
adc
mov
cmp
fadd
in
sbb
adc
mov
cmc
pusha
(bad)
pop
(bad)
ss
ins
sbb
cmp
stos
push
push
mov
cmp
stos
sbb
mov
inc
mov
aad
std
cmc
cmp
lods
inc
mov
test
pop
test
push
sbb
sbb
or
inc
xor
ss
sti
fs
xchg
fadd
pop
int3
or
test
lods
pop
movd
xchg
aad
mov
mov
and
cwde
lods
add
rcl
inc
aam
mov
adc
stos
add
adc
add
dec
push
jnp
mov
jg
push
and
sbb
xor
loope
pop
div
push
jne
sub
or
int
xchg
fild
cmp
mov
shl
and
lahf
adc
arpl
dec
dec
ins
or
adc
ficom
aad
mov
loop
mov
xchg
add
aad
std
retf
icebp
in
and
icebp
sbb
fwait
and
dec
push
movs
or
pop
mov
sub
je
push
push
add
mov
into
inc
fldenv
out
push
in
inc
jle
cdq
sbb
outs
retf
daa
inc
cmp
xchg
loop
sbb
aas
inc
aam
cdq
sbb
lds
rol
mov
daa
icebp
or
dec
jecxz
repz
or
inc
xor
into
mov
xchg
dec
loop
iret
cli
xchg
fs
adc
adc
or
fnstsw
fimul
retf
dec
jae
jnp
mov
std
sahf
out
xchg
gs
inc
inc
repnz
in
jp
pop
ins
sub
addr16
xchg
or
add
mov
mov
cmp
cwde
adc
stos
fistp
ror
lock
pusha
add
add
fadd
rcr
cmp
dec
ficom
fistp
cmp
lock
sbb
popa
(bad)
nop
add
dec
test
or
and
mov
jne
test
int3
pusha
cmps
inc
xchg
add
addr16
into
jle
pop
into
(bad)
and
xchg
xchg
cmp
imul
or
(bad)
mov
aaa
add
and
sbb
mov
ins
call
sbb
ins
ret
pop
xchg
sub
mov
jge
hlt
cmp
in
pop
shl
lahf
enter
fwait
test
or
dec
push
dec
sbb
mov
inc
int
test
popa
fwait
std
jmp
mov
push
test
ret
dec
add
and
jno
push
sar
add
inc
ret
outs
adc
mov
jmp
mov
shl
leave
pushf
daa
cld
cdq
lock
sbb
shr
lods
(bad)
jp
pop
popf
sbb
adc
mov
cmp
dec
xor
adc
clc
sbb
xor
cmp
add
mov
fisub
not
nop
xchg
fsubr
or
lds
sub
jle
in
cmp
add
xor
cmp
push
adc
or
sub
cdq
mov
cmp
pushf
inc
leave
cmp
mov
dec
or
test
scas
adc
and
lock
js
aaa
mov
dec
sub
adc
(bad)
jp
add
adc
aas
shr
or
adc
inc
mov
mov
iret
mov
add
lahf
mov
cmp
sbb
out
mov
(bad)
div
loope
inc
into
int3
mov
cmp
jmp
pop
sub
add
ss
cmp
pop
or
loope
fmul
div
lock
pop
mov
loopne
and
push
je
xchg
pop
and
scas
test
mov
inc
pop
xchg
mov
sbb
jmp
es
idiv
add
ins
aaa
sbb
sti
retf
les
xor
shr
rcl
push
jo
(bad)
leave
rcl
mov
add
test
or
and
aaa
sbb
sub
sub
and
add
sbb
jbe
xchg
pop
js
push
or
and
or
fucom
dec
in
adc
adc
add
xor
addr16
sar
loope
push
out
push
push
jp
add
(bad)
loope
rol
mov
shr
mov
adc
jmp
out
mov
jl
jo
and
pop
adc
inc
loop
(bad)
jbe
cmp
xor
jge
adc
sbb
mov
mov
into
fild
retf
mov
add
test
lods
add
mov
add
mov
pop
mov
jmp
pusha
shr
ins
stos
imul
xor
hlt
(bad)
mov
test
ss
push
in
mov
xor
push
xlat
xchg
xchg
push
int
std
les
test
sar
xchg
or
aad
movs
xor
ret
add
(bad)
adc
mov
add
push
jecxz
mov
mov
sar
daa
loope
ret
(bad)
adc
mov
lock
or
mov
call
inc
fadd
mov
add
inc
dec
adc
cmc
test
loopne
inc
js
lock
outs
adc
adc
mov
mov
jg
iret
lea
mov
mov
loope
sbb
daa
inc
outs
add
and
loopne
push
ja
sti
inc
ret
push
loope
add
sub
popa
dec
or
mov
push
pop
sbb
mov
loope
ret
outs
nop
int3
cmp
test
outs
daa
cmp
jae
lock
sub
test
cli
sub
jmp
outs
test
push
(bad)
inc
mov
ins
inc
cwde
inc
fcomp
ret
mov
xchg
adc
in
out
fmul
adc
inc
adc
dec
fcomp
mov
jo
loope
test
adc
cmp
mov
adc
out
dec
repnz
out
arpl
xchg
hlt
cmp
cwde
fiadd
or
out
out
xchg
fwait
test
pop
mov
adc
enter
inc
add
out
test
jge
test
xor
ds
mov
push
jecxz
pop
or
xor
mov
retf
gs
imul
mov
mov
pop
inc
dec
xchg
test
add
pushf
test
in
mov
fisttp
popf
ja
inc
xor
mov
cmp
and
pop
inc
or
loope
sub
inc
mov
enter
xchg
dec
in
sub
cdq
jmp
or
add
sbb
aaa
mov
jbe
mov
(bad)
sub
neg
push
mov
in
add
test
lahf
call
lds
idiv
xor
loope
mov
(bad)
ds
adc
xchg
test
push
ins
test
stos
adc
adc
cmp
sub
xchg
and
mov
mov
adc
mov
test
inc
sub
(bad)
into
movs
stos
test
je
dec
and
fdiv
out
adc
jmp
jp
cld
shr
sub
inc
in
icebp
lods
sbb
jge
jmp
jp
aad
mov
push
out
mov
xor
push
xor
call
test
sub
mov
sti
in
xchg
ret
cmp
push
push
push
in
repz
or
push
cmps
xchg
pop
push
push
xor
scas
mov
dec
cmps
(bad)
test
fstp
retf
mov
mov
cdq
inc
addr16
iret
or
cmp
test
mov
cmps
cli
jp
mov
mov
xor
mov
pop
outs
int3
inc
aaa
push
bound
outs
(bad)
push
xor
mov
ficomp
mov
(bad)
xchg
sbb
add
dec
in
mov
js
fstp
mov
loopne
ins
outs
int
or
cld
test
stos
nop
test
and
xchg
xlat
push
clc
fld
mov
les
mov
test
push
xchg
mov
or
ret
sub
(bad)
(bad)
cmp
xchg
daa
rcl
and
mov
mov
test
mov
out
(bad)
(bad)
adc
push
les
push
pop
loop
pop
push
xchg
fiadd
in
cmc
xchg
test
sub
rol
jbe
pusha
push
or
pop
jmp
pop
sbb
push
pop
mov
jno
mov
mov
dec
cld
into
fimul
xchg
mov
add
jae
or
outs
jbe
cmps
ds
stos
push
ja
mov
push
dec
outs
icebp
rol
js
dec
nop
dec
pop
adc
nop
mov
fs
fisttp
out
sub
dec
inc
fisttp
retf
(bad)
adc
in
and
mov
ins
pop
das
xor
pop
mov
hlt
gs
add
sbb
jnp
std
fsub
fisub
in
push
dec
fucomi
std
pop
fiadd
mov
jmp
sahf
mov
ficomp
jl
aaa
or
sub
xchg
(bad)
out
daa
test
inc
cmp
aam
movs
jne
push
idiv
cmp
loope
inc
lods
dec
stos
loope
retf
push
sub
cmp
sti
and
mov
inc
mov
cdq
cli
sbb
arpl
add
sbb
jp
clc
sub
cmps
or
push
(bad)
in
inc
pop
xchg
test
shr
mov
xchg
pop
int
daa
pop
ror
mov
fist
add
aad
cld
scas
jns
xchg
rol
cld
mov
int3
cmp
push
push
xchg
fwait
cmp
retf
jecxz
push
clc
movs
pop
jle
fdiv
pop
xchg
mov
xchg
test
push
jmp
inc
jge
cld
test
pop
ss
push
out
pusha
retf
add
pop
idiv
or
retf
in
ss
xchg
jge
jae
and
add
xor
add
jne
add
fisttp
ins
mov
mov
enter
sub
mov
mov
test
inc
jne
cmps
push
ret
push
fcmovnbe
adc
inc
jecxz
xchg
lea
scas
inc
dec
sbb
jmp
(bad)
lods
jmp
movs
and
jbe
pop
xor
ja
sub
arpl
lahf
adc
arpl
pop
es
jae
cli
pop
cmp
and
ds
xchg
sub
push
(bad)
sub
jmp
cwde
cmps
pop
(bad)
out
jne
out
cmps
sahf
jbe
into
cli
or
cwde
(bad)
or
sub
cmp
fs
(bad)
push
sbb
fnstcw
ins
(bad)
pop
ins
mov
int3
adc
inc
mov
cmps
(bad)
adc
jne
sbb
pop
mov
jle
outs
cmp
mov
iret
mov
popa
arpl
push
(bad)
(bad)
(bad)
addr16
mov
pop
ret
mov
ss
and
push
jbe
inc
inc
(bad)
ss
arpl
or
sub
arpl
pop
xor
retf
dec
(bad)
pop
into
loop
or
mov
sub
sbb
retf
std
pusha
ficom
adc
mov
int
call
dec
cmp
fisttp
cwde
es
in
fisub
mov
inc
push
xor
test
cmp
aad
mov
or
xchg
clc
mov
shl
mov
xor
dec
lea
(bad)
mov
out
jmp
imul
cmps
and
jmp
in
pop
retf
dec
retf
mov
inc
test
scas
addr16
pop
loopne
rol
or
adc
fsubr
je
mov
or
sbb
xchg
retf
inc
jbe
mov
std
loope
test
xchg
mov
data16
mov
imul
ja
inc
dec
xchg
fld
ins
(bad)
pushw
mov
cld
xchg
xor
in
lods
(bad)
mov
pop
ins
mov
fcom
pop
cmps
jo
mov
pop
dec
dec
add
add
aas
cmp
cmp
dec
cmps
jae
dec
jge
xlat
cmps
aaa
jbe
icebp
push
fcmovnbe
pop
cmp
cli
test
pop
mov
mov
pop
inc
stos
repz
jmp
pop
fdivr
and
dec
aad
push
dec
in
mov
fadd
jp
je
sub
(bad)
push
fild
pop
cmps
(bad)
adc
push
aaa
sbb
fs
test
enter
lds
les
in
pop
retf
jae
adc
mov
sub
cmps
mov
sbb
jns
xor
(bad)
dec
cmps
mov
sbb
inc
xchg
sub
fwait
mov
ins
out
daa
fsubr
movs
push
sahf
pusha
repz
mov
out
jbe
cmps
ds
sbb
cmp
call
fist
out
push
sub
gs
not
lods
fstp
jge
push
push
jnp
or
imul
mov
adc
xor
or
sbb
sahf
gs
fwait
sub
(bad)
lods
cmps
fsub
jge
repz
xchg
jb
ret
icebp
aad
jl
stc
add
sub
cdq
jmp
aas
mov
xor
xor
jmp
mov
aas
xor
sahf
inc
or
cld
aam
(bad)
dec
ins
xor
icebp
outs
cdq
dec
popf
xlat
pop
stc
xor
outs
test
mov
sar
pop
jns
sub
or
pop
popf
mov
xor
mov
pop
pop
and
je
gs
sub
jmp
push
(bad)
or
jmp
rol
sbb
push
sub
in
fnsave
or
mov
push
gs
push
js
sbb
dec
into
mov
jmp
repz
pushf
push
sub
stc
sub
in
enter
rep
clc
lea
call
push
pop
aas
jge
jbe
mov
cmp
cmps
dec
add
cmp
stos
pop
(bad)
jno
jge
(bad)
cmp
mov
xchg
fs
sti
inc
jne
xlat
sahf
out
xchg
sub
test
gs
test
stc
enter
jns
movs
dec
add
out
retf
xchg
mov
jle
and
xchg
inc
imul
mov
mov
dec
std
and
dec
cld
mov
fbstp
mov
pop
xchg
test
aad
mov
mov
call
sbb
jg
fs
ds
cmps
(bad)
aam
or
mov
push
pop
stc
(bad)
aad
sbb
xor
out
(bad)
test
call
jae
pop
das
pop
cmps
cdq
stc
repz
jmp
adc
lock
jmp
popf
mov
into
xchg
stos
cmc
push
jge
(bad)
mov
inc
push
jno
push
push
addr16
stc
arpl
stc
(bad)
std
fmul
(bad)
cld
int3
mov
sbb
pop
lea
dec
scas
push
arpl
les
ret
aam
cmp
xchg
ins
push
jae
xor
mov
test
loope
jle
adc
xor
out
ret
in
cwde
mov
mov
lods
lods
scas
ja
lock
lahf
(bad)
jg
ror
sti
push
mov
call
sub
scas
push
fdiv
push
sbb
push
loope
jecxz
sub
(bad)
fsub
test
and
add
mov
movs
test
or
jp
mov
cmc
or
mov
jecxz
mov
lds
iret
push
leave
xchg
imul
pop
jmp
cmc
sub
mov
push
sbb
jbe
loopne
pusha
xchg
data16
adc
dec
jne
out
mov
iret
fld
xor
sub
ja
mov
push
sub
loope
mov
mov
sub
(bad)
and
aaa
sbb
jp
pop
in
push
and
push
push
xor
dec
xchg
test
data16
loope
xlat
stos
jl
dec
push
out
cld
fmul
mov
pop
fstp
movs
push
fbstp
jl
cmc
xchg
lahf
mov
jp
mov
dec
gs
dec
jne
mov
mov
dec
cmp
mov
cmp
rcr
xlat
jnp
xchg
cmps
sbb
add
stos
inc
cmps
fisub
jmp
jg
pop
(bad)
int
fisubr
out
fist
push
inc
aam
mul
sbb
xchg
sbb
jo
ror
push
jnp
ds
ds
jae
sub
pop
imul
cli
retf
iret
daa
jmp
mov
iret
ss
stos
icebp
inc
inc
mov
add
push
shr
scas
dec
js
and
add
aas
add
sbb
fs
xchg
cmp
xchg
test
popf
mov
outs
aaa
xchg
addr16
jo
loope
xchg
into
cmps
sbb
and
das
clc
ins
cdq
repnz
mov
cmp
adc
sbb
pop
add
xchg
neg
pop
xchg
push
push
sbb
sar
aas
jne
push
outs
inc
mov
mov
lock
out
test
dec
popa
daa
mov
adc
cmp
xchg
adc
add
retf
test
xor
cmp
cdq
das
icebp
outs
cmps
xchg
jge
sub
ins
cmp
int3
ss
xlat
loopne
or
addr16
sbb
popf
mov
jno
(bad)
jmp
jnp
loope
xchg
add
cld
or
fistp
ret
jnp
jl
and
sub
int
out
inc
out
mov
call
add
and
or
ds
clc
imul
outs
and
mov
stos
jno
sti
mov
mov
in
sbb
cli
ds
arpl
xchg
jns
out
shr
leave
cld
xor
jno
outs
nop
stc
jecxz
aas
or
test
sti
push
jno
imul
gs
in
adc
cli
mov
xchg
in
inc
pushf
test
push
jl
sbb
jge
cmp
sub
and
sbb
(bad)
lds
loop
daa
sbb
test
mov
xchg
test
sub
cmp
mov
and
mov
repnz
shl
sbb
jne
push
pop
push
dec
cld
xlat
xchg
push
repnz
fsub
sub
pop
cmp
mov
pop
xchg
inc
inc
mov
aad
loop
stos
sbb
in
cmp
xchg
rcl
sti
adc
stc
cmp
pop
push
adc
popf
xchg
mov
mov
adc
and
mov
push
stc
push
cmps
sub
iret
or
pop
jecxz
dec
fsubr
test
mov
stos
cmps
out
sar
and
sub
push
jb
inc
das
jae
dec
sbb
dec
mov
mov
movs
push
sub
mov
arpl
rcr
ins
iret
aas
movs
inc
in
cdq
dec
popa
dec
xchg
add
test
push
call
mov
fwait
popf
sub
retf
in
in
xchg
pop
(bad)
sub
lds
inc
pop
int3
movs
out
push
aaa
hlt
lea
in
pop
inc
(bad)
aas
repz
out
sub
in
(bad)
daa
dec
xor
std
jg
mov
adc
out
add
stc
call
movs
popa
inc
xchg
push
inc
push
imul
mov
sub
mov
or
pop
xchg
push
cmp
cmc
adc
add
cmc
dec
inc
out
hlt
push
mov
lods
jl
mov
and
jg
scas
xchg
lds
xor
xchg
pop
pop
sbb
mov
jge
push
leave
fbstp
rol
rcl
(bad)
fadd
std
sbb
lea
lods
and
xor
in
pop
dec
mov
aaa
push
inc
or
and
daa
cdq
ins
movs
jae
inc
xchg
cmp
xlat
enter
iret
outs
nop
out
cmp
mov
mov
cmp
stos
popa
arpl
arpl
clc
(bad)
call
(bad)
push
ret
sub
mov
aas
cmp
xlat
xchg
mov
push
xchg
mov
ja
jg
ficomp
call
xchg
into
xchg
dec
adc
js
jecxz
cli
cmp
dec
imul
sbb
fnsave
push
cmp
mov
into
(bad)
popa
test
or
add
sbb
push
ret
dec
adc
lods
mov
out
ret
stos
or
adc
cdq
mov
push
test
push
in
push
add
lds
cli
pop
or
test
test
mov
sahf
ret
inc
adc
adc
pop
scas
mov
addr16
das
mov
retf
ror
fimul
cdq
movs
popa
es
ins
repz
lods
dec
fild
std
cwde
ss
fwait
push
sar
and
dec
outs
add
inc
jb
fsave
mov
gs
outs
bound
(bad)
les
dec
pop
je
movs
sbb
mov
out
dec
sbb
lods
jnp
(bad)
push
inc
sbb
aaa
xlat
aaa
int3
mov
cmp
cmp
(bad)
fld
clc
pop
jb
mov
jp
fbld
in
jne
sar
cdq
rcr
jo
into
mov
(bad)
cli
test
repz
jp
sbb
jg
cmp
pushf
hlt
int3
add
pop
jb
ja
fdiv
mov
push
mov
fsubr
call
mov
fist
jb
xlat
mov
std
sar
xor
je
(bad)
ja
std
fnstsw
cmps
std
or
mov
jae
jno
cmc
iret
out
les
lds
movs
cmp
push
mov
mov
inc
outs
fnstsw
push
add
mov
ret
(bad)
mov
push
sub
cdq
mov
jge
fisttp
outs
inc
mov
lock
fistp
push
ret
xor
inc
enter
into
xor
push
popf
xor
ins
pop
popa
(bad)
xor
mov
dec
jnp
std
movs
mov
les
loop
or
jg
(bad)
out
push
pusha
push
popa
push
ret
inc
ret
add
movs
in
jmp
sbb
mov
pop
fistp
(bad)
adc
cdq
fucomip
cmp
retf
ss
fsubrp
xchg
and
mov
clc
push
retf
fs
mov
or
(bad)
sbb
cmp
cmp
mov
dec
xor
dec
mov
les
jmp
xlat
(bad)
adc
add
imul
lea
nop
push
sti
imul
xchg
jl
cmp
pop
aad
push
jnp
popa
push
sti
addr16
ins
push
ss
popa
pop
jg
std
loop
push
fs
aaa
ret
or
adc
in
and
out
scas
lea
retf
or
into
adc
xor
fnsave
cmp
ret
or
or
mov
jle
jne
sbb
test
in
sti
call
clc
ds
mov
mov
call
xchg
clc
inc
inc
fld
retf
xchg
xor
scas
mov
and
pushf
pop
push
jg
(bad)
mov
popa
dec
stc
pop
icebp
jge
push
(bad)
sbb
in
clc
mov
popa
inc
jae
int3
gs
inc
repnz
ret
sar
scas
mov
xchg
out
adc
sbb
test
fsub
add
pop
inc
fcmovbe
fldenv
xchg
sub
in
add
xchg
in
adc
cwde
inc
or
stos
repnz
xchg
cmp
cmps
pop
gs
inc
mov
fcmovnu
in
jle
jnp
jg
cld
pop
jbe
jg
les
or
neg
loop
and
and
arpl
add
xchg
mov
pop
add
xor
and
lea
xchg
in
xchg
in
inc
xchg
mov
scas
mov
movs
rcr
ret
loopne
aam
dec
movs
aas
lahf
sub
iret
xchg
mov
or
jl
mov
pop
lea
push
fdiv
mov
inc
mov
push
daa
rcr
mov
sar
lods
sub
fisub
add
arpl
jno
cmps
mov
dec
js
ins
add
cmps
sbb
mov
into
popa
ret
mov
add
fxam
and
or
and
mov
stc
sahf
add
idiv
push
push
fisttp
jne
xor
sbb
and
aam
mov
jbe
pusha
sbb
xchg
in
sub
add
sbb
mov
inc
not
inc
sub
ins
jecxz
push
pop
adc
lahf
bound
mov
mov
sbb
xor
and
retf
ret
ss
mov
das
loopne
imul
mov
es
jbe
xchg
xor
mov
sbb
call
out
sub
aam
push
dec
sub
daa
adc
add
or
mov
sub
add
sub
ins
xchg
icebp
push
test
fst
loope
scas
and
push
aaa
fistp
movs
mov
fnsave
pop
xor
push
clc
popa
in
cmp
movs
mov
fst
dec
loope
inc
jl
push
retf
mov
test
mov
jo
jge
cmp
cld
add
in
add
ror
dec
test
cmp
fstp
lock
adc
adc
cmp
repz
add
mov
(bad)
push
(bad)
iret
(bad)
(bad)
jbe
addr16
rcl
mov
movs
out
jb
mov
imul
sub
inc
sub
vpmaxsw
add
xchg
and
cwde
fldenv
push
rol
mov
mov
fadd
mov
ja
adc
imul
sub
lods
mov
cs
ja
test
lea
push
rcl
scas
ficom
loop
add
sbb
inc
cmps
sbb
jnp
je
inc
cs
(bad)
repz
arpl
sar
cdq
fisubr
popf
cmp
jp
out
popa
inc
cmps
add
xchg
ds
xchg
or
xchg
popf
or
lea
cmp
dec
mov
out
ds
sub
into
jmp
retf
jns
out
cs
cdq
inc
cmp
or
rcl
popf
lahf
lock
in
cmp
xor
pop
inc
ficom
popf
out
mov
mov
imul
and
pop
mov
sti
ins
xlat
fstp
shr
popf
pop
xchg
jns
loope
iret
pop
mov
jnp
mov
mov
sbb
push
es
jp
into
xor
popf
mov
jnp
movs
loope
fstp
push
mov
or
add
shl
push
loop
add
call
sbb
xchg
repz
inc
or
xor
std
push
ror
and
jg
stos
les
pop
push
js
inc
push
ret
dec
mov
sub
pushf
clc
mov
jne
xchg
cmc
sub
inc
mov
pushf
pop
inc
cmp
sub
mov
(bad)
out
push
or
clc
scas
pop
jg
ja
jnp
fsub
cdq
rcl
out
add
imul
xchg
mov
ret
and
sub
and
mov
addr16
xor
nop
retf
dec
push
jp
jo
loopne
shr
adc
out
jnp
dec
test
inc
(bad)
in
sbb
and
lock
and
leave
or
sbb
repz
hlt
fcomp
hlt
jg
lock
loopne
inc
cmp
sbb
inc
xchg
cmp
xchg
mov
pop
xlat
inc
mov
dec
cmp
adc
xchg
xor
mov
scas
dec
mov
cmp
mov
jmp
mov
retf
xchg
cli
cmp
out
outs
in
lds
fcom
rol
add
adc
add
jo
xor
dec
add
jnp
lock
pshufw
mov
sub
add
mov
xor
jno
outs
loopne
(bad)
push
jg
inc
std
jns
cs
mov
clc
jns
xchg
div
stos
sbb
mov
sbb
jno
jno
xchg
jle
aaa
cmp
push
pushf
mov
das
repz
shr
fucom
push
dec
outs
cmps
ret
fmul
jmp
add
sub
sar
add
cmp
mov
pop
aaa
pop
lock
out
or
xor
mov
dec
ja
outs
retfw
hlt
cwde
rcl
cmp
mov
or
ins
mov
cli
add
jg
push
lahf
push
jl
sbb
sub
pusha
das
ret
das
cmps
adc
(bad)
ror
or
xor
cmps
sbb
push
loopne
or
repz
xchg
rcr
or
icebp
push
or
mov
aaa
xchg
imul
inc
sub
or
or
pop
data16
sub
popa
stos
mov
(bad)
mov
fwait
lea
jecxz
(bad)
adc
out
pop
cmp
pop
add
int3
clc
xor
dec
jecxz
and
and
das
add
mov
ds
jecxz
shr
adc
outs
sbb
mov
and
lds
fwait
mov
inc
sbb
mov
xor
add
cmp
add
outs
push
push
add
pusha
pop
add
daa
add
and
inc
test
icebp
test
ss
mov
sti
or
pop
jp
mov
les
mov
adc
xchg
outs
sub
addr16
sub
push
adc
inc
ss
push
shl
test
mov
push
push
test
rcr
sbb
mov
popf
cmp
ja
aam
repnz
jmp
and
add
aas
mov
gs
(bad)
xlat
out
adc
push
loope
mov
xor
(bad)
iret
add
call
jg
fld
out
mov
or
jmp
dec
and
ss
dec
xchg
sbb
push
fld
in
shr
push
in
inc
cld
(bad)
in
dec
out
jb
das
and
inc
pushf
ins
in
daa
mov
dec
mov
ret
xchg
loope
pusha
test
out
ret
pop
in
repz
das
add
sti
sbb
scas
push
iret
repz
neg
add
xchg
inc
inc
mov
inc
test
outs
pop
retf
scas
inc
xlat
es
and
jns
sti
and
fld
push
mov
and
ret
scas
shl
xchg
or
cmp
add
cmp
jecxz
test
outs
xchg
pop
(bad)
mov
shl
xor
(bad)
mov
(bad)
jg
mov
xchg
loopne
cmp
add
dec
pop
add
inc
out
loop
cmps
push
add
mov
pop
pusha
mov
test
(bad)
or
pop
xchg
fist
jbe
xchg
and
lods
popf
mov
cdq
fstp
fstp
lea
out
mov
fnstsw
jnp
sti
jnp
mov
add
jbe
test
mov
out
jge
cli
push
xchg
xchg
dec
lods
inc
mov
call
nop
xchg
rcl
mov
clc
push
icebp
add
das
(bad)
(bad)
mov
test
pop
mov
cld
jmp
in
jmp
push
xchg
xor
fsubr
jns
in
dec
(bad)
jne
pop
xchg
cld
pop
and
retf
xchg
sub
imul
in
pop
(bad)
in
push
xchg
push
xchg
push
xchg
sahf
sub
lods
hlt
jp
out
pop
das
jge
hlt
sub
hlt
lods
shl
dec
aas
cs
mov
aas
sub
lods
sub
jle
jmp
pop
mov
(bad)
jl
mov
retf
push
retf
outs
xchg
cmp
mov
mov
outs
sub
pop
mov
imul
neg
fstp
outs
ins
jg
sti
lahf
outs
call
idiv
cmp
ror
cld
mov
repz
pop
(bad)
out
mov
jg
repz
fidivr
xor
int3
adc
popa
rep
out
int3
jg
(bad)
sub
inc
out
mov
test
jle
push
jg
jb
test
push
sub
dec
xchg
mov
and
push
and
arpl
dec
add
jno
in
pop
aaa
mov
daa
lea
cmp
sbb
fiadd
mov
jmp
(bad)
iret
xlat
sbb
mov
int3
jmp
mov
xor
fist
repz
jae
mov
add
sub
enter
cli
retf
adc
inc
cld
in
mov
pop
sahf
xchg
sti
bound
dec
xchg
imul
dec
sahf
cmp
cmc
mov
jmp
and
movs
pop
(bad)
jmp
pop
(bad)
addr16
dec
jo
jae
mov
cmp
mov
jg
jmp
call
not
pop
jge
enter
mov
jne
test
in
(bad)
mov
pop
mov
mov
jo
cmp
out
sub
fdivr
aad
mov
scas
xlat
hlt
jp
aam
or
repnz
mov
ja
jmp
idiv
cs
sub
fwait
jg
or
inc
int3
xor
jg
pop
call
fnsave
rol
push
mov
rol
pop
mov
sbb
pop
fistp
enter
sub
popf
(bad)
jb
test
mov
mov
stos
lds
dec
lods
inc
jecxz
mov
jmp
push
mov
pop
mov
lds
mov
sub
pop
and
adc
and
add
or
sbb
inc
test
mov
mov
js
dec
lea
sbb
cli
mov
int3
sub
jmp
(bad)
mov
or
outs
push
jno
adc
js
mov
(bad)
sub
in
sbb
pop
jg
jg
sbb
les
mov
inc
xchg
cmps
mov
sub
jne
shl
add
retf
in
repnz
scas
test
mov
adc
(bad)
mov
push
xlat
loope
jle
not
or
sbb
js
(bad)
mov
int
retf
ja
(bad)
mov
dec
pop
jmp
mov
pop
jl
clc
sub
test
cli
das
mov
fwait
lods
(bad)
fcmovnbe
push
push
fnstcw
iret
retf
push
ins
sub
jbe
fwait
mov
push
mov
test
mov
cmc
neg
jecxz
pop
or
mov
sub
outs
movs
jno
push
mov
aas
mov
addr16
sub
ret
mov
mov
out
pop
test
(bad)
mov
shl
mov
cwde
movs
dec
cld
cmps
ret
test
lds
outs
sbb
pop
mov
loopne
mov
mov
(bad)
shl
(bad)
shl
(bad)
mov
cli
xchg
icebp
ja
pop
ss
sbb
das
jmp
loopne
push
jecxz
jecxz
xor
xchg
pop
(bad)
mov
loopne
scas
aad
fldcw
into
dec
(bad)
outs
mov
out
shr
into
jle
sub
mov
sub
pop
out
push
mov
out
hlt
mov
jecxz
mov
jp
mov
adc
fnstsw
jecxz
(bad)
std
inc
std
iret
or
aaa
out
test
ffree
mov
call
mul
idiv
jg
std
mov
jb
clc
xlat
pop
mov
sbb
xchg
js
sub
jne
fdivr
or
sub
push
and
shl
or
enter
mov
loope
xchg
mov
mov
cmp
lea
iret
fild
inc
hlt
mov
in
and
xor
pop
inc
inc
sti
rcr
xchg
cli
sub
dec
repz
dec
(bad)
jns
mov
bndldx
fstp
jo
jnp
shl
loope
mov
lods
xchg
sti
pushf
push
inc
jle
stos
xor
into
inc
sbb
dec
and
xchg
push
xor
jecxz
rcr
or
jp
addr16
or
sub
push
icebp
test
push
lahf
jb
into
xchg
mul
aad
jae
ret
xchg
nop
xchg
bound
jbe
inc
out
out
lods
add
inc
jne
cmp
xor
jmp
cmp
dec
cmp
out
jb
jae
mov
and
pusha
mov
mov
xchg
icebp
loope
fmul
cmp
mov
sti
ds
cmp
leave
in
scas
std
std
rcr
sti
das
jge
sub
lahf
fdivr
xchg
fld
js
out
ds
daa
(bad)
out
pop
outs
imul
in
add
(bad)
icebp
leave
add
imul
jle
jnp
mov
ret
mov
jns
xor
mov
cdq
movs
add
popa
jge
fs
jecxz
fwait
xchg
dec
jmp
cli
cmps
loopne
sub
jnp
fadd
call
stc
(bad)
fld
push
cmp
(bad)
sbb
push
xor
mov
cld
ja
dec
sub
xor
sub
mov
jmp
xor
aad
(bad)
movs
ror
mov
addr16
aam
push
add
arpl
(bad)
test
xchg
mov
out
pusha
jns
fistp
jle
out
and
arpl
pop
pop
lods
das
sbb
mov
ror
dec
cmp
xor
rcl
dec
pop
mov
push
jge
inc
rcr
cdq
ins
sbb
mov
inc
or
fdivp
jge
leave
outs
xchg
jnp
mov
inc
bound
sbb
lock
aas
clc
fsubr
inc
mov
mov
pop
xchg
xor
sbb
mov
or
and
mov
jg
imul
call
arpl
stos
and
jne
sbb
add
push
inc
mov
push
aad
ror
ds
mov
lock
pop
jno
out
mov
retf
sbb
cmps
mov
sub
mov
(bad)
cmps
stos
rcl
xchg
icebp
movs
jecxz
push
in
retf
movs
mov
retf
add
movs
test
dec
sti
ss
lds
lea
sbb
into
push
ror
iret
out
stos
and
call
cmps
fistp
retf
pusha
push
mov
inc
inc
xor
jl
push
in
push
and
cs
push
push
or
or
push
and
ja
push
sbb
push
xchg
xor
ror
outs
jl
out
rcr
jg
sub
and
mov
aam
repz
imul
loope
pusha
push
pop
arpl
ins
imul
pop
sbb
les
sbb
cmp
(bad)
call
fdivr
outs
xor
mov
jne
or
sar
xor
xchg
push
(bad)
in
mov
retf
xor
js
adc
pop
dec
aaa
add
popf
call
cmp
mov
jnp
and
iret
(bad)
neg
imul
aam
(bad)
jp
and
push
pop
inc
and
adc
rcr
data16
and
sub
enter
or
inc
mov
cmc
or
stos
lods
in
outs
cmp
popf
fidivr
sbb
aam
ror
and
shl
adc
in
retf
sub
add
out
cmp
lods
stos
ins
aaa
call
call
(bad)
push
lea
sbb
stos
cmp
rcl
pop
pop
mov
out
xchg
cmp
jb
sar
adc
jnp
call
(bad)
push
scas
fcomp
mov
icebp
arpl
push
(bad)
mov
xchg
fwait
xchg
lods
(bad)
pop
out
scas
dec
jp
aad
mov
dec
out
lods
repnz
pop
jmp
xchg
sahf
lods
xchg
xor
loope
(bad)
mov
push
les
pop
or
xor
lods
mov
jo
pop
fdiv
aaa
cmps
repz
rol
inc
jge
jnp
inc
aam
or
dec
rol
sbb
push
pop
in
(bad)
push
ins
inc
cmp
sbb
push
push
xchg
out
lods
call
and
pop
not
jge
pop
stos
mov
mov
jmp
pop
mov
in
sub
das
outs
scas
stos
sub
add
stos
aaa
xchg
push
das
imul
mov
(bad)
jnp
push
xchg
and
and
cmps
cmps
(bad)
cmp
push
dec
clc
aaa
sahf
sub
mov
push
aas
add
push
ins
cmc
test
(bad)
xchg
in
aas
jo
repnz
loopne
cdq
aas
dec
jmp
sahf
ret
jp
call
test
imul
jne
loop
and
scas
imul
hlt
jp
js
outs
mov
jo
jbe
pushf
xor
xchg
(bad)
cmc
inc
out
inc
pop
cdq
or
ret
mov
pop
sbb
pop
and
in
scas
mov
mov
scas
popf
pop
lea
push
fiadd
mov
dec
xor
cmp
mov
cmp
push
cmp
inc
jo
sbb
ret
cmp
stos
cmp
sbb
stos
sbb
lea
sub
sub
mov
test
idiv
not
ins
fldenv
stos
inc
dec
inc
push
rol
push
in
jmp
call
arpl
mov
jmp
ins
jp
mov
gs
jne
imul
cmp
(bad)
jmp
scas
ins
mov
xlat
into
(bad)
test
cmp
popa
jnp
xor
je
jbe
sub
(bad)
std
jmp
dec
sbb
in
xchg
mov
xchg
push
lods
stos
mov
push
and
inc
mov
iret
aaa
aaa
ret
and
dec
inc
sbb
xchg
mov
mov
cdq
into
mov
sbb
lods
(bad)
jg
stos
imul
ja
mov
popf
scas
retf
xchg
mov
sti
or
mov
(bad)
in
jp
add
xor
xlat
adc
fs
jno
add
sbb
adc
movs
xchg
(bad)
stos
xchg
ss
jle
and
aas
mov
bound
and
push
mov
ret
aad
stc
mov
das
stos
inc
xor
mov
inc
cmp
sbb
jne
cmp
mov
dec
xor
unpckhps
xchg
stos
mov
arpl
int
dec
test
adc
add
or
cmp
mov
xor
push
xlat
pop
aad
(bad)
mov
mov
fidiv
icebp
sahf
inc
cmp
sti
cmc
out
sbb
ins
fisttp
inc
xchg
popa
daa
mov
rol
inc
pop
push
int
jp
out
ret
dec
ret
sbb
cmp
movs
adc
out
add
push
jge
out
mov
push
xchg
mov
int3
nop
push
sub
mov
ficom
mov
inc
std
mov
add
retf
mov
leave
mov
sub
mov
stos
lods
stos
outs
xlat
inc
or
ret
cdq
jb
jnp
jae
jne
sub
sbb
push
mov
xchg
cmp
(bad)
pop
pop
jp
xchg
bt
test
jecxz
dec
movs
xchg
push
sbb
shl
(bad)
je
jmp
pop
inc
jae
lahf
ja
add
loopne
out
gs
mov
add
sbb
gs
dec
jp
push
fidivr
jp
mov
add
cmp
mov
ja
cmp
in
(bad)
int3
dec
loopne
retf
mov
test
ja
fwait
rcr
mov
jbe
shl
or
mov
ret
pop
movs
cwde
(bad)
icebp
xchg
dec
outs
xor
stos
ja
push
cmc
rcl
inc
(bad)
mov
mov
out
into
fistp
hlt
popf
in
cmp
jp
inc
fisttp
pop
mov
jns
ins
mov
lahf
outs
push
mov
inc
and
sbb
mov
dec
jns
jb
adc
and
sbb
adc
sub
or
add
pop
pop
xor
jbe
and
pop
sbb
sub
shr
les
mov
push
scas
jo
adc
mov
xor
adc
mov
int3
and
fdiv
mov
cmc
jne
mov
test
cmp
js
cmp
dec
stos
gs
dec
movs
jecxz
mov
or
ror
not
cmp
pop
xchg
nop
and
iret
sbb
pop
popa
xchg
jne
and
dec
test
les
repz
add
pop
and
xchg
add
mov
ja
daa
inc
dec
test
push
sbb
pop
or
cwde
jmp
pop
lea
in
adc
or
adc
jl
xchg
sbb
mov
ss
add
push
scas
mov
push
movs
push
pop
std
xor
dec
fstp
cmps
and
out
inc
rcr
ficom
aam
jl
or
dec
sub
push
push
cmp
sti
in
pop
jnp
pop
push
cmps
pop
(bad)
xor
leave
in
jb
pop
in
fs
in
scas
lea
xor
mov
push
mov
or
ss
xchg
cmp
daa
inc
dec
mov
outs
push
jg
xor
mov
adc
sub
and
jne
mov
adc
retf
inc
mov
add
scas
cmp
mov
in
jae
xor
mov
xchg
test
adc
mov
xchg
push
daa
cwde
repnz
iret
stc
xor
push
aaa
and
cmc
mov
dec
push
inc
add
scas
adc
fidiv
xchg
cmc
pop
sub
arpl
xor
xchg
xor
ins
sbb
mov
jne
in
aaa
(bad)
shl
mov
or
xchg
jae
test
dec
or
arpl
push
into
sbb
xchg
nop
in
scas
aas
outs
mov
ror
and
push
dec
sbb
(bad)
das
ror
add
fmul
ret
sbb
(bad)
cmp
mov
pusha
int3
pop
test
call
movs
xchg
out
(bad)
xor
enter
sbb
ficom
dec
sub
push
(bad)
push
iret
popf
cld
dec
ds
daa
rcr
fstp
sahf
cs
mov
jp
test
outs
test
scas
adc
dec
int
lods
push
aad
out
into
stos
(bad)
sahf
lods
pop
scas
jbe
jae
rcl
fcom
push
aad
mov
add
jae
push
pop
pop
jae
dec
jns
gs
inc
imul
arpl
call
ret
pop
mov
bound
movs
jp
lahf
sbb
pop
vpackuswb
or
cmp
fcom
xchg
xor
jle
cmp
(bad)
stc
(bad)
rcr
imul
gs
and
les
outs
push
je
dec
push
sbb
sbb
and
push
mov
dec
lock
(bad)
bound
push
cmp
sahf
or
push
pop
mov
gs
adc
xchg
mov
addr16
fiadd
js
sbb
pop
jbe
add
sbb
adc
int
mov
push
lock
out
push
adc
fs
mov
rcl
and
sbb
mov
in
mov
out
cmp
dec
(bad)
dec
and
sub
cdq
daa
mov
mov
xor
and
adc
and
call
fcom
inc
push
xchg
lahf
inc
cmps
mov
movs
outs
dec
inc
or
in
scas
sub
mov
push
inc
pusha
mov
or
push
lock
aas
retf
ret
stc
rcl
add
ds
jge
test
imul
and
clc
idiv
(bad)
sub
rol
jle
jae
hlt
cmp
cdq
push
xor
cmps
xchg
out
cmp
ret
dec
jmp
(bad)
ret
push
imul
mov
xchg
cs
jecxz
xchg
iret
mov
jge
test
test
bound
cli
popa
pop
cmps
jge
xchg
repnz
push
push
xchg
inc
xchg
jg
xchg
mov
push
es
popa
sbb
shl
mov
mov
xchg
ret
test
push
inc
ds
adc
sbb
enter
xchg
lahf
mov
adc
cmc
xchg
dec
mov
sub
int
pop
xchg
clc
jmp
nop
(bad)
hlt
cmp
pushf
ja
pop
repnz
or
pop
pop
xlat
jb
add
push
out
stc
movs
jnp
mov
lods
sahf
push
and
in
or
pop
inc
mov
stos
scas
gs
adc
push
mov
mov
inc
xchg
jnp
ins
push
loope
int3
jne
cdq
loope
jo
loop
sbb
dec
add
mov
dec
popf
jb
ret
add
sbb
or
inc
and
xchg
sar
jne
push
or
test
xor
repz
(bad)
inc
in
test
sbb
cld
or
inc
daa
mov
and
cmp
pop
sbb
jno
dec
inc
test
inc
cli
fcomp
lea
pop
test
loope
gs
repz
dec
mov
or
pop
sub
jno
mov
sub
cmps
push
cmp
xor
fisttp
inc
icebp
or
std
pcmpgtb
xor
bound
xor
jmp
jle
dec
je
cli
ja
hlt
jge
loop
cmc
sbb
not
adc
jl
call
aam
cld
push
dec
imul
movs
lock
jecxz
aam
(bad)
cmc
out
cmp
repz
jg
hlt
xlat
or
inc
jl
scas
retf
icebp
jle
jmp
jle
out
shr
test
loope
std
or
aaa
std
mov
and
pop
stc
ror
jmp
ds
retf
push
fs
shr
mov
sahf
hlt
ret
cmp
sub
mov
push
rcr
push
pop
retf
cli
fisubr
popa
and
repnz
jp
call
icebp
call
movs
add
or
(bad)
dec
xor
inc
inc
(bad)
sbb
in
push
mov
pop
outs
jmp
pop
std
call
fisub
add
call
cmp
adc
mov
popf
in
imul
cmp
std
mov
imul
frstor
and
jns
mov
out
repz
fsubrp
add
xlat
int3
mov
fcomp
adc
adc
icebp
mov
mov
or
retf
add
jno
add
(bad)
pop
loope
xchg
fst
inc
sub
push
fidivr
add
push
mov
neg
fs
pop
push
pop
sahf
repnz
sub
push
cmps
xchg
repnz
mov
jb
pop
je
adc
jge
push
shl
or
hlt
popf
mov
ds
add
dec
int
das
shl
outs
stos
cmp
pop
stos
push
fsubr
cs
int
add
xchg
dec
dec
retf
and
pop
out
add
or
out
sti
xchg
rol
sbb
sbb
and
shl
out
lods
and
mov
pop
push
pop
aad
or
cmp
sbb
adc
fs
mov
push
popa
or
and
mov
jne
fbld
mov
jecxz
pop
cmp
test
add
dec
gs
out
mul
cmp
mov
jnp
and
mov
ins
mov
jecxz
je
ss
lea
pop
ret
pop
sub
mov
push
mov
test
in
movs
clc
stos
dec
cmp
sub
in
test
movs
cmp
mov
xchg
sub
int3
mov
dec
scas
cmp
cmp
xchg
jae
pop
aas
cmps
dec
jl
fnstenv
ror
push
scas
xor
pop
imul
push
cmp
jp
mov
push
fisubr
dec
jns
lock
fist
mov
cmc
outs
xor
jl
cwde
lods
add
mov
sub
sub
loop
call
xor
fs
and
dec
scas
sbb
scas
mov
sub
and
shl
xchg
aad
retf
xor
jbe
adc
mov
test
fcomp
push
scas
ret
lea
lahf
pusha
shr
(bad)
dec
mov
add
jp
push
call
or
std
xor
sub
aam
enter
ret
mov
mov
and
cmp
cmp
sub
(bad)
mov
adc
outs
in
stos
sti
imul
fdiv
loopne
rcr
mov
cmp
sbb
je
lods
mov
lea
pushf
jo
test
push
pop
mov
pop
push
cld
jae
sbb
sti
inc
pop
push
pusha
mov
repnz
shr
fidivr
add
je
movs
jl
inc
inc
retf
cmp
xor
mov
cmps
mov
jmp
dec
or
sti
xor
(bad)
sub
cld
push
lea
and
cmc
outs
mov
out
cmp
or
add
adc
jge
sub
scas
jnp
push
in
cs
sub
mov
add
into
mov
in
pop
sbb
stos
xchg
icebp
mov
inc
call
test
out
pop
stos
sti
lods
or
xor
cmps
lock
repnz
dec
sbb
addr16
loop
jp
jno
push
shr
sbb
dec
outs
dec
and
xor
mov
sbb
adc
pop
popa
pop
test
mov
jle
xor
mov
aaa
fldenv
xchg
out
loopne
and
cmps
pop
popa
cmp
push
xor
in
ja
xor
adc
lea
inc
mov
jns
jge
aad
pop
je
push
scas
cmp
push
or
pop
out
jae
mov
sub
xlat
dec
jp
adc
fcom
push
and
inc
sahf
push
push
or
aaa
ds
jae
mov
dec
test
jmp
dec
dec
push
cmps
jne
ds
iret
retf
repnz
xchg
mov
or
lock
mov
in
popfw
addr16
dec
cmp
inc
cdq
mov
rol
pushf
in
push
cmp
dec
xor
jge
dec
imul
mov
mov
aas
or
arpl
lahf
icebp
and
pop
jo
adc
push
pusha
les
dec
das
cmp
cmovle
cmp
dec
das
cmp
dec
das
cmp
(bad)
dec
das
cmp
(bad)
dec
das
cmp
(bad)
dec
das
cmp
(bad)
dec
das
cmp
dec
int3
cmp
iret
cwde
dec
adc
jmp
inc
jl
leave
fldcw
push
add
and
mov
cwde
inc
mov
and
test
pop
rcl
adc
cmp
push
and
jmp
push
push
xchg
(bad)
ja
mov
scas
test
or
loope
test
cmps
cmps
cmp
cmp
int
retf
imul
and
imul
movs
inc
cmp
xor
data16
push
addr16
fisubr
in
mov
adc
dec
scas
pop
es
(bad)
and
sbb
pop
xor
in
jns
xchg
int
cdq
pop
lds
xor
ins
add
add
cmps
std
dec
lahf
aaa
(bad)
push
inc
je
ins
cmp
scas
cmp
addr16
jb
ror
movs
jle
ds
and
pusha
cmps
aad
xchg
inc
cmps
xor
adc
or
mov
mov
or
mov
add
push
mov
sbb
stos
push
and
ins
push
mov
xlat
fst
mov
dec
sbb
add
adc
sar
mov
nop
loopne
popa
add
mov
sbb
mov
mov
jbe
dec
add
sub
mov
mov
sbb
scas
mov
xor
cmp
add
lea
aaa
dec
shl
mov
mov
cmps
mov
sahf
cmp
mov
sar
outs
inc
sub
lock
fdiv
mov
adc
sub
aam
imul
cli
mov
jge
xor
push
cdq
sub
imul
sub
mov
cmp
sub
ins
imul
xchg
xchg
jbe
outs
push
mov
add
fs
les
push
gs
es
pop
ja
sbb
lods
cmp
cwde
adc
int3
dec
cdq
retf
mov
adc
outs
ror
push
xchg
mov
test
das
pop
lahf
jns
pop
mov
cmp
mov
mov
daa
iret
(bad)
mov
call
int
in
dec
xor
mov
adc
cli
shl
rsm
(bad)
xor
xchg
jne
das
(bad)
dec
cmps
aam
cmp
rcr
das
sar
sub
mov
addr16
sbb
inc
push
push
mov
fs
jne
stos
mov
push
gs
push
xlat
cmps
stos
pop
rcl
push
jg
aad
mov
xchg
push
jns
mov
not
cmp
ds
lods
adc
ficomp
xor
cmp
cwde
jl
pop
pushf
sar
xchg
fimul
test
jp
push
idiv
and
mov
adc
dec
sub
cld
dec
cmp
(bad)
pop
or
inc
mov
(bad)
pushf
fisttp
(bad)
and
enter
jns
popa
es
aam
test
mov
(bad)
mov
xor
push
jb
scas
mov
inc
std
pop
jne
jo
xor
sbb
(bad)
xchg
adc
jmp
int
adc
push
fmul
xchg
ret
sub
dec
xor
in
and
pop
sbb
cmp
push
mov
loop
rcr
cmps
mov
push
dec
mov
ror
or
out
fisub
dec
retf
inc
cmps
and
xor
movs
jge
cmp
inc
popa
xchg
loop
and
(bad)
jns
cdq
mov
xchg
mov
aas
out
jb
ror
mov
mov
adc
gs
leave
push
aam
fisttp
push
fwait
mov
mov
into
adc
icebp
fs
push
sub
cmp
call
aad
rol
pop
push
push
push
mov
cmp
mov
cmp
cld
lahf
cmp
ja
in
dec
mov
mov
out
(bad)
xlat
mov
jo
imul
repz
jle
jbe
fistp
repnz
add
jne
pop
mov
fcmovne
mul
outs
mov
xchg
stc
inc
jg
adc
pop
and
sbb
pop
dec
jge
sahf
lahf
mov
cmp
xchg
aaa
mov
in
and
(bad)
jecxz
inc
and
mov
xchg
cdq
push
mov
(bad)
loope
pop
xor
rcr
pop
add
ror
mov
test
pop
xchg
aam
cmps
xor
push
xchg
xor
push
jns
out
sbb
and
sub
jmp
(bad)
ds
or
in
or
sti
repz
xlat
mov
xor
loopne
frstor
pop
adc
clc
rol
adc
jle
dec
out
xor
arpl
xchg
fmul
test
mov
sbb
fisubr
jb
mov
jbe
xor
jnp
jb
imul
out
push
aas
add
jg
ret
jae
ss
test
sbb
push
or
cli
mov
jle
add
leave
sub
mov
cwde
hlt
mov
addr16
or
adc
adc
fld
mov
dec
push
lds
cmps
push
sub
pop
jmp
aas
out
outs
mov
cwde
inc
cs
pop
mov
xor
xchg
sahf
ja
pop
iret
lock
mov
mov
hlt
mov
gs
mov
es
fwait
or
mov
scas
mov
cmp
sbb
push
xchg
inc
(bad)
jmp
(bad)
repz
out
and
push
ins
pop
pop
xor
jmp
ins
stos
inc
jne
aad
int
sub
pop
jecxz
or
addr16
cmp
lahf
push
aam
in
scas
pusha
mov
xor
in
scas
sbb
hlt
adc
adc
jl
mov
push
out
adc
popa
stos
mov
ret
inc
jge
call
pop
jge
and
cmc
ror
cmps
pop
dec
popf
push
js
fbstp
ds
xchg
fwait
inc
jnp
sbb
addr16
test
pop
fwait
les
jo
(bad)
js
hlt
push
or
lea
push
loop
push
xor
and
cmp
xchg
inc
xor
jge
cmps
dec
dec
mov
sbb
int
les
cld
pop
push
push
mov
push
retf
xor
test
push
pop
inc
pop
scas
shl
ret
retf
sub
dec
inc
sbb
fsubr
idiv
inc
ds
shl
mov
xchg
imul
cld
ja
mov
mov
(bad)
call
mov
jmp
xchg
je
popf
or
ret
jmp
fxch
push
(bad)
mov
jb
mov
jmp
mov
outs
pop
cli
shr
sub
mov
pusha
test
xchg
mov
mov
js
movs
leave
cli
sub
shl
jecxz
xor
js
fisub
push
gs
aam
pop
je
loop
push
jmp
pop
fisubr
cs
or
lds
pop
xchg
or
ins
stos
pop
mov
push
push
push
mov
mov
dec
mov
push
in
sub
mov
fistp
repnz
mov
in
call
popa
inc
gs
retf
movs
icebp
loope
shr
jp
pop
out
outs
sti
add
dec
xchg
in
mov
sub
sbb
jg
and
add
mov
adc
push
fwait
jb
mov
aaa
jl
aas
mov
lea
or
push
(bad)
sub
or
adc
dec
dec
and
fistp
movs
pop
cmps
adc
addr16
sbb
jp
fnstsw
popf
hlt
hlt
lahf
inc
mov
(bad)
mov
jb
mov
test
adc
push
mov
cmps
xor
retf
cmp
ror
inc
adc
dec
not
mov
cmc
dec
jno
and
push
and
dec
mov
das
fsubr
inc
mov
lods
mov
dec
or
ins
hlt
lea
xchg
mov
or
rcl
movs
xchg
pop
xchg
int
jp
imul
and
sahf
clc
xchg
mov
ret
cmp
mov
mov
ret
fild
push
mov
fwait
pushf
jnp
retf
push
idiv
dec
pop
xchg
ds
cmps
fdiv
push
and
imul
in
pop
aaa
(bad)
rcr
arpl
xchg
xlat
aam
enter
ja
push
movs
cdq
inc
sub
mov
inc
mov
lahf
mov
vmovhps
fimul
mov
cmp
ror
cmp
(bad)
aam
push
gs
push
sar
movaps
dec
adc
cmc
ret
adc
into
add
in
shl
dec
push
out
ret
sub
adc
cli
dec
sbb
add
dec
and
xor
dec
shr
popa
jnp
push
push
pushf
jnp
add
inc
mov
mov
stos
push
call
add
xlat
add
aaa
fisttp
jb
and
push
iret
movs
or
or
test
xchg
sub
mov
into
push
movs
push
sub
lea
xor
lahf
adc
or
mov
(bad)
add
mov
mov
bound
push
add
dec
(bad)
psubw
test
push
dec
shr
scas
nop
jecxz
xchg
pop
and
jo
and
fwait
cwde
in
sub
jmp
es
std
xchg
cld
test
nop
dec
fadd
retf
jmp
mov
mov
xchg
pop
repz
(bad)
dec
jns
inc
dec
add
cmp
mov
in
in
cdq
repz
mov
adc
cmc
cmp
mov
or
movs
adc
xchg
pop
sbb
sahf
inc
xlat
out
loopne
mov
popf
rcr
lds
dec
neg
sub
inc
adc
rcr
lahf
addr16
cli
in
jmp
adc
test
lahf
dec
(bad)
std
pop
dec
rol
call
ds
jns
sahf
call
pop
sub
loop
je
pop
adc
jnp
stc
jns
jne
mul
mov
call
mov
shr
pop
icebp
xchg
ror
movs
iret
test
lea
mov
pop
sbb
and
and
fisubr
fnstsw
xchg
test
adc
jp
and
fstp
sbb
daa
sar
jb
call
iret
push
shr
call
sub
push
push
stos
push
xor
ja
jg
lock
ds
loope
sub
fidiv
adc
cwde
test
pop
xchg
adc
add
or
into
xchg
retf
mov
and
mov
dec
arpl
dec
sbb
and
ret
jae
ja
cmp
fist
inc
pop
sbb
(bad)
xchg
cdq
sub
mov
icebp
mov
jb
add
and
arpl
jmp
je
xor
out
cdq
retf
fcom
sub
sbb
push
sti
xchg
in
mov
iret
or
or
out
or
sbb
(bad)
jnp
std
iret
push
cdq
(bad)
mov
adc
mov
fistp
enter
arpl
jns
and
out
ss
mov
pop
shr
jbe
outs
cmp
dec
ja
jnp
icebp
das
mov
mov
out
fcom
jbe
mov
fisttp
test
inc
mov
pop
loope
(bad)
out
jno
ja
cmp
ret
cs
mov
xchg
mov
cmp
cmc
xchg
mov
dec
jnp
cmp
jne
mov
movs
(bad)
mov
fnsave
inc
out
sar
cmp
popf
ret
sub
mov
mov
jl
add
popa
loopne
cmp
loop
xor
fsub
out
push
arpl
mov
mov
ins
out
das
lods
jb
lods
arpl
aad
ja
sti
mov
sti
(bad)
add
popa
repz
retf
mov
shr
ja
jne
jnp
jnp
push
and
or
lods
add
mov
out
pop
push
test
add
dec
div
xor
in
pop
retf
mov
mov
fst
pop
or
push
fild
int
cmps
mov
sti
or
pop
loop
imul
push
mov
jp
icebp
xchg
jnp
mov
icebp
arpl
sub
mov
in
sub
cwde
ds
mov
ror
int3
add
aaa
fsub
das
pop
dec
fadd
sbb
sahf
jg
cs
popf
sub
sti
mov
xor
mov
jmp
mov
xor
js
add
push
jo
add
mov
mov
fimul
in
sbb
cmp
inc
push
je
mov
ins
jo
xor
jae
jae
inc
(bad)
mov
push
mov
sbb
sub
loope
push
and
cmp
mov
sbb
mul
lods
jo
mov
outs
add
jne
xlat
shl
test
mov
retf
mov
jae
sbb
jp
dec
xor
xor
fcmove
ins
xchg
imul
fmul
xor
stos
fild
sbb
or
shl
pop
jmp
jb
ins
call
inc
ret
push
outs
aam
test
sbb
(bad)
sbb
ret
push
mov
mov
fstp
jle
sahf
sub
in
mov
add
pop
das
nop
cmc
mov
xchg
pop
cwde
lahf
mov
adc
cdq
outs
out
mov
fild
push
pop
pop
adc
addr16
mov
jnp
cwde
cwde
add
cmp
xor
cmp
pop
xchg
test
fs
int
ja
ins
ja
pop
fwait
iret
pop
daa
loopne
cmc
pusha
jecxz
arpl
lea
xor
xchg
pop
(bad)
xor
cld
inc
inc
outs
or
pop
add
lahf
mov
add
fwait
cwde
dec
sar
xchg
popa
dec
das
shr
jle
pop
jmp
sahf
xchg
inc
outs
pop
sbb
xor
mov
out
mov
fwait
mov
or
call
mov
out
retf
std
xor
cmp
xor
sbb
callw
mov
aam
add
retf
loop
mov
fbstp
inc
mov
dec
pop
clc
jae
cdq
inc
clc
aaa
mov
clc
or
fcmovnu
dec
mov
and
adc
ja
fmul
or
jnp
mov
in
jge
les
jno
cmp
sahf
xchg
sbb
pop
jmp
aaa
sar
shl
test
pushf
mov
stc
push
xor
scas
call
fdiv
out
retf
out
sar
mov
pop
fwait
sti
cmps
push
mov
fnsave
mov
xor
std
mov
pop
lock
(bad)
stos
jbe
out
mov
fst
pop
xor
ja
hlt
jl
jno
repnz
fstp
pushf
dec
mov
mov
dec
or
add
jb
mov
jno
push
aaa
inc
mov
mov
cmp
add
addr16
mov
cmp
fwait
fwait
jo
dec
(bad)
icebp
cmp
sub
jbe
mov
ret
(bad)
(bad)
xor
gs
lods
mov
jnp
cs
cdq
rol
rol
out
stos
xor
push
jbe
repz
mov
jnp
mov
ror
mov
loope
lods
into
push
arpl
mov
push
jae
mov
cmp
push
call
cmp
push
js
sbb
or
sub
sbb
xor
mov
and
sahf
(bad)
cld
or
aas
xor
sahf
dec
xor
sub
pop
in
sub
xor
push
mov
js
frstor
pop
push
mov
jne
lods
mov
sub
mov
sbb
add
jecxz
loopne
fld
pop
xor
pop
jbe
jnp
adc
adc
sub
inc
push
ins
xchg
xchg
mov
in
ins
mov
mov
jge
sbb
icebp
data16
sbb
aas
xor
jne
jecxz
xchg
mov
cmp
and
inc
jp
cld
push
inc
inc
aaa
in
aad
and
mov
js
mov
xchg
stos
loopne
popf
push
pop
out
addr16
adc
push
jae
push
or
leave
(bad)
jmp
(bad)
loop
xor
repnz
xor
add
cmp
iret
mov
sti
pop
mov
lock
xor
xor
(bad)
dec
mov
pop
(bad)
fisttp
mov
dec
cmp
jae
int3
mov
xor
mov
sub
cmp
mov
cmps
iret
or
test
dec
fmul
int3
add
fbld
sbb
cmps
mov
xor
test
scas
loop
push
cs
push
(bad)
enter
cli
push
pop
ror
sub
mov
in
and
repnz
add
pop
or
sbb
ins
mov
jns
nop
inc
div
mov
mov
aaa
repnz
ja
addr16
ja
fst
mov
inc
int3
cmp
cmp
ja
push
addr16
inc
mov
test
or
dec
rcr
and
fsubr
(bad)
dec
ds
iret
ret
aam
add
jbe
push
xchg
pop
or
mov
xor
add
jo
jne
(bad)
js
mov
sti
lahf
inc
fwait
dec
lock
push
add
or
sbb
xlat
sbb
ja
lahf
mov
movs
adc
jecxz
inc
lahf
add
pop
movs
out
int
int3
mov
out
rcl
sub
ret
loopne
movs
lds
mov
or
mov
jbe
xchg
fist
sbb
push
addr16
lods
push
jg
in
inc
dec
rol
lea
inc
sbb
scas
pusha
mov
add
repz
sbb
aad
jmp
mov
andnps
sar
add
retf
pop
or
xor
addr16
sub
jge
dec
inc
jbe
adc
jo
shr
mov
dec
xlat
and
ja
sti
cmp
out
xchg
fsub
popa
in
xchg
jg
sahf
inc
mov
stos
dec
(bad)
jnp
push
or
mov
ds
ins
mov
inc
inc
push
pop
imul
arpl
fadd
cmp
jb
mov
adc
outs
adc
inc
(bad)
and
mov
inc
je
(bad)
mov
dec
sahf
xchg
xor
adc
cdq
fild
data16
mov
xor
jg
sahf
fistp
and
ins
aam
pop
mov
or
cli
xchg
stc
mov
sbb
das
bound
rcl
sub
jp
inc
out
or
inc
shr
push
dec
fbstp
je
ss
jo
sub
jns
adc
push
ja
call
inc
retf
mov
(bad)
ret
mov
and
add
sub
mov
fld
pop
mov
dec
pop
mov
cmp
adc
cmp
popf
test
mov
fsubr
dec
imul
mov
outs
shl
loopne
dec
mov
xchg
movs
(bad)
jp
mov
cmp
lods
rcl
mov
cmp
mov
dec
fmul
ret
sub
imul
ds
adc
bswap
fisttp
sahf
das
adc
lods
add
adc
loop
and
(bad)
nop
xchg
int3
and
mov
cld
popa
pop
aas
outs
aad
out
mov
and
in
push
out
arpl
std
lea
jnp
sub
pop
add
mov
sbb
cmp
push
(bad)
int3
jno
xchg
outs
fldenv
xchg
add
add
push
mov
cli
pop
int
(bad)
fstp
iret
fwait
mov
out
add
xchg
retf
xor
dec
idiv
push
stos
or
xchg
mov
xchg
xor
mov
cwde
fisttp
or
cwde
jae
ds
out
ficomp
popa
movd
mov
cli
push
jae
mov
mov
inc
jecxz
jp
sub
xchg
mov
outs
or
test
mov
xchg
cli
xor
ret
mov
scas
jbe
fsubr
dec
add
repz
ficomp
int
test
ret
jmp
jmp
mov
stos
jo
sbb
jecxz
cmp
test
xor
(bad)
rol
mul
mov
push
mov
add
dec
inc
psllq
jns
push
fild
xchg
in
dec
mov
and
dec
inc
mov
rcl
aam
add
mov
scas
call
movs
sbb
cmp
stos
nop
pushf
sub
adc
xchg
jne
ret
sub
fild
sub
cmp
mov
cmp
stos
fnsave
push
mov
inc
xor
xchg
inc
int
fld
adc
sub
dec
mov
imul
(bad)
(bad)
sbb
pop
mov
dec
mov
add
xor
cmp
and
aas
or
push
and
icebp
ja
lea
dec
cmc
dec
js
in
mov
(bad)
jmp
push
iret
test
aad
in
dec
xor
je
mov
pop
inc
scas
inc
aad
xlat
add
dec
jp
add
addr16
mov
std
push
mov
adc
cmovno
jmp
add
rcr
pop
fdiv
mov
(bad)
push
xor
push
add
pop
imul
inc
retf
fisttp
push
inc
test
fnstsw
xor
fdiv
inc
push
test
fadd
repz
(bad)
and
arpl
push
aad
xchg
hlt
ss
dec
push
arpl
xlat
pop
in
sbb
fcom
fild
aaa
or
outs
add
popa
sbb
in
int3
pop
push
xor
stc
mov
or
fisttp
mov
mov
adc
imul
pop
dec
jmp
or
fst
xchg
sbb
jp
dec
lods
add
outs
mov
cmp
sbb
mov
stos
pop
outs
in
aaa
jbe
data16
gs
add
imul
inc
cmp
cdq
mov
stos
jmp
cmc
xchg
mov
push
push
dec
cmp
xchg
jne
dec
jmp
and
pop
mov
fsub
cmp
cmp
aas
(bad)
adc
stc
out
iret
lods
add
jl
fdivr
cmps
stos
jmp
bound
mov
out
ds
aam
lods
cmp
xlat
mov
or
adc
cwde
lds
dec
cdq
cmps
push
arpl
call
jmp
jbe
sar
xchg
cmp
push
mov
xchg
pop
add
pop
shl
or
stc
mov
ss
xor
mov
ins
xchg
aam
(bad)
scas
and
jmp
retf
push
data16
cdq
jno
fnstenv
mov
(bad)
xor
push
or
pop
add
sub
fiadd
lods
jae
inc
pop
xor
jle
jle
movs
iret
popa
pusha
pop
ret
mov
or
fs
add
gs
adc
jns
hlt
jno
les
jne
ds
(bad)
xor
fstp
push
and
cmp
bound
xor
pop
cdq
rol
movd
into
adc
rol
(bad)
fadd
sbb
int
repz
ror
lock
jge
stc
mov
dec
add
ret
mov
sar
cwde
mov
jmp
mov
test
xor
stos
lds
arpl
(bad)
lods
add
push
sub
add
nop
xor
sbb
ja
shl
hlt
sub
push
jnp
hlt
rol
cmp
fs
(bad)
mov
sub
mov
inc
ror
(bad)
stc
or
pop
or
(bad)
cmps
rcl
ss
push
mov
movs
xchg
fidivr
(bad)
adc
mov
rol
mov
adc
in
bound
add
es
or
movs
push
sbb
xor
sbb
mov
fnstcw
mov
cs
inc
emms
and
jb
or
shl
xor
neg
sbb
daa
out
cli
sbb
xor
jg
pop
dec
lahf
popa
jmp
lods
pop
(bad)
test
loopne
jne
sub
int3
adc
cmps
jo
cmps
mov
(bad)
fdivr
clc
jl
loopne
mov
add
pusha
jecxz
jo
mov
addr16
mov
sub
jl
sub
inc
xor
pop
es
jle
stos
inc
scas
jmp
fist
inc
fdivr
inc
mov
inc
mov
xchg
xlat
add
sub
es
pop
stc
push
(bad)
sbb
pop
(bad)
outs
mov
xor
or
mov
imul
cmp
sub
shl
adc
adc
test
add
or
fsub
jmp
scas
imul
movs
bound
repz
ss
popa
int
jg
or
inc
sti
xchg
cmp
xor
push
lods
ret
ja
xchg
scas
rcl
cmp
push
sub
mov
jae
cmp
pop
sahf
daa
clc
sub
sub
mov
xchg
popw
in
sub
es
in
or
std
inc
repz
inc
mov
pop
ins
stos
add
nop
ds
ss
mov
ins
inc
ja
dec
pop
hlt
adc
inc
(bad)
pusha
aam
minps
idiv
(bad)
iret
mov
out
arpl
pop
inc
iret
xchg
jo
lahf
js
mov
push
ins
pushf
push
mov
xor
jmp
stos
lahf
add
ss
mov
cmps
shrd
jmp
out
call
rol
lea
jne
jmp
and
sub
stos
lahf
lahf
inc
pop
pop
int
xor
inc
ins
xchg
pop
cmc
push
cmps
imul
or
test
icebp
mov
jle
sbb
imul
pop
int3
push
outs
fwait
add
xchg
inc
ins
imul
test
and
bound
mov
jl
stos
cld
sbb
imul
das
xor
mov
mov
jae
push
add
pop
fmul
jl
std
lods
gs
ret
imul
outs
jg
(bad)
fmul
stos
scas
fs
sub
not
xchg
int3
sbb
frstor
(bad)
cmp
cli
out
push
sbb
pop
shl
test
add
pop
dec
das
fild
inc
xchg
leave
fbld
je
push
fucomi
enter
xor
icebp
jne
mov
jmp
add
push
push
add
pop
mov
repnz
push
icebp
jmp
mov
(bad)
(bad)
sub
mov
stos
shrd
std
ss
pop
out
movs
aad
mov
ins
ins
mov
test
mov
push
retf
push
bound
sar
mov
inc
sub
cmp
(bad)
mov
mov
mov
icebp
sub
sti
sub
jge
arpl
xchg
push
adc
enter
lds
leave
mov
sbb
mov
jge
pop
outs
and
mov
cmp
fsubr
xchg
popa
push
cmp
imul
pushf
(bad)
pop
lds
push
jno
mov
add
les
mov
aas
inc
dec
pop
mov
xor
or
in
out
hlt
or
into
mov
dec
stos
retf
pusha
scas
adc
sbb
sbb
aam
ja
mov
movs
adc
not
push
(bad)
mov
shr
or
int3
std
xchg
stc
outs
jg
cmp
pop
lds
mul
mov
loopne
into
pop
mov
cwde
scas
cmp
push
dec
xor
lahf
test
aas
add
mov
jp
seto
mov
mov
jge
or
aam
stos
xchg
lods
mov
call
mov
xchg
mov
cs
cmp
sbb
aad
lods
adc
pop
lods
jno
dec
sbb
or
jge
mov
push
push
gs
jbe
mov
fsubp
stos
lds
lods
imul
retf
sub
pop
sub
fnsave
(bad)
(bad)
stos
push
aas
xchg
fcom
retf
loopne
das
mov
mov
cmp
or
xlat
cmp
fs
push
shl
sahf
ret
fwait
jno
ins
aaa
cmp
jnp
cwde
adc
add
xlat
ss
mov
sbb
std
and
out
push
out
mov
mov
push
inc
mov
sub
push
xor
pusha
add
fcom
dec
and
or
pop
in
mov
outs
cmp
fistp
jbe
inc
rcl
xchg
xor
scas
(bad)
aam
push
mov
push
or
pop
mov
shl
sbb
fiadd
sar
xchg
and
adc
or
pop
mov
lahf
inc
jg
(bad)
sbb
adc
mov
mov
in
out
jmp
retf
and
test
add
xor
imul
dec
retf
ret
enter
fild
fwait
inc
loopne
mov
jb
rcr
ret
pusha
mul
push
movs
ss
xor
or
mov
mov
clc
jno
mov
ror
and
lahf
push
fisub
shr
arpl
bound
movs
shl
mov
push
out
xor
int3
js
push
mov
js
sub
or
mov
(bad)
lock
arpl
sub
jno
aas
inc
fbstp
push
cli
mov
shr
shl
aaa
add
ror
jmp
mov
addr16
and
xchg
jmp
mov
jmp
jae
jns
cli
add
(bad)
mov
pop
mov
out
or
and
retf
xchg
add
inc
inc
mov
adc
stos
jne
arpl
gs
pop
scas
xor
inc
sar
add
fs
dec
(bad)
int
mov
mov
gs
jp
ins
cdq
arpl
ins
in
jae
mov
out
pop
fmul
cs
stc
imul
xchg
ins
mov
movs
jnp
jg
fdivr
aas
fnstenv
mov
xchg
or
adc
cmp
xchg
push
addr16
popa
lods
jecxz
int
mov
sbb
dec
(bad)
popf
hlt
sub
int
push
not
jecxz
data16
adc
pop
push
add
mov
jmp
xor
push
scas
adc
sub
call
dec
cmp
jecxz
call
mov
pop
int
jbe
popf
sub
mov
test
into
cli
push
stos
jg
add
out
mov
sub
jne
aam
or
or
cli
test
(bad)
xchg
out
ret
add
das
test
scas
popa
sbb
shl
jp
mov
mov
or
ja
fs
popa
sahf
inc
sbb
imul
gs
mov
sbb
neg
loopne
add
mov
ins
je
test
lock
mov
je
or
mov
mov
rcl
(bad)
inc
ret
dec
hlt
mov
lahf
push
or
repnz
adc
mov
das
pop
mov
out
mov
std
xor
push
(bad)
sbb
push
push
inc
cmc
mov
call
test
(bad)
clc
or
fsub
push
fild
add
out
sub
mov
adc
in
push
repz
lock
fld
(bad)
sub
sar
cld
mov
scas
ja
ja
jl
mov
pop
sub
(bad)
icebp
or
cmp
inc
xor
movd
ror
jb
lock
sahf
in
fcom
int3
stos
add
das
cmp
xchg
or
data16
sub
xlat
lds
fs
fisttp
pop
rol
mov
mov
sbb
fmul
cmc
add
repnz
test
scas
out
sub
xchg
cwde
lods
sar
jle
fs
ss
outs
pop
stos
jp
(bad)
inc
iret
jg
popf
mov
push
dec
jne
xchg
repnz
mov
test
pop
cmp
xor
dec
xchg
mov
xchg
mov
jp
movs
adc
push
sti
jle
sbb
lds
stos
jno
ds
bound
xor
push
in
and
mul
icebp
and
and
pop
mov
neg
jle
rol
dec
icebp
add
sbb
ja
sbb
xchg
repz
push
cli
sbb
jg
push
pop
cmp
push
les
mov
lds
adc
jge
add
gs
fldenv
(bad)
jnp
inc
fist
cmp
fmul
(bad)
fistp
push
and
outs
add
hlt
xchg
push
fistp
mov
push
out
inc
iret
ffreep
push
adc
ins
mov
sub
adc
or
mov
in
add
add
xchg
mov
ja
sbb
sub
das
es
out
or
ds
std
push
mul
mov
jmp
xor
add
add
mov
and
por
jno
mov
loopne
mov
scas
sbb
sti
shr
aas
(bad)
cs
sub
(bad)
sbb
out
ins
xchg
jp
out
inc
fist
pop
mov
mov
leave
or
push
cmp
mov
leave
outs
dec
mov
lahf
add
inc
lock
add
(bad)
(bad)
(bad)
icebp
scas
(bad)
cmp
(bad)
add
push
mov
adc
retf
call
mov
mov
cli
sar
loopne
enter
xor
mov
xchg
mov
arpl
fisttp
imul
jb
(bad)
test
imul
jp
mov
stos
pushf
mov
mov
sbb
or
sbb
push
stos
dec
mov
retf
adc
sub
sahf
inc
cmp
dec
cmp
and
adc
rcl
ins
lea
rcr
fld
pop
pop
fwait
pop
mov
ja
jmp
push
inc
and
pop
xor
mov
inc
mov
xchg
stos
imul
arpl
adc
lock
sub
mov
scas
pusha
imul
and
cmp
data16
mov
test
shl
sbb
int
iret
jo
stos
cmp
lea
mov
cld
inc
cmc
out
sbb
stos
cmps
out
shl
inc
hlt
mov
jp
jmp
stc
inc
inc
sbb
fwait
inc
ror
xor
sbb
or
gs
sbb
mov
push
imul
mov
jnp
sti
xchg
pop
lea
dec
scas
pop
add
in
lods
(bad)
push
or
das
and
mov
mov
out
pusha
dec
mov
push
fs
in
(bad)
(bad)
(bad)
sub
cmp
fwait
out
pop
jae
mov
sti
jle
xchg
rol
aam
mov
jp
mov
(bad)
xor
out
cmp
lods
or
inc
cmp
btr
(bad)
imul
cmp
xor
inc
cmp
push
lea
push
and
jo
lahf
fwait
lods
les
cmp
pop
push
ret
fstp
sbb
cwde
iret
aaa
int
mov
mov
das
aam
cdq
dec
pop
sbb
cmp
cli
out
jbe
loop
sbb
bound
mov
mov
fnstenv
adc
cmp
mov
(bad)
(bad)
or
(bad)
sbb
mov
xor
jmp
xchg
movs
out
mov
sbb
xlat
shl
xor
sbb
mov
in
and
push
mov
jge
mov
outs
pop
mov
xchg
dec
pusha
push
mov
dec
mov
push
stos
(bad)
xor
mov
inc
add
mov
mov
xchg
aam
mov
and
add
or
loopne
inc
daa
add
push
jg
jmp
dec
xor
out
add
sub
div
pop
test
pop
or
lea
rcr
mov
inc
js
mov
adc
inc
loopne
xlat
imul
shr
ins
and
mov
mov
xchg
imul
fld
das
pop
rol
addr16
sbb
sub
ds
add
movs
xchg
mov
pop
hlt
jae
aad
shr
xchg
pop
add
xchg
mov
sub
popf
out
addr16
mov
jnp
mov
scas
icebp
xchg
xor
pop
jne
mov
not
mov
pop
nop
sahf
iret
imul
dec
(bad)
pop
push
xchg
inc
sbb
mov
jbe
sub
add
mov
js
cmp
pop
push
jmp
pushf
ja
adc
aaa
cmp
cmp
add
sbb
adc
loope
cs
je
popa
out
(bad)
scas
jbe
dec
idiv
cmp
(bad)
sbb
imul
pop
dec
out
daa
xchg
pop
push
mov
adc
or
pushf
addr16
(bad)
sahf
push
out
cmp
jno
push
iret
cmp
add
(bad)
(bad)
out
mov
mov
or
mov
xchg
pop
adc
xchg
push
push
ja
xor
mov
loop
adc
inc
and
test
sbb
xchg
(bad)
xlat
jle
dec
lods
mov
loopne
and
inc
fs
jmp
add
xor
pop
pushf
sub
retf
xchg
js
outs
xor
out
mov
xchg
lods
inc
mov
out
arpl
repz
pop
mov
popf
inc
js
bound
mov
push
pushf
cmps
push
jo
movs
out
push
enter
add
mov
mov
fcom
add
pop
pop
dec
rcl
lds
out
mov
jmp
mov
jle
adc
or
sub
dec
inc
mov
pop
clc
scas
push
out
fs
addr16
pop
mov
hlt
push
inc
stc
push
shl
fiadd
daa
aam
cmps
je
fild
add
stos
lods
(bad)
pop
int
pop
or
popa
pop
dec
jle
jns
push
mov
daa
inc
xor
mov
sub
add
adc
xor
cmp
jne
mov
cs
jmp
add
xlat
inc
mov
cdq
in
or
and
call
push
mov
mov
add
mov
js
push
addr16
xchg
push
shr
jg
mov
(bad)
stc
sub
sub
(bad)
push
inc
jg
dec
dec
loope
hlt
cmp
clc
pop
dec
pop
fist
jnp
shl
cs
push
imul
jne
in
int
mov
mov
test
jmp
(bad)
push
je
fsubr
xchg
adc
push
dec
cld
pop
mov
nop
jbe
mov
pop
mov
test
xchg
mov
mov
out
jle
add
outs
mov
dec
mov
mov
loopne
repnz
cmps
lea
sub
xor
test
out
fwait
jmp
dec
ss
inc
xor
sbb
jp
cld
or
pop
mov
xor
in
sbb
push
and
xchg
shl
mov
retf
lock
rol
xlat
sub
aaa
jmp
sbb
mov
xchg
cld
imul
jne
fistp
jmp
sbb
stos
lods
sub
cmp
push
arpl
sbb
rcr
mov
aad
dec
pop
mov
and
fstp
lods
mov
inc
mov
push
mov
mov
inc
add
hlt
add
dec
mov
and
cmp
or
in
stos
sbb
shrd
das
stos
fmul
(bad)
xor
pop
lods
and
and
outs
lahf
shr
shl
jns
lods
sbb
sub
fild
(bad)
inc
mov
rcl
gs
jecxz
bound
mov
or
inc
iret
push
pop
mov
mov
in
mov
and
test
call
mov
sub
add
dec
(bad)
movs
aam
movs
xor
mov
das
dec
(bad)
out
pop
sbb
mov
xor
mov
ficom
ins
movs
fwait
cmp
sub
out
aam
add
cwde
push
pmullw
and
jae
test
(bad)
imul
gs
stc
or
jecxz
lea
push
sub
cwde
cmp
and
dec
int3
stc
sbb
pusha
sub
push
(bad)
jp
fadd
out
fcomi
loopne
jmp
repz
mov
imul
sub
les
adc
fist
jl
fstp
sbb
xor
jmp
inc
sub
sbb
push
mov
cmp
cli
(bad)
push
and
mov
inc
mov
ror
push
stc
xlat
cmps
mov
hlt
cmp
mov
lds
fsubr
aam
and
les
int3
lahf
cwde
fild
fcomp
push
les
ror
cmp
imul
or
or
sub
loop
out
jecxz
movs
jp
push
and
pop
rcr
call
xchg
cmp
or
mov
inc
adc
inc
iret
daa
mov
mov
in
xchg
mov
pop
mov
test
fild
cld
push
mov
addr16
shl
ins
pop
lahf
dec
inc
inc
addr16
test
shr
xor
shr
shr
pop
into
cmp
xor
and
nop
aas
add
sbb
das
and
inc
mov
cli
mov
mov
(bad)
cld
inc
leave
mov
sbb
cmp
out
adc
or
jecxz
in
fstp
mov
jle
jo
xor
mov
ror
cld
cmp
inc
xor
pop
lock
mov
sbb
cmps
mov
test
push
bound
pop
arpl
lea
bnd
adc
xor
push
in
inc
inc
adc
jbe
jnp
out
mov
pop
dec
shl
sbb
std
mov
inc
jo
cmp
mov
cmc
nop
jge
adc
leave
xchg
push
inc
adc
pop
lods
xchg
xor
stc
dec
dec
leave
or
mov
adc
rol
stos
inc
repz
lds
fimul
out
sbb
aaa
and
push
bts
cmp
(bad)
mov
adc
inc
xor
mov
cdq
ret
mov
cmp
inc
leave
(bad)
out
pusha
push
in
mov
aam
aaa
and
or
fwait
lods
mov
cmc
dec
(bad)
int
(bad)
pusha
icebp
mov
sbb
imul
dec
cmp
daa
cmp
xchg
or
or
jg
adc
test
xchg
inc
(bad)
call
mov
pop
fild
call
add
imul
fistp
sti
or
daa
imul
dec
in
cwde
(bad)
push
(bad)
mov
jne
lahf
push
push
sbb
add
pop
cmp
push
xor
pop
jne
dec
pop
rcr
add
xlat
mov
in
or
or
mov
in
call
loop
push
das
fisttp
pop
dec
mov
retf
mov
(bad)
mov
das
fstp
xor
scas
out
outs
push
cmp
add
not
aaa
out
cmp
pop
out
cmp
out
es
out
jmp
das
rcr
dec
in
adc
cmp
mov
cmp
stos
cli
adc
out
dec
test
push
mov
aas
aad
sbb
inc
cwde
movs
jno
or
ds
sbb
(bad)
(bad)
retf
leave
adc
bnd
push
mov
cwde
ja
popf
in
hlt
jae
pop
mov
mov
add
xor
mov
inc
push
xchg
push
les
jne
jae
mov
push
sub
mov
bound
aam
clc
nop
and
adc
push
mov
cmp
ins
and
out
idiv
mov
dec
cmp
aad
int
out
in
xor
pop
sub
jae
repnz
dec
jb
loopne
iret
lods
and
mov
imul
ds
ss
dec
jge
ret
push
sbb
adc
sbb
xchg
rcr
sub
out
lods
mov
imul
(bad)
or
sbb
dec
and
mov
test
xor
adc
popf
movs
adc
mov
stos
push
mov
pusha
xor
mov
inc
ret
bound
jmp
add
xchg
sti
and
fild
les
outs
mov
jp
sar
push
movs
nop
jo
dec
in
popa
(bad)
in
dec
out
or
outs
cmp
adc
jo
inc
fisttp
outs
scas
sahf
adc
lock
aas
test
jbe
push
xlat
scas
push
out
sbb
adc
pop
sti
xchg
out
mov
or
repz
dec
aaa
jnp
dec
hlt
rol
out
add
cli
xor
and
add
xor
lea
add
or
add
fadd
push
(bad)
enter
mov
cmc
or
inc
dec
or
shr
push
sub
fbstp
add
adc
out
inc
loop
rcl
jno
shr
jle
in
add
(bad)
aam
movs
pushf
pop
test
(bad)
mov
push
fsubr
mul
je
std
pusha
push
mov
and
push
cdq
jmp
sti
loopne
cmc
push
fisttp
out
test
jbe
xor
sub
in
(bad)
outs
test
pop
stos
stc
ret
mov
push
add
add
lods
add
es
push
push
ror
test
mov
cmps
mov
xor
sbb
cmps
popfw
out
mov
test
and
inc
(bad)
mov
fld
aam
push
sti
and
repz
push
pop
xor
sbb
inc
lods
adc
pop
inc
jg
ror
mov
leave
xor
ja
out
lods
sbb
scas
adc
out
scas
pop
(bad)
(bad)
int
xor
jge
adc
push
out
into
(bad)
aam
scas
push
test
pusha
pop
popa
jo
dec
ins
xor
fimul
inc
jne
cmp
xor
es
nop
push
shl
mov
icebp
imul
cmc
xor
popf
cmovne
pop
(bad)
shr
and
mov
lock
jo
jle
test
mov
mov
jge
xchg
pop
(bad)
test
jecxz
mov
push
sti
mov
imul
hlt
in
ror
cli
jl
mov
jbe
ja
test
adc
out
jnp
mov
dec
lods
mov
dec
shl
mov
mov
sub
pop
hlt
and
inc
loop
(bad)
jo
jecxz
sahf
mov
call
cmp
mov
xlat
mov
rcr
std
inc
pop
addr16
jae
aam
nop
ins
fnstcw
js
(bad)
dec
push
lock
push
stc
jb
cmp
lock
xchg
inc
test
into
jge
mov
mov
jmp
rcl
idiv
xchg
cmps
push
jae
mov
sub
call
test
(bad)
fldenv
jmp
js
cli
fadd
adc
cwde
cmovae
out
cwde
jae
adc
clc
jecxz
test
jbe
push
inc
mov
hlt
push
adc
(bad)
fnstsw
fsub
xor
adc
sbb
test
fsub
mov
adc
push
outs
xchg
jge
arpl
mov
fadd
mov
xor
cld
cs
mov
fisub
jl
push
call
(bad)
xchg
mov
or
aam
mov
mov
sahf
(bad)
loop
dec
xor
mov
lea
mov
(bad)
retf
fcmove
sahf
mov
cmp
pushf
and
xchg
xor
xor
jmp
mov
retf
cmc
outs
push
pop
xor
dec
cld
cmp
loopne
pop
imul
push
and
test
sbb
or
sbb
js
iret
mov
pop
loope
sub
imul
stc
fnstsw
and
jnp
lea
mov
scas
fs
sbb
xor
pop
popf
mov
imul
inc
sbb
mov
cdq
xlat
ins
mov
(bad)
sti
mov
je
inc
jecxz
jae
jae
or
pop
mov
ja
pop
ins
arpl
fdivr
es
pop
test
out
and
addr16
into
dec
inc
mov
and
mov
inc
repnz
shr
sbb
mov
jbe
xor
mov
xor
js
cmc
sti
push
jo
std
push
sti
jnp
inc
out
mov
mov
das
inc
test
div
pop
lea
out
push
cmc
(bad)
xadd
jns
call
push
and
in
mov
pop
mov
stc
add
sbb
mov
adc
or
pop
shr
pop
or
sub
jb
ins
mov
repnz
mov
lods
adc
xlat
sbb
popf
(bad)
mov
pushf
and
cmps
movs
add
cmc
hlt
jecxz
cmp
sub
pop
dec
push
inc
and
adc
popf
sbb
jo
jge
jae
xchg
and
je
fidiv
imul
out
pop
fwait
xchg
neg
paddusw
(bad)
scas
add
and
enter
mov
mov
mov
pop
aad
imul
sub
jp
jno
mov
rcl
sahf
cmp
pop
clc
push
cmp
mov
leave
leave
(bad)
jmp
xchg
xor
bound
ret
fisttp
jl
push
fisttp
out
pop
mov
pushf
mov
out
call
ror
mov
and
mov
sbb
push
shl
repz
xor
cmp
data16
push
iret
jb
cli
adc
sub
enter
mov
sub
idiv
sub
dec
mul
dec
stc
add
(bad)
loopne
repz
xchg
ja
leave
and
arpl
xor
cdq
mov
pop
sar
int
xlat
and
push
addr16
clc
adc
mov
cmp
mul
xchg
test
(bad)
push
shr
jl
and
add
push
pop
inc
outs
jge
sub
push
movs
sahf
cdq
jmp
mov
aaa
enter
pop
xor
mov
xchg
les
xchg
les
or
adc
or
fistp
xor
cs
pop
and
mov
retf
jmp
xor
daa
push
retf
dec
xor
mov
movs
pop
mov
and
loope
in
sbb
stos
out
repz
pop
mov
dec
out
mov
gs
shr
jbe
push
mov
mov
and
jb
dec
dec
jae
xchg
xor
push
idiv
repz
bound
data16
jge
dec
in
out
adc
int
sub
jno
or
int
pop
and
and
and
xchg
xor
repnz
push
and
das
stos
mov
ins
mov
jp
movs
daa
push
cli
xor
(bad)
fstp
xchg
adc
mov
(bad)
aad
mov
sub
jg
cmp
lock
dec
ja
mov
mov
mov
dec
(bad)
out
pop
sbb
inc
inc
mov
test
cmps
pop
mov
mov
mov
xor
lods
inc
dec
dec
mov
div
scas
cwde
sti
sbb
je
cmp
daa
out
stos
into
das
sbb
(bad)
nop
xchg
in
shl
addr16
inc
adc
pop
mov
retf
push
jp
(bad)
fsubr
push
sbb
pop
adc
dec
repnz
aas
xor
mov
arpl
hlt
mov
sub
cmc
ins
pop
sbb
scas
add
in
push
dec
cmc
dec
mov
lea
lods
jae
mov
dec
hlt
fbstp
jg
cmp
mov
jge
xchg
push
test
jl
daa
icebp
adc
add
pop
xor
sub
push
scas
push
and
sbb
cmp
xchg
in
sub
pushf
inc
repnz
push
jnp
cwde
sahf
nop
leave
rcr
inc
and
mov
inc
mov
lahf
mov
sbb
sub
mov
push
(bad)
and
rol
pop
push
sbb
repz
arpl
mov
loop
cmp
add
aad
lods
(bad)
xchg
fadd
mov
xchg
dec
cmps
stos
push
ror
loopne
mov
jnp
jle
pusha
cvtps2pd
add
pop
setne
mov
aaa
in
pop
jp
stc
add
cmc
repz
ins
push
sbb
add
jno
faddp
out
(bad)
(bad)
not
es
js
iret
stos
push
jnp
lea
pushf
adc
pushf
cmp
mov
ror
sar
inc
jg
xchg
arpl
fst
pop
xchg
lahf
and
mov
pop
adc
mov
out
rcl
and
mov
mov
std
dec
es
addr16
sbb
scas
add
or
mov
mov
mov
or
rcl
addr16
cld
dec
cdq
retf
gs
inc
push
fcom
leave
xchg
enter
jno
mov
inc
fwait
jne
pop
sahf
push
mov
inc
stos
inc
sub
sbb
dec
pop
lods
out
mul
and
lods
mov
(bad)
inc
test
dec
add
repz
scas
imul
mov
adc
add
cli
pop
push
call
sbb
out
repz
int
retf
iret
out
hlt
cld
mov
mov
push
dec
fwait
xor
xchg
outs
sub
mov
jl
ins
inc
aaa
mov
fdivp
or
rcr
jl
xor
xchg
in
cli
lods
xchg
mov
pop
sub
std
jae
cs
shr
in
or
sub
xchg
jl
ds
repz
xchg
data16
pop
xor
cmp
pop
movs
mov
jno
std
dec
call
scas
and
jbe
sub
xor
out
jmp
data16
popf
xchg
push
in
ins
(bad)
call
imul
xchg
in
cmc
stos
cdq
aad
mov
inc
cwde
cli
xchg
lea
dec
jns
push
fmul
ins
les
sbb
movs
ins
fwait
sahf
cmp
es
ss
in
cmp
cmp
inc
into
mov
push
sahf
call
sbb
adc
adc
pop
add
hlt
inc
repz
ret
pop
pop
imul
sub
jnp
cld
mov
in
push
into
sub
shl
jp
dec
pop
daa
pop
cmp
fiadd
int
cld
sub
mov
je
lds
sub
sub
repz
xchg
mov
mov
sbb
daa
add
imul
push
cwde
fdiv
cmp
add
and
mul
jmp
lea
int
popf
cmps
pop
mov
cmp
ss
sub
push
cmp
pop
xchg
cmp
mov
mov
adc
fild
daa
aam
sub
xchg
xlat
xchg
jne
push
cmp
retf
push
aad
mov
pop
mov
sbb
ret
or
(bad)
push
xor
mov
dec
dec
sub
and
jp
inc
xlat
pop
fsubr
xchg
cmc
and
sbb
out
imul
daa
test
add
icebp
xchg
pop
mov
mov
push
sbb
pop
cs
mov
daa
xor
lahf
pop
sub
sbb
fadd
pop
leave
pop
jp
mov
lods
push
loop
cmp
jae
add
dec
jb
(bad)
jmp
or
sbb
adc
pop
xchg
inc
mov
retf
popa
clc
inc
mov
ror
lods
or
mov
or
sahf
sbb
dec
mov
dec
push
shl
jno
pop
dec
mov
out
gs
cmp
push
push
jp
stos
stc
mov
int
jmp
das
xchg
xor
and
mov
jmp
sbb
xchg
mov
cmp
adc
fs
shr
ins
adc
dec
arpl
out
mov
mov
push
mov
jecxz
and
fistp
fwait
(bad)
pop
mov
nop
push
scas
les
xor
pop
mov
retf
cdq
(bad)
sub
imul
jo
mov
inc
call
loopne
mov
sub
es
xlat
test
movs
push
and
jae
repz
(bad)
es
sbb
loop
xchg
ins
xlat
adc
and
cmps
inc
xchg
mul
xchg
out
rcr
ds
adc
mov
inc
jge
jae
or
jnp
call
repz
pop
jge
xchg
sahf
fcomp
mov
ds
inc
(bad)
sti
adc
(bad)
(bad)
outs
rcl
loopne
daa
shl
jns
pop
dec
fistp
and
sbb
xchg
das
cli
xor
in
inc
pop
sbb
fld
xchg
mov
call
shl
sar
push
jbe
sub
mov
add
sbb
mov
and
cmps
xchg
xchg
inc
pop
adc
mov
jle
retf
sbb
mov
adc
daa
sar
cmp
xchg
mov
jp
lock
jle
push
std
or
mov
fist
push
scas
sub
movs
pop
in
push
leave
jo
jmp
dec
cmp
stos
shl
ficom
pusha
cmp
jns
cwde
push
test
xor
ja
pop
pop
test
shr
ins
retf
xor
outs
aad
in
mov
fadd
dec
ja
mov
hlt
pop
int
jnp
sbb
push
int
aas
stos
daa
inc
xchg
dec
pop
mov
cld
hlt
cmp
sti
loopne
shl
popa
cmp
xor
xchg
pop
sbb
in
out
(bad)
cmp
daa
jp
aad
jo
mov
jo
pusha
fisttp
daa
mov
and
sar
scas
int3
adc
push
mov
and
arpl
cmovp
xor
push
and
outs
aad
aas
inc
or
outs
dec
dec
push
(bad)
call
scas
push
pop
xchg
addr16
shl
in
and
mov
inc
pop
mov
out
jle
add
xor
sub
add
shl
fstp
mov
push
mov
scas
cmp
das
cdq
aas
mov
and
shl
inc
iret
pop
test
mov
or
fistp
fwait
jno
mov
retf
xlat
mov
addr16
outs
and
shr
xchg
lock
mov
lea
mov
stos
adc
or
inc
cmc
lods
mov
push
pop
mov
fimul
jnp
cmp
push
retf
fucomi
push
imul
movs
mov
ja
rcr
daa
fxch
scas
jge
and
pop
mov
jbe
pop
mov
das
push
int3
jb
ins
cmps
sahf
scas
pop
into
or
(bad)
ja
push
push
dec
stc
mov
dec
cmp
xor
fbstp
mov
cmp
test
mov
dec
test
dec
adc
jmp
mov
mov
fdiv
scas
add
mov
mov
ficomp
mov
jge
or
lahf
pushf
iret
jae
bnd
gs
jo
xchg
call
inc
fsub
pusha
add
lock
sbb
cmp
push
jne
xchg
lds
dec
inc
test
jo
lock
pop
or
into
test
fnstsw
sti
fadd
dec
aam
fidivr
dec
sbb
pop
mov
lahf
je
mov
pop
lea
es
jge
pop
in
mov
dec
add
or
xchg
dec
outs
dec
push
mov
lds
inc
dec
mov
jns
(bad)
or
mov
arpl
das
xor
bound
lods
icebp
sub
loop
in
jae
ss
in
ret
xor
repz
xchg
pop
cmp
loope
xor
mov
cwde
dec
ins
mov
bound
xor
jb
sti
sub
xor
out
(bad)
aaa
jo
int3
data16
es
les
(bad)
mov
vpaddd
ja
mov
pop
jle
jns
and
int3
mov
jbe
jbe
outs
xchg
int
fmul
retf
dec
pop
or
outs
test
outs
or
je
test
pop
mov
lock
mov
xchg
mov
stos
sbb
pushf
mov
in
(bad)
(bad)
and
in
out
rcr
inc
xor
cld
jmp
sbb
mov
pushf
ja
xchg
jp
xchg
cmp
xor
addr16
repz
daa
out
jo
lea
xchg
adc
mov
into
ss
inc
adc
inc
scas
jp
out
xchg
and
idiv
neg
cmp
inc
sbb
mov
test
shl
mov
icebp
je
mov
xor
push
arpl
mov
scas
aas
ret
sbb
and
std
das
lock
push
out
sbb
das
push
mov
sbb
mov
push
cli
push
sti
cmp
out
pop
mov
jp
rol
pop
inc
dec
loope
mov
addr16
dec
mov
or
mov
mov
adc
retf
dec
mov
pushf
inc
cmp
clc
and
cld
daa
fcmovb
cmp
popf
ja
xor
(bad)
cmp
call
stc
pop
icebp
mov
jo
in
mov
sar
retf
push
fidiv
bound
mov
pop
jmp
int3
jp
fnstenv
imul
out
out
cmps
push
mov
les
cdq
fadd
leave
pop
pushf
test
enter
popa
jge
and
or
adc
and
jne
jle
push
into
lds
xchg
push
jae
cs
jmp
adc
(bad)
es
cmp
data16
jge
pop
test
or
ins
int3
arpl
and
inc
mov
sub
aas
int3
push
int3
mov
mov
aad
pop
rcr
mul
pop
je
pop
movs
push
push
nop
(bad)
adc
jmp
inc
test
pop
adc
jb
out
mov
(bad)
int
xor
adc
push
(bad)
mov
pop
into
dec
pop
jne
call
ja
and
mov
jg
jge
mov
xchg
sub
mov
(bad)
push
or
ret
jne
mov
inc
ins
js
int
jbe
jns
ss
retf
mov
imul
sbb
call
(bad)
les
xchg
fstp
fld
in
xor
neg
or
jb
pop
popa
pop
mov
outs
pop
aas
jo
dec
inc
xchg
iret
shr
pop
fistp
push
jmp
test
mov
push
pop
xchg
test
xchg
rcr
ins
mov
popf
out
xchg
scas
mov
xchg
sbb
outs
dec
jno
out
iret
mov
mov
pop
out
int
mov
pop
and
adc
fsubrp
fidiv
sahf
addr16
pop
push
stc
retf
pop
push
xrelease
loop
lods
div
out
or
jl
mov
sub
cmps
icebp
sub
(bad)
mov
sbb
in
pushf
xor
out
test
lahf
push
lods
fsub
fisub
stc
xor
sub
or
mov
aaa
lods
jne
out
inc
sahf
fsub
mov
fsub
add
aaa
jecxz
dec
sub
mov
cmp
(bad)
je
mov
jbe
push
or
jmp
pop
fdiv
jno
sbb
stos
and
push
lahf
mov
in
scas
mov
xchg
or
jg
scas
inc
sbb
cs
lods
xor
out
gs
stc
and
inc
cmp
ss
test
mov
int3
(bad)
bnd
fdiv
xchg
rcr
inc
ret
lds
jl
mov
in
sbb
xor
dec
xchg
jns
jns
cmc
fs
lods
jecxz
sahf
lds
(bad)
jno
aam
dec
popa
mov
ret
ins
mov
cld
and
(bad)
mov
jne
in
push
sti
pushf
mov
mov
mov
sub
icebp
pop
mov
xchg
xchg
call
sbb
inc
aas
ret
iret
(bad)
bound
imul
push
mov
stc
dec
adc
data16
aad
je
imul
push
sbb
out
sbb
pop
fsub
jg
mov
(bad)
daa
mov
(bad)
xor
pop
inc
repnz
push
mov
cmp
xchg
je
xchg
sub
xor
cs
stos
push
aad
push
das
fs
out
cs
pop
mov
jae
les
push
loope
jmp
pushf
outs
mov
pop
int3
or
shl
inc
mov
fnsetpm(287
inc
(bad)
cdq
ins
cmps
xchg
add
popf
test
xor
xor
arpl
pop
arpl
retf
ja
lahf
jb
push
gs
repz
fnstenv
xor
int
ds
sub
adc
aas
inc
jge
add
pusha
ss
out
or
dec
mov
push
sbb
and
sbb
push
xchg
outs
psllw
int3
xorps
jle
shl
dec
in
xor
mov
push
or
sar
inc
dec
rcr
jecxz
ror
sub
aad
imul
aaa
call
inc
add
(bad)
es
stc
lock
jg
stos
mul
test
in
shl
outs
adc
inc
push
push
xchg
inc
jg
mov
adc
bound
ss
scas
fsubr
jae
into
stos
jecxz
and
mov
jbe
lods
jecxz
mov
xor
mov
push
cmps
pop
shl
mov
sbb
loop
cmp
cld
add
fcom
sbb
push
mov
adc
int3
push
icebp
cs
(bad)
fdiv
fild
call
int3
xchg
pop
sti
lods
or
addr16
int3
outs
cmps
mov
cmp
cmc
out
call
data16
push
ins
and
mov
retf
mov
dec
(bad)
xor
and
cli
adc
in
je
mov
lahf
out
je
sub
call
adc
call
jl
mov
adc
icebp
and
cmp
mov
int
hlt
jl
std
addr16
mov
ins
inc
mov
movs
pop
rcr
popf
fmul
xchg
mov
ror
hlt
xor
mov
push
clc
scas
mov
mov
out
mov
jecxz
mov
xchg
jne
adc
retf
add
mov
mov
test
scas
dec
pop
mov
ffreep
mov
adc
cmp
rol
ficom
mov
push
sub
fld
xchg
cmp
(bad)
cmp
mov
je
sub
movs
jle
gs
stos
test
cmp
loopne
and
cmc
add
cmps
cmp
std
sti
stos
test
cmp
mov
daa
mov
sbb
cmp
jge
imul
xchg
and
and
mov
outs
xchg
lods
imul
int
cmp
inc
ins
hlt
or
(bad)
fucom
ret
push
pop
retf
or
mov
or
sub
stc
int3
int3
popa
sahf
fsubr
lods
leave
push
mov
fmul
stc
dec
mov
mov
test
mov
cwde
outs
arpl
push
lahf
out
fisub
cld
xor
pushf
rcr
mov
outs
jmp
in
out
out
add
fidivr
icebp
push
jmp
push
mov
addr16
push
vpxorq
sub
aam
cs
sub
jb
aaa
adc
jb
call
fnstcw
ja
repz
imul
mov
lods
ins
icebp
xor
(bad)
loopne
ins
in
outs
hlt
cli
cmp
or
ins
sahf
sbb
pop
mov
xlat
jge
inc
aas
mov
sub
sbb
(bad)
cmp
pop
std
push
and
shl
ins
inc
mov
mov
mov
adc
and
imul
test
(bad)
jns
and
xor
aam
mov
outs
and
aaa
icebp
(bad)
std
mov
(bad)
repz
int3
dec
sub
cld
cmp
into
push
es
(bad)
mov
mov
cmp
sbb
inc
pop
repnz
(bad)
jne
loope
mov
imul
mov
adc
in
jp
jo
hlt
repz
jge
mov
xchg
xchg
test
fistp
and
xlat
lods
in
lods
mov
cli
gs
dec
mov
in
dec
int3
out
mov
ins
xor
in
icebp
sub
das
loop
inc
sti
push
mov
daa
jns
out
and
inc
fimul
xor
les
mov
mov
xor
into
dec
stos
jns
sbb
rol
xchg
movs
xor
loop
push
into
addr16
icebp
movs
cmp
cld
fucomip
dec
adc
sar
jbe
jmp
xor
loop
push
cmp
cmp
popf
xor
xor
jecxz
jl
pop
sub
out
mov
xor
mov
in
fcom
cld
jl
push
xchg
add
fs
daa
mov
cdq
int3
pop
cmp
or
iret
cmp
inc
sbb
stos
add
idiv
xchg
nop
push
arpl
inc
add
cs
rcl
(bad)
mov
mov
dec
loopne
int3
(bad)
push
push
outs
aas
stos
jns
cli
add
loop
mov
sub
jmp
cmps
push
out
pop
fcom
xchg
(bad)
(bad)
xchg
mov
ffree
or
lds
outs
inc
ret
mov
sub
fwait
xchg
dec
and
jnp
stos
xor
ins
xor
retf
call
or
rep
mov
stos
xchg
sub
ins
data16
mov
inc
fadd
test
jl
jl
addr16
pop
xchg
xor
lahf
or
mov
or
sub
cmp
into
dec
fs
pop
int
and
jmp
jl
xchg
mov
sub
mov
push
inc
pop
jnp
adc
mov
push
mov
outs
in
outs
fcomip
mov
adc
icebp
int3
aam
xchg
sbb
push
dec
jno
xchg
sub
arpl
fsub
xlat
int
jns
and
push
aam
xor
in
push
jnp
or
adc
xor
mov
lahf
cmp
lods
mov
jl
(bad)
ins
sub
ror
ds
cmp
jbe
push
mov
iret
out
(bad)
(bad)
inc
mov
push
dec
cmp
cwde
mov
stos
dec
or
cmp
(bad)
test
xchg
or
sti
test
repnz
daa
lea
(bad)
push
cmp
(bad)
push
lahf
jns
(bad)
fmul
xor
js
shl
jae
push
xor
pop
cmp
ret
pop
jno
dec
(bad)
xlat
lea
addr16
and
and
addr16
sub
retf
outs
idiv
mov
das
loop
int3
jbe
ror
push
pop
aad
int3
pop
mov
push
scas
cmp
(bad)
pop
rcr
stos
push
sub
test
rcl
cli
mov
push
repnz
xlat
jns
or
jge
out
or
mov
retf
lods
leave
dec
cwde
into
imul
sbb
mov
call
arpl
in
pushf
sbb
aas
push
retf
ja
inc
rcr
jb
xlat
xor
pop
ret
popa
int3
cmc
lds
cmp
es
push
inc
imul
hlt
pop
in
fsub
cmp
hlt
test
repnz
mov
xchg
imul
cmps
xchg
mov
and
call
ds
das
cmp
in
inc
cwde
cmc
arpl
jmp
ja
dec
jmp
jle
or
(bad)
stc
jbe
inc
mov
div
idiv
mov
dec
jge
mov
jb
(bad)
push
jg
into
rol
shl
mov
pop
push
popf
inc
mov
clc
jecxz
push
xor
aad
jns
mov
jnp
pop
sub
pop
pusha
xchg
pop
js
aas
bound
mov
cmp
iret
loop
sbb
outs
xor
out
jg
and
cmc
daa
sar
scas
cdq
out
pop
fldenv
enter
loope
mov
xchg
cmp
es
xor
dec
cld
mov
dec
xor
(bad)
retf
cmp
mov
(bad)
mov
sbb
adc
push
mov
mov
stos
sbb
inc
mov
stos
ja
daa
mul
aad
pop
mov
or
sub
cmp
push
xcrypt-cfb
cmps
and
push
fimul
ds
push
(bad)
push
mov
fst
in
mov
mov
sbb
inc
icebp
adc
rol
jnp
jmp
aad
sub
jo
xchg
call
cmc
push
dec
call
xor
out
jnp
push
jbe
pop
xlat
les
ja
dec
sub
xor
loope
push
(bad)
lock
daa
clc
push
jne
aad
pop
cmp
fnclex
and
jl
retf
pop
lds
xor
femms
cdq
cmps
cli
push
dec
mov
fnstsw
push
xor
enter
fsubr
mov
pop
pminsw
dec
arpl
ret
rep
cmp
inc
out
fucomp
mov
dec
sti
cli
cmc
pushf
push
stc
mov
(bad)
mov
jo
arpl
pop
shl
icebp
pusha
jb
dec
arpl
jmp
ficom
cdq
push
mov
ret
loop
test
test
cmp
retf
fmul
lds
push
in
pop
ins
out
das
popa
cmps
call
cmp
mov
sahf
jo
iret
dec
adc
push
lods
scas
mov
push
cwde
std
jl
cmp
add
popa
sbb
cmp
(bad)
bound
cmp
xlat
fbstp
dec
pop
arpl
xchg
clc
aaa
shl
pop
call
cdq
in
gs
jmp
fcom
les
iret
inc
jecxz
data16
mov
adc
jns
pop
adc
sbb
mov
loope
retf
adc
mov
sbb
cli
pop
sub
fbld
xor
mov
sbb
inc
fst
ins
mov
ret
aaa
jge
cwde
iret
push
popa
retf
mov
jp
mov
loop
xor
(bad)
jno
mov
adc
iret
dec
scas
imul
call
(bad)
repnz
mov
int3
aad
cs
lock
pop
jns
mov
pop
daa
cwde
mov
retf
std
mov
ja
mov
and
sahf
clc
adc
or
mov
repz
sti
jns
mov
pop
adc
sub
ss
jbe
mov
call
aad
nop
sbb
and
xor
mov
retf
sbb
arpl
inc
mov
fisubr
test
adc
jnp
cmp
mov
cmps
repz
inc
data16
std
xchg
push
fsubr
dec
pop
cwde
leave
fcomp
out
sub
mov
fstp
in
into
mov
int3
stos
js
dec
xchg
out
(bad)
xor
jnp
stos
les
in
mov
sti
push
sbb
es
mov
mov
inc
clc
xchg
sub
jl
adc
sbb
mov
addr16
rol
iret
cmc
mov
pop
stc
shr
push
pop
sub
mov
mov
push
ss
mov
test
mov
(bad)
iret
jmp
jne
enter
aam
or
loop
cs
inc
imul
iret
lahf
mov
leave
sbb
inc
adc
dec
jge
cmp
xchg
mov
mov
sub
cmps
jmp
das
repz
adc
mov
or
int
repnz
sub
sub
mov
inc
out
loope
mov
mov
std
jmp
pop
mov
leave
ins
mov
cmp
mov
outs
imul
pop
imul
push
popa
push
mov
shr
cdq
imul
imul
mov
je
idiv
(bad)
fstp
(bad)
xor
in
outs
popa
sbb
call
mov
add
pop
sbb
jns
(bad)
std
jl
cmp
cld
bound
std
es
shr
sub
or
stos
pushf
out
jnp
add
cdq
mov
jne
xchg
je
xor
sbb
sbb
xor
test
out
loop
pop
les
cld
jne
sbb
repz
in
xchg
xor
idiv
lahf
cmp
pop
movs
mov
cmc
enter
adc
repz
inc
mov
mov
out
xor
xchg
imul
mov
sub
cdq
dec
stos
das
pop
mov
pop
fisubr
xchg
ds
sbb
frstor
(bad)
and
adc
mov
test
and
stc
pop
(bad)
cwde
adc
fdiv
outs
imul
aam
mov
jl
inc
cdq
mov
imul
fldenv
dec
int3
pushf
mov
mov
sbb
mov
into
xor
repnz
hlt
fist
adc
jo
dec
push
addr16
loop
jmp
xchg
(bad)
ret
into
data16
stc
sti
cmp
jecxz
mov
mov
xor
cdq
out
movs
retf
push
out
and
mov
inc
fwait
sbb
dec
xchg
pusha
jno
cmps
adc
add
push
xchg
loope
push
and
icebp
cmp
je
ret
lock
sub
rcl
(bad)
xchg
pop
js
jp
xor
pop
lods
mov
sbb
pusha
jns
jnp
cdq
cmp
xchg
jg
cdq
xor
sbb
retf
dec
or
xor
pop
mov
out
mov
rcl
clc
mov
scas
or
xchg
cmp
xchg
cmp
sub
js
pop
mov
outs
mov
test
cmps
sahf
xor
push
popf
or
inc
(bad)
lock
mov
jns
adc
int3
inc
pop
gs
out
push
arpl
push
lods
and
fs
and
sbb
sbb
mov
retf
and
aad
test
mov
jne
test
cli
sbb
mov
pop
add
pushf
ret
pop
pop
retf
fs
es
repnz
mov
or
jbe
pop
jne
jg
jp
bt
mov
sar
out
mov
cmp
out
imul
sbb
jne
retf
fnstsw
and
pushf
push
bnd
mov
imul
movs
(bad)
popa
jmp
jp
mov
test
outs
pop
xor
repz
cmps
std
out
adc
push
cmps
arpl
mov
out
lahf
loope
or
aaa
pop
mov
inc
or
jle
add
aaa
js
bound
fcmovnb
call
mov
cmp
lods
sbb
(bad)
test
jae
outs
addr16
jo
in
cdq
out
stc
and
ja
(bad)
iret
jmp
mov
popf
and
gs
xlat
enter
pop
inc
sub
test
sub
adc
cmp
mov
inc
sub
retf
outs
adc
test
fimul
cs
jns
mov
jbe
scas
stc
mov
xchg
jg
call
ss
mov
sub
or
cld
mov
inc
cmp
pop
mov
fstp
jb
cdq
xchg
jne
mov
shl
out
fld
xor
out
js
mov
pop
cwde
repz
out
jae
cmc
and
inc
das
jno
lahf
mov
sbb
fs
test
mov
(bad)
test
rcr
or
cmp
push
stc
ds
lods
cmps
into
xor
loope
test
movs
sub
xlat
inc
sbb
ret
fisubr
arpl
mov
aad
push
popa
mov
lahf
sbb
das
cwde
aam
mov
out
pop
aam
(bad)
dec
sub
pop
dec
lods
es
sbb
pop
fistp
test
lahf
in
ins
xor
stc
push
mov
ret
mov
cmp
mov
lahf
mov
fcmovnu
iret
div
out
xlat
in
and
(bad)
jmp
frndint
mov
aam
mov
jns
sub
dec
sub
enter
dec
mov
imul
data16
adc
arpl
sbb
jne
adc
imul
aam
into
inc
xlat
pop
cmp
pushf
jae
sub
sbb
lahf
mov
and
hlt
mov
imul
sbb
dec
mov
jnp
out
ficom
push
and
out
pop
push
out
mov
jl
xchg
push
sbb
pop
mov
fwait
lods
inc
xor
xor
mov
sbb
xor
jbe
sbb
mov
cmp
les
mov
push
fist
sbb
call
pop
enter
push
cmp
sahf
or
or
xchg
push
loope
jle
xchg
addr16
pop
fldenv
add
in
stos
push
ins
(bad)
cs
adc
inc
mov
bound
clc
sahf
xor
rcr
sbb
dec
ja
arpl
xchg
mov
cmp
in
rcl
mov
test
dec
cmc
xor
stos
xor
and
xchg
out
cmc
push
repz
rcr
fwait
sti
not
test
sbb
sar
add
push
ins
stos
sbb
out
addr16
adc
xchg
fwait
mov
les
dec
std
pop
cmp
push
(bad)
lds
aam
and
mov
xchg
sbb
shl
xor
(bad)
inc
pop
stc
or
and
pop
stc
mov
sbb
jno
jl
and
call
mov
inc
mov
sub
sbb
mov
inc
xchg
cmps
cwde
leave
ret
xor
ss
stos
hlt
mov
mov
mov
or
jbe
lods
push
jno
and
xor
mov
sub
inc
sub
sbb
stos
retf
xchg
sbb
push
mov
pop
mov
inc
cmp
iret
outs
repnz
(bad)
repnz
pop
pop
popa
mov
into
fcmovnu
je
xor
out
stc
lds
cmp
pop
cli
sbb
popa
fisttp
fstp
mov
fnstenv
fisttp
retf
cmp
loop
das
aaa
xchg
js
mov
jo
xchg
test
popf
xchg
mov
ficomp
dec
fxch
outs
adc
pop
mov
pop
in
imul
xor
xchg
xchg
mov
sub
mov
xlat
addr16
jmp
xchg
cmc
push
icebp
sti
jmp
scas
cmp
cmp
or
loope
test
mul
ins
ja
imul
shl
cmp
lahf
mov
rcl
mov
inc
sbb
out
push
sub
sbb
push
xor
mov
mov
int
rcr
ds
or
mov
xchg
mov
mov
pop
mov
pop
imul
mov
push
jmp
mov
rcl
fwait
inc
cmp
bound
jne
sbb
dec
sahf
pushf
cld
xchg
js
test
pop
outs
push
jno
push
out
ds
lea
fmul
xlat
sub
xor
pop
cmps
jne
les
push
pusha
popf
mov
xchg
xchg
dec
addr16
std
sub
call
and
mov
repnz
xchg
sbb
jmp
fwait
ins
mov
rol
(bad)
pop
mov
sub
ss
dec
cdq
sub
xchg
mov
xchg
data16
aam
sub
(bad)
jle
imul
(bad)
outs
addr16
lods
cmp
retf
clc
mov
idiv
mov
retf
fisubr
xchg
outs
xor
stos
iret
cmps
mov
outs
xor
imul
jecxz
cs
push
test
push
jle
pop
lods
pop
dec
stc
inc
gs
add
into
mov
int3
outs
pop
in
(bad)
cdq
arpl
fld
loope
je
mul
ret
fs
cli
and
test
mov
test
test
mov
adc
lods
dec
sub
pop
mov
pop
aad
jbe
mov
lods
(bad)
xchg
xor
dec
cmp
aad
mov
dec
int3
icebp
pop
ret
mov
or
das
fxch
mov
pop
outs
mov
jns
ja
inc
mov
mov
fsubr
push
pop
addr16
out
inc
jb
or
cmp
jns
jge
daa
(bad)
mov
cwde
inc
aad
or
test
or
dec
hlt
and
call
int3
inc
scas
fcom
jg
cmp
out
dec
gs
and
sub
ds
pop
mov
out
and
cmc
mov
mov
jmp
ins
jmp
popa
mov
xlat
sub
ret
cmp
ja
adc
test
ja
ins
(bad)
push
sub
retf
push
mov
or
and
adc
cli
or
int
push
mov
cmp
lahf
push
xchg
mov
and
fsubrp
mov
xor
lods
fwait
aad
xor
mov
add
test
sub
movs
and
ds
fld
sahf
mov
push
ss
mov
xchg
jecxz
fsub
retf
out
push
jmp
push
daa
das
jae
(bad)
icebp
cld
out
push
outs
fstp
addr16
imul
fld1
push
scas
aad
in
push
cmp
xor
cdq
popa
mov
xchg
mul
mul
in
aas
jo
dec
les
or
xchg
test
test
xchg
fld
das
les
sahf
dec
ins
mov
repz
sub
call
mov
cld
xor
js
push
sbb
sar
iret
and
push
push
pop
fst
jmp
aaa
adc
fistp
lea
jge
pop
rol
xchg
fst
imul
adc
xor
aaa
jb
cmp
jecxz
sahf
(bad)
fimul
out
arpl
outs
cmc
mov
lahf
scas
xchg
in
mov
cdq
repz
adc
repnz
out
out
imul
jo
jb
imul
int3
push
clc
cdq
aad
out
call
pop
xlat
dec
ds
(bad)
scas
adc
out
mov
stos
loopne
bound
les
call
mov
lods
push
jne
pop
xchg
jae
sbb
lea
cmps
iret
imul
in
dec
fimul
mov
or
into
adc
fs
movs
aaa
and
out
push
out
pushf
push
mov
(bad)
out
dec
lea
mov
mov
inc
ds
mov
stos
mov
ins
std
scas
test
ror
loop
fwait
ret
mov
xchg
movs
retf
jecxz
je
lahf
jg
stos
xchg
cmp
mov
std
outs
mov
inc
aaa
(bad)
push
scas
dec
cmp
daa
fucomp
push
stos
(bad)
mov
outs
cmp
xchg
pop
pop
ins
aas
xor
repz
adc
repnz
pop
in
mov
jnp
mov
sbb
scas
inc
fisttp
das
pushf
jo
pop
popa
test
popa
pop
push
pop
in
dec
fucomp
jmp
jb
jns
sbb
mov
les
cmps
cdq
mov
pop
lea
xchg
jmp
mov
lods
cmp
hlt
(bad)
mov
test
mov
fnstcw
sbb
(bad)
push
xlat
stos
aam
call
lahf
xor
fistp
sbb
ins
mov
je
in
aaa
pop
inc
xchg
xor
ret
pop
nop
retf
mov
scas
jo
mov
xchg
cmps
jecxz
lods
dec
jmp
mov
mov
jae
mov
add
push
jmp
in
push
leave
pop
push
ds
or
inc
jge
in
jmp
fistp
mov
jecxz
jl
stos
jno
aad
adc
in
mov
xchg
nop
add
in
(bad)
push
cs
jno
fbld
aam
mov
jno
stos
xchg
inc
inc
mov
lds
pop
outs
inc
mov
mov
xchg
loop
mov
add
movs
xchg
inc
xor
sar
or
cmp
(bad)
in
inc
cmc
push
dec
xor
repnz
pop
jle
mov
inc
jno
xor
ret
out
cdq
fbld
nop
push
and
repz
es
in
cmp
adc
mov
cmps
popf
in
mov
cli
pop
out
ja
sbb
mov
xchg
fldenv
push
rcr
aad
fldlg2
xor
popa
fsubr
or
aad
ret
xchg
jl
jb
dec
popf
ret
sub
jo
in
sbb
push
ins
xchg
inc
lods
imul
push
into
and
mov
iret
mov
mov
out
xor
mov
pop
lods
cmp
clc
leave
pop
mov
popa
sub
inc
(bad)
je
adc
xchg
repz
clc
outs
lahf
stc
xchg
aam
das
inc
fld
dec
gs
fimul
cmp
sbb
xchg
es
jns
stos
adc
andps
cmp
or
ins
repnz
jmp
test
in
cmc
addr16
dec
sbb
sub
inc
popf
out
out
push
jmp
ins
mov
jmp
sbb
xchg
dec
sub
pop
fdiv
sbb
ret
cmovl
pushf
mov
popf
loopne
dec
out
imul
pop
inc
pop
xchg
pop
or
data16
mov
jmp
pop
jb
(bad)
adc
leave
xchg
sbb
jno
xor
fstp
imul
xchg
and
jns
clc
dec
xor
inc
mov
mov
sbb
mov
iret
jbe
and
xchg
push
iret
push
mov
retf
pushf
mov
out
or
mov
cmp
out
xchg
xchg
scas
clc
or
mov
jo
jmp
ja
inc
ds
out
loopne
(bad)
fsubr
(bad)
or
pop
in
rol
mov
push
sti
jb
jge
jmp
sub
ficomp
pop
in
out
lock
push
or
outs
mov
(bad)
es
mov
(bad)
lock
daa
dec
popa
pop
mov
test
mov
cmp
and
ds
js
loop
retf
mov
xchg
and
or
test
xor
lods
stc
push
mov
push
jo
(bad)
out
nop
clc
sbb
mov
(bad)
mov
out
push
xchg
ret
sub
sub
dec
int
inc
mov
sbb
dec
xor
leave
aaa
fisub
imul
mov
test
cld
and
dec
push
test
xchg
daa
jecxz
push
ja
imul
cmp
mov
sub
mov
sbb
mov
retf
rcl
sub
inc
int
sbb
fmul
ins
int3
xor
pop
cld
cld
pop
mov
mov
aas
pop
in
(bad)
arpl
add
mov
and
sub
xlat
jmp
int3
jge
out
mov
mov
push
xor
push
in
cmp
mov
xchg
xchg
inc
cmp
push
repnz
int3
leave
movs
inc
jge
xchg
fwait
mov
dec
ret
mov
push
mov
cmp
push
mov
aaa
pop
cwde
pushf
or
dec
movs
mov
(bad)
in
sub
cmp
cmp
mov
lds
test
and
add
pop
mov
cmps
cmp
jecxz
data16
loop
pop
into
dec
cmp
pop
addr16
pop
lea
aaa
sbb
fcmove
cmp
int
mov
cmps
dec
(bad)
adc
pop
lds
(bad)
das
data16
adc
pop
mov
pop
in
clc
mov
stc
ins
mov
mov
jecxz
mov
cld
pop
into
cmp
(bad)
xchg
push
stos
xlat
mov
adc
cmp
leave
fist
xchg
fcmove
ds
or
dec
adc
lods
push
mov
loop
adc
out
or
push
in
pop
xchg
mov
adc
xchg
inc
xor
cs
cmps
push
mov
mov
xor
icebp
push
in
dec
les
sub
bound
mov
jmp
and
or
pop
sbb
or
jmp
adc
xor
sub
sbb
les
cmp
jbe
jbe
lock
xchg
fidiv
fld
adc
fadd
xchg
pusha
mov
fmul
sbb
out
in
dec
ins
into
push
jmp
iret
ror
sbb
mov
(bad)
stc
lahf
(bad)
retf
mov
pop
push
out
mov
jb
push
jnp
ss
jbe
call
inc
push
mov
lahf
(bad)
stos
aas
pusha
and
ins
aaa
inc
out
cmp
call
mov
jmp
dec
mov
stos
adc
xchg
pop
mov
mov
test
jo
xor
fsub
jg
sub
ret
out
pop
fdivr
retf
pop
enter
jl
sub
fdiv
xlat
cmc
aam
rol
or
addr16
and
cmp
neg
push
mov
call
mov
loop
repz
xchg
sbb
cmp
test
pushf
sbb
in
pop
dec
inc
jne
stos
cmp
jg
mov
retf
daa
inc
test
or
xor
jmp
dec
into
adc
jecxz
js
bnd
(bad)
fisttp
fsub
cmp
jle
(bad)
mov
pop
out
mov
mov
std
mov
cmps
fsubr
(bad)
dec
hlt
inc
pushf
mov
jp
sub
ins
sub
xor
ins
aad
dec
sub
push
or
adc
fwait
rcr
(bad)
mov
jb
pop
in
or
scas
sbb
in
retf
ror
into
ror
popf
mov
stos
movaps
sub
xchg
add
push
mov
pushf
pop
pop
vxorps
push
pop
loope
mov
mov
sbb
(bad)
jae
jnp
xor
xchg
mov
xchg
fnstsw
stos
faddp
mov
dec
mov
xchg
jle
xchg
cmc
rcl
ret
cmp
pop
nop
cli
out
cmp
div
add
int3
mov
jecxz
out
xchg
jne
jb
mov
out
rcr
retf
pop
xlat
stos
fild
imul
stos
jbe
sbb
sbb
or
jns
dec
les
mov
sbb
push
cwde
out
not
in
ins
sbb
daa
imul
mov
pop
scas
in
xchg
sbb
or
and
jbe
push
sbb
push
pop
rcr
data16
outs
and
ror
in
mov
push
pop
pop
xor
lea
pop
les
xchg
icebp
dec
sbb
fcomp
faddp
xchg
mov
jge
gs
enter
in
cmc
push
xchg
jl
adc
mov
ficom
ins
xor
jle
(bad)
mov
scas
adc
aad
jno
cmp
movs
mov
jbe
sbb
sbb
frstor
js
icebp
lods
sbb
aaa
and
mov
jl
popa
mov
ja
adc
loop
jg
cmp
div
push
jg
xchg
repnz
mov
mov
sbb
aaa
pop
repnz
push
pop
pop
push
adc
push
daa
mov
push
mov
arpl
adc
js
pusha
lahf
lahf
sar
in
loopne
scas
loopne
jecxz
cli
cwde
repz
scas
cmp
in
xor
js
arpl
les
and
fbstp
cmps
stos
inc
mov
mov
inc
push
and
aam
inc
mov
pop
hlt
adc
mov
fcmove
(bad)
cmp
sub
push
test
imul
xchg
out
push
repnz
fsub
mov
out
out
cmps
lock
(bad)
repnz
loopne
aam
xor
sbb
cmp
xchg
cmps
out
fs
int3
jle
rcr
jge
mov
out
sar
sub
dec
add
mov
popa
pop
mov
rcr
cld
jns
fstp
sub
xchg
sub
mov
inc
ins
fadd
rcr
jae
jge
das
cmps
mov
scas
aas
mov
push
cmp
les
mov
mov
adc
fsubr
clc
cmp
(bad)
ins
into
loopne
pop
push
ins
fstp
addr16
jge
mov
cs
jp
mov
repz
repz
pop
scas
jl
jbe
retf
dec
mov
call
cld
mov
jbe
test
in
push
loop
in
pop
clc
push
lods
into
xchg
mov
jae
repz
pop
jbe
aam
in
sbb
mov
pop
mov
ja
pop
loop
(bad)
sbb
call
xor
mov
dec
inc
out
jmp
cs
rol
jp
lods
xor
mov
lods
or
mov
test
jl
retf
ffreep
cmp
bound
dec
les
call
fnstsw
cdq
pop
out
pop
ins
sub
pop
pop
cmp
popf
aaa
adc
lods
inc
ss
mov
lea
xchg
mov
mov
repnz
out
sbb
repnz
xchg
jmp
lods
mov
mov
lds
push
(bad)
push
push
mov
cli
sub
mov
xor
leave
add
xor
cmp
aaa
mov
cs
jle
mov
inc
fsub
or
outs
dec
xor
pusha
dec
and
xor
icebp
fldcw
lods
pop
out
cmp
and
xor
dec
imul
cwde
imul
in
jmp
lods
cwde
out
and
mov
popf
cld
push
pop
out
dec
clc
sbb
cmc
jae
dec
sahf
outs
dec
add
mov
push
les
(bad)
push
push
in
je
xchg
mov
lea
mov
cmp
loop
adc
in
stc
cs
dec
cmp
test
mov
test
dec
cmp
ins
int3
icebp
add
fwait
je
push
dec
jecxz
das
out
mov
mov
xchg
cmp
out
iret
out
repz
and
std
mov
and
mov
dec
or
adc
ins
outs
scas
sub
pop
inc
fdivr
loop
scas
sahf
xor
fistp
dec
out
stos
(bad)
retf
aaa
mov
stos
out
adc
mov
(bad)
pop
mov
cmps
aaa
or
(bad)
ins
dec
add
fwait
jno
and
out
int3
std
out
fcmovb
dec
mov
push
jno
xor
inc
or
xor
stc
push
test
mov
xchg
cld
adc
mov
jl
into
mov
jl
stos
or
mov
jg
sbb
jge
fs
jnp
mov
js
icebp
aas
cmp
ins
retf
push
sar
xlat
jb
fsubp
fisub
push
cmp
in
call
lods
sub
push
clc
push
inc
jp
arpl
cdq
pop
icebp
dec
mov
cmps
xor
add
lea
fisub
ss
daa
and
mov
imul
push
and
fwait
imul
pushf
push
pop
dec
cmp
ss
scas
jge
popa
jmp
jmp
mov
fwait
ins
pusha
outs
cld
xchg
sbb
xor
lahf
cmp
sbb
cdq
dec
ins
xor
mov
sub
push
dec
adc
enter
mov
xchg
out
addr16
sub
mov
jecxz
lods
int3
mov
call
out
push
das
arpl
int
repz
mov
data16
out
daa
jbe
xor
pop
aad
jb
xchg
mov
mov
imul
mov
pop
sbb
jno
repz
scas
iret
cmp
mov
stos
je
mov
mov
jne
mov
gs
mov
pop
mov
inc
push
pop
mov
or
fisttp
out
push
push
cld
lea
xchg
xchg
adc
test
out
adc
cld
movs
jne
fcmovnu
jmp
push
scas
loopne
adc
js
arpl
int3
clc
pop
fild
jg
(bad)
js
mov
out
btc
scas
xor
and
dec
dec
in
nop
lock
leave
ins
test
pushf
sub
jl
cmp
add
mov
mov
cs
mov
or
sbb
push
(bad)
cwde
xchg
pop
jne
add
mov
dec
mov
sub
and
adc
cmp
(bad)
xchg
mov
(bad)
lods
push
mov
ja
push
xchg
movs
add
cmp
fdivr
pop
(bad)
leave
xchg
pop
cmc
cmp
or
jne
(bad)
mov
pushf
and
xor
cdq
sahf
fnstenv
outs
jecxz
in
lea
fsub
lods
gs
pop
jb
nop
jp
mov
gs
xchg
xor
and
push
cmp
xchg
ss
popa
sub
clc
xor
in
push
shl
aaa
out
mov
jle
aam
and
push
jns
push
mov
pop
int
xor
je
mov
mov
mov
xor
xchg
pop
aaa
cmps
xor
imul
ins
mov
or
ins
mov
cli
inc
test
cmp
mul
mov
xlat
push
lea
mov
stos
fistp
les
mov
out
test
fs
aaa
xlat
pop
mov
test
stos
xchg
jp
adc
mov
xchg
cmp
int
mov
ja
arpl
push
int3
dec
into
pop
pop
(bad)
mov
inc
pop
int
sub
cmp
mov
mov
pop
mov
int
gs
out
(bad)
(bad)
sar
rol
push
mov
lds
aad
and
sub
and
jmp
aaa
jno
xor
and
xchg
mov
mov
cmp
in
in
(bad)
icebp
xor
xor
fwait
icebp
add
int
aaa
push
add
shl
push
nop
pop
jmp
sub
test
out
push
mov
lods
fimul
pop
sbb
stos
dec
fimul
mov
iret
pushf
stos
mov
loopne
dec
int3
push
mov
xchg
cmp
icebp
in
(bad)
pop
push
sbb
mov
mov
loopne
mov
retf
jbe
and
cmps
jle
mov
mov
jne
sub
dec
mov
loope
stc
mov
stc
mov
sub
fucomp
test
jb
movs
adc
lods
popa
xor
jl
out
call
xor
cmp
shl
push
es
fdiv
push
out
out
mov
dec
or
aaa
and
cmp
xor
daa
jns
xor
add
stc
jle
lahf
mov
inc
(bad)
aad
out
(bad)
jle
adc
and
stc
mov
aam
retf
mov
mov
cmp
sub
xor
outs
xchg
call
mov
push
pop
jb
sub
aas
push
pop
repnz
icebp
push
mov
lahf
xor
out
jo
sahf
dec
mov
out
cld
fst
mov
xchg
push
retf
cdq
jbe
out
data16
mov
sbb
jne
mov
mov
fisttp
jns
or
in
clc
popa
mov
xchg
(bad)
jmp
imul
movs
mov
inc
cdq
xor
outs
inc
aaa
lods
aas
mov
sbb
stos
jno
(bad)
jl
mov
retf
push
mov
mov
mov
mov
mov
mov
fstp
and
loope
loop
out
test
cld
pop
je
out
jmp
push
jge
in
into
and
xor
ss
out
enter
inc
xchg
adc
les
pop
jmp
lods
mov
ret
adc
mov
loope
arpl
fcmove
xabort
or
cli
mov
xchg
bound
loop
into
popa
xor
cwde
lea
rcr
mov
xchg
sbb
xchg
pop
sar
cmp
jmp
jbe
adc
repz
arpl
out
int3
bt
aas
inc
pushf
outs
(bad)
scas
jp
mov
or
fwait
test
jmp
jecxz
push
cmp
jae
repnz
mov
mov
fmulp
mov
cmp
test
imul
les
lods
sub
repz
sub
stos
xchg
inc
lea
cmp
mov
sti
pop
in
fsub
and
(bad)
adc
pop
mov
into
dec
bound
and
mov
bound
repnz
jl
dec
mov
ins
jp
lods
std
jne
stos
jnp
jne
pop
pop
inc
mov
data16
xor
sub
in
mov
push
cli
popa
ins
int3
xor
jnp
sbb
ja
cli
test
jae
mov
hlt
cmp
cmp
push
ja
mov
mov
inc
xchg
jns
shr
(bad)
adc
data16
or
std
fnstsw
mov
out
push
jge
jnp
test
mov
into
repz
fcomp
dec
lea
in
push
je
repnz
inc
pop
std
jl
inc
stc
movs
pop
imul
jnp
retf
scas
mov
mov
iret
sbb
mov
dec
mov
cdq
arpl
int3
pop
pop
arpl
xor
pop
repnz
fsubr
sahf
lds
mov
cmp
icebp
data16
jp
sub
shl
repnz
out
mov
div
mov
pop
(bad)
arpl
fmul
or
shl
icebp
mov
leave
pop
clc
cld
ret
(bad)
xlat
pop
ss
and
jae
aas
sbb
mov
or
dec
es
imul
mov
aad
(bad)
div
sub
stos
xlat
repz
push
(bad)
fisubr
aas
icebp
or
ror
in
mov
dec
jmp
xor
dec
test
cmp
and
xor
and
cli
sub
jp
mov
dec
retf
jecxz
clc
mov
pop
outs
(bad)
and
inc
stos
jnp
les
pop
outs
fistp
mov
inc
push
xchg
dec
lds
(bad)
jp
test
mov
xchg
xchg
cmps
jecxz
push
scas
fwait
imul
repnz
pop
and
pop
movs
jecxz
inc
mov
ret
int
vpsllq
in
mov
push
pop
dec
mov
push
inc
mov
jns
and
inc
hlt
and
cmc
push
icebp
mov
hlt
movs
loope
xlat
jmp
jmp
vsubss
iret
out
out
aad
jge
iret
ss
xchg
pop
fsub
fnsave
fcmovne
jge
mov
ja
dec
sbb
sub
push
mov
and
ins
mov
sar
sbb
mov
js
(bad)
jns
cmp
cmps
mov
jmp
push
sbb
movs
pop
retf
jmp
sar
repz
popf
cmp
frstor
add
mov
push
int3
cli
adc
push
add
ficomp
push
cmc
call
test
movs
pusha
repz
cmps
mov
movs
mov
pop
fsubp
into
in
dec
inc
push
fstp
pop
imul
jbe
(bad)
inc
jle
std
lods
jp
clc
jmp
nop
pushf
imul
je
retf
std
cmp
push
xchg
xchg
aaa
std
inc
sbb
lods
in
xor
out
in
repz
mov
or
mov
jle
push
pop
aad
mov
pop
inc
mov
mov
and
lods
jnp
xchg
mov
aas
jmp
push
jnp
ds
mov
jno
sub
xchg
adc
div
daa
in
fmulp
outs
and
daa
js
out
lds
cmovp
btr
xor
or
ss
scas
pop
(bad)
sub
call
test
push
sti
jnp
out
data16
pop
mov
push
(bad)
jns
mov
or
lods
sub
mov
push
mov
aad
loope
out
pop
or
sar
dec
movs
xchg
jl
sahf
pusha
int3
frstor
sahf
lahf
outs
cmp
jne
outs
mov
mov
movs
icebp
aam
test
fld
aaa
int
or
lods
stc
loope
fsubr
lods
jge
lahf
xchg
ret
vminsd
int3
ins
jne
aas
loope
dec
addr16
mov
xor
lods
scas
out
jo
outs
mov
and
iret
cmp
mov
hlt
adc
out
dec
push
call
cmp
inc
xlat
lock
adc
xor
iret
add
jnp
stos
mov
lock
cld
mov
mov
pusha
call
daa
lahf
(bad)
fadd
xchg
sub
cld
shr
or
scas
rcr
jne
mov
lock
jno
jb
stc
repnz
icebp
ds
add
in
dec
outs
ja
pop
mov
fisttp
sar
(bad)
retf
(bad)
push
fisubr
sahf
aaa
jns
xchg
mov
clc
ins
ja
je
jge
leave
retf
ss
(bad)
(bad)
sbb
jp
pop
test
pop
popf
push
dec
jno
enter
jg
pushf
in
rol
int3
cld
push
mov
xor
add
inc
pop
mov
js
lea
xor
(bad)
dec
dec
es
in
mov
iret
inc
mov
jne
fcomp
push
xchg
xchg
out
shr
cli
dec
xor
jo
js
cmp
xchg
push
imul
cmp
test
aad
xor
int
cmp
lock
pop
outs
xchg
sub
(bad)
xchg
cld
retf
xchg
clc
aad
retf
test
push
bound
mov
ja
mov
cmps
sub
pop
popf
and
dec
icebp
adc
pushf
popf
test
jl
cmp
cmps
cmp
mov
loope
jle
xlat
cld
(bad)
jne
jb
mov
cdq
jmp
mov
psubb
mov
jmp
cmps
stos
xchg
xchg
jbe
data16
test
repz
ret
pop
mov
bound
lods
mov
int3
sbb
ret
xor
xor
jo
retf
aad
sbb
mov
setp
(bad)
fisubr
shr
stos
out
repz
pop
mov
out
in
jmp
jl
jecxz
gs
sub
dec
xchg
lahf
clc
and
jecxz
jnp
popf
mov
sbb
aas
retf
fdiv
mov
mov
lss
mov
aaa
retf
pop
es
int
daa
xchg
jp
mov
sti
clc
int3
inc
mov
gs
pop
cmp
dec
je
in
out
std
data16
jg
pop
adc
push
out
pop
mov
fs
sahf
popa
sub
dec
inc
xor
xchg
mov
icebp
mov
and
jge
push
(bad)
in
std
fwait
shr
pop
dec
push
leave
int3
jb
pop
sti
hlt
sub
push
imul
test
sub
cld
inc
sbb
nop
xor
inc
imul
jp
push
out
cdq
popa
pcmpeqb
cmp
or
stos
rcl
mov
(bad)
pop
xor
jg
mov
retf
pop
mov
cld
or
aas
mov
sub
dec
and
clc
aas
xchg
xchg
jle
lods
rcl
xchg
das
cdq
popf
mov
jno
test
ins
push
sbb
movs
fsubp
jle
pop
sub
jle
lods
xchg
fimul
push
in
and
xor
fwait
cmp
sbb
test
loop
sbb
jno
adc
xchg
dec
and
add
ins
add
dec
pop
test
repz
aas
outs
pusha
ss
pop
sti
lods
jle
in
call
cdq
out
inc
adc
jge
push
in
pop
cmp
xchg
sbb
push
div
shl
cmps
sbb
dec
(bad)
in
mov
mov
fwait
js
jg
and
(bad)
movs
mov
push
lds
cs
dec
jecxz
xchg
pop
fld
ret
arpl
push
repz
dec
push
mov
call
mov
sub
div
or
mov
xor
xor
fistp
dec
push
arpl
les
sbb
mov
dec
lahf
data16
les
and
pop
test
xchg
sti
xor
fcom
out
cmp
mov
sub
push
and
ins
in
in
fdiv
sub
aam
sbb
and
xchg
jle
out
jl
movs
clc
jne
add
out
test
ja
sub
push
loope
sub
gs
inc
leave
jb
jmp
out
sub
dec
retf
(bad)
jecxz
(bad)
or
push
cmp
(bad)
out
sbb
in
int
idiv
dec
retf
mov
cld
mov
scas
movs
jno
movs
adc
ret
loope
xor
call
sahf
aaa
(bad)
jne
(bad)
pop
hlt
push
idiv
push
pushf
outs
imul
cmp
out
jge
xchg
push
jle
stos
pop
ja
pop
out
(bad)
xlat
adc
cmp
mov
pop
dec
daa
iret
(bad)
mov
outs
push
jbe
xchg
pop
stc
and
das
shl
push
stos
int
and
jg
cmp
mov
cmc
fcom
out
repz
dec
cmc
stos
jle
(bad)
xlat
adc
pop
jmp
mov
fistp
cwde
ja
sub
sbb
out
push
cwde
or
push
into
(bad)
out
mov
cwde
into
push
pop
(bad)
fnstsw
div
sbb
gs
and
frndint
jb
sub
(bad)
sbb
stos
cdq
rcl
lods
loopne
mov
(bad)
lods
(bad)
pop
in
loopne
inc
shr
jp
adc
cmps
pop
loope
dec
(bad)
into
movs
daa
call
and
into
xchg
dec
in
stos
and
and
arpl
pop
pop
jmp
pop
inc
pop
adc
fsub
jmp
inc
dec
dec
mov
gs
jb
retf
cmp
cmove
mov
addr16
and
pushf
repnz
mov
or
inc
mov
jmp
cmp
stc
sbb
das
push
mov
sbb
inc
rcr
xchg
xor
add
sbb
jno
(bad)
push
sub
jno
add
cs
xor
mov
xchg
sbb
stc
mul
stos
ret
push
or
sti
retf
int
(bad)
sub
sar
dec
out
out
(bad)
lods
ins
cwde
loope
imul
rcl
in
leave
(bad)
pop
out
cmp
adc
les
fcomp
int3
mov
sbb
aam
lods
loopne
ja
(bad)
adc
retf
push
call
outs
(bad)
inc
dec
cwde
add
mov
adc
imul
stos
int3
mov
(bad)
sbb
rol
(bad)
bnd
xchg
leave
mov
call
or
inc
pop
popa
mov
and
out
les
and
mov
dec
mov
dec
pop
pop
fsubr
shl
pop
loope
jbe
jecxz
ds
push
call
mov
jae
mov
gs
test
jnp
mov
out
cmp
jno
pop
add
cmp
jp
in
push
mov
pushf
je
retf
cdq
cmp
pop
jge
outs
jecxz
cmc
jno
dec
pop
jecxz
lods
push
and
and
stc
xchg
xchg
adc
sub
fld
loop
push
addr16
dec
cmp
popf
push
in
mov
lods
idiv
sbb
lock
cmc
and
xchg
movs
mov
sbb
daa
repz
cmps
mov
lds
frstor
sar
xor
jmp
sbb
in
nop
cmc
ins
inc
cmp
dec
neg
jbe
adc
(bad)
bound
gs
scas
xchg
mov
(bad)
and
push
jo
std
sbb
pop
mov
dec
or
xor
mov
mov
cmc
and
jne
clc
out
pushf
ret
adc
xchg
out
mov
mov
ret
xchg
jne
jmp
ds
jne
jle
dec
xlat
cmp
sti
call
push
outs
aad
cmp
cmp
retf
xor
jle
punpcklwd
adc
sbb
mov
loope
dec
jg
sbb
sub
outs
dec
pop
pop
cdq
scas
scas
fs
out
neg
xchg
cwde
popa
or
mov
cmp
bnd
mov
hlt
adc
cdq
test
inc
sahf
mov
mov
out
cwde
arpl
jl
cmpxchg
repnz
sahf
and
push
imul
into
fidivr
dec
mov
mov
std
sub
std
ja
mov
fld
mov
aad
in
xor
sub
div
jge
repnz
xchg
(bad)
sbb
push
cmc
mov
mov
dec
int
push
(bad)
rep
test
mov
inc
xor
mov
push
jne
mov
stos
jp
jae
mov
int3
test
adc
and
sub
hlt
or
cmp
jmp
mov
and
sahf
in
mov
ja
jne
xchg
xor
mov
repz
fild
ret
cdq
push
lock
mov
cmp
and
out
xchg
fild
call
arpl
dec
and
(bad)
pop
push
cmp
int3
push
xor
pop
cvtps2pd
sub
data16
loop
into
mov
mov
addr16
jne
jg
repnz
pop
mov
aad
fisttp
lods
jbe
jno
test
stc
(bad)
icebp
outs
pop
pop
imul
cmp
dec
push
outs
popf
lods
call
pop
mov
(bad)
not
xchg
pop
out
jmp
push
bound
lock
mov
fmul
outs
xor
std
push
mov
adc
pop
enter
pop
clc
mov
mov
cmp
mov
pop
repnz
and
(bad)
enter
fs
push
mov
inc
cdq
cmp
push
fist
fs
daa
outs
repz
popa
mov
lahf
jg
dec
out
xor
dec
mov
arpl
movs
mov
imul
movs
dec
mov
pop
int
fwait
aaa
fxam
dec
outs
xchg
sub
(bad)
rcr
and
sub
push
cmp
ins
mov
push
test
pop
cld
out
(bad)
cdq
mov
xor
aas
in
ret
or
inc
xchg
inc
xchg
push
jno
mov
in
icebp
mov
mov
inc
icebp
(bad)
in
push
cmp
xchg
jecxz
mov
out
pop
xor
jl
call
int3
inc
xor
push
ja
jl
fcomp
mov
call
rcl
lods
(bad)
push
loop
iret
mov
pop
in
pop
loope
mov
adc
dec
sub
clc
adc
mov
sub
xchg
adc
stos
jbe
inc
pop
jge
sbb
cmp
in
movs
in
aad
mov
int3
jg
sar
mov
gs
lds
aas
xchg
sub
xor
dec
jge
dec
mov
mov
hlt
jge
sub
pop
and
int3
xchg
in
unpckhps
xor
pop
ret
dec
xchg
jl
mov
cmp
out
xchg
push
inc
cmps
mov
lds
xchg
(bad)
out
mov
stos
jne
imul
aaa
out
jb
(bad)
popa
in
rcr
cmps
int3
jae
repz
pop
mov
xor
jmp
mov
movs
inc
in
mov
add
cwde
(bad)
fbstp
out
jp
sub
pushf
xor
mov
or
in
cmp
push
es
es
scas
icebp
fs
dec
xor
mov
xlat
cmps
sub
repz
repnz
inc
loopne
stos
sbb
(bad)
xor
in
push
fwait
aad
cmp
loopne
movhlps
push
retf
mov
or
jl
ss
aas
inc
jmp
outs
daa
jge
popf
jno
sti
pushf
mov
xchg
daa
jmp
push
nop
bound
stc
inc
sbb
div
jnp
pop
call
repnz
sti
adc
xchg
inc
(bad)
sbb
pop
aaa
test
push
or
out
mov
cwde
mov
mov
mov
out
mov
ja
popa
out
mov
ror
adc
pop
mov
inc
aas
ret
ffreep
iret
dec
or
xchg
adc
cmp
fwait
aad
mov
push
frstor
push
clc
sub
in
xchg
mov
sbb
outs
mov
sbb
sahf
aaa
cmp
bound
stos
jno
fcom
outs
jno
mov
(bad)
and
aaa
pop
out
fsubr
inc
sub
call
cdq
data16
out
inc
das
iret
jl
mov
sub
jmp
xor
sbb
sub
dec
pop
jae
movs
push
cmps
mov
mov
out
sahf
jecxz
and
addr16
add
push
sub
add
call
scas
mov
jne
cdq
aam
push
jno
mov
cli
jne
out
inc
popf
push
popf
leave
jnp
add
jg
lods
mov
les
cwde
xchg
int
dec
int3
jb
in
cmp
mov
push
jmp
fs
mov
cdq
test
xchg
lods
push
cmps
xor
wrmsr
fidiv
in
cwde
sbb
mov
push
lods
loope
sbb
std
lds
xor
jae
or
bound
mov
dec
xchg
(bad)
xchg
mov
out
sub
stc
or
pop
dec
cmc
repnz
and
xchg
fisttp
js
add
jecxz
cwde
adc
or
js
push
cdq
leave
ss
cmp
xor
arpl
mov
scas
das
cli
adc
sub
jp
mov
pusha
pop
popf
xor
je
mov
leave
es
or
(bad)
lods
out
arpl
js
out
iret
adc
jp
sub
lahf
mov
data16
inc
daa
xlat
(bad)
in
cdq
out
repz
jae
dec
jmp
iret
repz
pop
dec
xor
les
xchg
add
(bad)
push
push
and
cld
lods
stos
adc
ds
aad
in
mov
daa
lods
inc
sub
pop
or
ss
mov
aas
loop
inc
test
mov
fisttp
dec
sbb
fidivr
mov
sbb
fcmovnu
ja
shr
cwde
(bad)
ins
and
sub
fs
mov
jae
dec
cmp
pop
xchg
mov
mov
jmp
lahf
mov
add
fs
jle
retf
fdiv
icebp
es
dec
mov
cmp
nop
push
(bad)
movs
mov
rol
ret
and
clc
push
arpl
push
mov
jecxz
test
(bad)
push
out
push
into
outs
sahf
pop
out
cwde
or
mov
mov
mul
push
jnp
sub
(bad)
mov
lds
sbb
or
sbb
push
idiv
lahf
out
aas
test
push
shld
stos
mov
dec
and
dec
aam
js
jmp
jp
jp
cmp
cli
daa
mov
jmp
xor
xor
bound
or
fwait
xchg
fadd
(bad)
popf
or
pushf
shr
imul
stos
and
push
loope
push
pop
add
in
sar
cmp
int
and
sbb
int
mov
mov
mov
ds
mov
or
scas
sar
lods
fisubr
jmp
imul
popf
call
(bad)
adc
mov
lds
fbld
lods
ficomp
mov
int
aas
pusha
aas
dec
add
mov
inc
fwait
outs
sbb
xchg
and
mov
push
ins
dec
xchg
mov
(bad)
push
adc
pop
fistp
push
out
jp
sti
cmp
cmp
sbb
and
pop
inc
mul
stos
mov
mov
enter
and
cmp
jge
sub
mov
int3
inc
xor
jmp
jbe
test
fiadd
(bad)
jmp
push
and
jp
push
jne
adc
sub
ja
sub
clc
mov
clc
fstp
inc
jp
loop
jmp
pop
pop
push
sub
pop
je
push
or
int3
loop
ja
pop
mov
adc
out
icebp
dec
mov
fxch
cmp
loop
leave
shl
(bad)
fsubr
mov
nop
add
(bad)
mov
fbstp
pop
adc
cwde
jmp
int
cmc
and
xor
pop
jg
cmp
data16
adc
xchg
bound
retf
mov
pop
icebp
jns
es
sbb
popa
(bad)
in
push
les
mov
adc
fst
ds
cdq
iret
xor
imul
inc
xchg
sti
ins
ds
or
jb
pop
jle
lods
inc
cmp
fidivr
mov
int
out
call
gs
addr16
sub
in
rep
stos
ret
jnp
mov
dec
dec
xor
repz
push
add
lahf
pop
jae
scas
popa
xchg
sti
pushf
xchg
fld
push
loope
(bad)
fcom
popf
and
leave
push
inc
loope
ss
pop
lods
mov
(bad)
out
loope
mov
adc
and
or
jnp
sbb
rol
and
(bad)
loope
enter
fisttp
or
xlat
or
jmp
lock
imul
(bad)
cdq
into
inc
movs
(bad)
stc
fbld
out
push
dec
icebp
ret
and
(bad)
pop
xlat
aam
fisub
mov
xchg
sub
mov
or
aam
div
outs
outs
inc
iret
xor
scas
inc
popf
data16
ja
jno
push
pop
test
ds
neg
(bad)
ret
mov
jnp
repnz
in
inc
xor
cmc
mov
(bad)
ds
jg
retf
push
mov
test
les
ss
mov
stc
fst
mov
cmp
fdivr
jge
pop
and
mov
sbb
idiv
dec
addr16
pop
ret
daa
jbe
out
ret
jno
or
ins
pusha
mov
pop
xor
jo
push
xchg
(bad)
cmps
mov
jnp
hlt
scas
rcr
imul
scas
(bad)
cmps
lods
xor
ins
fwait
cmp
pop
test
dec
sbb
test
push
cld
cld
jmp
mov
frstor
mov
fcomp
dec
jg
push
lods
pop
fnstcw
adc
das
mov
in
(bad)
sahf
jecxz
ins
xchg
pop
dec
(bad)
pop
sbb
mov
jmp
xchg
sbb
jb
lahf
jne
stos
xor
inc
aas
sbb
cmps
es
loop
fucomip
aas
jmp
dec
lea
push
outs
(bad)
push
and
out
lods
dec
in
out
sub
push
stos
dec
dec
loopne
imul
jmp
stc
jno
add
sub
xchg
add
ficom
sahf
adc
sbb
stos
arpl
sbb
cmp
cli
test
jge
scas
inc
pop
pop
outs
lds
mov
fstp
sbb
cdq
jmp
fild
call
stos
and
xchg
test
(bad)
adc
jnp
cwde
fst
hlt
pop
pop
mov
push
out
fcom
(bad)
jecxz
clc
jne
jl
retf
test
pop
sar
(bad)
lahf
in
xor
arpl
sub
mov
sbb
jae
repnz
sub
aam
sub
repnz
mov
sbb
lea
push
call
or
inc
sub
dec
push
ret
cmp
mov
xor
cmp
push
out
jno
pushf
retf
mov
bnd
mov
cmp
les
inc
call
in
push
jae
(bad)
out
sti
cmp
mov
arpl
and
lahf
(bad)
lock
mov
cwde
sub
test
sub
fcmovu
ins
pushf
mov
addr16
pop
jmp
ja
sub
and
sbb
fadd
daa
fbld
outs
inc
idiv
cld
sahf
aaa
jmp
mov
and
retf
adc
ja
sahf
jmp
cmc
or
arpl
outs
fs
icebp
gs
pop
ss
push
popf
mov
in
fwait
in
lods
xchg
sub
pop
cmps
dec
adc
ins
push
mov
out
loope
cli
dec
and
loop
mov
xchg
test
mov
xlat
pop
xchg
cld
sub
dec
mov
xchg
inc
int
or
leave
fwait
inc
mov
movs
add
loopne
sub
jp
cmp
repz
aam
jl
sub
sub
mov
fmul
sbb
push
mov
nop
pop
fnclex
jp
sbb
nop
fadd
sahf
cmp
xor
test
push
mov
sahf
fsubr
xor
(bad)
cvtss2sd
test
or
push
bound
ins
add
das
dec
xor
arpl
jmp
jae
lea
push
jmp
addr16
mov
outs
fistp
dec
dec
pop
hlt
xchg
push
cmp
fstp
push
(bad)
and
sti
ja
iret
fimul
std
int3
in
inc
jp
daa
fstp
xor
xor
add
fcom
jp
cs
sub
daa
jl
cmc
pop
loope
mov
or
xchg
jg
dec
retf
xchg
sbb
jmp
scas
mov
mov
xchg
sbb
retf
mov
out
sub
xor
ss
in
mov
pop
lahf
dec
movs
sub
ret
stc
mov
mov
sub
ins
push
fild
dec
dec
jno
leave
aad
stos
icebp
cmp
push
cmp
pop
xchg
repz
jmp
fwait
jmp
mov
mov
fadd
aaa
mov
sub
aas
jg
jnp
popf
sar
dec
mov
xlat
mov
std
sub
dec
dec
(bad)
fsubrp
(bad)
sub
xchg
outs
inc
dec
movs
push
jne
fsub
pushw
lahf
dec
mov
cli
daa
retf
int
xchg
in
clc
mov
mov
and
pop
mov
cmps
cmp
inc
jnp
jne
test
xchg
arpl
xor
dec
xor
and
into
addr16
mov
mov
mov
or
das
lahf
xchg
int3
mov
mov
jb
mov
jle
and
(bad)
jbe
ror
jo
lods
cdq
cmp
fxch
dec
cmc
adc
or
(bad)
xchg
call
bound
enter
jg
enter
retf
cmp
pop
mov
pop
enter
stos
movs
(bad)
iret
xchg
(bad)
icebp
inc
xor
ins
(bad)
out
jbe
out
push
out
mov
icebp
jb
repz
pop
jl
jge
or
mov
push
mov
sub
(bad)
xchg
sub
pop
in
push
mov
adc
sahf
sti
cmp
arpl
loopne
cmp
mov
pop
leave
imul
and
xchg
cli
inc
mov
adc
sbb
add
mov
mov
outs
icebp
gs
fnsave
(bad)
jne
add
mov
retf
ror
xor
push
mov
pop
xchg
mov
iret
mov
das
inc
lahf
jne
neg
imul
adc
cmp
retf
scas
jp
cli
xor
scas
jecxz
lods
inc
cmp
cld
cmp
inc
cld
cdq
sti
pushf
sbb
dec
xchg
test
lods
(bad)
mov
push
fbld
sub
sar
out
pop
inc
add
pop
mov
in
mov
pop
emms
jmp
clc
cmp
loop
ins
xor
dec
xor
pop
mov
(bad)
dec
imul
lods
loop
(bad)
dec
adc
stos
retf
xor
push
int3
lock
sub
lea
cwde
mov
aas
dec
popa
mov
nop
dec
int3
in
(bad)
jo
in
pop
adc
sub
xchg
mov
fdivr
fcomi
xor
lock
int3
pop
cdq
mov
popf
fdiv
adc
lea
xor
cdq
mov
icebp
mov
or
dec
outs
stos
cs
imul
es
jns
xor
pop
jo
mov
push
fnstenv
rcl
mov
push
stc
arpl
pop
int3
inc
jae
scas
xor
call
fmul
pop
jb
frstor
push
or
ret
imul
retf
or
inc
mov
arpl
xchg
xchg
lock
jmp
outs
push
jecxz
jmp
iret
in
cmp
push
dec
sub
iret
fwait
mov
adc
cmps
repz
jo
jns
fisttp
sbb
mov
stos
cdq
out
in
mov
inc
mov
jecxz
in
pop
daa
xchg
pop
stos
aas
mov
dec
xchg
pop
sbb
clc
in
mov
mov
sbb
mov
and
jno
fs
jb
sub
loopne
mov
jecxz
out
and
mov
cmc
js
adc
scas
push
lods
sub
mov
ds
std
pushf
popa
jg
ins
and
repz
fst
jne
inc
loope
mov
push
imul
fadd
dec
stc
mov
add
cmps
sub
jae
pop
popa
push
mov
iret
jae
cmps
inc
cdq
add
lods
push
xchg
dec
popa
jbe
dec
movs
aaa
mov
addr16
xor
daa
fs
inc
daa
sub
and
jnp
ja
idiv
cmc
call
mov
pop
pusha
pop
mov
into
add
xor
mov
adc
or
sar
cmp
cmp
push
jne
xor
cmp
mov
sahf
adc
loopne
mov
pop
adc
adc
vpmaxub
dec
test
ret
outs
aaa
xor
ds
jg
imul
push
retf
outs
xchg
sti
call
jns
inc
mov
loopne
arpl
mov
jne
movhps
mov
xor
push
mov
mov
std
jmp
mov
enter
addr16
sbb
and
movs
jns
enter
sub
mov
int3
xchg
push
adc
lock
scas
retf
cli
push
retf
out
push
shl
mov
sti
sbb
jnp
xor
outs
cmc
inc
data16
cmp
cmp
clc
xchg
jae
or
shr
sbb
mov
xlat
iret
addr16
(bad)
mov
lahf
data16
loope
loop
mov
push
pop
int
clc
iret
xlat
clc
fcmovnbe
mov
mov
dec
fs
dec
jge
xchg
call
ins
lods
add
cli
xor
repz
push
xchg
pop
jmp
adc
mov
pusha
sbb
retf
lods
adc
adc
(bad)
push
mov
(bad)
mov
fnstcw
ret
pop
aas
inc
jp
das
popa
xchg
movs
mov
scas
stc
sbb
fistp
out
mov
loope
adc
or
stos
jl
pop
test
shr
sub
cwde
lea
mov
mov
movs
push
fld
ret
push
mov
outs
lods
push
mov
mov
mov
cmc
dec
sbb
shr
xor
retf
xor
xor
sub
loopne
jle
push
out
repz
and
push
mov
neg
mov
dec
sti
dec
and
sbb
push
sbb
fimul
cmp
jmp
outs
mov
dec
pushf
mov
cmps
int3
jbe
ret
add
pushf
jbe
lds
out
pop
js
jns
ret
in
lea
jecxz
out
xor
add
cmp
aaa
fldcw
repnz
jb
dec
cwde
lahf
push
jmp
sbb
pop
in
loop
(bad)
addr16
jae
push
mov
icebp
stc
push
and
push
jg
xlat
mov
jmp
(bad)
rdtsc
iret
sub
xor
cld
jmp
fnstenv
and
sub
pop
enter
(bad)
xor
adc
das
cmp
lahf
inc
mov
adc
lds
push
cmps
arpl
inc
or
mov
mov
iret
retf
pushf
and
inc
fsubr
cmp
sub
jne
out
les
cdq
add
das
push
cmp
loop
lahf
aam
mov
daa
fwait
(bad)
cmp
sbb
cmps
mov
jmp
in
mov
imul
adc
fcmovb
mov
movs
lea
sub
sbb
or
(bad)
mov
ins
fdivr
mov
scas
iret
pop
inc
sar
push
div
jno
jge
cmp
mov
lods
aaa
aas
inc
mov
test
xchg
cmp
cwde
call
call
dec
sbb
(bad)
test
stc
loop
inc
pushf
jmp
jl
xor
div
xchg
ins
mov
or
lods
mov
outs
lahf
mov
xor
mov
imul
jae
push
cmp
cmp
bound
jge
(bad)
add
in
mov
shl
pop
adc
jno
test
lods
lods
push
xor
call
popf
cmp
dec
cli
packsswb
dec
test
out
jbe
push
mul
mov
dec
jae
aad
mov
sub
push
sbb
(bad)
aaa
cmp
mov
popf
and
mov
cmp
arpl
dec
loop
leave
out
mov
fistp
xor
or
xchg
retf
mov
adc
adc
mov
xchg
cmp
dec
cmp
mov
dec
gs
mov
aam
and
sti
scas
xchg
mov
ret
test
mov
fxch
xchg
out
ror
outs
and
xor
add
push
sahf
not
mov
dec
(bad)
jno
sahf
loopne
push
popa
mov
dec
leave
mov
xchg
aam
(bad)
pushf
inc
imul
push
sbb
or
push
add
jmp
in
xchg
push
out
dec
mov
mov
sub
push
ds
jecxz
mov
in
mov
scas
or
push
mov
mov
sub
das
retf
jnp
fs
repz
inc
fsubr
xchg
bound
dec
dec
jle
or
pop
sahf
mov
cmps
imul
mov
push
cdq
jnp
aad
cmp
sahf
jbe
pop
cmp
mov
dec
jae
cdq
std
daa
addr16
pop
loop
mov
mov
in
mov
mov
or
pop
(bad)
xor
or
out
push
idiv
fimul
push
popa
out
pusha
fisttp
add
rol
daa
jge
xor
into
xor
mov
jnp
xchg
mov
rcl
call
pushf
stos
jne
cmp
xchg
lock
add
inc
mov
pushw
int
xchg
mov
xchg
mov
xchg
jo
fsubr
mov
out
call
(bad)
cmp
iret
rcr
popa
push
out
xor
out
(bad)
out
ja
pop
sbb
test
mov
jge
sti
das
cmp
jns
or
aas
or
push
jmp
xchg
adc
fwait
jno
jns
scas
out
(bad)
aad
pop
(bad)
(bad)
dec
jle
push
bound
jnp
retf
in
movs
mov
jne
dec
neg
xor
fadd
popf
fnstenv
pop
es
out
fbstp
dec
mul
imul
sti
test
fimul
xlat
scas
push
jmp
inc
pushf
loope
dec
ds
mov
adc
xlat
bound
out
(bad)
icebp
mov
out
movs
push
test
(bad)
shl
icebp
or
es
lahf
cdq
retf
test
xor
ja
scas
pusha
or
add
(bad)
out
cmp
jb
sub
cli
outs
out
shl
cmp
das
cmp
dec
in
pop
mov
jb
lahf
popa
aaa
es
in
add
jl
mov
jl
loopne
es
shr
fs
sti
lods
stos
js
pushf
out
cmp
das
mov
jns
jp
pop
jmp
jne
jge
cs
stos
jge
jnp
je
push
and
jp
les
mov
xor
pop
scas
dec
out
mov
pushf
cmp
neg
xchg
sub
lea
cli
cmps
push
pusha
test
inc
jl
aam
mov
into
mov
into
jg
call
daa
xor
dec
int3
xchg
mov
scas
lds
dec
in
ja
mov
out
pusha
mov
push
gs
retf
pop
movs
jno
mov
test
out
jb
inc
pop
lds
in
push
sbb
mov
daa
sti
inc
repz
and
stos
sar
stc
icebp
pop
mov
xlat
loop
mov
xor
xlat
cmp
pushf
push
(bad)
lds
aam
lahf
jbe
enter
out
mov
ficom
adc
fwait
jcxz
out
idiv
lahf
mov
shl
jnp
jl
aad
mov
cmc
mov
outs
movs
and
fwait
cmp
cmp
cs
xor
inc
mov
fiadd
popa
pop
pop
(bad)
fimul
push
lds
xor
sti
pushf
or
push
xor
out
and
xchg
push
push
stos
retf
add
mov
scas
ins
adc
stc
sti
mov
loope
call
scas
xor
clc
add
sub
mov
mov
pop
shl
cld
pop
jmp
dec
cmp
adc
pop
mov
mov
mov
fbstp
jecxz
aam
sub
bound
aaa
(bad)
icebp
pop
into
mov
(bad)
pop
push
sub
shr
mov
inc
cmc
adc
(bad)
xchg
bound
fcomp
jp
mov
pop
repnz
aam
clc
pushf
mov
cli
aad
jecxz
fimul
ja
stc
mov
cmp
int
push
mov
ins
ss
pop
sbb
sbb
add
test
sub
cmp
or
loope
scas
inc
dec
pop
or
outs
sub
retf
cld
push
repz
push
iret
fidiv
mov
inc
callw
fdivr
sahf
cld
jge
shl
pop
xchg
(bad)
enter
sbb
cmc
dec
or
mov
cs
into
add
jmp
lods
push
fcom
mov
pop
xchg
sbb
icebp
mov
cmp
jae
xor
push
addr16
jl
aas
mov
pop
jno
pop
outs
sbb
iret
push
mov
addr16
adc
rol
(bad)
dec
call
test
push
and
sar
xor
pop
js
mov
jmp
xchg
pop
cmp
cmp
(bad)
in
(bad)
pop
mov
imul
cmp
mov
ror
fidivr
repz
cmc
outs
(bad)
jns
out
adc
retf
mov
pop
sti
movs
push
xchg
pop
(bad)
(bad)
cdq
jmp
mov
repnz
and
adc
vcvtsd2ss
mov
in
mov
iret
xor
loopne
(bad)
mov
sub
jmp
xchg
push
in
mov
in
call
(bad)
lods
pop
cmps
push
dec
out
(bad)
imul
cmp
mov
lahf
ffreep
scas
lds
aaa
mov
test
div
pop
out
popf
retf
mov
shr
mov
adc
in
mov
int
out
mov
pop
lods
mov
test
arpl
mov
ja
xchg
movs
cmp
mov
mov
xchg
clc
js
addr16
xor
pop
add
mov
mov
imul
xor
cmp
xor
mov
mov
sub
cmp
push
push
ins
fst
inc
adc
outs
cmp
iret
lahf
and
push
idiv
or
iret
cmp
and
mov
push
cmps
in
out
sub
dec
sbb
and
(bad)
fwait
mov
jbe
aad
xor
jg
rep
jg
pop
mov
sbb
aad
aad
lea
xchg
mov
lahf
mov
mov
and
icebp
push
push
jmp
aas
(bad)
call
int3
lock
cld
leave
retf
sar
imul
xchg
mov
cmp
mov
sub
mov
clc
jne
inc
ins
jmp
mov
jl
cmp
leave
dec
xchg
(bad)
mul
arpl
jb
mov
stos
(bad)
cmp
leave
mov
mov
test
pop
(bad)
(bad)
cmp
daa
push
pop
pop
dec
dec
mov
xor
mov
lds
das
loop
push
daa
push
add
dec
in
cmc
cmps
mov
push
aam
dec
inc
fdiv
xor
adc
inc
imul
pop
fstp
inc
push
das
or
jo
lahf
or
movs
sub
dec
ja
add
es
stos
icebp
inc
cld
(bad)
xchg
push
shr
loopne
js
mov
push
scas
hlt
outs
mov
dec
fnstsw
out
jl
sar
lods
mov
jne
dec
jns
dec
fsub
mov
scas
ja
dec
mov
xchg
cmps
mov
das
jmp
ins
ret
xor
(bad)
and
jle
cld
dec
fdivp
mov
pop
jbe
fbld
outs
inc
jl
hlt
xor
inc
mov
mov
fisub
sub
lods
jmp
pop
rcr
test
ret
dec
xchg
jne
push
aam
mov
lahf
out
jae
lods
movs
in
cs
gs
and
je
rcl
imul
mov
out
pop
(bad)
jge
ins
mov
aaa
adc
ss
shr
sti
ins
lods
jp
mov
scas
cdq
fcomi
addr16
xor
ins
nop
out
cmp
pop
jp
outs
jle
aaa
lods
push
inc
cmps
mov
push
mov
lea
loope
scas
and
xchg
mov
jmp
mov
lahf
ds
jb
xor
lahf
xlat
or
push
jg
int3
aaa
dec
pusha
and
sbb
out
pop
test
push
stc
repz
pop
inc
sbb
adc
cmp
adc
sbb
dec
cmp
sti
adc
aad
loopne
aam
sbb
clc
pushf
mov
retf
jl
cs
dec
clc
aam
sbb
jae
and
mov
jl
dec
idiv
jl
pop
leave
sub
pop
out
xor
xchg
iret
pop
rcl
adc
in
cmp
sbb
addr16
push
xchg
imul
imul
jnp
dec
dec
xor
std
add
xchg
cmps
icebp
jmp
loop
idiv
out
sub
loopne
cmp
push
mov
aas
ret
xchg
sub
ror
xor
mov
jne
arpl
lahf
pop
das
jno
repnz
jge
sbb
aad
(bad)
shl
xor
stos
pop
shl
ja
outs
xor
popf
pop
test
int3
pop
lods
out
in
xor
mov
jl
test
scas
ja
ret
push
inc
fs
and
das
int
pop
fnstsw
cmps
dec
test
jno
scas
push
push
daa
mov
cdq
stc
retf
push
or
cmp
aam
jg
(bad)
jg
or
or
mov
sub
repz
xor
xchg
(bad)
mov
xchg
push
pop
xor
inc
jmp
(bad)
jae
(bad)
jmp
pop
movs
shr
cmp
fcmovb
adc
imul
fucomp
adc
cmp
int3
xchg
call
addr16
lods
loope
dec
xor
sub
loop
pinsrw
shr
mov
push
add
jnp
int3
fld
xor
int
cmp
push
(bad)
mov
mov
sub
mov
sbb
sbb
pop
xor
sbb
retf
sbb
je
ret
mov
(bad)
pop
xchg
cmps
repz
psrad
xlat
pop
push
call
pushf
std
daa
mov
or
js
int
gs
popa
jecxz
lods
adc
jns
push
dec
packsswb
add
cmp
cdq
dec
test
shr
repz
fld
jle
mov
aas
arpl
push
sbb
pop
adc
cmp
out
popf
pop
dec
jns
dec
(bad)
push
aad
mov
cmp
out
mov
call
or
or
shr
movs
jle
jne
push
xchg
sti
jl
cmp
loope
jmp
mov
dec
shr
dec
pusha
aaa
(bad)
mov
jl
ins
(bad)
mov
imul
ins
(bad)
out
(bad)
mov
jo
jae
test
sbb
mov
cmp
xlat
cmp
inc
outs
sub
xor
enter
fwait
gs
mov
sahf
imul
jnp
mov
inc
idiv
(bad)
adc
mov
int
jg
cwde
jmp
das
cwde
stc
(bad)
cld
sar
jge
dec
pop
mov
mov
fwait
add
xlat
inc
(bad)
jl
cdq
adc
aam
jns
xchg
in
daa
movs
lods
jbe
xlat
xor
xchg
jp
js
addr16
daa
jns
aas
fwait
(bad)
cmc
movs
mov
mov
retf
jb
sub
sub
in
rcl
fsub
jnp
or
mov
daa
icebp
jmp
inc
in
dec
push
(bad)
xor
and
cmp
es
fstp
jbe
std
out
jmp
jecxz
sbb
fistp
in
in
jge
mov
test
pop
test
mov
pop
call
xor
lock
xchg
mov
mov
fcom
xchg
shr
fild
adc
sbb
(bad)
ins
mov
dec
ror
in
out
jp
out
std
cmp
dec
fisub
call
jmp
std
sbb
scas
icebp
dec
xor
mov
inc
ja
es
fs
popa
outs
dec
(bad)
call
sbb
int3
in
inc
hlt
add
out
fwait
pop
mov
mov
dec
sbb
mov
retf
std
aas
sahf
fdivrp
mov
cmps
and
nop
test
or
inc
adc
and
add
push
dec
jp
and
inc
dec
daa
adc
jmp
hlt
sub
adc
and
xor
int3
xsaveopt
(bad)
jne
jb
cli
ds
(bad)
mov
retf
movs
push
bnd
mov
fisubr
jl
or
sbb
jns
jnp
jg
push
dec
(bad)
xor
ja
jnp
jmp
xchg
ror
int3
imul
push
not
lahf
addr16
fcomp
dec
xor
mov
mov
fild
les
cli
pop
sahf
out
shl
jmp
movs
repz
mov
fstp
je
jp
ret
or
sub
or
fmul
(bad)
aad
sbb
cs
jg
mov
ret
dec
inc
adc
push
push
sbb
sbb
mov
enter
xchg
js
sbb
mov
dec
mov
cmp
inc
pop
xor
jmp
fcom
push
outs
lods
dec
mov
out
lods
mov
fwait
sub
pushf
lea
mov
xchg
sbb
(bad)
pushf
gs
into
jge
jecxz
push
push
daa
rcl
and
mov
push
add
(bad)
retf
xchg
xchg
cmp
jmp
ror
add
retf
xor
mov
sar
aam
outs
(bad)
stos
mov
mov
ins
jg
sbb
push
sub
hlt
aad
mov
xchg
adc
mov
mov
jb
cmp
pushf
mov
js
(bad)
xchg
pop
aam
outs
cmp
addr16
test
stos
fild
inc
mov
ins
sbb
lods
ror
xor
sbb
sbb
jle
push
xor
xchg
xchg
popa
sbb
lds
(bad)
sub
dec
sahf
(bad)
dec
jno
inc
test
jns
jns
out
bound
enter
shr
push
ror
xor
scas
push
ret
sbb
mov
xchg
pop
out
(bad)
test
cmc
jnp
cmp
data16
pop
(bad)
in
mov
and
ficomp
fbld
jne
xchg
callw
and
(bad)
not
mov
adc
daa
fld
shr
cmp
jns
(bad)
fxch
mov
jmp
dec
sub
jmp
push
aad
outs
in
js
gs
mov
jle
(bad)
mov
mov
std
pop
xchg
sar
or
sub
icebp
call
push
push
js
jle
les
scas
imul
out
int
icebp
dec
fs
pop
inc
inc
call
das
xchg
jne
or
adc
sti
outs
daa
push
jecxz
or
out
pop
(bad)
ja
out
loopne
imul
shl
jp
jmp
pop
xchg
mov
pop
inc
test
mov
push
es
sbb
rcr
mov
and
ja
pop
sahf
lahf
inc
xlat
pusha
inc
fisubr
lods
push
outs
mov
and
arpl
dec
shr
fldenv
mov
jnp
mov
fs
fistp
cmp
shl
mov
fnsave
cmp
cwde
cmp
pusha
push
or
jecxz
clc
ins
in
mov
dec
xor
cld
data16
shr
xchg
mov
mov
mov
rcl
fldz
adc
pop
dec
push
cs
movs
jmp
inc
aaa
mov
repz
imul
cmp
bnd
jge
inc
scas
loopne
fnstenv
mov
dec
dec
sub
loop
and
fdivr
call
mov
xor
ss
push
cmp
call
jae
js
or
pop
or
xchg
xor
stos
in
or
(bad)
popa
mov
mov
lods
(bad)
jmp
pusha
xor
mov
icebp
cmc
sub
jo
sub
ret
sti
stc
lock
fild
call
movs
jnp
pop
mov
icebp
xchg
pcmpgtd
jae
shl
mov
dec
(bad)
mov
xchg
pop
cmp
and
push
xor
add
fsubrp
push
in
mov
inc
mov
sub
fnstcw
push
test
jl
jp
iret
mov
test
push
push
cmc
xor
jle
jle
dec
and
xchg
sbb
gs
inc
mov
gs
jmp
xor
es
sub
dec
jmp
(bad)
icebp
lds
ss
movs
pop
jecxz
add
(bad)
retf
fnstcw
cs
imul
lea
out
inc
div
(bad)
into
mov
in
call
xor
cmp
(bad)
fst
xor
movs
xchg
imul
arpl
scas
sbb
aaa
psubd
mov
mov
or
les
mov
mov
cmp
lods
in
jge
addr16
fcomi
xchg
shl
out
loopne
and
xchg
iret
pop
sbb
mov
mov
je
daa
cmp
and
stc
cwde
(bad)
popf
stos
cmc
cwde
dec
out
icebp
rcl
ret
mov
mov
retf
sub
loope
sbb
mov
ds
dec
aas
aas
and
es
mov
ss
(bad)
mov
mov
out
loope
scas
arpl
jmp
scas
sbb
pop
out
pop
in
mov
mov
xchg
cmps
gs
dec
inc
imul
or
add
jmp
push
mov
rcl
stc
lods
dec
fdivr
test
sub
inc
push
loop
leave
repz
mov
xchg
aaa
jno
push
jne
or
adc
leave
xor
pop
push
imul
pop
mov
jecxz
out
and
dec
out
retf
jmp
dec
sbb
inc
pop
imul
cmp
lods
stc
inc
cli
stc
push
je
(bad)
shl
push
mov
fwait
enter
sbb
jecxz
mov
pop
loopne
clc
cmps
lods
xor
sub
mov
dec
fistp
imul
or
(bad)
or
sar
push
sbb
repnz
or
or
sbb
out
cdq
push
repz
push
int
xor
sbb
addr16
push
mov
imul
rcl
test
xor
push
cmps
jnp
ret
(bad)
(bad)
xchg
icebp
push
mov
sti
enter
dec
jle
fisub
push
add
dec
popa
orps
dec
pop
add
push
mov
push
pop
mov
enter
(bad)
pop
and
stc
pop
xor
add
push
or
sub
iret
and
loope
mov
div
jle
sub
mov
add
lahf
outs
sti
iret
gs
aam
fild
or
push
add
fisttp
es
jne
push
shr
fldenv
rcl
std
std
das
call
jmp
cmps
cmc
xchg
mov
scas
imul
inc
push
mov
popf
stos
mov
cmp
test
sahf
cwde
lods
xor
ffreep
cwde
and
sti
mov
les
pusha
arpl
cwde
xor
dec
div
jno
mov
mov
sti
xchg
retf
loope
mov
rcr
xor
xchg
mov
jmp
mov
shl
or
sbb
imul
xchg
pop
leave
push
repnz
xor
push
movs
xor
cmp
ins
jns
cmps
mov
push
mov
ror
sbb
cli
and
jg
jp
fstp
out
mov
xor
xor
add
xchg
movs
sti
inc
push
retf
(bad)
sbb
xchg
inc
repnz
stos
xor
or
icebp
sbb
xchg
pop
(bad)
out
pand
inc
cmps
xchg
xlat
loope
test
retf
outs
(bad)
xchg
sbb
mov
push
and
jno
mov
jnp
sahf
pop
push
and
inc
in
xchg
cmp
mov
(bad)
adc
jle
ins
inc
mov
mov
xor
dec
mov
ret
cmp
sbb
ja
scas
mov
popf
jmp
ficomp
mov
(bad)
ins
push
push
jnp
in
int3
mov
dec
mov
xchg
or
push
sbb
inc
not
mov
add
pop
leave
pop
pushf
cs
mov
sbb
popf
xchg
jnp
ficom
jge
xor
add
imul
mov
jo
mov
shl
jp
out
js
ss
dec
shl
xchg
inc
pop
enter
lods
(bad)
or
and
stos
cmp
shl
data16
fmul
int
shl
test
scas
fimul
lahf
nop
lea
mov
lahf
ds
cmp
lahf
fucomi
je
rcr
imul
dec
push
jae
pop
push
jp
ins
movs
mov
mov
imul
mov
stos
rcl
dec
xor
push
fwait
mov
and
retf
pop
aas
mov
mov
mov
aaa
imul
pop
add
movs
fwait
cmp
mov
pand
scas
in
jle
inc
movs
inc
lahf
xchg
cmp
push
lods
aam
jnp
mov
jnp
add
in
inc
mov
mov
mov
aam
mov
push
(bad)
push
(bad)
jmp
jmp
out
jecxz
push
jp
neg
cld
(bad)
cmp
aas
xchg
aam
dec
fimul
sub
std
je
cdq
stos
repz
or
cmp
cwde
cdq
dec
jmp
xchg
(bad)
jmp
(bad)
push
jmp
cdq
jno
lahf
into
xchg
xchg
mov
dec
faddp
dec
cli
mov
push
jge
push
repz
dec
cdq
(bad)
mov
(bad)
xchg
mov
cld
(bad)
into
xor
std
test
lods
xor
cli
rcr
mov
sar
push
sub
sbb
xor
adc
mov
sbb
sbb
in
xlat
(bad)
in
adc
cdq
sbb
add
pop
dec
repz
lock
mov
mov
pusha
jl
sbb
out
jl
and
out
pop
cmp
xchg
mov
imul
or
cdq
repz
cmp
jmp
int3
or
stos
fst
sar
jae
iret
mov
ins
test
mov
xchg
cmps
das
jmp
jl
retf
or
das
retf
mov
xor
lea
push
fsub
imul
retf
call
out
ret
lahf
cmp
lods
xchg
xchg
nop
popf
stc
jno
mov
jmp
stc
mov
jge
(bad)
xor
mov
test
xor
rcr
iret
or
jmp
pop
mov
(bad)
xor
ficom
adc
das
mov
push
call
int3
das
xchg
mov
jae
int
ins
inc
mov
pop
mov
aaa
rol
out
into
hlt
add
dec
ss
les
mov
(bad)
or
enter
stos
sbb
int
jp
int
pop
sub
push
repnz
fsub
sub
loope
sbb
inc
lea
int3
xchg
adc
int
push
ret
add
pop
cmp
popf
cmp
mov
stos
mov
mov
fadd
sahf
jae
stos
pop
sub
out
cmp
cmp
jg
or
retf
icebp
cwde
je
(bad)
hlt
jb
repz
leave
(bad)
arpl
inc
sub
addr16
pop
aad
push
shr
sahf
push
cs
ins
xor
into
aam
xchg
adc
mov
sbb
fadd
xlat
mov
into
jae
mov
enter
mov
lock
mov
jno
lds
jecxz
mov
mov
std
and
jo
or
mov
jle
mov
mov
lods
mov
cmp
fsubr
mov
cmp
and
fsubr
pusha
ins
cld
sar
lahf
daa
cdq
cmp
sti
mov
and
xlat
je
mov
cmp
scas
mov
pop
push
(bad)
or
gs
xlat
enter
scas
(bad)
mov
pop
test
jae
call
cmp
retf
jg
mov
pop
aam
lds
jbe
mov
mov
mov
inc
mov
ds
arpl
and
shufps
and
push
push
pop
cmps
ror
mov
and
xchg
inc
and
inc
xor
fdiv
sub
and
daa
mov
push
jecxz
cmp
enter
xchg
jns
std
lahf
or
je
pop
push
pop
mov
in
ins
pop
adc
lahf
or
push
mov
ss
mov
out
adc
xchg
not
dec
movs
aad
pop
(bad)
dec
retf
(bad)
sti
loope
sub
mov
data16
jne
dec
in
cvttps2pi
mov
sub
dec
retf
das
fucomip
jbe
or
jne
in
dec
sbb
repnz
enter
mov
cmp
leave
ins
lea
in
ficom
pop
aas
movs
pusha
adc
mov
out
or
mov
jnp
or
dec
shr
das
dec
xchg
mov
lea
daa
cli
inc
pop
stc
das
mov
enter
das
cmp
mov
(bad)
rcr
dec
pop
jmp
call
stos
pop
pusha
jge
xor
out
adc
cmp
rcr
jns
mov
cmp
mov
pop
fist
lds
lods
dec
jmp
cmc
mov
mov
and
dec
jmp
push
pop
imul
fistp
sbb
pop
sub
outs
pusha
xchg
loope
jno
gs
mov
shl
or
cmp
adc
cmps
pop
mov
sbb
cmp
iret
iret
call
mov
pop
xor
or
or
mov
pop
push
mov
xchg
addr16
cmp
lea
gs
(bad)
push
arpl
mov
or
(bad)
jmp
test
mov
cmp
xor
or
cmps
sub
(bad)
sbb
cs
dec
mov
push
je
push
xchg
adc
inc
sbb
(bad)
movs
leave
int3
out
sub
push
(bad)
adc
mov
ud0
sbb
pop
addr16
out
mov
enter
std
je
ds
(bad)
test
imul
enter
sbb
ss
xchg
jo
and
mov
ja
call
in
(bad)
enter
xchg
rcr
cwde
jecxz
jo
mov
mov
addr16
and
inc
ins
jo
cwde
inc
jno
pop
inc
push
enter
cmp
lds
mov
cmp
mov
sub
fcomp
xor
fisub
xor
push
push
popa
pushf
or
sub
push
fbld
in
es
(bad)
pop
and
call
xor
sar
and
icebp
das
popf
xchg
dec
movs
stc
sub
push
dec
aas
sbb
gs
hlt
ja
mov
stos
shl
or
mov
jmp
mov
jle
adc
mov
pushf
and
lds
pop
(bad)
aad
mov
je
(bad)
cmp
icebp
push
mov
cdq
jo
aad
lea
cmp
lahf
shl
imul
pop
xor
imul
inc
loop
rcr
mov
jmp
add
jg
dec
dec
push
sbb
hlt
enter
ds
je
jmp
jno
(bad)
bound
jl
xchg
xchg
cdq
inc
iret
bound
mov
jp
lea
jno
dec
pop
dec
gs
cwde
inc
call
test
cmps
fucomip
xor
shl
loop
jae
neg
(bad)
xchg
rol
jo
mov
sbb
dec
aam
in
in
rcr
frstor
inc
jae
mov
(bad)
arpl
xlat
mov
movs
test
mov
and
aad
ds
mov
cmp
retf
push
int
ss
xchg
cmp
aam
mov
pop
fsub
mov
dec
frndint
dec
mov
xchg
repnz
call
adc
pop
mov
pop
sbb
mov
mov
sub
and
jne
idiv
arpl
ins
xchg
add
jmp
icebp
push
jge
mov
pop
jmp
dec
jb
add
add
inc
xchg
ror
repz
pop
fimul
or
jge
out
mov
inc
fist
int
cmp
fidiv
jne
ja
cdq
movs
int
rcr
mov
imul
mov
retf
mov
jle
jbe
stos
lods
scas
gs
leave
mov
in
fld
(bad)
mov
jae
cmp
out
(bad)
nop
dec
mov
dec
pop
mov
leave
jmp
xor
and
sbb
ja
ret
enter
and
pop
xchg
dec
cmps
push
shl
fisub
push
or
retf
lahf
xchg
jle
movs
repz
(bad)
out
or
scas
dec
jmp
jg
iret
cmp
xchg
out
pop
fnstcw
jns
or
jp
add
jmp
sbb
ds
stc
jp
jmp
dec
rcr
jmp
bound
aaa
push
pop
bound
outs
xor
aad
push
xchg
mov
int
xchg
adc
mov
lods
cmp
fwait
cdq
gs
lahf
int
fimul
mov
jmp
lods
out
xor
mov
jmp
push
out
je
jmp
fcmovnbe
pop
in
lock
or
or
dec
outs
retf
out
out
movzx
aad
sbb
(bad)
jle
cli
stc
pop
popf
mov
pop
mov
out
scas
jmp
neg
mov
jne
in
daa
sub
sahf
dec
mov
lahf
dec
ss
out
stc
call
not
cdq
pop
neg
dec
hlt
arpl
loopne
pop
out
and
loope
imul
push
in
aad
inc
dec
xchg
mov
inc
push
sub
inc
loop
mov
popf
out
push
mov
pusha
test
or
outs
xchg
mov
cmps
jo
sbb
mov
iret
jb
in
jle
leave
pop
clc
or
xor
pushf
stos
cmps
fisttp
xlat
jnp
xchg
outs
js
pop
bound
lods
into
imul
xchg
and
std
push
into
test
xchg
adc
(bad)
out
in
ret
or
rcl
test
cli
dec
dec
das
pop
mov
lock
xchg
inc
fiadd
adc
fsubr
popf
outs
je
jo
aam
fdivr
popa
stos
adc
rdpmc
lods
(bad)
ins
imul
mov
fld
jl
mov
jge
frstor
mov
push
mov
xchg
cmp
dec
movs
ss
push
xor
and
xor
sti
es
push
mov
adc
lods
mov
dec
mov
mov
jl
dec
sbb
das
shl
pop
push
adc
iret
jmp
add
jbe
daa
xchg
outs
stos
push
test
xchg
cmps
mov
mov
sub
ret
push
iret
push
popf
mov
fidivr
xchg
add
inc
jne
cwde
dec
push
pushf
loopne
xor
jecxz
dec
call
cmp
push
mov
add
js
jbe
std
je
(bad)
rcr
daa
fcom
mov
(bad)
rcr
xchg
(bad)
mov
shr
into
aam
mov
aaa
jmp
cdq
inc
or
mov
cdq
jmp
cmp
jle
xchg
(bad)
mov
mov
inc
pop
cmp
retf
xchg
aas
inc
jmp
inc
mov
rcr
aad
xor
hlt
dec
lahf
lahf
dec
pushf
aam
in
inc
push
cmp
retf
in
jge
aaa
mov
jno
stc
ds
ja
xchg
jp
mov
sbb
mov
lea
fcom
jbe
or
(bad)
fldenv
or
pop
dec
shl
out
push
out
pop
push
xlat
and
pop
xlat
test
and
in
dec
add
stos
pushf
mov
add
xlat
jecxz
mov
jg
jg
mov
push
outs
cmps
mov
mov
mov
mov
pop
mov
div
pop
jmp
pop
int3
or
xchg
sti
data16
inc
cmp
in
inc
adc
std
pop
and
sbb
inc
arpl
mov
cmps
jg
dec
dec
ret
inc
dec
mov
push
ret
sub
call
fcom
push
enter
inc
mov
sub
push
xlat
xchg
(bad)
mov
inc
mov
(bad)
in
cmp
arpl
and
push
inc
ins
jmp
in
fadd
repnz
(bad)
mov
mov
push
add
pop
mov
dec
cmps
jmp
xchg
mov
mov
pop
mov
sbb
dec
and
sahf
leave
ds
in
jo
int3
add
sub
fwait
(bad)
(bad)
pcmpeqb
push
jbe
retf
cdq
(bad)
mov
fisttp
pop
stos
push
and
jne
xchg
pop
xor
jno
and
movs
fisttp
fdiv
add
fs
adc
sbb
cdq
push
mov
(bad)
xchg
shr
and
clc
mov
ret
ins
aam
pusha
fisubr
fsubr
pop
int3
sbb
call
push
and
mov
pop
les
dec
lods
repz
shl
out
inc
(bad)
outs
and
xchg
sbb
jg
mov
xchg
std
ss
xchg
sar
pop
mov
cmps
xchg
or
xchg
and
iret
addr16
dec
mov
scas
aas
mov
(bad)
pushf
aad
ss
xchg
xlat
pushf
xlat
jo
loope
ins
movs
sub
pop
jo
jp
test
(bad)
loop
je
cmps
push
popa
mov
daa
in
jno
jmp
xchg
movs
lahf
aad
xchg
xchg
push
inc
or
aad
jno
mov
mov
je
mov
mov
lods
rcl
push
sbb
out
or
mov
int3
int
addr16
(bad)
xchg
inc
sbb
mov
pop
jmp
sub
jae
and
daa
enter
xchg
addr16
std
and
test
mov
je
add
mov
test
mov
es
add
adc
fbld
dec
clc
dec
mov
lahf
lahf
xchg
cld
cmp
dec
les
pop
je
jmp
mov
mov
test
fadd
pop
dec
not
cmp
mov
xchg
int3
cmp
popa
scas
pop
inc
into
iret
cmc
sub
(bad)
out
movs
sbb
shl
outs
and
mov
outs
iret
cmp
cmp
test
in
xchg
mov
adc
push
jmp
dec
repnz
rcr
mov
pop
test
(bad)
in
in
xor
xchg
in
mov
sub
cmp
mov
add
sbb
adc
sahf
movs
push
cdq
sub
mov
das
add
lea
out
leave
jo
out
std
pop
(bad)
mul
fxch
(bad)
push
daa
imul
sahf
xchg
out
mov
mov
imul
addr16
in
xchg
xchg
mov
jg
xor
popf
ds
fmulp
lahf
jb
movs
inc
inc
xchg
push
cmc
cmp
push
xchg
pop
or
pop
sbb
mov
ins
stos
cmc
cmp
scas
(bad)
cld
fidiv
cli
push
pop
xchg
gs
mov
call
cld
mov
dec
push
div
cli
push
jb
imul
dec
ret
ins
fmul
pop
arpl
xchg
cmps
fst
pushf
push
ins
xchg
aam
xchg
jecxz
mov
clc
jnp
ins
call
ins
jno
add
lds
jae
push
jnp
outs
imul
cs
call
mov
loop
pusha
xor
retf
hlt
mov
int
mov
inc
jo
lea
js
cmp
mov
loope
pop
or
pusha
xlat
xchg
ret
and
sbb
cld
add
fwait
dec
push
retf
xchg
mov
out
jnp
inc
mov
xor
fcom
leave
idiv
and
retf
mov
pop
out
shr
mov
pop
lds
adc
imul
jno
shl
dec
rcr
out
add
jbe
into
std
xor
(bad)
sub
push
adc
jbe
pop
in
push
push
out
fistp
call
push
xchg
loope
lods
or
aam
mov
mov
outs
fist
dec
mov
scas
in
mov
cmp
leave
mov
(bad)
mov
cmp
cmp
(bad)
push
movs
arpl
(bad)
ins
fst
cli
stc
xchg
imul
sti
js
pop
sub
jo
das
xlat
dec
stc
call
shl
les
shr
mov
repz
movd
ins
pop
xor
movs
push
(bad)
and
(bad)
mov
mov
pop
inc
daa
jmp
xor
rcr
shl
je
test
xor
inc
xor
mov
sar
inc
aaa
out
xlat
fnstsw
jnp
cwde
push
test
int
nop
clc
imul
call
retf
xor
or
push
cmp
dec
leave
pusha
ins
add
xchg
jbe
ins
vpmuludq
ss
pushf
(bad)
jns
(bad)
jmp
int
xor
lds
or
clc
stos
cdq
sub
sbb
add
and
pop
ret
add
xor
(bad)
loopne
or
daa
lahf
rcr
mov
xchg
push
mov
xor
push
test
mov
fwait
mov
imul
mul
adc
mov
cwde
dec
imul
push
mov
aas
sbb
or
fist
out
out
dec
jns
mov
mov
mov
jge
push
outs
add
cmps
pusha
xchg
and
mov
into
jno
sbb
dec
cmpps
retf
push
cmc
cmp
xchg
lea
jp
neg
and
add
rcl
jmp
add
fist
lea
pop
push
pop
mov
jge
mov
jge
dec
gs
mov
and
sub
push
push
push
pop
pop
(bad)
mov
test
cdq
ret
pushf
mov
iret
out
jae
in
sub
mov
ins
dec
mov
aad
mov
sbb
push
inc
push
sub
mov
scas
inc
mov
jns
cmp
and
fcmovnbe
pop
jns
xor
out
popf
mov
cmp
inc
iret
jge
jp
mov
imul
mov
outs
in
or
and
stos
jl
inc
pop
pop
and
ret
dec
retf
sub
jmp
xlat
ins
cmc
inc
fs
sub
fiadd
ficomp
(bad)
(bad)
adc
movs
sbb
cmp
leave
div
dec
xchg
in
dec
mov
je
jae
sub
imul
inc
shl
xchg
ret
mov
mov
mov
aam
and
pop
xchg
jle
push
mov
popf
xor
imul
push
mov
sub
sbb
mov
sub
cmps
pushf
outs
or
adc
inc
jge
inc
stos
jbe
dec
push
aad
aad
int
xchg
inc
jns
jns
stc
in
xchg
bound
jbe
sbb
lock
repnz
fimul
enter
iret
sahf
aam
ins
sub
jae
mov
ins
das
xlat
aas
mov
mov
dec
pop
jp
pop
enter
test
dec
xchg
aaa
icebp
cdq
ins
push
inc
add
popf
dec
pop
jns
cmp
enter
(bad)
mov
cli
sbb
adc
or
xchg
cmp
push
or
imul
pop
int3
sbb
cmp
and
xchg
xchg
lea
retf
test
jns
push
lds
pop
lock
fwait
sar
jno
inc
fs
mov
mov
push
pop
and
mov
xchg
lea
inc
mov
call
inc
(bad)
pop
ds
stc
mov
fcmove
imul
push
sub
ret
mov
sti
nop
mov
sub
arpl
cmp
repz
std
iret
mov
div
int
adc
and
inc
jg
adc
sahf
adc
push
(bad)
fisub
and
movs
arpl
mov
and
mov
xor
pop
dec
mov
(bad)
inc
sub
test
sahf
scas
retf
adc
or
xchg
ficomp
sub
cwde
(bad)
mov
(bad)
jmp
jne
pop
pushf
or
sbb
or
jmp
jmp
popa
mov
pcmpgtd
pop
mov
je
xor
xor
push
cmp
in
mov
movs
push
pop
jmp
and
xchg
nop
in
ds
xor
sbb
lds
int
mov
out
inc
fucomip
or
xor
movs
jmp
js
and
dec
jg
xchg
out
fiadd
mov
pop
mov
xchg
sub
mov
jecxz
fmul
fcmove
inc
jnp
dec
ds
fst
ins
jle
mov
int
jbe
xor
jns
cmp
inc
mov
dec
xlat
imul
mov
pop
in
push
or
shl
sub
scas
outs
ds
not
adc
xor
mov
popf
xchg
cs
jns
xor
out
scas
dec
lods
shl
push
xchg
cld
pusha
xor
cmc
fsub
mov
jnp
aas
mov
js
xchg
test
mov
xchg
das
gs
scas
test
shr
aad
mov
popa
loop
fucom
cwde
iret
push
adc
out
rcr
pushf
adc
rol
fstp
aam
push
mov
scas
ins
loopne
mov
add
in
inc
enter
lea
aas
repnz
and
movs
adc
jmp
jmp
lahf
dec
pop
add
ja
(bad)
das
add
ja
push
jecxz
jmp
div
neg
cmp
xor
je
fs
xor
mov
in
scas
jecxz
in
lock
fisttp
call
ja
push
lock
cli
in
cmps
ror
sub
sub
sub
repnz
push
fist
test
inc
fld
in
sbb
pop
sbb
push
dec
or
cmp
inc
pop
stc
iret
mov
mov
addr16
leave
jp
loop
in
jne
pop
shl
out
int
jno
mov
popa
cmps
aam
pop
stc
ror
pop
mov
fistp
push
inc
sbb
fadd
call
int3
fldenv
cdq
lea
je
loope
jl
adc
sub
or
icebp
gs
js
scas
(bad)
frstor
pushf
cmps
out
xor
aam
cmp
pop
push
and
dec
ja
out
adc
jl
jl
cld
jle
repnz
push
xlat
inc
pushf
sbb
cmp
mov
inc
mov
scas
retf
xor
jno
test
scas
xchg
aas
pop
or
dec
mov
mov
lods
movs
or
(bad)
xor
call
sbb
mov
add
loopne
xor
mov
pop
push
inc
and
xor
retf
jl
dec
sahf
mov
clc
sbb
out
retf
lods
test
movs
or
pop
mov
shr
shr
add
adc
movs
and
rcr
adc
xlat
mov
sub
data16
in
loopne
pop
arpl
fwait
xlat
and
bnd
ins
mov
mov
scas
lods
sbb
fistp
jp
sub
inc
fs
mov
push
push
daa
sbb
fs
mov
pop
rep
(bad)
pop
out
nop
add
xchg
je
pop
(bad)
repz
or
jmp
mov
ins
fisttp
cmc
ja
inc
int
inc
jnp
ss
mov
mov
pushf
sbb
add
jae
mov
cmps
std
mov
shl
ins
outs
mov
mov
movs
or
and
in
xlat
cmc
mov
push
mov
mov
mov
jge
push
out
sub
mov
dec
aad
cwde
mov
enter
and
fdivr
sbb
inc
into
rol
stos
call
retf
xlat
mov
rcr
cmp
jmp
pop
xor
xchg
inc
sbb
pop
repz
dec
or
sbb
shl
inc
xor
cmps
mov
mov
cmp
and
push
fsubr
pop
pop
sub
mov
sub
out
lea
pusha
or
or
push
sub
push
cld
dec
mov
loop
jmp
ror
mov
xor
cdq
lock
mov
fwait
or
outs
and
or
xor
sbb
add
add
iret
fs
in
cmps
lahf
(bad)
popf
or
popa
into
sbb
mov
popa
jp
inc
aas
out
add
in
bound
push
fisttp
shr
push
xor
cmp
stc
or
pushf
xchg
jecxz
hlt
push
dec
rcl
out
(bad)
test
shr
xor
out
les
aaa
mov
xchg
shr
call
jbe
fcomp
std
sar
sub
and
in
out
cmp
mov
mov
imul
mov
jne
xchg
sbb
cmp
fs
and
mov
or
outs
pushw
leave
dec
outs
(bad)
out
mov
imul
sbb
ss
cmp
ror
add
idiv
push
test
add
iret
test
jns
jp
xor
xchg
enter
push
popf
jbe
inc
xchg
out
cli
imul
in
enter
js
push
repnz
xlat
mov
push
cdq
mov
mov
scas
jne
mov
int
fld
mov
je
dec
xchg
mov
jne
pusha
push
not
push
mov
nop
fwait
(bad)
aad
inc
(bad)
aam
imul
mov
div
push
push
fidiv
mov
inc
in
or
mov
sbb
xor
push
sub
lods
pop
jecxz
adc
jp
call
cmp
scas
and
jle
pop
xor
mov
dec
ds
in
jmp
jp
lods
cmp
int3
outs
pop
cwde
or
mov
mov
cmps
call
dec
rcr
dec
outs
push
jecxz
xchg
jmp
jbe
stc
dec
inc
(bad)
shr
xor
pop
xor
sbb
sbb
inc
and
sub
mov
lods
hlt
add
xchg
fisubr
or
mov
ret
mov
(bad)
mov
rol
inc
jbe
arpl
fdiv
pop
call
sbb
sbb
inc
adc
int3
or
and
aas
dec
lahf
jns
push
rcl
mov
test
xchg
and
adc
pop
repnz
or
cmc
inc
call
mov
pop
(bad)
std
loopne
in
sar
pop
and
dec
daa
ficomp
xor
jmp
jmp
pop
(bad)
dec
lods
jns
xchg
jae
cmp
das
dec
(bad)
adc
mov
mov
out
popf
cdq
xchg
out
xchg
lea
cli
lods
dec
retf
cmps
mov
pop
xlat
sub
les
iret
imul
jae
dec
push
mov
xchg
adc
das
sbb
out
fs
dec
and
icebp
or
shl
jecxz
int
push
(bad)
mov
neg
xchg
ret
xchg
call
(bad)
rol
fiadd
(bad)
ret
push
jl
out
sbb
push
loop
jae
aad
xor
add
ror
fs
dec
rcr
(bad)
aam
clc
inc
sti
test
mov
je
push
cmp
call
(bad)
iret
movs
(bad)
(bad)
xchg
fsubr
jmp
lock
pop
pop
jg
(bad)
jle
int3
out
jnp
je
shr
dec
scas
int
pop
pop
xor
test
inc
out
cmp
push
mov
xchg
jge
out
arpl
or
sahf
pop
inc
mov
cmps
cmp
add
(bad)
fsub
(bad)
repnz
rcl
iret
popf
pop
fs
inc
mov
sub
test
add
xor
ss
imul
(bad)
jecxz
stos
or
call
jecxz
pushf
mov
push
inc
popf
pop
xchg
dec
leave
inc
mov
mov
das
pop
aad
mov
iret
cmps
outs
mov
popf
(bad)
push
in
loopne
sahf
(bad)
push
arpl
mov
inc
out
cmp
rcr
les
mov
cmp
pop
aam
hlt
test
cli
mov
sbb
ss
mov
pushf
retf
mov
sub
out
adc
jl
cli
dec
out
cmp
scas
sub
pop
push
movs
jge
cmp
add
fidivr
pusha
push
cmc
retf
mov
movs
mov
push
xor
jnp
outs
fsub
clc
inc
mov
aas
loop
popf
xchg
jmp
mov
cmps
out
mov
dec
data16
adc
add
xlat
pushf
sbb
data16
retf
aad
ja
repnz
cmp
cmp
mov
xlat
mov
shr
stos
xor
xor
aam
aam
cwde
inc
lds
mov
push
js
pop
pop
cld
mov
and
fsub
jbe
sahf
sti
jge
push
call
jb
inc
add
xor
or
pop
mov
xor
sub
add
popf
and
mov
mov
aad
xchg
dec
xchg
lods
push
outs
jae
jb
(bad)
out
pop
push
(bad)
add
adc
loop
scas
test
adc
jl
pop
ret
cdq
jns
push
inc
popa
fcomp
pop
out
loopne
jbe
in
call
call
push
cmps
aam
jo
sahf
fwait
jge
jae
outs
int3
xchg
dec
in
addr16
fstp
pop
stos
mov
cwde
in
xor
mov
push
(bad)
ins
cmp
mov
int
jnp
test
fiadd
cmps
cmp
push
inc
das
pop
dec
pop
mov
int3
aad
mov
pop
mov
out
and
addr16
push
std
cli
je
jae
mov
mov
ins
in
lods
xchg
adc
out
cli
in
movs
fwait
jb
cmp
dec
out
sbb
movs
call
dec
push
jge
jbe
dec
in
push
mov
pop
scas
xchg
mov
in
mov
and
js
pop
in
(bad)
xor
adc
mov
nop
test
popf
fsubr
xor
popa
adc
lea
sbb
inc
mov
jp
out
cmp
mov
jb
jne
and
popf
and
leave
pop
and
ds
inc
sub
inc
mov
mul
stc
cmp
je
cmp
daa
jo
mov
push
fldcw
in
mov
ds
and
inc
jg
cmc
rol
(bad)
(bad)
out
arpl
fisubr
in
sbb
enter
inc
and
ror
stc
jo
sbb
call
push
sbb
mov
dec
xchg
xchg
pop
jne
repz
out
xchg
mov
mov
imul
push
mov
jp
and
sahf
xchg
sub
or
addr16
aad
mov
ja
mov
ror
int
cli
outs
mov
sub
jle
(bad)
adc
jmp
jns
xchg
and
(bad)
mov
adc
mov
popf
xor
imul
pop
(bad)
fwait
ss
mov
in
jecxz
mov
stos
sti
mov
(bad)
mov
das
arpl
jecxz
leave
mov
dec
aas
arpl
push
mov
ficomp
mov
mov
mov
cli
push
cmp
ss
jle
stos
aaa
out
xor
fldcw
xchg
fmul
dec
inc
push
sbb
xchg
jle
lods
xor
jge
mov
inc
aam
psllq
sbb
fldenv
aaa
lods
(bad)
and
(bad)
mov
push
push
pop
test
retf
xchg
lods
cmp
sub
dec
mov
jmp
jmp
hlt
(bad)
fwait
inc
call
xchg
fild
xor
lea
pop
into
leave
xor
fistp
les
test
jge
mov
data16
(bad)
mov
test
(bad)
int
fisubr
std
cld
mov
sbb
je
xor
daa
add
pushf
bound
out
push
in
arpl
mov
pop
jg
addr16
xor
mov
mov
je
rcl
adc
jbe
daa
gs
enter
jne
add
inc
jecxz
inc
ins
fwait
(bad)
mov
pop
(bad)
retf
ins
and
outs
imul
mov
fnstcw
int
jecxz
sub
repnz
sub
stos
repz
mov
imul
imul
stc
jbe
cmps
arpl
inc
inc
leave
cwde
and
cmp
dec
je
push
mul
stc
inc
addr16
xchg
sub
push
adc
shr
es
repnz
or
xlat
mov
aad
mov
clc
cld
xor
out
dec
int3
xchg
pop
in
in
js
test
aaa
mov
xor
mov
retf
scas
out
scas
lea
(bad)
cdq
movs
jne
mov
mov
test
mov
mov
aad
sbb
and
mov
pop
mov
add
xchg
fld
shl
mov
jnp
add
loopne
fnstsw
pop
repz
shl
cmps
jnp
push
mov
jg
pop
xchg
aam
test
xchg
test
xor
into
mov
imul
call
mov
(bad)
mov
int
les
inc
jne
(bad)
ins
sbb
cmc
lods
pop
int
sahf
rcr
dec
jmp
mov
or
adc
test
adc
adc
loop
out
jl
xchg
cs
aad
or
mov
cs
dec
cs
fcomp
push
int
fnstenv
mov
hlt
mov
(bad)
ret
fimul
pop
enter
mov
hlt
ret
xor
mov
ins
shld
outs
add
pushf
pop
sbb
add
retf
adc
shl
das
jns
sbb
lods
sub
jge
jmp
(bad)
xor
dec
or
stc
lods
push
jb
(bad)
sub
mov
cmp
leave
or
test
and
je
jne
fisttp
xchg
in
repz
pusha
cs
xor
inc
lds
outs
or
(bad)
and
jnp
and
int
xchg
sub
xchg
(bad)
sub
cmp
imul
pushf
scas
sub
inc
int3
outs
aaa
cmp
jno
repz
cmps
ret
xchg
lea
sar
das
mov
fadd
sub
add
mov
sbb
int
sbb
mov
cwde
retf
mul
pusha
ds
dec
pop
jbe
inc
call
pushf
pop
xor
int
js
inc
fs
data16
scas
inc
mul
mov
push
out
js
outs
fsubr
ds
pop
cmp
sbb
in
je
daa
mov
jge
movs
inc
int
xchg
stos
jae
dec
daa
std
adc
push
icebp
cmp
jb
xchg
das
mov
xchg
lods
jmp
lods
mov
mov
daa
gs
jbe
jecxz
test
les
dec
out
repnz
add
push
arpl
mov
inc
jbe
pop
pushf
fstp
(bad)
fimul
mov
fmul
sub
jmp
fcmovb
push
nop
js
imul
sbb
mov
fsub
int3
repnz
add
pop
mov
dec
(bad)
je
mov
test
fldcw
pop
sbb
mov
lods
push
fcom
addr16
shr
js
inc
jmp
xchg
pop
push
inc
ffreep
ss
cs
mov
jecxz
test
xchg
int
les
mov
shr
jb
fwait
jb
jmp
out
mov
stc
pushf
(bad)
jge
popa
fwait
gs
mov
fst
div
lahf
jae
sub
add
popf
jb
sub
jmp
dec
leave
repz
cmp
aas
sbb
xchg
push
mov
pop
mov
fbstp
repz
je
cmp
std
fimul
iret
or
push
cmc
add
xchg
ss
jg
and
sbb
pop
jae
std
adc
cmp
je
mov
or
dec
out
bound
ficom
add
mov
push
leave
mov
mov
mov
int3
pop
in
loop
sar
cmp
data16
lods
and
or
test
dec
pop
mov
icebp
retf
dec
xchg
cmp
popa
lods
lea
ds
and
dec
ins
and
fucomip
xchg
adc
je
scas
jmp
jp
xchg
int3
push
repnz
out
cs
jno
mov
pop
jne
push
in
cdq
xchg
cwde
xor
icebp
and
push
jp
out
je
pop
mov
adc
jmp
(bad)
std
pop
inc
test
or
aam
lahf
jne
test
add
int3
add
dec
or
cdq
test
pop
mov
int
fwait
mov
clc
cmps
dec
xchg
xchg
fiadd
scas
sub
iret
(bad)
xlat
std
into
push
pop
and
lods
shr
ins
cmps
add
mov
adc
inc
mov
mov
dec
scas
xor
jecxz
stos
dec
mov
xor
lahf
dec
adc
sbb
jge
shl
sub
das
out
jns
mov
xchg
inc
or
loopne
leave
fidivr
ja
push
push
jnp
sbb
test
dec
ror
int3
pop
xlat
dec
pushf
fbstp
les
xor
adc
xchg
cs
nop
or
(bad)
popa
mov
xchg
mov
and
jne
dec
jb
cdq
(bad)
in
ins
dec
cmp
shl
imul
in
idiv
xor
push
jne
nop
(bad)
jns
fdivrp
inc
int
cmp
or
mov
jp
inc
imul
pop
inc
add
mov
je
addr16
lahf
mov
jmp
in
cmp
das
pusha
test
(bad)
out
(bad)
push
xor
aad
inc
push
sbb
hlt
dec
mov
js
icebp
xlat
pop
mov
push
cmp
(bad)
out
outs
jmp
xor
test
jecxz
dec
cli
jns
hlt
repz
cmp
(bad)
jmp
push
mov
out
sub
lods
and
mov
pop
jns
push
lods
mov
int3
ret
lods
pop
pusha
movups
and
aas
mov
mov
jp
cmp
(bad)
push
not
inc
jae
sub
loopne
mov
test
xor
fstp
fmul
es
and
repz
mov
retf
out
jbe
in
cli
js
ret
push
mov
movs
adc
push
repnz
jne
sbb
out
pop
repz
popf
sbb
xlat
mov
popa
in
inc
pop
aam
test
mov
dec
ja
sbb
inc
in
repz
pop
ja
scas
push
aad
adc
jns
ror
outs
xor
jmp
push
fst
dec
cmp
or
addr16
pusha
test
and
jmp
and
mov
fld
pop
shr
jnp
pop
(bad)
fisttp
inc
xor
cmp
pusha
xor
lods
xchg
inc
cmp
add
hlt
inc
gs
push
adc
neg
and
das
repnz
mov
lods
xchg
hlt
lea
scas
mov
jnp
pop
add
cmp
pop
cmp
out
and
aad
push
cmps
cmp
push
xor
dec
repz
xchg
push
push
or
imul
xchg
adc
and
fnstcw
push
inc
test
ss
inc
sub
scas
fistp
adc
pop
pushf
mov
clc
sbb
das
out
pop
cmp
jl
mul
jmp
mov
ficom
ins
jae
aad
inc
jp
xor
push
call
fisttp
mov
xchg
(bad)
loopne
cmc
jmp
dec
aad
(bad)
fbstp
jmp
jae
xchg
das
and
cld
mov
lea
dec
clc
popa
pop
mov
movs
ins
cmp
mov
jns
fsub
fstp
mov
mov
hlt
dec
scas
jmp
jg
leave
pop
xchg
mov
imul
dec
jle
cmp
mov
pop
mov
mov
jne
and
dec
push
call
mov
std
(bad)
cwde
adc
pusha
sahf
retf
cmp
push
sub
lods
cmp
enter
sti
aaa
sar
call
(bad)
out
lods
cmc
je
fild
dec
ror
cdq
mov
pop
xchg
sahf
cli
lods
into
pusha
lahf
inc
jle
jecxz
addr16
jmp
push
push
ror
(bad)
fmul
pop
xor
out
jbe
cs
daa
ret
loopne
xchg
retf
retf
imul
movs
scas
xchg
jno
popf
sub
fwait
adc
out
pop
mov
lods
inc
mov
sbb
adc
sar
add
pop
scas
int3
(bad)
jmp
into
ror
pop
jae
aad
cmp
xchg
mov
hlt
sbb
pop
jp
pop
push
xchg
cmp
add
xor
sar
push
retf
mov
aam
dec
dec
fstp
sub
sbb
and
push
mov
repnz
jg
cmp
pop
dec
pop
sar
call
add
call
aaa
aam
std
cld
movs
mov
mov
adc
push
dec
je
shr
repnz
xchg
loope
jle
mov
(bad)
mov
inc
adc
popf
sub
pop
adc
push
push
daa
repz
mov
pop
xchg
push
mov
pop
jmp
icebp
fimul
xchg
scas
jecxz
leave
out
mov
ret
addr16
mov
dec
jbe
push
sub
jae
pusha
mov
je
jns
(bad)
js
hlt
sahf
out
xchg
call
sbb
jb
shr
inc
fiadd
bnd
adc
and
fcmovnb
cwde
aad
gs
imul
arpl
sub
in
add
and
sti
pop
je
ss
push
inc
ffree
ins
xor
jge
repz
scas
cmp
xor
stos
je
push
mov
daa
sbb
sbb
mov
xor
cld
scas
pusha
xchg
jns
retf
lahf
sbb
adc
mov
mov
es
sahf
iret
xor
sahf
stos
jge
adc
jmp
add
adc
jmp
mov
jbe
(bad)
in
and
fistp
je
lahf
cmps
daa
fistp
sub
stos
mul
mov
loop
mov
das
les
pushf
add
mov
imul
fadd
sahf
dec
dec
pop
mov
sbb
imul
pop
test
mov
inc
gs
fs
sub
into
inc
sub
mov
mov
fmul
xchg
movs
retf
pushf
das
(bad)
dec
dec
cmps
push
aaa
cmp
sahf
in
inc
push
movs
lods
adc
fnstcw
xor
ret
js
push
fnstenv
rcr
or
mov
outs
push
stos
fisttp
mov
sbb
movs
(bad)
mov
outs
dec
sbb
add
sbb
div
jo
sbb
pop
pop
inc
pop
arpl
ret
fcom
cmp
cmp
pop
cdq
out
add
in
mov
stc
je
into
xchg
dec
lods
rcr
fsubr
sbb
push
pop
mov
adc
and
or
push
call
ficomp
int3
out
scas
and
xchg
jnp
pop
push
inc
dec
in
push
fadd
movs
xchg
shl
scas
cwde
pop
sub
jmp
and
jge
dec
shl
mov
dec
push
cdq
aad
aad
sub
popf
sbb
jecxz
fiadd
jmp
jo
mov
mov
iret
xchg
add
xchg
jle
aas
mov
xor
mov
adc
rcr
aaa
mov
xor
movs
scas
rcr
mov
sti
jnp
inc
pop
addr16
mov
stos
jbe
adc
bnd
imul
aaa
push
push
sub
push
sbb
cmp
stos
pop
(bad)
sub
imul
scas
(bad)
sub
cs
dec
fadd
rcr
pop
and
cmp
fs
test
cwde
out
xchg
xor
fnstcw
or
movs
iret
outs
sub
pushf
mov
cmp
scas
ja
lods
sub
(bad)
ja
ins
xchg
shr
test
call
into
inc
aas
cmps
xchg
pop
and
mov
adc
mov
sbb
shr
mov
cmp
je
push
test
mul
cld
cmp
retf
repnz
loope
fld
js
popf
repnz
in
xchg
pushf
call
dec
or
dec
jnp
mov
inc
push
pop
fs
mov
push
aad
sub
push
shl
xlat
ins
sar
(bad)
cmp
dec
jnp
inc
call
scas
pop
dec
scas
ret
data16
dec
pop
jae
mov
daa
(bad)
xchg
test
(bad)
cdq
cmp
cmc
push
test
and
out
push
gs
gs
mov
aad
cmp
xor
rcl
mov
and
loop
sub
inc
sub
fwait
dec
dec
sbb
xor
cld
fwait
je
dec
aad
lea
sbb
pop
in
and
mov
fsub
or
mov
movs
aaa
stos
or
(bad)
jg
ds
call
jmp
leave
repz
sbb
lock
adc
cmps
push
jmp
leave
(bad)
fsub
(bad)
pop
xor
cmp
enter
sub
rcr
cmp
push
leave
pop
sbb
mov
mov
mov
mov
fwait
loop
fmulp
push
not
cmps
(bad)
jl
fnsave
test
cdq
add
mov
jmp
mov
cmp
gs
rcl
(bad)
dec
cli
dec
cmp
inc
call
scas
in
cmp
push
sbb
movs
repnz
jb
push
mov
cdq
dec
jecxz
push
add
sbb
sbb
jle
mov
aam
sbb
loop
mov
popf
sar
inc
push
cmp
cmp
sub
jmp
test
xor
in
inc
movs
inc
ss
sub
dec
add
mov
inc
mov
jecxz
mov
fwait
pop
jl
xor
adc
sbb
adc
sub
es
in
sbb
iret
xchg
and
push
mov
pop
into
sub
pop
jmp
mov
das
cmp
pushf
cmp
gs
(bad)
cld
(bad)
jp
cmp
es
push
mov
jbe
sar
js
sub
dec
xchg
lahf
loop
loop
mov
push
xchg
mov
cs
fptan
xchg
xchg
pop
repnz
sti
std
ja
mov
repnz
stos
loopne
fld
sbb
iret
mov
jo
in
jmp
jbe
mov
rcl
inc
movs
mov
xchg
enter
das
ret
inc
pop
out
ja
minps
js
ins
iret
push
fstp
dec
(bad)
fwait
movs
xchg
or
jne
lea
inc
pop
cmp
out
fwait
ins
shl
pop
mov
ret
adc
adc
(bad)
dec
mov
imul
add
nop
fldcw
pop
jecxz
xchg
cmc
out
shr
(bad)
or
mov
jae
out
mov
lahf
stos
xor
out
jne
fist
aas
inc
cmps
mov
cmp
fsub
cmp
jmp
repnz
stos
mov
cdq
popa
inc
xchg
in
sbb
xchg
int3
inc
jo
inc
hlt
inc
and
xchg
aas
inc
scas
retf
adc
cmp
jb
fcomp
xor
sub
test
lea
mov
cmp
retf
pusha
and
gs
cmps
shl
aas
xchg
cmp
xchg
ja
push
xchg
sub
inc
hlt
mov
fimul
push
adc
shl
dec
push
jo
cli
mov
mov
mov
arpl
xchg
leave
scas
and
mov
mov
adc
jno
xchg
push
sbb
dec
push
lods
push
shl
mov
cmp
sbb
stc
popa
lea
xor
mov
clc
dec
lock
pushf
sbb
dec
repnz
mov
in
les
call
pop
add
mov
jmp
in
in
push
js
mov
push
out
dec
fisttp
in
xchg
daa
pop
mov
push
mov
les
dec
dec
retf
jp
out
xchg
adc
rol
call
jp
cmp
popf
inc
sti
daa
(bad)
dec
imul
mov
(bad)
or
mov
jle
int
push
cwde
sar
add
ja
in
adc
pushf
or
scas
xchg
cmp
cmp
dec
dec
test
fmul
xchg
jmp
retf
dec
push
call
rcl
cld
xor
jg
pop
and
pop
pop
shl
in
rol
cmp
sbb
sub
stos
mov
cmp
cdq
sar
push
loopne
sbb
pusha
repz
mov
lea
ins
into
push
or
mov
mov
xchg
pop
scas
stc
or
dec
fcomip
adc
leave
mov
add
out
fld
into
in
sub
hlt
(bad)
or
jne
inc
test
movs
dec
sbb
xor
jae
mov
leave
in
out
mov
cmp
ins
or
sub
mov
test
jbe
in
std
js
out
lods
adc
into
xor
mov
scas
into
jmp
lea
(bad)
iret
fwait
or
in
ds
pusha
das
xchg
push
inc
dec
pop
cmps
sbb
daa
inc
jb
sbb
mov
mov
push
adc
scas
dec
test
out
xor
popa
adc
xchg
call
in
sar
and
dec
pop
fcomp
dec
jmp
mov
mov
outs
dec
pop
push
bound
push
inc
test
out
retf
rcr
xor
popa
xor
sbb
lods
mov
daa
repnz
data16
addr16
leave
pop
mov
jp
mov
enter
xchg
jmp
leave
or
pop
std
push
ds
inc
popf
hlt
imul
sbb
inc
je
inc
mov
int
repnz
pop
data16
add
dec
jbe
pop
fild
cli
outs
sbb
mov
fild
jne
fstp
(bad)
movs
sar
lods
sbb
dec
fdivp
sbb
neg
rep
push
sar
pop
iret
imul
gs
mov
rcr
jl
dec
xchg
and
fwait
gs
test
ins
add
ret
inc
outs
mov
pop
or
lods
push
jne
lods
shl
retfw
add
mov
(bad)
outs
(bad)
out
lds
ja
sub
retf
das
or
pop
jne
retf
mov
(bad)
sub
cmps
cmp
outs
xchg
cmps
mov
cmps
shr
and
mov
movs
fld
xchg
shl
scas
nop
jns
stos
out
push
push
addr16
stos
xor
jmp
ret
inc
fcomp
(bad)
or
imul
push
and
fisub
repnz
inc
call
sub
or
mov
jmp
sbb
mov
daa
int3
xchg
pop
popa
mov
imul
call
loopne
dec
nop
jne
lods
(bad)
stc
jp
inc
jp
pop
sub
adc
nop
jp
and
or
push
push
cwde
lods
iret
pop
xchg
ja
dec
repz
ret
add
js
sbb
out
sub
pop
cmc
les
mov
ss
pop
xadd
and
cmc
js
out
or
addr16
lahf
ja
and
rcr
mov
dec
mov
or
les
jmp
cmp
mov
push
stc
inc
push
jae
xchg
retf
ins
js
addr16
jp
fld
retf
xchg
mov
mov
movs
add
add
cmps
jae
jns
imul
cmps
ret
mov
sub
xchg
pop
movs
mov
dec
jo
mov
call
aas
pop
jne
(bad)
jmp
call
add
test
jge
inc
xlat
sbb
mov
ror
cmc
fpatan
cmp
daa
mov
(bad)
xchg
scas
loope
fimul
pusha
cmp
loop
mov
dec
repz
movs
jecxz
add
dec
and
jmp
stos
pop
fcmove
xchg
loopne
rcr
jmp
push
jle
jp
clc
dec
jmp
jno
pop
loope
and
jmp
mov
sub
sub
dec
cmps
lods
pop
xlat
sbb
add
sub
leave
xlat
cmp
push
mov
sbb
es
mov
imul
js
repnz
mov
mov
sahf
jo
scas
repz
js
or
scas
adc
cmp
stos
lods
xchg
fdivr
pop
test
(bad)
loop
xor
mov
aaa
dec
jg
sbb
jmp
aaa
mov
cmp
movs
lock
pop
dec
popf
and
retf
cmp
fnstenv
mov
inc
cdq
xor
les
fidivr
sahf
and
pop
ror
lods
mov
mov
sbb
rcl
arpl
jne
cmp
push
sub
mov
ss
cmc
icebp
push
pop
lds
es
mul
inc
hlt
push
in
aad
inc
mov
mov
fmul
push
bnd
mov
out
xor
fcomp
fcmovne
mov
icebp
lea
and
(bad)
mov
dec
sti
add
enter
xchg
int
jnp
aam
sub
sub
fstp
push
aaa
cmp
out
and
sbb
loopne
les
xchg
scas
imul
adc
cmp
(bad)
out
adc
(bad)
jg
ds
pop
or
adc
pop
xor
sbb
repnz
or
mov
ds
mov
ror
shr
mov
cli
(bad)
mov
xor
dec
out
je
sbb
fsubr
sub
or
cmp
sar
std
lock
fstp
aam
dec
repnz
in
sbb
sub
outs
fdivr
stos
sbb
push
das
xchg
xchg
cmovp
popf
mov
stos
lock
es
test
dec
pop
push
sub
(bad)
xchg
pop
out
ret
imul
loop
retf
jmp
(bad)
jno
mov
(bad)
enter
shl
test
in
jp
mov
(bad)
shl
int
mov
cli
aad
and
ins
mov
pop
daa
mov
inc
pop
rol
ret
dec
in
push
mov
rcl
(bad)
iret
repz
pop
jmp
rcl
jb
mov
sahf
rcr
pop
in
mov
js
in
mov
or
stos
or
mov
pop
lods
fucomp
xlat
mov
xchg
lahf
cli
push
mov
clc
push
daa
gs
call
inc
scas
push
ins
jle
cmp
mov
inc
add
pop
cli
and
jmp
retf
and
adc
mov
xlat
or
cwde
sbb
cmps
push
xchg
shl
icebp
add
xchg
push
popf
cmp
mov
and
and
mov
mov
sti
mov
repz
mov
and
pop
cmp
loop
pop
mov
and
jbe
mov
lods
outs
test
inc
pop
lds
xchg
sub
cmps
sub
pop
jbe
xchg
ds
(bad)
jno
repnz
into
loopne
loop
mov
jmp
data16
dec
jae
retf
mov
and
gs
mov
push
fcomp
adc
(bad)
adc
or
or
xchg
mov
or
dec
cmp
repz
cdq
mov
mov
jmp
cmp
mov
cs
push
fidiv
mov
aas
xchg
pop
hlt
pop
xchg
dec
lods
mov
dec
adc
xchg
ins
dec
cdq
inc
int
aas
es
pop
pop
imul
cmp
pop
stos
jnp
push
cli
jns
pop
adc
lock
int3
mov
les
jbe
push
xchg
jnp
push
pop
xlat
pushw
push
mov
mov
fs
mov
xchg
aas
sahf
pop
add
mov
in
dec
aad
cdq
xor
jl
stc
mov
push
shr
outs
cs
push
push
dec
jae
scas
mov
dec
pushf
jg
sti
fnstenv
ins
in
neg
nop
mov
cmp
inc
outs
xor
jg
mov
sub
inc
pop
rcr
pop
mov
aam
les
push
push
inc
(bad)
int3
dec
arpl
jae
xor
push
repnz
cmp
adc
xor
stos
pop
test
push
cld
xor
out
sbb
jae
(bad)
imul
cmps
xchg
and
leave
mov
jmp
shl
xchg
inc
mov
ffreep
lock
inc
rcr
popa
sti
fisubr
jl
(bad)
mov
cmp
or
mov
inc
jp
mov
xor
jb
pop
xchg
mov
clc
sbb
(bad)
xchg
jmp
(bad)
ror
out
lods
imul
out
(bad)
int3
fstp
mov
sbb
shl
iret
pop
pop
jecxz
mov
mov
scas
arpl
dec
mov
push
jb
into
movs
test
cmp
mov
mov
fidiv
cli
jp
pop
loopne
xor
sbb
dec
mov
pop
inc
pushf
repnz
aaa
mov
adc
mov
and
shl
jmp
outs
lea
sub
push
fimul
pop
mov
xor
clc
je
mov
xor
ja
(bad)
jmp
cli
fnstcw
rcr
jnp
sbb
inc
jg
push
jbe
sub
imul
jae
fwait
pop
mov
loop
pop
jmp
dec
addr16
jmp
sub
xor
jo
or
jmp
mov
dec
mov
lea
out
jnp
sbb
sub
fst
in
mov
(bad)
test
xor
sbb
cmc
xchg
(bad)
sbb
mov
cmps
dec
stc
test
rcr
(bad)
lahf
dec
push
loope
fldenv
push
es
test
rol
bound
lods
dec
out
xchg
and
mov
out
pop
or
arpl
dec
jg
push
mov
mov
fdiv
inc
in
leave
lahf
ror
mov
inc
nop
das
(bad)
ds
fwait
(bad)
ror
pop
scas
xchg
jo
xlat
dec
outs
daa
ret
xchg
les
add
iret
test
jne
cmc
cmp
ins
in
mov
and
daa
aas
mov
imul
(bad)
ret
stos
push
push
dec
jmp
in
adc
movs
sbb
mov
hlt
repz
mov
dec
icebp
sub
not
pop
stos
jmp
jmp
pop
jae
loop
xchg
jmp
addr16
mov
push
call
shl
cmc
mov
mov
fist
pop
ja
jmp
in
mov
(bad)
les
xor
and
call
addr16
xchg
cmc
call
dec
shr
dec
(bad)
lock
fmul
fstp
xlat
xchg
(bad)
aaa
mov
scas
call
loope
sub
imul
mov
mov
cmp
in
fcomp
xchg
repz
sbb
xchg
sti
dec
cdq
stos
aad
mov
cmp
mov
bound
sahf
loop
jle
pop
test
mov
dec
daa
lahf
movlps
mov
and
leave
arpl
inc
or
out
or
mov
je
lods
add
jl
adc
sbb
jae
mov
xchg
hlt
xchg
cmp
add
jge
in
add
xor
push
pop
add
pop
sub
mov
aas
dec
loopne
leave
dec
and
add
push
or
ret
push
push
dec
and
(bad)
frstor
ins
repz
jmp
mov
push
fstp
test
inc
shl
sub
xchg
cwde
or
inc
push
aam
clc
xor
xchg
les
xchg
jnp
push
and
pop
xchg
pop
movs
xchg
pop
movs
movs
aaa
rol
push
sub
fadd
js
sub
bound
cdq
dec
fisttp
mov
in
not
jne
in
mov
mov
mov
mov
retf
into
mov
adc
stos
mov
imul
jg
xor
mov
jne
inc
push
fcmovbe
daa
jne
lahf
ror
or
mov
pop
push
dec
sub
dec
(bad)
es
xor
mov
es
aam
sbb
xchg
cmc
mov
(bad)
gs
retf
test
jecxz
shr
xchg
dec
jmp
mov
div
std
test
xchg
add
cwde
pop
and
fistp
mov
pop
and
mov
dec
cmp
mov
dec
std
mov
lahf
aam
cmp
inc
fucomip
xchg
call
retf
not
es
adc
int3
fcmovnb
xor
xor
jo
jnp
dec
cmp
lods
xchg
sub
push
mov
jge
lods
hlt
jae
xor
push
and
fnstsw
inc
mov
out
mov
scas
aam
fld
popa
xchg
(bad)
sub
push
or
sub
and
mov
ds
mov
or
repz
hlt
push
add
(bad)
rcr
int3
inc
cmp
xchg
mov
and
push
pop
adc
xor
pop
push
gs
jg
sbb
jecxz
xchg
call
(bad)
jbe
sub
mov
mov
push
mov
jmp
mov
imul
lahf
xchg
aad
test
mov
xor
pusha
lods
scas
shl
out
add
pushfw
mov
push
adc
push
mov
cmp
(bad)
fwait
sbb
push
sbb
xchg
scas
mov
add
scas
mov
(bad)
mov
dec
les
daa
test
mov
arpl
aam
jmp
lahf
inc
test
pop
fstp
cli
cdq
cmp
in
dec
add
cmp
sbb
sbb
pop
es
or
mov
lea
es
scas
ss
push
jecxz
fmul
jnp
pop
jnp
pop
retf
aad
fcomp
cmp
xor
pop
jnp
stos
aaa
jbe
shr
push
adc
int3
lahf
xchg
scas
sbb
sub
sub
xchg
scas
inc
out
xor
loopne
pop
ja
lods
fs
mov
sbb
test
inc
lahf
sub
leave
and
sbb
in
arpl
jg
mov
in
ds
cmp
(bad)
imul
lods
adc
imul
dec
cmp
aad
and
xchg
mov
jne
mov
mov
mov
and
lods
cmp
fld
jae
sub
add
pop
xchg
shr
out
cmp
mov
lods
jns
ds
adc
stc
pushf
dec
xor
mov
dec
or
cmp
jmp
mov
xor
jns
cmp
(bad)
add
cld
sbb
xor
xor
cdq
mov
pop
loop
leave
or
jo
dec
mov
loope
ins
sar
dec
and
sahf
mov
faddp
xchg
cmp
or
shl
ja
in
mov
mov
mov
mov
adc
jmp
imul
lock
and
cmp
push
push
lods
cdq
mov
or
add
fwait
mov
mov
imul
sar
(bad)
(bad)
xor
repz
xlat
inc
mov
and
mov
pop
mov
xor
fsubp
xor
iret
pop
(bad)
pop
xchg
nop
in
pusha
in
mov
push
loopne
mov
add
xchg
mov
(bad)
dec
pusha
repz
dec
lahf
jo
out
fnsave
loope
sbb
cmp
pop
gs
je
fbld
lods
(bad)
and
call
retf
and
pop
das
or
retf
sbb
cmp
adc
popf
mov
jge
cmps
shl
out
lea
dec
sub
(bad)
lods
xchg
sub
test
cmp
std
clc
mov
and
out
aas
mov
adc
pop
mul
fst
jno
pop
addr16
lahf
mov
lock
push
xchg
push
adc
or
lock
sub
mov
mov
mov
out
fidiv
fidiv
jb
ror
leave
push
sub
add
jp
mov
test
xlat
push
int3
dec
xchg
mov
jmp
aam
adc
(bad)
rcr
add
lock
in
outs
xchg
push
pusha
jle
mov
loop
mov
movs
fstp
into
ficom
imul
jg
inc
sahf
(bad)
cmc
sub
cmc
jge
mov
repnz
mov
fimul
add
xchg
(bad)
aaa
jp
std
clc
push
call
(bad)
jle
shl
dec
imul
adc
fstp
and
or
mov
inc
jecxz
iret
daa
mov
xchg
dec
int
inc
add
add
mov
out
push
mov
sbb
mul
mov
(bad)
xchg
lea
pop
lods
into
outs
xlat
sub
jns
outs
les
rcr
int
shr
dec
mov
inc
pop
jbe
sub
push
jecxz
adc
dec
ds
cmp
ss
xor
ficom
xchg
imul
mov
fldcw
(bad)
sbb
das
ror
push
mov
mov
fist
pop
fdivr
dec
xchg
inc
pop
cmp
mov
xlat
dec
loop
and
inc
(bad)
jb
fs
pop
push
cli
shl
je
mov
lods
jle
and
xchg
or
aaa
mov
push
sar
xchg
jne
jno
push
cmp
pop
js
fst
lods
xchg
push
dec
pop
outs
xchg
hlt
sahf
jae
jmp
or
shr
adc
in
mov
dec
ds
int
mov
(bad)
cmp
(bad)
cmp
xor
dec
int3
rcr
pop
mov
in
cmp
movs
in
pusha
fwait
sahf
xor
pop
data16
fist
mov
popa
ja
xchg
lea
in
jbe
pushf
int
jb
stos
xor
pop
mov
lahf
out
imul
mov
pop
jb
push
test
ficom
mov
in
mov
cmp
add
jecxz
cs
movs
(bad)
sub
test
cmp
rcr
repnz
inc
mov
mov
ret
push
imul
jns
(bad)
pop
dec
out
pop
xchg
nop
dec
ins
mov
fstp
sti
iret
fcom
js
mov
(bad)
jmp
ret
cmp
icebp
jne
hlt
push
jge
mov
out
xchg
shr
imul
inc
pop
rcr
je
push
into
sbb
ins
dec
mov
stos
xor
into
adc
pop
nop
pop
jae
pop
fist
mov
inc
pop
cmp
xor
repnz
push
aaa
dec
sbb
sub
out
and
iret
sub
cmp
dec
push
push
movs
cmp
mov
pop
and
push
scas
pop
and
(bad)
(bad)
int
aas
add
ret
dec
xchg
fs
je
mov
sbb
or
mov
popf
xlat
cmp
mov
scas
xlat
xor
loopne
push
aad
daa
jns
out
cmp
ins
cld
popa
imul
inc
push
or
add
mov
jg
aaa
test
ret
imul
in
pop
stc
and
je
push
jge
mov
xchg
jae
out
pop
mov
push
fadd
xchg
(bad)
lods
push
push
xor
add
mov
(bad)
fnstsw
pusha
inc
movs
pop
movs
inc
outs
dec
pop
cmp
je
cdq
pop
icebp
cmp
mov
rcl
sbb
mov
aas
mov
xchg
jmp
(bad)
dec
sbb
popa
call
pop
inc
(bad)
loope
lods
neg
adc
inc
aaa
adc
jmp
pop
(bad)
test
sub
mov
sbb
outs
xor
fsubr
mov
ins
call
sti
retw
xor
cdq
in
dec
je
(bad)
mov
push
je
jg
out
pop
mov
jnp
push
fisub
not
pop
jecxz
inc
cmp
and
out
rol
and
icebp
and
(bad)
rcl
shr
mov
mov
add
shl
or
mov
out
mov
xchg
mov
ins
push
mov
popf
push
dec
(bad)
fwait
icebp
adc
rol
adc
out
xchg
jle
lods
and
push
not
imul
call
mov
pop
add
inc
xlat
xchg
jo
pop
popf
aad
fmul
clc
or
inc
stos
jne
int
jge
jb
jns
sbb
pop
and
out
pop
jae
shr
mov
das
mov
in
icebp
and
jbe
adc
pusha
fisttp
pop
dec
test
pop
aam
js
les
adc
xchg
ins
in
adc
in
mov
jecxz
or
mov
dec
xor
cmp
repz
stc
pop
xchg
mov
push
fisttp
out
jae
dec
in
pop
test
int3
retf
xor
push
xor
xchg
je
or
int
das
cli
pushf
and
mov
into
lock
mov
and
movs
in
rol
lea
lahf
ins
stc
xor
mov
test
popa
and
jmp
scas
cmps
mov
(bad)
sti
ins
add
loope
cmc
inc
jae
ret
(bad)
cmp
vmread
div
imul
cld
and
and
out
jne
fs
jmp
mov
push
xchg
inc
jns
into
cmp
mov
iret
gs
fst
in
pop
sub
adc
lock
jmp
mov
fsub
(bad)
stc
cmp
sub
popa
arpl
bound
or
inc
js
xchg
xchg
xlat
mov
dec
adc
xchg
or
jmp
jnp
inc
inc
mov
imul
sbb
cmp
ret
(bad)
push
mov
nop
imul
mov
test
je
(bad)
out
mov
mov
cmp
pop
and
cmps
sbb
sbb
int3
xchg
into
jg
div
outs
and
xchg
outs
inc
push
ja
dec
sti
mov
jmp
jmp
sub
gs
adc
out
or
mov
inc
lahf
cmps
cmp
(bad)
not
sar
rcr
pop
mov
addr16
xchg
out
and
je
jmp
pop
repnz
push
ds
or
push
adc
call
and
jns
mov
cmp
xchg
jns
scas
inc
pop
dec
aas
mov
push
jbe
mov
push
cld
lods
adc
(bad)
call
xor
push
lock
jbe
cmp
std
jmp
cmp
mov
in
xor
cmps
(bad)
ins
lea
push
mov
daa
sbb
jmp
int
cmp
aaa
xchg
jae
lea
sbb
scas
imul
xchg
inc
retf
jmp
push
int
pop
add
dec
pop
addr16
sub
mov
mov
or
imul
imul
enter
out
sahf
xchg
inc
inc
ss
xor
sbb
aas
dec
out
loope
mov
push
arpl
rcr
fst
ins
aas
or
inc
pop
pop
shl
aaa
and
int
rol
fs
jmp
cmp
repnz
popf
call
aam
jnp
dec
cli
pop
into
jecxz
jne
pop
fs
sahf
mov
lods
inc
cmp
cmp
call
pop
mov
mov
sbb
or
mov
cdq
xchg
xchg
mov
packsswb
mov
addr16
in
js
sti
outs
jge
test
adc
vpshlq
in
cmp
rcl
jmp
mov
shl
mov
mov
sahf
xchg
aaa
popa
inc
test
and
ja
call
into
or
jnp
scas
xor
js
jle
aaa
ins
xchg
dec
in
dec
sub
enter
sub
fmul
cli
dec
test
xor
mov
inc
scas
imul
movs
sti
fimul
fs
jno
dec
cmp
xor
pop
mov
dec
jecxz
scas
retf
cmp
cmp
ja
mov
loop
xlat
in
inc
(bad)
imul
aas
in
jmp
jmp
push
xor
and
cmp
inc
gs
xchg
jecxz
cld
mov
lock
sub
sub
int
mov
jmp
mov
ds
push
daa
cmp
pop
and
cmp
mov
sbb
or
sbb
ss
pop
aam
xchg
pushf
cwde
imul
leave
outs
sub
jnp
imul
and
xor
push
mov
les
lea
dec
and
cmp
mov
sub
inc
jl
js
xor
sbb
pop
jle
iret
xlat
ins
fadd
push
arpl
mov
pop
es
inc
cmps
xor
call
cwde
test
mov
int
cld
mov
fxch
and
push
cld
xor
out
inc
int
jge
aaa
in
sbb
stos
push
or
mov
(bad)
mov
jp
frstorw
not
(bad)
sti
sbb
dec
int
js
mov
mov
test
ret
cmps
iret
mov
cmp
cmc
xor
es
imul
jge
push
mov
outs
pop
add
ror
or
sub
js
stos
xchg
push
repz
and
and
test
mov
xchg
jo
jg
scas
mov
mov
call
mov
cmps
movs
dec
arpl
aam
push
stc
xchg
push
je
into
popf
xor
inc
enter
inc
xchg
leave
jbe
cmp
arpl
test
mov
aas
pusha
arpl
xchg
lods
fadd
imul
repz
sbb
jb
sbb
into
int
pop
jnp
repz
mov
es
shl
cmp
test
aam
xor
cmp
outs
hlt
jmp
sbb
mov
enter
xlat
inc
cmp
mov
imul
jns
add
and
stos
loope
shl
dec
pop
(bad)
not
(bad)
cmp
cdq
sbb
mov
lock
stos
inc
push
push
(bad)
imul
in
lahf
pop
inc
sbb
mov
imul
xchg
mov
sar
cdq
xchg
jo
pop
dec
int3
mov
stos
ja
cmp
in
and
fyl2x
mov
xchg
jnp
ror
in
(bad)
add
mov
mov
jnp
dec
jmp
push
imul
in
push
repnz
mov
push
lahf
sub
mov
sbb
cli
addr16
idiv
sti
jmp
dec
mov
mov
pop
push
dec
inc
out
(bad)
mov
jae
(bad)
xor
inc
cmp
retf
sbb
dec
(bad)
(bad)
std
pop
sbb
sbb
dec
mov
out
fsubr
retf
jmp
or
sub
call
pop
(bad)
call
call
adc
xchg
(bad)
adc
and
cmp
(bad)
mov
in
fsubr
repz
imul
es
or
loopne
sar
cmp
inc
cli
rcl
inc
fild
jecxz
sub
nop
cmp
popf
pushf
call
fnstenv
scas
dec
jae
mov
std
div
jns
push
sbb
xchg
movs
cwde
sub
cmp
pop
ds
xlat
cdq
dec
test
mov
mov
sub
(bad)
sbb
xor
and
push
mov
sbb
and
jae
sbb
push
sbb
repnz
mov
push
test
scas
fisttp
jmp
pushf
lods
adc
shl
gs
cmp
pop
and
sbb
dec
in
pusha
sbb
add
xchg
xchg
sbb
xchg
mov
jne
jns
xchg
cmps
pop
push
push
popf
or
xlat
cmp
inc
popf
out
ins
xchg
cwde
std
mov
cmp
int3
sub
repz
repz
(bad)
mov
xchg
loop
fstp
pop
int
pop
mov
xor
sbb
shr
adc
push
and
push
fist
out
push
xor
xchg
stos
fcomp
(bad)
push
adc
scas
dec
xlat
sub
aas
fstp
push
out
dec
sbb
mov
xchg
aam
not
mov
stos
pop
ud1
jle
div
sbb
(bad)
je
aad
mov
push
cmps
dec
sar
jmp
fs
ret
aas
fs
sahf
loopne
int
xchg
and
xlat
pop
data16
mov
ror
push
jmp
ins
aad
sbb
out
cld
adc
imul
(bad)
mov
push
and
clc
dec
xor
mov
or
xchg
push
dec
inc
dec
sbb
jecxz
sub
cmp
(bad)
push
aas
xchg
sbb
fs
fdivr
mov
add
jl
scas
dec
pop
mov
inc
je
dec
push
push
push
mov
xchg
out
xchg
pop
jmp
scas
jecxz
into
call
std
jmp
int
lods
xchg
mov
enter
inc
(bad)
cmc
dec
in
movs
xchg
add
cmp
jl
repz
arpl
mov
data16
push
push
icebp
xor
jmp
mov
arpl
cmc
mov
sar
fisttp
mov
jl
cld
or
not
aad
into
pop
mul
shl
leave
lods
imul
or
jecxz
popf
lahf
into
mov
pop
hlt
test
je
mov
xor
es
and
jb
jbe
cdq
js
(bad)
fcmovb
adc
jle
adc
add
fsubr
pop
mov
mov
cld
inc
je
cmp
mov
shr
jbe
mov
sub
call
mov
shr
fs
ror
pop
jecxz
test
in
dec
pop
mov
test
fucomp
and
aaa
jecxz
mov
or
fisub
dec
bound
scas
pop
in
sub
(bad)
aad
mov
mov
dec
stos
in
inc
cmp
xor
mov
leave
(bad)
sahf
fcomp
aas
stc
inc
adc
leave
sbb
pop
aam
fnstsw
fwait
scas
push
mov
call
jge
pushf
aam
pop
mov
(bad)
cmp
cs
jge
mov
cdq
sub
dec
not
addr16
jae
aam
pop
inc
neg
mov
cmc
jae
loop
mov
xor
pop
ja
and
ret
into
ffreep
push
popa
or
pop
jnp
imul
inc
pop
pop
ins
ss
mov
int3
fisttp
fdivr
ins
push
ja
adc
pop
(bad)
xor
mov
pop
lock
lods
adc
lods
xor
test
aam
daa
rcl
sbb
addr16
or
mov
imul
(bad)
pushf
dec
mov
cmp
retf
cli
mov
pop
mov
mov
popf
out
pop
and
(bad)
sar
jp
jb
xchg
(bad)
and
(bad)
ror
mov
data16
leave
arpl
and
xchg
dec
jmp
cmp
jno
sti
jecxz
mov
sti
dec
mov
push
inc
data16
int3
mov
adc
jmp
fs
cwde
or
sub
jno
div
add
fisub
movs
dec
daa
gs
fcomp
pop
add
imul
xchg
pop
fmul
mov
cmovns
xchg
push
push
pop
leave
aam
std
dec
mov
jmp
xchg
dec
out
xchg
leave
mov
adc
mov
(bad)
call
pop
lea
into
out
call
jp
int3
popf
icebp
mov
les
stos
rcr
out
and
sub
push
jecxz
cmp
(bad)
mov
jecxz
jmp
push
pop
aad
sahf
xor
cdq
popf
mov
push
out
add
pop
out
cmp
cmp
adc
stos
pop
jmp
bound
arpl
mov
add
cmp
sub
cmp
inc
pop
les
movs
icebp
(bad)
push
xor
je
and
(bad)
cmps
jae
xchg
or
imul
ret
mov
xlat
or
out
lea
push
lods
leave
push
adc
xor
mov
and
mov
xchg
int3
into
jne
mov
mov
icebp
mov
and
aas
mov
xchg
xor
dec
push
out
call
leave
cmp
mov
cmp
(bad)
mov
pop
mov
mov
mov
imul
iret
xor
or
add
js
adc
jae
in
pop
inc
mov
(bad)
sub
cld
push
gs
pushf
add
js
test
jecxz
mov
cmp
into
dec
in
shl
push
jb
retf
cs
sbb
and
xor
sbb
data16
mov
test
ins
and
arpl
sbb
mov
dec
imul
sub
mov
add
popa
lea
popf
lds
mov
int
jo
mov
mov
ds
out
mov
and
jp
jl
push
leave
push
mov
aad
iret
and
pop
mov
cmps
jmp
leave
ror
dec
retf
add
aas
retf
prefetch
pop
add
xor
mov
aad
jae
pop
movs
je
mov
in
aam
lahf
(bad)
call
fsub
push
xor
add
dec
pop
xchg
push
out
shr
inc
pushf
push
cli
sti
cmp
aas
jg
fistp
cmp
mov
loopne
push
ret
add
push
cmp
pusha
add
cmp
cmp
mov
scas
xchg
fiadd
sahf
push
bound
or
inc
sbb
xchg
mov
(bad)
sbb
push
outs
adc
rcr
jae
(bad)
(bad)
cmp
mov
sub
and
mov
sbb
clc
xor
xchg
dec
movs
mov
adc
add
jmp
cli
(bad)
fdivr
push
lock
lods
in
xor
jmp
xchg
inc
adc
xchg
inc
and
nop
inc
or
dec
xor
nop
inc
xor
and
nop
mov
adc
add
scas
xlat
out
adc
mov
or
mov
div
sub
(bad)
jl
repz
ret
jae
imul
xor
jl
in
mov
icebp
fist
cdq
or
retf
das
push
xor
lea
mov
jecxz
imul
into
es
xor
xchg
xor
xchg
dec
(bad)
xor
lds
jnp
cmc
inc
cwde
sub
xchg
dec
outs
sbb
dec
aaa
sub
mov
push
sbb
fstp
loopne
cld
push
cmp
lds
mov
xchg
ret
mov
mov
pop
xor
out
into
xor
xchg
dec
mov
mov
jl
mov
shl
xchg
inc
inc
aam
test
inc
xchg
sar
in
inc
sub
pusha
xchg
sbb
xchg
(bad)
push
scas
xchg
jp
icebp
adc
popa
je
pminsw
adc
movs
out
int
icebp
cmp
pushf
mov
mov
add
loop
ds
cmps
sbb
iret
scas
mov
cwde
fnstsw
inc
mov
data16
mov
jge
pop
iret
jp
push
in
popa
ror
imul
fldenv
mov
fdivr
retf
inc
stc
pop
xor
add
in
shl
fmul
ss
cli
dec
jne
add
leave
adc
cmps
mov
jnp
mov
xchg
je
dec
bnd
mov
xchg
loopne
test
jae
(bad)
sbb
dec
xchg
mov
rcr
mov
test
jmp
and
cmp
inc
stc
cmp
jb
hlt
push
fnstenv
add
inc
cmp
(bad)
(bad)
pop
adc
add
jle
xor
mov
fst
mov
data16
imul
or
(bad)
(bad)
popf
retf
jne
pushf
out
inc
or
in
xchg
call
mov
xchg
jbe
dec
dec
loop
sbb
jge
lea
mov
imul
rcl
pop
int3
pop
aam
pop
mov
dec
enter
pop
xchg
in
jne
shr
stos
mov
xor
jns
ins
mov
cmps
push
lea
rcl
mov
mov
sub
jne
add
mov
mov
mov
pop
mov
xchg
jge
xchg
push
mov
sbb
mov
pop
mov
(bad)
pop
es
in
add
push
das
push
jle
cmp
leavew
enter
xor
sbb
sahf
stc
dec
inc
inc
and
(bad)
mov
add
xchg
mov
lea
test
int
or
mov
and
adc
js
loop
mov
popf
clc
mov
inc
mov
inc
(bad)
fild
pop
inc
dec
(bad)
mov
and
lods
(bad)
ins
sub
fistp
arpl
mov
adc
xchg
mov
rcr
adc
mov
mov
mov
jl
xchg
mov
enter
mov
lods
xor
xor
mov
cld
mov
in
mov
imul
xor
retf
push
outs
adc
xor
out
or
daa
nop
sbb
xor
fild
jg
push
dec
dec
and
outs
hlt
mov
inc
fwait
mov
inc
pop
push
icebp
and
rcl
inc
and
in
add
mov
rol
pusha
xor
push
adc
jae
xor
xor
dec
mov
les
(bad)
loopne
adc
ins
mov
cwde
sbb
dec
pop
push
(bad)
sbb
add
lods
gs
mov
cwde
mov
test
sub
sbb
std
adc
push
int3
xchg
nop
dec
sub
in
rol
jge
sub
fsub
in
pusha
call
jmp
fstp
xor
and
pop
jmp
out
xchg
lods
inc
adc
push
push
mov
pop
xsave
in
dec
(bad)
mov
cli
aad
aam
or
rcr
cwde
mov
cmp
sub
xor
(bad)
xchg
cmp
xor
cmps
and
ret
add
icebp
out
add
lods
push
ds
cmp
adc
shl
pop
mov
mov
sbb
and
or
rcr
imul
mov
jo
xor
mov
add
and
mov
push
retf
push
dec
dec
aas
mov
fld
pop
cli
sbb
std
out
cmp
push
stos
ret
mov
jb
lahf
sub
cmc
add
dec
jb
jbe
stos
inc
xor
or
test
jl
imul
and
out
push
in
pop
xchg
add
mov
push
jne
cmp
or
jbe
mov
xor
push
pop
mov
adc
lds
sub
mov
pop
out
mov
(bad)
sar
or
xlat
in
fmul
sub
push
and
xchg
sbb
mov
enter
scas
mov
leave
xchg
pushf
adc
ficom
pop
aaa
fistp
in
push
xor
dec
mov
sub
nop
lea
mov
mov
push
cmps
inc
add
rcl
cmp
arpl
ja
lods
push
jecxz
(bad)
gs
push
ja
js
push
mov
xor
test
shr
jg
iret
pop
outs
pop
and
mov
imul
daa
(bad)
ror
in
xchg
mov
inc
popf
adc
aaa
fisttp
and
iret
sbb
imul
mov
mov
mov
xor
in
scas
dec
aaa
mov
mov
fs
pop
add
xor
aam
sbb
ret
cwde
mov
ins
mov
cwde
rep
push
push
shl
call
dec
sub
retf
imul
div
mov
cmc
daa
push
cld
push
xchg
pop
bound
mov
and
or
mov
xchg
js
not
jns
dec
lock
dec
shr
pop
(bad)
fadd
std
add
cmp
adc
or
mov
mov
sahf
leave
fdivp
inc
pusha
popf
inc
sub
adc
stos
jecxz
stos
je
aad
sbb
fs
push
mov
fs
fcomp
push
sub
sub
inc
sbb
ror
mov
sub
or
xchg
or
repz
push
les
inc
xchg
fadd
cmp
pop
push
(bad)
sahf
mov
pop
arpl
std
xor
imul
data16
fist
fdivr
dec
test
pop
fnstcw
mov
icebp
sahf
aam
sub
jbe
push
out
imul
arpl
cld
or
out
mov
cdq
adc
xchg
mov
jl
mov
fimul
jne
push
jmp
(bad)
push
ror
jnp
(bad)
mov
sub
push
rcl
mov
es
push
dec
bound
int
dec
(bad)
sbb
fs
push
xchg
daa
std
push
or
or
jo
cdq
test
push
fdiv
jb
adc
lods
mov
jne
imul
movs
nop
stc
cmps
(bad)
int3
into
sub
sbb
cdq
pop
lock
int
icebp
je
test
movs
fadd
icebp
xchg
add
jmp
push
jns
arpl
rcl
jno
cmp
mov
pop
cmp
shr
pop
xchg
dec
mov
stc
int3
mov
or
repnz
jno
retfw
and
mov
inc
sub
arpl
das
mov
lods
rcr
xor
jns
jo
bound
dec
(bad)
sbb
(bad)
mov
push
icebp
mov
xchg
jge
cmp
lea
push
imul
xchg
test
leave
lds
add
add
ins
push
mov
and
aam
sbb
xchg
fist
ins
push
arpl
scas
lods
cmps
pop
data16
lds
int
(bad)
ds
mov
out
hlt
xor
mov
and
dec
pop
fdivr
fld
test
jo
in
xor
stos
call
xlat
add
lock
mov
and
jb
out
jmp
jmp
movs
add
rcl
pop
pop
mov
xor
dec
sbb
(bad)
or
xor
movs
adc
int
data16
mov
push
inc
retf
sbb
pop
or
(bad)
mov
test
loop
aas
add
outs
sub
ja
sbb
mov
mov
in
aaa
hlt
pop
push
cli
pusha
dec
xchg
sub
mov
rcr
inc
repnz
fnstenv
sbb
call
int3
add
mov
xchg
jge
loope
data16
and
shl
add
add
(bad)
cs
push
into
push
push
xchg
in
inc
cli
pushf
dec
aas
jl
jle
push
adc
pop
lock
popa
add
add
imul
mov
cmp
xchg
int
push
aam
(bad)
adc
retf
in
push
mov
adc
mov
ja
enter
or
xchg
jns
fild
sub
adc
ret
cmp
retf
sub
cmps
dec
lods
and
int3
lds
and
fld
inc
icebp
jp
lods
ret
daa
ss
outs
cmp
in
jb
cmc
mov
mov
icebp
pop
mov
cmc
mov
enter
mov
xchg
repnz
lock
mov
or
add
inc
(bad)
cmp
jns
jge
pop
xor
push
dec
cmp
xor
xor
mov
xchg
cdq
inc
sbb
xchg
in
jb
dec
das
fs
and
call
scas
add
out
and
inc
xchg
out
int3
adc
pop
aas
adc
int
rdpmc
sub
sbb
sbb
ret
(bad)
xchg
stos
and
xchg
js
sub
je
mov
mov
(bad)
or
dec
pop
push
cld
cmp
neg
ret
jecxz
push
je
loop
rcl
xchg
push
and
fs
jle
in
xchg
cmp
sti
loopne
fs
inc
mov
repz
cdq
cmps
mov
dec
cmps
adc
xchg
int
ss
lahf
xor
sbb
add
outs
mov
mov
pushf
add
jmp
in
jmp
push
and
cs
xlat
pop
or
mov
js
call
jge
mov
mov
int3
addr16
xor
mov
pop
push
push
jo
sub
(bad)
sub
aas
data16
rcl
icebp
jmp
ret
pop
jmp
mov
cdq
(bad)
mov
cmp
adc
movs
(bad)
sahf
push
inc
stos
dec
xchg
imul
mov
mov
sbb
mov
cmp
or
js
ja
lds
adc
push
iret
fld
ins
sbb
or
pop
mov
or
mov
or
sub
shr
dec
xchg
cmp
dec
mov
int3
cmp
xor
or
mov
repz
fnstcw
fsubr
sti
aad
movs
je
add
int
pop
xchg
cwde
test
fcmovb
xchg
mov
sub
mov
mov
pushf
es
adc
pop
inc
out
je
xchg
add
mov
mov
sbb
btr
jecxz
shr
push
jns
jge
(bad)
ficom
inc
xchg
xchg
test
xchg
sbb
mov
sub
xor
jp
cmps
shl
cmp
mov
jge
retf
cmps
add
jl
test
mov
pusha
outs
or
fimul
pop
test
addr16
mov
dec
popf
pop
fcom
xchg
int
adc
lea
mov
jge
adc
add
or
movs
xchg
sub
shl
dec
aam
les
mov
mov
jb
cmp
and
mov
mov
sub
cmp
dec
xchg
test
out
sbb
add
or
sub
jecxz
jbe
sbb
ins
sbb
sub
clc
rcl
ja
jmp
cmp
jmp
fisttp
xor
pop
mov
xor
bound
outs
mov
push
lods
mov
mov
cmp
jae
cmp
push
dec
cwde
int
xchg
lea
inc
jmp
or
add
jnp
daa
mov
xlat
mov
nop
push
lods
int3
push
xchg
lds
pop
lea
pop
outs
ss
mov
xchg
cmp
rcl
loopne
popa
pushf
mov
int3
jb
bound
sar
les
mov
mov
pop
mov
sbb
mov
ss
cmp
lea
xchg
mov
ins
les
sbb
sbb
dec
jnp
mov
xchg
pop
stos
sbb
fiadd
addr16
xor
jne
pop
or
pusha
shr
pop
test
xchg
xor
pop
(bad)
outs
rcr
js
aad
sub
pop
mov
mov
xchg
mov
cld
adc
int
es
xchg
rcr
fwait
cmp
std
sbb
inc
mov
push
sub
mov
and
sub
pop
adc
mov
pop
in
es
jb
sbb
mov
mov
int3
ret
sbb
js
xor
mov
push
add
mov
jmp
mov
jp
push
inc
or
mov
pop
cmovbe
out
jo
rol
les
pusha
loopne
jp
adc
mov
nop
cmp
jae
xor
test
out
inc
pop
and
xchg
std
pop
test
xchg
pop
movs
mov
popf
aad
int3
xchg
ror
dec
cld
xlat
xchg
inc
dec
iret
xchg
adc
xor
mul
int
test
leave
sbb
mov
sbb
pop
xor
or
aaa
mov
cmp
(bad)
enter
mov
and
test
mov
push
push
cli
cmp
cmp
dec
scas
stc
sub
pusha
sub
ror
je
fwait
icebp
ins
int
dec
push
add
out
test
adc
adc
xor
xchg
or
adc
mov
jmp
outs
fwait
les
and
out
sub
pop
movs
mov
rcl
hlt
jb
jno
js
sbb
push
xor
and
mov
xchg
xor
shr
xor
push
daa
loopne
push
lea
jno
bound
cmp
test
jecxz
fistp
inc
adc
mov
cli
xor
sbb
sub
cmps
loop
sub
lods
jecxz
dec
popa
cmp
sti
mov
pusha
pop
xor
xor
mov
push
mov
pusha
cmp
mov
(bad)
mul
sub
lods
fucom
hlt
cmp
stos
in
call
sub
fs
out
add
push
dec
jmp
sahf
aas
mov
test
cmc
movs
out
rcr
mov
pop
fs
sbb
scas
xchg
dec
jbe
stos
xchg
hlt
inc
push
mov
div
shl
fmul
jno
sbb
test
push
xchg
call
aaa
mov
add
(bad)
fistp
jae
push
xor
sub
push
inc
imul
dec
fcomp
xchg
dec
push
dec
add
pop
xor
les
mov
pop
and
pushf
mov
or
add
jno
jge
pop
in
or
in
or
movs
xor
xchg
xor
jb
shl
in
and
xchg
cmp
hlt
xor
or
icebp
aaa
(bad)
adc
pop
ror
dec
inc
stos
js
cmps
add
jmp
xchg
in
xchg
or
xchg
xor
jecxz
int3
retf
in
leave
jge
mov
repz
and
imul
or
test
nop
enter
(bad)
push
data16
add
add
outs
xor
movs
pop
mov
adc
(bad)
mov
rcl
in
retf
mov
mov
fmulp
push
inc
xchg
mov
ins
imul
sbb
pop
jg
arpl
gs
leave
cmp
xchg
(bad)
in
pop
rcr
aam
hlt
adc
retf
mov
cld
sub
cmp
call
sbb
jge
sub
mov
repz
inc
leave
ror
ins
xchg
sbb
ins
call
scas
push
lds
add
cwde
inc
pop
mov
cmps
sbb
in
fs
dec
add
inc
fisttp
pushf
mov
gs
pop
xor
aam
js
jns
pop
adc
fs
mov
loop
xor
xchg
xor
xchg
push
lods
jbe
jecxz
dec
push
shl
(bad)
pop
adc
dec
idiv
fsub
mov
icebp
xor
xor
xor
dec
xchg
sub
les
out
xchg
ins
xor
cmp
lods
cwde
sub
push
shr
mov
dec
cld
dec
mov
sub
les
dec
lahf
cmp
mov
data16
dec
jo
cdq
aaa
in
mov
and
rcl
jae
jbe
jnp
cdq
pop
inc
(bad)
in
sub
dec
xchg
jp
xchg
out
push
rcl
mov
int3
push
sub
(bad)
(bad)
mov
bound
aam
rdmsr
imul
ret
or
mov
push
ret
or
cmc
mov
mov
pop
dec
sub
add
(bad)
adc
and
pop
outs
add
mov
ss
(bad)
xor
pop
or
xchg
cmp
mov
jmp
dec
or
sub
inc
jg
cmp
cmps
mov
mov
retf
sar
sbb
adc
sbb
iret
push
stos
mov
xor
dec
pop
sub
fwait
inc
push
jmp
dec
mov
fist
mov
lea
icebp
aaa
jmp
cmp
mov
hlt
mov
and
adc
xchg
das
out
cmp
dec
sbb
xor
test
add
test
adc
xchg
pop
fcom
adc
push
int
sbb
lea
popa
mov
xor
aas
sub
sti
push
data16
sbb
add
push
repz
ret
ret
add
mov
and
stc
push
test
aam
mov
or
daa
mov
pop
ss
in
pop
fdiv
push
or
aaa
xchg
ja
and
and
out
inc
fxch
push
xor
push
and
sti
push
xor
cmp
xchg
pop
lods
popa
out
fisttp
jo
pop
in
push
xchg
loopne
xchg
cdq
aad
push
arpl
aaa
add
pop
rcl
cmp
pop
pop
shl
pop
adc
pushf
cmp
enter
lahf
jmp
(bad)
cmps
or
in
test
nop
sub
push
jb
mov
and
jmp
push
es
mul
aam
mov
or
scas
fdivr
ss
ja
jbe
push
(bad)
sahf
(bad)
rcr
mov
out
sub
js
xor
aas
in
inc
jb
imul
arpl
lds
mov
or
ins
adc
and
and
cs
adc
adc
cmps
and
fidivr
add
adc
push
(bad)
cld
fs
(bad)
fldcw
sbb
pcmpeqd
xchg
push
or
add
adc
sar
or
sub
les
jp
xor
mov
cwde
mov
cmp
dec
fisttp
sbb
pop
in
stos
rcr
clc
mov
xchg
clc
jecxz
pop
pop
lds
jle
mov
outs
jo
ror
sub
fwait
cmp
test
jge
inc
test
shl
imul
lahf
or
mov
hlt
aas
xchg
push
cmp
test
ins
(bad)
push
loop
xor
vxorps
xor
or
adc
lds
jb
mov
popa
and
aam
pop
sbb
sub
cs
push
pop
cmp
cmps
xor
mov
out
cmp
je
pop
xchg
inc
sub
jns
mov
repz
pop
dec
dec
ret
and
aas
pop
dec
jmp
pop
mov
xchg
dec
cmp
rcr
xchg
push
str
into
call
and
daa
mov
ins
lods
out
push
push
xchg
xor
pop
dec
aam
push
popf
inc
stos
es
aaa
test
sub
int3
retf
ds
test
add
out
cld
mov
mov
sub
and
xchg
in
cmp
inc
addr16
ins
leave
jge
dec
jmp
push
jne
jno
mov
push
jmp
or
xor
bnd
loopne
(bad)
bound
leave
jno
data16
leave
push
cmp
cmp
xchg
dec
(bad)
(bad)
pop
mov
ficomp
sar
test
xlat
pop
les
stos
ins
mov
dec
jmp
xchg
ss
push
dec
aaa
nop
jmp
popa
(bad)
cmp
adc
inc
add
cwde
mov
rdpmc
shl
push
fidivr
repnz
enter
mov
push
ja
and
cmc
mov
jb
jbe
mov
lock
cld
push
mov
or
movs
or
inc
inc
fld
sbb
add
pop
xor
mov
int3
loopne
add
daa
jb
js
push
and
mov
xchg
jge
imul
ins
xchg
imul
cmp
fadd
adc
inc
(bad)
out
cld
fstp
jecxz
pop
cwde
enter
aaa
rcr
dec
fdivr
jp
dec
cmps
fisttp
adc
call
loopne
xchg
dec
jae
adc
sbb
idiv
cwde
push
dec
mov
ins
shl
push
or
std
add
push
sti
adc
mov
add
inc
in
mov
push
sub
rcl
push
adc
inc
das
xor
xor
inc
jnp
mov
mov
cmps
out
pop
and
mov
setne
jno
and
cmp
mov
repz
test
push
mov
adc
scas
mov
mov
or
dec
inc
cmps
lahf
ret
jno
and
lods
fs
dec
les
test
ss
jle
pop
jno
xchg
add
xor
pop
sbb
(bad)
xor
sar
jnp
daa
inc
(bad)
add
hlt
outs
xor
dec
test
ret
mov
neg
idiv
or
mov
daa
xor
in
cli
sbb
les
movs
bound
mov
adc
inc
call
or
mov
xchg
xor
(bad)
jno
callw
inc
ss
sbb
arpl
jo
mov
mulps
jecxz
mov
adc
pop
ss
sub
jne
adc
dec
and
mov
cmp
push
mov
push
inc
pop
cli
sbb
or
pop
xor
cwde
clc
je
jbe
mov
(bad)
hlt
(bad)
lds
push
jle
int3
(bad)
retf
sub
xchg
or
fst
in
retf
mov
xor
inc
pop
dec
pop
aas
mov
ficom
(bad)
test
or
jae
xchg
xchg
add
fidiv
inc
mov
or
pushf
outs
push
test
imul
sub
and
add
pusha
cwde
adc
rol
(bad)
pop
pop
ja
and
cmp
outs
fisttp
dec
adc
mov
add
(bad)
sbb
or
jmp
cmp
inc
inc
xchg
dec
cmp
push
xchg
add
out
int3
popa
xor
mov
cdq
cmp
shl
sbb
sahf
push
pop
loop
mov
arpl
pop
dec
fs
stc
sahf
in
fcmovbe
out
dec
sub
sub
call
xchg
fwait
mov
out
dec
mov
push
nop
mov
dec
scas
test
jb
movs
mov
fisubr
cmp
mov
rcr
adc
mov
fs
cwde
call
jo
push
shl
sub
pop
and
mov
xchg
mov
fldcw
fld
ins
ret
mov
mov
inc
popf
dec
leave
mov
push
xor
les
lods
xchg
jnp
dec
dec
push
fs
mov
icebp
or
(bad)
(bad)
cmp
enter
ret
push
add
pop
hlt
push
xchg
adc
ret
add
jb
jmp
jo
xchg
ret
inc
mov
les
test
mov
push
fwait
push
mov
out
sbb
mov
add
xchg
push
imul
out
push
xor
cmp
arpl
add
ss
mov
outs
pop
test
fldcw
mov
outs
mov
fcomp
or
imul
pop
push
retf
xor
cmps
inc
jbe
and
push
mov
and
in
(bad)
adc
inc
mov
(bad)
es
pop
ret
xor
scas
xor
push
pop
hlt
and
lods
xchg
cmps
jb
pop
addr16
push
out
sbb
aas
ds
mov
push
cmp
and
shl
jecxz
mov
ret
lahf
push
jns
sub
jl
lods
fwait
sub
(bad)
std
push
cmc
push
jp
mov
pop
xchg
jl
xchg
(bad)
fisubr
sbb
inc
gs
(bad)
out
mov
shl
sbb
xor
mov
je
xchg
fdivr
xchg
popf
ins
ja
in
les
jb
pop
dec
je
push
aad
fiadd
pop
xor
add
mov
cs
pop
mov
lea
xor
fwait
lea
and
sahf
inc
mov
add
shl
mov
jns
mov
ins
pop
cmc
mov
popf
sbb
push
jb
mov
mov
xchg
mov
xor
and
mov
mov
leave
mov
arpl
add
stos
das
xchg
(bad)
in
xchg
data16
xchg
cdq
(bad)
mov
pushf
jns
js
xchg
js
jbe
pop
adc
repz
in
xchg
sbb
ror
or
adc
or
dec
add
or
sub
dec
pop
add
xor
aam
mov
les
hlt
test
pop
cmps
sub
lahf
jle
xchg
fdivr
out
mov
in
sti
shl
fs
and
call
cmp
mov
and
mov
pop
pop
ret
jmp
jg
pop
jo
daa
repz
adc
pop
bound
call
xor
inc
lea
sub
dec
inc
push
cmp
shl
sub
jecxz
ror
push
clc
gs
sbb
(bad)
lds
jnp
sub
out
pop
jp
jp
xor
cwde
mov
and
fld
rcr
loop
mov
nop
or
loopne
mov
lods
ret
jne
test
test
(bad)
lahf
xor
sbb
mov
cmc
pop
cdq
nop
aam
lock
jg
xor
out
add
adc
sbb
push
leave
mov
push
jnp
dec
dec
sub
sub
dec
cdq
xor
xchg
dec
stos
jmp
addr16
cmp
fcmove
ds
cmp
fwait
adc
or
cmp
fcomp
push
or
pop
push
push
outs
mov
nop
clc
mov
push
lea
and
sub
sar
rol
push
mov
das
cmp
cmp
retfw
xor
aad
popf
icebp
pavgb
(bad)
stos
loop
cmp
(bad)
sub
jno
jge
sbb
fwait
icebp
jno
xlat
cmps
mov
rcl
mov
fwait
cmp
call
sub
cmps
je
jo
cmps
mov
neg
out
sahf
sub
dec
repnz
cmp
add
scas
int3
jne
inc
fnstsw
mov
ror
xchg
iret
mov
cmc
ss
xor
into
sbb
cmp
push
push
mov
xor
and
arpl
mul
inc
dec
and
mov
cmps
pop
les
pop
test
or
xchg
push
and
xor
jmp
add
shl
ins
(bad)
out
jg
mov
dec
bound
mov
ret
sbb
and
std
sbb
cli
xor
dec
sbb
inc
mov
pop
sub
dec
mov
push
retf
enter
in
stos
cmp
cld
add
in
mov
push
mov
add
and
out
cmc
fs
jp
shl
stc
lds
xchg
mov
adc
popf
sbb
mov
mov
int3
mov
sub
jns
push
jp
mov
js
call
clc
push
pusha
popf
clc
lods
jmp
leave
sub
xchg
mov
hlt
push
pushf
and
sbb
and
cld
stos
inc
xchg
clc
lods
mov
daa
sahf
jmp
xor
gs
pop
adc
push
inc
xor
mov
cdq
and
call
out
hlt
lds
or
dec
in
push
stc
pop
popa
imul
arpl
stc
inc
add
xchg
(bad)
sub
jle
cmp
arpl
add
sub
mov
jecxz
add
sbb
ja
ss
inc
mov
test
mov
rcr
es
scas
cmp
mov
xor
movs
push
leave
adc
nop
inc
mov
jp
repz
or
xchg
jns
pop
sub
dec
int
movs
das
mov
pop
(bad)
xchg
adc
data16
mov
push
xchg
fwait
pusha
fwait
imul
push
test
jge
mov
clc
out
hlt
outs
dec
push
xchg
aad
(bad)
jne
scas
repz
mov
retf
inc
jns
or
pop
int3
push
nop
or
int
ins
test
ss
ret
mov
dec
mov
sub
bound
in
les
gs
push
cmp
sbb
test
mov
in
les
adc
mov
dec
ds
dec
hlt
jp
dec
mov
sub
adc
stc
pop
sub
jbe
push
pop
mov
sub
outs
add
sub
add
mov
push
push
xor
mov
inc
cli
add
mov
(bad)
(bad)
mov
shr
lahf
or
lds
repz
mov
or
outs
or
fsubr
out
call
mov
sahf
into
jmp
inc
das
and
xor
leave
lds
bound
add
mov
jge
nop
popa
inc
lahf
xor
in
fwait
inc
sub
leave
jbe
ret
mov
jbe
outs
in
push
pusha
or
ret
pop
mov
fmul
lods
sbb
jae
in
adc
int3
movs
cmc
int
scas
adc
(bad)
cs
cmp
mov
mov
addr16
push
popa
stos
push
daa
and
xchg
in
lahf
cdq
xchg
gs
ret
mov
cmp
in
cdq
test
sbb
(bad)
mov
and
mov
sub
add
sahf
jnp
jnp
bound
dec
iret
(bad)
in
scas
(bad)
mov
movs
xor
push
lock
test
dec
mov
fsubr
adc
movs
(bad)
stc
sbb
xor
mov
fcom
popa
pushf
(bad)
sbb
sbb
inc
xlat
or
scas
in
sub
sbb
in
xchg
mov
lods
arpl
jns
mov
pop
stos
mov
xchg
sahf
adc
mov
mov
idiv
add
es
std
ins
stc
hlt
sub
int3
leave
fwait
add
inc
fidiv
inc
dec
add
stos
aad
int3
sub
jns
jecxz
push
(bad)
dec
pop
cld
adc
xchg
bnd
sub
aam
push
test
js
mov
cdq
rcr
jae
imul
sbb
xor
jb
xchg
inc
mov
xchg
inc
aas
mov
mov
cmp
ret
dec
adc
push
test
jnp
pop
sbb
std
lea
dec
mul
fs
daa
inc
lea
and
push
mov
and
jle
sbb
inc
(bad)
loope
hlt
inc
lock
fmulp
ja
(bad)
in
cmp
inc
leave
mov
pop
iret
push
adc
xor
mov
clc
sbb
pop
test
sub
call
mov
pop
ins
call
int3
cmp
mov
mov
xor
mov
dec
cmp
sbb
fld
pop
cmp
(bad)
shl
inc
jb
inc
hlt
out
loop
mul
dec
cmp
sahf
and
imul
cli
aam
dec
bound
popa
retf
mov
adc
test
adc
xchg
cmp
mov
call
push
les
jae
mov
sub
adc
add
sbb
sbb
pop
inc
dec
sub
adc
sub
stos
aad
inc
cmp
mov
mov
mov
cwde
das
movs
jbe
sub
add
pop
imul
out
push
jmp
ss
ins
add
jno
lea
scas
sbb
sbb
out
push
push
mov
call
lods
sbb
jmp
cdq
sbb
data16
sub
out
and
jmp
(bad)
add
push
jle
push
ror
sbb
xchg
sbb
sbb
inc
adc
test
mov
xor
imul
xchg
jmp
(bad)
sbb
dec
hlt
loopne
shl
push
cmp
mov
int3
loopne
dec
mul
fisttp
jecxz
jmp
mov
add
sub
xchg
push
sbb
ins
push
hlt
jne
dec
das
bound
imul
ja
push
cwde
les
ds
jle
lods
xor
in
mul
cs
xor
lds
test
adc
int3
rcr
data16
add
jae
(bad)
fstp
mov
adc
dec
out
fstp
jo
cmp
pop
add
fsub
add
fwait
daa
fst
xchg
sbb
jbe
sub
dec
push
mov
mov
add
push
lds
sbb
mov
mov
outs
out
in
rcl
cmp
lea
jg
out
sub
scas
push
sbb
mov
outs
int3
repz
lods
in
xchg
pop
aaa
adc
mov
push
xor
cdq
mov
iret
sbb
mov
call
jae
inc
sahf
shl
sbb
cmp
and
inc
sbb
xchg
(bad)
fwait
daa
mov
add
bndldx
popf
and
push
lods
inc
sti
xor
xor
push
and
cmp
mov
dec
mov
dec
mov
cdq
push
cld
dec
push
sbb
ds
mov
or
push
dec
jl
mov
mov
cmp
sbb
aaa
and
loope
dec
push
mov
mov
cmp
retf
jb
ficomp
ret
or
outs
xchg
and
mov
cmp
fldenv
movs
pop
add
div
ss
pop
mov
jnp
leave
jl
xchg
mov
(bad)
cmp
jo
leave
dec
sub
add
pop
cwde
lahf
xchg
jns
repnz
mov
push
nop
mov
sub
sbb
pavgw
add
push
shr
add
andnps
inc
cmp
adc
mov
cdq
cmp
(bad)
dec
and
or
mov
ss
aad
(bad)
out
jge
js
aam
jo
inc
retf
jmp
test
lds
dec
imul
add
sbb
push
add
in
loop
xor
inc
add
mov
pop
add
(bad)
jae
xlat
xor
pop
(bad)
cdq
sbb
add
fbstp
test
xor
sti
xchg
cld
sub
jbe
sbb
mov
sbb
and
dec
sahf
push
je
mov
popa
lods
mov
xchg
and
push
aad
imul
sbb
out
push
arpl
sub
sahf
popw
xchg
popa
sbb
mov
mov
int
or
dec
add
aas
bound
bound
mov
jl
cmp
push
jge
jb
addr16
loop
lds
dec
inc
inc
dec
add
scas
xchg
cmp
ins
inc
movs
sbb
xor
outs
leave
mov
(bad)
ss
adc
mov
inc
int3
push
mov
in
sub
pop
push
dec
cld
das
aas
sti
cmc
jnp
cmp
stc
sub
repz
(bad)
jns
icebp
ja
div
ja
scas
(bad)
(bad)
pop
push
bnd
fnstcw
cdq
jno
repz
out
cmc
jnp
cmp
loope
(bad)
iret
sti
cli
imul
dec
sahf
jno
das
aas
mov
lahf
int
iret
div
cdq
mov
push
mov
(bad)
(bad)
lea
mov
adc
stc
mov
(bad)
ins
mov
dec
pop
sub
xor
scas
shr
sbb
mov
test
movs
pop
leave
loope
loop
push
xchg
cmp
aaa
adc
pop
movs
enter
sbb
pop
xchg
cmp
and
div
arpl
adc
jnp
dec
retf
ret
jns
lahf
mov
rcr
scas
bound
stc
mov
cld
icebp
test
hlt
inc
dec
xchg
dec
aas
gs
in
aad
mov
push
mov
pop
xor
fnstenv
dec
push
or
test
push
mov
and
ret
das
stc
fstp
mov
into
in
mov
mov
fild
ror
cmp
loope
jno
push
xchg
mov
imul
pusha
ror
fimul
es
bound
mov
push
sub
mov
mov
das
inc
fst
mul
xchg
mov
stos
xor
push
cs
push
push
lahf
add
dec
or
push
stos
lock
adc
(bad)
(bad)
pushf
cmc
pop
div
inc
mov
add
or
push
icebp
inc
retf
sbb
adc
or
addr16
lds
retf
fcom
sub
dec
pop
and
mov
and
mov
sub
mov
and
cmp
fist
jl
jecxz
mov
jle
mov
fld
mov
xchg
or
push
add
push
js
push
cdq
(bad)
out
loop
push
dec
dec
or
scas
xchg
push
sub
sbb
xorps
dec
or
mov
aam
cmp
dec
add
rcl
addr16
and
gs
sub
sahf
xor
sub
add
inc
xor
sbb
adc
cld
dec
mov
clc
dec
rcr
xchg
popa
add
pop
ins
test
lods
or
arpl
mov
and
(bad)
lds
mov
jae
xchg
test
js
mov
sti
loope
retf
or
or
js
and
push
adc
div
xchg
sub
jo
push
sahf
cwde
cmp
leave
inc
mov
add
sbb
dec
xchg
push
loop
mov
xchg
push
ret
test
sbb
jae
aam
adc
mov
daa
mov
retf
mov
add
pop
shl
xchg
sbb
add
aas
rcr
cmp
lods
and
lds
iret
push
scas
pop
std
stos
mov
inc
hlt
inc
ins
std
cmp
cmps
std
xor
sub
out
xchg
ficom
mov
and
pop
clc
in
sub
loope
add
jecxz
push
in
sub
aaa
add
add
jno
int
and
mov
mov
pextrw
mov
mov
aad
ds
test
cmp
xchg
sub
dec
lds
loopne
add
bnd
xor
std
mov
xchg
adc
aas
xor
mov
mov
cdq
aad
xchg
aas
add
inc
pop
fs
xchg
mov
mov
test
push
loop
push
daa
xchg
adc
cs
and
adc
and
popa
inc
in
mov
lds
test
push
jp
and
jns
sar
push
enter
jbe
and
sub
arpl
push
pop
test
xchg
push
pop
mov
cmp
pop
mov
adc
cdq
xor
mov
sbb
inc
pop
icebp
push
sub
clc
int
out
sub
dec
jge
jo
jmp
jo
sbb
pop
or
stos
dec
scas
(bad)
clc
pushf
loop
or
imul
sahf
add
mov
pop
push
out
repnz
sub
jno
or
imul
xor
jno
adc
retf
pop
add
dec
and
adc
jmp
shr
div
ficomp
loopne
rol
ficom
sbb
(bad)
in
retf
sub
gs
xor
cwde
dec
out
into
ja
pop
xchg
jno
lods
(bad)
(bad)
xchg
mov
(bad)
cli
or
test
sbb
mov
dec
pop
ret
mov
in
repz
icebp
outs
mov
mov
ins
mov
jmp
pop
and
jl
sub
cwde
adc
add
lods
mov
lea
or
and
stc
fs
ret
mov
xchg
jecxz
push
pop
lds
sbb
dec
daa
(bad)
cmp
fucomip
sub
push
ficom
xor
mov
jne
mov
mov
push
in
xor
mov
inc
mov
xor
(bad)
jmp
or
(bad)
mov
or
add
jg
jp
inc
pop
shl
dec
loopne
mov
lock
aam
jmp
pop
lahf
pop
arpl
push
mov
xor
cs
retf
xor
ds
dec
push
push
and
movs
xor
jne
sahf
sub
ja
jg
jmp
cld
aad
jg
and
fisttp
xchg
pop
arpl
adc
adc
scas
pusha
jmp
test
aas
ret
dec
jno
xchg
data16
in
xor
cmp
jmp
dec
mov
xor
clc
mov
inc
test
sbb
mov
es
imul
xchg
in
pop
mov
adc
(bad)
lods
es
int
push
aas
shr
pop
mov
mov
dec
(bad)
cmp
stos
movs
inc
mov
je
push
hlt
fadd
add
inc
call
xchg
ja
ficomp
dec
mov
mov
lods
cld
mov
or
rcr
push
dec
or
cmp
ins
stc
fwait
out
std
popa
dec
movs
cld
mov
mov
jnp
fnstsw
ret
xchg
fwait
push
sbb
cmp
xchg
fidivr
aam
xchg
mov
xchg
mov
sub
test
xchg
addr16
dec
and
dec
jne
pop
mov
shl
scas
movs
inc
push
cmp
stos
jo
mov
sub
dec
sbb
push
scas
xor
add
inc
sbb
inc
sub
mov
movs
popa
push
jmp
adc
fmulp
mov
jo
inc
fstp
jmp
pop
nop
sar
cmp
sub
dec
mov
mov
ror
imul
jo
lods
dec
aam
xor
fcomp
pop
aaa
cmp
ret
shl
pop
sub
ds
jae
sbb
mov
fs
scas
pop
cmps
imul
inc
inc
mov
pop
sub
and
xchg
and
clc
fisub
pop
in
pop
sub
pop
xchg
fdivrp
out
and
and
jno
scas
loop
popa
je
movs
sahf
into
xchg
inc
xor
cs
add
inc
outs
adc
in
sub
inc
or
xchg
jmp
(bad)
cmc
test
adc
add
js
nop
mov
nop
mov
mov
sub
clc
out
je
ret
clc
jae
or
(bad)
sbb
and
mov
mov
inc
(bad)
data16
sbb
movs
sti
sbb
jmp
push
mov
sub
sbb
icebp
imul
jbe
sub
pop
and
xor
mov
lds
jns
idiv
loopne
push
sti
fldcw
fs
mov
call
xchg
shl
xchg
les
retf
jo
fdiv
jne
fs
test
mov
mov
pop
dec
xchg
inc
jmp
push
loope
ret
xor
les
retf
xchg
cmp
xor
jl
jmp
jno
je
xchg
jg
addr16
mov
test
sub
mov
sub
dec
lods
mov
in
hlt
push
adc
(bad)
sahf
mov
pop
fdiv
dec
neg
xlat
into
inc
outs
je
out
mov
fidiv
test
mov
cmp
retf
test
sub
stos
jmp
dec
add
arpl
fst
and
je
fidivr
xor
in
sar
fcmovne
std
jae
pop
pop
dec
push
test
out
add
movs
jb
xor
loop
in
and
stc
sbb
sub
lds
popa
cwde
jl
sub
mov
push
or
ins
sub
mov
cmps
and
hlt
push
and
iret
mov
push
icebp
daa
mov
in
pop
xchg
aad
sub
cmp
jp
aaa
jp
aaa
push
xor
icebp
fstp
lock
mov
dec
cld
dec
(bad)
in
fwait
sub
xor
in
pushf
mov
mov
inc
cdq
sub
push
mov
arpl
repz
and
in
cmp
lea
inc
and
inc
mov
jge
xor
jo
gs
hlt
test
inc
retf
sub
inc
inc
mov
lds
sbb
mov
and
mov
jle
mov
jmp
cmp
mov
and
cmp
adc
cmp
add
and
push
retf
inc
sbb
sbb
cld
out
dec
movs
sar
xchg
mov
sub
test
cmp
cld
cdq
mov
scas
adc
mov
imul
xor
pop
test
outs
mov
mov
sbb
cmps
(bad)
sti
call
mov
data16
push
xchg
jecxz
mov
int
push
push
jnp
mov
jle
cs
xchg
popa
lods
xlat
data16
popf
jmp
out
pop
repnz
mov
(bad)
cmps
ret
pop
aaa
sbb
ins
leave
or
in
call
pop
ss
jmp
movs
adc
shr
cmp
add
retf
sbb
push
mov
loop
cli
out
jb
jg
pop
fs
push
imul
jg
xchg
cmp
pop
or
cwde
sbb
mov
xchg
xchg
mov
ret
bound
push
je
in
mov
scas
sub
xchg
cmp
fdiv
movs
enter
jecxz
mov
lods
push
dec
test
add
inc
pop
push
ds
in
hlt
pop
mov
inc
xchg
xlat
push
aas
stos
sub
xchg
mov
mov
cmc
inc
jp
retf
mov
and
xor
push
fsubr
out
into
or
stc
aas
push
cmp
xchg
push
(bad)
movs
gs
(bad)
fild
xchg
mov
mov
mov
outs
scas
iret
push
add
inc
(bad)
mov
iret
scas
aas
retf
push
pop
hlt
fdivr
in
(bad)
cmp
div
call
shr
nop
movs
ins
lds
lods
xor
aaa
adc
mov
icebp
sbb
jbe
(bad)
push
imul
jmp
(bad)
mov
icebp
popf
call
mov
jbe
(bad)
jo
or
fdivr
or
jl
loop
or
cmp
fdiv
(bad)
mov
test
jno
push
mov
push
jb
lds
outs
jb
retf
pop
ja
js
rcl
cmp
mov
pushf
push
jmp
dec
cmp
mov
sub
sbb
in
btc
mov
fild
inc
(bad)
xchg
loope
in
(bad)
retf
enter
stc
retf
inc
das
pop
adc
xlat
lds
jo
ret
das
jae
sahf
lahf
fdiv
scas
ja
rep
ins
xchg
ret
add
sub
ret
in
jb
cmp
sbb
retf
in
dec
popa
cmp
pop
jo
mul
mov
add
jns
adc
push
hlt
ud1
fiadd
pop
ss
push
ja
jae
enter
inc
shl
pusha
add
inc
jae
cmp
xor
in
xchg
ret
gs
and
jo
retf
cli
mov
mov
xchg
lea
mov
dec
popa
or
fwait
mov
shl
pop
test
add
in
(bad)
js
ficom
imul
mov
fprem1
sbb
xor
xor
test
cmps
out
xchg
jo
inc
sub
bound
adc
mov
xor
cmp
div
jbe
push
and
inc
mov
pop
add
sahf
gs
cmp
mov
rcr
add
inc
int3
in
lea
jno
pushf
fisub
pusha
jno
sub
ret
popa
mov
fimul
adc
test
add
test
sbb
mov
fist
rol
pusha
cmps
add
movs
aaa
add
mov
mov
and
xchg
mov
in
push
outs
cmp
mov
lods
shl
mov
(bad)
push
cmp
jne
mov
sub
sti
ins
pushf
push
or
retf
xchg
pop
daa
mov
mov
in
ja
and
lock
in
js
mov
mov
int
cdq
rol
cld
push
jne
xor
(bad)
push
pusha
mov
fcomp
fwait
xchg
jl
xchg
ret
sbb
lock
xor
jle
mov
push
push
ins
jno
and
push
fcmovbe
inc
mov
xor
cmp
sti
jae
adc
mov
sub
call
cmc
lds
jo
call
call
rcl
pop
push
cwde
lods
and
mov
loop
js
xchg
or
add
ins
sbb
popf
fdiv
lods
sbb
movs
das
out
leave
popa
mov
(bad)
leave
loope
sub
add
loopne
pop
popf
sbb
pop
push
xchg
xor
sub
xor
pop
retf
xchg
xor
sub
stc
jg
popf
xor
cli
mov
in
push
sub
sub
dec
jmp
add
jge
movs
sub
fistp
mov
cdq
xchg
(bad)
addr16
mov
(bad)
jg
jne
jae
jbe
fwait
jge
shr
(bad)
int
(bad)
jg
xchg
jmp
dec
aaa
mov
pop
cld
outs
fcomp
pop
cli
mov
jg
aas
mov
(bad)
dec
in
cmc
ja
push
inc
dec
ins
cmps
jbe
xlat
jnp
ret
jae
sub
addr16
rol
sar
inc
daa
xchg
retf
(bad)
dec
mov
mov
sbb
(bad)
sar
add
inc
rcl
loop
pop
daa
add
jg
(bad)
push
lea
push
and
ds
mov
sub
push
cmps
cmp
xor
push
sbb
imul
sar
cli
out
push
mov
pushf
hlt
sub
adc
lds
mov
push
xor
lea
div
sbb
pop
stc
ror
rcl
shr
dec
imul
sbb
mov
jno
mov
cmps
jae
test
sbb
movs
pop
daa
sbb
jb
sbb
jge
into
loopne
adc
retf
jge
mov
int
add
or
(bad)
fidivr
pop
retf
aam
pop
mov
mov
fnstcw
xchg
clc
aaa
jle
jecxz
add
outs
sub
aam
dec
dec
pop
jl
scas
cmp
cmp
xchg
aaa
sub
ins
hlt
or
pop
dec
fistp
pop
add
lds
dec
fadd
mov
or
shl
ret
cmc
add
jmp
xchg
shl
stos
ret
add
pop
lods
adc
push
and
arpl
inc
ins
mov
iret
(bad)
xlat
mov
popf
jb
outs
fcom
fs
push
je
dec
(bad)
cmps
movs
aaa
arpl
lea
lock
xor
pushf
fcomp
daa
inc
sbb
adc
fsubp
fistp
xchg
sbb
loope
or
sar
retf
push
nop
dec
jno
ja
mov
repnz
fcomp
inc
sahf
mov
rcr
pslld
scas
dec
repnz
cmp
clc
adc
clc
push
jo
mov
rcr
test
frstor
or
in
outs
loop
jl
xchg
icebp
cmc
sahf
std
jmp
fwait
je
test
call
dec
jno
stos
and
pop
sbb
into
push
pop
pop
pop
push
push
pop
pop
push
jno
loop
imul
jns
jbe
aad
bound
scas
enter
sub
push
xor
retf
mov
in
les
pop
pop
lods
sub
or
mov
pop
retf
int
and
test
mov
mov
and
xor
inc
test
xlat
movs
cmp
sub
ss
cwde
repz
push
or
sub
sub
shl
std
sub
aam
ret
and
cld
icebp
icebp
rcr
rol
aaa
hlt
(bad)
out
mov
xor
pop
adc
addr16
sub
mov
clc
sar
mov
into
std
fwait
inc
test
mov
fist
enter
loope
jge
inc
or
mov
inc
inc
pushf
movs
popa
lea
(bad)
and
in
and
les
jbe
test
dec
je
and
inc
and
inc
and
inc
and
push
push
into
es
push
mov
cmp
fmul
lock
add
ret
sbb
sbb
sbb
pop
jnp
cmps
retf
fimul
sbb
mov
add
pop
js
cmp
mov
inc
mov
pop
outs
sbb
xchg
pop
xchg
arpl
mov
in
ror
retf
sub
mov
mov
xor
mov
shr
cmp
pop
push
in
cmp
mov
xchg
daa
pop
inc
mov
movs
push
mov
mul
adc
inc
jmp
xor
aaa
ja
test
cmp
fs
push
mov
dec
jbe
mov
(bad)
xchg
push
pop
retf
xchg
pop
inc
push
mov
popa
sub
cs
xor
repnz
mov
shl
dec
push
sar
(bad)
xchg
fidiv
jno
xchg
fldcw
(bad)
mov
lods
lds
xchg
jbe
test
test
(bad)
cli
clc
jb
ficomp
test
pop
xchg
xor
ror
push
push
push
xchg
xchg
into
mov
pop
in
scas
sub
adc
leave
mov
scas
sub
mov
test
xor
dec
imul
ins
mov
push
push
call
sbb
dec
inc
imul
mov
stc
inc
mov
mov
xchg
fcom
mov
in
test
sbb
push
sub
movs
jns
mov
test
imul
imul
pop
out
aad
pop
xchg
pop
xchg
pusha
test
xchg
pop
mov
and
ins
shl
(bad)
inc
hlt
imul
loopne
and
in
ret
xchg
mov
movs
mov
or
int3
push
jno
fs
sbb
loop
xor
jb
cwde
xor
xchg
xor
bound
ret
sbb
jb
mov
pop
add
push
jmp
inc
push
ret
in
inc
lea
aad
in
or
clc
sti
dec
sub
sub
in
xchg
fdiv
jmp
dec
add
aaa
shl
outs
push
je
movs
mov
jg
jge
push
stos
xor
push
ds
push
hlt
shl
pop
scas
ins
jae
movs
jg
mov
adc
ins
mov
xor
(bad)
cmp
sub
inc
(bad)
xchg
push
xchg
sub
rol
mov
jle
xor
mov
adc
aaa
jle
xor
icebp
cmp
xchg
fld
push
data16
inc
push
imul
pop
loop
sub
mov
dec
imul
les
xor
or
or
pop
push
pop
ins
xor
push
xchg
sbb
jo
sbb
xor
mov
push
and
xor
lock
pusha
sub
ds
jecxz
aaa
dec
adc
imul
mov
jge
fdivr
imul
scas
inc
cmp
scas
inc
cmp
scas
mov
mov
loopne
shl
cli
aaa
xor
loop
(bad)
and
adc
add
or
or
sub
cli
cmps
mov
loope
sub
adc
mov
lods
cmps
push
cld
xchg
push
lds
into
sbb
add
add
or
push
jb
jbe
xchg
loopne
lods
jno
inc
adc
jne
sbb
fdiv
or
inc
mov
ror
mov
out
int
scas
out
add
ret
(bad)
mov
je
mov
pushf
(bad)
cmps
push
sbb
fwait
daa
retf
pop
dec
push
inc
imul
mov
mov
sub
out
cmps
mov
cmc
adc
sbb
or
rcl
push
dec
out
pop
cli
pop
ins
les
jo
ins
pop
rol
sbb
outs
jp
mov
movd
in
sbb
lock
fld
dec
das
call
popf
in
xor
daa
inc
in
fld
lods
popf
pop
ja
push
pusha
jmp
sbb
sub
sti
mov
lods
cld
fild
sbb
adc
imul
push
sub
cmp
adc
jg
ja
sahf
dec
out
sub
jae
popf
jl
and
shl
pop
cmc
pop
call
mov
nop
sub
js
mov
aas
scas
push
shr
cmp
inc
cmps
mov
enter
aad
iret
pop
mov
clc
jb
push
jecxz
cmps
jne
stos
scas
sbb
jbe
shl
out
ud0
repz
fisttp
bound
mov
int
in
pusha
shl
adc
popf
(bad)
aad
js
(bad)
xchg
ja
lods
and
out
or
aaa
add
jne
stc
(bad)
pop
outs
cld
jo
in
push
cmp
stos
jne
pop
cmp
jle
add
fwait
add
mov
or
jmp
mov
xor
jmp
cmc
int
pop
in
(bad)
adc
jl
pop
sti
test
cmp
dec
ss
mov
div
shl
cli
mov
adc
cmps
enter
lea
in
inc
arpl
(bad)
(bad)
dec
xchg
ret
mov
sbb
pop
retf
out
mov
retf
(bad)
mov
mov
xlat
pop
mov
mov
cmp
aaa
ja
lods
stos
dec
pop
(bad)
jbe
adc
(bad)
das
xchg
fwait
hlt
int
fld
lahf
add
call
or
sub
xor
pop
inc
adc
rcr
fabs
add
add
add
outs
mov
push
cmp
mov
ror
test
pop
test
int3
jne
in
add
jb
add
enter
dec
cmp
div
sti
pop
cmp
or
shl
and
imul
and
cld
fwait
fwait
sbb
in
daa
dec
es
xchg
test
ja
or
shr
in
into
adc
jbe
pop
add
add
and
add
jo
jecxz
in
add
(bad)
loopne
repz
bound
inc
inc
cmp
dec
pop
jo
push
or
(bad)
aam
jg
inc
pop
shr
movs
sub
mov
jl
movs
pusha
lahf
pusha
addr16
adc
popa
push
push
pop
sti
or
psrld
cmp
js
ins
bnd
shl
or
cmp
or
sub
push
int
ja
test
aaa
scas
outs
stos
cmc
nop
xor
ja
mov
xor
sub
cmp
pop
test
push
call
pushf
ss
pusha
add
shl
add
shl
enter
ins
loop
fcomi
inc
stc
mov
adc
sub
pop
sub
outs
cli
out
or
sbb
outs
or
xchg
push
add
cmp
pop
repz
dec
push
pop
lds
cli
aaa
out
rep
ds
mov
repz
(bad)
xor
call
sub
sub
push
dec
lock
or
sub
mov
add
les
das
push
jne
pushf
mov
imul
aaa
mov
xchg
js
loope
xchg
pop
pushf
fild
out
inc
(bad)
repz
inc
xchg
xchg
mov
repnz
and
ins
lahf
call
sar
xchg
adc
cs
inc
in
das
fs
ds
test
push
sbb
inc
sub
mov
xchg
jne
(bad)
(bad)
in
(bad)
in
cld
lea
xchg
push
sar
sbb
aas
fnstcw
add
pop
ss
xlat
outs
push
stc
jl
mov
inc
push
add
push
cmp
(bad)
adc
pop
imul
sar
jl
push
push
jecxz
sahf
inc
push
mov
jle
sub
add
data16
(bad)
jbe
or
aaa
loope
ins
addr16
sub
mov
push
jl
fs
in
push
repnz
xlat
cld
out
xor
movs
shl
sbb
sbb
inc
adc
retf
bound
mov
jle
inc
ins
lock
add
out
mov
mov
xlat
mov
popf
adc
loopne
add
sbb
cmp
xor
fcomp
aas
inc
pop
adc
mov
fs
cmovo
das
lock
jg
mov
loope
mov
dec
add
outs
icebp
ss
(bad)
iret
das
or
jne
add
cmp
or
inc
outs
(bad)
jecxz
xor
enter
rcr
test
xchg
sub
xchg
scas
jg
lods
adc
movs
in
pop
jns
mov
aaa
cs
dec
arpl
icebp
mov
in
lds
aam
(bad)
lock
clc
push
and
popf
pop
nop
jbe
jo
sub
pop
f2xm1
or
inc
adc
pop
lea
out
enter
push
xchg
popf
ja
(bad)
cmp
jle
jb
dec
dec
push
xchg
cmp
adc
fsubr
test
loop
mov
cs
icebp
bound
xchg
adc
retf
xchg
sub
imul
out
cmp
jnp
dec
jo
out
sbb
xor
cld
inc
add
dec
ja
out
fld
ss
cmc
jp
dec
(bad)
(bad)
js
mov
in
fcom
movs
xchg
dec
or
int3
jle
test
fmul
pop
sbb
icebp
(bad)
sti
xchg
ins
popa
mov
std
je
fadd
das
push
jg
stc
xchg
(bad)
int
jle
xchg
cmps
lods
mov
outs
xlat
cmp
imul
sahf
jbe
aaa
hlt
push
rcr
in
sbb
jmp
mov
pop
ins
arpl
jge
inc
repnz
cmp
fxtract
data16
xlat
ds
inc
shr
mov
clc
bound
(bad)
inc
outs
das
inc
mov
sbb
inc
or
or
daa
adc
jns
(bad)
leave
iret
jl
repnz
inc
add
pop
in
arpl
in
repnz
sbb
sahf
sbb
iret
loopne
ret
call
ds
rcr
xchg
pop
icebp
and
jae
cs
pop
mov
mov
push
pop
maskmovq
not
imul
out
lahf
add
lds
shl
mov
push
mov
push
jmp
fisub
neg
pop
aad
ins
mov
pop
mov
repnz
in
jp
loopne
scas
std
jl
jne
mov
in
push
int
dec
(bad)
ins
push
and
jns
repnz
xchg
imul
jns
movs
cmp
lds
mov
cmps
mov
clc
int3
arpl
not
jmp
pop
or
(bad)
mov
retf
cs
cmc
(bad)
int
and
(bad)
and
ss
jns
repz
loop
das
push
sbb
ja
sahf
mov
jl
nop
(bad)
gs
lahf
push
(bad)
cmp
(bad)
popf
dec
sub
das
jmp
push
in
fst
repz
lods
mov
mov
sti
xchg
mov
jo
jecxz
test
adc
or
cwde
mov
paddw
jno
lds
rol
mov
das
pop
pop
pop
mov
iret
std
xor
rcr
jg
aad
fdiv
fs
sti
ss
retf
pop
cmp
rcl
ins
rol
daa
in
pushf
cmp
jmp
cmp
fwait
pop
je
imul
add
fdiv
fst
jmp
(bad)
jne
push
setp
jne
stos
inc
lds
ins
jge
test
ins
xor
daa
scas
cmp
popa
xchg
into
imul
sub
call
leave
cmc
jnp
iret
xchg
sbb
mov
mov
cdq
idiv
outs
in
hlt
fs
stc
push
mov
lods
sub
fdiv
leave
sbb
lahf
cs
stos
ficom
push
push
push
lahf
mov
mov
in
bnd
imul
ja
sub
loopne
daa
xlat
fistp
dec
cmp
fmul
jge
fcmovu
cwde
jnp
enter
repnz
xchg
xchg
pop
pop
sahf
stc
out
inc
mov
xchg
std
fwait
stos
mov
push
sahf
cmp
dec
leave
ror
jle
push
scas
lods
add
mov
and
repz
fcomp
push
pop
xchg
mov
not
cdq
xor
loopne
fimul
nop
adc
(bad)
sti
cdq
neg
jp
cmps
xlat
jge
jge
xor
jmp
in
xchg
out
iret
aad
xchg
jle
mov
imul
je
mov
scas
cmp
lock
ror
es
or
cmp
xor
mov
retf
popf
mov
loopne
pop
add
jle
push
fdiv
xchg
outs
cmps
loop
pop
mov
mov
mov
(bad)
sar
add
jl
sub
repz
out
stc
stc
mov
jmp
(bad)
stc
in
fldln2
pop
sub
aas
cs
or
push
mov
data16
lods
lahf
gs
outs
mov
test
lds
cmp
test
into
addr16
call
cmps
(bad)
jmp
mov
sti
mov
cmps
repnz
pop
aad
mov
(bad)
rcl
mov
mov
lods
cmc
mov
aas
js
cld
movs
das
cld
mov
sub
out
inc
in
xor
aas
and
retf
(bad)
cmp
pop
shl
fst
sbb
daa
int3
fist
xor
(bad)
es
mov
popf
push
cwde
je
fnsave
jns
push
std
loop
hlt
fmul
sbb
jne
push
push
pop
aas
shl
clc
mov
pop
push
push
jnp
xchg
jecxz
sbb
js
icebp
mov
pop
push
frstor
push
inc
sti
pop
fdivrp
mov
ja
cmp
std
cmps
imul
outs
sbb
je
fmul
xor
stos
pop
cld
mov
push
fisubr
sar
mov
jnp
pop
int3
icebp
jns
outs
jecxz
xchg
pop
dec
cli
dec
stc
out
outs
or
sbb
mov
imul
in
imul
mov
cmp
jecxz
pop
fwait
mov
movs
repnz
xlat
pop
cmp
jmp
jl
xor
pop
test
in
movs
outs
mov
loop
and
and
adc
mov
aas
jns
dec
ins
adc
imul
call
lods
std
das
(bad)
lock
lock
xchg
(bad)
in
in
arpl
aas
cmp
aad
jbe
nop
shl
cmps
fsubrp
fldl2t
cld
imul
clc
icebp
mov
push
dec
in
imul
jge
movs
mov
jg
retf
scas
or
or
in
mov
int3
(bad)
je
aam
lods
imul
clc
push
in
jle
mov
push
dec
pop
and
lods
pop
out
or
(bad)
cmp
call
(bad)
mov
mov
mov
push
js
dec
mov
and
jmp
out
fidiv
jp
aad
sti
inc
pop
dec
jmp
sub
lods
pop
daa
add
xchg
and
jmp
in
jb
inc
cmps
neg
arpl
shr
imul
clc
shr
ret
icebp
psubq
mov
mov
mov
std
jnp
jle
xor
ret
(bad)
mov
jge
(bad)
cmp
ficom
push
sar
mov
fwait
push
pop
clc
jbe
lods
jg
not
mov
pop
adc
call
(bad)
not
cld
push
sti
lahf
jle
test
pop
xor
(bad)
sar
cli
push
divps
repz
clc
mov
jge
xchg
mov
fnstsw
jns
mov
pushf
mov
popf
push
icebp
in
mov
div
inc
push
xlat
sbb
retf
repnz
ret
mov
jmp
repnz
mov
jnp
or
pushf
ret
scas
push
jg
out
jg
into
lahf
xor
mov
fcmovnbe
ret
shr
pop
xor
mov
sub
repz
xor
inc
arpl
pushf
out
mov
mov
push
cmp
stos
mov
mov
fild
ds
ds
call
xchg
mov
cmp
jae
sbb
call
mov
jg
jno
out
add
adc
mov
cld
pop
sub
dec
inc
repnz
jmp
jmp
dec
fdiv
icebp
jns
lods
pop
scas
out
hlt
or
arpl
imul
das
adc
test
movs
(bad)
retf
jne
aas
pop
dec
outs
std
mov
lods
mov
into
cld
addr16
rcr
rcr
and
aas
test
frstor
mov
cmp
ficom
jae
push
std
inc
inc
les
mov
in
xor
push
push
pushf
cmp
clc
in
ficom
pop
pop
in
shr
in
lahf
lahf
cmp
outs
ret
test
stos
mov
pop
cmp
jecxz
sbb
sar
jmp
addr16
int3
dec
dec
in
fidivr
and
std
or
inc
lods
mov
mov
mov
jno
mul
xor
aam
sub
sbb
movs
mov
shr
in
(bad)
mov
ficom
mov
cmc
loop
mov
clc
jecxz
add
mov
pop
inc
jnp
lahf
pop
mov
(bad)
mov
push
cs
fdivr
stos
inc
mov
xchg
popf
xchg
xchg
adc
cmp
stc
adc
pop
out
mov
shl
push
mov
(bad)
add
mov
lds
pop
pop
dec
repz
stos
ds
(bad)
pop
cmc
mov
xlat
(bad)
repz
mov
repz
je
mov
dec
fist
pop
mov
iret
movs
pop
out
sub
mov
mov
fcmovbe
sub
xlat
cmp
mov
aad
jbe
jmp
loopne
xor
xlat
jne
ss
(bad)
mov
inc
out
out
fstp
rcl
jnp
popf
cmp
cmps
push
out
mov
push
jg
mov
fcomip
sbb
fcomp
pop
jbe
idiv
lea
add
cmp
out
pop
inc
xchg
(bad)
dec
jnp
pop
cmc
(bad)
cmp
dec
sti
loop
jl
out
dec
pop
xchg
outs
pop
cmp
sbb
out
lahf
jae
cld
in
stos
test
leave
fmul
pop
mov
(bad)
stos
(bad)
fidivr
in
mov
mov
jo
jne
in
aas
jge
jne
out
stc
mov
push
push
cmp
mov
addr16
in
xchg
mov
in
ficomp
popf
cmp
addr16
in
mov
(bad)
and
lahf
pop
mov
les
outs
(bad)
cli
sar
repz
dec
pop
stc
xor
rol
lods
sti
jmp
setle
cld
lock
fcom
cmp
mov
jmp
js
jmp
(bad)
out
sbb
retf
ret
fnsave
scas
scas
or
pop
sbb
adc
iret
out
shl
aas
jb
pop
lds
das
out
cmp
int
pop
outs
fisub
inc
inc
jbe
outs
aam
dec
dec
lea
mov
cmc
jne
ja
jl
loope
nop
lea
dec
rcl
scas
fbstp
lahf
lea
fnstsw
mov
fdivr
xor
or
jle
inc
daa
pushf
cli
push
(bad)
aas
mov
cmps
mov
frstor
cli
mov
(bad)
std
adc
jp
jl
outs
ror
adc
das
jl
xor
cmc
sahf
icebp
sbb
xchg
xor
(bad)
sbb
pop
(bad)
jns
rol
xchg
xchg
addr16
retf
mov
shl
cmp
mov
xchg
xchg
pop
jle
aam
loop
sub
fst
movs
push
gs
sub
fisubr
fnstcw
mov
pop
fst
pop
retf
mov
out
mov
jbe
lock
fidivr
je
ss
out
sub
xlat
icebp
ret
mov
jne
(bad)
sbb
cmp
mov
xor
cli
inc
fwait
(bad)
mov
clc
in
call
shl
in
cld
aaa
aas
int
cli
lods
iret
mov
cdq
cmp
pop
mov
jl
std
adc
mov
xchg
iret
mov
inc
pop
outs
(bad)
jmp
add
jge
aad
push
xlat
daa
add
repz
pop
adc
out
outs
pop
sbb
std
sub
into
loopne
aas
sbb
ja
mov
pop
mov
idiv
inc
xor
pop
popf
jno
xchg
out
outs
push
push
out
dec
mov
inc
call
mov
cmp
jmp
ficomp
arpl
out
cwde
jle
pop
cmc
mov
push
mov
ss
sbb
sbb
lods
into
aad
xchg
loop
bound
aas
aam
push
cmp
scas
retf
rcr
popf
inc
in
scas
sub
jns
outs
iret
popf
ja
mov
test
hlt
and
ins
pop
mov
lods
es
(bad)
call
cli
leave
mov
cmp
fbld
push
sahf
mov
or
rol
cmps
pop
out
clc
cli
sar
imul
sbb
push
stos
retf
shl
mov
aam
xor
cmp
test
out
and
(bad)
(bad)
xchg
sub
mov
std
loop
cmc
xor
jae
push
cmp
(bad)
and
out
shl
and
fcos
inc
frstor
aas
mov
scas
out
fstp
rcr
cli
movs
inc
sahf
arpl
shl
shl
push
ins
in
stos
pop
cld
repz
cmps
ins
dec
stc
call
cdq
cmc
xor
imul
out
mov
stos
addr16
jmp
cmp
or
xchg
mov
mov
jae
jmp
repz
enter
cli
mov
fwait
out
ficom
repz
stc
pop
jge
in
mov
sti
imul
cs
mov
jmp
xchg
stc
rol
fistp
in
shl
xchg
iret
pop
fdiv
js
(bad)
and
lds
out
cli
jb
mov
aas
enter
xchg
std
sub
xor
js
outs
pop
scas
mov
pop
jg
repnz
shl
jle
(bad)
(bad)
cmp
sbb
jle
xor
push
push
(bad)
lea
std
int
out
pop
push
(bad)
movs
sub
je
xor
sbb
pop
cmp
mov
out
mov
jle
sar
pop
push
int
ja
aad
mov
iret
fistp
test
adc
daa
inc
mov
rcl
cmps
inc
lea
repnz
(bad)
push
xor
out
icebp
(bad)
jb
mov
int3
retf
sti
jp
fldcw
mov
push
cmp
sti
mov
dec
mov
jmp
setl
sahf
mov
out
ret
xchg
ret
cs
jp
leave
mov
jmp
(bad)
loop
jge
jne
jge
dec
int3
(bad)
pop
retf
cmp
leave
sub
in
pop
xor
cdq
mov
jbe
fwait
pop
out
fsubrp
stos
stc
gs
cmps
add
jle
in
loop
arpl
pop
cmp
in
dec
cmc
leave
jb
jmp
jae
lahf
cmp
mov
cmc
mov
aas
fcomp
cmps
shl
cmps
jp
cmp
lods
jae
and
mov
cmp
bsf
cmc
xchg
popa
mov
out
and
call
cmc
jnp
hlt
or
sbb
adc
(bad)
mov
mov
fdivr
push
mov
jg
jle
mov
outs
retf
mov
xchg
jge
or
popf
(bad)
jl
xor
fidivr
jo
mov
pop
fcom
clc
pushf
mov
sbb
lock
dec
into
mov
aad
dec
jl
mov
sbb
aas
and
out
jg
mov
neg
xor
in
xchg
ds
test
mov
dec
mov
mul
add
movs
sub
(bad)
in
jp
call
lds
xchg
push
xchg
pop
into
das
fwait
pusha
call
lds
fistp
cmp
out
shl
xchg
dec
mov
sub
shl
repz
jbe
out
mov
mov
ds
(bad)
scas
cs
jae
out
popf
std
(bad)
out
int3
cwde
lds
pop
or
in
or
sti
jmp
call
sbb
jecxz
sbb
fbld
pop
(bad)
in
scas
inc
cmp
mov
cdq
xchg
push
pop
mov
addr16
iret
mov
iret
dec
stc
popa
ror
push
mov
fwait
xchg
cli
stc
test
xchg
fcom
ret
popf
jge
mov
icebp
xchg
repz
mov
pop
pop
mov
dec
mov
mov
mov
xchg
out
retf
mov
pop
ss
shr
aas
lods
mov
out
adc
ins
cli
stc
fdivr
sbb
cli
(bad)
loopne
pop
stc
dec
test
imul
ss
out
out
imul
bswap
int3
push
iret
jle
mov
rcl
movs
clflush
mov
cmp
cmp
ins
scas
mov
mov
neg
bound
cld
sti
adc
out
sti
out
addr16
xlat
pop
cmc
addr16
dec
sbb
das
aas
pop
cmc
jecxz
retf
scas
sbb
mov
mov
cmp
jmp
(bad)
ins
or
push
pushf
lahf
fist
xlat
or
xor
fdivr
push
mov
jmp
fidiv
shl
int
retf
mov
jp
aam
cli
dec
(bad)
cmc
shr
jne
push
int
idiv
xor
sub
sub
outs
nop
outs
push
push
loop
jo
outs
adc
add
out
out
xchg
xchg
adc
sbb
jmp
cmp
mov
iret
sti
(bad)
sti
jns
imul
(bad)
lods
pop
xor
int3
mov
push
adc
and
sti
call
xchg
push
(bad)
shl
mov
jnp
imul
out
xor
aas
xchg
fmul
hlt
idiv
pop
cmp
movs
or
test
or
cmps
sbb
jle
xor
adc
out
outs
jns
js
mov
and
in
shl
rcl
and
aad
retf
mov
dec
movs
pop
fisttp
repnz
lahf
addr16
jne
int3
and
dec
clc
hlt
inc
mov
stc
arpl
iret
lods
jns
add
jle
call
out
pop
lds
sub
in
iret
fnsave
jl
mov
push
shl
test
dec
jge
std
fdiv
inc
xchg
fild
(bad)
mov
in
cmp
jb
mov
inc
jg
push
fnstenv
jge
stos
outs
cwde
dec
(bad)
fdivr
rcr
mov
push
lods
les
jmp
pop
out
pop
xchg
xor
(bad)
lock
test
xchg
dec
aaa
retf
stos
imul
ret
fistp
adc
sub
hlt
pop
push
mov
sar
retf
sub
mov
repnz
(bad)
xlat
sbb
dec
or
or
repz
mov
mov
retf
mov
mov
ret
and
enter
ret
mov
pop
pop
pop
mov
mov
push
(bad)
into
xor
ja
fdiv
and
lds
mov
pushf
mov
jno
fdiv
mov
mov
mov
leave
push
dec
push
mov
icebp
iret
push
dec
jle
or
iret
pop
popa
shl
and
inc
addr16
push
mov
out
frstor
je
test
std
cmp
or
movs
fisubr
outs
sbb
repz
popa
pop
inc
popa
mov
int3
jno
pop
sub
(bad)
and
xchg
inc
sbb
std
adc
je
in
movs
repz
jb
cmps
cmc
loopne
hlt
movs
jl
rcr
sar
mov
test
fwait
sbb
(bad)
(bad)
adc
cmp
or
into
push
pushf
je
aad
push
dec
cmp
(bad)
fnstcw
sub
xchg
cmp
and
repz
or
push
dec
movs
cmp
pop
retf
ret
jecxz
jp
mov
mov
lods
jp
aas
xor
cmp
mov
(bad)
pop
popa
cmps
mov
xchg
std
in
pop
das
dec
pop
iret
imul
inc
fild
std
sti
ret
shr
lahf
xor
cmp
pop
xchg
push
ss
imul
sbb
and
jae
push
ins
scas
mov
outs
sub
push
jp
jge
jp
stos
mov
pop
mov
jecxz
mov
pop
stc
jmp
jbe
push
jb
hlt
add
push
push
inc
cdq
test
ins
xor
iret
jmp
and
mov
xchg
in
scas
fisub
pop
sbb
pop
xchg
mov
loopne
rol
rol
push
out
lds
mov
mov
jne
mov
out
adc
adc
inc
fstp
inc
mov
scas
call
stc
out
fs
dec
arpl
test
pop
mov
mov
jmp
jmp
js
and
pop
pop
mov
aaa
mov
mov
div
fwait
add
(bad)
call
push
cmp
xor
pop
pop
jmp
xchg
out
mov
adc
popf
out
ins
out
popf
rcr
or
test
lods
mov
stos
fldenv
(bad)
push
(bad)
dec
fnstenv
push
mov
pop
push
xor
ret
xor
xchg
bound
mov
jp
mov
dec
sub
adc
or
dec
fdivr
xor
popa
pop
jns
mov
lods
lahf
and
out
pop
jae
jno
sub
xor
bound
das
jmp
into
add
lods
pop
add
cli
out
js
aaa
movs
push
int3
or
repnz
sub
ret
push
pop
push
enter
ret
jl
jge
sbb
mov
neg
sti
sub
adc
retf
ss
xchg
cwde
aaa
push
jns
hlt
mov
ret
push
int3
mov
int3
dec
jl
ds
and
jbe
jl
jp
pop
or
fmul
icebp
inc
cmp
(bad)
fsub
int3
xor
and
adc
sbb
push
fmul
ret
fmul
(bad)
pop
inc
clc
xchg
std
inc
fpatan
mov
inc
leave
in
pop
cmps
push
push
in
push
inc
dec
pop
jecxz
jg
fsubr
in
mov
fs
or
or
mov
aaa
adc
dec
xchg
ret
add
nop
cmp
call
dec
out
and
or
imul
in
addr16
sbb
enter
fdivrp
les
fbld
cli
enter
ins
mov
sub
xor
cmp
or
hlt
repz
add
mov
rol
test
xchg
add
pop
xchg
test
jns
xchg
data16
movd
mov
cmp
pushf
in
aaa
xor
mov
mov
enter
jl
ficom
imul
xor
iret
xlat
mov
cmp
(bad)
out
pop
bnd
mov
sbb
dec
pop
pop
repnz
push
xor
call
outs
in
and
inc
inc
mov
sub
das
mov
xchg
cmps
mov
push
stos
lods
sbb
inc
jmp
xchg
jne
outs
(bad)
in
sub
xchg
std
and
xlat
fcmovne
mov
jne
cdq
mov
(bad)
in
xchg
xchg
xchg
pop
aas
pop
pop
mov
icebp
(bad)
lods
mov
in
dec
aad
scas
dec
popa
sub
xchg
cld
xchg
enter
scas
push
(bad)
out
sub
jo
dec
(bad)
icebp
les
inc
and
call
mov
leave
adc
jb
js
enter
adc
xor
jne
pop
stos
jg
in
pop
cmp
mov
int3
mov
popf
ficomp
push
inc
push
gs
(bad)
in
jmp
xchg
mov
dec
or
mov
or
in
lods
xchg
jg
dec
jbe
mov
mov
sbb
lods
jmp
dec
pusha
out
pop
jae
test
cwde
lea
xchg
add
jp
std
aad
int3
push
test
(bad)
cmps
jo
xchg
xor
scas
imul
hlt
and
cdq
sub
fisub
lods
shl
mov
fwait
jmp
adc
xchg
jo
test
sbb
popf
pop
daa
out
push
pop
cmp
push
dec
cs
xchg
ret
inc
dec
sub
loopne
(bad)
out
loope
jae
dec
mov
out
xor
xchg
lods
mov
push
dec
mov
push
inc
dec
jo
inc
retf
inc
lods
data16
pop
xlat
mov
cli
xchg
es
repz
xlat
sub
or
mov
or
jne
aas
sbb
xchg
pop
xor
(bad)
es
jne
sub
jge
pop
cli
dec
mov
test
mov
test
jns
dec
lods
ror
into
adc
shl
cmp
cmp
jg
ds
loope
outs
push
fwait
jge
test
xor
or
pop
bound
xlat
js
cmp
mov
ins
lods
cmps
fcompp
or
lahf
push
mov
addr16
(bad)
xor
aam
xor
test
mov
xor
cmp
stos
pop
out
retf
adc
scas
out
xchg
mov
test
xor
mov
std
(bad)
arpl
jae
cmp
fs
pop
xchg
les
call
add
stos
or
loope
or
and
imul
rcl
lods
sbb
xchg
inc
jge
ss
mov
into
(bad)
out
das
jecxz
mov
mov
mov
pop
xor
xchg
jae
jmp
xor
shr
out
cmp
mov
stc
xor
aaa
aas
(bad)
rol
retf
mov
push
xchg
xor
je
and
js
mov
ror
push
pop
pop
fild
(bad)
or
out
jl
shr
xchg
sahf
call
daa
mov
sti
ficomp
pop
pop
test
jecxz
dec
pop
into
test
push
jmp
das
mov
push
fucomip
movs
cmp
icebp
mov
test
cmp
in
cdq
mov
and
adc
enter
jmp
imul
es
mov
ds
nop
adc
mov
ficom
cmp
js
jp
retf
cmps
stos
lock
popf
pop
mov
scas
loop
adc
cs
xlat
and
test
aad
dec
dec
mov
in
and
call
xlat
stc
pop
jmp
movs
test
(bad)
xor
iret
and
addr16
pop
data16
lds
fnstcw
sbb
imul
mov
cld
js
add
push
mov
sub
adc
cmp
and
movs
adc
sub
ret
jb
inc
popa
cmc
sub
push
dec
inc
mov
lds
shl
dec
daa
out
fld
and
je
xchg
dec
data16
mov
test
inc
xchg
(bad)
pop
push
ror
push
mov
sub
cmps
adc
ja
push
cmp
adc
sbb
ins
outs
repz
cld
mov
fnstenv
xchg
out
cmp
adc
sbb
pop
pop
mov
popf
jmp
cmp
jo
sbb
js
sub
sahf
push
mov
test
adc
sub
ret
cmp
repnz
add
cmp
stos
pop
retf
or
dec
push
mov
scas
push
cmp
(bad)
pop
push
mov
popf
pop
push
mov
cmp
out
jne
pop
test
ja
jno
xchg
in
push
popa
push
test
retf
daa
add
retf
sbb
sbb
push
dec
sbb
rcr
mov
shl
fsub
(bad)
in
stc
xor
push
int
(bad)
and
jl
cs
pop
pop
mov
hlt
inc
xor
popa
out
out
fwait
inc
stos
ins
inc
scas
jnp
mov
out
dec
add
jae
mov
mov
or
inc
enter
inc
repnz
add
je
mov
daa
movs
mov
aam
cmc
inc
into
xor
mov
sbb
sar
hlt
pop
in
jbe
mov
movs
test
pop
xchg
paddsb
js
mov
stos
inc
adc
push
cmp
shl
sub
shl
aam
jbe
xlat
jg
fistp
push
cmp
xchg
loope
cmps
inc
(bad)
int
jne
outs
or
mov
xchg
push
out
xchg
loop
(bad)
mov
jno
sub
xchg
ins
mov
pop
and
or
iret
xchg
sahf
sub
push
and
jnp
inc
mov
(bad)
pop
test
lods
xchg
sbb
fst
inc
cmp
jmp
pop
inc
cmp
xlat
cdq
dec
xor
jnp
fist
lods
mov
ror
xlat
adc
out
leave
leave
jo
call
aad
clc
repz
stos
(bad)
hlt
popf
sub
rol
pop
pop
retf
leave
icebp
mov
pop
sub
repnz
cli
sub
or
icebp
out
addr16
dec
int3
int3
xchg
fstp
jbe
sahf
js
mov
cli
test
sahf
js
sbb
lods
xor
sub
mov
jecxz
inc
bound
(bad)
out
cmovns
ret
xchg
scas
lods
mov
push
push
mov
jp
add
ret
(bad)
out
rcr
lock
test
and
adc
add
rol
mov
stc
retf
ror
(bad)
sbb
fwait
mov
stos
mov
iret
push
loope
(bad)
int3
inc
addr16
js
pop
adc
rcl
cmp
jae
jae
jge
push
dec
cdq
nop
lahf
sti
lods
jbe
mov
xor
push
in
mov
mov
inc
ret
rcr
dec
mov
dec
push
jl
cli
xor
in
push
movs
lahf
cli
mov
dec
hlt
js
mov
mov
xchg
dec
jno
nop
sti
ins
sub
out
ss
inc
add
pop
sti
ror
dec
ret
in
lea
in
xor
(bad)
push
mov
ins
mov
push
dec
mov
hlt
cmp
xor
cmp
mov
mov
jecxz
inc
cdq
out
xor
ss
imul
loope
mov
int3
mov
sub
sub
shl
dec
cmp
mov
sar
adc
inc
and
pop
push
dec
stc
jg
in
addr16
mov
rol
adc
stc
adc
mov
jb
mov
cmp
xchg
fcomp
popa
(bad)
adc
test
loope
leave
adc
sub
frstor
cmp
cmps
divps
push
popf
mov
add
retf
xor
loop
mov
fidiv
in
fnstcw
pop
repnz
fdivr
push
jae
mov
dec
lahf
cwde
ret
jno
cld
(bad)
pop
inc
xchg
or
scas
dec
aad
dec
sbb
leave
mov
push
fcmovnu
mov
sbb
add
into
push
sub
aas
jb
imul
push
ret
lahf
lds
(bad)
aam
pop
(bad)
mov
scas
das
fisub
test
stos
pop
cmp
enter
pop
inc
lds
mov
bound
cmps
repz
mov
dec
cmp
loope
mov
inc
mov
push
clc
scas
dec
out
pusha
pop
jno
adc
call
arpl
dec
nop
jns
aaa
mov
lea
aaa
sbb
in
cmp
lds
dec
call
test
ins
shl
shl
mov
xchg
fwait
sub
out
cmp
call
adc
repz
mov
lahf
aam
jg
mov
out
in
mov
jl
dec
sbb
sub
imul
push
cmps
sub
stos
push
std
cs
sub
test
popa
lods
fcmovb
inc
retf
iret
push
sbb
jbe
hlt
push
fistp
(bad)
fidivr
sbb
jle
out
(bad)
ret
xor
push
push
rcl
test
mov
sti
xchg
xchg
ins
mov
into
xchg
test
mov
mov
mov
std
bound
sub
mov
in
retf
(bad)
out
xlat
fwait
mov
mov
out
aaa
jecxz
sbb
(bad)
inc
jge
jecxz
jb
out
xor
xor
out
inc
ror
xchg
(bad)
jmp
jmp
adc
xchg
shl
out
xor
imul
es
xchg
xchg
push
shl
cmp
dec
das
mov
xor
and
popa
mov
sub
ret
and
jb
xchg
sbb
out
frstor
stos
loopne
(bad)
or
imul
ror
pop
movzx
lahf
jmp
jb
movs
jne
pop
cmp
jmp
fild
arpl
aam
xchg
pop
adc
xor
jns
out
add
ins
stc
movs
inc
add
sar
sbb
cmp
pop
adc
pop
jecxz
repz
mov
mov
movs
sar
retf
dec
jg
sub
into
push
xor
dec
in
mov
push
mov
xor
mov
mov
add
jg
retf
clc
hlt
mov
push
aam
sti
fstp
test
push
(bad)
dec
inc
xchg
or
sbb
cdq
cmp
push
ror
push
sub
jmp
out
cmc
sub
xchg
retf
lea
dec
sti
xchg
cmp
sbb
sar
int3
xor
lods
ja
imul
mov
sbb
push
into
cdq
call
push
out
mov
jle
dec
jg
sahf
and
in
dec
push
fnstsw
or
xchg
cmp
pop
ins
ret
bound
jmp
xor
in
push
dec
lods
mov
(bad)
push
jge
and
repz
jb
clc
adc
(bad)
retf
cmps
in
or
movs
icebp
popa
ret
les
push
fwait
pusha
ret
outs
scas
mov
js
int3
push
mov
fisubr
xchg
loop
data16
inc
(bad)
sbb
ss
(bad)
sbb
ss
sbb
mov
std
retf
icebp
sub
xchg
clc
or
es
mov
pop
(bad)
xchg
aam
retf
mov
std
adc
dec
pop
push
xor
aas
je
dec
das
pop
fcmove
icebp
add
fwait
jns
bound
jb
pop
mov
fwait
out
pop
fbld
push
fisub
jae
or
cdq
mov
pop
jae
ret
fwait
out
push
dec
(bad)
not
sahf
aam
jb
repz
pop
sbb
enter
stos
xchg
retf
dec
fidivr
pusha
xchg
push
and
push
out
(bad)
push
stos
cmps
xchg
shr
mov
js
and
(bad)
push
cli
push
mov
mov
retf
std
in
and
je
cmps
dec
fild
fcmovu
mov
dec
shr
das
js
stos
pusha
int3
jmp
dec
shr
mov
dec
pop
pop
int
loop
popa
into
dec
cmp
sbb
push
or
xchg
inc
dec
add
pop
ins
not
mov
repnz
dec
push
inc
or
or
(bad)
xchg
jo
into
repz
jmp
inc
mov
and
mov
outs
imul
stos
popa
loopne
data16
sub
ins
test
sub
out
retf
shr
sub
sahf
inc
scas
xor
push
push
cmp
jecxz
fs
into
jmp
jae
sbb
hlt
push
jne
jb
xchg
jmp
jp
inc
jl
cmc
mov
loopne
xchg
xchg
aad
fdivr
or
dec
pop
ds
sub
fisttp
mov
push
or
outs
pop
leave
adc
mov
bound
jmp
mov
enter
cs
and
retf
lds
xor
xchg
sbb
and
xchg
pop
test
adc
mov
out
lea
xchg
jbe
les
add
add
test
add
arpl
cmc
stos
in
mov
mov
push
(bad)
fs
into
adc
in
ins
jmp
pop
ds
push
pushf
xchg
and
rep
xchg
cmp
jo
dec
dec
stos
movs
shr
std
(bad)
ret
jo
jmp
pop
push
movs
jne
fs
xlat
jecxz
loopne
arpl
imul
or
aaa
mov
pop
or
das
pop
int
cwde
aad
icebp
mov
sub
and
les
jno
stos
mov
mov
daa
cwde
dec
shr
push
xlat
mov
sti
mov
outs
fimul
xchg
dec
out
cld
shl
int3
ror
ins
out
lahf
fld
xchg
fsubr
mov
pop
cmps
into
pop
retf
in
and
mov
push
in
mov
push
into
aas
xor
push
pop
(bad)
fwait
inc
lods
push
mov
jbe
sbb
retf
add
fidiv
cs
jmp
cld
clc
jmp
test
retf
sub
sbb
jmp
mov
jp
jge
mov
xor
imul
adc
add
adc
mov
cmc
dec
cmp
into
cmp
jb
loopne
add
xchg
dec
shr
(bad)
test
pop
sub
pop
cmp
pop
pop
and
xlat
jp
test
xchg
dec
sub
loop
and
shl
sub
push
xor
xchg
loopne
jmp
fistp
data16
pop
(bad)
lock
mov
std
mov
ins
std
rol
retf
cli
mov
push
xchg
jmp
stos
or
aam
mov
or
addr16
jnp
scas
scas
les
add
pushf
dec
loop
xchg
pop
add
ja
aaa
fild
ret
jmp
mov
mov
xor
aaa
lea
adc
inc
pop
cli
sbb
sbb
ins
xor
in
jbe
pop
(bad)
pop
jnp
mov
lahf
loop
mov
enter
jns
aas
xchg
cs
jmp
loop
out
out
push
xchg
xor
ds
leave
es
sub
push
les
call
ficom
cmp
pushf
sbb
sar
into
cdq
xor
cmp
inc
inc
loope
(bad)
jle
add
sbb
push
xchg
push
xchg
jno
jnp
mov
pop
mov
dec
inc
inc
and
mov
sub
xlat
push
mov
sub
jb
ds
cmp
push
ins
popa
movs
and
or
fidiv
push
cmc
mov
je
ret
and
add
mov
cmp
or
icebp
test
adc
pop
sub
xor
test
dec
sub
mov
adc
fdiv
mov
fdivr
scas
repnz
adc
xchg
xchg
xchg
sub
jnp
iret
es
repnz
jmp
and
(bad)
in
mov
into
mov
arpl
and
cli
xor
frstor
enter
out
ds
fwait
scas
(bad)
cmps
jb
pop
sti
leave
pop
pusha
xor
(bad)
lds
jg
sbb
adc
cmc
cdq
push
ins
(bad)
mov
data16
setle
adc
mov
repz
dec
movs
aad
fisubr
xchg
lock
mov
jmp
dec
repnz
cmp
fist
cmp
(bad)
imul
scas
mov
ins
sub
lods
and
lock
xchg
inc
ret
push
xchg
sar
mov
sahf
cmp
xchg
xcrypt-cbc
cmps
push
into
jle
retf
or
clc
sbb
les
jno
and
adc
pop
jp
ror
outs
push
das
mov
push
inc
test
dec
add
dec
ins
int3
fisttp
or
sub
sbb
xchg
dec
lea
out
out
ins
mov
pop
ja
mov
push
fadd
cmc
aas
or
stos
and
test
or
ret
jge
pop
out
mov
pop
test
mov
aaa
std
les
push
in
fwait
mov
cld
iret
sub
dec
hlt
sbb
push
or
inc
adc
js
lock
(bad)
je
mov
loope
push
dec
movs
fwait
aam
jmp
out
inc
push
cli
fadd
mov
lea
shr
add
std
outs
jp
icebp
(bad)
out
cmp
push
shl
cmps
ficom
push
movs
fst
sbb
push
mov
push
push
add
imul
mov
push
xor
ins
xchg
jg
cs
int3
aas
sar
jmp
mov
in
jb
xchg
cmc
inc
sti
rol
lds
inc
push
loope
lea
jl
and
int
sub
lods
arpl
xchg
sub
xchg
or
sub
xlat
(bad)
mov
out
int3
in
push
mov
and
push
xchg
out
test
sub
es
xchg
adc
les
dec
and
hlt
dec
ins
(bad)
aad
int
pop
dec
cmp
xchg
out
mov
mov
mov
sub
push
dec
xchg
jmp
call
or
(bad)
shl
ror
mov
inc
mov
pop
mov
mov
in
imul
mov
cmp
jmp
sbb
lahf
mov
pop
cli
dec
sbb
gs
mov
sub
call
xor
lods
sub
lea
cmp
in
cmp
test
push
sub
xchg
and
or
dec
sub
inc
or
cdq
popa
dec
mov
sar
pop
jg
jns
cmps
lds
adc
push
mov
pushf
xchg
sub
add
lods
mov
cmp
cmp
ins
inc
mov
movs
xchg
call
mov
jmp
cmps
shl
dec
sar
push
outs
fstp
sti
xor
loop
mov
jno
in
xor
and
lods
inc
dec
jmp
test
bound
xor
cmc
jo
or
maxps
test
dec
adc
ins
(bad)
xchg
scas
inc
loop
cmps
scas
int3
add
mov
jns
lods
xchg
inc
scas
inc
movs
div
sbb
xchg
and
jmp
popf
sbb
or
shl
cmp
sbb
or
ret
mov
(bad)
xchg
ss
test
lahf
add
aam
add
xchg
jp
lock
cmp
leavew
lods
stos
loope
mov
in
test
pop
fldenv
imul
or
jecxz
or
leave
neg
cmp
and
stos
or
push
imul
fcmovnu
fldcw
stos
inc
dec
mov
pop
in
jns
lods
mov
mov
xor
in
(bad)
fwait
not
jae
mov
add
adc
pop
sub
push
xchg
mov
push
adc
shr
jb
dec
sbb
mov
test
addr16
or
mov
ret
in
in
pop
pop
mov
sub
fcomp
xchg
mov
push
dec
lahf
addr16
push
jb
mov
icebp
mov
inc
cmp
les
gs
xor
ins
add
lods
retf
push
movs
hlt
pop
stc
cmp
sbb
je
pop
cwde
int3
stc
mov
push
popf
adc
outs
jmp
xor
mov
adc
dec
outs
ret
(bad)
arpl
icebp
jmp
jmp
(bad)
cmp
mov
popa
fnstcw
icebp
(bad)
sub
outs
jmp
mov
cmc
dec
sub
push
dec
in
xchg
jl
mov
push
in
jns
dec
dec
inc
xor
mov
imul
cmp
fidiv
mov
ja
mov
and
push
dec
adc
fstp
ficom
stos
pushf
mov
call
test
xor
cmp
dec
mov
xor
ds
scas
pop
pop
and
mov
ret
mov
mov
dec
out
test
ins
and
aad
pop
push
or
stc
mov
or
mov
push
enter
ss
fwait
ds
int
inc
pop
cmp
loope
sbb
enter
jp
fadd
xor
shr
cld
mov
cld
xchg
(bad)
aas
jg
retf
dec
stc
or
inc
adc
mov
inc
xchg
pause
aas
adc
in
cmp
sub
ds
nop
cmps
hlt
mov
dec
sub
mov
lock
adc
movs
lods
and
clc
icebp
clc
sbb
in
cmps
out
dec
mov
pop
bnd
mov
mov
in
gs
push
imul
mov
in
push
loop
out
idiv
pushw
ins
or
xchg
imul
test
push
xor
jge
imul
cmp
or
or
sahf
ficomp
pop
jle
sub
fstp
xor
cmp
cdq
or
imul
leave
les
cmp
shl
dec
mov
es
mov
(bad)
neg
and
fstp
and
iret
fst
and
stc
ins
sub
xchg
pop
scas
hlt
hlt
enter
adc
adc
sub
jbe
retf
clc
out
jns
and
jge
pop
outs
cmp
movs
hlt
sbb
outs
mov
ret
add
dec
mov
cmp
lds
adc
adc
push
push
out
fld
jno
pop
repz
cld
popf
mov
mov
and
repnz
repnz
mov
mov
pop
(bad)
jl
mov
in
aaa
mov
mov
mov
(bad)
jae
int
mov
sti
sub
mov
fs
arpl
addr16
movs
adc
out
lock
lods
pop
in
test
sub
cmc
rcr
call
pop
test
idiv
pop
nop
sub
mov
lods
push
cdq
mov
in
cmc
pop
xor
mov
and
(bad)
lock
fs
popf
mov
inc
adc
jnp
jno
or
call
das
out
xor
and
and
or
into
addr16
js
sahf
mov
ss
icebp
loop
and
jno
push
jne
dec
std
imul
inc
and
enter
dec
xchg
jle
pop
bound
mov
adc
jb
mov
retf
sub
push
add
ds
popf
sub
ror
retf
lods
mov
pop
pusha
pop
pop
addr16
lea
jmp
mov
fwait
jbe
in
lods
dec
pop
test
daa
xor
inc
js
loop
cmp
(bad)
pop
lock
cs
dec
sub
cld
push
movs
int3
lds
or
cmp
add
mov
sbb
cli
call
iret
dec
mov
mov
scas
jl
adc
push
dec
int3
pop
adc
int
xchg
mov
popa
iret
mov
xchg
xchg
mov
test
or
xchg
sub
or
leave
or
mov
popf
xlat
fucomip
aam
and
dec
sub
and
pop
dec
dec
jle
pushf
sbb
sahf
out
mov
stc
lods
mov
retf
mov
mov
or
jp
pushf
sti
in
test
js
push
mov
enter
jb
int
imul
(bad)
fnstcw
sbb
dec
jae
pusha
jns
ja
fist
iret
inc
sbb
les
popf
pop
popa
ficom
pop
daa
jecxz
pusha
fist
sub
jb
cmp
push
jmp
adc
fcomp
pop
cmps
das
fwait
cmp
pop
mov
popa
mov
stc
lds
int
xlat
inc
(bad)
pop
sub
pop
xor
repz
neg
or
add
sub
add
std
xchg
imul
aad
fdivrp
in
out
cmp
fistp
xchg
aas
sbb
jg
mov
pop
cld
mov
mov
mov
fistp
imul
sbb
(bad)
retf
(bad)
xchg
cmp
cmc
adc
in
pop
xchg
fwait
or
mul
xchg
or
test
sub
rol
sbb
add
jp
scas
sti
sbb
xor
xchg
out
or
mov
test
(bad)
cld
jo
jecxz
int
sub
retf
ins
mov
push
adc
ficomp
popf
push
xlat
dec
cmp
add
pop
retf
ret
shl
pop
ror
xchg
pop
imul
sub
mov
les
stos
bound
repz
inc
push
jnp
jmp
and
sar
dec
dec
dec
stos
test
stos
sbb
jp
sbb
gs
inc
pop
pop
fwait
nop
popa
shr
outs
fs
cs
aaa
outs
sub
jne
adc
cld
rcl
inc
dec
and
fucomi
push
data16
cwde
movs
push
xchg
mov
push
xor
xchg
das
pop
push
or
mov
jmp
cwde
loope
push
mov
idiv
in
mov
cmp
or
sbb
shr
dec
xor
adc
cli
in
aad
mov
adc
test
or
push
cmp
or
cld
or
mov
or
test
xchg
add
xor
push
outs
ins
ffree
ror
xor
fucomp
addr16
add
iret
and
imul
mov
out
adc
scas
mov
lods
stc
loope
ins
out
popf
popf
push
icebp
sub
dec
cmp
sub
push
xor
out
ins
or
and
leave
ret
sub
xchg
sbb
std
pushf
inc
jne
hlt
mov
iret
loope
jb
pop
jnp
shl
cmp
jmp
mov
cmp
or
pop
mov
mov
jbe
leave
dec
fild
test
(bad)
lods
push
pop
adc
dec
aam
sbb
and
test
test
xchg
push
pop
daa
mov
push
or
adc
xor
inc
sub
into
xor
xor
fist
inc
ja
mov
mov
(bad)
fimul
cmp
pop
push
loopne
mov
js
mov
shr
rcl
imul
pop
push
mov
inc
sub
sub
pop
mov
(bad)
jp
dec
aad
xchg
je
out
call
jl
push
xor
mov
mov
mov
jge
pop
inc
mov
loop
sbb
or
int
nop
(bad)
sub
lods
jae
(bad)
and
scas
fs
addr16
mov
cmp
out
mov
cdq
sub
sar
add
xchg
add
shl
or
jmp
cli
jo
dec
movs
fst
and
rcr
push
(bad)
jbe
sbb
dec
(bad)
cld
jae
shl
cld
add
jns
je
cmp
adc
mov
iret
inc
ins
inc
pop
push
test
outs
in
mov
cmps
repz
inc
aam
jno
rol
sbb
sbb
add
cmp
cwde
add
mov
or
mov
xor
ret
fild
int
es
jns
push
test
push
or
arpl
pusha
mov
add
mov
mov
stc
lods
xchg
test
push
jecxz
push
ss
lods
xchg
add
adc
(bad)
push
cld
call
mov
repnz
xchg
jne
xor
jo
sub
fiadd
sbb
es
inc
mov
sub
add
inc
cmp
or
or
sbb
aad
inc
sub
lea
loope
cwde
push
pop
sti
push
xor
add
rcr
add
sub
jg
mov
lock
add
adc
push
cmps
hlt
cwde
call
out
pop
cmp
jmp
fs
pop
cmps
paddw
fisubr
mov
add
mov
lock
imul
add
sbb
inc
(bad)
mov
dec
add
push
mov
pop
inc
movs
push
jmp
mov
push
pavgw
adc
sahf
cmp
mov
jg
sbb
push
ror
aam
fcmovnb
repz
mov
test
pop
xor
mov
pusha
std
repz
xlat
jge
outs
sbb
loope
sbb
sub
aad
pushf
mov
mov
push
popf
sub
repnz
ins
imul
pop
push
sbb
stc
lds
and
leave
sbb
xchg
je
inc
xchg
and
inc
inc
out
ins
jle
fcomp
fcmovu
(bad)
jmp
xchg
push
pop
shl
jge
jmp
hlt
clc
aam
movs
sub
mov
jl
add
stos
aas
sbb
out
inc
clc
sub
push
idiv
into
adc
(bad)
dec
js
(bad)
leave
shl
jecxz
std
std
out
test
pop
mov
outs
mov
lea
movs
xchg
or
dec
popf
sbb
mov
pop
cli
xchg
in
and
leave
and
xchg
loope
mov
stos
pop
jmp
test
or
int3
int3
neg
sub
dec
mov
xchg
dec
mov
(bad)
bound
add
into
xor
jge
mov
imul
pop
or
retf
les
rcl
inc
sar
cs
in
sub
cmp
mov
xchg
das
popf
ret
jmp
xchg
movs
jo
jbe
(bad)
cwde
mov
fwait
sbb
adc
xchg
js
fisubr
adc
repz
dec
adc
sub
cli
ret
mov
in
imul
stos
lds
aas
lea
out
out
or
mov
mov
fs
test
into
ins
addr16
push
jns
cmps
sbb
ret
ret
imul
sbb
sti
rcl
into
fldcw
dec
push
in
in
pop
ret
cmp
adc
fcom
or
loope
inc
fdivr
jge
dec
jns
(bad)
sub
jp
addr16
xchg
cmp
scas
(bad)
hlt
mov
jmp
icebp
pop
pusha
cmps
jnp
dec
lock
loop
add
or
xor
cdq
xchg
mov
lea
shr
int3
jae
pushf
stc
and
jmp
jecxz
test
aam
stos
sub
push
mov
pop
pop
mov
fistp
ins
cmp
jmp
sub
pop
pop
cli
pop
rcl
stc
inc
popa
mov
push
mov
mov
jge
fmul
aad
shl
inc
sti
push
aas
pusha
pop
mov
cmp
mov
mov
mov
mov
ret
or
jae
push
jno
push
rcr
cmps
fldenv
mov
lock
fwait
les
adc
push
xchg
or
shr
jae
xor
xchg
add
stos
lods
aad
mov
push
jmp
ret
xor
ret
cmp
nop
outs
xor
add
(bad)
ja
daa
jbe
ror
and
mov
and
fild
adc
shl
repnz
xchg
retf
das
sub
xor
sbb
mov
pop
push
adc
inc
push
add
icebp
mov
push
lock
fldenv
je
sub
cli
loope
ss
mov
push
mov
xchg
inc
les
xor
dec
cld
mov
mov
(bad)
call
fld
test
cmps
sub
push
inc
mov
in
or
sbb
and
xchg
movs
ja
pop
cmc
mov
mov
rcl
sbb
pop
push
pop
outs
sar
xchg
loope
add
inc
repnz
xor
and
pop
xor
fdiv
sbb
xor
fwait
inc
rcl
push
not
dec
retf
pop
lahf
js
or
fcmovnu
fisttp
mov
mov
movs
jl
and
mov
dec
cmp
sbb
imul
jbe
ja
pop
push
dec
movs
pop
sbb
inc
inc
add
adc
iret
sub
add
dec
sbb
out
mov
or
sbb
mov
mov
push
mov
fsub
(bad)
cmp
and
test
pop
mov
mov
out
jne
mov
arpl
jb
iret
retf
aaa
call
test
add
into
inc
jo
pop
push
lahf
into
push
(bad)
sub
bound
cmp
pop
and
cmp
cmp
ret
and
pop
gs
lahf
and
pop
mov
mov
out
dec
cmps
fild
jle
shl
mov
mov
dec
mov
arpl
mov
(bad)
(bad)
out
mov
in
adc
retf
call
add
sub
retf
pusha
lock
xchg
and
bound
cmp
fdiv
stc
in
adc
fs
sub
cld
xchg
mov
scas
in
and
js
ins
dec
lahf
out
push
sbb
leave
cmps
fwait
out
jp
lock
inc
xlat
fiadd
and
in
lea
outs
push
sti
cmp
inc
cmp
into
addr16
loopne
rcl
push
jle
jg
jge
in
je
sbb
cmp
jae
dec
dec
or
cld
push
push
pop
in
adc
mov
into
mov
sub
sub
sbb
adc
mov
pushf
imul
jns
inc
xchg
sbb
leave
aas
test
lds
ja
jne
test
mov
mov
in
dec
mov
(bad)
push
add
pop
mov
mov
pop
xor
lahf
daa
jb
data16
rol
dec
stos
mov
rol
outs
fst
jne
inc
dec
xchg
and
ins
nop
mov
adc
jmp
push
sbb
mov
and
mov
scas
ins
push
ss
test
jne
and
jns
xchg
inc
outs
out
(bad)
mov
mov
out
xlat
jne
mov
cld
in
aad
or
test
or
retf
pop
out
sub
xchg
mov
adc
mov
cld
nop
ins
cdq
pop
sahf
jp
fistp
bound
cmp
cld
mov
out
or
push
int
pop
and
xlat
jbe
sbb
retf
in
mov
push
adc
sub
jne
ja
(bad)
push
and
mov
in
fwait
and
add
xor
mov
ror
cmc
enter
aad
push
test
daa
add
pop
aas
cmc
jno
jae
call
movs
sahf
adc
out
jmp
mov
fxch
test
push
out
outs
pushf
icebp
push
ret
lahf
and
inc
test
push
pop
cli
and
mov
ror
mov
pop
shl
push
leave
retf
sub
retf
loopne
xlat
xchg
mov
addr16
ds
jl
movs
lock
mov
push
data16
imul
inc
cli
jne
add
test
loopne
adc
jno
dec
div
jecxz
cmps
xchg
sub
xchg
out
and
lods
mov
xchg
pop
and
xchg
or
fdiv
out
mov
mov
imul
add
das
inc
push
cmp
std
or
jno
jne
jb
sbb
outs
mov
iret
fidiv
mov
pop
mov
push
or
in
div
xor
fs
dec
mov
jnp
arpl
cmp
jne
mov
xchg
dec
stc
xchg
imul
mov
retf
mov
pop
out
or
imul
ins
(bad)
mov
lods
ins
jmp
cld
shl
xor
add
adc
xor
fidivr
cld
add
push
rol
fadd
push
pop
lea
xor
das
cmp
jl
sub
mov
movs
mov
jb
sbb
daa
out
loopne
xchg
push
ret
xor
es
mov
loopne
dec
mov
dec
mov
lods
push
mov
(bad)
int3
or
or
shl
test
mov
in
add
xchg
sub
hlt
mov
sbb
nop
cmp
test
sbb
repz
dec
ret
add
push
clc
mov
rol
xchg
les
pop
ins
cld
mov
jle
stos
and
xchg
imul
retf
or
nop
loop
dec
xchg
sub
not
mov
inc
jnp
(bad)
lods
push
cmc
cdq
dec
jle
lods
lods
cmp
mov
dec
mov
and
sub
xchg
and
push
xor
mov
cli
stc
and
retf
call
sbb
or
in
pop
into
int
mov
inc
inc
fwait
dec
and
mov
sub
cdq
imul
and
ins
aad
cmp
scas
(bad)
mov
jmp
push
inc
sbb
mov
fisttp
ins
jmp
repnz
pop
sub
and
enter
and
xor
cmp
add
sub
inc
leave
(bad)
push
push
in
ds
xor
mov
mov
and
nop
cmp
mov
xchg
and
xor
aad
lahf
dec
dec
fsub
mov
daa
arpl
push
call
mov
shr
mov
mov
mov
mov
loopne
iret
mul
jmp
mov
adc
fcmovb
rcl
mov
push
jmp
mov
pop
(bad)
lahf
cdq
pop
loop
sbb
addr16
mov
fidiv
mov
out
lds
xchg
dec
mov
add
sahf
xchg
mov
push
xor
dec
ja
add
pop
imul
hlt
mov
loop
ja
pop
or
fst
ret
push
out
iret
loop
imul
add
shr
popa
enter
adc
cwde
in
ins
cmp
ss
cmp
sub
data16
popa
mov
cmps
push
dec
mov
xchg
sbb
pushf
pop
addr16
cmp
aad
mov
xor
add
pusha
adc
rcl
int3
sbb
shl
retf
lods
fmul
mov
pop
repz
(bad)
mov
idiv
pop
or
aam
mov
xlat
outs
hlt
cmc
jg
hlt
jecxz
ret
mov
adc
shl
inc
sbb
push
inc
(bad)
cld
out
mov
cmp
sbb
dec
sub
adc
in
add
and
pop
pusha
out
mov
mov
or
data16
jg
jmp
pop
lds
push
inc
push
sbb
pop
push
add
aam
or
xchg
adc
ss
mov
jo
jno
repz
jae
add
adc
inc
inc
pop
pop
add
loopne
stos
out
in
push
sub
push
sub
cmps
cmp
or
jno
repz
and
xor
clc
test
add
std
mov
add
jo
cmp
scas
mov
data16
xchg
jle
add
call
mov
add
sar
add
mov
push
mov
fiadd
mov
mov
pusha
sbb
xor
and
mov
add
sbb
adc
and
cmp
or
or
or
fsub
xor
mov
stos
sbb
scas
xchg
mov
cmp
or
enter
jae
xlat
xor
xadd
daa
lahf
add
add
push
sbb
push
add
clc
mov
js
add
es
or
retf
jo
in
aaa
enter
aaa
sub
stos
aaa
clc
in
lea
repnz
sbb
or
cli
xor
pusha
add
fsub
not
test
sbb
adc
and
push
inc
pusha
add
(bad)
or
jmp
hlt
cmp
add
adc
adc
cdq
adc
push
sbb
and
cmp
and
jo
or
add
mov
bound
mov
sbb
aas
add
loopne
push
dec
rcr
cmp
add
sar
pop
cmp
add
mov
lods
sub
ret
push
pop
scas
inc
aam
out
adc
adc
retf
push
leave
dec
aas
inc
nop
pop
sub
jb
pop
jns
mov
cld
(bad)
out
(bad)
cdq
imul
call
inc
inc
mov
clc
iret
rol
add
lods
xchg
or
rol
rcr
push
div
xchg
add
(bad)
push
xor
out
and
or
add
dec
xor
sbb
inc
fcmovnbe
into
adc
out
outs
in
sti
inc
dec
push
cdq
inc
(bad)
fcmove
sbb
sub
add
sbb
add
or
in
jle
jg
shl
cmp
xor
xor
cmp
pop
sub
jae
jno
mov
out
icebp
pop
and
and
rcr
vpsubsb
push
fcmovnu
sbb
jns
imul
out
xlat
ret
rcl
fsub
fist
sbb
lods
dec
pop
sbb
inc
fdivr
popf
(bad)
lods
rcl
cld
ret
lds
jbe
xchg
mov
xchg
imul
xor
cwde
mov
or
lds
(bad)
enter
hlt
(bad)
idiv
(bad)
fcom
(bad)
sar
das
arpl
shl
cli
xchg
pop
addr16
(bad)
jb
push
fs
into
aaa
jmp
add
icebp
cmp
jae
push
sbb
cmp
loop
xlat
mov
pop
dec
dec
daa
jnp
xchg
xchg
mov
or
xchg
add
shr
movs
sbb
mov
data16
and
int3
rcr
lds
fsubr
movs
fmul
aaa
ror
test
mov
cmp
ret
fsubr
jge
(bad)
icebp
pop
out
sbb
cdq
sbb
pop
xchg
movs
sbb
xlat
push
std
mov
and
dec
xor
or
loop
add
ins
cld
mov
rcl
mov
fidiv
in
popa
jbe
and
fld
outs
sub
push
mov
in
call
jae
pop
jae
test
in
pop
loope
xor
pop
push
push
xchg
(bad)
fstp
enter
jae
je
fistp
icebp
pop
adc
cmps
pusha
imul
fucomip
das
loope
scas
out
or
pop
pop
push
es
cld
out
out
mov
out
push
adc
xor
inc
add
sbb
mov
sub
push
dec
xor
scas
or
mov
mov
sub
adc
jnp
loope
lock
inc
xchg
pusha
cld
icebp
add
sub
inc
push
add
xchg
pop
inc
cmp
mov
test
and
cmp
lods
(bad)
push
dec
mov
test
mov
or
ret
les
aaa
add
add
mov
and
or
mov
or
sub
sbb
add
inc
cmps
inc
push
xor
push
adc
xchg
sub
icebp
rcl
add
xchg
fstp
sbb
test
and
popa
loop
loop
loop
pop
jae
rcr
sub
scas
repz
push
sbb
scas
lods
shl
inc
pusha
fld
push
aad
cmp
pusha
mov
sbb
cmp
add
in
xchg
popf
test
lea
fadd
or
mov
inc
mov
shl
inc
gs
dec
and
add
mov
loopne
call
inc
or
and
mov
pop
int3
loopne
inc
div
dec
or
jnp
inc
clc
dec
rcl
sub
push
mov
sbb
arpl
mov
mov
inc
inc
cmp
jmp
cmp
xor
shr
mov
add
dec
out
scas
test
lea
stc
xlat
in
dec
jmp
add
rep
clc
xlat
stos
jg
aas
lock
call
jg
not
add
pop
clc
ins
inc
sub
xor
in
inc
xor
call
add
push
and
cmc
das
repnz
cli
pop
jg
outs
inc
loopne
push
or
xchg
dec
sbb
dec
pusha
pop
push
inc
imul
pop
xchg
mov
dec
and
int3
(bad)
imul
jns
rol
arpl
es
adc
or
mov
std
loope
xchg
push
pop
imul
sar
pop
pop
xor
inc
scas
das
and
and
call
ds
pusha
ins
pop
xlat
or
or
je
pusha
and
adc
push
ins
popa
pop
push
mov
out
sbb
into
mov
dec
cmp
sbb
pop
scas
das
and
fstp
std
dec
sub
fstp
(bad)
push
scas
jge
pop
push
in
das
repnz
loopne
or
aas
ins
jg
loopne
or
in
outs
in
mov
ins
inc
pop
sbb
pop
or
(bad)
out
js
add
xchg
cmp
gs
jle
into
mov
loopne
pop
or
xadd
add
(bad)
mov
std
xchg
jbe
pop
sbb
outs
cld
mov
jnp
or
adc
mov
jo
clc
jecxz
in
out
xchg
mov
(bad)
fcomp
jbe
call
lock
mov
clc
dec
jmp
jle
mov
(bad)
(bad)
mov
add
cmc
jle
repz
iret
xor
leave
in
lahf
enter
lahf
enter
scas
mov
pop
in
xchg
inc
dec
(bad)
jmp
push
(bad)
fstp
jmp
sbb
xchg
and
push
pop
inc
push
aas
jmp
mov
mov
into
push
jg
aam
push
xchg
push
mov
cmp
imul
adc
dec
mov
xchg
pop
call
iret
push
add
mov
push
add
add
mov
add
cmp
pop
xlat
(bad)
lods
xchg
inc
adc
sbb
adc
ret
loopne
loopne
dec
mov
inc
call
pop
stos
ror
sbb
out
and
mov
jle
add
sar
cdq
pop
adc
adc
adc
int3
cdq
fld
retf
outs
in
retf
loop
dec
add
cli
imul
sub
dec
gs
loopne
or
prefetchwt1
or
or
sub
(bad)
fistp
(bad)
jb
mov
in
imul
jno
mov
(bad)
lock
iret
pusha
dec
daa
cwde
mov
xor
jno
cmp
push
sbb
pop
shr
push
sub
int
pop
(bad)
stos
pop
cmp
fwait
mov
jae
fld
scas
push
mov
enter
rcl
jmp
sub
fs
sti
cmp
inc
call
add
cmc
add
(bad)
loope
mov
pop
cmps
out
cmps
dec
add
test
jg
loop
inc
cli
outs
push
dec
add
add
add
add
and
inc
sbb
ja
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
jl
ins
neg
fsubr
jmp
popf
jmp
ret
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
and
inc
mov
cdq
xor
add
or
and
add
push
push
inc
xor
gs
or
and
add
add
add
sbb
or
imul
jmp
popf
jmp
popf
jmp
sub
add
add
and
inc
sbb
ja
xchg
add
add
add
add
jge
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
jl
ins
neg
fsubr
jmp
popf
jmp
add
add
add
add
mov
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
mov
push
je
imul
add
add
pop
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
inc
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
push
add
sub
push
add
jno
push
add
test
push
add
movs
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
sub
push
add
add
add
add
test
push
add
add
sub
adc
sub
xor
adc
cmp
xor
push
add
sub
push
add
sub
push
add
popf
add
add
test
push
add
add
test
push
add
test
push
add
test
push
add
test
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
popa
add
add
push
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
and
or
dec
add
pop
add
add
add
jbe
imul
and
jle
add
add
add
add
add
add
add
test
popa
add
add
movs
add
pop
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
adc
add
add
add
add
or
sbb
add
add
add
sub
add
add
add
add
add
xor
add
add
inc
add
add
pop
pop
pop
outs
gs
outs
fs
add
inc
xor
ins
jae
outs
jb
imul
outs
ja
inc
popa
jae
add
jae
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
cs
jo
cmp
outs
fs
gs
arpl
outs
jb
push
add
dec
bound
arpl
jb
add
jb
popa
ins
add
jae
gs
cs
dec
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
arpl
add
imul
popa
arpl
add
jae
gs
cs
dec
cs
popa
arpl
imul
push
popa
jb
add
arpl
addr16
popa
jb
add
je
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
imul
ins
add
jo
jae
add
add
pop
inc
jno
popa
ins
imul
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
add
inc
js
gs
imul
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
jbe
imul
gs
jns
add
ins
bound
dec
outs
outs
add
je
dec
popa
ins
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
pop
dec
gs
popa
add
je
push
je
arpl
jb
arpl
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
dec
popa
imul
add
inc
push
push
inc
je
jb
bound
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
add
xor
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jae
jae
add
bound
ins
add
cmp
and
add
popa
add
add
imul
das
add
push
add
xor
add
js
add
add
add
mov
sub
add
mov
pop
push
sbb
mov
xor
dec
xor
or
add
add
adc
push
and
add
adc
sbb
add
or
pop
and
or
and
add
add
adc
sbb
add
adc
adc
push
add
add
push
pop
add
adc
adc
push
push
pop
push
adc
adc
sbb
add
adc
add
adc
push
or
add
sbb
or
add
add
inc
push
and
sbb
sbb
adc
add
add
add
push
add
push
add
push
add
add
add
add
add
inc
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
push
pop
and
xor
xor
xor
cs
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
xor
xor
xor
xor
add
add
or
add
or
add
add
push
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
add
sbb
add
push
add
and
add
push
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
