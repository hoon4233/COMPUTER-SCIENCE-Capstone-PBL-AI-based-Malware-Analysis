adc
or
add
add
dec
add
add
add
add
xchg
add
add
add
pop
add
push
(bad)
jmp
add
(bad)
add
sub
add
push
sub
sbb
sbb
add
sub
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
adc
add
fld
add
add
add
sub
add
push
and
add
add
imul
add
add
or
and
add
add
cmp
add
es
add
or
and
add
add
inc
add
add
adc
add
pop
sub
jae
add
and
add
sub
and
add
cmp
add
jae
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
int
(bad)
push
add
or
cmp
add
add
and
add
add
mov
(bad)
push
add
or
and
add
add
lahf
(bad)
(bad)
inc
sub
add
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
inc
or
pop
xor
add
sub
add
push
sub
adc
add
add
adc
adc
add
add
add
add
or
add
adc
add
add
add
aas
ret
add
add
pop
add
add
adc
add
add
add
adc
add
sub
add
adc
add
add
pop
sub
xor
add
push
sub
xor
add
adc
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
sub
add
adc
add
add
add
sub
add
push
sub
adc
add
add
pop
sub
xor
add
push
sub
xor
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
adc
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
and
adc
sub
add
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
sub
add
push
sub
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
adc
add
sub
add
add
or
add
adc
add
add
add
adc
xor
pop
add
add
add
or
add
add
add
add
add
adc
xor
add
add
xor
add
adc
add
add
add
adc
cmp
pop
add
add
add
or
add
add
add
add
add
adc
ss
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
sub
add
push
sub
adc
add
sub
add
adc
add
add
add
add
add
adc
add
add
add
add
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
outs
sub
add
push
sub
add
push
sub
add
push
jae
add
or
add
adc
add
add
add
add
or
add
add
inc
sbb
add
add
add
add
add
add
add
add
xchg
das
imul
es
sub
add
sub
add
push
outs
push
add
push
sub
add
add
sub
add
xor
add
add
add
add
add
adc
lahf
scas
add
add
add
adc
add
sub
xor
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
add
or
add
add
inc
sbb
add
add
add
add
rol
add
aas
add
add
add
add
add
add
xor
add
add
add
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
push
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
push
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
xor
add
adc
adc
add
add
adc
adc
add
sub
add
sub
add
push
sub
add
push
sub
add
pop
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
sub
add
push
sub
add
push
jae
add
push
sub
or
and
add
sub
add
adc
add
sub
add
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
adc
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
sbb
sbb
add
sub
sbb
sbb
add
sub
adc
add
sub
add
add
add
add
push
sub
add
push
and
add
add
stc
add
push
sub
add
push
outs
mov
sti
add
push
and
add
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
and
adc
sub
add
sub
add
adc
add
add
add
add
adc
add
add
sub
add
push
sub
add
add
add
add
add
add
push
sub
add
adc
add
sub
add
push
sub
add
or
add
or
pop
inc
lea
add
and
add
lods
add
or
push
sub
sub
add
lea
add
and
jbe
add
sub
add
lea
add
cmp
add
lea
add
cmp
add
or
jle
add
or
push
lea
add
add
push
lea
add
add
add
cmp
add
and
add
scas
add
or
push
xor
add
push
xor
xor
add
xor
add
push
add
add
xor
add
cmp
add
cmp
add
cmp
add
lods
add
or
push
sub
add
and
add
cmp
add
add
add
sub
sub
push
call
xor
add
add
adc
or
je
jae
adc
call
lea
add
or
rol
add
mov
pop
and
add
add
adc
adc
and
add
add
add
add
pop
or
add
and
add
add
or
pop
outs
pop
push
push
ins
adc
push
push
adc
add
add
or
adc
cmp
add
add
adc
add
pop
xchg
pushf
adc
pop
pop
adc
adc
add
(bad)
inc
add
add
and
add
add
add
xor
or
and
add
pop
adc
pop
aam
add
adc
pop
push
pop
pop
aas
pop
fs
add
add
rcr
or
or
cmp
pop
mov
pop
pop
and
add
inc
adc
and
or
(bad)
fdivr
jbe
xor
adc
adc
add
or
push
adc
cmp
add
add
adc
sbb
adc
adc
sbb
loopne
pop
sbb
adc
adc
sbb
loopne
pop
adc
pop
adc
adc
pop
pop
pop
loopne
push
bound
adc
adc
pop
loopne
pusha
sahf
adc
sbb
movups
pop
cmp
call
or
adc
or
adc
or
adc
or
adc
or
or
or
or
sbb
add
push
adc
or
or
or
pop
or
push
sub
add
adc
adc
or
or
pop
adc
push
sub
add
adc
adc
adc
or
pop
push
sbb
sub
add
adc
adc
adc
adc
sbb
add
push
adc
or
or
or
pop
or
push
sub
add
adc
adc
or
or
adc
add
adc
adc
adc
or
sub
add
adc
adc
adc
adc
sbb
add
add
adc
or
or
or
or
or
or
sub
add
adc
adc
or
or
or
adc
or
sub
add
adc
adc
adc
or
or
push
pop
or
sub
add
adc
adc
adc
adc
or
pop
or
add
adc
or
or
or
or
push
sub
add
adc
adc
or
or
push
pop
adc
clts
sub
add
adc
adc
adc
or
nop
pop
adc
sub
add
adc
adc
adc
adc
sbb
adc
sub
or
or
or
or
or
adc
sub
or
or
or
or
or
push
pop
adc
sub
or
or
or
or
pop
adc
adc
sub
or
or
or
or
sbb
adc
add
adc
or
or
or
or
or
push
push
sub
or
or
or
or
nop
pop
pop
push
sub
or
or
or
or
pop
adc
sbb
sub
or
or
or
or
or
pop
sbb
sub
or
or
or
or
push
pop
or
sbb
sub
or
or
or
or
pop
push
pop
sbb
sub
or
or
or
or
pop
adc
sbb
sub
or
or
or
or
or
sub
or
or
or
or
pop
or
push
push
sub
or
or
or
or
push
sub
or
or
or
or
or
adc
and
sub
or
or
or
or
sbb
and
sub
add
push
adc
or
or
or
pop
or
and
sub
add
push
adc
adc
or
or
or
adc
and
sub
add
push
adc
adc
adc
or
push
pop
pop
pop
and
sub
add
push
adc
adc
adc
adc
sbb
and
add
adc
or
or
or
pop
or
es
sub
add
push
adc
adc
or
or
push
sub
add
push
adc
adc
adc
or
or
pop
pop
sub
sub
add
push
adc
adc
adc
adc
or
sub
add
push
adc
or
or
or
pop
or
sub
sub
add
push
adc
adc
or
or
pop
adc
sub
sub
add
push
adc
adc
adc
or
pop
pop
sub
sub
add
push
adc
adc
adc
adc
or
pop
sub
add
adc
or
or
or
or
or
cs
sub
add
push
adc
adc
or
or
nop
pop
das
push
sub
add
push
adc
adc
adc
or
pop
pop
pop
xor
sub
add
push
adc
adc
adc
adc
sbb
xor
sub
add
push
adc
or
or
or
push
sub
add
push
adc
adc
or
or
push
pop
nop
push
sub
add
push
adc
adc
adc
or
pop
adc
pop
add
push
adc
adc
adc
adc
or
pop
xor
add
adc
or
or
or
pop
or
ss
sub
add
push
adc
adc
or
or
or
nop
push
sub
add
push
adc
adc
adc
or
pop
adc
pop
add
push
adc
adc
adc
adc
sbb
cmp
sub
add
push
adc
or
or
or
nop
pop
cmp
sub
add
push
adc
adc
or
or
nop
push
sub
add
push
adc
adc
adc
or
or
push
sub
add
push
adc
adc
adc
adc
sbb
cmp
add
adc
or
or
or
or
or
ds
sub
add
push
adc
adc
or
or
pop
nop
push
sub
add
push
adc
adc
adc
or
or
adc
pop
add
push
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
or
or
adc
inc
stos
cli
(bad)
call
adc
adc
or
scas
add
or
adc
sbb
mov
add
adc
sub
adc
sbb
mov
add
adc
sub
adc
sbb
mov
add
adc
scas
add
or
adc
or
sub
adc
stos
add
add
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
stos
add
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
sahf
add
add
add
add
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
add
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
jle
or
scas
iret
xor
adc
call
and
pop
pop
pop
pop
add
pop
pop
pop
bound
cmps
sub
sub
adc
adc
call
add
add
or
add
sub
add
push
pop
sub
add
add
add
sbb
add
push
add
add
add
adc
or
pop
fidiv
adc
call
sub
add
push
cmp
add
add
add
or
cmp
add
add
add
or
frstor
add
add
jb
add
jo
mov
mov
add
outs
mov
add
je
add
add
fld
add
add
sub
add
adc
add
add
and
add
add
xor
add
add
add
add
sub
sub
push
call
add
or
fld
add
add
fld
add
add
add
add
add
push
add
sbb
add
scas
sub
sub
and
adc
call
add
push
cmp
add
jae
add
or
sub
add
add
add
sub
xor
add
add
adc
or
push
cli
inc
dec
adc
call
add
add
stos
add
add
or
add
sbb
add
dec
add
cmp
or
add
sbb
add
and
add
and
add
add
and
add
cmp
add
or
add
add
add
dec
add
cmp
add
or
add
add
or
add
dec
sbb
cmp
add
dec
add
or
add
and
add
and
add
pop
pushf
and
add
add
push
sbb
cmp
add
add
or
add
or
add
dec
add
dec
sbb
cmp
add
add
sbb
add
and
add
pop
dec
add
and
add
dec
sbb
cmp
add
add
adc
or
pushf
and
add
cmp
add
add
or
add
adc
or
add
dec
sbb
cmp
add
cmp
push
add
pop
add
add
mov
add
and
add
add
and
add
dec
sbb
cmp
das
add
cmp
add
add
push
add
add
dec
add
add
push
add
and
add
add
bound
add
and
add
add
sub
add
pop
dec
add
and
push
sbb
cmp
add
cmp
add
or
add
add
add
and
add
and
add
add
and
add
cmp
add
add
or
add
sbb
add
and
add
and
add
add
and
push
sbb
cmp
std
add
add
or
add
push
add
add
or
add
dec
sbb
cmp
add
add
or
add
add
add
dec
add
dec
sbb
push
cmp
add
add
adc
movups
sbb
add
add
mov
add
dec
add
push
add
add
or
add
dec
sbb
push
cmp
add
add
aas
add
add
push
add
and
add
dec
sbb
cmp
add
and
add
add
cmp
add
pop
dec
add
and
push
sbb
push
cmp
add
and
add
and
add
push
add
and
add
add
push
sbb
push
cmp
add
add
or
add
or
add
and
pop
add
add
and
add
add
and
add
dec
add
sbb
add
dec
add
and
add
dec
sbb
dec
add
add
add
adc
add
stc
(bad)
(bad)
jmp
or
add
and
add
add
add
or
add
push
add
or
add
std
or
add
adc
add
and
add
push
add
pop
add
sbb
add
xlat
adc
add
and
add
and
add
add
in
add
jge
add
call
or
add
pop
add
mov
clc
(bad)
(bad)
add
add
or
add
or
add
adc
add
add
sbb
add
mov
add
ret
add
add
rcl
add
sbb
add
and
add
add
add
or
add
repnz
add
add
pop
adc
add
adc
(bad)
call
add
add
add
add
xchg
sbb
add
stc
or
add
and
add
adc
add
add
clc
or
add
or
add
pop
add
jnp
add
and
add
mov
add
and
adc
add
add
bndldx
add
add
add
ror
add
add
xchg
sbb
add
idiv
inc
and
add
or
add
stc
(bad)
jmp
add
imul
add
adc
add
add
(bad)
stc
(bad)
(bad)
aas
adc
add
push
add
in
add
pop
sbb
add
add
aaa
pop
add
jge
add
popw
add
sbb
add
cmp
add
fimul
add
push
or
add
add
add
(bad)
inc
idiv
jmp
add
retf
add
add
dec
and
add
or
add
or
add
add
in
add
fsub
add
adc
add
xor
add
or
add
sbb
add
popf
and
add
add
add
sldt
push
push
add
push
adc
add
add
pop
and
add
dec
pop
add
jle
add
mov
and
add
cli
(bad)
jmp
push
add
push
add
add
add
xchg
add
add
retf
add
pop
add
or
add
int
add
mov
adc
add
adc
add
(bad)
inc
add
mov
add
mov
add
adc
add
mov
add
jno
add
fstp
add
jmp
sbb
add
sbb
add
or
add
in
pop
add
dec
add
add
add
mov
add
jle
add
(bad)
push
add
push
push
add
sbb
(bad)
(bad)
cmp
add
sbb
add
add
add
add
sbb
add
and
add
or
add
add
std
push
add
pop
add
add
sbb
add
add
adc
sbb
add
add
sbb
add
imul
add
add
lahf
adc
add
add
add
push
add
add
add
push
add
mov
add
rol
add
add
imul
add
or
add
inc
push
add
cmps
sbb
add
add
jmp
add
pop
and
add
sbb
add
adc
add
add
add
add
imul
add
in
clc
(bad)
dec
push
add
rcl
add
and
add
add
mov
add
xchg
(bad)
inc
or
add
std
push
add
sub
sldt
pop
add
add
push
add
or
add
in
or
add
arpl
add
stc
(bad)
jmp
add
add
or
add
adc
add
add
inc
add
add
pop
add
dec
sldt
aaa
push
add
push
sbb
add
sbb
add
add
add
inc
adc
add
add
cmc
sldt
add
or
add
add
or
add
iret
adc
add
push
add
neg
add
dec
add
add
lea
add
int
add
or
add
add
daa
push
add
or
add
pop
sbb
add
or
add
and
add
add
imul
add
adc
add
push
or
add
add
and
add
xchg
add
add
and
add
and
add
clc
(bad)
push
add
dec
and
add
(bad)
jmp
idiv
push
and
add
or
add
sbb
add
push
stc
(bad)
dec
adc
add
cmp
add
and
add
ficom
add
rol
add
adc
add
adc
add
add
inc
push
add
push
adc
add
or
add
add
add
pop
add
popf
sbb
add
add
add
add
push
sbb
add
sbb
add
add
sti
add
add
pop
add
lds
add
int3
add
add
push
add
rcr
add
rcl
add
and
add
stc
(bad)
(bad)
cmp
add
aaa
and
add
and
add
or
add
add
js
add
iret
sbb
add
add
pop
adc
add
add
and
add
add
dec
cli
(bad)
(bad)
dec
add
or
or
add
dec
sbb
cmp
or
add
pop
add
add
or
add
cmp
cli
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
stc
(bad)
(bad)
dec
add
add
add
dec
add
cmp
stc
(bad)
jmp
adc
add
and
add
push
add
cmp
or
scas
add
add
retf
jmp
in
add
and
add
add
push
add
and
add
add
mov
(bad)
(bad)
dec
add
adc
add
and
cmp
pushf
and
mov
(bad)
jmp
movs
add
add
add
add
push
add
and
add
jns
(bad)
(bad)
dec
add
add
add
and
cmp
pushf
and
add
add
push
sbb
push
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
cmp
or
add
or
add
and
add
add
push
add
add
and
add
add
sbb
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sbb
cmp
clc
(bad)
(bad)
dec
add
adc
add
dec
add
cmp
clc
(bad)
(bad)
dec
add
sbb
or
add
cmp
clc
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
add
and
add
add
scas
clc
(bad)
jmp
dec
add
add
adc
add
pop
dec
add
and
add
dec
sbb
cmp
add
mov
(bad)
(bad)
dec
add
sbb
add
and
sub
add
pop
pushf
and
add
add
outs
clc
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
cmp
(bad)
(bad)
dec
add
adc
les
add
and
add
pop
pushf
and
xor
(bad)
(bad)
dec
add
or
add
dec
add
cmp
clc
(bad)
(bad)
dec
add
or
or
add
dec
sbb
cmp
and
idiv
(bad)
dec
add
adc
add
dec
add
cmp
idiv
jmp
fwait
add
add
and
add
pop
dec
add
and
add
add
push
sbb
cmp
idiv
(bad)
dec
add
add
or
add
cmp
or
add
sbb
add
dec
add
cmp
or
add
push
add
add
rol
add
inc
add
add
and
add
dec
sbb
cmp
(bad)
call
pop
cmp
add
sub
add
jns
add
cmp
jmp
das
add
add
sub
add
pop
dec
add
and
add
cmp
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
idiv
jmp
adc
add
lea
push
adc
and
push
sbb
cmp
and
add
push
idiv
jmp
iret
add
add
sub
add
pop
dec
add
and
push
sbb
push
cmp
idiv
(bad)
dec
add
sbb
add
dec
add
dec
sbb
pop
cmp
idiv
(bad)
dec
add
add
add
and
add
add
and
push
sbb
push
cmp
add
or
imul
and
add
add
mov
(bad)
jmp
jmp
add
pop
dec
add
and
add
add
push
sbb
cmp
(bad)
(bad)
dec
add
pop
add
add
or
push
add
add
and
add
add
dec
idiv
(bad)
dec
add
add
add
and
add
add
push
add
add
and
cmp
(bad)
(bad)
dec
add
or
add
and
xor
add
pop
pushf
and
push
sbb
cmp
idiv
(bad)
dec
add
sldt
add
or
add
dec
sbb
cmp
and
add
lock
(bad)
(bad)
dec
add
sbb
add
and
xor
add
pop
pushf
and
add
add
push
sbb
cmp
and
add
enter
dec
add
add
add
and
add
and
add
pop
pushf
and
add
dec
sbb
push
cmp
add
add
add
add
pop
dec
add
and
add
dec
sbb
cmp
or
add
or
add
and
add
and
add
and
add
dec
sbb
pop
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
pop
cmp
(bad)
(bad)
dec
add
adc
add
dec
add
dec
sbb
cmp
cmc
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sbb
cmp
and
add
or
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
cmp
hlt
(bad)
(bad)
dec
add
add
add
and
add
and
add
pop
pushf
and
add
add
push
sbb
cmp
hlt
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
or
add
add
add
and
inc
add
add
and
(bad)
hlt
(bad)
(bad)
dec
add
push
add
add
cwde
add
add
xor
add
pop
pushf
and
add
dec
sbb
cmp
imul
(bad)
dec
add
sbb
add
and
sub
add
pop
pushf
and
add
add
push
sbb
cmp
(bad)
(bad)
dec
add
pop
add
add
or
add
dec
sbb
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
hlt
(bad)
jmp
push
jno
add
pop
dec
add
and
add
dec
sbb
cmp
and
add
inc
sbb
repz
(bad)
dec
add
or
add
and
add
add
push
add
add
and
add
cmp
repz
(bad)
dec
add
push
add
add
inc
add
add
push
add
add
and
stos
repz
(bad)
dec
add
or
add
dec
add
dec
sbb
pop
cmp
or
add
push
add
add
sub
add
and
add
add
and
add
add
ja
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sbb
pop
cmp
(bad)
jmp
or
add
and
add
pop
dec
add
and
push
sbb
cmp
repz
jmp
mov
add
and
add
add
push
add
and
add
add
push
sbb
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
repz
(bad)
dec
add
push
add
add
or
add
cmp
repnz
jmp
leave
add
add
inc
add
add
push
add
and
add
add
xlat
repnz
jmp
rol
add
and
add
pop
dec
add
and
add
add
mov
sub
add
push
add
jo
aad
add
cmp
and
add
mov
add
add
push
sbb
cmp
or
add
add
add
dec
add
cmp
(bad)
(bad)
dec
add
sbb
or
add
dec
sbb
cmp
(bad)
jmp
push
add
add
push
dec
add
and
add
dec
sbb
cmp
cmc
pop
add
cmp
repnz
(bad)
dec
add
sbb
add
and
xor
add
pop
pushf
and
add
dec
sbb
push
cmp
repnz
(bad)
dec
add
sbb
add
and
and
add
pop
pushf
and
hlt
icebp
(bad)
(bad)
dec
add
sldt
add
pop
add
add
pop
add
add
and
add
add
(bad)
(bad)
(bad)
dec
add
add
add
and
add
add
and
add
add
push
sbb
pop
cmp
pop
add
add
sbb
dec
add
and
push
sbb
cmp
pop
add
cmp
mov
(bad)
jmp
test
add
and
add
pop
dec
add
and
add
add
jns
(bad)
jmp
mov
add
and
dec
add
and
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
and
add
pop
pushf
and
add
add
inc
icebp
(bad)
jmp
push
add
add
je
add
pop
dec
add
and
add
dec
sbb
cmp
icebp
(bad)
(bad)
dec
add
or
sbb
ins
add
add
and
add
add
add
icebp
add
add
push
add
add
push
add
and
in
lock
(bad)
dec
add
sldt
add
cmp
add
and
add
add
and
add
add
int
(bad)
(bad)
dec
add
add
fiadd
add
and
add
pop
pushf
and
add
add
cmps
lock
(bad)
jle
add
add
imul
and
add
cmp
and
xor
add
pop
dec
add
and
add
jg
(bad)
(bad)
dec
add
or
add
and
add
add
inc
add
add
and
push
sbb
cmp
(bad)
(bad)
dec
add
adc
add
dec
add
cmp
(bad)
jmp
dec
add
add
cmp
add
pop
dec
add
and
sub
(bad)
jmp
scas
add
add
cmp
add
pop
dec
add
and
add
dec
sbb
push
cmp
lock
(bad)
dec
add
or
or
add
dec
sbb
pop
cmp
out
(bad)
jmp
inc
add
add
push
add
add
push
add
and
xlat
out
(bad)
jmp
mov
add
and
add
add
push
add
and
add
cmp
add
add
and
add
pop
dec
add
and
add
add
push
sbb
cmp
or
add
add
add
dec
add
cmp
adc
adc
sbb
add
dec
sbb
cmp
(bad)
jmp
int
add
and
add
push
add
and
add
pop
out
(bad)
call
or
or
adc
popf
sbb
and
add
add
push
sbb
pop
cmp
out
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
out
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
pop
cmp
or
add
add
add
add
and
add
pop
pushf
and
jmp
add
and
add
pop
dec
add
and
add
add
shr
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
pop
cmp
or
add
adc
add
and
add
add
inc
add
add
cmp
sbb
add
neg
add
mov
and
add
add
jge
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sbb
cmp
sbb
add
and
(bad)
(bad)
cmp
(bad)
call
add
daa
adc
add
or
add
dec
sbb
push
cmp
(bad)
(bad)
dec
add
adc
add
and
cmp
add
pop
pushf
and
add
add
push
sbb
cmp
out
(bad)
jmp
ret
add
inc
add
add
push
add
and
add
add
or
or
add
add
add
dec
add
cmp
in
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
cmp
in
(bad)
(bad)
dec
add
adc
add
dec
add
dec
sbb
cmp
or
add
add
add
dec
add
dec
sbb
pop
cmp
add
add
inc
add
add
push
add
and
add
cmp
or
add
pop
add
add
or
add
cmp
(bad)
call
add
ficomp
add
and
push
in
(bad)
(bad)
dec
add
sldt
add
fild
add
and
add
pop
pushf
and
aas
in
(bad)
(bad)
dec
add
add
add
dec
add
cmp
in
(bad)
jmp
and
add
and
add
add
push
add
and
add
add
push
sbb
pop
cmp
or
add
adc
add
and
cmp
add
pop
pushf
and
jmp
add
sbb
add
and
add
add
add
pushf
and
push
sbb
cmp
in
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
push
cmp
or
add
push
add
add
or
add
dec
sbb
cmp
sbb
add
test
(bad)
(bad)
dec
add
push
add
add
and
and
add
pop
pushf
and
add
cmp
(bad)
(bad)
dec
add
push
add
add
xchg
add
add
adc
add
pop
pushf
and
add
add
push
sbb
cmp
(bad)
jmp
dec
add
add
jnp
add
pop
dec
add
and
cs
(bad)
(bad)
dec
add
pop
add
add
or
add
cmp
in
(bad)
call
adc
and
add
cmp
in
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
push
cmp
jmp
(bad)
dec
add
pop
add
add
or
add
dec
sbb
cmp
add
cmp
ret
jmp
xor
add
and
add
pop
dec
add
and
add
add
lods
jmp
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
push
sbb
push
cmp
adc
adc
pop
xchg
pushf
and
add
add
push
sbb
pop
cmp
(bad)
(bad)
dec
add
sldt
add
or
add
dec
sbb
push
cmp
(bad)
jmp
outs
add
add
dec
add
add
push
add
and
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
add
cmp
(bad)
sbb
add
je
add
cmp
(bad)
(bad)
dec
add
sldt
add
test
add
and
add
pop
pushf
and
add
cmp
jmp
and
or
add
cmp
jmp
and
add
add
dec
add
add
dec
add
add
and
add
cmp
retf
add
inc
add
add
push
add
and
add
add
push
sbb
cmp
sbb
add
add
jmp
and
add
add
out
add
and
add
pop
pushf
and
add
push
sbb
cmp
add
cmp
(bad)
(bad)
cmp
(bad)
call
adc
or
add
xchg
pushf
and
add
cmp
(bad)
jmp
xchg
add
add
or
add
pop
dec
add
and
push
sbb
push
cmp
adc
add
and
add
add
push
add
and
add
add
adc
(bad)
jmp
push
add
add
sbb
add
pop
dec
add
and
add
add
(bad)
jmp
push
add
sbb
add
and
add
add
push
add
add
and
add
dec
sbb
cmp
and
add
cmp
jmp
add
add
sub
add
pop
dec
add
and
jmp
add
add
xor
add
pop
dec
add
and
add
add
mov
or
add
or
add
and
add
add
and
push
sbb
cmp
(bad)
jmp
jl
add
and
add
add
push
add
and
add
add
pop
jmp
add
add
and
add
pop
dec
add
and
add
add
push
sbb
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
push
cmp
jmp
adc
and
add
add
data16
add
pop
add
add
and
add
add
push
sbb
pop
cmp
jmp
add
add
pop
add
add
push
add
and
add
add
push
sbb
cmp
mov
(bad)
(bad)
cmp
call
adc
and
add
add
mov
xor
pushf
and
add
add
mov
adc
adc
push
xchg
pushf
and
add
add
push
sbb
cmp
add
cmp
or
add
add
add
dec
add
cmp
or
add
sldt
add
or
add
cmp
(bad)
jmp
xchg
add
add
xor
add
pop
dec
add
and
add
add
push
sbb
cmp
pop
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
pop
add
cmp
add
cmp
call
add
add
cmp
dec
add
and
or
(bad)
call
add
or
add
add
push
sbb
pop
cmp
out
(bad)
dec
add
adc
add
and
add
add
sldt
add
and
add
add
fsub
(bad)
(bad)
dec
add
adc
add
dec
add
dec
sbb
cmp
pop
add
cmp
add
add
dec
add
add
push
add
and
add
add
push
sbb
pop
cmp
pop
or
add
xchg
pushf
and
add
add
push
sbb
pop
cmp
(bad)
dec
add
adc
add
and
cmp
add
pop
pushf
and
add
dec
sbb
cmp
add
cmp
(bad)
dec
add
adc
add
and
add
and
add
add
and
add
add
push
sbb
pop
cmp
out
jmp
xchg
add
add
inc
add
add
push
add
and
add
add
adc
(bad)
jmp
xchg
add
add
xor
add
pop
dec
add
and
add
add
cli
out
(bad)
dec
add
or
add
and
add
add
push
add
add
and
add
add
push
sbb
push
cmp
out
jmp
cmps
add
add
inc
add
add
push
add
and
sbb
cmp
or
add
sbb
add
dec
add
dec
sbb
pop
cmp
or
add
pop
add
add
or
add
dec
sbb
cmp
push
add
add
add
and
add
add
or
add
pop
pushf
and
add
dec
sbb
cmp
add
cmp
(bad)
dec
add
or
or
add
dec
sbb
pop
cmp
out
jmp
inc
add
add
and
add
pop
dec
add
and
add
add
sub
(bad)
jmp
jne
add
and
add
pop
dec
add
and
add
add
push
sbb
cmp
out
(bad)
dec
add
pop
add
add
xchg
add
add
xor
add
pop
pushf
and
push
sbb
cmp
adc
add
loope
(bad)
(bad)
dec
add
push
add
add
jns
add
and
pushf
and
add
add
push
sbb
cmp
adc
add
push
add
add
mov
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
dec
add
add
jbe
add
pop
dec
add
and
jg
(bad)
jmp
push
add
add
inc
add
add
push
add
and
in
(bad)
dec
add
adc
pushf
add
add
xor
add
pop
pushf
and
add
add
dec
in
call
(bad)
adc
add
push
popa
adc
add
dec
add
add
push
sbb
pop
cmp
in
jmp
xor
add
and
add
add
push
add
and
add
dec
sbb
pop
cmp
in
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
adc
add
bound
add
cmp
in
(bad)
dec
add
or
add
dec
add
dec
sbb
push
cmp
in
jmp
xor
pop
add
add
push
add
and
add
dec
sbb
pop
cmp
or
add
pop
add
add
adc
add
and
add
add
and
add
dec
sbb
cmp
adc
add
dec
or
in
(bad)
dec
add
push
add
add
lods
add
add
xor
add
pop
pushf
and
add
add
addr16
jmp
pop
add
add
data16
add
push
add
and
add
add
inc
in
(bad)
dec
add
add
add
dec
add
cmp
in
(bad)
dec
add
add
retf
add
add
inc
add
add
and
add
cmp
in
jmp
or
add
and
add
pop
dec
add
and
add
add
(bad)
jecxz
jmp
pusha
add
add
pop
add
add
push
add
and
add
cmp
jecxz
call
add
sbb
add
and
add
dec
sbb
cmp
adc
add
(bad)
jecxz
jmp
lods
add
add
cmp
add
pop
dec
add
and
add
add
push
sbb
cmp
or
add
or
add
dec
add
cmp
sbb
add
and
add
pop
dec
add
and
add
dec
sbb
pop
cmp
jmp
add
add
add
add
push
add
and
add
dec
sbb
push
cmp
(bad)
(bad)
dec
add
or
or
add
cmp
jecxz
(bad)
dec
add
or
add
and
add
add
push
add
add
and
add
cmp
jecxz
(bad)
dec
add
or
mov
push
sbb
cmp
add
cmp
jmp
(bad)
cmp
jecxz
jmp
mov
add
and
add
pop
dec
add
and
add
add
in
loop
(bad)
dec
add
or
add
dec
add
cmp
loop
jmp
in
add
and
add
push
add
and
push
sbb
cmp
or
add
adc
pushf
add
add
xor
add
pop
pushf
and
push
sbb
cmp
adc
add
push
repz
(bad)
cmp
or
add
adc
add
and
add
add
push
add
add
and
add
add
imul
jmp
test
cmp
dec
add
and
add
add
push
loop
jmp
test
add
and
add
pop
dec
add
and
add
add
xor
(bad)
call
cmp
fild
add
cmp
loop
jmp
movs
add
add
aaa
add
add
push
add
and
add
dec
sbb
cmp
add
add
(bad)
(bad)
dec
add
adc
or
add
dec
sbb
cmp
add
cmp
loope
jmp
rol
add
data16
add
push
add
and
add
add
push
sbb
cmp
loope
(bad)
dec
add
or
add
and
add
and
add
and
stos
loope
(bad)
dec
add
sbb
stc
add
add
push
add
add
and
and
(bad)
dec
add
or
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
inc
add
add
and
add
dec
sbb
cmp
(bad)
dec
add
adc
add
and
add
add
daa
add
add
and
add
cmp
loope
(bad)
dec
add
or
add
dec
add
cmp
loope
(bad)
dec
add
or
add
and
cmp
pushf
and
add
dec
sbb
cmp
loopne
(bad)
dec
add
add
add
dec
add
cmp
loopne
(bad)
dec
add
push
add
add
fld
add
and
add
pop
pushf
and
add
dec
sbb
cmp
adc
add
jae
(bad)
(bad)
cmp
or
add
push
add
add
int
add
and
add
and
add
push
sbb
cmp
add
cmp
push
add
cmp
adc
pushf
and
add
add
push
(bad)
call
pop
cmp
adc
add
fadd
add
cmp
(bad)
jmp
pop
add
add
or
add
pop
dec
add
and
add
add
dec
loopne
jmp
int
add
and
add
push
add
and
add
add
push
sbb
cmp
loopne
jmp
dec
add
add
sub
add
pop
dec
add
and
add
add
adc
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
cmp
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
jmp
fld
add
and
add
pop
dec
add
and
add
add
lods
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
xor
add
adc
and
add
add
jl
(bad)
call
or
cmp
sldt
and
add
cmp
(bad)
jmp
xchg
add
and
add
pop
dec
add
and
add
add
pop
(bad)
jmp
mov
add
add
push
add
and
add
add
cmp
(bad)
call
pop
adc
pop
cmp
push
add
adc
and
sub
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
jmp
mov
aas
add
add
push
add
and
add
add
stc
fdivrp
(bad)
dec
add
pop
add
add
aaa
add
add
arpl
add
pop
pushf
and
add
cmp
fdivrp
jmp
and
add
add
push
add
and
add
add
mov
or
add
add
mov
add
and
add
pop
pushf
and
add
add
call
add
add
add
dec
add
cmp
or
add
pop
add
add
or
add
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
cmp
(bad)
(bad)
jle
add
add
imul
and
add
add
push
sbb
cmp
fdivrp
jmp
xor
add
and
add
add
push
add
and
add
add
push
sbb
cmp
or
add
add
adc
(bad)
jmp
je
add
and
add
pop
dec
add
and
add
dec
sbb
cmp
(bad)
(bad)
dec
add
push
add
add
mov
add
and
pushf
and
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
push
add
add
and
add
cmp
jmp
add
pop
dec
add
and
add
add
mov
repnz
add
push
add
add
push
add
and
add
cmp
pushf
add
add
xor
add
pop
dec
add
and
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
inc
add
add
and
add
cmp
add
add
and
add
pop
dec
add
and
add
add
sbb
(bad)
jmp
icebp
add
add
push
add
add
push
add
and
add
add
push
sbb
pop
cmp
fdivr
(bad)
dec
add
add
add
dec
add
cmp
fdivr
(bad)
dec
add
adc
add
dec
add
dec
sbb
cmp
rcr
(bad)
dec
add
add
add
and
add
and
add
and
add
add
movs
fdivr
jmp
dec
add
add
jne
add
pop
dec
add
and
add
dec
sbb
cmp
add
jbe
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
add
add
push
sbb
cmp
or
add
ja
(bad)
(bad)
cmp
mov
data16
add
push
add
and
add
cmp
fdivr
(bad)
dec
add
adc
add
and
add
add
and
add
add
add
(bad)
(bad)
dec
add
add
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
dec
add
cmp
(bad)
jmp
pop
add
add
sub
dec
add
and
add
cmp
dec
add
add
push
add
pop
dec
add
and
add
dec
sbb
cmp
int
add
cmp
or
add
add
add
and
cmp
add
pop
pushf
and
add
add
jb
(bad)
jmp
sub
and
add
pop
dec
add
and
push
sbb
cmp
add
cmp
jmp
sldt
add
adc
add
pop
dec
add
and
aaa
(bad)
(bad)
dec
add
adc
pop
add
add
daa
(bad)
jmp
xor
das
add
add
push
add
and
add
cmp
(bad)
jmp
and
add
lea
push
push
add
in
add
dec
sbb
push
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
and
add
dec
sbb
cmp
or
add
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
or
add
push
add
add
or
add
cmp
or
add
or
add
and
add
and
add
pop
pushf
and
add
add
push
sbb
push
cmp
(bad)
(bad)
dec
add
add
add
and
cmp
pushf
and
dec
(bad)
(bad)
dec
add
pop
add
add
or
add
dec
sbb
cmp
add
cmp
cmp
add
adc
pop
add
add
push
sbb
push
cmp
(bad)
(bad)
dec
add
adc
add
dec
add
cmp
fcos
(bad)
dec
add
or
jg
add
and
add
pop
pushf
and
add
cmp
fcos
(bad)
dec
add
sbb
add
and
add
add
inc
add
add
and
add
add
push
sbb
cmp
or
add
cmp
mov
(bad)
(bad)
dec
add
add
add
dec
add
dec
sbb
cmp
or
add
pop
add
add
or
add
dec
sbb
push
cmp
(bad)
jmp
aam
add
and
add
pop
dec
add
and
gs
(bad)
dec
add
adc
add
and
add
add
inc
add
add
and
add
add
push
sbb
cmp
fcos
(bad)
dec
add
sbb
pop
add
add
add
add
and
add
sbb
(bad)
(bad)
dec
add
or
add
dec
add
cmp
fcos
jmp
sahf
add
add
xor
add
pop
dec
add
and
add
add
jmp
add
or
add
dec
add
dec
sbb
pop
cmp
fdivr
(bad)
dec
add
pop
add
add
leave
add
add
inc
add
add
and
add
cmp
movups
cmp
or
add
(bad)
or
add
fimul
add
adc
add
xchg
fdivr
(bad)
dec
add
add
add
and
sub
add
pop
pushf
and
add
add
push
sbb
pop
cmp
(bad)
jmp
sbb
add
and
add
pop
dec
add
and
add
add
push
sbb
push
cmp
(bad)
jmp
mov
xor
dec
add
and
push
sbb
cmp
add
cmp
fdivr
jmp
aad
add
and
add
pop
dec
add
and
add
add
sbb
(bad)
(bad)
dec
add
push
add
add
or
add
dec
sbb
pop
cmp
xlat
(bad)
(bad)
dec
add
add
add
and
aas
add
add
and
add
cmp
xlat
(bad)
(bad)
dec
add
push
add
add
push
add
add
sub
add
pop
pushf
and
add
add
push
sbb
cmp
mov
jne
add
pop
dec
add
and
push
sbb
cmp
pop
add
cmp
adc
and
add
add
or
add
dec
sbb
cmp
(bad)
(bad)
dec
add
add
loope
add
and
add
pop
pushf
and
add
dec
sbb
push
cmp
(bad)
dec
add
add
or
add
cmp
xlat
(bad)
jmp
fld
add
and
add
pop
dec
add
and
add
add
daa
xlat
(bad)
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
xlat
(bad)
jmp
jmp
dec
add
add
push
add
and
add
jmp
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
dec
add
or
add
and
add
add
add
pushf
and
add
add
push
sbb
pop
cmp
retf
add
daa
add
add
push
add
and
add
add
popf
(bad)
(bad)
(bad)
dec
add
adc
add
dec
add
dec
sbb
push
cmp
jmp
rol
add
inc
add
add
push
add
and
add
cmp
(bad)
(bad)
dec
add
adc
add
and
cmp
add
pop
pushf
and
add
dec
sbb
cmp
cmp
(bad)
jmp
sti
add
add
push
add
add
push
add
and
es
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
(bad)
(bad)
jmp
push
add
add
sbb
add
pop
dec
add
and
add
cmp
aad
(bad)
dec
add
or
add
dec
add
dec
sbb
cmp
aad
(bad)
dec
add
pop
add
add
fwait
add
add
xor
add
pop
pushf
and
mov
pop
add
add
and
add
pop
dec
add
and
push
sbb
cmp
add
(bad)
(bad)
cmp
or
add
add
add
and
add
add
inc
add
add
and
add
add
push
sbb
cmp
add
loope
(bad)
cmp
(bad)
jmp
dec
add
add
inc
add
add
push
add
and
add
cmp
(bad)
(bad)
dec
add
add
add
and
add
and
add
pop
pushf
and
add
add
push
sbb
cmp
out
lock
(bad)
cmp
add
add
xchg
add
add
and
add
dec
sbb
cmp
clc
aam
jmp
sub
add
and
add
pop
dec
add
and
push
sbb
cmp
aam
(bad)
dec
add
or
add
and
add
and
add
add
and
push
sbb
pop
cmp
or
add
add
add
dec
add
cmp
or
add
push
add
add
push
add
add
adc
add
pop
pushf
and
add
add
push
sbb
pop
cmp
(bad)
jmp
add
add
sub
add
pop
dec
add
and
add
add
push
sbb
cmp
add
add
sub
(bad)
(bad)
cmp
(bad)
dec
add
sbb
or
add
cmp
aam
(bad)
dec
add
or
add
dec
add
cmp
aam
(bad)
jle
add
add
les
add
leave
add
add
into
add
add
and
add
add
std
sar
call
lea
add
adc
cmp
add
add
enter
cmp
add
and
add
cmp
add
add
adc
jle
add
add
sbb
pushf
and
add
add
pop
add
add
adc
jle
add
add
pop
pop
xchg
pushf
cmp
add
add
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
cmp
add
add
and
push
push
add
cmp
(bad)
(bad)
call
adc
jle
add
add
xchg
pushf
and
add
add
push
push
add
cmp
test
(bad)
call
adc
jle
add
add
sbb
pushf
and
add
add
(bad)
(bad)
(bad)
call
adc
cmp
add
add
xor
add
cmp
add
add
xor
(bad)
jmp
pop
add
push
cmp
(bad)
(bad)
jmp
pop
add
push
cmp
push
add
push
cmp
(bad)
(bad)
jmp
push
add
push
cmp
(bad)
(bad)
call
add
push
add
add
fld
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
and
add
add
adc
adc
cmp
add
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
and
add
and
add
add
(bad)
(bad)
(bad)
cmp
add
cmp
cmps
(bad)
(bad)
jmp
push
add
push
cmp
(bad)
(bad)
(bad)
fisttp
push
add
add
fld
add
add
sub
push
sub
push
add
push
cmp
push
add
push
cmp
sar
jmp
push
add
push
cmp
sar
jmp
push
add
push
cmp
sar
jmp
pop
add
push
cmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
push
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
pop
add
push
cmp
fdivr
jmp
pop
add
push
cmp
fdivr
jmp
pop
add
push
cmp
fdivr
jmp
push
add
push
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
push
add
or
sbb
(bad)
jmp
push
add
push
cmp
(bad)
jmp
pop
add
push
cmp
loopne
jmp
dec
add
push
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
push
add
push
cmp
loop
jmp
pop
add
push
cmp
jecxz
jmp
push
add
push
cmp
in
jmp
pop
add
push
cmp
in
jmp
pop
add
push
cmp
add
push
cmp
jmp
pop
add
push
cmp
pop
add
push
cmp
out
jmp
push
add
push
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
push
add
push
cmp
push
add
push
cmp
call
add
push
cmp
call
add
push
cmp
(bad)
jmp
pop
add
push
cmp
pop
add
push
cmp
push
add
push
cmp
jmp
jmp
push
add
push
cmp
jmp
jmp
inc
add
push
cmp
inc
add
push
cmp
push
add
push
cmp
jmp
jmp
pop
add
push
cmp
in
(bad)
jmp
push
add
push
cmp
in
(bad)
jmp
pop
add
push
cmp
in
(bad)
jmp
pop
add
push
cmp
push
add
push
cmp
out
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
push
add
push
cmp
pop
add
push
cmp
out
(bad)
jmp
push
add
push
cmp
out
(bad)
push
add
or
(bad)
lock
jmp
dec
add
push
cmp
lock
push
add
or
or
(bad)
jmp
push
add
push
cmp
repnz
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
pop
add
push
cmp
repz
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
pop
add
push
cmp
add
push
cmp
dec
add
push
cmp
pop
add
push
cmp
idiv
jmp
inc
add
push
cmp
dec
add
push
cmp
idiv
jmp
dec
add
push
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
push
add
push
cmp
push
add
push
cmp
jmp
pop
add
push
cmp
stc
(bad)
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
pop
add
push
cmp
(bad)
jmp
pop
add
push
cmp
cli
(bad)
jmp
push
add
push
cmp
sti
(bad)
jmp
add
or
sub
push
add
push
cmp
sti
(bad)
jmp
inc
xor
add
add
add
add
add
das
add
push
add
add
add
add
add
add
das
add
test
add
push
xor
add
add
add
add
add
xor
add
cmp
add
add
adc
or
inc
call
add
add
dec
sub
add
inc
add
add
push
dec
and
add
cmp
sub
add
add
adc
pop
adc
and
add
call
sbb
and
add
add
push
sub
add
or
add
or
add
dec
add
cmp
sub
add
or
add
or
add
dec
add
dec
xor
cmp
add
add
cmp
sub
add
or
add
add
or
add
dec
xor
cmp
sub
add
sbb
pop
add
add
push
and
add
dec
xor
cmp
sbb
pop
adc
pusha
add
add
(bad)
dec
add
or
or
add
cmp
add
dec
add
add
add
dec
add
cmp
add
and
sub
add
pop
dec
daa
add
add
sub
add
adc
and
add
push
xor
cmp
aaa
add
cmp
add
dec
add
or
add
and
add
add
aaa
add
add
and
push
xor
cmp
sub
add
adc
cmp
add
cmp
add
imul
adc
and
add
dec
xor
pop
cmp
daa
add
and
add
add
xor
add
pop
dec
daa
add
push
add
add
push
xor
cmp
add
cmp
(bad)
(bad)
cmp
daa
add
adc
cmp
add
and
add
push
xor
cmp
xor
add
and
add
add
push
daa
add
movs
add
add
fwait
daa
add
and
add
add
xor
add
pop
dec
or
and
push
xor
push
cmp
add
and
cmp
add
pop
dec
and
add
dec
xor
cmp
add
cmp
add
dec
add
pop
add
add
or
add
cmp
add
and
add
add
push
daa
add
sahf
add
add
and
add
adc
adc
pop
pop
inc
or
add
and
add
add
or
or
add
or
add
dec
add
cmp
add
dec
add
or
add
dec
add
add
push
xor
cmp
xor
add
cmp
add
and
xor
add
pop
dec
or
and
add
dec
add
push
add
add
out
add
and
add
and
add
dec
xor
cmp
outs
add
add
adc
add
pop
dec
daa
add
or
add
cmp
adc
imul
add
add
gs
dec
add
adc
add
and
add
add
outs
add
add
and
add
add
push
xor
cmp
add
cmp
add
cmp
add
adc
cmp
add
push
push
ins
xor
add
add
sub
add
push
adc
and
add
cmp
add
and
add
and
add
add
push
or
and
push
xor
cmp
add
cmp
and
add
add
pop
add
add
push
daa
add
sub
add
dec
xor
cmp
xor
and
pop
and
retf
add
or
add
sldt
add
or
add
dec
xor
pop
cmp
or
add
sbb
ja
add
and
add
add
and
add
dec
xor
cmp
xor
add
and
xchg
pushf
and
add
dec
xor
pop
cmp
add
dec
add
push
add
add
or
add
dec
xor
cmp
add
dec
add
add
add
dec
add
add
xor
sbb
and
add
add
inc
add
add
pusha
add
add
and
add
add
sbb
sbb
and
add
add
or
add
cmp
and
add
and
add
and
add
add
push
daa
add
rol
add
dec
xor
cmp
add
cmp
and
add
xchg
add
add
pop
add
add
push
and
add
cmp
and
add
add
add
adc
call
add
dec
add
add
or
add
dec
xor
pop
cmp
or
add
add
add
and
cmp
add
pop
pushf
and
add
add
jnp
add
adc
sbb
adc
scas
add
add
push
xor
push
cmp
add
push
adc
and
add
cmp
add
jle
add
add
pop
add
jo
mov
add
cmp
and
add
cmp
and
add
or
add
sbb
add
and
sub
add
pop
pushf
and
add
add
adc
add
or
add
pop
add
add
or
add
dec
xor
pop
cmp
and
add
or
add
or
add
dec
add
dec
xor
cmp
add
cmp
and
add
or
add
adc
add
dec
add
add
push
xor
cmp
add
add
adc
add
pop
dec
and
add
dec
xor
cmp
cwde
add
add
xor
add
pop
dec
and
add
dec
xor
cmp
xor
add
jge
add
dec
add
add
add
dec
add
cmp
add
dec
add
sldt
add
or
add
cmp
add
dec
add
pop
add
add
or
add
cmp
and
add
or
add
or
add
and
add
and
add
add
and
add
add
push
xor
cmp
and
add
xchg
add
add
pop
add
add
push
or
and
add
add
std
and
add
or
add
add
add
dec
add
dec
xor
cmp
and
add
add
add
xor
add
pop
dec
daa
add
sbb
shl
add
pop
adc
aas
adc
add
and
add
dec
xor
cmp
or
add
sldt
add
or
add
dec
xor
cmp
sbb
push
and
and
add
and
movups
sbb
add
add
push
or
add
or
add
dec
add
add
push
xor
push
cmp
add
and
xor
add
pop
dec
and
add
cmp
and
add
push
add
add
pop
add
add
push
or
and
add
add
sbb
add
and
add
and
dec
daa
add
add
add
cmp
and
add
data16
add
add
add
push
or
and
add
add
push
xor
cmp
add
cmp
and
add
or
add
adc
or
add
cmp
and
add
or
add
pop
add
add
add
add
push
add
add
and
add
add
push
xor
cmp
adc
mov
push
xor
cmp
xor
add
xchg
and
add
adc
and
add
push
xor
push
cmp
add
and
add
and
add
pop
dec
or
and
add
cmp
add
adc
adc
adc
imul
xchg
pusha
adc
and
add
add
push
xor
pop
cmp
add
adc
pushf
and
add
add
push
xor
cmp
and
add
or
add
add
add
and
add
and
add
add
and
add
add
push
xor
pop
cmp
add
dec
add
or
add
dec
add
dec
xor
cmp
and
add
or
add
add
je
add
and
add
add
and
add
add
shl
add
dec
add
add
add
and
add
and
add
add
and
add
dec
xor
cmp
add
cmp
push
add
or
add
and
add
and
add
add
and
add
cmp
or
add
add
add
and
add
add
push
add
add
and
push
xor
cmp
xor
add
mov
pop
and
add
or
add
or
add
and
add
and
add
pop
pushf
and
add
add
push
xor
cmp
push
push
sbb
add
and
push
xor
cmp
das
add
cmp
and
add
or
add
or
add
dec
add
dec
xor
cmp
das
add
cmp
pop
add
adc
adc
aas
add
add
and
loop
add
adc
pop
sbb
xchg
pop
sbb
adc
pop
sbb
xchg
pop
adc
adc
pop
pop
pop
loopne
push
bound
adc
pop
loopne
pusha
adc
and
add
cmp
adc
add
mov
pushf
pop
add
dec
add
add
add
and
add
add
ins
add
add
and
add
dec
xor
cmp
add
dec
add
add
add
and
add
add
or
add
pop
pushf
and
add
add
bound
add
and
add
add
and
add
pop
dec
daa
add
fiadd
add
cmp
add
and
add
and
add
pop
dec
and
add
cmp
pop
add
dec
add
add
add
dec
add
add
adc
add
dec
add
add
jmp
add
and
add
pop
pushf
and
add
add
icebp
push
add
dec
add
or
add
and
add
and
add
and
add
dec
xor
cmp
push
add
and
cmp
add
pop
dec
daa
add
xor
add
dec
xor
cmp
mov
add
dec
add
add
add
and
add
add
push
add
add
and
add
push
xor
cmp
add
cmp
sbb
add
sbb
sbb
div
out
dec
sbb
add
lahf
dec
push
sbb
push
adc
and
mov
add
repz
add
cmp
add
repz
add
or
add
(bad)
inc
add
dec
add
adc
push
and
and
add
dec
add
(bad)
inc
add
dec
add
adc
push
push
add
movs
xchg
add
or
add
or
add
push
sbb
add
dec
add
(bad)
inc
add
dec
add
adc
push
and
and
add
dec
add
(bad)
inc
add
dec
add
adc
push
push
add
adc
add
dec
adc
pop
dec
sbb
add
or
add
push
sbb
add
or
add
dec
sub
dec
add
push
or
add
dec
add
push
dec
sub
dec
add
or
add
dec
add
dec
and
dec
add
and
add
add
add
add
add
add
or
add
pop
dec
es
or
add
ins
dec
add
pop
dec
add
pop
ins
dec
add
add
or
add
dec
push
add
add
dec
add
pop
ins
dec
or
add
pop
ins
dec
es
or
add
or
add
fs
dec
add
dec
add
or
add
push
add
dec
add
or
add
bound
push
add
dec
add
or
add
push
add
dec
add
or
add
or
push
add
dec
add
or
add
push
add
dec
add
adc
or
add
or
add
or
add
push
add
dec
add
ins
pop
adc
and
sbb
and
add
add
dec
add
add
push
or
and
push
xor
push
cmp
add
and
add
add
add
add
push
daa
add
add
add
dec
sbb
add
sub
pop
adc
js
add
cmp
sbb
add
add
pop
adc
and
add
add
push
xor
cmp
sbb
add
or
add
add
add
dec
add
cmp
sbb
add
pop
pop
pop
adc
and
pop
sbb
add
or
add
adc
adc
sbb
sub
adc
sub
popa
rcr
dec
xor
cmp
sbb
add
inc
add
adc
and
add
add
push
xor
pop
cmp
sbb
add
or
add
add
add
dec
add
dec
xor
cmp
test
add
adc
pop
pop
adc
and
add
add
push
xor
push
cmp
push
push
ds
or
add
cmp
add
and
add
add
dec
and
add
dec
xor
cmp
add
sub
add
and
add
pop
dec
daa
add
xchg
add
add
push
xor
cmp
add
dec
add
adc
add
dec
add
add
push
xor
pop
cmp
sbb
add
les
add
and
add
pop
dec
and
add
cmp
or
add
or
or
add
dec
xor
cmp
sub
add
in
push
add
cmp
sbb
add
sbb
adc
add
pop
dec
daa
add
cmp
add
dec
xor
pop
cmp
sbb
add
sbb
and
adc
fild
add
cmp
or
add
sbb
add
and
add
add
and
mov
add
add
and
add
pop
dec
daa
add
jge
add
dec
xor
cmp
or
add
jbe
add
dec
add
pop
add
add
pop
add
add
jo
add
pop
pushf
and
add
add
push
xor
cmp
add
adc
cmp
jmp
add
and
add
and
add
add
push
or
and
add
add
sub
add
add
pop
add
add
push
or
and
add
add
push
xor
cmp
add
cmp
sbb
add
or
add
sbb
xchg
add
add
xor
add
pop
pushf
and
in
add
dec
add
adc
add
dec
add
cmp
sbb
add
or
add
push
add
add
mov
add
and
add
pop
pushf
and
push
xor
push
cmp
sbb
and
add
dec
add
dec
xor
push
cmp
or
add
or
sahf
add
add
sbb
add
pop
pushf
and
add
add
push
xor
push
cmp
add
dec
add
or
add
and
jno
add
pop
pushf
and
add
add
dec
sbb
add
sbb
pop
sbb
xchg
pop
sbb
sbb
pop
sbb
xchg
pop
adc
adc
adc
pop
pop
loopne
push
bound
sbb
pop
loopne
pusha
adc
and
add
cmp
sbb
add
or
add
adc
add
and
add
and
add
pop
pushf
and
add
add
push
xor
cmp
sbb
add
idiv
(bad)
call
pop
adc
pop
adc
and
add
add
push
xor
cmp
sbb
add
or
add
or
add
dec
add
cmp
cs
sub
add
sbb
add
cmp
or
add
add
add
and
cmp
add
pop
pushf
and
add
add
push
xor
cmp
mov
add
dec
add
adc
add
and
add
and
add
add
and
add
add
push
xor
push
cmp
add
adc
adc
adc
mov
add
adc
and
add
dec
xor
cmp
inc
sbb
add
or
add
adc
add
and
add
add
ins
add
add
and
add
dec
xor
cmp
add
pop
out
(bad)
(bad)
cmp
sbb
add
nop
stc
(bad)
call
adc
pop
and
or
add
dec
add
add
add
dec
add
cmp
pop
add
adc
imul
test
add
cmp
pop
add
dec
add
sbb
add
and
add
add
pop
add
add
and
add
add
push
xor
cmp
or
add
sbb
add
dec
add
add
movs
pop
add
dec
add
add
add
dec
add
cmp
sbb
and
add
add
mov
add
and
add
add
and
add
dec
xor
cmp
add
cmp
(bad)
call
sbb
and
sbb
jbe
add
cmp
add
dec
add
or
out
add
and
add
pop
pushf
and
xor
add
dec
add
add
add
and
sub
add
pop
pushf
and
add
dec
xor
push
cmp
add
and
add
add
dec
sbb
and
add
dec
xor
cmp
push
add
adc
sbb
pop
and
add
add
in
add
and
add
add
push
or
and
add
dec
xor
cmp
push
add
dec
add
adc
add
dec
add
cmp
or
add
sbb
add
and
add
add
pop
add
add
and
add
dec
xor
cmp
add
cmp
add
cmp
add
adc
push
aas
sub
add
and
xor
cmp
bound
add
dec
add
sbb
add
dec
add
dec
xor
cmp
fcomp
add
cmp
add
dec
add
sldt
add
or
add
cmp
push
add
and
add
and
add
add
push
or
and
add
add
push
xor
pop
cmp
push
add
and
add
and
add
pop
dec
or
and
push
xor
pop
cmp
adc
sbb
and
add
add
je
add
and
pushf
and
push
xor
push
cmp
adc
sbb
and
xor
add
and
add
add
and
add
add
push
xor
push
cmp
into
add
add
sub
add
pop
dec
and
add
cmp
or
add
or
add
dec
add
dec
xor
cmp
and
in
(bad)
(bad)
cmp
add
dec
add
add
add
and
add
and
add
add
and
inc
adc
add
add
jne
add
pop
dec
daa
add
inc
add
add
sub
test
add
and
add
add
push
or
and
add
add
or
add
and
add
add
push
or
and
add
add
push
xor
cmp
adc
add
and
pusha
and
add
add
ficom
add
or
add
add
add
and
add
add
and
add
add
push
xor
cmp
lahf
or
add
mov
add
dec
add
or
add
and
add
outs
add
add
and
push
xor
cmp
or
add
add
add
dec
add
add
push
xor
cmp
add
dec
add
pop
add
add
or
add
dec
xor
cmp
and
add
push
adc
add
or
add
sbb
add
and
add
add
sub
add
pop
pushf
and
add
dec
xor
pop
cmp
adc
add
or
add
or
add
and
add
and
pushf
and
push
xor
cmp
mov
add
add
dec
add
add
add
dec
add
cmp
adc
add
or
add
add
add
dec
add
add
push
xor
cmp
adc
add
or
add
sldt
add
or
add
cmp
add
add
sub
dec
daa
add
add
add
push
xor
cmp
or
add
add
add
dec
add
dec
xor
cmp
add
dec
add
adc
add
and
xor
add
pop
pushf
and
add
add
push
xor
cmp
add
add
sldt
add
push
and
add
cmp
adc
add
or
add
add
add
dec
add
cmp
adc
add
or
add
add
add
dec
add
cmp
adc
add
and
adc
pop
xchg
pushf
and
add
cmp
or
add
push
add
add
or
add
cmp
adc
add
inc
add
and
add
push
or
and
push
xor
push
cmp
adc
add
lds
add
and
add
push
or
and
add
cmp
or
add
add
add
and
add
and
add
pop
pushf
and
add
add
xchg
adc
add
or
add
pop
add
add
in
add
and
add
and
add
add
jo
add
dec
add
adc
add
and
js
add
pop
pushf
and
add
add
push
xor
cmp
add
dec
add
adc
add
and
add
adc
add
pop
pushf
and
add
dec
xor
pop
cmp
xchg
add
add
xor
add
pop
dec
and
add
cmp
adc
add
adc
add
and
add
dec
xor
cmp
adc
add
or
add
sbb
add
and
add
add
and
add
add
fist
add
dec
add
add
add
and
inc
add
add
and
add
add
push
xor
cmp
add
cmp
add
adc
pop
adc
and
inc
add
rcr
cmp
push
add
add
sbb
dec
and
add
cmp
add
dec
add
or
add
dec
add
cmp
add
dec
add
add
add
and
xor
add
pop
pushf
and
push
xor
cmp
and
add
cwde
push
add
cmp
adc
add
add
add
and
add
pop
dec
and
add
dec
xor
pop
cmp
adc
add
or
add
or
add
and
add
add
and
add
add
push
xor
cmp
repz
add
adc
add
and
add
pop
dec
and
add
cmp
adc
add
adc
imul
aas
add
add
int3
adc
add
or
add
add
add
dec
add
dec
xor
cmp
push
add
push
add
add
or
add
dec
xor
cmp
or
add
adc
add
and
add
add
dec
add
add
and
ins
adc
add
or
add
push
add
add
jno
add
and
add
pop
pushf
and
add
dec
xor
push
cmp
add
dec
add
or
add
and
add
and
add
pop
pushf
and
add
add
xor
add
dec
add
or
add
dec
add
add
push
xor
cmp
and
add
or
or
add
or
add
and
add
data16
add
and
repnz
and
add
add
dec
add
add
push
or
and
add
add
ror
add
dec
add
and
xchg
add
cmp
sldt
and
add
add
push
or
and
add
add
test
add
cmp
in
(bad)
call
pop
push
sbb
add
add
push
xor
cmp
or
add
or
add
and
add
add
push
add
add
and
add
dec
xor
pop
cmp
add
dec
add
sldt
add
or
add
cmp
add
dec
add
add
add
dec
add
add
push
xor
cmp
sldt
dec
add
add
add
and
add
and
add
and
push
sldt
adc
push
bound
and
nop
add
add
push
sldt
and
add
add
push
and
add
dec
xor
cmp
cld
out
(bad)
cmp
push
add
dec
add
pop
add
add
or
add
cmp
push
add
and
add
and
add
pop
dec
daa
add
or
add
dec
xor
cmp
or
add
sldt
add
or
add
cmp
or
add
sbb
pop
add
dec
xor
push
cmp
or
add
add
add
and
jbe
add
pop
pushf
and
add
cmp
add
dec
add
add
cdq
add
add
xor
add
pop
pushf
and
push
xor
cmp
push
add
and
add
and
add
add
push
or
and
add
dec
xor
cmp
push
add
cmp
sbb
add
and
add
and
add
push
and
add
cmp
or
sbb
and
hlt
add
add
push
add
add
and
add
cmp
or
add
add
imul
and
add
add
into
or
sbb
and
add
add
or
add
dec
xor
cmp
test
adc
and
add
cmp
pop
add
add
adc
dec
or
and
add
dec
xor
cmp
add
adc
add
add
xchg
add
add
jb
add
dec
add
adc
add
and
sub
add
pop
pushf
and
add
add
dec
or
add
add
pop
add
add
push
or
and
add
add
xor
push
add
or
add
dec
add
and
adc
add
and
xor
dec
daa
add
repnz
add
push
xor
cmp
or
add
or
add
add
add
dec
add
dec
xor
pop
cmp
or
add
or
add
adc
add
and
add
add
pop
add
add
and
xor
push
cmp
cmp
add
add
pop
dec
daa
add
ret
add
movs
or
add
sbb
sub
sbb
and
add
dec
xor
cmp
add
cmp
xor
add
and
add
add
push
and
add
dec
xor
cmp
add
cmp
in
(bad)
cmp
add
and
xor
dec
and
add
cmp
add
dec
add
sbb
or
add
dec
xor
push
cmp
or
add
or
add
add
add
and
add
das
add
add
and
push
xor
cmp
sbb
or
add
call
add
pop
dec
and
add
cmp
or
add
lea
add
and
add
add
push
or
and
push
xor
cmp
or
add
or
add
add
add
dec
add
cmp
or
add
add
or
add
cmp
or
add
add
je
add
and
add
add
and
add
add
or
sbb
lods
add
add
je
add
cmp
add
adc
add
arpl
add
adc
or
sub
xchg
pushf
and
add
dec
xor
push
cmp
add
dec
add
push
add
add
or
add
and
add
add
and
add
dec
xor
cmp
sbb
add
pop
or
add
int3
add
add
inc
add
add
push
or
and
add
add
push
xor
cmp
sbb
add
std
or
add
add
adc
sbb
inc
add
pop
rcr
dec
xor
cmp
or
add
or
add
add
add
dec
add
add
lds
add
dec
add
add
ret
add
inc
add
add
and
push
xor
cmp
or
add
add
add
dec
add
cmp
or
add
and
add
push
and
add
cmp
add
dec
add
pop
add
add
or
add
dec
xor
pop
cmp
add
and
add
add
sub
add
pop
dec
daa
add
add
add
cmp
add
dec
add
pop
add
add
xor
add
and
add
add
and
add
dec
xor
pop
cmp
or
add
or
add
add
add
dec
add
cmp
or
add
or
add
add
or
add
dec
xor
cmp
or
add
ins
add
add
jp
add
pop
dec
daa
add
imul
or
add
or
add
push
add
add
or
add
dec
xor
pop
cmp
or
add
add
add
and
pop
add
add
and
add
cmp
cmp
add
and
add
pop
dec
or
and
add
add
jne
add
dec
add
add
add
dec
add
add
push
xor
cmp
mov
add
cmp
add
adc
adc
pop
adc
and
add
add
push
xor
push
cmp
std
add
add
push
add
add
push
or
and
add
dec
xor
pop
cmp
or
add
or
add
push
add
add
or
add
cmp
or
add
or
add
adc
add
dec
add
cmp
or
add
or
add
push
add
add
or
add
dec
xor
cmp
or
add
dec
add
add
cmp
add
pop
dec
and
add
dec
xor
cmp
adc
add
mov
mov
or
add
or
add
and
sub
add
pop
pushf
and
add
cmp
or
add
sbb
add
and
add
add
dec
add
add
and
add
add
imul
add
or
add
or
add
and
add
add
add
and
add
cmp
add
cmp
add
and
push
xor
cmp
add
cmp
sub
add
dec
add
or
add
dec
add
cmp
or
add
or
add
or
add
and
aas
add
add
and
add
add
push
xor
cmp
sbb
add
jmp
add
sbb
add
and
sub
pushf
and
add
cmp
pop
add
dec
add
push
add
add
or
add
dec
xor
pop
cmp
outs
add
add
sbb
add
pop
dec
or
and
add
add
push
xor
cmp
rol
add
and
add
pop
dec
and
add
cmp
add
or
add
sbb
add
and
xor
pushf
and
add
add
push
xor
cmp
add
dec
add
pop
add
add
or
add
dec
xor
cmp
pop
add
and
add
add
dec
push
add
add
add
cmp
or
add
pop
add
add
cmp
add
and
add
add
and
add
add
push
xor
cmp
push
add
dec
add
add
or
add
cmp
push
add
dec
add
sbb
or
add
dec
xor
cmp
push
add
and
add
add
push
add
add
push
or
and
add
cmp
or
add
sbb
add
and
add
and
add
pop
pushf
and
add
cmp
or
add
add
add
and
add
and
add
add
and
push
xor
cmp
add
dec
add
or
add
and
push
add
add
and
dec
push
add
cmp
out
(bad)
call
sbb
ds
(bad)
jmp
jg
add
dec
xor
cmp
adc
and
add
cmp
add
and
add
add
push
or
and
add
cmp
push
add
dec
add
sldt
add
cmp
add
and
add
pop
pushf
and
add
sbb
and
add
add
aas
add
add
pop
add
add
and
push
xor
cmp
pop
add
cmp
out
(bad)
(bad)
cmp
add
add
add
pop
add
add
push
or
and
add
add
push
xor
cmp
pop
add
cmp
or
bound
or
sldt
add
xchg
add
sbb
and
add
and
cmp
add
pop
pushf
and
add
dec
xor
cmp
push
add
cmp
add
add
fs
sbb
and
add
add
push
push
add
add
and
add
dec
xor
cmp
xchg
cld
(bad)
(bad)
cmp
add
add
add
inc
add
add
push
daa
add
xor
add
cmp
add
adc
pop
cmp
sub
mov
or
add
dec
add
adc
add
and
cmp
add
pop
pushf
and
add
add
in
add
and
add
add
dec
add
add
push
or
and
aam
add
adc
push
ds
pop
add
add
mov
pop
add
add
pop
add
add
push
daa
add
pop
add
add
mov
xor
add
and
add
add
push
and
add
cmp
or
add
pop
add
add
or
add
dec
xor
cmp
adc
(bad)
(bad)
cmp
add
dec
add
pop
add
add
or
add
cmp
add
dec
add
or
add
dec
add
add
push
xor
cmp
adc
add
add
or
add
add
add
and
add
add
push
add
add
and
push
xor
push
cmp
add
add
or
add
push
add
add
push
add
add
and
pushf
and
out
add
add
or
add
add
add
dec
add
add
into
add
add
and
adc
sbb
add
dec
xor
cmp
sbb
and
add
dec
add
dec
xor
cmp
or
push
add
add
push
and
add
dec
xor
cmp
adc
add
add
mov
add
add
push
or
and
add
dec
xor
cmp
adc
add
add
or
add
adc
add
and
xor
add
pop
pushf
and
add
cmp
add
add
or
add
push
add
add
or
add
cmp
add
add
push
add
add
xor
add
pop
dec
or
and
add
cmp
add
add
and
or
sub
xchg
pushf
and
add
cmp
add
add
or
add
pop
add
add
or
add
dec
xor
cmp
add
add
or
add
pop
add
add
xor
push
add
add
and
add
cmp
add
add
or
add
push
add
add
mov
add
and
add
pop
pushf
and
add
add
fwait
add
add
or
add
sbb
jmp
add
and
add
pop
pushf
and
push
xor
cmp
add
or
add
adc
add
and
sub
pushf
and
add
cmp
add
dec
add
or
add
and
add
add
sub
add
pop
pushf
and
add
add
push
xor
cmp
add
add
or
add
or
add
dec
add
add
push
xor
cmp
add
add
or
add
add
add
dec
add
dec
xor
pop
cmp
add
add
add
adc
pop
adc
and
add
add
adc
and
add
add
call
sub
add
mov
add
cmp
sub
jae
add
dec
xor
cmp
xlat
out
(bad)
(bad)
cmp
or
add
push
add
add
or
add
cmp
rol
add
inc
add
add
push
or
and
add
add
xchg
add
dec
add
or
jmp
add
pop
pushf
and
push
xor
cmp
add
jle
add
add
cmp
adc
add
or
add
push
xor
push
cmp
add
dec
add
add
add
and
add
and
add
pop
pushf
and
xor
add
dec
add
add
add
dec
add
add
push
xor
cmp
add
add
sub
(bad)
jmp
jge
add
dec
xor
cmp
add
add
or
add
or
add
dec
add
dec
xor
cmp
add
add
or
add
pop
add
add
jo
add
and
add
add
and
xor
cmp
mov
add
and
outs
add
add
push
or
and
add
add
push
xor
push
cmp
ins
add
add
dec
add
add
push
and
add
cmp
add
cmp
(bad)
jmp
and
add
add
jno
add
and
add
add
push
add
add
push
daa
add
jmp
pop
add
add
or
add
or
add
dec
add
cmp
add
and
cmp
add
pop
dec
daa
add
adc
add
cmp
add
add
or
add
push
add
add
ins
add
add
inc
add
add
cmp
(bad)
jmp
je
add
dec
xor
dec
add
add
add
out
(bad)
inc
(bad)
jmp
fdivr
inc
add
jge
add
push
jecxz
call
(bad)
push
repnz
(bad)
mov
in
(bad)
mov
out
(bad)
jmp
(bad)
call
(bad)
call
dec
loopne
call
(bad)
call
stc
(bad)
jmp
(bad)
call
(bad)
call
add
dec
loop
inc
(bad)
jl
(bad)
jmp
jmp
out
(bad)
(bad)
cmp
add
(bad)
sar
jmp
clc
(bad)
inc
repnz
(bad)
aas
loope
inc
jmp
inc
loopne
call
(bad)
(bad)
cmp
(bad)
jmp
(bad)
dec
(bad)
call
(bad)
jmp
out
call
add
add
call
out
(bad)
inc
repz
jmp
(bad)
dec
(bad)
inc
(bad)
jmp
add
add
out
(bad)
(bad)
sti
cmc
(bad)
call
repnz
call
add
add
add
add
lock
inc
icebp
(bad)
push
dec
add
pop
pop
add
and
(bad)
(bad)
fcmovbe
(bad)
jmp
out
call
(bad)
dec
(bad)
(bad)
inc
(bad)
inc
out
dec
xlat
(bad)
(bad)
in
sar
(bad)
fcomip
(bad)
call
fdivr
call
in
(bad)
(bad)
mov
in
(bad)
inc
out
(bad)
dec
(bad)
inc
add
mov
(bad)
dec
add
add
aam
inc
(bad)
jmp
(bad)
inc
(bad)
call
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
mov
add
add
hlt
(bad)
jmp
lock
push
loope
(bad)
jns
(bad)
jmp
(bad)
dec
in
dec
(bad)
(bad)
stc
fcos
jmp
(bad)
inc
(bad)
push
(bad)
push
add
add
sar
call
add
push
in
push
add
pop
aad
(bad)
fcom
(bad)
call
(bad)
jmp
fdivrp
inc
out
inc
stc
(bad)
(bad)
cmp
(bad)
jmp
jmp
(bad)
jmp
jmp
add
rcl
push
(bad)
dec
(bad)
jmp
add
add
(bad)
jmp
(bad)
(bad)
call
add
add
repnz
push
idiv
(bad)
jmp
call
add
(bad)
push
loopne
dec
out
(bad)
push
(bad)
(bad)
jge
(bad)
jmp
loop
dec
jmp
(bad)
call
push
add
cli
idiv
call
fcos
inc
aam
call
(bad)
push
clc
(bad)
(bad)
(bad)
(bad)
push
sar
call
call
(bad)
(bad)
out
fdivr
inc
repz
jmp
(bad)
inc
add
(bad)
jmp
call
jmp
pop
sar
dec
(bad)
push
(bad)
dec
add
add
(bad)
jmp
aam
push
add
jmp
loope
push
(bad)
jmp
(bad)
push
(bad)
jmp
add
ja
(bad)
call
(bad)
jmp
(bad)
jmp
call
(bad)
inc
repz
dec
add
add
add
(bad)
push
loop
jmp
(bad)
dec
icebp
(bad)
jmp
repz
jmp
(bad)
jmp
(bad)
jmp
push
add
mov
call
(bad)
jmp
add
hlt
sar
jmp
(bad)
inc
xlat
(bad)
jmp
sar
inc
(bad)
push
jecxz
dec
(bad)
jmp
(bad)
dec
add
add
push
add
xchg
add
add
(bad)
call
jecxz
call
(bad)
jmp
repz
jmp
(bad)
call
aad
call
fdivrp
call
jecxz
call
(bad)
(bad)
inc
call
(bad)
(bad)
clc
in
(bad)
(bad)
jmp
call
lock
push
xlat
(bad)
dec
(bad)
(bad)
mov
(bad)
jmp
aam
jmp
fcos
jmp
hlt
(bad)
jmp
inc
(bad)
dec
add
aam
(bad)
call
add
add
(bad)
inc
add
add
dec
out
(bad)
jmp
aam
call
clc
(bad)
jmp
add
inc
aam
dec
in
(bad)
call
(bad)
(bad)
mov
(bad)
call
jmp
inc
call
(bad)
jmp
(bad)
(bad)
dec
sar
(bad)
cmp
add
add
(bad)
push
add
add
add
add
sar
inc
jmp
inc
(bad)
(bad)
dec
idiv
(bad)
cmp
(bad)
inc
(bad)
(bad)
out
sar
jmp
add
add
add
add
xlat
(bad)
call
add
add
clc
(bad)
call
idiv
(bad)
sti
in
inc
out
jmp
in
jmp
cmc
(bad)
jmp
(bad)
jmp
in
(bad)
(bad)
aas
in
(bad)
call
(bad)
dec
loopne
(bad)
(bad)
fdivr
jmp
repz
jmp
add
and
(bad)
jmp
add
(bad)
call
(bad)
push
add
add
(bad)
(bad)
fsub
(bad)
jmp
(bad)
push
out
dec
add
(bad)
push
add
add
(bad)
(bad)
(bad)
jg
(bad)
call
pop
add
cmps
loopne
jmp
idiv
call
cmc
(bad)
push
hlt
(bad)
call
fdivr
(bad)
cmp
idiv
push
jecxz
jmp
in
inc
sar
call
add
add
(bad)
(bad)
inc
add
ins
icebp
(bad)
push
jmp
rol
add
fdivr
jmp
repnz
(bad)
fcom
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
inc
pop
add
pop
out
(bad)
jmp
add
add
add
aas
jmp
dec
(bad)
(bad)
jge
add
fcomi
(bad)
call
sar
(bad)
js
(bad)
(bad)
cmp
in
(bad)
(bad)
mov
(bad)
jmp
(bad)
(bad)
jp
(bad)
dec
loop
inc
(bad)
call
call
(bad)
(bad)
cmp
add
lock
(bad)
(bad)
(bad)
call
fcos
call
repnz
push
xlat
(bad)
dec
out
(bad)
call
sar
push
sar
(bad)
in
(bad)
dec
add
add
(bad)
call
(bad)
dec
hlt
(bad)
call
(bad)
call
in
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
cmp
(bad)
inc
sar
call
in
(bad)
(bad)
cmp
(bad)
(bad)
fiadd
add
and
add
add
push
stc
(bad)
(bad)
dec
add
adc
or
add
cmp
stc
(bad)
jmp
jge
add
and
add
add
push
daa
add
mov
add
sbb
(bad)
jmp
dec
add
add
push
add
add
push
or
and
add
cmp
clc
(bad)
jmp
out
add
add
dec
add
add
push
or
and
add
add
out
(bad)
jmp
call
dec
add
add
push
or
and
add
add
push
xor
cmp
or
add
adc
(bad)
(bad)
cmp
clc
(bad)
(bad)
dec
add
push
add
add
mov
pop
add
add
and
push
xor
cmp
fdivr
(bad)
cmp
or
add
push
add
add
movs
add
add
aaa
add
add
and
add
cmp
(bad)
(bad)
dec
add
or
add
and
xor
add
pop
pushf
and
add
push
clc
(bad)
jmp
mov
add
and
add
add
push
daa
add
inc
add
add
push
xor
cmp
clc
(bad)
(bad)
dec
add
add
add
dec
add
dec
xor
cmp
jno
(bad)
(bad)
cmp
into
add
add
inc
add
add
push
and
add
dec
xor
cmp
or
add
leave
fdivr
(bad)
cmp
idiv
(bad)
dec
add
push
add
add
or
add
cmp
idiv
(bad)
dec
add
or
add
and
add
add
adc
add
pop
pushf
and
idiv
(bad)
dec
add
sbb
add
dec
add
cmp
or
add
pop
add
add
or
add
cmp
pop
add
add
push
add
add
push
and
add
dec
xor
cmp
idiv
(bad)
dec
add
sbb
add
dec
add
cmp
(bad)
jmp
retf
add
add
inc
add
add
push
and
add
dec
xor
cmp
add
sub
(bad)
(bad)
dec
add
or
daa
add
add
add
add
pop
pushf
and
add
dec
xor
cmp
idiv
jmp
lea
add
and
add
add
push
and
add
dec
xor
cmp
or
add
out
(bad)
call
sub
adc
adc
imul
and
add
add
push
xor
cmp
add
cmp
idiv
call
adc
and
add
dec
xor
pop
cmp
or
add
or
add
dec
add
add
xchg
idiv
call
and
cmp
or
add
xchg
add
add
test
(bad)
jmp
adc
add
and
add
add
push
or
and
je
(bad)
(bad)
dec
add
pop
add
add
xor
add
and
pushf
and
add
add
push
xor
push
cmp
jmp
add
add
and
add
add
push
and
add
cmp
idiv
call
pop
adc
pop
pop
inc
enter
and
add
add
and
(bad)
(bad)
dec
add
or
add
and
add
and
add
pop
pushf
and
push
xor
cmp
add
cmp
cmc
(bad)
call
and
or
pushf
and
add
dec
xor
cmp
add
cmp
cmc
(bad)
jmp
mov
aas
add
add
push
and
add
cmp
cmc
(bad)
call
adc
pop
adc
and
add
cmp
or
add
add
add
dec
add
cmp
or
add
or
add
dec
add
cmp
or
add
push
add
add
or
add
dec
xor
cmp
(bad)
jmp
in
add
add
dec
add
add
push
and
add
cmp
(bad)
jmp
push
add
add
dec
add
add
push
daa
add
cmp
add
dec
xor
push
cmp
cmc
(bad)
(bad)
dec
add
sbb
add
dec
add
add
adc
(bad)
call
sub
add
add
add
or
(bad)
(bad)
dec
add
adc
add
dec
add
add
push
xor
push
cmp
hlt
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
xor
push
cmp
hlt
(bad)
(bad)
dec
add
sbb
add
dec
add
add
mov
(bad)
jmp
nop
add
add
xor
add
pop
dec
daa
add
dec
add
add
xchg
hlt
(bad)
(bad)
dec
add
sldt
add
or
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
push
add
cmp
(bad)
(bad)
dec
add
push
add
add
mov
add
and
add
add
and
add
add
ds
(bad)
(bad)
dec
add
pop
add
add
imul
add
add
and
add
add
push
xor
pop
cmp
hlt
(bad)
call
add
adc
pop
pop
adc
adc
pop
adc
pop
pop
pop
rcr
cmp
repz
(bad)
dec
add
add
add
dec
add
cmp
repz
(bad)
dec
add
sldt
add
clc
add
add
push
add
add
and
add
dec
xor
cmp
add
cmp
lock
(bad)
cmp
test
add
push
add
add
push
or
and
add
cmp
sub
and
inc
add
dec
xor
cmp
pop
add
add
adc
add
pop
dec
or
and
add
cmp
(bad)
(bad)
dec
add
or
add
and
cmp
add
pop
pushf
and
add
add
push
xor
cmp
add
fdivrp
(bad)
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
repz
jmp
int3
add
add
pop
add
add
push
or
and
add
add
push
repz
(bad)
dec
add
adc
or
add
dec
xor
cmp
repnz
call
sub
and
imul
and
add
cmp
repnz
(bad)
dec
add
or
add
and
add
and
add
add
and
add
push
xor
push
cmp
mov
xor
dec
daa
add
adc
push
xor
cmp
add
push
xlat
(bad)
(bad)
cmp
or
add
adc
add
dec
add
add
push
xor
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
add
and
add
add
push
xor
pop
cmp
(bad)
jmp
rol
add
and
add
pop
dec
or
and
push
xor
push
cmp
repnz
jmp
popf
add
add
xor
add
pop
dec
and
add
dec
xor
cmp
add
add
push
repnz
jmp
xor
add
and
add
push
or
and
push
xor
cmp
icebp
(bad)
(bad)
dec
add
or
sub
or
add
pop
pushf
and
add
add
fdivp
(bad)
jmp
call
add
pop
dec
and
add
dec
xor
cmp
add
cmp
mov
(bad)
jmp
test
add
and
add
pop
dec
or
and
add
cmp
or
add
push
add
add
or
add
dec
xor
pop
cmp
(bad)
(bad)
cmp
add
jle
add
add
sbb
or
add
push
add
add
sldt
add
loop
(bad)
jmp
inc
add
push
cmp
(bad)
(bad)
jmp
inc
add
push
cmp
(bad)
(bad)
call
or
or
add
fld
add
add
add
jo
adc
sub
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
enter
das
add
push
cmp
leave
(bad)
jmp
xor
add
cmp
xor
add
cmp
leave
(bad)
jmp
inc
add
push
cmp
add
push
cmp
(bad)
jmp
inc
add
push
cmp
add
push
cmp
leave
(bad)
jmp
inc
add
push
cmp
das
add
push
cmp
xor
add
cmp
inc
add
push
cmp
add
push
cmp
retf
sub
add
cmp
(bad)
jmp
inc
add
push
cmp
add
push
cmp
(bad)
push
add
or
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
int3
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
iret
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
aad
jmp
xor
add
cmp
xlat
(bad)
jmp
inc
add
push
cmp
jmp
cmp
add
cmp
(bad)
jmp
inc
add
push
cmp
jmp
inc
add
push
cmp
inc
add
push
cmp
fcos
jmp
inc
add
push
cmp
fcos
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
xor
xchg
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
cmp
dec
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
fdivrp
jmp
inc
add
push
cmp
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
loopne
jmp
inc
add
push
cmp
loopne
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
loop
push
add
or
and
add
push
cmp
inc
add
push
cmp
jecxz
jmp
inc
add
push
cmp
(bad)
jmp
add
push
cmp
xor
add
cmp
(bad)
jmp
inc
add
push
cmp
jmp
inc
add
push
cmp
inc
add
push
cmp
call
add
push
cmp
call
add
push
cmp
jmp
add
push
cmp
mov
pusha
jmp
add
push
cmp
jmp
add
push
cmp
jmp
push
cmp
jmp
push
cmp
jmp
push
cmp
(bad)
jmp
aaa
add
push
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
aas
add
push
cmp
in
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
inc
add
push
cmp
cmc
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
cmc
(bad)
jmp
inc
add
push
cmp
cmc
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
idiv
jmp
cmp
add
cmp
idiv
jmp
inc
add
push
cmp
idiv
jmp
cmp
add
cmp
idiv
jmp
inc
add
push
cmp
inc
add
push
cmp
cmp
add
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
jmp
inc
add
push
cmp
cmp
add
cmp
stc
(bad)
jmp
inc
add
push
cmp
cli
(bad)
jmp
inc
add
push
cmp
inc
add
push
cmp
inc
add
push
cmp
add
adc
add
add
aaa
sub
push
sbb
add
adc
add
add
add
sub
sub
push
pop
adc
call
add
jo
mov
add
mov
sub
push
push
mov
mov
adc
or
sub
add
sub
or
add
add
add
add
add
push
push
sub
inc
adc
add
push
sub
pop
sub
add
or
cmp
add
add
sub
pop
sub
add
or
jle
add
add
mov
add
outs
ret
or
cmp
add
add
movs
sbb
add
or
add
add
imul
adc
add
add
add
adc
add
add
add
imul
adc
jnp
add
add
sub
add
adc
add
add
add
add
imul
add
add
imul
add
push
add
push
es
sub
sub
pop
adc
lds
add
push
sub
pop
adc
jnp
add
add
imul
push
adc
jmp
jle
add
add
sbb
add
jle
add
add
add
outs
enter
adc
add
sub
add
add
add
add
outs
enter
sub
or
inc
mov
call
add
add
xor
add
add
add
add
add
or
mov
push
call
mov
add
add
fld
add
add
add
add
add
push
add
sbb
push
sbb
add
adc
push
add
add
add
adc
or
clc
add
call
add
add
aad
add
sub
add
or
add
jo
lea
add
add
push
push
and
add
add
aad
add
sub
add
or
add
add
aad
add
sub
add
or
add
adc
lea
add
add
pop
push
add
pop
pop
add
add
je
add
add
sbb
or
fwait
popa
add
das
add
adc
mov
add
cmp
add
and
adc
add
pop
dec
ins
add
push
add
add
bound
add
dec
add
dec
add
dec
jp
sub
inc
aaa
add
dec
add
add
add
and
xchg
push
add
pop
pushf
and
add
add
and
add
and
add
add
and
add
pop
dec
ins
add
ret
add
push
jp
sub
cmp
push
add
adc
dec
sub
add
push
adc
add
out
add
and
dec
push
add
pop
dec
adc
and
add
cmp
add
sbb
jbe
add
adc
and
add
cmp
push
adc
sub
add
sub
add
imul
adc
inc
add
add
mov
or
add
add
or
add
dec
jp
pop
cmp
adc
cmp
push
add
dec
jp
push
cmp
push
add
adc
sbb
add
adc
add
add
pop
add
adc
sub
add
cmp
push
add
adc
sub
add
sub
add
pop
push
cmp
sub
add
test
add
adc
sbb
imul
add
or
add
adc
add
and
add
and
add
pop
pushf
cmp
push
jp
sub
xchg
push
add
cmp
xor
add
add
adc
add
pop
dec
add
pop
add
add
push
jp
cmp
xor
adc
pop
cmp
add
adc
and
jae
add
adc
data16
add
add
mov
add
dec
add
dec
add
cmp
adc
loope
add
cmp
xor
pop
add
add
jg
add
dec
add
pop
add
add
or
add
dec
jp
cmp
add
adc
sbb
add
adc
and
add
cmp
add
adc
inc
ds
add
and
add
add
push
jp
sub
push
xor
add
adc
sbb
je
and
add
cmp
xor
push
add
adc
adc
xchg
pushf
and
add
add
or
inc
add
add
add
dec
add
dec
jp
pop
cmp
xor
add
add
add
cmps
push
add
cmp
add
jnp
add
dec
jp
sub
int
add
sub
add
push
sbb
mov
and
add
add
mov
dec
sbb
adc
inc
add
add
test
add
dec
add
pop
add
add
or
add
cmp
or
add
add
add
dec
add
cmp
add
cmp
add
cmp
add
add
arpl
add
or
add
or
add
dec
add
cmp
add
dec
add
dec
add
cmp
xor
add
rcl
add
add
xchg
add
push
outs
mov
mov
movs
add
push
mov
movs
add
push
jb
add
jo
xor
retf
or
adc
add
sub
mov
mov
movs
add
push
mov
cmps
add
push
adc
push
jne
add
add
or
add
adc
aas
add
add
adc
retf
add
or
add
or
add
jo
outs
add
push
cmp
add
adc
retf
add
or
add
jo
xor
retf
or
push
sub
aas
add
add
jae
add
or
sbb
add
push
lea
add
push
sub
add
sub
add
push
sbb
add
add
sbb
add
int3
add
or
pop
add
push
sbb
mov
add
cmp
add
add
sbb
add
int
add
sub
push
sub
sbb
push
lea
add
push
sub
add
sub
sbb
push
lea
add
push
sub
add
sub
sbb
add
push
adc
push
adc
add
push
push
adc
sub
xor
add
sub
lods
add
push
cmp
add
add
and
add
add
das
add
add
and
add
add
or
add
and
add
cmp
add
add
loopne
je
xor
add
and
add
add
push
sub
dec
add
add
add
(bad)
dec
add
add
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
adc
add
adc
add
add
mov
xor
add
je
jae
add
or
je
jae
add
or
je
jae
add
or
jge
jmp
add
or
xor
enter
fld
loopne
je
fld
add
add
fld
add
add
fist
add
test
add
and
jmp
dec
daa
add
adc
and
push
cmp
push
add
xchg
adc
and
pop
add
add
push
jp
sub
mov
add
and
xor
add
pop
dec
ins
add
jmp
add
dec
jp
sub
adc
call
add
add
add
dec
add
cmp
adc
push
xchg
pushf
and
add
add
imul
add
or
add
add
add
dec
add
cmp
add
dec
add
dec
add
cmp
xor
add
add
add
int3
add
or
pop
add
adc
add
push
jp
sub
jecxz
add
cmp
xor
add
or
add
and
add
add
push
add
cmps
add
add
push
jp
sub
cli
or
add
out
xor
add
push
and
add
jo
fadd
add
and
push
jp
cmp
xor
add
jecxz
add
and
add
pop
dec
adc
and
add
add
mov
add
adc
adc
xchg
pushf
and
push
jp
push
cmp
or
add
adc
add
and
add
and
add
add
and
mov
add
cmp
cmps
add
push
adc
xor
add
dec
jp
sub
xor
add
or
add
or
add
dec
add
cmp
add
dec
add
add
add
dec
add
dec
jp
sub
mov
sub
add
adc
sbb
je
and
push
jp
cmp
push
sub
and
pop
add
cmp
xor
add
adc
cmp
push
add
sbb
add
cmp
dec
add
dec
add
or
add
and
adc
add
pop
pushf
and
add
cmp
das
add
dec
add
pop
add
add
cmp
add
and
add
add
and
push
jp
sub
retf
(bad)
cmp
adc
adc
or
add
cmp
adc
add
sub
mov
xchg
dec
add
cmp
fld
add
cmp
add
dec
add
or
add
dec
add
dec
jp
pop
cmp
add
adc
pop
pop
gs
and
push
jp
pop
cmp
add
adc
sub
and
pop
add
add
sbb
add
add
and
add
pop
dec
ins
add
leave
add
add
push
jp
sub
lahf
dec
add
cmp
add
adc
sbb
je
and
add
sbb
add
adc
add
add
push
jp
push
cmp
add
dec
add
and
add
and
add
pop
pushf
and
add
add
push
jp
sub
pusha
sub
add
in
add
dec
add
dec
add
cmp
ja
adc
imul
and
add
add
sub
jae
add
or
push
add
add
xchg
add
push
sub
push
add
add
fisttp
add
adc
jae
add
or
push
add
add
xchg
add
push
sub
or
add
xchg
add
push
adc
push
sub
push
add
add
fld
add
add
fld
add
add
add
add
jle
add
or
and
add
add
sti
sub
adc
xor
add
dec
jp
sub
sub
adc
sub
add
cmp
sub
xor
add
and
add
add
and
add
and
add
add
pop
dec
add
adc
imul
adc
and
add
lods
sub
adc
pop
pop
inc
jmp
(bad)
jmp
popa
add
add
push
jp
cmp
data16
add
test
add
push
sbb
cli
dec
add
and
push
jp
cmp
add
add
iret
add
or
sbb
call
and
add
cmp
add
adc
sub
imul
dec
add
cmp
add
push
loopne
jne
sti
add
add
push
jp
cmp
sub
sbb
add
add
dec
jp
pop
cmp
sub
inc
add
pop
add
add
movs
add
add
movs
dec
add
pop
pushf
and
imul
add
outs
add
add
and
add
pop
dec
add
enter
cmp
sub
add
add
add
or
push
call
dec
and
add
cmp
sub
add
cmp
add
and
add
pop
dec
adc
and
add
add
push
jp
push
cmp
push
dec
add
pop
or
ja
xchg
pushf
and
add
dec
jp
cmp
xor
add
test
add
and
add
add
push
jp
sub
jo
add
adc
jle
add
add
sbb
pop
sub
add
or
push
add
add
push
jp
cmp
add
dec
add
cmp
dec
add
and
add
add
and
add
xor
add
dec
add
and
cmp
add
pop
pushf
and
add
add
fisttp
adc
mov
pop
adc
jg
add
cmp
sub
add
or
add
pop
add
add
or
add
cmp
sub
add
adc
in
add
and
push
jp
cmp
sub
add
lahf
dec
add
adc
adc
pop
add
add
push
jp
sub
scas
sub
add
or
add
add
add
dec
add
dec
jp
cmp
or
add
add
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
dec
add
add
add
dec
add
dec
jp
cmp
dec
add
cmp
cmp
dec
sub
add
or
and
add
add
push
jp
sub
xchg
inc
add
cmp
sub
add
(bad)
std
(bad)
(bad)
jg
add
add
int
add
cmp
dec
add
adc
add
std
sub
add
pop
adc
cmp
dec
add
and
add
add
push
jp
sub
fsubr
add
dec
add
or
movs
add
add
pop
add
add
and
add
cmp
sub
add
inc
and
repnz
cmp
mov
cmps
dec
add
and
add
and
add
pop
dec
ins
add
fild
add
dec
jp
sub
test
add
and
dec
add
add
push
adc
and
add
cmp
add
and
xor
add
pop
dec
ins
add
mov
add
dec
jp
push
cmp
add
adc
pop
sbb
adc
xchg
pushf
and
add
dec
jp
cmp
dec
add
jb
add
jo
sub
add
adc
push
iret
or
add
pop
add
add
push
jp
cmp
sub
add
add
cmp
and
add
add
push
jp
pop
cmp
sub
add
inc
add
add
or
add
push
ins
add
data16
add
push
jp
cmp
sub
add
retf
add
add
sbb
add
pop
dec
pop
add
outs
add
add
(bad)
sub
add
jecxz
add
push
pop
adc
(bad)
add
add
lods
sub
add
xor
bound
xor
icebp
add
add
push
jp
sub
jnp
add
cmp
inc
add
adc
and
sub
add
adc
scas
add
add
jo
add
dec
add
add
add
and
and
pushf
and
push
jp
push
cmp
add
dec
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
and
add
and
add
add
push
pop
add
mov
add
cmp
sub
add
push
cmp
add
adc
and
add
dec
jp
sub
jmp
add
and
push
add
add
push
add
in
add
add
(bad)
sub
add
aam
add
pop
push
lea
add
and
add
stos
add
push
adc
aad
add
cmp
or
add
adc
add
dec
add
dec
jp
cmp
or
add
push
add
add
add
add
sub
add
pop
pushf
and
add
add
stos
dec
add
cmp
test
add
adc
and
add
cmp
push
push
cmp
loop
add
dec
jp
sub
mov
cdq
dec
add
and
sub
dec
ins
add
popf
add
add
sub
add
adc
pop
adc
xchg
add
add
ja
add
dec
add
add
add
dec
add
cmp
daa
add
dec
add
and
cmp
add
pop
pushf
and
add
dec
jp
pop
cmp
daa
add
adc
cmp
dec
add
and
add
add
leave
daa
add
dec
add
push
add
add
jno
add
and
add
pop
pushf
and
add
add
push
jp
push
cmp
or
add
push
add
add
xchg
add
and
pushf
cmp
dec
add
dec
jp
sub
jns
add
adc
add
xchg
add
push
sub
pop
add
add
adc
int3
add
add
push
jp
cmp
add
adc
sbb
adc
push
add
push
and
inc
daa
add
dec
add
add
add
and
add
and
add
pop
pushf
and
push
jp
cmp
or
add
or
add
and
xor
add
pop
pushf
and
push
jp
sub
repnz
dec
add
and
add
add
push
add
add
and
add
add
push
jp
pop
cmp
add
adc
adc
inc
add
add
mov
add
mov
inc
loopne
into
add
or
sub
add
and
add
add
push
jp
push
cmp
mov
add
cmp
dec
add
pop
dec
add
add
add
cmp
or
add
adc
add
and
sub
add
pop
pushf
and
add
add
imul
add
add
jae
add
pop
dec
ins
add
or
add
cmp
add
adc
fadd
add
bound
add
cmp
add
push
cmp
add
sbb
add
dec
jp
push
cmp
inc
add
adc
cmp
inc
add
sub
leave
inc
add
adc
cmp
inc
add
cmp
add
dec
add
dec
add
dec
jp
sub
push
pop
add
cmp
and
jbe
sub
add
dec
jp
push
cmp
and
inc
add
or
add
and
add
add
and
lods
and
daa
add
add
dec
add
add
push
jp
sub
cwde
and
inc
add
cmp
add
and
add
cmp
or
add
or
add
and
cmp
add
pop
pushf
and
popa
and
inc
add
or
add
dec
add
cmp
add
adc
sbb
push
and
add
cmp
and
add
push
sbb
or
add
adc
add
dec
jp
cmp
add
push
and
push
jp
sub
in
inc
add
cmp
and
add
add
cmp
add
pop
dec
adc
and
add
dec
jp
cmp
and
add
or
add
add
add
and
add
and
add
add
and
add
add
mov
add
adc
pop
sbb
adc
xchg
pushf
and
add
cmp
pop
add
add
dec
add
add
push
pop
add
cmp
cdq
and
add
int3
add
add
inc
add
add
push
adc
and
add
add
push
jp
sub
jnp
add
adc
jae
add
or
push
push
pusha
inc
add
cmp
add
cmp
add
dec
add
and
add
add
push
add
add
and
add
dec
jp
sub
push
inc
add
cmp
add
and
add
and
add
pop
dec
ins
add
xor
add
cmp
and
add
retf
add
add
sbb
dec
adc
and
add
cmp
and
add
or
add
add
add
dec
add
cmp
and
add
or
add
adc
add
dec
add
dec
jp
cmp
inc
add
cmp
xor
add
les
add
pop
cmp
inc
add
adc
add
scas
and
add
add
add
jle
add
cmp
inc
add
adc
mov
and
add
mov
add
and
add
add
push
pop
add
enter
dec
jp
cmp
add
and
add
cmp
dec
adc
and
add
add
push
jp
sub
mov
add
cmp
add
adc
push
pop
addr16
and
add
add
push
jp
cmp
and
add
popf
inc
add
adc
cmp
xchg
pushf
and
add
dec
jp
sub
sbb
add
adc
pop
sbb
xchg
pushf
and
ja
add
adc
adc
imul
and
and
add
add
or
fs
and
add
dec
jp
sub
or
add
cmp
and
add
js
add
and
add
add
push
add
mov
add
dec
jp
sub
and
add
cmp
or
add
sbb
add
and
xor
pushf
and
and
add
bound
add
and
add
pop
dec
ins
add
inc
add
add
jbe
add
adc
pop
sbb
adc
lods
add
add
push
jp
cmp
inc
add
cmp
add
cmp
add
adc
pop
pop
adc
and
add
cmp
and
add
or
add
and
add
pop
dec
ins
add
add
add
sub
add
cmp
add
adc
adc
push
pop
pop
loopne
dec
and
pop
or
push
and
add
dec
jp
push
cmp
and
add
jle
add
adc
adc
push
sub
pop
adc
push
sub
add
or
push
add
add
aad
add
adc
adc
xchg
pushf
and
push
jp
cmp
and
add
xor
or
or
imul
xchg
pusha
adc
and
add
add
movs
and
add
movs
add
add
add
add
push
adc
and
add
add
push
jp
sub
retf
cli
(bad)
(bad)
cmp
pusha
adc
cmp
add
and
add
dec
jp
sub
jo
add
cmp
add
adc
pop
pop
pop
adc
mov
inc
and
add
das
sbb
adc
push
add
push
and
add
cmp
and
add
ja
imul
add
les
add
cmp
add
pop
cs
cmp
push
jp
sub
or
add
dec
add
dec
add
dec
jp
cmp
and
add
outs
add
add
jno
imul
push
je
add
add
inc
and
add
add
ja
add
adc
add
push
sub
add
jb
add
jo
outs
add
push
cmp
add
add
scas
add
push
sub
sbb
add
and
add
cmp
add
adc
adc
sub
push
cmp
add
add
add
add
dec
lldt
cmp
add
add
push
and
add
and
inc
add
jae
add
or
pop
cmp
(bad)
(bad)
jmp
add
add
dec
(bad)
dec
add
add
add
add
add
add
add
inc
add
scas
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
pop
add
add
sar
call
sub
add
or
add
dec
lldt
cmp
push
and
add
and
add
add
or
xor
add
push
(bad)
cmp
inc
sub
add
sub
add
adc
add
push
sub
add
adc
add
push
sub
add
adc
add
push
sub
add
jae
add
or
or
add
add
dec
verw
scas
add
push
cmp
inc
(bad)
(bad)
call
or
pop
sub
add
cmp
push
and
add
add
es
(bad)
(bad)
cmp
add
adc
jbe
add
cmp
sbb
add
adc
cmp
add
adc
adc
cmp
add
add
push
sub
add
fdivr
add
add
rol
add
js
add
jae
add
or
push
and
add
add
sub
add
and
push
add
add
push
adc
and
add
dec
jp
cmp
pop
add
cmp
or
ins
pushf
and
add
cmp
or
add
add
add
dec
add
dec
jp
cmp
push
add
push
adc
das
add
add
push
jp
pop
cmp
push
add
and
add
and
add
add
push
adc
and
add
dec
jp
cmp
adc
sbb
adc
in
add
dec
jp
sub
xchg
push
add
dec
add
and
add
add
inc
add
add
and
push
jp
cmp
add
adc
and
add
pop
adc
pop
xchg
pushf
and
pop
push
add
adc
sbb
or
loope
add
cmp
add
cmp
add
cmp
pop
adc
sub
pop
add
sbb
xor
sbb
add
and
add
and
add
cmp
sub
add
and
add
adc
mov
add
dec
jp
sub
(bad)
sbb
add
add
xor
add
pop
dec
adc
cmp
push
jp
push
cmp
sbb
xor
add
and
add
and
add
pop
pushf
and
add
cmp
sbb
inc
add
xchg
inc
add
dec
add
cmp
add
iret
add
or
add
pop
inc
adc
push
add
push
es
add
add
test
adc
adc
xchg
pushf
and
add
cmp
add
adc
push
bound
daa
and
add
dec
jp
sub
pop
sbb
inc
add
push
add
add
or
add
cmp
add
adc
cmp
inc
add
pop
ins
pushf
and
add
add
sub
or
add
pop
add
add
or
add
cmp
mov
add
and
add
add
push
add
jbe
add
cmp
xor
add
dec
add
dec
jp
cmp
sbb
add
adc
adc
push
xchg
pushf
and
add
add
aad
add
dec
add
and
add
add
dec
add
add
and
add
add
scas
sbb
add
adc
adc
xchg
pushf
and
add
cmp
add
pop
arpl
dec
jp
pop
cmp
jo
add
cmp
add
pop
dec
adc
and
add
dec
jp
cmp
add
dec
add
add
add
dec
add
cmp
add
dec
add
or
add
dec
add
dec
jp
sub
xor
add
adc
int
add
and
add
jl
add
dec
jp
cmp
sbb
add
or
add
add
add
and
add
add
or
pushf
and
add
add
cmc
sbb
add
add
or
jo
imul
pop
inc
sub
add
push
adc
loopne
add
dec
jp
sub
iret
sbb
add
mov
add
and
add
add
push
add
push
add
dec
jp
sub
xor
add
cmp
jl
add
and
add
add
push
adc
and
add
cmp
pop
adc
and
push
jp
push
cmp
add
or
add
pop
add
add
mov
add
add
and
add
push
jp
push
cmp
add
adc
sbb
dec
pushf
and
dec
sbb
add
mov
add
cmp
add
pop
dec
add
sbb
add
cmp
add
push
cmp
add
cmp
add
cmp
sbb
add
push
cmp
add
and
add
add
adc
add
dec
add
and
xor
add
pop
pushf
and
add
add
jmp
add
adc
adc
sub
push
adc
and
add
add
push
jp
cmp
sbb
add
test
cmp
add
pop
dec
ins
add
sub
push
jp
cmp
or
add
sbb
add
dec
add
cmp
fnstsw
add
add
push
adc
and
add
cmp
adc
sbb
pop
adc
push
add
push
and
add
cmp
add
dec
add
and
add
add
and
add
add
push
sbb
add
or
add
pop
add
add
or
add
cmp
sbb
add
dec
add
add
pop
add
add
push
ins
add
sub
add
cmp
sbb
add
fs
gs
mov
add
cmp
add
adc
sbb
pop
adc
push
add
push
and
push
jp
sub
call
jb
adc
xchg
pushf
and
add
cmp
sbb
add
jmp
dec
add
add
push
add
sbb
sbb
add
adc
add
sub
mov
sahf
add
push
sub
imul
add
sub
add
cmp
cli
cmp
add
sub
add
pop
dec
ins
add
pop
add
add
push
jp
cmp
add
adc
sub
add
push
push
jp
add
and
add
cmp
add
dec
add
add
test
add
cmp
cmp
add
and
push
jp
cmp
sbb
add
or
add
pop
add
add
popa
add
add
dec
add
add
and
add
add
push
jp
sub
adc
add
dec
add
add
add
and
add
and
add
pop
pushf
and
add
add
out
sbb
add
out
push
add
adc
fwait
add
push
adc
or
add
dec
jp
push
cmp
sbb
add
or
add
push
add
add
or
add
dec
jp
push
cmp
xor
jns
pop
adc
add
inc
pop
pop
adc
and
add
add
push
jp
cmp
or
add
sbb
dec
add
add
add
add
pop
pushf
and
add
add
jb
add
dec
add
add
add
dec
add
dec
jp
sub
sub
sbb
add
or
add
or
add
dec
add
cmp
add
adc
pop
pop
adc
and
add
add
and
add
adc
int
add
adc
sbb
add
cmp
sbb
add
dec
sub
add
or
pop
add
cmp
add
add
push
jp
sub
icebp
pop
add
dec
add
and
add
add
xor
add
pop
pushf
and
add
cmp
pop
add
dec
add
jb
cmp
add
dec
jp
sub
int3
xor
pop
add
dec
add
dec
add
dec
jp
sub
xchg
pop
add
dec
add
dec
add
dec
jp
cmp
add
adc
adc
xchg
pushf
and
add
add
popa
pop
add
adc
adc
cmp
cmp
add
push
inc
add
push
sub
and
push
add
pop
push
mov
add
repz
add
cmp
cmp
add
dec
add
(bad)
inc
add
dec
add
adc
push
cmp
cmp
or
add
(bad)
inc
add
dec
add
adc
push
push
add
movs
xchg
add
or
add
or
add
push
inc
add
fwait
adc
add
or
add
(bad)
inc
add
dec
add
adc
push
cmp
and
add
dec
add
(bad)
inc
add
dec
add
pop
cmp
add
push
push
add
adc
add
dec
add
or
add
push
inc
add
or
add
or
add
push
inc
add
or
add
or
add
dec
aas
add
or
add
push
or
add
dec
add
push
dec
aas
add
or
add
or
add
dec
add
dec
cmp
dec
inc
or
add
dec
push
cmp
add
ins
dec
dec
ins
dec
push
dec
add
or
add
dec
add
pop
dec
push
dec
add
dec
add
pop
ins
dec
add
or
add
pop
ins
dec
cmp
add
or
add
fs
dec
sub
dec
add
or
add
push
sub
dec
add
or
add
bound
push
sub
dec
add
or
add
push
sub
dec
add
or
add
or
push
sub
dec
add
or
add
push
sub
dec
add
cmp
add
or
add
or
add
or
add
push
sub
dec
add
ins
pop
adc
cmp
cmp
add
push
jp
push
cmp
add
dec
add
add
add
dec
add
cmp
add
dec
add
or
add
and
add
add
and
add
add
and
xor
add
and
add
add
and
add
add
add
xor
add
and
add
and
add
add
and
add
add
push
jp
sub
pop
and
add
ficom
add
pop
add
add
dec
add
add
push
add
mov
push
jp
push
cmp
add
add
adc
add
pop
dec
ins
add
push
add
add
lahf
adc
add
or
add
or
or
add
dec
jp
sub
loope
add
cmp
add
and
add
cmp
cmp
add
push
ins
add
sbb
push
jp
cmp
add
adc
sub
pop
jae
add
or
and
add
cmp
add
adc
or
iret
add
add
xor
add
or
add
push
add
add
mov
inc
add
add
and
push
jp
cmp
adc
add
fdiv
add
cmp
aaa
add
pop
dec
adc
and
add
add
push
jp
push
cmp
adc
add
adc
add
sub
mov
add
push
cmp
cmps
(bad)
jmp
inc
add
add
push
jp
cmp
adc
add
sbb
mov
add
and
add
cmp
add
pop
outs
pushf
and
add
add
mov
lods
add
or
xor
and
add
cmp
add
add
and
add
add
push
adc
and
adc
add
stos
add
add
cmp
add
pop
dec
adc
and
add
add
push
jp
sub
jge
add
cmp
add
adc
addr16
add
add
inc
adc
add
or
add
add
add
and
cmp
add
pop
pushf
and
push
jp
sub
or
or
add
sbb
add
and
add
pop
add
add
and
add
adc
jb
mov
add
adc
and
add
dec
jp
push
cmp
adc
add
add
add
pushf
add
push
adc
ret
add
add
retf
adc
add
mov
add
adc
adc
popa
adc
inc
add
add
mov
or
add
adc
add
and
add
add
jp
add
pop
pushf
and
add
add
push
jp
pop
cmp
xchg
add
and
add
pop
dec
ins
add
out
add
add
push
jp
sub
jae
add
dec
add
and
cmp
add
pop
pushf
and
pop
adc
add
and
add
push
pop
sub
add
and
add
add
aas
adc
add
or
add
add
add
and
add
cmp
add
pop
pushf
and
and
add
adc
pop
adc
xchg
pushf
and
add
cmp
adc
pop
and
add
add
push
jp
cmp
adc
add
or
add
sbb
add
dec
add
cmp
adc
add
adc
adc
push
(bad)
adc
add
adc
pop
pop
adc
xchg
pushf
and
add
dec
jp
cmp
or
add
sbb
add
and
add
and
add
pop
pushf
and
add
add
mov
add
dec
add
and
add
add
arpl
add
pop
pushf
and
add
dec
jp
cmp
add
cmp
add
cmp
add
adc
ins
sbb
xchg
pop
sbb
push
adc
pop
loopne
pop
adc
adc
ins
pop
pop
loopne
push
bound
pop
xor
loopne
pusha
adc
add
add
push
jp
cmp
adc
add
adc
add
and
add
pop
dec
add
out
add
dec
jp
pop
cmp
adc
add
or
add
adc
add
and
add
and
add
pop
pushf
and
lock
add
or
jbe
add
adc
and
add
dec
jp
cmp
xor
add
or
add
add
or
add
cmp
or
add
adc
add
dec
add
cmp
aam
add
adc
and
add
add
iret
xor
add
popa
sbb
shl
add
mov
push
jp
cmp
add
dec
add
and
add
and
add
pop
pushf
and
push
jp
push
cmp
add
jle
add
add
stos
das
add
and
add
push
jp
sub
cmp
add
dec
add
and
add
and
add
add
and
add
add
push
adc
add
dec
add
add
or
add
pop
dec
ins
add
sgdtd
add
push
jp
push
cmp
sldt
dec
add
and
cmp
add
pop
pushf
and
add
cmp
sldt
dec
add
cmp
xor
add
sbb
add
pop
pushf
and
push
jp
cmp
add
push
sbb
idiv
jmp
mov
add
dec
jp
cmp
add
pop
jae
and
add
add
lea
add
cmp
pop
add
adc
cmp
xor
add
push
sub
pop
adc
push
sub
add
or
mov
ins
sldt
adc
adc
and
pop
sldt
dec
add
or
add
and
add
and
add
add
and
add
add
test
or
add
stos
xor
add
pop
add
add
inc
add
add
and
add
dec
jp
push
cmp
or
add
add
add
and
add
add
inc
add
add
and
push
jp
sub
hlt
add
cmp
push
add
sub
add
sub
add
sub
push
jb
add
jo
or
adc
add
jle
add
or
add
push
adc
xchg
add
add
mov
adc
iret
add
add
push
jp
cmp
adc
adc
ins
add
add
cwde
push
add
sub
adc
push
add
add
push
jp
sub
ja
add
adc
call
and
addr16
add
adc
pop
adc
xchg
add
add
in
add
cmp
and
add
adc
add
add
cmp
or
add
or
add
and
add
add
inc
add
add
and
add
add
push
jp
sub
sbb
add
cmp
pop
adc
stc
add
add
or
add
adc
ins
sbb
xchg
pop
sbb
or
ins
sbb
xchg
pop
adc
cmp
ins
pop
pop
loopne
push
bound
or
ins
loopne
pusha
adc
and
ror
xor
add
dec
add
cmp
mov
add
and
add
add
push
ins
add
or
add
cmp
or
add
or
add
and
xor
add
pop
pushf
and
add
or
add
add
add
cmp
xor
add
push
add
add
and
jp
pop
cmp
add
adc
iret
add
or
call
xor
add
ja
add
cmp
or
xor
add
dec
add
cmp
or
add
add
dec
add
add
push
add
or
add
cmp
or
(bad)
(bad)
call
cmp
and
add
and
add
add
push
jp
sub
retf
and
or
add
or
add
push
add
add
or
add
cmp
or
add
or
sbb
and
add
dec
jp
sub
mov
mov
add
dec
add
and
add
add
add
add
and
xchg
or
add
add
pop
ins
pushf
and
add
add
push
jp
push
cmp
jb
or
ja
xchg
pushf
and
add
push
jp
pop
cmp
inc
add
add
xor
add
pop
dec
add
jb
add
dec
jp
pop
cmp
xor
add
add
add
sub
add
pop
dec
pop
add
cmps
add
add
or
add
sub
add
adc
pushf
add
add
push
jp
cmp
add
and
add
jnp
add
pop
dec
adc
and
add
cmp
or
add
jae
add
and
add
pop
dec
ins
add
fild
add
dec
jp
push
cmp
xor
add
add
or
cmp
jmp
add
cmp
xor
add
das
sbb
pop
adc
push
add
push
and
add
add
push
jp
sub
(bad)
(bad)
(bad)
cmp
or
add
sldt
add
or
add
cmp
or
add
or
add
and
add
add
dec
add
add
and
add
dec
jp
cmp
add
jb
or
pushf
and
add
dec
jp
push
cmp
add
or
add
add
add
and
xor
add
pop
pushf
and
add
add
push
jp
cmp
xor
add
add
add
cmp
or
add
or
add
daa
xor
add
mov
add
and
add
add
cmp
xor
add
or
add
dec
add
sldt
add
or
add
cmp
or
add
add
push
xor
add
or
add
adc
jbe
or
add
and
or
add
push
xor
add
pop
sbb
sbb
inc
add
add
push
jp
cmp
add
add
jo
add
pop
dec
add
add
add
push
jp
sub
call
jb
imul
and
add
add
or
add
add
inc
add
add
push
ins
add
push
add
add
jo
add
dec
add
and
cmp
pushf
and
add
add
dec
or
add
pop
(bad)
(bad)
call
add
iret
add
or
fwait
add
push
adc
and
add
dec
jp
sub
or
and
add
adc
adc
sbb
adc
push
add
push
es
add
add
inc
das
add
sub
adc
cmp
add
dec
add
and
das
add
pop
dec
adc
and
add
add
push
jp
sub
(bad)
add
dec
add
add
add
and
add
add
inc
add
add
and
add
add
push
jp
push
cmp
(bad)
add
add
inc
add
add
push
ins
add
les
add
dec
jp
cmp
push
adc
add
add
mov
add
cmp
add
sbb
fdivrp
jmp
test
add
dec
jp
sub
push
std
(bad)
(bad)
cmp
add
dec
add
cmp
add
and
add
pop
pushf
cmp
add
dec
jp
pop
cmp
add
adc
sub
and
and
add
cmp
or
add
hlt
repz
adc
add
sbb
add
adc
sbb
pop
adc
sbb
add
cmp
or
add
add
add
xchg
add
push
xor
add
jno
add
cmp
or
add
inc
loopne
jo
add
push
jle
add
or
pop
add
push
and
add
cmp
add
adc
adc
sub
xchg
add
push
and
add
add
mov
add
and
add
add
add
add
push
adc
and
add
add
push
jp
cmp
add
dec
add
dec
add
cmp
or
imul
mov
jbe
add
dec
add
cmp
add
and
add
pop
pushf
and
add
add
push
jp
push
cmp
add
adc
int3
add
or
and
add
cmp
add
dec
add
dec
add
cmp
add
adc
adc
adc
cmp
sub
add
push
sbb
xor
sbb
add
es
add
add
push
jp
cmp
pop
add
adc
sbb
arpl
cmp
pop
add
adc
pop
pop
adc
and
add
cmp
pop
add
adc
mov
adc
sbb
add
dec
jp
sub
mov
push
mov
pop
adc
sub
add
cmp
cmp
add
dec
adc
cmp
add
adc
cmp
add
xchg
add
push
and
add
add
push
jp
push
cmp
add
adc
push
adc
add
cmp
add
xor
add
adc
add
cmp
add
dec
add
dec
add
cmp
add
or
add
push
add
add
or
add
cmp
add
dec
add
dec
add
cmp
add
jle
add
add
add
sub
imul
add
sub
add
dec
jp
sub
out
push
add
jle
add
or
dec
and
push
jp
push
cmp
push
add
dec
add
dec
add
dec
jp
sub
or
(bad)
(bad)
cmp
and
add
cmp
push
xor
add
cmp
or
add
adc
add
dec
add
cmp
or
add
pop
add
add
movs
add
add
jbe
add
pop
pushf
and
add
add
pusha
push
add
dec
add
and
sub
add
pop
pushf
and
add
add
push
jp
sub
cmp
add
adc
jae
add
or
push
sub
add
and
add
dec
jp
cmp
push
add
and
add
and
add
pop
dec
ins
add
movs
add
add
add
add
adc
adc
popa
adc
push
add
add
icebp
add
out
call
popa
adc
adc
pop
add
add
push
jp
push
cmp
add
xor
add
dec
add
cmp
add
adc
sbb
sbb
mov
jp
cmp
ja
mov
cld
add
add
push
jp
cmp
xor
add
dec
add
cmp
add
dec
add
or
add
dec
add
cmp
add
adc
sbb
imul
jp
cmp
add
and
add
and
add
pop
dec
add
xor
add
cmp
add
sub
outs
and
push
jp
cmp
add
adc
sbb
add
add
adc
pop
cmp
sub
add
push
jp
cmp
add
add
or
add
add
inc
add
add
ja
add
pop
pushf
and
add
cmp
add
add
or
add
sbb
add
dec
add
dec
jp
sub
sub
add
cmp
jb
movups
xchg
pushf
and
add
dec
jp
cmp
xchg
add
push
adc
sub
dec
and
add
add
mov
add
or
add
sbb
add
dec
add
cmp
add
sbb
mov
add
and
add
cmp
add
and
add
and
add
pop
dec
pop
add
popf
add
add
push
jp
sub
imul
add
cmp
add
adc
sbb
adc
movs
add
add
push
jp
cmp
add
add
push
sub
add
cmp
add
mov
add
push
and
add
dec
jp
sub
and
(bad)
(bad)
cmp
add
add
or
add
or
add
dec
add
cmp
add
add
or
add
sbb
add
dec
add
dec
jp
sub
mov
inc
adc
xchg
loope
jmp
js
add
cmp
or
add
pop
add
add
or
add
dec
jp
sub
fsubr
add
cmp
js
and
inc
and
add
retf
add
add
push
jp
cmp
sub
add
inc
sbb
sub
add
or
add
pop
add
add
or
add
dec
jp
cmp
add
and
cmp
add
pop
dec
ins
add
clc
add
add
xor
add
sub
add
sub
add
adc
add
add
adc
add
pop
sub
and
add
stos
add
push
adc
xchg
add
add
push
jp
cmp
add
add
or
add
push
add
add
or
add
cmp
add
add
or
add
dec
sub
add
or
add
cmp
add
add
or
add
push
add
add
ja
add
and
add
add
and
add
add
push
jp
sub
popf
add
add
push
pop
pop
adc
aaa
add
add
movaps
add
or
add
sbb
add
cmp
sub
add
add
add
and
add
cmp
add
and
xor
add
pop
dec
ins
add
jp
add
cmp
add
and
add
add
push
add
add
push
adc
and
inc
add
add
nop
add
add
xor
add
pop
dec
add
mov
add
daa
add
add
or
add
add
add
and
add
add
inc
add
add
and
push
jp
cmp
add
add
and
sub
add
and
add
add
push
jp
sub
(bad)
cld
(bad)
(bad)
cmp
add
add
inc
add
add
adc
add
pop
dec
adc
and
add
add
ret
add
push
push
sub
add
push
sub
add
mov
add
adc
adc
push
pop
adc
daa
pop
adc
pop
pop
rcr
cmp
or
add
push
add
add
or
add
cmp
add
dec
add
dec
add
and
add
add
push
cmp
sub
add
nop
add
push
adc
sub
add
sub
add
pop
push
cmp
adc
add
cmps
add
add
push
jp
sub
add
add
scas
add
add
cmp
add
pop
dec
ins
add
rol
add
adc
add
and
add
add
inc
add
add
push
adc
and
add
add
lods
daa
add
push
adc
push
add
add
jmp
add
dec
add
sldt
add
out
add
and
add
and
push
jp
push
cmp
add
add
and
jge
(bad)
jmp
adc
add
dec
jp
sub
jmp
add
dec
add
push
add
add
imul
add
xor
add
pop
pushf
and
add
cmp
push
add
dec
add
add
jg
add
jle
add
add
push
pop
add
add
pop
mov
add
add
xchg
add
push
and
add
cmp
add
adc
sbb
jb
and
add
cmp
add
dec
add
and
add
and
add
pop
pushf
and
add
dec
jp
cmp
add
cmp
add
cmp
add
dec
add
or
add
dec
add
and
jp
dec
add
add
add
(bad)
dec
retf
pop
add
add
(bad)
push
loope
dec
(bad)
cdq
jmp
(bad)
jmp
push
add
(bad)
in
(bad)
(bad)
stc
sar
push
(bad)
jmp
out
push
fdivr
jmp
(bad)
(bad)
cli
in
(bad)
(bad)
mov
int3
(bad)
call
add
and
(bad)
dec
lock
push
(bad)
jmp
hlt
(bad)
inc
xlat
(bad)
call
add
sahf
push
add
sti
sldt
aam
add
push
or
add
(bad)
(bad)
inc
add
add
jecxz
jmp
(bad)
jmp
fdivr
call
(bad)
push
add
hlt
(bad)
(bad)
call
add
dec
out
dec
mov
(bad)
inc
jecxz
dec
jmp
out
add
(bad)
inc
lock
call
fdivr
(bad)
(bad)
(bad)
jmp
or
add
(bad)
call
loopne
inc
(bad)
push
aam
jmp
(bad)
(bad)
push
(bad)
call
(bad)
dec
out
(bad)
(bad)
jl
(bad)
(bad)
fucom
(bad)
inc
add
mov
(bad)
jmp
(bad)
inc
add
fwait
out
(bad)
inc
(bad)
inc
(bad)
jmp
or
add
(bad)
jmp
(bad)
jmp
out
(bad)
push
(bad)
(bad)
jmp
call
add
inc
mov
(bad)
(bad)
fcmovnu
(bad)
jmp
add
add
(bad)
push
(bad)
jmp
iret
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
dec
or
add
lock
jmp
(bad)
(bad)
fcom
add
cli
(bad)
(bad)
push
add
jg
(bad)
jmp
(bad)
(bad)
(bad)
add
add
add
jmp
in
(bad)
call
or
add
add
call
jecxz
jmp
call
(bad)
(bad)
fmul
add
cwde
adc
add
into
(bad)
inc
into
(bad)
jmp
fcos
push
(bad)
jmp
loope
jmp
dec
(bad)
inc
add
add
jmp
jmp
adc
add
adc
add
out
(bad)
jmp
(bad)
call
call
(bad)
call
sldt
cmc
adc
add
cmc
(bad)
call
add
cmp
add
es
(bad)
call
leave
(bad)
call
or
add
leave
(bad)
jmp
xlat
(bad)
(bad)
cmp
(bad)
jmp
or
add
(bad)
(bad)
call
pop
add
add
(bad)
(bad)
clc
adc
add
repz
call
(bad)
call
jmp
(bad)
call
(bad)
dec
push
add
adc
add
mov
sar
sahf
mov
add
lock
dec
hlt
(bad)
(bad)
clc
out
dec
fcos
(bad)
fcmovne
(bad)
dec
or
add
int3
(bad)
dec
aam
call
sar
call
dec
out
(bad)
jmp
(bad)
jmp
out
call
sar
push
(bad)
inc
or
add
and
(bad)
dec
in
jmp
(bad)
(bad)
push
(bad)
(bad)
aas
or
(bad)
dec
into
(bad)
push
(bad)
(bad)
aas
sar
jle
(bad)
push
or
add
(bad)
(bad)
out
loope
dec
loope
jmp
sar
dec
(bad)
inc
or
add
add
ja
add
pusha
sar
es
(bad)
jge
add
jmp
dec
(bad)
call
in
call
(bad)
(bad)
cmp
(bad)
call
add
dec
(bad)
(bad)
push
add
add
adc
add
(bad)
call
(bad)
jmp
repnz
(bad)
stc
sar
jmp
(bad)
dec
push
add
cwde
or
(bad)
call
(bad)
call
adc
add
add
(bad)
call
xlat
(bad)
jmp
(bad)
inc
(bad)
dec
add
add
leave
(bad)
(bad)
sti
or
add
repz
jmp
lock
inc
cmc
(bad)
push
sar
jmp
sar
jmp
or
(bad)
call
in
(bad)
jmp
adc
add
adc
add
push
add
cmp
(bad)
inc
enter
sar
call
(bad)
call
repz
inc
push
add
pop
retf
(bad)
jmp
(bad)
(bad)
mov
pop
add
cmc
in
(bad)
call
add
add
or
add
jmp
(bad)
(bad)
dec
sldt
or
adc
add
pop
add
push
int
jmp
sar
sti
call
(bad)
inc
(bad)
dec
repnz
jmp
push
add
pop
sldt
jne
(bad)
inc
push
add
out
icebp
(bad)
push
add
jmp
int3
(bad)
jmp
fdivr
jmp
add
xchg
add
xor
(bad)
push
sar
call
(bad)
push
int3
(bad)
inc
(bad)
dec
out
(bad)
call
(bad)
(bad)
fcmovnbe
(bad)
call
(bad)
call
retf
sub
(bad)
push
or
add
(bad)
push
(bad)
call
repnz
call
in
(bad)
inc
(bad)
(bad)
stc
mov
(bad)
push
call
add
jl
(bad)
call
add
add
(bad)
inc
(bad)
push
or
add
add
add
(bad)
jmp
(bad)
inc
adc
add
sar
or
(bad)
call
(bad)
dec
call
(bad)
dec
out
(bad)
mov
sar
mov
add
repnz
call
(bad)
call
call
(bad)
call
add
add
adc
add
add
jmp
sbb
(bad)
(bad)
jle
(bad)
(bad)
mov
enter
icebp
(bad)
(bad)
cmp
(bad)
call
add
(bad)
push
add
and
add
pop
or
add
adc
add
(bad)
push
push
add
push
out
push
(bad)
dec
(bad)
(bad)
(bad)
jg
(bad)
push
jmp
cld
push
add
mov
or
add
jmp
(bad)
inc
jmp
(bad)
fiadd
add
cmp
add
jmp
(bad)
dec
or
add
int
(bad)
(bad)
fdivr
dec
add
xchg
retf
(bad)
push
add
add
(bad)
push
(bad)
jmp
leave
(bad)
dec
out
dec
adc
add
(bad)
call
(bad)
jmp
xlat
(bad)
dec
or
(bad)
inc
repnz
(bad)
(bad)
loop
(bad)
ds
push
leave
(bad)
jmp
(bad)
inc
(bad)
(bad)
jge
add
push
or
add
push
add
out
adc
add
cmc
(bad)
jmp
(bad)
jmp
adc
add
out
jmp
loop
(bad)
jge
(bad)
call
adc
add
enter
call
(bad)
call
(bad)
inc
in
call
add
xor
(bad)
push
ret
(bad)
(bad)
cmp
lock
(bad)
fsub
(bad)
call
retf
(bad)
jmp
loop
jmp
mov
(bad)
push
adc
(bad)
call
hlt
(bad)
(bad)
mov
sar
(bad)
jmp
(bad)
fsub
(bad)
call
or
add
in
jmp
in
(bad)
(bad)
mov
jmp
add
push
adc
add
(bad)
jp
(bad)
dec
add
add
movs
sar
inc
(bad)
(bad)
mov
lock
jmp
add
and
add
or
push
or
add
sar
loope
(bad)
dec
(bad)
sub
(bad)
jmp
aam
push
(bad)
jmp
fdivrp
(bad)
mov
(bad)
(bad)
jmp
(bad)
jmp
add
into
hlt
(bad)
dec
fdivr
call
adc
add
in
(bad)
(bad)
cmp
sar
(bad)
mov
or
add
sar
dec
add
add
fcos
call
fdivr
call
(bad)
(bad)
jmp
lock
jmp
in
(bad)
push
in
call
add
(bad)
jmp
(bad)
inc
pop
add
test
(bad)
(bad)
fsubr
(bad)
jmp
add
(bad)
inc
icebp
(bad)
inc
retf
(bad)
push
add
ror
(bad)
jmp
(bad)
inc
repz
jmp
sar
jmp
(bad)
push
in
jmp
lock
call
lock
push
add
dec
loop
(bad)
sti
(bad)
(bad)
jmp
(bad)
inc
add
add
int3
(bad)
(bad)
cmp
add
dec
out
(bad)
jmp
(bad)
push
sar
inc
add
add
repnz
call
mov
(bad)
dec
enter
(bad)
xor
(bad)
dec
(bad)
(bad)
jmp
call
into
(bad)
(bad)
cmp
(bad)
(bad)
adc
add
fcos
(bad)
(bad)
(bad)
inc
push
add
jle
(bad)
call
add
fist
add
sar
inc
leave
(bad)
call
adc
add
jmp
add
loop
add
xor
add
aaa
sldt
sub
(bad)
(bad)
cmp
(bad)
call
in
(bad)
mov
sar
jmp
fdivrp
dec
(bad)
inc
(bad)
call
loope
dec
(bad)
push
in
(bad)
dec
enter
or
add
out
(bad)
cmp
add
cmp
add
lds
add
xchg
sar
dec
out
(bad)
push
(bad)
push
add
out
repnz
call
push
add
xor
(bad)
(bad)
fimul
add
xchg
adc
add
jmp
(bad)
(bad)
(bad)
inc
aam
dec
sar
call
add
inc
(bad)
(bad)
jmp
add
fisttp
add
cld
leave
(bad)
jmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
(bad)
(bad)
jl
(bad)
call
add
into
(bad)
call
out
jmp
repz
jmp
aam
push
(bad)
(bad)
(bad)
in
mov
(bad)
jmp
(bad)
jmp
adc
add
add
push
jp
push
cmp
cmc
(bad)
call
add
pop
ins
pushf
and
add
dec
jp
cmp
cmc
(bad)
call
inc
loopne
into
add
or
sub
add
and
add
cmp
push
sub
je
add
and
add
cmp
or
add
add
test
add
and
add
add
and
add
add
jbe
(bad)
(bad)
dec
add
dec
add
cmp
(bad)
(bad)
dec
add
and
add
and
add
pop
pushf
cmp
sbb
add
push
jp
cmp
cmc
(bad)
call
push
cmp
sbb
add
outs
and
add
sbb
add
push
add
adc
push
jp
cmp
cmc
(bad)
call
inc
loopne
into
add
or
sub
add
and
add
dec
jp
sub
lock
(bad)
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
add
add
push
jp
pop
cmp
hlt
(bad)
(bad)
dec
add
and
add
and
add
pop
pushf
and
mov
(bad)
call
or
jns
pop
adc
add
add
pop
push
rcr
cmp
or
add
sbb
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
add
and
push
jp
sub
and
(bad)
(bad)
cmp
call
adc
ja
add
dec
jp
sub
ss
(bad)
call
add
xchg
add
push
sub
cmp
sbb
add
xor
add
adc
pop
adc
jge
add
cmp
hlt
(bad)
call
imul
and
add
and
add
add
add
(bad)
jmp
popa
add
add
adc
add
pop
dec
ins
add
push
add
add
out
(bad)
jmp
adc
add
and
add
push
ins
add
sbb
add
cmp
repz
(bad)
cmp
sbb
add
inc
add
add
push
add
or
add
cmp
or
add
fcomp
add
dec
add
dec
jp
sub
bnd
(bad)
(bad)
cmp
bound
imul
adc
sub
add
adc
add
add
adc
imul
push
je
add
add
sub
add
push
jae
push
cmp
adc
add
sub
mov
sahf
add
push
adc
lahf
add
push
cmp
add
add
push
add
add
add
add
sub
ins
add
push
adc
outs
add
push
cmp
scas
add
push
sub
xor
and
add
add
push
jae
push
cmp
add
adc
adc
sub
push
adc
dec
sub
add
or
sub
popf
add
push
push
imul
(bad)
(bad)
jmp
and
add
cmp
add
add
add
sub
add
push
adc
dec
sub
add
or
pop
(bad)
(bad)
(bad)
cmp
add
add
push
jae
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
call
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
fld
call
jno
jbe
add
cmp
(bad)
(bad)
(bad)
fstp
add
add
jno
cmp
add
adc
adc
cmp
add
add
push
sub
add
(bad)
push
add
add
fld
add
add
bound
imul
adc
sub
add
adc
stos
add
add
jno
imul
push
je
add
add
dec
push
sub
push
add
add
and
add
dec
inc
add
pop
add
add
dec
sub
add
or
add
add
jb
add
cmp
add
add
add
add
dec
inc
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sub
add
and
add
add
push
inc
add
lods
add
push
cmp
sar
call
dec
sub
push
adc
add
add
cmp
adc
and
popf
(bad)
(bad)
(bad)
cmp
add
adc
jbe
add
cmp
(bad)
(bad)
fstp
add
add
jno
cmp
add
adc
adc
cmp
add
add
push
sub
add
(bad)
push
add
add
fld
add
add
aaa
add
add
and
add
dec
jp
cmp
or
add
or
add
and
add
add
add
add
and
add
add
adc
(bad)
(bad)
dec
add
or
and
add
and
add
pop
pushf
and
repz
(bad)
cmp
add
(bad)
adc
and
add
add
fdivp
(bad)
(bad)
cmp
sbb
add
and
add
pop
dec
pop
add
sbb
add
dec
jp
cmp
lock
(bad)
jle
add
add
add
push
cmp
sbb
add
jp
(bad)
jmp
out
add
add
push
jp
cmp
adc
cmp
pop
add
sbb
add
dec
jp
cmp
pop
add
dec
add
add
add
dec
add
dec
jp
sub
loope
(bad)
(bad)
cmp
(bad)
call
push
sub
push
and
add
push
jp
cmp
pop
add
add
sbb
add
pop
dec
adc
and
mov
or
add
or
add
dec
add
dec
jp
push
cmp
(bad)
(bad)
dec
add
and
add
add
jnp
add
pop
pushf
and
stc
out
(bad)
(bad)
dec
add
and
add
and
add
add
and
add
add
push
jp
sub
int
(bad)
push
add
or
sub
imul
jp
cmp
pop
adc
and
(bad)
jmp
outs
add
add
test
inc
add
and
add
push
adc
and
sbb
add
and
add
add
push
pop
add
scas
add
add
ja
(bad)
call
adc
add
add
cmp
(bad)
(bad)
dec
add
dec
add
dec
jp
sub
inc
out
(bad)
(bad)
dec
add
dec
add
dec
jp
cmp
out
(bad)
(bad)
dec
add
dec
add
dec
jp
sub
push
retf
(bad)
(bad)
cmp
out
(bad)
(bad)
dec
add
or
add
dec
add
dec
jp
cmp
out
(bad)
(bad)
jle
add
add
mov
test
stos
add
push
and
int
(bad)
call
pop
sub
add
adc
aas
add
add
push
jp
sub
mov
test
(bad)
call
dec
jle
add
or
xchg
add
push
cmp
mov
jmp
or
add
cmp
or
add
add
add
and
add
add
xor
add
pop
pushf
and
add
cmp
(bad)
(bad)
dec
add
dec
add
cmp
(bad)
call
or
jns
outs
and
add
add
pushf
and
add
add
push
jp
cmp
out
(bad)
jmp
add
push
sbb
out
jmp
push
add
add
push
jp
cmp
out
(bad)
(bad)
dec
add
dec
add
cmp
pop
pop
pop
adc
and
movs
adc
add
add
push
add
add
push
ins
add
fwait
adc
jp
cmp
in
(bad)
call
adc
adc
add
add
(bad)
in
(bad)
(bad)
dec
mov
add
dec
jp
cmp
xor
add
dec
add
dec
jp
cmp
add
cmp
cmp
add
and
add
dec
jp
cmp
(bad)
(bad)
dec
add
and
add
and
add
add
and
add
cmp
jmp
mov
add
add
push
ins
add
cwde
add
add
inc
in
(bad)
call
add
pop
ins
pushf
and
add
add
push
jp
cmp
in
(bad)
call
pop
adc
adc
and
add
add
es
(bad)
(bad)
cmp
add
add
xchg
add
push
outs
mov
add
sub
dec
and
push
jp
sub
in
in
(bad)
(bad)
dec
add
dec
add
cmp
in
(bad)
call
push
push
ds
(bad)
jmp
jp
add
cmp
js
add
and
add
add
push
add
pop
add
add
scas
in
(bad)
(bad)
dec
add
dec
add
cmp
adc
and
adc
add
xchg
add
push
adc
sub
dec
and
add
jno
(bad)
call
adc
adc
daa
add
add
push
jp
push
cmp
(bad)
jmp
sbb
add
and
add
add
push
pop
add
and
add
cmp
adc
add
adc
add
lea
push
inc
add
ins
add
add
adc
add
fwait
add
add
xor
add
pop
dec
adc
and
add
pop
in
(bad)
call
sbb
adc
adc
imul
and
add
add
imul
(bad)
call
adc
adc
dec
add
add
(bad)
(bad)
(bad)
dec
add
and
add
add
inc
add
add
and
add
cmp
cmp
sub
mov
cmp
add
cmp
or
add
push
add
add
push
add
add
jns
add
pop
pushf
and
add
add
push
jp
push
cmp
loopne
cwde
adc
add
sbb
add
dec
jp
cmp
(bad)
(bad)
dec
add
dec
add
dec
jp
push
cmp
(bad)
(bad)
dec
add
push
add
add
pop
add
add
add
add
pop
pushf
and
add
cmp
jmp
jmp
cmp
add
and
add
add
push
adc
and
sbb
(bad)
(bad)
jle
add
add
add
sub
dec
and
add
add
add
test
add
add
push
ins
add
and
add
cmp
jmp
jbe
add
adc
sub
add
sldt
add
push
jp
pop
cmp
jmp
pop
ins
pushf
and
add
add
push
jp
push
cmp
sub
add
or
cmps
add
push
adc
and
add
add
push
jp
cmp
or
add
pop
add
add
or
add
cmp
jmp
fiadd
add
and
add
pop
dec
add
jmp
(bad)
jmp
int
add
and
add
push
pop
add
jae
add
dec
jp
sub
cmp
out
add
and
add
pop
dec
add
pop
add
add
and
(bad)
call
pushw
adc
inc
adc
add
add
and
add
add
or
or
add
adc
add
dec
add
dec
jp
pop
cmp
jmp
xor
add
dec
add
dec
jp
push
cmp
jmp
inc
add
or
add
dec
add
dec
jp
cmp
adc
add
mov
add
cmp
mov
add
and
dec
adc
cmp
adc
add
xchg
jmp
adc
add
push
jp
push
cmp
(bad)
(bad)
dec
add
and
add
and
pushf
cmp
pop
jmp
add
add
push
add
add
push
ins
add
jecxz
add
dec
jp
sub
cmp
cmp
adc
and
add
add
push
jp
pop
cmp
data16
pop
adc
xchg
pushf
and
add
dec
jp
cmp
jmp
adc
sbb
adc
xchg
pushf
and
stc
call
adc
add
push
add
add
push
add
jno
add
cmp
call
popa
and
add
add
shr
(bad)
(bad)
dec
add
add
add
dec
add
cmp
sub
sub
add
adc
cmp
adc
add
xor
add
and
add
add
xor
add
pop
dec
adc
and
(bad)
cmp
adc
add
cmp
add
pop
dec
add
inc
add
add
jbe
(bad)
call
push
push
ds
in
add
add
push
jp
cmp
call
jb
jge
add
and
add
add
inc
call
adc
add
add
or
add
or
in
adc
add
out
adc
add
xor
(bad)
call
pop
push
jge
add
add
fwait
add
add
pop
call
xor
add
and
add
cmp
adc
add
and
clc
out
(bad)
dec
add
dec
add
cmp
loop
call
push
push
ds
(bad)
jmp
pusha
add
add
leave
out
jmp
sub
cmp
add
pop
dec
ins
add
call
mov
(bad)
(bad)
dec
add
and
add
add
adc
add
pop
pushf
and
add
push
jp
sub
mov
(bad)
jmp
add
add
and
or
add
dec
jp
sub
xor
ins
out
jmp
pop
add
add
sbb
add
pop
dec
adc
and
add
dec
jp
cmp
(bad)
jmp
add
add
and
add
add
push
pop
add
into
add
add
cmp
(bad)
call
popa
adc
pop
pop
cmp
adc
add
adc
add
cmp
out
(bad)
jle
add
add
mov
test
stos
add
push
and
add
(bad)
(bad)
dec
add
sldt
add
or
add
cmp
out
call
add
pop
imul
(bad)
dec
add
dec
add
cmp
out
(bad)
dec
add
dec
add
cmp
inc
pop
pop
adc
cmc
add
add
push
jp
cmp
adc
jle
add
dec
jp
cmp
or
add
or
add
dec
add
dec
jp
sub
data16
(bad)
dec
add
and
add
and
add
add
cmp
add
push
jp
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
dec
jp
sub
and
(bad)
(bad)
cmp
sldt
and
add
pop
dec
ins
add
xchg
add
add
push
jp
push
cmp
(bad)
(bad)
dec
add
sldt
add
or
add
dec
jp
cmp
in
(bad)
dec
add
or
add
and
add
add
push
add
add
and
(bad)
call
push
cmp
push
add
push
push
ror
add
pop
sub
inc
in
jmp
and
add
add
push
jp
sub
pushf
in
(bad)
dec
add
dec
add
cmp
or
add
add
add
dec
add
cmp
(bad)
call
or
jns
pop
adc
add
add
pop
pop
sbb
and
add
dec
jp
cmp
(bad)
(bad)
dec
add
dec
add
cmp
in
(bad)
dec
add
dec
push
add
and
add
and
add
and
push
jp
pop
cmp
in
call
adc
pop
pop
adc
pop
xchg
pushf
and
add
add
push
jp
pop
cmp
in
(bad)
dec
add
or
add
and
aaa
add
add
and
add
add
add
add
adc
pop
adc
add
in
(bad)
cmp
(bad)
call
pusha
push
cmp
or
add
add
push
jp
cmp
adc
pop
pop
adc
or
add
cmp
or
xor
add
dec
add
dec
jp
cmp
(bad)
jmp
add
add
pusha
add
add
push
pop
add
or
add
dec
jp
cmp
(bad)
call
adc
and
add
add
push
jp
cmp
(bad)
dec
add
dec
add
cmp
in
jmp
push
add
add
jb
add
pop
dec
adc
and
add
add
push
jp
cmp
in
jmp
dec
add
add
jbe
add
pop
dec
add
adc
add
cmp
add
and
add
and
add
add
push
ins
add
pop
add
add
push
jp
pop
cmp
jecxz
jmp
pop
add
add
push
add
add
push
adc
and
add
dec
jp
sub
mov
or
add
and
dec
add
xor
add
cmp
xchg
add
push
adc
cmp
or
add
dec
cmp
or
add
mov
(bad)
jmp
add
push
sbb
repnz
add
mov
push
jp
push
cmp
(bad)
call
and
(bad)
and
add
cmp
or
add
or
add
add
add
dec
add
cmp
jmp
or
add
and
add
pop
dec
add
bound
add
cmp
jecxz
(bad)
dec
add
dec
add
cmp
jecxz
call
lahf
or
add
add
add
add
(bad)
jmp
pop
add
add
dec
add
add
push
add
mov
add
repnz
call
add
cs
and
add
dec
jp
sub
je
add
cmp
loop
(bad)
dec
add
and
add
add
and
pushf
and
push
jp
sub
test
(bad)
(bad)
cmp
add
and
add
add
push
ins
add
push
or
add
push
jp
push
cmp
or
add
sldt
add
or
add
dec
jp
push
cmp
(bad)
call
adc
add
sub
mov
sahf
add
push
adc
sbb
add
and
or
add
inc
loop
call
or
jbe
add
adc
and
sub
or
add
or
add
and
cmp
add
pop
pushf
and
push
jp
cmp
loop
call
data16
or
add
pop
adc
xchg
pushf
and
add
add
push
jp
sub
in
loope
call
adc
adc
sbb
pushf
and
add
add
push
jp
cmp
loope
(bad)
dec
add
add
add
and
add
add
add
pop
pushf
and
add
add
push
jp
sub
pop
cli
(bad)
(bad)
cmp
push
add
add
sub
add
pop
dec
adc
and
add
cmp
add
pop
push
and
add
add
jp
(bad)
call
adc
adc
sbb
add
add
ins
loope
(bad)
dec
add
and
add
add
and
dec
loope
call
es
sub
mov
xor
(bad)
(bad)
cmp
xor
int
add
cmp
or
add
pop
push
jae
add
or
push
sub
sti
or
add
push
add
add
or
(bad)
(bad)
dec
add
dec
add
dec
jp
push
cmp
loopne
(bad)
dec
add
and
add
sbb
add
pop
pushf
and
add
add
shl
(bad)
jmp
enter
and
add
pop
dec
ins
add
mov
add
cmp
or
imul
lods
or
add
movs
loopne
jmp
and
add
cmp
jmp
xor
add
cmp
add
add
or
loopne
(bad)
cmp
stos
(bad)
jmp
nop
add
push
cmp
ins
add
add
pop
stos
(bad)
(bad)
cmp
pop
stos
(bad)
push
add
or
sub
sub
and
add
push
cmp
(bad)
inc
sar
cmp
(bad)
jmp
add
push
cmp
aaa
add
add
sbb
cmp
scas
(bad)
(bad)
cmp
loopne
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
add
je
(bad)
call
addr16
scas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
scas
(bad)
jmp
add
push
cmp
(bad)
(bad)
cmp
pusha
mov
(bad)
cmp
(bad)
(bad)
cmp
mov
(bad)
cmp
(bad)
(bad)
cmp
mov
(bad)
cmp
leave
mov
jmp
sldt
add
aad
(bad)
jmp
or
add
cmp
mov
(bad)
cmp
xlat
mov
dec
cmp
mov
jmp
scas
add
push
cmp
mov
inc
sar
(bad)
cmp
mov
jmp
lods
add
push
cmp
mov
jmp
mov
sbb
(bad)
jmp
aaa
add
add
push
mov
jmp
add
mov
call
jb
movs
mov
call
cmp
fdiv
add
add
cmc
mov
(bad)
cmp
sbb
cmp
(bad)
jmp
lods
add
push
cmp
mov
jmp
cmps
add
push
cmp
(bad)
call
pop
cmp
mov
inc
stos
(bad)
(bad)
cmp
(bad)
(bad)
cmp
fdivrp
(bad)
cmp
(bad)
(bad)
cmp
fdivrp
(bad)
cmp
jb
fdiv
add
cmp
mov
call
cmp
push
mov
jmp
test
add
cmp
mov
(bad)
cmp
fdivrp
(bad)
cmp
call
push
cmp
(bad)
(bad)
cmp
push
mov
(bad)
ds
(bad)
(bad)
cmp
(bad)
(bad)
cmp
pop
mov
(bad)
cmp
jg
(bad)
jmp
mov
add
cmp
sbb
add
cmp
mov
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
cmp
add
cmp
mov
(bad)
cmp
sbb
fdivrp
(bad)
cmp
mov
add
push
cmp
pop
add
push
cmp
stos
add
add
sub
cmp
push
inc
sti
(bad)
(bad)
cmp
mov
idiv
(bad)
cmp
mov
fdivrp
(bad)
cmp
(bad)
jmp
pop
add
push
cmp
inc
add
add
xchg
mov
(bad)
(bad)
cmp
add
add
mov
mov
(bad)
cmp
scas
add
push
cmp
mov
add
add
pop
mov
add
push
cmp
mov
add
add
cs
add
add
aaa
mov
sar
(bad)
cmp
(bad)
call
data16
call
cmp
(bad)
(bad)
cmp
jg
(bad)
jmp
lods
add
push
cmp
mov
mov
(bad)
cmp
(bad)
jmp
inc
add
add
push
mov
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
or
add
cmp
pop
cmp
mov
xlat
(bad)
(bad)
cmp
mov
add
add
push
mov
add
add
cmp
add
add
cmp
(bad)
jmp
add
push
cmp
(bad)
call
or
into
mov
add
add
test
(bad)
(bad)
cmp
fdivr
(bad)
cmp
sar
and
add
cmp
sar
and
add
add
cmps
sar
cmp
fdivr
(bad)
cmp
and
stos
sar
and
add
add
movs
sar
sub
cmps
sar
and
add
cmp
ret
adc
cmp
imul
and
add
add
fcmovnb
(bad)
inc
test
(bad)
cmp
ret
and
cld
ret
and
add
cmp
or
(bad)
adc
cmp
(bad)
jmp
push
add
add
out
(bad)
jmp
div
out
cmp
(bad)
and
add
cmp
call
adc
pushf
(bad)
pop
adc
mov
cli
add
add
aam
(bad)
jmp
push
add
add
mov
in
add
cmp
enter
dec
add
add
adc
test
add
cmp
enter
push
fdivr
(bad)
cmp
enter
sub
add
cmp
(bad)
jmp
add
add
int
(bad)
jmp
lods
add
push
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
push
cmp
cmp
retf
cmp
(bad)
(bad)
cmp
retf
pop
adc
and
rcr
(bad)
cmp
retf
(bad)
call
jns
sub
(bad)
jmp
adc
ss
(bad)
jmp
pop
add
add
into
retf
(bad)
(bad)
jle
add
add
push
int3
(bad)
(bad)
cmp
dec
int3
(bad)
jmp
or
add
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
es
int3
(bad)
(bad)
cmp
(bad)
(bad)
cmp
int
call
popa
cmp
(bad)
call
or
ins
int
jmp
pop
add
add
fmul
(bad)
call
add
std
int
jmp
pop
add
add
push
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
iret
(bad)
(bad)
cmp
(bad)
(bad)
cmp
lods
add
push
cmp
iret
(bad)
jmp
add
add
cmp
iret
(bad)
jmp
aas
add
add
(bad)
iret
(bad)
push
add
or
lock
(bad)
jmp
add
push
cmp
iret
(bad)
jmp
push
add
push
cmp
iret
(bad)
call
data16
iret
(bad)
(bad)
cmp
(bad)
(bad)
cmp
push
add
add
mov
(bad)
jmp
xor
add
cmp
add
push
cmp
sar
(bad)
cmp
sub
outs
add
add
xor
(bad)
jmp
aad
add
cmp
sar
(bad)
cmp
(bad)
(bad)
cmp
sar
push
add
or
xchg
(bad)
(bad)
cmp
(bad)
(bad)
cmp
pop
(bad)
(bad)
cmp
add
add
jmp
add
cmp
sar
call
pop
cmp
(bad)
dec
popf
sar
dec
call
(bad)
(bad)
cmp
add
push
cmp
adc
(bad)
(bad)
cmp
dec
cmp
sar
dec
cmp
(bad)
jmp
aaa
add
add
adc
jmp
mov
pop
aam
(bad)
cmp
aam
jmp
add
add
int
(bad)
(bad)
cmp
mov
(bad)
call
push
cmp
push
cmp
pop
add
add
(bad)
(bad)
(bad)
cmp
into
(bad)
(bad)
cmp
(bad)
(bad)
jmp
scas
add
push
cmp
(bad)
(bad)
(bad)
cmp
xor
(bad)
call
dec
add
add
jle
(bad)
jmp
push
add
add
stos
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jmp
mov
jmp
(bad)
call
inc
cmp
add
add
lahf
xlat
(bad)
jmp
jns
add
cmp
xlat
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
lods
add
push
cmp
fcos
(bad)
cmp
(bad)
(bad)
cmp
fcos
call
imul
jecxz
jmp
rol
add
(bad)
jecxz
jmp
test
add
cmp
jecxz
(bad)
cmp
fcos
(bad)
cmp
jecxz
jmp
sub
add
cmp
(bad)
jmp
add
add
cmp
in
(bad)
cmp
fdivr
(bad)
cmp
in
inc
into
(bad)
(bad)
cmp
in
jmp
aad
add
cmp
in
jmp
adc
add
cmp
in
call
pop
cmp
out
jmp
js
add
cmp
out
jmp
test
add
cmp
out
call
adc
or
(bad)
(bad)
cmp
adc
(bad)
(bad)
cmp
inc
call
fdivr
(bad)
cmp
(bad)
jmp
or
add
cmp
(bad)
jmp
or
add
cmp
imul
call
add
add
repz
add
add
out
jmp
fdivr
(bad)
cmp
(bad)
jmp
mov
pop
jmp
(bad)
cmp
jmp
scas
add
push
cmp
cmp
and
(bad)
(bad)
cmp
sbb
(bad)
(bad)
cmp
jmp
(bad)
cmp
fdivr
(bad)
cmp
jmp
jmp
sbb
add
cmp
in
(bad)
(bad)
jge
add
add
cmp
jmp
(bad)
call
jne
popa
in
(bad)
jmp
pop
add
add
pop
in
(bad)
call
data16
pusha
add
push
cmp
add
push
cmp
out
(bad)
jmp
sbb
push
out
(bad)
jmp
mov
and
(bad)
jmp
sbb
add
cmp
out
(bad)
(bad)
cmp
outs
out
(bad)
call
sbb
outs
out
(bad)
jmp
sti
add
add
xchg
out
(bad)
jmp
mov
add
cmp
out
(bad)
jmp
add
add
cmp
out
(bad)
(bad)
cmp
(bad)
(bad)
cmp
out
(bad)
jmp
push
add
add
ret
jmp
pop
add
add
int3
out
(bad)
call
adc
add
push
cmp
call
(bad)
jmp
data16
add
sub
(bad)
(bad)
cmp
xlat
(bad)
(bad)
cmp
(bad)
inc
(bad)
(bad)
(bad)
cmp
out
(bad)
jmp
or
add
cmp
lock
jmp
retf
add
js
(bad)
jmp
or
add
cmp
clc
add
add
xlat
lock
jmp
jns
add
cmp
icebp
(bad)
jmp
jp
add
cmp
or
lods
icebp
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
icebp
(bad)
(bad)
ds
(bad)
(bad)
cmp
repnz
(bad)
cmp
(bad)
(bad)
(bad)
cmp
repnz
jmp
jnp
add
cmp
(bad)
(bad)
(bad)
cmp
xchg
add
push
cmp
repz
jmp
pop
add
add
(bad)
repnz
inc
int3
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
inc
add
add
push
repz
call
jo
pop
repz
jmp
jbe
add
cmp
(bad)
(bad)
cmp
mov
(bad)
cmp
sbb
add
cmp
jo
add
cmp
dec
add
add
movs
repz
jmp
lahf
add
push
cmp
repz
jmp
out
add
cmp
repz
call
pop
cmp
hlt
(bad)
call
js
lock
(bad)
jmp
xchg
add
push
cmp
hlt
(bad)
jmp
sbb
add
cmp
cmc
(bad)
jmp
add
cmc
(bad)
jmp
scas
add
add
dec
cmc
(bad)
jmp
add
add
add
add
popf
push
add
test
add
and
add
sbb
add
add
add
add
add
adc
pop
add
add
inc
add
sbb
add
inc
add
add
inc
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
inc
add
push
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
and
or
add
add
sbb
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
xor
pop
add
add
add
adc
or
xlat
jmp
dec
adc
call
ins
add
add
add
or
aam
add
cmp
add
add
je
add
add
add
or
fst
add
add
push
add
add
fld
add
add
je
add
add
add
or
add
or
add
or
add
jo
add
add
xlat
add
or
aam
add
cmp
add
add
je
add
add
add
or
add
or
add
or
add
jo
add
add
xlat
add
or
(bad)
add
fld
add
add
fld
add
add
outs
retf
add
or
add
jo
fadd
add
add
lea
add
add
add
or
add
or
aam
add
cmp
add
add
outs
retf
add
or
add
jo
fadd
add
add
lea
add
add
add
or
add
or
fst
add
add
push
add
add
fld
add
add
add
jo
push
sub
add
add
add
push
add
cmp
push
sbb
add
add
aas
add
add
sbb
add
add
mov
push
sbb
add
sbb
add
add
add
adc
or
test
call
pop
pop
jae
add
or
push
or
outs
fild
add
or
adc
or
sbb
add
pop
push
or
add
fadd
add
adc
or
add
add
add
cmp
fisttp
cmp
add
add
outs
cmp
add
fadd
sub
add
adc
add
add
add
push
add
adc
add
add
add
adc
or
or
call
add
or
sub
add
push
or
pop
and
and
add
lods
add
or
add
or
pop
adc
and
add
lods
add
or
add
or
pop
outs
fild
add
pop
jae
add
or
add
add
add
or
add
or
outs
loop
add
or
adc
add
adc
add
xor
add
sub
sub
push
call
adc
add
adc
add
xor
add
sub
sub
push
dec
adc
call
adc
add
adc
add
xor
add
sub
sub
xchg
xor
push
call
adc
add
adc
add
xor
add
sub
sub
pop
data16
adc
call
adc
add
add
add
xor
add
adc
add
adc
add
add
add
xor
add
adc
add
adc
add
inc
add
add
or
adc
sbb
push
call
add
jo
push
outs
fwait
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
or
ret
bound
adc
call
add
jo
push
outs
fwait
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
add
add
add
add
sub
sub
cwde
inc
inc
adc
call
adc
add
adc
add
xor
add
sub
sub
jbe
push
adc
call
push
sub
sub
push
call
xor
add
sub
add
or
mov
jl
adc
call
add
dec
add
outs
jecxz
add
sub
add
bound
or
mov
imul
call
add
outs
in
add
sub
add
jb
or
das
fnstsw
adc
call
add
dec
add
outs
in
add
sub
add
sub
sub
cmp
push
call
or
add
mov
add
or
push
push
call
add
outs
fild
add
sub
add
jb
or
cmps
js
push
push
sub
add
or
add
add
or
add
add
or
jmp
gs
adc
call
add
outs
out
add
sub
add
sub
sub
push
call
or
add
call
add
bound
or
pop
es
adc
call
add
outs
aad
add
sub
add
bound
or
push
push
call
add
outs
jmp
add
add
or
leave
sub
dec
adc
call
or
add
sub
add
or
js
cmp
push
sub
add
or
add
add
or
add
add
out
push
adc
call
add
dec
add
dec
add
outs
jmp
add
sub
add
xchg
sub
sub
call
add
dec
add
dec
add
dec
add
outs
loopne
add
sub
add
bound
or
mov
cmp
es
sub
add
add
or
add
add
or
pop
cmp
call
add
outs
loop
add
sub
add
bound
or
push
push
call
add
outs
loope
add
sub
add
jbe
or
sbb
xor
push
call
or
add
or
add
in
add
or
add
push
sub
sub
sbb
adc
call
mov
add
xchg
sub
sub
inc
push
push
call
add
dec
add
dec
add
dec
add
outs
mov
add
add
or
data16
adc
call
add
add
or
sahf
sbb
cmp
push
sub
add
jb
or
fsub
call
add
dec
add
outs
jecxz
add
sub
add
bound
or
pusha
pop
push
dec
adc
call
add
outs
in
add
sub
add
jb
or
cmc
sub
xor
push
call
add
dec
add
outs
in
add
sub
add
sub
sub
push
push
push
push
sub
add
sub
add
or
add
bound
or
xchg
mov
adc
call
add
outs
fild
add
sub
add
jb
or
dec
dec
pop
xor
call
add
dec
add
outs
out
add
sub
add
bound
or
(bad)
cmc
add
adc
call
add
outs
aad
add
sub
add
bound
or
pusha
cs
dec
adc
call
add
outs
jmp
add
add
or
scas
xor
adc
call
or
add
sub
add
or
data16
adc
call
add
dec
add
outs
jmp
add
mov
call
add
dec
add
dec
add
outs
jmp
add
sub
add
xchg
sub
sub
push
es
sub
add
or
add
or
add
or
add
add
or
add
add
or
inc
pushf
pop
pop
adc
call
add
outs
in
add
or
add
add
or
add
pop
adc
call
add
outs
loop
add
sub
add
bound
or
movs
popf
sub
adc
call
add
outs
loope
add
sub
add
bound
or
pop
call
push
sub
add
add
or
add
add
or
idiv
call
or
add
sbb
add
sub
add
or
push
nop
pop
gs
call
or
add
and
add
sub
add
or
push
xchg
jae
adc
call
or
add
or
add
in
add
or
add
inc
sub
sub
push
call
add
add
or
pop
mov
call
add
add
add
or
add
or
add
out
add
or
ds
or
add
or
add
rol
or
ds
or
add
or
add
rol
or
dec
add
or
add
or
add
or
add
lds
add
sub
dec
add
dec
add
dec
add
sub
add
or
dec
add
or
add
or
add
or
add
out
add
or
cs
or
add
ret
add
or
pop
add
or
add
or
add
or
add
or
add
les
add
sub
add
push
add
push
sub
add
lock
or
sub
or
add
add
or
add
dec
add
outs
repnz
or
add
add
or
add
or
add
repz
or
push
add
mov
ds
or
add
or
add
hlt
add
or
ds
or
add
or
add
cmc
add
or
sub
or
add
add
or
add
dec
add
outs
test
sub
or
add
add
or
add
dec
add
outs
stc
add
or
add
dec
add
outs
cli
add
or
add
add
or
add
or
add
sti
add
or
sub
or
add
add
or
add
dec
add
outs
std
add
or
add
dec
add
outs
inc
add
sub
sub
or
add
add
or
add
dec
add
outs
add
add
sub
ds
or
add
or
add
add
add
sub
add
or
add
or
add
add
add
sub
dec
add
outs
aaa
add
or
add
dec
add
outs
cmp
add
sub
cmp
or
add
or
add
add
or
add
dec
add
outs
in
add
sub
cmp
or
add
or
add
add
or
add
dec
add
outs
fild
add
sub
cmp
or
add
or
add
add
or
add
add
or
add
call
sub
or
add
add
or
add
dec
add
outs
jmp
add
dec
add
dec
add
dec
add
sub
add
or
sub
or
add
add
or
add
add
or
add
add
sub
or
add
add
or
add
dec
add
outs
fwait
add
or
add
dec
add
outs
push
add
or
add
add
or
add
sub
dec
add
dec
add
outs
jmp
dec
add
dec
add
dec
add
outs
jmp
add
sub
pop
dec
add
dec
add
dec
add
dec
add
outs
loopne
add
sub
sub
or
add
add
or
add
dec
add
outs
loop
add
sub
sub
or
add
add
or
add
dec
add
outs
out
add
sub
sub
or
add
add
or
add
add
or
add
or
add
sub
dec
add
outs
or
add
sub
ds
or
add
or
add
or
add
sub
or
add
or
add
or
add
add
or
add
add
or
add
and
add
sub
add
or
add
or
add
sub
add
or
add
sub
dec
add
dec
add
outs
or
add
add
or
add
or
add
push
add
or
ds
or
add
or
add
pop
add
push
sub
dec
add
outs
int
add
sub
cs
or
add
sgdtd
or
cs
or
add
adc
add
sub
add
or
add
adc
add
sub
dec
add
outs
adc
add
sub
sub
or
add
add
or
add
add
or
add
or
add
adc
add
sub
dec
add
outs
adc
add
add
or
add
or
add
test
sub
or
add
add
or
add
dec
add
outs
stos
add
or
add
dec
add
outs
pop
add
or
add
dec
add
sub
add
or
add
dec
add
dec
add
outs
sbb
add
sub
cs
or
add
sbb
add
sub
add
or
add
sbb
add
sub
dec
add
outs
sbb
add
sub
cs
or
add
sbb
add
sub
add
or
add
or
add
lods
add
or
ds
or
add
or
add
sbb
or
sub
or
sub
adc
add
sub
add
sbb
sbb
add
sub
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
add
add
add
add
adc
add
add
add
add
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
sub
add
push
sub
sbb
sbb
add
sub
sbb
sbb
add
sub
sub
sub
inc
adc
call
sub
sub
push
call
aam
add
sub
add
sub
add
push
sub
bound
or
mov
inc
adc
call
add
sub
add
or
add
add
or
rcr
xor
es
sub
add
sub
add
or
add
or
sbb
push
call
add
add
sub
add
sub
push
sub
sub
ficom
adc
call
fild
add
sub
add
neg
ins
adc
call
add
add
fadd
add
outs
mov
fld
add
push
call
inc
add
add
inc
sub
sub
push
call
add
add
or
inc
inc
inc
adc
call
add
add
or
mov
push
call
add
sub
add
or
add
add
or
jecxz
inc
xor
call
or
add
and
add
sub
add
or
shl
pop
dec
adc
call
add
outs
add
add
sub
add
adc
push
add
add
aaa
add
adc
or
jmp
pop
inc
adc
call
add
add
push
sub
cmp
or
add
pop
add
add
or
add
dec
sub
cmp
add
dec
add
or
add
dec
add
cmp
add
dec
add
sbb
add
dec
add
add
inc
pop
add
dec
add
add
or
add
cmp
pop
add
and
add
and
dec
add
add
cmp
pop
add
dec
add
sldt
add
inc
add
add
cmp
add
pop
pushf
and
add
cmp
push
add
adc
sbb
push
and
push
add
dec
add
or
add
and
xor
add
pop
pushf
and
rcr
add
or
add
push
add
add
cmp
add
and
add
add
and
add
add
mov
or
add
pop
add
add
or
add
cmp
or
add
add
add
and
aas
add
add
and
push
sub
cmp
add
and
add
add
xor
add
pop
dec
add
add
cmp
add
dec
add
adc
add
dec
add
cmp
push
add
add
sub
dec
adc
add
cmp
add
dec
add
add
or
add
cmp
add
and
add
add
or
add
pop
dec
sbb
and
add
cmp
sbb
adc
and
add
add
or
add
dec
sub
cmp
sbb
sbb
and
add
add
or
add
dec
sub
push
cmp
or
add
sldt
add
or
add
cmp
or
add
adc
or
add
dec
sub
pop
cmp
or
add
sldt
add
arpl
add
and
add
add
and
add
dec
sub
cmp
add
and
add
and
add
pop
dec
add
add
dec
sub
cmp
add
dec
add
add
add
dec
add
cmp
or
add
sbb
add
and
add
add
adc
add
pop
pushf
and
add
add
push
sbb
sbb
and
popa
add
add
pop
add
add
and
add
add
out
add
dec
add
push
add
add
xchg
add
add
xor
add
pop
pushf
and
add
dec
sub
cmp
xor
add
ret
sbb
add
or
add
pop
add
add
mov
add
and
add
add
and
add
dec
sub
cmp
add
cmp
sub
add
xchg
sbb
add
or
add
or
or
add
cmp
add
rcl
add
add
repnz
add
div
add
and
add
sub
add
push
cmp
xor
add
div
add
adc
and
sbb
add
pop
adc
and
imul
dec
or
dec
sub
and
push
sbb
and
mov
add
repz
add
cmp
sbb
and
mov
add
or
add
(bad)
inc
add
dec
pop
dec
or
add
dec
add
(bad)
inc
add
dec
add
adc
push
add
and
or
pop
dec
add
push
or
and
or
add
(bad)
inc
add
dec
pop
dec
or
add
dec
add
(bad)
inc
add
dec
add
adc
push
add
and
sub
add
or
add
or
add
push
or
dec
add
or
add
push
or
dec
add
or
add
dec
add
dec
add
push
or
add
dec
add
push
dec
add
dec
add
dec
add
dec
or
add
and
add
add
add
add
add
add
or
add
pop
dec
sbb
dec
add
ins
dec
add
pop
dec
add
pop
ins
dec
or
dec
add
or
add
dec
add
pop
dec
or
dec
add
dec
add
pop
ins
dec
add
or
add
pop
ins
dec
sbb
dec
add
or
add
fs
dec
sub
dec
add
or
add
push
sub
dec
add
or
add
bound
push
sub
dec
add
or
add
push
sub
dec
add
or
add
or
push
sub
dec
add
or
add
push
sub
dec
add
adc
or
add
or
add
or
add
push
sub
dec
add
ins
pop
adc
and
add
cmp
add
dec
add
add
add
dec
add
add
sbb
add
or
add
sldt
add
dec
add
add
jl
add
pop
pushf
and
add
cmp
sbb
add
or
add
sldt
add
popf
add
add
inc
add
add
and
push
sub
cmp
sbb
add
or
xchg
xor
add
push
call
add
dec
sub
cmp
cmp
add
cmp
sbb
add
or
add
adc
add
dec
add
add
push
sub
cmp
add
cmp
pop
add
cmp
adc
pop
pop
inc
bound
add
add
push
sub
push
cmp
fiadd
add
and
add
pop
dec
daa
add
rol
add
cmp
add
adc
adc
adc
inc
add
pop
rcr
cmp
add
adc
adc
pop
adc
and
add
add
push
sub
cmp
xor
add
(bad)
adc
add
inc
sbb
add
jb
add
and
add
add
push
adc
add
cmp
outs
add
add
push
add
add
push
add
add
cmp
add
dec
add
adc
add
and
add
and
add
add
and
add
dec
sub
cmp
das
add
cmp
sbb
add
clc
or
push
ds
add
and
sub
cmp
sbb
add
and
and
add
add
rcr
add
or
add
add
add
and
add
add
add
add
pop
pushf
and
add
add
mov
or
add
or
add
and
add
add
and
add
pop
pushf
and
jnp
add
and
add
and
add
add
push
daa
add
and
add
dec
sub
pop
cmp
add
and
add
xor
add
pop
dec
adc
add
cmp
add
or
add
or
add
dec
add
cmp
add
dec
add
or
add
dec
add
cmp
add
dec
add
or
add
and
add
add
push
add
add
and
cmc
pop
add
dec
add
adc
add
and
dec
add
add
and
add
add
push
sub
cmp
or
int3
pop
add
and
add
add
push
add
add
push
adc
add
cmp
or
add
pop
add
add
or
add
dec
sub
pop
cmp
jnp
add
and
add
pop
dec
sbb
and
jns
add
dec
add
add
add
dec
add
cmp
add
dec
add
add
add
dec
add
add
dec
pop
add
dec
add
add
add
dec
add
add
push
sub
cmp
sub
add
dec
add
or
add
dec
add
cmp
pop
add
dec
add
or
add
and
aaa
add
add
and
add
add
push
sub
cmp
sub
push
add
and
cmp
add
pop
dec
adc
add
dec
sub
pop
cmp
push
add
dec
add
or
add
dec
add
add
push
sub
cmp
or
add
pop
add
add
das
add
add
push
add
add
and
add
add
push
sub
pop
cmp
or
add
add
add
and
add
add
and
pushf
and
add
add
imul
add
or
add
add
add
and
add
and
add
pop
pushf
and
add
push
sub
cmp
add
or
add
sbb
add
dec
add
cmp
push
add
cmp
stc
(bad)
call
add
push
and
add
add
and
or
add
add
add
dec
add
add
push
sub
cmp
je
add
and
add
pop
dec
adc
add
cmp
adc
adc
popa
adc
and
add
cmp
adc
add
add
inc
add
add
push
sbb
and
add
add
push
sub
pop
cmp
sbb
add
and
add
pop
dec
sbb
and
add
dec
sub
cmp
fwait
adc
add
add
pop
add
add
push
sbb
and
xchg
sbb
and
add
add
jne
add
and
add
pop
pushf
and
push
sub
cmp
add
push
adc
add
push
sub
pop
cmp
add
and
add
add
ins
add
add
push
adc
add
dec
sub
cmp
sub
add
cmp
(bad)
(bad)
cmp
adc
adc
and
add
add
or
add
dec
sub
cmp
adc
adc
pop
pop
inc
sar
(bad)
jmp
jo
add
dec
sub
cmp
adc
add
pop
add
add
aaa
add
add
push
daa
add
nop
add
add
fcom
add
or
add
adc
add
and
add
and
add
pop
pushf
and
add
add
push
sub
cmp
sub
add
pop
and
add
stos
adc
add
or
add
sldt
add
adc
add
and
add
pop
pushf
and
add
add
push
sub
cmp
add
add
jle
add
dec
add
adc
add
add
push
add
add
and
add
dec
sub
pop
cmp
add
and
xor
dec
sbb
and
add
add
inc
adc
add
or
add
add
add
dec
add
add
push
sub
pop
cmp
add
dec
add
or
add
and
add
add
jnp
add
pop
pushf
and
add
add
push
sub
pop
cmp
adc
add
xchg
add
add
xor
add
pop
dec
add
add
cmp
adc
add
and
adc
add
dec
add
add
rcl
add
dec
add
or
add
add
xor
add
pop
pushf
and
add
cmp
or
push
add
add
push
sbb
and
add
cmp
jle
add
and
add
add
push
sbb
and
add
add
push
sub
cmp
lods
or
add
jne
add
dec
add
push
add
add
inc
add
add
dec
add
add
and
add
cmp
add
dec
add
add
add
and
add
add
dec
add
add
and
push
sub
cmp
adc
add
or
add
push
add
add
or
add
dec
sub
cmp
adc
add
or
add
add
add
dec
add
add
push
sub
cmp
not
add
and
add
add
dec
sbb
and
add
add
push
sub
pop
cmp
adc
add
enter
and
add
pop
dec
sbb
and
add
add
push
sub
cmp
sub
add
mov
add
and
add
add
sub
dec
add
add
cmp
adc
and
xchg
adc
add
or
add
add
add
dec
add
cmp
add
dec
add
push
add
add
or
add
cmp
add
dec
add
or
add
dec
add
dec
sub
pop
cmp
add
or
add
push
add
add
or
add
dec
sub
cmp
add
cmp
adc
add
add
add
and
add
pop
dec
sbb
and
add
add
push
adc
add
or
add
pop
add
add
or
add
cmp
adc
add
or
add
or
add
dec
add
dec
sub
cmp
adc
add
or
add
add
cmp
add
and
add
pop
pushf
and
add
add
mov
xchg
add
add
xor
add
pop
dec
adc
add
dec
sub
push
cmp
or
add
adc
jnp
add
and
add
and
push
sub
push
cmp
add
and
add
and
add
add
push
adc
add
dec
sub
pop
cmp
add
and
add
add
je
add
pop
dec
add
add
dec
sub
push
cmp
adc
add
sub
add
and
add
add
push
add
add
cmp
add
dec
add
sbb
add
dec
add
add
or
add
dec
add
push
add
add
or
add
dec
sub
push
cmp
adc
add
jp
add
and
add
pop
dec
adc
add
dec
sub
cmp
adc
add
xchg
add
add
dec
add
add
push
adc
add
cmp
xchg
add
add
xor
add
pop
dec
sbb
and
add
add
mov
dec
add
add
sti
add
and
add
test
add
pop
or
add
sahf
add
add
je
add
and
add
add
inc
add
add
push
daa
add
lea
add
cmp
add
dec
add
or
add
dec
add
dec
sub
cmp
add
and
add
add
dec
adc
and
add
add
daa
adc
add
ins
add
add
or
add
pop
dec
daa
add
push
add
add
push
sub
push
cmp
or
add
adc
add
and
add
add
inc
add
add
and
sldt
and
push
add
add
push
daa
add
add
add
ror
add
adc
(bad)
jmp
das
add
add
push
sub
cmp
or
add
push
add
add
je
add
and
add
and
movs
sldt
and
add
add
push
add
add
push
sbb
and
add
cmp
inc
add
adc
and
add
cmp
add
and
add
and
add
pop
dec
adc
add
cmp
add
adc
adc
adc
adc
adc
pop
adc
pop
pop
pop
rcr
cmp
add
dec
add
sbb
add
and
add
add
inc
add
add
and
add
cmp
add
and
add
add
push
add
add
push
daa
add
les
add
cmp
sldt
dec
add
adc
add
dec
add
add
jmp
add
dec
add
or
add
dec
add
add
push
sub
cmp
push
add
dec
add
pop
add
add
or
add
cmp
or
add
adc
add
and
add
add
inc
add
add
and
add
cwde
push
add
dec
add
or
add
dec
add
cmp
inc
add
add
retf
add
and
add
dec
sub
cmp
add
and
cmp
add
pop
dec
adc
add
dec
sub
push
cmp
add
dec
add
push
add
add
xor
add
add
and
add
add
push
sub
cmp
push
add
adc
mov
pop
adc
add
push
sub
cmp
push
add
adc
adc
sbb
xchg
pop
sbb
and
push
sbb
xchg
pop
adc
adc
adc
pop
pop
loopne
push
bound
and
push
loopne
pusha
adc
and
add
add
push
sub
cmp
or
add
add
sub
dec
daa
add
xor
add
cmp
or
sbb
and
jno
add
and
add
pop
pushf
and
fwait
or
add
add
sub
add
pop
dec
adc
add
cmp
or
add
or
or
add
cmp
add
dec
add
or
add
dec
add
dec
sub
cmp
add
and
add
add
dec
add
add
push
adc
add
cmp
sbb
add
and
add
add
push
daa
add
push
add
cmp
add
add
add
add
pop
dec
sbb
and
add
dec
sub
cmp
or
adc
and
add
add
out
add
add
dec
add
add
and
loopne
add
dec
add
add
add
and
add
and
add
add
and
add
add
push
sub
cmp
or
add
or
add
sbb
add
dec
add
dec
sub
push
cmp
adc
and
add
add
or
add
dec
sub
cmp
or
add
push
add
add
or
add
cmp
add
or
add
pop
add
add
dec
add
add
pop
add
add
and
add
cmp
add
dec
add
or
add
dec
add
add
xor
pop
add
add
cmp
dec
sbb
and
add
add
sbb
add
dec
add
or
add
and
and
add
pop
pushf
and
add
or
add
adc
add
and
sub
add
pop
pushf
and
add
add
out
add
dec
add
or
add
dec
add
add
into
or
add
or
add
add
add
and
add
add
push
add
add
and
add
push
sub
push
cmp
mov
add
and
add
add
push
adc
add
dec
sub
cmp
adc
bound
adc
out
add
add
push
sub
push
cmp
add
or
add
add
add
dec
add
add
push
sub
cmp
add
dec
add
or
add
dec
add
add
cmp
add
dec
add
pop
add
add
or
add
cmp
add
dec
add
or
add
and
add
and
add
pop
pushf
and
add
cmp
dec
add
add
cmp
dec
adc
add
dec
sub
push
cmp
or
add
and
sbb
jmp
add
add
push
sub
push
cmp
or
add
or
add
add
or
add
cmp
push
add
add
and
add
pop
dec
adc
add
dec
sub
cmp
or
add
or
add
dec
add
add
or
add
xchg
add
and
dec
add
add
dec
sub
push
cmp
add
dec
add
pop
add
add
or
add
and
add
and
add
cmp
add
push
lea
add
adc
and
add
add
cmp
add
and
xor
add
pop
dec
adc
add
dec
sub
cmp
add
adc
bound
add
and
add
pop
dec
daa
add
sub
add
cmp
or
add
or
add
or
add
and
add
and
add
pop
pushf
and
add
add
loope
add
and
add
add
push
sbb
and
add
ror
add
or
add
adc
or
add
cmp
or
add
add
add
dec
add
cmp
or
add
adc
add
dec
add
add
push
sub
cmp
add
dec
add
push
add
add
fild
add
and
add
pop
pushf
and
push
sub
cmp
add
and
add
add
push
add
add
push
sbb
and
add
cmp
add
dec
add
sbb
add
and
add
add
and
sbb
add
dec
add
add
add
dec
add
add
push
sub
cmp
add
cmp
or
add
or
add
pop
add
add
or
add
cmp
or
add
stos
add
add
cmp
add
pop
dec
add
add
dec
sub
cmp
test
mov
or
add
push
add
add
or
add
dec
sub
pop
cmp
or
add
sbb
data16
add
jno
add
pop
pushf
and
push
sub
cmp
pop
add
cmp
or
add
sbb
add
and
pop
or
add
or
add
adc
add
dec
add
cmp
add
dec
add
push
add
add
or
add
dec
sub
cmp
or
add
or
or
add
cmp
or
add
xor
add
and
add
add
push
adc
add
cmp
pop
add
adc
pop
adc
and
add
cmp
pop
add
dec
add
push
add
add
sbb
add
and
add
add
and
add
cmp
pop
add
dec
add
push
add
add
je
add
and
add
pop
pushf
and
stos
pop
add
and
add
add
pusha
add
add
push
add
add
dec
sub
cmp
or
add
add
add
dec
add
dec
sub
push
cmp
add
or
add
add
add
dec
add
add
pusha
pop
add
dec
add
add
add
and
add
add
sbb
add
pop
pushf
and
push
sub
cmp
pop
add
dec
add
add
add
dec
add
cmp
or
add
add
add
and
cmp
add
pop
pushf
and
add
cmp
push
add
dec
add
add
add
and
add
add
dec
add
add
and
fild
add
dec
add
sbb
or
add
cmp
push
add
adc
adc
sbb
adc
add
inc
pop
pop
adc
and
add
cmp
or
add
adc
add
and
sub
add
pop
pushf
and
add
dec
sub
cmp
jbe
(bad)
(bad)
cmp
push
or
adc
pop
and
add
cmp
add
dec
add
or
in
add
and
add
and
add
add
push
push
add
dec
add
sbb
add
and
add
and
add
pop
pushf
and
push
sub
cmp
push
add
and
add
add
inc
add
add
push
sbb
and
add
add
or
add
dec
add
sbb
add
dec
add
cmp
add
adc
and
add
and
add
and
add
pop
pushf
and
aad
add
and
add
and
add
pop
dec
add
add
dec
sub
cmp
add
add
xor
add
pop
dec
adc
add
cmp
or
add
add
add
and
add
and
pushf
and
add
dec
sub
pop
cmp
add
and
xor
add
pop
dec
sbb
and
add
add
push
sub
cmp
add
and
add
add
push
add
add
push
sbb
and
add
cmp
add
dec
add
sbb
add
and
add
add
and
cs
adc
and
add
add
lahf
add
add
xor
pushf
and
syscall
add
dec
add
push
add
add
xor
add
and
add
add
cmp
add
cmp
cmp
add
es
add
add
push
sub
push
cmp
add
add
and
add
adc
and
add
add
mov
or
add
sbb
or
add
dec
sub
cmp
add
add
and
add
push
sbb
and
add
dec
sub
push
cmp
or
add
or
add
dec
add
cmp
add
or
add
sldt
add
or
add
cmp
add
or
add
sbb
add
dec
add
cmp
add
or
add
pop
add
add
inc
add
add
jae
add
pop
pushf
and
add
add
or
add
add
add
and
add
add
push
add
add
and
add
cmp
add
add
or
add
or
mov
add
and
add
pop
pushf
and
out
add
dec
add
add
add
dec
add
add
mov
adc
sbb
xchg
pop
sbb
and
push
sbb
xchg
pop
adc
adc
adc
pop
pop
loopne
push
bound
and
push
loopne
pusha
adc
and
add
add
push
sub
push
cmp
sub
adc
add
and
add
add
or
add
sbb
add
dec
add
add
push
mov
add
and
add
add
push
sbb
and
add
add
dec
add
add
pop
out
(bad)
call
and
add
and
add
add
cmp
add
dec
add
or
add
dec
add
add
push
sub
push
cmp
add
add
or
add
sbb
add
and
add
add
adc
add
pop
pushf
and
add
add
hlt
add
add
or
add
or
add
and
aas
add
add
and
aad
add
and
add
and
add
add
push
add
add
dec
sub
cmp
add
add
add
add
push
sbb
and
add
cmp
sub
pop
adc
and
add
add
xchg
add
add
or
add
adc
add
and
add
and
add
pop
pushf
and
add
add
js
add
dec
add
or
add
and
add
add
dec
add
add
and
push
add
add
or
add
add
add
and
xor
add
pop
pushf
and
xor
add
adc
cmp
sbb
add
aam
add
add
add
add
add
push
sub
cmp
sbb
add
repnz
(bad)
(bad)
cmp
or
add
push
add
add
or
add
cmp
add
add
or
add
push
add
add
mov
add
and
add
add
and
add
dec
sub
push
cmp
add
add
or
add
add
add
and
cmp
add
pop
pushf
and
sub
cmp
or
add
push
add
add
or
add
cmp
or
add
push
add
add
or
add
dec
sub
cmp
add
dec
add
add
add
dec
add
add
add
add
adc
sbb
add
cmp
add
dec
add
adc
add
and
add
and
add
add
and
add
add
cmp
add
adc
push
bound
pop
and
add
dec
sub
cmp
add
add
mov
add
add
push
add
add
cmp
or
add
push
add
add
add
add
and
add
pop
pushf
and
add
dec
sub
push
cmp
add
add
or
add
sbb
add
dec
add
cmp
add
add
xchg
add
add
xor
add
pop
dec
sbb
and
add
add
mov
or
add
push
add
add
or
add
cmp
fld
add
and
add
pop
dec
daa
add
inc
add
cmp
add
dec
add
or
add
and
add
add
bound
add
pop
pushf
and
push
call
add
pop
dec
add
add
dec
sub
cmp
add
dec
add
add
or
add
dec
sub
push
cmp
add
add
adc
and
add
add
and
add
and
add
add
pop
add
add
push
sbb
cmp
stc
(bad)
jmp
aaa
add
add
push
sub
dec
add
add
add
loop
(bad)
cmp
(bad)
jmp
out
call
(bad)
call
add
add
jmp
cmc
jmp
jmp
(bad)
call
(bad)
push
jmp
(bad)
jmp
fdivr
(bad)
in
loop
call
add
add
(bad)
dec
loope
inc
add
shl
(bad)
jmp
clc
(bad)
push
(bad)
in
pop
add
cwde
(bad)
call
add
xchg
loopne
(bad)
mov
cmc
(bad)
jmp
or
add
(bad)
call
hlt
(bad)
dec
out
(bad)
dec
(bad)
dec
or
add
(bad)
dec
or
add
jmp
add
(bad)
(bad)
jmp
add
add
push
add
add
push
add
xbegin
(bad)
jmp
push
add
mov
in
inc
call
add
cld
repz
(bad)
push
(bad)
(bad)
fucomip
(bad)
jmp
add
(bad)
jmp
add
add
(bad)
inc
out
(bad)
push
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
jmp
call
sldt
push
or
add
(bad)
push
(bad)
jmp
add
add
pop
stc
(bad)
inc
or
add
(bad)
jmp
in
(bad)
inc
inc
in
(bad)
(bad)
loope
call
(bad)
call
or
add
or
add
(bad)
(bad)
fucomip
(bad)
dec
add
add
inc
repnz
push
push
add
cmp
add
std
fdivr
push
add
add
lock
call
repnz
(bad)
mov
pop
add
ret
sldt
(bad)
call
add
scas
clc
(bad)
(bad)
jp
(bad)
push
call
add
inc
or
add
in
(bad)
(bad)
cmp
add
aad
(bad)
jmp
jmp
(bad)
push
add
push
or
add
(bad)
call
clc
(bad)
call
out
jmp
add
(bad)
(bad)
fsubr
(bad)
jmp
(bad)
inc
out
jmp
(bad)
dec
add
pop
(bad)
inc
out
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
push
add
add
add
add
or
add
repnz
jmp
or
add
push
add
xchg
lock
inc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
hlt
(bad)
dec
icebp
(bad)
(bad)
stc
jecxz
call
(bad)
jmp
jecxz
jmp
or
add
clc
(bad)
call
add
cmp
(bad)
call
add
sbb
add
adc
(bad)
dec
add
add
in
inc
add
add
loope
push
call
(bad)
call
idiv
call
add
ja
add
stc
or
add
repz
(bad)
inc
add
add
idiv
inc
add
add
add
add
loopne
call
jmp
std
in
(bad)
mov
in
(bad)
fmul
(bad)
dec
cmc
(bad)
push
add
or
(bad)
call
add
clc
add
add
add
mov
or
add
add
add
add
es
(bad)
jg
(bad)
dec
icebp
(bad)
call
out
call
(bad)
inc
(bad)
jmp
(bad)
jmp
in
jmp
add
add
(bad)
push
(bad)
inc
or
add
pop
add
addr16
add
imul
call
add
add
(bad)
jmp
(bad)
push
in
(bad)
inc
(bad)
jmp
(bad)
(bad)
mov
add
add
jns
add
dec
push
add
fcomi
(bad)
(bad)
mov
jmp
pushf
add
add
lock
inc
out
(bad)
dec
or
add
loop
push
hlt
(bad)
call
out
(bad)
jmp
(bad)
call
(bad)
push
or
add
add
push
out
(bad)
push
(bad)
call
pop
add
dec
icebp
(bad)
push
out
jmp
add
(bad)
jmp
add
jnp
add
(bad)
jmp
(bad)
(bad)
fucom
(bad)
push
icebp
(bad)
(bad)
call
repz
jmp
(bad)
push
(bad)
push
out
(bad)
dec
sldt
imul
add
add
push
add
jae
(bad)
call
(bad)
call
(bad)
(bad)
cmp
(bad)
jmp
(bad)
call
icebp
(bad)
jmp
idiv
jmp
in
(bad)
jmp
add
dec
add
pop
jecxz
jmp
(bad)
call
(bad)
(bad)
jge
add
xor
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
jmp
call
(bad)
(bad)
jg
(bad)
call
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
aas
lock
push
add
pop
stc
(bad)
jmp
add
lods
or
add
out
(bad)
inc
clc
(bad)
jmp
push
add
mov
loopne
jmp
in
(bad)
jmp
add
add
(bad)
push
or
add
rol
add
pop
or
add
jmp
add
sbb
(bad)
call
jmp
out
(bad)
inc
add
(bad)
(bad)
cli
repnz
inc
(bad)
call
loopne
call
add
add
out
(bad)
call
loope
(bad)
cmp
(bad)
(bad)
fdiv
(bad)
(bad)
jnp
add
leave
loop
push
in
(bad)
dec
add
add
icebp
(bad)
jmp
idiv
push
or
add
or
add
idiv
inc
out
jmp
repz
call
(bad)
dec
(bad)
push
in
(bad)
jmp
(bad)
call
add
add
cmc
(bad)
dec
fdivr
(bad)
clc
clc
(bad)
dec
add
add
repnz
jmp
loop
call
(bad)
inc
repnz
call
(bad)
(bad)
cld
or
add
add
add
add
das
jecxz
(bad)
jns
(bad)
jmp
or
add
idiv
inc
(bad)
call
(bad)
inc
out
inc
(bad)
call
(bad)
inc
push
add
cdq
in
(bad)
call
out
(bad)
fucomp
(bad)
(bad)
out
(bad)
inc
sldt
inc
in
(bad)
call
or
add
add
add
loopne
(bad)
out
add
add
(bad)
push
add
(bad)
call
in
(bad)
dec
add
cmps
or
(bad)
jmp
in
call
cmc
(bad)
jmp
sldt
and
add
cmp
(bad)
jmp
(bad)
add
add
inc
add
add
push
daa
add
push
add
add
pop
stc
(bad)
jmp
add
xor
add
pop
dec
sbb
and
add
add
cmp
(bad)
jmp
enter
and
add
pop
dec
sbb
and
add
add
and
(bad)
call
adc
and
add
cmp
add
pop
adc
and
add
add
push
sub
pop
cmp
(bad)
(bad)
dec
add
or
add
dec
add
add
lock
(bad)
(bad)
dec
add
or
add
dec
add
cmp
clc
(bad)
jmp
aas
add
add
add
add
push
sbb
and
mov
or
add
adc
add
dec
add
dec
sub
cmp
add
cmp
or
add
sbb
add
and
add
add
and
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
add
addr16
(bad)
jmp
cdq
add
add
xor
add
pop
dec
adc
add
cmp
(bad)
(bad)
dec
add
adc
inc
add
add
pop
add
add
and
add
add
daa
clc
(bad)
call
add
add
pop
adc
add
add
pop
pop
sbb
and
add
add
adc
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
push
sub
pop
cmp
idiv
jmp
jne
add
and
add
add
push
add
add
dec
sub
pop
cmp
idiv
(bad)
dec
add
or
add
dec
add
dec
sub
cmp
add
cmp
or
add
adc
add
dec
add
add
push
sub
pop
cmp
or
add
pop
add
add
and
jbe
add
pop
pushf
and
add
add
push
sub
cmp
sbb
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
pop
add
add
add
add
sub
add
pop
pushf
and
add
cmp
idiv
jmp
cli
add
add
push
add
add
push
add
add
dec
sub
pop
cmp
(bad)
call
sbb
add
and
add
add
push
idiv
(bad)
cmp
call
and
sub
and
sub
xchg
popa
rcr
dec
sub
cmp
idiv
(bad)
dec
add
add
add
dec
add
add
push
sub
cmp
jb
(bad)
(bad)
cmp
idiv
(bad)
dec
add
add
add
and
add
add
dec
add
add
and
add
add
push
sub
cmp
or
add
adc
add
and
or
add
pop
pushf
and
add
dec
sub
push
cmp
xchg
add
and
add
pop
dec
sbb
and
add
add
fs
jmp
retf
add
add
inc
add
add
push
daa
add
pop
add
add
push
sub
pop
cmp
(bad)
jmp
cmp
add
and
add
pop
dec
sbb
and
add
dec
sub
cmp
push
add
cmp
in
(bad)
(bad)
cmp
idiv
(bad)
dec
add
add
test
add
and
add
add
and
add
dec
sub
cmp
idiv
(bad)
dec
add
or
add
dec
add
dec
sub
cmp
or
cmc
(bad)
call
adc
and
and
pop
pop
xchg
pusha
adc
and
add
add
push
sub
push
cmp
test
add
and
add
pop
dec
daa
add
dec
add
add
and
add
dec
sub
pop
cmp
or
add
add
add
dec
add
add
xchg
(bad)
jmp
int
add
and
add
push
adc
add
dec
sub
push
cmp
(bad)
call
and
pop
adc
push
add
add
push
sub
pop
cmp
(bad)
jmp
popa
add
add
jno
add
pop
dec
adc
add
dec
sub
cmp
cmc
(bad)
(bad)
dec
add
sldt
add
or
add
dec
sub
cmp
cmc
(bad)
(bad)
dec
add
sldt
add
add
add
dec
add
add
and
add
cmp
hlt
(bad)
(bad)
dec
add
sldt
add
or
add
dec
sub
cmp
or
add
xlat
hlt
(bad)
call
push
adc
and
add
add
push
sub
cmp
hlt
(bad)
call
adc
and
push
sub
cmp
adc
and
add
add
add
add
adc
add
pop
pushf
and
add
dec
sub
cmp
mov
(bad)
jmp
mov
aas
add
add
push
add
add
cmp
(bad)
jmp
ins
add
add
and
dec
sbb
and
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
add
push
sub
cmp
hlt
(bad)
(bad)
dec
add
add
add
dec
add
dec
sub
cmp
hlt
(bad)
jmp
push
add
add
and
add
pop
dec
daa
add
mov
add
cmp
or
add
and
add
add
cmp
repz
jmp
add
add
and
add
add
push
sbb
and
add
dec
sub
cmp
repz
(bad)
dec
add
push
add
add
rol
add
inc
add
add
and
add
cmp
pusha
add
add
pop
add
add
push
adc
add
dec
sub
cmp
cmp
(bad)
(bad)
cmp
or
add
adc
add
dec
add
add
push
sub
cmp
(bad)
jmp
cli
add
add
push
add
add
push
adc
add
cmp
(bad)
(bad)
dec
add
sbb
or
add
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
inc
add
add
and
add
add
push
sub
cmp
or
add
and
(bad)
(bad)
dec
add
pop
add
add
pop
add
add
inc
add
add
and
repz
jmp
jns
add
and
add
add
push
adc
add
cmp
repnz
(bad)
dec
add
or
add
and
add
add
and
add
pop
pushf
and
push
sub
cmp
or
add
xchg
jmp
(bad)
dec
add
sbb
add
and
add
add
and
cdq
repnz
(bad)
dec
add
sbb
add
and
add
add
dec
add
add
and
add
dec
sub
cmp
jne
(bad)
(bad)
dec
add
push
add
add
ret
add
inc
add
add
and
pop
repnz
(bad)
dec
add
or
mov
add
and
add
pop
pushf
and
xor
(bad)
(bad)
dec
add
sbb
add
and
add
and
add
add
and
add
dec
sub
cmp
(bad)
call
or
(bad)
(bad)
jmp
jmp
stos
add
add
push
sub
cmp
or
add
into
icebp
(bad)
(bad)
cmp
icebp
(bad)
jmp
lods
add
add
add
add
push
sbb
and
add
add
push
sub
pop
cmp
icebp
(bad)
call
adc
and
add
add
int3
icebp
(bad)
jmp
jb
add
and
dec
sbb
and
push
sub
cmp
or
add
or
add
dec
add
add
push
sub
cmp
or
add
or
add
dec
add
add
jae
(bad)
jmp
rol
add
and
add
pop
dec
add
add
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
sub
cmp
(bad)
call
or
or
jns
add
cmp
add
imul
adc
and
push
icebp
(bad)
jmp
mov
add
and
add
add
push
sbb
and
add
add
push
sub
cmp
add
cmp
icebp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
lock
(bad)
dec
add
sbb
add
and
add
and
add
add
and
add
add
push
sub
push
cmp
lock
jmp
push
je
add
pop
dec
adc
add
dec
sub
cmp
or
add
push
add
add
inc
add
add
jo
add
pop
pushf
and
add
dec
sub
cmp
or
add
jg
(bad)
jmp
pop
add
add
cmp
add
pop
dec
add
add
cmp
(bad)
(bad)
dec
add
pop
add
add
popf
add
add
push
add
add
and
add
add
push
sub
cmp
daa
sti
(bad)
(bad)
cmp
lock
(bad)
dec
add
add
add
dec
add
add
sbb
adc
and
add
cmp
lock
call
movhps
mov
add
add
add
(bad)
(bad)
dec
add
or
add
dec
add
cmp
out
(bad)
(bad)
dec
add
adc
add
and
cmp
add
pop
pushf
and
leave
out
(bad)
(bad)
dec
add
add
add
dec
add
dec
sub
cmp
test
add
and
add
pop
dec
adc
add
cmp
add
add
dec
add
add
push
adc
add
cmp
(bad)
call
adc
dec
add
add
push
sub
cmp
(bad)
(bad)
dec
add
add
add
and
add
and
add
add
and
add
push
sub
cmp
(bad)
(bad)
dec
add
pop
add
add
xchg
add
add
xor
add
pop
pushf
and
add
dec
sub
cmp
out
(bad)
jmp
mov
add
and
dec
adc
add
cmp
out
(bad)
call
pop
adc
pop
adc
and
add
add
cli
out
(bad)
(bad)
dec
add
adc
add
and
add
add
inc
add
add
and
add
push
sub
cmp
add
cmp
out
(bad)
jmp
jb
add
and
add
add
push
adc
add
cmp
and
add
and
add
pop
dec
add
add
cmp
or
add
adc
dec
add
add
cwde
out
(bad)
jmp
mov
xor
dec
adc
add
cmp
(bad)
jmp
sbb
add
and
add
add
push
daa
add
add
add
push
sub
pop
cmp
(bad)
jmp
and
add
and
add
pop
dec
daa
add
popf
add
add
inc
out
(bad)
(bad)
dec
add
pop
add
add
sbb
add
and
add
add
and
add
add
sub
(bad)
jmp
dec
add
add
sldt
add
push
adc
add
dec
sub
pop
cmp
out
(bad)
(bad)
dec
add
add
add
dec
add
add
push
sub
push
cmp
in
(bad)
(bad)
dec
add
adc
or
add
dec
sub
cmp
in
(bad)
jmp
pop
add
add
adc
dec
adc
add
dec
sub
pop
cmp
add
add
sub
add
pop
dec
adc
add
cmp
or
add
add
add
dec
add
dec
sub
cmp
(bad)
jmp
push
add
add
outs
add
add
push
adc
add
dec
sub
push
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
ins
add
add
and
add
dec
sub
push
cmp
in
(bad)
call
or
pop
adc
fild
add
dec
sub
cmp
movs
add
add
imul
add
push
add
add
cmp
in
(bad)
(bad)
dec
add
adc
add
and
add
dec
add
add
and
add
add
push
sub
cmp
add
cmp
in
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sub
push
cmp
in
(bad)
jmp
pop
add
add
popa
add
add
push
add
add
cmp
and
mov
add
add
push
sub
push
cmp
scas
add
add
cmp
add
pop
dec
adc
add
cmp
(bad)
(bad)
dec
add
or
add
dec
add
add
push
sub
pop
cmp
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sub
pop
cmp
(bad)
cmp
(bad)
(bad)
call
pop
adc
popa
adc
sub
add
cmp
in
(bad)
(bad)
dec
add
add
add
dec
add
cmp
in
(bad)
call
adc
and
add
dec
sub
pop
cmp
(bad)
(bad)
dec
add
add
or
add
cmp
jmp
call
and
adc
pop
add
add
push
sub
push
cmp
jmp
jmp
mov
das
add
add
push
add
add
cmp
lahf
add
add
xor
dec
daa
add
pop
add
add
push
sub
cmp
or
add
pop
add
add
or
add
dec
sub
pop
cmp
or
add
add
add
dec
add
add
data16
jmp
rol
add
and
add
pop
dec
adc
add
cmp
(bad)
(bad)
dec
add
pop
add
add
out
add
add
dec
add
add
and
add
cmp
jmp
jmp
test
add
and
add
pop
dec
adc
add
cmp
out
add
add
dec
add
add
push
add
add
cmp
jmp
and
add
add
or
add
dec
sub
cmp
jmp
pop
pop
adc
add
add
pop
push
rcr
cmp
jmp
and
add
add
push
sub
cmp
pop
add
add
push
add
add
push
sbb
and
add
add
push
sub
cmp
or
add
add
add
dec
add
add
push
sub
cmp
(bad)
jmp
loope
add
and
add
pop
dec
daa
add
and
add
dec
sub
cmp
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
sub
pop
cmp
(bad)
jmp
inc
add
add
xor
add
pop
dec
add
add
cmp
jmp
and
add
add
int
add
and
add
and
pop
jmp
and
add
add
or
add
cmp
jmp
sbb
and
add
add
or
add
cmp
jmp
sbb
and
add
add
movs
add
add
and
add
pop
pushf
and
add
add
push
sub
cmp
or
add
adc
add
dec
add
add
push
sub
cmp
add
cmp
sub
add
push
cmp
int3
(bad)
jmp
in
add
push
cmp
int3
(bad)
jmp
in
add
cmp
add
or
dec
(bad)
jmp
in
add
cmp
add
or
dec
(bad)
jmp
out
add
cmp
(bad)
jmp
out
add
cmp
jmp
out
add
push
cmp
(bad)
jmp
out
add
push
cmp
jmp
in
add
push
cmp
iret
(bad)
jmp
out
add
push
cmp
sar
jmp
in
add
push
cmp
sar
jmp
out
add
push
cmp
sar
jmp
out
add
push
cmp
sar
jmp
out
add
push
cmp
(bad)
jmp
out
add
push
cmp
add
push
cmp
out
add
push
cmp
(bad)
jmp
in
add
push
cmp
(bad)
jmp
out
add
push
cmp
aad
jmp
out
add
push
cmp
aad
jmp
in
add
push
cmp
in
add
push
cmp
(bad)
jmp
in
add
push
cmp
in
add
push
cmp
in
add
push
cmp
(bad)
jmp
out
add
push
cmp
loopne
jmp
in
add
push
cmp
loope
jmp
out
add
push
cmp
(bad)
jmp
in
add
push
cmp
jmp
jmp
(bad)
jmp
jmp
add
cmp
out
jmp
in
add
push
cmp
out
jmp
out
add
push
cmp
in
add
push
cmp
(bad)
jmp
in
add
push
cmp
out
add
push
cmp
(bad)
jmp
in
add
push
cmp
icebp
(bad)
jmp
out
add
push
cmp
repnz
jmp
out
add
push
cmp
repz
jmp
in
add
push
cmp
(bad)
jmp
in
add
push
cmp
(bad)
jmp
out
add
push
cmp
out
add
push
cmp
cmc
(bad)
jmp
out
add
push
cmp
(bad)
jmp
in
add
push
cmp
cmc
(bad)
jmp
out
add
cmp
(bad)
jmp
call
js
(bad)
jmp
jmp
je
(bad)
jmp
in
add
push
cmp
out
add
push
cmp
idiv
jmp
in
add
push
cmp
(bad)
jmp
out
add
push
cmp
in
add
push
cmp
in
add
push
cmp
std
(bad)
jmp
add
adc
add
ins
add
add
add
adc
or
xor
add
push
call
sbb
add
sub
add
push
sub
add
or
add
or
and
cmp
add
jle
add
add
add
fiadd
add
jae
add
or
push
add
add
or
add
or
jle
add
add
daa
add
or
add
or
outs
sub
add
sub
outs
daa
add
or
adc
add
push
add
add
add
adc
or
pushw
adc
call
add
add
add
fiadd
add
add
add
or
push
or
sbb
add
jle
add
add
call
cmp
add
add
add
add
pop
pop
pop
or
jle
add
add
imul
adc
add
scas
sub
sub
push
call
xor
add
sub
add
or
push
loopne
add
jae
add
or
add
or
xchg
sub
sub
push
daa
push
adc
call
add
add
or
add
pop
or
add
loope
add
sub
add
scas
jle
adc
call
add
add
add
add
add
add
or
add
or
add
add
add
or
mov
pop
outs
adc
call
or
add
and
add
sub
add
or
dec
jmp
call
add
dec
add
outs
jecxz
add
sub
add
bound
or
inc
(bad)
push
cs
call
add
outs
in
add
sub
add
jb
or
push
mov
adc
call
add
dec
add
outs
in
add
sub
add
bound
or
stc
lea
adc
call
add
outs
fild
add
sub
add
jb
or
or
push
call
add
dec
add
outs
out
add
sub
add
sub
sub
jg
adc
call
or
add
add
add
sub
add
or
sar
call
or
add
add
or
add
bound
or
and
call
add
outs
daa
add
or
add
add
or
and
rdpmc
adc
call
add
add
or
bound
adc
call
add
add
xor
add
push
sub
xor
add
add
adc
add
add
pop
sub
xor
add
pop
sub
xor
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
push
sub
add
push
sub
add
adc
add
sub
add
adc
add
add
push
sub
xor
add
add
add
add
sub
xor
add
adc
add
add
add
sbb
push
cmp
pop
add
add
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
push
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
push
sub
add
adc
add
add
add
add
push
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
sbb
add
sub
sbb
sbb
add
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
pusha
inc
add
and
jb
outs
addr16
add
add
add
add
inc
push
ins
inc
add
add
add
add
push
push
add
add
add
add
and
outs
jo
add
push
add
and
add
and
dec
inc
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
mov
cmp
add
add
mov
add
add
add
adc
add
test
add
add
mov
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
and
push
add
and
push
add
add
xlat
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
xor
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
arpl
rol
add
pop
add
add
add
add
add
or
and
cmp
or
mov
add
outs
add
add
add
inc
add
add
add
inc
add
add
push
inc
add
add
inc
add
add
add
push
add
add
or
jbe
cmp
push
add
inc
add
add
push
or
add
inc
add
add
add
or
push
add
or
push
add
or
or
and
add
add
add
add
add
add
or
or
add
or
add
add
or
pop
or
jg
inc
or
push
or
add
jmp
push
or
pop
push
push
push
inc
or
push
or
add
push
inc
add
add
push
inc
add
add
push
jmp
or
inc
add
add
adc
or
add
adc
push
add
add
adc
push
add
outs
add
add
add
add
adc
push
add
adc
push
add
adc
adc
add
outs
add
add
or
add
adc
add
add
add
add
adc
add
add
adc
push
add
adc
push
add
outs
add
add
add
add
loopne
outs
add
add
adc
adc
out
add
add
adc
call
or
add
push
push
push
add
inc
add
add
movlps
add
inc
add
add
sbb
push
add
add
add
add
sbb
add
add
xchg
add
add
outs
pop
push
add
add
int
push
add
and
add
add
and
add
add
add
and
push
add
add
and
push
add
and
push
add
and
push
add
and
push
add
inc
add
add
add
inc
add
add
inc
add
add
add
mov
add
and
xor
dec
and
pop
and
xchg
and
(bad)
and
loopne
push
and
push
and
test
add
es
and
test
add
and
push
add
add
and
inc
add
add
add
mov
daa
push
and
inc
add
add
daa
xchg
add
add
daa
xchg
add
add
sub
push
add
sub
add
add
test
add
and
push
add
add
test
add
test
add
test
add
add
push
and
push
or
add
xchg
add
add
xor
repnz
in
inc
add
add
cmp
push
add
cmp
adc
pop
and
adc
jbe
and
adc
mov
mov
ds
add
add
ds
add
add
ds
add
aas
sub
adc
pop
aas
xor
or
push
aas
add
add
add
add
add
add
add
aas
xor
push
add
aas
inc
add
add
aas
xchg
add
add
add
add
add
mov
inc
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
mov
ins
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
or
daa
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
add
or
push
add
add
add
and
fld
add
add
stos
add
add
add
add
add
add
add
add
add
add
call
add
add
add
and
in
add
add
add
and
out
add
add
and
add
add
add
add
add
inc
add
add
add
mov
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
add
add
push
push
add
test
inc
add
add
add
add
push
dec
push
add
add
add
add
push
add
aad
add
add
add
push
add
fiadd
add
add
test
add
test
dec
add
add
push
add
add
out
add
add
add
push
add
add
adc
adc
add
adc
add
add
adc
add
xor
add
add
adc
add
dec
pop
add
add
adc
add
imul
add
add
add
add
add
adc
adc
add
movs
pop
add
add
adc
add
ret
add
add
add
or
xor
bound
adc
xor
ins
or
adc
jnp
and
or
or
or
jo
and
inc
adc
cwde
add
add
sahf
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
lock
add
lock
add
lock
add
add
add
cli
add
add
add
add
add
(bad)
adc
add
add
adc
add
adc
dec
pop
fs
adc
pop
pop
imul
mov
adc
or
into
pop
adc
cld
and
or
add
cmp
and
adc
and
inc
or
add
add
and
adc
inc
and
adc
push
and
or
add
inc
or
add
inc
or
add
inc
or
add
add
xchg
and
adc
mov
add
add
add
and
adc
into
and
adc
fldenv
dec
or
add
and
dec
or
add
and
adc
adc
or
add
and
or
add
and
or
add
and
or
add
pop
or
add
inc
or
add
cmp
push
push
imul
jno
inc
or
add
add
xchg
add
add
add
xchg
cmp
push
push
imul
and
add
cmp
dec
cmp
popa
cmp
jne
cdq
movlps
mov
popf
cmp
mov
mov
add
add
add
add
add
add
xchg
sbb
pop
inc
add
pusha
and
add
add
sbb
inc
add
add
add
or
xchg
add
pop
add
add
jo
add
or
xchg
add
pop
add
add
js
add
add
xchg
sbb
pop
inc
add
and
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
inc
add
pushf
and
add
add
or
add
adc
mov
add
adc
lods
or
add
int3
and
add
add
or
add
and
add
add
or
or
add
or
xchg
add
or
add
add
and
add
add
add
add
and
add
add
add
add
add
or
push
or
mov
and
add
add
or
enter
xor
add
or
adc
(bad)
add
pusha
and
add
add
add
or
add
jo
add
or
push
sbb
inc
add
js
add
or
inc
add
or
add
mov
add
or
inc
add
inc
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
ds
add
add
add
or
inc
add
inc
add
add
add
or
add
or
add
add
add
or
inc
add
and
pop
add
add
or
adc
pop
or
add
add
add
add
add
xor
or
pop
and
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
sbb
inc
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
sbb
inc
add
add
and
add
add
or
add
add
add
or
or
and
add
add
or
or
inc
and
add
add
or
add
add
or
push
or
or
jo
add
or
push
or
add
add
or
push
add
push
sub
pop
add
add
add
cmp
sbb
cwde
and
add
add
add
push
add
add
add
add
outs
add
add
add
add
jmp
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
sbb
pop
inc
daa
add
and
add
cmp
test
daa
add
and
add
ins
adc
and
add
adc
xor
xchg
add
add
and
xchg
add
add
add
add
xchg
sbb
pop
inc
sub
dec
and
adc
fild
inc
sub
fs
push
sbb
inc
add
je
add
or
adc
std
adc
add
mov
add
add
add
add
or
and
add
pop
adc
cs
and
inc
or
add
add
sub
inc
or
adc
add
add
or
inc
or
adc
add
add
sub
inc
or
adc
add
add
or
inc
or
cmps
add
add
sub
inc
or
add
add
or
inc
or
cmps
add
add
sub
inc
or
mov
xor
pop
add
or
inc
or
cmps
add
add
sub
inc
or
add
add
or
inc
or
add
add
xchg
adc
add
add
or
inc
or
add
add
lods
adc
add
add
or
inc
or
add
add
ret
add
add
or
inc
or
adc
add
add
sub
inc
or
adc
add
add
or
inc
or
adc
add
add
sub
inc
or
adc
add
add
or
inc
or
adc
add
add
sub
inc
or
add
add
or
inc
or
adc
adc
add
sub
inc
or
adc
sbb
add
or
inc
or
add
daa
add
sub
inc
or
adc
xor
add
or
inc
or
adc
inc
daa
add
sub
inc
or
adc
cmp
dec
daa
add
or
inc
or
int
cmp
pop
daa
add
sub
inc
or
add
add
or
inc
or
int
cmp
add
add
jb
fld
add
or
inc
or
int
add
add
mov
nop
daa
add
or
inc
or
add
add
sahf
adc
test
add
or
inc
or
add
add
mov
and
daa
add
dec
add
add
add
daa
add
or
push
add
push
pop
push
inc
add
daa
add
or
xchg
add
add
add
or
xchg
add
or
add
or
xchg
add
push
inc
inc
add
add
or
xchg
add
push
pop
add
sbb
add
or
xchg
add
push
imul
add
pop
pop
add
sub
add
or
xchg
add
scas
push
inc
add
add
or
xchg
add
pop
scas
push
inc
add
add
or
xchg
add
mov
inc
add
add
add
push
inc
add
add
add
add
push
sub
add
add
add
pop
sub
add
add
add
sub
add
add
push
inc
add
add
add
add
je
add
or
xchg
add
pop
imul
add
add
xchg
add
sbb
inc
add
xchg
add
sbb
inc
add
xchg
add
sbb
inc
add
xchg
add
imul
add
add
add
xchg
add
imul
add
mov
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
hlt
sub
add
add
add
cld
sub
add
add
add
add
add
or
xchg
add
imul
add
les
inc
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
sbb
inc
add
add
or
xchg
add
sbb
push
inc
add
add
or
xchg
add
sbb
inc
add
add
add
add
dec
sub
add
add
add
push
sub
add
add
push
inc
add
add
add
push
inc
add
add
add
add
ins
sub
add
add
add
je
add
or
xchg
add
add
add
add
add
test
add
or
xchg
add
sbb
sub
add
add
add
xchg
sub
add
add
add
pushf
sub
add
add
add
movs
sub
add
add
add
lods
sub
add
add
add
mov
add
or
xchg
add
pop
add
mov
add
add
les
add
or
xchg
add
pop
add
int3
sub
add
add
add
aam
add
or
xchg
add
add
sub
add
add
add
in
add
or
xchg
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
sbb
add
adc
add
or
xchg
add
inc
inc
add
add
or
xchg
add
push
inc
add
add
or
xchg
add
add
add
or
xchg
add
sbb
pop
inc
add
add
or
xchg
add
sbb
add
cmp
add
or
xchg
add
sbb
inc
sub
add
add
push
inc
add
add
add
add
push
sub
add
add
add
pop
sub
add
add
pop
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
pop
inc
add
xchg
add
sbb
mov
add
or
xchg
add
push
sub
inc
add
xchg
add
push
sub
sub
add
add
add
movs
sub
add
add
push
inc
add
adc
test
outs
pop
inc
add
adc
movs
pop
lea
inc
add
sub
add
add
or
add
sub
add
add
add
loopne
add
or
xchg
add
add
sub
add
add
add
lock
add
add
add
clc
sub
add
add
add
add
add
or
xchg
add
and
add
or
add
or
adc
fild
inc
inc
add
add
or
push
sbb
inc
add
xor
add
or
push
or
mov
sub
add
add
add
dec
sub
add
add
add
push
sub
add
add
add
pop
sub
add
add
or
add
add
add
push
inc
add
add
add
add
jl
add
or
xchg
add
and
add
test
add
add
xchg
sbb
pop
inc
inc
add
xchg
sbb
pop
inc
inc
add
xchg
add
add
xchg
cmp
inc
add
lods
sub
add
add
add
fsubr
add
or
xchg
add
icebp
pop
inc
add
sub
add
add
or
call
add
or
lock
add
add
add
add
sub
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
sbb
add
add
add
and
add
or
xchg
add
lock
sub
add
or
xchg
add
pop
add
add
add
add
xchg
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
or
xor
add
add
xchg
sbb
pop
inc
dec
add
add
or
xchg
sbb
pop
inc
dec
add
add
add
add
pop
sub
xchg
add
add
xor
add
add
or
cmp
add
or
xchg
add
and
or
push
add
or
nop
xor
add
add
or
mov
add
or
fdiv
add
add
add
or
xchg
add
and
or
js
add
or
xchg
add
add
add
or
in
add
or
nop
add
and
lods
imul
add
or
je
hlt
movs
add
or
xchg
add
arpl
jne
add
add
add
and
add
add
add
xchg
js
add
add
add
and
es
or
add
add
daa
cwde
or
xor
xchg
add
daa
mov
cmps
add
or
xchg
add
mov
mov
jl
add
or
xchg
add
inc
mov
mov
add
or
add
add
add
add
add
add
add
sub
or
add
and
sub
or
add
sub
add
add
sub
add
add
sub
or
add
sub
or
add
sub
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
push
mov
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
mov
add
add
or
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
push
mov
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
adc
add
add
or
add
add
or
add
adc
add
add
add
add
add
push
mov
add
add
add
add
add
or
add
adc
add
add
or
add
adc
add
add
or
add
add
or
add
add
or
xchg
add
aas
or
add
add
or
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
add
add
add
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
pop
mov
add
add
pop
mov
add
add
push
mov
add
add
add
add
add
push
mov
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
push
mov
add
add
push
mov
add
add
push
mov
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
pop
mov
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
push
mov
add
add
push
mov
add
add
or
add
push
add
or
xchg
add
xor
or
add
push
add
or
xchg
add
and
add
add
or
add
add
or
add
push
add
or
xchg
add
and
add
add
push
movs
add
add
or
xchg
add
add
pop
add
or
xchg
add
xor
pop
movs
add
pop
add
or
xchg
add
xor
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
xchg
add
fmul
add
add
push
movs
add
xchg
add
add
add
add
add
add
or
add
add
or
add
xchg
add
ss
pop
add
or
xchg
add
or
pop
add
add
xchg
add
add
movs
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmps
add
add
or
xchg
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
test
pop
sbb
add
add
pop
test
sbb
add
add
add
add
add
push
test
je
add
or
xchg
add
add
add
add
push
test
test
add
or
xchg
add
add
xchg
add
xchg
sbb
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
xchg
cmp
inc
add
add
add
or
xchg
sbb
pop
inc
rol
sbb
add
add
add
add
xchg
add
cmp
add
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
add
or
nop
add
add
add
or
xchg
add
add
push
add
or
xchg
add
cmp
or
add
or
xchg
cmp
inc
add
add
add
or
xchg
add
cmp
add
add
add
add
add
push
add
or
xchg
add
lock
add
push
add
or
xchg
add
aam
les
cld
push
add
or
xchg
add
pop
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
push
push
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
cmp
les
enter
or
xchg
add
cmp
add
add
push
add
or
xchg
add
cmp
add
add
push
add
or
xchg
add
cmp
push
les
add
add
add
push
mov
push
add
or
xchg
add
cmp
leave
add
push
add
or
xchg
add
inc
push
int3
add
push
add
or
xchg
add
pop
push
into
add
add
or
xchg
add
push
rol
push
push
add
or
xchg
add
ins
push
aam
pusha
push
add
or
xchg
add
jle
(bad)
add
add
or
xchg
add
add
add
push
fadd
mov
add
add
push
fld
nop
push
add
or
xchg
add
add
add
push
jecxz
mov
add
or
xchg
add
rcl
add
add
or
add
push
add
or
xchg
add
cmp
call
add
add
or
add
push
add
or
xchg
add
cmp
add
push
add
or
xchg
add
cmp
por
adc
add
add
pmaxsw
and
add
add
add
add
push
add
or
xchg
add
cmp
push
lock
push
add
or
xchg
add
cmp
push
lock
push
add
or
xchg
add
cmp
(bad)
add
add
or
xchg
add
add
push
add
or
xchg
add
inc
pslld
push
push
add
or
xchg
add
add
add
add
or
xchg
add
add
add
or
xchg
add
push
add
pslld
jo
add
or
xchg
add
cmp
psllq
js
add
or
xchg
add
cmp
pmaddwd
adc
or
xchg
add
cmp
psadbw
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
or
add
add
add
add
jnp
add
add
hlt
or
add
add
add
add
xor
add
add
jnp
add
add
hlt
or
add
add
add
add
js
add
add
ror
js
add
add
icebp
or
js
add
add
icebp
or
ror
js
add
add
icebp
or
js
add
add
icebp
or
ror
icebp
or
ror
icebp
or
pushw
add
add
xchg
push
add
add
movs
push
add
add
mov
add
add
ror
add
add
add
add
add
push
add
add
xchg
push
add
add
movs
push
add
add
mov
add
add
push
sldt
add
xchg
push
add
add
movs
push
add
add
mov
add
add
jl
add
add
ror
add
add
add
add
push
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
jnp
add
add
xor
add
add
cmp
add
add
jnp
add
add
sub
add
add
hlt
or
add
add
stos
and
add
add
add
add
and
add
add
cmc
and
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
pop
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
pop
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
pop
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
pop
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
sbb
add
add
cmp
add
add
cmp
and
xor
add
add
add
add
add
add
sbb
add
add
cmp
add
add
cmp
and
xor
add
add
add
add
add
pop
add
and
add
add
inc
cmp
add
add
and
add
add
add
add
jnp
add
add
loop
add
add
movs
and
add
add
and
add
add
or
add
add
or
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
or
cmp
adc
and
cmp
adc
sub
cmp
adc
xor
cmp
adc
cmp
cmp
adc
add
add
cmp
adc
pop
add
and
imul
jno
cmp
adc
jns
cmp
jle
mov
cmp
adc
xchg
add
adc
cdq
add
inc
add
add
add
add
add
inc
add
add
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
cdq
or
or
cdq
or
sbb
cdq
or
and
cdq
or
sub
cdq
or
inc
add
adc
push
add
or
add
cmc
or
add
add
or
add
push
or
add
cmp
adc
cmp
cmp
inc
add
add
add
or
add
add
add
add
cmp
daa
add
add
add
or
add
add
add
or
add
add
inc
add
add
and
leave
add
inc
add
add
jmp
add
add
add
mov
in
add
add
or
test
add
add
add
push
cmc
add
add
add
or
fld
imul
cmp
mov
xstore-rng
cmps
add
add
bswap
add
add
(bad)
add
add
(bad)
add
add
add
sub
rol
arpl
cmp
add
add
add
or
add
add
inc
add
add
or
ins
add
add
add
pop
add
add
adc
add
add
pop
add
mov
adc
add
das
add
or
add
add
add
adc
add
ss
cmp
add
add
pop
add
adc
adc
add
add
add
arpl
adc
push
add
inc
add
add
add
adc
adc
cdq
add
jo
xor
cmp
inc
add
add
inc
add
cmp
ja
mov
cmp
jle
test
add
adc
adc
add
inc
add
inc
add
cmp
inc
add
add
add
add
add
inc
add
add
arpl
mov
adc
icebp
adc
pop
push
dec
push
sbb
sbb
pop
push
jmp
push
jmp
push
sbb
outs
push
mov
and
jge
mov
sbb
adc
mov
call
push
or
cmp
inc
add
add
add
inc
add
add
pop
cmps
push
je
inc
pop
inc
add
add
in
add
pop
and
popa
add
or
sbb
sub
pop
sbb
push
sub
rcl
and
push
add
adc
add
add
adc
add
add
add
sbb
add
dec
sbb
add
add
add
sbb
push
stc
add
sbb
pop
jmp
pop
push
add
adc
loope
ins
sbb
xchg
lods
sbb
sbb
sub
or
xor
xor
or
pop
or
add
add
and
pop
add
add
test
leave
add
pop
mov
and
add
pop
add
jmp
add
and
pop
jno
mov
add
and
and
and
or
or
add
push
or
add
inc
add
add
add
add
inc
add
add
add
jns
mov
ror
add
and
mov
add
add
and
and
cmp
or
xor
add
sub
add
or
add
and
popa
add
es
or
xchg
es
imul
add
daa
mov
jno
xor
mov
daa
ror
add
add
daa
(bad)
or
stos
and
or
push
daa
aad
jno
arpl
fmul
jns
popf
daa
jecxz
pop
add
add
add
sub
or
add
add
add
add
fisttp
stc
add
jecxz
add
add
and
xor
add
or
dec
sub
add
or
popa
sub
or
add
add
add
add
sub
or
add
add
push
add
sbb
(bad)
icebp
add
add
add
add
sub
push
add
sbb
les
jnp
popa
add
popf
or
jp
movs
or
pushf
sub
or
loop
mov
inc
add
sbb
adc
mov
sub
icebp
add
add
add
sub
loope
sub
add
sub
cs
add
add
sbb
add
das
and
das
sub
add
add
das
aas
or
add
add
or
fwait
or
(bad)
and
sbb
jmp
and
sbb
jp
push
or
add
xor
icebp
add
xor
icebp
add
xor
icebp
add
xor
icebp
add
xor
add
add
xor
leave
add
jb
popa
add
add
xor
daa
inc
add
xor
inc
add
add
add
xor
or
arpl
(bad)
or
add
sub
xor
imul
add
sub
add
daa
cmp
jno
ds
test
jno
fs
or
add
xor
add
mov
add
das
mov
xor
or
add
xor
ins
xor
movs
sub
add
add
add
xor
push
ss
or
add
dec
add
daa
or
add
imul
add
ss
das
push
or
add
aaa
ins
or
or
jl
popa
add
ror
inc
add
mov
add
cmp
or
icebp
or
and
adc
sbb
adc
popa
add
cmp
push
loope
sub
inc
or
sbb
add
cmp
punpcklwd
cmp
mov
cmp
mov
xor
cmp
inc
add
dec
add
push
add
pop
add
popa
add
imul
inc
add
cmp
inc
add
add
add
add
add
adc
add
add
or
ucomiss
imul
add
add
icebp
add
add
jne
add
test
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
add
add
add
add
add
add
retf
or
punpcklbw
stos
or
add
mov
add
add
or
jae
jae
jns
adc
bt
mov
add
or
add
adc
add
or
adc
add
add
add
add
or
add
add
add
or
icebp
add
add
or
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
stos
or
add
fwait
or
or
add
repz
add
add
adc
add
add
add
add
adc
add
adc
add
add
or
adc
add
or
add
add
add
or
add
add
add
add
or
adc
add
add
or
adc
add
add
or
or
add
sti
or
adc
sti
or
adc
adc
adc
add
add
or
add
or
or
add
add
or
jecxz
adc
cdq
adc
add
add
or
or
add
add
or
or
add
fwait
or
or
add
sti
or
test
popa
add
or
adc
jno
adc
pop
add
or
adc
adc
add
add
or
adc
add
add
or
adc
add
or
add
add
or
or
or
adc
add
or
or
add
add
add
and
and
inc
add
inc
add
pusha
add
add
add
mov
add
add
rol
or
add
push
fwait
or
or
add
fwait
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
add
or
or
or
add
stos
or
add
add
add
or
or
or
or
add
or
or
add
stos
or
add
stos
or
add
add
add
or
or
add
or
or
add
or
and
inc
or
pusha
or
or
or
ror
or
add
stos
or
add
push
stos
or
add
stos
or
add
stos
or
add
add
add
push
stos
or
add
push
stos
or
add
bts
icebp
add
bts
icebp
add
stos
or
add
stos
or
add
add
add
bts
icebp
add
bts
icebp
add
adc
sbb
or
add
adc
and
jecxz
loopne
jp
jecxz
and
or
jp
jecxz
loopne
jp
jecxz
mov
adc
ss
jecxz
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
push
add
je
xchg
add
add
add
add
add
add
add
rol
add
xor
outs
push
je
xchg
pop
les
fadd
jae
mov
or
lods
or
or
or
or
or
or
and
xor
inc
push
dec
push
pusha
push
je
xchg
xchg
push
mov
cmc
push
pop
movaps
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
xchg
add
add
or
or
or
or
add
add
add
outs
add
add
adc
add
xor
mov
add
cmp
add
jbe
cmp
add
jle
cmp
add
xchg
cmp
add
mov
cmp
add
xchg
push
inc
pop
add
mov
add
add
leave
push
inc
pop
add
(bad)
push
dec
pop
add
out
push
pop
add
lock
pop
pop
add
call
pop
pop
add
push
pop
inc
pop
add
sbb
inc
pop
add
sub
inc
pop
add
xor
add
pop
pop
add
sub
cmps
pop
add
and
leave
pop
add
add
leave
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
adc
add
add
add
pop
add
add
sbb
add
pop
add
add
add
sbb
add
popa
add
add
add
add
add
sbb
add
add
add
pop
add
add
and
add
add
add
add
and
add
imul
ins
add
add
add
add
add
daa
add
add
sub
add
outs
add
add
add
sub
add
jno
sub
add
je
sub
add
add
add
add
das
add
add
xor
add
ja
xor
add
jp
xor
add
jns
xor
add
jl
xor
add
add
add
add
aaa
add
add
add
cmp
add
fld
cmp
add
fild
cmp
add
add
add
add
add
shl
sub
add
inc
add
push
add
add
add
xchg
add
add
or
add
and
mov
add
inc
add
add
add
add
and
add
daa
add
daa
add
add
xor
add
add
add
sub
add
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
dec
sub
add
loopne
add
add
or
dec
add
loope
add
inc
loope
add
data16
add
jbe
or
push
add
add
loope
add
add
add
add
add
add
add
je
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
add
pop
add
add
add
add
add
pop
add
push
add
add
add
add
test
adc
add
add
add
add
add
add
cmp
or
add
add
jmp
add
jmp
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
and
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
sub
scas
add
adc
xor
cdq
or
add
add
add
or
add
add
and
add
add
push
or
add
add
add
add
adc
dec
add
add
add
add
add
add
add
jno
add
jne
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
arpl
ins
imul
jb
push
outs
imul
ins
add
jb
outs
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
imul
outs
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
outs
ins
gs
outs
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
xor
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
imul
jne
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
gs
popa
ins
gs
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
popa
jns
imul
imul
xor
gs
aaa
bound
sub
sub
sub
xor
cmp
arpl
popa
add
jne
cs
add
gs
jne
js
outs
pop
jb
gs
push
outs
jo
inc
aaa
add
push
push
jo
push
jo
pop
push
jo
push
fs
inc
add
push
push
ss
push
jo
aaa
pop
inc
jbe
dec
imul
jae
inc
imul
xor
outs
addr16
xor
dec
bound
arpl
ss
arpl
popa
dec
bound
js
add
inc
xor
popa
dec
dec
fs
push
jo
push
inc
pop
inc
add
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
inc
inc
inc
dec
inc
gs
push
jno
jae
add
xor
dec
xor
outs
cmp
inc
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
dec
bound
inc
push
jo
dec
xor
dec
inc
inc
add
imul
dec
xor
jb
je
imul
push
aaa
js
dec
fs
push
push
push
xor
dec
xor
push
add
dec
inc
dec
xor
cmp
jae
dec
xor
add
dec
jae
pop
inc
outs
xor
popa
inc
ja
ja
pusha
xor
dec
outs
je
jb
popa
ins
pop
ins
ins
dec
gs
jo
jb
jae
jne
cs
jns
push
gs
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
ins
outs
jae
jb
add
jb
xor
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
jbe
push
imul
xor
push
push
push
xor
xor
js
push
inc
push
bound
gs
jns
dec
jns
gs
imul
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
push
gs
imul
jo
jb
jns
cmp
outs
fs
gs
inc
cmp
inc
inc
inc
sub
sub
sub
sub
ss
inc
cmp
dec
xor
push
imul
pop
jbe
xor
ins
je
push
dec
pop
inc
inc
inc
push
jno
inc
popa
add
push
xor
bound
dec
jb
je
push
dec
outs
outs
data16
ins
je
arpl
je
gs
gs
je
add
dec
dec
ins
js
dec
imul
inc
xor
ins
je
dec
jbe
popa
push
cmp
push
push
ins
bound
push
dec
add
jae
ins
jbe
dec
ins
push
push
inc
arpl
inc
push
add
je
imul
jno
dec
xor
addr16
jbe
arpl
add
ins
ss
push
addr16
push
push
dec
ins
js
jbe
js
dec
imul
dec
xor
push
outs
cmp
add
inc
dec
dec
popa
push
bound
dec
addr16
xor
push
dec
xor
jne
cmp
dec
xor
xor
add
ins
jne
push
jns
add
cmp
push
inc
push
ins
jae
push
imul
push
arpl
inc
outs
jne
add
data16
inc
imul
imul
jne
xor
dec
push
inc
imul
outs
add
dec
jns
pop
inc
dec
xor
dec
push
je
imul
inc
jb
outs
inc
xor
dec
jo
dec
xor
inc
add
addr16
inc
push
dec
xor
dec
dec
je
inc
jne
add
push
jae
dec
jbe
xor
push
jb
dec
pop
xor
add
bound
push
pop
xor
push
push
js
popa
jae
popa
cmp
pop
inc
cmp
imul
push
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
xor
xor
sub
sub
sub
sub
xor
xor
xor
xor
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
arpl
outs
jb
push
push
pop
push
push
xor
bound
xor
ins
ja
outs
push
xor
ins
inc
push
dec
cmp
inc
inc
outs
inc
imul
xor
push
inc
inc
dec
pop
fs
add
inc
push
push
dec
jb
gs
pop
push
dec
jns
js
add
ss
push
bound
js
dec
ja
add
push
xor
push
cmp
jae
inc
popa
fs
imul
imul
jne
add
dec
pop
pop
jb
add
xor
jne
push
jo
push
jae
jb
inc
inc
pop
dec
inc
push
popa
xor
dec
push
jo
pop
push
dec
xor
xor
imul
inc
jo
dec
add
push
aaa
pop
push
inc
dec
dec
add
ins
jae
inc
xor
push
add
jb
dec
arpl
jno
inc
dec
bound
dec
xor
jno
ins
jno
inc
inc
jbe
ins
jo
js
jo
inc
bound
outs
add
xor
push
js
ja
addr16
js
pop
dec
outs
imul
jae
pop
inc
xor
inc
dec
dec
add
xor
ins
outs
xor
inc
push
push
fs
xor
jb
popa
dec
jo
push
outs
add
js
dec
push
outs
xor
popa
dec
inc
dec
popa
xor
dec
xor
arpl
push
cmp
push
push
cmp
dec
popa
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
je
jbe
imul
arpl
dec
dec
dec
ja
add
add
addr16
outs
je
js
gs
imul
ja
ins
push
inc
popa
add
cmp
ins
pop
push
jns
inc
jae
jbe
outs
inc
push
add
push
inc
cmp
push
arpl
pop
je
push
popa
jb
gs
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
je
imul
push
je
ins
jae
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
inc
js
gs
imul
pop
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
imul
imul
cmp
xor
xor
inc
jns
xor
push
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jo
jae
add
jne
ins
jae
inc
gs
popa
jae
inc
outs
fs
jb
dec
jno
cmp
push
outs
push
je
imul
popa
xor
dec
push
dec
push
xor
push
inc
xor
pop
pop
inc
jno
outs
je
push
push
imul
dec
bound
gs
outs
xor
xor
xor
pop
inc
push
inc
arpl
jo
popa
push
jo
inc
inc
dec
xor
push
outs
ja
add
xor
push
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
push
je
dec
ss
ins
ja
data16
bound
xor
je
imul
inc
jb
jns
push
push
gs
data16
push
ja
push
arpl
push
push
push
cmp
jno
arpl
imul
jae
add
fs
push
dec
cmp
ins
push
cmp
gs
add
addr16
xor
pop
jb
xor
push
jae
xor
add
dec
ins
cmp
dec
add
dec
jns
xor
inc
inc
dec
dec
push
xor
push
push
add
xor
ja
inc
ss
push
inc
push
xor
fs
js
cmp
pop
ja
dec
dec
dec
xor
dec
dec
jns
jo
ja
pop
inc
inc
inc
inc
dec
jno
dec
add
inc
jo
jns
jns
jne
push
push
add
imul
xor
ins
inc
push
outs
push
outs
add
imul
dec
push
jbe
push
push
popa
push
push
push
je
dec
xor
aaa
jbe
xor
inc
add
aaa
inc
push
add
gs
pop
push
dec
je
dec
ss
dec
add
dec
dec
push
pop
jbe
jne
pop
push
push
cmp
inc
cmp
dec
push
ss
bound
imul
addr16
push
popa
ins
jne
add
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
pop
inc
ins
gs
outs
je
push
jns
je
ins
cs
ins
ins
cs
imul
jb
add
outs
jne
gs
je
jb
xor
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
inc
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
imul
ins
add
je
push
popa
ins
jne
add
ins
jne
add
je
inc
je
jb
bound
gs
popa
ins
jne
add
popa
ins
add
ins
add
je
jb
bound
add
pop
inc
js
ins
imul
je
inc
je
jb
bound
gs
popa
ins
jne
add
je
je
jb
bound
gs
popa
ins
jne
add
gs
je
inc
je
jb
bound
add
gs
je
dec
popa
ins
gs
popa
arpl
je
jb
bound
add
popa
ins
gs
popa
arpl
outs
jae
addr16
dec
popa
ins
gs
popa
arpl
popa
ins
add
ins
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
imul
push
jb
imul
imul
dec
jae
dec
imul
je
jb
bound
gs
outs
bound
dec
inc
outs
jne
gs
bound
inc
jne
arpl
add
je
je
add
jne
gs
bound
push
jns
je
ins
cs
imul
je
ins
cs
outs
jb
add
ins
arpl
popa
jae
add
addr16
inc
imul
jb
bound
add
je
dec
gs
inc
je
jb
bound
add
je
dec
jae
popa
ins
gs
popa
arpl
arpl
popa
je
outs
outs
add
bound
arpl
outs
outs
outs
je
je
outs
outs
add
je
dec
popa
ins
add
je
dec
outs
arpl
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
inc
outs
jne
je
addr16
dec
je
ins
add
inc
dec
xor
push
imul
xor
add
inc
push
dec
push
gs
xor
inc
je
outs
dec
push
push
add
dec
inc
xor
dec
dec
je
je
pop
push
xor
push
outs
add
ss
bound
inc
inc
data16
push
jbe
push
pop
pop
push
jb
dec
xor
outs
bound
arpl
dec
add
popa
inc
dec
xor
push
dec
pop
jne
ss
dec
pop
add
push
popa
push
dec
dec
dec
jae
je
imul
inc
fs
outs
outs
outs
je
je
outs
outs
add
ins
jne
add
je
imul
ins
jne
add
imul
push
jb
imul
ins
pop
imul
dec
jae
ins
pop
popa
je
jb
bound
gs
push
jb
arpl
jae
inc
ins
gs
outs
je
gs
gs
add
outs
arpl
jae
bound
arpl
imul
push
fs
outs
inc
push
inc
outs
jbe
imul
inc
addr16
cmp
push
jns
outs
xor
push
outs
inc
push
dec
imul
push
gs
imul
gs
outs
arpl
dec
push
imul
add
outs
outs
je
imul
popa
push
dec
xor
je
add
je
outs
outs
add
xor
push
ja
push
add
jne
je
xor
dec
add
ss
outs
xor
add
pop
dec
inc
push
inc
inc
push
add
imul
dec
bound
push
imul
outs
js
push
ja
cmp
push
popa
imul
outs
add
dec
pop
cmp
aaa
push
push
jne
jae
add
outs
push
dec
je
xor
jne
aaa
cmp
ins
pop
push
xor
inc
popa
je
push
imul
gs
outs
push
dec
xor
dec
inc
imul
outs
inc
outs
js
popa
push
inc
jbe
push
dec
jae
add
jae
gs
gs
inc
outs
js
dec
imul
aaa
xor
arpl
bound
xor
dec
add
push
xor
gs
xor
jne
inc
ja
ja
addr16
jbe
cmp
add
arpl
gs
inc
outs
js
js
ins
inc
pop
jb
dec
dec
add
outs
je
popa
outs
fs
gs
js
cmp
inc
pop
outs
xor
imul
je
ins
cs
push
imul
gs
push
gs
outs
jbe
push
popa
outs
add
je
dec
je
ins
add
imul
imul
add
outs
add
jo
jae
outs
add
xor
arpl
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
outs
imul
je
ins
cs
jb
ja
outs
add
jp
add
jp
inc
add
je
dec
outs
arpl
imul
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
push
popa
bound
fs
jae
je
push
gs
add
je
push
imul
pop
dec
popa
ins
add
je
inc
jne
outs
push
imul
pop
push
popa
bound
outs
jo
addr16
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
outs
ins
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
push
imul
add
arpl
gs
outs
js
imul
add
outs
outs
add
je
dec
arpl
add
jne
jo
jb
dec
outs
imul
add
imul
dec
imul
jb
ins
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
inc
ins
imul
add
popa
add
je
dec
ins
popa
add
outs
dec
ins
xor
addr16
add
popa
dec
ins
outs
inc
xor
imul
jae
popa
ins
jne
add
inc
dec
inc
ja
inc
xor
push
xor
push
cmp
ss
push
aaa
dec
dec
push
xor
dec
add
cmp
jae
bound
ja
inc
dec
pop
dec
imul
je
dec
cmp
arpl
add
ins
dec
dec
dec
push
jne
imul
dec
push
dec
gs
popa
aaa
xor
dec
inc
gs
inc
dec
cmp
js
ins
je
dec
push
gs
ja
xor
inc
bound
addr16
xor
outs
add
pop
dec
push
push
pop
imul
dec
imul
inc
add
addr16
je
dec
ins
dec
inc
add
inc
dec
jp
dec
pop
push
add
pop
push
jae
push
ins
cmp
inc
gs
xor
inc
add
jae
dec
xor
dec
ins
add
push
outs
jns
dec
dec
add
push
xor
ja
dec
add
xor
jno
inc
dec
inc
xor
addr16
imul
jns
dec
outs
add
inc
push
imul
dec
inc
dec
push
dec
jno
jae
add
dec
push
push
dec
xor
add
imul
imul
add
pushw
dec
xor
ins
cmp
inc
fs
xor
pop
ss
outs
cmp
inc
dec
add
gs
jns
gs
push
add
addr16
inc
dec
xor
push
inc
push
push
imul
push
outs
inc
ins
imul
push
pop
inc
xor
add
ss
je
jne
pop
add
push
push
gs
jbe
ja
jae
dec
push
addr16
popa
dec
imul
jbe
outs
je
jb
jae
addr16
inc
js
arpl
popa
bound
popa
je
add
ins
gs
jns
je
ins
add
ins
gs
jne
add
je
xor
push
je
imul
ins
imul
jb
dec
gs
outs
add
outs
arpl
add
add
ins
gs
gs
jb
xor
ins
gs
popa
add
jae
ja
jb
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
popa
jb
dec
outs
je
jb
outs
arpl
add
arpl
ins
outs
je
dec
popa
je
add
js
push
jne
jae
jb
outs
add
inc
push
jb
jns
inc
jae
add
jo
jns
js
bound
jns
inc
push
ss
pop
push
data16
add
jns
inc
inc
xor
dec
push
ins
arpl
push
xor
xor
pop
push
imul
push
jo
addr16
dec
add
dec
xor
pop
pop
js
jo
aaa
jns
push
push
add
ja
cmp
popa
push
push
dec
xor
outs
jo
push
add
fs
dec
outs
popa
add
pop
je
js
jb
jne
xor
inc
push
inc
dec
imul
jo
cmp
jns
gs
jae
pop
push
aaa
dec
jo
add
xor
push
addr16
ss
inc
dec
outs
data16
ss
add
je
inc
popa
jo
arpl
jns
push
push
ss
fs
outs
pop
inc
gs
jb
addr16
inc
jns
add
je
dec
jae
ins
imul
fs
xor
ja
pop
dec
inc
gs
dec
dec
add
je
inc
popa
jo
arpl
jns
jne
ins
push
pop
ja
dec
outs
popa
js
inc
aaa
push
push
ins
dec
add
inc
inc
xor
ins
inc
xor
pop
dec
bound
dec
xor
inc
js
je
push
push
push
inc
pop
inc
xor
xor
xor
add
inc
push
dec
pop
ss
outs
push
arpl
push
push
add
imul
ss
arpl
xor
add
inc
inc
push
xor
pop
ss
aaa
jae
push
popa
jne
add
jno
pop
jo
pop
ins
arpl
cmp
cmp
add
push
cmp
imul
cmp
jb
dec
add
outs
js
aaa
arpl
inc
popa
push
push
inc
add
inc
bound
aaa
inc
jne
ja
jne
dec
xor
add
dec
dec
push
jp
pop
dec
ss
inc
pop
push
cmp
dec
inc
pop
ja
inc
jno
inc
xor
dec
xor
ja
xor
gs
xor
jno
dec
ins
xor
ins
jb
dec
push
add
xor
cmp
pop
jno
dec
dec
jo
push
ins
pop
add
data16
jo
inc
jns
inc
ins
outs
gs
push
add
ss
push
jbe
push
jns
inc
push
jb
push
push
popa
xor
pop
ss
cmp
push
xor
dec
push
dec
ss
add
cmp
dec
jno
cmp
inc
arpl
outs
imul
inc
dec
pop
inc
imul
imul
xor
push
push
cmp
dec
gs
popa
dec
xor
addr16
inc
arpl
dec
dec
cmp
add
jns
bound
bound
addr16
imul
push
pop
push
dec
ss
jno
dec
xor
dec
xor
push
push
push
jo
outs
fs
popa
jns
jne
add
push
jae
push
jno
inc
imul
inc
inc
xor
dec
add
jb
xor
push
jbe
jno
xor
bound
inc
ins
jb
ins
jo
push
pop
push
outs
outs
jbe
push
inc
bound
add
aaa
fs
dec
jno
xor
pop
xor
xor
inc
js
add
inc
push
inc
jbe
jns
pop
push
dec
inc
jb
add
dec
xor
dec
cmp
jne
addr16
dec
pop
xor
ins
push
xor
jno
gs
pop
ja
inc
xor
add
xor
jno
inc
inc
inc
push
dec
push
dec
push
inc
inc
push
inc
dec
jno
gs
jns
dec
jo
push
dec
inc
add
jb
jno
jno
inc
dec
imul
bound
gs
push
popa
inc
je
outs
jo
jno
dec
outs
add
dec
pop
pop
dec
jno
arpl
push
popa
push
push
xor
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
je
bound
arpl
pop
xor
push
inc
jno
fs
push
push
inc
dec
ins
pop
add
dec
jne
push
jno
xor
push
inc
jo
dec
pop
jo
outs
xor
gs
push
pop
popa
inc
inc
dec
push
dec
ja
pop
add
inc
push
dec
arpl
fs
outs
outs
jae
xor
push
push
outs
dec
ins
jno
jae
ins
bound
dec
outs
inc
push
inc
add
cmp
ja
push
popa
jbe
inc
push
inc
push
ss
dec
push
add
jo
imul
pop
imul
add
ss
dec
jno
push
inc
js
inc
xor
outs
cmp
add
popa
jb
push
jbe
ins
data16
imul
jbe
add
dec
xor
gs
xor
ja
cmp
outs
add
inc
inc
popa
jb
dec
dec
cmp
dec
push
dec
arpl
outs
add
xor
push
data16
jno
imul
js
pop
xor
addr16
pop
outs
push
xor
xor
dec
gs
add
push
xor
dec
cmp
inc
popa
inc
outs
inc
xor
jae
push
xor
jno
pop
bound
jae
dec
inc
inc
ins
dec
add
push
dec
jae
jno
fs
inc
jae
push
js
pop
xor
js
bound
bound
fs
push
popa
inc
push
ja
add
inc
pop
push
dec
jno
jno
xor
cmp
jo
add
push
ss
jno
jne
pop
push
imul
dec
inc
xor
jbe
inc
push
je
jno
cmp
jb
push
inc
pop
jbe
cmp
data16
pop
ins
inc
jno
pop
push
imul
dec
push
xor
inc
outs
fs
outs
imul
xor
data16
xor
aaa
xor
add
jae
ins
gs
popa
jns
jne
add
ss
cmp
jne
imul
push
add
jb
outs
jb
dec
popa
jns
jne
add
ins
inc
xor
jno
dec
push
inc
push
aaa
dec
cmp
jns
xor
push
jno
js
jne
bound
push
outs
push
inc
add
je
add
jae
gs
cs
dec
add
je
gs
jo
popa
je
add
outs
aaa
push
imul
push
push
ins
dec
xor
add
outs
dec
outs
fs
outs
inc
arpl
jae
add
outs
push
push
inc
imul
dec
aaa
push
inc
fs
jno
jo
imul
inc
inc
add
popa
arpl
fs
inc
gs
jns
xor
dec
push
push
dec
add
ins
gs
ins
outs
jae
add
ss
inc
inc
jbe
ins
ins
dec
push
dec
jo
add
pop
push
inc
push
jno
push
jae
push
jne
cmp
ins
cmp
popa
gs
xor
inc
jbe
inc
xor
dec
dec
bound
inc
add
outs
arpl
jae
push
je
jb
add
xor
push
inc
jno
je
imul
jae
push
xor
inc
ins
outs
jae
add
xor
cmp
jns
dec
ja
dec
push
ja
add
gs
je
push
jb
push
arpl
jb
jb
popa
ins
jns
push
cmp
jae
jb
imul
add
je
dec
outs
addr16
add
inc
jno
je
jo
push
push
dec
push
inc
xor
jb
xor
push
jbe
inc
inc
xor
dec
jns
ins
xor
je
add
push
jo
push
jno
push
dec
pop
push
ins
xor
xor
pop
push
gs
jno
push
pop
xor
ja
push
dec
dec
jns
add
je
push
inc
jno
outs
je
inc
popa
cmp
dec
jae
add
jb
inc
cmp
bound
dec
inc
push
ss
dec
inc
xor
popa
add
jo
outs
add
jb
dec
push
xor
jb
outs
aaa
jb
popa
jbe
dec
fs
xor
xor
inc
inc
inc
arpl
gs
dec
outs
addr16
add
je
outs
outs
xor
inc
jne
je
outs
xor
inc
jne
je
outs
xor
inc
jne
je
outs
xor
inc
jne
je
outs
xor
je
jb
inc
outs
js
add
imul
outs
xor
push
popa
imul
outs
xor
push
popa
imul
outs
xor
push
popa
imul
outs
xor
inc
popa
je
push
imul
gs
add
ins
bound
outs
js
add
jae
gs
gs
inc
outs
js
add
jae
gs
gs
inc
outs
js
add
imul
outs
xor
imul
outs
add
imul
outs
aaa
add
arpl
gs
inc
outs
js
add
arpl
gs
inc
outs
js
add
push
outs
ss
inc
jns
push
xor
inc
je
dec
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jns
ins
inc
push
pop
add
je
inc
jae
gs
bound
inc
jae
gs
bound
dec
push
ins
push
dec
popa
ins
dec
ins
add
cmp
push
imul
push
add
xor
xor
inc
inc
push
pop
push
xor
gs
outs
arpl
jno
popa
ins
jae
push
pop
xor
outs
jo
bound
outs
je
outs
dec
arpl
inc
xor
xor
xor
jb
jne
aaa
je
add
cmp
dec
xor
jne
push
push
push
xor
push
xor
inc
dec
xor
dec
dec
pop
push
push
jb
add
dec
outs
xor
arpl
dec
pop
js
dec
arpl
fs
jne
je
outs
jae
popa
outs
arpl
push
gs
imul
add
outs
arpl
outs
outs
imul
je
inc
gs
jne
je
push
pop
arpl
jo
jb
xor
jns
ins
push
cmp
popa
outs
push
cmp
gs
dec
cmp
dec
xor
xor
pop
xor
bound
inc
gs
inc
push
je
push
xor
inc
gs
jne
je
addr16
push
gs
imul
arpl
dec
xor
js
pop
jno
cmp
add
push
push
xor
xor
inc
jno
jno
push
push
add
arpl
ja
jne
pop
js
ins
push
push
add
je
imul
inc
addr16
dec
addr16
dec
outs
fs
add
cmp
cmp
ins
xor
add
gs
fs
inc
imul
outs
add
je
outs
fs
outs
outs
add
je
imul
gs
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
push
push
jae
inc
push
xor
data16
push
inc
push
xor
push
gs
ins
jbe
push
jns
add
push
push
xor
dec
pop
inc
pop
dec
xor
add
jae
ins
jbe
dec
gs
outs
add
je
outs
fs
popa
jae
add
jb
jae
inc
push
addr16
push
pop
jno
push
push
jbe
add
gs
je
add
gs
je
inc
gs
gs
je
add
dec
push
xor
xor
jno
cmp
js
outs
add
je
popa
ins
jne
add
xor
jno
dec
ins
inc
push
dec
push
ins
xor
push
add
jno
jo
je
dec
jo
dec
dec
dec
push
cmp
ins
popa
dec
push
pop
xor
push
xor
pop
inc
push
dec
push
ja
dec
inc
pop
xor
inc
dec
pop
cmp
push
add
addr16
js
ja
js
push
inc
cmp
fs
outs
add
inc
push
ja
ins
ja
dec
imul
add
jo
pop
ja
dec
popa
dec
inc
dec
dec
inc
push
xor
push
add
je
dec
popa
outs
imul
fs
add
push
arpl
gs
outs
add
jbe
imul
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
arpl
pop
bound
pop
jbe
add
je
add
bound
inc
inc
dec
dec
add
push
pop
dec
data16
ins
dec
add
gs
cmp
inc
push
arpl
push
push
dec
pop
push
jae
arpl
add
push
pop
gs
push
inc
add
cmp
xor
xor
add
outs
je
xor
inc
dec
jbe
xor
outs
dec
push
pop
jbe
inc
je
dec
add
jne
push
dec
arpl
add
xor
imul
inc
inc
inc
ja
push
push
xor
ja
jbe
xor
outs
dec
xor
dec
outs
jo
jb
push
inc
push
push
jno
cmp
push
inc
dec
pop
jns
ins
inc
dec
jne
push
inc
pop
ins
push
outs
push
push
add
pop
pop
jno
dec
aaa
dec
push
add
push
pop
jp
pop
xor
add
imul
push
add
dec
inc
dec
aaa
jae
inc
push
add
dec
pop
xor
push
arpl
addr16
inc
pop
outs
inc
popa
pop
push
jb
gs
imul
inc
aaa
addr16
inc
push
data16
pop
popa
jb
dec
pop
outs
add
push
cmp
push
xor
pop
push
dec
jo
dec
dec
push
pop
push
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
jb
add
xor
cmp
inc
inc
jbe
outs
add
xor
push
dec
push
push
add
outs
je
xor
inc
imul
je
jb
inc
gs
jns
gs
inc
outs
jo
add
addr16
push
pop
popa
ins
bound
push
dec
outs
je
add
pop
pop
inc
push
inc
ja
add
fs
inc
arpl
push
push
add
jbe
aaa
xor
popa
jbe
dec
dec
pop
fs
imul
push
pop
jae
pushw
push
add
arpl
ins
inc
fs
cmp
push
jns
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
inc
gs
jb
jo
outs
push
gs
imul
imul
outs
fs
gs
dec
popa
outs
popa
gs
push
arpl
outs
fs
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
add
ja
popa
jo
jbe
inc
pop
push
jno
arpl
add
jns
je
inc
outs
outs
imul
je
inc
ins
ins
outs
ja
outs
ins
jns
imul
jb
je
ins
jae
arpl
pop
dec
arpl
jbe
add
xor
je
push
gs
imul
imul
push
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
xor
js
inc
xor
inc
jb
jo
outs
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
outs
popa
jb
push
gs
fs
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
inc
pop
dec
xor
push
inc
add
inc
pop
outs
pop
ins
pop
js
add
ins
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
outs
imul
pop
push
outs
imul
gs
je
imul
pop
dec
inc
cmp
dec
add
ins
pop
gs
dec
gs
outs
jb
add
jb
gs
xor
cs
ins
add
pop
pop
imul
push
imul
jb
je
arpl
dec
pop
ja
xor
jo
inc
imul
jne
arpl
push
dec
popa
pop
pop
outs
inc
jo
push
add
jb
jne
ins
inc
ins
ins
outs
arpl
dec
xor
pop
ins
dec
xor
push
add
je
push
imul
jae
popa
ins
add
popa
fs
outs
je
xor
push
gs
fs
outs
je
xor
inc
ins
ins
outs
arpl
push
popa
jae
dec
gs
add
imul
jb
push
jb
je
dec
outs
je
xor
push
inc
push
pop
push
dec
add
pop
inc
bound
push
add
inc
inc
jb
jo
outs
push
gs
imul
imul
pop
push
jae
dec
popa
arpl
outs
gs
gs
je
jb
add
xor
xor
jns
dec
add
je
gs
outs
add
fs
inc
arpl
dec
data16
jb
imul
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
outs
arpl
jae
outs
fs
add
fs
gs
popa
outs
fs
add
je
imul
outs
imul
jae
inc
gs
jns
add
outs
je
xor
push
outs
dec
outs
je
xor
push
push
xor
cmp
je
inc
add
je
dec
outs
arpl
imul
add
imul
je
popa
ins
add
jae
ins
bound
popa
ins
add
je
inc
outs
fs
popa
jae
add
jo
popa
arpl
inc
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
popa
ins
jne
add
push
pop
xor
cmp
dec
outs
popa
fs
imul
imul
gs
xor
add
jns
ins
bound
push
dec
add
je
jb
arpl
fs
jae
add
pop
pop
imul
inc
add
imul
jae
dec
gs
outs
jb
add
dec
pop
inc
xor
je
push
add
popa
fs
jb
arpl
jae
gs
outs
jb
add
dec
pop
inc
inc
aaa
cmp
add
inc
pop
jo
push
outs
push
push
add
outs
push
jb
arpl
jae
push
jbe
pop
je
dec
xor
xor
inc
ins
outs
jae
dec
popa
outs
fs
add
inc
pop
push
push
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
push
gs
add
inc
pop
inc
push
imul
gs
jae
je
dec
push
add
gs
je
inc
arpl
jo
outs
jb
push
jb
je
add
jb
popa
jns
popa
push
js
push
dec
dec
imul
pop
push
dec
dec
dec
dec
push
add
outs
pop
push
push
push
inc
imul
inc
add
dec
pop
jne
imul
add
pop
pop
dec
push
outs
js
xor
push
cmp
inc
push
dec
inc
js
add
inc
pop
jb
imul
add
aaa
pop
dec
jbe
dec
dec
xor
inc
pop
dec
pop
push
ss
dec
dec
add
push
push
js
imul
dec
gs
je
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
jns
pop
dec
push
inc
inc
gs
jns
ss
push
add
je
inc
popa
jae
push
je
gs
ins
add
pop
push
inc
fs
ins
inc
pop
jne
jbe
inc
pop
imul
push
outs
jae
je
outs
outs
add
je
bound
bound
push
xor
inc
aaa
push
add
outs
inc
push
push
cmp
dec
dec
dec
dec
xor
add
dec
pop
dec
xor
inc
xor
imul
ins
add
popa
fs
jns
gs
jae
xor
imul
jno
inc
xor
jo
add
pop
pop
xor
inc
push
jb
js
fs
bound
push
gs
jb
add
je
dec
gs
inc
dec
xor
pop
push
outs
xor
add
xor
jo
xor
ins
inc
data16
push
inc
gs
jne
ins
imul
imul
jo
arpl
bound
jne
dec
jbe
xor
jne
jbe
jo
addr16
bound
bound
arpl
imul
imul
fs
je
dec
outs
fs
fs
pop
jo
dec
xor
push
dec
xor
push
add
pop
xor
aaa
bound
pop
xor
inc
xor
ins
jne
jns
dec
inc
addr16
xor
je
dec
imul
jne
push
ins
inc
ins
outs
arpl
arpl
xor
dec
inc
gs
jne
ins
inc
push
add
ja
pop
push
pop
js
push
fs
dec
cmp
jne
jae
dec
xor
inc
je
push
push
outs
arpl
cmp
add
push
inc
inc
popa
jno
push
gs
gs
add
dec
xor
dec
push
imul
inc
push
ins
add
pop
push
xor
dec
xor
jo
inc
ins
jno
outs
dec
xor
cmp
imul
push
add
jbe
fs
push
push
inc
dec
dec
xor
add
dec
push
cmp
ja
jae
inc
xor
gs
addr16
dec
pop
jbe
bound
xor
jns
outs
jo
arpl
push
jne
ins
xor
dec
imul
add
ins
bound
xor
fs
ja
aaa
inc
pop
jns
add
cmp
imul
dec
dec
popa
inc
arpl
imul
popa
cmp
jno
push
dec
push
push
xor
outs
addr16
xor
pop
inc
cmp
ins
cmp
dec
add
xor
pop
cmp
push
push
push
inc
inc
imul
gs
xor
push
jae
inc
dec
push
pop
jne
inc
arpl
ins
ja
inc
jb
dec
push
xor
js
dec
add
popa
push
xor
dec
dec
push
jo
dec
push
xor
imul
bound
xor
inc
outs
jbe
inc
addr16
add
dec
dec
push
popa
ss
jne
dec
dec
xor
arpl
jp
ss
inc
dec
dec
push
xor
js
jne
xor
pop
jo
popa
push
dec
inc
jb
xor
dec
add
push
ss
outs
ins
aaa
dec
outs
outs
je
inc
inc
push
dec
xor
dec
imul
outs
inc
inc
dec
jbe
bound
data16
push
add
jb
push
dec
ss
xor
xor
jne
jae
add
push
push
gs
pop
inc
inc
js
inc
inc
cmp
dec
inc
inc
add
inc
je
dec
dec
cmp
inc
dec
aaa
ja
xor
pop
ins
dec
push
dec
dec
inc
xor
jno
pop
add
popa
fs
outs
je
je
add
arpl
push
jbe
pop
xor
xor
dec
aaa
jne
jp
ins
dec
dec
je
xor
dec
ins
jbe
inc
push
js
push
arpl
xor
data16
jae
jne
dec
dec
dec
add
inc
xor
gs
fs
outs
outs
push
inc
xor
jae
dec
inc
aaa
aaa
bound
cmp
push
imul
aaa
add
imul
add
dec
bound
cmp
push
ins
push
push
outs
xor
add
dec
push
fs
bound
inc
pop
push
js
inc
js
add
jbe
inc
push
dec
inc
jb
push
inc
ja
data16
pop
inc
add
bound
jbe
ins
jno
push
jbe
je
inc
xor
inc
gs
jne
jb
outs
je
jb
arpl
jae
jns
push
outs
inc
jae
xor
push
aaa
dec
push
push
push
xor
addr16
dec
popa
imul
add
cmp
push
jno
jb
pushw
jae
dec
push
add
je
inc
popa
jae
inc
fs
jae
add
inc
dec
xor
inc
ins
cmp
data16
arpl
dec
jne
outs
jo
dec
outs
gs
popa
ins
imul
outs
jbe
ja
dec
dec
push
aaa
jbe
jno
pop
add
imul
xor
push
outs
xor
dec
push
add
outs
aaa
popa
inc
push
imul
xor
dec
add
gs
ins
outs
cmp
gs
ss
xor
add
je
dec
outs
fs
gs
ins
cmp
outs
pop
inc
cmp
cmp
xor
push
dec
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
data16
jb
pop
js
push
pop
dec
push
add
jo
push
inc
aaa
outs
cmp
dec
ss
push
dec
jo
addr16
dec
outs
fs
gs
popa
ins
add
xor
ja
jno
jne
push
dec
push
add
outs
ja
jb
jp
dec
aaa
js
inc
push
jae
xor
aaa
ja
push
push
add
pop
bound
inc
ss
jns
jbe
push
dec
push
dec
add
je
inc
imul
outs
outs
dec
outs
outs
add
ins
gs
gs
imul
add
xor
ss
push
popa
cmp
jno
push
ins
add
je
push
jb
fs
je
popa
push
jb
popa
jb
add
outs
outs
push
dec
push
xor
jne
pop
push
jb
add
je
push
jb
fs
je
imul
je
outs
jbe
arpl
cmp
outs
inc
outs
inc
fs
dec
add
je
push
jb
fs
je
jne
ins
fs
popa
jb
add
push
push
push
ja
dec
je
fs
dec
inc
imul
addr16
push
jb
fs
je
jb
jbe
je
push
popa
jb
add
popa
jns
pop
push
pop
cmp
inc
push
ss
dec
dec
add
pop
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
xor
cmp
aaa
data16
inc
dec
cmp
push
add
pop
dec
gs
push
push
push
ins
push
dec
js
xor
jb
dec
dec
add
inc
dec
ss
dec
inc
outs
dec
xor
inc
xor
xor
popa
xor
dec
pop
pop
inc
jns
inc
dec
pop
inc
gs
xor
inc
gs
xor
pop
inc
cmp
jno
pop
imul
add
push
jo
push
dec
imul
dec
xor
add
xor
imul
inc
cmp
outs
dec
add
bound
dec
cmp
push
push
xor
arpl
pop
dec
push
jns
dec
push
bound
imul
add
jbe
je
jae
je
ins
je
push
inc
bound
add
inc
outs
jae
push
aaa
inc
push
dec
ins
fs
dec
dec
js
jb
ja
dec
jno
data16
pop
js
jb
push
push
add
gs
jb
push
dec
dec
dec
ins
xor
dec
push
push
dec
push
je
outs
fs
gs
dec
xor
xor
gs
outs
bound
push
outs
dec
ja
push
dec
add
je
dec
dec
push
push
inc
dec
inc
inc
add
pop
push
outs
jae
inc
dec
jne
push
push
push
push
push
dec
add
jbe
arpl
inc
jns
imul
push
pop
ins
add
inc
ja
outs
push
inc
inc
jbe
je
dec
dec
imul
ins
pop
push
push
ja
arpl
jno
inc
pop
push
dec
dec
inc
dec
add
jbe
xor
popa
dec
ss
push
outs
push
dec
inc
add
dec
js
xor
xor
bound
imul
dec
jo
push
inc
ss
aaa
inc
xor
xor
inc
dec
inc
ja
jne
dec
xor
ins
pop
jne
data16
dec
outs
xor
jne
popa
fs
dec
inc
cmp
add
bound
imul
cmp
ss
imul
push
jo
dec
inc
ja
push
cmp
dec
inc
ins
xor
add
aaa
push
push
xor
popa
jbe
arpl
add
je
dec
add
js
push
push
push
jb
dec
push
addr16
xor
imul
inc
push
dec
jae
dec
arpl
push
ins
dec
xor
add
je
push
outs
jae
je
outs
outs
add
push
aaa
push
dec
xor
outs
jb
pop
jo
add
imul
pop
pop
gs
popa
inc
dec
xor
dec
dec
js
jb
jp
bound
arpl
jb
jne
cmp
ins
dec
imul
js
inc
pop
inc
push
jne
inc
jo
pop
js
ins
data16
ins
ja
jae
push
outs
push
xor
inc
add
je
push
push
inc
cmp
dec
pop
fs
ja
popa
arpl
cmp
js
push
pop
add
outs
dec
inc
ss
inc
inc
cmp
ja
push
dec
push
inc
imul
push
je
dec
inc
dec
ins
jbe
pop
push
xor
jns
push
jae
add
dec
imul
inc
inc
inc
outs
bound
cmp
add
arpl
ins
ins
xor
pop
xor
outs
push
dec
js
add
push
inc
dec
imul
imul
dec
add
gs
push
ins
bound
addr16
jae
dec
dec
dec
dec
outs
ins
add
je
jne
arpl
outs
push
outs
imul
jb
gs
gs
je
add
inc
push
je
ins
addr16
ss
jno
inc
add
je
dec
outs
fs
gs
gs
outs
jb
push
imul
push
inc
ins
outs
ins
inc
push
aaa
xor
add
je
inc
outs
je
jns
outs
imul
xor
dec
inc
inc
dec
xor
jns
xor
add
ins
jns
ins
xor
dec
bound
imul
je
dec
gs
outs
add
bound
push
pop
pop
dec
jno
imul
inc
imul
push
imul
dec
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
inc
js
xor
inc
push
push
xor
push
dec
xor
imul
dec
jo
push
dec
inc
xor
imul
dec
xor
addr16
dec
outs
fs
gs
popa
outs
fs
add
outs
push
inc
jo
js
dec
jb
xor
ja
add
push
outs
inc
ins
inc
cmp
dec
xor
add
inc
inc
push
push
dec
push
xor
jns
imul
dec
inc
push
jo
ins
inc
pop
push
data16
pop
dec
push
jo
pop
add
gs
jb
inc
gs
gs
je
add
xor
ins
jo
inc
outs
dec
xor
imul
push
jne
je
ins
gs
gs
outs
fs
popa
outs
fs
add
je
dec
gs
outs
fs
popa
outs
fs
add
ins
inc
outs
outs
ins
aaa
inc
cmp
push
bound
bound
add
gs
jb
dec
gs
outs
add
inc
xor
aaa
dec
imul
push
push
xor
push
inc
ja
inc
dec
ins
inc
dec
outs
bound
ja
add
js
xor
push
gs
xor
xor
jns
popa
imul
inc
ins
outs
bound
jne
dec
cmp
xor
popa
xor
push
dec
add
jne
jae
push
push
jns
add
ss
dec
jne
inc
inc
jae
outs
dec
dec
xor
arpl
inc
ins
data16
push
jb
push
cmp
data16
dec
bound
jae
popa
inc
pop
push
dec
inc
push
cmp
push
outs
inc
popa
jae
ss
je
imul
inc
xor
xor
imul
pop
add
inc
inc
push
push
xor
push
pop
fs
add
push
pop
xor
xor
imul
inc
add
pop
inc
push
dec
xor
dec
xor
dec
xor
add
inc
dec
xor
pop
arpl
push
je
aaa
push
pop
cmp
xor
inc
add
xor
dec
xor
push
dec
push
dec
dec
fs
arpl
outs
inc
xor
inc
dec
xor
jns
jae
push
jae
push
add
xor
bound
dec
addr16
dec
jo
dec
add
push
push
inc
xor
inc
ins
jae
pop
cmp
add
inc
js
pop
xor
push
aaa
inc
jo
ins
dec
dec
add
outs
aaa
push
jns
imul
jns
dec
add
gs
je
inc
outs
arpl
jo
outs
jb
push
js
arpl
xor
dec
push
xor
jae
ja
push
bound
ja
xor
je
outs
push
add
popa
jae
je
imul
add
outs
add
popa
addr16
outs
popa
je
jbe
inc
outs
je
jns
outs
popa
je
jbe
push
imul
fs
dec
inc
dec
imul
inc
inc
imul
jo
jbe
ins
jne
pop
pop
add
push
inc
dec
pop
ss
inc
add
cmp
cmp
xor
pop
inc
inc
add
push
outs
fs
push
inc
push
cmp
push
add
xor
outs
inc
dec
ss
add
jae
push
cmp
outs
ins
imul
inc
gs
jne
je
ins
gs
jns
gs
popa
outs
fs
gs
jb
ins
dec
gs
fs
je
push
outs
imul
inc
inc
dec
xor
cmp
ins
dec
outs
xor
inc
gs
jne
je
ins
gs
imul
fs
gs
jb
ins
dec
gs
fs
je
push
outs
imul
dec
dec
ins
ins
push
push
xor
imul
outs
add
dec
xor
xor
dec
imul
add
inc
dec
push
arpl
imul
add
fs
jns
jo
jno
js
dec
xor
add
addr16
xor
jb
xor
bound
inc
push
push
add
dec
inc
ins
jb
data16
push
push
ss
js
push
jns
inc
add
xor
jno
arpl
jns
dec
inc
xor
jno
imul
imul
xor
ja
imul
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
fs
popa
outs
add
push
inc
pop
cmp
jns
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
dec
push
inc
jne
dec
jno
dec
js
add
xor
dec
ins
push
ja
outs
ss
add
gs
xor
dec
inc
pop
inc
push
push
pop
cmp
gs
dec
popa
push
push
jo
push
jbe
xor
jbe
add
dec
xor
pop
inc
outs
xor
dec
dec
xor
add
xor
push
xor
pop
inc
imul
push
jns
add
push
cmp
xor
jno
xor
dec
jbe
add
push
push
xor
xor
xor
xor
inc
js
outs
imul
ss
inc
aaa
ja
add
add
xor
jbe
pop
cmp
xor
jns
push
popa
push
xor
pop
dec
xor
bound
js
dec
add
push
dec
je
dec
cmp
arpl
dec
imul
add
inc
inc
fs
cmp
dec
jae
imul
imul
inc
cmp
push
ins
add
dec
inc
xor
push
add
inc
ins
push
push
ins
inc
outs
add
inc
ss
push
xor
pop
inc
jne
inc
ins
xor
dec
add
bound
ins
popa
push
dec
pop
add
push
inc
jo
gs
bound
jno
dec
inc
je
cmp
add
jbe
push
imul
outs
dec
inc
inc
jae
xor
add
dec
inc
push
inc
inc
inc
outs
add
popa
inc
push
imul
inc
add
inc
push
xor
imul
arpl
add
push
inc
jne
imul
inc
inc
dec
outs
aaa
ss
dec
dec
inc
inc
inc
xor
xor
inc
pop
jae
jb
ins
outs
push
xor
outs
dec
dec
inc
dec
gs
xor
add
bound
inc
outs
jno
dec
xor
push
cmp
push
add
je
inc
push
inc
dec
dec
add
inc
dec
dec
jno
push
xor
js
outs
inc
add
push
xor
bound
xor
push
fs
pop
push
push
cmp
add
inc
inc
ins
pop
inc
bound
inc
ins
je
outs
push
xor
add
push
imul
inc
jb
inc
push
jo
xor
dec
jo
outs
add
addr16
dec
ins
inc
dec
imul
dec
data16
add
dec
jne
jns
jne
js
addr16
dec
push
cmp
inc
add
xor
dec
dec
inc
push
dec
data16
bound
pop
ss
dec
add
dec
outs
je
xor
inc
push
imul
ins
outs
outs
inc
dec
aaa
inc
inc
inc
inc
dec
add
jbe
jno
inc
push
push
aaa
cmp
dec
inc
outs
dec
outs
add
inc
ins
dec
xor
inc
xor
push
push
push
xor
dec
ins
add
push
je
arpl
outs
pop
dec
dec
ss
ins
arpl
add
xor
dec
inc
inc
pop
addr16
jo
push
add
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
aaa
popa
sub
xor
imul
outs
xor
dec
data16
cs
push
xor
inc
outs
outs
push
js
inc
push
pop
add
jbe
inc
gs
jae
dec
inc
push
xor
xor
data16
inc
push
push
jb
push
ss
outs
push
aaa
pop
xor
inc
inc
xor
push
dec
jno
xor
dec
inc
pop
fs
imul
jno
pop
jbe
xor
js
add
gs
xor
inc
push
inc
push
push
dec
ins
je
cs
push
dec
dec
outs
dec
push
ja
jbe
js
push
push
dec
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
outs
jae
outs
outs
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
outs
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
popa
ins
ins
imul
outs
je
outs
outs
add
popa
addr16
je
jb
bound
add
add
add
sbb
add
add
add
outs
add
add
and
push
add
jb
jae
imul
cmp
add
add
add
add
and
inc
add
ins
add
add
add
add
je
jb
popa
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
imul
add
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
add
inc
add
jns
jo
je
outs
add
add
jbe
imul
push
add
outs
add
imul
jb
add
add
jo
add
push
add
add
dec
add
push
add
push
add
add
add
add
push
add
dec
add
add
data16
push
add
jne
jbe
push
add
ja
push
add
dec
add
dec
inc
add
add
xor
xor
add
jno
jno
xor
imul
add
inc
add
add
add
dec
add
js
jo
imul
add
dec
add
dec
add
jbe
push
add
imul
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
je
inc
add
ins
add
add
je
add
outs
add
inc
add
outs
add
je
imul
push
add
imul
add
add
ins
add
jo
je
jb
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jne
outs
add
add
add
outs
add
add
add
(bad)
add
jo
inc
add
je
popa
add
inc
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
ins
add
arpl
je
imul
inc
add
outs
add
add
je
add
jb
push
imul
add
add
dec
data16
jbe
imul
jno
push
add
pop
add
inc
add
add
add
xor
push
add
add
xor
dec
add
push
add
jb
arpl
push
add
add
add
push
add
add
xor
dec
add
add
add
data16
ins
add
cmp
das
add
add
add
adc
add
popa
add
add
outs
add
xor
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
int
mov
dec
nop
fstp
out
ret
add
add
mov
pop
push
sbb
mov
add
push
add
add
add
add
or
add
add
add
add
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
and
xor
popa
bound
cmp
sub
sub
sub
cmp
xor
xor
xor
add
or
add
add
add
add
inc
add
sub
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
add
add
add
add
add
mov
pop
jg
aad
cmp
add
add
add
add
add
sbb
push
adc
adc
push
adc
or
push
adc
adc
add
sbb
push
adc
sbb
pop
add
push
adc
or
adc
adc
adc
adc
adc
push
adc
sbb
add
adc
add
add
adc
add
add
add
or
pop
add
or
add
adc
adc
adc
add
add
sbb
add
sbb
pop
add
sbb
or
adc
add
add
or
or
adc
adc
add
add
sbb
push
adc
push
adc
adc
pop
add
sub
or
adc
sub
pop
add
or
adc
add
add
add
push
adc
add
add
add
and
add
add
adc
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
add
add
and
adc
push
pop
and
add
adc
add
xor
add
adc
add
add
add
pop
add
add
add
add
lods
add
lods
add
add
add
add
push
add
adc
add
sub
pop
add
add
add
adc
add
add
adc
add
adc
add
add
add
add
push
adc
adc
push
adc
fld
adc
adc
aad
and
adc
adc
or
adc
add
adc
add
adc
adc
aad
push
add
push
adc
adc
or
add
sub
and
add
push
adc
add
adc
push
pop
and
add
and
or
add
adc
or
add
adc
push
or
add
sub
and
pop
pop
add
sub
or
add
adc
adc
adc
or
add
sbb
in
adc
adc
add
adc
add
add
xor
push
sbb
adc
jmp
pop
add
xor
adc
aad
or
adc
add
sbb
adc
add
push
add
push
add
push
add
add
or
adc
or
adc
adc
sbb
adc
sbb
add
add
push
add
adc
push
sbb
adc
jmp
pop
adc
adc
sub
sub
sub
or
sub
or
adc
push
or
or
add
add
jmp
push
add
in
add
in
and
add
or
add
adc
or
adc
adc
or
add
add
add
sbb
add
add
or
add
adc
adc
push
adc
adc
or
add
adc
add
sbb
adc
adc
jmp
sbb
in
adc
adc
adc
add
aad
and
sbb
or
add
adc
add
or
adc
adc
or
adc
sbb
and
xor
adc
or
adc
icebp
add
or
or
or
add
add
add
or
and
add
adc
add
jno
pop
or
cmp
cmp
inc
adc
add
adc
add
add
dec
push
and
add
sub
sub
or
and
add
add
sbb
sbb
sub
sub
adc
adc
and
add
adc
adc
add
adc
adc
adc
add
sbb
sbb
add
adc
adc
adc
add
and
and
add
adc
adc
adc
add
sub
sbb
xor
push
push
push
sbb
or
add
add
pop
add
or
or
or
add
push
push
push
or
add
add
or
add
or
push
or
sbb
adc
or
add
or
add
or
or
add
add
or
or
or
add
or
add
push
push
and
add
sub
add
or
add
add
add
add
adc
sbb
sbb
and
sbb
add
add
add
add
sbb
sbb
add
add
push
adc
adc
add
add
add
or
or
add
adc
add
add
push
add
sbb
or
add
add
or
add
and
adc
add
adc
adc
add
sbb
add
and
adc
sub
add
adc
adc
add
adc
adc
adc
add
sub
add
adc
adc
add
adc
add
add
xor
pop
add
xor
or
adc
push
adc
add
adc
push
adc
adc
mov
add
add
adc
and
adc
add
or
and
adc
add
sub
or
add
cmp
adc
add
adc
add
or
push
add
adc
add
sbb
add
sbb
push
adc
push
adc
or
add
add
and
add
sbb
pop
adc
or
or
or
or
or
or
or
or
or
sbb
sbb
add
or
and
or
adc
or
or
pop
or
or
pop
add
stc
add
stc
pop
add
adc
and
sbb
and
sbb
add
add
cs
sbb
adc
or
add
sbb
add
sbb
sbb
and
add
sbb
or
push
and
add
sub
and
add
sub
sbb
xor
or
sbb
add
push
or
or
or
or
sbb
or
or
or
cmp
add
adc
sbb
or
add
add
push
add
add
sbb
add
xor
add
add
sbb
or
add
adc
or
adc
push
add
sbb
push
or
add
sbb
or
add
or
push
or
sbb
or
adc
or
push
sbb
sbb
pusha
sbb
add
add
add
or
or
add
or
add
sbb
push
add
add
or
push
add
add
or
add
add
add
add
adc
lods
or
add
sbb
and
adc
sub
sbb
jnp
sbb
sbb
or
sbb
add
adc
or
pop
or
and
or
add
adc
sbb
or
or
adc
adc
or
sbb
or
sbb
sbb
add
add
pusha
or
or
or
or
add
or
or
push
adc
push
or
or
sbb
or
adc
add
pusha
or
or
adc
sbb
fs
or
or
or
sbb
sbb
add
sbb
or
add
cmp
add
add
add
or
and
or
or
add
add
add
add
push
add
pop
add
push
push
and
adc
add
push
add
push
or
add
add
add
sbb
or
or
add
sbb
or
add
add
sbb
pop
push
sbb
or
or
or
adc
adc
or
pop
add
sbb
cmp
add
sbb
add
add
push
sbb
or
pop
push
push
sbb
or
pop
pop
add
sbb
and
adc
add
sub
add
add
add
add
sbb
and
sbb
add
adc
add
xor
add
adc
sbb
sbb
or
add
sbb
add
sbb
or
add
or
add
or
add
sbb
or
add
or
add
add
or
pop
add
sbb
sbb
add
test
or
add
sbb
and
sbb
sbb
add
adc
add
adc
add
add
sub
add
add
add
sbb
add
add
push
add
jns
add
add
add
inc
push
add
add
or
add
add
and
add
add
sbb
cmp
add
sbb
add
add
or
add
sbb
sub
push
add
sbb
or
add
adc
push
and
sbb
add
adc
add
or
add
sub
or
or
add
add
or
add
add
add
adc
add
sbb
pop
pop
sbb
add
sbb
cmp
and
sbb
add
sbb
or
sbb
or
adc
adc
or
adc
sbb
or
adc
or
or
adc
adc
push
and
sbb
adc
dec
push
and
adc
add
sub
adc
sub
or
or
adc
push
or
sbb
or
push
or
or
or
or
add
or
or
add
sbb
or
add
push
or
add
adc
push
adc
push
add
add
add
adc
add
add
add
adc
test
add
or
mov
and
add
or
mov
add
sidtd
push
pop
add
syscall
or
add
add
sidtd
push
pop
add
add
add
sidtd
add
add
add
or
add
add
add
or
add
add
sbb
add
add
or
add
add
add
add
push
add
add
add
or
add
sbb
add
add
pop
add
add
add
sbb
or
add
inc
adc
add
sbb
or
add
sbb
or
pop
sbb
adc
add
add
add
syscall
or
wbinvd
syscall
or
add
or
or
or
sbb
syscall
or
add
sbb
and
adc
add
add
add
or
or
add
add
add
add
sbb
or
pop
add
add
pop
add
sbb
add
add
sbb
adc
add
sbb
and
imul
add
and
and
imul
add
or
or
add
sbb
sbb
add
or
add
or
sbb
push
adc
add
push
adc
adc
add
adc
add
add
add
push
and
add
adc
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
push
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
push
imul
outs
js
add
adc
add
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
inc
popa
je
push
imul
gs
add
push
add
or
ins
bound
outs
js
add
adc
add
dec
popa
jae
gs
gs
inc
outs
js
add
adc
add
dec
popa
jae
gs
gs
inc
outs
js
add
adc
add
popa
imul
outs
xor
add
popa
imul
outs
add
adc
add
popa
imul
outs
aaa
add
adc
add
imul
inc
outs
js
add
adc
add
imul
inc
outs
js
add
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
mov
add
lods
ins
je
dec
jbe
popa
push
cmp
push
push
ins
bound
push
dec
cs
dec
dec
ins
js
dec
imul
inc
xor
dec
xor
ins
jbe
dec
ins
push
push
inc
arpl
inc
push
sub
xor
xor
addr16
jbe
arpl
pop
pop
push
jns
je
ins
cs
bound
arpl
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
pop
add
or
add
add
add
add
and
add
sbb
add
leave
jno
add
in
seta
dec
test
out
xchg
icebp
outs
mov
inc
sbb
ss
cld
mov
mov
shl
or
inc
push
mov
mov
dec
test
pop
sub
mov
inc
xchg
imul
xchg
ret
push
lods
ret
pop
push
pop
jno
aad
out
mov
add
push
xor
sub
add
clc
push
mov
mov
pop
cs
jmp
iret
into
mov
push
mov
out
push
movq
imul
shl
es
pushf
push
aas
jmp
add
enter
adc
sbb
(bad)
pop
retf
mov
repz
pop
dec
popf
fnsave
xchg
enter
call
inc
push
(bad)
retf
push
std
lods
adc
jg
jecxz
addr16
sub
bound
push
rcr
jno
(bad)
xchg
das
pop
shr
dec
add
sbb
mov
push
fisttp
add
sub
add
xchg
sahf
jmp
mov
dec
stc
sbb
cwde
outs
sbb
repz
mov
pop
test
dec
add
ret
repz
or
div
dec
arpl
jle
into
hlt
jbe
dec
pop
int3
out
cmps
in
dec
cmp
jb
stos
xor
inc
sbb
jbe
push
cs
add
xor
popf
call
fidiv
(bad)
xchg
or
adc
bound
(bad)
(bad)
jp
and
jnp
cmp
cmp
pop
add
int
daa
jns
mov
stc
fdiv
sbb
imul
adc
pop
xor
mov
out
std
shl
fadd
cwd
add
daa
mov
xor
fld
rol
in
sbb
mov
push
daa
and
jl
fimul
jecxz
ins
xor
inc
or
sub
in
call
cdq
stos
je
enter
jmp
cdq
into
movs
or
xlat
test
xor
dec
ret
into
ja
loope
out
dec
in
cmc
test
or
pop
jp
xor
and
and
repz
push
lea
(bad)
sub
loopne
dec
xor
inc
pop
ds
(bad)
xchg
jp
sub
daa
jp
pop
mov
mov
pop
and
mov
clc
and
(bad)
or
fadd
popf
enter
fild
mov
loope
sahf
out
xor
(bad)
and
and
std
push
inc
cli
push
pop
mov
pop
into
rcr
adc
pop
lds
sbb
bnd
add
xor
lds
cwde
mov
je
mov
ficom
dec
data16
ficom
cmps
xor
into
mov
dec
adc
push
pusha
or
aad
enter
pop
aas
pop
mov
fdiv
stos
push
xor
scas
pusha
sub
lods
mov
xchg
cs
add
jo
call
inc
xor
stc
inc
in
mov
jo
mov
test
dec
fsubr
shl
cli
mov
ds
push
xor
pop
aad
add
(bad)
sti
pop
into
cmc
or
gs
test
sub
sub
mov
(bad)
jo
mov
mov
loope
jo
iret
jns
cdq
jns
js
jns
popa
movs
and
mov
xchg
imul
stos
lock
xchg
or
xchg
jecxz
out
lahf
inc
xchg
or
add
bswap
cld
jmp
rol
leave
mov
xchg
movs
fnstcw
xchg
enter
outs
ret
(bad)
dec
iret
push
add
shl
test
jl
mov
jle
test
cmp
retf
retf
fwait
std
cmp
pop
xor
(bad)
push
les
sbb
daa
mov
aad
inc
loopne
jg
mov
push
sub
shl
mov
stos
call
mov
bound
xchg
mov
add
ror
or
pop
mov
scas
loop
imul
add
jno
add
mov
je
xchg
fs
mov
movs
mov
cmps
aas
inc
ins
push
mov
(bad)
pop
mov
imul
js
push
cmc
int
cld
ins
scas
imul
scas
add
and
sub
loop
(bad)
repz
and
sub
pop
cs
sub
inc
jno
pop
movs
test
imul
push
movs
cli
xor
out
add
mul
adc
cwde
gs
sbb
mov
xor
repz
add
push
cmps
sbb
xchg
test
test
cli
xchg
stos
je
(bad)
arpl
daa
and
(bad)
cmps
mov
fwait
and
test
loope
pop
or
mov
inc
mov
or
xor
fcomp
test
push
cmp
je
push
cmp
inc
cmp
nop
cmp
adc
js
call
push
or
cwde
shr
enter
(bad)
push
popf
dec
add
mov
mov
es
rol
iret
inc
pop
clc
repnz
cmp
movs
push
cmps
sub
or
neg
push
or
repnz
pop
sub
add
test
leave
mov
aad
mov
js
mov
fcmovnb
cmp
jg
scas
xor
jmp
fsqrt
mov
xchg
daa
push
or
das
jae
jnp
std
bound
bound
xor
dec
and
int3
in
xor
cmps
add
or
or
jp
(bad)
hlt
add
ss
mov
sbb
int
adc
rol
inc
es
push
pop
jmp
rcr
or
scas
mov
mov
mov
jl
xchg
std
cmp
popa
sbb
test
test
lods
popa
pushf
pusha
fnstsw
cld
cmps
outs
push
aad
call
cs
or
fisttp
inc
rcl
daa
or
inc
adc
push
movs
test
fwait
mov
cwde
pop
pop
push
ss
repnz
pusha
or
scas
pop
call
cdq
dec
fmul
dec
test
jp
jnp
jge
rep
shl
movs
sti
pop
push
mov
add
and
(bad)
mov
cmp
ins
add
push
sbb
fisttp
mov
inc
mov
out
push
out
js
imul
rcr
fadd
clc
(bad)
out
inc
mov
adc
sti
jp
jnp
sub
dec
mov
add
ins
(bad)
in
sar
retf
and
call
xchg
repnz
add
ins
cld
test
mov
dec
xchg
aas
pop
lock
movs
mov
jl
jne
(bad)
pop
in
push
adc
(bad)
loope
cli
aas
jnp
(bad)
int3
mov
out
std
xchg
mov
push
bound
daa
mov
push
mov
fidivr
cmc
popf
dec
dec
or
lods
loop
shr
out
(bad)
retf
mov
sub
push
mov
aas
popa
jne
fucomi
xor
(bad)
xor
jno
addr16
pop
outs
ficomp
in
stc
sbb
and
mov
cdq
pop
sti
xor
dec
sbb
in
sti
mov
or
mov
pop
cmps
xor
dec
loope
cmp
in
mov
xor
pop
jb
mov
stc
shl
mov
mov
add
test
mov
mov
xor
mov
xchg
(bad)
popa
ins
lea
jno
and
inc
fnstcw
dec
dec
xchg
push
outs
add
lahf
test
pop
mov
(bad)
sti
push
sbb
cmps
fwait
inc
jne
call
cmp
cmps
xchg
lds
(bad)
ins
psubsw
xor
lods
mov
mov
arpl
inc
es
pushf
lahf
jg
pop
jno
mov
cs
mov
mov
mov
pop
imul
cmp
mov
push
jecxz
shl
adc
inc
(bad)
sbb
mov
add
adc
int3
(bad)
in
sbb
mov
mov
pop
mul
rcl
cmp
xchg
outs
mov
es
jno
add
imul
and
mov
adc
test
mov
jae
loop
shr
add
(bad)
aad
xor
dec
shr
leave
je
scas
nop
mov
cmp
mov
mov
jle
xchg
ret
adc
ins
pop
mov
sbb
jb
pushf
jle
push
mov
icebp
(bad)
out
xchg
in
ds
xor
dec
mov
div
push
lahf
js
push
in
in
push
or
xchg
mov
lock
aas
jg
mov
jbe
xchg
(bad)
sti
shl
mov
mov
shld
pop
pop
mov
inc
push
push
outs
mov
in
inc
jb
and
loopne
pop
rcl
(bad)
sub
sub
and
jb
push
test
imul
adc
cmp
std
and
mov
jl
xor
pop
sub
in
mov
cdq
push
pop
jle
mov
bound
xchg
vmulps
inc
and
inc
xor
mov
adc
pop
push
bnd
imul
adc
pop
mov
int3
(bad)
push
push
pop
loopne
and
leave
dec
jmp
push
or
and
sub
sti
scas
mov
icebp
outs
push
shl
pop
or
jmp
sub
inc
mov
int
sahf
push
fld
cli
in
test
add
cld
mov
xor
test
daa
xlat
fimul
mov
ss
or
sbb
jmp
xchg
inc
pop
jmp
push
xor
sub
aam
aas
push
jmp
inc
mov
into
mov
sbb
mov
addr16
jo
jns
xchg
cdq
(bad)
push
fld
jmp
adc
sbb
pop
sbb
ss
fcmove
cwde
jmp
loope
push
jne
stc
mov
arpl
push
inc
(bad)
jns
test
jmp
xchg
cmp
fs
cwde
aad
mov
iret
push
sti
pop
dec
cmp
es
cmc
std
push
add
dec
mov
movs
out
or
ja
fst
mov
call
out
int
dec
mov
mov
sar
sub
dec
scas
cmp
mov
shr
call
(bad)
mov
mov
jge
pop
mov
mov
xor
mov
leave
fisttp
jno
dec
cmp
iret
pop
data16
xchg
retf
test
jne
ins
and
inc
mov
cmc
sbb
sub
(bad)
scas
std
test
xchg
pop
inc
in
mov
sahf
(bad)
push
aas
test
out
aas
mov
mov
dec
push
pop
xchg
inc
pop
dec
push
xor
in
dec
sub
or
add
icebp
ja
dec
inc
jl
out
sti
rol
and
inc
add
add
sbb
and
mov
(bad)
xchg
(bad)
jp
dec
xlat
int3
ins
mov
and
sar
cld
sub
mov
stos
jge
cmp
cwde
jecxz
movs
nop
add
aas
or
pop
pop
inc
leave
or
leave
shr
jp
push
push
out
dec
ror
std
idiv
loopne
cmp
push
movs
jle
push
(bad)
je
dec
nop
daa
cmc
subps
cmps
xchg
push
adc
stos
cmp
in
mov
xchg
sub
adc
xchg
arpl
push
cmp
icebp
adc
mov
sbb
inc
inc
xor
cmp
add
inc
mov
loope
sbb
scas
mov
or
ds
cmp
nop
movs
arpl
cmc
xchg
dec
sbb
outs
adc
ins
stos
mov
fstp
clc
call
adc
test
(bad)
fcomip
mov
aam
repnz
add
xor
fwait
mov
ret
lds
and
pop
stos
xor
add
pushf
leave
sbb
ficom
divps
std
sbb
dec
mov
loope
jmp
dec
clc
cmp
(bad)
in
pusha
je
sbb
icebp
clc
mov
dec
pop
add
inc
jmp
cs
push
mov
inc
or
pusha
ja
add
imul
sbb
xor
ss
inc
push
inc
sar
stos
ds
mov
in
std
nop
test
pop
sbb
push
mov
aam
mov
mov
push
jl
jmp
ret
hlt
xor
fstp
scas
mov
mov
lods
leave
lea
dec
mov
repnz
push
arpl
ja
test
dec
sbb
mov
repnz
adc
jbe
mov
pop
loope
gs
pop
icebp
inc
jb
test
ds
(bad)
or
jo
ror
mov
pop
nop
jo
(bad)
adc
test
popa
dec
(bad)
into
out
add
int
pop
mov
fcmovbe
in
loopne
sbb
ret
and
fdivrp
dec
add
jle
mov
es
enter
xchg
sub
clc
jmp
pushf
mov
push
bound
and
cmp
retf
ret
dec
rcr
in
and
cwde
xor
sub
shl
cmp
xchg
xor
xchg
movs
mov
sub
xchg
push
fdiv
fcmovbe
ror
fadd
clc
cwde
dec
call
jmp
and
fcomp
pop
nop
(bad)
lods
pop
lahf
sbb
daa
fwait
adc
xor
xchg
sbb
and
icebp
pop
cwde
loop
mov
jp
cld
push
nop
ficomp
pop
xchg
push
mov
dec
sbb
hlt
push
mov
scas
pop
add
dec
bnd
leave
ss
inc
data16
cld
mov
sub
push
iret
dec
cli
leave
popf
fimul
xchg
std
je
mov
gs
fmul
movs
pop
add
test
cmp
sbb
or
data16
adc
int
adc
shl
cmp
test
ins
and
jne
pop
and
sahf
inc
dec
scas
shl
inc
mov
ds
hlt
fwait
mov
cwde
movs
fisttp
adc
jb
sub
push
ret
pop
retf
and
and
(bad)
gs
sub
sbb
cs
je
mov
pop
aad
sub
repz
outs
mov
repnz
call
data16
dec
xchg
pop
in
out
movs
sahf
adc
jmp
or
and
mov
cmp
mov
jl
push
sbb
jae
sbb
das
or
pop
push
cmp
dec
sar
test
sar
cld
or
addr16
xchg
sub
loope
enter
jle
movs
xchg
scas
mov
push
jmp
inc
(bad)
in
push
push
lea
and
retf
pop
repz
lea
into
ins
cmp
(bad)
mov
scas
sub
pop
push
jmp
or
ja
ins
dec
mov
into
movs
pop
jle
push
pop
xchg
jns
jmp
cmps
pusha
mov
xor
test
ret
je
dec
lock
inc
clc
nop
jmp
shl
popf
mov
or
dec
push
mov
xor
lar
fstp
ins
cmc
or
and
mov
into
in
cmps
push
fdivrp
nop
movs
in
stos
jne
sbb
pop
xor
xchg
mov
mov
push
mov
fimul
enter
mov
mov
movs
movs
and
xor
fnstcw
mov
and
xor
fistp
xchg
es
cdq
test
dec
push
push
cmp
pop
loopne
xor
shl
and
icebp
pop
ds
mov
dec
xchg
xchg
dec
xchg
out
dec
push
push
xor
add
mov
ins
fdiv
ja
(bad)
div
add
jae
and
push
int
cmp
movs
mov
push
adc
popa
mov
mov
aas
ds
daa
call
mov
test
movs
or
xchg
(bad)
mov
add
jle
loope
xchg
test
sahf
fdivp
adc
inc
sahf
mov
call
les
clc
mov
neg
dec
or
mov
movs
outs
cmp
xor
outs
xor
fistp
test
push
mov
scas
dec
ins
dec
lods
imul
jle
test
fld
stc
jp
push
mov
(bad)
pop
sbb
jnp
fs
in
jnp
loopne
mov
out
sub
mov
arpl
fs
pop
xchg
sub
jne
xor
ja
xor
or
adc
nop
push
mov
xchg
inc
xor
xor
ds
xor
pop
cmp
dec
lods
cmp
(bad)
cli
std
ficomp
mov
adc
push
aaa
dec
mov
mov
dec
pushf
xor
mov
mov
popa
jp
or
aad
jb
mov
sbb
test
repz
mov
mov
fidivr
mov
pop
jno
loopne
cmp
xchg
cmp
in
cdq
lods
pop
mov
(bad)
add
and
xchg
xor
ds
mov
(bad)
sbb
xchg
or
xor
and
inc
pop
push
jne
and
sub
xchg
and
lds
add
cmp
lock
sub
ret
jecxz
mov
mov
iret
cwde
adc
sar
mov
and
mov
pinsrw
ins
scas
cmp
jl
js
leave
push
test
(bad)
cmp
mov
mov
aad
mov
sbb
mov
ffree
and
ss
scas
dec
imul
or
lock
mov
idiv
call
in
jne
jnp
xchg
scas
pop
dec
rcr
jg
dec
cli
clc
sub
mov
test
jnp
cmp
dec
jb
sub
and
(bad)
jmp
int
jmp
adc
push
call
mov
push
pop
inc
(bad)
cmp
push
push
fs
loope
aam
les
pop
jmp
cmps
sbb
pop
inc
xchg
push
jmp
movs
mov
pop
imul
jb
mov
sbb
add
dec
adc
jecxz
cmps
int
fcom
adc
in
mov
xchg
mov
jns
push
jbe
mov
mov
movs
dec
add
aas
cdq
xchg
and
xor
inc
or
fiadd
(bad)
dec
adc
rcl
xchg
test
js
mov
imul
pushf
sub
int
inc
loop
outs
out
test
push
xchg
stos
lods
cmps
adc
stos
sbb
(bad)
adc
cmc
fadd
ds
in
add
inc
sar
leave
rcl
push
xor
mulps
loop
inc
fadd
inc
pop
cmps
jae
mov
in
or
retf
mov
out
xor
push
lods
mov
xchg
cmps
aaa
or
pushf
mov
cmc
mov
rcl
hlt
fsubp
cmp
xchg
xor
fiadd
sub
and
add
loopne
and
jbe
xor
lock
fsubr
push
add
leave
test
(bad)
data16
into
(bad)
mov
cmc
pushf
mov
in
jns
aaa
jge
sbb
xor
arpl
hlt
jmp
mov
fisub
stos
not
cli
ret
inc
dec
and
mov
or
mov
pop
push
sahf
sub
and
arpl
cmp
xor
jecxz
or
addr16
rcl
xor
mov
sub
pop
pop
push
fwait
mov
shr
inc
push
js
add
mov
dec
push
mov
retf
and
mov
add
jo
retf
lea
jae
pop
sahf
push
imul
in
jecxz
out
add
dec
es
mov
int3
adc
jle
fbld
jno
je
sbb
lea
sbb
lock
cdq
jae
repnz
mov
stos
sub
into
cmp
jb
xor
adc
add
data16
std
push
(bad)
jae
sub
jecxz
pop
xor
pop
adc
(bad)
jne
xor
push
and
in
das
test
ret
ret
lods
mov
repnz
and
sbb
test
push
std
imul
jnp
pop
jnp
sbb
fst
pop
jl
or
push
mov
mov
jmp
popa
invd
mov
adc
std
scas
mov
or
aam
aaa
jle
inc
cmp
in
les
jbe
out
push
xor
mov
mov
dec
jmp
leave
and
addr16
cmp
pushf
mov
pop
adc
cli
(bad)
fild
jmp
sub
mov
sub
sbb
add
xchg
sbb
dec
stos
ins
es
imul
adc
dec
pop
es
mov
sar
js
push
rol
dec
das
inc
and
adc
and
sub
imul
test
loop
push
fs
xchg
push
mov
pop
rcl
mov
fwait
gs
xchg
aaa
mov
aam
repz
push
adc
(bad)
rol
mov
das
xchg
out
jno
mov
scas
ds
dec
or
jge
cmp
movs
push
inc
xchg
or
xchg
push
xchg
sbb
mov
xchg
dec
mov
xor
out
or
rcr
mov
cli
outs
ficomp
mov
add
loopne
xchg
cmove
mov
xchg
xchg
scas
xor
int
sbb
mov
popa
pop
sbb
push
imul
mov
cli
mov
mov
fmul
xchg
add
cli
jne
shl
cmp
or
push
movs
jg
xor
inc
inc
imul
not
mov
cmp
ds
add
pop
xor
sub
bound
aam
not
iret
fld
hlt
ins
jl
pusha
push
and
into
mov
icebp
test
shl
mov
mov
jge
pop
cmp
lods
pop
mov
shr
fdiv
sbb
xchg
fcomp
inc
cli
sbb
mov
or
xchg
mul
test
pop
cdq
and
xchg
xor
test
(bad)
xchg
sbb
pushf
mov
stos
mov
mov
in
cmps
ficom
sub
popa
mov
call
xor
jp
or
or
test
adc
cmc
mov
ja
push
dec
in
ret
xchg
stos
dec
sub
ds
and
jge
rol
cwde
ret
add
pop
mov
popf
in
pop
leave
out
add
stos
cmp
test
shr
push
les
adc
inc
xchg
iret
add
repz
xor
in
mov
inc
mov
adc
add
in
pop
mov
xor
or
push
inc
lods
mov
cmp
dec
ror
sar
jae
inc
nop
mov
loopne
mov
clc
ins
cmp
in
arpl
leave
xchg
sahf
outs
cmc
vandps
popa
je
sbb
inc
fs
push
xor
ins
pop
retf
nop
mov
out
fadd
mov
mov
iret
icebp
ds
push
mov
mov
or
out
jle
adc
sub
pop
fs
int3
in
mov
pop
cwde
xor
enter
int
sub
arpl
bound
mov
iret
push
jnp
inc
cmp
daa
cmovno
(bad)
mov
in
sub
test
and
push
aas
out
or
imul
repnz
mov
xrelease
add
movs
jno
outs
push
push
call
inc
inc
ds
dec
inc
in
movs
add
pop
lahf
or
jmp
inc
xchg
mov
cmps
cmp
jae
adc
aas
xchg
ret
inc
fidivr
or
push
repz
pop
inc
clc
or
mov
xchg
mov
push
push
dec
pop
sub
jb
mov
jns
adc
into
mov
mov
retf
or
xchg
rcr
sub
and
fsubr
push
mov
sbb
dec
cmp
mov
fnstcw
lea
test
push
xchg
aaa
scas
clc
adc
sbb
mov
stc
xor
ror
popf
adc
add
aam
jge
add
in
aad
inc
dec
mov
or
mov
imul
cdq
mov
sbb
cli
mov
je
adc
popa
adc
setl
repz
add
call
adc
xchg
mov
fwait
push
mov
call
or
jge
fpatan
mov
gs
or
xchg
xchg
and
mov
mov
push
mov
(bad)
std
inc
clc
mov
imul
icebp
addr16
ins
pop
jmp
test
dec
sub
fcomp
in
int
mov
push
adc
cmp
mov
aam
sbb
loop
xchg
(bad)
test
cdq
mov
and
xchg
out
das
xor
popa
pop
dec
xchg
rol
jb
in
cmp
mov
fadd
lods
arpl
sti
into
(bad)
fwait
mov
add
les
mov
add
lock
cmp
mov
add
(bad)
repz
loop
mov
mov
sbb
mov
adc
iret
mov
jecxz
or
add
jnp
sbb
add
jle
(bad)
jecxz
inc
arpl
dec
int3
imul
inc
test
je
pop
jp
mov
sbb
shl
inc
cmp
movsx
test
and
(bad)
and
add
dec
ja
and
repz
arpl
(bad)
cmps
in
mov
sbb
retf
loopne
clc
clc
ja
mov
pop
popa
sbb
inc
cmp
out
mov
cmp
mov
stc
sub
adc
or
jno
lea
inc
and
sbb
pop
pusha
or
dec
mov
dec
push
or
cs
fcomip
lahf
mov
js
gs
je
xchg
cmps
ds
mov
or
jp
aam
(bad)
push
mov
jl
mov
pushf
mov
sbb
aam
mov
dec
or
xor
fs
adc
test
fiadd
xor
add
inc
adc
pop
fdivrp
lods
pop
test
dec
pop
test
mov
ds
sub
xchg
pop
dec
add
es
loop
add
or
outs
test
push
int
fs
push
inc
sbb
fist
push
and
test
mov
icebp
and
jl
pop
les
jb
ret
push
cmp
fcomp
and
fs
int
ret
xor
push
jbe
mov
das
xor
fimul
fldenv
cmc
jp
inc
pop
mov
push
sub
std
xor
sub
push
and
aas
sub
cmp
int
cmp
sbb
cmp
inc
sub
loop
test
data16
jbe
jb
and
out
ret
xchg
and
std
push
mov
jo
inc
fs
mov
stc
sub
xchg
test
pop
pop
cmp
mov
xor
repnz
mov
cmp
or
ds
mov
pop
mov
xchg
out
arpl
dec
mov
pop
cs
ja
dec
fs
add
lods
ins
scas
mov
sbb
add
jmp
xchg
mov
data16
dec
mov
and
adc
rcr
shl
add
and
(bad)
jb
xchg
retf
cmps
push
jne
or
pop
int
push
dec
je
pop
mov
xchg
aaa
sbb
mov
sub
xlat
cld
pop
pop
jo
lahf
add
adc
gs
push
pop
mov
into
test
xchg
dec
call
mov
xchg
fistp
pop
pushf
aam
sahf
fimul
inc
adc
sub
shl
inc
dec
fs
jecxz
jae
stos
lea
out
lahf
push
dec
push
ja
xor
push
outs
aas
leave
or
mov
test
xor
mov
scas
adc
inc
pop
imul
mov
xchg
fisttp
sbb
push
jno
into
nop
fstp
mov
push
add
aas
fiadd
neg
dec
sub
jg
js
push
sar
xor
sub
or
retf
fdiv
mov
push
in
mov
xor
pop
mov
daa
je
test
into
mov
push
mov
mov
test
sbb
xchg
ins
mov
or
lods
repz
and
mov
daa
xor
sar
(bad)
clc
cmps
sub
retf
push
sub
outs
jb
repz
cmp
push
sbb
jge
xchg
hlt
hlt
push
imul
sub
jecxz
jb
adc
sbb
test
dec
data16
mov
aam
loop
push
sub
sar
retf
dec
xor
push
frstor
fs
sbb
std
sbb
iret
lock
xchg
fisttp
cmp
aas
cmp
int3
into
mov
rcl
push
inc
inc
mov
fild
mov
into
cs
out
and
fwait
mov
(bad)
jnp
and
and
in
cmps
(bad)
mov
dec
push
pop
stos
cmp
js
cmp
lds
movs
sbb
xchg
jnp
mov
pop
in
sub
arpl
in
gs
fiadd
inc
dec
add
sbb
or
scas
jns
jge
or
imul
int
cmp
daa
cmps
sub
mov
popf
cmp
sti
mov
pop
scas
(bad)
jns
mov
js
mov
jp
mov
retf
stc
rcl
es
add
or
nop
or
xchg
mov
sbb
jl
adc
fdivp
in
adc
pop
std
rcr
in
fst
mov
movs
inc
pushf
xor
out
iret
loope
sti
inc
sub
inc
ja
pop
mov
adc
push
ffree
adc
out
xchg
adc
adc
sub
adc
stc
test
pushf
xchg
xchg
pop
and
in
popa
jmp
push
and
jb
xchg
fwait
pushf
das
ror
je
pop
call
cmp
jae
mov
or
(bad)
das
jo
dec
xchg
mov
push
(bad)
lods
pop
sbb
in
retf
jecxz
sub
xor
call
xchg
movs
or
sub
cmps
adc
or
outs
xor
dec
rol
push
xchg
mov
fst
ins
gs
int3
pusha
imul
jg
xor
mov
sti
jecxz
jns
retf
xor
pop
dec
lahf
cmp
js
or
xchg
mov
push
scas
mov
mov
movs
sub
jecxz
out
shr
or
sub
xchg
(bad)
int3
mov
mov
xchg
add
xor
jle
mov
xor
mov
and
or
xor
repz
xor
popf
mov
push
imul
cmp
mov
scas
imul
push
sub
(bad)
jmp
out
fidivr
fld
or
mov
cdq
jle
xchg
jae
fwait
out
push
xchg
adc
scas
pop
lods
xchg
fimul
jmp
push
push
in
out
ret
retf
pop
adc
out
ret
xchg
dec
add
scas
ins
call
repnz
add
aam
les
sar
movs
mov
int3
push
daa
cmps
popa
jnp
pusha
add
mov
nop
pop
jg
enter
xlat
sub
push
jle
mov
adc
push
test
enter
sub
loopne
mov
test
stos
repnz
cmp
mov
jns
xchg
repz
icebp
mov
retf
and
(bad)
ja
out
icebp
mov
loop
lods
sahf
sub
dec
dec
pop
push
test
inc
pushf
aas
jp
mov
sbb
pop
adc
mov
mov
inc
add
sbb
mov
scas
test
inc
mov
or
mov
out
cmps
shr
sbb
add
into
mov
loop
hlt
aad
jecxz
shl
pop
ret
cdq
xor
test
stos
(bad)
jmp
lock
sub
popf
out
or
sub
cwde
cmp
mov
lock
sub
pop
push
mov
xor
mov
aaa
xor
push
dec
sub
ins
fldcw
icebp
retf
lods
inc
and
xchg
add
jb
dec
int3
leave
or
pop
pop
dec
sub
mov
scas
inc
mov
cmp
cmp
xchg
sub
ret
cmps
daa
stos
cmc
mov
pop
clc
cdq
and
push
outs
out
mov
pop
lea
sbb
mov
enter
mov
stos
adc
pop
xor
jmp
push
mov
jp
ja
jnp
dec
pop
cdq
xor
inc
enter
adc
lock
in
lock
or
dec
stos
mov
cmp
in
test
lock
movs
into
and
push
repnz
jp
push
test
push
imul
push
add
add
push
mov
push
mov
cld
int3
sbb
sub
rol
push
xchg
retf
adc
jmp
into
sub
push
lods
push
rcl
shl
dec
out
outs
dec
aas
js
aaa
cmp
movs
and
ret
xchg
push
push
pusha
mov
mov
mov
scas
push
sub
mov
js
mov
cld
fld
jo
stc
cld
cmp
shr
pusha
test
mov
imul
sbb
jecxz
cmc
adc
or
scas
enter
outs
mov
enter
ins
jle
retf
mov
mov
xor
jp
sub
outs
and
icebp
jae
cmp
arpl
aam
(bad)
setbe
xor
jl
lods
cli
ja
cmp
dec
mov
inc
movs
jno
pushf
push
or
lds
cmp
jno
lds
pushf
jg
ss
mov
push
add
shl
pushf
test
inc
call
cmp
fmul
enter
ins
jmp
ins
jb
(bad)
cs
and
outs
jae
arpl
adc
(bad)
mov
add
sub
mov
mov
(bad)
out
fdivr
leave
test
in
arpl
lods
mov
retf
pop
mov
inc
shl
push
cmp
pushf
cmp
popa
sbb
movs
stos
shl
leave
nop
mov
jle
shl
cwde
inc
sbb
cli
xchg
push
jge
movs
imul
push
xor
loope
ds
sub
jbe
test
in
stc
stos
aas
mov
add
or
scas
(bad)
not
push
mov
call
pop
pop
xchg
jmp
push
cmc
mov
fidiv
fstp
std
fbld
imul
mov
hlt
push
jl
cwde
cmp
push
mov
shr
icebp
mov
mov
fs
push
out
mov
loope
adc
jge
out
in
mov
push
sub
sub
and
adc
jge
mov
xchg
in
out
jo
fldln2
sbb
ret
fimul
jg
pusha
push
jmp
test
cld
(bad)
inc
add
mov
adc
push
(bad)
and
hlt
in
pop
add
cmp
shr
(bad)
into
sbb
nop
dec
fsub
hlt
add
or
add
xchg
not
popa
vmovhps
xchg
dec
das
xchg
mov
shl
aaa
stos
sub
push
push
cmps
in
bound
jnp
jae
leave
outs
lahf
inc
cmps
movs
adc
call
inc
add
push
jg
add
ja
idiv
ret
jne
pushaw
aaa
jecxz
popa
mov
retf
push
and
test
jmp
xchg
rcl
adc
jmp
push
pop
mov
imul
dec
or
sub
mov
stos
adc
cmp
push
pop
cdq
cmp
pop
xor
(bad)
enter
jnp
repz
xchg
lods
inc
ret
fldenv
jecxz
mov
aaa
mov
stc
lahf
sub
jmp
ret
push
ss
xchg
mov
je
add
and
(bad)
call
mov
shr
movs
xchg
int
sbb
mov
push
call
fs
jo
bnd
mov
cmp
dec
mov
loop
in
daa
retf
pop
adc
jmp
ret
enter
call
pop
push
imul
pop
les
jno
xor
out
ins
dec
fild
sti
push
imul
fcmovnb
mov
mov
mov
call
ins
aad
add
sbb
adc
push
pop
mov
inc
sbb
inc
sub
loop
fiadd
(bad)
xor
xor
inc
jg
out
call
iret
mov
inc
push
je
mov
mov
push
dec
rol
test
shr
push
out
mov
adc
mov
sahf
inc
lods
ins
cmp
(bad)
mov
jb
or
add
mov
fnstenv
das
lock
in
push
jl
cmps
add
loop
ja
jb
fsubrp
jl
arpl
clc
dec
lds
sub
test
or
xchg
mov
clc
xlat
mov
nop
xor
retf
adc
inc
cmp
pop
cdq
push
in
ss
xchg
pop
retf
mov
in
mov
stos
pop
inc
aaa
stc
pop
sub
jns
add
repnz
mov
arpl
lock
xor
mov
movs
bound
adc
xor
sbb
cmps
lock
xchg
mov
jb
xchg
mov
shufps
jmp
call
sbb
sub
add
(bad)
dec
add
inc
xor
mov
enter
call
movs
stos
jmp
repz
jne
in
or
cwde
sbb
lock
add
scas
stos
pop
mov
xchg
loope
mov
pop
xchg
arpl
aad
push
loopne
jg
fidiv
push
or
imul
imul
das
ss
fiadd
dec
test
int3
push
inc
pop
inc
stc
adc
jmp
leave
stc
adc
sub
dec
inc
sahf
fcmovnbe
cmp
inc
clc
jbe
jne
jne
mov
call
loope
sbb
test
daa
fadd
dec
or
outs
sbb
out
lods
adc
cs
(bad)
in
push
call
je
fild
xlat
dec
out
das
in
push
mov
xlat
xchg
mov
mov
dec
mov
pop
imul
das
repnz
rcl
int
add
mov
cld
dec
outs
pop
and
xchg
pusha
dec
mov
jge
mov
mov
dec
(bad)
fdivr
adc
shr
test
mov
imul
mov
mov
pop
into
cmp
xchg
xlat
mov
pop
popa
imul
pop
scas
xchg
jecxz
retf
add
inc
mov
ja
aaa
les
pop
in
stc
xor
pinsrw
ins
push
aas
loopne
inc
jbe
stc
int3
test
mov
mov
stos
mov
sub
pop
cmp
ins
in
push
cld
pop
dec
es
cmp
outs
sub
sar
and
(bad)
mov
cmp
mov
nop
and
(bad)
push
loope
push
aas
sbb
lods
dec
xchg
push
add
fs
es
push
pop
fidivr
sbb
jnp
cmp
push
test
push
inc
fsubr
add
xor
push
jns
mov
add
retf
mov
out
test
mov
xchg
mov
js
xor
dec
rcr
and
call
nop
mov
stos
data16
pusha
dec
mov
mov
sub
pop
das
pop
in
pushf
ins
xchg
cwde
out
xor
cmc
dec
dec
adc
and
inc
lea
scas
dec
int
push
sbb
dec
out
leave
imul
test
push
xchg
jns
add
ins
cmp
xchg
in
sbb
int3
xchg
push
inc
jno
out
aad
dec
mov
dec
jb
pop
or
pop
inc
pop
add
xchg
int
cli
pop
pop
xchg
sbb
retf
mov
sar
iret
sub
add
fst
and
xor
xor
jecxz
dec
dec
es
and
push
in
or
sbb
jmp
aas
popf
inc
add
out
mov
and
aas
push
std
adc
fcmovnbe
movs
adc
adc
mov
sti
test
push
push
jecxz
xchg
(bad)
push
cmp
pop
scas
or
cmc
mov
pop
leave
jmp
push
add
sub
nop
iret
cmp
xor
das
(bad)
xchg
mov
inc
jmp
xchg
out
pop
dec
loopne
cmps
jp
mov
mov
loopne
stos
mov
push
jmp
and
mov
push
hlt
mov
je
ins
dec
addr16
dec
mov
sbb
inc
ror
repz
jnp
fdivrp
fs
dec
cmps
in
mov
inc
push
call
xchg
popf
mov
nop
sub
repnz
je
fwait
adc
adc
jb
movs
cmp
lods
or
lods
rcr
cmp
xchg
fmul
in
bswap
or
mov
mov
cmp
outs
arpl
mov
mov
jmp
mov
mov
arpl
jge
into
ds
popa
xchg
stos
loop
popf
hlt
xlat
div
in
jo
or
ins
dec
mov
pop
xor
and
pusha
and
test
es
stc
sbb
mov
lods
lock
sub
mov
fwait
sbb
aad
jle
stos
mov
inc
sub
add
mov
adc
icebp
mov
add
retf
pop
pop
call
loopne
adc
mov
push
jmp
outs
dec
xchg
mov
dec
test
(bad)
jnp
and
jns
sbb
lock
lock
pop
jnp
pushf
jns
(bad)
jo
xlat
call
ja
mov
pop
(bad)
fimul
pop
cli
push
sub
leave
mov
mov
cli
jge
inc
add
cmp
mov
xchg
push
imul
add
scas
inc
pop
inc
loope
xlat
pop
int3
inc
dec
cmps
aam
dec
mov
mov
mov
retf
pop
daa
pop
lahf
and
add
movs
and
xor
cs
adc
mov
xchg
retf
ja
sar
loope
jp
mov
leave
xor
pushf
(bad)
push
mov
jmp
std
mov
jp
les
mov
ds
and
mov
jae
dec
sar
cmp
add
mov
sub
xor
int3
mov
pusha
ins
jle
and
aad
jecxz
das
lea
xchg
mov
pushf
mov
into
daa
enter
outs
mov
ins
test
int3
ins
dec
and
int3
in
and
jbe
ja
in
mov
mov
shr
aam
cs
ret
aad
push
push
ret
sub
dec
hlt
xchg
or
mov
icebp
xor
or
gs
and
sbb
mov
fisubr
(bad)
push
cmp
cmp
sbb
ror
in
fs
push
xchg
sbb
add
xor
dec
or
stc
sub
mov
aad
bound
cmc
lods
xlat
adc
std
push
sbb
add
push
out
fnop
jle
in
xchg
mov
and
mov
retf
inc
and
rcr
ins
mov
and
mov
icebp
mov
(bad)
sbb
fidiv
adc
mov
mov
and
fisttp
jge
das
sub
inc
test
arpl
iret
dec
out
imul
movs
adc
(bad)
test
stos
cdq
mov
cdq
pop
jecxz
push
arpl
or
out
js
jp
adc
fnstenv
stc
popf
push
mov
add
lock
jnp
cmp
fwait
popf
push
and
cmps
inc
push
inc
push
push
push
cmp
sub
sbb
in
jl
cmc
call
sbb
adc
cli
aad
mov
loope
bound
add
xchg
pop
dec
mov
dec
in
jmp
mov
fmul
sub
sbb
xchg
mov
xor
cmc
push
out
inc
pop
push
sbb
fisub
lods
leave
mov
pusha
fcomp
pop
std
aaa
adc
int3
adc
(bad)
push
xchg
adc
cld
jno
cld
adc
jne
adc
mov
movs
cmp
(bad)
jbe
dec
mov
xlat
nop
push
test
adc
push
mov
inc
pop
cmp
inc
jnp
pop
adc
cmp
jp
mov
cmps
pop
and
dec
dec
add
neg
aas
pop
bound
push
dec
mul
sbb
mov
es
mov
int3
jae
in
jo
push
adc
jo
dec
adc
inc
lock
mov
out
or
ins
repz
rcr
test
sub
in
dec
addr16
xchg
(bad)
and
sub
jmp
cs
sub
sub
inc
sub
jecxz
test
data16
inc
pop
adc
and
aam
xlat
and
push
sbb
sub
pop
(bad)
mov
and
(bad)
fimul
je
aaa
daa
jl
rol
mov
sar
js
jmp
repnz
jge
push
test
and
add
(bad)
jmp
or
ret
inc
push
aam
xchg
fs
int
pop
pusha
stc
jp
sbb
shr
add
dec
cmps
movs
cmp
adc
repz
hlt
dec
mov
pushf
loopne
xchg
popa
gs
test
fild
cmp
leave
icebp
jge
mov
(bad)
xchg
xchg
cs
cmp
imul
dec
add
mov
dec
not
pop
or
and
jno
cmps
and
jbe
jo
jle
or
mov
xlat
mov
xchg
in
dec
xchg
jnp
rcr
add
inc
sub
cmps
and
sub
mov
ror
mov
mov
sub
ret
dec
cmp
(bad)
hlt
sub
ss
retf
rol
ror
push
inc
xchg
sahf
mov
jns
jle
loopne
int
imul
sbb
call
pop
daa
sub
scas
or
pop
xchg
dec
mov
test
inc
jnp
add
and
std
pusha
in
mov
shl
jb
cmp
xor
add
(bad)
(bad)
push
enter
cmp
loope
push
inc
popa
or
and
sbb
enter
jmp
xor
push
cmp
mov
fcom
stos
(bad)
rol
lahf
jnp
or
cmps
mov
ret
dec
mov
loop
aad
push
mov
in
push
pop
inc
xor
scas
daa
icebp
cli
jl
adc
jno
outs
add
add
mov
adc
mov
pop
mov
sub
call
out
ret
mov
push
inc
adc
aam
add
aaa
lods
ror
or
fwait
je
sbb
xchg
je
arpl
cdq
mov
sub
neg
fs
sbb
test
mov
aaa
add
push
call
retf
inc
mov
hlt
js
ss
xchg
sar
call
pop
sar
mov
pop
cmc
stos
cmp
imul
or
(bad)
and
ins
gs
push
jp
test
pushf
test
and
push
and
sti
or
ret
in
push
push
push
dec
sub
in
(bad)
aad
inc
iret
out
xor
call
push
add
adc
dec
mov
inc
adc
sub
and
mov
pop
data16
pop
data16
jns
call
adc
out
outs
les
dec
pop
into
out
gs
mov
aaa
mov
in
jle
add
in
jecxz
mov
xor
ret
pop
cld
(bad)
add
jnp
repnz
xor
loopne
or
push
inc
jp
scas
cwde
mov
xchg
xchg
fnstcw
push
fwait
jne
pop
mov
and
shr
jl
and
xor
and
dec
mov
xlat
jns
pop
pop
jo
dec
lock
xchg
add
xchg
(bad)
mov
mov
lahf
xchg
push
sbb
pop
pop
and
std
jle
cmps
into
in
jle
test
mov
mov
idiv
out
inc
imul
imul
adc
and
mov
mov
mov
cwde
sbb
retf
xor
mov
icebp
mov
popf
or
cmp
push
adc
sub
push
xchg
dec
xchg
inc
lea
and
neg
lahf
sbb
enter
xlat
dec
pop
pushf
mov
lock
inc
adc
lea
jg
jo
push
push
pop
jle
loopne
daa
add
xchg
iret
add
push
nop
js
repnz
and
xchg
je
icebp
or
mov
jge
jo
pop
mov
shl
int3
jnp
dec
push
gs
pushf
test
add
pushf
jg
add
pop
mov
cld
inc
pop
mov
mov
jmp
(bad)
fwait
out
pop
clc
fs
sub
sub
mov
push
dec
cld
and
dec
jg
add
outs
call
movs
push
(bad)
xchg
sti
ss
fst
not
sar
cmovnp
(bad)
inc
xchg
xor
in
jbe
mov
retf
movs
push
repz
fsub
xlat
adc
sbb
add
outs
jmp
(bad)
je
lds
call
lods
jmp
inc
xchg
cwde
push
stc
sbb
sbb
lods
out
xor
jno
vpsllq
popf
push
mov
pop
cmps
xchg
aas
inc
div
call
or
mov
push
dec
sbb
test
movs
inc
in
sti
(bad)
retf
dec
js
lea
mov
mov
pop
icebp
inc
inc
outs
push
pushf
dec
jmp
shl
or
pop
adc
ja
rcl
adc
xor
jnp
inc
nop
lods
test
(bad)
mov
cmp
push
pop
mov
sub
ss
test
bnd
(bad)
jno
mov
sti
cmp
or
pop
in
push
fld
idiv
sbb
jmp
xor
adc
hlt
sub
mov
jbe
leave
jle
or
repnz
out
mov
fimul
jns
jae
mov
adc
xchg
fbstp
cmp
dec
xor
cmp
add
fistp
cmp
test
es
aas
mov
pop
mov
push
xor
retf
xchg
or
jns
mov
ins
dec
adc
sti
scas
mov
mov
inc
xor
test
pop
dec
push
fstp
inc
out
jp
loop
ins
cld
arpl
in
loope
jecxz
ss
iret
cmp
add
xor
xor
neg
adc
mov
inc
jle
mov
mov
push
sub
ins
(bad)
in
or
dec
loop
jmp
imul
xor
sub
loop
in
xchg
ins
hlt
pop
sub
loop
iret
icebp
jo
mov
adc
fidivr
mov
sub
lahf
dec
shl
in
push
or
mov
xchg
test
add
push
fcomp
imul
or
ret
aam
cmps
shr
xchg
or
fidivr
stc
in
adc
test
inc
cmps
fbld
jmp
mov
cmp
fidiv
iret
jno
xor
pop
xor
repz
popa
imul
lds
jb
and
out
jo
and
arpl
and
sbb
cs
mov
mov
sub
pop
out
outs
mov
adc
xor
xlat
jecxz
mov
cmp
dec
jmp
xchg
adc
cmp
pop
bound
xor
jne
pop
enter
cmps
pop
or
icebp
mov
ret
sbb
ret
(bad)
dec
jecxz
cmps
dec
fcomip
mov
mov
in
and
jmp
repz
test
mov
cld
aam
(bad)
cli
or
inc
adc
mov
repnz
mov
data16
js
inc
mov
pop
inc
sub
mov
push
inc
jl
sbb
ins
sbb
mov
sbb
mov
pop
jg
repnz
jecxz
aam
std
dec
mov
mov
dec
scas
push
or
fwait
push
call
lods
add
add
push
inc
inc
pushf
lods
inc
div
out
rol
jno
js
jne
inc
xchg
mul
xor
fs
pop
sub
test
retf
dec
stc
leave
ins
iret
stos
fwait
push
add
xlat
out
sub
jmp
mov
xchg
loop
jo
jo
out
sub
pop
mov
push
add
adc
xor
fwait
aas
fwait
xor
pop
sub
cmp
push
int3
lods
icebp
fcom
jcxz
cld
fist
dec
loopne
sub
shr
popf
(bad)
fst
sti
xchg
xchg
or
mov
ja
test
movs
sub
lar
mov
lods
test
int
sbb
sbb
imul
pop
sbb
cdq
cmc
shr
and
out
pop
iret
jo
fst
clc
ja
cmp
aas
mov
sahf
out
loopne
dec
fidiv
das
nop
mov
daa
mov
loop
inc
jmp
and
xchg
nop
fsubr
pusha
mov
push
push
push
fisubr
xor
inc
sbb
out
call
jmp
xor
jnp
inc
loop
stos
jae
adc
dec
jmp
sbb
cmp
mov
es
cdq
adc
bound
fdiv
cmp
fld
lahf
adc
jmp
fwait
add
jmp
jmp
jg
push
pop
cmp
aas
pop
sub
jnp
call
loop
mov
and
pop
or
hlt
mov
mov
add
or
retf
pop
or
jl
cmp
xchg
pusha
sbb
out
mov
test
pop
push
repnz
or
push
xchg
or
inc
or
movs
cs
es
cmp
(bad)
sbb
jmp
mov
push
and
mov
dec
pop
shr
popf
fs
cmp
cld
stos
or
nop
in
push
xchg
cwde
out
aam
inc
int
mov
nop
push
gs
repnz
push
adc
int3
iret
ret
ret
fmul
pop
daa
push
fnstcw
sbb
adc
fild
xlat
dec
cli
retf
push
daa
push
adc
jnp
mov
jle
outs
enter
add
cmp
push
mov
add
ins
cmp
in
adc
dec
xchg
dec
sbb
jmp
mov
cwde
mov
int
add
mov
pop
cmp
add
adc
sbb
adc
fmul
(bad)
enter
inc
jo
aaa
add
cmp
fwait
push
xchg
push
mov
adc
push
sub
sub
sbb
loop
mov
sub
cmps
js
daa
int3
out
xchg
enter
retf
mov
cmp
mov
and
fmul
shl
dec
push
mov
adc
popa
dec
cmp
mov
ret
leave
call
test
inc
jo
ret
sub
adc
ins
rol
and
xchg
leave
(bad)
dec
or
pop
pop
retf
or
sub
fimul
add
xchg
outs
xchg
fdivr
es
clc
gs
mov
gs
push
and
mov
dec
out
cmp
and
outs
ds
not
loopne
shl
xor
mov
js
gs
and
sbb
adc
add
xor
pop
inc
jp
imul
pop
int
jo
addr16
cld
push
xchg
sub
enter
lea
mov
sub
push
enter
lods
movs
loopne
mov
cld
pop
mov
mov
mov
fs
sub
out
jns
hlt
jbe
imul
inc
rol
sub
and
push
clc
jbe
stos
xchg
(bad)
sub
jp
sbb
jge
inc
leave
or
push
test
inc
inc
ficomp
push
cli
jb
cld
icebp
sub
push
pop
mov
jae
sub
iret
push
dec
ror
xchg
sub
pop
aad
adc
xlat
dec
xor
mov
popf
mov
shl
sub
mov
rcl
add
leave
sub
add
std
add
in
push
cmovae
push
clc
stos
bound
hlt
push
pop
pop
repz
mov
jnp
sar
or
out
mov
jns
or
sub
xchg
fldenv
test
push
aam
mov
movs
and
push
adc
and
cmp
or
ds
(bad)
mov
push
adc
mov
add
jge
out
int3
gs
fadd
xor
cmp
arpl
movs
sub
mov
sahf
mov
addr16
movs
sub
and
movs
or
pop
mov
(bad)
mov
or
sub
cmc
sub
test
shl
cmp
fstp
ins
ds
xchg
and
das
push
lock
jp
in
xchg
and
es
imul
pop
call
adc
xor
test
inc
jp
or
push
(bad)
cli
in
stc
ret
div
leave
shl
push
add
or
add
inc
cld
(bad)
movs
popa
test
leavew
sbb
add
dec
mov
adc
aas
mov
mov
and
inc
rol
add
pop
les
and
or
mov
and
mov
es
aam
dec
ins
inc
inc
dec
mov
pushf
jmp
lods
out
test
shr
pop
push
or
ins
xchg
sbb
cmp
imul
(bad)
sti
sub
xor
dec
scas
add
ror
xor
cmp
or
mov
out
jmp
mov
push
in
inc
int3
dec
into
fisubr
call
xchg
test
pop
aam
mov
stos
xor
pusha
pminub
(bad)
cs
mov
and
add
dec
les
out
jle
xor
push
ror
mov
mov
mov
push
ds
or
das
icebp
sub
(bad)
mov
push
out
inc
cmp
pop
aam
sbb
fisub
fadd
cs
mul
xchg
int
sub
mov
lods
xchg
jbe
cmp
sub
jecxz
aas
mov
pushf
add
ins
mov
cmp
js
fistp
xchg
dec
outs
arpl
aam
cmp
sti
retf
cmp
test
sbb
jmp
loope
jne
loop
scas
in
push
mov
or
lea
jmp
or
mov
fs
push
sub
mov
and
retf
data16
icebp
pop
shl
push
sbb
call
mov
lea
sub
leave
cmc
xor
int
mov
bound
cmps
mov
(bad)
ja
aad
retf
aas
xchg
stc
imul
mov
dec
jecxz
mov
outs
ins
dec
imul
bound
repnz
jmp
adc
(bad)
ins
mov
leave
push
out
dec
mov
jle
shr
(bad)
cmc
call
(bad)
(bad)
mov
test
sbb
sbb
jp
retf
add
mov
mov
mov
out
pop
lock
mov
outs
push
cmp
xor
xor
mov
ss
jge
loop
adc
mov
sbb
mov
and
dec
inc
mov
sbb
jne
cmp
cmp
mov
sub
arpl
ret
pop
jb
push
push
sbb
mov
cs
mov
and
jo
ja
ja
jecxz
shl
fisubr
out
xchg
(bad)
(bad)
jmp
and
fst
add
inc
push
push
xor
mov
mov
rcl
jno
adc
push
iret
pop
mov
add
push
mov
ror
sti
outs
(bad)
shl
loopne
jbe
add
shl
out
outs
pusha
js
rcr
fwait
mov
pop
retf
mov
push
(bad)
sahf
inc
sub
hlt
mov
xchg
dec
mov
jae
pushf
cld
dec
pop
mov
pop
jnp
dec
pop
jmp
scas
pop
pusha
mov
int
popf
daa
mov
dec
je
inc
adc
loopne
mov
enter
fucomi
ret
aad
pop
or
mov
retf
add
stos
add
stos
loop
lea
enter
xor
outs
mov
cld
fninit
dec
sub
aas
int
push
cmps
cmp
add
or
mov
jo
sub
fldcw
test
std
cmc
push
mov
mov
add
sar
scas
cmp
retf
cmc
adc
outs
pushf
dec
dec
aas
jle
fmul
popf
inc
mov
mov
dec
movs
mov
jp
jle
push
(bad)
cs
fcomip
ret
enter
pop
bound
push
js
xor
icebp
cmp
sbb
xchg
lea
dec
mov
mov
movs
stc
loopne
fdivr
stos
aad
xor
xchg
fninit
cmp
mov
jp
pop
adc
fbstp
mov
shl
lahf
rcr
or
inc
push
pop
mov
jbe
leave
or
aas
mov
imul
jno
test
repz
test
dec
cli
ins
dec
sbb
les
dec
sar
fistp
(bad)
xchg
and
into
mov
add
faddp
dec
xor
popf
ins
aad
xchg
repz
shr
iret
imul
daa
es
and
call
ins
adc
xor
cmp
pop
in
adc
and
shr
cmps
push
sbb
in
mov
push
cs
lock
jge
ficom
test
xor
test
pop
pop
stos
cmp
fwait
(bad)
ins
cld
adc
loope
or
xchg
dec
in
push
mov
jmp
mov
cmp
popf
and
(bad)
stc
jmp
pusha
shr
adc
mov
adc
mov
aam
adc
sub
int
sti
and
icebp
cmc
not
and
mov
retf
mov
jge
add
leave
(bad)
adc
mov
pop
sub
fwait
push
retf
sbb
add
or
fistp
jmp
std
jg
pop
pop
adc
push
scas
xchg
repnz
mov
mov
mov
cld
loop
(bad)
stc
pop
xchg
repnz
mov
inc
inc
lahf
std
fisub
aam
mov
add
inc
stc
or
adc
cmps
or
pop
xchg
sub
inc
or
xor
ror
add
cmp
add
test
push
jns
jmp
mov
sbb
cwde
out
jle
adc
sbb
clc
iret
(bad)
int
jns
arpl
cmp
sar
lahf
and
jg
xchg
sbb
aam
adc
retf
fld
jmp
int
xchg
pop
mov
cmp
std
in
fnstenv
mov
push
cmc
jnp
aaa
cmps
rcr
rol
nop
jns
gs
adc
sahf
icebp
arpl
retf
sbb
or
add
mov
call
out
ds
mov
add
in
data16
out
and
gs
(bad)
sub
ret
dec
call
shr
addr16
(bad)
pop
push
mov
leave
ins
loope
inc
adc
ja
shl
test
pushf
pop
fs
sub
pusha
jge
jmp
sub
ds
push
ins
(bad)
sbb
int3
sub
pop
pop
leave
sub
jmp
xchg
ret
test
mov
cmps
loope
cmps
nop
sub
in
ss
pop
iret
data16
fiadd
xchg
loop
mov
in
pop
ss
push
add
adc
adc
adc
into
xor
mov
xor
sub
es
test
sahf
(bad)
xlat
in
rcr
dec
and
and
dec
inc
or
and
(bad)
call
push
mov
push
xchg
repz
jne
in
imul
test
mov
cmp
or
imul
int3
lods
mov
aas
dec
sbb
clts
or
xchg
xor
cmp
popa
shl
push
lods
imul
iret
or
xchg
retf
sbb
or
mov
out
and
ror
mov
js
xchg
jnp
dec
and
push
cmps
rcl
push
sbb
leave
sbb
repnz
loope
aad
rcr
loope
mov
sahf
mov
jae
mov
push
jmp
mov
call
leave
sub
xor
fs
xor
xchg
fadd
add
int3
cmp
sbb
push
xchg
mov
xor
int
pop
sub
cmp
(bad)
sub
pop
push
add
lock
lock
das
inc
outs
xor
out
xor
adc
sbb
jb
ja
ins
cmp
lods
cmp
daa
jmp
jge
sbb
mov
jle
xor
daa
jnp
fidivr
loopne
inc
pop
jg
jno
sti
add
xor
inc
sbb
push
stc
mov
mov
jne
aam
out
(bad)
pop
into
ins
push
je
pop
shr
lods
mov
add
ss
push
outs
leave
lds
imul
mov
test
and
cmp
or
mov
stc
inc
push
xchg
jp
mov
aad
repnz
fadd
lods
mov
cmps
lahf
inc
dec
cwde
lods
aas
ja
xchg
hlt
mov
loopne
popa
adc
adc
cli
or
jo
or
mov
xor
ds
sbb
cmp
adc
outs
adc
leave
lea
jb
fmul
mov
push
movs
ficomp
rcr
std
retf
mov
jle
or
retf
and
(bad)
popa
pop
cmp
mov
imul
fnstsw
dec
stos
lahf
leave
ret
and
into
jb
icebp
clc
add
adc
shr
and
out
jmp
inc
adc
lahf
jne
dec
xor
pop
popf
and
inc
xor
mov
mov
jmp
xor
push
and
imul
into
mov
mov
push
cli
sub
not
in
push
push
fld
jns
(bad)
mov
cmp
fistp
and
mov
adc
das
retf
inc
shl
adc
retf
ins
(bad)
mov
xor
jle
mov
jecxz
mov
stc
mov
pop
jmp
sbb
enter
popa
jae
pushw
pop
fadd
js
int3
lea
rol
shr
xlat
sub
popf
sub
hlt
outs
sub
lds
lods
mov
and
mov
lds
loopne
mov
mov
jns
sub
mov
adc
push
sub
xor
movs
add
out
add
call
cmc
adc
mov
inc
dec
jle
add
mov
repnz
inc
aaa
sbb
mov
add
inc
aam
enter
shl
ins
pop
mov
fdivr
mov
jno
cmp
nop
cmp
jnp
jb
mov
rcl
xor
push
repz
xor
sub
jg
push
shl
adc
fcmove
not
sbb
inc
dec
jno
std
jmp
(bad)
ins
sbb
xor
fs
cdq
or
popa
jmp
aam
loope
pop
push
loopne
imul
push
outs
mov
ja
clc
and
pop
fs
xchg
aaa
mov
dec
push
dec
pop
(bad)
fwait
mov
sbb
mov
push
dec
push
mov
mov
arpl
or
mov
into
jp
ins
ret
cmc
fidivr
pop
sub
mov
sub
lock
sub
cmps
push
mov
lahf
cmps
push
pop
mov
cmp
test
sbb
repnz
pusha
xchg
xor
mov
jae
adc
adc
inc
in
xchg
cdq
jecxz
mov
gs
test
push
jbe
cmc
iret
cs
adc
pop
lock
leave
mov
inc
repz
xchg
popf
aaa
ror
sahf
ins
fdiv
cli
(bad)
pop
cwde
aas
xchg
inc
lds
mov
cmp
dec
push
repz
cmp
push
jb
leave
and
icebp
(bad)
ret
fistp
inc
pop
(bad)
xlat
ss
fdivr
call
data16
push
fsubr
xchg
call
dec
repz
jmp
push
dec
jge
loope
test
in
push
jno
fmul
jg
dec
cdq
out
call
cld
(bad)
es
lods
arpl
cmp
pop
into
inc
pop
xchg
xor
add
into
push
lods
xchg
or
xchg
mov
pop
lods
iret
dec
fild
cmps
dec
ins
(bad)
cmp
push
adc
pop
push
or
mov
cdq
cmc
rcr
neg
loop
mov
shr
sti
jmp
mov
sub
mov
dec
push
hlt
arpl
into
xlat
dec
or
xchg
xchg
aam
sbb
push
mov
inc
and
jno
aaa
mov
mov
clc
sub
jmp
pop
sub
test
fisttp
add
pop
out
xor
popf
(bad)
sbb
xchg
sti
scas
push
dec
dec
xchg
imul
mul
push
xor
mov
sti
push
leave
idiv
stos
sub
shr
lds
pop
inc
gs
pop
retf
mov
pop
shl
mov
cmp
sar
pop
clc
iret
sbb
xchg
mov
dec
and
fstp
pop
iret
fistp
or
das
pop
push
mov
inc
mov
(bad)
xchg
and
mov
cmps
pop
mov
stc
es
mov
xchg
js
cdq
call
and
repz
(bad)
movs
mov
push
fstp
inc
cmp
inc
scas
sub
(bad)
xchg
rcl
into
adc
adc
and
push
imul
inc
cmp
dec
fwait
cmp
adc
jmp
cmp
adc
das
pop
(bad)
pop
or
adc
push
retf
lahf
lods
stos
test
mov
into
or
(bad)
jecxz
jle
and
shr
inc
xor
push
pop
outs
and
nop
sti
jmp
jge
in
sbb
retf
data16
mov
push
or
push
test
xchg
sbb
out
xlat
int3
mov
jno
bound
sub
pop
mov
xlat
mov
dec
push
inc
outs
fidiv
jecxz
dec
and
sbb
repnz
xchg
lahf
push
into
prefetch
or
xor
mov
xchg
dec
lds
sbb
int
enter
pushf
pop
xchg
pop
jge
sub
pcmpeqd
cmp
stos
aad
add
fstp
xor
ja
popf
sub
aas
jbe
loopne
(bad)
loope
rcr
test
add
sahf
into
shl
jecxz
in
les
or
push
mov
xor
call
call
lea
cdq
loope
cmp
ds
mov
(bad)
in
sub
cdq
push
jmp
rol
jb
xlat
lock
jp
test
jg
shl
pop
dec
push
and
mov
retf
fbstp
movs
in
(bad)
sti
xchg
or
jb
cmp
jb
outs
xchg
stc
mov
setg
sbb
mov
int
rcr
pusha
xchg
outs
push
dec
fdiv
jle
aas
mov
imul
rcl
xchg
aam
inc
mov
imul
and
mov
cmps
mov
pop
movs
xor
(bad)
inc
retf
mul
jle
mul
aaa
lods
inc
into
pop
cli
sub
and
int3
(bad)
and
inc
dec
push
clc
fcmovbe
in
mov
mov
ror
xchg
(bad)
pop
fs
outs
shl
imul
jbe
outs
sbb
mov
in
ss
add
stos
imul
add
pop
loop
xchg
scas
mov
icebp
push
test
xchg
pop
jle
test
xor
gs
pop
fs
loop
retf
xchg
scas
push
test
mov
push
imul
fsubr
cmc
bound
mov
mov
add
ins
test
jmp
inc
ins
pop
int
test
jno
pushf
out
and
stos
jae
xor
cwde
js
adc
inc
enter
cmps
jmp
(bad)
push
pusha
xor
add
or
repz
jnp
pop
mov
int3
test
in
pop
mov
lahf
jb
sub
scas
push
adc
popa
push
pop
imul
push
jmp
ficom
push
lea
jmp
cdq
sub
adc
leave
fist
lock
push
and
fmul
popf
sub
mov
mov
rcr
das
xor
mov
ins
push
stc
fst
test
cmps
into
jae
fstp
out
mov
jns
fnsave
inc
fld
rol
scas
int
je
outs
retf
mov
and
ret
cld
or
dec
icebp
dec
mov
xchg
call
or
mov
das
sub
call
test
inc
cmp
xchg
shl
sub
xchg
cdq
addr16
repnz
pushf
inc
jns
dec
push
dec
popa
and
mov
pop
or
pop
jbe
and
ffree
pop
mov
sbb
or
int
cmps
fiadd
inc
fisttp
(bad)
in
js
jbe
add
mov
rcl
push
cmp
inc
cli
sbb
mov
push
fmul
and
mov
mov
repnz
push
xchg
popf
fistp
lahf
jb
xchg
mov
pop
and
repz
xor
mov
aam
aaa
sub
and
add
retf
out
mov
jmp
lds
inc
ret
lock
xchg
pop
or
sub
xor
test
cmp
int
adc
push
xchg
sar
mov
fldenv
stos
scas
or
add
sbb
sar
inc
jge
push
jns
nop
ins
test
push
jl
into
enter
push
pop
mov
push
fdivr
test
sbb
jmp
das
mov
push
adc
add
(bad)
imul
(bad)
call
fisub
jne
jmp
xchg
ss
adc
jle
stos
lahf
ja
in
loopne
mov
bound
test
sub
push
mov
mov
aam
jmp
test
adc
xor
int
push
outs
sub
out
js
jp
adc
mov
in
fcomp
in
cmp
stos
out
mov
push
and
pop
fwait
scas
neg
icebp
out
sub
cwde
or
jmp
push
mov
xchg
loope
or
ret
xchg
jne
mov
or
inc
mov
call
mov
xlat
cmp
xor
inc
and
xor
sar
leave
aad
dec
out
fadd
retf
push
mov
ds
sub
cmp
outs
cmp
cmp
imul
nop
cmps
sbb
sub
sbb
jo
aad
push
cwde
adc
fidivr
outs
push
mov
dec
repnz
data16
(bad)
dec
cmp
and
mov
dec
imul
in
and
sbb
mov
inc
fst
pop
adc
inc
xchg
movs
ret
rcr
std
inc
mov
out
test
leave
(bad)
sahf
stc
pop
mov
enter
push
mov
pop
or
jecxz
add
inc
imul
push
xor
rcr
or
cmp
mov
movs
test
mov
sbb
in
mov
push
(bad)
scas
movs
cmp
dec
into
leave
clc
dec
inc
cmp
rcl
or
or
popa
adc
rcl
pop
nop
and
aaa
sbb
mov
push
mov
int3
push
push
cmp
call
mov
in
test
aam
jno
mov
sbb
or
popa
xor
jnp
(bad)
add
mov
sub
mov
aad
xor
xchg
enter
dec
inc
push
jle
dec
mov
push
sahf
clc
retf
lods
in
test
push
pop
stc
mov
push
jb
fcmovb
inc
loopne
sahf
adc
fcom
fiadd
pop
xor
pop
out
shr
cmps
dec
xchg
mov
mov
sub
xchg
mov
cmp
test
pop
pop
imul
popa
jp
add
jo
mov
ror
ror
dec
mov
pop
and
cs
cmp
ins
shl
enter
or
call
cli
cmp
push
mov
adc
test
push
xor
pushf
jae
outs
xor
mov
ror
dec
js
mov
add
cmp
icebp
dec
shr
lahf
mov
mov
dec
push
cdq
cmp
and
fwait
pop
(bad)
popa
mov
push
(bad)
les
idiv
out
add
sub
xchg
movs
sub
sbb
fiadd
retf
(bad)
cmp
out
gs
jp
lock
outs
adc
sub
iret
cmp
and
loope
push
push
xchg
jne
mov
xchg
imul
std
mov
aad
loopne
jmp
or
jno
lock
inc
fdecstp
xor
inc
dec
mov
xchg
pop
xchg
cmp
push
xchg
std
adc
jecxz
cmc
pushf
xchg
cmp
dec
and
daa
push
pushf
ins
inc
dec
into
mov
mov
clc
or
mov
shr
xor
scas
pop
inc
dec
pusha
mov
mov
dec
mov
or
frstor
pop
mov
mov
jp
jo
fwait
lahf
into
mov
xchg
push
ins
inc
idiv
pop
repz
lods
outs
rcl
jo
arpl
jnp
scas
cmp
retf
dec
pushf
mov
and
loope
xchg
cli
dec
into
mov
inc
jnp
jmp
lds
sbb
(bad)
xchg
cmp
pop
or
jae
push
imul
push
xor
pusha
jmp
ret
xchg
call
adc
cmc
daa
push
jnp
gs
ret
cmp
inc
les
inc
sahf
fisub
ffree
fwait
repz
int3
enter
jmp
jno
mov
lds
addr16
retf
mov
ffreep
adc
aas
arpl
inc
dec
aaa
adc
js
dec
or
jle
dec
stos
repnz
leave
mov
cmps
fwait
stos
lods
jl
cli
div
ds
push
mov
fstp
adc
aaa
in
popf
jle
adc
aam
and
repz
lods
call
push
inc
jns
hlt
in
pop
pop
xchg
add
push
sbb
scas
fnstsw
jg
imul
stc
aad
iret
ss
jns
fldenv
jns
push
mov
out
inc
es
arpl
int
bound
mov
add
pop
dec
dec
xchg
popf
cmps
sbb
add
push
inc
push
push
mov
push
add
cmp
mov
push
or
leave
aam
fnstenv
push
xchg
mov
adc
movs
comiss
xchg
add
fbstp
lds
rcl
jle
add
outs
mov
adc
jo
sub
jp
loopne
dec
test
cmp
jle
jle
les
das
add
dec
leave
mov
cmc
std
je
mov
in
in
mov
mov
mov
sbb
fwait
and
stos
div
out
cmps
inc
ds
push
jge
fsubr
inc
test
cmp
sahf
sub
jmp
icebp
jle
inc
je
cmc
enter
mov
in
test
fmul
sar
pop
add
imul
lahf
stos
push
or
ret
mov
call
ret
mov
xchg
(bad)
int
clc
sti
icebp
ret
sahf
and
stos
test
sbb
retf
fwait
dec
dec
sbb
xor
in
cmp
sub
or
inc
push
pop
movs
and
int
sub
cwde
inc
mov
sti
pushf
popa
jns
ja
cmp
(bad)
and
add
dec
cwde
out
inc
mov
cmp
xchg
dec
push
pop
or
xchg
inc
sar
xor
adc
sbb
cmp
cmp
rol
push
sub
mov
jnp
push
push
retf
mov
and
xlat
pop
dec
cmp
sar
sbb
cmp
test
outs
adc
mov
(bad)
mov
js
jge
ins
arpl
mov
int
mov
movhps
inc
les
bound
shl
add
mov
xchg
js
sbb
xchg
lods
adc
add
adc
inc
ret
jno
cmps
jmp
icebp
push
and
lock
(bad)
ins
popa
mov
add
imul
call
jmp
sahf
sbb
jbe
mov
aaa
in
imul
popf
cs
jno
(bad)
xor
js
push
cld
sbb
std
dec
inc
xlat
jne
outs
mov
(bad)
add
test
clc
lock
xchg
dec
xchg
push
dec
repz
xchg
ins
popa
cs
add
cmp
aam
mov
nop
inc
jns
fdivrp
inc
fld
pop
or
stos
cmp
inc
iret
jmp
mov
inc
out
xchg
sahf
dec
das
repnz
jmp
ficom
dec
into
add
add
call
fcomp
mov
das
mov
adc
dec
in
imul
and
pop
jbe
cmp
out
es
cmp
in
call
or
xchg
imul
arpl
rcl
dec
xchg
mov
xchg
adc
aam
sti
std
test
push
call
push
movs
stos
xor
push
inc
xchg
sbb
xchg
(bad)
xchg
push
mov
call
or
or
add
repz
mov
ja
jbe
in
lods
xor
mov
fidivr
push
inc
int3
pop
popf
sahf
and
sahf
mul
ret
bound
mov
xor
sbb
cmp
jp
dec
mov
pop
jle
jecxz
add
mov
cmps
mov
cmp
fwait
pop
out
fs
mov
jbe
mov
movs
sub
jg
inc
adc
xchg
jecxz
push
sahf
call
pusha
sbb
pop
mov
dec
jmp
das
mov
jb
pushf
dec
and
pop
pop
pop
sbb
inc
(bad)
icebp
sbb
fwait
pop
push
fs
jmp
aas
jmp
popf
dec
(bad)
sbb
and
(bad)
jnp
sbb
ret
sub
inc
(bad)
mov
idiv
dec
mov
je
jno
cwde
pop
scas
dec
jle
sub
call
cld
aad
scas
pop
out
shl
test
stos
mov
aad
push
sar
dec
je
and
mov
shr
int
push
mov
xor
leave
movs
sbb
out
imul
ins
and
push
cli
pop
mov
jns
push
fs
call
add
mov
pop
popa
movs
leave
jo
xchg
addr16
ds
aam
sbb
test
les
repz
icebp
and
lods
inc
(bad)
mov
sti
fstp
loop
push
or
movs
cmp
sub
fdiv
shr
sar
je
shl
push
mov
daa
scas
jno
les
inc
mov
cdq
inc
jg
jns
cmp
dec
push
mov
push
add
adc
mov
jae
leave
mov
bound
mov
(bad)
sti
test
push
xor
jecxz
outs
or
jp
sbb
sbb
addr16
aaa
push
out
movs
cmp
arpl
xchg
push
fs
and
mov
loope
scas
push
jp
add
jne
mov
fwait
shl
xchg
sahf
mov
fstp
push
xor
pop
leave
adc
(bad)
retf
dec
cmp
stos
and
shr
dec
xchg
mov
fild
and
inc
mov
sbb
cld
in
mov
test
mov
(bad)
mov
sbb
mov
pushf
adc
inc
test
cwde
enter
scas
push
xchg
cmps
mov
dec
shr
es
mov
add
mov
mov
or
call
imul
mov
xchg
or
int
ins
jne
mov
(bad)
lods
mov
mov
and
aad
loopne
pop
xor
pop
in
and
jecxz
in
pop
scas
sub
push
mov
out
mov
fidivr
ret
add
xchg
or
push
mul
inc
ja
cmp
jo
push
retf
les
add
(bad)
and
mov
mov
sbb
inc
pop
pop
xor
rol
ins
and
sub
mov
call
xchg
sbb
xchg
test
test
sub
gs
fistp
xor
nop
or
xor
jecxz
push
cmp
mov
popf
scas
xor
add
mov
mov
sub
mov
(bad)
mov
xor
popa
or
push
dec
loopne
push
fisttp
mov
neg
sub
ins
mov
cwde
mov
push
dec
outs
sbb
dec
jmp
enter
sbb
cmp
push
or
js
pop
xchg
xchg
ffree
mov
sbb
das
fdiv
loopne
and
call
fwait
push
jmp
mov
es
fistp
sbb
jae
ror
popf
or
dec
and
shr
in
sbb
fcmovb
inc
adc
retf
fadd
mov
push
gs
fdiv
jmp
and
fsubr
mov
rcl
fmul
ret
pop
fdiv
mov
inc
bound
pop
into
mov
push
xchg
push
sbb
xor
push
cmp
push
or
or
(bad)
push
pop
jae
iret
aas
mov
dec
fsubr
or
rcr
push
(bad)
xor
ret
arpl
inc
cs
fldenv
inc
ins
movs
retf
sbb
fst
loop
lock
adc
movs
or
aad
(bad)
sub
cli
test
lods
mov
xor
add
cmc
or
ror
xchg
ret
scas
xchg
push
cmp
mov
test
xchg
inc
dec
push
aad
cwde
dec
adc
xor
and
push
scas
(bad)
adc
xchg
aaa
mov
push
fisubr
stos
clc
push
test
rcl
cmp
sbb
jp
popa
aaa
ins
pop
or
outs
ins
or
mov
test
enter
cmp
cdq
jnp
rol
fmul
cmp
jbe
push
jns
or
sahf
or
sbb
cmps
pop
daa
clc
lea
jb
jg
(bad)
mov
bound
xchg
ins
cmp
imul
stos
lock
push
mov
sbb
push
adc
pop
ja
mov
movs
fidivr
iret
or
scas
in
or
xor
pusha
shr
(bad)
lahf
sbb
sbb
cmps
lds
push
inc
adc
shl
mov
not
ins
inc
sbb
pop
ds
inc
ss
mulps
add
inc
(bad)
retf
es
push
sbb
dec
data16
xchg
jg
xor
dec
es
mov
rol
jmp
cmp
adc
ja
nop
retf
add
push
je
sub
nop
add
dec
cmp
jmp
repnz
push
in
and
inc
push
add
mov
(bad)
not
in
icebp
cwde
mov
xchg
jmp
scas
sub
xchg
pop
loope
fadd
adc
cmp
pop
imul
repnz
dec
icebp
sahf
scas
dec
inc
ins
hlt
jge
mov
out
xor
inc
and
dec
pop
ficomp
inc
xchg
mov
sub
push
not
das
cmp
into
hlt
push
les
(bad)
aam
cmp
(bad)
popf
pop
bound
jg
scas
mul
cmp
dec
or
data16
and
cmc
sub
shr
xlat
dec
cmps
push
pusha
inc
jge
jo
es
outs
mov
lds
xchg
loop
or
(bad)
pop
adc
sub
shl
fisubr
push
adc
lea
cwde
add
jno
jle
(bad)
out
mov
mov
jl
push
repz
jns
retf
mov
pop
sub
sub
and
push
daa
pop
ret
push
inc
sub
out
(bad)
loope
dec
pop
add
repnz
cmp
nop
int3
sbb
lea
cli
jb
neg
push
pop
not
xchg
jae
das
(bad)
fld
fimul
adc
xor
and
or
retf
out
retf
push
ins
fs
sub
and
add
cmps
cmc
adc
cmps
or
xchg
pop
sbb
dec
fnstcw
inc
and
(bad)
sbb
lahf
mov
mov
not
dec
clc
mov
shl
adc
jmp
push
js
pop
inc
push
add
pusha
xchg
and
mov
mov
cmp
out
rol
push
fstp
out
lds
fcmovbe
cwde
adc
repnz
mov
fisubr
test
push
cmp
push
(bad)
aad
pop
sub
mov
or
dec
dec
xor
out
add
repnz
inc
and
mov
scas
cwde
loop
ror
lds
jae
or
mov
cmps
bound
push
dec
pop
add
ds
fadd
inc
add
inc
(bad)
fnstenv
repz
jae
in
and
dec
pusha
dec
popa
push
adc
test
ret
clc
pop
jle
loope
ja
xchg
(bad)
mov
cld
retf
mov
pushf
out
ror
(bad)
jbe
repz
lods
cmp
mov
xchg
xchg
daa
mov
in
pushf
mov
movs
dec
scas
(bad)
lock
sub
jmp
push
ret
sti
cmp
cdq
out
push
scas
dec
fcmovne
xor
push
fbstp
add
popa
mov
shr
jo
inc
fiadd
cdq
into
push
test
jne
adc
mov
cmp
iret
sar
ds
pop
shl
lea
jge
call
out
cmp
jecxz
jmp
jmp
(bad)
test
xor
jl
fdiv
adc
push
rcl
inc
push
sub
das
loope
cmp
mov
cmp
ins
sbb
jg
cdq
or
enter
dec
jo
repnz
bswap
cli
sbb
test
lods
cmp
inc
cli
mov
and
loop
inc
iret
mov
dec
imul
xchg
cmp
scas
jp
repz
movs
(bad)
jmp
sbb
nop
push
(bad)
cmp
arpl
and
sub
icebp
mov
mov
push
or
inc
xlat
out
add
test
xchg
pop
ret
js
in
lahf
jl
xor
ret
xchg
mov
enter
ret
test
xlat
dec
mov
rcl
mov
rcr
mov
movs
shl
push
lods
dec
mov
std
cld
js
imul
jae
push
mov
mov
ficom
pop
test
pop
xchg
sub
cmp
jge
mov
cmc
cmp
push
jmp
adc
je
lahf
jge
cwde
shl
arpl
gs
iret
add
jae
mov
mov
sahf
sub
(bad)
sbb
sub
mov
repnz
sub
cmps
cwde
lods
lds
in
sub
lahf
add
xchg
sbb
ror
xchg
test
jmp
jp
and
xor
cmp
cmp
jnp
repnz
sbb
or
jge
aam
call
xlat
sbb
sahf
ins
sbb
sbb
jns
push
(bad)
xchg
mov
push
xchg
out
inc
out
hlt
push
sub
inc
(bad)
pop
push
shl
xor
xchg
popf
jnp
inc
pop
cmc
cmp
xor
pop
cmp
push
xor
jecxz
jmp
cmps
push
pop
rcl
jge
xchg
rcr
mov
(bad)
in
add
push
cld
inc
cmp
test
je
iret
loopne
test
sti
dec
mov
test
sahf
xchg
add
int3
mov
dec
daa
or
adc
jae
out
dec
cmps
xchg
pop
lods
xchg
xor
leave
mov
loopne
jg
mov
xor
jns
popf
and
pop
pop
shr
(bad)
or
xor
push
cmps
(bad)
xchg
jns
mov
xor
adc
xor
lds
imul
call
shl
sbb
repnz
aaa
pop
das
sbb
push
mov
cmp
pop
mov
out
pop
mov
scas
mov
test
es
stc
dec
retf
mov
add
cli
out
pop
ss
jge
pop
scas
ins
xchg
pushf
jp
cwde
jecxz
or
dec
adc
sti
pusha
outs
adc
ins
push
jg
sti
or
scas
xor
xchg
push
adc
aam
(bad)
data16
je
leave
inc
xor
fidivr
fild
inc
loope
add
leave
xor
jnp
sbb
ret
or
scas
cmps
enter
mov
mov
loope
adc
sbb
pop
add
ror
cmp
add
test
mov
jo
(bad)
in
movs
test
arpl
test
sub
cmp
xchg
or
mov
(bad)
sahf
pop
movs
cmp
rol
mov
jl
(bad)
js
jnp
mov
mov
jmp
mov
inc
sub
jp
mov
addr16
stos
(bad)
lock
loopne
ret
fld
jne
cli
jmp
or
inc
and
out
mov
xor
pop
movs
jne
adc
sub
inc
clc
je
das
or
sbb
nop
jecxz
std
add
ins
cmp
xchg
retf
rcr
push
push
jp
aad
pop
in
mov
outs
xchg
push
adc
jo
mov
or
pop
jmp
popf
pop
cmp
fidiv
retf
js
xchg
pop
jo
retf
inc
mov
pop
inc
pop
shl
xchg
and
add
xchg
lods
(bad)
sub
jb
mov
and
aam
cmp
pop
daa
pop
popw
and
movs
cld
enter
enter
outs
stos
stos
xor
mov
out
outs
push
mov
ins
add
or
adc
add
add
push
jecxz
lock
fcomi
mov
and
inc
mov
mov
dec
mov
xchg
repz
xor
xor
pop
in
sub
sbb
ficom
pusha
les
fsub
push
sar
mov
jo
mov
jl
clc
xor
xor
in
jmp
dec
xchg
inc
push
sub
iret
cmps
test
xchg
push
or
dec
mov
or
add
jb
pop
jbe
xchg
mov
shl
pop
sbb
cmp
jmp
sub
out
mov
ret
fldcw
loope
cmps
stc
retf
icebp
jmp
pop
bound
adc
cmc
out
shl
inc
mov
(bad)
cmps
push
pop
dec
cmps
cld
aad
movs
lods
mov
adc
iret
mov
sar
aaa
loop
cwde
jecxz
adc
jne
push
shl
mov
retf
pusha
enter
sbb
aam
push
mov
inc
xchg
out
xor
dec
sar
and
mov
dec
jnp
stos
pop
push
pop
dec
dec
int
pop
sar
(bad)
in
sbb
popa
jmp
aad
push
lods
or
mov
mov
outs
sbb
arpl
adc
jmp
aad
mov
push
add
mov
test
iret
in
and
or
in
or
inc
adc
fld
jg
ins
sub
dec
repnz
adc
pop
scas
mov
inc
loop
int
dec
(bad)
lock
cmps
jne
cld
mov
jge
mov
stos
(bad)
sar
cli
add
ins
ds
mov
ds
jecxz
push
inc
shl
cmp
cmp
cmc
add
and
das
les
xchg
out
push
inc
int
bound
push
sti
test
pop
mov
loopne
and
pop
adc
fidivr
(bad)
scas
dec
idiv
fist
call
or
test
(bad)
cwde
sbb
std
aas
mov
cmp
push
mov
mov
sti
test
and
pop
test
sbb
mov
es
dec
aas
cwde
(bad)
out
addr16
mov
jbe
int
mov
pushf
pop
std
and
icebp
pop
adc
mov
loop
mov
clc
push
inc
(bad)
cli
movs
icebp
pop
pop
jb
(bad)
jp
jecxz
sti
stos
clc
sti
cmc
outs
dec
adc
aas
jnp
xchg
cs
xlat
add
out
out
mov
lods
rcl
and
add
outs
mov
(bad)
xchg
cmp
adc
enter
mov
or
and
xor
pushf
jmp
outs
(bad)
push
cs
and
or
push
push
mov
mov
mov
sbb
jne
pop
xor
push
jb
pop
(bad)
ss
rol
(bad)
cli
mov
sbb
das
mov
int3
cld
stos
cmp
icebp
mov
call
sbb
adc
jnp
iret
dec
push
cmp
loop
xchg
xchg
sub
push
popa
xor
(bad)
pmaxsw
jmp
inc
cmp
adc
loopne
sbb
ss
jne
adc
xor
cmp
cmps
dec
mov
mov
(bad)
xchg
in
je
enter
xlat
and
xchg
enter
(bad)
scas
mov
sub
sahf
sbb
sahf
stos
jae
mov
sbb
iret
inc
jbe
aaa
adc
loope
pop
ficomp
mov
inc
punpcklwd
jbe
imul
cdq
sub
or
ins
ss
fdivr
fdivr
cli
out
loop
outs
push
xlat
jb
out
nop
outs
test
jb
lea
inc
jb
call
sub
nop
outs
cld
je
or
mov
pop
dec
outs
lods
rcl
int
pusha
popa
push
mov
jp
test
stos
cmp
push
daa
xchg
neg
mov
sub
jl
xor
or
or
clc
movs
hlt
xor
sub
mov
push
in
or
cli
inc
inc
jnp
push
dec
(bad)
sub
mov
hlt
push
sti
fstp
pop
out
retf
jae
stc
dec
jp
jnp
aam
test
es
(bad)
pop
mov
movs
and
pop
inc
(bad)
push
add
add
sbb
inc
mov
lock
sub
xor
dec
sbb
int3
ja
mov
sbb
retf
icebp
mov
jns
sar
sub
mov
pop
mov
xchg
push
bound
aaa
and
sub
(bad)
cmp
pop
cmp
ret
int
add
pop
or
aas
mov
xlat
lahf
test
dec
leave
mov
adc
sbb
(bad)
in
test
fidivr
jp
test
mov
sub
fimul
adc
arpl
outs
mov
lods
push
int
jle
jge
mov
mov
adc
pop
mov
stos
fild
les
movs
dec
icebp
jg
clc
pusha
leave
scas
mov
lock
popa
pop
jmp
or
ror
jbe
je
jle
es
xor
ins
sub
jnp
xchg
mov
fistp
scas
into
fisttp
call
pop
inc
and
jo
es
sbb
and
add
bound
gs
test
in
jmp
or
jo
cmp
shr
aam
dec
cmp
jb
lea
mov
mov
cdq
sub
pop
jnp
js
bound
sbb
jns
shl
dec
inc
jle
pop
in
adc
scas
push
xchg
push
int3
and
repnz
jns
ja
jecxz
bound
mov
je
jmp
pop
xchg
jnp
les
mov
stos
add
pop
aaa
or
inc
sar
aaa
xor
jle
iret
call
pop
aad
jno
add
adc
cwde
mov
cmp
pop
jecxz
cmp
push
jmp
ja
jmp
scas
mov
fcmovnbe
push
in
movs
lock
cmp
arpl
mov
cmps
pop
xor
mov
jnp
sbb
(bad)
sbb
test
daa
inc
out
cmp
scas
nop
fwait
addr16
mov
sub
fld
jg
call
jl
scas
mov
(bad)
and
imul
enter
lea
imul
mov
pushf
jg
adc
sbb
adc
(bad)
cmps
icebp
mov
lea
out
mov
xor
adc
pop
rcr
pop
push
loop
and
imul
fnstsw
(bad)
adc
pop
lahf
cmps
dec
aad
out
pop
hlt
mov
iret
icebp
sar
daa
xchg
cmp
push
xchg
repnz
movs
push
movs
call
and
loope
jne
ins
outs
xor
pop
mov
in
test
xchg
jle
cmc
and
jb
movs
sbb
add
test
movs
sub
add
push
mov
das
test
ins
cs
aam
scas
cmp
setb
icebp
sbb
lods
out
or
pop
(bad)
sti
xchg
jmp
add
scas
stos
dec
sar
cmc
or
push
dec
call
cmp
aaa
and
adc
dec
stc
push
adc
dec
add
add
sti
and
std
ja
ficom
xor
int
ret
jl
out
test
iret
test
fst
dec
adc
rcl
xchg
ins
fidivr
arpl
mov
repnz
imul
(bad)
cmp
mov
mov
push
fstp
and
aam
jge
push
push
jl
jmp
or
mov
call
and
sbb
cmp
dec
stos
dec
out
mov
xchg
pop
in
movs
das
pop
push
or
lods
pop
jb
push
xchg
aaa
pusha
leave
add
adc
add
popa
sbb
mov
inc
jge
mov
maskmovq
div
push
jb
mov
mov
and
cmp
scas
mov
jns
repnz
in
sbb
cdq
imul
enter
sub
les
lahf
dec
sahf
sbb
add
test
in
push
mov
in
jmp
lea
ins
shl
leave
and
in
xchg
inc
pop
jge
inc
cmp
int
mov
inc
dec
or
dec
lock
aam
or
mov
mov
cmp
xchg
imul
or
inc
add
(bad)
and
jno
nop
cld
mov
xchg
je
mov
and
push
jl
sub
mov
sahf
jb
out
dec
push
xchg
jne
mov
icebp
sub
movs
adc
dec
pop
ds
cld
push
or
call
call
inc
lods
jno
repnz
mov
mov
neg
int3
xchg
movs
test
xor
mov
cli
push
push
cs
adc
rcl
dec
cmp
pop
mov
and
cli
sub
bound
repz
into
gs
ins
fisub
dec
push
out
sahf
jbe
adc
les
inc
imul
xchg
enter
cmp
out
jecxz
cli
(bad)
data16
loopne
mov
mov
scas
jmp
dec
or
stc
scas
mov
xchg
xor
(bad)
cmp
ins
loope
ins
mov
inc
jns
dec
mov
icebp
mov
fcomp
mov
jg
in
std
(bad)
cwde
(bad)
cdq
xor
xor
fstp
add
cld
adc
pusha
mov
pop
mov
arpl
inc
pminsw
push
or
(bad)
in
sti
aam
outs
addr16
not
inc
xor
push
xor
out
xor
mov
xchg
(bad)
in
loopne
and
push
xor
xchg
jg
ret
test
xor
adc
or
lahf
bound
or
loope
pop
jp
cmp
push
stos
repz
outs
mov
fwait
cmps
sbb
sahf
jecxz
and
ret
stos
ror
movs
jno
shl
imul
sbb
cld
adc
pop
in
xchg
lock
or
paddq
aaa
adc
dec
je
in
in
cmp
out
call
in
and
jg
xchg
pop
push
clc
xchg
movs
xor
cmps
cmp
jb
inc
xchg
cdq
int
(bad)
repz
shl
repz
and
mov
xchg
xlat
out
retf
shl
fnstcw
lahf
push
aaa
adc
or
xlat
(bad)
cmp
jbe
pop
inc
or
test
mov
xchg
cdq
fs
test
dec
in
mov
mov
or
mov
and
jg
jnp
push
leave
and
or
cwde
sub
cmp
cmc
sti
pop
sbb
sbb
jecxz
jle
(bad)
loop
xchg
popa
jp
imul
dec
aad
(bad)
aad
add
stos
in
je
pop
test
fwait
jbe
sbb
inc
mov
addr16
test
xchg
outs
sbb
stos
mov
loop
mov
enter
mov
adc
ret
clc
dec
mov
jecxz
mov
inc
fistp
jge
mov
add
aas
cwde
aam
test
imul
mov
aaa
movs
ins
hlt
mov
mov
xor
jl
mul
fs
shl
jns
lea
js
add
cmp
push
jns
arpl
call
inc
mov
imul
xor
jns
nop
and
mov
add
dec
xor
jecxz
jae
jo
aad
or
hlt
loop
mov
gs
xor
outs
jl
outs
adc
sbb
push
add
rcl
xchg
lahf
aas
dec
push
jl
ret
fdivr
mov
rcr
pop
shl
fist
add
push
sbb
stos
iret
push
pop
pop
jb
ret
push
adc
and
xchg
inc
mov
xor
stc
popf
cs
push
push
jbe
xor
xor
bound
cdq
jl
les
adc
xchg
or
and
and
loope
pop
cmp
sahf
ret
in
jne
sub
mov
xchg
mov
cmp
push
pop
icebp
mov
and
call
aam
or
xor
cmp
lock
mov
ds
push
fsub
iret
mov
jns
hlt
pop
in
sub
cli
movs
les
mov
adc
jl
mov
jbe
xchg
mov
jmp
popa
xor
pop
test
fst
and
(bad)
pop
dec
into
ja
pop
push
rcr
repnz
mov
movs
das
cdq
not
xchg
repz
dec
xchg
dec
pop
es
test
in
jae
dec
adc
je
mov
xchg
sbb
hlt
pop
fmulp
dec
push
call
add
or
or
jle
movs
out
dec
int
jne
aam
dec
push
adc
pop
mov
add
aad
(bad)
loope
sub
cmps
pop
mov
call
jne
shl
lods
sub
retf
aam
pop
cwde
ret
mov
push
movs
or
pushf
adc
cmp
cmps
sbb
lods
mov
pop
pop
mov
sbb
xor
imul
mov
enter
push
hlt
and
ficom
cmps
fild
and
loopne
mov
lahf
push
outs
mov
adc
jb
pop
cmp
fbld
mov
adc
fwait
pusha
push
cdq
add
xor
sub
cmp
mov
(bad)
mov
sbb
sbb
stos
mov
mov
adc
in
dec
lods
xchg
dec
popa
add
jae
cdq
push
rcr
pop
jp
test
and
jnp
push
xor
in
loop
jl
push
push
pop
jne
cdq
ins
fldl2e
daa
or
test
call
xor
inc
jo
sub
icebp
mov
sub
sub
push
movs
xor
push
cmp
dec
mov
mov
pop
and
push
sbb
jnp
ins
sahf
sub
sahf
gs
sbb
pop
jle
xchg
leave
leave
or
sbb
mov
cmp
mov
repnz
add
lahf
imul
lock
fcmove
imul
outs
movs
push
cmp
and
jmp
and
test
cmp
jecxz
ss
xor
xchg
xor
sbb
mov
outs
jmp
push
xchg
and
mov
cmp
call
xchg
add
cwde
stos
cmp
jo
inc
data16
pop
je
xor
or
enter
ds
bound
pop
mov
adc
sbb
sbb
jnp
out
xchg
in
imul
out
inc
dec
push
mov
loop
pop
sbb
cmp
sub
cld
push
popa
adc
add
sub
pushf
push
dec
pop
ins
mov
mov
mov
xchg
xchg
push
scas
shl
aam
je
and
or
je
ins
sub
jl
in
jmp
or
jae
xor
ss
add
(bad)
call
jno
loop
pusha
cwde
retf
idiv
xchg
inc
data16
cs
pushf
ins
ret
inc
mov
ret
maskmovq
test
cmp
lahf
mov
pop
cli
movs
test
call
stos
push
jp
push
movs
sti
fisubr
dec
ss
aaa
cmp
pop
fldenv
xor
rcr
jnp
xchg
sbb
dec
dec
mov
and
add
push
mov
stos
ss
mov
xchg
mov
sti
test
xchg
inc
xor
fdivr
divps
enter
imul
adc
mov
sub
jle
cmp
sub
and
aaa
cwde
jl
and
push
movs
sbb
fldcw
sbb
dec
rcr
xor
(bad)
and
fnstsw
movs
ss
mov
push
push
adc
push
push
call
add
push
cmp
test
clc
push
push
add
jecxz
icebp
xor
hlt
mov
cmp
cwde
movs
adc
xchg
repnz
inc
test
mov
and
fst
test
rcr
jno
mov
cmps
add
(bad)
cmp
out
add
out
ds
imul
aam
inc
or
fist
fdivr
rol
pushf
lods
pop
(bad)
adc
inc
test
inc
xchg
mov
inc
mul
rol
in
loope
pop
jle
mov
inc
xchg
stos
push
and
imul
lds
ins
mov
or
scas
jnp
cld
xchg
sahf
adc
adc
fwait
mov
sub
div
sbb
jp
xchg
push
int
lods
popf
xor
inc
mov
inc
add
pusha
push
dec
inc
outs
sbb
cwde
sahf
mov
push
and
or
dec
jns
jno
out
ror
push
mov
mov
sub
mov
and
push
cmovns
sti
mov
inc
sbb
cdq
sub
dec
cs
xor
test
sti
test
arpl
sti
push
in
mov
mov
push
lods
cdq
xor
ins
push
js
jae
inc
(bad)
test
pop
inc
pop
dec
push
imul
jmp
idiv
lea
jae
xor
cs
movs
popf
mov
add
je
std
outs
sub
inc
clc
iret
sbb
popf
shl
push
les
outs
mov
push
pop
out
shr
mov
retf
sbb
sbb
in
and
pop
xchg
loop
iret
dec
mov
mov
(bad)
mov
lods
mov
imul
mov
mov
imul
repz
rol
jbe
stc
add
ret
inc
or
cld
sti
cmp
pop
jnp
ds
std
mov
scas
das
les
mov
int3
mov
fist
inc
arpl
pop
push
add
imul
(bad)
imul
add
push
lock
push
jge
rol
adc
sub
nop
in
cwde
pushf
mov
mov
mov
jo
je
(bad)
and
enter
ror
rcr
push
in
fisub
and
into
adc
aam
lock
add
xor
mov
inc
cmp
stos
adc
xor
sbb
outs
(bad)
in
push
mov
test
pop
mov
xchg
add
in
adc
(bad)
and
add
test
cs
out
mov
dec
mov
mov
mov
fcom
test
repz
mov
cmc
fs
jecxz
leave
lods
cmp
pop
dec
xor
sbb
imul
jle
mov
fnsave
inc
pop
and
daa
push
scas
data16
cli
cmp
xor
pop
inc
fcom
fcmovnb
dec
dec
mov
inc
(bad)
das
in
mov
sub
test
test
and
xlat
pop
das
imul
sbb
sti
icebp
(bad)
imul
ins
rol
pop
jmp
mov
xor
(bad)
lea
inc
push
lods
inc
and
cmc
ret
sub
out
jle
push
xor
push
nop
call
movs
icebp
(bad)
ja
sbb
jae
mov
addr16
rcl
jb
fcomp
xor
jmp
fstp
jo
sbb
je
loopne
scas
push
and
add
jnp
xor
test
mul
lock
mov
dec
jnp
dec
mov
inc
push
add
adc
outs
sbb
(bad)
push
int3
popa
shr
mov
jmp
inc
xor
add
push
fmul
cdq
xor
adc
push
xor
cld
aad
out
inc
dec
pop
push
out
leave
pop
mov
cmp
enter
pop
xchg
xor
xor
cmp
add
cmps
pop
and
fst
enter
(bad)
aas
sbb
mov
out
dec
mov
imul
mov
and
push
jne
xlat
mov
ins
xchg
rcl
int
jnp
stos
lods
dec
pop
sub
cld
out
push
mov
sbb
je
cmp
xlat
aad
ss
or
sub
call
repz
sub
cwde
adc
jns
pop
or
std
arpl
fsubr
addr16
aaa
cli
mov
imul
or
test
jecxz
mov
xchg
sar
(bad)
add
icebp
pop
lods
cwde
sti
mov
mov
pop
fidivr
loopne
jl
mov
or
lahf
xor
pop
(bad)
gs
pushf
inc
or
sbb
fs
cmp
xor
cmp
dec
mov
popa
mov
sbb
xchg
jl
cld
cmp
push
cmp
int3
push
add
test
int
inc
sub
out
popa
sub
ror
sub
dec
inc
test
int3
and
jo
out
add
xchg
inc
mov
dec
adc
mov
or
je
sahf
mov
lea
xor
jmp
cmp
mov
xchg
pop
(bad)
inc
jmp
dec
out
xchg
jecxz
pushw
sbb
mov
push
cmp
in
stos
mov
push
or
(bad)
frstor
jmp
push
pop
(bad)
neg
leave
(bad)
addr16
xor
cmps
out
xchg
shr
jp
(bad)
std
adc
retf
mov
inc
or
adc
into
stc
sub
lods
xor
cdq
pop
mov
fcom
fisubr
xlat
jp
nop
int
sbb
js
imul
test
loop
outs
stc
or
call
pop
jmp
mov
ins
js
cmc
jnp
jnp
or
xchg
inc
jmp
cdq
or
in
lea
arpl
dec
ss
shl
dec
hlt
adc
(bad)
xor
daa
pop
push
push
fs
ss
xor
ss
int
push
test
mov
push
and
aam
stos
es
mov
scas
repz
ja
inc
ins
sar
(bad)
es
cwde
(bad)
cmp
std
pop
jg
adc
mov
popa
jl
xor
out
xchg
je
jmp
shr
std
es
jmp
ret
push
mov
pop
add
xchg
xchg
xor
inc
mov
adc
mov
xor
and
stc
iret
mov
or
adc
adc
cld
pop
fild
(bad)
pop
cmp
add
sbb
inc
or
imul
addr16
aas
mov
sbb
sub
in
retf
dec
pop
not
jle
jae
xor
jbe
xchg
and
cmp
loopne
or
lods
mov
inc
inc
push
fsubp
add
inc
jmp
or
adc
sub
cs
pop
or
stc
cmp
dec
or
test
cmp
adc
xchg
out
jp
inc
pushf
mov
jp
hlt
push
adc
jp
repnz
or
loop
sbb
adc
xchg
jns
dec
in
data16
out
add
add
retf
lea
and
xor
jge
cmp
xchg
scas
test
sbb
popf
mov
mov
outs
jmp
or
setb
fld
cmp
aad
jnp
push
pop
cmps
dec
out
pop
sahf
push
int3
push
(bad)
rol
add
gs
call
imul
mov
stos
or
mov
pop
push
xor
sbb
pop
push
xchg
in
jcxz
rol
movs
inc
retf
(bad)
push
(bad)
xlat
jge
retf
(bad)
imul
sub
add
jmp
ret
in
and
mov
in
gs
fdivr
jbe
inc
sti
pop
shr
xor
test
ds
outs
sti
outs
je
adc
and
popa
in
jns
cmovbe
dec
sti
mov
push
repz
js
jno
lods
ror
mov
(bad)
shl
adc
push
hlt
mov
das
test
repnz
stos
adc
jno
jecxz
lock
out
aam
loopne
mov
or
dec
in
dec
adc
ror
in
fs
or
movs
lods
mov
fld
dec
movs
inc
aaa
mov
enter
jnp
xchg
mov
mov
add
iret
or
sub
jnp
cmps
add
pop
inc
in
shr
mov
xor
loope
dec
mov
sbb
out
movs
loop
jmp
inc
shr
mov
ja
add
jns
dec
int3
dec
je
int
mov
dec
out
imul
inc
pop
mov
je
les
sbb
push
int3
mov
inc
test
imul
jb
bound
mov
pop
pop
ins
cmp
dec
jno
arpl
rcr
retf
cmp
dec
lds
add
adc
dec
fdivr
movs
pop
jnp
movups
in
into
cmp
push
jne
test
in
out
bndldx
imul
jae
push
mov
adc
jl
pop
mov
ret
(bad)
(bad)
inc
scas
xor
cwde
dec
outs
and
(bad)
js
xchg
ins
cli
retf
xor
fstp
sbb
cli
outs
push
lea
jne
mov
pusha
daa
sub
pop
mov
cdq
pop
xor
mov
fcom
fld
xlat
pop
jns
fadd
xor
(bad)
hlt
(bad)
out
(bad)
lock
shl
loopne
dec
das
dec
sahf
jbe
mov
leave
fstp
jnp
into
xchg
push
add
mov
repz
xchg
lods
cmovns
pushf
and
cmp
fdivr
in
push
loopne
fstp
sub
pop
call
mov
ret
retf
add
cwde
out
mov
push
inc
mov
pop
lods
xor
call
call
aaa
mov
mov
adc
cmps
dec
cmp
adc
test
pop
jns
xor
ss
loop
mov
mov
hlt
dec
sbb
push
call
js
call
or
cmp
addr16
jno
or
sub
adc
add
fbstp
jecxz
cli
jge
ja
sbb
ins
mov
xchg
inc
mov
lea
test
and
dec
mov
je
mov
rcl
inc
movs
in
and
fist
adc
inc
cwde
cmps
adc
ins
out
and
scas
xchg
sub
dec
cli
xor
fadd
fild
(bad)
jbe
push
cli
mov
movs
sub
jg
and
ror
xchg
pop
mov
jnp
repz
mov
nop
jmp
loope
(bad)
ins
jno
push
adc
sub
icebp
sbb
and
xchg
ret
sbb
(bad)
jmp
int
and
cdq
int
xor
stc
jle
aaa
mov
cmp
cdq
out
repz
popa
pusha
and
movs
test
add
adc
and
jae
imul
xor
fwait
mov
push
and
icebp
sub
repnz
jp
and
mov
fcomp
mov
test
xlat
je
jp
(bad)
stos
mov
add
dec
jbe
jb
pop
scas
cmp
sub
cmp
dec
jo
sbb
fisttp
ins
(bad)
in
popf
test
push
and
addr16
adc
pop
jle
shr
sbb
lds
cdq
retf
and
add
push
popa
sti
cmp
or
mov
pop
(bad)
fs
repnz
push
gs
cmp
loopne
fst
jne
adc
dec
(bad)
into
sar
cdq
icebp
gs
push
or
mov
jg
pop
cwde
sbb
pusha
jno
icebp
ja
in
or
mov
fiadd
dec
sbb
mul
dec
lods
mov
retf
adc
mov
push
pop
das
lock
xchg
(bad)
bound
and
push
add
fs
or
sbb
xor
aad
sub
(bad)
pop
cmp
clc
test
pop
xor
test
cdq
pop
jp
pushf
not
jbe
dec
les
push
ror
and
outs
je
mov
adc
jge
pop
mov
dec
(bad)
push
test
xor
dec
adc
std
mov
cli
xchg
push
popf
pop
push
fwait
loope
inc
cmp
pop
and
mov
sub
cwde
xchg
in
cwde
cmps
out
pop
jg
repz
mov
js
xchg
mov
addr16
push
aad
(bad)
xchg
cmp
inc
mov
aam
fld
das
sub
aam
xor
inc
scas
fcmove
call
aam
jmp
clc
cmps
cs
mov
sub
fsubr
imul
leave
aas
sar
pop
fld
lock
push
jmp
adc
cwde
int3
and
cwde
stc
adc
push
les
mov
call
sahf
ficomp
ret
and
adc
js
sbb
jp
fimul
and
adc
jp
shr
fs
sub
jecxz
adc
nop
movs
(bad)
rcl
call
stos
inc
dec
adc
leave
inc
and
pop
xor
mov
lds
mov
pop
out
inc
out
aaa
das
shr
stc
mov
mov
xor
fs
loopne
xor
sbb
jns
gs
sub
sahf
pop
and
lock
or
or
pop
aad
ja
mov
aad
xor
shr
and
fwait
push
aaa
outs
jns
nop
(bad)
std
pop
ja
or
in
mov
xchg
or
cmp
jecxz
icebp
mov
pop
mov
pop
fdiv
mov
dec
and
push
cld
jg
dec
ins
(bad)
cmps
fsub
sub
push
fcom
mov
fldcw
clc
test
adc
mov
add
pop
jp
fnstsw
fcom
push
xchg
repz
into
repnz
and
sub
add
leave
int3
push
pop
mov
add
paddd
in
mov
je
sbb
pop
xchg
mov
xchg
adc
jecxz
pop
lods
daa
test
push
aam
ret
fisubr
add
dec
adc
mov
or
mov
dec
shl
xchg
sbb
sbb
mov
and
movs
movs
sub
call
shl
pushf
push
xor
stc
push
adc
out
fwait
(bad)
jle
in
and
ror
arpl
and
or
pop
loopne
mov
mov
jg
xor
push
stos
(bad)
shl
fucomp
sbb
adc
dec
neg
xchg
jge
add
jb
inc
test
pcmpgtb
adc
push
out
loop
cli
stos
add
ds
and
lds
jg
std
sub
stos
in
test
sbb
test
inc
xor
es
(bad)
push
sub
icebp
pop
leave
lods
mov
push
scas
les
mov
iret
xlat
ficom
not
xchg
out
fs
dec
mov
mov
add
jnp
out
xor
and
test
mov
(bad)
outs
in
cs
mov
imul
(bad)
call
clc
xchg
cmps
popa
jecxz
and
int3
out
stos
dec
pushf
lock
fistp
outs
push
js
mov
jp
jmp
fist
push
or
das
pusha
mov
into
mov
hlt
xchg
out
mul
xchg
es
inc
sbb
ja
adc
mov
mov
and
nop
jns
or
ud1
and
(bad)
pop
stc
mov
mov
jmp
mov
sbb
dec
push
inc
shl
mov
dec
and
add
repnz
jns
xchg
adc
mov
add
xchg
je
jbe
mov
fld
inc
fdiv
outs
cmp
mov
loop
xor
fsubr
mov
(bad)
inc
gs
pop
inc
add
fidivr
cli
xor
mov
ja
xchg
and
xor
out
inc
sbb
fild
fwait
push
dec
mov
or
cwde
jne
push
dec
mov
jecxz
xchg
(bad)
lock
shl
scas
stos
iret
sbb
mov
(bad)
into
pop
cwde
pop
cmp
mov
xchg
std
mov
jge
pop
jle
push
out
xchg
clc
loop
cmp
aaa
xor
leave
pop
dec
push
push
mov
cmc
imul
movntps
xchg
dec
mov
je
rcl
sbb
xor
test
test
or
dec
fcmovbe
inc
or
jns
(bad)
ja
sahf
xor
bound
cmp
xor
mov
push
push
sbb
pop
ja
jmp
(bad)
pop
ss
push
mov
popf
and
retf
js
and
cmp
xor
push
aam
inc
div
inc
xor
sbb
aas
and
(bad)
xor
push
lds
xchg
fisttp
(bad)
and
lds
hlt
fwait
jmp
in
pop
cdq
inc
xchg
mov
cmps
test
mov
repnz
imul
jo
adc
sub
(bad)
and
sar
jbe
fmul
mov
adc
jne
sub
add
xchg
mov
popf
push
neg
jp
outs
pop
js
or
into
dec
cvtpi2ps
fsub
loop
xchg
jg
mov
fwait
and
ja
sti
mov
jp
or
sub
dec
jmp
adc
pushf
mov
test
pop
or
outs
sub
xchg
pop
imul
ds
dec
add
loop
ja
and
jb
mov
lods
mov
dec
lods
fucomp
mov
add
out
rol
pushf
shr
gs
inc
int
inc
scas
sub
add
addr16
dec
int3
outs
pop
fs
xchg
push
mov
mov
pop
or
xchg
(bad)
(bad)
or
clc
xchg
pop
imul
outs
push
cmps
fcmovnu
xchg
aaa
jle
xchg
popf
daa
clc
or
cmc
arpl
or
cmc
jmp
push
mov
push
rcr
stc
lahf
mov
push
mov
ret
sahf
xchg
les
bound
retf
inc
jmp
cli
push
cs
mov
xor
jne
int3
dec
push
add
out
sbb
jbe
push
push
outs
arpl
xchg
add
ins
dec
add
pop
(bad)
out
int3
jbe
popa
mov
aas
aam
or
adc
cld
in
cmps
adc
lods
out
jne
push
div
out
shr
rcr
sahf
dec
xchg
clc
pushf
add
or
sbb
add
fwait
test
test
ss
or
fwait
in
outs
mov
sbb
popf
addr16
mov
adc
mov
lahf
jno
test
xchg
inc
mov
dec
sbb
pusha
mov
and
jbe
lds
cdq
retf
out
iret
jae
cmp
(bad)
mov
pop
jecxz
mov
mov
leave
test
xor
dec
imul
data16
je
push
mov
arpl
add
inc
sub
mov
mov
xor
jno
je
scas
imul
jns
add
xor
cmc
(bad)
mov
daa
(bad)
xchg
lods
sbb
mov
mov
mov
inc
retf
xor
cmp
pop
sbb
sbb
in
into
xchg
loope
or
in
shr
inc
arpl
mov
popa
es
fld
lahf
push
mov
cdq
shr
jge
clc
aad
sub
(bad)
cli
loope
arpl
rcr
push
sbb
cmc
mov
or
outs
adc
fwait
push
fucom
sub
mov
jns
not
(bad)
sbb
call
aaa
jl
leave
mov
outs
and
fmul
jle
sbb
sub
adc
push
push
and
add
mov
mov
dec
pop
mov
lahf
push
xchg
sub
(bad)
mov
add
push
cmp
jge
pop
adc
mov
aad
mov
or
sbb
mov
or
push
fsubr
sub
push
dec
stos
mov
mov
lea
jmp
cmp
sbb
jb
mov
push
dec
mov
sub
cmc
out
test
imul
lahf
lahf
push
sar
movs
xchg
xchg
loop
sub
push
cmc
adc
dec
stos
push
inc
mov
sbb
push
sub
aad
rcl
adc
adc
pop
add
iret
cmp
sar
mov
mov
imul
(bad)
mov
jno
cmp
(bad)
loopne
mov
sbb
popa
aas
inc
test
ds
cdq
mov
cmp
and
pop
add
mov
pushf
hlt
add
mov
shl
dec
mov
call
psllq
mov
push
xchg
xchg
sar
stc
or
cs
mov
add
add
inc
ds
xlat
mov
inc
jns
mov
pop
in
mov
and
jbe
aad
in
div
ret
xlat
in
jnp
aas
mov
and
and
mov
or
xor
xchg
cmp
aas
shl
stos
in
jne
mov
retf
mov
xor
or
int3
addr16
les
add
dec
test
fnstenv
out
js
(bad)
cmp
mov
not
xor
mov
cwde
sbb
mov
aad
fnstenv
dec
lods
call
retf
xchg
or
push
pop
fwait
ins
jbe
ror
mov
mov
cmps
jmp
out
loope
push
mov
mov
nop
imul
jecxz
push
or
push
push
and
inc
retf
and
(bad)
cmp
mov
mov
sub
(bad)
push
inc
jo
xor
call
or
mov
dec
add
push
push
ret
not
cli
popf
inc
mov
div
xchg
mov
cld
add
addr16
or
cmc
out
lods
inc
xchg
neg
sub
inc
and
scas
cdq
js
add
jbe
cs
add
popf
ret
sub
sbb
jg
adc
repz
mov
(bad)
push
sbb
cmp
adc
icebp
xor
sub
cmp
shl
mov
repz
and
sbb
ficomp
(bad)
in
jmp
out
and
mov
cli
mov
jmp
ins
fcomp
mov
call
ins
mov
inc
(bad)
xor
or
and
jae
inc
add
retf
adc
jo
or
xchg
xor
add
or
(bad)
in
fldenv
add
jmp
dec
test
jae
and
pop
test
inc
jl
cmps
outs
lahf
cs
fwait
lock
imul
movs
enter
test
out
int
(bad)
lods
jae
mov
ret
fisubr
in
inc
push
call
xchg
mov
jl
mov
scas
into
retfw
or
or
push
jp
ret
js
es
in
ins
xor
fcomp
(bad)
or
lds
mov
mov
in
jno
xchg
ds
dec
inc
cwde
test
lods
movs
ss
mov
int3
mov
pop
fcomp
xchg
dec
mov
lods
jae
mov
dec
ror
inc
in
enter
mov
retf
or
jle
scas
ss
rcr
out
push
dec
dec
push
add
pop
ror
adc
pop
push
sahf
mov
out
and
scas
outs
or
or
sbb
clc
push
mov
outs
es
aas
neg
mov
leave
cli
fcomp
fcmovb
push
mov
add
stc
sub
jl
(bad)
les
or
sub
aam
loop
push
mov
sbb
mov
sbb
jno
dec
std
jmp
lahf
nop
gs
xor
inc
push
push
cmp
movs
test
cwde
jne
arpl
in
jl
add
pop
sahf
(bad)
stc
adc
jge
ror
sbb
(bad)
iret
push
and
int3
cmps
out
add
dec
adc
cwde
inc
addr16
add
xchg
add
stos
sub
aam
lods
xor
adc
and
cmp
fwait
ins
pop
xor
sub
pop
or
movs
mov
push
sub
cmp
loopne
xor
push
add
push
(bad)
cmp
clc
les
out
sbb
jge
pop
dec
stos
in
mov
(bad)
aaa
call
inc
(bad)
repnz
mov
mov
xchg
in
sub
mov
dec
add
ret
popf
xchg
cli
jl
sbb
cmp
jmp
fisub
mov
xlat
lods
xchg
and
lds
ror
push
mov
adc
and
mov
out
stos
mov
aaa
fisttp
dec
fisub
push
scas
add
lea
not
test
mov
pusha
dec
nop
shrd
mov
ins
out
and
stos
lea
pusha
cs
xor
ins
pop
test
and
in
or
stos
push
mov
jbe
cmp
pop
imul
push
lock
jnp
and
cmps
jo
xchg
clc
dec
mov
inc
test
jbe
xchg
mov
pop
inc
xor
jae
addr16
dec
aad
pop
push
mov
cmp
lea
adc
cmp
and
jle
jge
inc
xchg
leave
(bad)
and
jmp
cwde
push
or
mov
add
aam
jmp
push
cmp
xor
fwait
mov
mov
arpl
xor
jl
push
or
leave
jbe
inc
pop
fdiv
imul
inc
inc
cmp
lahf
imul
cli
xor
add
fs
xchg
cmps
fdivr
imul
retf
sub
cmp
or
lods
mov
jmp
add
and
inc
je
sbb
mov
(bad)
rol
push
dec
loop
and
movs
cmp
les
xchg
xchg
pop
ins
jno
pop
xchg
fwait
cld
adc
dec
add
loope
jbe
sub
rcl
xchg
enter
lods
lock
mov
xor
loope
ss
add
cmp
push
pop
fwait
int
sti
xchg
add
popf
hlt
xchg
xor
sbb
(bad)
jecxz
sub
rcr
push
and
popf
dec
add
or
xchg
adc
pop
xlat
call
jecxz
mov
push
xchg
out
dec
dec
ret
shl
popa
(bad)
arpl
icebp
(bad)
fidiv
and
fucomip
lods
mov
inc
dec
dec
movs
sub
add
(bad)
push
in
cmp
arpl
movs
push
adc
dec
call
cmp
sti
push
popf
ficom
gs
ins
(bad)
push
lahf
cmp
rcr
lock
nop
push
pop
xor
sbb
push
pop
cwde
mov
jne
push
(bad)
cmps
fild
xchg
xchg
push
sub
adc
pop
cli
sbb
push
add
je
and
js
add
sbb
push
outs
sbb
jnp
xchg
test
popa
bound
dec
mov
pop
xchg
das
std
cmc
push
loopne
fwait
sub
iret
fstp
cli
cmps
repz
sub
pop
xchg
cmp
int3
jl
sbb
adc
inc
jl
mov
xor
mov
xor
push
stc
and
nop
cmp
shl
ret
and
dec
sub
mov
imul
adc
movs
out
inc
loop
pushf
dec
xchg
icebp
inc
xchg
and
mov
cmps
add
pop
and
lahf
outs
sbb
mov
and
mov
dec
jmp
add
add
push
cmp
stc
data16
shl
or
adc
sub
jae
and
hlt
and
cmp
mov
inc
repnz
ret
test
imul
inc
cmp
mov
inc
push
and
xor
jg
add
sbb
mov
out
test
sbb
xchg
cld
or
into
arpl
pop
in
repnz
or
jo
sub
jmp
and
and
xchg
lea
fs
stos
mov
gs
int
jmp
stos
mov
push
add
cmp
xchg
into
cli
test
sub
shl
loop
mov
mov
(bad)
pusha
(bad)
repnz
pop
and
rcr
(bad)
imul
xlat
neg
mov
mul
push
or
loop
rcr
repnz
pusha
mov
mov
sub
ret
dec
je
lock
popa
call
stc
pop
popa
enter
pop
scas
sar
and
je
mov
retf
dec
loop
pusha
jmp
pop
rcl
or
dec
pop
ret
movs
mov
fisttp
adc
stos
shr
out
mov
xor
repnz
cmps
adc
lea
lods
cmp
test
inc
jae
inc
jno
xchg
aaa
xlat
mov
sub
aas
jecxz
inc
sti
fdiv
loop
mov
das
xchg
in
mov
mov
xchg
loop
das
xchg
cmp
inc
mov
lods
pop
xchg
pop
cmp
sub
mov
jl
mov
inc
dec
std
xor
mov
daa
dec
bound
in
fs
inc
adc
add
retf
movs
pop
jb
sub
aad
xor
mov
(bad)
dec
mov
movs
xchg
icebp
xor
aad
and
dec
adc
push
jae
xor
lea
or
mov
stos
fs
pop
leave
ret
or
lods
push
and
jmp
mov
mov
mov
lahf
cmps
rcr
xor
add
in
xor
fld
and
dec
aam
pop
daa
test
pusha
pop
jg
retf
sbb
ds
add
mov
sbb
jl
xchg
jmp
out
stos
aas
adc
push
pop
dec
scas
xchg
ss
(bad)
dec
fdiv
mov
mov
neg
mov
aad
frstor
mov
(bad)
ja
loopne
add
loopne
sbb
mov
daa
sub
adc
adc
sbb
popf
in
mov
dec
es
add
or
xchg
xchg
jmp
push
call
mov
stc
mov
pop
ds
outs
jmp
xor
mul
popf
mov
mov
mov
bound
or
ret
shr
je
or
dec
lock
sbb
inc
sub
mov
dec
out
loop
jg
in
movs
push
push
push
call
addr16
pop
cmp
ret
call
adc
jl
dec
sub
aas
movs
inc
inc
clc
pop
loopne
arpl
in
aaa
mul
or
shr
int
int
pop
jnp
pop
imul
xchg
pop
cmps
jmp
push
repnz
jg
cli
das
cmp
push
cli
dec
sbb
cmp
retf
xchg
xchg
sub
shl
jmp
push
xchg
dec
repz
shr
(bad)
mov
mov
mov
pop
mov
add
repz
xchg
adc
repz
(bad)
jnp
cmp
cmp
dec
popa
rcr
inc
add
mov
pop
test
dec
sub
aam
or
cmps
(bad)
jb
arpl
and
mov
or
out
scas
addr16
pop
xchg
mov
and
not
pop
loopne
mov
xchg
(bad)
sub
xchg
lea
outs
(bad)
push
jo
push
aam
pushf
(bad)
fstp
inc
stos
pop
inc
fwait
or
push
ret
inc
sub
jle
shl
out
jle
mov
sbb
mov
ss
fs
adc
and
inc
adc
stos
pop
cwde
rol
fwait
arpl
push
ds
(bad)
push
(bad)
mov
fwait
jge
dec
dec
jae
sbb
push
out
sub
cmp
int3
ins
dec
jmp
cmc
xor
ins
cmc
xor
out
adc
and
push
imul
pop
and
call
adc
es
aas
sbb
dec
xor
mov
add
xchg
jp
lock
repz
fsub
mov
loopne
pop
out
mov
lahf
fcomp
adc
les
rcr
(bad)
retf
mov
ret
push
fdiv
in
xor
jecxz
out
push
iret
int3
out
(bad)
mov
sbb
retf
push
imul
movs
pop
xchg
push
ret
std
movs
mov
and
and
push
aam
xchg
cs
test
dec
xchg
xor
jnp
adc
nop
lock
add
rcr
cmp
jmp
imul
push
sbb
or
les
sbb
int3
mov
stc
inc
bnd
mov
jle
test
sub
pop
sbb
cwde
xchg
aam
jmp
jbe
in
mov
jbe
adc
xchg
cmps
and
xor
iret
and
xchg
push
pop
inc
cmp
daa
lds
inc
inc
add
shl
js
fisttp
repnz
aad
sub
mov
xchg
div
daa
mov
push
mov
jns
xor
out
gs
in
pop
pop
push
jle
dec
mov
movs
xchg
xchg
imul
lods
stos
push
or
or
call
les
mov
mov
das
pop
sbb
loopne
(bad)
mov
outs
dec
mov
jne
in
and
retf
push
cdq
(bad)
lods
imul
xchg
gs
xchg
sub
rol
xor
mov
sub
cmp
mov
sub
retf
xchg
retf
and
jmp
cmp
les
dec
out
push
leave
mov
daa
out
pop
inc
in
push
or
clc
sahf
jl
ret
and
out
scas
or
inc
xor
imul
inc
dec
dec
mov
pop
jne
pop
(bad)
int
pop
pop
xchg
retf
mov
daa
sbb
lods
stc
jnp
addr16
dec
pop
(bad)
mov
pushf
in
ds
and
icebp
mov
jle
adc
(bad)
sbb
ret
mov
inc
jmp
fstp
push
cmp
jns
inc
mov
jnp
jmp
sub
test
rol
xchg
not
movs
mov
std
mov
inc
lods
movs
adc
dec
and
ss
in
shl
out
ds
imul
adc
test
push
and
mov
push
xchg
add
ds
es
(bad)
in
inc
lods
jno
xor
in
adc
call
xor
mov
not
add
lods
shl
fisttp
or
repz
mov
nop
cdq
pop
jmp
jmp
clc
arpl
jmp
loope
scas
mov
test
mov
jne
(bad)
retf
pop
or
loope
inc
cmps
(bad)
jns
cmc
jmp
ja
xlat
lds
dec
jns
dec
mov
sub
mov
popa
sbb
push
clc
mov
repz
push
sbb
ds
into
xchg
push
mov
lahf
push
mov
ror
cmp
cmc
sub
out
inc
sbb
mov
push
mov
ins
stos
adc
in
dec
mul
cld
enter
pop
gs
mov
xchg
loope
inc
movs
jnp
add
(bad)
daa
in
sti
sub
scas
jbe
sub
repnz
jg
mov
in
pop
pop
mov
xor
push
addr16
inc
and
xchg
enter
add
push
outs
call
cmp
sbb
mov
hlt
rol
push
retf
mov
pop
and
in
ins
sub
or
jmp
cmp
lods
je
rcl
mov
sbb
mov
push
push
mov
ss
(bad)
push
lds
je
sub
hlt
leave
(bad)
test
rcl
add
push
jmp
mov
cmp
imul
sbb
push
jecxz
or
fwait
push
jbe
pop
push
aam
inc
add
mov
pushf
out
sub
mov
test
in
call
jle
aad
and
sti
rcl
jno
or
xor
cmp
movs
mov
popf
mov
(bad)
out
mov
imul
mov
and
lds
xchg
push
stc
sbb
je
jns
or
arpl
addr16
nop
pop
dec
adc
cmp
fwait
lahf
cmps
pop
jl
xor
adc
stc
sbb
sub
out
stos
imul
test
add
mov
push
jne
mov
sar
(bad)
ins
jmp
lods
add
lds
push
mov
ret
lea
(bad)
mov
dec
mov
test
pusha
and
ret
jecxz
push
xchg
test
mov
inc
std
dec
hlt
ret
repz
leave
jecxz
bound
add
cmp
mov
inc
mov
hlt
lods
gs
jmp
push
xchg
lods
push
lock
mov
inc
pop
mov
out
adc
hlt
test
in
dec
pop
dec
mov
mov
cli
pop
mov
cmp
and
ficom
jmp
int
cwde
pusha
pushf
nop
jne
mov
jl
repz
sbb
xchg
mov
lahf
mov
daa
mov
inc
sbb
sub
fdivrp
pop
movs
sub
push
and
popa
sbb
outs
adc
cmp
fist
push
and
and
lea
xchg
(bad)
fsubr
fwait
add
shr
(bad)
push
das
jmp
jo
or
jg
pop
sbb
jno
mov
add
out
cmp
mov
or
cdq
cmc
std
fidiv
add
fcom
adc
out
mov
cmp
cmc
sbb
dec
retf
fs
ja
(bad)
pop
adc
fistp
push
jb
mov
sti
pop
adc
(bad)
mov
(bad)
cmp
xchg
loope
and
push
jg
lods
add
stos
xchg
and
(bad)
pop
ins
jmp
popf
adc
arpl
lgs
mov
sbb
sub
loopne
xchg
and
pop
mov
dec
dec
xlat
inc
xchg
dec
adc
shl
pop
or
xor
jmp
adc
rcl
leave
jle
shl
(bad)
mov
xor
or
adc
cld
lahf
fild
ret
movs
xchg
cmps
mul
pop
ss
cmp
sti
or
jno
and
mov
stos
cs
push
mov
inc
sbb
sahf
and
das
xor
fdiv
movs
imul
xchg
cmps
jae
test
fnsave
sti
mov
rol
out
add
push
imul
test
adc
fs
(bad)
(bad)
clc
pop
pop
or
jne
dec
fwait
movs
push
jb
cli
or
pop
mov
sahf
push
push
fsubr
jl
pop
cmps
sbb
push
iret
pop
inc
push
dec
mov
out
xor
mov
mov
rol
aas
jno
shl
cmp
js
daa
xor
leave
je
push
aas
mov
jge
fistp
scas
and
bound
fist
rol
dec
inc
out
mov
or
jb
shr
jno
dec
add
iret
gs
add
sub
mov
les
adc
repz
(bad)
aaa
jne
mov
call
ins
in
and
mov
mov
push
xchg
or
xchg
xchg
adc
test
push
movs
push
adc
mov
xchg
xor
dec
mov
push
outs
push
pop
daa
dec
xor
add
out
xchg
xchg
cmp
xor
into
mov
xor
cmps
retf
push
mov
push
xor
dec
push
sub
mov
outs
inc
inc
dec
test
or
xchg
inc
ror
fnstsw
mov
adc
pop
stos
adc
(bad)
les
sbb
sub
jle
cmp
(bad)
push
(bad)
sub
mov
or
loop
out
arpl
(bad)
in
xchg
aaa
pop
adc
adc
ins
call
mov
ficomp
sbb
ss
test
pop
add
lock
mov
pop
loop
or
sbb
ja
fcomp
add
mov
cmp
dec
daa
ror
adc
dec
dec
dec
pop
dec
sbb
leave
pop
paddsb
fld
repz
sahf
sahf
xor
or
pop
into
mov
out
mov
adc
inc
xlat
ret
xchg
ds
jne
sub
mov
popf
pushf
ret
into
pusha
test
clc
nop
fmul
in
loopne
mov
iret
inc
es
add
adc
(bad)
and
outs
loop
(bad)
out
call
ficom
adc
mov
shr
xchg
call
ret
aam
shr
mov
dec
ja
bnd
data16
mov
div
mov
dec
mov
enter
enter
aad
jecxz
adc
test
(bad)
mov
(bad)
jns
mov
popf
xchg
pop
(bad)
push
call
xor
push
or
adc
pop
movs
cmp
ror
sar
aas
inc
jecxz
adc
movs
mov
xor
arpl
push
sub
std
add
daa
loop
into
cmc
pop
mov
fbld
bound
lock
fnstenv
out
int
pushf
stos
call
lock
test
int3
add
shl
pop
cmp
dec
(bad)
test
dec
or
repnz
fwait
xor
inc
ret
fdivp
jp
sbb
jno
sub
fsubr
adc
sbb
mov
xor
dec
movs
inc
xchg
std
sbb
sub
push
loope
and
lods
loopne
xor
mov
test
jae
pop
mov
imul
jae
mov
mov
mov
dec
sub
jno
inc
leave
sub
out
xchg
jno
imul
cmc
out
adc
jbe
gs
nop
cmps
pop
popf
push
fadd
and
xor
dec
popf
lock
inc
sub
jge
pop
call
gs
popa
inc
stos
rol
outs
cmps
adc
and
xor
inc
(bad)
jne
push
add
dec
add
data16
into
sbb
sub
mov
xchg
cli
cli
and
movs
push
inc
and
loope
push
pop
sub
push
inc
mov
lods
shr
repz
add
ror
inc
xchg
mov
pop
inc
lock
addr16
cmp
jecxz
test
pop
or
cmc
xchg
popa
pop
dec
xchg
jno
xor
fstp
cli
mov
mov
jo
lahf
sub
retf
mov
mov
pop
mov
mov
push
or
aad
(bad)
dec
mov
aad
push
fsub
pop
mov
fs
sbb
cmp
sbb
out
jecxz
xchg
cmp
cld
sbb
ss
ss
loop
mov
sbb
xchg
aam
jne
aas
push
iret
mov
fidiv
scas
jge
aaa
xchg
or
pop
test
int
push
ss
mov
adc
in
retf
ret
mov
out
sbb
inc
dec
inc
mov
(bad)
or
and
mov
or
fwait
xchg
pop
dec
mov
leave
push
mov
stc
mov
daa
(bad)
iret
lahf
or
push
inc
cmc
movs
sub
push
jbe
jle
mov
(bad)
dec
aas
push
mov
mov
cmp
arpl
sub
icebp
sub
inc
add
mov
imul
dec
jb
mov
or
jae
in
sbb
mov
jge
pusha
vphaddubw
add
fs
push
gs
push
ficom
mov
cmps
xchg
jb
cmc
push
adc
retf
push
add
mov
std
lea
cmp
dec
pop
add
and
in
popf
jmp
or
leave
sub
fwait
and
mov
mov
repnz
pop
call
mov
sub
mov
pushf
mov
xchg
rcr
dec
(bad)
dec
add
ins
sahf
sbb
daa
xor
cli
push
mov
pop
inc
and
test
inc
outs
jecxz
call
(bad)
ret
mov
xchg
bound
lahf
xchg
jg
mov
xor
test
std
adc
aas
call
fcomip
rcl
cmp
xlat
push
js
ror
pop
test
fpatan
jecxz
add
adc
xor
cmp
mov
int
(bad)
and
imul
into
sbb
fcom
movnti
ja
retf
xor
shr
int
add
cld
mov
mov
mov
xchg
mov
bound
jle
mov
dec
fcom
inc
popf
out
cmp
and
xchg
jecxz
pop
aam
add
mov
mov
cmc
xchg
pop
push
addr16
add
mov
push
cli
add
retf
mov
imul
jnp
in
sbb
frstor
mov
lock
push
push
retf
sub
icebp
test
push
xchg
cmp
sahf
int
sti
sub
sar
adc
out
ins
mov
ds
sahf
xor
push
lods
adc
mov
and
mov
or
test
jo
retf
cmps
dec
icebp
retf
jmp
mov
ficomp
mov
sbb
repz
dec
stos
pusha
aad
mov
mov
les
adc
cmp
mov
sbb
add
push
test
outs
ret
and
and
inc
or
inc
dec
jg
sub
mov
push
cld
dec
sbb
xchg
fdivp
xor
pop
out
jo
mov
inc
jae
fs
push
xchg
jb
jmp
add
cwde
cmp
idiv
ins
push
mov
pop
sbb
call
push
adc
or
or
push
mov
jmp
cmp
je
aas
jg
in
ror
dec
pop
xchg
cld
mov
call
dec
les
pop
pushf
movs
jno
nop
ret
fs
jne
call
adc
pop
aam
(bad)
fstp
arpl
mov
(bad)
and
(bad)
jge
dec
nop
aaa
add
stos
and
lahf
jle
scas
mov
pop
cs
jmp
xlat
mov
mov
mov
adc
jl
mov
scas
das
(bad)
mulps
repnz
jp
dec
push
and
stos
pop
inc
adc
es
xchg
dec
sub
clc
and
cmp
test
lock
nop
ret
mov
imul
push
mov
push
out
xor
ds
adc
gs
(bad)
xor
mov
rcr
mov
aad
inc
mov
mov
mov
jnp
call
repnz
in
xor
adc
enter
mov
inc
and
push
cwde
in
jnp
dec
sbb
inc
xor
cld
mov
jmp
pop
repz
shl
mul
and
outs
xor
or
push
push
test
sahf
or
(bad)
sbb
dec
dec
or
pop
adc
inc
mov
cdq
movs
mov
test
mov
sbb
xor
sub
fisub
leave
pop
inc
or
rcl
inc
sub
enter
cmps
jb
push
and
mov
adc
push
xor
push
push
xchg
xchg
inc
jb
lods
fnsave
pushf
popf
sar
pushf
dec
fisubr
out
xchg
xchg
hlt
inc
or
cli
jnp
adc
jl
in
or
sub
int
push
jb
(bad)
mov
out
cmp
mov
mov
jae
lea
in
imul
rol
aaa
lods
daa
mov
push
dec
test
mov
(bad)
push
xor
adc
sub
loop
pop
into
repnz
cs
xor
push
js
fdivr
dec
imul
ds
out
cdq
pop
or
and
loop
movs
shl
mov
cmp
xor
fs
add
call
cwde
mov
mov
pop
in
jle
fimul
cdq
push
mov
mov
cld
mov
mov
shr
mov
bound
sub
lea
shl
mov
push
cli
mov
fmul
cmp
stos
outs
mov
es
int3
test
push
jecxz
sub
dec
icebp
jg
call
stos
sbb
sub
jl
xlat
stc
iret
jmp
add
dec
jl
in
cmp
in
int3
dec
and
add
sub
loopne
cld
ja
pop
xchg
movs
add
int3
js
or
int3
sbb
sbb
jo
setl
sub
push
dec
rol
ret
mov
inc
loopne
int
lods
cli
xchg
cmp
pop
scas
add
mov
sbb
cmp
inc
inc
fild
lods
jmp
sub
or
mov
jp
call
pop
and
sti
js
je
ds
xchg
mov
lds
pop
sbb
dec
pop
call
sub
hlt
inc
mov
xchg
dec
cwde
leave
or
xor
sti
inc
sub
adc
xchg
mov
dec
adc
jp
add
jno
in
and
(bad)
inc
sbb
hlt
jl
inc
movs
jo
clc
fadd
or
stos
cmp
in
inc
pop
fdiv
jg
sub
cwde
or
div
(bad)
sti
sti
int3
pop
rcr
ds
sub
shl
icebp
fwait
std
ds
lahf
xchg
sbb
imul
jmp
es
stc
xchg
jmp
rol
xor
adc
xor
(bad)
arpl
jae
std
inc
(bad)
fcomp
setnp
mov
dec
add
or
mov
dec
out
dec
or
(bad)
fs
xchg
pop
xlat
pop
mov
sub
adc
dec
rol
das
jecxz
aad
pop
cmp
lods
or
dec
pop
xchg
rcl
imul
dec
dec
push
test
pop
add
lods
add
dec
frstor
in
jnp
add
cmp
sub
sub
in
fsub
mov
aas
add
inc
fstp
into
test
cli
cmp
rcl
retfw
fist
call
inc
call
xchg
mov
(bad)
jp
pop
push
cdq
xchg
or
enter
push
inc
int3
sbb
pop
jb
fwait
sbb
bound
and
jge
jl
fsubr
mov
or
nop
jle
xchg
push
stos
addr16
lahf
sbb
pop
sti
adc
pop
push
into
lods
popa
adc
das
pop
xchg
mov
fwait
add
dec
je
pusha
jnp
iret
mov
ins
add
test
cmc
dec
xchg
push
inc
outs
fwait
push
mov
xchg
jmp
cmps
shr
jmp
sub
into
adc
imul
sbb
(bad)
mov
jns
mov
adc
push
ins
sub
es
xchg
imul
cmp
ror
repnz
pop
ds
arpl
shufps
lods
out
test
fld
stos
mov
addr16
pop
test
mov
mov
or
or
jmp
jmp
mov
scas
pop
rol
mov
icebp
repz
dec
call
mov
or
stos
je
jnp
pop
xor
mov
cdq
sbb
sbb
cs
cmp
nop
xchg
cmc
push
pop
ret
int3
push
mov
cmp
ja
scas
icebp
pop
aas
inc
cmp
(bad)
mov
ja
mul
test
mov
lds
pushf
mov
pop
jge
loopne
pop
popf
sbb
cmp
lock
aas
sub
in
in
fidivr
push
lods
in
rcl
arpl
sbb
ins
push
cmp
pusha
sub
outs
fldcw
out
pop
jo
pop
push
dec
imul
jl
stos
xor
sti
and
sti
pop
add
push
mov
lock
int
pop
retf
adc
xor
ins
aas
mov
and
inc
or
pop
std
stos
leave
adc
(bad)
outs
mov
xor
ins
cmp
adc
loop
cmp
mov
clc
xchg
popa
stos
test
xchg
aad
sub
sbb
sub
test
xor
mov
mov
cdq
dec
mov
mov
rcr
dec
mov
push
pop
mov
or
out
out
or
enter
test
std
cmps
dec
das
aad
(bad)
loope
in
cli
dec
test
mov
inc
cmp
enter
xchg
jmp
idiv
add
cmp
inc
test
or
pushf
f2xm1
loope
jg
inc
sbb
cmp
dec
add
and
mov
push
out
sub
movs
sbb
mov
xchg
sub
stos
repnz
lds
mov
shl
mov
push
mov
xor
mov
call
and
fist
mov
fdiv
lahf
daa
cmp
xchg
mov
retf
cmp
mov
mov
xchg
fnstsw
out
bound
mov
fisub
jle
in
mov
pop
ins
call
xor
mov
call
jne
xor
outs
mov
adc
jmp
not
mov
push
and
stos
dec
ja
fild
cmps
mov
push
sub
push
mov
and
mov
mov
lods
add
pop
jp
or
inc
sub
loope
fst
gs
(bad)
push
sbb
inc
movs
jb
push
cmps
loope
gs
fnstsw
jbe
stc
mov
cmp
arpl
shl
sub
sbb
mov
add
mov
jp
dec
jo
je
inc
add
int
retf
dec
push
aam
sbb
imul
sbb
in
xchg
loopne
inc
adc
aam
out
and
gs
jb
(bad)
gs
xchg
sti
idiv
mov
cwde
or
enter
(bad)
in
dec
pop
or
scas
sbb
scas
pop
std
mov
mov
pop
adc
lahf
fsub
jmp
push
fdiv
or
ins
xor
jmp
gs
inc
mov
jbe
mov
repnz
in
dec
mov
aam
std
inc
call
jl
sahf
xchg
test
sti
(bad)
cmp
xchg
inc
jns
cmp
fldenv
mov
mov
repz
mov
dec
popa
cmps
mov
push
cmc
or
mov
jb
mov
call
in
scas
mov
jecxz
loope
jns
test
jg
popf
jmp
fstp
ss
add
push
call
hlt
pop
pop
dec
pop
rcr
xor
rcl
ins
push
not
inc
mov
sbb
in
sub
cmp
dec
mov
jmp
ret
push
sti
pop
sbb
adc
jb
jle
(bad)
ss
inc
push
push
xchg
and
mov
call
xor
dec
mov
push
ret
or
sbb
jbe
out
xor
fiadd
lock
or
data16
pop
push
lock
pop
imul
add
arpl
iret
or
cmc
adc
cdq
jns
ret
movs
ret
retf
mov
jo
xchg
(bad)
js
pop
movs
mov
leave
or
pop
push
mov
dec
das
pop
stc
push
and
xor
stos
(bad)
stc
daa
mov
jmp
std
cmc
imul
test
ins
sbb
adc
stos
xchg
xor
daa
jnp
sub
jns
popf
push
adc
outs
movs
and
iret
in
loopne
xlat
jne
mov
inc
retf
in
cwde
jmp
xchg
je
mov
push
pushf
mov
jp
xor
dec
fidiv
push
scas
fild
jp
push
pop
cmp
jmp
sbb
ins
out
stos
sbb
ins
mov
cdq
fcomp
popf
or
and
retf
je
xchg
lea
jl
cli
add
mov
hlt
aaa
mov
xchg
inc
push
inc
jb
cdq
fdivr
pop
sub
rol
(bad)
call
xlat
shr
push
out
cmc
mov
cmps
dec
lods
(bad)
sub
jmp
sub
sub
jp
add
ins
jmp
shr
xchg
repz
dec
into
push
mov
dec
ja
xchg
jns
mov
or
add
fdiv
pop
lahf
repnz
sub
test
in
push
ficom
into
mov
pop
xchg
jle
mov
cmp
pop
pop
bt
outs
xchg
xchg
adc
aam
cmc
mov
in
and
in
jecxz
mov
scas
mov
mov
repnz
jl
call
mov
adc
lahf
(bad)
jnp
jl
outs
mov
xchg
enter
(bad)
lock
movs
dec
sbb
or
retf
push
sbb
mov
push
popa
enter
dec
lock
test
sbb
mov
in
xchg
xor
lds
cmps
ins
and
es
imul
ss
bound
or
movs
push
pushf
imul
(bad)
push
ins
fsubr
push
xor
jne
fstp
lahf
clc
add
fnsave
lds
mov
add
sub
cmp
out
gs
enter
inc
and
fidivr
ret
and
lods
jg
in
pop
cld
dec
pop
jbe
inc
gs
pop
push
mov
dec
loop
(bad)
xchg
imul
out
jmp
xchg
retf
add
fstp
aam
les
loop
ja
imul
scas
out
sbb
pop
ins
outs
jmp
push
cmp
outs
call
scas
in
xchg
mov
xchg
push
in
ret
cmp
mov
dec
sbb
in
lods
cmp
push
pushf
jge
test
pushf
cmps
mov
lahf
mov
jmp
inc
popa
pop
push
cvtps2pi
sahf
mov
push
gs
in
xchg
mov
cmc
pop
(bad)
pop
sub
mov
cli
das
add
cmp
inc
push
fidivr
push
jge
mov
push
out
imul
ins
jp
sbb
adc
xor
sub
fsub
push
and
xor
rcr
dec
dec
ret
bound
(bad)
jnp
repnz
idiv
jmp
sbb
sti
mov
pop
push
sbb
in
cwde
out
mov
(bad)
or
sti
inc
(bad)
xlat
jns
mov
adc
xor
adc
xchg
test
inc
test
loope
sbb
movs
sub
cld
jne
add
cmp
pop
retf
sub
jle
mov
rcl
mov
std
js
and
push
aam
push
not
mov
inc
jns
jnp
fidiv
dec
repz
popf
in
ins
mov
push
pusha
in
jge
int
xchg
(bad)
loop
mov
push
or
out
jne
(bad)
sub
push
ss
jp
and
lods
out
ret
push
and
push
adc
xor
std
fs
lea
cmp
adc
pop
adc
rol
pop
dec
mov
(bad)
into
jmp
out
push
ins
inc
ret
(bad)
xor
(bad)
clc
mov
pop
repz
adc
js
add
pop
daa
jecxz
mov
jno
mov
jecxz
popa
clc
bnd
dec
jge
jae
cmp
pop
pop
js
sub
mov
sbb
jmp
mov
dec
cmp
or
lahf
sbb
sub
mov
jno
(bad)
pop
adc
ss
bound
adc
cmps
stos
mov
push
adc
jb
lahf
imul
fcom
lock
mov
ret
icebp
fs
cmps
or
(bad)
xor
add
hlt
arpl
mov
jmpw
jo
inc
loopne
and
jns
in
in
dec
jle
enter
jp
movs
ins
jns
test
inc
sbb
or
in
imul
test
test
sahf
mov
xor
das
xlat
add
xchg
loope
pop
fisubr
rol
jns
imul
ja
movs
cli
addr16
and
scas
xchg
test
add
mov
adc
jg
xchg
cli
and
cmp
jmp
clc
sahf
sbb
xchg
inc
ins
js
cmp
xchg
pop
pop
in
xchg
jp
push
xchg
jae
add
jl
test
cmp
call
xor
daa
add
jmp
retf
retf
jno
aad
pop
xchg
ror
nop
in
push
fcomi
push
(bad)
imul
repz
or
push
test
popa
sub
out
jp
ins
xchg
jbe
jle
aas
cmp
lock
leave
mov
add
test
aas
push
loopne
mov
ret
cmp
fidiv
repnz
cmp
mov
stc
out
sub
imul
sub
aas
push
dec
addr16
leave
mov
mov
cmp
pop
ins
neg
test
mov
lahf
aaa
imul
jo
dec
jne
imul
jmp
mov
fimul
jno
xchg
mov
sbb
mov
fdiv
adc
cmp
fisub
xchg
mov
out
jnp
mov
les
(bad)
dec
icebp
dec
jmp
mov
push
push
jmp
xchg
addr16
lock
lods
pop
repnz
or
pop
pop
and
jne
loop
mov
mov
aad
es
dec
pushf
inc
mov
mov
dec
inc
fwait
pop
hlt
fstp
sbb
push
xor
cmps
push
and
pop
repz
push
jmp
loop
es
imul
mov
fdiv
ret
scas
stos
movs
pop
cmp
jmp
in
xchg
inc
(bad)
mov
pop
pop
imul
fdiv
mov
or
add
int
push
add
pop
mov
nop
jb
inc
test
ret
(bad)
xchg
ret
retf
shl
mov
dec
call
addr16
add
loope
cmc
xor
dec
xchg
aaa
bound
mov
es
icebp
lds
cwde
pusha
call
sar
pop
fwait
es
inc
inc
add
adc
test
lods
test
mov
test
mov
jne
mov
les
inc
(bad)
xchg
cdq
mov
scas
(bad)
out
cwde
cdq
aaa
cmc
cmp
inc
shl
hlt
cwde
and
cmp
mov
pop
out
(bad)
int3
mov
cs
rcr
imul
inc
inc
cmp
cmp
imul
push
aad
dec
mov
mov
and
sbb
call
call
cmp
xor
jmp
add
cmps
dec
loope
push
mov
mov
pop
mov
add
cli
es
mov
push
and
push
pop
mov
into
test
mov
pop
push
mov
inc
xchg
std
sbb
inc
mov
dec
or
gs
pushf
jmp
sar
ror
imul
mov
jb
fwait
jp
je
jae
cld
repnz
fwait
pop
(bad)
aaa
call
pop
inc
fs
dec
out
imul
fnsave
and
and
add
sub
add
call
and
dec
icebp
mov
push
das
dec
into
push
mov
je
repz
cmps
enter
or
xchg
dec
movs
or
aas
inc
pop
mov
push
jns
int3
mov
addr16
mov
adc
sbb
jp
adc
fadd
mov
or
dec
sbb
xchg
ss
pop
fist
add
ja
mov
sub
xchg
sti
xchg
ror
dec
movs
shr
outs
cmp
test
cwde
push
dec
aam
cmp
xor
xchg
pop
xchg
and
lea
push
or
das
int
outs
in
imul
pop
push
mov
call
test
pop
daa
shl
into
scas
push
jmp
sbb
test
(bad)
sahf
imul
movs
pop
inc
adc
inc
inc
inc
jecxz
and
cmps
fwait
cmps
push
inc
pushf
ror
sub
dec
and
nop
and
imul
aam
adc
push
pop
mov
dec
ins
sub
or
xor
xlat
sub
sub
and
cli
add
leave
jle
xchg
cdq
sbb
vpmacsdqh
pop
add
iret
inc
movs
adc
sub
sbb
sti
test
pop
das
test
mov
nop
xchg
or
push
(bad)
ja
arpl
cmp
sub
lahf
call
pop
fwait
push
jmp
in
or
sahf
jo
jne
push
and
dec
popf
inc
xor
xor
outs
sar
pop
push
leave
inc
mov
mov
xor
xor
sar
out
sub
dec
jge
imul
jae
dec
add
and
sub
int3
lock
div
pop
bound
push
(bad)
stos
imul
mov
fld
jnp
into
enter
mov
sbb
(bad)
mov
add
fs
cmp
mov
inc
mov
add
(bad)
dec
xlat
lock
shr
pop
loop
(bad)
leave
sbb
fwait
and
inc
mov
pushf
cmps
mov
and
mov
fsub
jnp
lods
mov
mov
mov
push
shl
mov
sbb
call
mov
push
dec
scas
pop
stc
and
out
mov
aad
sti
xor
add
xor
sub
inc
into
jnp
add
lahf
cld
repz
repnz
jmp
pusha
sbb
inc
mov
mov
inc
cdq
addr16
adc
(bad)
adc
pop
and
icebp
stos
test
add
(bad)
out
call
mov
call
ins
leave
pop
lahf
push
push
or
mov
lods
fsubr
and
ja
rcl
mov
push
cwde
adc
mov
jae
mov
sahf
xchg
stc
pop
ret
call
adc
mov
add
or
fwait
add
pop
rol
jg
out
lods
jnp
adc
inc
push
in
xchg
and
scas
daa
xchg
pop
pop
in
(bad)
hlt
and
movs
(bad)
(bad)
loope
test
repz
cmps
push
clc
aas
mov
in
sahf
stos
xchg
add
lods
pop
xchg
cld
loope
mov
jne
dec
fbstp
addr16
(bad)
lds
pop
pop
scas
add
mov
stc
pop
lods
mov
jle
mov
inc
mov
jmp
iret
add
mov
mov
push
lock
mov
enter
dec
pop
in
adc
pushf
pop
stc
ja
xor
out
mov
inc
retf
cdq
dec
sar
add
stos
jns
mov
sar
iret
inc
jg
jg
add
sar
jle
hlt
cmp
and
pop
int3
(bad)
jmp
mov
call
aas
sub
aam
pop
adc
mov
(bad)
lahf
js
mov
inc
mov
inc
push
cmp
mov
sbb
cmp
pop
pop
pop
dec
pop
cmps
rcr
sbb
lock
push
ins
jns
xor
aad
sbb
sbb
aas
mov
icebp
add
stos
dec
sbb
inc
xchg
adc
fcomp
(bad)
adc
cmp
jmp
stos
pop
mov
jp
jmp
push
jle
sbb
sub
adc
push
ss
mov
ss
inc
cmp
lods
add
int3
mov
nop
mov
bound
je
into
aad
aaa
sub
dec
adc
and
add
pusha
xchg
fdivr
mov
xchg
rcl
ficomp
jp
outs
loopne
in
pop
mov
inc
lahf
in
jnp
popf
sub
sub
stc
xchg
imul
dec
test
icebp
pop
or
jne
aam
ficomp
xor
mov
inc
sub
inc
adc
fsubr
test
cdq
repnz
cwde
dec
pusha
rcr
xor
out
in
in
mov
cmp
pop
xor
inc
(bad)
popa
dec
pop
in
inc
stc
push
jmp
jb
les
dec
and
cmp
mov
or
arpl
inc
xor
(bad)
idiv
jne
dec
pop
adc
jp
xor
repz
push
pop
jns
mov
nop
sar
xor
fwait
rcl
ss
xchg
inc
mov
xor
(bad)
ja
jp
cmp
dec
push
jl
(bad)
jl
sbb
push
sbb
in
inc
std
push
push
dec
adc
test
scas
dec
daa
inc
js
stos
pushf
sbb
test
add
xor
mov
rcl
cmp
xchg
or
sbb
rcl
mov
push
mov
mov
add
outs
or
and
fadd
shr
dec
dec
push
nop
pop
nop
in
mov
arpl
iret
adc
fisub
lock
bound
inc
mov
inc
je
test
ss
jne
pop
js
pop
push
out
ja
jae
mov
push
mov
out
pop
push
retf
add
mov
push
add
fwait
sub
ss
stc
or
sub
or
rcr
ret
push
call
push
dec
out
push
mov
pop
scas
xor
sbb
stos
xchg
ins
rol
dec
aaa
outs
adc
out
inc
(bad)
ret
mov
and
(bad)
imul
test
pop
imul
rcr
pop
dec
in
xor
mov
test
repz
les
push
icebp
mov
inc
hlt
or
fadd
ja
sahf
les
movs
pop
sbb
mov
add
inc
repz
inc
sahf
ror
pop
add
and
add
je
mov
inc
mov
aad
scas
rcl
call
push
jl
scas
ins
pminsw
sbb
shl
and
fldpi
lahf
push
dec
xchg
in
jo
lock
scas
push
(bad)
out
cmp
mov
outs
sbb
retf
jmp
inc
jnp
add
ds
jb
hlt
pop
pop
and
sub
xor
inc
xor
(bad)
xor
cmps
cli
mov
or
push
retf
scas
xchg
mov
mov
cmc
push
in
mov
(bad)
jle
repz
movq
int
and
adc
lds
adc
(bad)
aam
out
ss
jecxz
out
inc
push
push
lea
ds
jle
push
mov
(bad)
sbb
(bad)
imul
jg
adc
add
aad
icebp
js
inc
add
pop
dec
dec
movs
mov
jnp
mov
jno
aad
test
movs
clc
into
or
and
push
aas
jnp
fstp
test
test
ror
or
int3
retf
mov
mov
cmp
sub
xchg
in
dec
mov
jmp
add
stos
shr
push
jae
mov
sub
(bad)
fistp
pop
xor
and
dec
repz
adc
sub
ja
mov
jno
sbb
retf
cmovge
packuswb
into
adc
mov
xor
shl
je
lods
cmp
sar
pop
mov
jb
sub
aam
les
or
mov
ss
jne
movs
jne
test
xchg
hlt
xor
inc
idiv
add
fidiv
scas
fisttp
popa
mov
inc
xchg
jl
les
cmps
mov
add
nop
popf
push
lds
pop
jnp
mov
(bad)
arpl
(bad)
(bad)
and
cvttps2pi
sar
scas
clc
lock
popa
xchg
jg
cmp
sub
fdiv
mov
jp
mov
movs
jecxz
daa
aad
hlt
xchg
push
jns
jbe
bsf
popa
or
(bad)
xor
mov
inc
out
adc
(bad)
in
(bad)
jmp
mov
pop
dec
fxch
inc
out
pop
xor
stc
fisttp
push
enter
jns
frstor
loopne
in
cmp
cmp
sub
scas
sub
xchg
xchg
lock
das
and
(bad)
imul
xor
mov
fst
movs
push
sti
sub
int
ror
xchg
sahf
push
stc
pop
sbb
or
add
je
lea
jns
inc
je
adc
js
or
(bad)
jmp
into
jp
fimul
shr
xchg
pop
push
jg
inc
aam
fadd
inc
add
inc
dec
in
add
mov
add
lods
and
jnp
jno
rcl
mov
push
iret
movs
and
mov
ins
cmp
les
mov
xchg
xchg
pop
ins
mov
retf
(bad)
imul
jb
mov
nop
idiv
sbb
fld
mov
outs
jbe
push
jge
xor
call
xchg
push
pop
test
call
in
inc
or
rcl
mov
ret
pop
mov
neg
push
hlt
and
mov
push
ficomp
push
sub
das
add
ja
jl
mov
dec
mov
push
add
movs
mov
cld
fisub
adc
pusha
sti
mov
sub
leave
sub
call
iret
jmp
mov
xor
and
loop
fucom
dec
dec
jb
je
lahf
addr16
mov
aas
scas
adc
adc
sti
fcomp
or
(bad)
sub
retf
mov
imul
xchg
xchg
jae
gs
lock
push
pushf
(bad)
jmp
call
xor
aam
sbb
push
cmp
clc
mov
adc
fimul
dec
sub
xchg
cwde
fcmovne
cmp
mov
stos
and
pop
mov
fcmovnu
and
dec
arpl
sub
xchg
(bad)
cmp
push
outs
shl
mov
cmp
jnp
into
ins
(bad)
clc
shr
dec
and
sti
aad
inc
pop
fisub
rol
in
(bad)
cmp
or
push
ror
pop
jge
push
jmp
movs
popa
and
lock
int
dec
xor
fcomp
sub
and
pop
dec
std
shl
mov
add
adc
jo
sti
aas
push
shl
or
ret
push
aas
dec
test
and
scas
jle
xchg
aam
mov
ficom
sbb
cdq
jmp
in
xchg
gs
or
xchg
mov
and
xor
and
adc
repz
jo
adc
push
into
test
pop
lea
paddsb
adc
sahf
pop
sbb
movs
add
or
xchg
int
cdq
mov
fimul
jns
std
add
out
and
jle
xor
clc
lods
adc
imul
cmp
pushf
inc
xor
mov
jno
es
cmp
xlat
pop
outs
push
in
mov
dec
pop
sbb
sub
retf
in
mov
cmps
cmp
mov
adc
repnz
xor
fadd
xor
test
rcr
mov
ret
cmps
mov
cs
imul
enter
cmp
sbb
lahf
pushf
and
adc
sub
repnz
rcl
xchg
sub
ror
sbb
loopne
mov
out
push
or
cmp
outs
add
test
push
mov
pop
pop
mov
cdq
xor
movs
inc
sbb
pop
add
xchg
dec
nop
xor
inc
fcmovbe
and
in
not
mov
int3
jns
mov
xchg
xor
aad
rcr
mov
dec
outs
cli
adc
iret
(bad)
jmp
(bad)
shl
push
xchg
push
test
jnp
lahf
push
jl
xor
sub
adc
fwait
out
sbb
jecxz
aaa
dec
mov
fwait
cld
into
jmp
popf
rcl
jo
pop
cli
sbb
and
ret
shl
fwait
lods
into
sub
mov
fs
push
(bad)
xor
shl
loope
sahf
mov
std
pushf
fistp
call
push
or
retf
or
xchg
jl
jns
push
popa
enter
jnp
pop
rcl
mov
jmp
sub
add
xchg
cld
push
pop
movs
xchg
repz
mov
cmc
mov
fmulp
push
jmp
cmp
xor
rol
fisubr
mov
jmp
xlat
dec
mov
arpl
mov
ss
es
xor
mov
cmp
gs
push
aad
retf
jnp
cwde
fstp
or
sub
fwait
jmp
mov
jns
xor
int
adc
or
and
xchg
or
dec
mov
jns
int3
mov
frstor
cmp
and
sub
out
pop
out
fisub
xor
je
scas
pop
int
xchg
ror
sti
into
imul
loop
mov
xchg
out
or
mov
or
xchg
fdivr
inc
xor
(bad)
cmp
or
(bad)
push
dec
in
iret
and
hlt
(bad)
push
in
inc
or
inc
arpl
mov
arpl
int
fild
stc
out
xchg
dec
(bad)
ret
cmp
and
jmp
dec
add
clc
and
mov
ficomp
lea
pop
cdq
inc
mov
into
inc
sub
jbe
enter
std
mov
fcmovu
clc
xor
add
ror
xchg
les
test
jmp
aam
rcl
inc
ret
mov
or
xor
dec
test
out
mov
ins
hlt
xor
popf
leave
jno
push
inc
push
js
mov
jb
sbb
push
mov
dec
xchg
mov
xchg
mov
cmp
fwait
adc
or
shl
mov
imul
outs
es
cli
(bad)
mov
pop
sbb
mov
push
inc
les
jmp
icebp
jmp
scas
dec
push
or
rcr
retf
rcr
adc
push
cmp
xchg
rcr
stos
test
dec
lahf
jp
bound
and
mov
test
xor
cwde
fadd
sub
call
adc
inc
and
dec
xchg
ja
mov
dec
dec
mov
jae
lods
inc
or
xor
setns
mov
push
movs
repz
loop
sub
and
ss
mov
adc
fdivr
jle
lock
cmc
jle
mov
adc
lock
sbb
jae
cmp
and
sbb
out
push
into
les
out
mov
icebp
call
enter
leave
or
ja
int
sub
dec
cwde
cmp
mov
hlt
ins
or
in
dec
imul
stos
test
les
mov
mov
call
std
rcl
dec
dec
mov
xchg
mov
out
jge
jmp
xlat
not
icebp
aad
mov
loope
mov
jno
imul
or
fisttp
xor
xchg
mov
es
cdq
mov
movs
cmp
inc
loope
mov
mov
mov
fs
test
(bad)
pop
pop
int3
shl
outs
test
sbb
inc
lea
out
jnp
movs
ret
push
adc
cwde
cs
test
mov
pop
daa
mov
(bad)
sbb
xchg
loopne
jae
cmps
bound
push
jmp
sub
iret
sub
fisub
jne
dec
neg
ffreep
aam
call
mov
add
pusha
jbe
sbb
xor
mov
cmp
add
cmc
inc
jmp
xlat
ror
pop
mov
jl
inc
scas
cmps
push
pop
lea
mov
jns
das
mov
jo
fcmovbe
lds
sti
fadd
mov
sbb
pop
push
rcl
xchg
loopne
cld
pop
jbe
cld
mov
push
mov
jecxz
fisub
ror
push
retf
fld
cmps
ins
addr16
shl
arpl
retf
fsub
or
test
mov
lea
xor
mov
and
fwait
inc
mov
loopne
retf
sahf
call
sahf
dec
lea
(bad)
mov
add
out
mov
test
mov
mov
(bad)
std
popf
jl
pop
push
or
xchg
enter
adc
or
mov
(bad)
test
aad
test
shl
mov
add
dec
cmp
inc
mov
test
xchg
call
xor
xor
cmp
ds
inc
cmp
push
push
add
jne
fisubr
sbb
and
pop
xor
mov
gs
pop
jne
into
int3
aad
or
push
stc
mov
cdq
outs
in
data16
ror
ss
imul
pop
movs
sub
xor
add
mov
fiadd
xchg
(bad)
test
stc
pop
call
in
daa
stos
stos
gs
loopne
imul
mov
mov
pop
xchg
test
(bad)
jl
jle
aas
(bad)
div
aas
adc
mov
mov
test
pop
xchg
lahf
mov
or
cmp
xor
fcomp
imul
mov
jge
lods
mov
popa
sbb
jge
(bad)
sti
into
mov
aad
mov
add
mov
in
jp
xchg
test
xlat
in
not
dec
or
ds
aas
into
inc
jb
inc
shr
dec
jns
pop
loopne
mov
inc
fsub
inc
or
add
xor
aaa
pusha
push
outs
and
(bad)
mov
rol
cmp
or
sbb
add
xchg
imul
xor
cmp
retf
jno
dec
(bad)
mov
mov
inc
stc
cmp
shl
data16
call
pop
mov
xchg
mov
xchg
pushf
sti
mov
iret
dec
clc
repnz
ins
aad
cld
jnp
xor
jbe
mov
cs
gs
sub
mov
and
jb
cli
and
rol
xchg
retf
lock
xlat
mov
add
xor
mov
cmp
in
mov
test
aad
not
lea
int
mov
call
das
adc
mov
jg
ret
mov
adc
add
jp
mov
jge
mov
add
inc
jbe
xchg
test
jecxz
loop
loopne
les
(bad)
jne
mov
(bad)
jbe
sar
das
xor
mov
lahf
and
(bad)
sub
call
add
stc
inc
es
out
jbe
cmp
fmulp
fwait
xchg
jnp
mov
int
xor
arpl
sar
mov
sub
repnz
out
jns
push
dec
mov
sub
mov
int3
mov
and
inc
xor
cmc
ficom
loop
sub
xor
pop
pop
pusha
arpl
jae
ret
and
push
imul
test
pop
pop
push
jl
mov
fistp
shr
and
push
imul
cmp
mov
push
mov
pusha
jle
or
and
xor
scas
mov
shl
outs
sbb
mov
pop
int
sbb
repz
mov
mov
inc
aam
mov
dec
call
imul
pop
fwait
jnp
imul
dec
ret
icebp
mov
adc
popf
or
scas
push
iret
inc
(bad)
movs
push
add
xor
jno
scas
sti
call
add
sub
jb
jno
adc
sbb
rol
dec
test
inc
icebp
mov
loopne
retf
(bad)
jmp
bound
aaa
adc
or
mov
daa
jns
lea
xor
paddusb
fucom
loop
loope
leave
xor
les
bound
mov
pop
ret
mov
add
dec
(bad)
sbb
jb
inc
pop
mov
jp
out
test
dec
ror
pusha
cmp
dec
inc
loop
and
xor
movs
in
inc
mov
loop
addr16
or
push
fdivr
xor
jg
jge
or
jmp
and
(bad)
cmps
push
xchg
pop
leave
sub
idiv
retf
stc
dec
jmp
or
add
out
mov
and
rcl
sub
inc
add
xchg
mov
pop
iret
jmp
aaa
xchg
and
retf
fadd
push
call
adc
mov
fimul
or
sbb
out
push
xchg
adc
pop
int
in
push
loope
out
(bad)
mov
add
pop
push
mov
rcl
in
adc
pop
push
mov
aas
dec
jnp
push
sub
mov
jcxz
or
int3
loopne
xor
popa
dec
jl
fcmovb
std
sahf
mov
jle
pop
cmp
repz
(bad)
js
ret
popf
cwde
or
cli
xlat
jp
imul
pop
test
pop
rcl
mov
ror
pop
xchg
mov
add
jae
xor
push
mov
int3
or
xor
ja
mov
pushf
jno
and
data16
jmp
ret
push
cmp
daa
or
push
popa
sbb
sbb
rcl
push
ins
and
add
call
sub
push
push
nop
adc
out
aaa
jmp
movs
out
lods
push
cmp
inc
dec
xor
js
sbb
push
int3
jno
je
out
cmps
cli
dec
pusha
pop
jecxz
mov
(bad)
xchg
fmul
mov
cli
das
cwde
mov
or
jb
into
in
xchg
inc
cli
cmc
mov
shl
fcmovu
push
xor
in
xor
sbb
mov
xor
in
fsubr
cli
les
bnd
cmp
int3
xor
and
sbb
mov
int3
mov
sbb
std
push
sub
ret
adc
test
mov
(bad)
mov
mul
dec
xchg
aad
jmp
fnsave
jmp
je
loop
xor
test
xchg
rcr
les
dec
mov
nop
cli
cmp
mul
cs
call
push
cmp
ja
inc
mov
hlt
je
pop
mov
test
fwait
adc
ret
ret
xchg
and
xor
ins
mov
loop
mov
jns
in
dec
mov
xlat
pop
ins
movs
mov
mov
cmp
es
sub
ret
inc
xchg
push
and
mov
lods
les
clc
pop
mov
sti
out
gs
hlt
js
adc
jmp
xchg
xchg
das
jg
xchg
cdq
pusha
xlat
cmp
fisub
dec
ss
sbb
jl
mov
das
outs
int3
xchg
es
pop
mov
and
imul
mov
call
scas
rcl
pop
mov
rcl
add
xchg
std
adc
xchg
or
xchg
sbb
add
mov
xor
mov
call
and
lods
push
pushf
pop
cmp
bound
jne
jae
call
daa
mov
cmps
mov
mov
js
mov
movs
es
imul
jnp
cmc
mov
inc
sub
into
out
out
mov
xchg
in
in
retf
fcomip
test
shl
add
add
ret
and
jmp
push
sbb
and
jnp
pop
loopne
mov
push
dec
xchg
test
push
std
stos
nop
push
loopne
cmp
call
addr16
pop
ins
or
inc
mov
lock
push
cmp
out
(bad)
dec
imul
xor
xor
add
repnz
mov
xor
jg
adc
retf
ja
jae
mov
outs
popw
(bad)
popf
out
nop
dec
xchg
mov
xor
adc
xor
mov
repnz
sar
cmp
or
fsubr
stc
call
pop
sub
sub
lods
pop
inc
out
and
les
aad
retf
int3
call
lods
sbb
dec
and
and
jno
jle
call
mov
leave
jne
mov
mov
push
(bad)
or
ins
cmp
stc
jmp
xor
mov
rol
xchg
gs
jmp
cmp
imul
jl
or
jp
fdiv
mov
xor
cmp
sbb
xchg
in
jb
cmp
inc
out
rcl
movs
or
scas
xchg
sub
sar
cdq
xchg
gs
sbb
or
stc
lods
adc
lea
pop
xchg
sbb
xchg
pushf
daa
imul
add
and
sub
aad
into
sbb
shl
and
mov
xlat
imul
repz
ds
sti
pop
xchg
cmp
mov
xor
ins
ins
aas
pusha
push
fs
mov
pop
scas
les
pop
inc
xchg
(bad)
jno
xor
xchg
jae
jl
xchg
jbe
neg
addr16
in
cmp
lods
out
mov
mov
and
jg
sub
nop
nop
dec
mov
dec
fadd
pop
pop
pop
jp
push
out
mov
test
(bad)
cmp
sbb
in
sti
loope
cmp
mov
mov
daa
cdq
add
and
mov
dec
out
fcomp
add
or
pop
mov
xor
jp
stos
xlat
gs
pop
cld
push
loope
mov
inc
(bad)
cmps
es
push
cwde
push
outs
cmp
cmp
mov
xchg
ret
pop
or
push
hlt
jno
cmp
pop
outs
(bad)
sbb
sub
int
addr16
fwait
mov
pop
jo
(bad)
mov
rcl
scas
xchg
fcomi
sbb
push
pop
add
cli
push
clc
scas
sbb
out
ins
lea
cli
cdq
movs
mov
sar
inc
adc
mov
push
(bad)
sahf
mov
jmp
lock
popf
xchg
inc
in
scas
cwde
shl
adc
fdivr
mov
cmp
hlt
ss
jns
push
clc
adc
rol
(bad)
nop
call
fadd
lods
or
setg
jo
shl
sub
stc
popa
les
xor
sbb
jl
mov
out
idiv
shl
xchg
test
stos
outs
add
and
xchg
gs
aad
sti
sar
loop
xchg
push
call
popf
call
inc
push
push
push
push
movs
(bad)
enter
inc
or
aam
test
adc
and
mov
or
sub
fdivr
or
pop
cmc
xchg
jmp
xor
pop
push
movs
repnz
shl
leave
push
out
aaa
push
gs
mov
cbw
xor
jmp
rcl
mov
mov
mov
popa
out
cmp
cli
mov
enter
aad
and
adc
jo
mov
sbb
and
fwait
or
mov
aaa
cmp
stc
out
and
es
stos
jmp
(bad)
jb
jmp
cmps
adc
cli
jge
sub
cmc
(bad)
xchg
and
cmp
jne
push
jne
mov
cmp
mov
inc
test
pop
inc
js
fist
bound
cmp
xchg
push
pop
loop
outs
outs
hlt
mov
loopne
test
dec
sbb
clc
lea
popf
popa
add
inc
push
lahf
mov
xchg
push
and
and
enter
test
dec
je
lock
adc
mov
push
outs
rcl
shl
push
addr16
in
test
and
and
mov
popa
push
je
mov
cmc
add
loopne
test
add
push
xor
xchg
pop
and
add
stos
adc
retf
les
aad
add
cmp
fwait
icebp
loop
cld
and
(bad)
test
jge
inc
pop
into
aaa
xchg
out
(bad)
out
imul
or
xchg
sahf
xchg
mov
neg
jo
fwait
mov
adc
and
ja
xchg
sbb
fiadd
mov
push
xchg
gs
into
sub
mov
mov
push
xchg
inc
(bad)
cmp
cmp
data16
add
sub
ss
cmp
nop
adc
icebp
push
adc
inc
and
cwde
and
or
les
fwait
cdq
and
movs
out
xchg
mov
xchg
pusha
or
xor
ror
xchg
pop
movs
sahf
stos
(bad)
sar
(bad)
test
or
push
jmp
push
push
ficom
lahf
out
dec
cmc
fidiv
adc
xchg
stc
xor
cmp
jge
outs
cmp
cmp
push
pusha
jno
pushf
cmp
sub
adc
or
xor
out
jecxz
in
mov
(bad)
aas
pusha
cmc
sbb
or
cmp
movs
out
xchg
ror
mov
lods
mov
adc
or
pop
cmp
pop
faddp
inc
add
inc
push
xchg
sti
(bad)
popa
xchg
adc
and
std
pushf
lods
sbb
enter
dec
push
jno
cmp
push
dec
dec
jle
(bad)
jecxz
cmp
psadbw
sbb
push
neg
test
lods
out
mov
cld
xor
subps
daa
jl
sub
pop
jo
inc
xor
sahf
inc
push
leave
push
jge
adc
lock
mov
mov
xor
adc
sub
jmp
fnstsw
into
push
add
or
pop
push
pop
mov
in
or
ficom
mov
inc
pop
sub
mov
fld
mov
stos
(bad)
or
push
or
or
pop
push
shl
sub
sbb
(bad)
aad
dec
mov
cdq
sar
ds
rcr
lahf
mov
add
hlt
push
sti
adc
mov
mov
aaa
push
out
xchg
call
dec
and
imul
stos
jmp
in
pavgw
mov
jle
nop
inc
lea
ret
stos
or
(bad)
(bad)
icebp
sub
mov
push
ja
fistp
mov
ds
mov
push
loope
(bad)
pop
pushf
pop
stos
or
xor
mov
ret
mov
retfw
add
pandn
cmp
fwait
in
rcr
imul
mov
movs
mov
retf
mov
sbb
sbb
inc
popf
out
outs
push
mov
out
cmp
addr16
jecxz
or
xchg
cwde
ud2
mov
int3
mov
xchg
das
call
push
push
iret
lds
cmp
dec
lds
inc
je
push
pop
stos
fimul
sub
aaa
jns
ds
ror
loop
aam
ret
sub
mov
xlat
out
ret
fsub
pop
div
push
mov
xchg
and
dec
cmps
xchg
test
test
outs
loopne
jle
sub
mov
cmp
dec
push
gs
enter
pop
and
xor
adc
daa
test
fistp
sti
les
aas
pop
stos
ds
push
clc
nop
test
out
jp
mov
frstor
ret
icebp
inc
ins
lock
add
cmps
icebp
jecxz
push
xor
inc
nop
mov
mov
fldcw
jle
daa
add
jmp
mov
push
xchg
rcr
or
aam
add
iret
xor
cmps
dec
aaa
and
sbb
retf
cld
pop
stc
out
sti
aam
stos
pop
loopne
icebp
test
movs
cmp
js
loop
adc
sbb
or
sbb
ss
xchg
mov
cs
mov
hlt
vpaddd
stos
repnz
xor
xor
fistp
lea
and
cmp
paddb
jmp
jge
xchg
int3
inc
dec
aaa
dec
mov
cmp
cmp
das
inc
or
ret
call
jno
pop
daa
add
ret
sub
sbb
and
enter
add
sub
pop
jnp
pop
retf
inc
add
or
xchg
popf
mov
dec
add
fidivr
xchg
mov
retf
(bad)
fs
xchg
addr16
and
mov
sub
dec
push
fldenv
(bad)
mov
or
movs
mov
mov
inc
(bad)
jmp
pop
in
into
adc
cmp
or
fldenv
xchg
mov
or
movs
in
out
and
xchg
mov
dec
mov
mov
inc
mov
(bad)
sub
bound
mov
adc
pop
mov
adc
gs
sub
cmp
faddp
(bad)
shr
inc
inc
js
fdivr
std
lea
push
imul
fs
mov
inc
fisub
pop
gs
dec
add
mov
jmp
jnp
xor
xchg
loop
(bad)
shl
dec
pop
nop
cmp
mov
mov
adc
pushw
push
adc
outs
movs
pop
pop
repnz
push
in
mov
mov
and
retf
test
std
and
xor
sub
test
mov
shl
mov
xor
cs
or
inc
cmp
xlat
add
inc
dec
xor
inc
cmp
mov
cmps
mov
out
mov
movs
retf
or
mov
adc
push
sbb
pusha
mov
adc
fdiv
aaa
add
lods
sub
inc
mov
cmps
(bad)
xchg
xchg
or
les
iret
pop
sbb
aam
enter
xchg
rcr
push
mov
push
mov
ins
ret
daa
cs
xchg
repz
sti
out
inc
adc
pop
imul
inc
loop
mov
data16
mov
mov
xor
push
rcl
icebp
loop
xor
imul
push
mov
(bad)
push
dec
or
test
push
or
xor
sbb
jno
clc
sub
jae
cmp
inc
adc
aam
xor
mov
push
xchg
adc
dec
mov
int
not
or
ins
push
mov
call
bound
cmp
scas
jne
cmp
add
or
push
adc
xchg
cmc
shl
in
jle
clc
imul
aam
clc
push
mov
rcr
pop
mov
sbb
pop
cdq
les
mov
(bad)
jle
adc
sub
jmp
pop
in
mov
xor
mov
push
lock
aad
pop
in
in
and
sub
xor
ja
mov
push
retf
(bad)
movs
mov
ror
dec
jns
dec
push
and
jmp
and
das
cli
mov
dec
adc
sahf
add
(bad)
pminub
jl
jne
adc
pop
in
je
and
push
clc
(bad)
std
mov
inc
cs
lahf
nop
cmp
sub
adc
mov
lahf
imul
or
xlat
mov
out
and
sbb
ja
imul
pop
outs
mov
jno
xchg
mov
in
push
movs
mov
rdtsc
iret
mov
inc
cmp
imul
push
mov
fbstp
push
xlat
xchg
push
scas
(bad)
(bad)
sub
(bad)
mov
jno
sub
leave
add
aaa
sub
and
push
mov
in
pop
or
loopne
pop
inc
push
aad
retf
and
jns
gs
iret
mov
cmps
mov
jno
mov
(bad)
popa
xchg
pop
inc
arpl
imul
sub
mov
mov
adc
xchg
aaa
arpl
nop
jnp
jl
test
pop
mov
inc
mov
jp
mov
mov
sbb
jecxz
and
shl
and
cs
imul
js
push
inc
clc
daa
inc
data16
push
and
sub
push
fdivr
pushf
xchg
jle
adc
sub
pop
and
sbb
dec
mov
nop
xor
xchg
sbb
xlat
popa
rol
fsub
pop
stos
test
es
dec
mov
das
lea
jp
sub
in
dec
leave
mov
or
cmp
std
push
jge
(bad)
or
push
jecxz
aas
(bad)
sar
sub
sar
sbb
fmul
ds
or
mov
lock
(bad)
cmp
mov
imul
rcl
push
or
and
sbb
outs
lahf
cmp
leave
jle
loopne
pop
gs
push
mov
lahf
ins
or
push
xlat
cmp
and
xor
imul
sub
jg
aad
mov
inc
sub
ror
mov
rcl
mov
cs
lahf
push
xchg
mov
mov
and
add
mov
or
ror
or
sub
jo
ds
mov
dec
enter
jbe
stos
sar
cmp
inc
gs
aaa
pop
adc
in
xchg
cmc
or
rcl
(bad)
xor
mov
fdivr
add
std
xchg
aaa
fst
mov
mov
xchg
jmp
cmp
pop
adc
stc
mov
dec
push
xchg
lock
or
(bad)
mov
jmp
pop
lods
inc
aas
push
into
shl
repz
mov
aaa
out
(bad)
daa
or
iret
mov
scas
retf
or
ins
and
(bad)
shr
test
pop
(bad)
adc
lods
adc
mov
cwde
inc
leave
loope
scas
mov
iret
pop
retf
add
or
add
xor
inc
pop
outs
hlt
out
pusha
data16
je
(bad)
cmp
into
mov
int
jbe
jecxz
jecxz
enter
cmps
inc
mov
cmp
je
ds
sub
loope
aas
lds
push
pushf
jge
inc
les
out
push
mov
push
fsubr
ins
stos
inc
(bad)
std
movs
out
inc
sbb
jecxz
jnp
movs
sahf
mov
dec
popa
push
cmp
out
cmp
xlat
or
shl
call
cmp
hlt
add
div
movs
arpl
out
xchg
and
shl
or
(bad)
std
test
cs
jae
iret
sbb
mov
mov
hlt
ret
cli
jle
xor
data16
add
not
mov
mov
fdiv
add
(bad)
mov
and
data16
sub
cmp
cwde
sbb
sahf
xchg
sub
mov
or
test
ficom
gs
hlt
mov
jno
cdq
clc
mov
lea
adc
sub
repz
mov
fmul
test
cmp
addr16
out
dec
mov
add
xor
call
clc
mov
jmp
sbb
mov
rcl
stos
cmc
pop
shr
cld
jl
and
mov
push
mov
dec
adc
std
movs
push
sti
adc
jecxz
add
rcl
ds
iret
sti
dec
(bad)
pop
sti
push
shl
unpcklps
mov
xchg
fiadd
js
fdiv
es
mov
push
and
push
fisub
pop
lods
xor
inc
push
xor
rol
je
ss
adc
cld
fsub
jmp
les
repnz
push
lods
or
mul
cmp
gs
mov
leave
xor
cmp
int3
mov
in
aas
sbb
adc
pop
or
stos
jge
mov
or
icebp
das
dec
aad
fimul
ins
iret
shl
pop
shl
arpl
jo
getsec
and
add
popa
xor
pop
inc
outs
into
jp
ins
add
jp
and
and
fcom
dec
mov
cmps
or
mov
push
pop
push
jno
add
mov
test
add
in
sub
cs
push
aas
aaa
push
jmp
jg
mov
fmul
leave
repz
xchg
sub
add
inc
cmps
fs
retf
(bad)
fcomp
std
ror
mov
lock
sbb
jecxz
mov
or
pusha
fld
xchg
jne
nop
mov
scas
into
loop
sbb
ret
jae
pop
mov
push
out
cdq
lods
mov
enter
sti
jns
add
adc
pop
aaa
push
(bad)
loope
les
add
adc
in
or
and
dec
inc
stos
repz
mov
rcl
aaa
retf
cmp
pop
jg
inc
imul
push
loopne
shr
lods
popa
add
mov
cmp
scas
test
ret
inc
jge
mov
mov
repnz
popf
sbb
call
mov
dec
jb
fdiv
sbb
retf
pop
lods
sub
pop
xchg
call
xchg
inc
xchg
idiv
movs
sub
ins
sbb
enter
ins
stc
imul
ss
sti
xchg
shr
xor
pop
dec
mov
dec
mov
sub
and
jae
mov
pop
and
shl
jecxz
mov
mov
fsub
sbb
and
psubw
pop
cdq
sbb
sbb
mov
(bad)
jo
and
mov
movs
pop
ins
cmps
fdiv
mov
push
cld
ds
les
mov
dec
in
push
push
ja
mov
or
repz
or
cwde
or
and
iret
push
jg
add
arpl
test
retf
and
jae
fs
loope
and
das
sub
add
mov
jno
outs
mov
sti
xor
out
movs
and
std
ja
pop
ret
mov
scas
cmp
jp
rcr
inc
dec
es
pop
cmc
test
cmps
stos
pop
pop
pop
xlat
pop
pop
(bad)
rcr
adc
icebp
dec
cs
test
fidivr
in
arpl
cmp
aaa
lock
or
cmps
mov
call
loope
pop
test
iret
psubb
cmps
std
pushf
je
and
dec
adc
mov
ins
fcom
add
fisubr
sbb
(bad)
int
ins
frstor
es
pop
out
(bad)
mov
ins
(bad)
daa
dec
inc
adc
enter
pop
fcom
sub
popf
jbe
pop
mov
stos
dec
and
xchg
gs
xor
(bad)
fidivr
dec
dec
js
test
popa
mov
mov
sub
add
outs
mov
das
das
retf
or
xchg
(bad)
xchg
ret
enter
pop
outs
xchg
adc
data16
ds
inc
in
ret
add
jmp
sub
ja
sbb
or
daa
mov
xlat
test
repz
retf
aas
lock
push
mov
cwde
clc
test
add
ds
push
dec
popf
cmp
nop
js
fadd
cdq
int3
sar
mov
jbe
adc
pop
mov
add
sbb
push
das
xchg
cmps
inc
mov
imul
pop
fsub
cmp
(bad)
aas
xchg
lds
out
pop
push
icebp
sbb
add
or
cdq
clc
seto
or
lods
shl
bound
out
inc
jmp
add
adc
jg
add
sahf
jl
in
repz
jle
icebp
pop
aam
ins
xchg
sbb
and
mov
in
das
sub
shl
lds
jno
shl
pop
cmp
dec
imul
test
mov
mov
xchg
mov
xor
dec
cld
js
int
dec
jmp
jmp
sbb
gs
retf
mov
loopne
jne
xor
mov
pop
in
or
add
ret
(bad)
mov
aad
icebp
sub
aam
iret
popf
push
push
je
and
fbld
std
imul
scas
inc
out
cs
jge
dec
int3
nop
dec
sub
xor
int
pop
mov
cmps
push
cdq
movs
adc
cmp
retf
out
adc
and
pop
int
sub
(bad)
pop
iret
or
xor
cmps
ffreep
ja
test
mov
scas
ret
and
(bad)
movs
and
repnz
ins
mov
cmc
out
dec
push
pop
cmc
out
dec
ret
fadd
call
inc
mov
(bad)
fidivr
jae
inc
mov
fcom
xchg
push
lock
popa
xchg
mov
or
jle
and
fs
push
ror
dec
pop
adc
add
cmps
jecxz
cs
fstp
xchg
or
push
int3
repz
push
in
ficomp
jmp
(bad)
inc
jne
adc
popf
add
xor
pop
xor
jmp
sbb
out
inc
movs
ja
lods
mov
es
(bad)
out
int3
push
xchg
push
cmp
ret
mov
sub
imul
ins
leave
cmp
xor
ficom
movs
scas
daa
lds
into
sbb
inc
cmp
aas
dec
pop
push
out
adc
fdiv
inc
jecxz
call
and
fiadd
(bad)
jp
pop
cmp
push
call
stos
sub
ja
jo
inc
add
adc
inc
inc
xchg
into
push
test
xor
adc
jbe
push
add
dec
dec
or
sbb
mov
push
mov
and
gs
inc
xchg
pop
push
lea
cmp
fcmovbe
jl
ds
daa
outs
jne
imul
outs
sub
adc
inc
ds
and
cmp
fnsave
push
loope
cmp
pop
(bad)
sti
icebp
aaa
xchg
and
int3
and
pop
loope
jne
ins
pop
retf
retf
or
mov
mov
cwde
dec
sbb
jp
jb
jo
xor
sbb
fstp
sti
xchg
push
jne
mov
mov
les
mov
mov
xor
sub
xchg
inc
lods
pop
add
push
call
push
adc
push
test
in
fidivr
mov
pop
movsx
dec
aas
dec
(bad)
push
test
stos
add
cmp
(bad)
out
inc
push
nop
mov
scas
sub
push
push
or
lahf
and
or
adc
dec
push
call
into
cdq
mov
(bad)
int
dec
jmp
xchg
bound
outs
sahf
dec
dec
push
(bad)
or
mov
pop
mov
fidivr
nop
adc
ror
push
add
repz
add
push
fs
fld
xchg
fdiv
dec
push
mov
xchg
xchg
test
mov
bound
out
xor
mov
jmp
inc
jno
add
arpl
addr16
jns
xchg
xlat
pop
test
jecxz
jae
jmp
mov
pusha
stos
jne
int
popf
es
out
in
xchg
adc
mov
dec
pop
cmp
jnp
inc
nop
outs
inc
ret
call
dec
bound
lds
popa
popa
in
js
xchg
sub
xchg
xchg
stos
jb
test
add
sti
mov
inc
push
and
fisttp
or
dec
jl
mov
retf
xchg
jno
into
push
and
xor
rcr
mov
enter
sub
jae
es
add
repz
hlt
xchg
popf
mov
add
shl
fadd
cld
xlat
xor
mov
inc
repnz
xor
adc
ins
cmps
stos
jae
stos
and
sub
jne
mov
fwait
mov
jp
xchg
mov
in
inc
adc
dec
stos
cmps
pusha
stos
jle
sbb
and
xor
sub
(bad)
cli
icebp
mov
adc
mov
loope
pop
imul
adc
inc
jo
sub
clc
adc
sbb
push
lods
hlt
cmp
inc
pop
mov
aas
fs
les
jns
repnz
sti
rcr
xchg
sbb
aas
mov
pop
ja
hlt
ret
ss
sbb
xchg
cmp
pop
leave
das
jmp
add
pusha
shr
xor
mov
arpl
test
data16
iret
mov
jbe
cmp
inc
xchg
jg
dec
rcr
aas
cld
popa
imul
xlat
inc
push
mov
cmps
jnp
scas
out
pushf
int3
push
fsubrp
and
stc
jle
(bad)
cli
jns
mov
cli
cmp
iret
pop
pop
and
mov
mov
not
in
cmps
xchg
add
xchg
dec
cmp
cmps
adc
mov
or
add
dec
sbb
dec
dec
test
(bad)
sub
stos
arpl
jne
push
fst
sahf
sub
arpl
scas
sbb
pop
or
mov
jg
push
gs
jne
sbb
popa
xchg
sub
sub
sub
fxch
(bad)
mov
and
or
xchg
mul
ins
sti
cmp
int
mov
loopne
popa
shl
cdq
stos
mov
mul
cli
dec
cmp
outs
clc
fisub
mov
lock
lock
addr16
xchg
test
push
adc
push
retf
(bad)
push
outs
repz
mov
cdq
dec
cmp
cwde
leave
mov
div
fsubr
xchg
mov
gs
call
mov
pop
mov
dec
aad
xor
adc
xchg
cmc
hlt
pop
dec
out
addr16
cmp
mov
push
mov
rol
jl
add
pop
inc
mov
xchg
adc
pop
sbb
or
push
imul
jne
jge
xchg
dec
(bad)
scas
cmps
xor
push
pop
add
fidiv
je
in
retf
cmps
out
int
jg
mov
pop
mov
jmp
sub
sbb
outs
daa
pop
fcmovbe
xchg
mov
mov
dec
xchg
out
add
xor
loop
retf
popa
in
pop
aad
das
push
adc
neg
cmp
loope
mov
xor
cs
ja
fst
ins
or
in
cwde
(bad)
sbb
sbb
repnz
das
nop
out
jmp
test
sbb
lahf
scas
pop
faddp
xor
xor
scas
fiadd
add
daa
cmp
addr16
adc
inc
push
mov
in
cmp
mov
sub
jno
das
and
call
daa
stos
jl
and
into
rcr
add
pop
inc
retf
aaa
lahf
jp
pop
lods
shl
outs
sbb
inc
out
aaa
push
mov
repnz
sub
das
jle
xor
and
dec
fs
(bad)
mov
mov
neg
xchg
shl
out
in
push
out
stos
ret
cmp
and
pop
mov
outs
xor
mov
xchg
cmc
add
xchg
je
dec
sbb
ins
mov
lods
ret
mov
mov
xchg
mov
cmp
pushf
xchg
mov
gs
popf
push
mov
inc
into
and
enter
mov
sbb
(bad)
fstp
add
popa
rol
dec
pop
jae
int3
or
mov
pop
push
idiv
not
movs
je
cmp
icebp
mov
shr
inc
(bad)
dec
mov
add
sbb
bound
adc
adc
sub
cmp
dec
mov
adc
ins
lea
out
xchg
fsub
xchg
in
js
ins
inc
sbb
adc
ror
mov
push
dec
cld
adc
mov
arpl
bound
jl
or
and
cs
and
lahf
and
bound
in
lahf
into
ss
fs
shl
xchg
rcl
shl
fucomp
sub
f2xm1
xor
and
push
test
fiadd
or
je
dec
lahf
retf
lock
sar
mov
cmp
pop
loopne
ror
std
dec
inc
hlt
jg
adc
fbstp
push
out
rcl
stos
add
dec
pop
fimul
icebp
aad
jle
add
and
lods
xchg
sbb
xchg
jbe
cmps
sub
dec
(bad)
add
cli
push
inc
or
jecxz
scas
mov
aaa
ss
imul
aas
push
(bad)
or
jno
xor
jb
push
stc
fwait
ds
dec
stc
pop
ins
rcr
in
dec
jnp
ret
in
neg
sub
scas
mov
and
out
shl
or
jae
adc
cwde
inc
out
sti
je
sar
dec
pusha
and
sub
mov
or
stos
sub
dec
dec
or
xlat
clc
push
mov
call
cs
scas
fdivr
xchg
xlat
rol
add
inc
jl
xor
test
stos
icebp
and
mov
push
fidivr
jle
push
movs
xchg
xlat
scas
jmp
aas
movs
xchg
adc
dec
and
sti
xchg
mov
cdq
mov
mov
push
dec
addr16
fidivr
enter
(bad)
retf
jne
adc
sbb
adc
ror
mov
fwait
popf
pushf
(bad)
lds
sbb
adc
rol
into
movaps
pop
fistp
cmp
mov
cld
adc
jge
sbb
dec
xchg
jb
ret
and
pop
iret
add
test
cmc
shr
pop
not
jmp
jecxz
gs
(bad)
push
xchg
jb
mov
in
enter
push
data16
lahf
movs
dec
mov
aaa
mov
clc
int
cs
enter
inc
cld
xor
pop
dec
mov
xchg
xchg
fcmovnbe
pop
jo
bound
pushf
into
jmp
push
fwait
adc
mov
aad
and
ret
sbb
movs
push
mov
imul
xor
scas
shr
stos
or
fcomp
and
adc
and
sbb
or
shl
xchg
stos
dec
jo
adc
jp
jae
test
jno
les
adc
jae
xor
popa
(bad)
cmp
movs
call
mov
fadd
sbb
(bad)
loop
or
sbb
jne
jp
mov
test
adc
mov
ror
inc
(bad)
ds
inc
aad
add
sub
fild
jp
sub
mov
xchg
mov
jecxz
xor
xor
xchg
stos
fs
sub
inc
fnsetpm(287
cmp
lods
fsubr
test
inc
cld
(bad)
cmp
inc
stc
in
test
loope
movs
arpl
retf
enter
mov
pop
inc
inc
mov
dec
sub
shl
mov
sbb
out
(bad)
in
jp
(bad)
out
mov
test
add
fmul
cdq
ds
(bad)
push
inc
repnz
fcom
jg
adc
sub
(bad)
leave
loop
lock
cli
je
add
outs
xchg
cmp
mov
jnp
cmc
dec
out
retf
repz
mov
adc
xor
xchg
test
pop
xor
xchg
fucomp
sahf
cmp
xchg
or
ret
sti
push
dec
sar
jecxz
(bad)
sub
sub
ror
lods
mov
sbb
out
ss
imul
add
aaa
fs
lock
inc
add
pop
rol
loope
nop
xchg
out
xor
ret
sub
jge
adc
pop
mov
(bad)
(bad)
in
ficomp
xor
mov
xchg
or
hlt
pop
inc
pushf
jl
add
push
movs
repnz
inc
mov
loopne
jbe
mov
ret
int
lahf
in
xchg
ror
inc
xor
fild
push
(bad)
pop
fs
inc
jmp
scas
mov
(bad)
loop
xchg
fwait
aaa
icebp
xor
outs
push
out
jl
mov
xor
test
jmp
test
or
adc
or
punpckhwd
ror
xor
repnz
jo
push
call
push
xor
mov
mov
mov
mov
mov
dec
test
xor
loopne
add
sbb
sub
inc
dec
mov
and
mov
ret
retf
test
jnp
lock
or
jo
mov
push
cmp
out
inc
pop
cwde
jmp
jl
sbb
add
cmp
aas
adc
cdq
call
add
inc
and
add
sub
not
cs
lods
rcr
nop
fld
test
sahf
add
out
jle
xchg
sbb
cmps
stos
push
add
aad
std
xchg
xchg
pop
int
das
jno
call
xor
push
gs
sbb
pop
mov
dec
xchg
mov
popa
push
jecxz
ja
stos
cmp
sbb
lea
add
test
and
fistp
push
xchg
sti
loop
int
rcl
je
mov
pop
pop
mov
in
jb
add
mov
aaa
pop
mov
sar
mov
ss
lock
mov
jns
cmp
inc
and
and
stc
imul
pop
add
stc
push
push
xchg
out
xchg
lds
cmp
test
ds
stc
sub
lock
add
sub
aas
stc
mov
pusha
callw
inc
dec
bound
pop
dec
sub
or
retf
add
sbb
fild
mov
cmp
push
jmp
xor
out
(bad)
mov
out
push
call
mov
and
call
iret
lock
pslld
mov
mov
mov
out
cwde
in
(bad)
cdq
pop
and
aas
scas
lahf
mov
fs
sub
out
test
mov
adc
mov
retf
test
cmps
mov
retf
popa
fist
sti
xor
(bad)
dec
leave
push
push
xlat
int
aaa
sub
add
leave
jnp
inc
ins
fs
pop
and
jg
call
or
push
add
lods
mov
arpl
add
jg
and
xchg
call
sbb
push
mov
sbb
mov
xchg
pop
mov
test
repnz
cwde
fisttp
mov
sub
or
jp
dec
cmp
hlt
addr16
inc
cmp
sub
pop
in
sub
or
xchg
pop
ret
arpl
pushf
aas
jnp
enter
nop
bound
cmp
jl
iret
sbb
jns
jmp
(bad)
(bad)
xlat
setns
add
fst
push
cmp
(bad)
cmovg
cmp
jle
inc
ror
cmp
stos
das
pop
adc
icebp
mov
stc
cmp
loop
pop
mov
mov
fwait
sar
or
mov
dec
sbb
jno
mov
test
loopne
push
mov
dec
sub
ds
pushw
jle
pop
xchg
mov
fbld
fadd
mov
int3
sti
mov
push
xchg
scas
cmps
mov
arpl
mov
xchg
movs
cmc
inc
lea
in
or
pop
ins
imul
mov
mov
es
repnz
pop
inc
icebp
in
call
(bad)
lock
repnz
mov
xor
daa
jns
fsub
ret
into
les
sahf
lock
dec
mov
or
pusha
ja
dec
xchg
jae
push
pop
jbe
push
mov
gs
jle
mov
or
add
mov
mov
mov
std
adc
mov
lods
retf
shl
dec
or
or
push
sbb
mov
jne
sbb
mov
js
jae
push
lods
and
xor
mov
dec
xor
sub
xor
sub
adc
sbb
mov
cmp
inc
lods
les
mov
push
lock
into
mov
cmc
sahf
and
or
(bad)
loopne
cmp
inc
adc
push
sti
fisub
ja
pop
dec
lds
ins
jmp
scas
es
xchg
sub
mov
cmps
mov
mov
jl
push
fnstcw
jae
jb
mov
data16
mov
gs
imul
inc
in
(bad)
inc
popf
mov
jnp
push
sti
jle
adc
in
retf
movs
xchg
push
dec
cwde
push
retf
dec
ds
inc
xchg
out
sbb
lea
dec
imul
push
cs
pop
push
xor
call
je
cmp
shl
fstp
pop
push
push
imul
xchg
pushf
out
xor
xchg
mov
aad
int3
mov
jmp
adc
mov
sbb
pop
pop
cmp
push
js
push
das
mov
loopne
rcr
jo
push
int
aad
mov
ja
sub
mov
mov
push
outs
gs
ins
mov
call
inc
test
pushf
lea
pop
push
inc
sub
mov
mov
and
pop
out
jmp
out
mov
dec
fld
mov
in
pop
retf
xor
cmp
mov
sub
outs
xor
movs
cmp
nop
or
arpl
addr16
or
pop
repnz
mov
shl
retf
add
mov
(bad)
(bad)
mov
dec
pop
shl
(bad)
or
call
pop
in
mov
jns
cmp
loope
shl
inc
xchg
retf
mov
pusha
in
aas
inc
sub
inc
jl
out
fisttp
cld
outs
out
push
jle
enter
mov
mov
xchg
test
cmp
scas
aas
mov
ret
mov
mov
das
mov
lods
and
popf
add
sti
cmp
out
xchg
retf
adc
inc
daa
sahf
inc
stc
add
mov
imul
test
sbb
pop
push
inc
jbe
push
rcr
adc
xchg
mov
sub
push
minps
mov
fcom
stos
pop
in
out
pop
imul
push
ja
push
pop
xor
imul
xchg
and
jecxz
fwait
inc
add
cwde
sbb
cmc
or
mov
lock
inc
fs
push
dec
xchg
xchg
fadd
or
sbb
cmp
out
add
pop
xchg
cmp
cdq
or
mov
sbb
jb
test
sub
pop
or
(bad)
mov
cmp
pop
or
and
push
cmp
pshufw
or
mov
adc
sbb
dec
xor
sbb
fidivr
inc
dec
mov
mov
pop
iret
div
sub
push
cwde
popa
loopne
addr16
into
xchg
pop
ja
mov
push
mov
in
push
lods
scas
adc
aad
scas
pxor
and
xor
scas
xor
xchg
xor
repz
xchg
mov
sbb
jl
sub
and
sahf
push
push
mov
inc
in
out
push
(bad)
aas
daa
cs
arpl
pop
cmps
stos
push
sub
js
enter
mov
or
pop
pop
in
push
sbb
xchg
rcl
loop
ret
jns
test
outs
and
and
push
add
sub
fnstenv
fistp
movs
sub
mov
sti
or
sbb
in
cmp
and
shl
mov
xchg
pop
push
out
xor
pop
(bad)
(bad)
fdiv
outs
ja
and
sbb
xor
mov
loop
jmp
xchg
or
imul
jmp
loopne
dec
sahf
ror
add
mov
test
popf
mov
lea
xchg
je
inc
mov
aaa
arpl
push
push
mov
movs
xchg
add
adc
call
cld
jmp
or
and
mov
cmp
mov
test
mov
pop
hlt
inc
mov
xchg
out
fimul
fcomp
xor
or
ss
stos
ret
outs
jnp
add
fmul
movs
cmp
push
or
or
dec
push
jmp
(bad)
iret
aam
cli
(bad)
xchg
jo
jbe
xchg
pop
push
push
cmp
dec
mov
and
ret
pop
xchg
call
cli
ror
dec
repnz
pop
mov
popf
adc
mov
mov
fsubr
dec
mov
sub
cmps
enter
repz
outs
inc
fimul
push
retf
push
or
jecxz
inc
mov
ror
test
cmp
mov
hlt
setp
mov
in
inc
cmc
jnp
fdivr
scas
test
pop
ret
xor
movs
out
cmp
mov
inc
out
inc
test
movs
retf
and
and
iret
jno
icebp
gs
mov
mov
push
inc
xor
sub
and
xchg
jl
cmp
dec
jmp
jno
fs
mov
inc
mov
iret
xchg
jecxz
pop
outs
mov
mov
cdq
test
lods
faddp
mov
nop
shl
pop
and
sub
mov
pop
loopne
fs
loopne
push
jp
mov
jle
add
sti
add
and
cs
(bad)
jnp
jne
pushf
cmc
adc
cmps
popf
sbb
sahf
xchg
jb
and
xchg
sar
clc
ror
jmp
aas
popf
and
dec
or
pmuludq
fwait
dec
add
mov
je
jmp
scas
movs
jae
sbb
or
mov
mov
dec
arpl
stc
adc
push
dec
xor
or
outs
inc
and
or
loopne
adc
xchg
mov
and
aaa
and
push
outs
cmp
loop
pop
outs
push
push
(bad)
arpl
inc
jns
shr
sar
mov
inc
lods
hlt
dec
cli
lea
inc
add
adc
fisubr
ds
cmp
fst
pop
inc
cmp
fisubr
(bad)
pop
xor
stos
ins
xor
je
fmul
div
lods
call
adc
dec
test
push
jae
mov
fcos
dec
cmp
popf
aad
pop
das
idiv
cld
dec
inc
add
iret
mov
sub
mov
loop
pop
ds
mov
and
fs
add
out
adc
inc
jge
xor
mov
(bad)
rol
sbb
and
sub
cdq
dec
push
rcr
loopne
popf
jbe
mov
mov
inc
icebp
xchg
lahf
jp
inc
aaa
mov
(bad)
mov
les
clc
cmp
ins
adc
push
into
test
jns
add
mov
repnz
scas
add
mov
retf
xlat
jmp
dec
lock
stc
stos
pusha
pop
mov
sub
cmp
push
mov
scas
or
movs
clc
or
jmp
lds
adc
jae
add
gs
fsub
ins
cdq
mul
adc
mov
sbb
jae
adc
pusha
and
push
pop
sbb
cmp
push
push
xchg
loope
jmp
loope
sbb
js
out
jp
sub
mov
jle
inc
push
sub
mov
inc
xchg
int3
ins
stos
loop
or
inc
or
mov
push
push
jne
pop
or
mov
pop
pop
xor
inc
push
aaa
or
call
loopne
and
xchg
xchg
loop
(bad)
jl
add
jp
pop
and
loop
(bad)
outs
mov
push
hlt
jae
cmc
ds
scas
adc
xor
not
sub
add
mov
adc
cld
push
imul
jle
jnp
mov
popf
dec
loope
jg
sub
adc
jo
push
push
nop
sbb
sbb
hlt
ds
dec
sub
das
inc
lea
sar
jbe
pop
(bad)
sar
adc
pop
cli
je
dec
xchg
fldenv
xchg
cwde
push
sub
sub
push
jno
test
mov
mov
mov
xchg
pop
ror
aam
dec
fwait
enter
clc
dec
push
sub
imul
push
scas
xor
in
loopne
mov
test
inc
xlat
test
or
jo
and
lods
cmp
jp
pushf
or
and
jle
cmp
outs
and
imul
xor
sub
mov
dec
or
add
pusha
adc
pop
jmp
imul
test
add
sub
inc
les
jl
dec
idiv
iret
(bad)
mov
pop
aad
mov
mov
repz
dec
lock
or
xchg
mov
inc
push
cmp
out
add
aas
out
cmp
xchg
ror
call
xchg
jmp
fnstenv
stc
pop
sub
out
ror
test
adc
cmp
cdq
inc
add
push
cmps
int3
mov
(bad)
clc
sbb
lds
les
(bad)
xchg
mov
mov
sbb
add
lea
shr
leave
inc
xchg
inc
fnsetpm(287
xlat
mov
test
sti
or
cli
rol
leave
inc
pusha
inc
das
pop
lock
stc
mov
adc
jnp
(bad)
in
xor
cmp
outs
imul
outs
pushaw
xchg
mov
leave
mov
xor
mov
cld
stos
jp
imul
in
jne
adc
inc
(bad)
xor
(bad)
ins
in
dec
or
retf
xor
enter
mov
or
or
jbe
mov
repz
push
out
push
out
and
jmp
jmp
or
xchg
push
inc
aaa
bound
and
fwait
xchg
ds
(bad)
(bad)
sub
sub
vpunpckhdq
pop
or
dec
outs
sar
ja
sbb
add
por
and
test
pop
or
aas
mov
out
lock
or
cmps
xchg
shl
mov
jns
int3
jnp
loope
bound
imul
lea
xchg
rcl
mov
sub
add
movs
int
ins
outs
leave
imul
aaa
fimul
js
arpl
or
mov
jmp
xor
popa
ret
mov
rcr
or
leave
sub
scas
push
jl
fdivrp
inc
xor
push
call
mov
xor
mov
aaa
outs
dec
lock
scas
mov
loope
ja
stos
loope
inc
sub
das
scas
pop
fsubr
jb
ret
pop
loopne
in
mov
or
fadd
or
jmp
in
and
mov
xchg
scas
ror
pop
(bad)
shl
js
jae
mov
cdq
add
jmp
jg
pop
hlt
mov
lahf
and
mov
mov
jnp
out
repnz
jmp
jmp
lods
or
cld
stos
xor
or
pushf
mov
push
push
imul
arpl
loopne
(bad)
aad
es
xor
cmp
aad
mov
mov
pop
push
mov
sti
mov
stos
iret
mov
dec
push
mov
adc
cmp
int
dec
rol
call
scas
aad
cmp
int
mov
dec
and
lods
fldcw
icebp
fwait
call
imul
cmp
sbb
jmp
pop
out
repnz
mov
mov
inc
pop
inc
test
mov
aam
aam
fnstenv
adc
fcmovnbe
cmps
pop
test
push
ins
shr
add
icebp
pop
test
xlat
rcl
xor
stos
shl
pop
enter
jae
mov
jnp
loopne
cmps
stos
mov
sbb
inc
in
mov
arpl
sbb
sti
dec
or
mov
leave
movs
daa
adc
xchg
add
(bad)
pop
and
retf
or
clc
leave
bound
jp
or
shl
xor
xor
call
sahf
jne
push
mov
gs
mov
stos
test
js
lds
xchg
lahf
push
or
jge
lods
hlt
ret
clc
push
cmp
push
cmp
popa
fsubp
jb
xor
mov
cmp
and
cmp
imul
mov
mov
pop
adc
xchg
int3
push
out
dec
cmc
mov
int
cmp
or
inc
push
xchg
aaa
xchg
xor
popf
xchg
xor
sbb
scas
xor
popf
call
and
(bad)
xor
shr
dec
sbb
add
xchg
in
fstp
sub
test
mov
repz
pop
sbb
push
pop
or
das
rcr
cdq
sub
push
push
dec
out
adc
fild
cld
call
fmul
mov
jno
mov
push
mov
cwde
je
repz
mov
pop
add
mov
leave
lahf
call
repz
sbb
stc
inc
mov
imul
push
push
inc
jo
loop
push
jo
psadbw
dec
pop
scas
or
push
sub
rcl
sub
inc
adc
mov
xor
mov
add
out
add
jne
sbb
and
mov
add
in
sub
sbb
or
js
shl
cmp
movs
sbb
pop
int
retf
sub
or
cmps
sbb
inc
je
xchg
rcl
mov
cmp
mov
in
(bad)
lock
and
mov
(bad)
jae
in
fwait
outs
push
inc
cmp
pop
mov
xor
pop
enter
dec
pop
jo
xchg
arpl
dec
or
stos
pop
dec
jns
push
mov
cwde
daa
imul
loop
pop
sbb
push
sub
sbb
jbe
inc
in
retf
test
cmp
mov
jae
cmps
ins
jle
psadbw
hlt
xor
dec
je
adc
(bad)
cmp
inc
xor
add
test
dec
xor
xor
add
add
adc
gs
or
mov
push
mov
in
xchg
inc
pop
sahf
jg
pop
sar
sbb
scas
divps
mov
(bad)
in
les
(bad)
das
or
adc
lock
loope
repz
mov
pop
popa
leave
(bad)
xchg
xchg
dec
mov
sub
adc
inc
jne
aad
shl
inc
xor
xor
mov
pop
fisub
rol
sti
loopne
xor
leave
mov
push
sahf
shl
sub
jmp
int3
in
inc
sub
and
xchg
mov
adc
cli
jle
ja
pop
dec
inc
std
pop
sub
fmul
xor
adc
aad
loopne
popf
aam
xor
mov
fisubr
rcr
push
push
neg
mov
retf
stos
jge
mov
pop
or
xchg
dec
loopne
data16
fisttp
aam
pop
sahf
jb
xchg
lds
fwait
lods
outs
mov
mov
enter
jnp
iret
out
dec
dec
jecxz
sbb
sub
cmps
aam
aam
adc
loope
push
or
sbb
cmps
fwait
mov
cmp
scas
lahf
mov
mov
fisttp
or
outs
ja
cld
test
sbb
ds
xchg
bswap
test
shl
std
mov
retf
idiv
xchg
stos
and
jmp
not
xchg
lods
ds
lds
push
stos
jno
sbb
ins
ins
and
lds
mov
retf
push
rcl
pop
cmp
xchg
adc
add
add
and
daa
add
xchg
icebp
out
stos
push
jnp
es
test
es
cld
jbe
add
mov
call
pusha
xchg
sub
addr16
pop
dec
in
and
jns
xor
fucomip
xor
lock
mov
add
or
sahf
icebp
fs
stc
cld
mov
aas
scas
in
adc
add
push
cmp
aas
adc
pop
inc
fs
jecxz
lods
daa
jne
dec
pushf
push
sbb
rol
and
push
call
and
out
in
cmp
pop
je
jle
cmp
and
mov
nop
jmp
stos
mov
aas
popf
inc
push
je
xchg
daa
xchg
and
stos
pop
mov
sbb
mov
xor
test
xor
scas
pop
add
xor
add
call
lods
inc
sub
dec
sar
fucomp
jno
or
xor
jnp
js
lahf
cvtps2pi
dec
mov
xchg
ret
sbb
dec
rcr
jmp
mov
sub
cmc
cdq
or
jmp
adc
mov
aas
pushf
cmc
mov
add
adc
push
jmp
std
and
test
clc
bound
add
and
jo
jb
ror
in
jge
mov
cld
or
pandn
cmp
cmps
mov
ins
push
xor
aam
je
stos
ins
nop
ja
adc
push
into
xchg
mov
js
icebp
xchg
shl
fs
dec
fdivr
test
adc
ins
in
jge
jbe
ins
cmp
je
sahf
pop
in
mov
icebp
adc
(bad)
popf
xchg
les
sbb
jae
fbstp
add
imul
out
jmp
shl
inc
pop
mov
ret
cwde
dec
and
pop
lahf
mov
cmps
in
sbb
retf
push
lods
mov
les
fs
pop
mov
rol
jge
sbb
out
lock
dec
dec
add
cmp
push
dec
add
xor
push
neg
xchg
push
pop
aas
inc
or
sti
mov
test
dec
nop
ss
js
cmc
cmp
mov
inc
sub
inc
stos
adc
sub
test
dec
jle
push
jnp
adc
cmps
fild
or
add
test
test
add
sub
and
(bad)
and
push
arpl
test
fistp
xchg
inc
xchg
in
ror
pop
imul
inc
xchg
jl
cmp
cmc
or
adc
shl
(bad)
mov
in
jo
out
into
and
in
xchg
xchg
xchg
out
inc
call
bound
ins
xor
mov
shl
loopne
jg
loop
push
in
or
fild
xchg
inc
inc
push
loopne
ret
push
cmc
in
test
jmp
pop
out
adc
sub
imul
out
movs
cmp
pop
mov
ds
xchg
test
add
out
or
inc
sub
test
ja
test
mov
jb
and
das
(bad)
push
add
not
inc
mul
ins
retf
fsubr
cmps
lods
scas
ret
mov
xchg
jge
push
push
xchg
pop
pop
mov
inc
test
dec
stos
idiv
scas
cmps
mov
repnz
mov
sahf
mov
push
ret
jmp
jnp
cld
pop
xchg
xor
sahf
or
(bad)
fdivp
cmps
sbb
xor
test
and
ja
call
jmp
jmp
pop
xor
jg
jb
pop
out
jbe
jecxz
aas
adc
add
push
jbe
pop
jbe
out
sbb
or
jns
or
movs
ja
adc
iret
sbb
dec
cmp
sbb
mov
sub
inc
cmp
mov
test
(bad)
dec
cmp
dec
les
dec
or
(bad)
cmp
mov
push
inc
sbb
neg
outs
les
xor
dec
push
lea
imul
adc
jno
std
(bad)
xor
das
xor
loop
pop
stos
pop
jge
cmp
pop
mov
stos
es
pop
pushf
mov
stc
(bad)
push
xchg
(bad)
sti
fild
div
inc
jns
push
pop
aaa
mov
mov
push
imul
arpl
xor
xchg
aam
adc
pushf
cmp
sbb
xchg
mov
out
inc
push
jne
inc
add
movs
cdq
mov
mov
inc
stos
and
xchg
pop
inc
outs
ret
mov
sbb
daa
int3
test
int
xor
fwait
adc
js
push
xlat
arpl
xchg
stos
js
push
test
fsub
xor
les
sbb
int
inc
rcr
hlt
jbe
mov
inc
mov
lock
cdq
in
sub
adc
jle
add
cmp
or
xchg
push
fcomp
add
repz
sbb
xchg
or
lea
sub
dec
cmp
xchg
mov
ins
sbb
addr16
nop
loop
out
push
add
arpl
add
lds
xchg
lods
xor
and
inc
dec
xchg
shl
pop
outs
iret
jge
in
scas
and
bound
aad
push
push
int
xor
pop
ret
cld
sbb
inc
fiadd
pop
rcr
icebp
inc
ins
cli
into
xchg
dec
lock
sbb
cmp
jp
xor
jle
jo
shl
clc
scas
cmp
push
pop
cld
mov
dec
in
mov
xchg
in
push
lods
inc
in
fwait
xor
inc
add
xchg
sbb
jmp
mov
sahf
adc
mov
inc
dec
pushfw
dec
xchg
addr16
dec
test
test
cmp
ins
inc
out
sub
int3
mov
stos
sub
fistp
sbb
dec
shl
adc
dec
xchg
push
cmps
push
push
mov
dec
add
adc
xor
push
mov
pusha
jo
sub
(bad)
adc
push
jl
jmp
fwait
ror
and
pusha
loope
ds
int
les
ins
into
xchg
js
cwd
mov
test
imul
pop
inc
fs
repz
sti
(bad)
stos
fwait
lock
push
pop
mov
(bad)
lds
adc
std
sub
and
adc
cmp
inc
inc
hlt
xchg
hlt
fwait
shl
(bad)
sbb
add
push
pop
cwde
ins
mov
mov
mov
push
loop
cmp
sbb
xor
sub
push
cmp
cmp
fwait
pop
mov
mov
mov
jae
rol
out
fsubr
jmp
jge
adc
mov
pop
nop
pop
mov
lock
xchg
fsubr
loope
(bad)
ins
or
clc
faddp
imul
shr
cld
or
mov
push
test
pop
stos
sbb
jp
(bad)
push
cmc
(bad)
pushf
mov
add
out
xchg
mov
ss
push
call
mov
bound
cs
mov
sbb
lock
js
sar
adc
jge
bound
jp
lahf
mov
push
daa
adc
xchg
out
and
aad
cmp
ja
jg
mov
jns
cwde
or
outs
pop
data16
push
mov
push
xor
aaa
xor
cwde
(bad)
jge
stc
pop
mov
loop
push
add
push
xchg
cmp
mov
aaa
(bad)
out
mov
xchg
mov
leave
int
dec
push
add
sub
popa
xor
and
pop
pop
repz
sbb
fisub
jnp
cwde
rol
es
mov
push
rcr
or
mov
fimul
pop
xchg
mov
jecxz
xchg
jns
out
pop
sub
sar
add
jnp
cwde
push
push
pusha
les
sub
bt
inc
cmp
jbe
xchg
fiadd
mov
sub
xchg
dec
jmp
inc
rcr
add
ficomp
adc
mov
dec
shr
push
mov
popf
push
ror
sahf
sbb
adc
xchg
inc
sbb
push
(bad)
frstor
jno
push
(bad)
fiadd
push
fsubr
hlt
in
inc
adc
adc
imul
(bad)
imul
inc
ss
popa
fsubr
shl
(bad)
xor
fst
add
lock
inc
xor
xchg
mov
cmp
push
and
ret
and
mov
pop
loop
push
fs
stos
mov
or
jg
inc
pop
pop
xor
in
add
mov
jp
popf
push
icebp
lahf
jmp
shl
imul
cmp
nop
pop
sub
or
mov
add
test
xchg
shr
call
pop
lock
add
fidiv
ins
lods
lods
jns
jp
mov
bound
fdiv
dec
fwait
ret
pop
jmp
loopne
les
shl
xor
cmp
je
sub
shl
jnp
aas
mov
inc
in
mov
lds
(bad)
xchg
mov
mov
pop
js
push
ss
jmp
sub
pusha
stos
mov
xchg
add
mov
mov
xchg
mov
ffreep
pop
movs
cmp
add
outs
es
mov
ss
pop
push
dec
add
or
scas
push
jmp
jmp
jmp
dec
xchg
dec
mov
or
adc
addr16
inc
add
loopne
repz
fistp
push
daa
outs
mov
jb
test
scas
cwde
push
jge
inc
xlat
jp
pop
ds
sbb
bound
jmp
mov
cdq
inc
xor
jecxz
cmp
lods
mov
or
inc
scas
push
fcmovne
cmp
add
mul
mov
lahf
loope
aad
leave
push
les
inc
fnsave
test
jp
push
or
cmp
sub
xchg
call
aad
call
sbb
scas
and
clc
sub
cmp
push
mov
sub
jne
sbb
pop
loope
push
ins
fs
sti
bound
mov
xlat
inc
or
lods
repz
mov
cmp
jae
mov
and
popa
jno
adc
mov
aad
in
mov
test
dec
scas
cmc
push
ja
(bad)
mov
hlt
loope
mov
add
pop
out
in
out
ror
cdq
push
jnp
(bad)
jns
add
aaa
or
nop
loope
mov
xchg
dec
sbb
mov
loop
test
mov
popf
mov
jmp
inc
push
push
dec
xchg
mov
inc
and
sbb
and
jge
cwde
jg
dec
push
fsubr
sbb
pop
mov
retf
dec
mov
jno
add
jmp
movs
aam
inc
(bad)
shl
mov
(bad)
jmp
sbb
movd
mov
cld
adc
push
call
jmp
fisub
xlat
std
sub
in
jmp
mov
test
outs
mov
dec
push
pop
and
add
jo
fstp
xchg
repz
test
std
inc
(bad)
or
push
dec
std
cli
mov
fdiv
enter
test
das
push
ins
jle
(bad)
inc
xor
les
gs
movs
loope
mov
xor
and
mov
fisubr
jbe
std
shr
dec
iret
sbb
xchg
adc
pop
leave
scas
and
inc
pop
movs
inc
and
bound
inc
cmp
lods
imul
(bad)
ja
inc
out
pop
imul
fst
jle
dec
sub
es
and
jmp
lods
ins
ret
aas
xchg
pop
adc
xchg
iret
adc
and
daa
inc
mov
adc
sbb
js
jb
mov
bnd
dec
les
pushf
sub
inc
sbb
scas
push
jp
fadd
js
inc
test
xchg
and
mov
das
(bad)
(bad)
mov
cmp
arpl
je
out
clc
(bad)
fstp
(bad)
xor
mov
xchg
fs
mov
add
sbb
js
cs
add
and
add
std
pop
not
fcomi
test
gs
aaa
or
(bad)
into
je
sub
sbb
jl
cmp
pusha
iret
movs
shl
xor
jmp
out
xor
xchg
inc
xchg
jb
out
aam
mov
es
fs
xchg
out
xchg
imul
aam
aaa
pop
aad
dec
add
mov
dec
push
jb
movs
mov
sbb
scas
push
sub
add
scas
or
mov
jecxz
pop
cmp
pop
loope
call
stos
enter
lods
xor
in
inc
add
scas
push
cmp
dec
call
xchg
aas
pop
and
mov
and
jg
lds
inc
lock
jmp
add
sub
in
adc
xchg
sbb
sub
push
shr
popa
fadd
leave
sar
pop
popa
mov
add
fild
movs
mov
inc
bound
repnz
es
add
sbb
mov
call
rol
je
pop
lods
scas
les
cld
mov
inc
push
and
push
test
dec
lock
dec
mov
mov
sbb
in
in
pop
mov
cmp
(bad)
test
es
jo
cmp
jle
out
call
and
dec
cmp
cmc
scas
rol
sbb
inc
rol
sbb
pusha
es
xlat
xor
aas
mov
fwait
jb
push
lds
pushf
out
jmp
xchg
add
scas
ret
jg
out
(bad)
in
adc
sub
dec
jle
push
out
cmp
jmp
push
inc
(bad)
call
sar
add
mov
xchg
rcr
ja
mov
out
or
cmps
mov
xchg
call
cdq
add
pop
lds
jmp
popa
xchg
lahf
cmp
and
cmc
adc
inc
lods
xchg
sbb
aaa
or
jb
push
(bad)
sub
cs
mov
jo
xchg
fimul
stc
dec
aam
in
outs
in
jnp
add
push
std
lods
mov
out
cld
and
pop
jecxz
movs
mov
ja
pop
lods
test
jl
clc
push
jge
(bad)
cmp
or
or
inc
xor
push
clc
jmp
adc
ret
dec
adc
mov
bound
mov
shl
mov
mov
ins
mov
test
leave
clc
xchg
lock
iret
call
pop
pop
xchg
xchg
mov
push
dec
lahf
add
jl
cmp
nop
xchg
xor
mov
push
mov
xlat
cmp
rcr
and
push
int
inc
push
jecxz
adc
xchg
add
out
pop
adc
mov
push
add
fcmovbe
add
(bad)
(bad)
retf
shr
fucomp
pop
cmp
cli
cs
mov
dec
adc
sub
(bad)
outs
sbb
out
pop
test
sbb
push
out
push
jecxz
xor
push
and
mov
fcom
xor
arpl
mov
(bad)
in
pop
mov
xor
pop
inc
adc
cmp
adc
xchg
jo
jnp
pop
sbb
xchg
xchg
es
popa
out
pop
outs
push
jecxz
lods
ja
adc
mov
repnz
pusha
mov
(bad)
mov
aam
xchg
jb
jg
adc
or
dec
mov
xchg
aad
ret
jnp
cmps
dec
adc
pushf
sbb
sahf
loope
jle
pop
pop
jecxz
icebp
push
aaa
in
fadd
xchg
jnp
pop
data16
fmul
jp
test
adc
cmp
aad
xchg
aas
mov
xchg
mov
std
std
jno
mov
push
test
std
sub
das
outs
inc
int
dec
retf
mov
outs
pushf
test
dec
call
pop
dec
and
mov
repnz
out
imul
add
sub
adc
iret
pop
sbb
mov
and
movs
cmps
mov
xor
sbb
cmp
cmp
popa
push
push
pop
mov
test
cli
push
sub
clflush
retf
sub
fs
popf
scas
push
mov
(bad)
xchg
mov
mov
mov
ret
mov
mov
pop
movs
stc
call
dec
daa
push
std
ficom
add
pusha
add
inc
mov
lds
int
mov
pop
mov
sbb
ja
jecxz
test
clc
cld
je
call
pop
push
ja
mov
fbstp
sahf
std
sub
mov
mov
dec
inc
mov
ret
aam
cmps
jne
push
mov
addr16
fs
jmp
je
jge
lods
pop
in
xchg
repnz
out
xor
sbb
add
inc
inc
pop
pop
stc
jo
xchg
cmp
sahf
mov
jb
jb
xor
xchg
adc
pushf
dec
rcr
cmp
js
or
(bad)
sub
push
mov
xchg
sti
pusha
sub
dec
xchg
test
mov
sbb
add
mov
ins
jle
add
push
lods
js
jmp
mov
out
(bad)
mov
jl
popa
in
ss
(bad)
xor
(bad)
dec
ret
(bad)
sbb
dec
xor
dec
shl
push
sti
xlat
push
pop
pop
jae
bound
mov
repnz
add
loop
in
xor
call
cld
or
pop
aaa
aaa
cli
adc
cmps
out
mov
lods
lock
jecxz
inc
inc
loop
cmp
or
mov
sub
std
popa
jae
imul
jl
repnz
cmps
push
sub
push
(bad)
leave
sub
add
push
dec
jmp
nop
enter
mov
mov
add
movs
out
jp
inc
mov
push
into
sbb
adc
adc
cmp
outs
push
push
outs
test
mov
pop
int
xchg
or
xchg
pop
cmp
fld
xor
mov
push
test
pop
ja
sub
and
mov
sbb
jae
mov
jmp
dec
int
sti
dec
add
inc
push
daa
not
push
xlat
gs
xchg
ror
cmps
xor
ins
push
cmp
rcl
(bad)
cmp
mov
pop
or
xor
push
addr16
stos
cmp
movs
ret
repnz
imul
rol
fwait
cld
cmp
mov
outs
xchg
out
repz
call
push
mov
xchg
dec
loop
mov
icebp
mov
iret
pop
inc
push
push
movs
push
jno
adc
adc
mov
sbb
sbb
sub
mov
lock
jne
adc
or
sbb
add
(bad)
sti
mov
(bad)
enter
inc
mov
fbstp
and
inc
sub
adc
pop
jmp
sub
sub
or
ror
call
xor
inc
mov
pop
ja
dec
loop
cld
or
fstp
mov
jge
mov
dec
imul
inc
clc
push
mov
div
mov
gs
shl
xchg
and
xor
fcmovbe
jecxz
stc
in
dec
adc
aaa
and
out
inc
inc
sub
ss
fstp
xor
test
push
inc
dec
pop
and
in
pop
loop
sbb
aas
js
mov
sbb
loope
fs
aas
mov
out
mov
ret
jecxz
fucomp
inc
sbb
int
cmp
mov
mov
pop
sbb
cmp
mov
daa
mov
push
pop
stos
xchg
mov
mov
cs
movs
test
inc
push
jle
aad
icebp
sub
mov
out
jbe
mov
sbb
arpl
cli
inc
mov
sbb
or
je
rcl
icebp
sbb
dec
xchg
nop
popa
adc
mov
mov
fimul
cmp
adc
inc
movs
jno
fsubr
xor
adc
xchg
fsubrp
je
out
sub
scas
cmps
aas
lods
and
xchg
sbb
stos
shl
adc
loope
mov
shr
(bad)
xor
adc
and
jl
jno
and
es
and
rcl
dec
fisttp
jmp
popa
push
bound
ss
jecxz
hlt
mov
das
lahf
inc
gs
fidivr
dec
jns
mov
in
pop
imul
pop
jns
sbb
retf
outs
fstp
mul
aaa
cmps
inc
mov
(bad)
xor
aam
mov
loop
xchg
and
sub
movs
fs
jmp
pop
leave
push
ret
stc
push
cmc
fwait
add
stos
jecxz
jp
push
pop
repnz
mov
adc
shl
shl
dec
adc
scas
in
cdq
sbb
aaa
add
dec
es
repz
out
jp
ss
adc
shr
les
test
out
ss
mov
adc
xor
mov
stc
dec
mov
lock
call
int
in
dec
fmul
pushf
es
cld
jg
mov
and
addr16
push
popf
inc
imul
outs
and
subps
and
rol
sub
sbb
mov
stos
jecxz
mov
fld
xchg
stos
inc
ds
fldenv
popf
xor
pop
xchg
ss
dec
push
mov
adc
adc
xor
data16
lock
inc
xor
stos
xchg
mov
addr16
shr
xchg
push
gs
popa
mov
xchg
xor
sub
aad
cwde
in
xchg
add
push
sub
ins
loope
addr16
push
push
and
test
pop
or
aam
test
xor
mov
fist
adc
test
jg
fst
sahf
mov
test
mov
push
aaa
inc
bound
mov
adc
cmp
(bad)
jmp
adc
push
adc
ss
mov
adc
adc
pop
pusha
cs
pusha
inc
sahf
repz
clc
inc
xor
mov
test
in
call
aam
jg
lods
jmp
sar
and
cmp
mov
fisubr
jecxz
outs
das
xor
add
sbb
pop
xchg
mov
cmp
jne
add
mov
mov
push
cmp
dec
push
sub
xchg
xchg
jg
push
pop
adc
cdq
dec
pushf
inc
int3
popa
pop
adc
mov
fwait
nop
mov
xchg
xor
aaa
mov
sub
in
enter
arpl
sahf
xor
mov
jmp
pop
lea
push
(bad)
bound
je
or
cmps
sti
aaa
mov
es
enter
aad
sub
jo
add
mul
push
lods
pop
dec
xchg
sbb
adc
pop
dec
(bad)
sti
dec
xchg
lods
push
lea
push
add
or
ja
mov
test
lods
mov
mov
or
enter
out
or
enter
loopne
xor
call
xchg
neg
stc
rol
arpl
mov
inc
sbb
or
xchg
lods
scas
sub
pushf
add
lods
fld
leave
inc
mov
loopne
repz
test
fwait
cli
in
add
outs
add
pop
inc
fisubr
push
sbb
mov
mov
mov
stos
call
cdq
push
loop
and
movs
(bad)
mov
in
push
call
popa
mov
cmc
mov
inc
adc
das
add
inc
aam
in
in
sbb
adc
retf
sbb
(bad)
jnp
or
js
cmc
(bad)
mov
add
imul
sub
cmps
mov
out
(bad)
pop
xchg
mov
adc
daa
and
imul
repz
daa
test
and
test
lock
imul
je
ins
mov
sub
push
ins
dec
aaa
daa
cmp
sub
repz
arpl
xor
fsubp
xchg
sub
sub
or
xor
sbb
imul
mov
or
adc
mov
push
enter
lock
mov
imul
and
sub
push
cmc
push
pop
xchg
push
jl
inc
mov
jmp
mov
and
scas
xor
inc
mov
mov
or
daa
mov
push
push
mov
into
outs
dec
or
repnz
mov
xor
iret
push
mov
test
psubsw
mov
test
sbb
jns
cmp
movs
ja
sbb
push
jle
jmp
fld
pop
in
xchg
and
xor
xor
push
neg
fist
xlat
jmp
arpl
fiadd
sub
dec
mov
movs
or
ja
and
outs
sbb
mov
fcmovne
in
dec
in
repnz
in
pop
jg
ja
xchg
out
pop
xor
aas
call
fisub
xchg
lahf
ins
or
lds
sub
inc
sti
mov
push
scas
cld
mov
shl
inc
xor
lods
daa
imul
pop
pop
js
adc
push
test
mov
jle
mov
mov
xor
or
adc
xor
cmps
mov
adc
or
mov
hlt
out
js
jnp
add
daa
adc
jae
call
jle
jle
or
sti
xchg
loop
mov
cwde
ins
inc
fst
adc
jmp
or
pop
xchg
test
sbb
(bad)
jmp
cmp
rol
xor
inc
xchg
fmul
(bad)
pusha
push
rcl
inc
dec
aas
push
call
sahf
add
sbb
lea
inc
mov
sbb
adc
cmps
xor
inc
stos
mov
push
ja
xor
xor
test
clc
xchg
mov
fiadd
and
loopne
(bad)
adc
sub
jmp
aas
cmp
(bad)
ins
stc
fidiv
pop
test
lods
pop
fnsave
(bad)
push
add
dec
push
jne
icebp
aam
adc
cdq
dec
scas
push
shl
cmp
loope
xor
js
push
xchg
xchg
adc
retf
adc
jecxz
xor
mov
adc
add
xchg
pop
mov
fisttp
xchg
cwde
jp
inc
jmp
xchg
push
lock
dec
and
cld
inc
sub
mov
mov
xor
jmp
fs
pop
sub
idiv
xchg
hlt
dec
dec
call
sbb
das
jo
xor
aam
enter
or
sub
or
int3
or
or
outs
mov
add
mov
or
loop
call
sub
pop
lss
add
push
jmp
mov
imul
imul
mov
cdq
stc
pop
and
mov
fstp
pop
pop
fwait
sub
xor
jl
enter
test
ret
inc
sub
and
nop
das
xchg
and
daa
das
xchg
inc
xor
lock
xchg
dec
fcomp
aaa
sub
sub
outs
sbb
(bad)
xlat
adc
xchg
push
aaa
sahf
add
imul
mov
and
out
push
nop
pushf
mov
retf
inc
icebp
and
retf
dec
add
dec
xchg
mov
sbb
shl
cdq
mov
and
inc
jp
cmps
dec
xor
test
scas
je
ret
cmp
mov
hlt
add
adc
ror
jns
mov
dec
jbe
(bad)
in
pop
mov
mul
mov
enter
mov
push
sub
imul
jl
push
or
mov
ret
pop
pop
out
push
adc
cmp
xor
push
pushf
mov
in
xchg
mov
mov
jg
inc
jg
xchg
mov
xchg
adc
pop
cmps
lods
cmp
mov
dec
sub
jo
cmp
adc
push
mov
mov
push
(bad)
fsub
outs
inc
jge
push
(bad)
mov
jo
jecxz
aam
cmp
dec
sbb
out
imul
loope
je
scas
or
nop
fisttp
xchg
outs
mov
mov
sub
push
int
iret
addr16
(bad)
dec
push
shl
adc
addr16
push
xchg
push
adc
xchg
add
stos
ret
xor
test
pop
fst
shr
sahf
adc
mov
stos
scas
into
mov
and
ret
sub
cmp
inc
pop
movs
dec
pop
or
(bad)
scas
mov
bound
sub
out
je
sbb
mov
popf
jb
stos
mov
adc
sbb
(bad)
out
inc
loop
dec
sbb
out
out
mov
and
cmp
call
bound
adc
mov
fldenv
jmp
cmps
pusha
ins
mov
repnz
inc
(bad)
aam
lods
or
dec
xchg
pop
idiv
ret
sbb
mov
fld
add
add
outs
mov
loope
bound
pop
mov
or
add
sbb
jo
inc
jo
xchg
enter
add
test
ins
(bad)
dec
jb
ret
enter
es
popf
xchg
xchg
(bad)
fs
add
lock
jnp
test
mov
out
push
push
jl
pop
add
inc
cmp
and
mov
sbb
(bad)
xor
hlt
movs
cmps
mov
mov
dec
sbb
iret
int
nop
or
ins
lods
push
cs
aas
jbe
fwait
(bad)
cdq
fild
mov
push
mov
or
push
dec
ret
arpl
and
push
fisttp
dec
push
jb
stc
sar
test
push
pop
fwait
jge
add
mov
loope
xor
mov
push
pop
push
scas
pop
pop
mov
icebp
imul
add
mov
xchg
out
aas
xchg
inc
xchg
or
pop
stc
out
dec
dec
movs
push
push
mov
movs
inc
mov
jne
call
imul
push
aas
daa
and
in
push
movs
add
jae
bound
xchg
imul
out
jb
dec
leave
inc
loope
addr16
test
cmp
loopne
inc
dec
loop
fild
jo
repnz
jge
jg
lods
mov
jo
cmp
mov
pop
rcl
sub
xor
adc
out
or
shr
cld
cmps
lock
add
and
jbe
or
call
jnp
inc
cmps
bound
gs
call
push
popf
mov
fdivr
push
or
xlat
ss
jo
inc
mov
inc
out
xchg
jmp
int3
mul
shl
sti
jbe
stos
dec
mov
jae
outs
dec
fisttp
in
inc
lods
mul
test
das
jae
ds
loopne
jb
into
mov
adc
add
inc
daa
es
pop
je
xor
sbb
push
mov
or
jns
sub
mov
sbb
push
les
adc
add
js
mov
mov
sub
mov
mov
mov
add
lea
push
in
hlt
push
addr16
into
pop
pop
into
sti
mov
mov
clc
jge
mov
dec
mov
not
inc
adc
hlt
and
in
fisub
jecxz
mov
jo
iret
xchg
les
ja
leave
mov
pop
jns
mov
test
jns
push
leave
dec
pop
outs
les
in
retf
and
jbe
pop
sbb
sbb
das
cld
and
xchg
pop
push
push
fmul
dec
sub
nop
outs
cwde
sbb
dec
fwait
cdq
stos
pop
cmp
dec
xchg
mov
aad
mov
ror
add
sbb
mov
mov
mov
stc
push
push
push
gs
mov
repnz
scas
jno
mov
ficomp
aam
scas
aas
cmp
stos
mov
cmps
or
pushf
mov
adc
push
movs
inc
cmp
mov
sub
test
outs
loop
mov
fstp
push
and
ret
sbb
xchg
push
inc
(bad)
int3
movs
adc
jbe
sbb
cld
es
push
ror
pop
jp
adc
aas
loope
inc
adc
add
lds
xchg
les
nop
loop
aas
sar
int3
sub
mov
dec
test
ds
popf
mov
hlt
push
adc
cmp
out
ret
adc
mov
lods
repnz
or
jmp
lahf
add
pop
inc
add
sub
sahf
xor
out
adc
adc
cmp
adc
cmp
sub
imul
cmp
mov
icebp
inc
call
cmps
cmp
jb
dec
shl
into
rcr
ins
jle
nop
cmovle
mov
mov
(bad)
sbb
test
stos
pop
push
push
jecxz
outs
in
cwde
dec
ror
cmps
adc
stc
add
cld
in
pop
xor
stos
xlat
ins
mov
dec
sahf
xchg
sub
mov
xor
pop
xchg
aaa
sbb
sub
jmp
xor
xor
les
add
and
jecxz
out
mov
movs
iret
fabs
div
(bad)
sti
fcom
mov
or
xor
pop
jmp
mov
cmps
rcl
ror
inc
(bad)
lea
and
xchg
imul
cmps
add
mov
ds
leave
inc
jmp
jle
or
movs
mov
add
leave
cs
jns
in
and
sbb
fs
mov
mov
neg
dec
push
dec
data16
dec
jl
dec
xchg
jmp
push
fwait
xchg
mov
mov
call
fwait
scas
rcl
and
add
jecxz
jo
mov
loopne
pop
fistp
jle
inc
jns
cmp
pop
adc
add
xchg
pop
iret
xor
enter
fimul
sub
scas
sahf
mov
pop
cld
sub
fidivr
je
add
repnz
call
push
out
xor
xchg
dec
(bad)
mov
loope
xchg
sub
sub
add
rcl
retf
aas
sbb
push
mov
adc
fnsave
shl
stc
sti
stos
or
jmp
test
in
cmp
cmps
cmc
stc
lahf
inc
jns
fwait
iret
xchg
fisubr
inc
push
inc
jne
ja
shl
out
pop
scas
jae
movs
push
cli
add
rcr
xor
aas
dec
bound
repnz
ins
mov
jecxz
mov
lock
add
cmp
xor
shl
mov
jbe
and
jge
mov
adc
fimul
rcl
test
push
(bad)
dec
in
pop
pop
ss
test
or
in
fwait
sub
mov
cmp
mov
call
fistp
std
cmps
in
daa
ja
xchg
xor
mov
mov
inc
les
mov
and
jns
arpl
dec
aam
or
xchg
sahf
sub
push
shl
adc
test
cmp
mov
or
pop
dec
jns
mov
outs
fcomp
xchg
std
popf
rcl
jb
sbb
cmp
movs
out
and
xchg
cwde
hlt
dec
cmp
sub
push
and
outs
mov
jge
pop
outs
pop
jmp
jae
sbb
int
in
ds
out
or
xor
pop
mov
clc
jno
popa
xor
pop
mov
aas
dec
sub
into
je
in
mov
or
imul
add
inc
pop
imul
in
dec
dec
jo
fdivr
enter
fisttp
mov
xchg
mov
pop
fst
(bad)
out
fnsave
pop
repz
dec
xchg
mov
cld
cmps
mov
mov
aad
jmp
ds
cmc
iret
cmp
adc
hlt
sti
xchg
inc
adc
call
scas
cmp
mov
loopne
in
lahf
pop
fldcw
mov
icebp
bswap
pop
jmp
push
pop
add
xchg
cmp
xor
int3
repnz
dec
jl
xor
mov
(bad)
js
test
cld
add
cmps
and
enter
cmps
into
xor
shl
cmp
in
sar
dec
pop
dec
(bad)
(bad)
inc
lahf
or
push
int
(bad)
mov
loopne
cmps
sub
jbe
ins
(bad)
les
adc
xlat
fdiv
cld
into
xchg
int
daa
out
call
ret
mov
adc
outs
cwde
loop
mul
es
pop
jns
mov
shr
cmp
pop
lds
outs
cmc
outs
in
out
int
call
pop
call
stos
outs
sbb
push
add
jg
ret
loope
mov
call
cmp
cld
addr16
sub
jmp
(bad)
(bad)
daa
lds
jae
in
ret
outs
push
add
sub
nop
js
jns
add
iret
push
aad
sub
adc
xor
je
fwait
jnp
adc
adc
jl
xor
inc
test
cli
push
cwde
dec
ds
test
push
or
inc
daa
ds
xchg
movs
cli
mov
hlt
neg
into
push
fwait
inc
lods
aaa
mov
lahf
out
xor
sbb
mov
call
jmp
popf
and
jmp
iret
sbb
sbb
aad
pusha
xlat
jle
sbb
sbb
mov
xchg
mov
out
pop
sub
ja
push
scas
nop
addr16
shr
pop
push
sbb
inc
test
cmps
outs
cwde
mov
xor
icebp
jle
inc
(bad)
cs
jmp
es
pop
mov
jnp
adc
inc
mov
fdiv
iret
ret
push
shr
jmp
ror
or
dec
xor
jge
dec
and
loop
mov
(bad)
jo
ins
fwait
push
push
xor
pop
aam
leave
sbb
(bad)
cli
dec
in
sub
mov
jae
imul
fild
pushf
lods
hlt
lods
adc
leave
lods
pop
mov
(bad)
ficom
or
lock
ss
dec
mov
call
leave
and
sti
ins
outs
pop
loope
add
or
ja
sbb
dec
pop
mov
pop
fdiv
scas
mov
mov
adc
cwde
sbb
add
cwde
sbb
mov
lods
into
enter
dec
jmp
jle
add
mov
push
loopne
jg
ins
mov
add
repnz
movs
mov
push
mov
imul
fs
les
nop
es
sub
(bad)
in
into
cmps
rol
mov
stos
stc
push
adc
outs
jg
arpl
dec
aaa
mov
imul
xchg
cmps
add
dec
or
cmp
mov
aad
ret
push
or
mul
test
gs
sar
mov
retf
xchg
cld
rol
inc
sub
sbb
(bad)
popa
mov
sub
test
call
push
outs
sub
sub
das
rcr
out
std
mov
jbe
fist
pop
(bad)
loope
jge
fcmovnu
iret
retf
add
mov
mov
(bad)
cs
repnz
mov
mov
out
xor
paddq
pop
jno
ret
stc
jecxz
push
mov
mov
or
in
xchg
push
xchg
mov
in
repz
jo
jo
std
int
imul
das
call
pop
mov
js
stos
push
fprem1
sbb
dec
adc
inc
jnp
in
enter
xor
mov
and
inc
add
test
enter
ret
lahf
test
fnstcw
cmp
and
out
fisubr
cmc
popa
loopne
mov
imul
cmps
mov
int
add
xor
enter
ret
push
aaa
dec
cmps
sub
sbb
push
(bad)
xor
inc
fdivr
mov
xor
inc
movs
sti
push
sub
in
jmp
arpl
popa
dec
inc
in
fs
mov
(bad)
xor
push
or
adc
int
and
scas
add
sub
mov
adc
outs
in
fbstp
pop
fsubr
sti
sbb
pop
xor
cmp
and
push
mov
scas
mov
je
ret
cmp
hlt
push
add
pop
fcmove
sahf
sbb
ins
movs
or
xor
fcomp
and
pop
or
or
outs
dec
cs
xchg
mov
sar
mov
jno
adc
jmp
sub
imul
pop
dec
and
je
pop
mov
or
loope
cmp
xor
cdq
push
bsr
jne
pop
or
in
(bad)
in
popa
mov
(bad)
fstp
inc
cli
int3
or
fisub
mov
hlt
fcomp
sbb
vcomisd
fwait
aam
test
inc
dec
jp
movs
ret
mov
pushf
frstpm(287
add
stc
test
pop
jle
push
enter
and
mov
and
sub
inc
lock
aaa
mov
sub
pushf
ret
dec
pop
mov
fiadd
sub
jmp
outs
jae
pop
pop
les
jl
mov
gs
(bad)
jl
sti
cdq
dec
out
in
mov
bound
mov
nop
push
mov
frstor
hlt
mov
pushf
xchg
aas
push
mov
xor
ss
bound
in
push
idiv
jl
rol
mov
ffree
ja
or
movs
enter
stc
xor
xchg
in
sbb
add
push
loop
inc
push
aaa
pop
out
jo
push
fdivp
arpl
ins
arpl
es
cmp
cwde
pop
ret
dec
or
fst
dec
push
inc
and
xchg
xor
das
xchg
pop
jl
int
ret
fs
cld
les
test
or
inc
mov
mov
jne
inc
xchg
push
iret
dec
or
cmp
fbstp
mov
pop
push
xchg
call
(bad)
repz
cli
sub
js
into
add
fwait
movs
xchg
retf
shl
push
and
pop
out
sbb
stos
pop
shl
lahf
(bad)
stos
pop
pusha
jle
xor
fisttp
or
xor
out
fist
adc
pop
xchg
adc
push
aaa
aas
data16
aaa
push
lods
xor
mov
(bad)
and
sbb
xchg
inc
fwait
ja
add
(bad)
xor
mov
scas
fcom
clc
fidivr
push
jae
test
scas
jle
mov
add
mov
fisubr
adc
retf
ins
inc
add
adc
push
scas
mov
call
ret
cmp
xor
xchg
vcvtpd2ps
inc
xchg
or
add
jle
mov
or
mov
add
mov
stc
jle
push
xchg
or
and
out
push
dec
stos
neg
pop
test
out
adc
call
mov
sub
enter
(bad)
mov
pop
ins
pop
mov
shr
js
imul
xchg
jmp
inc
stos
cli
push
jg
cmps
outs
sti
in
arpl
fwait
mov
mov
inc
or
cmovge
xchg
adc
ret
push
int
dec
loop
aam
pusha
add
shl
bound
test
int3
bswap
xor
sub
push
(bad)
cmp
pop
jbe
cmp
sbb
xchg
rcr
push
retf
aaa
addr16
cmp
ds
xchg
add
jecxz
dec
add
popa
xor
jge
or
xchg
pusha
mov
int
ss
jge
mov
arpl
inc
loope
cmps
in
inc
mov
jbe
mov
push
and
jp
lock
sub
xor
pop
and
in
sub
les
dec
fst
daa
call
fld
mov
mov
pop
sub
dec
not
fs
pop
rcl
add
bound
pop
test
pop
(bad)
adc
dec
clc
add
fwait
pop
test
in
addr16
xchg
push
adc
push
gs
xchg
call
sbb
and
mov
icebp
mov
sub
pop
and
arpl
jmp
xor
sbb
mov
add
ds
mov
out
xor
clc
xor
hlt
xchg
dec
pop
cwde
sub
loope
mov
pop
lea
sub
cmp
popf
and
popf
and
lgs
loopne
lock
test
jge
rol
enter
aam
or
cwde
lods
test
pop
je
lods
lea
mov
cmc
mov
shl
dec
daa
movs
add
test
movs
cmp
cmps
add
sub
or
ins
repz
jle
enter
mov
push
xchg
cmp
arpl
sbb
sub
add
(bad)
pop
cmc
and
push
push
sar
mov
or
xchg
adc
mov
jg
out
jae
dec
idiv
push
ds
loope
ret
sti
arpl
add
pop
movs
out
jge
mov
fmul
mov
rcr
movs
test
int
mov
sahf
and
cmp
jnp
cdq
arpl
push
sub
and
add
out
retf
xor
xchg
sbb
(bad)
adc
outs
xor
hlt
loope
ja
fimul
jg
mov
dec
movs
fmulp
lock
dec
add
ja
cmps
xchg
mov
scas
jae
jns
les
div
ret
mov
add
inc
jp
sub
inc
dec
daa
sub
add
xchg
push
hlt
mov
sti
push
cmp
retf
mov
stos
sbb
mov
shr
dec
ins
ret
rol
mov
aad
mov
shl
stos
or
mov
jae
sub
ss
dec
push
ffree
mov
fsub
mov
push
cmps
cmp
mov
mov
(bad)
xchg
xor
inc
iret
rcr
push
out
add
cmc
jne
(bad)
pop
adc
adc
mov
(bad)
(bad)
loop
push
or
call
sub
add
jp
mov
addr16
sti
div
xchg
loopne
push
cdq
in
sahf
cwde
jmp
shl
mov
cmp
cmp
pop
shr
jecxz
fbld
aam
imul
push
retf
mov
cmc
xchg
ins
outs
mov
pop
mov
pop
in
div
mov
(bad)
mov
pop
dec
adc
lahf
inc
and
cmp
lahf
dec
add
push
pop
mov
int3
ret
movs
xor
lock
xchg
jecxz
lea
push
jae
or
inc
sub
jle
lods
sub
scas
cmp
sub
pop
cli
sahf
mov
or
lods
pop
cli
pop
pop
xlat
xlat
popa
sahf
sahf
call
int
adc
stc
data16
cmps
(bad)
je
fistp
cmp
xchg
jae
xchg
xor
test
cs
pop
push
(bad)
mov
push
push
or
pop
mov
fisttp
add
xchg
dec
retf
out
leave
mov
jp
test
sub
rcl
cmp
mov
push
retf
adc
xchg
pop
aaa
inc
lahf
shr
or
xchg
pop
fucompp
stos
jbe
xor
ins
in
pop
jnp
mov
xchg
or
jno
pop
cld
pop
scas
(bad)
rol
cmp
or
div
cdq
adc
aas
arpl
add
mov
add
jmp
xchg
inc
add
and
fwait
imul
lods
arpl
mov
mov
xor
jnp
or
sub
xchg
inc
sti
rcr
cmp
sub
fld
mov
adc
dec
push
add
xor
daa
mov
bound
push
inc
and
push
lods
cmc
lea
mov
loope
cmps
cmp
xor
cmp
add
test
neg
cmp
shl
jge
jecxz
or
add
mov
xor
sub
pop
shl
retf
inc
fwait
sub
mov
imul
inc
aas
ror
ins
repz
(bad)
cmp
pop
jno
frstor
jg
cli
scas
push
mov
cmp
cmp
scas
icebp
push
out
pop
sbb
(bad)
sbb
ds
dec
xor
dec
aaa
outs
mov
adc
rol
std
xor
sbb
mov
pushf
mov
jbe
jle
leave
inc
icebp
mov
adc
shl
leave
xchg
call
daa
dec
push
and
sub
inc
mov
sbb
sbb
cli
ret
emms
ins
shr
pusha
cmps
icebp
ins
xchg
in
fdiv
(bad)
cmp
ret
fs
ja
out
adc
jne
push
dec
ins
jp
sbb
pop
jle
mov
xchg
inc
adc
imul
cmp
cld
sub
pop
jecxz
xor
(bad)
sub
out
int3
repnz
sbb
nop
scas
push
repnz
cmp
fmul
lods
lock
movs
jb
or
addr16
int3
les
mov
test
and
enter
mov
sbb
out
es
push
rcr
out
iret
mov
iret
add
neg
mov
mov
repnz
and
lahf
sbb
add
test
call
push
dec
add
stos
mov
in
push
xchg
fnstcw
das
jb
jge
imul
mov
icebp
call
jno
adc
test
fiadd
mov
cmc
ret
pop
shl
js
add
(bad)
call
out
inc
and
or
aaa
jbe
movs
xchg
data16
fs
sahf
pusha
movs
ins
jl
jg
cmp
sti
adc
push
or
mov
movs
mov
arpl
push
ds
jg
xor
pushf
mov
sub
jmp
shl
adc
ja
cmp
es
cmp
dec
cld
xor
repz
cmp
xor
push
(bad)
pop
xchg
bound
inc
dec
sub
cwde
in
shl
mov
dec
jns
push
xchg
xchg
push
dec
xchg
sub
push
xchg
hlt
outs
jne
(bad)
cmp
dec
scas
dec
cmp
cmps
ja
les
(bad)
icebp
cmp
or
loopne
add
fisttp
nop
int3
jbe
pop
jbe
or
xor
and
push
shr
js
dec
pop
loopne
add
xlat
mov
push
add
jmp
scas
cmp
cmps
retf
cmp
retf
(bad)
bound
js
cmc
sub
lods
cmps
fnstenv
mov
sub
daa
add
mov
inc
sbb
xchg
dec
or
sbb
inc
scas
idiv
mov
loop
es
int3
and
mov
in
add
push
sub
ins
mov
ins
popf
cmp
mov
xor
mov
out
jae
mov
repz
cmps
add
mov
adc
xchg
stos
aad
add
cmps
sahf
lods
(bad)
imul
lock
inc
pop
clc
mov
stc
leave
push
retf
cld
xor
pop
inc
and
cwde
inc
(bad)
cmpps
pop
sub
imul
sub
out
fldenv
stc
mov
pop
jno
fdivrp
sub
(bad)
lods
scas
ss
mov
test
mov
dec
jge
pop
mov
xchg
pop
div
sub
in
xchg
cmp
stc
or
push
ror
inc
jmp
add
nop
lock
mov
jl
xchg
dec
(bad)
sbb
cld
ins
hlt
add
and
inc
jns
mov
aad
mov
lea
gs
adc
jbe
les
and
aad
push
cmp
mov
fbstp
lahf
jne
mov
(bad)
out
shr
xchg
or
jmp
into
in
adc
jmp
lods
out
mov
int3
pop
pop
test
xor
repnz
das
loopne
add
into
jp
call
dec
mov
and
retf
sbb
inc
push
cli
mov
push
cli
(bad)
mov
in
dec
bound
xor
fcomp
cmps
movs
adc
std
ror
push
push
sti
les
mov
xchg
inc
cmps
push
inc
test
dec
pop
inc
out
pop
or
adc
out
push
jno
mov
dec
sub
dec
cmp
and
stos
mov
lds
pusha
cmp
sub
adc
es
mov
sti
repz
jnp
sub
sbb
aaa
xchg
outs
sbb
mov
(bad)
into
dec
cmp
out
mov
mov
push
cmps
or
xor
adc
cmc
fucomp
(bad)
and
pop
mov
movs
scas
stc
cmp
sub
cli
inc
add
fst
inc
push
pop
xor
jb
inc
and
mov
add
mov
xor
imul
inc
lods
repz
sub
in
dec
loope
fmul
inc
sti
xchg
fs
cld
or
inc
aaa
outs
xchg
sub
xor
pop
in
and
sar
push
or
int
dec
inc
cwde
shl
test
ins
cmp
mov
fs
loope
or
mov
and
dec
jecxz
cdq
mov
xchg
jae
push
mov
mov
cwde
mov
mov
imul
mov
aam
mov
and
cmp
mov
loope
xchg
inc
mov
mov
mov
sub
pop
int3
jae
xchg
(bad)
and
loope
inc
mov
or
clc
neg
and
imul
js
and
cmc
pop
sti
clc
mov
add
pop
jb
sub
fwait
gs
xor
sbb
fsubr
cmps
loop
add
test
mov
int3
sbb
js
stc
cmc
push
das
add
mov
inc
dec
ja
je
in
pop
mov
and
mov
adc
imul
pop
push
or
cmc
sub
mov
pop
enter
test
je
push
stc
repnz
inc
rcr
xchg
pop
xchg
mov
js
stos
mov
les
ja
(bad)
adc
sar
into
in
or
rol
(bad)
cmp
and
dec
adc
mov
std
mov
cs
or
jecxz
xlat
(bad)
cli
stos
cmp
sub
dec
mov
pop
and
inc
add
not
lods
sbb
xchg
cmp
sahf
pop
scas
jns
add
ss
dec
xchg
sbb
imul
jge
xchg
cwde
mov
sub
cmps
cmp
jp
ds
mov
jns
fs
or
sbb
loope
(bad)
jge
cld
test
push
movs
push
xor
push
xchg
mov
ins
cld
mov
div
adc
iret
fucomp
mov
xchg
inc
xchg
jno
push
std
xchg
lahf
jmp
mov
stos
cs
cmp
mov
and
push
and
gs
pop
push
dec
pop
popa
xlat
cld
out
(bad)
std
sbb
or
in
leave
movs
rol
cs
jl
mov
and
cs
xor
sbb
xchg
sub
(bad)
inc
(bad)
adc
xchg
mov
(bad)
xchg
lock
lock
push
shl
mov
jl
mov
dec
les
test
cmp
stc
push
push
mov
cmc
dec
dec
xlat
cmp
cmp
pop
push
sub
setge
cs
jae
imul
sub
push
cmp
rcl
retf
inc
add
repz
cmp
push
and
adc
and
fisttp
(bad)
cmps
data16
stos
jmp
jle
or
retf
loopne
or
push
or
jo
imul
int3
in
or
int
or
stos
dec
push
or
and
mov
inc
push
push
in
mov
out
popf
mov
ins
xor
mov
int3
out
xchg
inc
out
jmp
push
dec
gs
add
ins
cmps
jno
inc
xchg
stos
cmc
mov
xor
inc
jge
in
add
ficomp
mov
dec
lea
pop
push
inc
mov
jp
rol
shl
or
push
cdq
add
push
(bad)
stos
cli
call
aam
mov
mov
mov
jne
test
lea
in
iret
out
popf
add
dec
sbb
mov
nop
sahf
push
xor
outs
and
or
jge
dec
fcmovbe
jno
mov
and
ins
dec
addr16
cmp
cdq
mov
cwde
fstp
into
rcr
lods
sar
mov
or
fistp
mov
std
pop
aad
mov
jmp
mov
cmc
xchg
pop
sti
aas
stos
and
movs
dec
xor
nop
stos
inc
repz
or
cmp
int3
jmp
push
mov
and
loope
xor
(bad)
fldenv
xchg
mov
out
cmps
mov
mov
loop
shl
test
xor
sbb
cmp
dec
sbb
daa
in
sti
inc
iret
jp
jge
loop
rcr
rcr
or
pop
bound
retf
push
pop
cmps
cmovo
sub
fldcw
sbb
jge
fisttp
mov
push
sbb
aas
ss
mov
shl
call
cs
mov
ins
test
mov
mov
mov
mov
push
pusha
sub
rol
imul
mov
and
sub
std
fcomp
in
mov
in
imul
xchg
mov
push
imul
mov
test
mov
outs
inc
jnp
inc
mov
xchg
scas
aas
lock
jle
mov
sbb
jecxz
lds
add
jge
mov
aam
mov
(bad)
jmp
add
fst
dec
sbb
dec
and
jbe
mov
adc
xor
sub
dec
int
jecxz
not
sti
retf
fimul
adc
xchg
mov
fdiv
fs
aam
jmp
fiadd
mov
mov
pop
aaa
push
dec
sub
xor
call
retf
cmp
push
add
movs
xchg
fidiv
dec
cs
in
fwait
sar
in
dec
aad
ins
pop
and
or
mov
mov
and
jge
popf
sub
mov
inc
and
cwde
gs
sub
xor
adc
mov
lock
push
mov
call
gs
nop
pop
mov
or
jmp
pop
sub
push
imul
dec
cmp
cld
nop
rol
pop
std
push
push
fld
data16
sbb
cmp
scas
loopne
scas
ror
jb
jno
daa
jmp
and
js
fsubr
enter
mov
pop
push
ins
pop
cmp
inc
add
repnz
and
imul
add
outs
sub
psubusb
mov
sysenter
pop
movs
(bad)
fbstp
movs
jb
push
xor
push
jge
jno
pop
jns
adc
mov
fdiv
aam
nop
shl
bound
lock
(bad)
scas
ins
dec
(bad)
adc
sti
dec
lods
lds
dec
fidivr
mov
or
sbb
jmp
cdq
stos
out
scas
repz
mov
mov
daa
add
jg
inc
or
ins
or
cli
push
je
cdq
mov
cmps
dec
jl
push
xor
ret
sub
or
mov
mov
mov
rcr
leave
rol
mov
les
xchg
cs
pop
pop
popa
ins
ss
push
and
pop
mov
enter
lods
in
aad
(bad)
xlat
or
mov
dec
xor
sar
loop
in
sbb
adc
mov
xor
inc
lahf
lahf
sti
pusha
js
out
fidivr
daa
sahf
rol
dec
xlat
cmp
push
adc
daa
outs
sahf
jmp
mov
and
je
xchg
cmp
fst
mov
jb
cmp
es
push
inc
dec
push
shl
lods
xor
xchg
loop
neg
mov
movs
ins
sub
or
repz
scas
push
out
dec
lods
xchg
sbb
loope
add
test
mov
sub
xor
push
test
daa
mov
mov
shr
push
pop
ret
out
call
and
in
in
xchg
jns
(bad)
call
popf
xor
xlat
dec
mov
dec
sub
or
mov
enter
mov
jge
sub
sbb
inc
adc
das
lods
out
mov
out
xchg
dec
cmps
jne
data16
iret
add
and
mov
pop
or
mov
imul
(bad)
mov
addr16
push
loop
stc
xchg
xchg
mov
pop
jge
xor
mov
fist
(bad)
pop
movs
pop
(bad)
test
xchg
jmp
rcr
ret
aad
sbb
movs
loop
mov
adc
out
push
inc
out
add
push
pop
jno
std
out
je
push
pop
mov
jmp
lods
mov
xchg
adc
mov
test
push
mov
add
imul
jmp
push
and
jl
xor
shl
(bad)
movs
rcr
stc
dec
fistp
fld
add
retf
cld
jle
fwait
gs
pop
into
cs
xchg
sub
add
xchg
loopne
shr
xor
daa
call
xor
and
mov
imul
cmp
mov
push
stc
sbb
rol
ins
xor
int3
int
cmp
loope
push
mov
push
cli
mov
xchg
cli
out
xchg
dec
cmc
stc
int3
mov
call
inc
cmp
xchg
nop
ficomp
ins
push
movs
retf
pop
ds
push
hlt
(bad)
in
mov
stos
or
cmc
loopne
aaa
scas
jl
rcr
shr
jmp
mov
(bad)
out
fidiv
xchg
(bad)
cdq
xor
mov
fld
mov
push
xchg
out
sbb
mov
fmul
push
inc
mov
or
xchg
enter
clc
mov
das
xchg
adc
test
ror
outs
mov
adc
and
mov
mov
stc
ins
iret
ror
es
mov
sbb
xlat
leave
jmp
movs
cmp
push
daa
jnp
push
push
scas
and
cli
adc
jle
cmc
xchg
push
aas
push
mov
xchg
mov
xchg
cwde
in
or
rol
mov
xchg
add
mov
mov
sbb
ret
cmp
iret
sub
dec
jae
inc
add
sbb
aam
adc
jge
sub
dec
cmp
clc
fnsave
loop
cmps
mov
xor
rcl
sbb
(bad)
ins
jp
sahf
xchg
xchg
jg
ret
bound
xor
dec
jmp
retf
push
data16
mov
jo
es
retf
jg
lahf
outs
adc
stos
or
sbb
icebp
in
cmps
lods
sub
fcomp
mov
sbb
arpl
mov
jo
call
(bad)
(bad)
pop
test
mov
mov
push
movs
sub
out
pop
mov
sub
cmc
test
and
push
jb
or
mov
xor
int
retf
mov
sub
(bad)
out
scas
inc
repz
inc
fisub
pushf
push
arpl
push
adc
lods
jge
stos
push
cmpps
xor
in
push
or
scas
dec
pop
in
scas
jns
outs
sub
ror
or
and
inc
dec
sub
(bad)
movs
call
sbb
out
xchg
sub
imul
dec
jle
cdq
iret
cs
mov
sub
aaa
ret
sahf
mov
ret
repnz
jno
dec
jmp
pop
mov
shr
pop
jno
(bad)
in
sub
sub
shl
je
sub
mov
jns
inc
push
gs
dec
adc
test
xor
jnp
push
push
bound
dec
and
push
outs
jmp
sub
imul
shl
sub
stos
lea
xchg
adc
lahf
or
mov
mov
mov
pop
cmc
aas
fstp
push
pop
pushf
push
sub
push
xchg
mov
xchg
inc
sahf
cdq
fdivr
lods
xor
pop
fist
mov
lods
addr16
mov
pop
pop
xchg
lock
stos
dec
xlat
inc
push
fwait
aas
test
xor
sar
test
popa
fldenv
jb
xchg
sbb
dec
stos
out
cmp
push
inc
lods
cmps
cmp
lea
(bad)
adc
fmulp
dec
je
stc
jge
cmps
iret
call
xchg
or
ins
inc
repnz
pop
(bad)
cmp
and
mov
std
mov
jo
ror
int3
mov
(bad)
sbb
sbb
repz
out
jp
retf
jmp
jne
test
ss
push
(bad)
fild
pop
lods
adc
stos
ins
sar
adc
sbb
ins
pop
in
add
push
cld
aaa
dec
pop
cmc
call
pushf
xchg
mov
data16
or
fdivr
icebp
mov
test
mov
xchg
movs
pop
push
daa
lods
jmp
dec
push
jmp
jns
jmp
call
jge
mul
or
pop
or
cmp
mov
scas
cmp
inc
std
mov
mov
adc
dec
or
shl
inc
outs
call
std
out
adc
adc
(bad)
cld
aad
sub
out
mov
aam
sbb
fsub
and
dec
and
dec
push
out
ror
sub
std
xchg
xor
mov
movs
std
push
push
sub
jp
lods
cmp
gs
outs
mov
inc
jg
mov
pop
out
je
push
mov
gs
sbb
and
jmp
and
imul
mov
out
js
pop
test
outs
sub
mov
lods
in
cmc
jecxz
out
rol
dec
fstp
and
call
push
jl
push
push
xchg
add
xchg
sbb
lods
mov
inc
jae
mov
jae
jg
mov
jge
call
mov
ins
sub
bound
xor
or
jbe
in
xor
clc
out
dec
push
mov
outs
xchg
stc
jmp
mov
popf
cmp
out
lock
and
icebp
jae
rol
call
stos
add
inc
arpl
dec
mov
movs
mov
movs
(bad)
ror
loop
fnstenv
call
lds
in
or
cmp
xlat
cmc
xor
pop
ins
xor
out
mov
xchg
movs
pop
jne
or
sbb
pushf
xchg
mov
sbb
pushf
add
rol
sbb
pop
add
dec
mov
xchg
pusha
jb
or
into
inc
jne
jae
mov
enter
inc
imul
loope
and
mov
inc
mov
out
sbb
scas
push
gs
xchg
int3
dec
ins
or
jmp
out
cwde
pushf
fcom
bound
jl
das
test
jmp
adc
inc
push
dec
fcmovb
je
sbb
dec
repnz
jno
push
cmps
call
mov
xor
cmp
cmp
test
mov
cmp
pop
inc
jle
arpl
mov
cmp
cwde
or
popa
dec
pushf
js
addr16
movs
int
mov
out
mov
jp
mov
imul
dec
ins
pushf
pop
dec
xchg
rcr
and
xchg
cmc
adc
int3
jbe
shl
jge
sbb
pop
(bad)
sar
mov
int
in
lods
lods
sub
cli
shr
pop
sub
mov
aad
cmp
mov
xchg
out
mov
fs
inc
mov
cmp
xor
mov
int
loope
fld
inc
mov
int
pusha
mov
xchg
jecxz
pop
pop
jno
fdivr
call
inc
mov
repnz
addr16
sub
daa
addr16
adc
fstp
nop
xor
in
fstp
dec
xlat
fidiv
fisttp
xchg
xchg
cmp
mov
add
mov
call
(bad)
sbb
popf
nop
aas
or
popa
add
movs
pop
les
sbb
sub
fsub
les
xchg
adc
and
adc
shl
retf
loope
cs
jne
movs
jp
fwait
jp
movs
push
or
mov
aad
sti
not
adc
fiadd
jecxz
add
repnz
test
cld
in
add
cmps
fstp
mov
fucomi
sbb
neg
adc
daa
dec
adc
scas
and
mov
adc
sbb
inc
mov
dec
repz
xchg
add
cmp
mov
fistp
xor
adc
sar
mov
fistp
repz
jns
xchg
xchg
sbb
xor
dec
cli
enter
in
pop
shr
sbb
js
mov
sub
cdq
mov
add
jne
xchg
fimul
sub
cmp
mov
and
push
cmp
and
xor
(bad)
jne
xchg
int
jmp
pop
push
jne
jno
cmp
lds
repz
outs
xchg
daa
mov
repnz
inc
jb
xchg
call
cmp
mov
mov
pusha
rol
jge
hlt
in
sar
mov
rcl
ficom
hlt
dec
pop
adc
or
int
sub
jne
mov
hlt
mov
shl
mov
inc
test
cmp
int
mov
cmp
call
dec
mov
shl
jge
into
in
pop
lahf
inc
loopne
ds
nop
jg
aad
mov
push
and
cld
mov
mov
dec
movs
xchg
enter
imul
mov
mov
jae
mov
pop
add
out
sub
hlt
jbe
neg
dec
outs
daa
pusha
mov
in
jbe
mov
and
sub
cmps
out
pop
jae
cmp
retf
imul
jne
adc
push
inc
call
fstp
pop
fadd
sub
inc
dec
not
gs
mov
shl
inc
imul
loope
push
je
jmp
(bad)
loope
addr16
push
sbb
out
mov
cld
test
pop
pop
leave
rcl
int
arpl
ins
cmp
adc
xchg
pop
ins
or
xchg
fidivr
and
gs
jmp
daa
sbb
push
xchg
push
xor
dec
pop
mov
int3
xchg
add
fnstenv
dec
addr16
push
cmp
dec
inc
test
xchg
or
(bad)
hlt
jne
inc
out
shr
jp
xor
add
lods
mov
or
ins
mov
stos
sbb
mov
sbb
push
jmp
mov
mov
mov
adc
jns
mov
sti
cmp
inc
adc
sti
or
jg
retf
test
ins
and
or
jmp
in
test
cmp
push
test
dec
retf
or
push
outs
add
movs
xchg
sbb
aad
arpl
mov
push
fsub
sbb
dec
call
sti
pop
mov
xor
mov
shl
test
enter
into
or
cmps
leave
jmp
lds
mov
push
arpl
mov
sti
cmp
call
push
stos
cmps
ret
daa
push
mov
(bad)
cmps
dec
(bad)
test
jne
std
mov
jno
mov
cdq
imul
jl
mov
aas
mov
test
lock
push
fs
or
fdivr
pop
aam
cld
sbb
push
js
jp
sbb
jb
add
jnp
retf
repnz
mov
jecxz
inc
movs
sub
lods
dec
xchg
dec
loop
inc
inc
push
sbb
jecxz
lea
into
scas
out
dec
jb
xchg
sub
xchg
adc
pop
mov
xor
loop
jmp
cld
shl
int3
jmp
fisub
adc
cmp
(bad)
scas
lock
cmp
sub
push
pop
sbb
fistp
enter
mov
xchg
and
adc
mov
in
rcr
int3
push
mov
fcmovnbe
ror
outs
stos
loope
push
retf
push
rcl
xchg
push
mov
pop
mov
xor
cdq
mov
fs
fwait
aaa
pop
in
mov
and
jge
lahf
shr
ja
xchg
or
imul
sbb
lea
xchg
mov
gs
in
mov
call
push
mov
sbb
mov
(bad)
mov
cmp
jmp
dec
mov
xchg
test
(bad)
mov
add
or
mov
or
jb
repz
loop
jmp
and
addr16
int3
imul
or
sbb
pushf
mov
xchg
je
adc
mov
retf
xchg
test
pop
xchg
push
and
stos
push
mov
leave
addr16
xor
push
adc
mov
lods
js
pusha
jns
dec
sahf
lock
popf
jp
dec
push
inc
movs
pushf
ins
adc
add
mov
das
jns
mov
push
(bad)
sub
jnp
in
es
scas
adc
mov
movs
pop
xor
ds
xchg
scas
fs
jmp
lock
ins
iret
out
das
fcomp
(bad)
fnstcw
cli
leave
and
xor
or
add
mov
(bad)
fcomp
adc
icebp
cmp
jns
mov
ret
scas
(bad)
(bad)
imul
fld
sbb
mov
rcr
daa
sub
(bad)
jns
imul
repz
repz
sbb
add
clc
lahf
in
sbb
xor
add
jae
mov
add
out
out
jnp
and
scas
adc
movs
inc
add
int3
test
leave
mov
and
popf
mov
scas
mov
test
jmp
ret
into
mov
mov
mov
rol
ins
mov
sbb
jge
js
xlat
int
jg
ja
xor
push
pop
jmp
enter
add
jge
call
(bad)
pop
jo
gs
test
inc
xor
and
cmp
inc
sbb
aad
int
and
ds
clc
stos
xchg
aad
xchg
aaa
ret
shl
es
push
mov
cwde
cmp
cmc
push
jecxz
jmp
and
int
jne
aas
push
xchg
dec
cld
rol
mov
pushf
xor
not
and
outs
pop
pop
xchg
adc
call
sub
rcr
xchg
or
pushf
pop
inc
inc
jl
(bad)
adc
xchg
mov
pop
out
rol
jecxz
ret
lods
sub
rcl
into
pushf
pop
nop
inc
scas
jle
or
cdq
jb
jbe
cmps
cmp
out
add
jae
inc
xchg
loopne
cdq
mov
enter
movs
jge
ja
xchg
in
dec
jecxz
sbb
lock
mov
mov
mov
out
xchg
mov
pop
inc
jl
mov
sti
push
hlt
sbb
dec
sahf
cmp
outs
repnz
push
cmp
push
inc
xchg
in
fs
push
test
xchg
jp
mov
add
mov
inc
and
inc
pop
movs
fcom
dec
cmp
out
xchg
scas
int3
inc
retf
and
jb
sub
and
ins
mov
aam
mov
mov
lods
mov
iret
frstor
daa
inc
(bad)
sbb
add
dec
movs
sbb
sbb
dec
adc
fmul
test
push
push
pop
xchg
xor
or
ret
xchg
out
mov
lds
leave
mov
loope
or
mov
pop
fistp
out
fld
cmc
sub
ficom
adc
or
adc
cli
dec
mov
repnz
gs
cs
jg
dec
in
int3
pop
cmp
or
sub
add
mov
mov
adc
stos
imul
pop
fwait
jne
mov
icebp
call
and
stc
scas
mov
pop
jp
sbb
mov
dec
xchg
mov
push
add
call
aaa
or
jmp
lods
push
xchg
and
movs
push
hlt
mov
ret
mov
cmp
xor
adc
add
add
sub
into
xchg
enter
xchg
dec
mov
jmp
xchg
mov
xlat
or
shl
je
pop
add
es
add
sub
outs
cld
(bad)
ja
int
daa
(bad)
mov
mov
movs
xor
(bad)
pop
(bad)
stc
sub
jle
shr
outs
call
pop
ror
int3
test
ja
sar
mov
xor
fisttp
lods
sbb
pop
outs
repnz
jle
aam
xchg
pop
mov
jmp
inc
(bad)
ror
xlat
push
pop
push
push
xchg
push
sbb
jo
ja
les
inc
cmp
jmp
mov
rcl
cmps
iret
stos
pop
pop
inc
inc
(bad)
fild
movs
pop
ins
dec
or
mov
add
and
cdq
imul
jo
fwait
xchg
or
push
add
mov
sub
pushf
mov
sbb
call
imul
iret
cmp
sbb
sbb
add
fldcw
movs
push
test
imul
xlat
xchg
sub
bound
pop
xor
inc
movs
push
hlt
fnstenv
fiadd
push
push
or
aam
(bad)
shr
test
inc
retf
lea
outs
ret
aad
inc
xchg
lea
scas
inc
scas
pusha
cwde
mov
int3
rol
popa
retf
mov
sahf
pop
xchg
sub
jecxz
adc
or
push
jle
or
or
mov
lea
int3
inc
je
ret
stc
mov
retf
(bad)
out
(bad)
out
outs
push
repz
push
cmp
or
mul
mov
push
xlat
lds
(bad)
pop
leave
dec
fsub
jl
leave
fwait
shr
daa
out
in
fild
mov
test
mov
mov
sbb
and
jp
bnd
(bad)
popa
xchg
stc
iret
and
and
jb
movs
fiadd
test
int
mov
push
outs
cmp
cmps
inc
(bad)
add
fwait
loope
and
or
sub
dec
(bad)
ss
sbb
push
mov
ins
xchg
pop
cmps
xchg
cmps
out
and
or
mov
cmps
dec
push
sbb
out
pop
pop
cmp
sbb
mov
dec
rol
pop
leave
frstor
in
rcl
push
cmp
mov
mov
stos
mov
adc
xchg
xlat
mov
dec
inc
inc
fstp
sub
push
les
push
cmc
ins
lahf
dec
or
fwait
nop
jg
lds
cmps
pop
mov
out
sahf
jno
aad
push
dec
sub
test
imul
mov
mov
pop
xor
mov
movs
mov
add
jl
aas
mov
pop
cli
sub
mov
iret
int
mov
mov
aam
retf
sub
dec
std
popa
push
shr
xor
hlt
pop
test
cmps
push
movs
in
iret
sar
imul
push
int3
jmp
xlat
jmp
sbb
mov
xchg
add
iret
cli
js
sbb
and
in
cmps
(bad)
bnd
lods
sbb
mov
xor
push
fsubr
and
movs
push
jmp
xchg
popf
imul
leave
popf
rcr
mov
stc
nop
ss
rol
movs
movs
cmps
js
inc
pushf
fs
(bad)
stos
jmp
in
pop
sbb
mov
fbld
fild
mov
sbb
pushf
inc
cs
test
xchg
inc
sub
mov
inc
cmp
aam
cmp
or
stc
mov
inc
sti
int3
push
inc
lea
int
inc
inc
out
sahf
inc
dec
fsincos
icebp
dec
jecxz
dec
pop
call
add
cld
pop
rol
aas
(bad)
xchg
jbe
inc
sbb
lahf
xchg
xchg
dec
mov
call
movs
pushf
adc
inc
sub
adc
loopne
loop
fst
cmp
fsub
jno
sbb
lds
shr
jmp
and
mov
js
clc
retf
cld
popa
mov
or
adc
shl
add
lahf
inc
or
clc
retf
(bad)
push
dec
les
jb
ins
mov
push
mov
and
push
cmp
add
icebp
movs
fcmovnb
inc
push
dec
pop
cdq
sbb
pop
and
sbb
and
xor
dec
lahf
movs
push
mov
sub
ja
aad
stc
sti
push
repz
sahf
or
sub
sbb
jno
xchg
mov
arpl
xor
dec
adc
adc
inc
pop
cmp
sub
cld
fs
sub
nop
inc
loopne
inc
out
nop
sub
test
pushf
mov
rcr
pop
mov
in
and
(bad)
xor
(bad)
je
adc
cli
mov
dec
sbb
mov
mov
mov
sub
cmps
xor
pusha
and
inc
xor
mov
sbb
and
inc
scas
imul
aam
xchg
pop
add
add
jae
mov
xchg
xor
add
mov
iret
mov
pop
sub
pop
add
je
mov
and
inc
pop
movs
mov
dec
inc
inc
mov
mov
test
popf
jp
xchg
icebp
int3
inc
mov
sbb
dec
cld
pop
js
pop
push
mov
mov
sub
outs
retf
jne
sbb
sub
push
jo
cmp
pushf
test
sub
ror
enter
int3
mov
imul
push
pusha
sahf
loope
test
arpl
or
pop
and
or
push
pushf
sbb
ja
rol
call
sub
and
les
jne
jl
(bad)
fsub
xchg
jns
jb
cdq
pop
pop
es
cs
cmp
dec
pop
nop
mov
dec
xchg
aad
or
dec
into
jecxz
sbb
inc
cmp
rcl
jl
mov
es
(bad)
cmp
cmp
pusha
or
add
(bad)
jecxz
adc
xchg
xchg
aad
in
xor
loop
inc
scas
jo
pop
sbb
mov
mov
add
adc
(bad)
je
add
cwde
xchg
aas
leave
inc
pop
jl
(bad)
test
test
pop
mov
sub
jb
das
(bad)
mov
ret
push
cs
leave
mov
mov
mov
dec
icebp
iret
cwde
pop
dec
dec
icebp
pushf
dec
mov
dec
leave
out
mov
int
call
dec
and
add
push
add
push
xchg
push
mov
(bad)
jmp
push
mov
out
test
int3
shl
cmc
mov
mov
in
sub
data16
(bad)
gs
scas
mov
jle
mov
lahf
adc
pop
xchg
pop
or
aas
sbb
jb
jge
clc
add
dec
inc
test
jp
mov
or
push
and
sar
jo
inc
push
stos
cmp
jo
or
mov
mov
test
push
ins
add
shl
ss
mov
inc
sub
and
out
and
es
inc
loope
sbb
(bad)
mov
inc
loop
xlat
fwait
pop
in
addr16
cmp
shl
inc
movs
scas
add
inc
mov
push
ins
mov
push
sbb
shl
ja
dec
xor
cld
add
or
add
push
popa
je
dec
test
pusha
xor
sub
imul
adc
rol
pop
jae
cmp
inc
xchg
imul
pushf
int
cmp
outs
movs
cmp
sbb
sahf
aad
std
jle
ja
call
(bad)
jecxz
sar
stos
push
sub
in
lock
test
xchg
jno
mov
push
(bad)
mov
icebp
sar
sti
test
std
ins
aas
cdq
push
aam
mov
and
jne
jp
jg
out
jbe
mov
mov
into
in
or
aam
pop
sub
gs
ds
or
xor
mov
sub
in
(bad)
fdivr
shl
jle
jp
sub
inc
js
shl
mov
pop
push
mov
not
or
fistp
jmp
and
and
and
fwait
(bad)
ins
ret
jbe
jmp
mov
pop
jne
sub
hlt
sbb
shl
mov
adc
fild
inc
mov
mov
loope
pop
leave
fcmovu
sbb
or
popa
loope
sbb
mov
call
stos
jg
sahf
movs
ins
push
add
jge
mov
stos
lea
jmp
pop
rcr
push
inc
push
rcl
inc
jbe
call
mov
popf
sub
mov
jmp
jmp
in
ret
test
adc
leave
xchg
test
sbb
push
mov
cmp
call
push
push
jne
addr16
test
repnz
(bad)
push
rcl
inc
xchg
(bad)
mov
cmps
fyl2x
adc
and
mov
iret
push
je
stos
xchg
rep
into
jecxz
mov
xor
(bad)
cli
mov
push
push
aad
in
fnsave
mov
sbb
repnz
loop
mov
mov
push
hlt
scas
shl
clc
ss
(bad)
pop
mov
mov
mov
outs
inc
push
aaa
fcmovnbe
scas
mov
mov
(bad)
arpl
pop
xchg
push
mov
mov
mov
ret
mov
lods
jno
out
adc
fdiv
xor
dec
js
(bad)
pushf
xchg
in
xadd
cli
out
add
cdq
je
push
std
jbe
daa
movs
repz
frstor
adc
adc
or
xchg
or
test
inc
sub
mov
sbb
lea
lahf
outs
rol
mov
daa
mov
cdq
jl
cmp
mov
int3
push
not
sub
and
mov
cdq
pop
push
dec
mov
hlt
(bad)
fisttp
or
movs
jmp
push
cwde
loopne
in
daa
mov
ror
jg
rcl
arpl
dec
mov
icebp
xchg
sbb
inc
jae
es
cmps
xor
outs
and
mov
arpl
das
jb
cmp
mov
push
nop
sbb
or
xchg
stos
div
adc
outs
mov
sbb
jb
jnp
and
sar
cld
nop
into
sub
sub
fld
mov
pop
inc
iret
jnp
ffreep
shl
in
mov
xor
push
xor
jae
push
jl
ret
out
gs
xor
cli
lods
lahf
xchg
cdq
xor
aaa
sahf
or
into
das
push
mov
inc
pop
jbe
outs
retf
ss
ins
sbb
jge
or
js
mov
test
lods
and
xchg
not
add
fdiv
inc
shr
(bad)
pop
sbb
dec
test
push
sub
dec
pop
mov
imul
adc
sub
aas
fwait
scas
clc
call
popa
test
iret
mov
outs
outs
xchg
out
push
jmp
imul
sbb
fistp
in
xor
jle
mov
(bad)
shl
and
fbstp
add
sti
cmp
inc
lahf
or
dec
cmp
jno
(bad)
sub
pop
mov
outs
test
int
mov
lods
cmp
cs
mov
ja
in
clc
cmp
fwait
inc
cdq
cdq
adc
aas
lock
push
retf
das
gs
bnd
daa
mov
mov
lods
or
xor
cmp
out
ret
xchg
loop
out
(bad)
fsubrp
into
mov
xlat
xchg
sub
sub
xor
(bad)
mov
hlt
gs
jnp
cmp
lahf
les
mov
mov
cld
fstp
fldenv
lock
sub
sub
cli
add
push
cli
scas
push
cmp
mov
fs
call
rcl
sub
je
jae
fld
mov
clc
shr
test
and
add
adc
jnp
or
outs
adc
std
jg
out
xchg
int
aam
pop
scas
rcl
or
sbb
adc
mov
sbb
add
mov
scas
adc
ror
push
enter
fcomp
sub
mov
mov
sar
mov
pop
cmp
dec
mov
in
je
std
push
dec
cmp
mov
retf
rol
ss
jl
pop
and
push
into
fild
imul
jle
xchg
shr
les
add
jne
ja
push
mov
call
pop
dec
fld
sbb
repz
cmps
jle
mul
fiadd
int
mov
ins
mov
int3
jp
sbb
sub
cli
jmp
sahf
pop
jns
jmp
pop
iret
ja
jne
add
fnstsw
push
adc
adc
xor
in
outs
dec
mov
rcl
mov
jmp
retf
pushf
push
push
pextrw
fimul
(bad)
jle
cs
loope
cli
mov
and
add
aad
in
loopne
adc
cdq
jp
sub
mov
loopne
inc
xchg
retf
in
jl
push
hlt
pop
test
lock
std
fld
add
mov
scas
jmp
loope
mov
mov
mov
xor
fldlg2
cmp
ins
loope
outs
add
xor
je
pop
push
sub
cmps
out
(bad)
cmps
lods
cmp
jl
scas
pop
aam
adc
(bad)
adc
scas
push
iret
ret
dec
int3
mov
(bad)
pop
in
pop
ret
iret
repz
(bad)
sahf
xor
inc
dec
rcr
icebp
inc
retf
mov
arpl
(bad)
iret
add
ja
xchg
and
sbb
inc
out
jb
fwait
scas
fimul
and
cmp
(bad)
jo
outs
stos
ret
push
rol
or
scas
cld
clc
dec
mov
cmc
and
pusha
je
jno
mov
sub
lock
into
cmp
mov
adc
out
lea
push
js
dec
mov
add
mov
arpl
ss
mov
adc
cmc
pop
xor
icebp
pop
jb
pop
retf
lds
xchg
not
mov
adc
(bad)
call
or
out
scas
add
lahf
scas
aad
inc
cmp
mov
fsqrt
inc
daa
jns
adc
(bad)
mov
sub
stos
push
iret
rcr
std
xor
lds
fwait
je
xlat
xor
inc
mov
sti
jno
jbe
push
and
and
add
dec
fiadd
cmps
in
sbb
mov
nop
aam
adc
lods
lea
add
push
xchg
aam
movs
addr16
out
and
aas
adc
popa
sbb
sar
arpl
in
leave
test
int
mov
sar
retf
out
daa
ret
and
jo
mov
ds
cmp
pop
cmp
pop
xchg
push
or
inc
jl
mov
js
add
aad
pushf
mov
out
inc
ja
pop
popf
outs
cld
cmps
mov
nop
mov
inc
mov
mov
popf
dec
mov
jnp
fst
jp
in
cmps
cmc
mov
sub
xchg
cmp
jno
(bad)
xor
in
ret
sub
loop
loop
adc
js
pop
cld
mov
sbb
cli
outs
outs
or
pop
mov
add
jb
mov
fldcw
xor
or
jle
pushf
xor
mov
jb
sbb
mov
cmp
cmp
xchg
adc
push
outs
cli
jae
dec
mov
or
dec
pushf
jmp
cwde
retf
addr16
push
sub
dec
push
xor
xor
inc
and
in
das
sbb
pusha
call
sahf
xchg
jmp
mov
and
push
fucomi
cmps
add
add
cmp
loope
or
sub
(bad)
retf
pop
call
gs
xchg
mov
add
cmp
and
push
jae
repnz
cwde
test
mov
(bad)
shl
loop
shr
bound
add
xchg
push
fist
(bad)
fwait
pop
cmc
sar
sti
ficomp
inc
bound
call
and
(bad)
stos
and
jo
cmp
xchg
and
adc
addr16
fucomp
out
sub
out
jnp
movs
add
fisubr
call
cmp
pop
jnp
outs
or
inc
push
jns
xchg
and
jmp
aad
int3
out
adc
call
sub
dec
add
or
dec
and
outs
popa
ficom
xchg
xchg
popf
dec
aad
repz
dec
pop
sbb
xor
jmp
jge
std
or
std
jge
aam
in
jb
mov
enter
(bad)
in
dec
xchg
aam
pop
xchg
hlt
mov
repnz
adc
mov
and
gs
sbb
mov
dec
mov
pop
popf
inc
push
and
or
sub
push
sub
cmp
and
(bad)
push
mov
sub
fmul
xchg
mov
jl
ds
stos
(bad)
sub
mov
addr16
mov
pop
fidiv
out
inc
jb
inc
inc
pop
bound
mov
loop
imul
cmp
and
push
xchg
in
fistp
scas
in
rcl
neg
in
pop
dec
mov
ds
movs
pop
mov
loop
xchg
or
adc
mov
(bad)
xchg
cmp
add
push
inc
ins
inc
adc
stos
je
xchg
push
std
adc
pop
adc
fs
xor
in
popa
xor
push
jecxz
mov
iret
push
jmp
mov
and
jl
test
jmp
ficom
or
adc
fbld
sbb
push
call
stos
cli
je
add
loop
pop
push
out
dec
fsubr
jecxz
aaa
dec
add
or
test
cli
cld
mov
test
and
hlt
dec
and
pushf
fild
mov
test
xchg
es
(bad)
xor
mov
outs
adc
aam
pop
test
push
pop
mov
mov
in
or
xor
out
mov
in
dec
mov
jmp
mov
or
add
(bad)
pop
add
inc
pusha
jmp
ja
jne
xor
pushf
sar
js
inc
xor
jmp
xchg
jmp
adc
push
cwde
out
xchg
or
mov
jne
jmp
pop
sub
ds
or
sahf
call
retf
hlt
leave
mov
ficomp
stc
into
mov
add
or
jbe
pop
pushf
pop
imul
int
mov
int3
or
gs
cmp
in
ror
aaa
sbb
dec
lock
(bad)
aam
sbb
pop
call
mov
inc
outs
push
ds
push
dec
mov
jp
pop
dec
mov
mov
int3
jno
into
push
cld
std
mov
jl
sub
or
xchg
arpl
repz
mov
cmc
fadd
or
push
xlat
xchg
jge
adc
add
test
inc
clc
dec
push
sbb
xor
movs
xchg
fidiv
dec
(bad)
jae
cmp
aam
dec
das
push
mov
or
pop
mov
rcl
push
lahf
lock
lea
movs
fdivr
jno
sub
hlt
mov
pop
or
xlat
leave
push
jne
jmp
ja
stc
mov
or
int3
js
push
call
ins
sub
test
leave
mov
nop
mov
add
(bad)
fst
pop
pop
add
(bad)
ss
xchg
push
ja
mov
js
inc
dec
mov
jae
sub
mov
jbe
shl
push
je
repz
out
adc
mov
xchg
mov
add
push
jg
jmp
pop
int3
add
(bad)
mov
outs
xor
pop
out
mov
sub
jnp
stos
js
xlat
bound
fwait
mov
or
icebp
ja
test
add
xor
loop
inc
mov
push
fadd
dec
add
jmp
sub
rcr
sub
and
add
push
inc
rol
or
cmp
sbb
sub
fisubr
xor
pushf
stos
jb
mov
int
mov
and
fsub
ss
out
pop
in
dec
nop
in
push
in
jp
nop
pop
sub
popf
sub
jns
cmps
cld
sar
pop
cmps
xchg
popa
shl
and
rol
add
test
or
cmp
fcomp
(bad)
jl
sbb
or
jg
add
fs
push
push
push
sahf
(bad)
stos
test
aas
add
sub
gs
(bad)
cmps
test
js
sub
xchg
aas
mov
(bad)
cld
dec
les
jae
and
js
adc
retf
push
popf
call
push
ds
ds
jne
xchg
movs
sbb
fs
lods
sti
cli
and
(bad)
xor
and
pop
adc
mov
les
daa
and
(bad)
sub
mov
mov
mov
arpl
jns
dec
stos
aam
out
clc
cmp
add
xor
push
mov
mov
mov
adc
nop
es
aad
and
in
dec
sbb
retf
jno
mov
imul
addr16
retf
pop
jmp
out
je
push
leave
dec
cmp
mov
cld
inc
(bad)
xchg
ins
aad
(bad)
mov
in
movs
xchg
outs
icebp
shl
mov
cwde
retf
scas
in
add
jge
add
xor
dec
jle
mov
loope
push
mov
push
les
jecxz
stc
sahf
iret
mov
mov
sub
hlt
(bad)
test
shl
mov
push
push
mov
aaa
in
daa
and
ja
jb
retf
ja
dec
popf
push
jmp
add
ficom
dec
jg
fadd
jge
mov
sub
adc
mov
and
cmc
push
je
sub
in
movs
gs
adc
push
test
cwde
outs
mov
div
ss
sahf
dec
nop
out
and
(bad)
fiadd
daa
xor
into
retf
pusha
sbb
icebp
mov
inc
das
adc
dec
idiv
xlat
aas
lahf
in
push
sub
shr
mov
fsub
push
inc
push
jle
pushf
(bad)
retf
fnstsw
push
pop
add
mov
push
ja
jmp
(bad)
adc
ins
je
or
fcom
repnz
es
mov
mov
push
add
and
fwait
mov
mov
pinsrw
mov
pop
dec
je
jecxz
mov
jmp
addr16
dec
retf
cmp
push
push
gs
ret
mov
pop
push
(bad)
test
lods
jecxz
out
call
popf
call
movq
mov
aaa
xor
pop
nop
pop
adc
enter
ret
jno
mov
fistp
dec
sbb
and
fimul
adc
call
out
xchg
(bad)
cli
adc
push
mov
xchg
movs
xchg
sbb
pop
js
js
push
dec
jmp
mov
lea
sti
mul
push
push
or
jbe
fmulp
sbb
or
jp
pop
jno
cmp
lock
imul
sbb
scas
pop
jmp
mov
jge
sahf
adc
mov
sub
push
mov
mov
aam
or
rol
std
ret
fldcw
cmc
mul
push
es
or
int3
push
push
cmp
pop
xchg
es
leave
cmp
fcomp
aaa
mov
hlt
or
ds
pop
jp
icebp
and
into
loop
dec
rcl
add
inc
or
outs
sub
jae
dec
mov
repnz
mov
fs
mov
shl
sahf
aam
pmuludq
mov
shl
mov
fimul
inc
jns
jb
(bad)
jl
xchg
out
sub
jmp
mov
in
inc
xchg
cdq
sbb
repnz
push
mov
(bad)
or
and
and
xchg
jb
dec
add
imul
mov
enter
pop
iret
loop
lods
neg
(bad)
mov
push
loope
pop
and
jge
repz
fwait
(bad)
fdiv
jge
mov
cmp
xchg
mov
mov
adc
loop
ret
aad
jmp
fstp
mov
test
nop
jl
push
and
call
inc
adc
mov
js
cmps
mov
std
jns
pop
cwde
sbb
ins
dec
mov
lods
arpl
xlat
sbb
add
inc
jmp
sbb
push
aaa
addr16
push
fwait
cs
mov
jnp
sub
sbb
cmp
test
mov
push
xor
pop
es
stos
cmps
mov
hlt
dec
add
mov
or
add
push
jmp
(bad)
jle
in
cmp
xchg
jmp
lock
dec
mov
mov
pop
loop
lods
pop
xor
add
std
jo
cmp
int
dec
test
aam
push
inc
data16
out
mov
push
leave
pop
add
jmp
inc
mov
xor
push
cmps
xchg
xchg
adc
mov
into
push
pop
aam
push
mov
iret
xor
mov
mov
cmp
fild
std
push
scas
xchg
outs
adc
sbb
jmp
pop
and
or
mov
sub
outs
idiv
out
sahf
xor
neg
sub
test
clc
xchg
aas
fwait
pop
ret
mov
ss
xor
out
cs
clc
sbb
sub
rol
fistp
inc
mov
push
xchg
inc
push
push
jmp
sbb
movs
mov
call
dec
(bad)
mov
arpl
push
or
xlat
(bad)
retf
adc
xor
std
aam
push
adc
mov
mov
lahf
inc
sahf
fcmovnbe
lods
addr16
mov
jns
push
les
rcl
mov
das
jbe
ins
add
mov
inc
(bad)
pusha
adc
lahf
push
or
daa
jle
cli
inc
cs
retf
mov
fcomp
je
lods
adc
aam
test
add
sbb
das
sub
leave
ins
sub
pop
push
sbb
sub
or
mov
lock
movs
cmps
int3
cmc
xchg
mov
loop
xchg
xchg
out
cmc
gs
out
ins
aam
jle
push
out
rol
shl
jl
and
add
je
jne
lock
aas
and
and
aaa
fnstcw
aas
sti
mov
es
or
dec
inc
in
test
dec
loopne
in
mov
push
adc
ins
std
mov
repz
adc
out
retf
add
mov
cmp
jbe
pop
dec
xchg
mov
xchg
push
cdq
das
jmp
enter
test
outs
stos
adc
stos
lods
aaa
es
xlat
iret
sbb
lods
mov
pop
dec
add
sbb
cmp
sbb
mov
test
test
jns
iret
sub
popf
inc
add
and
or
call
ds
cmp
dec
test
out
push
adc
xchg
mov
cmps
leave
ins
cmps
dec
cmps
cmc
mov
out
ss
cs
xor
repnz
push
xchg
or
and
enter
add
loope
movs
push
call
push
push
xchg
add
pop
retf
mov
mov
mov
lahf
cmp
sbb
and
adc
or
clc
inc
cld
addr16
outs
shl
and
add
adc
sub
add
cmp
mov
pop
in
lods
xlat
mov
mov
jmp
in
sbb
inc
rcl
std
and
xor
pop
movs
pop
and
lock
mov
fist
loop
pop
fistp
(bad)
(bad)
adc
out
xchg
push
inc
jne
inc
inc
mov
loopne
xor
add
je
scas
add
jae
sub
test
pop
add
mov
out
or
sub
fld
and
out
(bad)
imul
sbb
jne
arpl
ficomp
dec
mov
pusha
loope
dec
fxam
pop
xlat
aad
mov
jmp
mov
mov
cmp
daa
fwait
cmp
dec
inc
jb
jb
jo
xchg
mov
pusha
jmp
nop
movd
movs
sub
push
(bad)
jb
dec
mov
lods
les
sar
fsub
data16
pop
loope
pop
jg
repnz
test
inc
cmps
inc
in
lods
jbe
(bad)
xchg
dec
xchg
js
or
mov
pop
stos
jo
loopne
dec
add
mov
mov
jle
outs
or
mov
jl
aas
or
pusha
popf
in
jl
and
out
xchg
es
cli
enter
pop
sti
inc
femms
xchg
jbe
mov
jl
sub
into
or
and
jno
into
mov
xlat
xor
fld
jbe
sub
sub
lods
movs
jecxz
repnz
mov
fnstenv
out
test
jmp
addr16
push
add
imul
jg
sbb
jl
xor
and
bound
mov
push
ret
psrad
aas
jg
xor
in
imul
xchg
mov
jmp
pop
in
(bad)
cld
mov
mov
cdq
fist
xchg
aas
pop
imul
pop
aas
or
arpl
in
into
scas
mov
in
sbb
adc
test
xor
mov
dec
add
mov
or
jns
dec
ja
jle
lods
pop
shr
mov
ss
clc
cmp
ret
in
adc
sub
and
xchg
mul
loop
lds
sub
mov
(bad)
push
jl
fdivr
cmp
sub
and
ret
jb
aas
cdq
xchg
pop
ss
stos
mov
scas
shl
push
loope
xchg
fild
icebp
sbb
test
jbe
lds
arpl
stos
mov
pushf
xchg
sub
add
std
jp
int
dec
enter
push
fwait
sbb
mov
or
xor
mov
inc
loope
rcr
adc
mov
fcomi
in
dec
nop
push
outs
add
mov
jbe
idiv
daa
fnstsw
je
mov
ret
jp
loopne
add
pop
sub
add
push
pushf
lock
xchg
xor
dec
call
jo
dec
mov
xchg
cmp
aad
pop
ss
mov
fisubr
cmc
push
loop
test
stos
dec
sub
and
in
inc
das
mov
aas
shl
sbb
sahf
inc
inc
jp
push
add
mov
call
pop
mov
cmp
push
and
inc
cmps
dec
push
je
scas
jno
push
call
sbb
cdq
movs
ret
mov
stos
nop
xor
push
mov
sub
jns
and
push
inc
cmp
les
mov
sbb
and
leave
or
stos
retf
xor
pop
mov
jmp
cmp
or
dec
ffree
ficomp
addr16
out
cmp
mov
mov
pusha
and
lods
jp
pop
in
cmp
mov
cmp
mov
imul
xor
movs
pop
arpl
xor
mov
ins
push
mov
adc
fadd
imul
add
call
sub
mov
cli
push
push
push
dec
mov
xchg
sti
jp
xchg
or
mov
cmps
retf
sbb
xchg
or
mov
arpl
mov
and
fst
jecxz
popf
repz
repz
sbb
adc
inc
push
mov
pop
sub
dec
out
in
push
and
xor
popa
inc
mov
clc
cs
stos
aam
enter
hlt
xchg
fucomi
rcr
pop
xor
shl
cmp
inc
daa
stos
test
aad
adc
sub
shr
mov
jge
inc
and
lods
out
loopne
mul
sub
ret
outs
pop
mov
pop
jl
cmps
ret
mov
xor
daa
arpl
(bad)
je
inc
cmp
fdivrp
adc
push
rcr
mov
cld
push
mov
int3
je
ret
mov
push
call
out
in
call
in
fs
xor
xlat
fnsave
ficomp
leave
push
hlt
inc
(bad)
sbb
inc
dec
retf
pop
ret
dec
call
int3
loope
cmc
sbb
inc
test
or
and
fwait
mov
or
sub
jns
and
aad
jne
mov
pop
jmp
in
push
fdecstp
and
mov
inc
gs
sub
jmp
cmp
scas
sub
fistp
pushf
stos
shl
(bad)
iret
mov
sub
push
fist
ds
sub
sar
sbb
mov
push
mov
outs
cmp
int
jle
mov
ss
pop
inc
sti
stos
ficomp
pop
cmp
scas
out
les
jbe
sbb
pop
pop
push
jo
add
add
in
les
stos
and
pop
arpl
push
cmp
jo
and
shl
sbb
scas
rcr
dec
(bad)
scas
adc
mov
ret
cmp
ins
fiadd
in
in
push
mov
bswap
dec
call
fwait
sub
add
iret
std
push
aas
mov
jle
pusha
jecxz
or
sub
cmc
xchg
or
fist
pop
mov
mov
mov
sub
xchg
(bad)
dec
or
xchg
int
mov
inc
shr
lods
cmp
nop
adc
push
inc
jmp
cwde
fdivr
sub
shr
xor
xor
sbb
xor
retf
push
mov
sbb
popf
xchg
(bad)
iret
rcl
imul
adc
adc
shl
jae
shl
or
mov
or
fldenv
sbb
into
movs
inc
sti
ret
mov
push
call
mov
and
push
int
cmp
sbb
scas
sbb
and
cmps
imul
xchg
jno
sub
(bad)
scas
es
dec
cmc
pop
outs
push
ret
mov
es
mov
test
mov
std
inc
pop
das
inc
and
pusha
sbb
add
mov
ins
ss
dec
lea
jg
nop
xchg
or
sub
aaa
xchg
xor
add
mov
daa
push
mov
rol
outs
push
mov
cmps
mov
xchg
outs
test
aas
fistp
pop
fidiv
xor
outs
adc
and
outs
jp
dec
(bad)
call
jg
rol
add
(bad)
add
jp
loopne
ss
mov
into
sub
and
std
xchg
jge
shl
mov
dec
sahf
pop
fwait
jl
js
adc
inc
cmp
add
das
inc
or
jmp
xlat
mov
mov
sbb
push
fdivr
int
pop
mov
repnz
data16
clc
push
push
push
in
xchg
push
outs
jae
pusha
pop
(bad)
shr
mov
sub
xor
inc
je
aaa
mov
mov
stos
ret
out
test
fs
push
jl
mov
bound
mov
dec
jge
mov
icebp
dec
sub
bnd
fimul
in
aam
ins
jns
sbb
scas
stos
out
loop
inc
mov
fnsave
lods
cmc
dec
inc
dec
jge
xor
inc
out
sub
xchg
mov
push
and
pop
in
test
imul
ja
imul
in
mov
cld
jo
jne
pop
pop
jnp
lds
shl
test
dec
dec
mov
jl
inc
stos
ss
sbb
cmps
in
outs
ds
mov
mov
push
or
mov
mov
xchg
(bad)
loope
mov
dec
into
mov
repz
mov
adc
jge
aam
cmp
jae
add
sbb
jmp
pusha
mov
stc
aas
pop
sbb
in
or
outs
and
xlat
dec
imul
in
ror
fstp
xlat
repnz
dec
movs
and
sbb
je
or
adc
fld
nop
lds
ins
jg
into
das
cmp
xchg
ja
lods
not
pop
sub
test
xor
(bad)
movs
loope
or
(bad)
sub
and
mov
add
std
adc
mov
sbb
xchg
jb
aaa
mul
add
stos
enter
mov
pop
push
mov
in
repz
push
jmp
add
jle
xchg
mov
aaa
clc
daa
jbe
daa
arpl
add
js
push
stos
dec
mov
mov
(bad)
cli
pop
xor
scas
sahf
std
ins
cld
sub
jp
mov
push
push
lods
add
and
sbb
mov
xchg
xchg
aaa
lahf
icebp
stos
sbb
xlat
fnstsw
jbe
jmp
push
ins
call
jle
das
mov
dec
clc
lds
packuswb
scas
dec
(bad)
sbb
cmp
sub
cmp
mov
dec
inc
jle
in
enter
scas
dec
retf
shl
ret
mov
pop
gs
sub
sbb
aam
nop
dec
mov
(bad)
das
jge
inc
adc
fs
add
sahf
push
mov
in
movs
retf
push
lea
add
test
xor
test
ret
aas
jge
pop
adc
shl
add
sub
hlt
movs
test
icebp
(bad)
lock
dec
das
mov
mov
pop
(bad)
inc
data16
mov
add
inc
push
leave
pop
push
out
cmp
add
xlat
push
pop
push
sub
call
call
std
inc
add
inc
jne
int
add
mov
xor
cmc
scas
fadd
mov
xchg
ds
inc
sbb
sbb
mov
cli
mov
jecxz
cmp
rcl
repnz
lods
test
lds
sub
jb
mov
fistp
idiv
div
jno
sub
ret
xchg
mov
inc
sti
es
cmp
in
push
into
sti
adc
stos
lods
aad
out
aad
test
jle
in
dec
ds
movs
int
cs
push
mov
cmp
(bad)
div
movs
sub
and
add
dec
cmps
sbb
mov
xchg
push
scas
push
and
inc
mov
mov
mov
pop
push
add
sub
sbb
or
push
mov
fidiv
sub
lods
mov
sti
cld
cmp
push
(bad)
dec
lahf
aaa
addr16
xchg
and
das
jecxz
fcom
add
jmp
fwait
jle
dec
outs
shl
jo
push
data16
sub
pop
imul
repnz
ror
or
fcomp
pop
loop
jno
sar
ffree
lahf
cmc
lock
test
in
jl
outs
xchg
fbstp
repnz
xchg
push
test
es
div
sub
add
and
inc
sub
stos
cmp
inc
jb
(bad)
push
lods
repz
sub
jno
push
cld
inc
sub
out
arpl
inc
jno
into
dec
(bad)
popa
xlat
cwde
dec
pop
out
mov
mov
cmps
push
adc
jl
cs
lock
mov
mov
mov
retf
add
mov
and
jp
cli
mov
lods
sbb
sar
cmp
hlt
push
and
xchg
cmc
or
jg
adc
sbb
in
(bad)
dec
ret
daa
(bad)
ffree
fisttp
arpl
sti
test
cmp
mov
xchg
out
clc
and
(bad)
pop
fisubr
inc
cli
sbb
inc
or
and
jb
aam
clc
das
loopne
pop
outs
cmp
mov
push
or
shr
cmp
dec
rcr
mov
jmp
in
repnz
test
out
int3
loope
bnd
in
inc
(bad)
or
mov
mov
sub
sbb
rcpps
inc
add
cmc
imul
retf
je
jne
adc
jae
das
push
push
inc
add
pop
mov
jl
cmpxchg
shr
xor
ret
rcl
mov
jae
push
mov
shl
ins
fld
test
jge
ds
loope
and
mov
push
fsub
cmps
xchg
sub
and
daa
xchg
mov
dec
int3
enter
mov
pop
xor
neg
push
ds
mov
inc
fwait
jge
mov
dec
lgdtd
lods
int
fldcw
pusha
xchg
test
jp
mov
in
mul
push
pushf
addr16
inc
das
mov
push
and
dec
mov
scas
sbb
xchg
dec
and
in
xchg
pop
fwait
push
in
hlt
jmp
loop
and
xlat
jge
lahf
dec
std
push
dec
std
das
add
in
dec
aad
adc
adc
mov
push
dec
xor
xchg
fwait
mov
shl
lock
cdq
jge
leave
pcmpeqb
and
xchg
loope
out
outs
loope
je
mov
test
and
cli
lea
je
stc
cmp
sbb
cmp
jns
jnp
jecxz
ins
push
dec
out
pop
(bad)
mov
test
xor
(bad)
je
int3
xchg
xchg
push
jns
bound
push
or
mov
loope
sub
fidivr
xor
adc
icebp
jg
cmp
mov
outs
add
xchg
mov
mov
mov
push
je
xchg
add
popf
and
inc
scas
arpl
add
and
test
cld
xchg
jae
add
test
add
push
cmps
loope
and
jecxz
xchg
(bad)
mov
sub
das
mov
pop
mov
pop
mov
ror
dec
or
and
aaa
fstp
mov
hlt
inc
and
inc
pop
and
sub
rcr
ins
fisttp
mov
jmp
cmps
ror
idiv
push
mov
mov
or
pusha
mov
adc
mov
or
dec
mov
dec
and
outs
int3
popa
adc
xchg
cs
in
xlat
add
add
sbb
nop
jl
xchg
jns
stc
inc
cld
jae
scas
pushf
mov
mov
bound
imul
fist
xchg
fnsave
cmp
pop
jne
icebp
addr16
out
clc
repz
and
xchg
cld
cld
mov
push
inc
lahf
ds
xor
fxch
xchg
hlt
or
out
ja
cmp
xchg
jae
in
aad
rcl
out
cmp
mov
sti
xor
(bad)
pop
mov
les
mov
xchg
not
call
hlt
repnz
cmc
arpl
sub
(bad)
adc
and
hlt
aad
or
mov
mov
sub
sahf
das
cmc
aad
mov
jle
add
mov
out
pop
or
dec
aam
fiadd
jns
rol
xor
xchg
cdq
lods
ins
or
ins
xor
xchg
pop
jmp
fild
pop
add
repz
mov
and
push
and
jb
loopne
and
or
inc
imul
pop
and
sbb
popf
jns
ror
cs
pusha
xlat
shl
hlt
cld
(bad)
ins
ret
add
into
out
sbb
or
add
scas
cdq
popf
cli
jmp
sub
add
mov
jnp
loope
cdq
in
dec
mov
xlat
xor
(bad)
mov
sahf
xor
xchg
call
jge
push
lahf
mov
xchg
push
jns
(bad)
fidivr
mov
dec
mov
loop
in
pop
push
lods
dec
push
sbb
jle
jns
pushf
adc
adc
push
inc
ficom
xchg
retf
clc
repz
mov
sub
stc
loopne
sbb
jp
ds
add
and
inc
push
dec
xor
inc
mov
mov
dec
lods
dec
add
sbb
scas
or
xlat
pop
out
mov
scas
mov
loopne
sub
push
sbb
lods
or
mov
retf
les
mov
pop
in
sbb
jmp
push
push
fldcw
inc
sbb
and
and
sbb
retf
sti
mov
pop
mov
push
stos
mov
sub
retf
fnstenv
jae
sub
test
daa
outs
(bad)
mov
aad
inc
shr
orps
adc
sub
fstp
inc
ins
add
pop
aad
lock
pop
xchg
(bad)
push
xchg
out
jb
(bad)
jne
hlt
jo
inc
shr
add
in
push
shr
pop
xchg
sub
sub
fild
add
stc
xchg
gs
cs
jo
push
mov
(bad)
dec
xor
dec
push
mov
cmp
sub
sar
jecxz
pop
mov
repnz
imul
cmp
sbb
lds
cmp
movs
pop
inc
cmc
xchg
xchg
pusha
aaa
add
sar
ss
dec
loope
add
sar
mov
ror
jns
js
(bad)
retf
mov
and
aad
sub
cmp
mov
mov
sbb
cmp
xchg
sub
retf
push
icebp
(bad)
(bad)
mov
jb
xor
adc
push
imul
push
arpl
or
test
dec
ret
cli
jmp
xchg
xor
mov
sbb
xlat
(bad)
mov
mov
mov
xlat
fdivr
mov
cmp
es
fidiv
loop
pop
xchg
dec
pop
out
mov
pop
out
sbb
mov
cwde
and
aaa
clc
jmp
popa
nop
bound
push
adc
loop
out
add
add
fistp
fcomp
sub
pop
leave
scas
cwde
adc
test
push
test
inc
ins
adc
mov
add
push
in
jnp
into
push
in
sub
stc
ss
xchg
jmp
or
pop
inc
push
inc
add
sbb
pushf
push
and
mov
lods
mov
mov
mov
mov
push
and
fsubr
xchg
add
mov
int3
cli
les
frstor
aad
push
(bad)
icebp
push
aas
push
push
add
xor
and
out
mov
jmp
and
and
mov
mov
dec
sahf
and
out
test
ins
jns
mov
sub
jae
dec
fimul
call
sub
lahf
sbb
cs
pop
dec
mov
dec
adc
jmp
or
(bad)
lock
ins
jno
sti
cs
shl
sbb
push
aam
retf
mov
dec
mov
sub
mov
push
mov
cmp
xor
leave
js
or
jp
xchg
pop
aaa
cmp
xlat
sub
and
jmp
ja
pop
cmp
out
adc
popa
mov
xor
pop
movs
adc
cmp
adc
cmp
ins
mov
gs
push
lods
retf
pop
(bad)
cmps
pushf
mov
xchg
int
ficom
fisttp
(bad)
cmps
fs
sbb
xchg
push
add
ja
ins
mov
xor
mov
and
jnp
aam
mov
push
sbb
xchg
dec
retf
ss
cmc
cdq
mov
jb
jo
and
inc
sub
out
jne
jns
ins
aad
nop
popa
shr
jle
sub
push
add
dec
lods
loop
sbb
test
sahf
dec
fsubr
mov
das
daa
jo
push
dec
aas
mov
fisubr
leave
add
jmp
xor
xchg
ja
push
dec
jl
mov
jg
(bad)
xchg
cmp
stc
mov
outs
scas
mov
inc
push
std
mov
jae
jo
fistp
loopne
iret
adc
dec
gs
(bad)
jge
jle
xchg
test
fidivr
xchg
cmp
or
rcr
jnp
scas
daa
pop
dec
pop
call
xor
fldcw
(bad)
push
(bad)
pop
shr
sub
out
ds
lods
repz
rcr
sub
enter
xchg
fadd
test
popa
mov
xchg
push
(bad)
stos
mov
out
cmp
loop
cmps
(bad)
test
xchg
lea
adc
pop
push
ja
mov
fist
(bad)
jb
mov
mov
mov
call
(bad)
call
inc
xchg
cmp
jb
outs
push
mov
in
jo
or
cmp
dec
xchg
ds
push
dec
ins
fbld
xchg
mov
repnz
xor
jecxz
imul
cmp
or
or
into
and
mov
sbb
mov
je
call
dec
fdiv
pop
test
jo
push
hlt
sti
lock
ret
das
call
test
dec
scas
jb
cmc
int3
pop
mov
xor
stos
in
in
retf
out
and
call
sub
sbb
iret
cmp
loope
in
pop
adc
and
push
(bad)
mov
push
cmp
push
enter
xchg
sbb
bnd
mov
inc
mov
popf
push
pushf
sub
add
pop
sub
inc
adc
jl
mov
lock
imul
aaa
push
paddsb
aad
cmp
mov
push
(bad)
scas
xor
ins
cld
fdiv
push
repz
or
stos
or
mov
mov
add
movs
jo
call
mov
fist
pushf
lods
xchg
add
nop
mov
sar
fdiv
jl
outs
jecxz
or
push
cmp
repnz
cwde
or
pop
lahf
mov
in
cli
and
popf
test
dec
stos
stos
or
lds
cmp
xlat
jmp
sbb
inc
addr16
mov
pop
movs
out
sbb
adc
add
jne
out
add
dec
xor
scas
dec
test
add
adc
(bad)
scas
cmps
lahf
pop
lock
fsub
add
pop
adc
aad
mov
mov
sti
add
mov
sub
push
pop
dec
pop
sub
pop
mov
inc
stos
jecxz
inc
cmp
pusha
inc
out
mov
pop
jno
mov
cmp
xor
xor
dec
and
ja
or
mov
push
cmp
push
std
fdivr
in
cmps
xor
ins
mov
sub
adc
outs
iret
ret
jl
ins
sub
mov
sub
fs
sbb
ss
cmp
mov
mov
mov
in
cmp
std
lea
gs
xlat
mov
int
div
sbb
retf
outs
cmp
cmps
pop
or
xchg
mov
sub
popa
adc
push
mov
jle
icebp
es
cmps
mul
mov
in
cmp
daa
mov
ins
pop
test
mov
cmps
mov
aad
pop
ret
leave
push
rol
add
jae
int
xchg
dec
(bad)
jbe
cmp
mov
sub
push
or
popa
ja
ror
popa
jmp
and
lahf
pop
cwde
stos
std
xor
or
(bad)
stc
and
sti
add
test
jne
jae
mov
shl
push
outs
fdivr
xchg
jmp
push
cmps
jg
loopne
pop
fstp
scas
push
inc
pop
fwait
les
push
xor
xchg
jno
adc
add
jge
push
mov
jmp
cmps
adc
inc
in
in
xchg
cdq
cmp
ins
fmul
push
test
cld
add
mov
jne
aam
jmp
adc
sbb
sti
ins
(bad)
es
loopne
mov
mov
int
adc
xchg
mov
sub
lods
xchg
xor
hlt
jecxz
call
popa
cmp
les
jge
push
push
test
adc
mov
jne
out
and
xchg
dec
leave
sbb
dec
add
or
scas
push
push
outs
mov
pushf
xor
stc
(bad)
fisttp
dec
dec
push
push
mov
leave
hlt
loope
and
retf
loope
loop
movs
add
(bad)
loopne
mov
pop
xchg
arpl
pop
jb
in
push
mov
mov
and
out
dec
neg
into
sub
cmp
adc
stos
or
and
add
aas
dec
retf
cmp
cmp
enter
sub
and
cmp
popf
leave
fisttp
imul
or
xchg
cwde
test
xor
pop
(bad)
aam
and
test
mov
test
repz
call
test
push
pop
aas
shr
mov
and
mov
pop
loope
loop
mov
aaa
(bad)
dec
and
dec
(bad)
(bad)
fnsave
jno
clc
dec
add
cmp
nop
mov
imul
(bad)
xchg
push
adc
mov
or
inc
jne
push
fild
pop
addr16
stos
mov
into
int3
or
ins
jle
addr16
std
sub
dec
pop
pushf
mov
dec
jns
outs
sbb
or
pop
sub
or
pop
loopne
(bad)
jg
das
in
fcmovb
cmc
outs
or
adc
arpl
retf
hlt
sub
in
push
xchg
ins
call
out
and
ss
mov
mov
inc
fdivr
adc
je
retf
jle
dec
pushf
retf
mov
mov
xchg
sub
xchg
test
mov
mov
std
lock
lods
push
in
xor
xor
data16
leave
dec
or
push
lods
scas
icebp
(bad)
push
add
mov
(bad)
fwait
outs
pop
and
aam
sbb
addr16
push
jno
aas
jns
cmp
fist
adc
nop
shl
sbb
pop
jbe
adc
(bad)
fs
adc
xchg
and
int3
pop
sbb
scas
test
jmp
push
pop
or
mov
jl
out
mov
int
sbb
push
mov
sbb
adc
mov
cmps
js
pop
int
(bad)
movs
or
jecxz
imul
ins
or
add
(bad)
jmp
dec
jno
js
add
jmp
in
inc
dec
es
pop
pushf
pop
or
dec
xor
mov
inc
stos
and
imul
(bad)
pushf
add
fs
dec
or
(bad)
mov
ss
(bad)
jns
int
pop
mov
jbe
and
or
cdq
pop
push
stos
stos
adc
mov
mov
cli
push
out
xor
loope
inc
pop
mov
nop
ret
(bad)
inc
inc
retf
loop
jp
movs
sbb
out
lds
ins
sub
in
or
jmp
daa
in
mov
jbe
pop
aaa
icebp
fsubr
cdq
leave
outs
add
and
and
pop
test
push
stos
dec
or
and
ror
lea
inc
fs
add
int
sbb
js
push
push
fcmovnb
mov
cwde
cmps
add
xor
fnstsw
stos
(bad)
call
xchg
imul
cmovle
or
xchg
lds
mov
rcr
cmp
iret
sahf
mov
sbb
cmp
jp
cmp
and
pop
mov
movs
nop
popa
push
into
cld
(bad)
loopne
mov
xchg
test
adc
repz
frstor
xor
push
dec
or
shld
adc
sar
sub
xchg
bound
mov
mov
outs
inc
mov
jmp
js
xor
xor
imul
mov
repz
pop
adc
push
pop
push
fsub
fwait
push
dec
(bad)
aad
jno
cmc
lods
lahf
jo
js
test
fs
stos
xlat
sub
xor
ins
out
xchg
test
push
hlt
sbb
scas
or
addr16
retf
cdq
xchg
icebp
nop
imul
xchg
sub
movs
push
out
shl
mov
cwde
mov
jle
pop
in
hlt
xor
pop
into
cmp
icebp
outs
fld
call
sub
lahf
cmp
shl
lods
adc
cmp
ror
mov
mov
inc
(bad)
pop
or
mov
mov
mov
xchg
into
mov
ja
int
dec
or
outs
dec
lds
push
std
dec
jmp
fdivp
aaa
mov
arpl
mov
js
(bad)
(bad)
fimul
aas
sar
(bad)
pop
add
push
mov
xchg
cmps
push
ficom
std
mov
add
inc
enter
sub
and
aad
xchg
and
dec
pop
xchg
mov
mov
jg
xchg
hlt
fild
cmp
dec
loopne
(bad)
ret
jbe
fcmovb
add
arpl
test
jge
mov
lds
jmp
sbb
bound
xchg
call
inc
pop
xor
xchg
call
jp
cmp
pop
shl
xchg
shl
push
xor
test
dec
popf
jae
ret
popa
and
mov
xrelease
lods
enter
mov
pop
cmc
cmp
mov
mov
cwde
or
or
or
push
mov
inc
inc
xor
mov
and
and
inc
bound
xlat
int3
jg
jo
std
sbb
jmp
rcl
popa
mov
in
sti
sbb
jge
adc
rcr
jae
icebp
pop
not
xchg
outs
mov
and
cmp
add
jge
mov
fs
loop
and
jge
imul
iret
xchg
push
test
ss
cmp
push
ds
pusha
jge
inc
cmps
lea
mov
push
scas
jg
and
ins
mov
sbb
mov
mov
loope
mov
ror
or
xlat
pop
push
push
xor
movs
lods
and
inc
ret
ror
pop
(bad)
out
dec
and
shr
add
loopne
mov
enter
cli
pop
stos
adc
movs
mov
std
push
out
push
es
pop
retf
pop
aad
cs
shl
inc
mov
sahf
movs
rol
arpl
enter
std
sbb
inc
mov
push
popf
add
pushf
nop
mov
and
cmp
sub
data16
mov
inc
cli
mov
pop
inc
push
push
jl
scas
dec
setp
scas
imul
data16
aam
fimul
xchg
jl
cmp
jo
push
push
jmp
adc
fimul
sub
mov
fnstsw
into
retf
sbb
push
retf
lea
aas
add
call
mov
cs
dec
pop
shl
cwde
out
cmp
adc
test
das
or
ficom
xor
jns
js
rol
and
mov
rep
loopne
leave
inc
push
je
sbb
out
xchg
jge
xchg
cmp
mov
ret
jmp
fs
mov
or
xchg
sbb
sbb
je
ror
pop
scas
and
lea
(bad)
hlt
and
call
movs
cmp
xchg
gs
mul
add
fwait
ret
or
mov
jge
js
pop
pop
inc
sbb
cmp
std
and
xchg
pop
jo
mov
sub
push
std
leave
cmp
repnz
and
mov
dec
or
popa
mov
in
xor
dec
adc
dec
cmps
in
add
cmp
imul
aad
sti
add
lock
xchg
mov
xchg
in
cmp
ins
jp
sbb
mov
xchg
cli
shr
std
sbb
cmps
mov
and
mov
clc
aad
enter
out
sub
repz
div
mov
mov
ret
cmp
les
inc
dec
cmps
sub
aad
(bad)
shl
ins
ss
and
mov
dec
mov
push
push
add
repz
mov
cmp
and
cmp
sbb
mov
pushf
mov
and
pop
cmp
dec
and
mov
mov
(bad)
out
pop
sti
dec
loope
loopne
mov
nop
jmp
mov
adc
cmp
fnstsw
adc
out
or
and
jg
fistp
jp
cmp
les
in
test
popa
push
retf
ds
cmp
cmp
dec
add
xchg
mov
jns
cdq
je
call
rcl
int
push
dec
inc
push
imul
jo
jo
or
call
fstp
xlat
stos
xchg
pop
(bad)
clc
cwde
ror
push
test
outs
dec
leave
cli
pop
retf
adc
fstp
push
mov
scas
pop
imul
mov
jmp
pop
pop
lock
push
pop
mov
std
push
cld
pop
jle
and
aad
(bad)
cmp
inc
mov
inc
mov
xor
inc
fidivr
mov
inc
fisub
xlat
ja
daa
mov
ins
xlat
xchg
pop
mov
clc
push
aaa
dec
in
mov
add
push
xor
mov
or
add
fisub
iret
scas
cld
call
aas
push
aam
mov
push
test
mov
fs
pusha
pop
and
xchg
outs
jmp
pop
mov
shl
pop
jmp
popa
cmp
ret
and
and
push
or
pop
mov
and
scas
and
hlt
mov
aaa
push
sar
add
cmc
adc
sbb
mov
int
sbb
jecxz
mov
cmp
push
(bad)
fisttp
fsubr
add
in
inc
(bad)
push
push
aas
in
test
adc
aaa
jae
push
adc
scas
das
or
push
in
cmp
int
sbb
and
out
cmp
inc
ins
inc
push
sbb
test
mov
pop
int3
sbb
sub
ss
add
fdivr
aaa
outs
xchg
out
pop
add
mov
adc
fsubr
add
sub
jle
add
and
mov
mov
ret
xor
add
fnstsw
sub
jg
add
jnp
int3
rcl
mov
ficom
pop
pop
ins
cmp
jg
retf
call
ret
jno
outs
ret
mov
jae
stc
out
mov
lock
push
pop
movs
movs
pushf
std
movs
dec
xchg
dec
xor
xchg
(bad)
xor
imul
mov
mov
jmp
pushw
repnz
cmps
and
dec
cmps
aaa
dec
cmc
aad
sbb
push
inc
xor
mov
lea
imul
cmps
(bad)
icebp
test
push
jge
xchg
or
sub
ret
rol
jo
and
add
sub
push
xor
xor
dec
aaa
sub
sub
pop
ins
dec
mov
sbb
push
jmp
mov
mov
mov
out
(bad)
(bad)
out
jnp
xor
jae
loope
adc
mov
sbb
repnz
pop
xchg
cmc
push
dec
lahf
js
mov
pop
lahf
pop
(bad)
sbb
adc
(bad)
stos
or
dec
ret
callw
jl
(bad)
cmp
cmp
mov
jo
jl
dec
mov
pop
jmp
adc
mov
lea
outs
js
push
call
mov
(bad)
fwait
loope
mov
sti
daa
idiv
das
fsubr
and
sub
push
bswap
xor
fwait
push
push
in
cdq
xchg
arpl
jnp
dec
adc
imul
add
xor
mov
call
push
jae
dec
sbb
or
and
cmp
jns
mov
fsub
mov
loope
imul
push
dec
cdq
push
mov
leave
inc
xchg
not
sub
mov
ror
mov
jl
sar
lea
mov
mov
(bad)
cmp
movs
int3
std
push
push
lods
push
out
pusha
jns
lods
mov
(bad)
pop
adc
shr
mov
or
cmp
jecxz
out
push
xchg
inc
pop
pusha
or
and
xor
or
sahf
std
rsqrtps
(bad)
mov
mov
ficomp
mov
loope
jle
mov
cld
enter
sbb
popa
jl
add
or
or
dec
mov
pop
jl
fadd
and
jns
fild
popf
int
jo
cwde
push
rcl
pop
shr
jb
call
aad
dec
inc
sub
std
push
inc
adc
stos
sub
cmps
enter
inc
in
xchg
push
retf
push
and
in
popf
addr16
leave
dec
jbe
int3
mov
ds
(bad)
lods
xor
cs
mov
xor
out
out
mov
cmp
cld
cmc
or
mov
dec
(bad)
shr
scas
cmps
pop
mov
cmp
cmp
sbb
push
dec
test
inc
push
std
popf
sbb
mov
and
inc
shl
and
in
push
cmp
push
mov
dec
and
push
xchg
xchg
xor
popa
xor
cmps
push
hlt
cmp
adc
fsubr
jae
pop
leave
arpl
scas
ror
inc
mov
(bad)
xor
popf
out
inc
(bad)
push
jp
mov
jb
xor
call
push
mov
test
inc
and
dec
and
daa
mov
call
outs
add
shl
and
pusha
jno
xchg
jmp
bound
mov
icebp
and
pop
call
repz
mov
cld
push
fisubr
push
test
mov
push
push
jo
cli
cmp
sub
dec
icebp
inc
mov
mov
jle
ja
imul
movs
mov
add
loop
adc
mov
imul
rcr
xchg
in
retf
test
ds
std
inc
test
dec
leave
push
js
popa
xlat
sbb
stos
jno
fiadd
neg
push
mov
in
ss
pop
inc
or
and
jmp
add
stc
xor
push
cs
jg
cmp
ret
stos
pop
adc
push
fmul
xor
sbb
inc
xchg
ins
jle
cmp
sti
xor
pop
call
mov
cmp
mov
in
movs
pop
out
hlt
mov
mov
xor
rol
ins
xchg
dec
add
sub
movs
inc
push
and
clc
add
sub
sub
aad
test
ror
mov
cmp
mov
frndint
jb
push
mov
xor
out
xlat
loop
xchg
jno
fist
das
dec
and
xor
adc
adc
ins
lea
jl
(bad)
daa
jae
mov
addr16
enter
inc
mov
cmp
sub
add
scas
jge
jne
mov
xor
xor
xchg
sub
fld
cmp
int
pop
fwait
(bad)
jb
add
adc
scas
jmp
or
cmps
inc
xchg
mov
imul
wrmsr
jge
data16
sub
cmp
lds
jb
sub
ins
adc
data16
pushf
add
(bad)
into
xchg
add
inc
jb
add
repz
ja
xchg
jge
arpl
mov
frstor
shl
push
repnz
add
dec
movs
pop
adc
lods
mov
mov
loope
mov
int
std
sub
cld
xchg
gs
inc
sbb
aaa
jb
and
adc
addr16
stc
jo
adc
sar
outs
shl
pushf
out
aad
xchg
sbb
movs
cmp
pop
push
dec
test
scas
mul
daa
xor
jbe
mov
jmp
aas
dec
xchg
mov
outs
pop
enter
adc
and
or
movs
out
jl
repnz
or
cmp
sahf
sub
popf
in
or
stos
mov
cmp
jb
adc
inc
aas
sub
pushf
jl
mov
jmp
pop
mov
in
add
aad
mov
(bad)
cs
lds
xor
add
test
leave
mov
call
lds
sub
or
xchg
loope
sahf
pusha
call
sbb
fadd
clc
cmp
dec
and
iret
or
xchg
lds
pusha
std
cdq
int
mov
xchg
popf
mov
and
and
pusha
mov
ror
lods
pop
push
xor
popf
cld
lods
jl
out
lods
cs
mov
ja
movs
jmp
loopne
daa
inc
or
jge
push
inc
and
pop
jg
jmp
out
pop
push
aaa
in
call
pop
ss
sub
std
pop
lea
out
and
adc
sub
das
pop
inc
retf
leave
lods
mov
dec
mov
xor
shl
sub
pop
pop
mov
data16
mov
outs
and
jg
mov
cmp
test
mov
jbe
sub
jecxz
scas
dec
adc
out
jns
nop
or
sahf
inc
cmc
xchg
xchg
add
out
adc
fwait
arpl
xchg
dec
cmp
xchg
mov
rcr
jo
sbb
xchg
call
dec
iret
mov
xchg
fs
out
and
adc
inc
adc
icebp
test
repz
movs
push
or
(bad)
hlt
xchg
lea
loope
pushf
mov
out
mov
out
dec
lahf
test
iret
jnp
inc
imul
xor
pop
xor
std
sub
es
sbb
adc
inc
lea
ds
push
popf
push
clc
sbb
cmp
imul
das
xor
push
enter
es
push
mov
shl
add
xchg
jo
jmp
clc
jge
push
in
and
mov
out
call
mov
mov
pop
mov
pop
shr
and
push
test
in
rcr
mov
xchg
ins
mov
pop
data16
sahf
iret
call
xor
adc
sbb
push
dec
adc
dec
and
(bad)
jns
rcl
(bad)
sub
mov
or
sahf
fnstsw
popf
mov
mov
mov
push
sbb
cwde
ret
aas
rcl
aas
dec
or
retf
es
popf
pop
fstp
sub
int
addr16
fadd
lods
adc
lea
jns
cmp
lds
aas
or
inc
and
cwde
ds
aad
pushf
gs
pop
or
push
push
loop
mov
test
ss
jbe
or
xchg
ds
nop
iret
mov
(bad)
push
outs
add
sbb
add
movs
sti
mov
das
mov
enter
ins
adc
fbstp
cmp
cdq
add
fwait
mov
xchg
inc
out
in
sub
int
pusha
jno
(bad)
(bad)
push
mov
call
jae
mov
fyl2xp1
or
cld
and
aaa
stos
lea
jmp
ds
inc
cwde
ret
sbb
ret
push
cmps
stos
mov
xchg
push
mov
cmp
mov
pushf
push
jo
mov
or
push
mov
xor
cmp
out
push
shr
xor
mov
and
daa
jp
xchg
pop
out
sti
pushf
push
js
mov
in
sbb
mov
pop
or
mov
xor
dec
pop
cmps
std
out
push
jnp
mov
xor
jle
(bad)
xor
out
jle
jb
ficomp
cmp
jmp
mov
rcl
sar
pusha
sahf
xchg
bound
mov
add
inc
aam
lds
shl
and
scas
inc
mov
repnz
xchg
fwait
std
jmp
bound
loop
and
sbb
jecxz
push
das
jns
push
ja
sub
push
adc
retf
sar
jle
(bad)
mov
stc
cmp
in
jge
sub
pop
jle
outs
aam
dec
xor
lea
rcl
inc
leave
add
and
mov
in
into
xlat
jns
sbb
mov
mov
nop
xchg
cmc
test
adc
sbb
pop
inc
jns
sub
jae
call
push
or
inc
mov
cdq
xchg
ret
enter
cmp
mov
dec
mov
cli
popf
imul
push
push
adc
rol
or
mov
adc
lds
aad
push
jge
lds
mov
pop
arpl
shl
lahf
cmp
jp
dec
addr16
(bad)
test
push
in
inc
fwait
mov
ss
pop
sbb
xor
fdiv
push
push
xchg
xor
mov
mov
dec
rcr
pop
cli
pop
cwde
fs
loope
imul
iret
xor
leave
loope
xor
mov
mov
lods
retf
adc
fnstcw
mov
cmps
movs
rcl
mov
stc
mov
mov
fisub
inc
mov
mov
mov
imul
clc
and
(bad)
mov
popa
dec
xor
pop
outs
retf
retf
pop
and
imul
ret
fcomp
xor
test
(bad)
cmp
dec
aad
push
push
cmp
adc
lock
test
int3
mov
inc
cld
pop
sub
lock
push
inc
in
xor
or
mov
ins
imul
sahf
bound
pop
cmp
lods
jns
stos
and
lock
ins
call
xchg
gs
movs
mov
sub
rol
add
adc
js
mov
sub
retf
clc
out
(bad)
iret
push
or
fldenv
pusha
cmp
ja
push
xor
xor
sbb
mov
out
pop
gs
pop
cmp
movs
adc
and
push
out
daa
jns
out
xor
xor
mov
sti
std
aaa
adc
pop
test
lahf
sub
push
inc
xchg
setg
inc
pop
mov
cmp
(bad)
mov
aad
jg
call
popf
ins
mov
or
dec
add
stc
lea
cmp
cmc
push
mov
push
es
aaa
rol
aad
ror
xor
sub
mov
push
repnz
je
lds
sbb
sub
cmc
or
hlt
leave
icebp
jb
sub
bound
aam
jmp
ret
jecxz
sbb
jecxz
popa
out
xchg
xchg
mov
mov
mov
mov
lods
sub
cmps
mov
adc
leave
push
cmc
dec
call
cdq
push
add
fiadd
ffree
call
js
adc
sub
sbb
(bad)
stos
sti
int3
call
retf
not
cmp
sub
(bad)
sbb
cmp
jp
repnz
rcr
mov
sub
repz
std
pop
pop
mul
xchg
and
pushfw
rcl
(bad)
call
ss
jmp
popa
adc
(bad)
(bad)
push
pop
test
sub
pop
dec
push
dec
imul
ins
leave
jo
push
(bad)
mov
cdq
stc
imul
addr16
pop
(bad)
loop
push
into
in
pop
je
mov
cmp
mov
or
popa
push
movs
addr16
jmp
arpl
inc
js
and
ror
jno
push
lea
sub
movs
jmp
iret
popa
(bad)
fwait
push
ficom
mov
inc
ss
in
arpl
sbb
and
xchg
cmp
int3
mov
xchg
and
test
ficom
mov
xchg
and
jbe
add
mov
adc
mov
push
imul
cmps
mov
in
xchg
and
inc
mov
and
mov
mov
pop
mov
jae
iret
dec
out
into
sbb
mov
into
imul
jo
into
xor
adc
rcl
jecxz
jns
into
push
call
mov
push
test
pop
xchg
ror
inc
mov
xor
mov
jmp
clc
mov
jp
adc
jmp
sub
outs
or
iret
enter
jmp
or
out
xchg
(bad)
mov
cmp
push
jno
iret
enter
xor
sbb
sahf
pusha
jae
sar
adc
xor
mov
loopne
or
mov
test
cli
adc
std
pop
sbb
mov
scas
jecxz
jnp
jecxz
inc
bound
mov
or
or
lds
push
inc
ret
pop
or
(bad)
scas
cmp
or
jo
inc
cmps
jb
popf
mov
mov
or
sub
xor
sub
add
pop
inc
arpl
icebp
shl
pop
cmps
sub
jg
push
cmp
and
xchg
out
mov
retf
push
cli
dec
jg
sar
add
out
mov
pop
test
fisttp
fsubr
pushfw
jne
mov
cli
jb
xor
xchg
shr
adc
pop
xchg
gs
dec
dec
mov
sub
xchg
jge
fwait
lea
cmp
aas
mov
pop
pop
aad
pusha
cld
jne
pop
in
mov
(bad)
cmp
aas
dec
push
add
fisttp
push
jnp
je
pop
ja
xor
lea
adc
loop
rcr
push
lahf
stos
retf
pop
fbld
xchg
loop
mov
mov
inc
mov
mov
jno
ret
add
add
mov
adc
cmps
sbb
add
cmp
(bad)
cmc
xchg
imul
sbb
mov
fisub
mov
sar
fcmovnb
mov
and
(bad)
scas
nop
pop
push
push
(bad)
sub
add
cld
fsubr
(bad)
mov
jns
hlt
mov
test
(bad)
(bad)
ss
sti
stc
mov
cwde
and
lahf
test
fadd
mov
cmp
mov
mov
xor
das
loop
pop
add
inc
or
jecxz
inc
(bad)
sub
dec
mov
and
xor
jae
test
jmp
test
or
mov
dec
mov
pop
add
out
movs
retf
sub
xchg
sbb
and
test
push
test
mov
xchg
or
xor
mov
pop
shl
push
cmp
mov
ret
inc
mov
dec
dec
add
bound
sahf
and
lea
cmp
mov
test
bound
lock
(bad)
xor
sbb
jne
int3
mov
mov
fsubr
leave
test
jle
cwde
fwait
mov
not
mov
pop
pop
gs
out
aas
aaa
push
test
push
add
pop
mov
iret
std
das
addr16
test
add
jb
adc
fwait
pop
imul
inc
sti
int
jae
mov
mov
mov
inc
cmc
stos
mov
xchg
scas
loope
ins
cmc
das
cmp
imul
movs
fidiv
lods
adc
dec
shl
not
ins
inc
iret
fisttp
xchg
xor
out
mov
inc
dec
scas
push
mov
jne
js
sbb
xchg
sti
das
dec
xlat
retf
ror
mov
ret
inc
sbb
push
outs
inc
into
pop
fstp
push
cmp
xchg
retf
outs
cmp
sbb
mov
cmp
aas
(bad)
jp
pop
fwait
movs
jge
inc
pop
dec
sub
sbb
(bad)
and
hlt
into
mov
mov
lds
es
repnz
push
add
fstp
cmp
sbb
xor
stc
and
mov
into
xchg
test
mov
push
adc
fwait
xchg
add
popf
into
push
loopne
mov
xchg
jmp
icebp
arpl
mov
push
adc
adc
push
pop
adc
ins
jmp
mov
sub
adc
push
cmp
rol
mov
xlat
std
test
push
cmps
xchg
vmovups
push
sbb
and
test
pop
mov
sbb
or
ficomp
ins
icebp
xor
adc
add
add
gs
daa
retf
cmp
jnp
adc
shl
mov
mov
das
nop
loopne
movs
adc
test
lahf
push
adc
inc
jmp
mov
xor
inc
pop
aad
inc
xchg
cs
in
hlt
repnz
xchg
pop
push
xor
out
lahf
jo
mov
sbb
cmp
test
sbb
sahf
repnz
lock
push
hlt
dec
mov
inc
imul
and
pop
test
push
in
xchg
out
fcomp
xor
out
mov
rcl
imul
out
cmp
test
lea
xor
sub
lock
xchg
daa
rcl
mov
pop
push
sbb
dec
ror
cmp
mov
lea
data16
ret
mov
fdivr
push
cmp
je
out
mov
xor
cmp
xor
pop
popa
inc
mov
repz
pop
int
add
mov
sub
stos
mov
xor
test
and
clc
hlt
push
mov
or
sub
add
jg
arpl
ret
out
cdq
div
pop
lods
int3
pop
imul
and
enter
rep
pop
retf
xchg
push
cmp
imul
fbld
push
hlt
pushf
pop
jns
jbe
jecxz
sahf
and
cmp
daa
nop
(bad)
loopne
leave
jmp
mov
or
dec
mov
aas
inc
aam
cs
gs
out
cmp
jae
data16
repz
cmps
push
bound
nop
mov
or
enter
retf
outs
pop
fst
sub
push
cmp
ins
xor
loope
jns
test
clc
xor
jo
cmc
(bad)
mov
and
pop
test
cdq
inc
fmul
jp
cmp
lods
es
push
movs
add
enter
into
sub
enter
(bad)
fs
scas
fisttp
js
std
mov
mov
mov
ds
(bad)
clc
fsub
enter
add
int
dec
mov
movs
data16
sti
pushf
out
pop
and
leave
xor
fs
lds
call
popf
inc
shl
xor
iret
pop
mov
popf
pushf
dec
mov
mov
call
mov
gs
push
push
mov
adc
retf
(bad)
scas
push
sbb
mov
mov
pop
jnp
retf
cmp
jge
xor
retf
inc
js
mov
sbb
cmps
pop
fcmovnb
addr16
das
xchg
mov
lods
mov
ins
push
push
push
fisubr
or
aaa
and
sahf
inc
cs
fidivr
retf
pop
mov
cmp
jmp
push
addr16
repz
cld
in
or
idiv
xor
scas
and
in
das
enter
nop
xor
cmc
inc
jne
cmp
xchg
jl
mov
outs
push
retf
add
enter
dec
shr
lods
aad
test
retf
inc
sub
out
add
cmc
mov
sub
mov
and
push
sub
mov
inc
push
mov
pop
(bad)
pusha
adc
mov
ror
rol
adc
jle
dec
sub
test
popf
adc
and
es
jle
jae
push
sbb
xchg
push
paddb
loope
(bad)
nop
or
neg
sbb
test
jno
into
outs
test
fcos
pop
dec
sti
pop
enter
mov
lahf
push
dec
jmp
lods
rcl
loope
mov
js
cli
cmp
xor
sbb
clc
mov
movs
js
cmp
or
dec
xchg
in
imul
daa
push
mov
xchg
add
sbb
je
je
fs
xlat
mov
popf
ins
out
mov
mov
push
and
xor
mov
pop
inc
adc
xor
sub
push
mov
mov
pop
fstp
test
push
enter
mov
outs
neg
push
or
xchg
sahf
js
push
dec
aam
stc
call
mov
sbb
jno
dec
xchg
in
lea
xchg
lahf
les
(bad)
div
bound
add
inc
add
mov
xor
ret
xor
loope
fisttp
jmp
in
enter
inc
es
xchg
inc
xor
sub
aas
scas
sahf
pop
push
xchg
addr16
(bad)
fsubr
mov
sub
push
jg
jns
dec
in
lods
sar
rcl
push
cmc
lds
sub
movs
and
push
jno
test
and
mov
or
inc
nop
or
mov
(bad)
adc
sbb
dec
or
or
add
add
add
push
stos
xor
sbb
pop
jmp
mov
sbb
xlat
sub
fs
mov
sbb
mov
xor
aas
jl
repz
jecxz
rcl
mov
stc
push
or
test
cdq
movs
xor
and
add
jbe
jl
sbb
or
imul
fmul
div
inc
loopne
sub
fs
mov
scas
jge
inc
aaa
and
pop
das
push
mov
xchg
(bad)
mov
mov
lods
dec
cmp
adc
js
jp
aad
push
ins
test
bound
adc
sub
dec
xor
scas
(bad)
or
mov
clc
mov
and
ror
pop
outs
jne
xchg
adc
call
sub
(bad)
sub
dec
jns
cli
test
xchg
movs
fcom
cld
jo
cmp
bound
mov
xchg
mov
js
enter
add
addr16
adc
xchg
push
mov
shr
and
cld
add
add
loopne
arpl
out
int
stos
shl
push
mov
inc
cmp
dec
js
jb
dec
(bad)
shr
and
movs
call
aad
popa
or
sahf
lods
mov
push
pop
iret
push
xchg
push
jo
xchg
push
xchg
add
jb
adc
add
sti
fdivr
add
jge
nop
clc
push
hlt
pop
not
cmp
gs
in
fisubr
push
xor
ins
or
push
xchg
fild
ficom
repnz
jl
dec
mov
clc
add
js
xchg
sub
(bad)
shl
je
je
xchg
jp
and
mov
je
(bad)
and
lods
loope
add
aas
inc
fist
pop
add
pop
add
mov
scas
jmp
xchg
xor
xchg
ins
stos
pop
js
or
add
xchg
mov
adc
push
jmp
and
int
push
dec
add
mov
push
mov
cld
rcl
pop
cmps
(bad)
xor
mov
sbb
inc
imul
shl
dec
setbe
lods
iret
dec
mov
mov
lea
inc
sub
and
dec
int
mov
push
xchg
xchg
ja
adc
call
addr16
fdivr
pop
stos
mov
(bad)
jns
adc
test
adc
and
cmp
cmp
dec
jp
ins
adc
aas
out
jmp
dec
out
mov
nop
das
stos
not
leave
push
mov
mov
das
inc
sbb
sub
or
shl
sbb
(bad)
fst
jg
inc
or
int3
test
pop
ins
fidiv
data16
daa
aad
outs
or
lock
dec
or
out
cmp
jno
enter
ja
xlat
mov
sbb
mov
dec
es
loop
imul
stos
xchg
int3
mov
or
(bad)
jae
jmp
scas
ins
pushf
jns
arpl
sub
cmp
mov
rol
movs
jae
adc
popf
sub
pop
and
mov
pop
gs
adc
fwait
das
cmps
and
in
dec
mov
xchg
jbe
(bad)
jae
out
rol
fdivrp
mov
xchg
mov
dec
int
bound
lods
adc
and
push
aad
mov
push
int
mov
jge
cmp
add
mov
fiadd
sub
dec
ud2
xor
hlt
mov
loopne
popf
xchg
js
push
inc
sub
jae
fisub
push
jb
mov
xchg
(bad)
sbb
rol
jo
data16
cli
dec
sbb
dec
sbb
adc
cld
(bad)
sub
push
int3
je
mov
mov
inc
adc
inc
enter
mov
loopne
jns
sbb
jo
and
loopne
jmp
gs
xlat
popa
out
cmps
adc
push
sbb
fld
dec
cmps
(bad)
movs
xchg
pushf
fwait
enter
in
arpl
inc
cmp
rcr
popa
pop
pop
in
ret
cli
push
inc
dec
or
cwde
pop
xor
jmp
mov
add
cmp
cdq
or
aam
int
int3
add
mov
test
cs
fmul
icebp
push
in
sbb
in
cmps
call
into
fsub
cmp
xor
mov
and
dec
or
or
push
sbb
push
sbb
jecxz
and
loop
arpl
out
mov
(bad)
out
push
or
sub
je
gs
adc
mov
xchg
cmc
and
dec
dec
and
fs
xchg
jp
xchg
clc
out
nop
shl
jl
loop
retf
retf
test
cs
push
fsub
xor
outs
shl
repnz
inc
into
jns
mov
lea
and
push
std
ficom
xchg
je
xor
sbb
push
(bad)
nop
lods
sub
hlt
jmp
cmp
out
push
xchg
jbe
xor
std
fwait
cmc
movs
xbegin
xlat
int
cdq
shr
test
dec
mov
mov
push
es
(bad)
or
ret
add
push
outs
xor
mov
xchg
mov
sub
jo
dec
cmps
xchg
lds
ss
clc
scas
mov
test
push
inc
ss
xor
jl
inc
je
rcl
mov
mov
out
mov
jmp
mov
les
xor
gs
mov
mov
sbb
dec
ret
and
std
adc
xchg
ins
movs
lds
stos
push
pusha
test
jmp
inc
cli
scas
fldcw
aam
in
iret
aam
push
scas
sub
jnp
xchg
mov
movs
ss
stc
bswap
push
ins
and
xor
fbld
pop
jb
xchg
xchg
aad
ds
jecxz
std
mov
stc
push
popf
adc
jbe
mov
pop
inc
mov
out
mov
dec
enter
leave
pop
fisubr
adc
retf
pop
retf
pop
test
jno
push
popf
aas
jae
int
inc
mov
xlat
mov
jle
add
push
mov
push
inc
and
jge
mov
bound
fsubp
mov
xor
inc
dec
ds
push
je
stos
aas
fisub
sbb
mov
xor
jl
ds
mov
cmc
sbb
jp
loopne
ins
and
pop
and
xor
jno
mov
sbb
fld
cmp
fistp
mov
mov
dec
sahf
mov
imul
rol
mov
lods
adc
leave
pop
out
xchg
pusha
inc
(bad)
imul
jmp
out
mov
test
dec
fimul
jno
rol
into
inc
lea
bound
call
mov
int
cmp
outs
fcomp
or
inc
xor
sbb
push
adc
and
lock
pop
xchg
in
mov
mov
mov
mov
mov
ss
xchg
add
sar
mov
and
repz
jp
movs
icebp
(bad)
mov
and
sar
lods
fldenv
inc
dec
mov
jne
(bad)
out
and
stos
or
push
cmps
aam
cmps
ror
mov
pop
push
das
or
call
in
pop
cld
add
test
(bad)
dec
repz
scas
ins
adc
jns
test
mov
fwait
add
xchg
dec
int3
iret
sbb
aaa
enter
lods
test
xchg
xchg
push
mov
ds
(bad)
iret
mov
(bad)
xor
pusha
mov
repnz
and
addr16
test
ja
cmp
pop
mov
sbb
loop
jle
jp
or
pusha
mov
jecxz
daa
inc
scas
push
and
inc
(bad)
jo
in
mov
js
jmp
stc
loop
mov
or
xor
adc
test
dec
pop
fs
rcr
les
fcmovu
inc
outs
jg
call
jecxz
nop
sbb
div
into
outs
adc
scas
and
repnz
inc
int3
adc
out
mov
les
or
pop
xor
mov
push
ja
bound
cmp
rcl
div
je
pop
sub
xor
rcl
push
dec
pop
sub
inc
(bad)
scas
mov
fisub
or
xor
aaa
pop
(bad)
icebp
push
scas
cmp
(bad)
sub
adc
pop
movs
sar
sub
retf
xor
xor
(bad)
jns
dec
pop
popa
dec
dec
or
xchg
pusha
lock
and
mov
inc
mov
mov
xchg
retf
retf
adc
stc
adc
adc
div
aas
mov
cs
cmp
pop
mov
ds
cmp
scas
rcl
in
test
xchg
in
cmp
jbe
mov
cmps
sbb
mov
rcl
dec
sub
mov
adc
arpl
repz
sbb
icebp
ins
mov
scas
pusha
dec
xchg
or
and
loopne
ja
out
jecxz
call
jnp
arpl
sub
mov
sbb
ins
mov
mov
push
inc
jg
imul
sbb
sub
addr16
(bad)
sub
out
adc
and
sbb
dec
sbb
pusha
dec
int
das
adc
adc
stc
int
inc
mov
jne
add
out
xor
push
lahf
fidiv
out
and
mov
call
xor
rcr
mov
jo
inc
mov
cmps
div
or
xchg
stc
lods
mov
loopne
xchg
retf
xchg
dec
xor
cdq
add
push
daa
retf
add
shr
pop
jmp
jno
inc
sar
stos
jmp
outs
or
add
nop
jmp
ds
cmp
push
inc
and
rcr
push
ret
pop
jle
hlt
mov
out
or
test
xchg
push
mov
sti
jae
cmp
mov
mov
mov
dec
xchg
pop
(bad)
shl
inc
cmp
cmp
or
xor
sar
fsub
sbb
mov
and
mov
enter
mov
ss
pop
out
shl
pop
jle
lock
jo
jo
xor
jg
shl
nop
into
push
std
dec
xchg
and
out
jmp
cs
in
cmp
adc
ss
jmp
xchg
add
icebp
xor
test
rol
sbb
or
xor
or
cmp
popa
movs
cs
and
arpl
adc
ds
pusha
movs
ins
mov
jl
mov
in
mov
or
push
mov
fisttp
push
jge
shr
fsub
call
ret
out
clc
rol
pop
sbb
loopne
fisubr
inc
mov
enter
sahf
cmp
rol
pop
push
ror
add
add
inc
jle
es
das
aad
pop
sub
dec
outs
xchg
cmp
rcl
mov
scas
shl
push
mov
mov
sbb
imul
add
dec
fisttp
push
jo
in
stos
ds
pop
sbb
(bad)
retf
add
fisub
in
cmp
mov
mov
cs
cmps
inc
push
adc
(bad)
in
push
cmp
xchg
add
mov
daa
inc
dec
outs
jge
push
in
sub
mov
adc
addr16
scas
cmp
lods
mov
sub
das
fsub
mov
dec
jp
fdiv
pop
ror
loope
jmp
push
jb
or
js
push
(bad)
mov
sar
retf
cdq
ret
iret
pop
test
and
mov
mov
mov
or
lahf
stos
mov
in
xor
jno
dec
or
fwait
mov
lock
xchg
pop
jae
aaa
jo
xchg
push
sbb
dec
bound
xchg
jle
clc
push
(bad)
mov
in
popf
push
stos
sbb
xchg
fdiv
call
out
adc
(bad)
mov
in
sahf
inc
jns
je
xchg
xchg
sbb
xchg
mov
loopne
ret
inc
fadd
sub
inc
or
adc
popf
cmps
pop
adc
stos
add
hlt
fidivr
cmps
add
inc
mov
outs
movs
jmp
aam
scas
ins
rcl
cdq
jecxz
or
mov
in
cmp
imul
pop
dec
(bad)
leave
mov
jne
fst
scas
outs
dec
retf
inc
in
data16
aaa
sbb
aaa
aam
xchg
inc
clc
call
xor
dec
sbb
jb
repnz
hlt
dec
or
push
mov
out
mov
nop
jg
jge
and
cld
rol
pop
mov
inc
mov
fnsave
sub
jmp
test
pop
fiadd
dec
bound
cmp
adc
add
and
cmp
mov
rcl
xor
jno
jb
jae
mov
hlt
lock
sbb
or
icebp
jns
call
(bad)
xor
sub
cld
sahf
stos
adc
ins
dec
mov
xor
xor
dec
fcom
jno
popa
jnp
imul
call
jno
jmp
ret
mov
dec
add
int
cld
jns
ds
xor
xchg
lods
or
je
push
cdq
sbb
jnp
push
mov
shl
jp
mov
sub
loopne
test
(bad)
push
pop
or
dec
push
and
call
imul
inc
fidivr
mov
inc
loop
mov
cmp
dec
mov
ret
clc
jnp
retf
push
loopne
cmp
and
and
adc
push
and
pop
repz
cmp
in
call
(bad)
in
jmp
fbstp
lods
sub
and
mov
pop
in
jmp
and
xchg
pop
in
mov
popf
adc
add
test
add
out
jns
mov
(bad)
fistp
cmc
retf
call
sub
mov
sbb
ja
arpl
std
mov
push
xchg
adc
and
push
push
and
(bad)
call
in
std
and
retf
jl
xor
aad
mov
add
inc
sbb
pop
jle
pop
jo
ins
lock
or
jns
mov
adc
je
data16
xchg
and
push
sti
fldcw
mov
jg
in
fdiv
xor
sahf
nop
push
out
aaa
jle
fs
es
mov
mov
add
daa
icebp
mov
mov
cmp
xchg
inc
mov
imul
int
or
test
jb
test
add
adc
mov
(bad)
push
xchg
out
xor
je
bound
dec
mov
call
xor
lahf
mov
sbb
pop
ds
sbb
jmp
mov
dec
movs
inc
and
cld
retf
add
test
add
das
sub
jg
adc
sub
repnz
aad
pushf
nop
xchg
not
cmp
mov
jge
sti
jle
sub
fld
aaa
test
rcl
xchg
pop
jne
fwait
or
sahf
and
loopne
xor
cmp
ss
fsub
jno
push
jo
je
jno
mov
movs
push
in
xchg
sub
pushf
adc
xchg
add
and
xor
test
inc
fcmovnu
fisubr
iret
ror
mov
lods
xchg
xor
cld
mov
jns
push
rol
push
jo
aaa
inc
dec
ins
ss
mov
jae
cmp
(bad)
outs
aad
sbb
arpl
sbb
cld
add
and
mov
sub
push
sbb
or
jo
xchg
xor
pop
mov
add
pop
sub
cmp
xchg
jnp
div
jle
jnp
mov
xchg
mov
mov
jecxz
xor
mov
sub
imul
pop
fidivr
(bad)
fdiv
pop
lea
or
sub
cmp
std
movs
dec
sub
bsr
mov
xchg
out
inc
cmp
add
and
xor
inc
hlt
sbb
xor
mov
lods
imul
int3
dec
fstp
fbstp
sbb
inc
out
std
pop
out
xor
out
outs
sub
lds
add
lods
int
scas
ins
arpl
pop
ins
outs
aad
xor
das
ret
jg
mov
daa
je
addps
mov
inc
xchg
and
ret
fmul
dec
mov
push
dec
xor
cdq
shl
imul
sub
aas
xor
test
mov
push
shl
dec
test
jo
xchg
push
adc
sbb
fld
loopne
fdiv
mov
xor
(bad)
(bad)
push
dec
push
call
mov
(bad)
mov
das
lea
or
dec
cs
xchg
or
xor
lahf
pushf
adc
jecxz
rol
leave
or
lea
add
inc
lods
movs
mov
cwde
stc
pushf
push
repnz
cmp
jbe
mov
pop
push
pushf
int3
stos
xor
xchg
add
cmp
mov
mov
lods
mov
mov
test
inc
push
fistp
sub
xchg
leave
stc
jbe
cmp
push
mov
(bad)
sub
jae
sub
jo
int
mov
jns
jno
xor
retf
and
or
in
jae
shl
inc
mov
xlat
pop
in
sub
ret
mov
pop
dec
mov
in
inc
shr
or
addr16
xchg
pop
pop
mov
data16
xchg
push
call
btc
clc
dec
addr16
jns
fidiv
mov
bound
xchg
mov
rcr
pop
push
push
sub
dec
js
pop
cmp
sahf
inc
std
(bad)
xchg
xchg
sbb
push
daa
mov
out
mov
and
xchg
mov
inc
in
cs
and
inc
jecxz
test
cs
mov
sub
call
mov
cli
imul
sub
mov
mov
adc
push
adc
jle
push
push
jg
iret
inc
cmp
add
movs
in
nop
dec
add
sub
push
cmp
adc
rcl
mov
movs
sahf
sub
cs
test
xchg
xchg
jne
das
cmp
xchg
sbb
sbb
test
lahf
retf
pop
push
add
mov
jg
sub
pop
adc
movs
pop
mov
sti
rol
inc
xchg
sbb
or
lods
scas
out
loope
lea
mov
(bad)
mov
out
inc
mov
pop
popf
imul
pusha
adc
mov
jge
sub
push
xor
mov
xchg
gs
rcr
mov
jmp
lahf
(bad)
mov
imul
bound
adc
scas
out
sub
xor
push
mov
inc
mov
xchg
js
push
enter
sbb
mov
call
in
pop
mov
scas
xor
in
fidivr
and
sti
jns
adc
cwde
pop
and
lds
adc
in
retf
mov
les
mov
out
cmp
lods
push
sub
scas
sar
pop
mov
xor
lds
sahf
lods
(bad)
push
adc
add
popf
inc
movs
fsub
inc
dec
jp
mov
push
mov
aad
dec
dec
push
or
inc
sbb
sbb
in
int3
iret
loopne
xor
iret
cmp
jge
add
and
cmps
jge
rcl
xchg
shl
jno
test
inc
mov
test
jmp
mov
ffreep
xchg
retf
sbb
test
in
sub
add
retf
push
jle
and
fsubr
xlat
pop
mov
leave
(bad)
cld
icebp
(bad)
hlt
push
retf
(bad)
cli
mov
cmp
lock
adc
into
(bad)
cld
stc
pop
pop
test
repz
mov
test
dec
icebp
pop
jge
mov
inc
adc
fistp
pop
int3
sub
or
test
cwde
ret
sub
ins
xor
push
and
pop
sbb
mov
push
arpl
cdq
push
sbb
sub
adc
cmp
dec
or
mov
jb
mov
adc
ja
or
pop
stc
(bad)
pop
add
dec
je
push
jle
mov
add
data16
les
inc
in
push
add
push
ins
push
call
iret
mov
sar
and
pusha
cs
scas
fist
sub
xor
mov
xchg
ror
lods
cmps
push
into
adc
fsubrp
jno
dec
dec
or
fsub
pop
aaa
sub
jp
mov
sahf
sub
add
ins
ds
sahf
leave
push
fdivr
adc
jge
mov
ret
jecxz
test
xor
push
sub
loopne
fild
daa
fistp
push
dec
sub
imul
ss
lods
jp
jge
dec
out
fld
mov
dec
call
dec
sbb
jne
daa
jp
pushf
mov
xchg
shr
push
ins
ret
xchg
mov
icebp
out
mov
outs
adc
iret
icebp
js
es
jns
ins
(bad)
std
repnz
std
idiv
call
mov
xor
in
test
pop
retf
xchg
jne
cmps
inc
push
xlat
aad
in
cmps
or
out
mov
sahf
lahf
aaa
lock
hlt
sub
iret
inc
mov
jmp
mov
mov
jmp
scas
ret
jne
fisub
enter
ficomp
enter
icebp
or
dec
jns
jge
call
or
adc
dec
pop
addr16
adc
daa
cmp
inc
jl
inc
xor
or
ja
pusha
mov
pop
out
jno
or
test
dec
inc
in
pop
xchg
in
xchg
and
mov
mov
adc
outs
or
jo
cwde
mov
add
aam
js
shl
jmp
out
pop
cmp
sub
sbb
and
push
jne
mov
inc
push
(bad)
or
add
and
jne
and
leave
scas
dec
and
or
mov
jo
scas
xor
jns
and
ret
adc
mov
mov
test
pop
(bad)
(bad)
clc
aas
push
das
nop
loope
jmp
out
addr16
test
movs
stos
test
lds
stos
pop
push
push
out
mov
jo
push
inc
pop
dec
jnp
fist
sbb
ret
push
push
jo
(bad)
mov
pop
std
pop
ins
xor
call
cmp
push
sahf
ds
call
lea
add
rol
and
cmp
sub
je
ins
push
cdq
stos
inc
(bad)
mov
inc
and
jbe
adc
push
sub
(bad)
cmp
jp
cmp
mov
lods
xchg
test
sub
std
dec
in
stc
push
not
xor
cmc
ret
mov
in
jmp
push
fwait
pushf
mov
scas
add
mov
mov
sar
in
lahf
or
(bad)
fild
jmp
(bad)
(bad)
inc
sbb
inc
jnp
test
in
stos
push
push
pop
rcr
bound
call
mov
test
xor
cmp
xchg
mov
bnd
adc
fwait
or
jno
mov
sbb
pop
enter
xor
out
loope
pop
je
dec
(bad)
push
(bad)
std
mov
adc
call
sbb
xor
aas
pop
pop
cmp
clc
dec
cmp
stos
inc
iret
jg
ins
mov
pop
fnsave
push
push
push
jb
inc
or
adc
clc
lods
pop
retf
push
clc
mov
push
and
mov
mov
pop
js
in
das
and
mov
or
inc
(bad)
adc
xlat
add
std
add
adc
dec
ins
inc
mov
xor
rcl
push
(bad)
jecxz
nop
pop
test
lock
bound
movs
fdivr
adc
cmp
xor
into
xchg
xor
scas
daa
xor
push
aad
or
sub
push
mov
adc
test
ss
addr16
ficomp
data16
cmps
sub
inc
call
and
scas
and
and
in
xchg
jmp
stos
xor
or
push
std
inc
lods
gs
mov
mov
(bad)
aam
mov
stos
out
or
ins
test
pop
js
adc
or
sub
cdq
cli
(bad)
sti
jns
lahf
mov
xor
cmp
pop
cdq
mov
xchg
xor
dec
into
das
loop
push
in
fild
jge
cmp
push
pop
push
and
ret
popa
adc
xchg
std
imul
dec
std
xchg
das
cmp
js
jmp
jo
imul
iret
je
cmp
or
mov
adc
push
and
pop
and
sahf
pop
test
sbb
jb
mov
repz
pop
aaa
jo
mov
or
outs
push
xor
pushf
stc
pop
pop
xchg
aaa
outs
addr16
cld
sbb
aas
sub
in
jecxz
popa
dec
inc
xor
mov
aaa
mov
adc
sti
test
cmp
shl
mov
push
mov
pop
in
pop
mov
push
clc
(bad)
jmp
mov
inc
add
rcr
lods
sub
test
movs
mov
test
lods
xchg
inc
pop
in
jne
imul
jg
xchg
shl
jp
push
sub
mov
daa
pop
jge
pop
mov
xor
div
and
pop
div
fs
std
sar
ds
or
mov
adc
gs
mov
or
xor
cmps
mov
push
cmp
cmp
fldenv
pop
mov
stos
add
stc
dec
inc
xchg
pop
loop
xchg
imul
retf
stos
add
ja
rol
cmps
xchg
(bad)
dec
pop
stos
je
dec
call
jle
cmc
or
rcl
(bad)
cmc
iret
mov
imul
cs
ds
xor
scas
mov
fmulp
or
push
xchg
inc
or
push
div
repz
lods
lods
and
pusha
jmp
dec
dec
dec
xchg
mov
icebp
jno
loope
icebp
int
out
addr16
sbb
lea
add
push
ror
jo
mov
adc
push
or
cli
(bad)
mov
imul
cmp
xchg
test
daa
and
mov
mov
jnp
dec
outs
jo
and
mov
cs
inc
cmp
xor
jmp
push
mov
into
aad
and
repz
sbb
fs
pop
loop
movs
daa
daa
jg
push
out
cmovnp
push
retf
neg
ror
pop
push
push
fcomp
loopne
jge
cmp
imul
in
jp
mov
arpl
stos
xchg
popa
or
cs
or
mov
loope
jae
mov
dec
aad
lahf
imul
jle
and
pop
push
pop
xor
retf
leave
mov
mov
jo
mul
add
sbb
pop
lods
dec
mov
cs
pop
mov
jecxz
call
jmp
pop
mov
out
rcl
sbb
xor
and
jae
sbb
imul
mov
mov
jo
(bad)
aam
cmp
jl
mov
(bad)
jg
jg
out
(bad)
mov
adc
jp
pop
dec
adc
je
mov
ss
jg
mov
sub
jg
adc
jns
retf
xor
or
pop
mov
mov
jle
daa
jmp
imul
push
imul
fstp
pop
test
mov
loope
call
push
mov
inc
cld
int
repz
fs
fimul
mov
lahf
aas
cmp
in
jle
jno
add
in
mov
in
sbb
sub
sub
(bad)
pop
jo
cmp
mov
dec
adc
(bad)
sbb
js
(bad)
not
popf
mov
retf
(bad)
ins
jmp
out
or
jne
add
dec
sub
arpl
mov
jmp
cmc
xchg
(bad)
sbb
rcr
dec
pushf
push
call
mov
rol
sub
cmc
jno
mov
xchg
mov
jmp
or
cmp
mov
shl
and
(bad)
loopne
frstor
jmp
lahf
test
xchg
fnstsw
push
mov
cwde
shl
mov
lock
adc
sar
ror
inc
sbb
cmp
add
dec
(bad)
iret
test
mov
sub
sub
outs
and
mov
xchg
jle
test
xor
push
xchg
enter
fmul
and
xor
pop
movs
mov
lods
popf
adc
xor
cmp
cmp
pop
dec
lods
add
fist
inc
out
std
and
inc
add
add
xchg
and
stc
sub
push
pusha
add
pop
sub
xchg
dec
or
xor
ja
retf
lods
es
mov
and
mov
jbe
daa
mov
scas
adc
mov
cmovbe
mov
shl
jnp
inc
and
dec
ret
neg
add
js
enter
(bad)
je
out
in
movs
or
jo
out
arpl
jp
(bad)
cmp
lahf
pop
mov
xchg
neg
mov
repz
jns
jb
cmp
inc
mov
sub
jmp
stos
shl
fild
push
pop
leave
(bad)
out
mov
test
jmp
sub
or
popf
jbe
int3
add
or
push
mov
adc
pop
ja
jp
icebp
fst
or
add
pop
cmp
push
sbb
stos
outs
xchg
jb
mov
pop
in
addr16
mov
loop
jo
out
xor
aad
sbb
push
loop
out
das
std
(bad)
fcomi
les
movs
(bad)
jmp
push
push
pusha
nop
outs
das
mov
jge
jno
lahf
out
mov
sbb
or
dec
lea
inc
and
repnz
jge
dec
mov
iret
dec
and
repz
push
mov
arpl
into
and
push
xor
pop
adc
jnp
xor
test
out
and
push
push
add
fsub
loop
mov
(bad)
push
cmp
sub
out
mov
xchg
jno
xor
ret
sub
jns
in
and
lea
(bad)
xor
xor
mov
les
pop
dec
into
ret
pop
mov
adc
movs
pop
rcr
pushf
(bad)
add
mov
or
jecxz
mov
pop
mov
jge
inc
mov
dec
lea
int
cmps
retf
mov
int
inc
inc
push
movs
sbb
outs
pop
ins
cmp
idiv
in
ret
fsub
outs
xchg
in
add
ins
add
sti
adc
sbb
push
out
cmps
aam
sbb
dec
cmp
fist
inc
add
mov
popa
ins
sbb
in
dec
outs
std
jmp
add
call
cmp
or
push
mov
out
dec
and
fild
xchg
call
mov
pop
mov
(bad)
sbb
jecxz
std
add
stos
ja
mov
pop
adc
hlt
aas
cmps
xchg
(bad)
cmps
ds
ds
fild
iret
mov
mov
sbb
(bad)
repz
jnp
(bad)
jmp
ficomp
ret
push
js
push
dec
jp
mov
retf
pop
dec
adc
out
mov
mov
pop
jno
jo
inc
inc
fisubr
add
xchg
push
cmps
(bad)
daa
stos
adc
inc
inc
std
div
and
outs
data16
ret
xchg
(bad)
push
add
and
aaa
ret
shl
cmps
pop
mov
mov
retf
dec
mov
jmp
psubusw
mov
sbb
push
enter
dec
lods
out
into
push
movs
mov
cmp
pop
xor
sub
(bad)
jo
pop
adc
add
icebp
loop
pushf
call
jle
adc
fs
jnp
jmp
das
pop
dec
hlt
or
and
mov
xor
movs
fwait
je
or
add
sub
sahf
test
push
sub
and
popa
push
fxch
shr
push
pop
sti
push
ins
repnz
lea
retf
div
or
(bad)
xor
loop
jne
nop
neg
or
icebp
add
popf
ja
cmps
lods
inc
or
jecxz
in
outs
in
xor
adc
popa
pop
addr16
push
jne
repz
pop
or
pushf
jmp
sbb
sub
jnp
sub
scas
and
aam
cwde
addr16
mov
(bad)
or
hlt
or
or
or
mov
add
in
inc
dec
dec
mov
push
(bad)
pop
out
cmps
pop
xchg
mov
lods
lods
stc
in
mov
(bad)
(bad)
js
pop
jl
aas
fdiv
pop
fdivp
xor
retf
push
sbb
cdq
iret
mov
mov
push
cwde
cwde
push
hlt
(bad)
jp
xchg
add
retf
popf
in
pushf
fild
ja
repz
cmp
sub
stos
sahf
and
push
add
and
sub
adc
or
mov
fnstsw
or
frstor
stc
jl
lock
pop
pop
pusha
sub
sti
jns
loop
dec
loope
cmps
outs
mov
enter
lds
call
jle
out
cwde
xlat
xchg
cmp
lock
adc
loop
out
xor
inc
je
scas
add
xchg
repnz
xchg
dec
xor
pushf
mov
in
jp
dec
push
xchg
pop
or
xor
(bad)
sbb
pop
je
or
outs
fcomi
push
or
ret
(bad)
clc
ins
les
adc
xchg
add
xchg
jmp
es
and
adc
mov
push
(bad)
mov
mov
test
adc
(bad)
xlat
mov
(bad)
fwait
sbb
aaa
mov
push
and
leave
push
or
or
stos
loope
outs
js
bound
iret
pop
iret
xor
fstp
sbb
in
xchg
(bad)
jge
es
(bad)
mov
inc
(bad)
cmc
cmps
xchg
movs
mov
xchg
dec
rol
mov
sbb
cmp
jl
(bad)
pop
loopne
xor
lods
jp
aas
jp
fs
mov
in
cmp
arpl
adc
mov
mov
mov
pop
push
sbb
mov
stos
ins
ss
aas
sbb
sbb
lods
nop
imul
xor
dec
cmc
test
xchg
dec
add
inc
call
pusha
sub
adc
hlt
les
mov
test
lods
sub
in
jl
jne
scas
pusha
aam
dec
popa
les
(bad)
rol
cmp
pusha
xlat
xchg
xchg
or
stc
xchg
int
sub
push
push
fnstsw
leave
mov
inc
inc
iret
mov
mov
(bad)
test
call
mov
mov
and
jo
cmp
imul
pop
mov
mov
call
jle
xchg
loop
(bad)
jg
pop
aas
enter
stos
fiadd
sbb
cld
add
mov
xor
rol
pop
sub
ins
test
and
lds
or
into
inc
push
iret
cwde
inc
ss
dec
xlat
dec
call
jge
mov
xor
inc
call
test
scas
push
cmps
into
add
adc
jae
jne
xchg
lds
stc
ins
mov
cmp
xchg
sbb
mov
cmp
pop
(bad)
fwait
push
fsub
pop
shl
sub
xchg
inc
icebp
sbb
pop
pop
jno
jle
push
pop
out
movs
mov
loopne
mov
ja
in
cld
ja
add
sahf
rcr
mov
add
test
scas
sti
sbb
ins
rcl
inc
fs
(bad)
jmp
push
inc
mov
push
jp
xchg
mov
and
pop
lock
ins
test
in
cmps
mov
dec
scas
bound
xor
in
int3
adc
ror
mov
out
jp
lds
push
adc
lds
sub
into
mov
pop
stc
add
loop
jae
or
sbb
cmp
icebp
(bad)
lock
pop
push
jg
add
gs
push
cmc
(bad)
imul
add
xchg
leave
push
xchg
outs
fnstsw
jge
jle
repnz
fsub
nop
das
mov
push
cmp
pop
pop
aaa
xor
pop
sbb
call
and
inc
imul
push
add
adc
pop
push
mov
and
dec
adc
or
call
mov
xchg
ins
bound
mov
in
hlt
cmp
jbe
adc
out
popa
into
pop
cdq
mov
out
das
pop
push
cmps
xchg
lods
mov
add
add
sahf
lods
retf
push
(bad)
mov
cmps
and
pop
mov
jle
sbb
test
fmul
lods
arpl
out
cld
cmp
in
and
push
(bad)
leave
sbb
mov
jge
loope
lock
sbb
ret
dec
jae
add
imul
pushf
fldenv
inc
mov
xor
and
shl
int
xor
call
and
cmp
adc
push
(bad)
cmp
in
bound
fnstenv
cdq
xchg
enter
adc
dec
push
outs
and
sub
je
dec
push
stos
(bad)
cs
or
test
sub
ucomiss
cmps
retf
mov
imul
std
hlt
sub
xchg
retf
enter
sub
mov
jmp
lahf
scas
sahf
adc
jbe
ss
add
in
lock
jecxz
repnz
stos
mov
(bad)
push
pop
mov
sub
fst
arpl
loop
push
mov
in
lahf
or
pop
shl
dec
in
ds
movs
pop
cld
loop
adc
push
lods
imul
mov
fldcw
mov
les
dec
jle
pusha
in
mov
lock
xor
movs
dec
xchg
adc
ins
std
xor
ret
mov
mov
aas
mov
daa
xchg
arpl
shl
push
sub
cmp
sbb
mov
mov
popa
sbb
call
push
les
push
(bad)
dec
push
dec
cmp
ins
sti
ror
or
ror
xlat
inc
add
mov
xor
scas
test
int
outs
add
jecxz
mov
scas
dec
push
jno
pop
dec
ret
outs
mov
adc
sub
movs
in
movs
push
sbb
out
sub
in
in
jge
gs
fisub
icebp
das
repnz
dec
jl
pop
mov
jle
adc
mov
stos
test
imul
push
arpl
mov
add
jmp
sbb
xchg
aam
and
daa
adc
pop
jns
xchg
ds
test
test
shl
sub
mov
sbb
gs
aaa
sar
fdiv
js
xchg
push
xor
std
sbb
mov
adc
retf
aaa
in
ret
(bad)
pop
daa
jle
popa
jp
dec
dec
inc
fisubr
xchg
push
mov
mov
or
inc
fwait
movhps
shr
adc
mov
(bad)
and
dec
or
xchg
dec
mov
in
add
push
add
inc
je
aas
aam
scas
pusha
je
dec
and
xchg
std
mov
pop
jo
xchg
daa
add
cwde
iret
sub
pusha
imul
sahf
retf
add
imul
mov
xchg
sahf
adc
adc
inc
(bad)
push
(bad)
enter
mov
cmp
sbb
sahf
std
hlt
out
sbb
add
push
inc
cli
pop
popa
fdiv
cs
mov
pop
inc
jp
div
sub
push
mov
mov
repnz
test
sub
push
jecxz
hlt
mov
jo
or
test
jno
(bad)
(bad)
sub
mov
(bad)
adc
lds
jns
repz
mov
neg
jno
sbb
xor
or
inc
adc
inc
hlt
sahf
push
in
add
sub
pop
lods
push
aas
xchg
(bad)
(bad)
jecxz
adc
test
cmp
xchg
mov
xor
jo
or
mov
adc
cmps
pusha
scas
cwde
cmp
dec
jbe
cs
and
mov
(bad)
neg
cmp
add
sbb
dec
adc
mov
loopne
jge
nop
add
fst
cld
loope
ret
test
iret
adc
in
jp
popf
pushf
pusha
lahf
inc
lds
add
xlat
loopne
push
in
cli
and
out
lods
nop
dec
and
fs
jecxz
call
adc
cmp
sub
push
rcr
cli
mov
mov
adc
mov
(bad)
mov
sar
fs
cli
xchg
pextrw
mov
push
add
jp
loopne
mov
inc
jae
in
adc
sub
cmp
xor
mov
jmp
test
dec
xchg
dec
out
cmp
ret
xchg
adc
add
nop
test
or
adc
mov
fld
rcr
jns
cmp
rol
adc
fbld
ds
shl
or
or
push
cmps
aaa
push
xchg
dec
in
test
out
fpatan
push
push
cmp
and
icebp
sub
js
cs
daa
push
and
out
mov
lahf
div
(bad)
add
clc
dec
jge
mov
repz
inc
push
xor
and
in
mov
ins
mov
push
retf
fs
pop
into
sbb
test
mov
fs
or
fst
out
frstor
add
xchg
mov
cmp
mov
rol
imul
inc
into
retf
stos
dec
pop
sbb
sbb
pop
cmp
xchg
cmc
mov
mov
iret
movs
xchg
push
inc
mov
js
jno
data16
fstp
sti
cmp
sub
test
xlat
or
adc
xchg
inc
push
jmp
enter
shl
fidiv
hlt
ja
mov
lds
les
lahf
dec
adc
mov
fstp
pop
nop
inc
enter
lea
and
or
out
aaa
sub
jno
cmp
jmp
out
test
lods
pop
fsub
pop
cld
icebp
int
and
jge
cmp
or
cmp
ja
adc
sbb
xor
xor
cmp
sbb
adc
mov
or
dec
mov
lea
adc
nop
das
lahf
and
adc
push
adc
add
stos
cmp
scas
aam
imul
imul
(bad)
xor
(bad)
in
jo
sub
pop
ret
inc
dec
push
leave
scas
jl
push
xchg
retf
push
mul
jbe
and
mov
mov
imul
ins
inc
inc
jp
ins
scas
xor
mov
xchg
adc
nop
and
xor
jns
pop
jle
pop
out
push
mov
mov
cmp
pop
(bad)
push
je
sbb
cli
mov
out
sub
sbb
popa
cli
out
imul
popf
or
call
int
push
sbb
lods
popa
js
ds
sar
mov
int
and
inc
pop
cmp
inc
retf
cmc
push
xchg
hlt
mov
mov
out
adc
or
push
mov
ja
pop
fwait
loop
loop
test
lea
pop
cwde
repnz
xchg
or
adc
sbb
dec
mov
outs
mov
loope
pop
ror
int
jbe
ret
aam
cmp
pop
out
mov
bnd
pop
cmp
xchg
mov
cmps
mov
push
sub
ins
mov
pop
stos
mov
data16
mov
mov
es
xor
xchg
jnp
pop
dec
add
(bad)
nop
and
jg
aas
out
fild
mov
mov
sbb
enter
clc
cmp
add
jp
iret
(bad)
(bad)
test
add
mov
punpckhdq
mov
pop
jae
in
adc
sti
xlat
pop
or
xor
fwait
test
movs
call
dec
mov
add
adc
mov
(bad)
repz
test
xchg
leave
lea
add
mov
mov
cs
std
test
nop
sbb
adc
into
mov
inc
cmps
adc
xchg
mov
mov
mov
ret
sti
pop
icebp
and
dec
jns
push
adc
nop
pusha
sbb
retf
push
dec
mov
test
push
test
mov
dec
add
sbb
nop
mov
inc
xor
test
mov
pop
out
arpl
rcr
jae
mov
enter
jmp
fwait
out
or
mov
pop
fist
cmp
dec
pop
pop
ins
inc
les
shl
pop
and
add
lea
mul
pop
fisub
out
cmc
mov
inc
mov
popf
in
mov
cmp
sbb
and
adc
loope
pop
jp
imul
fwait
push
js
fiadd
dec
repnz
cmps
lahf
in
jmp
pusha
sbb
or
sub
pop
push
add
xchg
ficom
loope
pop
pop
sti
ins
mov
clc
mov
shl
leave
dec
out
nop
xchg
enter
sbb
pop
cmp
std
pusha
hlt
sbb
js
movs
lock
adc
xlat
aam
mov
stos
test
out
test
dec
cli
ret
das
jno
mov
xchg
fadd
mov
fcomp
xor
js
sbb
inc
mov
fld
fwait
jo
mov
pop
out
push
lds
std
sbb
mov
ins
or
jmp
xchg
popf
inc
inc
(bad)
stc
aas
inc
ja
ja
cmps
or
or
rol
pop
pushf
add
or
pop
mov
fwait
mov
fwait
cmp
mov
jecxz
mov
dec
sub
jmp
inc
or
inc
dec
mov
jp
ror
movs
fs
inc
addr16
xchg
fcomp
dec
push
(bad)
loop
push
xor
jle
push
push
rol
sub
adc
pop
push
in
fs
adc
or
mov
enter
iret
sub
push
jecxz
push
jno
and
jmp
add
ss
pop
cmp
jge
push
or
retf
mov
jecxz
daa
or
syscall
fidivr
cmp
je
sub
pop
out
gs
ja
call
cmps
pop
shl
mov
pop
sti
mov
wrmsr
inc
add
jl
iret
in
xchg
loope
or
in
lods
xchg
mov
sub
shr
mov
pop
(bad)
repnz
adc
pop
jno
ficom
jb
jge
nop
sub
dec
pusha
and
daa
pop
mov
loopne
enter
imul
cli
cmp
retf
out
lods
out
(bad)
xchg
dec
retf
cld
add
dec
mov
movs
stos
xor
add
rol
pusha
cmp
cmc
daa
idiv
cmp
pop
pop
iret
sbb
mov
mov
je
xchg
ss
xchg
ret
int
pushf
fldenv
dec
ins
inc
pop
push
(bad)
cmp
fwait
dec
enter
jb
ret
adc
outs
pop
mov
xchg
and
ss
clc
mov
sub
daa
cmp
cmp
(bad)
mov
sub
ins
(bad)
fbld
leave
in
lods
sbb
cld
loopne
xchg
movs
dec
xchg
sbb
fsubp
xor
xor
fsub
pop
sar
ret
movs
push
(bad)
loop
xchg
mov
in
daa
sbb
jmp
pop
in
sti
bnd
cmp
in
xchg
repnz
push
and
dec
push
lock
pop
sbb
scas
sahf
xchg
aas
ss
mov
cmp
aas
adc
jle
and
pop
sub
out
fisubr
add
test
dec
mov
int
xor
in
fsubr
movq
dec
pop
xor
nop
mov
sbb
jb
test
ret
pop
adc
mov
mov
hlt
mov
cli
push
adc
xchg
frstor
ror
mov
out
cmp
adc
dec
iret
jmp
shl
cli
jns
cld
gs
or
jg
jmp
adc
sub
pop
or
scas
out
mov
cmps
sti
fsub
or
mov
jmp
movs
sub
mul
ret
loope
lods
retf
push
fild
scas
xlat
mov
xlat
mov
lea
pop
dec
inc
lods
sub
iret
cmc
push
call
jmp
jmp
cmp
in
dec
inc
bound
or
daa
leave
adc
out
call
add
xchg
sbb
imul
mov
sbb
xchg
or
xchg
(bad)
imul
mov
(bad)
push
pop
(bad)
gs
adc
addr16
out
push
xchg
aad
retf
jmp
sub
dec
loope
push
jmp
push
dec
stos
mov
repz
outs
mov
mov
jmp
aad
xchg
dec
sti
add
inc
loopne
pop
jmp
cwde
adc
inc
rep
pop
dec
xlat
xchg
mov
jno
or
pop
lods
jo
pushf
sub
inc
data16
ret
mov
outs
cmp
sub
arpl
xor
test
leave
sub
push
fist
and
clc
mov
sub
imul
aas
xor
outs
enter
push
xchg
cmps
mov
mov
xchg
adc
pop
fiadd
dec
xchg
jle
jg
sbb
xchg
and
push
mov
xor
movs
sbb
imul
push
ret
mov
push
in
rcr
xor
push
cmp
sbb
cmps
rcl
ss
mov
imul
(bad)
adc
adc
add
add
stos
mov
mov
fisub
pop
mov
data16
push
pop
push
mov
jbe
jno
pop
push
xchg
xor
dec
int3
fidivr
inc
stos
xlat
jl
cwde
sbb
ret
add
and
in
xchg
ds
mov
stc
sbb
sti
push
dec
mov
dec
add
retf
les
sbb
and
test
jg
es
test
stos
rcl
adc
mov
mov
test
xchg
mov
dec
mov
mov
and
push
(bad)
leave
in
icebp
or
xchg
jg
add
pop
jecxz
jmp
fmul
lock
pop
mov
(bad)
out
add
push
and
push
adc
inc
mov
cld
inc
test
call
cwde
mov
hlt
push
lods
call
ret
mov
imul
sub
out
pop
dec
enter
pop
xchg
ja
addr16
out
or
ret
cmc
mov
cmp
jecxz
bound
and
test
cmps
iret
ret
cmp
ins
hlt
jo
and
xor
pop
ficom
pusha
inc
lods
xor
and
push
repnz
es
xor
sub
pop
cmp
sti
dec
int3
push
addr16
in
jnp
cmc
into
push
pop
sahf
inc
push
pusha
dec
imul
stos
mov
int
imul
and
es
xchg
inc
mov
sub
int3
adc
add
inc
inc
xchg
mov
pop
int3
(bad)
shl
and
ficomp
(bad)
bound
adc
(bad)
push
pusha
jmp
jl
mov
pop
adc
loopne
out
fadd
pop
pop
cmp
sub
and
xchg
mov
jne
dec
xor
ss
sub
mov
cmp
jns
adc
sbb
cld
int3
(bad)
sub
inc
xchg
cdq
aas
sub
jo
repnz
int
(bad)
or
pop
sti
sbb
cmp
dec
add
lea
mov
push
mov
mov
movs
ret
xchg
push
mov
sbb
adc
mov
add
ror
mov
lods
movs
jne
jbe
cmp
sbb
push
fwait
mov
mov
dec
add
dec
outs
ror
sbb
xor
or
xlat
shl
adc
sub
pop
repnz
push
pop
lea
jns
and
pop
lock
loop
mov
gs
jl
mov
mov
nop
mov
pushf
js
in
sub
dec
push
add
jnp
lahf
lock
sbb
cmp
cmps
adc
add
push
retf
pusha
jecxz
movs
or
xchg
xor
leave
in
(bad)
xor
mov
leave
push
pop
jp
push
pop
jl
xor
js
(bad)
push
std
mov
movs
xchg
jne
fadd
out
or
jmp
push
pop
pop
jp
jno
and
in
jge
imul
in
pop
repz
sub
(bad)
mov
aas
lea
movs
data16
and
push
inc
dec
push
addr16
clc
jnp
or
js
sub
les
sbb
lods
push
jmp
adc
stos
stc
xor
dec
dec
mov
hlt
mov
jmp
push
out
dec
arpl
pop
jo
or
push
mov
es
cmp
pop
push
mov
xchg
inc
popa
inc
call
xor
sub
dec
mov
jl
bound
mov
pusha
div
js
xor
adc
xchg
fs
test
imul
cmp
mov
or
cli
nop
push
das
inc
nop
inc
push
mov
aam
aas
add
hlt
repz
jge
pop
mov
jne
repz
sbb
mov
imul
adc
push
cs
dec
test
mov
mov
inc
les
sar
pop
call
mov
xchg
out
loope
repz
push
dec
and
xchg
xor
icebp
out
pop
loope
mov
jg
inc
(bad)
sub
pop
jecxz
push
mov
inc
or
test
in
fwait
movs
jbe
nop
retf
adc
daa
pusha
mov
outs
mov
mov
add
jbe
push
push
adc
mov
dec
xor
nop
jp
enter
inc
cmp
push
pop
popf
jg
(bad)
aas
xchg
sbb
(bad)
sar
sub
inc
fistp
fisttp
mul
and
lods
mov
lods
inc
adc
enter
mov
jg
xor
mov
imul
xor
out
pop
mov
dec
sbb
les
pop
ror
das
pusha
or
fs
xor
push
pop
(bad)
movs
xchg
sbb
dec
pop
adc
adc
ins
cmps
mov
push
cmp
stos
clc
or
or
ret
pop
cs
cmp
cmc
xchg
adc
inc
or
inc
xchg
mov
ins
xchg
xchg
int3
(bad)
push
push
(bad)
pop
jae
into
mov
push
out
pusha
mov
gs
mov
mov
lods
jp
or
fcom
iret
popf
xor
stos
and
jae
leave
add
jmp
lods
sub
sub
inc
cld
fwait
inc
or
es
add
and
mov
sbb
dec
rcr
fmul
pop
inc
cmp
or
popf
lods
jle
adc
ficomp
or
xor
pusha
or
add
mov
jge
rcr
pusha
(bad)
jmp
inc
mov
jns
push
pop
add
inc
(bad)
xor
and
xchg
test
scas
inc
cld
push
adc
ss
scas
aaa
jecxz
les
inc
mov
mov
or
or
adc
in
push
test
sbb
jecxz
mov
jg
es
mov
and
sahf
in
dec
xor
repnz
mov
cmp
or
dec
loopne
ss
lods
mov
into
in
xchg
push
loopne
(bad)
dec
pop
add
and
cld
pop
jnp
hlt
ret
push
dec
fst
shl
inc
and
xchg
mov
scas
or
jl
enter
xor
js
retf
cmp
test
imul
into
popa
imul
xchg
pushf
addr16
cs
pop
push
into
ds
fidivr
dec
iret
sub
repnz
push
sbb
shl
sub
in
sbb
loopne
cmps
push
inc
sahf
repz
push
ins
cmp
xchg
push
vmovdqa
mov
jle
(bad)
push
push
mov
scas
mov
arpl
(bad)
cld
mov
push
in
adc
pop
and
mov
mov
mov
sub
jnp
test
aaa
xor
call
sub
ret
(bad)
xchg
imul
repz
mov
std
jmp
cmp
sbb
pop
adc
icebp
cmc
dec
jns
push
push
stc
fistp
inc
mov
fimul
mov
pop
jle
xlat
sbb
mov
lds
jmp
add
and
inc
call
dec
adc
retf
mov
iret
push
cmp
outs
xchg
loope
call
push
gs
imul
mov
mov
jo
ss
and
mov
sahf
in
into
iret
and
mov
push
sub
add
cmp
jae
add
xchg
cli
outs
test
stos
(bad)
sub
push
sbb
push
pop
sub
sbb
sub
popf
enter
cwde
mov
dec
shl
and
sar
std
or
das
lahf
std
lock
imul
jns
and
push
sub
and
pop
mov
jns
clc
fmulp
mov
push
mul
int3
jmp
push
xsaves
mov
shr
test
arpl
les
pop
mov
shufps
push
mov
jmp
or
mov
fst
(bad)
jo
cmove
mov
mov
adc
pop
aaa
and
bound
pop
call
add
dec
pop
clc
movs
ss
movs
mov
pop
mov
clc
fcomp
shr
fcom
test
stc
cmp
inc
pop
pop
cmp
xor
xchg
fstp
push
adc
jns
mov
test
outs
add
pop
and
push
pop
mov
jae
dec
sub
fdivr
adc
mov
dec
aas
mov
add
outs
adc
or
sub
scas
aad
xchg
mov
retf
clc
jmp
xor
dec
movs
mov
and
bound
push
ds
icebp
sub
popa
xor
add
pop
push
pop
cmp
sbb
push
jmp
xchg
dec
inc
mov
test
aaa
sub
xor
(bad)
add
(bad)
(bad)
ins
cmc
jno
mov
es
dec
repnz
add
adc
push
test
mov
iret
adc
xchg
inc
pop
js
add
add
fidivr
xchg
ja
sbb
xchg
jle
mov
std
nop
lods
push
nop
cmp
lahf
test
pop
cwde
and
fs
mov
adc
rol
mov
call
xchg
cmp
push
shl
push
inc
ror
popa
clc
cld
and
enter
xchg
std
dec
jb
fwait
sbb
dec
jnp
imul
push
ss
shl
ret
cmc
cli
mov
push
pop
arpl
out
ja
movs
pop
shr
mov
(bad)
sub
sub
push
push
stos
lods
pop
pop
or
and
pusha
sub
mov
aaa
js
int
sub
inc
jo
pop
adc
mov
and
ins
xor
sbb
sub
pop
jmp
xor
mov
lods
sub
out
leave
lea
into
jl
scas
adc
mov
or
ins
sub
or
test
bound
and
jns
call
out
inc
xchg
xor
add
push
dec
inc
cwde
fs
push
mov
jnp
inc
adc
mov
mov
mov
repz
in
jnp
test
or
sbb
jnp
mov
(bad)
mov
cmc
sbb
mov
call
sar
mov
sbb
sti
scas
mov
call
mov
repnz
pop
mov
jbe
push
mov
push
cmp
outs
sbb
add
stos
jp
enter
jmp
mov
ret
mov
mov
(bad)
or
call
xor
hlt
dec
dec
xor
xor
mov
xchg
pop
pop
movmskps
cmps
mov
mov
rcr
pop
mov
jae
sbb
adc
clc
fs
(bad)
mov
fxch
fisubr
and
sti
loop
fcom
jbe
sub
out
sbb
cmps
mov
into
xor
xor
sbb
sbb
mov
or
pop
mov
repnz
inc
mov
aas
fcom
rcl
stos
inc
aam
outs
jge
sbb
stos
or
mov
fucomp
fcomp
mov
stc
inc
mov
cmp
sbb
dec
push
mov
dec
push
lds
mov
stos
test
jae
loop
cmp
fidivr
push
imul
fistp
sbb
jae
lock
and
and
or
pushf
pop
sub
pop
out
xor
movs
stos
iret
mov
ja
imul
mov
call
xchg
or
mov
jb
lds
or
pusha
fld
mov
mov
cmp
mov
pop
mov
ss
cmc
out
sub
mov
jo
sar
mov
push
test
xchg
xor
out
xchg
or
push
cmp
retf
arpl
pop
das
repz
pop
xchg
mov
jge
in
xchg
out
mov
cmc
cmp
ja
fild
cmp
movs
scas
fld
out
bound
xchg
xchg
xchg
pushf
movs
dec
loopne
mov
cmp
lods
dec
xor
ds
cmp
mov
and
pop
arpl
adc
call
(bad)
ja
push
sbb
push
mov
jmp
gs
(bad)
loop
adc
loopne
div
test
(bad)
fsubrp
push
ret
into
pop
ret
daa
fsubr
ds
lahf
imul
jae
pop
mov
aad
lods
pop
std
xchg
sub
sub
lock
rol
cli
mov
aas
das
push
retf
ss
mov
push
stos
cmp
and
jl
jbe
pop
jbe
lea
es
xchg
fidivr
(bad)
sub
push
movs
idiv
stc
jmp
push
inc
ins
pop
xor
mov
hlt
mov
sbb
ins
test
dec
out
stos
inc
jg
mov
imul
cmp
xor
jmp
out
jge
jb
(bad)
out
pop
mov
and
in
add
icebp
jle
gs
(bad)
mov
stos
(bad)
adc
popa
adc
outs
jae
sar
aas
pop
inc
mov
or
push
les
sub
ja
mov
fst
inc
xor
sar
mov
stos
jmp
mov
outs
sub
ins
push
fs
push
in
stc
push
leave
mov
scas
pop
mov
mov
mov
(bad)
mov
or
test
inc
mov
mov
scas
icebp
add
ja
push
test
es
aad
loopne
push
and
inc
add
icebp
push
dec
(bad)
add
iret
lea
fs
dec
dec
sbb
xchg
push
dec
clc
mov
adc
ins
sbb
adc
xor
enter
fwait
mov
pop
test
pop
lea
test
repnz
rcl
mov
or
jp
sbb
push
sub
add
scas
mov
push
xor
xor
popf
mov
xchg
into
hlt
jb
pop
push
sub
mov
into
xchg
(bad)
jo
iret
pop
sar
mov
test
(bad)
mov
fisttp
call
and
jns
pop
mov
push
xor
(bad)
sar
push
mov
test
int
add
jne
ficom
jno
gs
fiadd
xchg
jo
mov
mov
pop
mov
jge
push
or
movs
out
ss
push
sub
jne
imul
fs
aas
das
movs
xchg
cdq
push
jmp
out
leave
jno
mov
sar
xor
mov
dec
jp
aaa
ds
gs
add
xchg
ror
jl
mov
jo
(bad)
cmp
dec
shl
cmps
daa
dec
mov
popa
mov
rol
movs
aam
pop
jno
setno
lock
xchg
mov
hlt
fwait
push
call
inc
ins
mov
dec
enter
mov
loop
outs
stos
sub
in
(bad)
jmp
mov
sbb
imul
push
cmp
stos
and
mov
adc
ja
ins
dec
push
mov
repz
lahf
repz
xor
js
add
sti
jecxz
xor
sub
out
pop
inc
mov
repz
popf
shr
push
add
pop
mov
clc
cmp
push
dec
mov
ret
sti
or
cmp
push
inc
dec
mov
push
imul
add
stc
std
sbb
push
mov
aad
test
dec
das
push
ficom
xor
push
cvtps2pd
mov
mov
adc
rol
jl
aad
lea
fwait
cmp
popf
xchg
pop
jno
mov
and
pop
push
push
enter
repz
adc
aad
push
lea
cmp
dec
jge
loopne
stc
xor
jnp
aaa
pop
mov
imul
imul
test
and
loopne
lds
xor
ffree
xchg
test
cmp
cmp
pop
cmp
cmp
xor
cs
packssdw
adc
mov
call
xlat
pop
sbb
pop
and
or
and
shl
fsubr
pop
in
fcomi
mov
sub
xchg
adc
add
sub
xor
aaa
jmp
sub
dec
ds
pminub
inc
sti
lock
mov
ficom
inc
nop
cmp
int3
adc
ja
mov
add
lock
dec
push
or
mov
xchg
jge
add
dec
in
(bad)
add
push
mov
dec
mov
sub
ss
pop
jne
fcmovnu
push
sti
daa
jns
dec
retf
in
jns
add
or
or
int3
out
mov
into
add
jb
(bad)
hlt
je
ret
jmp
out
mov
jmp
jp
iret
jp
mov
jl
jle
test
test
adc
cs
xor
(bad)
repnz
cmp
push
ja
ins
int
mov
and
mov
mov
jge
inc
fs
imul
outs
ins
and
nop
xor
je
adc
fsubr
sbb
std
cmp
aas
outs
cmc
lahf
mov
std
xor
xchg
cmp
inc
inc
test
dec
xchg
retf
int
dec
fwait
arpl
jl
rcl
jmp
jne
pop
or
or
cmp
into
push
mov
pop
mov
fcomp
sub
adc
cs
js
mov
pop
jne
dec
and
mov
jl
daa
out
jo
pusha
jne
cmp
test
lods
cmp
mov
cmps
stc
fsubr
push
cwde
push
int3
mov
ins
xor
sahf
xchg
sub
rol
pop
out
(bad)
lods
cdq
fwait
(bad)
push
(bad)
out
xchg
(bad)
dec
push
mov
fistp
rol
cmp
or
test
jno
dec
loop
or
je
gs
sbb
and
daa
dec
mul
mov
sbb
imul
test
imul
ret
not
outs
push
mov
push
int3
call
cmp
inc
jnp
cs
(bad)
out
inc
add
push
mov
call
std
rcl
cs
mov
add
aas
mov
dec
ror
jmp
in
bound
jae
jp
cmp
pop
lods
test
jmp
pop
inc
xchg
adc
jge
push
mov
dec
int3
iret
scas
nop
je
push
xchg
pop
pop
icebp
(bad)
push
jbe
fdiv
jns
jns
dec
mov
retf
sbb
xor
mov
push
ins
xlat
mov
and
add
stc
xlat
xor
cli
cmps
mov
ss
dec
loopne
loopne
ss
push
scas
mov
cdq
push
lahf
push
mov
sbb
push
adc
mov
xor
jge
call
test
cs
inc
pusha
jmp
mov
and
shr
adc
shr
addr16
jmp
loop
push
mov
stc
cwde
sbb
lahf
sbb
mov
ret
xchg
cli
push
loop
mov
fchs
xor
stc
push
inc
add
inc
adc
(bad)
fstp
cmc
js
rcl
shl
add
or
fdivr
lea
out
ja
stos
cmp
fimul
dec
pop
dec
hlt
cmc
in
lds
adc
push
sub
outs
sbb
mov
push
mov
loopne
nop
push
fld
jbe
inc
retf
dec
cli
dec
inc
cmp
mov
jnp
jg
pop
imul
xchg
sar
pop
cdq
push
sub
sub
loop
aam
sub
cmc
jecxz
cmp
jb
cmp
(bad)
xchg
in
arpl
(bad)
test
and
ins
jmp
das
lss
test
ret
adc
cmp
sub
jmp
add
out
dec
dec
data16
into
or
sub
add
add
mov
lock
lods
lahf
cld
(bad)
mov
fldenv
jp
aad
adc
dec
mov
cmp
out
lods
xchg
bound
sbb
xchg
pop
int
stos
cli
loope
mov
scas
adc
in
and
cmps
add
xchg
sub
stos
mov
ss
mov
arpl
outs
xchg
jmp
adc
mov
jmp
scas
adc
inc
pop
hlt
test
daa
js
mov
jle
popf
fwait
mov
push
add
mov
idiv
jl
pop
dec
int
pop
xlat
int3
ror
ja
and
out
mov
popa
retf
idiv
add
mov
jle
jge
inc
(bad)
dec
add
(bad)
adc
sbb
push
jge
in
adc
jmp
xchg
aam
js
or
pop
stos
mov
sub
mov
xchg
fxch
push
js
neg
xor
sar
aas
pop
inc
jg
mov
ret
cld
mov
jo
dec
out
mov
jno
cmps
ss
mov
mov
or
ds
pusha
retf
out
push
sbb
xchg
cmps
pop
or
adc
sub
aas
mov
inc
xor
retf
mov
and
push
in
add
pop
mov
push
mov
jmp
xchg
scas
hlt
adc
je
arpl
aas
daa
fst
xor
das
mov
mov
add
mov
nop
ss
jmp
addr16
xor
jb
dec
adc
sar
sbb
fs
(bad)
or
sahf
mov
out
xlat
(bad)
mov
xchg
inc
ret
or
push
inc
jno
mov
jmp
out
fwait
adc
dec
sbb
in
shl
dec
dec
xchg
xchg
add
mov
add
inc
or
repz
xchg
bound
(bad)
cmp
imul
iret
sbb
dec
inc
pop
cld
add
std
aad
stc
(bad)
mov
and
icebp
cld
sbb
test
jle
(bad)
sub
and
inc
mov
push
mov
fidiv
or
sbb
push
inc
dec
ror
jmp
call
or
bound
pop
(bad)
inc
pop
push
jl
or
test
rcr
outs
retf
add
xchg
mov
in
out
dec
aam
sbb
inc
fist
sub
fwait
xchg
mov
jb
stc
aam
jns
mov
int3
push
pop
mov
sub
pop
cmc
sbb
enter
hlt
or
retf
js
dec
ret
shr
cld
jg
mov
aad
int3
loope
lods
and
sahf
inc
enter
lea
movs
scas
cmp
bound
sbb
mov
mov
jne
int3
inc
ins
enter
jae
cmps
mov
popf
(bad)
dec
stc
(bad)
ja
imul
mov
imul
or
ins
jg
mov
sar
mov
out
(bad)
loop
sub
aaa
lock
das
sub
fs
cwde
hlt
mov
fnstcw
retf
xchg
xlat
call
sbb
mov
addr16
jmp
xchg
cwde
in
aad
cmps
daa
ins
jmp
scas
(bad)
dec
adc
push
push
sub
or
inc
fdiv
xchg
sbb
cmp
std
or
mov
out
or
inc
mov
bound
aas
es
cmc
(bad)
retf
je
or
ja
bound
js
sub
cs
pusha
sub
cmc
inc
sar
push
mov
add
xchg
push
test
popa
in
out
dec
dec
dec
gs
jecxz
in
mov
in
jne
dec
dec
push
jge
xor
iret
cmps
dec
mov
loop
cmps
mov
jnp
scas
pop
cdq
fidiv
stos
(bad)
fnstsw
cmps
pop
jnp
outs
xchg
sbb
repz
mov
dec
mov
test
or
pop
ffree
jecxz
sbb
cmp
scas
inc
(bad)
jmp
jns
or
cmc
jno
sbb
pop
and
lahf
jbe
lods
addr16
push
loope
bnd
out
push
pop
int
lock
ret
mov
lods
lds
or
jl
pop
pop
jge
nop
or
push
lods
ins
xlat
sbb
aas
adc
in
fsub
push
pushf
xchg
(bad)
xor
aaa
adc
xlat
mov
sub
cdq
(bad)
ficomp
loopne
gs
xor
cld
fild
xchg
pop
adc
retf
sbb
cdq
fwait
in
pop
bound
pop
hlt
jg
push
(bad)
rcl
ret
sub
cdq
shr
pop
es
int
cmps
dec
mov
loope
mov
sbb
aas
int
xor
cmp
cwde
push
jge
mov
dec
and
mov
xchg
jae
popa
push
push
push
mov
lods
cmps
enter
mov
push
sbb
xchg
mov
pop
imul
push
test
xchg
mov
out
(bad)
ins
movs
jmp
dec
mov
cmp
shr
inc
outs
jmp
dec
push
iret
test
adc
stos
sbb
lock
and
movs
out
xchg
rcl
inc
cmp
sub
sti
adc
cwde
test
mov
pop
push
fist
xchg
or
aam
mov
add
cwde
jle
retf
ins
adc
adc
xor
sub
sbb
(bad)
cmp
jb
cmp
cmp
and
cmc
pop
inc
stc
mov
mov
jmp
loop
repz
fbstp
mov
aaa
sub
ja
jns
sbb
lock
leave
popf
and
mov
shl
je
or
mov
xchg
popa
dec
jno
pop
or
shl
aas
pop
pop
or
xor
ret
dec
int3
jno
outs
add
fstp
lods
cmp
mov
mov
sbb
stos
popf
lock
out
cld
push
stos
mov
popa
es
or
and
shl
leave
pop
mov
loopne
dec
enter
jl
(bad)
push
mov
push
sub
out
or
mov
rcl
sbb
xor
mov
jmp
add
es
daa
inc
dec
bound
mov
test
sub
movs
xor
xor
pop
and
adc
fist
fadd
sbb
pop
push
sub
lahf
iret
test
pop
addr16
aaa
inc
cmp
jns
cmp
fisttp
shl
lock
cmps
aas
add
clc
xchg
pop
add
sbb
sub
mov
bound
mov
ins
mov
clc
mov
mov
sahf
bound
push
and
pusha
pop
push
push
ja
leave
test
push
jmp
scas
test
rcr
push
xor
jle
jmp
xor
inc
repnz
push
xlat
jmp
out
in
fwait
cmp
(bad)
dec
scas
or
cmps
push
(bad)
retf
cmp
push
sbb
add
cmps
rcl
mov
push
pop
retf
dec
(bad)
retf
adc
test
pop
cmp
(bad)
out
es
test
and
(bad)
cmp
ins
(bad)
adc
stos
stos
fnstsw
sbb
or
sbb
dec
pop
dec
jmp
sbb
popf
scas
lahf
push
fdivr
sbb
addr16
aad
or
mov
push
adc
jge
dec
jae
jmp
sbb
cmp
(bad)
cli
push
lock
push
idiv
and
nop
and
aam
(bad)
cmc
mov
push
fnop
sahf
fisubr
push
cdq
mov
rol
or
jb
out
mov
sbb
dec
in
mov
mov
xor
lds
leave
test
movs
je
jmp
ror
mov
inc
push
loope
imul
retf
jge
inc
lods
xchg
dec
push
fldcw
stc
adc
loop
pusha
inc
ret
dec
scas
lods
dec
sub
jmp
xchg
clc
or
xor
mov
adc
add
int
outs
neg
cdq
sub
gs
gs
mov
mov
out
jmp
lods
outs
sub
push
movs
pop
push
outs
xchg
sub
or
stc
jmp
xor
mov
and
pusha
call
xchg
enter
je
retf
adc
jp
adc
inc
cmps
outs
push
les
xchg
fwait
outs
jp
outs
mov
sub
mov
sar
and
mov
mov
push
jno
dec
in
mov
cmp
test
cmp
hlt
dec
or
pop
mov
imul
loope
push
retf
mov
icebp
pushf
xchg
xor
push
(bad)
shl
jge
add
imul
loopne
nop
xchg
push
add
sub
das
mov
cmp
(bad)
cmps
mov
jnp
(bad)
jns
popa
sbb
neg
rcl
lock
rcl
or
fist
jmp
dec
xchg
div
pusha
sub
push
out
mov
data16
out
and
jge
mov
mov
repz
jl
cwde
mov
mov
out
adc
adc
lock
xchg
mov
dec
std
rcr
lahf
sahf
pop
mov
daa
xchg
fsubr
xchg
push
loopne
cmp
or
dec
out
outs
xchg
ret
aaa
scas
xor
inc
nop
fprem
xchg
push
mov
retf
pop
les
mov
add
ror
or
scas
dec
cmp
sbb
arpl
jb
pop
push
cmp
aam
scas
ror
sbb
es
fs
or
inc
arpl
fidivr
mov
loopne
(bad)
inc
adc
je
ds
test
pop
dec
dec
mov
out
cld
inc
pop
retf
int3
retf
aaa
and
fs
cmc
jbe
cs
out
dec
fdiv
sub
dec
mov
mov
jo
mov
pop
jne
add
mov
mov
rcr
push
int
rol
xchg
push
cmp
pop
xchg
xchg
rcl
addr16
stos
fiadd
mov
push
mov
add
and
jae
mov
rol
jmp
retf
inc
mov
pop
imul
aad
jbe
adc
retf
cmps
data16
fbstp
cs
push
and
pop
adc
sti
inc
mov
ficom
neg
ret
mov
in
mov
jno
jge
push
cs
int
ins
sbb
xlat
pop
(bad)
cmp
push
add
mov
pop
push
dec
mov
push
inc
imul
xchg
jle
pop
jecxz
ins
aas
test
ss
movs
lods
jo
mov
push
pop
xchg
xlat
mov
push
jb
sbb
fcomp
fld
popf
push
daa
inc
outs
push
lods
out
retf
enter
mov
aad
mov
mov
mov
or
inc
fcomp
(bad)
popa
push
mov
xor
loop
jl
aaa
xor
ja
mov
enter
cmps
and
stos
xor
pop
mov
add
ja
icebp
scas
lahf
popf
sub
jp
mov
sbb
xchg
or
iret
cmps
xchg
aad
mov
push
mov
imul
repz
inc
in
and
mov
or
or
or
popf
fisub
sub
mov
rcl
jle
call
data16
cmps
in
cmp
ret
xor
dec
psubsb
sbb
jecxz
out
sar
mov
pop
rol
add
(bad)
(bad)
out
mov
dec
(bad)
out
and
fsub
sub
pop
gs
mov
std
adc
xchg
sbb
sub
mov
mov
mov
aad
cmps
fimul
jne
test
add
loope
(bad)
or
pop
push
mov
dec
or
in
ds
mov
mov
je
cmp
xchg
mov
fist
add
rol
push
dec
mov
jl
mov
mov
cmp
cmp
jecxz
add
dec
or
gs
jmp
pop
mov
dec
mov
pushf
les
test
and
inc
add
pop
push
and
mov
shr
int
aas
movs
cmp
jb
sbb
movs
sbb
or
mov
jmp
rcl
enter
mov
sbb
retf
aaa
push
(bad)
mov
xchg
ins
xor
ret
call
pop
xchg
xchg
addr16
sbb
pxor
scas
mov
gs
aam
fwait
in
mov
push
pop
aam
jge
mov
fwait
clc
in
sub
jns
daa
xchg
jg
sti
adc
jecxz
pop
jno
cmp
mov
stc
or
pop
mov
sbb
test
xchg
pop
lock
das
mov
bound
in
xchg
daa
mov
les
ficom
fadd
das
out
sbb
ret
xor
enter
retf
jecxz
push
cmp
not
sub
push
data16
test
(bad)
fisttp
inc
(bad)
mov
dec
cli
push
sub
pop
ret
iret
arpl
lahf
clc
popa
push
call
retf
fiadd
shr
xor
rcl
out
cmps
aaa
aaa
jl
jnp
push
and
sbb
cmp
pop
rcr
fadd
mov
sbb
ss
xchg
test
jl
pop
jb
aad
dec
int3
mov
and
jnp
in
or
dec
xor
fdiv
scas
and
mov
cmp
or
es
ficom
and
mov
das
sahf
push
fdivr
push
cmps
(bad)
push
dec
push
xor
or
out
sbb
cmp
retf
ss
movq
adc
push
xor
scas
mov
stc
push
clc
jmp
or
cmp
out
pop
xchg
into
movs
add
push
test
jl
xsha256
cmps
xchg
jno
mov
xlat
sbb
sub
mov
shl
js
fistp
scas
into
xchg
xchg
jb
not
pop
xchg
retf
mov
jnp
scas
test
xchg
test
test
rol
sbb
pop
xchg
shl
cmp
push
or
fimul
jo
call
mov
pop
push
pop
cmps
pop
ss
cs
cs
repnz
out
pop
sub
cmp
fcomp
jmp
mov
in
or
jp
mov
push
out
dec
shr
pop
call
sbb
out
fild
movs
fimul
xor
add
aas
push
mov
inc
pop
mov
fisttp
xor
js
movs
rcl
adc
mov
test
push
adc
jb
repz
cld
int3
jb
pop
mov
popa
mov
add
adc
xor
jae
mov
jnp
inc
jge
sub
inc
adc
pop
push
xor
mov
fst
or
mov
bswap
sub
mov
add
popa
mov
cs
add
ds
add
es
ret
sbb
fistp
push
sbb
push
adc
fsub
shr
repnz
loope
inc
das
or
xchg
pop
mov
and
aaa
stos
jae
js
jg
xchg
pusha
push
jno
jmp
or
push
fisubr
lock
xor
in
mov
lds
aam
out
inc
mov
(bad)
mov
lods
push
jae
dec
nop
jbe
mov
push
push
or
jmp
sbb
cmp
loop
je
inc
jnp
pop
iret
add
pop
ins
jno
xor
mov
push
push
and
mov
dec
pop
mov
sub
cmp
ss
ret
jb
mov
cwde
fstp
je
ins
sbb
mov
jae
jae
fwait
sbb
mov
push
mov
mov
sbb
mov
loope
in
das
jnp
mov
dec
(bad)
aad
sbb
(bad)
dec
fild
push
push
gs
int3
(bad)
dec
inc
inc
mov
mov
(bad)
int3
dec
sbb
ret
in
pop
mov
or
pop
aam
in
arpl
adc
out
test
jge
repz
retf
mov
(bad)
dec
push
sar
mov
xor
les
inc
xchg
fdiv
xchg
mov
call
push
xchg
stos
or
mov
fdiv
adc
push
out
les
xor
pop
ret
or
jp
push
dec
int3
out
push
movs
pop
pop
scas
out
sti
repnz
aas
call
pop
push
ret
jbe
and
inc
pop
ds
mov
popa
es
loop
je
(bad)
(bad)
rcr
jp
(bad)
cmp
hlt
scas
cmp
scas
push
lea
sub
mov
mov
lods
ins
jae
push
jo
(bad)
aad
div
and
pop
sub
pop
jne
jo
cmp
push
lahf
sbb
pop
mul
ret
jmp
inc
loope
pusha
and
fst
mov
ret
dec
mov
je
sbb
test
cmp
dec
jmp
repnz
loop
xchg
cmp
push
aaa
add
jnp
loope
push
sub
jg
call
cmp
xor
push
adc
mov
ins
adc
mov
cmp
out
mov
fs
imul
xchg
sbb
movs
dec
jno
mov
or
ret
mov
stos
imul
pop
xor
pop
xor
test
dec
mov
jmp
xchg
shr
mov
mov
adc
aad
jne
das
xchg
imul
cmc
(bad)
jo
push
idiv
scas
cld
leave
xor
push
mov
and
cmps
xor
inc
inc
cld
das
int3
int3
cmp
or
test
dec
inc
ret
addr16
inc
jnp
mov
lea
mov
mov
add
dec
xlat
and
push
cmps
movs
mov
xor
add
dec
pusha
xchg
xchg
ror
sub
movs
sbb
or
int3
and
cmps
repz
cdq
ja
aaa
daa
lods
out
sub
jb
in
add
push
push
out
push
mul
adc
lahf
and
mov
out
adc
adc
call
cmp
mov
jb
scas
mov
mov
(bad)
(bad)
sub
lea
inc
enter
pop
sar
outs
jns
adc
ins
ror
mov
pop
sub
dec
das
inc
cmps
or
icebp
and
bound
in
or
push
pandn
(bad)
sbb
call
pusha
mov
sub
iret
test
ret
scas
mov
movs
pop
fimul
xchg
clc
aaa
popf
mov
adc
jbe
daa
nop
adc
mov
xchg
into
in
jns
lods
aam
sbb
ror
or
imul
add
hlt
popa
add
mov
aaa
sahf
sahf
add
sub
repz
cmp
mov
aas
lea
dec
xchg
sbb
pop
or
out
bound
mov
xlat
pop
pop
lods
cmp
dec
cmc
inc
arpl
push
data16
cmp
mov
out
pusha
jecxz
adc
cmc
push
inc
push
sbb
out
cwde
or
aam
loop
cli
dec
inc
push
or
fcomi
push
fwait
loope
lahf
xchg
add
jle
mov
mov
fild
loopne
mov
es
inc
dec
(bad)
in
in
dec
dec
test
add
sub
xor
push
lahf
rcl
lods
inc
fs
mov
pop
iret
test
mov
push
push
cmp
mov
mov
out
and
push
adc
ins
dec
inc
xchg
jle
or
int3
push
adc
imul
out
cli
sar
inc
mov
jmp
mul
movs
push
out
mov
xchg
repz
loop
xor
outs
jle
sub
cmp
mov
imul
sti
push
push
cmp
dec
push
pop
xchg
sub
mov
test
js
or
daa
inc
fbstp
movs
cmp
ds
jmp
pop
add
data16
add
adc
push
jae
mov
add
sub
xchg
imul
mov
jno
(bad)
and
xlat
push
push
pop
push
pusha
imul
jecxz
add
adc
stos
and
xchg
cld
push
pushf
adc
push
push
dec
popa
test
ins
(bad)
add
jae
xchg
enter
push
cmp
nop
mov
or
call
inc
lods
iret
mov
xor
fild
repz
enter
imul
cmp
adc
xlat
hlt
ret
xchg
sti
es
jg
sub
jb
out
dec
pop
sub
jo
test
repz
add
lock
mov
outs
loopne
add
loopne
xor
ror
ja
adc
pusha
popf
cmp
mov
idiv
cmp
ins
adc
rcl
mov
repnz
scas
cmp
mov
jns
into
jmp
jge
pop
loop
aas
das
adc
sbb
pop
enter
fs
mov
pop
imul
inc
arpl
hlt
xchg
int3
shr
out
aas
stc
aam
jae
fwait
mov
dec
or
test
xchg
test
rcl
inc
aaa
xor
pop
xor
jmp
or
xchg
rcr
jge
push
push
sub
icebp
lods
lods
ins
fldz
shl
ds
cmps
or
cwde
or
dec
jo
fiadd
(bad)
sti
loope
sbb
mov
and
out
xchg
dec
dec
adc
sbb
pushf
mov
mov
stos
out
sbb
aaa
sbb
mov
stc
pop
and
push
icebp
in
jle
hlt
mov
call
push
mov
ss
jns
add
push
pop
pop
arpl
aaa
or
push
inc
mov
add
and
and
xchg
xchg
imul
mov
sti
rol
sti
dec
push
call
mov
mov
js
add
mov
jp
mov
mov
xor
cmps
cld
sbb
fidivr
cmp
in
jg
lahf
test
ins
mov
jp
mov
aam
dec
or
sti
aaa
ss
mov
call
push
in
or
arpl
pushf
pop
mov
xlat
mov
test
dec
pop
movs
icebp
mov
xchg
jns
adc
test
dec
sbb
jb
test
sbb
mov
lock
pop
xchg
add
enter
ja
pop
idiv
mov
arpl
and
cmp
retf
inc
mov
inc
sar
dec
mov
push
(bad)
shl
push
cmps
repz
xor
mov
xchg
hlt
outs
rep
cmp
jecxz
add
nop
cwde
mov
mov
push
xor
or
inc
adc
adc
jecxz
and
ss
out
ja
fdiv
cmp
dec
cmc
mov
mov
dec
cdq
call
xor
ins
add
adc
inc
rcl
jo
mov
cmp
leave
fidivr
mov
std
retf
mov
rol
outs
push
call
retf
mov
call
inc
movs
popf
les
arpl
sbb
push
fcomp
mov
mov
cmp
sub
mov
dec
add
stc
imul
xor
or
sar
call
lahf
aaa
arpl
js
scas
cmp
cmp
mov
push
xor
inc
test
mov
and
inc
sbb
test
pop
jecxz
(bad)
pop
mov
adc
mov
inc
movs
push
mov
fstp
out
mov
mov
mov
jae
or
fcmovu
lods
or
xlat
fmul
push
cmp
xlat
xchg
stos
jne
xor
rcl
sub
dec
scas
pop
mov
aaa
cwde
fild
or
jge
sub
xchg
into
push
add
xor
icebp
and
cmps
cmp
jae
ss
nop
movs
and
mov
in
popf
sti
into
es
jp
ffree
mov
gs
leave
jmp
xor
mov
mov
dec
sti
jns
inc
repz
xchg
inc
mov
(bad)
adc
xor
mov
or
movs
pop
push
dec
lea
xor
(bad)
pop
adc
or
mov
ja
imul
jo
das
ins
mov
imul
mov
stos
neg
pop
inc
rcl
mov
inc
stos
xchg
ja
aaa
sub
xchg
neg
xor
xor
dec
push
push
jae
fstp
push
lahf
cs
xor
fwait
aaa
scas
xchg
dec
cli
pusha
retf
into
pop
outs
fist
xor
loop
(bad)
rol
jecxz
(bad)
enter
jno
mov
sahf
jecxz
(bad)
(bad)
cwde
sub
scas
dec
adc
jp
xchg
mov
xor
aaa
add
mov
adc
mov
adc
ja
ror
jo
xor
sub
add
into
(bad)
mov
xchg
xchg
(bad)
jb
cmp
pop
rol
xchg
icebp
push
xchg
adc
push
mov
sbb
inc
fcomip
cmps
in
mov
jmp
pop
int
sub
int3
sub
addr16
leave
cmc
lahf
pop
fistp
jo
pop
add
jge
and
sbb
jecxz
mov
mov
pop
jb
js
popa
aas
adc
test
movs
mov
stc
push
test
jno
dec
sti
fiadd
push
pop
dec
dec
imul
pushf
jge
pop
movs
mov
mov
cld
sbb
stos
test
nop
cmp
jbe
popf
outs
repnz
jmp
mov
iret
jae
jge
jne
mov
xor
into
fld
dec
add
sbb
lds
fs
ja
ror
jmp
(bad)
popa
pop
test
cmp
or
std
adc
push
repnz
cmp
jne
jnp
xchg
sbb
ret
mov
fsub
xchg
jne
pop
mov
fs
sbb
pop
mov
pop
std
jp
xchg
push
sti
div
xor
sbb
push
jecxz
stc
push
fstp
dec
xchg
jmp
or
dec
cmp
cmp
pop
and
cld
push
fcom
adc
jmp
inc
jg
jb
pop
xor
mov
xlat
and
jg
and
popf
xchg
mov
aas
xchg
mov
xchg
cmp
cmp
add
mov
pop
ret
lods
xchg
mov
jne
xchg
add
sub
stos
mov
mov
jecxz
cmps
mov
sub
pop
inc
xchg
mov
ins
mov
neg
add
lods
cmps
mov
pop
cmp
rcr
cmp
adc
and
clc
and
and
inc
dec
dec
loop
(bad)
xor
test
jnp
adc
sbb
movs
inc
stc
adc
or
loopne
add
pop
xchg
popa
fidivr
jmp
outs
xchg
shl
dec
iret
ret
lea
mov
test
int
xchg
int
dec
mov
shl
xor
sub
rcr
out
mov
pusha
lods
sbb
gs
stos
sub
rol
call
arpl
dec
ret
sub
(bad)
or
ds
repnz
sbb
mov
stos
frstor
mov
fdiv
mov
dec
test
or
ror
sub
or
jnp
pop
int
fstp
aaa
adc
in
mov
or
pusha
repnz
dec
jl
add
je
iret
jnp
es
push
pushf
out
(bad)
hlt
or
addr16
adc
cmp
ret
inc
aas
lods
pop
pop
pop
mov
xor
je
sahf
push
mov
or
xor
repz
jne
cmc
xchg
gs
call
ror
jg
xchg
xor
icebp
loopne
inc
test
nop
mov
out
retf
movs
cmp
jecxz
xor
clc
cmp
pop
pop
stos
push
mov
push
jbe
loopne
pop
shl
xchg
mov
shl
in
add
mov
and
repz
jne
(bad)
out
cli
das
sahf
sbb
pop
adc
popa
in
inc
vpaddq
cmp
cmc
jmp
push
stos
xchg
cmp
pusha
fistp
popa
push
sub
add
les
xor
xlat
push
sbb
xor
jo
jmp
aas
jo
push
pusha
call
cwde
test
scas
xchg
fdiv
xchg
(bad)
(bad)
cmps
out
and
push
jmp
cmp
retf
aaa
xchg
mov
(bad)
jmp
pop
pop
adc
(bad)
or
mov
std
push
or
push
cmc
xor
or
mov
icebp
in
sbb
loope
lods
into
mov
stos
xor
stc
mov
push
cs
bound
jecxz
mov
push
xchg
adc
pop
cmps
push
pop
and
push
pop
pop
rcl
outs
sahf
dec
dec
push
fwait
pop
or
mov
lock
xchg
adc
and
cmc
cwde
int
mov
or
push
aaa
xlat
(bad)
cmps
loop
ins
mov
neg
cdq
jg
push
lods
ret
inc
cs
aas
pop
jg
and
push
fadd
stc
test
aad
adc
(bad)
mov
mov
aam
xchg
mov
loopne
or
cmps
xchg
xchg
outs
xor
aaa
lock
out
xor
xor
mov
(bad)
aaa
xchg
push
shl
lock
stos
aaa
or
add
out
mov
push
fisttp
arpl
sub
mov
xchg
cmp
test
inc
xchg
aad
push
or
adc
pusha
into
inc
push
mov
ret
cmc
adc
xor
mov
icebp
jo
loope
movs
push
iret
test
mov
out
and
dec
pushf
sbb
inc
pushf
outs
cmp
leave
popf
aam
mul
in
jae
push
or
lods
sbb
sar
lds
shl
and
and
je
sar
mov
push
fadd
dec
xor
ror
retf
push
mov
push
ror
add
xor
sub
retf
mov
adc
je
xchg
lock
or
aas
xor
jb
xchg
mov
movs
sub
xor
adc
or
xchg
into
fs
daa
iret
inc
xchg
ficomp
inc
inc
js
mov
retf
ins
jne
popf
inc
push
or
lock
jg
add
inc
jno
sbb
shr
adc
bound
and
jg
xchg
test
jnp
add
jecxz
add
int
out
push
mov
repz
adc
adc
mov
fisttp
sub
jns
jecxz
sub
push
leave
mov
xor
(bad)
push
inc
out
xchg
adc
out
and
outs
(bad)
loope
cmp
retf
adc
jnp
pushw
xchg
xor
lock
add
and
add
mov
out
mov
cs
cmc
pop
jo
xor
cli
push
jmp
fcomp
dec
sub
out
push
jmp
ror
pop
test
xor
push
dec
push
movs
ret
imul
daa
das
fsubr
add
cli
pop
cmovns
sub
jo
hlt
jne
and
push
push
push
add
mov
pop
or
fist
fst
movs
adc
test
dec
(bad)
adc
jo
movs
popf
mov
cmp
out
mov
add
xor
mov
es
repz
loop
test
mov
aaa
test
or
jnp
pop
mov
cdq
daa
add
push
int3
es
cmp
pusha
bnd
cmc
arpl
xor
test
rcr
int
adc
or
retf
xor
test
push
xor
mov
stc
ins
mov
(bad)
stc
in
jo
das
out
test
dec
test
sub
jnp
gs
frstor
test
xchg
or
dec
mov
xchg
in
jne
adc
mov
(bad)
fnsave
das
jb
dec
cmps
mov
fs
cdq
or
(bad)
cmp
es
fld
finit
xor
pop
and
and
mov
and
rcr
std
xchg
or
(bad)
repz
in
aaa
xchg
mov
lods
addr16
cwde
and
sub
sub
pop
loopne
daa
ret
aam
xor
or
mov
xchg
into
aaa
call
iret
sbb
or
into
lea
rcl
out
push
je
lods
mov
ret
mov
xor
pusha
aas
jecxz
push
jns
js
pop
adc
mov
scas
xchg
xor
leave
popa
iret
jmp
ins
push
into
out
pop
fistp
mov
push
jbe
loopne
fnstsw
jo
loop
jns
xchg
shl
mov
dec
pop
mov
sbb
or
jmp
inc
jmp
mov
bound
imul
aam
pop
lds
(bad)
fldln2
sti
mov
xchg
dec
enter
loope
ficom
push
pusha
mov
push
aam
clc
mov
(bad)
stos
xchg
addr16
jl
sti
or
js
push
shl
mul
adc
movs
xchg
push
sub
scas
add
scas
mov
xchg
mov
dec
cmc
lea
jo
cld
jmp
rol
jmp
mov
cwde
shr
dec
div
js
ja
test
mov
cmps
add
cmc
xlat
iret
lods
outs
loopne
clc
call
bound
cmp
sub
mov
cmp
iret
xor
ret
cmp
clc
sbb
cmp
mov
and
sbb
inc
ret
iret
push
mov
fldcw
fdivr
xor
retf
lds
call
inc
mov
push
add
mov
sub
inc
scas
lea
into
ror
mov
mov
outs
sub
cmps
daa
loope
xor
repz
imul
push
(bad)
movs
(bad)
or
push
aaa
into
aam
(bad)
pushf
scas
lock
lock
pushf
adc
(bad)
cmp
(bad)
ja
imul
jmp
add
out
xchg
(bad)
xlat
mov
mov
fs
jmp
sbb
mov
cwde
jmp
stos
mov
pop
cwde
add
cdq
mov
mov
jns
xor
test
iret
jb
dec
sub
jmp
clc
xchg
shl
test
outs
adc
mov
jne
push
icebp
call
mov
inc
push
cs
mov
xlat
mov
xchg
push
fdiv
std
(bad)
dec
adc
xchg
loope
loope
push
int3
lods
add
mov
aaa
ror
jo
add
xchg
pusha
cmp
scas
call
je
dec
dec
inc
test
mov
ins
dec
fucomi
dec
ja
test
inc
cdq
repnz
cmp
mov
inc
cmp
xchg
jmp
outs
sbb
lods
sub
jmp
push
ja
dec
mov
xor
cmps
hlt
test
mov
push
cmp
lds
div
push
xchg
jp
dec
sub
adc
ret
sbb
cs
lods
and
push
push
mov
aam
fs
inc
push
ficomp
ins
xchg
push
aas
or
and
daa
jno
imul
push
int3
xor
mov
push
inc
das
fisub
nop
cmp
rol
movs
sbb
push
leave
imul
jmp
mov
sbb
push
aam
(bad)
mov
stos
pop
lods
into
cdq
fadd
ret
inc
ret
sub
shr
mov
sub
adc
mov
es
leave
sub
stos
push
sti
(bad)
in
xor
adc
cmp
adc
int3
pop
xlat
adc
jno
jle
add
aam
imul
stos
(bad)
movs
pop
clc
sbb
ret
push
cmp
rcr
loop
lahf
mov
adc
jnp
push
lock
inc
fist
movs
mov
adc
or
icebp
xchg
jno
push
not
fcomp
mov
repz
ins
call
and
out
outs
sbb
nop
rcr
jno
sbb
xchg
addr16
mov
cmps
lds
aas
sbb
pushf
mov
nop
sbb
test
xor
outs
adc
shr
xchg
and
loope
ss
mov
cs
adc
lahf
pop
push
ss
fbstp
pop
xchg
jne
inc
ror
mov
dec
jp
(bad)
js
dec
and
pusha
sub
call
or
sub
mov
jl
jb
jns
push
arpl
add
test
add
outs
into
test
add
iret
addr16
mov
stos
or
push
sub
jg
nop
gs
inc
sub
xchg
add
or
icebp
cmp
ds
js
cmp
outs
stos
pop
push
pop
cmp
daa
mov
xor
push
out
es
push
mov
mov
mov
add
adc
add
mov
pop
sub
add
dec
loopne
inc
das
add
xchg
into
inc
pop
mov
jbe
jns
rol
sbb
pop
inc
lods
nop
adc
mov
add
fsubr
xchg
(bad)
cmp
and
bound
cmps
fist
cmp
jnp
xor
inc
or
sti
push
outs
sub
sub
jle
test
loope
sbb
add
mov
clc
in
inc
and
jne
cmp
mov
stos
mov
sub
jg
inc
loopne
ror
repnz
or
aad
fwait
jge
movs
add
in
sbb
sbb
mov
add
jle
sub
add
in
xlat
outs
cwde
jecxz
push
push
or
pop
or
mov
stc
pop
cmc
add
aas
jo
push
inc
(bad)
xchg
pop
or
pop
sbb
sbb
and
imul
lods
and
icebp
mov
std
iret
idiv
in
sbb
stc
push
sub
cmp
sahf
push
rcl
pushf
out
mov
ret
mov
popf
inc
arpl
ret
loop
imul
sub
mov
mov
jge
xchg
mov
pop
addr16
jle
cmp
add
pop
fstp
sub
int3
dec
dec
sbb
shr
lock
popa
into
(bad)
bound
mov
sbb
inc
push
out
popa
loop
stos
xchg
sahf
push
aaa
dec
js
lds
push
leave
and
adc
ret
push
dec
jl
or
dec
pop
daa
mov
fistp
xchg
mov
xchg
and
xchg
hlt
and
ds
xchg
(bad)
rol
aam
dec
movs
movs
push
xor
bound
lea
inc
and
in
xchg
loope
xchg
cli
and
push
test
jmp
ficomp
jo
jae
cmc
mov
mov
stos
adc
cwde
stos
dec
movs
cmp
ins
mov
retf
mov
outs
(bad)
fst
je
mov
(bad)
sar
push
dec
stos
sub
fimul
ds
popa
jo
mov
cmp
xor
and
pop
xchg
xchg
sbb
sbb
jle
push
call
mov
push
out
ds
dec
imul
pop
mov
ret
movs
lahf
std
jno
pop
fs
pop
js
mov
pop
mov
mov
add
popa
shl
in
retf
xchg
pop
ret
mov
mov
xchg
sbb
ins
jp
push
dec
int3
push
movs
movs
fist
xchg
or
xchg
sbb
fwait
pop
push
or
clc
jno
ds
sbb
nop
ja
inc
jl
pop
dec
stos
add
lea
movs
or
cmp
inc
mov
mov
out
lahf
lds
xor
rcr
or
add
jb
sbb
imul
sbb
dec
jmp
(bad)
cmp
cmp
lods
sub
clc
movs
push
es
ins
jbe
out
push
push
cmp
push
sub
aam
cmps
mov
daa
xchg
push
mov
cmp
sbb
pop
std
sub
or
out
daa
sbb
push
sbb
adc
push
clc
movs
mov
cmps
loopne
mov
adc
cmps
dec
dec
mov
cld
mov
addr16
xchg
mov
adc
xor
aad
pop
loopne
mov
jb
dec
nop
adc
(bad)
fdiv
xchg
fistp
xchg
mov
jbe
mov
rcl
add
daa
mov
pop
sbb
shr
add
test
(bad)
xor
retf
mov
movs
mov
in
mov
dec
aad
cmps
inc
dec
sti
push
mov
adc
pushaw
mov
add
scas
jle
lods
aam
mov
jbe
inc
bound
cmps
push
xchg
loope
sbb
cmp
stc
mov
lahf
jg
mov
das
adc
ins
mov
cmp
jmp
fwait
mov
jne
push
jecxz
xchg
into
test
mov
sub
aad
cmc
mov
mov
xchg
popf
out
or
scas
in
xor
test
adc
mov
nop
xor
out
test
repnz
jo
imul
pop
mov
mov
mov
hlt
into
mov
pop
pop
mov
sub
lock
xchg
mov
jl
hlt
push
hlt
out
mov
les
jb
push
mov
push
js
out
idiv
ficomp
pop
mov
dec
jns
cdq
lods
inc
mov
popa
idiv
stos
fmul
mov
loope
ds
xor
push
addr16
rcl
and
pop
mov
and
mov
shl
xlat
cld
xchg
out
inc
xchg
repz
and
mov
dec
test
arpl
fisttp
retf
xor
aad
inc
popa
repnz
dec
push
mov
stc
std
lods
loope
jle
arpl
cmp
leave
mov
aam
fwait
push
je
jecxz
sub
sahf
adc
movs
daa
jnp
test
loope
imul
or
iret
pop
mov
shl
sahf
out
(bad)
jle
retf
mov
rol
or
sbb
or
xchg
call
push
mov
push
cmp
mov
inc
xchg
not
push
and
fwait
ins
xchg
and
stos
sbb
dec
dec
xor
je
std
cmp
rcl
call
sub
aam
jle
or
push
cli
pop
ins
sub
lods
sub
cmp
mov
xchg
jbe
lods
sbb
mov
mov
icebp
or
mov
jbe
leave
in
or
fwait
xchg
jbe
cmp
pop
fnstcw
bound
dec
js
adc
jne
enter
adc
in
sahf
sub
push
inc
ins
int
mov
cmp
(bad)
sti
jo
scas
sub
repnz
dec
cdq
out
push
mov
fistp
cwde
and
xlat
push
repz
ss
dec
sti
scas
retf
xchg
jae
fsubr
inc
std
sub
mov
mov
aaa
popa
xchg
rep
rcl
jmp
mov
fidiv
add
mov
add
pop
pop
xlat
dec
pop
jge
inc
cmp
call
pop
dec
xchg
inc
call
out
adc
mov
cli
adc
int3
mov
stos
cmp
adc
mov
int3
mov
mov
call
sub
mov
adc
xor
cmp
stos
pop
or
mov
and
daa
xor
mov
jmp
outs
lods
xchg
shr
mov
and
retf
xchg
push
retf
push
or
and
int
(bad)
outs
xor
scas
fistp
rol
inc
fidivr
jl
and
dec
jmp
adc
or
adc
pop
(bad)
xchg
inc
lock
(bad)
fstp
mov
or
or
fcom
hlt
mov
add
dec
pop
sbb
ss
rcr
sbb
dec
cli
sbb
or
add
mov
repnz
xchg
sbb
cwde
out
inc
sub
icebp
mov
jae
movlps
push
push
in
push
repnz
and
cmp
(bad)
ror
sub
and
cmp
xlat
dec
jp
xor
inc
call
and
(bad)
mov
stc
in
iret
pop
mov
(bad)
mov
xor
and
mov
push
jg
and
fwait
inc
and
xchg
sub
outs
test
mov
push
jns
arpl
loopne
fs
retf
sar
not
call
mov
(bad)
loopne
cmp
nop
add
pop
dec
mov
out
fild
mov
cmp
(bad)
out
xchg
fidivr
fisubr
xchg
shl
jb
dec
das
mov
fwait
pusha
pop
shl
rol
out
call
or
not
in
push
stos
mov
repz
fsubrp
(bad)
call
and
repz
and
je
xchg
js
jnp
imul
dec
xchg
imul
mov
retf
ins
sub
cs
out
repz
pop
fs
ret
add
in
lahf
fst
push
dec
fistp
pop
jle
(bad)
sbb
pusha
sti
inc
ret
cld
or
test
idiv
into
mov
xor
imul
test
lods
cmp
inc
js
dec
xor
or
lahf
jae
and
push
fwait
cmp
add
push
add
and
loope
jns
jmp
dec
jmp
ret
aad
stc
outs
(bad)
pop
clc
jecxz
push
dec
sbb
pop
cmp
dec
fs
leave
pop
xor
fdiv
daa
or
cs
xor
mov
xchg
mov
sub
xor
pop
mov
mov
mov
inc
aam
jbe
out
in
gs
sbb
pop
dec
(bad)
or
test
add
xchg
adc
sbb
push
adc
pop
(bad)
xlat
imul
out
pop
cmp
xchg
call
movs
mov
cmp
sub
mov
arpl
(bad)
and
push
fdiv
sbb
das
push
imul
xor
mov
in
cmp
loop
dec
pop
mov
xor
in
adc
arpl
mov
pop
jp
add
fldenv
(bad)
sub
jnp
dec
mul
cmps
push
and
cmp
xchg
(bad)
mul
fld
rcr
lods
push
add
sbb
stc
mov
adc
jno
loopne
cmp
jne
je
add
stc
imul
fwait
sub
ins
call
push
data16
and
push
and
es
jmp
cld
addr16
sub
adc
cmp
jns
pop
push
out
sbb
and
push
loop
mov
retf
inc
push
out
das
movnti
sub
lahf
and
inc
sub
and
jno
mov
fisttp
lock
das
sub
repz
or
fst
call
test
rol
pop
clc
movs
push
sbb
xchg
jmp
in
in
das
scas
adc
cmp
inc
leave
or
sahf
mov
mov
out
fidiv
jae
adc
dec
jnp
add
mov
push
mov
cmp
mov
cmps
push
adc
adc
inc
pop
cmps
mov
adc
fcmovnbe
sub
call
mov
and
xchg
pusha
scas
add
inc
mov
and
or
fcom
adc
fs
and
cmp
lods
fsubr
pop
dec
lock
pop
jae
mov
leave
lds
cdq
in
dec
xchg
sbb
pop
jp
jbe
or
add
mov
sti
dec
ja
fcmovnbe
jbe
add
out
sub
repz
jno
xor
sbb
out
ss
test
rcr
call
gs
out
stc
xor
dec
pusha
xor
mov
jmp
(bad)
push
adc
xor
movs
push
jne
jbe
ins
shl
(bad)
hlt
lods
cmp
mul
jnp
adc
call
popf
and
cmp
mov
dec
js
jb
shl
es
stos
xor
pop
loope
mov
and
(bad)
enter
dec
sbb
cmp
sub
out
into
push
mov
daa
outs
in
jo
jp
popa
push
cmp
out
pop
sbb
xchg
sbb
push
dec
sub
mov
lahf
(bad)
sbb
(bad)
mov
jnp
sahf
mov
adc
push
cmp
std
mul
call
xor
xor
rcr
test
pusha
je
inc
inc
icebp
clc
push
popf
hlt
sbb
pop
stc
xor
dec
movs
cmp
xlat
dec
xor
or
add
pop
es
jns
sbb
jl
jp
fst
push
inc
adc
inc
pop
repz
cmove
fnstenv
or
test
inc
fdiv
data16
and
dec
jp
xchg
cmp
mov
fnop
ins
hlt
js
xlat
ror
call
ja
xor
into
jnp
in
test
repz
fnstsw
xor
adc
in
dec
cdq
jle
xchg
jp
gs
test
inc
sub
fimul
daa
mov
adc
or
mov
in
ror
lds
outs
push
add
inc
inc
inc
sar
xchg
pusha
sahf
cwde
scas
mov
xchg
fadd
mov
xchg
jb
aas
xor
dec
aas
fadd
in
iret
icebp
daa
dec
clc
bound
retf
test
push
or
shr
mov
dec
cs
sbb
outs
pop
pop
inc
adc
sbb
mov
hlt
fistp
inc
mov
(bad)
mov
add
push
fwait
mov
cmp
cld
push
or
nop
inc
or
or
mov
inc
cwde
mov
test
pop
xor
inc
aad
adc
lahf
sbb
add
xchg
out
dec
mov
leave
mov
inc
jne
jno
enter
pop
fldenv
rcr
adc
and
inc
aas
retf
test
adc
push
cmp
stc
outs
and
sar
fnsave
repnz
cli
aad
inc
cmps
gs
and
inc
push
dec
das
call
jecxz
inc
mov
inc
mov
sbb
inc
addr16
bound
ins
(bad)
pop
or
push
in
ret
jns
xor
mov
rcr
inc
add
pushf
test
fistp
inc
pop
(bad)
retf
adc
mov
test
repz
mov
push
inc
push
or
movs
mov
pop
xor
stos
(bad)
test
inc
sahf
mov
data16
mov
inc
sub
nop
sub
das
mov
push
adc
aam
inc
pop
loop
call
bound
out
shl
das
addr16
in
mov
cmp
cmp
les
and
or
pop
(bad)
mov
jecxz
aad
cmc
sub
iret
dec
xor
mov
dec
mov
adc
popf
test
aaa
jbe
xchg
add
stc
jmp
mov
fs
call
andnps
leave
(bad)
push
add
mov
add
mov
fucomip
dec
pusha
shl
(bad)
or
xchg
mov
repz
pop
xor
dec
test
repz
add
mov
inc
pop
push
mov
xchg
mov
addr16
lods
sbb
or
and
(bad)
in
push
jecxz
cmc
and
xlat
xor
fstp
add
movs
mov
sbb
push
scas
popa
adc
mov
inc
pushf
lods
dec
mov
repz
dec
in
xchg
aas
(bad)
jp
adc
jae
(bad)
and
sar
xor
std
push
mov
push
sbb
test
fwait
xor
xor
std
repnz
mov
ins
pop
jbe
pop
test
fistp
push
mov
add
jg
push
arpl
ret
bnd
imul
push
mov
xchg
or
jmp
mov
sbb
add
(bad)
out
xor
and
pop
mov
pushf
(bad)
xor
pop
or
enter
std
(bad)
lock
or
mov
jns
out
ret
push
pop
fimul
adc
push
inc
inc
jmp
scas
jnp
add
jno
nop
or
jno
leave
inc
and
inc
xchg
mov
dec
push
xchg
mov
ffree
xchg
pop
fisubr
add
adc
out
sbb
and
xchg
repz
std
stos
dec
inc
inc
mov
aas
dec
cmp
(bad)
bound
aas
xor
dec
aas
mov
push
xchg
sbb
jl
sub
jle
xlat
jmp
int3
test
imul
leave
jle
imul
ins
in
jne
push
mov
rol
cdq
xchg
mov
cmp
not
jle
and
jbe
leave
repz
sbb
sub
xchg
add
in
adc
mov
das
icebp
cs
cmp
pop
pusha
cmp
fdivr
popa
mov
mov
xchg
xor
sub
inc
ja
push
stos
push
adc
mov
sar
sub
add
jno
loop
jne
movs
mov
scas
loopne
mov
cmc
cdq
mov
xor
adc
ret
rol
xchg
xor
test
stos
and
pop
daa
test
outs
repnz
dec
stc
ds
mov
loope
lock
xor
mov
xor
lds
enter
retf
dec
stos
pop
sti
daa
jg
lds
in
add
dec
test
cs
ja
push
stos
js
inc
adc
sbb
outs
stos
cmp
sbb
mov
pushf
sub
mov
mov
adc
dec
enter
ret
cmp
xor
(bad)
sbb
out
retf
pop
sub
mov
mov
push
mov
pop
mov
mov
adc
mov
sbb
cwde
out
pop
sbb
jnp
popa
inc
sub
xchg
pop
dec
ins
ins
push
sbb
mov
icebp
sub
pop
cmp
dec
test
jge
mov
aad
and
push
mov
fistp
xchg
sub
(bad)
xchg
sub
rcr
nop
and
out
push
pusha
in
mov
ret
sub
mov
push
mov
and
dec
adc
dec
mov
mov
push
mov
add
stos
fwait
outs
mov
xchg
cwde
sub
cmp
add
out
pop
mov
jmp
idiv
add
mov
jmp
jne
add
or
popa
out
sar
cmps
sar
mov
push
jg
jno
jmp
sti
dec
inc
pop
xor
and
adc
rol
push
push
lds
xchg
outs
(bad)
sbb
cmp
push
adc
cvtps2pd
pop
fcmovne
(bad)
in
jb
inc
rol
sub
pop
xchg
call
scas
shl
rcr
lods
data16
not
fcom
push
loop
sub
aas
push
out
shl
cmp
idiv
aad
pop
jge
dec
test
pop
idiv
lea
xor
add
mov
popa
jmp
movs
mov
cmp
jp
dec
jle
pop
mov
out
iret
push
and
push
lea
ror
push
or
jne
jns
push
int
addr16
aaa
sbb
in
retf
test
xchg
les
movs
test
in
inc
push
cwde
or
fld
int3
push
add
and
jle
cdq
xor
stos
retf
jmp
push
lock
fdivr
(bad)
icebp
jecxz
add
or
or
inc
adc
jmp
jbe
dec
add
fdiv
ja
cmp
push
jo
push
(bad)
shl
sbb
xor
sahf
nop
jl
fimul
dec
in
rol
mov
xchg
mov
adc
or
inc
sub
icebp
sub
ins
cli
sub
movs
sub
inc
jmp
out
ret
adc
test
push
call
dec
das
pop
jns
out
jecxz
dec
bound
sbb
xchg
lahf
cmp
es
or
jg
sar
sbb
xchg
mov
or
push
mov
clc
xchg
(bad)
repnz
hlt
inc
mov
add
mov
sahf
mov
sbb
(bad)
ins
jno
popa
leave
sub
adc
mov
or
nop
(bad)
dec
sbb
pop
fisubr
test
xor
pop
in
test
out
adc
adc
inc
mov
cmp
inc
sbb
mov
jae
ret
and
jb
and
dec
mov
popa
xor
retf
enter
ret
cs
pop
sub
fsubr
mov
in
inc
pop
enter
adc
pushf
inc
inc
test
mov
fist
mov
dec
inc
ins
das
jecxz
mov
inc
test
nop
dec
scas
inc
xlat
pop
xor
scas
sbb
push
inc
jnp
retf
jp
(bad)
fisttp
jp
dec
and
xchg
lock
mov
test
fs
fisubr
call
in
cs
dec
dec
mov
push
jmp
out
cmc
xor
scas
pushf
(bad)
xor
inc
fwait
inc
push
mov
xchg
or
adc
cmp
and
mov
adc
das
lds
pop
jb
fst
or
je
mov
dec
mov
test
push
inc
cli
popa
lods
cwde
ins
pop
sub
mov
retf
inc
ds
xor
jbe
pop
sbb
mov
push
dec
mov
dec
rcl
rol
cwde
add
push
pop
xchg
xor
jo
out
or
jmp
xchg
cs
xchg
cmp
jp
(bad)
retf
mov
fisubr
mov
in
js
in
or
lods
cwde
(bad)
cld
maxps
adc
sub
aad
inc
xchg
xchg
loop
mov
pop
aad
sub
das
push
push
mov
test
scas
sub
ja
push
adc
mov
enter
push
add
xor
add
call
cmps
pop
outs
jg
cli
or
sbb
pushf
sti
sbb
lds
jg
fimul
mov
out
les
mov
cmc
xor
or
jle
cmp
xor
push
push
jbe
lods
cdq
sti
push
jmp
out
movs
loop
mov
lds
cmp
pop
fidiv
ficom
push
cmp
(bad)
xchg
ins
xchg
inc
push
adc
les
das
rcl
xchg
mov
xchg
push
xchg
or
in
or
pop
outs
jne
call
aad
aas
test
test
push
xchg
(bad)
stc
cmp
jg
mov
mov
repnz
dec
sub
mov
dec
out
mov
test
bound
dec
test
mov
jl
jb
pop
hlt
inc
call
push
arpl
sub
inc
push
js
test
adc
xchg
add
mov
ins
mov
pop
cmp
lock
ins
push
adc
sub
xchg
mov
popa
jb
popa
pop
aas
push
mov
inc
enter
push
mov
hlt
int3
cmps
lea
xor
mov
cmc
mov
mov
std
or
test
js
add
xchg
and
lahf
xchg
out
test
(bad)
pusha
setl
sbb
(bad)
jecxz
cmpxchg
mov
sar
popf
hlt
fisubr
ror
das
jnp
cs
out
icebp
jns
call
cmp
jg
out
daa
jmp
sahf
nop
aam
(bad)
and
mov
or
and
jecxz
adc
pop
xchg
rcr
mov
(bad)
dec
out
sub
sub
inc
imul
push
adc
dec
adc
stc
mov
sbb
(bad)
fwait
je
sub
sbb
js
ror
or
aaa
xchg
push
dec
repz
int
jb
lahf
mov
mov
push
test
jle
call
rcr
add
push
(bad)
je
inc
pop
jmp
pop
xor
loop
push
jns
(bad)
jno
nop
neg
adc
or
in
into
into
test
mov
movs
aad
sbb
xlat
dec
adc
clc
mov
add
cld
mov
sbb
jle
push
(bad)
mov
into
rcl
cli
adc
push
sub
pop
sub
fcmovb
cld
in
or
jle
sbb
sub
inc
and
jo
test
aaa
xchg
clc
dec
fdiv
push
out
test
test
jnp
pop
xor
(bad)
fst
mov
push
scas
sub
out
mov
jecxz
sub
mov
je
cmp
lods
mov
cld
gs
cmps
ja
add
jbe
enter
push
ret
std
(bad)
cld
jbe
xchg
and
fild
jno
fcomp
cmps
lock
jmp
out
cld
push
jge
cmps
jle
jo
xor
mov
sub
mov
push
repnz
cmp
jno
adc
sar
sar
call
inc
aas
test
adc
and
xor
xchg
mov
push
jae
sbb
jle
adc
fwait
pop
dec
dec
in
nop
sub
shl
mov
xor
pop
cli
loope
push
into
push
mov
mov
push
sbb
cld
es
xchg
outs
jmp
mov
pop
dec
cwde
ret
adc
das
mov
mov
pusha
mov
div
call
aas
sbb
xchg
loope
or
lds
bound
inc
xor
fstp
adc
pop
in
pop
mov
aaa
adc
outs
icebp
mov
jo
out
xchg
sbb
mov
mov
sub
iret
mov
int
dec
loopne
in
pop
rcr
inc
sbb
mov
fsub
add
sbb
sub
sbb
cmp
cmps
test
movs
retf
dec
data16
and
(bad)
add
mov
std
lods
cdq
cmp
or
lods
(bad)
shl
and
mov
adc
jmp
int
mov
enter
fisub
jns
mov
dec
cmp
adc
shl
sti
leave
push
cmp
cmps
fild
lods
jmp
jp
sub
xchg
ds
mov
add
adc
pop
or
data16
vmwrite
push
nop
mov
sbb
inc
mov
or
fbstp
stos
lahf
sbb
mov
sar
rol
adc
in
mov
cdq
mov
and
xor
jmp
fsubr
(bad)
idiv
adc
test
sub
cli
mov
adc
dec
int3
stos
lods
leave
repnz
xor
xor
mov
clc
or
add
sbb
pop
push
lock
out
ins
cmps
ins
imul
jmp
mov
or
repz
xchg
push
js
leave
jae
inc
sahf
mov
lock
push
xor
jb
pop
ficom
aaa
and
pop
mov
xor
xchg
mov
call
out
loopne
loope
and
cdq
jp
inc
xlat
jmp
sub
shl
ss
xor
sub
dec
ret
rcl
push
je
fistp
mov
and
loop
aad
cmc
adc
inc
mov
test
(bad)
push
mov
sbb
xchg
jp
fstp
xchg
xor
push
test
loop
mov
cmp
dec
and
cmp
adc
jo
arpl
push
mov
in
xchg
fisttp
ficom
xor
push
repnz
cmc
rcl
rol
aam
push
cmp
(bad)
sub
lods
sub
out
mov
push
ret
fadd
pop
in
pop
scas
leave
jno
cmp
loopne
pop
jl
jae
adc
daa
pop
ss
inc
retf
jg
cmp
mov
and
inc
or
sbb
dec
dec
pop
inc
call
out
jg
std
scas
lea
mov
in
mov
dec
jl
lahf
icebp
and
xlat
cmps
sub
fld
(bad)
xchg
lods
les
sbb
mov
outs
adc
fwait
nop
add
adc
lods
icebp
adc
push
adc
lods
adc
adc
cli
int
test
jl
call
shl
push
in
jno
xor
aam
fwait
push
push
adc
inc
xor
inc
cld
mov
push
mov
in
je
fimul
sub
cli
repz
add
lods
arpl
leave
int3
jno
jbe
dec
push
push
leave
push
movs
pop
ins
sar
or
jmp
js
mov
(bad)
sbb
jns
fdivr
test
inc
adc
or
xchg
jge
das
pusha
jl
les
aas
sub
fadd
into
adc
cmp
fldcw
pop
xchg
fs
retf
leave
push
xor
cmps
out
daa
cmp
(bad)
xchg
jg
adc
(bad)
in
pusha
xchg
nop
push
popf
inc
mov
inc
add
cmp
mov
jae
ror
retf
scas
jbe
and
jnp
shufps
sub
outs
mov
shr
inc
jg
mov
call
xor
sbb
inc
test
and
mov
and
cdq
jns
ffree
mov
cmc
loope
pusha
cmp
cdq
cdq
jle
jmp
push
cs
(bad)
pop
test
and
sbb
xchg
mov
push
test
add
push
adc
sar
adc
shl
nop
push
jbe
xchg
sbb
pop
pop
push
jmp
or
jmp
and
xor
sahf
(bad)
jmp
push
sbb
add
cwde
jl
jecxz
cmp
push
adc
lods
lods
out
call
pop
jmp
cwde
xchg
cli
adc
push
in
fcom
sbb
fs
out
cmp
dec
std
mov
(bad)
mov
jb
mov
push
inc
loope
repz
ds
push
sbb
test
jnp
xchg
rcl
jb
data16
out
bound
xor
pop
loope
repnz
cld
popa
fsub
mov
rol
sbb
pop
pop
test
aad
rcr
imul
sbb
inc
scas
mov
adc
ret
sub
jno
pusha
or
sti
adc
mov
add
cmps
cmp
es
or
mov
cli
pop
add
pop
jecxz
mov
sub
xor
and
cdq
push
cli
mov
adc
mov
outs
or
stc
lods
adc
ja
pop
jns
xchg
(bad)
push
cmps
add
cmc
ret
sbb
and
cmp
jl
clc
and
rsm
mov
add
loopne
xchg
mov
mov
sub
retf
fild
inc
lock
mov
adc
mov
test
jl
mov
in
int
mov
inc
iret
sub
mov
jmp
test
rcl
xchg
or
sbb
in
addr16
int
sar
or
cmp
(bad)
in
adc
scas
sub
ret
test
xchg
or
and
fisttp
cmp
mov
dec
jae
cwde
cmp
jnp
popa
and
pushf
stos
out
dec
inc
mov
pop
dec
pop
stc
cmp
jmpw
add
pop
cmc
shl
paddw
or
inc
adc
xchg
inc
(bad)
(bad)
jge
xlat
mov
mov
or
(bad)
ret
inc
xor
test
inc
loop
jp
into
mov
xchg
jmp
call
jne
loope
je
into
mov
les
iret
sub
sar
sub
jne
inc
test
and
and
cmp
sub
je
sub
push
mov
and
movs
mov
or
hlt
xor
cmp
cmps
dec
xchg
mov
dec
outs
and
pop
adc
pop
add
mov
or
fwait
push
ja
(bad)
in
mov
daa
xchg
jnp
fild
(bad)
cli
ficomp
scas
leave
push
loop
mov
jg
call
shl
scas
call
cld
inc
ds
aaa
popa
in
sub
rcr
(bad)
addr16
sahf
xlat
daa
mov
or
or
sti
dec
(bad)
cli
inc
(bad)
push
xchg
jecxz
jb
fisub
push
cwde
std
add
popf
sbb
cmp
cmps
xlat
xchg
rcr
cmp
addr16
(bad)
sub
mov
enter
inc
push
mov
fs
pop
cmp
push
xlat
rcr
mov
movs
dec
out
add
idiv
adc
jae
int3
rcl
aaa
data16
(bad)
jl
imul
mov
fist
icebp
icebp
add
js
int3
mov
jp
mov
mov
popa
mov
cmp
in
push
clc
push
stos
cmc
sub
shr
sub
ficom
arpl
retf
sub
int
push
mov
mov
mov
fcomip
pop
stc
sub
push
mov
add
das
call
push
jnp
mov
(bad)
cmc
cmp
sub
jl
lea
or
adc
pop
add
loope
gs
jle
shl
fwait
pop
cmps
in
fsub
sub
inc
lahf
mov
mov
movs
test
xchg
adc
sub
fldcw
push
xlat
add
and
loop
cmp
(bad)
inc
in
fist
mov
inc
ss
mov
repnz
les
mov
sub
mov
out
inc
shl
adc
iret
xlat
adc
xchg
cmp
clc
sub
loop
xlat
cmp
rol
cmp
mov
sbb
out
mov
add
jnp
aaa
push
aad
inc
or
cwde
jns
aas
cmps
mov
das
loopne
mov
shr
jecxz
jmp
fst
mov
test
add
dec
and
push
adc
sub
add
jge
fld
push
xor
cwde
outs
cmps
xor
jns
popa
cmp
mov
and
and
jle
mov
xlat
adc
xlat
repz
rep
pop
cmp
jnp
inc
push
gs
dec
cmc
jns
adc
cmp
mov
fwait
xor
(bad)
(bad)
rol
xor
pushf
pop
adc
dec
rol
retf
test
shr
cmp
and
pop
stos
call
fidiv
mov
inc
aaa
dec
lock
xor
and
retf
dec
ins
cld
sbb
stc
repnz
mov
pusha
(bad)
xlat
jmp
lea
xlat
add
std
cli
je
sbb
xor
sub
pushf
jo
ret
retf
lock
sbb
xchg
fild
inc
mov
cs
mov
imul
enter
out
call
or
mov
imul
fldcw
sbb
mov
push
or
bnd
retf
loop
test
(bad)
mov
xchg
adc
(bad)
pop
dec
sbb
nop
and
out
jns
sbb
test
leave
dec
adc
retf
jle
mov
retf
cmps
jmp
repnz
pop
nop
and
jo
out
not
jnp
or
(bad)
mov
jb
push
out
sbb
push
jb
ins
fwait
or
pushf
out
cmp
mov
jne
das
pop
mov
fisub
push
rcr
pop
inc
or
and
jmp
sbb
test
test
movs
xor
dec
mov
in
pushf
shl
mov
inc
fist
and
int3
mov
adc
inc
adc
shl
dec
rcr
lahf
dec
nop
leave
mov
inc
test
movs
jo
sub
or
inc
hlt
or
cld
fnstenv
cmp
cdq
cdq
cli
leave
cld
mov
sbb
cmc
or
out
push
hlt
data16
cmp
std
pusha
cwde
jbe
in
je
mov
pushf
vpunpcklqdq
or
or
scas
jp
sbb
out
pop
mov
ficom
pop
fisub
or
jne
and
ds
push
icebp
xchg
mov
mov
out
stc
or
movs
in
lds
mov
adc
dec
mov
cmp
icebp
push
mov
adc
mov
ficomp
inc
mov
punpckldq
sub
icebp
jbe
ud1
adc
jmp
popf
das
sar
pop
dec
inc
retf
push
pop
xchg
mov
push
js
ficomp
push
cmps
push
push
or
adc
pop
jno
xor
adc
sbb
(bad)
mov
inc
sar
aaa
mov
jecxz
stc
dec
lods
fst
push
mov
scas
and
jp
scas
and
jl
ficomp
jge
std
inc
cmp
mov
xor
jmp
dec
rcl
push
inc
aas
lds
jle
fnsave
xchg
movs
adc
loopne
sbb
xchg
retf
in
(bad)
mov
mov
inc
mov
dec
sub
hlt
jb
cs
adc
pushf
es
int3
out
sub
pop
fs
adc
int
call
and
lea
dec
mov
push
jle
cmps
aaa
fstp
push
shr
fs
add
(bad)
sub
sub
aaa
lahf
into
jne
pop
cmp
out
adc
cmps
adc
inc
cmp
add
in
nop
xchg
mov
daa
loopne
cwde
test
lds
push
mov
data16
mov
inc
ret
je
pop
or
daa
mov
loop
sbb
pop
fnsave
xchg
ret
adc
xchg
frstor
cmp
jno
adc
push
ret
aam
jle
dec
mov
cmp
push
push
cbw
mov
dec
inc
and
mov
dec
cli
and
test
js
pop
clc
(bad)
xor
lds
inc
enter
xchg
adc
fistp
add
xchg
in
mov
cmps
cld
loope
inc
ficomp
jmp
lods
inc
sub
shl
jecxz
and
cmp
jl
push
adc
cmp
or
cmp
dec
data16
adc
dec
sti
jle
icebp
pusha
into
std
and
xchg
sbb
stos
sbb
add
stos
enter
imul
aas
jmp
out
cmp
(bad)
mov
and
xor
xchg
fstp
shr
in
je
fsubr
sar
cmp
outs
cwde
mov
js
or
mov
xchg
das
or
sbb
jge
mov
fsubr
cwde
xlat
ins
xchg
xchg
repz
xchg
mov
mov
iret
inc
xor
cmp
mov
and
push
jp
icebp
mov
test
cld
sub
movs
out
(bad)
jecxz
mov
push
or
or
rol
mov
mov
xor
cmps
adc
mov
inc
sbb
mov
mov
gs
sbb
loop
jns
ss
test
mov
xlat
sahf
outs
(bad)
pop
jns
(bad)
in
call
xchg
(bad)
scas
sub
push
fstp
ret
movs
push
xor
test
sbb
jecxz
or
jmp
shl
bts
int
daa
ret
test
mov
push
inc
outs
inc
push
and
cmp
sub
mov
or
sahf
retf
hlt
mov
dec
int3
adc
or
fs
das
fild
mov
out
out
jmp
jb
call
pop
out
mov
mov
push
retf
xor
repnz
pushf
movs
fcmovnu
jae
inc
movs
sbb
clc
loope
test
pop
cwde
dec
mov
push
es
jg
jmp
int3
lock
and
nop
cmps
and
jmp
jmp
(bad)
jns
add
push
imul
mov
jge
movs
ds
lea
ret
lods
and
mov
xchg
in
pop
loop
cmp
mov
sbb
(bad)
sub
data16
ins
mov
pop
retf
sbb
add
cld
ror
gs
xchg
adc
shr
push
push
add
(bad)
pusha
stc
fcomi
sbb
out
jecxz
jecxz
(bad)
mul
scas
mov
push
mov
mov
fsubrp
and
dec
bound
mov
cmp
mov
pop
repz
out
dec
pop
add
aad
xor
fbstp
and
add
dec
stc
sub
sbb
lods
jno
fsub
mov
jns
dec
or
push
jecxz
sti
push
pop
adc
scas
adc
jge
and
inc
data16
loope
dec
test
cmps
mov
mov
test
push
or
cmp
pop
aaa
push
repnz
iret
call
mov
fld
mov
adc
popa
fld
push
jmp
xchg
mov
push
fwait
movs
sub
cdq
cmps
(bad)
in
les
pop
xor
das
lea
ins
arpl
pop
xor
rol
dec
lods
cmps
and
(bad)
pushf
dec
loop
add
ror
adc
adc
push
jp
das
(bad)
mov
mov
jmp
jo
push
pop
in
jb
dec
aaa
pop
(bad)
(bad)
jl
mov
popa
icebp
movs
int3
div
sub
sub
push
push
inc
dec
inc
pop
adc
pop
pop
les
or
sbb
sbb
dec
push
and
lods
xor
inc
fisttp
imul
dec
test
inc
inc
sbb
fmul
(bad)
mov
inc
push
mov
bswap
out
fsub
jbe
jge
sbb
mov
pop
pop
fs
daa
ret
inc
stos
gs
mov
mov
dec
xchg
jo
popf
cmp
pop
jg
jp
pushf
cli
xchg
mov
pop
cdq
cwde
jle
fcmovne
dec
out
repnz
mov
xor
(bad)
push
cli
xchg
and
lea
adc
fld
xlat
adc
mov
inc
sub
daa
and
mov
stos
pop
jl
pusha
mov
dec
scas
mov
loopne
loop
in
mov
outs
xchg
fiadd
stos
jp
jb
stc
xchg
test
ds
mov
enter
sub
test
cmps
cmps
mov
lahf
cmp
sbb
fld
push
rep
push
or
fistp
jmp
mov
or
out
push
mov
imul
mov
movs
pushf
cdq
aas
ret
fdiv
retf
add
sti
test
sub
dec
lock
ss
into
cdq
mov
lock
cmp
inc
push
mov
fnstcw
mov
rcr
push
sar
pop
aad
mov
add
sti
in
hlt
pop
daa
es
(bad)
jl
cmp
lidtd
push
cmp
dec
push
push
enter
pop
adc
mov
jnp
fld
retf
push
or
inc
and
ja
cmp
jno
popf
pop
jp
int
stos
scas
mov
cmp
gs
xchg
lds
pop
mov
call
mov
fdivrp
push
sub
pop
stc
pop
out
sahf
fwait
pop
bound
mov
mov
cmp
es
adc
leave
jae
push
loope
jl
pop
xchg
stc
shl
fbld
pop
in
cdq
xchg
mov
setp
add
shr
loope
adc
movs
cld
dec
mov
mov
fcom
rcl
xchg
jne
adc
iret
fsub
xchg
dec
sbb
push
mov
out
jge
add
sbb
adc
push
addr16
pop
and
sahf
adc
mov
add
mov
push
cwde
xchg
gs
mov
jo
and
cmps
xor
test
mov
fldcw
jmp
in
fs
in
into
lds
js
sbb
adc
xchg
ds
loopne
dec
adc
outs
cwde
inc
mov
mov
adc
inc
mov
mov
(bad)
stos
out
xchg
jae
mov
mov
lds
outs
ror
ss
fld
leave
lock
mov
bound
jmp
rcl
adc
cmps
cmps
popf
inc
ret
push
int
mov
stos
aas
int3
adc
adc
add
pop
xchg
div
loopne
stos
arpl
out
sub
stos
or
les
sub
push
or
jp
test
shl
data16
lahf
push
mov
push
push
ins
inc
mov
sbb
(bad)
movs
mov
cmp
jo
dec
inc
pushf
lods
movs
ror
aam
xor
or
cld
jmp
sahf
loope
add
mov
pop
pop
fimul
jo
sar
push
retf
data16
xchg
jle
pop
mov
adc
xor
daa
xor
not
int
xor
pushf
mov
mov
stos
pop
std
scas
xchg
rcr
ins
sub
add
jecxz
jg
sbb
inc
mov
test
mov
fsubr
xor
fld
ins
into
push
pop
jns
push
xchg
cmp
loopne
fisub
mov
add
ss
shr
or
cmps
adc
jecxz
lods
jle
mov
hlt
sbb
cmc
and
dec
jnp
bound
sub
xor
shr
pop
mov
retf
cmc
fidivr
bound
sub
shl
sub
inc
mov
arpl
repnz
xchg
rcl
lea
(bad)
or
imul
pop
fnsave
mov
mul
repz
pop
es
(bad)
(bad)
loop
cmp
sub
adc
lods
jae
mov
lods
enter
mov
sbb
test
mov
or
arpl
(bad)
rcl
(bad)
jle
sbb
xchg
repnz
xchg
sub
xchg
mov
enter
mov
push
dec
test
push
cmp
test
lea
ret
iret
push
push
ja
or
das
jae
cmc
(bad)
push
scas
bound
retf
sub
out
fcomip
lods
mov
rol
lds
popf
mov
sub
add
jmp
in
dec
push
ins
adc
sub
push
ds
pop
xchg
daa
mov
jecxz
or
out
xchg
(bad)
in
xchg
push
pop
lods
cmps
xor
loope
lea
push
jmp
ins
adc
jmp
cmp
adc
fnsave
mov
test
cwde
imul
ret
(bad)
cmp
(bad)
int
or
sub
jmp
mov
push
repz
push
dec
sar
frstor
ror
inc
mov
in
icebp
cmps
xchg
xchg
jl
adc
cmp
pop
inc
aam
sub
push
or
sub
cmp
ins
loope
sbb
fnstcw
loopne
inc
outs
scas
inc
cld
cmp
and
or
fstp
shl
mov
cld
and
clc
fwait
pop
and
mov
or
dec
loopne
mov
xor
xchg
sub
pop
cdq
mov
ss
iret
call
mov
and
pop
pop
and
rcr
lahf
or
adc
jmp
mov
or
mov
nop
xchg
push
dec
inc
in
repz
jp
out
jp
mov
cmp
into
jmp
test
scas
sbb
xor
sbb
cmp
xchg
xor
sbb
scas
jbe
sub
mov
cmp
test
jno
jl
cmp
ja
mov
addr16
mov
push
add
jns
sub
bound
cmc
sub
(bad)
mov
mov
scas
arpl
out
mov
xchg
add
sbb
mov
leave
retf
dec
xchg
ja
in
push
push
xchg
cmc
movs
daa
shl
mov
push
popf
scas
adc
adc
inc
sbb
jl
jo
mov
cmp
inc
adc
sub
cmp
movs
test
lock
retf
push
cmp
mov
dec
inc
add
xchg
popa
adc
(bad)
xor
xchg
inc
sbb
mov
push
mov
or
jecxz
sbb
cmp
xlat
inc
scas
add
in
mov
cmp
pop
or
cmps
dec
xor
jle
cmp
rcr
pop
push
(bad)
jo
gs
xlat
mov
test
mov
add
rol
aad
pop
int
mov
xchg
pop
jbe
pop
nop
push
mov
xchg
inc
sbb
in
jmp
pop
push
fst
ror
mov
xor
and
mov
scas
cmp
or
pushf
jmp
sub
mov
fsubr
in
clc
xchg
test
xchg
stos
dec
jp
sti
gs
xchg
jge
js
fdiv
jnp
mov
cmps
stos
jne
push
sub
clc
sbb
jb
sahf
cs
mov
push
jp
xlat
sbb
jge
div
loop
dec
clc
dec
add
dec
pop
adc
je
sti
cmp
pop
pop
xchg
shr
push
mov
imul
inc
loope
sbb
mov
push
icebp
rcr
and
retf
dec
xchg
out
shl
lds
xor
inc
gs
jle
lods
pop
pop
push
fisubr
pop
or
jo
cmp
cli
cld
xchg
outs
mov
add
stos
cs
jmp
loopne
test
or
cmps
add
jno
aaa
sbb
and
cmp
iret
and
ins
dec
lds
push
in
retf
sub
adc
in
sub
jo
ins
ins
dec
jg
test
add
inc
fdivr
dec
push
mov
push
xor
pop
mov
cld
cmp
push
and
jo
ret
cli
nop
sbb
pop
in
loop
add
retf
movs
(bad)
ret
adc
icebp
mov
cmp
loopne
bound
jb
pop
cmps
fwait
inc
jns
fbld
sbb
xchg
or
jnp
adc
mov
and
call
leave
push
inc
mov
icebp
jle
daa
call
mov
sbb
sub
fiadd
es
lods
imul
js
sub
pusha
add
and
(bad)
xchg
mov
inc
inc
mov
and
jp
movs
cmp
or
bound
and
pop
push
push
enter
sti
mov
add
sbb
fs
rcr
pop
adc
(bad)
in
(bad)
inc
aam
fwait
cmc
pop
push
mov
dec
sub
stc
push
sbb
pop
daa
xor
sub
cli
pop
sbb
shl
xchg
cmps
jmp
shl
adc
mov
rol
movs
cmp
mov
jge
ffreep
mov
rcr
enter
jmp
mov
or
and
movs
in
nop
pop
outs
mov
int3
in
mov
inc
ret
adc
movs
sar
into
jnp
ja
in
jmp
cmp
out
mov
ret
xchg
cmp
mov
add
xor
arpl
clc
loopne
std
mov
mov
and
mov
add
inc
xchg
outs
retf
fist
push
pushf
xor
in
cmps
mov
addr16
clc
mov
xchg
in
fbstp
or
dec
jo
test
fwait
inc
scas
cld
aas
cmps
sar
or
xchg
lds
daa
shl
clc
sub
dec
(bad)
mov
ret
loope
je
(bad)
inc
push
out
(bad)
adc
sub
fst
mov
icebp
push
stc
int3
cmp
or
push
adc
jnp
or
mov
int
cld
add
lds
stc
dec
push
and
cs
jmp
xor
push
add
(bad)
mov
test
mov
in
inc
push
mov
(bad)
xor
aam
xchg
lea
cli
sub
fld
inc
(bad)
pop
fnstcw
jmp
mov
jmp
mov
dec
push
add
jb
rol
(bad)
fucomip
stos
retf
movs
dec
jmp
push
mov
out
xor
mov
loope
xlat
sub
mov
sahf
lods
and
or
lahf
sub
mov
rcr
aas
cmp
and
adc
pop
jae
cmps
push
dec
add
xor
mov
push
push
movs
jl
mov
dec
jge
hlt
ins
sbb
jge
ds
stc
jae
enter
cmp
(bad)
xor
adc
pop
imul
pop
in
dec
sub
leave
loope
pop
xchg
lea
xchg
xor
xor
ror
loopne
add
outs
xor
xchg
loope
stos
lods
ror
fwait
xchg
ror
jge
jne
or
xor
into
pop
popa
sub
and
dec
mov
mov
call
xchg
call
jg
inc
int3
sbb
or
(bad)
ret
scas
fbstp
mov
movs
pushf
fsubrp
xor
mov
dec
cmp
aad
mov
push
stos
js
mov
ss
push
lahf
sbb
neg
mov
daa
dec
or
xor
cld
test
mov
mov
(bad)
fisttp
repnz
xchg
push
pop
mov
(bad)
fimul
sahf
push
call
xchg
test
jne
push
mov
sbb
sbb
loope
push
clc
repnz
push
push
push
mov
dec
fmul
push
mov
std
jb
pop
jo
ins
sahf
gs
into
cmps
call
pop
jns
adc
leave
jne
mov
and
mov
aaa
xchg
int
ja
cmp
pop
enter
pop
adc
xor
(bad)
bnd
push
xchg
movs
inc
aaa
add
xor
ficomp
mov
mov
mov
popa
loopne
jl
sub
mul
test
outs
das
arpl
in
daa
hlt
ja
inc
cs
inc
out
setne
dec
xchg
mov
adc
cmp
das
add
jge
push
sbb
fbld
mov
sbb
add
fistp
xor
cmp
pop
clc
outs
jbe
pop
arpl
stos
(bad)
cmp
jge
cld
lahf
jle
mov
test
nop
dec
jmp
inc
dec
add
stos
push
xchg
and
loopne
ja
or
in
sbb
mov
shr
in
leave
hlt
mov
movs
cmps
xchg
mov
mov
jg
inc
sbb
push
mov
call
cli
and
sub
outs
stos
mov
mov
scas
lahf
test
adc
fldenv
lods
jae
xor
xor
push
inc
stos
je
test
inc
fsub
cli
mov
fnstenv
dec
inc
in
cld
js
dec
fmul
dec
movs
call
xlat
and
jl
gs
outs
inc
popa
scas
xor
adc
(bad)
mov
(bad)
outs
push
fist
jne
cmp
jo
and
dec
xchg
xchg
(bad)
xchg
imul
sub
or
fisub
mov
mov
mov
jge
or
sub
sbb
mov
in
cs
sub
mov
ins
inc
jae
dec
fld
or
stos
inc
jmp
jge
outs
ins
mov
mov
add
mov
jns
dec
and
sbb
outs
sub
ficom
arpl
jns
repnz
ins
jns
push
or
hlt
or
mov
push
and
inc
mov
repnz
pop
sbb
mov
fwait
hlt
mov
pop
shl
in
fisub
or
mov
push
in
imul
and
movs
mov
sti
and
test
icebp
dec
mov
xor
xor
scas
clc
xor
cmp
and
in
retf
jge
icebp
mov
into
sbb
hlt
jnp
mov
adc
shr
jg
mov
aad
jp
popf
daa
out
(bad)
pop
lods
ss
inc
and
mov
loopne
dec
pop
dec
cmp
movs
int3
jmp
mov
xchg
jb
rcr
loop
inc
in
fstp
int
sub
push
push
adc
cmc
shl
test
or
movs
shr
je
loop
mov
dec
mov
mov
out
out
dec
push
loope
jbe
cwde
cmps
pushf
and
cs
add
dec
enter
adc
cmp
ficom
jnp
lds
push
ja
inc
jno
sub
jne
int3
ror
test
movs
out
mov
and
mov
dec
addr16
add
xchg
mov
xor
je
xchg
mov
dec
xchg
imul
sub
sub
push
aad
inc
sub
inc
pop
and
rcr
fs
jbe
dec
out
push
test
xchg
dec
es
mov
xchg
imul
lock
xchg
cmps
xchg
jnp
mov
jmp
rcr
sub
xor
addr16
es
cmp
(bad)
push
(bad)
xor
test
sub
xchg
enter
jnp
cmp
outs
stos
or
xor
jge
push
push
test
aaa
pop
cwde
aaa
cdq
mov
out
int3
sub
adc
inc
jle
fst
push
and
xchg
sbb
in
ja
adc
push
mov
mov
aad
scas
mov
push
pop
jp
popa
(bad)
popa
fistp
fs
out
cmp
push
jmp
rcl
imul
cmp
jge
in
push
xchg
add
ror
iret
mov
retf
jo
sbb
mov
xchg
int
std
pop
ret
jle
xor
mov
test
jecxz
cmp
jne
cmc
and
mov
(bad)
mov
faddp
adc
aaa
lods
ds
and
cmp
int3
hlt
sbb
sar
dec
add
push
mov
push
inc
out
int
cmps
sahf
sub
rol
mov
pop
push
popa
aas
or
and
or
xchg
inc
test
fisubr
xchg
and
rol
push
add
xor
mov
adc
scas
test
sub
mov
pop
rcr
sub
mov
cmps
xchg
cmp
jmp
dec
mov
int3
inc
jp
mov
call
sbb
mov
loop
xchg
push
jmp
sbb
call
push
outs
(bad)
cmp
(bad)
xlat
jmp
pop
sub
mov
xor
adc
jecxz
shl
xor
sti
adc
sbb
push
mov
push
cmp
sbb
mov
and
sub
pop
jne
outs
test
cmp
sti
mov
retf
push
outs
in
inc
aaa
nop
ficomp
push
lahf
addr16
xchg
and
hlt
loopne
mov
loopne
adc
and
pop
xor
je
push
icebp
pop
nop
jae
fmul
or
jns
outs
sub
imul
ins
es
xor
dec
inc
movs
jg
pop
cmp
imul
int
push
or
call
jb
xor
dec
out
(bad)
pop
add
out
shl
shl
mov
shl
inc
cmc
retf
or
das
out
retf
sahf
and
test
into
xchg
cli
and
jle
test
loopne
gs
ror
inc
jmp
dec
(bad)
cmp
jecxz
imul
pop
jo
cmps
push
scas
sbb
fidivr
leave
inc
mov
mov
mov
nop
lahf
mov
sub
xor
sub
enter
ja
inc
or
push
test
push
cli
cmps
loopne
xor
bound
adc
test
loop
push
bound
leave
sub
scas
cmp
push
into
jmp
int
jae
bound
mov
push
div
xchg
sub
inc
sti
imul
scas
push
out
adc
cmp
scas
inc
or
add
xchg
stc
cmp
cmps
mov
pop
das
xchg
and
mov
out
shl
aam
add
mov
push
mov
pop
and
jae
jnp
mov
and
pop
cld
cmps
pop
push
push
xchg
test
in
leave
hlt
mov
movs
xor
jl
dec
mov
sti
mov
imul
xchg
adc
rcl
push
jno
movs
xor
jle
sub
imul
dec
jp
sub
(bad)
es
sub
pop
add
push
xchg
jns
adc
js
inc
jno
jno
mov
repz
mov
lock
stos
pop
and
xor
(bad)
push
retf
call
push
addr16
cmp
imul
and
sbb
xor
inc
ret
popa
xor
jnp
mov
imul
clc
sub
leave
sub
jae
lahf
retf
retf
mov
push
daa
sahf
(bad)
mov
out
scas
sbb
fs
cmp
sbb
lds
add
push
ret
push
jmp
jae
test
xchg
das
sbb
xor
mov
xor
pop
out
jge
cmp
ret
jecxz
sbb
jno
retf
cwde
iret
leave
push
jecxz
xchg
fdivr
pop
and
jno
pop
shl
ins
and
inc
ret
mov
scas
ret
fiadd
test
mov
jb
mov
pop
mov
stos
and
push
cwde
inc
push
lods
or
mov
ror
mov
pop
mov
out
jnp
pop
mov
xor
repz
cmp
mov
test
int
add
ss
bnd
sub
imul
shl
sqrtps
lock
xlat
mov
je
mov
or
inc
mov
or
int
add
adc
imul
or
imul
sub
cdq
(bad)
mov
xor
cmp
retf
jg
ja
and
jecxz
cmps
outs
mov
mov
mov
jmp
xlat
aad
les
or
outs
xchg
dec
sti
clc
cmp
shl
cmp
lods
mov
adc
ror
cmp
inc
xchg
jg
ret
sbb
push
sar
repz
inc
sub
fnstenv
xor
enter
and
or
pusha
cmp
es
pusha
or
jl
out
ret
dec
mov
ror
mov
cld
mov
and
cmps
mov
add
daa
sub
repz
and
xor
pop
lock
adc
and
cmp
push
inc
lahf
inc
xchg
(bad)
mov
out
cmp
daa
rol
jl
jp
mov
je
repnz
addr16
or
dec
fwait
loopne
sbb
inc
test
stos
inc
retf
jl
sub
aaa
mov
jne
sub
vpaddw
pushf
sub
out
push
lock
in
cmp
fldcw
xchg
jle
dec
(bad)
mov
add
shr
dec
push
fcmovnb
pop
stc
and
jb
mov
pop
add
ja
sbb
push
mov
repz
or
(bad)
xor
mov
repz
xchg
fdivrp
pop
mov
retf
call
mov
add
lods
aas
mov
cmp
in
jge
and
cmps
xlat
fcom
loope
nop
(bad)
xchg
inc
jecxz
ds
scas
std
jns
push
stos
push
mov
enter
and
in
mov
ss
cld
mov
jl
cmp
test
outs
adc
sub
test
jl
dec
not
cmps
mov
mov
call
cmp
cmp
mov
fs
mov
cmps
mov
ret
cdq
cs
aas
mov
arpl
jmp
mov
repz
(bad)
sub
xor
out
sti
sbb
mov
xchg
or
ret
addr16
sub
xor
aad
jl
dec
push
cmp
push
movs
cwde
pminsw
cmp
ja
repz
jb
jo
push
xor
ret
iret
jle
or
xchg
cmp
dec
jle
mov
dec
fbld
cmp
jne
imul
xchg
(bad)
jecxz
stos
(bad)
movs
jmp
mov
(bad)
push
add
ror
mov
(bad)
jmp
fs
add
dec
or
jmp
(bad)
push
cli
aam
or
push
adc
or
fst
(bad)
js
pop
aad
xchg
dec
arpl
push
or
mov
bound
adc
fistp
pop
mov
or
add
cmp
enter
mov
xchg
daa
add
fcmovnu
jbe
mov
aam
adc
pushf
dec
jne
jge
pop
fldenv
test
fbstp
or
cdq
(bad)
mul
ins
dec
dec
pop
(bad)
sub
mov
popf
mov
scas
jo
pop
mov
mov
push
scas
inc
outs
jne
push
mov
ja
mov
sub
jmp
xchg
loop
cmp
loopne
inc
xlat
mov
jb
mov
out
jl
les
out
cmp
mov
(bad)
fisttp
mov
inc
adc
xor
lahf
xor
pop
inc
loop
ret
cmp
scas
and
pop
sub
add
jmp
addr16
mov
lock
mov
imul
jmp
ficom
dec
mov
push
(bad)
in
enter
mov
fcmovnb
mov
jb
mov
mov
jp
leave
mov
cmps
sbb
push
pop
sub
inc
ins
cli
xchg
sbb
pop
cli
cmp
jmp
retf
test
push
pop
add
and
jb
(bad)
sti
cdq
in
icebp
xchg
lods
out
aas
xchg
cmp
repz
or
das
sub
push
cmp
leave
clc
sub
outs
cmps
sbb
add
and
mov
retf
sbb
dec
in
or
lods
push
loope
fsub
mov
add
mov
and
fimul
sar
repnz
pop
mov
jmp
add
inc
adc
gs
mov
retf
or
sub
ror
rcl
pusha
pop
add
xchg
dec
mov
pop
leave
jae
jae
test
xchg
dec
aam
jecxz
jae
cmp
xchg
cmps
iret
cld
xlat
push
pop
mov
neg
or
out
sbb
mov
dec
mov
adc
or
mov
or
xchg
cmp
xchg
mov
repz
cmp
inc
xor
pop
xlat
inc
pop
jle
test
pop
std
jbe
add
ins
out
ds
(bad)
adc
push
pop
ins
mov
jle
pop
shl
sub
mov
jle
sub
xor
xor
jns
inc
add
pusha
or
mov
pop
int
jb
outs
jns
pushf
pop
retf
mov
and
mul
pusha
imul
pusha
test
call
(bad)
int
mov
or
loope
in
mov
cdq
jge
addr16
ret
repnz
xor
push
sub
adc
sti
loopne
sbb
(bad)
pop
mov
push
or
fbstp
gs
loop
mov
xchg
push
cmps
clc
test
sub
in
fs
inc
enter
call
add
push
and
dec
das
or
push
lock
xchg
xchg
test
sub
inc
call
and
mov
test
xor
mov
pushf
(bad)
clc
adc
iret
push
mul
aaa
and
add
icebp
adc
in
lea
aad
mov
xchg
movs
cdq
push
les
arpl
pop
shl
jp
cmps
jg
mov
lods
out
xor
xor
or
dec
popf
outs
stc
mov
push
and
jne
out
rep
mov
inc
dec
adc
div
in
loope
inc
dec
test
jl
sub
cmp
pop
aam
pop
push
and
pop
jecxz
add
and
scas
xchg
mov
fs
and
jp
iret
mov
cmp
add
mov
in
sti
or
pusha
fisttp
sbb
ins
jp
push
pop
bound
inc
loopne
ret
adc
fst
sub
xor
xchg
outs
mov
adc
mov
fs
lea
clc
icebp
xchg
and
inc
push
dec
xchg
jmp
js
(bad)
and
sahf
retf
es
int3
dec
cmp
push
sbb
xchg
inc
sub
fsub
std
dec
pop
or
mov
repnz
cdq
pop
(bad)
es
inc
inc
aaa
push
jge
fwait
in
sbb
cmp
cmp
lea
jno
fimul
dec
fcomi
adc
add
pop
adc
pandn
arpl
mov
push
add
pop
mov
mov
pop
je
push
xchg
sub
sub
inc
test
pop
push
jo
stc
dec
test
arpl
and
addr16
fmulp
inc
inc
add
sbb
jmp
xor
mov
push
mov
out
cmc
inc
dec
cmp
les
scas
pop
inc
cld
lds
test
sbb
jae
in
sub
shl
popa
sbb
aad
adc
pop
mov
int3
jmp
push
std
pop
cdq
xor
push
add
jmp
inc
leave
sbb
test
jb
pop
dec
popf
repz
test
jns
loop
fistp
push
dec
in
jl
sub
adc
mov
mov
or
ror
fiadd
popa
arpl
popa
xchg
pop
(bad)
(bad)
sbb
jmp
(bad)
aam
and
scas
lods
call
and
mov
pop
loop
movs
mov
push
adc
shr
icebp
addr16
push
fucomi
xchg
jmp
adc
repz
and
js
mov
mov
iret
arpl
cmps
mov
mov
cmps
fsubr
mov
int
pop
jmp
pop
push
int3
inc
mov
stc
xlat
jns
push
mov
fcmovne
mov
sbb
std
jb
mov
pop
pop
sbb
fsubrp
push
fs
loope
sub
(bad)
mov
mov
pmuludq
adc
je
or
mov
xchg
push
cld
mov
jp
ins
scas
addr16
test
(bad)
movs
pop
inc
mov
test
dec
sub
sub
adc
xchg
or
pusha
mov
xor
xchg
push
jmp
xchg
inc
(bad)
sbb
mov
mov
nop
sub
jbe
and
inc
mov
push
cmps
and
add
arpl
inc
ins
pop
pop
push
int3
aaa
mov
and
in
sub
(bad)
ins
das
sbb
sbb
jae
xchg
cld
lahf
jb
sti
mov
ds
xchg
movs
pop
pop
or
mov
out
add
sub
in
ja
mov
xchg
mov
pop
adc
aaa
push
jbe
jno
xchg
gs
or
jmp
leave
jl
xchg
popa
mov
ds
xchg
int
dec
xor
xor
push
js
inc
and
(bad)
(bad)
jo
test
out
cmps
mov
outs
mov
imul
jno
pop
(bad)
hlt
jno
sub
inc
mov
mov
pushw
mov
daa
jg
push
dec
sub
xchg
je
jno
jb
in
jb
sar
shl
xchg
shl
std
cs
add
mov
jmp
mov
test
sub
pop
adc
xor
aam
mov
sar
cmp
repz
mov
out
sub
adc
and
lahf
aam
cmp
test
fisubr
jl
addr16
cmp
mov
adc
call
shr
out
movs
inc
fsubp
repnz
fcom
test
sub
jl
cmp
and
adc
ins
fidiv
test
fist
pop
bound
mov
repz
mov
xchg
outs
jmp
jmp
or
push
cli
xchg
dec
sbb
dec
dec
push
out
xor
mov
je
inc
sbb
sub
inc
retf
ss
loop
les
enter
jmp
xchg
imul
cmp
add
loopne
sahf
out
fisubr
mov
inc
dec
ins
outs
sbb
sub
xchg
mov
push
jg
xlat
push
js
sbb
mov
inc
pop
xor
or
xchg
ret
ficomp
or
aam
mov
dec
adc
jl
ins
inc
aaa
xor
xor
xchg
test
sub
fidivr
mov
cwde
or
mov
xchg
inc
js
cli
push
and
imul
ins
jl
and
iret
cdq
inc
out
dec
xor
imul
mov
pop
mov
cmc
inc
out
add
scas
pop
mov
(bad)
jnp
xchg
push
dec
dec
outs
mov
aaa
xchg
push
test
cs
xor
or
xor
in
rcr
dec
(bad)
in
fadd
dec
pop
and
call
lock
cli
out
mov
mov
(bad)
cli
outs
dec
ret
arpl
pop
in
jle
ss
cli
retf
mov
fimul
call
sub
in
xchg
dec
add
sbb
dec
pushf
mov
inc
idiv
je
jecxz
adc
mov
add
adc
popf
dec
mov
xchg
fisttp
shl
xchg
ins
packsswb
in
mov
in
into
popa
hlt
mov
cmps
(bad)
leave
fxch
sbb
cmp
adc
fcmovu
aaa
bound
mov
ds
sub
dec
cld
inc
lds
and
repnz
jne
push
mov
push
cmp
cmp
(bad)
xor
push
addr16
(bad)
imul
das
pusha
ins
inc
retf
inc
dec
mov
popa
test
mov
imul
ret
dec
cmps
cmps
inc
lea
add
dec
inc
ficom
sbb
jge
or
test
popa
sub
jmp
and
cmps
fisttp
and
int
les
mov
fsub
bound
iret
lahf
mov
sbb
xchg
cmp
rcr
(bad)
fisub
cmc
or
jbe
or
mov
out
jmp
popa
aam
mov
test
popf
imul
(bad)
stos
xor
out
ins
fistp
ins
lods
ret
fnsave
fistp
mov
sbb
aas
xchg
into
in
mov
je
jnp
sub
xor
ja
dec
xchg
out
mov
jl
inc
mov
frstor
mov
cmovns
outs
jle
mov
pop
loope
cmp
add
imul
xchg
fisttp
mov
cmps
shl
stc
jmp
push
pop
sub
mov
ret
stos
pop
jmp
jae
xor
adc
jmp
fwait
inc
xchg
mov
sahf
mov
in
in
push
(bad)
mov
popa
inc
jmp
jmp
and
out
add
pop
mov
std
call
es
loop
dec
adc
je
test
sahf
or
sbb
arpl
cmps
sbb
fprem1
pop
pusha
test
outs
mov
push
dec
cmps
sti
xor
aas
jne
movs
and
fwait
jmp
sahf
jbe
fsub
dec
fldcw
sub
dec
inc
loopne
fs
xor
aas
push
pop
ror
xor
xor
push
mov
clc
rcl
cmc
inc
inc
mov
(bad)
test
out
test
jb
nop
mov
sub
fsubr
imul
lods
stc
and
stc
mov
mov
jne
pop
mov
xchg
cld
xor
cwde
sahf
sti
cmc
sub
call
mov
les
test
arpl
add
in
movs
jno
pop
dec
out
loop
inc
scas
xor
cs
jle
inc
xor
pop
mov
cdq
fiadd
sub
fdivr
(bad)
sahf
push
lahf
push
(bad)
push
push
and
cmp
(bad)
mov
in
ins
push
push
push
mov
cli
or
or
loop
es
and
sub
test
adc
cmovnp
test
mov
mov
mov
bound
xchg
pushf
dec
nop
fwait
pop
dec
ins
push
inc
ret
pop
stos
cmp
jmp
ja
(bad)
sbb
adc
in
jecxz
aas
and
movs
sub
sub
cwde
and
jno
(bad)
test
cmp
cdq
xchg
aaa
cmps
fcom
mov
pop
mov
fucomp
fnstsw
xchg
mov
cmp
push
xchg
sahf
jecxz
jg
call
dec
push
cmp
pop
js
imul
sub
(bad)
jp
ins
fisttp
test
mov
aas
aas
mov
adc
jae
push
daa
fcom
add
(bad)
fwait
or
xchg
jne
int
test
ficomp
gs
pop
fsubr
xor
bound
fimul
mov
sub
movs
imul
jmp
cmp
addr16
xchg
nop
les
in
lods
retf
fld
jbe
xor
push
mov
(bad)
test
bound
add
hlt
lds
pusha
jnp
fs
je
xchg
int3
add
inc
add
lea
sub
(bad)
lahf
sbb
jp
add
xor
repnz
jae
fld
mov
stc
dec
xchg
dec
das
iret
(bad)
cmp
mov
sbb
fistp
push
repz
sbb
stos
scas
movs
div
pop
or
xchg
(bad)
enter
push
xor
jnp
pop
inc
mov
les
xor
addr16
mov
iretw
or
mov
mov
int
sbb
das
or
sub
out
xchg
stos
dec
call
std
jl
(bad)
fwait
stos
and
mov
dec
add
mov
(bad)
int3
sbb
cmp
(bad)
mov
int3
sbb
stos
inc
cmp
int
in
dec
push
mov
sbb
mov
dec
adc
xchg
jp
mov
movs
jg
push
lock
dec
jb
in
repnz
and
jno
pop
jecxz
out
sahf
loop
cmp
xchg
sbb
jae
push
lods
jnp
(bad)
lods
adc
or
pusha
pop
sub
test
lods
and
jb
neg
iret
mov
shl
dec
jo
mov
in
xor
out
fistp
(bad)
mov
scas
cmps
jb
stos
pop
inc
(bad)
cmp
fnstsw
cmp
add
in
mov
adc
jno
int3
push
dec
cwde
ins
jmp
mov
lock
cmc
(bad)
arpl
dec
cwde
inc
sbb
packuswb
push
cmc
xchg
js
dec
inc
cli
jae
sar
cld
jae
icebp
sti
ja
pop
adc
sub
or
imul
ret
repz
loopne
bound
ja
xor
cmps
sub
std
call
call
stos
jg
jecxz
out
mov
out
lods
mov
dec
or
cmp
xor
mov
rcl
shl
out
in
jae
xor
xor
sbb
int3
aaa
stc
cmc
js
jge
(bad)
pop
(bad)
or
add
sbb
jnp
cmp
mov
outs
sub
xchg
or
mov
mov
in
lahf
(bad)
out
popa
and
cmps
pop
jg
or
jno
cmp
addr16
and
mov
or
jmp
lods
movs
push
xor
pop
xlat
(bad)
mov
int3
sbb
ins
pop
cs
in
repnz
xor
loope
dec
sub
scas
shr
sbb
jmp
and
mov
push
inc
inc
dec
cmp
test
imul
xor
pushf
aas
aas
test
pop
aam
ret
int3
(bad)
cld
(bad)
nop
xchg
xchg
mov
mov
push
into
test
add
or
xor
(bad)
xchg
dec
jbe
inc
jge
or
mov
cmp
mov
stos
rol
ds
pop
das
sbb
call
sbb
and
bound
out
pop
push
aam
or
aad
cdq
and
mov
and
dec
sub
jmp
aad
jp
(bad)
stos
pop
mov
cdq
inc
mov
mov
xchg
xchg
popa
sub
adc
aam
and
mov
push
fwait
es
dec
in
and
sub
or
push
in
jg
test
dec
loop
loopne
mov
cs
loope
sbb
hlt
and
cmp
(bad)
dec
dec
add
or
sbb
mov
mov
xchg
jne
scas
inc
push
test
push
sbb
lods
mov
fidivr
mov
adc
es
test
in
cld
mov
(bad)
repz
jmp
outs
jbe
adc
out
fcomp
sbb
retf
jae
mov
xor
cs
or
xor
mov
std
sub
out
add
ret
ss
mov
jns
(bad)
call
or
ss
inc
in
sub
inc
imul
adc
xchg
and
lock
lea
xor
push
loope
retf
jb
test
jecxz
add
add
stos
lea
pop
jl
ret
pop
pusha
adc
test
add
cmp
push
xor
mov
pop
mov
stos
xor
jo
iret
pop
jmp
test
and
bound
sbb
test
mov
ss
or
sbb
repz
mov
cli
out
mov
jg
push
mov
jge
shl
sahf
out
inc
lock
fadd
fwait
mov
cmp
lock
iret
adc
jmp
iret
and
sub
mov
adc
mov
dec
pop
inc
ss
loopne
mov
bound
jno
test
mov
cwde
jmp
and
cmps
ret
xchg
jbe
pop
mov
pop
and
or
cmp
sbb
mov
call
leave
in
add
jno
les
pop
pop
lahf
fwait
repz
sub
test
out
or
inc
clc
int
cmp
ins
ror
sub
dec
push
fldcw
nop
mov
fsubr
mov
push
in
(bad)
shl
mov
(bad)
shl
imul
inc
gs
mov
inc
mov
test
fdivr
pop
cmp
cli
mov
ror
cli
call
rcl
push
push
pusha
loopne
sub
push
lahf
loope
xchg
add
call
fld
loop
or
scas
mov
call
xchg
adc
iret
sub
jbe
out
scas
push
pop
hlt
push
sbb
push
or
xchg
stos
scas
jg
(bad)
and
mov
test
jbe
inc
fldcw
fs
pop
adc
sub
fist
xchg
nop
adc
stc
(bad)
dec
call
sbb
daa
cdq
and
daa
mov
pop
ins
retf
mov
pop
jns
inc
lahf
jmp
aam
cwde
rcl
cmc
push
adc
jne
(bad)
(bad)
jo
jo
pusha
xchg
sub
mov
dec
je
jb
fcmovnb
sub
dec
push
shr
popa
test
mov
push
bound
in
nop
push
fld
out
ja
test
loop
sbb
jae
and
jbe
pop
mov
mov
xor
or
dec
mov
into
es
jl
adc
jns
pop
dec
and
jp
(bad)
sub
lea
jge
std
and
jmp
push
and
sbb
mov
mov
ret
adc
mov
jbe
jecxz
cmps
push
mov
lock
pop
jecxz
fistp
in
je
inc
mov
cld
stos
loope
xor
ja
cld
stos
mov
pop
fstp
mov
dec
push
mov
movs
sub
mov
lods
mov
cmp
jmp
inc
jne
xor
pop
jnp
or
jo
adc
sub
int
loopne
dec
pop
mov
ja
xchg
bound
sub
mov
loop
push
add
mov
xchg
xchg
fmulp
ret
jns
rcl
add
jge
cld
add
pop
inc
pop
pop
retf
(bad)
leave
(bad)
adc
enter
js
out
sti
lahf
aas
sahf
cmp
ret
dec
push
pusha
in
mov
cmp
jmp
adc
cvtps2pd
xlat
pop
sub
jne
neg
cmp
idiv
jns
repnz
push
sbb
mov
add
jmp
inc
movs
mov
push
and
hlt
in
mov
outs
jne
aad
out
mov
mov
or
cdq
fst
and
sbb
sub
xchg
hlt
test
mov
push
or
dec
icebp
sub
dec
pop
popa
or
inc
mov
push
(bad)
mov
arpl
inc
int
pop
test
pop
and
or
out
xchg
rcr
xor
cld
pusha
js
pop
mov
aaa
int
xor
fprem
mov
stc
stos
fs
call
stos
cmp
pop
and
fsubp
mov
(bad)
mov
aam
mov
or
loope
dec
gs
sbb
hlt
popf
mul
fs
fcom
pop
mov
sbb
popf
(bad)
or
std
and
add
dec
scas
icebp
sbb
sahf
or
retf
fisttp
pop
add
cmp
xor
aam
mov
adc
leave
xchg
sbb
add
and
stos
scas
inc
jmp
dec
add
stc
(bad)
jmp
xlat
sub
jmp
jno
fs
aad
aas
test
lea
pop
xchg
retf
mov
push
xlat
retf
adc
shl
xor
jmp
adc
out
aad
(bad)
out
mov
sbb
sub
cmc
in
or
jb
push
ds
(bad)
dec
push
push
mov
jne
adc
xlat
sub
inc
cmp
mov
pop
icebp
stos
stos
jb
(bad)
fidivr
cmp
cmp
dec
data16
pushf
sub
nop
inc
mov
sti
sbb
sub
pop
sbb
ja
mov
sbb
mov
push
imul
jno
dec
dec
ds
mov
mov
push
mov
bound
pop
inc
retf
cwde
and
sub
pop
ins
mov
pop
rcr
dec
aaa
repz
in
scas
jmp
fimul
ss
and
push
mov
cs
and
loopne
adc
dec
out
into
fst
cmp
push
shr
enter
pop
fs
push
xor
push
shl
in
push
cdq
sbb
mov
mov
ret
fiadd
push
arpl
push
mov
hlt
retf
test
call
(bad)
push
pusha
push
int
jbe
mov
(bad)
out
leave
les
xchg
mov
xor
mov
and
inc
pop
lock
shr
pop
sub
dec
lea
and
jae
je
loope
mov
jne
(bad)
or
fisub
lock
pusha
jno
xchg
xor
(bad)
(bad)
adc
imul
leave
hlt
fst
mov
and
xlat
pop
stos
jbe
rol
aam
sti
sbb
sub
add
retf
call
dec
jne
imul
(bad)
and
ret
ror
adc
push
nop
cmp
movs
(bad)
pop
jns
and
xchg
jmp
push
adc
pop
adc
fs
pop
adc
cmp
xor
js
inc
loop
rol
nop
mov
mov
clc
jmp
mov
data16
aam
or
xchg
adc
loop
push
dec
cmps
mov
lds
jmp
jo
loope
inc
(bad)
push
test
jle
and
pop
push
sbb
out
pop
data16
or
test
test
sub
cs
je
jmp
std
xor
dec
inc
adc
pop
ins
jg
out
iret
push
(bad)
cs
loop
xchg
mov
pop
dec
inc
test
mov
xchg
ficomp
jge
and
xor
sub
retf
dec
cmps
aad
jno
mov
add
mov
cmp
arpl
cmp
cmp
jno
rep
and
scas
jo
mov
lock
pop
and
ds
cmp
test
mov
inc
icebp
xlat
das
inc
mov
xor
add
es
jl
and
adc
dec
mov
xor
push
sbb
dec
into
mov
addr16
into
push
pop
ret
dec
mov
fcomp
xchg
int3
pop
(bad)
movs
lea
cmc
jge
push
adc
movs
rcl
jne
out
xlat
lahf
mov
into
pop
jle
ror
xor
mov
(bad)
out
pop
ja
mov
xchg
xchg
sbb
hlt
stos
adc
leave
mov
jmp
xor
xor
sub
dec
neg
pop
call
jp
xor
(bad)
fnsetpm(287
jmp
mov
xchg
addr16
pop
retf
inc
rcl
call
fcomp
adc
(bad)
xor
push
adc
add
xchg
shr
adc
jl
sbb
stos
fnsave
or
inc
mov
sub
sbb
ror
daa
jecxz
(bad)
out
in
not
jb
lds
(bad)
jg
call
aaa
and
ins
frstor
cmp
jb
rcl
adc
dec
mov
add
sbb
iret
gs
shl
mov
loopne
and
not
imul
mov
stc
cmp
cmp
mov
mov
hlt
pop
mov
jmp
mov
or
jo
retf
cdq
dec
xchg
xor
cmp
inc
int3
cmc
ja
cmp
add
mov
xchg
cs
aas
sbb
cwde
int3
push
fiadd
lds
repnz
mov
test
jmp
rcr
hlt
cmp
pop
mov
pushf
pop
lds
cmps
xchg
arpl
neg
pop
sbb
pop
aad
nop
test
cmps
adc
push
pop
scas
jl
mov
cmp
loope
mov
push
xchg
repz
iret
and
mov
dec
mov
mov
call
jo
push
push
dec
popf
sbb
push
sbb
cmc
mov
cmp
xchg
ss
mov
or
mov
shl
(bad)
mov
sti
sbb
mov
lds
push
jl
jecxz
scas
inc
push
dec
inc
and
int
mov
call
jge
jp
not
test
mov
enter
dec
aas
imul
fdivr
xchg
mov
push
aad
imul
jmp
adc
pop
mov
xchg
xchg
push
sbb
jmp
mov
fsub
jp
or
into
xor
int
jg
call
out
loope
cmp
fsub
dec
mov
call
mov
fld
jmp
fxch
mov
cdq
sar
xor
imul
sub
sbb
test
fwait
xchg
dec
jnp
mov
push
mov
jnp
or
(bad)
pop
xor
nop
jl
(bad)
aaa
rcl
cmps
out
loope
or
in
xchg
mov
xchg
jnp
sbb
out
xor
jl
jae
in
sbb
sbb
adc
out
lahf
cmp
out
push
fisttp
jp
mov
dec
sbb
mov
cs
clc
push
sbb
retw
clc
jl
div
into
int3
pop
pop
pop
xor
adc
imul
int3
or
call
jnp
loope
push
push
xor
test
sub
dec
shl
adc
out
(bad)
mov
mov
xor
stc
pop
add
je
inc
and
mov
aas
push
sbb
pop
xchg
push
push
loope
adc
pushf
jns
mov
inc
call
stos
ret
mov
stos
and
stos
mov
enter
mov
cmp
(bad)
repz
fs
cdq
loop
push
cmp
mov
jne
bound
js
loop
xor
xchg
fadd
and
xor
inc
test
movs
sbb
aaa
or
arpl
sub
sti
xor
push
sub
gs
pushf
mov
mov
retf
test
adc
mov
or
and
aaa
ror
sub
jno
xchg
call
nop
mov
ror
ja
ret
dec
mov
jnp
mov
or
and
jmp
nop
cdq
lock
push
add
xor
rol
push
shr
or
arpl
or
cmp
inc
repz
fiadd
sub
sahf
mov
mov
adc
movs
and
cs
push
inc
push
dec
xchg
push
mov
pushf
(bad)
adc
mov
push
pusha
aad
cmc
inc
rcr
mov
arpl
jmp
xchg
data16
gs
mov
push
jo
sbb
xor
out
int
mov
xchg
pop
push
cmc
mov
mov
jg
jmp
scas
(bad)
mov
es
ja
fcmovnb
jecxz
(bad)
push
mov
xchg
push
dec
stos
mov
sub
nop
cli
or
inc
xlat
adc
inc
adc
push
mov
pop
int
imul
cmps
lea
adc
jb
adc
cmp
std
(bad)
faddp
or
repz
inc
and
inc
in
lds
cwde
outs
std
addr16
ins
outs
leave
pop
cmp
(bad)
cmp
je
inc
pop
daa
xor
xchg
sbb
add
or
dec
jno
pop
imul
xor
xor
pusha
xchg
lds
test
dec
nop
aaa
sub
loope
mov
fild
or
cmps
fldenv
popf
mov
jns
inc
loope
movs
xchg
mov
mov
xchg
ja
fld
outs
push
jmp
movs
shl
enter
bound
test
and
xchg
cmp
jg
gs
(bad)
sbb
out
(bad)
mov
sbb
enter
gs
inc
mov
fst
and
push
rol
mov
daa
mov
loop
xor
fistp
out
(bad)
sub
sub
adc
lock
mov
enter
xchg
in
xor
in
sbb
and
cwde
fldenv
jmp
and
hlt
int3
sar
push
or
xchg
and
(bad)
jle
imul
popf
sub
fadd
(bad)
or
mov
jb
jp
push
arpl
jnp
jno
sbb
adc
fwait
dec
mov
(bad)
stc
dec
sahf
mov
shl
xchg
neg
push
cmp
mov
clc
xchg
mov
ficom
or
or
or
dec
or
test
cli
je
xchg
mov
jge
mov
fcomp
add
mov
or
ss
cmp
mov
inc
js
in
call
mov
jp
mov
test
jae
ret
dec
mov
pop
pop
cmc
fcomp
sbb
movs
and
shld
test
mov
adc
(bad)
cwde
mov
sub
mov
push
mov
mov
and
and
inc
inc
sbb
sub
(bad)
push
pop
int
rol
outs
stos
add
cmp
push
shr
(bad)
cmp
or
out
xor
fucomp
fnstenv
mov
cmp
mov
loop
hlt
mov
mov
jbe
jne
jno
pop
rcl
mov
ror
in
cdq
or
push
ds
retf
sub
xor
loop
dec
stc
rcr
aad
ins
(bad)
pop
cmc
ds
or
push
popf
fs
nop
adc
sbb
movs
mov
js
mov
push
test
jns
sub
lods
add
mov
test
xor
mov
or
loop
push
repz
sub
sbb
movs
dec
cmps
push
mov
xchg
jae
mov
inc
(bad)
aaa
inc
or
xor
mov
loop
pop
je
jnp
ss
iret
outs
jno
lods
cmps
push
jns
sub
pop
cmp
cmp
mov
and
mov
mov
jmp
add
and
lods
cli
add
jle
dec
mov
cmps
ins
and
stos
into
cdq
lods
cmp
mov
outs
inc
ins
out
test
mov
pop
push
(bad)
std
sbb
mov
push
xchg
jmp
push
push
dec
fwait
mov
sub
movs
mov
mov
mov
mov
out
movs
stc
pop
sub
imul
and
mov
ins
mov
cmps
push
pop
jmp
xchg
pushf
jmp
repnz
or
test
sbb
scas
inc
sub
sbb
or
and
mov
nop
push
or
inc
ret
push
neg
lods
lods
in
imul
or
sbb
add
cmc
in
retf
aad
mov
retf
mov
push
xchg
test
aas
pop
das
sbb
and
sti
or
fsubr
or
shl
fdiv
repnz
fdiv
xchg
shl
mov
ffreep
mov
mov
int
movs
outs
dec
test
iret
mov
enter
arpl
mov
daa
fisttp
mov
in
sub
mov
dec
push
sbb
test
xchg
dec
dec
pop
sbb
shl
out
sar
call
(bad)
adc
ins
test
mov
add
sbb
(bad)
jmp
into
sub
cli
cmp
and
lea
sbb
jmp
add
mov
mov
ror
add
test
nop
xchg
out
mov
xor
stos
es
loop
lds
adc
arpl
pop
cwde
mov
or
jbe
sbb
sbb
fdivp
out
inc
outs
cmp
(bad)
vpunpckhwd
add
xchg
out
sbb
mov
lods
xor
jecxz
or
cli
enter
sub
adc
shl
mov
and
into
xor
enter
sub
mov
xor
dec
cs
(bad)
iret
mov
sbb
jmp
daa
xchg
in
jl
xchg
sub
fisttp
sub
dec
arpl
mov
call
xchg
popf
imul
mov
inc
shl
stos
cmp
mov
dec
cmp
adc
imul
pop
dec
pop
jg
xchg
mov
test
ret
leave
push
iret
popf
imul
inc
mov
out
push
xor
aas
inc
in
stos
je
and
mov
adc
sbb
xor
sar
mov
stos
inc
cmp
sub
rcl
fisttp
ret
mov
inc
add
jnp
out
mov
adc
fsub
pop
dec
cli
sub
add
xor
dec
push
lahf
das
jge
fs
dec
mov
leave
mov
mov
xor
xchg
scas
stos
pop
dec
test
add
cmps
aas
popa
scas
push
call
mov
and
mov
mov
xor
jno
jno
add
mov
jns
jno
cmp
jne
xor
cmp
das
adc
jle
sti
addr16
iret
jno
fmulp
enter
dec
cmp
popa
mov
imul
in
das
cs
jno
loop
les
cld
repnz
mov
dec
int
mov
aad
pop
xchg
xchg
arpl
or
push
and
out
mov
ret
xchg
ret
je
aad
hlt
and
mov
icebp
mov
pop
mov
dec
add
(bad)
adc
loope
mov
push
push
pop
(bad)
es
fwait
jns
cli
call
mov
mov
cmps
adc
fld
scas
fisttp
enter
pop
ds
sar
and
pop
mov
addr16
aaa
inc
inc
nop
sub
cmp
icebp
pop
inc
push
fadd
dec
neg
(bad)
adc
dec
into
in
sbb
shl
push
lahf
adc
pop
xor
sub
add
imul
cdq
xor
cmp
inc
pusha
repz
(bad)
fld
or
mov
ins
dec
rcl
lock
jo
ret
repz
or
sub
test
ds
push
and
xor
fmul
pop
cli
jecxz
pop
bound
stos
inc
pop
push
jp
push
adc
aam
dec
adc
xchg
inc
or
sbb
xor
xchg
and
sar
cmps
sbb
dec
inc
xor
xor
loope
popf
xchg
das
daa
shl
sti
dec
cwde
dec
pop
cmp
lds
dec
out
lea
push
fst
and
xor
xchg
xor
aaa
inc
lods
and
ins
hlt
mov
sbb
sbb
adc
arpl
pop
jae
sti
push
and
cmps
in
dec
ficom
pop
imul
cmp
lods
or
sbb
fild
pop
popa
cmp
xchg
sub
loopne
sbb
in
retf
loope
sub
xchg
cmp
test
cli
push
(bad)
xchg
push
add
(bad)
shl
jge
lock
xor
in
push
dec
adc
test
aaa
mov
je
test
mov
jmp
xor
add
int
dec
int3
and
mov
(bad)
popf
cli
(bad)
ja
out
stos
mov
jmp
shr
cmp
movs
sub
cwde
inc
mov
outs
jge
loopne
mov
cmp
cmp
jecxz
outs
and
inc
ficomp
xor
ins
shl
rcr
xchg
fmul
fcom
cmp
shr
sbb
std
pop
pop
ins
aam
loop
call
inc
dec
mov
imul
loopne
stos
adc
jnp
das
in
aas
ins
adc
or
addr16
and
mov
sub
jle
adc
xor
test
into
outs
and
add
cld
add
xchg
mov
xchg
or
pop
sti
retf
call
in
js
retf
add
(bad)
xchg
adc
mov
dec
jmp
ficom
icebp
out
jb
jb
pop
push
mov
pop
fdiv
jl
dec
inc
mov
or
and
xchg
fwait
cmp
or
mov
xlat
sbb
ins
xchg
push
pop
mov
adc
adc
adc
movs
inc
xchg
in
jge
fst
rcr
lahf
int
push
mov
fidiv
adc
data16
inc
imul
icebp
jne
test
mov
xchg
and
push
adc
not
int
push
mov
sub
mov
aad
stc
sub
add
std
in
mov
jge
cmp
and
data16
cmp
push
fld
cmp
addr16
pop
jo
add
repnz
push
call
push
add
jne
mov
sub
push
adc
rol
jne
out
inc
xchg
push
xor
fs
dec
jno
cmp
stc
cmp
shl
arpl
pop
dec
fucom
mov
sahf
push
cmp
fwait
int
add
pop
mov
rol
dec
jg
xor
scas
test
(bad)
adc
shr
mov
sub
mov
stos
jb
fadd
bound
cwde
cmp
sub
adc
pop
jl
xchg
push
scas
inc
xor
jnp
imul
jo
ficom
jbe
mov
gs
inc
adc
push
mov
lds
or
ins
add
ret
sbb
stos
(bad)
adc
mov
xchg
inc
data16
jnp
je
(bad)
add
adc
movs
mov
aas
jl
jecxz
xlat
ins
add
rcl
inc
leave
sub
sahf
jge
xchg
jl
dec
add
scas
push
jmp
xor
sub
sub
movs
in
add
mov
fmul
mov
addr16
push
mov
bound
outs
cmp
call
stc
out
jmpw
(bad)
mov
scas
sbb
xchg
jge
loope
cmc
jle
stc
sbb
pushf
outs
push
inc
or
cmc
je
dec
push
test
xchg
fldpi
xlat
rcl
mov
sbb
inc
aad
js
movs
xchg
sub
popf
cli
leave
jmp
add
cmp
xchg
rcl
mov
mov
jns
rcl
or
das
je
xchg
mov
data16
je
dec
xchg
jecxz
inc
jge
lods
push
aas
pop
inc
xchg
jmp
out
inc
inc
push
icebp
dec
(bad)
fimul
bnd
cld
in
not
sbb
iret
cdq
adc
loope
push
add
sbb
cmp
xchg
xor
dec
mov
mov
pop
and
add
mov
xchg
push
pop
cdq
fidivr
dec
adc
sub
jmp
inc
pop
ss
std
pop
cs
sub
mov
xchg
or
xlat
ror
mov
test
cmp
shl
xchg
mov
mov
fmul
add
jl
cmp
ins
popa
xchg
and
pop
sbb
mov
pop
jo
mov
sbb
jg
add
pop
inc
mov
call
sub
dec
(bad)
pop
jl
cmp
sbb
mov
pushf
push
lahf
adc
mov
sbb
adc
outs
jmp
stos
stos
push
loop
jae
fidivr
into
mov
sub
ds
lods
inc
add
or
xchg
fild
retf
inc
inc
(bad)
jmp
fdiv
psubsw
jmp
imul
add
call
adc
pop
fidivr
outs
pop
pushf
lahf
shl
cmp
les
(bad)
adc
xchg
(bad)
xor
imul
jne
(bad)
ds
aad
push
mov
xchg
fisttp
xchg
mov
das
add
push
push
sbb
mov
xor
add
and
cmps
out
xchg
test
cmp
je
ds
mov
lods
mov
pop
in
mov
aad
in
pop
enter
push
(bad)
ins
push
adc
jbe
imul
leave
push
movs
cmps
cmp
retf
ss
(bad)
xor
out
push
popf
(bad)
(bad)
loope
loopne
cmc
bound
int
xor
pop
ficom
js
pop
lods
adc
fs
push
sbb
and
or
add
sbb
adc
outs
xor
mul
out
xchg
or
inc
jae
loopne
mov
sbb
jb
cld
fisub
lods
jmp
or
cmps
shl
mov
(bad)
out
and
lods
imul
push
hlt
adc
(bad)
stc
xor
add
lahf
cli
pop
pop
loope
ror
fdivr
and
into
je
aam
loop
lds
jp
sbb
in
pop
mov
cld
adc
add
lds
bound
xchg
cmp
stc
push
lahf
jns
pushf
mov
lea
dec
or
(bad)
push
subps
push
push
inc
stc
xchg
sbb
jmp
ja
cmp
stc
sbb
and
cmp
test
jno
cmp
cwde
jl
pushf
lock
enter
jge
mov
es
into
and
mov
push
push
fst
sahf
in
sar
addr16
enter
xor
lea
test
pop
mov
mov
aam
add
inc
cmp
xchg
test
sbb
xor
and
inc
test
cmp
sbb
mov
sbb
mov
inc
xor
aas
or
data16
or
dec
fisttp
test
xor
js
pushf
test
jb
or
mov
les
inc
in
add
xchg
or
jne
sbb
sub
into
sub
rcl
push
jl
in
imul
mov
jp
arpl
hlt
xchg
mov
xchg
add
cmp
xor
mov
xor
mov
xchg
adc
xchg
push
inc
xor
std
add
xchg
push
inc
jle
push
daa
fsub
mov
aaa
push
dec
and
mov
sub
push
inc
cmc
inc
push
cwde
mov
adc
pop
pusha
fimul
rcl
cmp
lahf
cmp
adc
jbe
xchg
jmp
nop
ror
cmps
loop
test
fs
cld
jmp
and
out
int3
lds
mov
jnp
ins
and
call
loop
ret
pop
push
sahf
(bad)
jmp
bound
sub
out
retf
sbb
mov
jge
std
fld
not
imul
pop
and
leave
lock
ror
out
nop
call
fild
loopne
cs
push
adc
jle
jns
or
mov
stos
fucomi
or
mov
push
and
mov
jle
cmp
mov
(bad)
rcr
bound
adc
mov
shl
ja
ins
retf
iret
ins
xchg
mov
push
neg
push
and
sub
fdivr
add
retf
jmp
sub
mov
or
arpl
cmp
xor
lds
aas
cmp
fild
imul
mov
sbb
out
ret
xlat
xchg
adc
add
sub
pop
pop
cli
pop
aam
jne
and
jne
popa
retf
das
or
sbb
push
imul
daa
xchg
xchg
inc
jbe
movs
fcomp
mov
and
lods
(bad)
out
adc
dec
movs
out
daa
fimul
jmp
pusha
aam
sub
(bad)
mov
stos
and
ss
cmp
inc
cmps
aam
pop
adc
cmp
dec
pop
ret
shl
dec
scas
push
lods
fdiv
fwait
shl
and
push
xchg
jp
ja
lods
icebp
cmps
mov
jecxz
pop
mov
fild
fs
js
or
test
xchg
add
lods
push
xchg
cs
push
adc
xchg
call
imul
push
push
fcmovu
(bad)
into
push
fwait
dec
mov
push
mov
jno
xchg
enter
lahf
jne
pop
push
shr
imul
mov
fild
mov
call
push
loope
(bad)
(bad)
cld
mov
call
sbb
dec
jl
add
adc
imul
lods
adc
ret
jbe
xchg
push
aam
and
xchg
xor
sub
gs
out
lods
jg
les
popf
sti
xor
xchg
jb
mov
std
or
jp
push
add
in
ds
dec
imul
xchg
imul
adc
in
inc
loop
(bad)
into
ds
pop
test
pop
fld
push
outs
dec
popf
dec
and
(bad)
fdiv
jmp
pop
pop
add
je
mov
jae
pop
enter
frndint
ins
lods
ret
ret
jnp
les
jbe
hlt
jecxz
mov
mov
push
clc
push
mov
push
retf
push
mov
push
mov
mov
and
outs
les
sub
and
jmp
js
push
mov
xlat
clc
jno
dec
xlat
imul
sysret
rcl
lds
rcr
adc
cmp
sub
lock
psrlq
mov
mov
ins
rol
mov
bound
xchg
iret
outs
cmp
push
daa
add
pop
cmp
es
sbb
test
call
popa
dec
adc
pop
je
lock
(bad)
cmp
inc
jb
jbe
push
stos
pop
jno
sahf
call
xlat
out
push
sbb
das
and
xchg
xor
xor
xor
inc
cmp
mov
or
jg
scas
cmc
and
les
dec
retf
and
xor
cwde
pop
sbb
outs
cmc
enter
bound
mov
enter
sub
test
jb
bound
mov
shr
push
hlt
push
popf
inc
xchg
jl
mov
or
xchg
imul
pop
jnp
cwde
fwait
cmps
xchg
push
or
addr16
cmps
or
xlat
popf
lock
dec
test
xor
fnstsw
aam
or
gs
stc
mov
loop
test
add
xchg
pop
rcr
pop
pop
gs
pop
inc
fcos
pop
push
bound
inc
ret
inc
je
lods
test
popf
iret
and
jb
cwde
mov
inc
jo
or
gs
mov
xchg
inc
fsub
xor
jb
push
cmp
sar
les
sbb
gs
mov
cld
jns
shl
push
retf
push
xchg
mov
ds
and
cwde
aaa
int3
mov
icebp
js
pop
inc
inc
adc
cld
bound
xchg
cld
adc
dec
test
arpl
xchg
mov
dec
ins
pop
xchg
cdq
ins
into
or
into
js
jmp
ins
sub
adc
repz
retf
pushf
push
mov
outs
enter
jecxz
pop
sbb
das
xor
arpl
popa
les
test
add
les
lods
xchg
mov
inc
(bad)
mov
(bad)
adc
mov
inc
aam
cwde
inc
mov
jmp
fwait
lock
cmp
add
in
or
out
cwde
jb
(bad)
push
jmp
xchg
pop
adc
pop
adc
lahf
adc
push
(bad)
(bad)
push
cld
jno
and
cmps
push
mov
call
ja
(bad)
imul
js
adc
jnp
push
out
les
loopne
js
pusha
popa
hlt
fmul
scas
jb
inc
xchg
sbb
adc
fnstcw
cmp
mov
xor
xchg
add
mov
jns
adc
mov
xor
stos
mov
lock
outs
fs
cmp
pop
xlat
cmp
fadd
add
lahf
push
mov
and
inc
popf
shrd
jb
pop
mov
jne
push
test
daa
xchg
push
add
push
js
dec
xor
(bad)
jp
int
(bad)
pop
or
jge
mov
mov
mov
pop
js
add
int
cs
cdq
inc
add
push
inc
fadd
stos
cmp
xor
sbb
fs
xor
cmp
mov
push
pop
adc
fadd
cs
pushf
cmp
pop
and
fidivr
dec
aaa
shl
pop
pop
jmp
mov
fcmovnu
mov
mov
clc
push
(bad)
jbe
scas
pop
adc
js
daa
mov
sbb
and
mov
jle
push
sub
data16
shr
adc
adc
shl
cdq
test
cmovb
jmp
mov
cld
pop
cld
mov
mov
inc
add
cmp
sbb
cmp
ret
jae
fdivr
loope
sub
pop
fcmovnbe
dec
in
mov
jnp
ds
outs
and
loope
inc
pop
jl
add
pop
dec
jne
(bad)
call
inc
int
sbb
ins
pop
iret
inc
iret
ret
mov
lods
sbb
aas
mov
pop
imul
jmp
out
arpl
xchg
call
int3
push
pop
fnstcw
mov
jo
out
inc
push
fwait
and
ins
shl
rol
popf
jbe
cmps
add
pop
pop
rcl
or
add
cmps
pop
xor
leave
ds
cmps
aaa
jmp
jmp
sti
ja
xchg
mov
popf
outs
push
add
mov
stos
jge
mov
int
outs
adc
jno
ins
push
out
sub
mov
ss
test
sti
ret
mov
ins
cmp
add
in
jl
imul
int3
xor
mov
sbb
xchg
das
loopne
xchg
out
mov
sbb
sbb
ins
ja
inc
cmp
inc
add
push
sub
and
jg
es
pop
sbb
xor
dec
push
adc
scas
mov
andps
fsub
push
add
sbb
jg
lds
jmp
jl
xchg
mov
(bad)
and
sbb
mov
sahf
shl
mov
jge
jo
shl
mov
outs
jle
xchg
inc
and
inc
xchg
cwde
push
lds
sub
hlt
jns
mov
inc
int3
sbb
push
mov
sub
movs
add
push
nop
jmp
xchg
mov
out
mov
stos
daa
xchg
jns
mov
xchg
ins
push
sti
fcmovnbe
(bad)
ja
fwait
scas
retf
sbb
xchg
inc
adc
(bad)
hlt
ja
sti
cld
popa
dec
dec
add
or
pop
xchg
add
xchg
aaa
mov
cmp
mov
cmp
adc
cdq
daa
in
scas
pop
pop
push
xor
in
pop
pop
imul
(bad)
mov
jmp
mov
(bad)
push
xchg
push
out
nop
or
das
ja
or
mov
aad
call
imul
dec
je
cmp
int
imul
scas
lods
dec
jne
sub
mov
cdq
mov
xor
mov
(bad)
into
cmp
loope
jmp
cmp
jmp
inc
not
mov
xchg
ins
std
sub
add
jmp
out
stos
outs
push
or
mov
pop
je
clc
mov
repz
loop
shl
dec
sbb
scas
adc
lock
(bad)
cmp
pop
mov
and
add
inc
mov
outs
jns
dec
inc
sbb
push
push
dec
dec
inc
(bad)
mov
dec
cmp
or
test
out
pop
inc
pop
rol
xchg
sub
mov
rol
jg
adc
cld
cmps
fstp
or
imul
mov
pop
mov
jmp
cwde
addr16
stos
rcr
pusha
mov
xchg
aas
sbb
pop
dec
jb
xchg
repz
leave
cmc
pop
push
es
aam
jmp
pop
push
shr
and
pop
jle
je
retf
adc
sub
and
push
mov
mov
sbb
mov
outs
dec
movs
mov
outs
sub
add
mov
outs
mov
mov
add
pop
into
je
add
inc
sbb
sbb
ins
lds
fsubp
pop
xchg
sbb
rol
cli
mov
sub
sub
push
sbb
in
xchg
and
cmp
call
test
sub
mov
sub
es
call
pop
scas
sar
mov
imul
adc
lods
cmp
pushf
arpl
add
pop
cld
hlt
in
inc
movs
jle
sahf
ret
inc
xcrypt-ecb
cmps
retf
sub
nop
and
out
push
sti
push
dec
mov
retf
xchg
inc
fild
test
dec
adc
cmp
mov
pop
push
test
aam
jne
pop
xor
lods
jae
int3
mov
bound
inc
fsub
push
mov
test
cmp
add
in
js
mov
add
(bad)
mov
or
cli
push
aam
(bad)
sbb
push
push
shr
mov
mov
outs
sti
xchg
cmp
xchg
mov
push
test
cmp
leave
cmp
dec
jbe
outs
ret
(bad)
dec
lahf
adc
inc
sbb
and
pushf
mov
scas
rcl
inc
jmp
enter
sub
scas
mov
stc
push
xlat
mov
retf
jbe
mov
ins
movs
mov
cmc
mov
or
call
adc
xor
xchg
cmp
lock
sub
popf
and
push
outs
arpl
cli
test
cdq
mov
jmp
lods
mov
out
mov
aaa
in
mov
mov
sub
sbb
inc
test
and
mul
ss
and
xchg
mov
adc
fsub
and
ins
or
dec
(bad)
add
and
popa
mov
jno
mov
test
outs
jo
das
call
xor
pop
inc
sbb
pop
mov
mov
rcr
push
xchg
xchg
mov
leave
les
dec
int3
call
dec
pop
bnd
aad
dec
jle
sbb
push
scas
mov
push
jb
je
jmp
mov
xchg
ds
or
cmp
dec
jle
nop
push
and
pop
inc
push
sbb
adc
std
cmps
jmp
push
and
fidiv
cmps
(bad)
mov
mov
dec
xor
mov
push
aaa
fistp
mov
sbb
aam
pop
mov
add
scas
cmp
cli
sub
add
repz
cmp
pop
mov
movs
loop
cmp
popa
fldenv
mov
cdq
shr
fisttp
inc
mov
add
ret
pop
jnp
inc
and
aas
xchg
xor
(bad)
xchg
jne
fld
sbb
jns
outs
xlat
inc
movs
cmps
xchg
and
inc
ret
std
push
push
pop
add
(bad)
out
push
in
(bad)
adc
cs
pop
jp
retf
jno
push
aad
(bad)
pop
jge
aad
lds
dec
xchg
and
loope
push
pushf
into
fldcw
dec
shl
mov
dec
jmp
test
in
push
jne
std
mov
and
jb
bound
sbb
pop
cmps
repnz
(bad)
jl
jg
lahf
adc
jnp
pop
pop
ret
push
rcl
xor
imul
inc
bound
aam
adc
jno
mov
in
push
fwait
xchg
mov
ret
scas
xor
jbe
pop
clc
test
push
sub
fsub
call
jge
(bad)
lahf
mov
ss
cmp
push
pusha
sbb
adc
dec
cmc
test
out
stc
or
dec
dec
je
cmps
dec
test
(bad)
sbb
test
mov
(bad)
mov
push
(bad)
or
xor
fstp
pop
mov
and
jbe
aam
repz
lea
mov
(bad)
mov
jmp
or
cdq
fcom
xchg
lods
and
movs
adc
jb
xor
jb
mov
sbb
popf
lea
aad
xor
shr
imul
pop
adc
push
mov
sbb
in
mov
sub
shl
hlt
outs
mov
sub
xchg
sub
retf
fdivr
xor
and
ja
or
loop
pop
pop
cld
loop
movs
sahf
cdq
lods
cmp
gs
mov
dec
push
mov
loope
jmp
cmp
dec
cmp
inc
ret
mov
jbe
push
scas
pop
call
iret
inc
fisub
and
js
call
leave
(bad)
adc
imul
add
inc
xchg
mov
mov
pop
pop
add
inc
push
loopne
stos
push
mov
jmp
icebp
sbb
movs
xchg
add
hlt
outs
or
iret
aam
dec
xchg
call
cdq
add
mov
loopne
inc
mov
ins
pop
inc
shl
and
push
or
jae
and
xchg
adc
add
lods
sbb
int3
sub
jae
jmp
add
nop
sub
push
lahf
in
jne
out
leave
push
mov
xor
(bad)
dec
fsub
mov
sti
inc
push
mov
push
loope
jmp
push
add
cmc
xchg
jae
fnstenv
scas
addps
fistp
shl
icebp
(bad)
ins
push
fmul
cdq
stc
mov
mov
sub
adc
icebp
sub
popa
aam
push
pop
fstp
cmp
(bad)
inc
dec
sub
pop
enter
adc
jnp
fist
fs
and
pop
test
mov
mov
(bad)
jecxz
cwde
inc
mov
or
mov
pushf
mov
ja
cwde
jge
daa
jae
pop
xchg
adc
xlat
bound
ror
and
int
cdq
jae
and
xchg
jg
not
mov
and
inc
cld
fsub
push
jns
clc
adc
push
mov
les
mov
(bad)
pop
jge
addr16
pushf
les
lock
jno
xor
(bad)
loope
fwait
iret
inc
jns
xlat
mov
mov
rcl
ins
adc
in
dec
fisub
fidivr
into
rcr
jp
or
mov
je
aam
pop
jo
jo
xchg
icebp
sbb
and
or
sub
std
add
push
dec
out
lea
jae
jmp
xor
dec
arpl
sub
mov
jb
inc
inc
dec
loopne
inc
in
dec
add
dec
out
cmp
iret
cmp
xchg
lods
cmp
pop
mov
lds
bound
jg
das
push
jno
xchg
call
pop
push
mov
int
push
mov
inc
inc
mov
loopne
pop
icebp
in
sbb
or
pop
popf
sub
jno
retf
sar
adc
sbb
lahf
daa
out
xchg
fwait
test
add
mov
ficomp
cmps
mov
or
mov
adc
xchg
pop
sysenter
adc
push
aam
push
ins
loope
inc
inc
push
adc
cdq
xor
popa
mov
push
or
mov
(bad)
not
mov
xor
push
int3
mov
aas
addr16
fcomp
adc
ss
pop
dec
sub
xor
stos
xchg
sub
clc
or
mov
call
(bad)
or
iret
inc
ja
leave
loope
into
jbe
scas
gs
mov
iret
push
scas
pop
xor
adc
sbb
icebp
cmp
cwde
out
push
scas
out
ins
cmc
scas
rcl
and
and
sub
jecxz
rcr
fcom
adc
arpl
xor
retf
mov
pusha
mov
sbb
cmp
pop
mov
dec
enter
or
das
imul
and
adc
mov
jae
in
fs
mov
lahf
retf
xor
scas
out
repnz
sub
sub
inc
stc
push
daa
fwait
jo
scas
mov
jbe
jo
pop
(bad)
outs
cmp
cmp
dec
out
enter
outs
jb
dec
outs
(bad)
push
int
xor
das
and
sub
data16
cwde
imul
xchg
clc
mov
sub
loop
mov
and
(bad)
cmc
mov
push
rol
mov
xchg
nop
pop
xor
sub
and
xchg
push
pop
xor
jge
or
jb
fnstenv
test
xchg
push
xchg
sbb
sub
test
pop
inc
jmp
call
and
out
inc
rol
dec
xor
sub
and
mov
xchg
rcr
stc
jb
or
push
cmps
xchg
mov
add
xchg
jl
pushf
dec
stos
fist
addr16
xchg
out
mov
aad
or
push
mov
stos
addr16
inc
aaa
(bad)
mov
test
imul
mov
inc
div
inc
js
jo
(bad)
fdivr
push
in
div
clc
iret
rol
pop
scas
out
test
jp
xor
mov
cmp
lock
adc
lea
stos
xlat
jge
xlat
add
(bad)
test
push
jl
mov
mov
or
jnp
mov
jg
push
ins
cwde
cmps
adc
das
lock
es
(bad)
leave
lock
jmp
jmp
adc
outs
sahf
leave
add
daa
mov
addr16
call
pop
xor
out
jge
not
addr16
(bad)
clc
add
fstp
mov
add
push
(bad)
cld
data16
rcr
mov
fldcw
rcr
and
out
xor
in
cmp
or
sub
cmp
sbb
cmp
mov
mov
mov
push
test
or
mov
jne
mov
or
pop
mov
div
pop
call
scas
loopne
call
mov
jmp
test
push
not
or
ss
movd
clc
repnz
shl
mov
jmp
in
test
out
outs
ret
xchg
(bad)
sahf
(bad)
mov
sub
aam
xlat
sbb
mov
cld
xor
call
addr16
cmc
call
out
mov
cmc
mov
and
sub
in
rcr
mov
outs
or
or
sbb
sar
add
out
and
jo
cmps
ficomp
daa
mov
loop
ins
ja
gs
cmp
xor
pop
retf
sahf
cld
or
push
cwde
stos
pop
jl
iret
xlat
out
(bad)
movs
fcom
icebp
movs
sbb
fs
lds
xor
stos
mov
imul
retf
sub
pop
xor
push
ret
adc
fcomp
xchg
push
ret
rcl
cmp
xor
fs
sbb
test
rol
jmp
loop
cmp
mov
cmp
push
pop
cli
iret
push
out
cdq
sbb
jp
dec
mov
frstor
popf
inc
cli
mov
adc
and
jb
lea
neg
test
and
sbb
sbb
mov
mov
aam
or
fiadd
(bad)
pushf
sbb
cld
sbb
or
or
not
cmps
cli
xchg
cwde
iret
fsubr
fst
rcr
neg
mov
adc
dec
mov
push
ret
fld
test
cmp
aas
mov
add
xlat
jb
fisub
div
cdq
into
push
stos
popa
xchg
mov
lods
(bad)
add
shr
stos
sbb
repnz
or
jbe
out
data16
iret
xor
adc
sbb
les
pop
cmp
sbb
test
mov
ss
add
xor
fadd
ret
cmp
push
push
sti
mov
into
or
mov
mov
sub
in
xlat
out
push
and
dec
cmp
adc
loop
ds
cmp
ret
push
xchg
in
add
pop
fcom
cmps
scas
fisub
fiadd
sbb
mov
sub
or
pop
jb
sub
ins
xchg
cli
imul
xor
into
pop
xor
loopne
jecxz
push
outs
adc
test
cmp
sbb
repz
scas
scas
stos
loopne
pusha
mov
ins
retf
jmp
cmp
fisub
in
add
mov
imul
xor
je
lods
bnd
mov
and
xchg
lahf
adc
mov
sbb
xor
dec
pop
test
retf
jb
cmp
in
sub
arpl
pop
pushf
cmp
inc
dec
loope
mov
js
mov
mov
jle
outs
mov
fisttp
xor
test
aas
pop
dec
mov
jmp
arpl
sti
mov
dec
mov
hlt
stos
mov
repz
or
pop
je
push
xor
push
cmp
cli
out
lock
or
ss
inc
adc
mov
loope
xchg
test
mov
mov
push
push
jb
clc
fs
mov
pop
dec
dec
clc
dec
and
loop
lods
in
movs
loop
imul
push
xchg
jno
test
bound
dec
sbb
xchg
cwde
test
inc
(bad)
dec
mov
mov
shr
sbb
jl
xor
mov
cmps
out
pop
jae
stos
or
call
loope
or
adc
cmc
lds
popf
jmp
imul
stc
js
pop
(bad)
mov
ror
mov
jmp
mov
mov
sub
nop
adc
or
pop
sti
or
fimul
aas
sbb
inc
push
movs
mov
imul
or
fs
add
hlt
shr
cmps
jns
movs
addr16
mov
imul
xchg
and
mov
imul
mov
xchg
xor
lods
cmps
push
es
sar
scas
clc
mov
mov
in
leave
(bad)
sbb
fst
xor
sub
sbb
iret
mov
out
jb
outs
fwait
jne
push
les
cwde
in
mov
cmp
ficom
jo
jae
test
inc
icebp
cmp
cmp
xchg
jp
xor
or
shr
xor
lea
and
fstp
fistp
adc
ja
stc
mov
xor
xor
iret
pop
sbb
mov
in
out
lea
pop
enter
jle
movs
pop
lods
leave
lds
ss
scas
mov
mov
and
and
lods
movs
fisub
cmps
sub
pop
xchg
pop
fdivr
cld
int
push
pop
sub
fidivr
ins
xchg
in
mov
test
into
jns
cs
add
adc
xchg
sub
jp
xchg
add
mov
ret
mov
arpl
pop
and
dec
adc
jmp
sbb
sar
xchg
inc
xor
fidivr
xlat
xor
xchg
fst
repnz
retf
imul
push
ret
aas
hlt
fistp
dec
test
(bad)
adc
inc
inc
out
nop
xchg
pop
pop
lea
mov
in
test
pushf
xchg
or
pop
ss
jg
xor
jge
aad
sub
jae
jecxz
sub
xor
sti
les
push
cwde
pop
xor
fsubr
push
adc
pop
cmp
popa
mul
int
push
xchg
outs
in
mov
(bad)
outs
out
fild
mov
in
in
fs
addr16
lods
test
xchg
pushf
dec
test
std
int
cmps
sub
data16
mov
outs
adc
out
and
test
xchg
pusha
retf
push
cmp
jecxz
(bad)
or
fidivr
fcomp
retf
repz
push
lods
push
repnz
jle
xchg
dec
icebp
dec
test
out
stos
pop
ror
hlt
jbe
add
mov
cmps
into
std
sub
adc
nop
cmp
test
bound
int3
inc
arpl
jo
ins
cmp
(bad)
out
retf
xlat
mov
ret
retf
xlat
pop
mov
pop
cmp
jg
mov
popa
push
aas
sar
mov
in
test
mov
mov
ror
xchg
or
lock
sub
in
mov
cmps
pop
mov
sub
rcl
fwait
stc
in
retf
push
push
sub
stos
cwde
or
test
jmp
test
sbb
or
(bad)
sbb
inc
mov
push
movs
dec
add
jle
cmps
popf
icebp
sub
mov
xchg
ret
add
test
sbb
push
mov
js
stc
cld
jo
js
arpl
stc
mov
xor
jb
dec
dec
daa
shl
loope
ds
fcomi
dec
sub
je
push
in
(bad)
out
retf
scas
xor
xor
or
adc
retf
in
lock
push
push
leave
jns
xchg
xchg
mov
iret
imul
mov
shl
cmp
into
idiv
mov
js
mov
push
add
sbb
ficomp
rcl
ss
jne
ins
cmp
test
jae
stos
fidivr
jbe
cmp
fadd
mov
or
sub
cdq
and
por
fst
rcl
enter
pushf
aam
lds
pop
xchg
call
enter
add
retf
mov
outs
and
dec
test
mov
sbb
bnd
xchg
mov
bound
and
les
xor
inc
sahf
jbe
mov
mov
outs
retf
mov
ins
push
(bad)
mov
div
clc
pusha
lods
inc
cmp
out
inc
jne
stos
aam
push
sub
adc
dec
lods
cmp
ja
ja
push
push
and
push
mov
shl
add
jecxz
and
sti
nop
jmp
gs
ja
push
lock
imul
test
jle
pop
cdq
bound
dec
pop
ror
dec
ja
lea
test
push
or
out
push
and
lock
inc
push
enter
imul
mov
mov
retf
ficomp
and
sbb
mov
out
clc
stos
xchg
nop
add
push
pop
neg
xchg
inc
out
ftst
mov
push
sbb
ja
jecxz
add
jg
cmp
jb
adc
cmp
push
dec
loop
sbb
sub
lock
jecxz
fdivr
mov
xchg
(bad)
imul
scas
cld
sti
shl
and
xor
imul
in
nop
aas
push
xchg
das
gs
xor
push
sbb
jl
fcomp
jno
leave
outs
retf
cs
adc
out
xor
push
mov
das
mov
mov
pop
int
and
adc
mov
jl
add
pop
(bad)
out
xor
lods
pop
cmc
or
cmp
(bad)
jl
add
sub
dec
test
xchg
pop
mov
in
xchg
xor
pop
test
repnz
adc
in
push
push
xor
je
sbb
into
test
std
stc
sbb
mov
or
repz
retf
mov
add
(bad)
xchg
mov
add
push
stos
and
cmc
fcom
leave
dec
ins
ins
mov
cld
dec
(bad)
mov
push
or
adc
adc
sub
inc
test
xlat
mov
sub
cmc
adc
cwde
daa
inc
mov
push
clc
push
sub
sub
jge
pop
or
and
mov
inc
mov
push
or
dec
inc
neg
sbb
pushf
or
aas
adc
pop
sbb
stos
loope
dec
fidivr
call
cmp
(bad)
ret
fisub
iret
cmps
loop
test
xchg
xor
sub
movs
pop
push
mov
mov
out
cmp
mov
sbb
mov
and
pusha
movs
xchg
lds
test
sub
ret
push
xchg
or
or
mov
imul
mov
ds
add
jecxz
cmp
and
out
cld
repnz
lods
int
mov
mov
mov
sub
add
mov
sbb
sbb
scas
cmp
sti
clc
and
fstp
push
ja
push
sub
cmps
inc
or
pop
dec
retf
cld
cmp
cwde
in
mov
mov
add
pop
cmp
mov
aam
xchg
xor
fucom
cmps
imul
pop
loopne
fcomp
mov
xor
mov
pop
adc
add
mov
add
cmp
and
sbb
sbb
test
(bad)
lds
mov
mov
rol
push
std
shr
sub
pop
clc
pop
jne
sub
fbstp
and
push
jne
aam
test
mov
ins
push
pop
or
sub
sbb
cmp
not
ret
loop
repz
lock
add
mov
jl
sbb
hlt
pop
dec
test
fcomp
cmp
xchg
xor
push
mov
neg
stos
fstp
inc
dec
popa
mov
icebp
std
push
inc
lea
inc
imul
mov
icebp
int
and
lds
iret
cwde
scas
dec
outs
inc
jno
loope
test
push
adc
xor
bound
je
(bad)
or
int3
jns
xor
into
pop
ficomp
push
imul
pop
xor
movs
into
mov
stos
out
imul
sub
lahf
dec
sub
sub
push
pop
outs
dec
and
push
jecxz
(bad)
lahf
popa
sub
stos
push
repnz
mov
fwait
stos
adc
mov
pusha
dec
mov
mov
clc
mov
mov
push
into
adc
mov
dec
cmp
lods
lahf
xchg
adc
cli
jle
xchg
movs
dec
mov
mov
(bad)
(bad)
pop
sar
mov
test
ror
dec
into
mov
pusha
mov
push
stos
jmp
adc
inc
retf
aad
or
retf
clc
push
mov
fmul
cmc
xchg
add
hlt
jg
push
imul
retf
test
leave
sub
add
mov
clc
xchg
les
xchg
sub
xchg
ffreep
shl
retf
inc
dec
or
push
xor
push
stos
loopne
xchg
mov
sbb
shl
std
cs
mov
sbb
div
out
xchg
xchg
scas
push
pop
repz
ins
setae
jle
ror
loopne
sbb
mov
jne
mov
mov
fmul
sub
push
mov
movs
pushf
or
(bad)
rcl
ss
or
cmps
sub
mov
movs
push
ror
push
aas
push
xchg
bound
imul
jns
fcom
mov
jp
mov
aas
int
aas
xchg
test
dec
jbe
sub
ror
adc
bound
mov
into
inc
and
pop
cmp
gs
leave
repnz
loop
lock
fmul
push
add
dec
lods
repnz
mov
dec
cmp
test
xor
dec
push
dec
mov
or
xor
push
cmp
push
fwait
in
mov
mov
ret
adc
xchg
inc
mov
or
pop
mov
into
inc
inc
pslld
jmp
pop
aam
sub
sbb
inc
loop
cmp
enterw
jl
mov
popf
cs
xor
pushf
adc
(bad)
test
iret
(bad)
cwde
aas
mov
and
pop
lock
sub
fadd
out
sbb
rol
add
jae
aad
sbb
(bad)
fld
inc
mov
push
pop
add
mul
jb
push
les
xor
jmp
cmps
sub
push
aam
mov
shl
cld
sti
popa
and
movs
xchg
jbe
(bad)
das
mov
scas
jg
stc
dec
fidiv
loope
movs
jo
xor
cmp
push
icebp
xchg
lods
aam
(bad)
push
dec
xor
push
or
push
ja
push
iret
mov
push
(bad)
jl
and
aad
fisttp
in
fisubr
add
aad
xlat
(bad)
stc
sbb
mov
xor
dec
fistp
jle
inc
ror
pop
xchg
xchg
addr16
mov
cmps
inc
cmp
mov
retf
xchg
adc
add
pop
jns
or
mov
icebp
mov
jge
push
adc
mov
add
leave
(bad)
mov
daa
or
daa
mov
fs
lods
dec
jge
dec
out
scas
ja
lahf
nop
push
cmp
jno
js
into
aas
sub
or
dec
and
xchg
cmps
(bad)
mov
and
jg
xchg
(bad)
sub
push
sbb
add
hlt
sub
mov
adc
je
retf
rcr
mov
fnsave
cdq
(bad)
cwde
pop
aaa
pop
(bad)
xlat
and
pop
xchg
jmp
stc
jecxz
pop
push
jbe
js
xchg
in
adc
push
xor
jmp
inc
into
pop
(bad)
retf
push
or
jg
and
stc
sub
test
and
mov
pushf
cld
imul
imul
cmps
inc
es
icebp
xor
jl
in
push
sub
adc
mov
xchg
cld
cwde
dec
add
mov
sbb
cmps
gs
aam
xor
adc
xchg
shr
push
push
out
jp
(bad)
cmc
adc
and
mov
cli
xlat
mov
pop
sub
pop
out
out
outs
or
rol
stos
movs
inc
mov
mul
adc
mov
clc
push
and
les
shr
shr
rcr
adc
add
mov
adc
add
cmc
pop
loope
sbb
pop
mov
sbb
fwait
popa
test
or
ss
xor
fnstcw
aam
mov
fidiv
push
int
out
int
dec
stos
nop
ds
popf
jno
dec
sub
sahf
pusha
popf
mov
cwde
sbb
jmp
das
das
loop
(bad)
lahf
mov
pop
mov
mov
mov
outs
pop
nop
jo
lock
dec
dec
ins
dec
ret
cmp
jg
adc
xchg
sbb
mov
jo
mov
add
and
ds
in
push
cwde
scas
loopne
add
or
sub
cmp
call
movs
setle
and
xchg
(bad)
scas
sub
outs
fstp
jae
push
mov
jae
mov
mov
push
lea
push
cmp
shl
mov
ins
ins
inc
hlt
adc
outs
movs
sahf
(bad)
jo
mov
(bad)
popf
hlt
jmp
xor
ja
movs
inc
loopne
adc
cmp
cmp
rol
xchg
mov
mov
mov
jns
ret
dec
sbb
fnsave
xchg
mov
fcom
test
xchg
add
scas
xchg
and
dec
cmps
fild
push
mov
add
stos
add
cmp
add
mov
pop
leave
ins
cmp
and
push
call
movs
ss
fstp
pusha
jl
repnz
or
jle
iret
sti
lods
loope
xor
mov
adc
cwde
jp
jbe
in
jbe
in
mov
adc
daa
push
xor
mov
pop
je
ret
push
mov
ins
adc
enter
ins
lahf
push
repnz
dec
in
cmc
leave
(bad)
outs
sbb
stos
add
pop
xchg
mov
xlat
fisubr
fs
jecxz
sub
xor
add
ficom
jbe
ret
out
dec
push
loop
fcomp
sbb
retf
not
inc
repz
aam
in
ins
cmp
mov
repz
pop
cmp
cmp
xchg
iret
xchg
cmp
arpl
cmc
(bad)
mov
mov
push
xchg
xor
inc
in
inc
xchg
sbb
sbb
adc
call
outs
stc
sbb
mov
dec
inc
push
push
stos
je
fcomp
sub
scas
cmps
iret
or
cmp
cmc
mov
nop
mov
in
dec
mov
add
test
pop
push
call
sub
adc
dec
imul
adc
jno
dec
fld
xchg
pushf
ins
jl
out
shl
xor
int
mov
xchg
aas
in
lea
sbb
adc
mov
test
xor
ins
cmps
add
push
or
cmps
std
dec
sbb
sub
mov
movs
add
stos
(bad)
stos
ja
(bad)
stc
mov
(bad)
mov
jecxz
loopne
sub
loop
sub
fpatan
xor
adc
mov
xor
and
cmc
mov
xchg
into
xlat
xchg
shl
push
in
mov
jne
outs
adc
jle
sub
mov
retf
push
jne
loope
dec
add
mov
fst
mov
pop
cmp
les
xchg
mov
mov
cmp
cli
jg
sub
xlat
addr16
dec
mov
pusha
out
out
xchg
mov
fnstenv
scas
add
xchg
gs
(bad)
jmp
mov
aas
test
inc
(bad)
arpl
stos
or
mov
push
push
sar
clc
cdq
ja
inc
mov
push
push
ins
(bad)
notrack
movs
add
xor
or
je
mov
cmps
pop
rcl
cmp
xchg
jl
dec
mov
inc
and
cmp
fild
sbb
push
add
pop
cs
xchg
popa
mov
sahf
or
std
rep
mov
stc
lods
jmp
mov
jge
hlt
sub
add
push
popa
or
jmp
aas
cld
adc
mov
add
xchg
and
ins
sbb
loope
int3
or
cld
mov
add
js
cld
push
fst
push
mov
movs
push
test
cmp
and
mov
aaa
inc
sar
pop
or
adc
mov
mov
pusha
push
mov
sbb
outs
ss
pop
push
sbb
test
push
movs
jbe
outs
(bad)
push
xor
sub
mov
mov
scas
xor
cdq
push
add
arpl
sbb
xchg
sar
clc
je
dec
lds
mov
leave
jb
jns
mov
shl
pop
mov
loop
push
js
cs
mov
jge
mov
jo
xor
push
cmp
xchg
iret
in
pop
iret
stc
mov
cmp
jbe
sub
sbb
sub
cmp
dec
loop
pop
shr
dec
dec
test
xor
dec
pop
lea
inc
mov
xor
test
inc
push
cmp
loopne
pop
sbb
sahf
pop
fdivrp
pop
out
into
jbe
cmp
adc
push
popa
fwait
je
in
ja
scas
push
in
sbb
jb
adc
cmp
(bad)
imul
(bad)
adc
popa
icebp
stc
fld
cmp
out
ret
(bad)
pop
sahf
fbstp
test
dec
dec
mov
xor
scas
and
jle
adc
cmps
arpl
call
add
push
cdq
sub
in
jl
dec
jno
xchg
xchg
adc
das
fnstsw
xchg
shl
xchg
iret
jmp
mov
aam
mov
sbb
push
mov
and
shr
retf
mov
add
in
leave
push
sub
jnp
cmp
loop
div
xor
(bad)
xor
pushf
js
punpckhdq
push
push
jne
mov
pusha
jmp
sub
mov
or
xor
mov
loope
hlt
push
xchg
in
cmp
loop
mov
mov
popf
mov
or
push
fild
cld
stc
and
xchg
push
scas
cmp
(bad)
and
push
test
and
mov
test
inc
pop
xchg
sub
movs
pop
sub
jns
(bad)
mov
sbb
stos
xor
push
cmp
xchg
jmp
sub
push
rcl
jp
mov
add
in
add
jo
mul
(bad)
imul
and
into
add
retf
mov
sub
sub
push
adc
add
add
mov
(bad)
shl
pusha
nop
sub
fisub
ret
outs
mov
jae
mov
and
inc
sub
cmps
mul
and
iret
arpl
jno
sti
test
cs
add
sar
cmp
out
jns
shl
mov
(bad)
out
or
jo
add
xchg
mov
and
dec
add
out
xor
mov
pop
retf
sbb
sahf
and
loope
fwait
sub
and
ja
les
or
lahf
ja
xor
stos
jecxz
mov
push
adc
dec
xor
push
not
aas
das
and
into
add
cmp
sub
adc
ror
mov
mov
fwait
dec
or
les
sbb
sub
push
sbb
call
imul
data16
das
pop
test
mov
sbb
jl
cmps
aad
(bad)
in
or
fist
je
add
add
sub
inc
and
outs
xchg
sbb
jae
stc
cmps
mov
test
nop
inc
xchg
enter
xor
jp
xchg
dec
add
jmp
pop
mov
enter
sbb
push
js
sbb
push
sub
jmp
stos
ss
sub
xchg
leave
cmps
jbe
mul
popf
mov
out
or
xchg
std
shl
test
out
sub
fisub
enter
mov
cmp
inc
(bad)
sbb
mov
movzx
ds
jge
pop
sbb
mov
retf
stc
out
adc
retf
int
sbb
jg
adc
das
outs
sbb
mov
shl
fwait
rcr
out
mov
fldlg2
jo
jbe
inc
imul
bnd
xchg
aam
cmp
xchg
inc
addr16
push
in
push
jecxz
mov
pop
xor
ds
in
mov
push
fidiv
jnp
and
in
jns
and
icebp
lea
sub
data16
add
push
idiv
and
js
mov
sub
xchg
jns
inc
xchg
xchg
test
sub
mov
add
jbe
(bad)
jno
sti
mov
fisttp
mov
adc
sub
sub
inc
xor
loope
test
pusha
aam
bound
mov
jmp
pusha
fisubr
fcmovu
dec
clc
dec
ins
dec
pushf
and
mov
call
call
push
imul
jg
cmc
and
out
xchg
mov
inc
icebp
inc
popf
div
sahf
jle
mov
push
cs
xbegin
pop
pop
in
sbb
mov
cdq
xor
push
cmp
arpl
ja
inc
(bad)
dec
or
mov
jg
dec
mov
ss
inc
repnz
inc
out
ret
mov
icebp
adc
je
mov
dec
pop
push
add
cmp
xchg
mov
ss
or
es
adc
inc
ret
outs
xchg
fnstsw
push
cdq
and
jb
inc
or
mov
cmp
out
mov
imul
aaa
cmp
push
cwde
sub
xchg
mov
mov
jb
pop
mov
xchg
adc
pop
ins
add
shr
stc
fnstsw
and
push
pop
int
mov
mov
repz
or
mov
jbe
or
xor
rol
jno
inc
pop
into
inc
(bad)
sub
sbb
jnp
movs
test
rcr
test
popf
je
sub
mov
mov
xor
add
push
test
adc
ret
xchg
mov
sub
cdq
pop
outs
inc
je
push
retf
mov
add
sar
aaa
scas
test
lods
(bad)
stos
xor
outs
cmp
aad
mov
sub
push
mov
mov
xchg
sti
mov
xor
and
sub
cmp
pop
mov
ror
out
ret
add
jg
stos
cmps
stos
xor
push
lahf
jbe
lahf
cmps
mov
add
adc
or
jp
(bad)
in
pop
xor
or
aad
(bad)
add
pop
shl
mov
sbb
add
xor
dec
adc
xchg
jmp
in
aaa
jb
stc
rcr
out
popa
aas
loopne
sbb
stc
aas
pushf
fwait
(bad)
pop
xchg
jo
stc
repz
mov
mov
pop
cmp
xchg
aas
fdiv
cmp
sbb
mov
adc
daa
(bad)
jns
je
imul
mov
mov
xchg
hlt
mov
pop
ffree
test
mov
jge
add
mov
or
mov
ret
ror
cmps
jl
cwde
lahf
retf
pop
push
outs
xor
mov
into
movs
mov
fadd
sbb
(bad)
sahf
or
int3
and
pop
outs
pop
mov
add
mov
inc
jle
jecxz
jg
(bad)
retf
lods
dec
fiadd
and
in
xchg
pushf
sbb
pop
outs
dec
or
out
aaa
jle
fwait
fwait
push
aam
shl
mov
pop
push
xor
nop
sbb
repnz
stc
xchg
outs
xor
rcr
idiv
push
cmps
popa
mov
sbb
push
push
and
sub
cmp
shr
jmp
and
or
stos
cmp
mov
adc
imul
retf
jmp
shl
adc
sbb
cmps
mov
or
push
adc
js
add
nop
jo
mov
into
sar
push
aaa
dec
(bad)
in
out
icebp
mov
cmp
test
cdq
fcom
jnp
loopne
lds
jmp
(bad)
je
sbb
dec
cmps
cmp
jbe
iret
pushaw
data16
xor
cmp
cli
test
pop
pop
jl
mov
test
dec
add
test
mov
push
cwde
fisubr
pop
sbb
js
lods
sbb
in
push
(bad)
mov
mov
mov
jns
push
xor
xchg
sbb
adc
fisubr
mov
neg
cmp
in
add
rol
lods
and
enter
in
sub
cmp
inc
add
stos
xchg
mov
aaa
cwde
jmp
popa
xchg
jl
mov
sbb
cwde
popf
sbb
cmp
ss
mov
inc
sub
lods
xchg
xchg
xchg
iret
cmp
fstp
outs
inc
(bad)
sub
scas
cmp
aam
arpl
sub
inc
mov
bound
es
popa
ins
cdq
jns
arpl
and
aaa
jge
int3
push
in
dec
xlat
mov
fcomp
test
pop
add
jge
(bad)
xor
ins
inc
outs
xchg
shl
jg
popf
outs
imul
lock
xor
add
ja
popf
cmps
jg
push
xchg
sbb
sar
push
inc
ins
ret
mov
clc
add
test
add
iret
xchg
ror
dec
xor
lds
popf
inc
mov
mov
jp
ja
adc
scas
add
add
repnz
loope
mov
cmp
or
loopne
and
xor
xchg
inc
out
gs
jmp
and
fsubr
call
rcl
scas
pop
icebp
ins
outs
std
pushf
clc
aas
movs
and
mov
jmp
sahf
dec
inc
fisttp
ds
fnstenv
add
and
dec
leave
jge
and
mov
(bad)
in
push
xchg
(bad)
fst
pop
dec
sub
call
shr
sbb
mov
add
inc
adc
push
mov
es
pop
jmp
push
outs
ins
inc
pop
inc
push
jp
mov
stos
or
jb
push
mov
fcomp
jmp
add
cdq
or
jo
push
mov
push
fisttp
jmp
xchg
shl
pushf
xchg
bound
dec
mov
in
sbb
and
jp
sub
outs
test
cdq
retf
lea
clc
mov
(bad)
in
pop
pop
test
fimul
iret
pop
pmulhuw
jo
and
xchg
and
(bad)
sub
repz
pop
sti
mov
je
mov
shl
in
cmp
dec
adc
or
sbb
cld
arpl
xchg
cmp
ins
inc
(bad)
adc
xor
inc
jge
mov
mov
fimul
pop
xor
not
jb
push
sub
inc
adc
add
sbb
out
lahf
rcr
mov
jno
xchg
dec
(bad)
sahf
mov
or
mov
cdq
mov
iret
das
mov
stc
jmp
push
aam
clc
mov
xlat
sub
je
rol
pop
out
jp
mov
ret
push
cmp
jno
mov
cld
adc
test
mov
scas
les
fcmovnbe
ficom
xchg
outs
adc
lahf
sub
mov
xor
or
adc
das
in
mov
and
and
mov
test
in
sub
icebp
es
jge
in
xlat
adc
mov
dec
repz
inc
or
sbb
push
mov
push
cmps
sub
aas
stc
add
cld
jmp
push
dec
and
sti
cwde
out
mov
xlat
outs
cwde
cmps
inc
push
call
pop
outs
xchg
and
dec
addr16
dec
pop
(bad)
pop
nop
sub
test
pushf
retf
test
popa
fiadd
cmp
push
jmp
lock
sub
jge
fadd
into
ins
das
rcl
or
mov
adc
xchg
mov
fdivr
icebp
aas
cmps
jg
pop
mov
add
fcomp
mov
(bad)
(bad)
loope
cmp
add
lods
shl
retf
lahf
dec
fadd
and
mov
xor
sub
fwait
mov
pop
cwde
mov
mov
movs
sbb
in
jo
cmc
ficom
pop
mov
and
arpl
imul
mov
repnz
(bad)
(bad)
mov
das
add
lea
fsubp
arpl
pop
pop
call
lock
dec
cld
cmp
(bad)
add
ja
jg
and
push
ins
lock
aaa
ins
mov
push
outs
dec
mov
xchg
addr16
mov
icebp
dec
adc
push
sub
inc
vminss
ror
sahf
xor
(bad)
call
cwde
cwde
cmp
dec
addr16
shl
jmp
mov
arpl
aas
cli
fs
dec
cmovbe
jmp
add
test
mov
jmp
sbb
sbb
push
(bad)
cmc
in
mov
xor
sar
inc
loop
loop
ins
lock
and
jnp
dec
in
xchg
jmp
sbb
jg
sub
jb
jb
test
sbb
test
mov
jnp
jae
aas
and
call
fsubr
sub
cwde
dec
ins
fnstenv
sbb
imul
inc
sti
and
or
cmps
dec
pop
test
xchg
or
and
imul
adc
inc
popf
xchg
shl
or
and
mov
and
add
xor
sbb
xchg
add
js
out
mov
or
add
les
stos
fcom
add
pusha
jle
cmp
and
and
call
iret
out
and
inc
das
repz
add
inc
sbb
imul
add
(bad)
cdq
mov
ret
pop
xor
sar
fidivr
pop
stc
retf
jecxz
sbb
push
pop
mov
(bad)
mov
cld
test
ret
push
call
daa
cld
dec
stc
jp
cdq
mov
push
mov
pop
ss
sbb
push
cld
addr16
xor
xchg
das
jmp
sbb
out
xor
test
mov
mov
pop
push
pop
sub
cli
adc
mov
ss
data16
jbe
outs
icebp
and
cmps
jno
rol
adc
mov
imul
(bad)
(bad)
pop
mov
scas
xor
mov
(bad)
cmps
xchg
push
ins
fbstp
aas
xor
cmp
jmp
and
xchg
cli
cs
icebp
inc
mov
dec
ds
pop
pushf
in
adc
bound
adc
lods
push
in
mov
in
js
push
xor
pop
xchg
(bad)
ins
test
dec
jae
or
or
push
xor
xor
cmps
jg
jbe
jl
cmps
fs
cmps
mov
pop
jno
not
ret
xchg
xor
dec
and
inc
setne
lods
cmp
adc
and
pop
sti
iret
jle
cmp
call
stc
fdivr
mov
adc
jbe
pop
xor
sbb
repz
cs
dec
sub
jp
lods
push
popa
mov
pop
rcr
daa
push
imul
and
mov
xchg
test
mov
inc
jne
cmp
mov
mov
(bad)
mov
aas
sbb
mov
cli
mov
dec
cmp
je
or
fbld
jns
fdiv
xor
sbb
icebp
adc
push
faddp
jmp
out
mov
retf
dec
sub
dec
popf
lahf
gs
push
loop
repnz
cdq
xor
retf
dec
jae
sti
jge
scas
fsub
and
into
pop
adc
cmp
mov
and
neg
enter
sub
retf
mov
loop
xor
or
test
mov
sub
mov
sti
ret
jo
xchg
push
scas
and
xor
or
pop
sub
std
xor
and
pop
cmc
test
add
dec
sbb
jnp
sub
jg
call
and
imul
pop
out
mov
sti
pop
fisubr
fwait
test
sub
add
xlat
sub
int
push
pop
push
mov
jo
aam
fild
gs
fmul
fist
int3
cwde
fisttp
xor
pop
ret
arpl
shl
js
data16
adc
xchg
rcr
ins
xlat
push
jl
xchg
ret
inc
aad
ins
lock
or
aaa
jns
ja
(bad)
cmp
pop
adc
and
out
mov
pop
sbb
call
add
jmp
dec
test
loopne
pushf
shl
inc
jecxz
add
imul
mov
movs
adc
lds
dec
push
fcomp
loop
pop
les
shl
dec
pinsrw
pushf
xor
out
adc
xor
stos
mov
adc
sbb
stos
xchg
xor
mov
cmp
jmp
pop
loopne
mov
inc
xor
aam
xor
xchg
stos
arpl
pop
movs
sbb
repnz
pushw
(bad)
(bad)
cmp
xor
sahf
pop
ja
dec
(bad)
push
pusha
xor
out
push
popa
xchg
(bad)
cwde
(bad)
cmp
cmp
mov
sub
xchg
in
push
sub
adc
mov
mov
pop
push
retf
fidivr
(bad)
push
mov
in
(bad)
mov
sub
sbb
out
mov
and
pop
mov
cli
in
mov
xor
rcl
cmps
inc
sahf
pushf
jae
jle
inc
dec
fadd
nop
daa
fabs
mov
jnp
pop
cmp
mov
fwait
cdq
or
loope
es
shl
test
sbb
fst
mov
push
and
push
jmp
inc
icebp
mov
sub
add
push
mov
push
cmp
loopne
xchg
inc
push
add
jp
xor
or
test
jg
pop
xchg
leave
jle
aaa
add
popa
outs
shr
and
jecxz
add
sbb
mov
in
cmp
rcr
add
xor
mov
xchg
rol
jo
xor
cmc
mov
fdivp
jb
(bad)
stc
mov
adc
(bad)
fisttp
lods
pop
xchg
in
out
add
sub
jp
neg
lock
jno
or
jb
jl
cwde
arpl
fnsave
jecxz
cdq
mov
and
adc
in
repz
inc
retf
es
stc
xchg
xchg
cli
dec
or
div
ins
(bad)
jp
fnstenv
lods
leave
ret
xor
lahf
cld
pop
push
dec
xor
fist
push
call
add
mov
push
jecxz
fstp
in
mov
jmp
inc
call
fdivr
imul
leave
xchg
rcl
(bad)
(bad)
jle
xor
(bad)
jg
lock
xor
stos
int3
cwde
fs
push
cmps
movs
and
xchg
add
retf
sub
adc
imul
lods
push
sbb
loop
popf
jmp
and
mov
fwait
repnz
sub
shl
sub
test
and
inc
(bad)
fs
sbb
je
sbb
inc
mov
sbb
or
sub
aas
ss
fld
jbe
push
or
js
mov
sbb
push
mov
iret
pop
cmc
loop
(bad)
mov
pop
ret
call
inc
jmp
mov
sub
out
ins
imul
push
les
push
xchg
push
jno
out
mov
mov
jno
cs
call
into
rol
out
lods
out
ds
push
shl
cli
xor
shl
push
popa
out
lea
cmc
sub
jbe
cld
loopne
lahf
push
int3
pop
lds
sub
pop
xchg
in
xchg
mov
arpl
hlt
cmp
jo
mov
sti
call
iret
(bad)
push
leave
in
mov
addr16
aam
sbb
add
mov
push
hlt
jmp
jp
mov
dec
add
inc
sahf
sub
int
xchg
out
retf
loopne
jno
sbb
lahf
stos
(bad)
and
dec
or
je
jb
xor
ja
popa
add
push
pextrw
fcom
mov
push
dec
in
inc
out
mov
or
mov
push
add
(bad)
loop
push
int
test
pop
aad
jnp
movs
pop
and
push
mov
inc
cli
out
jg
fstp
or
cmp
push
pop
stos
push
inc
pop
adc
int
ror
lock
push
(bad)
fmul
ds
xchg
mov
fld
push
fwait
push
mov
test
stos
aad
mov
adc
ss
cmp
add
sbb
cwde
cmps
jns
dec
push
or
punpcklwd
pop
dec
xor
xlat
inc
inc
and
out
(bad)
mov
xor
dec
in
and
int
fimul
int
cmp
inc
(bad)
fadd
dec
popa
rcl
repz
adc
cdq
pop
mov
test
dec
xchg
sbb
dec
jge
es
push
jae
pop
loop
cmp
jo
mov
lea
rcr
ret
and
in
pushf
inc
xor
sub
enter
pop
jns
push
xor
sbb
pusha
fidivr
mov
push
push
ds
icebp
xor
add
pop
stos
jle
pop
adc
inc
iret
lahf
or
mov
jmp
lds
push
test
fcom
push
(bad)
push
in
(bad)
jo
test
les
ins
adc
pushf
sbb
ins
mov
push
and
fisub
add
loop
and
mov
movs
cmp
sbb
aad
fbstp
nop
dec
sub
cmc
jbe
inc
sub
test
jge
or
out
outs
or
fucomip
int
mov
in
push
pop
push
jmp
cs
inc
retf
xchg
movs
mov
mov
dec
add
call
adc
pop
add
or
mov
and
xchg
bound
mov
mov
test
or
js
aam
rol
shl
sar
fisttp
mov
xchg
cli
imul
adc
fwait
stos
sub
xlat
dec
mov
push
cmp
add
idiv
dec
(bad)
(bad)
jns
or
pop
test
cmp
adc
outs
cli
sub
pop
data16
fsub
adc
hlt
mov
popa
jns
das
mov
mov
icebp
dec
pop
jo
jmp
push
ficomp
cmp
(bad)
lea
int
xlat
hlt
rcl
inc
add
aam
mov
jl
dec
pop
push
retf
aas
mov
push
stos
in
cwd
nop
repz
cli
pop
xchg
ficomp
xchg
add
cmps
dec
jmp
mov
int
ins
mov
mov
jnp
mov
xchg
test
daa
in
in
pop
sub
cmp
repz
pop
jmp
mov
sar
dec
nop
mov
imul
inc
xor
popf
xor
jae
dec
or
ds
and
je
pop
(bad)
mov
add
jo
(bad)
shl
sub
xchg
sub
(bad)
int
in
loopne
(bad)
mov
push
aam
addr16
jae
inc
xor
sahf
pop
lahf
adc
gs
ja
pop
dec
mov
inc
ins
sbb
(bad)
ror
(bad)
mov
aas
lock
pop
sbb
ja
retf
inc
sbb
jb
ja
scas
mov
cli
in
int
mov
jmp
cmp
adc
retf
imul
ss
mov
ins
push
and
js
inc
mov
dec
jo
push
sti
movs
jmp
push
mov
mov
test
mov
sub
daa
fist
sti
movs
inc
popf
test
adc
(bad)
dec
push
jo
pop
cmps
ror
jbe
movd
cmp
cmps
adc
xchg
rcr
(bad)
push
imul
or
or
cli
mov
mov
xor
(bad)
test
mov
cwde
cmps
pop
repnz
in
retf
jge
cmp
jp
sub
xchg
sahf
inc
clc
jb
dec
cdq
jg
jmp
out
ds
xchg
dec
icebp
cmp
xchg
ins
retf
or
xchg
push
ja
cmp
or
pop
(bad)
xchg
xchg
leave
pusha
je
xchg
mov
xchg
cmps
jno
pop
xchg
lea
jns
dec
mov
leave
mov
mov
jle
add
lahf
sbb
sahf
aam
(bad)
(bad)
cli
xchg
inc
int
pop
loopne
cwde
xchg
iret
sub
and
mov
enter
jmp
adc
lahf
popf
repnz
jmp
cmp
jmp
sbb
clc
jecxz
cmp
stc
test
jle
ret
mov
add
(bad)
adc
pop
data16
mov
je
ja
je
sti
test
or
sbb
cmp
cdq
scas
mov
out
movs
jge
test
(bad)
pop
or
adc
adc
(bad)
bound
loop
pop
inc
fucomp
lock
add
imul
bound
movs
add
xchg
into
push
arpl
in
rol
pop
(bad)
ins
push
ret
mov
cmc
jle
outs
arpl
mov
call
inc
out
xor
popa
lea
add
jle
jmp
fidiv
cmc
sbb
icebp
cmps
xor
push
pop
or
ss
cmp
sbb
lds
push
adc
lods
cmps
adc
sub
stos
jmp
inc
loopne
mov
mov
dec
out
xor
pusha
xlat
mov
pop
pop
xchg
inc
test
mov
dec
fwait
and
adc
push
cwde
dec
sar
jne
dec
pop
xchg
adc
mov
add
lock
xchg
mov
or
and
mov
int
mov
fimul
push
call
push
sub
lock
jle
jo
mov
jne
jne
cmp
outs
pop
int
repnz
xchg
dec
repnz
mov
cmp
repnz
ss
jae
push
psllw
or
popf
scas
sar
xchg
jl
adc
ret
in
sub
outs
jle
and
pushf
mov
dec
dec
fs
mov
mov
pop
mov
push
or
jno
push
add
cmp
jb
arpl
jmp
mov
(bad)
lock
in
inc
and
pop
push
hlt
mov
aaa
sbb
mov
mov
pop
push
inc
in
cmp
xor
inc
and
mov
mov
repz
mov
xor
dec
cdq
xor
or
mov
dec
jb
mov
mov
inc
adc
sub
stc
(bad)
sbb
test
mov
gs
add
out
pusha
cmp
jne
call
es
add
add
(bad)
pop
pop
lea
or
dec
imul
scas
mov
and
jp
in
stc
pop
mov
cmp
clc
and
shl
jg
xchg
jno
adc
dec
fisttp
sub
xchg
daa
xchg
(bad)
cmps
or
movs
fnstsw
aad
ret
xchg
push
mov
not
cmps
pop
cmc
ss
jb
ror
cmps
xchg
les
sbb
cmp
sub
adc
xor
ja
int
ror
adc
jb
mov
sar
add
clc
mov
or
loopne
sub
out
fucomip
rol
cmp
int3
ret
fst
xor
cmp
not
jmp
pop
or
push
sbb
nop
xor
into
sbb
jne
cmc
lahf
das
loopne
js
or
call
mov
cmc
pop
or
push
clc
mov
fwait
movs
jg
dec
stos
or
movs
mov
cmp
repz
push
(bad)
fdivr
mov
push
sti
dec
jmp
ror
gs
lds
fcom
cmp
out
in
retf
ins
cmp
push
jle
mov
ret
(bad)
loopne
inc
and
push
in
mov
outs
push
cmovle
lock
ins
or
mul
cli
jbe
cmps
inc
daa
rcl
xor
loope
dec
test
jl
jecxz
fs
mul
sbb
jle
les
loopne
loop
sbb
fidiv
push
mov
cmp
pop
jmp
aaa
(bad)
pop
cdq
push
lods
ins
sub
test
in
cmps
nop
cmp
pop
movs
clc
add
xchg
add
push
sbb
adc
mov
mov
scas
das
inc
(bad)
pop
scas
add
push
out
inc
push
mov
jecxz
adc
gs
ins
sahf
out
jnp
icebp
adc
js
cmps
sbb
rcr
add
and
xchg
inc
test
mov
push
mov
adc
xor
stc
fucomi
in
loope
mov
mov
or
lods
repz
sub
sbb
in
cwde
test
fdivr
ss
test
xor
daa
sbb
sahf
xchg
loop
shr
adc
inc
dec
inc
push
(bad)
in
xor
inc
mov
enter
in
cmp
sti
int
popf
(bad)
jns
je
or
mov
pop
lods
pop
adc
jmp
loopne
xlat
and
push
and
jl
fninit
push
gs
jb
mov
movs
lods
and
popf
nop
aad
push
cdq
fmul
ret
cmp
sub
dec
scas
movs
jnp
fcom
retf
mov
nop
das
push
mov
mov
sbb
movs
xor
inc
cld
cdq
adc
js
in
fistp
xchg
retf
iret
mov
add
jne
stos
xchg
lea
mov
mov
xor
cmp
mov
shl
icebp
mov
cmps
out
jns
jmp
sti
cmp
stos
xchg
add
sbb
xor
mov
es
(bad)
mov
and
mov
lea
cmp
stos
fwait
shr
add
cwde
lods
xchg
jb
and
lock
sub
xor
sbb
test
popf
not
enter
or
mov
call
and
inc
addr16
stc
xor
pop
dec
push
das
mov
and
xchg
xchg
enter
cmp
icebp
into
cli
je
popa
or
repz
aas
sar
adc
out
sub
mov
xor
dec
pop
cmc
lods
cwde
xlat
sbb
cld
mov
popa
leave
mov
rcl
in
fbstp
jo
movs
jnp
cmc
cmps
dec
in
mov
mov
xor
pop
cmp
mov
xor
popf
mov
push
dec
arpl
mov
repz
mov
and
stos
and
int3
jo
ins
cmp
adc
xlat
bound
cli
pop
(bad)
(bad)
adc
mov
add
add
jnp
popa
lds
sub
inc
mov
cmp
outs
cmps
sub
or
xor
in
or
push
mov
pop
or
sub
test
aas
imul
mov
push
clc
lock
jo
or
lock
retf
je
call
xor
out
jle
fs
test
or
inc
or
cmps
cwde
and
int
dec
or
repz
mov
jge
jl
jns
mov
xchg
ins
sub
mov
or
cmp
xchg
ja
daa
mov
std
push
add
or
in
fisttp
stos
adc
mov
mov
pslld
pop
and
adc
pop
push
popa
inc
xor
inc
push
mov
inc
cmp
retf
rcr
pop
push
imul
xchg
lock
xor
add
add
loop
or
xchg
inc
jmp
lods
ja
or
xor
mov
fsub
icebp
push
dec
fmul
lock
imul
push
sar
stos
push
jg
fild
or
mov
push
movs
or
adc
add
sbb
xlat
inc
das
test
mov
or
mov
out
sahf
or
cli
stc
mov
mov
movs
xor
jecxz
mov
pop
cdq
sbb
popa
movs
sbb
and
outs
lahf
pushf
repnz
shl
push
push
dec
das
ds
ret
jle
fstp
dec
leave
int3
cli
out
or
mov
add
and
xchg
xor
ret
mov
loope
lahf
int3
xchg
iret
mov
iret
mov
sub
push
xchg
cmp
mov
xor
mov
and
push
imul
xchg
aaa
pop
cmp
aas
xchg
mov
adc
mov
stos
xor
mov
js
stos
mov
push
and
xchg
loope
xor
rcr
aad
enter
sbb
push
rcr
pop
jno
mov
in
adc
jne
mov
in
fs
mov
lods
jecxz
lds
jnp
fsubrp
imul
dec
fnstsw
mov
daa
mov
and
ins
movs
mov
retf
shl
stos
lock
ss
cld
cs
test
mov
mov
adc
aam
iret
lahf
mov
push
jno
clc
adc
mov
loope
dec
scas
fwait
cmps
and
das
cmp
iret
jecxz
and
adc
mov
lods
lahf
jb
je
hlt
je
mov
test
test
sub
cs
ss
or
pop
loope
mov
cmp
push
loopne
and
stc
cwde
lods
lea
jb
push
pop
cs
pop
mov
sbb
xchg
and
(bad)
fs
cmp
cs
test
dec
add
bound
scas
and
or
push
fisttp
sbb
cmps
mov
es
mov
xorps
sbb
mov
jg
pop
sub
push
xchg
mov
test
gs
lea
cmp
mov
call
mov
int3
cdq
pop
fnsave
add
jns
pop
jecxz
push
pop
xor
stc
push
sub
pop
jno
cmp
je
push
xor
pop
sahf
ja
xor
lods
or
dec
mov
mov
jne
pop
or
int
fsubr
cmp
dec
imul
popa
call
jmp
cmp
in
rcr
xchg
cmp
jb
dec
lea
sti
sub
retf
inc
mov
inc
xchg
sub
mov
dec
repz
jbe
mov
int
xor
xchg
push
sub
int3
movs
mov
cmp
push
into
mov
addr16
and
mov
jg
and
scas
jae
lods
clc
jl
push
xchg
mov
cli
fstp
sbb
xchg
test
shl
sti
mov
les
aas
pop
jno
imul
inc
test
stos
push
ret
cdq
retf
jg
mov
imul
gs
in
sub
outs
mov
cmc
in
push
adc
imul
jno
add
hlt
xchg
bound
loopne
es
cs
cmps
mov
jmp
test
jecxz
mov
cs
pop
jne
sub
xor
enter
cdq
adc
pop
enter
mov
xchg
sub
(bad)
or
lods
or
mov
mov
call
cld
mov
sub
retf
loopne
mov
or
xchg
pop
inc
sbb
jecxz
pop
push
mov
inc
xor
xchg
add
retf
jmp
ret
int3
mov
ret
adc
and
sub
int3
jo
mov
cdq
mov
xor
and
adc
adc
or
xor
add
cld
sahf
out
adc
lods
in
loopne
fdiv
iret
add
pop
cdq
call
xchg
(bad)
idiv
fld
sub
sub
imul
fild
cdq
outs
cmp
mov
or
push
call
xlat
and
popa
sbb
lods
(bad)
lock
(bad)
adc
or
jb
lahf
pop
sbb
aaa
dec
jecxz
ins
xchg
sub
(bad)
mov
daa
iret
jo
mov
fnstcw
mov
dec
pop
mov
mov
or
mov
(bad)
sti
xor
es
dec
das
stos
push
ins
adc
out
xor
movs
ins
dec
xchg
data16
in
les
pop
repnz
div
xchg
jl
xchg
mov
jo
pop
push
xchg
cmp
jnp
stc
lea
fs
mov
add
jno
xchg
xor
inc
pop
push
adc
in
xchg
aaa
xor
xor
adc
test
test
je
and
xor
ja
sub
in
arpl
aaa
sbb
sbb
nop
push
int3
xchg
fwait
cwde
cmps
xchg
ja
jecxz
scas
push
add
fisttp
ins
xchg
sub
mov
int
(bad)
pop
pop
into
jmp
mul
ss
xchg
add
cs
pusha
mov
and
bound
ror
sbb
pushf
lea
je
ins
push
int3
mov
ret
iret
mov
mov
jbe
rcr
add
fstp
sub
push
cmp
aas
add
inc
ins
add
adc
jns
mov
fnstenv
push
jb
cmps
dec
and
cdq
jns
aam
xor
mov
and
sbb
dec
fcom
repz
fsub
(bad)
ficomp
jb
aam
xchg
repz
jmp
addr16
xchg
ins
dec
and
jns
test
push
and
bound
popa
inc
lds
jns
pop
xchg
retf
lods
push
fild
or
pop
mov
stc
out
mov
outs
cmp
test
inc
add
ret
inc
ins
shl
clc
movs
sub
movs
xor
pop
inc
adc
enter
cmp
mov
test
repz
cmc
adc
loopne
imul
push
dec
dec
(bad)
icebp
or
add
mov
mov
xor
inc
mov
inc
int3
ficom
xor
jnp
ficomp
retf
sbb
(bad)
std
mov
js
mov
mov
mov
sbb
ss
aas
outs
in
and
dec
xchg
jmp
ss
sar
add
rcl
lea
xor
data16
aas
xchg
int
inc
mov
sub
inc
or
shr
cmp
ja
stos
dec
mov
push
or
mov
psrad
dec
dec
pop
mov
clc
shl
push
aaa
jne
sbb
cmps
or
mov
adc
fld
xchg
sahf
fadd
adc
jl
mov
sub
add
imul
iret
dec
fcom
xchg
pusha
les
mov
xchg
and
fnsave
daa
rcl
neg
fisubr
out
jle
jne
mov
sub
into
test
xchg
or
mov
(bad)
inc
or
les
retf
sub
pop
adc
add
(bad)
mov
loope
mov
out
inc
popa
xchg
stos
push
sub
add
cdq
add
arpl
(bad)
xor
sbb
dec
mov
hlt
inc
push
and
add
nop
scas
outs
rcr
lea
mov
loope
aaa
(bad)
cdq
popa
mov
pop
or
repz
aam
clc
rol
pop
jo
dec
rol
sub
stos
data16
gs
mov
pop
test
(bad)
out
stos
imul
adc
dec
stc
xor
mov
cmp
add
or
call
mov
mov
add
and
dec
push
rol
pusha
mov
loopne
std
cmps
jle
push
std
mov
stos
xchg
out
bound
dec
pop
xchg
push
leave
stos
in
sti
xchg
pop
les
loopne
cmps
inc
cdq
fdiv
mov
shl
retf
mov
add
call
stc
push
stos
mov
mov
mov
neg
fstp
mov
sbb
retf
sti
repnz
cli
clc
inc
or
mov
sbb
repz
pop
sbb
xor
mov
mov
and
inc
xchg
adc
or
cmp
das
ins
retf
jno
add
sub
mov
cwde
out
add
pop
sar
mov
jnp
jge
pop
cmps
xchg
fisub
push
and
mov
push
mov
cs
sbb
stos
xlat
arpl
mov
mov
or
mov
popf
out
xor
in
div
ret
xor
cs
mov
xor
xchg
int3
jae
sbb
leave
dec
inc
popf
lods
imul
ror
cld
mov
pop
mov
xor
fdivr
xlat
test
jb
and
cs
inc
bound
pop
inc
fsubr
push
ja
cmp
cmp
sub
ins
inc
leave
xchg
cld
cmp
jo
push
sub
dec
mov
rcl
pop
lea
mov
out
outs
pop
adc
add
dec
add
imul
cwde
dec
es
mov
repnz
pop
jno
lds
lock
ins
out
(bad)
int3
(bad)
add
cmps
dec
(bad)
lea
ret
sub
lds
xchg
xor
sbb
jmp
es
retf
push
test
inc
sbb
mov
aam
es
out
adc
cmp
cmp
xchg
jae
test
ret
jp
loope
xor
adc
mov
fcom
pop
stc
mov
mov
callw
ds
fimul
aad
imul
shl
pop
and
test
das
call
les
sbb
adc
push
adc
cmp
mov
push
cdq
jne
and
(bad)
mov
sub
xchg
xchg
test
and
movs
arpl
or
jle
test
xchg
mov
mov
cdq
push
in
jg
or
sbb
outs
jb
js
xchg
push
inc
adc
mov
mov
sbb
retf
stc
loope
pop
sbb
jg
js
test
sbb
les
jne
jns
mov
pop
inc
dec
pop
ficom
in
xchg
sbb
dec
mov
jns
std
test
push
aad
outs
mov
test
pop
dec
in
in
xchg
inc
nop
aas
jmp
cmps
add
inc
rcr
mov
push
mov
mov
mov
cwde
(bad)
pop
jle
fcom
cmp
push
mov
jl
mov
clc
adc
(bad)
pop
inc
fisubr
ds
nop
xchg
add
sbb
jno
ds
sub
aaa
push
xchg
inc
dec
push
cmp
mov
xchg
mov
inc
cld
js
mov
jns
cmps
inc
(bad)
cmp
or
adc
pop
inc
imul
add
mov
and
jecxz
mov
mov
mov
add
adc
and
sub
cmp
iret
push
jge
cld
scas
retf
mov
jl
das
repnz
leave
adc
jle
jp
data16
outs
sbb
xchg
add
jae
gs
jno
sbb
push
cmc
ret
xchg
jb
test
inc
icebp
xor
je
dec
mov
sahf
push
or
cmps
dec
ins
mov
sbb
imul
rol
mov
xlat
inc
aaa
pushf
lahf
pop
inc
pop
push
jae
cmp
cmp
cmps
xchg
aad
lods
lods
arpl
mov
cli
push
icebp
jle
mov
popf
inc
dec
retf
lods
pushf
outs
pop
ins
and
jp
loop
fstp
and
cmps
test
stos
jne
add
cld
ds
xor
and
xor
push
aad
sbb
cmp
xor
adc
fiadd
push
add
or
cld
lock
lds
lea
(bad)
idiv
mov
xor
or
jo
ret
in
inc
xor
inc
xchg
aaa
mov
stc
jne
mov
mov
movs
pop
aaa
mov
ror
pop
or
xchg
retf
xor
sbb
je
inc
outs
repz
dec
sub
popa
xchg
in
add
push
and
(bad)
jmp
adc
mov
mov
into
popa
adc
out
adc
mov
scas
shl
pop
loop
lock
cmps
cmp
cmps
mul
xchg
aaa
and
sbb
xor
das
or
or
mov
frstor
mov
lock
popa
mov
xor
pop
ret
jmp
call
std
ret
mov
ins
pop
xchg
fidivr
jb
fimul
xor
inc
cmovnp
out
std
pop
cmp
jns
push
add
ds
daa
cmp
xlat
xchg
inc
mov
mov
(bad)
jp
mov
ins
(bad)
into
jbe
arpl
out
or
rdmsr
sub
jno
xchg
xor
lock
loop
movs
adc
push
pop
sbb
or
imul
inc
mov
push
cmp
das
xor
sub
and
cmp
pop
fnsave
adc
xor
test
leave
xchg
mov
les
jno
in
and
xor
(bad)
test
imul
movq
mov
les
out
in
fistp
mov
cmp
jmp
adc
enter
mov
test
int
js
push
es
sub
out
adc
cld
adc
fnstenv
xor
inc
shr
aas
nop
shr
pop
gs
and
or
sub
fcom
mov
mov
sub
lods
sub
sub
xchg
leave
cmp
jecxz
lahf
and
pop
dec
cmp
ret
xchg
loopne
pop
mov
inc
pop
stos
rol
cmp
pop
es
sbb
xor
popa
fs
jmp
nop
cmp
jnp
inc
int3
in
sbb
xor
je
xchg
cdq
and
push
lods
xor
ror
add
imul
out
repnz
vpaddsw
sub
mov
dec
es
test
mov
dec
pop
out
mov
sub
loopne
mov
mov
iret
inc
icebp
or
push
adc
add
shl
loope
mov
imul
mov
sub
stos
(bad)
xchg
cmp
sbb
aam
les
into
mov
xchg
sub
jp
aad
xor
dec
fld
into
fidivr
popf
retf
cmp
adc
mov
sar
imul
jmp
clc
xor
and
(bad)
(bad)
mov
adc
mov
pop
fs
(bad)
xlat
call
aas
sbb
cmp
adc
(bad)
repz
mov
mul
jne
cld
and
popa
aaa
fld
std
shl
ins
jno
pop
xchg
add
inc
rcl
jecxz
push
or
push
cmps
arpl
mov
jp
mov
in
sub
or
push
inc
enter
fstp
test
outs
xchg
ror
push
or
ss
cmps
scas
inc
pushf
leave
sub
lods
fist
mov
cdq
shr
inc
mov
cwde
mov
fisubr
aas
fisub
int
cwde
sbb
xchg
cld
add
mov
adc
mov
movs
sbb
add
cmp
mov
inc
leave
bnd
or
xchg
pop
mov
addr16
jl
jg
test
add
push
outs
mov
cmp
or
sbb
pop
in
jnp
int3
sub
movs
mov
pop
cwde
mov
and
adc
aas
inc
jmp
nop
add
pop
cmps
fld
sbb
sub
sub
sar
jo
fxtract
and
xor
sbb
in
adc
imul
or
es
mov
retf
and
xor
mov
lods
test
mov
sti
mov
(bad)
sti
popa
pop
test
and
into
mov
mov
stc
retf
rep
aaa
pop
fwait
ss
loop
sub
fstp
pop
cmp
cmps
jnp
in
aas
clc
daa
retf
mov
dec
in
pop
in
aad
adc
xor
(bad)
fnstenv
lds
repnz
mov
sub
xchg
xor
sub
loope
dec
mov
rol
cmps
or
imul
pop
nop
in
rcr
jg
xlat
mov
mov
add
mov
(bad)
push
cmp
jae
retf
pushf
lods
call
cmc
add
int3
dec
or
mov
mov
sbb
ins
stc
out
push
push
add
lods
cmp
mov
add
mov
aad
out
call
loope
lds
clc
sub
push
inc
sub
lods
jbe
shr
pop
mov
sti
sub
rcr
pop
push
xchg
test
cdq
sahf
out
jns
fs
stos
enter
inc
mov
scas
xchg
sub
pop
lods
or
arpl
jg
enter
aaa
or
jae
inc
mov
mov
push
xlat
js
pop
jg
cmps
jg
xor
pop
fcomip
adc
sbb
fld
adc
mov
icebp
mov
dec
sbb
mov
aam
test
push
je
stos
repz
int3
jle
(bad)
jmp
cmp
aas
in
sbb
mov
dec
jns
popa
push
div
pop
(bad)
ret
cmp
pop
xor
pop
lds
rol
pop
pop
call
mov
inc
add
pop
add
scas
sahf
int
push
pop
dec
data16
dec
xor
xor
xchg
outs
push
inc
xchg
sub
sub
pop
pop
mov
call
popf
in
outs
or
pop
cmp
mov
aad
inc
add
cli
aaa
sti
dec
jl
mov
push
fisubr
scas
frstor
add
or
xchg
push
pusha
mov
js
aam
add
fcomp
mov
imul
sub
in
push
mov
or
xchg
arpl
addr16
xchg
test
inc
(bad)
push
test
repnz
xchg
jns
add
mov
xor
xchg
jg
adc
(bad)
mov
in
int3
sahf
cmps
sub
mov
in
outs
addr16
aaa
cwde
xor
jbe
push
jno
inc
inc
test
cwde
add
dec
lea
ret
add
adc
xchg
fcmovne
rcl
imul
pop
pop
sti
adc
loop
sub
mov
cs
adc
leave
dec
dec
xchg
jle
dec
xchg
xchg
fistp
bound
ror
ror
and
inc
jl
ret
dec
out
nop
pop
je
popf
lea
inc
push
cmps
add
dec
fidiv
xchg
enter
cmp
dec
ss
sub
add
hlt
jno
(bad)
xchg
mov
jno
stc
imul
fstp
cwde
cld
add
push
xor
pop
push
rcr
into
sub
in
(bad)
adc
outs
adc
mov
repz
mov
pop
cmp
imul
cmps
sbb
(bad)
in
cmp
pcmpeqd
cmp
jbe
dec
mov
mov
das
add
mov
inc
inc
and
dec
jmp
sub
dec
dec
mov
adc
mov
in
inc
jno
or
jbe
(bad)
fucom
out
out
in
loope
push
jecxz
imul
sbb
mov
movs
xor
mov
sar
adc
or
pushw
sub
push
rol
popa
or
imul
sub
ins
inc
sub
stc
cld
and
push
xlat
add
jmp
cmp
test
inc
pop
pushf
call
test
vsqrtsd
jb
cmp
mov
dec
sub
aad
mov
adc
inc
jl
mov
and
xchg
into
in
sub
mov
test
rcr
popf
jno
in
mov
jb
dec
dec
out
out
mov
and
call
sub
fwait
push
out
cmc
or
push
test
outs
or
push
mov
mov
call
sbb
push
cli
mov
ds
stos
scas
cs
ror
mov
add
mov
stc
es
fs
push
fstp
mov
xor
in
jo
cmp
push
test
in
cmp
rcr
push
or
dec
push
sbb
adc
jmp
test
lea
mov
inc
mov
jecxz
scas
and
cmps
jbe
fwait
bound
add
ins
mov
xor
aaa
leave
mov
jp
lods
icebp
cdq
ins
dec
call
mov
jne
cdq
(bad)
push
lock
dec
add
jecxz
ins
fwait
sbb
push
mov
sti
and
call
je
add
int
popf
out
icebp
inc
add
jle
mov
imul
fimul
stos
sub
push
(bad)
outs
push
test
sub
adc
cmc
cmp
jbe
pop
outs
inc
xor
cmp
int3
push
mov
call
ins
xor
les
add
repnz
jno
pushf
nop
xor
ss
lods
aas
xchg
call
adc
test
mov
inc
dec
cli
mov
stos
adc
call
in
mov
nop
mov
in
fisub
mov
std
and
mov
mov
mov
fs
sub
aaa
test
inc
xlat
or
and
mov
imul
test
lea
mov
pop
mov
int
mov
js
sti
pusha
mov
and
mov
in
push
ds
inc
ins
mov
xor
cdq
xchg
loop
sbb
aad
jp
sub
sahf
pop
push
outs
dec
(bad)
retf
inc
xchg
add
jnp
sbb
pop
arpl
jmp
outs
pop
fwait
nop
lahf
scas
mov
inc
out
out
mov
push
mov
xchg
sub
lahf
iret
sbb
and
call
test
or
fdiv
out
rcr
stos
xchg
test
push
cmp
mov
xchg
mov
into
repnz
pop
sub
jbe
loope
add
and
cmp
dec
xlat
movs
rcr
mov
push
pop
cmps
jb
punpckhwd
test
cmp
inc
pop
xor
addr16
leave
out
inc
ret
pop
shl
dec
inc
jmp
pop
xor
push
pop
ror
mov
cs
jns
push
out
sbb
sbb
aaa
sub
adc
inc
adc
jbe
mov
mov
cmp
dec
mov
dec
or
pop
jl
or
xor
jnp
jb
or
retf
mov
xchg
lods
mov
aaa
repz
sar
pop
push
add
fwait
jae
outs
ja
cdq
mov
jae
jge
mov
aas
loop
popf
je
inc
push
dec
or
stos
in
mov
add
xlat
add
add
adc
sbb
scas
leave
xor
add
test
aaa
jg
push
pop
and
cmps
ds
xor
mov
fistp
push
jb
fwait
adc
std
daa
sbb
add
and
fwait
aas
fucom
xor
mov
jno
scas
xor
mov
jo
dec
or
or
ins
mov
es
fwait
push
and
mov
push
mov
sub
sbb
fdiv
mov
shl
push
int3
push
dec
dec
ds
out
pop
or
aaa
repz
xchg
lods
add
dec
jnp
adc
neg
hlt
add
pusha
add
jae
nop
push
mov
add
push
inc
mov
or
mov
xchg
jae
mov
stos
test
push
shl
add
add
(bad)
mov
sbb
inc
sub
mov
into
movs
daa
sub
pop
and
pop
lock
adc
pusha
adc
in
cmp
inc
mov
out
jo
out
(bad)
or
mov
mov
jb
pop
movs
adc
lods
out
jbe
fwait
jge
add
and
ret
push
out
sbb
sub
fisttp
ror
(bad)
std
mov
sti
pop
jae
sbb
je
inc
out
jp
cwde
ss
cmp
je
or
push
inc
push
inc
sub
mov
push
cmp
call
and
cli
add
movs
fld
xchg
inc
shr
or
jecxz
pop
inc
fldcw
sbb
mov
mov
stc
aaa
jbe
push
cmps
movs
int
jnp
mov
out
stos
sub
lock
in
xchg
push
cmp
mov
es
mov
addr16
dec
repnz
mov
stos
retf
inc
aam
xor
push
xchg
daa
xchg
js
mov
lods
mov
push
aas
or
pop
int3
push
nop
leave
dec
sbb
aas
mov
cmps
dec
jp
in
(bad)
in
jnp
mov
aas
test
sbb
adc
out
loope
mov
mov
std
sbb
dec
xchg
stc
xlat
stos
cmp
(bad)
daa
clc
cmps
sti
inc
jae
stos
in
sar
dec
add
cmp
jmp
test
cmp
icebp
sbb
xchg
je
cmp
sub
sahf
pop
push
shl
push
es
add
lock
adc
ins
push
fisttp
mov
push
test
stos
add
inc
sub
sbb
shl
sbb
sub
iret
in
cmp
imul
or
and
jmp
mov
cwde
cmp
jecxz
sbb
dec
dec
sbb
jp
lock
mov
pop
add
ret
scas
lds
ret
jp
dec
lods
(bad)
fst
mov
xchg
popf
test
and
fdiv
xchg
and
push
shl
sbb
mov
cdq
ret
jo
cs
sub
pop
and
out
mov
pop
in
push
in
cmp
cmp
mov
loopne
loop
dec
pushf
retf
mov
lock
push
js
or
ins
jl
fild
jl
imul
arpl
dec
daa
aaa
arpl
fisubr
movs
cmp
aad
gs
sahf
mov
mov
push
mov
sub
xchg
cmp
xlat
add
out
sub
sub
mov
mov
cmp
sub
lahf
(bad)
out
push
mov
retf
clc
jecxz
jmp
xor
gs
sub
out
clc
test
in
fwait
(bad)
or
push
inc
cld
in
xor
scas
in
mov
loope
hlt
pop
fsubr
jb
rol
adc
imul
dec
cmps
nop
loop
jge
ds
dec
sub
and
inc
mov
outs
(bad)
in
dec
fstp
hlt
into
leave
fisubr
mov
iret
sbb
or
or
or
out
dec
pop
nop
dec
mov
inc
rcr
pop
add
mov
mov
ss
mov
rcl
(bad)
fyl2xp1
xchg
or
pop
aas
jb
xchg
jo
jge
sbb
inc
pop
imul
dec
or
mov
mov
cli
sbb
inc
movs
shl
fdiv
(bad)
ins
sub
pop
adc
xchg
cld
mov
imul
sub
mov
cdq
sbb
dec
shr
push
or
aaa
mov
adc
shr
lods
movs
cmps
mov
inc
pop
or
pop
dec
test
sahf
stos
and
mov
sub
addr16
popf
call
retf
xchg
xchg
test
pop
mov
jnp
push
and
int3
add
mov
adc
loop
cmp
lods
push
shl
cmps
je
sar
scas
leave
sbb
jae
ficom
cmps
jno
popf
cmp
out
mov
fwait
(bad)
clc
ss
add
xchg
stos
or
adc
push
mov
xchg
dec
ds
imul
loopne
arpl
pop
and
retf
hlt
sub
xchg
arpl
and
and
or
xchg
pop
cld
aam
add
sub
push
inc
call
ds
xor
aad
(bad)
aas
adc
in
lods
push
jns
pusha
xchg
adc
mov
imul
fistp
cmp
ja
push
movs
cmp
mov
inc
ds
xor
and
fnstcw
xchg
push
mul
mov
add
lods
pop
mov
rcl
inc
xchg
(bad)
dec
dec
hlt
mov
mov
retf
push
call
or
fucomip
jle
add
mov
cdq
cmps
cmp
xchg
sar
mov
inc
add
xor
inc
les
ret
dec
mov
sub
lods
das
mov
into
mov
mov
inc
add
and
push
cmp
push
xor
je
push
inc
mov
push
outs
enter
es
int3
mov
scas
and
cmp
dec
leave
outs
(bad)
movntq
enter
sbb
xor
sub
into
popa
mov
dec
(bad)
nop
pop
jb
fcmovne
loope
jmp
aas
clc
pusha
stc
mov
das
fmul
and
xchg
in
fisub
dec
(bad)
mov
fst
mov
sub
outs
jmp
sub
adc
test
xor
adc
push
cmc
sbb
ins
xchg
clc
std
icebp
std
jne
and
pop
pop
sbb
pop
or
push
fdivr
and
fidiv
retf
into
mov
fwait
movs
aas
pusha
call
aas
mov
mov
push
or
pop
(bad)
stos
xor
mov
ins
sbb
xchg
mov
cmp
dec
push
imul
pop
in
pop
mov
jo
(bad)
and
fsub
test
fisubr
add
fs
and
fisttp
cli
pop
aam
rol
cmp
mov
mov
fs
shl
ins
and
movs
call
fwait
imul
call
mov
mov
inc
cld
inc
add
dec
rcr
xlat
xor
imul
adc
xor
pushf
popf
inc
fiadd
push
gs
fwait
lds
add
cmp
sbb
push
fmul
add
adc
xchg
sub
xor
mov
fisubr
dec
or
mov
shl
sar
push
sbb
ins
popa
scas
jnp
inc
pop
in
les
out
add
mov
pop
sub
in
pminsw
call
cmps
imul
es
adc
loope
ins
adc
inc
inc
shl
fs
cmp
and
push
sub
xor
jb
movzx
outs
push
aas
aaa
loope
pop
cmps
xchg
cmp
mov
sbb
adc
jp
push
lods
test
ins
stos
call
test
sub
stos
leave
arpl
loopne
pop
out
xchg
add
push
mov
ficom
fs
xor
mov
xchg
cmp
cmp
syscall
mov
leave
sti
push
sar
not
imul
jl
test
mov
jmp
stos
sub
pop
pushfw
repz
xchg
call
mov
jb
pop
movs
xchg
push
mov
iret
add
std
repnz
dec
adc
enter
inc
and
jecxz
lods
mov
hlt
mov
cmp
pop
sub
sub
icebp
xchg
inc
fcomp
mov
fild
xchg
mov
mov
jmp
and
sar
repz
stc
jmp
fadd
stc
les
xor
neg
xor
cmp
mov
jl
xor
pop
mov
ss
(bad)
test
inc
loopne
adc
call
or
(bad)
inc
xchg
pop
retf
cmp
test
mov
cmps
cwde
push
jmp
(bad)
or
cmp
(bad)
dec
sub
sub
mov
jp
and
jno
xchg
and
loop
les
inc
repz
sub
push
test
xchg
mov
push
jmp
add
sub
call
ins
test
sbb
add
scas
aas
cmp
test
dec
inc
popf
cs
popf
call
pop
inc
adc
add
jae
pushf
and
ins
xchg
imul
pop
jecxz
imul
xchg
xchg
arpl
cmps
sbb
mov
xor
pop
jl
out
loop
fstp
stos
jle
add
xor
inc
add
xchg
lahf
shr
cmp
push
and
movs
inc
pusha
fadd
cdq
ins
(bad)
and
push
dec
jae
add
jle
cmp
cmp
dec
mov
arpl
push
or
sub
mov
dec
mov
xchg
aad
cmc
rcr
hlt
cs
idiv
pop
jmp
mov
cwde
and
add
fbld
jno
outs
inc
mov
adc
fstp
cmp
out
dec
es
or
cmp
loop
(bad)
sub
cmp
pandn
push
stc
ins
mov
push
fsubr
xchg
call
inc
test
(bad)
addr16
fisub
xchg
mov
cmp
lds
in
loope
xchg
sbb
and
xchg
mov
cli
sahf
out
fsub
adc
pop
inc
and
int3
retf
test
dec
in
mov
fidiv
mov
into
dec
mov
inc
fs
pop
or
(bad)
(bad)
sub
outs
aas
dec
cld
test
cmp
xchg
mov
xchg
mov
addr16
add
mov
fstp
mov
(bad)
push
sbb
and
mov
sbb
pop
not
cmps
jl
sbb
inc
mov
frstor
jl
add
jae
retf
pop
adc
ins
fsub
mov
mov
ins
mov
pop
adc
aam
test
cmp
add
add
ins
jmp
jecxz
lods
mov
mov
iret
lods
int3
clc
outs
jecxz
jbe
push
mov
call
dec
ficom
mov
call
add
mov
jns
jnp
push
imul
gs
jl
jg
add
in
fdivr
outs
mov
mov
xchg
adc
jae
or
dec
test
out
and
add
pop
jge
movs
add
push
leave
stos
rcl
inc
cmp
(bad)
fisubr
pop
mov
leave
jnp
push
adc
jl
dec
cmps
push
inc
js
add
push
pusha
js
mov
mov
mov
cmp
sub
into
xchg
aaa
data16
xchg
push
dec
inc
stc
(bad)
(bad)
jb
movs
inc
or
nop
movs
rcl
cmp
adc
mov
aam
in
xor
xchg
cmps
sub
mov
outs
aaa
test
jmp
mov
push
ds
mul
xchg
xchg
mov
xor
loopne
(bad)
in
or
lahf
inc
pop
fcom
sbb
xor
add
ss
movs
nop
leave
sahf
outs
nop
sbb
inc
and
jge
cli
xchg
mov
out
aas
add
mov
icebp
stc
mov
add
enter
mov
and
adc
sbb
and
push
stc
inc
loope
in
jmp
inc
ss
jmp
cmps
mov
add
mov
out
out
cmc
sbb
lock
loope
mov
cmps
sub
std
fwait
pop
jae
push
add
and
pop
out
fldz
ds
ffreep
retf
rcr
rol
cld
in
loop
into
inc
retf
mov
movs
(bad)
sub
lds
fistp
test
cmp
shl
cdq
xor
stos
in
aad
xchg
add
add
sub
ret
or
xor
icebp
pusha
ja
jb
test
push
aad
arpl
scas
js
aam
pop
xchg
fcomp
sub
es
cmp
pop
cmp
jmp
leave
cld
push
imul
es
mov
pushf
mov
dec
js
pop
inc
not
dec
scas
jae
push
mov
das
call
les
or
ins
(bad)
fld
cmp
fsub
push
push
(bad)
mov
mov
mov
jge
shl
add
mov
stos
(bad)
scas
enter
pop
lock
jp
fidivr
test
mov
lahf
mov
in
movs
pushf
and
nop
leave
out
mov
jnp
dec
outs
pop
rcr
rcr
mov
bnd
sub
jae
fs
pop
ret
cmp
or
in
mov
jecxz
xlat
cmp
mov
lea
fs
jo
leave
mov
add
inc
cli
pop
cmps
std
jo
xchg
cwde
into
push
sbb
xchg
cmp
sahf
or
vpackssdw
in
mov
mov
out
xchg
mov
sub
and
jbe
dec
push
xor
lods
xor
loope
rcr
cmp
pop
scas
dec
cmc
mov
or
loop
cld
push
adc
ins
stos
push
xchg
mov
mov
js
push
dec
pop
mov
fild
lahf
add
inc
repz
leave
mov
icebp
cmp
add
inc
cmp
retf
lods
test
or
mov
cmp
hlt
mov
jg
adc
xor
or
scas
(bad)
pop
lods
xchg
sub
sbb
mov
pop
sbb
fcomi
push
xor
popf
stos
add
jg
aad
(bad)
test
imul
dec
push
mov
mov
xchg
cli
cmc
call
aas
sub
cmp
dec
pusha
loop
sub
sub
sbb
add
add
jge
add
dec
imul
jae
nop
test
mov
leave
xor
and
add
adc
xchg
mov
aam
cmps
test
sti
and
std
(bad)
into
inc
sub
dec
fwait
pushf
push
mov
dec
mov
aas
inc
call
xor
add
push
ins
dec
imul
cmps
jl
cdq
pop
jns
ja
das
push
ins
jo
imul
mov
nop
xchg
mov
clc
bound
jnp
clc
dec
pop
ins
repz
fnstsw
dec
fidivr
xor
push
pop
fcmovbe
jnp
mov
loop
hlt
movs
cs
mov
adc
and
loop
dec
repz
mov
and
in
adc
xchg
test
addr16
dec
in
dec
or
mov
jg
mov
test
or
mov
xor
and
or
sub
test
mov
out
add
inc
mov
(bad)
xchg
dec
ins
arpl
js
mov
dec
mov
jne
aaa
jno
sti
xchg
or
sbb
mov
push
(bad)
fcomp
or
fs
loope
rol
or
das
and
mov
add
fdivr
(bad)
arpl
pop
mov
and
xor
repnz
fld
test
ret
pinsrw
pop
mov
sbb
out
add
xor
fnstenv
cmc
mov
push
mov
jmp
loope
xor
bound
sub
dec
inc
in
popa
push
(bad)
pop
mov
das
and
loopne
sti
xor
pop
add
sbb
mov
cpuid
cmps
dec
or
xchg
pusha
aaa
cld
stos
inc
leave
pusha
test
hlt
xchg
mov
out
cmp
push
and
xchg
(bad)
(bad)
fs
out
pusha
mov
pop
fist
mov
ffreep
inc
fsub
sub
lds
pop
rol
jmp
je
scas
rcr
sbb
stos
add
das
addr16
add
cmp
daa
imul
ins
xlat
xchg
icebp
fsub
mov
push
jge
xor
shr
add
inc
call
pop
mov
ds
xor
rcl
das
mov
or
(bad)
adc
fst
cmp
dec
bound
sbb
mov
inc
jg
add
aam
xchg
xor
xor
sahf
or
hlt
jmp
mov
jmp
aaa
dec
dec
mov
or
sbb
adc
and
repnz
or
scas
in
push
jb
dec
out
and
cmp
shl
push
mov
sti
cld
das
add
call
aas
push
push
imul
leave
loop
mov
je
je
push
pushf
push
mov
mov
add
push
sar
or
push
push
call
in
xchg
(bad)
stos
mov
or
ret
pop
in
xor
leave
(bad)
cmc
jmp
out
xchg
ds
or
int
mov
pop
in
loope
dec
ins
js
sar
inc
ret
and
xlat
aas
sub
or
xor
and
mul
pop
xchg
test
mov
mov
jmp
xchg
fs
ja
push
fnsave
lock
xor
ret
loope
add
mov
pop
shl
das
ss
dec
sub
adc
fwait
push
dec
dec
pop
shl
repz
stos
pop
sub
cwde
mov
lea
mov
push
shl
stc
loop
js
xor
data16
gs
outs
cmp
add
pushf
out
or
cmp
mov
push
add
je
je
push
mov
mov
adc
repnz
sbb
jb
add
movups
scas
mov
mov
sub
aaa
mov
cmps
aad
imul
inc
clc
pop
(bad)
ror
ret
mov
scas
push
sub
(bad)
pop
out
sbb
and
xchg
mov
bound
int3
scas
jns
mov
out
hlt
mov
in
fcmove
inc
mov
nop
push
sub
add
cmc
retf
cwde
in
aam
cmps
jl
fs
inc
cli
and
fistp
xchg
mov
mov
clc
mov
test
je
xchg
sbb
fist
inc
cmp
cmp
push
sub
dec
idiv
lahf
shl
sbb
(bad)
outs
jmp
das
xchg
inc
daa
pop
enter
rcr
sub
xchg
xlat
enter
adc
add
jecxz
add
pusha
push
popf
(bad)
daa
push
sti
sub
sub
or
into
sbb
push
pop
test
inc
push
adc
in
ret
jmp
out
arpl
sbb
or
dec
xchg
ins
dec
jo
sub
lods
xor
cmc
jbe
jbe
dec
out
into
mov
sahf
cmps
xchg
test
and
and
push
mov
push
dec
call
push
hlt
jmp
adc
fmul
ins
int3
popa
popa
adc
aam
mov
cmps
jnp
inc
mov
pop
xor
adc
int
outs
lds
xchg
jae
cli
xor
dec
inc
popf
or
cwde
aaa
mov
cmp
je
imul
pop
mov
inc
jmp
adc
xor
daa
push
shl
adc
int
test
mov
push
(bad)
cmps
jb
in
es
pop
inc
dec
fsubr
inc
pusha
sub
scas
push
mov
push
fldenv
add
add
push
or
loope
retf
je
clc
sahf
into
not
jns
data16
mov
out
dec
stc
mov
test
cwde
inc
ins
leave
sbb
dec
std
add
or
or
or
std
lods
push
jl
(bad)
imul
mov
ins
iret
addr16
sub
mov
push
imul
cmp
cmps
mov
pop
mov
jge
inc
push
call
push
movs
xor
sar
cmp
jne
loope
mov
test
pop
lds
jl
es
push
mov
xchg
ja
inc
pop
cwde
bound
fdivr
out
lahf
addr16
bound
jmp
mov
push
jle
dec
jmp
pop
inc
push
bound
call
push
test
mov
inc
push
xor
shr
lock
adc
sahf
xor
outs
imul
ret
gs
sub
adc
jle
xor
lds
fst
out
clc
enter
inc
jmp
pop
sub
test
cvttps2pi
sub
adc
push
or
inc
sbb
mov
repnz
je
iret
sbb
rcr
xlat
xor
scas
jg
frstor
sti
fs
pop
int3
fscale
xor
call
and
cwde
aas
sbb
stos
sahf
call
cwde
fsubr
dec
jmp
pop
push
(bad)
cmc
stos
rcl
pop
std
inc
sahf
mov
lods
jge
sbb
sub
jmp
fcmovu
add
es
bound
sub
popf
mov
dec
jnp
fisub
mov
fld
imul
dec
imul
shr
lods
ret
std
push
xchg
push
dec
push
cmps
idiv
imul
add
sub
fs
call
sahf
std
adc
arpl
data16
jge
call
pushw
jmp
push
pop
inc
inc
leave
mov
mov
xor
fst
xchg
jns
jg
stc
and
jecxz
outs
cmps
push
cdq
pop
or
jae
xchg
(bad)
ds
dec
fcmove
sub
mov
or
pop
pop
cmp
jns
test
push
(bad)
in
jge
fsubr
test
es
retf
ins
lahf
outs
dec
repnz
dec
movs
test
pop
stc
push
test
test
push
push
(bad)
outs
jg
sbb
test
sub
mov
sbb
dec
pop
pop
je
dec
inc
mov
aam
push
(bad)
dec
jns
test
retf
jecxz
ret
stos
xlat
std
outs
dec
mov
mov
stos
add
add
and
xor
adc
cli
xchg
dec
scas
fwait
into
test
mov
and
ffreep
loopne
in
iret
and
das
mov
movs
inc
mov
test
or
(bad)
jo
dec
mov
rol
xchg
mov
ja
popa
mov
outs
push
inc
cs
das
pop
in
clc
sbb
test
fdivr
rcl
pushf
sbb
je
test
xchg
out
mov
push
cmp
push
cs
ret
fisttp
ss
inc
cmp
stos
add
(bad)
mov
xor
daa
arpl
xor
mov
fldenv
push
adc
fbstp
mov
cld
jns
or
cmps
inc
xor
imul
jmp
mov
cmps
xor
aas
push
ret
pop
mov
pop
or
inc
int3
mov
fld
sahf
std
shl
cmc
fcomp
adc
mov
fstp
jb
mov
jb
fst
je
adc
(bad)
mov
test
mov
xchg
aad
jecxz
fdiv
int
into
imul
push
fsub
mov
shr
outs
fdivr
fldcw
leave
cwde
adc
pop
xchg
jle
inc
popa
ficom
jne
call
sti
sti
addr16
jge
in
xor
pop
fcom
repnz
mov
jbe
or
stos
jmp
loopne
lea
pop
sbb
push
in
xor
movaps
xchg
inc
sub
dec
xor
cmp
sub
xor
pop
ins
repz
xchg
movs
mov
test
(bad)
cmp
mov
cmp
nop
nop
jg
imul
add
enter
xchg
(bad)
push
dec
jbe
mov
paddsb
gs
sbb
pop
mov
dec
or
xchg
je
cmp
clc
fistp
push
int3
aad
inc
mov
sbb
sbb
lds
gs
ss
fadd
in
retf
std
mov
xchg
shr
cs
fucom
ss
lods
ss
shl
jno
int3
rcl
ret
adc
sbb
ret
mov
retf
shr
mov
mov
or
(bad)
repnz
mov
jnp
nop
out
xchg
sar
inc
mov
cmp
ret
lods
jmp
pop
mov
mov
stc
pop
loop
fimul
xchg
pop
xchg
fdiv
or
fs
mov
xchg
jecxz
xchg
mov
lods
sub
jne
retf
mov
mov
stc
xor
mov
push
add
add
dec
shr
jp
jge
and
gs
pop
pop
xchg
inc
xlat
in
or
push
call
jne
jae
dec
cmp
xlat
or
out
test
xlat
or
stos
add
pop
dec
movs
sbb
nop
fild
sub
xchg
add
ret
add
nop
xchg
inc
pop
stos
add
lods
fst
outs
and
call
mov
lea
cmp
xor
push
loopne
ds
push
cwde
(bad)
and
adc
pop
sbb
es
sbb
push
ss
inc
mov
mov
pop
stos
stc
mov
clc
dec
dec
xchg
cmc
mov
inc
ds
jle
mov
daa
shr
push
push
and
adc
inc
outs
mov
clc
cmp
or
stos
jno
popa
into
or
je
into
mov
popf
arpl
inc
call
call
jp
mov
pop
stos
fmulp
dec
mov
inc
adc
add
push
pop
or
push
xchg
test
cs
jecxz
out
xchg
xchg
popf
sbb
bound
sub
test
mov
and
pop
fcom
dec
fisubr
bound
or
imul
xchg
les
sub
push
retf
cmp
sbb
imul
xchg
int
xor
dec
xchg
mov
cmps
mov
sahf
sub
jbe
mov
retf
(bad)
push
push
cli
out
add
jecxz
lahf
jge
add
and
(bad)
xchg
pop
pop
cmp
lock
cmp
pop
inc
inc
addr16
ja
jne
mov
movs
or
mov
test
fwait
lds
aam
rcl
ret
inc
(bad)
xchg
mov
jmp
dec
popf
cmps
out
cmp
push
pop
pop
sahf
cmp
cld
test
test
mov
push
cmp
aad
cmp
sub
cmp
dec
lahf
pusha
mov
not
mov
cdq
push
mov
iret
pop
(bad)
mov
aas
jmp
jecxz
jnp
test
and
aad
popa
mov
xchg
adc
sbb
mov
inc
(bad)
(bad)
popf
push
add
jnp
aas
xor
pop
cmp
ror
inc
or
int3
pop
loopne
cmp
bound
cdq
jnp
pop
cmp
add
cmp
icebp
push
mov
add
lds
pop
lds
sbb
movs
sti
and
fs
mov
in
push
stos
dec
cld
lods
int
cwde
sahf
clc
bound
dec
jp
pop
sub
(bad)
sbb
scas
mov
xor
xchg
inc
mov
sub
gs
jmp
fnstcw
stos
sbb
adc
ret
jmp
and
scas
outs
out
push
icebp
push
mov
adc
ins
sub
psrad
movs
push
es
sub
or
mov
mov
mov
mov
cli
ds
fsub
push
lea
test
imul
mov
sbb
enter
adc
call
das
mov
and
repnz
pop
dec
mov
and
dec
jge
sbb
sti
cmps
fwait
sub
ja
xor
jl
sub
(bad)
loope
gs
stos
and
ins
mov
dec
jno
repnz
into
mov
xor
jle
retf
mov
push
call
dec
add
arpl
ret
sbb
jg
jmp
imul
imul
sahf
dec
mov
stos
add
xchg
mov
add
push
std
cmc
adc
mov
pop
(bad)
sbb
jg
pop
inc
push
dec
mov
sub
data16
xchg
mov
add
push
repz
stos
jmp
loope
les
call
dec
mov
jmp
push
inc
test
(bad)
mov
mov
sub
xchg
iret
jle
add
dec
addr16
fwait
stos
sahf
cmp
xor
inc
imul
ds
mov
je
dec
das
js
jp
test
fisttp
mov
test
dec
cmp
add
and
xor
ins
shr
jns
pop
pop
push
adc
(bad)
pop
mul
mov
data16
shr
out
push
or
mov
nop
outs
add
mov
aas
push
or
mov
in
les
mov
and
add
jae
and
rcr
movs
dec
mov
pop
push
xchg
(bad)
mov
dec
daa
sub
stc
jmp
xor
sahf
add
popa
ds
out
cdq
cdq
loopne
(bad)
inc
pop
fadd
sub
mov
pop
add
xor
hlt
ss
pop
test
enter
add
pop
fistp
cwde
sbb
mov
mov
add
int3
push
push
sti
imul
xor
cs
pushf
jbe
sub
pop
sbb
rcl
or
xchg
mov
test
mov
adc
xchg
add
xchg
cwde
pop
scas
ins
sti
mov
dec
(bad)
popa
out
or
mov
sub
stos
xchg
mov
push
xchg
int3
jl
mov
sub
loopne
or
test
adc
add
mov
mov
jl
and
mov
cmp
add
mov
lea
imul
mov
cmp
sub
add
fild
mov
or
dec
test
ins
inc
lods
dec
xchg
je
inc
xchg
adc
movs
push
mov
jbe
stos
or
xchg
jge
pop
leave
add
lods
in
cli
and
mov
into
pop
into
je
sub
adc
gs
pop
sbb
xchg
jmp
mov
mov
retf
sbb
cmc
test
les
cwde
dec
jnp
mov
jmp
cmp
int3
imul
jmp
mov
repz
add
push
sbb
aas
jnp
mov
sub
pop
add
mov
mov
sti
push
in
jno
jb
mov
aaa
pop
call
repz
pop
push
cmps
inc
push
sbb
dec
and
test
sbb
je
lahf
jbe
popf
iret
dec
and
xor
pop
jnp
std
daa
inc
push
ja
scas
ret
mov
out
xchg
ror
cwde
not
dec
xchg
pop
add
sbb
hlt
lock
ss
pushw
imul
push
pop
not
outs
sub
ss
int3
jmp
mov
imul
and
movs
lds
cli
sub
mov
and
jg
in
jmp
adc
and
mov
shl
rcl
pop
bound
mov
(bad)
mov
outs
clc
clc
jge
out
call
retf
and
push
(bad)
sbb
mov
jbe
das
in
jmp
pop
out
rcl
mov
cmps
push
daa
adc
pop
inc
mov
fisttp
retf
inc
inc
hlt
jge
aad
mov
scas
dec
pop
aaa
nop
test
cmp
pop
lock
push
mov
shl
pandn
sub
jae
out
mov
loop
sub
inc
in
ins
mov
or
lods
xchg
jp
jo
je
(bad)
add
and
mov
ret
push
xchg
or
test
cmp
push
test
dec
enter
fwait
push
imul
mov
sub
and
cmp
cwde
xchg
dec
inc
or
outs
icebp
mov
ins
ja
mov
mov
jno
and
mul
cdq
xchg
cmp
sbb
test
fisttp
in
cmps
push
imul
jg
mov
out
in
es
ror
fmul
test
stos
pop
aaa
ds
adc
test
clc
jl
or
mov
cs
mov
inc
mov
sub
inc
xor
clc
mov
mov
rcl
and
je
pop
outs
dec
and
jo
sbb
sbb
test
adc
mov
add
cs
lock
movs
stos
sbb
fist
sub
add
retf
div
pop
scas
push
push
jns
(bad)
hlt
bound
adc
push
and
movs
loopne
and
cmps
mov
std
lea
in
push
mov
ja
push
sbb
cmp
cli
fisub
rcl
dec
aaa
cmp
jbe
scas
repz
fidiv
jp
adc
mov
rcr
xor
inc
pop
push
fstp
ja
aam
fcom
pusha
xor
daa
jg
sti
popa
imul
cs
mov
pop
in
outs
xchg
fmul
jbe
or
ja
inc
cmp
push
shl
into
adc
call
popa
ja
test
inc
sub
ret
inc
add
and
mov
mov
aas
pop
cmc
rcr
adc
sbb
movs
lods
cs
jo
mov
lds
sub
pop
sub
fcmovnu
aas
shl
xchg
and
mov
fmul
jmp
sub
jbe
test
or
mov
fwait
xchg
add
adc
fisub
daa
ss
pop
cmps
cmps
rcl
adc
jmp
dec
jg
cli
adc
lods
ds
and
sub
jecxz
mov
mov
push
cmp
mov
fnstenv
mov
ucomiss
cmp
xor
imul
and
mov
push
pop
sbb
and
push
(bad)
sahf
add
ja
xchg
add
sub
fild
xchg
sbb
ds
scas
js
and
xchg
xchg
sub
icebp
dec
or
(bad)
mov
ins
jb
(bad)
xor
jmp
arpl
push
lahf
int3
imul
adc
test
stos
pop
aad
mov
push
js
push
pop
ins
jecxz
aas
dec
pop
mov
mov
push
pop
das
fadd
adc
fsubp
sub
cmp
outs
or
sbb
push
(bad)
ins
aad
cmp
mov
in
fcom
adc
sub
arpl
add
test
jnp
or
xchg
or
inc
out
lock
ror
int3
nop
jbe
inc
xchg
lds
inc
and
iret
jg
inc
xchg
out
cmp
ss
sub
xchg
(bad)
mov
(bad)
js
loop
cwde
movs
and
scas
dec
jb
repnz
add
int3
adc
pusha
and
aad
cdq
push
stos
adc
cli
adc
ins
neg
shld
sbb
add
sar
jge
sbb
sub
inc
or
push
enter
movs
xor
dec
or
dec
push
loopne
setg
jecxz
(bad)
std
xchg
retf
in
jmp
pushf
mov
and
inc
inc
lea
loop
fs
xlat
mov
sbb
xor
or
cs
mov
xor
and
lock
sbb
fnstcw
mov
cmp
mov
bound
sti
or
add
je
retf
push
dec
arpl
sar
scas
dec
cli
mov
add
push
mov
add
fbld
sar
xchg
pop
cmps
les
mov
push
cmps
jmp
cdq
inc
push
int3
and
xor
dec
dec
mov
jns
repnz
ror
lock
popa
lds
fwait
jns
repnz
jecxz
jg
fmul
ja
or
test
push
jns
(bad)
cs
out
mul
jl
sbb
bound
int3
mov
mov
cmp
xor
add
in
xchg
mov
out
leave
inc
dec
lahf
dec
push
sti
dec
aad
jno
cmp
add
xchg
sti
ss
push
jae
je
call
mov
sbb
push
aaa
inc
cs
add
inc
mov
sub
stos
loopne
std
jbe
or
aad
sbb
inc
retf
inc
sahf
push
sbb
(bad)
mov
test
pop
adc
stos
hlt
jg
add
xchg
dec
sbb
add
(bad)
inc
imul
bnd
loopne
das
mov
pop
das
mov
movs
es
jmp
jg
mov
stos
dec
jno
lods
gs
jmp
call
(bad)
inc
(bad)
mov
inc
and
mov
jge
pop
cld
xor
movs
rol
out
dec
or
fadd
ret
cmc
mov
ja
iret
xchg
or
(bad)
aad
retf
xchg
sub
cmp
mov
add
mov
lods
adc
pop
mov
shr
ja
addr16
addr16
sti
out
iret
inc
out
mov
sub
inc
sub
leave
lahf
push
mov
push
sbb
jne
or
xchg
out
test
mov
test
jo
cwde
popa
rcr
out
fisub
not
jle
dec
adc
push
fadd
inc
push
push
test
lods
pop
hlt
out
pop
jg
jb
jp
mov
mov
inc
lahf
lods
sbb
movs
inc
daa
jbe
cmp
sbb
sbb
cmps
xor
sbb
mov
sub
rol
ss
sbb
hlt
imul
xchg
popf
retf
adc
add
icebp
mov
in
inc
jg
add
std
fld
popf
push
add
add
xchg
fs
out
jecxz
sbb
xchg
call
mov
dec
jmp
or
data16
pop
mov
push
aaa
pop
mov
leave
in
test
cdq
cld
js
xor
jle
ss
sbb
inc
and
stos
fs
mov
or
aas
shl
fwait
inc
fwait
xchg
inc
lds
push
mov
scas
and
pop
push
push
adc
xchg
or
mov
cmp
jmp
test
sbb
xor
or
push
dec
aaa
ss
jno
stos
arpl
fld
adc
cmp
mov
xchg
xlat
retf
mov
test
bsr
jle
or
xchg
sub
out
mov
mov
lods
add
cmp
std
test
ins
pop
loope
pop
int3
and
sub
mov
xor
retf
movs
es
jle
pusha
add
outs
lods
fwait
mov
in
lock
(bad)
cmp
push
out
leave
loop
mov
or
mov
dec
sbb
rol
xchg
cmp
dec
(bad)
or
loopne
(bad)
jmp
fwait
stc
dec
xchg
into
sub
cmp
pop
push
ret
cmps
dec
jo
fmul
rol
enter
psubw
pop
bound
scas
shl
jns
(bad)
jo
pop
(bad)
cmp
inc
rcl
shl
ficom
cmp
inc
stc
sub
xchg
fcmovu
icebp
out
mov
sub
or
push
adc
jne
(bad)
pop
gs
jnp
paddusw
mov
ja
rol
(bad)
push
packuswb
mov
and
sbb
jbe
out
in
lods
hlt
call
inc
shl
cli
push
pushf
imul
xor
(bad)
movaps
fdiv
enter
or
jecxz
or
jns
sbb
(bad)
pop
lods
xchg
pop
mov
or
(bad)
(bad)
mov
std
sub
lods
sub
call
add
mov
add
call
dec
rcl
imul
inc
lods
ja
mov
cmps
inc
inc
or
sub
dec
dec
test
push
(bad)
mov
in
outs
or
and
mov
(bad)
sub
xchg
xor
or
jecxz
repz
adc
and
call
inc
imul
in
mov
hlt
pop
nop
mov
not
mov
stc
ret
sbb
sar
push
xadd
sbb
jo
jno
lods
push
mov
ror
cld
jp
push
cmp
xchg
imul
test
pop
push
in
xor
inc
aam
fmul
mov
out
jb
imul
pop
cmp
icebp
mov
pop
retf
add
inc
xor
push
add
push
jmp
sub
sub
repz
mov
inc
adc
out
sbb
pop
push
ret
xor
call
sar
int
and
sub
adc
mov
stos
(bad)
stc
cmp
or
xchg
xchg
jmp
mov
sub
out
adc
cmc
in
(bad)
jb
dec
imul
loopne
or
les
fwait
xchg
(bad)
cld
xchg
iret
sbb
fucomp
xchg
pop
mov
arpl
pop
lock
xor
es
retf
addr16
jp
(bad)
push
test
mov
daa
jns
push
nop
cs
in
(bad)
cmp
lods
ins
pop
ins
icebp
call
ror
movs
gs
pushf
mov
push
inc
push
adc
imul
cmp
pop
adc
sub
sahf
mov
repnz
mov
xchg
jecxz
and
daa
jmp
pop
jge
dec
mov
ins
mov
cmp
retf
sub
and
ss
sub
das
repnz
pop
pop
movs
fsubr
jge
or
sub
ins
jno
or
pop
cmp
and
cmps
lock
or
sahf
gs
adc
lds
pop
lock
imul
mov
jno
mov
cmp
cmp
mov
sub
pop
inc
jno
pop
cmps
lock
or
sbb
jb
fiadd
mov
test
pop
mov
add
mov
retf
inc
ret
test
imul
arpl
push
push
xor
add
popf
mov
lods
retf
call
out
repz
jecxz
ins
push
icebp
push
mov
pop
sbb
jmp
sbb
inc
js
and
push
dec
dec
push
aam
sbb
outs
call
xchg
pop
rcr
jmp
es
mov
sbb
push
adc
fadd
rcr
sub
jmp
inc
dec
xchg
pop
dec
(bad)
sbb
cmp
movs
mov
sbb
sbb
jbe
inc
cmp
mov
jmp
cmp
shl
mov
xlat
xchg
bound
repnz
cwde
pop
push
test
xor
push
and
scas
(bad)
jp
inc
fidiv
mov
pop
rcl
outs
jmp
mov
dec
add
cli
sub
xchg
pop
jmp
out
sub
cwde
xor
or
add
adc
mov
loopne
and
outs
outs
int
mov
or
pop
inc
(bad)
add
cmp
push
cmp
ficom
loope
sahf
mul
mov
xchg
(bad)
add
mov
imul
sbb
lahf
pop
xor
cs
or
and
(bad)
cld
mov
mov
sub
sbb
scas
mov
or
sbb
push
cs
int
and
(bad)
aam
(bad)
sub
jnp
test
adc
add
popa
pop
daa
jnp
rcl
xchg
stos
div
stc
test
div
inc
cmp
icebp
ret
outs
js
push
imul
push
jb
lods
jg
and
cmp
pop
jnp
shl
fistp
inc
xor
lea
in
imul
std
pop
jp
loopne
pop
sbb
sahf
les
jle
scas
jg
sub
or
mov
xor
and
xor
outs
aaa
add
xlat
xchg
fmul
mov
pop
mov
xchg
adc
sub
add
test
test
dec
adc
lods
scas
xlat
imul
clc
push
jp
out
cmp
fsubr
ror
jns
out
lock
(bad)
mov
fisub
es
into
jle
cli
push
xchg
loopne
inc
repz
pop
mov
lahf
inc
scas
repz
pop
mov
push
adc
push
jmp
imul
cmp
call
into
scas
lds
sbb
push
xor
xor
inc
jae
aas
dec
cmp
imul
pop
mov
iret
jnp
lods
push
jne
push
cli
cmps
xchg
jge
adc
pop
mov
ins
lds
xchg
pop
stos
arpl
(bad)
jb
outs
aad
push
push
lahf
pop
leave
scas
jmp
mov
mov
jmp
adc
and
xchg
add
nop
adc
mov
daa
adc
arpl
xchg
icebp
pop
jnp
leave
sbb
jno
hlt
ss
(bad)
add
jmp
mov
(bad)
hlt
dec
add
pop
dec
add
sub
xchg
pushf
out
call
(bad)
not
aam
repz
iret
cmp
cmps
jecxz
push
ficomp
movs
pop
in
sub
push
dec
ror
mov
das
push
or
scas
sbb
jnp
and
bswap
push
test
inc
mov
dec
inc
je
div
push
rcr
mov
cmp
mov
fimul
dec
cli
xchg
imul
je
adc
movs
out
sbb
jne
ins
out
jge
mov
or
shl
js
xlat
push
fdivr
popf
add
push
pop
pushf
loopne
fmul
scas
aad
stc
xor
pop
ins
(bad)
mov
test
in
leave
fdivp
mov
scas
sub
aad
sbb
popf
jmp
dec
into
dec
xchg
xor
fmul
les
bound
mov
sbb
xor
xor
not
dec
pop
mov
dec
(bad)
adc
rcr
add
sti
jg
xchg
xchg
ins
ret
xchg
sbb
or
mov
fdivr
pop
jge
xor
gs
int
or
das
inc
clc
lds
ror
in
scas
pop
dec
and
or
inc
adc
cmp
sahf
pop
add
movs
pop
cmps
test
cmp
test
repz
nop
gs
in
cmps
es
or
sbb
cmp
push
jns
dec
push
lds
dec
lods
xor
jge
js
mov
ffreep
fadd
mov
pop
mov
sub
sti
mov
and
icebp
fwait
call
jmp
aad
rol
sub
push
rcl
and
ret
jmp
jns
jns
or
mov
jae
pop
xlat
adc
fsubr
adc
pop
sbb
enter
mov
sub
pop
push
mov
xchg
inc
or
mov
shl
dec
xchg
scas
sti
cmp
add
sbb
and
int3
int3
push
xor
xor
fst
xor
pushf
push
xchg
pop
pusha
push
adc
stos
es
xlat
(bad)
es
add
sbb
popf
adc
xchg
mov
adc
mov
pop
pop
in
gs
iret
pop
pop
es
sbb
neg
jp
lds
push
dec
sar
jb
(bad)
sbb
push
jp
mov
sbb
mov
cmps
mov
addr16
cmp
je
sub
jmp
pushf
jbe
nop
and
sar
inc
cmp
push
and
out
scas
dec
mov
jecxz
ins
mov
out
or
dec
or
cmp
and
out
enter
cmp
sbb
pop
xchg
adc
jle
pop
(bad)
lahf
(bad)
rcr
clc
xchg
mov
pop
xchg
in
rol
cmc
dec
test
js
pop
mov
repnz
dec
or
popf
fwait
dec
or
mov
xor
jnp
sub
mov
test
ret
cmp
xchg
pop
fld
(bad)
mov
sbb
pushf
sub
lahf
push
lods
cs
cmp
fdiv
mov
into
mov
jmp
mov
jl
mov
std
dec
shr
and
jb
bound
mov
mov
js
popa
add
retf
push
jo
mov
mov
sti
mov
loopne
in
adc
aad
xchg
xchg
or
cmp
push
(bad)
lods
push
aas
(bad)
dec
pop
and
cmp
inc
dec
jl
daa
sub
mov
loope
fidivr
fld
mov
jne
jl
mov
nop
inc
sbb
adc
scas
addr16
lods
sub
mov
(bad)
adc
mov
push
outs
lock
rcr
mov
in
cmp
pusha
sub
(bad)
loopne
add
(bad)
in
call
std
mov
mov
mov
ror
rol
scas
fbld
adc
or
gs
dec
lods
jnp
test
out
pop
cs
push
ror
imul
mov
push
xchg
mov
cmp
mov
mov
sbb
out
ret
add
adc
hlt
sbb
ret
xchg
ror
(bad)
enter
xor
icebp
sbb
jmp
daa
es
rcl
push
shl
inc
into
sbb
fisub
jnp
pop
adc
jmp
inc
out
mov
repz
mov
jge
xchg
inc
cmp
movs
add
add
out
cdq
ins
hlt
in
in
or
faddp
ror
call
pop
mov
mov
xchg
(bad)
fcom
xor
mov
jae
adc
stos
xor
je
shl
cli
adc
add
lock
sub
jae
js
retf
hlt
test
cmc
jmp
loope
lahf
cmp
xor
mov
leave
clc
push
hlt
add
jb
popa
movs
mov
dec
sbb
test
dec
aam
mov
dec
dec
retf
(bad)
xor
int
inc
inc
jno
(bad)
add
xlat
rcr
ins
lahf
push
add
jmp
scas
repz
test
fisubr
sbb
movs
into
clc
pop
xchg
das
pop
test
sar
adc
adc
gs
in
or
jae
adc
imul
adc
cli
add
mov
fadd
shr
dec
out
jg
inc
mov
ror
pop
cmp
and
cmc
mov
xor
push
hlt
shl
(bad)
in
pmuludq
addr16
mov
cmp
mov
mov
pop
dec
outs
not
xor
sbb
loopne
loope
nop
lahf
mov
jg
es
(bad)
test
xchg
push
adc
scas
outs
push
add
sub
lods
mov
xchg
gs
add
and
es
mov
cmps
popa
jb
sbb
cmc
xchg
(bad)
inc
xchg
sub
mov
push
push
dec
jno
(bad)
sbb
ja
jnp
mov
not
mov
imul
sub
adc
ins
mov
lds
loope
stos
in
add
je
mov
mov
or
leave
nop
pop
test
xchg
pop
hlt
inc
retf
xor
mov
jle
cwde
ret
add
inc
lahf
into
out
and
or
inc
rcr
xchg
std
rcl
mov
leave
sti
test
push
push
je
add
(bad)
cmps
call
arpl
jg
dec
les
ins
xor
dec
cmps
push
and
xor
push
test
fsubr
stos
dec
aam
xlat
inc
ror
push
xchg
and
cli
dec
sbb
cli
and
push
and
fstp
mov
push
cwde
dec
ds
pop
xchg
jecxz
(bad)
cmp
test
sbb
jmp
nop
sahf
sbb
and
out
sbb
xchg
test
xchg
into
ss
popa
mov
div
cmp
inc
cmp
push
repnz
(bad)
jge
sbb
or
aaa
jbe
and
or
(bad)
enter
aad
out
lods
rol
mov
mov
fidivr
loope
adc
cwde
jmp
xchg
outs
loopne
shl
int
ret
(bad)
adc
movs
dec
in
adc
jmp
(bad)
xor
mov
out
pop
jbe
out
jle
adc
sub
mov
jmp
jle
aam
movs
sbb
cmps
xor
mov
mov
in
push
int
out
mov
js
aas
add
aad
jge
pop
push
mov
(bad)
enter
adc
retf
sbb
retf
(bad)
int3
fidivr
jg
dec
sub
retf
inc
mov
fwait
or
xor
mov
jmp
fldenv
aad
mov
mov
xchg
(bad)
cld
jmp
test
ror
mov
jecxz
inc
cmp
test
lock
push
xchg
mov
rol
or
xchg
inc
mov
inc
sbb
add
xlat
in
jmp
sub
aad
sbb
sbb
xchg
call
aaa
pop
xchg
or
inc
out
and
pop
push
ins
mov
sbb
xchg
das
jl
xchg
cli
push
inc
sbb
inc
cmp
mov
sub
lock
jb
jbe
cmp
xchg
or
in
ins
sbb
jmp
xchg
sbb
in
out
xchg
push
mov
retf
mov
mov
xchg
ror
cmp
xchg
jb
and
push
outs
movs
jmp
ret
add
daa
jae
into
fisttp
sub
aaa
push
not
xchg
pop
mov
inc
stos
pop
ja
push
dec
repnz
inc
cmp
push
js
mov
push
cmp
adc
movs
les
push
and
add
adc
and
jns
xchg
add
retf
retf
dec
sbb
in
ficomp
push
lods
ret
lahf
inc
push
addr16
sbb
(bad)
fs
jne
inc
mov
stos
stos
std
and
(bad)
jmp
in
out
fbstp
ret
bound
test
sbb
test
(bad)
sti
aaa
test
aad
shr
fnstenv
ret
int3
cld
xchg
mov
sub
loop
xchg
ins
mov
xchg
leave
dec
fbld
xlat
stos
sbb
js
test
mov
mov
fcom
sub
and
add
pop
sub
pop
sbb
push
jge
test
sar
(bad)
mov
xchg
mov
push
push
iret
pusha
dec
cmp
pusha
or
lahf
sbb
cmp
(bad)
sub
mov
rol
push
or
jl
add
bound
xor
sahf
hlt
jl
push
aam
push
test
or
js
lock
sbb
dec
xchg
cld
fcom
xchg
fwait
sub
pop
jb
mov
pop
pusha
pop
jne
dec
ror
dec
pop
shl
sub
xchg
sub
add
pop
mov
sub
fldenv
push
mov
cmps
aas
gs
popa
loopne
test
inc
mov
rcl
movs
jp
scas
aaa
test
clc
lds
jg
fwait
popa
mov
jno
retf
test
dec
cmp
into
je
mov
xor
cmp
jne
sub
das
sbb
inc
cmp
je
or
xchg
jmp
in
jb
pop
fstp
mov
xchg
shl
cmp
fs
pop
jp
and
pop
adc
(bad)
or
movs
imul
and
inc
movs
data16
mov
lds
shl
das
fdivp
push
repz
mov
inc
call
adc
int
into
and
jmp
fldcw
fild
call
jnp
(bad)
ror
xchg
addr16
mov
xchg
mov
xchg
cmp
sbb
dec
gs
mov
push
push
pop
std
mov
xor
outs
ja
std
in
add
scas
lods
pushf
or
in
and
retf
or
push
(bad)
in
out
mov
and
fist
fidivr
cld
(bad)
ds
mov
xor
cmps
inc
dec
xchg
cmp
out
stos
out
nop
and
mov
or
push
stc
out
enter
icebp
ja
scas
mov
push
dec
aad
adc
adc
jns
(bad)
(bad)
imul
retf
fwait
stos
add
pop
popw
aam
in
cmps
(bad)
and
or
xor
sub
or
cmp
ja
add
pop
pop
mov
lods
dec
xor
push
fstp
nop
jp
xchg
and
push
sbb
movs
push
add
fnstsw
and
adc
rcr
mov
add
xchg
mov
add
mov
retf
mov
mov
inc
stos
sbb
cs
loopne
push
scas
leave
sbb
adc
push
pop
(bad)
fist
leave
lods
int
pop
es
adc
jo
retf
imul
adc
xlat
xchg
xchg
xor
psllq
ja
imul
pusha
mov
aaa
jmp
bound
pop
sbb
cs
push
add
and
(bad)
cmp
jle
xor
loopne
mov
ins
inc
cmp
or
ins
add
xor
cli
push
cwde
mov
jno
and
lahf
sbb
cmp
das
js
mov
fidivr
pushf
jmp
xchg
jns
mov
pop
imul
cmps
mov
in
dec
add
sub
mov
inc
and
and
dec
in
mov
xor
xchg
jmp
loop
mov
sahf
(bad)
cmps
pop
pop
adc
imul
movs
in
movs
jmp
pop
mov
or
not
inc
lock
sbb
(bad)
popf
mov
or
mov
pop
sti
movs
cdq
les
jp
sbb
push
loopne
popf
lock
push
pop
ret
ret
sub
(bad)
and
cwde
fneni(8087
push
ror
ror
cdq
lds
fucomip
xlat
push
dec
fidivr
push
arpl
fsub
jl
out
dec
xchg
cld
in
ins
pop
cmp
jno
cld
and
ins
pop
rep
inc
xchg
or
lock
fld
inc
mov
xchg
jmp
xor
cmps
mov
jb
imul
adc
sub
lods
push
ss
aas
cmc
sti
sbb
jo
jg
sbb
lds
rcl
sbb
and
mov
or
pusha
cdq
stos
inc
adc
lods
and
cmp
push
inc
aad
(bad)
adc
push
push
mov
scas
out
mov
frstor
aas
add
add
and
sahf
push
push
cdq
jno
mov
inc
fld
sub
add
outs
aaa
test
adc
adc
out
jle
neg
xor
push
leave
shl
jns
and
push
js
xor
and
movs
jmp
push
outs
mov
mov
std
cs
pop
pop
movs
sti
jle
sar
sub
or
out
mov
cs
push
(bad)
mov
sbb
push
ss
mov
mov
ins
add
ss
adc
or
inc
scas
xlat
loope
neg
xlat
ins
cmps
dec
inc
jne
sbb
inc
mov
bts
test
into
ret
enter
nop
scas
pusha
sti
rcl
(bad)
pop
jge
mov
int
ja
cmps
lahf
sbb
inc
push
xchg
or
pop
cmp
(bad)
xchg
test
xchg
fwait
cmp
repz
cmps
out
xchg
dec
cmc
sub
in
jp
cmp
inc
inc
lds
dec
add
dec
mov
movs
out
dec
xchg
cmps
mov
cmps
retf
push
aaa
push
aam
pop
cld
mov
mov
int3
ja
xor
in
xlat
mov
inc
idiv
bound
mov
loopne
fwait
adc
xor
jne
dec
pop
push
mov
dec
les
and
jge
cmps
bound
add
lods
cdq
fistp
mov
fist
xor
cmp
or
sbb
xor
jmp
push
sub
mov
inc
addr16
inc
adc
add
stos
mov
cmps
adc
js
and
call
xor
pushf
das
push
pop
xor
stos
sar
inc
jge
daa
mov
ror
fsubr
bnd
jl
(bad)
movs
add
sbb
dec
repz
jne
lahf
ds
movs
(bad)
jo
add
or
test
shr
mov
(bad)
pop
jmp
(bad)
sbb
repnz
scas
out
shl
cld
in
ja
lea
fstp
outs
movs
les
inc
cli
push
xchg
ins
loopne
jg
mov
cli
pop
pop
add
push
jnp
sub
mov
mov
fs
mov
add
call
ds
outs
(bad)
mov
cdq
mov
(bad)
div
pop
jne
adc
mov
push
fistp
jle
push
or
out
mov
push
repnz
push
into
mov
push
pushf
out
xchg
outs
ja
xchg
push
adc
out
nop
cwde
cmp
fidivr
movs
jno
xor
mov
mov
aas
adc
out
adc
xchg
inc
xchg
aad
je
scas
dec
jmp
or
mov
adc
pop
push
test
mov
test
(bad)
rep
pushf
mov
add
push
inc
bound
sti
aas
push
in
pop
retf
mov
jge
mov
or
mov
cmp
push
mov
popf
jae
stc
lods
shr
aam
rcl
fmul
mov
inc
bts
pop
xor
pop
ret
mul
cmp
cmp
movs
dec
(bad)
jg
adc
mov
jb
into
mov
(bad)
dec
pop
and
sbb
(bad)
popa
cmp
cmp
xor
jge
imul
lds
or
sub
push
lar
mov
mov
(bad)
jns
mov
ds
inc
mov
pop
fwait
es
or
mov
xchg
xchg
push
or
push
pop
add
enter
scas
jae
sbb
in
xor
mov
ret
(bad)
popa
jo
scas
mov
push
enter
and
pushf
retf
cmp
js
add
fisttp
sub
and
aaa
ret
sub
arpl
out
aad
mov
push
push
cli
push
(bad)
cld
out
icebp
and
mov
rep
jmp
cld
into
cs
cmp
fdiv
gs
push
out
xor
jmp
sub
not
fisttp
pop
sub
pop
jnp
test
adc
or
adc
mov
sbb
repz
pmaxub
icebp
js
inc
es
xor
add
or
sub
dec
pop
test
(bad)
enter
loop
xlat
mov
mov
jne
sub
push
int
(bad)
ds
leave
imul
popf
sbb
pop
pop
scas
push
adc
shl
sti
in
jl
int3
bound
push
pop
cmp
sub
scas
les
cmp
mov
js
dec
jbe
mov
(bad)
mov
add
or
jp
push
push
add
sub
jmp
test
dec
dec
sti
xchg
dec
mov
cmps
aaa
push
adc
inc
or
push
(bad)
dec
test
push
ret
or
xor
jge
out
push
(bad)
fcomp
rcr
jmp
loop
xchg
mov
adc
jle
cmps
ins
jb
sbb
jne
das
loope
ds
data16
repnz
dec
lods
fs
enter
addr16
das
add
ror
and
daa
inc
xor
daa
cwde
fnstenv
dec
loop
xor
push
imul
push
xlat
mov
sar
add
pop
xor
pop
cld
in
out
int3
jecxz
ja
cmp
xchg
mov
cs
arpl
inc
xchg
mov
test
fiadd
adc
jle
shl
xor
test
dec
(bad)
div
sti
movs
mov
jnp
inc
ins
and
jnp
pop
push
pop
(bad)
jmp
ja
fidivr
outs
popf
enter
cmp
ret
loope
movs
xchg
mov
push
leave
(bad)
xchg
lahf
retf
jnp
cmp
adc
cdq
sbb
xchg
leave
dec
lock
or
xor
ror
cdq
add
hlt
inc
std
xchg
imul
neg
shr
sbb
mov
cmp
push
enter
dec
fisub
(bad)
push
ds
pop
jecxz
jno
call
or
push
mov
ror
hlt
fild
and
jo
xor
dec
call
pusha
add
nop
mov
jl
pushf
mov
xor
mov
cmc
je
pop
ret
jae
jmp
loope
nop
push
(bad)
mov
cmp
or
mov
jno
je
fsubrp
in
ret
out
outs
cmp
cmp
sbb
loop
mov
and
dec
xchg
(bad)
cmps
jmp
push
mov
in
sub
ret
add
sub
jge
std
mov
popf
lods
js
add
das
shl
mov
cmp
add
or
(bad)
push
pop
ret
cwde
cli
pushf
in
daa
mov
adc
jecxz
mov
and
push
fwait
mov
(bad)
ret
mov
imul
pop
jecxz
int
mov
cmp
sbb
adc
lock
test
leave
inc
and
stos
push
jp
cmps
faddp
add
jno
fdiv
jns
pop
nop
out
jmp
or
push
pop
xor
js
ss
xchg
pusha
xor
mov
outs
clc
mov
stos
out
sbb
push
cwde
cmps
pop
nop
pop
pusha
dec
fcomp
dec
pop
ror
push
test
push
stos
jne
mov
xchg
cld
enter
xlat
cmp
inc
cmp
nop
add
sahf
push
daa
push
push
adc
aad
ins
rol
cmp
loop
cmp
sbb
lds
outs
xor
jno
and
fnstenv
push
cli
test
mov
and
rcr
jne
mov
jge
mov
mov
mov
mov
sahf
jno
cmc
xchg
jp
xchg
out
(bad)
scas
cmc
repnz
std
push
push
cwde
loope
sar
xchg
cmc
jns
jmp
pop
inc
or
outs
bound
loopne
pusha
frstor
sti
sbb
(bad)
ror
fwait
cwde
stc
jp
cmp
shl
pop
adc
ja
in
cmp
mov
jmp
xor
xor
call
fldenv
stos
mov
ret
mov
call
push
mov
sbb
jmp
shl
shl
(bad)
pop
mov
mov
lods
(bad)
inc
ror
jecxz
jnp
call
lds
retf
pop
movs
pop
inc
cmps
adc
and
stos
out
cmp
out
out
mov
mov
inc
pop
fisubr
mov
js
xlat
rcl
test
popa
std
loope
push
fcom
dec
outs
and
lds
cmp
out
add
call
shr
or
xchg
jb
xor
pop
mov
js
cli
test
fs
mov
mov
in
mov
call
iret
test
cs
mov
cdq
push
xor
mov
movs
ret
cld
xchg
xor
pop
xchg
mov
jne
clc
ins
inc
imul
repnz
ins
or
jmp
mov
js
xchg
stos
ja
dec
sbb
sbb
test
pop
mov
adc
arpl
test
bound
jns
xlat
xchg
daa
pushf
xor
inc
(bad)
leave
test
jle
sbb
das
call
dec
dec
(bad)
cdq
xlat
adc
cdq
add
fwait
xor
xchg
dec
add
loop
push
mov
scas
push
cmp
sbb
dec
hlt
ret
add
or
xor
test
xbegin
and
xchg
loop
push
or
iret
and
cmp
jnp
ins
in
mov
xchg
arpl
ins
in
sub
and
fwait
jnp
js
mov
test
fsubr
xor
jecxz
mov
cdq
add
cmps
ins
enter
es
cwde
jp
inc
pop
daa
les
es
outs
inc
shr
push
movs
cmps
add
adc
(bad)
inc
aas
loop
mov
mov
das
shl
jmp
jg
xchg
je
sbb
gs
mov
fild
(bad)
mov
inc
in
rcl
(bad)
leave
lock
jae
test
repz
test
pusha
jecxz
push
icebp
adc
sub
cmp
pop
cdq
ror
jg
mov
sbb
push
jecxz
mov
cmps
fisubr
test
mov
jge
outs
jb
or
fidiv
mov
pushf
lods
sub
fcomp
lods
lds
ss
pop
shl
fsub
sahf
add
cmp
ins
sbb
cmp
mov
push
pop
(bad)
ja
js
popf
fadd
mov
adc
mov
lods
xor
and
mov
popf
and
call
mov
dec
cwde
or
int
sti
jnp
mov
mov
(bad)
loope
test
scas
mov
idiv
jp
sbb
inc
test
jmp
adc
ss
das
int
fstp
inc
(bad)
outs
jnp
add
pop
mov
jg
cmp
dec
(bad)
loopne
xor
xchg
fsincos
lods
sub
fwait
and
pop
cmp
pop
mov
imul
cmps
mov
cmp
sub
adc
adc
push
sbb
mov
(bad)
sti
pop
addr16
cmps
inc
pop
sub
jne
sbb
inc
cmp
out
jmp
fild
add
add
int
pusha
ror
cmps
mov
popa
add
je
mov
lods
cmp
mov
fst
icebp
push
cmps
push
xchg
inc
repz
push
imul
fwait
or
aam
sbb
mov
jmp
mov
cmp
add
out
push
cmp
ret
mov
mov
daa
pushf
test
addr16
call
or
out
adc
outs
mov
lea
cs
mov
jmp
sbb
push
mov
add
xchg
add
ret
mov
and
pop
dec
mov
outs
es
loope
int3
inc
cdq
test
call
outs
push
stos
jg
leave
mov
sbb
jecxz
div
push
push
das
xchg
or
fdiv
dec
jg
and
mov
xchg
shl
cmp
fimul
mov
jae
push
pushf
mov
adc
dec
mov
inc
dec
div
pop
(bad)
test
popf
shl
push
mov
jp
out
push
fnstsw
aas
addr16
lahf
inc
push
sub
add
xchg
sar
pop
(bad)
out
push
and
out
add
fcomip
fnstenv
imul
dec
lods
ja
cmp
(bad)
pop
test
xor
or
popa
sub
jbe
imul
and
rcl
dec
and
mov
mov
jmp
jb
test
xor
xor
add
aam
sbb
and
pushf
xor
cmp
ins
dec
cmp
dec
call
mov
test
lock
popa
(bad)
mov
ss
jne
and
out
or
and
cld
xor
out
or
fwait
ins
ja
dec
sub
inc
inc
push
loopne
xchg
jno
test
and
jne
fisubr
xor
outs
test
inc
sbb
pop
ficomp
loope
add
rcr
je
xor
enter
jg
mov
loope
jmp
push
push
add
imul
outs
sbb
mov
fwait
test
jo
cmps
jo
shl
dec
ss
into
outs
or
retf
cmp
in
and
push
cmc
push
xchg
add
and
scas
mov
lea
cmp
xor
push
(bad)
bnd
push
das
pop
inc
mov
outs
pop
dec
or
daa
sbb
shl
aam
jg
bound
jne
popa
stos
cmps
mov
pop
lock
xor
sbb
jb
ss
dec
cmp
mov
and
popf
out
fistp
push
imul
mov
xor
add
xchg
mov
push
scas
scas
leave
add
lds
dec
jne
jl
gs
adc
xchg
sti
xchg
dec
push
push
test
add
xchg
arpl
fmul
dec
pop
enter
test
xchg
aad
ffreep
retf
fdivr
cmp
xchg
jle
js
and
retf
call
dec
movs
fsubrp
adc
outs
lea
or
xchg
add
xchg
test
mov
xor
cmp
mov
cwde
mov
jmp
mov
dec
sbb
cwde
and
mov
xor
mov
cmc
cmp
cmp
mov
ins
call
rcr
adc
jmp
fnstcw
xchg
into
mov
loop
movs
call
xchg
movs
out
cmps
or
lds
aad
mov
(bad)
rcr
daa
xchg
sub
ss
aad
sbb
iret
repz
stos
(bad)
outs
adc
call
in
test
(bad)
repnz
hlt
pop
stos
mov
out
loopne
pop
div
movs
scas
pop
cmp
jo
cli
sbb
test
dec
aaa
dec
movs
stc
jno
in
add
and
(bad)
test
imul
nop
inc
sbb
std
test
mov
fisttp
out
addr16
sub
cmp
xchg
jp
out
rcl
or
jecxz
dec
cmp
adc
loopne
push
mov
fst
push
or
xor
jge
bnd
iret
dec
cmp
inc
sbb
sahf
mov
mov
inc
out
shl
cmc
in
sbb
fnclex
pop
cmc
les
jbe
and
pop
push
cmp
push
lods
and
aaa
ror
cmp
test
adc
cmc
cmp
pop
add
jecxz
bound
cli
fbld
pop
cmp
mov
cld
cmps
inc
fwait
sbb
fisubr
adc
dec
jmp
imul
sbb
cmps
dec
ins
push
jg
jb
dec
xchg
fistp
dec
mov
test
push
retf
ins
dec
dec
push
adc
into
data16
lods
jmp
and
test
out
cmp
cmp
add
xchg
cmp
inc
aad
inc
imul
or
push
(bad)
in
mov
adc
dec
frstor
dec
fsubr
es
loopne
mov
pushf
adc
mov
daa
cmps
cmp
out
fild
dec
jae
push
ss
jnp
out
ror
lods
pop
lahf
mov
fs
test
sbb
mov
push
cdq
je
mov
xor
test
leave
add
test
xchg
(bad)
jmp
mov
dec
out
shl
ffree
jecxz
sbb
and
icebp
shr
test
xchg
das
ins
or
inc
xchg
popf
jp
test
mov
fcomp
add
sar
ja
icebp
dec
call
inc
xchg
cmps
pop
xchg
and
mov
inc
inc
ins
inc
addr16
mov
pushf
cmp
(bad)
clc
push
scas
xor
or
xchg
inc
arpl
(bad)
cmp
mov
shl
aad
mov
test
popf
ins
adc
sbb
pop
sti
dec
mov
or
add
icebp
dec
jns
inc
sbb
xor
out
xor
add
rol
movs
in
popf
or
scas
mov
dec
xor
out
call
jmp
xor
push
pop
loop
int3
push
test
sub
inc
cmp
fcomp
and
inc
sub
pop
jmp
push
sbb
jo
cli
push
and
sub
jbe
loopne
jb
movs
outs
jle
xor
pop
std
imul
ret
shr
and
xor
clc
xchg
mov
call
jb
ins
pop
(bad)
daa
mov
cmps
sub
movs
or
lds
and
es
add
adc
pop
das
inc
dec
out
iret
dec
loopne
dec
and
aam
imul
sub
adc
stc
lds
pop
jp
out
xchg
sub
rcl
xor
pop
dec
sbb
mov
xor
aas
push
pushf
jl
xor
mov
cmp
xor
pop
adc
mov
lds
call
fmul
(bad)
mov
sbb
int
mov
xchg
sub
sbb
std
inc
ret
pop
sahf
adc
aaa
in
inc
shl
pop
mov
xchg
test
int3
scas
(bad)
sub
test
jmp
xchg
clc
(bad)
jl
rol
out
mov
stos
cmps
fwait
mov
(bad)
retf
mov
jne
or
dec
pop
mov
scas
pop
mov
xchg
aad
(bad)
jmp
and
pop
loopne
jno
arpl
nop
xor
mov
sub
dec
mul
jmp
dec
sub
push
sbb
cld
pop
xchg
cld
xor
js
mov
sub
adc
ret
and
inc
cmp
adc
out
addr16
stc
loope
cli
or
pop
push
pop
pop
pop
push
das
mov
push
inc
push
pop
inc
or
repnz
scas
pop
es
fs
and
mov
dec
push
add
inc
fistp
pop
pop
sub
xchg
dec
or
cmps
xchg
mov
aad
dec
das
pop
xor
cmps
sub
int3
sub
push
push
inc
imul
fs
dec
add
or
sub
mov
sti
clc
adc
xchg
out
and
ins
aam
rcr
cdq
push
out
inc
fs
aam
mov
jmp
add
cld
mov
imul
xor
adc
sbb
dec
repnz
jg
or
fadd
cmp
dec
add
inc
jne
dec
add
mov
js
enter
dec
mov
mov
sbb
cmp
mov
enter
dec
lahf
push
mov
add
mov
push
push
and
ret
in
push
add
ja
imul
dec
fldenv
das
sub
ret
es
lock
inc
call
in
add
test
add
inc
out
mov
ds
hlt
push
mov
sub
and
ret
add
stc
add
les
imul
fadd
and
mov
iret
es
jno
or
test
xchg
xchg
div
sbb
in
or
lea
aas
test
(bad)
mov
push
adc
xchg
mov
loop
push
test
inc
push
jo
xor
sub
shl
sbb
cmps
pop
ret
test
jbe
shl
xchg
outs
movd
or
adc
and
movs
xor
xchg
inc
jne
push
retf
push
mov
ret
xchg
test
or
fadd
fs
add
add
arpl
dec
test
and
sub
repnz
test
not
mov
(bad)
push
sbb
fwait
test
loop
mov
test
or
pop
jb
neg
add
push
das
dec
adc
mov
daa
jns
fs
mov
mov
and
dec
pop
adc
(bad)
add
inc
pop
sub
xchg
sub
int
test
stos
sbb
push
inc
lods
pause
sub
lea
daa
dec
loope
adc
popa
hlt
cmps
xchg
mov
mov
xlat
push
out
jbe
es
and
std
sti
pop
push
pop
pop
jge
das
retf
loope
out
xor
enter
(bad)
jae
je
sub
jb
adc
adc
xor
inc
scas
outs
and
jnp
repnz
push
(bad)
out
mov
test
mov
mov
and
cmp
dec
mov
aam
fbstp
loope
jge
daa
mov
mov
cmp
xchg
fidiv
cmp
adc
mov
pushf
or
pop
cli
and
and
sbb
mov
lahf
add
xchg
test
das
lods
sbb
cmps
sub
imul
and
pop
sub
xchg
call
ja
push
bound
mov
ja
jle
xchg
sub
push
in
xor
dec
inc
push
pop
dec
dec
popa
int3
jnp
addr16
push
and
cs
pushf
cwde
sub
and
test
push
(bad)
mov
out
add
test
fs
stc
pop
mov
iret
add
stos
fcom
daa
adc
hlt
out
imul
or
pop
popa
inc
aam
int
cmp
aam
repz
mov
add
jb
test
mov
xchg
enter
rcl
sbb
out
push
pushf
fiadd
jge
add
lsl
xchg
int3
push
mov
mov
stos
cmp
imul
daa
pop
nop
sub
push
adc
fdivrp
and
je
aam
cmp
movs
jbe
addr16
xchg
mov
in
push
mov
jb
(bad)
xor
xchg
(bad)
(bad)
and
xlat
add
jbe
leave
sete
loop
ss
mov
test
pop
sbb
test
out
stos
push
lahf
adc
mov
and
adc
shl
inc
pop
fdivr
adc
rcr
rcl
inc
scas
repnz
retf
dec
std
outs
inc
loope
jmp
hlt
mov
mov
xor
int
jno
fdiv
xor
xchg
mov
xor
aas
dec
(bad)
mov
(bad)
enter
lds
and
movs
outs
lods
mov
or
scas
jmp
mov
std
mov
mov
daa
pop
cld
cmp
jecxz
sub
cs
mov
mov
mov
mov
push
or
fistp
in
lds
pop
cmp
stos
add
inc
cmp
inc
push
xchg
add
ror
ins
ja
xor
sbb
mov
(bad)
in
xchg
daa
fld
xchg
sbb
dec
jnp
ret
xor
in
or
fcmovbe
jns
jp
xchg
enter
sub
popa
sub
shl
mov
xor
jmp
gs
out
xor
and
pop
xor
std
aas
cmp
jge
xchg
mov
int3
test
pop
dec
(bad)
cs
adc
cmp
sahf
adc
push
cmp
addr16
fldenv
or
jo
mov
push
inc
stc
jno
jmp
out
mov
ins
and
inc
mov
jns
dec
retf
push
sub
(bad)
idiv
dec
arpl
ret
mov
nop
mov
sar
pop
and
dec
mov
addr16
cmp
sbb
(bad)
mov
dec
cmp
cmp
jmp
jecxz
mov
or
leave
imul
mov
mov
pop
jb
pop
push
retf
gs
cmps
rcr
jg
loopne
push
mov
inc
or
(bad)
cmp
jl
mov
cmp
stos
xchg
ss
mov
adc
inc
mov
dec
ja
cmp
xchg
subps
pop
jge
and
call
jo
ffreep
and
and
mov
push
jmp
pop
push
loopne
add
inc
in
mov
or
sahf
cli
dec
sbb
sbb
xchg
(bad)
bound
or
adc
mov
lods
push
sahf
push
retf
pop
mov
test
into
xchg
int
push
mov
loopne
call
mov
sub
(bad)
dec
stos
inc
jp
fwait
pop
pop
leave
outs
es
mov
push
xor
mov
rol
mov
sbb
loop
fmul
mov
xchg
jnp
mov
cmp
movs
sub
cmp
popa
jb
out
adc
inc
fnstsw
adc
jbe
and
or
test
cmp
lods
jne
addr16
out
jbe
and
jbe
and
pop
fist
aas
push
sub
inc
pushf
jno
or
mov
out
push
popa
call
push
xlat
fcom
mov
add
cmp
mov
fst
adc
pushf
das
jl
mov
xor
mov
(bad)
mov
dec
popa
cdq
inc
std
fsubr
inc
cli
sbb
mov
icebp
inc
dec
inc
sahf
add
add
nop
push
xor
and
les
adc
retf
push
jo
mov
ss
cli
push
mov
mov
xchg
push
inc
push
dec
daa
dec
(bad)
mul
inc
stos
test
mov
mov
add
arpl
sub
push
int
ja
mov
xor
xor
ins
daa
rcl
mov
push
inc
add
pop
cmp
or
arpl
inc
pushf
sbb
test
fistp
ret
mov
popf
xchg
fistp
mov
or
pop
jmp
xchg
jge
add
or
jecxz
movs
stos
pop
push
mul
sbb
mov
les
outs
cmp
or
iret
ss
xchg
pop
int
push
push
jg
lea
aas
mov
mov
mov
dec
mov
dec
mulps
imul
mov
inc
sub
or
push
cli
and
cmps
xchg
bound
xchg
fmul
pop
mov
xchg
sbb
(bad)
jbe
lock
inc
or
cmp
push
fcom
cmps
enter
fbstp
dec
cmc
jp
fiadd
loopne
fwait
stos
cli
inc
ret
dec
adc
mov
out
and
lds
sub
mov
sbb
bound
push
xchg
xchg
xchg
mov
mov
mov
jo
(bad)
mov
enter
mov
sbb
or
cs
add
xchg
cmp
xchg
cmps
cmc
jecxz
cmp
xlat
inc
add
dec
cld
outs
xchg
rcl
sub
fs
hlt
mov
push
push
sar
or
pushw
dec
movs
and
scas
imul
jae
add
sti
retf
mov
inc
int3
les
or
push
pop
cli
sub
mov
ds
das
dec
enter
pop
push
mov
jl
pop
mov
aas
or
cmp
aas
iret
mov
fcmovnu
sbb
xchg
ret
dec
dec
movs
jne
or
jmp
(bad)
in
and
push
jno
cmp
adc
sti
add
pop
dec
es
cdq
cmps
popa
movs
push
in
aad
xlat
ficom
adc
lea
pop
addr16
xor
push
mov
sub
stos
and
movs
push
xor
mov
mov
push
sbb
ja
scas
push
cli
(bad)
hlt
xchg
sbb
xor
call
cmps
aad
enter
(bad)
add
rsm
sbb
or
ror
ins
sub
xchg
dec
scas
xchg
(bad)
hlt
sbb
fild
sub
ficomp
(bad)
test
xor
cmp
xor
scas
jge
adc
inc
pcmpgtw
mov
mov
xchg
sbb
add
into
mov
das
pop
cs
arpl
jecxz
(bad)
dec
fwait
mov
mov
imul
xor
mov
gs
and
outs
push
inc
jmp
dec
call
sub
xor
out
fcomp
enter
jae
or
out
mov
aam
(bad)
dec
imul
sbb
pop
add
lahf
push
idiv
and
xchg
lods
movs
js
mov
imul
movs
cmp
xor
cwde
cmp
pop
in
sub
mov
pop
out
daa
sbb
add
xor
arpl
xchg
fwait
mov
cli
aad
push
mov
ss
or
sti
dec
add
pop
inc
icebp
sbb
xchg
mov
pop
and
adc
int
cli
pop
inc
(bad)
xor
xor
movs
add
push
(bad)
pop
mov
cdq
scas
mov
jmp
jp
inc
je
pop
ss
cdq
inc
inc
(bad)
or
test
bound
adc
sete
inc
ds
leave
push
jns
sbb
inc
aad
fist
dec
aam
mov
js
push
jp
retf
jp
pushf
je
repz
ret
enter
scas
add
fwait
shr
enter
adc
out
dec
sbb
mov
adc
js
xchg
jmp
xor
ja
mov
pop
sar
xor
sub
mov
xor
fmul
outs
ret
mov
pop
and
jmp
xor
out
lods
pop
out
int
xchg
ret
pop
add
or
jge
je
ins
dec
bound
outs
xor
dec
jae
or
pop
std
jo
pop
xor
dec
in
jp
dec
adc
jl
cmp
repnz
shl
popf
nop
mov
icebp
xchg
mov
pop
fdivr
lods
nop
pop
add
fs
xchg
sub
cmps
jmp
test
popa
jb
adc
xchg
mov
push
and
bnd
loope
out
fwait
or
stos
xlat
or
xor
jo
jmp
fucom
(bad)
lahf
ja
fbld
stc
inc
pop
cs
rcl
shl
xor
retf
inc
xlat
jno
fiadd
sbb
xchg
bound
inc
push
enter
mov
jb
stc
fist
inc
shl
mov
inc
adc
sahf
push
adc
and
das
or
out
jae
jns
add
push
pop
jns
xor
mov
inc
std
xchg
das
retf
ror
aaa
ret
push
add
cli
mov
ja
das
jae
and
lahf
repnz
cmp
cmps
mov
xchg
in
(bad)
add
cmp
mov
pop
not
call
jns
repnz
add
mov
aam
daa
add
dec
clc
jge
test
sub
jl
add
(bad)
and
mov
fs
imul
lods
xchg
mov
fwait
xchg
mov
(bad)
cmps
adc
(bad)
dec
or
adc
inc
dec
les
sub
mov
cmp
loope
out
movs
dec
xchg
fnstenv
fdiv
je
cwde
mov
dec
xor
mov
dec
loop
jo
js
leave
dec
sti
aam
inc
ficom
(bad)
cmp
or
ds
jb
lock
mov
or
cli
aas
cmps
mov
push
pop
jb
dec
sub
fldcw
sub
clc
cmps
les
in
jp
in
in
cmp
retf
adc
adc
icebp
push
je
int3
imul
lea
cwde
cs
dec
out
mov
movs
ret
lea
dec
dec
mov
push
fld
mov
pop
fld
xchg
jns
int
add
(bad)
(bad)
push
jo
stos
pop
(bad)
jns
xchg
mov
push
xchg
push
cmovle
mov
xor
(bad)
mov
and
shl
cmp
enter
mov
and
mov
repnz
jmp
inc
push
sbb
mov
pop
pop
clc
lock
aas
leave
mov
sub
punpckldq
cmp
inc
es
dec
into
loop
ins
dec
adc
aas
and
xchg
and
pop
mov
adc
lock
push
jns
or
mov
mov
in
add
mov
jnp
jae
scas
out
int
call
mov
xchg
retf
in
cmps
mov
pop
sub
and
sbb
add
pop
call
sahf
into
pop
movs
xor
aas
ds
clc
adc
and
dec
and
lock
sti
shr
sbb
sub
enter
retf
dec
test
and
mov
ins
jnp
mov
and
lods
stc
out
and
shr
cmp
mov
pushf
mov
fisttp
cmp
mov
pop
mov
xchg
pop
aaa
or
xor
pop
scas
into
or
push
cmp
mov
fdiv
aam
or
stc
cld
rol
(bad)
mov
jle
jle
mov
sub
sbb
sub
xor
ds
adc
and
ficomp
push
jmp
or
sbb
xlat
add
jg
les
shl
or
std
add
fcomp
gs
call
jmp
imul
mov
(bad)
jecxz
loopne
retf
push
mov
adc
push
push
(bad)
fadd
jmp
ficomp
sbb
lock
sub
pusha
mov
fwait
mov
sub
jl
test
push
in
mov
int
xor
test
cld
or
shl
ja
mov
loopne
dec
stos
imul
inc
in
pop
cmp
int
jl
or
sub
lahf
sub
lock
pop
ss
jl
push
jbe
addr16
or
dec
inc
push
fdiv
das
les
shr
jno
push
jecxz
cmp
mov
cld
ret
sub
add
mov
out
sub
dec
pop
inc
xchg
sahf
xlat
and
sbb
out
call
fucomp
mov
nop
sbb
xchg
rcr
fcmovbe
xor
sbb
iret
add
jbe
pop
jg
scas
push
js
shl
pop
ja
pop
es
(bad)
push
mov
ja
jns
arpl
les
jmp
inc
pop
adc
cs
clc
scas
push
in
or
dec
cwde
adc
mov
pop
in
pop
sub
dec
push
fldcw
or
(bad)
pusha
jae
sbb
cwde
je
dec
xchg
call
xor
mov
pop
mov
dec
add
addr16
bound
add
mov
sar
fimul
ja
or
lods
mov
jne
repz
or
pop
xchg
mov
mov
xor
jnp
push
jo
jmp
mov
cmp
jns
cmps
cmps
cmp
jnp
mov
pop
nop
fiadd
(bad)
cmps
gs
movs
jl
out
stc
jnp
jno
cld
cs
pop
stos
dec
and
mov
ds
popa
push
stos
out
add
imul
push
mov
mov
imul
sub
and
xor
scas
add
xor
retf
adc
aad
and
dec
mul
jb
je
stos
lahf
sub
rcr
xor
in
je
pop
mov
pop
test
call
add
sub
pop
dec
aad
push
add
xor
push
or
and
(bad)
jnp
loope
xchg
or
ja
xchg
pushf
inc
neg
fbstp
dec
sbb
sbb
mov
fld
cmp
inc
(bad)
out
repz
mov
hlt
sub
inc
or
sub
stc
xor
xor
jno
jnp
in
xchg
and
push
mov
and
pop
dec
jg
fcomp
xor
xor
mov
sbb
sahf
inc
jae
sbb
and
pop
retf
adc
inc
daa
pop
cmp
repz
sub
fcmovnbe
sbb
aam
mov
stos
(bad)
(bad)
mov
push
mov
or
or
cmp
sub
cmp
lds
xchg
xor
and
aaa
adc
cdq
cmps
add
dec
jno
js
mov
inc
xchg
or
xchg
add
out
sbb
cmps
(bad)
ficom
xchg
cmp
xlat
div
xor
js
movs
lods
dec
packuswb
imul
add
in
xor
fs
retf
out
gs
test
xor
lahf
sbb
cmp
fnsave
inc
inc
mov
xchg
push
or
retf
mov
movs
addps
sub
call
dec
cdq
cmc
scas
mov
lds
sub
xchg
xchg
xor
and
ret
into
jae
mov
xor
loope
mov
pushaw
pop
cmp
and
mov
mov
fadd
unpcklps
repnz
nop
sub
or
shl
std
and
push
movs
jbe
popa
retf
ins
outs
xchg
sub
scas
or
adc
outs
or
aam
sbb
pusha
pop
sub
and
loopne
jae
repnz
jo
mov
loope
stos
into
lds
call
mov
hlt
or
out
jl
dec
push
add
aam
sbb
jl
aaa
add
loop
int3
stc
mov
sbb
test
jnp
dec
call
inc
or
in
out
hlt
dec
in
ss
and
(bad)
stc
int3
add
scas
mov
adc
sbb
add
jp
test
mov
emms
mul
punpckhdq
(bad)
popa
shr
pop
sbb
stc
xchg
hlt
(bad)
fldcw
data16
repz
inc
inc
sahf
out
xchg
das
mov
ficom
in
cmp
cmc
dec
cli
(bad)
push
outs
es
adc
jmp
aas
loop
clc
add
dec
loope
pop
loopne
push
jne
inc
int3
and
cmp
mov
ja
xlat
add
out
sahf
mov
sahf
mov
and
repz
and
ret
pop
cmp
dec
adc
fimul
data16
mov
repnz
adc
dec
xor
or
clc
inc
jmp
test
jp
push
loopne
mov
xchg
xchg
mov
pusha
add
bound
cdq
or
ds
dec
adc
stos
cmp
jae
add
int3
loopne
and
retf
faddp
xchg
push
stc
mov
jns
cmp
jo
inc
sub
dec
sar
pop
push
mov
(bad)
lea
mov
cmc
adc
adc
dec
xchg
adc
mov
or
test
push
jg
cmp
lods
jle
add
(bad)
in
push
(bad)
mov
sbb
xchg
pop
mov
sub
(bad)
adc
sbb
test
mov
mov
movs
adc
cmc
enter
adc
mov
add
shl
mov
sub
ins
pop
push
cli
xchg
pop
dec
(bad)
xor
or
ds
into
xchg
movs
sub
xlat
retf
sub
fcom
imul
scas
pop
(bad)
clc
aad
adc
sub
mov
dec
add
scas
pusha
nop
stc
fistp
sbb
and
jmp
rcl
fidivr
(bad)
push
sub
out
pop
rcl
mov
sti
mov
lds
cwde
stos
rcl
jmp
ret
(bad)
cmps
jg
xchg
shr
scas
pop
push
pop
fdiv
lahf
sub
pop
push
loope
ror
dec
cmp
inc
sub
add
jnp
inc
jle
das
in
mov
mov
mov
loope
mov
mov
inc
ror
adc
sub
inc
aad
(bad)
(bad)
mov
fstp
or
adc
ss
es
movs
aam
add
cmp
dec
(bad)
mov
sub
push
(bad)
sub
test
mov
cmc
not
ror
dec
std
fcom
inc
js
fst
add
leave
sub
arpl
in
push
jp
test
outs
je
out
xchg
pop
inc
xchg
sbb
rcr
pop
jmp
push
repz
icebp
inc
sub
cmp
fistp
or
outs
hlt
aad
mov
jmp
fs
add
sub
iret
shl
mov
call
jg
inc
mov
dec
cwde
ins
fdivp
sbb
pop
enter
push
add
pop
ror
cmc
cmps
ficomp
aad
ds
into
mov
dec
pop
sbb
in
gs
sbb
daa
xchg
mov
pop
movs
and
aad
push
test
not
jbe
cmc
adc
mov
lds
dec
sbb
in
or
imul
mov
jecxz
fidiv
push
loopne
cmp
dec
jl
in
sub
adc
cld
add
mov
adc
dec
shr
and
pop
adc
xchg
ror
mov
repz
dec
sbb
gs
jno
fs
or
je
jns
adc
or
das
push
pop
xor
stc
xchg
inc
cmp
lock
pop
jp
or
retf
bound
int3
xchg
test
es
xchg
cmp
push
adc
cmp
cmp
cmp
mov
mov
lock
pop
add
fwait
daa
jns
xor
les
daa
jnp
popf
dec
js
and
cld
mov
sti
push
jbe
jnp
lock
out
or
outs
mov
jnp
dec
sub
push
sub
repz
icebp
in
stos
leave
xchg
and
jbe
fld
mov
sub
ficomp
and
adc
xor
lock
pusha
ret
outs
mov
push
imul
cmps
stos
cmc
outs
retf
iret
pop
paddsb
shr
in
iret
les
and
jl
ret
loope
mov
sub
mov
jb
push
mov
sbb
adc
dec
ja
or
(bad)
retf
jne
push
mov
in
xchg
das
cmp
mov
mov
stos
dec
hlt
pop
out
pop
(bad)
ret
lods
stos
lahf
stos
mov
daa
pop
cmp
fstp
and
dec
pop
aam
stos
add
add
mov
scas
xor
fisttp
jmp
bound
mov
mov
sub
movs
inc
pop
out
out
in
cwde
mov
test
adc
dec
mov
rcr
xor
in
out
cmp
hlt
inc
repz
call
jb
sbb
outs
in
add
shl
inc
retf
pop
jnp
sub
mov
mov
jo
xchg
push
ins
pop
nop
in
push
xor
pop
inc
push
out
pushf
xchg
dec
loop
jg
xchg
pop
cmp
jp
cmp
cmp
(bad)
and
cmovno
jae
inc
or
or
or
dec
fstp
mov
xor
push
out
ds
or
(bad)
(bad)
pusha
loopne
sbb
xchg
sbb
retf
jle
pop
outs
es
sub
(bad)
jmp
inc
xchg
sbb
lahf
pop
jnp
jecxz
or
pop
in
lea
push
pop
jmp
adc
cmp
out
test
dec
ja
adc
cmps
or
sar
cmp
lea
loop
add
push
adc
xor
push
pop
fiadd
inc
pop
pop
pop
test
(bad)
cli
out
out
imul
dec
adc
jbe
sar
dec
ins
ss
outs
mov
push
or
cmps
bnd
sbb
xor
(bad)
repz
jo
div
sbb
dec
jg
gs
iret
(bad)
mov
call
inc
movs
sbb
jmp
sti
loope
or
push
ja
ret
fdivr
(bad)
call
retf
cdq
mov
mov
push
cmp
(bad)
and
cwde
repnz
dec
inc
cmp
leave
push
mov
push
int3
push
and
mov
mov
je
or
mov
mov
push
xor
xchg
outs
fdiv
add
outs
pop
dec
loopne
cli
and
shr
adc
adc
inc
xlat
(bad)
aam
nop
mov
cmp
mov
movs
cwde
dec
mov
(bad)
out
inc
dec
jbe
mov
pop
dec
lsl
xchg
inc
popf
and
pop
push
test
pop
pop
mov
sub
or
cmp
jmp
dec
fmul
dec
mov
pusha
and
popa
push
outs
xchg
adc
in
jo
and
test
enter
ret
mov
and
or
retf
sti
mov
mov
lock
test
out
inc
daa
inc
sub
scas
and
or
iret
mov
xchg
scas
xor
push
jge
ja
pop
xchg
and
sub
pop
pop
(bad)
mov
int
sub
and
dec
int
fbstp
push
test
mov
sbb
into
repz
mov
(bad)
jns
cmp
push
xor
dec
inc
and
push
mov
popa
test
push
es
or
inc
adc
fdiv
outs
inc
cdq
rcl
push
fimul
pop
(bad)
jmp
test
mov
cs
pop
mov
sbb
cli
pop
jp
dec
mov
mov
pusha
add
out
pop
ror
xchg
add
sbb
cmp
(bad)
aad
xchg
cmp
mov
inc
jl
lods
(bad)
out
(bad)
mov
push
(bad)
jnp
xor
xlat
dec
xchg
loop
push
jo
and
sbb
mov
push
adc
loop
sub
neg
sbb
idiv
in
stos
xor
js
jge
dec
retf
(bad)
or
call
scas
pop
dec
out
retf
test
adc
cmp
mov
push
js
inc
clc
fmul
or
pop
xor
jecxz
cmps
retf
in
outs
ret
aaa
into
icebp
sub
or
stos
movs
pop
mov
stc
pop
mov
hlt
push
jnp
repz
jecxz
mov
gs
mov
mov
dec
stos
daa
ror
jmp
xchg
out
adc
xor
lods
sub
sub
scas
(bad)
js
pop
rsqrtps
les
mov
popa
out
icebp
dec
mov
sbb
cmp
and
sar
das
into
pusha
rol
inc
sub
aam
xor
xchg
jmp
and
mov
dec
popf
rol
ror
pop
xchg
mov
dec
mov
sbb
das
fucom
sub
sahf
sub
ret
rcl
(bad)
out
test
inc
fdiv
sbb
adc
test
jns
inc
xchg
cmp
les
hlt
sar
clc
enter
xchg
dec
cld
jp
mov
sub
mov
mov
movs
xor
mov
fs
js
scas
push
mov
stc
dec
xor
les
adc
ret
addr16
push
outs
cwde
xor
scas
sti
ins
cld
jne
movs
adc
mov
enter
sbb
mov
adc
mov
xchg
mov
test
add
push
out
or
in
adc
out
push
test
fs
pop
(bad)
out
jp
dec
jl
bsr
push
repnz
push
mov
sub
pop
xchg
shl
and
jnp
add
jns
gs
(bad)
jp
jne
cld
scas
fwait
inc
or
push
jg
pop
and
push
sbb
into
int3
inc
dec
scas
sbb
out
(bad)
mov
dec
push
div
cmp
stos
sbb
mov
sbb
or
je
or
jge
dec
jle
out
mov
lahf
in
sbb
lods
mov
pop
add
mov
or
iret
shr
sbb
pop
data16
and
call
cli
mov
fdivp
rcr
cmps
push
adc
outs
pop
ds
cmp
cmp
lock
(bad)
data16
into
xchg
ins
scas
test
cmps
stos
sbb
push
inc
nop
pop
jae
xlat
adc
jmp
push
imul
or
or
cmp
es
inc
pop
mov
stos
cli
or
dec
sub
shr
mov
xchg
int
lods
fadd
imul
lahf
mov
jmp
mov
and
or
or
push
fiadd
adc
leave
cmp
(bad)
fucom
outs
and
pop
ret
mov
pop
mov
sahf
ss
cwde
(bad)
cmc
xlat
jnp
xchg
stc
xor
xchg
js
in
xor
(bad)
mov
cld
sbb
fldz
inc
mov
mov
cdq
pop
cmp
sbb
push
sbb
loope
cli
adc
in
adc
cmp
jl
sub
fs
popf
push
ret
sub
mov
movs
or
jg
rcl
ins
pusha
mov
or
mov
sub
pop
call
nop
mov
xchg
or
mov
cmc
adc
xor
pop
movs
loopne
sbb
push
sbb
mov
jns
mov
adc
aas
mov
mov
sub
and
out
lods
cmp
mov
cmp
(bad)
xor
push
ins
scas
xor
repz
test
push
jle
pop
sbb
add
movs
pop
test
push
xchg
mov
fld
leave
inc
mov
mov
loope
pop
pop
lods
push
jns
es
mul
scas
in
mov
in
cdq
cmp
cmp
and
enter
sub
ins
add
int3
mov
ret
inc
dec
push
push
push
repnz
ret
xchg
retf
xor
add
add
(bad)
(bad)
leave
icebp
stos
sbb
mov
repz
or
lea
hlt
mov
lods
jns
shl
adc
popf
sti
or
mov
mov
dec
mov
jo
cwde
mov
add
add
push
or
psrad
cmp
dec
addr16
shl
test
sbb
xchg
add
(bad)
adc
pop
int
idiv
into
and
xchg
nop
repz
and
pop
adc
mov
add
push
inc
bound
hlt
xlat
push
fstp
repz
shr
hlt
push
cs
psubd
lock
and
pop
pop
gs
adc
mul
pop
push
stos
dec
xor
cmp
hlt
mov
and
sahf
ss
jecxz
retf
lea
mov
mov
(bad)
bound
or
and
imul
cmps
pop
int
(bad)
ror
hlt
cmp
adc
mov
jmp
and
or
mov
loope
jae
retf
xor
popf
jns
sub
jp
push
dec
leave
or
ret
mov
js
mov
(bad)
movs
sub
add
pop
pop
dec
and
push
sub
mov
sub
cwde
lahf
aam
jmp
maxps
pop
mov
adc
bound
dec
mov
gs
mov
jp
(bad)
out
xchg
inc
sub
js
jecxz
call
cmps
ins
ins
addr16
adc
je
mov
cmp
xor
in
repnz
mov
xchg
jne
sbb
adc
jge
test
mov
fst
pop
enter
sbb
mov
les
ds
mov
mov
in
in
test
repnz
not
ret
lds
vmaxpd
lds
daa
push
jae
pop
rcr
popf
in
out
add
cmp
xchg
out
dec
push
test
mov
je
shr
xchg
dec
cs
or
imul
dec
pop
add
fld
(bad)
out
cmp
(bad)
pop
cwde
les
dec
test
cmp
movs
or
and
icebp
dec
add
popa
in
xlat
xlat
adc
sub
shl
aaa
mov
push
into
fidivr
sahf
test
cmp
sbb
imul
mov
cwde
cmp
sub
mov
mov
(bad)
icebp
cld
mov
pop
sbb
inc
push
or
daa
add
mov
fs
shl
repz
mov
cli
xchg
mov
movs
sti
jns
ds
sub
stos
test
mov
push
cmc
or
retf
mov
int
mov
rcl
fistp
cmp
test
arpl
fcomip
xchg
add
fstp
or
outs
arpl
(bad)
lock
jno
sub
int
jmp
jnp
mov
push
(bad)
mov
imul
xchg
cmp
clc
mov
and
ds
das
jge
sbb
aad
xchg
test
mov
mov
push
jecxz
sar
mov
inc
xor
fidivr
jbe
in
xor
pop
push
leave
jmp
xor
mov
jle
mov
and
mov
fimul
sbb
adc
push
sar
imul
repnz
or
or
cmp
repnz
xor
dec
xor
(bad)
jmp
adc
(bad)
out
mov
scas
repnz
popf
frstor
jns
xchg
retf
mov
push
jge
mov
stos
out
push
out
les
rep
call
shl
dec
je
dec
pusha
enter
mov
enter
(bad)
js
lea
lds
sub
jle
out
aaa
sbb
pop
mov
lock
sbb
sub
cld
xchg
in
fs
jbe
jmp
test
leave
loope
sub
sub
inc
leave
shl
dec
jmp
iret
outs
xchg
ja
pusha
add
popf
mov
jle
inc
lods
mov
(bad)
aas
add
lods
in
aad
movs
outs
xor
dec
fcomp
cmps
std
xchg
mov
or
shl
or
adc
rcl
leave
rcr
adc
push
inc
push
jg
outs
gs
sbb
mov
cwde
in
push
jl
pop
rcr
in
int3
push
jle
jmp
jb
xchg
ret
adc
cld
jb
repz
rol
dec
jb
cmc
jb
aam
mov
fwait
pop
push
popa
scas
and
pusha
xchg
test
movs
inc
mov
js
dec
hlt
fs
mov
xor
push
adc
or
jns
and
mov
xor
jp
retf
call
ffreep
mov
sbb
cli
pop
ss
inc
popf
jecxz
mov
mov
fiadd
inc
outs
dec
mov
pop
ret
jbe
rcr
sbb
push
in
dec
xchg
dec
jae
sub
push
and
mov
cmp
adc
cmp
xchg
push
lods
sub
sbb
push
out
sbb
pop
adc
inc
nop
jmp
or
sub
xor
fwait
push
cmp
sbb
sbb
jns
pop
dec
pop
push
xor
push
xchg
push
push
lahf
dec
gs
fidiv
(bad)
mov
ret
(bad)
mov
div
bound
mov
jne
sti
enter
(bad)
cwde
cmps
int
sbb
cmps
pminub
out
ret
cli
enter
aad
xchg
pop
and
jle
mov
rcr
shr
dec
sub
mov
mov
std
(bad)
mov
push
ss
push
jl
mov
fisttp
adc
int3
sbb
fcom
sbb
jge
imul
(bad)
frstor
sbb
mov
js
aaa
and
dec
mov
pop
lods
in
or
mov
pop
add
stos
inc
dec
jl
dec
inc
aas
ficom
and
mov
sub
xor
inc
stos
mov
xor
xchg
outs
or
retf
js
repz
xchg
xor
xchg
mov
mov
mov
jmp
push
fcom
arpl
enter
inc
sbb
bound
push
inc
fimul
push
push
int
push
sar
sub
outs
out
pop
push
lds
gs
test
sub
pop
adc
or
stc
arpl
mov
push
int
mov
jae
mov
mov
sbb
push
inc
call
out
stos
cmp
push
and
aam
mov
and
mov
rcl
mov
loop
inc
or
adc
popa
fwait
jecxz
sbb
jmp
sbb
and
inc
fnsave
and
int3
jp
jnp
popa
nop
jg
stos
aam
jo
inc
pushf
mov
adc
call
and
popf
mov
sbb
sbb
fs
xchg
xchg
out
sbb
nop
jb
hlt
jg
les
retf
cmp
pop
stc
jb
es
mov
les
mov
and
aam
scas
push
dec
xchg
dec
push
mov
cwde
mov
sbb
add
cwde
jge
ja
(bad)
jmp
mov
cmp
jmp
mov
mov
dec
shr
aaa
inc
icebp
mov
cmps
mov
fstp
frstor
jge
sub
imul
es
icebp
loop
cmp
stos
movs
fcom
or
inc
mov
jno
ror
mov
xchg
sbb
loope
jge
in
repz
xchg
pop
(bad)
dec
out
add
cmp
fwait
loope
shr
fist
lds
mov
jnp
rol
jo
push
outs
imul
repnz
gs
aaa
aaa
repz
cmp
mov
fidiv
xor
sub
imul
mov
xadd
jl
adc
hlt
mov
push
aas
mov
bound
and
cmps
inc
or
and
or
push
jns
fcmovnbe
or
and
retf
(bad)
push
cmp
adc
inc
movs
out
sbb
test
push
stos
out
jno
mov
jp
jno
(bad)
cmp
push
icebp
lods
popa
retf
fistp
scas
sub
pop
dec
xchg
sti
es
cwde
mov
(bad)
shr
mov
les
mov
mov
ins
out
and
inc
or
int
pusha
or
ins
rcl
inc
(bad)
imul
fstp
jae
sub
mov
sbb
cli
not
sbb
add
loopne
je
cmps
cwde
and
and
sbb
(bad)
sbb
adc
arpl
sbb
lods
popf
mov
movs
pop
and
sar
das
xor
sahf
shl
sahf
mov
or
shl
fxch
clc
mov
push
mov
adc
sbb
jmp
fdivr
lods
in
push
retf
jo
pop
or
jb
dec
fldenv
inc
aad
stos
sahf
push
scas
push
test
das
push
popf
adc
sub
and
or
imul
cmps
ror
ror
es
stos
loope
or
mov
jbe
xlat
jns
fisttp
(bad)
lea
call
loope
mov
aas
cmp
pop
pusha
jbe
xchg
scas
(bad)
hlt
(bad)
dec
outs
pushf
push
aaa
push
iret
popa
push
mul
jbe
inc
mov
push
repnz
sub
dec
popf
pop
imul
repnz
adc
stos
mov
inc
push
das
xchg
es
icebp
aad
xor
and
mov
xchg
sti
and
fs
aas
inc
pusha
movs
popf
mov
aad
inc
mov
push
jmp
pop
mov
and
adc
pop
inc
jmp
and
sbb
or
pop
xchg
mov
jg
and
pop
jg
ds
sbb
pop
xchg
mov
popf
movs
mov
or
pop
fwait
push
sahf
push
out
test
and
xor
cmp
and
pop
iret
jle
or
sbb
jp
retf
cmp
repnz
xor
sbb
jg
push
fbstp
pop
mov
sub
mov
sbb
clc
(bad)
xchg
inc
repz
cmp
arpl
fs
xlat
dec
fisub
out
cmp
sub
ret
mov
je
int3
sti
xor
repz
xchg
adc
ins
int3
pop
frndint
cmc
sub
cdq
sahf
shrd
or
mov
daa
lds
or
fs
pop
adc
mov
sbb
mov
pop
nop
ja
xchg
push
(bad)
ror
add
push
rcl
or
push
or
inc
push
lahf
movs
mov
sbb
in
or
repnz
shr
push
jge
retf
push
cmps
mov
jno
push
aad
(bad)
sar
pusha
jp
pop
rsm
cld
mov
mov
and
mov
push
out
and
mov
cmp
js
xchg
xchg
cmc
push
inc
lock
int
xchg
cmc
xchg
(bad)
sub
dec
mov
mov
sub
fwait
cmp
popf
ins
xchg
sbb
cs
jo
and
jo
sbb
or
sbb
mov
cwde
icebp
pop
xchg
or
add
cmp
xchg
sar
rcl
xchg
aas
fstp
add
ror
test
pop
aad
cmp
mov
jno
push
cmp
movs
xor
ds
out
push
test
test
out
enterw
mov
sub
popf
cmp
cmp
mov
mov
mov
outs
adc
lahf
pop
xor
rcr
cs
sub
inc
in
xor
jle
add
push
test
cmp
outs
(bad)
repz
fsub
push
sbb
xchg
stos
in
data16
or
test
rol
cmps
xor
cmp
enter
xor
lods
mov
push
jmp
pushf
pop
xor
dec
push
pop
stos
iret
jno
push
pop
fsub
popf
pop
fs
sub
stc
jp
push
cwde
xchg
pop
rcr
scas
adc
clc
jbe
mov
push
jae
cmp
cmp
inc
or
outs
std
stc
repnz
jno
imul
repnz
(bad)
and
pop
lds
push
test
push
clc
sar
or
cmp
aam
(bad)
dec
je
cld
(bad)
mov
mov
cs
idiv
mov
mov
cmp
or
push
jbe
xlat
aaa
pop
xchg
mov
leave
lds
jnp
cmp
push
lods
in
add
cdq
sbb
sub
xchg
xchg
cwde
pushf
clc
xchg
pop
rol
sub
push
xlat
enter
div
mov
in
ins
adc
sub
adc
xlat
jmp
push
imul
xchg
sbb
movups
mov
mov
xlat
pop
into
or
mov
(bad)
sub
push
loope
sbb
inc
mov
sub
sub
lods
or
imul
jae
push
or
test
mov
xor
inc
and
popa
and
push
(bad)
fsubr
dec
out
mov
push
xor
mov
ds
xor
imul
ds
je
ins
push
inc
repnz
mov
pop
xchg
mov
sbb
iret
int
xor
dec
pop
call
mov
push
mov
in
inc
xchg
or
inc
iret
or
add
push
adc
add
clc
enter
ja
rcr
add
cmc
es
mov
jecxz
jbe
pop
fsubr
jecxz
lahf
outs
mov
mov
icebp
mov
bound
xchg
xlat
cs
loop
sar
jmp
repz
or
and
push
xchg
fdiv
lahf
pop
jl
aaa
pop
inc
push
mov
push
imul
mov
sahf
out
pop
sub
mov
adc
iret
out
shl
cmp
(bad)
sub
scas
xchg
push
xor
inc
retf
aad
fsub
and
mov
ror
jnp
sub
cmp
(bad)
rcl
fstp
pop
push
cld
jbe
mov
icebp
iret
xor
adc
mov
pop
movs
fwait
dec
add
in
pop
add
push
pop
xor
lods
icebp
pop
rol
add
mov
(bad)
cmp
xor
sub
xor
jmp
sub
ja
adc
in
xor
scas
shl
lahf
inc
out
mov
(bad)
dec
inc
xchg
and
popa
adc
cli
(bad)
dec
rcr
stos
and
dec
jbe
push
int3
inc
mov
test
mov
adc
and
imul
dec
jp
jp
test
mov
stos
fcmovb
cdq
packssdw
je
hlt
inc
bound
loop
cmp
jns
stc
xchg
ins
xchg
jl
push
xchg
or
ins
inc
or
iret
adc
push
jmp
pusha
jle
imul
shl
addr16
or
mov
or
inc
push
pop
ficomp
pop
inc
stos
mov
imul
mov
xor
xor
nop
jo
in
mov
cmc
adc
rcr
aaa
push
adc
loopne
mov
jl
lock
lds
retf
ficom
aas
and
rcl
(bad)
test
jae
hlt
mov
mov
scas
js
jmp
cmp
aam
addr16
hlt
enter
test
cmp
push
fs
inc
rol
dec
mov
cli
ror
fild
add
fst
cmp
mov
inc
out
jmp
inc
call
mov
enter
mov
pop
(bad)
cld
mov
or
adc
cld
dec
cmps
mov
sub
jne
xchg
jb
xchg
mov
mov
sahf
jae
push
or
add
setle
daa
scas
add
jle
cli
jmp
adc
jle
mov
cmp
or
pop
mov
shl
mov
test
leave
ret
fwait
lods
push
ret
mov
sub
xchg
mov
xchg
test
mov
les
imul
push
mov
pop
mov
aam
aad
jge
test
pop
test
lock
out
push
pop
add
push
repnz
sti
adc
fst
add
mov
pop
pop
jno
jbe
mov
mov
pusha
adc
mov
loop
cmp
cmp
jmp
and
ins
dec
and
(bad)
stos
shl
daa
cmp
gs
popa
dec
dec
jg
sar
sbb
out
mov
xor
fstp
dec
js
in
adc
pusha
je
leave
xchg
aas
stc
mov
lock
gs
pop
mov
cmp
neg
cmp
xchg
inc
call
dec
test
ss
int3
cmp
cmp
mov
sti
adc
or
dec
into
popf
add
das
sub
stos
jmp
xlat
add
clc
ret
fild
xor
dec
xor
xchg
sub
sahf
push
retf
mov
ins
add
dec
jmp
dec
cmc
mov
add
sbb
daa
and
pop
ins
mov
push
inc
sbb
jno
fimul
mov
and
(bad)
int3
out
adc
adc
ins
mov
fcom
xchg
in
sbb
mov
leave
test
inc
push
stc
jecxz
(bad)
xor
(bad)
xchg
test
in
scas
test
push
lea
push
and
fistp
das
adc
sbb
add
dec
push
xchg
fild
dec
and
aad
scas
in
push
inc
in
or
dec
popa
or
das
cmp
loopne
or
das
jb
std
inc
mov
sbb
cs
sbb
or
inc
sub
add
cmp
add
adc
jnp
mov
push
xchg
add
or
shl
imul
jmp
mov
(bad)
mov
int
mov
fist
jae
jb
or
fadd
cmp
mov
add
mov
dec
stos
std
clc
leave
aaa
mul
cld
dec
jb
jae
les
jmp
cs
cmp
adc
fbld
ja
and
mov
sub
out
adc
cmp
fcmovnu
sub
retf
mov
fstp
and
fs
push
inc
push
rcl
ret
xchg
call
jb
das
loop
or
imul
pop
and
cmp
repz
push
sub
pop
repz
lahf
les
(bad)
cmp
(bad)
jp
fsub
cmp
xchg
mov
xlat
mov
movs
or
lods
xchg
call
xchg
jmp
mov
inc
cmp
or
(bad)
dec
ja
sub
push
enter
mov
inc
rol
pop
dec
cli
sbb
cli
xor
and
add
fisttp
dec
and
ret
jl
(bad)
daa
cdq
mov
test
mov
in
jge
push
mov
inc
shl
lods
add
jl
pop
adc
aas
xchg
ins
sbb
jae
cmps
pop
or
imul
ins
test
addr16
xchg
fbld
clc
xchg
in
fadd
call
scas
out
mov
inc
(bad)
daa
pop
arpl
inc
cwde
adc
(bad)
iret
fldcw
(bad)
imul
outs
punpckhdq
imul
sub
sub
mov
mov
movs
div
add
(bad)
cmp
push
les
add
adc
sub
sbb
mov
jae
fiadd
push
push
nop
inc
fnstcw
mov
in
in
into
sub
loopne
je
xchg
ins
jbe
scas
sub
mov
mov
inc
sub
dec
jb
pop
(bad)
ss
sub
push
xchg
jae
loopne
dec
call
push
movs
in
mov
fist
cmp
mov
and
ja
push
adc
movs
and
sub
test
cdq
fs
jae
cmp
pop
pop
cmp
add
aas
mov
xchg
push
nop
cmps
cmp
cli
scas
inc
div
(bad)
icebp
or
arpl
pusha
mov
mov
js
add
add
scas
jne
push
cli
retf
ret
and
push
inc
fdivr
xchg
dec
xor
xchg
mov
mov
out
xchg
sub
inc
jle
js
ds
shl
xstore-rng
cmps
lds
(bad)
jge
mov
xor
pop
jnp
and
mov
pop
adc
add
int3
(bad)
fisub
add
mov
and
cmp
cdq
out
xor
shl
repnz
mov
xchg
mov
fdiv
pop
lods
loopne
add
scas
pop
pushf
mov
mov
bnd
test
push
jle
sub
iret
mov
mov
or
inc
mov
shr
xchg
inc
ins
push
push
in
iret
jecxz
scas
or
(bad)
cwde
push
dec
arpl
jb
or
test
sar
movs
rcl
popf
fimul
push
aam
stc
dec
sbb
mov
(bad)
dec
pop
sub
adc
add
movs
sahf
iret
lds
repnz
outs
cmp
fidivr
popa
call
into
jle
dec
adc
inc
mov
mul
gs
call
ss
dec
ss
mov
jo
fs
xor
xchg
fistp
iret
iret
fisttp
(bad)
addr16
adc
cmp
sub
mov
xchg
enter
dec
xor
ins
sti
adc
shr
mov
das
mov
mov
nop
cdq
sub
jg
push
sahf
mov
dec
xlat
das
pop
jns
dec
movs
adc
cmp
jo
pop
iret
and
iret
mov
pop
std
jne
out
xchg
sahf
push
pop
stos
jb
out
xor
ds
push
out
cld
mov
gs
jo
mov
std
and
xor
cmp
test
in
loopne
mov
xor
xchg
inc
lahf
inc
leave
fimul
int
xchg
rcl
mov
xchg
fwait
mov
or
mov
icebp
jle
mov
test
inc
dec
push
shl
xchg
cmp
add
or
and
int
data16
mov
jmp
inc
dec
fmul
push
out
jmp
push
sti
inc
pushf
out
sub
aad
sbb
pusha
push
mov
or
inc
call
loopne
dec
in
enter
mov
push
test
inc
in
xor
(bad)
sbb
xchg
mov
test
retf
ficomp
mov
cmp
loope
std
add
and
mov
stos
cli
mov
aas
aaa
popa
fs
lods
jl
pop
inc
hlt
out
cmp
cdq
push
xor
and
pop
(bad)
push
adc
mov
jmp
scas
jnp
movs
loopne
jmp
mov
cmp
ficomp
test
test
ret
xchg
jno
out
fld
jle
push
xlat
es
xor
jb
shl
or
shr
pop
mov
mov
mov
pop
shl
test
repnz
test
call
sub
scas
add
inc
sub
maskmovq
test
mov
lock
adc
cmc
repz
xor
jg
push
pushf
fdivr
call
jp
pop
in
cmps
mov
xchg
xchg
xchg
inc
imul
mov
js
and
sub
ret
ins
mov
xchg
les
mov
(bad)
inc
dec
iret
mov
sub
push
inc
mov
or
mov
cdq
arpl
push
mov
push
inc
imul
mov
dec
pop
add
loop
pcmpeqd
arpl
jl
xchg
fadd
sbb
add
pop
pushf
mov
enter
(bad)
inc
(bad)
movs
rcl
nop
sub
in
xchg
iret
cmp
dec
(bad)
cdq
xor
jle
jb
dec
imul
je
mov
mov
scas
mov
ficom
ficom
in
xchg
les
outs
jge
add
fsubr
mov
fcom
xchg
or
clc
or
sub
imul
adc
mov
mov
loopne
push
push
lods
fistp
mov
loopne
aas
jne
mov
adc
mov
mov
ins
mov
movs
pop
push
and
and
or
aaa
dec
push
fisub
cdq
outs
out
pop
sub
movs
(bad)
adc
out
mov
stos
push
das
in
mov
sbb
jle
fidiv
xor
ror
popf
jne
mov
and
xchg
xchg
pop
mov
cmp
repz
ds
lock
and
jns
dec
popa
shl
fstp
cmp
ret
push
mov
lods
push
mov
jl
daa
push
movs
movs
pop
cmps
ret
pusha
sbb
sub
mov
mov
sbb
mov
jmp
jmp
(bad)
mov
inc
mov
stc
movs
retf
lods
push
rcl
loope
sbb
jnp
inc
push
pop
pusha
ret
test
cs
pop
fisubr
loopne
int
cmp
je
adc
enter
sub
pusha
pop
in
movs
aad
popf
xor
pop
or
cmp
popf
daa
enter
stc
mov
nop
push
add
aas
shl
aam
mov
pushf
xor
movs
lahf
outs
xchg
jge
cmp
out
sahf
jmp
pop
js
sbb
idiv
pop
add
fistp
neg
lahf
retf
repnz
lahf
jbe
mov
nop
xchg
jmp
dec
outs
pop
mov
xchg
cwde
mov
add
xor
leave
sub
add
push
sbb
mov
leave
addr16
ss
pop
push
jnp
mov
sub
adc
sub
pop
ret
test
mov
push
aam
adc
push
ins
sbb
test
adc
sbb
mov
push
enter
sbb
push
(bad)
sar
fwait
lods
add
xchg
imul
mov
xor
cmp
mov
push
push
sbb
pop
inc
xchg
and
jecxz
ds
mov
and
inc
or
rcr
push
cmps
xchg
mov
aaa
jnp
jl
mov
mov
pusha
dec
cmp
stos
adc
es
test
pop
cmp
in
jae
mov
(bad)
not
fmul
dec
xor
sbb
mov
pop
in
jbe
xor
and
into
xor
push
add
mov
mov
test
mov
outs
packsswb
and
test
shl
popa
movs
iret
test
pop
mov
and
or
call
std
lea
dec
int
fwait
in
add
mov
adc
push
out
int3
cmp
mov
into
mov
xchg
jo
in
aam
gs
jl
cli
repz
ja
jne
jle
dec
xchg
(bad)
pop
cld
stc
es
ins
jns
mov
imul
lea
xor
mov
dec
xadd
movaps
pop
stc
adc
(bad)
popa
dec
push
fnstsw
pop
icebp
or
imul
add
mov
xor
inc
aaa
xchg
xchg
repz
jmp
ja
cmc
xor
inc
push
popa
jp
sahf
sbb
jns
sub
and
(bad)
xchg
dec
pop
ins
or
les
add
jecxz
aaa
imul
out
mov
loopne
adc
and
sbb
mov
dec
call
sbb
jmp
xchg
movs
push
mov
push
into
adc
mov
movs
dec
mov
jmp
test
loopne
mov
imul
mov
repnz
(bad)
test
(bad)
adc
dec
inc
jmp
jbe
div
cmps
jb
in
pop
cmps
enter
jo
sub
cmp
cmp
push
sbb
sbb
data16
cmp
mov
jae
cwde
inc
add
fmul
mov
les
ror
jae
jge
sbb
and
jmp
mov
(bad)
sbb
in
ret
ficomp
jo
xchg
outs
cli
mov
scas
mov
xchg
pop
leave
xor
cmps
call
stc
mov
lods
sub
xchg
popf
mov
rcr
lock
in
std
cmp
jp
movs
cmp
loope
or
dec
shr
xor
mov
mov
lahf
mov
add
sub
rcr
fdivr
sar
xor
cmp
ja
pop
cmps
iret
ins
(bad)
mov
xchg
(bad)
cmc
or
icebp
xchg
inc
out
mov
or
adc
ja
adc
jge
ret
pop
or
push
ret
pushf
push
pop
shr
cmp
addr16
pop
xchg
into
inc
push
xchg
xlat
iret
dec
push
add
and
jmp
imul
xchg
push
mov
inc
or
or
push
fist
and
adc
gs
cmp
dec
cmp
sub
dec
sub
and
xchg
ss
das
xor
sbb
ins
jne
frstor
cmps
data16
hlt
inc
mov
loope
dec
push
in
mov
add
jmp
aas
xor
shr
std
movsx
ins
adc
out
scas
mov
adc
sahf
mov
inc
cmc
pop
pop
sti
jmp
mov
std
arpl
sahf
out
xor
push
cdq
inc
add
and
lods
add
xchg
dec
inc
mov
mov
iret
pop
push
sti
js
xchg
enter
push
jae
xchg
cmp
retf
mov
mov
mov
inc
pop
sub
inc
(bad)
ins
rol
mov
loope
(bad)
jmp
or
push
lea
dec
mov
enter
xchg
push
jns
stos
push
les
into
loop
daa
(bad)
push
repnz
mov
fs
lods
add
lahf
jns
cmp
push
data16
push
add
mov
adc
xor
inc
xlat
sub
pop
push
add
mov
sbb
pop
cmp
call
cmps
pop
mov
jmp
jb
rcr
rcl
fs
add
out
ins
push
cmp
add
push
gs
int
add
int
popa
gs
es
fldenv
jmp
push
sbb
adc
sahf
lods
jmp
xor
mov
fbld
pop
mov
fnstenv
xor
nop
loope
in
aas
and
and
popa
xlat
cwde
scas
or
pop
or
in
mov
data16
pop
hlt
fs
stc
cmp
xor
iret
pop
int3
jns
pop
test
jae
and
sbb
cld
cmc
outs
and
loopne
jmp
add
push
rcr
push
xor
mov
push
retf
stos
fwait
cli
ds
mov
add
push
(bad)
mov
and
pop
(bad)
rcl
or
bound
add
add
sbb
iret
sahf
pop
dec
pop
mov
sbb
mov
xlat
sub
rcl
jns
jo
or
inc
pop
call
and
xor
xor
cdq
jl
call
je
pop
xchg
ja
jmp
jl
cmps
mov
push
dec
adc
sahf
cmp
stos
pushf
adc
sbb
add
jae
mov
jp
or
pop
pop
mov
inc
neg
stc
repnz
cli
or
pop
sbb
outs
mov
cdq
(bad)
icebp
imul
in
retf
in
fwait
aas
test
push
inc
adc
pop
mov
pop
inc
mov
jmp
xor
lods
sbb
push
mov
popa
pop
jg
lods
popf
sbb
push
dec
add
mov
dec
out
inc
mov
aad
xor
jmp
outs
jge
rol
ins
pop
pushf
xchg
ror
and
sub
sbb
cmp
data16
aam
sub
mov
push
add
and
jl
mov
aas
mov
cmp
inc
adc
je
add
leave
and
sahf
inc
mov
mov
das
adc
sub
rep
jl
mov
(bad)
jb
call
repnz
jcxz
adc
lea
lds
fcmovnu
cmp
mov
shr
inc
(bad)
iret
(bad)
jl
mov
push
(bad)
jg
int3
inc
pop
aaa
fbld
fcomp
int
in
dec
leave
sbb
or
jnp
int
cmps
and
mov
xchg
fld
out
aam
mov
test
fisub
test
pop
mov
aam
sub
xchg
push
sub
push
aam
hlt
or
or
popf
and
dec
and
cli
pop
xchg
push
not
mov
call
mov
sbb
in
data16
jns
std
push
jl
sub
nop
jae
scas
mov
retf
jmp
aam
xchg
cs
add
adc
popf
push
cwde
andnps
inc
shr
mov
sbb
repz
sub
retf
pop
mov
fcomp
jae
cmp
arpl
ja
dec
mov
shr
push
pop
cmp
push
pusha
push
sbb
fs
cmp
xchg
jp
adc
shl
adc
lahf
xchg
fwait
loop
imul
xor
les
mov
or
jo
jbe
mov
je
pop
(bad)
mov
pop
cmp
sbb
fisubr
jg
and
add
fistp
xchg
cmp
adc
cs
cli
adc
inc
dec
xor
sbb
dec
sbb
ins
push
ror
test
push
cmp
adc
add
ror
inc
xchg
arpl
ss
and
cmp
cmc
loop
out
mov
push
repz
push
inc
cld
inc
jg
icebp
movsx
mov
movs
ret
xchg
sbb
ffree
add
fistp
stc
daa
and
fcomp
inc
and
dec
call
dec
jmp
cli
adc
xchg
xchg
add
repz
pop
dec
adc
js
dec
ret
pop
cmps
imul
jmp
daa
sbb
outs
xor
adc
mov
inc
test
pop
pop
repnz
sub
or
jmp
daa
xor
xor
cmp
mov
call
xchg
call
mov
xlat
gs
sub
cmp
cld
pushf
inc
gs
dec
addr16
sub
dec
adc
cdq
imul
jns
out
push
or
test
out
cmp
pop
in
mov
nop
mov
int
pop
imul
stc
inc
lods
retf
mov
inc
(bad)
xor
pop
retf
jns
jnp
bound
inc
clc
lock
mov
mov
jge
inc
sahf
ds
pop
cmp
push
push
sub
sbb
(bad)
cmp
or
lock
mov
leave
test
shl
add
inc
xchg
cmp
lds
push
inc
inc
lock
sub
sub
fstp
or
loop
std
fdiv
cmp
inc
ja
mov
hlt
in
sbb
into
mov
jno
movs
sbb
mov
enter
data16
lods
jmp
mov
sbb
mov
push
add
mov
je
mov
pop
sub
jp
aad
jnp
ret
and
adc
and
xchg
push
cs
push
and
pop
or
rol
push
out
inc
push
lds
mov
adc
mov
cmp
aas
inc
ficom
shl
fadd
cmp
pop
sbb
sbb
arpl
popf
movs
and
aas
pop
cmps
repnz
push
and
in
mov
add
dec
fistp
test
movs
xor
mov
lods
out
inc
mov
inc
jbe
inc
lahf
cld
cmp
mov
push
in
daa
mov
lea
in
jecxz
mov
xor
push
sbb
adc
test
adc
mov
aad
retf
mov
aad
in
xchg
arpl
jb
pop
sub
test
and
(bad)
and
sub
cld
iret
mov
adc
mov
fdivr
dec
ins
dec
cwde
lahf
jnp
imul
sbb
mov
push
push
loopne
or
add
(bad)
hlt
call
pop
lea
imul
fldenv
xchg
daa
mov
cmp
and
outs
jbe
cmps
stos
in
jne
(bad)
push
fs
push
jo
int
mov
adc
pop
cdq
call
nop
cs
sbb
mov
cdq
add
shr
mov
adc
jns
loope
js
aam
js
repz
jne
jmp
pusha
push
pushf
cwde
mov
loope
gs
and
lods
outs
(bad)
jecxz
nop
pop
xchg
and
mov
ret
mov
and
(bad)
xchg
dec
inc
mov
jle
add
xor
pusha
movs
dec
cmp
in
sub
mov
and
call
arpl
cwde
fucomi
dec
imul
fidivr
call
aaa
cmc
and
shl
cmc
cmp
les
push
pop
imul
and
js
dec
adc
dec
or
inc
dec
cwde
int3
enter
adc
mov
add
push
adc
test
into
mov
stc
sub
retf
int
out
pusha
lods
dec
adc
dec
xor
or
cmpxchg
scas
loope
cmp
cmp
xchg
popa
xchg
test
and
inc
dec
ret
xor
add
loop
fstp
clc
pop
push
imul
xlat
adc
loopne
sti
pushf
xchg
and
xor
movs
sub
icebp
sub
shl
movs
jb
outs
into
dec
imul
sbb
xor
xchg
dec
inc
mov
inc
aaa
or
inc
outs
cmp
sub
sbb
or
in
(bad)
dec
xor
popa
adc
inc
and
movs
(bad)
dec
jecxz
mov
mov
aaa
jmp
lods
sbb
dec
mov
shl
push
xchg
cmp
gs
shl
out
push
mov
cmp
sbb
dec
das
xor
rol
or
pop
push
add
lds
pop
sub
sbb
jle
pop
add
inc
ror
xor
ss
cmc
int
inc
aas
push
(bad)
cmc
mov
repnz
loope
mov
repnz
pop
sub
push
hlt
cmp
loope
loope
pop
es
aaa
or
es
xor
xor
add
adc
(bad)
rcl
mov
mov
and
jae
mov
clc
ss
sahf
sub
mov
push
fistp
das
cli
cmp
add
mov
ficom
in
cli
das
ret
sub
inc
pop
cmp
lahf
mov
out
or
gs
sbb
into
stos
fst
out
and
movs
cld
mov
fbld
fcmovu
adc
loopne
xchg
loop
ja
lea
cmp
jecxz
jmp
xchg
and
mov
jmp
and
ror
fiadd
leave
or
adc
repz
xchg
sub
ins
mov
add
mov
xchg
dec
cmp
push
adc
jp
cmp
and
cdq
fsubr
aas
(bad)
div
je
mov
and
je
xchg
addr16
shl
mov
adc
sub
cmp
lea
mov
(bad)
xor
sahf
loope
dec
pop
push
fcmovnb
push
lds
stos
pop
fsubr
jp
dec
outs
sub
adc
pop
imul
(bad)
aaa
push
ins
pusha
(bad)
in
cmps
xchg
iret
cmp
xchg
ins
stos
add
bound
cmp
mov
mov
cmp
stos
repz
cmp
push
adc
not
std
fsub
mov
mov
xor
or
xor
mov
adc
mov
(bad)
out
push
mov
daa
repnz
cmp
sbb
jbe
mov
and
sub
int3
xor
jg
jmp
or
dec
fidivr
mov
cmps
lds
cmovg
sub
jecxz
out
cmp
test
and
mov
pushf
repz
lea
int3
call
pop
xor
retf
pop
cmp
xchg
xchg
test
dec
xchg
mov
mov
in
xchg
arpl
bound
jmp
in
mov
xor
cmp
mov
loope
jnp
repz
add
loope
xor
inc
xor
call
cld
imul
inc
or
push
ins
pop
mov
add
or
lods
cld
sbb
inc
or
mov
ins
jo
lods
pusha
xchg
pop
and
inc
mov
jg
mov
jl
iret
mov
inc
in
sub
and
sub
test
cmc
fnstsw
jbe
xor
bound
pop
push
cmp
add
(bad)
push
mov
or
(bad)
mov
out
sar
inc
add
inc
jno
and
xchg
xchg
adc
mov
repz
push
cmp
lds
adc
xchg
push
inc
add
ins
outs
lods
push
lahf
push
fadd
(bad)
rcl
and
shr
(bad)
inc
inc
rol
mov
pop
retf
pop
cld
pop
mov
fld
sbb
push
cmc
rol
adc
test
test
mov
or
xor
inc
lods
aam
jp
dec
pop
stos
idiv
push
jb
jns
sub
push
jp
cmps
dec
inc
jmp
retf
vmread
rol
and
(bad)
cli
mov
in
jl
icebp
sbb
cmc
and
lods
xor
mov
mov
pop
jmp
jle
dec
aad
jno
retf
pop
mov
in
je
mov
movs
lahf
aas
mov
lock
fdiv
mov
clc
int
push
lahf
pop
in
inc
jns
rcl
or
xor
sub
xchg
punpckhbw
dec
leave
(bad)
push
jle
ror
popa
mov
(bad)
mov
sar
pusha
adc
mov
ins
mov
push
mov
mov
push
inc
push
inc
xor
arpl
les
clc
stos
jo
or
sub
fdivr
inc
sbb
mov
int
cmps
sbb
shl
jns
jnp
jecxz
and
cld
lds
pop
dec
mov
sbb
dec
jo
loop
cwde
xlat
aad
sahf
push
mov
inc
pop
shl
inc
or
pop
cmps
out
mov
stos
fs
jge
out
test
jb
inc
iret
fld
push
mov
je
xchg
mov
jp
outs
movs
xor
loope
test
outs
repnz
add
mov
js
xor
inc
mov
push
cmp
int3
pushf
shr
sbb
and
clc
jge
bound
pusha
push
xor
push
scas
imul
in
xchg
sub
xchg
dec
or
dec
pop
add
sub
sbb
lock
pop
dec
dec
es
ja
jmp
sbb
sbb
adc
data16
rcl
mov
jmp
repnz
fist
inc
aad
repnz
or
pop
sub
jmp
scas
cdq
pop
test
jg
inc
xor
push
inc
or
pop
pusha
popf
sub
ins
test
retf
cwde
mov
in
cmp
(bad)
ins
pop
loope
xchg
sub
mov
pop
sub
xchg
jecxz
mov
fiadd
adc
imul
xor
adc
shl
mov
and
test
xor
clc
adc
call
fdiv
mov
and
mov
stc
mov
sbb
inc
arpl
mov
js
sbb
fs
sub
mov
jg
xor
sub
out
js
out
push
xchg
add
jo
mov
fmul
cmp
and
xchg
das
dec
push
(bad)
mov
dec
sbb
gs
inc
gs
cmps
sahf
mov
mov
lds
jle
pop
loope
test
(bad)
cmps
fisttp
xchg
mov
cmps
mov
loopne
mov
stos
fdiv
std
and
push
rcl
or
dec
or
mov
lods
popf
leave
mov
(bad)
mov
sti
aam
jnp
sbb
imul
nop
cld
push
lock
pop
sbb
sub
sbb
repnz
lahf
pop
xchg
sahf
stos
(bad)
das
popa
mov
add
xchg
cmp
dec
test
outs
aam
mov
outs
mov
(bad)
pop
xor
sub
adc
daa
cdq
mov
mov
xchg
xchg
cmp
popf
mov
xchg
fdiv
sub
inc
inc
(bad)
mov
pop
jno
mov
mov
scas
dec
cmp
or
sub
adc
mov
loope
sbb
ss
and
pop
sub
adc
dec
jge
lds
cmps
scas
dec
sbb
mov
movs
mov
enter
pop
(bad)
push
jns
inc
push
ja
(bad)
arpl
adc
xchg
mov
cdq
ins
mov
add
add
enter
xchg
cs
sbb
int3
jns
xchg
loop
inc
ret
adc
std
xchg
dec
imul
dec
stos
or
jge
(bad)
adc
jp
popf
jo
xchg
test
lahf
out
mov
arpl
icebp
or
mov
aad
rcr
push
nop
dec
lea
cmps
shl
push
(bad)
out
into
add
mov
rcr
jnp
pop
or
stos
repz
or
enter
cmp
jnp
rcl
in
outs
rol
lock
dec
cs
xchg
lea
push
neg
cmps
ja
loop
xchg
test
jmp
pop
cmps
dec
xchg
imul
and
test
aas
mov
mov
dec
sti
push
lods
iret
jg
outs
rcl
jg
cmp
rol
xor
xor
cmp
or
mov
ds
xchg
xchg
addr16
sub
inc
jp
fnstcw
xor
lahf
cmp
pushf
sub
test
outs
mov
mov
sbb
(bad)
int3
mov
lock
dec
gs
mov
mov
imul
adc
dec
ins
out
fild
adc
arpl
dec
jnp
mov
mov
sub
mov
pop
jbe
or
sub
adc
movs
iret
in
xchg
mov
push
mov
or
xor
std
jno
xchg
test
sar
mov
pop
cmp
fdiv
jmp
cli
and
jmp
stos
jo
test
cld
inc
cmp
jne
repnz
test
pop
mov
jp
rdtsc
jle
adc
adc
out
jo
push
aaa
mov
cmp
jmp
push
nop
cmp
cmp
lods
(bad)
jecxz
push
mov
fst
ret
cmp
or
jo
dec
mov
push
aam
stos
je
xchg
sahf
mov
jns
sub
fimul
mov
ins
add
push
sbb
sub
or
dec
mov
xchg
retf
test
add
mov
sub
pop
test
fimul
dec
and
fucomi
sar
xor
out
adc
sbb
push
and
das
sub
sbb
xchg
test
cmp
dec
jns
push
call
sub
enter
mov
div
fisub
inc
pop
dec
loopne
inc
sbb
sbb
sti
(bad)
loope
xor
inc
lahf
mov
and
stos
in
iret
or
mov
popf
xor
mov
sbb
pop
xchg
test
test
xchg
xchg
add
pop
jae
jl
jnp
test
add
daa
pop
sbb
cmp
mov
mov
test
xchg
mov
add
adc
test
loope
arpl
xor
mov
push
(bad)
or
pushf
and
inc
int3
out
jbe
push
(bad)
push
hlt
repz
jne
mov
dec
lea
cmp
push
cs
pop
pop
xlat
cmp
cs
stos
test
test
xorps
pop
lock
out
scas
(bad)
and
(bad)
sbb
shl
popf
in
cmp
int3
scas
fisttp
mov
pop
jle
jb
dec
adc
popf
adc
bound
or
fidiv
in
cmp
mov
stc
outs
ror
jbe
mov
cmc
mov
mov
adc
mov
in
or
adc
pop
hlt
sub
xor
and
rcr
or
iret
mov
stos
jb
into
add
shl
sar
mov
mov
test
cmp
test
mov
xchg
dec
xlat
mov
jl
add
pushf
popf
pushf
and
mov
inc
push
xor
mov
gs
cmp
push
mov
int
dec
inc
bound
ret
inc
scas
mov
push
imul
mov
scas
aam
in
xor
pop
cmp
xor
jb
pusha
or
data16
xlat
jae
dec
add
add
pop
ds
cmp
mov
mov
add
cli
fs
jne
bound
push
pop
scas
into
or
push
pop
out
xor
pop
sbb
adc
jmp
pusha
push
in
push
loope
inc
into
test
out
mov
xchg
pushf
das
in
cmps
jmp
jo
or
(bad)
adc
push
jg
cli
or
mov
jns
test
pop
stos
cs
add
(bad)
pop
pop
repnz
pop
mov
xchg
inc
call
and
pop
pop
xchg
mov
jne
ret
sbb
xor
das
lods
cmp
loopne
pop
dec
jmp
enter
cmp
mov
xor
fisubr
shl
std
or
ss
test
jge
stc
sbb
dec
xor
cmp
cmp
retf
push
icebp
inc
lahf
jl
sub
cmp
popf
cli
sbb
iret
or
sbb
xchg
add
pop
mov
test
sub
mov
enter
jbe
push
scas
xchg
pop
iret
add
hlt
xor
mov
pop
rcr
je
fcmovnu
dec
add
inc
xchg
imul
cmp
repz
dec
and
adc
jmp
ret
(bad)
js
pop
cmps
bound
mov
mov
xor
mov
mov
and
xchg
push
mov
inc
mov
adc
xor
jp
sbb
fldlg2
lods
jmp
test
push
lods
add
and
div
mov
mov
add
ja
das
push
cdq
pop
popf
(bad)
mov
mov
push
shr
inc
mov
shr
sub
std
pop
xor
mov
stos
enter
xlat
mov
popf
repz
sub
add
ds
ret
sbb
test
popa
sbb
data16
(bad)
cmp
test
mov
mov
push
pop
pop
push
add
mov
adc
test
xchg
aam
push
mov
xchg
retf
mov
jmp
sub
cmp
popa
imul
cs
ret
jnp
int3
dec
iret
cmc
outs
shr
ret
jno
xchg
mov
and
inc
ret
adc
push
or
cdq
xor
gs
stc
mov
in
fild
and
mov
cmp
cdq
xor
das
stos
add
mov
mov
pop
xchg
pop
and
cmp
adc
cmps
ss
pop
and
rol
cmp
mov
xor
stc
pop
dec
jne
xchg
mov
jge
cmp
imul
ss
jecxz
aad
(bad)
icebp
shl
fs
sbb
out
data16
mov
das
clc
mov
cwde
or
retf
inc
daa
ds
cld
push
cmp
shl
jg
fs
cmps
pushf
pop
cmc
jmp
imul
push
mov
push
outs
std
ficomp
iret
lahf
dec
inc
test
push
loop
cli
and
dec
xlat
adc
pop
sar
jne
out
les
sar
das
lds
inc
jp
test
mov
xchg
or
repnz
dec
mov
aas
xor
and
into
adc
jb
hlt
imul
sub
pop
stc
es
sbb
pusha
fist
xchg
popa
adc
retf
push
pop
(bad)
jmp
mov
paddd
fs
sahf
enter
rol
push
push
repnz
push
mov
push
cmp
call
movs
xchg
adc
shl
in
add
jg
stos
sahf
jo
pushf
sub
popf
cwde
inc
and
(bad)
and
fst
push
push
test
xor
rcr
sbb
push
inc
aas
test
xchg
aam
add
aaa
add
les
xchg
lods
or
sbb
mov
std
aam
jg
cmp
xchg
xor
jae
xor
xchg
into
in
mov
mov
adc
inc
loope
pusha
or
or
add
adc
pop
sar
(bad)
into
mov
sbb
(bad)
fmul
pop
mov
push
fstp
add
jnp
cmp
jmp
or
shr
ror
xchg
sar
mov
mov
jb
retf
sub
movs
xor
mov
lods
fsub
pop
xchg
outs
fwait
sub
xor
mov
mov
pop
shl
(bad)
out
adc
add
sbb
sub
mov
bound
fcom
fadd
inc
mov
push
fsub
mov
adc
les
ins
jl
mov
xchg
mov
add
dec
repnz
aaa
je
mov
ja
ins
inc
test
sub
in
sub
leave
fnstenv
dec
inc
add
mov
je
pop
sar
cmp
inc
mov
or
add
loopne
popf
mov
movs
xor
ret
scas
xchg
add
jmp
test
pop
retf
in
out
sub
or
(bad)
mov
adc
dec
popa
and
mov
(bad)
int
data16
mov
inc
lahf
sbb
cmp
cmps
sar
das
add
and
push
jno
inc
pop
fnstenv
jp
mov
mov
pop
mov
fisub
cmp
mov
int
jge
lds
and
or
jbe
pop
out
push
adc
mov
sbb
call
mov
cwde
pop
pop
xor
push
xchg
xor
(bad)
rol
data16
(bad)
mov
dec
gs
fisub
xor
enter
popa
or
shl
cs
jns
rol
lods
mov
pop
and
repnz
mov
push
fmul
jb
adc
jp
and
pop
mov
cs
push
js
(bad)
clc
jns
jmp
loopne
push
push
mov
push
retf
sub
sbb
jecxz
sub
adc
icebp
or
mov
movs
and
push
cwde
mov
mov
not
jg
stc
push
push
stc
not
jns
(bad)
mov
daa
in
xchg
xchg
xor
arpl
xor
imul
fcom
les
mov
or
call
xor
and
cmps
adc
jo
sbb
rep
in
mov
push
ret
xor
or
mov
(bad)
ins
out
sbb
and
dec
push
xchg
daa
mov
inc
js
das
jg
add
stc
dec
sub
cmp
pop
pop
(bad)
movs
int
sbb
pop
xchg
sub
jp
pop
pop
add
cmc
rep
cmp
retf
and
rcr
and
adc
or
add
pop
bound
jp
cld
out
lock
lods
push
and
mov
pop
sbb
mov
lds
adc
xchg
hlt
pop
inc
cmp
inc
sbb
pop
jmp
dec
fld
jecxz
cld
call
or
dec
push
pop
and
inc
je
div
add
cmp
(bad)
xchg
sbb
add
pop
stc
loopne
push
inc
and
push
push
and
jmp
js
scas
jo
inc
cmp
xchg
adc
(bad)
push
(bad)
adc
hlt
pop
push
mov
daa
rol
loop
sahf
in
rol
repnz
fistp
shl
addr16
or
aam
inc
cmp
dec
leave
xchg
shl
pop
imul
inc
shl
jnp
jp
xor
add
inc
idiv
int
mov
rcl
mov
loop
shr
mov
mov
or
lock
leave
cmp
sti
(bad)
pop
mov
cmc
dec
lahf
js
xor
push
sub
movhlps
out
pop
cwde
sub
data16
inc
pmuludq
and
stos
jle
sar
pop
cmp
and
shl
sub
push
int
aam
dec
loop
push
int3
hlt
mov
xor
xchg
or
inc
add
mov
pop
mov
sar
leave
fwait
push
iret
retf
add
mov
mov
mov
loope
and
dec
fwait
pop
jnp
shr
dec
dec
jmp
cli
int
ret
(bad)
mov
push
data16
dec
dec
fdivp
or
int
push
and
adc
cmp
xor
xor
adc
imul
dec
aaa
cli
cs
dec
inc
sahf
retf
mov
cwde
in
mov
pop
fucomip
adc
std
(bad)
sub
daa
xor
clc
mov
xor
cmp
or
xlat
jge
pop
sub
in
aam
jo
lahf
pop
xor
ds
das
repnz
dec
or
ja
inc
or
jb
clc
fwait
add
xchg
xchg
imul
inc
jle
xchg
push
aas
push
not
sbb
mov
stc
sbb
movs
jmp
jl
loopne
mov
dec
pop
mov
out
loopne
das
adc
sub
pop
ror
and
push
or
xchg
(bad)
push
push
test
rcr
add
stc
pop
mov
into
mov
adc
mov
fisubr
fistp
jmp
inc
xor
jle
cmp
inc
and
(bad)
mov
cmp
retf
and
dec
pop
pop
xchg
dec
dec
icebp
and
shl
sbb
aaa
movs
xor
xchg
jp
push
data16
cmp
pop
and
mov
dec
pusha
fdivr
xchg
fdivr
cmps
shl
sub
adc
push
lock
ret
dec
movs
ret
jmp
push
cld
adc
aam
bound
mov
retf
mov
stc
cmp
jmp
lock
mov
mov
test
ret
push
loop
call
cmp
bound
sti
mov
loop
sub
dec
jne
dec
fwait
inc
dec
jecxz
outs
inc
and
call
mov
add
movs
xchg
mov
push
sbb
call
std
inc
sbb
sub
call
mov
jecxz
(bad)
test
cmp
ror
test
pusha
adc
lock
test
cmps
adc
jmp
pop
in
repnz
icebp
das
fwait
sbb
xchg
jecxz
in
inc
mov
mov
test
cmps
push
pop
mov
adc
jg
dec
fwait
imul
mov
inc
mov
fwait
pop
and
xchg
repnz
imul
clc
mov
xlat
push
mov
lds
popf
nop
in
fidivr
jns
shl
mov
fisttp
jmp
pushf
mov
sti
in
mov
jnp
and
in
dec
movs
movs
push
(bad)
outs
push
scas
test
dec
mov
xchg
mov
mov
jno
lods
mov
inc
add
fwait
std
pop
inc
mov
cmp
leave
cmp
adc
jp
add
sub
ret
or
clc
cmps
outs
(bad)
aas
fisub
leave
clc
mov
js
mov
fs
sbb
xor
fnstcw
add
xchg
lds
enter
mov
cmp
retf
push
jnp
stc
push
dec
call
dec
or
or
inc
aaa
cli
push
clc
xchg
ja
and
popf
test
(bad)
call
add
sub
cmp
cmp
icebp
jmp
xor
cmps
and
dec
enter
pusha
lds
not
sbb
loop
jmp
es
mov
daa
cmc
ror
pop
jnp
sti
jmp
and
into
jne
ja
xor
and
xor
cmps
pop
lods
add
xor
scas
mov
mov
push
loopne
dec
popf
mov
or
cmp
ret
stos
mov
push
jns
call
xchg
xchg
repnz
dec
shr
cmps
popa
xor
int3
in
lds
cmp
arpl
adc
imul
call
dec
std
fwait
add
int3
xchg
loopne
(bad)
fisttp
cli
das
or
leave
movs
xchg
arpl
leave
je
les
iret
cmps
repnz
(bad)
jns
jmp
xchg
or
call
pop
xor
xchg
cmp
test
mov
or
sub
fiadd
push
sbb
ror
mov
clc
lods
retf
cli
out
mov
push
adc
(bad)
sbb
in
(bad)
jmp
inc
int
dec
out
xchg
dec
bswap
out
inc
and
mov
test
mov
adc
dec
pop
xor
push
leave
add
mov
mov
add
ds
popf
retf
jl
cmc
sbb
inc
lods
or
or
movs
dec
fs
jg
js
pop
add
sti
test
arpl
mov
or
sub
js
aaa
ss
movs
jnp
ins
bound
sbb
shr
xchg
movs
xor
fisubr
aad
and
pop
loopne
or
jle
rol
dec
retf
clc
push
xchg
cli
jb
dec
dec
cmp
repnz
push
cmp
fs
(bad)
mov
outs
mov
into
xor
push
scas
add
(bad)
fidiv
jp
sar
mov
dec
mov
add
fist
dec
push
(bad)
(bad)
xor
dec
mov
stos
or
or
fist
mov
stc
mov
dec
ficom
xchg
lods
or
gs
in
mov
cmp
retf
(bad)
cli
add
mov
dec
rcl
adc
jecxz
push
out
jae
cdq
jae
push
lock
push
and
stc
cmps
xor
cmc
scas
dec
inc
imul
sbb
sbb
mov
in
sbb
xchg
arpl
sbb
shl
fist
xor
ficomp
pop
stc
stos
cmp
jbe
call
bound
aad
(bad)
jge
enter
ret
ins
and
xor
mov
sbb
sub
daa
out
les
shr
fisubr
test
shl
mov
repz
in
add
mov
push
movs
jp
out
mov
jmp
and
loope
test
sub
aad
push
mov
lahf
popf
arpl
adc
jo
outs
rcl
pop
lds
jno
inc
cs
fs
call
jno
(bad)
(bad)
shr
pop
fcom
sahf
mov
clc
mov
and
jg
xor
push
xor
rcr
xchg
stc
push
push
jge
pop
loop
inc
and
xchg
ret
movs
xchg
sub
mov
sar
aas
adc
push
icebp
in
test
cmp
push
adc
cmp
adc
leave
inc
mov
mov
lods
and
mov
test
scas
lods
cmp
xor
xchg
push
cli
out
add
inc
int
sbb
sbb
mov
rcl
hlt
cmps
dec
push
lahf
xchg
(bad)
and
mov
cmp
repz
fadd
jnp
sub
lods
movs
xchg
or
movs
jns
inc
scas
ficom
add
xchg
mov
xor
jns
mov
sub
cmp
or
push
repnz
xchg
lahf
mov
mov
jmp
jns
sub
out
icebp
mov
jmp
jne
add
repnz
mov
or
arpl
jmp
rcr
ja
shl
mov
pop
jnp
inc
add
inc
xchg
pop
sbb
(bad)
out
xchg
into
icebp
mov
imul
sar
sbb
pop
(bad)
or
xor
mov
(bad)
hlt
pushf
mov
push
sub
push
stos
dec
cdq
(bad)
call
repz
test
dec
jge
xchg
mov
jae
ja
cmc
pop
cmps
sbb
aad
std
popf
in
ret
into
mov
ins
imul
and
mov
cwde
gs
out
test
add
dec
ins
inc
cmp
dec
loope
leave
pop
or
shl
outs
cmp
add
ins
or
imul
ins
out
add
mov
pop
call
mov
pop
inc
pop
aas
fistp
rol
rcl
call
ins
cmp
xchg
dec
sub
lds
std
arpl
je
sbb
pop
out
jo
xor
mov
mov
jns
dec
adc
cmp
xchg
push
xor
hlt
mov
jmp
loop
mov
lahf
popf
dec
mov
push
rcr
gs
(bad)
xor
adc
jno
(bad)
pop
in
pop
adc
sub
idiv
test
mov
and
or
pop
xor
jno
xchg
or
ret
test
sbb
mov
jnp
mov
and
pushf
call
jne
movs
mov
mov
cmp
aam
mov
cmp
pop
jmp
repnz
adc
xor
lock
leave
bound
sub
mov
jb
mov
rcl
push
mov
mov
pop
xor
fistp
push
mov
mov
push
mov
clc
ja
dec
mov
mov
pop
not
and
push
mov
mov
xchg
sti
xchg
cmps
test
push
push
fwait
test
loop
out
pushf
adc
xlat
mov
add
dec
jle
lahf
hlt
add
pop
imul
xor
nop
int3
fiadd
inc
pop
adc
sub
call
cmc
stc
lds
push
mov
sbb
(bad)
cmp
inc
popf
loop
adc
xchg
sub
lock
adc
cli
shr
clc
xchg
mov
fsubp
cmp
rcl
cli
mov
in
xor
xlat
mov
cs
xor
scas
xor
out
aas
cmp
adc
lods
out
jp
xlat
sub
(bad)
xchg
push
mov
ret
push
cmps
or
adc
loop
push
dec
mov
(bad)
outs
arpl
pop
cli
cld
mov
and
bound
jae
rol
jge
jnp
out
xchg
cmp
mov
nop
sbb
ret
dec
popa
call
ss
div
(bad)
push
scas
int
inc
fcmovu
mov
dec
arpl
fild
retf
mov
stos
inc
mov
call
ror
in
or
cmps
popf
fistp
xor
and
fdivr
xchg
adc
xchg
or
or
push
aam
js
xchg
inc
ret
lods
out
adc
sub
jp
ins
dec
fwait
mov
push
icebp
sbb
inc
mov
fs
mov
pop
cs
outs
movs
std
xchg
test
std
in
mov
mov
jo
sub
push
out
jb
shl
sub
cmps
pop
retf
jae
mov
fist
pop
popa
lods
cmc
inc
cmp
sbb
leave
pop
aam
sbb
or
or
push
mov
stc
mov
aam
imul
xlat
cmp
out
xor
arpl
mov
sub
jmp
in
mov
je
and
repz
push
dec
popa
iret
retf
mov
nop
pusha
xor
push
xor
mov
shr
fsub
(bad)
add
test
ss
or
stc
or
or
jno
(bad)
jmp
jbe
iret
jmp
scas
push
je
mov
fldenv
pop
imul
in
mov
add
jmp
and
cmps
mov
lods
lock
cmps
std
dec
sbb
xor
arpl
cli
movs
push
sti
int
imul
jne
mov
and
cmc
xlat
cmp
aam
sub
call
inc
test
inc
enter
add
fwait
mov
push
sbb
ins
ds
xchg
dec
push
int
pushf
inc
inc
push
sub
(bad)
cmovo
xchg
jmp
js
cld
stos
ds
sub
sbb
shl
mov
jmp
lds
jns
pop
retf
(bad)
jo
loope
out
ja
aas
push
mov
and
push
in
mov
mov
loope
mov
inc
test
push
cdq
cmp
stc
xor
daa
icebp
adc
sahf
scas
in
inc
scas
loopne
daa
ret
cmps
add
pop
out
mov
xchg
les
call
jno
pop
call
add
cld
or
cdq
retf
jg
movs
mov
jl
leave
inc
gs
(bad)
push
data16
jl
jb
lods
les
inc
test
push
fidiv
jnp
adc
cmc
add
sbb
xor
or
sbb
jmp
and
jl
push
or
fcomp
push
jmp
dec
cmps
nop
and
mul
std
lods
not
xchg
dec
mov
adc
jns
adc
lods
dec
adc
or
mov
ss
xor
inc
pushf
or
or
mov
aad
xchg
sbb
test
fcmovnbe
push
out
push
retf
cwde
mov
in
adc
sub
ds
lods
enter
in
push
enter
(bad)
outs
div
push
imul
adc
sbb
cs
mov
addr16
xchg
cld
aam
sbb
inc
and
retf
or
sahf
call
mov
ins
enter
push
loop
fdivr
mov
loop
lea
outs
jo
mov
push
imul
hlt
fadd
cmp
inc
jns
jne
dec
cwde
aam
cmps
dec
adc
mov
(bad)
ja
scas
push
rcr
inc
jns
add
and
or
push
dec
sub
sbb
inc
lods
inc
pop
(bad)
ror
lea
pop
xor
jne
xchg
popf
rol
fidiv
retf
mov
inc
not
and
fcomp
dec
dec
xor
pop
push
or
jae
aaa
stc
mov
mov
seta
xchg
pop
mov
aad
dec
xchg
test
mov
(bad)
(bad)
mov
push
rol
or
adc
fisubr
popf
xchg
jg
mov
aaa
lahf
add
and
retf
sbb
(bad)
add
jbe
cvtps2pd
add
add
stos
test
and
jmp
je
inc
repnz
dec
xor
push
(bad)
lock
sbb
and
fs
pop
aaa
inc
sub
in
scas
data16
mov
loope
outs
add
cs
leave
xor
cli
mov
pop
adc
loop
xchg
push
aas
mov
out
call
addr16
test
in
sahf
shr
xchg
push
lds
jae
rcl
xchg
mov
js
test
in
and
or
xor
shl
add
and
add
loop
jg
arpl
push
leave
outs
les
xor
jp
jmp
cld
mov
lahf
loopne
or
push
sbb
scas
popa
jb
push
and
test
imul
mov
aad
sbb
push
cmps
je
popf
dec
ficom
jo
jnp
adc
mov
mov
and
in
cwde
popa
add
gs
mov
xchg
adc
mov
sub
mov
add
cmc
icebp
lock
push
shl
iret
xchg
mov
out
sahf
push
cmp
or
aam
fsubr
addr16
pushf
ins
rol
mov
fwait
add
test
pop
mov
fstp
xchg
call
je
sbb
(bad)
std
adc
in
or
cmp
jle
xor
jl
pop
sahf
xor
mov
test
mov
mov
mov
frstor
cwde
push
es
mov
outs
out
jge
dec
test
cmps
sbb
(bad)
movs
dec
lea
jae
push
je
cmp
rcr
add
sub
pop
jae
adc
cmp
lods
fstp
dec
dec
dec
mov
or
jo
test
imul
sahf
sub
or
sub
test
(bad)
das
sub
cmp
xchg
inc
adc
xchg
scas
or
(bad)
popa
cmp
jbe
push
lods
and
xor
retf
(bad)
push
inc
adc
sti
sbb
enter
sbb
adc
outs
mov
clc
shl
add
lahf
mov
cmp
lds
fwait
movs
add
dec
xchg
in
test
jns
mov
jb
jle
sti
mov
fisubr
or
(bad)
test
rol
push
retf
push
adc
ficomp
adc
cmp
dec
in
std
bnd
mov
inc
adc
mov
pop
push
inc
pop
mov
ins
les
popa
push
movs
push
push
add
pop
cli
out
mul
sub
retf
aam
fild
out
into
xor
adc
outs
cmps
call
cmps
adc
adc
fndisi(8087
and
mov
mov
sahf
or
mov
push
adc
jo
xchg
cmp
mov
mov
mov
shl
pop
out
sub
dec
adc
push
das
mov
scas
cmps
dec
pop
fld
ss
repnz
out
shr
push
mov
neg
stos
ja
xor
xchg
fistp
stos
or
(bad)
in
std
js
or
imul
mov
sbb
mov
data16
jo
dec
mov
inc
push
pushf
scas
pop
fdiv
popa
pop
sbb
(bad)
js
movs
push
dec
cmp
mov
pop
jmp
call
xor
repnz
cmp
(bad)
cmp
pop
cld
sbb
sbb
and
inc
shr
fisub
call
sub
and
inc
xchg
xchg
and
push
mov
sbb
pop
push
das
int3
je
push
jp
cdq
cdq
xor
fs
test
scas
aas
xchg
mov
int3
jmp
add
push
pop
mov
(bad)
jnp
ins
inc
and
movs
je
je
xchg
dec
pop
imul
and
jg
in
xor
cmp
adc
cmp
in
xor
sub
loope
push
cli
mov
pop
mov
mov
pop
xor
je
gs
rol
(bad)
daa
fidiv
popf
and
jne
aad
leave
sbb
imul
nop
pop
dec
sbb
fisttp
loop
int3
push
(bad)
sub
push
add
je
push
jns
sub
daa
lds
je
fidiv
sub
sub
mov
xlat
fistp
inc
movs
in
retf
les
xchg
push
pop
add
call
mov
push
fild
(bad)
and
ret
sub
cmp
jne
inc
test
xor
pop
and
xlat
pop
push
adc
xor
fsubr
pusha
jg
and
cli
repz
mov
mov
inc
inc
addr16
jmp
pop
jp
or
xchg
mov
stc
outs
mov
data16
ud2
popa
cld
mov
jl
clc
or
out
sar
fbld
lods
and
mov
add
add
mov
adc
hlt
inc
call
add
or
dec
inc
jo
js
hlt
add
xchg
push
enter
jmp
add
sti
std
lea
jmp
jmp
mov
and
les
in
ficom
dec
pop
mov
popf
repz
into
and
lods
mov
add
aad
mov
lahf
and
dec
and
pop
pop
jnp
cmps
loop
and
ret
hlt
cmp
pop
xchg
ss
icebp
out
arpl
xor
inc
lods
add
dec
cmp
cmps
mov
lahf
mov
fs
fidiv
ret
mov
les
enter
lods
jno
cmc
add
scas
sub
pop
dec
scas
int
in
push
adc
sub
in
rol
mov
inc
movs
rcr
int3
test
push
add
retf
adc
mov
fild
imul
inc
(bad)
test
jne
loop
push
and
push
das
pop
sti
mov
out
jmp
je
jnp
sar
pop
popf
popf
jg
xchg
push
lods
fcmove
inc
iret
and
cmp
clc
test
sahf
repz
xlat
mov
xchg
jne
lds
cmp
int3
std
mov
jecxz
xchg
add
sub
ja
retf
ss
ds
sub
std
mov
push
xor
cmp
mov
pop
mul
cwde
adc
into
in
sbb
inc
and
or
cmp
lahf
sbb
sub
enter
stos
jb
lock
xchg
xor
inc
add
sub
and
lods
(bad)
mov
mov
scas
dec
pop
mov
fcmovnb
outs
jp
jle
or
aad
pop
ffree
cmc
push
call
jl
out
mov
je
gs
call
fstp
repz
hlt
add
cli
jae
xchg
fdivr
lds
cmps
xor
sbb
fcomi
in
repz
fsub
pushf
pushf
les
adc
clc
cmc
sbb
add
imul
inc
cmp
(bad)
mov
dec
jl
jmp
jle
sar
in
(bad)
pushf
lds
fisubr
sub
jge
push
enter
sub
inc
or
push
pushf
addr16
rcl
imul
sbb
or
and
mov
push
xor
cmc
mov
xor
gs
aas
and
bnd
(bad)
in
out
cld
loope
ins
pop
jo
and
jmp
mov
les
pop
xchg
mov
mov
ss
and
cmps
pop
retf
cli
iret
xchg
inc
loope
addr16
pusha
jne
sar
sbb
int
scas
adc
mov
mov
xchg
in
dec
xlat
clc
ret
inc
imul
popf
pop
sbb
cmp
rcl
in
add
jecxz
cld
gs
adc
mov
imul
ins
pushf
iret
shl
fadd
adc
cmps
cdq
cld
mov
jecxz
in
adc
fnsave
sub
into
jae
push
inc
das
pop
rcr
mov
int
outs
(bad)
and
ss
fisub
sti
adc
jb
cmp
cmps
pop
push
inc
mov
dec
jl
inc
or
sbb
rol
popa
aaa
mov
inc
scas
push
push
mov
cs
movs
adc
mov
xor
inc
or
adc
stos
retf
or
sub
adc
loop
fiadd
cmp
sbb
into
inc
push
clc
ret
or
pop
inc
inc
cmps
xor
fisub
arpl
pop
test
rcr
int
mov
addr16
clc
gs
addr16
cmp
xor
repnz
cmps
mov
pop
cmps
jmp
inc
in
cmp
xchg
xchg
call
xor
and
or
sub
cmp
test
imul
mov
cmp
test
push
aas
sub
xchg
xor
mov
dec
sahf
xchg
in
jmp
push
pop
xchg
sbb
jns
xchg
push
fcom
ficomp
aaa
cwde
push
sub
mov
pop
aad
inc
rol
in
mov
les
push
fwait
and
sbb
adc
rcl
into
les
sbb
int
fstp
fstp
sbb
shr
dec
jne
lods
mov
int
jno
cs
bound
xchg
mov
add
in
inc
aam
adc
xchg
in
mov
loopne
fsub
sar
je
inc
int3
mov
xchg
jbe
cmp
in
jg
pop
ja
and
sbb
adc
jno
sbb
fidiv
push
jb
(bad)
jg
(bad)
jl
bound
loop
fcomp
sub
mov
xor
inc
fmul
xlat
jmp
aam
add
mov
dec
test
movs
leave
call
and
dec
sbb
xor
mov
xchg
iret
mov
push
(bad)
repz
mov
lahf
loope
lods
(bad)
push
test
pusha
inc
sub
imul
cwde
stc
enter
mov
imul
fstp
mov
push
fsub
ret
daa
clc
mov
cs
dec
sbb
hlt
sub
sbb
and
cmp
xchg
mov
or
xchg
xor
ins
sbb
outs
xlat
int
outs
mov
push
out
push
stc
push
outs
and
hlt
test
push
inc
pop
daa
mov
jg
ja
fcomp
pop
fadd
and
or
mov
pop
gs
jecxz
movs
pop
ror
aad
inc
xchg
das
in
cmp
icebp
in
js
jmp
and
mov
xor
pop
shl
test
retf
mov
mov
xchg
mov
xor
jl
ret
lahf
int
repz
ror
mov
add
mov
idiv
das
ret
stos
inc
mov
pop
rol
or
(bad)
fistp
iret
repz
ins
addr16
sub
mov
sbb
cld
push
jno
dec
ins
std
je
mov
inc
int
mov
sar
xchg
aam
cwde
jp
rol
movs
jae
mov
pushf
addr16
push
ss
lds
push
inc
pop
sbb
mov
cmp
mov
(bad)
sub
out
(bad)
movs
ror
popf
shr
pusha
add
jnp
sti
inc
sbb
push
leave
sbb
je
adc
repnz
cdq
cs
fisub
xchg
add
or
dec
sub
test
cmp
into
sbb
repz
pop
cmp
cmp
jae
inc
pop
out
push
adc
ins
add
inc
jg
test
inc
push
cmc
inc
loope
aaa
int3
out
mov
sbb
(bad)
ds
mov
loopne
idiv
icebp
cmp
dec
mov
imul
sbb
into
ins
inc
and
mov
in
dec
inc
test
(bad)
arpl
fdiv
sub
pop
test
test
rol
sbb
adc
mov
push
sub
movs
sbb
in
cmp
gs
cmps
(bad)
fst
inc
nop
jo
bound
outs
out
imul
scas
lods
dec
push
idiv
cwde
mov
rol
cwde
fidiv
xor
ret
in
lahf
or
pushf
dec
cwde
mov
into
mov
jno
cdq
mov
jp
inc
push
fsubr
mov
push
rol
stc
and
mul
lods
retf
mov
add
jg
cmps
rol
mov
mov
adc
xchg
xchg
jmp
mov
mov
popa
repnz
scas
ss
clc
add
hlt
fdivr
inc
fdiv
popf
push
pop
sub
cmp
mov
pop
or
sti
pop
je
mov
sub
pop
jnp
dec
popa
enter
test
xchg
dec
add
adc
sub
sub
aad
loopne
movs
ins
stos
pop
xlat
sub
mov
aaa
je
and
mov
cmps
mov
push
push
out
lock
clc
jge
adc
je
ins
push
adc
fdivr
out
stos
push
scas
jnp
shl
mov
inc
xlat
xchg
push
aam
dec
lahf
sub
dec
out
xor
cdq
loop
shl
pop
xchg
sub
das
push
xchg
mov
mov
out
int3
out
mov
mov
fnstsw
ja
mov
sbb
rcl
ror
jo
pop
add
and
jbe
fldcw
sub
fidivr
test
jns
mov
or
lods
mov
mov
test
retf
pop
pop
ret
inc
pop
data16
inc
jmp
aam
(bad)
(bad)
js
add
cmc
dec
aaa
adc
and
shl
jae
ins
mov
rol
mov
fmulp
lahf
mov
div
xor
push
ins
test
push
aas
adc
arpl
jns
out
movs
out
je
(bad)
jle
fdiv
sbb
mov
push
data16
and
mov
cmps
ror
mov
daa
jns
mov
leave
sbb
in
(bad)
and
xor
push
sub
hlt
mov
stos
out
inc
in
movs
adc
xchg
push
mov
mov
cli
jae
pop
fist
idiv
scas
jmp
mov
loopne
mov
xor
adc
or
fldenv
mov
stos
sbb
pop
jbe
test
cmps
ins
push
call
xlat
push
adc
adc
iret
call
push
(bad)
push
cmps
cmp
or
jl
bound
dec
icebp
push
sub
mov
aas
fisubr
int3
push
adc
mov
stos
jl
add
push
adc
rcl
cmc
xchg
jne
push
mov
into
and
xor
xor
fs
pop
cmp
cmps
mov
push
(bad)
pusha
sahf
(bad)
push
(bad)
loopne
adc
mov
sbb
(bad)
mov
clc
add
sbb
xchg
test
push
inc
inc
jbe
cmp
es
pop
mov
fld
out
sub
pop
jno
mov
test
or
jns
ret
push
jge
stos
(bad)
cmp
dec
push
aad
adc
jo
je
pop
std
mov
arpl
cmps
xor
fcmovnu
adc
les
mov
inc
fld
cs
xor
into
adc
sub
jns
(bad)
sar
leave
(bad)
cmc
sub
pop
mov
clc
dec
add
leave
js
jae
add
push
xchg
cmps
repz
mov
sahf
push
sub
sti
out
jne
(bad)
push
jne
jl
adc
sti
add
fadd
sub
sbb
xchg
pop
pop
pop
fild
out
ror
push
cs
sub
jae
pop
pop
popf
xchg
mov
out
sbb
or
in
add
sahf
jmp
rcr
(bad)
sbb
(bad)
mov
lods
mov
es
adc
xchg
lds
fcomp
push
sti
mov
popa
stc
jnp
push
xchg
xor
ins
(bad)
sbb
fdiv
(bad)
enter
arpl
xchg
and
stc
xchg
adc
call
xor
mov
sub
dec
xor
inc
lds
(bad)
mov
sub
mov
push
cs
pushf
stos
and
xlat
pop
sub
mov
jno
push
cmps
fcomp
xor
(bad)
cmp
mov
or
push
retf
into
adc
into
sar
out
jmp
xchg
adc
push
inc
dec
mov
and
push
mov
inc
mov
fbld
lds
jbe
inc
inc
shl
or
cwde
je
repnz
popf
and
push
push
stos
out
push
mov
cmp
int3
fisttp
movs
push
pop
xor
jg
das
and
mov
push
(bad)
jnp
fidiv
xlat
(bad)
mov
mov
int
inc
es
mov
clc
sbb
aad
in
sub
faddp
inc
sbb
jae
loope
push
sti
aad
sub
shl
xor
add
mov
push
rsqrtps
inc
outs
sbb
pusha
mov
adc
sub
mov
ret
sbb
push
adc
sti
leave
std
ins
cmps
ds
ret
ja
jp
test
jae
les
pop
dec
in
xor
inc
dec
mov
mov
push
add
jp
pusha
shl
ret
cmc
js
xchg
in
neg
push
dec
jmp
call
cmovne
and
mov
aaa
xchg
push
sub
xor
call
fld
setns
neg
div
and
idiv
sbb
movs
inc
sbb
repz
add
cmp
xor
mov
inc
clc
jp
loope
jmp
(bad)
mul
fsub
je
pop
rcl
push
call
in
int
ret
jae
shl
(bad)
sub
inc
push
jl
xchg
push
jb
ja
jecxz
das
js
call
mov
repz
call
div
outs
adc
jmp
xchg
mov
dec
xlat
ja
and
es
add
repnz
jge
mov
xchg
sbb
xlat
sbb
mov
mov
add
lock
and
xor
add
test
jge
ja
mov
mov
pop
in
leave
or
ins
arpl
ss
sti
and
inc
xchg
sahf
arpl
push
cmps
cmp
push
adc
lods
aad
stos
movs
or
das
lock
lods
and
mov
or
out
cwde
inc
add
ror
imul
daa
sub
out
fldenv
test
outs
adc
jbe
mov
(bad)
or
sti
jne
scas
mov
leave
push
pop
mov
lds
jne
sub
inc
stc
mov
shl
stos
xchg
or
sbb
ins
fidiv
data16
mov
dec
dec
or
pop
lds
add
xlat
dec
or
push
ja
mov
push
cmp
mov
mov
out
neg
in
mov
popa
mov
mov
jecxz
call
sahf
add
ret
push
mov
ret
aad
push
push
mov
in
ja
or
addr16
cmp
(bad)
jmp
dec
pop
mov
adc
hlt
jnp
cmp
cli
std
mov
and
adc
jle
push
fiadd
jo
inc
or
jne
into
dec
pop
out
retf
mov
sub
cmc
add
xchg
push
mov
lods
arpl
(bad)
mov
in
xor
xor
xchg
cmp
cld
jge
mov
mov
mov
es
sbb
js
pop
push
jne
fwait
imul
jae
cmp
(bad)
pop
int
stc
out
mov
pop
and
pop
pop
pop
jmp
fstp
fidiv
pop
loopne
mov
leave
mov
xor
sub
push
aaa
mov
int3
daa
jnp
cs
or
imul
outs
lods
jge
fiadd
popf
sbb
repnz
test
(bad)
jecxz
xor
mov
loopne
jge
xor
mov
popf
call
sub
rol
mov
sbb
dec
adc
test
in
xchg
sar
ins
pusha
sub
(bad)
jne
out
mov
sahf
or
push
mov
mov
xchg
jbe
scas
ret
sub
inc
adc
sbb
pop
or
push
fild
push
stc
add
pop
aad
xchg
sub
clc
jmp
enter
rcl
cmp
retf
pop
mov
pushf
mov
in
mov
call
data16
mov
mov
ror
dec
lods
add
jmp
mov
mov
loopne
cmp
pop
aaa
lds
pop
add
or
int
outs
push
je
jno
es
(bad)
or
div
cld
mov
xor
mov
mov
mov
popa
out
repnz
adc
cli
fnsave
pop
mov
out
int3
repnz
dec
cmp
(bad)
jmp
mov
aas
adc
scas
jp
cmp
sub
ror
pusha
test
jnp
jle
cmp
xchg
ds
xor
shr
xor
cmp
ja
loope
mov
mov
frstor
cmps
pushf
arpl
pop
jno
cmp
cmp
xor
sub
push
pop
jbe
imul
adc
mov
outs
gs
fist
fisubr
cmp
jnp
data16
stos
in
sbb
outs
jae
push
jl
js
push
fst
xor
push
call
iret
outs
cmp
add
stc
cli
arpl
idiv
add
or
dec
in
mov
data16
cdq
iret
mov
data16
inc
arpl
repnz
cmp
das
add
test
jmp
shr
scas
in
inc
cmp
cmp
sub
dec
mov
adc
jge
outs
inc
ins
fdivr
jg
popf
fnstsw
loop
les
sub
minps
pop
mov
fwait
cmps
out
xchg
repz
mov
inc
addr16
and
jge
jg
push
aas
test
imul
sbb
aas
jp
(bad)
mov
inc
xlat
fsubrp
mov
ins
scas
mov
pop
inc
gs
mov
pop
aad
mov
cmp
mov
jg
je
inc
popa
sub
hlt
inc
push
dec
mov
cmp
aaa
jg
add
dec
test
sbb
xor
sub
xchg
nop
imul
mov
jae
mov
lock
cmp
nop
cmp
les
(bad)
inc
sbb
xor
and
push
and
pop
mov
lods
dec
sbb
adc
push
pop
call
push
das
mov
cdq
push
push
adc
stos
sub
mov
(bad)
sbb
out
or
or
dec
call
les
mov
sub
sub
popf
mov
pop
imul
cmc
sub
adc
movs
or
mov
dec
jmp
sbb
sahf
cmp
mov
adc
sub
adc
sub
xchg
push
push
(bad)
out
fs
fsubr
sub
ror
lock
sub
stos
lods
add
jge
mov
mov
push
(bad)
repz
cwde
call
add
add
shl
inc
aad
arpl
adc
in
retf
push
test
push
fbld
xor
mov
scas
data16
loop
test
outs
push
pushf
inc
nop
xchg
mov
loop
adc
aad
push
add
mov
cwde
mov
dec
mov
test
(bad)
cdq
or
sbb
pop
cwde
addr16
retf
cmps
scas
cmc
inc
lahf
enter
test
pop
xchg
xor
outs
shl
mov
rcl
jne
jmp
call
mov
add
mov
in
fs
mov
mov
push
out
arpl
inc
mov
popf
loop
in
mov
mov
jp
lods
(bad)
mov
das
sub
cmp
(bad)
int
stos
adc
mov
add
sub
mov
cli
fdiv
xor
and
xchg
sub
push
jno
rcr
call
inc
jge
mov
fisttp
or
in
cs
cmp
jmp
(bad)
jb
xchg
(bad)
xor
inc
add
inc
sub
jnp
cmp
mov
enter
int3
hlt
inc
xchg
mov
dec
push
xor
mov
(bad)
mov
ret
loopne
jp
jmp
call
fcomp
scas
adc
imul
adc
jno
inc
not
mov
fld
out
and
jno
inc
mov
imul
inc
pop
leave
pop
pop
retf
std
push
mov
cmc
stc
bound
xchg
mov
or
iret
inc
enter
cld
out
das
movs
pop
or
dec
pop
and
and
lods
(bad)
mov
and
xor
lds
push
jne
sahf
mov
movs
je
jg
shr
ds
(bad)
mov
loop
sub
scas
std
pop
pop
jmp
gs
lea
inc
pop
add
div
cmp
icebp
sub
rol
stos
out
xchg
cmp
mov
or
mov
add
push
inc
xor
jo
test
sbb
mov
or
ins
and
sub
sti
dec
add
das
bound
lods
ins
jno
xchg
pop
pop
mov
jge
arpl
jge
(bad)
fiadd
adc
popf
mov
retf
loope
adc
(bad)
sub
loopne
push
stos
xchg
jbe
xor
jmp
in
fdivr
cmp
mov
mov
push
pop
pop
das
jns
pop
pop
or
pop
dec
jnp
cmp
arpl
fs
jo
sub
xor
pop
and
movs
jnp
xchg
jp
jb
std
fs
adc
shr
fadd
jp
pusha
mov
xor
pop
repnz
cmp
lods
adc
pop
std
clc
iret
pop
jmp
enter
pop
jne
fcom
mov
xchg
(bad)
pop
mov
test
and
pop
xor
xchg
lahf
jp
aam
repz
cwde
ror
xchg
push
mov
sbb
ds
nop
push
div
test
imul
in
cmp
inc
mov
sub
xor
jecxz
test
stos
mov
scas
ficom
jle
movhps
jae
les
xchg
in
xchg
and
fisub
fadd
out
mov
xor
pop
cwde
mov
fdiv
push
xor
jecxz
(bad)
out
test
pop
pop
imul
xchg
lock
ficomp
lods
and
scas
xchg
sub
mov
sub
pop
sub
jl
sbb
in
lds
into
retf
cmp
push
imul
outs
inc
aas
test
xchg
daa
data16
lods
loop
or
mov
xchg
fidiv
and
adc
int3
aam
in
pop
imul
sub
enter
aad
test
das
gs
popf
es
sub
fst
dec
pop
repnz
jmp
stos
xchg
imul
jmp
mov
xchg
mov
sub
fld
push
into
nop
shl
cmp
fnstcw
jne
mov
inc
lahf
enter
aas
daa
mov
push
je
jns
aaa
dec
sbb
or
mov
xchg
xor
lds
push
cmp
mov
sub
mov
cwde
mov
cmp
scas
mov
and
stos
push
mov
jmp
stos
dec
sub
adc
mov
leave
push
and
mov
mov
lods
fs
fidiv
sub
and
in
mov
add
ins
and
xor
mov
enter
gs
cmps
(bad)
sbb
mov
ror
adc
xor
push
cmp
stos
mov
jno
icebp
push
add
or
jae
jmp
jno
std
xchg
mov
push
push
popf
add
or
mov
test
outs
enter
sti
(bad)
fs
add
or
pop
mov
in
in
push
pop
xor
(bad)
dec
std
fiadd
leave
arpl
cmp
scas
xchg
or
adc
inc
mov
ds
icebp
test
fnstsw
aas
lahf
or
sbb
and
stc
xchg
popf
xlat
cdq
xor
daa
sbb
repz
mov
push
pop
jmp
push
daa
xchg
mov
xor
xor
mov
dec
dec
mov
mov
pop
lods
dec
fist
pop
and
or
lahf
mov
shr
push
sbb
jmp
xchg
imul
jo
adc
xor
mov
leave
sar
nop
xchg
and
test
(bad)
jns
jmp
gs
mov
push
mov
inc
or
sbb
jg
scas
fs
and
test
add
adc
fisttp
cmp
pop
adc
stc
rol
mov
mov
dec
dec
sbb
lahf
jb
retf
(bad)
aad
retf
mov
and
xlat
mov
ficom
add
mov
cmp
sbb
push
jmp
and
sub
movs
ds
mov
mov
jmp
mov
ror
(bad)
xlat
popa
push
mov
rol
out
jno
imul
stc
in
xchg
fisub
push
lods
ja
mov
ucomiss
shr
mov
sub
mov
fwait
in
jl
cmps
add
scas
fwait
pop
imul
loopne
xor
pop
or
jg
pop
stos
pop
push
js
xor
inc
push
sar
sub
mov
xlat
and
mov
les
into
push
int3
cmp
mov
aaa
xchg
outs
mov
jns
xchg
mov
js
jmp
sahf
lahf
push
test
sbb
adc
movs
outs
stos
int3
cmc
push
adc
fadd
fcomp
xchg
add
or
arpl
pop
icebp
add
xchg
std
mov
mov
test
ins
lds
jmp
(bad)
int
jecxz
mov
adc
and
pop
cld
pushf
daa
div
aaa
or
cmp
sub
in
mov
pop
mov
cmps
inc
sub
lea
or
ret
push
daa
xchg
cmp
aaa
test
out
inc
cmps
jle
jmp
out
xor
xchg
retf
pop
sub
frstor
ins
push
mov
push
push
movs
sub
pop
mov
xor
sbb
ret
xchg
mov
in
cdq
test
push
add
retf
jmp
push
(bad)
imul
ins
imul
pop
das
sahf
mov
fwait
pavgw
(bad)
inc
push
test
sbb
fsub
add
out
daa
pop
cmps
jnp
pop
les
add
dec
push
jns
cdq
imul
jecxz
loop
dec
add
xor
mov
lods
scas
xor
scas
(bad)
enter
or
out
imul
scas
cmps
jne
neg
jmp
bound
cmp
or
loopne
xor
cmc
push
sbb
ja
inc
or
int
sbb
test
imul
or
(bad)
loopne
(bad)
sbb
push
js
loopne
push
pusha
test
mov
jecxz
(bad)
cmp
push
pop
push
sbb
xor
sbb
sbb
sbb
shrd
imul
daa
out
ret
xor
cmp
push
cmp
arpl
inc
mov
mov
xor
xor
and
push
mov
pop
cmp
cmps
jecxz
mov
shl
retf
and
xor
or
pusha
sti
add
mov
nop
mov
test
and
add
adc
mov
adc
or
mov
fs
stc
mov
xlat
cmps
out
inc
jge
xchg
cmp
enter
jne
scas
adc
retf
je
loop
fsub
in
popf
jno
xchg
out
cdq
inc
jo
cdq
dec
fstp
dec
shl
pop
dec
cld
sbb
inc
xchg
rcr
iret
inc
adc
jmp
fidivr
cmp
cmp
pop
clc
cmp
jae
js
xor
sub
push
adc
jmp
aad
std
cmp
jns
push
pop
add
nop
cmp
test
int
push
add
bound
loopne
lea
out
(bad)
sahf
and
mov
push
mov
push
xlat
sub
jno
push
mov
(bad)
into
ds
jmp
ret
cmp
out
loopne
and
mov
xor
ss
fst
aad
test
jmp
popa
inc
or
cwde
sbb
iret
inc
xchg
mov
sub
xchg
sbb
xlat
loope
scas
cmp
(bad)
jo
fnsave
iret
int
call
push
test
pop
push
or
loopne
inc
icebp
retf
xchg
iret
mov
dec
jnp
popaw
ret
lock
enter
jbe
ret
sahf
retf
fadd
mov
push
popf
leave
cmp
fsub
es
icebp
sub
nop
jb
sub
mov
jmp
cs
xchg
adc
mov
sub
mov
jae
push
add
adc
jp
sub
jl
mov
leave
sti
xor
mov
lock
frstor
outs
sub
cmp
sar
(bad)
imul
push
pop
adc
aad
das
fidiv
pop
cmp
pop
pop
or
call
cmovp
ja
mov
mov
pop
and
lds
loop
(bad)
push
jg
mov
(bad)
cmp
inc
lock
fist
stos
rcr
jg
sbb
fild
jle
inc
test
mov
gs
scas
jge
outs
add
(bad)
jo
xor
sbb
sub
fst
je
jmp
inc
mov
js
fimul
push
inc
push
pop
xchg
loope
jno
inc
mov
gs
jp
xchg
jmp
sub
scas
fistp
mov
jge
or
int
retf
adc
fstp
(bad)
add
mov
enter
add
pop
retf
mov
or
jecxz
add
and
pop
not
in
icebp
pop
fwait
pop
lds
pop
xchg
ret
ret
idiv
xchg
neg
push
pop
pop
scas
push
(bad)
pop
pop
test
cmp
push
jne
jl
fwait
call
movs
dec
push
int
mov
inc
mov
ds
lahf
sbb
cmc
dec
mov
jp
sti
dec
inc
sbb
sub
int
cmp
pop
mov
jbe
(bad)
inc
in
xor
pop
sbb
sahf
(bad)
cwde
pop
fisub
in
adc
sub
(bad)
hlt
ret
shl
mov
aas
fiadd
xchg
call
push
arpl
dec
fsubr
mov
std
cmp
jle
sub
in
lea
and
jle
inc
dec
shl
mov
lea
push
mov
fisubr
lock
retf
imul
call
push
ds
jle
mov
adc
icebp
pop
fsub
loopne
xchg
js
add
or
inc
jb
adc
fisttp
repz
mov
sbb
(bad)
dec
xor
xchg
pop
mov
call
test
pop
ror
lods
push
sti
aam
lock
mov
cdq
add
sub
jo
inc
mov
sub
dec
paddusw
add
mov
movs
loop
jne
cld
xor
in
lahf
pop
jno
jne
adc
cmp
aam
sbb
nop
xor
mov
and
in
sbb
xchg
sbb
cmp
popw
lods
aas
mov
jle
clc
(bad)
movs
xor
sub
enter
xchg
pop
lods
ins
pop
into
push
sbb
xor
mov
pusha
jbe
sbb
xchg
inc
retf
lahf
movs
mov
push
pop
scas
jnp
jp
aad
jecxz
fiadd
xchg
or
add
clc
mov
add
mov
mov
mov
cmps
sbb
ss
mov
cld
jmp
xlat
dec
popf
fs
cmps
cli
xor
aas
jmp
fwait
add
mov
lods
je
cwde
cld
mov
mov
cmp
cmp
xor
sar
vmread
sub
mov
and
test
pop
iret
xchg
push
div
adc
sbb
arpl
out
jne
push
scas
addr16
ror
and
repz
add
sub
movs
add
pop
pusha
inc
adc
dec
outs
dec
loopne
push
cmp
pop
adc
inc
jg
and
mov
into
cmps
test
aam
retf
add
fs
cs
mov
xchg
pop
and
repz
(bad)
sub
imul
pop
push
fsubr
sub
(bad)
cmp
bound
xchg
loope
fwait
iret
mov
jl
cmp
call
ja
sub
xacquire
arpl
mov
pop
(bad)
fld
dec
cmps
xor
pop
(bad)
jae
lahf
push
lock
(bad)
ja
cdq
or
jae
and
dec
dec
and
mov
xchg
dec
aas
imul
mov
(bad)
mov
mov
dec
bound
mov
ins
jmp
pop
fdivr
ds
test
jle
pop
addr16
ss
fst
mov
(bad)
pop
adc
and
arpl
mov
xchg
cmp
scas
mov
xchg
iret
jbe
in
inc
(bad)
mov
add
(bad)
dec
in
int3
lock
jne
ja
std
in
ret
fcmove
jg
data16
dec
mov
xor
mov
jae
cmps
leave
xlat
sbb
xor
sbb
sub
mov
cmc
and
cs
fisttp
pop
outs
inc
cmp
push
loopne
xor
adc
sub
(bad)
cmp
jno
gs
jl
sub
paddusw
push
dec
mov
in
jb
adc
and
repz
inc
adc
dec
pop
mov
sub
jl
inc
fcomp
mov
pop
or
addr16
pop
inc
jbe
stos
or
or
fstp
dec
sbb
bound
test
popf
aam
fnstcw
repz
jns
mov
ins
jo
mov
movs
aas
xor
(bad)
mul
popa
popa
inc
or
scas
(bad)
lds
in
call
xor
and
push
std
idiv
mov
mov
(bad)
jmp
test
or
pusha
mov
shl
push
push
bound
loope
mov
xchg
xor
call
or
sahf
add
adc
or
scas
and
sbb
scas
or
dec
add
add
out
(bad)
xor
shl
cmc
jecxz
arpl
inc
jns
movs
jno
jb
into
retf
or
adc
adc
repz
inc
sub
xor
mov
cmp
add
xor
mov
mov
test
daa
ins
je
retf
jb
pop
xchg
js
cld
hlt
adc
pop
adc
loopne
mov
sub
lock
jle
or
out
pop
mov
out
pop
fsubr
xchg
adc
pop
adc
mov
xor
cmps
movs
xor
mov
xchg
sbb
int
cdq
scas
xor
inc
inc
mov
add
jae
in
aas
addr16
aam
or
sti
cli
scas
pop
lahf
shr
pop
pop
jecxz
mov
xchg
xchg
push
or
mov
into
es
rol
into
stos
push
fcomp
cmps
in
test
and
sub
test
int3
adc
leave
imul
xor
xlat
cmp
cmp
jnp
mov
sar
cmp
xor
pop
lods
test
test
xor
cld
mov
cwde
and
lahf
fild
xchg
jne
mov
add
imul
(bad)
xchg
add
mov
loopne
hlt
cmp
push
in
call
call
(bad)
fiadd
cmp
shr
pusha
mov
sti
ins
xchg
fwait
push
(bad)
mov
xchg
test
imul
bound
pop
data16
push
fld
or
xor
xor
sub
cmp
loope
adc
rcl
mov
popa
movs
jge
cmps
pop
sbb
in
or
cdq
dec
ret
push
cwde
ss
les
add
sub
lds
outs
xor
or
cmp
dec
xchg
or
xchg
repnz
mov
nop
jne
retf
adc
pop
lds
mov
jmp
test
and
push
pop
and
add
inc
mov
rol
in
loopne
or
jle
pushf
xor
ins
push
push
sbb
mov
dec
push
sbb
mov
in
jg
test
test
lahf
jbe
or
cdq
cdq
push
mov
outs
ja
enter
clc
mov
sub
ds
leave
pop
add
je
cmp
adc
jne
mov
repnz
scas
rcl
shl
test
outs
xchg
xlat
loope
inc
in
adc
(bad)
ret
mov
or
nop
sbb
sbb
es
jmp
xor
inc
push
data16
repnz
mov
jp
mov
stos
jo
inc
jbe
gs
jb
push
add
mov
jecxz
sbb
out
retf
ins
leave
adc
shl
imul
cmp
add
sub
adc
mov
in
div
imul
imul
sbb
add
bound
pop
bound
mov
lods
push
mov
pop
jle
xchg
mov
dec
pop
push
rol
bound
mov
ficom
scas
pop
ja
xor
xchg
rol
fucompp
pop
fwait
cmp
fstp
repz
jmp
ins
pusha
dec
push
clc
call
sub
imul
xor
pop
call
out
fisubr
adc
add
inc
popf
hlt
jmp
ret
pop
mov
pushf
push
lods
hlt
fist
push
adc
popf
jae
call
test
(bad)
pop
fidiv
lods
mov
int3
scas
cmp
jbe
dec
lds
xchg
int3
aad
jp
pushf
xor
mov
into
xor
test
push
scas
fmul
ss
(bad)
jp
adc
xlat
xchg
(bad)
sub
xor
mov
adc
ret
clc
stos
xchg
sar
jle
mov
jmp
fdivr
pop
movs
or
lods
in
ficom
ret
or
aad
push
jb
hlt
lahf
call
mov
icebp
or
into
aaa
jne
pop
cmp
mov
xor
inc
xor
popf
imul
jmp
cmps
rcl
imul
add
add
loope
mov
mov
push
xor
test
mov
xor
call
sti
pop
push
xor
dec
daa
je
test
and
cmp
int3
in
fadd
xchg
push
rcr
push
fwait
dec
shl
call
imul
jnp
rcr
retf
jmp
(bad)
(bad)
sub
int3
aad
pop
push
or
add
mov
pusha
test
mov
jae
neg
cmp
push
mov
add
ins
pop
lea
xor
cmps
mov
shl
ins
mov
data16
cld
mov
test
mov
xor
adc
repnz
and
inc
jle
test
mov
or
sbb
mov
in
lahf
push
fstp
movs
mov
sub
inc
add
mov
int
push
in
aaa
ins
add
sbb
mov
jo
mov
dec
sbb
cmp
mov
sbb
and
mov
fsubr
push
jae
dec
mov
jno
push
movs
add
les
xchg
(bad)
ss
dec
add
and
mul
adc
in
push
push
or
or
scas
jb
xor
xchg
fisubr
push
xchg
cmp
xchg
clc
rcr
enter
repnz
adc
call
pushf
adc
imul
ret
sti
outs
sub
outs
push
scas
fidivr
outs
mov
sub
mov
pop
pop
mov
ss
ss
dec
ret
data16
pop
push
and
xchg
sar
or
mov
xor
loopne
jne
imul
add
in
repz
call
add
enter
adc
jno
sbb
pop
bound
xchg
in
push
fs
jmp
das
xchg
add
inc
rol
cmp
ret
aaa
call
jns
and
hlt
fdiv
xor
mov
repnz
js
or
scas
mov
loopne
mov
stc
sbb
xchg
add
sbb
mov
vpcmpgtd
inc
je
mov
push
mov
push
pop
sahf
sbb
mov
mov
js
cmp
mov
adc
leave
mov
mov
push
push
scas
ins
mov
inc
mov
mov
imul
push
addr16
adc
sahf
std
aaa
pop
mov
mov
sbb
pushf
ficom
fstp
or
cld
mov
xchg
(bad)
in
mov
loop
outs
mov
aad
add
jge
dec
pop
inc
mov
dec
(bad)
add
cdq
jle
les
sahf
das
daa
mov
and
push
dec
pop
lods
jge
outs
pop
cmps
pop
jo
pop
pop
xor
out
xchg
aam
cmp
loopne
and
jo
adc
fadd
fnstcw
cmp
cli
add
in
test
je
lods
fsub
ja
nop
push
lds
xor
call
mov
or
jb
ss
leave
mov
dec
std
add
(bad)
mov
xchg
int
aad
loopne
or
jecxz
aad
into
(bad)
mov
or
sbb
jge
bound
(bad)
jb
into
sbb
test
shl
push
ds
das
lods
sbb
addr16
inc
fucom
sub
aaa
ret
out
in
dec
or
cmp
dec
pushf
leave
mov
jecxz
pop
iret
sub
xchg
ja
sbb
mov
xor
retf
aad
and
scas
jbe
out
or
sti
adc
lods
jecxz
out
add
sub
sub
add
jp
scas
mov
lods
pop
test
add
pop
xchg
push
repz
push
inc
or
add
cmp
cmp
push
adc
sub
push
pop
scas
daa
daa
popf
arpl
inc
into
push
popf
mov
outs
push
jb
aam
retf
sub
and
dec
cmc
sub
push
dec
jl
fdiv
pop
bound
push
jb
(bad)
test
retf
shl
fwait
sbb
and
push
loopne
inc
jge
mov
lea
call
xchg
ret
jmp
fisubr
test
xor
out
fild
mov
mov
dec
pop
ins
dec
imul
pusha
cmc
mov
and
movs
cmp
inc
jg
xchg
push
push
cmp
mov
imul
pop
mov
int
in
test
pop
fidivr
and
inc
clc
minps
stos
int
test
fstp
mov
push
jp
push
dec
xor
cmp
fcmovbe
and
aam
in
inc
fs
sub
cmp
pop
iret
ins
mov
popf
and
(bad)
out
(bad)
push
retf
aas
movs
movs
test
mov
test
shl
pop
mul
xor
leave
xor
ror
repnz
test
sahf
mov
jg
add
call
test
mov
push
sub
inc
bound
add
mov
dec
xchg
dec
mov
jle
(bad)
int
leave
out
or
push
fimul
out
test
retf
xchg
popa
and
iret
jl
xor
je
dec
loope
in
add
dec
cmps
cmp
pop
or
xchg
jnp
push
mov
das
mov
sar
and
sbb
mov
(bad)
xlat
aam
mov
das
inc
loopne
dec
xor
fdivr
rcr
fistp
das
jp
popf
inc
cmp
repz
push
clc
xchg
mov
and
mov
sbb
adc
dec
mov
add
adc
xor
cmps
push
fsub
sub
jns
mov
inc
mov
int3
sbb
idiv
mov
push
shl
dec
lock
push
aad
cdq
lahf
xor
test
sub
fst
push
movlps
iret
cmps
dec
add
fisub
pop
aam
scas
inc
jecxz
aam
jo
scas
pop
mov
imul
ret
xlat
cmp
(bad)
jne
or
sbb
fcom
std
jl
rol
add
inc
xlat
fwait
or
test
(bad)
mov
adc
sub
lds
cld
fcom
bound
pop
leave
mov
jno
call
in
inc
cdq
ja
sbb
add
ror
(bad)
(bad)
out
arpl
mov
jp
icebp
xchg
retf
xlat
cdq
xor
mov
jmp
out
mul
push
xor
out
pop
ja
cmp
inc
(bad)
cmp
shl
lods
das
lods
(bad)
mov
cdq
dec
push
das
scas
retf
test
sbb
aad
mov
inc
pop
add
ins
sub
lahf
xchg
mov
pusha
neg
enter
in
jo
xchg
aas
or
bound
add
pop
cmp
mov
pushf
test
add
jle
xchg
mov
cmp
pop
push
mov
push
mov
mov
sub
retf
iret
and
into
nop
mov
jbe
jmp
xchg
jge
xchg
sbb
pop
add
push
lds
xor
mov
mov
gs
out
das
mov
shl
add
jp
pusha
ss
cli
loope
xor
or
cmp
ret
(bad)
mov
push
shr
add
xor
push
xchg
retf
stos
in
hlt
add
or
int3
push
pushf
adc
mov
ficomp
push
adc
xchg
je
pop
and
cdq
shr
pop
dec
jg
jmp
rcr
add
sti
and
(bad)
leave
jmp
bound
cmps
iret
add
scas
inc
and
(bad)
sbb
shr
sahf
add
test
inc
sbb
inc
pop
xchg
nop
or
enter
xor
push
sbb
pushf
mov
shr
std
fwait
cmc
ret
cmp
fild
jnp
mov
outs
sbb
aam
pop
retf
push
fst
loopne
push
in
scas
jne
and
and
inc
repnz
loop
ins
and
call
ins
adc
cli
mov
jbe
pop
in
mov
ds
or
mov
(bad)
sbb
xchg
int3
jmp
pop
xor
inc
xchg
pop
in
push
xor
add
jle
adc
loope
dec
push
es
cli
jge
repnz
xchg
and
xor
enter
enter
icebp
imul
xor
adc
daa
(bad)
push
xchg
sbb
outs
dec
pusha
xlat
ret
sbb
ret
push
fwait
jg
(bad)
int
adc
sub
mov
mov
dec
(bad)
jp
fcmovu
mov
xor
aaa
push
dec
xor
das
pop
gs
iret
mov
fidivr
push
or
sar
inc
shl
(bad)
dec
or
adc
mov
sbb
mov
lahf
ss
mov
lahf
(bad)
mov
xor
and
(bad)
retf
jno
mov
xchg
enter
inc
xchg
div
into
pop
cmc
pop
in
fist
push
inc
sbb
xlat
mov
sub
shl
dec
ds
jmp
mov
pop
and
dec
scas
mov
push
cmp
fdivr
pop
mov
push
xchg
cwde
test
mov
sub
push
into
mov
jns
pop
nop
iret
out
pop
pmulhw
push
dec
dec
imul
out
jae
test
inc
mov
add
inc
out
pusha
lahf
aad
fst
pop
xor
add
mov
test
adc
mov
daa
out
cmps
add
and
push
jo
inc
movs
push
popa
repz
or
mov
aas
cmp
jmp
pop
and
xchg
or
sar
cdq
fdivr
xor
xor
sbb
dec
cmps
cmp
and
ror
shl
lods
out
icebp
pushf
fistp
xlat
loop
push
sub
scas
clc
inc
clc
jl
(bad)
and
dec
mov
les
or
xchg
mov
(bad)
sbb
lahf
retf
xchg
add
in
sub
fucomp
popa
push
xor
mov
scas
add
sar
sub
icebp
adc
int
je
jmp
jmp
push
fidiv
fdivr
xchg
int3
std
add
pop
jp
stc
bound
retf
sbb
jl
adc
dec
ss
retf
xchg
xchg
mov
popa
in
xchg
cdq
fcomp
mov
scas
cmc
sbb
jae
loope
inc
push
pop
cs
stos
lock
xor
inc
repnz
jnp
inc
jnp
add
add
sbb
xchg
mov
int
push
hlt
dec
mov
jmp
mov
ja
pop
cmp
push
out
ret
jmp
and
scas
fld
sbb
mov
jle
push
push
retf
arpl
pop
jae
or
lods
data16
cmp
es
loope
js
cmps
mov
pop
sub
jnp
call
lods
dec
lds
fs
mov
idiv
cmp
xchg
jne
std
pop
xchg
sbb
lahf
icebp
lods
int3
mov
cwde
or
jno
stos
pop
les
inc
mov
sub
cmp
bound
sbb
sbb
xchg
fcomp
movs
mov
jno
aas
mov
xor
neg
pop
aam
sub
lds
mov
mov
into
mov
push
ja
xor
in
rol
std
int
idiv
mov
or
scas
js
mov
cdq
inc
fs
push
sub
jmp
iret
outs
jno
pop
ss
or
or
in
arpl
mov
mov
dec
sbb
and
xchg
fcomp
lods
fiadd
inc
adc
add
sub
sbb
arpl
pusha
mov
in
or
and
and
dec
repnz
cmp
cli
dec
sbb
pop
xor
sbb
cdq
inc
cmp
fwait
dec
sub
push
call
jbe
push
xchg
push
daa
mov
jbe
out
add
push
repnz
shr
call
sub
pusha
xchg
sbb
mov
xor
out
cmc
mov
inc
out
cli
test
(bad)
les
test
cmp
and
es
fld1
mov
jae
cli
cmp
clc
sbb
mov
test
call
xchg
mov
movs
mov
imul
mov
stos
xchg
mov
jl
add
(bad)
cs
sub
les
enter
fxch
loope
stos
jne
xor
(bad)
ja
into
lods
icebp
and
pop
xor
(bad)
stos
(bad)
cdq
mov
jp
in
pop
jg
enter
push
ins
or
lds
push
or
jb
mov
sti
jnp
iret
fs
push
xor
cli
pop
ds
movs
daa
pop
or
pop
cwde
int
out
push
aad
sbb
jl
pop
jns
test
aad
dec
lods
inc
sub
xchg
dec
stos
jno
jne
xchg
jbe
adc
bound
int3
mov
scas
mov
or
std
push
dec
xor
add
jo
out
test
loope
xor
dec
movs
out
nop
out
dec
rcl
test
ins
lea
inc
(bad)
into
ins
mov
test
aas
push
jecxz
adc
mov
arpl
cmc
mov
dec
add
out
mov
retf
adc
sbb
enter
fcomp
or
sub
nop
imul
inc
test
outs
mov
dec
sub
jb
(bad)
mov
stos
rcr
push
adc
cmp
popa
popa
cmp
jg
xor
or
xlat
mov
lds
(bad)
pop
into
mov
es
push
sub
rcl
or
inc
xchg
aas
(bad)
sar
dec
mov
or
mov
ds
push
cmp
test
daa
sub
std
pop
shr
and
sub
loope
aaa
vmwrite
loopne
pop
mov
je
fisub
xor
out
mov
add
add
push
inc
pop
mov
fs
test
jmp
jmp
mov
loopne
hlt
test
out
push
mov
or
mov
cmps
sub
pop
rol
cmp
or
pop
pop
in
fdivr
enter
push
pushf
pop
or
and
or
out
sbb
dec
sbb
dec
aam
test
push
mov
mov
lock
sub
into
and
sub
pop
cmp
sbb
shl
mov
int
int
loop
pop
std
nop
adc
xor
idiv
add
addr16
rol
fwait
out
outs
or
xor
jmp
movs
stos
sbb
inc
dec
inc
(bad)
outs
mov
inc
xchg
fcomp
dec
addr16
inc
imul
test
cmps
jle
sbb
xor
and
out
dec
inc
movs
inc
mov
sbb
push
xchg
fwait
(bad)
nop
pop
ds
iret
lods
pop
fnstsw
mov
push
dec
sub
and
jg
sbb
cmp
pop
setno
pop
sub
int3
jns
xchg
mov
movs
mov
imul
mov
int
dec
fs
and
and
push
inc
ret
dec
pop
inc
and
aad
fldenv
retf
pop
and
and
push
pop
pop
ret
vpmovsxbw
pop
sbb
push
and
addr16
out
repz
popf
xchg
jg
jle
xor
adc
mov
jmp
in
push
dec
fidiv
leave
fstp
xor
movs
sbb
loope
in
jg
jno
pushf
pop
add
mov
sub
test
xchg
iret
hlt
add
add
jae
movs
js
mov
or
mov
jnp
or
sbb
mov
sub
cmp
pop
mov
call
leave
ret
pop
leave
mov
cwde
std
in
out
call
call
imul
mov
fwait
jge
mov
or
dec
imul
jb
movs
mov
push
sbb
mov
out
shl
cmp
adc
cs
jge
inc
lea
ja
(bad)
mov
pop
jl
adc
fisubr
rcr
cmps
mov
div
adc
mov
or
outs
cmps
mov
adc
jmp
pop
mov
sub
cs
cwde
cmp
add
mov
clc
xchg
mov
hlt
stc
daa
fdiv
add
sub
fsubr
add
mov
adc
xchg
sbb
sbb
sti
sub
inc
mov
pop
ret
add
icebp
jmp
push
push
pop
adc
movs
and
cmp
xchg
sbb
dec
sbb
mov
movs
unpckhps
shl
ins
push
sbb
mov
jecxz
sbb
add
int
inc
lahf
imul
mov
ret
dec
lea
in
(bad)
les
(bad)
ins
jle
adc
popa
pop
scas
addr16
out
sbb
mov
mov
shld
adc
sub
push
leave
dec
push
inc
cwde
iret
fwait
addr16
rcl
rcr
(bad)
pop
adc
ja
mov
out
cmp
add
(bad)
jle
ficom
fldenv
mov
adc
mov
(bad)
mov
pop
xchg
mov
mov
xor
sbb
jmp
xchg
add
dec
nop
xor
jb
das
cmp
cmps
xchg
adc
pop
rol
mov
jne
rcl
dec
mov
add
rol
in
push
xor
movs
cmp
mov
adc
pop
mov
shr
inc
jg
cmp
add
int
fisttp
jno
push
sahf
or
test
ret
cmp
cld
sbb
inc
mov
retf
ins
inc
sbb
ret
loop
aad
sbb
stos
mov
aaa
lea
test
sbb
or
ficom
jo
or
cwde
repz
sbb
loop
mov
scas
aam
xor
(bad)
and
fcomi
jno
mov
sub
sub
fadd
xchg
shl
xor
scas
push
in
sbb
mov
cmp
call
out
movs
aad
or
cmps
pop
ja
jo
in
sbb
shr
cmps
sbb
or
pop
ss
jmp
inc
and
scas
lock
fldenv
xlat
xchg
pusha
cdq
cmp
je
push
push
and
xlat
mov
outs
adc
pop
mov
imul
jno
inc
in
arpl
xor
repnz
jecxz
not
sbb
in
retf
mov
cli
jg
and
push
(bad)
jno
adc
cld
scas
pop
pop
out
jbe
pop
enter
xchg
sub
fs
pop
cmp
sub
in
lar
xor
test
mov
jl
out
push
xchg
js
fistp
cmc
bound
out
jb
adc
add
sar
jns
inc
cdq
dec
cmps
dec
cmp
sub
hlt
out
adc
pop
in
pop
sub
jle
cs
stos
adc
(bad)
pop
test
push
pop
cmp
mov
push
pop
or
sar
or
sbb
mov
mov
add
add
mov
or
dec
data16
mov
repnz
dec
ret
xchg
xor
cmp
aad
jno
sahf
(bad)
push
push
inc
push
add
jb
sbb
bound
or
pop
dec
loop
lock
xor
lock
adc
add
movs
mov
xchg
and
and
add
ins
imul
sahf
jp
out
test
sub
adc
mov
out
neg
and
add
jp
aaa
jne
and
aam
movs
mov
jg
ret
or
inc
lds
pop
es
mov
or
pop
xchg
pop
repz
mov
test
or
jle
addr16
aad
jno
lods
cli
not
xor
(bad)
les
adc
fidiv
xchg
stos
jl
pop
pop
inc
sahf
inc
ins
(bad)
aas
jae
jne
xor
fistp
push
mov
mul
stos
add
imul
shl
int3
xchg
push
retf
dec
push
enter
pushf
push
pop
fcmovb
pop
ds
sbb
mov
stos
fwait
js
call
in
loopne
jae
ret
jecxz
jno
mov
xor
pushf
push
add
test
out
mov
in
icebp
adc
pop
mov
dec
dec
pop
out
adc
add
xchg
or
push
ret
clc
cmp
mov
aas
cmp
fsub
imul
leave
dec
mov
fwait
or
pushf
pushf
setb
sub
cmp
adc
push
jmp
xchg
sub
stos
cmp
shl
fsubr
jns
rcr
xor
cwde
out
sbb
push
lock
lods
inc
and
mov
jmp
inc
les
loope
xor
adc
push
sbb
jno
mov
cmp
pop
or
outs
mov
in
mov
gs
cmp
and
xor
pop
sbb
out
inc
xchg
mov
sbb
mov
mov
dec
mov
jno
xor
cli
fisubr
xlat
or
retf
icebp
loope
pop
es
or
xor
push
xor
(bad)
xor
fmul
mov
pop
adc
pop
push
jmp
pop
pop
movs
(bad)
xor
sub
cdq
fild
les
adc
mov
cmp
mov
cdq
in
popa
mov
pushf
and
test
cmc
ins
cmp
mov
imul
sub
adc
adc
(bad)
fld
dec
jns
lods
inc
rcl
push
inc
mov
sub
in
push
or
cmps
(bad)
add
es
dec
cmp
sub
mov
xchg
sbb
inc
leave
hlt
cmps
pop
ins
mov
mov
pusha
xchg
adc
cmp
jecxz
inc
je
jge
mov
icebp
cs
test
add
clc
sbb
enter
outs
mov
fmul
add
pop
sbb
mov
jl
cmp
push
js
call
pop
sti
or
(bad)
mov
addr16
mov
or
jmp
lea
cmps
stc
iret
sub
ins
int
sahf
imul
cmp
mov
sbb
in
mov
pop
push
push
mov
arpl
scas
pop
sub
loop
push
adc
lods
or
stos
mov
daa
in
bound
push
jo
ficom
cmp
cmp
mov
pop
rcr
mov
xchg
fldenv
push
dec
inc
fwait
mov
xchg
pop
push
cmp
mov
sbb
ds
pushf
in
cmps
xchg
pop
jp
cmp
sub
pop
fs
push
aas
xchg
nop
dec
(bad)
or
call
push
or
rol
add
dec
sub
sbb
sbb
inc
jle
sbb
out
jl
mov
pop
push
ror
mov
icebp
pop
jns
cmc
out
add
sahf
and
sbb
(bad)
sar
cdq
dec
jge
test
mov
out
push
xor
push
sub
sar
fldenv
std
cmps
fiadd
mov
mov
sub
push
daa
fdivr
push
ins
jg
in
addr16
pop
jl
gs
and
scas
repz
cdq
fistp
mov
inc
fcomp
or
dec
and
call
adc
outs
cmp
push
pop
shr
fcom
out
repz
retf
cmp
cmps
int
aaa
jecxz
(bad)
jae
sahf
test
push
scas
ss
cmp
jne
cmp
mov
fnstcw
or
jno
fisub
call
xor
dec
aam
pop
loopne
xchg
out
data16
xchg
and
lods
pop
popf
out
add
scas
stos
std
dec
aad
or
mov
lea
jecxz
rcl
sti
sbb
adc
sub
push
test
(bad)
jns
pop
mov
movs
arpl
out
xchg
mov
retf
fild
add
inc
cmp
sbb
pop
sbb
(bad)
mov
repnz
sbb
add
adc
daa
jmp
iret
xor
lods
movs
pop
or
test
xchg
mov
sbb
xor
nop
dec
inc
les
dec
push
out
sbb
mov
fcom
mov
lods
or
sub
xor
test
loopne
pop
cld
shr
addr16
and
movups
(bad)
sti
movs
dec
mov
jae
test
stc
or
and
jnp
daa
cmp
mov
cmp
pop
jl
bound
loope
jo
scas
mov
dec
mov
lds
jmp
dec
add
mov
pop
add
fcmovu
sahf
fs
jle
fidiv
dec
adc
mov
aaa
dec
fs
adc
jp
cli
mov
ins
xchg
in
rcl
arpl
xor
cmp
(bad)
loopne
sbb
(bad)
cmc
je
mov
fwait
cs
lahf
mov
(bad)
jge
(bad)
cmp
push
mov
sub
fs
retf
push
mov
and
adc
jns
cmp
fbld
mov
ja
and
mov
pop
popa
mov
mov
cmp
ret
jmp
into
jmp
pop
or
push
ror
cmps
xor
xor
stos
aam
sub
or
jo
in
inc
daa
ret
loop
lds
imul
test
out
push
mov
test
jbe
xchg
test
push
retf
call
sbb
or
push
inc
cmp
mov
imul
daa
mov
inc
movs
in
mov
lea
les
jne
data16
sub
ret
inc
mov
pushf
shl
int
rcr
xchg
push
push
lods
xchg
xor
jle
xchg
xor
push
neg
push
rcl
pusha
dec
mov
or
outs
test
or
sbb
or
cmps
lahf
lods
test
addr16
pop
ret
aas
loopne
adc
mov
aaa
jmp
jg
mov
and
mov
push
sbb
sbb
push
not
jne
push
add
inc
mov
push
mov
rol
(bad)
enter
retf
and
pop
jp
inc
adc
xlat
das
xchg
cmp
test
std
sar
js
fisub
lds
dec
adc
or
inc
mov
mov
add
movs
xor
repz
pop
and
mov
in
imul
scas
xor
and
dec
into
sbb
cmp
loop
jg
hlt
adc
fisub
in
inc
adc
mov
iret
(bad)
fadd
mov
frstor
mov
dec
fs
hlt
(bad)
mov
add
inc
pop
mov
test
xchg
cmp
cmps
rol
mov
xchg
jmp
retf
cmps
in
data16
out
mov
cmp
jnp
aad
jbe
clc
rcr
push
inc
int
push
and
mov
or
sub
cmc
sbb
mov
(bad)
mov
iret
repnz
xor
xchg
pop
mov
xor
in
push
push
inc
inc
push
das
out
stos
pop
cmps
inc
mulps
pushf
xor
rcr
xor
les
jp
mov
dec
add
mov
dec
sbb
aaa
sbb
or
out
bound
jp
mov
ficom
shr
sbb
sub
bound
push
dec
pop
adc
mov
aaa
jl
xchg
jecxz
stos
cmp
mov
xor
ret
dec
jo
add
movs
or
stos
xor
and
into
or
lods
xor
xchg
push
xchg
imul
jbe
bound
push
ins
shl
repnz
inc
cmp
stc
adc
ficomp
xchg
aad
mov
pop
cmp
shr
mov
icebp
cmps
mov
sub
sar
adc
hlt
jmp
inc
push
sbb
inc
inc
mov
out
enter
push
push
out
sbb
sub
xchg
clc
jnp
cmps
xchg
sub
inc
jmp
mov
retf
add
pop
gs
xor
lods
jns
mov
fld
jmp
ins
cdq
das
mov
xchg
fild
movs
mov
mov
or
repnz
dec
lock
clc
pop
jo
fdivr
dec
mov
out
or
and
cmp
or
jbe
loope
stos
movs
call
ret
je
and
(bad)
sub
jge
jmp
dec
pusha
sbb
shl
xor
pop
dec
sbb
out
add
cmc
mov
sub
stos
(bad)
out
mov
pop
xor
xor
mov
ret
pop
rcr
xor
aam
movs
das
cdq
mov
fwait
pop
enter
adc
xor
lds
push
ss
dec
push
or
bound
adc
xchg
pop
xor
sbb
scas
pusha
repnz
or
sahf
dec
add
ror
fs
out
mov
jno
fwait
shl
xor
mov
and
(bad)
(bad)
popa
sahf
xchg
xor
cmp
lods
pop
es
call
outs
pop
sbb
inc
mov
es
mov
mov
cmp
add
adc
int3
rol
sub
adc
adc
pop
aad
arpl
fs
xchg
cmp
aad
cmp
cld
jmp
sbb
lock
mov
mov
repz
shl
mov
fcom
adc
mov
out
xchg
cmp
daa
test
pop
movs
jmp
dec
es
jl
mov
(bad)
pop
xchg
push
cld
inc
push
dec
mov
bnd
adc
mov
aas
adc
xor
outs
inc
or
jns
test
mov
repz
push
adc
stos
retf
push
icebp
mov
cs
adc
sbb
dec
test
and
mov
ins
je
lods
aas
das
outs
jmp
xchg
push
ins
dec
ins
dec
shl
pop
and
es
rcl
dec
rcl
inc
int3
or
aas
jecxz
sbb
cmp
add
and
fldcw
loop
jns
or
adc
jle
stos
lods
jl
int
pop
or
xchg
test
push
ret
sbb
and
scas
dec
stos
lds
pop
jb
pusha
pop
shl
in
xlat
outs
imul
aaa
xlat
push
jno
fsub
shl
psadbw
jno
not
inc
push
test
ss
cmc
icebp
fld
popa
jne
xor
lea
and
xlat
mov
neg
mov
cmp
sub
mov
les
scas
pop
dec
rol
jge
or
add
inc
loop
dec
adc
cmps
mov
(bad)
js
cwde
leave
sbb
rol
jmp
sbb
dec
xor
jae
adc
xchg
pop
adc
add
add
test
or
retf
push
xchg
cmc
das
cmp
jmp
(bad)
(bad)
mov
repnz
sbb
sbb
mov
mov
call
xlat
repz
pop
inc
dec
sahf
add
rol
mov
ins
dec
sub
xchg
loopne
stos
(bad)
repz
cmp
lock
test
repnz
out
adc
cmp
cmp
enter
aas
les
xor
scas
xchg
inc
je
cmps
pop
xor
inc
xchg
push
das
push
pusha
sbb
lea
jl
popf
pushf
(bad)
mov
add
(bad)
fadd
mov
xor
push
aad
ins
pop
mov
lods
xor
cmps
out
jmp
stc
test
cdq
inc
jne
mov
sub
xor
sbb
jl
fadd
rcl
data16
pop
mov
add
scas
fdiv
(bad)
mov
xor
mov
les
stos
push
add
ins
jb
neg
dec
fidivr
push
mov
sbb
jecxz
mov
dec
add
push
ret
movs
add
fisubr
addr16
out
rol
sub
mov
mov
daa
jmp
addr16
enter
pop
ret
dec
enter
xor
scas
jle
and
xor
mov
mov
(bad)
jg
fild
xchg
or
mov
mov
jmp
data16
mov
inc
adc
or
push
arpl
adc
add
add
sar
adc
adc
jp
popa
ror
rcl
jb
inc
cmc
pop
sub
mov
lods
stos
in
cli
mov
add
loopne
xchg
imul
fisttp
jl
test
mov
cmp
and
jmp
cmp
adc
ss
(bad)
pusha
adc
js
idiv
test
das
enter
and
addr16
cmp
sar
mov
mov
push
test
mov
sbb
adc
cmp
(bad)
lds
lods
out
daa
popa
mov
out
test
fldcw
(bad)
cmp
inc
fidiv
ret
das
add
movs
cli
pusha
movs
pop
out
xor
ficomp
not
call
mov
mov
cmps
sbb
push
inc
or
dec
fistp
into
jle
pop
fldenv
mov
jne
jg
xchg
jl
push
mov
sub
adc
mov
cmp
lock
test
pop
ins
cwde
ror
sti
cmc
xor
cmp
leave
and
aad
jno
(bad)
cld
xor
jnp
lea
daa
jmp
jne
loopne
jbe
(bad)
leave
popa
outs
pop
pop
fild
cwde
ds
out
aam
sbb
inc
loopne
xchg
and
inc
addr16
loop
enter
sbb
ror
fadd
sub
xchg
(bad)
into
shr
cli
sub
lods
stos
mov
adc
lds
int
xchg
int
adc
mov
in
das
push
mov
jmp
icebp
retf
cmp
mov
add
aam
and
or
mov
mov
test
add
ja
cli
jno
add
adc
es
xchg
or
cmp
lock
pushf
dec
imul
adc
fidiv
and
jecxz
mov
adc
in
ins
fs
sub
jno
cld
or
pusha
and
popa
rdtsc
mov
aad
cmp
or
jp
ret
ins
xor
es
test
jg
bswap
add
pop
je
fsubr
mov
jne
mov
cs
fimul
sbb
fisubr
dec
push
jae
pop
cmc
cmps
mul
inc
pop
(bad)
cmc
push
cs
jmp
jo
out
cmps
jmp
xchg
mov
cwde
icebp
stos
inc
(bad)
push
popa
cdq
ins
mov
pop
movs
dec
fdivr
pusha
push
fbld
movs
mov
xor
sbb
fnstcw
repz
daa
jmp
aas
(bad)
test
mov
jne
stc
loope
xor
jnp
sbb
movs
or
out
jmp
sahf
adc
ss
cmp
mov
icebp
in
sub
rcl
pop
sbb
popf
outs
mov
jmp
mov
leave
push
jge
idiv
mov
dec
inc
outs
inc
dec
push
fst
std
jne
dec
add
test
jl
mov
fcomip
(bad)
push
fldcw
pop
mov
lea
add
add
push
add
mul
adc
xor
sub
pop
xor
cmp
pop
or
xchg
loopne
sbb
jg
mov
fucomi
cs
and
mov
jae
adc
int3
pop
xchg
sbb
mov
out
ret
popf
in
fdiv
aad
and
pop
shl
js
test
cmp
mov
sti
sub
inc
jne
sbb
jae
aaa
push
mov
arpl
fs
sar
add
and
lahf
mov
xbegin
ror
pop
scas
movs
clc
jae
dec
out
pusha
mov
pop
addr16
test
mov
cmp
fld
adc
mov
add
cmp
cmp
push
(bad)
lods
xchg
adc
mov
(bad)
jmp
mov
pop
int
scas
repz
and
xchg
ins
cmps
jo
hlt
dec
xchg
adc
pop
push
lods
pop
mov
cdq
scas
out
scas
adc
(bad)
sysenter
or
adc
mov
add
mov
xor
lds
jle
or
pop
jl
xor
idiv
and
gs
sbb
xchg
cmps
jl
jmp
mov
ret
ret
mov
pop
dec
cmp
in
mul
cmp
xor
mov
xchg
dec
push
adc
inc
dec
adc
pusha
cmp
movs
enter
cmp
mov
jmp
(bad)
cmp
mov
add
js
sub
scas
cmp
shr
aaa
adc
or
jg
or
add
loopne
mov
dec
dec
fild
movs
fiadd
stos
jmp
dec
mov
cmc
aaa
int3
(bad)
and
outs
inc
mov
(bad)
xchg
add
inc
test
movs
jnp
je
jp
cmp
retf
or
stc
aam
push
mov
clc
lds
push
mov
mov
fs
jl
adc
js
pop
ja
lea
mov
mov
cmp
inc
lods
in
iret
add
retf
add
push
movs
xor
mov
inc
add
mov
and
ja
xor
inc
sahf
dec
std
adc
xchg
(bad)
ss
popf
or
mov
call
adc
fist
in
sbb
mov
pop
lea
push
sub
pop
push
jae
cmps
sub
push
int
icebp
adc
xor
fsub
jecxz
and
std
ins
sub
ja
mov
jp
jno
inc
ins
and
enter
sub
cmps
pusha
push
or
mov
pop
test
dec
into
or
adc
dec
iret
cmc
push
movs
popf
(bad)
scas
sbb
jae
mov
movs
outs
cs
push
rol
mov
mov
in
lds
mul
or
jl
jecxz
(bad)
sub
je
mov
(bad)
pop
mov
adc
inc
gs
adc
fcom
clc
(bad)
or
pop
push
adc
mov
jl
(bad)
imul
cli
aas
mov
stos
pop
cmp
cwde
mov
jmp
mov
in
xchg
stos
cli
cmps
adc
or
xor
call
xor
pop
cmp
jge
sub
xor
movs
jmp
jmp
bound
mov
xchg
ret
ret
mov
(bad)
shr
pop
pop
ror
cwde
xor
mov
mov
sbb
adc
popf
or
imul
loop
xor
adc
sbb
jmp
xor
pusha
mov
or
xchg
jmp
out
xor
pop
lods
fnsave
aaa
fcmove
mov
push
rcl
int3
cwde
aad
xlat
add
xchg
mov
add
jp
sbb
aas
and
aaa
(bad)
adc
pusha
lods
test
pop
xchg
je
push
jl
or
and
stos
and
sbb
movs
fadd
and
sub
lods
test
jnp
and
sahf
lods
clc
jo
sbb
aad
sbb
jle
pop
adc
cmp
jg
and
xchg
xchg
sbb
mov
pop
mov
sti
jmp
mov
imul
mov
mov
mov
jae
sbb
ja
inc
adc
mov
xor
jno
mov
sbb
add
pop
add
add
in
ja
fdiv
mov
fsubr
xor
dec
cmc
mov
adc
aaa
sbb
sub
fcomi
lahf
add
ja
scas
mov
fdiv
jp
adc
inc
ja
sbb
cmp
scas
out
xchg
cmp
jp
or
xchg
or
push
(bad)
je
mov
dec
in
call
push
sti
jo
ja
inc
maskmovq
mul
mov
cmp
pusha
imul
xchg
dec
retf
and
sbb
shl
jns
xor
xor
and
dec
mov
lods
sti
loope
jecxz
sub
retf
cwde
(bad)
mov
adc
adc
mov
cli
push
xchg
rep
xlat
int
sub
inc
xchg
cmp
in
xchg
jbe
repnz
xor
mov
and
sbb
ins
pop
fstp
call
push
push
nop
enter
rcl
dec
es
mul
sub
inc
(bad)
push
jne
(bad)
push
movs
jns
mov
adc
les
das
or
loope
test
and
in
jge
mov
add
sbb
pop
jl
jl
jb
sar
out
sti
pop
inc
cmps
jle
cwde
pop
in
int
xchg
stos
mov
and
inc
sbb
xchg
push
cmp
push
adc
sub
push
je
xor
call
or
aam
movs
inc
xor
in
jmp
pusha
pop
int3
cmp
and
sbb
mov
das
cmps
in
inc
fcom
rcl
rcr
push
(bad)
fild
retf
std
dec
int
jle
pop
push
mov
xchg
pop
fdiv
jg
aas
jne
shl
lea
or
push
js
lea
adc
push
inc
rol
cmp
std
das
das
xor
rol
ins
jg
sub
pop
in
fisub
rol
push
push
jg
mov
repz
inc
add
mov
jmp
add
or
jmp
and
mov
sbb
or
js
aam
xor
pushf
push
mov
mov
loop
mov
outs
xchg
cld
mov
mov
pop
cmps
fst
data16
nop
fld
enter
jp
jp
xor
adc
shl
push
dec
movs
xor
jae
jg
xchg
fwait
loopne
sbb
cmp
mov
stc
adc
jns
push
repz
pop
inc
inc
retf
and
cli
and
cmp
mov
adc
ins
dec
into
jno
xor
shl
mov
icebp
js
nop
gs
les
ss
sar
call
push
pop
call
or
enter
(bad)
aaa
imul
jae
jl
je
je
mov
call
mov
loope
dec
fadd
popa
cmp
adc
pop
inc
or
jnp
fisub
xchg
mov
add
dec
stos
repz
xchg
pop
mov
xchg
cs
and
fs
mov
mov
dec
je
aaa
cs
mov
das
adc
in
xor
push
inc
xchg
imul
and
pushf
fisttp
cmp
xor
cmp
ret
imul
push
dec
stos
ror
or
das
cmps
or
test
push
and
sbb
mov
dec
fimul
mov
iret
popa
mov
lahf
in
pop
cmp
mov
push
inc
dec
(bad)
jge
inc
push
shl
pop
cmps
popa
add
jbe
add
or
and
adc
test
fs
mov
std
mov
push
mov
dec
cmc
mov
sub
jl
sbb
pop
(bad)
icebp
push
xchg
jp
push
ret
cmps
inc
lea
pop
fistp
int
cli
mov
(bad)
sbb
mov
push
push
rcpps
les
jno
call
inc
push
nop
sub
ror
xor
mov
and
cli
mov
bound
test
retf
or
xor
push
pop
xchg
in
clc
pop
pop
add
adc
pop
xor
(bad)
out
sbb
dec
pop
lds
jl
ins
idiv
lods
jns
inc
jns
int3
int
pop
jle
repnz
fdivr
push
ss
fmul
ins
ds
(bad)
pop
and
out
sar
jne
pop
int
jo
xor
jns
out
dec
popf
sti
rcr
pop
mov
inc
aas
outs
sub
mov
jne
movs
push
inc
clc
push
and
into
adc
aaa
sar
or
les
xchg
sub
dec
xchg
outs
and
xchg
pop
pop
or
aaa
in
mov
push
ss
repnz
scas
sub
jo
shl
sbb
xchg
or
inc
ins
and
rol
add
push
jns
fsub
inc
inc
(bad)
in
fwait
xchg
fisubr
add
cmp
jmp
(bad)
ftst
push
adc
out
push
push
pusha
and
dec
hlt
add
lahf
add
shl
sbb
aad
or
cmp
inc
mov
leave
mov
jnp
xchg
shl
aad
(bad)
jmp
mov
pop
popf
cmp
adc
sahf
mov
daa
or
sbb
pop
(bad)
xchg
test
pop
mov
out
ret
cld
mov
push
mov
ret
addr16
pop
repnz
or
jo
push
sub
inc
pop
movs
les
push
shl
jmp
inc
jno
dec
imul
test
jl
xchg
xor
mov
pop
add
shl
push
les
(bad)
xchg
cmp
rcl
fadd
mov
aaa
dec
cmps
fild
test
rcl
pop
jnp
pop
mov
cdq
dec
add
sub
xchg
push
shl
add
inc
cs
add
dec
mov
loopne
push
sbb
pop
pop
lea
pop
(bad)
int
jbe
and
or
pushf
push
out
and
imul
sti
test
popa
mov
mov
(bad)
repnz
inc
fldcw
inc
or
data16
or
call
jmp
mov
sbb
xor
mov
sub
out
cmp
xchg
mov
jp
push
dec
aad
lods
sbb
adc
xlat
xchg
ret
out
mov
push
sbb
ret
pop
lahf
lods
ret
ss
icebp
test
mov
adc
mov
cmp
fucomip
sub
jae
pusha
cmps
xchg
(bad)
loope
sar
mov
ret
call
mov
(bad)
sbb
scas
retf
nop
add
jmp
(bad)
addr16
loopne
enter
mov
test
jne
fs
dec
cmp
sbb
mov
push
mov
pop
call
and
mov
inc
imul
add
pushf
repnz
pusha
repnz
and
mov
mov
xor
jl
and
mov
movs
add
jns
stos
sub
inc
hlt
inc
std
out
(bad)
(bad)
jns
pushf
mov
push
dec
hlt
jo
lahf
loope
pop
stos
retf
dec
rcl
cmps
mov
test
pop
retf
and
into
cmp
shl
dec
add
pop
xchg
push
pusha
pop
rcl
mov
out
arpl
imul
fld
std
nop
xor
sub
push
add
loopne
jb
ret
pop
imul
js
cmp
or
clc
aaa
mov
push
mov
or
je
shl
aad
ret
test
loop
inc
xchg
xor
adc
and
push
push
xor
adc
aad
jge
or
in
repnz
movs
jle
inc
push
mov
lock
mov
in
mov
cmp
sub
(bad)
scas
(bad)
mov
mov
pop
call
sbb
int
and
dec
lods
in
movs
mov
sub
jmp
out
push
enter
mov
adc
pop
fiadd
xchg
and
xchg
push
fsubr
dec
jnp
xor
cmp
adc
pop
scas
nop
clc
int3
xor
jp
lods
pushf
inc
jle
ins
ins
pop
and
and
push
pop
pop
ficomp
(bad)
sahf
inc
adc
fsubr
(bad)
jecxz
push
pop
mov
mov
mov
sub
sar
arpl
sub
fimul
data16
nop
test
push
repnz
stos
mov
sub
pop
enter
in
jmp
mov
xchg
(bad)
ficom
jae
adc
xchg
push
mov
repnz
xchg
retf
fadd
nop
call
out
imul
stc
inc
(bad)
sub
test
jae
mov
mov
pop
push
aad
mov
or
aad
jge
addr16
fxch
stos
jmp
mov
popf
clc
rol
psllq
pop
mov
imul
lock
inc
xor
cmp
ss
sbb
mov
jle
sub
test
or
cmp
ja
push
jecxz
jecxz
mov
xchg
dec
jp
mov
in
pop
add
(bad)
pop
into
sub
mov
push
push
pop
and
scas
loopne
aad
scas
mov
xchg
pushf
pop
call
rcr
or
cwde
dec
xor
fwait
popa
les
and
outs
jno
xor
mov
adc
push
ret
cmp
std
movs
leave
out
imul
mov
mov
cmp
cwde
sub
icebp
js
das
mov
jle
adc
mov
jecxz
pop
xchg
push
repnz
in
dec
sbb
fwait
outs
aaa
aaa
dec
cmp
leave
adc
mov
push
hlt
dec
pop
jno
sub
in
outs
adc
jg
or
sbb
and
arpl
push
cmp
dec
sbb
push
mov
enter
inc
mov
xor
stos
fld
test
cmp
or
lea
and
dec
faddp
pushf
adc
ffreep
mov
mov
inc
out
icebp
inc
pop
in
xchg
push
int3
sub
jge
inc
cmp
fmul
js
fidiv
xchg
dec
pusha
out
cmp
dec
ror
sbb
cmps
mov
jg
repnz
jecxz
jle
dec
mov
outs
jp
and
sub
jbe
inc
push
xchg
fidivr
pushf
jp
neg
inc
add
ss
mov
pop
mov
adc
or
mov
add
(bad)
pop
jmp
cmp
push
mov
pop
cmc
(bad)
mov
dec
(bad)
pop
sbb
aad
add
cdq
xchg
fs
(bad)
aam
pop
cmc
mov
repnz
pop
sub
pop
add
jo
adc
int3
hlt
mov
push
xchg
or
and
mov
push
(bad)
fdiv
cmp
and
(bad)
iret
pop
gs
hlt
mov
bound
lds
adc
stc
dec
loopne
sub
pop
inc
arpl
sbb
data16
pop
aam
mov
aam
cmp
sub
adc
mov
xor
pop
adc
cmp
loope
cwde
cli
push
adc
jo
dec
push
inc
pop
inc
and
sbb
int
fsub
outs
pusha
sti
rol
xchg
and
sub
test
pop
popf
sub
dec
retf
xor
xor
sahf
ret
or
mov
pop
sbb
xchg
loopne
jne
pop
inc
push
pushf
or
adc
or
out
fst
scas
in
adc
and
cmc
int
ja
idiv
clc
mov
xchg
pop
jb
sub
jno
adc
sbb
mov
xchg
popa
sub
push
push
addr16
mov
jge
data16
pop
inc
mov
adc
jnp
aas
shl
lods
inc
cmps
xchg
pop
jg
mov
push
out
dec
mov
add
repz
push
mov
and
sub
jl
pop
fldenv
fbld
iret
push
sub
jne
stos
test
inc
call
adc
xlat
push
into
push
call
js
jno
mov
imul
push
jbe
xchg
adc
ficom
je
mov
pushf
cmp
clc
movs
mov
xchg
bound
aaa
add
std
bound
mov
retf
out
test
mov
sbb
imul
lock
in
addr16
loopne
mov
adc
jne
mov
mov
push
mov
(bad)
call
les
mov
fadd
jle
scas
fnstsw
(bad)
mov
and
aaa
mov
repnz
and
enter
(bad)
(bad)
xchg
mov
aam
stc
sbb
jl
xchg
mov
(bad)
adc
sbb
sar
lods
out
xchg
push
xchg
sub
adc
jge
cld
push
call
inc
nop
mov
add
fs
cmps
pusha
lea
inc
cli
mov
loop
scas
outs
cmp
dec
iret
xchg
sbb
js
test
aad
cld
mov
(bad)
fild
pop
out
daa
(bad)
fcomp
add
jge
dec
scas
jnp
(bad)
es
sbb
or
arpl
jge
add
iret
push
jl
imul
sub
mov
mov
icebp
or
test
pop
test
aam
cmp
je
in
sbb
add
loopne
cmp
aaa
lods
out
add
in
cmp
scas
scas
ds
add
jo
out
sub
aaa
pop
sub
or
in
and
jbe
push
mov
mov
jno
jl
dec
cmp
pop
or
inc
movs
push
add
jne
rcr
dec
or
arpl
outs
leave
xor
push
adc
mov
adc
sbb
pusha
fwait
push
sbb
push
call
jns
push
ins
leave
pop
pop
(bad)
ds
xchg
xor
repnz
(bad)
je
fadd
sub
inc
jb
sbb
jge
pop
mov
jge
inc
nop
fwait
inc
sub
pop
adc
pusha
or
inc
in
out
movs
mov
sub
mov
es
arpl
dec
in
add
shl
jo
sub
pop
repnz
xchg
mov
stos
rcl
mov
in
xchg
ins
push
inc
(bad)
jge
cmp
mov
in
adc
pop
xchg
pop
inc
test
loop
push
mov
inc
ds
out
cmp
sti
xor
aam
pop
dec
push
sub
stos
push
jno
clc
mov
or
dec
loopne
jae
sbb
push
add
push
mov
push
or
mov
arpl
push
ret
cmp
jmp
sub
and
lds
je
mov
pop
aas
movs
sbb
push
rcr
bound
dec
ret
adc
in
pushf
mov
adc
pop
xor
cwde
icebp
data16
cwde
test
sbb
add
pop
add
and
or
out
test
enter
fst
cs
sub
dec
shl
lods
scas
js
or
mov
in
cmps
mov
in
into
sub
adc
cld
retf
repnz
jmp
rcl
stos
ror
and
(bad)
lods
pop
sub
aaa
inc
idiv
ja
adc
mov
mov
lock
cmp
or
movs
dec
push
cmp
nop
sub
inc
add
xor
addr16
sub
mov
adc
aas
repz
cmp
mov
push
and
cmps
sub
adc
les
mov
push
lds
gs
test
cmps
es
sub
loop
rcl
cmp
out
cli
inc
shl
push
sub
or
sub
fcomp
and
gs
sbb
in
mov
push
test
gs
retf
shl
mov
std
mov
sbb
or
jge
lods
leave
aaa
xor
sahf
inc
dec
mov
xor
inc
cmp
and
cli
jo
sti
movs
and
lea
retf
ret
in
jno
push
test
(bad)
pop
popf
int
add
mov
icebp
fwait
mov
or
mov
sub
jb
in
popa
bound
outs
inc
or
sar
mov
ror
ins
test
out
call
add
xor
ret
les
and
push
shr
aad
mov
pusha
dec
sbb
aam
sbb
mov
pop
aam
push
ja
dec
adc
(bad)
in
das
aam
enter
in
daa
mov
cmps
loopne
pushf
xchg
std
jge
shr
sbb
mov
sub
cmp
or
pop
sub
out
outs
aad
div
cmp
retf
add
das
cmp
add
dec
xchg
repnz
push
loop
and
repz
inc
scas
sub
std
hlt
sbb
outs
or
loopne
in
jp
stos
cmps
aas
pushf
jmp
and
fdivr
jl
sbb
pop
jge
nop
mov
fdivr
jbe
fbstp
cli
or
and
inc
daa
test
daa
mov
mov
fs
jmp
mov
push
popa
call
into
(bad)
iret
jo
and
mov
sbb
or
das
test
mov
pop
imul
or
jo
int
cmps
sbb
clc
mov
mov
mov
call
cmc
xchg
sbb
ja
rcr
pop
pop
shl
imul
inc
jmp
push
(bad)
popf
sub
pusha
mov
pop
adc
pop
xlat
adc
mov
sub
sbb
jge
xchg
ror
and
(bad)
leave
out
mov
mov
add
fild
sub
mov
int3
jmp
mov
add
push
mov
fidivr
sbb
jle
pop
inc
and
int
xchg
lea
repnz
cli
imul
inc
in
push
jmp
push
dec
movs
and
movs
imul
sbb
adc
jno
and
pop
push
daa
ins
(bad)
xchg
xchg
xor
pop
inc
retf
cmps
sub
(bad)
stos
ins
into
leave
push
pop
mov
lods
xchg
cli
push
lods
jns
xor
outs
dec
mov
lds
push
push
xor
in
ins
cmps
out
sub
dec
xchg
(bad)
mov
jl
adc
cmps
add
mov
jae
xor
in
arpl
push
sbb
adc
pop
fstp
hlt
(bad)
cmp
stos
ds
ret
and
fsub
xchg
imul
xchg
inc
cs
ins
push
mov
shl
popf
outs
jmp
dec
mov
and
inc
mov
mov
push
cmp
mov
cmps
inc
pop
mov
test
aas
leave
int3
cmp
pop
xor
push
outs
mov
in
prefetch
mov
mov
scas
retf
pop
jg
and
std
pop
jne
xor
push
retf
mov
push
xor
aas
xor
inc
xchg
aam
xchg
lahf
jecxz
cmps
mov
add
dec
jno
ret
mov
les
ja
sub
fcom
shl
shr
and
fldenv
retf
sbb
(bad)
scas
xchg
jmp
xchg
xchg
sub
jo
loope
xchg
call
push
in
aas
repnz
inc
push
adc
fidivr
iret
cmps
out
adc
mov
cmp
and
call
mov
in
aas
idiv
rol
pop
fidivr
pusha
mov
dec
cld
mov
or
mov
ins
and
sti
push
xchg
adc
cmp
or
jg
fistp
push
les
shl
pop
adc
push
in
dec
or
push
add
xor
sub
clc
xchg
ss
je
jp
pop
hlt
inc
dec
imul
sub
fild
pop
les
mov
stos
jno
in
xchg
stos
cmp
ret
pop
(bad)
enter
je
idiv
lock
pop
push
fild
sub
jl
jmp
in
adc
in
mov
jmp
push
js
nop
hlt
pop
movs
scas
xchg
adc
mov
pop
and
pop
cli
xor
sar
jo
stc
add
mov
lods
jg
loop
imul
shl
jecxz
mov
packsswb
mov
(bad)
sbb
cld
xor
clc
in
lods
pop
stos
add
rol
dec
inc
sbb
pop
shl
sti
psllq
adc
mov
(bad)
mov
jle
sbb
in
(bad)
fld1
jle
rcl
inc
lods
in
fs
jle
setae
enter
pop
pop
js
xor
test
mov
jmp
mov
jnp
add
ins
data16
mov
(bad)
lods
dec
cli
imul
pop
cmp
(bad)
sti
repnz
push
jge
pop
xor
fchs
call
xchg
pop
(bad)
mov
or
cmps
(bad)
push
xchg
clc
out
jecxz
fwait
test
js
xor
outs
(bad)
xor
adc
pushw
adc
mov
push
jae
jp
es
cmp
sub
ja
add
xlat
int3
clc
push
aaa
scas
xchg
test
mov
inc
push
push
xchg
xchg
mov
aam
mov
mov
cli
mov
shl
stc
sub
add
and
jmp
pop
xor
cmps
fst
cli
push
xor
sbb
loope
sahf
sti
and
push
adc
icebp
(bad)
pop
xor
inc
pop
loopne
out
push
xchg
xor
adc
jb
and
mov
imul
jnp
sub
ds
pop
and
pop
xchg
xchg
xchg
cmp
aas
jmp
or
mov
leave
add
or
stos
mov
js
addr16
ficomp
dec
int
and
sbb
dec
mov
inc
out
push
aad
mov
cmp
mov
pusha
mov
mov
loope
jle
in
xlat
gs
and
push
dec
cli
out
adc
mov
jo
les
lahf
push
out
ds
push
mov
xchg
mov
mov
scas
pop
sub
add
(bad)
cmc
int
fcmovbe
loop
test
fwait
mov
pop
ret
and
fcomi
mov
js
xor
add
adc
loop
jle
(bad)
sub
xchg
fld
cwde
mov
out
mov
mov
fcom
jbe
cwde
mov
sub
lea
adc
mov
xchg
frndint
jecxz
enter
lods
ret
push
leave
inc
xor
movs
jp
inc
pop
jg
mov
adc
mov
xor
adc
ja
sahf
sbb
push
inc
mov
stos
push
loopne
cmp
jp
or
(bad)
in
push
ret
push
pop
sbb
fistp
jge
add
push
test
(bad)
outs
test
push
pop
fist
pop
pop
pop
fstp
adc
call
jg
pop
das
hlt
or
retf
cmps
in
cmc
test
mov
lds
lea
sbb
sbb
xchg
pop
inc
(bad)
data16
rol
or
rcr
stos
aas
mov
frstpm(287
mov
or
jecxz
(bad)
or
sub
inc
ins
sbb
pop
(bad)
outs
mov
daa
sbb
rcr
icebp
scas
cs
int
movs
sar
sar
sar
jmp
adc
mov
out
jp
iret
add
enter
or
xchg
fst
mov
scas
test
mov
mov
xor
popa
xchg
sbb
lds
mov
rcr
retf
out
push
jg
inc
sub
inc
js
jo
int
pop
inc
sbb
or
pusha
(bad)
fadd
push
cmp
ror
loope
pop
lahf
loopne
jecxz
scas
pop
imul
pop
jno
fs
fs
inc
adc
mov
adc
ss
cs
(bad)
mov
cmp
inc
and
or
mov
bound
ror
and
pop
push
das
mov
sar
mov
lahf
mov
pop
pop
jbe
dec
dec
out
mov
add
les
mov
jns
mov
inc
add
adc
das
push
xchg
dec
ret
iret
pop
call
and
adc
int3
mov
gs
jl
jmp
push
jo
ins
add
sbb
xchg
add
stos
mov
iret
xchg
dec
dec
ins
test
(bad)
(bad)
enter
clc
mov
repnz
out
pop
aam
pop
push
adc
shl
mov
pop
scas
mov
int
jg
pop
and
pop
xchg
cmp
or
xor
sbb
and
adc
mov
mov
(bad)
int3
ja
push
sbb
fs
adc
push
xchg
cli
push
int
hlt
imul
popa
xor
sbb
in
xor
scas
loopne
add
xor
movs
xor
fs
out
inc
cli
jmp
lods
push
xchg
pop
sahf
je
mov
out
jnp
jmp
fnstenv
aam
mov
jmp
cs
xchg
sahf
(bad)
and
xchg
ins
mov
shl
cmp
sub
gs
inc
pop
or
jecxz
je
shl
int
adc
dec
sub
icebp
fwait
and
sbb
gs
pop
xchg
mov
pop
in
(bad)
cli
retf
add
fcomip
imul
scas
jmp
jne
outs
adc
sti
jl
pusha
data16
jmp
ret
lds
rcr
sbb
mov
push
retf
ins
movs
pop
add
(bad)
pop
popa
cmp
shl
data16
stc
xor
push
jg
add
aad
inc
sbb
cld
mov
jmp
xchg
pop
or
fimul
push
fst
cli
pop
shl
push
sub
mov
sbb
test
xchg
enter
pushf
mov
mov
nop
xchg
std
add
mov
xchg
jo
jns
jg
jne
rol
jmp
jo
je
jnp
mov
and
pop
test
mov
mov
jmp
jp
test
stos
push
int
add
outs
retf
mov
xor
adc
xor
inc
pop
cdq
push
mov
jno
ins
push
mov
push
mov
cs
dec
bound
mov
mov
cwde
sub
push
rcr
pop
add
push
or
add
dec
mov
push
(bad)
jp
sbb
jmp
push
(bad)
ja
sub
mov
je
inc
pop
and
dec
xchg
push
xchg
not
out
out
pop
mov
mov
xor
sbb
jno
mov
out
pushf
adc
sbb
ds
ror
jle
clc
mov
std
jp
mov
xor
inc
shr
imul
inc
adc
call
out
jp
ret
jnp
sahf
mov
pushf
mov
inc
xor
hlt
and
and
push
loope
rcr
xor
inc
mov
das
cmp
jmp
dec
hlt
mov
outs
cmp
daa
retf
les
stc
dec
and
data16
and
mov
cmp
xchg
push
cmp
dec
sar
sub
test
ret
pushf
sbb
sub
cmp
or
jns
not
dec
call
or
je
xor
das
cdq
push
test
mov
pop
arpl
imul
lahf
mov
pusha
xchg
pop
push
add
inc
cwde
add
fcom
sub
imul
pop
jmp
jp
add
sahf
nop
outs
out
shl
cmp
lock
psraw
sub
shl
daa
mov
push
cs
pop
jg
cmp
add
dec
cmps
daa
lock
lock
jne
or
dec
mov
sbb
pushf
jmp
(bad)
lods
addr16
fisubr
loop
(bad)
sub
(bad)
cmp
cmps
xlat
clc
in
add
fidivr
dec
cmc
xor
jge
mov
push
outs
test
ins
mov
loope
xor
out
call
aad
int3
fst
push
cmp
cmp
xchg
or
push
jp
cli
jl
imul
or
and
pop
mov
repnz
push
int3
adc
push
dec
add
xchg
push
xor
jo
test
mov
retf
imul
shl
cmp
push
fcom
ss
cmc
std
jle
sbb
cmp
nop
jge
rcl
pop
addr16
in
mov
jne
pop
std
ss
mov
dec
xchg
jno
inc
pop
shl
icebp
push
xor
loop
sbb
jg
push
in
xchg
xor
mov
fmul
add
lds
and
jno
ret
adc
ror
xchg
imul
nop
ret
add
sub
cmp
mov
push
shr
int
pop
adc
jae
or
or
add
sub
jne
adc
lahf
jmp
es
or
xchg
fldenv
push
outs
xchg
jg
aaa
inc
std
jae
push
mov
je
sbb
dec
fisttp
pop
movs
call
stos
pop
mov
xchg
pop
ficom
pop
leave
cmp
rcl
xchg
dec
loopne
fisubr
mov
cmp
call
or
jmp
cmp
mov
sub
dec
repz
stos
sbb
test
cs
sub
push
and
adc
fstp
ss
push
into
arpl
es
inc
xchg
xchg
inc
inc
lahf
mov
movs
jg
lea
retf
and
retf
addr16
xchg
pop
jp
sub
add
cwde
mov
inc
scas
out
call
out
sub
loope
adc
mov
aam
popa
js
ds
iret
add
cmps
lods
and
sbb
mov
(bad)
shr
loop
outs
mov
out
and
and
leave
and
out
retf
(bad)
sar
and
dec
push
jbe
daa
pop
lahf
sbb
in
inc
pop
int
pop
popf
xor
xchg
sahf
sbb
movs
mov
bound
mov
pop
mov
sub
fcomp
pushf
jne
push
inc
sub
push
xchg
pop
or
mov
cmp
les
jbe
inc
push
mov
mov
mov
pop
cmp
mov
int3
jbe
movs
adc
ss
cs
mov
xchg
test
mov
or
aam
pop
xchg
cmps
aas
sti
and
in
stc
push
ds
fnsave
fadd
mov
and
fucomi
(bad)
jmp
mov
or
imul
and
repz
rcr
mov
ret
ins
jns
out
sub
add
int
jno
test
std
xor
dec
(bad)
and
dec
mov
ror
jbe
jl
aaa
lock
dec
inc
dec
add
jnp
mov
out
pushf
push
add
cs
fidiv
retf
push
xchg
arpl
sub
test
out
push
pusha
in
fsubr
xor
ret
addr16
mov
sub
mov
mov
out
jno
cs
push
movs
cwde
mov
sbb
push
je
fidivr
xchg
ds
int
ret
sahf
scas
fld
xor
daa
dec
jle
aad
fnstsw
lea
stos
loop
cmps
inc
mov
daa
rcr
jg
out
cwde
lds
pop
daa
push
scas
push
test
push
xor
mov
sbb
(bad)
xchg
and
into
sub
mov
cmc
in
push
out
mov
push
out
fwait
(bad)
xchg
and
mov
aad
add
jbe
add
(bad)
ins
mov
bound
fmul
nop
lods
pusha
xlat
xchg
cwde
adc
adc
shl
loop
adc
cmp
cmp
sbb
addr16
and
jo
xchg
add
nop
inc
mov
not
push
sub
(bad)
cwde
aam
shl
mov
ds
mov
(bad)
jne
dec
lods
fmul
arpl
inc
inc
push
pop
xchg
retf
mov
xchg
xchg
ins
mov
dec
push
and
loop
xlat
mov
inc
mov
and
mov
pop
cmp
ret
int
ror
cli
mov
movs
add
cmc
rol
push
rcr
rcr
push
lds
jns
pop
and
cmp
popa
sbb
aaa
gs
pushf
out
sub
(bad)
jne
mov
cld
mov
shl
lods
jnp
add
stos
dec
popa
xchg
and
cmc
addr16
mov
xchg
ja
aam
test
repnz
or
hlt
mov
clc
pop
in
pop
jl
and
push
xor
outs
loope
push
test
lea
add
sbb
out
lods
out
ror
leave
jo
rcr
in
pop
dec
not
or
sub
ja
sahf
inc
pop
cmp
push
adc
call
scas
jno
call
ficom
push
xchg
add
pop
(bad)
imul
outs
xor
pop
sahf
aas
inc
inc
clc
fdiv
add
push
mov
jnp
ja
jle
sti
call
dec
push
push
xchg
pusha
sbb
add
sbb
push
mov
mov
xor
sub
push
cmp
ins
inc
xchg
ds
movs
add
aaa
add
in
mov
neg
xor
inc
xor
and
(bad)
ror
mov
mov
aaa
xor
jmp
push
loope
mov
sub
mov
pop
sub
call
cmp
inc
push
scas
imul
outs
jmp
std
les
mul
jge
push
and
or
pop
fs
and
sbb
repz
mov
leave
nop
fdivr
movs
call
sub
jmp
inc
(bad)
call
dec
ja
cvtdq2ps
mov
enter
ins
dec
lahf
pop
push
mov
std
sbb
fmul
in
ja
lods
aas
popa
sub
xchg
test
add
sub
jns
pop
xchg
test
jnp
pop
dec
xor
repz
jae
call
xor
movs
loope
fistp
fbld
mov
cli
xchg
fcmovnb
sub
dec
mov
xor
cmps
push
int3
adc
hlt
enter
mov
mov
and
dec
call
jns
sub
ficom
test
push
lock
scas
aad
mov
out
jne
fs
mov
into
cmps
dec
fst
xor
sbb
das
mov
mov
xchg
xchg
jno
mov
fistp
mov
gs
ror
adc
loopne
cmp
lds
into
jle
scas
jns
das
fwait
mov
push
ss
xchg
ins
repz
xchg
repnz
test
(bad)
loope
sub
push
retf
inc
imul
enter
xchg
test
(bad)
stc
outs
not
(bad)
dec
ss
pusha
js
fldenv
ret
movs
pushf
or
addps
jno
iret
shl
push
xor
outs
stos
and
cmp
jle
xor
jecxz
adc
mov
inc
scas
scas
movs
sbb
cmp
push
mov
mov
mov
mov
xor
dec
scas
enter
outs
mov
dec
dec
pop
ret
pop
jmp
je
loope
inc
vsqrtpd
ficom
hlt
cmp
or
mov
push
outs
ja
test
gs
mov
xlat
(bad)
in
movs
out
popa
into
imul
test
cwde
ror
adc
mov
jg
daa
and
jg
out
or
adc
idiv
or
jg
cs
ror
mov
sub
bswap
shl
addr16
or
adc
popa
lock
adc
mov
add
arpl
mov
hlt
mov
xor
loop
add
bound
dec
xlat
pushf
jmp
(bad)
push
and
sbb
arpl
cs
hlt
jne
jne
cwde
(bad)
ret
cmp
adc
scas
mov
push
dec
imul
fld
test
hlt
mov
mov
cmp
jae
addr16
jmp
pop
scas
out
or
xchg
push
mov
lahf
sbb
or
(bad)
scas
xchg
cwde
cmps
sti
sbb
dec
sbb
mov
cmp
xor
dec
mov
das
jnp
fadd
call
rep
je
sub
push
xchg
ja
pushf
cmp
cmp
mov
or
mov
mov
scas
jae
(bad)
push
leave
inc
mov
dec
mov
dec
imul
lea
or
pop
and
inc
int
in
xor
sti
mov
push
test
adc
pop
mov
test
cmp
shl
xchg
into
loop
adc
and
push
inc
outs
scas
es
ins
popf
nop
inc
mov
pop
xlat
fwait
cmps
push
scas
xor
test
push
push
cmp
mov
cmp
aad
dec
jle
sbb
je
icebp
jae
iret
and
push
sub
pop
cli
loopne
push
dec
sub
and
jecxz
cdq
add
pusha
dec
mov
mov
ret
mov
stos
push
cmp
pop
pusha
push
cdq
jae
pop
jecxz
mov
dec
sub
mov
ret
and
mov
mov
xchg
mov
xchg
jmp
out
inc
in
out
fmul
ja
addr16
push
ficomp
retf
adc
add
xchg
sbb
leave
jle
retf
sbb
sbb
mov
mov
cmp
sbb
push
xchg
xchg
out
cmp
push
cmps
xor
push
and
xor
mov
ret
dec
inc
nop
loop
imul
ret
lahf
xor
js
cmp
sbb
movs
sbb
rcl
pop
enter
dec
sbb
xchg
nop
jmp
retf
dec
rol
xor
repnz
mov
mov
leave
hlt
je
mov
aam
fiadd
test
test
fcomp
push
sub
adc
jge
dec
jmp
fild
pop
sbb
ins
nop
push
aaa
ins
inc
repnz
in
cwde
shl
sub
repz
adc
sbb
push
and
and
inc
std
adc
adc
rcl
or
dec
mov
cld
or
lods
push
lods
test
in
adc
pop
pop
xchg
(bad)
stos
mov
and
pop
xchg
cmps
pop
xchg
sahf
adc
jne
popf
xlat
rcl
loop
and
mov
hlt
dec
jbe
retf
test
mov
into
call
fcmovnu
sub
ins
push
aam
xchg
dec
or
or
push
sbb
push
sbb
stos
loope
shl
ret
fs
push
pop
jge
push
adc
data16
hlt
pop
push
ret
mov
sbb
daa
repz
xchg
imul
(bad)
fcmovb
xor
test
and
test
mov
(bad)
mov
push
push
jns
mov
outs
test
cmp
mov
ret
out
test
sub
xor
pushf
call
pop
sub
and
psubsw
add
rol
mov
inc
xor
fcmovu
dec
test
xchg
sbb
xchg
xchg
mov
clc
cmps
and
jp
aas
and
shl
rcl
or
add
sbb
mov
add
movs
pop
dec
cli
rcr
ss
mov
leave
aaa
inc
push
mov
outs
mov
adc
jp
inc
cmp
add
push
adc
lds
mov
mov
cmp
inc
jg
(bad)
lods
mov
leave
lea
push
or
push
aas
sub
in
aas
mov
sbb
arpl
pop
push
push
pop
or
test
out
xchg
icebp
mov
jae
lods
in
pop
xchg
test
push
mov
leave
sub
or
out
ins
add
in
(bad)
dec
(bad)
aad
mov
and
pushf
add
pop
cmp
jbe
int3
mov
sub
pop
call
jne
xchg
sbb
add
imul
pop
test
jae
cmp
dec
mov
mov
mov
mov
dec
fsub
inc
repnz
out
inc
add
mov
mov
or
or
push
push
add
movs
cli
aas
adc
push
xchg
xlat
cmc
pop
pushf
lea
cmp
(bad)
in
xor
cmp
mov
cmp
(bad)
(bad)
jb
push
or
test
out
fisttp
rol
mov
push
mov
dec
dec
ins
int3
loopne
sar
fisttp
mov
xchg
dec
xchg
inc
(bad)
pop
and
nop
arpl
jns
mov
xchg
jge
retf
add
and
jae
or
jo
xor
mov
xlat
movs
adc
int
mov
cmp
or
shr
test
cwde
cmp
loop
cmp
daa
in
popf
es
jb
jnp
mov
scas
popf
call
mov
lods
scas
jp
mov
aam
outs
ins
cmp
push
int3
jg
mov
adc
popf
adc
pop
jecxz
sub
pop
push
scas
ret
sub
jnp
cmps
dec
cld
ins
pop
mov
jnp
pop
mov
xchg
xlat
adc
in
(bad)
fbstp
iret
cli
inc
push
outs
hlt
test
or
outs
pop
or
pusha
mov
dec
sar
pop
jmp
xchg
imul
mov
sbb
stos
cmp
out
pop
cmc
and
out
mov
add
stos
push
mov
fwait
aad
(bad)
cdq
mov
dec
push
push
int3
add
xor
sbb
jle
sbb
nop
mov
(bad)
data16
sub
mov
pushf
pushf
sbb
iret
je
bound
xor
xor
jno
ja
cmp
call
mov
cmp
test
mov
data16
outs
pop
aam
test
and
imul
in
adc
or
in
push
cmps
rol
xchg
shl
pusha
or
(bad)
xor
jne
add
mov
inc
push
jge
cwde
in
scas
sar
lock
pop
and
inc
in
mov
aas
fstp
pop
in
scas
mov
lock
or
in
mov
inc
xor
das
aas
cld
test
out
in
cmp
pop
adc
add
and
outs
stos
xchg
iret
outs
push
(bad)
iret
mov
mov
int
arpl
(bad)
mov
cdq
bound
aad
std
ds
pop
cli
mov
xchg
ret
lds
pop
movs
jle
inc
mov
or
pop
stc
xchg
sub
and
inc
jmp
pop
push
retf
adc
cmps
repnz
inc
push
push
ins
xchg
mov
inc
ja
mov
jbe
or
fcmove
ins
hlt
or
(bad)
cs
xchg
add
mov
test
sub
pop
cmp
push
and
movs
mov
sub
fisttp
mov
add
sub
sub
adc
les
sub
xlat
push
ficomp
js
mov
mov
cld
imul
sub
mov
pop
adc
sti
test
dec
jmp
inc
mov
ret
sbb
arpl
inc
fucom
pop
push
xchg
in
inc
adc
cld
lds
movs
sbb
shl
test
arpl
push
movs
mov
mov
inc
add
push
in
sub
push
in
leave
xchg
lea
pop
int3
(bad)
arpl
xor
adc
xlat
xor
cmc
and
mov
xchg
mov
sbb
arpl
int
push
xchg
add
enter
mov
jae
jp
inc
adc
jg
sti
inc
mov
or
sbb
iret
sbb
sti
sub
sahf
lahf
pop
sbb
mov
in
movs
hlt
mov
iret
mov
mov
push
push
jbe
retf
int
inc
cmp
cmp
nop
and
test
outs
xor
lods
ficomp
imul
pop
xchg
test
mov
sbb
outs
xchg
pop
js
xlat
ins
outs
mov
pusha
call
fisttp
test
fsub
scas
jnp
stos
mov
mov
enter
inc
iret
mov
pop
pop
mov
mov
mov
pop
cld
lahf
in
and
xchg
call
into
cmp
jmp
and
je
cli
pop
mov
xor
jns
jmp
jno
pop
xor
lock
adc
cmc
outs
stos
arpl
dec
xchg
(bad)
cli
lahf
sbb
cdq
cmc
pop
outs
popa
xor
inc
pop
out
jno
push
sub
cmp
pop
add
sub
mov
jns
stc
xor
mov
sub
sbb
ins
mov
mov
inc
add
nop
xchg
arpl
iret
inc
push
imul
mov
rol
jge
inc
mov
add
push
ss
mov
clc
out
or
jmp
call
imul
cmc
add
mov
pop
mov
push
repz
lahf
(bad)
xchg
mov
lds
jmp
pusha
sahf
fnsave
mov
ja
mov
dec
(bad)
daa
or
xchg
cdq
jae
mov
mov
jne
sub
mov
bound
sbb
jno
push
mov
lea
xor
jb
xchg
les
sub
idiv
mov
sahf
stos
pop
mov
les
push
cdq
cmp
jns
bnd
mov
cmps
stc
cmp
mov
daa
dec
jo
inc
jmp
jecxz
lea
jp
mov
xchg
imul
test
call
test
sbb
pop
push
mov
dec
cmp
lock
inc
test
add
les
retf
pop
fsub
sbb
pop
dec
cmp
fisubr
icebp
xchg
test
push
pusha
add
and
jle
pop
sar
xor
cmp
fld
mov
mul
movs
mov
pop
test
test
(bad)
sti
outs
out
lods
sbb
enter
into
cdq
push
push
xchg
daa
cld
jmp
mov
hlt
scas
lods
int3
jbe
xchg
frstor
fnstcw
movups
(bad)
jl
xor
inc
xchg
push
mov
std
jno
or
and
xchg
stos
cli
ror
xchg
cli
push
dec
outs
iret
cmps
mov
inc
inc
pop
jnp
sub
(bad)
jle
lds
imul
or
mov
mov
mov
movs
push
sub
pop
cmp
push
xor
adc
mov
test
inc
inc
inc
jg
push
fcmovb
jns
xor
gs
inc
lds
push
inc
pop
sbb
xor
rol
jle
jne
movs
(bad)
enter
bound
inc
movs
pusha
lods
push
mov
mov
cdq
ret
popf
mov
lods
push
mov
ja
add
adc
pop
call
dec
mov
push
pusha
cdq
std
dec
jnp
add
bnd
pushf
adc
dec
add
sub
mov
test
dec
xchg
sub
loope
ret
imul
outs
stc
addr16
lea
icebp
call
adc
fild
xor
mov
scas
adc
popa
dec
mov
cmps
or
fs
pop
cli
pusha
mov
fdiv
mov
sub
cmp
fwait
cmps
jg
js
jecxz
push
add
mov
sub
mov
loopne
repnz
mov
xor
lock
idiv
arpl
lds
cwde
xor
sub
push
adc
into
aas
cmps
jmp
nop
mov
inc
movs
mov
inc
sbb
mov
aaa
(bad)
ror
sti
inc
jmp
jmp
mov
mov
bound
hlt
jo
stc
ret
pop
push
inc
jmp
rcr
jecxz
cmps
mov
mov
repz
in
pop
xor
adc
dec
cmps
sub
lods
push
lock
iret
jns
arpl
loop
lea
(bad)
adc
push
cld
pop
shl
popf
xchg
fidivr
mov
stc
dec
add
pop
inc
(bad)
cs
cld
lahf
push
loopne
mov
add
loopne
mov
dec
jle
jb
popa
(bad)
repnz
retf
iret
fisub
push
int
mov
movs
aas
je
ins
dec
imul
jb
adc
add
dec
and
rcr
jp
cmp
jl
fnstcw
push
xor
call
pop
cmp
sub
sbb
es
jg
xchg
inc
jne
or
inc
ins
pop
call
mov
lods
mov
dec
xor
mov
add
out
in
add
rol
mov
iret
cmp
inc
test
mov
movs
ins
sahf
jno
add
cmp
or
bound
or
sub
xchg
pop
out
add
xchg
inc
sti
out
loopne
mov
mov
fiadd
mov
out
loope
adc
inc
call
not
pop
jb
push
(bad)
mov
lahf
cmc
(bad)
mov
xor
xor
adc
into
pusha
jmp
imul
or
aas
repnz
and
jp
les
std
adc
inc
push
(bad)
and
sub
mov
xchg
mov
adc
pop
sbb
cwde
and
repz
sbb
frstor
loope
mov
push
add
inc
pushf
xor
aam
mov
sub
mov
(bad)
sbb
pop
bound
adc
mov
popa
mov
inc
jmp
mov
push
stos
push
push
dec
fcmove
fcomp
arpl
std
in
xchg
sub
cmps
les
popf
sub
loopne
sbb
add
cmp
mov
mov
je
sbb
sbb
repz
xchg
ret
fist
adc
mov
pop
aam
and
stos
and
sbb
jns
cmp
cmp
hlt
(bad)
and
jno
out
mov
(bad)
mov
inc
mov
jae
sbb
jno
and
xchg
add
cmp
mov
push
adc
and
or
sub
pushf
mov
sub
mov
xor
xor
loope
inc
(bad)
in
lahf
not
pop
sub
or
inc
test
pop
dec
leave
sbb
je
ret
imul
mov
hlt
jnp
mov
pop
sub
adc
icebp
mov
cmps
sbb
leave
lods
dec
je
push
dec
sbb
sbb
jno
and
scas
jg
jg
jmp
test
scas
loop
popa
sub
sub
dec
push
and
sbb
cmp
idiv
sub
and
inc
cmp
in
cld
push
dec
iret
adc
mov
js
and
dec
arpl
mov
adc
scas
lea
push
in
mov
jp
shl
div
pop
clc
jle
sub
xor
shl
shl
(bad)
ret
jno
outs
rcr
loopne
fistp
repnz
sub
sbb
imul
call
pop
push
mov
ins
addr16
xchg
sub
inc
mov
lods
cs
test
xor
mov
sub
loopne
adc
dec
call
dec
add
mov
loopne
mov
loop
sub
out
jmp
aad
xchg
or
hlt
sub
sbb
inc
stos
inc
xchg
rol
xlat
cli
repnz
popf
test
dec
test
addr16
push
outs
in
sub
dec
popa
les
rcr
fisttp
pop
cmp
fwait
mov
pop
repnz
test
aaa
jne
and
sub
out
gs
icebp
stos
(bad)
mov
and
syscall
scas
inc
mov
retf
mov
icebp
dec
jge
and
sahf
fidivr
push
mov
repnz
add
xor
lahf
inc
dec
sbb
ret
xor
pop
inc
mov
jmp
sub
sbb
and
mov
cmps
cmp
xchg
xor
in
mov
mov
in
imul
cmp
dec
es
fld
and
call
sub
xor
das
xor
jnp
movlps
mov
push
test
jo
lahf
inc
movs
in
push
les
shl
mov
sub
loopne
addr16
sti
out
in
xor
cld
pop
or
movs
sar
sbb
inc
out
lock
pusha
sbb
rol
inc
push
inc
fld
cli
mov
inc
jp
(bad)
stos
repz
les
inc
aam
ds
aaa
fcmove
dec
lds
and
pop
mov
in
popf
mov
jo
jl
in
(bad)
stos
les
xchg
push
sub
loop
popf
mov
mov
out
jno
out
jge
out
adc
dec
xchg
scas
xlat
dec
ret
(bad)
sbb
mov
cmp
jl
mov
xchg
and
hlt
mov
jge
iret
jno
imul
sti
xor
ror
mov
inc
sbb
or
push
dec
daa
ret
icebp
movs
inc
mov
add
mov
scas
and
pop
mov
inc
sub
mul
mov
and
ins
inc
add
xchg
sub
sar
icebp
or
jo
add
inc
jge
adc
push
int3
push
or
fs
jns
mov
div
les
ss
clc
xlat
test
cdq
sub
test
pusha
inc
hlt
test
test
pop
pop
sbb
fs
mov
sub
add
test
aas
add
adc
pop
jbe
aad
mov
adc
in
pop
cmps
push
clc
das
sbb
jns
or
xchg
mov
mov
scas
arpl
xchg
shl
push
xor
(bad)
fsubr
push
cld
ja
loope
mov
ins
repz
jle
mov
inc
pop
int
dec
mov
xlat
xor
mov
pop
data16
retf
sti
(bad)
es
push
nop
iret
mov
pop
adc
rcr
jno
and
out
xor
scas
lea
rol
jecxz
dec
call
xor
sbb
dec
mul
es
lahf
mov
aaa
shl
dec
sbb
loop
xchg
icebp
or
aas
nop
and
scas
(bad)
int3
xor
mov
ret
popf
xchg
cdq
mov
loop
jecxz
fidiv
adc
sbb
inc
lahf
mov
pop
retf
(bad)
mov
adc
hlt
pop
or
and
push
pop
mov
sar
push
(bad)
fstp
sbb
ds
popa
ret
or
push
mov
jns
mov
mov
pop
lock
inc
jg
add
mov
inc
sbb
mov
adc
movs
adc
xchg
fistp
jmp
rcl
loope
ror
imul
mov
mov
inc
(bad)
sbb
cmp
xchg
shl
call
add
(bad)
popf
pop
add
popa
mov
jl
and
pop
pop
aas
inc
out
aaa
pop
and
mov
jns
mov
inc
add
xchg
lds
dec
repz
test
in
mov
mov
xor
sub
test
cmp
mov
add
push
xlat
xchg
mov
int3
mov
hlt
mov
mov
and
cmp
cmp
dec
inc
or
mov
cli
ins
ret
(bad)
xor
jne
fidiv
sub
cmps
mov
inc
es
xor
and
xor
push
mul
cmps
push
out
movs
cmp
mul
loopne
jo
cmc
fbld
inc
int3
inc
jne
sub
movs
data16
mov
pop
test
movs
call
arpl
mov
addr16
mov
adc
(bad)
sahf
adc
dec
jb
aad
lock
arpl
add
or
test
clc
sbb
and
xor
cmp
mov
or
iret
sub
push
out
into
sahf
ror
jo
lock
in
sti
pop
shl
mov
adc
out
outs
les
xor
out
repz
nop
mov
outs
inc
aad
ja
test
mov
jmp
and
xchg
and
cs
push
pop
jns
mov
(bad)
adc
mov
dec
mov
jmp
push
repz
test
jns
jne
rol
stos
in
xor
rol
rcl
int
mov
mov
cmc
mov
outs
xor
(bad)
ss
jne
or
adc
test
mov
clc
xor
sub
clc
jmp
dec
dec
mov
rcr
in
sbb
inc
pop
repz
call
pop
push
jns
test
sub
cmp
mov
std
rcl
outs
pop
and
lds
addr16
lods
xchg
mov
in
popa
cmps
idiv
ret
jne
out
lahf
pop
ins
dec
stos
stos
jmp
int
or
mov
fisttp
std
xchg
and
jnp
fwait
jbe
out
cmp
ret
sub
pop
dec
add
retf
daa
repnz
enter
stc
push
pop
jne
stos
mov
ret
push
fimul
xor
jge
lahf
lock
movs
push
mov
add
in
inc
in
int3
sub
push
jnp
dec
mov
ret
jmp
leave
jo
cmp
call
adc
test
adc
pcmpgtw
add
and
cmp
int3
jnp
cmp
pop
add
push
and
loop
loopne
sub
and
repnz
jo
adc
out
ret
enter
das
cmp
jo
leave
sbb
mov
cwde
inc
test
cdq
jno
(bad)
mov
xor
mov
cmp
popa
shr
stos
cmp
or
and
and
push
mov
int
sbb
mov
in
pop
mov
fistp
mov
(bad)
xor
stc
pop
and
mov
inc
xor
jmp
push
icebp
ficomp
fild
imul
jp
ss
jp
pop
sub
adc
xchg
sub
test
mov
rcr
jg
and
push
xchg
fisttp
fistp
push
pop
pop
add
call
xchg
js
jmp
xchg
cmp
imul
ins
xchg
int
cwde
pusha
in
enter
jns
inc
ja
and
mov
xchg
sbb
mov
ins
out
enter
and
shr
inc
lds
jle
rcl
lock
mov
cs
add
jb
ja
rcl
mov
ret
jmp
call
es
pop
jnp
push
mov
call
xchg
mov
icebp
fidiv
retf
int3
mov
adc
leave
sbb
and
sub
dec
fmul
mov
scas
jo
lahf
cmp
add
pop
out
add
lods
mov
inc
dec
sbb
mov
or
mov
add
jle
pop
aam
sahf
repnz
xchg
addr16
xchg
mov
fwait
xor
jb
sbb
inc
aas
fdiv
add
addr16
jle
nop
mov
bnd
mov
aas
loopne
dec
push
lock
mov
push
out
and
or
cmp
(bad)
enter
jbe
cmps
mov
fistp
shl
gs
mov
outs
test
jns
dec
inc
push
pop
adc
repz
adc
aam
xlat
loop
and
add
sub
rol
(bad)
(bad)
lock
fwait
and
mov
mov
test
addr16
cmp
cdq
jmp
daa
call
xchg
jns
(bad)
jge
in
cs
leave
test
push
imul
jge
pop
fist
shl
scas
jp
or
mov
push
pop
iret
loopne
outs
mov
inc
lea
jb
mov
mov
cmp
jne
mov
in
jbe
mov
push
mov
nop
shl
push
addr16
mov
sbb
test
add
ja
inc
mov
(bad)
test
cli
mov
imul
cwde
movs
test
cs
fadd
xlat
fwait
push
lods
sub
pop
jb
xchg
xor
inc
mov
and
ret
cs
jbe
loope
mov
in
jmp
lods
lods
call
jle
xchg
cld
and
adc
mov
test
dec
cmp
hlt
mov
add
lock
cmc
retf
xlat
jle
pop
ins
rcr
mov
pop
ficom
test
mov
or
lea
or
push
fcom
mov
int3
lock
pop
inc
hlt
adc
and
aad
adc
mov
mov
push
sub
jno
mov
xchg
dec
stos
sbb
ficom
xor
leave
push
xchg
mov
stos
xor
call
idiv
add
and
cmp
mov
stos
stos
jne
adc
out
outs
push
adc
mov
or
(bad)
mov
mov
push
sbb
add
pop
jl
xchg
jo
and
pop
fsub
xchg
popf
movs
retf
xchg
shr
leave
(bad)
dec
lahf
lock
or
mov
loop
jae
xchg
xchg
ins
adc
or
jle
lods
fcomp
movs
aad
movs
and
call
jge
dec
mov
imul
adc
pushf
jmp
ret
push
ret
mov
arpl
je
sbb
fnsave
mov
mov
cs
stos
enter
pop
in
or
hlt
ror
push
ins
shl
sbb
cmp
int
movs
adc
sbb
gs
xchg
stos
jne
jecxz
sub
or
movs
push
dec
and
fwait
das
loope
sub
and
daa
jl
aaa
loop
movs
or
repnz
or
pop
mov
cld
dec
adc
leave
cmps
enter
in
cwde
xor
cmp
call
sub
jl
loope
rcr
push
repnz
ins
inc
sahf
dec
aam
mov
jmp
xchg
xor
add
lods
fcomp
int
pop
cmc
mov
or
cmp
(bad)
in
push
adc
lods
fldl2e
ficom
icebp
pop
and
(bad)
jnp
(bad)
mov
out
(bad)
aas
mov
je
into
cli
cs
add
sbb
mov
icebp
scas
jecxz
sbb
ds
mov
ja
movs
sub
push
mov
push
arpl
(bad)
out
jnp
jge
gs
or
mov
adc
jns
xchg
mov
mov
jl
add
das
pop
mov
sub
(bad)
mov
imul
xchg
mov
idiv
fadd
pop
loop
in
add
cmps
xchg
add
jl
scas
and
or
sub
ins
sbb
hlt
loop
pop
and
iret
enter
mov
outs
fs
mov
es
fidivr
aas
xchg
push
mov
push
xor
xor
xor
cmp
movs
(bad)
cli
jns
dec
in
and
fnstsw
shl
addr16
and
xor
test
mov
retf
or
mov
push
popa
pop
clc
shr
test
cmps
inc
mov
sbb
push
mov
leave
sub
inc
cmp
aas
popf
pop
cwde
in
into
stos
cmp
push
push
in
cmp
add
xor
cmp
cld
mov
mov
pop
das
sbb
ss
push
out
xlat
push
dec
(bad)
neg
mov
popa
mov
inc
cmp
movs
xchg
ins
push
inc
xchg
dec
loope
push
ds
pop
in
shr
push
(bad)
sbb
pop
jbe
push
pop
mov
enter
push
pop
jl
ss
arpl
add
out
(bad)
out
outs
mov
popf
int3
into
jnp
xchg
mul
enter
call
sub
sub
add
shr
fisttp
test
cmp
ss
adc
int3
imul
add
adc
or
iret
xchg
jae
jecxz
js
pop
test
push
loop
cmps
iret
jp
pop
(bad)
loopne
xor
xor
mov
int
inc
push
mov
mov
movs
mov
dec
in
jae
xchg
mov
daa
js
cmps
dec
sub
call
sbb
(bad)
cld
js
fs
aaa
mov
popf
movs
pop
cwde
bnd
jmp
div
jp
adc
and
mov
shr
lahf
lock
push
sbb
adc
adc
sub
pop
push
retf
dec
adc
sbb
jle
inc
mov
mov
fnsave
scas
div
dec
or
ins
sbb
in
ja
jp
and
add
xor
xor
and
pop
call
jmp
mov
adc
xor
pop
out
mov
pusha
cmp
jp
int
lds
mov
pusha
inc
lods
ret
arpl
sar
in
imul
aam
ja
mov
out
out
jnp
sahf
mov
dec
add
push
sub
mov
(bad)
lock
jbe
mov
cli
mov
(bad)
cs
jmp
jmp
jmp
cmps
cmp
sub
lahf
aam
cmp
cmp
movs
xchg
cmps
mov
or
pop
mov
aaa
mov
mov
shr
fisubr
xor
mov
xchg
inc
dec
xlat
call
cmps
jecxz
dec
repz
adc
movs
pop
loop
pushf
push
mov
or
adc
mov
mov
dec
cmc
inc
mov
hlt
pop
test
ds
jmp
fwait
dec
or
and
ret
sub
call
daa
and
mov
ret
sub
sub
and
mov
and
jnp
fisttp
(bad)
shl
xchg
fimul
dec
stos
adc
out
repz
aad
xchg
ins
retf
jl
mov
push
mov
pusha
int3
out
sbb
or
scas
test
stos
in
lods
xlat
bsf
(bad)
and
sbb
sub
xlat
xor
jns
cdq
mov
sbb
hlt
pushf
adc
mov
adc
mov
or
mov
pop
into
xor
scas
and
push
or
aas
int3
mov
and
sar
iret
(bad)
outs
jmp
xchg
inc
push
sub
scas
pop
add
sub
aad
push
mov
xchg
sub
ret
mov
and
mov
movs
inc
jg
out
test
cwde
movs
fwait
cmp
or
adc
shl
dec
es
shl
cs
ja
jns
dec
ret
gs
sbb
lea
add
add
mov
enter
inc
xor
nop
lods
pop
cld
mov
stc
adc
rcr
mov
and
fcom
movs
test
mov
repz
inc
jecxz
jl
and
add
sub
mov
(bad)
mov
jo
sbb
cmp
lods
js
int3
fsub
mov
retf
movs
mov
fistp
mov
popa
adc
(bad)
xor
ins
xor
lahf
sub
int
iret
mov
mov
mov
out
and
cmp
cmps
lahf
inc
aam
in
push
into
dec
iret
push
out
adc
adc
adc
imul
adc
mov
scas
inc
stos
out
int
jge
mov
(bad)
add
cdq
dec
add
pop
mov
sbb
pop
adc
mov
sub
leave
jg
jns
jmp
dec
xor
add
xchg
lock
xor
daa
bound
xor
mov
mov
push
push
test
or
cmps
and
mov
pop
aaa
std
cmp
adc
sub
or
rol
or
call
jg
sti
ret
mov
push
popa
mov
or
push
xchg
jle
or
out
jnp
xchg
sbb
adc
mov
(bad)
stc
xchg
mov
cmp
lds
lods
sbb
loop
sub
pushf
add
cld
mov
mov
ss
(bad)
mov
pop
mov
add
sbb
pop
popf
fadd
pusha
call
addr16
cmc
fbstp
movs
sub
cmp
es
pushf
inc
and
cmc
(bad)
sbb
ret
and
(bad)
test
cmp
rcl
xchg
clc
scas
and
leave
test
(bad)
sub
xor
adc
dec
jmp
vunpcklps
sub
xchg
ins
fist
call
sub
push
(bad)
movs
adc
jb
jl
jecxz
popf
scas
mov
or
xchg
mov
jge
out
jnp
pop
mov
push
xor
or
mov
bound
cmp
movs
adc
dec
jp
shl
hlt
pop
jmp
adc
scas
push
(bad)
jns
pop
adc
mov
jmp
lods
iret
sbb
inc
or
jmp
mov
pop
sbb
sahf
aas
ret
xchg
stc
fs
sbb
inc
adc
clc
loop
outs
mov
out
or
imul
test
dec
imul
dec
std
sbb
in
jne
cdq
lods
movs
jno
jnp
outs
mov
js
xchg
ror
sub
and
sbb
sub
jo
and
xchg
mov
mov
in
cmps
mov
ror
or
sbb
mov
inc
mov
mov
push
das
cs
cmp
test
xchg
and
push
test
(bad)
clc
les
xchg
mov
pop
(bad)
std
pop
add
mov
int3
daa
lahf
jl
es
mov
push
jo
fisttp
imul
loope
bnd
jp
jle
enter
aam
or
in
xchg
mov
mov
jmp
out
mov
mov
cld
(bad)
mov
sub
stos
gs
jl
mov
cmc
push
pop
dec
sahf
je
(bad)
outs
fstp
rcr
dec
ja
push
popa
jle
aam
idiv
scas
sbb
jle
jp
mov
or
sti
sahf
ror
dec
mov
addr16
jo
pop
rcl
sbb
(bad)
adc
sbb
sbb
mov
and
mov
test
shl
jno
xor
jbe
adc
test
int3
rcl
mov
jle
movs
repz
lea
push
mov
mov
and
mov
adc
adc
ret
inc
mov
inc
jne
mov
jne
std
mov
(bad)
sbb
jecxz
imul
retf
sub
pop
pop
push
mov
push
or
xor
dec
pushf
mul
mov
hlt
and
cmps
cmp
pop
pop
ja
shl
(bad)
jmp
adc
cmp
add
lock
cmps
iret
fcomp
inc
jmp
mov
xlat
push
pop
ror
and
test
lahf
arpl
mov
mov
(bad)
jbe
push
aam
cwde
jge
in
mov
jmp
push
sbb
xor
repz
xchg
add
mov
cld
xchg
inc
xchg
jl
test
pop
jo
cdq
inc
mov
jbe
in
push
in
cmps
mov
mov
in
rol
scas
or
in
ret
and
mov
xchg
scas
adc
scas
rol
mov
ja
data16
pop
jmp
pop
test
nop
iret
dec
into
pop
xor
adc
mov
jecxz
fidiv
(bad)
pop
lds
retf
lahf
in
in
pop
or
mov
push
lods
and
aaa
hlt
sub
and
push
push
jbe
data16
cs
cmc
pop
cmp
test
push
dec
popa
mov
mov
push
cli
pop
jno
loope
pop
cmp
ja
add
xor
ss
jae
push
aad
push
sub
jns
add
cmp
jg
add
std
call
gs
sub
mov
out
cmp
sub
and
dec
ja
(bad)
(bad)
stos
inc
aas
adc
mov
xchg
mov
jg
std
gs
jae
loopne
mov
xor
xor
out
jmp
add
lods
repz
mov
das
cmp
inc
pop
iret
lods
mov
pop
ins
(bad)
hlt
repz
jle
mov
hlt
adc
push
out
mov
and
cmp
call
push
popa
cdq
mov
test
sbb
cs
pop
ret
dec
dec
aaa
dec
xchg
sahf
add
aam
or
cld
push
inc
jbe
jne
fidiv
stos
out
popf
cmp
shr
inc
jl
jmp
mov
jmp
sub
add
inc
cmp
push
xchg
ins
mov
jecxz
xor
pop
mov
cwde
lock
and
hlt
and
sbb
jne
pop
mov
fisttp
xchg
xchg
or
pop
mov
add
xchg
or
push
std
pop
dec
add
(bad)
loope
mul
add
push
int3
xchg
fabs
add
push
retf
jbe
add
es
mov
xchg
les
dec
(bad)
mov
stc
pusha
movhps
movs
es
cmps
push
outs
mov
test
sub
fidiv
aas
or
cdq
sub
test
sub
or
inc
add
pop
mov
into
gs
hlt
dec
push
hlt
xor
out
mov
repz
lods
aas
cmp
jmp
movs
shr
inc
xchg
movs
popa
jl
in
mov
dec
xor
mov
mov
push
xor
pop
shr
jp
pop
test
inc
(bad)
repnz
dec
sub
outs
out
cmp
or
pop
push
stos
pop
les
fiadd
nop
fidiv
or
int3
ficomp
les
in
test
sti
cmp
jmp
sub
loopne
int3
or
and
xchg
cmp
inc
add
dec
sbb
bound
out
sbb
fldenv
inc
cld
dec
mov
aam
mov
cmp
mov
cwde
cmp
mov
arpl
pop
inc
xchg
or
rcl
lock
and
dec
loopne
or
jne
lock
xchg
lods
rep
fistp
xor
cmp
and
push
inc
and
out
dec
dec
(bad)
shl
sbb
cmps
sub
cmc
dec
out
mov
push
push
pop
retf
xchg
mov
retf
xor
inc
inc
push
sub
jns
pop
pop
scas
clc
cmp
es
int3
and
test
mov
pusha
push
ja
pop
aas
gs
pop
cdq
shl
dec
push
dec
lods
popa
shl
dec
inc
mov
pop
clc
jb
pop
jns
gs
mov
mov
sbb
(bad)
jmp
add
lahf
mov
and
shl
add
call
add
or
rcr
mov
sbb
or
push
push
out
xchg
or
or
bound
and
mov
mov
pop
adc
cmp
cmp
xchg
lea
jne
cli
addr16
repnz
inc
inc
fld
mov
imul
sbb
push
or
inc
jecxz
imul
mov
pop
dec
sahf
fs
clc
adc
mul
xor
adc
pop
mov
jle
dec
dec
leave
sbb
ret
lods
mov
pop
push
or
and
das
fcomp
xlat
test
adc
out
ins
sbb
movs
jle
jge
or
int3
fiadd
mov
mov
xchg
call
or
pop
(bad)
shl
call
jmp
mov
repnz
xor
inc
mov
pop
pushf
rcl
mov
add
jae
aaa
in
adc
xchg
pop
stc
scas
cld
sub
mov
icebp
out
stc
adc
aam
jae
xchg
pop
js
lds
(bad)
mov
fdiv
imul
mov
shl
in
test
int
xor
add
test
scas
mov
js
xor
ds
movs
inc
jge
fs
mov
sbb
mov
and
jb
inc
jb
adc
repz
cmp
add
inc
lahf
scas
scas
xchg
shl
mov
jg
loopne
pop
pop
gs
mov
out
mov
call
inc
iret
lods
stos
dec
pop
movs
push
outs
lds
enter
inc
ins
es
lods
(bad)
mov
or
or
sub
xchg
inc
mov
cmc
and
ins
icebp
sub
or
loope
adc
jecxz
mov
clc
adc
sub
nop
push
fdiv
out
cmps
cmps
lahf
pop
bound
fs
movs
(bad)
xlat
adc
jl
jb
jae
loopne
dec
(bad)
pushf
and
leave
dec
lea
adc
dec
cmps
sbb
cmp
pop
scas
or
dec
fild
clc
mov
xchg
cmovle
inc
ins
jle
inc
fdiv
jb
pop
xlat
popf
cli
mov
mov
fnsave
mov
daa
imul
in
out
add
mov
add
cs
retf
dec
adc
rcl
data16
call
cmc
lock
jp
in
fsubr
adc
xor
xor
mov
in
sub
pop
imul
mov
iret
mov
xlat
xchg
(bad)
repnz
sar
mov
mov
lea
das
dec
call
rol
ret
(bad)
(bad)
int
imul
jno
xchg
push
scas
sar
sbb
sbb
ins
adc
lock
ja
and
mov
and
sub
popf
xchg
push
addr16
in
rcl
mov
(bad)
mov
xchg
rcl
and
scas
mov
or
push
mov
dec
or
add
and
rol
aas
cmc
add
cli
cmp
stos
int3
cmp
mov
js
sahf
(bad)
sbb
loopne
fwait
in
adc
push
into
dec
add
(bad)
out
cmc
push
je
and
adc
add
ins
ret
lds
outs
jmp
fcomp
cmp
mov
push
ficom
test
sbb
inc
stos
movs
or
xchg
shl
(bad)
push
imul
in
or
xor
add
mov
dec
mov
mov
push
mov
mov
pop
adc
clc
mov
inc
lods
outs
add
ror
pop
mov
pop
fucomip
jb
pop
lods
hlt
call
in
in
sti
loope
pop
retf
out
rol
cmp
fs
xor
jl
sti
lock
cmps
jo
out
cs
add
mov
out
cmps
outs
cmps
retf
push
lock
push
loopne
aas
jnp
push
jg
add
adc
bound
xor
adc
popf
sahf
push
mov
es
retf
mov
sbb
jno
add
push
ja
pop
mov
adc
dec
push
jno
mov
sbb
mov
mov
push
mov
test
push
push
and
adc
(bad)
das
and
pop
fdivr
movs
repnz
cli
stos
repz
xor
mov
icebp
or
retf
mov
or
aas
pop
cdq
push
les
fistp
pop
scas
test
pop
add
dec
je
push
dec
mov
call
ins
out
and
push
es
pop
js
pushf
dec
cmp
mov
psraw
call
arpl
jmp
jns
test
scas
cmps
and
fcom
mov
dec
xchg
push
repnz
lahf
inc
and
push
lahf
ins
xchg
and
push
mov
addr16
in
outs
and
lock
jg
add
movs
xor
jnp
out
pop
std
es
or
shl
pop
jp
mov
call
push
mov
shl
pop
popf
dec
adc
cs
pop
div
mov
les
cwde
pop
outs
int
cmp
mov
jmp
adc
and
push
jge
add
adc
cmp
retf
adc
mov
les
pop
rcr
retf
ficom
jg
mov
shl
add
push
cld
sub
xchg
mov
add
test
jmp
in
push
jl
push
push
mov
leave
test
mov
and
out
and
adc
sub
mov
fst
in
mov
lds
sti
popa
lea
and
or
(bad)
adc
shr
int3
cld
jbe
sbb
adc
test
mov
push
dec
mov
in
mov
mov
xchg
shr
and
ffree
je
jge
add
(bad)
mov
retf
push
cdq
xchg
push
mov
mov
rcr
sub
mov
out
out
xlat
cmp
mov
mov
les
sbb
jno
xor
outs
iret
mov
addr16
(bad)
mov
stos
xor
dec
pop
adc
inc
mov
inc
jp
jno
or
xchg
in
lock
sbb
mov
cmp
imul
shr
test
mov
sub
stc
bound
xlat
add
call
mov
jp
int3
jecxz
adc
sbb
iret
ficom
inc
iret
daa
jmp
fld
cmps
push
push
in
popf
push
lods
(bad)
mov
cmp
pop
push
std
gs
ret
ret
mov
loop
retf
jo
adc
call
stc
jbe
mov
or
call
inc
cmp
adc
cld
(bad)
test
xor
ss
inc
add
sbb
inc
iret
cmp
push
jp
or
xchg
data16
shl
push
loopne
xchg
fiadd
(bad)
jl
and
ins
das
aad
jo
xchg
out
stos
adc
outs
stc
inc
rcl
ins
ret
jns
jae
in
mov
out
sub
stos
sub
sbb
loop
inc
push
xchg
leave
les
jbe
mov
cmps
xor
psubusb
pop
mov
dec
out
add
xchg
push
sbb
mov
aad
stos
sub
push
call
sub
test
leave
mov
sub
mov
lds
sub
inc
mov
jns
mov
inc
lods
push
out
cs
leave
xlat
sbb
call
lea
and
adc
push
mov
out
into
or
xor
pop
jle
lahf
into
in
repnz
or
enter
xor
stos
sahf
and
mov
add
push
mov
push
pop
xchg
push
and
or
adc
sbb
fwait
(bad)
sti
mov
xchg
sbb
jbe
lods
fwait
into
adc
(bad)
addr16
ret
(bad)
pop
sbb
sub
icebp
mov
inc
test
pusha
out
inc
xchg
inc
stc
add
leave
(bad)
daa
out
sbb
lods
cli
in
xlat
mov
icebp
dec
xor
shl
pop
add
push
adc
aas
hlt
popa
aaa
loope
mov
icebp
inc
sub
pusha
mov
out
and
push
add
push
bound
pop
pop
adc
mov
push
cmps
and
clc
(bad)
pop
cli
dec
jns
mov
sbb
cmp
push
sti
jmp
fnstcw
push
cmp
popa
in
pushf
push
jno
cmp
pop
ins
add
imul
and
jbe
push
jle
call
push
out
jne
sti
sbb
dec
mov
in
jmp
ins
fdivrp
add
xchg
pop
ret
push
mov
push
jl
(bad)
dec
imul
std
dec
icebp
sbb
xor
mov
leave
not
jbe
repnz
jno
mov
stos
ins
dec
popa
sbb
cmps
int3
out
mov
mov
stos
pushf
add
adc
inc
cdq
shr
loopne
les
and
sbb
shl
or
ret
out
retf
ss
je
cmp
inc
push
cmp
ret
xchg
mul
mov
pop
inc
or
out
pusha
mov
adc
outs
stos
lahf
enter
outs
mov
arpl
dec
jbe
out
outs
xchg
jmp
add
out
ss
sbb
repz
fisub
lahf
xor
sbb
dec
and
sbb
or
fimul
mov
iret
cld
add
mov
push
je
cmp
neg
rcl
xchg
sbb
and
xor
(bad)
fnstenv
add
in
retf
cmps
ret
sub
xlat
mov
mov
sub
adc
jmp
xor
jnp
mov
scas
int
cmps
shr
repnz
jle
stos
out
mov
idiv
adc
call
repnz
imul
aaa
movs
xchg
push
stos
jg
inc
daa
sbb
hlt
popa
mov
jecxz
imul
sbb
add
jns
shr
dec
dec
jmp
loope
pop
lods
in
stc
imul
arpl
dec
fisubr
pop
in
or
ret
es
test
aad
mov
cmp
mov
push
out
sub
(bad)
mov
rcr
sbb
scas
bound
gs
scas
add
and
pop
inc
add
test
iret
or
bound
push
or
mov
sbb
dec
dec
ret
fstp
and
mov
(bad)
popa
mov
ret
pop
inc
retf
jmp
sbb
push
retf
adc
cmp
sub
gs
push
mov
ret
mov
cmp
and
inc
aas
xor
repnz
int
mov
popf
sub
mov
out
pop
push
mov
mov
test
mov
fdivr
add
mov
(bad)
dec
rcr
loop
mov
addr16
jae
pushf
hlt
(bad)
mov
loopne
ins
int
clc
xor
jno
or
mov
cmp
rol
adc
out
inc
fisubr
imul
hlt
daa
inc
inc
adc
push
ss
and
sub
out
cli
lock
xchg
mov
mov
stos
cli
push
rol
mov
push
adc
jns
adc
jmp
and
jns
(bad)
in
and
in
movs
pop
mov
adc
and
push
das
jnp
and
cdq
jg
aad
movs
pop
mov
nop
and
dec
push
outs
shr
es
ja
mov
out
mov
xchg
mov
test
loopne
lahf
(bad)
mov
stos
push
stos
fcomi
and
push
(bad)
shl
call
pusha
xor
mov
clc
int3
(bad)
es
mov
mov
outs
rol
fcom
mov
push
jns
sbb
sbb
jmp
rol
dec
jae
mov
adc
(bad)
leave
cmp
pop
push
jmp
ss
mov
push
dec
mov
mov
js
mov
movs
push
jbe
scas
push
mov
xor
xchg
out
adc
xchg
push
cwde
(bad)
push
pop
fsub
std
bound
push
(bad)
(bad)
xor
or
push
adc
pop
inc
xor
pop
je
lea
pop
in
retf
test
repnz
call
and
movs
das
sbb
pop
ror
ret
sub
sub
jg
(bad)
mov
loope
mov
adc
in
xchg
jnp
imul
push
xor
and
cmp
add
jmp
pop
sahf
cmp
jo
pop
dec
cwde
push
icebp
test
mov
cld
pop
into
out
add
(bad)
imul
xchg
xchg
stos
add
add
sbb
dec
cmp
sub
lea
jmp
cmps
xor
xor
shr
sub
out
xchg
ret
icebp
and
pop
rol
jmp
xchg
push
jecxz
xlat
fisttp
popf
in
push
in
jmp
pop
dec
test
outs
stos
out
lea
pmaddwd
pushf
xchg
sub
test
sub
and
fisttp
push
sub
ret
push
or
adc
movs
or
jnp
ja
fisttp
repnz
pop
stos
rcl
ficomp
ret
jge
adc
push
es
cmp
or
dec
stc
xchg
xlat
cmp
lock
sbb
mov
imul
sar
int
cmc
popa
test
inc
pop
pop
cs
sahf
push
push
mov
xchg
test
push
(bad)
jl
add
outs
data16
dec
jbe
std
(bad)
and
imul
and
addr16
cs
out
loopne
xchg
repz
and
add
outs
rcl
and
xlat
test
push
add
in
sub
scas
ret
sbb
pop
arpl
scas
popa
and
stc
in
push
or
lea
jbe
pop
clc
popf
(bad)
xchg
jmp
shl
clc
sbb
aad
imul
popf
mul
inc
retf
loope
jnp
data16
sahf
mov
sbb
mov
xchg
iret
std
sysret
les
xor
push
cmps
stos
mov
fs
xchg
call
js
mov
dec
ss
or
cmp
xchg
fld
mov
inc
sbb
jb
bound
outs
jecxz
fwait
sbb
ret
dec
or
pop
add
jg
rcl
mov
fcmovnb
mov
mov
fmul
pushf
aaa
push
cld
retf
cmp
adc
mov
xor
(bad)
ret
out
jge
call
outs
and
adc
and
fwait
cmp
adc
push
test
pushf
inc
pushf
mov
mov
data16
jmp
push
inc
cmps
ja
es
xchg
inc
bound
sub
fcomp
ds
loope
loop
jns
mov
jle
add
xchg
jle
sub
loope
mov
cmp
inc
xchg
xor
xlat
sbb
(bad)
mov
adc
dec
jbe
leave
imul
das
leave
and
pop
fnstenv
push
pop
mov
xor
push
sub
xchg
aaa
pushf
iret
push
fisubr
outs
cdq
sbb
rcl
or
pop
aas
repz
retf
mov
adc
xchg
stos
xchg
movs
clc
rol
pop
adc
cmps
retf
or
adc
mov
push
sbb
ret
and
sbb
cmp
sub
push
(bad)
fisttp
or
inc
movs
adc
xchg
call
jl
loop
test
inc
rol
fld
add
add
rol
inc
fist
dec
pop
xchg
gs
loopne
(bad)
sub
mov
jne
icebp
jl
mov
inc
jo
and
addr16
cs
jle
inc
test
rcr
popa
sbb
xor
add
jecxz
popf
dec
je
fwait
dec
cli
adc
adc
mov
hlt
adc
dec
dec
adc
mov
sbb
sub
jmp
adc
mov
jnp
inc
loopne
hlt
fcomp
jg
mov
leave
xchg
pushf
add
mov
jl
sbb
retf
shr
jns
mov
and
stos
movs
push
sbb
jbe
xchg
movs
inc
shl
inc
ret
push
or
jl
lods
cwde
aas
repz
imul
mov
mov
es
sub
cmp
pop
add
push
or
es
retf
and
icebp
cmp
test
add
loop
cmp
movs
mov
dec
cmc
cdq
inc
jbe
mov
call
dec
loope
(bad)
lods
inc
(bad)
xchg
in
mov
not
sub
je
pop
lods
mov
jmp
popa
add
add
sub
pop
jmp
icebp
ret
ror
lea
sbb
lock
les
xchg
xchg
fst
fs
int3
cmc
xchg
aad
mov
push
cdq
sub
out
gs
mov
and
add
jae
fist
cmp
jno
mov
or
dec
outs
cdq
push
and
addr16
enter
sbb
cmps
mov
inc
sub
les
push
out
dec
cmp
neg
cmc
push
sub
outs
repz
imul
pop
div
fistp
data16
push
add
(bad)
sub
mov
imul
out
adc
fidiv
xor
dec
(bad)
mov
xor
mov
into
push
sub
mov
and
xchg
pop
push
and
fadd
or
inc
mov
cmp
mov
xchg
int3
push
das
bound
inc
pushf
push
push
sbb
push
cmp
xchg
addr16
scas
shl
dec
mov
dec
std
jno
addr16
in
cmc
xor
rol
sub
sub
popa
cmp
cmp
(bad)
pop
add
pop
or
xor
std
call
scas
out
jno
jnp
ins
jle
push
xchg
clc
arpl
aaa
jge
push
xor
mov
or
sti
mov
mov
jg
arpl
lods
xor
mov
pop
lock
xchg
popa
gs
add
loope
div
mov
test
push
mov
pop
sar
jge
shl
pop
inc
jge
adc
(bad)
(bad)
xor
imul
mov
or
lea
inc
sbb
(bad)
bnd
into
scas
fwait
movs
xchg
repnz
mov
push
mov
adc
push
jne
mov
into
pop
hlt
gs
sti
jne
and
repnz
les
arpl
into
inc
out
es
jno
jmp
jmp
arpl
jmp
push
mov
popf
fcomp
loop
add
fcom
pop
pop
pop
enter
out
out
enter
cmp
(bad)
imul
lods
rcl
sti
(bad)
mov
pop
mov
(bad)
into
not
ins
ins
in
ins
fist
xchg
dec
gs
adc
(bad)
or
mov
aam
rcl
scas
lea
int
sti
inc
(bad)
mov
call
inc
mov
js
stos
or
test
pop
mov
addr16
sbb
cdq
fstp
adc
or
ds
test
push
rcr
retf
xor
push
mov
jne
scas
adc
adc
mov
add
and
pop
add
xchg
pop
mov
call
mov
fcmovb
out
add
inc
push
mov
inc
cmp
addr16
adc
jo
fdiv
lock
retf
pop
fwait
popa
inc
jge
jle
test
in
cmp
bound
iret
prefetch
mov
int3
sbb
push
cmps
fiadd
addr16
(bad)
and
in
xor
and
popa
cli
push
je
add
sbb
arpl
ret
outs
(bad)
pop
xlat
xlat
int
xchg
mov
mov
lock
xor
mov
fisub
xchg
test
add
push
repnz
xor
fsub
mov
sbb
in
push
cmp
outs
mov
or
jge
mov
sub
jo
adc
dec
addr16
(bad)
pop
mov
push
inc
rcr
shr
sub
cmp
sbb
fcmovnu
mov
out
(bad)
fidivr
fdivr
lods
dec
mov
retf
in
rcr
xor
mov
add
clc
lods
xlat
jbe
cmp
push
aas
pop
mov
and
dec
inc
pushf
push
push
sbb
or
loope
add
jl
in
mov
rol
in
adc
scas
mov
shr
iret
xchg
sbb
shr
dec
pop
outs
or
ss
pop
ss
mov
sbb
es
out
rcl
add
retf
ss
imul
sti
gs
jnp
mov
fcmovb
shl
dec
inc
xor
scas
or
fld
cli
mov
addr16
cmp
adc
add
adc
rcr
cld
or
jns
mov
scas
xor
jns
hlt
jbe
nop
into
call
mov
pop
(bad)
enter
movs
rcr
and
mov
inc
mov
cmp
stos
mov
fs
retf
push
stos
(bad)
pop
dec
cmps
js
jp
mov
shl
mov
fcomp
sti
mov
pop
ss
stos
push
mov
call
jb
sbb
ret
adc
jge
dec
adc
pop
fs
rcl
push
lock
cmps
enter
mov
mov
inc
inc
enter
scas
inc
loope
dec
call
inc
dec
cdq
cs
xabort
adc
and
xchg
sbb
dec
xor
lock
repnz
imul
dec
hlt
dec
or
push
mov
out
cli
popf
scas
and
mov
call
pop
push
adc
add
add
hlt
(bad)
mov
inc
mov
mov
clc
aam
dec
dec
pusha
and
lock
jmp
jle
sbb
inc
xchg
jg
fisttp
loop
and
pshufw
push
sub
lods
aam
scas
xor
div
int3
ins
lahf
sbb
sbb
sub
sbb
lods
aas
out
loope
cdq
jp
shl
jmp
sub
fistp
daa
inc
rcl
mov
(bad)
movs
pop
pop
rcl
mov
mov
and
mov
aam
(bad)
into
sub
cli
call
into
inc
aas
aas
cmc
sar
sub
adc
pop
and
adc
adc
jnp
dec
lods
xor
mov
(bad)
inc
scas
into
ffree
mov
out
adc
shr
aam
and
dec
rcl
or
xor
mov
ds
pushf
inc
push
(bad)
cmp
xchg
mov
inc
pop
pop
xor
das
aam
das
sbb
and
mov
mov
add
mov
push
outs
retf
dec
xchg
pop
scas
or
mov
popa
repz
icebp
mov
aas
push
fsubr
mov
(bad)
mov
lea
dec
rol
mov
cdq
repz
int3
(bad)
jg
xchg
cwde
xchg
add
ror
pop
dec
mov
sub
in
mov
shr
jge
xchg
dec
(bad)
test
mov
push
retf
cmp
mov
js
clc
lods
addr16
shr
inc
cmp
inc
popf
aad
xor
(bad)
stos
(bad)
js
push
out
clc
cwde
leave
out
push
add
xchg
xchg
jno
xor
(bad)
inc
adc
(bad)
fadd
lds
inc
rcr
dec
sbb
jecxz
push
fwait
ins
fsubp
xor
in
shl
jnp
sub
inc
dec
shl
inc
mov
push
inc
in
sub
nop
and
push
sub
cmp
test
inc
mov
nop
sbb
jp
rol
xor
(bad)
dec
arpl
fwait
rdmsr
xchg
into
xchg
or
ins
jp
(bad)
ins
or
sbb
sub
inc
retf
jecxz
xchg
mov
mov
sub
adc
sub
cmp
or
loope
test
popa
pop
xchg
and
cmps
(bad)
cmps
mov
retf
int
xor
loope
mov
cmc
aam
jge
or
jmp
cmp
or
dec
in
or
or
je
icebp
stos
dec
and
mov
rol
mov
push
sbb
fimul
xchg
sti
mov
and
ficom
shr
retf
sub
jle
(bad)
dec
daa
sahf
(bad)
test
icebp
test
or
mov
add
fdiv
mov
lds
(bad)
dec
push
jo
mov
push
add
in
xor
mov
out
push
rcr
inc
ret
push
sub
pop
stos
int
sub
fdiv
inc
rcr
xchg
jecxz
ret
push
dec
fsubr
push
inc
daa
cmp
pusha
push
mov
jl
retf
mov
icebp
inc
sub
inc
cmps
and
inc
cmp
push
mov
push
push
xchg
inc
push
sbb
test
xchg
sbb
push
int
cvtdq2ps
scas
push
inc
into
in
daa
jns
jbe
shl
int
scas
xchg
fnstenv
xor
outs
imul
fdiv
jl
xor
push
add
mov
inc
in
jmp
jb
jbe
cmp
sub
mov
or
push
std
mov
punpckhwd
cdq
imul
test
repnz
outs
and
sub
outs
inc
repnz
sub
cs
test
xchg
iret
cmp
lds
inc
fcmovne
mov
shl
cmp
jmp
mov
out
add
repz
sub
mov
add
xor
sub
or
fcomi
clc
fisttp
adc
xchg
ret
hlt
ins
inc
retf
dec
std
xacquire
inc
mov
jge
mov
aam
(bad)
jo
ret
movs
and
sub
inc
mov
test
inc
xchg
xchg
push
iret
ja
mov
dec
arpl
fdivr
aad
add
dec
in
add
arpl
mov
cli
scas
mov
add
in
in
hlt
mov
xor
aaa
jp
adc
fbstp
(bad)
(bad)
inc
cmp
ins
addr16
jg
popf
sbb
mov
and
xchg
adc
rcr
(bad)
call
pop
repnz
inc
pusha
push
leave
and
in
xchg
data16
lods
test
inc
mov
mov
jecxz
xlat
in
out
and
inc
clc
int
xchg
inc
outs
lahf
mov
sbb
fs
inc
xchg
addr16
push
cmp
mov
push
test
add
es
out
pop
pusha
hlt
xor
arpl
enter
or
in
mov
or
sub
mov
mov
out
mov
xor
aad
retf
jne
cdq
cmp
leave
and
jmp
cmps
repz
xchg
outs
add
repnz
dec
xor
out
mov
jp
sbb
dec
sbb
cmps
imul
sbb
out
push
xor
ficomp
sub
dec
cmp
mov
mov
pop
mov
sub
mov
imul
jge
ins
daa
leave
mov
call
leave
es
ret
mov
push
dec
jl
xchg
or
add
sbb
xchg
gs
sahf
mov
adc
sbb
pop
add
pop
sti
addr16
add
sub
cmps
push
std
test
out
dec
iret
xchg
das
xchg
cli
ror
lea
call
push
mov
imul
repnz
xlat
xor
movs
xor
push
loope
das
pop
fdivr
repnz
cdq
mov
sub
inc
pushf
adc
mov
inc
xchg
mov
mov
push
sbb
(bad)
mov
mov
pop
dec
(bad)
mov
int
xchg
push
clc
scas
aaa
sbb
jg
retf
mov
xlat
mov
mov
push
mov
xchg
jge
xchg
or
lahf
cmp
push
adc
pop
jle
dec
mov
pop
aad
cmps
dec
mov
(bad)
rol
ficom
call
(bad)
lahf
cmps
or
(bad)
sub
jmp
addr16
cs
mov
xchg
stc
adc
enter
lods
out
pop
sbb
ss
jnp
push
add
dec
mov
ja
inc
dec
shr
call
cld
mov
call
dec
ins
iret
dec
sbb
inc
push
inc
mov
pop
(bad)
cld
ins
inc
das
cli
iret
popf
dec
mov
js
xchg
ja
add
test
cmps
sub
lods
inc
fisubr
cdq
cmp
jns
in
fidiv
pop
add
add
push
repz
stos
icebp
retf
pop
retf
xor
test
addr16
nop
sub
scas
gs
imul
sar
ret
sar
sbb
mov
es
aad
add
jp
scas
leave
clc
sub
jns
or
mov
mov
push
cs
imul
dec
lock
jmp
pop
jmp
pop
ficomp
mov
pop
mov
shl
adc
in
cs
pop
mov
adc
outs
int
sbb
jb
jl
cmp
add
pushf
adc
sub
js
jmp
and
ja
aam
mov
dec
aaa
mov
jno
lods
shl
mov
inc
push
mov
fisub
and
loope
das
loop
xor
call
jns
cmp
mov
mov
mov
add
add
(bad)
sbb
pop
adc
push
dec
ficomp
fnstenv
cmp
in
xchg
popf
daa
loope
sub
fnstenv
or
or
ds
outs
ins
mov
mov
cmp
or
pop
sbb
mov
fbld
push
in
call
mov
fldcw
push
cmp
aad
inc
sub
push
mov
int3
xor
push
mov
retf
push
arpl
cmp
cdq
ins
fisub
pop
scas
enter
test
cmps
sahf
jo
(bad)
cli
shl
sbb
adc
lock
ror
shr
ja
test
push
fs
or
test
addr16
inc
jne
jbe
inc
outs
jns
push
push
add
cwde
stos
pop
mov
push
push
fild
movs
inc
(bad)
cs
sbb
jge
pop
in
mov
into
(bad)
inc
cmp
movs
mov
stc
lahf
mov
fwait
pop
int
lods
test
and
xor
pop
fadd
dec
xchg
pop
movs
(bad)
fisttp
mov
mov
popf
pop
sub
sahf
mov
jno
xchg
push
sti
fadd
aaa
or
and
sub
aas
sbb
pushf
mov
shr
stos
sbb
enter
mov
popa
jmp
jo
inc
xchg
mov
lock
dec
mov
mov
out
inc
push
(bad)
mov
repnz
cmps
pop
ja
jmp
aas
cmps
push
pop
or
inc
popa
daa
fisubr
pusha
pop
xchg
fcomp
fsub
xor
std
outs
data16
mov
mov
das
dec
jae
sub
or
ret
(bad)
(bad)
out
sti
sahf
call
cmp
sub
and
cld
dec
imul
lock
adc
pop
movs
pusha
mov
movs
jmp
add
aaa
jb
ret
repz
xor
push
push
in
outs
pop
test
and
jmp
mov
into
push
fwait
or
(bad)
mov
xchg
mov
rcr
mov
repnz
jmp
in
mov
add
sbb
fbstp
add
jb
cwde
in
mov
xchg
jo
(bad)
pop
jne
sar
out
movs
cmp
loope
daa
xchg
ins
(bad)
dec
es
pop
dec
push
add
jmp
rcl
xor
(bad)
pop
fidiv
mov
fcmove
push
dec
fdiv
jo
mov
dec
mov
xchg
call
into
mov
jge
inc
xchg
out
push
pop
push
push
popf
xor
fwait
dec
jmp
cmc
cmp
push
pop
shr
mov
loope
loope
arpl
pop
mov
es
sbb
aaa
mov
adc
push
(bad)
fcomip
xor
mov
ja
retf
mov
es
clc
into
pop
dec
fmul
stos
aad
and
jmp
cld
cmps
and
mov
inc
int3
(bad)
stos
push
jg
xor
cmp
mov
xchg
(bad)
mov
jo
push
cmp
das
inc
cli
mov
xor
jnp
cld
popa
cmp
xchg
dec
test
and
icebp
loopne
mov
or
dec
jnp
adc
lods
inc
xchg
mov
clc
ja
xlat
dec
sbb
jo
fsub
aad
test
mov
jne
popf
out
jecxz
sbb
xor
sub
dec
mov
clc
or
mov
nop
leave
xor
inc
and
imul
jb
sbb
pop
outs
push
lds
cli
lods
mov
sub
xchg
mov
sbb
dec
adc
jl
inc
adc
cmp
cdq
enter
in
mov
leave
jae
and
adc
rol
dec
jns
sub
jmp
out
sub
cmp
mov
in
(bad)
scas
dec
iret
repnz
xor
das
xor
cmp
add
adc
adc
xchg
je
xchg
pop
(bad)
fucomi
mov
dec
cmp
mov
repz
adc
icebp
aad
mov
xchg
imul
loop
push
mov
push
mov
sbb
sar
sbb
outs
and
add
in
mov
cs
icebp
iret
cmp
popf
movs
push
movs
(bad)
les
fbld
or
shr
out
icebp
in
shl
test
push
sbb
fs
scas
inc
push
or
pop
pusha
inc
jo
add
sub
std
push
or
mov
mov
xchg
ss
aaa
mov
add
xchg
push
out
inc
setbe
ror
sti
fsubr
fcomp
sbb
js
int3
mov
aaa
out
in
mov
push
popf
stc
mov
cmp
mov
shl
ins
outs
scas
push
dec
add
(bad)
ds
pop
mov
and
into
jp
add
jmp
adc
aaa
mov
(bad)
outs
mov
iret
out
bnd
fist
call
push
cwde
scas
bound
sub
inc
inc
dec
push
xchg
lods
push
lock
sub
retf
and
pop
fdiv
nop
push
cs
and
xchg
daa
movs
and
imul
out
call
frstor
ins
les
rcr
(bad)
into
cli
cmps
cmp
push
out
ss
xor
push
(bad)
adc
ficom
fiadd
in
mov
adc
not
inc
xor
jmp
mov
pop
(bad)
pop
outs
aam
ret
loope
out
or
mov
loop
(bad)
mov
movs
(bad)
dec
xchg
cmp
sbb
aaa
shl
mov
mov
xlat
sbb
das
inc
repnz
mov
test
mov
mov
std
jmp
ret
pusha
popa
jae
int3
dec
mov
shl
or
xor
pop
cmp
stc
jns
mov
sbb
dec
imul
repnz
and
fadd
aam
les
mov
fwait
jae
mov
fcmove
outs
mul
ret
xor
push
mov
stos
mov
mov
call
adc
dec
jo
scas
sar
bound
mov
jecxz
in
sbb
pop
data16
cmp
inc
mov
cld
or
scas
(bad)
xor
mov
pop
idiv
test
and
pop
ret
dec
test
fnsave
fcmove
lds
mov
repnz
or
inc
outs
out
aas
pop
or
adc
pop
and
inc
dec
cmps
dec
data16
lock
fsubr
ins
imul
fsubr
xchg
fistp
and
mov
pushf
add
and
push
stc
scas
mov
xor
scas
xchg
cs
adc
sub
idiv
and
loopne
add
in
icebp
pusha
bndldx
je
add
mov
adc
or
outs
pusha
and
sbb
inc
xchg
inc
loopne
fcomp
iret
scas
ds
fisttp
jmp
test
cdq
and
data16
leave
xor
sbb
fisttp
or
push
push
leave
outs
fwait
iret
adc
jecxz
les
xlat
inc
aas
sub
ret
lods
xchg
popa
xchg
and
ss
lods
push
xchg
aas
in
fxch
dec
call
push
test
push
das
xor
adc
aas
fdivr
into
push
cmp
xor
push
adc
pop
jo
mov
addr16
daa
or
push
stos
push
mov
pop
jb
sub
mov
outs
cmp
inc
jl
ficom
jp
repnz
icebp
pop
(bad)
cmp
nop
or
pop
(bad)
cmp
ror
inc
mov
ss
mov
mov
ficom
scas
out
cmp
pop
cmp
sbb
cs
mov
mov
mov
dec
pop
jo
and
sub
cli
js
fist
lahf
push
leave
pop
int3
adc
dec
inc
xor
mov
jno
cmps
push
and
jecxz
mov
dec
mov
cmp
mov
pop
mul
mov
mov
frstor
cwde
aaa
ror
test
mov
popa
dec
push
lods
add
icebp
add
cmp
aas
stos
data16
pop
mov
add
mov
jnp
enter
pop
mov
mov
cld
xor
es
mov
test
mov
cmc
(bad)
mov
in
mov
jae
ins
mov
cmp
or
repnz
aas
lock
xor
movs
push
sub
(bad)
push
pop
das
sbb
(bad)
xlat
or
repz
aaa
mov
pop
mov
outs
lods
push
fadd
sahf
lds
mov
xchg
sub
daa
jo
popa
ss
sahf
aam
std
cmc
imul
fcomip
xor
(bad)
mov
leave
rcl
cli
bound
xor
sbb
ret
stos
sar
xor
cdq
or
xor
test
sbb
fadd
ss
loop
adc
dec
sub
ds
dec
mov
jp
or
xor
add
or
mov
dec
inc
pop
lock
xchg
std
fwait
add
and
imul
jl
mov
sbb
(bad)
aad
fs
int
imul
bswap
cmp
and
(bad)
cmp
daa
mov
cwde
and
xchg
retf
xchg
into
jae
add
mov
in
adc
push
mov
out
mov
push
and
in
ds
push
(bad)
mov
jmp
sti
(bad)
pop
jae
mov
lock
push
pop
loopne
and
inc
xchg
dec
out
mov
xchg
(bad)
std
out
jnp
stos
pop
adc
jmp
(bad)
out
test
std
mov
int3
sub
pop
(bad)
cmp
mov
loope
pop
aaa
jnp
(bad)
cmp
pop
fwait
out
jb
mov
bound
ret
fwait
cli
sbb
test
sbb
ficomp
inc
xor
sar
push
lods
mov
mov
lea
xchg
jl
xor
std
dec
and
dec
jo
mov
std
mov
out
scas
scas
push
ins
adc
aaa
out
sub
xor
sub
ins
cmp
ucomiss
and
(bad)
xchg
xchg
dec
fs
aaa
mov
push
mov
push
xor
xchg
jle
in
out
cmp
iret
test
adc
push
jecxz
or
mov
inc
popa
sub
xor
mov
ret
dec
ss
mov
addr16
rol
sbb
fmul
or
or
test
pusha
aam
sub
mov
bsr
jg
int
mov
push
cmps
stos
aas
adc
inc
outs
shr
in
sub
fistp
dec
push
jmp
iret
inc
or
xor
loopne
and
les
push
inc
sub
or
(bad)
mov
and
in
in
mov
jmp
out
mov
pop
mov
sbb
ins
test
cwde
call
mov
and
xor
outs
lds
outs
mul
pop
adc
push
pop
imul
mov
movs
cwde
imul
stos
loopne
fucomip
mov
(bad)
iret
fsubr
aaa
sbb
jp
adc
mov
movs
rol
push
js
test
mov
mov
icebp
inc
xor
cmp
inc
cmp
lahf
xor
dec
imul
mov
sar
mov
adc
icebp
mov
ret
jo
adc
push
rol
push
jecxz
addr16
(bad)
loop
dec
lods
fild
xchg
(bad)
dec
xchg
rcr
and
adc
(bad)
and
pop
hlt
iret
inc
outs
aas
cmp
push
jnp
push
cmc
xchg
xor
push
adc
ret
dec
(bad)
dec
outs
adc
test
dec
xchg
daa
out
add
cmp
adc
mov
push
daa
xchg
dec
or
in
push
or
fisubr
outs
pop
and
adc
add
inc
lds
and
test
xchg
stos
int3
test
mov
shl
xlat
mov
(bad)
mov
fsubr
mov
je
push
inc
int3
stc
and
or
mov
cwde
enter
xchg
out
ds
push
aad
pushf
ret
cmp
scas
cmp
clc
nop
dec
xor
add
cmp
movs
aaa
ficomp
mov
in
pop
mov
(bad)
jmp
adc
fild
mov
mov
sbb
ret
jecxz
xor
mov
push
retf
xchg
test
in
lahf
movs
push
sti
and
adc
jle
adc
loope
add
or
pop
cmp
and
(bad)
inc
inc
retf
xchg
add
jb
xchg
jns
out
ins
xchg
sub
dec
es
or
xchg
aad
and
xor
div
xor
out
xor
imul
push
pop
enter
jne
cmc
iret
xchg
ds
lods
(bad)
adc
xchg
add
push
xchg
mov
add
mov
xor
jns
xor
pop
mov
jecxz
nop
fisub
test
jno
xchg
push
pop
xchg
rol
pop
mov
sub
mov
xchg
adc
jae
adc
cdq
xor
push
fidiv
rol
retf
mov
xor
lods
cmp
jp
ins
mov
xlat
das
je
or
sub
cli
jle
mov
repnz
aam
out
scas
adc
stc
pop
jno
stos
adc
fs
out
jne
xor
add
dec
outs
cmp
lds
dec
lods
cmp
repz
ror
pop
inc
push
mov
sub
xchg
dec
push
les
mov
cdq
loopne
rol
add
sub
cmp
cmp
aad
shl
loop
pop
aad
cmps
aas
mov
aam
xchg
(bad)
jbe
pop
mov
xchg
and
(bad)
test
jecxz
push
and
cmps
repz
fmul
ficomp
cmc
and
lock
cmp
xor
clc
and
js
pusha
ins
or
push
shl
jb
repnz
and
dec
(bad)
pop
or
cmp
jle
test
dec
test
pop
inc
sar
cdq
inc
sbb
push
sbb
pop
sbb
pop
stos
mov
lahf
fisttp
pop
xchg
add
add
mov
jo
ret
mov
xlat
bound
xchg
ss
jns
adc
scas
push
xor
jbe
sti
and
push
xchg
mov
leave
xchg
mov
sbb
mov
and
dec
lods
cmc
arpl
fld
xor
xlat
dec
aaa
add
sub
loope
mov
sti
rcr
inc
cmps
xchg
aas
xor
aam
inc
sahf
pop
jg
jae
sbb
enter
mov
sub
icebp
retf
bnd
les
sub
les
js
xchg
pop
push
pop
mov
xor
fist
cmc
cmp
scas
addr16
syscall
push
mov
adc
cld
jg
cmp
inc
mul
cmp
xchg
out
add
ja
out
fmul
jmp
dec
dec
adc
movs
scas
arpl
hlt
das
pop
mov
(bad)
jnp
aas
pop
add
outs
jnp
push
adc
jb
mov
xchg
mov
adc
inc
push
cmp
(bad)
mov
jns
jge
add
sub
cdq
sub
pop
ret
xor
in
repz
ins
cld
aam
sub
push
jno
fbld
ins
cdq
inc
push
sbb
jle
push
dec
mov
bound
jmp
cmp
xor
sahf
popa
int
mov
stos
mov
and
popa
adc
repz
inc
out
ret
scas
fwait
and
mov
mov
sbb
das
adc
test
call
hlt
(bad)
loopne
jp
mov
add
sbb
(bad)
test
inc
pop
aas
sahf
inc
mov
ins
jp
rcr
adc
mov
adc
mov
pop
(bad)
push
xor
mov
sub
add
ret
out
loope
nop
test
aad
(bad)
mov
and
fucomip
push
jno
aas
loope
pop
dec
xor
mov
aas
mov
test
or
push
bound
out
push
in
sbb
dec
dec
xchg
aas
jmp
popa
ss
push
rcr
jo
ins
ins
ja
sub
jp
pop
push
lods
sahf
xchg
test
and
(bad)
std
inc
push
xchg
ins
out
mov
adc
aas
inc
xchg
out
aas
ret
jbe
imul
mov
pop
daa
cld
outs
push
xchg
imul
int3
jle
push
inc
mov
mov
adc
mov
invlpg
sub
fldenv
mov
jae
sti
inc
mov
ret
fcom
dec
add
imul
retf
pop
jecxz
inc
shl
mov
mov
and
mov
mov
xchg
jmp
jmp
pop
leave
mov
shl
add
loop
dec
or
sbb
xchg
leave
in
sti
je
call
inc
xchg
mov
jle
jns
je
mov
mov
and
hlt
jl
sar
out
push
jno
call
add
mov
jbe
sub
repz
cwde
mov
xchg
repnz
test
sbb
icebp
test
push
inc
ins
je
add
dec
stos
sub
cmc
test
popa
xchg
int3
sub
pop
mov
adc
mov
xchg
repz
pop
es
sti
cmp
lods
arpl
adc
lock
xchg
scas
adc
test
scas
lea
sbb
stos
push
pushf
xor
cli
pop
fstp
lds
call
mov
in
and
popa
aas
inc
scas
sub
sbb
push
mov
ficom
jne
xchg
and
jb
or
fnsave
and
add
jmp
ds
je
std
cdq
sub
daa
xchg
ret
dec
and
mov
das
sbb
xchg
test
jmp
add
push
(bad)
call
push
xor
adc
pop
scas
adc
lds
das
inc
jae
jp
mov
mov
popa
xor
push
add
push
adc
sbb
mov
or
cmc
sti
stos
sbb
ret
in
sbb
cmp
pop
test
sbb
adc
les
scas
cmp
push
xchg
std
mov
or
jmp
(bad)
mov
or
and
mov
inc
into
test
js
or
xchg
fdivr
movs
das
mov
inc
push
addr16
mov
clc
mov
pop
mov
rep
movs
lods
data16
pop
les
adc
adc
jmp
popa
xchg
mov
mov
repz
adc
cld
jecxz
push
fmul
xchg
and
jmp
jnp
es
and
adc
sub
xchg
inc
out
sbb
sbb
pop
jge
mov
(bad)
cmc
addr16
or
sbb
imul
icebp
jle
lock
inc
into
ror
ret
cmp
cmp
sbb
and
cmps
(bad)
xchg
loopne
adc
sub
pushf
and
add
ins
fnstcw
xchg
add
pushf
in
(bad)
mov
and
jae
addr16
pop
xchg
rcl
fidiv
push
idiv
fnsave
cmp
(bad)
mov
jo
sbb
into
je
nop
add
pop
outs
out
mov
(bad)
leave
les
cli
pop
aam
mov
cdq
add
mov
imul
xchg
sbb
adc
xchg
pop
les
call
stos
push
ins
jb
dec
push
into
icebp
fs
xor
cmps
movs
loope
enter
in
test
sub
lahf
xchg
iret
jmp
sub
inc
mov
iret
imul
imul
gs
xchg
adc
and
or
lahf
lahf
sbb
or
or
ret
adc
fild
cmp
push
fisub
stc
mov
jmp
or
fucom
imul
dec
mov
popa
mov
test
add
sbb
push
ds
xor
inc
xchg
imul
lea
fiadd
jge
pop
in
mov
clc
cmp
ds
push
add
jne
jle
cmps
imul
mov
add
cmp
js
pop
add
cwde
daa
shl
in
pop
mov
idiv
test
and
ds
inc
ja
push
ins
pop
xor
mov
pop
cmps
aad
mov
lods
mov
xor
imul
cmc
push
xor
stos
sub
jecxz
in
sbb
sbb
in
enter
push
push
test
inc
jae
xchg
aas
cmp
pop
adc
retf
dec
xor
shl
fwait
jmp
ja
cs
(bad)
stc
js
inc
add
xchg
inc
sub
out
lock
test
ret
xor
loopne
xor
pop
mov
xchg
push
dec
push
lods
jno
popa
and
cmp
ret
leave
rcl
add
jmp
les
stc
sbb
aam
jno
adc
out
outs
push
enter
fild
xchg
pop
stc
mov
std
and
sub
test
pop
(bad)
cmps
int3
call
push
ret
dec
mov
pop
inc
or
or
out
loop
fldcw
enter
ror
outs
xchg
fnsave
lods
mov
add
add
test
imul
rol
sbb
mov
xor
and
fimul
shr
das
fisttp
imul
dec
pop
pop
fcmovbe
adc
emms
or
outs
cdq
cmp
cmp
adc
jg
out
and
cli
cmp
and
xor
mov
inc
sub
fistp
jp
sbb
movs
mov
jmp
push
stc
rcr
and
sbb
mov
jle
aam
out
pop
xchg
lods
in
fwait
bound
sbb
mov
les
cs
sar
sbb
sub
inc
arpl
add
xor
jg
sbb
xor
xchg
xchg
mov
sbb
movs
mov
cli
loopne
movs
and
adc
adc
in
xor
pop
movs
clc
inc
fadd
xor
imul
pop
sub
leave
mov
and
sbb
sar
mov
in
mov
dec
fisttp
test
aam
(bad)
jbe
mov
add
pusha
mov
sbb
inc
mov
mov
rol
call
inc
jbe
inc
mov
leave
sar
aam
cdq
leave
jmp
push
add
enter
mov
inc
ror
dec
dec
sti
psubd
sahf
clc
ret
inc
or
rol
jo
icebp
sar
adc
loop
pop
push
cdq
mov
inc
add
pop
jbe
xlat
mov
mov
inc
repnz
pop
mov
dec
cmp
add
scas
jnp
sbb
jg
cmps
(bad)
ins
fs
push
daa
call
fldenvw
je
repnz
pop
in
adc
xor
out
fldenv
lock
outs
fwait
out
mov
inc
iret
(bad)
cmp
mov
mov
nop
pop
jne
xor
fwait
adc
in
cmp
pushf
aad
repnz
push
and
daa
sub
adc
in
cmp
push
mov
jns
xor
adc
adc
js
fst
cmps
daa
cmp
push
(bad)
lods
gs
xchg
mov
test
or
sub
push
and
sbb
mov
jae
iret
adc
mov
cs
ror
retf
jnp
inc
cmp
call
fdivr
pusha
mov
jg
inc
ins
pushf
push
dec
adc
gs
inc
mov
repnz
dec
popa
xchg
imul
cmp
cmp
mov
or
jmp
pop
pop
jbe
cmc
das
ror
mov
adc
les
xor
mov
test
(bad)
fadd
gs
jmp
popf
ss
int
pop
and
cmp
sahf
dec
ja
shl
mov
test
pop
mov
loope
adc
pushf
movs
inc
test
sbb
data16
xor
mov
ja
cmps
jnp
int3
xchg
fstp
aad
test
dec
xor
cmp
jbe
xor
mov
arpl
cmp
fstp
pop
add
xlat
and
push
idiv
cmp
mov
mov
mov
mov
fiadd
addr16
jne
cmps
jge
push
push
sahf
or
or
adc
test
xchg
mov
adc
jp
push
sbb
pop
fs
retf
jo
adc
shl
in
icebp
sbb
aas
push
cmp
ffreep
mov
mov
push
movs
loopne
sbb
lock
sahf
les
(bad)
(bad)
sub
retf
leave
popa
test
push
mov
outs
mov
aad
dec
retf
xchg
and
fdiv
mov
jo
ret
call
mov
add
adc
mov
xchg
xchg
movs
inc
daa
pop
lods
adc
inc
stc
xor
shl
or
es
jns
daa
sub
mov
and
jne
cdq
repnz
or
mov
rcr
inc
pop
mov
or
pop
add
jmp
mov
mov
pop
stc
adc
add
mov
iret
aaa
inc
aaa
scas
add
out
push
test
bound
and
jae
or
push
push
fwait
aam
into
in
mov
cmp
out
cmp
jno
test
ins
cmp
nop
std
add
stc
dec
ret
jnp
loope
popa
mov
or
xor
outs
pop
adc
adc
imul
mov
or
shr
call
daa
retf
mov
repz
shl
jmp
add
(bad)
jb
mov
jns
push
fnstenv
sub
pusha
xor
out
ins
jbe
cdq
pop
rol
popf
add
mov
jns
shl
jnp
cmp
dec
sbb
fs
cmp
jg
imul
scas
xchg
dec
je
add
call
es
stc
ins
out
jecxz
loopne
repnz
push
add
scas
cs
push
cmc
adc
fucomp
xchg
outs
cmp
jb
push
inc
push
test
dec
push
scas
ins
and
pop
xchg
aad
sar
fsub
cmps
lock
and
adc
or
(bad)
loop
xchg
outs
mov
hlt
push
pusha
mov
mov
js
pop
shl
cmc
and
inc
repz
dec
pushf
mov
mov
push
inc
in
daa
mul
xchg
mov
pop
hlt
fdivr
repnz
push
popf
xor
sti
inc
push
clc
jle
cmp
test
xchg
std
mov
arpl
sahf
pop
pop
pop
scas
mov
shl
adc
and
outs
into
aam
es
or
(bad)
cmp
pop
xchg
mov
jae
pop
inc
je
in
es
inc
jmp
cwde
adc
cmp
and
mov
and
cmp
cs
inc
mov
pop
mov
jne
dec
scas
pop
fsubr
pop
jnp
movs
or
lds
jl
or
xor
outs
and
mov
call
mov
adc
(bad)
in
test
sbb
xchg
fnstenv
sbb
test
xchg
push
or
call
or
je
cdq
(bad)
das
push
push
xchg
xchg
push
test
sbb
mov
dec
dec
iret
fadd
mov
mov
or
add
mov
xchg
adc
in
push
mov
xlat
retf
jl
aam
aas
mov
dec
fs
mov
sub
loope
cdq
and
js
fild
outs
(bad)
retf
in
ret
in
js
add
jg
inc
daa
add
call
and
adc
(bad)
jmp
lods
mov
pop
loopne
sar
sti
xor
inc
dec
nop
inc
cmp
sub
jecxz
mov
out
pop
cwde
lds
(bad)
and
xor
push
aas
pop
xor
cmc
push
dec
cmp
int
xchg
mov
leave
mov
test
add
add
repz
add
popa
int
mov
in
cld
xchg
in
iret
psrlw
scas
mov
and
sub
mov
xlat
and
mov
jecxz
popf
jnp
jp
or
shl
jmp
popf
jno
fsub
fdivr
(bad)
mov
sbb
ret
mov
scas
sbb
mov
cld
(bad)
dec
scas
mov
mul
test
mov
shl
add
inc
(bad)
nop
inc
sub
out
sbb
rol
push
add
ss
lods
sbb
daa
adc
xor
mov
jae
or
adc
std
shl
pop
pop
xor
out
mov
pop
fs
mov
adc
push
in
dec
aad
dec
int3
iret
push
int3
or
xlat
in
sub
push
mov
iret
push
sti
cmps
mov
lods
mov
cwde
in
jnp
cdq
fnstsw
push
(bad)
pop
xor
ss
push
xor
or
xchg
mov
xchg
xchg
mov
call
(bad)
and
xchg
mov
jmp
dec
ins
fcmovnbe
repz
or
cmp
mov
popa
sbb
push
cmps
jno
mov
jl
loope
jae
and
jo
arpl
sub
dec
mov
jecxz
ror
nop
fst
xchg
(bad)
std
push
les
pop
and
mov
imul
inc
mov
and
popa
cmp
aad
sar
adc
xor
fs
add
(bad)
push
push
xor
fs
pusha
call
jo
cmps
pop
sti
iret
cdq
sbb
jl
scas
add
mov
lods
adc
fwait
jnp
sahf
es
cmp
lahf
fmul
mov
jnp
pop
push
sbb
mov
push
adc
jns
into
movs
sub
test
and
cmp
jle
sysexit
inc
cli
dec
cmp
fsubr
xor
mov
sbb
fldenv
pop
xor
pop
fisubr
lahf
scas
(bad)
fyl2x
inc
mov
dec
cmp
push
xchg
mov
adc
fist
or
pop
nop
into
es
call
mov
mov
jmp
int3
leave
rol
jbe
inc
stos
xchg
push
mov
sub
add
xor
imul
sbb
and
xor
sub
idiv
and
call
jmp
aad
and
adc
lea
ds
push
push
dec
cld
ins
mov
jno
mov
mov
fcom
cmp
xchg
add
push
and
jmp
ss
rcl
aas
jle
imul
nop
jg
sub
xchg
ds
mov
stos
lock
pop
sub
cmp
ret
scas
fcmovb
into
add
pop
outs
iret
fwait
xchg
adc
xchg
inc
cmp
inc
xchg
iret
ror
mov
mov
mov
cmp
or
cmp
and
pop
mov
jecxz
jnp
sbb
cld
in
inc
ins
mov
lods
dec
lods
xchg
inc
retf
enter
clc
ja
add
daa
fs
and
into
lea
or
xchg
mov
pop
sub
jbe
aaa
mov
xor
int3
sti
test
ja
lods
nop
int3
push
(bad)
cmps
dec
stos
pushf
ret
cmps
std
mov
push
xchg
movs
int
imul
aad
arpl
hlt
arpl
daa
dec
and
sti
jns
lds
mov
shl
shr
lods
cld
push
sub
inc
je
in
cs
adc
sbb
stc
pop
fisub
out
scas
dec
sar
stc
repz
push
xor
jg
cmp
scas
dec
jmp
cmp
les
adc
imul
push
inc
xchg
fdiv
in
dec
or
ins
cdq
data16
adc
push
(bad)
clc
sub
push
xlat
inc
arpl
aas
(bad)
adc
call
mov
sub
push
xor
mov
ret
lds
sbb
lea
fimul
or
loope
movs
xchg
push
inc
sub
mov
fs
mov
pusha
mov
mov
lock
test
lock
cmp
pop
stc
std
pop
mov
add
jb
aad
cwde
cmp
sti
and
aam
clc
out
add
fwait
add
stc
sub
aaa
fwait
gs
dec
(bad)
xchg
and
push
add
ret
mov
je
shl
push
push
ins
jne
nop
mov
js
test
dec
retf
lods
ds
push
rcr
xchg
repz
in
and
or
aas
enter
(bad)
sub
in
xor
cs
das
imul
out
mov
cmp
inc
neg
movs
retf
sti
fstp
inc
jnp
xchg
shl
shl
stc
gs
dec
dec
add
and
test
jp
sub
push
mov
enter
aas
cli
inc
or
cmp
mov
sbb
xchg
cmp
aad
or
and
jno
mov
mov
(bad)
test
pop
rcl
dec
inc
fcom
das
dec
popa
icebp
imul
data16
cmp
cli
daa
add
daa
or
mov
enter
loop
(bad)
in
daa
sti
mov
lahf
in
xchg
loopne
xor
xor
aad
mov
push
in
inc
sub
and
addr16
inc
scas
xor
test
adc
adc
(bad)
leave
mov
fsub
mov
adc
out
add
clc
adc
lods
sub
call
js
pop
popf
mov
sub
push
cmps
jbe
lods
out
sar
les
call
sbb
jae
mov
ins
cmp
idiv
or
add
fistp
inc
in
(bad)
popa
mov
jae
sub
scas
gs
jmp
mov
push
gs
rol
sbb
stc
mulps
mov
and
repz
mov
sbb
mov
pop
mov
adc
push
retf
push
movs
rcl
cmp
clc
and
adc
jecxz
push
in
dec
inc
inc
in
mov
test
fwait
(bad)
fimul
ss
jne
les
xchg
cmp
das
stos
arpl
xchg
add
cwde
lahf
(bad)
lock
sub
pop
cmps
mov
mov
sar
popa
sub
mov
loope
jmp
sahf
sbb
ret
adc
retf
loope
xchg
cmps
sbb
mov
sbb
imul
add
(bad)
sub
mov
lods
shl
adc
ins
int3
es
xchg
test
xchg
add
pop
in
call
lock
or
cmp
dec
sub
cld
mov
xchg
aas
pushf
addr16
imul
xchg
add
sbb
out
adc
inc
xchg
dec
inc
xor
repnz
add
or
and
push
ret
cld
xor
int
ret
and
lods
hlt
in
jl
test
add
cs
mov
xchg
retf
sbb
mov
ret
lds
xchg
sub
mov
inc
jmp
iret
popf
fsub
jmp
or
or
dec
inc
pop
add
sub
jle
jno
dec
and
in
lods
mov
inc
cld
push
rol
mov
sub
cmps
sete
mov
add
mov
push
inc
add
jb
dec
adc
xchg
mov
xor
pop
cmp
popa
or
push
and
push
addr16
lds
jge
push
mov
mov
mov
fld
mov
imul
jmp
jge
pusha
ret
bound
lock
push
add
popa
(bad)
mov
inc
dec
push
imul
pop
and
(bad)
stos
enter
hlt
mov
sub
mov
or
out
and
xor
xchg
push
mov
mov
xor
jmp
cmps
ret
out
cmc
dec
jnp
call
aam
or
loop
out
push
out
test
xorps
stos
pop
xchg
and
test
and
push
popf
and
dec
jnp
test
sub
jb
shl
out
add
or
cmp
fsub
adc
or
mov
mov
inc
outs
push
mov
pop
jb
mov
xchg
sbb
and
and
stos
sbb
ja
push
retf
aam
outs
aaa
add
adc
aam
aaa
xchg
mov
xchg
test
cld
sub
jb
das
xchg
mov
(bad)
cld
mov
sub
xchg
xor
(bad)
cmp
fdivr
xor
add
lea
das
or
xchg
mov
je
cmc
or
adc
xchg
in
mov
inc
push
mov
add
fcomp
pop
jb
xor
mov
retf
cld
pop
into
je
cdq
in
cli
sar
inc
setle
minps
mov
jbe
dec
fbstp
or
fild
jne
imul
pusha
(bad)
call
jne
add
jmp
and
jmp
add
xlat
sub
pushf
jp
mov
cmps
mov
stos
shr
push
sub
std
cmp
xor
ret
outs
sbb
sub
mov
or
shl
xchg
(bad)
mov
call
dec
inc
in
std
jbe
out
mov
aad
push
gs
pop
xlat
mov
jnp
adc
jne
xchg
mov
lahf
push
hlt
and
out
dec
xor
sahf
jnp
mov
jecxz
movs
hlt
add
sbb
mov
xlat
adc
call
in
or
out
xchg
xchg
in
cmps
in
pop
cmp
sub
mov
add
cdq
in
(bad)
(bad)
(bad)
or
out
pop
cmc
xor
pop
mov
int
pop
rcr
add
add
shl
cmp
ret
dec
cmc
leave
dec
add
in
xchg
test
aam
jmp
sti
inc
dec
adc
popf
sub
sbb
inc
adc
aaa
cmp
dec
mov
rol
call
mov
fucomp
sub
scas
shl
outs
test
mov
or
je
ror
jecxz
repnz
pop
ins
loope
rol
dec
inc
in
sub
inc
mov
cmps
out
push
fsubr
mov
repnz
xor
mov
cmp
and
in
mov
mov
sub
cmp
test
aad
adc
outs
xchg
fdivr
cmp
inc
aaa
js
pop
les
int
imul
out
imul
(bad)
xorps
push
fstp
je
loop
test
mov
jg
cmp
sub
dec
leave
movs
dec
cmp
pop
mov
pop
xchg
sbb
fs
mov
into
pop
pop
in
mov
stc
mov
(bad)
rol
das
pop
fs
pop
aam
fwait
sbb
dec
es
fisubr
js
fwait
sbb
add
inc
push
inc
imul
pop
test
xchg
adc
sub
and
mov
sbb
jecxz
mov
fcomip
scas
and
cmc
jmp
cmp
jmp
lock
movs
inc
arpl
push
xchg
jg
mov
xchg
jle
mov
sbb
arpl
iret
sbb
cmp
fcomi
cmp
fldenv
add
imul
push
icebp
inc
into
adc
xor
inc
push
test
stc
xchg
push
and
and
mov
imul
shl
(bad)
and
das
popf
out
mul
cmp
mov
mov
sar
sub
jmp
push
popa
xchg
sar
popa
xlat
push
dec
cmp
and
mov
fs
sbb
xor
xchg
mov
stc
mov
aam
or
pop
pop
call
sahf
adc
push
add
inc
movs
mov
push
add
cmp
fnstcw
xor
pop
iret
les
lods
aam
stc
into
iret
ret
fs
movs
aas
psraw
xchg
loope
mov
mov
xchg
adc
jno
dec
stos
nop
into
pop
xchg
lock
mov
push
bound
jne
dec
fisubr
dec
mov
addr16
pop
dec
hlt
or
mov
(bad)
dec
cmp
jns
inc
push
outs
add
pop
fucomp
test
scas
push
mov
push
push
call
dec
mov
dec
mov
or
jno
xchg
push
push
add
fisubr
xor
hlt
movs
je
add
test
mov
mov
dec
mov
mov
inc
cmp
test
test
pop
popa
test
retf
sti
add
lods
inc
jnp
push
mov
shl
ds
fnstsw
scas
sbb
jl
sub
dec
mov
nop
pop
dec
std
or
outs
xchg
leave
pop
test
pop
retf
push
xchg
add
jmp
ins
push
jb
adc
pop
cmp
jne
std
jmp
pop
aaa
cmc
daa
addr16
sub
mov
int
cs
out
leave
ss
sbb
cmp
stc
and
pop
xor
sbb
call
sub
adc
or
cld
mov
rol
cld
addr16
loopne
push
xchg
and
or
dec
sbb
outs
pop
aas
xor
xor
cmp
rcl
push
clc
dec
fsubr
jge
pop
jmp
cmp
nop
aam
add
mov
sbb
stos
mov
inc
mov
leave
cmp
pushf
dec
test
and
dec
adc
cmp
fwait
jmp
mov
nop
or
xchg
add
icebp
shl
sub
cmps
loope
cdq
xor
aas
les
jae
add
cmp
mov
fsubrp
jle
arpl
or
mov
icebp
imul
frstor
adc
mov
jns
push
sub
stos
add
fmul
addr16
stc
call
sub
mov
je
ret
sub
and
cmp
jle
adc
fisub
sar
adc
lods
out
outs
mov
lock
out
aam
cmp
fisub
and
pusha
adc
mov
jb
lea
jno
sar
gs
iret
xor
ins
out
bswap
shl
call
cli
cli
and
(bad)
and
cld
sub
xchg
dec
les
loop
test
jle
(bad)
xor
jnp
mov
dec
cli
jnp
cmp
sub
call
mov
fadd
mov
add
repnz
les
clc
nop
inc
add
shr
and
jne
lods
push
frstor
stos
xor
push
loop
lods
lea
loopne
ret
pop
jae
mov
inc
out
mov
dec
xor
outs
loopne
xor
lahf
retf
ds
dec
cwde
inc
cli
jbe
test
xor
and
mov
fst
(bad)
into
cmps
xor
xor
lods
jns
aas
sbb
push
imul
fistp
sbb
xchg
(bad)
jae
movs
push
mov
mov
retw
es
xlat
jmp
mov
clc
mov
adc
mov
sub
jmp
out
fldenv
inc
push
sub
ror
test
mov
lds
outs
fs
js
pop
arpl
outs
call
jmp
cs
xchg
ins
jbe
or
std
out
add
das
xchg
dec
loop
inc
xor
push
and
js
push
mov
sub
cmp
mov
sub
call
ja
sbb
inc
xchg
and
aas
(bad)
gs
and
jns
test
fstp
rol
lods
sub
cmps
add
inc
icebp
cmp
out
mov
in
out
mov
pop
or
ds
mov
pop
mov
sbb
addr16
dec
bound
add
int
cli
pop
push
push
jns
hlt
mov
push
inc
mov
stos
sbb
imul
outs
add
cli
cmc
jle
mov
lods
lods
es
jae
jno
jmp
mov
movaps
int
adc
pop
jle
pop
mov
pop
or
data16
out
dec
mov
xchg
dec
icebp
fistp
push
add
(bad)
out
sti
and
xchg
mov
scas
ins
xchg
jg
aad
cmp
ret
add
xor
mov
cld
repnz
cs
jae
adc
push
inc
push
out
pop
mov
pop
cmp
fstp
fmul
and
fsubr
loopne
jmp
jne
add
aas
idiv
enter
jmp
test
ja
stos
pop
jb
cmps
mov
icebp
jge
leave
and
mov
jp
(bad)
add
or
int3
mov
or
into
pusha
push
add
push
ss
pop
cmps
dec
test
lods
mov
ins
pop
jge
daa
push
push
cmps
(bad)
push
(bad)
ins
sub
in
not
push
mov
cli
ret
push
or
addr16
bound
jbe
sub
jo
loope
fadd
xchg
push
sbb
xchg
mov
js
push
push
and
imul
sar
aad
mov
jnp
sbb
xchg
or
dec
addr16
das
push
int3
mov
inc
add
pop
sbb
sbb
call
push
enter
xchg
sbb
ret
aas
fdivr
sbb
mov
pop
push
fimul
cmps
cmp
call
ss
or
push
xchg
xor
shr
rol
pop
movd
call
retf
cmp
hlt
pushf
xchg
scas
mov
cmps
dec
and
cld
mov
inc
sahf
fisubr
mov
(bad)
xchg
cs
sbb
push
push
inc
int
mov
adc
(bad)
push
test
xchg
or
stos
arpl
cdq
xchg
add
mov
xchg
jbe
push
hlt
dec
fisubr
add
mov
out
pop
test
inc
add
adc
into
xchg
mov
fistp
gs
push
ret
sub
jae
jno
sbb
call
dec
fld
ror
mov
lods
je
jae
cmp
lods
pop
stc
dec
shr
inc
add
xchg
mov
cmp
jno
sub
repz
sbb
xor
enter
pop
mov
mov
in
std
pop
cmp
sbb
add
jmp
cs
pxor
test
repnz
cmp
sub
mov
dec
jns
lds
js
inc
fisub
pop
push
jp
mov
xor
stc
xchg
mov
xor
push
push
dec
or
xchg
cld
loop
fmul
int3
rcl
add
stos
daa
cmp
mov
inc
adc
ror
(bad)
cmps
dec
mov
sub
(bad)
aam
scas
call
add
mov
push
xlat
inc
xchg
sub
outs
sti
mov
jmp
ror
or
cdq
inc
(bad)
lahf
xchg
or
out
xor
xor
xor
mov
nop
(bad)
jecxz
xchg
xchg
sub
and
push
rcl
data16
xchg
movs
mov
sbb
and
sub
inc
inc
outs
loopne
inc
popfw
and
mov
add
xor
xchg
out
clc
lea
sti
std
xlat
dec
xchg
out
dec
retf
mov
xchg
push
test
push
jae
retf
sbb
rcl
jnp
sbb
loopne
mov
xor
in
mov
ds
jg
in
pop
iret
dec
scas
push
xchg
mov
out
jle
mov
and
das
cmc
jns
mov
in
shl
mov
xchg
push
xchg
mov
fld
pop
cmp
dec
cmps
push
outs
(bad)
std
sbb
inc
int
in
jmp
add
int
cmps
cli
mov
bound
in
push
adc
inc
xchg
adc
ins
xor
push
xchg
dec
int3
adc
add
call
jae
xchg
call
addr16
mov
sti
(bad)
sti
adc
in
sbb
jmp
in
mov
push
mov
xchg
cmps
jmp
out
jg
cmp
or
or
fiadd
pusha
movs
push
cmp
push
(bad)
out
sti
pop
outs
and
cwde
das
imul
pop
dec
arpl
ins
mov
cmp
jb
push
outs
test
xor
test
dec
cmp
fiadd
push
adc
push
hlt
repnz
mov
mov
(bad)
repz
mov
outs
gs
push
mov
lods
movs
xlat
jne
sub
fs
jg
int3
repz
shr
sbb
in
popa
pop
fs
lea
iret
mov
or
cld
fiadd
pop
sti
mov
push
fwait
mov
rcr
vshufps
imul
adc
imul
mov
ret
inc
xor
or
sbb
(bad)
aas
les
dec
call
inc
(bad)
scas
inc
ja
mul
int
hlt
fldcw
rol
jge
jg
jmp
xchg
push
test
jle
enter
mov
xor
enter
xchg
adc
fild
jl
lea
inc
and
mov
jge
or
aam
dec
nop
jne
rol
mov
jno
std
retf
inc
out
hlt
jae
cmp
test
dec
in
jge
jo
out
scas
dec
pusha
out
xchg
mov
movs
daa
pop
or
jp
test
cmps
jge
cmps
ror
test
enter
arpl
(bad)
fs
xlat
mov
ja
(bad)
je
cmps
mov
mov
adc
fcmovnbe
xcrypt-cfb
cmps
movs
push
jge
mov
ins
cwde
test
in
add
pop
inc
jae
sbb
shl
dec
shr
sahf
pop
inc
pop
mov
pop
cmps
mov
fnstenv
jo
aas
pop
out
jecxz
mov
test
popf
mov
inc
fisub
outs
int3
retf
push
frstor
inc
sub
pop
adc
inc
xor
cmp
movs
jb
mov
ds
adc
pop
aad
push
data16
and
(bad)
or
jmp
cmps
pop
or
sbb
fdiv
mul
or
mov
sbb
ins
stos
test
lods
sub
mov
iret
dec
add
jo
xchg
mov
iret
sti
and
dec
cwde
add
aas
xchg
dec
or
adc
pop
add
inc
ret
clc
xor
movs
test
pop
xor
mov
cld
std
xor
pop
dec
out
lahf
mov
(bad)
mov
pushf
sub
push
dec
and
xchg
(bad)
repnz
xchg
pop
mov
add
mov
and
jbe
cmp
(bad)
aas
movs
mov
or
pop
ja
iret
(bad)
push
pop
fdivr
ds
push
xchg
in
call
mov
(bad)
ret
cmp
retf
push
int3
pop
iret
lahf
fstp
pop
cwde
and
(bad)
mov
xor
xchg
inc
out
adc
(bad)
dec
xor
loop
popa
pushf
mov
and
mov
adc
femms
dec
fstp
popa
sbb
sahf
inc
xchg
lahf
jecxz
pop
jno
int
mov
fsub
out
push
and
es
sbb
lahf
fmul
inc
in
or
mov
daa
out
enter
add
leave
cmp
aas
add
retf
mov
cmp
(bad)
sbb
jmp
dec
ret
ja
xchg
ficomp
jmp
cmps
scas
or
stos
sbb
mov
dec
mov
push
cmp
loop
je
cli
push
inc
jo
mov
and
in
xchg
ds
xchg
cmps
push
(bad)
cmc
xor
test
or
cs
pop
sub
sar
rcl
mov
repnz
push
jbe
iret
nop
ds
jne
mov
push
pop
adc
mov
pusha
add
pushf
xchg
repnz
pop
lods
cmp
daa
sbb
adc
mov
outs
and
scas
push
mov
ins
hlt
ins
cmp
xor
mov
imul
push
or
dec
mov
jno
mov
push
sbb
popa
xchg
add
pop
int
sbb
div
cli
xor
dec
lods
fisttp
mov
jns
push
lods
dec
add
xor
mov
fcmovbe
jmp
shr
mov
and
or
test
ret
xchg
pushf
loopne
mov
mov
adc
dec
(bad)
loope
cwde
sbb
pop
mov
jae
jae
neg
in
sbb
fdiv
popf
rcr
popf
in
stos
sar
mov
rol
pop
aas
(bad)
std
fninit
mov
sbb
dec
xor
out
and
in
stc
clc
dec
movzx
popa
push
push
pop
mov
inc
call
xchg
fs
shr
add
fbstp
cmps
daa
cmp
iret
in
idiv
cmp
loope
pop
dec
mov
cmp
inc
stc
pop
out
cmp
div
jmp
pop
call
sub
pushf
test
retf
jge
sahf
(bad)
cmp
and
mov
fistp
sub
and
xchg
dec
loope
jbe
jmp
mov
jg
pop
mov
xchg
push
dec
clc
and
ja
jmp
fsub
add
pop
(bad)
mov
mov
gs
sar
xchg
cs
aam
retf
call
mov
in
jo
arpl
mov
jae
add
xchg
addr16
daa
sahf
jl
jns
leave
cmp
dec
ficomp
mov
mov
outs
mov
add
cli
sub
jmp
fwait
xchg
inc
rcl
call
sbb
ror
cmp
push
mov
nop
xchg
jae
cdq
add
mov
sbb
push
mov
dec
push
fcomip
adc
jmp
loope
popa
mov
retf
or
ret
xlat
cs
xchg
mov
sahf
jb
bound
cmp
mov
ins
es
in
aas
les
sahf
retf
ins
jmp
mov
outs
fsub
lods
xor
lea
ins
in
loop
lods
test
test
repz
or
hlt
sbb
in
repz
xchg
and
les
xchg
push
cmp
out
iret
adc
dec
sub
add
xchg
stos
add
dec
dec
pop
(bad)
adc
mov
paddb
into
iret
sbb
fs
popa
or
add
sub
loopne
dec
xor
aaa
shr
shr
cmp
cmp
mov
mov
mov
sub
adc
scas
fs
fwait
shl
pop
fistp
cld
(bad)
jae
inc
push
push
jo
add
fisubr
or
leave
retf
jle
push
jns
pusha
sub
jmp
rcr
out
adc
mov
pop
rcr
add
pop
loope
pop
loop
fdiv
dec
pop
icebp
fcomp
pushf
or
mov
daa
and
mov
outs
mov
push
mov
xchg
mov
sbb
test
rcr
mov
sbb
cmp
sbb
pusha
inc
scas
das
add
ret
dec
add
movs
outs
pushf
sub
rol
push
ficomp
and
fwait
cs
hlt
lock
(bad)
push
and
push
(bad)
(bad)
fst
sbb
inc
int
test
pop
int
out
repnz
xchg
(bad)
jmp
clc
fidivr
call
loopne
pusha
imul
or
xchg
test
mov
or
pop
out
out
mov
jae
xchg
jb
out
mov
enter
mov
lock
sbb
lods
sbb
mov
xor
xor
jbe
stos
sbb
aam
stos
cmp
sub
adc
mov
(bad)
sbb
sub
jbe
daa
inc
jne
push
or
pop
mov
pusha
fisub
retf
jle
hlt
sub
sbb
out
xor
cld
mov
mov
icebp
sbb
aad
and
push
das
test
pop
jmp
(bad)
ret
rcr
scas
push
cdq
std
sti
mov
xchg
mov
in
cs
mov
ret
int3
fimul
add
xor
std
xchg
sahf
inc
(bad)
push
icebp
mov
jg
xchg
std
mov
push
jbe
add
call
cmp
sub
(bad)
adc
lea
ins
jecxz
cmc
mov
push
mov
adc
ja
sub
mov
mov
jo
pop
inc
fstp
(bad)
mov
cmp
rcl
xor
movs
mov
outs
retf
cli
xchg
stc
jp
cmc
enter
push
scas
cld
mov
jae
mov
sbb
cmp
sub
arpl
xor
stos
and
cs
cmp
mov
repnz
dec
(bad)
out
mov
cmps
xchg
(bad)
and
sbb
pop
sub
and
push
out
inc
mov
rol
daa
leave
sbb
add
mov
aas
push
loope
inc
mov
loopne
mov
sbb
pusha
pop
and
(bad)
sub
shr
arpl
xor
xor
aas
push
(bad)
push
jbe
and
mov
adc
hlt
sbb
push
cmp
loopne
mul
loopne
lock
jle
cld
test
pop
jl
in
adc
push
pop
stos
lahf
in
out
(bad)
cmp
lds
mov
pushf
mov
and
xchg
dec
sbb
jns
in
or
sbb
jl
add
repnz
cwde
push
adc
arpl
es
ja
sar
imul
add
lahf
xchg
pop
mov
(bad)
lea
sub
aam
push
push
ins
cmp
test
pop
xchg
and
into
xchg
jmp
pop
std
adc
push
mov
aas
(bad)
add
sub
and
ret
test
sbb
cmp
repz
sbb
jae
mov
adc
sub
push
enter
sbb
mov
out
mov
hlt
pop
and
mov
out
jo
dec
scas
in
ror
mov
sbb
gs
xor
pop
pusha
or
loope
xchg
mov
inc
or
mov
cs
cld
add
add
or
cmp
push
shl
adc
cdq
jmp
mov
int
xorps
cmp
push
cdq
loopne
mov
sahf
into
jl
xchg
or
add
sahf
push
dec
sub
add
test
xchg
pop
or
lods
fcomp
test
stos
push
push
adc
pop
add
jo
mov
popf
mov
fwait
xchg
pop
cmps
inc
sub
jne
inc
cmp
fdiv
cli
adc
movs
adc
mov
stos
fsubr
addr16
scas
adc
pop
int3
pop
cmp
or
ins
outs
adc
pop
gs
(bad)
pop
sbb
cmp
lods
lds
sbb
shl
push
loopne
fwait
stos
lock
ret
sbb
ins
stos
pushf
outs
(bad)
xor
pop
jno
fmul
stc
xchg
dec
xor
in
lahf
push
es
inc
xor
in
sub
cmp
sbb
imul
test
push
dec
cmp
cmp
or
or
dec
sub
mov
je
push
inc
jmp
jmp
inc
std
xchg
ficom
scas
mov
std
mov
jae
or
(bad)
leave
arpl
xchg
scas
int
mov
xchg
cmp
mov
cs
cmp
mov
add
mov
pop
and
shl
xor
rol
fstp
js
push
iret
sar
neg
aam
hlt
bound
imul
cmp
mov
or
call
into
add
mov
jnp
mov
lds
aaa
call
test
rcr
add
jmp
push
dec
mov
mov
mov
mov
aam
adc
cmp
push
xchg
sbb
nop
cld
sar
jns
fdiv
(bad)
(bad)
out
or
rol
rol
shl
inc
aam
test
mov
pop
sbb
mov
adc
push
sbb
cmps
xchg
in
ds
push
dec
sub
aad
stc
mov
ds
fwait
aas
call
call
inc
and
pusha
rcr
(bad)
xor
movs
or
pop
pop
jmp
addr16
dec
sub
into
adc
cmp
jp
mov
int
mov
aam
push
xchg
mov
test
xchg
cmc
add
lods
adc
shr
outs
pusha
arpl
enter
int3
jnp
js
push
dec
xchg
push
sbb
fs
data16
dec
sub
imul
loop
sbb
stos
dec
test
in
clc
push
inc
in
add
(bad)
jb
test
clc
xor
mov
fistp
loopne
or
int
js
sbb
or
dec
and
mov
or
push
inc
jg
fimul
jnp
jne
mov
cmp
test
xor
xchg
xor
xor
loop
je
aad
shr
push
sub
shr
jo
cmp
sub
mov
sub
sbb
popf
sti
jns
mov
in
sbb
and
sub
mov
push
sbb
add
xchg
pop
jg
pop
fiadd
mov
leave
dec
icebp
mov
les
test
cmp
xor
out
and
add
push
or
test
retf
movs
mov
cmp
cmp
inc
mov
pop
inc
dec
not
fistp
popa
nop
push
daa
or
mov
out
add
sbb
pop
xor
sbb
sub
mov
or
ins
xchg
mov
mov
jg
jbe
mov
dec
imul
cmp
lock
es
movs
aad
stc
cmp
fwait
push
test
fnstenv
jne
adc
test
push
test
pop
(bad)
push
std
mov
aas
mov
cmp
fbstp
fistp
and
push
or
xchg
xchg
div
aaa
cmp
outs
sub
jp
jns
and
fsub
and
inc
dec
fwait
inc
pop
(bad)
xchg
fcom
clc
in
not
ror
mov
xor
xchg
lock
jmp
lods
adc
in
xchg
je
mov
push
cmps
push
xor
lods
imul
push
jle
cwde
sub
cmp
sbb
xor
leave
stos
call
aam
pushf
retf
push
lock
xchg
mov
sbb
mov
(bad)
popa
jmp
mov
xor
clc
inc
and
loopne
mov
sub
lds
stos
fstp
out
xchg
xor
aad
icebp
pop
into
in
lods
mov
or
push
xchg
repnz
adc
push
lds
jle
cmp
or
loopne
dec
cs
and
adc
xchg
fimul
mov
jmp
mov
aaa
mov
test
out
rcl
call
jmp
ins
fsubr
js
addr16
js
inc
ss
add
jl
dec
das
hlt
shl
in
mov
inc
out
mov
jg
and
pop
in
push
mov
pop
or
mov
sar
xor
mov
je
jge
or
fild
fs
pushf
mov
push
xchg
push
adc
jp
dec
lahf
or
lock
fisubr
or
aad
dec
ins
jae
mov
cli
fild
mov
add
jae
sbb
add
inc
shl
xor
stos
mov
in
mov
test
out
std
inc
jle
cmp
add
adc
mov
xchg
clc
mul
fwait
adc
push
pop
jne
cmps
pushf
and
pop
movs
ret
pop
mov
mov
in
inc
fs
fist
and
adc
push
jns
out
test
das
push
sbb
push
dec
or
nop
out
das
cmp
stos
popf
inc
mov
loop
ffree
cmps
jge
lods
iret
jl
pop
repnz
xor
out
daa
jnp
xor
out
dec
popf
sbb
scas
aam
cmp
add
jecxz
push
xor
dec
inc
pop
in
jmp
mov
xchg
and
mov
mov
dec
pop
push
xor
loop
cmp
mov
xchg
and
iret
sbb
icebp
scas
loope
dec
cwde
test
or
adc
xor
inc
and
lds
xchg
cdq
sub
push
lock
mov
ret
mov
lock
sbb
jbe
das
in
dec
inc
add
mov
xor
out
aad
pop
fld
pop
rol
clc
xor
div
mov
pop
or
xchg
and
push
sti
push
inc
sub
mov
sbb
jnp
inc
scas
or
sbb
mov
cmp
aad
in
jmp
lahf
dec
mov
inc
push
cdq
je
cmps
push
dec
out
in
mov
stos
cmp
cdq
sahf
icebp
jg
stos
or
dec
sti
dec
dec
inc
mov
outs
enter
push
fist
jle
or
mov
icebp
lock
fs
mov
aaa
jae
xchg
xor
repz
xchg
jo
(bad)
fisubr
sbb
jnp
dec
or
and
cmp
push
xchg
push
fisttp
xor
test
fs
xor
mov
sbb
and
in
sti
and
fxch
rcl
cmc
and
retf
test
nop
and
and
in
cmps
retf
aad
xor
add
cli
or
push
push
std
out
scas
cmp
pop
mov
aaa
jmp
push
scas
clc
bound
lock
mov
push
rcl
mov
lods
pop
lahf
(bad)
jmp
add
or
repnz
sub
cmp
ds
inc
xor
fcmovb
mov
push
repnz
call
call
hlt
mov
and
dec
jmp
fsubr
adc
retf
dec
mov
add
add
mov
(bad)
mov
xor
dec
jg
ins
bound
cmp
inc
pop
adc
loope
sti
enter
mov
ss
jge
jmp
loopne
jnp
dec
adc
sbb
ror
lahf
pop
and
cld
push
retf
xchg
mov
scas
jmp
ins
push
pusha
sub
leave
and
in
test
push
ret
adc
sub
pop
add
pop
dec
push
jecxz
icebp
imul
adc
sbb
int3
or
packuswb
adc
pusha
sub
test
retf
cmp
ja
xor
sub
push
sbb
mov
or
lahf
add
cmp
pop
retf
repz
cmp
(bad)
mov
leave
and
idiv
push
call
xlat
sub
adc
addr16
inc
ins
cmp
mov
sbb
adc
inc
sub
or
sti
and
imul
xlat
rcl
sub
mov
mov
dec
popa
mov
inc
jmp
leave
xor
scas
push
scas
test
add
sbb
add
(bad)
rol
xchg
adc
pop
mov
pop
outs
pop
cli
jg
loopne
or
xchg
dec
xor
daa
dec
(bad)
pop
mov
sub
test
and
sbb
and
loopne
mov
loopne
mov
aaa
inc
jecxz
mov
xor
adc
mov
(bad)
mov
jbe
cli
nop
add
xor
dec
push
push
xchg
sbb
cmps
pop
lds
jecxz
div
pop
jle
add
mov
sub
fimul
adc
retf
fistp
js
movs
ins
jb
dec
aaa
push
mov
inc
inc
adc
stos
xor
cmp
jge
push
or
jae
jle
call
xor
out
daa
inc
adc
jg
jg
into
mov
jg
in
nop
jb
pop
dec
push
cld
mov
cmp
dec
xchg
xlat
mov
lock
inc
test
sub
sti
data16
mov
mov
lods
jge
cmp
cmps
cmp
pop
fisubr
lods
sub
jns
out
mov
in
iret
daa
scas
pop
xchg
retf
push
adc
stos
jnp
adc
push
push
sbb
jmp
sti
repnz
(bad)
adc
frstor
and
outs
addr16
inc
mov
xchg
and
cmp
xchg
jmp
pop
xchg
push
gs
adc
into
lods
popf
das
xchg
mov
adc
mov
xor
mov
out
dec
cwde
aas
ret
test
pusha
jl
stos
pop
out
cmc
cmp
inc
sub
cmp
pop
out
sub
add
or
push
or
and
xor
cmp
loop
lods
lds
cld
cmps
or
add
scas
imul
push
fld
(bad)
sub
xchg
stc
mov
push
mov
mov
aam
pop
mov
xchg
out
sbb
mov
das
push
mov
sbb
and
inc
mov
inc
cmps
mov
test
(bad)
stos
mov
sbb
pop
dec
pusha
jnp
lea
add
xchg
fist
or
lock
mov
test
or
mov
cmps
in
or
push
xor
cld
rcr
sahf
adc
jmp
stc
dec
add
pop
mov
inc
push
or
sbb
bound
cmp
call
shr
loope
out
daa
inc
add
mov
and
stos
(bad)
iret
rol
test
pop
pop
jmp
mov
pop
retf
xor
aas
jne
jnp
xor
xor
movs
mov
dec
or
mov
jl
sahf
add
loop
int3
fist
out
mov
(bad)
xor
push
dec
imul
stos
and
mov
xchg
shr
aam
out
jmp
add
out
inc
xchg
add
mov
repz
push
enter
imul
xor
sbb
arpl
out
cmp
aas
xchg
out
je
aas
lods
outs
xor
scas
outs
jo
mov
dec
push
bound
xor
jnp
in
fwait
inc
xchg
jge
imul
mov
mov
gs
push
mov
repz
repnz
pushf
jbe
sbb
add
xchg
retf
les
xchg
call
jmp
mov
out
aas
mov
ins
cs
push
push
imul
das
or
pushf
out
adc
pop
mov
aaa
outs
iret
in
mov
add
add
or
mov
test
loopne
dec
and
retf
sub
mov
cmp
pop
mov
lods
and
jmp
xchg
sar
sbb
in
sbb
test
icebp
js
std
or
mov
add
clc
mov
mov
or
mov
int3
(bad)
push
in
pop
push
and
and
fcom
ret
push
dec
jmp
loope
jne
mov
mov
inc
lock
dec
(bad)
dec
das
in
sahf
sbb
pop
iret
aad
xchg
dec
mov
mov
mov
bound
pop
sbb
xchg
jns
xchg
add
stos
jb
aas
mov
mov
shl
mov
inc
xchg
retf
outs
mov
shl
call
pcmpeqd
call
mov
and
fchs
sub
(bad)
jg
outs
daa
and
mov
jae
(bad)
jae
and
cli
inc
rcl
and
nop
adc
(bad)
mov
pop
and
push
bound
shl
xor
and
inc
dec
bound
pushf
mov
std
js
mov
jae
fisubr
jg
push
fdivr
mov
ret
jmp
call
mov
cmp
fadd
sbb
fsub
jns
repz
or
pop
and
ins
xlat
scas
xchg
(bad)
std
jmp
mov
inc
pop
push
lea
in
ss
(bad)
cmp
jmp
dec
sub
mov
xor
sti
in
dec
or
xchg
shl
mov
jbe
push
je
sub
jo
shl
push
aaa
dec
add
jmp
adc
push
cld
pop
adc
out
push
push
and
pop
rcr
sub
jge
fisttp
jae
and
cmp
sar
xor
pop
push
dec
mov
jb
(bad)
lahf
pop
cmpxchg
scas
test
test
add
xchg
or
pop
mov
xchg
inc
mul
mov
jo
mov
aad
retf
jbe
jae
add
lods
sbb
iret
loop
les
mov
popf
push
or
pop
out
movs
cmps
aaa
or
fs
or
jl
push
xchg
div
(bad)
cdq
jno
pop
fcomp
cmp
sub
mov
pop
jbe
aad
or
adc
xor
push
mov
retf
je
arpl
mov
jge
out
cwde
rcr
xchg
out
add
retf
sar
int3
outs
push
das
add
push
fcmovnb
xchg
ins
shl
call
shl
push
es
mov
mov
or
in
add
fcmovbe
or
test
xchg
imul
mov
inc
call
sbb
ror
mov
push
mov
jne
jae
xchg
mov
mov
mov
stc
jecxz
inc
push
mov
aad
int
setge
adc
movs
xor
sbb
add
popf
push
xchg
stos
inc
dec
add
(bad)
pop
mov
dec
inc
inc
sbb
mov
adc
rcl
or
cmps
jmp
out
or
xor
pop
jmp
dec
cld
mov
jbe
and
and
xchg
repz
adc
or
dec
out
in
pop
push
retf
xor
sbb
imul
adc
dec
xchg
add
cmps
pop
push
dec
jae
imul
xor
ficomp
inc
cmp
test
popf
inc
jge
and
xchg
add
ja
pusha
push
idiv
stos
cmps
loop
jl
(bad)
mov
sub
adc
jns
add
int
stos
jmp
mov
lock
sahf
stos
push
cmp
push
xlat
stos
xor
ret
inc
outs
mov
loop
addr16
adc
jle
sub
cmp
jbe
fldenv
fs
sub
lea
dec
es
in
pop
stos
hlt
xchg
mov
ja
lds
sub
cmc
loopne
ret
dec
(bad)
push
mov
imul
cmp
inc
jle
enter
xor
add
add
inc
daa
inc
mov
add
outs
cmp
int3
repz
sbb
ss
and
pmaddubsw
mov
ss
sbb
add
mov
sub
pop
rcr
imul
pusha
and
pop
dec
cmp
jg
and
cmc
mov
inc
adc
into
and
lods
dec
je
jge
mov
push
xchg
dec
loop
xchg
fcmove
ja
pop
scas
das
mov
je
mov
adc
sub
imul
sub
and
add
nop
shl
rcr
or
movs
xor
adc
cwde
out
(bad)
cdq
leave
in
icebp
and
rol
leave
adc
lahf
mov
ret
push
push
loopne
adc
mov
test
addr16
test
adc
mov
jo
fs
inc
fstp
mov
in
jmp
fcomi
je
dec
jb
(bad)
push
mov
mov
mov
ret
aas
cwde
pop
rol
retf
jmp
bound
jg
fidivr
mov
scas
fdiv
push
jmp
clc
inc
mov
cmp
movs
clc
faddp
or
movs
push
out
icebp
cmp
sbb
mov
in
test
dec
out
js
loop
add
sub
add
retf
into
xor
sub
mov
sbb
mul
pop
cmp
jle
out
int3
cmp
lea
(bad)
icebp
xor
add
or
pop
and
inc
cdq
int
push
jle
ret
repnz
inc
dec
push
sar
jns
mov
retf
cmp
es
and
add
das
rcl
xchg
dec
jb
add
into
xchg
test
mov
xchg
jno
gs
inc
cld
pop
jbe
inc
outs
cmp
and
pop
pop
add
(bad)
xlat
popf
cmp
ror
pop
daa
push
fbstp
mov
jle
inc
pop
lods
xor
push
outs
dec
jno
cli
add
cs
hlt
sub
mov
and
outs
(bad)
out
adc
js
rol
sub
xor
jp
xor
in
arpl
movs
sbb
ror
sar
push
pop
or
and
fcmovbe
jmp
jae
mov
xchg
sbb
pop
mov
push
inc
jbe
dec
scas
dec
(bad)
cmp
pop
ds
xchg
int
pushf
imul
(bad)
test
repnz
test
test
out
int
in
mov
mov
repnz
adc
retf
xor
(bad)
retf
mov
mov
rep
mov
aas
dec
lahf
je
mov
dec
gs
inc
mov
(bad)
mov
in
mov
or
push
nop
xchg
sub
aas
jmp
cmp
push
les
and
adc
fild
sub
sahf
add
sub
pop
pop
loopne
xchg
pop
loop
sbb
jecxz
jbe
adc
xor
dec
into
scas
pop
mov
stos
es
adc
xor
(bad)
push
add
(bad)
sahf
leave
push
lods
icebp
inc
test
dec
not
out
cmc
js
fidivr
jle
mov
fisttp
inc
adc
and
jle
loopne
hlt
cmc
sub
cdq
or
and
retf
call
jp
in
loope
jmp
mov
cmc
jg
ja
and
pop
sub
push
movs
push
jns
push
sbb
sbb
call
stos
fwait
and
aam
inc
and
dec
inc
sbb
dec
xchg
inc
mov
in
jb
cmps
or
ins
call
push
icebp
enter
nop
shl
push
xchg
add
repz
lock
cmps
mov
push
mov
cmps
jmp
pop
cmp
xlat
rcl
mov
xor
ficom
pusha
je
mov
fbld
mov
ja
xor
fadd
xchg
lea
repz
js
or
mov
mov
adc
fidiv
test
push
push
iret
ss
shr
jae
add
jle
inc
pop
add
jmp
in
and
movs
push
daa
sti
pmulhuw
js
push
jmp
jbe
add
jp
pop
add
or
adc
and
or
(bad)
imul
int3
mov
xchg
popf
xchg
(bad)
fist
in
xlat
outs
cmp
and
(bad)
and
(bad)
stos
push
rol
mov
mov
test
cmp
in
iret
jmp
push
fwait
cmp
mov
test
mov
idiv
fisubr
mov
nop
add
aam
in
pop
sti
outs
xchg
lods
and
shl
shl
jne
retf
jp
mov
(bad)
(bad)
xchg
or
sub
cs
pop
test
shr
jl
xchg
mov
inc
mov
or
out
xchg
scas
sar
in
cmp
sahf
jp
nop
add
pop
ja
mov
xor
pop
push
sti
sub
dec
adc
cmps
ficom
mov
mov
push
add
sbb
outs
sub
fisttp
mov
sbb
xor
pop
outs
ins
jl
ret
pop
daa
push
mov
jno
loop
adc
pop
jmp
out
fs
lods
mov
stc
xchg
sub
mov
test
push
aaa
sbb
ret
jge
dec
jmp
in
xor
inc
adc
push
push
add
(bad)
sbb
mov
xchg
inc
retf
outs
cld
and
clc
pop
pop
popa
or
cs
fisubr
shr
xor
xchg
test
lea
dec
rep
ss
int
mov
cmp
not
ret
xchg
jns
clc
xchg
mov
neg
add
movs
or
push
pop
(bad)
test
push
adc
sub
jl
cwde
stos
fdivr
jmp
sub
call
push
push
mov
mov
test
jb
sbb
cmp
cs
xchg
jg
clc
stc
sub
sub
popf
sub
ja
leave
adc
shl
fld
xchg
jp
push
dec
sti
mov
fadd
inc
xor
dec
out
cmp
mov
sbb
adc
jmp
add
dec
mov
popa
or
movs
xor
shl
sub
ror
inc
inc
sahf
test
out
or
stc
push
push
cmc
gs
add
cmc
push
mul
fsub
mov
adc
imul
lods
shl
inc
or
xchg
repz
mov
test
xchg
imul
cmps
das
mov
cmps
pushf
gs
adc
adc
cmp
xchg
loop
sahf
jg
loop
cmps
and
and
les
mov
in
call
jecxz
scas
xor
fisttp
sub
xchg
std
xor
in
mov
sbb
sbb
fist
or
jmp
dec
leave
xchg
push
inc
mov
mov
sti
adc
jg
jbe
int3
gs
fnstcw
fsubr
jp
lea
(bad)
sub
pop
push
repnz
outs
dec
dec
addr16
mov
loope
cdq
cdq
adc
pop
or
jmp
pushf
call
jl
xlat
sbb
add
out
push
movs
push
mov
enter
dec
push
out
xchg
gs
stos
push
pop
popf
cdq
add
sub
adc
cwde
popa
in
fs
xor
shl
cwde
(bad)
jge
push
inc
in
or
adc
sbb
ret
cmp
sub
xor
out
ret
outs
push
sbb
xor
mov
popf
push
cmp
sbb
std
mov
test
rol
lods
push
sbb
fwait
out
mov
add
fwait
add
cmps
cs
dec
add
adc
arpl
dec
test
mov
jl
inc
or
jno
jmp
inc
and
(bad)
jl
ja
push
xchg
and
xor
pop
or
jge
pop
xchg
(bad)
inc
cld
push
and
inc
enter
push
lea
or
call
push
push
mov
mov
into
frstor
mov
out
mov
or
sub
dec
pop
sbb
jmp
sbb
(bad)
stc
retf
les
rcl
(bad)
jno
push
add
popa
push
xlat
int3
mov
fcmovnu
mov
mov
sbb
aaa
inc
pop
mov
int
js
adc
cmp
test
adc
add
mov
fwait
lahf
outs
pusha
cli
ds
gs
jmp
inc
pop
fnstenv
jne
repz
dec
jmp
jle
cs
repz
dec
scas
xchg
sub
inc
shl
cmp
aaa
dec
or
or
dec
out
loopne
inc
mov
or
in
inc
retf
inc
or
es
sbb
enter
xor
out
pop
(bad)
mov
push
mov
sub
test
jmp
mov
leave
sub
pop
cmp
push
push
jo
jp
pusha
adc
sbb
loope
xor
or
xor
pusha
adc
cmp
xlat
jae
dec
mov
xor
jg
aad
cmps
pop
dec
jne
sub
mov
sub
jns
dec
imul
add
rcl
jp
imul
or
xor
mov
xchg
js
sar
ror
pop
xor
inc
or
jmp
ds
fsub
sub
out
jae
cmp
fsubr
loop
icebp
xor
call
iret
sub
fidivr
movs
mov
cmp
push
jg
out
or
int
in
or
out
ficomp
jmp
jge
xchg
retf
out
pusha
stos
mov
jge
mov
js
add
rol
lods
xchg
arpl
push
jb
arpl
jae
adc
addr16
les
sub
cmp
pop
xchg
retf
push
jmp
push
xlat
pushf
mov
aad
inc
inc
pop
inc
inc
std
mov
mov
add
test
lods
mov
or
fmul
and
enter
mov
sbb
pop
es
sub
jb
push
popf
aaa
sbb
fwait
movs
dec
and
xchg
lahf
inc
stos
jnp
scas
pushf
aaa
add
popa
fiadd
pop
pop
adc
dec
adc
imul
mov
mov
pop
test
fcomp
cmp
into
mov
add
cmp
sbb
mov
mov
inc
(bad)
cwde
loop
(bad)
fiadd
push
je
mov
daa
adc
xor
and
adc
cmp
adc
in
xlat
xor
repnz
sahf
int
xchg
pop
mov
push
fstp
iret
mov
xor
imul
iret
lods
add
mov
cmp
sub
add
pushf
loopne
(bad)
mov
in
in
not
sub
(bad)
loope
movs
xor
and
inc
xor
mov
movs
imul
in
adc
iret
xor
push
push
adc
sbb
jno
mov
jns
pop
fldenv
mov
adc
cmp
adc
out
add
not
jo
xor
cmp
push
sbb
mov
dec
sahf
je
pop
or
retf
cmp
lea
pop
mov
mov
mov
pop
inc
in
int
loope
retf
push
(bad)
adc
xor
mov
(bad)
mov
push
lock
mov
pop
hlt
shr
out
js
rcl
mov
out
xor
mov
or
bound
jp
fisub
pop
pop
dec
mov
aas
xor
popf
jae
fcom
mov
mov
push
out
xor
scas
loopne
test
je
push
add
fucomi
(bad)
inc
adc
push
fistp
jp
sub
adc
dec
mov
jle
ja
ret
test
or
mov
dec
test
push
jmp
data16
adc
inc
inc
dec
stos
xchg
lds
fstp
or
sbb
xor
sub
sub
and
push
adc
xlat
(bad)
call
mov
jns
pop
jbe
enter
out
pop
inc
icebp
pop
cmp
sbb
test
fist
lds
xchg
retf
shr
imul
mov
mov
xchg
(bad)
imul
ja
jns
jne
imul
in
(bad)
jle
imul
sbb
lock
and
push
pop
sahf
sbb
and
jle
add
(bad)
movs
push
or
das
leave
jne
movs
std
test
rol
(bad)
xlat
xor
je
lods
lods
call
pop
cmp
add
push
jmp
mov
add
sbb
mov
out
(bad)
and
and
popa
pusha
xchg
push
jecxz
test
js
pop
jp
mov
mov
aas
(bad)
shl
mov
aaa
outs
pusha
dec
ss
lds
push
aas
pop
outs
jns
and
sbb
push
inc
xchg
jae
jo
aaa
stc
or
or
mov
(bad)
push
clc
retf
dec
loopne
imul
push
pop
xchg
pop
cli
mov
sbb
cdq
push
arpl
scas
lods
adc
push
ficomp
xlat
out
in
clc
aad
dec
jb
mov
inc
stos
(bad)
xor
cdq
out
imul
(bad)
int
ja
xor
and
xor
imul
mov
repz
xlat
jge
hlt
cmp
(bad)
stc
inc
jmp
dec
test
push
mov
pushf
scas
(bad)
stc
mov
sbb
sbb
pop
int3
jmp
and
cmp
xor
push
cld
cmp
stos
leave
xor
mov
add
and
add
cmps
sub
xor
lods
cmps
sbb
jle
jbe
pop
sbb
cmp
xor
add
or
jp
aaa
in
dec
sti
adc
dec
cmp
xchg
lock
data16
test
sar
and
mov
jg
mov
pop
adc
rol
in
push
cmps
stos
shl
jno
sbb
cld
mov
sbb
sub
mov
sbb
xor
out
das
lods
push
hlt
jg
mov
movs
stc
lods
mov
jnp
ja
mov
jg
int3
jbe
mov
retf
daa
outs
or
add
xor
addr16
push
fiadd
inc
jg
aad
popf
or
aad
jmp
jle
jmp
mov
pop
xchg
neg
mov
les
jl
jno
mov
(bad)
push
(bad)
int
sbb
adc
adc
cmp
or
jmp
cmc
jmp
scas
sar
fdiv
push
popf
lock
cli
or
popf
sbb
jmp
push
pop
xor
(bad)
push
lods
fwait
cmp
adc
add
jno
add
add
aad
repnz
sar
test
dec
shl
jb
repz
jle
push
outs
daa
sub
popf
aas
ror
jnp
fadd
ins
xor
mov
mov
les
cwde
sub
xlat
icebp
sbb
add
in
cmps
jl
add
hlt
jnp
retf
cmp
in
movs
iret
and
es
jnp
jnp
mov
add
ret
out
les
jg
cdq
xor
jbe
into
fistp
and
cmp
sbb
jns
jnp
div
idiv
xor
das
ja
xchg
inc
outs
retf
enter
mov
or
add
mov
cmps
call
or
and
mov
pusha
xchg
xchg
push
xchg
gs
retf
jmp
xchg
cld
(bad)
jg
ins
scas
cs
mov
scas
loopne
xor
push
pop
aam
cmp
cwde
std
nop
sti
loope
pop
pusha
jmp
aad
pop
mov
test
adc
ins
pop
sub
jne
xor
stos
loopne
xlat
rol
cmps
je
test
xchg
dec
mov
(bad)
sub
ret
fwait
clc
and
dec
cdq
enter
sbb
cs
adc
fisub
xchg
sub
jmp
pop
out
inc
test
push
(bad)
out
dec
and
dec
div
push
jno
into
xchg
and
add
popf
jnp
sbb
mov
fmulp
das
add
jno
in
adc
jne
stc
push
cld
fbstp
idiv
mov
hlt
daa
call
div
or
dec
xor
ficomp
rcr
js
(bad)
adc
jne
(bad)
jne
loopne
inc
pusha
fmulp
stos
fidivr
pop
mov
xchg
aas
push
push
xchg
xchg
ror
mov
cmps
mov
sub
and
jecxz
rol
loope
fwait
dec
inc
test
fwait
mov
fld
mov
cli
mov
scas
sbb
cmps
jo
mov
xchg
and
ds
aas
jg
fimul
call
dec
bound
dec
and
das
sbb
neg
inc
add
mov
std
xor
lahf
loop
sti
cdq
aam
scas
add
out
into
test
inc
(bad)
fst
pop
enter
mov
data16
dec
test
mov
or
movs
mov
ss
inc
rcr
out
xor
iret
mov
ins
sbb
out
cmps
and
inc
jb
pop
aad
mov
in
cmps
jecxz
add
idiv
adc
(bad)
arpl
mov
cmp
push
push
inc
add
das
jl
mov
hlt
lock
rcl
mov
loop
call
mov
mov
xchg
mov
or
push
xchg
adc
rol
dec
push
out
dec
push
add
cmps
and
mov
inc
ins
jl
cmp
sub
ins
int3
push
sub
ss
adc
mov
(bad)
out
icebp
stos
xor
add
ins
outs
dec
mov
dec
sub
mov
iret
aas
push
xchg
mov
sub
sbb
shl
mov
push
jmp
test
mov
sub
fmul
fsubr
xor
lea
and
call
or
bound
adc
xchg
mov
dec
cmp
push
(bad)
in
ds
cmp
clc
sub
push
dec
int
clc
into
js
data16
cmp
jns
dec
repnz
data16
sub
cdq
call
mov
je
das
and
test
fsubr
push
pop
xchg
push
addr16
idiv
push
ja
jne
jno
jl
cmps
aas
push
sub
popf
pop
sbb
cmp
fadd
in
das
addr16
mov
and
bound
jb
xor
add
popf
std
dec
fsubr
mov
out
icebp
add
hlt
mov
push
loop
mov
jle
cmp
in
aaa
inc
sub
icebp
test
out
pusha
add
mov
mov
inc
sub
jg
popa
test
lea
arpl
in
jmp
popf
std
pop
pop
mov
and
xchg
pop
rcl
push
mov
dec
jns
addr16
inc
sbb
jge
adc
cmps
xchg
call
ror
and
pushf
push
repnz
cmp
cwde
mov
dec
mov
push
call
loope
in
mov
not
in
int
and
xchg
fild
push
addr16
add
adc
inc
jmp
jns
push
int
add
push
inc
jb
mov
sbb
cdq
or
mov
dec
sar
add
sub
mov
inc
cdq
pop
xchg
rcl
das
(bad)
fs
popf
aad
sahf
inc
jmp
fadd
stos
cmc
aad
sti
repnz
xor
lock
ret
iret
(bad)
and
pop
data16
cmc
(bad)
xchg
push
inc
push
mov
jo
mov
mov
add
(bad)
jmp
adc
stc
shl
pop
pop
or
xchg
out
mov
test
mov
sbb
xor
(bad)
(bad)
sti
jne
inc
dec
sbb
xchg
sub
outs
dec
js
cld
dec
dec
setae
cmp
pop
(bad)
cmp
jl
xchg
xor
fistp
rcr
ror
je
fcom
pushf
add
ret
cmp
mov
arpl
inc
cdq
mov
adc
jnp
lods
dec
sahf
adc
jmp
jbe
fnstsw
dec
xor
dec
(bad)
out
jo
pop
mov
mov
sbb
std
cli
ds
in
out
leave
xor
(bad)
test
inc
stos
sub
ficom
sbb
add
xlat
(bad)
in
push
mov
out
movs
call
div
fs
push
adc
or
(bad)
iret
mov
outs
out
cmps
into
and
push
sub
mov
cmp
aaa
imul
lahf
pusha
cmp
iret
mov
xor
jo
adc
mov
fld
lock
push
pop
addr16
test
rcl
dec
iret
aaa
adc
std
mov
or
lds
jo
mov
mov
mov
aaa
test
mov
enter
sti
sub
rcr
cmp
lods
icebp
test
inc
push
stos
arpl
push
movs
mov
xchg
inc
popa
retf
pop
fisub
mov
cdq
sub
jg
pusha
ss
sub
arpl
jns
gs
fstp
jl
sbb
retf
inc
inc
iret
call
add
adc
hlt
mov
sti
dec
sbb
sub
push
fdiv
sbb
and
cmps
enter
arpl
mov
cmp
push
js
pop
test
or
aas
xor
mov
mul
adc
jmp
sub
mov
add
fs
lock
dec
push
xchg
mov
mul
lock
stos
mov
mov
sub
out
icebp
aam
jecxz
sbb
jae
fild
adc
pop
add
imul
push
movs
mov
stc
cmc
jb
adc
outs
mov
repz
pop
pop
sar
sbb
dec
in
or
xchg
jne
xchg
frstor
imul
jmp
fadd
fs
lock
jle
ds
and
adc
hlt
xor
lahf
cli
xlat
rcl
push
inc
and
sub
pop
mov
pop
jecxz
cli
in
test
jne
or
mov
repnz
popf
stc
jbe
mov
aam
push
dec
mov
in
jmp
loop
out
push
and
adc
pop
test
fdivr
dec
lods
call
push
cmp
pop
mov
mov
sub
test
(bad)
mov
sbb
adc
inc
xor
jo
jae
sub
mov
mov
mov
or
jae
jno
xchg
shr
popa
inc
lock
inc
add
or
mov
push
aaa
(bad)
stos
and
and
mov
imul
add
in
pop
repz
jno
cmps
jae
pop
push
addr16
dec
icebp
mov
sub
inc
sbb
add
out
xchg
mov
mov
xor
dec
iret
mov
scas
xor
mov
and
xchg
les
fisub
mov
add
fidiv
cmp
push
lgdtd
fisub
adc
(bad)
adc
nop
jnp
por
data16
or
cmp
adc
loopne
(bad)
mov
mov
(bad)
inc
add
loop
jecxz
out
xchg
jno
xor
sbb
mov
clc
pshufw
mul
or
mov
in
rcr
gs
mov
mov
ror
jmp
cmp
dec
or
sbb
nop
and
ins
push
fcomp
push
shl
bound
aas
add
push
mov
(bad)
mov
(bad)
dec
pop
add
repnz
xchg
xchg
push
ret
sub
sub
mov
pop
je
cwde
lock
sub
mov
in
adc
or
mov
out
ficomp
dec
push
jo
jo
xor
hlt
or
int
sar
mov
and
adc
and
and
xchg
dec
and
cmc
aam
leave
or
and
mov
cmp
sub
call
lock
je
icebp
adc
cs
push
(bad)
dec
xchg
lahf
das
shr
inc
shl
xor
push
mov
sbb
jo
cmps
sub
mov
loopne
adc
jg
pop
scas
adc
loope
or
pushf
pop
xchg
fisttp
and
cmp
push
push
push
push
dec
adc
repz
add
sbb
xchg
cmc
dec
dec
repnz
pop
mov
pop
xor
out
lock
jmp
mov
inc
outs
inc
push
sahf
cwde
sti
xchg
jns
xor
addr16
inc
mov
(bad)
jecxz
inc
xchg
div
stos
in
(bad)
lods
icebp
inc
sub
push
in
addr16
pop
and
lock
mov
ret
pop
xchg
sbb
lock
adc
sahf
shl
jmp
retf
in
inc
js
jo
outs
imul
xchg
out
lds
sbb
in
and
pop
add
and
xor
rcr
sar
lock
adc
fsubr
popf
jp
inc
dec
test
add
out
ins
int3
icebp
adc
push
sub
lods
xlat
add
retf
cld
jmp
and
(bad)
mov
push
imul
int3
cmp
retf
sti
sti
xor
add
adc
mov
clc
adc
cmp
cmps
rcr
sub
xor
xor
mov
cmp
fild
cld
adc
inc
mov
push
mov
jge
retf
js
xlat
pop
jecxz
das
lods
out
mov
jmp
mov
lahf
mov
inc
dec
cwde
mov
enter
pop
sbb
test
inc
ds
mov
xor
cmps
xor
adc
out
xchg
push
push
(bad)
fldcw
outs
pop
addr16
jg
pop
push
add
sbb
lods
or
sbb
inc
mov
sbb
mov
shr
daa
xchg
outs
inc
aas
jmp
pop
stos
gs
xor
repz
xchg
xlat
in
sbb
push
loop
dec
cmp
pop
lock
jecxz
mov
xor
cmp
cmp
mov
pushf
pushf
push
or
mov
fwait
mov
mov
inc
int3
or
push
popf
mov
xor
fmul
sub
loope
fwait
es
mov
sar
aas
jne
cdq
cmp
daa
in
test
jmp
adc
je
movs
cmc
sbb
inc
mov
loop
jmp
pushf
pop
or
shr
mov
lock
fwait
popfw
dec
cld
push
dec
rcr
je
fnstsw
mov
repnz
dec
call
adc
mov
xlat
inc
leave
sub
ins
jmp
push
retf
fcmovnbe
add
loope
inc
(bad)
(bad)
push
and
leave
lds
call
push
or
arpl
ficom
(bad)
call
aaa
jno
adc
into
in
pop
add
mov
adc
and
cmove
mov
push
sub
mov
outs
cmp
(bad)
mov
or
scas
jne
pop
xor
scas
jne
cmp
push
cli
rcr
sbb
pop
mov
mov
in
in
lock
mov
mov
xor
dec
out
mov
mov
sti
ins
jmp
(bad)
mov
mov
sub
push
sbb
pop
lods
loop
vsqrtss
mov
fdivr
jmp
je
xor
scas
mov
and
out
cmp
in
loop
in
jns
push
outs
pop
jno
inc
push
enter
cmps
xor
ins
repz
pop
stc
frstor
inc
(bad)
fldenv
xor
shl
sub
inc
jmp
xor
mov
gs
xlat
cmps
adc
cdq
imul
jp
adc
push
fs
push
sbb
gs
xchg
xlat
shl
sub
dec
mov
sbb
fidivr
add
mov
or
jns
or
ret
dec
aas
adc
mov
ins
push
popa
sbb
dec
inc
or
mov
cmc
scas
outs
div
daa
mov
call
push
cmp
push
popf
sub
stos
mov
int
pushf
adc
push
jae
cmp
push
les
ja
fist
rol
ins
into
ss
test
xor
pop
imul
xor
ret
scas
loop
into
or
imul
adc
jp
fistp
sub
add
adc
adc
mov
add
loop
leave
jns
mov
outs
hlt
mov
fdiv
mov
mov
add
ja
adc
mov
div
(bad)
mov
arpl
sti
mov
add
loope
les
je
mov
xor
jnp
call
pop
mov
(bad)
rcl
sbb
fs
mov
add
cmp
das
mov
dec
add
sti
leave
pop
test
sbb
xor
mov
sti
(bad)
fwait
jae
push
in
cmp
or
cmp
arpl
arpl
dec
adc
pushf
adc
add
jl
retf
retf
out
or
test
pop
test
call
arpl
or
mov
adc
mov
inc
adc
mov
out
sbb
inc
sahf
mov
out
mov
push
jp
jb
lock
bndldx
out
ret
xor
mov
push
das
ins
jmp
push
mov
int3
mov
adc
cmp
and
add
data16
dec
mov
test
lea
push
clc
or
int3
cli
cmp
jecxz
mov
xor
sbb
inc
push
fs
popf
test
sbb
mov
outs
cmp
ins
jne
mov
in
or
inc
push
sub
dec
xor
cld
sbb
cmp
and
sar
sar
push
or
sbb
stc
lahf
int
int
int
mov
loopne
loop
(bad)
adc
sbb
push
dec
cmp
neg
(bad)
fisttp
mov
enter
imul
cdq
out
cdq
jne
out
inc
mov
ror
push
mov
jle
jnp
push
push
cmp
das
mov
xchg
(bad)
or
mov
fadd
mov
std
lahf
pop
sub
jnp
mov
xor
ja
jmp
sbb
add
mov
inc
mov
xchg
pop
stc
icebp
xchg
sti
sub
jge
out
idiv
and
push
enter
push
lods
add
mov
add
inc
sahf
call
cmp
mov
or
xchg
movs
mov
add
adc
adc
cmps
jl
sub
out
dec
repnz
jmp
fwait
and
sub
pop
jno
and
sub
aas
push
xchg
ret
in
imul
xchg
xchg
jns
xchg
jp
adc
rol
ds
dec
xor
jno
(bad)
stos
fucomip
jne
sub
dec
(bad)
sti
mov
mov
sbb
inc
pop
(bad)
sbb
and
xchg
out
repz
sub
dec
sbb
jge
in
xlat
and
div
ret
xor
inc
xchg
mov
shl
dec
dec
faddp
pop
dec
push
sbb
retf
mov
inc
mov
mov
(bad)
fidiv
loop
stos
test
sub
iret
push
test
out
std
ret
xchg
adc
push
retf
inc
jecxz
rcl
mov
mov
xchg
nop
lds
popf
xor
ret
aad
jmp
add
inc
movs
xchg
jle
jae
jle
dec
or
mov
es
mov
(bad)
sbb
mul
inc
mov
retf
xchg
in
int
(bad)
cdq
sbb
mov
in
inc
jnp
sub
(bad)
fisub
pop
out
sub
iret
in
repz
mov
jmp
dec
int3
hlt
cmp
mov
ficom
test
push
push
mov
pop
test
lds
ja
gs
fdiv
std
cld
popa
cmp
int3
mov
pop
mov
xor
mov
mov
test
and
xchg
inc
sti
xor
mov
clc
ja
test
mov
mov
icebp
push
xchg
cmps
jae
push
mov
sbb
jmp
sub
sbb
test
sub
iretw
scas
jmp
add
sbb
pop
push
js
pop
data16
nop
dec
jae
xchg
scas
mov
stos
sbb
and
mov
mov
inc
adc
mov
sub
xor
lea
inc
fs
bnd
adc
(bad)
out
imul
jle
loope
in
scas
retf
fnstcw
or
movs
inc
in
in
mov
jbe
mov
jb
out
pop
mov
pop
fidiv
aaa
hlt
push
add
inc
dec
mov
ret
dec
cmp
out
push
ror
xor
stos
out
es
retf
mov
mov
fwait
dec
fadd
jg
fst
test
push
mov
sbb
stos
jle
sbb
outs
cmps
cmp
call
movs
push
movs
cmc
(bad)
hlt
mov
pop
jb
(bad)
pop
enter
mov
loop
fadd
jnp
push
push
or
or
pusha
xchg
div
push
dec
addr16
(bad)
(bad)
pusha
addr16
or
enter
aaa
mov
inc
jl
retf
pop
sbb
xor
(bad)
int3
adc
les
or
js
jo
lods
repz
mov
dec
inc
mov
sahf
aam
and
pop
push
out
or
xchg
mov
call
loope
daa
aam
sbb
adc
inc
xchg
pushf
fist
and
(bad)
adc
jmp
out
aas
adc
enter
cmc
data16
inc
mov
cld
inc
sbb
jg
ds
dec
aad
jl
sar
cdq
push
call
and
sbb
into
(bad)
push
push
mov
and
dec
int3
mov
scas
jle
int3
ins
cmp
push
fist
bound
pop
pop
ret
call
or
clc
(bad)
push
jmp
dec
mov
sub
add
cs
xor
dec
loop
inc
or
xchg
push
xchg
aad
dec
push
jecxz
xor
imul
cld
rcl
or
mov
adc
fdivr
pop
ret
dec
adc
xchg
cmc
push
aad
dec
mov
jmp
retf
dec
or
mov
inc
retf
mov
call
jl
(bad)
jl
cmp
xchg
ret
shl
push
mov
mov
aaa
xor
retf
jge
shl
pop
and
xchg
stc
mov
sub
push
fdivr
and
outs
lahf
add
movs
adc
push
js
les
gs
adc
int3
arpl
mov
mov
sbb
lods
sti
mov
sbb
cmc
pop
test
xor
data16
les
or
out
pop
mov
or
xor
dec
(bad)
setb
adc
xor
sbb
and
mov
(bad)
xor
rol
inc
add
pop
mov
dec
shr
add
call
jmp
push
cmp
cs
xor
xor
jecxz
out
in
out
dec
sub
sbb
sub
inc
std
xor
and
sub
jae
adc
call
dec
out
add
and
(bad)
cmp
pop
mov
add
pop
dec
gs
fcom
sub
push
ins
dec
and
fild
or
xor
pusha
jbe
ss
imul
aad
lds
loopne
pop
dec
lods
mov
adc
cmps
pusha
shl
lods
sub
nop
xor
iret
jp
and
pop
jnp
loopne
lds
pop
fucom
mov
lods
cmps
pop
cmp
xchg
mov
repz
sbb
(bad)
push
or
mov
in
push
sub
sub
in
in
ds
cmc
xor
popa
fiadd
cdq
dec
leave
sub
add
xchg
sub
xchg
mov
dec
stc
aad
cmp
(bad)
xor
jp
pop
cmp
mov
or
outs
cmp
and
lea
fcomp
or
mov
aad
push
push
ror
outs
or
sbb
(bad)
inc
push
mov
movs
movs
into
mov
push
adc
enter
test
mov
mov
repz
pop
test
js
leave
leave
xchg
pop
adc
jge
popa
mov
sbb
loopne
cmp
adc
push
ja
lds
sti
pop
(bad)
mov
xor
not
inc
popf
jmp
xchg
jg
fs
sbb
shl
pop
leave
retf
mov
mov
mov
fstp
(bad)
sbb
popf
ins
fdiv
jmp
out
mov
inc
xchg
xchg
shl
xor
daa
xchg
dec
stos
xchg
mov
pop
aas
push
rcl
inc
mov
jl
sahf
shl
xchg
cdq
cli
xchg
lods
jnp
sub
(bad)
fst
movs
jmp
jb
push
cmps
mov
out
es
sub
aaa
jnp
popa
xlat
test
shl
push
jns
xchg
adc
jne
test
les
fcomp
sub
test
sahf
mov
pushf
sti
pusha
pushf
xor
int3
fsub
cli
jnp
jnp
mov
lea
xchg
add
fs
pop
or
or
ss
mov
xchg
cld
lahf
cmps
mov
inc
add
(bad)
mov
rcr
jne
(bad)
mov
mov
movs
push
sub
or
movs
js
mov
daa
cmp
(bad)
mov
push
dec
les
fcmovnbe
inc
fmul
mov
ficom
push
in
and
xchg
ds
daa
push
test
sbb
scas
xor
(bad)
shr
bound
daa
cs
into
in
sahf
jae
sbb
or
xchg
jp
fwait
adc
sub
mov
shl
call
jbe
lock
ror
mov
push
pop
(bad)
cmp
push
leave
push
and
adc
aas
(bad)
jmp
cli
call
push
or
pusha
inc
(bad)
mov
sub
imul
not
sub
push
mov
jo
sub
xchg
in
xchg
sbb
mov
jnp
mov
int
mov
outs
popa
jne
push
nop
add
xor
mov
nop
aaa
mov
mov
outs
or
jns
cmps
sub
imul
mov
adc
mov
and
or
mov
dec
sti
stos
popf
jge
into
aas
fwait
int3
push
in
xor
outs
jb
outs
mov
mov
clc
sub
sbb
lea
xchg
jl
pop
and
jl
nop
mov
xor
not
add
(bad)
call
neg
sbb
cs
nop
cmp
inc
cli
pop
cmp
jge
adc
test
shl
push
mov
dec
in
push
ss
gs
pop
push
mov
in
adc
test
ins
aad
and
cmp
push
shr
mov
not
repnz
pop
jae
mov
push
cmp
and
xchg
movs
xchg
and
add
push
lods
sub
adc
push
cmp
xchg
mov
sbb
lods
movs
lods
add
dec
cdq
sub
dec
adc
inc
test
mov
dec
inc
shl
push
cdq
ja
jo
lods
sbb
int3
mov
pushf
mov
sub
push
out
cmp
test
jnp
movs
mov
in
xchg
add
fisub
out
rcr
dec
clc
adc
mov
add
push
pop
addr16
(bad)
lock
rcr
inc
mov
mov
(bad)
iret
adc
imul
int3
dec
jbe
pusha
jns
stos
xor
cmp
popa
int
inc
mov
inc
lock
jmp
dec
daa
mov
and
xchg
mov
pop
repnz
jnp
xchg
cs
call
mov
clc
leave
dec
bound
pop
and
mov
outs
out
adc
xchg
sub
das
push
pushf
or
in
mov
inc
jne
ror
fcmovnb
cmp
sub
inc
fwait
pop
pop
imul
cmps
addr16
sar
(bad)
inc
push
fcom
xchg
mov
test
inc
jl
add
in
lahf
imul
mov
xchg
movs
or
movs
mov
add
inc
xlat
jmp
mov
add
mov
lea
add
cmp
lea
jl
cmp
repnz
mov
dec
jae
and
movs
sbb
stc
push
es
cmp
cli
mov
and
adc
pop
hlt
and
das
idiv
addr16
jmp
les
loope
into
and
ins
fldcw
mov
and
push
jno
adc
out
cwde
jge
daa
fimul
jmp
inc
lahf
dec
jp
cmp
jp
xchg
data16
xchg
out
fnstsw
ja
lods
xor
jne
outs
jne
pop
and
mov
cmps
pushf
nop
and
bound
loope
jle
ror
addr16
inc
sti
mov
pop
and
pop
jbe
addr16
jmp
xlat
test
aaa
inc
mov
lds
imul
cli
sub
mov
outs
add
jmp
and
stos
xor
out
std
add
add
mov
loope
retf
xlat
dec
movs
clc
clc
xor
pushf
test
adc
int
mov
adc
mov
popa
sub
xchg
add
dec
xor
int
sbb
sbb
sbb
fistp
jmp
bound
daa
call
pop
xchg
shl
repnz
mov
call
dec
sbb
ret
sub
cmp
into
mov
mov
cmp
xchg
fwait
test
scas
mov
or
sbb
fsubr
sar
aaa
je
sbb
pop
dec
sub
xchg
jge
cmp
inc
jbe
fstp
mov
fimul
sbb
cmps
int3
fld
fsubrp
xor
xchg
mov
bound
mov
mov
iret
(bad)
retf
sti
jecxz
jmp
call
rol
icebp
mov
movs
xor
xor
out
test
jns
xchg
shl
push
sub
pop
push
jno
aam
cld
idiv
xchg
pop
jecxz
or
push
cmp
jae
pop
mov
xchg
enter
or
or
or
pop
add
adc
xchg
mov
fs
sbb
popf
mov
and
add
pop
xchg
sbb
sbb
ret
push
xchg
xchg
cli
push
and
outs
pop
mov
mov
jl
loope
call
sbb
jmp
test
into
dec
cmps
int3
outs
movs
clc
pop
cmp
xor
xchg
adc
sbb
ss
and
mov
and
aaa
(bad)
xchg
lods
sub
bound
sti
push
push
xchg
inc
push
nop
int3
dec
pop
cmp
cmps
or
xchg
xor
mov
or
(bad)
xchg
xlat
pop
(bad)
sbb
mov
pop
(bad)
mov
dec
ror
mov
xchg
mov
cmc
fcmovnu
movs
adc
out
(bad)
cmp
mov
mov
adc
jg
(bad)
mov
adc
add
pop
cli
adc
inc
pop
sbb
dec
into
mov
loop
imul
push
jae
mov
add
sahf
sub
imul
push
push
xchg
jecxz
mov
cmc
pop
adc
bound
dec
cmp
out
retf
fbld
sbb
inc
xor
shr
dec
in
das
mov
mov
repnz
loopne
push
cli
pop
push
and
pop
jle
mov
mov
inc
std
into
mov
mov
and
xchg
pop
in
jmp
inc
ret
push
xchg
call
mov
xor
mov
mov
sbb
(bad)
in
fs
jmp
jbe
stc
nop
xor
aas
(bad)
fdivr
and
js
(bad)
shr
imul
xor
leave
scas
fdivr
stc
es
test
fcmove
mov
mov
inc
add
mov
mov
push
stos
mov
sbb
jns
ins
pop
and
pop
xor
test
aaa
pop
inc
or
pop
mov
xor
ret
xor
jg
mov
fisttp
je
imul
fnstsw
shl
cmp
jle
add
mov
aaa
inc
push
call
imul
pop
dec
lahf
pop
cmp
sub
arpl
inc
imul
loop
sbb
inc
push
dec
pop
mov
mov
add
rol
test
mov
jge
sub
or
js
xor
cmps
push
inc
xor
jbe
call
cmp
rol
adc
jle
cmp
stos
sbb
std
ficomp
out
cmp
xchg
inc
xor
sub
icebp
into
movs
not
pmulhw
mov
cmp
sbb
jno
dec
clc
or
fdiv
leave
inc
mov
xchg
das
dec
pop
fmul
jge
sub
mov
dec
lahf
push
shl
loop
and
das
out
scas
shl
mov
popf
push
(bad)
shr
sub
shl
cmp
aaa
add
add
cld
and
push
push
xor
daa
lahf
std
jnp
mov
mov
and
(bad)
sub
pushf
aam
or
pop
scas
adc
out
push
addr16
int
adc
and
movs
and
cli
sub
jp
lahf
or
rcr
jle
and
addr16
dec
dec
pop
and
in
sahf
aam
jge
sbb
int3
adc
clc
lods
xchg
hlt
dec
or
cli
cmps
adc
mov
cs
mov
mov
add
dec
ja
adc
push
stc
or
inc
xor
xstore-rng
cmps
inc
stos
jge
dec
div
jmp
inc
dec
sub
adc
mov
cmp
sub
addr16
shl
add
loop
dec
lods
ffreep
or
mov
lods
fisttp
(bad)
fisttp
dec
jl
and
jmp
xchg
in
lds
mov
fidiv
pop
rcl
outs
addr16
pop
cmp
sbb
jg
xor
imul
loope
push
lahf
mul
adc
and
das
aam
add
daa
sahf
fsub
jmp
adc
cmps
ds
push
scas
movs
inc
jae
mov
add
pushf
arpl
inc
jbe
cmc
out
pop
jmp
cmp
shr
std
cmps
sbb
cld
test
pop
in
cli
sub
cld
push
xor
les
push
fcomp
out
lds
push
pop
xchg
mov
and
push
xchg
daa
into
outs
xor
sbb
push
lock
jns
(bad)
jecxz
sub
fst
sub
or
sbb
mov
dec
sbb
jo
icebp
mov
xor
xchg
fmul
jmp
add
mov
and
sbb
adc
adc
sar
dec
popa
add
rcl
xlat
jle
(bad)
xchg
test
fld
and
cmp
sbb
jp
outs
imul
scas
xor
mov
jne
sub
xchg
aas
stos
push
iret
sbb
pop
cmp
sti
ss
or
lea
or
mov
add
adc
lock
popf
and
test
xor
cwde
imul
xchg
cld
jmp
jns
stos
pop
cmp
ret
inc
jg
popa
fidivr
cmp
push
je
arpl
and
shr
rcl
mov
and
jo
mov
out
pop
in
mov
(bad)
mov
mov
daa
adc
inc
jo
rcr
pop
std
addr16
addr16
dec
adc
jae
pop
push
jl
jmp
repnz
pop
ret
test
mov
pushf
sar
cmc
retf
ret
imul
dec
mov
xchg
dec
jb
(bad)
xor
adc
add
int
or
inc
cmp
aad
jmp
outs
and
jg
aam
cmps
inc
loop
sti
mov
mov
cs
sbb
fbld
add
mov
outs
add
inc
test
mov
dec
sbb
in
jecxz
jmp
stc
movs
pop
pop
mov
jnp
jecxz
lock
dec
xchg
or
mov
div
popa
pop
mov
sbb
int3
xchg
cwde
pop
jbe
adc
adc
sbb
addr16
or
cmp
sbb
inc
add
addr16
add
stos
adc
rol
addr16
pop
xor
push
arpl
call
xor
and
adc
pop
repnz
jne
or
dec
adc
aas
aaa
jne
push
xchg
mov
aaa
retf
cli
lods
stos
aaa
(bad)
daa
or
sbb
es
adc
pusha
sub
ret
shr
add
mov
dec
push
push
jmp
xchg
in
(bad)
and
xor
dec
adc
xor
bound
icebp
dec
ins
lea
sbb
nop
inc
scas
dec
pop
into
jmp
sub
pop
retf
movs
and
int3
adc
aam
ins
hlt
inc
mov
adc
loopne
adc
xchg
fild
jmp
or
sub
bound
or
jle
mov
xlat
fprem1
mov
mov
adc
sub
stos
clc
leave
mov
aam
sbb
inc
out
xor
mov
lea
and
repz
addr16
push
xchg
pop
mov
mov
les
cwde
cli
enter
aaa
test
pop
scas
push
dec
adc
jp
test
cmps
mov
jp
push
push
test
sub
xlat
xor
in
push
and
jbe
add
lahf
jae
inc
das
push
cdq
xor
(bad)
pusha
xchg
inc
ret
out
imul
neg
lock
jge
pop
in
sahf
xchg
add
cmp
dec
jg
sbb
adc
call
mov
push
sbb
out
in
and
hlt
sahf
movzx
inc
push
div
push
inc
test
jno
add
push
xchg
xchg
daa
cmp
into
sti
sbb
(bad)
sbb
pand
lods
inc
inc
fnstsw
js
cmp
cmps
call
ret
imul
repnz
cmp
jne
xor
jne
mov
jg
sbb
cmp
retf
pop
dec
inc
daa
out
shl
fnsave
sbb
adc
pop
push
out
bound
cmp
sub
dec
xlat
test
lds
mov
push
iret
jge
shl
in
jnp
pusha
test
add
daa
mov
adc
add
lahf
mov
(bad)
popa
xlat
sbb
pusha
arpl
cld
xor
jge
aas
mov
jnp
cmp
fcomi
(bad)
xchg
cwde
es
push
call
jl
adc
add
xchg
pusha
inc
pop
lds
pop
pop
das
pusha
mov
out
inc
not
in
mov
sar
jmp
hlt
dec
cmps
cmp
dec
inc
sbb
pop
ss
dec
fst
push
icebp
pop
sub
icebp
jecxz
inc
dec
xor
test
mov
mov
jg
leave
mov
add
lds
scas
and
mov
mov
sti
leave
jmp
inc
jmp
shl
cs
xchg
or
xor
mov
movs
arpl
cmp
lock
fsubrp
cwde
or
xchg
ror
mov
push
xchg
xchg
mov
push
and
fld
repz
jne
cld
sbb
sbb
mov
(bad)
gs
and
data16
sbb
push
cmp
or
arpl
mov
sub
cmp
cmp
adc
ret
addr16
es
xchg
fnstcw
or
sahf
push
aad
inc
jo
sub
or
das
push
popf
dec
dec
pop
dec
loope
lds
xor
mov
push
and
frstor
jae
sub
imul
cdq
lods
rep
push
in
popf
xchg
es
stc
arpl
fst
or
cmps
mov
cmp
clc
(bad)
in
jno
mov
(bad)
(bad)
pop
cdq
push
ror
js
je
mov
loope
xchg
sub
xlat
sahf
enter
push
scas
popf
pop
push
clc
loope
jno
std
ret
xor
mov
(bad)
clc
push
xchg
imul
mul
adc
inc
xchg
xchg
test
and
sti
fsubr
les
test
sbb
fadd
icebp
xchg
sub
sbb
aas
push
les
pop
cmps
(bad)
cwde
pop
push
xchg
in
and
pop
inc
adc
shl
and
mov
ret
adc
dec
repz
stos
mov
sub
ds
int3
jmp
add
add
dec
push
xchg
shl
test
push
xchg
loop
arpl
adc
daa
add
shr
pop
inc
xor
shl
in
sub
pushf
push
or
ret
xchg
fs
or
cwde
xlat
mov
repnz
mov
dec
loope
jb
xchg
and
sub
(bad)
mov
(bad)
and
xchg
cli
or
out
jno
lock
daa
push
daa
imul
outs
addr16
ds
retf
adc
adc
pop
mov
ins
out
stos
inc
mov
scas
adc
scas
ss
(bad)
sub
push
fld
jb
retf
gs
(bad)
sbb
jae
movs
sbb
arpl
inc
mov
shr
out
jl
push
cmp
push
xor
inc
xor
jno
push
xchg
jge
test
fsub
pop
test
rol
xchg
jbe
push
std
ins
mov
pop
sbb
test
lods
cmps
pop
lahf
xor
jecxz
out
and
(bad)
and
ins
xor
pop
sub
and
outs
out
sahf
out
arpl
mov
or
std
shl
ja
or
test
ficomp
cdq
sbb
ins
in
outs
int
xchg
pop
adc
mov
cmp
fst
rcr
jl
aad
and
mov
cli
popf
and
jno
jmp
sub
or
or
into
int3
jmp
mov
retf
stos
sbb
fmul
sbb
mov
push
ins
pop
add
dec
outs
enter
or
fadd
rol
inc
push
mov
jp
popf
sahf
(bad)
sub
xor
aam
mov
jb
dec
loop
sub
ret
cmp
or
call
loopne
push
push
sub
out
sub
stos
int3
cwde
mov
std
jno
cmp
jp
fs
jne
imul
push
jno
les
adc
jl
pushf
or
adc
cmc
lods
aam
sub
mov
dec
movs
xlat
xor
push
fcomp
call
outs
cmp
neg
aam
jns
xor
daa
jnp
mov
in
call
xchg
shl
bound
stos
adc
or
mov
xor
das
dec
(bad)
inc
xor
cmp
(bad)
cs
add
clc
pop
inc
dec
scas
mov
inc
in
mov
rcr
jno
enter
jmp
shl
in
push
push
adc
pop
jo
ficomp
sbb
xlat
shl
mov
mov
shl
dec
test
pop
scas
je
cvtpi2ps
and
jbe
ss
mov
out
sahf
cdq
cmp
fstp
test
adc
mov
sbb
sbb
jb
xor
call
jmp
or
xchg
xchg
lods
dec
ret
hlt
add
push
ss
jb
hlt
nop
js
ret
daa
mov
pop
loope
aam
cdq
push
mov
dec
imul
adc
ins
clc
cmp
lock
xlat
(bad)
(bad)
and
jecxz
stos
mov
dec
int
sbb
jp
sub
rcl
lock
add
pop
jbe
cmp
push
sub
test
sub
je
popf
mov
iret
cmp
imul
in
xchg
shr
icebp
cmp
aad
out
cmp
mov
movs
push
call
or
sbb
loopne
cmp
cmps
sbb
mov
mov
dec
jmp
in
mov
ret
int
add
add
sub
dec
pushf
push
cs
push
jnp
in
mov
inc
sbb
mov
mov
into
jp
ins
ins
cld
test
repnz
or
jmp
dec
mov
mov
inc
and
out
sbb
int3
fwait
jno
adc
jg
adc
xchg
cdq
mov
je
stos
sub
in
into
cwde
(bad)
jo
xchg
ss
fdiv
sahf
mov
or
dec
jb
dec
jbe
scas
xchg
daa
sahf
rcr
leave
mov
inc
jge
cmp
dec
push
push
dec
bound
xlat
inc
push
mov
leave
hlt
mov
sbb
sti
mov
daa
jle
popa
and
xchg
lea
sbb
mov
mov
sub
xor
xor
cmc
adc
dec
add
or
and
jmp
push
inc
fnstsw
jg
sti
pop
jg
adc
jge
in
xchg
ds
pop
inc
loop
push
mov
xchg
test
add
aaa
sub
repnz
out
cmp
or
inc
(bad)
mul
pop
mov
cmp
mov
test
ins
push
cmps
fidiv
push
jo
inc
cmc
sbb
sbb
into
inc
mov
jns
(bad)
push
add
popa
cmp
and
xchg
pusha
sub
jbe
fwait
icebp
sar
ret
sbb
mov
lock
jl
mov
sub
popf
mov
test
icebp
adc
movs
mov
push
ins
ins
inc
in
repnz
xchg
fsub
icebp
imul
shr
fild
adc
(bad)
cmp
mov
adc
push
xchg
push
lock
(bad)
sub
and
aaa
and
xor
call
adc
add
daa
(bad)
jmp
test
mov
or
push
outs
sar
stc
dec
pushf
pop
outs
mov
test
jb
xchg
mov
sbb
sbb
jp
cs
push
dec
jge
and
pop
mov
adc
ja
mov
xchg
(bad)
mov
unpckhps
gs
int3
fwait
sbb
sbb
mov
sub
pop
sub
popa
pushf
(bad)
dec
mov
scas
xlat
mov
outs
sub
popf
mov
movs
dec
adc
aaa
cmp
and
paddq
cmp
dec
cmp
iret
hlt
stc
xchg
xchg
push
lods
xchg
sahf
sub
cmc
sub
sbb
(bad)
bound
movs
xchg
(bad)
test
hlt
push
mov
fwait
pop
mov
rcr
ror
popa
sti
lods
neg
(bad)
lods
cli
icebp
jmp
mov
or
retf
out
push
adc
imul
pop
and
or
jl
test
imul
(bad)
mov
mov
mov
inc
add
mov
sbb
bound
xchg
mov
das
and
aam
push
inc
sub
scas
(bad)
pop
ret
call
(bad)
imul
push
leave
adc
push
jmp
(bad)
shr
adc
pop
clc
mov
ins
or
sub
pushf
ja
mov
lahf
dec
fcom
imul
push
test
imul
xchg
sub
aad
test
push
xchg
int3
push
in
stos
xchg
inc
aam
jns
cmp
xchg
xchg
sbb
push
sub
iret
sub
nop
mov
cmp
mov
mov
addr16
add
hlt
sar
sub
push
push
call
das
add
pop
or
jb
cmp
dec
sti
push
popf
sbb
div
lds
and
fild
or
pop
rol
xchg
jb
cmp
fnstenv
inc
int
sbb
jnp
mov
mov
cmp
lods
imul
sbb
push
fstp
sub
faddp
adc
ror
pop
mov
adc
mov
xchg
std
mov
fsubrp
mov
les
rol
and
and
test
nop
cmps
dec
dec
push
retf
push
gs
pop
call
push
jl
sbb
jg
fdiv
popf
mov
xchg
add
jle
int
aad
xor
ret
xor
mov
imul
mov
mov
mov
out
jne
or
jp
(bad)
int3
push
xchg
xor
inc
jns
jns
adc
jge
test
lods
and
or
adc
adc
push
jle
push
sub
ins
popf
loopne
bound
jae
pop
mov
fnstsw
imul
test
cmp
addr16
das
push
cmp
test
imul
push
mov
call
dec
test
jmp
js
mov
jae
out
or
xchg
adc
xchg
loopne
sub
pop
mov
xor
out
ss
cli
aad
call
sahf
fst
xor
pop
jno
dec
sub
ins
leave
scas
sbb
jmp
dec
push
lods
test
pushf
fisubr
inc
into
cdq
pop
pop
jne
out
cmp
movs
cmp
xor
mul
cmc
(bad)
repz
(bad)
(bad)
push
mov
std
and
sub
test
rcl
jo
jno
mov
mov
imul
cmps
in
mov
mov
loop
push
(bad)
cmp
mov
push
inc
pop
push
gs
ins
or
fcmovnb
push
jl
cwde
xor
sub
loope
or
cmps
dec
mov
jne
mov
jmp
ins
imul
jns
adc
int3
jl
mov
adc
adc
sub
mov
(bad)
imul
mov
out
pop
xchg
(bad)
or
test
sub
ror
enter
outs
mov
xchg
sub
mov
sbb
push
cli
pop
clc
cmp
sub
shl
sbb
(bad)
aam
inc
stos
adc
xchg
popa
scas
sti
add
jae
retf
jle
adc
inc
inc
(bad)
cli
outs
les
test
ror
mov
dec
into
leave
push
les
pop
into
movs
or
add
jns
xchg
add
loopne
cli
and
call
test
push
add
fild
pop
jae
adc
dec
(bad)
cmps
jmp
inc
ss
pusha
sbb
jbe
lds
and
cmp
bound
fs
or
dec
pop
push
out
test
enter
nop
mov
mov
mov
cmp
mov
in
jne
in
loopne
fsub
push
xchg
je
cmp
sbb
pop
push
call
sbb
out
bound
sbb
mov
xchg
scas
aad
pop
push
dec
add
add
jge
lahf
out
(bad)
sub
imul
pop
cmp
dec
push
das
mov
(bad)
push
fiadd
pusha
stc
aaa
jns
into
inc
add
inc
pop
jae
push
hlt
outs
sub
scas
or
cs
fisttp
push
pop
cwde
icebp
in
pop
ja
mov
pop
imul
imul
mov
push
(bad)
mov
sub
and
add
popa
adc
dec
sbb
jmp
fild
push
enter
sub
fst
daa
pop
mov
pop
bound
mov
xor
lea
test
or
scas
(bad)
dec
mov
dec
ficom
jae
or
xchg
jmp
pop
daa
xor
pop
scas
xchg
in
cmps
inc
pop
cwde
or
jno
cmp
retf
jb
jl
movs
and
fstp
sar
xchg
pop
lods
jmp
sub
and
je
sbb
aas
retf
adc
pop
adc
xacquire
mov
mov
sbb
xlat
and
mov
mov
and
cmc
out
adc
ins
movs
dec
(bad)
aad
inc
adc
push
test
sub
xchg
nop
xor
retf
inc
sub
mov
mov
ins
xor
pop
jp
and
xchg
std
sub
jb
out
mov
mov
push
vxorps
sub
retf
cwde
push
push
mov
mov
pushf
sub
mov
mov
inc
xchg
xor
idiv
mov
test
mov
xchg
or
into
pop
mov
in
das
xchg
in
cmp
nop
popa
(bad)
lock
xchg
sub
inc
out
imul
xor
ss
lods
mov
lods
sbb
mov
cmp
mov
push
lods
and
xchg
cmp
xchg
push
js
push
sub
nop
sbb
push
sbb
rcr
scas
fdiv
dec
sbb
imul
js
sbb
js
pushf
sbb
pusha
pop
les
rcl
dec
rcl
loope
call
cli
mov
inc
stos
jg
lods
cmp
adc
js
mov
lea
push
int3
hlt
aas
xchg
push
mov
cmp
xlat
ror
call
xlat
fst
(bad)
outs
jl
sub
in
aaa
dec
stc
jmp
or
push
fisub
lahf
sbb
jmp
int3
pop
nop
clc
xchg
sti
mov
dec
or
xlat
lea
dec
or
test
popf
fwait
(bad)
and
das
retf
mov
jp
and
aaa
dec
stos
mov
adc
dec
add
and
jl
popf
ficom
xchg
xchg
cmps
mov
(bad)
sub
xor
add
dec
stos
mov
cmp
or
retf
or
sbb
test
popa
cmps
mov
xchg
sub
mov
retf
(bad)
jae
mov
or
nop
pop
inc
jae
dec
jnp
sar
add
mov
inc
push
out
loop
rcl
mov
jmp
std
push
add
adc
push
xor
popf
jno
cmp
inc
push
jmp
test
pop
ret
xchg
pushf
fadd
inc
pop
xor
or
inc
repz
inc
push
repz
cmc
popf
mov
or
iret
lods
xchg
and
outs
and
pusha
out
dec
loope
push
clc
daa
jle
sbb
jmp
and
and
jae
jno
mov
add
mov
in
dec
mov
cmp
les
in
adc
pushf
adc
loop
push
inc
dec
sbb
push
movs
xchg
mov
adc
scas
mov
mov
mov
jmp
cwde
jbe
(bad)
enter
cmp
or
imul
jmp
sbb
mov
jae
test
or
loop
mov
mov
push
hlt
pop
push
cmc
or
call
jp
lds
fmul
outs
xlat
sub
mov
add
push
xor
scas
scas
(bad)
retf
and
xor
in
sub
sbb
jle
in
mov
sbb
(bad)
cmps
jmp
lock
xchg
cmc
adc
lea
dec
xor
adc
ret
jb
cdq
mov
ja
loop
cmp
and
aad
fwait
rol
cdq
test
xchg
push
iret
arpl
sbb
add
dec
mov
cmp
idiv
push
sub
sbb
sub
mov
cdq
loope
mov
outs
and
mov
mov
hlt
xlat
cwde
sbb
test
ret
mov
in
add
movs
repnz
popf
jbe
xlat
out
movs
mov
sbb
mov
jb
scas
push
daa
test
push
xor
inc
dec
or
in
stos
repz
mov
bound
cmp
es
(bad)
stc
nop
add
jl
dec
xchg
push
mov
dec
cmp
ja
loopne
fisub
leave
add
outs
rcr
dec
cwde
into
pop
sub
sbb
enter
mov
pop
lea
jg
sar
add
pop
inc
daa
mov
mov
das
fsubr
mov
sbb
push
jmp
test
aam
popf
or
cld
mov
in
push
sbb
cld
xchg
leave
shr
sub
jl
repnz
cmp
pop
stos
inc
jle
or
jecxz
cmp
mov
fs
jns
add
jp
add
in
sbb
ficom
cmp
out
ja
scas
cmp
fbstp
into
push
xchg
frstor
inc
in
push
(bad)
jmp
adc
jmp
inc
stc
je
jo
int3
mov
jmp
rep
pop
inc
cld
cmp
dec
cmp
stc
cwde
mov
dec
jno
sbb
daa
test
mov
loopne
push
xchg
test
and
in
loope
jae
push
add
sbb
xchg
dec
das
aas
(bad)
dec
inc
inc
fld
inc
xlat
test
retf
aas
add
mov
int3
fist
mov
enter
sbb
push
sub
int
xchg
mov
fstp
push
nop
dec
rol
add
mov
xor
mov
adc
retf
add
packssdw
ins
adc
aad
int3
pop
and
sti
push
into
or
test
ins
shl
mov
minps
rcr
aas
mov
jns
and
inc
mov
lods
sbb
ret
or
mov
cmc
jecxz
(bad)
inc
mov
push
(bad)
out
mov
js
push
movs
inc
test
fucomp
xchg
les
out
inc
inc
jb
or
ret
fimul
xchg
xchg
mov
xchg
inc
addr16
mov
jl
adc
or
inc
mov
push
nop
mov
sbb
test
lds
gs
mov
pop
ret
jge
mov
nop
inc
test
cmp
int
nop
inc
or
mov
push
jp
cwde
add
stos
cmps
xchg
pop
inc
push
jg
sbb
imul
loop
jno
add
popa
sub
sbb
xchg
push
or
jecxz
in
cli
ret
xor
in
mov
xchg
or
leave
aas
outs
je
sbb
lods
mov
out
or
mov
(bad)
add
popa
cmp
xchg
out
xchg
imul
out
push
fist
or
shl
mov
and
sub
test
pop
fwait
add
sti
cs
(bad)
fisubr
inc
fs
popf
dec
mov
dec
sar
fnstsw
inc
and
and
mov
pusha
sub
loopne
xchg
jno
fwait
or
in
xor
ins
into
mov
sbb
pop
xor
cli
xlat
outs
jne
fldcw
xchg
push
sub
sub
gs
imul
adc
or
dec
cld
loope
push
movs
or
jo
adc
and
in
enter
loope
mov
and
pop
fsubr
or
jl
in
xor
cmp
sti
into
add
shr
cmp
xor
pop
jge
loope
push
js
xchg
(bad)
mov
mov
ds
xchg
pop
(bad)
std
div
push
adc
into
sbb
and
call
dec
enter
cmps
aad
loope
int
ret
lock
outs
mov
adc
fcomp
and
xchg
jo
mov
cmp
sbb
and
(bad)
add
mov
mov
jecxz
loop
test
outs
lods
stos
cmp
jbe
jno
loope
mov
mov
pop
xor
cli
scas
cmc
xchg
dec
jle
inc
pop
jmp
dec
cmp
cdq
xor
pop
fidiv
mov
lds
inc
mov
xchg
xchg
fcom
test
or
pusha
lahf
xchg
push
jmp
sub
repz
dec
jle
(bad)
movs
sbb
push
sti
daa
sahf
arpl
xor
cmp
or
dec
mov
and
xchg
inc
mov
lds
lea
neg
xor
xor
stc
mov
cmps
sbb
dec
pop
loop
sar
push
bound
outs
mov
call
mov
sar
xchg
dec
sbb
mov
mov
in
frstor
pop
ja
cdq
xchg
pop
xchg
out
into
and
push
mov
jp
push
hlt
cmps
lods
loope
int
sbb
sbb
pop
movs
imul
mov
imul
in
and
mov
out
xchg
pop
aad
adc
pop
scas
adc
rep
and
lds
imul
ret
mov
push
mov
inc
mov
test
push
icebp
adc
cmp
div
add
jp
inc
cld
test
out
and
jmp
icebp
(bad)
ins
lds
mov
test
mov
inc
dec
shr
mov
call
cmp
inc
fld
nop
xchg
faddp
adc
mov
or
cmp
cmp
jp
pusha
(bad)
gs
pop
dec
dec
cmps
pop
enter
scas
sub
dec
push
pop
mov
movs
xchg
mov
fdiv
popa
mov
or
sub
das
and
mov
and
scas
outs
lods
jae
add
xchg
mov
(bad)
pusha
inc
or
test
ficomp
call
pop
sub
mov
bndstx
loopne
mov
je
xor
lea
test
jbe
jne
jo
and
pop
sbb
pop
adc
pusha
sbb
add
push
les
cmp
xchg
jns
(bad)
out
or
shl
ins
pop
clc
push
fimul
xor
stos
cli
cmp
add
add
sti
add
dec
mov
mov
retf
cmps
xchg
mov
jl
jl
adc
ret
cmp
adc
out
out
je
fiadd
sub
movs
out
adc
mov
jmp
je
in
out
out
jns
repz
mov
ins
mov
(bad)
fist
pop
fimul
jae
shr
sub
es
data16
(bad)
mov
add
call
jne
jl
mov
jle
pushf
int3
fisubr
not
stos
nop
mov
xchg
bound
(bad)
sbb
xor
and
mov
stc
mov
les
pop
imul
les
xlat
push
ror
cdq
mov
cld
sub
fadd
push
sbb
not
pop
pop
pop
push
jg
push
pushf
and
xor
in
pop
xchg
mov
pop
and
cmp
out
inc
je
jo
call
pop
xor
pop
sub
(bad)
out
dec
mov
shr
movs
push
adc
fcom
clc
or
ret
cmp
jo
xor
mov
inc
cmc
lahf
aaa
clc
push
inc
mov
aam
push
pop
gs
cmp
and
ja
ret
xor
imul
and
ja
sub
fstp
dec
scas
and
int3
mov
nop
pop
add
or
popa
pop
mov
adc
mov
push
pop
aad
lods
imul
sub
and
retf
push
jle
sar
test
(bad)
in
jne
pop
mov
jns
pop
push
mov
sbb
push
addr16
imul
mov
push
test
hlt
sbb
xor
scas
ret
cmp
xchg
xor
and
ficomp
sbb
ror
ret
iret
mov
dec
fwait
and
test
inc
sub
sub
outs
icebp
leave
pop
mov
pop
push
mov
test
call
and
sub
dec
sbb
or
jecxz
movs
xchg
dec
push
iret
shr
push
xchg
aaa
hlt
pop
mov
jae
mov
cmp
fisttp
lea
es
or
cs
ja
gs
sbb
popf
out
ins
fnsave
das
mov
pusha
dec
test
dec
sbb
icebp
dec
nop
lahf
rdpmc
mov
inc
xchg
jmp
cmp
ins
paddd
push
sbb
push
cmp
xor
setge
add
xor
mov
mov
(bad)
pop
test
leave
std
cld
or
xor
push
addr16
shl
push
ja
test
dec
nop
lods
push
xchg
add
fadd
pop
jnp
std
or
fisttp
xchg
pop
test
fdiv
sbb
mov
mov
cld
in
and
ret
push
jmp
lock
cmps
cs
mov
sub
jne
jecxz
adc
sbb
and
mov
mov
mov
call
jb
movs
daa
sti
inc
lahf
hlt
scas
aaa
push
fnsave
mov
jb
xchg
icebp
retf
jmp
cmps
pusha
add
adc
leave
sub
mov
sahf
out
ror
sti
cmps
iret
and
mov
cwde
lea
xor
outs
add
retf
pop
cdq
(bad)
(bad)
or
stc
dec
arpl
and
outs
lock
jns
enter
test
in
dec
inc
fiadd
pushf
repnz
adc
mov
aad
mov
stos
jle
mov
mov
or
mov
shl
or
out
mov
shl
aaa
xor
clc
cmps
mov
ja
mov
dec
aad
repz
mov
das
sub
cmc
sbb
and
jno
and
scas
arpl
mov
test
lds
jg
add
mov
cmp
and
cmp
jmp
xchg
lahf
fsubr
push
sub
jge
gs
lock
call
loop
mov
(bad)
xchg
cmp
xor
sahf
scas
push
mov
inc
movs
mov
xchg
jmp
ficomp
in
mov
shl
imul
push
ret
retf
adc
pop
leave
ss
jmp
data16
sbb
imul
inc
xor
(bad)
je
xchg
into
mov
call
loop
(bad)
cmp
adc
pop
fstp
loop
add
fbstp
jae
(bad)
shr
pushf
lock
adc
(bad)
jle
jo
inc
ins
ror
mov
mov
xchg
lahf
adc
and
shr
mov
pop
add
pop
xor
jmp
sub
xchg
arpl
in
add
repz
out
js
jecxz
hlt
mov
fwait
dec
cmp
xchg
jp
mov
imul
lea
dec
sar
sbb
std
mov
rol
lock
xchg
inc
push
cs
xor
dec
mov
mov
inc
xor
push
faddp
pop
and
sbb
scas
sahf
adc
jno
push
pop
int3
jo
repnz
mov
mov
repnz
cmp
and
pop
jge
sbb
int
fdiv
mov
mov
(bad)
pop
and
shr
shl
sub
in
mov
inc
data16
jnp
arpl
inc
push
inc
sbb
les
mov
sahf
ja
sbb
jnp
je
das
pop
mul
or
mov
hlt
jns
mov
pop
mov
popf
test
ficomp
js
lds
push
jle
fwait
push
out
sbb
jp
push
add
clc
mov
js
sbb
div
jno
test
and
sub
ret
add
mov
or
add
and
fadd
aam
adc
fiadd
jae
mul
or
imul
xor
fwait
xor
jl
loop
rcl
mov
popa
ja
xlat
aaa
xchg
push
pop
scas
ret
js
dec
push
jl
jge
addr16
xor
iret
pusha
push
imul
push
nop
sbb
mov
pcmpgtd
cmp
call
jb
icebp
adc
or
movs
pop
pusha
jmp
cmp
das
pop
push
pop
pop
push
arpl
xor
adc
adc
neg
lock
imul
les
hlt
or
sbb
cli
not
add
push
or
adc
jmp
iret
mov
ins
sub
mov
shl
cmp
sti
push
dec
mov
lock
les
scas
setle
cdq
add
(bad)
xlat
ins
push
loope
cdq
jmp
xchg
fwait
xchg
lahf
gs
retf
clc
std
aas
mov
scas
and
je
add
pop
je
enter
cmp
mov
das
sbb
retf
fwait
mov
fadd
xlat
and
cmp
and
adc
adc
sbb
bound
sub
enter
retf
push
adc
adc
xchg
sbb
nop
leave
or
inc
scas
push
mov
lods
jge
mov
rol
adc
inc
stc
ret
dec
(bad)
outs
mov
jge
pop
shl
cs
dec
push
stc
shl
sub
adc
lods
fdivr
fwait
or
clc
xchg
push
pop
cmc
cmc
arpl
cmp
daa
dec
out
adc
mov
inc
mov
(bad)
push
loopne
inc
xchg
imul
in
pop
(bad)
mov
fcomp
out
push
ja
repnz
cmp
int3
jo
and
mov
and
imul
rol
or
and
pusha
dec
pop
ss
in
fist
scas
mov
adc
adc
sbb
fwait
rcl
out
lods
in
(bad)
cmps
xlat
jbe
pushf
jno
shl
push
push
xchg
mov
pop
adc
ret
mov
scas
rcl
pop
push
nop
pop
jmp
loope
sahf
push
shl
pop
jne
shr
sbb
sbb
retf
(bad)
jne
cmp
scas
dec
jecxz
mov
in
cmp
sub
or
mov
sub
pop
sbb
cmps
mov
inc
or
pushf
test
lds
push
call
shl
push
loope
ins
xchg
push
into
add
push
mov
dec
aam
fadd
rol
(bad)
cwde
shr
mov
ds
push
pushf
pop
push
adc
xchg
and
push
sahf
js
inc
jnp
mov
cdq
mov
add
mov
adc
mov
mov
arpl
and
cmp
clc
ja
int3
in
imul
cmc
mov
aam
xor
mov
test
cmc
addr16
(bad)
push
call
add
mov
call
add
ror
out
mov
mov
sti
fwait
popf
jp
mov
ds
mov
mov
xchg
ins
fstp
mov
xor
or
hlt
sbb
std
mov
mov
and
pop
jmp
test
push
jl
iret
xor
mov
nop
ror
fdiv
cli
push
je
sub
dec
shl
pop
inc
or
sub
xor
cmp
lods
dec
sub
pop
adc
pop
pop
into
gs
mov
fldenv
push
add
(bad)
fnsave
mov
jns
fdivr
les
scas
fild
sub
xor
(bad)
es
sbb
popa
cmc
aam
adc
push
loope
adc
cmp
xor
jbe
mul
mov
ror
(bad)
cmp
adc
icebp
cmp
dec
cmp
mov
xor
pop
sar
jnp
ds
xchg
xchg
loop
shl
jge
mov
jl
cmps
push
fst
(bad)
dec
mov
movs
add
and
xor
mov
(bad)
fdiv
jo
inc
mov
mov
push
pop
neg
mov
jmp
gs
mov
enter
retf
push
add
inc
stos
adc
and
sar
or
pop
popa
leave
cmps
fcomp
cli
jnp
pop
mov
fnstsw
push
outs
iret
outs
stos
dec
adc
shl
int3
out
mov
jmp
add
pop
xchg
aam
aam
shr
das
adc
arpl
push
jecxz
lods
mov
mov
inc
ins
or
adc
and
ret
retf
xchg
bound
pop
xchg
mov
ins
push
fnstenv
dec
sbb
movs
les
pusha
xchg
xor
scas
sub
call
retf
mov
mov
scas
bound
push
imul
push
mov
icebp
imul
sub
mov
daa
sbb
push
or
ds
stc
mov
(bad)
(bad)
push
aam
inc
mov
pop
cmp
loopne
push
rol
scas
xchg
arpl
pop
or
push
fsub
xor
arpl
popa
test
nop
call
mov
pop
daa
(bad)
js
ror
es
outs
ret
add
mov
sbb
dec
es
mov
adc
and
dec
mov
pop
movs
mov
in
mov
or
imul
xor
or
or
sub
ss
(bad)
call
ret
sub
in
push
sub
in
fst
mov
mov
mov
dec
pop
sti
lock
sbb
mov
jns
ins
popa
popa
dec
sbb
mov
(bad)
push
(bad)
adc
ins
iret
rcr
into
push
or
jl
call
push
pop
and
mov
mul
adc
sub
add
hlt
lods
mov
add
sub
pop
test
push
ss
and
xor
add
jmp
loop
out
dec
fst
push
imul
mov
lahf
sbb
js
sbb
cli
lds
jnp
call
cmp
retf
mov
jno
pop
sub
dec
inc
retf
in
in
xchg
mov
setae
add
in
scas
sub
and
inc
test
jbe
push
mov
(bad)
je
cmps
ficomp
and
sar
pop
repz
lock
mov
jbe
into
cmp
inc
push
sub
(bad)
lods
(bad)
mov
(bad)
into
cmp
jno
lds
outs
or
jbe
gs
fdivrp
mov
xor
inc
repz
adc
jne
stos
mov
pop
sbb
add
sub
cld
aam
xchg
out
out
jo
cmps
mov
cs
aad
je
sbb
repnz
ja
dec
popa
sti
adc
jbe
mov
aad
mov
or
xor
ins
xor
mov
out
adc
dec
div
and
and
adc
xchg
and
cmp
sbb
cmp
rol
mov
push
mov
mov
cmc
fidiv
lods
arpl
adc
push
dec
push
sahf
cli
test
fld
jg
sysexit
pop
xor
mov
nop
adc
test
popf
shl
mov
add
mov
xor
vhsubpd
xor
imul
adc
movs
pop
(bad)
push
or
or
sub
cmp
repz
cld
into
test
cmps
pusha
jo
inc
sbb
cmp
mov
cdq
fst
pop
sub
mov
mov
not
add
int
cmp
and
out
xor
outs
adc
ret
mov
xchg
sti
in
nop
jns
jg
pop
xor
sbb
pop
inc
in
les
push
fidiv
retf
imul
(bad)
jae
test
inc
push
xor
adc
out
jmp
pop
shl
imul
and
jbe
mov
movs
das
sub
xor
lds
cmps
cmp
adc
add
popa
push
jno
and
movs
jnp
xlat
call
fnsave
mov
imul
pop
movs
add
int
and
or
sub
das
inc
lahf
(bad)
push
push
sbb
sub
inc
cmps
loope
das
ja
or
inc
jp
je
jno
dec
fidivr
xchg
or
xchg
pop
adc
sub
cmc
fcom
push
jbe
mov
xchg
or
xor
jne
push
movs
fadd
adc
test
int3
inc
adc
daa
out
jnp
push
mov
or
pushf
xchg
fs
or
popf
pop
push
jp
adc
push
push
sbb
rol
mov
(bad)
sti
(bad)
iret
jae
test
push
inc
xchg
ins
xor
call
sub
ror
imul
cmps
popf
lods
lods
out
pop
mov
xchg
daa
retf
bound
xlat
iret
mov
mov
adc
and
in
add
add
imul
pusha
mov
push
bound
enter
jmp
fnstenv
mov
jp
call
aaa
cli
(bad)
mov
mov
jecxz
jle
ja
fimul
lea
outs
jae
xchg
sub
cld
fild
ds
mov
call
mov
pop
es
pop
mov
pop
sub
sbb
push
mov
pop
jmp
add
sbb
dec
add
mov
test
mov
test
or
mov
data16
xchg
scas
mov
adc
jo
in
sub
pop
das
dec
mov
push
dec
push
jg
lods
mov
push
lds
fsubrp
add
inc
xchg
and
mov
and
in
int
xor
lock
in
daa
xlat
repnz
fistp
into
movs
add
cdq
fistp
mov
out
sti
test
jecxz
sahf
inc
mov
cmp
lods
cmp
push
stos
loope
into
xor
pop
hlt
cmps
xchg
add
mov
arpl
mov
push
les
push
in
adc
dec
add
push
icebp
imul
mov
and
loope
xor
mov
test
popf
loop
ror
mov
std
cli
dec
shr
pop
sub
dec
xchg
int
xchg
jnp
imul
mov
sbb
inc
gs
aad
mov
test
retf
and
add
movs
pop
mov
add
pop
cdq
movs
cmp
pop
sbb
dec
push
xchg
push
mov
ret
test
outs
push
add
cs
icebp
fimul
scas
cmp
out
(bad)
push
adc
and
add
mov
mov
add
mov
mov
adc
cli
pop
push
addr16
xchg
ja
sbb
mov
cmp
add
and
stos
aam
mov
ret
add
cs
mov
xchg
mov
(bad)
scas
pop
push
shl
fistp
stos
(bad)
rcl
ins
push
aad
ds
or
and
cmp
inc
inc
fsub
mov
fsub
ret
dec
jmp
test
cmp
push
(bad)
aas
fbstp
pop
mov
xor
mov
test
mov
xchg
rol
mov
jl
div
les
xor
cdq
out
mov
cdq
adc
cmps
mov
adc
mov
arpl
dec
lock
or
jno
inc
bound
dec
and
repnz
and
sbb
xor
push
sbb
or
fs
mov
xchg
fld
fwait
enter
sub
fadd
and
bnd
xchg
sbb
in
or
mov
shl
inc
mov
cli
shl
pop
sub
adc
ret
(bad)
jno
out
cmc
cmp
push
fmul
loopne
movs
stc
ss
jg
loopne
dec
jmp
movs
jae
sbb
sub
add
push
or
aad
enter
xchg
push
sub
aam
mov
sti
test
sub
test
inc
cmps
jl
aad
data16
jb
not
leave
dec
mov
jns
sbb
push
push
cmps
push
into
mov
iret
adc
push
mov
stc
pushf
dec
lock
movs
jo
cmp
and
test
(bad)
push
or
scas
mov
(bad)
stos
sub
inc
mov
mov
adc
jle
pop
inc
gs
aas
and
ja
arpl
(bad)
pusha
hlt
imul
stc
mov
adc
or
enter
and
or
call
in
dec
dec
sbb
adc
xlat
lods
inc
xchg
mov
dec
mov
loope
(bad)
jbe
test
out
arpl
test
fild
and
lods
xchg
inc
pop
mov
sahf
jle
mov
adc
leave
outs
push
jle
sbb
sahf
out
imul
mov
test
or
pop
ds
shr
cdq
pop
push
mov
add
outs
xchg
add
vpsubq
xchg
scas
in
ret
pop
repnz
movs
outs
inc
ds
pop
pop
sbb
(bad)
add
cmp
scas
stc
push
shr
leave
dec
xor
ret
enter
daa
dec
loop
mov
mov
cmp
jge
loope
sub
mov
jb
sub
pop
sbb
not
sub
inc
je
xor
aam
sti
cmp
shl
mov
mov
js
rcl
mov
xchg
jns
fcom
fiadd
imul
sbb
sbb
mov
inc
push
int
pop
adc
aaa
mov
(bad)
repz
out
mov
sahf
gs
push
lahf
std
pop
adc
push
gs
inc
mov
jge
mov
mov
push
xchg
cmp
jmp
pop
pop
in
iret
and
scas
and
sub
push
or
(bad)
ja
push
push
faddp
and
inc
(bad)
xlat
mov
xor
(bad)
pop
adc
dec
fcmove
mov
fs
jmp
rcl
(bad)
xchg
pushf
cmp
xlat
dec
icebp
aam
outs
push
pop
and
imul
jmp
or
xchg
fld
mov
sub
dec
mov
jmp
xchg
rcr
fs
jmp
aaa
push
cmp
cmp
cmp
add
pushf
pop
(bad)
sub
pop
(bad)
jns
(bad)
pop
cmp
rcl
outs
jmp
shl
inc
push
lahf
push
fstp
xor
xchg
lds
or
loopne
jge
push
hlt
nop
jb
out
dec
mov
push
pusha
mov
pushf
adc
out
cmps
jecxz
xchg
out
jb
movs
pop
(bad)
repnz
out
adc
call
shl
jno
mov
imul
jmp
cmp
sub
cmp
scas
xchg
sub
add
jno
int3
out
sbb
sub
rcr
xchg
sbb
imul
push
ret
add
cmp
loopne
js
test
jbe
pop
movs
push
sub
fiadd
lock
mov
not
arpl
sub
inc
xchg
dec
mov
dec
loopne
mov
dec
pushf
aad
mov
iret
push
movaps
cmps
sbb
popf
in
jmp
jmp
dec
ror
inc
lahf
clc
test
xchg
stc
inc
pop
dec
lea
mov
adc
or
fimul
mov
adc
cmp
pop
into
cmps
repz
sbb
imul
inc
jns
faddp
mov
test
inc
push
jmp
fwait
(bad)
loop
mov
lods
cs
inc
jns
pop
ja
dec
sub
ja
pop
cli
push
mov
jg
fwait
repz
ins
retf
rol
loopne
and
out
adc
ins
dec
fild
jecxz
jno
aad
mov
ss
ror
js
inc
repz
test
push
mov
fldlg2
mov
xchg
das
out
inc
dec
mov
pop
cdq
sub
inc
and
in
in
add
out
adc
push
jp
mov
(bad)
loopne
dec
sti
xor
xor
dec
pop
jl
and
or
mov
imul
dec
xor
fadd
iret
fdiv
dec
push
bnd
xor
data16
fisttp
(bad)
xor
int3
mov
jb
push
mov
or
(bad)
mov
(bad)
into
push
and
push
mov
hlt
into
xchg
popf
aaa
push
cmp
std
or
stos
ss
push
cmps
jo
push
xchg
sub
bnd
mov
jne
std
and
movs
push
cwde
inc
or
test
(bad)
and
test
in
test
fmul
adc
pop
das
aaa
popa
pop
jb
into
lock
jl
and
inc
jno
sub
ret
(bad)
cs
sub
lds
test
shl
xor
xchg
pop
mov
dec
adc
call
cmp
xlat
cmc
stos
not
add
out
(bad)
mov
retf
test
xor
pop
push
out
mov
jno
cmc
stc
fldenv
stc
aam
add
push
sbb
movs
movs
sbb
rcl
popf
sub
out
cli
push
add
test
les
out
out
inc
and
(bad)
push
mov
sahf
or
pop
int
push
xchg
call
adc
out
pop
and
shl
mov
in
mov
push
rcr
push
cdq
cli
cmp
xchg
push
jne
pop
adc
repz
add
inc
inc
leave
mov
sti
mov
xchg
and
fimul
or
pop
mov
dec
in
fcom
mov
rol
cmp
rol
push
add
add
dec
pop
lea
pop
aas
outs
mov
cmps
sub
out
icebp
(bad)
iret
ret
std
lods
std
mov
dec
shr
data16
xrelease
xchg
mov
fs
pop
pushf
inc
(bad)
mov
fdivr
(bad)
fimul
xor
ds
push
inc
adc
(bad)
(bad)
imul
push
iret
sbb
sbb
mov
add
push
sub
dec
out
loop
aam
test
sbb
xchg
int
lock
jne
jb
jno
lods
xchg
jp
xadd
xchg
jecxz
retf
iret
adc
push
repz
out
dec
(bad)
xor
jb
popf
das
or
cmps
dec
xchg
jbe
cld
mov
adc
mov
push
or
stc
mov
mov
jns
mov
xor
stos
mov
mov
out
pop
fwait
inc
stc
mov
push
cmp
ins
ins
(bad)
adc
mov
mov
frstor
mov
scas
or
adc
dec
push
xor
fsub
add
jle
push
jle
movs
neg
mov
rol
gs
(bad)
pop
xchg
inc
jnp
adc
inc
add
fucom
sbb
dec
push
pop
xor
enter
loopne
or
mov
pop
dec
(bad)
cmp
jge
retf
mov
repnz
mov
sbb
jno
(bad)
adc
(bad)
xlat
fcom
rcl
ror
adc
not
sub
sbb
aad
aam
pop
cmp
xlat
nop
push
xchg
pop
ror
pop
popf
xor
cmp
jmp
sbb
mov
xchg
cmp
ret
fcmovb
or
enter
imul
pushf
dec
aas
or
pop
fld1
jnp
hlt
push
test
popf
pop
cwde
outs
and
push
ror
dec
and
jno
jmp
fstp
popaw
mov
icebp
sub
test
xor
sbb
loop
pop
sub
cmp
es
mov
fmul
sbb
ret
mov
xchg
xchg
cmovo
push
(bad)
lods
sti
xchg
xor
jge
dec
xchg
aad
mov
sti
jnp
fdivr
mov
xor
push
pop
inc
add
rcr
hlt
mov
mov
sub
in
stos
jne
cmp
pop
adc
cmp
dec
leave
fwait
call
adc
fldcw
inc
pushf
sub
mov
into
pop
dec
add
call
leave
jecxz
xchg
sahf
pop
sub
or
pop
sub
sbb
in
sti
aas
cmp
(bad)
out
std
out
out
fimul
fstp
mov
fsubr
mov
ret
xchg
int3
pop
ret
out
xchg
mov
or
sub
inc
fmulp
push
jecxz
sahf
out
lds
lock
push
fstp
and
out
mov
push
(bad)
mov
shl
retf
in
fs
bound
je
inc
push
pop
call
in
dec
aad
in
ins
mov
fwait
fs
mov
pop
fidiv
dec
gs
push
cmp
pop
or
loop
shr
add
push
cs
sbb
push
and
dec
or
pop
mov
out
pop
out
imul
mov
add
push
add
dec
xchg
pop
ror
or
dec
sub
stos
inc
movs
mov
call
mov
imul
loope
std
xor
sub
jbe
(bad)
loopne
jg
mov
and
imul
push
test
and
push
mov
or
adc
mov
push
mov
mov
sbb
mov
retf
rol
cdq
in
cwde
adc
repnz
mov
in
push
pop
imul
sub
inc
call
aad
pop
and
cmp
jmp
dec
sbb
nop
aas
cmc
push
and
test
xor
pop
lods
je
sbb
sub
cmc
sub
lods
or
adc
clc
jno
sbb
outs
stos
(bad)
add
add
ret
wbinvd
jno
add
jecxz
pop
xor
cmps
scas
adc
in
repz
fwait
cmp
out
mov
pushf
mov
xor
sub
inc
jmp
arpl
xchg
sub
aam
cld
mov
xchg
push
jns
(bad)
fcmovb
dec
icebp
ret
or
fnstsw
mov
sbb
cmps
jmp
pop
call
cmp
xor
and
and
pop
ret
aaa
or
xor
inc
loop
(bad)
aam
inc
into
and
pop
jg
add
cs
mov
jnp
nop
pop
xor
adc
mov
rcl
adc
push
(bad)
adc
nop
outs
(bad)
adc
sar
imul
mov
leave
fiadd
jge
cmp
sar
ins
sub
push
mov
pushf
test
fs
aad
shl
xor
mov
cdq
stos
push
pop
out
and
xor
dec
cmc
sbb
stc
repz
inc
or
cmp
aad
pop
and
sub
sbb
pop
gs
outs
lock
push
push
lods
dec
lds
mov
add
into
xchg
test
push
xor
mov
sub
imul
pop
xchg
push
sub
out
sub
mov
test
inc
adc
dec
or
or
pushf
dec
dec
or
(bad)
jge
scas
sub
cld
repnz
add
fiadd
pop
adc
sub
add
cmp
repnz
test
stos
jge
xchg
cdq
pusha
test
sub
daa
add
xchg
cld
mov
loop
ret
ds
jne
stc
mov
adc
mov
add
xchg
xchg
mov
add
jp
xor
scas
adc
cmp
inc
inc
mov
fidivr
or
xchg
adc
sub
int3
leave
sar
(bad)
push
aas
aaa
out
cmp
jp
lahf
sub
inc
push
mov
out
cmps
ret
inc
pop
test
xor
inc
cmp
fisub
pop
ret
mov
xchg
jp
lock
pop
ror
mov
rol
cmp
repnz
sbb
mov
push
xchg
jge
sub
fild
xchg
sbb
imul
ins
xor
sub
lods
or
cwde
adc
pop
sub
les
call
popa
or
test
dec
inc
inc
mov
add
ja
adc
fild
jbe
adc
push
or
ret
stos
xchg
or
mov
sahf
je
cwde
scas
sar
icebp
repnz
mov
adc
mov
pop
pop
inc
push
xor
xchg
add
jo
mov
shl
add
das
xchg
imul
mov
dec
dec
out
dec
enter
add
xlat
xor
cmp
in
push
out
sbb
pop
pop
or
popf
shl
xchg
je
adc
mov
inc
dec
ins
xchg
adc
cli
icebp
mov
and
ret
pop
sub
jne
adc
test
shl
out
lods
je
push
fwait
xor
push
mov
(bad)
cmps
test
popf
xchg
sub
cmps
and
call
jnp
push
pushf
mov
and
sbb
xor
fild
jns
test
fild
mov
mov
test
mov
lea
rcr
pop
scas
hlt
cdq
fstp
add
xchg
push
sahf
shl
sti
mov
push
fidiv
mov
imul
or
jl
jecxz
fdiv
or
mov
scas
arpl
pop
add
loope
imul
xor
sub
test
stos
jg
adc
daa
xchg
mov
cmps
push
test
inc
arpl
cli
xor
or
xchg
pop
cmp
sti
pop
je
es
(bad)
fisub
ins
add
loop
inc
xor
sar
retf
shl
cmps
fiadd
push
add
es
pushf
mov
pop
xchg
jbe
div
push
cld
mov
dec
out
or
dec
outs
push
pop
nop
test
add
nop
enter
out
sbb
mov
(bad)
fdivr
inc
ret
ret
dec
pop
sub
shl
(bad)
test
rcr
les
cdq
push
not
push
gs
mov
in
mov
cmp
test
hlt
inc
mov
jp
inc
(bad)
repnz
push
(bad)
mov
out
ss
pop
clc
jmp
shr
(bad)
out
jecxz
std
out
lods
xchg
mov
int
inc
cmp
mov
stos
and
dec
pop
js
dec
test
push
sub
(bad)
or
cmp
fild
ds
fimul
je
mov
add
add
dec
add
and
or
or
jne
push
fwait
dec
add
test
xchg
ret
mov
cs
stos
mov
daa
(bad)
lods
lods
sbb
mov
fnsave
mov
inc
xor
pop
ror
repz
xchg
adc
pop
push
adc
pop
in
mov
push
imul
retf
int
out
sub
call
inc
mov
cmp
inc
retw
fild
pop
jnp
adc
mov
pop
and
sub
or
leave
inc
neg
mov
pop
and
pop
fistp
add
and
push
pop
cmp
jp
lock
into
and
(bad)
idiv
push
popf
sub
out
adc
mov
lock
cmp
pop
nop
jecxz
into
or
imul
daa
scas
jg
xor
cwde
xchg
and
into
jae
int
push
xchg
mov
test
sbb
push
jecxz
lods
jp
sbb
mov
lahf
xchg
mov
cmp
loopne
pop
enter
in
(bad)
out
rol
adc
xchg
in
aam
push
repnz
ja
ds
or
fcomp
push
fucom
xor
call
out
iret
cmps
ds
aas
lea
fs
mov
js
not
aaa
out
dec
sub
xchg
loopne
in
fs
fst
adc
cmp
sub
mov
movs
cdq
mov
sti
push
jns
cdq
ins
sahf
aam
cdq
jp
cmps
lods
pop
cmps
clc
shl
jmp
mov
mov
jno
sub
fcom
jl
data16
xchg
xchg
push
sub
sti
dec
sub
pusha
sbb
aad
out
dec
arpl
xchg
xchg
push
in
push
add
push
mov
out
push
in
jbe
jmp
jns
lea
add
mov
sub
xchg
cmps
dec
cmc
stos
or
in
ret
pop
ins
pop
jns
cli
stc
cmp
sbb
sub
mov
shl
ret
push
and
pop
shl
ret
and
pusha
pop
pop
int3
shl
mov
clc
xchg
dec
sub
dec
inc
mov
xchg
cmp
dec
adc
mov
or
scas
ins
pushf
xor
pop
(bad)
cmp
inc
mov
stos
dec
sti
test
cmp
sar
aam
sbb
ins
adc
mov
inc
adc
mov
imul
cli
scas
cdq
ret
pop
add
pop
and
sub
aad
cmp
sti
xchg
mov
loopne
bound
push
in
and
mov
pop
pop
sbb
jl
xlat
or
shr
sahf
out
inc
cwde
mov
lea
pop
loopne
outs
push
jle
(bad)
xchg
push
scas
ret
add
adc
(bad)
(bad)
mov
cmp
(bad)
out
adc
sahf
aad
je
mov
std
gs
cmps
adc
xor
addr16
push
stos
dec
mov
push
leave
cmps
cmp
mov
mov
xchg
cmps
xlat
div
sbb
call
mov
pop
ins
mov
and
ds
push
mov
mov
cmc
xor
sbb
mov
cld
sub
mov
xor
out
jb
rol
stc
push
sar
movs
sbb
fwait
sbb
mov
jns
and
mov
xchg
scas
mov
add
ret
mov
aaa
mov
adc
cmp
mov
enter
or
jo
sbb
arpl
bound
jb
adc
call
and
ds
pop
mov
arpl
mov
addr16
fstp
movs
fwait
fwait
cmps
imul
fldcw
push
sbb
ins
or
xchg
push
mov
dec
add
add
int3
dec
out
aam
push
cs
shl
push
imul
enter
(bad)
dec
lock
test
xor
xchg
and
add
repz
add
(bad)
adc
push
lock
xchg
push
add
fcom
jl
cmc
xor
mov
xor
daa
mov
push
out
pop
inc
sub
or
mov
lahf
aam
iret
nop
popa
adc
movs
xchg
xor
xor
scas
stos
and
in
lock
nop
ins
dec
or
stos
call
xchg
(bad)
stos
push
xchg
inc
je
and
scas
fdivr
test
pop
pop
cmp
out
mov
gs
cmp
dec
loopne
aas
push
jmp
jne
inc
call
jno
jne
sub
mov
push
mov
sar
inc
std
clc
push
xor
xchg
mov
mov
bound
cmps
rol
fstp
loope
popf
jno
push
lods
pop
xchg
jl
call
xchg
inc
or
mov
push
fcom
movs
clc
int3
loope
sub
mul
pop
out
push
(bad)
outs
mov
aas
mov
shr
test
adc
hlt
pushf
ret
por
ret
pop
call
out
mov
mov
inc
xor
jg
imul
push
dec
sub
and
push
not
sbb
jecxz
dec
adc
sub
sar
sbb
inc
or
inc
fadd
xor
mov
retf
icebp
fstp
ror
pop
sub
int3
loope
popa
(bad)
jne
xchg
push
arpl
fcom
push
xchg
adc
jbe
pop
adc
add
stc
push
push
xor
or
and
cmp
les
outs
add
imul
nop
shr
adc
jg
lock
call
jecxz
test
cmp
sbb
mov
xor
inc
xor
and
test
add
or
mov
fidivr
xor
pop
inc
add
or
pop
pop
lods
scas
sub
sbb
retf
sti
divps
addr16
push
dec
push
or
dec
jo
pop
ds
sub
pop
movs
out
mov
(bad)
mov
mov
loope
sub
or
jbe
sbb
xchg
or
std
mov
out
push
scas
fprem1
sub
mov
cmps
ins
outs
pop
loope
push
xor
mov
(bad)
test
adc
pushf
jno
jno
mov
rcl
leave
enter
adc
out
adc
call
pop
sar
xor
sar
sub
dec
mov
mov
dec
jp
cdq
stos
adc
push
xor
shl
or
cs
push
mov
daa
jbe
xchg
xchg
mov
jnp
loope
xchg
sbb
inc
mov
test
adc
data16
jle
seto
retf
out
fcomp
mov
pop
mov
rcr
repnz
sbb
jle
sbb
test
neg
cmc
inc
out
(bad)
mov
aaa
movs
adc
outs
dec
popf
mov
shl
fwait
xor
dec
and
xchg
fstp
inc
out
fisub
push
push
xor
loopne
rcr
in
add
inc
jp
add
in
and
add
push
leave
out
inc
xchg
inc
push
xchg
or
mov
sbb
out
add
xlat
ret
std
jmp
cmps
ss
les
add
stos
fs
adc
pop
movs
sbb
cmp
ret
mov
mov
and
push
jge
and
mov
enter
fs
jne
add
(bad)
aam
mov
cs
pusha
call
(bad)
cmp
xchg
cmps
hlt
inc
sub
mov
(bad)
adc
inc
xor
adc
inc
or
push
aas
jbe
fld
jecxz
je
lea
mov
sbb
add
lahf
mov
pop
jae
xor
lods
xchg
pop
add
xchg
mov
xchg
mov
aas
cmp
xor
and
test
cmp
enter
lods
and
mov
les
jb
sbb
inc
mov
cmp
ins
loop
icebp
mov
adc
mov
xchg
cmc
adc
pop
cmp
(bad)
mov
ss
loopne
outs
test
cmc
hlt
inc
test
pop
mov
mov
cmps
inc
sub
cmp
cmp
pop
sbb
push
out
jg
jmp
xchg
outs
sbb
call
daa
pusha
adc
sbb
or
loope
and
clc
cli
retf
es
test
and
mov
push
loope
outs
sbb
xchg
mov
jmp
jecxz
pop
inc
jmp
cmc
pop
(bad)
jbe
(bad)
fs
cmp
cmps
in
dec
mov
mov
push
fisttp
xor
in
mov
pop
mov
xchg
push
popf
adc
dec
sbb
ss
mov
gs
add
mov
je
inc
xor
test
mov
stos
xchg
xor
sub
ficom
sahf
jae
dec
cmps
out
aaa
mov
cmps
inc
push
movs
mov
mov
jns
out
sub
in
mov
ja
loop
xchg
xchg
(bad)
cmps
(bad)
movs
fimul
cmp
jle
inc
xchg
add
fwait
add
xlat
push
(bad)
retf
shr
xchg
aaa
(bad)
or
rcl
sbb
out
es
sbb
shl
sub
pop
xchg
sti
adc
push
xor
cmp
jp
loopne
stc
sub
mov
test
addr16
(bad)
sbb
push
add
sub
cmc
je
cmp
in
mov
imul
sbb
retf
jmp
iret
je
scas
lock
imul
mov
movs
jge
push
mov
push
cmp
push
mov
sub
(bad)
jmp
fadd
cmps
aam
jp
cmp
jmp
jbe
lea
push
mov
(bad)
sbb
dec
inc
jo
and
neg
fcom
push
jecxz
fcmovbe
push
mov
lods
arpl
inc
fst
and
add
leave
(bad)
hlt
hlt
aam
frstor
inc
(bad)
scas
mov
mov
sahf
stos
outs
mov
(bad)
shl
push
out
mov
int
pusha
iret
in
xchg
xchg
fidivr
neg
(bad)
pop
push
cmp
mov
movs
mov
popf
popa
dec
hlt
in
xchg
jecxz
xor
or
sub
adc
pop
shl
addr16
lea
mul
sub
dec
cmp
jle
xchg
xor
aaa
dec
push
inc
and
and
xor
push
or
out
lds
sar
dec
jmp
loope
out
hlt
pop
mov
ror
in
inc
in
test
sub
popf
fwait
xor
bound
jle
push
cmp
mov
add
xchg
jmp
dec
(bad)
jecxz
pop
mov
lods
call
cmc
(bad)
lahf
dec
shl
add
iret
sub
in
popf
pop
pop
dec
ret
push
inc
xchg
xchg
outs
ror
fwait
repz
aam
jmp
sar
mov
shl
adc
mov
inc
mov
mov
in
xchg
cli
sbb
add
retf
adc
add
lea
aas
xor
dec
xchg
sbb
(bad)
push
xchg
xchg
sti
sbb
sar
pop
add
mov
dec
pop
fwait
push
retf
and
lods
aad
loop
inc
arpl
pop
fcom
dec
adc
cmp
test
sub
jb
jo
gs
(bad)
repz
dec
mov
and
or
xchg
xchg
ficom
ret
(bad)
pop
jmp
mov
xchg
and
(bad)
xor
je
jbe
pop
imul
jno
sahf
dec
repnz
addr16
jae
xchg
out
jne
ret
mov
test
cs
pop
loope
and
ror
push
in
(bad)
shl
mov
std
clc
in
sbb
mov
mov
sbb
mov
mov
dec
xchg
fld
in
cdq
mov
sub
push
sub
add
push
ret
xchg
sub
cli
std
loopne
shr
rcr
(bad)
jmp
pop
cli
sbb
sar
mov
frstor
pop
pop
icebp
sub
add
and
hlt
push
pop
jnp
add
les
cmp
jge
inc
cmp
inc
jmp
repz
inc
xor
lahf
retf
aam
rcl
xlat
out
sub
not
and
scas
dec
adc
out
cld
adc
cmp
push
dec
mov
xchg
lahf
ror
xchg
inc
push
ja
xlat
daa
aas
xchg
nop
daa
cmc
lock
ror
je
inc
lock
add
or
inc
fistp
dec
gs
xor
mov
mov
in
pop
cdq
mov
ret
pop
stc
push
rcl
imul
rol
or
ins
add
and
dec
sbb
and
(bad)
xrelease
mov
jl
lods
cmp
dec
pop
(bad)
pop
dec
or
xor
push
neg
mov
sbb
es
mov
add
xchg
sbb
mov
sub
and
xchg
cmp
mov
inc
mov
jmp
repnz
cmp
mov
lahf
push
dec
in
mov
xchg
adc
adc
iret
out
or
aas
cmp
inc
lods
xchg
add
(bad)
out
fwait
test
jl
and
mov
or
pop
sbb
ret
or
ja
je
jmp
add
in
int
push
imul
push
imul
mov
imul
loope
ins
repnz
dec
fwait
or
mov
cmp
ror
sub
mov
popf
les
jg
loop
jno
jns
fild
and
or
jp
mov
sub
cwde
sbb
icebp
shr
in
sbb
mov
stc
aam
shr
jno
popa
retf
cmp
retf
inc
jb
mov
adc
mov
stos
sub
push
push
mov
adc
cdq
leave
xchg
pop
add
ret
mov
or
ins
lods
lahf
adc
mov
shl
jg
adc
sub
adc
mov
rcl
sar
ret
adc
cmp
shr
inc
push
ss
mov
cmp
or
fdiv
cmp
mov
jno
dec
mov
jae
and
jecxz
loope
lods
mov
sahf
cdq
pop
cwde
sub
fucomip
jnp
(bad)
shl
pop
pop
add
dec
fdivr
and
shl
sub
inc
je
ret
cmps
ds
and
aaa
jl
ja
pop
mov
bound
xor
and
cs
xor
or
jge
push
jns
popf
dec
mov
inc
ja
or
inc
arpl
lods
cs
mov
loop
int
in
or
and
adc
inc
lea
(bad)
mov
mov
and
mov
(bad)
push
adc
cmp
adc
sub
inc
pop
cli
sub
pop
test
sbb
xlat
xchg
jecxz
repz
push
pop
outs
sahf
aas
test
in
(bad)
adc
cwde
pop
loopne
pushf
sub
jle
std
sar
enter
bound
adc
(bad)
xchg
push
push
push
test
inc
sub
and
mov
mov
mov
dec
jno
add
xchg
fidiv
les
and
mov
ja
and
test
or
mov
jmp
call
lea
ja
push
inc
imul
and
jns
(bad)
repz
sbb
mov
in
push
push
push
xchg
fisub
jb
(bad)
(bad)
fcmovne
mov
pop
in
lock
mov
gs
inc
mov
cmp
xchg
xor
jns
in
daa
sbb
and
dec
call
mov
pop
(bad)
mov
loope
in
jge
and
pop
pop
mov
ins
(bad)
les
or
dec
jns
sub
sbb
cwde
repnz
adc
fsubr
enter
mov
push
cmp
mov
and
add
dec
fsub
or
sar
test
inc
in
js
imul
xor
mov
pop
or
sahf
mov
mov
adc
sbb
test
push
lock
push
lods
vmread
add
pop
pop
dec
push
xchg
adc
xchg
movs
pop
push
cmp
xlat
add
vmread
xchg
mov
xor
ins
inc
xchg
hlt
dec
inc
in
out
jmp
imul
push
fisub
les
push
mov
inc
dec
bound
sbb
inc
test
out
mov
std
sbb
sbb
inc
sub
pusha
push
add
mov
rol
dec
xor
arpl
imul
sub
add
push
mov
(bad)
lahf
sub
data16
js
into
pop
cwde
aam
loopne
(bad)
fcom
or
dec
bound
adc
push
jecxz
xor
mov
sahf
inc
push
push
stc
mov
fbld
loope
xor
stos
mov
add
sti
loopne
xchg
out
movs
enter
imul
scas
stos
mov
mov
cmp
loopne
inc
into
jo
add
xchg
cmp
mov
js
iret
mov
dec
pushf
pop
(bad)
dec
movs
js
cmc
mov
cmps
setno
mov
fwait
jae
adc
ror
scas
iret
or
inc
mov
add
inc
ret
push
pop
and
ins
push
shr
mov
inc
pop
in
enter
shl
sub
lea
aam
ret
mov
jo
mov
xchg
push
jmp
mov
mov
mov
rol
mov
lods
pop
aaa
pop
or
pop
xor
push
retf
cmps
jp
popa
xchg
inc
stos
mov
xor
retf
stos
add
xor
test
xchg
loopne
dec
pop
outs
dec
jl
out
in
inc
outs
rcr
xchg
xor
stc
or
sbb
fcom
sub
hlt
push
xor
shl
sar
pop
mov
jno
inc
sub
cld
cdq
test
jge
ins
dec
cmp
clc
jo
or
repz
cli
lahf
sbb
jmp
inc
cmp
sbb
hlt
inc
xor
adc
jmp
push
fldcw
sbb
mov
sub
jb
jmp
cmp
gs
jo
push
out
xor
add
nop
push
sub
inc
xchg
add
mov
mov
xor
adc
ret
mov
mov
pop
mov
fs
jno
stc
imul
hlt
popa
pop
mov
adc
push
gs
xor
xchg
shl
pushf
cmps
aad
dec
mov
dec
popf
stos
movs
mov
ja
sbb
jns
loop
jno
push
aad
cmc
fadd
or
mov
or
lahf
daa
or
jecxz
(bad)
bound
mov
xchg
sahf
jbe
ins
cmc
pop
into
mov
jg
out
push
in
pop
sahf
cmp
dec
fmulp
mov
and
and
pop
ins
jae
fbstp
retf
popa
stos
ret
repnz
fsubr
iret
in
lds
mov
adc
pop
outs
xchg
xor
scas
push
push
pop
jl
lds
push
mov
and
iret
lods
xchg
and
std
das
inc
(bad)
pop
or
pop
lods
cmp
fucom
jo
mov
jge
retf
call
sub
push
push
add
js
sbb
shl
or
bound
adc
cmp
sbb
mov
jmp
cmp
popf
xchg
in
clc
mov
(bad)
mov
push
cmp
add
imul
imul
sahf
arpl
add
xchg
ficom
ja
jge
cmp
frstor
mov
les
or
add
push
movs
push
mov
mov
call
cmp
loopne
rcl
xchg
gs
lock
daa
mov
sbb
or
(bad)
mov
and
jge
fs
pop
jecxz
add
lods
cmp
mov
in
inc
push
xor
out
cmps
jmp
sub
and
add
mov
call
push
and
loopne
adc
jns
mov
test
pop
sub
scas
adc
out
sbb
or
push
mov
xchg
sbb
mov
jnp
add
sbb
cdq
mov
mov
xchg
push
jnp
pop
out
pop
adc
aam
mov
xor
or
push
jnp
or
bnd
jmp
push
sub
pop
inc
xor
dec
jne
jmp
xor
cmps
mov
scas
xchg
mov
mov
cmp
call
pusha
loop
pop
retf
add
cwde
mov
stos
inc
pop
aas
jmp
sub
mov
imul
and
gs
call
push
ficom
or
jmp
icebp
and
push
jle
xor
shl
in
cmp
sbb
mov
xor
sub
int
mov
sub
das
fsqrt
mov
aas
rcr
pusha
mov
mov
dec
mov
xor
aam
cmp
stos
xchg
dec
push
cmp
shl
sbb
xor
mov
and
or
dec
xor
push
sar
movs
(bad)
pop
jo
jns
in
cmp
fs
cmps
push
(bad)
xlat
outs
mov
int
xor
or
push
rcr
inc
pop
inc
adc
shl
xor
test
mov
push
add
lds
inc
pop
cmp
aas
loopne
and
adc
(bad)
fwait
scas
fisttp
fld
sbb
mov
xchg
mov
jno
mov
xchg
(bad)
scas
sbb
sbb
fidivr
test
stos
(bad)
or
xor
jns
push
inc
lds
call
(bad)
lock
jno
lods
bound
loopne
push
arpl
iret
aam
repnz
stc
rcr
jmp
(bad)
fsub
sbb
in
mov
jp
dec
mov
cmp
nop
xor
pushf
or
jecxz
aam
fbstp
add
sub
outs
fimul
iret
mov
rcr
ror
scas
add
movs
mov
call
and
bound
inc
test
push
rol
jge
xor
and
xor
out
in
adc
frstor
sbb
or
into
in
dec
int
adc
dec
out
adc
pop
push
push
cld
cmp
mov
cld
in
stos
(bad)
call
out
inc
mov
out
pop
xchg
lods
sub
or
or
mov
js
mov
and
ja
(bad)
xchg
push
pushf
out
cld
cmps
scas
pop
adc
(bad)
and
das
cwde
pop
mov
clc
cmp
sub
fld
mov
jle
cmp
fs
bound
dec
jmp
sbb
in
inc
jmp
jb
jmp
mov
push
cld
(bad)
sbb
imul
inc
sbb
mov
push
push
mov
pop
cwde
icebp
dec
fcmove
fsub
xchg
cmps
fs
popa
movzx
mov
pop
inc
ret
sbb
adc
lods
addr16
and
aaa
jns
add
(bad)
ret
cmp
xchg
mov
pusha
mov
inc
mov
adc
cmp
inc
fist
ds
scas
cmps
mov
daa
icebp
ret
mov
push
not
(bad)
fcomp
(bad)
faddp
mov
fidiv
rcl
je
inc
clc
pop
scas
xchg
pusha
stos
fwait
mov
fwait
or
js
stos
outs
stos
popf
in
or
adc
cmp
lods
xchg
cmp
jmp
add
cmp
rol
mov
popf
push
dec
cwde
cmp
inc
lock
das
and
sub
call
ficom
push
cld
movs
in
iret
mov
imul
mov
unpcklps
push
mov
adc
(bad)
dec
pushf
(bad)
jl
push
leave
inc
mov
fidivr
and
jl
dec
add
test
push
mov
rol
and
cmp
jmp
xchg
mov
jbe
sbb
bnd
int
mov
retf
cvtps2pi
sub
mov
rcl
fild
loopne
sti
or
or
push
nop
adc
mov
fs
dec
jae
rcr
pop
stc
cmps
mov
mov
cwde
push
mov
retf
rcl
adc
(bad)
and
ins
push
cli
jns
std
test
out
xchg
sbb
imul
push
jecxz
aam
jg
push
fcmovnu
or
(bad)
pop
or
js
dec
push
jnp
pushf
fnsave
popf
cmp
out
mov
loop
popa
popf
inc
fld
sub
hlt
lods
ins
fdivr
mov
jne
inc
pusha
popf
inc
retf
loopne
jp
test
test
xlat
arpl
adc
xor
sub
dec
ins
xchg
int
sub
pop
add
mov
fwait
jne
inc
cdq
adc
push
cmp
or
sub
cmp
xchg
mov
leave
in
push
dec
mov
xchg
sti
push
cs
sub
cmc
ror
clc
aaa
out
and
jg
(bad)
sbb
inc
mov
push
scas
int3
and
mov
(bad)
fmul
lods
mov
push
(bad)
bound
add
mov
dec
pop
jl
mov
jmp
cs
addr16
adc
ror
stos
mov
outs
mov
or
jno
ret
shl
pop
push
add
jmp
pop
out
mov
loop
je
dec
cmps
mov
add
adc
xchg
jb
loopne
push
rcr
xor
fidiv
int
(bad)
and
gs
jmp
iret
bsf
add
mov
retf
fwait
pusha
retf
dec
jmp
inc
xchg
push
test
mov
leave
inc
dec
push
xchg
push
xor
inc
cmp
push
xor
pop
adc
push
xchg
out
(bad)
pop
enter
fs
out
xchg
sbb
push
and
mov
inc
pop
or
add
ss
mov
idiv
enter
add
sub
add
enter
jmp
push
test
add
xchg
cmp
push
aaa
into
sahf
popf
cmp
mov
fidiv
push
and
mov
rcl
(bad)
imul
push
pop
das
jecxz
mov
mov
jge
cmps
stc
rcr
and
or
pop
movsx
call
fwait
push
outs
jmp
lods
aam
dec
cmp
pop
jno
test
push
inc
test
rcl
or
cs
(bad)
xor
sbb
scas
inc
sbb
mov
dec
inc
pop
push
push
mov
mov
pop
mov
pop
or
ins
push
cdq
ds
ins
sbb
stc
adc
push
xor
cmc
cli
retf
shl
sbb
jnp
or
sbb
fstp
xchg
in
or
fisttp
mov
jbe
fdivr
arpl
push
loope
mov
aam
fnstsw
mov
add
inc
mov
mov
push
ja
test
sbb
movs
ror
add
inc
(bad)
scas
jns
mov
into
jmp
jge
add
movs
sbb
sbb
jp
add
test
ror
and
in
mov
mov
add
ja
loop
(bad)
mov
jp
popf
test
ret
sahf
retf
cdq
cmp
inc
imul
sbb
mov
or
xor
ss
ja
sbb
push
pop
cmp
sti
xor
adc
aad
mov
adc
or
out
out
push
cmps
aas
test
mov
cmp
xchg
pop
mov
sub
rol
repnz
lahf
mov
arpl
outs
scas
pop
cli
push
and
out
pop
add
mov
xchg
jge
inc
pop
lock
mov
dec
cmc
mov
inc
fs
xchg
jb
sbb
cmp
fld
out
xor
daa
(bad)
mov
data16
sbb
or
mov
in
pop
fmul
pop
lods
(bad)
je
mov
adc
mov
ss
adc
and
xor
mov
xchg
shl
mov
jmp
adc
and
mov
xchg
loop
out
xchg
add
(bad)
xchg
ret
or
inc
add
lar
into
sbb
jle
jno
imul
ins
mov
out
outs
xchg
inc
push
sub
outs
pop
lea
mov
pop
sub
daa
adc
out
adc
sbb
inc
out
mov
test
pop
dec
push
mov
adc
sbb
add
add
mov
jp
add
pop
fiadd
repz
push
dec
add
in
pusha
mov
loop
dec
sub
stc
sbb
adc
or
or
xchg
test
icebp
outs
shl
mov
ret
cli
xlat
dec
mov
int3
(bad)
fucom
push
push
and
mov
int
les
inc
cmps
jl
adc
pop
sahf
(bad)
xchg
into
sti
or
lahf
fidivr
pop
dec
dec
test
imul
pop
js
cmps
push
pop
push
xor
das
push
jo
imul
jbe
push
push
daa
les
mov
or
in
inc
dec
xchg
sub
mov
outs
lods
aaa
jl
xor
or
lods
das
imul
aas
sbb
mov
or
xchg
mov
mov
cs
into
push
xor
xchg
jmp
push
fcom
popf
call
stc
loop
xchg
dec
adc
les
and
in
pop
imul
and
outs
sub
in
shl
js
jle
pop
push
jns
stc
or
jl
mov
inc
push
shr
(bad)
aam
add
cmp
repnz
jae
add
cmc
cld
(bad)
pop
adc
push
jo
inc
or
inc
loope
nop
fdiv
mov
cmps
inc
outs
rol
add
push
icebp
rol
cld
test
cwde
in
pop
xor
inc
call
xchg
add
lods
add
inc
jle
xchg
or
cwde
mov
push
into
ss
mov
dec
cmp
mov
push
inc
fsubr
sbb
pop
sub
xchg
retf
xchg
and
leave
sub
repz
jl
mov
std
nop
out
sub
xchg
mov
fisttp
dec
mov
jae
mov
test
mov
cmp
cld
xor
add
mov
sub
lahf
sbb
jo
jle
ficom
hlt
ja
cmp
push
inc
sahf
cmc
jge
dec
popa
mov
std
and
mov
and
xlat
pop
push
xor
ret
cdq
cdq
psubb
pop
jl
mov
cmps
cli
jmp
sbb
cmp
stc
dec
fstp
ins
ins
ja
int3
cmp
and
loop
lods
add
jle
jnp
mov
jecxz
mov
in
aas
and
mov
mov
lahf
inc
lds
mov
dec
out
sub
and
push
sub
mov
lods
jb
enter
in
jecxz
dec
add
mov
mov
mov
sbb
lock
push
adc
xor
cmc
rol
out
pop
in
mov
dec
test
cmp
dec
stc
sub
and
cdq
inc
cmp
xchg
inc
sub
sbb
inc
xchg
inc
push
cdq
les
call
(bad)
add
xchg
xor
jbe
xchg
cs
dec
ds
adc
adc
mov
mov
imul
pusha
jno
loopne
or
and
pop
push
aas
lahf
jge
dec
push
ret
lds
inc
shr
push
dec
mov
pop
fimul
inc
dec
mov
lea
dec
mov
dec
retf
xlat
dec
aaa
xchg
retf
call
jae
dec
ds
xor
pop
cmp
ret
aas
push
mov
mov
mov
mov
fld
repnz
(bad)
jae
mov
cmps
mov
lock
mov
add
lock
adc
out
xor
ret
inc
ret
xchg
call
pop
gs
or
xchg
push
and
xor
jp
in
adc
and
cmps
xchg
xchg
fwait
sub
in
mov
outs
jecxz
mov
dec
ret
xchg
sub
mov
pop
das
cmp
inc
xchg
xchg
lahf
lock
out
xor
int3
js
jmp
aaa
jmp
mov
imul
(bad)
and
pop
mov
and
sub
xchg
in
scas
ror
ret
and
dec
pop
push
adc
cwde
lods
sbb
lods
mov
mov
sub
jmp
inc
add
adc
xchg
adc
repz
dec
iret
pop
aaa
xlat
cli
sbb
xor
cld
add
in
pop
push
mov
addr16
daa
in
dec
xor
mov
cld
cmp
aas
cli
xchg
cld
mov
shl
push
mov
jmp
aam
push
movs
(bad)
cld
cmp
push
scas
mov
or
inc
stos
inc
sbb
int3
aam
dec
ret
ds
in
and
pop
sbb
dec
mov
(bad)
sub
jp
xchg
sahf
dec
sub
push
add
jne
gs
push
fadd
adc
or
jl
repz
lds
cmc
pop
les
pop
aaa
ss
outs
adc
sbb
pop
push
and
push
stos
push
sti
push
xor
popf
jge
xchg
and
iret
repz
pop
mov
mov
jns
call
pop
mov
and
outs
pushf
xchg
push
outs
xchg
dec
mov
stos
dec
adc
cs
fadd
mov
xchg
add
and
cdq
hlt
cmps
jg
dec
or
pop
loopne
mov
xor
or
inc
jns
sti
jno
jmp
inc
jge
jmp
jge
fs
push
aas
inc
push
scas
mov
jg
les
push
cwde
dec
leave
(bad)
mov
ficomp
push
jbe
mov
xor
push
rol
(bad)
stc
bound
inc
mov
retf
add
jne
cmp
das
pop
add
inc
jle
inc
pop
dec
rcl
cmps
xchg
inc
fwait
pusha
nop
pushf
cmc
shr
dec
cmp
retf
mov
ret
mov
cmp
scas
push
loop
sub
xchg
xor
dec
or
lahf
and
push
cmp
movs
leave
adc
loopne
xchg
jp
call
jo
mov
gs
in
loop
sub
cmp
ja
xchg
mov
cmp
cs
adc
cmc
aam
loopne
in
pop
out
pop
pop
lahf
jecxz
outs
leave
lods
outs
test
add
lea
(bad)
ja
jne
ret
movs
inc
call
mov
call
jle
fbld
mov
in
pop
cmp
loop
jecxz
enter
(bad)
aas
call
pop
mov
mov
movs
jns
and
ret
dec
outs
out
adc
pop
jecxz
sbb
add
cli
push
jae
add
(bad)
push
scas
mov
idiv
cli
addr16
jp
cmps
(bad)
inc
mov
dec
xchg
cmp
jle
shl
pop
push
mov
inc
mov
cld
stos
xchg
popa
cmps
mov
hlt
pop
cmp
or
int3
fild
cmc
xor
dec
and
inc
cmp
pop
(bad)
mul
setg
loopne
adc
jne
das
mov
pop
dec
mov
push
jo
rol
xchg
movs
dec
push
push
js
lahf
jmp
mov
jl
test
jne
or
mov
mov
lahf
and
mov
pop
jo
pop
cdq
mov
dec
repz
ds
sbb
test
pop
clc
repnz
mov
fsubr
or
iret
jp
jae
fisubr
pop
retf
mov
pop
sbb
rcl
lods
test
ficomp
ret
add
(bad)
movs
das
pop
push
sbb
cwde
cld
add
push
jnp
das
mov
mov
add
cmc
imul
les
mov
xchg
rol
dec
test
xor
ds
xor
mov
adc
repz
xor
aam
jns
inc
repz
pop
inc
scas
sub
sbb
dec
lock
ins
lea
ds
es
jmp
fisttp
shl
xchg
hlt
(bad)
jns
xor
test
xchg
cmp
ret
jmp
dec
dec
test
test
dec
adc
fidivr
inc
jne
cmps
popf
stos
mov
mov
fld
(bad)
mov
pop
inc
cwde
xchg
pop
pop
ret
jno
cmp
dec
mov
mov
repnz
jne
int
ins
and
mov
in
aam
or
sbb
retf
out
in
xchg
sbb
ins
sbb
enter
mov
ss
hlt
(bad)
jp
and
xor
sub
add
mov
retf
mul
sub
cmp
mov
jo
test
xchg
aad
cmp
loope
mov
push
sti
push
and
into
push
retf
dec
js
xchg
dec
gs
xor
sub
pop
or
scas
sbb
sub
pop
mov
xlat
mov
les
shl
adc
xchg
ins
mov
xor
xor
cmc
ins
xchg
lahf
repnz
call
retf
inc
inc
gs
mov
scas
lock
enter
test
inc
and
lock
add
jecxz
ins
lea
pop
adc
pop
jecxz
scas
imul
adc
sbb
and
push
xchg
jmp
pop
sbb
ret
or
xor
add
xor
jo
test
mov
push
es
stos
ja
ret
call
mov
or
xor
xchg
imul
sbb
stos
xchg
and
xor
push
cli
lahf
add
xor
adc
daa
mov
pop
repz
mov
xor
ret
sbb
sti
in
push
gs
inc
xor
and
mov
xchg
pop
les
xchg
dec
icebp
stos
jg
fstp
pusha
sbb
dec
sar
cmp
add
or
sub
cmp
push
push
pushf
repnz
sbb
cmps
sub
xchg
stos
jp
sbb
mov
inc
sar
shr
cwde
(bad)
fcomp
lds
pop
cdq
add
(bad)
int
in
cdq
push
pop
sbb
shr
fst
lds
retf
sub
neg
jo
mov
add
inc
icebp
mov
daa
stos
mov
mov
push
sub
xchg
shl
push
mov
cld
push
xchg
cmp
push
fcmovnbe
int3
xor
adc
add
push
or
push
xchg
push
mov
jns
mov
and
xchg
push
in
ds
pop
pop
mov
loope
ds
movs
push
mov
test
test
inc
adc
fdiv
add
xor
bound
shl
js
out
in
xchg
xor
cmc
xchg
mov
aaa
test
push
ror
out
cmps
nop
jmp
outs
mov
push
sbb
mov
leave
fwait
dec
mov
icebp
fnstcw
push
rcl
cmp
dec
maxps
je
and
lods
sbb
test
(bad)
hlt
mov
scas
cmps
popf
in
mov
pop
or
jg
repnz
(bad)
sub
add
shr
lock
(bad)
jbe
aaa
cmp
shl
push
(bad)
adc
repnz
pushf
push
adc
ins
aad
lea
repnz
rcl
push
sbb
xor
or
jl
(bad)
cli
cmp
shr
jo
popf
mov
add
pop
cdq
out
cmp
mov
mov
test
cmps
xor
cmp
das
(bad)
psubq
loope
sub
dec
adc
jae
cmps
pop
xor
or
aas
sub
dec
xchg
push
fild
pop
pop
push
mov
xchg
dec
mov
xchg
sbb
in
xchg
mov
idiv
pop
pop
push
add
adc
add
sub
mov
mov
cmp
sbb
outs
(bad)
and
mov
mov
lods
or
scas
movs
or
push
dec
dec
stos
fcmovbe
mov
ja
nop
shr
fldcw
ins
nop
addr16
adc
sub
(bad)
inc
add
adc
dec
(bad)
mov
or
(bad)
stc
aaa
js
lds
test
push
push
mov
jg
cs
jnp
mov
jle
stc
pop
mov
dec
lock
icebp
jmp
ret
pop
add
inc
test
push
cmc
lock
and
lods
xchg
mov
push
dec
out
dec
or
push
push
inc
fsub
and
jp
ror
jo
pop
jbe
jnp
inc
neg
mov
(bad)
push
adc
imul
xchg
(bad)
mov
(bad)
xor
sti
xor
(bad)
sahf
imul
push
cwde
mov
and
push
cmps
push
adc
and
sbb
inc
iret
sub
or
mov
in
or
loop
mov
sahf
(bad)
pop
stos
addr16
sbb
and
xor
test
not
pusha
pop
ss
scas
movs
fiadd
in
jle
sbb
fwait
mov
cmp
movs
and
mov
xchg
adc
cmp
add
jne
jns
jne
fistp
and
xchg
lea
ins
ret
add
bound
fs
add
loop
imul
xchg
std
loop
mov
shl
xchg
call
and
jp
cmp
jecxz
push
gs
mov
cwde
iret
and
xor
pop
jo
sbb
fisub
leave
sub
xchg
xor
idiv
fisub
repz
out
mov
mov
lods
sbb
xchg
push
mov
sub
rcl
cmp
sbb
push
jge
imul
push
or
adc
inc
add
aaa
loopne
dec
push
repz
fidivr
jmp
xlat
data16
cli
fst
dec
xchg
push
mov
sahf
mov
jmp
test
movs
frstor
mov
aad
jl
fdiv
jbe
stos
sbb
aad
imul
hlt
sub
and
rol
xchg
or
inc
test
sub
adc
cmp
movs
cwde
jl
mov
inc
ret
repnz
mov
test
daa
sbb
add
enter
add
mov
push
ins
cmp
push
xor
mov
mov
pushaw
cmp
test
sub
inc
xchg
aas
add
xchg
xlat
add
add
popa
fsub
jnp
xchg
mov
into
cdq
shl
mov
sti
pop
jb
or
add
adc
imul
dec
inc
addr16
movs
mov
test
repz
je
mov
dec
push
sub
xchg
mov
sub
dec
nop
push
sbb
out
inc
repnz
hlt
(bad)
mov
or
push
dec
pop
hlt
in
out
pushw
aaa
ja
cdq
inc
loop
ja
adc
fld
push
dec
into
sub
icebp
aas
ja
jle
out
mov
sub
pop
fld
or
push
cdq
sbb
jmp
mov
imul
pusha
mov
cwde
mov
pop
and
or
(bad)
xchg
push
dec
int
lods
add
sar
test
aad
leave
call
std
ret
jae
aaa
mov
dec
scas
icebp
fwait
mov
jo
into
js
inc
cmc
inc
addr16
imul
bound
movs
push
loopne
loop
mov
sub
xchg
int3
push
push
fcmovne
or
out
xor
test
mov
cmps
pop
inc
ret
mov
push
dec
jno
xchg
fdiv
(bad)
xchg
outs
mov
mov
jecxz
and
es
xor
mov
stos
mov
mov
retf
sbb
xchg
xor
push
add
jge
imul
add
repnz
adc
or
ret
int
outs
sub
pop
mov
das
push
sbb
pop
cmp
push
mov
mov
popa
sar
outs
idiv
rcr
or
cli
mov
stos
stc
cmc
and
out
popa
or
test
cmp
xlat
mov
xor
jmp
jb
cmps
pop
aad
jmp
and
fdivr
xor
push
leave
xor
ins
jmp
push
(bad)
hlt
mov
cmps
in
adc
in
ja
ror
sub
fwait
pop
sahf
in
adc
sbb
ds
dec
cmp
dec
mov
lock
mov
pop
pushf
into
jmp
pop
data16
xchg
lods
into
fistp
jne
jno
xor
xor
cmp
jmp
imul
stos
popf
popf
jno
std
push
test
into
fcmovb
mov
(bad)
loopne
cmc
data16
cmp
daa
jmp
out
enter
cli
mov
popa
sub
imul
lods
or
call
lahf
mov
inc
pop
out
(bad)
imul
call
fldlg2
and
inc
mov
xor
(bad)
sub
add
sbb
out
pop
xchg
aad
cmp
aad
mov
shr
jmp
cmp
jno
(bad)
retf
sub
ins
sub
add
movs
mov
je
int3
call
mov
add
jecxz
cmps
inc
and
xchg
inc
cmps
bound
into
clc
add
push
stos
xor
outs
mov
xchg
popa
(bad)
inc
lds
pop
add
ror
data16
ret
ret
retf
les
mov
xchg
pushf
xor
popf
cmps
js
(bad)
dec
mov
push
dec
jge
out
add
mov
add
xchg
cmp
iret
xchg
sub
call
and
jae
pop
mov
xor
cmps
movs
mov
xor
or
daa
fnstcw
sbb
ret
jp
fs
lea
adc
xchg
jl
mov
and
adc
(bad)
xchg
movs
stos
sahf
cmp
dec
mov
nop
retf
popa
out
ret
ins
pop
push
loope
test
jmp
ja
(bad)
stos
xchg
add
add
lss
push
(bad)
push
xor
cdq
mov
sbb
cmp
rol
rol
ds
mov
cmp
and
ret
add
in
(bad)
cli
les
movs
push
and
and
xor
sbb
dec
mov
test
cmp
sub
add
mov
mov
cdq
bound
xchg
out
jp
xor
jbe
cs
push
(bad)
out
call
addr16
imul
pop
and
aad
sahf
les
adc
xor
and
cmc
mov
sbb
sahf
imul
push
xchg
xor
rcl
xor
jmp
xchg
dec
pop
or
call
jg
test
push
mov
loopne
push
pop
out
mov
add
adc
adc
aas
cmp
rol
jle
mov
adc
mov
push
(bad)
sub
mov
sub
push
stos
ins
sub
and
cmp
push
ret
cmp
(bad)
pop
bnd
cmp
and
fldenv
imul
inc
xchg
mov
xor
bound
ss
loope
fist
sbb
movs
lods
mov
xlat
dec
daa
es
in
cwde
ret
add
ficomp
fbld
sahf
pusha
fs
pop
fld
sti
mov
in
and
fwait
loope
xchg
sbb
and
in
shl
punpcklwd
fcmove
in
test
inc
fs
xor
mov
push
addr16
in
mov
mov
mov
jae
(bad)
pop
push
lods
or
movs
jp
mov
adc
pop
jp
push
bound
add
adc
inc
sub
pop
xor
jo
mov
aad
sub
jno
and
lods
outs
cmp
inc
inc
(bad)
dec
cmp
xor
xchg
pushf
sahf
(bad)
rcr
das
aam
add
out
movs
push
push
pop
mov
pop
pop
cmp
sar
ds
stos
(bad)
push
call
stos
test
daa
mov
aam
adc
add
sbb
inc
jle
aad
cs
mov
test
cmp
jle
cmp
rcr
pop
cmp
xlat
cmp
pop
mov
mov
inc
das
mul
pop
and
inc
popf
inc
cmp
or
and
pop
jg
int3
jae
lds
xchg
jne
stos
xlat
mov
fld
popa
mov
jl
mov
daa
std
push
add
and
aam
xchg
adc
(bad)
pusha
inc
in
movs
pop
pop
rcr
mov
retf
and
inc
das
mov
or
stc
(bad)
jb
and
adc
sub
jno
rcl
xor
mov
hlt
or
mov
and
stos
inc
imul
sbb
fstp
mov
imul
pop
imul
out
fstp
jmp
cmp
(bad)
cmps
leave
xchg
push
adc
jae
or
lock
cmp
je
mov
loope
xor
mov
pop
push
test
sti
cmp
or
in
mov
ficom
xchg
mov
das
mov
jmp
cs
adc
(bad)
mov
sub
rol
sar
ins
jo
or
fwait
inc
js
repz
dec
mov
mov
mov
aas
call
icebp
dec
test
outs
std
loopne
xchg
and
sbb
out
fadd
cmp
and
out
jno
ds
jbe
push
xchg
pop
push
aas
js
xchg
mov
push
xor
xchg
dec
cmc
movs
out
lods
jae
sar
push
in
sbb
dec
add
mov
mov
cmp
arpl
mov
dec
fcmovnbe
jb
xchg
outs
jo
mov
push
mov
xor
test
js
xor
mov
nop
pusha
fiadd
lds
fisubr
mov
pusha
mov
icebp
mov
mov
test
into
adc
push
pop
fbstp
sbb
mov
addr16
call
test
jb
rcl
and
sub
sub
enter
xor
sar
lds
mov
push
outs
clc
scas
pop
shr
les
mov
inc
mov
cmps
or
popf
xor
in
jmp
sti
push
(bad)
js
shr
or
cdq
mov
or
ins
jae
jmp
leave
cmp
inc
mov
(bad)
icebp
mov
(bad)
push
jmp
ret
cwde
stc
mov
imul
sbb
mov
push
ins
pushf
daa
sbb
addr16
xor
std
add
clc
xchg
xchg
xor
pop
cmps
jp
mov
movs
jle
fdivr
test
jl
(bad)
(bad)
mov
fimul
into
imul
push
adc
and
adc
mov
dec
mov
and
popa
sbb
data16
ficomp
fwait
test
es
push
scas
enter
js
aad
(bad)
mov
xchg
fild
and
fiadd
aad
gs
mov
push
mov
fadd
and
call
adc
in
inc
call
inc
sbb
icebp
mov
mov
mov
lea
cmps
inc
loopne
and
jmp
vhaddpd
leave
les
pop
push
dec
jae
cmp
mov
hlt
mov
popf
cld
hlt
and
jnp
xchg
mov
in
adc
dec
test
jns
and
xor
push
mov
jne
in
jb
mov
loop
out
jno
add
xchg
jbe
inc
sbb
jle
jmp
jns
or
outs
push
scas
dec
lods
into
pop
pop
repz
pop
repnz
dec
fdiv
inc
xchg
push
mov
jae
adc
hlt
sub
clc
fadd
jmp
jp
std
dec
push
mov
repnz
mov
mov
xchg
sub
lods
in
mov
sbb
inc
dec
xchg
ds
mov
call
dec
jmp
jns
(bad)
rcl
dec
(bad)
add
jns
rcl
fidiv
mov
sub
scas
loope
xchg
fistp
jae
out
fst
or
cld
in
add
inc
and
mov
mov
or
cmps
ficomp
(bad)
(bad)
hlt
push
(bad)
mov
ret
shl
icebp
int3
mov
clc
imul
imul
in
add
push
iret
cmp
scas
popw
inc
push
out
ins
xor
jns
jbe
lss
sub
cmp
shl
push
xor
pop
and
add
loope
push
int
xor
mov
ins
leave
rcl
sbb
jbe
mov
jge
imul
fnstcw
rcl
mov
fbstp
pop
mov
pop
ja
ins
lock
cmp
repz
nop
push
adc
(bad)
outs
cmp
mov
in
add
cmp
push
sub
retf
xor
mov
movs
aam
inc
test
xlat
pop
ins
push
mov
push
pop
jg
mov
fwait
lahf
add
cmp
ss
push
mov
imul
fld
adc
dec
outs
ins
cld
in
ficomp
or
(bad)
dec
pop
retf
ror
push
dec
ss
sbb
and
lock
sub
ja
push
push
ja
mov
inc
fimul
push
push
xor
push
lds
adc
scas
imul
aaa
frstor
(bad)
out
aaa
pushf
loopne
and
mov
int3
lods
xchg
outs
rcr
in
mov
les
fidivr
inc
(bad)
data16
sbb
push
mov
push
outs
rcr
sub
ss
(bad)
mov
inc
mov
out
jbe
pop
pop
sub
outs
popf
sub
lods
imul
inc
or
je
test
xor
mov
mov
mov
mov
xor
ins
fwait
add
pop
mov
iret
les
shl
lds
loope
add
loope
mov
outs
shl
ja
inc
and
nop
inc
bound
loopne
xchg
cmp
add
cmps
sbb
add
add
in
imul
sub
push
scas
and
mov
or
div
out
imul
xor
inc
loope
jg
loop
jmp
gs
ret
mov
mov
sbb
xchg
popf
in
das
lahf
pop
sahf
inc
and
and
xchg
sti
push
pop
call
in
hlt
imul
loope
xchg
hlt
sub
test
movs
mov
ds
fidiv
lods
dec
movs
scas
retf
sub
push
mov
mov
out
push
add
scas
out
xlat
fdiv
sub
and
sub
cmp
fucomip
push
mov
addr16
std
mov
mov
js
inc
push
nop
cmps
mov
push
(bad)
cmp
(bad)
scas
aam
mov
push
dec
or
add
(bad)
fldenv
xor
jmp
cmp
adc
imul
lods
ja
xlat
xor
dec
leave
mov
xor
add
xor
push
push
fisttp
xor
stc
xchg
xchg
mov
dec
xlat
sbb
test
cli
(bad)
outs
dec
pop
pop
jge
je
mov
mov
out
push
xchg
adc
sbb
pop
scas
sub
pop
xchg
test
fisttp
sub
cdq
mov
icebp
dec
jo
hlt
mov
fidiv
mov
ret
adc
jge
pop
mov
test
add
retf
(bad)
sbb
push
dec
xlat
pop
aaa
dec
(bad)
push
mov
pop
aaa
jg
ret
push
aas
iret
call
aaa
sbb
cmps
out
inc
xchg
sub
sar
iret
mov
ds
xor
cmp
js
loope
mov
mov
adc
sti
push
mov
shr
imul
scas
bound
fs
cld
mov
xor
add
fsubr
fmul
pop
sbb
adc
mov
xchg
dec
cmp
or
out
sti
sub
(bad)
data16
lods
xlat
shl
es
out
sbb
sub
xchg
sbb
mov
cs
loope
cmps
sub
and
inc
(bad)
aas
xchg
cmp
pop
mov
inc
dec
mov
mov
adc
adc
vmovd
inc
les
mov
sub
inc
xchg
jnp
aad
in
jo
cmp
or
stc
pop
xor
or
js
and
pushf
mov
push
aad
xor
and
push
mov
(bad)
push
cwde
leave
pop
push
pop
jp
movs
mov
ins
(bad)
call
(bad)
sub
bound
cmps
out
loopne
les
popf
mov
ins
inc
and
push
push
movs
dec
fistp
push
mov
pop
inc
push
sbb
adc
dec
inc
adc
xlat
pop
ds
ror
mov
push
sahf
scas
push
rcl
xchg
pop
inc
enter
xchg
inc
mov
pop
inc
xor
loop
movs
add
jmp
or
push
arpl
sbb
mov
leave
imul
push
xchg
xor
add
lock
fcomp
iret
cld
add
call
xchg
fist
jmp
mul
out
jge
sub
out
push
stos
mov
fmul
inc
push
push
int
fnstenv
loope
jl
stc
outs
inc
mov
inc
stos
cmps
mov
mov
bnd
lds
sub
loop
(bad)
shl
sbb
adc
fstp
call
mov
repnz
out
mov
lahf
lds
jecxz
aad
cmp
clc
dec
dec
es
popa
push
mov
cmp
mov
clc
fcmovnu
ja
aas
retf
adc
or
mov
sbb
xchg
mov
hlt
(bad)
std
pusha
lods
je
adc
add
dec
daa
push
loop
mov
push
mov
(bad)
push
(bad)
in
adc
push
inc
dec
pop
aad
mov
sub
xlat
inc
mov
add
and
ret
sub
mov
gs
loope
data16
pushf
push
push
je
scas
add
std
pop
sub
xor
ret
or
sub
mov
push
or
push
mov
hlt
in
cmp
fidiv
outs
ins
jne
xor
out
fist
sbb
out
sub
movs
mov
or
xor
push
jg
cmp
(bad)
adc
cmp
xor
nop
mov
cmc
es
pause
jmp
stc
xor
adc
movs
and
les
lods
cs
sub
loope
inc
and
dec
in
mov
ds
cli
pop
nop
cmps
iret
mov
repnz
sahf
sub
das
sbb
scas
jecxz
stc
fs
mov
and
enter
xor
fs
cmp
imul
dec
ror
ins
dec
cmp
mov
hlt
data16
getsec
mov
and
xor
nop
idiv
pop
add
push
sbb
xchg
push
aad
loope
jnp
jl
cs
mov
imul
movs
sbb
je
cld
inc
push
inc
std
lea
and
jp
call
inc
mov
enter
xchg
push
cwde
ds
xor
(bad)
lods
mov
jbe
in
and
mov
xchg
mov
aam
dec
ret
jb
inc
push
xor
and
dec
in
or
adc
cwde
push
dec
sub
mov
loop
sbb
adc
aam
lea
or
popa
inc
inc
jae
xchg
cmp
ins
cld
push
dec
shl
fisub
lahf
enter
in
call
test
add
in
and
jp
inc
movs
int3
dec
data16
mov
cmps
adc
out
adc
pusha
shr
(bad)
enter
cs
xchg
mov
dec
mov
enter
xchg
adc
mov
adc
loope
enter
mov
mov
lock
cmp
cmp
jnp
(bad)
stos
dec
push
sub
fld
lock
push
xchg
pushf
(bad)
(bad)
mov
push
cmp
dec
mov
adc
std
iret
iret
fucomp
std
add
xchg
mov
jecxz
and
loop
fldenv
enter
jne
mov
sbb
fidiv
mov
iret
movs
xchg
sub
es
addr16
adc
mov
xor
jbe
push
pop
push
int3
cmp
fld
popf
mov
inc
push
push
mov
lock
in
inc
xlat
xor
pop
pusha
out
je
mov
aaa
sbb
enter
mov
sub
repz
cmp
aad
push
outs
repz
mov
or
ins
sbb
xchg
add
cmp
lea
push
jecxz
rcl
jb
mov
scas
push
pop
push
cmps
jp
and
outs
inc
add
xchg
inc
imul
fcmovnb
pop
adc
adc
sub
mov
rol
repz
jecxz
xor
repz
or
out
mov
inc
sbb
aas
mov
js
pop
or
(bad)
in
movs
loope
cmp
lock
cmp
popf
shr
add
sbb
jbe
mov
jbe
adc
cmp
imul
fisttp
xchg
mov
sbb
dec
xor
and
xor
out
or
push
mov
sub
xchg
shl
cmp
test
xchg
ins
or
addr16
xlat
dec
and
pusha
jge
adc
imul
icebp
xor
imul
mov
ret
adc
jl
pop
lods
mov
sbb
cwde
cmps
add
and
ja
xchg
ja
sub
dec
les
ja
dec
push
mov
fst
cmp
mov
or
dec
mov
dec
dec
fcomp
jne
stos
fs
lds
out
test
jmp
lea
mov
ja
add
ficomp
mov
in
lods
push
int
push
cmps
sub
mov
rcr
(bad)
aas
stos
sbb
popf
xor
mov
out
or
jl
ror
add
xchg
mov
push
sub
xor
(bad)
dec
dec
dec
sbb
outs
mov
adc
xor
dec
cmp
push
pop
into
ficom
inc
xchg
push
fsubrp
fisub
gs
pop
inc
popf
jno
dec
cli
cwde
fcomip
jbe
inc
push
ret
dec
inc
lahf
movs
sub
or
dec
gs
mov
ss
out
sub
jae
icebp
aaa
sub
add
xor
cmps
fcomp
aad
xchg
cmps
fisub
dec
inc
in
sbb
inc
jne
push
cmc
and
pop
cmp
in
test
inc
ds
out
sub
dec
loopne
push
sbb
in
mov
or
scas
add
movs
adc
jle
xor
inc
adc
sbb
out
fwait
xor
mov
aaa
pop
and
mov
sbb
and
retf
sub
mul
pop
mov
call
mov
shr
fwait
adc
adc
ins
and
push
push
sub
fiadd
fs
in
rcr
and
cs
add
sbb
xchg
push
pusha
pop
dec
sar
aam
out
fcom
das
test
les
dec
push
xor
push
and
push
popa
sbb
push
int3
mov
sbb
retf
fstp
aaa
sbb
cmp
out
or
icebp
div
shr
mov
(bad)
je
pop
mov
sub
cli
test
xchg
or
inc
adc
leave
cmp
sbb
mov
test
jge
and
add
fwait
ins
lods
dec
popf
lods
loop
mov
mov
test
and
xchg
mov
cmc
sub
dec
clc
push
ret
sbb
xchg
ins
pop
push
daa
cmp
hlt
push
sub
das
and
sbb
push
in
mov
loopne
inc
(bad)
idiv
iret
inc
iret
stos
popa
shl
movs
sub
xchg
xor
and
ins
push
test
adc
popf
jle
adc
mov
sbb
(bad)
jmp
shl
fcomi
retf
outs
ja
ss
inc
cmp
or
(bad)
and
xor
repnz
fisttp
cdq
inc
jbe
dec
push
jle
jo
jge
movs
mov
out
mov
mov
mov
xchg
mov
sub
sub
lods
repnz
mov
mov
xchg
ins
sub
pop
push
sbb
mov
inc
neg
pop
jmp
bound
loop
(bad)
leave
data16
or
adc
into
aas
push
pop
es
out
ds
popf
dec
int3
cmc
xchg
xor
call
leave
(bad)
loopne
pop
pusha
pop
sar
lea
cmp
movs
imul
adc
jno
xchg
sete
add
adc
sbb
lea
add
pop
pop
xchg
push
bound
bound
sbb
inc
je
pop
sbb
retf
pop
fnsave
xor
xchg
outs
repz
(bad)
and
lea
ret
test
sbb
jg
jmp
dec
fs
add
jmp
sbb
in
jg
push
add
retf
jmp
add
rcl
scas
or
and
mov
or
mov
mov
sbb
clc
pop
inc
lock
jne
fdivr
fistp
push
add
popa
fist
vmovmskps
mov
jae
add
int3
sub
jno
test
sub
(bad)
cmps
retf
jl
jl
cmp
(bad)
adc
int
iret
icebp
xchg
or
in
mov
or
fwait
pushf
or
sub
bound
jb
mov
dec
add
add
sbb
scas
out
jno
inc
lea
loope
ins
add
adc
jg
mov
(bad)
sti
cmp
(bad)
ret
push
outs
adc
loope
int
mov
ins
and
in
popa
outs
mov
dec
jecxz
pop
cmps
inc
sbb
xchg
scas
mov
jg
jge
lahf
dec
jge
mov
enter
clc
dec
pop
mov
in
xor
pop
adc
jnp
jno
fiadd
test
jge
inc
sub
pusha
aam
inc
mov
out
xor
add
clc
scas
sbb
int
in
adc
xchg
retf
jnp
cmp
cld
aam
sbb
xchg
or
and
sbb
loop
cld
and
ss
mov
dec
cmp
and
sahf
add
imul
mov
add
jbe
inc
sbb
jne
xchg
jmp
jns
or
call
aas
mov
sub
jb
sti
pop
sahf
test
cmc
sbb
push
das
dec
mov
pop
sub
push
xchg
into
mov
out
popa
enter
loopne
fisub
ret
shr
inc
ret
dec
fld
push
pop
pop
lods
pop
add
(bad)
sub
(bad)
push
into
(bad)
lock
in
jg
dec
push
sbb
cmp
(bad)
xchg
or
fcom
pop
(bad)
test
or
pop
loop
popf
push
pop
mov
push
in
addr16
lea
inc
mov
mov
loop
push
mov
sub
in
mov
sahf
add
adc
xor
mov
jge
inc
jbe
mov
xchg
jle
lock
int3
fisttp
cmp
les
ret
fucomip
push
fwait
les
sub
popf
sbb
dec
retf
fs
add
movs
call
shl
xor
in
mov
xor
mov
pop
pop
push
or
push
popf
sub
ret
mul
movs
cmp
(bad)
fwait
adc
push
dec
enter
adc
cli
popf
mov
inc
add
in
cld
je
push
(bad)
xor
sbb
inc
adc
xor
imul
or
xchg
push
xchg
or
sbb
xor
adc
or
rol
(bad)
outs
aas
ret
shl
or
push
inc
sub
pop
jae
xor
push
pop
test
add
jo
call
mov
out
cmp
adc
mov
(bad)
(bad)
push
dec
jb
adc
cmp
jmp
stos
adc
mov
xchg
mulps
popa
test
jmp
cdq
mov
xlat
rol
or
jbe
loope
mov
lods
push
add
outs
sub
test
pop
mov
aam
gs
add
mov
cmp
es
nop
jge
jb
fwait
xchg
les
add
inc
xchg
aad
and
cwde
jae
cmp
pop
loopne
pop
add
rol
aaa
aad
shl
mov
sub
jno
shl
movs
(bad)
mov
jns
xchg
ds
dec
call
sbb
arpl
mov
sar
push
push
jg
fiadd
repnz
data16
imul
in
pop
lods
int3
sti
jle
sti
mov
push
lea
(bad)
cmc
push
loope
mov
dec
xchg
fmul
xor
sub
mov
mov
(bad)
xlat
cmps
sbb
push
dec
dec
int
xor
inc
mov
jb
cmc
cmp
xor
mov
sub
mov
add
adc
pushf
adc
xchg
adc
adc
ror
pop
pop
push
fcom
xchg
cmps
mov
cmp
int3
movs
jo
xchg
dec
add
cmps
dec
mov
or
xchg
in
mov
add
sub
adc
xchg
movs
cmc
jg
scas
pop
mov
xchg
into
fild
cld
pusha
ror
in
arpl
retf
dec
mov
inc
in
or
mul
and
fadd
movs
(bad)
bound
or
mul
cmp
(bad)
pop
add
ror
mov
xchg
push
sbb
test
pop
icebp
fist
ins
pop
dec
push
pop
jle
call
pop
mov
ret
dec
lods
les
adc
mov
sti
inc
adc
and
shld
sbb
dec
add
xchg
(bad)
pop
test
in
jp
adc
sub
xor
rcl
push
(bad)
call
mov
cmp
(bad)
fisttp
call
cmps
add
ja
and
iret
fcmovnb
adc
stos
xor
in
call
(bad)
int
cmp
cmp
test
pop
and
call
jcxz
retf
mov
adc
popf
aad
pop
pop
push
outs
jmp
pop
push
push
dec
mov
add
push
ss
mov
sub
sub
or
lds
dec
cmp
jo
scas
dec
sahf
(bad)
sub
mov
popf
cmp
and
lock
(bad)
aad
gs
movs
dec
icebp
mov
dec
ds
stc
push
mov
sub
setp
ins
shr
pop
cdq
repz
inc
pop
mov
mov
adc
test
sar
jbe
jle
sub
mov
mov
(bad)
xor
or
cmp
mov
fmul
jg
jge
push
inc
cmc
xchg
jmp
pop
jle
inc
cmp
fbld
and
jl
inc
sar
sbb
or
jp
or
imul
push
inc
or
rol
sub
add
pop
cwde
cmp
es
add
and
aad
popa
push
in
stos
arpl
inc
fdivr
mov
test
shl
mov
div
and
adc
cmps
mov
retf
shl
sbb
xor
rcl
cmp
lock
(bad)
(bad)
dec
adc
ret
jnp
push
push
cdq
jo
enter
cmc
pop
sub
jo
xchg
mov
out
sbb
sub
add
adc
sub
or
fadd
xchg
cmp
ds
(bad)
push
or
xchg
push
jmp
add
es
movs
outs
lds
fnsave
imul
inc
xchg
cmp
xchg
add
imul
sub
popf
int
xchg
mov
add
push
bound
je
jno
ret
cmp
popa
dec
mov
pop
push
push
and
adc
xchg
jmp
aas
inc
mov
rol
push
xor
test
dec
loope
dec
mov
dec
xor
mov
test
cwde
sahf
mov
icebp
mov
jne
sbb
sbb
add
adc
inc
fdiv
xchg
xchg
jne
fdiv
aas
imul
pop
out
ret
mov
xor
push
xor
dec
aam
xor
(bad)
xor
cwde
sti
pop
and
mov
sub
int
fwait
call
xor
cli
xchg
out
push
inc
sub
fwait
test
in
sbb
cwde
push
aam
shl
adc
loope
pop
ficom
mov
sub
in
pop
retf
mov
inc
mov
sub
cld
iret
imul
mov
jge
cli
or
xor
lea
pop
xchg
or
idiv
mov
jle
xor
sub
adc
or
repnz
clc
xor
jp
outs
mov
jmp
pop
cld
clc
mov
stos
retf
fsubr
icebp
mov
cmp
inc
outs
imul
xor
hlt
push
bnd
xchg
mov
mov
pop
sub
sbb
sbb
inc
frstor
xchg
pusha
(bad)
mov
push
aas
mov
outs
jge
pop
xor
sub
push
stc
sbb
xchg
cmp
mov
dec
mov
push
call
popf
pop
push
es
pusha
addr16
mov
adc
push
pusha
aaa
stc
mov
(bad)
in
ja
mov
in
and
push
cdq
aad
clc
xchg
ficom
xchg
xor
xor
mov
jl
(bad)
hlt
xchg
pop
sub
cli
lds
pusha
push
test
(bad)
mov
lock
arpl
enter
xor
jl
lahf
addr16
jg
daa
cmps
out
cld
and
sub
js
adc
sbb
icebp
sub
rcr
aaa
mov
inc
sbb
sub
call
sub
stos
daa
inc
mov
mov
cdq
cmps
jecxz
xlat
in
iret
lods
jp
adc
push
push
adc
daa
cmps
retf
shr
imul
xchg
push
test
sub
sbb
fild
lea
push
and
mov
adc
movs
jno
sub
inc
xor
jo
jne
xor
int
scas
mov
movs
cdq
cmp
xchg
mov
jo
mov
cmp
sbb
cmp
(bad)
adc
push
je
jmp
aas
hlt
inc
outs
sti
xor
fdivr
mov
repz
ja
or
sub
mov
jmp
call
dec
mov
mov
test
ret
test
clc
xlat
inc
leave
mov
test
sbb
movs
mov
mov
xlat
cmps
call
fmul
ins
stos
push
ret
ja
push
test
dec
leave
lds
xchg
popa
mov
xor
cmp
out
sar
adc
pop
add
dec
cmp
(bad)
mov
jb
je
test
test
dec
mov
imul
popf
sahf
or
add
or
jmp
push
jmp
xor
inc
push
sbb
mov
cdq
mov
test
add
add
movs
push
pop
mov
jne
sbb
bnd
mov
movs
dec
div
xchg
push
pop
retf
out
outs
fst
mov
jb
xlat
cmp
cwde
loopne
jno
stos
mov
loope
fdivr
inc
bound
clc
into
dec
jns
xchg
pop
jns
clc
dec
loopne
xor
(bad)
jmp
push
loope
in
inc
push
pop
or
outs
mov
xchg
dec
repnz
push
(bad)
xchg
mov
sbb
imul
jmp
inc
mov
stc
sar
sbb
stc
jbe
fst
adc
mov
repz
out
lahf
sbb
xchg
das
jns
adc
mov
sbb
cwde
mov
sbb
pop
loopne
and
mov
sub
rol
popf
dec
aas
fwait
adc
out
pop
sbb
xchg
jns
push
jle
test
gs
je
push
sub
pop
daa
cdq
cmp
sub
xchg
push
es
lahf
mov
add
inc
push
push
lahf
loopne
test
mov
mov
add
xor
lock
shl
cmps
mov
js
or
dec
(bad)
test
jp
xchg
or
je
cld
add
mov
sub
pop
fidivr
retf
xchg
mov
call
ror
sub
cmp
jl
push
hlt
and
jo
jbe
mov
xor
push
xchg
push
repnz
push
call
in
mov
mul
das
mov
dec
push
add
xor
mov
push
mov
mov
adc
or
sbb
xchg
jle
lods
xor
sbb
add
jl
push
dec
jbe
adc
cmc
or
leave
xor
mov
cli
jne
enter
pop
pop
adc
inc
jmp
dec
pop
pop
sbb
or
je
mov
push
cmp
dec
test
stc
scas
arpl
dec
and
mov
pop
lods
mov
and
aaa
dec
imul
cmps
jp
and
dec
pop
or
mov
gs
pop
or
xor
push
call
pushf
or
scas
sub
or
lock
sar
bnd
mov
add
or
adc
in
gs
js
mov
adc
sbb
mov
inc
nop
mov
fcomi
cdq
dec
xor
in
sbb
jne
mov
xchg
xchg
adc
fld
imul
iret
mov
scas
(bad)
lock
inc
aam
pop
movs
or
push
jne
int
add
adc
test
retf
es
js
fsubr
jmp
fs
xor
pushf
cmp
cmp
fcmovu
jns
lods
sub
es
jns
mov
int
ss
cli
dec
ins
adc
aam
cwde
mov
mov
clc
inc
(bad)
fisttp
or
sub
call
mov
mov
jae
cmp
mov
lds
sbb
inc
and
cmp
pop
scas
movs
scas
fldcw
mov
add
and
or
ja
jmp
sub
sub
into
xlat
dec
es
in
daa
aas
cmp
pop
sub
daa
dec
popa
sahf
cmc
xchg
stc
pop
ja
cmp
scas
nop
push
js
push
sbb
jmp
xchg
jmp
idiv
(bad)
xchg
mov
jle
fsub
mov
je
loope
jae
outs
sbb
ins
mov
popf
leave
lock
dec
dec
out
je
inc
lds
ret
or
outs
fisttp
std
cli
adc
daa
sub
leave
cmp
dec
xchg
xor
movs
jmp
xor
jns
in
adc
repz
mov
movs
dec
mov
adc
out
popa
mov
mov
mov
pop
mov
(bad)
push
sub
sbb
(bad)
cld
enter
jecxz
sbb
in
or
lock
cs
pushf
hlt
test
mov
inc
mov
jo
dec
sar
adc
jae
lods
outs
mov
jmp
lahf
jb
les
push
iret
jo
push
dec
imul
adc
pop
int3
pop
cdq
mov
jns
mov
cwde
iret
in
outs
ret
jmp
out
lea
push
xchg
cmp
aas
sub
dec
lods
out
rol
or
loopne
xor
popf
push
shl
push
xor
mov
sub
test
pop
jns
dec
inc
push
mov
or
aad
out
lods
cmp
xor
pop
dec
pop
jmp
fst
fistp
ja
xor
mov
mov
jg
das
fmul
push
cs
push
adc
cmps
dec
jp
push
int
jo
xchg
add
pmullw
scas
and
cmps
test
pop
mov
push
push
(bad)
pop
test
push
inc
ins
pushw
xchg
fimul
or
popa
mov
sub
cmc
jno
repnz
in
shl
sbb
inc
outs
or
cmps
xor
sub
adc
mov
pop
dec
mov
adc
loopne
cmp
xchg
cdq
xor
cmc
stos
mov
(bad)
mov
sbb
aaa
out
or
mov
xchg
sub
shr
and
pop
mov
rcr
fmul
jmp
div
test
inc
xchg
lock
adc
or
add
push
sub
es
jnp
mov
sub
push
sti
push
jecxz
ss
(bad)
mov
or
mov
and
adc
cdq
addr16
test
and
sbb
push
push
popf
add
je
and
ins
push
add
inc
js
sti
rol
es
dec
mov
xlat
retf
call
cmps
addr16
and
sub
pop
or
outs
pop
mov
pushf
mov
(bad)
fcom
add
xor
mov
sahf
scas
sub
add
popf
movs
sar
jne
inc
pop
pop
push
sub
push
jbe
cmp
mov
std
add
mov
sbb
add
ins
(bad)
sub
les
mov
pop
and
shl
push
faddp
jb
or
push
mov
pop
mov
sub
pop
pop
movs
inc
cmc
cmp
aaa
xchg
sbb
and
mov
pop
ins
or
clc
inc
arpl
dec
std
mov
push
dec
dec
(bad)
jle
or
jno
mov
sub
das
mov
xchg
cmc
mov
inc
imul
mov
scas
sbb
push
or
rol
mov
sub
daa
imul
fwait
loop
pop
pop
icebp
jns
int3
bound
sbb
fldcw
inc
leave
nop
jge
icebp
pop
je
inc
xor
rcl
inc
(bad)
lahf
jge
dec
jbe
and
mov
push
fst
inc
(bad)
jl
movs
movs
jb
cmp
ja
out
jg
(bad)
sub
(bad)
xlat
test
arpl
inc
push
cld
sti
push
add
clc
movs
add
(bad)
xlat
cmp
or
stc
pop
idiv
stos
pusha
into
pop
test
js
inc
mov
sub
test
mov
daa
pop
and
shl
jbe
call
mov
xchg
sbb
int
add
sbb
pop
mov
or
mov
rol
fadd
mov
or
jmp
ja
dec
ret
pop
test
sbb
and
sbb
cwde
mov
pop
mov
fstp
mov
push
mov
jle
inc
das
shr
mov
les
pop
test
hlt
das
fs
loop
scas
add
dec
mov
xor
movs
pusha
cs
test
adc
sbb
add
aaa
jbe
out
adc
sahf
xor
xor
daa
or
jmp
jo
aas
mov
add
jnp
popf
imul
cmc
in
mov
neg
(bad)
std
fild
inc
add
popf
jmp
inc
call
mov
jl
push
dec
je
fsubr
ins
xor
std
int3
sbb
xchg
ror
inc
adc
in
daa
pop
mov
rol
push
movs
mov
cld
int
int
push
in
repz
jbe
out
or
cli
in
add
sub
dec
xchg
icebp
das
jbe
sbb
lea
ret
call
mov
pop
jmp
adc
push
adc
push
inc
dec
add
jo
shl
aaa
mov
sbb
sbb
es
xchg
(bad)
mov
loope
sbb
imul
pop
cmp
js
pop
adc
fmulp
repz
mov
cs
adc
or
jo
cmp
dec
pop
pop
mov
xor
adc
es
stc
retf
or
xchg
sahf
das
pushf
push
mov
add
movs
and
push
leave
not
cli
mov
jg
or
push
pop
je
or
dec
lock
or
adc
dec
shl
pop
ret
nop
pop
sti
fs
jbe
shl
aaa
jo
mov
aam
cmp
inc
fisub
mov
aaa
add
out
mov
in
xchg
shl
nop
xchg
outs
popa
mov
lods
mov
or
inc
ja
loopne
mov
xchg
mov
adc
clc
in
std
inc
xchg
out
(bad)
pop
jge
or
jge
pop
pusha
mov
sbb
mov
es
sub
inc
or
push
call
test
sub
inc
mov
cwde
inc
push
stos
jp
lods
pop
cmp
in
mov
or
es
mov
icebp
sbb
sub
jge
pop
xchg
or
dec
jl
push
mov
shr
fisub
pop
mov
mov
fstp
xor
sub
popf
loopne
movs
xor
shr
gs
ret
push
jmp
jns
movs
ror
lock
nop
sti
nop
xchg
rcr
std
xor
sub
xor
push
stc
fild
test
xchg
outs
mov
clc
dec
les
in
mov
ss
rcr
lock
adc
aaa
inc
loop
or
pop
cmp
mov
jl
ss
mov
mov
pop
or
fisttp
ret
mov
loopne
repz
mov
cmp
mov
mov
cmp
(bad)
adc
and
push
cs
jle
cmp
jmp
mov
gs
jne
call
repnz
les
push
test
or
(bad)
adc
pop
and
push
push
mov
adc
push
pop
aaa
movs
or
adc
and
cmp
mov
mov
daa
aam
cld
inc
mov
cpuid
push
out
mov
lahf
imul
je
xchg
lods
jp
jo
ss
adc
inc
lods
sub
xor
hlt
sti
jmp
jg
in
pop
popa
leave
(bad)
xchg
push
imul
fisttp
and
stc
jmp
sub
adc
imul
stc
test
es
jl
ror
pop
pushf
shr
or
scas
fist
pop
cmp
mov
pop
xchg
mov
lock
sahf
repz
adc
add
lods
clc
outs
xchg
jmp
xor
and
adc
test
scas
mov
ins
dec
lods
pop
lods
cmps
dec
sar
xchg
fwait
sbb
cmc
or
aas
sbb
sbb
xchg
xor
add
adc
push
add
(bad)
into
pop
enter
pop
pop
mov
je
jl
arpl
inc
not
push
adc
call
xchg
cmps
shl
adc
sti
and
mov
cmp
jecxz
push
adc
sbb
bound
out
dec
xor
jle
push
cs
loopne
out
stos
inc
and
xchg
retf
adc
arpl
push
cmp
loop
jmp
(bad)
outs
ror
jno
imul
xor
mov
sar
cli
inc
xor
inc
out
jmp
dec
or
inc
jmp
rol
jmp
adc
push
push
pop
pop
push
out
xchg
push
inc
cmp
js
nop
into
das
or
push
fist
and
fsubr
movs
pushf
js
mov
push
xchg
or
inc
cld
cli
push
iret
jae
xor
out
test
push
sbb
aam
jecxz
lds
jne
(bad)
repz
ror
push
inc
cwde
xchg
fcmovbe
mov
movs
ins
xchg
int
call
fiadd
ja
xchg
cmp
test
into
popf
dec
mov
in
addr16
out
stos
dec
call
mov
call
cs
int3
pop
add
data16
pop
into
(bad)
cmp
mov
push
cmp
adc
xchg
adc
mov
rol
mov
test
pushf
fistp
leave
enter
sbb
pop
clc
lods
mov
stos
dec
sar
clc
dec
push
jmp
dec
push
gs
rcr
inc
cwde
aaa
aaa
jge
cmps
sbb
in
fcmovu
jecxz
adc
and
jno
leave
sbb
cmps
iret
loop
mov
cmp
or
pop
ins
fstp
xchg
xchg
or
cmps
and
test
(bad)
into
(bad)
out
cdq
jle
shl
retf
push
cld
jne
ins
push
pop
mov
push
push
sbb
add
push
adc
dec
adc
adc
je
jl
push
loope
cmps
add
fbld
jae
cli
cmp
mov
ficom
xchg
xlat
cmc
mov
pop
jl
mov
in
out
jl
jb
outs
inc
scas
and
mov
xor
js
cmp
(bad)
jo
push
test
stos
jecxz
test
addr16
cmp
jmp
std
jno
jp
out
pop
push
cmp
adc
in
lds
add
mov
cmps
rcr
sub
daa
addr16
push
add
xor
adc
test
fbstp
adc
cwde
jns
movs
mov
sub
cmp
loope
pop
out
xlat
adc
xchg
call
loope
mov
pop
ds
or
jo
and
add
imul
test
or
cli
cld
xor
xchg
pop
mov
ds
test
add
(bad)
pop
jno
push
cld
fwait
dec
xor
sub
add
or
inc
xor
mov
test
popf
int
jae
jmp
test
les
fdiv
hlt
ins
movs
in
push
jmp
fimul
sbb
push
sbb
scas
dec
pusha
add
sbb
xchg
mov
ret
test
cmc
rcl
push
xor
push
pop
lods
push
xchg
push
rcr
jno
push
je
rcr
add
pop
call
jo
cmp
fldcw
mov
fcom
xor
xor
pop
loopne
nop
out
aaa
mov
jg
cmps
inc
add
sub
push
mov
fstp
pop
mov
call
sar
jle
push
and
sub
xor
retf
mov
xchg
sbb
xor
lea
cdq
aas
cmc
or
cwde
sub
mov
cmp
xor
jbe
repz
js
pop
lds
sbb
mov
dec
mov
xchg
add
movs
mov
push
or
adc
adc
(bad)
stos
stos
xor
pop
outs
xor
leave
cli
les
dec
les
addr16
and
hlt
inc
mov
in
xchg
cwde
push
jbe
ins
retf
ror
cdq
pop
cmps
xlat
mov
mov
nop
xor
arpl
jae
pop
sub
cmp
je
ss
call
xchg
aas
lahf
ret
xor
int
sbb
popw
out
push
mov
ja
hlt
out
imul
outs
int3
(bad)
fcmovnb
dec
and
bound
and
xchg
daa
xchg
push
call
bound
(bad)
outs
lahf
jp
clc
dec
dec
sbb
mov
pop
out
pop
cld
add
int
lods
cli
popf
ds
int
push
movs
cwde
iret
pop
mov
adc
xchg
imul
mov
call
dec
sub
cmp
sub
xor
cmp
xchg
lahf
sbb
inc
sub
ficom
jle
iret
dec
(bad)
and
pusha
jnp
loop
ins
dec
jb
pop
nop
inc
(bad)
in
in
loopne
cld
xchg
sar
push
mov
outs
xchg
dec
cmp
xchg
in
std
adc
stos
mov
sub
push
pop
xchg
(bad)
ja
scas
ficom
sub
add
add
inc
int3
in
fldln2
leave
test
test
fsub
popa
adc
mov
sbb
aaa
test
cs
sub
mov
pop
sub
ror
push
cmp
aam
mov
or
cmp
sbb
fidiv
lock
repnz
adc
mul
pushf
test
jns
mov
sbb
jb
jle
mov
js
inc
mov
sub
add
jp
dec
fs
push
xchg
scas
mov
in
add
adc
ja
pusha
jp
sub
and
in
call
shl
xchg
sub
and
sbb
jl
aad
fsubr
cdq
sbb
pop
repz
jae
shl
sbb
ror
mov
dec
mov
stos
ror
and
popf
fidivr
jbe
jae
mov
in
js
mov
xchg
shl
and
jmp
sub
outs
aaa
test
jbe
fisub
pop
out
das
pop
push
sub
jl
jge
retf
in
fs
sub
js
or
inc
dec
std
loope
mov
dec
loop
jg
mov
popf
inc
mov
aam
or
jae
mov
jns
imul
in
pusha
xchg
inc
cmc
(bad)
ficom
ret
adc
sbb
mov
jmp
out
push
int
jp
out
(bad)
cmp
pop
out
movs
mov
dec
fwait
pop
cwde
stc
jmp
mov
loopne
movs
mov
dec
ins
sub
inc
jmp
dec
jmp
shl
rep
pop
cmp
sub
outs
pop
imul
fs
adc
jns
out
scas
push
dec
(bad)
scas
dec
push
enter
add
call
jecxz
fisttp
clc
push
call
addr16
outs
fwait
mov
pop
data16
xor
test
dec
add
test
pop
dec
int
mov
push
adc
xor
jmp
and
aad
inc
hlt
inc
push
push
push
mov
pop
call
les
and
dec
pop
xor
retf
xchg
jo
adc
jb
scas
jmp
mov
ret
cmp
mov
repz
test
and
daa
aad
ja
pop
outs
repz
jne
(bad)
lds
and
cmc
sar
jle
mov
push
aaa
lods
(bad)
movs
push
xor
push
and
mov
(bad)
arpl
fwait
pop
add
aaa
sar
data16
jnp
ror
cwde
sub
addr16
adc
nop
pop
jge
and
push
aam
sub
cmp
lds
fistp
in
lahf
and
daa
inc
xchg
jmp
xchg
inc
add
inc
dec
mov
hlt
adc
outs
enter
(bad)
mov
inc
stos
xchg
add
shl
scas
loopne
jnp
mov
fsubr
stos
(bad)
dec
and
loop
or
iret
test
mov
fld
push
out
aas
pop
push
loope
out
lods
sahf
pop
adc
fs
inc
stos
and
and
int3
leave
aas
xlat
dec
movs
(bad)
fwait
mov
lods
cli
js
inc
js
sti
xor
je
sub
int
mov
mov
xchg
(bad)
ds
mov
push
ror
lods
aam
sar
jmp
jl
cmp
pop
pop
mov
sub
xchg
imul
(bad)
pop
mov
out
cdq
popa
sbb
cmc
paddsb
add
fild
jno
arpl
addr16
pushf
jecxz
mov
les
int
out
xlat
mov
jnp
jne
mov
pusha
int3
rcl
movq
mov
nop
jecxz
das
mov
mov
jecxz
xchg
mov
not
in
icebp
cmp
inc
and
xchg
fdiv
sahf
scas
dec
jnp
push
es
fist
dec
mov
and
daa
pusha
sbb
test
mov
mov
adc
sub
adc
inc
lods
push
mov
cmp
push
dec
out
retf
xor
sub
sub
pop
jae
dec
mov
movs
test
jecxz
je
rcl
cmp
mov
and
out
ror
sub
in
int
mov
xlat
ss
addr16
mov
push
lahf
clc
fsubr
jg
mov
inc
fnstsw
mov
jbe
adc
push
or
mov
dec
int3
mov
cmc
sahf
or
pop
outs
out
pop
ror
bound
and
sbb
push
pusha
jo
outs
fld
inc
outs
mov
test
outs
and
test
mov
fdivr
mov
xchg
mov
xchg
ficomp
bound
bound
out
out
mov
push
lahf
mov
rol
dec
sbb
inc
icebp
fcomp
sti
push
push
mov
cmp
cmp
add
test
sub
in
xor
add
add
nop
pop
push
inc
shl
cmp
daa
aaa
fs
xchg
std
mov
xor
fisttp
mov
inc
sti
bound
pusha
mov
xor
das
loop
mov
xchg
stos
pusha
into
pop
retf
pop
mov
retf
out
retf
or
xchg
dec
dec
imul
pop
xor
in
inc
sbb
call
test
mov
sub
mov
cs
sbb
jle
adc
push
push
inc
mov
inc
cmc
shr
js
cmp
inc
lods
push
and
fdiv
fiadd
out
inc
les
lds
jge
mov
mov
push
sub
jp
in
and
lea
dec
pop
retf
dec
loopne
and
test
adc
xchg
fdivp
sbb
mov
mov
stos
sahf
(bad)
jmp
rcr
sbb
mov
adc
cmp
jbe
and
popa
cmp
je
aad
mov
or
mov
iret
scas
pop
es
jb
jnp
leave
adc
xchg
jb
cmp
xchg
inc
jne
out
pop
outs
inc
mov
jbe
lahf
pop
ret
test
xor
pop
(bad)
fdiv
scas
popa
loope
sbb
scas
das
test
fistp
mov
sbb
(bad)
xlat
pop
outs
jmp
lock
mov
cmps
jmp
mov
ins
inc
jnp
mov
and
cmp
sub
or
cld
jmp
adc
mov
pusha
mov
ja
and
out
or
and
sti
mov
and
xor
dec
jg
dec
cmc
call
adc
or
leave
pop
xor
jl
fidiv
neg
jl
lock
cmp
imul
mov
movs
ror
xchg
ret
xchg
push
std
(bad)
cli
movs
fimul
push
int3
shr
in
dec
mov
out
(bad)
xor
in
jle
dec
mov
loope
or
xchg
mov
push
cmp
std
adc
fcmovnbe
pop
cmp
sub
rcr
push
fstp
je
sbb
repnz
add
mov
mov
fwait
retf
(bad)
fisub
jo
or
dec
sub
sub
lods
movs
dec
ja
cmp
popf
jnp
shl
cmp
ins
push
xor
and
jnp
push
(bad)
out
add
pop
cs
sbb
adc
mov
or
jns
out
mov
mov
cdq
inc
adc
mov
js
sar
cmc
and
dec
push
(bad)
das
lahf
out
sub
ss
lods
leave
push
shr
aaa
mov
sub
call
sbb
in
inc
jl
xchg
sar
imul
int3
scas
fadd
cmc
sbb
jno
jae
xchg
ret
in
and
mov
xchg
dec
sub
and
fstp
xor
aam
pop
xchg
mov
adc
sub
test
push
push
fs
mov
ins
repnz
cdq
in
jnp
fwait
push
or
mov
icebp
dec
adc
mov
out
fwait
push
dec
xchg
mov
out
adc
clc
jne
or
cmp
xchg
mov
leave
mov
rol
jne
xchg
stos
(bad)
clc
fild
mov
jne
inc
in
in
mov
cmp
into
push
mov
push
jg
enter
push
mov
lock
and
imul
inc
shr
data16
fimul
or
xchg
in
gs
aam
xlat
jb
outs
xchg
test
bound
xchg
mov
mov
mov
and
jge
shr
(bad)
or
dec
push
mov
xor
loopne
mov
mov
ret
jo
aaa
mov
push
rcl
sbb
and
cmp
pop
sbb
arpl
xchg
(bad)
and
fmul
sar
jbe
sub
arpl
movs
sbb
xor
or
and
jp
jo
movhps
jecxz
dec
mov
jbe
imul
inc
adc
aas
iret
movs
inc
mov
jmp
test
sbb
and
mov
das
rcl
dec
push
out
stos
push
movs
jo
loope
add
sub
cwde
inc
xor
ins
adc
movs
mov
cmp
push
mov
test
or
jb
dec
cdq
test
pop
dec
mov
ja
push
mov
push
dec
std
xor
pop
cmc
mov
add
js
jno
jmp
dec
mov
jne
push
or
mov
stos
test
(bad)
adc
(bad)
test
shl
out
pop
outs
test
mov
xor
xchg
je
lahf
enter
xor
mov
es
sbb
jne
adc
sti
pop
mov
jno
cdq
in
(bad)
pop
iret
cmp
mov
lods
(bad)
fcomp
jg
cmp
pop
(bad)
or
mov
or
in
lds
jb
push
mov
cmp
movs
ret
cmp
or
add
cmp
xor
loop
mov
les
inc
sub
cmp
(bad)
lods
mov
add
cmp
sbb
std
mov
cwde
xchg
lea
test
push
fmul
fadd
xlat
xchg
daa
icebp
data16
push
shr
sbb
xor
xchg
xor
mov
mov
ja
push
out
and
mov
pop
pushf
imul
push
(bad)
outs
dec
jno
test
dec
sahf
mov
aas
cli
xor
sub
aaa
test
adc
loop
in
das
fwait
mov
inc
jae
inc
cwde
stos
int3
jge
mov
cli
and
test
xor
fcos
xor
shl
in
inc
mov
and
jg
sbb
shl
and
daa
mov
lahf
std
inc
push
clc
dec
loopne
inc
add
cmp
stc
cmps
mov
adc
or
and
mov
mov
iret
es
cmp
jecxz
xchg
lds
and
sbb
fsubrp
mov
adc
cmp
mov
retf
sub
(bad)
fild
xchg
mul
ds
sbb
pop
sub
and
(bad)
mov
push
xchg
or
pop
jp
xor
cmp
scas
sbb
and
or
mov
js
fstp
or
sub
shl
aam
imul
loopne
jge
cdq
push
add
jl
dec
pusha
xor
mov
xor
cld
xor
popa
ror
or
stc
sahf
imul
ror
jb
mov
pop
in
pop
push
shr
(bad)
xor
movs
repz
cmc
imul
nop
sbb
fdivr
dec
rol
xor
adc
push
adc
clc
pop
sbb
popf
retf
fwait
pop
cmps
scas
pop
dec
cli
shl
aad
pop
pop
nop
inc
or
mov
and
and
mov
or
add
push
push
in
cmp
sbb
lods
ficomp
mov
imul
nop
scas
sub
aaa
push
jmp
mov
movs
outs
loope
(bad)
ins
mov
fucom
xchg
adc
and
adc
aaa
jle
rol
mov
xchg
bound
cs
push
xchg
cdq
rcr
cmps
pop
in
mov
scas
jb
int3
adc
cmp
not
push
je
sbb
addr16
rol
xchg
mov
int3
(bad)
adc
add
add
ins
dec
push
ins
mov
loop
rcr
icebp
ret
xor
jae
cmp
inc
mov
xchg
out
mov
mov
xchg
and
retf
bswap
cmp
dec
test
mov
push
or
dec
pop
lock
je
sbb
mov
std
ds
push
push
xchg
sbb
fist
ins
jb
sub
sar
lods
xchg
mov
cmp
mov
add
mov
sti
jno
test
mov
mov
xchg
in
mul
add
add
call
mov
scas
add
in
out
imul
jns
mov
nop
lods
adc
fwait
mov
adc
mov
adc
mov
test
addr16
arpl
xor
rol
call
inc
in
ret
imul
jae
cmp
lsl
inc
adc
inc
push
aam
inc
mov
test
xlat
cmp
or
pop
cwde
mov
add
and
inc
cmp
fwait
xchg
xchg
jle
lock
jne
into
jl
lea
push
mov
ror
imul
movs
(bad)
sub
mov
pop
sbb
jbe
movs
push
out
and
cmp
ss
fidiv
mov
out
aas
cs
lods
dec
mov
add
in
cwde
xchg
sbb
icebp
fs
(bad)
inc
and
dec
inc
adc
dec
jns
cs
(bad)
lock
and
push
jne
lods
push
or
dec
jl
in
es
out
ss
mov
mov
test
or
sbb
out
sbb
jbe
cmp
mov
mov
or
push
mov
ret
out
test
retf
repz
xchg
jp
jnp
aaa
(bad)
fs
cmps
or
jb
cmp
xchg
imul
mov
out
mov
repnz
jo
add
cmp
xor
ret
add
mov
xchg
xchg
dec
lock
inc
call
repnz
dec
add
xor
cmp
fcom
sub
mov
int3
leave
push
pop
shl
push
je
adc
jno
add
fsubp
xchg
push
call
or
test
xor
jle
sub
sbb
mov
ds
sub
xor
pop
adc
cmps
mov
mov
shr
cmc
pop
inc
mov
or
pop
xor
add
sub
sub
xor
lods
out
mov
mov
dec
hlt
push
push
xor
mov
mov
jns
ret
mov
xor
push
pop
mov
push
outs
adc
pop
pushf
out
jbe
adc
mov
retf
mov
cmp
mov
mov
scas
rdmsr
imul
inc
lock
xor
stc
mov
push
fiadd
sbb
push
sbb
or
fnstcw
mov
mov
mov
jp
(bad)
xor
cmps
adc
rcr
cmp
aam
mov
(bad)
pop
inc
jg
inc
imul
stos
ja
cdq
not
fnstcw
xor
xchg
and
xchg
sbb
pop
aam
jns
push
rol
sub
mov
sahf
scas
mov
inc
xchg
add
or
imul
lahf
xor
add
shl
push
out
data16
icebp
fstp
ss
cmp
mov
mov
pushf
mov
jp
cld
cmc
add
(bad)
mov
test
sbb
sub
cmps
popa
pop
imul
js
and
icebp
loope
push
xor
and
add
mov
test
mov
push
mov
adc
js
xchg
sbb
lds
mov
outs
stos
sbb
jl
or
push
and
or
and
add
sbb
not
push
xor
xor
aaa
pusha
push
adc
dec
test
pop
inc
mov
pop
jnp
sbb
inc
jns
or
dec
cmps
mov
les
gs
push
sahf
mov
jl
add
mov
cdq
cmc
test
or
jnp
jecxz
out
push
jge
lahf
addr16
and
fisubr
xor
jmp
loop
fidiv
je
add
nop
jge
stos
fisubr
sub
sub
jno
dec
daa
int
mov
ins
mov
inc
(bad)
cmp
je
mov
ins
add
int3
fucomp
and
je
pop
xlat
push
pop
outs
xchg
sub
hlt
fdiv
call
mov
pop
or
outs
cmp
pop
or
cwde
pushf
jl
fs
jmp
dec
sar
and
cmp
and
ret
pop
imul
outs
inc
mov
mov
repnz
pusha
sbb
pop
cmps
sbb
sahf
xchg
pop
int3
outs
xor
push
es
stos
out
ins
mov
pop
mov
dec
mov
aam
sub
dec
adc
push
retf
mov
xor
(bad)
pop
scas
jo
ja
loop
das
out
cmps
xchg
jl
(bad)
mov
mov
hlt
add
adc
cmp
xor
popa
ins
sub
out
rol
loope
push
fwait
cmp
retf
sub
jns
aad
xchg
rcr
outs
cmps
adc
shl
aaa
add
movs
mov
daa
push
mov
adc
cmps
lods
add
xor
jno
mov
pushf
aad
and
retf
inc
mov
ret
and
(bad)
cmc
es
ins
jbe
pop
adc
lea
and
xchg
jmp
ins
gs
push
and
ins
jp
sbb
out
fwait
outs
pop
dec
imul
mov
add
xor
inc
loopne
jg
stc
mov
mov
sahf
jns
push
xor
fs
imul
xchg
cdq
dec
sub
dec
lea
push
fwait
daa
out
sbb
sub
jb
outs
xor
fcom
cmp
bound
mov
jle
mov
jmp
xor
inc
jnp
mov
adc
dec
mov
mov
cmp
add
xor
sbb
mov
dec
cmp
cmp
jle
test
cmp
jbe
retf
ss
pop
or
xchg
sbb
cmc
cdq
or
pop
outs
cmp
push
movs
wbinvd
dec
and
or
adc
sub
jbe
dec
xchg
outs
pop
mov
inc
jae
dec
mov
inc
ins
popa
mov
and
ins
ror
sti
fwait
xchg
(bad)
fimul
call
xchg
dec
xor
pop
jnp
xor
in
cmps
and
movs
scas
shl
mov
into
lods
xor
je
mov
lods
add
inc
lea
push
fmulp
aas
dec
mov
cmp
or
add
jae
pop
iret
(bad)
ins
push
pop
dec
ror
xchg
(bad)
mov
hlt
pop
aam
jae
jp
into
iret
mov
mov
div
dec
pop
jmp
test
bound
inc
xor
rol
inc
pop
call
call
fwait
stos
push
push
push
fisttp
mov
push
mov
lahf
dec
ins
jne
dec
xor
fcom
out
xor
sbb
cmp
or
xchg
mov
fisubr
lds
xlat
mov
mov
jb
pop
xor
mov
xor
dec
fwait
cmp
cmp
or
pop
leave
cwde
ja
jecxz
xor
hlt
adc
std
fnstsw
out
cmps
lods
out
push
ds
imul
(bad)
fiadd
dec
xor
add
(bad)
js
retf
outs
cmp
movsx
test
cmc
inc
adc
inc
pop
cld
dec
leave
add
xchg
fisttp
sbb
push
imul
push
sbb
ret
pop
push
int3
mov
mov
jle
clc
adc
jno
or
aad
in
push
int3
outs
mov
mov
push
jmp
not
add
in
cdq
popa
das
icebp
xchg
(bad)
clc
icebp
shl
add
xchg
mov
push
stc
push
xchg
adc
(bad)
cmp
adc
out
sbb
and
and
adc
push
push
push
xor
daa
sub
fs
hlt
inc
or
into
call
cwde
(bad)
fldenv
pop
dec
push
and
jmp
pop
push
call
rcl
mov
mov
and
jle
movs
ins
fsubr
push
jo
adc
jg
test
pop
adc
inc
add
es
dec
push
add
add
inc
mov
js
int
xlat
lock
cli
mov
sbb
mov
and
(bad)
adc
dec
inc
push
dec
fidivr
mov
stos
retf
ss
push
imul
stc
loope
cmp
xchg
gs
jle
lea
adc
and
ins
jo
leave
jbe
mov
adc
and
cmc
fst
jbe
lahf
push
mov
mov
push
cmp
jecxz
fisttp
cmps
xor
(bad)
fmul
shl
adc
push
cmps
inc
(bad)
sbb
xor
jnp
sub
jb
cmp
jge
(bad)
or
mov
cld
movs
out
push
ret
push
xchg
add
(bad)
out
inc
or
fidiv
pop
ja
jae
sub
fidivr
mov
stos
stos
das
pop
aam
xchg
jg
popa
jb
or
out
scas
xor
push
stc
ret
mov
cmp
mov
hlt
sbb
loopne
jmp
mov
push
fidivr
cmp
clc
(bad)
dec
xor
cmps
popa
out
cmp
dec
push
adc
dec
repnz
inc
sbb
adc
mov
sbb
adc
ss
stos
nop
xchg
retf
icebp
mov
xchg
mov
out
sbb
mov
mov
adc
or
popa
and
mov
jnp
ss
sub
lds
cmp
jo
lea
push
push
cmp
out
push
push
mov
add
cmps
ins
fwait
(bad)
adc
bound
pushf
pop
icebp
mov
add
nop
push
movs
adc
xor
jb
push
sub
je
pop
fs
imul
pop
cmp
fstp
lock
shl
fcomp
dec
in
jle
dec
cwde
test
push
or
xchg
mov
mov
inc
test
ftst
test
dec
xchg
mov
mov
stos
movs
pop
cmp
lods
dec
pop
rcl
hlt
mov
mov
push
mov
fwait
cmp
dec
(bad)
dec
imul
pop
lods
cmp
pcmpgtw
mov
outs
jnp
jl
mov
pop
pusha
jge
(bad)
and
cld
dec
loop
inc
mov
inc
xchg
call
outs
cmp
and
dec
cmps
addr16
retf
push
(bad)
icebp
push
cwde
imul
movs
ja
addr16
pop
jne
ror
movs
mov
cdq
xbegin
push
lods
out
js
xchg
or
mov
sahf
in
retf
xor
loop
xor
(bad)
inc
call
xor
and
lahf
sub
pusha
mov
mov
repnz
or
adc
fistp
scas
gs
jl
sbb
xchg
dec
mov
mov
mov
movs
je
aas
push
mov
push
pop
sub
pusha
ror
mov
cmc
push
fwait
mov
add
xor
stos
(bad)
sub
inc
pushf
shl
addr16
pop
xor
pop
inc
or
clc
test
add
mov
fcomp
sub
cmp
mov
in
push
fbld
sbb
call
aas
shr
push
push
jbe
push
or
ffreep
dec
sbb
pop
fnstsw
(bad)
scas
je
mov
inc
jmp
push
or
xor
mov
sub
push
push
pop
call
and
pop
enter
loope
ret
adc
aam
aas
ja
jmp
mov
jo
fidiv
sub
pop
or
fimul
popf
cvtpi2ps
mov
jno
add
mov
lahf
inc
inc
adc
sbb
cmc
mov
jne
jle
int3
popf
adc
fs
and
retf
cmp
je
sub
ins
push
shl
and
cmps
sub
jg
sub
inc
ja
and
mov
jge
cmp
jmp
push
adc
lock
cdq
stc
inc
mov
out
mov
mov
push
sbb
in
push
dec
dec
repnz
mov
mov
dec
pop
adc
test
jmp
cdq
pop
js
mov
aaa
add
sub
sub
out
mov
dec
ins
push
lahf
xor
xchg
int
loopne
xor
mov
sub
adc
je
and
add
enter
mul
fidiv
and
push
js
(bad)
adc
fstp
cdq
lods
in
sbb
cmp
adc
hlt
movs
mov
cmps
push
mov
mov
(bad)
mov
mov
xor
call
add
add
jo
dec
xchg
fmul
add
mov
mov
xchg
jmp
(bad)
sub
jns
and
fwait
xor
adc
inc
add
loopne
(bad)
adc
and
ficomp
fnclex
cwde
jno
pop
adc
add
adc
pop
pop
arpl
add
push
leave
jns
out
out
inc
add
push
and
push
(bad)
addr16
pop
scas
lods
cs
mov
cmp
jbe
xor
outs
fs
loope
dec
nop
fidiv
fidiv
push
repz
cmp
movs
cmp
mov
ins
sbb
inc
stc
add
jl
jbe
out
sar
cmps
adc
in
nop
shl
imul
jae
sti
jns
jge
repnz
add
or
jmp
iret
retf
push
imul
add
push
cmp
cmp
push
add
dec
cdq
mov
(bad)
or
adc
sub
es
xor
adc
aam
xor
sub
xchg
sub
dec
jg
fistp
mov
out
cmp
pop
or
cli
fsubr
test
(bad)
sti
gs
sbb
fsub
dec
mov
sahf
sbb
xchg
mov
in
les
pop
mov
pop
into
dec
fwait
push
mov
int3
mov
lods
ror
inc
cdq
loopne
mov
xor
sbb
cmp
sbb
dec
sub
adc
test
les
iret
mov
arpl
ficomp
loopne
stos
mov
outs
jg
test
aaa
mov
cmc
imul
dec
das
mov
into
pop
push
into
test
cmps
jae
cmp
adc
mov
mov
dec
inc
jl
test
and
fisub
pop
out
adc
fist
pop
call
pusha
mov
fldcw
std
inc
retf
sbb
outs
xor
lahf
dec
xchg
mov
mov
repnz
xor
push
sbb
jae
mov
shl
sbb
add
jg
lea
inc
mov
mov
jmp
xchg
jg
pop
pop
sub
retf
mov
sub
repz
and
stc
int
and
imul
mov
(bad)
loope
jl
mov
mov
sahf
fnstenv
mov
add
fdiv
pushf
xor
jnp
test
fdiv
jb
call
jb
sbb
cmps
loopne
loope
mov
outs
xor
jbe
xchg
repnz
cmps
mov
sbb
xchg
push
js
and
or
cmp
inc
cmp
cmps
xchg
adc
int
dec
or
nop
mov
cli
and
or
sbb
movs
cdq
daa
nop
in
xchg
adc
les
sub
jl
cmp
fisubr
sub
mov
lahf
push
mov
scas
jmp
out
inc
and
jge
pop
inc
iret
jae
mov
test
sub
div
cmp
call
pop
loopne
xchg
mov
or
inc
jne
push
loopne
sar
mov
cli
scas
pop
inc
jnp
pop
push
jo
dec
imul
jecxz
not
mov
js
and
pusha
clc
mov
les
mov
add
fadd
sbb
mov
nop
and
dec
cmp
cmps
jbe
pop
pop
xor
jmp
xor
enter
xor
mov
inc
add
cli
jae
in
in
mov
mov
pop
add
mov
clc
xor
pop
dec
scas
inc
test
xchg
imul
add
repnz
jge
or
jmp
jb
jb
inc
cmps
xchg
mov
and
stos
into
js
or
ds
call
pushf
fwait
inc
mov
jns
pop
mov
and
popa
mov
mov
cmp
xchg
paddsw
or
sub
inc
xchg
jle
(bad)
fild
out
mov
jmp
xchg
in
test
add
ror
mov
imul
in
es
cmp
shl
jl
mov
clc
push
or
loop
cdq
in
adc
jg
mov
fbstp
jno
adc
sub
push
inc
pop
inc
push
add
jp
push
enter
sbb
adc
push
mov
stos
jp
mov
inc
pop
imul
and
shl
ins
add
jp
mov
outs
jle
inc
mov
clc
ror
retf
sbb
out
cld
retf
add
dec
cmps
std
and
xchg
or
rol
test
jp
inc
ja
out
or
xor
mov
in
(bad)
icebp
push
dec
ja
in
mov
adc
mov
and
mov
ficomp
push
rcl
mov
dec
add
sar
adc
inc
xor
lock
dec
mov
icebp
push
inc
ja
pop
xor
cli
int
sbb
cmp
(bad)
and
das
shl
fwait
mov
sbb
loop
or
shl
pop
jns
or
call
js
cmps
call
sbb
push
cld
cmp
fmul
mov
in
or
cmp
jmp
mov
jmp
push
ja
add
repnz
xor
jle
mov
cld
mov
sar
or
repnz
cmp
add
xor
(bad)
imul
and
sbb
es
mov
sub
imul
mov
outs
jbe
push
retf
mov
repnz
(bad)
xor
(bad)
retf
scas
adc
push
jge
in
lods
stos
pop
xchg
pop
call
and
ror
sub
imul
mov
sti
xchg
mov
loop
addr16
add
or
sbb
fsub
mov
test
mov
mov
test
loop
or
stos
jmp
retf
data16
xchg
xor
jb
and
push
add
out
call
lods
mov
les
push
push
cdq
push
lods
jae
cs
call
adc
imul
stc
push
and
inc
mov
xor
sub
in
ins
mov
mov
sar
icebp
(bad)
aam
cmps
xor
add
call
inc
in
add
cmc
ss
(bad)
pop
lea
div
xchg
inc
pop
ret
inc
or
push
sub
mov
push
pop
cmp
ret
mov
jge
pushf
(bad)
jns
call
ds
or
mov
fwait
cmc
jne
retf
jecxz
ret
lods
je
sbb
jne
inc
scas
call
sahf
nop
mov
arpl
or
sahf
dec
aad
in
jmp
leave
push
inc
std
pop
or
jb
mul
jo
fwait
call
addr16
mov
popf
pop
sub
pushf
sbb
mov
cmps
in
ss
mov
xchg
ins
mov
mov
leave
push
shl
xor
test
dec
in
sub
icebp
xchg
imul
pop
fild
xor
push
sub
outs
shl
mov
sub
popf
jns
test
pop
push
call
icebp
(bad)
call
mov
inc
push
aam
shr
pop
dec
sbb
mov
clc
iret
clc
gs
neg
jo
(bad)
js
inc
scas
pop
fisttp
nop
mov
test
out
and
push
data16
and
xchg
in
pop
retf
mov
push
dec
fist
pop
repz
cli
enter
in
xchg
inc
das
or
xchg
push
xchg
cmc
ins
sub
push
sti
iret
push
ss
mov
out
movs
mov
(bad)
pop
jge
push
push
xchg
shl
jge
sub
inc
pop
out
mov
sub
js
cli
xchg
inc
dec
xchg
mov
xor
std
scas
cdq
stc
xor
jmp
xor
add
pop
lea
ins
fcomp
pop
sub
sub
hlt
lds
xor
std
push
or
jno
jge
jge
xor
cwde
mov
mov
fbstp
sbb
daa
cwde
shl
dec
inc
mov
repnz
jmp
ins
les
xor
ins
jo
repnz
adc
inc
mov
jmp
lock
mov
std
test
mov
stos
ficomp
mov
and
xor
mov
gs
dec
add
inc
fdivr
rcr
inc
mov
arpl
sub
out
adc
mov
(bad)
pop
xor
and
loopne
in
mov
in
add
mov
pop
mov
jmp
mov
test
inc
and
sbb
fst
in
shr
cmp
sbb
mov
or
dec
dec
push
push
call
in
xchg
imul
mov
or
fldl2e
xor
sub
cli
movs
mov
or
and
mov
nop
add
mov
jo
jmp
mov
retf
pop
sbb
call
push
lods
or
mov
mov
push
jp
jae
lds
and
daa
gs
pop
out
push
in
js
in
loope
push
sub
cmp
cld
pop
jmp
xchg
pop
xor
jns
push
call
ret
or
push
mov
sub
sub
fmul
pop
sub
jns
stos
pop
retf
and
outs
pop
leave
sub
pop
adc
fstp
lods
add
imul
(bad)
imul
je
or
fwait
xor
call
rcr
and
pop
jmp
inc
fild
fdiv
and
inc
push
pop
aad
test
mov
leave
ret
jb
adc
sbb
add
fs
mov
or
in
inc
mov
shl
xchg
sub
and
push
arpl
sbb
jae
jns
aad
movs
mov
pop
clc
xor
and
les
cmp
cmps
and
test
add
(bad)
add
pop
retf
pop
xchg
xchg
xchg
icebp
int
mov
outs
jg
push
dec
sar
dec
jp
xchg
xchg
lea
and
xchg
add
inc
ficomp
pop
xor
mov
lea
adc
in
xchg
popa
xchg
dec
jbe
mov
pop
rcl
xor
pop
pop
sbb
sbb
in
lods
hlt
pop
sub
mov
mov
nop
cmp
sub
je
fiadd
or
pop
test
ins
push
xor
mov
cmc
push
ror
(bad)
je
lock
ror
add
sbb
or
movs
mov
adc
jno
in
push
jbe
cs
lea
fsubp
ins
xchg
fcmovne
cmps
jecxz
clc
jns
pop
in
xor
les
(bad)
push
stc
fdivr
xor
mov
movs
cmp
fwait
mov
add
pcmpeqd
aas
inc
lds
add
(bad)
push
aaa
xor
inc
fnstsw
call
(bad)
mov
ja
fdiv
(bad)
push
ret
jge
stos
mov
or
cmp
xchg
dec
(bad)
push
lods
or
jbe
repnz
ret
cmps
dec
sbb
xchg
sti
scas
lock
fstp
adc
mov
mov
mov
lds
mov
add
add
mov
jg
(bad)
add
pusha
cdq
test
xor
out
cmp
inc
cld
jge
xor
push
xchg
das
scas
xchg
(bad)
lds
pushf
cld
mov
lods
sbb
in
inc
push
dec
push
aad
hlt
mov
sub
das
cmc
adc
mov
loop
or
ss
lock
shl
mov
into
xor
mov
push
add
loopne
adc
test
mov
inc
push
test
xchg
jnp
dec
push
retf
dec
pop
in
ret
mov
fbld
cld
fild
sbb
shr
jecxz
dec
or
cmps
add
mov
sub
fld
call
pusha
retf
sub
dec
mov
mov
rcl
add
into
cld
and
int3
test
push
movs
pop
dec
fild
adc
cmp
call
sbb
jb
adc
dec
xor
inc
cmps
loope
xchg
mov
bound
into
xor
and
iret
sub
inc
imul
ins
xchg
xchg
shr
xor
call
ds
iret
adc
not
push
cmc
jecxz
(bad)
fild
pop
sub
pop
adc
jmp
fwait
or
mov
push
loop
adc
pop
add
aad
call
dec
movs
jne
stos
mov
jne
push
test
add
ret
jecxz
push
std
pop
je
mov
add
push
adc
cld
cli
jge
and
mov
aam
arpl
fsubr
push
outs
pop
xor
into
dec
fcos
sbb
retf
test
in
popf
hlt
mov
push
test
mov
mov
les
test
mov
push
mov
mov
jae
and
not
fwait
cmp
arpl
or
add
shl
retf
push
int3
movs
xchg
enter
xor
retf
scas
int
add
std
mov
loope
adc
sub
lods
daa
arpl
inc
gs
pop
and
mov
retf
out
dec
gs
gs
outs
jnp
mov
jmp
cmp
jnp
mov
mov
mov
pop
repnz
addr16
mov
push
xchg
leave
xor
sbb
xor
fucom
ret
es
adc
psrad
add
inc
repz
(bad)
jbe
pop
mov
jle
xchg
pushf
cmp
mov
dec
mov
out
int
mov
xor
call
dec
push
rcr
push
xlat
aad
shl
pop
adc
repz
or
das
and
mov
es
adc
fdivr
mov
test
or
cmps
mov
fidivr
in
push
dec
retf
(bad)
mov
nop
push
push
cld
xchg
xchg
jle
mov
and
adc
fstp
inc
js
out
icebp
es
stos
cs
mov
cs
jnp
inc
pop
in
fbstp
sti
pop
(bad)
fisttp
rol
mov
loope
fld
das
mov
push
mov
(bad)
arpl
jnp
fnstenv
nop
int3
jnp
enter
clc
mov
hlt
call
repz
adc
cmps
push
stos
pusha
sub
add
dec
sub
pop
adc
int
adc
mov
or
inc
shr
outs
push
and
ret
mov
aaa
mov
test
std
jno
pop
mov
and
sub
imul
ret
jmp
movs
into
dec
mov
push
ds
gs
cdq
inc
imul
jl
push
pop
lock
clc
xchg
cmc
sbb
mov
sbb
inc
add
add
sti
into
jae
rol
inc
xor
clc
mov
cld
(bad)
sahf
in
outs
in
retf
inc
(bad)
pop
add
faddp
jno
hlt
fisttp
mov
dec
cmp
cmp
push
adc
and
jl
or
jge
(bad)
retf
xchg
dec
call
mov
lock
dec
sbb
inc
jns
retf
pop
mov
add
loope
js
lods
scas
pop
(bad)
mov
repz
cmp
add
xchg
sbb
mov
retf
lea
iret
jns
xor
mov
push
test
jl
daa
inc
jb
imul
popf
aaa
mov
imul
xor
or
in
xchg
jbe
dec
mov
dec
jno
cs
push
arpl
fcmovbe
jle
xchg
mov
in
test
adc
repnz
icebp
pop
xor
jae
and
jg
or
mov
mov
enter
rol
jmp
sbb
lds
add
movs
sub
jmp
xor
cmps
pop
add
(bad)
cdq
outs
fcom
data16
jne
jbe
adc
pop
sub
xchg
xchg
call
cwde
mov
jo
push
mov
mov
adc
push
mov
je
ins
inc
cdq
bound
cmp
ret
push
mov
mov
cs
inc
mov
jp
jmp
ds
ja
test
sahf
mov
mov
xchg
test
push
lds
xchg
mov
outs
outs
adc
jno
mov
mov
loopne
in
shr
mov
ins
or
js
js
lea
ins
jl
or
xchg
stos
jmp
mov
sti
mov
stos
or
sbb
repz
ror
push
adc
scas
or
add
mov
ret
or
inc
sar
test
scas
int
cmps
(bad)
(bad)
aam
jae
cld
fbstp
or
mov
jl
scas
xchg
call
xor
xor
jae
out
les
jnp
jmp
stos
sbb
test
add
movs
dec
xchg
inc
mov
mov
adc
jge
push
int
jp
jns
xor
or
and
add
pop
ds
gs
aaa
inc
push
sbb
jle
cdq
or
jb
jle
fisttp
add
(bad)
fisubr
pop
add
(bad)
push
mov
jns
loope
mov
push
mov
jbe
adc
xor
std
pop
fisttp
xlat
push
(bad)
(bad)
in
int
sub
fnstenv
inc
mov
loop
pushf
popa
loopne
dec
(bad)
out
inc
scas
xchg
shl
sub
sbb
daa
mov
push
and
gs
cmp
movs
xor
movs
jae
pop
jmp
ror
leave
lock
add
adc
xchg
scas
dec
mov
add
pusha
cmc
push
int3
mov
add
cmp
cmp
sbb
sub
sahf
out
inc
mov
and
xchg
or
jns
adc
mov
out
pop
add
loope
lahf
inc
stc
or
mov
pop
add
push
mov
mov
add
clc
xor
sbb
sbb
add
cwde
or
retf
leave
push
sub
enter
inc
sub
inc
stos
data16
je
mov
jo
aam
ror
mov
daa
sbb
mov
outs
add
add
sbb
sub
and
and
enter
inc
jmp
dec
and
sahf
cmp
loopne
fldcw
outs
and
adc
lock
mov
xor
je
movs
push
out
pop
stc
movs
out
(bad)
cmp
rcl
into
sub
jno
aas
clc
add
leave
rcl
cs
xchg
sub
pop
pop
pushf
pop
jmp
out
hlt
movs
(bad)
ret
xor
sub
loope
call
mov
and
sub
jp
xor
xchg
jmp
daa
mov
(bad)
out
mov
push
xor
cmp
jl
mov
les
adc
not
into
fwait
in
dec
xor
fsubr
mov
jmp
rcl
fwait
dec
mov
jmp
inc
jns
fld
cmp
outs
jge
sbb
aas
ss
cmp
push
out
ror
test
dec
inc
inc
sti
(bad)
rol
sbb
sub
lahf
and
mov
fcom
ss
pop
sbb
retf
or
dec
int3
in
jno
push
add
add
xor
in
pop
inc
cli
and
cmp
rol
cmp
mov
paddb
iret
fnstenv
popf
sti
pop
push
mov
ror
test
jno
repz
test
pop
std
ret
add
and
cmps
pop
sbb
sbb
pop
mov
stc
sbb
or
sub
mov
xchg
(bad)
outs
push
cmp
jecxz
enter
jmp
(bad)
mul
dec
repnz
imul
fbld
push
bound
pop
xchg
dec
xchg
aam
jnp
jmp
inc
mov
fs
and
loop
mov
out
or
lahf
pop
addr16
add
pop
jo
in
mov
xor
mov
cmc
bound
mov
mov
out
mov
add
mov
or
xor
js
retf
sub
loopne
sub
inc
push
fiadd
cmp
mov
hlt
adc
xchg
shl
push
(bad)
xor
mov
cli
cmps
inc
fsubr
scas
add
lods
scas
fstp
int
fisttp
cmp
ins
sti
int3
aaa
sbb
popf
test
jne
inc
xor
cli
movs
sub
push
xor
outs
lds
sahf
inc
add
mov
jno
jnp
sbb
mov
and
xor
mov
fs
ficom
lods
scas
adc
xchg
push
jp
mov
into
lock
mov
sub
sbb
fdiv
leave
sub
cli
shl
cmp
sar
xchg
mov
xchg
xchg
xchg
xchg
sub
sub
adc
pop
push
rcr
cmps
ins
mov
mov
shl
xchg
test
cmps
aam
das
dec
cmps
xchg
loope
addr16
(bad)
mov
fisttp
jne
mov
clc
or
or
adc
aam
js
pusha
add
or
jmp
scas
in
jb
dec
cld
cli
enter
sti
repnz
pushf
jo
push
pop
lods
jp
jmp
adc
cdq
dec
ret
fisttp
sub
pop
loopne
mov
(bad)
int
jle
test
repz
test
outs
retf
adc
std
xor
xchg
data16
push
lods
jmp
xchg
inc
scas
aad
and
sbb
aaa
adc
adc
in
inc
inc
sub
pusha
sbb
cld
scas
fidiv
dec
or
ja
dec
out
(bad)
pop
shl
push
xor
mov
dec
sahf
(bad)
jo
add
sahf
and
push
mov
aas
gs
pushf
jg
fs
sar
xchg
ficomp
test
mov
mov
mov
movsx
scas
sub
sub
call
mov
fisttp
sbb
les
pusha
dec
and
dec
icebp
addr16
test
push
sbb
mov
dec
jle
(bad)
retf
cmp
popf
js
pop
out
dec
into
cdq
sub
ret
imul
fidiv
mov
mov
mov
out
push
and
sbb
sub
push
es
adc
pop
stos
jl
xor
lahf
hlt
and
add
add
mov
fwait
add
int
inc
out
fcom
shl
xor
retf
adc
jns
scas
jp
inc
pushf
ret
cmc
sub
mov
icebp
jmp
fadd
xchg
cdq
data16
jmp
(bad)
div
cs
pop
and
lods
pop
xor
adc
xchg
pop
jl
jmp
stos
(bad)
lock
imul
loop
icebp
stos
xor
dec
les
fidiv
(bad)
test
out
jne
sbb
jmp
(bad)
sub
add
cmps
test
scas
cdq
call
jmp
int
mov
inc
adc
sti
iret
movs
adc
popf
jge
(bad)
dec
lds
or
xor
dec
jl
pop
das
or
add
xlat
jmp
call
lods
ja
or
push
add
fisttp
stc
xchg
pop
and
enter
sbb
aam
xor
and
jecxz
adc
sbb
dec
mov
retf
jle
add
mov
(bad)
retf
or
div
adc
iret
retf
mov
push
cmps
in
jmp
inc
cli
ret
xlat
cld
mov
mov
dec
aad
inc
xchg
inc
je
sub
push
inc
ss
cdq
cdq
stos
and
js
add
jne
or
cmp
in
ror
(bad)
in
xor
cmp
mov
push
xor
div
xlat
je
fnsave
and
push
inc
in
push
mov
(bad)
or
pop
and
pushf
or
movs
hlt
out
mov
mov
lahf
dec
out
mov
sub
popf
dec
cmp
scas
stc
imul
ins
pop
mov
mov
out
(bad)
sbb
fwait
jmp
inc
arpl
dec
outs
inc
adc
hlt
lds
add
imul
sahf
xor
(bad)
or
push
mov
clc
ins
push
hlt
ins
adc
popf
sub
in
jnp
xor
sahf
jae
mov
pushf
in
add
sahf
add
gs
sbb
mov
sub
jmp
sub
loop
cmc
loopne
jbe
fstp
sti
mov
xchg
jne
xlat
repnz
push
xchg
or
jl
rol
xchg
lods
mov
repnz
test
loopne
fidiv
scas
dec
rcr
iret
sbb
add
push
ds
ja
je
hlt
sub
or
xchg
in
mov
mov
mov
sub
xor
bound
(bad)
or
mov
stos
push
ja
dec
pop
xor
nop
add
sbb
and
xchg
cmp
dec
in
les
push
stos
(bad)
cmp
sbb
(bad)
aaa
and
jmp
outs
xchg
mov
jmp
test
jo
fadd
ret
and
popf
jns
mov
sbb
into
cmp
jge
mov
inc
sbb
pop
inc
ins
jo
cmp
sub
jo
arpl
xchg
jp
sbb
sahf
adc
jne
lods
sub
test
mov
xchg
popf
aam
daa
xchg
cmp
jmp
sub
lahf
pop
and
sahf
mov
shr
jle
dec
add
adc
jo
add
jmp
(bad)
cli
and
mov
ret
mov
mov
pop
pop
jns
cmc
popa
retf
jp
inc
call
xchg
push
inc
mov
dec
or
arpl
push
mov
mov
test
push
(bad)
adc
mov
xor
xchg
jnp
aad
cmc
aad
jg
loope
aam
shr
jge
jmp
or
xor
mov
mov
ss
shl
(bad)
jnp
mov
inc
sahf
cmp
or
test
aas
in
xor
add
pop
dec
fwait
jmp
pop
adc
aam
ss
xchg
mov
cmp
jbe
cmp
stos
enter
add
ret
lods
shl
movs
outs
leave
mov
push
leave
cmp
mov
and
(bad)
retf
adc
push
cmp
cdq
jmp
xchg
stc
mov
cmp
add
(bad)
and
add
rol
add
cmp
aas
adc
mov
rcl
ds
sub
mov
test
sti
mov
test
jge
inc
xchg
aas
(bad)
sbb
sbb
jle
mov
mov
jle
xchg
inc
fidiv
xchg
dec
inc
aad
dec
popf
mov
(bad)
clc
sbb
xor
icebp
and
leave
push
in
sti
or
sub
sbb
std
loopne
mov
push
ror
not
or
ins
pop
das
xor
sar
jp
jecxz
pop
push
or
scas
fnstsw
fiadd
movs
(bad)
sub
xor
(bad)
stc
or
pop
push
xlat
sti
cwde
mov
js
nop
frstor
or
jo
repz
xchg
retf
lods
dec
pushf
mov
pop
mov
test
sub
xor
loop
out
ret
(bad)
mov
cmp
add
ins
or
push
rcl
inc
mov
outs
mov
and
cwde
jnp
adc
mov
movs
mov
aam
mov
(bad)
je
shr
inc
call
scas
sbb
repnz
sub
jns
mov
or
out
jle
push
rcl
or
fstp
fadd
imul
and
mov
rol
popa
in
dec
ret
lods
fisttp
and
(bad)
ss
pop
mov
or
cmp
add
dec
fwait
cmp
mov
sahf
int
xchg
add
jle
jge
pop
icebp
sar
cmp
xor
mov
pop
xchg
xchg
les
(bad)
mov
xchg
sub
pop
ret
(bad)
push
scas
dec
lods
pop
sbb
cld
mov
cmps
fnstcw
pop
cmp
and
xchg
push
push
mov
ins
hlt
xor
mov
jg
mov
aaa
mov
xor
mov
repz
hlt
(bad)
fs
shr
inc
or
cmps
data16
add
cmp
pandn
jbe
fmul
jb
push
jmp
push
bound
js
fimul
jp
pop
in
cmp
push
push
push
mov
xor
xchg
push
sub
in
add
lds
jge
outs
push
loopne
test
dec
adc
lahf
dec
ret
(bad)
shl
xchg
push
gs
xor
sbb
adc
jb
jnp
repnz
jae
daa
loopne
dec
push
popa
aad
shl
jmp
sahf
ror
(bad)
mov
aaa
cmp
call
push
cld
aam
fisubr
cmp
xchg
icebp
xchg
out
sbb
xchg
lods
pop
in
push
xor
cmp
inc
push
shr
fs
jmp
sbb
popf
or
movs
in
mov
xchg
cwde
rcr
push
pop
jbe
dec
sbb
lock
stc
sub
jecxz
loopne
lds
ret
nop
out
push
popf
fidivr
sub
scas
xchg
add
pop
push
push
popf
jecxz
into
in
jb
and
rcr
ja
nop
fmul
and
sub
mov
hlt
dec
jp
pop
fs
mov
add
das
mov
rcl
aas
addr16
mov
jbe
ds
adc
mov
cmp
in
fst
out
repnz
mov
push
dec
(bad)
xchg
mov
sub
pop
sbb
xchg
ret
xchg
jl
ins
jmp
(bad)
push
gs
inc
test
fst
inc
dec
or
adc
out
outs
pop
fs
push
jmp
or
cmp
js
cmp
push
sbb
inc
out
mov
cmp
pop
iret
out
push
and
lea
dec
ja
push
mov
test
jp
or
mov
ficom
pop
cmp
sahf
push
js
mov
xchg
or
(bad)
iret
nop
test
push
aam
sub
add
outs
xor
popa
jae
and
cmp
jo
das
pusha
cdq
push
rcl
xchg
cmps
outs
cmp
ret
sbb
xchg
push
jae
fst
shr
push
aad
retf
or
xchg
mov
sysret
add
sub
mov
or
scas
jnp
xchg
in
adc
xor
int
push
pop
into
lods
sub
jmp
mul
mov
dec
bnd
sbb
mov
jp
mov
int3
jmp
push
call
jg
xchg
shl
sbb
dec
push
mov
ins
pop
or
fimul
or
and
or
cwde
aad
adc
mul
jb
jl
in
xchg
ins
je
mov
inc
adc
hlt
jno
add
shr
pop
add
sbb
aas
(bad)
mov
ficomp
push
je
mov
xchg
fwait
sub
push
adc
stos
jge
lods
adc
(bad)
cmp
cmp
bound
jns
loopne
and
cs
ds
test
xchg
fs
or
add
push
mov
pusha
(bad)
fdivr
xor
jp
jno
cmp
out
xchg
sub
int3
mov
xor
seto
dec
mov
adc
xchg
and
xchg
jns
mov
jmp
lods
hlt
in
push
arpl
movs
inc
adc
fist
fnstenv
aam
mov
pop
push
out
and
pop
fcom
sbb
pop
int
mov
shr
fadd
cmp
pop
adc
xchg
movs
imul
adc
jmp
dec
push
das
pop
mov
cmp
cs
mov
jmp
scas
lods
call
add
(bad)
je
aas
pop
xchg
xor
inc
ret
mov
inc
sbb
(bad)
aas
fcomp
cmps
sahf
loop
pushf
ds
icebp
outs
(bad)
dec
or
pop
cmp
and
mov
fisttp
dec
arpl
dec
mov
cmp
ins
pop
and
mov
pusha
rcl
sar
(bad)
jmp
je
ret
adc
retf
stc
jno
adc
sbb
fldenv
adc
sahf
cmp
fld
cmp
dec
test
add
xor
adc
sahf
(bad)
and
dec
add
ret
cmps
fstp
fisttp
add
in
pop
jo
stos
push
push
lods
push
pop
lds
es
cmp
pop
aas
adc
xor
cmp
xor
mov
(bad)
sub
dec
addr16
addr16
mov
mov
lea
xchg
sahf
mov
arpl
mov
inc
loop
push
stos
pop
nop
call
cmp
sbb
mov
je
jns
scas
adc
pusha
xchg
mov
aam
mov
xchg
mov
xchg
inc
xchg
sahf
add
sbb
adc
xor
pop
xchg
mov
push
jge
sbb
inc
jg
out
jno
xor
adc
rcr
leave
mul
sbb
mov
and
(bad)
lods
test
lea
jno
out
dec
les
out
xor
sbb
jg
ror
(bad)
mov
or
ret
lahf
sbb
enter
in
mov
xor
or
push
adc
pusha
jo
jnp
mov
sub
dec
popa
pop
xchg
mov
cmp
push
dec
xchg
fsubr
and
pop
and
icebp
arpl
sub
sbb
pop
outs
stos
jbe
inc
adc
xor
pop
jns
xor
xor
push
mov
test
pop
push
scas
movs
adc
cmp
fdivrp
and
or
aas
ins
jle
scas
mov
inc
test
sbb
push
mov
stc
dec
shr
frstpm(287
les
ret
int3
fiadd
sub
mov
mov
lods
pop
mov
push
repz
xor
add
xchg
into
aad
dec
repz
and
fistp
xchg
test
mov
lods
stos
callw
leave
call
loop
psraw
push
and
xor
jmp
cdq
add
mov
mov
in
(bad)
jns
sbb
xchg
jnp
xchg
mov
popf
fbld
sbb
jne
xor
cmps
mov
outs
lds
mov
jne
imul
or
dec
ss
lock
add
cmp
jg
and
and
int3
test
cs
pop
lods
leave
clc
leave
xor
jns
sub
cmp
out
dec
inc
sub
test
jb
stos
lods
fnstsw
hlt
out
xchg
loop
in
or
out
ss
shl
mov
movs
gs
sbb
mov
sbb
dec
call
cli
clc
dec
loope
jge
and
test
imul
dec
dec
fmul
push
pusha
mov
push
cs
mov
hlt
(bad)
shl
xor
push
in
sub
fucomi
fsubr
nop
icebp
sar
xor
cmp
mov
repz
xor
ins
push
(bad)
sub
push
(bad)
mov
and
ficomp
aaa
mov
cmps
shl
push
and
je
popa
lahf
leave
xchg
jl
fadd
xchg
mov
jecxz
cmc
aaa
pop
cs
xlat
sbb
push
sub
loopne
jecxz
dec
inc
in
std
adc
jg
std
dec
ret
cmps
imul
mov
pop
out
sar
aam
inc
push
repnz
dec
call
xor
test
repnz
(bad)
and
xchg
js
arpl
mov
sbb
mov
enterw
mov
fsubr
cli
push
cmp
gs
and
adc
mov
xchg
stos
mov
sbb
fcomip
out
push
dec
push
add
lahf
outs
stc
pop
push
les
push
inc
lods
xchg
dec
sub
stos
pop
mov
(bad)
shr
cmp
mov
push
cmp
add
repz
in
test
jb
adc
nop
inc
fisttp
adc
dec
shr
movs
jmp
fidiv
rep
and
out
ins
ret
sbb
test
shl
dec
aad
clc
dec
fdivr
test
push
imul
xchg
out
jno
ins
ret
mov
je
cmps
mov
or
xchg
adc
sbb
inc
xor
sahf
cld
dec
adc
dec
xor
ja
cmc
js
cld
xchg
mov
push
daa
imul
jle
sbb
leave
xchg
js
cdq
dec
loop
xchg
push
jp
cld
(bad)
movs
xchg
cmp
mov
out
xchg
scas
mov
ret
mov
xchg
or
cmp
cmc
sub
(bad)
and
mov
xor
push
mov
dec
scas
push
add
and
jo
retf
(bad)
xchg
cmp
lock
adc
aam
cmp
fiadd
pop
adc
fldcw
dec
xchg
and
nop
mov
xchg
sub
popa
inc
or
sbb
(bad)
hlt
xchg
call
push
xor
jl
inc
mov
mov
call
dec
pop
ret
addr16
ins
fs
sbb
dec
sbb
inc
mov
(bad)
std
jmp
sar
shl
frstor
daa
int3
les
ins
and
xor
pushf
shl
stc
shr
cmps
shl
mov
push
scas
mov
in
jno
stos
sbb
mov
push
rol
dec
retf
xor
repz
mov
push
and
mov
jg
xchg
push
pusha
sub
in
mov
xchg
push
mov
mov
or
push
mov
push
test
aad
mov
mov
pop
sbb
pop
or
sub
push
push
int
jno
cmp
outs
cli
dec
popf
xchg
or
push
imul
inc
imul
xor
dec
pop
out
test
push
cmp
xor
pushf
leave
sub
ret
mov
gs
outs
out
dec
add
loope
push
cmc
je
movs
in
sbb
sbb
cs
xchg
(bad)
add
dec
push
push
sbb
dec
and
mov
mov
pop
mov
cmp
scas
sbb
cmc
sub
fmul
cmp
shr
sub
add
bswap
or
and
test
xor
outs
not
mov
fisttp
pop
dec
fscale
add
outs
aam
pop
mov
cmps
cmp
push
jb
repnz
scas
js
dec
mov
shl
xor
(bad)
jecxz
ins
xchg
leave
aaa
frndint
cmps
in
pop
pop
test
ins
or
lahf
fild
pop
pop
cmps
test
repz
pop
adc
mov
(bad)
mov
lahf
rcl
dec
sar
scas
shl
xor
cs
jnp
(bad)
mov
sub
mov
ffreep
sar
mov
shr
mov
addr16
add
lock
sbb
mov
xchg
sbb
add
loopne
mov
icebp
stc
mov
sub
push
out
pop
xchg
inc
popa
dec
sbb
mov
add
imul
lods
jne
int3
sub
pmaxsw
fst
xor
jnp
mov
adc
inc
cmps
inc
push
pop
cli
out
mov
and
mov
jnp
fs
dec
xlat
cmp
fild
nop
lods
sub
cmps
imul
or
daa
(bad)
icebp
scas
(bad)
(bad)
mov
lods
xor
sbb
or
cmp
and
je
dec
xchg
xor
ret
jmp
lds
aad
data16
xchg
cmp
icebp
addr16
loop
mov
jne
bound
cmovno
je
(bad)
retf
pop
mov
das
leave
icebp
sub
pop
aad
mov
push
(bad)
enter
and
daa
xchg
pop
xor
int
xor
push
xor
test
xchg
jae
inc
sbb
add
pusha
mov
xchg
add
push
cmp
inc
ret
xor
cwde
sahf
push
and
mov
jae
jb
add
les
mov
xchg
imul
cmp
ss
pop
and
xor
jl
push
out
(bad)
mov
jmp
mul
dec
mov
and
dec
mov
xlat
xchg
nop
dec
push
pushf
mov
lods
cmp
xchg
test
int
xor
shr
aas
cld
mov
dec
daa
cmp
dec
dec
shr
adc
inc
shr
adc
jecxz
xor
mov
ds
mov
and
pop
stc
lods
push
rol
and
(bad)
xchg
xor
call
pop
shr
adc
cmp
jbe
ins
pop
jno
data16
loop
jge
test
fwait
jb
(bad)
xchg
test
loope
or
xlat
hlt
mov
aas
mov
or
fadd
adc
and
loopne
xor
jg
sahf
addr16
jae
xor
sar
xor
repz
inc
dec
lods
mov
sub
or
arpl
ins
jmp
jg
sbb
mov
movs
jbe
shl
xor
pop
mov
mov
cwde
sbb
xor
call
outs
adc
loop
ret
mov
jecxz
gs
xchg
(bad)
not
xor
jle
mov
shr
xor
push
cmc
cmps
add
pusha
mov
data16
adc
mov
leave
mov
push
in
test
ja
repz
(bad)
retf
mov
addr16
fwait
daa
mov
add
cld
loop
leave
xchg
mov
stos
sbb
rol
int
das
outs
jne
fst
inc
pop
xchg
js
rcl
xchg
mov
test
test
retf
inc
or
fistp
add
or
leave
in
xor
sti
pop
mov
in
in
push
dec
pop
mov
cmp
inc
fnstenv
sub
addr16
mov
gs
mov
sub
adc
lds
inc
sbb
xchg
ja
pop
iret
mov
stc
int
cdq
in
inc
je
jo
mov
jo
jl
cmp
pop
mov
iret
pop
scas
or
pop
lods
jae
je
loopne
jmp
dec
dec
jb
mov
imul
and
inc
popa
daa
push
mov
mov
inc
jmp
sbb
data16
in
hlt
mov
pop
and
xchg
iret
xor
(bad)
cmp
ror
shr
and
fcomp
mov
mov
xchg
pop
or
and
addr16
icebp
mov
xor
popa
mov
sub
ds
sub
xchg
mov
and
cmp
lahf
add
dec
lahf
sub
lods
shl
imul
jl
and
add
mov
movs
gs
cmc
dec
add
mov
fild
sub
aas
jg
xlat
push
idiv
cmp
jmp
push
cmp
fldenv
test
cmps
aad
mov
jb
nop
xor
and
inc
xor
test
jno
hlt
adc
push
jbe
enter
inc
loop
mov
fdivr
leave
inc
lods
sub
inc
imul
dec
and
cmp
xor
and
ss
int
cmp
jnp
rcr
cmp
mov
retf
mov
ins
not
dec
fst
imul
sub
test
retf
pop
mov
add
mov
aad
or
adc
movs
fisub
pop
stos
jo
fsubr
imul
icebp
icebp
stc
xchg
ficomp
shl
bound
add
aad
add
cmps
cwde
or
jmp
jae
inc
sub
fidivr
fdivr
popf
jecxz
pop
lahf
in
je
inc
sbb
sahf
dec
out
push
fsubr
pop
lods
fstp
jmp
(bad)
test
xchg
mov
js
xchg
in
cmp
sub
ins
mov
mov
mov
rol
dec
mov
js
cli
pop
fld
movs
(bad)
cli
icebp
jle
in
mov
lock
mov
xlat
dec
hlt
inc
push
lds
imul
(bad)
das
test
outs
pop
or
push
jl
fnstcw
and
or
jl
cmps
mov
stos
cmps
in
mov
icebp
scas
cmp
outs
push
mov
pop
jno
pop
repnz
mov
xchg
retf
dec
scas
cmp
inc
adc
in
mov
push
pop
sub
push
or
into
div
dec
rcr
bound
js
dec
cwde
jg
pop
retf
sbb
and
lock
pop
push
dec
int3
push
mov
inc
push
test
xchg
sub
cmp
mov
in
and
mov
xchg
call
shl
cmp
pop
sub
sahf
(bad)
(bad)
int
in
mov
jmp
pop
and
dec
sbb
pop
pop
xor
push
add
cmc
mov
mov
js
inc
adc
dec
sbb
add
inc
mov
fimul
shr
rcl
aam
ret
arpl
dec
loop
push
ret
lods
popf
rcr
xor
aam
inc
stc
push
or
xor
outs
or
out
pop
cmc
add
cmp
xor
dec
aas
cld
fadd
dec
into
leave
sbb
scas
jle
test
dec
lds
add
xchg
repnz
add
int
psubsw
inc
xor
or
dec
xlat
addr16
scas
test
imul
pop
cwde
xchg
mov
cmp
in
cmp
add
ss
idiv
iret
mov
xor
jno
mov
stc
mov
xchg
and
popf
outs
inc
cmc
or
aas
es
pop
add
sbb
jge
jl
stos
mov
outs
cmp
popf
and
xchg
lds
sbb
mov
gs
scas
dec
or
inc
fdivr
mov
and
xchg
test
mov
lds
arpl
cmp
xor
cmc
test
xchg
pop
xor
adc
or
dec
cmps
test
lods
jnp
jne
pop
adc
repz
mov
jb
fimul
call
cli
call
rol
idiv
ret
popa
(bad)
push
sti
int3
out
lock
and
xchg
sahf
test
push
test
pop
mov
and
stos
push
ffreep
sbb
mov
scas
in
aad
and
arpl
add
call
dec
jl
dec
cmps
sbb
cmp
std
mov
mov
fwait
cmps
movs
and
sub
cli
adc
jae
push
cli
push
push
mov
or
sub
xor
push
js
inc
or
and
xchg
cli
cli
mov
add
cmp
imul
mov
sbb
rcl
adc
frstor
pop
es
ror
lds
pushf
adc
mov
fisub
dec
or
fistp
dec
test
mov
ror
lods
fmul
jno
mov
stos
cmps
xlat
mov
inc
mov
movs
sahf
cmps
cdq
popf
pop
mov
jp
mul
mov
in
jo
xor
loopne
jle
xchg
jb
cmp
and
mov
jmp
dec
lahf
xchg
int
mov
mov
js
xor
test
mov
mov
cdq
mov
fsubrp
cmp
sti
lods
mov
push
sbb
sub
shl
jns
(bad)
pop
jno
int3
sub
sbb
pop
sub
movs
jne
fmul
jl
jnp
pusha
sub
sbb
pop
in
cmp
xchg
lods
mov
movs
xor
dec
cs
jl
je
mov
daa
dec
out
sub
pop
sbb
and
movs
xchg
enter
and
bound
jecxz
jns
mov
and
push
mov
or
push
push
dec
in
ja
xchg
push
adc
stos
stos
pop
(bad)
in
sub
pop
pop
push
sbb
inc
aad
push
das
jg
mov
movs
or
data16
jns
jmp
stos
imul
xchg
fmul
lahf
sub
pop
pop
lahf
cld
ins
gs
or
jmp
mov
aas
mul
in
scas
xchg
pop
jg
add
xor
stc
test
call
add
mov
mov
movs
cmp
jl
inc
imul
sbb
aas
test
fistp
clc
jbe
inc
in
movs
lods
sbb
mov
fild
mov
mov
out
xchg
mov
xchg
out
mov
(bad)
xchg
cmp
ins
sahf
je
mov
fs
sbb
(bad)
add
repnz
mov
rcl
xlat
inc
rcr
add
(bad)
pop
shl
push
add
stc
xchg
cmp
addr16
call
sbb
dec
pop
sbb
(bad)
cmps
call
pop
or
fdiv
mov
sub
xor
pop
adc
ror
(bad)
add
cmp
ret
out
xor
push
mov
mov
in
scas
cwde
mov
gs
mov
mov
xchg
and
mov
jmp
out
mov
enter
or
retf
stc
xchg
jl
test
lahf
mov
fs
idiv
pop
and
mov
cmp
mov
inc
push
aaa
out
call
cli
adc
mov
sub
adc
push
push
call
xor
jmp
lds
data16
pop
fiadd
pop
retf
or
cmps
jns
loope
test
adc
mov
fdivr
add
mov
into
leave
mov
leave
add
mov
sbb
pop
pop
bnd
adc
and
add
ins
xor
sbb
cdq
dec
shr
and
pop
stc
pop
repnz
rcr
fsubr
push
aad
cmc
ss
rcr
mov
inc
les
jne
jmp
dec
jnp
sbb
inc
sbb
pushf
sub
cmp
js
jb
fcom
dec
xor
popf
scas
loop
fsubr
out
xor
in
loop
das
mov
mov
(bad)
aas
and
dec
(bad)
sbb
push
add
in
scas
xchg
and
mov
div
out
cmc
pushf
ins
and
jge
inc
call
cs
aad
or
push
sbb
fidivr
scas
mov
add
xchg
mov
push
sbb
jl
popf
je
dec
inc
pop
fisttp
ja
in
cmps
cmps
adc
into
mov
aas
ret
mov
cmp
addr16
rcr
rol
imul
mov
retf
movs
add
jnp
sub
les
jns
inc
repnz
in
ret
adc
js
inc
cmp
fidiv
push
adc
inc
js
sar
and
push
pop
in
ja
cmp
nop
jbe
inc
mov
jns
cwde
ja
xchg
addr16
rcr
pop
xor
sti
int3
rcl
sbb
pop
xor
sub
call
jmp
xchg
xchg
push
add
(bad)
aad
(bad)
cmps
mov
cdq
xchg
xchg
test
adc
xchg
js
scas
push
data16
into
sub
jmp
clc
test
pop
lea
in
aas
push
(bad)
cs
push
jnp
out
sbb
in
mov
pop
push
stos
outs
mov
adc
add
jecxz
xlat
aad
add
std
sbb
and
dec
mov
rol
fisubr
jo
dec
adc
push
rol
jb
movs
pop
cmp
cmps
std
outs
in
xchg
pop
(bad)
mov
fcom
add
retf
and
arpl
(bad)
iret
adc
xchg
push
ror
push
pop
mov
jo
cmps
dec
mov
mov
rcl
js
fmul
(bad)
in
sub
mov
cvtpi2ps
sub
outs
sbb
popf
clc
xchg
cmp
sbb
push
dec
daa
stc
stos
sbb
add
dec
daa
dec
in
cmps
and
xchg
cmps
test
jb
mov
mov
xor
jle
pop
xchg
sahf
(bad)
mov
inc
enter
xchg
mov
adc
retf
fld
adc
loopne
add
shl
mov
cmp
jg
repz
add
js
push
xchg
cmp
push
adc
sub
pusha
arpl
and
xlat
mov
aam
adc
scas
ror
xchg
inc
out
inc
xor
pusha
fucomp
aas
xchg
mov
pushf
imul
fdivr
push
or
sub
iret
mov
adc
inc
adc
mov
je
mov
(bad)
push
arpl
sub
cmp
in
mov
aam
mov
test
and
mov
retf
(bad)
mov
mov
and
scas
(bad)
retf
inc
pop
xchg
push
lods
cmps
xor
jns
arpl
dec
aas
test
adc
adc
es
test
int3
or
pop
pop
call
or
mov
mov
push
pop
cs
fucomp
dec
movs
jle
in
or
dec
mov
jae
dec
in
xor
shr
test
or
fwait
dec
movs
repz
sbb
jnp
aam
push
daa
adc
xor
movs
add
leave
in
aam
push
test
and
std
jg
(bad)
addr16
fisub
mov
and
cmp
mov
pop
jmp
mov
fisub
lods
xchg
pop
sub
pushf
cmc
jb
add
cdq
mov
in
repnz
and
rcl
and
xor
in
call
mov
test
and
push
jmp
mov
sub
mov
setne
xor
ss
adc
in
mov
sbb
xor
xor
stos
cld
lahf
(bad)
jne
fbstp
adc
mov
pop
mov
mov
xchg
jecxz
mov
push
sti
mov
xor
div
push
inc
je
mov
xchg
push
div
jo
mov
stos
dec
int3
sub
(bad)
push
cdq
or
mov
xchg
jle
adc
retf
cmp
or
adc
repnz
mov
retf
cld
data16
gs
mov
jecxz
jmp
push
fnstsw
xchg
mov
cmp
and
mov
add
jp
xor
inc
pcmpgtw
cmp
jecxz
push
pop
ror
pop
mov
pushf
lds
sub
fldcw
jg
rcr
(bad)
sbb
sbb
push
daa
ror
mov
out
adc
inc
mov
dec
sbb
jae
mov
ss
cmc
or
mov
js
outs
enter
jbe
add
cmp
mov
cmps
mov
sbb
inc
stos
aad
mov
or
pusha
std
xchg
mov
adc
pop
sahf
xchg
pop
jl
das
adc
dec
inc
repnz
dec
std
scas
xor
inc
outs
es
fld
int3
jmp
or
movs
inc
add
cmp
xor
push
cmps
icebp
cwde
mov
pop
(bad)
cmp
add
push
pusha
pop
retf
(bad)
jg
scas
retf
leave
int
pop
and
ret
mov
push
adc
pushf
lds
movs
popa
into
shl
sub
xchg
(bad)
std
mov
dec
mov
fwait
or
mov
mov
leave
icebp
lahf
adc
sub
sar
inc
sub
mov
sbb
push
dec
mov
mov
cmp
mov
lock
sbb
shr
mov
out
cmp
dec
iret
scas
jbe
loopne
mov
xor
mov
lahf
test
jg
movs
ds
adc
add
xchg
in
leave
push
pop
rol
push
xor
stos
xor
push
add
xchg
lods
test
xchg
sbb
mov
or
mov
push
dec
inc
nop
inc
lods
jno
and
test
repz
adc
mov
jl
pop
repnz
and
lods
mov
loop
stc
vpmuludq
test
dec
les
dec
cld
fs
sub
out
addr16
xchg
outs
sub
add
out
dec
mov
inc
out
outs
cld
mov
fwait
outs
jne
daa
mov
sub
jl
std
sbb
(bad)
ins
clc
or
repnz
mov
scas
add
mov
adc
enter
mov
or
sbb
mov
mov
loope
icebp
inc
add
sub
xchg
cli
(bad)
pop
mov
push
mov
jl
pop
mov
jmp
xchg
icebp
repnz
add
cld
xchg
loopne
mov
cdq
push
inc
rcr
das
aam
fs
popf
fcmovne
dec
ja
int3
inc
add
leave
add
std
mov
inc
cmps
mov
sbb
sbb
out
jae
cs
adc
adc
xor
mov
out
adc
ins
lods
int3
cld
fldln2
mov
pop
inc
in
adc
and
fmul
adc
hlt
addr16
jns
jl
test
add
xor
mov
sbb
or
or
popf
xchg
pop
(bad)
lds
sub
add
cld
push
aaa
(bad)
and
ss
xchg
xbegin
cmps
adc
in
in
dec
aaa
mov
pushf
arpl
das
xchg
aas
jne
inc
and
xor
push
fidivr
dec
adc
call
lahf
dec
mov
mov
loop
inc
inc
ss
sub
fdiv
(bad)
jnp
mov
cmp
inc
or
push
adc
mov
out
aaa
outs
(bad)
dec
mov
dec
adc
xlat
bound
shl
push
mov
into
sub
in
out
jmp
es
loopne
mov
lods
dec
mov
dec
or
mov
xor
mov
or
or
mov
dec
call
retf
arpl
adc
lods
les
push
sbb
jecxz
pop
movs
imul
and
mov
pop
xchg
and
icebp
inc
test
dec
push
inc
retf
fst
mov
adc
inc
pusha
mov
ss
jo
ret
(bad)
pop
test
popf
lea
clc
or
mov
jns
aam
dec
cld
sub
sbb
add
cmp
std
jo
mov
mov
mov
xchg
scas
and
or
and
sub
cli
cdq
into
cmp
stos
(bad)
fcomp
push
inc
push
pop
xchg
fwait
push
loopne
movs
in
pop
hlt
xchg
jns
clc
(bad)
mov
mov
cmp
sub
cmp
dec
fsub
lds
cmp
add
scas
push
push
pusha
idiv
rcr
int
and
lds
sub
aaa
xchg
movs
pop
push
sbb
mov
movs
std
cld
mov
mov
jmp
xor
rcr
fiadd
mov
not
xchg
push
movs
(bad)
retf
mov
(bad)
push
cmps
(bad)
nop
imul
fcmovnbe
je
pop
inc
fwait
sar
repz
imul
xor
rol
sub
out
mov
out
sti
imul
push
sub
lds
cmp
xor
(bad)
lods
aad
and
pop
push
and
mov
mov
retf
ja
xor
je
jp
ja
and
out
cmp
sbb
xchg
mov
aaa
stos
inc
add
adc
mov
mov
jecxz
push
retf
popa
cwde
inc
shl
add
cwde
rcr
add
xor
imul
movs
(bad)
sub
loope
inc
inc
and
sbb
std
or
jp
test
outs
jo
neg
push
lahf
jg
sub
sub
sub
xchg
push
test
cli
scas
in
inc
mov
arpl
sbb
dec
addr16
push
movs
sbb
in
enter
(bad)
retf
xor
xchg
xchg
mov
xchg
and
sbb
jmp
add
mov
retf
cmp
xor
xchg
jbe
cmp
imul
or
daa
rcr
hlt
cwde
ret
ins
dec
(bad)
jmp
test
call
scas
or
pop
mov
in
add
clc
xchg
ret
pop
popa
daa
cmp
popf
mov
seto
mov
fild
aaa
mov
stc
ja
leave
lds
mov
cmp
rol
test
xor
pop
sbb
imul
jno
push
mov
in
pop
enter
add
mul
or
aam
sbb
aaa
sahf
or
push
fcomip
mov
pop
mov
xchg
rcl
push
fild
ds
addr16
sbb
fdivr
mov
mov
mov
addr16
test
lahf
fsubr
(bad)
mov
sub
sbb
add
fs
mov
cmp
loope
fdivr
xchg
mov
div
fsubr
sahf
mov
rcr
and
in
inc
push
out
cmp
sbb
jg
mov
add
daa
mov
lods
xchg
out
jb
jmp
sub
ja
gs
ss
pop
mov
mov
sub
push
nop
mov
cmp
lods
out
mov
ret
(bad)
arpl
inc
(bad)
scas
xchg
ret
fidiv
sar
xchg
cwde
mov
pop
test
jp
pop
stc
aad
add
test
imul
sti
popf
dec
aas
pushf
cmp
mov
mov
sub
test
adc
cdq
cmp
jo
sbb
test
pop
je
jmp
lahf
jecxz
ja
sbb
fs
mov
mov
mov
add
(bad)
xchg
out
movs
push
or
or
setns
std
sub
add
and
dec
dec
mul
push
gs
mov
faddp
and
mov
loop
xchg
mov
add
sbb
in
outs
pop
adc
fisub
sbb
mov
add
sub
push
retf
pop
adc
jno
mov
cmp
outs
cmc
or
shr
sub
repnz
imul
std
xchg
and
pop
in
cmp
dec
sbb
cmp
pop
leave
(bad)
out
fadd
sub
lea
inc
aad
movs
(bad)
sti
cmp
fs
xchg
lea
xor
sub
cmp
lods
push
dec
dec
sbb
push
sub
ins
mov
cmps
push
cmp
das
popf
retf
jae
inc
(bad)
arpl
dec
pop
mov
or
mov
or
lock
dec
ret
xor
enter
add
mov
fiadd
cmp
fisttp
cmp
adc
dec
mov
cwde
scas
push
adc
mov
and
xor
sbb
jae
pop
shl
lods
pop
int
cli
dec
jbe
mov
bound
js
mov
mov
push
mov
out
pusha
movs
movs
lea
jno
hlt
cmps
mov
mov
adc
in
inc
jae
call
repnz
jl
stos
gs
push
or
push
cmp
add
dec
inc
aam
mov
aam
leave
cs
inc
gs
outs
shl
mov
cmp
jnp
jae
inc
jmp
mov
inc
mov
dec
push
dec
add
and
mov
mov
inc
jo
jns
retf
sbb
sub
mov
or
push
inc
in
cmp
retf
fisttp
(bad)
jno
imul
scas
(bad)
add
je
mov
dec
retf
pop
jns
jle
xor
push
lods
(bad)
lock
xor
into
pusha
inc
lds
xor
test
sub
pop
ret
test
push
jmp
jnp
loope
xchg
inc
scas
lahf
icebp
xchg
pop
xor
push
pop
shl
mov
and
xchg
pop
ja
jmp
ja
jae
xor
dec
ret
repnz
mov
loope
stos
fsub
xor
outs
enter
adc
lods
sbb
inc
mov
adc
pop
jmp
mov
test
fnstcw
sbb
and
jecxz
mov
movs
jmp
or
add
popf
cmp
jno
lods
out
xor
mov
ret
imul
and
pop
xchg
fsubr
(bad)
(bad)
sub
add
test
in
(bad)
sbb
push
add
sub
inc
mov
gs
sub
cmp
(bad)
xor
add
aas
add
fadd
cmp
fstp
loopne
mov
mov
xlat
int
mov
push
xor
add
repz
jle
mov
cld
fidivr
pop
adc
push
fcmove
push
loop
fs
and
mov
int3
jo
jecxz
sub
cli
jno
xchg
inc
ja
push
popf
xor
sbb
cmc
pop
pop
mov
jnp
inc
dec
mov
pop
repz
mov
es
cmp
addr16
mov
xchg
jl
scas
sbb
pop
ins
mov
mov
jg
mov
jp
and
inc
ret
mov
fldenv
push
stos
sub
hlt
cmp
mov
cmp
add
or
pop
nop
cmp
or
imul
in
mov
pusha
cld
popa
cmp
ja
mov
mov
inc
mov
fisttp
fistp
jle
wbinvd
xchg
cld
jg
and
mov
clc
ja
push
retf
rol
add
inc
test
lods
xor
scas
mov
mov
pop
push
push
and
arpl
inc
mov
inc
add
loop
stos
(bad)
clc
and
in
xchg
js
lahf
mov
mov
xor
xor
inc
xchg
pop
into
mov
inc
jg
scas
scas
mov
and
or
or
(bad)
dec
xchg
mov
outs
ret
(bad)
cmp
cmc
pop
cmp
daa
inc
jnp
jg
iret
std
arpl
pusha
mov
or
jg
dec
(bad)
fsub
push
cmp
shl
mov
adc
mov
js
xchg
pop
mov
(bad)
adc
imul
pop
mov
addr16
pop
rol
scas
dec
dec
cmp
and
add
test
repz
inc
fldenv
mov
cmp
push
mov
aam
mov
mov
fs
ret
mov
add
inc
cmps
pop
cmps
push
and
push
mul
xchg
jmp
pusha
ss
enter
mov
adc
jp
or
push
sub
pop
scas
xor
add
mov
js
popf
(bad)
cmps
push
ret
or
aaa
and
ror
pop
sti
mov
setge
jg
ins
movs
mov
out
ror
mov
out
xlat
js
dec
jnp
sub
sahf
xchg
add
push
ror
add
aam
hlt
jge
push
not
loopne
dec
scas
push
retf
fbld
shl
add
ficomp
sbb
xchg
cmp
movs
sbb
sub
jo
test
jmp
ins
sbb
adc
scas
push
jge
pop
call
xor
cs
test
mov
dec
push
adc
mov
or
pop
cmp
xor
push
push
mov
jmp
mov
mov
out
inc
mov
xchg
aas
call
dec
bound
dec
jl
sbb
jle
pop
mov
adc
add
pusha
push
outs
clc
mov
jnp
std
mov
and
pop
mov
addr16
jmp
add
test
aam
xlat
dec
xchg
mov
cld
xchg
xchg
cwde
mov
repnz
shl
push
dec
sub
adc
sbb
hlt
call
mov
je
call
es
movs
(bad)
cmps
mov
leave
ficom
mov
outs
or
pop
clc
push
es
repz
int3
sbb
data16
or
das
scas
xor
add
(bad)
jae
and
pop
or
das
mov
sbb
retf
inc
push
pop
lea
dec
(bad)
jns
jo
add
adc
dec
mov
push
movs
mov
pop
inc
pop
(bad)
ror
xchg
pop
sbb
int3
dec
cmp
or
mov
add
adc
cbw
jnp
movs
ins
sub
in
fnstcw
push
cdq
call
scas
cmp
or
xor
mul
iret
sti
enter
addr16
retf
or
outs
out
mov
ss
cdq
mov
add
lds
jecxz
mov
rcr
imul
dec
retf
mov
inc
jae
mov
xchg
cmps
(bad)
jecxz
jo
adc
in
sbb
cs
pop
shl
jg
arpl
sbb
ret
xor
push
and
fisttp
lods
push
nop
sbb
ja
fimul
pop
xor
mov
xor
mov
jge
jl
mov
fcomp
and
sbb
or
inc
mov
in
pop
sbb
fidivr
pop
xor
push
cmp
inc
sub
push
mov
sbb
xor
xor
sbb
(bad)
sti
cs
test
and
inc
(bad)
arpl
and
les
inc
leave
dec
movs
jo
imul
test
add
sub
or
jge
lock
ds
mov
fst
jle
clc
repz
loopne
cmp
or
cwde
fsubr
je
bound
loopne
fwait
push
xchg
and
sbb
sti
push
sti
test
fild
pusha
add
out
aaa
mov
fs
ds
add
cmp
push
iret
or
aaa
ins
jge
push
retf
stos
(bad)
push
and
mov
pop
pop
mov
jns
jge
stos
stos
pop
ds
cmc
or
sbb
rcl
test
push
jnp
or
data16
sub
mov
pop
xchg
shl
lock
mov
les
and
mov
sub
jmp
test
jnp
sbb
xchg
das
mov
mov
(bad)
jp
aaa
pop
leave
adc
call
inc
std
iret
xchg
mov
sub
adc
sub
dec
stc
pop
out
jmp
imul
gs
fadd
xchg
mov
mov
cli
add
inc
test
or
add
nop
pop
push
ss
fadd
mov
mov
aas
and
and
and
dec
jge
or
and
sbb
loope
repz
xchg
sub
pop
pop
pop
xor
adc
mov
addr16
adc
mov
mov
ror
or
jb
loop
cmp
cmp
out
jle
mov
shl
sbb
add
in
sub
fdiv
test
shl
sbb
sub
shl
add
cmp
stos
sub
dec
or
mov
add
mov
retf
cmp
sub
test
imul
adc
pop
loope
lahf
clc
push
fnstenv
xchg
movs
rcl
inc
fist
add
sbb
rcr
add
cld
cmp
cmp
xchg
and
sbb
rcl
lock
pop
jmp
nop
jge
lds
cmc
or
out
jbe
mov
in
out
jnp
je
je
(bad)
(bad)
rcl
sar
fnstcw
pop
ror
and
pop
int3
out
sbb
in
loope
fidiv
(bad)
popf
arpl
lea
mov
ss
inc
mov
in
adc
add
outs
xchg
add
gs
jge
add
fcmove
and
and
mov
sub
cmps
call
popa
fistp
jbe
dec
adc
sub
mov
stos
icebp
xchg
add
push
pop
fst
adc
xchg
jle
sub
rol
mov
ds
lahf
and
sbb
out
add
mov
xchg
inc
xchg
nop
lds
stos
in
inc
adc
xchg
mov
(bad)
pop
mov
popf
push
jmp
inc
outs
loopne
mov
jmp
jge
dec
sbb
push
int3
mov
push
dec
add
inc
mov
dec
test
jne
out
test
dec
jno
sub
aad
jmp
dec
push
jecxz
aas
add
xchg
test
in
call
aad
sub
sti
xor
(bad)
ins
cli
sub
mov
ds
retf
(bad)
dec
inc
adc
xlat
(bad)
cli
mov
call
sub
fisub
fwait
int3
repz
cmovle
popf
repz
cmp
int
pop
xchg
cmp
pop
and
mov
jmp
add
or
push
outs
cs
sti
pop
and
test
xlat
fcomp
and
sub
add
sbb
and
(bad)
(bad)
jnp
pop
es
inc
fst
or
jge
jle
ins
mov
or
cmp
dec
xchg
cmp
pop
xor
ss
push
cdq
sub
pop
cmp
xchg
sahf
in
mov
cmp
aad
(bad)
in
mov
cmps
inc
sti
and
pop
adc
cmp
enter
dec
fwait
sub
call
and
js
mov
(bad)
dec
ds
aaa
call
test
and
sub
pop
sub
fs
xor
or
aas
cmp
out
jge
ja
daa
loop
mov
cmps
adc
rol
pop
pop
xlat
and
jo
ja
pop
call
push
jb
mov
xor
test
cmp
pop
in
jmp
stos
dec
mov
fcom
jmp
rcr
sub
mov
(bad)
mov
je
xchg
into
bound
sub
xchg
int3
dec
pop
rol
jnp
ret
push
inc
(bad)
jl
nop
hlt
pop
pushf
ret
cmp
nop
fadd
fsubp
mov
xchg
addr16
xor
nop
jp
pop
test
rcr
cmp
adc
add
cdq
and
retf
push
daa
retf
scas
pusha
pop
movq
mov
jmp
pop
dec
mov
fcmovu
mov
(bad)
and
jmp
addr16
(bad)
jmp
pop
pop
or
mov
out
mov
jle
aad
popf
mov
punpckldq
stos
out
movs
dec
add
xchg
adc
(bad)
mov
in
test
sahf
xchg
and
jb
adc
add
ss
mov
aad
mov
loope
scas
inc
xor
hlt
movs
in
or
loopne
jbe
jmp
pop
jae
cmps
jl
fistp
and
sbb
pop
ja
adc
dec
lock
int3
add
pop
call
retf
and
in
or
call
xchg
xchg
popf
jp
icebp
push
mov
aas
loop
add
cmps
cmps
push
int3
add
movs
jecxz
mov
fwait
and
aad
jae
call
push
or
pushf
ins
cmp
out
cdq
and
and
jl
inc
les
mov
fwait
sub
out
xchg
cmp
fwait
aaa
push
imul
and
scas
xchg
fsub
xchg
push
or
out
das
rcr
xchg
xor
sub
call
cmp
and
aaa
mov
js
outs
pop
xor
sbb
xor
sahf
pslld
retf
sub
mov
cs
imul
fwait
dec
movs
jp
in
mov
or
xor
cmp
test
add
mov
mov
and
dec
add
cmp
popf
pop
pusha
stos
std
mov
shl
test
(bad)
add
jmp
(bad)
movs
test
dec
mov
inc
pushf
push
xchg
hlt
in
jo
(bad)
lock
pop
pop
pop
xchg
popa
mov
fs
mov
iret
push
xchg
or
xor
dec
push
xchg
jmp
fucompp
aas
xor
ror
pop
pushf
scas
push
stc
xor
cdq
mov
and
jae
cmp
and
popf
dec
inc
xlat
jl
ins
scas
cmp
shr
mov
sahf
pop
in
xor
lds
retf
fs
(bad)
ds
add
rcr
mov
mov
dec
in
clc
cmp
lock
push
fucomp
popf
movaps
mov
mov
lods
aas
mov
cld
ret
or
repz
bound
jns
outs
cdq
mov
sub
mov
(bad)
pushf
mov
enter
dec
or
adc
(bad)
jno
mov
lock
push
and
in
scas
mov
dec
pop
adc
dec
mov
jo
std
push
cmp
push
push
mov
push
dec
push
(bad)
daa
add
cmp
push
sub
mov
call
push
out
add
xchg
imul
scas
push
push
ret
pop
je
sub
mov
arpl
pusha
mov
std
push
sti
shr
fisubr
mov
repnz
jo
das
fsub
test
mov
cmp
into
rcl
pushf
xor
adc
dec
jae
je
xchg
retf
idiv
push
and
out
ins
test
sub
mov
push
fnstsw
mov
frstor
dec
cmp
sub
ja
out
iret
int
in
push
loopne
jmp
inc
dec
cmp
jmp
fidivr
mov
test
pushf
mov
fsub
sbb
push
jmp
idiv
ret
sbb
repnz
push
bound
popf
and
in
push
sub
pop
inc
adc
dec
sbb
ds
aaa
xchg
mov
adc
xlat
push
popa
aas
ins
sti
fwait
bound
repnz
rcr
or
xchg
call
lods
mov
or
cmc
jns
mov
mov
inc
adc
push
sub
pop
retf
cli
sar
mov
mov
or
mov
pop
mov
movs
inc
jo
ficomp
popf
mov
outs
mov
mov
add
xor
mov
push
das
add
mov
imul
dec
dec
iret
xchg
ret
dec
xchg
lahf
add
cmp
mov
inc
repnz
mov
and
shl
jle
push
rcl
sbb
push
ror
jg
xor
adc
fistp
sbb
dec
fld
pusha
jmp
cmp
lds
pop
lea
out
idiv
fiadd
cdq
mov
fadd
pop
add
or
cmps
cmp
sub
imul
pop
sbb
add
loope
cmp
push
popa
outs
mov
xchg
xor
std
xchg
icebp
cmps
and
mov
mov
hlt
mov
xor
hlt
mov
pusha
jp
push
mov
nop
cmp
pop
arpl
fsub
push
push
push
imul
ins
(bad)
or
pop
jp
add
pop
dec
ja
fistp
dec
not
mov
and
jo
inc
lds
xchg
cmp
cmp
mov
mov
xor
or
(bad)
cdq
movs
mov
pop
push
fwait
pop
popa
inc
xchg
mov
fiadd
pop
jne
push
and
cld
and
jg
sub
cmp
jne
push
stos
movs
rcr
addr16
jecxz
cmp
cdq
jecxz
shl
jge
pop
jb
stc
arpl
jle
jbe
pop
out
and
push
or
ins
sbb
adc
pop
push
retf
mov
icebp
in
outs
out
loopne
sbb
or
popa
ret
inc
ficom
dec
xor
and
not
and
xchg
mov
sbb
sbb
mov
enter
enter
xor
pop
and
ja
pushf
scas
cmps
(bad)
and
scas
dec
dec
inc
push
mov
push
fmul
repz
je
(bad)
test
dec
fistp
jl
inc
mov
clc
aam
and
mov
aad
jmp
jge
fnstcw
pop
gs
enter
icebp
cmp
sbb
std
aas
rol
mov
ror
push
in
repz
jnp
outs
cmp
sbb
xor
sub
sub
inc
js
icebp
cmp
pop
adc
int
popa
cs
inc
div
retf
ja
sbb
push
push
cmp
inc
movs
adc
and
fild
mov
pop
call
add
pop
mov
inc
ja
sub
xor
jl
mov
pop
cmp
fimul
ja
ret
inc
mov
std
cmp
mov
cmp
inc
cdq
add
popf
and
inc
cwde
push
push
push
jb
mov
mov
adc
add
jb
push
(bad)
outs
icebp
idiv
inc
mov
stos
pop
shl
cmc
adc
or
xor
loopne
add
mov
jmp
xor
sbb
jmp
pusha
adc
push
jae
xor
inc
lods
sub
mov
xor
sbb
sub
cmp
scas
dec
fiadd
ret
cdq
fwait
and
push
pop
adc
arpl
or
retf
adc
mov
(bad)
cmc
sub
popf
loope
es
jo
adc
adc
mov
jno
stos
(bad)
(bad)
mov
pop
loope
pop
sbb
lock
add
aam
mov
push
in
lods
push
mov
adc
loopne
icebp
jae
ret
add
in
dec
adc
jmp
sbb
jmp
rcr
fs
mov
mul
xor
sub
and
jecxz
and
ror
or
rol
push
sti
push
inc
enter
jno
dec
and
rol
pushf
xchg
push
shl
pop
pop
movs
jnp
call
pop
jo
ins
push
mov
sti
sbb
sub
out
or
adc
jl
leave
call
enter
retf
mov
xor
js
mov
cs
jp
mov
scas
add
mov
sbb
sti
pop
jno
in
mov
ds
test
fidivr
cmp
icebp
or
and
sbb
(bad)
fimul
and
or
fsubr
mov
ins
imul
or
dec
enter
and
add
pop
(bad)
xchg
(bad)
jb
xor
push
loopne
stos
std
mov
mov
inc
sbb
jns
sbb
loop
mov
push
mov
mov
mov
in
sbb
idiv
mov
push
mov
das
jge
adc
dec
xchg
(bad)
jae
pop
cmp
mov
and
daa
xor
push
stos
lock
and
in
enter
popf
dec
movs
std
adc
sbb
sbb
xchg
nop
outs
inc
mov
cmp
xor
scas
push
test
pop
push
mov
int3
cwde
and
inc
cld
jb
ja
sahf
pop
cwde
xchg
arpl
add
xor
sbb
aaa
out
fimul
pop
(bad)
mov
dec
(bad)
je
add
adc
inc
mov
jns
into
lock
push
retf
(bad)
in
fcmove
jp
outs
mov
or
scas
inc
shl
lock
shl
int3
in
outs
and
pop
aas
inc
scas
icebp
loopne
xchg
cmps
lods
push
hlt
loope
pop
stos
mov
push
add
lods
ror
or
test
dec
mov
or
mov
sti
and
dec
scas
or
movs
(bad)
cmp
ror
pop
xchg
(bad)
mov
mov
xchg
jns
adc
mov
or
popf
in
popf
mov
push
adc
out
test
xor
scas
jb
xor
xchg
(bad)
jg
pushf
fstp
loopne
aam
pop
push
xchg
push
sub
lds
or
movs
movaps
push
test
lods
out
cld
adc
rcr
les
dec
jp
sbb
je
push
dec
mov
lea
add
popa
jo
dec
mov
sbb
in
div
sahf
adc
adc
popf
movs
daa
inc
jbe
imul
pop
aad
ins
xor
push
push
cmps
inc
jge
xor
data16
xchg
ins
imul
push
cmp
in
ds
xchg
mov
loop
clc
fld
jb
(bad)
aas
jae
outs
(bad)
xchg
jg
and
loope
jg
out
loop
jb
les
repz
and
cmp
xchg
mov
imul
xor
test
(bad)
fild
mov
or
mov
push
jmp
mov
retf
mov
push
push
out
and
into
lods
imul
mov
fld
fcom
shl
data16
cmp
sbb
pop
ss
push
or
mov
mov
aas
and
hlt
not
iret
cwde
mov
dec
or
mov
push
cs
push
xor
movs
xchg
jmp
test
jne
loop
mov
arpl
ror
imul
mov
add
or
js
shl
add
and
push
dec
arpl
fld
(bad)
daa
pop
dec
ins
inc
jbe
jnp
repz
lea
std
xchg
pop
loope
xchg
dec
loopne
add
inc
cmp
inc
add
sbb
push
adc
(bad)
cdq
jae
jmp
dec
(bad)
sub
gs
das
xchg
lods
call
jb
adc
adc
imul
mov
lds
aam
(bad)
pop
call
mov
and
movs
sbb
rcr
xor
mov
dec
push
aad
mov
cmp
(bad)
cmp
shl
dec
(bad)
outs
sar
and
xchg
(bad)
mov
xchg
cmp
mov
movs
mov
ds
sub
cwde
nop
es
inc
pop
sub
ret
xchg
jmp
xchg
inc
retfw
mov
or
aaa
not
loop
hlt
imul
cmp
sbb
sub
jbe
into
xchg
leave
js
lods
add
sub
jecxz
push
cmps
or
sub
mov
push
mov
iret
add
ins
iret
(bad)
js
icebp
popf
scas
sub
push
stos
inc
and
mov
add
sbb
jmp
pop
hlt
daa
sahf
xchg
adc
push
dec
gs
retf
jne
scas
popa
popa
push
adc
xchg
je
add
jecxz
int3
jle
adc
push
cwde
jg
test
pop
daa
and
jmp
sbb
aas
inc
and
inc
shl
push
ja
mov
scas
mov
inc
fisubr
push
in
fild
add
shl
fdiv
call
push
dec
ror
fidivr
xchg
aaa
mov
sbb
arpl
mov
inc
mov
or
jae
inc
jo
mov
outs
sahf
ja
cdq
mov
mov
out
fdiv
ins
mov
(bad)
in
int
popa
and
or
int
lods
xor
xchg
out
or
je
(bad)
mov
mov
add
fwait
(bad)
aas
retf
jnp
add
std
in
dec
mov
movaps
sub
aam
xchg
stos
jg
push
mov
test
add
push
movs
push
scas
rol
mov
test
jne
test
clc
data16
into
sub
int3
rol
ds
stos
fmul
and
jp
mov
pop
int3
and
xor
jmp
mov
lods
call
push
pop
mov
rcr
aam
and
vmovsd
xchg
or
sti
outs
dec
xchg
loop
das
adc
cwde
push
cmp
arpl
mov
pop
and
fsub
dec
xlat
lock
lahf
xchg
add
icebp
xor
sbb
jns
fdivr
add
clc
lock
mov
in
repz
push
fmul
sbb
std
mov
ret
std
sbb
jae
or
retf
mov
mov
sbb
adc
cmp
fmul
xor
pop
push
push
xor
mov
add
xchg
shl
xchg
fs
movs
sbb
jo
outs
push
xchg
les
js
movs
sbb
in
into
xor
mov
xor
pop
cmp
and
push
push
mov
mov
nop
add
dec
lds
xchg
xchg
mov
data16
pop
jp
xor
fild
scas
(bad)
addr16
xchg
xchg
or
inc
lock
push
dec
jmp
mov
sbb
jmp
shl
enter
mov
mov
lods
cld
push
add
push
dec
arpl
pop
lahf
ja
or
push
fnstcw
scas
scas
mov
inc
popa
call
rcl
dec
xchg
mov
fld
jb
mov
sbb
out
and
test
jmp
mov
(bad)
mov
sub
idiv
fcomp
pop
leave
add
cmp
sub
adc
push
or
xor
data16
ds
ret
ficom
aaa
cmp
gs
lods
xchg
push
std
imul
jno
sti
lds
inc
fs
xor
stos
mov
cwde
jge
repz
into
cmp
ss
push
xchg
ins
or
into
ror
ss
loop
stos
mov
stc
mov
int
dec
retf
aam
in
sub
cs
cmc
cmp
sbb
inc
shr
jae
in
mov
dec
mov
(bad)
repnz
or
inc
xor
int
scas
inc
cmp
retf
mov
ins
aas
cdq
sub
stos
xor
adc
dec
rcl
xchg
jmp
sub
call
pusha
push
dec
jnp
add
mov
daa
je
cwde
or
add
repz
cld
mov
or
mov
push
push
pop
and
cmp
test
mov
adc
lds
add
dec
inc
and
xor
(bad)
mov
cmps
sbb
aaa
stos
sub
cld
outs
pop
push
jmp
xchg
call
add
popf
shr
xchg
imul
dec
mov
mov
loopne
ins
(bad)
icebp
scas
les
loope
mov
loopne
scas
loopne
inc
scas
xor
fimul
xchg
mov
mov
and
imul
mov
mov
inc
mov
arpl
imul
fisubr
popa
mov
mov
sub
cmc
jecxz
add
inc
das
outs
nop
jle
inc
inc
in
int3
mov
jne
pop
pop
loopne
xchg
fs
cmp
lahf
nop
out
mov
retf
pop
and
stos
int
cs
test
xchg
outs
imul
pusha
jo
into
mov
mov
sbb
dec
mov
sub
sub
or
icebp
imul
xchg
loop
push
out
push
vmovupd
mov
dec
stc
and
push
shl
push
sti
add
out
inc
out
popa
xchg
lahf
xor
push
imul
or
ficom
cmp
sbb
dec
loope
sbb
push
jg
jl
icebp
jmp
addr16
lea
retf
imul
sub
mov
jge
xor
push
mov
out
xor
fcmovnb
(bad)
in
mov
lea
gs
clc
imul
xchg
cmp
aaa
out
in
push
sbb
mov
das
daa
sub
and
push
push
adc
ja
repnz
(bad)
sbb
inc
sub
aaa
jmp
int
stc
jmp
inc
imul
fimul
adc
add
shr
adc
jns
or
inc
dec
push
(bad)
sti
or
mov
loop
push
cmp
adc
jo
retf
fisub
adc
mov
push
xchg
xchg
xor
mov
pop
stc
lahf
popa
test
movs
inc
das
jl
icebp
lods
or
cdq
or
add
adc
xor
adc
pop
push
pusha
dec
stc
int3
pop
add
adc
cld
xor
aam
aad
inc
pushf
jecxz
icebp
sub
int
inc
arpl
mov
adc
aas
and
aaa
(bad)
popa
or
xor
sti
pop
and
or
iret
bound
cmps
dec
push
fisubr
adc
jmp
sub
adc
ret
mov
cli
shl
cmp
sbb
mov
fldenv
mov
push
xor
pop
ret
(bad)
cdq
adc
xchg
div
xchg
(bad)
stos
xchg
add
hlt
cmps
or
push
pop
test
ins
bound
mov
ficom
cmps
jecxz
clc
and
in
push
not
mov
and
stos
fmul
pop
mov
mov
jne
sub
inc
and
cs
mov
xor
mov
jns
add
push
cmps
sub
cmp
cmp
leave
je
daa
jne
fidivr
cli
aas
bound
add
(bad)
jns
xchg
add
(bad)
sysenter
ficomp
pop
inc
inc
mov
xor
call
jno
lahf
adc
test
cmc
je
out
into
fld
or
test
xchg
jb
stc
ret
sar
ds
clc
jg
add
test
js
in
loopne
fist
xlat
or
push
sub
fild
imul
mov
cmp
pushf
(bad)
dec
mov
dec
mov
sbb
fwait
pop
popf
jmp
fadd
or
aas
retf
jb
lods
sub
jo
cmps
add
push
nop
std
(bad)
xchg
or
xlat
div
fwait
imul
scas
inc
enter
das
test
out
jne
mov
cmp
lock
and
mov
xor
and
mov
push
cwde
jnp
iret
out
repnz
xchg
and
sub
cmps
shl
or
dec
push
xor
mov
xchg
not
mov
dec
lock
sub
fld
test
stos
or
or
cmc
xchg
mov
jl
jge
(bad)
adc
fwait
imul
pop
(bad)
lea
xor
add
mov
hlt
xchg
jb
sti
imul
cmp
jg
mov
mov
inc
cmp
je
in
adc
imul
mov
outs
fdivr
dec
lea
lea
fcmove
adc
into
mov
mov
mov
sbb
sbb
in
sbb
cli
mov
sti
ins
mov
pop
cmp
mov
cmc
cmps
(bad)
loop
and
lods
test
lods
or
jne
mov
push
or
pavgb
imul
mov
dec
and
mul
shr
pop
add
shl
mov
cmp
pop
sbb
fst
mov
sub
push
push
aaa
mov
xor
jg
(bad)
pop
jbe
daa
stc
ficomp
push
out
smsw
xor
adc
add
xchg
loopne
repnz
outs
push
sar
(bad)
push
js
cmps
dec
push
cmp
dec
(bad)
cld
aad
outs
xchg
jbe
mov
dec
sub
inc
xchg
jno
cmp
loopne
xor
add
sub
ja
xor
fisubr
pusha
lea
mov
mov
sbb
inc
add
stos
mov
mov
ja
push
jo
dec
into
popa
push
jmp
or
icebp
scas
test
repz
or
in
jle
pop
leave
shl
or
mov
dec
aaa
mov
add
adc
out
call
into
and
lods
cdq
clc
mov
cdq
adc
leave
mov
loop
sub
enter
mov
rcl
(bad)
sub
jmp
inc
jmp
mov
shl
outs
mov
jecxz
mov
pusha
sbb
pop
and
dec
iret
pop
(bad)
mov
jbe
popa
sbb
push
repnz
mov
sti
aad
mov
or
sbb
mov
sbb
jnp
sar
cmp
mov
jge
pop
daa
out
repz
mov
push
sub
imul
mov
scas
adc
pop
dec
daa
mov
mov
inc
pop
stos
popa
adc
add
les
sbb
dec
adc
push
fsincos
(bad)
or
imul
nop
sbb
push
scas
es
add
ret
addr16
jb
pop
js
repz
into
sar
arpl
pop
ret
es
aad
xchg
retf
pop
inc
sbb
and
jmp
in
pop
test
push
and
and
adc
mov
stos
sti
pcmpeqb
sahf
jmp
push
mov
leave
push
mov
xchg
xchg
push
push
push
mov
sub
cmps
cmps
mov
addr16
pop
sub
and
mov
mov
ss
ret
imul
push
jmp
or
jo
pop
sub
cli
jb
xor
mov
rcr
mov
cmp
es
xchg
daa
mov
iret
dec
test
and
(bad)
jmp
inc
out
mov
push
xor
ja
sub
push
mov
out
inc
adc
or
mov
cmp
xor
dec
jnp
dec
pop
jl
xchg
jnp
in
mov
sti
cli
and
push
les
ins
out
dec
cmp
and
data16
(bad)
ror
mov
out
pop
data16
push
sub
inc
ins
cmp
xchg
sbb
or
dec
sub
pop
outs
mov
shl
pop
out
inc
popf
lock
mov
mov
push
mov
pushf
pop
retf
aam
cwde
lods
pop
or
enter
or
pop
call
cmc
and
jg
cli
stos
cld
fistp
xchg
adc
fstp
xor
cmp
inc
sbb
jo
(bad)
jbe
sub
pop
xchg
mov
and
cmc
jb
pop
stos
mov
sub
inc
icebp
inc
mov
outs
test
popa
xchg
movs
sahf
ret
into
xchg
nop
push
fmul
sub
cmp
pop
out
(bad)
pop
outs
or
test
jl
mov
scas
cld
ss
pop
adc
add
inc
scas
pop
mov
cmp
or
add
mov
mov
pusha
sbb
repz
fs
lods
loope
add
or
push
or
jae
fxch
jns
jl
dec
ret
cmc
in
(bad)
js
jbe
add
and
sbb
leave
(bad)
leave
xor
(bad)
and
sbb
cmps
das
pop
pop
ret
shr
push
push
enter
outs
push
mov
dec
or
in
pop
lock
jne
loop
add
mov
rcl
jns
sbb
les
(bad)
shl
mov
outs
xor
mov
or
add
fisub
shr
inc
in
mov
(bad)
xor
xchg
mov
das
cmp
stc
inc
es
or
add
in
test
mov
pop
xchg
in
jae
xor
adc
dec
mov
inc
ret
test
outs
pop
ror
xor
add
js
inc
mov
add
xor
iret
and
mov
dec
mov
sbb
jg
jne
mov
inc
adc
jno
push
vpaddusw
mov
(bad)
mov
xor
jge
test
out
out
lea
and
xchg
inc
jg
add
in
or
in
adc
adc
mov
into
jo
sub
mov
cmps
cmp
cli
push
or
cwde
mul
adc
imul
aam
sbb
or
imul
push
das
adc
shr
repz
stc
sub
sahf
jmp
cmp
les
dec
xchg
inc
dec
dec
mov
dec
(bad)
xor
jp
push
(bad)
push
push
mov
loop
daa
pop
cld
adc
ret
sub
adc
fs
clc
imul
repnz
aad
movs
cmp
repz
or
jns
fild
fiadd
scas
(bad)
shr
test
pop
and
enter
jmp
add
mov
pushf
test
fdiv
xchg
mov
push
lods
or
adc
fmul
or
mov
stc
xlat
dec
cli
sbb
jmp
mov
push
add
pop
ja
jns
gs
and
(bad)
and
sub
jb
sbb
imul
pop
(bad)
cmp
jle
dec
scas
scas
pusha
or
cmps
(bad)
ror
mov
mov
mov
dec
xor
dec
cmp
dec
js
xchg
or
jae
imul
and
leave
jg
int
jg
push
test
fnstsw
pop
pop
sub
sub
out
jns
jns
scas
jmp
mov
stos
mov
mov
adc
movs
loope
xor
xor
xchg
pop
mov
mov
mov
ss
fmul
outs
and
inc
adc
addr16
out
ins
stc
shr
rcl
pop
bound
xchg
xlat
xchg
dec
sbb
mov
fcomp
cmp
test
pop
mov
scas
mov
mov
(bad)
xchg
mov
arpl
repnz
xchg
iret
imul
ds
stos
outs
push
je
outs
das
lods
lds
hlt
test
mov
mov
jo
retf
lea
cmps
jmp
movs
dec
loopne
retf
inc
shr
fwait
push
test
retf
arpl
mov
add
push
and
nop
je
lods
sbb
ret
or
lds
stos
cmp
movs
arpl
pusha
in
push
(bad)
enter
jmp
jle
push
adc
add
xchg
xchg
inc
(bad)
pop
sbb
pop
adc
jmp
outs
mov
mov
sub
pusha
push
sub
sar
call
push
mov
push
add
xchg
cmp
jns
(bad)
cmps
nop
or
adc
loop
jge
dec
fisttp
jns
out
aam
movs
ja
and
dec
jbe
mov
call
jg
xchg
fstp
jne
out
push
mov
and
scas
and
retf
ss
add
mov
pop
jae
test
pop
pop
inc
jb
out
ret
js
retf
lea
cwde
shl
ins
shl
add
push
dec
pop
push
cmp
cdq
imul
sahf
daa
loopne
and
and
pop
and
push
dec
push
jno
inc
fdiv
hlt
std
sar
fcmovu
out
bound
movs
inc
test
jb
xchg
sub
fwait
push
div
jp
repnz
dec
aad
hlt
mov
ficom
inc
ja
test
popf
popf
pop
es
test
dec
std
jbe
mov
shl
add
stos
lods
xor
mov
push
xor
jns
in
rcl
sbb
test
cmp
pop
adc
loopne
ja
mov
std
nop
dec
jmp
das
jbe
fimul
sub
ret
pop
add
or
jne
repnz
inc
adc
shr
mov
jns
dec
jmp
sub
inc
mov
adc
sbb
adc
xor
xchg
pushf
cmp
dec
add
xchg
rcr
or
retf
add
mov
mov
sar
xor
inc
ffreep
fwait
sbb
add
xor
cmp
add
lds
ror
popf
int3
lds
shr
cli
ins
popf
sahf
jo
cmps
fisub
test
mov
and
gs
loopne
pop
jne
cmp
cmp
cmps
retf
addr16
sti
pop
jle
bound
div
mov
jmp
jno
and
stc
lds
xor
mov
add
sub
jmp
jmp
out
dec
addr16
lea
pop
pop
das
ror
inc
jo
fbld
xor
icebp
call
stos
fiadd
xchg
dec
or
mov
mov
cmps
sbb
fistp
push
(bad)
push
rol
mov
jns
or
cdq
into
jno
repz
and
int3
sbb
ins
cmp
add
ficom
pop
data16
retf
push
xor
mov
jae
stos
or
fcmovu
push
xor
mov
retf
push
movs
imul
pop
mov
mov
xchg
jo
push
mov
lea
inc
scas
jecxz
dec
lods
mov
and
jecxz
pop
sub
adc
cmps
mov
sar
cmps
jl
shr
clc
(bad)
jns
fs
fcomp
cmp
test
xor
mov
mov
or
push
cmp
daa
loope
fcomp
pushf
js
fcom
fdivr
addr16
es
repz
dec
cdq
rep
mov
pop
and
cmc
and
rol
xor
inc
lods
push
add
pop
add
jb
adc
in
cmp
mov
lahf
jp
dec
mov
icebp
imul
in
scas
call
lods
jg
add
mov
push
(bad)
push
arpl
shl
inc
div
fs
push
(bad)
mov
pop
call
mov
shl
(bad)
jmp
nop
xor
leave
xchg
icebp
and
das
int
bound
push
fstp
repnz
leave
jb
fld
cdq
repz
ins
rol
mov
and
and
in
mov
and
push
out
pop
ins
ins
movs
xor
(bad)
iret
in
jmp
mov
mov
push
pop
inc
mov
iret
sub
jns
adc
adc
and
and
sub
js
inc
in
sub
ja
push
sbb
push
(bad)
out
pushw
div
adc
mov
setnp
sub
jbe
cmp
cld
es
ror
in
outs
pop
mov
add
push
out
out
fwait
inc
mov
std
mov
imul
mov
test
mov
push
ret
inc
mov
scas
aas
arpl
jle
and
(bad)
xor
mov
pop
retf
ror
test
rol
sti
xchg
(bad)
jno
sub
and
xor
aam
mov
dec
adc
jno
dec
add
xchg
int
ja
mov
xor
icebp
mov
rcr
sbb
or
sbb
jge
mov
mov
push
sub
ja
rcr
xchg
arpl
mov
adc
sbb
shr
inc
cmc
sbb
aas
loopne
jns
push
ins
cmp
jo
jno
or
inc
xchg
movs
mov
dec
dec
imul
push
adc
or
mov
jmp
add
out
jp
cli
mov
popf
and
or
mov
sqrtps
mov
xor
sbb
sbb
cmp
sub
push
adc
push
clc
sbb
pop
ja
ss
mov
jb
xchg
mov
inc
outs
mov
iret
pop
ds
int3
or
push
ss
stos
add
leave
jle
movs
pushf
add
ffreep
pop
mov
(bad)
jecxz
loopne
imul
gs
jg
loop
jno
or
push
inc
sbb
sbb
scas
add
add
mov
loop
vphsubbw
cmps
not
jo
in
lock
mov
(bad)
fcom
in
sub
jae
out
retf
jmp
inc
sub
cdq
imul
and
ret
cmp
out
mov
push
pusha
ja
inc
jb
not
loopne
mov
push
in
fcomp
aam
iret
adc
adc
popf
in
pop
out
add
jno
add
cmp
div
call
push
mov
jmp
int3
rcr
out
neg
repnz
in
jecxz
dec
sbb
(bad)
mov
loop
and
jmp
rcr
int
pop
mov
sub
in
mov
xchg
cmp
scas
mov
cs
add
fucom
adc
xchg
jmp
sub
pop
add
cmp
(bad)
jnp
rcr
sbb
stos
je
xor
and
sub
stc
mov
mov
fimul
mov
call
dec
mov
pop
call
cmc
out
fwait
add
add
mov
inc
ret
lea
ins
xchg
xor
popa
push
popa
mov
push
call
dec
jb
jb
jbe
mov
inc
cmp
add
cmp
icebp
pop
xor
xor
lds
cmp
js
mov
jecxz
mov
dec
ja
out
inc
out
(bad)
and
sti
and
(bad)
add
jle
push
sbb
adc
ss
xor
shr
sbb
mov
xor
mov
imul
mov
inc
imul
out
ss
bndstx
sbb
retf
ret
fldenv
sub
xlat
push
cli
jnp
sbb
rol
cld
sahf
add
sbb
scas
ret
into
or
lds
movs
jecxz
or
and
mov
repnz
dec
cmp
and
dec
lds
mov
dec
xor
ror
xchg
adc
in
sub
js
inc
sbb
xchg
add
pop
push
aaa
lds
cdq
imul
mov
inc
sub
inc
mov
add
push
cld
test
cdq
(bad)
xor
push
adc
es
popa
ja
inc
push
mov
test
imul
sub
cmc
xlat
inc
inc
xchg
jb
and
add
xor
add
inc
pop
ret
and
push
pop
adc
adc
fwait
jo
jmp
inc
mov
or
xlat
loopne
dec
aaa
push
imul
fsubrp
push
movs
push
outs
mov
jg
int
mov
neg
adc
mov
sbb
pop
iret
adc
or
or
arpl
(bad)
push
adc
sub
xor
inc
pop
push
mov
out
cmp
in
mov
xlat
mov
or
out
sub
cmp
jne
push
push
mul
sbb
mov
fwait
mov
jns
pop
aas
sbb
or
inc
daa
ror
(bad)
pop
pop
pop
int
mov
inc
lock
xor
push
jl
ret
jge
call
sbb
pop
jg
push
push
imul
fsub
jmp
jp
repz
sbb
xor
mov
push
mov
scas
inc
cwde
mov
popa
mov
pusha
add
jl
xchg
test
(bad)
mov
inc
mov
cmp
pop
retf
pusha
lds
push
cmp
mov
imul
sbb
imul
out
mov
lods
and
pop
jmp
push
push
test
sti
xchg
sbb
stos
cmp
loop
mov
ja
call
(bad)
je
pop
cmps
mov
and
sub
imul
push
shl
adc
mov
xchg
add
fldenv
iret
add
imul
cmp
fsubr
out
jmp
dec
and
inc
dec
loop
test
add
sti
xchg
loope
repnz
dec
les
jnp
mov
or
aas
xchg
arpl
mov
or
and
jnp
xor
mov
stos
pop
xchg
lods
movs
jle
pop
setbe
js
push
or
movs
pop
daa
ror
in
ins
fcomp
xchg
jae
gs
sub
fist
sbb
mov
inc
jb
jns
mov
add
mov
inc
fld
jp
sub
and
xor
das
cmp
movs
sub
xchg
sub
cli
imul
xchg
xor
jnp
(bad)
pop
std
pop
popf
ret
daa
popa
fwait
xchg
mov
imul
std
cwde
std
outs
ret
clc
imul
(bad)
or
les
aam
mov
dec
sbb
not
mul
inc
xchg
add
fsubr
add
(bad)
ret
jmp
imul
nop
push
pop
inc
and
lds
pop
cmp
fiadd
dec
dec
inc
jg
adc
js
jge
cmp
sub
in
sub
popa
mov
adc
push
pop
and
mov
push
adc
and
or
fwait
and
mov
fadd
lahf
sbb
ins
loop
out
test
mov
cmp
les
pusha
fisttp
mov
pusha
ret
inc
dec
lock
test
jge
push
pop
and
outs
cdq
sbb
push
pop
mov
rcr
dec
loopne
jne
mov
xchg
test
mov
jecxz
push
jmp
fwait
or
enter
cld
jbe
les
add
sub
neg
div
jmp
outs
or
dec
push
jns
daa
add
loope
add
push
into
sahf
mov
add
pop
cdq
sar
xor
mov
jb
push
rcr
ins
pop
out
sbb
mov
push
stos
mov
mov
call
or
pop
mov
je
mov
cmp
and
pop
xor
mov
sub
(bad)
shr
dec
ins
int3
cmp
dec
or
movs
adc
or
das
sbb
cmps
ds
stc
cmp
hlt
mov
outs
in
ins
mov
fadd
xchg
jo
mov
(bad)
fcmovne
clc
jge
jns
pop
pop
inc
sub
mov
dec
pop
stos
int
jae
push
mov
cmp
pop
xor
adc
jne
das
mov
xchg
popa
cmp
enter
test
dec
xchg
xchg
xchg
push
std
mov
pop
jo
lea
sub
iret
pop
and
aaa
fst
sbb
mov
sbb
lods
mov
adc
ret
push
push
or
sub
and
or
mov
sbb
div
aas
cld
dec
dec
das
mov
fisubr
add
mov
cmp
(bad)
cli
mov
xor
jg
sub
xchg
inc
mov
out
rol
mov
mov
fcomp
xchg
xchg
and
sbb
call
enter
gs
xor
mov
and
pusha
dec
ja
push
fstp
pop
sar
cmp
ss
add
mov
pop
inc
loopne
nop
mov
gs
xchg
enter
sub
pop
ins
xchg
setbe
sbb
dec
retf
mov
mov
push
lahf
rol
loope
mov
cs
xlat
scas
dec
cmp
or
xor
outs
(bad)
hlt
out
jns
inc
and
pop
int3
lds
push
test
nop
jmp
in
cmp
jmp
pop
out
in
retf
mov
aam
mov
test
mov
sbb
jl
xchg
mov
xor
and
test
call
mov
aam
lea
mov
adc
dec
and
inc
ja
out
rol
adc
daa
lods
test
push
sahf
js
xor
in
dec
cmp
xchg
enter
xor
cmp
dec
sbb
pop
scas
mov
test
mov
mov
ss
retf
add
xor
fsub
xchg
bound
gs
xlat
std
pop
(bad)
push
call
sub
sub
lods
mov
shl
out
push
xchg
mov
mov
out
push
cmp
mov
std
jp
fbld
adc
jns
cmp
scas
ss
pop
add
mov
and
jp
mov
mov
xchg
pcmpgtb
jns
mov
jmp
into
mov
sub
in
leave
retf
pop
in
sub
pop
ret
bound
fiadd
adc
pusha
and
adc
mov
cmp
xor
add
test
and
(bad)
mov
inc
push
mov
dec
test
jb
das
sub
push
mov
outs
mov
int
xchg
or
xchg
pushf
rep
les
mov
iret
pop
and
cmp
aas
jmp
sub
(bad)
call
or
mov
pusha
mov
and
aad
pushf
inc
adc
stos
push
out
xchg
test
xlat
repnz
fidiv
test
adc
inc
sbb
dec
mov
ss
inc
ffreep
stc
ins
scas
push
mov
xor
jae
jo
dec
inc
ja
inc
or
ss
imul
sub
ins
pop
fmul
lods
jp
dec
retf
data16
dec
in
lds
adc
ret
jae
ror
mov
pop
ss
jae
or
inc
cmc
test
jle
fnstenv
sbb
nop
push
sbb
ds
xor
je
xchg
jno
push
dec
repz
pop
pop
add
or
(bad)
loopne
call
sbb
mov
mov
jle
lods
pop
in
hlt
pop
les
test
inc
scas
cmp
xor
dec
fistp
xor
fstp
(bad)
mov
je
repz
outs
lea
dec
jp
cld
or
pop
lea
dec
mov
fisttp
xchg
cmp
mov
and
int
pop
arpl
push
in
inc
adc
ret
xchg
popf
adc
jnp
mov
inc
sub
mov
xchg
call
retf
dec
inc
ss
leave
sbb
out
dec
enter
scas
or
jl
push
jo
out
and
sti
push
and
dec
jo
mov
scas
jge
fnstenv
scas
sar
fwait
mov
cs
out
add
les
sar
leave
cwde
push
test
push
jbe
cmp
jecxz
pop
xchg
ja
adc
dec
pop
xlat
imul
fistp
add
cmp
movs
push
(bad)
aas
jnp
mov
cdq
out
sub
adc
fwait
cmp
pop
cmps
jecxz
lods
setns
sti
das
jns
mov
fiadd
in
xor
cmp
(bad)
das
xor
adc
dec
push
or
leave
jne
movs
push
push
clc
cld
ss
mov
or
jge
aaa
push
imul
mov
lds
jae
push
or
icebp
mov
mov
add
je
push
or
(bad)
jmp
mov
sub
inc
jle
mov
adc
mov
gs
fld
xchg
ret
push
test
push
movs
jmp
in
mov
(bad)
adc
cmps
pop
lahf
jno
jge
stos
cli
jbe
sub
inc
mov
stos
cmps
inc
nop
loopne
sbb
cwde
pop
sahf
outs
sbb
clc
jbe
sub
pop
aam
(bad)
repz
shr
pmaddwd
push
push
or
nop
inc
push
mov
pop
adc
stc
sbb
stc
xchg
adc
loop
jecxz
fidiv
scas
retf
sub
dec
and
sbb
test
lea
(bad)
add
xchg
mov
cmp
adc
push
mov
mov
(bad)
mov
mov
xchg
es
sub
stos
mov
jp
daa
adc
pushf
bnd
xchg
xor
mov
xchg
into
pop
fsubr
retf
xchg
mov
test
in
xchg
push
push
xchg
inc
les
loopne
in
add
sbb
imul
(bad)
daa
aad
sub
push
pop
cli
sbb
call
xchg
mov
bound
lods
je
ss
xchg
aaa
inc
loope
mov
repnz
mov
pop
daa
pop
in
xchg
leave
ds
(bad)
mov
fdiv
std
cmp
jno
adc
pop
iret
loope
xchg
fidivr
test
sub
and
fadd
pop
cs
or
add
in
vcmpps
in
jecxz
mov
cmp
aaa
ja
inc
clc
vpaddw
(bad)
push
inc
mov
and
mov
and
adc
fisub
mov
sub
push
aad
pop
shl
les
jnp
pop
mov
mov
or
mov
mov
xor
push
ror
inc
das
(bad)
mov
cs
inc
pop
dec
stc
mov
push
sbb
cmps
sub
dec
rol
push
xor
cmps
cmp
adc
push
repz
pop
sub
lock
fsubr
jmp
test
shl
pop
ins
jle
mov
repnz
sbb
pop
lds
cli
cld
es
dec
out
jmp
(bad)
jne
adc
push
test
mov
jno
gs
enter
xor
cs
xor
xor
xor
or
xchg
in
(bad)
fadd
dec
cmps
sub
aam
dec
imul
repz
aad
mov
jecxz
popf
pushf
iret
xor
js
or
jg
add
mov
pop
and
in
xchg
push
into
jp
popf
lods
aas
pop
inc
into
loopne
push
pop
out
or
repz
cmp
or
adc
out
loope
js
sti
out
xchg
out
mov
faddp
jmp
cmp
pushf
in
movs
and
xor
dec
xchg
sub
jbe
aad
mov
dec
das
outs
pushf
fwait
jae
mov
mov
or
pop
lea
nop
adc
sbb
dec
mov
pop
out
pop
loope
sub
mov
xor
call
add
push
jns
mov
repz
out
add
in
xlat
add
mov
jge
daa
retf
loop
adc
fidiv
cmp
stos
push
rol
jae
iret
add
mov
cmp
dec
in
mov
adc
ds
test
inc
mov
add
add
imul
inc
dec
test
mov
fs
pop
xchg
or
bound
xchg
sahf
cmps
rcr
loope
cmp
aas
and
or
jmp
mov
out
xor
and
jecxz
push
cld
inc
push
lods
dec
leave
sub
cwde
xor
pop
or
call
jne
mov
mov
inc
add
fs
cdq
pop
lods
fild
sti
ins
(bad)
sub
addr16
mov
test
mov
imul
cmp
fnstsw
mov
out
out
cs
pushw
test
prefetch
or
fs
out
lea
scas
popa
bound
sub
retf
xor
dec
xor
adc
xchg
shr
dec
jmp
push
xchg
cmp
fsubp
es
data16
xor
arpl
adc
mov
pop
push
lods
scas
mov
jmp
aaa
repz
xchg
repz
mov
xor
neg
jmp
dec
arpl
adc
xor
pop
inc
dec
call
sub
movs
je
test
sar
call
in
mov
or
cs
xchg
stos
gs
push
jle
push
sbb
retf
inc
inc
int
pop
ss
hlt
and
and
push
dec
inc
mov
mov
or
and
fsubp
mov
sar
mov
popf
je
adc
je
mov
enter
xor
fbld
idiv
xlat
cmc
sub
pushf
adc
or
mov
jmp
xor
xor
or
sahf
pop
add
stos
mov
(bad)
sbb
int3
xchg
loopne
and
lock
pop
shl
daa
in
cmps
push
iret
(bad)
sub
jl
out
adc
pop
shl
and
xchg
lods
lods
or
and
and
iret
das
mov
cdq
xchg
adc
std
aad
call
mov
add
mov
or
outs
dec
mov
mov
adc
jno
fcomp
sub
lods
gs
call
cmp
in
mov
jg
mov
div
in
add
leave
arpl
js
pop
adc
add
xchg
aam
mov
mov
fist
sahf
pop
push
inc
inc
mov
jmp
xchg
jb
sub
fnstcw
or
std
lahf
mov
fwait
xchg
(bad)
in
rcr
int
inc
outs
jle
pop
push
mov
sub
test
into
mov
int3
xchg
cdq
in
and
add
sub
mov
dec
mov
rcl
ficomp
mov
daa
sbb
sbb
popf
pop
frstor
sub
inc
adc
cmp
adc
imul
xchg
mov
and
imul
call
sbb
mov
sbb
(bad)
pop
ret
jo
lods
dec
jg
stc
imul
imul
jns
inc
pop
xor
dec
jnp
dec
shl
inc
ret
push
pushf
or
xor
dec
out
xchg
cmps
leave
popa
jmp
rol
aas
bound
popa
loope
cmp
test
(bad)
or
dec
sub
jecxz
aas
shr
pop
xor
pop
cmps
pop
xchg
and
pop
stos
popa
push
call
and
mov
scas
lea
into
or
pusha
js
xlat
mov
sub
ss
in
mov
jo
jb
add
movs
jmp
jae
in
ins
sub
adc
in
out
adc
pop
in
xlat
cmps
and
adc
xchg
sub
pop
push
loope
lock
and
mov
pop
jmp
cmp
sub
or
mov
push
or
jp
sbb
aas
cmp
ror
imul
loope
xor
inc
mov
xchg
scas
ins
push
jno
xor
push
jp
cdq
(bad)
jnp
push
push
(bad)
call
clc
jmp
fist
mov
or
loope
fdivr
cmp
adc
icebp
ins
int3
outs
mov
xor
mov
mov
cmp
lahf
imul
addr16
mov
int
xor
shl
loop
pop
xchg
mul
cli
pop
shl
jecxz
cmp
or
mov
add
in
fnstenv
lods
retf
pop
cmp
or
or
out
lods
pop
test
and
inc
cmp
imul
sbb
and
aas
stos
or
push
sbb
and
pop
cdq
popf
fs
fwait
daa
movs
sar
jne
and
retf
fistp
xor
jo
call
cwde
cld
sbb
mov
push
jge
fist
adc
icebp
ds
dec
or
add
cmc
push
data16
pushf
fst
xchg
cli
adc
scas
repz
push
xchg
cmp
fist
pop
xor
push
or
out
adc
div
push
fidivr
icebp
popf
sbb
or
outs
cmps
sub
cdq
int3
jmp
(bad)
cld
cwde
leave
mov
xlat
in
jne
xchg
inc
adc
bsf
push
push
jge
xchg
enter
mov
push
xor
add
dec
jns
sub
int3
adc
fcom
shl
jecxz
cdq
mov
test
jmp
nop
ss
lock
pushf
in
xlat
inc
aam
push
push
push
xchg
jmp
lahf
xor
inc
hlt
test
sub
dec
mov
mov
ins
jo
cdq
fist
sahf
in
xchg
jl
push
add
out
jb
loop
ror
ret
jmp
pop
dec
cmp
jmp
leave
enter
pusha
xchg
mov
or
push
dec
jbe
imul
fild
or
bound
js
push
popa
mov
dec
imul
ret
dec
add
in
jp
popa
gs
movs
sub
shl
mov
inc
mov
jns
stos
loopne
xor
pop
xor
retf
icebp
cmp
loopne
popa
inc
ficom
dec
jnp
mov
nop
xchg
data16
out
test
mov
test
and
jp
iret
ss
mov
sbb
push
scas
push
ds
mov
ret
fldl2t
mov
xchg
sub
in
ja
hlt
sbb
lds
xchg
call
out
push
pop
jg
ror
jno
into
cli
sbb
hlt
fdiv
into
cs
cmp
sub
sbb
movs
je
push
or
mov
daa
ins
xor
sar
loop
aas
fsub
jae
lds
mov
test
pop
loop
pop
(bad)
retf
call
ret
inc
dec
into
das
sbb
push
or
cli
pop
adc
into
push
lea
js
js
neg
xchg
ds
lods
outs
mov
jg
xor
pop
(bad)
daa
pop
cmp
sbb
fst
inc
mov
out
gs
or
cdq
adc
outs
test
inc
mov
outs
lds
cmps
les
adc
icebp
mov
push
fcmovne
es
jge
or
bound
and
ret
jp
call
mov
ins
add
imul
sub
addr16
aam
inc
aas
ss
cmps
jecxz
je
(bad)
into
(bad)
test
and
out
hlt
jmp
cmc
aaa
fisub
mov
and
dec
mov
sbb
not
cdq
push
xlat
mov
xor
or
sub
mov
jle
(bad)
inc
xor
data16
sti
out
pop
es
sbb
mov
mov
ficomp
cmp
shr
(bad)
fwait
in
inc
neg
xlat
sub
push
mov
and
add
sahf
mov
mov
mov
int3
stos
jns
test
sub
and
and
(bad)
cmc
scas
data16
cmp
rcl
pop
rol
xchg
daa
push
cmp
rcr
(bad)
jge
cs
push
fwait
jg
mov
xor
inc
push
out
jo
test
pop
lods
imul
add
pop
and
sub
xchg
sbb
jge
mov
inc
cmp
or
aam
adc
lods
les
sub
xor
imul
inc
sbb
push
inc
out
jl
adc
fild
jg
enter
mov
cwde
or
sbb
cwde
sbb
mov
call
inc
js
test
outs
sbb
xchg
jl
sub
repnz
jl
add
cmp
jne
jo
xor
dec
shr
lods
and
sahf
mov
inc
pop
xchg
std
inc
add
adc
pop
mov
fistp
fimul
push
inc
(bad)
out
cmc
pop
xor
sub
pusha
mov
jnp
sub
or
(bad)
add
push
mov
fsubr
cdq
sub
test
rcl
lds
add
repnz
scas
jp
das
rcl
or
mov
xchg
push
xchg
das
leave
iret
xor
popf
jl
xlat
addr16
nop
xchg
fs
pop
mov
ret
adc
jg
ds
mov
call
cmc
mov
ror
push
stc
lock
push
ret
popf
push
imul
or
push
(bad)
out
arpl
fisub
sbb
outs
sahf
arpl
ret
sbb
add
ins
xchg
imul
sbb
dec
nop
outs
xchg
xchg
dec
popf
mov
dec
iret
(bad)
jle
ror
and
in
mov
jnp
adc
mov
ja
inc
data16
push
imul
xor
mov
xor
jle
pop
dec
daa
in
aad
or
clc
icebp
cmp
cld
in
cmps
mov
adc
inc
fcom
inc
xchg
sbb
loope
or
xlat
fcom
nop
xchg
sbb
dec
pusha
mov
inc
inc
loopne
jb
or
dec
inc
xchg
and
fcmove
sar
push
fwait
mov
imul
or
adc
inc
cmp
ret
out
ja
mov
cdq
call
in
xor
pusha
inc
mov
adc
dec
ffreep
sub
push
test
sar
cmp
mov
adc
call
pop
in
sar
adc
sbb
mov
mov
mov
sbb
lahf
fdivp
sti
pop
ja
mov
out
jmp
jp
sub
enter
inc
aaa
push
in
mov
jmp
sbb
popf
xchg
and
jg
popa
push
int3
jp
xchg
sti
jnp
lock
sbb
test
into
adc
in
or
cwde
and
es
popa
js
je
jbe
in
cmp
mov
cs
push
pop
add
in
out
enter
pop
ficomp
adc
push
push
xchg
add
cmps
mov
pop
sbb
mov
sub
and
aad
fild
adc
mov
pop
lods
in
pop
xor
mov
(bad)
sahf
jo
js
fcom
call
int3
mov
jae
xchg
idiv
jmp
adc
push
mov
mov
and
nop
push
loope
fisttp
inc
xor
mov
pop
clc
daa
in
jno
pop
mov
(bad)
or
cli
retf
cmp
imul
add
xchg
ds
push
xchg
or
fnstenv
adc
test
aam
bound
jnp
bound
cmc
jle
rcr
ror
or
fidivr
dec
jb
loope
jno
sbb
sub
sbb
icebp
mov
loope
icebp
xchg
pop
lahf
mov
or
cmps
jecxz
(bad)
fnstsw
fidivr
out
retf
into
movs
xor
stc
push
arpl
xor
cs
xchg
push
sub
lods
pop
js
mov
cli
add
jle
xchg
dec
mov
out
or
sub
out
xchg
movs
mov
pcmpeqw
jl
jae
int
out
xchg
jae
mov
lods
ins
mov
(bad)
inc
mov
push
push
pop
fadd
fcomp
mov
rcl
push
push
jmp
inc
sbb
jl
mov
jno
mov
sub
inc
call
retf
xlat
adc
test
xchg
bsr
xor
clc
add
dec
mov
and
xchg
and
retf
inc
cmp
cwde
std
pop
rol
loopne
into
ss
inc
jl
stos
xchg
or
cwde
inc
cmp
jle
test
or
add
test
aas
pop
and
sub
or
cmp
fwait
in
push
stos
xchg
fldenv
jmp
mov
cld
pushf
cli
dec
cmp
xchg
jmp
cmp
repz
sub
fwait
mov
(bad)
aam
popa
and
addr16
(bad)
pushf
xchg
push
test
cli
movs
mov
fcomp
dec
mov
inc
sar
out
pop
sub
cmc
adc
inc
std
(bad)
retf
lock
iret
mov
loopne
push
xchg
sbb
adc
retf
jmp
xlat
jmp
or
jl
push
push
add
dec
push
aad
cmp
cmp
xchg
pop
sub
cmp
push
adc
leave
fiadd
jge
xor
lahf
xchg
xchg
cmp
shr
cmp
das
push
ror
mov
add
pop
and
mov
mov
jg
arpl
sbb
popa
loope
outs
stc
gs
mov
sub
sbb
rcr
enter
loope
pop
jg
icebp
adc
stos
jle
mov
scas
pop
xor
mov
mov
and
add
sub
push
mov
jmp
jmp
jmp
mov
icebp
(bad)
scas
jb
jo
jbe
mov
pop
jbe
mov
cmp
pushf
cs
ret
xor
leave
inc
xor
and
xchg
mov
sbb
sub
push
xchg
xor
fsub
sti
add
(bad)
movs
aam
scas
gs
ss
sub
enter
arpl
ins
(bad)
push
and
xchg
imul
ins
nop
push
pop
mov
lds
add
pop
mov
mov
sar
gs
out
pop
sbb
sbb
(bad)
movq
(bad)
push
aas
aaa
scas
inc
(bad)
sub
stc
jle
mov
in
ins
push
rcl
mov
cmp
xor
(bad)
test
rcr
pop
pop
scas
mov
js
data16
aad
push
out
dec
nop
rcl
push
mov
sub
lock
mov
jb
daa
lds
push
clc
imul
imul
adc
dec
stc
imul
pop
mov
test
ins
lds
popa
add
add
cdq
call
or
call
xchg
jne
int
stos
je
cli
std
ins
movs
popa
ret
cmps
repnz
into
clc
movzx
test
pop
push
leave
jae
pop
xor
sub
mov
test
push
(bad)
xchg
out
mov
cwde
push
sub
cmps
imul
cs
inc
or
mov
xchg
cdq
fptan
enter
cmp
xor
pop
clc
int
mov
in
cmp
sbb
pop
or
retf
das
loopne
cmc
hlt
fstp
not
aas
cmps
pop
mov
in
add
icebp
mov
push
mov
pop
sahf
add
(bad)
xor
or
out
call
dec
push
dec
adc
retf
into
std
xchg
test
sti
push
(bad)
and
mov
adc
int3
clc
test
jg
dec
imul
add
shl
fnstenv
movs
mov
stos
cmp
repnz
push
jns
sbb
and
sbb
data16
lahf
mov
push
in
pop
cmp
mov
push
ja
les
ret
frstor
jmp
call
inc
inc
inc
mov
repz
add
cli
nop
or
cli
ret
inc
ins
cdq
pop
clc
cmp
sub
adc
pop
xchg
push
cmps
in
idiv
ror
jno
bound
stos
nop
pop
inc
cmp
ja
xchg
repz
repz
push
mov
sti
pop
adc
jno
arpl
out
push
cmp
jmp
or
dec
cmp
mov
daa
adc
leave
call
out
sub
and
rcr
pop
or
outs
adc
inc
fbld
jae
loope
mov
mov
aaa
retf
jecxz
push
ror
in
mov
jnp
loop
(bad)
sbb
stos
call
push
sbb
sti
xor
push
sbb
js
xchg
mov
mov
xor
sub
or
idiv
pop
int3
mov
jecxz
retf
imul
stos
sbb
mov
ins
jns
cmp
pop
adc
(bad)
adc
cmc
scas
cli
jb
or
mov
xchg
xlat
inc
jg
pop
and
fstp
out
int3
(bad)
call
mov
jae
pcmpeqw
(bad)
test
and
pusha
cmps
mov
out
jae
ret
pop
push
pop
and
jno
arpl
sti
imul
das
and
jp
dec
hlt
sub
retf
push
jne
mov
fld
bound
ret
cmps
daa
push
std
hlt
dec
xchg
push
dec
cmp
push
add
shl
shl
and
mov
sbb
leave
cld
pop
mov
cmp
cmc
push
pop
or
in
fcmovnb
test
adc
mov
sub
sbb
cmp
inc
in
popa
dec
adc
pop
bound
cmp
cld
dec
cmp
xor
push
jp
xchg
bound
out
jo
sub
mov
adc
xchg
cwde
add
daa
pop
in
dec
cmp
sub
(bad)
sbb
push
jge
jg
mov
ret
pop
ins
idiv
int3
adc
mov
jnp
or
or
aam
sbb
sbb
lock
bound
dec
adc
pop
mov
dec
(bad)
mov
cwde
sub
(bad)
xchg
aam
pop
pop
repz
push
bound
jle
pop
mov
iret
push
mov
imul
out
cmp
lds
int
stos
inc
or
popf
jbe
es
inc
xchg
dec
shl
sbb
not
mov
call
dec
lahf
movntq
out
ret
sub
pop
out
les
push
sub
jmp
jnp
cmp
mov
xor
or
(bad)
and
(bad)
and
add
aam
enter
push
mov
sbb
lods
inc
dec
sbb
mov
mov
pop
test
neg
hlt
mov
mov
leave
mov
cmps
shl
pop
inc
jmp
inc
into
mov
shl
pop
sub
xchg
sub
jp
xor
pop
adc
clc
fld
push
test
mov
ds
fs
inc
cli
ds
dec
shl
jbe
cmc
mov
xor
popfw
xchg
enter
or
ret
call
push
inc
call
je
lods
sbb
xor
push
and
loopne
cld
clc
xchg
int
push
loop
jl
add
lods
cs
push
out
(bad)
mov
or
inc
mov
push
outs
ds
pop
xchg
sub
gs
inc
and
cmp
ror
cli
add
jmp
fs
mov
scas
push
and
mov
loopne
int3
rcr
push
jmp
adc
cli
(bad)
adc
in
cmp
dec
into
ss
adc
mov
retf
mov
in
stos
add
mov
cli
inc
ins
xchg
push
push
repnz
call
push
popf
dec
movs
jmp
push
jb
adc
push
sar
cmps
jb
lods
je
pop
call
int3
dec
adc
(bad)
js
outs
jae
cmp
in
push
cmp
mov
dec
pop
mov
inc
and
inc
(bad)
jge
div
sub
loop
(bad)
ret
dec
mov
adc
mov
inc
mov
adc
ret
int
xor
mov
lds
test
adc
sar
movs
loop
loope
pop
adc
lods
test
pop
mov
lea
pop
jnp
aam
xor
cmps
aaa
mov
mov
add
fidivr
iret
leave
jno
frstor
cdq
stc
movs
mov
out
inc
cld
call
enter
mov
ror
mov
je
shr
in
movups
repz
imul
aas
(bad)
stc
xchg
test
or
xchg
or
dec
ss
mov
sub
(bad)
dec
adc
xor
jle
mov
jg
mov
into
mov
cli
cwde
cmps
pushf
adc
call
cmp
cld
xchg
sbb
inc
mov
pop
or
in
sbb
adc
push
fdivr
add
mov
jg
movs
setae
and
lods
ficom
into
jne
xchg
aad
fndisi(8087
push
call
stos
and
xor
sahf
in
les
out
in
jge
sbb
aaa
cmc
call
pop
add
cwde
inc
dec
mov
mov
cmp
sbb
ror
xlat
or
(bad)
adc
fdivp
cli
lods
add
pop
je
(bad)
ret
push
dec
call
ja
sub
stos
sbb
ja
aas
mov
jo
call
iret
ins
mov
ret
and
retf
fucomp
sbb
ds
mov
mov
imul
shl
xchg
daa
call
stc
ret
sahf
mov
jecxz
push
lock
ins
nop
std
sub
or
push
loop
push
mov
and
push
bound
jb
out
xbegin
xchg
fmul
jo
icebp
sub
cmp
(bad)
dec
lods
popa
packssdw
bound
jb
test
lock
adc
test
xchg
call
arpl
nop
push
iret
inc
ret
sbb
fwait
test
mov
adc
sbb
fidiv
xchg
cwde
or
lock
lods
mov
cmp
jle
bound
sub
xor
dec
repz
fnstenv
je
mov
test
stos
inc
rcl
(bad)
daa
jmp
scas
cmp
xlat
push
mov
lock
sbb
mov
movs
pop
cmps
sbb
jbe
fdivr
out
clc
jle
or
gs
cmps
cmp
bound
and
inc
aaa
ins
pop
das
mov
loope
mov
mov
loope
and
mov
ja
in
sbb
and
add
sbb
ja
(bad)
das
and
dec
jmp
mov
mov
outs
adc
cmp
pop
jmp
(bad)
xchg
add
inc
call
les
add
mov
adc
popa
xchg
pop
mov
lahf
out
sti
pop
pushf
lds
cmp
pop
leave
popf
test
inc
pop
lds
mov
imul
push
xchg
lds
dec
jae
sbb
sub
in
xchg
fist
data16
aad
push
loopne
sub
mov
mov
cmps
in
out
mov
sbb
sahf
std
mov
mov
adc
add
xchg
xor
pop
inc
adc
out
rcr
mov
or
jno
push
repnz
push
mov
outs
jp
jb
or
mov
cmp
popf
mov
das
cmps
jp
fnsave
mov
push
cmp
(bad)
pusha
add
cmp
in
mov
ret
cmp
out
dec
or
add
ficomp
arpl
aam
push
push
nop
fsubr
ins
js
xor
lahf
retf
seto
stos
adc
sbb
pop
jl
mov
ins
test
stos
rol
xor
sub
pop
loop
into
aam
movs
imul
es
pop
adc
ret
push
jae
sub
dec
out
mov
test
and
lahf
bound
or
adc
sbb
cmps
mov
out
or
sbb
in
xchg
jmp
sbb
inc
adc
rcr
jnp
es
out
adc
pushf
push
add
xor
mov
(bad)
test
sbb
test
push
adc
sbb
xchg
das
test
mov
setbe
(bad)
test
jmp
mov
enter
out
or
cmp
cmp
pop
sar
xchg
sub
mov
xchg
ror
(bad)
mov
aas
jle
push
fcmovne
add
(bad)
fs
pop
mov
fstp
lock
or
or
stos
or
adc
jae
jns
das
xor
xchg
mov
mov
je
(bad)
dec
mov
push
add
jmp
lock
mov
fcmovbe
mov
sub
xchg
bound
add
mov
popf
pop
xchg
das
dec
or
aaa
(bad)
fistp
hlt
jns
xchg
xlat
sbb
hlt
pop
or
jg
push
leave
clc
and
mov
and
pusha
mov
mov
inc
sub
dec
loopne
out
xor
fisub
push
dec
xchg
push
push
or
daa
icebp
ins
add
repz
dec
add
stos
pusha
stos
addr16
es
movs
mov
push
and
js
sbb
mov
ins
lock
stc
cmp
and
mov
shl
jno
dec
repz
adc
pop
retf
cmps
ror
lods
pop
inc
shl
lods
and
push
aas
cmp
sbb
cmp
sbb
gs
dec
ins
mov
mov
js
push
pop
sub
aad
fist
sub
push
sar
xchg
test
push
pop
xchg
mov
pop
out
and
js
jle
fnstsw
xchg
clc
or
inc
xchg
xlat
into
es
mov
int
xchg
imul
xchg
and
jne
retf
jo
push
sbb
dec
inc
lods
pop
popf
jae
mov
push
cwde
inc
in
mul
sub
test
pop
cs
pop
js
pop
jno
std
push
add
mov
add
xor
mov
cmp
xor
(bad)
or
(bad)
pop
mov
jg
adc
fiadd
cmps
cmps
mov
mov
xchg
in
lahf
imul
sar
xchg
retf
mov
pop
popa
pusha
sahf
xor
mov
icebp
clc
ret
or
mov
jecxz
sbb
loop
inc
mov
rol
sbb
hlt
mov
jp
in
mov
call
mov
xchg
mov
mov
dec
scas
int3
sub
sbb
mov
or
dec
push
popa
pop
in
add
scas
outs
xchg
pop
sbb
jmp
sbb
stos
pusha
out
sub
jmp
mov
enter
pop
add
sub
ret
nop
jmp
cmp
not
call
jle
or
cmp
out
mul
out
jmp
fmul
push
cdq
pop
rol
xchg
das
xchg
ss
xlat
xchg
dec
add
pop
cmp
fisubr
jecxz
jno
into
(bad)
sahf
rol
data16
in
cdq
stos
aas
shl
sbb
loope
mov
sbb
xchg
xchg
data16
fbstp
sub
cmp
mov
xchg
daa
outs
repnz
cmp
enter
inc
jo
sti
ins
mov
fild
adc
test
fwait
pop
jmp
xchg
call
mov
enter
sbb
mov
(bad)
js
xlat
jmp
add
xchg
add
cmovns
push
arpl
movs
cmp
inc
fimul
ss
and
call
aad
dec
into
popf
push
pusha
mov
pushf
xor
imul
dec
jl
xchg
cmp
dec
in
xor
push
movs
mov
mov
inc
jl
jmp
fist
mov
jnp
pop
adc
dec
rcl
in
fcom
jb
jno
repz
mov
movs
aam
into
jp
mov
adc
add
cmp
ja
outs
push
or
push
dec
mov
ret
add
pushf
test
into
push
xor
mov
inc
test
stc
or
fistp
xchg
aad
ret
push
ret
adc
mov
xchg
cdq
mov
adc
into
out
xchg
jnp
cmp
push
jns
jg
aas
jge
jmp
or
xchg
jecxz
add
push
jmp
push
movs
jno
cdq
pop
cmc
or
inc
stc
test
adc
(bad)
push
mov
int
mov
and
cwde
inc
ret
in
cmp
push
rcr
or
or
dec
(bad)
mov
adc
iret
mov
lods
call
and
int
pop
mov
clc
cmp
lods
sar
mov
adc
jge
fnsave
mov
sti
aam
xchg
pop
scas
adc
dec
es
sbb
lods
mov
in
fdiv
jbe
xchg
adc
div
scas
mov
add
std
adc
add
or
scas
rol
inc
fsub
xor
loop
icebp
jle
mov
cmp
iret
cwde
out
mov
es
std
call
(bad)
xchg
and
or
ins
push
adc
std
cmps
es
rcr
fmul
nop
in
aam
jbe
retf
lods
jbe
out
loope
mov
pop
dec
mov
shr
sti
fistp
test
push
push
inc
fwait
data16
fbld
aaa
es
imul
out
jo
adc
popf
ins
test
aam
sub
mov
fld
scas
(bad)
int3
push
xor
add
and
daa
pop
ins
mov
adc
ret
popf
fwait
sub
inc
mov
das
(bad)
jmp
cmps
add
faddp
xor
jge
add
loop
repz
push
stc
in
cmp
scas
scas
pushf
push
jl
scas
add
inc
aaa
lea
stc
mov
or
mov
dec
and
cmp
cs
xchg
popw
mov
rol
add
mov
sbb
dec
mov
jo
popf
shl
mov
sti
add
cmc
mov
aam
xchg
fnstsw
mov
(bad)
add
ja
sbb
in
out
xchg
repnz
ins
inc
popa
jns
iret
or
ficomp
mov
std
int3
leave
outs
sbb
pop
sub
test
test
dec
dec
xchg
jbe
(bad)
(bad)
mov
(bad)
fst
sti
jmp
mov
je
inc
imul
or
xor
sub
push
imul
cmp
in
jne
xchg
call
test
rol
add
xchg
dec
loope
fdivr
mov
cli
xchg
jbe
adc
cmp
mov
popa
xor
xor
dec
jbe
inc
popa
mov
push
ds
out
(bad)
and
test
les
jno
jnp
jb
mov
mov
ror
mov
lock
fsub
xor
jle
adc
xor
out
lock
rcl
out
arpl
clc
and
push
lods
cmp
push
sti
outs
inc
ss
lods
cs
aad
mov
cmp
xchg
jne
xchg
mov
(bad)
scas
cmp
cdq
jo
mov
or
es
shl
dec
adc
sbb
xchg
pop
mov
inc
mov
sahf
sbb
jno
test
repnz
pop
inc
test
pop
mov
or
mov
add
cmps
push
shl
mov
jle
jmp
ins
add
mov
jle
je
push
cld
mov
imul
pusha
inc
arpl
push
mov
or
ins
inc
packsswb
mov
scas
das
xchg
sbb
movs
mov
outs
ret
(bad)
xlat
ror
mov
cmps
sub
repz
xor
sti
call
adc
ja
iret
cmps
mov
push
jbe
dec
mov
jno
mov
xchg
fist
into
sti
(bad)
cwde
arpl
push
jle
sbb
outs
mov
lock
outs
fwait
cmp
sti
sbb
mov
ret
not
repz
inc
push
add
mov
sbb
xchg
jb
repz
retf
inc
sahf
call
push
(bad)
sbb
add
je
cmp
push
out
cmc
aaa
add
inc
inc
push
outs
dec
lock
test
jl
lahf
push
xlat
sub
push
push
adc
mov
push
xor
imul
jg
mov
clc
scas
test
movs
sbb
or
ins
jl
sub
out
ds
int
sub
scas
sahf
push
and
mov
lock
mov
jl
sbb
out
xor
mov
sub
movs
cmovg
lock
mov
inc
ss
in
not
xchg
(bad)
fsub
retf
repz
jmp
xor
lahf
pop
ins
mov
mov
and
aaa
add
mov
retf
cmp
xchg
fisttp
jns
shr
iret
or
adc
das
mov
jns
push
pop
cmps
inc
pusha
xor
xchg
icebp
adc
and
repnz
popa
and
aam
sbb
sub
shl
fst
(bad)
jbe
push
cmpxchg
cmp
or
add
fwait
mov
sub
movs
pop
and
lahf
loopne
xchg
sub
xlat
xchg
out
ror
push
push
inc
imul
addr16
rcl
and
hlt
enter
pop
lods
push
dec
shr
sbb
in
and
xor
js
scas
and
xchg
aad
or
push
xchg
loopne
outs
nop
sti
push
jmp
cmps
jmp
pop
jb
xchg
js
push
xor
fmul
add
cmp
push
call
test
push
outs
mov
icebp
fisubr
out
in
mov
imul
push
test
ins
std
xor
pop
out
sub
lods
inc
call
and
aad
add
lea
and
mov
retf
add
or
jecxz
or
sbb
xchg
int3
mov
das
(bad)
or
xchg
(bad)
jmp
cli
psubw
scas
sti
rcr
and
cmp
jl
mov
das
mov
lahf
pushf
and
lods
fsub
push
lea
mov
clc
out
jge
mov
jmp
sbb
int
sbb
movups
push
and
ret
fmul
sub
inc
xchg
dec
std
imul
cmc
dec
mov
shl
push
sub
shl
sub
popa
(bad)
das
(bad)
adc
mov
ret
pop
iret
or
mov
push
mov
das
mov
xchg
jl
push
xchg
cmp
and
in
or
jge
push
xor
mov
iret
and
xor
jbe
ja
ss
lods
int
inc
enter
es
hlt
pop
ficomp
lahf
jne
mov
daa
fsub
stos
adc
sbb
or
(bad)
in
cmps
test
xor
jno
cmc
xor
jecxz
lock
mov
jnp
lods
fidivr
imul
dec
imul
jns
jnp
retf
jns
sbb
xlat
cmp
lods
in
pop
mov
loopne
pop
jns
xlat
mov
xchg
sgdtd
xor
pushf
xchg
cmp
loopne
mov
jg
mov
popa
adc
mov
push
xchg
jl
outs
rcr
xor
pusha
mov
pop
and
aaa
loope
pusha
lods
adc
fs
mov
(bad)
call
mov
mov
stos
xor
in
xchg
mov
int
sbb
(bad)
push
popf
jecxz
mov
fdivr
xor
stos
fnsave
adc
and
and
dec
shl
push
ja
adc
push
adc
jb
sbb
jmp
(bad)
cmp
loop
pop
mov
fst
int3
push
bound
out
pushf
test
neg
and
push
mov
xchg
arpl
clc
adc
in
pminsw
les
push
iret
and
xchg
dec
xor
jmp
fidiv
adc
loop
push
ss
pop
into
push
xchg
jb
mov
cmp
fist
mov
leave
sub
je
jmp
mov
mov
xchg
push
call
out
or
call
mov
adc
inc
jle
fidiv
loopne
test
out
push
xchg
call
in
push
xchg
xor
das
leave
and
jl
mov
sar
pop
sti
mov
xchg
inc
data16
daa
out
not
jl
outs
loope
ins
ins
cmps
sbb
aas
inc
push
pop
push
sub
jmp
ret
or
sbb
loope
sbb
jge
cld
or
mov
xor
test
cdq
mov
imul
mov
adc
push
mov
mov
cmps
fisubr
jg
push
pop
ret
cmp
mov
and
(bad)
sbb
mov
adc
mov
imul
rol
mov
adc
and
adc
push
rcl
mov
cmp
mov
cmp
cmps
shl
push
jno
inc
ins
jne
rol
xor
gs
mov
push
jae
xor
sbb
pop
mov
jae
fsub
xchg
xchg
js
out
dec
sbb
dec
sub
shr
jmp
mov
push
dec
pop
sub
push
mov
mov
xor
cmp
push
sahf
movs
aaa
int3
mov
dec
cmp
setp
ror
mov
test
xor
loop
data16
(bad)
cmps
inc
push
(bad)
push
test
mov
xchg
push
inc
pop
ss
pop
push
call
ret
or
mov
xchg
push
mov
iret
imul
sub
xchg
mov
and
hlt
pop
inc
into
cwde
cmp
pop
xchg
or
jnp
sub
inc
push
adc
sub
pop
add
into
out
int3
mov
adc
(bad)
mov
cmp
leave
add
inc
mov
popa
shl
cmp
scas
jbe
cmp
mov
xlat
adc
retf
or
ins
dec
in
and
xchg
cwde
fwait
es
xor
sbb
lea
outs
lahf
aam
in
mov
and
push
dec
movs
fnstenv
jbe
mov
and
rol
jmp
shl
sub
arpl
iret
popf
cmp
fcomp
call
dec
cmps
xor
ror
ficom
cli
stc
adc
leave
sub
mov
outs
lds
dec
imul
jg
test
sbb
jns
inc
push
lock
mov
cmp
or
loopne
rol
add
movs
das
loop
inc
leave
lods
dec
push
fnsave
pop
ins
into
add
fdivr
xchg
(bad)
retf
mov
sbb
ftst
and
outs
sahf
test
lds
call
xor
xor
rol
pop
xchg
not
adc
xchg
mov
fbstp
inc
sbb
test
jmp
pop
add
xor
jns
jbe
cmp
leave
icebp
dec
cld
add
jg
xchg
stc
or
out
sbb
cmp
mov
in
adc
push
int
or
inc
push
and
aas
push
push
rcl
mov
fmul
loop
cdq
jp
fwait
xor
fsubrp
lods
ss
stos
movs
call
icebp
xchg
push
pop
fimul
lahf
leave
add
movs
dec
lods
ja
adc
push
mov
mov
jle
xor
push
inc
cmc
adc
jne
lods
mov
daa
mov
mov
or
scas
(bad)
pop
movs
retf
das
push
aaa
xor
add
pop
fmul
jmp
sub
xor
repz
into
loopne
outs
js
xor
sbb
xchg
test
pop
scas
sub
adc
jb
mov
xchg
cmp
mov
scas
stc
movs
fstp
shl
shl
and
(bad)
popa
leave
into
pop
jb
popf
inc
aaa
mov
add
adc
aam
xor
rol
xor
(bad)
jmp
mov
ret
xchg
into
mov
in
fwait
icebp
dec
mov
and
(bad)
in
mov
rcl
mov
mov
sbb
cdq
jl
mov
pushf
cmp
in
(bad)
(bad)
dec
fnstenv
adc
push
jmp
fldlg2
dec
out
mov
aas
jl
xor
cld
(bad)
cdq
xchg
push
and
xchg
xlat
lods
stc
ror
fst
sti
add
add
dec
xchg
fcmove
pop
in
push
cld
int3
(bad)
push
add
sbb
jo
jnp
jb
shl
pop
ficom
mov
in
push
or
cs
dec
adc
push
jg
cli
push
and
cmp
adc
xchg
xchg
es
call
jg
rep
and
jmp
xchg
xor
scas
push
arpl
(bad)
mov
xor
cmp
out
out
sub
js
mov
sub
repnz
sbb
adc
or
dec
movs
jns
fcomp
in
enter
sub
xor
enter
xchg
push
xlat
jmp
jp
jg
outs
xor
repz
popa
pop
mov
push
cmps
rol
(bad)
in
hlt
loop
jmp
data16
pop
out
adc
xor
js
ss
dec
xor
gs
jo
outs
dec
mov
gs
jnp
cmp
and
mov
test
mov
xchg
test
outs
sbb
rcl
xchg
push
xchg
fist
fucomip
mov
adc
or
or
out
lods
inc
and
inc
and
mov
cmp
aas
sub
pop
jbe
mov
daa
or
les
inc
stos
inc
adc
xor
fcomi
ror
push
pop
les
retf
inc
jg
retf
xchg
cmp
(bad)
cmc
sub
inc
sti
pop
bound
mov
fimul
sbb
or
push
inc
xor
push
cwde
test
js
jns
out
or
sub
push
out
cmp
mov
into
or
mov
bound
pop
mov
dec
rcr
ss
sbb
and
repz
mov
mov
lods
iret
mov
cmp
lea
out
xlat
pop
call
add
bnd
pusha
mov
mov
int3
pop
int
stos
test
jnp
cmp
push
outs
ins
leave
add
jbe
sub
sub
sub
loop
adc
sbb
pusha
mov
mov
(bad)
mov
cli
outs
cli
xchg
fcmovnbe
ins
fwait
mov
leave
fbld
(bad)
lods
(bad)
xlat
or
push
sub
xor
bound
call
sub
enter
hlt
mov
xor
div
sbb
mov
xor
outs
test
fadd
jmp
adc
mov
jle
aaa
cmps
xchg
push
xor
sub
jae
pusha
aas
pop
inc
xor
loope
loope
xchg
adc
xchg
inc
push
jns
jmp
jns
pop
cs
repz
dec
push
and
lock
xchg
daa
popf
dec
add
mov
hlt
retf
dec
std
xchg
mov
mov
daa
in
jmp
test
popa
mov
mov
pop
jl
adc
adc
(bad)
inc
in
jmp
fstp
sub
jo
lods
dec
mov
jl
push
inc
fistp
push
cs
and
stc
in
or
cmp
lock
inc
xchg
push
inc
mov
or
xlat
in
ret
ror
cmp
inc
mov
loop
popf
mov
dec
and
mov
sub
int3
or
fstp
add
popa
add
sbb
mov
cmp
in
out
nop
jne
push
int
int
dec
ret
dec
lds
add
mov
aad
xor
cli
cli
mov
ret
in
cmc
jmp
enter
mov
cmps
mov
sub
xor
add
les
pop
test
in
shl
loopne
out
mov
iret
push
sahf
cli
(bad)
cmps
xor
mov
imul
inc
xor
cld
add
mov
fstp
and
cmps
sub
mov
or
xchg
gs
push
pop
sbb
test
inc
xor
les
xchg
repz
or
cmc
dec
arpl
dec
sbb
and
aaa
mov
in
jmp
stos
or
mov
push
mov
dec
mov
in
inc
scas
je
jbe
ret
(bad)
and
or
and
sahf
add
aaa
cmp
mov
xchg
jecxz
gs
sub
mov
mov
sub
sub
push
test
retf
dec
jb
push
fnstcw
inc
ret
jecxz
xchg
xor
shr
ja
jne
jmp
add
xor
scas
jbe
adc
cmps
mov
popa
out
mov
dec
stc
mov
test
xchg
sti
and
xchg
lahf
mov
popf
push
sub
movs
test
jge
xchg
inc
push
and
shl
mov
ret
imul
out
fst
dec
cs
popf
xlat
std
mov
stos
(bad)
inc
push
int3
push
(bad)
mov
inc
fstp
in
mov
jg
call
bound
(bad)
push
mov
je
or
adc
mov
add
iret
mov
add
jmp
popa
rcr
and
bswap
cmps
ficom
add
imul
push
ja
les
sbb
and
and
inc
jl
xlat
inc
test
add
push
sub
sbb
dec
adc
cld
std
aaa
sahf
push
pop
stos
scas
ror
movs
inc
shr
js
ror
enter
call
sti
xor
inc
iret
jb
int
mov
stc
nop
jmp
mov
aas
jle
popa
call
ds
mov
(bad)
out
sbb
xchg
pop
mov
in
mov
fisubr
cwde
and
adc
iret
xchg
sbb
popf
into
add
mov
pop
cmp
xchg
mov
sbb
cmp
push
sbb
mov
xchg
sbb
cmp
mov
xlat
mov
in
pshufw
pop
ret
xchg
mov
push
jmp
add
cli
sub
or
adc
test
into
je
frstor
mov
and
mov
sbb
pop
sub
cmc
fbld
sbb
test
sbb
mov
aad
shl
sar
sbb
fisubr
sbb
push
(bad)
leave
inc
sub
(bad)
bound
out
mov
mov
outs
mov
shr
cmp
js
and
rcl
inc
sbb
cmp
sbb
popf
std
inc
adc
xchg
into
sahf
(bad)
mov
or
mov
pusha
fstp
xchg
mov
add
pop
repz
nop
dec
rol
(bad)
out
mov
enter
adc
pop
in
dec
mov
icebp
movs
lahf
sahf
push
daa
push
mov
jns
out
(bad)
push
add
mov
sbb
scas
les
fidivr
out
mov
jg
icebp
jne
xchg
cli
lock
sbb
ins
sbb
pop
push
mov
and
mov
or
cmps
lds
xor
pop
sbb
add
jecxz
fisttp
or
pop
mov
jp
cwde
or
sub
std
pop
cmc
jno
out
movs
cmps
ret
sub
pop
sub
(bad)
ja
inc
push
mov
not
sbb
icebp
call
push
cmp
movs
dec
jbe
inc
ins
cld
sbb
inc
jmp
mov
loopne
pop
iret
aas
pop
lods
int
lods
das
push
repnz
pop
clc
out
xchg
cld
jmp
in
xor
(bad)
mov
adc
xchg
ficom
jno
leave
mov
aaa
sbb
arpl
adc
retf
mov
fstp
push
cmc
or
adc
mov
loope
shl
cs
jge
les
pmaxsw
lock
in
aas
jb
and
sbb
cs
fstp
hlt
movs
mov
leave
out
mov
adc
push
sbb
mov
movs
jb
add
or
in
sub
jnp
sub
stc
dec
fst
lahf
pusha
test
unpckhps
ret
mov
jp
(bad)
lods
ror
(bad)
adc
dec
jmp
stos
int3
movs
mov
adc
imul
mov
xor
xor
hlt
pop
(bad)
mov
int
cmp
or
cmps
xchg
cmps
enter
aaa
ret
add
xchg
dec
cmp
mov
int
out
jmp
mov
rcl
int3
aaa
cwde
mov
int
inc
shl
pop
stos
push
out
xor
jmp
cmp
cmp
mov
mov
ficom
movs
pop
dec
(bad)
cmp
in
mov
xchg
sbb
loopne
rcl
mov
pop
push
je
repz
rcl
jbe
and
sbb
cmp
or
mov
ds
cwde
mov
xchg
sbb
and
inc
(bad)
scas
cmp
retf
not
inc
cdq
ins
xchg
int
sub
int3
inc
inc
std
or
lods
sub
add
xor
sub
dec
mov
in
in
dec
mov
jb
js
pop
out
mov
popf
std
mov
scas
inc
jge
sbb
dec
imul
adc
out
jg
dec
mov
dec
fsub
and
pop
stos
mov
dec
imul
sti
ins
scas
cmp
out
loope
and
mov
push
xlat
imul
nop
cli
mov
imul
sub
sbb
or
mov
adc
mov
or
icebp
cmp
shr
ja
mov
xor
xor
pop
enter
jns
add
jbe
mov
ja
sub
cli
pop
adc
jne
es
popf
(bad)
fadd
add
xchg
xchg
in
dec
clc
mov
jge
push
fsub
ja
js
je
ja
jo
or
jle
repz
sbb
cli
sbb
js
cld
cmp
in
mov
jno
inc
je
cli
mov
les
out
lods
cmps
(bad)
test
jae
push
repz
rcl
mov
jno
or
or
mov
je
test
scas
and
add
mov
int3
leave
jge
sub
stos
not
aad
out
and
(bad)
lock
les
jle
push
dec
jbe
add
rcl
out
mov
cmc
enter
sub
aaa
ds
cmps
lahf
or
lods
xor
cmp
out
fdivr
pop
lahf
push
mov
push
push
pop
sbb
jne
ja
ret
and
test
icebp
loop
das
in
cmp
movs
adc
add
or
outs
jl
imul
fld
pop
cli
cld
shr
pop
movs
cmp
inc
cmp
(bad)
pop
lahf
mov
dec
push
inc
or
mov
movs
jae
xor
cmp
mov
rcr
imul
add
xchg
push
jnp
add
stos
cmc
enter
mov
int
xchg
sub
pop
(bad)
pop
fs
xor
mov
xor
scas
dec
pop
es
jmp
out
stos
mov
dec
jg
cmps
sbb
xor
mov
mov
repz
mov
icebp
or
stc
jecxz
add
mov
(bad)
stc
add
es
inc
cmp
or
or
cs
cwde
cs
jl
aas
fbld
sub
cmps
xchg
mov
add
xchg
sahf
aam
cmp
push
ret
inc
scas
push
loop
cmc
pop
add
mov
xchg
outs
sbb
sub
movs
pop
mov
xchg
pop
push
push
movs
leave
adc
test
out
dec
test
add
shr
pusha
add
lock
xchg
mov
push
ror
jg
pop
loop
lods
mov
mov
sub
or
adc
xor
dec
push
fstp
push
cmc
mov
xlat
pop
lea
sbb
pop
in
test
test
jecxz
jle
fbld
mov
jb
add
pop
sub
dec
jne
scas
aam
adc
cmp
cld
mov
movs
jns
or
push
stos
xchg
mov
fwait
popa
call
inc
leave
into
add
or
dec
push
scas
mov
test
pop
std
or
mov
sub
push
popf
movs
push
push
pop
push
mov
xchg
pop
imul
in
sbb
int
xor
mov
mov
jl
mov
or
mov
jns
(bad)
cdq
ins
sbb
(bad)
sbb
ret
pop
cmp
dec
clc
aaa
xchg
mov
mov
xchg
aad
pusha
pop
mov
inc
popf
mov
sbb
push
pop
adc
pop
add
inc
imul
mov
fcmovbe
sub
sbb
into
je
out
sbb
repnz
jmp
lods
cmps
retf
call
adc
push
retf
jae
fidiv
inc
push
(bad)
sbb
push
mov
ret
popa
pop
cmc
add
cwde
movs
add
(bad)
stos
pop
pop
push
inc
test
xor
mov
es
mov
jecxz
jb
and
push
fisttp
outs
xchg
test
cmc
mov
into
mov
les
cld
inc
add
cmp
shl
xor
aam
push
and
outs
das
loope
pop
mov
or
push
into
dec
jmp
or
cmp
cmp
icebp
aaa
outs
enter
out
cmps
div
imul
int
dec
push
(bad)
test
xchg
ja
push
cmps
add
xchg
sub
lea
fdiv
xchg
adc
test
in
retf
sahf
call
pop
xlat
sbb
(bad)
mov
xchg
jb
inc
in
cmp
inc
leave
aad
push
mov
xor
or
sub
ficomp
xchg
or
push
in
jne
adc
sub
inc
mov
lahf
imul
movs
in
and
ss
lods
dec
inc
inc
pop
movs
aam
pop
or
adc
or
(bad)
mov
cdq
and
inc
out
ins
and
mov
xchg
div
inc
sbb
sbb
adc
jmp
sub
or
jbe
push
js
rol
into
or
jp
dec
int
out
dec
push
sub
ret
xor
cmps
retf
stos
in
cs
xchg
inc
loope
dec
push
icebp
pop
data16
cmc
jnp
in
cmp
xor
in
shl
test
dec
dec
es
push
je
inc
pop
es
mov
stos
retf
adc
jno
pushf
jl
daa
jl
lock
mov
repnz
mov
(bad)
sahf
movaps
(bad)
retf
dec
mov
push
push
jno
dec
or
mov
fs
test
jge
xor
mov
or
add
cmp
enter
shl
cwde
xchg
pop
dec
and
aaa
push
cmp
cli
ficomp
bound
push
adc
jnp
push
mov
sar
dec
push
pop
pop
and
or
pop
xlat
inc
lock
daa
mov
and
add
push
add
loope
lods
xor
aas
adc
jbe
xchg
cmp
or
pop
retf
xchg
jle
cld
pop
and
sti
xchg
pop
scas
mov
inc
ret
repz
pop
loopne
fwait
test
or
pop
out
call
jae
jnp
sti
sub
bound
shl
cmp
lahf
into
xor
adc
ret
mov
adc
loopne
mov
mov
je
lods
sub
hlt
ret
sti
clc
in
cdq
push
sub
cmp
nop
cmps
pop
fiadd
or
push
test
sub
retf
fidiv
inc
test
scas
jbe
mov
push
push
test
addr16
mov
sbb
inc
and
jmp
sbb
xchg
adc
movs
sbb
mov
xchg
ret
push
cmc
dec
or
pop
pop
xchg
popa
mov
or
stos
retf
pusha
jb
dec
(bad)
(bad)
icebp
mov
pop
aaa
add
lock
sub
cld
cli
push
ret
bound
cmp
mov
mov
iret
mov
add
inc
add
jnp
ror
out
push
fcmovne
clc
or
aas
adc
popf
xchg
adc
pop
jo
jae
loop
dec
mov
loope
retf
cs
or
inc
mov
jnp
add
out
sbb
not
mov
out
shl
pop
shl
pop
fld
stos
outs
pop
xchg
cmp
sub
dec
ds
mov
and
cmp
ins
jns
jbe
sbb
pop
es
lea
retf
xchg
cld
or
fiadd
hlt
mov
movsx
xchg
cmp
mov
sbb
or
std
sub
xor
iret
jle
and
xor
cmps
pop
addr16
and
sub
sti
adc
pop
daa
ror
sub
xchg
push
call
dec
es
and
fwait
mov
jnp
mov
jl
aad
dec
mov
or
repz
dec
add
sub
clc
fistp
dec
and
add
movs
mov
pop
arpl
jge
push
aad
pop
loope
int3
pop
jns
mov
cmp
jecxz
in
inc
pop
in
out
jle
les
mov
mov
arpl
lds
ret
adc
xchg
mov
fwait
xor
sub
cmp
aaa
leave
out
rcr
mov
jae
cmps
(bad)
stc
mov
add
and
into
pop
xlat
fwait
xchg
or
movs
pop
leave
adc
aad
xor
(bad)
rol
test
xchg
in
imul
repnz
ins
or
adc
lea
int3
mov
or
cli
sub
pop
out
cmp
(bad)
xchg
pop
or
jno
dec
cmp
or
movs
pop
(bad)
in
sar
call
and
adc
fadd
xchg
out
xchg
mov
in
mov
arpl
inc
dec
test
adc
and
mov
in
cdq
pop
xchg
push
repz
cmp
or
push
hlt
outs
cs
sbb
or
pusha
pushf
xchg
das
mov
xchg
scas
inc
lds
mov
adc
nop
cld
push
mov
lods
jno
cmps
add
mov
mov
inc
les
popa
loop
and
rol
or
or
and
xor
mov
movs
mov
sbb
in
mov
ja
jb
(bad)
mov
(bad)
jl
push
mov
sbb
out
sahf
call
sbb
out
mov
fs
ins
mov
or
sub
aad
lods
adc
fisub
jb
std
test
(bad)
pop
jl
(bad)
mov
mov
mov
mov
xor
cwde
cmc
dec
add
loope
and
scas
mov
lods
mov
or
jns
cmp
loope
xchg
je
sub
cmps
jne
gs
das
jg
inc
imul
addr16
adc
adc
push
arpl
fild
fsub
aas
fldcw
and
movs
frstor
pushf
dec
pop
or
scas
mov
push
cmc
or
lea
mov
test
mov
add
fwait
lahf
shl
jb
cmp
inc
(bad)
imul
cmc
xchg
xchg
(bad)
sbb
inc
inc
push
cmps
mov
inc
stos
dec
jge
jb
xlat
fisub
fiadd
inc
shl
adc
xchg
fnstcw
sub
scas
mov
ret
sbb
enter
pushf
mov
push
pop
rol
(bad)
stc
rcl
pop
addr16
inc
pop
loope
inc
jg
call
pushf
jge
adc
scas
push
in
dec
inc
daa
and
dec
add
mov
test
xchg
push
aam
sub
sbb
les
pusha
(bad)
sti
test
mov
scas
and
je
cdq
jns
and
adc
leave
cli
das
mov
out
push
call
daa
test
rcr
(bad)
(bad)
xchg
and
mov
gs
cmps
ja
cmp
mov
js
popa
cmps
fdivr
das
test
jne
mov
xor
inc
pop
sbb
or
mov
aas
test
shr
mov
inc
sbb
mov
sub
sub
outs
(bad)
movs
mov
out
pusha
mov
popf
in
leave
mov
adc
jge
imul
mov
xchg
push
sub
xchg
stos
pop
fidiv
push
adc
adc
dec
jle
dec
jae
sbb
dec
xchg
in
sub
mov
cmp
stos
movs
aad
dec
inc
pop
inc
add
pop
bswap
out
jae
je
sub
mov
pop
inc
push
xor
and
inc
dec
mov
pop
sbb
inc
and
das
pop
div
mov
or
shl
shr
sub
cld
inc
dec
int3
dec
(bad)
mov
jne
fwait
shr
fwait
stos
xchg
xchg
or
(bad)
int3
cmps
repnz
pusha
dec
repz
cli
idiv
push
sub
je
mov
out
inc
sbb
inc
inc
push
and
rep
jnp
xchg
cs
(bad)
sbb
adc
mov
imul
adc
and
or
dec
or
mov
cmps
push
mov
or
cmp
ja
xchg
mov
scas
stc
dec
arpl
adc
(bad)
push
mov
addr16
xchg
leave
inc
dec
inc
stos
movs
je
pop
inc
jle
adc
out
adc
sub
jbe
mov
hlt
pop
shr
jbe
fidivr
dec
movs
out
movs
shl
push
lods
jl
jmp
scas
(bad)
cmps
add
fimul
aas
mov
push
fisubr
imul
stos
jnp
and
push
add
std
inc
retf
(bad)
ror
nop
data16
add
loope
jmp
in
cmp
loope
cmp
loope
cmp
cwde
cmps
jge
lea
mov
div
jo
movs
jnp
retf
cmps
imul
jbe
sub
mov
inc
push
outs
js
hlt
loope
sub
mov
push
pop
retf
popa
inc
mov
jno
mov
enter
jne
mov
pop
push
jne
adc
lock
or
jmp
push
lahf
and
outs
rol
pusha
imul
(bad)
retf
(bad)
pop
push
scas
int3
call
sub
jmp
mov
dec
mov
js
(bad)
xor
inc
adc
retf
jp
xor
mov
xchg
bound
dec
inc
in
inc
push
cmps
mov
push
xor
or
loop
dec
cmps
ds
out
sbb
jo
das
mov
lods
test
outs
mov
mul
xor
mov
mov
in
pop
or
das
scas
ss
dec
pop
xor
outs
sahf
lds
inc
(bad)
retf
add
or
lahf
repz
push
xchg
fcom
shr
adc
test
xchg
push
repnz
pop
cs
mov
cmp
sbb
sbb
enter
dec
xchg
jae
adc
adc
cmp
add
pop
into
stos
lahf
xor
(bad)
int3
push
pop
xor
jno
cmp
shl
pop
or
movups
popf
cli
shr
in
or
mov
add
xor
mov
out
aam
mov
jmp
push
and
push
loope
in
jne
sub
movs
adc
pop
dec
stc
ror
jecxz
sbb
in
mov
mov
outs
ror
pop
and
stc
jge
or
add
and
mov
pop
in
cwde
and
fst
add
adc
push
ins
jno
pop
push
(bad)
shr
xchg
push
cmp
arpl
sub
rol
add
loopne
inc
lods
lods
xchg
inc
inc
mov
dec
dec
push
jno
pop
and
shl
neg
movs
loope
dec
dec
dec
mov
adc
xchg
out
scas
or
dec
sahf
jmp
retf
adc
sub
cld
int
out
pop
push
mov
aad
and
imul
mov
push
sub
push
enter
(bad)
jmp
sbb
popa
cdq
push
xor
mov
(bad)
fst
pop
daa
mov
mov
pusha
popf
cli
fldcw
sbb
inc
or
bound
push
dec
sub
lahf
loope
push
rol
mov
ins
clc
mov
dec
hlt
in
jge
cmp
sbb
xchg
clc
clc
(bad)
(bad)
mov
ret
lds
out
ret
xchg
xchg
cmp
popf
add
jo
and
mov
push
jmp
sub
call
push
xchg
jne
xchg
mov
sbb
jge
jmp
clc
mov
pop
addr16
std
out
jmp
retf
sbb
mov
retf
outs
hlt
aam
or
inc
jb
mov
cmp
ds
lods
enter
push
xchg
out
ret
ja
jnp
cmp
dec
mov
mov
fistp
xchg
jb
loop
mov
adc
adc
jb
test
lea
pop
pop
pop
jg
stc
mov
call
cli
mov
mov
push
cs
or
stos
out
dec
daa
inc
call
mov
adc
icebp
sub
sbb
push
push
add
mov
jne
mov
or
push
push
jno
pop
and
cli
les
mov
fbld
in
sahf
js
sub
xchg
les
clc
jnp
adc
add
push
pop
xor
mov
push
ret
lea
mov
(bad)
jge
mov
jns
push
imul
dec
cs
sar
int
mov
outs
pop
xor
push
and
into
add
(bad)
push
cs
ss
ror
dec
jmp
xor
sub
adc
xor
sahf
jge
dec
sar
aaa
inc
(bad)
mov
cmp
(bad)
mov
movs
sbb
xor
into
cmp
(bad)
adc
pop
jns
push
xor
sahf
sbb
jae
jmp
sub
jle
dec
ror
pop
add
jge
sub
movs
sti
xor
pop
mov
leave
fstp
cmp
(bad)
jnp
jnp
xchg
and
in
mov
inc
lods
push
sar
es
int
pop
jns
jne
pop
jmp
mov
jnp
out
es
mov
mov
sbb
fisubr
lods
arpl
add
dec
fs
sub
ins
jo
jp
out
mov
or
or
lock
bound
mov
sub
cli
and
sub
pop
or
and
pop
adc
test
or
mov
mov
and
int3
jb
jnp
and
push
sub
gs
mov
loop
test
pop
retf
add
xchg
stos
sub
push
pop
jge
imul
sar
outs
loopne
in
int
or
in
icebp
imul
mov
aas
sti
ins
icebp
and
fwait
jmp
popf
xlat
push
mov
push
fcomp
pop
sbb
test
outs
push
jno
outs
xchg
push
pop
mov
nop
mov
pop
(bad)
push
xor
pop
icebp
xchg
ja
(bad)
jmp
push
out
jae
fcom
out
ja
mov
jg
jg
mov
dec
std
fistp
retf
cld
jne
cwde
(bad)
adc
sar
xchg
rol
ds
mov
pop
inc
pop
leave
push
add
xchg
enter
cmp
pop
pop
lahf
repz
lods
outs
addr16
fldcw
push
dec
xor
sub
dec
mov
mov
inc
pop
mov
das
inc
sub
add
popa
in
fnstcw
cmps
push
cmp
test
rcr
dec
jmp
call
sbb
inc
jmp
mov
xlat
scas
(bad)
ja
pop
shl
call
pop
mov
push
sub
int3
mov
mov
js
aaa
mov
fsubr
dec
xor
xchg
pop
mov
sahf
adc
cmps
mov
dec
lds
(bad)
mov
ret
cld
shl
adc
sbb
lds
leave
int3
mov
aad
sbb
fisubr
sub
stos
cmc
arpl
ret
call
mov
repz
(bad)
jg
xchg
sbb
add
sbb
cmp
xor
inc
popa
gs
add
call
icebp
push
cmps
inc
stc
push
(bad)
mov
pop
data16
shl
mov
fcmovne
mov
jmp
sbb
cmp
ds
in
sub
sub
or
arpl
rcl
xchg
inc
mov
mov
(bad)
scas
mov
jnp
lods
add
fs
movs
(bad)
fild
mov
ja
xchg
pusha
push
outs
sbb
lock
retf
xchg
adc
(bad)
push
mov
and
push
repnz
sub
jnp
or
jns
sub
sbb
scas
add
xor
push
cmp
(bad)
clc
cmp
push
xor
daa
imul
jno
shl
dec
std
jmp
mov
dec
jg
outs
cdq
in
lds
out
push
stc
fimul
add
jae
ja
and
jle
mov
loope
lds
imul
dec
ror
les
and
lods
aas
sub
cmps
or
ds
stos
cmp
mov
jno
pop
outs
clc
fimul
(bad)
cmps
cmp
int
mov
sbb
out
in
fwait
dec
xchg
es
imul
pop
push
repz
jbe
aad
jp
sbb
or
ror
test
push
movs
sub
popf
pop
aad
aaa
fwait
aad
xor
xchg
ss
jnp
(bad)
sahf
inc
mov
and
sub
sbb
lods
fwait
cmps
movs
lahf
adc
sbb
push
leave
test
xchg
(bad)
pop
xchg
xchg
jmp
mov
bound
inc
mov
push
sar
js
or
mov
add
jno
sub
mov
shr
fiadd
outs
push
(bad)
movs
int3
xchg
loope
in
fimul
xchg
(bad)
mov
mov
cmc
adc
pop
sub
inc
nop
fs
retf
push
mov
test
hlt
retf
aaa
ret
fcmovnbe
sbb
sbb
push
test
push
pop
pop
arpl
stos
jp
fistp
and
sub
sub
cmp
retf
mov
sub
retf
xor
out
push
or
mov
mov
shr
push
stc
rol
mov
mov
mov
jns
inc
mov
push
pop
mov
pop
fidivr
jecxz
sub
ret
jne
stos
lods
pop
not
gs
sbb
xchg
dec
jl
lods
and
mov
mov
sbb
pop
mov
or
and
inc
call
dec
lods
sbb
dec
imul
mov
in
das
dec
push
and
test
sti
dec
dec
int3
xchg
add
pop
dec
rcl
inc
sbb
push
cld
fs
daa
or
cmp
mov
shr
mov
fisubr
int
es
jno
adc
icebp
mov
test
push
sub
add
jno
push
cmps
das
xchg
inc
mov
and
inc
clc
shr
adc
outs
scas
sbb
mov
sub
int3
jecxz
(bad)
xchg
mov
mov
mov
clc
cmps
mov
test
pushf
jg
pop
ret
lods
mov
ret
inc
inc
adc
popf
ss
aam
add
inc
aas
(bad)
xchg
mov
mov
sub
dec
ret
lahf
xor
mov
bound
(bad)
dec
xlat
add
inc
or
cmps
ss
cwde
jge
sub
nop
pop
jecxz
push
mov
mov
into
mov
push
scas
arpl
and
hlt
test
xchg
addr16
fmul
xlat
push
sbb
push
mov
(bad)
mov
pop
fld
push
push
ins
and
sahf
loop
call
or
xlat
xor
repnz
aad
pop
test
pop
dec
aas
mov
dec
xchg
sahf
and
fsub
mov
(bad)
cld
jo
fidivr
jecxz
lods
dec
out
lahf
cmp
aad
push
jl
xchg
movs
push
or
nop
scas
pop
or
dec
adc
mov
mov
ret
movs
fstp
cs
fnstcw
stos
xchg
js
stos
loopne
push
cmps
push
add
sub
outs
dec
fisttp
add
pop
cmps
add
aas
inc
test
cwde
sub
repnz
cli
cmps
test
(bad)
xor
mov
rol
outs
repnz
rcl
sub
mov
arpl
inc
(bad)
or
clc
fs
pop
adc
dec
adc
and
jbe
popa
es
mov
shr
outs
mov
cmp
je
iret
aam
test
fs
push
sub
mov
or
in
dec
mov
and
adc
jmp
mov
enter
mov
mov
pop
ret
mov
dec
leave
xor
int
loopne
and
pop
inc
xchg
mov
adc
push
sahf
xchg
loop
jo
(bad)
ret
push
test
or
fcmovne
sub
push
jecxz
pusha
fst
ds
cmc
jae
cmps
loope
addr16
sbb
mov
jmp
arpl
add
mov
cmp
mov
leave
call
jno
mov
cdq
loop
cmp
outs
rol
sbb
cmp
test
sbb
jecxz
retf
(bad)
mov
mov
fisubr
daa
lock
xor
jb
pop
jle
fdivp
outs
inc
inc
or
lea
inc
push
jae
out
test
xor
stos
in
jmp
ds
daa
adc
aaa
idiv
stc
(bad)
es
data16
xchg
rcl
and
out
popa
jmp
dec
mov
xor
pop
lock
sub
inc
xor
das
ret
test
gs
or
adc
jne
out
push
cmp
or
and
adc
and
sbb
(bad)
xor
clc
jne
pop
xor
xchg
and
xor
jmp
push
(bad)
inc
mov
fldcw
ja
pop
mov
and
push
out
pop
xor
fld
or
sub
(bad)
rol
daa
ss
mov
(bad)
push
in
mov
ins
inc
jo
cmps
and
daa
add
stos
aaa
aam
mov
jge
mov
add
adc
fcom
aas
push
pusha
pop
in
shl
outs
mov
xor
aad
aas
or
icebp
dec
cmp
daa
rol
inc
loope
mov
rcr
or
xlat
xor
sbb
test
mov
and
push
jne
inc
xchg
and
out
(bad)
sub
rcr
dec
ret
outs
not
out
aad
mov
mov
les
mov
jg
mov
ss
addr16
xchg
xlat
add
enter
pop
cs
pop
sahf
pop
xor
mov
(bad)
or
push
out
(bad)
js
xor
jnp
std
or
mov
ja
mov
dec
jbe
icebp
bound
cmps
adc
mov
xchg
or
add
cmps
sub
xchg
das
xchg
fnstenv
xchg
xor
xchg
adc
ret
mov
enter
and
xchg
push
pop
inc
adc
inc
inc
mov
mov
mov
push
test
xor
push
mov
imul
arpl
push
cmp
sub
mov
mov
pop
and
jmp
test
push
and
arpl
mov
sahf
xor
cmp
sbb
lods
lds
mov
lods
ins
sahf
aaa
mov
(bad)
sti
das
xor
ja
stos
mov
mov
push
dec
test
(bad)
xchg
dec
imul
dec
fldenv
nop
hlt
test
out
xor
cli
adc
cs
dec
lock
pop
mov
xor
hlt
mov
mov
in
not
mov
dec
arpl
jnp
mov
jge
pop
jno
mov
clc
fadd
in
mov
push
sbb
aas
xchg
call
adc
mov
pushf
pusha
mov
sub
retf
scas
add
adc
jnp
inc
mul
cwde
stc
jp
mov
imul
mov
mov
aaa
mov
js
scas
push
adc
sbb
jp
push
jecxz
sub
push
cmps
and
mov
xchg
fcomp
fsub
rcr
scas
js
jns
inc
mov
pop
(bad)
sub
lock
sahf
call
int3
in
retf
imul
mov
push
inc
pop
and
repnz
xor
out
push
xchg
pop
shl
jmp
shl
outs
or
test
ror
inc
xchg
mov
or
iret
cli
fdivrp
adc
cmps
mov
cli
in
add
jg
(bad)
outs
push
mov
xor
lds
pop
push
dec
adc
icebp
gs
or
popa
mov
in
test
out
adc
hlt
mov
rcr
sub
das
sbb
mov
mov
repnz
adc
cmc
cs
dec
stos
out
sub
adc
cmc
pop
mov
mov
jmp
(bad)
not
xchg
xlat
mov
push
xchg
popf
call
mov
sub
xor
pop
dec
(bad)
sub
loopne
ds
or
cmp
mov
cmp
(bad)
mov
push
fwait
lock
pushf
mov
arpl
ins
mov
pushf
fucomi
pop
out
push
sbb
stos
test
(bad)
imul
dec
fdivr
fild
xchg
inc
add
and
test
jp
sbb
test
es
mov
dec
adc
adc
inc
inc
inc
call
ret
jle
xor
cmp
xor
mov
stos
push
pop
cmp
xchg
(bad)
mov
pop
pop
movs
div
mov
(bad)
dec
jbe
inc
es
or
mov
push
push
sbb
imul
mov
cmp
sti
loopne
(bad)
mov
call
(bad)
jp
mov
(bad)
stos
jae
dec
into
jg
not
leave
sahf
xchg
pop
push
iret
mov
adc
or
xor
ins
fmul
fmul
fldenv
test
push
mov
stc
xchg
xchg
pcmpeqb
add
mov
and
and
sbb
in
xlat
sbb
push
xor
dec
loopne
nop
lock
push
push
dec
inc
pop
mov
in
shl
lods
xchg
push
push
es
dec
jns
das
daa
not
outs
mov
rcr
push
outs
adc
int3
outs
and
(bad)
push
in
shr
popa
cmp
sar
mov
mov
push
out
jno
hlt
adc
xchg
mov
dec
sti
int
movs
shr
imul
test
gs
mov
adc
addr16
jae
and
leave
js
inc
rcl
jmp
and
jl
mov
pop
scas
pop
jnp
add
jmp
xor
out
aas
cli
push
xchg
mov
dec
push
sbb
lods
shl
cmp
ret
or
xor
pop
dec
idiv
ret
sub
iret
aas
mov
gs
and
dec
and
jbe
test
pop
push
call
mov
mov
and
push
cmp
mov
sti
addr16
add
jae
jae
inc
xchg
iret
sysret
mov
movmskps
cmp
xor
sti
inc
inc
push
daa
mov
(bad)
mov
ss
iret
call
xlat
mov
push
adc
popa
mov
test
sbb
cdq
retf
sbb
js
inc
hlt
repz
dec
cmp
pop
add
mov
jnp
mov
ja
add
push
outs
cmp
enter
pop
jbe
cld
mov
adc
xchg
pop
adc
inc
or
int3
inc
or
push
mov
ja
(bad)
xor
in
mov
sub
lods
scas
jns
inc
ret
fistp
xchg
or
and
in
jmp
inc
and
out
push
push
aad
mov
in
stos
jmp
jb
sar
mov
and
sub
nop
push
ret
dec
cld
add
dec
pop
xchg
push
lods
fisub
push
stc
test
cmp
fld
out
xor
sub
hlt
fldenv
cmc
aaa
js
es
sahf
cmp
(bad)
xchg
lahf
inc
ret
daa
call
cmp
xchg
sbb
pop
push
lock
cmp
sbb
les
adc
add
dec
shr
ss
inc
inc
mov
aas
dec
out
imul
mov
mov
jg
clc
sar
dec
or
lods
mov
cdq
push
mov
mov
adc
push
pop
lods
fidivr
mov
xor
sub
dec
inc
cdq
mov
clc
sub
(bad)
mov
in
jne
xchg
mov
retf
loop
push
or
adc
mov
fs
aaa
mov
int
test
mov
lods
xor
js
dec
ret
in
out
loope
clc
xchg
and
stc
loopne
adc
ins
int3
(bad)
adc
sub
pop
idiv
push
dec
xlat
or
fst
mov
jmp
jecxz
rol
jns
dec
jbe
in
aaa
sbb
adc
pushf
lahf
movs
and
inc
cmps
push
enter
mov
loop
stos
adc
or
in
dec
js
mov
cmc
xchg
inc
faddp
(bad)
pop
scas
mov
pusha
jb
(bad)
xchg
punpckhwd
xchg
pusha
stos
pop
and
push
inc
(bad)
into
test
stos
aam
ret
cmp
and
or
sbb
bound
mov
ins
(bad)
out
mov
xchg
cmp
fs
dec
fidiv
fstp
clc
xor
fninit
jecxz
(bad)
push
inc
xchg
mov
call
mov
jmp
push
popf
js
inc
sar
cmps
dec
lahf
outs
loop
mov
dec
iret
scas
std
fwait
iret
push
mov
in
and
(bad)
popf
mov
les
and
stos
push
add
jbe
xor
mov
push
loop
pop
rol
aam
std
jns
push
sbb
push
lods
xor
outs
add
mov
xchg
dec
(bad)
shl
add
out
lahf
or
jl
movs
add
mov
pop
sbb
adc
in
dec
inc
(bad)
jecxz
and
aaa
add
cld
add
(bad)
push
xchg
js
cdq
sub
cli
dec
pushf
sbb
mov
add
add
ja
mov
or
test
cli
(bad)
mov
push
lahf
test
mov
push
push
mov
aas
push
inc
mov
adc
dec
pop
mov
sbb
imul
push
push
mov
daa
and
loop
mov
test
or
xchg
add
push
mov
call
punpckhbw
mov
pop
mov
daa
dec
or
pop
mov
retf
jne
push
icebp
jmp
mov
jmp
mov
mov
mov
sbb
push
ds
push
mov
retf
xchg
add
ins
call
sub
sbb
mov
xchg
inc
jp
test
mul
test
and
es
clc
jmp
(bad)
gs
iret
push
(bad)
repz
jo
jge
jg
push
push
in
mov
lods
(bad)
xor
movs
xor
(bad)
aad
(bad)
icebp
(bad)
cmc
cmp
push
pop
dec
mov
xchg
sub
fldcw
mov
les
mov
cmps
arpl
dec
xchg
sub
mov
jns
xor
out
adc
and
pop
ds
retf
(bad)
mov
add
aam
mov
int3
cmps
sub
dec
leave
fwait
daa
fucom
xor
das
icebp
mov
jp
ret
or
sbb
xchg
jne
sahf
sbb
fisttp
sti
jl
cli
cld
mov
cdq
jmp
call
push
push
mov
into
inc
mul
sbb
push
push
movs
sar
dec
lods
and
call
cmp
ja
cmp
shr
mov
dec
xor
loope
adc
mov
xchg
scas
push
arpl
mov
loop
mov
mov
shl
push
loop
sti
gs
mov
xor
inc
popf
fdivr
scas
lahf
retf
(bad)
sti
adc
rcr
cmps
shr
push
xchg
xor
xchg
mov
rep
add
iret
rol
pushf
mov
cmp
pop
es
xor
mov
loope
pop
mov
frstor
and
sbb
shl
ds
fucomip
pop
mov
jge
bound
ja
dec
lods
mov
push
daa
add
retf
add
mov
or
add
adc
aaa
(bad)
mov
(bad)
popf
xchg
push
pop
fist
cmp
cmp
jle
adc
jbe
lea
stc
test
addr16
adc
loope
push
jbe
mov
ds
cmc
cmp
fcomp
and
arpl
mov
inc
ffree
arpl
ja
out
xor
bnd
call
mov
outs
jno
sahf
dec
fstp
push
adc
pop
stos
sub
xchg
sbb
dec
mov
mov
shl
(bad)
in
add
sub
lea
jae
and
lea
jmp
or
fdiv
add
sahf
sbb
pushf
and
sbb
cmp
cdq
(bad)
jae
cli
mov
jg
xor
pop
pusha
aas
xor
imul
sbb
push
shl
in
pop
push
cmp
inc
cmp
mov
adc
and
cmp
mov
popa
and
mov
or
dec
mov
stos
fwait
popf
or
cmp
xchg
fidiv
pushf
push
in
fwait
rol
es
dec
sbb
das
lds
and
into
or
jp
lea
hlt
fidiv
jns
xchg
xor
add
in
fsubr
aaa
inc
inc
rcr
xchg
push
pop
fld
call
lods
retf
sbb
aas
sbb
fidiv
in
or
lahf
add
fimul
retf
and
inc
mov
arpl
jae
sbb
test
inc
mov
call
sub
cwde
mov
inc
dec
xchg
mov
dec
(bad)
repz
shl
das
push
cmp
test
call
xor
jb
fiadd
je
mov
lahf
mov
enter
dec
lahf
hlt
mov
mov
mov
push
movs
cmp
adc
cmp
sti
fisubr
push
xor
add
nop
adc
test
movs
movhps
out
mov
xchg
sbb
cmp
ins
fsubr
lods
mov
aam
mov
adc
dec
jl
fisttp
xchg
xor
cli
sbb
sahf
imul
ret
push
into
scas
sbb
aas
jge
cs
mov
mov
retf
addr16
push
push
adc
sub
sar
or
pop
inc
push
js
lahf
xchg
call
jo
cmp
push
aam
hlt
and
in
mov
pop
inc
test
pushf
cmp
or
pop
popa
test
lahf
pop
emms
adc
jmp
in
push
xor
(bad)
out
adc
in
fistp
aam
jmp
pop
aad
push
out
pop
jae
idiv
aam
xor
adc
push
(bad)
or
sub
aaa
movs
aaa
retf
fsubr
shl
pop
test
or
ret
adc
inc
(bad)
or
dec
xchg
push
stos
call
pop
sbb
(bad)
enter
mov
out
jne
pop
imul
scas
xor
sbb
sub
stc
push
loop
and
add
cmc
cwde
mov
fdiv
ds
jb
sub
hlt
pop
add
pop
jbe
nop
xchg
pop
(bad)
lea
mov
mov
or
or
lods
cmp
dec
dec
inc
or
inc
loopne
test
xor
xchg
push
jl
mov
dec
jecxz
jmp
icebp
and
cld
outs
repnz
call
or
cmp
je
shl
out
push
les
imul
pop
fwait
lock
jb
mov
ss
add
inc
aam
test
push
mov
mov
mov
int3
sbb
add
pop
mov
cmps
iret
ds
outs
pop
and
adc
and
dec
fmulp
push
push
movs
xor
jmp
scas
mov
add
xor
idiv
je
mov
xchg
adc
xor
sbb
lods
cmp
sbb
xor
jb
mov
(bad)
iret
mov
push
mov
arpl
aad
or
add
in
jle
fisttp
pop
push
lods
inc
push
mov
mov
lock
addr16
sbb
push
mov
push
fisub
xor
stos
fild
sbb
mov
stos
mov
dec
mov
ja
in
pop
adc
jmp
push
mov
daa
sub
mov
pop
mov
fimul
xchg
popf
pop
movs
adc
(bad)
test
xchg
push
xchg
or
sub
mov
or
fisubr
inc
pop
jae
cmp
(bad)
neg
hlt
idiv
push
mov
mov
xchg
mov
adc
and
mov
add
inc
imul
loopne
in
add
lahf
add
pop
push
mov
mov
add
test
xor
jp
nop
add
cmp
mov
imul
xchg
push
jns
xchg
inc
sbb
xchg
sub
pushf
repz
adc
push
les
(bad)
call
outs
gs
into
repnz
jmp
idiv
nop
stos
arpl
sbb
jb
fisttp
retf
push
xor
sti
push
popf
lds
xor
iret
inc
addr16
call
mov
pop
ret
icebp
ret
xchg
aas
imul
adc
je
push
sub
(bad)
push
mov
and
mov
xchg
and
mov
cmp
sbb
mov
repz
xor
sbb
mov
lahf
enter
jmp
das
shl
ss
aad
movs
mov
je
ds
push
(bad)
bound
xor
pop
cdq
test
dec
add
xor
cmp
test
fwait
jp
pop
mov
xchg
add
hlt
add
mov
cmp
fld
int3
inc
hlt
lea
stos
stc
retf
int3
pop
jnp
inc
(bad)
stc
out
sub
aam
inc
push
retf
fwait
jmp
mov
ins
and
ret
int
or
cwde
movs
adc
jae
loopne
push
dec
pop
lock
cld
lahf
mov
inc
test
sub
mov
sbb
mov
stos
pusha
fs
adc
cmp
lock
and
ins
in
add
cmps
stos
mov
push
(bad)
xor
or
adc
xor
or
sub
adc
mov
scas
add
mov
mov
popa
adc
sub
inc
jnp
rcl
inc
fistp
(bad)
push
lods
cwde
(bad)
mov
cmc
rol
jne
(bad)
lods
jmp
jg
mov
mov
xchg
bswap
iret
inc
add
fst
arpl
fwait
iret
mov
call
stos
imul
adc
cdq
(bad)
push
aaa
daa
cmps
push
les
push
fsubrp
mov
mov
xor
mov
cmp
ret
xchg
dec
push
ins
movs
ja
sar
aam
xor
pop
mov
or
test
test
mov
repnz
pop
add
pusha
mov
fsub
jbe
and
std
add
js
mov
call
fwait
push
hlt
ret
sub
dec
(bad)
push
adc
adc
sbb
ret
jl
cli
sbb
pusha
add
dec
dec
jne
dec
or
jbe
ins
iret
std
pop
aaa
or
mov
xor
test
pop
inc
mov
int3
ret
out
addr16
cdq
loop
sti
test
call
and
jno
rcl
arpl
lods
leave
jo
xchg
mov
fstp
sar
dec
cwde
or
jge
shr
push
repnz
xchg
fild
cdq
jnp
(bad)
and
sub
pop
or
xchg
repnz
ret
pop
pop
sbb
adc
shl
adc
add
jbe
inc
dec
popa
not
sahf
mov
jmp
pushf
mov
jns
(bad)
jmp
adc
call
cmp
mov
(bad)
and
inc
dec
sbb
xchg
push
cmp
mov
adc
neg
(bad)
jmp
mov
jne
fsub
add
xchg
out
cmc
push
out
cld
push
movs
xchg
push
or
jnp
ins
fiadd
gs
inc
xchg
addr16
dec
push
jne
push
xor
pop
popa
xchg
mov
cs
push
jbe
cmp
iret
jb
mov
lock
out
jno
ja
mov
inc
gs
pop
fist
mov
aad
push
xchg
imul
ins
add
sub
cli
xchg
loop
sub
int
or
push
scas
add
out
ja
add
(bad)
jmp
xor
ror
inc
push
(bad)
pushf
jl
stc
jbe
cmp
mov
sub
mov
jmp
fst
ret
in
outs
inc
jge
push
jge
int3
push
aaa
sbb
data16
sbb
(bad)
jmp
pop
or
dec
dec
rcl
lds
jmp
aam
xor
js
call
pop
inc
popa
dec
jecxz
cmp
std
or
inc
xchg
xchg
add
pop
mov
cld
call
cwde
add
push
(bad)
aaa
std
shl
jg
inc
mov
jbe
data16
nop
aas
test
xchg
mov
add
das
call
xor
ret
jae
icebp
mov
cmp
xchg
repz
cmps
enter
(bad)
mov
pop
add
in
ror
push
frstor
adc
je
push
bnd
sbb
ja
popf
loop
leave
lods
mov
gs
mov
retf
mov
pop
add
fsub
mov
aaa
inc
lahf
rcl
mov
xor
arpl
sbb
xor
jp
or
mov
test
cmp
mov
cli
push
mov
les
jmp
int
mov
sar
mov
add
push
push
sub
aas
sahf
jl
mov
pop
lds
sbb
rcr
pop
push
fidiv
xor
sbb
fdiv
xchg
pop
cmp
(bad)
mov
cwde
mov
sbb
imul
xchg
jne
adc
in
(bad)
icebp
mov
cvtdq2ps
xor
mov
dec
jb
pop
bound
add
leave
adc
pop
jmp
pop
lea
jno
popa
or
and
jg
or
sbb
ror
inc
rcr
xor
cdq
in
into
xlat
cdq
js
imul
pop
daa
cdq
inc
aad
add
push
fld
aam
jae
mov
in
mov
mov
lock
inc
rol
sbb
push
rcl
push
jl
scas
neg
jp
fcmovne
adc
and
repz
dec
and
les
xchg
pop
mov
mov
pusha
or
test
inc
add
jg
(bad)
cwde
mov
nop
pop
les
arpl
popa
sub
leave
mov
scas
call
ins
(bad)
stos
or
sbb
pop
sbb
sahf
inc
push
push
mov
cli
cli
or
aam
jae
jo
push
bound
cmp
(bad)
or
pusha
pop
pop
(bad)
add
sti
mov
inc
fimul
inc
dec
jle
(bad)
xor
pop
and
(bad)
adc
data16
nop
leave
cmp
pop
imul
jns
jno
fwait
sbb
pop
aas
lods
(bad)
jb
cmp
clc
mov
xor
xchg
jne
pusha
xchg
jmp
sbb
jb
mov
adc
lods
aas
xor
push
call
inc
dec
adc
clc
adc
int3
cmp
xor
dec
sbb
inc
test
dec
fstp
adc
push
mov
fwait
addr16
adc
mov
imul
jmp
aaa
sub
shl
test
sbb
xor
hlt
pop
or
loop
jecxz
cmps
repnz
aad
aas
pop
xchg
lods
xor
xchg
shl
inc
cmp
cmp
pushf
mov
sub
in
mov
push
in
dec
cmps
(bad)
jle
pop
(bad)
retf
cmp
enter
pop
sub
xor
movs
test
pop
pop
jmp
je
stos
pop
mov
out
jns
adc
clc
jne
xchg
sub
popf
mov
jmp
fst
cmc
ret
push
icebp
sub
retf
xchg
lahf
cmp
ins
jo
movs
jns
daa
mov
sar
jp
push
pushf
repnz
stos
iret
dec
add
cdq
loope
pop
std
sbb
jne
push
cmc
inc
lods
push
retf
push
retf
mov
push
mov
mov
jg
add
cmp
es
rol
sub
or
mov
sbb
enter
cs
cld
and
int3
mov
popf
repnz
or
adc
sub
arpl
and
mov
or
cld
sar
xor
mov
or
ret
jge
sub
dec
mov
xor
add
sbb
xor
pop
bound
push
js
push
mov
push
aam
mov
mov
cmc
daa
aam
aam
(bad)
rcr
sbb
mov
test
scas
cdq
lods
cmp
add
dec
pushf
outs
rcr
lds
repnz
pop
imul
ficomp
jecxz
jne
test
mov
inc
in
mov
push
neg
mov
loop
cmps
add
int3
push
dec
idiv
mov
sbb
(bad)
not
jecxz
out
jb
pusha
je
push
add
jae
push
icebp
es
fmul
cld
xchg
std
mov
cmp
loopne
jbe
dec
iret
fstp
icebp
addr16
cmp
sbb
data16
cmps
jg
aam
xchg
add
push
lea
inc
rol
xlat
cmp
in
jne
int
lods
xchg
push
or
cs
or
jbe
xchg
leave
dec
mov
shr
test
mov
dec
lahf
mov
sbb
sbb
pop
call
lahf
push
xor
mov
or
pop
(bad)
pop
push
out
jnp
add
rcr
jmp
mov
xchg
sar
pop
mov
pusha
lods
lods
loop
mov
stos
xlat
hlt
mov
stc
(bad)
imul
dec
lahf
and
adc
fmul
retf
dec
xchg
and
nop
retf
jmp
jbe
dec
dec
fucomi
cdq
add
xor
(bad)
push
outs
and
je
stos
adc
in
outs
fidiv
stos
int3
pop
xchg
leave
sahf
shl
and
push
std
or
mov
and
xchg
cmp
inc
push
dec
mov
and
imul
push
jecxz
ds
and
inc
es
mov
sub
pop
je
mov
cmps
in
mov
call
je
jg
lods
fmul
pushf
and
mov
add
test
sahf
(bad)
out
or
(bad)
xor
jbe
repz
push
retf
pop
mov
push
jne
jae
jmp
fwait
sbb
and
in
loope
push
les
test
mov
in
ret
lock
inc
mov
sbb
or
or
sbb
and
retf
dec
cwde
loope
retf
push
pop
cmc
and
mov
lahf
push
push
(bad)
loopne
(bad)
jmp
(bad)
cmp
pop
(bad)
mov
inc
push
inc
fild
cld
sbb
lds
aas
pop
leave
mov
das
add
(bad)
les
sub
adc
mov
xchg
and
adc
or
mov
sub
fneni(8087
adc
or
dec
sub
dec
inc
sahf
add
nop
bound
aaa
leave
adc
inc
jnp
fcomp
mov
cdq
arpl
mov
lahf
xor
and
hlt
sbb
sbb
add
clc
test
inc
and
call
and
dec
leave
fwait
and
out
stos
popf
and
bound
xchg
push
mov
(bad)
lock
jg
or
cmps
push
mov
mov
pop
push
add
sbb
add
test
adc
sbb
and
in
arpl
pop
push
xchg
cmp
jo
push
push
cmp
push
fld
dec
xlat
jno
and
out
das
xchg
push
inc
sar
mov
mov
push
pop
hlt
xchg
stos
bound
sti
add
or
adc
rcr
rol
sti
je
inc
cmc
and
mov
test
shl
pop
mov
xchg
imul
stos
retf
inc
jmp
pop
outs
out
aas
push
aaa
push
(bad)
xor
mov
fmul
test
(bad)
push
jmp
div
daa
and
push
pop
(bad)
pop
(bad)
sub
jmp
xchg
stos
adc
test
in
(bad)
xor
mov
cmp
shr
mov
pop
adc
movs
cmp
xchg
add
push
add
bndldx
pop
sbb
push
pop
mov
out
mov
int3
test
stos
popa
cmps
rcl
loopne
fcomp
add
push
or
repz
imul
jnp
and
and
test
(bad)
cmc
pop
shr
les
jge
sbb
outs
push
and
jae
mov
int3
loop
xor
add
rol
or
fstp
dec
mov
mov
xchg
aas
sti
xor
int
adc
jo
into
push
cmp
xor
adc
jmp
xchg
gs
jae
call
repnz
pop
retf
(bad)
jge
jbe
jbe
stc
retf
(bad)
aam
push
call
cs
sub
jl
rol
hlt
sub
out
ds
imul
mov
xchg
int
mov
test
pusha
mov
in
(bad)
mov
fcomp
shr
dec
inc
test
cmp
fld
add
into
(bad)
dec
(bad)
in
mov
push
sbb
out
ror
pop
fidivr
outs
add
sub
mov
mov
cwde
adc
leave
jge
scas
aaa
push
call
loop
out
cmc
imul
jmp
or
push
cmp
(bad)
in
mov
adc
jo
xchg
inc
xor
xchg
dec
mov
jnp
popa
jns
jns
sub
ss
sbb
es
cmp
add
sub
mov
push
hlt
sar
lock
mov
out
cs
xchg
repnz
dec
bound
fwait
lds
aad
mov
xor
push
mov
dec
ficom
fs
push
scas
arpl
jo
push
lods
push
fadd
std
aaa
or
sahf
jmp
push
inc
in
les
mov
fcomip
xor
push
adc
call
xor
dec
add
fwait
mov
push
inc
xlat
cdq
scas
jge
fdivr
ins
cwde
inc
sar
and
fnstcw
in
rcl
xor
push
inc
repz
pop
cmps
lea
jmp
adc
cmp
fisub
add
ins
pusha
fstp
and
xor
test
sub
lock
and
push
sbb
and
daa
mov
ins
mov
sahf
push
out
and
data16
push
mov
mov
sbb
sbb
out
js
into
aaa
cli
shr
fwait
and
js
sbb
mov
jp
nop
xchg
aaa
cmc
lock
mov
gs
outs
test
hlt
mov
mov
cmp
xchg
std
out
jnp
in
mov
je
and
sbb
xor
imul
dec
les
loope
pop
xchg
sbb
lds
stos
div
mov
cmps
lahf
(bad)
inc
add
shr
(bad)
pop
movs
aad
cdq
inc
test
adc
push
jle
int3
fs
inc
sbb
pop
push
in
inc
stc
mov
jmp
das
cmp
sbb
pop
ficom
cdq
into
sub
movs
rol
pusha
iret
inc
cmps
outs
adc
aaa
xor
sub
pusha
mov
push
jg
ret
cld
mov
xchg
pop
test
inc
dec
pop
(bad)
std
in
push
shl
scas
push
add
ds
jns
mov
jl
movs
test
stos
cmp
push
call
mov
inc
jl
call
ret
push
mov
sbb
mov
add
mov
js
imul
dec
xchg
or
cli
imul
cmp
mov
stos
aas
sub
and
add
(bad)
push
xor
jmp
push
jmp
aas
adc
xor
rcr
or
add
sahf
pop
popa
cmps
mov
(bad)
push
cmps
cli
fldcw
popa
sub
clc
repz
out
int
sbb
xor
data16
out
add
outs
scas
push
iret
pop
push
jle
scas
mov
pop
inc
dec
int
and
in
es
xchg
add
xchg
xor
aad
and
lods
jge
pop
cmp
scas
sbb
pusha
or
fidivr
mov
ret
cmp
jns
sbb
cli
mov
movs
rol
inc
dec
xor
pop
cmps
mov
imul
int3
int
push
arpl
pop
les
lahf
adc
into
add
push
mov
xor
inc
or
fxch
xchg
jecxz
repnz
ret
shl
mov
mov
imul
cli
sti
aad
pop
stos
xor
in
shl
retf
mov
stos
lods
add
cmp
push
sub
add
inc
mov
add
fbld
jl
(bad)
(bad)
push
popf
fidivr
push
xor
cs
add
mov
push
daa
mov
ss
int
scas
fucomp
ret
sahf
mov
add
rcr
popf
dec
push
fst
sbb
inc
pop
mov
mov
fs
inc
fucomi
mov
sbb
inc
in
test
repz
dec
popf
xchg
mov
sahf
mov
pusha
mov
mov
ret
dec
repnz
fwait
push
push
ret
xchg
xchg
pop
cmp
sbb
and
push
or
loop
outs
cmps
loope
lods
iret
xor
call
les
neg
ds
push
xchg
dec
inc
jmp
cmps
lahf
ja
pop
jne
or
test
or
push
cmps
je
retf
jl
cmp
jns
ja
fnstenv
repnz
stos
out
js
les
sub
movs
pop
outs
movs
je
and
push
cmps
sahf
push
popf
jne
repnz
dec
inc
cmp
repnz
test
aas
test
pop
push
fdivr
lds
adc
adc
and
mov
outs
jbe
lds
stos
imul
out
js
les
pop
in
inc
mov
inc
ss
rol
ja
test
cli
inc
gs
sti
dec
inc
cdq
mov
add
loop
hlt
mov
outs
mov
inc
cmp
jecxz
jns
mov
or
bound
mov
or
cwde
push
and
(bad)
out
jl
retf
push
mov
bound
push
jge
sbb
scas
sbb
out
push
sub
jecxz
mov
data16
adc
ds
(bad)
mov
(bad)
or
jae
xchg
cli
outs
call
imul
cli
mov
mov
adc
dec
pop
xlat
dec
ret
comiss
jb
test
leave
or
fld
div
xchg
jmp
and
adc
pop
fimul
dec
lock
aas
adc
dec
icebp
add
sbb
call
retf
xor
int
out
loopne
mov
ror
imul
add
and
adc
mov
in
lds
call
out
fcmovnu
int3
lods
add
adc
jnp
dec
movs
add
cmp
jle
sub
add
retf
xchg
sbb
push
sbb
ret
mov
xchg
push
sbb
int
add
sbb
mov
lea
or
pop
xchg
repz
popa
or
fist
jnp
xor
std
lods
jne
sub
and
mov
cdq
xor
scas
cmp
adc
scas
mov
pushf
outs
jno
aas
loope
fmul
aad
push
pop
push
jmp
cmp
add
rcr
xor
dec
loope
xchg
pop
jnp
mov
adc
das
inc
jmp
cmc
and
add
xchg
and
inc
call
mov
imul
or
or
and
adc
push
or
jmp
jb
mov
test
sbb
fst
imul
out
mov
pushf
jp
imul
sahf
ret
xchg
and
fisubr
push
or
push
lods
dec
push
scas
jg
aaa
in
bound
jle
jmp
cmp
leave
loop
add
std
xchg
inc
xchg
mov
shr
xchg
xchg
movs
fndisi(8087
cs
popa
sbb
add
es
push
arpl
and
push
ret
adc
or
sub
jae
jne
inc
popf
out
mov
adc
pop
pop
jge
rcl
mov
adc
aas
and
mov
dec
pop
lds
jecxz
arpl
push
ja
pop
dec
dec
xchg
aam
inc
adc
cmp
sub
sub
stos
in
mov
mov
clc
add
mov
jne
sbb
in
test
jg
and
(bad)
cmp
sub
outs
cmps
repz
in
popf
rcr
ret
pop
push
mov
lahf
jge
and
je
xchg
dec
adc
lds
mov
push
cmp
cmc
jge
movs
fidivr
jg
xchg
in
jecxz
retf
jecxz
repnz
pop
fidiv
push
iret
inc
sub
pop
jmp
loope
scas
hlt
jno
jl
xchg
inc
les
aad
loope
mov
xor
mov
arpl
lods
sbb
cs
jl
jno
cmp
and
bnd
inc
fist
aad
retf
out
dec
inc
ret
cmp
out
sar
(bad)
xor
mov
inc
push
inc
inc
loop
lods
in
xor
mov
mov
mov
jecxz
fwait
push
dec
pushf
adc
sbb
es
jmp
pop
xchg
aas
xchg
jns
ret
inc
jnp
or
sbb
mov
in
(bad)
call
mov
push
loope
test
test
ds
fisttp
sbb
xchg
cdq
xchg
cmp
inc
inc
jge
ret
fiadd
into
pop
cmp
xlat
repz
cmp
mov
mov
xchg
sbb
(bad)
and
xchg
mov
and
je
nop
imul
js
xchg
pop
sub
mov
imul
pop
mov
xchg
adc
cmp
xor
add
call
leave
gs
test
or
int
lahf
in
retf
cmc
clc
retf
push
push
xchg
mov
xlat
test
push
mov
mov
cmp
inc
xchg
jns
call
dec
jae
sbb
ins
jns
xlat
xor
pop
(bad)
aam
sub
mov
cmp
pushf
sbb
push
pushf
fcom
jne
add
out
stc
jl
sbb
sub
xchg
add
movs
addr16
sub
jl
xchg
daa
inc
mov
ins
shl
ds
sbb
jge
inc
or
adc
cmp
repz
outs
sub
dec
adc
jmp
jg
js
addr16
arpl
ret
(bad)
outs
(bad)
in
sub
jne
and
jno
cmp
in
adc
mov
cmp
mul
ficom
gs
dec
sub
in
xchg
sub
dec
xchg
mov
leave
out
sub
test
xor
movs
ror
out
enter
mov
push
or
(bad)
out
xchg
sbb
pop
test
and
xlat
xor
loop
repz
adc
push
fisttp
lods
rcl
repz
sar
cmps
pop
scas
mov
das
rcl
dec
ins
push
fiadd
into
cmp
fbstp
inc
jmp
mov
es
or
shl
push
xor
or
pop
imul
dec
jge
push
imul
fcmovnu
cmp
popf
pop
push
push
adc
aas
bound
hlt
lods
pushf
mov
lds
iret
fimul
jae
mov
xor
test
xor
pop
inc
dec
mov
push
fwait
ror
dec
inc
gs
jg
jecxz
int3
mov
fsubr
out
mov
and
fdivrp
dec
dec
add
(bad)
gs
cld
cmp
dec
xchg
lock
mov
out
mov
adc
sub
push
cmp
xchg
fstp
(bad)
push
pushf
add
push
pop
setae
or
bound
fdiv
rol
stos
(bad)
jmp
fadd
aaa
sub
enter
aad
cmp
mov
(bad)
mov
mov
movs
outs
icebp
jbe
fld
movs
sbb
xor
adc
and
outs
mov
arpl
cwde
sti
repz
cdq
or
or
push
sti
add
push
push
out
in
loope
ror
sbb
mov
div
inc
pop
movs
jae
xlat
adc
cmp
cmps
mov
jmp
or
das
or
scas
mov
pop
adc
pop
cmp
jp
clc
adc
adc
or
sub
push
outs
test
cmp
int
lods
mov
sub
mov
and
add
push
jne
xchg
ja
fwait
add
out
fucomip
icebp
sahf
jae
stc
inc
pop
movs
hlt
jmp
js
pushf
dec
mov
daa
cmp
fsubr
and
xchg
sub
(bad)
out
dec
das
sub
mov
pop
sbb
xchg
cmp
call
(bad)
xor
jecxz
or
mov
xchg
or
in
inc
shl
out
scas
mov
fld
adc
shr
aaa
das
out
lea
xchg
xor
cmps
js
pusha
pop
mov
fnstsw
lea
leave
cs
mov
ret
and
das
or
push
mov
push
imul
shr
int
pop
xor
pop
mov
enter
mov
mov
or
(bad)
daa
repnz
adc
adc
outs
lahf
mov
or
aaa
cmp
movs
jb
pop
inc
sub
sub
setb
es
test
shr
adc
fs
and
icebp
inc
dec
(bad)
pusha
loopne
fistp
loop
mov
scas
idiv
leave
stos
inc
dec
rol
(bad)
sub
out
loopne
das
fwait
mov
mov
xchg
add
sti
aam
adc
dec
(bad)
in
enter
stos
movs
nop
pop
arpl
inc
cmps
push
retf
iret
repz
ret
(bad)
out
movs
mov
xor
push
mov
movs
push
test
mov
int3
jge
mov
adc
cmp
leave
addr16
cmp
mov
fimul
pusha
dec
out
or
pop
jp
pop
sub
mov
cmp
lea
pop
pop
(bad)
push
pop
xchg
mov
scas
into
imul
add
cmps
pusha
push
out
cmp
icebp
fcmovbe
add
stc
and
pop
push
outs
enter
push
add
cmps
jl
cli
cmp
jge
outs
add
xor
xchg
or
adc
neg
add
out
int3
(bad)
add
daa
hlt
out
fsub
mov
mov
mov
or
xchg
xchg
ret
adc
push
daa
fnsave
pop
rol
mov
mov
adc
adc
bound
lods
and
pop
mov
cld
push
loopne
mov
test
aam
lds
fistp
shr
cmc
cld
in
inc
mov
xor
mov
push
pop
sti
jmp
cwde
aam
les
inc
les
aam
(bad)
push
and
dec
das
jb
imul
inc
aad
xor
xchg
gs
mov
test
pop
or
pop
xlat
fs
mov
jb
inc
jbe
mov
sub
leave
test
es
inc
fisttp
mov
in
mov
gs
ss
adc
bound
inc
sub
push
icebp
sub
jge
bnd
fild
out
jl
mov
int3
inc
sbb
sbb
into
arpl
pop
mov
sub
sbb
add
(bad)
xor
sub
imul
(bad)
sbb
retf
pop
add
cmps
imul
in
adc
xchg
out
ins
jge
movs
jecxz
(bad)
inc
scas
loop
jg
out
push
aam
(bad)
jo
mov
push
pop
inc
imul
cs
pop
xor
iret
push
xor
loopne
and
out
jo
lods
rcl
or
stc
mov
retf
push
push
imul
out
gs
scas
imul
je
pusha
and
bound
adc
pop
shl
neg
mov
repnz
fistp
outs
dec
push
mov
pop
jb
pop
fadd
pop
loope
dec
ret
repnz
adc
push
fwait
cmp
sbb
sub
dec
outs
in
or
jg
inc
std
jnp
jl
push
nop
or
mov
sub
xor
pop
dec
int3
pop
mov
arpl
inc
lods
in
dec
push
loope
inc
(bad)
std
jl
sar
ret
je
mov
addr16
push
or
mov
inc
fs
cmp
mov
push
jb
fsubr
inc
test
out
sbb
shl
pop
ins
jo
fxch
xor
ficomp
enter
in
pushf
xchg
aaa
mov
mov
jnp
add
repnz
cmps
and
pushf
push
sahf
fnstsw
jmp
dec
gs
push
shl
stos
mov
mov
mov
aaa
aam
pop
es
xor
jmp
(bad)
sbb
cmc
xchg
mov
jle
stos
mov
pop
sahf
add
adc
out
cwde
test
dec
mov
test
sar
adc
ins
sub
je
inc
add
mov
add
ds
in
push
adc
push
pop
sbb
push
jbe
inc
xchg
mov
xor
data16
fwait
mov
(bad)
mov
cmp
ins
stos
test
(bad)
fsubr
dec
loop
cmp
and
xchg
add
sub
pop
lea
pop
les
sahf
int3
cmp
mov
imul
mov
int3
scas
inc
push
inc
lods
mov
int
mul
add
int
dec
mov
pop
xchg
out
jno
xor
retf
push
push
or
adc
cmps
lds
mov
mov
(bad)
adc
sub
inc
sti
pop
dec
leave
cmp
sbb
xchg
push
add
sbb
jmp
test
jno
and
mov
inc
js
or
es
xchg
jle
xlat
clc
outs
(bad)
mov
xchg
ins
aaa
dec
nop
pop
(bad)
inc
cmp
sub
push
xchg
inc
pop
loopne
pop
and
outs
je
dec
stc
sub
int3
bound
adc
loopne
sub
pop
xor
pushf
dec
and
inc
aad
sub
daa
repz
(bad)
stc
les
jmp
xor
in
imul
mov
ins
repnz
push
fdivr
inc
call
mov
push
call
ret
push
and
and
fucom
jecxz
inc
fdiv
cmp
mov
mov
in
cmpxchg
and
mov
cmp
ss
imul
and
in
xlat
xor
add
outs
mov
xchg
(bad)
aaa
cmps
(bad)
and
xchg
inc
xchg
or
add
jnp
inc
loop
mov
aad
dec
sub
push
test
sub
out
xchg
retf
cmps
lock
out
clc
push
push
out
push
lds
push
movs
inc
shr
cwde
mov
mov
shr
push
ret
leave
rcr
gs
enter
gs
aaa
int3
test
stos
xlat
not
sub
or
add
push
lods
xlat
addr16
imul
jecxz
mov
sahf
cmc
mov
outs
dec
in
pop
(bad)
pop
aas
lock
sub
es
jg
fist
inc
outs
loopne
mov
bound
cli
addr16
loope
popa
out
pop
lds
jmp
jne
(bad)
inc
cmp
les
(bad)
cld
push
xchg
call
(bad)
mov
and
mov
jmp
sbb
add
gs
adc
jmp
mov
pop
popa
sub
mov
cmp
dec
xchg
xlat
ror
lds
adc
ds
ja
das
in
jecxz
(bad)
addr16
std
mov
cs
inc
dec
xchg
rcl
fidivr
(bad)
adc
mov
retf
leave
mov
pop
mov
and
icebp
mov
adc
dec
jmp
(bad)
hlt
dec
rol
xchg
and
mov
sub
add
retf
shl
imul
adc
scas
mov
push
inc
sub
sub
js
sbb
mov
fwait
pop
sub
xor
dec
jmp
mov
jmp
or
jns
and
loope
lds
inc
std
(bad)
push
cmp
fsubr
or
add
sub
shl
test
in
push
mov
or
inc
or
loopne
xor
xor
and
std
ins
xor
fstp
cmps
pop
add
jmp
ret
xor
rol
add
pop
out
js
adc
dec
sysexit
jmp
je
sub
push
(bad)
sbb
mov
rcr
pop
idiv
pop
mov
jb
inc
and
sub
push
cdq
fdivr
jle
loope
int3
sbb
and
mov
(bad)
loopne
jno
cs
ret
and
fcmovne
mov
adc
(bad)
mov
fistp
push
dec
aam
outs
xchg
mov
clc
test
dec
(bad)
lods
cmp
int
in
jecxz
dec
fldl2e
push
push
jmp
and
xor
push
enter
xor
push
sti
repz
mov
xchg
dec
test
out
lea
xchg
mov
(bad)
jmp
call
fs
pop
std
fwait
rcr
mov
and
jle
push
sub
sub
jne
cdq
in
pop
inc
cmps
xor
xchg
push
mov
jle
adc
dec
fidiv
inc
adc
cmps
test
mov
clc
mov
iret
xor
popf
adc
rcl
fnstenv
ja
ds
outs
outs
cld
stos
aas
sti
jae
sbb
fist
je
jp
retf
rcl
pop
cmc
(bad)
loopne
imul
adc
(bad)
xchg
ds
dec
xchg
(bad)
adc
mul
mov
mov
xchg
nop
xchg
jbe
std
loopne
(bad)
dec
add
lahf
pop
lods
mov
cmps
xchg
nop
pop
cmp
loop
adc
test
ins
mov
or
dec
push
shr
je
pusha
inc
fist
fdivr
xchg
pop
push
les
outs
jns
push
inc
or
inc
pusha
(bad)
lock
and
jno
jg
push
cwde
xchg
out
and
push
mov
repnz
popa
push
push
scas
jmp
lock
jl
cmps
inc
sbb
ror
pop
sub
ins
int
jns
sbb
imul
clc
xchg
push
fiadd
ret
push
mov
push
loopne
jns
pop
xor
inc
ins
test
add
cmp
add
int3
push
sbb
cmp
sub
test
mov
sub
sar
push
xlat
cmp
inc
lods
dec
push
sub
mov
dec
shl
mov
jb
sub
pop
push
push
pop
nop
cmp
mov
cmp
into
cli
jmp
xor
sub
je
or
pop
jg
enter
rcr
xchg
add
xchg
jle
fmul
ss
retf
adc
mov
mov
(bad)
jp
dec
push
sahf
es
sub
ret
fsubr
imul
sub
aas
and
mov
imul
outs
adc
cwde
adc
dec
mov
sar
push
inc
shl
test
stos
jmp
retf
push
mov
mov
push
aam
loope
adc
pop
je
retf
xlat
and
xchg
inc
lods
push
fwait
movs
das
cwde
retf
data16
nop
sub
frstor
fwait
loope
pop
add
jmp
xchg
mov
mov
mov
aas
es
inc
lods
cmp
sub
mov
and
daa
push
mov
mov
es
push
push
mul
push
shl
cmps
icebp
jmp
sub
and
call
inc
fistp
push
push
mov
push
push
std
ror
xchg
push
out
into
rcl
add
dec
es
fild
mov
es
bound
cmp
retf
xchg
out
fs
mov
jne
scas
enter
(bad)
xor
mov
in
out
gs
iret
popf
lods
jmp
sub
jb
sti
cmp
push
test
sti
(bad)
frstor
jg
sbb
pop
jg
add
or
jl
dec
sti
push
jmp
push
mov
sub
daa
stc
mov
jg
lahf
hlt
mov
and
jge
mov
clc
shl
sbb
imul
dec
enter
hlt
fisub
sbb
dec
gs
push
in
mov
mov
pop
int
and
jne
daa
mov
adc
push
jmp
cs
inc
hlt
fdivr
push
scas
cld
xor
mov
loopne
loope
mov
adc
inc
addr16
adc
or
(bad)
ss
dec
inc
lea
inc
and
xchg
outs
ret
int
and
jo
and
outs
adc
adc
xor
add
adc
jl
pop
xchg
call
shr
mov
add
mov
and
add
mov
les
or
push
outs
into
jg
jmp
xchg
cmps
and
pusha
stos
scas
push
cmp
dec
xlat
dec
jp
mov
xchg
test
aaa
pop
add
mov
movs
pop
mov
dec
jne
mov
iret
xor
sub
outs
ins
mov
mov
hlt
sbb
mov
std
cmp
inc
adc
out
lahf
(bad)
call
inc
adc
xchg
jmp
cli
and
and
les
out
inc
mov
xchg
imul
mov
push
ror
ret
and
neg
das
xchg
fdivr
sar
sbb
outs
sysret
xchg
jl
loop
ss
les
pop
pop
dec
and
jno
add
xchg
pop
aam
mov
mov
imul
cmps
xchg
out
ret
sti
cli
or
jle
and
xor
pop
call
xchg
and
fdiv
xor
fwait
popf
mov
add
and
dec
mov
gs
aad
sub
mov
mov
add
arpl
dec
pop
into
mov
(bad)
and
jp
mov
mov
ficom
mov
pop
cmp
push
add
cld
outs
out
ror
adc
out
mov
fs
mov
cmps
dec
fs
int
ret
ins
mov
pop
dec
sub
es
(bad)
push
and
call
mov
test
test
and
data16
mov
adc
inc
ret
dec
in
loopne
(bad)
lock
add
clc
xchg
xor
bound
adc
adc
(bad)
movs
mov
retf
xchg
push
outs
xchg
mov
sti
fadd
push
les
std
push
and
push
mov
inc
cdq
mov
cs
loop
jl
adc
repz
sahf
sti
jle
(bad)
push
mov
or
push
or
dec
rcr
popa
mov
push
mov
mov
shl
jnp
inc
xchg
cdq
dec
mov
push
fmul
sbb
imul
sbb
jp
and
mov
call
xchg
sbb
(bad)
sbb
ins
jle
loope
les
mov
rcr
pop
inc
fcomp
retf
mov
cld
les
pop
cmp
in
push
js
popf
out
int
repnz
test
cmp
popa
jbe
aam
mov
add
add
or
sahf
xchg
jbe
rcl
fsub
dec
rcl
push
xor
ss
(bad)
lahf
(bad)
(bad)
push
lahf
shl
add
scas
repnz
xor
cmps
add
pop
shl
aad
sub
shl
jns
(bad)
jmp
fdivr
std
mov
mov
mov
mov
aaa
into
cmp
mov
mov
popa
jge
sub
adc
pop
sar
dec
(bad)
pushf
mov
ret
mov
inc
xchg
fadd
or
jecxz
sbb
pop
fiadd
aam
mul
shl
(bad)
fdiv
cmps
int3
add
push
xchg
outs
push
leave
add
push
xchg
in
lea
(bad)
into
fwait
sbb
out
and
xchg
call
in
sti
leave
dec
cld
mov
dec
loop
push
sbb
(bad)
sub
mov
in
mov
stc
push
xor
test
out
lds
mov
mov
ja
sti
and
jmp
pusha
sbb
jne
in
mov
pop
ror
mov
call
ins
stos
cdq
mov
jecxz
mov
scas
push
pop
mov
(bad)
cmp
pop
jmp
adc
push
fistp
fidiv
(bad)
push
icebp
sbb
mov
mov
in
inc
mov
or
gs
mov
push
xchg
(bad)
jo
call
mov
div
loop
mov
rol
jae
xor
(bad)
fidiv
pop
mov
sub
ins
in
add
push
push
mov
dec
int3
mov
es
dec
pop
stos
retf
cmp
jne
or
or
and
inc
ds
and
dec
add
test
mov
sti
scas
loope
les
ins
test
xchg
mov
cdq
(bad)
xchg
sub
lods
retf
or
inc
lahf
addr16
dec
add
enter
pop
std
movaps
inc
imul
xor
fmul
mov
mov
movs
pop
xchg
xchg
push
enter
mov
les
xor
mov
scas
mov
sbb
mov
pop
dec
add
xlat
xor
fwait
movs
dec
int
add
ficomp
int
mov
dec
xchg
jnp
xchg
aas
mov
xor
jge
push
and
xor
inc
fisubr
shr
inc
fstp
mov
aaa
xchg
call
xlat
push
shl
inc
in
outs
stc
xchg
mov
outs
aas
imul
gs
pop
fwait
and
out
sbb
push
mov
rcr
sbb
mov
xchg
in
sbb
cmc
cmp
add
pusha
pushf
bnd
add
cmp
das
adc
out
xor
sbb
fucom
ret
and
or
jno
int3
mov
ret
daa
fbstp
(bad)
(bad)
jno
jmp
jo
inc
or
inc
xor
sar
call
dec
test
mov
imul
inc
xchg
movs
adc
mov
stc
leave
jp
mov
mov
cmps
xchg
and
fadd
sub
dec
mov
outs
scas
lahf
ss
push
and
rcl
cmp
mov
pop
xor
cmc
xchg
shl
add
sbb
adc
jle
xor
in
mov
ins
fsub
mov
pop
dec
loope
je
aad
shl
call
sub
lea
std
lock
jle
mov
retf
in
inc
cmps
cmp
xchg
jb
repnz
repnz
mov
daa
xchg
(bad)
xchg
les
pusha
mov
ficom
inc
cmp
mov
pop
into
sub
icebp
cmp
push
cld
cli
cmc
(bad)
ins
(bad)
rol
out
cdq
mov
xchg
mov
cmps
(bad)
pop
push
adc
xor
lock
dec
mov
mov
cmps
scas
ins
ret
lahf
sbb
add
xor
cmp
fdivp
retf
in
mov
shr
scas
inc
stos
pop
shl
repz
pcmpeqw
inc
inc
cmovg
das
ret
jmp
pop
pop
cs
nop
pop
and
jb
ret
or
test
fcmovnbe
mov
ins
xchg
cmps
inc
scas
icebp
(bad)
fstp
je
pop
xchg
cmp
(bad)
mov
pushf
sub
xor
jne
lods
dec
or
lock
push
sbb
fs
mov
cmp
retf
out
mov
xchg
cmc
inc
xor
or
arpl
xchg
sahf
cld
outs
fs
push
and
push
pop
dec
movs
mov
push
or
jp
mov
nop
and
imul
pop
test
aaa
clc
push
int
loope
and
aad
adc
shr
sahf
stos
and
mov
imul
sar
std
enter
test
cmps
inc
sbb
nop
lock
into
rcr
sti
xor
xchg
jle
mov
mov
test
cmp
(bad)
fst
in
lods
bound
push
mov
jnp
ja
xor
pop
outs
in
rcl
test
jns
xor
mov
mov
add
outs
shr
pushf
loopne
popf
dec
sbb
mov
xlat
xchg
loop
std
daa
sub
pop
push
add
and
mov
js
mov
inc
xor
jp
test
cdq
in
push
pop
jge
inc
push
out
nop
cmp
and
in
dec
jmp
mov
push
sub
push
jmp
arpl
mov
ret
movs
jg
idiv
neg
addr16
out
and
je
and
cld
ret
mov
mov
iret
ret
fs
xchg
stos
sub
pop
jge
and
dec
mov
cmps
mov
dec
jp
ret
retf
mov
ins
sbb
dec
pop
sbb
dec
outs
(bad)
lods
adc
hlt
jmp
push
ror
mov
dec
inc
push
push
and
inc
xor
shr
das
xor
out
xchg
xchg
call
xor
sbb
push
outs
test
dec
fwait
aad
cmp
iret
add
adc
jmp
add
fcmovne
sbb
xchg
adc
sbb
aaa
es
fwait
ret
cmp
dec
dec
sub
lods
mov
dec
or
jnp
cmp
and
scas
fisub
adc
cli
add
cmp
xchg
test
adc
test
sub
pop
mov
call
mov
adc
cmp
call
ret
daa
fs
jl
adc
int
ja
fidivr
xchg
push
stos
call
test
out
xchg
(bad)
xor
cmp
mov
call
jge
iret
sbb
cmc
cmps
push
dec
push
gs
retf
ja
mov
popf
cld
sub
and
out
test
jae
or
int3
stc
and
ficom
pop
cli
xchg
jno
inc
out
or
cmp
(bad)
pop
mov
xchg
retf
dec
shl
dec
xchg
pop
mov
or
scas
mov
stc
mov
push
addr16
js
and
jmp
jmp
jmp
ficom
outs
sub
jg
scas
lods
in
pop
adc
jle
jo
sub
push
xchg
inc
cmp
fs
xchg
scas
push
ficomp
stos
jo
and
add
das
cmc
cmps
fwait
jmp
inc
mov
sti
cdq
mov
inc
test
dec
push
out
or
(bad)
call
fsubrp
inc
and
iret
loope
imul
into
loop
pop
dec
or
jnp
sbb
and
push
sub
sub
shl
push
lods
mov
cmp
jae
mov
push
xor
xchg
and
push
push
sub
push
scas
std
jmp
cmp
out
int
push
add
mov
push
and
popa
es
inc
aas
test
mov
mulps
(bad)
push
sub
add
arpl
mov
test
mov
xchg
movs
int
lock
inc
mov
adc
jno
inc
jmp
inc
sbb
sub
bound
popf
mov
jb
jnp
or
jle
fwait
push
dec
cmps
inc
pop
loopne
mov
repz
popf
das
adc
in
rcl
pop
push
add
jb
fdivr
sbb
dec
imul
(bad)
ja
icebp
lahf
jnp
or
adc
dec
sbb
stc
(bad)
lds
aaa
jmp
adc
mul
xor
pop
in
mov
in
movs
adc
push
lods
lock
retf
cs
fldcw
sbb
inc
data16
repz
data16
test
xchg
add
xor
cwde
cmp
cmp
inc
push
sub
adc
(bad)
dec
mov
cmp
xchg
bound
call
xor
sahf
push
mov
(bad)
push
inc
xchg
ret
in
sbb
adc
and
mov
pop
into
xor
mov
or
mov
inc
(bad)
(bad)
cmps
cli
bound
inc
rcl
stc
out
adc
imul
mov
call
push
idiv
lock
pop
lock
pop
in
or
cmp
dec
push
xlat
xor
ret
push
lahf
xchg
in
sbb
fld
dec
imul
cwde
mov
cmp
fs
mov
shr
xchg
leave
cmp
sbb
les
dec
(bad)
das
jo
imul
shr
shl
inc
out
rcl
jp
lea
add
bound
(bad)
sub
and
mov
adc
test
das
xor
sbb
arpl
neg
repz
push
add
mov
lods
sbb
add
jg
ins
jmp
repnz
adc
std
pop
mov
push
movs
jb
xor
popa
sbb
jmp
mov
int
push
push
sbb
jg
imul
jo
xchg
jle
mov
clc
outs
dec
daa
popa
push
leave
aas
pop
leave
sti
movs
sbb
stc
popf
es
call
push
jns
adc
or
cmp
mov
adc
xchg
rcl
(bad)
(bad)
cmp
int3
jg
push
sbb
xchg
int3
outs
xor
push
push
call
push
call
cld
add
(bad)
dec
sub
neg
sub
xchg
sub
pop
(bad)
or
add
in
sar
mov
(bad)
mov
retf
fbstp
sbb
mov
iret
add
adc
(bad)
jno
jmp
and
ror
and
mov
in
dec
aad
into
pop
pop
(bad)
mov
ret
pop
in
adc
std
ret
mov
add
ds
cmc
inc
pop
cmp
mov
mov
or
inc
inc
cmp
inc
pop
fadd
or
pop
xchg
es
sar
add
hlt
sub
ins
sub
mov
xlat
add
jnp
ror
push
hlt
xlat
frstor
or
jbe
rol
loop
mov
jae
xor
xor
add
enter
mov
or
pop
fcmovb
enter
cld
mov
dec
or
adc
adc
push
adc
stos
cmp
cs
adc
xchg
push
push
add
arpl
adc
aam
push
sahf
pop
daa
cmps
popf
sbb
jmp
fild
cli
int
push
push
add
push
in
cdq
mov
clc
jns
int3
and
adc
outs
mov
shl
pop
out
mov
imul
cld
pop
mov
pop
fdivr
std
and
leave
fmul
das
cmp
sbb
bound
imul
les
jmp
adc
aas
test
fwait
sub
sahf
xor
xor
lds
sbb
ss
movs
(bad)
in
cmc
sbb
push
xor
or
mov
cs
mov
scas
in
sbb
sbb
sbb
in
and
es
mov
scas
xchg
sar
sub
jae
push
rol
test
test
and
jp
loope
push
pusha
scas
int3
(bad)
mov
outs
pusha
loop
movs
mov
cmp
loopne
mov
fcomp
push
psrld
sub
push
mov
sub
cmc
clc
in
popa
mov
inc
sbb
jl
aaa
fsub
mov
out
push
or
mov
xor
mov
outs
sahf
mov
in
repnz
stos
add
mov
(bad)
test
cmp
xor
mov
inc
mov
stos
cs
repnz
(bad)
fmul
inc
movs
test
in
lock
dec
call
(bad)
pop
add
cmp
add
pop
ja
lahf
xchg
shl
pushf
leave
push
inc
pop
jge
out
(bad)
int3
jg
repnz
add
add
lea
xlat
add
inc
das
aam
lods
inc
pop
xchg
cmp
cld
stos
in
mov
lahf
jmp
mov
jge
and
fdiv
mov
sub
hlt
in
add
mov
into
pop
jle
mov
push
stos
xchg
test
repz
or
enter
xor
dec
and
xchg
push
xor
xor
sbb
call
inc
(bad)
mov
retf
imul
repnz
popf
pop
sub
mov
jmp
and
pusha
in
enter
in
test
xor
xor
pop
xor
aad
xchg
and
xor
in
pop
mov
aad
push
ins
loop
push
dec
cmp
cld
fld
cmp
sub
pushf
sbb
gs
xor
repz
mov
mov
lds
(bad)
outs
cmps
mov
dec
xchg
sar
pop
inc
push
mov
mov
jg
push
or
fdiv
ja
jae
jge
adc
mov
add
xor
add
call
in
mov
xchg
adc
mov
test
xor
hlt
mov
out
fdivr
or
fwait
push
cmp
clc
xchg
adc
scas
(bad)
ss
(bad)
lods
cmp
lea
cmp
shl
xchg
jg
dec
xchg
add
out
mov
and
leave
dec
ret
jmp
fiadd
xchg
int
dec
jae
aam
inc
jo
cmp
mov
push
shr
mov
fld
add
test
mov
inc
dec
mov
test
popf
xchg
inc
sbb
ins
retf
cli
mov
mov
xchg
fdiv
and
sti
sub
fild
(bad)
arpl
mov
pop
movs
not
sub
and
and
dec
clc
sub
jg
(bad)
pusha
retf
push
popf
and
sbb
mov
cmps
push
pusha
leave
call
jbe
icebp
stos
inc
fist
std
mov
and
cdq
cwde
fwait
test
(bad)
adc
aas
enter
pop
inc
mov
jge
pop
mov
jp
(bad)
adc
rcr
add
or
ins
xchg
mov
leave
xchg
sar
sub
adc
outs
stos
mov
rol
stos
jbe
pop
and
call
mov
fcom
ds
or
ins
cdq
(bad)
pop
jo
mov
sub
scas
out
cmc
xor
fs
xor
lock
cmp
xor
pop
in
enter
mov
xchg
inc
(bad)
into
out
cmps
lods
test
push
mov
ins
xchg
sub
jo
sti
xchg
xchg
xchg
mov
clc
push
push
loope
inc
es
push
jo
mov
adc
cmp
data16
fidivr
gs
and
xor
jg
sbb
retf
add
sub
add
mov
mov
jne
mov
adc
pop
inc
fist
mov
cmp
lea
sub
arpl
push
shl
mov
stos
push
dec
(bad)
out
xor
ffree
push
xchg
sbb
in
xlat
bnd
add
mov
cmp
cmp
sbb
push
sub
pop
pop
add
repz
inc
outs
dec
aam
out
sub
jnp
dec
movs
xor
xchg
movs
wrmsr
sub
int
mov
dec
xor
push
popf
and
sub
sub
lods
repz
js
sub
bound
out
adc
push
sahf
or
jle
sbb
add
dec
std
mov
icebp
adc
jae
sub
retf
sahf
iret
gs
dec
pop
mov
sbb
iret
mov
(bad)
mov
or
sbb
mov
lahf
dec
cld
fcomip
sbb
jno
lock
mov
or
or
aad
or
mov
sti
mov
frstor
jmp
mov
aad
pop
call
fiadd
lds
stc
mov
and
push
mov
enter
aad
test
retf
fcomp
fadd
lds
xor
jo
sub
add
xchg
mov
fldcw
sub
pushf
(bad)
test
cmp
pusha
enter
jne
aam
pop
stc
dec
mov
xor
xchg
(bad)
jecxz
repnz
pop
pop
cmps
inc
xchg
inc
dec
cmp
mov
push
inc
push
mov
ins
and
ins
lods
pop
pop
inc
pop
sbb
cld
pusha
or
pop
ins
sbb
ins
pop
add
xor
mov
adc
popa
xchg
shl
dec
fwait
pop
into
(bad)
loope
enter
shl
inc
call
push
loop
push
loope
in
add
ret
nop
cli
mov
mov
mov
addr16
cmp
mov
lods
pusha
dec
jmp
icebp
sbb
pop
and
adc
addr16
fidiv
inc
adc
push
dec
scas
sar
push
lods
mov
gs
push
jbe
outs
cli
push
ss
int
out
(bad)
shr
mov
pop
sub
lahf
xor
sub
jmp
push
add
aas
das
xor
pop
or
push
test
clc
adc
inc
mov
push
iret
mov
xchg
cmp
call
push
push
out
mov
xchg
inc
inc
jae
push
cmp
aam
xchg
ds
bound
mov
(bad)
enter
inc
push
lods
pop
or
or
or
ins
inc
cmp
ja
mov
idiv
xchg
add
(bad)
je
sbb
fild
adc
stc
mov
sbb
xor
and
cmp
xor
es
cmp
out
lahf
sbb
mov
mov
in
sbb
stos
mov
and
xchg
gs
jno
or
fnstcw
xchg
xor
ins
enter
push
aaa
xor
(bad)
(bad)
ins
push
aam
shr
or
and
jb
addr16
test
repnz
pop
sub
mov
push
(bad)
aam
jo
xchg
cmp
add
xor
fwait
in
retf
lods
mov
cmp
xchg
sub
daa
cmp
sbb
push
xchg
test
xor
jns
inc
dec
js
push
mov
jl
test
xchg
lea
xchg
sub
das
pop
add
pop
retf
mov
push
out
test
lea
clc
and
jl
xchg
sti
mov
pusha
pop
pop
jnp
in
mov
test
enter
jl
out
nop
mov
jb
jmp
sub
lock
adc
aaa
clc
ins
fcmove
or
push
(bad)
jle
std
add
out
outs
pop
popf
push
(bad)
inc
adc
ins
sbb
push
push
loop
ins
jns
mov
push
div
mov
loope
pop
ret
sub
sti
xor
dec
push
sub
dec
cmp
sub
fwait
mov
inc
push
hlt
repnz
hlt
xor
or
mov
mov
add
mov
inc
or
scas
push
inc
cld
les
(bad)
xchg
test
(bad)
in
bound
outs
(bad)
push
or
inc
repnz
mov
pop
rcr
mov
jns
jecxz
scas
add
jmp
cdq
mov
inc
or
fstp
xor
je
sbb
ins
imul
xor
jno
outs
sub
mov
or
pop
call
and
jle
test
pusha
(bad)
test
xor
das
icebp
cmps
push
dec
or
push
imul
out
fbld
jae
mov
mov
sbb
cld
(bad)
fsubr
cli
inc
inc
xor
inc
(bad)
repz
mov
adc
sub
add
dec
nop
rcr
lahf
imul
scas
or
push
ret
leave
mov
repz
jmp
sbb
and
push
iret
or
jmp
cmc
mov
jecxz
nop
retf
stc
jmp
xchg
test
jnp
cmp
inc
dec
cmps
outs
mov
das
and
in
aam
ss
add
retf
cmp
and
dec
cs
clc
cmp
gs
push
cs
jno
jae
mov
inc
(bad)
pop
add
mov
aad
pop
mov
out
loop
adc
in
(bad)
aaa
fwait
mov
loop
imul
mov
jmp
rcr
cmp
aaa
mov
mov
push
stos
dec
adc
cmps
mov
in
xchg
(bad)
jmp
pop
mov
mov
sbb
mov
aaa
inc
icebp
pop
sub
or
sbb
repz
(bad)
sub
pop
xor
outs
sub
pushf
out
push
cmp
push
je
cvtpi2ps
sbb
mov
je
enter
test
cmp
mov
lods
xchg
rcl
mov
adc
jge
imul
push
lds
ins
push
in
sbb
das
jmp
scas
shr
cmp
ret
cmp
pop
push
push
mov
or
sti
sub
out
xor
sar
test
out
stc
stc
mov
js
cdq
push
dec
test
adc
sbb
outs
mov
push
repnz
inc
dec
push
jle
call
into
repz
adc
xor
fdivr
in
pop
ss
or
add
(bad)
push
jmp
imul
add
push
iret
cpuid
arpl
jmp
in
jbe
repz
adc
pop
pop
lods
lock
frndint
xor
sbb
outs
inc
sub
fimul
test
repz
jmp
sbb
ss
xchg
aas
icebp
xor
push
xor
rep
outs
or
mov
test
or
and
movs
sbb
xchg
push
pop
or
xchg
int
jmp
jo
xor
sbb
mov
ror
jmp
xor
mul
sub
mov
cdq
xchg
adc
xor
mov
xchg
mov
add
pop
sbb
mov
dec
cwde
(bad)
out
stos
test
int3
sub
(bad)
cmp
xor
dec
mov
pop
(bad)
jmp
mov
adc
out
xor
xor
movs
xchg
loopne
jns
mov
lock
mov
in
call
std
shl
pop
test
clc
fcomp
neg
out
mov
cmps
sti
jnp
push
lock
(bad)
and
sub
sub
enter
(bad)
iret
(bad)
pop
scas
dec
rcr
cmp
adc
mov
jmp
mov
outs
sbb
mov
adc
and
leave
mov
and
lock
mov
sub
mov
adc
xchg
sub
scas
retf
push
fnstcw
adc
xor
fstp
mov
and
xchg
xlat
std
retf
retf
jecxz
daa
scas
dec
mul
mov
pusha
out
sbb
rcr
and
xchg
lock
xchg
gs
xor
jae
fs
xchg
inc
scas
mov
daa
aad
mov
(bad)
test
jbe
shl
pop
jb
adc
sub
(bad)
mov
dec
or
sub
ins
dec
cmps
scas
xor
inc
and
dec
je
push
dec
sbb
sub
cmps
sbb
jne
inc
xchg
and
xchg
popa
in
mov
sbb
cmp
iret
mov
sub
push
rol
xor
clc
cmp
sti
mov
mov
sub
jecxz
bound
ins
xchg
cmp
mov
pushf
loop
nop
xchg
inc
cmps
test
or
lds
test
ror
pop
xor
mov
loope
cmps
fld
jns
and
aam
stc
inc
setge
scas
dec
inc
loopne
int
xchg
pop
jecxz
push
sar
sbb
(bad)
and
xchg
vpackuswb
bound
xlat
scas
sub
ds
(bad)
mov
push
enter
jae
cdq
and
mov
jmp
or
outs
mov
adc
scas
sub
jmp
sub
daa
sbb
dec
(bad)
out
rcl
call
pop
in
mov
sbb
xchg
add
sbb
xor
cwde
sbb
pop
push
sbb
sub
inc
in
aas
mov
mov
call
inc
cmps
pop
jb
stos
sub
fnstenv
ret
dec
jbe
and
out
push
push
add
mov
loopne
adc
mov
add
sbb
fdiv
pop
fdiv
pop
jnp
jo
sbb
add
pop
add
xor
cmp
or
fmul
jl
adc
fadd
mov
push
jg
fsubr
arpl
call
add
and
fstp
sbb
popf
dec
push
outs
mov
adc
pop
sbb
fucomp
rcl
pop
jl
imul
or
imul
loope
aas
(bad)
(bad)
inc
add
outs
push
daa
ss
dec
retf
fadd
test
lock
sbb
fdivrp
and
(bad)
xor
pop
ret
sub
pop
and
aaa
je
lea
dec
adc
mov
cmps
es
xchg
clc
push
ret
inc
push
ja
cmp
mov
scas
cmps
xchg
and
test
xchg
loopne
test
cld
(bad)
hlt
mov
push
cmp
clc
mov
sbb
push
xchg
hlt
repnz
xor
pop
ds
loope
cwde
mov
mov
movs
jecxz
aas
call
pop
lahf
mov
xor
mov
mov
hlt
loopne
es
in
jb
cwde
ds
inc
pop
fsubr
gs
push
mov
xchg
jne
and
push
cmps
pop
into
sbb
mov
aam
in
jb
dec
mov
push
rcr
push
ins
mov
pop
inc
fldcw
retf
cmp
or
push
adc
add
mov
mov
sar
arpl
sub
sub
dec
addr16
dec
mov
dec
sahf
bound
fs
inc
cmp
xor
push
jge
arpl
test
xor
js
sti
sub
retfw
shl
dec
mov
pop
mov
pop
shr
sar
dec
jns
std
popf
xor
mov
or
or
sub
mov
jnp
sar
pop
mov
sbb
cmp
pop
pop
(bad)
pushf
pop
adc
push
pop
push
test
sub
push
sub
jo
mov
fucomip
xor
retf
dec
jno
(bad)
mov
into
inc
rcr
or
mov
out
pop
xchg
dec
push
clc
stos
out
xchg
mov
syscall
and
push
xor
jl
stos
fadd
pop
dec
xchg
add
call
mov
call
push
push
mov
adc
test
jmp
xchg
jo
add
and
hlt
int
leave
shr
cmp
lods
ret
ficomp
xchg
popa
mov
xor
pushf
add
or
nop
(bad)
or
pop
mov
push
sahf
aam
pop
or
and
sbb
and
pop
push
xor
jge
adc
out
sbb
dec
sub
sar
cmc
ret
addr16
movs
test
shl
mov
jne
push
data16
div
fsubr
cmp
scas
inc
popf
fldcw
adc
lea
loope
push
popf
mov
fidivr
out
inc
lods
jmp
push
out
out
test
xchg
push
push
xchg
call
pushf
mov
inc
ret
jno
mov
jno
pop
jbe
in
stos
cmp
lock
push
ret
dec
jbe
dec
sub
test
mov
xor
xlat
shl
aaa
lahf
add
test
inc
lock
jp
adc
sub
pushf
jg
fs
jp
add
jbe
enter
les
daa
retf
loop
adc
pop
dec
test
xchg
into
pusha
fsubr
push
jmp
or
jmp
popa
scas
fistp
xor
dec
and
(bad)
in
and
pushf
dec
imul
mov
push
add
pop
push
xchg
jle
inc
sub
ret
data16
xor
push
mov
push
out
mov
jge
hlt
stc
mov
mov
fcomp
cdq
mov
std
cli
out
and
std
mov
cli
mov
or
dec
retf
add
push
sub
jnp
pop
rol
xor
repz
fst
stos
mov
cmp
int
test
xor
das
jp
cmc
scas
sbb
adc
mov
sbb
sub
pop
xchg
dec
stc
add
lock
lods
pop
xor
fwait
retf
mov
or
jmp
mov
jp
cmp
push
sbb
sbb
xadd
jmp
add
test
mov
jns
cmp
ret
mov
out
cmps
loope
movs
fwait
ror
sub
and
retf
sub
es
sub
(bad)
dec
(bad)
inc
cmp
mov
xor
popf
shr
mov
and
and
jne
cld
pop
or
cmp
xchg
adc
mov
data16
xor
mov
les
xor
inc
and
mov
push
sbb
or
setne
dec
xchg
idiv
lods
or
in
inc
dec
mov
in
div
dec
xchg
fadd
enter
adc
jmp
test
ds
push
mov
repz
add
dec
dec
jbe
in
jmp
enter
xchg
jmp
xor
pop
and
rcr
mov
jne
(bad)
sar
sahf
add
je
sub
mov
std
xchg
push
cmp
ret
je
or
mov
xchg
ins
nop
int
jp
call
mov
adc
xor
sbb
movs
je
addr16
xchg
scas
mov
cmp
adc
leave
lods
adc
mov
pop
mov
inc
loope
xor
std
inc
sahf
idiv
daa
inc
or
movs
sub
rcr
lahf
inc
pop
test
and
mov
dec
xor
lahf
sbb
mov
push
jb
inc
mov
and
jmp
shl
mov
adc
ficomp
fcmovnu
cmps
mov
dec
sub
push
xchg
mov
lea
jbe
cli
(bad)
mov
jmp
push
mov
call
xlat
movs
int3
adc
jnp
or
cmc
fcomp
cli
pop
inc
shl
xor
data16
add
xchg
push
xchg
mov
xor
sub
stos
xchg
cmp
mov
sub
out
inc
repnz
ja
in
xlat
or
xlat
das
pop
xchg
jmp
inc
enter
std
add
xor
jge
fmul
scas
aaa
mov
jo
pop
nop
push
mov
scas
adc
and
cmp
bound
retf
pop
bound
and
(bad)
sub
sbb
cmp
jo
pop
test
sar
pop
outs
mov
mov
sbb
lea
ins
cs
lock
in
xchg
and
cmp
popf
sbb
pop
imul
fnsave
repnz
sbb
push
inc
gs
pusha
mov
inc
mov
push
out
push
scas
sub
ret
xchg
inc
arpl
out
fs
push
push
and
dec
cmps
sahf
outs
inc
jl
lods
repnz
mov
aad
xchg
jge
or
dec
and
mov
inc
mov
sub
sub
push
sbb
rol
add
add
mov
push
dec
retf
jl
xor
xor
mov
add
in
push
scas
sar
cwde
pop
xor
ret
or
jbe
mov
push
call
bnd
ror
popf
push
xor
ret
cli
popf
push
xor
cmc
push
nop
adc
cmp
jo
adc
clc
stos
jmp
shl
mov
call
xchg
out
cdq
popa
loop
mov
adc
test
push
mov
sbb
cdq
fcom
inc
inc
mov
inc
fs
push
push
jl
add
int3
sahf
arpl
dec
retf
(bad)
or
add
lods
neg
std
sbb
pop
cli
jne
jno
es
(bad)
mov
inc
sub
pushf
bound
addr16
mov
rcl
adc
push
pusha
sahf
push
rol
push
mov
call
pop
add
jecxz
sbb
mov
cld
mov
fisubr
jle
mov
cmp
ja
dec
stos
scas
(bad)
inc
repz
sar
data16
ds
mov
pop
jl
jecxz
dec
dec
ss
push
inc
mov
arpl
xchg
mov
inc
cld
loopne
js
fbld
outs
into
push
ss
pop
mov
push
sbb
aaa
or
pop
jbe
pop
fstp
xchg
nop
out
cmp
movs
xor
std
aad
div
popf
pusha
mov
or
in
aaa
aaa
jns
shl
mov
div
fld
fcomp
loop
cmps
add
not
push
in
fwait
push
adc
les
mov
into
imul
aad
popf
mov
rcr
jmp
pop
and
shr
add
out
mov
dec
push
mov
outs
dec
jmp
psrad
movs
rcl
lock
sub
call
or
mov
sub
outs
or
or
addr16
fs
and
adc
inc
xor
mov
fisttp
sub
push
retf
repz
movs
dec
lods
dec
addr16
lods
aam
push
pop
in
mov
dec
cdq
(bad)
ins
sub
les
push
cmp
adc
push
jle
mov
and
rol
iret
sub
pop
popa
lods
mov
jmp
leave
daa
xchg
aam
push
inc
dec
dec
or
push
or
(bad)
xchg
adc
adc
or
push
mov
in
movs
mov
bound
rcr
mov
ret
push
icebp
inc
pcmpeqb
hlt
cmp
imul
cmc
out
xchg
pop
jmp
sbb
and
rcr
mov
cdq
jne
(bad)
cmp
push
cmp
pop
test
sbb
cmp
add
mov
in
cmps
repz
jle
pop
(bad)
and
pop
sbb
icebp
pop
push
lahf
movs
fild
out
dec
or
cmc
jecxz
clc
test
xchg
cld
pop
repnz
pop
or
aam
push
dec
dec
sbb
jmp
loope
cmps
fbld
aaa
dec
add
pop
addr16
test
jns
xor
call
in
inc
movs
loop
dec
sub
in
aas
jmp
imul
mov
mov
sub
mov
outs
aaa
mov
popa
push
sbb
inc
xchg
dec
mov
xor
adc
cdq
stc
jne
mov
int
aaa
out
sub
jp
scas
test
sub
mov
dec
(bad)
dec
mov
dec
mov
and
jo
push
ret
mov
jb
cmp
dec
jg
jmp
mov
ja
or
idiv
adc
mov
cmp
cwde
lods
xor
adc
stos
add
mov
xor
call
outs
cs
jge
add
or
push
popa
loopne
ror
and
dec
std
cmc
(bad)
lods
add
dec
jbe
int3
push
repnz
movs
and
sbb
sub
dec
out
js
aam
imul
aaa
and
jmp
mov
lds
fisub
lods
push
pop
in
jg
(bad)
cld
rcl
adc
mov
ret
retf
leave
scas
rcr
jg
rcl
dec
pop
fsub
jns
mov
and
dec
pushf
out
sbb
sbb
test
popf
fnstenv
imul
arpl
aas
repz
fadd
inc
pop
and
push
jne
daa
or
push
out
dec
mov
scas
xchg
adc
inc
fbld
loopne
(bad)
fnsave
int
inc
add
add
call
movs
cmp
adc
jae
lahf
sub
shl
cmps
mov
idiv
fisub
inc
xor
sub
(bad)
sub
mov
mov
sub
call
rcl
fiadd
outs
stos
jo
mov
cmps
push
sub
fnstenv
jle
pop
loopne
push
dec
cmp
outs
test
xor
adc
inc
pop
je
jnp
pop
cmp
add
sub
inc
pusha
lods
xor
add
push
rcl
call
cmp
int
aad
push
inc
jl
ins
sar
add
xchg
(bad)
lods
hlt
and
mov
retf
loopne
and
icebp
js
add
mov
fwait
add
push
inc
pop
mov
dec
inc
jnp
mov
sub
mov
xchg
addr16
es
xor
jns
test
fild
and
jnp
stos
push
shl
dec
sbb
jp
test
stc
pop
das
and
pop
push
cmp
or
mov
(bad)
rcl
xchg
cdq
jne
retf
dec
mov
call
or
shl
test
lods
rcl
ins
mov
aad
pop
lea
xchg
clc
fucomip
add
(bad)
dec
fld
enter
and
jmp
stos
loope
(bad)
(bad)
dec
sar
xchg
push
sar
fcom
bound
outs
mov
pop
stos
lods
test
rol
push
mov
cmp
movs
mov
mov
adc
out
cdq
addr16
cmps
jae
add
std
je
push
pop
fnstsw
jge
mov
xchg
xchg
into
sbb
loopne
ja
add
xor
xchg
jo
arpl
mov
adc
into
cli
je
push
nop
call
push
scas
out
sbb
hlt
push
int
add
mov
ins
cli
xor
xchg
or
mov
push
paddw
cmp
adc
fwait
sub
ins
test
push
(bad)
mov
(bad)
pop
into
inc
xchg
nop
adc
mov
dec
test
push
sub
iret
fst
loopne
retf
cdq
lock
push
jg
sbb
mov
jecxz
xor
push
push
std
test
lea
cmc
inc
mov
ds
lods
push
jmp
popa
xchg
ffree
stc
cdq
arpl
pushf
mov
ret
sbb
xchg
ror
jmp
in
sar
push
adc
add
push
sbb
mov
sbb
add
cmp
imul
sbb
jae
cmp
lods
mov
pop
loop
scas
mov
mov
pop
mov
(bad)
pop
push
mov
mov
into
bound
std
jp
adc
rcr
push
jge
ror
pop
ja
mov
sbb
mov
(bad)
pop
lods
pop
into
mov
loopne
mov
sbb
mov
movs
(bad)
movlps
pop
shl
mov
pop
lahf
mov
jge
js
sbb
mov
ror
cmp
int
stos
test
pop
and
rcr
fld
(bad)
add
jns
push
adc
(bad)
ret
inc
es
mov
and
push
xor
outs
adc
adc
jns
icebp
hlt
inc
das
lds
sub
sub
sar
adc
mov
jmp
pop
mov
push
adc
aam
mov
push
mov
in
cwde
and
(bad)
mov
and
dec
mov
mov
fisub
into
jmp
dec
in
inc
(bad)
sbb
fdivr
ins
mov
or
sar
call
xchg
xchg
jnp
rcr
sub
shr
test
aaa
jb
cdq
push
icebp
out
inc
inc
mov
out
inc
xor
mov
xor
dec
aam
mul
in
mov
add
loopne
std
sti
stc
popa
mov
or
jle
and
or
cld
cmps
data16
out
pop
in
push
mov
jp
xchg
fisubr
mov
addr16
imul
jno
or
jne
pop
pop
repz
mov
mov
in
pusha
dec
xchg
test
push
dec
push
out
mov
xchg
push
push
dec
dec
push
mov
in
dec
(bad)
movs
mov
or
mov
pop
add
mov
add
aaa
or
mov
or
into
dec
mov
push
mov
cmp
mov
mov
jecxz
cmp
fidivr
and
sbb
xchg
xchg
cmps
xchg
mov
pushf
in
jbe
mov
fcomip
aam
adc
rol
repnz
inc
sbb
enter
push
(bad)
xchg
push
cmps
(bad)
mov
jb
adc
xor
call
jbe
cdq
and
ds
sub
in
retf
cmps
imul
(bad)
mov
(bad)
mov
jmp
lahf
mov
sbb
cli
sub
jmp
aad
fld
xchg
(bad)
in
jmp
dec
mov
sahf
pop
in
and
in
ins
aas
popa
sub
gs
pop
(bad)
test
cmp
pusha
(bad)
hlt
ds
out
xor
test
ins
inc
int
sbb
popa
xor
in
lods
sbb
pop
add
js
sub
shl
mov
(bad)
stc
xlat
into
ja
popf
mov
and
scas
cs
repz
ret
loop
dec
lods
push
sub
jns
int3
sub
push
xor
or
sbb
xchg
pop
retf
xlat
push
adc
sbb
mov
inc
jmp
xchg
popf
lahf
mov
mov
repz
hlt
mov
mov
pop
xor
inc
push
(bad)
loope
aam
adc
cli
test
push
sub
(bad)
dec
xor
inc
aad
push
movs
mov
les
cmps
xlat
stos
push
add
pop
outs
push
mov
add
shr
dec
mov
sub
mov
dec
xor
cmp
fild
push
ins
mov
mov
push
fstp
mov
push
sub
inc
jno
lock
rcl
mov
(bad)
fcom
cvtps2pi
dec
mov
aaa
(bad)
jecxz
mov
xchg
mul
fdivr
and
test
xchg
mov
push
pusha
dec
push
add
and
cwde
arpl
cli
and
out
xor
cwde
mov
push
dec
jns
cmp
cmp
fld
ins
mov
(bad)
out
into
inc
push
stc
push
sub
daa
lods
pop
(bad)
addr16
and
test
xor
js
jmp
jp
dec
xchg
test
movs
lods
push
and
in
jge
xchg
mov
sub
xor
sub
fcomp
dec
ins
push
je
pop
sbb
xor
inc
ret
and
jge
call
fistp
jb
xor
inc
xor
addr16
test
xchg
bound
int3
lock
dec
cmp
ja
pop
in
cld
ins
sub
push
sbb
sbb
add
pop
in
in
xlat
pop
mov
retf
out
inc
jmp
out
sub
dec
(bad)
cwde
daa
sbb
call
mov
sbb
jo
outs
or
sub
jns
pop
cmps
push
or
jmp
call
and
dec
imul
dec
jmp
mov
ffreep
aad
sbb
and
mov
neg
int3
pop
retf
cmps
not
pushf
popa
pop
cmp
mov
in
(bad)
std
pop
ret
lods
xchg
enter
out
in
lods
mov
cdq
jmp
imul
adc
fldenv
dec
xchg
popf
mov
mov
fninit
xchg
inc
je
mov
scas
leave
push
(bad)
adc
jmp
ds
mov
gs
pusha
inc
repnz
or
shr
in
out
inc
jg
sub
add
sbb
test
mov
repz
daa
out
mov
xchg
jmp
jmp
and
aad
dec
cmp
out
int
mov
jmp
retf
push
cmp
sti
int3
ss
and
jnp
dec
or
rcr
mov
bound
enter
data16
push
scas
mov
daa
add
rcr
xadd
outs
test
cmp
push
jne
xor
pop
stc
sti
nop
inc
cmp
and
cmp
jbe
addr16
push
ret
call
in
pop
cmp
inc
and
jae
jge
cmc
xor
jbe
adc
inc
nop
rol
push
adc
push
xchg
int
dec
push
(bad)
mov
scas
sbb
mov
and
js
cmc
pop
or
ja
(bad)
mov
call
leave
mov
add
(bad)
xor
popf
imul
jmp
lock
lahf
(bad)
mov
movs
popa
pop
cdq
adc
xchg
(bad)
push
leave
hlt
sub
je
test
lods
nop
(bad)
fmul
stc
in
cmps
(bad)
cmc
xchg
call
cmps
jne
dec
sbb
add
jecxz
push
and
stos
xor
sub
ror
aam
cld
cmp
add
movs
cmp
fwait
mov
jns
(bad)
push
ins
or
mov
popa
mov
sub
fidiv
mov
daa
movs
dec
ins
fcmovu
ins
es
sar
imul
or
cs
cmp
pop
cmps
sahf
das
and
sbb
sub
popf
test
pop
dec
add
mov
and
jo
popa
jbe
dec
loop
shr
mov
or
dec
xor
aaa
push
sbb
and
cwde
and
jmp
std
dec
or
dec
cmc
pop
fild
test
mov
je
push
push
mov
push
aas
aaa
mov
sbb
test
push
xchg
scas
push
repz
test
mov
xchg
cs
pop
sbb
adc
ins
push
imul
popf
iret
aas
idiv
xchg
fcomp
stos
adc
cmp
js
or
pop
call
mov
sub
mov
clc
(bad)
dec
in
gs
in
scas
stc
xchg
es
cwde
fadd
jge
out
int
cmp
into
jge
xchg
mov
call
add
pop
fsubr
(bad)
loopne
sub
add
loopne
scas
or
and
jae
repz
shl
aaa
shr
mov
imul
out
mov
loop
cdq
sbb
out
into
jae
add
xchg
xchg
fwait
sahf
stos
dec
and
pop
pop
xchg
call
out
adc
pop
xchg
call
xlat
jns
or
call
xchg
xor
jo
adc
push
fwait
test
lods
test
and
loop
dec
js
repnz
ja
popa
mov
xchg
or
xor
shr
jmp
dec
jmp
cmp
in
arpl
or
adc
mov
and
mov
mov
retf
jle
out
jge
mov
push
shl
adc
in
ins
adc
jle
call
mov
and
movs
mov
inc
mov
out
lods
dec
xchg
add
aaa
cmp
push
call
sub
push
popa
pop
jno
fisttp
movs
gs
mov
(bad)
mov
je
scas
push
lods
popa
packssdw
lds
cmps
mov
loop
or
dec
scas
xor
mov
xchg
ror
push
movs
out
nop
push
iret
inc
js
push
inc
jo
mov
arpl
ret
push
and
and
mov
push
popf
out
xchg
sbb
ins
dec
sar
imul
mov
sub
fcmove
jmp
stos
lds
mov
and
add
mov
push
test
mov
gs
fdivr
fstp
xchg
or
add
xor
jecxz
adc
add
jmp
adc
in
mov
dec
xchg
jns
ret
inc
inc
(bad)
and
mov
dec
xchg
clc
push
mov
jmp
push
call
pop
inc
sbb
lods
arpl
int3
retf
sub
adc
mov
imul
loope
loope
adc
mov
inc
cdq
push
arpl
cmp
adc
sub
push
test
(bad)
pop
in
cmp
dec
xchg
rcr
popf
xlat
mov
inc
scas
fsub
jecxz
xchg
int3
call
in
repnz
mov
lds
or
fisub
test
enter
cmp
in
sbb
hlt
(bad)
sbb
in
aam
test
mov
adc
mov
fsubp
xor
loope
je
adc
(bad)
adc
adc
and
imul
xchg
cdq
fbstp
mov
je
dec
mov
sub
cmp
into
xlat
jp
shl
mov
js
std
adc
mov
(bad)
inc
ret
fbstp
aad
movs
push
loopne
retf
cmc
pop
das
cmps
cli
inc
int
imul
ds
xor
ss
aas
dec
adc
add
gs
mov
dec
cmc
jno
inc
mov
jmp
add
std
jmp
and
add
or
or
(bad)
imul
pushf
mov
push
addr16
int3
stos
inc
cmps
sbb
repz
push
loopne
cs
and
mov
sbb
pop
sbb
aam
bound
or
mov
out
sub
cmp
rol
xchg
ret
mov
cli
pop
jmp
and
mov
imul
daa
imul
mov
lds
ins
add
outs
call
das
out
mov
jbe
or
push
out
inc
clts
pop
xor
(bad)
pushf
shl
push
xchg
jge
or
in
fwait
xlat
sbb
xor
jmp
or
ins
inc
nop
xchg
das
jbe
xchg
mov
push
std
xchg
fcomp
cmps
out
(bad)
mov
std
cli
imul
push
sub
popa
mov
add
push
scas
es
pushf
mov
mov
xchg
bound
jle
push
(bad)
(bad)
ret
adc
inc
and
cwde
in
mov
imul
rol
retf
cmps
add
pop
adc
enter
lods
or
push
push
mov
ds
std
sub
cmc
pop
lahf
aad
div
push
mov
push
mov
cmps
xor
mov
cmp
aaa
dec
hlt
movs
pop
bound
add
and
pop
push
jns
sbb
xor
ss
test
sbb
cmp
jbe
pop
mov
add
pop
cmp
jae
daa
adc
rcr
pop
scas
push
jmp
into
scas
mov
popa
push
inc
in
jns
adc
pop
mov
jnp
add
adc
mov
mov
ds
in
arpl
mov
aam
or
push
and
neg
aas
stos
and
(bad)
xor
push
mov
or
je
loopne
retf
jge
jg
addr16
adc
(bad)
scas
mov
push
shr
xchg
stc
xchg
mov
gs
outs
mov
xor
(bad)
fwait
adc
test
dec
cmp
jge
mov
es
fcomp
clc
fsubr
cwde
out
adc
push
pop
adc
retf
arpl
loope
mov
sbb
mov
cmp
pop
add
cmp
xor
retf
inc
or
inc
sub
sysexit
(bad)
aad
sahf
out
popa
lahf
xor
push
(bad)
xchg
mov
pop
imul
(bad)
je
movs
aad
inc
(bad)
pop
rcl
jecxz
stc
inc
cdq
jle
sbb
je
jo
sub
test
push
hlt
movs
shl
(bad)
pushf
mov
dec
cld
and
(bad)
addr16
sti
add
lods
add
xchg
in
jbe
scas
lea
call
ror
repz
jb
in
inc
jg
sbb
mov
push
jno
in
pop
push
fdivr
icebp
and
sbb
and
add
inc
and
ficomp
and
js
dec
pop
enter
mov
gs
leave
jmp
aad
hlt
lods
nop
adc
iret
adc
mov
cmc
test
adc
fisttp
mov
sub
retf
sar
inc
scas
cli
xchg
mov
data16
test
pop
add
shr
inc
mov
add
cmp
xor
shl
adc
fmul
addr16
push
xor
and
lods
cdq
push
xor
std
mov
sub
js
fdiv
dec
inc
test
lea
(bad)
lea
cdq
xor
or
inc
and
pop
(bad)
cli
rep
cmp
jns
out
cmp
push
push
test
out
sub
arpl
and
je
or
movs
lods
imul
mov
or
jb
push
xor
pop
pmaddwd
call
xchg
pop
push
sub
pop
pop
cmp
mov
sbb
xor
and
inc
dec
test
xor
and
sti
jge
aas
mov
repnz
idiv
add
(bad)
jmp
adc
in
jmp
test
outs
sbb
pop
pop
inc
xchg
dec
jp
mov
inc
sbb
cmp
movs
mov
mov
push
dec
popf
call
cmp
(bad)
movs
rol
jmp
lods
or
or
sbb
lock
das
ret
call
mov
push
arpl
(bad)
int
les
out
cmp
pop
pop
rcl
imul
pushf
push
retf
sub
adc
cs
test
xchg
jge
cli
xchg
cmc
rcl
bnd
arpl
sub
jmp
xlat
lahf
scas
icebp
leave
mov
enter
popa
xchg
cmp
je
cwde
dec
mov
mov
push
test
dec
(bad)
or
pop
fdiv
leave
(bad)
shr
inc
and
xchg
sub
jb
scas
mov
idiv
push
mov
xlat
xchg
mov
push
push
adc
cld
adc
sub
xchg
add
jg
movs
push
shl
jne
sti
or
push
mov
jo
inc
gs
xchg
pop
stos
pop
mov
iret
inc
adc
mov
imul
sbb
bound
xor
lods
jno
add
mov
cwde
fnsave
cmp
cmp
add
adc
push
out
cdq
repz
bound
xor
mov
clc
pop
adc
xor
outs
jns
mov
xchg
neg
mov
push
xchg
dec
xchg
mov
(bad)
outs
outs
sbb
push
(bad)
mov
mov
cmovnp
cld
add
add
(bad)
out
popf
jle
add
jne
lods
and
cmp
pop
push
fwait
inc
or
popa
sbb
sub
mov
mov
std
movs
lock
mov
push
ror
push
leave
arpl
ins
push
mov
and
mov
pushf
scas
xchg
std
into
aam
or
jecxz
call
(bad)
xor
dec
lods
es
ret
stos
or
movs
(bad)
xchg
adc
fcmove
popa
mov
jmp
mov
mov
mov
psubusw
into
adc
faddp
mov
pop
stc
popf
aas
xchg
js
out
nop
arpl
mov
xchg
adc
dec
out
push
mov
aaa
(bad)
out
aam
in
xchg
adc
mov
mov
cdq
dec
xor
push
pop
mov
jge
repz
(bad)
les
cmp
outs
mov
sti
cmp
pop
push
and
cmp
aas
lahf
or
stos
pusha
or
call
fnstsw
int3
add
fstp
sahf
add
xchg
inc
push
push
rcr
mov
mov
fst
inc
leave
popf
push
repz
lock
mov
movs
add
iret
add
(bad)
fst
jbe
retf
push
sub
mov
fnstsw
sub
inc
into
jns
inc
mov
mov
(bad)
dec
fcmove
dec
rol
sbb
xor
cmp
push
or
xchg
int3
sbb
cmp
int
mov
movs
(bad)
repnz
mov
rol
jmp
jae
push
jmp
lods
fdiv
push
(bad)
sbb
xor
cmps
test
ret
clc
push
jbe
and
cwde
mov
xchg
xchg
mov
xor
div
fdivr
adc
jle
pusha
lea
dec
sahf
pop
adc
mov
xchg
mov
xor
je
add
xor
bound
cwde
or
adc
pop
sbb
push
test
sub
daa
call
gs
lods
scas
xor
cwde
push
xchg
or
(bad)
and
retf
fdiv
add
and
retf
bound
or
clc
mov
addr16
jne
push
pop
shl
test
dec
jnp
or
pop
nop
add
(bad)
(bad)
shl
inc
outs
sub
iret
in
push
shl
xchg
add
push
push
mov
cmp
lods
maskmovq
neg
sbb
push
and
test
shl
loop
pop
jge
sub
pop
mov
xlat
int3
rol
fld
hlt
pop
pop
movs
adc
inc
jmp
out
jge
clc
pop
cmp
cmp
xor
sub
test
dec
das
test
movs
adc
add
pop
out
aas
enter
fdivr
xor
inc
and
push
sub
fs
inc
imul
jle
cs
inc
inc
xor
rcl
mov
or
int
pop
lea
adc
jmp
and
fisttp
push
inc
xor
out
push
call
dec
push
inc
in
mov
test
xchg
jecxz
cmp
bound
push
mov
push
ret
ins
pop
stos
sbb
test
mov
daa
mov
ss
dec
dec
xchg
push
aad
adc
into
outs
into
sbb
jle
pop
jae
mov
imul
xchg
fcomp
push
rcl
clc
stos
cs
push
adc
or
lea
xor
(bad)
cmp
scas
sahf
jno
sub
mov
and
push
cs
ret
push
push
xchg
out
mov
inc
pop
(bad)
dec
lods
or
in
popa
mov
test
or
loope
mov
mov
push
inc
pop
fidivr
stos
iret
xchg
test
enter
xchg
mov
sub
icebp
fdiv
outs
(bad)
nop
or
sbb
jns
inc
and
xrelease
aad
add
aas
xlat
imul
add
mov
push
cmp
and
repnz
fmul
push
gs
outs
xchg
iret
arpl
mov
dec
cdq
shr
xchg
inc
sbb
out
retf
pushf
mul
jbe
push
(bad)
loope
jae
adc
lock
popa
dec
sbb
sub
cmps
inc
dec
add
stos
or
adc
movs
pop
loope
ror
repnz
dec
xchg
fisttp
sbb
push
xor
outs
xchg
pusha
sub
enter
mov
mov
dec
adc
shr
sti
sub
jge
mov
aad
aad
pop
fs
mov
cmp
jmp
xor
ss
iret
pop
sbb
sbb
outs
cdq
xor
fadd
movs
mov
cmp
imul
sub
xchg
fwait
mov
out
in
mov
loopne
adc
dec
inc
sti
push
adc
sbb
nop
push
popa
xchg
vminpd
cmps
jnp
aad
add
sub
push
adc
mov
in
push
or
(bad)
mov
je
test
pushf
rcr
push
fmul
(bad)
in
inc
mov
fld
out
add
pop
imul
stos
cmp
and
xchg
adc
std
call
mov
dec
rol
movs
mov
mov
xor
or
xor
adc
out
mov
mov
(bad)
pop
pop
in
fmul
mov
jg
or
es
adc
push
call
jecxz
mov
js
xchg
in
test
and
lock
cmp
jbe
in
push
addr16
cmp
xchg
jl
cli
and
jl
in
cld
outs
adc
ins
int
mov
xchg
outs
retf
inc
(bad)
jno
lods
push
nop
mov
and
shl
cmp
jge
call
add
xchg
in
fldcw
or
adc
(bad)
(bad)
dec
rcr
jl
in
mov
pop
cmc
push
mov
jmp
mov
and
sbb
jno
cmc
xor
shl
sbb
or
in
cmc
bound
faddp
lea
adc
and
sbb
cmp
test
mov
lods
jmp
movs
adc
add
dec
push
lahf
mov
push
pushf
xchg
cmp
loop
imul
sbb
(bad)
(bad)
or
add
push
in
std
adc
xor
and
lods
popf
jmp
xor
add
push
xor
repz
sub
mov
mov
inc
pop
ficom
cmps
pop
adc
xchg
out
xchg
(bad)
mov
fst
and
js
dec
loopne
add
mov
xchg
mov
fcomip
fdivr
outs
jmp
adc
ret
in
or
ins
mov
xor
repnz
bound
fisubr
dec
push
call
mov
lahf
pop
test
gs
pop
pop
loop
fstp
mov
inc
fsubr
mov
mov
xchg
retf
dec
(bad)
jnp
in
fbstp
nop
in
inc
cld
(bad)
mov
lahf
popa
aad
pop
or
in
leave
sar
shl
fxch
cld
das
jge
xor
push
pop
or
les
cmps
cmc
xchg
push
sbb
jb
ins
xlat
fs
call
loope
sub
mov
jo
mov
rdtsc
cli
fadd
jb
retf
or
xchg
les
aam
inc
inc
cld
loope
cmp
imul
sahf
pushf
sar
mov
pusha
xor
push
xchg
ret
dec
sar
and
mov
or
inc
dec
mov
mov
push
(bad)
jmp
dec
push
add
rol
xor
outs
jmp
mov
rol
(bad)
cmp
outs
retf
pop
add
xor
outs
adc
adc
(bad)
mov
out
jns
loope
inc
push
and
movs
push
mov
sti
push
sbb
mov
jge
mov
adc
sub
(bad)
jp
fldln2
jl
stos
stos
stc
push
jno
outs
mov
cmc
scas
les
in
lods
push
call
cs
or
xor
cs
and
sbb
xchg
clc
fwait
icebp
or
ret
nop
lods
fwait
repnz
push
xchg
fwait
cmp
push
xor
sar
scas
(bad)
or
pop
ret
dec
fwait
or
in
sub
sub
add
sbb
and
cmp
xchg
js
xchg
mov
sbb
inc
mov
cmc
push
lock
xor
jo
ror
mov
add
push
call
jg
test
rcr
and
ins
rcl
pop
pusha
mov
xchg
test
std
in
sub
js
add
and
adc
sbb
cwde
and
not
into
out
dec
(bad)
mov
pop
into
ds
mov
dec
imul
xchg
pop
les
adc
dec
push
cmp
mov
es
sbb
or
leave
xor
dec
hlt
mov
fwait
es
xor
fadd
arpl
inc
xor
sub
mov
xchg
lods
xor
pop
dec
xor
pushf
popf
stc
push
add
adc
aam
or
jns
and
neg
cdq
mov
repnz
mov
jno
or
shl
adc
in
dec
mov
cmp
xor
idiv
xchg
out
dec
sbb
jnp
test
adc
dec
loop
stc
inc
dec
das
mov
mov
sbb
(bad)
xchg
mov
lahf
stos
jle
mov
or
movs
nop
call
js
fs
int
jne
cmp
loop
push
xor
pop
sahf
in
push
jl
inc
or
pushf
leave
xchg
and
(bad)
scas
loopne
inc
arpl
ret
push
dec
or
jne
mov
xchg
mov
data16
jmp
pushf
cmc
mov
repnz
or
push
div
mov
int
lea
imul
cmp
iret
(bad)
jmp
push
std
daa
imul
push
cmp
adc
repz
mov
pusha
les
mov
popf
test
lahf
pusha
out
jl
inc
and
lods
div
cmp
xor
jae
cmp
movs
and
cwde
xchg
dec
and
sub
xchg
push
(bad)
popw
neg
mov
mov
jl
push
ja
pop
pop
lahf
das
(bad)
mov
or
into
cli
sub
pop
repz
mov
js
xor
icebp
xchg
xor
aaa
adc
iret
adc
jne
sti
pushf
pop
cmp
(bad)
sbb
iret
out
inc
and
stos
mov
dec
jl
xor
sub
or
mov
pusha
mov
push
cmp
xor
daa
cmp
lahf
and
loopne
mov
xchg
mov
sar
jmp
xchg
hlt
push
outs
shr
pop
push
fistp
sbb
xor
bound
jo
sub
mov
aaa
test
out
adc
pusha
mov
xor
neg
in
sbb
out
mov
aad
mov
ror
adc
mov
adc
(bad)
cdq
adc
push
mov
pop
mov
stos
or
test
jg
adc
mov
sub
pop
ins
shl
jg
push
fchs
arpl
jns
fdiv
push
inc
mov
ret
loopne
xor
add
jbe
jg
push
movs
mov
adc
jmp
dec
pop
in
je
add
adc
jns
fwait
jg
xchg
adc
in
pop
add
push
test
int3
push
scas
mov
cmp
mov
fsin
pushf
mov
adc
add
push
rol
gs
dec
ds
cmp
pop
cmp
add
jo
je
loop
mov
push
mov
sub
enter
push
sbb
dec
loop
test
cmps
(bad)
mov
inc
adc
test
xor
jae
pop
adc
dec
push
(bad)
call
test
test
icebp
dec
push
out
jb
mov
mov
xchg
aas
imul
dec
sub
leave
les
scas
mov
xchg
(bad)
jns
ins
xor
pop
imul
push
mov
xchg
or
iret
mov
and
repz
inc
mov
enter
(bad)
sbb
push
cwde
cmp
sub
adc
push
scas
lahf
xchg
adc
movs
dec
cwde
leave
into
mov
dec
js
loopne
mov
jns
cmc
mov
nop
xchg
dec
mov
dec
cmp
dec
sbb
adc
sbb
aaa
sbb
out
mov
test
ins
mov
pop
fcompp
sbb
xor
pop
movs
adc
mov
in
pop
cmp
push
push
fcmove
imul
sub
xchg
xlat
jge
dec
mov
add
push
inc
mov
jl
movs
push
(bad)
lock
mov
fcom
mov
xlat
ret
or
xchg
int
or
adc
out
xor
in
call
out
ret
push
ror
adc
lahf
push
dec
inc
add
xor
push
mov
push
dec
lock
ins
mov
mov
mov
mov
or
pushf
not
lds
clc
and
adc
shld
int
add
ins
dec
or
jno
dec
dec
rcr
clc
test
fistp
out
mov
imul
xor
mov
mov
mov
dec
pushf
scas
inc
and
pop
dec
mov
not
outs
test
add
mov
mov
xchg
push
xchg
out
pop
aas
movs
cld
cmps
outs
sub
fcmovne
cmp
int3
mov
sbb
ds
and
cwd
push
imul
and
jmp
xchg
arpl
xchg
je
popf
xchg
dec
es
dec
cmp
cmp
xchg
aad
dec
push
mov
je
not
and
mov
(bad)
out
ds
in
fisttp
cmp
xchg
jg
fwait
pop
sbb
in
int3
xchg
push
xchg
and
sub
mov
into
aas
push
pop
ret
or
and
mov
cs
repnz
jbe
out
add
push
imul
imul
fadd
shl
cmp
mov
inc
lods
mov
push
test
ins
sbb
jg
test
nop
push
ret
pop
sbb
inc
enter
mov
jg
outs
fwait
jb
lahf
and
sahf
popf
cmp
repnz
aam
adc
mov
dec
into
push
sbb
cmp
adc
sub
mov
ins
fisttp
pop
fs
idiv
mov
aas
fisub
or
add
std
sub
mov
fwait
dec
sahf
jle
retf
and
je
pop
(bad)
mov
dec
cmps
in
push
or
cs
pusha
xchg
fmul
call
mov
jecxz
adc
xchg
out
inc
push
jle
in
shl
out
js
mov
push
push
lock
xchg
sub
mov
les
(bad)
adc
pop
fwait
popf
dec
mov
push
cmc
mov
jae
jb
mov
int
cmp
add
pusha
(bad)
mov
and
cli
adc
and
mov
mov
addr16
push
mov
or
outs
and
cmps
jecxz
mov
inc
jo
shr
mov
sti
jnp
add
lods
(bad)
xor
dec
adc
arpl
mov
ret
bound
scas
push
xor
xor
jle
imul
ja
adc
fidivr
enter
in
fdiv
shl
stos
jmp
out
jmp
cwde
out
jp
xchg
movs
sub
xor
sbb
xchg
dec
push
push
sahf
retf
lods
lods
xchg
dec
push
pushf
dec
mov
cs
aaa
(bad)
aas
push
mov
sub
adc
call
add
and
xchg
mov
sbb
dec
mov
jg
or
pop
mov
dec
inc
ror
test
sub
stc
jmp
mov
retf
dec
push
mov
sti
bound
mov
pop
and
out
pop
jo
int3
cwde
test
fild
xchg
adc
adc
push
loop
sub
outs
addr16
cmc
ret
mov
cmp
jl
add
cld
jmp
aaa
xor
(bad)
ror
pop
dec
in
je
mov
mov
mov
xor
push
xchg
adc
mov
mov
dec
mov
cmps
fcmovbe
xchg
add
sbb
arpl
xor
aas
push
add
adc
xor
cmp
lahf
sub
push
test
cs
push
or
mov
mov
pop
cld
arpl
ret
mov
js
push
ins
sti
push
push
arpl
nop
cs
cwde
fnsave
cmps
push
jno
cmp
sbb
ficom
pop
mov
xor
pop
pop
dec
ds
pop
imul
cmc
inc
ds
das
add
pop
imul
sub
dec
dec
cmc
mov
adc
gs
icebp
xor
es
xchg
xchg
xlat
xchg
or
push
sub
aad
mov
cdq
jp
inc
mov
sbb
loop
sub
retf
xlat
mov
fldcw
outs
imul
cmp
jno
jne
pop
pop
pop
fiadd
sub
sbb
(bad)
aam
xchg
dec
add
aaa
or
cmps
jl
inc
inc
sub
push
mov
inc
push
push
ret
inc
inc
in
push
dec
dec
mov
js
adc
into
pop
jmp
xchg
fcom
outs
daa
pop
loope
mov
dec
sub
or
cmp
and
cmp
sub
adc
dec
icebp
fsub
jne
or
loopne
rol
push
test
(bad)
cmp
int3
mov
iret
sub
push
outs
retf
mov
mov
adc
das
mov
dec
imul
push
add
loopne
cld
pop
into
push
push
and
adc
outs
ja
shr
(bad)
pop
(bad)
push
mov
std
and
or
in
mov
loope
adc
jae
cmp
push
add
or
jecxz
rol
sahf
push
ret
stc
mov
enter
icebp
cmc
jl
dec
mov
mov
leave
sbb
xchg
fcomip
ss
data16
out
and
cmp
push
xor
inc
out
rcl
add
mov
cmp
adc
adc
mov
jno
dec
out
sub
cmp
mov
fcom
xchg
mov
out
adc
mov
dec
and
icebp
sbb
fistp
xlat
cld
push
retf
not
ins
test
jg
cdq
ret
mov
shl
or
adc
call
pop
std
iret
imul
jmp
or
or
inc
ins
xchg
stc
call
add
pop
push
int3
dec
movs
(bad)
or
mov
add
push
xchg
bound
mov
push
or
call
xchg
adc
out
jo
ss
xchg
test
xchg
leave
arpl
mov
pop
xor
inc
sbb
(bad)
fcmovb
std
mov
cmp
adc
jb
and
sbb
pop
shl
adc
ins
dec
test
mov
ss
js
loop
mov
add
mov
cmp
mov
push
loope
xchg
xor
ret
jnp
cmp
ins
dec
int
sub
mov
mov
pop
sbb
int
or
fistp
pop
jbe
hlt
cmp
or
jecxz
ja
cmp
call
dec
outs
mov
mov
sar
jle
inc
cli
mov
in
mov
popf
and
mov
imul
mov
sub
imul
scas
mov
xor
call
jne
(bad)
call
dec
aaa
fsubr
inc
inc
es
fstp
mov
dec
arpl
pop
adc
js
cmovo
cmc
int3
daa
call
rcl
int3
jg
dec
retf
retf
push
popa
push
pop
in
outs
push
in
enter
mov
push
outs
inc
mov
sbb
jge
jmp
in
je
xchg
xchg
sbb
sbb
push
call
push
stc
mov
(bad)
mov
inc
inc
inc
test
xlat
dec
popw
push
out
out
jp
mov
aas
add
sbb
(bad)
sti
add
inc
push
ins
xchg
cld
jp
dec
out
sbb
sub
outs
pop
push
out
dec
sbb
icebp
enter
test
mov
sbb
ins
pop
mov
jmp
xchg
test
push
pop
inc
sbb
fstp
setle
jl
movs
push
cmp
leave
sbb
je
(bad)
fld
ret
fscale
jmp
xor
clc
out
pop
out
xor
in
mov
or
ret
push
lea
adc
inc
std
mov
shl
aas
mov
adc
sub
(bad)
sti
data16
test
push
sbb
int3
sbb
and
dec
dec
and
bnd
or
(bad)
outs
xor
adc
and
push
sbb
jp
jnp
xchg
and
rol
dec
pop
test
test
imul
fmul
(bad)
cmp
cmp
xor
loopne
aad
dec
fmul
mov
cmp
xchg
xchg
adc
mov
mov
xchg
or
sub
repz
adc
rol
pushf
mov
or
add
mov
push
repnz
sub
cmps
lahf
stc
out
(bad)
popf
in
repnz
(bad)
sbb
not
clc
daa
retf
(bad)
mov
or
adc
pop
fist
push
pop
cmp
pusha
push
jne
into
push
mov
xchg
and
loope
shl
push
call
cmp
in
mov
shl
ret
pop
in
pop
ret
sub
push
dec
adc
pop
dec
aam
cwde
lea
push
cmps
bound
ficomp
sbb
pop
mov
mov
rep
or
mov
xchg
mov
inc
and
xchg
jb
pop
in
arpl
cmps
lahf
lods
repz
scas
(bad)
fsub
fchs
pop
mov
xchg
push
rol
jmp
cmp
inc
xor
adc
xor
pop
xchg
aas
adc
mov
ja
adc
fsub
inc
lds
ror
cmp
pop
in
loop
sbb
je
cmps
out
jmp
xchg
pop
icebp
lahf
lock
xlat
cmp
fcomp
cli
(bad)
fcom
pop
mov
pop
shl
pop
addr16
add
add
fwait
cwde
adc
scas
push
bound
fisubr
inc
movs
mov
mov
jns
bswap
loopne
repz
bound
add
movs
dec
mov
and
xor
cmp
retf
jmp
adc
dec
daa
sti
xchg
xor
or
data16
packsswb
mov
sbb
imul
dec
xor
retf
adc
add
and
jns
shl
add
cmp
sahf
add
or
adc
xchg
sub
(bad)
xlat
or
mov
fs
imul
mov
pop
stos
jne
sbb
sbb
jp
mov
sbb
pop
cmp
push
scas
cmp
test
mov
pextrw
cs
test
dec
cli
push
cwde
push
push
adc
cwde
aad
adc
ds
imul
xchg
retf
xor
les
(bad)
jo
and
pop
ins
ds
sbb
xchg
popa
lea
lods
nop
sti
mov
dec
test
mov
stc
adc
cmp
pop
cmp
mov
push
pop
(bad)
call
imul
push
or
push
int
sub
into
pop
push
aam
(bad)
jl
sub
xchg
mov
nop
push
xchg
xor
jno
int3
jo
or
or
adc
stos
lahf
call
or
or
cli
push
mov
or
inc
inc
cli
mov
jno
pop
out
jae
sub
sub
(bad)
call
hlt
retf
ins
jns
into
imul
gs
fstp
(bad)
cmp
sbb
mov
inc
and
dec
loopne
out
adc
in
gs
out
or
shl
cmp
test
dec
mov
iret
jle
and
or
mov
les
pop
clc
fs
jmp
or
imul
mov
jp
test
sub
outs
scas
in
cld
lock
or
sub
mov
cmps
into
add
xchg
(bad)
in
fs
lock
ja
subps
inc
fwait
int
sub
inc
mov
dec
jno
mov
sbb
loop
cwde
xchg
xchg
out
ins
xchg
sub
mov
add
cs
inc
cmp
mov
pop
and
bound
mov
push
inc
test
push
sub
jmp
jmp
xchg
jb
call
inc
ja
retf
loop
jge
cmp
push
into
fiadd
push
adc
pop
xchg
lods
retf
or
sbb
xor
test
jmp
aaa
in
jae
retf
ja
sahf
mov
xor
dec
inc
rcr
or
push
loope
cli
sbb
loope
loope
mov
aas
and
mov
dec
pusha
or
stos
push
pop
push
outs
fisubr
pushf
adc
inc
cwde
pop
and
lock
xor
out
mov
shl
clc
cmp
or
test
pop
rcr
mov
inc
mov
dec
mov
xor
daa
inc
mov
lahf
pop
lock
cmps
pop
mov
in
cmps
mov
loope
pusha
sub
leave
pop
out
lods
retf
imul
cwde
and
or
and
inc
test
cmps
inc
mov
jl
in
fist
xchg
loopne
test
xlat
mov
or
cmp
xor
(bad)
jl
mov
movs
rcr
sub
icebp
and
jbe
sub
scas
cmp
mov
aaa
pusha
add
cs
outs
out
fisttp
jo
jno
imul
ret
popf
inc
xchg
test
test
dec
push
test
cmp
mov
or
jle
jge
jmp
test
cmp
rcl
jp
jg
data16
outs
mov
fdivr
daa
and
sbb
and
xchg
fdiv
popf
jmp
adc
jmp
mov
ret
dec
xchg
sbb
lock
adc
dec
sub
adc
in
cli
mov
out
gs
mov
fwait
add
sub
xor
push
sbb
test
jnp
push
cmc
pop
les
pop
dec
mov
xor
and
rol
jae
retf
sub
sbb
std
movs
and
test
and
ins
jo
add
fidivr
cmps
add
mov
enter
push
inc
jno
out
xor
cdq
push
add
stos
adc
jb
mov
in
(bad)
in
cdq
mov
and
in
leave
add
pop
movs
int
pushf
push
fcmove
div
push
and
cmp
je
popf
movs
jge
jns
fdivr
push
xor
mov
jp
adc
in
outs
cmp
xchg
cmp
in
sahf
gs
mov
jge
sti
in
stos
(bad)
outs
jne
push
dec
int
push
and
sbb
stc
mov
fwait
add
push
mov
sti
jbe
fisubr
cmp
inc
(bad)
or
bound
xchg
repnz
sub
or
inc
inc
add
inc
and
add
aad
push
add
add
push
loope
aam
idiv
sbb
hlt
ss
adc
xor
add
shl
out
stos
mov
jo
out
ret
jne
sbb
lahf
jmp
inc
(bad)
in
retf
pop
sbb
jae
push
and
jo
stos
mov
shl
arpl
std
mov
sub
xor
aaa
xchg
xchg
retf
shr
dec
out
cmp
pop
mov
sub
call
xor
rcr
push
mov
lods
inc
(bad)
dec
in
or
(bad)
in
int
in
and
ds
dec
out
int3
in
das
add
aam
xor
cwde
inc
imul
jne
je
es
add
jb
leave
add
lods
and
add
push
int3
into
mov
ins
test
hlt
mov
scas
xor
mov
adc
outs
mov
jge
xchg
stos
cmp
ja
out
repz
fnstenv
adc
aaa
inc
dec
or
nop
out
(bad)
shr
lods
rol
mov
cdq
in
sti
lahf
aam
add
int
lea
or
mov
lds
ret
mov
mov
xchg
mov
out
scas
cmp
or
cmp
enter
daa
cwde
adc
pop
xor
xchg
add
(bad)
into
in
clc
js
ret
cmp
in
(bad)
mov
xchg
sbb
sbb
sbb
ret
(bad)
arpl
cs
scas
push
into
push
test
mov
add
inc
xchg
stc
cwde
mov
repnz
jmp
add
cmp
dec
retf
mov
push
xchg
clc
sbb
jle
jne
add
pop
shl
or
adc
repz
jp
or
rol
pop
jge
dec
lods
adc
mov
sbb
jb
cdq
retf
push
pop
pop
mov
xchg
dec
cmp
cs
cmp
fsubr
popa
cmp
mov
stos
add
adc
inc
ret
inc
in
std
mov
fmul
pop
imul
inc
nop
mov
add
and
movs
or
push
xor
adc
(bad)
add
fdivp
pushw
inc
or
sub
xchg
push
ja
fs
sub
pop
adc
jl
mov
sub
dec
mov
lods
pushf
pop
and
or
cdq
jg
ret
enter
push
push
enter
cmp
test
mov
jbe
(bad)
je
dec
inc
jmp
fxch
xor
xor
pop
dec
mov
sub
push
inc
xor
(bad)
cdq
mov
fcomp
or
inc
xor
mov
push
(bad)
addr16
mov
fisub
mov
ins
pop
adc
or
test
sbb
leave
dec
nop
push
mov
or
or
movs
pop
push
mov
xor
(bad)
fwait
sti
pop
mov
lds
mov
mov
xchg
xor
lds
dec
push
add
dec
xor
mov
cmp
(bad)
push
sbb
leave
je
dec
adc
js
push
popa
inc
rol
fidiv
inc
push
movs
jns
xor
jl
jae
or
stos
or
inc
test
cmp
or
xchg
push
mov
adc
jae
dec
and
or
push
inc
xor
pop
bound
push
and
adc
dec
mov
repz
mov
adc
push
(bad)
or
cdq
push
loope
add
push
pop
jmp
mov
push
jmp
cs
out
and
cld
aad
add
or
enter
popf
mov
icebp
ja
div
loope
retf
cmp
inc
pop
ret
bound
push
int3
or
jno
push
stc
repz
and
cmp
mov
cmps
cdq
jp
jae
in
mov
shl
repnz
xor
pop
into
cli
aas
adc
das
cmp
cdq
jecxz
lock
ins
mov
lods
cli
push
std
jo
mov
repz
imul
xor
lock
adc
jmp
cmp
pop
sbb
movs
jb
mov
cld
adc
mov
clc
mov
mov
jge
sbb
call
cwde
push
cwde
mov
push
adc
imul
repnz
imul
inc
xor
bound
push
mov
out
add
es
add
lahf
sahf
stos
and
pop
aad
adc
or
xchg
push
repnz
xchg
rol
movs
fwait
dec
test
dec
dec
cmp
(bad)
xchg
outs
mov
dec
push
idiv
xor
ins
call
jo
mov
xor
pop
add
xor
in
push
pop
push
movs
sbb
cwde
hlt
imul
in
or
sub
arpl
xchg
mov
inc
pop
and
test
push
ins
or
jns
and
stos
pop
cmp
test
je
lock
xchg
jg
iret
mov
adc
jae
enter
add
push
push
pop
xchg
sahf
js
mov
and
add
cmc
push
jnp
or
aam
nop
dec
popf
popf
sub
mov
adc
fmul
pop
je
fcom
test
mov
ret
pusha
rcl
(bad)
xor
sbb
jo
div
and
push
jmp
rol
nop
in
frstpm(287
aaa
adc
mov
inc
add
xchg
or
addr16
dec
ins
xor
mov
push
pop
fdivr
cmps
neg
cmp
jns
mov
push
(bad)
aad
pop
arpl
mov
xchg
arpl
jge
std
popf
jno
std
mov
aas
or
out
push
add
loopne
cmp
dec
lock
xchg
imul
push
out
into
loope
in
push
aad
(bad)
out
cmc
and
push
sar
cli
stos
js
ret
xor
cli
std
jmp
pop
pop
imul
dec
dec
mov
xor
pop
shr
or
(bad)
fwait
cmps
dec
sbb
stc
cmps
shl
mov
push
jns
xchg
mov
xchg
mov
sbb
pop
dec
sub
dec
inc
out
xchg
dec
das
ret
pop
mov
clc
fwait
push
loopne
mov
push
or
jns
jmp
fxch
call
mov
adc
add
push
(bad)
xor
in
jmp
dec
push
stos
xor
mov
sub
mov
and
jns
comiss
cmps
adc
in
imul
ret
test
repnz
jne
cmp
test
sub
jg
mov
adc
add
frstor
fmul
leave
inc
and
dec
rcl
lea
out
js
cs
and
inc
and
xchg
push
mov
sub
mov
push
mov
gs
mov
popa
jno
adc
or
adc
jp
adc
shl
adc
int
xor
xchg
push
cmp
xlat
add
sbb
jl
push
cmps
stos
ror
ja
pop
add
iret
jb
or
movups
adc
xchg
shr
aas
mov
in
mov
jmp
mov
and
ficom
jnp
(bad)
ins
mov
xor
mov
aad
loope
inc
int3
mov
and
ins
cdq
mov
ror
loopne
cli
push
std
push
es
dec
call
sbb
xchg
das
push
dec
sbb
neg
jae
loope
and
rcr
imul
call
sti
pop
lods
jl
stos
mov
mov
ret
test
(bad)
mul
sahf
les
(bad)
cld
aam
cmp
ja
or
loope
repnz
int
in
mov
xchg
ret
pop
sub
pop
int
(bad)
rcl
fbld
stc
adc
jg
sbb
or
mov
cmps
(bad)
enter
mov
into
call
cmc
pushf
and
jbe
adc
cmp
jge
les
xor
push
inc
in
mov
les
push
stos
pusha
mov
pop
mov
test
lock
mov
sub
sbb
mov
push
xchg
push
inc
movs
inc
push
pop
(bad)
mov
pop
lock
xor
out
jle
add
mov
imul
or
imul
jmp
pop
std
js
jnp
or
adc
cdq
in
pop
int3
iret
sbb
icebp
push
(bad)
sahf
mov
and
nop
inc
imul
nop
xlat
mov
ret
nop
mov
pusha
fs
xchg
mov
leave
xchg
mov
and
xor
jl
fs
mov
retf
push
iret
mov
and
adc
jo
xor
sub
or
cmps
nop
jno
push
sub
add
adc
jge
pusha
lds
push
mov
(bad)
or
je
add
cli
pop
add
fcomp
sub
push
push
or
cli
lahf
or
sbb
fcom
xchg
js
(bad)
and
stc
es
sub
xchg
cmp
mov
pop
sub
test
add
cmp
ins
lea
icebp
push
lods
fbld
push
pop
xor
jnp
in
push
cmp
pop
aad
in
bound
pop
add
rol
aaa
jmp
sar
dec
jae
cmp
data16
addr16
pop
mov
push
arpl
icebp
cmp
mov
mov
shl
leave
cs
cmp
sub
fidivr
retf
ja
pop
aaa
cmp
cmc
adc
dec
mov
mov
pop
cmp
lahf
jo
out
pop
fidiv
xchg
mov
(bad)
xchg
lds
push
xchg
movs
cmp
mov
jae
fwait
pop
aad
add
push
nop
out
jecxz
inc
test
dec
dec
adc
stos
push
pop
retf
movs
dec
test
add
movs
jnp
lods
mov
dec
cli
mov
loope
mov
movs
loope
mov
inc
jne
stos
jo
scas
aad
jbe
xchg
in
mov
sub
imul
jge
and
int3
mov
aam
xor
popf
xchg
push
out
and
test
loop
or
dec
jns
adc
jns
dec
adc
jmp
add
inc
mov
icebp
das
nop
push
out
ss
jae
jne
mov
sbb
xor
jle
inc
sbb
rcr
aam
sti
inc
inc
ins
imul
jg
(bad)
aam
imul
mov
(bad)
mov
pop
pop
stc
cmp
or
(bad)
mov
mov
aad
pop
add
mov
push
mov
in
adc
sar
xor
cld
mov
out
sbb
cmp
jecxz
je
mov
movs
rcl
mov
call
jno
cmp
push
je
mov
jmp
or
out
jns
iret
movs
inc
out
jno
out
adc
mov
push
adc
cmp
cmp
dec
jecxz
jl
call
out
pause
adc
ja
push
fisubr
jae
mov
retf
std
pop
outs
add
push
adc
les
pop
mov
cmc
ins
mov
jle
lahf
nop
leave
xor
in
jo
adc
jo
adc
xchg
push
push
add
imul
rcr
in
iret
ins
in
jecxz
cmp
jnp
cmp
adc
cmp
sub
pop
lods
xchg
outs
loopne
sub
adc
leave
mov
dec
test
sbb
push
mov
jmp
inc
test
mov
imul
retf
lods
hlt
shl
push
into
fadd
jb
scas
(bad)
scas
xchg
out
inc
pop
push
xor
stos
mov
scas
or
adc
scas
add
fs
fsubr
gs
jbe
shl
aaa
mov
jmp
or
xchg
xchg
aad
js
aaa
mov
(bad)
pop
xor
out
jl
xlat
mov
cmp
xchg
xchg
xor
and
popf
ret
sbb
inc
push
ja
and
inc
out
sbb
in
pusha
ja
std
push
cs
(bad)
adc
mov
mov
cmc
dec
mov
in
mov
add
test
jmp
lods
mov
jno
fmul
daa
movs
cmp
cmp
jg
cwde
or
aas
fwait
es
xor
call
sub
popa
pop
nop
imul
faddp
clc
xchg
dec
ds
add
lock
lahf
dec
in
sub
push
loope
cmps
mov
jns
pusha
push
outs
test
inc
repnz
ja
data16
cs
lods
pop
inc
sub
push
jbe
jmp
mov
loope
mov
enter
add
icebp
push
add
mov
fprem
mov
lock
jl
movs
daa
sahf
and
xchg
mov
addr16
lds
fst
(bad)
adc
dec
add
inc
dec
and
cmovge
push
(bad)
or
stos
lock
pop
fist
xchg
and
lods
ins
sub
popf
add
repz
or
rcr
push
arpl
addr16
or
daa
(bad)
cmps
cmp
pop
bound
jnp
test
stos
cmp
xor
jno
in
mov
loope
call
arpl
xor
sbb
xlat
inc
movs
je
iret
xchg
repnz
pop
or
pop
push
movs
inc
push
xchg
jmp
jae
dec
stos
jmp
cmp
xor
leave
mov
add
test
(bad)
call
lea
outs
xor
and
fist
in
nop
jecxz
pop
push
sbb
int
and
mov
lock
inc
xlat
jl
aaa
add
iret
loop
dec
push
rol
stos
repnz
push
mov
sbb
hlt
mov
lock
(bad)
aas
das
mov
sbb
mov
(bad)
xor
aam
adc
pop
clc
fs
in
or
xor
mov
fldenv
jb
imul
mov
inc
lock
adc
(bad)
hlt
bound
mov
fistp
and
adc
(bad)
mov
pushf
mov
mov
jmp
cmp
retf
sub
ret
sar
mov
sar
sahf
in
cmps
cmp
inc
push
cmp
cwde
ja
fidivr
mov
pop
(bad)
jge
lock
xchg
ja
shl
add
fadd
xor
mov
(bad)
adc
les
scas
or
jns
mov
jmp
ja
sub
std
cmp
inc
iret
stc
fidiv
mov
inc
dec
out
mov
push
xor
(bad)
sub
pop
pusha
sbb
xchg
cwde
cld
fs
dec
mov
and
mov
ins
je
lea
mov
test
push
test
ret
jo
lock
and
push
imul
push
xchg
inc
push
pop
jns
lahf
cmp
shr
adc
arpl
inc
pop
cs
push
aaa
ds
mov
gs
fisub
mov
movs
pop
xor
mov
push
fadd
outs
xor
stos
pop
cmp
mov
ins
outs
push
push
pop
ret
jns
jg
aam
pop
(bad)
or
pop
ret
retf
push
popa
mov
xchg
mov
mov
xor
mov
and
mov
into
ror
mov
nop
xchg
fadd
out
lea
adc
xchg
out
add
cmp
arpl
sub
fstp
inc
xlat
daa
push
lea
scas
enter
lods
xchg
leave
scas
sbb
scas
repz
pop
aaa
sbb
push
pusha
sbb
mul
push
mov
dec
fwait
aad
cdq
inc
push
and
xor
data16
jns
movs
xchg
xor
sti
fs
fcomp
sub
push
inc
sbb
repz
inc
adc
mov
or
fwait
jne
imul
push
idiv
leave
jl
int
cmc
cmp
shl
adc
xor
fidivr
xchg
fidiv
mov
mov
inc
push
shl
jae
mov
stc
mov
nop
mov
adc
std
je
jle
aam
lahf
cs
xchg
shl
fld
cli
cmps
test
stc
push
adc
sahf
(bad)
mov
sahf
add
popf
ret
leave
hlt
out
cmp
push
mov
dec
pop
div
enter
scas
cld
cmps
outs
cmps
pop
push
lods
cmp
mov
add
cmp
ret
neg
xor
xchg
inc
mov
adc
jb
pop
clc
xchg
ss
scas
mov
movs
ret
sahf
and
sub
inc
movs
cmps
gs
test
sbb
leave
xor
int
xor
icebp
sub
and
in
dec
and
jbe
int
out
cdq
scas
stos
movs
sub
sbb
pop
or
dec
sub
outs
jbe
add
sbb
imul
xchg
test
(bad)
sbb
pop
mov
lods
in
je
and
lds
in
mov
jmp
loop
cmp
inc
cdq
ins
xchg
sub
mov
icebp
xchg
fistp
repnz
test
fstp
retf
(bad)
je
jg
repnz
movs
pop
pop
faddp
jl
pop
mov
nop
xor
add
jae
mov
cmp
shl
stos
add
cmc
push
adc
arpl
mov
(bad)
es
lods
outs
mov
iret
jae
stos
push
nop
mov
cld
cmps
fidiv
jo
aad
mov
mov
xchg
mov
loopne
jg
cmp
sub
shl
pop
mov
das
jnp
test
cmp
or
jmp
(bad)
push
mov
jmp
bound
sub
pop
or
aaa
xchg
and
loope
lahf
jge
dec
pop
fist
push
inc
mov
out
push
les
push
retf
mov
pop
xor
mov
shl
sbb
fldenv
shl
add
sub
ss
sub
jecxz
mov
push
sub
sti
test
jp
cmp
sbb
loope
cs
int3
sub
in
shl
lea
test
inc
in
mov
cld
popa
adc
mov
lahf
in
mov
jbe
mov
fsub
in
mov
sub
clc
mov
cmp
sti
fist
xchg
retf
lea
jp
xchg
lahf
neg
(bad)
inc
adc
mov
xchg
pop
cmp
mov
idiv
jbe
sub
cs
test
ja
or
xchg
xchg
mov
mov
xor
sbb
add
cmpps
es
mov
or
les
sub
or
add
cs
jle
ror
cmp
sbb
and
cmp
fnstenv
loop
retf
aam
lods
outs
mov
ds
enter
push
lods
push
pop
loopne
xchg
mov
inc
data16
xor
out
lds
les
aaa
retf
push
neg
ja
and
shl
mov
popf
jmp
cli
es
push
mov
iret
push
aam
fsubr
push
sub
fidivr
jmp
outs
call
jl
loopne
or
rol
sahf
adc
mov
push
es
lock
call
ins
pushf
or
test
lahf
shl
loop
in
dec
adc
mov
sbb
mov
push
xchg
shl
jo
adc
fdiv
inc
repnz
in
mov
add
pop
in
cs
into
scas
in
jo
or
daa
or
mov
cwde
(bad)
adc
out
jmp
xor
sub
ja
in
or
pop
stos
dec
gs
jns
into
push
xchg
xchg
leave
ins
daa
pop
popa
or
sbb
sub
imul
out
pushf
test
leave
pop
xor
dec
adc
shl
add
cli
jnp
xchg
pop
ins
ret
clc
mov
push
jae
pushf
sar
(bad)
rol
nop
xor
mov
ret
mov
sbb
push
jb
or
test
cmps
shr
mov
leave
leave
loop
inc
or
add
ds
sub
jl
xchg
outs
xor
call
out
into
cmps
add
ds
pusha
mov
push
dec
mov
xchg
xchg
xchg
mov
push
imul
or
mov
adc
in
shl
dec
loopne
inc
cmps
jl
sbb
test
and
xchg
mov
jmp
dec
nop
inc
pop
adc
daa
pop
leave
out
cmp
pop
mov
out
xchg
ror
sar
or
cmps
sbb
xchg
mov
mov
cmp
mov
lahf
xlat
mov
fnsave
fiadd
daa
(bad)
(bad)
and
arpl
sar
jmp
stc
inc
test
pop
test
sbb
xchg
pop
xchg
test
fwait
outs
gs
pop
sub
xchg
leave
xor
es
dec
and
jne
lods
sbb
in
dec
aaa
cmp
sar
in
loopne
cmps
into
repz
xchg
push
mov
jge
cmps
push
or
aas
inc
jmp
ss
jne
pushf
shl
sbb
cmp
mov
ret
into
jnp
mov
sbb
inc
jg
cmps
cmp
mov
lock
xor
aaa
fsubr
das
jg
popf
bound
mov
xchg
adc
adc
sbb
int3
mov
dec
cmps
arpl
push
addr16
std
dec
mov
push
out
add
bound
xchg
xchg
pop
dec
popf
mov
jmp
and
retf
retf
je
inc
push
pop
adc
sbb
inc
jns
mov
xor
pop
sub
and
sbb
xchg
pop
sub
aam
and
add
dec
dec
push
xor
fwait
(bad)
push
cs
pop
mov
sub
xchg
out
jg
cld
cmp
mov
out
mul
pop
fldenv
stos
dec
(bad)
enter
mov
dec
es
jae
je
fistp
fisub
and
xor
in
push
sti
cmps
ret
addr16
adc
add
jle
arpl
dec
int3
call
jecxz
push
xchg
jg
add
inc
push
cmps
pop
repnz
xlat
popf
jne
inc
rcl
(bad)
fwait
nop
push
enter
xchg
push
ja
jle
mov
mov
pop
packssdw
in
and
repz
dec
cmp
mov
mov
xchg
or
add
mov
xor
push
push
pop
out
nop
frstpm(287
retf
xor
repz
push
mov
iret
jbe
xor
dec
add
mov
pop
nop
ins
sub
pop
sub
pop
xlat
jmp
call
test
inc
jmp
and
lock
jo
rcl
sub
adc
xchg
scas
push
adc
rol
xadd
daa
jp
sti
and
fild
repz
bound
adc
mov
push
out
loop
inc
cmp
pop
cmp
push
pop
test
sbb
stos
aad
(bad)
xchg
sahf
cmps
push
call
inc
adc
mov
je
push
mov
mov
xchg
inc
push
loope
in
and
inc
ret
inc
jbe
ins
ja
ret
push
xor
inc
sub
push
jmp
loope
pop
sub
icebp
and
sub
inc
xchg
mov
sar
sbb
inc
xor
repz
xor
movntq
mov
cld
in
fs
test
or
dec
test
out
cdq
(bad)
sub
scas
xor
(bad)
push
int3
cli
enter
xor
(bad)
or
xor
jbe
inc
test
mov
pop
add
bound
xchg
jmp
(bad)
aad
(bad)
push
nop
jmp
out
data16
sahf
push
dec
xchg
pop
mov
sbb
pop
push
dec
test
push
add
out
jmp
mov
div
pop
push
mov
mov
jbe
jb
and
dec
mov
push
jbe
es
pop
ret
adc
repnz
movups
sbb
cmps
jp
sub
push
aam
(bad)
int3
add
and
(bad)
jle
mov
into
pop
xadd
push
out
test
add
sub
xor
xchg
sbb
jb
(bad)
inc
in
and
cmps
aas
repz
leave
imul
push
ss
in
ficom
and
outs
jno
xor
addr16
xchg
fisttp
shr
xor
cs
scas
call
xlat
sub
sbb
sbb
sub
sbb
ins
int3
in
mov
das
ja
ret
mov
sub
cmp
xor
les
ins
push
mov
mov
sbb
xchg
add
retf
pop
out
sbb
pop
pop
in
ins
push
in
inc
cmp
cld
xlat
out
popf
addr16
add
imul
mov
sbb
gs
lods
push
pop
mov
inc
out
daa
mov
fdiv
dec
je
dec
mov
add
sub
push
adc
lahf
sbb
mov
mov
mov
mov
jne
mov
adc
pop
push
outs
mov
or
sbb
push
andnps
es
mov
and
inc
(bad)
xchg
jae
data16
and
enter
lahf
xor
dec
xchg
pop
(bad)
xchg
nop
push
bound
or
imul
mov
enter
inc
bound
ds
inc
push
pop
in
lahf
cs
dec
pop
xchg
and
jno
or
cmp
dec
xchg
mov
mov
hlt
ins
jns
cmps
xlat
jb
inc
push
movs
sbb
inc
jbe
mov
sub
lds
aad
inc
rcl
xor
repnz
ins
call
int3
stos
pop
out
mov
cmp
in
pop
loope
sub
xchg
and
rcl
push
jbe
or
push
or
repnz
ret
gs
dec
scas
movs
cmp
cmp
int3
cmc
pop
test
int3
dec
cmp
adc
ror
sbb
test
lods
mov
jae
cmp
icebp
cmp
js
stc
mov
mov
icebp
sar
fcom
sub
aam
nop
vpsrlw
ficomp
loope
xor
adc
aam
inc
(bad)
cmp
sub
pusha
sbb
outs
jae
adc
xchg
xchg
jl
mov
out
pop
add
jbe
mov
je
popa
mov
mov
push
add
push
test
retf
enter
add
add
mov
or
lods
add
adc
leave
xor
adc
push
lods
mov
jno
loopne
push
das
jl
adc
aas
pop
loopne
ins
call
lods
aas
push
cmp
cwde
adc
inc
jns
out
pop
cdq
jno
in
das
enter
adc
outs
inc
or
jnp
add
mov
jp
dec
sbb
sub
(bad)
xor
or
xchg
pushf
popf
rol
inc
or
and
fcmovnu
pop
dec
in
out
icebp
sub
adc
jge
lods
inc
push
sub
shl
lds
pop
mov
xor
and
ret
shl
sub
shr
nop
ds
sub
shl
cli
movs
shr
xlat
mov
(bad)
pop
xchg
ins
test
fsubr
push
cmp
jl
test
xchg
into
rcr
xchg
cli
popa
in
xchg
in
mov
xchg
cmp
mov
retf
mov
add
ficomp
dec
cmp
cmp
mov
shl
xchg
sub
popa
xchg
fcomp
xchg
test
adc
sub
adc
je
or
and
movs
xrelease
or
fwait
mov
and
inc
mov
popf
fsubr
pop
mov
sub
movs
icebp
std
xor
rcr
xlat
and
popa
ja
and
stos
mov
push
int3
jns
mov
imul
xor
jecxz
inc
cmp
mov
cmp
ins
mov
mov
pop
jne
mov
push
mov
mov
fsubr
jbe
sbb
push
push
(bad)
lods
jo
les
out
repnz
push
adc
retf
in
pop
or
pop
daa
inc
or
clc
daa
sti
lahf
push
shl
lea
jmp
dec
push
pop
xor
rdmsr
xchg
mov
arpl
add
mov
dec
add
out
leave
or
mov
inc
xchg
pop
add
add
jmp
xchg
xchg
aaa
jg
sub
pop
cmp
mov
ret
push
inc
daa
into
or
lods
cmp
xor
cmp
cmp
sbb
out
sub
call
sbb
jnp
mov
push
out
xor
test
sub
(bad)
hlt
xchg
xchg
inc
shr
inc
pop
push
repz
cmc
mov
mov
repnz
push
mov
ficom
mul
mul
sbb
jmp
push
dec
sbb
mov
out
xchg
xchg
imul
mov
mov
sbb
mov
adc
push
in
gs
cmp
sub
stc
stos
mov
pop
xor
(bad)
xchg
iret
add
push
ds
outs
mov
dec
ins
or
lods
pop
jno
mov
dec
adc
dec
(bad)
sahf
popa
mov
mov
push
inc
push
lds
mov
and
dec
into
repnz
xor
cmps
cmp
mov
sbb
dec
cmp
cmc
ret
outs
fist
push
leave
add
test
fidiv
pop
or
into
or
xlat
fist
cmp
mov
sbb
int
scas
std
pop
jbe
pop
or
call
cmp
jno
outs
sub
pop
cdq
retf
mov
repnz
or
cmps
adc
or
jmp
dec
call
icebp
mov
xor
mov
add
sub
xchg
in
inc
mov
imul
lock
cdq
mov
aaa
jmp
jmp
test
(bad)
cld
push
jae
jbe
sbb
inc
sti
dec
mov
aam
add
nop
or
and
(bad)
mov
mov
jb
inc
ja
jbe
xchg
sub
in
add
push
or
adc
jae
mov
and
inc
push
mov
xchg
sub
movs
rcr
inc
cmp
les
arpl
sbb
cmp
and
cmp
mov
and
js
cli
gs
cmp
(bad)
lods
inc
inc
mov
fadd
arpl
xor
(bad)
rol
aaa
loope
sub
iret
call
sub
cmp
jnp
sub
adc
adc
pop
(bad)
mov
enter
inc
push
mov
push
mov
jo
mov
je
xchg
xchg
dec
imul
into
push
and
xabort
dec
or
sbb
in
cdq
mov
aas
test
pop
(bad)
ror
xor
or
out
or
cmp
sbb
sub
popa
repz
sbb
out
sub
out
es
add
aaa
jecxz
pusha
int3
addr16
in
shl
add
fisub
daa
xor
jl
inc
jp
pop
jle
call
dec
dec
jns
cld
imul
nop
pushf
and
push
(bad)
cmps
xchg
mov
adc
push
scas
ins
inc
imul
sti
jns
adc
pop
popf
cmp
es
rcl
push
sub
dec
ins
int3
mov
cli
out
out
repz
add
jg
mov
test
stc
fstp
xor
dec
and
xchg
xor
gs
adc
sub
cmp
adc
push
in
sub
xor
out
out
sub
into
out
leave
aas
cmp
cmps
shr
xchg
dec
add
ficomp
inc
add
(bad)
mov
mov
rcr
cld
ds
jb
jl
push
cmp
retf
comiss
lods
adc
(bad)
jne
sub
int
dec
xor
lods
push
retf
adc
mov
int3
dec
cmps
push
cdq
shr
pusha
adc
cld
stos
and
jecxz
lahf
in
push
and
aam
scas
push
jg
test
inc
xchg
dec
icebp
mov
aaa
jae
add
shr
div
push
icebp
sub
jo
cmc
mov
clc
div
sbb
xor
outs
fisub
jne
mov
fisub
and
cmp
std
popf
adc
push
shr
clc
sbb
es
xchg
push
push
add
push
cld
push
and
sahf
mov
lods
sbb
cmp
stos
add
loopne
std
fwait
mov
call
(bad)
pop
call
stos
push
dec
xchg
jno
xor
inc
xchg
xor
pushf
jo
jmp
ins
in
icebp
stos
mov
jl
stc
sbb
adc
ror
mov
mov
rcl
xor
(bad)
fistp
clc
div
nop
and
push
dec
dec
out
cmps
scas
nop
jle
push
inc
imul
stos
lods
push
mov
jmp
dec
movs
fldcw
mov
das
mov
outs
mov
out
jecxz
mov
(bad)
sbb
jmp
hlt
xor
or
int3
adc
adc
fnstcw
mov
lea
aam
std
push
or
leave
cmps
icebp
adc
in
jmp
or
daa
mov
mov
std
cmp
daa
mov
cmc
aam
mov
sti
stos
mov
push
test
xlat
repz
iret
add
fcomp
rcr
push
push
je
icebp
mov
pop
jae
hlt
lods
jle
mov
std
fmulp
daa
out
sub
jmp
inc
ja
test
hlt
fsub
int3
cmp
ds
cmp
mov
pop
icebp
mov
push
and
and
jbe
jae
in
sbb
hlt
push
and
or
fisub
inc
retf
dec
and
xor
cmc
cwde
cmps
sar
fsubr
ins
jecxz
retf
retf
fwait
aad
xchg
mov
jl
jmp
out
sbb
cwde
sti
xchg
es
mov
cmc
jbe
mov
test
mov
jnp
xchg
mov
daa
cmps
or
sub
popf
test
cmc
test
mov
lahf
pop
and
xchg
sbb
push
mov
push
popa
or
cmp
fcmovnu
icebp
sub
dec
out
cmp
imul
sub
scas
xor
dec
sbb
out
rcl
xchg
iret
fs
ret
cmp
sub
sti
std
xor
mov
ror
and
popa
pop
and
clc
test
sbb
push
in
add
sub
daa
(bad)
div
imul
mov
push
std
daa
xchg
(bad)
loopne
push
xor
adc
test
int
lahf
jnp
ss
mov
cmp
nop
xor
dec
pop
mov
push
loopne
hlt
jg
mov
call
shr
mov
xor
inc
dec
sbb
cwde
xchg
xor
hlt
out
pop
mov
sbb
cld
movs
jns
and
push
sub
jae
mov
int3
xchg
jbe
test
aam
loopne
fs
xor
not
in
or
xchg
adc
mov
fldenv
cli
and
add
ss
sub
loop
jb
(bad)
jns
mov
add
lods
shl
pop
xchg
mov
adc
xchg
push
in
enter
aam
idiv
cmpxchg
mov
jb
clc
pop
mov
iret
fimul
mov
inc
aaa
mov
imul
fld
imul
cmp
push
das
push
sbb
out
mov
xor
jecxz
push
or
pop
jmp
dec
retf
in
pop
add
shl
int
mov
test
arpl
xchg
dec
xchg
lea
(bad)
bnd
push
mov
dec
dec
cld
test
addr16
out
or
mov
inc
ins
fs
jb
or
in
adc
jnp
and
imul
scas
mov
sbb
dec
call
scas
shr
inc
jbe
jmp
stc
push
sub
push
or
loop
dec
jo
ss
bound
daa
adc
daa
rcr
hlt
test
add
mov
scas
in
out
jae
popf
les
stos
ins
cmp
xlat
ret
jo
push
in
(bad)
fcomp
out
jp
fidiv
stos
mov
jle
push
mov
shr
outs
ja
dec
shl
in
das
jl
popf
lods
scas
les
cwde
cs
sub
out
push
js
pop
test
out
mov
bound
jle
dec
or
jns
dec
jns
dec
das
aad
sub
mov
enter
(bad)
fimul
popa
dec
dec
mov
repz
or
push
jecxz
(bad)
sar
fdivr
loope
mov
dec
cmp
outs
cwde
or
mov
and
sub
xchg
sbb
mov
xchg
movd
add
test
data16
test
cmp
sbb
mov
lea
(bad)
pop
ret
scas
test
mov
mov
lahf
add
in
inc
call
mov
fcom
sub
movs
mov
rol
dec
(bad)
mov
fucomp
movs
pop
jmp
dec
(bad)
or
(bad)
cmp
test
sbb
jle
and
in
mov
call
data16
push
cdq
push
adc
stc
sub
call
mov
cdq
inc
ss
cwde
mov
outs
cmp
cmp
mov
jle
stc
pop
sub
sbb
mov
inc
add
jbe
dec
enter
aad
adc
rcr
std
jl
gs
lods
lods
push
lods
push
daa
cdq
mov
cmp
mov
in
inc
mov
test
xchg
jl
cdq
sub
(bad)
fidiv
sub
mov
xchg
je
push
pop
js
mov
out
mov
fild
test
adc
repnz
jae
sar
mov
out
scas
xchg
mov
ins
ficom
adc
cmc
fistp
pop
pop
add
dec
add
mov
(bad)
push
push
popa
js
cld
addr16
popf
cmp
jne
je
jo
push
sbb
ret
(bad)
scas
popa
das
pop
mov
jb
imul
adc
adc
scas
bnd
sub
jmp
out
mov
loope
cmp
and
mov
mov
or
test
dec
sbb
or
cmp
dec
or
lock
xchg
mov
repz
ss
or
sbb
xor
data16
dec
or
cs
inc
bound
jg
shr
fcom
popa
xor
jne
jo
movs
into
xor
sbb
adc
push
jmp
xchg
jp
retf
in
pop
xchg
dec
pop
add
call
dec
xchg
hlt
xchg
retf
sub
fmulp
push
movs
gs
sub
fist
stc
pop
sar
pushf
mov
rcr
adc
jle
pop
pop
test
fadd
inc
xchg
inc
jae
cdq
inc
push
cmp
addr16
enter
test
je
test
xchg
or
into
inc
mov
retf
mov
jmp
xchg
retf
in
xor
sti
movs
(bad)
jge
pop
xchg
ror
in
in
ds
in
dec
sar
or
retf
pop
out
push
(bad)
icebp
pop
push
mov
(bad)
das
cmp
in
mov
jne
test
jae
lds
cmps
int
add
add
and
or
cmp
xchg
sbb
loope
inc
jo
pop
or
int
cmp
xchg
sahf
std
add
jo
and
ins
into
mov
mov
pop
cmc
add
mov
pushf
push
jne
jbe
dec
loope
sub
jp
jmp
call
and
imul
repz
pop
mov
dec
sti
clc
outs
jmp
or
imul
inc
inc
aam
xor
mov
shr
or
stc
pop
mul
(bad)
shl
loop
ins
out
repz
retf
in
(bad)
xor
cdq
pop
into
repz
adc
or
ret
mov
mov
push
dec
mov
stos
jl
sahf
jg
ficomp
rol
test
mov
stos
or
retf
xchg
cwde
in
add
xchg
push
dec
movs
imul
or
mov
test
aaa
sbb
fcmovnu
sbb
clc
pop
cmps
adc
mov
call
std
dec
add
out
bound
cmps
sbb
retf
mov
jnp
cmc
ds
pop
jmp
shl
call
fisubr
fdiv
or
ins
aaa
fild
sbb
jnp
and
retf
pop
les
adc
pop
push
aaa
in
dec
jno
not
lock
mov
int
fist
adc
xchg
inc
xchg
mov
push
fld
xchg
test
add
xlat
mov
add
aad
adc
pop
inc
sti
dec
mov
ins
push
xor
sar
cmp
dec
inc
mov
out
clc
mov
jo
adc
sahf
aam
adc
fisttp
dec
xchg
jns
js
sbb
sti
dec
cmp
mov
retf
pop
xchg
popf
xor
dec
dec
adc
leave
(bad)
sbb
ret
loopne
fdivrp
sbb
popf
test
adc
(bad)
jmp
imul
fmul
jmp
pop
mov
mov
dec
push
sbb
mov
popa
or
mov
dec
mov
mov
xchg
repnz
fdivr
(bad)
into
lods
xchg
xchg
mov
std
push
jnp
or
or
loope
or
ins
in
add
lods
dec
mov
or
dec
inc
bound
cdq
lods
push
mov
pop
aad
scas
loop
jbe
and
jo
mov
cmp
idiv
jmp
add
jne
imul
mov
xlat
adc
mov
jmp
pop
mov
clc
pop
xchg
std
xchg
out
and
ss
fcomp
in
mov
cmp
shl
add
sbb
xor
in
xor
sub
test
dec
sbb
movs
ds
lods
pop
psraw
push
xor
xchg
jmp
adc
aas
or
mov
jbe
icebp
pop
cmp
repnz
sub
movs
loope
or
dec
sar
push
and
mov
es
iret
stos
loope
add
adc
cmp
fs
xchg
dec
sahf
and
or
mov
push
cmp
std
sub
jmp
jae
cli
dec
xor
(bad)
retf
ins
cmp
jbe
aaa
jge
jg
ret
call
xor
cmp
pusha
ror
push
sbb
pop
test
in
add
sub
imul
std
mov
mov
dec
or
mov
mov
xchg
cmp
cmps
add
scas
ss
jns
adc
(bad)
and
mov
int3
mov
icebp
in
movs
out
xchg
mov
outs
mov
mov
popf
sub
xchg
aad
sub
enter
cmps
popa
test
jns
dec
shl
push
add
push
gs
sbb
inc
dec
xchg
ret
adc
jg
in
dec
outs
xor
jle
test
dec
jmp
and
in
sub
js
popa
push
fwait
retf
xor
pushf
or
xor
cmps
cmp
mov
add
in
xchg
popa
imul
and
sbb
or
jbe
sti
repz
loopne
mul
cs
(bad)
mov
jmp
dec
pushf
test
popf
sub
sahf
pop
jnp
adc
adc
jns
pushf
inc
add
sbb
mov
adc
test
stc
xchg
data16
sbb
add
inc
sub
pop
mov
sbb
and
enter
into
mov
mov
pop
cmp
jge
inc
cs
push
sbb
mov
xchg
out
xchg
jno
dec
pop
jb
es
cmp
iret
mov
retf
mov
mov
dec
(bad)
dec
add
jmp
push
jb
mov
pop
cmp
sbb
add
mov
cld
outs
imul
jns
shr
call
shr
addr16
js
cmps
add
mov
mov
bound
es
stc
repz
outs
loopne
pop
sub
iret
mov
and
mov
or
jae
ins
out
stos
mov
fimul
(bad)
lods
add
popa
and
sub
pop
scas
mov
jno
mov
clc
sahf
and
xor
sub
pop
jbe
sbb
hlt
pop
imul
inc
sti
inc
mov
mov
daa
push
push
jbe
adc
jae
outs
mov
mov
pop
sbb
pop
daa
mov
dec
(bad)
jno
pop
mov
data16
mov
scas
aaa
leave
shl
cmp
jecxz
shr
cmp
pusha
shr
and
add
push
add
sar
popf
mov
icebp
pop
pusha
mov
sbb
sbb
(bad)
cmp
call
in
pop
inc
mov
push
mov
das
mov
pop
pop
jno
inc
mov
jmp
rcr
mov
cmp
pop
stc
and
push
adc
ss
in
out
fimul
test
fwait
out
psrlq
mov
(bad)
int3
ficomp
out
stos
(bad)
push
imul
jge
xor
add
add
push
pop
push
sub
xchg
cli
jp
(bad)
adc
sub
pop
pushf
loope
lods
push
call
xor
dec
jg
sbb
adc
int3
jg
sbb
sbb
and
fidivr
inc
and
add
scas
mov
test
icebp
movs
test
test
sub
dec
or
int3
ds
jmp
scas
inc
xchg
push
adc
jecxz
or
mov
ds
fisttp
rol
retf
fnstcw
jmp
outs
and
adc
mov
mov
(bad)
leave
sti
jmp
les
sub
ja
imul
imul
cmp
pop
fwait
test
dec
push
jb
stos
shl
xor
mov
pop
bound
jno
addr16
cs
jns
shl
jl
jmp
inc
popa
xor
mov
mov
jno
leave
jne
pop
scas
in
jge
xchg
js
test
std
and
cmp
imul
jmp
mov
mov
inc
fs
adc
cdq
cld
adc
mov
icebp
ds
popf
dec
sub
mov
in
cdq
fldcw
mov
test
mov
lock
xchg
aaa
fild
test
xor
(bad)
popf
jbe
or
xlat
jmp
mov
push
pop
hlt
mov
mov
mov
add
push
push
and
sub
je
(bad)
add
pop
mov
sahf
adc
and
jnp
cmp
mov
mov
ret
dec
or
jne
ror
push
sbb
add
xor
pop
shl
(bad)
and
sub
in
loope
scas
push
add
push
jnp
dec
aam
mov
outs
int
jle
lods
mov
cmovg
adc
and
jle
mul
jp
movs
lock
pop
mov
adc
jb
or
test
inc
dec
dec
dec
test
test
bound
cmp
inc
pop
aaa
inc
adc
jle
div
mov
pop
loopne
cmc
mov
sti
push
push
mov
mov
aas
stc
dec
neg
int
popa
xor
pop
add
inc
fisttp
(bad)
jb
xchg
and
adc
cmps
loopne
mov
push
scas
aam
ficom
pop
jmp
lahf
in
and
rol
xchg
ss
pop
jne
fisttp
fcom
clc
outs
adc
push
cmc
mov
jmp
xchg
sbb
push
jmp
mov
add
fwait
out
sub
test
bound
dec
adc
idiv
jo
push
jns
mov
jns
sub
jnp
lods
push
dec
sbb
pop
sub
test
movs
les
aam
lock
cld
cmp
and
cmp
xchg
pop
fiadd
call
pushf
daa
push
inc
imul
dec
cmc
jecxz
call
test
mov
adc
sbb
cmp
ss
push
enter
inc
xor
loopne
mov
mov
sbb
xchg
stc
mov
je
xor
rcr
rcr
scas
aad
loope
cld
xchg
shr
pusha
imul
sbb
mov
dec
popf
pop
adc
test
loopne
sar
ret
out
mov
loopne
jne
iret
jb
xlat
or
gs
out
xchg
ds
pop
(bad)
and
mov
pop
addr16
inc
(bad)
pop
xor
cmp
gs
mov
pushf
js
pop
neg
sbb
mov
xor
ins
add
sub
ins
shl
sub
push
add
enter
hlt
dec
shr
test
mov
or
inc
test
nop
outs
fld
lahf
test
or
push
inc
mov
push
pop
pop
xchg
cwde
retf
jmp
dec
push
dec
int3
fist
jmp
pop
push
sub
cli
xchg
scas
pop
aaa
(bad)
adc
adc
inc
pop
jg
loopne
lahf
cmps
cmps
dec
bound
xchg
xor
cmp
push
imul
loop
add
mov
add
mov
dec
jg
xchg
add
ret
(bad)
ins
out
shr
cmps
sbb
sub
and
lods
adc
test
lods
adc
clc
lahf
(bad)
jne
inc
mov
and
cmps
fst
fidivr
rcl
loope
jmp
jp
inc
popa
sti
xlat
mov
repz
retf
into
(bad)
cmp
mov
fcomp
xor
pop
std
rcr
iret
loope
cmps
sbb
sbb
test
mov
scas
sub
int
bswap
in
cmp
mov
stos
add
inc
sub
pop
add
mov
adc
xor
mov
inc
sbb
xor
sbb
sub
add
push
cmp
jb
imul
out
loopne
xor
es
adc
cmp
pop
or
aam
(bad)
cld
jl
cdq
pop
test
mov
(bad)
arpl
mov
out
loopne
push
adc
lea
dec
xchg
in
inc
pop
jp
mov
pusha
and
aad
mov
(bad)
xor
stos
mov
(bad)
mov
adc
dec
dec
rcl
test
test
mov
adc
mov
fs
jno
sub
stc
xor
push
pop
add
or
fidivr
cs
repnz
int
ret
arpl
lahf
stos
out
shl
cmp
xchg
ret
lds
jmp
in
pushf
(bad)
sub
cmp
fiadd
(bad)
cmc
int
retf
(bad)
arpl
call
(bad)
mov
dec
push
(bad)
in
in
imul
add
xchg
xor
dec
push
xchg
ds
call
xchg
hlt
push
mov
and
push
dec
cwde
cmp
inc
and
rcr
arpl
jmp
sti
sbb
jns
xor
ret
xchg
push
fcom
inc
adc
add
adc
xor
sbb
jb
cmp
lods
stc
push
push
call
lds
xor
shr
shl
(bad)
xor
imul
in
mov
jmp
jmp
mov
ficomp
gs
jbe
test
push
and
mov
int3
cwde
lds
(bad)
pop
fdivr
out
imul
lds
out
mov
pop
push
(bad)
fdiv
stos
xchg
xchg
xchg
cdq
loopne
mov
mov
dec
jno
jae
push
dec
cmp
dec
shr
sahf
inc
cmp
lea
call
xchg
mov
out
dec
adc
add
das
adc
out
ret
test
call
mov
and
inc
nop
and
push
jbe
cmp
ins
retf
jle
fbstp
add
int3
popa
loopne
adc
mov
xlat
pop
lods
(bad)
lods
sub
addr16
pop
cmp
adc
popf
out
cwde
cs
mov
adc
call
popf
cmp
jl
jl
jo
or
movs
or
jl
in
lock
push
xchg
int3
js
(bad)
sub
imul
push
xchg
mov
mov
pusha
sub
fs
sub
and
outs
add
sbb
adc
pushf
mov
ss
cwde
push
and
movs
fadd
jmp
push
sub
jp
adc
fiadd
mov
out
mov
or
add
push
fwait
imul
mov
shl
stc
in
sub
jge
mov
iret
inc
xor
sti
mov
std
push
aas
and
ins
int
(bad)
xchg
mov
add
(bad)
and
push
dec
push
(bad)
cmp
rcl
test
sar
lock
gs
pop
sub
ret
sbb
cmp
clc
xor
mov
sbb
pushf
sub
out
movs
push
mov
or
sbb
cmp
out
movs
add
mov
adc
gs
add
cmp
xchg
imul
in
(bad)
jecxz
add
(bad)
mov
xchg
(bad)
rcl
jns
dec
scas
repnz
xor
add
mov
or
pop
sub
ds
xor
nop
cmps
out
je
retf
cmp
in
cmp
cmp
sbb
and
stos
clc
int3
mov
repnz
(bad)
sbb
ja
inc
inc
pop
jnp
adc
loope
je
add
(bad)
nop
pushf
adc
sub
jge
add
push
fiadd
xchg
cmp
add
sbb
les
cld
jecxz
jne
push
lods
lahf
jae
push
add
into
ret
rol
cdq
sub
push
push
repz
push
mov
inc
mov
shl
jnp
cmp
clc
cwde
dec
mov
fidivr
cmp
enter
cmp
pop
sub
inc
sub
out
sbb
pop
xchg
pop
repnz
data16
repnz
mov
or
pop
stos
out
cmp
dec
mov
outs
loopne
sub
inc
push
xor
inc
lds
mov
call
push
popf
js
adc
mov
(bad)
mov
push
in
ja
mov
inc
retf
fidiv
mov
mov
je
mov
aaa
pop
inc
push
outs
in
lock
mov
pop
dec
loope
out
in
sub
pop
push
outs
inc
retf
sub
nop
mov
xor
loopne
jmp
leave
popf
push
pop
ret
inc
add
bound
retf
cld
sbb
sbb
push
push
push
je
das
mov
sub
dec
movs
fldcw
mov
push
idiv
in
xchg
dec
(bad)
lea
ins
jns
sbb
mov
test
xchg
retf
mov
pop
push
push
adc
loop
lea
add
mov
bound
lods
movs
sub
jnp
(bad)
es
stos
scas
xor
je
stos
adc
ret
inc
xchg
js
rep
jecxz
jecxz
int
cs
mov
adc
mov
(bad)
cmp
in
pop
inc
fnstenv
bound
rcl
in
push
pop
cmps
xor
outs
add
dec
sub
sub
sbb
(bad)
jae
repnz
xchg
dec
ret
daa
xchg
sti
ins
ins
xor
xchg
xchg
cld
sbb
xlat
sub
adc
arpl
jge
hlt
aas
scas
xchg
imul
sub
test
dec
call
cs
sub
ror
cdq
pop
cld
push
xchg
jne
cmc
(bad)
leave
ins
aad
sbb
fwait
sti
out
push
fisttp
xchg
mov
fldenv
in
ret
ins
mov
dec
fidivr
out
sbb
pusha
xchg
and
xor
mov
jle
mov
cmp
adc
fcomp
popf
daa
and
sbb
loopne
mov
popa
pusha
or
lea
pop
cli
xchg
cmp
loop
fisttp
sbb
or
mov
(bad)
mov
add
ret
imul
mov
mov
dec
mov
or
out
jp
mov
popf
dec
mov
xchg
mov
cmc
jns
es
jle
retf
xchg
mov
in
pop
mov
adc
adc
and
cli
dec
mov
bnd
cwde
push
jae
mov
push
mov
(bad)
cld
sub
add
or
pop
lock
movs
lea
inc
(bad)
cmp
jbe
test
movs
mov
loope
dec
lahf
inc
xor
mov
add
jecxz
dec
adc
adc
jmp
inc
cwde
adc
fcomp
ret
push
sbb
push
sbb
cmp
sbb
mov
mov
dec
(bad)
not
lock
rcr
mov
call
and
aaa
out
add
mov
pop
push
gs
shr
jg
in
mov
mov
cmps
mov
and
out
bnd
or
sbb
adc
rol
bound
mov
push
mov
clc
retf
push
cmc
cmp
lods
daa
je
sbb
sti
sbb
jl
adc
call
cmc
adc
mov
lods
sbb
dec
movs
cld
sub
or
jg
push
(bad)
movs
cmp
cs
mov
inc
mov
dec
sub
cld
outs
sub
jp
and
jmp
jno
ins
fs
push
scas
jmp
cmp
dec
in
mov
pop
add
rcr
in
div
(bad)
call
xchg
sub
mov
inc
leave
mov
or
imul
jmp
sub
icebp
out
std
add
clc
sub
test
jp
(bad)
dec
xchg
mov
sbb
cli
sub
imul
das
ins
jg
and
mov
xor
das
or
push
shl
xchg
adc
adc
movs
test
pusha
dec
push
add
or
inc
in
mov
imul
pop
xlat
add
push
xor
mov
outs
dec
xchg
movs
call
jmp
lds
sbb
jl
lods
in
jle
es
in
dec
xchg
xchg
xor
xor
mov
or
fnsave
and
rep
retf
ja
lock
(bad)
push
cmps
leave
jle
ret
sbb
inc
push
jne
sbb
xchg
dec
jg
aas
les
loopne
test
xor
mov
cmps
and
dec
loop
xchg
les
jg
or
pop
add
mov
adc
out
jmp
or
mov
cld
push
cmp
fdivr
and
jne
aas
mov
rol
pop
cld
mov
push
pop
data16
movs
test
ficomp
jge
push
push
shl
fadd
xchg
mov
ss
push
inc
mov
mov
cmc
popf
sub
fidiv
(bad)
adc
pop
cld
dec
std
dec
cmp
xor
mov
fwait
inc
(bad)
xchg
push
cmp
jg
into
xchg
cmp
idiv
(bad)
mov
(bad)
arpl
and
cmp
iret
lahf
stos
mov
push
nop
xchg
jp
cmp
mov
jp
stc
xor
mov
add
test
(bad)
div
mov
call
mov
inc
enter
and
arpl
in
jmp
repnz
inc
je
cmp
repnz
lods
mov
mov
xor
bound
add
mov
cli
test
sbb
rol
and
ja
inc
pop
adc
mov
sub
mov
and
inc
mov
jecxz
lea
bnd
mov
gs
sbb
icebp
sbb
xor
add
mov
xor
ja
bound
mov
cmps
add
shl
xor
push
mov
mov
daa
xchg
cmp
clc
jb
sbb
dec
dec
daa
test
loop
retf
int3
push
out
mov
idiv
sti
mov
jmp
xchg
cmp
mov
and
mov
jmp
dec
add
jno
stos
imul
sbb
cmp
cmp
or
fcom
pop
mov
jo
sbb
in
(bad)
ss
push
mov
jne
cmps
xor
and
sbb
pop
sub
cmp
loope
cmp
(bad)
mov
dec
imul
sbb
mov
sub
jns
xchg
xchg
out
mov
add
fiadd
int
test
ins
fld
push
js
ret
das
cmps
psubq
inc
(bad)
jecxz
mov
repz
inc
push
lea
inc
xor
fnstcw
(bad)
jp
in
or
sbb
pop
push
pop
imul
sub
push
ss
mov
inc
lock
sub
and
dec
adc
cli
scas
inc
add
mov
loop
cmp
fwait
clc
retf
fbld
add
jb
mov
mov
xchg
arpl
jno
jl
push
cli
mov
dec
bound
jmp
ds
mov
pop
arpl
fwait
add
sub
retf
sar
or
add
test
push
in
jle
xchg
pop
pop
sbb
pop
mov
aaa
fnstcw
je
add
push
fisubr
mov
and
ret
mov
aam
jp
inc
enter
lock
in
rcl
scas
movs
ficomp
loopne
jne
sbb
aad
sbb
push
std
out
jnp
ror
test
scas
jge
jbe
dec
fsub
pop
out
push
(bad)
into
pop
cld
ror
imul
lds
ret
push
inc
push
lahf
add
jns
push
mov
stos
push
lods
ds
aam
xor
ret
mov
loop
loopne
mov
pop
add
mov
add
rol
dec
add
nop
mov
loope
enter
pop
enter
imul
outs
adc
jns
mov
or
movs
mov
call
(bad)
lock
shl
push
pop
arpl
inc
jae
into
push
frstor
pop
cmp
aad
sub
shl
into
jle
or
inc
jne
pop
cmp
outs
jl
adc
cmc
sahf
fwait
outs
xor
pop
out
adc
sbb
sbb
cmps
cmp
adc
lods
(bad)
and
ins
out
scas
and
imul
aad
call
call
iret
out
mov
mov
das
xlat
xlat
push
(bad)
adc
jle
es
xchg
lock
xchg
clc
jb
push
mov
pop
jmp
mov
loope
inc
sbb
icebp
xor
and
and
movs
out
mov
out
sbb
pop
icebp
leave
mov
ds
add
mov
outs
xor
mov
xor
popf
js
arpl
and
cmp
cld
hlt
aas
(bad)
jg
icebp
test
std
scas
dec
xchg
test
cmp
xchg
push
jge
jle
int
mov
sub
mov
push
jae
sub
push
bound
imul
sub
(bad)
mov
fiadd
arpl
fnstcw
in
outs
sub
icebp
and
mov
enter
das
inc
(bad)
push
adc
es
xchg
icebp
and
or
xchg
ss
sub
das
mov
jno
mov
sub
jmp
test
mov
sar
idiv
dec
cld
or
inc
push
or
cmp
add
fs
test
or
pop
push
mov
pop
nop
dec
xchg
dec
ja
cs
push
mov
inc
or
sahf
mul
pop
xchg
bound
rcr
(bad)
(bad)
pop
and
mov
out
sbb
test
adc
das
sub
push
cmps
lea
jle
sbb
or
pop
push
dec
lea
sub
shl
scas
in
cwde
push
cs
mov
clc
jae
dec
add
ror
stos
xchg
jg
xchg
xor
inc
test
and
jb
jg
fst
pop
pop
xchg
fdivr
xchg
call
xchg
imul
push
dec
sahf
dec
call
cmp
stos
jg
test
(bad)
call
push
cld
stos
pop
cmc
mov
sti
xor
ret
mov
and
imul
add
clc
mov
sbb
or
mov
ficomp
cmp
xor
std
xchg
xor
imul
add
test
mov
div
hlt
jmp
push
popf
(bad)
dec
sub
nop
push
and
jl
test
bound
sub
aaa
cmp
scas
or
scas
dec
mov
into
xchg
mov
je
aad
jecxz
xchg
in
inc
bnd
cmp
and
jo
and
in
adc
jmp
bound
cmp
mov
sbb
cmp
mov
ds
shl
call
and
sub
xor
mov
adc
retf
fisub
rcl
xchg
cmc
ret
lea
push
dec
pushf
(bad)
outs
ss
inc
cmp
loope
pushf
jmp
dec
loop
aas
mov
mov
adc
jge
push
add
repnz
int3
lods
sub
popa
xor
and
imul
mov
fidivr
(bad)
mov
fld
je
clc
std
shl
jg
xor
in
jo
xor
loopne
ss
dec
sahf
ret
jl
sbb
(bad)
rcl
inc
jb
fwait
dec
cld
jmp
stos
pop
fdivrp
add
dec
loope
not
jbe
push
rcr
lock
dec
sub
stos
sub
pop
mov
xchg
scas
push
iret
mov
jmp
jl
imul
inc
mov
cmp
sub
das
jae
inc
dec
outs
dec
mov
jae
dec
inc
sub
int
movs
add
fs
inc
jge
xchg
xchg
iret
jg
and
test
mov
mov
inc
int
cmp
adc
pop
pusha
pop
or
jbe
sub
inc
lods
movs
ins
int
dec
sub
xchg
pop
aaa
sbb
push
dec
cwde
outs
jge
add
sbb
(bad)
(bad)
enter
push
xor
dec
jge
jne
ss
adc
fcom
push
xor
call
adc
mov
push
mov
out
inc
add
sub
fwait
loop
test
mov
(bad)
fild
daa
hlt
ret
jmp
add
mov
mov
iret
hlt
aam
loope
mov
sbb
out
shr
xchg
std
xchg
icebp
push
movs
xchg
gs
push
xchg
ret
in
xor
outs
leavew
mov
sub
shl
push
rcl
dec
pop
sti
jae
ret
jmp
mov
xchg
cmps
add
into
icebp
pop
(bad)
jecxz
sub
cmps
inc
cmp
rcr
pop
addr16
mov
pop
pop
loop
in
hlt
scas
aad
nop
inc
mov
jb
xchg
push
inc
inc
call
mov
in
int
jmp
and
and
xchg
call
lea
call
movs
sub
xor
aaa
mov
dec
clc
inc
xchg
xchg
inc
mov
cdq
loop
inc
shl
jmp
shl
std
sbb
ds
stos
and
sub
aam
sub
mov
shr
shr
je
pop
and
jo
jno
mov
mov
inc
mov
jo
jl
cmc
pop
xchg
add
fisub
xchg
in
in
dec
cli
gs
pushf
out
dec
lods
xchg
out
mov
outs
pop
dec
cs
jg
retf
jns
inc
test
dec
popf
scas
dec
sahf
mov
cmp
cmc
cli
xor
(bad)
lock
(bad)
jle
rcl
jbe
dec
mov
sbb
outs
xchg
dec
test
jmp
int3
loop
loope
add
mov
xchg
xor
(bad)
mov
fldenv
sub
jle
test
sbb
xor
mov
arpl
stc
enter
push
xor
xchg
cmp
ror
retf
pop
scas
jne
xchg
fs
dec
ret
sub
adc
xchg
enter
(bad)
push
loopne
xchg
pop
ds
je
aad
lods
scas
push
das
pushf
mov
jle
pop
and
xchg
mov
sub
push
mov
ins
jg
aad
movs
jg
fbstp
ficomp
(bad)
adc
sahf
es
popa
inc
and
sbb
jnp
sub
mov
xchg
inc
or
stos
and
sbb
xor
adc
(bad)
sbb
imul
mov
dec
in
inc
test
cwde
xchg
mov
push
rcr
lds
fsin
mov
and
xor
ret
cmp
bound
xchg
rol
xor
mov
call
jae
pop
pop
mov
aas
cmp
(bad)
es
outs
jns
aaa
cdq
lahf
mov
pop
retf
push
(bad)
push
mov
mov
cmp
xlat
out
fiadd
inc
je
dec
bound
(bad)
mov
sub
pusha
in
icebp
stos
lahf
jp
scas
dec
outs
adc
loop
retf
std
mov
pop
call
neg
enter
add
lods
icebp
mov
cli
in
mov
and
fnstcw
jnp
cmp
adc
scas
inc
in
les
ins
cmp
in
cs
int3
movs
nop
shl
sbb
cdq
(bad)
pop
sbb
push
adc
jns
lods
fidivr
cmp
and
and
dec
push
jmp
pop
and
inc
xor
push
rol
fiadd
pop
mov
pop
push
inc
nop
jp
push
dec
pop
out
cmps
push
dec
add
mov
cmp
les
jmp
cmp
call
stos
pop
cmp
fwait
jp
(bad)
adc
popf
cmp
push
imul
outs
je
test
or
clc
push
mov
cld
fs
xchg
test
xchg
sar
(bad)
and
(bad)
repz
lods
outs
adc
add
adc
pop
jae
jl
jge
dec
add
xchg
mov
leave
loopne
(bad)
fadd
fdivr
push
js
std
sub
test
std
nop
mov
push
shl
push
mov
loopne
dec
and
lods
call
push
xor
cmc
jl
gs
(bad)
xor
loopne
mov
scas
aam
jmp
nop
cmp
(bad)
cmps
jnp
ret
call
jmp
stos
inc
and
jne
rcr
mov
xchg
mov
movq
inc
add
je
push
push
std
pop
add
xchg
ins
jecxz
outs
dec
(bad)
cmc
xchg
lock
add
daa
hlt
hlt
fnsave
push
jmp
dec
push
push
aas
push
jle
jne
test
mov
xor
(bad)
fisttp
push
mov
dec
outs
jg
in
das
jmp
mov
bound
dec
mov
and
jns
fidivr
in
into
ja
add
repnz
data16
loope
cmc
popf
arpl
sar
jle
dec
int
inc
inc
add
out
popf
call
inc
cmps
mov
cmp
mov
dec
(bad)
and
scas
out
inc
ja
in
add
jb
(bad)
mov
fldcw
push
ds
mov
xchg
call
jae
and
mov
mov
ror
scas
imul
(bad)
mov
sbb
sub
push
inc
leave
or
mov
pop
cli
js
(bad)
xor
or
hlt
xchg
fcom
imul
movs
pop
stos
mov
mov
call
fild
ds
enter
mov
les
ror
rcl
xor
les
aas
push
ds
add
inc
stc
xchg
inc
and
aam
mov
xor
add
mov
retf
sub
push
dec
mov
xchg
sub
pextrw
sub
pusha
or
mov
jmp
or
es
nop
mov
or
xor
loope
add
rcl
adc
retf
sbb
cmp
stos
mov
inc
jae
rcr
aaa
or
jmp
sub
call
outs
(bad)
test
mov
pop
jge
dec
jmp
sar
imul
in
xor
mov
jne
iret
and
push
push
(bad)
cmp
inc
dec
lds
sbb
push
mov
push
int
ret
ds
jp
lds
dec
pop
bound
push
inc
dec
cmp
adc
pop
ret
dec
and
adc
es
aaa
sbb
mov
sti
dec
mov
iret
jp
and
mov
jmp
mov
mov
cmc
daa
loopne
cmp
aaa
das
out
fadd
les
inc
dec
xlat
push
cmp
mov
xor
arpl
xchg
js
(bad)
aam
add
jno
dec
stos
xor
nop
cmc
mov
repz
xor
lock
cmp
xchg
mov
pop
xchg
cs
lock
cmp
std
cmp
retf
(bad)
cmps
es
cmp
sar
jae
adc
leave
mov
push
in
call
cwde
shl
or
shr
xchg
data16
jp
sub
jb
xchg
leave
jne
cmp
in
and
ret
sar
sahf
gs
dec
cdq
popa
mov
or
mov
jmp
push
mov
in
loopne
aaa
mul
fnstcw
xor
aam
loop
push
xchg
lods
sub
push
rcl
jmp
sbb
popa
call
mov
rol
rcr
test
sbb
add
sbb
mov
iret
jp
stos
pop
lock
fwait
nop
inc
adc
dec
and
add
jp
push
mov
adc
jne
mov
loop
test
ja
adc
mov
ret
into
mov
popa
retf
rol
dec
das
xchg
mov
inc
mov
enter
and
inc
or
gs
scas
hlt
pusha
and
int3
test
sti
aad
das
test
push
loope
push
imul
inc
jo
inc
frstor
sahf
push
fwait
lea
lods
xor
iret
pop
ja
pusha
mov
cdq
ds
and
jmp
add
jmp
lods
mov
sbb
hlt
enter
in
aam
lahf
inc
mov
add
cli
push
push
ror
sub
cmps
fwait
push
dec
sub
dec
movs
xchg
cwde
aaa
push
lods
pop
cmp
jl
lea
push
cdq
xor
and
xchg
inc
pop
les
loope
sub
call
mov
leave
test
and
adc
xlat
sub
adc
adc
test
retf
adc
cmp
in
aas
xchg
xor
pop
mov
inc
xor
pop
cld
xor
or
jns
push
outs
cmc
mov
sbb
and
lods
mov
sar
pop
movs
jp
setae
push
hlt
sbb
and
jbe
mov
pusha
test
outs
mov
or
sbb
jmp
adc
out
std
push
retf
mov
xor
mov
mov
call
lock
outs
loope
xchg
xlat
push
inc
mov
bound
sbb
jg
xchg
cmp
and
pop
mov
or
int
outs
jl
jne
mov
pusha
fdiv
push
lods
pop
xchg
sub
pop
or
(bad)
jp
pop
arpl
adc
enter
push
out
stos
mov
adc
js
ret
fistp
in
inc
inc
adc
mov
pop
pop
test
pop
int
push
adc
or
mov
pop
std
enter
lock
gs
mov
jns
imul
rol
inc
cmp
cmps
xchg
add
cdq
inc
fcmove
lds
jg
lds
sbb
add
sar
(bad)
dec
mov
sub
mov
jo
icebp
jcxz
xchg
call
cs
stc
cli
leave
div
(bad)
daa
cwde
jnp
xchg
aas
retf
inc
sub
fmulp
fs
imul
jmp
push
push
pop
push
inc
pop
cdq
mov
scas
mov
mov
push
les
dec
xchg
ror
mov
je
xchg
fdivrp
mov
sbb
pushf
xchg
(bad)
push
ret
and
popa
cwde
or
pop
pop
push
fstp
lahf
xchg
mov
xchg
imul
dec
adc
mov
or
repnz
xor
shr
sbb
cld
daa
cmp
mov
lds
les
adc
(bad)
bound
punpcklbw
movs
cmp
push
repnz
xchg
sub
sahf
je
rcl
push
cli
out
xchg
pop
add
nop
pop
mov
mov
(bad)
(bad)
mov
xchg
cli
adc
mov
movs
sub
js
xchg
sbb
fist
dec
mov
xlat
addr16
xchg
je
sbb
adc
dec
dec
inc
dec
dec
push
rol
cld
jecxz
add
fs
or
push
push
add
iret
sahf
leave
sub
ret
(bad)
mov
cmp
iret
xchg
xchg
mov
dec
mov
outs
inc
and
cmp
loop
push
cdq
jae
pop
pop
mov
out
push
add
cmp
push
mov
xchg
cwde
push
inc
repnz
inc
out
xchg
sbb
enter
dec
(bad)
push
cmp
dec
fidiv
fdivr
loopne
out
arpl
xchg
sub
sub
sbb
add
jmp
add
xor
enter
jle
mov
call
test
mov
mov
pop
sub
test
and
xchg
push
mov
jg
pushf
sub
add
xor
cs
loopne
movs
aaa
dec
sti
sbb
xor
pop
je
out
lods
adc
movs
lock
add
xchg
cmp
xor
repz
pop
mov
(bad)
dec
mov
lods
sbb
adc
clc
xchg
add
jmp
push
pop
push
fisub
adc
pop
push
dec
or
mov
pop
call
add
add
xchg
neg
add
jb
iret
out
inc
cmps
sub
fwait
pop
add
pop
and
test
stc
jae
mov
add
imul
jmp
sub
sub
cdq
dec
iret
popa
cwde
jge
jns
add
mov
xchg
mov
(bad)
repz
mov
add
int
xchg
aam
dec
nop
stc
(bad)
imul
cmp
push
pop
leave
dec
int3
scas
jmp
in
mov
nop
inc
mov
ja
mov
xor
sub
aas
xchg
mov
mov
ins
and
arpl
sbb
xchg
push
pop
jnp
ins
cmp
xchg
out
xchg
sbb
sub
int
into
mov
xchg
imul
js
retf
fcomp
pop
fld
inc
fdiv
push
add
pop
sub
xchg
inc
cmp
xor
xchg
jnp
jo
clc
pop
mov
xor
push
push
push
and
int3
into
mov
mov
lea
sbb
sub
jo
stos
aad
pop
cwde
cmp
inc
add
mov
dec
enter
popa
ror
or
movaps
out
les
bound
mov
xchg
mov
arpl
stc
fstp
ins
mov
shr
mov
or
aad
sbb
rol
jge
xchg
test
retf
xchg
sub
sbb
retf
sbb
icebp
push
cmc
rep
sub
dec
scas
mov
fsub
pop
cs
inc
sub
(bad)
in
fimul
or
mov
push
jge
push
xchg
push
dec
rcr
add
or
sbb
dec
and
dec
inc
nop
mov
(bad)
test
sbb
mov
jne
shr
sbb
lods
frstor
(bad)
(bad)
scas
pop
xchg
outs
xlat
sub
lods
inc
shl
add
ds
push
cmp
scas
int3
jmp
xor
fidivr
fs
and
xchg
and
jnp
ins
jno
add
fisubr
mov
cmp
and
push
push
(bad)
faddp
xchg
es
push
js
pop
popf
clc
rcr
cmp
movs
pop
cmp
iret
mov
aaa
push
push
imul
push
mov
or
mov
popf
mov
call
stos
frstor
(bad)
(bad)
rol
in
call
mov
in
xchg
rol
adc
sahf
sbb
rol
hlt
aas
lock
or
stc
mov
inc
jmp
jg
mov
clc
addr16
adc
movs
fld
loopne
clc
xor
mov
inc
data16
push
das
adc
aas
jno
and
jecxz
xor
adc
xchg
(bad)
jae
call
mul
xchg
xchg
fwait
out
lods
push
mov
cmp
imul
mov
push
aam
shl
mov
fdivr
sub
xchg
stos
dec
xlat
xchg
lea
mov
jmp
lods
inc
or
jne
cli
shl
sbb
test
inc
pop
test
rcr
xor
add
xchg
cmp
inc
jns
or
inc
inc
mov
push
loopne
mov
dec
jno
push
xor
inc
push
dec
jle
adc
and
push
retf
push
sub
or
gs
clc
rcl
sub
imul
inc
mov
adc
hlt
xor
lahf
fimul
loope
and
jg
xor
outs
mov
and
mov
sar
arpl
xlat
jecxz
je
pushf
ret
pop
ret
pop
fisubr
mov
int3
ins
push
lods
bound
out
push
(bad)
enter
dec
jl
out
ja
push
pushf
fs
daa
jmp
dec
jl
cld
mov
xchg
mov
push
jg
pusha
or
in
pop
ins
mov
outs
mov
test
add
fsubr
repz
ds
div
mov
test
rol
js
lahf
xchg
dec
jnp
xchg
pop
adc
xchg
sti
push
xor
push
adc
dec
sub
sbb
movs
fisttp
retf
fstp
pop
push
mov
push
and
stos
mov
neg
(bad)
push
dec
jae
(bad)
jmp
mov
dec
inc
jo
xchg
inc
xor
das
jo
sub
mov
retf
outs
pop
call
retf
pop
xor
mov
push
mov
dec
xchg
jge
es
retf
or
pop
xchg
dec
jns
pop
xchg
sub
pop
xchg
aam
popf
pop
mov
fdivr
ja
push
xor
aam
fadd
pop
outs
pop
jp
add
mov
popf
cmp
bound
mov
lock
enter
ds
xor
xor
test
out
push
sbb
popf
test
mov
sbb
jns
mov
dec
sbb
mov
adc
push
jle
cmps
dec
arpl
dec
push
add
xchg
push
jl
xor
push
or
ins
lahf
mov
inc
jo
jns
and
test
in
mov
shl
(bad)
fs
jg
xchg
sub
mov
cmps
ffreep
jne
xchg
imul
pop
cmp
cs
aam
test
and
push
les
adc
stos
sbb
add
and
push
xchg
gs
pop
cmp
pop
xor
xor
scas
cmps
xor
push
push
aas
test
dec
push
cpuid
inc
xchg
adc
xchg
adc
addr16
pusha
sar
mov
push
lock
ins
push
or
sbb
add
ds
lds
test
inc
cmps
add
mov
mov
sbb
cmp
lods
xchg
out
mov
fnstsw
cli
sub
mov
icebp
and
jecxz
popf
fwait
(bad)
sub
inc
jne
pushf
dec
mov
or
cwde
xchg
adc
dec
dec
cdq
ds
or
cmp
mov
sub
push
mov
cmp
stc
xor
jmp
lea
lock
add
rcr
or
cmovb
add
jmp
das
lds
movs
cwde
(bad)
shr
sbb
neg
lods
push
ds
test
xor
loop
addr16
xor
dec
fst
jns
jno
loop
lds
mov
call
xor
hlt
dec
xchg
retf
xor
mov
sub
push
pop
xor
mov
int3
push
mov
(bad)
mov
fiadd
mov
jb
sti
retf
ret
ss
jo
inc
inc
jmp
xchg
loop
inc
push
sub
std
push
mov
push
jb
(bad)
dec
cs
xor
into
into
addr16
clc
mov
test
sub
sub
loope
inc
and
mov
outs
in
mov
nop
push
sbb
test
icebp
mov
pushf
pop
(bad)
push
mov
adc
sbb
call
jp
test
imul
mov
cmp
sbb
ficomp
rcl
mov
adc
xchg
sti
daa
out
and
out
dec
xchg
(bad)
ja
pop
cmps
and
dec
aam
jb
aad
rol
or
retf
mov
jne
mov
sub
mov
xlat
aas
aam
cmp
out
jae
(bad)
(bad)
or
adc
pop
ror
cmp
mov
outs
repz
push
cmp
scas
enter
mov
sbb
aad
das
inc
push
retf
push
retf
or
sbb
cwde
in
xchg
lods
repz
fs
sub
mov
cwde
mov
shl
repz
repz
cmps
cmp
pop
call
mov
pop
jmp
push
(bad)
rcr
adc
arpl
das
imul
lods
adc
loope
(bad)
jecxz
ror
mov
cmp
adc
adc
(bad)
cmp
movs
jp
test
je
mov
jns
inc
push
inc
fsubr
ins
cs
sahf
in
xchg
dec
push
adc
mov
in
out
fld
cmp
adc
xor
sub
pop
mov
test
(bad)
mov
push
aaa
repz
inc
int
add
fst
fisttp
cmps
push
inc
dec
add
pop
cmp
jo
imul
mov
push
(bad)
add
jae
or
stos
pop
adc
loop
and
add
mov
enter
mov
jmp
xchg
pushf
loopne
ret
outs
mov
hlt
int3
add
arpl
pop
mov
repnz
mov
jnp
pop
and
jle
jecxz
mov
ret
push
dec
push
xor
mov
and
fadd
movs
pop
fadd
loop
jge
call
dec
xchg
rol
push
ins
pop
repnz
push
sti
and
fs
bound
mov
xor
jge
ins
psrld
nop
arpl
leave
cli
cmps
mov
mov
and
mov
add
sub
test
push
fstp
adc
ja
xor
test
loop
mov
cmp
xor
cli
lds
mov
sar
fcomp
pop
fstp
clc
jge
mov
int3
test
pushf
mov
pusha
cmp
and
leave
popa
mov
cdq
pop
test
sub
mov
(bad)
cmp
inc
inc
iret
sub
and
or
stos
cmp
add
scas
mov
inc
mov
icebp
push
inc
adc
dec
jg
dec
addr16
iret
and
fcom
call
fmul
xchg
xor
addr16
add
cmp
imul
neg
or
cwde
test
mov
in
mov
inc
cmp
scas
not
in
fldcw
jg
add
push
movs
xchg
push
cmp
adc
mov
xor
and
sbb
mov
(bad)
retf
xchg
mov
jb
adc
mov
(bad)
xchg
dec
mov
dec
cmp
cmps
aas
push
fs
push
mov
outs
not
(bad)
push
dec
xchg
std
outs
jp
ins
pop
xchg
loopne
xchg
jle
jmp
int
and
adc
mov
inc
pop
push
pop
not
aam
pop
mov
cmc
jmp
xor
retf
jno
cs
pop
mov
jp
mov
and
maskmovq
idiv
adc
mov
es
lods
fst
and
sub
inc
aas
ja
mov
sbb
adc
mov
push
xchg
sbb
or
nop
pop
or
xchg
movs
lods
int
test
mov
sub
stc
mov
sbb
push
adc
or
cmp
xlat
adc
push
mov
outs
mov
jecxz
je
xchg
pushf
je
ss
aas
call
sbb
mov
bound
push
jnp
push
xor
imul
scas
cs
mov
adc
mov
ret
imul
in
jp
cdq
or
and
imul
fcomip
xor
cmp
cmp
add
xchg
(bad)
jl
sub
jmp
or
push
je
shl
into
push
and
xor
inc
mov
ss
pop
mov
sub
out
inc
cmp
or
inc
jno
mov
ficomp
stc
push
bnd
enter
or
fcom
jecxz
enter
push
ss
rcr
sub
fsub
out
jge
push
adc
and
push
dec
int
mov
add
jge
mov
push
mov
das
mov
sub
stos
push
pop
add
in
test
sub
push
(bad)
icebp
call
sub
fiadd
xchg
pop
sahf
mov
sub
or
sub
idiv
xchg
div
jb
jp
lds
pop
arpl
and
fsub
shl
and
mov
lds
jmp
xor
mov
(bad)
cmp
test
int
add
fsub
cmp
rol
mov
rcpps
mov
pop
out
cmp
push
cmp
lods
inc
fs
je
xchg
pop
test
push
ss
bound
js
fs
inc
push
ret
(bad)
xor
jp
jbe
mov
and
jno
inc
rcr
xor
leave
fisttp
sub
dec
pop
lock
scas
and
in
clc
mov
or
dec
xchg
push
fidivr
aam
jae
jae
ins
jle
mov
cmp
pop
dec
add
popa
mov
arpl
pop
retf
cli
es
jl
jecxz
mov
ds
mov
stc
lea
loop
imul
push
add
push
add
je
xchg
sub
xor
sub
ret
inc
shr
sbb
or
test
sbb
lock
cmps
add
aam
fimul
jnp
cli
repnz
pusha
fsub
xlat
test
pop
scas
sbb
mov
push
repz
mov
cwde
and
stc
ficomp
add
sub
loop
test
outs
add
mov
in
dec
cdq
ins
lock
adc
jbe
fidiv
das
push
pop
leave
ins
and
xor
push
or
stc
daa
ja
jno
or
pop
cmc
retf
aaa
dec
into
jb
aad
rol
push
std
xchg
and
jb
into
push
xchg
xor
pop
inc
add
xlat
push
fist
retf
hlt
shr
and
das
repz
stc
mov
(bad)
out
cmp
pop
imul
inc
pop
out
cdq
inc
aam
test
push
push
push
push
push
mov
ins
das
inc
in
or
push
(bad)
hlt
mov
das
lods
aaa
out
xor
adc
xchg
push
dec
scas
sub
je
or
adc
cmc
mov
aas
pop
push
outs
cmp
push
push
rol
idiv
jl
cmp
inc
sbb
or
xor
mov
hlt
popf
std
(bad)
int3
popa
icebp
inc
inc
pop
and
fild
fidivr
sbb
(bad)
and
jl
or
inc
retf
ficom
and
push
mov
or
sub
adc
xchg
inc
pop
push
jmp
in
aad
mov
retf
add
push
pop
and
in
sar
push
ficom
dec
gs
mov
cmp
pushf
mov
jecxz
ffreep
out
cmc
shl
into
pop
jl
dec
les
test
sub
cli
fcomp
loop
xor
popf
sub
icebp
pusha
loopne
xchg
adc
jmp
pop
test
push
(bad)
scas
jmp
pop
std
dec
mov
mov
mov
dec
enter
popa
or
xchg
daa
mov
call
and
push
mov
popa
add
sahf
scas
push
jp
in
push
ret
push
sbb
inc
lods
adc
mov
push
xchg
in
iret
dec
jecxz
aaa
xchg
add
mov
sbb
outs
xchg
ds
test
in
jbe
idiv
cmp
clc
lods
ins
mov
(bad)
mov
cs
fsub
mov
fistp
mov
out
cmc
(bad)
sbb
nop
imul
mov
in
test
push
sahf
ficomp
fdiv
mov
mov
sbb
jnp
dec
mov
mov
sub
push
mov
dec
jge
ficomp
dec
shl
sbb
mov
mov
push
xchg
mov
(bad)
loope
fsubr
cmps
test
and
out
mov
cmps
sub
push
fld
nop
(bad)
hlt
ins
cmp
and
sub
in
or
jecxz
mov
daa
in
iret
dec
cld
mov
pop
(bad)
rcl
(bad)
lock
and
jmp
not
outs
int3
xchg
popa
rol
mov
dec
ja
mov
jns
dec
cmp
ins
cmps
ror
push
dec
cmp
jae
je
ret
push
(bad)
loopne
js
mov
out
sti
xor
lahf
sti
xchg
and
jg
rcr
add
jmp
das
pop
(bad)
call
sahf
call
inc
xchg
add
pop
(bad)
movs
inc
test
inc
pop
dec
loop
xor
xchg
pop
rcl
lods
dec
das
rcr
clc
addr16
xor
aam
hlt
dec
mul
clc
mov
cmp
mov
stc
lods
sahf
mov
ss
stos
dec
shl
stc
push
inc
in
gs
sbb
call
clc
push
jnp
cmps
sub
(bad)
inc
add
cwde
push
inc
cmps
xor
shl
sub
push
fmul
mov
sub
and
iret
xchg
js
jecxz
out
dec
sti
in
jecxz
xor
lahf
in
rcl
adc
xchg
lods
pop
gs
sbb
test
push
jecxz
pop
cmp
fisttp
popa
popa
imul
inc
jmp
mov
lods
test
dec
ins
hlt
cmps
sub
mov
(bad)
push
add
gs
or
fwait
popa
jmp
jp
adc
adc
jb
pop
pop
jns
gs
xor
js
xchg
data16
or
clc
add
jl
test
rcr
cmp
xchg
add
test
das
out
movs
add
push
in
pop
ret
(bad)
jo
xor
xor
(bad)
les
shl
jge
push
nop
data16
test
cmp
neg
cdq
fwait
movs
pusha
popa
mov
or
xor
(bad)
or
cmp
inc
loopne
xor
cmps
inc
mov
sub
mov
mov
xlat
add
push
cmp
jge
outs
xor
jmp
in
and
cmps
sub
sub
ins
mov
pop
stos
test
fstp
out
movs
cdq
adc
mov
cs
and
imul
loope
leave
push
jmp
mov
bound
push
out
adc
pop
ret
adc
movs
enter
jns
xchg
inc
push
xchg
fincstp
repnz
mov
mov
rcr
enter
adc
mov
mov
lahf
pop
aas
inc
mov
popa
popf
inc
push
sub
into
pop
add
test
imul
test
xor
xchg
ficom
or
shl
cs
cmp
in
out
inc
inc
mov
jne
jmp
out
sub
ja
(bad)
les
cli
imul
adc
sbb
mov
enter
add
out
and
cmps
and
xchg
daa
and
leave
int
xor
loop
pop
rcl
call
adc
jno
pop
fmul
cli
jg
loope
dec
outs
aad
scas
aas
jle
xchg
sahf
xor
(bad)
jecxz
sub
dec
fnstenv
outs
sbb
fistp
cli
out
mov
ret
arpl
lock
xchg
mov
jne
out
jbe
mov
aas
mov
mov
fcomp
and
jp
imul
xor
dec
sub
mov
cwde
sahf
mov
lea
push
jmp
(bad)
shr
or
xor
fidiv
mov
pop
popf
cmc
xor
xor
xchg
imul
pop
movs
cmps
pop
sub
adc
out
mov
into
mul
dec
xlat
mov
pop
cmp
and
pop
js
sti
lea
xchg
mov
adc
in
das
ins
pop
pop
pop
sub
fimul
jge
jo
dec
xchg
add
cmps
ror
push
jns
stos
push
lock
push
leave
cmp
scas
push
push
jmp
not
fisubr
(bad)
or
xor
xlat
test
push
mov
out
pusha
into
ror
addr16
jmp
aam
call
jg
jmp
inc
cmps
or
std
jle
loope
bound
fist
or
jns
nop
cmp
int3
inc
(bad)
push
dec
or
aad
push
lods
popf
into
or
movs
push
pop
dec
inc
inc
xor
pop
push
mov
or
fwait
and
cwde
in
cmp
mov
mov
cli
lock
test
les
popa
mov
int3
das
push
mov
test
or
icebp
jnp
sbb
push
push
add
mov
push
mov
(bad)
mov
add
(bad)
jmp
mov
and
imul
popf
dec
add
pop
jns
jb
xor
mov
cs
iret
sub
or
xlat
dec
adc
mov
dec
sahf
cmp
ret
sti
xchg
lock
add
mov
fadd
mov
in
js
in
hlt
cmps
mov
adc
rol
mov
lea
dec
aam
xor
lock
add
cmp
mov
push
(bad)
clc
sahf
sbb
bnd
inc
xlat
sbb
inc
inc
mov
ror
mov
xchg
sbb
into
dec
mov
sar
and
ss
or
push
mov
scas
adc
movs
mov
fwait
inc
hlt
xchg
shl
and
jmp
(bad)
scas
push
movs
push
mov
xor
repz
mov
arpl
pop
push
icebp
imul
xor
push
(bad)
jge
cli
repz
fst
mov
cmps
or
jae
int3
mov
pop
cld
xor
pop
aam
sub
out
gs
sbb
pop
(bad)
in
sub
pop
inc
pop
push
lock
pop
(bad)
pop
movs
ret
sub
out
das
push
sub
leave
jno
popf
sbb
call
and
lds
rol
aaa
sub
nop
mov
pop
xchg
loop
test
jp
cmps
out
cmps
arpl
adc
loope
fidiv
adc
push
fwait
or
sub
push
inc
(bad)
lods
out
scas
(bad)
mov
shl
cdq
inc
add
or
inc
lock
inc
addr16
sbb
mov
sbb
shl
dec
lods
jl
mov
inc
cmp
dec
icebp
push
cmps
out
xor
mov
not
shl
pop
xor
stos
icebp
mul
popa
std
cwde
ds
sub
and
(bad)
lock
ret
inc
je
test
ds
mov
out
push
add
dec
bound
das
jne
or
and
inc
mov
(bad)
pop
stos
leave
clc
loopne
ins
add
rep
xchg
fld
ja
ds
and
sbb
int3
mov
push
dec
inc
mov
cmp
inc
mov
and
(bad)
out
sbb
aas
add
fwait
popa
jb
jp
mov
daa
inc
lods
cmp
pop
sti
test
pop
nop
mov
xor
mov
popf
sub
sahf
dec
mov
cmp
(bad)
repz
es
inc
mov
jmp
dec
or
cmp
ret
xor
or
cmp
and
add
cmp
sub
push
xor
pop
cmc
popa
imul
xlat
lahf
daa
mov
into
adc
mov
in
in
and
sbb
mov
or
loopne
inc
fstp
or
hlt
arpl
inc
adc
mov
sub
rcr
xor
icebp
adc
js
adc
mov
ins
mov
xchg
hlt
push
fs
lock
shl
cmp
push
or
aaa
mov
test
popf
imul
bound
mov
outs
sbb
inc
mov
inc
retf
xor
xor
adc
or
sub
fcom
dec
push
add
ret
loope
call
test
mov
hlt
pushf
cmp
addr16
push
sbb
xchg
das
fs
cmp
loope
cs
inc
xchg
fist
sub
dec
xlat
mov
mov
ins
das
cmps
int3
mov
movs
stos
leave
ror
fistp
xor
test
mov
inc
adc
mov
(bad)
mov
cld
retf
dec
xchg
dec
push
push
aad
sub
rol
jecxz
daa
or
push
ja
test
pushf
inc
in
ins
rcl
or
push
in
pushf
xchg
sub
div
repz
loope
pop
mov
add
out
mov
mov
leave
push
pop
ficom
xchg
pop
jne
and
dec
fld
repz
das
popa
stos
pusha
mov
add
add
push
pop
pop
jg
fild
sub
or
ds
mov
jmp
in
dec
mov
pop
add
leave
sbb
jo
out
push
or
ins
cmp
ret
mov
jmp
adc
dec
int3
sbb
sbb
add
or
jl
or
push
and
and
leave
test
lods
(bad)
ja
xchg
add
imul
pop
mov
adc
icebp
and
dec
jecxz
addr16
(bad)
xchg
pop
push
rol
jbe
cmp
fcom
shr
inc
adc
adc
mov
add
ret
les
pop
sti
nop
aad
lahf
cmp
sbb
fisttp
cld
push
lds
in
cwde
dec
xchg
aam
sbb
push
lods
mov
cmc
and
push
sub
out
inc
retf
push
cdq
retf
mov
cli
out
adc
jecxz
ret
jmp
pop
aad
call
sub
and
mov
mov
test
dec
mov
sahf
test
(bad)
sbb
push
scas
dec
pop
cmps
xchg
jns
or
lahf
(bad)
out
pop
fimul
pusha
sub
xchg
sub
cs
xchg
jns
cmp
push
movs
mov
pop
jmp
add
aad
neg
sbb
jmp
dec
push
(bad)
iret
sar
popa
rcl
adc
or
push
outs
dec
fwait
mov
cli
mov
sub
sub
dec
data16
pop
daa
sub
sbb
in
int3
movs
test
mov
cmp
mov
movs
or
shl
leave
jp
jo
stos
push
sbb
xor
mov
mov
scas
push
fild
out
sub
daa
(bad)
jo
and
frstor
cwde
mov
jae
adc
push
xchg
test
push
add
jmp
or
mov
push
les
fdivr
fadd
(bad)
fcmovnb
cmp
inc
jne
mov
ja
repnz
rcr
xor
ds
retf
mov
pushf
mov
repnz
(bad)
sub
in
out
es
sub
xchg
push
push
sbb
mov
mov
stos
or
jle
ja
adc
inc
adc
lock
loop
push
dec
cmc
daa
pop
ficomp
inc
xchg
in
adc
pop
cdq
mov
int
gs
fisub
stos
mov
daa
pop
ret
cmp
nop
test
add
stos
push
xlat
nop
in
cld
scas
sbb
pop
fst
dec
xchg
bound
dec
push
dec
cmp
sbb
and
pop
loopne
arpl
jge
adc
pop
xchg
xchg
movs
fisttp
arpl
mov
das
fsubr
adc
imul
or
fisubr
(bad)
(bad)
mov
cmp
mov
fmulp
js
popf
or
jne
cli
into
adc
and
pop
mov
dec
mov
mov
ins
call
das
mov
test
in
cwde
sbb
push
mov
push
fstp
sahf
xchg
out
shr
add
mov
in
lea
push
test
ficomp
jg
or
push
xor
lea
mov
sbb
jp
test
sub
push
add
and
je
adc
aaa
cmp
sti
ins
bound
cld
push
fcmove
dec
ret
adc
(bad)
dec
jg
xchg
in
in
push
xchg
and
push
mov
(bad)
mov
test
cmp
rcl
mov
enter
mov
mov
xlat
mov
popa
mov
or
pop
pop
jb
and
(bad)
sbb
dec
adc
data16
popa
push
mov
cmp
and
lods
rcr
xchg
fdiv
pop
(bad)
fsub
(bad)
aad
mov
and
mov
out
inc
ret
sbb
(bad)
sar
aaa
fld
sub
inc
das
ret
in
sub
shl
into
add
mov
sub
cld
xlat
or
sbb
test
fadd
shl
xor
jmp
ins
mov
sub
mov
pop
movs
adc
and
push
jno
out
test
bound
(bad)
jg
scas
dec
mov
dec
arpl
pop
mov
xchg
adc
xor
repz
mov
adc
call
(bad)
out
arpl
test
movs
mov
jno
jp
cwde
cld
and
into
add
call
call
mov
sub
sub
add
push
enter
xchg
stos
sub
pop
jg
mov
cmc
out
xor
or
push
aad
(bad)
mov
fist
sub
pop
imul
pop
push
addr16
js
adc
shl
push
stc
or
xchg
push
call
and
or
cmp
mov
push
sub
mov
cmc
sub
cmp
inc
jmp
add
add
dec
add
retf
jns
fisttp
clc
jecxz
aas
jg
jl
popa
lock
mov
jns
jae
mov
sub
pop
jecxz
adc
adc
aad
xchg
cdq
xor
lds
hlt
or
ds
out
dec
aaa
pusha
and
push
or
xor
(bad)
test
and
xor
nop
out
mov
(bad)
mov
mov
lds
outs
repz
arpl
test
xchg
test
adc
inc
clc
mov
js
mul
not
cli
out
pop
mov
push
and
mov
cmp
push
pop
imul
pushf
scas
mov
mov
fisttp
jnp
scas
out
jl
cmp
xchg
xor
out
lea
dec
(bad)
addr16
jns
or
popa
pop
jns
push
pop
add
fwait
and
out
sbb
out
fucomip
rol
adc
xchg
add
cmp
sbb
jp
pop
je
jns
js
inc
in
mov
mov
call
jo
xor
sub
pop
(bad)
jl
fwait
shl
jae
out
or
popf
retf
dec
add
and
sbb
mov
push
add
rol
jno
ror
aas
inc
cwde
push
add
or
push
mov
lahf
dec
(bad)
dec
jae
sub
or
xchg
cmp
repnz
sbb
xor
test
ins
aad
push
jnp
add
push
loopne
xchg
fist
inc
test
popf
into
pop
dec
(bad)
loopne
(bad)
jno
sub
mov
std
dec
and
movs
lds
icebp
div
std
dec
out
xchg
(bad)
movs
sub
movs
inc
cmps
dec
stc
gs
aas
sub
fs
xchg
and
sbb
cld
push
xor
fwait
cmps
(bad)
cs
iret
aad
xor
mov
mov
and
sbb
mov
adc
ds
xchg
mov
mov
ja
fwait
in
out
aas
push
aas
and
neg
aam
pushf
movlps
cmps
retf
arpl
stc
(bad)
test
or
rcl
sbb
outs
jnp
push
enter
dec
mov
xchg
adc
cmp
cli
inc
(bad)
mov
add
lock
add
add
shr
gs
and
cmc
jnp
shr
mov
xchg
sbb
pushf
fst
jmp
and
mov
inc
xchg
imul
(bad)
sub
and
cmp
cmc
(bad)
in
js
mov
imul
lds
cmp
fs
xchg
and
sub
sbb
shr
leave
loopne
pop
sub
jl
cli
sub
cmc
pop
sub
pop
cmc
xchg
push
mov
fdiv
lock
(bad)
xchg
and
in
mov
cs
and
ss
mov
xor
rcr
test
sbb
fwait
test
js
xor
iret
sub
adc
fcmovbe
mov
sahf
and
inc
je
or
fsubr
ret
inc
dec
cmp
es
(bad)
call
out
(bad)
xchg
and
aad
mov
mov
push
pop
(bad)
or
ja
cmp
dec
in
mov
pop
sbb
ret
cmps
xchg
or
xchg
das
lods
jo
mov
and
mov
or
(bad)
movs
xchg
iret
or
(bad)
and
stos
sbb
pop
jmp
and
outs
call
jno
test
retf
or
int3
in
xor
into
ins
repz
cmc
inc
mov
enter
sbb
in
aas
pop
add
aas
or
mov
movs
(bad)
(bad)
sub
sbb
jno
push
jmp
push
mov
mov
aas
mov
sub
test
adc
jne
jecxz
jmp
(bad)
mov
out
fimul
ds
loope
(bad)
lods
push
jbe
pop
cmps
clc
xchg
scas
aaa
add
test
pop
xchg
mov
mov
call
adc
sub
lock
pop
xchg
sar
imul
repnz
shl
scas
imul
std
int
jp
pop
mov
es
adc
mov
add
bound
sbb
inc
mov
xchg
or
into
add
lock
mov
inc
push
mov
call
pop
mov
arpl
clc
dec
pop
call
mov
jecxz
movs
and
xchg
rcr
mov
lods
imul
xchg
xor
jmp
jnp
(bad)
inc
or
mov
push
loopne
repnz
xchg
repnz
ret
popf
mov
jb
mov
das
fsubr
mov
or
and
pop
jb
lods
(bad)
cli
sub
mov
pop
mov
sbb
cmps
dec
cmp
stc
pop
xor
pop
jg
add
in
ds
xchg
call
xchg
mov
and
pop
xor
cmc
js
std
sub
inc
jbe
jl
icebp
jmp
mov
dec
not
loope
push
push
xchg
xor
sub
popf
dec
push
mov
(bad)
xchg
ficomp
jge
jl
sub
stos
std
js
sub
fiadd
jo
inc
jmp
jg
out
movs
pop
pop
mov
adc
cmp
or
lock
inc
cld
hlt
jmp
adc
leave
imul
sub
xor
(bad)
int
push
inc
aam
add
in
dec
mov
xor
mov
jmp
out
adc
mov
(bad)
(bad)
dec
fistp
xchg
or
ja
add
jmp
or
lods
cmc
inc
push
add
mov
mov
mov
and
pop
popf
jp
or
mov
mov
(bad)
fist
xor
sub
fwait
cdq
mov
xor
jne
dec
ret
addr16
push
inc
leave
fnstsw
dec
test
iret
mov
fwait
ins
out
xor
inc
dec
cmc
or
dec
dec
repnz
xchg
lock
mov
jg
test
imul
cmp
jns
add
in
mov
pusha
gs
adc
sbb
add
mov
pop
pop
dec
and
outs
or
movs
bnd
sub
mov
jge
cli
mov
in
repz
xor
cmps
push
inc
fsub
xor
cli
jo
aad
fadd
pop
adc
stos
cli
aad
lahf
pop
pop
mov
int3
imul
or
dec
imul
pusha
or
mov
in
and
xchg
imul
cli
setno
mov
(bad)
mov
or
sub
mov
gs
push
dec
enter
xchg
lods
lahf
scas
sbb
push
ror
pop
mov
jle
add
mov
test
sub
adc
loop
push
sbb
cdq
pop
rcr
lods
aad
lea
je
ret
adc
and
or
ficomp
push
sub
push
cmp
adc
cmps
mov
cmp
retf
dec
es
xor
rcr
inc
and
mov
mov
cmp
fsubrp
mov
repnz
xor
jecxz
sbb
adc
pop
loopne
(bad)
ret
adc
js
stc
ret
call
and
movs
mov
mov
jno
mov
fist
arpl
pop
movs
sbb
xor
pop
dec
outs
cmp
inc
and
popa
dec
mov
mov
(bad)
adc
dec
jl
dec
(bad)
test
popa
movs
xor
bound
add
xchg
mov
mov
loop
push
call
xor
sbb
mov
aas
dec
std
lods
lahf
stos
push
add
call
mov
fst
fmul
sub
dec
xchg
mov
rcr
push
stos
repz
icebp
loope
dec
idiv
sahf
(bad)
mul
mov
pushf
cmp
ds
je
add
in
jp
icebp
dec
and
cwde
jmp
mov
cmps
push
fst
or
inc
and
out
cld
pusha
xchg
popf
fadd
imul
fwait
mov
(bad)
test
sub
jnp
mov
adc
and
mov
push
and
das
lods
sbb
pop
loope
sbb
push
cld
mov
lahf
(bad)
mov
loope
leave
imul
(bad)
fnstenv
cmp
call
repz
add
inc
outs
mov
adc
and
out
sahf
ss
aaa
inc
add
jmp
sub
cwde
add
mov
mov
in
jge
pop
xor
jp
mov
loop
dec
push
lods
inc
cmp
in
or
or
cmp
lahf
dec
jge
div
sub
dec
test
sahf
cmp
xchg
pop
sbb
js
cmp
inc
pushf
sar
outs
pop
into
or
xlat
test
enter
pop
pop
out
dec
mov
std
sbb
jl
sbb
jle
shl
mov
mov
push
shr
mov
inc
xchg
ficomp
inc
ja
adc
sar
call
call
and
test
loop
adc
(bad)
(bad)
sbb
(bad)
mov
sahf
xchg
or
mov
xchg
adc
lea
(bad)
sbb
sub
jecxz
in
cmc
mov
sbb
and
in
out
fisub
cmp
(bad)
cdq
sub
inc
jb
jp
out
das
ins
inc
sbb
push
int
or
ret
(bad)
dec
or
xchg
mov
retf
dec
pop
sub
add
jo
sub
dec
pop
loopne
jb
leave
xor
int3
(bad)
pop
pop
pop
scas
out
pop
dec
rol
rcl
popf
cwde
pop
add
xchg
stos
push
sbb
mov
adc
dec
cli
shl
jmp
mov
or
mov
call
ins
int
inc
fmul
pop
add
push
push
ins
cmp
cdq
lods
aas
js
fwait
mov
and
and
(bad)
shl
xchg
dec
mov
push
push
stos
jno
aaa
push
jmp
scas
gs
xchg
jg
cmp
pop
cmp
stos
imul
scas
jb
add
aaa
cwde
lock
cmp
sub
scas
inc
pop
add
sti
xor
jbe
lock
fwait
cwde
mov
retf
(bad)
pop
fadd
adc
fcomi
mov
jnp
outs
mov
push
cli
sar
or
jno
rol
test
sbb
mov
xchg
js
dec
(bad)
push
call
mov
or
outs
imul
aam
cmp
outs
xchg
bound
inc
jo
jge
xchg
add
call
or
repz
pop
inc
mov
sahf
cmp
stos
std
repz
retf
in
(bad)
out
jge
xchg
adc
mov
jb
push
pop
ficomp
ficom
mov
addr16
and
xchg
lea
cmp
int
or
clc
jp
imul
retf
push
sti
xchg
jns
lds
ds
sub
pop
mov
lahf
outs
add
iret
sub
mov
loop
shl
iret
enter
jecxz
mov
push
outs
bound
jb
out
fsqrt
enter
mov
push
and
push
push
in
fld
jle
jae
in
ins
jle
inc
stos
sbb
adc
retf
and
lahf
dec
push
sbb
(bad)
mov
mov
daa
mov
dec
sar
aas
in
and
push
arpl
(bad)
mov
retf
repz
add
in
mov
cld
xchg
jo
lds
lock
rol
imul
fst
int3
xor
arpl
sub
add
lea
mov
clc
pop
je
cmp
(bad)
cmp
in
sbb
xor
imul
jp
les
inc
sbb
dec
dec
xchg
jne
sub
jmp
fcom
aaa
shl
xchg
pop
shr
fdivr
mov
mov
push
inc
(bad)
es
sbb
and
pop
icebp
out
xor
lea
push
sub
inc
pop
cmp
mov
or
test
das
or
and
jecxz
add
sbb
lods
adc
xchg
div
xor
inc
aas
adc
sahf
ins
mov
xchg
inc
or
adc
inc
div
in
or
adc
daa
mov
cmp
shr
jg
sub
lods
cmc
(bad)
xor
outs
mov
aas
or
pop
inc
sub
retf
in
fld
jb
sbb
fiadd
push
les
push
xlat
into
mov
call
cmc
mov
sti
xchg
std
aad
xchg
arpl
and
xchg
xor
mov
cmp
jecxz
add
cmp
retf
scas
dec
sbb
cmp
mov
xor
das
jb
loope
dec
sub
inc
sti
pusha
icebp
dec
mov
cmp
cmps
not
mov
jb
shl
inc
pop
stc
pop
js
mov
mov
movs
inc
mov
icebp
sbb
xor
sbb
sub
inc
cmp
sti
mov
push
xor
sub
clc
jne
push
mov
fcomp
call
pop
add
cdq
dec
cs
dec
mov
bound
xor
dec
sbb
add
(bad)
adc
outs
jge
sbb
ds
loopne
loop
aas
es
dec
adc
cmp
out
and
fisub
inc
add
pop
xor
sti
scas
cmps
sub
jg
repnz
mul
icebp
cmp
dec
or
lahf
xor
push
test
mov
push
push
push
and
mov
out
mov
or
(bad)
add
loop
push
dec
inc
add
in
imul
data16
mov
inc
jl
ss
add
fimul
push
in
loope
cmp
xchg
(bad)
jnp
mov
int3
icebp
inc
and
mov
je
cmp
sahf
mov
ficomp
or
clc
sar
rol
mov
mov
rcl
and
ss
repnz
inc
(bad)
fwait
js
cmp
fld
sub
lds
fldcw
mov
sub
cs
(bad)
push
cli
out
inc
das
push
popf
mov
out
jecxz
in
test
jns
adc
cmp
cmc
call
fwait
xlat
lods
inc
push
popf
es
add
adc
enter
push
cmp
pop
into
js
lock
je
mov
call
fadd
and
into
pop
mov
nop
aaa
sub
fisubr
cmps
jg
push
inc
adc
push
data16
jge
dec
out
scas
and
mov
add
mov
outs
cmp
pop
jge
loope
pop
add
pop
scas
adc
pusha
push
jl
or
std
jae
call
mov
fwait
call
(bad)
jnp
inc
(bad)
mov
mov
(bad)
push
(bad)
test
push
lahf
mov
xchg
xchg
mov
(bad)
int
xor
ins
jmp
data16
mov
jmp
sbb
add
lock
jnp
sub
rcr
lahf
bound
sub
cmp
push
xor
pop
sbb
jmp
out
sbb
add
or
mov
(bad)
bswap
stos
jge
xchg
nop
mov
call
fld
push
adc
cmp
(bad)
bound
fld
sti
nop
xor
add
leave
std
and
mov
bound
mov
pusha
in
jp
push
push
xor
or
pop
push
sbb
push
sbb
xchg
aad
test
jne
mov
loopne
ins
xlat
not
inc
or
dec
in
or
(bad)
into
xchg
jle
mov
sub
cdq
push
sbb
rol
cwde
and
cmp
ret
cld
call
repnz
pop
dec
sub
leave
cmp
mov
(bad)
sahf
mov
sar
sub
mov
mov
js
dec
inc
mov
mov
sbb
sbb
loope
clc
or
push
inc
fwait
xor
stos
jns
movs
enter
xchg
jmp
adc
and
pusha
mov
and
xchg
mov
push
xor
call
dec
mov
in
or
ds
fs
and
sahf
adc
pop
xchg
mov
in
(bad)
gs
xor
ds
ret
xchg
dec
mov
lock
inc
push
stos
cmp
dec
scas
push
(bad)
in
scas
and
sub
test
int
jl
mov
stc
pushf
and
and
dec
cs
xchg
mov
mov
fdivrp
inc
jecxz
das
jecxz
pop
fidiv
gs
sbb
mov
pop
mov
and
shr
aas
mov
jne
jno
pop
add
jp
push
dec
mov
(bad)
es
je
pop
das
test
mov
sbb
and
add
in
adc
adc
jl
push
push
mov
jmp
jl
bound
ins
pushf
mov
or
push
fs
retf
mov
mov
mov
cmp
jae
movs
pop
popa
mov
sub
push
loop
jmp
xor
xor
out
or
mov
rol
cmps
dec
dec
call
jbe
sub
aad
ds
ja
popf
pop
jns
out
or
jae
xor
nop
dec
mov
sbb
xchg
mov
repnz
int
out
dec
dec
test
scas
loopne
and
mov
pop
xor
fmul
jns
and
nop
push
push
addr16
cmp
inc
int3
inc
sti
jnp
out
and
stos
in
mov
rol
jno
mov
push
bound
es
jne
dec
dec
hlt
jmp
xchg
mov
add
or
mov
cmp
pop
cmp
xor
imul
fld
xor
mov
lock
mov
mov
sub
dec
pop
jmp
adc
inc
mov
mov
rol
hlt
adc
icebp
(bad)
adc
lods
clc
ja
and
lods
ret
(bad)
in
mov
in
nop
adc
inc
pop
lods
stos
cmp
out
inc
adc
pop
push
sbb
mov
cmp
sbb
add
mov
rol
mov
xchg
mov
inc
mov
xor
xchg
stos
leave
aas
jle
dec
pop
or
xchg
sahf
mov
sbb
sub
mov
cmp
pop
lds
adc
arpl
mov
sti
push
stc
add
xchg
cmp
out
js
push
or
sub
mul
ja
fsub
fmul
xor
movs
jp
mov
cmp
loope
mov
inc
cmp
push
or
addr16
lock
mov
test
dec
clc
shl
stos
lods
imul
jbe
sub
jmp
jle
jmp
aas
jp
ds
mov
adc
push
call
aas
sub
out
mov
fmul
dec
or
mov
sub
mov
js
jne
push
shr
pop
adc
xor
mov
jbe
jl
retf
outs
mov
clc
in
cs
out
lea
loope
adc
push
mov
mov
sbb
in
ja
in
add
adc
lods
mov
aaa
mov
jno
cmc
mov
popf
jbe
pop
xchg
jno
repz
pop
or
addr16
mul
dec
dec
mov
dec
pop
jle
push
push
and
mov
gs
pop
outs
jp
jne
and
jmp
(bad)
iret
jl
xchg
cs
dec
adc
es
or
sbb
mov
push
stos
push
enter
enter
add
jle
jl
lahf
add
fwait
nop
jns
popf
(bad)
aas
xchg
sub
inc
jnp
in
call
and
(bad)
xchg
dec
hlt
lahf
stc
push
scas
and
fst
push
sub
jmp
jp
cmp
push
adc
xor
push
pop
sub
lds
cld
sub
mov
clc
dec
jnp
cmps
or
repz
sbb
xchg
or
adc
jge
ins
es
push
gs
adc
ins
jnp
push
pushf
jg
mov
ja
inc
shr
or
test
xchg
dec
sub
(bad)
daa
hlt
adc
inc
push
(bad)
clc
xor
xor
jnp
iret
sbb
loope
jo
push
inc
pop
les
jg
mov
repnz
xchg
inc
imul
pop
js
(bad)
push
cmp
cmp
pop
stos
clc
imul
cmp
xor
or
xchg
gs
test
sub
pop
sahf
into
lds
cwde
xchg
pop
add
imul
dec
jns
jno
and
cs
clc
jg
test
jecxz
enter
lea
dec
xchg
inc
adc
sbb
arpl
stc
aam
and
xchg
aas
imul
mov
sub
in
adc
mov
push
(bad)
arpl
jg
sti
or
out
call
inc
sub
mov
mov
shr
push
jl
inc
rcr
ja
jmp
mov
ror
pop
into
inc
movs
pop
test
add
call
out
sbb
jb
cmp
(bad)
into
sub
lods
pop
mov
int
sar
jg
and
mov
mov
repnz
push
lods
add
scas
dec
lahf
repnz
jmp
add
loop
js
sahf
in
mov
sub
xchg
je
fadd
xchg
jmp
das
jle
aas
pusha
shr
pusha
mov
sub
and
out
add
enter
pop
jns
adc
mov
aas
pop
mov
sub
push
add
cmps
sub
pop
rcl
dec
movs
fwait
mov
add
xchg
rcl
cmp
sbb
pop
rol
sar
push
inc
sar
lds
imul
pop
jnp
or
es
xor
in
cmps
lods
add
mov
jmp
div
(bad)
ds
pop
loope
add
shl
inc
and
jnp
push
xor
sbb
pop
and
jo
fld
or
ds
mov
mov
sub
push
push
pop
je
push
arpl
jle
out
mov
jp
push
stc
sbb
or
cmp
and
mov
mov
add
cwde
inc
jns
xchg
in
mov
jmp
inc
xor
lds
data16
dec
hlt
xchg
inc
je
(bad)
idiv
push
leave
int3
xchg
dec
retf
or
icebp
out
dec
test
mov
push
sub
cwde
xor
sbb
xlat
mov
push
inc
fstp
sub
(bad)
je
pop
test
xchg
ss
stos
jmp
jmp
stc
xchg
add
xchg
jp
jno
fistp
xor
in
les
jle
mov
outs
mov
mov
xchg
dec
mov
add
sub
(bad)
scas
movzx
xor
cwde
out
add
outs
add
stc
sbb
cdq
pop
fiadd
or
icebp
pop
sbb
ffree
bswap
fist
je
ret
les
jg
fcmovnb
pop
fstp
ins
or
clc
call
dec
les
add
mov
jns
shr
test
es
js
ror
sbb
jmp
nop
lods
daa
gs
stos
sub
push
mov
mov
inc
data16
inc
shl
cmc
movs
in
das
jbe
push
fld
push
ins
shl
bound
fisub
push
inc
sbb
mov
std
mov
dec
add
popf
pop
and
fidivr
add
fild
push
test
dec
popf
fmul
sub
movs
inc
add
sti
push
sbb
add
or
ins
movs
xlat
popa
(bad)
fwait
(bad)
icebp
lock
cmp
and
or
xor
out
dec
movs
icebp
inc
push
mov
mul
aaa
mov
pop
jecxz
sbb
dec
in
xchg
add
pop
adc
out
mov
ins
push
ror
inc
mov
sub
xor
movs
mov
sub
sub
gs
pop
xor
mov
mov
rol
sbb
mov
mov
sbb
push
xchg
pop
or
loope
rcr
push
nop
cmp
cli
ret
xor
push
xor
fiadd
mov
mov
fld
repnz
inc
dec
in
fadd
movs
cmp
enter
leave
inc
repz
mov
repz
scas
push
fidiv
xor
xchg
sub
xor
sbb
or
lods
dec
inc
xchg
mov
in
and
gs
lock
popf
dec
mov
mov
mov
pop
test
xor
(bad)
outs
mov
inc
mov
cmc
fmul
mov
pusha
sub
sub
lods
push
jo
je
cmp
popa
push
in
aaa
push
mov
jge
hlt
mov
cli
xlat
mov
nop
dec
sub
je
jb
mov
loope
sbb
and
sub
stos
call
ror
lock
mov
jge
pcmpeqb
out
pop
jns
cmps
mov
jo
xor
sub
and
lods
setnp
xchg
ja
jp
mov
ror
iret
das
add
sub
xor
repz
pop
or
pusha
out
test
jle
daa
and
gs
mov
pop
dec
jno
or
inc
iret
inc
fdiv
cmp
clc
sub
ja
adc
imul
out
mov
aaa
push
cmp
fisubr
xchg
arpl
into
mov
mov
addr16
scas
sbb
arpl
aas
xlat
fcom
mov
add
icebp
int
add
loop
pop
mov
loop
cmps
mov
(bad)
sar
mov
push
fucomi
ja
outs
push
es
adc
mov
and
out
dec
push
jo
pop
and
inc
inc
imul
add
sub
mov
(bad)
mov
dec
cmps
push
sti
adc
and
jb
xchg
mov
stos
inc
and
fisttp
ds
retf
pop
sahf
xchg
jecxz
cdq
fsub
iret
push
mov
push
mov
or
aas
imul
popf
imul
adc
popf
and
xor
dec
pop
pop
mov
ret
sub
jecxz
mov
push
(bad)
cmp
sbb
pushf
lds
lods
and
aad
arpl
xchg
in
jo
fstp
and
icebp
mov
or
mov
push
test
dec
pop
xlat
xchg
sub
sub
cdq
sti
dec
xchg
(bad)
lods
popa
into
cdq
data16
cs
cmp
test
dec
std
cmp
mov
outs
or
test
vsubpd
dec
push
outs
js
xchg
pop
inc
(bad)
xchg
icebp
call
inc
inc
test
cmp
movs
adc
and
mov
pop
not
adc
xchg
and
not
sar
push
div
sbb
(bad)
in
movs
scas
in
lods
call
pop
ret
inc
fist
shl
inc
adc
mov
cmp
cwde
imul
in
ja
adc
(bad)
xchg
jmp
ins
jp
int3
inc
pop
out
ret
inc
or
les
add
mov
mov
mov
adc
cmp
lock
mov
mov
or
push
add
xchg
cmp
jbe
xchg
stos
int3
or
cmp
std
xor
sbb
push
sbb
push
mov
add
idiv
out
sub
push
mov
aad
jo
in
lahf
mov
cs
iret
out
dec
sub
fisttp
mov
(bad)
outs
xchg
mov
test
ins
adc
dec
mov
in
ins
pop
inc
jne
out
add
mov
js
popa
pusha
loope
stos
int
je
cmc
dec
popf
jp
es
push
loop
cwde
mov
jns
stos
jp
cli
mov
out
call
repz
das
shr
pop
cmps
pop
call
sbb
lock
clc
lahf
call
sub
or
popf
sar
loop
retf
xchg
mov
aaa
sub
stc
lahf
sub
pop
or
jmp
mov
mov
aad
jno
stos
inc
lods
adc
sub
push
push
sbb
mov
cld
push
std
jecxz
xchg
inc
xor
push
push
stos
pop
push
loope
or
jb
push
mov
(bad)
or
hlt
and
retf
sub
dec
mov
and
push
mov
inc
vcvtdq2pd
test
inc
or
mov
aam
sbb
bound
scas
or
cmps
mov
adc
in
pop
xchg
ja
jg
push
xchg
inc
nop
pop
imul
in
and
mov
cdq
xlat
dec
retf
inc
add
lahf
imul
jmp
repnz
and
pop
movs
pop
call
hlt
aas
(bad)
sub
mov
add
mov
mov
retf
pop
in
pop
stos
push
or
and
fucomp
dec
xor
int
xor
movs
cmps
cli
out
add
in
addr16
mov
sahf
sbb
(bad)
mov
call
inc
adc
add
inc
dec
dec
jl
mov
scas
mov
jmp
dec
movs
nop
mov
ss
and
inc
retf
lods
out
inc
fstp
xchg
(bad)
js
adc
stc
sub
jmp
scas
cmp
or
ds
cmp
retf
xchg
sti
in
scas
jb
ins
xor
mov
xchg
xor
and
adc
repz
adc
out
adc
iret
call
add
repz
xchg
or
ret
cmp
arpl
jnp
int
adc
or
movs
ret
mov
pop
adc
pop
cdq
xor
test
inc
ss
push
adc
push
in
adc
mov
into
addr16
adc
je
xor
mov
xchg
pusha
out
push
outs
cdq
or
jle
neg
movs
std
gs
ins
or
dec
or
cs
sbb
xchg
lahf
mov
aas
fucom
or
cmp
test
dec
dec
xchg
sbb
dec
sahf
rep
mov
mov
iret
out
(bad)
sub
(bad)
es
clc
ret
sbb
movs
push
cmp
xor
cld
aam
imul
sbb
mov
mov
add
and
or
test
push
jmp
in
pop
push
jns
xor
cmp
sub
dec
hlt
and
aaa
lds
pop
jl
or
mov
retf
xlat
mov
ror
das
cli
fnstcw
and
sbb
and
or
pop
jae
cmp
loop
in
sbb
inc
scas
scas
shl
xlat
adc
iret
dec
mov
int
(bad)
sahf
xor
in
sub
out
test
jp
in
mov
bound
xor
out
ins
imul
xor
mov
in
jge
cmps
mov
sahf
out
out
add
cs
fimul
mov
cmp
xchg
aad
add
sub
pop
movs
(bad)
(bad)
or
inc
fwait
das
inc
call
mov
adc
cmp
sbb
cli
sub
push
xor
and
sub
xchg
ror
xchg
cmc
js
sub
and
fdivr
sbb
ins
pop
aas
sbb
out
mov
test
mov
jne
sub
pop
add
iret
mov
and
xor
out
jmp
push
je
cld
(bad)
jo
jno
dec
mov
les
cmps
int3
shr
pop
xchg
icebp
adc
test
mov
fisttp
sti
or
xchg
test
cmp
adc
dec
mov
sbb
mov
sar
xor
xchg
mov
cli
sahf
inc
into
xchg
mov
mov
push
mov
imul
push
and
shl
mov
mov
rcr
ss
push
enter
xchg
sahf
xor
lock
test
inc
fdiv
(bad)
fisttp
jnp
shr
pushf
cmp
int3
fcom
fcmovnb
mov
in
mov
xchg
sbb
out
and
shr
sbb
aas
cmp
aad
in
movs
jno
stc
adc
in
inc
push
lahf
sub
mov
xchg
arpl
in
or
cs
adc
sub
mov
test
lds
loopne
mov
cmps
ret
cmp
xchg
dec
push
retf
pop
inc
icebp
dec
push
ins
addr16
inc
cmp
jle
mov
add
inc
stos
xchg
in
enter
xlat
xchg
xlat
sbb
dec
jge
sbb
sub
jp
iret
repz
clc
adc
loop
cmp
ret
iret
or
pusha
shr
fucom
xchg
push
pop
mov
loop
repnz
ss
sti
das
mov
(bad)
pop
jge
pushf
aam
repnz
push
or
sbb
into
push
lods
repz
das
jge
cwde
rcr
out
(bad)
xchg
das
jp
jae
sub
ret
lods
push
(bad)
rol
arpl
enter
arpl
cmp
jno
mov
pop
inc
(bad)
gs
ja
outs
loope
repz
in
repnz
iret
dec
pop
mov
xchg
pop
jp
movs
mov
inc
and
loop
xlat
pop
or
popf
adc
addr16
out
fadd
clc
popa
push
in
inc
call
jb
xchg
sbb
or
ret
leave
leave
arpl
sbb
push
stos
sub
movs
mov
ret
sar
das
jmp
ret
mov
xchg
mov
mov
adc
pusha
pop
fcmovbe
cwde
pop
cmp
push
push
xchg
psrld
inc
repnz
pop
fdivr
sahf
(bad)
dec
or
ins
dec
aad
push
push
js
push
test
inc
mov
movs
iret
ss
mov
pusha
push
imul
shl
push
mov
adc
es
aam
iret
jb
call
and
repnz
cmp
jbe
cmp
outs
ja
cli
in
inc
mov
call
jns
mov
pop
push
arpl
pop
mul
xor
rcr
push
jne
pop
or
daa
add
cmp
cmps
dec
into
popa
inc
les
addr16
lds
jb
shl
cmp
cwde
scas
aad
sti
les
fwait
cmp
pop
cmp
lahf
mov
jb
adc
lahf
cmps
dec
fisub
dec
pusha
mov
cmp
or
scas
mov
mov
or
xor
cmps
push
sahf
loop
aam
retf
mov
es
inc
retf
clc
std
aas
repnz
dec
mov
mov
shl
dec
mov
adc
adc
retf
fidiv
mov
in
add
daa
jge
ja
scas
je
lds
jmp
pop
add
mov
jne
lahf
popa
mov
inc
popf
call
xchg
data16
leave
and
dec
pop
adc
call
call
inc
xor
inc
adc
cmp
dec
fwait
add
clc
xchg
mov
ins
mov
mov
xlat
stc
int3
jge
arpl
call
xchg
lock
jecxz
in
cmc
arpl
cmp
fdivr
lods
outs
cmps
sub
dec
fadd
add
add
loop
pop
inc
mov
fcomp
ja
adc
in
cld
lds
popa
mov
ret
(bad)
loop
mov
les
and
pusha
dec
inc
xor
jmp
cs
pop
call
push
jne
sbb
pushf
in
adc
pop
call
pop
pop
lds
add
mov
mov
mov
ja
int3
aas
pop
adc
cmc
inc
in
(bad)
or
jo
out
aaa
mov
jg
rol
or
fs
pop
dec
popf
test
out
jne
(bad)
jle
shr
add
jb
sub
cmp
or
hlt
cwde
push
clc
cmp
sbb
fistp
jp
pop
fst
cmp
ss
retf
add
retf
jg
or
test
rol
cli
or
ret
push
fisttp
cmc
push
sbb
fnstcw
lds
mov
aam
aam
adc
neg
ficomp
fisub
lods
and
dec
mov
aas
ins
popa
dec
sbb
jg
ds
sahf
js
mov
movs
pop
les
sbb
cmp
add
or
imul
in
mov
jns
int3
dec
shr
not
jmp
xchg
outs
ret
into
inc
pop
and
nop
int
cmp
ror
push
(bad)
push
call
jle
ss
ds
shl
retf
test
xor
sahf
imul
adc
into
jno
mov
es
or
inc
mov
dec
xchg
and
pop
pop
adc
outs
dec
push
xlat
push
pop
lea
inc
es
adc
jmp
push
push
lods
add
jae
pushf
pop
mov
cli
shl
cli
pop
ja
cmp
iret
sub
cs
adc
daa
sbb
out
xchg
lea
mov
iret
aam
cmp
call
ins
push
sub
xchg
adc
fild
rol
js
inc
xchg
jle
in
icebp
dec
adc
inc
mov
inc
stos
retf
jne
jno
and
xchg
mov
sub
push
pop
rcr
mov
xor
dec
xchg
pop
push
fdiv
pop
call
jno
jb
or
pop
jl
cmps
sbb
cmps
fsubrp
fldcw
jae
adc
fs
and
mov
std
gs
jb
jo
pop
cmp
(bad)
clc
add
xchg
movs
add
add
in
mov
mov
es
movs
mov
sbb
sub
xor
sbb
jnp
cmp
movs
cwde
xchg
jnp
pop
mov
aaa
arpl
push
sbb
enter
dec
mov
int
xchg
mov
inc
xor
addr16
mov
test
cmp
or
xor
(bad)
jb
punpckhbw
adc
fs
sti
inc
ins
pusha
adc
and
loope
loope
stos
xchg
fidivr
sbb
push
push
imul
sub
cli
in
lea
jge
data16
pop
movs
xchg
inc
out
inc
fstp
push
inc
sti
dec
mov
ins
into
test
jp
xchg
mov
push
xor
retf
sbb
enter
leave
ss
test
and
gs
out
cwde
push
pop
jno
pop
jge
xor
sahf
xor
in
cs
sub
scas
cmps
outs
adc
xchg
iret
ins
push
repz
rcr
je
pop
out
loopne
test
push
mov
jo
xchg
or
inc
add
push
dec
gs
fisttp
cli
xlat
push
mov
loopne
mov
rcr
push
test
jmp
xor
or
sub
(bad)
pop
out
adc
ret
stos
jnp
lods
pop
popa
push
not
movs
adc
sbb
sub
lahf
sub
jp
xor
mov
push
aam
scas
add
movs
cmp
mov
out
jecxz
jo
icebp
inc
je
retf
psubb
stos
sbb
mov
lahf
mov
retf
cli
retf
(bad)
icebp
(bad)
mov
or
in
(bad)
xlat
sub
int3
into
push
or
rol
icebp
in
call
cmps
cdq
movs
mov
jbe
enter
adc
out
inc
add
hlt
aam
add
mov
dec
dec
and
sub
int3
sub
pop
xor
and
mov
xchg
loop
inc
inc
xor
ins
push
test
adc
imul
repnz
in
sahf
inc
cli
in
mov
pop
jns
pop
push
hlt
std
out
lods
lods
aam
xchg
pop
sub
dec
(bad)
rcl
addr16
aas
xchg
push
ins
mov
mov
loope
js
sahf
test
jbe
push
mov
in
inc
jb
pop
aam
xlat
test
adc
jg
popf
or
addr16
outs
push
cmc
cmp
xchg
sbb
ror
out
xchg
test
xor
scas
xor
xchg
push
es
nop
or
cmp
js
dec
out
adc
rol
xchg
jl
jmp
jp
pop
sub
xor
mov
and
stc
cdq
test
fistp
jmp
ins
mov
nop
leave
cs
dec
leave
push
add
pop
cs
repnz
loope
das
cwde
pusha
shl
add
or
lfs
push
popa
loopne
je
hlt
xor
mov
sub
jbe
xchg
(bad)
xchg
scas
mov
imul
mov
fisubr
loop
or
test
js
aam
adc
retf
mov
xchg
pop
jmp
lds
(bad)
or
mov
cs
cmc
int
pop
aad
mov
jns
adc
pop
jne
int
inc
repnz
push
inc
xor
mov
movs
xor
clc
icebp
sahf
lds
cmp
mov
xchg
adc
dec
dec
add
aad
(bad)
mov
fstp
mov
push
mov
mov
arpl
dec
hlt
cmp
repz
arpl
mov
arpl
xor
adc
push
icebp
ins
xchg
or
stos
cmc
mov
scas
xor
sub
dec
mov
inc
jle
jmp
inc
xchg
test
pop
ret
or
dec
cmps
add
aad
dec
mov
aaa
setne
imul
fwait
push
hlt
push
and
cdq
jo
inc
in
les
and
bnd
imul
daa
and
out
jmp
cli
pusha
sbb
aas
rol
(bad)
js
or
into
pop
adc
xor
aad
test
popa
mov
sbb
shl
xor
pusha
loopne
pop
pop
or
dec
inc
or
jmp
imul
fwait
pop
and
imul
lods
in
stc
fcom
(bad)
push
push
push
and
(bad)
in
adc
mov
push
retf
fisttp
xchg
loop
out
popa
ins
sar
or
pop
xchg
dec
loope
push
repnz
xor
aad
test
jp
and
cmp
inc
adc
xchg
pop
sbb
xchg
mov
or
pushf
xchg
outs
push
retf
bnd
push
sub
mov
adc
dec
xchg
loop
int3
push
das
dec
in
cmps
iret
jae
test
pop
push
push
mov
sub
xchg
sbb
xchg
test
pushf
xchg
daa
retf
bound
and
pop
jle
xchg
pop
popf
push
xchg
out
mov
adc
jns
daa
outs
(bad)
repnz
jo
add
sub
je
in
cmp
jmp
mov
lea
aaa
xor
jbe
mov
outs
test
leave
stos
push
dec
dec
cmp
mov
or
jns
shl
fiadd
dec
or
aaa
fwait
xor
jmp
xor
mov
(bad)
adc
add
pop
call
adc
clc
cmp
sbb
cmp
sbb
xchg
xor
(bad)
mov
(bad)
lea
(bad)
stos
push
int3
mov
int3
mov
mov
sbb
sub
rol
sub
mov
mov
scas
movs
pop
mov
ret
nop
and
xchg
fcomi
xchg
mov
(bad)
div
jae
jo
aaa
xchg
repnz
jg
lods
jecxz
cld
and
cld
fld
mov
add
mov
ins
mov
(bad)
push
inc
sbb
daa
xlat
inc
mov
test
mov
or
sub
sub
and
pusha
into
rcr
mov
mov
lea
sbb
xchg
ds
sub
pop
cmps
and
popa
dec
dec
push
and
jmp
xchg
sahf
push
(bad)
jp
push
jmp
lahf
call
mov
add
jge
mov
or
call
jecxz
push
gs
cmp
xchg
mov
dec
inc
dec
ror
or
popf
inc
jnp
mov
sub
cmc
les
jnp
aam
inc
mov
jnp
mov
add
xor
or
jmp
jmp
(bad)
das
push
std
dec
inc
xlat
retf
test
cmp
dec
daa
push
sar
ins
cmps
enter
inc
xor
mov
jnp
xor
pop
sbb
or
jmp
and
cmp
outs
or
jne
stc
daa
push
push
mov
jnp
jmp
inc
sbb
out
lods
fcmovne
xchg
adc
in
in
mov
pop
pop
add
out
lock
fwait
jae
mov
mov
adc
push
rol
fdivr
jns
jle
shr
and
sbb
add
adc
test
or
aaa
js
jecxz
xor
pop
sub
jnp
mov
add
pusha
enter
jnp
add
daa
ret
in
mov
div
lods
xchg
add
add
dec
outs
repz
or
sub
das
es
mov
and
cmp
pop
and
mov
xchg
jmp
popf
add
xchg
jo
outs
jl
jb
xchg
sbb
in
test
in
mov
xor
out
xchg
retf
mul
aam
popa
dec
or
add
mov
pop
mov
(bad)
sbb
outs
int
mov
es
mov
mov
call
sbb
in
cmc
dec
add
repz
mov
lock
ret
jae
lods
stc
adc
(bad)
out
cli
scas
out
out
mov
cmp
add
xchg
adc
push
sar
ss
repz
pop
add
add
call
mov
in
loop
mov
sbb
das
popa
in
mul
push
push
call
dec
jle
and
sahf
cmps
jae
gs
xchg
(bad)
lock
mov
mov
adc
fadd
js
test
push
aas
(bad)
jns
cwde
xor
fimul
mov
loope
jno
fdivr
daa
push
sub
xchg
add
out
jmp
dec
xchg
in
jle
fistp
cmp
pop
pushf
dec
mov
ds
mov
push
dec
cmp
adc
int3
sar
clc
addr16
ja
aas
inc
jmp
sahf
pop
jle
int
sti
cwde
cmp
mov
mov
stos
lahf
dec
lock
jecxz
(bad)
push
mov
sbb
mov
hlt
and
mov
test
push
add
jmp
arpl
je
int
cmp
add
push
rcr
(bad)
xchg
test
into
add
mov
jp
push
std
xchg
jge
loop
or
jb
test
adc
scas
add
sahf
rol
out
shr
sub
cli
jo
rol
call
push
pop
push
adc
clc
ja
repz
outs
iret
jmp
adc
ret
xor
call
fcmovbe
add
clc
mov
lods
pop
cld
sbb
fldenv
loope
mov
adc
daa
repnz
les
loopne
dec
inc
cmp
test
hlt
hlt
mov
mov
xor
mov
loope
mov
xlat
sbb
mov
in
xor
pop
cmp
loop
pusha
stc
mov
ds
push
xchg
call
pop
add
std
pop
add
pop
(bad)
dec
xlat
out
clc
sub
xchg
nop
pop
bound
adc
inc
push
and
stc
cmp
arpl
jae
sbb
jle
sbb
enter
xor
test
lahf
xor
dec
push
and
push
xor
jae
dec
mov
mov
fwait
icebp
cli
pop
xchg
mov
jmp
cld
xchg
lods
inc
dec
xor
or
retf
and
xor
mov
or
pop
and
inc
xchg
lods
mov
ins
cmp
out
xchg
and
js
jg
movs
std
outs
out
xor
xchg
or
push
fs
push
mov
iret
sub
call
gs
sub
fild
inc
jecxz
(bad)
push
cwde
xlat
repnz
push
aam
xor
fild
xor
gs
or
scas
sub
mov
test
ss
in
cdq
fsubr
or
sbb
jecxz
outs
xor
jmp
leave
call
(bad)
mov
jae
sbb
mov
jecxz
push
jae
sub
outs
inc
jmp
punpckhdq
xor
xor
sbb
pop
daa
mov
aaa
mov
loopne
stos
popa
out
adc
sub
jbe
mov
ret
(bad)
cdq
sar
mov
dec
dec
sub
call
fs
xchg
inc
fisttp
jne
xor
(bad)
inc
int3
cmp
inc
mov
imul
ret
inc
mov
push
aam
sub
inc
std
ja
or
in
icebp
dec
xor
and
call
cmp
sti
push
out
aas
dec
mov
stc
mov
dec
sub
mov
stc
fucomp
push
int3
ret
pop
mov
mov
push
xchg
jbe
jmp
sbb
add
lea
jb
jb
xchg
xchg
or
and
bound
sub
in
mov
(bad)
test
xor
pop
loope
nop
xchg
popf
adc
inc
dec
enter
or
add
out
cmp
jmp
dec
dec
fwait
out
mov
xor
pop
mov
xchg
out
in
gs
xchg
push
inc
cs
xchg
shr
add
test
out
mov
test
int3
add
mov
lods
push
lds
xchg
add
out
ret
js
ja
xor
dec
mov
nop
(bad)
fsub
bound
(bad)
push
into
xor
add
ja
imul
pop
add
jne
mov
push
pushf
cmp
and
bswap
xor
xor
mov
call
push
shr
aas
sahf
es
sub
fisubr
gs
rcl
mov
pop
test
dec
hlt
aad
mov
inc
(bad)
lea
jns
iret
mov
aaa
rcr
push
add
ins
mov
popf
iret
std
test
or
out
clc
xor
neg
add
cli
std
xchg
outs
or
xchg
mov
(bad)
fsubr
xchg
leave
mov
jno
int3
lock
imul
stc
jbe
adc
add
and
or
cmp
cmp
mov
cmp
ror
pop
sub
pop
ins
stos
repz
mov
mov
adc
test
pop
mov
scas
add
mov
sbb
call
(bad)
das
(bad)
js
xor
ins
lds
inc
jae
retf
sahf
push
sub
mov
pushf
pop
add
call
leave
dec
cdq
cmp
das
add
push
jp
dec
push
cmps
and
(bad)
aam
dec
rcl
and
sbb
cmp
nop
icebp
and
arpl
pop
push
(bad)
and
aaa
push
aaa
nop
test
mov
cmps
sub
mov
pushf
mov
mov
lds
dec
sub
mov
adc
adc
mov
inc
xor
fild
or
mov
psllq
xchg
movs
mov
int3
xchg
idiv
xchg
call
rcl
xchg
pop
aaa
push
or
enter
aas
push
loope
nop
mov
rcl
test
mov
fadd
adc
popw
or
sub
out
mov
test
outs
sbb
mov
push
sbb
rol
retf
mov
scas
retf
les
jnp
shl
sub
sbb
xchg
dec
adc
adc
jno
out
xor
test
fs
cmp
sbb
ret
ds
pop
mov
arpl
add
mov
es
pop
or
jecxz
adc
fs
inc
xchg
(bad)
shr
inc
inc
xchg
push
sbb
or
jp
push
mov
or
cmps
icebp
xchg
add
inc
vpaddb
in
mov
push
or
imul
dec
aam
dec
lahf
sti
jnp
push
sbb
les
pop
adc
cmp
jb
fistp
push
push
stos
pop
jb
sub
das
xchg
add
mov
lods
and
fcmovnb
loopne
sub
adc
adc
dec
repnz
leave
pop
inc
in
jle
in
mov
je
or
adc
int
(bad)
pop
das
mov
into
hlt
daa
cmp
mov
dec
sub
(bad)
into
sbb
sub
jae
pop
xchg
out
add
mov
test
retf
ins
adc
fcom
xlat
cmp
pop
dec
or
push
xor
xor
lahf
test
inc
icebp
lds
inc
adc
jne
sbb
pop
inc
cmp
mov
add
pop
mov
sbb
add
cmps
outs
(bad)
enter
pop
outs
mov
retf
loopne
xchg
daa
stc
nop
das
pusha
fst
xlat
pop
(bad)
jmp
dec
or
cmc
pop
xlat
mov
add
(bad)
lods
push
jg
outs
sbb
sub
or
jmp
aas
das
outs
(bad)
jg
adc
inc
pop
iret
pusha
mov
jnp
adc
jecxz
inc
hlt
mov
or
out
out
(bad)
lods
call
adc
cmp
fisubr
or
retf
inc
pop
inc
sub
hlt
mov
loope
mov
(bad)
pop
mov
xchg
jecxz
ficomp
sti
pop
out
and
pop
jb
xor
stc
or
xor
inc
xchg
xlat
lds
xor
mov
jnp
hlt
adc
mov
sub
xlat
leave
mov
bnd
jp
fidivr
cmp
xchg
jmp
retf
(bad)
pop
adc
push
xor
int3
inc
jmp
sub
ins
aad
push
pop
out
xchg
ins
nop
fisub
pop
sub
dec
imul
push
push
mov
rol
jnp
test
outs
and
add
shl
imul
dec
dec
cmp
sti
retf
retf
xor
lock
pop
outs
aad
fwait
out
ret
dec
push
std
shl
jne
jmp
int3
jo
mov
test
fadd
dec
lock
in
rcr
xlat
icebp
ret
pop
push
pop
arpl
cwde
sar
dec
fild
mov
and
lock
fistp
add
out
test
cmps
fimul
or
scas
and
sbb
fcom
retf
es
stos
xlat
shr
sbb
pop
cmp
int3
dec
pop
xor
call
jae
js
ins
shl
add
(bad)
out
xchg
cmp
test
mov
cmp
mov
pop
(bad)
cmps
imul
sub
das
mov
sub
out
jg
test
repz
enter
outs
iret
stos
dec
aaa
jge
popa
shl
mov
and
and
cmc
mov
dec
sbb
lds
outs
adc
sbb
xchg
ficom
dec
js
jmp
pushf
or
hlt
mov
adc
mov
or
test
lods
pop
push
sub
aad
inc
popf
inc
dec
lock
mov
add
cmps
jp
ret
ja
xchg
imul
shl
dec
or
cmp
movs
fadd
mov
push
sbb
xlat
and
cmps
ins
dec
mov
fiadd
adc
mov
cmp
(bad)
push
xor
push
xchg
and
inc
aaa
cmp
cmp
xchg
shr
fsubr
js
sub
scas
xchg
pop
lea
mov
xchg
pushf
sub
data16
ss
stos
enter
sysexit
cmps
pop
pop
push
ds
mov
arpl
imul
jns
mov
ret
mov
movs
mov
fisttp
pop
mov
jmp
push
cdq
inc
mov
jl
or
adc
ror
jns
es
or
fs
call
xchg
mov
cmp
cs
sbb
sbb
popf
xchg
bound
dec
inc
popa
pop
in
pop
pop
xchg
stos
aas
jp
xchg
inc
cmps
call
out
xchg
pop
and
ret
jns
lods
sub
pop
pop
sub
xor
or
xchg
push
mov
jb
sub
call
fadd
or
ins
cmp
aas
ucomiss
cmps
dec
popa
add
mov
pop
or
pop
xor
pop
stos
jno
fiadd
sbb
cmp
and
cmp
retf
fisttp
(bad)
icebp
jo
scas
rol
xor
jmp
or
cmp
pusha
out
push
call
sub
sbb
dec
push
pop
scas
jmp
dec
(bad)
or
or
xchg
dec
loop
and
(bad)
or
jnp
stc
push
(bad)
mov
and
fcomp
fnstenv
sbb
repnz
repnz
or
push
leave
dec
mov
sub
xchg
std
fadd
test
shr
sub
lods
sbb
jg
loop
mov
dec
cmp
arpl
mov
aam
(bad)
fnstsw
sub
inc
cli
and
in
adc
sbb
cmc
mov
dec
sbb
inc
movs
clc
xchg
pop
in
pop
in
sahf
test
xchg
loope
fiadd
imul
gs
hlt
sbb
sbb
add
adc
bound
out
ss
adc
enter
sti
jb
repnz
pop
fwait
fs
mov
sbb
ret
xchg
push
and
retf
icebp
xchg
pop
jo
dec
mov
or
inc
xchg
fnsave
pop
dec
mov
sub
jmp
push
loop
mov
and
popa
inc
mov
dec
pop
and
adc
push
sub
inc
and
outs
fistp
jge
and
clc
gs
into
jge
jo
or
dec
pop
pop
push
xchg
sti
mov
and
pop
add
jge
and
push
xor
sub
push
sub
jns
test
test
xchg
or
(bad)
cmps
xor
mov
add
and
mov
ret
cwde
gs
ss
push
outs
sub
mov
pop
mov
call
pop
stc
xchg
push
repnz
sti
mov
adc
in
movs
leave
(bad)
jae
or
inc
xor
sbb
lahf
popf
cmc
mov
add
adc
pop
sub
mov
(bad)
mov
aaa
loop
dec
fbstp
mov
aas
stos
call
(bad)
mov
dec
jmp
push
mov
mov
jno
daa
sub
push
dec
or
sub
std
cmp
les
je
inc
aam
dec
xor
and
mov
mov
cwde
mov
mov
movs
and
add
bound
dec
pusha
cmc
pop
stc
cli
stos
pop
xchg
jmp
xor
inc
cwde
fbld
out
or
test
inc
dec
call
rol
test
and
cmp
icebp
xor
loop
adc
xlat
sbb
sbb
inc
ja
xchg
enter
sbb
jnp
aad
popf
sahf
jb
mov
mov
add
lods
scas
dec
aaa
xchg
sbb
js
xor
cs
out
cmp
call
icebp
mov
jae
push
outs
mov
fldcw
ss
dec
pop
ret
adc
dec
inc
add
mov
ficom
(bad)
sbb
sbb
data16
mov
and
loope
aam
(bad)
js
je
cmp
in
fnstsw
adc
sar
call
dec
mov
lahf
(bad)
int3
ins
cmp
jo
add
lds
sub
test
xchg
fs
pusha
add
loopne
lods
xor
push
xchg
mov
xor
pop
(bad)
imul
cmp
jmp
mov
test
dec
sti
add
sub
sahf
dec
test
gs
sub
mov
jl
test
(bad)
fxch
cmp
cmps
inc
cmps
call
pop
in
ja
pop
mov
push
fcmovnu
dec
and
push
dec
scas
inc
jns
and
lods
mov
in
push
dec
push
cmp
addr16
sub
ins
xor
cmps
icebp
mov
pop
(bad)
inc
in
rol
int
jmp
test
in
js
stos
std
xlat
sti
sar
push
out
fst
repnz
ret
dec
jmp
fdivr
mov
pop
dec
pop
jmp
inc
fdiv
pop
jno
gs
dec
adc
fidivr
mov
xchg
fstp
or
sbb
xchg
lock
mov
jge
cmc
add
fsubr
loope
loop
pop
jae
mov
xchg
or
mov
jmp
and
fcomp
jmp
scas
imul
sar
std
cmps
or
je
add
ss
rcr
push
jl
fstp
ins
mov
sbb
jb
push
adc
rcr
mov
sub
mov
mov
aad
stos
add
or
arpl
pop
stc
das
sbb
ds
xor
jecxz
mov
popf
jecxz
retf
test
(bad)
out
xchg
lahf
push
dec
or
in
and
inc
pop
jge
xchg
aaa
(bad)
fnstenv
or
cdq
xor
jle
ins
add
push
rsqrtps
shl
sbb
ja
or
xchg
popa
fmul
adc
das
mov
pop
int3
daa
cwde
jmp
call
cmp
pop
cwde
repnz
lahf
add
stos
sub
bound
ds
scas
jle
cmp
xor
jp
cld
mov
push
out
into
call
push
jb
fld
push
mov
jl
add
xchg
dec
sub
shl
pop
cmp
(bad)
(bad)
jmp
pop
repz
sub
int3
jp
mov
mov
test
xchg
nop
fs
pop
add
push
das
jg
(bad)
pop
cmp
stc
pop
inc
sti
mov
or
icebp
(bad)
mov
popa
xchg
(bad)
xchg
mov
adc
pop
mov
jbe
mov
or
or
shl
leave
cs
and
mov
ror
mov
fs
push
inc
stos
nop
or
retf
add
repnz
mov
(bad)
mov
pop
repz
faddp
push
cmp
(bad)
out
data16
push
ja
sub
mov
je
pop
push
xchg
ss
xor
inc
add
mov
add
bsf
cmp
inc
adc
xchg
or
xor
and
pusha
mov
pushf
dec
pop
gs
jle
shl
jo
sub
cmp
and
dec
sbb
nop
hlt
mov
cdq
hlt
imul
pop
sub
xor
fistp
xchg
test
popa
daa
adc
pop
add
daa
fidiv
push
std
mov
cmps
cmp
nop
fsubrp
leave
int3
pushf
jns
test
dec
(bad)
ss
pop
lock
cmp
mov
sbb
aas
add
mov
fcomp
movs
mov
push
(bad)
mov
inc
enter
mov
das
(bad)
or
sub
or
out
bound
sysexit
test
dec
stos
mov
mov
and
jnp
int3
dec
leave
pop
(bad)
sub
and
aas
stos
sub
scas
icebp
(bad)
xor
mov
xchg
call
mov
cmp
outs
xor
or
movs
mul
and
or
sub
add
xor
jmp
push
(bad)
and
push
inc
ror
mov
sub
outs
mov
jecxz
rol
cmp
(bad)
push
pop
adc
mov
adc
shl
cdq
push
out
addr16
inc
xor
fldenv
push
mov
daa
test
loop
sub
mov
lds
ins
dec
in
cmp
dec
ds
pop
xchg
call
dec
sbb
mov
adc
fsub
dec
loope
pop
and
jns
fiadd
mov
mov
xchg
adc
push
in
in
loope
xchg
inc
sbb
imul
and
xchg
dec
push
int3
jle
push
aaa
cmp
pop
shl
jl
jg
iret
jle
dec
ret
cli
jb
and
ja
in
test
xor
mov
mov
mov
xor
or
repnz
fwait
jle
std
hlt
(bad)
pop
inc
(bad)
pop
jns
mov
adc
add
sbb
mov
push
jp
sub
out
scas
mov
mov
shl
or
cmp
xor
loopne
mov
and
sbb
rcl
cli
std
pop
std
fdiv
adc
jae
ja
ds
jo
mov
nop
mov
lds
rcl
cmp
(bad)
sub
inc
adc
ss
cmp
arpl
jl
sahf
shr
push
movs
cld
sbb
pop
jo
les
mov
sub
scas
xchg
fild
out
pusha
mov
jl
repnz
clc
lds
jmp
and
icebp
mov
repnz
jbe
xchg
adc
dec
xchg
fidivr
or
add
dec
addr16
cmc
lock
adc
jno
add
sbb
loope
mov
js
mov
xor
test
fdiv
adc
push
bound
and
rcr
adc
mov
jg
(bad)
in
sbb
pop
ja
scas
retf
scas
cli
and
cmp
xchg
dec
dec
movs
xchg
inc
sti
mov
imul
adc
repnz
loop
mov
inc
mov
pop
sub
cmp
mov
cmp
add
enter
mov
not
xchg
or
cmp
in
mov
push
mov
adc
in
adc
jbe
dec
ss
mov
jg
sbb
inc
data16
jno
in
adc
xlat
xor
mov
push
jo
xchg
and
dec
ins
in
in
les
and
ret
rcl
iret
ds
pop
mov
sahf
sub
jno
leave
int
mov
sbb
popf
test
(bad)
mov
fs
test
or
popa
sub
ss
push
xor
xchg
pop
jp
or
pop
ins
and
cmps
test
icebp
fs
pop
rcr
pop
push
jb
lock
mov
lods
sub
adc
mov
mov
jbe
mov
lea
fist
mov
sub
pop
shr
(bad)
call
jno
cmp
jmp
lds
js
cmp
mov
mov
xchg
pop
xchg
jb
mov
sub
mov
add
fs
(bad)
mov
xor
fcmove
out
fwait
repz
mov
jmp
daa
cdq
(bad)
xchg
add
out
xchg
scas
xor
mov
fsub
nop
adc
add
bound
mov
(bad)
aaa
push
xchg
std
retf
xor
shr
mov
fiadd
aad
inc
rcl
mov
and
sahf
in
scas
addr16
xor
and
pop
and
inc
sbb
fcomip
inc
cmps
dec
retf
sub
inc
add
dec
fisub
mov
cwde
into
push
pop
jmp
add
add
lods
cmp
std
scas
stc
sub
je
in
sub
pop
out
sub
mov
and
mov
mov
enter
retf
iret
movs
xchg
sti
push
das
leave
arpl
int
pop
ja
iret
add
or
mov
mov
xor
cmp
shl
inc
push
adc
je
and
es
mov
dec
cld
xchg
cli
lds
xchg
mov
in
inc
push
fwait
push
sbb
cmp
adc
mov
mov
pushf
inc
mov
xchg
push
and
xor
adc
add
aaa
jmp
mov
ret
stos
(bad)
(bad)
out
fisttp
leave
loopne
stc
cmc
xchg
and
outs
dec
mov
pusha
stos
cmp
dec
or
test
or
lea
fs
inc
(bad)
adc
into
pop
pop
jae
das
mov
outs
ffreep
sbb
movs
adc
add
add
sahf
(bad)
scas
push
sub
sbb
or
daa
mov
jmp
enter
mov
fld
clc
mov
jle
adc
in
inc
push
scas
fist
jl
dec
fwait
mov
mov
dec
in
cmc
int
pop
fstp
push
out
or
pop
mov
mov
jle
not
push
xor
dec
and
jmp
popf
mov
ins
jno
lea
stos
or
mov
or
or
je
mov
adc
dec
mov
stos
or
loope
inc
add
adc
xchg
ins
mov
aas
mov
jbe
push
sbb
push
out
shl
mov
ret
adc
hlt
lods
and
and
in
sar
sar
das
sub
cdq
sbb
dec
pushf
pop
jg
lds
pop
(bad)
ret
inc
xchg
int3
mul
adc
add
and
inc
inc
in
ror
jg
in
push
inc
or
add
ins
mov
jp
pop
sub
jl
and
add
arpl
stos
clc
xchg
or
push
mov
xor
outs
lahf
mov
fidiv
pop
std
pop
aaa
cmp
mov
xchg
int3
jp
not
dec
(bad)
(bad)
xchg
cmc
iret
shl
mov
cmps
mov
push
popaw
cs
push
push
xor
les
int
add
iret
test
adc
enter
sbb
fistp
mov
mov
xor
stos
mov
mov
fsub
mov
push
mov
jl
inc
enter
sti
rol
sbb
or
mov
pop
cwde
pop
cmp
pop
sbb
iret
imul
das
es
or
aas
fisubr
lock
imul
jl
add
push
xchg
sbb
sbb
cli
mov
add
iret
xor
or
xchg
mov
mov
sub
test
mov
cwde
outs
push
sub
popf
fiadd
xchg
retf
out
adc
or
push
mov
or
pop
loopne
(bad)
and
mov
fsub
(bad)
mov
mov
mov
mov
in
data16
call
push
mov
pushf
jmp
leave
repnz
dec
add
into
std
test
mov
add
jb
sub
int3
lahf
ja
cli
iret
pop
sar
add
imul
mov
mov
jecxz
xchg
nop
cmp
rcr
aas
sbb
repnz
das
lea
inc
dec
shl
or
out
adc
or
ficom
(bad)
pop
push
in
ds
stc
(bad)
stos
xor
cdq
fmul
into
inc
adc
add
pop
mov
fdivr
or
mov
add
cmps
cli
xchg
das
outs
adc
inc
jmp
repz
loopne
int
jae
sar
mov
clc
add
ds
pop
mov
add
ins
mov
xor
sahf
jg
pop
mov
sub
add
mov
inc
sahf
mov
js
jbe
pushf
inc
cdq
inc
xor
xor
xor
xor
shl
fild
add
xchg
call
xchg
lock
lahf
je
push
cmp
shl
mov
pop
sar
dec
shl
ret
adc
mov
movs
pushf
add
les
xchg
and
fdiv
mov
pop
mov
add
test
inc
repnz
jns
ds
repnz
fadd
add
jo
mov
cmps
adc
mov
js
sahf
mov
push
je
mov
mov
into
dec
cmp
and
mov
jno
and
cli
out
inc
dec
mov
mov
xchg
xchg
cmp
rol
popa
and
mov
sahf
xchg
mov
stc
fiadd
pop
pop
pop
jg
xor
push
mov
arpl
call
cmp
mov
jbe
and
frstor
dec
mov
arpl
add
fwait
es
push
imul
mov
mov
pop
jb
sub
imul
into
cmps
xchg
aam
shl
sub
ror
(bad)
aad
loope
stc
cmp
inc
js
clc
xchg
inc
outs
std
test
or
pop
stc
pop
mov
shl
fdivr
add
or
js
mov
inc
or
call
shl
or
loope
mov
adc
loope
enter
out
sbb
or
aas
outs
add
lods
pop
jp
pusha
rol
icebp
xor
lea
(bad)
ret
outs
pushf
mov
fstp
loopne
sbb
int3
jmp
cld
mov
push
jbe
out
jmp
dec
(bad)
loope
shl
mov
and
jl
xor
out
xchg
jl
push
push
std
js
je
sar
movs
lods
add
add
pop
scas
jbe
cwde
inc
and
shl
xor
pop
cld
inc
loope
jno
inc
cmp
sbb
retf
frstor
mov
push
or
pop
rcr
jge
sbb
xchg
fst
shr
add
lods
jo
lds
sub
mov
jno
outs
mov
lods
xor
sbb
pop
jo
mov
or
inc
mov
scas
daa
sub
fild
mov
aaa
pop
cmp
sub
in
adc
mov
inc
and
jne
js
lods
xchg
test
mov
out
cmp
push
sub
mov
icebp
push
cwde
scas
ret
loopne
add
add
sub
call
xor
shl
mov
inc
pop
popa
jp
stos
je
out
push
jmp
push
mov
cmps
add
pop
mov
inc
cmc
je
js
or
xor
pop
arpl
cwde
add
mov
ds
cdq
jl
sub
push
jmp
mov
out
mov
out
hlt
xchg
in
into
pop
push
shr
call
into
cdq
arpl
test
push
aas
leave
mov
or
fwait
test
int3
add
adc
mov
fsub
mul
mov
les
outs
cmp
mov
add
retf
out
add
inc
and
jb
mov
out
std
pushf
in
in
mov
sbb
sub
enter
ja
xor
pushf
data16
fidivr
imul
dec
call
ror
mov
rcr
cmp
iret
sub
retf
aad
mov
repz
les
nop
not
pushf
cmp
inc
mov
movs
cmp
mov
jg
pop
dec
hlt
cmp
xchg
jle
xor
cmps
mov
sahf
push
xchg
pop
jmp
pushf
mov
retf
popf
aad
repz
call
sahf
clc
mov
sbb
mov
pop
dec
fidivr
pop
in
leave
mov
(bad)
lods
lock
nop
jl
into
loope
out
dec
stos
pop
push
icebp
dec
inc
jno
pop
jne
jae
mov
pusha
jns
or
leave
mov
ror
jae
aam
lock
inc
neg
(bad)
out
and
out
mov
mov
or
imul
or
push
cdq
leave
jecxz
sbb
cmp
sbb
icebp
sbb
push
xor
dec
hlt
and
cmps
sbb
xor
aaa
mov
mov
xchg
fcom
fcom
xchg
push
cwde
and
adc
vpsubsw
xchg
ja
stos
fnstsw
or
jno
(bad)
sbb
imul
jle
mov
mov
dec
popa
add
enter
rcl
cdq
mov
pusha
sbb
ja
imul
xor
daa
sbb
cwde
ins
pop
adc
or
movs
test
xchg
icebp
retf
movs
cmp
fstp
or
cmps
or
dec
inc
inc
outs
push
adc
or
cmps
mov
(bad)
lahf
mov
add
lods
mov
scas
xor
jb
sbb
mov
sub
jnp
inc
and
dec
mov
xlat
cmps
pop
call
bound
jmp
mov
dec
or
adc
xlat
mov
mov
test
dec
movs
div
inc
test
inc
lods
xchg
jmp
mov
retf
xchg
hlt
enter
hlt
jno
cld
daa
or
mov
jnp
ss
jo
int
cmc
daa
fnstenv
not
into
adc
in
aad
adc
sti
int
xor
pop
daa
dec
add
mov
sbb
repnz
jecxz
xor
mov
adc
cmp
daa
cmp
pushf
mov
sub
fdivr
sub
dec
loop
cmps
cmp
gs
jnp
(bad)
call
jnp
xchg
pop
ins
les
sub
or
test
ret
mov
pop
out
ins
sahf
xchg
mov
in
imul
xor
retf
out
pop
dec
into
fcom
mov
(bad)
cli
ja
scas
(bad)
mov
lahf
retf
sub
mov
call
pop
lods
push
inc
in
sahf
pop
sbb
test
lahf
cmp
jno
mov
add
fmul
leave
int3
mov
pop
push
xlat
mov
test
sub
add
pop
ins
cmp
xor
and
je
add
test
clc
and
hlt
adc
sbb
hlt
les
and
xor
aas
popf
xchg
scas
cmps
ins
push
jb
repnz
xchg
rcr
movs
add
enter
inc
rol
add
mov
mov
imul
pushf
call
test
mov
pop
rcr
sahf
mov
outs
nop
or
xchg
sub
xor
xchg
clc
sbb
ret
cld
cld
not
cmp
push
ds
fcomp
jp
sbb
jno
ins
inc
jo
in
std
mov
pop
mov
in
push
xchg
push
fwait
aad
mov
int3
xchg
das
mov
adc
push
sbb
aas
mov
inc
test
lahf
mov
aaa
jp
mov
test
push
inc
sbb
cs
cmp
sbb
add
sub
sub
mov
shr
mov
cmc
and
jo
stos
jno
in
jmp
dec
outs
in
cld
and
mov
retf
sub
enter
(bad)
in
mov
cdq
jg
(bad)
arpl
inc
jmp
dec
dec
mov
push
sub
mov
or
and
scas
push
pushf
popa
adc
adc
add
pop
cs
data16
imul
imul
mov
fucomi
aas
xor
mov
mov
add
add
hlt
push
lods
lods
fdiv
inc
cld
js
xor
and
sub
push
add
adc
mov
adc
mov
dec
ret
pop
cmp
cmp
cmp
ror
in
or
xchg
ret
je
pop
cld
and
pusha
adc
xchg
scas
pop
add
ret
sbb
pop
sub
imul
out
cmp
mov
aad
mov
clc
cwde
je
mov
jecxz
mov
cmp
ins
inc
dec
in
loope
shr
fnstcw
inc
push
movs
lods
jg
mov
addr16
pop
cld
cmp
test
add
popa
nop
lds
mov
adc
mov
adc
xor
push
fdivr
sbb
movs
and
popa
ficomp
fdivr
out
xchg
lods
mov
popa
rcr
out
add
or
adc
sub
out
inc
adc
fistp
jg
fcomp
xchg
add
xor
jmp
xor
push
ins
ds
and
mov
mov
jge
or
aad
div
ficomp
repz
call
jno
mov
idiv
cwde
adc
scas
xchg
pushf
dec
shl
and
inc
mov
push
pop
mov
aam
enter
imul
in
cmps
leave
fmul
inc
inc
sbb
(bad)
dec
jecxz
scas
test
inc
into
call
clc
test
cld
mov
push
sbb
dec
js
sbb
mov
sbb
out
scas
out
add
mov
repz
jl
cli
aas
loopne
ret
shl
inc
mov
sub
pop
dec
mov
call
sbb
dec
and
test
imul
sbb
pushf
push
ret
sahf
in
dec
add
dec
push
cmps
mov
jge
sbb
js
pop
pop
(bad)
(bad)
enter
jo
rcr
(bad)
mov
nop
ror
shr
push
mov
mov
mov
sti
jns
xchg
ret
push
addr16
lahf
ret
(bad)
call
inc
sbb
out
sti
(bad)
pusha
shl
popa
pop
aas
imul
push
shl
mov
jg
fs
xor
jmp
jne
sub
test
les
(bad)
and
mov
inc
and
pop
std
imul
sbb
push
mov
call
pop
test
add
pop
cmc
add
test
test
add
mov
and
fstp
inc
nop
into
mov
mov
xchg
popa
loope
mov
pop
push
int3
nop
rol
(bad)
std
retf
repnz
cs
push
mov
ret
mov
(bad)
jbe
jg
sub
retf
nop
push
(bad)
es
dec
sar
jg
aam
push
dec
inc
adc
je
fwait
sti
movs
bound
pop
pop
jmp
jno
mov
fisttp
test
mov
rol
out
push
mov
push
add
inc
or
mov
add
cmps
sbb
or
icebp
out
xor
popf
pop
test
mov
dec
dec
sbb
shl
popa
pop
dec
jne
in
test
cmp
iret
mov
movs
sbb
lods
xor
test
in
dec
jmp
adc
xchg
jne
xor
cmp
outs
pop
sub
shr
mov
xlat
jl
dec
mov
out
(bad)
hlt
(bad)
inc
out
cmp
sahf
icebp
(bad)
push
mov
lds
ins
(bad)
inc
push
lahf
jo
(bad)
xor
mov
pop
test
cdq
jmp
inc
push
or
ins
int
ins
scas
and
inc
or
in
mov
in
push
pop
test
xor
mov
imul
sbb
popf
xor
or
cmovb
dec
mov
cmc
or
add
inc
shl
dec
sbb
cwde
aas
(bad)
sahf
xchg
push
push
enter
std
popa
mov
arpl
dec
ds
adc
sub
(bad)
mov
test
bound
icebp
mov
add
inc
aaa
jo
fstp
push
xchg
nop
movs
pop
ds
ret
fcomp
dec
xchg
mov
out
jo
push
ja
xchg
imul
sbb
xor
loopne
inc
dec
jnp
mov
push
rcl
pop
jnp
jne
mov
adc
ret
push
and
stos
fbstp
push
mov
jmp
ins
dec
div
mov
loope
or
frstor
xchg
fs
xor
mov
cmp
cwde
pop
add
push
sti
dec
jmp
dec
push
pusha
addr16
clc
movs
cdq
jmp
adc
cmp
mov
out
or
pusha
mov
sbb
mov
sbb
mov
cld
(bad)
adc
std
dec
mov
fwait
sbb
jnp
bound
xchg
mov
pop
push
arpl
and
lds
and
pop
imul
pop
or
repz
(bad)
mov
jl
mov
jp
aam
daa
cli
and
pop
xchg
adc
fcom
xchg
imul
or
into
xor
shr
mov
sbb
mov
push
cmp
test
dec
adc
call
and
shr
ds
popa
ret
imul
sbb
outs
jbe
iret
push
xchg
mov
int3
rol
aas
xchg
arpl
gs
(bad)
pop
popf
mov
mov
pop
add
fist
mov
pop
jp
add
cmp
push
call
jl
pop
push
push
sbb
ins
daa
xchg
or
dec
sub
mov
xlat
pop
retf
(bad)
xchg
(bad)
or
fxam
xor
ins
sar
sar
dec
and
pusha
shr
pop
cmps
mov
mov
(bad)
mov
enter
cmp
lods
fst
cld
(bad)
push
sahf
adc
bound
call
xchg
jbe
sbb
jg
test
scas
dec
outs
retf
adc
xor
xor
out
push
aam
inc
and
dec
push
call
cmps
lods
inc
and
ja
sub
(bad)
addr16
xor
ds
mov
or
xor
cwde
xchg
cmp
aaa
mov
(bad)
pop
out
out
mov
ficomp
add
jb
test
(bad)
int
repnz
(bad)
js
mov
add
mov
add
mov
jmp
test
jecxz
pop
inc
pushf
sbb
xchg
xchg
jo
inc
push
push
push
and
arpl
xchg
clc
and
loopne
call
ffree
les
pusha
pop
pop
pop
fwait
daa
enter
cmp
test
out
xor
push
daa
cdq
cmp
jmp
hlt
push
xor
sbb
jge
and
add
xor
add
fsub
mov
pusha
push
imul
retf
pop
pop
daa
out
pop
loopne
inc
pop
adc
pushf
sbb
pop
xor
xlat
bound
cmc
xchg
stc
and
cs
push
lahf
call
cmp
ss
int
sub
fcmovb
xor
daa
inc
cdq
pop
push
jecxz
cmovp
sub
and
mov
lds
hlt
rcl
mov
pusha
dec
into
popa
lds
sbb
das
outs
retf
int3
pop
push
outs
jns
sub
push
inc
inc
push
jnp
pop
cmp
lock
mul
in
cs
cli
jecxz
dec
sbb
icebp
mov
(bad)
aas
cmp
cmp
dec
or
scas
(bad)
xchg
ja
mov
inc
push
inc
pop
lea
inc
imul
add
fcmovne
clc
std
mov
xchg
imul
ret
lea
jne
int3
inc
rcr
mov
lods
ss
retf
add
xchg
fcmovnu
loop
popf
cmp
retf
xchg
dec
pop
or
aam
repz
mov
jne
push
sub
sub
in
cmp
fbstp
test
sub
mov
arpl
imul
xchg
or
or
or
mov
dec
and
mov
mov
loopne
nop
mov
jae
repz
and
pop
cmp
inc
cmp
imul
xor
cmp
cmc
arpl
mov
jecxz
push
pushf
jns
and
xor
dec
inc
push
in
repz
call
fld
sahf
and
shl
add
int
cmp
adc
push
loopne
push
and
pusha
int3
test
in
idiv
(bad)
aaa
push
mov
stc
pop
and
(bad)
cmp
sbb
leave
nop
mov
repnz
imul
add
or
lods
(bad)
repnz
cmc
xlat
or
adc
fistp
sub
jmp
pushw
clc
xchg
sbb
add
mov
pop
cmc
jecxz
cmove
and
std
loope
mov
clc
outs
jmp
test
cmp
in
cmp
ret
retf
inc
out
sahf
retf
or
pop
push
lock
sub
jbe
cmp
pushf
test
test
repnz
xor
cs
lock
lock
xor
aas
pop
push
out
add
bound
add
sahf
dec
cmc
add
push
jmp
or
mov
xchg
jmp
and
iret
outs
arpl
in
add
xchg
cdq
or
push
xor
mov
es
jnp
fs
xchg
outs
nop
xor
dec
mov
mov
mov
les
js
cmc
jge
add
push
sub
sub
scas
cwde
sub
lds
cwde
iret
ret
xor
xchg
mov
sub
xchg
sub
scas
sar
add
shr
fistp
mov
outs
(bad)
in
xor
xchg
or
sub
add
and
fimul
push
loopne
imul
sahf
mov
jmp
lds
jge
adc
and
sti
cdq
cmc
popf
inc
into
inc
pushf
cli
test
loope
shl
jbe
mov
cld
push
add
pop
inc
add
scas
cmps
retf
arpl
cmp
rep
jmp
dec
add
mov
and
shl
mov
adc
loop
or
dec
jecxz
xor
xor
dec
int3
iret
and
dec
enter
fild
xor
xchg
cli
mov
popa
cmps
xchg
enter
out
ins
xchg
dec
out
jns
xor
push
and
out
mov
push
mov
popf
arpl
mov
neg
popa
out
or
cmp
cld
movs
or
int
xchg
popw
mov
mov
mov
inc
je
ja
out
dec
mov
mov
cli
(bad)
es
ins
add
adc
mov
sub
sbb
rcl
push
jg
das
mov
in
les
push
retf
pusha
push
cmps
sbb
jns
sub
fild
mov
pop
les
jp
fs
mov
mov
adc
add
jbe
and
in
push
test
sub
cmp
mov
dec
fild
jg
adc
retf
push
test
imul
test
lock
movs
push
idiv
pop
imul
and
dec
dec
arpl
mov
in
addr16
sub
sbb
imul
icebp
or
sbb
mov
js
dec
retf
push
jecxz
scas
inc
dec
jg
push
loope
dec
shl
daa
out
inc
adc
dec
sub
mov
push
not
inc
(bad)
mov
xchg
outs
mov
mov
arpl
repnz
xor
je
js
dec
mov
shl
jae
push
push
(bad)
cmc
(bad)
cmp
xor
fild
push
icebp
fcom
jo
adc
jecxz
loop
aaa
xchg
(bad)
jo
mov
add
add
(bad)
popa
in
jecxz
push
outs
jnp
fistp
inc
push
sub
mov
add
inc
addr16
mov
scas
dec
cwde
out
scas
cmp
mov
lock
jne
repnz
jae
sbb
mov
in
pop
jae
cwde
pop
xchg
ins
iret
aas
test
xor
mov
ficomp
fs
pop
jmp
jl
adc
mov
mov
retf
je
pop
mov
sbb
dec
mov
icebp
xchg
mov
push
jmp
push
rcr
mov
outs
sub
pop
mov
cmp
inc
dec
jno
mov
loop
repz
push
xchg
sbb
mov
push
leave
add
popw
mov
jns
push
pop
xchg
imul
jns
stc
or
pushf
aaa
pop
fisttp
mov
sbb
push
xchg
mov
ret
xlat
fstp
lods
inc
pop
push
shl
sti
jmp
inc
mov
push
inc
xchg
mov
mov
and
xlat
bound
ja
mov
idiv
sbb
lock
mov
cmp
popf
mov
or
mov
retf
push
pop
cli
rcl
int
mov
cmp
repz
mov
pop
rcr
add
cmp
sbb
xchg
jg
fdiv
dec
xchg
es
mov
or
pushf
push
int
mov
mov
(bad)
sbb
(bad)
sub
cmc
jbe
(bad)
les
sub
or
scas
sub
mov
or
xor
nop
mov
inc
cmc
and
aas
and
fnstsw
ins
cmp
outs
ss
push
cmc
rol
popf
push
popa
xchg
adc
xchg
add
ins
mov
mov
xor
mov
mov
jecxz
das
retfw
aad
xor
pop
fdivrp
sbb
inc
xchg
dec
pop
jg
mov
jmp
mov
add
add
push
push
(bad)
xor
loope
loop
nop
pusha
sbb
ins
outs
bound
sbb
icebp
scas
mul
jmp
call
pop
int
call
jmp
addr16
xchg
push
rol
fs
pop
push
neg
retf
sub
mov
mov
leave
nop
pop
pusha
and
lds
inc
test
xchg
popa
adc
in
xor
mov
sub
nop
jge
cmp
xchg
sbb
push
arpl
dec
inc
xchg
dec
mov
push
es
loope
sub
ss
inc
cli
pushf
push
dec
push
xchg
lea
inc
mov
sub
enter
pop
into
sbb
jmp
inc
adc
inc
pop
jle
jmp
je
test
pop
xor
push
push
aaa
jno
(bad)
aad
and
push
inc
sbb
std
shl
fisub
sbb
xchg
ins
pop
add
rcl
mov
test
(bad)
fstp
fcomi
push
movs
sti
sar
cmp
jnp
and
repnz
jle
or
xor
sub
call
pop
pop
pop
sbb
push
aas
pop
xchg
xor
cmc
jle
scas
cmp
sbb
lods
and
sub
loopne
pop
mov
mov
push
shr
les
jg
jl
test
in
call
(bad)
push
inc
adc
fwait
adc
or
adc
ret
je
and
lods
adc
push
adc
in
ins
repnz
sbb
add
xchg
mov
cli
mov
jg
sub
js
jmp
in
sub
in
ret
lods
and
xlat
pop
jbe
outs
adc
shl
mov
inc
lds
js
mov
sub
adc
(bad)
jbe
xor
push
pop
cmp
and
mov
cmp
and
push
cli
call
frstor
lock
and
lods
loope
pop
fcomp
outs
mov
sar
popf
push
lahf
test
dec
pop
imul
pop
jno
or
inc
stos
ud2
shl
shl
rcr
cmp
adc
ss
ins
lds
add
or
scas
js
jmp
or
jg
adc
mov
lods
mov
inc
stc
emms
xchg
scas
in
xchg
outs
jmp
daa
sub
jle
nop
mov
js
test
es
xchg
sbb
sub
jmp
popa
xlat
ss
ja
lods
shl
ja
and
xchg
ja
add
push
or
or
mov
add
xchg
les
int3
push
arpl
push
add
fs
xor
sbb
jno
test
mov
jg
cmp
les
cmc
push
dec
popf
adc
dec
sub
add
jae
ret
xchg
popa
mov
mov
dec
sub
sbb
lea
es
push
xchg
test
test
vmovhps
pop
dec
dec
arpl
out
mov
dec
fild
xchg
shr
dec
stc
and
jbe
sar
sub
or
loopne
sub
aad
sti
into
cmp
sub
popf
adc
out
jae
div
sub
repz
sub
and
sub
xchg
mov
(bad)
xchg
stc
js
in
xchg
imul
shr
aad
mov
push
jmp
mov
hlt
mov
(bad)
pop
mov
cwde
ja
addr16
sub
pop
jbe
inc
sar
mov
call
jb
pmullw
lds
popa
pop
jp
adc
ins
mov
test
cs
pop
loop
jge
fadd
cs
sbb
cdq
mov
inc
push
mov
and
push
lds
jbe
xchg
jbe
jmp
minps
std
inc
daa
stc
stos
jnp
jne
xchg
push
push
xor
or
test
sti
loope
icebp
push
jl
outs
adc
adc
jg
movs
mov
xor
lock
mov
xchg
mov
ret
dec
adc
in
jnp
mov
hlt
imul
test
and
int
sbb
int3
repnz
inc
ret
sbb
std
cmp
mov
ja
sub
(bad)
scas
adc
aaa
repnz
lods
fwait
jbe
imul
jne
pop
outs
mov
xchg
mov
add
or
pop
rcl
dec
scas
fsubp
pop
inc
sub
fimul
loop
cmp
cmp
xchg
and
adc
cmp
lea
pop
mov
push
test
fwait
xchg
mov
xor
fucomp
out
cs
mov
dec
push
xor
and
pop
sub
dec
jp
dec
adc
cmp
(bad)
in
in
loop
mov
rcr
pop
sbb
adc
pop
cli
out
mov
xor
aas
ins
sub
sar
dec
loope
jb
ins
dec
mov
push
push
cmps
mov
leave
out
pop
cmp
inc
sbb
cmp
inc
or
jbe
popf
xchg
std
add
aas
nop
rcl
and
ins
mov
mov
imul
jo
inc
mov
cmc
test
(bad)
sbb
mov
jb
push
and
outs
and
in
out
scas
sbb
sub
push
(bad)
jb
loope
in
cld
xchg
push
sbb
adc
inc
outs
mov
shl
in
jge
mov
addr16
lock
push
or
into
inc
loop
sbb
in
fldln2
daa
pusha
retf
div
in
xor
aad
or
mov
mov
in
scas
add
addr16
bound
xor
jecxz
test
arpl
cmp
sahf
hlt
mov
in
fsubr
dec
bound
mov
(bad)
rol
pop
fadd
or
mov
pop
sub
push
mov
mov
xchg
stc
lahf
jne
jbe
xchg
daa
stc
daa
aam
push
inc
or
ins
aam
sbb
shl
mov
aam
mov
pushf
(bad)
(bad)
dec
(bad)
sti
data16
repnz
inc
jnp
sbb
adc
jecxz
and
outs
ror
call
jnp
out
dec
adc
sar
xchg
push
fwait
sbb
retf
call
push
sbb
sub
sbb
ror
ins
and
jb
dec
(bad)
scas
xchg
mov
adc
xchg
push
ret
ins
stc
int
fiadd
and
rcr
ficom
call
arpl
or
jg
out
mov
jg
mov
in
pop
mov
rcl
cmovns
nop
pop
ins
call
xor
sub
adc
stos
sub
frstor
or
and
call
popa
mov
mov
test
pusha
inc
mov
fld
sbb
jb
addr16
movs
lea
imul
cmp
add
dec
sub
mov
not
cmp
add
xor
adc
pop
data16
test
adc
jo
test
or
test
enter
in
iret
pop
adc
aad
push
ins
gs
fadd
es
dec
inc
lahf
sub
sub
cmp
daa
mov
jmp
adc
rcl
ret
or
cmc
into
lock
scas
ficomp
test
fsubr
sub
sbb
out
push
push
cwde
or
shl
sbb
sub
dec
(bad)
pop
sar
test
cmps
popa
sbb
not
cmp
stos
adc
popf
arpl
jl
mov
dec
pop
sub
test
jb
mov
call
fucomp
nop
push
imul
mov
cmp
mov
push
cmp
sti
or
stc
ja
scas
std
cmp
dec
mov
test
mov
sbb
not
pop
inc
xchg
cmp
inc
data16
int
xor
jae
sub
push
sbb
shl
sahf
push
repz
xor
pop
out
aad
or
in
mov
sub
iret
loopne
fs
adc
mov
or
retf
out
or
push
(bad)
retf
es
sar
call
call
xchg
cli
movs
nop
out
(bad)
jno
fld
mov
and
rol
ins
or
cmp
cmp
(bad)
push
mov
mov
or
push
jno
pop
out
repnz
sub
stos
jae
(bad)
enter
(bad)
sahf
sub
imul
in
das
movs
in
mov
xor
and
js
push
pop
mov
dec
repz
xchg
pop
ret
popf
iret
mov
sbb
and
cmp
lock
mov
cld
cmc
xchg
push
sbb
adc
or
cmp
push
push
cmp
adc
xchg
and
and
int3
popf
popa
or
out
scas
xchg
adc
add
pop
call
add
retf
in
cmp
pop
(bad)
(bad)
mov
dec
cmp
add
pop
mov
sub
inc
nop
pop
bound
retf
mov
lahf
dec
mov
adc
mov
and
and
or
scas
mov
jne
push
add
gs
inc
imul
aam
(bad)
jecxz
add
add
add
jnp
stos
inc
push
xor
pop
cmp
cmp
je
movs
jo
enter
cmps
mov
cmp
cdq
jne
ret
jg
in
pop
fidiv
jbe
push
inc
jne
jnp
jbe
call
mov
xchg
jp
sbb
jmp
ret
or
pop
sub
sbb
jns
jge
je
cmp
xor
lods
push
popf
loop
pusha
outs
cmp
mov
das
test
jns
adc
repz
fidivr
je
sub
mov
(bad)
inc
or
dec
jmp
in
cld
stos
xor
xor
or
shr
iret
inc
cmp
sub
mov
fucompp
mov
outs
out
mov
sar
adc
jae
les
test
jo
int
div
jmp
jns
mov
push
mov
adc
jnp
pop
cdq
dec
add
into
jbe
xchg
pop
and
popa
adc
inc
xchg
test
adc
cmp
popf
movs
not
pop
(bad)
or
test
fst
mov
lahf
push
mov
shl
and
imul
inc
mov
js
or
cld
idiv
jmp
outs
adc
xchg
sbb
pop
mov
(bad)
stos
(bad)
push
(bad)
fs
jnp
repnz
inc
ss
push
or
jne
nop
fs
cmc
fmul
sti
pop
fild
sbb
fwait
sbb
aaa
retf
int3
add
mov
ja
es
shr
jbe
cmp
(bad)
mov
imul
js
gs
jle
mov
leave
ds
dec
cwde
adc
enter
add
add
aad
push
or
cmp
jno
retf
lods
pushf
fistp
jmp
or
fsubp
test
xor
mov
pushf
jb
popf
xchg
shr
lods
or
bound
popa
dec
push
dec
sub
test
adc
cs
lods
jge
jg
xor
jl
jmp
jge
repz
dec
jecxz
aas
pop
or
test
lods
cmp
out
stc
mov
xor
cld
mov
sub
or
shl
pop
mov
repnz
mov
push
aam
cdq
mov
(bad)
cwde
cmp
out
and
test
jne
int
dec
mov
(bad)
cmps
sub
add
icebp
mov
std
popf
jle
lea
sbb
jg
push
mov
jecxz
cmp
dec
js
(bad)
(bad)
xor
or
cmp
push
in
and
in
fnstsw
cmovb
data16
fsetpm(287
(bad)
mov
dec
(bad)
loop
cdq
adc
in
clc
retf
lods
sbb
aam
loop
xchg
std
int3
mov
mov
xchg
nop
xor
push
jno
jecxz
push
mov
mov
add
es
sub
cmp
cmc
ffree
pushf
call
dec
mov
xlat
adc
add
sub
and
mov
out
xchg
inc
inc
mov
test
mov
clc
and
jg
mov
push
mov
(bad)
pop
pop
lds
out
xor
mov
dec
aad
push
jmp
mov
add
and
std
cs
inc
les
mul
xor
dec
in
nop
or
xchg
sahf
push
jne
add
cmp
xchg
test
rol
xchg
js
jg
push
and
xchg
fcmove
dec
je
(bad)
mov
test
mov
mov
xor
pop
and
jno
pop
adc
xor
iret
shr
cmp
test
fisubr
xchg
mov
and
or
inc
sti
cmps
inc
sbb
cmp
mov
lods
imul
(bad)
retf
jns
jb
sub
or
stos
inc
xor
dec
mov
pop
rcl
test
cmp
ds
repz
movhlps
xor
jnp
pop
lods
adc
cmp
sbb
pop
pop
inc
dec
sbb
fstp
sbb
arpl
adc
jmp
js
movs
add
add
icebp
cmp
xchg
test
aam
push
fucom
mov
enter
sub
popf
dec
(bad)
in
mov
fild
add
fisttp
push
cs
dec
push
retf
aas
icebp
shl
ins
mov
(bad)
std
ds
ret
add
mov
jns
cmp
adc
push
or
scas
and
popf
jae
lock
pop
adc
scas
jo
mov
cmps
adc
lahf
xor
in
outs
clc
and
inc
out
ret
popa
out
(bad)
cmp
nop
lods
fwait
(bad)
pushf
sub
(bad)
pop
jbe
out
dec
mov
dec
sbb
pop
rol
push
sub
in
or
and
mov
and
pop
nop
(bad)
call
leave
and
cmp
jmp
in
(bad)
cmp
fild
inc
sub
movs
mov
dec
(bad)
or
jno
push
sub
mov
data16
das
xor
mov
jge
dec
jecxz
call
pop
stos
mov
add
push
shr
data16
push
(bad)
iret
or
adc
imul
pop
popf
inc
(bad)
sub
cmps
cmp
or
int
adc
inc
cwde
mov
lods
pop
inc
(bad)
into
mov
dec
stos
add
popf
dec
stc
js
outs
sbb
iret
jb
push
inc
or
cmp
add
call
jp
int
inc
jae
retf
push
and
jae
ss
test
cld
mov
call
pop
jb
dec
iret
test
add
xchg
pop
jno
shl
mov
scas
mov
in
xor
dec
push
and
retf
out
test
retf
xchg
fld
pop
and
cwde
mov
enter
or
neg
fs
js
sar
aas
dec
xor
push
xchg
loop
nop
sub
ds
sbb
push
icebp
mov
fwait
test
or
inc
and
adc
sub
ja
add
jae
popa
lods
aam
mov
ret
sti
inc
ror
adc
cwde
js
pop
adc
jmp
std
mov
mov
xor
clc
int
inc
nop
loope
adc
ret
das
nop
popa
xor
inc
mov
push
xchg
stos
loope
stos
in
call
cmp
xchg
cmp
cmps
pop
cs
(bad)
mov
cld
jmp
in
aas
rol
shr
stos
push
jmp
mov
out
mov
into
jb
pop
fisttp
cmp
mov
es
xor
jmp
cs
add
sub
push
mov
jg
push
mov
pop
sbb
push
push
mov
mov
dec
mov
lods
dec
into
(bad)
jg
jae
jp
mov
or
(bad)
or
fucomi
push
xchg
retf
or
and
call
loop
and
(bad)
sahf
push
pop
in
inc
mov
cmp
mov
dec
sbb
push
mov
loopne
push
ret
hlt
jbe
jmp
xchg
hlt
loope
xor
rol
or
push
or
jo
adc
(bad)
and
adc
ins
mov
std
add
cmp
test
jmp
daa
fild
in
jmp
jle
mov
sub
enter
mov
lahf
popf
dec
int
sbb
mov
iret
(bad)
call
and
std
ja
jns
or
cwde
cwde
sub
pop
arpl
pop
mov
fidiv
cmc
and
and
mov
(bad)
test
dec
pop
(bad)
dec
mov
adc
repnz
fnsave
cmc
jne
jae
cs
cmp
scas
scas
jecxz
js
retf
loope
mov
jg
sub
popf
add
rcl
repnz
adc
mov
popa
retf
or
(bad)
movs
xor
xchg
bound
loopne
(bad)
pop
nop
pop
loopne
sub
mov
stos
ins
inc
ret
jp
outs
and
call
and
repz
mov
jecxz
mov
(bad)
mov
jl
sti
fldcw
test
mov
sbb
adc
frstor
in
fmul
push
stc
popa
dec
and
rsm
fadd
xor
ss
pop
push
sub
mov
mov
ins
adc
inc
dec
imul
jmp
fsubp
inc
in
push
out
dec
pop
xchg
xchg
and
cmp
add
jnp
or
xchg
mov
mov
cmp
mov
test
and
das
imul
jmp
into
inc
jb
dec
push
shl
jns
jecxz
popa
retf
sbb
sbb
xchg
pop
inc
fisttp
fsubr
jmp
stc
dec
jb
lods
mov
lahf
hlt
push
ins
mov
rcr
mov
fadd
in
(bad)
ss
aam
jp
rol
mov
or
cli
iret
std
adc
and
fstp
cmp
scas
adc
push
lods
mov
jmp
arpl
inc
scas
mov
fild
add
mov
test
xchg
aad
icebp
(bad)
outs
popf
mov
sub
(bad)
adc
ror
pop
adc
(bad)
pop
cmp
add
fsubp
jbe
sbb
xor
jl
jns
dec
shl
or
add
xor
je
xchg
out
clc
bound
lods
ret
xor
scas
and
jle
in
add
ret
clc
ja
inc
movs
sbb
dec
add
and
push
retf
inc
sahf
sar
and
dec
sub
mov
sub
mov
mov
lods
jmp
sahf
mov
hlt
push
sub
jmp
cmp
repnz
jg
in
jle
pusha
jbe
lods
or
xor
retf
test
xchg
and
sar
repnz
lahf
aad
and
data16
test
call
aas
stos
mov
jecxz
inc
aas
xchg
add
push
and
mov
mov
daa
push
jl
ret
mov
ja
jmp
mov
fwait
ror
inc
iret
adc
mov
outs
cmp
push
pop
jns
clc
inc
mov
(bad)
bound
inc
shl
sar
mov
mov
mov
xchg
in
sub
mov
shl
cmp
imul
ss
in
sbb
sbb
aas
xlat
out
daa
inc
rcl
lahf
pop
mov
out
adc
xchg
(bad)
jl
cmps
fmulp
and
xor
cmc
adc
sub
jmp
lahf
aam
xlat
jmp
xchg
imul
movs
sub
ror
pop
ficom
stc
mov
in
jge
inc
jno
iret
test
jg
mov
pop
cs
test
xchg
push
adc
sub
push
cmps
inc
popf
push
retf
data16
dec
ins
jecxz
cmp
adc
and
shl
mov
iret
sti
xor
jge
sahf
push
je
cmp
cmp
adc
neg
pop
jecxz
shl
sbb
sbb
outs
repnz
clc
inc
lahf
xchg
inc
sbb
sub
ret
adc
mov
rcr
add
jns
or
fwait
mov
(bad)
loopne
xor
jb
(bad)
and
out
mov
mov
sub
jmp
lods
add
sub
fsubr
jae
push
mov
push
cmc
leave
jmp
jnp
sbb
addr16
mov
std
js
in
in
adc
cmp
cld
bound
test
fstp
ds
sti
xchg
je
(bad)
rol
outs
or
cs
(bad)
jge
and
mov
push
sub
loop
xchg
inc
sbb
hlt
inc
push
rcl
push
mov
mov
inc
repnz
in
push
jl
jns
adc
mov
addr16
push
xor
xchg
or
out
mul
push
cmp
pop
clc
idiv
cmp
sub
jg
push
test
out
sub
dec
xor
xor
ins
push
jbe
adc
jnp
mov
rol
gs
mov
mov
(bad)
sahf
mov
popf
or
mov
cmps
add
push
pop
adc
and
push
push
mov
xchg
in
out
xchg
sub
mov
scas
pop
or
mov
mov
jle
addr16
imul
icebp
hlt
pop
imul
adc
ss
jg
ror
mov
pop
lods
das
imul
std
push
sbb
into
add
in
dec
cdq
xchg
dec
jge
test
push
mov
adc
not
pop
cmp
adc
ja
cmp
out
fwait
adc
push
sbb
mov
int
ins
aaa
push
iret
sub
adc
pop
mov
rol
stc
mov
movs
test
dec
jbe
stc
sbb
ret
pop
cmp
scas
mov
inc
test
fild
mov
fbstp
js
je
loope
js
jbe
in
or
call
cmp
ret
mov
xrelease
mov
fimul
or
adc
bound
les
xchg
jp
mov
inc
mov
jo
mov
sahf
cmp
imul
imul
imul
in
in
cmps
lock
inc
outs
div
or
sub
pop
inc
retf
mov
js
cmp
jns
jo
adc
push
out
cmp
es
mov
mov
pushf
pop
push
xor
jns
out
pop
mov
arpl
out
push
inc
xor
loop
rol
xor
jb
mov
je
xor
loop
mov
mov
cmp
inc
into
loope
lahf
pushf
call
in
out
push
ja
xchg
xor
cmp
push
in
ret
xchg
rcr
push
mov
and
sub
mov
mov
data16
adc
add
pop
iret
int3
push
xor
pop
mov
or
pop
push
dec
imul
push
jle
cli
(bad)
sbb
dec
(bad)
ror
loop
or
or
test
ror
xchg
test
adc
fwait
and
dec
movs
or
and
sbb
ds
cmp
mov
mov
dec
adc
pop
push
push
aas
pop
dec
cmp
fiadd
xor
jne
jmp
out
repnz
jno
adc
xchg
pop
ins
in
xchg
dec
stos
fcomi
imul
rcr
ss
es
push
and
mov
std
pushf
xor
and
push
cmp
das
mov
leave
cmp
add
dec
adc
jne
(bad)
(bad)
idiv
xchg
xchg
mov
mov
jecxz
xchg
mov
stos
iret
pop
les
call
(bad)
aam
aaa
rsm
out
call
in
ins
push
mov
mov
sub
sbb
shl
add
in
xor
ins
sub
xchg
rol
in
xchg
ret
inc
iret
(bad)
les
retf
je
addr16
push
xchg
cmp
lahf
mov
aas
fiadd
dec
mul
jne
clc
test
ret
lock
shl
lock
mov
fsub
out
movs
add
add
retf
dec
in
sub
retf
sub
subps
repz
xchg
adc
fs
adc
fs
sub
int3
arpl
scas
(bad)
call
test
jge
or
mov
je
test
out
(bad)
das
push
enter
dec
push
shr
mov
push
xor
lock
pop
jmp
into
jmp
cmp
icebp
xchg
shl
jne
xor
sub
dec
loope
xchg
sub
aam
loope
fidivr
(bad)
sbb
rcr
cmps
adc
sub
inc
jbe
loopne
cmps
inc
clc
inc
(bad)
ds
(bad)
sbb
sar
ror
enter
add
retf
(bad)
mov
xor
mov
inc
aaa
shl
adc
or
or
fs
imul
mov
mov
sti
pop
pop
scas
add
inc
popa
xchg
mov
sbb
pusha
push
pop
dec
mov
repnz
clc
jmp
pusha
test
gs
ja
xor
mov
aaa
cmp
test
lods
pop
xchg
std
or
and
stos
hlt
sti
cld
and
adc
rcl
mov
pop
mov
cmovo
pop
adc
add
add
jo
mov
dec
push
mov
outs
int3
test
cdq
in
in
neg
pop
push
pop
jmp
push
call
jge
fild
push
cmp
dec
std
out
shl
popf
or
pushf
arpl
pop
sub
jecxz
les
pop
pop
and
or
lea
(bad)
jge
push
jg
cmp
lods
daa
mov
mov
pop
cmp
lahf
xchg
mov
fsubr
jae
into
aam
ss
add
fnstcw
sbb
mov
dec
xor
retf
push
stc
retf
sahf
sub
sbb
sar
xchg
inc
adc
shl
push
(bad)
in
inc
jle
stos
jge
data16
add
mov
jle
jns
or
jbe
xchg
pop
pop
mov
lock
aaa
ja
cwde
jmp
lods
pop
add
mov
in
mov
mov
dec
aas
mov
test
mov
in
ja
sub
ins
scas
adc
imul
outs
sbb
into
mov
std
mov
sti
(bad)
pop
sbb
into
ret
inc
test
dec
or
je
push
je
jbe
adc
mov
iret
sub
add
ja
dec
inc
xchg
push
jg
sub
test
mov
retf
leave
xor
inc
or
jp
cmp
mov
std
or
sbb
div
ss
into
cmp
sbb
adc
mov
jbe
nop
dec
in
in
cld
jo
retf
mov
jmp
pop
xchg
jne
in
xchg
xchg
dec
out
adc
pop
dec
push
mov
push
(bad)
sbb
jno
add
ds
ja
sub
rcl
sbb
inc
aam
jbe
aam
mov
fadd
pop
fidivr
mov
push
jno
aad
out
stc
dec
mov
xor
jnp
mov
sub
aaa
and
add
rcr
or
sbb
comiss
fild
test
mov
ds
clc
mov
lods
push
pop
pop
cmp
pop
cmp
mov
test
out
xor
inc
aaa
mov
(bad)
idiv
call
and
int3
jnp
mov
dec
inc
std
xchg
aam
pop
outs
mov
mov
rol
pop
lods
xchg
fnsave
xor
xchg
push
mov
dec
mov
call
xor
mov
fwait
imul
pop
push
js
in
(bad)
pop
jno
pop
xchg
pop
in
xor
mov
scas
and
sub
mov
into
adc
jno
imul
mov
add
jmp
das
mov
aaa
xchg
out
jns
paddsb
inc
jno
mov
jecxz
jp
cs
and
into
stos
cli
loope
aaa
sahf
stos
cdq
inc
jmp
inc
out
cdq
xor
(bad)
mov
and
xor
push
mov
data16
clc
xor
sbb
mov
rol
push
mov
cmps
jns
push
in
sbb
hlt
in
and
mov
pop
dec
add
icebp
dec
pop
fld
mov
sub
ficomp
(bad)
mov
jne
test
jo
pminub
mov
mov
pop
mov
push
pop
aas
cmp
clc
jp
pop
addr16
push
sbb
out
cmps
jne
pop
das
aad
pop
mov
push
push
mov
add
lods
enter
outs
add
sub
mov
std
(bad)
mov
sub
mov
adc
and
dec
sbb
mov
add
in
or
pop
push
rcl
xchg
pop
add
call
arpl
shl
loope
xor
mov
(bad)
mov
mov
(bad)
loope
outs
popf
and
jo
sti
fild
retf
mov
xchg
sub
jmp
sub
ins
fist
call
jo
jmp
call
mov
adc
daa
xchg
sbb
add
xor
mov
adc
pop
cdq
mov
movs
ds
ds
jge
dec
test
cli
xor
jns
lock
cmp
cmps
xchg
xchg
ds
xor
test
int3
xchg
push
push
stc
xchg
cmps
repz
sub
xor
lock
jg
fidivr
shl
call
jno
mov
fmul
and
sub
sar
mov
mov
xchg
movs
add
mov
stos
push
push
xor
int3
cmps
push
aaa
jge
adc
push
add
pminsw
jmp
sub
out
(bad)
pop
sahf
out
(bad)
fistp
pushf
add
sub
outs
pop
push
dec
dec
fdivrp
(bad)
(bad)
jl
das
mov
adc
in
daa
shl
stos
adc
in
(bad)
push
or
mov
lods
mov
cmps
rol
sbb
int
dec
mov
push
jecxz
das
push
jo
jno
retf
lds
ds
jp
ret
outs
push
lahf
and
jl
std
jge
shl
sahf
add
add
shl
pusha
repnz
daa
cmc
fisub
pop
xor
push
loope
movs
sub
fdivr
mul
xor
(bad)
push
pop
std
sub
mov
addr16
in
int
dec
sub
mov
pop
dec
sbb
jl
inc
or
xor
push
sbb
fld
sbb
popf
push
leave
aad
mov
repz
inc
lods
sub
popf
push
arpl
or
retf
pop
and
xchg
outs
push
rep
xor
enter
ret
push
aaa
inc
lds
setg
push
pop
cmps
pop
mov
out
push
repnz
mov
sbb
pop
pop
inc
fiadd
ja
loopne
shr
or
jmp
push
ins
sti
out
push
ret
adc
or
mov
call
cmc
lock
out
mov
jns
pop
ja
mov
cmp
pop
stos
int3
or
repz
imul
fnstenv
pop
dec
or
icebp
dec
fbld
jae
cld
rcl
or
push
mov
dec
and
sbb
mov
fadd
fdiv
fdivr
movs
ins
fsubr
lea
hlt
pop
js
xor
loopne
add
cmp
bound
popa
movs
ss
sti
xchg
xchg
jmp
bound
xchg
pushf
outs
pusha
jmp
fdiv
(bad)
pop
jecxz
(bad)
cmp
jl
push
mov
imul
inc
shr
mov
add
jnp
add
mov
jae
cwde
hlt
popf
mov
stos
pop
out
idiv
jnp
or
daa
test
fcomp
aam
cmp
sar
aam
xlat
jle
add
in
cli
pop
(bad)
repnz
or
jns
int3
cdq
fmul
jno
retf
push
and
(bad)
pop
call
iret
sar
daa
lahf
fucomip
in
call
jae
aaa
pusha
sub
dec
call
mov
je
into
mov
inc
push
mov
bound
ja
mov
inc
and
dec
ss
sub
xor
out
xor
stc
out
int
fnstsw
sahf
inc
xchg
ss
mov
mov
outs
stos
and
imul
sub
sbb
in
ret
add
loop
dec
test
retf
push
pop
cmp
das
sub
dec
inc
sub
mov
pop
sub
xor
cli
nop
pop
fwait
(bad)
stc
bound
xor
mov
ss
sub
in
mov
add
xchg
imul
shr
lods
xor
mov
imul
pop
sbb
cmc
or
scas
mov
mov
imul
je
cmc
(bad)
nop
jnp
iret
(bad)
xchg
imul
loop
pop
adc
(bad)
into
pop
enter
rol
test
mov
push
(bad)
and
int
mov
vmovsldup
pop
pop
cmp
mov
mov
sub
ins
in
(bad)
in
cmps
ja
xor
idiv
sub
cdq
and
cmp
fbstp
stos
xchg
lahf
xchg
push
dec
cld
mov
cld
xor
pop
push
cmp
hlt
call
inc
inc
mov
mov
xor
cld
push
and
or
outs
adc
int3
xchg
or
dec
pop
sbb
sbb
mov
inc
dec
cmc
out
icebp
in
mov
mov
or
adc
std
sbb
cmp
push
rcl
mov
movups
psubusw
push
jbe
cdq
dec
icebp
cdq
pop
jo
cmp
sbb
fld
or
sbb
adc
pop
or
and
int3
(bad)
jns
cdq
ss
retf
add
jle
stos
sub
jae
pop
mov
mov
jne
mov
or
inc
xor
ja
(bad)
push
outs
mov
sub
jle
fsubr
push
or
pop
add
jl
fwait
lds
cdq
push
inc
xor
xor
dec
hlt
fnop
adc
xchg
jle
cmc
mov
cmp
jmp
mov
loope
mov
and
or
and
jne
and
push
adc
push
pop
push
call
mov
movs
test
and
imul
fiadd
daa
ins
lock
and
ror
sbb
fwait
rcl
sbb
into
lock
jo
mov
sbb
and
cmp
inc
mov
out
arpl
xor
jp
add
sti
or
inc
mov
fdivr
lods
and
adc
dec
push
(bad)
xchg
mov
jo
cmp
and
dec
leave
pop
(bad)
lahf
bound
pop
dec
xchg
jg
push
adc
mov
xchg
xor
add
das
xlat
out
test
mov
dec
icebp
dec
mov
mov
sub
mov
jbe
in
jmp
iret
movs
adc
outs
jb
sub
lds
cmp
out
jns
xlat
fiadd
pop
sub
dec
(bad)
mov
mov
enter
hlt
lahf
dec
out
inc
push
jne
mov
xchg
mov
cli
push
push
dec
xor
mov
rcl
mov
sub
jmp
mov
lea
adc
in
jmp
leave
mov
jle
mov
mov
pop
push
inc
aam
gs
adc
ja
add
loope
adc
pop
mov
dec
jle
adc
dec
lahf
pusha
ds
retf
jge
dec
(bad)
xchg
popf
xor
mov
inc
pop
shl
mov
mov
nop
adc
sti
paddusw
inc
mov
jmp
inc
jmp
add
(bad)
mov
lods
or
adc
stc
push
(bad)
out
cmp
fild
repz
fcmovne
add
ins
and
xor
repz
lock
cmp
jae
popf
jge
ins
rcl
jp
sbb
scas
or
in
mov
mov
fimul
iret
jnp
mov
test
xor
mov
cwde
lahf
call
or
sbb
cmp
js
test
sbb
dec
mov
jecxz
mov
leave
inc
or
or
(bad)
pop
push
jg
into
inc
xlat
in
lods
adc
mov
popa
inc
outs
mov
out
mov
in
fild
jmp
hlt
mov
xchg
jbe
scas
cmp
adc
out
or
xor
xchg
sti
xchg
sbb
mov
inc
push
cmp
dec
and
xlat
pushf
push
cmc
pop
or
xchg
xchg
pop
ret
je
push
hlt
xlat
ds
dec
xor
popf
popa
push
movs
pop
dec
or
out
ds
test
dec
cs
and
pop
sbb
and
and
and
pop
jmp
outs
xor
adc
cmp
cmp
xor
popf
popf
mov
ret
icebp
hlt
hlt
push
fild
push
mov
out
mov
(bad)
mov
mov
aas
jl
call
rcl
mov
stos
sbb
xchg
sub
mov
cli
jo
fdivr
pop
mov
data16
mov
inc
jbe
adc
fstp
int
les
aaa
adc
xor
inc
push
mov
sub
xlat
pop
jp
int3
push
ins
push
add
loop
enter
and
push
push
dec
leave
pop
clc
aas
fistp
cmps
adc
dec
sub
ds
adc
mov
loop
sub
xor
es
fidiv
loope
push
ds
fistp
inc
fadd
cmp
ror
inc
xchg
jno
push
cmps
inc
xor
lods
(bad)
mov
push
xchg
jl
test
jo
sub
sub
sti
mov
cmp
out
dec
or
aam
push
loop
jo
and
fnstsw
push
test
retf
inc
(bad)
pop
bound
repz
pusha
ror
lahf
jp
loop
daa
jns
mov
jae
cmp
jb
inc
das
pop
mov
or
in
(bad)
movs
cmp
mov
retf
pushf
xor
or
out
xchg
jno
push
fdiv
enter
imul
mov
arpl
jmp
out
shl
or
and
mov
into
(bad)
xor
jmp
lods
sub
push
jnp
push
dec
imul
pop
lea
and
and
dec
fild
aas
iret
dec
pop
push
sub
out
jbe
xor
xchg
lods
or
lock
into
jae
lds
iret
pop
(bad)
repnz
inc
xlat
xchg
aad
push
outs
pop
sar
out
mov
sub
gs
xchg
pop
adc
data16
fbld
mov
mov
aad
retf
cli
or
popa
sub
jl
enter
cwde
scas
addr16
xor
mov
xchg
scas
out
jmp
mov
fld
inc
pusha
mov
add
jne
pushf
not
or
jmp
push
xor
mov
cmp
mov
int
cmp
mov
lahf
or
pop
and
or
add
or
dec
sub
(bad)
shl
sbb
ret
call
test
jno
int
add
or
sbb
push
sub
(bad)
mov
mov
ret
cmp
(bad)
or
xchg
dec
jb
sub
jne
mov
mov
and
mov
mov
cmc
xchg
and
sbb
adc
xlat
mov
(bad)
mov
or
xor
fdiv
repz
adc
lods
xchg
loope
push
ds
push
jmp
sub
inc
jne
stos
jb
push
jo
pop
fadd
sbb
mov
into
mov
hlt
dec
daa
in
aas
movs
xor
std
xchg
repnz
out
jno
and
cmps
test
push
adc
cld
jmp
ror
ror
test
jno
fidiv
inc
push
dec
fcomip
pop
nop
push
jge
dec
aaa
mov
rol
mov
xor
fnstsw
jmp
inc
(bad)
or
aam
sbb
das
aam
lock
add
inc
push
push
xchg
icebp
mov
fstp
xchg
mov
cs
cmp
adc
jl
sub
xlat
into
add
or
push
rol
push
cmps
adc
mov
or
fwait
pusha
stc
rcr
mov
xor
(bad)
push
addr16
xchg
sub
mov
add
cmp
jge
xor
jmp
daa
mov
cwde
iret
cmp
dec
jg
icebp
xchg
jl
jno
fwait
cmc
push
in
mov
jb
js
pop
cmp
frstor
sub
sub
pusha
sahf
and
mov
jno
xchg
mov
rcr
imul
push
call
jno
push
test
mov
xchg
clc
imul
cmp
pop
(bad)
jns
movs
xor
lods
cmp
popf
pop
adc
push
sub
out
mov
or
jl
push
dec
sti
xor
sub
lds
dec
xchg
jno
in
adc
test
pop
add
(bad)
js
mul
ins
in
(bad)
enter
mov
fnstsw
cmp
in
push
or
dec
and
inc
add
cmp
in
xchg
push
lahf
add
fbstp
push
dec
push
fsub
in
push
jnp
popf
(bad)
ins
hlt
stos
arpl
sahf
jle
mul
mov
mov
mov
repnz
or
jge
es
fcomp
movs
mov
sub
mov
and
jns
mov
and
lea
in
test
mov
mov
or
mov
jmp
ins
dec
js
push
(bad)
xchg
mov
adc
fs
mov
ret
mov
inc
bound
test
cli
into
shr
push
cmp
fwait
aas
and
aaa
fadd
rcr
mov
pop
inc
rcr
sbb
xor
loope
fcmovnu
cmp
mov
out
ret
jb
mov
(bad)
jp
repz
ins
mov
test
pop
xor
ins
jbe
shl
rcr
pop
xchg
clc
push
sbb
loop
shr
pop
jbe
adc
loope
push
sar
adc
mov
fwait
lds
mov
mov
sub
mov
sbb
lahf
push
cld
mov
jae
iret
cmps
xor
jmp
aas
sbb
enter
mov
mov
scas
aaa
cli
jl
push
xchg
sub
and
ins
and
pcmpeqw
mov
popf
jle
inc
cmp
push
jne
xor
push
adc
xchg
and
jmp
xlat
push
dec
jo
cwde
mov
mov
or
adc
in
mov
jb
in
das
lahf
or
sbb
scas
jbe
adc
aaa
std
pushf
sub
xor
add
jp
enter
movs
rcl
xlat
inc
sub
loop
fcomip
dec
(bad)
cmp
mov
push
pop
dec
pop
cmc
and
sbb
cld
inc
outs
nop
jb
cmp
cmp
stos
test
arpl
push
scas
xlat
int
jmp
push
sbb
push
shl
mov
pop
sub
adc
inc
xlat
icebp
retf
pop
not
or
cmps
cmp
js
push
dec
lds
xchg
and
pop
xor
sbb
mov
mov
sti
rol
push
stos
jmp
lea
sub
jne
xchg
jno
add
xchg
gs
gs
int
mov
push
push
adc
out
retf
movs
jae
mov
xchg
stc
dec
cmp
or
ins
pop
ss
inc
pop
dec
xchg
out
ds
push
dec
mov
aas
jg
call
cmp
pop
dec
jnp
rol
loopne
cmp
test
bound
mov
mov
scas
inc
jns
mov
mov
jno
test
loop
mov
bound
in
ret
mov
push
lahf
arpl
scas
push
add
xchg
pop
sbb
cmps
test
out
movs
fld
push
pop
in
mov
(bad)
int
sbb
cli
mov
push
repnz
popf
mov
(bad)
lea
call
adc
add
ret
(bad)
addr16
outs
enter
in
sar
xchg
ds
adc
and
sti
and
loop
(bad)
(bad)
mov
pusha
mov
loopne
mov
imul
add
(bad)
xor
sub
pop
xchg
dec
ss
jbe
ins
fistp
sbb
mov
xor
mov
(bad)
adc
mov
push
ins
cli
sub
jmp
loopne
jno
pop
fwait
cmp
xor
and
dec
adc
or
js
(bad)
aas
jns
cmps
cmp
(bad)
pop
xchg
push
ret
das
pop
(bad)
in
jae
in
cmp
xchg
out
test
cmc
aas
call
mul
mov
int3
ret
sbb
xor
add
mov
sub
push
mov
addr16
lock
jmp
or
stos
cli
mov
out
pusha
xchg
mov
sub
cwde
or
pop
call
cld
sub
out
pop
mov
add
imul
inc
push
sbb
xor
fwait
jle
arpl
loopne
push
fucomip
xlat
and
test
retfw
mov
out
mov
xor
xchg
arpl
push
inc
sbb
jns
rol
lods
xchg
test
retf
(bad)
mov
mov
xor
cmp
mov
movs
pop
shl
inc
jp
ret
mov
cmp
imul
adc
mov
(bad)
jb
jnp
test
and
cmc
xchg
jne
xchg
out
push
push
cmps
aas
(bad)
rcl
out
dec
inc
cwde
sub
test
test
ret
popf
mov
jo
or
add
jns
adc
push
stc
imul
jp
repnz
fst
mov
(bad)
into
xchg
dec
mov
xor
ja
mov
mov
sub
add
inc
aaa
jp
xor
aad
cli
push
dec
mov
inc
lods
push
popf
or
and
(bad)
sub
pop
stos
adc
sbb
jp
(bad)
aad
or
mov
cmps
add
cmps
in
sub
pop
aam
xchg
mov
inc
add
mov
jo
mov
in
jge
repnz
jnp
stc
jbe
iret
mov
fimul
cdq
in
(bad)
adc
cmp
cmp
xor
test
mov
xor
push
push
sbb
or
popf
dec
popf
mov
into
mov
inc
mov
mov
adc
pop
xor
cwde
stos
dec
inc
pop
(bad)
mov
xchg
jae
or
xchg
cmp
rcr
xor
cmp
fisubr
pop
out
add
ss
arpl
add
out
sub
and
mov
and
cmc
and
ret
cmps
iret
jb
and
scas
clc
aas
jnp
test
aam
or
addr16
stos
jnp
jnp
aad
hlt
jecxz
or
push
push
loopne
aaa
imul
pop
movs
or
outs
fldpi
idiv
(bad)
es
cli
les
and
push
lds
jle
add
out
xor
(bad)
jmp
pop
sub
mov
inc
aad
bound
mov
bound
jno
mov
or
jmp
add
pop
out
ja
in
inc
in
int
shl
cmp
mov
inc
mov
ja
(bad)
and
or
das
push
fcom
pop
push
lock
aas
mov
lds
sbb
fs
test
jne
pop
xchg
ss
ret
in
inc
inc
mov
push
pop
pushf
rcr
add
mov
std
int
xchg
test
pop
push
rcr
jbe
in
les
xor
push
ret
out
or
test
mov
jp
lahf
mov
and
mov
inc
call
and
out
leave
sub
xchg
out
cmp
test
or
lods
adc
mov
mov
jle
lahf
sahf
cmp
sub
jns
cmp
test
int3
enter
and
stc
les
hlt
cmp
jmp
add
jmp
loope
add
or
jno
xor
int
lods
outs
movs
and
dec
cmp
and
cmp
jne
mov
aas
sar
and
mov
(bad)
or
inc
fild
inc
aad
xor
jbe
mov
repz
rcl
inc
xchg
mov
out
dec
or
adc
(bad)
sub
mov
adc
fistp
lock
jmp
shl
out
out
cld
fs
jne
out
inc
pop
push
sbb
mov
or
push
add
dec
pop
push
push
rcl
ss
out
mov
cmp
sub
mov
mov
mov
xchg
repz
fadd
jno
jne
jne
imul
push
inc
(bad)
and
inc
lahf
sar
push
dec
cmp
add
ret
cmps
dec
fwait
aad
and
lahf
pop
enter
jns
js
pushf
movs
or
lea
lods
jl
add
arpl
js
fld
mov
xchg
or
and
sub
pop
adc
pop
push
mov
push
xabort
lds
xchg
jp
lods
movs
(bad)
dec
cli
mov
and
rcr
jns
ficomp
test
hlt
lods
jmp
bnd
dec
leave
pop
stos
adc
or
inc
out
lods
jp
loope
push
ret
dec
inc
ror
push
(bad)
loop
xchg
call
arpl
out
(bad)
fadd
sbb
stos
sub
sub
xchg
xchg
cmp
mov
test
and
lods
sbb
jno
(bad)
dec
popa
jl
fnstcw
add
les
push
sahf
inc
les
cdq
repnz
or
int
and
fwait
mov
fsub
stos
jmp
cwde
mov
shr
pop
call
sub
xlat
pop
outs
and
add
inc
stos
cdq
mov
pusha
mov
dec
sbb
mov
xchg
test
gs
xlat
ins
or
dec
xchg
pop
in
xor
hlt
mov
loope
mov
add
aaa
retf
in
or
jbe
cli
popa
xchg
and
add
ror
movs
clc
add
xchg
or
fldenv
jl
jecxz
jno
gs
pop
add
jo
cmc
in
push
data16
lock
mov
add
push
inc
mov
iret
dec
shr
outs
pop
add
adc
add
cmp
sub
iret
inc
adc
(bad)
loop
fidivr
mov
jmp
jae
xchg
xchg
jb
jo
dec
jae
mov
sbb
test
sti
jp
xor
xor
lods
daa
loop
or
sub
push
shl
jbe
cmp
push
dec
mov
and
jl
mov
cs
sub
mov
push
sub
mov
out
mov
rol
lahf
test
fs
std
cmp
fcmovne
and
aaa
dec
retf
call
das
or
xor
es
out
mov
mov
sub
ror
out
mov
add
dec
mov
enter
xchg
add
push
addr16
mov
push
dec
pop
sub
out
dec
push
push
push
in
je
ja
mov
or
mov
jmp
lea
outs
repz
in
movs
retf
pop
aas
pop
mov
add
or
or
sahf
pop
ret
and
jbe
mov
repz
loope
nop
add
aad
dec
enter
add
scas
mov
dec
sahf
pop
dec
cmp
jle
jno
test
inc
and
cmp
imul
ss
jnp
dec
xchg
push
adc
or
das
aad
(bad)
ffreep
xadd
xor
adc
push
aaa
push
mov
pushf
mov
cmp
mov
adc
jge
call
jbe
mov
std
lods
enter
mov
out
push
xor
movs
push
push
rol
xchg
lods
nop
(bad)
xchg
stos
pop
pusha
xor
sahf
and
lock
(bad)
ds
test
ret
call
shl
push
lods
cmc
xor
mov
mov
adc
xchg
sbb
pop
and
lock
aaa
mov
inc
inc
mov
push
or
icebp
addr16
es
xchg
je
pop
(bad)
add
pop
xchg
jnp
lods
mov
out
js
hlt
mov
out
int
xchg
lea
data16
shr
(bad)
aam
sahf
stc
xor
pop
or
adc
and
dec
xor
sbb
add
and
pop
add
js
out
(bad)
jmp
pop
sbb
push
sub
mov
mov
jbe
mov
div
nop
pop
dec
in
add
or
scas
(bad)
aaa
pusha
and
inc
js
adc
add
leave
fisubr
out
aam
fcomp
and
rep
mov
lods
mov
stos
sbb
call
sub
sbb
or
mov
in
inc
sbb
dec
sbb
in
imul
dec
add
fdiv
mov
sub
add
push
pop
mov
jecxz
imul
inc
sbb
out
push
scas
daa
ret
lock
imul
sub
arpl
xchg
push
fnstenv
cmp
scas
and
movs
nop
data16
aaa
inc
test
dec
and
jmp
pop
mov
jo
(bad)
push
(bad)
repz
adc
sahf
(bad)
movs
pop
xlat
push
adc
xchg
fisttp
mov
xchg
sub
fs
dec
cmp
push
add
jo
fwait
jge
int3
mov
mov
out
and
xor
cmp
adc
scas
(bad)
int
inc
imul
pop
iret
int
addr16
(bad)
xor
xchg
add
fistp
dec
movs
lahf
out
test
jmp
aam
add
mov
ffreep
ins
retf
das
out
adc
adc
mov
or
jno
pushf
scas
sbb
sub
mov
in
(bad)
stc
in
xor
enter
mov
out
mov
jmp
xor
(bad)
neg
cli
jb
(bad)
and
sahf
scas
adc
stos
icebp
pop
add
mov
repz
xor
lahf
xchg
push
adc
ins
dec
xchg
cmc
xchg
lods
ins
jecxz
(bad)
xor
stc
mov
mov
sub
lds
mov
push
sbb
stos
lods
push
fisub
inc
jmp
iret
in
mov
cmp
pop
outs
sar
(bad)
loopne
fdiv
in
or
and
jmp
aam
repnz
in
fwait
lock
test
push
inc
pop
into
test
xor
aas
adc
rcr
test
inc
and
mov
loop
fnstsw
inc
test
dec
aad
mov
jmp
(bad)
lock
cmp
ss
pop
(bad)
pop
fld
loope
dec
test
(bad)
in
mov
test
xchg
mov
sar
fs
push
movs
mov
cmp
(bad)
stos
adc
xchg
or
inc
gs
ins
or
dec
mov
push
dec
rcl
stos
fucomi
pop
setns
push
inc
imul
lds
xor
ficomp
or
sub
les
cdq
in
enter
jbe
xchg
xor
in
pop
mov
sbb
data16
repz
xchg
mov
jle
hlt
aas
fidiv
pop
lods
and
aas
daa
mov
loope
push
cmps
sar
xor
sub
push
(bad)
fiadd
movs
jmp
sub
je
adc
or
cmp
xchg
and
pop
jle
pusha
fsubr
mov
les
xchg
ins
stc
mov
lock
(bad)
mov
xor
xchg
push
or
mov
xchg
cmp
cmps
rcr
(bad)
sbb
aas
or
ja
fdiv
adc
(bad)
mov
test
aas
ds
jge
mov
cwde
add
sbb
movlps
cmp
ins
int
mov
push
lds
(bad)
cmp
loop
pusha
push
cmc
imul
push
inc
jge
loopne
pop
xor
pop
inc
call
mov
or
jp
popa
mov
imul
add
jnp
imul
inc
psubusb
mul
adc
or
and
shl
push
fdivr
call
adc
inc
jbe
jno
pop
pop
popf
mov
loopne
test
mov
retf
imul
lea
pop
stos
test
call
mov
loopne
inc
fldenv
xchg
outs
adc
stc
sub
stos
out
pop
rol
jb
add
push
fidiv
dec
pop
loope
out
fdiv
push
test
or
and
pop
adc
leave
scas
test
pop
(bad)
dec
test
pop
inc
fstp
pop
pop
bound
sbb
xor
cmps
jmp
push
mov
clc
enter
and
loope
int
movs
sub
idiv
out
ins
aas
sub
push
ss
push
sbb
xchg
outs
inc
cld
jae
and
stos
retf
lea
push
or
mov
adc
movs
push
(bad)
(bad)
cs
mov
fild
or
and
sub
fwait
push
add
repz
ins
das
lock
sub
icebp
jg
(bad)
push
xchg
out
cmps
push
movs
sti
mov
outs
imul
popa
lods
movs
adc
hlt
xchg
into
or
jb
inc
inc
arpl
stc
mov
outs
scas
(bad)
or
gs
mov
add
mov
mov
pop
mov
ss
stos
in
cdq
add
cmp
inc
mov
dec
xchg
jle
or
sahf
mov
fimul
xor
outs
(bad)
sbb
and
arpl
lahf
mov
outs
add
in
dec
fucom
hlt
es
jl
xchg
push
mov
sub
rcl
je
mov
into
adc
mov
ds
popa
cmp
cdq
rcr
scas
neg
ins
test
in
lock
mov
pop
dec
and
sbb
dec
scas
fcom
or
push
sbb
mov
jmp
jl
fnstenv
je
jp
sbb
loop
sbb
mov
imul
stos
dec
add
pop
fwait
mov
inc
add
mov
push
sti
pop
(bad)
cld
add
dec
pop
pop
dec
and
cmp
inc
sub
cmp
sahf
cmc
sar
inc
leave
(bad)
sub
and
jo
dec
jl
xchg
lods
stc
jmp
push
add
sub
jge
cli
popf
mov
jo
push
push
fst
jae
ret
inc
jbe
call
mov
sbb
test
adc
adc
sar
inc
loopne
mov
pop
xchg
cli
add
push
and
inc
mov
cmp
fwait
cmp
jl
adc
bound
(bad)
push
adc
stos
mov
out
push
jo
dec
inc
retf
scas
push
cmp
pop
push
pop
push
jnp
call
int
daa
cmc
sub
scas
sub
sub
int
movs
xor
imul
aaa
movs
ds
sbb
shl
les
xchg
cwde
mov
pop
xor
xchg
jp
dec
fstp
dec
jmp
dec
pop
mov
(bad)
lds
pop
and
push
inc
scas
clc
add
adc
call
cmp
push
lods
div
cs
xor
(bad)
inc
jl
jecxz
and
inc
inc
xor
jb
add
mov
cmp
cdq
test
push
mov
popf
push
xor
scas
inc
pop
jp
mov
fwait
outs
scas
pop
jns
arpl
clc
in
fwait
push
mov
pushf
cmps
shl
cmp
ret
xchg
xor
xchg
stos
fld
movs
and
pop
inc
jecxz
cdq
jb
int3
(bad)
outs
daa
push
sub
outs
lea
adc
cmp
inc
push
jns
sbb
mov
sbb
mov
jns
jb
push
lods
jns
sbb
rcr
bound
dec
dec
fist
repnz
ret
(bad)
add
mov
mov
out
or
je
scas
mov
hlt
adc
cmp
shl
(bad)
aaa
sub
pop
lods
add
mov
cmp
(bad)
out
test
inc
cmps
inc
or
dec
loopne
enter
pop
adc
add
pop
mov
or
std
scas
lea
cmp
aad
mov
inc
js
jo
dec
pop
xchg
jecxz
mov
pop
push
add
dec
jmp
xor
pop
mov
pop
test
pop
push
and
xor
lods
inc
mov
fstp
dec
(bad)
mov
mov
sbb
nop
idiv
addr16
pop
ins
pop
and
mov
stos
ins
sbb
dec
add
sbb
cmp
dec
repz
loopne
fmul
ds
popa
mov
xor
mov
les
xor
movs
into
enter
dec
outs
sti
sbb
ret
inc
inc
aaa
out
outs
out
enter
push
or
mov
cmps
jns
jnp
call
fidivr
movs
icebp
icebp
fnsave
(bad)
xor
enter
sub
xchg
and
dec
sbb
daa
pop
jno
cs
mov
jmp
lahf
loop
jbe
jnp
xchg
scas
(bad)
or
(bad)
aam
jmp
xchg
xor
into
retf
sahf
xchg
into
in
stos
(bad)
and
dec
jbe
not
leave
xchg
ins
into
aad
push
cmp
(bad)
adc
sbb
(bad)
dec
movs
or
out
xor
sti
push
inc
cmps
sub
adc
adc
and
daa
adc
lods
retf
adc
sbb
xchg
stos
test
je
inc
adc
push
sbb
inc
xchg
sbb
loope
std
fidiv
pop
clc
aaa
ins
push
clc
sbb
or
jnp
sbb
inc
mov
outs
(bad)
pop
jno
jge
mov
repz
and
(bad)
mov
fistp
in
mov
and
rol
ret
imul
ficom
jne
inc
sar
inc
pop
mov
sub
pop
xor
sub
fiadd
mov
sub
loop
inc
xchg
cmp
inc
and
xor
mov
outs
cdq
pop
rcl
pop
adc
test
popf
(bad)
int3
aaa
push
popa
neg
inc
(bad)
sub
adc
lods
jecxz
mov
dec
xchg
mov
mov
inc
repnz
jl
mov
mov
cmps
ror
arpl
in
mov
pop
jo
mov
xor
mov
outs
popa
es
shl
mov
cmp
out
jecxz
pushf
jbe
add
mov
iret
mov
loop
mov
mov
neg
out
push
push
inc
jno
fs
pop
bound
push
(bad)
cmps
icebp
int3
sar
xor
sar
jp
(bad)
mov
ins
out
jae
mov
cwde
mov
push
je
(bad)
loopne
xchg
mov
ja
xlat
scas
push
ds
in
out
aad
pop
adc
mov
shl
cmp
(bad)
int3
adc
jmp
bound
push
and
repz
fnstenv
stc
in
ss
and
stos
mov
mov
pop
mov
mov
outs
int3
enter
test
(bad)
std
push
xlat
dec
cmp
mov
dec
test
in
cwde
cmps
cmps
mov
fadd
mov
sar
or
ins
add
mov
(bad)
mov
mov
xchg
dec
push
xor
test
inc
push
loopne
(bad)
jne
add
push
repnz
xor
out
adc
mov
sbb
retf
inc
sbb
add
mov
push
push
cmp
mov
sub
mov
leave
dec
jne
and
sti
repz
pop
les
out
test
cmp
sub
lea
jbe
in
stos
xor
hlt
les
repnz
dec
adc
ins
push
iret
xchg
inc
and
jnp
repnz
adc
(bad)
xchg
mov
lock
int3
mov
aam
in
pushf
shr
mov
frstor
movs
mov
pop
call
adc
cmp
shl
stos
fdiv
ds
and
loop
lods
sti
cmova
push
mov
and
xchg
lock
lea
mov
sbb
cmp
dec
pusha
cld
mov
mov
mov
cmc
adc
mov
clc
jae
lods
das
and
push
mov
ret
cmps
jp
push
push
sub
cmp
or
fxch
out
cmp
lods
jge
call
nop
pop
or
mov
lahf
sbb
mov
(bad)
out
je
repz
and
jmp
pop
gs
dec
mov
jg
aaa
dec
jmp
dec
or
and
imul
cmp
xor
cmp
es
and
add
mov
pop
adc
jge
mov
and
mov
mov
fiadd
cmp
icebp
fbld
test
jg
jno
mov
jns
out
(bad)
(bad)
lods
shr
inc
data16
jge
mov
data16
(bad)
and
pop
pop
jle
xchg
stc
or
std
jns
push
ins
mov
int
leave
mov
ffree
mov
jl
pop
fwait
or
(bad)
in
in
xchg
add
xlat
inc
pushf
leave
popf
ss
sub
(bad)
clc
mov
gs
popf
pop
sub
xor
clc
fwait
mov
test
rcl
or
mov
sbb
popa
cmp
addr16
je
sbb
xchg
bnd
pop
aas
es
scas
mov
sub
retf
xchg
pop
(bad)
iret
lods
aas
int3
sbb
(bad)
mov
fadd
loopne
int3
iret
mov
xor
das
or
fld
or
xchg
aaa
nop
scas
rcl
push
sbb
xor
test
mov
xchg
into
ret
xor
or
pop
sar
mov
lods
imul
xor
mov
call
mov
and
push
in
cmps
xlat
cmp
repz
dec
mov
xchg
jne
add
aaa
pop
dec
cs
imul
adc
lods
jno
mov
out
neg
mov
es
ins
adc
fld
sbb
cmp
add
mov
pusha
mov
hlt
mov
push
out
xchg
rol
ret
adc
rcl
mov
push
pop
in
jecxz
inc
arpl
mov
das
fmul
fcomp
xor
pop
jne
mov
xchg
adc
mov
mov
cmp
mov
jecxz
jb
dec
mov
and
jl
das
sub
stc
push
cmp
lods
scas
rcr
inc
pop
cld
mov
push
mov
je
cmp
ret
das
xchg
mov
mov
cmp
xor
aam
dec
in
(bad)
push
xchg
ins
mov
jbe
(bad)
add
or
inc
sbb
push
push
pop
or
mov
push
loopne
pop
mov
rcr
ds
es
popf
jno
sahf
or
adc
mov
lds
jge
sub
mov
pop
scas
ret
mov
add
fdiv
or
mov
je
xchg
jmp
ret
xor
xchg
push
movs
mov
das
in
mov
inc
fs
jbe
xchg
dec
nop
in
fcom
inc
ins
mov
das
sar
add
mov
and
push
xchg
adc
aaa
dec
xchg
div
add
adc
add
pop
cdq
jne
xor
xchg
jo
(bad)
fdivr
dec
xchg
inc
mov
xchg
cmp
inc
mov
mov
mov
das
pop
push
into
out
adc
ret
(bad)
out
mov
lahf
push
imul
sub
int3
mov
pop
dec
sub
imul
cmps
rol
push
mov
vcmpps
mov
sbb
cmp
add
(bad)
push
add
jnp
sub
pavgw
add
or
add
xchg
movs
or
push
dec
sti
imul
add
jl
(bad)
stc
mov
cmps
loopne
jmp
add
push
arpl
push
or
jmp
imul
cmps
sbb
sub
jne
lea
xchg
mov
dec
inc
inc
lods
sti
mov
ds
cmp
shl
xor
jns
cmc
sbb
jge
mov
imul
cli
sbb
pop
cmp
ds
cld
into
fisub
jae
mov
(bad)
pop
xchg
pop
cmc
adc
aad
sbb
cld
xor
add
jne
rol
jnp
push
mov
div
cli
pop
mov
cmp
push
sbb
fcomp
fwait
xor
lock
mov
mov
cmps
in
jp
fdivr
and
div
in
(bad)
mov
pop
inc
xchg
dec
movs
cmp
aas
xchg
stos
jecxz
and
push
mov
cmp
jmp
jno
ds
ins
movs
call
cmc
push
daa
sub
in
dec
mov
lods
pop
push
add
inc
ret
mov
jle
cld
inc
cmc
mov
or
xchg
pop
jecxz
jp
sbb
inc
bswap
ror
out
or
ja
and
pop
outs
fild
stos
sub
lahf
stc
(bad)
mov
fbld
mov
add
pop
push
dec
rcl
push
es
jae
in
sub
es
popw
nop
in
jg
dec
sbb
nop/reserved
jmp
bound
out
mov
sbb
and
mov
add
xchg
test
xor
scas
fisub
push
push
cmp
ja
(bad)
sti
mov
out
xchg
mov
inc
push
movs
sbb
xor
inc
dec
popa
mov
xchg
out
or
adc
bound
neg
or
sub
jl
adc
loop
sub
imul
repz
jmp
mov
pushf
sbb
and
xchg
pop
ins
xchg
cmp
test
gs
mov
fistp
ja
xchg
test
pop
iret
mov
sub
sahf
(bad)
shr
pushf
add
popa
enter
push
jge
jg
pop
stos
js
or
loop
inc
sbb
sub
test
push
push
sbb
sahf
xchg
aas
inc
ds
sub
idiv
pop
sbb
push
xor
mov
gs
inc
adc
mov
dec
adc
imul
outs
fstp
dec
adc
(bad)
pop
imul
cmps
adc
(bad)
rol
and
add
jno
and
push
mov
call
cdq
loopne
mov
push
lods
or
ror
pop
cli
push
(bad)
xor
ret
xchg
pop
jg
sahf
dec
dec
mov
nop
jno
addr16
lea
cmp
mov
jecxz
sbb
push
bound
not
call
xor
or
nop
fwait
cmps
mov
test
cdq
pop
xor
xchg
adc
pop
jge
shr
cmp
arpl
dec
fmul
xchg
out
sbb
imul
mov
push
lock
nop
xchg
lea
inc
mov
mov
cmp
adc
add
inc
sub
mov
loopne
jmp
test
jb
mov
aad
pop
cmc
mov
cmp
and
adc
adc
and
and
adc
fs
hlt
or
xor
lea
pop
cmp
mov
je
ss
and
cli
rol
loopne
aad
push
icebp
(bad)
ror
inc
and
mov
fistp
imul
int
aad
add
bound
imul
shl
nop
push
test
jecxz
sbb
ja
mov
or
loope
mov
cmp
add
mov
dec
clc
adc
dec
ds
jg
sbb
imul
sub
or
rcr
mov
pop
cli
mov
pop
cmps
mov
sub
or
cmps
mov
movs
sti
push
jno
sahf
sbb
popf
into
aas
lock
adc
fs
call
mov
xor
push
mov
repnz
fadd
adc
loopne
gs
sub
fs
push
xor
xchg
popa
ret
cmps
stc
push
adc
ins
loopne
aaa
sub
sbb
sbb
mov
mov
popf
in
movs
out
stos
cs
fwait
popf
inc
or
pop
cmc
jns
(bad)
cmp
xchg
popf
pop
xor
mov
xchg
in
mov
in
jle
xor
sbb
sahf
xchg
pop
(bad)
cmp
xchg
in
out
xchg
bnd
and
movs
cmp
push
mov
out
dec
dec
mov
mul
and
jl
xchg
(bad)
hlt
outs
jg
(bad)
repnz
dec
into
aas
add
outs
rcl
and
je
lea
jp
aam
sar
stc
shr
cmp
(bad)
pop
mov
cmp
add
mov
inc
(bad)
lods
mov
xor
jp
sub
shl
cmp
(bad)
sti
mov
inc
gs
outs
cli
inc
mov
enter
ret
mov
imul
or
repz
call
adc
mov
and
dec
scas
xchg
xchg
add
sub
sbb
jg
pop
add
rcr
shl
lods
ret
fdivr
shr
jmp
stc
sub
and
lods
sub
lahf
xchg
cmp
mov
jecxz
add
pusha
popf
jbe
dec
mov
popf
call
das
xchg
push
xor
fidiv
mov
push
inc
xchg
shl
and
cmp
in
and
jb
push
imul
aas
ror
sti
dec
cmp
and
clc
popf
add
lahf
inc
pop
dec
push
xchg
test
add
mov
shl
ins
inc
fst
leave
xor
mov
mov
setbe
xor
shr
sub
popa
popa
push
mov
and
jnp
retf
adc
sbb
pop
push
fdivrp
pop
test
outs
pop
add
retf
mov
xor
cmp
adc
lds
into
aaa
pop
jg
test
and
xor
(bad)
fdiv
lods
ret
xor
fidivr
sbb
clc
sahf
mov
(bad)
sub
push
pop
aaa
out
sub
ficomp
out
cmp
ins
cmp
push
out
add
dec
les
push
ins
mov
xchg
es
sbb
mov
pop
cmp
(bad)
fdiv
clc
enter
fsub
push
jns
fld
cwde
sbb
pop
sahf
loopne
mov
rcr
add
xor
das
call
retf
push
adc
mov
xor
test
in
jb
(bad)
cvtdq2ps
adc
(bad)
mov
repz
out
mov
inc
sbb
daa
cld
dec
and
mov
bnd
stos
push
ret
xlat
daa
add
dec
movs
mov
push
push
cwde
lods
outs
aad
gs
mov
stos
loopne
into
jmp
xchg
sub
(bad)
jbe
lods
add
xor
ret
retf
pop
into
jns
mov
adc
sub
ins
adc
(bad)
les
or
ds
test
sub
mov
je
out
out
xchg
pop
push
and
aam
pop
mov
(bad)
retf
fst
mov
out
mov
mov
neg
mov
bound
les
ret
lock
and
shr
and
pop
jp
test
mov
ins
jbe
or
sub
mov
repz
in
das
jns
inc
sar
outs
pop
push
js
inc
xchg
pop
mov
mov
out
jne
cmps
movs
adc
aam
(bad)
std
mov
mov
ret
test
ret
mov
jle
mov
js
jbe
mov
and
(bad)
mov
cdq
fidivr
rcr
jnp
cdq
push
popf
pop
mov
ret
nop
dec
cmps
mov
(bad)
push
mov
xchg
imul
jns
or
retf
adc
shl
arpl
popf
adc
cs
pushf
jp
xchg
clc
jb
jmp
pop
cmps
inc
call
jbe
scas
xor
xor
jmp
xchg
pushf
push
into
hlt
push
push
adc
xchg
xor
push
adc
ss
and
fisub
(bad)
pop
shr
in
jbe
(bad)
aas
pop
cmps
hlt
xor
xchg
mov
loope
sbb
and
xor
cmp
dec
fs
xor
pop
les
xor
imul
pusha
imul
jp
and
shr
add
push
rcr
jne
add
push
cld
xlat
fsub
or
shl
inc
sub
bound
push
jo
imul
mov
push
mov
push
adc
clc
jge
sbb
rol
mov
outs
inc
lahf
repz
aaa
inc
(bad)
pushf
pop
shl
push
ds
inc
pushf
addr16
mov
cli
push
lods
jae
dec
or
xchg
or
ins
sbb
loop
pand
xchg
sub
into
add
sub
jbe
push
out
push
in
outs
fsub
xor
mov
adc
mov
mov
retf
iret
pop
gs
(bad)
mov
(bad)
bound
push
arpl
pop
push
std
jge
int
adc
add
lods
xor
(bad)
cmps
test
stos
push
adc
gs
aas
mov
xchg
mov
mov
test
jns
enter
mov
inc
adc
dec
bound
or
ret
popf
mov
mov
aad
in
inc
fsub
mov
xchg
jbe
int
mov
in
(bad)
dec
dec
ja
jge
push
pop
cmp
leave
es
jbe
aaa
lods
mov
xchg
adc
icebp
cmps
dec
jp
std
popa
jne
adc
das
push
iret
sahf
mov
xchg
inc
sahf
mov
mov
out
into
sub
sbb
das
fwait
lds
mov
cmp
fisttp
ret
ins
or
leave
out
dec
dec
mov
xchg
test
jbe
push
stos
or
dec
xor
ds
mov
sub
les
xchg
xor
dec
inc
sahf
mov
sahf
ins
es
push
cmp
cmp
aas
pop
ffree
aam
or
adc
js
loopne
sahf
jbe
sbb
or
arpl
in
sub
ins
test
add
xchg
fisub
cs
aaa
int3
mov
jmp
outs
jp
fnsave
out
cmp
add
clc
xchg
jo
mov
dec
loop
enter
cmp
push
jae
test
idiv
das
int
xchg
cmc
jmp
mov
aas
cmp
mov
push
ret
inc
xor
ffreep
aas
cmp
dec
cmps
push
test
mov
pop
aas
jg
pop
stos
push
movs
dec
dec
mov
inc
sbb
jbe
lods
push
adc
aas
mov
push
mov
arpl
and
xchg
stc
jle
add
cmp
mov
sbb
outs
jp
mov
out
popf
loop
fld
add
pop
or
loope
add
dec
cmp
out
xor
and
xchg
add
jo
sub
rcr
sub
xor
xor
loop
mov
push
xlat
iret
ins
sub
retf
test
sahf
mov
in
pusha
xor
adc
hlt
push
loope
sub
xchg
mov
dec
int3
mov
push
ror
sub
mov
enter
push
and
xchg
popa
push
push
xchg
add
cmp
xor
cmp
jp
fidiv
jg
repnz
aam
xor
jns
loopne
cli
cld
lahf
loopne
rcr
cld
xchg
xor
inc
add
xor
inc
shl
jae
clc
mov
imul
push
or
hlt
dec
retf
scas
in
loop
stos
cmp
inc
adc
in
inc
icebp
xchg
add
xor
xchg
pop
push
push
mov
push
and
sbb
fadd
jo
pop
fwait
imul
add
ret
mov
dec
mov
pop
push
and
sbb
pushf
add
arpl
sar
sub
(bad)
jle
stc
push
cmp
push
mov
out
(bad)
aam
dec
bound
popf
jns
mov
jmp
int
jl
jnp
add
pusha
aam
and
adc
fld
xchg
rcr
pop
add
hlt
fdiv
sub
imul
push
lods
jl
mov
sbb
bsf
enter
cmp
push
outs
rcl
(bad)
fwait
pushf
mov
jo
pop
imul
rol
sub
arpl
imul
lds
xchg
lock
hlt
sub
xchg
int
sbb
xchg
repz
adc
in
jmp
sbb
inc
sub
or
leave
xchg
(bad)
xchg
fimul
xchg
mov
mov
xchg
mov
invd
int
pop
sbb
cli
push
fst
mul
and
(bad)
pop
in
xor
nop
mov
mov
mov
popa
mov
jno
sti
cs
add
bound
dec
loop
je
jae
ins
cmp
sbb
mov
lods
das
retf
push
call
(bad)
fwait
jmp
icebp
and
(bad)
iret
dec
xchg
cmps
pushf
aam
les
cmp
(bad)
push
pop
sbb
and
int3
adc
mov
mov
cmp
mov
scas
inc
data16
cwde
or
jmp
inc
fs
popf
idiv
push
and
ins
add
inc
sbb
stos
jns
cmp
push
jns
call
xchg
ret
push
push
repz
inc
repz
jecxz
imul
add
retf
leave
cld
mov
call
mov
repnz
adc
jbe
xchg
into
hlt
out
xchg
ins
ret
lock
lods
mov
sbb
outs
adc
cmps
sub
mov
movs
mov
les
inc
cmp
mov
dec
jo
fild
mov
inc
(bad)
(bad)
(bad)
sbb
fxtract
nop
or
mov
mov
mov
jne
pop
mov
or
sub
sbb
std
aam
push
std
dec
push
mov
popf
imul
push
or
xor
test
leave
pushf
jns
(bad)
div
les
leave
pop
retf
fcomp
out
xchg
and
xor
pop
dec
fs
dec
mov
repz
hlt
and
retf
pop
jnp
xor
xchg
and
sbb
sub
pop
jp
ds
pushf
jge
iret
popa
cmp
retf
mov
test
test
hlt
push
mov
retf
dec
pop
(bad)
cmp
cmps
push
push
mov
mov
rol
or
xchg
inc
sbb
sub
xlat
sbb
scas
add
mov
push
addr16
jle
jl
cwde
icebp
pop
in
lods
mov
scas
pop
fwait
mov
js
call
mov
into
enter
dec
scas
adc
or
in
jl
inc
test
retf
fcmovu
add
int3
int
pop
pushf
retf
test
fadd
cmp
out
rol
mov
ins
mov
movs
in
in
shr
pusha
int3
scas
mov
gs
or
xchg
xor
cmp
cwde
pop
and
fidiv
mov
sub
stos
loopne
mov
es
and
cmps
in
dec
in
jnp
xor
xor
cmc
adc
jno
arpl
jl
int3
dec
stc
inc
jb
cmovp
in
xchg
movs
aas
das
ror
leave
push
sbb
inc
test
(bad)
pop
jmp
stc
mov
outs
push
ret
xor
in
xor
and
lahf
scas
push
dec
retf
mov
push
xor
mov
add
jmp
adc
sahf
push
push
movs
rcr
push
rcl
or
pop
ror
mov
sub
sahf
popa
in
test
mov
pop
test
outs
fisub
ror
lods
sub
ja
int
(bad)
jno
outs
and
mov
cmp
dec
add
fild
(bad)
and
add
xchg
dec
test
cli
xor
aaa
mov
mov
add
jnp
(bad)
fisttp
outs
jmp
mov
test
mov
(bad)
js
mov
in
add
add
xchg
push
test
arpl
sbb
mov
mov
push
sbb
sbb
sti
lar
mov
or
lods
dec
call
(bad)
psllq
hlt
push
jp
outs
inc
nop
inc
mov
mov
mov
jbe
push
clc
mov
popf
in
shl
stos
inc
aas
cmps
jne
jle
pop
push
push
out
jns
test
add
mov
lea
ss
pop
sbb
jmp
retf
push
addr16
mov
add
ror
icebp
fsubr
xchg
repz
jg
lock
jo
push
jae
lea
outs
dec
push
jg
cmp
add
push
(bad)
xlat
jb
(bad)
push
push
cmp
or
out
mov
cmps
(bad)
daa
in
(bad)
cmp
xchg
jge
pop
mov
mov
cmp
arpl
lea
cmc
sbb
xchg
mov
cmp
hlt
dec
and
push
jmp
jge
sahf
loope
inc
push
mov
pusha
add
ins
and
xchg
fcom
fadd
dec
jecxz
jo
inc
stc
shl
sbb
lods
xor
add
aas
pop
pushf
(bad)
cmp
dec
fbstp
stos
in
fcomp
add
mov
cdq
clc
outs
xor
mov
or
call
jge
inc
div
push
jg
mov
xor
addr16
xchg
push
add
std
push
ret
jbe
sub
test
adc
out
jle
pop
or
call
sub
js
fild
inc
xchg
(bad)
clc
out
adc
cmps
cmp
(bad)
(bad)
scas
pop
xchg
iret
mov
(bad)
pushf
push
and
aam
jmp
loope
pop
mov
inc
or
(bad)
pop
inc
adc
aas
cmp
sbb
lods
xlat
adc
(bad)
iret
ret
ds
and
cli
push
pop
cmp
and
xor
add
in
pop
cld
mov
mov
dec
stos
jbe
inc
retf
movs
adc
or
retf
pop
dec
repnz
jmp
dec
hlt
inc
push
push
dec
fld
jns
or
fbld
mov
pop
xor
rol
pop
xor
test
xchg
inc
jle
into
xor
cmp
add
ins
xchg
mov
jmp
or
ins
pxor
(bad)
or
jb
jno
ss
xchg
aas
lds
xacquire
jecxz
and
add
pusha
icebp
mov
jmp
(bad)
push
stos
jecxz
aad
adc
int3
bound
add
add
and
add
mov
or
mov
or
push
push
inc
push
fistp
stos
inc
cwde
xor
fadd
add
add
jne
cs
bound
add
(bad)
or
push
(bad)
or
add
add
adc
or
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
