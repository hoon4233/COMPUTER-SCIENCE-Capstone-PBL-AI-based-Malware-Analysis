mov
or
mov
aam
add
push
add
dec
add
mov
ror
or
pop
cwde
outs
mov
pop
mov
(bad)
shr
movs
in
test
clc
push
add
fdiv
aam
mov
test
xor
lods
call
add
fdiv
pushf
movs
pop
std
clc
pop
(bad)
daa
dec
mov
mov
mov
add
ins
jl
or
inc
mov
dec
enter
add
and
je
mov
in
pop
push
add
and
frstor
clc
add
loop
add
xor
retf
sbb
and
ror
xlat
sub
cwde
cmps
in
sub
in
add
sti
and
and
stos
or
das
sub
aam
das
aam
fidivr
xor
das
sub
pop
adc
mov
outs
cmp
ror
sub
arpl
ins
mov
dec
mov
mov
sbb
ins
mov
cmp
shl
jbe
add
aad
sub
test
pusha
das
mov
daa
repz
rcr
or
movs
(bad)
jecxz
test
in
pop
movs
ja
fs
add
mov
hlt
aam
movs
fist
and
sar
pop
push
(bad)
ror
add
jl
into
jbe
pop
fmul
pop
dec
sub
pop
mov
retf
jl
pop
mov
jp
das
addr16
cwde
lahf
loop
sub
pop
loop
dec
(bad)
hlt
das
mov
fwait
std
sub
pop
mov
mov
movs
cld
add
adc
mov
mov
lahf
adc
dec
cmp
mov
push
mov
jecxz
das
mov
add
ret
std
cwde
or
mov
retf
cs
xchg
mov
mov
add
sbb
ja
pop
mov
mov
pop
mov
mov
movs
loopne
adc
mov
dec
enter
add
mov
mov
jl
or
dec
dec
or
test
mov
mov
jmp
xor
lahf
loop
loopne
adc
mov
jmp
das
dec
dec
repz
mov
sbb
ins
mov
sbb
ins
mov
pop
or
mov
cmps
fadd
mov
cwde
in
mov
pop
frstor
mov
pop
mov
aaa
mov
sub
jo
xor
xor
inc
mov
jnp
outs
mov
pop
add
and
dec
(bad)
into
shl
inc
ror
cmps
xor
scas
cmp
pop
or
daa
in
pop
mov
pop
or
(bad)
bound
das
repz
pop
mov
pop
loopne
add
mov
pop
movs
fadd
mov
lahf
test
pop
movs
mov
aam
mov
xchg
(bad)
imul
dec
call
or
mov
cmp
pop
arpl
jo
add
cmc
shr
dec
push
fidivr
jno
mov
pop
ror
in
fsub
mov
pop
loop
retf
das
pop
cs
aad
pusha
mov
pop
mov
retf
es
das
mov
pusha
mov
rcl
inc
ja
mov
std
xor
pop
ja
mov
std
ror
icebp
das
mov
cmps
pusha
pop
fstp
es
das
mov
pusha
mov
lods
frstor
mov
mov
mov
jl
addr16
outs
inc
ins
jle
or
ins
rcl
fwait
lods
dec
cmp
mov
movs
std
and
add
and
(bad)
pop
mov
pop
mov
cs
inc
mov
cs
xchg
mov
sub
mov
pop
sbb
dec
push
mov
cmps
pop
push
cmps
addr16
out
push
add
and
add
loopne
pop
outs
adc
not
pop
cld
fwait
loop
or
pop
or
pop
arpl
ds
sub
ja
aam
retf
movs
arpl
push
jo
pop
rcr
daa
scas
in
sub
cdq
mov
sub
push
je
push
fadd
loopne
mov
mov
cmps
std
aas
pop
push
jl
in
mov
push
lea
cmp
push
js
arpl
fisub
xchg
ja
and
das
aad
mov
shl
ja
pop
ror
daa
sub
or
mov
push
jo
and
ja
mov
xchg
dec
jp
mov
mov
xchg
das
mov
repz
add
pushf
or
inc
mov
cmps
ja
pop
ror
(bad)
movs
ja
movs
das
cmp
mov
call
mov
popf
(bad)
data16
les
shl
push
rcr
daa
sub
cmps
xor
mov
pop
movs
iret
push
jg
bound
ror
(bad)
movs
ja
js
js
and
mov
pop
movs
mov
pop
add
je
cwde
frstor
not
aad
push
rol
fadd
int
sub
pusha
fcomp
movs
fst
cld
in
cmp
lds
(bad)
out
pop
inc
mov
cmps
(bad)
fmul
sub
imul
inc
mov
add
cmc
shr
lock
js
push
test
in
or
pop
mov
lds
int
xchg
lods
arpl
dec
stos
jmp
mov
mov
dec
mov
add
push
mov
aad
call
stc
ror
bound
add
xchg
sbb
ja
aam
retf
push
sub
inc
mov
cdq
add
add
je
cwde
frstor
not
std
aas
sub
pushf
call
pop
add
push
sbb
pop
adc
mov
in
xchg
mov
cmp
push
outs
dec
dec
iret
push
jg
push
in
xchg
cdq
add
push
jo
add
cmc
shr
test
test
inc
sub
or
add
pop
pop
cld
fwait
loop
ja
lods
xor
into
loop
faddp
and
push
je
fst
js
add
pusha
pop
pop
movs
ja
sub
je
test
xlat
jno
cwde
frstor
sub
test
sub
ja
test
loopne
mov
pop
loop
enter
mov
push
loop
retf
xor
pop
mov
addr16
mov
sar
inc
aad
cmc
shr
lock
js
adc
test
cmps
in
add
and
mov
pop
mov
cli
adc
loop
fsub
sbb
add
pop
or
das
push
mov
dec
movs
cmps
movs
mov
daa
dec
dec
stc
das
mov
cwde
frstor
repz
aaa
cmps
movs
mov
shr
fsubr
das
retf
hlt
rcr
mov
mov
retf
call
mov
mov
push
mov
dec
push
pusha
push
push
and
add
push
dec
pop
test
inc
movs
xor
(bad)
sub
out
test
ror
retf
test
stos
or
movs
or
pop
mov
movs
pushf
cmp
cwde
or
in
mov
xchg
fwait
xor
in
sub
loopne
xchg
mov
or
fadd
das
xchg
fwait
xlat
jno
xchg
dec
jp
mov
mov
inc
sub
xchg
(bad)
push
xchg
add
or
fsubr
retf
movs
mov
aam
or
fsubr
retf
cli
lock
loop
mov
lods
push
or
mov
push
sub
sbb
cmps
and
ror
popf
(bad)
sub
pop
cld
aaa
add
sub
or
pop
pop
or
push
cmps
arpl
lods
mov
sbb
das
mov
movs
ja
pop
cs
push
mov
retf
fadd
mov
pop
or
pop
movs
ja
fs
mov
pop
pop
mov
fsubr
das
dec
jns
cs
dec
scas
arpl
int
lock
daa
sub
mov
arpl
mov
es
scas
fbld
push
pop
pop
xchg
and
jo
and
fwait
loop
ja
mov
cwde
(bad)
mov
out
retf
push
jl
movs
daa
cmp
mov
daa
cmp
mov
sbb
test
pop
mov
and
in
mov
sub
jo
in
sub
sbb
mov
mov
outs
xchg
movs
pop
mov
push
inc
push
test
imul
not
mov
idiv
push
fisub
(bad)
pop
mov
pusha
fld
clc
retf
fwait
imul
shl
das
mov
push
dec
pop
xchg
fisub
rcr
mov
pop
or
mov
sbb
mov
sub
je
pusha
cs
call
mov
ror
and
movs
cld
push
arpl
cmps
and
ror
popf
(bad)
sub
pop
cld
and
(bad)
sub
or
pop
pop
or
add
(bad)
int
scas
fldenv
or
retf
rcl
inc
ror
cmps
arpl
je
cwde
frstor
repz
sbb
xlat
sub
xlat
mov
je
sub
sub
ror
pop
mov
int
mov
test
xlat
mov
add
mov
std
dec
sub
and
das
adc
das
mov
push
add
inc
xor
retf
or
das
mov
lods
xchg
mov
stc
retf
mov
fcomp
sub
pop
pop
add
mov
je
aam
sub
sbb
das
dec
push
add
push
mov
dec
lods
lds
xchg
es
mov
push
cs
mov
int
sub
adc
mov
push
cmps
addr16
mov
mov
movs
ja
lds
mov
movs
std
daa
enter
mov
pop
arpl
mov
loop
retf
sub
pop
loop
enter
loopne
mov
iret
pop
mov
retf
das
lock
inc
mov
ror
push
pop
mov
ror
mov
or
test
std
xlat
dec
loop
das
mov
scas
fadd
xor
loop
ja
pop
mov
inc
mov
jae
das
pop
cs
call
out
push
add
sbb
mov
mov
loopne
push
inc
adc
in
jne
mov
sub
dec
stos
pop
movs
jbe
mov
pop
pusha
test
pop
mov
pop
(bad)
or
jg
fidiv
pop
add
daa
mov
add
retf
pop
rcr
(bad)
push
xor
das
sub
inc
rcr
add
mov
inc
rcr
add
shl
mov
rcr
or
lods
fdiv
das
aam
or
fimul
das
sub
movs
fmul
lock
push
push
dec
pop
or
arpl
lods
pop
mov
pop
or
dec
inc
sbb
rcr
add
pop
dec
mov
mov
cmps
sub
mov
add
sub
movs
fmul
lock
push
push
dec
and
xor
(bad)
loope
ja
pusha
movs
jbe
dec
inc
jb
pop
fmul
pushf
iret
cmps
sbb
ror
mov
sti
retf
mov
pop
mov
movs
jbe
lock
adc
loop
fsub
push
je
pusha
push
or
dec
and
rcr
mov
and
mov
mov
movs
ja
scas
fild
sub
add
or
jg
dec
jg
pop
fmul
pushf
out
cmps
sbb
jecxz
inc
mov
fisub
pop
movs
add
scas
in
or
adc
mov
scas
fistp
cwde
and
sbb
mov
pop
or
jg
sbb
das
and
cmp
pop
movs
dec
sub
pop
or
mov
sbb
mov
add
retf
cli
inc
sbb
das
dec
retf
jle
pop
fmul
movs
ja
mov
xor
loop
add
shl
mov
fstp
or
lods
data16
mov
fidivr
pop
movs
mov
mov
call
loope
pusha
popa
push
movs
ja
fs
mov
pop
pop
mov
xor
das
sub
movs
ffreep
xchg
lods
ja
and
mov
aam
dec
stos
adc
jbe
mov
pop
loopne
inc
sbb
das
dec
push
jle
pop
fmul
movs
ja
mov
xor
iret
loop
add
shl
mov
ficomp
or
lods
data16
mov
fidivr
pop
movs
mov
mov
clc
push
(bad)
loope
pusha
in
movs
ja
fs
mov
pop
pop
mov
xor
das
sub
movs
ffreep
or
lahf
test
pop
movs
mov
aam
dec
stos
adc
jbe
mov
pop
loopne
inc
sbb
das
dec
sar
pop
fmul
movs
ja
mov
out
ja
pop
pop
mov
mov
pop
jg
sub
and
pop
movs
add
retf
lods
inc
sbb
das
dec
(bad)
rcr
dec
and
das
sub
out
ja
pop
pop
mov
mov
mov
sub
mov
ficomp
or
lods
data16
mov
pop
loopne
inc
sbb
rcr
pusha
cmp
fs
mov
pop
pop
mov
xor
das
sub
movs
ffreep
push
scas
ja
and
mov
aam
dec
stos
adc
jbe
mov
out
rcr
mov
popf
lea
sbb
rcr
fadd
mov
cdq
jmp
mov
sbb
das
and
dec
stos
pop
movs
jbe
mov
pop
add
push
mov
jbe
sub
jbe
lock
jg
arpl
cld
ror
shr
pop
mov
sub
movs
fsub
or
pop
pop
or
cmps
in
add
mov
es
scas
fidiv
sub
movs
jbe
mov
ror
add
pop
or
mov
pop
mov
mov
movs
jbe
mov
dec
stos
or
das
sub
movs
fsub
pop
or
stos
js
jbe
lock
les
das
sub
movs
fadd
mov
adc
pop
movs
fsub
pop
mov
sub
je
pusha
push
or
mov
pop
or
stos
je
jbe
lock
das
mov
cwde
in
inc
mov
fimul
stos
dec
movs
jbe
lock
jg
arpl
cwde
ror
shr
in
das
mov
movs
ja
sub
push
rcr
fsub
push
je
js
push
cmps
arpl
cmc
shl
pop
mov
mov
movs
ja
sub
pusha
rcr
fsub
push
je
pusha
push
or
scas
dec
push
test
mov
movs
ja
pop
out
jo
pop
movs
loopne
add
mov
pop
or
int3
pop
mov
movs
jbe
mov
pop
loop
dec
or
das
mov
pop
jg
sub
add
pop
movs
add
pop
out
rcr
add
shl
xor
iret
loop
add
shl
mov
inc
mov
cmp
jbe
mov
movs
jbe
sub
adc
pop
movs
add
shl
(bad)
cmp
lods
dec
dec
add
sbb
das
mov
retf
ja
pop
fsub
mov
mov
add
movs
ja
sub
mov
int
sub
or
pop
xchg
and
and
pop
movs
mov
pop
or
scas
inc
sbb
rcr
add
pop
dec
mov
mov
cmps
or
call
stos
xchg
pop
mov
sub
movs
fsub
or
pop
pop
or
cmps
in
add
xchg
add
and
je
scas
fidiv
mov
movs
jbe
mov
pop
loop
dec
push
jecxz
mov
cmp
das
(bad)
pushf
or
sub
pop
movs
ja
and
(bad)
or
jg
out
clc
rcr
or
mov
outs
xchg
movs
pop
mov
push
inc
shl
mov
cmps
inc
loop
das
mov
out
rcr
fbld
push
je
js
push
cmps
arpl
cmc
shl
pop
mov
pop
add
shl
xor
into
loop
add
lock
das
mov
push
dec
and
fdiv
das
scas
fild
stos
shl
adc
ror
jg
arpl
adc
shr
cmp
pop
pop
xchg
(bad)
fdiv
daa
scas
ficomp
mov
movs
jbe
mov
pop
mov
pop
or
enter
dec
idiv
pop
fmul
pushf
iret
cmps
sbb
rcl
inc
ror
cmps
arpl
xor
das
scas
fild
das
mov
movs
jbe
mov
pop
ja
adc
rcr
fadd
mov
jne
pop
movs
fadd
and
mov
and
push
cmps
arpl
add
lods
push
pop
mov
ror
rcl
(bad)
or
jg
fidiv
pop
movs
add
rcr
pusha
aam
pop
mov
fidiv
pop
movs
fadd
mov
jne
pop
movs
fadd
xchg
mov
and
push
cmps
arpl
xor
das
aam
xor
mov
ror
cmps
arpl
or
jg
imul
movs
or
movs
and
bound
and
push
jbe
pop
ror
jg
imul
ror
jg
imul
fidivr
out
pop
mov
and
ror
push
and
push
or
pop
movs
ja
sbb
pop
std
sub
jne
pop
movs
mov
or
pop
pop
or
ja
pop
pop
cld
and
ficomp
pop
movs
fsub
aad
das
mov
jmp
rcr
dec
lods
sbb
pop
cld
and
ficomp
movs
fsub
ficom
pop
movs
fsub
ficom
movs
fsub
cwde
fdivr
mov
movs
jbe
lock
push
push
movs
ja
inc
inc
in
cmc
shr
pop
xor
loop
loopne
mov
mov
pop
mov
mov
pop
mov
mov
or
dec
push
imul
retf
sub
ins
call
mov
pop
mov
ret
das
and
mov
push
ds
cmps
in
add
shl
retf
dec
and
pop
fdiv
das
aad
arpl
addr16
je
pop
movs
ja
test
das
sub
push
call
icebp
aaa
or
pop
fisubr
mov
cmps
ja
pop
movs
xlat
jno
retf
push
aas
sub
mov
cdq
mov
mul
bound
dec
add
mov
cmp
mov
xor
loopne
loop
retf
nop
lds
cmps
addr16
sbb
pop
mov
push
add
and
aad
sbb
retf
repz
jo
mov
push
je
popa
movs
lea
sbb
sub
sbb
mov
(bad)
leave
das
mov
sbb
mov
movs
mov
outs
mov
rol
push
pop
adc
pop
mov
mov
pop
sub
sbb
mov
pop
sub
mov
pop
mov
das
sub
stos
xor
retf
push
nop
mov
pop
enter
mov
pop
pop
cld
fwait
loop
mov
and
pop
enter
mov
cwde
(bad)
leave
das
dec
mov
mov
sbb
and
lods
lea
sbb
ret
cmp
arpl
outs
mov
arpl
outs
mov
ror
test
mov
pop
pop
mov
loope
popa
shl
das
cmp
mov
sbb
out
dec
mov
mov
pop
mov
mov
sbb
das
dec
outs
ja
pop
lods
lea
aas
sbb
out
dec
dec
mov
mov
pop
jg
sub
js
popa
fild
sub
ja
pop
lods
lea
aas
sbb
out
dec
mov
das
mov
pop
mov
mov
sbb
das
dec
mov
lea
aas
sbb
out
dec
out
das
mov
ror
lods
inc
pop
outs
mov
(bad)
leave
das
mov
out
jbe
pop
lods
lea
aas
sbb
out
dec
retf
mov
pop
mov
mov
ret
mov
shl
pop
movs
lea
sbb
outs
mov
pop
mov
mov
pop
mov
mov
pop
add
xchg
xchg
add
and
mov
pop
enter
mov
add
dec
sub
loope
popa
(bad)
mov
ret
mov
pop
popa
out
mov
(bad)
leave
das
mov
pop
popa
sahf
mov
das
cmp
mov
sbb
das
mov
ror
movs
arpl
outs
mov
pop
mov
pusha
mov
mov
(bad)
leave
das
sbb
fiadd
add
add
sub
push
ds
sti
retf
fwait
hlt
jnp
mov
lods
stos
xor
retf
fisttp
adc
mov
fbld
or
fild
outs
dec
popa
ja
aam
retf
imul
movs
arpl
outs
mov
arpl
outs
mov
pop
mov
mov
fwait
popa
jo
pop
mov
in
add
pop
pop
cld
fwait
loop
jle
mov
push
or
mov
sbb
sub
rol
push
pop
clc
mov
pop
lods
out
mov
lods
xchg
mov
push
jle
push
push
jg
pusha
pop
mov
scas
fisttp
das
mov
sbb
sub
cmp
mov
dec
and
push
jg
and
das
aad
sub
sbb
outs
mov
sbb
push
push
pop
std
arpl
es
aad
or
test
enter
mov
(bad)
test
aas
sbb
out
call
inc
(bad)
leave
das
scas
in
(bad)
retf
cmp
pop
add
fcomi
fldenv
lods
mov
fmul
sub
jle
mov
mov
dec
test
sub
pop
cmp
mov
movs
push
sbb
cli
cmp
retf
enter
or
jo
mov
and
mov
mov
dec
test
sub
xchg
sbb
outs
mov
pop
mov
lods
retf
enter
ja
aam
retf
stos
mov
outs
mov
push
xor
ror
fld
call
inc
or
js
push
or
movs
das
cmp
mov
pop
pusha
cwde
call
cmps
xor
(bad)
bound
das
add
sub
shl
inc
ror
shr
pushf
loopne
sbb
mov
repnz
das
mov
pop
loopne
sbb
mov
ret
mov
pop
loopne
sbb
mov
rcl
das
mov
pop
loopne
sbb
mov
and
das
mov
pop
add
mov
add
ins
lods
dec
xor
jns
loopne
sbb
pop
or
mov
mov
pop
pop
cld
fwait
loop
loopne
sbb
mov
mov
sub
pushf
int
mov
and
dec
pop
add
fbld
jl
mov
mov
mov
mov
movs
lea
sbb
scas
dec
dec
test
mov
pushf
int
mov
push
push
mov
das
xor
ror
iret
pop
pop
cld
fwait
loop
dec
push
pop
mov
mov
ror
in
mov
mov
pop
add
call
pop
mov
mov
mov
inc
mov
push
ins
jg
dec
jl
loope
add
xchg
add
sub
pop
add
das
retf
sub
pop
ja
inc
mov
dec
mov
or
add
int
lock
das
pop
pop
cld
fwait
loop
loop
pop
sub
xor
rcl
mov
mov
mov
push
(bad)
das
mov
sbb
rcl
jmp
push
or
push
(bad)
leave
das
sub
ins
les
jg
sub
adc
imul
je
test
xchg
movs
in
add
mov
int
sub
js
in
dec
add
fsubr
(bad)
mov
push
xor
in
fsub
aad
loop
sub
movs
ja
test
popf
pop
aas
sbb
and
bound
cmps
cmc
cmps
inc
in
cmc
shr
pop
inc
ret
adc
ror
movs
das
cmp
mov
movs
ja
mov
leave
das
inc
dec
jp
mov
fidivr
and
retf
movs
xchg
mov
push
imul
mov
push
imul
mov
push
imul
mov
push
imul
mov
and
mov
mov
pop
mov
sub
cmps
mov
dec
push
pop
xchg
movs
pop
jmp
gs
scas
ficomp
das
mov
push
cmp
ror
lods
dec
pop
xchg
aad
add
and
sahf
push
bound
out
pop
fsub
scas
in
mov
popf
mov
das
mov
push
ja
pusha
push
add
ins
mov
pop
mov
push
push
ja
jb
add
ins
mov
pop
mov
sub
jo
push
(bad)
fdivr
pop
mov
lods
dec
pop
add
ror
aas
sub
mov
fstp
sub
mov
push
ds
xor
and
std
sbb
mov
aam
or
pop
popa
sbb
ja
movs
das
cmp
mov
fsub
cmps
pop
std
sub
mov
movs
cs
pusha
sub
mov
aad
add
and
mov
enter
push
pop
mov
aam
add
and
lods
pop
mov
push
sub
dec
add
lds
popf
mov
mov
shl
and
sub
and
mov
shl
dec
pop
or
cmps
pop
std
imul
push
sub
pop
cld
sub
cmps
lods
push
(bad)
fdivr
pop
mov
(bad)
movs
ror
xlat
sub
cwde
mov
pop
fsub
sub
jo
mov
mov
mov
pop
std
jge
mov
mov
shl
dec
pop
or
cmps
pop
std
adc
mov
mov
mov
fsub
scas
in
mov
pushf
data16
and
das
(bad)
adc
mov
aad
pusha
and
pop
mov
pop
mov
and
mov
mov
pop
mov
mov
movs
ja
inc
inc
in
cmc
shr
dec
push
fstp
movs
lea
sbb
xor
addr16
aad
iret
scas
pop
mov
das
mov
mov
das
mov
push
test
dec
pop
mov
cdq
popf
(bad)
test
dec
and
loop
xchg
mov
retf
xchg
add
mov
lods
ja
stc
movs
lea
sbb
adc
mov
aam
mov
mov
fsubr
shl
pop
int
sub
cmps
mov
ja
pop
cli
mov
pop
sub
xchg
mov
sub
mov
mov
test
add
mov
push
jl
in
mov
inc
mov
movs
sub
lods
push
and
(bad)
movs
ror
xlat
pop
mov
sub
jo
mov
lea
sbb
xlat
sub
mov
(bad)
movs
ror
xlat
pop
popa
cmps
movs
mov
mov
in
fnstsw
popa
mov
rcl
pop
movs
ja
fs
xlat
jno
xchg
dec
jp
mov
mov
mov
mov
repz
ja
data16
pop
movs
mov
mov
pop
mov
and
(bad)
push
rcr
dec
stos
push
mov
shl
sbb
lock
movs
mov
push
ds
push
mov
shl
lea
sbb
xchg
inc
test
mov
fidivr
pop
movs
or
movs
cmp
dec
add
rcr
sbb
inc
push
add
ins
mov
pop
mov
ror
scas
in
sbb
inc
push
add
ins
mov
rcr
rcl
pusha
push
xor
ror
and
jnp
pop
movs
mov
push
fidivr
pop
movs
jecxz
mov
loopne
das
mov
movs
ja
and
pop
xchg
pop
call
xor
mov
scas
fist
sub
test
rcr
push
sub
jg
sbb
rcr
lea
sbb
rcr
xchg
dec
cmp
pop
ror
shl
rcr
cmps
jae
arpl
popa
mov
mov
loopne
add
xchg
movs
arpl
enter
mov
pop
mov
popa
mov
jo
pop
movs
iret
scas
arpl
das
mov
movs
ja
ja
or
jg
call
adc
mov
pop
popa
mov
pop
movs
mov
pop
out
rcr
call
jb
pop
fmul
push
je
pusha
das
jmp
pop
add
dec
sbb
lds
push
je
xchg
loope
leave
movs
pusha
cmp
pop
mov
rcl
push
iret
scas
pop
pop
mov
mov
movs
mov
mov
pop
mov
mov
test
dec
adc
mov
and
(bad)
cdq
pop
cs
mov
fimul
das
mov
xlat
push
rcr
ja
mov
mov
shr
movs
ja
aam
retf
out
push
lock
movs
pusha
mov
pop
mov
loopne
mov
scas
in
sbb
out
inc
pop
add
mov
sbb
rcr
lods
add
pop
add
popa
mov
popa
sub
in
cmps
add
mov
add
dec
test
sub
jl
pop
movs
dec
int
rcl
dec
pop
dec
into
mov
xchg
or
dec
movs
ja
sbb
pop
mov
mov
das
cmp
mov
movs
ja
aad
loopne
sbb
or
das
sub
sub
pop
movs
add
mov
pop
mov
pop
fmul
mov
test
sub
sub
pop
movs
add
and
or
movs
and
rcr
sub
ror
cmps
and
ror
cmps
and
xor
pop
or
jl
ja
dec
sahf
fild
mov
movs
ja
and
cs
movs
and
ror
cs
(bad)
das
aad
loopne
mov
rcr
out
dec
push
fisub
call
mov
test
dec
shl
out
retf
in
sbb
out
inc
pop
add
mov
pop
lock
movs
add
mov
sbb
mov
popa
mov
test
loopne
add
enter
mov
pop
mov
pop
push
dec
and
fcomi
daa
mov
pop
mov
push
ds
popf
mov
das
mov
push
mov
and
mov
mov
pop
add
sub
mov
movs
add
stos
inc
test
data16
icebp
pop
movs
mov
pop
add
sub
std
pop
sub
mov
aad
add
and
std
cmp
stos
or
movs
(bad)
fbld
mov
scas
cwde
pop
cld
es
mov
shl
push
ds
popa
mov
sub
pop
movs
or
mov
mov
das
mov
outs
mov
mov
(bad)
int3
pop
movs
ror
les
sar
scas
ror
cs
jb
movs
mov
cwde
push
pop
movs
cli
(bad)
and
sub
pop
movs
mov
push
into
sub
pop
movs
dec
int
shl
add
ja
pop
mov
mov
(bad)
mov
mov
mov
(bad)
mov
lea
mov
sbb
out
in
or
es
and
scas
fst
pop
mov
mov
shl
movs
cmp
rcl
mov
(bad)
pop
movs
or
lods
(bad)
das
aam
or
mov
movs
ja
inc
pop
add
popa
mov
out
inc
pop
mov
ror
dec
test
sub
shl
fidiv
das
movs
pop
mov
movs
lea
sbb
shl
fidivr
pop
movs
mov
push
fidivr
pop
movs
jecxz
mov
loopne
das
mov
movs
ja
inc
inc
in
cmc
shr
dec
arpl
jns
rcl
daa
addr16
jo
mov
mov
dec
push
pop
add
pop
sbb
pop
mov
push
dec
inc
pop
inc
mov
cli
sub
pop
xor
mov
(bad)
cmc
loope
outs
sbb
loop
xor
mov
(bad)
scas
in
adc
mov
pop
dec
push
pop
arpl
sub
cdq
cmc
lods
mov
mov
std
sub
push
ja
dec
push
or
pop
or
dec
cli
retf
sbb
das
mov
push
inc
cmps
in
dec
push
pop
popa
mov
push
ds
popa
int3
cmp
or
scas
in
mov
push
sbb
das
fnsave
add
ror
vfnmsub213sd
retf
test
jo
aad
or
pop
xchg
and
cld
and
test
pop
or
pop
xchg
mov
mov
std
sub
push
ja
scas
in
retf
test
or
mov
push
ja
sub
jo
bound
cmps
cmc
mov
jg
mov
sbb
push
pop
or
pop
or
push
xchg
pushw
jge
dec
dec
add
in
fstp
call
push
pop
arpl
and
jge
sar
dec
cs
mov
and
das
aad
or
pop
xchg
sti
xchg
dec
jp
mov
fbld
icebp
mov
das
push
mov
dec
inc
pop
pop
mov
div
mov
ret
das
sub
or
mov
pushf
arpl
and
jae
pop
dec
imul
or
mov
lods
imul
add
add
sbb
das
mov
pop
fidivr
mov
int3
movs
pop
mov
push
mov
ja
sub
pop
test
or
jg
xor
das
mov
movs
ja
dec
push
mov
mov
lods
add
mov
inc
in
cmc
shr
pop
test
jg
mov
xor
das
dec
stos
fld
mov
shr
dec
dec
fstp
in
cmp
sub
mov
retf
scas
mov
xor
das
mov
mov
jge
pop
add
and
cmc
and
push
or
mov
shl
inc
ror
fld
pushf
loop
div
add
and
pusha
cmp
pop
mov
xchg
pop
mov
inc
ror
fld
pushf
loop
and
test
aam
add
ror
fisttp
add
fistp
js
pop
cs
dec
dec
fisubr
mov
pop
mov
mov
inc
mov
xchg
dec
jp
mov
fidivr
(bad)
mov
shl
pop
ror
mov
pop
loop
retf
das
enter
pusha
movs
std
daa
dec
sahf
fldcw
mov
movs
std
sub
test
mov
mov
loop
retf
(bad)
data16
cmps
popa
fadd
loopne
mov
mov
xor
jl
test
dec
fisubr
mov
cmps
fadd
xor
loop
faddp
pop
or
jg
pop
add
push
mov
int
sub
jo
add
cmc
shr
lock
pushf
adc
mov
loop
enter
mov
xor
out
pop
cs
or
rcr
mov
pusha
mov
cmps
pop
lods
outs
cmps
in
add
retf
das
retf
(bad)
mov
mov
retf
push
or
mov
std
and
mov
jle
pop
faddp
or
das
xchg
fwait
enter
jo
pop
ror
(bad)
xchg
dec
jp
mov
add
pushf
int
sub
test
mov
rcl
cmps
push
sub
test
ror
shr
cdq
mov
sub
je
pop
test
mov
fld
mov
pop
pusha
test
pop
mov
dec
xchg
xchg
mov
fld
mov
pusha
aad
fdiv
or
sahf
pop
std
sub
mov
out
cmc
and
stos
add
ror
(bad)
xor
dec
repz
mov
xchg
dec
jp
mov
add
sar
and
je
out
mov
popa
mov
sbb
das
stc
push
les
or
sbb
mov
or
das
and
cli
(bad)
enter
mov
pop
shl
cdq
add
add
je
cwde
frstor
repz
jg
sub
out
call
and
fs
and
pusha
das
and
ins
das
sub
shl
mov
cmp
mov
std
sub
pushf
int
mov
push
aas
outs
mov
je
popf
into
pop
mov
inc
ror
repz
xchg
pusha
inc
mov
fcomi
shl
mov
scas
push
sbb
das
mov
fcomi
shl
push
xchg
pop
mov
scas
arpl
ds
push
imul
int
and
jbe
aad
or
pop
or
pop
or
pop
std
clc
sub
add
push
aas
das
sub
and
dec
mov
mov
mov
int
sub
pusha
cmps
push
in
vxorpd
int
sub
test
pop
sbb
cwde
repnz
mov
int
hlt
dec
cs
or
sub
das
sub
test
pop
sbb
cwde
repnz
mov
movs
in
xlat
jno
xchg
dec
dec
xor
sbb
loopne
sbb
loop
pop
pop
and
stos
pusha
retf
sbb
xor
sbb
test
sbb
xor
sbb
retf
sbb
xor
sbb
retf
sbb
xor
sbb
retf
sbb
loop
sbb
loop
cmp
ins
sbb
xor
xchg
mov
test
sbb
xor
sbb
js
sbb
xor
sbb
retf
sbb
mov
ja
ror
mov
mov
retf
sbb
pushf
sbb
outs
mov
retf
sbb
xor
add
retf
sbb
xor
or
movs
retf
sbb
xor
hlt
ret
xor
sbb
xor
or
mov
xchg
sbb
xor
sbb
pop
movs
mov
loopne
fsub
pop
and
lahf
loop
pop
into
loop
bound
retf
sbb
loopne
sbb
retf
sbb
xor
sbb
das
fidivr
hlt
aad
das
xor
push
mov
popa
retf
sbb
xor
sbb
retf
sbb
xor
sbb
push
retf
sbb
xor
sbb
retf
sbb
pop
and
push
nop
retf
sbb
xor
sbb
push
retf
sbb
loop
sbb
das
fidivr
jo
retf
rcl
xor
sbb
popa
retf
sbb
xor
sbb
retf
sbb
xor
sbb
push
retf
sbb
xor
sbb
retf
sbb
adc
retf
sbb
xor
sbb
push
retf
sbb
xor
sbb
pusha
cdq
rcr
dec
jp
mov
fidivr
push
and
dec
push
push
cs
int
sub
cmps
in
jg
dec
ror
retf
sub
je
push
ror
iret
sub
push
fadd
mov
int
(bad)
pushf
int
mov
pop
mov
push
ds
in
add
rcl
push
or
push
movs
ja
sub
cmc
aam
cs
in
mov
mov
add
jecxz
push
mov
pop
mov
push
push
jae
pop
jb
mov
mov
pop
mov
mov
jb
movs
inc
mov
ror
push
xlat
dec
add
mov
dec
xchg
sub
cdq
movs
inc
mov
mov
rcl
push
sbb
bound
inc
cmps
mov
int
sub
je
test
sbb
mov
or
out
pop
mov
push
push
jae
sub
int
scas
in
fst
mov
adc
add
mul
adc
lods
xchg
(bad)
jge
das
push
ds
in
add
fmul
(bad)
movs
int
scas
in
int
call
push
ja
pop
add
je
cwde
frstor
repz
rcr
mov
mov
pop
mov
icebp
ror
dec
pop
inc
out
pop
push
dec
(bad)
mov
add
in
sub
lods
popf
lahf
xor
sub
pop
mov
aad
pusha
mov
movs
ja
fs
add
test
pop
mov
scas
in
cmc
shl
movs
mov
and
loop
mov
ins
mov
es
js
in
cmc
shl
rcl
add
mov
pop
ffreep
push
push
mov
retf
das
sub
retf
push
pusha
jg
mov
das
mov
xchg
xor
ror
or
popf
adc
push
rcr
push
mov
int
movs
cli
inc
xchg
loop
mov
ins
out
das
cdq
push
je
jns
pop
xchg
loop
add
mov
cmps
js
int
sub
xchg
loop
mov
sub
(bad)
xor
neg
mov
lds
mov
cli
lds
mov
in
ja
bound
popa
mov
mov
sbb
push
mov
sub
push
(bad)
ficom
mov
sub
push
and
movs
add
scas
in
pop
out
inc
dec
cmp
loop
or
sbb
das
retf
xchg
sbb
pop
(bad)
out
sbb
inc
lds
mov
xchg
xor
fisttp
or
xor
das
sub
popf
call
fmul
(bad)
mov
ins
out
das
cdq
push
jl
jns
pop
xchg
loop
add
mov
cmps
push
pop
js
data16
in
add
jl
retf
dec
or
pop
sub
sbb
xor
rol
dec
xchg
loop
xchg
sub
iret
sbb
mov
adc
fs
das
scas
in
ffree
jno
add
xor
rol
cmps
lods
popa
or
pop
std
sub
ss
aaa
sub
pop
cmps
push
aas
push
or
mul
pop
fadd
das
cmps
ja
and
mov
xor
das
mov
mov
data16
xor
rcl
mov
pusha
cwde
jmp
lods
outs
cmps
in
add
pop
cs
(bad)
jmp
addr16
out
loopne
(bad)
je
cwde
frstor
mov
or
pop
rcl
cmps
push
lods
outs
cmps
and
ror
movs
das
cmp
mov
(bad)
xchg
sar
mov
push
mov
ja
sub
mov
icebp
ror
dec
call
push
pop
jbe
pushf
or
loope
jb
xor
fidivr
lahf
pop
mov
in
mov
mov
xchg
in
cmp
lds
(bad)
out
pop
inc
mov
cmps
(bad)
fmul
sub
mov
pop
movs
ja
in
mov
(bad)
nop
dec
stos
cmps
movs
ja
mov
pop
add
push
cdq
mov
popf
or
sbb
fimul
mov
pop
or
mov
push
test
das
sub
movs
fadd
into
adc
fild
popf
loop
retf
sub
enter
loopne
or
jg
pop
shr
ror
cmps
push
jb
cmps
data16
std
daa
sbb
inc
ins
mov
pop
mov
(bad)
or
jg
pop
nop
das
mov
pop
ja
push
cmps
ja
dec
push
shr
movs
cmp
(bad)
push
sbb
cld
fwait
loop
fild
test
das
sub
movs
fadd
push
adc
arpl
cmps
ja
lock
pop
add
shl
xor
adc
das
cmp
mov
pop
loopne
jg
mov
pop
or
das
mov
pop
mov
repz
lock
loopne
jg
mov
pop
mov
mov
add
add
icebp
or
jns
sar
cmp
jge
mov
ror
movs
das
cmp
mov
pop
mov
mov
fadd
xor
das
retf
das
pop
cs
aad
pusha
dec
jmp
fadd
loopne
mov
mov
mov
add
pop
cs
retf
das
pop
cs
rcl
cmps
pusha
inc
jmp
cmps
pusha
ins
jmp
add
cmc
shr
pop
ins
mov
cs
ror
aad
pusha
jl
pop
mov
or
mov
std
aas
pop
cs
aad
pusha
push
mov
inc
xlat
jb
push
add
mul
addr16
add
add
xchg
mov
loop
sub
cs
rcl
push
ja
test
mov
mov
add
in
cmc
shr
lock
int3
(bad)
(bad)
(bad)
mov
(bad)
int
lock
das
retf
das
retf
pop
lods
movs
std
daa
dec
inc
das
mov
push
les
cs
rcl
inc
loop
pop
cs
rcl
cmps
pusha
cwde
call
das
test
aad
pusha
test
pop
mov
pusha
mov
scas
dec
fcmovnb
das
mov
shr
push
outs
call
or
mov
fbld
cmp
jg
fidivr
or
mov
pop
pushf
das
mov
stos
add
pop
mov
mov
pop
ja
lods
movs
std
daa
dec
(bad)
shr
push
dec
pop
movs
push
les
loop
retf
pop
mov
std
ror
shr
push
dec
pop
lods
movs
std
ror
shr
push
les
pop
jg
sub
cmps
movs
std
ror
iret
das
mov
add
out
push
add
icebp
or
js
cld
and
ror
popf
cmps
pop
ins
mov
push
int3
das
mov
pop
mov
jne
mov
in
std
add
mov
mov
inc
mov
pop
loop
retf
das
enter
mov
pop
sub
jne
mov
pusha
mov
pusha
mov
cmps
pop
pop
jo
movs
mov
(bad)
cs
je
(bad)
xchg
dec
xchg
into
sbb
sub
add
pop
add
das
sub
sub
shr
lock
js
and
cmc
leave
mov
int
sub
je
jg
mov
pop
mov
jo
js
add
mov
dec
pusha
mov
pop
mov
add
mov
mov
push
adc
out
mov
addr16
aad
xor
sahf
pop
std
or
pushf
pop
sbb
int
pop
mov
push
ds
in
add
rcl
dec
fs
mov
pop
mov
sub
das
mov
sar
js
ja
mov
dec
ins
mov
ror
vpcmpeqq
mov
push
clc
loop
mov
cwde
frstor
repz
ss
mov
cmps
data16
in
mov
jno
or
test
loop
dec
call
and
mov
cdq
movs
push
dec
pop
stos
push
sub
pop
mov
pop
inc
cmp
mov
call
push
adc
pop
mov
cmp
dec
not
jo
mov
adc
jmp
lods
push
dec
pop
add
rcr
addr16
movs
(bad)
retf
mov
imul
push
aas
push
pusha
int
shl
add
add
je
cwde
frstor
mov
pop
mov
ss
fldz
lods
scas
push
out
mov
fistp
ja
and
rcr
mov
data16
or
jg
cs
and
and
push
(bad)
popf
push
mov
and
jo
pop
movs
mov
or
loop
mov
pusha
mov
and
pop
ja
mov
add
mov
movs
jne
sbb
das
mov
movs
ja
and
shl
inc
sbb
imul
shr
pop
mov
sbb
loop
mov
pop
jecxz
bound
ficomp
pop
movs
add
pop
add
mov
dec
mov
das
mov
ror
in
add
sub
or
mov
pushf
loop
sub
inc
rcr
mov
repnz
loop
movs
or
test
(bad)
loop
ja
test
dec
push
pop
or
test
(bad)
lock
ja
pop
movs
jbe
dec
(bad)
int
mov
ss
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
push
pop
or
test
shr
xor
push
mov
stos
(bad)
xchg
push
mov
sbb
mov
mov
shl
js
gs
ins
mov
pop
mov
pop
mov
inc
ror
cmps
data16
push
pop
xor
push
mov
fwait
inc
push
mov
je
pop
movs
pusha
or
pop
mov
sbb
rcr
cwde
push
pop
or
test
inc
imul
mov
movs
es
inc
push
mov
je
pop
movs
pusha
(bad)
in
mov
mov
jne
sub
mov
cmp
or
ror
das
mov
pop
adc
pop
or
xchg
pop
movs
jbe
div
mov
loop
ffreep
es
mov
and
loopne
jg
mov
or
push
jg
mov
xor
das
mov
adc
das
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
imul
xor
pop
ja
pop
movs
jbe
dec
push
int3
das
mov
stos
mov
and
pop
mov
cmp
cmp
stos
push
rcr
ja
mov
mov
and
retf
out
je
pop
movs
pusha
cmp
pop
mov
pop
mov
cmp
or
call
mov
or
xchg
pop
movs
jbe
div
mov
loop
ffreep
push
sbb
scas
push
inc
cmps
das
mov
pop
xor
mov
mov
retf
out
rcr
ffreep
sbb
rcr
fcom
aad
add
lock
loop
fadd
ficomp
mov
and
mov
sbb
das
mov
mov
shr
dec
mov
mov
ja
pop
or
adc
mov
push
retf
das
mov
jle
das
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
ins
mov
fidivr
call
(bad)
pop
sbb
das
mov
mov
inc
icebp
loop
ja
pop
movs
jbe
dec
inc
retf
das
mov
mov
das
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
ins
mov
xor
icebp
loop
ja
mov
or
jg
rcl
or
loop
mov
pop
mov
cmp
cmp
nop
push
ins
mov
movs
ja
adc
mov
and
mov
push
mov
jne
sub
mov
cmp
cmp
stos
push
rcr
ja
ficomp
mov
and
mov
sbb
das
mov
mov
mov
dec
mov
mov
ja
pop
or
adc
mov
jle
das
mov
es
scas
(bad)
mov
movs
jne
mov
pop
dec
stos
mov
fisub
out
pop
mov
pop
arpl
fidiv
pop
movs
mov
fidiv
pop
movs
sti
pop
sub
xor
pop
movs
mov
scas
in
mov
sub
mov
ror
xlat
sbb
das
mov
adc
mov
pop
rcr
addr16
mov
pop
or
jne
sbb
rcr
pusha
mov
fs
add
mov
xor
pop
movs
or
and
das
scas
fptan
rcr
ja
push
movs
jbe
pop
cs
mov
pop
or
stos
pop
movs
jbe
lock
icebp
loop
fadd
out
sbb
(bad)
mov
mov
sbb
das
mov
mov
aad
loop
ja
pop
movs
jbe
dec
push
leave
das
mov
stos
mov
sub
pop
mov
cmp
cmp
nop
push
ins
mov
movs
ja
sbb
das
and
mov
sbb
das
mov
mov
js
loop
ja
pop
movs
jbe
dec
cmps
enter
dec
daa
and
xor
pop
movs
or
mov
movs
jbe
sub
jo
pop
movs
mov
sbb
jne
scas
fldenv
rcr
add
sub
popa
movs
mov
inc
add
dec
add
das
mov
ffreep
mov
stos
add
sub
xchg
sub
fidiv
pop
movs
xchg
fidiv
pop
movs
add
pop
cs
inc
stc
test
das
sub
movs
fadd
out
sbb
mov
pop
fadd
loopne
mov
mov
cmp
jne
and
add
shl
push
aas
stos
push
movs
jne
sub
cmps
ja
dec
add
fistp
ja
dec
bnd
pop
fmul
fidivr
pop
movs
ja
push
movs
jbe
pop
cs
rcl
ror
jg
aas
push
ins
mov
pop
mov
pop
mov
inc
ror
movs
and
ror
push
mov
sbb
das
mov
mov
aad
loop
ja
pop
movs
jbe
dec
sahf
mov
mov
fidiv
das
mov
fdiv
fisttp
in
sbb
rcr
sub
mov
mov
adc
pop
mov
movs
es
inc
push
mov
je
pop
movs
pusha
push
lahf
pop
mov
movs
jne
dec
mov
das
mov
pop
mov
and
(bad)
or
jg
out
jo
pop
movs
fcmovnb
mov
lahf
test
pop
push
dec
and
xor
call
mov
mov
mov
das
mov
pop
adc
pop
fdiv
fisttp
jb
sbb
rcr
adc
pop
or
test
dec
adc
pop
mov
movs
es
inc
imul
rcr
pusha
int3
sahf
pop
mov
stos
add
dec
ret
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
adc
xor
call
mov
mov
cmp
das
mov
fdiv
fnstsw
pusha
sahf
pop
mov
cmp
rcr
fild
test
das
div
or
mov
movs
adc
pop
mov
movs
es
inc
std
test
das
pop
out
je
pop
movs
pusha
fs
pop
mov
aas
mov
dec
pop
mov
mov
pop
adc
pop
fdiv
fisttp
in
sbb
rcr
test
mov
mov
adc
pop
mov
movs
es
inc
push
mov
je
pop
movs
pusha
aam
pop
mov
pop
mov
cmp
or
(bad)
mov
mov
pop
adc
pop
or
xchg
pop
movs
jbe
div
mov
loop
ffreep
add
das
and
retf
out
je
pop
movs
pusha
pushf
popf
pop
mov
mov
jne
sub
mov
cmp
cmp
stos
push
rcr
ja
and
das
and
retf
out
je
pop
movs
pusha
inc
popf
pop
mov
pop
mov
cmp
cmp
stos
push
rcr
ja
jmp
inc
mov
out
je
pop
movs
pusha
sbb
push
add
mov
mov
mov
pop
adc
pop
fdiv
fisttp
fild
mov
adc
mov
adc
(bad)
or
jg
fidiv
movs
fadd
test
das
lock
adc
mov
adc
pop
mov
movs
es
inc
push
mov
je
pop
movs
pusha
in
pop
mov
stos
add
enter
mov
movs
ja
adc
das
and
mov
sbb
das
mov
mov
js
loop
ja
pop
movs
jbe
dec
(bad)
mov
mov
adc
mov
rcr
addr16
scas
das
mov
movs
jbe
div
pusha
repnz
ffreep
sahf
mov
and
mov
sbb
das
mov
mov
js
loop
ja
pop
movs
jbe
dec
data16
mov
test
mov
movs
ja
mov
das
and
js
data16
adc
pop
xor
push
mov
fwait
inc
push
mov
je
pop
movs
pusha
rcr
push
pusha
xchg
fwait
pop
mov
cmp
or
repnz
mov
pop
adc
pop
or
xchg
pop
movs
jbe
div
mov
loop
ffreep
push
pusha
mov
and
retf
out
je
pop
movs
pusha
cwde
fwait
pop
mov
pop
loop
retf
das
enter
loopne
std
daa
dec
push
das
mov
cmps
ja
data16
mov
mov
movs
ja
push
arpl
xchg
push
movs
jbe
test
jbe
pop
out
pusha
rcr
pusha
mov
adc
mov
sbb
movs
jbe
dec
mov
fadd
or
cmps
data16
xchg
pop
mov
add
je
cwde
frstor
mov
push
cmps
push
enter
pop
ror
in
mov
fimul
fstp
and
push
ja
enter
mov
movs
ja
dec
xchg
inc
es
das
sub
movs
fadd
pop
mov
pop
fmul
push
ja
sub
ja
movs
sub
inc
mov
pop
loopne
jge
mov
pop
mov
pop
xor
loop
loopne
jl
mov
xchg
das
enter
and
or
adc
push
pop
ror
imul
mov
aaa
scas
mov
mov
lods
dec
mov
push
mov
ja
sub
shl
arpl
iret
mov
movs
ja
in
add
movs
pop
mov
mov
movs
ja
pop
jb
cmps
addr16
movs
in
add
and
mov
daa
sub
rcr
jns
push
mov
push
pop
movs
ja
adc
mov
sbb
rol
mov
hlt
pop
mov
into
adc
pop
movs
add
mov
mov
stos
aam
ja
pop
out
sub
pop
movs
pusha
cmp
sub
pop
movs
cmp
(bad)
cmps
ins
mov
sub
and
fsub
pop
movs
ja
hlt
push
mov
sub
add
pop
movs
loopne
jbe
mov
dec
outs
mov
sub
sbb
pop
movs
loop
retf
stos
add
ja
lock
push
mov
mov
mov
inc
cdq
pop
mov
pop
mov
sub
movs
fadd
xchg
das
enter
mov
(bad)
dec
movs
ja
fs
out
aad
faddp
jb
mov
xchg
fwait
popa
inc
mov
movs
ja
enter
mov
movs
ja
sub
movs
fadd
outs
mov
pop
out
sbb
pop
movs
ja
xor
add
pop
movs
ja
sub
adc
pop
movs
ja
add
or
jg
bound
pop
fmul
ficom
pop
movs
sub
retf
das
xchg
fwait
popa
sub
add
je
pop
movs
fadd
jbe
mov
sub
add
shl
(bad)
or
jg
out
das
mov
movs
add
and
imul
add
shl
mov
pop
mov
pushf
or
imul
mov
push
mov
ja
sub
shl
pushf
or
das
mov
movs
ja
aam
out
call
pop
pop
mov
mov
movs
ja
dec
mov
add
shl
(bad)
or
jg
pop
loop
retf
das
retf
das
sub
movs
fadd
mov
sbb
fbld
mov
cmps
ja
dec
mov
mov
pop
mov
adc
xor
push
jl
mov
pop
or
xchg
pop
mov
cmps
ja
mov
jb
cmps
addr16
or
jg
cs
ins
mov
pop
add
test
mov
das
mov
pop
or
mov
movs
ja
movs
sub
jnp
loop
mov
xor
pop
movs
ja
aam
loopne
push
pop
mov
imul
das
sbb
mov
aas
jne
pop
ror
movs
pop
mov
sub
movs
fdivr
mov
inc
retf
das
sub
movs
fadd
leave
out
shl
lahf
test
pop
movs
mov
aad
or
mov
ror
mov
sub
das
and
sub
(bad)
adc
pop
movs
mov
pop
or
xchg
pop
mov
mov
pop
mov
movs
cmp
(bad)
jp
mov
pop
out
sub
pop
movs
pusha
xchg
xchg
pop
mov
mov
cmps
pop
push
cmps
addr16
je
cdq
mov
cmc
shr
dec
dec
fstp
rcl
cmp
jp
aad
shl
inc
ror
fild
pushf
mov
pop
test
pusha
sbb
pop
add
(bad)
rcr
rcr
test
jp
mov
sub
ja
mov
inc
sbb
pop
add
(bad)
rcr
fpatan
mov
sbb
pop
add
(bad)
rcr
(bad)
mov
sbb
pop
xchg
cmc
cmps
mov
scas
in
fstp
mov
scas
add
inc
mov
pop
add
xchg
fwait
or
pop
xchg
sub
xlat
xchg
mov
add
fnstsw
or
xchg
pop
mov
sar
pusha
pop
fadd
repnz
das
pop
test
pop
push
jbe
in
lea
mov
push
mov
push
aas
push
(bad)
int3
sub
(bad)
int3
aas
mov
pop
mov
or
movs
add
cwde
cmc
cmps
mov
scas
in
fstp
sub
mov
push
mov
or
das
div
or
loopne
loop
retf
cmp
pop
mov
pop
ror
pop
or
mov
dec
adc
pop
xchg
pop
mov
xchg
dec
jp
mov
mov
cmp
das
repz
aaa
ret
mov
cmps
addr16
or
outs
mov
int3
imul
mov
movs
ja
sub
movs
fadd
xchg
das
dec
mov
dec
es
push
or
mov
push
cmps
or
fs
mov
daa
test
out
inc
iret
pop
movs
ja
lods
mov
pop
mov
pop
mov
inc
ror
cmps
addr16
outs
dec
add
ja
loopne
mov
sub
movs
fsub
pop
or
(bad)
cs
das
test
lods
xchg
pop
mov
lahf
push
sbb
push
dec
pop
mov
movs
ja
aad
pusha
fmul
lods
outs
cmps
and
ror
pusha
sbb
dec
(bad)
mov
out
push
add
sbb
das
mov
pop
fstp
rcl
daa
push
sbb
arpl
fidivr
movs
add
mov
mov
mov
pop
mov
loopne
mov
mov
xor
jge
push
xor
pop
fmul
push
push
ins
mov
pop
mov
pop
mov
inc
ror
movs
and
ror
push
push
cmps
xor
lock
add
shl
mov
sbb
mov
sbb
pop
xor
push
mov
pushf
inc
push
mov
mov
pop
movs
fadd
mov
lahf
sub
mov
sbb
pop
xor
push
mov
mov
das
sbb
mov
mov
(bad)
xor
js
add
(bad)
xor
js
(bad)
mov
aas
dec
es
das
mov
fdiv
fisttp
fild
mov
pop
or
xchg
pop
mov
sbb
rcr
pusha
test
pop
mov
mov
ja
sub
mov
cmp
cmp
stos
push
das
inc
movs
ja
dec
push
mov
daa
dec
dec
mov
das
mov
fdiv
fnsave
rcl
pop
mov
cmp
iret
pop
movs
fild
xchg
das
sub
movs
ffreep
push
imul
cmp
and
or
push
jg
mov
pop
or
xchg
pop
mov
pop
mov
cmp
cmp
stos
push
das
inc
movs
ja
dec
mov
daa
enter
mov
movs
ja
dec
out
das
mov
lods
mov
pop
pusha
pop
xchg
pop
mov
cmp
cmp
stos
push
das
inc
movs
ja
dec
retf
mov
pop
push
ins
mov
movs
ja
dec
es
daa
dec
bound
das
mov
fdiv
fnsave
or
pop
mov
cmp
iret
pop
movs
fild
xchg
das
sub
movs
ffreep
mov
lahf
cwde
inc
mov
mov
pop
movs
fadd
mov
das
and
mov
sbb
das
mov
mov
js
loop
add
shl
mov
sbb
test
js
push
ror
jmp
retf
fimul
(bad)
dec
push
das
and
mov
sbb
das
mov
mov
js
loop
add
shl
mov
push
mov
xor
stos
mov
mov
push
mov
mov
push
mov
pop
mov
movs
es
inc
push
mov
mov
pop
movs
fadd
cs
das
and
pushf
das
mov
fimul
inc
mov
mov
pop
movs
fadd
out
mov
and
mov
sbb
das
mov
mov
js
loop
add
shl
mov
push
mov
xor
stos
mov
mov
push
mov
jecxz
xor
pop
jg
sub
pusha
lock
movs
add
dec
xchg
das
mov
fdiv
fisttp
fild
mov
pop
or
nop
pop
mov
pop
mov
cmp
aas
xchg
js
out
iret
pop
movs
fild
xchg
das
sub
movs
ffreep
push
imul
imul
mov
mov
js
loop
add
shl
mov
pop
mov
xor
loop
add
shl
mov
pop
mov
fidivr
sahf
pop
mov
out
mov
sbb
das
mov
mov
js
loop
add
shl
mov
pop
mov
mov
pop
mov
pop
mov
movs
mov
das
sbb
mov
mov
(bad)
xor
js
add
(bad)
xor
js
pop
mov
aas
enter
mov
movs
ja
dec
dec
mov
daa
retf
das
retf
das
retf
das
mov
retf
mov
movs
ja
data16
das
mov
movs
ja
dec
dec
movs
das
mov
mov
fsub
pop
or
call
movs
das
mov
movs
ja
es
das
xchg
fwait
enter
js
inc
ror
cmps
data16
je
cwde
frstor
movs
pop
mov
aaa
fs
jo
fsubr
mov
movs
ja
xchg
lods
or
cmp
mov
sub
cmp
das
mov
jp
rcr
xor
pop
mov
inc
ror
cmps
addr16
add
pop
fadd
call
rcr
mov
loop
pusha
lods
mov
cmps
and
xor
mov
ja
dec
xchg
cmps
das
mov
pop
add
shl
xor
repz
loopne
jl
mov
pop
mov
pop
fmul
fwait
xchg
enter
mov
movs
ja
sub
movs
fadd
out
mov
sbb
das
mov
(bad)
pop
ror
adc
or
shl
mov
aad
movs
or
lods
push
dec
and
mov
mov
pop
add
shl
mov
add
cmps
ja
lock
or
jg
ret
mov
movs
add
sub
loop
retf
stos
sbb
nop
add
shl
pop
ror
and
pop
mov
mov
movs
ja
mov
ret
jne
pop
pop
cld
xor
pushf
or
mov
ror
and
or
inc
movs
ja
sub
movs
fsub
pop
or
das
retf
bswap
pop
loop
retf
stos
pop
movs
ja
lock
das
test
pop
mov
pop
out
and
pop
movs
pusha
in
mov
xchg
retf
mov
push
mov
ja
sub
ror
dec
push
ins
mov
pop
add
shl
mov
add
popf
or
das
dec
jne
call
sub
movs
fadd
xchg
das
dec
jle
das
mov
cs
inc
dec
pop
mov
dec
mov
push
pop
movs
ja
sub
not
pop
movs
mov
rcl
xchg
mov
pop
mov
jmp
das
mov
movs
ja
div
add
xchg
mov
loopne
jl
mov
pop
or
adc
rcr
mov
and
mov
mov
movs
ja
repz
fcomp
or
test
dec
and
mov
mov
iret
jne
pop
(bad)
or
jg
adc
mov
movs
ja
pop
out
sbb
pop
movs
pusha
(bad)
jbe
ja
data16
mov
rcl
mov
add
jl
mov
mov
mov
lock
(bad)
push
ja
das
and
mov
das
dec
mov
adc
lods
dec
popa
(bad)
pop
out
sbb
pop
movs
pusha
fidiv
ja
fs
arpl
sub
adc
pop
movs
or
xchg
or
rcl
mov
clc
pop
movs
or
lods
shl
inc
ror
cmps
addr16
mov
and
pop
mov
mov
movs
ja
dec
out
das
mov
push
pop
mov
push
mov
mov
sub
pop
movs
pusha
cmp
pop
mov
add
je
cdq
mov
cmc
shr
dec
dec
fstp
rcl
daa
pop
js
neg
ror
xlat
sub
das
sub
jl
aad
pusha
ins
mov
movs
cmc
scas
add
inc
loopne
cld
pop
mov
or
mov
push
mov
dec
jl
inc
mov
and
mov
or
jge
das
sub
pop
fiadd
add
loop
dec
push
mov
cmps
pop
push
cmps
xor
dec
jmp
lock
mov
xor
ror
add
mov
shl
arpl
add
sbb
das
mov
pop
fidivr
lods
mov
mov
fidiv
movs
add
retf
pop
test
pusha
pop
mov
mov
sbb
dec
sbb
shr
pop
js
pop
or
(bad)
jb
mov
retf
pop
lods
(bad)
or
jg
adc
rcr
dec
and
das
mov
addr16
das
mov
ret
mov
add
out
push
add
and
mov
bound
push
jbe
mov
pop
jo
addr16
aas
push
or
sub
mov
push
jno
das
sub
pop
loopne
mov
fld
ins
mov
pop
xchg
mov
sbb
(bad)
sub
das
and
fadd
xor
mov
(bad)
leave
das
dec
mov
dec
ss
pop
mov
push
jbe
pop
push
jbe
pop
push
hlt
mov
mul
dec
cmp
add
mov
loop
retf
das
retf
cs
das
retf
mov
mov
xor
das
sub
mov
ins
mov
pop
or
xor
mov
retf
inc
nop
movs
mov
(bad)
(bad)
jae
das
retf
inc
nop
movs
mov
mov
pop
fiadd
movs
mov
(bad)
div
das
retf
inc
nop
movs
mov
(bad)
out
mov
sub
loop
div
mov
outs
mov
pop
loop
div
mov
outs
mov
pop
loop
div
mov
ins
mov
pop
loop
div
mov
ins
mov
pop
add
mov
fiadd
movs
mov
(bad)
dec
jl
das
retf
inc
nop
movs
mov
(bad)
jp
mov
retf
inc
nop
movs
mov
(bad)
push
mov
retf
inc
nop
movs
mov
(bad)
sbb
sub
xlat
jno
push
add
icebp
or
leave
stc
hlt
pushf
cmps
pop
lods
outs
cmps
in
add
retf
sbb
leave
das
dec
scas
das
mov
pop
loopne
sbb
(bad)
cmp
jl
das
retf
sbb
cli
retf
inc
scas
das
mov
pop
loopne
sbb
scas
add
mov
scas
jl
das
sub
loop
pop
outs
movs
mov
pop
pusha
rol
leave
das
enter
mov
ja
outs
mov
pop
loop
pop
outs
xchg
mov
xchg
mov
test
outs
mov
inc
sbb
or
outs
mov
mov
cli
retf
test
outs
mov
jae
outs
mov
pop
loop
pop
outs
test
loope
pusha
lods
xchg
mov
push
outs
mov
jnp
outs
mov
pop
add
mov
cmps
ja
and
retf
add
mov
pop
loopne
sbb
stos
add
mov
out
jge
das
call
or
mov
fist
and
fidivr
mov
aad
pusha
mov
xor
pop
faddp
and
lahf
cwde
mov
mov
sub
mov
or
or
mov
mov
loop
pop
outs
mov
das
not
int
mov
jl
sub
jo
in
fadd
xor
jg
xchg
mov
pop
loopne
mov
jge
das
add
sub
xor
outs
mov
add
jo
fbld
mov
jg
dec
loop
enter
lock
pop
loopne
jnp
mov
mov
or
sbb
sbb
sbb
imul
mov
pop
mov
sub
jo
in
or
les
loop
retf
mov
test
das
enter
mov
jle
das
add
sub
xor
inc
mov
xor
inc
sbb
mov
retf
das
retf
cmp
lods
das
mov
xchg
cmps
das
mov
imul
(bad)
leave
das
dec
push
lods
das
mov
outs
pop
outs
mov
pop
sub
xor
das
retf
pop
enter
lock
hlt
loop
loopne
jnp
mov
mov
or
sbb
sbb
sbb
imul
mov
xor
push
retf
das
mov
or
enter
mov
jle
das
add
sub
xor
outs
mov
pop
sub
xor
das
enter
mov
pop
mov
xchg
push
ins
mov
pop
loop
dec
sub
pop
or
nop
jae
das
retf
sbb
ja
in
leave
das
retf
push
mov
pop
mov
retf
das
mov
or
ins
mov
jg
das
add
outs
mov
outs
pop
outs
mov
cmp
ins
mov
xor
das
mov
pop
mov
loop
loopne
jp
mov
mov
or
sbb
das
retf
ins
mov
jb
das
mov
pop
loop
enter
mov
sbb
das
retf
sbb
ja
sar
das
enter
mov
pop
mov
retf
sub
fcmovnu
inc
jl
retf
ficom
mov
jg
das
add
sub
shl
pop
ror
mov
sbb
dec
add
mov
pop
mov
retf
test
pop
mov
enter
lock
pop
loopne
jp
mov
mov
or
pop
sub
aas
sbb
ror
pop
ja
xchg
(bad)
leave
das
retf
sbb
sti
leave
das
retf
adc
mov
loopne
mov
pop
fadd
or
ins
mov
js
das
add
sub
fidivr
sbb
sbb
sbb
imul
mov
xor
das
mov
pop
mov
pop
mov
enter
lock
cmc
loop
loopne
jnp
mov
mov
or
pop
sub
sbb
sbb
sbb
imul
mov
xor
inc
mov
cwde
mov
mov
or
ins
jp
mov
or
retf
sub
ret
retf
sbb
ja
in
leave
das
retf
shl
pop
mov
retf
das
mov
or
ins
mov
jns
das
add
jo
pop
ror
mov
sbb
imul
mov
xor
inc
jmp
das
mov
or
sub
mov
or
retf
mov
xor
retf
pop
ja
xchg
(bad)
leave
das
retf
sbb
sti
retf
inc
loopne
mov
pop
mov
retf
das
mov
test
das
enter
mov
pop
pusha
jl
pop
mov
pop
ja
xchg
(bad)
leave
das
retf
sbb
sti
retf
inc
loopne
mov
pop
mov
retf
das
mov
stc
retf
pop
push
ins
mov
pop
pusha
cmp
into
enter
mov
das
pop
outs
mov
das
pop
outs
call
aaa
retf
repz
xor
repz
mov
or
das
mov
pop
sub
aas
sbb
sbb
sbb
dec
add
mov
xor
inc
push
pop
mov
retf
das
mov
test
das
enter
mov
pop
pusha
mov
pop
mov
pop
ja
xchg
(bad)
leave
das
retf
sbb
sti
leave
das
retf
mov
pop
mov
pop
mov
retf
das
mov
or
enter
mov
jp
das
add
sub
mov
xlat
pop
movs
xor
inc
ror
ret
sub
jo
xchg
dec
jp
mov
fist
and
fidivr
mov
aad
pusha
or
xor
pop
faddp
mov
ja
and
leave
das
sub
loop
pop
outs
xor
pop
mov
dec
mov
das
mov
pop
mov
movs
mov
inc
mov
jo
fcomi
ror
xlat
mov
js
retf
das
enter
lock
pop
loopne
jnp
mov
pop
mov
dec
loop
das
mov
pop
loop
pop
outs
mov
das
lock
push
fsub
lock
and
loopne
jns
mov
or
retf
lods
sbb
movs
(bad)
leave
das
and
das
pop
outs
mov
das
pop
outs
int3
(bad)
loope
loopne
mov
mov
pusha
dec
lock
inc
mov
sub
jg
mov
or
retf
adc
sti
retf
pop
loop
retf
das
retf
cs
das
retf
xchg
mov
xor
(bad)
and
das
sub
mov
outs
mov
pop
loop
pop
outs
mov
das
pop
outs
call
dec
retf
cmp
dec
loopne
mov
test
das
enter
mov
inc
mov
add
jo
pop
ror
fiadd
loopne
mov
mov
outs
mov
pop
loopne
jp
mov
xor
mov
(bad)
leave
das
dec
and
mov
aad
loop
retf
popa
mov
mov
outs
mov
pop
arpl
retf
das
enter
mov
sbb
das
retf
sbb
ja
sar
das
enter
mov
xor
inc
mov
xchg
mov
pop
loop
dec
bound
mov
pop
or
mov
mov
retf
sbb
ja
sar
das
enter
mov
xor
das
mov
fcmovnu
inc
jl
retf
ficom
mov
inc
mov
add
outs
mov
movs
loop
pop
outs
mov
das
pop
outs
int3
(bad)
loope
loop
enter
mov
pop
mov
enter
lock
cmc
loop
loopne
jnp
mov
mov
xor
sbb
cmps
xor
outs
pop
outs
mov
pop
sub
xor
das
mov
pop
mov
pop
mov
sbb
mov
pop
loop
dec
es
das
mov
pop
loop
pop
outs
mov
das
pop
outs
int3
(bad)
loope
loop
enter
mov
pop
loop
enter
lock
cmc
jnp
mov
mov
xor
sbb
sbb
sbb
imul
mov
xor
inc
sbb
das
enter
mov
or
sub
mov
or
retf
and
pop
mov
pop
ja
xchg
(bad)
leave
das
retf
sbb
sti
leave
das
retf
retf
mov
pop
mov
retf
das
mov
or
enter
mov
inc
mov
add
sub
xor
outs
mov
pop
sub
xor
das
enter
mov
pop
mov
or
ins
mov
pop
loop
dec
ret
mov
pop
loop
pop
outs
mov
das
pop
outs
call
aaa
enter
mov
xor
mov
mov
pop
mov
mov
pop
sub
xor
cmps
pushf
das
mov
outs
pop
outs
mov
cmp
ins
mov
xor
inc
mov
mov
and
loopne
jg
mov
or
das
mov
pop
sub
aas
sbb
sbb
sbb
dec
add
mov
xor
inc
push
pushf
inc
mov
xchg
mov
pop
loopne
mov
inc
mov
add
outs
mov
outs
pop
outs
mov
pop
sub
xor
das
enter
mov
pop
or
mov
jb
loop
loop
dec
out
xchg
das
mov
pop
pusha
xchg
push
movs
ja
pop
jb
cmps
addr16
fistp
xlat
jno
cwde
frstor
repz
movs
dec
and
das
enter
mov
xor
scas
pop
cs
inc
mov
sub
or
mov
or
mov
pop
ror
dec
cli
xchg
das
mov
pushf
int
movs
pop
mov
sub
push
jl
sub
cs
inc
popf
out
retf
pop
mov
and
or
mov
push
loop
pop
cs
repnz
enter
mov
cs
mov
nop
cmps
in
sub
retf
push
or
mov
mov
loop
loopne
mov
stc
ja
and
mov
push
mov
dec
jo
add
cmc
shr
dec
push
mov
mov
inc
xor
popf
and
mov
sbb
rcr
pusha
jl
pop
mov
data16
xor
pop
mov
sub
ja
frstor
lahf
loop
add
shl
mov
aaa
mov
pop
std
ds
mov
movs
ja
dec
push
nop
das
mov
cs
inc
push
jmp
das
sub
movs
fadd
push
dec
mov
and
or
pop
std
ds
mov
movs
ja
dec
sbb
movs
cs
inc
nop
jmp
pop
movs
fadd
bound
and
ja
aad
loopne
adc
mov
pop
or
mov
mov
mov
in
sahf
loop
add
shl
mov
cmp
mov
ja
sub
std
ds
mov
movs
ja
dec
sub
shr
jmp
pop
movs
fadd
cli
dec
mov
and
ja
aad
loopne
adc
mov
pop
or
mov
mov
mov
mov
mov
mov
cmp
stos
add
and
ja
aad
loopne
adc
mov
pop
or
mov
mov
mov
mov
loop
add
shl
mov
cmp
push
std
ds
mov
movs
ja
dec
mov
mov
xor
mul
pop
loopne
jns
mov
pop
or
das
sbb
ror
pusha
push
ins
mov
pop
loopne
aas
sbb
ror
fwait
scas
mov
pop
or
mov
js
inc
ror
cmps
data16
rcr
(bad)
je
cdq
mov
cmc
shr
test
test
sub
xlat
mov
faddp
fiadd
das
sub
or
dec
movs
ja
fs
sub
div
xlat
jno
push
dec
sub
mov
daa
mov
in
ins
mov
stos
add
sbb
jmp
mov
mov
dec
inc
shr
retf
fisub
pop
movs
fadd
mov
mov
dec
jmp
mov
rcr
scas
sbb
pop
std
ds
mov
movs
ja
dec
mov
das
mov
movs
ja
aad
loopne
adc
mov
pop
or
mov
mov
data16
sub
dec
loopne
adc
mov
pop
or
mov
mov
pop
pop
std
ds
mov
movs
ja
dec
into
popf
das
mov
movs
ja
aad
loopne
adc
mov
pop
or
mov
mov
mov
movs
ja
aad
loopne
adc
mov
pop
or
mov
mov
pop
pop
std
ds
mov
movs
ja
dec
sbb
fcomp
ja
aad
loopne
adc
mov
pop
or
mov
mov
data16
es
loopne
adc
mov
pop
or
mov
mov
pop
push
std
ds
mov
movs
ja
dec
mov
das
mov
movs
ja
aad
loopne
adc
mov
pop
or
mov
mov
and
ror
sbb
push
std
ds
mov
movs
ja
dec
neg
pop
movs
ja
aad
loopne
adc
mov
pop
or
mov
mov
pop
push
std
ds
mov
movs
ja
dec
and
loop
add
shl
mov
ret
add
push
mov
ja
sub
mov
jmp
rcr
dec
aas
sub
pusha
fcomp
or
xchg
das
test
pop
xchg
sub
or
lds
xchg
and
enter
mov
movs
or
test
or
es
push
or
(bad)
movs
pop
mov
and
je
pop
movs
mov
and
mov
mov
movs
ja
scas
fidiv
xchg
pop
cmps
ja
call
jmp
pop
pop
add
shl
xor
stos
pop
cmps
ja
lock
aaa
mov
jecxz
or
ficom
pop
movs
add
and
jo
pop
movs
mov
mov
aaa
mov
inc
jmp
mov
mov
cmps
addr16
xchg
pop
mov
(bad)
sub
rol
das
mov
cli
retf
jno
ins
mov
movs
ja
dec
push
nop
das
mov
pop
mov
cli
retf
inc
push
ins
mov
movs
ja
dec
stos
lahf
das
mov
adc
das
movs
pop
mov
pop
or
mov
mov
and
ror
and
or
aas
jns
mov
pop
or
mov
mov
or
sub
movs
fadd
push
mov
and
jbe
pop
or
mov
mov
pop
fmul
lock
or
jg
mov
or
jg
cs
das
mov
pop
add
shl
mov
cmp
scas
push
ins
mov
movs
ja
dec
xlat
adc
and
pop
mov
sub
movs
or
movs
or
mov
mov
fidiv
pop
movs
xor
ror
cmps
data16
and
mov
mov
sub
xor
loop
add
shl
mov
cmp
xor
popf
loop
add
shl
mov
cmp
pop
movs
ja
lock
cmp
lods
ja
dec
jge
stos
js
ja
and
(bad)
rcr
ja
aad
add
data16
das
dec
push
ja
js
ja
and
push
fcomp
mov
fimul
test
mov
or
jg
lea
mov
movs
ja
dec
es
das
mov
fidiv
movs
fadd
bound
das
sub
pop
fcomp
add
shl
mov
cmp
pop
add
sub
xor
(bad)
jle
mov
sub
jl
pop
movs
xor
inc
ror
cmps
data16
or
jg
out
jl
pop
movs
pusha
inc
mov
mov
pop
or
mov
mov
pop
or
xchg
push
mov
(bad)
div
add
shl
xor
rcr
ss
loopne
loop
retf
pusha
mov
mov
xchg
cdq
das
mov
movs
ja
rep
cmp
mov
lahf
test
and
movs
cmp
(bad)
repnz
mov
and
loopne
xlat
inc
mov
mov
das
stc
mov
aad
movs
xlat
jno
xchg
dec
sub
cmp
aas
mov
loopne
sub
or
cmps
sbb
das
enter
mov
pop
xchg
das
dec
dec
call
movs
ja
pusha
das
pushf
jg
push
cdq
das
mov
dec
mov
stc
rcl
js
dec
movs
in
sub
aas
sbb
outs
mov
fidivr
ficomp
inc
lock
leave
das
dec
push
cdq
das
mov
pop
loopne
add
mov
mov
push
das
mov
pop
mov
arpl
mov
mov
mov
shl
movs
std
daa
dec
xchg
cwde
das
mov
cli
retf
fidivr
rcr
(bad)
mov
lahf
cwde
adc
mov
scas
ficom
sub
out
retf
mov
shl
fimul
pushf
pop
mov
ds
mov
sbb
add
push
mov
aad
call
stc
ror
sbb
aad
into
das
ret
dec
stos
pop
mov
shl
dec
mov
scas
in
xor
xchg
jae
jmp
call
push
pop
jbe
popf
or
rcl
cmps
xor
das
ret
or
mov
movs
ja
test
dec
scas
dec
sbb
or
das
dec
jp
das
mov
pop
std
and
and
jmp
pop
imul
mov
pop
loopne
js
mov
pop
or
mov
mov
(bad)
or
jg
fidivr
rcr
(bad)
jmp
ret
pop
movs
fadd
mov
ja
and
add
shl
mov
call
mov
clc
rcr
pusha
shl
pop
push
cmps
arpl
mov
mov
enter
mov
pop
loopne
js
mov
(bad)
leave
das
dec
(bad)
fwait
das
mov
ror
sbb
(bad)
mov
xchg
sbb
inc
adc
retf
retf
sub
xor
loop
loopne
add
mov
retf
das
sub
movs
add
das
sbb
das
mov
lock
ins
mov
pop
loopne
js
mov
retf
enter
fwait
das
mov
ror
sbb
(bad)
mov
xchg
sbb
push
cmp
retf
retf
sub
xor
loop
loopne
sbb
das
and
rcr
mov
xchg
test
inc
not
pop
loop
retf
das
retf
das
mov
vcomisd
xchg
mov
pop
loop
retf
mov
push
xor
scas
pop
mov
and
or
scas
pop
mov
pop
fadd
loopne
mov
mov
(bad)
std
xchg
test
xchg
adc
movs
std
fwait
dec
mov
mov
mov
pop
ja
adc
xor
mov
movs
xchg
mov
(bad)
or
jg
ss
das
mov
movs
ja
push
pop
mov
xor
jg
out
rcr
rcl
out
pusha
push
scas
pop
mov
(bad)
int
lock
das
pop
cs
retf
das
sbb
imul
ror
cmps
arpl
das
mov
sbb
mul
outs
pop
outs
mov
pop
jns
loopne
add
xor
das
dec
jmp
sub
loopne
fistp
inc
mov
pop
add
pushf
int
mov
pop
pusha
test
pop
mov
xchg
pop
mov
inc
ror
movs
and
ror
in
mov
mov
pop
mov
mov
pop
mov
sub
add
pop
scas
pop
mov
movs
mov
inc
mov
xor
inc
mov
mov
imul
dec
mov
mov
xor
iret
cmp
xor
and
inc
cmp
pop
fmul
push
test
mov
(bad)
add
into
push
ins
mov
pop
loopne
js
mov
pop
test
mov
movs
ja
arpl
cli
das
mov
pop
loop
lock
sbb
call
pop
pop
mov
mov
ror
and
or
shl
xor
fwait
loop
loopne
js
mov
out
retf
pop
mov
and
or
mov
fsubr
das
addr16
in
loop
mov
mov
movs
ja
push
inc
shr
mov
movs
ja
retf
das
enter
mov
mov
and
push
mov
sub
movs
fadd
xor
das
retf
das
dec
xchg
test
mov
pop
mov
xor
pop
loop
pop
outs
mov
scas
pop
mov
mov
mov
and
add
sub
retf
mov
xor
(bad)
mov
das
test
add
mov
mov
mov
repz
pop
js
pop
out
mov
cmps
add
sub
test
pop
mov
fist
xlat
mov
pop
mov
cmp
mov
popf
dec
mov
mov
pop
mov
mov
mov
aam
mov
mov
and
das
mov
pop
xchg
dec
xor
das
mov
sbb
das
mov
sbb
ins
mov
movs
add
sub
loopne
jnp
mov
adc
mov
retf
pop
movs
or
mov
or
mov
pop
or
inc
cmps
ja
dec
mov
dec
and
mov
mov
movs
ja
pop
outs
int3
(bad)
loope
pusha
in
pop
mov
pusha
das
out
and
jo
sti
pop
movs
ja
dec
pop
add
mov
dec
rcr
mov
aad
add
mov
push
rcr
or
movs
rcr
add
xchg
jne
pop
bound
xchg
xor
rcr
or
jg
ficom
movs
mov
shl
xor
imul
mov
ficom
das
sub
or
(bad)
out
retf
push
or
cmps
pop
mov
add
cmp
mov
ror
test
cmp
mov
out
retf
cs
xchg
xor
pop
movs
shr
mov
pop
mov
pop
outs
loopne
loop
pusha
ja
movs
ja
dec
adc
push
pop
ror
mov
push
and
outs
(bad)
das
mov
push
mov
dec
jae
das
mov
pop
mov
test
adc
push
pusha
int3
lods
pop
mov
and
ror
movs
pop
mov
sub
pushf
cmps
and
fimul
mov
adc
retf
sub
das
int3
adc
das
sub
das
mov
movs
imul
mov
stos
adc
adc
iret
sub
das
lods
adc
daa
sub
das
xchg
adc
sti
sub
das
pushf
adc
push
pop
outs
mov
dec
pop
outs
mov
pop
mov
movs
std
aas
dec
out
test
mov
movs
ja
movs
daa
sub
das
cwde
adc
sti
sub
das
adc
test
dec
cwde
das
pop
cs
(bad)
sub
das
enter
mov
sub
fcomp
lods
add
pop
or
mov
movs
ja
dec
xor
pop
movs
ja
popf
pop
mov
sub
loopne
mov
cmps
jbe
pop
or
dec
(bad)
leave
das
dec
xchg
sub
(bad)
das
aad
loop
retf
jl
sbb
and
pop
ja
dec
(bad)
leave
das
dec
mov
push
sub
movs
ja
sub
jns
pop
movs
dec
stos
push
cmps
ja
mov
sbb
das
mov
pop
mov
pop
or
and
retf
sub
(bad)
add
lods
push
pop
mov
fdiv
rol
cs
mov
movs
ja
dec
cmps
sbb
pop
fmul
movs
ja
mov
xor
das
retf
sub
sub
mov
and
movs
pop
mov
push
mov
ja
sub
shl
(bad)
or
jg
jbe
ins
mov
movs
ja
dec
xor
enter
mov
movs
ja
pop
outs
xchg
mov
test
cmps
jbe
pop
pop
std
bswap
pop
loop
enter
mov
push
mov
pop
outs
xchg
mov
test
pop
mov
sub
movs
or
pop
sbb
adc
mov
mov
xor
loop
loop
dec
push
sub
movs
mov
(bad)
push
push
mov
dec
hlt
mov
mov
movs
ja
dec
xchg
pop
ror
pop
movs
ja
pushf
imul
pushf
(bad)
test
pop
loop
enter
mov
push
mov
pop
outs
xchg
mov
test
pop
mov
and
je
pop
movs
mov
pop
addr16
pop
sbb
jg
mov
cmps
jbe
pop
or
shl
xor
stos
push
cmps
ja
lock
and
pop
or
mov
ja
mov
movs
ja
lock
mov
mov
jne
pop
movs
mov
xor
clc
loop
loop
dec
or
scas
add
mov
pop
push
mov
dec
lods
mov
mov
movs
ja
sub
movs
fadd
or
sub
movs
fadd
mov
lahf
cwde
inc
pop
pop
mov
sub
movs
fcom
xchg
ja
outs
mov
pop
or
mov
xor
das
retf
shr
pop
outs
mov
pop
popa
mov
push
cdq
test
rcr
ja
sub
movs
fadd
mov
das
sub
movs
fadd
adc
das
and
mov
sub
movs
fcom
xchg
jae
outs
mov
pop
or
mov
xor
das
retf
test
pop
mov
xchg
jae
outs
mov
pop
popa
add
cmps
jbe
pop
fadd
loopne
mov
mov
pop
cld
bswap
pop
loop
enter
mov
push
mov
pop
outs
mov
shl
pop
mov
data16
pop
movs
mov
popf
push
ds
pop
movs
ja
sub
(bad)
rcr
ja
nop
daa
mov
cdq
and
mov
mov
das
retf
cmp
pop
mov
xchg
jae
outs
mov
pop
popa
xchg
mov
mov
add
pushf
pop
cli
xchg
and
stos
pop
movs
ja
lock
or
jg
jbe
ins
mov
movs
ja
dec
sahf
sub
enter
mov
movs
ja
pop
outs
test
loope
pusha
add
cmps
jbe
pop
pop
std
bswap
pop
loop
enter
mov
pop
mov
pop
outs
test
loope
pusha
push
loopne
mov
data16
pop
movs
mov
popf
push
ds
pop
movs
ja
sub
(bad)
rcr
ja
nop
daa
mov
cdq
and
mov
(bad)
retf
pop
pusha
je
pop
mov
xchg
jnp
outs
mov
pop
popa
mov
mov
add
shl
xchg
ja
and
das
aad
xchg
pop
bound
or
addr16
pushf
pop
mov
pop
or
shl
xor
stos
push
cmps
ja
lock
daa
mov
jecxz
mov
fisubr
movs
add
sub
sub
pop
loop
enter
loopne
enter
pusha
lods
movs
pop
mov
pop
xor
rcl
mov
sub
out
retf
cs
mov
mov
(bad)
arpl
mov
pop
or
inc
nop
ret
pop
out
js
pop
movs
pusha
call
mov
movs
ja
retf
fild
mov
adc
mov
sub
cmps
ja
and
mov
aad
loop
sub
movs
fidivr
(bad)
jns
pop
movs
fcmovnbe
adc
mov
sub
fisub
movs
fadd
xor
loop
ja
push
movs
ja
dec
lea
mov
movs
ja
pop
pop
mov
pop
outs
int3
(bad)
loope
pusha
test
xor
inc
mov
sbb
wrmsr
sbb
das
sub
js
pop
movs
add
xchg
mov
loop
retf
call
mov
mov
sbb
scas
pushf
pop
mov
ror
mov
movs
ja
repz
(bad)
loop
ja
push
movs
ja
dec
mov
das
mov
mov
rcr
loop
enter
mov
movs
ja
jb
mov
sub
ja
push
movs
ja
dec
mov
mov
sbb
inc
movs
xor
enter
mov
pop
loopne
mov
xlat
ja
and
mov
(bad)
outs
pop
mov
sub
arpl
pop
cs
rcl
dec
ja
lods
movs
std
daa
dec
mov
(bad)
je
cdq
cwde
das
cmc
shr
dec
push
fstp
sar
daa
pop
lahf
in
repnz
pop
ror
in
mov
mov
mov
aas
test
pop
mov
cs
mov
outs
mov
pop
or
pop
pop
mov
fwait
outs
pusha
mov
pop
std
and
outs
or
movs
pop
mov
cs
ja
outs
mov
pop
mov
mov
leave
das
aad
ja
mov
cmp
xor
movs
mov
(bad)
out
pop
mov
sub
jo
addr16
mov
pop
stos
movs
mov
(bad)
xchg
pop
mov
fwait
outs
test
loope
std
cmp
data16
fwait
loop
mov
movs
mov
(bad)
mov
mov
fwait
outs
test
loope
std
or
loop
mov
movs
mov
(bad)
pop
pop
mov
dec
push
xor
inc
ror
fld
pushf
mov
mov
pop
std
sub
inc
test
loopne
mov
and
retf
pop
add
pushf
(bad)
leave
das
sub
mov
mov
leave
das
aad
add
test
leave
das
fwait
outs
xchg
mov
sub
mov
mov
leave
das
aad
add
fdivr
retf
outs
test
loope
std
sub
inc
movs
mov
pop
mov
and
retf
pop
add
mov
cmp
pop
cs
rcl
dec
ja
lods
or
mov
dec
pop
add
mov
shl
bound
das
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
or
(bad)
push
pop
mov
sub
inc
adc
outs
lock
sub
ror
shr
pushf
iret
les
das
jb
mov
push
dec
pop
movs
fdiv
aad
arpl
out
sub
mov
mov
pop
mov
retf
inc
mov
movs
ja
imul
mov
mov
data16
mov
lahf
or
das
mov
push
mov
rcr
jb
push
lods
push
mov
test
movs
fdivr
fadd
lods
sub
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
test
das
xor
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
mov
scas
retf
retf
mov
.byte
pop
