ret
lea
jmp
mov
ret
push
mov
add
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
test
je
mov
mov
mov
dec
mov
mov
call
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
cmp
jle
mov
mov
jmp
xchg
mov
mov
mov
xchg
lea
sub
mov
cmp
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
inc
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
xchg
add
mov
mov
mov
lea
mov
cmp
jg
and
jmp
mov
add
mov
mov
mov
push
call
test
je
lea
add
mov
cmp
jg
mov
lea
and
mov
mov
mov
mov
cmp
jge
mov
add
mov
jmp
add
mov
cmp
jge
mov
mov
jmp
inc
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
dec
mov
sub
mov
mov
mov
cmp
jl
mov
mov
jmp
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
xchg
and
mov
mov
mov
mov
push
call
test
jne
lea
add
mov
test
jne
mov
and
mov
mov
mov
mov
mov
mov
pop
ret
xor
jne
imul
xor
pop
jb
bound
xor
xor
add
add
imul
jbe
add
add
push
mov
add
call
mov
pop
ret
nop
add
push
imul
add
add
or
mov
sub
mov
call
mov
mov
mov
jmp
push
mov
mov
add
call
or
xchg
mov
ret
push
mov
add
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
pop
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
push
call
mov
dec
mov
mov
push
call
inc
cmp
jne
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
call
dec
mov
sub
mov
mov
pop
ret
lea
jmp
mov
jmp
mov
push
mov
add
mov
mov
lea
sub
jmp
push
mov
mov
in
mov
add
js
mov
sub
xchg
mov
mov
add
mov
call
mov
mov
mov
mov
sub
call
sub
mov
mov
xor
mov
sub
add
inc
inc
sbb
xor
cmp
jne
call
jne
jmp
add
add
mov
mov
mov
inc
mov
dec
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
cmp
jle
mov
mov
mov
cmp
je
mov
jmp
mov
mov
add
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
mov
push
call
sub
mov
add
mov
mov
mov
mov
lea
sub
jmp
mov
mov
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
dec
mov
mov
mov
mov
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
mov
mov
xchg
mov
mov
jmp
dec
mov
mov
xor
mov
mov
mov
xor
mov
mov
cmp
jne
mov
mov
mov
inc
xor
mov
mov
cmp
jne
mov
mov
and
mov
dec
mov
sub
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
xchg
mov
lea
mov
test
jbe
mov
mov
mov
add
mov
dec
shl
add
mov
mov
cmp
jle
mov
mov
mov
mov
mov
add
mov
call
cmp
jne
mov
mov
mov
mov
add
mov
dec
add
add
mov
mov
movzx
mov
jmp
inc
dec
jne
mov
mov
lea
sub
mov
pop
ret
push
mov
add
mov
mov
cmp
jle
mov
mov
mov
add
mov
add
add
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
mov
add
add
mov
mov
mov
mov
mov
pop
ret
nop
mov
mov
and
ret
mov
push
mov
add
mov
mov
mov
mov
sub
xchg
mov
cmp
jne
mov
mov
add
mov
mov
add
mov
sub
call
sub
mov
mov
add
add
mov
mov
mov
mov
dec
mov
sub
mov
mov
add
add
mov
mov
mov
mov
mov
mov
and
mov
call
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
call
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
mov
mov
xchg
mov
mov
mov
mov
push
push
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
xchg
cmp
jl
mov
and
mov
mov
inc
dec
mov
sub
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
lea
mov
mov
mov
xchg
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
push
mov
mov
call
mov
push
call
test
jne
xchg
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
and
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
push
call
test
jne
mov
mov
mov
mov
lea
and
mov
mov
xchg
mov
mov
push
call
cmp
je
mov
jmp
mov
mov
add
mov
push
push
push
call
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
jmp
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
xchg
mov
mov
mov
sub
mov
test
je
xchg
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
mov
mov
sub
inc
cmp
jne
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
and
mov
test
jne
mov
mov
and
call
mov
mov
xchg
inc
lea
push
lea
push
lea
push
call
test
jne
mov
lea
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
call
sub
xchg
dec
add
call
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
sub
sub
mov
call
mov
mov
and
mov
pop
ret
popa
outs
jns
xor
ss
xor
add
ja
fs
popa
bound
jo
outs
jo
add
ja
sub
jbe
jne
imul
pop
push
add
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
je
test
je
mov
jmp
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
mov
jmp
and
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
add
inc
cmp
jne
call
mov
xchg
mov
cmp
jge
mov
xchg
mov
mov
mov
jmp
lea
add
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
je
lea
and
sub
mov
inc
cmp
jne
dec
mov
sub
mov
mov
call
mov
test
jne
xchg
inc
mov
mov
mov
mov
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
je
mov
lea
and
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
add
lea
push
lea
push
lea
push
call
test
jne
and
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
inc
cmp
jne
mov
push
call
and
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
mov
mov
call
inc
cmp
jne
push
call
mov
mov
mov
mov
and
lea
push
lea
push
lea
push
call
test
jne
mov
mov
mov
mov
mov
call
dec
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
sub
mov
mov
lea
push
lea
push
lea
push
call
test
je
mov
mov
cmp
jge
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
cmp
jne
mov
mov
mov
mov
mov
mov
dec
mov
sub
mov
push
mov
push
call
mov
mov
test
jne
xchg
mov
mov
jmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
sub
mov
mov
add
call
mov
mov
mov
push
push
mov
call
mov
pop
ret
add
fs
push
xor
add
ja
xor
jne
xor
aaa
sub
jae
sub
jbe
outs
jo
jo
aaa
sub
add
add
bound
popa
add
jb
pop
sub
add
outs
cmp
arpl
popa
xor
push
jbe
add
add
jno
imul
add
add
in
add
mov
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
mov
mov
cmp
je
mov
mov
mov
cmp
jbe
mov
mov
mov
and
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
xchg
mov
cmp
je
cmp
je
mov
jmp
mov
mov
add
mov
mov
push
call
test
jne
dec
mov
mov
mov
push
call
test
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
and
jmp
push
mov
mov
in
mov
or
mov
sub
mov
inc
cmp
jne
mov
mov
mov
mov
mov
pop
ret
nop
mov
mov
xchg
mov
mov
add
mov
add
mov
add
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
push
push
call
test
jne
mov
mov
and
call
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
call
dec
mov
mov
dec
mov
sub
mov
call
inc
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
ret
lea
push
mov
add
mov
mov
mov
call
push
push
mov
call
mov
mov
mov
pop
ret
mov
push
mov
add
call
mov
mov
mov
jmp
push
mov
mov
jge
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
call
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
sub
mov
xor
push
call
xor
mov
mov
mov
mov
mov
cmp
je
mov
mov
sub
xchg
mov
pop
ret
nop
push
mov
add
mov
mov
lea
sub
mov
push
mov
push
call
mov
mov
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
cmp
je
mov
cmp
jle
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
push
call
mov
dec
mov
mov
push
call
inc
cmp
jne
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
call
mov
call
test
je
add
cmp
je
mov
jmp
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
and
mov
mov
pop
ret
push
mov
add
call
mov
mov
mov
push
push
mov
sub
push
mov
push
call
mov
mov
mov
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
xor
mov
mov
pop
ret
push
mov
add
mov
mov
sub
xchg
mov
mov
add
mov
call
mov
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
mov
sub
call
sub
mov
mov
xor
mov
call
mov
mov
mov
and
mov
pop
ret
mov
push
mov
add
mov
mov
sub
xchg
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
mov
xor
mov
xor
add
mov
sub
mov
mov
add
add
mov
mov
mov
mov
and
mov
sub
call
sub
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
mov
cmp
jne
call
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
sub
call
sub
mov
call
add
mov
mov
sub
xchg
mov
cmp
je
mov
mov
mov
push
call
mov
dec
mov
mov
push
call
inc
cmp
jne
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
call
call
test
jne
mov
mov
xchg
mov
push
mov
cmp
jne
add
mov
mov
mov
inc
inc
inc
mov
cmp
jne
call
mov
mov
mov
mov
push
mov
cmp
je
mov
lea
call
mov
mov
mov
mov
push
mov
push
mov
push
cmp
jne
mov
mov
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
mov
pop
ret
lea
push
mov
add
mov
mov
sub
xchg
mov
xor
div
cmp
jne
mov
mov
and
xor
mov
add
dec
jmp
mov
mov
mov
xor
mov
sub
inc
cmp
jbe
mov
mov
mov
sub
xchg
mov
xor
cmp
jne
dec
mov
sub
sub
xor
mov
mov
add
xor
mov
mov
mov
call
mov
mov
mov
mov
push
cmp
je
xor
xor
mov
add
pop
xor
mov
cmp
jbe
mov
mov
and
xor
mov
mov
xor
mov
add
jmp
cmp
je
mov
jmp
mov
mov
add
mov
xor
mov
mov
xor
mov
sub
mov
mov
mov
jmp
push
mov
mov
in
mov
add
stc
add
add
ret
mov
push
sbb
ret
ret
jne
gs
repnz
mov
xor
imul
int3
sti
pusha
ror
or
xchg
inc
add
mov
je
inc
add
outs
ret
pop
mov
loopne
imul
mov
mov
push
pop
movs
mov
xchg
mov
ins
stc
sti
les
or
hlt
mov
scas
aad
cli
loop
arpl
mov
loope
cmp
sbb
inc
dec
enter
mov
sar
xchg
in
std
inc
cwde
lock
cmp
out
jge
cmp
lds
ret
jbe
sbb
xor
aad
mov
jmp
push
pop
lods
int3
mov
je
push
pop
dec
adc
retf
mov
xor
leave
pop
outs
out
inc
mov
test
push
mov
ret
js
xor
mov
in
mov
fisttp
nop
cmps
cwde
dec
clc
mov
std
and
jne
jno
nop
inc
(bad)
lods
xor
mov
out
add
pop
fstp
mul
fcomp
int
stos
pop
cmp
dec
sub
loopne
pop
arpl
and
(bad)
out
popf
cwde
dec
mov
dec
sbb
in
jmp
and
mov
lds
mul
mov
add
lock
or
inc
mov
out
outs
mov
(bad)
or
xchg
mov
and
push
test
fisub
jmp
sbb
mov
add
out
loop
adc
mov
dec
inc
inc
into
sub
out
pop
aam
test
xchg
mov
mov
lahf
frstor
mov
inc
add
mov
rol
pop
fdiv
jb
iret
pop
xor
shr
aam
movs
imul
add
mov
sbb
add
popf
mov
mov
jp
xlat
jb
cmps
cmps
ins
adc
mov
movs
xor
adc
pop
iret
sub
sub
popa
dec
sar
cmp
push
cdq
sbb
(bad)
dec
dec
mov
add
cld
loope
or
xor
fsub
fcomp
cmps
shl
ins
dec
jbe
retf
leave
push
cs
cmps
xor
inc
add
mov
mov
sbb
dec
in
mov
lods
xor
mov
fist
movs
mov
mov
push
mov
aaa
es
pop
dec
or
cmp
call
fcomip
(bad)
je
mov
pop
mov
mov
cmp
(bad)
aad
jecxz
inc
add
adc
pop
mov
or
test
mov
outs
clc
push
mov
mov
mov
out
mov
mov
movs
or
sbb
out
push
sbb
shl
dec
xchg
and
ds
sub
cmps
jnp
test
shr
imul
mov
rcl
or
add
xor
mov
jl
xor
push
jbe
push
cmp
in
sbb
inc
add
enter
out
mov
add
rcr
add
mov
addr16
sub
(bad)
push
into
shl
(bad)
lods
dec
and
ss
loop
inc
ss
jecxz
and
popa
loope
(bad)
mov
in
mov
stc
ficom
adc
cmps
jl
aad
xor
enter
fnstenv
(bad)
mov
mov
mov
mov
add
fwait
or
mov
ds
add
into
call
out
add
push
xchg
inc
movs
loop
iret
mov
cmp
or
enter
pop
in
mov
xor
outs
sbb
cdq
in
shl
sub
cld
icebp
dec
xor
jle
pop
fwait
and
repnz
xchg
mov
xchg
mov
jmp
push
sub
shl
bound
dec
iret
inc
bound
(bad)
push
jnp
xchg
cld
cmps
jb
ja
jo
inc
dec
sar
je
push
push
adc
jbe
daa
dec
test
cs
scas
clc
jno
sub
dec
pop
add
sar
scas
inc
adc
xchg
xchg
in
(bad)
jnp
cs
inc
addr16
(bad)
out
fcomp
(bad)
jl
iret
xor
int
cmp
into
mov
sar
mov
inc
add
pusha
sub
mov
fisubr
pop
adc
loop
jne
mov
mov
xor
and
call
repnz
mov
inc
add
test
les
popa
cmp
in
mov
dec
xchg
and
xor
lea
pusha
nop
adc
pushf
gs
les
ror
cwde
mov
add
push
(bad)
or
xchg
in
sub
aam
sub
call
mov
addr16
mov
mov
adc
and
pop
add
jo
sbb
xchg
pop
das
into
in
dec
dec
mov
and
shr
lea
push
retf
div
fcmove
out
push
sar
push
jp
xchg
popa
mov
pop
sbb
int3
and
jmp
jmp
cmps
inc
add
sbb
inc
mov
add
mov
stos
xchg
out
aad
cmp
xor
repz
mov
inc
add
push
repnz
js
inc
rol
xchg
jge
inc
rol
movs
sar
pop
inc
add
inc
add
and
inc
rol
push
jns
inc
rol
pop
sbb
stc
into
jge
xchg
fadd
inc
add
sub
add
loope
push
inc
rol
repnz
inc
rol
add
arpl
inc
add
cmp
push
imul
inc
rol
clc
mov
rol
dec
cmp
and
inc
add
inc
add
call
das
aaa
aam
mov
inc
rol
test
adc
dec
dec
mov
mov
fs
sbb
mov
aaa
mov
movs
mov
fist
lods
test
(bad)
rol
lock
pushf
xor
xor
push
inc
inc
cmp
inc
ss
mov
mov
inc
jecxz
pop
jle
sub
mov
cmps
sub
jp
adc
aaa
and
enter
adc
das
test
xchg
lahf
add
xchg
dec
and
mov
fldcw
and
retf
add
cmp
stos
sar
cmp
xor
jge
mul
jb
mov
arpl
inc
fucomi
dec
arpl
pop
aas
(bad)
push
sbb
dec
mov
or
stc
stos
mov
pop
push
mov
sbb
lock
or
and
dec
cmp
jnp
fisttp
pop
(bad)
sbb
xor
test
adc
mov
inc
fdivrp
pop
dec
adc
(bad)
fiadd
mov
push
shl
and
scas
and
je
fs
test
and
mov
push
sahf
loopne
inc
add
(bad)
push
mov
call
test
mov
add
cmp
and
mov
inc
aaa
sub
outs
dec
std
pop
push
mov
aam
inc
add
inc
inc
and
pop
cdq
dec
push
shl
dec
xchg
icebp
pop
popf
push
arpl
add
mov
add
add
xchg
add
js
std
pop
pushf
mov
add
(bad)
mov
loopne
dec
mov
mov
aam
cld
add
aaa
nop
(bad)
pop
adc
mov
add
xchg
fnstcw
rol
(bad)
mov
adc
call
mov
loop
adc
jmp
rol
test
inc
add
add
jae
test
xor
mov
test
mov
add
aas
lea
fadd
add
xchg
sub
adc
inc
add
adc
adc
aaa
data16
mov
add
movaps
cdq
jl
ror
mov
add
cmp
popf
popa
xor
icebp
aam
dec
repnz
jns
jae
pop
hlt
dec
retf
inc
add
adc
inc
add
mov
add
fadd
sub
out
mov
in
inc
add
hlt
mov
add
js
ss
mov
and
out
in
mov
pop
or
mov
test
mov
mov
add
out
mov
mov
mov
cmp
popa
movs
cld
mov
add
mov
jnp
mov
inc
add
sbb
sahf
ret
cmp
pop
(bad)
enter
in
int
adc
mov
sub
add
and
mov
or
xchg
lds
in
inc
add
enter
push
adc
xchg
push
mov
xchg
xor
repz
ret
mov
clc
xchg
sbb
outs
ss
mov
adc
rol
mov
mov
test
jle
cmp
mov
add
fimul
fstp
mov
lods
ja
push
pop
pop
inc
add
(bad)
sub
cmp
inc
add
je
inc
add
sbb
lea
pop
mov
leave
movs
scas
and
inc
add
sahf
fwait
jmp
jbe
mov
fld
xor
bound
les
fld
sbb
mov
push
les
inc
push
inc
mov
cmp
jle
addr16
ins
xor
jp
(bad)
mov
int3
jge
add
sbb
sbb
xlat
mov
jmp
lock
add
jmp
fimul
mov
jp
popa
mov
in
mov
popf
sbb
pop
mov
cmps
(bad)
mov
cwde
out
bound
and
mov
mov
(bad)
sbb
pop
std
pop
jnp
cs
enter
pop
and
imul
cld
cmc
cld
mov
mov
and
push
stc
sub
sub
ds
fst
mov
jecxz
jmp
scas
mov
cmp
push
dec
aaa
pop
lock
cmp
js
aaa
inc
and
stos
ror
imul
mov
imul
mov
dec
dec
or
daa
jno
retf
jne
loope
xchg
out
js
xor
mov
inc
jle
pushf
adc
xchg
xchg
or
loopne
dec
cmc
call
jecxz
dec
push
out
fsub
rcr
sbb
adc
out
aad
popf
pop
dec
ja
addr16
sahf
ds
movs
sbb
xchg
ror
mov
dec
addr16
cmp
shr
shl
cmp
sub
dec
and
inc
imul
je
cmp
push
das
mov
inc
add
adc
dec
cld
test
mov
in
sbb
xchg
pop
fs
repz
fwait
gs
je
pop
add
jmp
aad
sti
xchg
pop
xor
inc
push
xor
popf
(bad)
sub
or
push
and
cdq
test
fsub
xchg
add
sub
sbb
fidiv
xlat
cmp
mov
mov
pop
in
cmc
push
pop
out
xor
or
jae
sbb
xor
fmul
retf
pusha
stc
jns
retfw
push
and
icebp
in
(bad)
inc
fst
fs
movs
std
mov
adc
aam
ficom
jge
call
lock
imul
sbb
imul
int
jp
test
ds
stos
jmp
pop
repz
xchg
shl
adc
dec
xlat
cs
mov
xchg
cmova
pushf
test
add
or
mov
mov
pop
cli
push
mov
jl
and
dec
inc
scas
lea
jb
out
ss
imul
add
popf
xchg
lock
sbb
aaa
cwde
inc
push
add
pushf
pop
inc
fst
xchg
cmp
aad
add
sbb
les
lods
(bad)
jl
frstor
fsubr
xor
mov
and
out
xchg
xor
ins
and
fist
movs
mov
(bad)
ficomp
shr
ja
ds
dec
mov
push
in
dec
nop
out
js
inc
aas
mov
jmp
mov
add
mov
mov
sub
fstp
pusha
ins
or
popf
sub
fadd
jnp
push
or
inc
jns
xor
dec
add
popf
inc
loop
sbb
fldenv
push
and
dec
push
add
adc
pop
and
push
pop
adc
outs
jo
stc
mov
das
gs
lock
fsubr
pusha
jbe
jecxz
aas
xor
mov
test
add
sub
mul
jecxz
sbb
loop
enter
sub
push
pop
aas
add
push
jo
cmc
(bad)
popf
popa
adc
retf
xlat
add
addr16
add
or
shr
mov
jmp
movs
push
jae
mov
aad
and
ret
cli
or
repz
ret
cmc
mov
out
je
cmp
dec
in
imul
(bad)
xor
jl
jge
aaa
inc
fcmovnbe
sbb
cs
dec
xchg
iret
jns
loopne
push
ret
test
sti
imul
imul
jecxz
retf
gs
xchg
movs
pop
xor
mov
add
xchg
in
push
jge
pushf
jmp
adc
add
(bad)
push
xor
or
mov
sub
frstor
mov
aas
fisubr
push
sub
shl
pop
sub
lock
adc
pop
mov
xor
adc
repz
je
push
dec
push
sbb
pop
int3
shl
push
add
aad
mov
sbb
retf
mov
jb
std
(bad)
sub
or
jae
inc
add
add
mov
add
push
inc
mov
iret
mov
mov
mov
add
repnz
dec
inc
add
jae
mov
add
aad
stc
ins
call
loope
jle
inc
add
mov
inc
add
pusha
(bad)
push
lea
mov
inc
test
inc
pop
pop
(bad)
inc
test
jns
(bad)
adc
add
jp
je
jb
cmps
xor
ss
(bad)
pop
sub
or
mov
inc
lods
push
ins
xchg
jge
sbb
inc
xor
mov
add
add
inc
add
fist
outs
and
pop
adc
pop
push
cmp
aam
jo
sahf
scas
mov
sub
add
ret
jns
cmp
pop
add
push
or
ror
dec
adc
mov
and
mov
imul
xchg
xchg
and
sub
mov
push
cmps
fisubr
leave
and
inc
(bad)
test
arpl
push
in
jg
xchg
or
dec
mov
loop
mov
sub
mov
inc
pop
hlt
inc
rol
mov
psubsb
cmps
sbb
xor
and
inc
add
bound
pop
add
inc
add
call
mov
push
rcr
sbb
push
xchg
push
mov
dec
scas
aas
data16
cwde
mov
mov
push
inc
sbb
inc
add
ins
inc
inc
add
pop
js
add
xlat
xchg
lods
in
push
mov
call
add
aas
(bad)
test
and
cmp
sub
mov
sub
fwait
mov
lds
mov
xor
pop
stc
inc
and
loope
aaa
xchg
dec
cld
scas
dec
mov
add
dec
in
push
jl
mov
add
xlat
inc
fcmovnbe
nop
add
pop
ror
inc
add
xchg
or
inc
out
mov
mov
out
sbb
inc
add
jae
mov
dec
inc
add
sbb
cs
or
push
aaa
xlat
inc
loope
into
sub
adc
shr
inc
mov
stos
push
ja
mov
cmp
mov
inc
add
inc
add
mov
add
add
add
sub
ss
or
hlt
mov
xchg
or
in
push
outs
jnp
add
popf
push
test
test
mov
stos
test
or
xor
sti
fcomip
js
inc
dec
test
pop
add
ret
test
push
test
jae
imul
pop
outs
sub
dec
push
inc
je
outs
cmc
out
jp
jle
inc
add
mov
mov
mov
mov
enter
loope
sbb
xchg
jbe
loopne
stos
mov
sbb
sbb
(bad)
mov
mul
sbb
inc
xlat
push
pop
sub
lock
push
cmps
rol
inc
addr16
mov
outs
adc
(bad)
(bad)
mov
inc
rcr
adc
dec
jl
das
sti
jne
ret
mov
repz
lods
mov
fs
int
jg
pop
jne
jb
push
in
jp
pop
lods
test
div
jp
sbb
cwde
inc
rep
inc
fmul
sbb
jmp
push
mov
dec
push
xor
adc
jge
jecxz
add
and
es
add
add
stc
inc
add
call
sbb
je
sub
or
out
xor
ret
push
(bad)
dec
das
push
jg
cmc
cmp
ficomp
ds
or
or
outs
or
mov
inc
mov
iret
mov
(bad)
adc
or
retf
xchg
fild
cmc
sbb
test
add
jbe
push
int
icebp
or
push
(bad)
fwait
cmp
iret
loope
outs
out
mov
and
repnz
sbb
xchg
not
dec
fsub
les
inc
into
jmp
loope
jne
push
jmp
icebp
mov
push
cmp
mov
dec
sbb
jmp
and
cmp
dec
shl
inc
dec
cmc
enter
mov
retf
push
dec
ror
dec
and
push
fsubp
dec
mov
cld
jl
jg
lock
cs
add
fstp
or
jns
dec
pusha
mov
mov
mov
jmp
jge
(bad)
std
xchg
inc
cmp
mov
push
pop
pop
pusha
dec
mov
inc
add
sbb
add
lds
xchg
arpl
sahf
std
sub
xchg
cmp
cmp
imul
in
fadd
(bad)
push
mov
dec
xlat
repz
lds
fstp
imul
jg
jne
retfw
pop
out
mov
mov
sub
lods
rcr
sbb
inc
aas
(bad)
fcomp
mov
fwait
cmps
inc
and
mov
mov
xor
add
jo
inc
add
pop
movs
aaa
mov
mov
adc
mov
mov
inc
inc
add
pusha
jmp
daa
retf
lock
fimul
inc
test
lea
push
mov
add
mov
inc
cmp
jne
mov
mov
mov
mov
lea
sub
mov
push
call
test
je
mov
xchg
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
and
test
jne
mov
mov
add
mov
mov
mov
sub
mov
mov
lea
push
lea
push
lea
push
call
test
jne
dec
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
inc
cmp
jle
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
mov
push
mov
push
call
test
jne
mov
xchg
mov
mov
and
add
add
xchg
lea
push
lea
push
lea
push
call
test
je
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
inc
mov
lea
push
lea
push
lea
push
call
test
je
mov
mov
and
dec
mov
mov
call
lea
push
lea
push
lea
push
call
test
jne
mov
mov
sub
xchg
mov
mov
mov
mov
push
call
mov
cmp
jle
mov
mov
jmp
mov
mov
and
mov
lea
push
lea
push
lea
push
call
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
push
call
mov
mov
and
push
call
sub
mov
inc
cmp
jle
mov
mov
jmp
add
mov
inc
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
pop
ret
add
add
gs
data16
push
add
add
sub
imul
xor
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
dec
mov
sub
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
call
test
je
xchg
mov
mov
mov
xchg
push
push
push
call
mov
and
mov
mov
mov
call
mov
mov
and
push
push
call
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
xchg
mov
push
call
add
mov
sub
mov
lea
mov
push
push
push
call
test
je
mov
mov
mov
mov
inc
mov
cmp
jge
lea
sub
jmp
mov
mov
mov
add
mov
mov
cmp
jg
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
inc
mov
mov
call
dec
mov
sub
mov
inc
cmp
jne
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
sub
mov
add
mov
xchg
mov
mov
mov
push
call
test
je
mov
xchg
mov
cmp
jle
sub
jmp
mov
mov
call
lea
mov
mov
cmp
jge
sub
mov
and
sub
xchg
mov
mov
jmp
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
inc
lea
mov
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
and
mov
mov
mov
xchg
mov
mov
mov
and
push
mov
call
mov
mov
mov
push
call
test
jne
mov
mov
mov
and
mov
inc
mov
cmp
jg
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
lea
sub
mov
mov
mov
call
mov
xchg
mov
mov
mov
push
call
test
je
sub
mov
mov
mov
and
call
mov
mov
xchg
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
mov
push
call
call
call
mov
mov
mov
lea
sub
mov
mov
sub
call
sub
mov
mov
push
call
sub
mov
add
mov
mov
sub
xchg
mov
pop
ret
add
ins
and
jne
jae
imul
add
add
bound
xor
arpl
jno
add
add
outs
jbe
jno
outs
popa
xor
ins
add
add
add
and
ret
sub
stc
mov
aaa
scas
add
add
mov
in
loop
iret
aam
cmp
add
in
imul
mov
add
add
loop
aas
ss
ss
mov
fs
fcomp
add
add
add
(bad)
cmp
sbb
cmp
ficomp
push
mov
add
add
jle
add
fcmovnb
mov
add
jnp
add
add
add
jg
sbb
mov
mov
add
fwait
xor
add
add
cmps
add
add
add
pushf
xor
daa
add
ja
mov
sub
add
ja
in
mov
add
ret
jo
sub
fucomp
adc
mov
mov
loopne
mov
hlt
lods
mov
lds
add
add
xor
add
ins
sub
xchg
add
dec
mov
add
scas
repnz
dec
dec
jno
xor
push
pop
jg
test
add
jmp
fs
xchg
jecxz
add
test
add
pop
scas
dec
push
cdq
in
mov
icebp
cmps
add
push
adc
add
pusha
sub
retf
ret
dec
ds
sahf
dec
add
fsubr
add
add
xchg
jo
cmp
pop
sub
(bad)
mov
rol
add
neg
xor
dec
push
mov
lods
jae
add
add
add
ret
add
divps
pop
cmps
std
xor
sbb
pop
inc
hlt
add
add
cmps
add
and
add
xor
cs
add
push
add
lods
push
mov
cmc
xchg
jp
inc
popa
mov
fdiv
add
add
push
(bad)
add
sbb
jecxz
jb
and
add
add
cmp
lea
cli
mov
les
mov
mov
add
add
mov
add
aaa
out
test
inc
lods
fdiv
add
xchg
xor
aad
inc
add
add
icebp
mov
cmps
add
add
shufps
fld
add
push
xchg
push
push
add
add
add
(bad)
sar
lods
mov
rcl
add
repnz
retf
iret
inc
jp
add
and
push
fidiv
mov
and
push
arpl
add
add
out
int3
lds
add
sbb
in
stos
jp
push
push
add
cmp
jl
jbe
push
xchg
es
mov
sub
sub
stos
cld
mov
loop
add
aam
add
clc
mov
add
sbb
jle
cwde
int
add
add
add
in
add
cli
mov
jg
mov
out
add
add
scas
fstp
in
jnp
and
sub
add
call
cld
add
add
aaa
and
fld
add
adc
add
add
add
add
add
add
mov
push
loop
add
mov
das
pop
dec
je
and
add
sub
add
ror
ss
nop
ret
jmp
ins
inc
or
or
push
mov
cmc
inc
cmp
dec
add
adc
(bad)
test
stc
cmps
cmps
adc
div
add
add
ss
mov
imul
sub
leave
test
test
out
mov
add
data16
stos
and
cmp
mov
add
arpl
add
add
enter
mov
and
mov
add
add
and
add
and
mov
jp
xlat
ret
add
sub
add
add
mov
fild
pop
add
add
aaa
out
inc
add
(bad)
jg
add
inc
add
add
mov
add
dec
jecxz
xor
mov
jmp
repz
ss
add
retf
dec
(bad)
in
xor
stos
add
add
push
push
mov
dec
add
mov
cld
pop
or
xchg
mov
clc
addr16
cli
inc
mov
adc
add
ja
imul
cs
call
pop
inc
mov
fld
add
jb
add
(bad)
push
inc
jbe
add
and
xor
in
jl
das
push
sub
ins
add
into
jp
cmp
add
xor
push
add
pop
jmp
inc
es
mov
add
xor
jnp
add
lds
add
ins
add
xchg
out
dec
gs
mov
cmp
std
or
stos
rol
leave
cmp
add
call
aad
test
jbe
add
dec
xor
mov
lock
add
add
sbb
ds
cmps
add
js
adc
aaa
out
add
sbb
and
sbb
sbb
xchg
xor
add
sbb
stos
adc
out
dec
pop
sub
sbb
mov
inc
pop
mov
fcom
dec
add
add
mov
in
sbb
add
add
add
cmps
fs
ins
sbb
add
xor
std
mov
test
data16
adc
xchg
add
jmp
add
jb
xor
dec
add
add
addr16
hlt
add
add
out
ds
add
add
in
lock
enter
mov
add
push
pop
add
fwait
nop
in
outs
jp
adc
mov
out
shr
sub
in
add
and
push
add
add
push
jecxz
add
loopne
add
cmp
cs
jge
add
add
add
add
add
push
scas
and
pop
add
add
add
pushf
add
add
push
verw
pop
sahf
pop
dec
setb
mov
stos
out
cmovnp
add
add
add
movs
in
xchg
in
lods
add
add
xor
add
in
xchg
cmp
jge
cld
inc
cmp
add
add
pop
adc
add
add
add
sub
add
add
sbb
stos
jle
add
push
retf
nop
mov
addr16
push
fwait
stos
add
push
aam
stos
or
cmp
mov
or
jns
mov
out
add
add
das
jge
pop
or
test
jno
sbb
repnz
inc
rol
xor
and
mov
add
mov
(bad)
cld
neg
cmp
imul
mov
jno
adc
add
fcmovb
add
das
add
in
fistp
add
jmp
into
mov
push
aad
(bad)
push
xor
jno
mov
add
add
sub
add
adc
mov
add
add
ret
add
cmc
movs
mov
mov
inc
mov
xor
mov
mov
aas
sub
cmovg
leave
stc
outs
repnz
add
nop
retf
cmp
push
les
mov
stc
jecxz
add
loope
push
stos
ds
cmp
add
add
stc
jmp
dec
inc
pushf
jge
push
dec
cmp
add
pop
(bad)
mov
retf
(bad)
rol
xchg
adc
xchg
ficom
call
push
add
dec
hlt
cwde
movs
stos
add
pop
fadd
add
inc
ja
mov
add
jle
bnd
(bad)
call
add
jne
inc
popf
mov
dec
loop
lock
inc
adc
add
xor
add
ins
nop
jle
add
js
pop
add
add
add
pop
pop
test
leave
mov
cmp
add
movs
das
out
add
xor
add
nop
add
xchg
add
sar
add
cli
adc
lahf
sbb
rol
add
add
shr
add
add
(bad)
push
add
cli
and
nop
mov
scas
shl
push
les
aad
rol
add
add
xor
outs
mov
pop
inc
add
or
xchg
sbb
stos
sub
add
dec
add
sbb
mov
retf
add
mov
push
das
imul
sbb
imul
gs
jo
sti
push
add
leave
int3
dec
pop
dec
add
xchg
cmp
and
mov
add
mov
pop
xor
jae
add
add
movs
jo
add
adc
adc
xchg
fbld
pop
mov
sahf
jae
mov
jge
(bad)
lea
test
mov
add
mov
add
add
mov
add
mov
add
mov
stos
add
add
dec
sbb
cmp
xchg
add
add
ja
dec
jp
xchg
add
adc
test
xchg
xlat
and
add
add
cmp
pop
push
test
mov
(bad)
add
add
loop
and
movs
call
add
add
add
loope
inc
fnstsw
push
movs
dec
push
xchg
add
add
inc
fsubr
call
cmp
xor
test
add
add
add
mov
xchg
std
pop
adc
arpl
jo
add
add
mov
mov
ins
jecxz
add
cmps
mov
or
and
in
add
add
add
ins
sub
mov
int
loope
add
in
adc
out
stos
add
and
aaa
or
add
dec
mov
sbb
outs
mov
cld
stc
mov
cmp
clc
pop
add
add
add
add
add
sbb
mov
pop
jge
add
push
xchg
xchg
add
add
mov
add
(bad)
dec
mov
lea
clc
sar
ins
ins
outs
jl
movs
cli
outs
or
movs
popa
daa
jno
test
add
add
add
(bad)
call
mov
mov
ror
jg
add
push
add
out
call
sbb
fistp
fld
cmp
inc
scas
pushf
push
fist
jb
popf
ss
add
xchg
xchg
pop
and
jo
add
ins
out
mov
sub
add
mov
lock
(bad)
push
push
jmp
sbb
adc
fadd
add
add
int3
pop
mov
add
icebp
and
repz
mov
xchg
es
inc
add
add
mov
jae
push
nop
mov
data16
mov
add
add
add
outs
push
cmp
enter
movs
add
add
add
adc
add
push
leave
out
popa
xor
add
cmp
add
add
add
push
add
add
add
mov
jae
jo
imul
add
mov
add
(bad)
xor
and
int3
add
xor
add
add
shl
(bad)
arpl
jp
test
inc
add
or
add
dec
push
call
dec
jecxz
inc
add
mov
(bad)
and
and
add
sbb
in
lods
test
mov
sbb
add
add
inc
add
add
adc
pop
and
xchg
add
cdq
add
stos
nop
addr16
cs
and
int
int
js
sbb
dec
cmps
add
stc
scas
fnstcw
add
(bad)
les
jo
aas
inc
sbb
and
add
add
loope
add
mov
add
add
mov
add
ftst
cs
push
push
sahf
add
add
jmp
mov
nop
in
mov
xchg
nop
dec
pushf
add
test
sub
std
loopne
add
sub
pop
jno
bound
xor
add
cmp
rcr
add
add
clc
bound
mov
addr16
push
ds
lea
add
mov
add
jge
mov
out
xchg
push
pop
mov
add
add
and
dec
dec
mov
add
in
xchg
and
xor
add
fld
add
add
add
inc
add
pop
inc
and
add
xchg
pop
inc
add
pop
add
add
pop
add
cmps
out
nop
out
xchg
fbld
rcr
dec
add
lock
ins
mov
hlt
pop
add
add
push
add
add
test
add
add
and
dec
mov
daa
std
pop
xor
ret
xor
adc
add
adc
mov
xor
sahf
out
mov
add
aam
loop
xchg
repnz
add
addr16
push
add
adc
jl
mov
add
mov
inc
add
and
add
add
iret
fs
pop
add
jb
add
lock
data16
xlat
xchg
aad
sahf
sub
sbb
add
add
sbb
add
sbb
push
data16
cwde
call
(bad)
pop
mov
and
add
test
mov
pusha
dec
imul
imul
xor
ins
mov
xor
mov
or
push
inc
pop
xchg
int3
jecxz
adc
sar
xlat
add
movs
bound
inc
add
fild
cmp
enter
out
fadd
add
and
xor
xchg
adc
add
lock
mov
aas
push
jbe
nop
pop
dec
push
pop
mov
lea
pop
sahf
cdq
xchg
js
add
mov
add
add
add
ss
ret
mov
loopne
or
mov
dec
add
xor
cmp
dec
jg
dec
cmove
add
sbb
jg
test
sbb
add
mov
test
push
pushf
add
retf
push
adc
add
add
add
or
add
add
inc
nop
xor
jno
mov
adc
add
xchg
add
and
add
outs
xchg
add
mov
mov
jl
inc
add
add
pop
or
pop
gs
inc
push
jae
ins
add
out
int3
and
add
inc
add
or
retf
dec
add
(bad)
jle
add
adc
popa
mov
mov
mov
push
fwait
pop
add
mov
dec
rol
dec
xlat
outs
jbe
ins
push
ins
jle
add
jne
and
add
retf
dec
sbb
add
dec
jge
add
or
clc
add
sbb
add
add
aam
add
sub
add
sub
add
cmp
add
inc
mov
push
rcr
iret
ja
add
add
lds
adc
mov
rol
inc
add
add
add
inc
cli
add
ja
add
sub
or
add
add
icebp
add
add
jmp
sub
ja
ins
test
pop
call
iret
add
ja
cld
mov
(bad)
retf
mov
dec
shl
repz
cmp
mov
cwde
icebp
inc
add
add
pop
pusha
sub
test
add
inc
test
add
mov
add
ret
cmps
or
add
add
pop
add
add
sbb
add
sahf
stc
mov
test
fldcw
inc
lea
add
mov
dec
mov
retf
cmp
int3
test
add
test
add
add
pop
loop
inc
add
add
add
dec
add
add
leave
xchg
and
les
add
xor
imul
ins
jne
push
(bad)
pop
add
add
add
add
add
inc
lock
add
and
fs
pushf
lods
sbb
xor
test
sar
cs
xor
add
add
rol
arpl
mov
sbb
xchg
js
mov
mov
call
mov
daa
scas
jg
add
add
and
lock
int3
add
add
enter
sub
and
sbb
push
jo
adc
push
push
mov
ret
clc
add
add
add
add
bound
dec
hlt
xor
mov
add
loope
das
sbb
loop
mov
call
sbb
lahf
lock
add
shl
add
pop
fnstcw
jb
sub
sub
clc
outs
add
add
fmul
xchg
loopne
dec
xor
fld
add
imul
jle
add
add
int3
xchg
(bad)
cwde
mov
cmp
sar
add
fld
mov
add
add
mov
add
add
add
fist
xchg
push
add
stos
adc
and
call
add
sub
jg
xor
cmp
add
in
pop
add
push
pop
mov
mov
add
cmp
sub
add
inc
(bad)
leave
jne
add
jo
xchg
dec
add
add
ret
lahf
sbb
cld
rol
add
dec
inc
loope
nop
movs
es
inc
mov
js
add
add
jb
stc
and
fld
add
and
pop
je
mov
clc
push
add
enter
add
push
add
add
dec
xchg
movs
mov
cwde
push
movs
jge
pusha
mov
add
pop
or
ins
pop
loopne
add
je
adc
cdq
adc
add
pop
add
add
ss
movs
loope
cli
push
add
xchg
scas
add
jp
mov
movs
aad
loop
add
add
add
ss
sub
in
jg
fld
add
fld
add
add
xor
fisub
test
add
push
mov
movs
inc
jae
jbe
imul
lock
ja
add
add
add
je
add
add
add
xchg
jne
cwde
mov
add
sbb
sbb
xchg
cmp
add
jecxz
pop
add
mov
sub
cli
cmp
mov
inc
add
mov
rol
add
mov
nop
sbb
sbb
fwait
add
xor
pop
sbb
sti
mov
add
mov
add
loope
add
adc
mov
(bad)
push
imul
sbb
push
xor
xor
dec
aas
mov
mov
add
std
loop
add
fidiv
pop
icebp
inc
or
sahf
xchg
pop
add
into
jge
wbinvd
ins
adc
jl
mov
out
add
cmps
xor
data16
add
add
(bad)
cld
fisttp
xor
cmps
inc
fstp
add
add
push
cdq
mov
jp
adc
cmps
pop
sub
sub
push
cmp
dec
add
add
add
add
jb
adc
xor
sub
xchg
pop
add
shl
add
daa
add
mov
aam
inc
ret
pop
ret
lds
add
dec
daa
(bad)
std
scas
add
add
add
sub
test
add
jae
add
fnstenv
cmps
add
add
sti
add
sub
xchg
lods
add
add
cmps
add
bound
movs
and
test
add
add
mov
int3
add
add
jo
add
mov
add
mov
in
add
dec
ficom
test
pop
int3
adc
add
xchg
mov
pop
inc
sub
les
test
lods
retf
xor
dec
jno
xchg
jecxz
mov
mov
add
add
dec
mov
idiv
int
push
add
adc
adc
scas
mov
mov
jl
cmp
test
add
mov
and
add
jnp
es
add
add
pop
int3
pop
jg
push
add
sbb
retf
add
sub
jl
add
add
pop
add
add
jnp
int
mov
pop
dec
and
loope
(bad)
add
jp
add
xor
hlt
add
add
mov
mov
add
jmp
enter
fiadd
add
std
pop
add
fs
int
sub
ins
imul
cld
jbe
pop
cmps
stos
loope
push
nop
push
add
icebp
jbe
(bad)
jmp
add
add
add
push
fwait
add
mov
add
adc
movs
hlt
pop
ja
sub
and
jno
rcr
push
xor
(bad)
push
das
add
shl
stos
push
jl
add
fwait
inc
sub
xchg
mov
sahf
or
add
adc
jg
sub
lods
push
pop
add
add
pop
pop
push
jnp
call
jge
or
add
add
add
stos
popf
call
add
nop
dec
test
call
loop
add
shl
lods
pop
js
sub
mov
sti
xor
cmp
xor
adc
test
add
ins
retf
xchg
cwde
add
sub
add
ror
loope
jnp
test
inc
mov
loope
sar
push
sub
add
cld
call
enter
scas
xchg
push
cwde
fadd
add
jp
mov
add
in
stc
fsub
loop
scas
jecxz
xchg
lahf
mov
adc
adc
pop
das
adc
add
adc
add
pop
ins
or
add
jle
inc
add
test
add
add
mov
stc
es
xor
mov
rcr
lock
add
call
hlt
add
imul
call
mov
mov
pop
(bad)
je
add
push
add
add
jecxz
mov
loopne
int3
fcomp
pop
add
add
mov
dec
jecxz
retf
xor
xor
js
mov
mov
fs
xchg
xor
xchg
pushf
jecxz
xchg
add
dec
out
jl
xor
je
mov
mov
nop
and
add
outs
(bad)
iret
call
push
dec
sahf
add
and
add
outs
pop
xor
shl
xor
sub
add
add
movs
sub
xchg
fsubr
xlat
dec
ret
mov
fstp
cli
loop
call
in
mov
push
sbb
pop
sub
add
pop
xchg
js
add
add
sub
aaa
push
in
scas
inc
stos
(bad)
xor
add
add
xor
cld
add
inc
call
in
inc
pop
jne
scas
test
push
add
or
adc
add
ret
lods
xor
add
cli
sub
sbb
add
add
mov
mov
jmp
fimul
pushf
or
sub
or
add
add
rcr
xor
pop
dec
add
jns
add
push
add
mov
sbb
aad
cmp
sub
es
retf
add
(bad)
out
(bad)
mov
xlat
sbb
xor
aaa
pusha
leave
addr16
fstp
add
stc
jno
add
xor
mov
loope
ror
xor
pusha
push
add
inc
pusha
ins
add
push
je
add
add
movs
dec
jmp
das
add
mov
add
into
xchg
jno
sbb
add
add
out
cmp
data16
fsub
and
sbb
pusha
jns
cmp
add
stos
jnp
adc
fmulp
mov
add
(bad)
(bad)
movs
popa
bound
fadd
add
sti
mov
add
add
leave
add
dec
xchg
xor
xchg
add
pushw
mov
push
(bad)
add
add
lds
cwde
xor
fild
ret
and
push
fdiv
neg
je
mov
add
stc
add
cmc
(bad)
das
mov
sbb
add
lock
pusha
aaa
std
add
mov
arpl
add
add
sbb
add
add
add
add
iret
lds
sti
mov
add
add
or
adc
ffree
add
fnsave
mov
jg
add
push
add
mov
out
adc
mov
adc
(bad)
inc
add
add
xor
retf
xlat
sub
add
sub
jo
and
add
add
add
ins
(bad)
and
in
test
(bad)
mov
xor
add
add
xchg
out
add
xor
jmp
jle
imul
or
popf
inc
cmp
ror
jl
mov
add
add
cdq
and
mov
aam
arpl
in
lock
daa
cmp
xor
add
nop
cmp
cmp
add
into
dec
retf
sti
cmp
add
pop
aad
mov
movs
add
add
add
add
ret
adc
movs
rol
add
mov
mov
fstp
push
cwde
mov
and
cs
(bad)
jmp
add
es
jp
movs
and
shl
daa
inc
mov
jp
mov
dec
int3
inc
sbb
add
pop
int
call
jp
inc
pop
shl
add
add
sub
scas
cs
xor
and
sub
add
inc
adc
out
dec
xor
add
add
test
lds
add
call
enter
aas
inc
or
add
imul
sub
sbb
pop
int
adc
lahf
aam
add
mov
fcmovb
add
add
pop
fstp
ret
fild
add
add
clc
shr
sub
or
mov
adc
add
or
jbe
rol
outs
add
mov
or
add
xchg
jp
cwde
xchg
add
add
shl
call
adc
inc
sub
push
add
adc
in
add
inc
shl
sbb
add
push
pop
call
aam
inc
dec
inc
and
adc
cld
add
sub
or
jle
push
xlat
dec
lods
leave
inc
jl
add
add
mov
pop
and
add
mov
cmp
add
pop
xchg
add
xor
ja
repz
add
inc
jne
push
jno
in
inc
cmp
add
add
add
add
add
pop
push
xor
xchg
fimul
leave
inc
add
adc
fimul
sbb
add
pop
cmp
jp
sbb
add
add
sub
inc
mov
pop
adc
out
or
cmp
add
adc
out
sub
adc
add
add
add
ret
out
and
cmp
add
add
add
jecxz
jno
loopne
xor
xor
dec
push
add
or
add
test
dec
aad
ins
xor
ja
inc
and
ins
aam
add
add
add
jl
cmp
test
add
inc
lods
push
jmp
add
add
sub
imul
xor
mov
sbb
rsm
inc
xchg
sbb
jp
add
dec
dec
xchg
mov
jnp
inc
mov
imul
fdivp
out
in
(bad)
pop
jae
in
mov
add
xor
add
jb
mov
xchg
inc
sbb
mov
and
add
xchg
add
mov
mov
or
jg
pop
inc
pop
mov
cli
call
adc
push
(bad)
rcr
gs
sbb
fwait
mov
add
push
cmps
mov
das
mov
jae
ret
add
add
in
ds
inc
add
add
cmc
add
retf
and
add
punpckhdq
es
mov
add
pop
xchg
mov
jl
add
cmp
dec
bound
clc
jnp
int3
stc
adc
jmp
sbb
(bad)
fistp
popf
pop
xchg
add
pop
add
sub
add
repz
mov
inc
neg
jns
pushf
dec
add
add
iret
ins
dec
shl
add
outs
scas
movs
push
xor
jmp
fmul
add
ror
add
shl
lahf
pop
in
add
add
adc
(bad)
cmc
fadd
add
fbstp
push
add
add
inc
sub
add
data16
in
add
add
add
daa
ds
das
jmp
add
mov
mov
xchg
add
cdq
jge
mov
jne
scas
sti
test
add
mov
ja
pop
rcr
ins
cld
pushf
(bad)
stc
xchg
add
add
xchg
add
add
add
stos
push
repz
inc
pop
aad
add
fiadd
mov
add
sbb
push
retf
add
add
mov
pushf
mov
add
pop
add
jns
add
add
add
(bad)
cwde
xor
or
xchg
pusha
ins
mov
imul
loope
dec
add
fs
adc
add
push
imul
jmp
lock
pushf
dec
mov
(bad)
add
(bad)
jge
cmp
mov
add
xlat
ror
add
add
add
mov
xor
test
jp
push
add
add
jge
popf
pop
ja
pushf
pop
push
dec
retf
shl
arpl
add
add
les
cmps
in
xor
add
das
outs
out
pusha
jo
push
mov
add
in
rol
add
sub
jp
sub
adc
sub
dec
xchg
dec
add
add
popa
pop
(bad)
retf
push
sub
stos
stos
add
sbb
sub
pushf
ficom
add
add
sti
adc
or
jg
out
mov
or
add
add
add
push
imul
fsub
(bad)
add
cmp
push
in
enter
xor
add
add
mov
add
add
add
xchg
add
jns
scas
xor
inc
inc
clc
xchg
and
bswap
outs
adc
loope
add
aas
add
inc
xor
movs
xor
dec
pop
add
pusha
inc
jns
cmps
in
add
pop
(bad)
outs
enter
add
push
push
add
gs
add
mov
iret
icebp
fs
add
add
add
and
add
push
in
mov
inc
sub
add
mov
dec
bnd
add
data16
ret
xchg
add
inc
loopne
jns
mov
mov
jb
ja
lods
add
mov
out
stos
add
test
add
setg
cs
sahf
add
ret
fcmovb
in
leave
fiadd
bound
mov
add
add
(bad)
loopne
inc
or
test
or
sbb
add
(bad)
pop
cmps
pop
imul
xchg
popf
pop
xchg
jo
arpl
mov
add
add
iret
and
add
cmps
push
add
add
add
add
psubq
xor
xchg
add
dec
or
pushf
pop
ds
push
sti
or
add
and
add
push
bound
jae
add
add
xchg
adc
test
imul
das
add
loopne
push
add
dec
xor
imul
add
pushf
mov
(bad)
test
add
fadd
mov
add
jb
pop
mov
add
imul
inc
inc
lea
pop
pop
pop
and
imul
dec
add
sahf
mov
int3
fcomip
lods
add
add
mov
adc
je
or
pop
sub
mov
lods
add
add
xchg
mov
jo
add
fadd
add
add
adc
movs
xor
popf
shl
iret
ror
add
inc
ret
sub
icebp
pop
jae
cs
mov
add
add
in
sub
xor
adc
popa
add
inc
inc
mov
add
add
retf
add
mov
jmp
xchg
out
lea
sub
(bad)
popa
mov
int
add
repnz
xchg
int
add
add
mov
add
mov
test
add
add
or
add
mov
xchg
pop
(bad)
retf
scas
lds
rol
add
xor
scas
jmp
add
pop
add
cld
dec
fwait
cli
add
add
int
add
dec
adc
add
add
add
and
add
mov
rcr
add
pop
rol
add
push
mov
sub
sti
add
js
lods
xlat
mov
clc
xchg
adc
sbb
add
leave
aas
ret
add
std
mov
cmp
cdq
loop
xor
rcl
add
out
pop
popa
add
add
mov
jmp
jmp
mov
repnz
aaa
pop
data16
dec
int
push
mov
enter
(bad)
push
or
push
xchg
mov
xchg
js
lds
cmc
xchg
add
add
pop
add
add
add
dec
add
ret
xor
lahf
outs
mov
add
adc
nop
pop
add
add
add
push
pop
pop
pop
cli
mov
das
add
add
xor
push
jmp
lds
jecxz
pop
add
add
add
and
add
mov
xor
fadd
inc
add
push
xchg
xchg
inc
add
inc
dec
movs
cmp
add
in
xchg
inc
add
dec
pop
jno
mov
stos
(bad)
mov
fistp
inc
(bad)
jns
xor
inc
cmp
add
pop
dec
or
and
add
add
xchg
mov
test
add
and
clc
loop
mov
(bad)
sbb
push
outs
fld
or
add
xchg
jns
and
iret
jb
mov
xchg
cmp
clc
loope
mov
xchg
je
ret
xlat
xchg
push
mov
je
add
xchg
add
push
rol
adc
add
add
add
push
jne
mov
add
mov
inc
sub
mov
sbb
fcmovbe
mov
push
sahf
sbb
add
test
add
jno
add
ss
mov
xchg
mov
pop
add
scas
mov
loop
add
loope
(bad)
fsubr
pop
add
retf
fiadd
xor
out
add
xor
cli
lods
cmc
xlat
cwde
(bad)
(bad)
xor
mov
jo
add
mov
or
and
sub
cld
mov
add
add
jle
pop
lock
add
ins
mov
mov
lea
push
xor
icebp
add
jb
shr
cmc
add
add
imul
add
mov
add
mov
add
retf
arpl
add
add
add
retf
dec
(bad)
sbb
push
fs
aas
aas
out
es
push
jmp
add
call
add
jne
call
sbb
add
add
xchg
out
add
add
in
mov
add
push
ffree
bound
xor
test
push
or
test
cwde
rol
add
ror
add
fist
fcom
(bad)
in
add
aam
out
inc
cld
imul
add
push
(bad)
jg
add
push
xchg
mov
add
xor
inc
in
xchg
inc
or
std
mov
add
add
sbb
ins
aas
jbe
push
add
mov
add
add
and
adc
pop
sub
jmp
icebp
jge
inc
jno
inc
dec
mov
fdivr
add
mov
cmc
inc
add
xchg
inc
out
mov
cwde
push
push
in
das
ror
clc
cmp
jmp
(bad)
and
cmp
sbb
add
xchg
es
movs
aas
xchg
mov
icebp
pop
sub
dec
dec
outs
call
shl
add
dec
out
add
add
pop
add
add
outs
pusha
repnz
int
adc
sti
mov
jne
in
sti
mov
out
add
dec
out
pop
gs
xchg
scas
inc
jl
dec
mov
add
aas
div
add
add
add
add
add
cmps
push
mov
mov
cmc
movs
fiadd
add
lods
add
lods
add
stos
lock
shr
add
mov
jnp
add
test
repnz
adc
add
das
add
fadd
cmp
aas
icebp
inc
int
fidiv
mov
mov
test
add
push
inc
or
adc
add
test
inc
aaa
sub
mov
scas
ret
add
add
add
inc
mov
fucom
xor
xor
add
add
adc
pop
call
mov
bound
pop
out
lahf
out
mov
inc
add
pop
ror
mov
inc
add
icebp
cmp
sub
dec
pop
add
add
add
dec
add
or
add
add
cwde
xchg
jg
xlat
cwde
cwde
add
shl
stos
cmp
dec
xchg
test
and
ret
pop
imul
and
mov
sbb
cld
or
pop
add
xor
aad
or
leave
(bad)
inc
xchg
leave
add
add
mov
je
add
cmps
rol
leave
mov
(bad)
pop
jp
xor
add
loop
ss
aam
jns
add
add
cs
or
mov
mov
add
retf
cwde
clc
mov
mov
pop
sti
mov
add
add
test
mov
in
pop
sub
pop
imul
stos
jge
sbb
push
xchg
jno
jl
mov
dec
test
(bad)
mov
icebp
xchg
or
jmp
and
je
hlt
repnz
inc
jmp
xor
add
mov
add
add
out
std
scas
cmps
add
xor
sti
add
add
lods
add
add
in
xor
mov
loop
mov
pusha
xchg
ja
int
add
add
add
test
adc
popf
add
pop
xor
fcmovu
or
add
ins
add
add
adc
add
pop
push
lock
add
add
add
or
add
add
sub
add
add
inc
out
add
rol
mov
cmp
add
dec
js
aaa
push
scas
sub
cmp
add
mov
add
mov
inc
out
xchg
in
aam
call
shl
sub
add
retf
fild
push
fstp
imul
add
push
push
add
mov
sbb
sbb
clc
jnp
add
xor
xchg
add
bound
dec
ficomp
add
push
add
add
cmps
fsub
pop
add
cs
call
rol
add
in
cmp
jae
and
loopne
shl
add
or
xchg
das
sahf
push
add
add
push
pop
fld
add
xchg
pop
jl
or
mov
add
mov
add
cs
inc
ror
xor
cmps
add
add
dec
sub
or
mov
add
or
jbe
(bad)
bound
js
mov
add
jl
adc
adc
sub
add
sbb
add
adc
fldln2
ret
fdiv
call
cdq
add
add
push
retf
scas
out
xchg
ds
add
add
add
add
add
adc
loop
inc
ret
in
retf
pusha
jg
mov
in
inc
mov
add
xchg
repz
mov
cmp
es
add
add
adc
jne
loop
add
adc
pop
add
or
add
test
rol
mov
jmp
out
add
add
mov
jns
add
add
stos
cmp
add
pop
add
jno
and
jge
adc
inc
or
clc
mov
(bad)
xchg
daa
push
clc
mov
add
add
add
add
jo
hlt
retf
add
jo
jmp
sahf
into
sub
add
mov
add
lahf
add
lods
add
(bad)
into
add
add
int3
call
mov
lods
lea
(bad)
loopne
push
or
data16
add
pop
add
xor
(bad)
fbstp
add
(bad)
mov
add
cmc
repnz
bound
or
mov
add
sub
jg
scas
cmps
add
pop
mov
out
fcom
int
ins
fucomp
(bad)
cli
(bad)
repz
pop
movs
push
jnp
add
add
scas
ret
fucomip
add
jb
add
add
add
add
jmp
add
in
dec
push
data16
loope
cmp
mov
xor
xchg
sub
add
inc
pop
std
je
sub
cmp
js
add
add
add
test
loopne
mov
ss
movs
jns
stos
add
add
mov
ficomp
add
test
add
xchg
fild
add
and
add
add
add
out
lods
inc
add
mov
jo
pop
dec
or
cwde
mov
add
ficomp
mov
fs
add
and
aas
cmp
add
add
mov
dec
cdq
(bad)
add
adc
xchg
add
add
push
pusha
jbe
or
sti
or
cmp
or
mov
sub
repz
add
sbb
jmp
add
add
nop
mov
popa
pop
or
(bad)
dec
(bad)
das
mov
add
sub
xor
ror
add
aad
push
mov
div
out
js
add
cmp
adc
cs
cmps
inc
into
push
add
add
push
lds
fimul
cmp
stc
mov
add
or
dec
lea
add
add
add
add
add
and
xchg
pop
xchg
fdivr
add
pop
add
push
retf
push
jnp
add
retf
out
cmp
add
cmp
add
(bad)
popf
neg
test
add
add
stos
pop
arpl
cmp
add
mov
imul
test
daa
imul
xchg
cmp
sub
ins
jmp
fadd
mov
add
loope
fs
dec
outs
sbb
mov
add
aaa
add
add
inc
daa
xor
sti
sub
xchg
cmp
mov
dec
or
lahf
addr16
push
add
scas
push
enter
add
add
add
add
add
or
pop
push
rcr
cs
(bad)
fwait
add
sbb
add
add
jbe
shl
add
add
lods
push
add
pushf
jns
sbb
cli
out
push
test
add
into
jbe
add
in
add
dec
add
add
fadd
and
iret
into
jb
add
or
test
add
out
add
cmps
(bad)
cdq
daa
scas
jnp
add
add
add
test
cmp
mov
push
push
add
or
sbb
sbb
in
mov
fadd
add
add
add
cmps
add
fcom
add
add
add
jno
pop
pop
pop
les
fnstenv
test
xchg
retf
mov
pop
arpl
stc
mov
ds
popf
int
sub
fadd
add
bnd
fwait
inc
cs
jge
lods
add
add
enter
hlt
dec
add
inc
adc
pop
pusha
xchg
add
add
add
cmp
cdq
add
add
add
sbb
daa
ret
lds
xor
push
or
cli
nop
sahf
jae
dec
fnstenv
sbb
mov
or
loope
jo
cwde
add
add
jae
test
xor
sub
xchg
sub
add
icebp
cdq
dec
add
mov
icebp
dec
add
fldcw
mov
add
push
mov
bnd
mov
add
add
inc
jecxz
inc
add
or
push
xor
add
mov
rol
sub
jo
test
test
iret
retf
add
xlat
add
fbstp
add
out
test
mov
fwait
add
cmp
sbb
aam
or
add
or
sub
add
add
pusha
add
add
jne
add
add
cmp
adc
xor
data16
add
dec
push
add
or
mov
xchg
fist
mov
mov
jp
pop
stos
cmp
add
dec
inc
xor
cld
(bad)
pop
jbe
push
adc
bound
add
mov
sti
cmp
add
push
jb
jmp
ja
adc
fbld
mov
shl
outs
cld
pusha
loopne
out
mov
mov
push
fimul
idiv
call
mov
xchg
add
push
add
adc
jnp
scas
out
mov
xor
and
(bad)
xor
pop
jbe
add
push
fist
sub
add
dec
mov
add
outs
sub
clc
or
add
add
aad
and
mov
pop
mov
shl
adc
and
nop
push
add
jmp
pop
fwait
add
add
add
sar
jmp
in
add
aad
test
or
cmp
shl
aas
add
add
dec
add
cmps
jle
add
xchg
add
(bad)
and
xchg
sub
add
pop
shl
jnp
shr
mov
add
pop
add
inc
add
or
push
bound
pop
inc
repz
aaa
push
add
mov
gs
mov
pop
popf
jmp
sub
pop
mov
jno
jg
push
and
jns
add
in
jmp
test
mov
pop
pop
repz
(bad)
stos
fcmovnu
add
mov
cli
ret
add
add
xchg
loope
add
jnp
add
add
pop
mov
push
pop
push
mov
adc
test
add
dec
push
repnz
and
test
xchg
or
add
in
mov
and
mov
adc
sbb
add
into
dec
mov
add
js
or
mov
loope
cmp
movs
add
scas
and
add
dec
test
pop
enter
sub
add
bound
xchg
cmp
add
xor
pop
cmc
jbe
mov
aas
add
add
ins
mov
repnz
inc
adc
add
and
jae
add
in
dec
add
add
adc
jle
scas
dec
pop
jmp
call
add
jb
dec
or
cdq
pop
add
add
add
add
ret
xchg
xchg
xor
lds
add
xchg
jecxz
mov
dec
jp
add
cmp
or
and
jnp
data16
outs
scas
jmp
pop
daa
add
iret
outs
add
xor
pop
add
add
clc
mov
dec
dec
ret
iret
inc
outs
add
dec
sti
xchg
sbb
adc
add
loop
outs
arpl
test
mov
pop
aad
push
cmp
mov
cwde
mov
inc
xlat
call
test
test
add
add
call
add
add
fldcw
mov
add
jge
dec
outs
mov
popf
mov
sbb
in
pop
retf
loop
movs
dec
ret
repz
add
scas
scas
add
add
aam
add
jmp
fistp
add
mov
test
add
sub
add
dec
add
add
ins
pop
imul
icebp
sbb
fsub
gs
aas
mov
jns
add
gs
and
test
add
xlat
inc
pop
mov
test
add
add
add
add
fucomi
sbb
xchg
sub
add
add
add
in
add
test
add
add
sbb
push
add
xchg
xor
call
mov
loopne
jns
inc
add
sbb
jge
mov
jne
push
stos
add
add
xchg
and
arpl
pushf
lahf
repnz
add
cmp
add
add
add
imul
shl
frstor
or
mov
add
(bad)
in
mov
dec
add
add
test
pop
add
fld
add
ret
fld
shl
adc
jb
cmp
ret
add
fiadd
cmps
sub
movs
or
pop
pop
mov
xchg
mov
das
adc
adc
add
jecxz
mov
cld
pop
cmp
sbb
ins
repnz
add
add
(bad)
jge
loope
mov
call
add
movs
add
sbb
push
aaa
add
mov
dec
repz
in
or
xchg
clc
push
sbb
pusha
jno
mov
in
add
add
add
add
cmp
pop
mov
add
add
ins
aas
xchg
mov
add
iret
push
push
(bad)
mov
lea
and
sub
icebp
or
sbb
cmp
add
add
(bad)
inc
add
out
add
add
add
add
add
test
in
xchg
cmp
add
cmp
mov
push
add
add
lods
add
ror
sti
imul
cmp
dec
add
or
jb
inc
xchg
aaa
inc
add
add
fs
cmp
add
popa
mov
add
outs
popf
jo
fadd
add
cmp
sbb
xor
mov
add
pusha
add
aad
inc
lds
cdq
mov
add
(bad)
jnp
xchg
add
add
stos
add
add
inc
xor
add
pop
fsubr
mov
cdq
jb
add
xchg
mov
jle
add
mov
sti
and
add
mov
dec
xchg
jle
and
adc
scas
fwait
and
pop
mov
adc
mov
cwde
int
add
mov
rol
add
add
mov
add
add
cmps
sub
mov
add
fs
add
fld
(bad)
push
out
fnstcw
inc
xor
out
frstor
mov
outs
mov
mov
and
inc
dec
sub
fld
sahf
jg
jmp
add
lods
mov
inc
ss
mov
pop
loopne
iret
mov
add
push
push
pop
cs
(bad)
push
inc
add
fadd
add
in
adc
mov
xor
add
mov
popf
aam
cmp
cwde
dec
clc
add
or
in
stos
sbb
jae
out
loopne
adc
add
cli
clc
xchg
jmp
ror
test
dec
add
add
add
inc
jecxz
xlat
ins
add
inc
(bad)
(bad)
add
pop
sbb
dec
sahf
add
dec
cli
add
test
mov
adc
add
imul
xchg
add
add
pop
xlat
rcl
mov
pop
adc
pop
daa
add
dec
les
add
mov
add
cwde
aas
popf
dec
pop
test
pop
stos
or
add
add
stos
pop
inc
sub
push
sbb
push
or
xchg
in
call
or
add
push
fadd
leave
jmp
dec
dec
fdiv
xchg
fwait
call
add
or
or
cmps
neg
add
fld
aas
fadd
add
add
cld
add
add
pop
mov
fisubr
and
add
outs
in
or
retf
add
add
das
loop
xor
leave
fnstcw
je
sub
add
add
pop
push
movs
movs
(bad)
mov
movs
jmp
das
sar
push
ds
fiadd
add
cmp
add
sbb
xor
mov
cli
cmc
or
imul
retf
add
dec
mov
add
inc
fld
add
les
sbb
add
retf
inc
add
add
push
fcom
dec
cld
mov
add
push
mov
sub
cmc
jo
mov
fsubr
rol
add
int3
add
out
adc
push
sahf
or
jg
add
add
mov
and
mov
jl
mov
add
into
add
add
and
mov
sti
retf
push
sbb
add
add
jge
xor
sub
movs
add
add
gs
push
add
data16
add
push
push
add
add
push
mov
xor
mov
mov
xchg
add
add
push
call
arpl
jg
add
popa
dec
add
add
and
jns
add
pop
call
push
jmp
data16
add
add
jae
add
hlt
mov
add
jecxz
repnz
xchg
mov
in
sbb
jg
add
pop
jbe
hlt
inc
add
add
sbb
aad
loopne
fs
fdiv
mov
mov
and
add
test
cmp
fadd
pushf
mov
add
call
and
popf
es
and
push
add
pop
(bad)
fild
or
add
xchg
mov
mov
mov
add
mov
add
xor
popa
sub
inc
mov
add
sub
add
xchg
cmp
dec
mov
push
push
add
fcmovu
pop
xor
add
jne
add
xor
add
daa
inc
sbb
mov
add
add
push
xlat
das
add
add
sub
je
(bad)
in
loop
xor
loop
sub
aam
add
add
add
pop
xchg
dec
into
daa
add
add
add
sub
add
xchg
in
pop
lods
pop
and
out
mov
repz
popf
rcr
in
add
out
pop
(bad)
arpl
mov
jae
add
das
jg
xor
(bad)
cli
lods
mov
imul
push
sbb
add
add
ins
push
add
inc
mov
inc
pop
mov
lods
sub
js
std
sbb
add
fsubp
xchg
or
add
push
push
push
pop
dec
les
mov
(bad)
mov
add
add
pop
lahf
adc
and
imul
add
cmp
add
fisttp
jae
add
out
xchg
scas
ficom
enter
add
test
add
push
or
or
sbb
cmp
add
cli
add
mov
sbb
xor
xor
push
add
(bad)
iret
clc
dec
dec
mov
xchg
add
cmp
add
xor
es
fmulp
mov
cli
and
iret
test
add
add
ret
xchg
add
gs
xchg
push
or
and
sub
mov
sub
sub
sti
or
mov
int
in
repz
or
add
out
add
loopne
add
xor
push
mov
add
xor
add
add
lods
sub
add
add
popf
inc
add
add
ja
shl
popa
lea
sub
add
xchg
add
leave
scas
add
add
movs
mov
hlt
movs
cmp
sub
xchg
fiadd
adc
push
ret
xchg
sbb
add
pop
xlat
js
sub
add
xor
ret
mov
pop
test
movs
add
push
sahf
add
hlt
mov
xor
sub
out
in
sub
rol
add
dec
outs
repz
inc
mov
cwde
xchg
aas
aas
jl
clc
pop
test
test
add
add
mov
add
mov
add
push
cmp
iret
add
imul
call
fdivr
lods
xor
cmp
add
add
lock
sbb
fld
add
cmc
and
dec
cmp
fmul
movs
out
add
add
jl
adc
loop
(bad)
jne
jne
add
shr
push
stc
add
xchg
xor
add
add
mov
in
pop
aad
leave
cmc
or
data16
add
sbb
je
cmp
mov
sar
add
ja
js
mov
shl
add
or
add
or
dec
push
jge
add
retf
fild
add
add
sbb
push
add
pop
cwde
mov
enter
das
lahf
mov
add
add
xlat
add
add
rcr
leave
add
xor
fild
add
push
loopne
push
imul
mov
int3
lea
add
jo
mov
stos
movs
add
add
jmp
xchg
xchg
f2xm1
add
leave
rol
mov
add
inc
dec
dec
cmp
cs
stos
or
add
pop
and
mov
sub
cmps
neg
cmp
push
ss
add
add
or
add
mov
push
outs
sbb
pop
std
int
cmps
sub
sub
or
add
stos
into
xlat
pop
ds
jo
dec
xor
xor
int3
mov
mov
outs
or
cld
or
mov
addr16
clc
push
sub
mov
add
daa
popa
jo
jne
jl
add
add
call
sbb
sub
add
add
jmp
add
ror
cmp
(bad)
push
sbb
push
ror
hlt
ja
add
cmps
je
repnz
add
mov
add
add
idiv
repnz
add
add
retf
add
add
mov
(bad)
daa
cmps
jge
ja
dec
and
xchg
lods
lea
pop
lock
scas
add
imul
add
ins
jo
pop
cmps
push
add
ins
mov
add
or
add
mov
data16
push
jae
pop
shl
add
sahf
jecxz
int
or
pop
xchg
cdq
in
jg
add
add
fdivr
jo
mov
pop
les
add
add
add
fwait
loopne
mov
mov
mov
scas
sub
adc
add
or
add
cmps
push
add
add
or
add
inc
pop
(bad)
dec
fwait
mov
cmp
adc
xor
add
push
mov
pusha
add
in
das
jmp
add
add
pop
add
mov
add
adc
outs
lea
into
neg
pop
adc
add
cmp
mov
xchg
add
dec
test
retf
add
add
sub
popf
lds
(bad)
jnp
in
jmp
retf
call
int
lahf
add
add
pop
jp
push
aam
mov
add
push
rcr
add
pop
add
add
dec
add
push
push
add
cwde
add
outs
ror
lods
push
sahf
mov
add
add
enter
push
mov
add
pop
outs
mov
add
add
dec
add
add
adc
jmp
inc
add
popf
fnstcw
add
test
inc
test
add
cld
aaa
call
add
xor
pop
and
add
or
add
jns
add
or
or
add
inc
mov
out
(bad)
jl
nop
cmc
fwait
mov
xchg
adc
dec
or
jb
int
add
push
pop
lahf
jmp
cmp
add
add
add
lahf
pop
in
data16
into
jp
add
cmp
mov
add
addr16
add
in
add
mov
mov
sub
add
add
fiadd
in
or
outs
js
es
test
or
add
adc
add
sub
add
scas
pop
push
pusha
adc
loopne
inc
imul
int3
mov
fstp
add
add
les
mov
xchg
jg
push
aad
pop
sub
add
inc
and
push
inc
sub
add
das
and
add
add
cli
pusha
push
or
pop
mov
jmp
into
icebp
test
mov
add
add
lods
push
and
add
add
add
push
pop
test
add
add
cdq
inc
add
add
es
clc
add
add
add
inc
mov
add
sbb
pop
add
adc
mov
add
mov
add
popf
cmp
inc
js
(bad)
jge
fiadd
add
add
add
pop
xchg
call
test
fwait
int3
add
jl
xor
add
pushf
in
shr
fcomp
icebp
jbe
pushf
ja
jg
sar
retf
inc
(bad)
add
add
fbld
add
imul
xchg
stos
mov
sub
or
cld
pop
cmp
and
sahf
pop
stc
add
add
add
int3
and
stos
aad
mov
mov
neg
les
mov
pop
fsubp
add
mov
mov
add
add
add
add
rol
add
lds
add
sbb
dec
movs
xchg
add
ror
push
mov
push
sub
pop
test
xchg
hlt
aad
pop
pop
xchg
push
lea
add
sbb
mov
xchg
add
adc
add
and
pop
add
add
mov
add
mov
loop
clc
(bad)
adc
add
add
lods
add
mov
jle
bnd
add
or
std
stos
jle
clc
add
test
mov
movs
fyl2xp1
add
push
add
add
sub
add
ds
retf
outs
xchg
lock
fild
add
and
add
pop
or
add
add
neg
out
clc
add
test
add
lods
or
mov
aam
lock
sub
es
scas
xor
rcl
add
pusha
aam
iret
jo
shl
outs
fwait
push
inc
test
adc
add
aam
imul
add
lahf
arpl
push
(bad)
or
push
(bad)
add
jge
fstp
add
test
inc
mov
add
xchg
mov
inc
ret
add
mov
and
shl
repnz
add
xchg
adc
lea
add
jp
sldt
add
in
add
push
add
cdq
std
dec
jg
cmp
mov
add
fadd
mov
xor
sub
rol
xor
or
popa
add
xor
add
fnstenv
cmp
cmps
loopne
lds
cmp
add
mov
jnp
mov
add
pop
add
ins
popf
fisubr
mov
lods
add
mov
add
push
xor
add
jle
push
(bad)
lock
add
iret
or
inc
add
xchg
dec
cmp
adc
jmp
pop
sub
push
add
add
mov
retf
sub
and
pushf
mov
into
add
mov
(bad)
out
outs
lea
sti
sub
push
std
jl
dec
add
add
pusha
mov
add
add
test
add
adc
cs
add
xor
mov
hlt
push
cdq
test
mov
shl
retf
add
add
call
inc
add
pop
jo
cmp
xor
add
add
in
out
add
add
cmp
add
add
sub
pop
and
and
into
pop
sub
out
and
add
jle
mov
jae
push
add
jp
add
add
add
imul
xor
fistp
cmp
add
add
hlt
fcmovnbe
push
cmp
loope
lds
add
cdq
cmovo
push
adc
icebp
pop
ret
add
mov
mov
mov
add
fstp
lock
pusha
out
add
add
pop
inc
loopne
add
add
add
shl
sti
arpl
mov
add
stos
add
fnstsw
cmp
clc
pop
cdq
jecxz
mov
push
test
add
push
pop
or
rcr
imul
(bad)
xchg
jns
push
bound
add
shl
adc
aad
add
add
ret
les
add
xchg
lea
add
jae
xchg
add
add
sbb
add
dec
iret
loop
loop
add
clc
or
add
mul
or
xchg
repz
pop
xchg
mov
jbe
add
pushf
jb
push
push
call
imul
cdq
pop
in
fild
add
pusha
sub
imul
stc
movups
add
sbb
out
aad
ins
cmp
add
test
pop
retf
lods
pop
push
xor
pop
push
js
shl
fs
mov
jae
jmp
add
sar
test
add
test
lahf
jno
add
mov
add
cli
repz
mov
shl
mov
jmp
dec
call
cdq
out
add
push
out
fcmovnbe
add
ja
add
(bad)
repz
loope
jbe
ret
xchg
xchg
jecxz
add
mov
add
add
add
add
add
pusha
xchg
jge
push
add
add
add
add
call
or
rol
fs
mov
adc
push
outs
das
add
mov
push
dec
test
loop
add
xchg
jno
cmp
mov
xchg
(bad)
sti
add
sub
je
mov
push
mov
add
adc
or
popa
mov
out
cli
mov
outs
jg
jle
adc
je
cmp
push
inc
in
push
sub
xor
enter
fdivr
ins
and
popa
xchg
shr
adc
add
mov
push
xor
call
(bad)
sub
jle
add
xchg
jns
add
and
cmp
in
jmp
add
add
cdq
les
xchg
add
cdq
aad
xor
add
pop
add
add
add
ret
push
movs
cs
js
add
das
mov
add
jecxz
cli
mov
dec
daa
adc
cmp
add
cli
aas
das
jge
add
nop
xchg
add
mov
push
fcmovnu
push
xchg
add
(bad)
and
scas
ret
(bad)
sahf
pop
retf
inc
xor
add
inc
scas
lahf
pop
lea
add
test
adc
gs
jle
pop
xchg
and
add
pop
rol
add
sti
retf
jl
push
add
mov
push
dec
add
add
(bad)
into
add
add
jo
and
xchg
jae
and
add
add
addr16
div
add
clc
or
aaa
sbb
int
add
mov
mov
jne
int3
add
add
xor
nop
cmps
in
pusha
mov
jmp
rcr
movs
add
add
add
lahf
xchg
out
add
inc
inc
sbb
add
xchg
or
add
add
sbb
mov
add
add
xchg
inc
stos
or
dec
cdq
add
add
hlt
jg
sti
jae
mov
inc
pop
fdiv
add
jne
loop
add
sbb
jae
idiv
or
adc
add
add
xchg
call
rcl
add
add
cmp
sti
mov
in
or
push
mov
call
add
mov
dec
retf
loope
add
mov
fdivr
push
inc
dec
in
mov
adc
pop
mov
aaa
into
add
test
pop
scas
add
add
in
pop
or
fbstp
ror
imul
lods
mov
add
cmp
pop
ror
add
cs
push
imul
fwait
jmp
add
push
add
add
movs
add
add
add
push
or
mov
add
ret
jmp
in
loopne
add
push
add
add
add
sbb
jbe
test
or
enter
retf
retf
add
(bad)
push
into
div
or
jo
inc
retf
iret
add
add
push
out
add
add
ret
add
scas
div
ret
add
mov
add
and
add
jnp
data16
push
stos
add
add
add
mov
call
(bad)
mov
dec
add
add
sbb
ror
mov
push
pop
call
jbe
inc
add
add
add
ret
add
add
add
cmp
(bad)
mov
das
cmp
add
add
add
inc
(bad)
dec
or
cmp
cdq
movs
mov
add
add
mov
jnp
add
fdiv
sbb
inc
ja
xchg
adc
add
movs
push
mul
sbb
jg
push
aam
jnp
push
xor
xchg
push
arpl
call
jbe
je
js
xor
mov
add
sbb
add
xchg
popa
sub
xor
and
dec
pushf
push
mov
mov
jnp
add
adc
inc
mov
xchg
mov
sbb
pop
leave
mov
mov
retf
das
sbb
dec
add
push
mov
ss
and
movs
cmp
pop
and
inc
inc
and
cdq
pop
mov
and
add
jne
mov
add
add
je
adc
and
jb
jb
add
add
push
sbb
inc
xor
or
das
cmps
jne
add
add
loopne
add
add
data16
dec
inc
daa
dec
out
cmc
inc
ret
jnp
and
jmp
jb
mov
add
outs
into
add
xchg
dec
jge
add
xchg
aaa
add
and
xchg
inc
sbb
inc
bound
inc
clc
fisubr
add
sbb
and
add
jns
xchg
lods
mov
adc
sbb
add
scas
cmp
or
mov
add
cmp
mov
xchg
rcl
daa
mov
sbb
scas
add
clc
push
add
mov
cmps
pusha
jno
lahf
inc
into
mul
mov
add
add
xchg
add
xchg
add
add
push
sbb
add
sub
mov
aaa
push
fbld
fiadd
icebp
cmp
jns
fcom
or
les
push
ja
popa
add
bound
fcom
add
add
jmp
pop
add
add
lea
out
out
xchg
mov
jge
cmp
ret
add
add
inc
add
jg
ror
sti
add
add
nop
add
inc
xchg
rcr
inc
arpl
add
in
add
dec
loop
add
div
and
sbb
aad
enter
jnp
out
movs
cmp
(bad)
mov
rol
mov
add
cmp
add
leave
xchg
in
cmp
iret
pop
cwde
xchg
icebp
pop
dec
add
xor
add
cld
dec
inc
add
cmp
in
fdivp
or
adc
lock
add
jmp
outs
test
add
into
(bad)
out
in
add
mov
xchg
lea
neg
(bad)
std
add
add
ss
test
or
adc
mov
aaa
push
jmp
das
js
es
(bad)
ja
popf
jmp
add
loope
outs
sub
add
xchg
add
add
(bad)
and
retf
lahf
stos
jp
jnp
dec
dec
dec
out
and
push
jnp
add
ret
add
mov
add
mov
test
add
dec
jno
add
cmp
add
adc
hlt
mov
and
repnz
movs
sub
adc
dec
popa
mov
outs
retf
mov
or
and
add
popa
or
cmps
(bad)
sub
movs
ins
fldcw
add
mov
add
sub
xchg
push
jecxz
sub
mov
add
int
retf
cmps
push
add
mov
add
test
add
cmps
dec
out
add
add
nop
js
add
add
jecxz
ds
pop
cld
aas
lods
dec
(bad)
mov
test
add
add
add
inc
dec
push
cld
rcl
aad
sbb
jp
jnp
add
add
pop
jl
sub
in
and
add
xor
pusha
pop
ins
das
leave
je
add
add
xchg
repnz
push
pop
jp
ds
sbb
cmp
add
or
add
scas
and
push
cld
daa
mov
dec
sbb
jbe
cmps
lods
mov
add
jbe
inc
add
add
add
bound
imul
pop
xor
add
add
mov
add
and
rol
add
mul
inc
jp
add
add
pop
retf
xlat
lock
mov
cmp
(bad)
ins
pop
ins
repz
js
je
lock
rol
pop
out
inc
add
dec
mov
add
hlt
mov
inc
lods
inc
fst
mov
mov
lock
xchg
add
add
jmp
push
add
add
add
mov
sar
jne
retf
push
ins
imul
mov
add
into
push
int3
ins
call
and
add
inc
or
retf
call
dec
xchg
and
add
push
jmp
or
pop
or
lods
adc
push
or
jle
ins
lea
fsubrp
mov
jne
bound
add
outs
cdq
push
add
jecxz
add
or
ficom
jae
add
or
push
sahf
push
fwait
js
mov
jmp
add
add
and
add
popf
(bad)
mov
add
push
adc
pop
cwde
mov
sub
lods
mov
and
test
dec
add
aas
(bad)
xor
lahf
clc
loopne
popa
add
je
add
std
rol
cmp
pop
dec
retf
add
in
mov
inc
mov
ss
cmp
mov
add
mov
fst
add
inc
loope
inc
add
pop
add
in
add
add
adc
push
scas
cmc
mov
pop
mov
enter
push
add
dec
add
add
scas
mov
(bad)
inc
add
repnz
test
or
add
ins
jmp
rol
es
clc
pusha
shl
jo
fmulp
loopne
mov
mov
inc
(bad)
sbb
add
retf
icebp
and
(bad)
lods
jae
xchg
or
inc
sbb
scas
ret
into
cmc
sub
add
nop
jmp
add
pop
cmps
mov
xor
das
inc
mov
add
mov
mov
add
cmp
jb
(bad)
lahf
add
add
fild
pop
add
cmp
shl
add
cmp
add
inc
push
add
sahf
stos
imul
jge
mov
add
jl
add
sti
add
sub
retf
cmp
std
add
mov
adc
stos
add
add
mov
sti
data16
add
retf
add
add
dec
xor
lahf
ds
add
xchg
les
cwde
dec
dec
pop
xor
data16
inc
add
js
test
xor
add
sub
jmp
or
add
aad
add
add
mov
js
sbb
cmp
xor
ror
add
mov
iret
xor
inc
imul
push
out
in
popa
jae
add
add
mov
rol
fwait
ja
jle
fadd
add
mov
add
sbb
ja
add
daa
add
add
aad
add
or
sub
add
mov
add
into
int3
nop
inc
mov
mov
cmp
aad
addr16
fld
cmp
add
add
leave
add
add
pop
mov
add
repz
inc
push
retf
and
jo
add
mov
nop
push
mov
add
out
push
sub
add
cmp
add
ins
lea
add
dec
ja
xchg
repnz
hlt
sbb
push
jno
pop
lahf
sub
add
add
not
pop
mov
inc
push
and
loop
push
jecxz
or
add
add
mov
add
in
add
bound
cmp
add
add
push
add
lods
int3
and
in
cmp
or
pop
or
mov
inc
add
add
rol
add
adc
cmovs
mov
cmp
mov
stc
(bad)
fild
sub
popf
dec
dec
mov
mov
jae
pop
sub
cmps
out
mov
mov
add
(bad)
add
xchg
fld
mov
je
add
add
retf
pop
adc
ficom
cmp
jecxz
jnp
add
pop
fsubrp
inc
imul
mov
or
add
xor
jo
add
push
mov
call
pop
push
push
add
add
stc
out
push
inc
jo
add
sti
or
and
add
fsincos
daa
inc
mov
cmc
into
pushf
popa
pop
cmc
add
add
sar
call
add
xchg
arpl
add
js
jl
add
add
jb
mov
mov
add
add
add
loope
xchg
add
xchg
add
add
jne
push
or
mov
add
mov
adc
add
or
dec
call
xchg
xor
add
add
and
cmps
push
sar
mov
or
mov
add
sti
cmp
out
jbe
and
jmp
mov
outs
jns
mov
aaa
push
in
outs
add
aad
fistp
cmp
retf
lds
cs
push
iret
xchg
cmp
sub
or
add
(bad)
into
fstp
add
stc
daa
sti
pop
fnstcw
jae
add
outs
pop
mov
shl
mov
xor
fstp
fimul
rcr
add
pop
lahf
mov
or
add
add
add
inc
xor
aaa
add
dec
fwait
jbe
in
mov
rcpps
mov
stc
movs
movs
cmp
in
pop
sub
add
add
add
add
mov
dec
cmp
aas
pop
lock
xor
aaa
push
xchg
jbe
add
mov
add
lds
pop
pop
ffree
add
aam
add
imul
push
popa
xchg
add
xchg
dec
jmp
add
or
fs
sub
nop
add
xchg
mov
pushf
dec
dec
push
fs
cmp
or
jl
popa
mov
add
test
add
add
jne
(bad)
das
call
add
add
sub
jnp
shr
mov
adc
add
pusha
xchg
pop
ja
add
ins
lock
loope
add
cs
in
mov
xchg
mov
cmp
fdivr
add
ret
push
pop
aaa
cmp
add
mov
jmp
add
loop
add
mov
add
sbb
push
inc
mov
outs
mov
std
mov
xchg
and
mov
pop
add
aam
or
add
je
test
mov
ins
out
add
mov
lea
add
push
call
aad
add
jge
add
jmp
add
mov
repz
and
and
in
and
jo
add
inc
add
cwde
sbb
mov
imul
cmp
mov
fidivr
and
mov
call
leave
pop
push
add
pop
fs
fild
jns
add
std
mov
add
scas
jb
popa
fadd
add
sbb
clc
popa
add
jnp
mov
ds
icebp
leave
fstp
aaa
add
add
sub
jnp
movs
ret
mov
cdq
fdiv
loop
add
cmps
neg
add
add
and
push
pop
pop
sub
add
add
add
xchg
fwait
movs
add
add
add
daa
mov
dec
or
add
add
xor
fcom
add
add
add
add
shl
loop
add
jmp
add
sar
mov
add
ins
add
add
add
lods
sub
add
jo
cmp
add
daa
mov
xchg
loopne
add
scas
pop
cdq
add
or
or
cmp
add
push
int
add
pop
add
add
cmp
sbb
cmps
lods
rcl
push
lods
in
add
dec
jmp
add
add
inc
jl
add
add
aad
add
xchg
add
adc
add
cmp
jae
add
add
add
adc
add
add
push
lods
outs
pop
push
push
push
or
mov
(bad)
cmp
cmp
add
dec
or
dec
xor
add
add
nop
icebp
loop
call
sub
adc
test
imul
mov
and
sbb
inc
in
push
mov
out
push
in
fmul
mov
loopne
push
jbe
sti
test
add
popf
outs
mov
loop
dec
xor
jnp
cmp
out
add
add
(bad)
adc
and
add
dec
ja
retf
push
mov
sub
jne
pop
sar
mov
mov
int
inc
mov
sub
les
add
add
push
add
daa
call
add
add
lods
xor
cwde
push
js
add
scas
mov
fisttp
mov
dec
or
mov
sub
ret
into
add
add
mov
ss
cwde
push
push
cmp
test
add
sub
inc
sbb
cmp
rcr
and
or
int
jno
xor
add
test
add
scas
addr16
inc
xchg
call
sub
add
mov
inc
sbb
enter
pop
cdq
scas
test
mov
hlt
add
add
cwde
add
add
les
add
add
add
fsub
mov
neg
sahf
in
jns
add
(bad)
std
int
pop
test
mov
fisub
mov
add
ss
outs
stos
fiadd
add
sbb
add
add
mov
or
(bad)
add
add
add
ja
mov
jecxz
xor
jns
add
in
xchg
add
popa
lock
test
push
add
adc
les
xor
add
call
add
or
(bad)
fisubr
mov
adc
add
add
inc
xor
add
add
adc
ret
push
retf
add
and
xor
add
retf
jg
mov
jbe
stos
ret
add
jg
add
in
pop
add
ror
add
repnz
and
add
and
add
ins
xchg
xchg
jecxz
ret
sbb
arpl
inc
push
mov
mov
retf
xor
les
add
xor
add
and
test
inc
add
xchg
inc
iret
jo
add
xchg
outs
add
xchg
repnz
add
mov
mov
jp
push
xchg
test
out
cld
add
add
pop
les
cmc
add
add
and
add
adc
call
add
cmps
and
xor
jae
aad
push
add
das
mov
(bad)
out
sub
jnp
add
xchg
mov
add
add
pop
push
fnstcw
sti
add
push
movs
add
add
xchg
(bad)
retf
push
add
rol
add
add
inc
js
ins
sahf
mov
add
jle
pop
push
mov
and
sbb
mov
ss
loope
sub
add
cmp
sbb
add
add
mov
xchg
nop
add
retf
cli
add
add
add
ret
add
add
mov
fucomip
cmp
mov
add
adc
add
add
fild
add
cmps
adc
add
loopne
fnstsw
outs
xor
test
stc
push
or
out
and
shl
add
add
and
loop
jb
in
or
int3
dec
mov
pop
inc
loopne
xchg
mov
scas
push
add
sbb
add
popa
add
add
mov
add
add
out
xchg
(bad)
pushf
push
jl
push
add
or
add
add
test
jns
(bad)
adc
movs
jmp
mov
add
add
jl
add
add
test
out
xchg
inc
add
clc
add
(bad)
shl
add
fiadd
add
dec
inc
mov
bound
(bad)
sub
test
lds
scas
add
add
xor
add
dec
adc
and
cmp
push
add
or
jmp
add
add
ins
cld
cs
sub
mov
mov
add
js
xor
add
add
repz
push
adc
inc
add
out
add
add
rcl
fld
adc
jg
cmc
loop
and
movs
push
hlt
fcomp
iret
aad
jo
or
mov
add
xor
frstor
retf
mov
add
add
ret
sub
bound
add
push
mov
push
aaa
mov
stc
pop
add
xor
xchg
adc
sbb
push
scas
and
cmp
fmul
scas
add
cdq
xchg
and
rol
push
movs
clc
movs
bound
into
mov
test
add
xchg
xor
call
out
(bad)
call
and
add
xchg
rcl
in
mov
add
mov
(bad)
outs
mov
add
inc
jae
pop
add
pop
add
push
xchg
pop
and
add
je
inc
icebp
pop
(bad)
test
add
add
add
sub
mov
xchg
add
and
outs
fld
add
dec
add
add
and
test
inc
mov
mov
add
add
add
mov
mov
fild
shl
add
aas
mov
push
or
lods
mov
lods
and
add
xchg
bound
loopne
and
add
in
push
outs
cwde
mov
(bad)
xor
add
push
outs
cmp
ret
adc
push
mov
nop
es
stc
in
inc
add
jg
dec
add
add
add
mov
add
daa
push
pop
add
add
inc
push
push
stos
add
push
xchg
add
xchg
jl
ret
cdq
xchg
daa
push
stos
add
jo
add
add
ja
(bad)
leave
sub
add
add
add
add
mov
test
or
push
(bad)
(bad)
daa
adc
iret
aaa
add
add
pusha
jg
add
add
add
data16
call
les
push
cdq
jnp
pop
push
add
pop
push
fadd
add
mov
add
add
aam
push
add
add
iret
pop
bound
adc
add
add
ret
adc
ret
mov
(bad)
fdiv
stos
lock
sahf
add
cmc
shr
retf
ja
pop
ss
in
xchg
add
pop
add
add
mov
dec
imul
inc
mov
(bad)
out
mov
nop
clc
xor
add
(bad)
xor
dec
dec
add
ds
cmps
fild
or
add
in
adc
add
or
add
pop
leave
cmps
jns
xor
les
add
(bad)
push
add
cmc
lmsw
adc
iret
sub
pop
add
movs
jno
dec
adc
aaa
imul
pop
pop
add
add
add
or
out
je
in
jmp
add
loop
jne
add
add
scas
mov
add
push
add
cmp
aaa
sbb
out
or
mov
sbb
jno
es
mov
pop
pop
add
aas
and
xlat
add
add
xor
sub
sub
popa
xor
repnz
pop
add
add
leave
mov
xchg
shr
mov
add
add
loope
add
inc
cli
jmp
add
mov
inc
leave
jbe
cwde
add
outs
jb
dec
add
test
mov
mov
add
add
(bad)
add
in
dec
fmul
jp
ret
nop
popa
add
xchg
push
add
ror
add
add
adc
push
nop
pop
lock
add
and
add
add
int3
fstp
add
add
add
add
sub
cld
repnz
add
add
jno
add
mov
dec
(bad)
jmp
in
ret
inc
dec
mov
mov
pushf
scas
mov
in
pminub
dec
mov
dec
mov
push
in
and
xor
and
sub
or
sub
lea
inc
jmp
fs
int
jmp
cwde
pop
inc
fs
mov
mov
sbb
mov
mov
sti
fsub
jo
lock
add
and
add
lods
sahf
mov
mov
add
add
xor
test
in
mov
cmp
add
add
push
xchg
or
cmps
add
push
and
pop
ror
dec
push
inc
mov
stc
rcl
add
add
cmp
sub
add
add
mov
sub
mov
aaa
add
sub
push
fiadd
sbb
add
fidiv
add
jne
cmp
fwait
or
sbb
mov
dec
ret
add
xchg
add
xchg
jb
mov
data16
push
jecxz
add
add
add
cmp
add
add
test
ret
add
mov
jmp
lods
add
and
add
lods
in
retf
add
push
add
add
add
push
lds
and
xor
cmps
fwait
and
lock
add
dec
jle
cmps
or
sbb
or
add
and
add
fisttp
jno
add
mov
arpl
add
stos
mov
mov
cli
mov
pop
repnz
add
setne
jnp
push
add
add
push
pusha
xchg
cmp
ja
add
push
pop
into
cmp
ss
loope
rcr
pusha
add
mov
add
lds
add
add
in
push
add
add
xor
cmp
xor
add
rep
xchg
mov
add
mov
add
xchg
cmp
add
adc
xchg
stc
(bad)
jl
mov
add
add
lds
nop
add
add
(bad)
and
push
(bad)
dec
add
add
inc
add
add
add
sar
push
test
add
adc
add
inc
outs
icebp
add
xlat
dec
es
dec
add
in
add
addr16
pop
jnp
jg
add
xor
shl
add
out
(bad)
sub
add
cmps
pop
add
add
call
add
aas
add
(bad)
and
in
scas
and
add
inc
lds
add
add
adc
add
add
mov
mov
lock
cmp
ins
or
test
repnz
mov
add
add
lds
add
mov
jb
add
mov
(bad)
mov
fild
mov
mov
xor
add
add
test
and
push
pop
sub
add
add
add
add
jg
(bad)
arpl
add
add
add
inc
pop
inc
add
dec
sub
add
push
shl
add
fsubr
adc
add
add
add
sub
push
sub
movs
add
mov
add
test
add
int3
jge
add
add
and
xor
out
ret
add
daa
imul
xchg
add
jb
sbb
pop
movs
mov
aaa
sbb
fiadd
add
(bad)
dec
xor
repnz
add
cmp
xor
add
push
call
das
mov
add
push
add
add
xchg
xchg
test
adc
jmp
add
xchg
in
mov
add
ss
int3
add
jp
add
add
add
add
add
(bad)
mov
hlt
xchg
fadd
mov
add
mov
pop
jnp
add
inc
push
add
add
jnp
inc
add
mov
add
inc
mov
add
sbb
xor
out
add
push
pop
jns
add
add
dec
mov
jg
pop
xlat
jecxz
xchg
jbe
mov
pop
mov
push
sar
xchg
ja
add
cld
add
rep
cmp
add
mov
dec
pop
jecxz
loope
fistp
fiadd
arpl
shl
push
mov
sbb
add
add
call
and
mov
and
jnp
(bad)
add
stos
mov
add
inc
mov
add
leave
pop
xor
sub
dec
sub
jge
add
aam
and
add
add
xchg
shl
push
fmul
add
(bad)
add
add
add
add
(bad)
xchg
repz
hlt
mov
add
int3
add
add
add
adc
cld
pop
cmp
add
inc
mov
or
int
add
fs
mov
(bad)
and
push
test
ins
cmp
ins
popf
les
add
sbb
(bad)
mov
pop
(bad)
add
add
add
or
(bad)
inc
add
popa
add
mov
add
ror
outs
ins
loop
cmps
les
cmp
out
add
xor
jp
add
push
cmp
xor
pop
add
and
fistp
jecxz
ds
ins
(bad)
ja
jge
inc
jge
loope
data16
add
loopne
or
shl
xchg
add
xchg
add
hlt
add
jmp
je
ret
add
add
sub
add
sbb
jno
lods
mov
sbb
mov
aaa
inc
add
xchg
stc
cmp
rcl
add
add
add
retf
cmp
add
fsubr
dec
or
call
add
adc
add
add
jl
add
mov
inc
xchg
mov
add
push
cmp
cmp
mov
push
and
(bad)
add
add
push
lds
add
add
pop
std
inc
add
and
xchg
xor
add
mov
cmp
add
mov
icebp
push
sub
aas
push
add
cld
pop
add
sbb
xchg
fstp
add
sbb
add
dec
icebp
mov
pop
mov
add
add
add
add
add
or
xchg
sub
add
add
adc
jp
fild
add
jge
add
loopne
add
add
mov
mov
jp
push
int
mov
inc
cmc
mov
xchg
cmp
add
(bad)
mov
add
xchg
xor
add
add
add
add
dec
add
sbb
(bad)
(bad)
stos
in
fistp
inc
mov
pop
or
jmp
add
mov
jmp
loope
jo
movs
xchg
popa
and
cmp
add
add
add
inc
jl
dec
in
fiadd
jno
into
fwait
mov
add
aaa
sbb
sbb
rol
push
sub
mov
mov
pop
popa
add
dec
(bad)
add
add
add
data16
jnp
mov
xchg
mov
jmp
mov
inc
cwde
xchg
aad
add
test
fwait
les
cmp
add
cmp
sub
daa
sbb
(bad)
(bad)
cmps
inc
add
mov
add
jmp
mov
add
dec
add
jl
iret
push
add
movs
mov
add
dec
pop
add
jno
add
sub
add
pop
cmp
mov
xchg
test
cmp
add
or
stos
xchg
add
inc
call
mov
jbe
add
ss
dec
add
dec
je
add
loope
xchg
les
mov
pop
es
add
add
xchg
sti
out
loopne
add
aam
mov
jns
add
add
int3
cmps
pop
and
imul
cmp
ret
cdq
add
add
add
sbb
push
(bad)
dec
pop
inc
fnsave
dec
out
fadd
cmp
xchg
sti
or
push
pop
xlat
das
in
jnp
fdivr
loop
js
lea
jnp
xchg
sbb
aaa
xlat
push
or
mov
(bad)
js
add
xchg
xchg
add
aas
add
add
xor
add
pop
add
clc
std
sahf
mulps
mov
hlt
add
add
xor
add
cmp
add
movs
sbb
jbe
xor
fmul
add
lock
(bad)
add
add
lods
mov
mov
loopne
mov
call
neg
(bad)
xchg
push
fimul
pop
pop
inc
cdq
sar
add
je
add
add
cmps
mov
call
add
xchg
jle
leave
out
loop
mov
les
mov
sub
cmp
xor
or
add
add
push
int3
sub
add
adc
outs
sub
add
fdivr
leave
pop
shl
push
add
add
adc
jg
adc
add
mov
cli
test
add
add
add
xchg
xchg
add
add
loopne
cmp
or
or
imul
jno
push
in
loop
shl
xchg
add
aas
push
inc
xor
lahf
sahf
xchg
add
inc
sbb
loop
add
xchg
stc
mov
add
push
xchg
dec
xchg
scas
lahf
dec
cmp
add
push
icebp
in
imul
test
push
mov
fwait
ins
add
add
add
add
cmps
add
add
enter
xchg
add
(bad)
leave
in
or
and
arpl
jns
pusha
add
add
add
sub
add
add
add
add
push
add
add
or
aad
adc
rcl
add
jnp
add
cmp
push
test
in
out
jae
lock
add
push
push
lods
ins
mov
stos
push
mov
add
aam
sti
mov
add
sub
inc
pop
test
add
pop
sar
dec
cld
xor
lock
push
inc
out
add
mov
inc
fs
in
loopne
pop
jle
add
stos
inc
mov
loopne
stos
lods
add
mov
ret
add
xchg
pop
sub
add
(bad)
xor
cs
mov
inc
or
mov
or
add
pop
jbe
add
out
bound
sahf
imul
fiadd
add
std
mov
add
outs
add
leave
add
clc
std
add
xchg
adc
jle
mov
cmc
mov
inc
sub
mov
add
add
xchg
inc
add
and
push
add
mov
test
adc
leave
mov
pop
jb
and
add
add
add
add
jae
mov
mov
xchg
call
cmp
add
test
add
in
or
addr16
cmp
add
add
ret
sbb
add
mov
mov
int3
add
add
sar
mov
lea
add
dec
nop
add
inc
add
inc
or
add
bound
cmps
enter
rcr
retf
adc
or
call
jae
repz
addr16
inc
adc
jae
lock
movs
mov
adc
add
xor
inc
cwde
out
outs
lds
sahf
rcr
add
and
add
add
lds
mov
add
add
jb
add
repz
popf
sbb
sub
jp
sub
sahf
mov
loope
add
cmc
adc
add
add
add
test
add
add
add
and
push
scas
shr
adc
aaa
add
add
add
rol
add
call
add
push
(bad)
push
mov
inc
and
mov
inc
jnp
add
sbb
(bad)
lock
scas
fadd
add
frstor
push
cld
add
jno
clc
push
add
add
add
cmps
add
add
add
add
add
add
shr
cdq
xor
add
add
add
enter
add
pop
lea
xchg
jae
rol
add
fild
add
pop
ins
cli
xchg
dec
add
mov
adc
lock
inc
add
and
push
add
dec
push
jp
add
dec
shl
ds
add
or
and
mov
add
loope
retf
jl
inc
mov
cmp
inc
mov
int
add
sbb
push
or
dec
stos
mov
(bad)
mov
add
add
retf
dec
cmc
push
xchg
test
add
jl
daa
add
push
xchg
sub
out
pop
shl
jnp
inc
add
push
add
add
mov
xor
pop
mov
or
sahf
and
rol
inc
xlat
into
add
gs
add
mov
add
add
movs
xor
add
bound
add
jg
js
repz
pop
sbb
add
add
stc
imul
ret
add
jnp
pop
add
add
std
mov
sti
dec
into
add
jb
add
(bad)
(bad)
jo
add
add
out
cmp
inc
and
add
push
dec
mov
inc
add
iret
pop
add
add
aam
add
add
add
jmp
sti
arpl
add
fist
arpl
add
aas
ins
add
int3
aas
xor
ret
mov
jae
or
add
cmc
xchg
jmp
or
and
add
mov
add
add
fxch
cmp
push
and
mov
ins
mov
add
dec
test
or
mov
add
mov
inc
inc
test
mov
cmps
mov
xchg
shr
mov
adc
xor
add
scas
fsub
cwde
jne
add
add
add
add
fisttp
and
aaa
stos
fnstcw
leave
xor
xor
xchg
fld
mov
and
fs
add
sbb
push
add
clc
add
add
int3
push
stc
and
imul
add
or
add
mov
(bad)
(bad)
test
add
(bad)
jmp
add
movs
and
rol
add
mov
add
dec
repz
test
ins
xchg
xchg
push
add
add
and
dec
ins
add
add
mov
inc
mov
out
fdivr
mov
cmp
cmp
movs
push
xchg
stos
fld
test
add
add
add
add
test
cmp
add
pop
add
cmps
add
add
js
push
inc
push
jb
leave
enter
add
fnstsw
add
in
in
add
stos
loope
pop
(bad)
and
adc
lea
jae
rcr
(bad)
mov
mov
add
or
adc
int3
add
mov
add
ror
or
sub
add
add
or
scas
(bad)
loopne
in
cmp
push
mov
add
jns
add
test
loop
retf
push
cmp
sti
inc
stos
scas
add
mov
shr
add
(bad)
stos
popa
add
adc
lock
add
(bad)
addr16
xchg
add
push
test
jle
add
xor
push
sbb
dec
xor
mov
and
mov
out
add
add
lahf
jbe
mov
jle
fcomp
push
fmul
ficom
add
and
leave
adc
scas
fld
add
jae
sub
ret
fbstp
mov
leave
pop
add
push
jno
shl
and
into
add
add
xchg
add
ret
inc
and
add
sbb
xor
add
add
add
cmp
inc
cmp
add
rol
add
test
iret
int
sar
out
test
add
sbb
outs
movs
add
aad
add
add
pusha
sbb
das
leave
add
daa
jbe
add
rol
push
mov
sub
add
and
in
push
add
add
dec
into
fild
and
data16
addr16
cmp
(bad)
outs
sbb
ins
repz
mov
aaa
push
int
add
sbb
push
iret
in
add
mov
add
or
dec
loope
mov
add
add
mov
pushf
into
add
mov
mov
lea
inc
cmps
rol
add
add
add
push
push
pop
out
lahf
cwde
inc
xchg
add
popa
sub
mov
mov
sbb
or
add
xor
pop
add
add
adc
sahf
adc
xchg
popf
xlat
sahf
dec
sbb
je
add
add
add
adc
jnp
imul
inc
(bad)
jmp
clc
mov
jo
push
es
jle
jb
test
add
imul
cmp
mov
ds
xchg
outs
call
loope
add
sbb
add
mov
inc
cs
mov
sbb
pop
add
stos
mov
leave
dec
add
lods
xor
aad
iret
mov
cmp
add
mov
dec
jl
aas
cmps
push
adc
add
inc
cwde
sbb
sbb
add
rcr
shr
test
rol
add
clc
push
dec
retf
in
repnz
es
int
test
das
sbb
test
add
lea
push
sub
jecxz
stos
jle
test
add
add
add
mov
add
jmp
dec
cmp
add
sbb
push
adc
jb
imul
adc
popf
mov
les
xor
add
xchg
aam
xchg
add
add
pop
sub
add
sub
mov
mov
dec
xlat
add
jl
mov
add
add
and
cld
add
add
add
pop
imul
pushf
add
add
dec
add
add
pop
fcom
add
push
movs
cmp
not
add
xchg
add
add
mov
add
cmp
add
or
add
jns
div
push
addr16
cmp
xchg
xlat
pushf
pop
mov
mov
cmp
add
push
into
add
mov
out
das
jp
out
dec
inc
sbb
or
cld
not
and
call
or
xor
sbb
xlat
ret
pop
mov
cmp
sbb
add
inc
xor
cdq
mov
mov
scas
sbb
add
aad
mov
add
add
add
sbb
cdq
mov
add
cli
add
add
sti
not
xchg
in
xchg
push
mov
jae
add
jno
mov
je
jl
movs
add
adc
add
mov
add
pop
std
add
add
add
cmp
xlat
lods
rcl
add
push
push
idiv
aad
add
add
adc
mov
add
jge
sbb
add
add
cmp
push
scas
test
sti
out
sbb
add
ins
int3
push
push
adc
pop
dec
add
jbe
mov
loop
test
ret
lock
sbb
add
mov
es
ffreep
push
imul
or
(bad)
fisubr
add
dec
add
int
pop
xchg
add
imul
adc
add
push
sub
inc
not
add
add
lods
aaa
add
add
scas
add
xor
add
loopne
add
jne
cmp
fcom
rol
add
sbb
add
ror
ins
jbe
loop
lea
mov
push
pop
xchg
sub
out
stos
jecxz
and
cmc
in
add
jbe
add
cmp
aas
ins
mov
pop
in
xor
scas
jle
aas
jg
add
and
mov
add
cwde
push
add
into
push
ds
ret
in
sti
mov
icebp
add
add
cmp
shl
jge
add
add
xchg
jns
add
sub
add
or
xchg
jmp
cmps
mov
pop
inc
stos
jl
jae
add
out
outs
and
pop
jmp
add
sbb
add
je
add
add
add
xlat
jmp
add
repz
mov
aad
push
xor
push
in
mov
fwait
add
cmp
push
add
add
cmc
mov
add
jle
xor
cmps
inc
push
sub
add
cmp
pushf
pop
loopne
inc
fdivr
sbb
retf
and
jns
lods
sahf
add
add
movs
sub
cmp
mov
rol
add
or
sub
add
mov
add
add
add
ret
add
jle
add
pop
sub
jl
jecxz
dec
or
inc
rcr
test
add
jl
push
add
add
leave
or
pop
lds
cmp
push
pop
xchg
lods
jl
movs
add
jb
add
add
xor
movs
mov
mov
adc
add
mov
add
test
add
pop
dec
add
and
shl
loopne
add
cli
add
adc
add
add
add
add
jl
push
xchg
dec
repz
or
fwait
iret
push
cwde
retf
pop
inc
and
pop
xor
inc
mov
add
fucomi
jle
xchg
add
jmp
dec
add
add
add
adc
xchg
or
dec
add
add
inc
ret
hlt
add
loope
or
sub
and
ds
add
adc
jmp
dec
add
add
test
add
rcr
imul
arpl
fsub
jle
add
add
sbb
adc
repnz
int3
push
and
add
add
add
dec
pop
test
add
add
(bad)
sub
push
and
add
shl
cs
push
add
add
pop
ins
sbb
cmp
scas
jbe
or
out
pusha
outs
add
sar
adc
adc
sbb
mov
shr
push
or
mov
pop
das
pop
mov
fadd
xor
mov
push
rol
add
add
cwde
ins
outs
scas
xchg
in
inc
add
add
add
push
adc
nop
xchg
out
add
jb
aad
bound
add
or
adc
add
add
jb
pushf
ins
xor
mov
mul
out
fidivr
add
xchg
je
pop
(bad)
fstp
pop
imul
push
sub
lahf
pop
daa
mov
jnp
add
mov
mov
adc
add
add
add
repz
sub
mov
xchg
repnz
mov
dec
push
jmp
inc
jmp
inc
repnz
mov
add
adc
add
adc
pop
pop
push
sub
add
sbb
add
add
sub
add
test
add
aad
add
push
in
leave
add
pop
add
add
pop
sub
pop
mov
sti
repz
ss
jb
xchg
imul
fsubp
cmp
ret
xor
add
div
(bad)
call
xor
je
jmp
mov
add
push
add
cmp
add
add
ins
call
add
out
mov
ret
test
push
adc
adc
add
jbe
into
loop
add
mov
jmp
cld
xchg
cdq
jge
mov
mov
add
cdq
dec
cs
cmp
mov
lds
shl
sub
inc
add
add
loop
sbb
add
xlat
xlat
add
add
push
jmp
inc
push
sbb
loopne
rcl
cmp
dec
fstp
nop
pop
outs
sub
add
cmp
fdiv
std
pop
(bad)
clc
add
add
mov
add
push
or
fidivr
mov
bound
add
pop
add
add
out
add
xchg
in
cmp
imul
out
adc
add
jo
out
dec
add
dec
and
push
rcr
push
jecxz
add
daa
sahf
xchg
mov
in
add
iret
xchg
add
sbb
fucomi
loopne
loopne
mov
out
add
outs
test
add
add
add
xchg
add
fnsave
in
sbb
add
xchg
mov
test
shr
push
cmp
add
lea
cmp
jae
imul
add
jecxz
sub
pop
push
test
int
add
imul
in
scas
or
daa
out
and
cs
ins
dec
fimul
push
xlat
add
add
pop
dec
inc
cmp
xchg
mov
sbb
add
adc
xor
test
add
dec
aam
sar
cli
test
add
enter
pop
jg
add
xchg
add
add
sbb
or
and
ins
mov
sbb
push
jmp
mov
add
in
inc
xor
loop
add
add
dec
mov
nop
jno
xor
add
out
les
enter
add
sahf
adc
and
cmp
add
cmp
call
jne
and
pop
push
add
(bad)
dec
imul
add
in
cwde
icebp
add
add
add
or
add
outs
das
addr16
stos
aaa
mov
les
inc
inc
add
add
in
add
leave
sbb
mov
xor
jecxz
add
add
xchg
jo
add
add
int3
add
add
aaa
add
add
add
push
sbb
retf
push
ret
out
add
cmp
imul
adc
fs
add
add
cs
inc
sahf
jne
mov
or
add
add
or
(bad)
add
pop
and
daa
mov
aam
lods
jns
or
add
push
inc
stc
add
cwde
push
add
inc
mov
rol
int3
icebp
(bad)
fld
mov
retf
dec
lahf
cmp
pop
sbb
mov
inc
(bad)
inc
add
jnp
add
add
dec
add
add
add
add
add
add
gs
and
add
jecxz
out
add
cwde
add
rol
add
(bad)
xlat
arpl
inc
(bad)
test
dec
add
dec
in
movs
push
mov
add
fadd
add
add
mov
out
out
mov
iret
inc
ja
inc
popf
sbb
add
pop
fcom
fs
cmp
add
popf
data16
add
add
pop
add
adc
jg
add
add
es
cmp
or
add
mov
add
add
outs
add
xor
add
mov
cmp
push
add
sub
add
inc
stos
lods
hlt
sub
push
add
aam
ins
sub
add
jecxz
add
add
and
jae
dec
cmc
bound
mov
add
xor
sbb
pusha
jnp
imul
repnz
add
add
cdq
adc
mov
(bad)
jge
inc
add
add
add
mov
ret
(bad)
pop
retf
repnz
mov
fcom
jnp
and
add
ror
xlat
mov
sub
ds
add
add
lea
mov
add
aam
or
add
sbb
mov
add
adc
inc
dec
cmps
in
push
add
add
add
xor
cmp
push
add
stos
stc
dec
pop
jmp
and
push
ins
or
cmp
add
mov
mov
retf
add
mov
fsubr
in
pushf
add
add
mov
pop
jg
xor
loop
jmp
add
sub
fmul
xchg
js
dec
pop
push
push
jle
call
xor
mov
add
add
push
je
push
add
add
xchg
pop
ret
add
fst
and
call
mov
add
add
inc
cmp
inc
add
test
add
ret
sub
inc
shl
add
(bad)
sbb
add
push
sti
icebp
jge
popa
fcom
fst
test
add
cld
jmp
mov
sub
jg
jge
mov
dec
add
add
lds
xor
cdq
(bad)
cwde
add
shl
push
mov
scas
outs
call
iret
add
fsubr
movs
dec
or
and
pop
stc
arpl
add
xor
(bad)
add
fidiv
icebp
pushf
cmp
add
add
add
add
or
xchg
int3
push
push
and
stos
outs
inc
les
ins
mov
popaw
test
retf
addr16
add
outs
ins
mov
mul
add
iret
outs
sti
add
and
add
add
xchg
or
add
add
cmp
add
sbb
test
add
add
(bad)
cdq
cdq
ret
outs
add
add
push
mov
inc
cwde
sbb
push
add
lods
add
add
cmp
fucom
ds
out
dec
icebp
sbb
adc
sbb
sub
jmp
ds
in
inc
sub
jge
add
add
js
jp
clc
rol
inc
pusha
dec
fidiv
int
add
dec
call
or
or
add
add
sti
cmps
and
cmp
inc
scas
jns
imul
jae
mov
add
mov
(bad)
push
enter
sub
cld
adc
add
hlt
jae
(bad)
jnp
add
cdq
push
hlt
pop
cmp
dec
add
xor
(bad)
out
shl
push
jge
add
inc
loope
jg
mov
mov
sbb
add
pop
add
add
or
cmps
in
dec
add
hlt
add
add
fcmovbe
jg
rcl
daa
add
add
add
add
jo
ss
inc
ins
in
add
mov
mov
test
add
add
pop
dec
and
fimul
imul
add
add
add
add
test
add
jo
jbe
mov
pop
test
add
mov
mov
push
sahf
ja
inc
or
pop
xor
repz
add
adc
popa
adc
add
inc
or
mov
stos
adc
fimul
or
data16
aas
add
add
into
fidivr
iret
fdiv
gs
jle
dec
std
pop
loopne
imul
add
add
add
popa
sub
call
inc
and
add
or
aaa
add
add
push
test
mov
sahf
ror
daa
push
add
add
cs
add
mov
mov
fs
and
add
int
add
ret
or
cli
and
mov
add
add
and
xor
(bad)
or
mov
std
rol
sahf
imul
jb
add
(bad)
xchg
or
outs
mov
add
add
add
inc
mov
sbb
xor
add
xchg
mov
fld
dec
stc
add
xchg
add
add
cli
add
jmp
dec
pop
pushf
add
xchg
add
add
add
(bad)
movs
cmp
xchg
pop
sahf
add
add
stos
aaa
jecxz
jnp
push
outs
adc
movs
stos
cmp
push
add
mov
add
add
add
jnp
jg
add
add
dec
cwde
inc
mov
sbb
add
inc
bound
add
adc
add
icebp
jno
add
add
adc
and
add
bound
cmp
test
or
call
add
add
add
add
xchg
add
add
mov
lods
enter
add
int
cmp
xchg
add
hlt
repz
add
add
add
(bad)
clc
sti
pop
jmp
xchg
push
ss
jne
ins
scas
ins
jbe
and
mov
sbb
pop
adc
movs
mov
inc
sub
int
fs
sub
cmp
jmp
mov
adc
pop
add
loope
add
push
call
repz
add
lea
retf
add
add
pop
cdq
add
add
icebp
clc
xchg
add
add
add
xor
pop
mov
mov
add
test
in
out
add
add
sub
into
std
pop
fsub
add
or
retf
jb
mov
or
add
out
push
and
add
cld
loope
add
push
cmp
in
add
add
mov
push
add
add
mov
repz
ret
xchg
je
iret
stc
cmp
add
push
inc
xchg
fmul
inc
mov
mov
dec
shl
jbe
add
and
enter
cdq
fst
mov
das
aam
rol
sbb
add
add
movs
dec
jnp
xchg
jb
pop
add
add
or
add
add
jae
enter
aas
add
jmp
push
scas
call
add
push
jno
add
ins
mov
mov
int3
in
xchg
test
cmp
and
aaa
mov
sbb
(bad)
scas
xlat
lods
add
add
add
add
xor
add
sbb
shr
mov
push
arpl
add
add
out
sbb
or
add
dec
mov
mov
mov
sbb
out
and
jmp
or
in
(bad)
das
fs
add
add
xchg
test
add
sbb
add
test
icebp
and
pushf
int3
mov
ins
jbe
add
add
add
xor
add
add
add
add
stos
loopne
push
mov
push
hlt
jmp
push
add
fisubr
jmp
popf
repnz
add
test
imul
stc
mov
mov
add
out
mov
dec
pop
clc
adc
add
stos
test
dec
fidivr
add
mov
cmps
cmc
jle
add
push
mov
sbb
add
mov
dec
aas
and
add
and
lock
jg
push
jb
bound
sub
dec
jo
js
push
jge
add
iret
mov
mov
add
add
sub
xchg
push
add
add
mov
leave
add
xor
add
mov
add
inc
(bad)
(bad)
add
add
es
add
add
or
add
xchg
jle
add
add
les
add
(bad)
out
stos
lea
cdq
loopne
sahf
mov
add
add
add
cdq
arpl
add
and
dec
adc
mov
adc
scas
sub
(bad)
ins
add
add
ja
add
call
arpl
in
or
add
add
xor
loop
inc
cmc
mov
add
jbe
inc
mov
mov
ret
jg
add
pop
leave
add
cwde
add
hlt
push
pushf
inc
push
retf
jle
pop
lahf
add
add
add
xchg
cmp
add
dec
cmp
add
add
jecxz
ret
xor
ds
dec
movs
mov
jne
dec
add
add
jo
outs
cmps
xor
pop
jae
inc
jle
outs
add
mov
add
clc
ds
dec
(bad)
and
add
push
into
repz
add
add
adc
es
lods
outs
add
add
xchg
mov
or
add
call
jnp
cmp
out
std
adc
jns
pop
adc
test
nop
push
sbb
aaa
stos
add
add
push
movs
adc
add
test
add
mov
add
add
xchg
aas
jg
inc
add
add
xchg
sub
add
fadd
call
xchg
add
mov
ins
pushf
cdq
test
inc
pop
or
loopne
test
add
add
add
cmp
lea
in
add
not
enter
add
test
pop
lea
clc
mov
xchg
add
jg
xlat
enter
add
dec
cwde
dec
les
jmp
and
les
adc
add
test
cld
xchg
push
add
add
add
add
mov
jmp
add
dec
xchg
cmp
xchg
call
add
inc
retf
fs
mov
inc
movs
add
add
add
add
add
add
add
add
add
add
icebp
and
push
sub
add
adc
(bad)
icebp
js
rcl
add
add
dec
sahf
mov
add
mov
and
aad
stos
data16
jg
ret
push
add
add
add
add
jecxz
rol
out
test
cmps
nop
xor
sahf
loop
push
xor
pop
imul
bound
add
retf
add
lods
inc
xchg
add
add
in
inc
cmps
and
jnp
jns
rol
add
mov
and
jnp
xor
mov
retf
adc
pop
div
aas
cwde
fucom
jp
add
cli
pop
cmp
in
add
pop
and
add
scas
and
loopne
fwait
push
add
sub
cmp
mov
xor
add
cmps
add
add
xlat
imul
mov
imul
sbb
mov
idiv
fwait
sub
xor
add
pop
call
xchg
xor
add
cmp
mov
add
scas
mov
(bad)
jl
test
dec
jp
pop
and
add
dec
fld
add
mov
lock
dec
mov
xor
stos
jmp
mov
cmps
jb
mov
jmp
mov
cmp
add
add
mov
push
fld
dec
add
mov
pop
rol
add
cmp
or
test
cmp
mov
add
out
cld
add
pop
add
add
add
add
das
sbb
jbe
add
push
gs
ins
mov
data16
jbe
outs
cmp
fst
scas
imul
or
bound
enter
push
jp
add
push
out
mov
cmp
mov
bound
add
mov
cmp
xor
mov
add
les
in
inc
mov
mov
inc
mov
adc
push
cmc
jecxz
pusha
fucomp
add
add
inc
data16
add
push
add
movs
idiv
sbb
movs
mov
and
push
jmp
les
add
mov
rol
add
shl
les
gs
popa
imul
rol
add
nop
(bad)
outs
add
add
pusha
inc
push
add
rcl
mov
push
out
or
sub
add
ins
test
arpl
sub
je
sub
add
jmp
test
lds
cmp
add
rcr
xor
mov
mov
add
inc
scas
stos
adc
mov
test
add
or
out
pop
pop
and
xchg
mov
lds
add
add
mov
inc
add
and
add
cmp
inc
idiv
add
xchg
clc
ss
cmp
add
add
cli
popf
add
jns
push
jo
pop
sub
add
add
test
add
mov
sub
cmc
lock
sbb
repnz
out
daa
push
imul
jno
jmp
dec
add
add
cmp
add
enter
mov
nop
add
add
add
int3
add
adc
add
add
add
push
mov
call
add
push
call
sub
add
add
pop
add
(bad)
dec
test
sbb
mov
push
cmp
jae
add
(bad)
or
cmp
mov
push
pop
dec
xor
pop
sbb
add
xor
mov
aaa
dec
inc
push
call
fidiv
add
add
and
out
sub
push
cs
pop
jmp
call
add
xchg
pop
rcr
mov
push
push
les
add
test
add
xchg
imul
and
loope
out
xlat
(bad)
pop
div
into
loop
add
mov
add
jmp
add
xchg
xchg
push
add
add
mov
daa
lahf
add
push
add
in
mov
add
stos
add
add
mov
add
add
sar
dec
call
inc
push
in
add
inc
mov
int
mov
int
test
sldt
add
cli
add
ins
dec
ds
xchg
cmps
cmp
test
mov
add
jecxz
shl
dec
add
add
add
xchg
xchg
inc
add
jb
xchg
add
add
ss
add
inc
jg
push
add
ficomp
sbb
add
sub
add
or
sub
push
mov
add
movs
add
je
push
add
add
or
push
adc
pop
or
retf
bound
add
xor
and
add
inc
vsubpd
pop
nop
push
fadd
add
call
aas
mov
jecxz
dec
outs
js
mov
add
js
daa
and
add
add
loop
add
adc
add
xor
ins
cmp
add
rcl
ja
add
add
add
cmp
jns
sbb
cmp
ret
rol
pushw
dec
cmc
pop
xchg
pop
add
add
js
mov
add
add
inc
dec
push
int3
sbb
add
ret
push
or
pop
imul
mov
push
add
add
lahf
push
pushf
push
add
xor
adc
xor
into
dec
pop
dec
jmp
in
add
add
pop
jno
add
(bad)
mov
fnsave
pop
push
sbb
mov
add
dec
or
xchg
mov
add
inc
add
mov
add
call
scas
mov
add
mov
in
fldcw
xor
mov
add
shr
pop
fwait
pushf
jo
mov
dec
sbb
pusha
lods
jle
out
sub
mov
add
idiv
ror
add
add
outs
xor
mov
out
cmp
add
into
add
add
mov
sahf
add
movs
push
imul
pop
in
fstp
sar
jb
cmp
or
dec
jecxz
add
fs
and
mov
xchg
or
inc
hlt
sub
sbb
mov
cdq
xor
out
mov
inc
add
mov
add
xlat
rol
mov
and
mov
dec
mov
test
hlt
add
add
pop
add
add
sbb
add
das
clc
add
mov
adc
dec
sub
lea
cmp
add
sbb
add
mov
std
test
ja
sbb
inc
dec
shl
add
fadd
add
add
add
dec
loopne
add
dec
shr
dec
add
add
jae
ja
mov
cmp
add
pop
orps
test
pop
leave
adc
mov
pop
shr
out
jle
xor
cwde
adc
add
add
es
or
icebp
bound
cmp
movs
add
sbb
mov
adc
add
add
mov
add
add
and
add
add
fild
add
add
xchg
lahf
add
mov
mov
mov
pop
mov
add
pusha
xor
in
dec
cld
push
je
sbb
inc
add
add
test
push
add
add
xchg
inc
aad
mov
dec
sti
out
jmp
rol
sahf
scas
add
enter
sub
mov
add
add
pop
leave
push
jl
push
nop
mov
fiadd
add
push
ja
add
fdiv
add
(bad)
add
lds
push
and
add
das
hlt
cmp
add
test
add
push
push
and
mov
add
nop
cmps
pop
nop
push
and
add
mov
ret
pop
or
adc
jnp
test
xchg
mov
stos
es
add
pusha
cmc
pusha
(bad)
adc
retf
cmps
add
add
in
mov
pop
imul
add
xor
add
sbb
add
mov
movs
mov
cmp
das
add
call
xchg
scas
sub
add
add
shr
xor
add
add
das
xor
add
(bad)
add
sub
aad
xor
aas
jmp
add
daa
fiadd
add
pusha
xchg
inc
fcom
add
fwait
pusha
verr
fnstenv
das
cwde
add
cmp
cmp
lock
jmp
add
mov
add
mov
stos
add
ds
add
(bad)
in
sbb
dec
add
(bad)
stc
push
arpl
sub
add
add
ret
jae
add
outs
sub
xchg
mov
ins
add
int
cmp
cmp
bound
or
dec
add
dec
dec
add
scas
add
push
test
add
cmp
(bad)
sub
and
stos
add
inc
xchg
add
jmp
das
add
push
add
xchg
ret
retf
into
pop
hlt
add
sub
rol
mov
stc
mov
retf
jp
add
popa
leave
xor
add
or
mov
fld
add
add
ins
loopne
add
fadd
mov
xchg
add
push
ja
add
adc
out
outs
add
dec
enter
xchg
mov
les
mov
imul
push
shr
xor
add
mov
add
sbb
add
add
add
and
pop
sbb
pop
cmp
pop
jnp
iret
retf
and
add
add
jl
push
inc
stc
or
repz
lea
add
inc
call
or
ret
add
(bad)
rol
push
push
add
jo
add
add
jmp
sti
add
add
mov
movs
add
add
mov
push
add
mov
call
pop
add
cmp
jecxz
jp
stos
cmp
mov
(bad)
movq
add
aad
add
add
outs
out
les
dec
or
push
push
and
add
xchg
mov
and
add
add
push
push
scas
add
inc
jb
inc
jmp
add
add
pusha
cs
add
imul
jmp
add
push
add
das
add
retf
cmp
or
add
retf
pusha
jle
add
add
ficom
add
test
sub
add
out
jne
mov
sub
xchg
add
xchg
inc
add
add
les
pop
es
add
push
pop
stos
jbe
add
add
mov
add
jp
or
add
pop
lea
add
mov
test
add
int3
xchg
inc
cdq
inc
add
inc
outs
push
lods
fild
add
sub
jbe
cmps
jmp
jecxz
mov
mov
add
pop
mov
add
std
jno
leave
jne
lods
test
fcomi
mov
add
mov
add
add
add
jp
in
(bad)
cwde
add
xchg
add
xchg
add
shl
out
stos
jecxz
add
jmp
nop
aam
inc
faddp
int
fwait
movs
ret
movs
pushf
add
add
mov
add
int3
cmp
add
sahf
pop
add
add
add
popa
jle
call
push
add
lahf
add
in
add
and
add
cld
jbe
add
inc
add
pop
repnz
jo
jle
sahf
pop
mov
jecxz
sbb
mov
add
or
cmp
add
iret
scas
dec
mov
out
add
pop
cmp
jns
add
les
call
sti
scas
push
ret
dec
pusha
add
add
test
add
add
lods
add
clc
mov
add
(bad)
in
movs
or
into
add
sbb
jmp
sub
jg
push
sub
jbe
imul
in
add
seta
mov
jp
or
add
movs
cmp
inc
ficom
pop
add
in
popf
bound
xor
add
retf
push
aam
leave
out
add
add
pop
clc
int3
lods
add
inc
xor
push
and
cld
push
add
mov
pop
pop
push
add
iret
add
ds
(bad)
int
add
pushf
mov
xchg
pop
sbb
add
add
inc
jge
add
mov
imul
shl
cwde
(bad)
mov
aad
add
int3
add
in
add
pop
jo
stos
add
(bad)
dec
adc
add
add
mov
and
add
hlt
add
sbb
sub
cmc
inc
add
add
(bad)
mov
add
icebp
stos
add
xor
retf
std
push
hlt
jle
loop
inc
rol
add
push
add
or
add
mov
add
enter
add
add
jns
mov
dec
loopne
stos
add
cmp
rcr
add
xchg
sub
jl
add
add
retf
jl
cmp
add
add
cmc
add
pop
add
push
mov
lahf
fstp
add
fwait
stc
add
add
jge
add
leave
push
add
shl
sub
retf
jp
call
scas
dec
push
ret
add
in
adc
lds
add
retf
sub
add
sub
add
add
es
pop
out
add
xor
push
add
add
sub
add
add
aas
add
rcl
and
ror
sahf
push
or
add
movs
add
nop
add
imul
jg
add
iret
jmp
jg
xchg
shl
add
pop
pop
add
in
mov
add
movs
clc
add
xlat
push
add
daa
add
or
jg
rcr
mov
add
or
add
xchg
clc
add
xor
add
push
jg
add
call
pusha
add
cmps
add
(bad)
add
into
jns
jecxz
adc
push
sahf
add
sub
adc
add
movs
jns
add
fisubr
pop
pop
sbb
add
add
add
jp
mov
sub
add
iret
mov
scas
ins
inc
xchg
and
add
mov
in
mov
std
out
push
xor
mov
fwait
add
dec
xor
rol
iret
jmp
add
pushf
add
popa
mov
add
inc
add
lahf
inc
adc
aam
mov
push
xor
fdiv
aas
xor
add
sti
bound
loop
mov
test
cmp
add
hlt
add
(bad)
xchg
pop
xchg
loopne
add
jecxz
add
jns
adc
pop
fisttp
test
add
int
fs
jno
popw
bound
add
test
xchg
cmp
jne
add
adc
xor
and
pop
in
add
add
nop
inc
pop
add
jno
inc
rcr
pop
mov
add
add
mov
xchg
movs
cmp
fs
aas
add
pushf
test
sbb
jle
jl
and
or
cmps
rol
add
fstp
out
icebp
lea
add
add
add
nop
test
add
cmps
cmp
adc
mov
(bad)
ins
add
mov
cmp
add
mov
inc
shl
inc
add
iret
adc
add
push
inc
add
xchg
add
push
dec
add
and
mov
or
add
push
inc
and
add
mov
clc
sub
jns
inc
push
js
pop
push
cmps
nop
arpl
add
add
mov
add
inc
jae
add
scas
add
push
add
or
push
ins
imul
adc
cs
aam
repnz
shr
jae
and
add
retf
mov
and
jno
ja
add
out
out
mov
mov
xlat
sub
lods
cmp
mov
jnp
int
cmp
add
jle
add
cdq
pop
popf
add
or
add
add
and
jp
(bad)
sbb
or
inc
add
pop
add
sbb
fild
je
popa
fwait
in
pop
imul
sub
add
jge
and
adc
jns
dec
neg
adc
nop
add
repnz
sahf
xor
mov
add
into
add
test
xor
mov
retf
ss
add
cmps
inc
daa
cmp
je
(bad)
or
out
push
add
xchg
loope
xor
add
sub
jo
push
test
add
icebp
mov
sar
stc
add
fwait
add
adc
pop
dec
dec
add
repz
push
pop
pop
add
mov
dec
stos
pusha
dec
adc
adc
push
out
pop
rcl
add
mov
and
mov
xor
add
adc
add
cmp
fs
add
mov
pop
outs
add
add
add
push
cld
add
test
add
push
push
(bad)
(bad)
adc
sub
outs
repnz
add
lods
add
sbb
add
sub
add
(bad)
or
add
fldenv
add
push
mov
bound
add
gs
mov
cwde
leave
sub
add
ins
mov
cwde
jp
rol
or
or
mov
add
and
loopne
add
and
pushf
add
daa
mov
add
push
loopne
cmc
sbb
dec
shl
add
out
jmp
loope
enter
pop
push
adc
xor
add
add
sub
aaa
add
mov
sbb
and
dec
pop
push
add
leave
sub
add
push
cld
ins
or
push
cwde
xlat
repz
mov
xchg
add
push
xor
or
mov
and
jns
or
stos
add
sub
mov
add
mov
xchg
mov
(bad)
mov
jp
fsubr
sar
sbb
push
ins
jno
shr
enter
inc
test
xchg
adc
jg
pop
mov
xchg
add
imul
pushf
jbe
add
pop
push
mov
mov
adc
push
xor
add
retf
(bad)
sbb
aam
push
add
mov
loopne
xor
shl
and
mov
call
loopne
ins
test
adc
add
out
sbb
add
repz
repnz
movs
or
shl
outs
jmp
add
(bad)
jns
add
xlat
and
push
add
jns
cmc
jo
retf
ins
mov
xchg
xlat
xchg
aaa
mov
cmps
(bad)
rcr
mov
jg
pop
sti
icebp
mov
add
int3
add
mov
sub
sbb
dec
pop
xor
lock
cmp
mov
add
jmp
and
pop
out
add
nop
ins
std
mov
outs
cmps
mov
push
push
into
xor
pop
jge
add
sbb
and
mov
shr
lock
push
xor
adc
pop
mov
add
fild
add
mov
dec
xchg
fldenv
add
mov
add
jns
cmp
les
retf
add
std
add
ds
nop
push
add
fs
jmp
add
mov
dec
add
add
dec
pop
pop
gs
int3
test
add
cdq
add
add
bound
dec
ret
mov
mov
cli
pop
pop
xchg
leave
mov
push
inc
lea
popa
add
sbb
dec
jge
add
jbe
in
lea
and
add
icebp
mov
pop
add
mov
mov
jmp
inc
add
xor
mov
(bad)
fld
jb
pushf
adc
push
cmp
xchg
add
popf
add
mov
xchg
jnp
push
mov
pop
scas
add
add
call
cs
retf
mov
mov
mov
or
nop
add
xor
inc
(bad)
call
popf
mov
lahf
cdq
dec
add
xchg
jns
aaa
add
into
add
xchg
(bad)
call
jmp
cmp
jp
icebp
add
add
loopne
jo
pop
mov
jle
lds
lea
dec
mov
jbe
push
add
lods
sbb
or
pop
clc
add
fucomp
or
add
jo
shr
push
ret
xchg
add
sar
jmp
mov
inc
sbb
arpl
add
add
out
pop
out
mov
fcomp
cmp
retf
imul
xchg
sub
idiv
add
jmp
sti
ret
add
mov
bound
fs
or
cmp
out
jp
out
add
and
add
sub
xchg
mov
mov
and
enter
xor
fdiv
sbb
or
sahf
push
add
cmp
add
and
add
mov
sub
add
sbb
pushf
leave
jbe
fwait
stos
(bad)
pop
xchg
add
add
add
add
push
jae
xor
add
repz
call
out
mov
daa
cli
sbb
fucom
cmc
mov
add
inc
jle
popf
add
or
add
cmp
cmc
and
sub
into
jmp
mov
inc
jl
ins
cdq
imul
retf
cmp
add
mov
push
ret
daa
dec
xchg
add
xchg
add
mov
mov
nop
add
jmp
adc
add
jnp
xor
or
adc
lods
adc
out
jp
mov
fdiv
pop
movs
jns
xchg
out
mov
pop
int
add
add
pop
(bad)
int
add
fs
push
stos
pop
add
adc
fadd
add
add
push
adc
call
imul
cdq
add
or
add
sub
fld
add
mov
mov
enter
mov
push
mov
pop
pop
stc
es
sub
fist
add
inc
xchg
xchg
and
add
sub
xchg
push
(bad)
loope
and
pusha
rcl
lds
dec
add
mov
sub
mov
push
outs
xchg
mov
repnz
jne
ins
mov
mov
pusha
inc
rol
int
rol
mov
add
sub
cmp
add
inc
imul
add
in
imul
push
push
jnp
rol
add
mov
push
lods
test
sar
cld
mov
add
xchg
dec
add
and
add
add
add
push
jns
and
add
xor
add
mov
add
sbb
rcl
mov
repz
cmp
sbb
add
add
jmp
fcmovu
add
ins
add
dec
fadd
aam
inc
cmp
cdq
imul
arpl
add
inc
or
inc
jae
test
adc
add
fs
push
add
add
ficom
pop
push
data16
or
lock
out
rcr
int
add
test
xor
retf
jle
and
pusha
cmp
cmc
mov
pop
dec
out
push
fidivr
ja
mov
rol
add
pop
pop
add
inc
mov
jno
add
repnz
gs
fadd
add
fst
add
jbe
sbb
loopne
pop
adc
jecxz
xchg
sbb
in
inc
add
add
and
add
pop
mov
repnz
or
ins
add
xor
sti
fisttp
sub
pop
retf
out
fwait
loope
scas
ins
call
lock
add
addr16
mov
fist
popa
cmp
or
in
add
imul
or
add
dec
add
xor
push
add
add
ret
add
mov
add
add
fld
mov
add
inc
(bad)
xchg
movntq
inc
fwait
icebp
add
in
and
add
dec
add
lods
add
sti
jle
sbb
add
add
cdq
mov
pop
call
cmp
add
jmp
xchg
add
test
iret
mov
sbb
outs
add
mov
push
scas
mov
sbb
enter
add
push
cmc
(bad)
mov
xlat
add
push
popf
add
outs
mov
push
add
dec
add
push
jbe
mov
cli
outs
xor
or
add
xchg
pop
or
or
and
or
leave
mov
push
fs
sub
add
sbb
add
lods
inc
add
and
xchg
add
jne
out
jmp
push
sbb
lods
sbb
neg
out
out
test
add
add
add
ficomp
add
sub
pusha
dec
retf
test
jmp
fnstenv
es
or
dec
cmp
add
add
and
add
arpl
ins
retf
leave
and
js
int3
ficom
sbb
sti
inc
sub
aas
fisubr
pop
sbb
push
push
ret
outs
test
add
jbe
pusha
pop
mov
cwde
pop
and
add
push
imul
add
add
lahf
mov
add
imul
ss
imul
push
add
stos
fs
imul
jno
outs
xchg
out
sub
ror
or
sub
(bad)
(bad)
jmp
add
enter
nop
dec
and
ins
cld
push
xor
(bad)
imul
add
ret
and
xchg
je
mov
mov
inc
add
push
dec
add
adc
mov
fwait
push
lahf
add
leave
add
out
pop
dec
or
or
pop
mov
mov
add
xor
push
nop
xor
sub
add
stc
push
je
dec
dec
repnz
mov
add
scas
fstp
dec
das
xor
das
xor
jmp
pop
nop
dec
pop
mov
xor
cmp
cs
movs
adc
pusha
nop
add
das
push
mov
add
adc
fisttp
imul
cmp
or
inc
mov
add
add
scas
addr16
dec
cmps
and
fisttp
add
js
add
xor
xlat
pop
add
and
mov
out
add
imul
fwait
cld
xchg
in
add
mov
(bad)
lea
lock
pop
es
adc
push
add
xor
cmp
push
mov
add
rol
jmp
add
add
add
mov
adc
outs
add
add
add
inc
add
add
add
in
daa
clc
ins
cli
sahf
fidiv
cld
and
and
add
out
add
movs
mov
mov
mov
mov
rcr
sbb
mov
add
popf
cmps
mov
mov
es
inc
movs
ret
mov
add
sbb
add
in
in
sub
pushf
push
or
and
and
inc
mov
push
mov
jmp
pop
add
pop
call
pop
stos
fadd
outs
ja
sub
add
push
add
add
loop
inc
add
push
mov
cmp
cmp
pop
sub
cmps
push
inc
(bad)
jb
add
push
xchg
call
sub
fiadd
mov
add
add
dec
adc
dec
mov
xchg
pop
loopne
jbe
mov
add
mov
xchg
adc
add
sbb
jae
xor
movs
cmp
pop
and
das
js
add
mov
add
inc
xor
mov
xlat
inc
cdq
mov
test
sti
enter
sbb
add
test
mov
inc
add
push
ss
push
mov
add
xchg
jmp
aam
sub
add
sub
xchg
push
mov
xchg
inc
sub
and
mov
out
xchg
(bad)
push
sbb
add
aaa
pop
inc
mov
dec
mov
add
ret
inc
mov
pop
call
add
sub
pop
adc
add
shl
jae
aaa
xchg
outs
js
jo
mov
add
push
js
add
imul
not
cwde
movs
imul
and
add
add
add
mov
dec
retf
call
arpl
mov
shl
mov
and
push
mov
stc
and
int
mov
and
stc
mov
mov
xchg
jl
inc
xchg
add
lock
call
push
mov
das
mov
jl
cmps
dec
add
clc
lods
add
dec
xlat
gs
add
fild
cdq
adc
add
xchg
sbb
in
or
repnz
sub
add
push
mov
add
nop
add
test
jecxz
or
and
icebp
ds
inc
inc
adc
ret
mov
es
loope
fiadd
add
ja
add
jmp
into
add
fadd
add
iret
jne
dec
sbb
dec
fiadd
add
popf
or
add
(bad)
aad
sbb
sbb
add
pop
ja
es
push
inc
pop
inc
add
add
dec
fmulp
adc
mov
(bad)
pop
(bad)
or
cmps
or
cld
jl
repz
jae
call
loopne
cmps
xor
mov
add
add
in
popf
and
pushf
add
add
push
in
dec
push
cmp
xor
inc
aaa
pop
push
mov
fcomp
aad
rcl
push
dec
repnz
int
shl
add
xchg
inc
nop
lds
add
popa
add
pop
xchg
adc
add
and
mov
add
shl
mov
add
fdiv
and
addr16
sub
dec
mov
add
mov
jo
mov
sbb
xor
jmp
(bad)
std
scas
retf
inc
retf
int
jne
add
xchg
(bad)
xchg
pusha
out
pop
dec
add
scas
loope
xor
lods
push
add
jge
push
xor
nop
xor
cmp
add
(bad)
sub
add
test
add
add
xlat
enter
test
into
(bad)
sbb
sbb
add
pop
push
daa
or
jecxz
mov
push
xor
add
adc
jg
add
pop
lods
mov
push
aaa
pop
sub
add
inc
retf
cmp
(bad)
retf
fadd
add
cld
not
mov
add
pop
ss
rol
cdq
add
inc
bound
add
in
or
add
fchs
mov
mov
ss
mov
jg
rol
add
je
dec
outs
lds
pop
xlat
fcmovu
mov
in
das
call
xor
push
(bad)
in
add
in
add
sub
rol
add
mov
add
mov
add
pop
add
or
add
lahf
mov
mov
(bad)
mov
pop
jmp
adc
xchg
(bad)
or
je
(bad)
sub
mov
leave
loopne
pop
ds
push
outs
cmps
add
movs
sbb
lods
punpckhdq
xchg
push
push
sti
aam
push
sbb
add
mov
ror
xchg
scas
add
leave
mov
add
push
add
mov
add
add
fisub
idiv
xchg
fisttp
sbb
adc
add
aam
jns
popf
lods
rcr
fwait
call
add
idiv
sbb
add
cmp
sahf
sub
cmp
dec
sub
add
or
xor
xor
add
jp
aam
add
cmp
inc
(bad)
pop
add
sub
add
cdq
sbb
daa
cs
cmps
inc
add
add
or
add
add
das
pop
mov
mov
and
add
add
add
repz
cmp
add
mov
test
cmc
cmps
jbe
jg
jb
push
cmp
mov
add
mov
lods
js
add
jp
fadd
dec
push
mov
add
dec
gs
(bad)
fidiv
jne
sbb
add
add
sub
leave
sar
ins
test
push
sbb
jb
mov
add
fldenv
cs
ss
daa
(bad)
jecxz
test
pop
add
pop
xlat
in
add
add
add
lods
inc
pusha
je
jne
add
inc
ins
add
and
add
mov
mov
cdq
mov
in
push
pop
imul
jb
add
push
or
das
test
mov
fistp
add
push
cmp
pusha
bound
add
(bad)
ds
inc
fcom
add
pop
adc
add
add
pushf
mov
daa
into
pop
repnz
pop
mov
push
jge
sbb
imul
add
sub
push
mov
repnz
(bad)
inc
out
test
add
in
push
or
ins
push
cli
iret
jecxz
pusha
leave
add
cmp
out
push
(bad)
sub
add
add
xchg
cmp
add
xchg
mov
cmp
add
popa
adc
mov
add
iret
inc
add
dec
xchg
push
and
add
bound
aam
add
cmp
add
sbb
sbb
push
inc
fild
sbb
clc
xchg
sbb
cmp
add
push
add
lea
and
(bad)
sbb
xchg
movzx
inc
add
dec
cmps
xor
cmp
xor
lds
sbb
add
xchg
cld
je
test
fld
add
inc
cwde
repnz
sub
test
pop
xchg
nop
scas
xchg
nop
outs
sub
push
(bad)
cmp
cmp
inc
in
add
je
sub
sbb
sbb
in
call
sbb
mov
sahf
clc
mov
jo
out
dec
js
sbb
xchg
sub
jo
les
or
scas
iret
lea
out
lahf
add
cdq
add
(bad)
push
pop
ret
aad
mov
jg
push
icebp
stos
xor
jb
nop
sbb
adc
repnz
xchg
add
in
(bad)
scas
add
cmps
add
scas
inc
add
mov
inc
int
pop
pop
add
stos
pushf
test
call
add
pop
sbb
xchg
and
mov
push
jb
add
add
dec
(bad)
cmp
enter
aaa
lds
test
aas
nop
frstor
(bad)
daa
in
addr16
popa
iret
add
pusha
add
add
pop
add
mov
sbb
adc
fdivr
mov
sub
rcr
out
push
into
enter
push
mov
out
icebp
cmp
add
popa
mov
mul
mov
cs
out
add
not
add
sub
xchg
movs
out
add
xchg
fbstp
xchg
mov
add
or
adc
sti
adc
cld
add
mov
add
ins
xor
mov
jg
add
adc
jo
add
sub
inc
add
mov
add
push
mov
add
cdq
pushf
add
rol
push
xlat
add
(bad)
jge
fiadd
add
pop
add
cmp
arpl
rol
fst
add
pop
aam
aaa
cmp
mov
es
retf
mov
call
add
data16
add
mov
mov
je
std
jne
fild
add
nop
add
sti
push
ficom
add
enter
push
ja
xor
add
ja
mov
xchg
ins
dec
jo
add
pop
(bad)
movs
(bad)
mov
gs
fldenv
cs
cmp
push
add
clc
in
sbb
add
mov
mov
fimul
shr
mov
add
sub
fcmovne
aam
jae
add
add
add
sti
nop
js
xchg
cdq
loopne
cmp
dec
add
icebp
jp
add
(bad)
sub
push
nop
push
repz
inc
or
add
ins
pop
lea
mov
(bad)
push
test
or
dec
dec
les
add
dec
xor
sar
add
add
mov
or
gs
mov
xchg
or
pop
retf
add
xor
or
ins
cwde
or
dec
jge
add
loopne
sub
stos
mov
arpl
pop
add
add
add
stos
mov
stos
pusha
ss
dec
loope
test
cmp
out
scas
add
add
(bad)
add
mov
cmp
pop
sti
adc
add
add
mov
sub
sbb
jno
add
popa
mov
add
int
dec
fstp
xor
cmp
adc
add
cdq
fst
in
fs
xor
pop
add
sbb
mov
add
pop
add
(bad)
pop
mov
gs
xor
add
or
push
lds
pop
add
push
add
dec
mov
retf
sub
add
out
or
add
cmps
add
cld
mov
pop
sbb
sub
add
in
movs
xchg
xchg
in
idiv
jle
add
(bad)
jge
std
dec
pop
out
sub
jbe
sub
inc
dec
add
xor
inc
xchg
adc
add
ret
dec
pop
pop
div
test
or
int3
or
or
add
icebp
inc
mov
loopne
aas
test
add
js
xchg
add
add
in
mov
fisttp
add
mov
sub
add
jnp
inc
jo
add
add
rol
ins
cs
push
cmp
xchg
jne
add
fmul
adc
add
pushf
mov
mov
jns
mov
sub
and
sub
add
rol
add
cld
lds
push
add
mov
jae
pushf
int3
pop
xlat
jmp
test
retf
sub
jp
(bad)
xchg
cld
fwait
add
mov
jg
mov
imul
lods
ret
cs
push
mov
ins
add
adc
shl
cdq
std
add
jns
popf
dec
scas
add
mov
and
xchg
sub
popf
xchg
mov
mov
xor
cmps
add
(bad)
repnz
(bad)
sub
imul
add
movs
loop
scas
int3
xchg
out
pop
lods
add
test
sbb
cmps
repnz
call
mov
push
jle
jmp
add
dec
mov
cs
mov
stos
add
sub
dec
cld
add
lds
or
mov
cmps
add
dec
add
xchg
adc
push
jns
or
mov
in
inc
jecxz
and
add
push
push
add
je
pop
xchg
sti
out
lea
add
xchg
pop
add
mov
jg
push
add
sub
mov
fwait
retf
add
pop
and
inc
add
push
xchg
pop
push
psubb
and
repz
mov
arpl
inc
cmp
add
aam
add
iret
dec
dec
add
add
add
add
iret
pop
jle
aas
cmp
add
and
shr
add
pop
lahf
movs
dec
mul
mov
mov
xchg
ret
add
xchg
xor
iret
outs
push
add
pop
in
outs
xchg
stos
add
not
jg
cmc
daa
add
and
cld
inc
cwde
jge
loop
add
int3
inc
sahf
or
inc
in
dec
lods
imul
add
pop
and
xor
pop
pop
out
add
cld
stos
sub
xchg
das
adc
test
adc
(bad)
and
add
inc
out
aad
add
xor
add
xor
or
fild
sub
cwde
add
call
cmps
icebp
add
push
nop
mov
call
or
retf
dec
mov
add
inc
add
add
push
mov
ror
in
jge
out
dec
rol
add
xor
add
mov
pop
fldcw
loope
cmp
cmps
lock
clc
or
xchg
out
add
sub
xor
int3
jo
ins
sbb
(bad)
push
add
rol
add
pop
jp
sbb
mov
add
jge
add
add
push
cmp
sbb
xor
add
lds
xor
imul
leave
inc
loope
add
jnp
xor
inc
cmps
movs
ja
test
pushf
add
pop
add
inc
push
movs
jge
xor
(bad)
es
xor
and
add
das
movs
mov
lods
jge
les
movs
jl
or
out
xor
repnz
jmp
jg
add
sbb
xor
or
add
mov
or
sbb
jnp
and
add
popf
dec
add
sbb
push
mov
aad
add
mov
push
sub
xchg
sbb
pop
into
ret
jmp
add
arpl
sub
xor
imul
jbe
add
jecxz
call
pop
add
xor
loopne
inc
add
sub
dec
retf
add
add
add
push
icebp
cmps
add
scas
push
sub
add
ficom
test
add
retf
jl
cmp
and
sub
sbb
add
sahf
or
or
rcl
test
sub
mov
cmp
adc
out
test
add
inc
ret
pop
jge
add
push
pusha
pop
mov
push
out
cmps
adc
pop
add
lock
xchg
mov
ds
pop
pop
lock
sar
sub
inc
add
push
hlt
ja
mov
sbb
call
add
jnp
loope
add
or
adc
cmp
add
(bad)
pop
cmp
retf
add
gs
mov
xchg
in
out
pop
add
mov
add
mov
xchg
mov
jno
push
add
jge
sbb
test
(bad)
(bad)
push
hlt
ins
and
sbb
sahf
adc
arpl
jae
add
or
imul
movs
or
xor
xchg
imul
mov
pop
dec
call
neg
and
mov
xchg
sub
sbb
mov
cmps
jmp
sbb
inc
adc
xchg
js
or
mov
call
pop
push
jle
xchg
call
inc
cmp
add
fdiv
mov
mov
pop
movs
scas
sti
pop
rcl
test
dec
cld
cmp
pop
mov
mov
aas
popf
test
mov
inc
xchg
pop
add
int
push
jge
dec
ficomp
gs
cmps
add
pusha
and
(bad)
add
loope
cli
add
add
ret
push
mov
sub
adc
scas
dec
cmp
add
aad
les
ins
mov
outs
add
bound
cmp
add
sti
sub
add
mov
sti
stc
dec
dec
hlt
idiv
mov
mov
mov
mov
mov
add
xor
add
cmps
xchg
jecxz
(bad)
aam
mov
add
test
cld
test
add
lods
call
cmps
or
and
aad
add
pop
pop
test
add
(bad)
mov
or
mov
out
outs
jnp
cmp
jnp
call
lea
jp
cmp
cdq
and
push
fimul
ret
add
push
leave
int3
mov
cmp
xchg
cmp
mov
fild
add
mov
add
xor
add
repz
dec
inc
es
sahf
nop
adc
lods
sub
clc
adc
aad
and
push
mov
add
push
add
add
ror
sbb
add
mov
jg
ins
adc
adc
pop
int3
add
ja
or
in
jmp
mov
mov
fild
mul
cmp
js
mov
sub
add
cld
add
add
fdiv
mov
jmp
add
pop
adc
imul
add
inc
adc
push
add
int3
jp
xchg
out
add
cmp
dec
cmps
pop
mov
add
hlt
mov
mov
idiv
cli
add
sbb
mov
cmp
scas
call
push
inc
push
imul
push
push
dec
pop
pop
aad
add
lods
add
fdivp
ja
popf
imul
sahf
inc
jo
add
pop
add
jp
sub
sbb
mul
test
or
movs
cmc
scas
adc
sub
sbb
or
stos
movs
stos
in
add
int3
jne
mov
jbe
jo
add
xchg
mov
dec
jo
dec
add
(bad)
mov
cwde
test
pop
dec
xor
inc
ds
pop
mov
or
add
mov
mov
mov
add
push
sub
sti
or
jmp
pop
jg
add
mov
sub
xchg
daa
lock
xchg
fist
lods
xchg
das
mov
add
sbb
bound
or
retf
loopne
cmps
add
dec
add
out
add
add
test
shr
mov
xor
xchg
and
xchg
repnz
and
outs
add
popa
mov
outs
nop
or
stc
mov
sbb
mov
clc
jle
(bad)
int3
cmp
push
test
pop
repnz
mov
daa
inc
add
xor
add
aam
add
cld
ins
or
add
in
add
and
int3
xor
push
sbb
daa
adc
xchg
add
lock
add
mov
mov
push
daa
jg
jmp
dec
ret
daa
add
mov
mov
sti
loopne
cmp
(bad)
(bad)
sub
push
jp
add
leave
or
add
sldt
fsub
and
outs
cmp
add
(bad)
add
enter
xor
(bad)
xchg
jnp
add
les
jp
int
pusha
add
dec
pop
imul
xchg
fstp
fs
jno
add
ficom
mov
push
outs
jmp
cmc
mov
add
xor
xchg
je
loop
or
faddp
inc
sar
mov
inc
or
add
add
jbe
xor
lea
add
and
xchg
add
fistp
test
in
add
xor
sub
inc
test
add
mov
(bad)
adc
and
inc
add
fidivr
adc
repz
mov
or
jnp
mov
pop
push
mov
add
loopne
mov
add
xlat
add
(bad)
push
add
add
aaa
adc
add
(bad)
stos
cdq
sti
(bad)
out
outs
sub
add
push
xor
xlat
ret
outs
hlt
xor
bound
sub
arpl
sahf
cmp
mov
sbb
push
add
call
add
aaa
add
and
inc
mov
pop
sbb
cli
pop
add
(bad)
or
dec
mov
add
sub
xchg
int3
int
leave
add
scas
jl
mov
jge
push
mov
xor
lds
add
div
add
cmps
test
add
gs
inc
sbb
mov
cmc
sar
mov
add
jo
cmp
cmp
add
out
call
rol
clc
mov
cli
loopne
add
push
ins
add
mov
lahf
shl
js
sti
cmc
dec
movs
fsub
call
and
sub
or
cwde
pop
add
mov
fwait
add
call
inc
jmp
add
mov
add
les
add
mov
dec
mov
fadd
add
out
add
jnp
jle
add
or
dec
sahf
add
add
jge
and
pop
mov
add
add
pop
jne
ja
add
sbb
repnz
add
jmp
outs
inc
bound
pop
adc
add
sbb
add
and
pop
add
dec
add
jnp
push
add
fstp
pop
add
push
mov
add
dec
add
inc
dec
inc
push
jmp
mov
dec
jp
cmps
mov
sub
cmp
int3
xchg
popa
add
sub
push
fisttp
inc
jmp
movs
fnstcw
add
cs
call
xor
jmp
and
sbb
add
inc
add
xchg
push
test
mov
add
aas
mov
out
add
ins
(bad)
adc
adc
movs
rcl
ficomp
mov
rol
imul
and
sub
stc
push
xchg
inc
retf
je
loope
push
add
mov
and
add
add
add
arpl
std
xor
daa
add
push
jle
add
leave
in
and
add
ins
out
jg
add
mov
jns
jae
pop
xor
fadd
sbb
xchg
popa
inc
mov
add
outs
out
or
fsub
jle
add
jb
add
sbb
dec
fcomp
bound
mov
pop
jb
(bad)
mov
and
add
test
cli
add
jl
add
cld
out
daa
sbb
(bad)
jb
cmp
xor
add
or
xor
jl
gs
add
pop
xchg
cmp
ret
inc
ror
add
leave
jmp
push
adc
add
jae
lock
add
add
jbe
and
rcr
sti
fwait
mov
mov
add
add
je
shl
stos
jnp
repz
add
pop
repnz
enter
add
fmul
add
push
jmp
adc
rol
jmp
in
add
movs
cli
pusha
fsqrt
adc
jmp
mov
xor
ja
push
(bad)
sbb
add
inc
repnz
add
xchg
inc
es
xlat
imul
lods
push
lahf
mov
inc
add
dec
jecxz
mov
jne
inc
adc
pop
js
mov
fsin
inc
stos
mov
ins
sbb
add
rol
dec
leave
or
cmp
jle
mov
(bad)
and
add
push
push
fdivr
shl
dec
mov
add
cmp
and
adc
push
sbb
add
mov
sbb
rol
repnz
cmp
pop
add
hlt
mov
sub
mov
out
sbb
loop
(bad)
lea
into
sub
cmp
cmp
repz
sbb
aaa
stos
icebp
or
mov
jmp
add
cld
add
adc
outs
add
aam
or
aad
sbb
js
add
add
xlat
add
je
(bad)
push
stos
and
movs
xchg
test
imul
pusha
jmp
into
pusha
scas
hlt
mov
pop
mov
mov
add
daa
jbe
clc
jo
fst
cmp
ss
cs
fcom
jmp
mov
enter
add
adc
scas
call
add
jo
or
movs
cmp
sbb
lea
add
scas
xor
and
lahf
add
add
scas
imul
add
outs
fldcw
cmp
push
std
mov
add
loop
add
rol
xchg
arpl
add
jl
call
jbe
pop
movs
push
xor
inc
(bad)
sbb
xchg
add
dec
inc
(bad)
inc
dec
int
cmc
mov
mov
xchg
add
sar
xor
add
ds
or
xchg
mov
inc
mov
add
or
fistp
cmps
test
push
dec
lods
add
add
fnstsw
icebp
pop
jl
hlt
jns
add
mov
std
xchg
pusha
nop
dec
or
movs
lock
lock
dec
mul
mov
inc
mov
push
add
clc
add
ins
cli
stos
mov
add
lods
push
add
add
pop
add
aad
add
push
pop
adc
add
or
xchg
std
jbe
jns
jg
outs
add
mov
ins
push
add
fldenv
pop
mov
hlt
out
ret
mov
pop
(bad)
scas
add
les
xchg
fsubr
rol
add
add
lods
jne
push
adc
xor
sub
movs
fcom
add
dec
mov
sub
adc
cmp
int
dec
add
cmps
mov
clc
mov
outs
cwde
cwde
add
scas
add
ret
jbe
add
mov
pop
push
sub
pop
movs
mov
add
add
aas
xchg
adc
add
add
push
(bad)
gs
mov
xlat
fadd
inc
mov
mov
add
call
add
call
fwait
and
add
mov
mov
(bad)
lods
cwde
in
dec
pop
add
add
mov
mov
push
das
retf
push
add
add
adc
lock
jae
add
loopne
or
xor
adc
push
add
mov
push
inc
fidiv
inc
fist
jmp
ror
sbb
add
add
push
add
dec
add
cmps
jb
iret
cmp
jno
stc
iret
pop
mov
add
shl
shl
xchg
out
add
xchg
mov
add
xor
cmp
sbb
stos
jmp
mov
outs
dec
mov
cs
add
push
shl
dec
aas
jmp
inc
add
cld
int3
add
push
punpcklbw
sub
sbb
jbe
adc
and
js
mov
mov
xchg
add
test
cs
pop
mov
add
add
hlt
dec
rol
retf
inc
daa
jne
jecxz
and
pusha
or
test
ja
test
mov
jae
pop
add
push
mov
push
mov
test
add
cmp
loope
test
add
add
sti
inc
add
mov
add
arpl
jbe
add
(bad)
pop
mov
cmp
aaa
sub
mov
cmp
sub
add
adc
rol
xor
cmc
data16
retf
adc
js
es
jg
add
jp
loopne
sbb
gs
dec
xchg
adc
add
in
shl
stos
outs
imul
stos
cmp
fdivrp
add
in
stos
iret
add
add
sub
push
or
loope
add
adc
clc
sbb
jg
lahf
adc
add
pop
ja
add
add
pop
out
ins
test
adc
push
clc
add
sbb
ret
push
sub
sbb
mov
cld
jnp
inc
push
inc
jle
iret
add
retf
jne
mov
push
jmp
mov
jle
rcl
add
push
add
inc
adc
mov
add
aad
dec
add
and
es
add
inc
push
cmps
mov
mov
cli
test
loop
retf
add
call
add
in
add
scas
adc
aam
shl
add
(bad)
pop
push
sbb
fiadd
bound
add
loopne
popf
cld
fnstsw
(bad)
dec
add
add
adc
cs
inc
out
out
inc
jae
jnp
sbb
add
scas
pop
or
inc
mov
push
add
fisubr
fidivr
scas
sub
cmp
and
add
mov
iret
sbb
mov
aas
xchg
popa
dec
xchg
outs
scas
(bad)
stos
xchg
add
lea
add
out
sbb
and
add
repz
lea
add
add
add
add
lods
jle
sub
add
mov
inc
out
dec
ror
mov
lahf
inc
xchg
(bad)
adc
sub
jne
mov
mov
xor
dec
sub
add
mov
sbb
add
enter
retf
daa
sub
add
mov
vmovaps
rol
add
cmp
rol
enter
shr
dec
add
rol
imul
add
sbb
rcl
(bad)
add
and
add
clc
mov
dec
jecxz
mov
and
add
xchg
and
inc
movs
or
add
jae
sbb
outs
mov
jg
sub
test
xchg
mov
lods
cmp
xor
les
add
test
ins
add
ins
mov
add
and
xchg
push
or
add
arpl
push
pop
and
xchg
out
fist
push
or
pop
add
adc
aam
sbb
add
inc
add
aaa
cmp
test
dec
(bad)
jg
sub
ror
rol
in
sti
repnz
pop
div
outs
fwait
xchg
jno
jns
pop
out
add
pop
or
(bad)
jmp
and
ins
retf
inc
inc
das
sar
fstp
mov
add
add
xlat
adc
jbe
add
sub
inc
pop
inc
mov
test
lock
xor
cmps
ds
inc
or
sti
cmp
aas
sbb
add
dec
test
aam
jnp
inc
rcr
pop
push
jle
cmp
je
and
or
add
add
add
cmovp
add
pop
daa
and
mov
repz
call
xchg
or
mov
call
pop
mov
imul
cmp
adc
push
cli
inc
pop
int
sbb
cmp
mov
dec
les
out
cmp
lods
aad
inc
lods
add
xchg
aas
mov
inc
and
in
cmps
iret
imul
jmp
push
repnz
push
fwait
add
aaa
xor
in
xchg
mov
addr16
lods
xchg
add
jno
add
add
mov
loop
dec
pop
mov
(bad)
es
clc
cmp
imul
jbe
test
and
test
push
mov
push
pop
(bad)
mov
cmp
loop
add
fcom
add
jmp
inc
mov
js
pop
call
or
je
rol
xchg
pop
(bad)
pusha
add
dec
mov
int
xchg
sahf
mov
xor
mov
repz
pop
mov
or
add
std
test
push
rol
mov
and
or
pop
adc
test
add
(bad)
call
shl
ins
fsub
add
cmp
mov
and
pop
adc
cmps
outs
xor
add
add
lods
scas
add
pop
add
retf
jmp
mov
sbb
mov
add
mov
dec
cmp
leave
pop
mov
push
mov
adc
sahf
mov
dec
daa
pop
push
push
add
mov
xor
in
push
and
sub
pusha
push
sbb
popa
add
lods
loope
add
add
add
fist
dec
sbb
jl
add
iret
int3
mul
push
fnstcw
aad
inc
jp
add
cli
stos
retf
cmp
mov
add
dec
dec
xchg
dec
pop
push
xor
xlat
loope
xor
add
aas
add
rol
js
inc
ins
fwait
mov
push
dec
sub
xor
and
add
daa
aad
inc
lds
aam
cmp
add
add
dec
es
jbe
adc
pusha
xchg
mov
add
mov
add
push
pop
cmp
add
les
fild
add
xchg
popf
add
ins
test
add
xchg
add
cmp
xor
fstp
mov
mov
in
dec
push
mov
popf
cld
test
add
fiadd
fild
jmp
mov
ins
add
movs
lahf
cmps
add
ret
add
mov
add
mov
sub
add
inc
sahf
pop
scas
push
push
pop
push
jecxz
jle
xchg
dec
push
in
xchg
add
pushf
push
add
add
mov
mov
(bad)
mov
ja
cmps
inc
mov
xor
mov
add
out
mov
add
jg
add
fisttp
in
in
cwde
clc
mov
dec
add
jno
add
sub
push
add
jge
dec
mov
push
xor
add
arpl
and
add
adc
add
int3
jo
add
aam
pop
mov
add
stc
inc
pop
(bad)
jmp
imul
mov
add
lahf
repnz
je
es
iret
dec
and
test
mov
jg
dec
fnstsw
test
xchg
mov
repnz
fcmovbe
outs
inc
ret
cmp
aam
add
pop
mov
(bad)
das
ins
clc
leave
fild
add
in
lods
dec
add
retf
add
out
jmp
add
add
jmp
ret
cmp
popa
sbb
mov
add
cwde
sub
add
sbb
mov
add
xchg
inc
add
outs
retf
pushf
push
push
xor
fadd
(bad)
and
mov
fdiv
xchg
retf
sub
add
sub
(bad)
add
add
push
sbb
inc
stc
cmp
cmp
in
add
or
fstp
adc
or
jg
retf
mov
ret
inc
fiadd
add
mov
ins
add
push
imul
xchg
add
xchg
add
and
sub
xchg
int3
inc
add
xchg
xchg
icebp
mov
add
add
inc
mov
ins
add
out
jecxz
push
dec
stos
(bad)
sar
add
fadd
leave
sub
jae
nop
and
add
push
cmp
sbb
add
add
cmps
jae
add
push
dec
push
nop
push
pop
pop
xor
add
jns
jns
fxch
adc
push
or
nop
pop
rcl
das
xchg
xor
or
sar
add
jmp
add
lahf
mov
ror
add
add
rep
dec
add
lahf
mov
jae
retf
pop
add
int
add
jecxz
add
xor
in
ds
fbld
icebp
cwde
xchg
fist
add
pop
enter
sbb
mov
in
inc
pmaxsw
add
mul
and
jo
sub
iret
or
mov
or
loop
xor
pop
jl
neg
stos
xor
mov
mov
xchg
push
pop
add
cmp
add
mov
sub
add
add
add
and
aas
ret
iret
sbb
mov
out
mov
push
add
(bad)
lahf
mov
mov
(bad)
mov
and
retf
xor
clc
jbe
add
add
add
fistp
xchg
pushf
mov
out
add
sub
add
pop
add
push
dec
mov
add
pop
es
xchg
jnp
add
jmp
mov
jp
dec
pop
add
jge
add
out
addr16
inc
ins
sbb
jmp
ror
fistp
pop
add
fidivr
popa
fld
pushf
inc
out
add
or
loope
cld
add
xchg
sbb
dec
push
fcomip
dec
sahf
mov
add
add
fild
sbb
mov
retf
and
sbb
or
aas
sub
pop
iret
iret
adc
mov
sbb
add
not
jno
or
pop
jl
xchg
int
adc
(bad)
sub
sbb
dec
lock
jo
pushf
add
add
dec
sahf
aaa
add
ins
dec
sti
cld
inc
jmp
cdq
nop
and
add
inc
add
mov
add
push
add
add
sub
add
rol
aad
hlt
inc
add
js
outs
jmp
xchg
(bad)
cmps
or
add
pop
nop
addr16
shl
sub
mov
call
mov
add
and
arpl
push
(bad)
mov
(bad)
add
add
adc
mov
sbb
clc
int
test
dec
add
stos
out
aaa
pop
adc
jl
add
icebp
cmp
mov
shl
sbb
add
test
inc
dec
ret
mov
add
jae
scas
sub
add
shl
pop
ja
xlat
jo
xchg
neg
add
push
adc
inc
push
jmp
(bad)
nop
push
inc
mov
addr16
leave
rcr
add
inc
xor
ins
repnz
dec
test
data16
pop
cmp
lods
fwait
add
fiadd
iret
in
int
add
fwait
push
add
cmp
jle
add
cmp
xchg
and
inc
add
dec
add
sbb
add
jecxz
xchg
in
in
addr16
add
mov
add
jbe
icebp
add
repz
mov
es
inc
pusha
add
add
add
sti
aas
rol
add
cmps
clc
test
sbb
add
mov
add
push
add
push
mov
mov
mov
sbb
cmp
add
add
add
jns
mov
xchg
repnz
in
in
sbb
add
(bad)
jmp
add
add
imul
add
div
add
mov
jmp
jo
mov
push
add
or
ins
xor
dec
repz
sbb
sub
dec
rol
push
mov
add
adc
add
(bad)
push
int3
mov
fcomp
add
push
add
add
in
add
jge
ret
adc
xor
add
and
add
push
mov
sbb
stos
fcom
xchg
jno
add
add
stos
sub
and
loopne
data16
add
or
loope
aas
fs
add
movs
add
xchg
adc
add
daa
shr
jo
mov
ret
pop
fs
sub
aas
add
adc
add
fwait
mov
adc
push
rcl
(bad)
jns
add
dec
xchg
cmps
mov
push
adc
addr16
add
or
add
sbb
data16
hlt
loop
sub
sti
sub
imul
add
add
mov
cmp
add
ret
lahf
or
xor
icebp
call
add
sub
and
xchg
in
add
mov
add
xor
jae
add
push
add
(bad)
pop
sbb
outs
clc
jb
gs
mov
mov
inc
mov
rol
pop
xchg
xchg
fiadd
xchg
inc
add
inc
dec
inc
inc
rcl
add
pop
mov
push
add
in
mov
add
ja
cdq
push
mov
aad
fldenv
mov
or
in
out
xchg
add
add
push
push
int
icebp
test
xor
add
push
add
xor
add
imul
sub
xchg
inc
das
popf
imul
test
je
or
enter
xor
das
push
lahf
and
cmc
icebp
xlat
xchg
loop
add
loope
jb
add
cmps
or
mov
add
add
xor
mov
pop
add
sub
mov
and
in
and
add
add
fdiv
xchg
pop
cmp
and
pushf
clc
fadd
push
bound
add
stos
jne
clc
add
loope
dec
das
sub
inc
ins
push
pop
in
std
add
in
add
mov
mov
sub
mov
xor
ja
pop
repnz
add
outs
inc
ror
mov
pop
ins
ins
add
rcr
pop
mov
lock
pop
pop
sbb
hlt
std
fsubr
add
add
mov
mov
sub
inc
les
inc
xchg
cmp
add
xchg
add
dec
jbe
loop
add
mov
xchg
or
add
xchg
movs
jb
addr16
clc
inc
add
cld
push
and
clc
dec
add
sbb
push
mov
pop
add
add
repnz
xchg
add
inc
jmp
inc
add
pusha
cmp
fild
add
mov
jno
add
and
dec
loopne
hlt
aam
imul
add
xchg
lods
bound
scas
push
ja
lds
lea
sar
mov
cli
mov
mov
add
and
lock
add
(bad)
stc
add
lods
push
jns
jb
data16
or
inc
xchg
out
mov
add
cli
pop
jp
adc
dec
jp
add
sbb
jo
and
add
test
cdq
or
jl
mov
add
dec
and
jmp
xor
push
add
add
call
push
pop
adc
in
xchg
and
adc
add
inc
add
sub
push
add
push
add
ficomp
jmp
arpl
pop
movs
sbb
sahf
hlt
or
nop
jg
dec
ins
cmp
and
inc
mov
add
push
mov
outs
mov
push
xchg
cmp
loope
sub
add
int3
loopne
add
sahf
cmps
xchg
pop
xchg
push
lea
xor
add
shl
add
enter
lahf
inc
jecxz
xor
ins
pop
dec
xor
add
add
cdq
lock
out
verw
lea
mov
movs
pop
cmps
push
rol
mov
inc
jl
xchg
mov
add
(bad)
rol
add
shl
or
aam
sbb
and
sar
loop
or
fild
leave
or
dec
xchg
mov
in
ficomp
pop
add
xchg
push
adc
fild
push
cdq
and
cmps
aaa
jle
scas
push
sub
clc
in
loopne
test
int3
movs
mov
int
hlt
add
push
imul
scas
sbb
clc
add
and
dec
add
xor
ins
cs
mov
mov
scas
dec
mov
add
stos
fild
aad
leave
outs
aam
add
jl
add
xchg
or
je
sbb
mov
sbb
inc
jns
popa
cmp
add
jae
cmp
sbb
test
add
add
js
or
push
add
pop
add
jmp
add
xlat
adc
addr16
fnstenv
add
rcl
(bad)
cli
add
add
adc
fldcw
add
bound
les
adc
pop
add
mov
add
xchg
jle
hlt
outs
dec
add
push
inc
sahf
sub
add
call
add
add
jecxz
add
mov
or
mov
and
mov
ins
add
fwait
ret
add
mov
es
fidivr
xor
pop
xchg
add
mov
and
inc
add
lea
bound
add
rcr
sar
sahf
xchg
add
inc
mov
add
(bad)
fiadd
sbb
push
clc
(bad)
jne
inc
shr
add
dec
mov
sbb
ins
add
add
jo
ret
not
add
xlat
retf
(bad)
clc
push
lock
add
add
ltr
push
ins
push
push
mov
add
add
add
xchg
retf
add
jmp
call
(bad)
pop
jl
sar
fwait
pop
and
add
(bad)
aad
dec
add
pop
inc
std
cmps
fdivr
add
lds
add
mov
xchg
xor
lods
push
xor
xchg
into
repnz
mov
add
(bad)
in
dec
(bad)
daa
jo
add
movs
add
sub
stc
add
add
xor
popa
loop
test
xor
sbb
outs
pop
adc
add
xchg
fucompp
mov
xchg
fnstsw
ror
add
pop
dec
vpmulhw
pop
jnp
add
sbb
mov
test
fmul
lea
in
adc
add
xor
push
sbb
imul
add
mov
push
(bad)
jl
jmp
loopne
fst
or
mov
add
or
test
jmp
stos
jno
sbb
lock
dec
mov
pop
sub
stos
lea
inc
movs
and
push
add
push
or
repz
jecxz
inc
in
jmp
or
add
sbb
cli
shl
inc
add
or
add
add
cmc
push
xor
ins
sbb
pusha
sub
push
cmp
pop
imul
mov
outs
or
add
dec
push
in
pop
inc
(bad)
mov
push
adc
add
ss
sbb
add
out
jne
jle
adc
add
push
or
inc
dec
jmp
mov
sbb
jae
stc
add
adc
hlt
jo
(bad)
or
(bad)
lahf
push
dec
pop
sub
add
mov
dec
in
add
push
push
js
ret
leave
add
add
sbb
add
cmp
ret
minps
iret
xor
in
add
retf
add
(bad)
or
xchg
xchg
mul
jp
add
test
dec
je
mov
pusha
cmp
mov
data16
xchg
mov
(bad)
mov
ss
pop
add
jo
popa
out
cdq
add
adc
jmp
fadd
adc
(bad)
out
add
xchg
xor
addr16
fld
mov
pop
or
mov
mov
add
rcr
add
add
pusha
pop
add
ret
ss
in
ficomp
imul
lahf
mov
repz
and
push
sbb
add
add
adc
gs
xor
add
xchg
cmp
xchg
jmp
ins
mov
add
call
inc
(bad)
popa
fild
call
jg
sbb
(bad)
xor
jnp
add
add
jno
outs
bound
cmp
std
call
cmps
add
fadd
enter
sbb
dec
mov
retf
add
jae
cmps
(bad)
sub
das
in
sbb
add
add
add
or
(bad)
(bad)
leave
call
add
int
(bad)
push
retf
ins
sub
jo
mov
pop
jg
rol
add
iret
mov
jno
add
leave
adc
inc
call
call
int3
call
lds
mov
cwde
push
in
shl
ins
xor
inc
outs
pop
pop
add
jns
pop
add
add
lods
cmp
and
test
add
dec
aam
add
xchg
fsubr
push
jmp
xor
xchg
xchg
leave
(bad)
mov
push
add
adc
ficomp
add
push
nop
add
cld
neg
add
add
sub
add
(bad)
lods
movs
jl
add
out
mov
add
ja
outs
test
mov
retf
add
push
add
push
add
fild
add
dec
inc
and
dec
add
add
push
and
inc
popa
cmp
ja
xor
pop
xor
lods
and
jg
int3
sub
lahf
repnz
inc
mov
sub
rcr
and
add
imul
imul
jecxz
aad
ins
jo
push
cmp
jnp
sbb
adc
adc
mov
sti
xchg
fwait
popf
add
test
test
cld
fptan
cmp
fnstcw
xor
sub
fild
cmp
cwde
stos
inc
cdq
xor
aas
mov
call
add
mov
(bad)
add
dec
stc
jecxz
mov
xchg
add
mov
shl
or
stc
icebp
add
mov
add
inc
add
jbe
sub
add
sbb
(bad)
adc
jae
out
dec
sbb
mov
dec
xchg
pop
cmp
repnz
ret
add
mov
repz
add
mov
jg
xchg
pop
mov
add
cmps
add
inc
std
push
add
push
add
xor
add
sub
and
or
adc
clc
add
pop
push
jecxz
add
mov
fwait
pusha
add
xor
call
add
dec
and
scas
ja
and
add
jno
add
sbb
dec
cmps
jns
fcom
daa
add
and
movs
and
and
mov
add
xchg
mov
ror
cs
sahf
int3
test
add
add
mov
inc
add
and
add
pop
mov
or
aas
mov
jmp
add
daa
mov
fadd
xchg
mov
je
(bad)
std
enter
and
jl
add
out
pop
pop
mov
aas
in
jecxz
mov
xor
sbb
mov
add
jo
nop
add
push
mov
add
inc
test
inc
out
add
xchg
add
outs
and
mov
fistp
add
add
in
lds
add
sahf
and
add
push
mov
arpl
in
add
jle
add
mov
add
cld
add
add
retf
push
popa
push
adc
test
fild
add
fcom
cmp
movs
les
mov
shr
add
das
std
dec
xor
sub
add
aam
add
jle
add
(bad)
mov
xor
mov
ins
sbb
pusha
add
ret
outs
cmp
and
out
int
add
mov
adc
or
add
mov
add
sahf
outs
call
nop
add
fild
add
pop
nop
js
or
add
jle
xchg
adc
add
mov
rol
add
mov
adc
popa
in
lds
jae
or
cmps
add
div
adc
jmp
pop
push
mov
cwde
cmp
cmp
sub
fnstenv
cmp
(bad)
sub
cmp
pusha
mov
add
test
mov
or
add
inc
sub
cmp
add
enter
push
add
inc
mov
nop
adc
retf
mov
cmp
in
add
mov
push
sub
icebp
mov
movs
add
iret
pop
cld
je
dec
or
mov
mov
jo
ins
lock
imul
neg
mov
fdivr
mov
cmp
fs
add
pop
(bad)
out
push
add
icebp
dec
xchg
pop
push
jmp
add
dec
scas
push
(bad)
cmc
cmp
pushf
push
aam
add
movs
and
cmp
jp
mov
cmp
add
inc
pop
mov
add
add
(bad)
into
ja
cmp
test
add
popa
and
mov
sub
aam
fs
mov
stos
clc
mov
enter
add
cmp
add
icebp
ins
add
mov
or
ins
add
add
jae
xchg
push
imul
adc
jne
add
fcmovbe
add
ficom
add
push
into
add
sti
xor
mov
retf
mov
add
sbb
cmp
cmps
mov
add
xor
lea
outs
rol
lods
push
push
inc
inc
fsubrp
pop
add
clc
xor
mov
add
cmp
add
imul
stos
dec
inc
scas
mov
jo
rcl
mov
sbb
add
adc
add
adc
movs
pusha
imul
cmps
push
lods
int3
sti
mov
add
ins
add
out
test
js
add
add
push
mov
pop
xor
add
inc
in
cmp
mov
push
cmps
ret
or
add
(bad)
jl
add
add
dec
add
add
(bad)
mov
or
mov
pop
jb
lods
push
xchg
fiadd
int3
movs
add
add
ja
ins
outs
add
wbinvd
jecxz
mov
or
call
and
or
test
call
cmp
bound
add
pop
das
mov
sub
imul
inc
pop
xlat
retf
inc
pop
add
imul
mov
gs
xchg
add
cwde
add
pusha
sbb
rcl
inc
add
fnstsw
shr
sub
xchg
xor
mov
add
cmp
pop
mov
add
add
imul
add
hlt
ret
sar
add
pop
stos
inc
pushaw
or
push
jecxz
jg
cs
scas
inc
add
fwait
das
add
retf
inc
dec
adc
mov
adc
movhps
int3
jg
pop
push
(bad)
imul
mov
xchg
cmp
add
add
push
pop
sbb
das
cmp
add
xchg
or
int3
sbb
call
pop
arpl
xchg
cdq
ror
daa
fwait
add
shl
add
in
push
or
dec
add
mov
jmp
pop
add
ins
shl
add
loop
add
fistp
data16
bound
mov
add
jp
lods
shr
ror
mov
add
ja
push
add
(bad)
mov
lds
stc
pop
jnp
adc
test
add
add
dec
jno
bound
jbe
add
lods
aad
add
cmp
dec
imul
jae
add
rol
adc
scas
out
gs
sahf
nop
add
ret
inc
add
fdiv
add
loope
inc
pushf
dec
aad
clc
inc
mov
les
pop
add
add
jnp
sbb
sub
cmps
lahf
push
xchg
add
sub
add
int
pushf
mov
mov
out
lds
sub
fist
stc
aad
dec
mov
cmc
sub
add
add
pop
jmp
in
loopne
push
cs
sbb
sub
xchg
add
adc
fcomp
outs
clc
add
xor
push
jp
xor
outs
adc
mov
stos
push
add
push
sbb
add
inc
sbb
inc
retf
and
xor
mov
or
in
rcr
sbb
cs
sub
cmp
adc
mov
pushf
jg
add
cmp
cmps
add
test
fs
jnp
shl
inc
pop
je
sti
loop
dec
cs
adc
in
jae
dec
in
outs
mov
cmp
fist
add
dec
mov
arpl
add
int
ss
mov
add
add
outs
and
add
add
outs
add
push
inc
pop
xchg
lock
jmp
push
cmp
xchg
fbstp
adc
add
mov
xor
sbb
pop
dec
add
pop
add
jle
push
lahf
add
retf
jg
push
arpl
mov
imul
sti
add
sbb
jecxz
pop
add
stos
lods
add
xchg
int3
pusha
add
push
and
iret
add
mov
fist
cs
mov
es
add
pop
iret
(bad)
fwait
loop
or
and
sub
icebp
lods
mov
sbb
scas
add
pop
stos
inc
jnp
in
add
mov
sar
cmp
cmp
mov
fild
add
das
int
jl
jae
sub
fstp
push
lds
add
xchg
add
inc
jae
xor
or
add
mov
jle
mov
test
push
xchg
xor
inc
xchg
addr16
cld
push
pop
jmp
mov
add
add
jo
dec
loopne
add
pop
pop
pop
ds
xor
mul
xor
(bad)
or
or
xor
mov
add
ret
div
aas
(bad)
add
xor
add
mov
fmul
(bad)
mov
shr
ret
popa
mov
mov
rol
or
dec
pop
int3
dec
cs
jmp
add
inc
icebp
and
popf
push
sbb
clc
adc
add
jbe
cmp
or
cmp
sub
outs
out
xchg
add
mov
leave
mov
jp
add
add
xor
xor
jbe
test
outs
add
jge
mov
ins
xor
or
dec
add
add
ds
jnp
hlt
xchg
test
scas
add
lods
pop
and
ins
add
mov
push
xor
mov
aas
add
add
add
add
lahf
add
loope
mov
test
call
sub
or
add
inc
adc
add
pop
out
scas
add
(bad)
jl
aam
or
pushf
cwde
add
add
xlat
pop
add
add
je
jg
add
xor
pop
ins
inc
pop
push
hlt
int3
sub
add
push
cmp
add
(bad)
mov
add
cld
scas
xchg
or
das
or
mov
mov
outs
add
loop
mov
jno
lds
call
(bad)
aas
mov
cdq
add
fs
mov
aad
sbb
cli
mov
lods
xlat
add
mov
inc
mov
sbb
add
cmp
add
in
xlat
rol
pop
imul
add
push
inc
das
mov
lea
popf
sti
les
adc
mov
mov
imul
pop
ret
jno
mov
add
rol
xchg
std
out
mov
pusha
push
test
push
test
sub
mov
inc
pushf
add
pop
movs
and
std
aaa
imul
out
cmp
int
sub
ss
pop
lods
add
jl
in
sub
das
mov
test
sbb
jns
inc
mov
push
pop
cmp
xor
inc
mov
dec
cmc
inc
sahf
mov
or
pushf
adc
add
les
sbb
cmp
ficomp
add
add
adc
mov
add
mov
add
je
add
inc
jl
adc
(bad)
pop
jno
mov
xchg
add
inc
sub
add
inc
inc
push
inc
add
cmp
xchg
cmp
pop
daa
push
jmp
popa
xbegin
add
inc
hlt
pop
mov
pop
aam
aam
lahf
add
pop
lock
mov
add
add
add
push
add
mov
sbb
add
adc
add
int
xor
outs
mov
add
jb
xchg
rol
mul
add
jmp
xor
(bad)
mov
add
or
aam
mov
imul
nop
push
add
gs
pop
icebp
or
add
push
or
icebp
out
std
xchg
cmp
sub
sub
add
jl
cmp
adc
push
repz
jne
add
pop
or
xchg
mov
add
out
fstp
and
shl
pop
mov
sbb
add
mov
(bad)
enter
leave
add
out
das
add
dec
loopne
inc
add
int3
pop
sbb
add
add
add
aad
scas
int
jns
in
icebp
add
or
hlt
add
(bad)
sbb
push
or
mov
cmp
movs
ins
mov
mov
add
add
ins
inc
pusha
pop
jb
add
add
mov
jge
add
sbb
out
add
and
add
cs
add
loope
stos
add
movs
add
or
or
icebp
push
idiv
add
add
repz
pop
add
pop
data16
add
je
pushf
mov
and
push
arpl
push
xchg
add
test
ret
adc
inc
popa
jle
add
mov
imul
sbb
add
mov
in
(bad)
pop
repnz
push
add
mov
xor
(bad)
mov
jno
mov
mov
add
imul
scas
pusha
xchg
(bad)
mov
rcr
out
popa
mov
fcomp
add
out
mov
adc
add
jecxz
cs
inc
dec
sbb
mov
mov
fadd
add
jne
add
cmp
fist
push
push
aaa
jmp
cdq
arpl
sti
add
xchg
add
adc
addr16
ins
dec
add
iret
inc
sbb
aam
add
push
add
addr16
or
fst
cmps
pop
adc
imul
mov
add
scas
sbb
ret
inc
mov
and
loopne
cmp
add
enter
fdiv
cmp
cmp
pop
xor
inc
mov
dec
add
(bad)
fwait
pop
test
fsubr
mov
sti
sub
add
idiv
adc
mov
and
ret
fnstenv
ja
lods
push
add
scas
mov
test
add
fild
add
mov
lods
cmp
(bad)
lods
xor
add
call
push
lods
push
add
jb
sbb
sbb
nop
jl
add
ds
add
popf
cmp
add
add
outs
sti
add
lods
js
add
retf
add
push
push
add
xor
mov
push
push
into
mov
sub
dec
neg
add
mov
stc
xor
out
add
in
mov
pop
and
outs
xchg
add
rcl
add
dec
pushf
mov
int3
loopne
cmp
stos
test
cmp
es
cmp
add
xchg
push
movs
aas
shl
jb
jge
pop
pop
xchg
pop
sbb
add
(bad)
enter
xchg
mov
out
rcl
call
or
add
inc
sbb
cmc
retf
arpl
mov
jecxz
fwait
sbb
movs
mov
mov
jnp
add
repz
xor
pop
add
inc
push
xlat
cmp
cli
out
and
(bad)
cmp
retf
mov
add
rcl
bnd
sub
pop
jno
mov
hlt
push
fcom
lods
imul
sbb
ja
cmp
add
push
sbb
push
shl
jnp
sbb
add
inc
in
add
lods
in
cmp
adc
lock
popa
push
xchg
mov
push
movs
mov
test
sub
lds
mov
adc
push
(bad)
cmp
into
mov
pop
mov
in
pop
jmp
add
add
mov
push
pushf
add
mov
pop
add
cli
sub
mov
add
mov
icebp
push
jnp
add
out
push
imul
add
dec
into
mov
int3
sbb
add
xchg
and
mov
es
or
jnp
xchg
xchg
dec
jbe
add
out
into
push
add
pop
sub
bound
rol
fidivr
sub
sar
adc
mov
arpl
rol
(bad)
test
popa
leave
add
sub
stc
lds
test
adc
add
jle
fld
add
lahf
sbb
pop
cmp
jl
pop
in
add
add
sub
sub
adc
xchg
fsubr
pop
into
arpl
jb
pop
add
loope
movs
xor
jb
retf
add
sbb
(bad)
jmp
push
aaa
xor
sub
xchg
lock
add
(bad)
push
cmp
mov
dec
retf
sub
shr
add
sbb
popf
inc
add
stc
xor
into
test
je
add
add
and
add
mov
leave
and
jecxz
jae
iret
in
and
sbb
mov
dec
in
sub
jecxz
cmps
mov
(bad)
in
cli
push
sub
add
repnz
cmps
popf
imul
shr
add
xchg
mov
add
(bad)
add
call
push
dec
lods
add
add
cld
sub
out
sub
in
and
addr16
fiadd
jno
xor
jge
dec
and
shl
add
add
pop
mov
xchg
loopne
dec
ja
sbb
fldcw
leave
pop
pop
adc
add
and
jbe
cld
push
into
rcr
rol
add
inc
dec
sbb
or
cmp
add
shl
loopne
or
push
call
daa
aaa
dec
js
and
add
jmp
or
jmp
adc
dec
jbe
in
adc
outs
pop
push
add
shl
push
push
pop
mov
add
sbb
sar
inc
jb
test
push
sbb
sub
add
loopne
xor
add
push
push
sbb
add
mov
add
adc
dec
jne
popa
add
pop
pop
dec
push
cmp
sbb
retf
outs
aas
mov
into
test
fst
sub
xchg
add
outs
add
js
dec
in
add
pop
add
pop
add
add
and
or
push
fldenv
add
dec
add
sbb
imul
add
scas
push
sbb
xor
pop
add
mov
push
loop
add
ss
add
add
stc
add
sar
repz
cmp
add
dec
daa
fmul
mov
jge
(bad)
sbb
setg
sub
xor
cs
push
out
adc
daa
aaa
and
add
in
les
ds
xlat
sub
loop
inc
add
xor
xlat
sbb
sub
pop
dec
xlat
gs
(bad)
jae
jo
aad
pop
ss
jle
add
sub
xor
push
fist
mov
pop
das
inc
cmps
fucomp
pusha
adc
push
inc
add
repz
jns
stos
pop
movs
es
mov
or
shr
fiadd
jmp
add
pop
mov
inc
lods
inc
mov
arpl
push
mov
add
es
fadd
or
add
mov
xchg
jecxz
dec
and
add
push
mov
adc
(bad)
adc
jecxz
dec
add
mov
in
fild
loope
sti
sub
add
lods
imul
pushf
add
ja
pop
adc
cdq
and
movs
pop
jle
sub
xchg
(bad)
das
nop
add
jae
add
retf
pop
fidiv
stos
mov
out
inc
add
dec
add
(bad)
cmp
cli
add
pop
adc
repnz
adc
pop
add
add
in
cs
or
sub
dec
mov
jnp
mov
add
gs
cmp
xor
add
pop
rol
and
outs
add
and
or
add
add
scas
or
adc
pushf
mov
add
mov
outs
mov
jns
lods
push
xor
adc
imul
sub
add
repz
movs
add
enter
je
add
pop
sbb
add
mov
test
dec
jge
xlat
pop
shr
add
pop
add
fisub
add
inc
int3
jmp
mov
pushf
add
lock
xchg
add
lock
pop
jl
mov
add
mov
outs
xchg
xor
fisubr
jo
loopne
add
add
test
out
popa
fwait
call
mov
fadd
or
gs
push
jno
pop
mov
add
push
fisubr
add
cmp
sbb
add
sahf
add
sbb
stos
push
mov
add
add
add
push
mov
add
add
mov
mov
cmps
bound
nop
movs
add
xor
jbe
or
jle
add
in
retf
add
ss
xor
or
xchg
jp
loopne
sar
sbb
add
imul
add
push
jb
arpl
inc
xchg
add
ins
scas
pop
inc
and
sbb
rcr
mov
rol
push
pop
stos
add
xor
add
scas
out
add
mov
or
cwde
add
add
jne
hlt
sar
xchg
add
pop
ret
outs
add
add
xchg
xlat
repnz
or
shl
add
and
pop
push
add
or
sub
add
lock
jb
popf
dec
cmp
pop
ins
push
out
(bad)
mov
inc
pusha
jle
add
add
xchg
xchg
aad
out
add
add
mov
xor
add
ffreep
fst
inc
loop
add
sti
ret
cmc
sub
adc
ss
jp
cli
add
int3
mov
inc
or
jae
test
add
jne
mov
add
std
adc
add
push
arpl
push
sbb
movs
add
popa
(bad)
inc
jbe
loop
rcr
and
cld
cmp
xchg
nop
add
add
jo
pushf
imul
mov
add
add
mov
add
pop
pop
jb
inc
or
popa
mov
push
gs
sahf
jg
add
or
jl
or
ins
std
or
cdq
add
sub
and
scas
add
add
pop
in
xchg
or
out
ins
leave
mov
add
aaa
ins
jmp
data16
add
add
add
ficomp
push
or
add
add
add
bound
aad
mov
in
outs
dec
xchg
xor
sub
sahf
add
and
add
pop
cmp
imul
and
pop
add
mov
mov
leave
add
not
and
push
dec
jle
or
dec
add
mov
ret
iret
add
inc
jmp
add
pop
scas
inc
cmp
mov
pop
add
ret
jns
in
xchg
ins
es
in
or
add
(bad)
pushf
outs
add
add
jle
cmp
add
test
add
dec
pop
cmps
add
enter
fild
add
inc
cdq
call
pop
cld
or
or
loope
clc
ficom
add
ror
xchg
add
jle
int3
and
popf
fidiv
add
mov
add
add
mov
add
add
sub
outs
das
and
push
inc
ss
add
sub
push
je
pop
mov
inc
leave
scas
push
js
(bad)
(bad)
xchg
sti
fdiv
(bad)
add
sub
arpl
add
or
movs
jmp
mov
aad
push
mov
pop
mov
ins
repz
add
and
fmulp
jnp
add
scas
push
sbb
enter
push
add
pop
lods
add
mov
ds
mov
pushf
push
add
xchg
rcr
call
or
pop
iret
movs
retf
jmp
push
imul
ins
cli
and
adc
fiadd
add
add
cmps
add
push
(bad)
cs
add
add
ja
stc
imul
add
adc
sti
(bad)
push
sbb
add
xor
cmps
bound
repnz
sub
push
mov
jae
sub
pop
cmps
clc
inc
lods
mov
test
dec
popf
mov
push
shr
les
or
fwait
dec
xchg
jp
jle
add
lods
je
or
inc
dec
out
and
add
add
jns
arpl
test
(bad)
repnz
cmp
add
sbb
inc
jmp
loopne
mov
and
pop
add
push
pushf
xor
xchg
sbb
sbb
in
pop
sbb
test
dec
jge
add
pop
cmp
or
jmp
push
push
add
adc
mov
and
inc
iret
pop
das
repnz
mov
fistp
xor
pop
jmp
mov
pop
sub
pop
add
xchg
and
mov
mov
std
xor
in
add
mov
movs
mov
push
cmps
jno
cmp
adc
sahf
pop
lods
out
(bad)
sbb
mov
cmp
jmp
clc
gs
sahf
inc
xchg
in
ret
adc
loopne
inc
mov
add
or
pop
sbb
lea
add
add
dec
in
add
push
add
lods
mov
add
sbb
sub
bound
pop
imul
add
(bad)
push
xchg
add
out
sbb
jmp
add
pop
and
(bad)
loope
mov
out
add
push
and
mov
push
mov
jge
mov
or
leave
sbb
cmp
(bad)
std
idiv
les
test
jns
sub
aam
mov
mov
push
or
mov
adc
sbb
add
inc
and
out
test
fld
movs
cmps
push
jle
or
je
mov
jmp
or
and
add
test
dec
fild
fs
fld
fisttp
fwait
mov
add
xchg
loopne
cmp
rcr
mov
ja
mov
pop
jg
nop
xor
add
fs
xor
dec
jbe
cdq
fcom
cmp
push
outs
icebp
xor
cmp
dec
cmp
stc
add
rep
das
or
xor
aad
push
jae
add
mov
mov
nop
jbe
movs
jne
jns
add
inc
das
lods
add
(bad)
add
xchg
das
add
jecxz
adc
dec
in
xor
add
cmps
jae
jb
das
xchg
repz
xor
(bad)
jmp
dec
sub
mov
add
repnz
cdq
outs
dec
add
stc
add
adc
das
inc
add
jae
dec
add
pop
jp
pop
pop
jmp
add
xlat
jmp
add
or
xor
aaa
mov
add
jmp
je
add
out
push
or
loopne
(bad)
in
(bad)
sub
pop
rcr
jbe
add
push
dec
or
dec
pop
mov
push
(bad)
adc
fcom
mov
push
cmps
(bad)
add
add
outs
mov
movs
movs
icebp
int3
add
mov
push
shl
add
out
out
mov
xor
add
data16
jo
rcl
loope
add
jle
or
sbb
sub
pop
adc
lods
test
sub
add
sub
jl
add
xor
inc
leave
loop
sbb
gs
jecxz
add
stc
sbb
add
arpl
into
lea
dec
sbb
jle
add
inc
add
fnstsw
dec
sub
mov
add
cmp
add
pop
add
add
mov
ja
cdq
stos
add
rol
add
mov
and
retf
add
inc
ret
add
nop
dec
jp
ret
push
add
mov
iretw
push
ja
add
popa
fs
call
add
add
fwait
(bad)
data16
cmp
nop
ds
cmps
mov
cmc
adc
push
xchg
(bad)
arpl
lahf
repz
cmp
add
cmps
aas
sub
mov
cmp
add
and
or
jmp
xchg
sub
fcomp
iret
js
sub
add
sbb
add
sub
pop
bound
sti
dec
inc
(bad)
add
dec
mov
push
outs
jnp
dec
xlat
add
fld
add
xor
popf
cli
shr
rcr
call
add
imul
fimul
dec
pop
xchg
pushf
xlat
retw
add
jg
jno
and
ins
mov
les
push
fild
add
pop
inc
int
xchg
mov
jmp
or
(bad)
sahf
aad
add
push
push
add
aaa
fidiv
in
add
push
in
inc
inc
in
popf
ins
bound
out
xchg
mov
ins
and
inc
fwait
add
cmp
add
mov
xor
add
inc
jp
clc
dec
jnp
mov
call
jp
sub
jle
mov
adc
ins
or
fcmovnb
sub
les
push
out
adc
test
mov
dec
and
adc
add
sub
ja
add
ins
push
jo
add
int
sbb
xchg
push
dec
sub
add
mov
out
cmps
test
mov
jnp
mov
xlat
cmp
sbb
add
mov
(bad)
mov
test
fild
mov
xor
jne
cwde
add
loop
into
test
xchg
push
add
out
cmp
add
iret
mov
add
pop
add
push
fbstp
out
cmp
mov
lds
xchg
push
ins
push
cmp
retf
mov
inc
outs
mov
sub
out
int3
cli
stc
stos
add
cli
sub
jmp
jnp
add
jae
pusha
imul
push
jae
ins
(bad)
xchg
(bad)
in
mov
iret
clc
add
pop
(bad)
ja
add
add
outs
add
mov
add
dec
add
add
add
add
jecxz
pop
add
xchg
dec
sub
call
ret
xor
cmp
cmp
rcl
sbb
add
mov
jp
lods
pop
adc
add
push
dec
enter
lock
dec
xor
mov
retf
daa
mov
ficom
add
jbe
loop
inc
cmp
add
mov
push
arpl
jbe
outs
jge
jb
sbb
add
and
xor
add
push
add
por
add
push
shl
repz
movs
add
clc
enter
add
mov
adc
push
in
add
cli
lock
add
hlt
dec
add
xor
cmp
sbb
adc
push
add
les
add
das
mov
add
movs
and
outs
lea
xchg
in
arpl
add
or
jecxz
push
fldcw
fs
cwde
mov
es
or
add
sub
pusha
imul
bswap
add
(bad)
jnp
call
pop
lahf
lahf
in
sub
mov
mov
add
mov
xor
stc
in
call
retf
imul
repz
add
ror
jle
mov
add
jno
int3
imul
cmp
out
jno
jp
or
shr
adc
rol
add
cdq
or
add
ja
mov
xor
xchg
or
push
out
mov
add
out
mov
dec
add
add
sub
fwait
enter
bound
stos
cmps
push
push
mov
xor
jl
imul
add
mov
inc
outs
gs
jl
add
test
add
gs
add
outs
call
aaa
sub
dec
ja
add
jle
add
dec
(bad)
xor
jp
add
mov
add
add
and
out
mov
dec
ret
jmp
in
add
mov
out
cld
sbb
ret
xchg
je
icebp
add
sbb
push
lahf
test
leave
clc
(bad)
mov
aad
cmp
lock
lahf
add
shl
add
mov
repz
sub
(bad)
mov
jae
(bad)
shr
mov
push
enter
mov
loope
push
and
cli
jbe
add
dec
xchg
mov
pop
dec
shl
dec
icebp
add
das
add
push
add
dec
ds
jmp
lock
mov
add
out
cmc
dec
xchg
pcmpeqw
mov
dec
mov
cld
popf
add
xchg
add
rol
inc
add
cdq
stos
mov
arpl
int
xchg
dec
and
sbb
xchg
ds
adc
loopne
sldt
ja
data16
fcmovnb
add
scas
sar
add
pop
xor
fld
lahf
call
mov
add
cli
add
into
add
cwde
and
sub
aam
jne
jge
(bad)
add
test
inc
movs
mov
dec
cmps
pop
mov
aas
in
add
mov
add
sbb
ins
lods
dec
fwait
test
xlat
out
pop
push
outs
repz
add
dec
or
or
xchg
mov
in
add
mov
sub
dec
sub
mov
push
repnz
add
mov
div
add
stos
test
add
dec
xchg
mov
add
xor
popf
add
add
mov
inc
add
test
cdq
fild
loopne
arpl
inc
add
add
mov
dec
cmp
loopne
jnp
(bad)
or
inc
add
pop
add
sub
add
add
inc
(bad)
out
popa
jnp
div
jp
add
repz
xchg
ret
popf
and
adc
jo
jnp
ja
data16
stc
scas
cwde
pop
repnz
sbb
add
fdiv
or
sbb
mov
and
add
movs
outs
dec
mov
int
add
and
lods
out
mov
mov
lahf
daa
add
mov
pop
xor
ss
add
retf
or
jnp
(bad)
fstp
in
bound
retf
int3
addr16
pop
mov
cmpxchg
mov
cmps
mov
mov
or
inc
push
add
loopne
daa
xchg
dec
add
(bad)
push
mov
callw
clc
sbb
and
adc
add
lahf
icebp
cld
add
xlat
dec
lahf
aas
enter
xlat
adc
dec
pop
dec
mov
retf
add
mov
int
push
inc
pop
cmp
mov
test
ins
out
fnstenv
push
push
fwait
xor
add
leave
add
cmp
add
add
add
ds
arpl
(bad)
mov
add
jo
clc
add
fadd
add
add
inc
test
add
pusha
xor
sar
icebp
cmps
test
add
sti
add
push
aam
jnp
and
sbb
add
retf
(bad)
add
push
fld
imul
pop
cwde
les
(bad)
ds
add
add
add
jo
xor
dec
(bad)
jmp
ret
add
icebp
and
push
dec
cmp
jp
rol
push
mov
add
call
(bad)
imul
hlt
cmp
or
xchg
test
lgs
out
pusha
inc
or
fsub
push
or
js
push
retf
add
jecxz
push
add
push
add
stc
mov
shr
add
rcl
mov
stos
mov
add
pop
jl
add
pop
aam
push
cmps
add
fs
cdq
ins
les
add
sbb
ins
add
lock
add
xor
ret
add
cmp
add
cli
and
dec
sbb
imul
call
mov
sub
(bad)
fistp
int
xlat
add
xchg
add
sbb
loop
add
pop
mov
sti
scas
ds
icebp
push
fwait
add
jo
mov
add
sbb
xor
or
or
mov
add
push
add
daa
out
mov
jmp
add
ja
sub
jo
add
xchg
rol
xchg
jmp
fistp
cmp
xchg
jmp
scas
lods
mov
mov
call
call
pop
fld
add
pop
add
fwait
clc
repz
in
cmp
add
fbstp
push
cmps
xor
cdq
movs
pop
enter
ret
js
add
jecxz
add
inc
adc
mov
add
push
(bad)
adc
xchg
add
leave
add
mov
cmp
mov
add
inc
bound
add
and
pop
mov
mov
aas
sub
pushf
cmps
dec
jb
clc
adc
add
fsub
sub
gs
stos
(bad)
sar
dec
mov
push
xor
push
scas
jecxz
add
ret
mov
cmp
xor
cmp
dec
mov
cli
sbb
add
jb
add
aas
or
add
jns
mov
xchg
push
mov
ins
mov
lahf
in
hlt
mov
ret
add
std
add
add
stos
add
sub
add
xchg
or
jecxz
add
add
dec
aaa
dec
jnp
add
add
add
add
xor
cmp
popa
mov
add
call
retf
outs
or
cmp
mov
(bad)
add
sub
jge
pop
jmp
test
fsubr
add
inc
and
movs
or
xchg
add
cmp
cmps
popa
add
jo
add
fcmove
test
mov
cdq
add
into
sbb
or
pop
pop
mov
inc
in
pop
add
add
xchg
dec
mov
out
or
inc
add
ins
leave
loop
add
add
pop
add
add
sbb
cmc
out
push
xlat
add
int3
mov
add
jnp
add
mov
add
lea
add
cmp
jb
rcl
add
add
cmp
jmp
add
in
ins
call
in
mov
add
mov
sub
std
pop
push
sub
lahf
add
cmps
push
add
adc
out
xor
add
pushf
push
add
out
add
dec
stc
inc
dec
mov
add
fsub
xor
ret
sbb
arpl
add
sbb
fs
mov
hlt
ins
ss
add
test
push
mov
lods
jge
xor
add
mov
inc
and
ja
movs
add
ror
ror
mov
add
add
xchg
add
retf
jb
push
or
ins
lods
add
jp
cwde
idiv
add
ret
inc
icebp
push
iret
mov
scas
sbb
fimul
idiv
cmp
stc
out
push
add
sbb
cs
xchg
xchg
fwait
loopne
(bad)
adc
jnp
movs
jg
fs
mov
push
sub
call
mov
pop
jbe
test
jl
add
imul
rol
add
ret
sbb
pop
jo
push
inc
movs
or
stos
add
xchg
xchg
add
cmp
leave
iret
arpl
sbb
add
jl
mov
pusha
sub
fnsave
add
adc
add
stos
dec
sbb
and
sbb
ret
adc
aam
call
nop
push
and
xchg
std
mov
movs
jmp
sub
jmp
in
sbb
add
add
push
popa
pop
(bad)
sub
jo
clc
out
sub
sub
mov
cwde
addr16
add
fs
pop
xchg
ins
leave
inc
xchg
mov
neg
xchg
add
aaa
add
std
xchg
add
das
jnp
xor
cld
xchg
in
add
test
pop
or
sub
ss
fld
in
dec
add
sbb
mov
add
adc
jl
ins
int
pushf
mov
popa
or
test
std
jnp
add
cmp
jb
mov
jnp
sti
sub
lods
add
cdq
out
sbb
mov
add
add
push
pop
stos
xlat
popf
pop
add
sbb
mov
sbb
xor
adc
add
out
add
mov
push
popf
sti
out
retf
pop
xchg
and
mov
js
add
stos
int3
jnp
jno
add
cdq
add
stos
lods
(bad)
xor
(bad)
das
xchg
mov
add
fist
jo
pop
imul
(bad)
inc
xchg
add
cdq
jl
add
ret
int
mov
add
mov
gs
in
mov
push
bound
xor
dec
sub
add
push
leave
inc
(bad)
cmp
(bad)
fld
mov
add
or
mov
mov
add
push
stos
shl
inc
xor
mov
jae
add
and
(bad)
fwait
xchg
inc
in
pop
cli
scas
int
add
repz
fsubr
inc
out
mov
add
adc
and
popf
adc
add
sbb
add
dec
arpl
sub
push
sub
test
push
mov
push
jmp
add
and
icebp
les
daa
add
pushf
add
scas
add
addr16
fmul
pop
jae
xor
add
add
and
mov
scas
out
int
add
add
in
std
test
loope
cmc
jmp
jl
mov
add
jge
pop
fadd
add
xor
mov
in
mov
(bad)
or
add
add
and
lea
ja
pop
mov
and
xlat
cmp
xor
mov
inc
push
mov
sub
mov
push
push
jbe
and
dec
fpatan
adc
dec
adc
call
adc
cmp
call
cdq
dec
sti
sub
test
bound
xor
add
mov
nop
or
mov
clc
sar
xchg
out
loopne
add
or
fwait
clc
popa
daa
cwde
push
inc
test
jecxz
mov
sub
das
inc
cs
mov
add
sub
scas
mov
add
add
push
cmp
fld
pop
vminsd
mov
pusha
clc
cld
dec
add
sbb
add
lock
mov
add
jecxz
or
mov
inc
adc
in
fwait
sub
add
ins
push
add
pop
jg
(bad)
aam
cwde
sub
xor
add
or
in
add
adc
lds
jne
(bad)
and
add
add
test
jl
stc
rcl
mov
add
and
push
ins
mov
xor
fsubr
aaa
cmp
mov
cmps
repnz
add
loope
push
mov
aas
pop
add
mov
pop
add
std
add
pop
push
and
dec
mov
xchg
push
inc
mov
add
les
(bad)
lahf
push
pop
stos
jg
shr
out
add
sub
fsub
sub
add
push
jle
inc
add
iret
add
push
lea
add
add
mov
push
cmp
cmp
dec
mov
call
outs
test
adc
cmp
pop
(bad)
outs
adc
xor
xchg
sub
jne
inc
add
adc
mov
sub
sbb
inc
push
pop
pusha
xchg
add
fcom
mov
xchg
pop
mov
loop
or
add
xor
cmc
into
push
jae
mov
jo
cdq
cmp
adc
inc
pop
add
and
lahf
popf
stos
cwde
icebp
mov
xor
inc
mov
int3
sldt
jno
add
push
mov
add
push
adc
retf
pop
or
pop
and
addr16
mov
aam
jmp
(bad)
sub
add
or
out
sub
jp
call
mov
pop
mov
pusha
test
fstp
add
aaa
inc
jne
add
and
imul
pop
push
and
sar
pop
jl
cwde
lods
shr
xor
add
daa
xor
mov
push
mov
mov
imul
jp
movs
jns
xchg
add
hlt
add
and
fistp
add
test
(bad)
and
xchg
fwait
push
sar
in
add
mov
(bad)
adc
push
adc
repnz
jmp
rcl
inc
xchg
cmp
loope
sbb
ret
les
add
loop
sbb
inc
mov
add
clc
or
add
scas
mov
shr
xchg
in
mov
iret
bound
lock
jb
(bad)
std
fadd
jne
add
cdq
fist
hlt
push
iret
adc
aam
mov
add
dec
(bad)
div
(bad)
in
mov
into
add
add
add
mov
scas
xor
jnp
mov
test
in
mov
test
movs
add
repz
xchg
and
pusha
sbb
add
enter
fdiv
call
adc
and
cmps
push
lea
into
inc
ret
dec
int3
fild
add
pop
enter
movs
popa
jbe
mov
push
jg
and
lds
add
sub
les
cmp
int3
hlt
(bad)
sub
add
cmp
adc
mov
shr
aaa
xchg
add
add
scas
add
add
cmp
aad
icebp
cmps
pop
mov
xchg
aam
test
(bad)
sbb
(bad)
fmul
inc
es
add
pop
std
add
ret
push
sub
add
dec
cmp
add
imul
or
mov
popf
stos
add
mov
add
sbb
add
add
add
out
adc
out
js
mov
std
add
inc
out
sbb
test
add
ins
jnp
and
jne
sbb
fmul
xchg
cmp
adc
add
pop
add
pop
imul
add
mov
add
cld
mov
ror
inc
fist
add
add
or
or
add
jle
add
fwait
xchg
jne
add
rcl
xor
mov
std
sahf
aas
and
sti
and
aaa
rol
add
cmp
fdivr
add
cdq
mov
(bad)
in
and
add
fdivr
fild
add
add
pop
je
clc
sub
add
ds
and
add
add
xlat
add
in
jno
pop
add
fsub
push
add
sub
dec
ror
pop
rcr
sbb
(bad)
movs
bound
sub
icebp
int3
dec
mov
mov
add
outs
add
push
add
adc
inc
xchg
out
add
mov
dec
ins
pop
loope
test
pop
in
sbb
pop
sbb
rol
add
push
fiadd
xchg
out
jecxz
mov
hlt
xor
add
shl
into
add
retf
mov
lods
mov
call
add
sub
neg
mov
mov
push
in
inc
xchg
leave
push
push
xchg
mov
xchg
fild
add
add
mov
jns
stos
stos
lods
clc
and
push
fadd
dec
mov
jnp
inc
mov
sbb
mov
rol
out
dec
add
add
test
pop
std
sti
sub
fwait
dec
add
int
ret
ins
pop
aad
xchg
out
inc
hlt
je
mov
add
push
(bad)
cmp
call
add
add
xchg
outs
dec
pop
push
mov
leave
add
mov
mov
xor
xor
xchg
xchg
outs
adc
jg
mov
mov
and
rol
scas
cdq
fbld
cmp
cmp
js
jmp
add
dec
stos
xor
fs
out
jge
jmp
add
or
in
add
push
push
test
mov
sbb
pop
mov
pop
cmp
xlat
test
(bad)
jne
add
call
adc
add
mov
imul
add
fsubr
mov
loopne
add
add
fisttp
(bad)
ficom
loope
pop
fldenv
add
push
outs
xchg
sub
xlat
in
mov
dec
jmp
push
xchg
pop
ror
mov
sub
call
fdiv
add
mov
rol
xlat
jne
push
daa
or
sub
xor
mov
mov
add
adc
mov
adc
add
push
fcomp
loope
mov
sub
cmp
cli
ins
imul
sbb
aas
loop
and
add
jnp
je
pop
rcr
in
mov
int
or
adc
cmps
ds
in
ror
jnp
pop
mov
iret
std
xchg
add
mov
ds
dec
add
vpcmpgtd
xchg
ss
popf
xchg
adc
sub
cmp
add
daa
mov
add
adc
add
inc
cmps
add
add
out
inc
ror
or
pop
test
inc
xchg
pop
adc
push
aaa
xor
pop
add
lods
stc
int
push
mov
rol
ins
add
add
sbb
push
mov
out
pop
test
ss
les
pop
xchg
cmps
jae
pop
les
or
cmp
xchg
js
lea
add
or
cmc
out
mov
sbb
mov
push
loop
scas
dec
repz
xchg
dec
xor
inc
mov
sbb
test
mov
mov
add
mov
idiv
fwait
inc
push
call
sbb
movs
mov
jne
arpl
jmp
cwde
(bad)
jnp
dec
add
add
dec
xchg
fldenv
pop
dec
cmp
mov
dec
movs
add
inc
popa
add
mov
repz
ins
daa
dec
out
add
mov
stos
jecxz
add
bound
loopne
add
add
adc
enter
cwde
jns
push
sub
or
add
es
push
dec
push
add
scas
dec
add
push
cmp
add
clc
push
imul
mov
not
and
mov
add
jl
add
syscall
cld
add
add
xchg
bound
jns
stc
enter
cmp
fadd
ret
call
cmp
add
fcom
pop
add
xor
shr
mov
add
repz
pop
cmp
mov
out
inc
push
fld
add
(bad)
mov
pop
xchg
fadd
bound
push
push
fiadd
add
add
sbb
adc
xor
add
xchg
pop
pop
gs
clc
add
sub
out
inc
fsubr
mov
xchg
jge
cmp
pop
or
sbb
add
cmp
dec
data16
inc
cdq
cmp
or
or
imul
push
pop
stos
xchg
call
lahf
loope
ss
scas
jge
xor
add
outs
and
test
push
sub
add
lods
js
add
add
sub
xchg
add
xlat
mov
add
stos
mov
fild
fadd
ins
gs
mov
add
in
add
xor
pop
ja
test
mov
ja
add
add
dec
mov
mov
add
adc
add
fcomp
add
rol
add
xor
fnsave
(bad)
out
mov
add
add
dec
(bad)
jecxz
push
add
push
lahf
pop
dec
xchg
or
sub
loop
add
pop
add
sbb
cwde
sbb
pop
add
cwde
cmp
and
sub
lea
dec
inc
add
(bad)
push
enter
retf
outs
fsub
inc
or
pushf
jns
loop
pop
add
retf
sbb
mov
add
das
cmp
add
add
outs
enter
xchg
add
or
jbe
jne
add
mov
dec
fadd
xchg
jbe
or
add
jge
gs
adc
sbb
sbb
shl
mov
add
add
add
loope
inc
nop
and
add
mov
repnz
cmp
mov
rcr
jmp
ins
imul
cld
dec
mov
add
inc
enter
or
adc
and
push
mov
add
in
add
adc
(bad)
retf
lods
jl
lods
call
jp
add
push
(bad)
cmp
in
fdiv
(bad)
add
mov
(bad)
xor
mov
xchg
mov
adc
push
sti
and
cli
mov
icebp
iret
inc
movs
and
adc
jae
add
nop
enter
scas
icebp
sbb
add
and
inc
daa
jnp
add
aas
movsx
add
pop
add
mov
mov
inc
dec
sahf
imul
add
sahf
and
js
aad
sbb
out
stos
cld
or
and
dec
mov
jg
lea
add
mov
sub
add
or
pop
clc
jp
and
pop
add
fild
mov
jo
pusha
js
push
xchg
add
rol
add
cmp
add
xchg
sbb
clc
retf
leave
fucom
inc
pop
cmp
or
int
mov
ret
jbe
(bad)
shl
add
stc
add
dec
das
xor
mov
xor
xor
jns
sub
adc
add
add
fdivr
sub
mov
xor
or
cmps
add
jp
inc
dec
add
push
xchg
xchg
jp
and
aad
mov
jns
add
clc
jmp
cld
fld
push
sbb
mov
xchg
mov
out
fimul
scas
sbb
adc
clc
mov
xchg
sti
push
push
fwait
pop
lahf
ret
pop
add
cmp
inc
stos
shl
(bad)
call
ds
ins
clc
add
ret
add
lds
sub
inc
mov
jbe
ret
add
xor
xchg
movs
shl
in
add
mov
jb
(bad)
ins
fmul
add
add
mov
add
fst
add
add
jp
mov
add
jp
add
stos
movs
add
inc
add
push
push
xchg
sbb
sub
lahf
and
add
movs
sti
and
xchg
add
mul
dec
(bad)
or
add
mov
xchg
push
mov
adc
ins
aaa
jle
add
or
clc
mov
add
shl
test
adc
and
add
cmc
je
loop
test
mov
call
std
xchg
aam
add
test
(bad)
dec
pop
fsubr
mov
mov
add
lods
fwait
cmp
fs
add
add
mov
sti
ucomiss
inc
rcl
add
xchg
add
dec
xchg
mov
sbb
pushf
xchg
mov
push
aaa
in
sub
sub
sub
xor
cdq
add
outs
mov
inc
loope
mov
mov
ror
pop
push
dec
repnz
add
push
mov
stos
add
push
pop
cld
mov
mov
mov
add
sar
(bad)
xchg
movs
mov
adc
add
data16
call
cs
(bad)
std
add
cs
leave
mov
xchg
(bad)
push
jmp
add
lds
xrelease
cmp
xor
push
pop
and
mov
add
fcomp
mov
mov
mul
sahf
cmp
add
cmp
push
pop
jle
scas
shl
cli
dec
jge
add
aam
inc
jg
add
dec
dec
adc
cmp
xchg
iret
mov
les
add
out
add
add
dec
add
inc
fs
enter
dec
cld
mov
adc
mov
xchg
xor
inc
push
cmp
add
sbb
stos
mov
push
js
add
jle
aam
inc
sub
add
add
das
mov
cmp
popa
dec
add
stc
add
ja
xor
lods
ficomp
xchg
stos
add
and
inc
jae
mov
jno
xchg
inc
retf
dec
iret
and
cs
movaps
shl
cdq
add
jge
add
sahf
jae
gs
cdq
add
xchg
xor
outs
add
out
rol
rol
add
sub
rol
imul
xor
mov
fild
or
retf
add
mov
and
imul
bound
mov
dec
aam
into
jl
add
add
mov
inc
ins
add
cmp
out
cdq
nop
inc
mov
movs
das
inc
loopne
pop
or
xor
add
into
cmps
inc
add
dec
es
(bad)
aaa
mov
dec
bound
jmp
add
pushf
cmps
das
pop
enter
pop
ficomp
add
push
outs
inc
call
jge
jg
cmp
or
add
movs
fs
sub
push
iret
add
add
test
repnz
cmp
add
imul
mov
or
rcr
add
dec
add
push
call
mov
hlt
jne
push
outs
mov
add
fs
mov
add
fcom
inc
inc
pop
stos
xchg
sub
outs
mov
out
mov
and
loope
rol
add
add
sub
xchg
nop
and
adc
add
ss
sub
add
add
xlat
jle
ins
add
stos
fdivp
shl
rcl
stc
fbld
fucompp
inc
mov
arpl
mov
add
add
ds
aad
xor
xchg
icebp
pop
jbe
popf
sub
lock
fwait
dec
rcr
add
popa
pop
pop
or
push
sbb
std
mov
add
pop
cmp
dec
cmp
int
cmp
call
and
jle
mov
sub
add
lea
dec
das
or
xchg
add
imul
mov
cmps
in
imul
jl
xchg
pop
xchg
mov
push
imul
mov
add
or
cmp
jl
inc
jecxz
mov
stc
loope
icebp
add
sub
sbb
out
push
mov
add
ret
inc
mov
add
and
aas
add
add
jno
push
add
retf
or
add
mov
retf
loope
mov
add
jnp
jo
outs
daa
dec
and
pop
sbb
pop
push
repnz
fwait
int
aas
cmp
xor
jecxz
fld
pusha
and
push
loopne
add
jmp
add
int
repz
pop
add
inc
and
xchg
cmp
jae
shl
sbb
adc
add
cld
sub
add
pop
add
mov
jecxz
add
mov
dec
ja
jmp
jl
sub
scas
sub
add
dec
and
ds
pop
jg
adc
jmp
add
inc
add
into
pusha
xor
xor
hlt
jmp
mov
aas
arpl
daa
add
add
push
xchg
test
js
(bad)
adc
stos
or
add
jb
xlat
dec
lods
inc
mov
add
add
sbb
add
push
pop
mov
rol
and
add
mov
out
cmp
push
pop
add
jge
add
int3
in
jne
sub
sbb
movs
xchg
pop
in
pop
xor
jmp
sahf
add
aas
xchg
mov
sub
loope
lds
sbb
pop
fldcw
pushf
add
into
rol
imul
cmps
jmp
add
sub
outs
push
push
mov
pop
loope
xlat
jp
add
add
xor
add
mov
mov
adc
push
add
sahf
ret
ret
fisttp
add
inc
out
les
jne
imul
cmp
outs
ficomp
sbb
xchg
fldenv
xchg
in
or
stos
add
xor
jo
ret
pop
fs
sti
test
xor
xor
add
dec
inc
add
(bad)
cmc
fild
add
rcl
pop
outs
add
or
out
mov
leave
aaa
inc
ins
add
add
push
test
add
jmp
mov
ins
add
lea
adc
xchg
inc
add
cli
add
adc
push
mov
add
add
jbe
push
cmp
repnz
sbb
repnz
fxch
mov
add
push
xlat
add
imul
add
(bad)
sahf
lds
in
in
add
fist
inc
push
jb
add
or
or
adc
add
jns
sti
push
mov
add
adc
mov
push
add
add
xchg
leave
add
push
inc
and
sub
pop
das
push
add
popa
ret
pop
enter
cdq
repz
add
mov
aas
inc
sub
xchg
add
out
imul
mov
jnp
add
sub
sub
sahf
or
dec
(bad)
repz
ret
fnstenv
add
(bad)
mov
add
je
add
lock
add
add
fnstcw
add
add
fld
shr
add
dec
sub
cmp
add
add
add
pop
add
xchg
in
push
or
repz
mov
add
xor
lahf
(bad)
out
sub
add
inc
add
sbb
ror
add
test
adc
add
int
ja
xlat
add
mov
add
bound
jne
lods
add
sbb
add
add
xchg
cwde
add
lods
mov
add
enter
add
add
cld
add
fmul
add
lahf
rcl
inc
adc
iret
add
stos
add
and
or
dec
pop
pop
xor
imul
add
pusha
(bad)
sbb
data16
dec
adc
adc
out
out
adc
cmp
add
cwde
add
push
add
cwde
gs
add
xor
arpl
add
stos
mov
add
retf
lahf
div
jb
add
scas
dec
mov
add
and
add
mov
push
cmp
xchg
sub
add
mov
inc
ins
lock
mov
jmp
test
mov
add
jle
add
cpuid
jmp
(bad)
add
xor
pop
xor
jbe
add
mov
fsubr
sbb
push
add
add
test
mov
adc
cmc
xchg
ja
int
in
jmp
mov
push
pop
and
cmp
dec
jbe
add
int
sbb
sub
add
ret
cli
pop
add
push
inc
cmp
jmp
add
jo
mov
add
adc
sub
and
xchg
fmul
(bad)
cld
add
scas
fld
mov
test
add
push
dec
xchg
shl
mov
std
add
xchg
mov
jmp
dec
dec
pop
sahf
xchg
add
fdivr
or
lds
movs
pop
aad
mov
arpl
add
test
and
dec
jp
jl
add
and
sahf
outs
and
add
int
xor
jbe
icebp
jmp
add
adc
fwait
(bad)
pop
pop
icebp
adc
cmp
cmp
aaa
add
lsl
mov
push
rcr
mov
jnp
fs
push
fcomi
jb
fist
mov
jmp
inc
mov
pushf
add
(bad)
in
add
inc
jl
xor
fidiv
dec
dec
or
push
(bad)
mov
mov
add
ds
ds
pushf
sbb
stc
and
mov
adc
fwait
hlt
imul
add
lea
jmp
(bad)
aas
sub
fld
mov
ret
or
jns
out
mov
arpl
or
add
in
add
or
js
add
sub
cmps
test
mov
movs
or
add
push
xlat
out
cmp
rol
jnp
push
add
mov
add
add
std
sti
mov
add
cli
pop
jbe
jae
enter
add
lea
int
add
int3
mov
mov
mov
add
pop
(bad)
mov
cmp
rcl
add
cli
sbb
push
leave
add
or
mov
dec
out
test
add
movs
xchg
sub
adc
iret
push
push
fwait
inc
aam
mov
inc
inc
fild
add
cdq
xchg
add
fs
add
test
add
and
rol
xchg
pop
popf
push
adc
pop
and
jmp
cmp
jle
nop
add
jecxz
mov
add
jo
stos
js
push
or
xchg
xor
or
add
inc
aas
xchg
dec
mov
add
cmps
leave
(bad)
dec
xchg
fiadd
push
mov
pop
jo
mov
mov
pop
mov
pop
nop
call
pop
add
pop
arpl
inc
ret
pop
inc
jo
mov
xchg
add
fsubr
add
lods
xor
jg
sub
ins
and
scas
push
sub
and
push
mov
int3
les
inc
pop
pop
add
lds
pop
out
ins
ret
jno
cld
mov
xor
sub
sbb
add
or
add
dec
leave
loopne
add
sub
add
xor
data16
lea
mov
and
lahf
jle
scas
inc
lahf
add
pop
add
cmc
xor
std
mov
sbb
pop
adc
mov
mov
iret
or
adc
xchg
mov
movs
std
and
add
movs
fwait
aaa
aad
dec
js
(bad)
lock
lahf
xchg
add
jnp
add
xchg
add
sbb
out
ss
add
jl
cmp
add
imul
xchg
jnp
div
xor
mov
enter
in
mov
xchg
add
add
xor
or
add
add
inc
cmp
and
imul
in
add
add
xor
push
dec
gs
sbb
add
sbb
retf
data16
push
add
mov
inc
imul
scas
push
jecxz
xor
push
retf
mov
add
sub
sti
test
retf
shr
add
mov
xor
dec
rol
pop
mov
push
cmps
jge
ret
out
inc
hlt
add
add
xor
xchg
ficomp
loopne
(bad)
sar
retf
retf
outs
add
dec
jle
sbb
jbe
mov
cmp
mov
(bad)
loop
xor
add
jle
bound
fwait
pop
in
push
pushf
(bad)
dec
add
xor
bound
add
icebp
cmp
add
scas
add
cmp
pusha
ficomp
sbb
fiadd
add
cmps
loopne
xchg
loopne
add
pushf
cmp
and
sbb
gs
fdivr
in
pusha
jnp
imul
add
pusha
call
test
pop
jne
mov
ss
add
stos
xor
add
add
and
add
jl
add
pop
cmps
ins
(bad)
mov
mov
ja
sub
sahf
add
mov
daa
mov
(bad)
movs
mov
(bad)
push
dec
sbb
mov
add
mov
inc
dec
push
mov
add
clc
add
(bad)
mov
pop
jle
add
iret
ja
dec
push
dec
hlt
xchg
add
adc
pushf
into
add
test
sub
inc
sbb
iret
sbb
or
ror
add
in
add
or
add
inc
mov
jle
xchg
and
aaa
xchg
rcl
cmp
aad
call
sar
adc
add
mul
cmp
cdq
add
add
sbb
cmps
push
aaa
dec
icebp
add
addps
pop
cmp
add
push
add
pop
xor
aad
cmp
xor
jbe
nop
sub
push
je
add
cs
shr
sbb
or
add
pop
sub
xor
cmp
jle
fdiv
add
add
in
add
add
add
mov
add
fadd
add
add
add
test
add
jmp
add
add
add
add
add
ret
add
add
add
add
add
add
sldt
add
mov
mov
mov
mov
ret
mov
push
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
sub
mov
mov
pop
ret
nop
mov
call
ret
nop
push
mov
add
mov
mov
mov
push
call
mov
dec
mov
mov
push
call
inc
cmp
jne
cmp
je
mov
jmp
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
call
call
cmp
jg
mov
mov
mov
mov
xchg
mov
mov
mov
and
call
mov
mov
mov
call
cmp
je
mov
jmp
mov
mov
add
mov
call
dec
mov
mov
cmp
je
mov
mov
lea
sub
mov
pop
ret
mov
cmp
jne
mov
or
inc
add
inc
add
or
mov
sub
mov
cmp
je
call
dec
mov
mov
mov
test
je
mov
mov
jmp
mov
cs
add
add
stc
add
add
mov
inc
add
(bad)
