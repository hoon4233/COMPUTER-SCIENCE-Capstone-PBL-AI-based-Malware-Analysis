cld
xchg
xchg
add
iret
inc
add
in
ins
test
mov
stc
add
rcr
sub
rcl
or
dec
in
xor
daa
test
pop
shr
add
add
paddb
in
mov
sbb
fimul
cmp
inc
fnsetpm(287
in
int
rol
mov
lock
sbb
cmp
enter
mov
xchg
addr16
jnp
addr16
or
pop
cmp
fcomp
pop
inc
out
pusha
out
dec
pusha
xchg
mov
add
add
pop
popf
ins
xchg
fistp
dec
test
and
add
cli
call
aas
jo
jb
mov
sub
pop
nop
dec
in
daa
iret
push
jb
imul
fldcw
je
pop
add
lock
pop
cmp
fadd
pop
repnz
xlat
outs
das
daa
add
add
add
pop
xlat
sub
adc
add
in
pop
ss
xlat
lods
hlt
xor
push
imul
div
add
stos
stc
sub
sti
sub
inc
lods
pop
(bad)
push
add
and
fistp
or
imul
xchg
dec
sub
sub
sbb
pop
fmulp
shl
in
hlt
sti
or
popf
retf
shl
cmc
inc
or
imul
neg
adc
adc
pop
cs
push
mov
sbb
sbb
fld
int
mov
and
and
aas
add
sub
cmp
mov
jne
add
inc
add
adc
xlat
push
or
xor
xchg
push
fiadd
verr
cmp
inc
add
in
xchg
aas
aaa
je
inc
mov
(bad)
pop
sbb
mov
push
and
mov
shl
scas
popa
das
nop
jne
popa
daa
push
data16
add
in
add
add
inc
call
cld
adc
iret
out
in
cmp
ins
adc
adc
cmp
and
hlt
rcl
adc
jns
mov
adc
mov
in
xor
adc
fcom
or
enter
dec
rcl
xchg
adc
inc
sahf
and
dec
je
cwde
sub
adc
jo
stc
popf
mov
fwait
nop
adc
and
out
adc
and
sahf
and
pusha
mov
inc
pop
jl
pop
cmp
inc
inc
lods
pusha
push
adc
pushf
les
xor
sbb
mov
adc
adc
enter
and
mov
xor
or
loopne
inc
sahf
and
adc
cmp
stc
popf
mov
sbb
mov
jae
adc
adc
out
enter
inc
dec
adc
adc
mov
iret
fcom
nop
int3
add
or
adc
inc
sub
movs
push
fldenv
inc
daa
pop
hlt
mov
cmps
xor
jmp
movs
push
stos
add
leave
or
jo
push
outs
ja
ins
outs
popa
fs
fcom
push
mov
sti
(bad)
aas
(bad)
in
dec
mov
cmp
add
sbb
outs
addr16
jae
inc
popa
jb
(bad)
inc
push
or
mov
shr
test
mov
fstp
mov
mov
(bad)
movs
(bad)
cmp
dec
xor
cmp
(bad)
hlt
(bad)
(bad)
call
and
enter
xchg
or
addr16
or
lods
xor
add
movs
rcl
shr
mov
ins
dec
popa
imul
add
popa
jbe
jb
(bad)
and
ins
outs
mov
inc
or
sbb
inc
add
(bad)
cmp
je
xchg
shr
xor
imul
push
imul
and
pop
cs
push
adc
xor
and
iret
out
pop
movaps
inc
(bad)
cmp
push
les
outs
das
nop
add
inc
add
add
icebp
int3
add
repnz
add
shl
adc
or
cmp
(bad)
mov
add
out
sbb
enter
jmp
ds
das
mov
add
icebp
cmp
das
push
push
inc
shl
ret
dec
pop
pop
sbb
push
push
(bad)
rol
sbb
mov
das
mov
jg
ja
sub
lock
not
add
cs
xor
sub
sahf
sahf
xchg
mov
jmp
and
bts
fiadd
cmp
lods
xchg
add
cmc
shl
add
(bad)
fadd
repnz
sbb
aam
shl
pop
cmp
adc
add
call
xor
ja
sub
repz
add
pop
xlat
std
ja
test
jp
imul
call
cld
test
sbb
out
fdivrp
ja
add
pop
pop
push
add
enter
add
inc
cmp
pushf
ja
ja
pushf
mov
add
add
or
add
mov
test
ins
test
and
neg
stc
add
lea
mov
and
xchg
adc
add
in
fldcw
sbb
dec
sub
aas
mov
popf
and
adc
mov
movntps
or
dec
or
sbb
cmp
xor
adc
or
or
pop
jae
push
add
bound
sub
push
inc
xor
jbe
push
jp
push
add
sub
adc
(bad)
mov
sub
inc
add
add
inc
cmp
sbb
add
in
pop
out
dec
cmp
push
or
bound
adc
cmp
xchg
sbb
push
and
mov
enter
sub
cmp
lar
loopne
add
out
jne
add
jae
loop
and
push
enter
jo
or
sbb
sub
sub
adc
fadd
dec
add
push
add
aaa
and
push
xor
test
push
adc
dec
add
data16
(bad)
mov
or
add
out
stos
fcos
stos
stos
fwait
sbb
je
pop
imul
mov
int
add
cmp
scas
mov
loop
jecxz
in
pop
shr
jmp
sub
or
arpl
fbstp
pushf
out
and
loope
add
and
arpl
inc
adc
cli
imul
pop
test
ja
push
imul
popa
fld
arpl
arpl
jo
and
cmp
or
out
stc
outs
pop
retf
call
and
ins
dec
aaa
add
mov
je
ret
call
rol
rcr
into
fld
(bad)
sub
add
test
sbb
dec
adc
sbb
mov
inc
stos
and
nop
mov
xor
xor
sub
popa
mov
lahf
pop
cld
(bad)
(bad)
aaa
mov
cpuid
call
dec
sub
or
push
inc
(bad)
aad
in
cmp
clc
jo
add
and
outs
pop
call
fpatan
iret
addr16
cli
aad
addr16
inc
(bad)
sub
arpl
mov
cmps
data16
icebp
xor
pop
btc
inc
sti
jg
rcl
mov
div
shl
or
xchg
mov
cmp
pop
cs
mov
dec
imul
fucomip
call
mov
pusha
push
addr16
ret
sti
sti
(bad)
imul
popf
scas
jmp
pop
paddusw
fidivr
pop
fcomi
and
mov
jge
xchg
loop
loopne
fsubp
shl
aam
push
ret
lds
cwde
cmc
cmc
shr
cwde
mov
shl
xor
sub
ror
ins
sbb
fdivr
mov
push
sbb
inc
clc
lea
jnp
imul
clc
rol
pop
dec
adc
sbb
jnp
inc
mov
xlat
xlat
mov
fisub
test
dec
not
xlat
pop
repz
lock
dec
out
rcr
mov
hlt
imul
jmp
push
fnsave
aad
push
jmp
dec
ds
xor
outs
cmp
sbb
test
pop
fucomi
(bad)
mov
xor
xor
pop
je
call
rcl
not
sti
mov
rcl
mov
iret
gs
das
stc
xor
push
ror
cmp
in
aas
call
jmp
inc
(bad)
xchg
lods
stos
mov
scas
rcl
push
push
mov
aam
leave
leave
stos
inc
addr16
aaa
fisub
jecxz
dec
cmp
imul
dec
jb
sbb
fwait
inc
inc
xlat
inc
(bad)
lea
iret
iret
mov
xor
fcomp
mov
add
sbb
add
cmp
push
push
out
mov
cmp
arpl
pop
movs
call
popf
test
sti
pop
jmp
pop
inc
sub
retf
retf
or
xchg
xchg
jge
inc
push
mov
inc
and
mov
fldenv
add
rcr
add
add
inc
cld
stc
or
je
lock
loopne
add
xchg
and
sti
xor
add
add
clc
dec
push
push
mov
and
stos
in
add
cmp
pop
or
add
call
jecxz
popf
cmps
mov
inc
sub
ss
shl
sub
or
or
jae
lods
call
dec
aaa
dec
rcl
fmul
xchg
dec
cmp
je
xor
or
or
hlt
arpl
jne
ror
test
test
push
fld
dec
ret
add
ret
inc
or
and
mov
pop
imul
adc
mov
fimul
jecxz
mov
push
and
pop
add
add
add
mov
out
(bad)
jg
sbb
add
xor
pop
mov
scas
or
mov
bound
mov
dec
push
sbb
test
adc
and
sub
leave
adc
xor
add
or
out
mov
sbb
sub
mov
imul
or
mov
xor
pop
dec
and
sub
or
xchg
(bad)
adc
mov
mov
xchg
mov
xchg
imul
ss
xchg
add
sbb
out
and
or
xor
aas
lock
push
inc
sbb
pop
and
cdq
sub
dec
js
lock
add
or
sbb
and
sbb
arpl
aas
mov
ins
nop
dec
pop
jg
call
in
pop
xor
jmp
jle
jno
add
mov
int
and
pusha
or
popa
fild
fnstenv
fisub
call
or
out
out
add
mov
xchg
data16
mov
cmp
lods
sbb
sub
ret
test
jg
loopne
lods
dec
sub
arpl
in
in
retf
add
fiadd
xchg
stos
fbld
gs
fild
inc
mov
gs
test
imul
mov
dec
inc
jne
push
pop
mov
xchg
xchg
jl
ret
inc
pop
or
stos
(bad)
sti
fild
cmp
push
pop
jmp
in
xchg
push
outs
jecxz
shl
xchg
mov
fxch
push
daa
call
add
enter
jg
jg
and
pandn
shl
xchg
adc
(bad)
out
popa
popa
sub
(bad)
sbb
dec
(bad)
jecxz
mov
mov
push
stos
inc
xor
scas
ss
or
daa
adc
fidiv
mov
mov
(bad)
or
inc
sbb
xchg
jg
push
add
cmp
fs
addr16
retf
rol
mov
mov
movs
push
push
dec
push
aas
mov
mov
pop
jbe
(bad)
xor
nop
je
cs
and
sbb
jmp
sub
or
lods
fld
mov
ror
movs
add
fild
jg
mov
push
lahf
mov
sbb
mov
mov
scas
scas
xchg
retf
or
xchg
lods
js
pop
pop
cmp
dec
pop
sbb
mov
or
sbb
ror
mov
push
lahf
(bad)
cmp
xor
pop
rcl
pop
movs
stos
dec
outs
jae
add
mov
mov
stos
jo
pop
push
xchg
cmps
jmp
cwde
push
neg
xchg
stc
pop
xchg
lahf
lahf
mov
pop
pop
dec
lahf
pop
sbb
cmp
dec
inc
adc
cs
je
dec
ret
mov
faddp
add
jl
and
cdq
shr
das
adc
lahf
xchg
xchg
sbb
mov
shl
mov
aaa
adc
dec
jo
fs
mov
ret
xchg
pop
ss
sub
popa
repz
sbb
ret
mov
cdq
add
nop
or
retf
or
mov
pop
enter
aam
aam
cmp
arpl
imul
xchg
xor
mov
inc
push
bound
call
pushf
jno
push
xchg
jnp
inc
xor
xlat
sbb
daa
mov
dec
ja
sbb
adc
push
jnp
sbb
out
adc
add
or
xchg
add
retf
neg
pop
lock
adc
leave
mov
rol
xchg
out
add
add
aas
clc
cld
xor
xor
(bad)
imul
inc
fld
pusha
and
add
adc
add
sub
popa
rol
mov
add
sti
or
inc
mov
add
cli
ficomp
xchg
push
imul
cmps
jmp
adc
fild
mov
movs
sbb
xor
cmps
jmp
jg
call
ds
and
adc
jnp
sub
cmps
jae
cmps
imul
xchg
in
add
add
imul
mov
call
push
and
mov
sbb
push
mov
add
pop
imul
sti
call
mov
dec
test
sub
imul
add
fadd
daa
ror
stos
lahf
cdq
cdq
mov
and
inc
mov
data16
dec
ret
pusha
aad
lahf
lds
xor
xlat
(bad)
popf
xchg
rol
outs
jnp
ins
sbb
jecxz
and
jmp
push
push
add
and
and
add
mov
pop
add
mov
dec
jnp
or
mov
mov
mov
and
lods
xor
popa
add
sti
add
add
popf
adc
ret
pop
rcl
or
pop
mov
das
or
adc
leave
xchg
xor
adc
add
push
dec
(bad)
and
ss
add
cmc
mov
and
and
and
das
pop
ret
xchg
adc
nop
pop
in
and
mov
fstp
adc
add
test
fnsave
dec
shl
push
dec
sub
dec
cdq
aas
test
mov
mov
mov
xlat
mov
inc
bt
and
daa
xchg
pusha
les
mov
out
jmp
dec
ret
inc
lahf
daa
add
cmp
call
push
xor
ror
mov
(bad)
fsubr
enter
in
adc
push
xor
sbb
in
add
imul
enter
mov
and
push
pop
push
xor
mov
pop
bndstx
fcomp
push
popf
cmps
sbb
push
icebp
ret
inc
or
fs
mov
xlat
inc
sbb
or
pop
nop
shl
frstor
inc
xor
push
test
mov
pop
dec
dec
sbb
mov
sbb
xchg
xchg
sub
stos
div
mov
lock
jecxz
daa
push
jo
adc
fdiv
fdivr
push
out
inc
nop
or
or
push
lock
mov
ret
int
lea
leave
add
add
movs
clc
push
inc
inc
aaa
mov
pop
ret
(bad)
mov
rcl
out
lahf
scas
pop
dec
push
arpl
adc
xchg
mov
fiadd
daa
add
fs
sub
adc
fisubr
popa
mov
dec
ret
xchg
hlt
jae
dec
aas
cmp
dec
xor
pop
mov
mov
inc
and
xor
aas
sub
sbb
xlat
loop
and
movs
in
(bad)
fucomi
jo
push
xor
pop
push
(bad)
and
adc
test
call
xor
add
pop
sbb
ja
adc
outs
sti
xchg
mov
xchg
test
mov
into
mov
aas
sub
nop
cmps
das
and
jg
jno
xchg
retf
jecxz
movs
inc
call
pop
xchg
mov
pusha
pop
in
leave
(bad)
push
(bad)
and
push
retf
mov
mov
or
sar
iret
mov
push
sub
pop
mov
cmps
cmp
sub
cmp
jmp
mov
push
(bad)
xor
inc
add
push
xchg
push
mov
pop
retf
push
mov
jmp
pop
inc
dec
fsub
shl
add
pop
ret
movs
mov
psrad
imul
cdq
sub
fwait
jae
(bad)
outs
inc
scas
clc
jecxz
arpl
dec
test
dec
imul
mov
xchg
xor
mov
std
and
aas
sub
xchg
jmp
fimul
xchg
(bad)
push
mov
nop
push
mov
pop
aaa
adc
cdq
enter
shr
(bad)
outs
pop
inc
arpl
add
pop
add
sar
add
(bad)
cmps
imul
sub
add
mov
jae
(bad)
ja
sbb
mov
addr16
push
sub
mov
aas
adc
pusha
dec
dec
aas
mov
add
not
rcr
test
cmp
dec
retf
push
or
pusha
mov
xor
test
sub
and
adc
retf
(bad)
cmps
nop
rol
lahf
test
mov
ret
pop
sub
lahf
call
lock
retf
lods
sti
fcmovu
dec
push
jge
(bad)
push
xor
jo
jmp
es
pop
pop
mov
inc
sbb
retf
addr16
and
ja
and
stos
add
mov
adc
stos
pop
mov
push
mov
inc
out
dec
shl
push
mov
push
cmp
jo
pop
(bad)
mov
retf
addr16
nop
outs
nop
mov
hlt
sbb
test
outs
stos
dec
push
mov
(bad)
sbb
pop
pop
pop
mov
test
packssdw
(bad)
(bad)
cmp
dec
add
dec
and
add
add
sbb
(bad)
dec
add
fld
jmp
mov
pop
pop
adc
loope
pop
add
ja
and
scas
xchg
push
jge
fnstenv
sub
xchg
add
add
fsubr
imul
fwait
retf
(bad)
movs
imul
xchg
and
adc
movs
sbb
jl
in
push
outs
jmp
aas
aas
mov
loop
dec
shl
sub
lock
xor
fstp
jae
es
das
xlat
add
jb
ret
dec
push
cmps
dec
repz
mov
int3
test
pop
sub
cmps
imul
cmps
inc
call
ins
mov
xor
mov
or
pop
add
(bad)
gs
retf
(bad)
cmps
mov
outs
mov
retf
cmps
push
jmp
scas
data16
inc
mov
dec
dec
inc
mov
ins
nop
xchg
cmp
jecxz
push
mov
inc
jmp
outs
xchg
int
or
and
loopne
movs
mov
repz
dec
or
call
dec
add
xchg
das
sbb
mov
call
mov
or
jge
pop
mov
and
jle
retf
imul
mov
mov
mov
dec
ret
dec
sbb
addr16
mov
push
cmp
sub
fs
fldcw
and
mov
mov
(bad)
cmp
jp
(bad)
outs
ror
push
jmp
and
xor
mov
mov
ret
sub
xor
mov
daa
jecxz
pop
xchg
ret
push
sub
int3
ret
push
pushf
inc
sbb
and
push
leave
ds
(bad)
inc
inc
cmpxchg
xor
dec
mov
(bad)
pusha
add
cmps
or
enter
pop
mov
mov
aas
mov
cwde
fimul
and
jmp
inc
cs
push
jge
arpl
fistp
lahf
dec
cli
sub
cdq
or
mov
dec
add
jecxz
fs
mov
add
(bad)
cmps
popa
xor
ja
mov
cmp
in
cmp
xor
xor
sbb
xchg
add
(bad)
repz
inc
push
push
mov
push
mov
nop
cmps
jmp
sbb
add
sub
xor
enter
adc
scas
add
call
push
pop
dec
pop
cld
sub
repnz
lock
add
enter
jg
adc
cld
pop
psubb
cmp
lock
mov
fsub
and
xchg
pop
(bad)
cld
fistp
sidtd
inc
(bad)
dec
push
stc
pop
add
pop
repnz
out
inc
pop
push
addr16
sbb
cmps
inc
in
and
adc
and
push
fadd
add
mov
add
and
cmp
sbb
fs
call
xchg
movs
sbb
wbinvd
pop
retf
push
adc
and
xor
and
repz
pop
xor
retf
push
icebp
mov
sbb
add
test
and
scas
mov
je
jge
sbb
sub
xor
shl
punpckhwd
sub
and
fldenv
push
pop
push
adc
test
movzx
repz
add
add
test
fs
xchg
pop
dec
inc
aas
and
sbb
(bad)
test
pop
mov
retf
pop
mov
enter
jecxz
ins
cmp
mov
in
sbb
inc
call
jp
xor
push
mov
mov
and
sbb
push
pusha
pop
mov
adc
or
(bad)
add
pop
jae
pextrw
pop
push
add
and
nop
sbb
loopne
adc
or
test
xor
or
pusha
jmp
fimul
mov
push
jo
push
out
cs
xchg
je
pop
add
gs
jnp
imul
jmp
aaa
add
xor
inc
mov
lods
push
les
leave
adc
dec
and
ins
adc
sub
mov
and
xchg
dec
xlat
and
in
pop
cmp
inc
shl
sbb
push
inc
sub
mov
add
inc
stc
arpl
int3
int3
mov
addr16
add
sbb
inc
xchg
or
pop
jecxz
mov
mov
dec
sub
and
pop
inc
call
lods
dec
push
push
rcr
or
add
cmp
inc
and
pop
test
adc
scas
retf
pop
retf
add
dec
mov
add
push
push
mov
inc
nop
pop
inc
rol
cmps
jmp
push
jnp
jnp
mov
mul
sti
inc
add
(bad)
cs
xor
shl
arpl
prefetchnta
cmps
and
push
test
jmp
or
inc
xchg
movntq
hlt
push
adc
repz
xor
dec
xor
outs
sub
stos
test
(bad)
pusha
(bad)
dec
les
or
pushf
mov
adc
cmp
and
pop
pop
xchg
gs
or
or
or
rcr
loope
or
idiv
sbb
lods
push
cmp
push
shl
ret
imul
jl
xchg
pop
imul
adc
cmps
sub
and
(bad)
inc
and
mov
test
leave
pop
fiadd
pop
mov
or
mov
push
xor
and
push
fild
adc
dec
adc
sbb
sti
xchg
cdq
pop
mov
xor
add
and
xor
xor
add
sti
and
or
adc
movs
dec
xchg
mov
sub
sbb
dec
bound
push
jl
and
daa
ja
mov
and
push
cmps
fisttp
sub
dec
add
add
adc
adc
test
sbb
xor
cmps
in
pop
scas
imul
sub
pavgw
add
rol
add
xchg
add
add
sub
dec
daa
sbb
xor
pop
add
sbb
cmp
and
fwait
jnp
pop
add
jg
sbb
sbb
imul
inc
or
repz
add
mov
sbb
lahf
popf
outs
mov
and
or
sti
sbb
inc
lock
xor
push
aas
or
retf
jae
pop
xchg
jmp
adc
fs
das
xchg
les
xor
push
xchg
mov
nop
lea
daa
adc
les
popa
inc
inc
adc
sub
mov
sub
(bad)
inc
cmp
mov
sub
mov
pop
je
and
or
dec
or
dec
les
and
(bad)
ret
or
xor
pop
jmp
fiadd
pop
xchg
mov
and
dec
xchg
sbb
or
sub
xor
pusha
jnp
mov
or
dec
sub
add
lds
test
in
pop
and
cmp
jno
adc
imul
or
lds
add
sub
and
psubq
mov
ret
dec
popa
adc
inc
push
sbb
mov
push
jmp
xor
mov
mov
xchg
enter
(bad)
mov
jno
xchg
or
pusha
pop
add
ins
pop
and
and
arpl
sqrtps
shr
shl
xor
sub
add
pop
or
lahf
cmps
inc
and
and
cmps
adc
lods
lods
xchg
out
or
pusha
add
pop
xor
xchg
test
add
adc
in
push
test
push
jmp
fnclex
sub
adc
mov
pop
jecxz
sub
mov
pop
adc
and
rcr
inc
add
add
cs
(bad)
dec
popf
js
movs
push
pop
test
imul
loope
pop
and
jnp
adc
xchg
push
fcomp
ins
mov
inc
push
pop
test
lods
ud0
or
mov
add
nop
mov
pop
mov
sub
jnp
aam
adc
pop
(bad)
add
add
inc
retf
add
nop
mov
sub
adc
pop
test
ins
pop
fist
and
xchg
gs
lods
mov
adc
fldcw
and
movs
call
and
adc
sahf
mov
inc
add
dec
or
pop
fwait
dec
ror
push
neg
xor
and
int3
mov
sub
xor
or
push
sbb
sbb
cmp
mov
fiadd
iret
(bad)
out
push
add
add
mov
pop
xchg
and
das
push
mov
pop
and
cmp
adc
or
cvtps2pi
and
add
xchg
loopne
inc
ret
icebp
lds
or
mov
inc
pop
mov
mov
jmp
pop
repnz
call
les
xor
xchg
ret
jg
sub
sbb
fld
and
jmp
movs
add
xchg
add
pop
sbb
cmp
and
sub
adc
inc
pop
mov
push
or
inc
sbb
stc
push
aam
inc
push
rcr
pop
mov
pop
pop
adc
xchg
je
inc
pop
pop
dec
imul
xor
push
mov
shld
sub
dec
inc
sub
or
movs
pop
xor
and
pop
cmps
or
sub
and
add
imul
fadd
pop
adc
mov
cmp
fadd
or
adc
dec
lock
fs
pop
xor
xor
cvtpi2ps
jo
sti
and
adc
(bad)
out
repz
nop
inc
sub
adc
and
out
test
add
inc
cmps
push
popa
and
mov
test
sub
pop
or
and
cmp
add
add
popa
add
aaa
inc
lds
pop
jmp
xchg
sub
(bad)
inc
add
mov
sub
les
and
(bad)
dec
aam
mov
mov
sti
add
jmp
sbb
sub
outs
pop
cmp
lock
add
pop
inc
and
or
lahf
add
adc
ror
push
push
jo
or
stos
xchg
or
shl
lahf
imul
movs
push
add
adc
xchg
adc
pushf
outs
mov
les
shl
sbb
mov
dec
cmps
pop
cwde
add
push
push
mov
mov
adc
pop
push
pop
or
add
mov
pop
mov
aaa
inc
xchg
gs
mov
fs
pop
or
fadd
sbb
or
sbb
inc
and
xor
sti
jnp
and
movs
es
test
mov
ret
cmps
and
sub
hlt
add
push
push
dec
repz
push
sub
pop
sbb
or
adc
and
sub
xchg
inc
inc
jne
and
or
and
popa
popa
push
push
inc
ret
add
add
jae
jecxz
gs
mov
xchg
jmp
or
xor
aaa
cmp
xchg
sbb
adc
and
stos
push
jnp
rol
call
sbb
rol
jmp
add
xor
test
add
or
or
mov
inc
rcr
sub
inc
jne
sub
push
fwait
cmp
jg
dec
dec
inc
jmp
mov
mov
or
or
adc
aam
daa
je
inc
lods
enter
pop
aam
fistp
dec
cwde
push
cmp
stos
pop
rol
or
mov
out
and
(bad)
rcl
or
xor
xchg
sbb
inc
les
sub
or
and
stos
adc
adc
imul
mov
test
sub
nop
push
test
mov
pop
pop
(bad)
or
and
dec
shl
add
jg
bound
imul
and
nop
stos
add
dec
inc
xchg
push
pextrw
dec
push
adc
sub
and
or
test
dec
sbb
mov
push
and
pop
inc
dec
add
rcr
push
adc
mov
mov
out
add
and
mov
int3
int3
push
xor
fld
sbb
add
test
nop
pop
inc
adc
push
inc
setbe
or
(bad)
aas
mov
retf
inc
jae
fild
adc
add
sbb
xor
cs
outs
(bad)
enter
add
aaa
(bad)
mov
pop
pop
add
movs
adc
je
pop
call
sbb
les
movs
arpl
xchg
pop
leave
lea
sub
xor
add
or
jne
and
and
mov
jno
dec
rol
in
mov
sbb
call
mov
add
jmp
sub
mov
aad
adc
outs
mov
or
repz
dec
shr
xor
cmp
push
inc
add
cmps
cmps
sbb
mov
dec
sbb
aaa
sti
sti
add
fist
add
inc
add
mov
dec
mov
movs
jmp
add
add
xchg
or
inc
add
aam
pop
add
pop
call
pop
es
pop
pop
add
daa
daa
pop
xor
jg
add
aas
and
in
pop
cld
psubb
mov
jns
lock
add
pop
cmp
cmps
mov
sbb
fld
(bad)
fild
jbe
ror
enter
xchg
xchg
sbb
(bad)
jg
mov
or
loopne
cs
push
std
push
push
and
inc
outs
jb
xor
daa
add
or
scas
add
add
adc
mov
mov
mov
mov
pop
mov
add
shr
(bad)
bound
inc
call
add
ss
std
mov
cmp
or
push
sub
aas
cli
push
add
xchg
mov
pop
ja
repnz
inc
je
mov
sub
adc
fxch
or
adc
or
lds
add
add
sbb
popa
jg
mov
mov
add
fs
dec
and
popf
xchg
das
push
(bad)
into
and
or
(bad)
into
and
and
jae
ins
sar
jnp
mov
sbb
mov
add
add
or
test
dec
mov
lea
out
add
sete
aas
adc
xor
ins
scas
mov
add
addr16
push
xlat
add
xor
mov
pop
shl
gs
or
xor
cmp
fcmove
xor
jno
mov
push
das
add
jo
fld
or
ins
movs
sahf
add
mov
mov
in
cmps
loopne
out
add
mov
das
mov
cmp
dec
push
fcmovu
mov
cmp
imul
mov
idiv
sub
js
(bad)
push
out
add
mov
lock
xchg
add
mov
jns
(bad)
mov
inc
jo
mov
add
sahf
int3
mov
movs
xchg
inc
add
inc
xchg
push
cmp
or
xor
leave
inc
sar
sub
push
mov
dec
jbe
adc
pop
sbb
mov
sbb
jmp
jae
xor
dec
loopne
inc
mov
in
add
sbb
inc
pop
xchg
jle
sbb
add
dec
ret
ss
call
push
inc
xor
aas
jle
mov
add
add
cmps
aaa
adc
xor
inc
and
add
(bad)
or
js
test
ror
dec
nop
(bad)
call
or
clc
shl
cmp
push
add
jmp
and
cdq
test
das
adc
or
pop
lock
(bad)
inc
ret
dec
mov
retf
imul
cdq
add
dec
mov
jg
cmps
cmp
mov
inc
cmp
cmps
cmp
mov
xchg
fisttp
movs
xchg
xchg
in
in
(bad)
call
fwait
or
lea
repz
cs
push
and
add
and
sbb
jecxz
aam
or
pop
scas
adc
mov
xchg
data16
mov
mov
xor
cmp
mov
std
ins
add
addr16
(bad)
jmp
pop
push
(bad)
pop
and
and
aad
add
mov
push
sub
pop
cdq
imul
xchg
adc
mov
push
xor
and
pop
imul
xor
and
mov
cwde
xor
cmc
mov
push
fld
stos
dec
xor
add
outs
leave
scas
add
jnp
mov
fiadd
test
daa
xchg
pop
add
(bad)
sar
lsl
nop
outs
mov
daa
mov
push
call
add
xlat
inc
adc
aam
call
daa
pop
jmp
mov
lahf
shl
xor
pop
lods
rcl
pop
dec
enter
in
adc
fcom
dec
mov
mov
add
dec
xlat
xor
les
imul
aam
(bad)
clc
sbb
and
daa
pusha
and
or
adc
fwait
mov
pusha
and
sbb
fst
fcom
add
or
add
and
add
push
mov
enter
sbb
repnz
in
dec
cld
sub
or
fdiv
in
and
or
les
out
dec
enter
cmp
xor
xor
add
js
pop
movs
ror
add
popf
jl
mov
imul
enter
loop
fnstsw
mov
jnp
jle
jp
test
(bad)
sbb
ret
dec
lods
pusha
lock
adc
mov
add
xchg
cs
mov
fnsave
data16
pop
pop
xchg
scas
pop
mov
shl
leave
(bad)
jecxz
imul
cmps
imul
imul
cmps
imul
push
shl
adc
xlat
je
mov
and
add
dec
shl
nop
popf
stos
mov
xor
rol
fsubrp
clc
add
or
sub
inc
xchg
cmp
cmpxchg
repnz
jp
retf
cmp
fbld
mov
in
int3
lods
inc
push
enter
into
cmp
sbb
jb
push
int3
sar
add
pusha
mov
pushf
aad
or
in
sbb
(bad)
ins
xlat
sbb
push
jb
mov
jbe
add
fsubr
pusha
pop
fidiv
pop
jb
(bad)
mov
fstp
(bad)
and
ret
push
loopne
pusha
pop
jb
loope
loope
pusha
add
sub
jl
repnz
jnp
das
jnp
pushf
or
sbb
nop
das
add
fadd
rcr
inc
dec
sbb
jl
jb
push
pushf
dec
lods
dec
loop
sbb
int3
dec
or
cmp
lods
pop
inc
mov
movntq
out
(bad)
mov
ins
aam
dec
mov
or
add
fsub
or
cmp
push
aas
add
dec
call
sub
push
in
in
pop
adc
pop
add
mov
adc
pop
fbstp
loopne
das
add
add
xchg
mov
jo
and
push
stc
sub
add
nop
ret
fs
mov
cmp
inc
inc
xchg
inc
push
sbb
pop
sbb
xor
add
nop
inc
push
mov
sbb
jb
dec
mov
xchg
add
push
(bad)
push
shl
or
ins
stos
and
je
sar
dec
bound
lea
lods
hlt
scas
dec
sub
mov
sbb
push
xrelease
sti
dec
popf
xor
stc
xchg
outs
(bad)
push
rol
push
add
push
imul
mov
sub
inc
cmp
fs
pop
jae
jae
gs
xor
adc
mov
fild
cs
aaa
push
or
pushf
frstor
or
fild
xor
popf
jp
(bad)
loopne
and
mov
dec
or
imul
mov
sub
push
lock
jno
ja
popa
ins
(bad)
jg
cmp
jge
imul
and
jae
popa
ins
and
mov
imul
add
cs
dec
inc
ja
stos
fisub
mov
call
pop
push
(bad)
and
cmp
mov
add
sahf
sub
adc
pop
cmp
sub
xor
(bad)
mov
mov
mov
mov
(bad)
fisttp
das
(bad)
pop
mov
ffree
mov
mov
enter
stos
fcom
sahf
(bad)
mov
(bad)
pop
mov
inc
(bad)
int3
mov
(bad)
push
inc
fnclex
outs
add
inc
mov
loop
(bad)
cmp
in
jne
imul
mov
sub
enter
mov
or
xlat
push
jg
pop
rcr
add
pop
mov
in
loope
adc
fcmovne
xlat
mov
retf
sar
stc
not
ret
push
pop
lock
hlt
ret
out
sub
dec
test
data16
addr16
movzx
jl
inc
lods
push
mov
or
(bad)
sbb
lea
fadd
cmp
stc
cmp
aaa
inc
inc
das
jl
out
inc
dec
dec
xor
jbe
inc
jb
inc
retf
je
jne
xchg
cmp
dec
gs
inc
outs
gs
sub
inc
outs
test
jb
jb
xor
cmp
outs
jo
jmp
xchg
sbb
inc
ins
jo
inc
jb
gs
bound
imul
adc
adc
call
mov
mov
add
push
jae
xchg
cld
(bad)
xchg
outs
outs
je
outs
ins
dec
outs
jbe
pop
jnp
(bad)
dec
xor
cmp
pop
cwde
jnp
dec
int
ins
and
cmps
ret
rol
xor
push
jne
dec
ja
addr16
call
call
dec
xchg
jb
adc
push
jmp
ja
js
inc
arpl
popa
mov
pop
push
popa
cmove
dec
mov
pop
jmp
lahf
or
push
gs
mov
mov
mov
push
bound
ret
(bad)
xor
test
add
inc
jle
movs
cli
inc
add
adc
sub
imul
fs
push
add
mov
mov
add
or
ret
mov
addr16
jmp
jmp
xchg
sar
js
push
jge
push
addr16
mov
out
popa
or
mov
imul
cli
je
jmp
push
jl
or
stos
jne
pop
pop
add
pop
mov
inc
push
imul
and
cdq
inc
sbb
and
in
add
adc
test
mov
div
outs
push
and
pop
pop
fbld
or
jb
sbb
or
loop
ins
in
push
je
pop
test
pop
test
test
jb
xor
push
cmp
sti
xchg
jae
ins
addr16
dec
test
cmp
out
mov
push
sbb
push
and
push
enter
outs
idiv
jnp
das
cmp
or
stc
jne
mov
add
xchg
push
ins
in
pop
rcl
outs
popa
bound
push
stc
adc
cld
jns
or
sbb
dec
jb
push
imul
mov
loop
pop
or
punpckhwd
jge
pop
inc
data16
shr
jmp
fsub
aaa
ins
(bad)
ins
xor
pop
mov
jo
ins
push
jl
add
inc
sbb
xor
xchg
and
invd
mov
std
pop
add
idiv
mov
push
inc
push
inc
jne
nop
inc
bound
ins
lea
and
or
xor
mov
outs
jb
add
adc
movs
jecxz
aam
inc
xlat
or
aad
xor
sub
sbb
stos
stos
xchg
adc
imul
dec
jmp
cmovge
call
ja
addr16
jmp
sub
inc
mov
adc
pop
pop
jle
push
push
lahf
add
push
(bad)
or
mov
stos
xchg
xchg
push
push
push
pop
je
inc
xchg
dec
inc
imul
dec
je
outs
cs
sbb
ins
outs
inc
inc
xor
ins
sub
pop
or
push
xchg
inc
and
pop
or
and
inc
or
test
pop
test
xor
rcpps
add
cmp
daa
push
push
xor
lods
xchg
inc
xchg
leave
rcl
mov
in
or
and
mov
inc
xchg
rol
xor
ficomp
inc
mov
les
xor
out
rcl
inc
outs
outs
ins
addr16
push
repnz
jne
ins
out
xor
adc
xor
mov
xor
push
xor
aaa
int3
les
add
data16
push
shl
inc
jno
adc
push
dec
xor
cli
pop
in
mov
hlt
cmovl
jle
imul
call
mov
daa
sbb
cmps
(bad)
je
dec
shr
pop
aad
shl
push
test
mov
cmps
cmps
add
jae
hlt
outs
and
pop
pop
sbb
sub
dec
das
xor
fs
xchg
cmp
mov
pop
(bad)
dec
dec
outs
cs
jbe
jb
arpl
add
push
cmp
ja
push
ret
mov
(bad)
adc
add
loope
inc
jb
int
dec
add
ja
imul
sbb
xchg
test
fwait
add
mov
cmp
loope
fwait
loope
int
pop
daa
iret
and
xchg
xchg
jae
mov
push
cmp
dec
std
retf
fs
sbb
inc
ret
cmp
addr16
cmp
sbb
xor
mov
jg
push
or
xor
xchg
add
sbb
and
or
or
inc
mov
sbb
popa
leave
jle
xchg
(bad)
retf
inc
add
fcomp
ss
adc
daa
mov
test
inc
icebp
or
jmp
inc
add
les
int
xor
cmovo
add
lock
pop
mov
(bad)
mov
pop
add
cmps
imul
xchg
int
cmp
jne
leave
mov
add
sub
ret
out
push
xor
icebp
cmp
add
adc
retf
xchg
xor
inc
pop
loopne
add
add
add
and
dec
fdiv
in
clc
test
fmul
fild
stc
inc
adc
imul
adc
xor
ja
(bad)
std
add
aam
dec
ss
mov
stc
add
add
or
sti
dec
mov
and
cmps
cmp
fdivr
add
or
hlt
and
mov
inc
or
inc
test
fist
inc
(bad)
in
rol
xor
xor
lds
cld
push
movs
fwait
in
cmp
sti
rol
xor
xor
addr16
pop
or
ror
sub
mov
mov
ret
pop
cld
retf
sbb
add
popa
inc
mov
adc
push
mov
int
mov
lods
inc
popa
push
ror
(bad)
in
inc
xor
add
test
test
dec
lods
inc
movs
and
rcl
iret
add
test
cmp
jmp
rcr
pop
je
dec
dec
cmps
imul
aaa
fst
fild
mov
sbb
arpl
fisttp
lahf
sbb
sub
and
pop
pop
pusha
ror
add
sub
sbb
iret
movs
add
or
fxch
and
xor
fsub
pop
dec
pop
inc
movs
repz
and
(bad)
fimul
enter
aas
xor
mov
jmp
adc
add
(bad)
mov
sub
cmps
push
mov
pop
aaa
pop
cwde
mov
mov
mov
sub
lods
or
loopne
nop
shl
sbb
xchg
fsubr
(bad)
ins
and
addr16
inc
pop
xchg
dec
push
sbb
add
nop
or
dec
leave
pop
je
popa
and
adc
fwait
pop
fdiv
loopne
mov
add
mov
fadd
jmp
or
xor
je
out
add
gs
and
and
and
stos
pop
dec
nop
inc
pop
imul
and
rcl
daa
inc
ret
das
cmp
mov
jae
pop
repz
dec
nop
mov
adc
adc
sbb
fstp
das
adc
gs
cmp
push
mov
sbb
mov
movs
int3
sub
and
add
shl
fiadd
cmp
bound
mov
mov
mov
sub
jo
or
add
gs
push
push
mov
push
sbb
stos
popa
adc
pop
and
adc
sub
es
fs
or
ins
xor
pop
jae
xchg
pushf
dec
cmps
jmp
or
int3
jmp
int3
push
mov
sub
push
shl
mov
sti
push
in
mov
jne
mov
and
mov
and
mov
xor
mov
mov
push
call
or
add
shl
gs
mov
nop
sub
adc
cmps
lea
mov
mov
push
adc
mov
out
cli
add
jo
add
mov
cs
mov
hlt
cwde
mov
nop
adc
push
xchg
mov
jns
inc
pushf
mov
push
mov
fstp
loopne
pop
pop
push
push
jl
cdq
lods
push
(bad)
int
mov
fwait
lods
sub
mov
mov
in
neg
add
mov
fwait
dec
mov
mov
ror
stos
dec
cdq
(bad)
fild
pop
call
sbb
and
fist
rcl
lea
jb
addr16
(bad)
adc
(bad)
ins
mov
pop
rcl
push
pop
and
les
push
push
popf
ins
xlat
xor
sub
mov
cmp
push
xor
ret
jmp
repnz
mov
(bad)
aad
dec
in
or
in
ret
push
(bad)
ins
inc
sbb
inc
push
nop
rol
ins
nop
test
mov
sub
ret
mov
pusha
mov
pop
mov
and
mov
jb
mov
test
pushf
pop
pop
xchg
xchg
aam
ret
movs
clc
mov
push
push
inc
aam
xor
xor
mov
cmp
imul
mov
fild
fisttp
(bad)
mov
retf
mov
rol
mov
or
daa
popf
jo
sar
test
imul
mov
out
outs
loop
cmp
adc
fnclex
cmp
jge
push
mov
push
push
mov
and
jmp
or
pop
test
or
fcom
xor
push
push
mov
lea
pop
xlat
ins
fmul
mov
jne
or
cmp
push
jb
jns
inc
imul
pop
push
sub
mov
jae
pop
xor
jae
mov
test
rcl
cmp
mov
push
lahf
ds
mov
js
call
test
punpckhdq
rcl
mov
sub
out
lahf
mov
and
push
int3
aaa
nop
loopne
hlt
jg
test
sbb
rol
fmul
in
or
in
inc
inc
push
adc
or
and
sbb
xchg
fcomp
pop
mov
add
sbb
jno
cmp
in
xchg
test
or
(bad)
mov
mov
mov
inc
call
push
push
ret
push
movs
inc
pop
in
rcr
fcom
mov
mov
add
nop
push
aad
data16
sbb
pop
or
outs
or
cmp
hlt
clc
adc
push
call
pop
test
or
call
cdq
xchg
jne
mov
pop
mov
(bad)
jecxz
icebp
cmps
in
add
clc
pop
ins
cld
inc
arpl
aaa
push
mov
jae
icebp
test
adc
push
mov
lea
dec
repnz
int3
push
push
inc
fcom
call
or
scas
cmp
xchg
cwde
loopne
mov
mov
mov
pop
jo
add
mov
fs
sti
sbb
mov
int3
scas
cmps
movaps
fcom
fisub
sbb
and
cwde
rcr
test
add
ss
test
ins
sbb
pushf
sbb
xor
sbb
sbb
and
test
mov
jl
mov
pushf
push
cmp
mov
pop
push
pop
inc
adc
lods
push
inc
mov
pusha
or
mov
in
sbb
mov
in
dec
fisubr
sub
push
jl
jo
iret
test
test
repz
xor
and
or
out
xor
cmp
jne
push
push
mov
lods
mov
cmp
jb
gs
add
or
(bad)
mov
and
or
or
inc
mov
sub
ds
mov
sar
sub
xor
jmp
aad
(bad)
sahf
movs
mov
leave
xchg
adc
add
or
xchg
sub
pop
fild
je
setae
mov
fcomi
dec
add
test
pop
outs
sar
jo
mov
sbb
push
mov
or
mov
adc
inc
mov
mov
test
push
nop
and
mul
push
xor
xor
pop
fistp
cld
push
(bad)
daa
dec
(bad)
fdiv
fsub
xor
adc
daa
retf
int3
shr
pop
xor
ins
dec
pop
jo
sbb
bound
sar
gs
mov
call
in
jne
and
jg
fs
stos
adc
(bad)
sub
rcl
dec
pop
into
fsub
pop
es
or
das
stc
dec
call
dec
push
popa
push
sub
dec
push
mov
fistp
inc
xor
test
mov
rcl
imul
(bad)
lock
push
(bad)
xchg
movs
data16
push
in
adc
sar
jecxz
fisubr
enter
gs
inc
or
push
dec
adc
or
add
add
in
nop
fisttp
inc
xor
shl
mov
dec
xchg
add
add
xchg
popf
dec
adc
jbe
push
push
dec
ins
push
push
sar
ror
or
mov
xchg
mov
scas
loopne
dec
(bad)
or
inc
or
add
pop
mov
nop
add
jmp
scas
int3
and
or
mov
cld
mov
enter
fs
ins
xor
inc
xchg
outs
and
push
cwde
test
fadd
stc
add
mov
enter
call
bswap
adc
xor
pop
test
rcl
push
and
jmp
inc
sub
inc
jle
xor
lods
jno
movs
push
cmps
sub
nop
fdivr
nop
xchg
test
inc
inc
or
push
inc
js
data16
pusha
push
or
inc
ins
push
pop
jb
xchg
test
mov
cmp
or
enter
call
or
mov
mov
pop
dec
test
enter
test
fs
xor
jge
xchg
cld
or
inc
test
jo
and
enter
pusha
sub
mov
mov
mov
cmp
enter
sub
or
push
cmps
data16
and
ret
data16
jo
add
nop
data16
cmp
and
out
in
pusha
sub
cwde
mov
ror
rol
mov
dec
enter
mov
push
push
outs
mov
add
push
sbb
shl
(bad)
nop
sbb
push
enter
fstp
and
push
push
or
jbe
and
or
push
inc
jb
lock
xchg
add
xor
sub
or
dec
xor
clc
add
xchg
jb
add
loopne
ja
and
or
pop
(bad)
mov
dec
or
cmp
dec
push
pop
mov
(bad)
lods
jmp
or
pusha
jmp
push
add
mov
inc
call
test
adc
jb
pop
push
mov
in
jmp
xor
and
imul
movups
dec
jg
and
add
xchg
or
inc
lahf
inc
mov
pop
cmp
add
add
das
add
nop
cmp
(bad)
and
sub
add
fs
pushf
sub
fcomp
push
xchg
loopne
mov
call
cmp
mov
into
sub
sub
or
inc
and
fidiv
push
cmp
cmp
mov
sub
ret
(bad)
fdivr
xchg
xchg
sbb
cmp
push
mov
inc
and
or
pop
sbb
pop
in
push
(bad)
add
sbb
mov
and
adc
sbb
pop
adc
xchg
adc
in
pop
and
sub
jb
pusha
mov
ret
adc
jbe
inc
out
out
xchg
jne
nop
xchg
pusha
xor
lea
shr
adc
dec
cmp
mov
aad
push
pop
fsubr
fimul
push
adc
lea
push
mov
adc
fs
push
adc
sbb
pop
cmc
adc
push
push
test
or
in
fsub
and
ret
pushf
daa
in
mov
add
add
ror
pusha
nop
and
mov
shl
inc
mov
enter
test
xchg
mov
mov
pop
inc
and
js
cmp
lock
or
dec
data16
ds
push
retf
fstp
add
xchg
mov
adc
add
or
int
add
adc
add
aad
cmp
data16
sbb
add
or
mov
movs
mov
test
lock
xchg
or
adc
imul
mov
inc
jge
push
push
xor
ins
cmp
pusha
push
sar
mov
push
out
in
dec
or
sub
nop
nop
and
popf
dec
nop
pop
pop
cmp
fstp
dec
mov
cdq
or
cdq
dec
push
pop
mov
inc
mov
inc
dec
push
push
xor
xchg
inc
cmps
inc
push
push
and
movs
movs
xchg
add
dec
pop
push
enter
or
dec
dec
ror
dec
rol
xor
test
sub
and
inc
je
inc
es
enter
push
cmp
or
mov
fwait
dec
push
cdq
cmp
int3
aam
mov
dec
push
nop
xor
test
xor
and
adc
aam
xor
adc
or
dec
enter
and
dec
test
sub
test
and
add
and
pop
aam
or
mov
push
xor
mov
push
and
aam
popf
sbb
nop
xchg
jge
adc
nop
sahf
in
or
in
mov
ins
fwait
sub
enter
adc
xchg
js
and
fmul
lea
les
and
pop
jbe
or
rol
fsub
mov
mov
fcomp
mov
imul
jp
(bad)
or
jns
adc
xchg
lock
test
ret
aaa
fimul
test
and
xchg
or
fcomp
cmp
(bad)
aam
lods
push
nop
popa
int
pop
inc
and
lahf
sub
cbw
movs
retf
popa
add
int3
mov
retf
mov
mov
sub
shr
xchg
sub
or
add
xchg
xchg
adc
imul
inc
clc
sub
popa
clc
pop
nop
or
sub
inc
push
or
mov
adc
or
add
nop
sbb
add
add
mov
add
dec
test
test
and
add
cmp
cmp
fcom
dec
xor
clc
ret
add
aam
push
jb
cmp
nop
and
fsub
shr
nop
inc
push
pop
mov
cmp
(bad)
fild
lea
xchg
xchg
push
or
mov
rol
dec
cmp
pop
add
mov
shl
mov
push
in
outs
and
int
push
inc
dec
nop
data16
sbb
cmp
fwait
movs
stc
out
test
pop
in
inc
sbb
ins
xchg
mov
mov
sub
movs
call
dec
call
(bad)
adc
or
in
in
adc
adc
add
push
and
mov
xor
adc
loopne
and
xor
adc
fcom
leave
adc
xor
fcomp
sbb
test
aam
dec
xor
stos
xchg
dec
add
lock
cmp
xor
ds
adc
jns
push
int3
dec
add
inc
test
and
sbb
pusha
pop
xchg
lea
sbb
adc
adc
sub
outs
nop
xchg
pusha
lock
xlat
enter
xor
mov
dec
int
jmp
fwait
push
cmps
push
mov
jb
push
pusha
shl
pop
mov
mov
inc
sbb
cmp
add
pop
sub
mov
and
les
mov
(bad)
mov
add
iret
add
push
or
clc
adc
fisub
les
adc
frstor
adc
mov
les
adc
mov
hlt
popa
add
fild
or
enter
jno
push
dec
imul
and
and
in
mov
mov
loopne
pusha
and
or
data16
jo
inc
data16
shl
outs
imul
mov
or
je
cmp
es
push
test
xchg
cmp
data16
push
jp
mov
mov
mov
and
dec
cwde
lods
ret
and
push
pop
mov
mov
cs
or
xlat
xor
mov
fadd
mov
mov
fs
inc
int3
cmp
inc
addr16
enter
inc
inc
mov
push
mov
xchg
es
dec
dec
jge
aam
add
imul
xor
lock
sahf
(bad)
enter
enter
stos
push
push
push
rcr
push
xor
in
mov
mov
lods
out
mov
aad
or
fcomp
mov
das
test
and
fstp
push
rcl
leave
xchg
lods
in
cmp
lock
push
or
test
out
jo
ins
scas
mov
add
cmp
xor
or
(bad)
gs
adc
push
jb
pusha
nop
mov
xchg
fist
loop
xchg
loopne
push
pop
push
mov
fs
mov
dec
adc
or
cdq
sub
push
dec
add
cld
mov
rcr
xchg
adc
gs
push
mov
add
nop
mov
add
call
jo
or
lods
push
lea
sub
outs
add
clc
pop
cmp
jge
push
inc
arpl
mov
xor
dec
inc
adc
push
xor
push
pop
pop
adc
mov
xchg
inc
or
xchg
lea
dec
popa
hlt
sbb
shr
ds
push
(bad)
and
mov
mov
cmp
and
sub
cmp
and
mov
test
push
push
pop
add
push
mov
push
mov
sti
dec
inc
add
call
push
and
mov
or
or
xchg
or
adc
test
mov
popa
pop
sbb
sub
sahf
and
jbe
add
sub
rol
sahf
test
adc
dec
xchg
aam
xor
or
and
xchg
mov
mov
mov
mov
bound
lea
loop
in
pop
push
sbb
push
imul
mov
or
fcom
add
enter
add
sbb
ret
rol
aas
add
test
test
sbb
cmp
inc
and
or
int3
daa
int3
jnp
fs
xchg
inc
xchg
push
mov
popa
push
addr16
jmp
test
daa
push
adc
add
cmps
and
and
bound
and
cmp
cmp
jb
fmul
mov
add
ja
mov
sub
(bad)
std
inc
leave
adc
(bad)
std
fdiv
movs
jmp
mov
push
jb
mov
cmp
cs
sti
mov
out
and
jae
test
mov
fs
jmp
sahf
xchg
adc
xchg
test
(bad)
mov
inc
ret
xor
js
sbb
rcl
sub
jnp
mov
mov
loopne
xor
rol
dec
xchg
test
add
add
and
jns
add
sbb
loope
or
adc
ret
jno
adc
xchg
fadd
ja
sbb
repnz
das
push
rcl
pop
xchg
inc
push
mov
mov
adc
pusha
pop
xor
pop
mov
es
cmps
imul
or
mov
sub
sbb
mov
test
outs
movs
add
fdiv
inc
loopne
loope
cwde
mov
loopne
or
add
scas
xchg
test
sub
retf
test
mov
or
adc
fs
push
cmc
sub
test
push
js
adc
and
mov
xchg
out
adc
add
icebp
add
or
jne
adc
arpl
in
and
sub
add
sub
push
jecxz
es
jnp
cmp
mov
addr16
dec
push
mov
sbb
pushf
inc
push
sbb
adc
add
dec
ret
fs
pop
cwde
push
sub
and
adc
sbb
push
add
les
pop
sahf
sbb
xchg
icebp
and
mov
cs
stos
cmp
inc
cmp
in
xchg
adc
add
dec
ss
dec
adc
sbb
and
sub
or
mov
mov
xor
and
add
or
xor
mov
cmp
sbb
pop
add
pop
rcl
pop
pop
test
and
add
je
movs
inc
dec
xor
or
pusha
or
or
adc
jl
jl
dec
push
adc
xchg
sub
or
or
push
mov
push
popf
enter
xchg
movs
pop
dec
adc
cmp
adc
in
cs
or
jo
inc
sbb
cmp
fs
ins
ins
push
nop
push
push
adc
adc
mov
pusha
xor
fs
pusha
or
pop
dec
sub
cdq
pop
and
xor
cmp
dec
push
sbb
sbb
jp
mov
or
sub
in
push
push
mov
xchg
push
add
sbb
push
aas
push
xor
sbb
xor
or
popf
push
and
sub
add
add
dec
xor
inc
jb
jb
and
sub
jb
inc
or
add
or
and
mov
sub
inc
fild
mov
cmp
cmp
fs
cmp
gs
add
push
in
xchg
adc
mov
sub
call
add
adc
leave
mov
or
xor
add
xchg
xchg
and
adc
xchg
(bad)
lds
and
cmp
mov
loope
int3
clc
enter
add
add
pusha
or
int3
and
mov
rcl
adc
push
adc
movs
xor
and
jno
aad
xor
and
adc
adc
adc
sbb
add
nop
inc
loopne
sub
xchg
pop
enter
das
and
adc
sub
or
or
dec
push
cmp
in
nop
and
or
add
shr
add
push
test
sub
das
fs
dec
sub
cld
std
inc
push
jns
cld
std
or
jecxz
in
clc
sub
pop
add
pusha
xchg
cmp
hlt
std
pop
hlt
std
inc
xor
and
push
sbb
repnz
pop
mov
std
lock
std
mov
fs
xchg
jno
ins
xor
push
xor
and
in
and
and
add
adc
fadd
in
pop
mov
xor
or
nop
and
test
push
xor
iret
cmp
std
fsub
leave
jbe
movs
add
xor
adc
cmp
or
daa
or
in
fdiv
pop
or
leave
pusha
fcomp
cmp
test
or
or
push
cs
inc
sbb
stos
sbb
daa
es
or
aam
cmp
les
mov
push
cmp
and
add
gs
movs
sub
xor
ins
cmp
inc
stc
in
sub
daa
(bad)
pusha
push
or
outs
adc
sysret
or
ss
aaa
xor
xchg
push
and
jo
and
or
rcl
cmp
jne
popa
sub
ffreep
inc
pop
fwait
dec
push
movs
mov
push
mov
xchg
ret
inc
fwait
push
adc
and
pop
lea
xchg
pop
pusha
inc
adc
mov
mov
shr
or
rol
ss
rol
add
inc
push
push
mov
lea
push
imul
inc
and
ss
adc
in
sar
ss
push
jl
or
add
sbb
call
xlat
mov
mov
mov
sbb
shl
jmp
iret
xor
sub
xor
cmp
or
xor
xor
cmp
xlat
jmp
mov
sbb
sbb
sub
and
hlt
sti
sbb
xchg
cmp
je
and
sub
sbb
sub
popf
xchg
out
cmp
xor
sub
test
mov
into
enter
popa
cmp
int
cmp
or
xchg
daa
mov
out
push
fisttp
or
xchg
addr16
not
push
nop
out
aad
out
nop
out
jns
loop
loope
jns
loop
out
or
push
jbe
adc
aad
add
mov
add
cmp
out
addr16
sahf
out
out
mov
retf
mov
nop
jmp
inc
mov
call
imul
jb
jb
mov
repnz
enter
aad
or
and
sbb
or
call
test
call
dec
xlat
sbb
leave
sub
fbld
inc
enter
or
or
test
call
inc
fsub
inc
leave
and
and
loop
inc
enter
sbb
xchg
pusha
cmp
dec
jmp
pop
add
neg
push
enter
out
xor
and
adc
in
adc
test
sbb
push
enter
ins
and
in
dec
and
jmp
shr
repnz
and
int3
call
pop
push
call
repz
sbb
repz
call
or
or
call
repz
fstp
leave
repz
call
or
or
call
repz
or
jecxz
mov
loop
lods
pop
dec
push
cs
inc
inc
or
(bad)
leave
jb
push
enter
dec
or
or
sbb
sbb
addr16
enter
pop
or
enter
sbb
or
sbb
jg
aam
ror
push
sub
xor
mov
dec
enter
pop
jmp
cs
repnz
mov
cdq
inc
cmps
mov
cmps
nop
sub
fbld
inc
test
rcl
enter
xor
sbb
retf
cs
sbb
or
lods
inc
in
std
cli
push
xchg
out
adc
cld
repz
adc
sbb
stc
nop
test
dec
sahf
add
adc
sbb
in
sbb
and
pop
inc
fcomp
(bad)
jmp
cmp
mov
or
xor
cmp
adc
ret
mov
(bad)
scas
ins
or
(bad)
push
repnz
mov
loope
(bad)
lods
in
pop
add
(bad)
mov
fnstenv
mov
or
sbb
adc
loop
out
add
cs
sbb
and
add
fbld
call
ins
push
pop
shl
btr
rcr
xchg
popw
push
jmp
or
sbb
mov
mov
push
add
cmp
imul
push
push
inc
out
lods
adc
push
mov
mov
ins
pushf
xchg
push
push
mov
xor
(bad)
and
popa
fwait
xchg
xchg
jo
fwait
int
pusha
ins
inc
or
dec
push
inc
mov
ins
adc
cmp
xchg
mov
in
sbb
mov
sbb
fs
mov
mov
and
jno
nop
xor
loope
and
pop
nop
test
ins
sub
dec
or
shr
in
xor
push
mov
push
ret
pop
cmp
adc
ss
inc
pop
aaa
pop
cmp
pop
enter
in
stos
push
ins
(bad)
loopne
or
adc
and
in
fadd
fcom
mov
jne
loop
enter
les
cmp
(bad)
(bad)
jbe
cmp
jne
mov
ss
push
xor
fadd
outs
shl
push
and
mov
mov
add
pop
dec
js
push
ins
pusha
mov
mov
aaa
xor
in
mov
inc
aaa
mov
je
ins
pop
aam
adc
push
mov
nop
add
call
rol
push
jmp
call
jbe
shl
fcmovnb
ja
imul
fdivr
xor
inc
fwait
jae
fistp
dec
push
dec
mov
jbe
test
hlt
xor
or
push
and
jp
mov
stos
fisub
dec
or
pop
and
add
xor
inc
fadd
mov
add
cmp
push
sar
jle
cmp
inc
movs
jl
add
mov
xchg
add
sti
inc
mov
out
add
jae
cmp
rol
dec
add
push
test
call
test
in
sub
mov
mov
fmul
sub
and
and
and
or
or
in
sti
or
gs
js
sub
in
or
jns
js
ficom
out
jmp
mov
(bad)
jge
dec
pop
repnz
fstp
pop
movs
jge
add
inc
sahf
in
in
mov
fsub
es
mov
or
rcl
aam
std
cs
sbb
dec
imul
dec
pushf
outs
dec
mov
pop
push
pushf
dec
cwde
sbb
add
pop
xchg
mov
gs
xchg
or
repz
nop
add
rol
aaa
and
fdivr
leave
pop
popa
mov
sub
sub
add
inc
inc
mov
ror
js
ins
retf
test
mov
cmp
or
pop
sbb
xor
xchg
in
push
and
sbb
sahf
mov
jae
ins
push
imul
mov
inc
or
mov
push
and
cmc
call
mov
add
retf
fld
mov
push
pop
adc
int
dec
jnp
not
movs
test
pop
je
add
and
jmp
inc
popf
out
sbb
jo
jo
lea
cmp
call
repnz
mov
add
push
mov
and
pusha
and
enter
pop
into
out
adc
sbb
push
sub
pop
rcr
dec
pop
js
ror
add
sub
pop
jne
mov
sub
ds
jmp
popa
add
lea
and
mov
(bad)
pop
mov
add
xchg
cmp
out
sub
rol
inc
inc
push
jns
inc
inc
inc
mov
rol
retf
(bad)
or
jns
add
arpl
nop
retf
and
and
ret
mov
cmc
sbb
sbb
sub
sub
xchg
and
adc
and
lock
and
push
sbb
sbb
xor
inc
ds
add
fs
(bad)
xchg
pusha
outs
add
sbb
stos
fs
mov
add
adc
or
push
inc
enter
or
inc
xor
add
add
sbb
fwait
push
loopne
adc
dec
lock
pop
xor
add
inc
or
pop
fs
pop
mov
ret
xor
pop
mov
mov
mov
add
mov
pushf
push
push
aam
cwde
xor
rep
adc
push
int
mov
mov
cmp
and
stos
mov
add
test
xor
fwait
and
loopne
inc
(bad)
retf
push
push
push
lea
cwde
adc
xchg
idiv
adc
xchg
push
sbb
retf
lea
jl
sbb
and
in
in
push
mov
sub
aad
add
aam
and
xchg
lds
stos
push
mov
(bad)
aam
push
pop
int3
push
arpl
xor
dec
sbb
xchg
xor
mov
or
push
mov
cmps
sbb
push
test
pop
push
dec
pop
pushf
imul
cdq
and
fistp
inc
enter
jle
movs
aam
jo
and
sub
enter
icebp
outs
add
sbb
cmc
add
(bad)
enter
pop
repz
ret
jle
and
icebp
sbb
cmp
xchg
pop
adc
push
adc
test
dec
leave
je
cmp
and
ret
sub
pop
inc
mov
and
ret
jb
push
mov
mov
ins
xchg
ror
inc
test
xor
sbb
dec
test
and
adc
fidiv
or
test
into
xchg
popf
push
test
adc
mov
inc
or
dec
imul
mov
inc
or
ret
or
sbb
adc
rol
xlat
out
adc
pop
push
xlat
push
int3
loopne
jp
nop
mov
je
leave
fwait
stos
jle
pop
mov
neg
cmp
and
pop
ss
ror
xor
jo
xor
mov
sub
cmps
mov
mov
push
lods
mov
(bad)
ror
add
pop
ret
mov
pop
mov
add
mov
pop
inc
in
jnp
pushf
fcom
rol
adc
adc
jnp
adc
pop
adc
xor
scas
fldenv
mov
push
fsub
or
ja
cmps
inc
xchg
push
adc
and
or
ins
xor
(bad)
sbb
(bad)
mov
mov
dec
pop
int3
or
mov
push
pop
push
xchg
push
pop
mov
or
(bad)
cld
dec
add
mov
mov
add
add
sub
push
enter
adc
or
sub
push
xchg
add
and
sub
popa
inc
ins
retf
fist
movzx
add
add
mov
rcl
inc
jno
pusha
pop
sub
cmp
fwait
js
sbb
aad
or
push
add
popf
lods
jbe
outs
and
enter
sbb
adc
jne
adc
sub
adc
or
popa
mov
dec
inc
push
jne
inc
ss
enter
mov
ins
mov
adc
mov
out
or
ss
pop
push
push
inc
mov
(bad)
dec
lods
lea
cwde
pop
je
call
push
jne
push
popw
sbb
or
sti
adc
xor
jg
or
call
movsx
push
fmul
call
pop
jo
ret
addr16
fnstcw
mov
pop
or
inc
cmp
jae
pop
dec
xchg
sbb
sbb
inc
adc
and
fild
add
enter
aam
cmp
enter
cmp
xor
rol
cmp
outs
add
xchg
jo
mov
je
dec
test
mov
inc
dec
cwde
sbb
movs
jl
xor
inc
fcomp
or
pop
inc
in
leave
bound
in
or
fld
aam
leave
sbb
cld
sbb
and
ins
fild
fisttp
fstp
fld
add
js
xchg
pop
fdiv
xor
cmc
mov
adc
xchg
pop
adc
or
pop
inc
nop
xchg
inc
push
sbb
in
push
and
push
or
or
clc
and
xor
sub
fist
js
and
jno
xor
mov
ins
fst
mov
ss
std
or
push
or
int3
sbb
add
fmul
ror
jp
es
mov
ds
int3
xchg
rcr
ins
adc
out
mov
in
push
jmp
jl
ins
mov
fsubr
(bad)
fwait
xchg
lods
xor
(bad)
fstp
fwait
add
mov
add
push
inc
cmp
mov
gs
fdiv
push
adc
xchg
xor
mov
out
mov
mov
scas
stc
fimul
shr
popf
or
fldcw
fstp
mov
pushf
sub
sub
push
jne
cmp
mov
lods
sbb
push
sbb
mov
mov
sub
push
adc
push
mov
shl
int
outs
retf
ins
mov
fnsavew
cmc
mov
inc
in
mov
xchg
data16
cmp
sub
xor
pop
dec
dec
inc
dec
or
call
push
push
push
xchg
je
mov
dec
pop
and
fdiv
xchg
ror
enter
add
inc
cmps
sbb
leave
sbb
xchg
sbb
dec
sub
loopne
and
add
inc
mov
inc
fxch
add
fcom
push
mov
xor
lea
mov
dec
and
fld
mov
stc
add
jge
in
fmul
test
or
popa
repz
fst
jmp
push
add
adc
(bad)
jp
sbb
adc
and
dec
or
in
inc
and
or
sub
ins
sub
adc
sub
call
ret
cmp
cmp
mov
aaa
add
jo
add
jo
mov
sbb
pop
inc
inc
inc
inc
mov
xor
cdq
push
lock
jmp
arpl
pop
stos
inc
pop
pop
add
nop
mov
inc
dec
(bad)
push
mov
std
stc
loope
xor
leave
inc
mov
sbb
in
push
add
dec
jmp
push
xor
mov
mov
imul
sar
push
enter
jae
outs
jo
imul
and
sub
ins
or
(bad)
loope
test
cmp
and
push
push
sub
addr16
fwait
push
push
pop
sub
push
or
and
enter
and
not
mov
shl
add
sub
add
rol
leave
mov
nop
sbb
int3
mov
jo
pusha
push
add
lahf
mov
mov
xor
test
dec
cs
mov
test
push
fs
loopne
shr
lds
fnstsw
lea
dec
imul
ss
jno
shr
es
mov
call
ret
xor
fcomp
fsub
pushf
es
rcl
mov
fwait
push
call
and
js
push
cmp
cmp
adc
and
or
and
xchg
pushf
popf
mov
mov
jmp
retf
and
inc
or
or
push
enter
jne
pop
xlat
xchg
lea
outs
push
add
nop
inc
push
cmps
nop
inc
outs
xchg
cmp
inc
in
mov
pop
push
mov
pusha
pusha
mov
out
adc
fs
stos
lea
push
in
inc
push
loopne
mov
sbb
pusha
or
inc
mov
push
sub
cwde
nop
or
in
mov
gs
cmp
xchg
pop
inc
je
test
mov
daa
xchg
jo
sbb
sbb
enter
xchg
inc
jo
inc
popa
add
test
inc
inc
and
loopne
nop
sbb
jne
add
mov
sub
ret
xchg
inc
sbb
jo
and
or
jo
dec
cmp
add
push
sbb
mov
retf
mov
sar
dec
daa
popf
jns
push
in
stc
popf
dec
popf
cmp
mov
je
fs
jp
popa
jmp
out
or
test
add
popa
push
xchg
adc
enter
mov
mov
test
jne
push
les
or
xor
fwait
les
push
out
iret
cmp
push
inc
ss
dec
or
jno
xor
dec
mov
inc
cmp
pop
push
mov
inc
or
sbb
cs
xchg
mov
mov
fs
popf
sub
into
cs
stos
adc
push
dec
(bad)
sub
or
inc
add
cmp
or
adc
(bad)
sbb
in
add
inc
cdq
pop
mov
sub
dec
adc
adc
mov
adc
loope
xchg
and
mov
add
or
or
xchg
xor
cmp
popf
test
or
push
ret
cmp
inc
sahf
or
push
ret
mov
test
loope
sbb
loopne
dec
or
adc
sbb
repnz
ret
int3
sub
push
lock
inc
mov
imul
xchg
(bad)
or
nop
fiadd
add
xor
jmp
cmp
and
(bad)
imul
cmp
sub
push
inc
cmp
and
sub
int3
push
fsubr
enter
mov
sub
add
mov
add
add
inc
ins
add
sub
jg
dec
arpl
popa
fs
data16
popa
outs
or
mov
or
add
mov
add
xor
adc
cmovnp
dec
ficomp
ins
and
ins
imul
and
mov
adc
push
or
into
(bad)
test
cwde
shl
sub
sub
add
jne
jns
adc
xor
inc
jb
push
or
inc
jo
adc
push
adc
bound
xchg
sub
dec
outs
jns
in
xchg
mov
call
xor
inc
adc
imul
retf
and
pop
inc
jno
repz
inc
inc
push
sbb
pushf
ret
pop
mov
ja
cmp
push
push
push
imul
or
sub
inc
push
inc
dec
push
pop
push
dec
inc
push
pushf
out
dec
pop
push
dec
loop
test
jl
jo
mov
add
sub
test
xchg
xor
or
xor
and
inc
pop
mov
pop
inc
push
mov
adc
add
and
and
xor
popa
mov
xor
icebp
push
pop
ret
add
inc
jno
inc
inc
add
push
popa
sbb
xor
in
jbe
jne
jns
enter
arpl
pop
mov
mov
sub
inc
dec
mov
add
mov
inc
add
repnz
arpl
jns
ret
in
mov
push
inc
push
adc
xchg
add
add
dec
(bad)
push
add
stos
dec
inc
lds
sub
push
xor
add
add
sub
sbb
mov
push
adc
sbb
or
push
mov
xor
sbb
int3
scas
dec
scas
mov
pop
push
call
xchg
mov
add
cwde
ins
cmovno
inc
test
or
sbb
pop
rcr
sbb
adc
ins
int3
mov
and
leave
or
pop
fadd
mov
imul
dec
add
add
fstp
push
fadd
or
push
or
adc
mov
adc
inc
xchg
add
or
xchg
add
jl
popa
cmp
add
or
and
push
mov
adc
sbb
add
add
sub
repz
fsubr
cwde
add
cs
js
mov
pop
add
cwde
retf
fcom
cs
or
sti
add
fild
pop
add
shr
jae
arpl
nop
daa
nop
add
aas
fistp
add
push
push
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
